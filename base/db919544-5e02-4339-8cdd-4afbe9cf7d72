{
    "title": "A Billionaire's Life Ch. 07",
    "pages": [
        "-- CHAPTER 7: The Pregnancy --\n\n***\n\n*DECEMBER*\n\nI awoke in the morning to feel a soft naked back against my chest. I tilted my face down to press my nose against her bare skin and I inhaled deeply, relishing the scent of her.\n\nMy hand slid down her side and up over her hips. I paused there and rubbed her ass with my hand. She made no real movements while I caressed the cheek, which made me think she was still asleep. Then I slowly moved my hand lower, stroking her thighs gently.\n\nThe gorgeous supermodel was on her left side, her left leg pointing straight down the length of the bed with her right pulled forward and then bent at the knee. She was in the perfect position for my fingers to trail lower into the cleft between her legs, and when my fingertip began to slowly rub up and down the seam of her pussy lips, she began to stir.\n\nI kept my touch soft, and every time she moved or moaned I went softer still. And gradually, like a flower in bloom, her labia opened up. I began to feel the first trickle of moisture, and then I pushed my finger in with added pressure and managed to coat the tip in her nectar.\n\nNow at least a little lubricated, I let my finger glide higher along until I found that her little ball of pleasure had just begun to peek out from under its hood. And ever so gently, I touched my moistened finger to it.\n\nShe began to moan, a softly erotic sound and her hips shuffled slightly in her sleep. I stopped moving for a moment, and then when she settled down, I returned my finger to her moistened folds to recoat with fresh nectar. Once sufficiently lubed up, I returned to rubbing her clit.\n\nI kept this up for a good ten minutes. She nearly woke twice, but by the end of that time her pussy was a furnace, her labia were widely parted and showing plenty of pink, and her whole body trembled. It was time.\n\nI shifted my hips until I was right behind her ass and just a little further down the bed. And then, with cock in hand, I guided it into position and began to lean my hips into her.\n\nI heard the catch in her breathing as she came awake. By then, I already had the mushroom head inside her snatch, and it was just a matter of pressure as I slid the full rod deep into her body.\n\nShe moaned and rocked her hips while I reached around with wet fingertips and began to rub at her clit once again. And then I pulled my cock back out a few inches before once again burying it in to the hilt.\n\nThe beautiful, naked woman in my arms began to buck herself back at me while I picked up speed. My left hand went up to grasp her shoulder so I could use it as leverage to thrust myself into her pussy from behind. Her own hand moved down to take over rubbing herself, freeing me to shift my right hand to her hips.\n\nOnly I didn't move it to her hips. I moved my hand around to Taylor's stomach, resting my palm just below her belly button as I imagined the life growing inside of her. Her head bowed forward as she kept up the rhythm, and together my wife and I made morning love until we both softly moaned our releases, Taylor's whole body shivering with pleasure while I spunked out my load against her inner walls.\n\nWhen we were done, Taylor turned to me and brushed her dark bangs out of her eyes. Her eyes were a brighter blue than I'd seen them in a long time, and she kissed me wetly and hotly, moaning with passion and love for her husband.\n\n\"I love you, Johnny.\"\n\n\"I love you, Taylor.\"\n\nShe smiled at me and sighed. We both let our heads sink into the pillows to relax our necks after the tension of our lovemaking. But just while I was sighing in absolute contentment, Taylor's eyes bugged out and she clapped a hand over her mouth.\n\nQuickly, my wife rolled out of bed, oblivious to the creamy white jism now leaking onto her thighs. She scrambled for the bathroom and a moment later I heard retching sounds echo through the cavernous room back towards me.\n\nI sighed again, this time in resignation. Then I quickly scooted off the bed and went to stroke my wife's back while she vomited up last night's dinner into the toilet.\n\n***\n\nTaylor was still looking a little green when I brought her down for breakfast. I'd offered to have her breakfast delivered upstairs, but she wanted to eat with everyone.\n\nI held her hand the whole way down the stairs, and for the first time in memory, I actually had something to complain to Jeff Lee about. Why had my design architect not told me that lack of stairs might be more important to my wife during pregnancy than a second-floor view? At least we had an elevator. Maybe I could put in an escalator? It'd be tacky, but effective.\n\nWe were the last ones to arrive and breakfast was already laid out on the table. I had my arms wrapped around Taylor the whole way in. When we entered into the dining room, the first thing I heard was, \"Aww... you guys look so cute!\"\n\nI glanced up to see it was Ashlyn, staring at us with a glow on her face. And when our eyes met, I froze. A flashback of last night came straight into my memory. The look of her face in the middle of orgasm had been so erotic. The sound of her moans had set my heart racing. And the passion of our lovemaking had simply been extraordinary.\n\nLast night had been the most amazing sex of my life.\n\nAnd from the look on Ashlyn's face as she stared at me, it had been pretty incredible for her, too.\n\nTaylor caught us gazing rapturously back and forth at each other and she squeezed my hand. \"Looks like you two had a pretty good time last night,\" she quipped before sitting down.\n\nAshlyn blushed, but I think I blushed even deeper. At least my tan complexion hid it better than Ashlyn's ivory whiteness.\n\nKate chimed in, \"Believe me, they had a good time. Everyone in the HOUSE could hear that they had a good time. I got myself off twice just listening to them.\"\n\nNow Ashlyn was beet red, and I'm sure I wasn't much better. But Taylor pushed past the teasing and put her hand on top of Ashlyn's beside her. \"How are you feeling, Ash?\"\n\n\"Better. Happier.\"\n\n\"No more dark thoughts. No more morose depression?\"\n\nAshlyn flicked her gorgeous blue eyes to me. \"No. I feel great.\" And then Ashlyn flashed me a smile so big I was blinded by the light.\n\nKate chuckled. \"One night of sex with John and all her troubles are cured,\" she said theatrically while shaking her head in mild disbelief.\n\n\"It's not like all my problems went AWAY,\" Ashlyn shrugged. \"But I guess I'd just slipped into a rut of depression. I saw love around me and was convinced I couldn't have it anymore. The one guy I dared to fall for beat the crap out of me. And when someone like me goes three weeks without feeling any happiness, you can bet a night with John does wonders for improving one's mood.\"\n\n\"Some of us are just sexual creatures,\" Taylor mused. \"Sometimes when you're down, there's nothing like an amazing orgasm to lift your spirits.\"\n\n\"Or seven...\" Ashlyn said under her breath.\n\n\"Seven? Someone had a REALLY good night,\" Taylor teased and then she squeezed my hand.\n\nAshlyn squeezed Taylor's hand. \"Thank you, Taylor. Thank you so much for last night.\"\n\nMy wife rubbed Ashlyn's hand. \"Don't thank me. I think Johnny did all the work.\"\n\nThe two gorgeous supermodels turned to look at me. I just blushed and looked down.\n\nAshlyn continued, \"Still, I know the idea of me and Johnny makes you uncomfortable. It really means a lot that you would share him.\"\n\nTaylor leaned back and waved her hand kind of kookily. \"Well, what are friends for if they can't loan out their husbands to fuck your brains out when you get depressed?\" The two ladies immediately began laughing at the absurdity of the situation.\n\n\"Am I just a piece of meat over here?\" I grumbled.\n\n\"Yes, dear,\" Taylor turned and patted me on the shoulder. \"Now eat your breakfast.\"\n\nThat caused the girls to start giggling again and this time, even Cassandra and Charlotte joined in.\n\nBut when they stopped, Ashlyn got serious. \"You're really okay with it?\"\n\nTaylor sighed and hugged her friend. \"Yeah. I'm... I'm not jealous...\"\n\nTaylor got a surprised expression on her face. \"I'm actually not jealous,\" she said with wonder. My wife then turned and looked at me. \"I know my man still loves me with all his heart.\" \n\n\"I do,\" I said earnestly, willing all my love to come through my expression.\n\nTaylor smiled and then looked back to Ashlyn. \"Just be careful not to fall in love with HIM.\"\n\n\"I don't know,\" Ashlyn said wistfully as she looked at me. \"It may already be too late.\"\n\nThe room went awkwardly silent for a moment as something non-verbal passed between Taylor and Ashlyn. Ashlyn's gorgeous blue eyes were sparkling as she stared at me with undisguised adoration. But then Kate asked someone to pass the eggs and we all launched into our usual conversation.\n\nBreakfast was lively and chatter-filled. It was literally a night and day transformation for Ashlyn, who had gone from depressed and disheveled to cheery and radiantly beautiful overnight. She looked so lovely this morning that I found my gaze drifting to her repeatedly throughout the meal before I would catch myself and focus on something else. I was still reeling from the emotional high of being with her last night, and I knew I was dangerously close to falling a bit in love with the gorgeous woman. If I hadn't gotten up and gone to sleep with my wife, I don't know how much more attached to Ashlyn I'd be feeling right now.\n\nAshlyn caught me staring at her twice. Both times, she blushed and pointedly looked somewhere else. I caught her staring at me once also, and her sudden averted gaze made my heart jump a few extra beats.\n\nIt actually took Cassandra reaching over and putting her hand on my arm to get me to stop. My beautiful assistant stared me down, her blue eyes turning a sharp grey. I may not have been experienced with female non-verbal communication, but I got the hint to cool it.\n\nI did my best to stare at my food then. It was all just so overwhelming. I was in love with my wife Taylor and felt a surge of satisfaction knowing she was pregnant with my child. I felt a comfortable, secure love with Cassandra. I had a concerned, protective love for Kate. And I now felt a passionate, energizing love for Ashlyn.\n\nCould one man really love four women at the same time?\n\nMeanwhile, Ashlyn talked about calling the agency to resume taking modeling gigs, and she, Taylor, and Kate gossiped together like her depression had ever happened.\n\n\"Hey, isn't Taylor's birthday coming up soon?\" Ashlyn glanced at Kate and then at Charlotte, who would certainly know.\n\nCharlotte spoke up, \"Late next month.\"\n\nTaylor piped up, \"Ah, it'll be exciting to turn 29 again.\"\n\nEveryone around the table got a chuckle at that. And then Taylor spoke up again. \"Hey, Ash, Kate. Why don't you guys work with Charlotte to plan my party? Friends always know what to do.\"\n\nAnd then Taylor reached over, touched my arm, and batted her eyelashes at me rapidly. \"Money's no object, right honey?\"\n\nI cocked my head and grinned. \"Are you going to have another big orgy where I get to bang half a dozen beautiful women like last year?\" I was thinking back to our inauguration of the Playroom.\n\n\"Yes...\" Taylor giggled.\n\n\"Then money's no object.\" Everyone laughed and we went along to finish up our breakfast.\n\nWhen it was done and we all got up to stand, Ashlyn came around and stood right in front of me. I looked at her flowing copper hair and her bright blue eyes. Involuntarily, my gaze traveled down her luscious body and my memory began to fill in how she looked naked. It was so easy for Ashlyn's beauty to distract me, and a part of me cursed how she could have such an incredible effect on me. But then I caught myself and looked back up into her eyes.\n\nAshlyn seemingly just waited patiently while I fought to collect myself in front of her. And when our eyes met again she asked, \"You guys are going into town today?\"\n\n\"Yeah.\" I glanced at Cassandra, who was behind me and to the right, as if this were a business meeting and she was standing by in case I needed assistance. \"It's been a busy month. Decembers usually are right before the holidays.\"\n\nAshlyn nodded in understanding and when she looked up at me again, she actually looked nervous. But instead of detracting from her beauty, the nervousness made the young woman even more endearing to me, and I took a deep breath as I felt my heart tugging to fall more in love with her. \"I, uh,\" she began before pausing. \"When you get home, can you come to my room? We should probably talk about last night.\"\n\nI glanced at Cassandra again, as if she would be my conscience. I didn't trust my own feelings with Ashlyn, but Cassandra didn't visibly react. So I turned back to the redhead and said as calmly as possible, \"Sure.\" My delivery wasn't that calm. I think I actually squeaked it.\n\nIt turned out, Taylor was also right beside us. \"In the meantime,\" Taylor began as she slipped her arm through Ashlyn's. \"WE should talk about last night.\" My wife had a warm smile on her face and Ashlyn nodded. The two of them turned and walked out of the room.\n\nI exhaled loudly, not realizing I'd been holding my breath. Cassandra smirked at my obvious discomfort, but I steeled my spine and held my head high. \"Let's go.\"\n\n***\n\nIt was late when we finally flew home. We'd missed dinner and Cassandra had ordered in at the office. By the time we landed, every muscle was sore and my body ached from the tension of work.\n\nBut the moment the door popped open, I felt a fresh energy rushing through me. My heartbeat sped up and adrenaline coursed through me as I felt pure excitement.\n\nI was going to see Ashlyn again.\n\nThat thought almost stopped me. I wasn't just excited to see my wife and rub her belly. I wasn't just excited to be returning home. I was excited to see a woman I wasn't dating and had no official relationship with. I couldn't help it.\n\nStill, I first went in search of my wife. Taylor was in the Master Lounge with Charlotte. They were poring over pregnancy books and week-by-week guides to her symptoms and other such advice. I grinned at the thought of having my very own rugrat playing in this very room, and when my wife looked up at me, she absolutely glowed. \"Hi, Johnny. Long day?\"\n\n\"Yeah.\" I crossed the room and tenderly kissed her. My hand slid down and patted her belly. I couldn't wait to see a real bump forming, but Taylor had said I would have to wait until her 2-month mark before it became really noticeable. Right now it just looked like she'd gained a couple of pounds, a relatively normal fluctuation for her.\n\n\"I talked to Ashlyn today, about you two.\"\n\n\"And?\" My curiosity piqued.\n\nTaylor grinned. \"Well, I think it's obvious. She went from near-suicidal to happy- go-lucky after one session with you. My man is a fucking STUD in the sack.\"\n\nI chuckled. And I mustered up all the seriousness I could. \"This stud is YOURS whenever you want, all for you, okay?\" Taylor's objections to the contrary, I knew there had to be SOME jealousy in there somewhere and I was compelled to make an extra effort to show that I loved her. I gestured to my crotch. \"This woman-pleaser belongs to you, my woman.\"\n\n\"I know, I know. I'm good for today.\" Taylor grinned at Charlotte, who looked down and blushed. And now that I looked at her, Charlotte's hair was matted down where it looked like straps had been wrapped around her head. I gathered my wife and her assistant had been visiting the dungeon while I was out.\n\nWith concern on my face, I cautioned, \"Just be careful about exercise, honey. Aren't there rules about how fast you can get your heart rate?\"\n\nTaylor held up a book. \"I know.\"\n\nShe changed the subject. \"Anyways, I worked things out with Ashlyn today. We're going to treat her as a houseguest, like Rebecca or Mia. She's got plenty of money and she'll be paying rent. She's not a girlfriend or mistress or anything, so there are no obligations there. And she says she has no designs on being a girlfriend or taking any part of you away from me. So if... encounters... happen between you two, that's okay.\"\n\n\"You sure?\"\n\n\"Of course,\" Taylor shrugged as if this were the most ordinary thing in the world. But then she got a hard look in her eye. \"Why? You think I shouldn't be?\"\n\n\"What? No! No!\" I sat back defensively and held up my hands.\n\nTaylor started chuckling. \"Just teasing you. I'm assuming Cassandra won't have any issues. But if you really consider Kate a girlfriend, you probably want to run this by her as well. Technically, since Kate didn't know about last night, you cheated on her.\"\n\nMy jaw dropped.\n\nTaylor shrugged, \"Yeah, I didn't think about that either until this morning. I don't think she'll have a problem since she worships the ground you walk on, but talk to her, okay?\"\n\nI nodded.\n\nTaylor waved at me. \"Go talk to your girls now. I'd start with Kate first.\"\n\nI stood up.\n\n\"And Johnny?\" Taylor stopped me.\n\n\"Yeah?\"\n\nShe tilted her head and looked at me with big eyes. \"I'm not jealous of you having sex with them. But at night, no matter how late it is, will you come to bed with me?\"\n\n\"Of course.\"\n\n\"I love you, Johnny.\"\n\n\"I love you too.\"\n\n***\n\nWhen I got down to the guest rooms, most of my body wanted me to immediately go into Ashlyn's room without knocking, throw her onto the bed, and go straight to fucking her brains out.\n\nBut the mature part of me remembered my wife's advice as well as how much I really did care about Kate's feelings, so I turned to the opposite door and knocked at Kate's room. It was late, and it was around the time the girls usually were going to bed.\n\nKate answered the door in her pajamas and gasped, \"John!\" Eagerly, she stepped forward and hugged me. \n\nI wrapped up her skinny body, lifting her off the floor while she kicked her feet in the air. I brought her head to just an inch above mine and kissed her firmly. \"Hello, girlfriend.\"\n\n\"Hi...\" Kate smiled and floated happily. Without the heavy dark makeup, she looked so much younger and fresher. The makeup made her alluring and sexy, but without it I could see her as a cute and bubbly girl.\n\nI set her down and then walked us both into her room, closing the door behind us.\n\n\"Oh!\" she suddenly sat up and immediately began to tug at the sleeve of her pajamas. \"Did you want to...?\"\n\nShe was asking if I'd just come to screw her and I quickly shook my head. \"No, no. I mean, yes, of course I'd love to, but that's not why I'm here and you don't need to just... put out... every time I show up.\"\n\nShe nodded in understanding and then pulled her knees up to her chin, wrapping her arms around her legs while I sat down in front of her on the bed. \"So what's up?\"\n\nI took a deep breath. \"About Ashlyn, I'm sorry I didn't talk to you first.\"\n\nShe picked her head up and shot me a confused look. \"About what?\"\n\n\"Well, permission, I guess.\"\n\nKate barked a short laugh. \"You don't need my permission to fuck her, John.\"\n\n\"Well, boyfriends are supposed to clear it with their girlfriends. Since I didn't do that, technically I cheated on you.\"\n\nShe shrugged. \"I wouldn't know. I've never been a real girlfriend before. All my other boyfriends just banged whoever they wanted and they never asked me for *permission*.\"\n\nI sighed. \"But I was supposed to be different. I'm trying to show you that I do care about your feelings. And I'm sorry for not talking to you first.\"\n\nKate looked at me like I'd just grown a horn out of my forehead. \"Uh, if it'll make you feel any better, apology accepted. But seriously, Ashlyn already told me everything. Taylor walked you straight to her door and shoved you inside. It's not like you had time to think, 'Oh, maybe I should go ask my girlfriend before fucking this INSANELY gorgeous woman.'\"\n\n\"Well...\"\n\n\"It's okay. I'm used to it.\"\n\nI sighed. \"I don't want you to be USED to it, Kate. You're not my mistress. You're not just a convenient toy for me to play with whenever I want and ignore the rest of the time. I want you to be a girlfriend with hopes and desires of your own. You need to know what you want and be willing to take action to get it.\"",
        "She shrugged. \"But you know what's best for me anyways. Can't I just trust that about you?\"\n\n\"Relationships go both ways, Kate. If you just lay back and let your next boyfriend do whatever he wants, you'll end up right back where you started.\"\n\n\"Doesn't matter. I won't have a next boyfriend. I just want to be with you forever.\"\n\n\"Kate...\"\n\n\"I'm in love with you, John. How could I possibly think about having another boyfriend?\" She said breathlessly and leaned forward.\n\n\"But why? What's so special about me?\"\n\n\"You care, John. You're a good man with a good heart. That's a rare thing in this town. You got handed this big silver platter and you've more money than God. But instead of turning into a self-absorbed hedonist, you stayed a good guy. You work pretty hard, and for what? More money? You could be lying at home all day just fucking everything that moves.\"\n\n\"I do that quite a bit.\"\n\nShe sighed. \"If you wanted, every day could be like that party at Giorgio's. You could line up a hundred gorgeous women and just use them whenever it pleased you. You could be hopped up on every illegal drug you wanted. You could have turned into a sick eccentric and started getting off on really messed up things. I've seen how weird rich people can be. Yeah, you spend a lot of money and you've got some pretty luxurious things, but you're as down to earth as rich people get. Hell, you took me rollerblading in Central Park, John.\"\n\nKate took my hands in her own. \"Stavros once traded me for twenty bucks. He was playing poker with some friends and he was $20 short of putting this other guy all in. So he literally bet me as collateral for the other $20. Thank God he won, but still. On that night, Stavros told me how much I was worth to him.\"\n\nI looked at the pretty girl in mixed anger and disbelief. \"Damn...\"\n\n\"You'd never do that. I KNOW it.\" Kate squeezed my hands. \"You want to know why I want to be with you? Because getting one-hundredth of you is better than getting all of every man I've ever been with. I idolize Taylor. She's a wild one but she always kept coming back to you for what, seven years? I trust her taste in men.\"\n\nI felt my ego puffing but I also felt guilty about it. And Kate just kept going. \"Cassandra's the smartest girl on the planet, and she's devoted to you. Charlotte is sweet and so completely defenseless. You could really hurt her if you weren't careful, but you guys have been great with her. Rebecca and Mia were cool friends, and I'm sad that they left to build their own lives. But if you just crooked your finger to either of them, they'd come back, marry you, and devote their lives to you in a heartbeat. It's not just the money. We can just tell how great a guy you are inside.\"\n\n\"You're putting me on this big pedestal, Kate,\" I said with trepidation.\n\n\"It's where you belong.\"\n\nI shook my head. I was a flawed, flawed man and I knew it. But how could I convince Kate of it? Did I even want to convince her of it? I leaned back and tried to figure out how my life got so complicated. It was absolutely wonderful and pleasurable to have so many women around me. But it was DAMN complicated.\n\nKate rubbed my hands with her thumbs. \"You looked stressed. Do you want me to get you off?\"\n\nI sighed. Kate was really locked into \"mistress\" mode. I had a lot more work to do with her. \"No. Actually, I still need to talk to Ashlyn tonight.\" \n\n\"Oh, that's right,\" the blonde nodded.\n\nI moved to get off the bed. If I stayed any longer, I figured Kate would find a way to puff up my ego even more. I started for the door but Kate's voice stopped me. \"John?\"\n\n\"Yeah?\" I turned.\n\nKate flashed me a radiant smile. \"I was beginning to worry Ashlyn would actually kill herself. But one night with you and she's back to normal. You really are something special.\" The young blonde looked at me with what looked like hero worship in her eyes. \"Thank you for taking care of my friend.\"\n\nI chuckled. \"Taylor told me the same thing about you.\"\n\nKate beamed. \"You do take care of me. And I'll always love you for it.\"\n\n***\n\nAshlyn came quickly to the door when I knocked. \"You're home!\" she gushed and eagerly stepped forward to hug me. I was a bit surprised, given that our relationship had never been affectionate before.\n\nThen again, our relationship had never been ANYTHING before. And as the gorgeous copper-haired model clutched herself to my chest and put her head on my shoulder, I found myself wrapping her up tightly in my arms and squeezing her gently. She felt so good, I ended up lifting her off the floor and spinning us before I realized what I was doing and hastily set her down.\n\nWe both realized we'd gotten caught up in the moment and we each stepped away from each other. I figured that any deeper attachment to me was rebound behavior and I knew that if I wasn't careful, my long-buried crush on her would affect my decision-making as well. I had to stay in control and not make any promises I couldn't keep.\n\n\"So, how are you feeling?\" I asked.\n\n\"Wonderful,\" she smiled. \"Actually, I was just okay, but for some reason I'm feeling incredible now that you're here.\" Ashlyn looked incredible as well. She was wearing a baggy button-down pajama top, and I wasn't sure if she was wearing anything else. Her legs were bare and as she shifted towards the bed, I found my gaze lingering to see if she was wearing any panties.\n\nI blushed and then immediately took a deep breath and tried to assert myself. 'Get a hold of yourself, man. Quit acting like a lovestruck teenager!' I'd had 'The Talk' with both Rebecca and Mia before, but then I'd never felt quite THIS attracted to either of them.\n\nI took two steps forward around the bed and gestured for Ashlyn to get comfortable, since I didn't trust myself to sit with her on the bed. To the side, there was a wide, padded chair with no arms that looked like it might seat two people if they squished, so I pulled it over beside the bed and sat directly in the middle of it. \n\n\"Last night was very special, Ashlyn,\" I began. \"But crossing the line between friendship and intimacy is a delicate thing.\"\n\nAshlyn sighed. \"You make it sound so cold and clinical. We made love last night, Johnny. We fucked each other's brains out. And it was the most amazing sexual experience of my life!\"\n\nI smiled at the memory, and I wanted to say 'me, too.' But that would start me down a path I didn't want to follow. \"It was incredible,\" I agreed. \"But I just want to make sure we're on the same page of where we stand.\"\n\n\"I told Taylor, I'm not looking to steal you from her or become your girlfriend or anything. Not even like Kate. By the way, it's really sweet what you're doing for her.\"\n\n\"Thank you. I just want to see her happy.\"\n\nAshlyn shook her head and sighed. \"Don't say that around me. You might actually make me fall in love with you.\"\n\nWould that be so bad? But a second after I thought it, I shook the idea away. I had MORE than enough on my plate. \"I'm not sure I'm your type anyways, Ashlyn.\"\n\n\"What? Rich, handsome, great in bed? You're exactly my type.\"\n\n\"Well...\"\n\n\"No, no. Don't worry. I know I'm still emotionally shaken after Marty and my head is spinning so much I'm certain I'm in rebound mode.\" She looked up at me. \"That means I want to marry you right now, but I'm a smart enough girl to know that's not my brain talking.\"\n\n\"At least you have an excuse,\" I muttered.\n\n\"Huh?\"\n\n\"Oh, nothing. Sorry.\" I tried to find a way to physically push aside my attraction.\n\n\"What? You want to marry me too?\" Ashlyn teased with her tongue across her lower lip.\n\n\"I'm already married.\"\n\n\"Rich men change wives all the time.\" And at the same time, she pulled her knees up to her chin and spread her feet just wide enough for me to see that indeed, she was without her panties.\n\n\"Ash...\" I said warningly while still staring at her naked vaginal lips.\n\n\"Fine, fine. Can't take a joke.\" She closed her legs.\n\n\"You're not joking.\"\n\nShe sighed. \"Like I said, that's not my brains talking. Right now, it's my pussy talking. If I could get fucked like that every night...\" Ashlyn started vibrating. \"Oh, I feel like I could cum just thinking about last night.\"\n\nI chose not to respond to that.\n\n\"Anyways, there's no way I could do that to Taylor.\"\n\n\"Don't sweat it. I would never leave her.\"\n\n\"Well... I haven't tried to steal you yet, have you?\" she said saucily and leered at me while doing it.\n\n\"Ash...\" I warned again.\n\n\"FINE.\" She glared. \"You know it's not MY fault you've got such a crush on me.\"\n\nI sighed and got up from my chair.\n\n\"No, wait. I'm sorry, I'm sorry. I tease a lot. It's the way I am. But seriously, Taylor is my friend. If she wasn't such a good friend, I would have done a lot more to seduce you long before. And that includes now. I'm not going to do anything to mess up your marriage, okay?\"\n\n\"Okay.\" I hadn't sat down and I started putting the chair back into its spot.\n\n\"But...\" Ashlyn began with a hint of seduction in her voice. I turned to face her. And she then unbuttoned her pajama top and pulled it apart to show off her ripe, creamy breasts, so full and round and capped with pretty pink nipples. The tails of the shirt she also threw outside her legs, and I could see her wet pussy spread wide and inviting. \"But... we can still do it again, right?\"\n\nI took one step forward before stopping myself. My jaw went up and down a few times and I nearly started drooling as I openly ogled her tits. But then I managed to force my gaze up to Ashlyn's sparkling blue eyes. \"Yes, if things, uh, come up. But not tonight.\"\n\n\"Why not?\"\n\n\"I...\" I stared at her naked body while my heart threatened to explode out of my chest. I wanted her. I wanted her so badly. Last night I had been willing to throw away my marriage to be with Ashlyn, she simply had that much of an effect on me. And if I couldn't say 'no' just this once, I might never be able to say 'no' to Ashlyn ever again.\n\nSo I made up an excuse. \"I can't. I promised Taylor I'd be with her tonight.\"\n\n\"Come on, Taylor wouldn't really mind you fucking my brains out two nights in a row, would she?\" She moved on hand to cup a breast and hold it up towards me in offering while she began to rub her fingers in her own pussy.\n\nMy head moved forward six inches, enough to push me off-balance and take an additional step forward. But then I clamped my jaw shut and squeezed my eyes shut. \"Good night, Ashlyn. I'm going to go upstairs to my wife now.\"\n\nAshlyn grinned and then closed up her top, removing heaven from view. \"Good night, Johnny. Give her a good pounding for me. I'll be masturbating to thoughts of you.\"\n\n***\n\n\"Ungh!!!\" I grunted while trying to cram an extra half-inch of my dick into Taylor's pussy. And then I was involuntarily holding my breath as I felt each pulse of semen fly out of me and embed itself into her vaginal walls.\n\n\"Ohhh....\" Taylor sighed as she came down from her orgasm, her fingernails digging into my biceps where she held me atop her.\n\nAnd then we were both panting as we fought to catch our breath. Taylor turned on her side and I automatically moved myself behind her to spoon. My chest was still heaving and it took me a while to calm down.\n\nTaylor gasped desperately for oxygen. \"Weren't you saying something about not getting my heart rate too high?\"\n\n\"Didn't YOU say the O.B. said sex was healthy?\" I whined.\n\nTaylor just chuckled. \"Well, if visiting with Ashlyn gets you THAT wound up, I should probably send you down to get teased by her *every* night.\"\n\nI just started growling and reached my hand down to start pawing at my wife's crotch and rubbing my half-hard dick against her ass.\n\n\"Again?\" Taylor exclaimed in disbelief as I started grinding against her.\n\n\"Cassandra!\" my wife yelled. \"CASSANDRA! HELP! It won't go DOWN!\"\n\n***\n\nOn Monday, Rebecca came by for our regular workout. She was feeling a little antsy and got me worked up with the promise of an extra-special reward. Half an hour later, I nutted up her asshole while the shower sprays surrounded us.\n\nRebecca, Cassandra, and I then met up with Taylor, Kate, and Ashlyn for lunch. Afterwards, I took Kate alone on a date to Coney Island of all places. She gave me a blowjob on the Ferris Wheel and I was pretty sure the fifteen-year-old kid in the next car saw us.\n\nI sincerely hoped he wasn't a paparazzi in disguise.\n\nThat night, in Kate's bedroom where we were securely hidden from any such media risks, I returned the favor to my cute girlfriend many times over.\n\n***\n\nOn Tuesday, we stayed at home for the whole day. Taylor brought Ashlyn into our bed, where the three of us made love for hours on end. After watching the gorgeous redhead slurping my cum out of Taylor's box, I got so aroused I tackled Ashlyn and the three of us fucked like rabbits again, then I lay my cock into the valley of Ashlyn's cleavage and rutted uncontrollably between her tits until I painted her face with my creamy jism. And after my wife cleaned our houseguest's face with her tongue, I took turns fucking each of them before nutting into my wife's mouth and then watched her snowball it all to her supermodel friend.\n\nAfter that, Taylor promptly went to sleep. As her pregnancy continued, she was taking more and more afternoon naps anyways. So Ashlyn and I wrapped ourselves in soft robes and went out to the cuddle chair in the Master Lounge.\n\nWe spent the next hour and a half just talking. Ashlyn told me about losing her virginity at fourteen and getting addicted to cum by sixteen. But she also told me about the worn stuffed puppy she kept in her bedroom and how she cuddled it to sleep almost every night.\n\nThen, at the end of the hour and a half, just before Taylor woke up, Ashlyn got a cum craving again and she blew me for fifteen minutes before she coaxed my load down her throat.\n\n***\n\nOn Wednesday, a bad meeting with Sharpley led Cassandra into locking us into my office downtown. She simply opened her blouse and wrapped her tits around my erection. And after a few minutes in my statuesque assistant's abundant cleavage, I poured my cum into her mouth.\n\nAfterwards, I wasn't so stressed out anymore.\n\nThen when I got home, my girlfriend Kate was swimming laps in the pool and then she dragged me down to the Underground Bar to do give me her own de- stressing therapy.\n\nEven she admitted that the sex was a lot better when she knew she didn't HAVE to do it.\n\n***\n\nThursday found Taylor and I in the dungeon. My wife didn't want to exert herself and so I was her proxy, whip in hand, to punish Charlotte for some minor offense. I swore that Charlotte screwed up on purpose every week or so just to get punished.\n\nIn any case, Charlotte's punishment ended an hour later when I pulled my cock out of the young brunette's lewdly-stretched anus and my cum bubbled out to drip onto the floor, joining the puddle of Charlotte's own fluids which had been dribbling out of her pussy for the last half-hour. And it was only when Taylor pulled the thick glass dildo out of Charlotte's throat that the used and abused submissive was even able to moan.\n\n***\n\nBut even with all the crazy sex I had during the week, Friday blew my mind. And it only took one woman to do it.\n\nIt was the last Friday before Christmas. A lot of companies were shutting down operations or at the very least, their employees were leaving on vacation. Either way, the last couple weeks of the year was NOT a time when the movers and shakers of the business world wanted to be worrying about mergers and acquisitions.\n\nThat just meant everything had to be done by TODAY.\n\nFor the first time in months, I actually stayed at the office for over eight hours. We were so busy, Cassandra didn't even have time for a quickie mid-day.\n\nAnd it didn't help that Ashlyn was calling me constantly. The first call, she just wanted a vague idea when I was coming home. When she found out I wasn't even going to be back in time for dinner, she pouted as if her plans were being ruined.\n\nThe second call, I clarified that I didn't know when I'd get home and we hung up shortly thereafter.\n\nThe third call, I'd started to get annoyed. Ashlyn was the kind of girl used to getting a lot of attention, and she hadn't been getting that much from me. She complained about this fact and I reminded her, \"We're just friends, remember, Ash? If you're lonely, you're free to go out and pick up a boyfriend.\"\n\n\"I don't want a boyfriend. I need YOU to fuck me silly! Tonight! Promise me!\"\n\n\"I can't make promises like that, Ash. I have a wife and a girlfriend. What if one of them wants my attention? It IS a Friday.\"\n\n\"FINE. I'll call you back.\"\n\nHalf an hour later, Taylor called me. \"Oh. My. Gawd. Johnny, tonight can you please just fuck Ashlyn so hard that she won't be able to walk straight in the morning? She's driving me and Kate INSANE.\" And then before I could respond, my wife handed off the phone to the horny redheaded supermodel.\n\n\"See!\" Ashlyn crowed into the phone. \"Now when are you coming home?\"\n\n\"I don't know!\" I said in exasperation. \"We'll get there when we get there.\"\n\n\"But if you come home now, then I'll...\" Ashlyn then proceeded to spin the raunchiest, filthiest fantasy I'd ever heard over a phone line. By the time she was done five minutes later, my cock was so hard that I was certain the seams of my pants were about to bust.\n\nAbruptly, Ashlyn finished and then hung up. At almost the same moment, Cassandra came into my office with the blue light on her earpiece lit up. \"Uh-huh, his cock is trying to break free of his pants... No, Taylor, I wasn't here... Well, I'm not surprised. Ashlyn's got a dirty mind... Yeah, I wish I could have heard it.\"\n\nMy eyes were bugged out as I ogled Cassandra's ample chest and I started gesturing her towards me. Automatically, Cassandra approached as she saw the gleam in my eyes and she quickly sank to her knees before me. But just as she reached for the clasp to my pants, Cassandra jerked her head and said into her earpiece, \"You serious? Okay, okay... This should be interesting... Of course Taylor.\"\n\nAnd with that, the blue light in her earpiece went out and my assistant moved her hands to her own blouse. Unbuttoning it slowly, she reached inside and freed one of her heavy orbs, the nipple quite engorged. And then while she closed her eyes and moaned, Cassandra lifted the breast to her own lips and began to suckle at the teat.\n\nI groaned and then gestured back to my crotch, unable to form words I was so turned on. But then Cassandra simply put her boob away and stood up. Her cleavage was practically spilling out into my office. And then she held up a finger and waggled it at me reproachfully. \"You're not allowed to get off before you get home. Taylor's orders.\"\n\nI sputtered for a few seconds before I managed to wrap my lips around coherent words. \"Taylor? Taylor's orders? I'm the fucking boss! And I fucking order you to fucking open my up my pants and fucking get me off!\"\n\n\"Sorry... *sir*...\" Cassandra actually grinned before spinning on one heel and then buttoned her blouse back up as she went to leave my office.\n\nI steamed and threw a book against the wall.\n\nAn hour later, Cassandra came into my office and then said into her earpiece. \"I'm here.\"\n\nSeconds later, Ashlyn called. \"Are you coming home yet?\"\n\nI rolled my eyes and stared at the work on my monitor. \"No, not yet.\"\n\n\"Well, if you WERE home, right now I'd be...\" My brain partially shut down as Ashlyn launched into her sexual tirade. If I thought Ashlyn was naughty before, she was downright NASTY this time. With a seductive purr in her voice, Ashlyn practically made me cum just by talking to me and in fact, I finally caved and just shoved my own hand into my pants to start beating off to the images Ashlyn was putting into my head.\n\nBut in a flash, Cassandra was beside me and she got a firm grip on my wrist, yanking my hand out. She laughed and then told her earpiece, \"He tried to start jacking off.\"",
        "I groaned in pain and then Ashlyn hung up. I glared at my assistant. \"We're going home. NOW.\"\n\n\"But sir, what about the Kobayashi-\"\n\n\"FUCK the Kobayashi agreement. We're going home.\"\n\n***\n\nMy mind was a wreck by the time I got to Ashlyn's door. I was still reeling from the memory of Ashlyn's dirty words, my own pent-up horniness, and a desperate throbbing in my balls.\n\nI knocked on her door and called \"Ashlyn?\" When she didn't answer immediately I started to worry that she'd changed her mind and didn't want to fuck anymore. A nervous energy came to my limbs while the seconds ticked by and I started to panic. All evening I'd been thinking about seeing Ashlyn again. My mind was filled with visions of our two naked bodies intertwined together while I did my best to completely violate her.\n\nSo I was in this agitated state when Ashlyn's voice floated through the door. \"Come in, Johnny...\"\n\nI walked in and the sight before me took my breath away. \"Holy SHIT,\" I gasped.\n\nFor entire flight home, I'd been fantasizing about how Ashlyn would be when I arrived. I had a memory of her face and I fuzzily tried to recall what she looked like naked. The picture in my head was quite erotic.\n\nBut even my fantasy didn't live up to this reality. Ashlyn was completely naked, her pajamas a puddle beside the bed where she'd apparently just stripped them off after I'd knocked. She lay on her right side in an alluring pose, her right arm stretched towards the headboard while her left scooped beneath her breasts, pressing them together and out towards me in an amazing display of cleavage. Her taut stomach twisted forward making it look like her waist was only a few inches wide. And then her body gently curved back up to the swell of her hips. Her bare pussy was on display as she stretched her legs out, REALLY long legs that I followed all the way down to the flex of her feet as she pointed them for maximum leg tone.\n\nShe was gorgeous.\n\nAnd all of a sudden I was feeling nervous. I'd built this night up into so much, I was afraid I wouldn't live up to my own expectations. My jaw waggled a few times and I stalled for time. \"Uh, maybe we should talk.\"\n\n\"Talk about what, Johnny?\" she asked in a melodious voice while slowly rotating her body into a slightly different pose, pulling her left arm up and behind her head, which thrust her cleavage out at me even more.\n\nI don't know! I was seconds away from creaming my pants just looking at her. Stall! Stall! \"Uh, about what kind of relationship we should be having.\"\n\n\"Do we have to? I thought we handled that last weekend,\" Ashlyn asked prettily as she rubbed her thighs together and then licked her lips. \"Besides, I'm not sure I can think straight right now.\"\n\nI blinked twice as Ashlyn rolled completely onto her back and spread her legs to the sides. Her pink pussy was gushingly wet and she reached a hand down, rubbing herself while she started moaning while staring at me.\n\nOh, forget it. \"You're right,\" I said quickly and started yanking my clothes off. \"I can't think straight either.\"\n\nAshlyn giggled as she watched me strip in record time, and then I was suddenly atop her body, our mouths locked together as we breathed heavily through our noses and frantically grabbed at each other's bodies.\n\nThe next hour felt like a haze of lust. That night, I lost control. So did Ashlyn. And by the time we were done, we had completely trashed her room.\n\nThings started out simply enough. Ashlyn was soaking wet and my cock was hard and throbbing. I was on top of her one moment and then next I was inside her pussy pounding away with every ounce of energy I had.\n\nI came within a minute, blasting my cum deep inside her. I couldn't help it. I'd wanted to pull out, but I simply couldn't resist. And I was so revved up that my dick never really went soft and within another minute I was piledriving my pecker in and out of her once again.\n\nAshlyn clawed at my back, screaming at me to fuck her harder and literally flinging her body off the bed with every thrust. And when I began to tire, she rolled us over, impaled herself upon me, and started riding me with every ounce of energy SHE had.\n\nAnd then she began to tire, so I rolled us over again and pounded away. And when she tried to roll us over another time, we fell off the bed onto the hardwood floor in a pile of blankets and sheets. And in the process, we knocked over the lamp on the bedside table.\n\nStill, breaking bulbs and heavy thuds onto hardwood didn't dissuade our lust for each other. I scooped Ashlyn up in my arms, lifted her and planted her against the wall. I hadn't noticed there was a painting hanging there, and after the first impact it fell off its hook and crashed onto the floor. I kicked my feet out of the way just in time, got a new grip on Ashlyn's hips, and then lifted her again to shove her against the now bare wall. And this time I was able to shove my dick into her pussy and start thrusting wildly inside of her while she wrapped her legs around my hips and shrieked like a banshee.\n\nDespite the frequent interruptions, Ashlyn had come twice already and I was rapidly both tiring and losing orgasmic control. I saw the wide, armless chair in the corner and staggered over to it, still with my cock embedded inside her snatch, and with a groan I sat down heavily.\n\nAshlyn was able to get to her knees and use her legs to fuck herself up and down my pole while shoving her tits into my face. I licked and sucked and bit her while she flailed in my lap with her hands gripping the chair's backrest.\n\nAnd while she howled in her third climax, I grabbed Ashlyn's hips and yanked her down around my dick while I began to spit wad after wad of cum into her depths. My legs were pushing at the floor and I was leaning against the backrest so hard that I actually tilted the chair back a bit, the front legs lifting a couple inches off the ground while I geysered my second load into Ashlyn's sodden pussy. And after she howled and gyrated in my lap through her orgasm, the fucking fantastic redhead collapsed straight against my head, and the extra force toppled the chair backwards so that we hit the ground heavily.\n\nAshlyn was laughing maniacally and I was letting out throaty chuckles at our predicament. I was still technically sitting in the chair, although I was flat on my back with my legs up and hooked over the edge of the seat. Ashlyn had gone sprawling onto the floor next to me but she quickly returned and started kissing me with new passion.\n\nThen, like a dog digging for its bone, Ashlyn knelt on all fours and tugged me back away from the chair and onto the floor. And once she had me free of the chair, she ducked her head down and began to slurp and gnaw at my half-hard cock.\n\nAfter she got me hard enough, Ashlyn decided she wanted to fuck in front of the dresser mirror. So we staggered over there and I bent her over the dresser, shoving my freshly erect dick into her snatch from behind while she swept her arm out to toss the vase of flowers and various knick-knacks onto the floor.\n\nAshlyn started groaning as she watched me start pumping her through the mirror. Her eyes were wide and the sparkling blue shone with its own luminescence, and for a while I watched her tits bouncing in the mirror with my every thrust.\n\nAfter Ashlyn got off one more time, I found that my cock was able to glide in and out of her almost without any friction. Four of her orgasms and two of mine had dumped enough fluids inside her that my dick was swimming in a sea of mingled cum.\n\nWell, that wouldn't do for either of us. So Ashlyn just bent over until her face was against the mirror and her tits were on top of the dresser, and she reached back with both hands to spread her asscheeks wide.\n\nI was right on the same page as her, and I pulled my cock out of her saturated pussy and then pressed it against her anus.\n\nShe moaned deeply and relaxed just long enough for me to shove the head through, and then Ashlyn was pushing herself upright against the mirror while I sank every... single... inch... of my big dick up her asshole.\n\nIf I thought her pussy was wonderful, Ashlyn's ass was heaven on earth. I had enough coated slickness to move with relative ease and yet she was so tight and constricting around my shaft.\n\nAshlyn's ass felt so good as I fucked it that my eyes just rolled up in my head and I started drooling as I pounded away at her like a machine. And all the while, Ashlyn kept screaming.\n\nShe had one hand against the mirror while her other was busy frigging her own clit. And I gripped her hips so hard that I knew I would be leaving bruises behind. But I didn't care. Ashlyn just had the most incredible body, built for fucking and made for me, and I let my mind float away to ecstasy as I fucked her with wild abandon.\n\nAshlyn cried out her orgasm again and I kept reaming her out all the way through it. I ended up piledriving her ass so hard that the mirror started to crack beneath her hand. And when my orgasm came, I slammed Ashlyn's body so hard that her hips banged straight into the dresser and I absolutely exploded up her asshole.\n\nShe screamed in mixed pain and pleasure, and I howled my release to the world as my entire body quaked, my hips bucking forward to compress her asscheeks repeatedly as I spat wad after wad of cum into Ashlyn's bowels.\n\nAnd when I was done filling her rectum with my load, I staggered straight back and then fell flat on my butt to the floor.\n\nAshlyn had been leaning back against me trying to push her thighs away from the hard edge of the dresser. And when suddenly freed from my weight against her back, Ashlyn lost her balance and started falling back towards me. Her hand flailed out and she grabbed a handle on the dresser to catch her fall. But the handle was for a drawer, which pulled out and then the whole drawer popped free of the dresser and the heavy box went clattering to the ground while Ashlyn half-fell on me and half-fell beside me.\n\nWe were both sore and bruising and tingling all over from our incredible orgasms. And we both started laughing over how crazy we had gotten.\n\nThe door flew open then and a maid took two steps into the room, concern etched on her face from the racket and crashing sounds I'm sure we were making. But then the maid saw us amidst the rubble, laughing like idiots. The poor girl turned bright pink and covered her gaping mouth with one hand. And she bobbed her head before quietly exiting the room and then closing the door.\n\nThat got Ashlyn and I laughing even harder, and after a minute she just rolled over to me and gave me the most powerful kiss I'd felt in a while. She kissed me so hard my head started spinning again and when the room settled down, I grinned in a goofy daze.\n\n\"Oh, gawd. That was EXACTLY what I needed,\" Ashlyn panted.\n\nI was happy to have satisfied her. And after catching my breath, I started to seriously wonder how I felt about Ashlyn. Did I want her as my girlfriend? Did I want to make her a true part of my life? I'd been sleeping with her for just a week now, but I was already addicted. I already felt more for her than I'd ever felt for Rebecca or Mia. I NEEDED Ashlyn.\n\n\"Where is this going, Ash? What's our relationship going to be?\" I groaned.\n\nAshlyn giggled before answering, \"How about we just fuck like this as often as we can?\"\n\nI sighed happily. \"Deal.\"\n\n***\n\nIt was after midnight when I crawled into bed with my wife, fresh from the shower after fucking one of her best friends.\n\nI was still riding the incredible high of an absolutely crazed sex session with Ashlyn. What we had done was purely physical, and yet I found myself craving to be near her even more. I'd always been attracted to the gorgeous redhead, but I realized I was developing feelings for her.\n\nBut I felt guilty for having romantic thoughts about another woman. Cassandra had said it best. What I was feeling was not love. I loved what we were doing. I reminded myself of that when I thought of Ashlyn and how absolutely incredible I felt when I was with her. She sparked an energy inside me, brought out the wild animal I hadn't felt in some time. With Ashlyn, I felt like I could fuck all night, like I was superhuman. She just inspired me, and the adrenaline rush I got with her made me believe that we could do anything together. And I loved her for that feeling.\n\nBut it wasn't love, I told myself. It was the greatest sex of my life, but not love.\n\nI snuggled my nose against Taylor's back as I spooned against her. I wrapped my arm around her waist and placed my palm over her growing belly.\n\nTHIS was love.\n\n***\n\nThe next morning, Saturday, Cassandra smirked at me when she found just how trashed was Ashlyn's room. I grumbled that it was REALLY Cassandra's fault. If she'd just gotten me off in the office, I wouldn't have been so out of control.\n\nMy beautiful assistant just went about organizing things to get the room fixed up.  Ashlyn herself merely giggled shyly and after breakfast, Kate pulled the redhead into her room so they could discuss the juicy details.\n\nI spent all morning just recovering from the previous night with Ashlyn. By afternoon, I was good as new. And then I pulled Taylor and Kate into bed to remind them how much I cared about them as well.\n\nMy wife and girlfriend had an interesting give and tug relationship. Both craved my attention, which would show in little ways as they instinctually reached for me first. But Kate would consciously defer to Taylor, recognizing her \"superior\" position as my wife. At the same time, Taylor would push Kate towards me and hang back, graciously offering the younger woman the time and pleasure.\n\nI just got annoyed with the posturing and grabbed the both of them, pushing things so that all three of us were all over each other in one confused pile of naked flesh.\n\nThat night, Rebecca and Mia came by the house for dinner, and the both of them wanted to visit the Underground Bar for old time's sake.\n\n***\n\nSunday turned out to be a free-for-all. Our guests left, but I wound up fucking everyone who stayed home.\n\nIt wasn't an organized orgy or anything. Cassandra just slipped into the shower with me in the morning. Ashlyn decided to be naughty and gave me a blowjob during breakfast in front of everyone. That got Kate so turned on that she dragged me into her bedroom.\n\nI had a lazy afternoon siesta with Taylor, including a languorous lovemaking session. After one peaceful orgasm, Taylor complained that I hadn't buttfucked her in a long while and we proceeded to rectify that situation by blasting a load up my wife's rectum. Then afterwards, my wife did the math to figure out who was left out and called Charlotte to play with me in the shower while she took her nap.\n\nAfter dinner, we practically started over. Kate and Ashlyn double-teamed me in the Playroom. There's something wonderful in the sight of two gorgeous models lying face-to-face with their tongues in each other's mouth and grinding their crotches together while I swapped back and forth from one hole to the next and then the next. And just when I thought my night was over, Taylor, Cassandra, and Charlotte all piled onto the Master Bed. I didn't get to sleep until 2am.\n\nAnd so ended the greatest sexual week of my life. I think I slept in until Tuesday.\n\n***\n\n\"You know, Ash. This jacuzzi IS big enough for you to have your own seat.\"\n\nThe gorgeous supermodel just rubbed her bikini-clad butt against my hardening cock and wriggled deeper into my grasp, pulling my arms around her. \"I know. I just like it better this way.\"\n\nI sighed and glanced around. In a jacuzzi big enough for twenty, we were the only two people. But then the sky started turning orange as the sun started coming up over the horizon. With the infinity-edge to the jacuzzi, it seemed like we were sitting in the ocean itself as the golden orb peeked above the water. And my further protests went quiet.\n\nIt was the day after Christmas. For some strange reason, I'd awoken obscenely early and just could not go back to sleep. So I slipped out from between Taylor and Cassandra and went to make myself some coffee. Sure I could have rung a bell and had someone from the staff do it for me. But I was a fully-capable human being and besides, it was the day after Christmas. I could let my staff rest in.\n\nTurned out, the coffee was already made. Ashlyn was in the kitchen just pouring herself a cup. And she turned at the sound of my feet.\n\n\"Couldn't sleep?\" I asked.\n\n\"Nah. I'm just an early riser sometimes.\" She sipped her coffee. \"I'm up this early about half the time. It's a beautiful sunrise from here.\" She waved a hand towards the windows open to the Atlantic. \"I never got this view in Manhattan, and L.A. was all about sunsets.\"\n\n\"Where do you usually go for the sunrise?\" I asked as I stepped forward and began to pour my coffee.\n\nShe flashed a smile at me. \"Usually, I curl up in the family room by the big bay window. But every now and again, like this morning, I slip into the jacuzzi. Will you join me? I've already got it heating up.\"\n\nI chuckled and shrugged. \"Why not? I'll run up and get my trunks.\"\n\n\"Who said you needed trunks?\" Ashlyn smiled and then stood. She walked over, took my hand, and then led me outside onto the backyard patio. The air was absolutely freezing, but the jacuzzi was already steaming into the early morning air and I hurried out of my robe and pajamas before slipping naked into the hot water.\n\nAshlyn took just a little longer. She was prepared to come out to the jacuzzi and she wore a nice, but not overly skimpy bikini underneath her robe. Still in the bikini, she slid into the jacuzzi beside me and then promptly climbed into my lap.\n\nI made my comment about the tub having room enough for her to have her own seat, but then the sun started rising and I just lay back to enjoy it. And as the bright yellow disk rose above the horizon, Ashlyn continued to grind her ass against my rapidly hardening cock.\n\n\"Ashlyn, what are you doing?\" I asked.\n\n\"Shh!\" she hissed. \"Don't ruin the moment.\" We went back to watching the sun come up, but she didn't stop grinding against me like a stripper's lap dance.\n\nI sighed and tried to focus on the sunrise. \"It IS beautiful,\" I sighed.\n\nAshlyn wrapped my arms tighter around her and sighed, \"Yeah...\"\n\nWe stayed like that until the entire disk had cleared the horizon and it steadily rose into the sky. And then, almost absent-mindedly, Ashlyn slipped a hand down, pulled the strap of her bikini bottoms to the side, and then impaled herself on my dick.\n\nI stiffened up and started groaning as her incredibly tight pussy sank down around my member. She relocated my hands so that I was cupping her breasts, and quietly, with our eyes on the sunrise, Ashlyn and I made love.\n\nWe didn't speak. We didn't need to. It wasn't a frantic fuck and it wasn't an out of control expression of lust. Ashlyn spent more time rotating in my lap than humping up and down. And shortly after she went still and let out a keening moan, I felt her inner muscles clenching and then I released to let my seed bubble up into her body.\n\nIt was a beautiful moment.\n\nWhen we were both done, Ashlyn dismounted my cock then turned around and laid a fat kiss on me. We explored each other's mouths slowly, without hurry. And when we finally broke to catch our breath, the gorgeous young woman rested her forehead against mine with her eyes closed as we panted softly.\n\nWe went a long while not moving, just breathing slowly as we took in the moment. I felt an upswelling of warm affection for this beautiful woman, and for a moment, I imagined what life would be like to do this every day.\n\nAshlyn seemed to be of like mind, and she eventually pulled back just enough so that she could rub her nose against mine and sigh happily.\n\n\"Johnny, I'm falling in love with you,\" she said softly.",
        "I smiled happily. My first instinct was simply happiness. How could I not be happy? A gorgeous woman who I was very, very fond of had told me she was falling in love with me. And I tilted my head so that we could come together for a beautifully tender kiss.\n\nBut then I remembered Taylor. And I remembered Cassandra. And Kate. And oh man, my love life was complicated. But I couldn't help it. Every time I got together with Ashlyn, whether having sex or just having a conversation, I felt such an incredible connection to her.\n\nI was more confused than ever about my feelings for Ashlyn. I knew I would soon have to make a decision about her and about our relationship. She simply couldn't just stay a houseguest/renter/whatever. My feelings for her simply weren't stable.\n\nEither I would find away to bring her closer to me, as a lover and as a girlfriend, or I would have to push her away and out of my life.\n\nAs it turned out, it wasn't a decision I would have to make. The two serious events that came during that last week before the New Year made my decision for me.\n\n***\n\n\"Jonathan, we need to start putting together a press release for Taylor's pregnancy. Her baby bump is getting really hard to hide and the rumors are already flying on the streets.\" Cassandra fiddled with her tablet PC taking notes.\n\nI squeezed my wife's hand and nodded while she smiled at me. \"Let's do it for the New Year. Sound good?\"\n\nBoth Cassandra and Taylor agreed.\n\n\"Speaking of which,\" Cassandra began. \"Have you two decided on which New Year's Eve party to attend?\"\n\nTaylor sighed. \"Do we have to? I'm getting too big to fit into a nice dress.\"\n\nI looked over to my wife. \"YOU were the one telling me I had to keep up my social appearances. But I don't want to go to the Bellini party. It's going to be mostly models and I don't want to be near that many party drugs.\"\n\nCassandra concurred while Taylor pouted, \"But so many of my friends are going. Ashlyn and Kate want to go to that one.\"\n\n\"You were just saying you didn't want to go out,\" I arched an eyebrow at my wife. \"Besides, I don't know that I want those two going either. I mean, I know I have no control over Ashlyn, but I'm seriously going to ask Kate not to go to that one.\"\n\n\"Imposing your boyfriend rights?\"\n\n\"Shouldn't I be bothered by my girlfriend going off to a cocaine-orgy without me?\"\n\nTaylor shrugged. \"Is Kate really your girlfriend? You're not public about that yet, and you have to make a more permanent decision about her soon. The telemags ran another segment on you and her from that visit to Vermont yesterday.\"\n\n\"They followed us to Vermont?\" I asked with an arched eyebrow.\n\n\"No. Some kid with a camera phone sent in the pics,\" Cassandra corrected. \"But with the rumors of Taylor's pregnancy, this thing with Kate could get ugly.\"\n\nI sighed. \"Well I'm not dumping her. It'd break her heart.\"\n\n\"Then just go public already,\" Taylor put her hand on mine. \"I keep telling you, take her to a nice restaurant and get a few publicity photos and move on. If she's your girlfriend, you should treat her like one.\"\n\n\"But I'm married!\"\n\n\"So? This is the 21st Century, Johnny.\" Taylor rubbed my hand. \"Besides, it's counterproductive to tell Kate she's your girlfriend if you keeping hiding her away like a mistress. She's getting antsy and starting to worry that you don't really care about her.\"\n\nI took a deep breath and rubbed my left hand over the lower half of my face.\n\n\"Come on, Johnny. You know I'm right. Really, what's the worst that could happen? I still love you. I'm still having your baby. And even more men around the world will be jealous of you.\" Taylor grinned. \"Plus, you'll have a very excited Kate who will want to show you her gratitude.\"\n\nI chuckled. I knew how much I liked people wanting to \"thank\" me. Even Cassandra cracked a smile when she saw the look on my face.\n\n\"You two are really okay with this?\"\n\n\"We love you, Jonathan,\" my assistant put in first. \"As long as we have that, everything else works out.\"\n\nTaylor nodded.\n\nI took a deep breath and then made my decision. \"Okay, let's do this. I'll take Kate as my date to Alessandro's party. His guests will skew more TV than modeling, but it's a decent mix of business and the Manhattan culture crowd. There'll be plenty of paparazzi to confirm Kate as my date, and Taylor can stay home.\"\n\nMy two ladies looked at each other, communicated something without words, and then nodded to me.\n\n\"Okay. I'll go tell Kate.\"\n\n***\n\nKate decided to enthusiastically celebrate the upcoming public announcement of our relationship. Even better, after my girlfriend drained me of two loads of semen, Kate was invited by Taylor to stay with us in the big bed, and you'd never seen a happier girl as the young blonde fell asleep in my arms.\n\n***\n\nThe next day at breakfast, Kate was bubbly and cheery and oh-so-excited. By stark contrast, Ashlyn was quiet and reserved.\n\nThe young platinum blonde spent a minute trying to engage her best friend in conversation before asking. \"What's eating you? Are you upset that we're not going to the Bellini party?\"\n\n\"No, no. That's okay.\"\n\n\"Well, you've GOT to come with us to Alessandro's. I hear there's a young TV cop from CBS who's got a *serious* crush on you.\"\n\n\"Kate, will you stop trying to set me up?\" Ashlyn sighed. Only her voice wasn't a tease. It seemed to be a quite sincere request to butt out.\n\n\"Fiiine.\" Kate rolled her eyes and started chatting up Charlotte. She was in too good a mood for it to be ruined by Ashlyn's momentary return to moroseness.\n\nI briefly worried about Ashlyn's mood. After all, she had just recently come off a serious bout of depression and she was very confused about her feelings for me. I wanted to engage Ashlyn in conversation, but the beautiful redhead wouldn't meet my gaze. And then Cassandra was asking me to join her in the office to go over some prep work for the New Year, and I left to go attend to business.\n\nThat night would be the last night of peace I had for the year.\n\n***\n\nThe next morning, I was awoken by the most agonizing scream I'd ever heard in my life. A second later, someone's hand was pounding against my shoulder and I felt like the entire bed was being lifted up and thrown over.\n\nI rolled away from the pounding hand and managed to sit up, my eyes blinking rapidly as I tried to find the intruder in the room. Only I found that the only people in the room were me and Taylor.\n\nTaylor was the source of the pounding hand. She was flailing left and right with both arms, punching at everything while she shrieked her head off. Her dark hair was a mess, flailing in every direction. Great waterfalls of tears were pouring down her cheeks and her mouth permanently gaped open as she howled her rage at the heavens. *\"NO!!! NO!!! NO!!!\"*\n\nI moved to grab her. I wanted to physically hold my wife and do whatever I could to calm her down. But then I saw it.\n\nOur sheets were a white linen, pure and clean and unbelievably comfortable. But between Taylor's legs I noticed some red spotting. There was blood on our sheets. And Taylor wailed in a voice so loud and so full of sorrow that I was certain the world was coming to an end. *\"WHY???\"* she screamed.\n\nJust then, Cassandra and Charlotte both burst into the room with anxiety on their faces. I managed to wrap Taylor up in my arms, and immediately she collapsed against me, sobbing uncontrollably while she buried her face against my neck.\n\nCharlotte was already on the phone.\n\nA half-hour later, the doctor gave us the confirmation: Taylor had suffered a miscarriage.\n\n***\n\nAt 9am, Taylor cried herself to sleep in my arms. She'd donned a pad for the bleeding, but the pain hadn't gone away and so she was still fitful. Sometime after she was asleep, Cassandra came and slid into the bed beside us.\n\nAs if reading my mind, Cassandra wrapped up Taylor in her arms and then head- nodded me towards the door. I took a deep breath, and then looked at my assistant with thanks before slipping off the bed. I went to the bathroom first to clean myself up, including the blood on my arms from where Taylor had grabbed me. My hair was a mess. My face was haggard. And my eyes were bloodshot.\n\nI'd just lost my baby.\n\nI closed my eyes and took a long few minutes just breathing heavily. My stomach gurgled and I decided to go downstairs and get something to eat as we'd missed breakfast time. Once I got some food in me I'd return to my bedroom to hold my wife.\n\nDorothy offered her sincere condolences with some toast and juice. I didn't eat much. I didn't have an appetite but I shoveled some stuff down just to quiet my stomach.\n\nBut when it came time to go back up the stairs, I found that I didn't want to return just yet. I wanted to be with my wife, but I didn't want to face the reality of my lost baby, either. So aimlessly, I walked through the rest of the house, just cruising down corridors for a few minutes.\n\nInevitably, I passed by the guest areas. Kate and Ashlyn were in Ashlyn's bedroom and Kate jumped to her feet when she saw me. \n\n\"John!\" the young blonde exclaimed. She quickly ran up and hugged me, saying, \"I'm so sorry. How's Taylor?\"\n\n\"She's sleeping right now.\" I patted Kate's back and sagged into her embrace for a minute before pulling away. Then I looked over to Ashlyn, whom I was expecting to also offer her sympathies.\n\nBut Ashlyn just stared off into space, zombie-like. For a second I was upset. One of her best friends had just had a miscarriage and she couldn't even be bothered to comment? But then when Ashlyn turned to look at me, I saw the haunted look in the beautiful redhead's eyes. \"What's going on?\" I asked.\n\n\"Uh, uh,\" Kate stalled. \"It can wait. Ashlyn's just feeling a bit under the weather today. You should go back to Taylor.\"\n\nBut there was something in Ashlyn's expression that gave me pause. Something serious was going on and if nothing else but a desperate need to not think about my lost baby, I firmly but gently pushed Kate aside and went to the bed where Ashlyn was sitting. I crouched before her and looked up into her face. Ashlyn's brilliant blue eyes were a dull sheen, but she held my gaze.\n\n\"Ashlyn? Are you okay?\"\n\nKate interjected, \"This isn't the time. It can wait until tomorrow.\"\n\n\"What can wait?\" I turned to Kate with a puzzled but insistent expression on my face. Then I looked back to Ashlyn. Whatever else was going on around me, a woman I cared about looked upset and I wanted to do whatever I could to make things better.\n\nAshlyn glanced just once at Kate before saying in a quiet voice, \"I'm late.\"\n\nI didn't understand immediately.\n\n\"I'm late. My period's late.\" She took a deep breath. \"I was due a week ago. I've been late before, but not this late.\"\n\nI gulped and reached my arms up to Ashlyn's shoulders. \"Are you sure?\"\n\nShe opened up her hands, which until now had been pressed together palm to palm. And in between them was a home pregnancy test. There were two clear pink lines, bold and almost red. I'd seen it before, when Taylor had picture messaged me her own pregnancy test. Ashlyn said in a soft voice, \"You're the only man I've been with.\"\n\nI gasped and stared at the wand in disbelief. After all, Kaitlyn's pregnancy test had been a false positive back when she was eighteen. \"How?\" I asked. \"Aren't you on the pill?\"\n\nShe nodded.\n\n\"Then how?\" Could I really see two false positives in my life from women on the pill?\n\n\"It must have been that first time, after I showed myself to you in the pool.\"\n\nI looked at her uncomprehendingly. Kate moved up and started rubbing Ashlyn's shoulders. The redhead scrunched up her face and looked down, on the verge of tears.\n\nKate started in. \"She was depressed for weeks, John. She completely stopped taking care of herself. She wouldn't shower unless Taylor or I physically pushed her into it. She wasn't brushing her teeth or changing her clothes...\"\n\nKate took a deep breath. \"Or taking her pills.\"\n\nI remembered that first night. I was lost to the delirium of the greatest sex of my life and for the first time in years, I'd cum inside the pussy of a woman other than Taylor or Cassandra. At the time, I hadn't worried. I considered it a minor betrayal to my loves, but I felt passionately for Ashlyn and I wasn't worried about pregnancy. I knew Ashlyn had been quite sexually active and it never occurred to me that she'd stopped taking her pills, however briefly. Her period had probably started almost immediately. And I would have made love to her right smack in the middle of her fertile time two weeks later.\n\nMy hand went and covered my gasping mouth as my eyes went wide as the implications sunk into me. I stood up then and Ashlyn just started crying. So for the second time that day, I stepped forward and embraced a sobbing woman. And I held Ashlyn in my arms until she got herself under control.\n\n\"Johnny, I'm sorry. I'm so sorry. I love you. I'm so sorry,\" she whimpered against my chest.\n\nBut when she was done, I couldn't speak to her. There were just too many emotions and too many thoughts going through my head. I had just lost my baby. I had a new baby. I wasn't going to be a father anymore. Now I was GOING to be a father again. My wife was in pain for losing her baby. Ashlyn was in pain for finding out she was going to have a baby. It was all just too much.\n\nPinching my own eyes and put both hands on my head, threatening to tear out my own hair. I staggered out of the room and raced out onto the back patio. And then, in a throat-tearing roar that rivaled any howl Taylor had raged against the heavens, I screamed.\n\n***\n\nI woke up the next morning with Taylor resting her head on my chest. When she realized I was awake, she turned and then slid high enough to press her lips against mine.\n\nI wrapped my arms around my wife's back and head, pulling her more closely to me. And then we lost ourselves to the passion of our kiss.\n\nLove. I loved my wife. I loved her with every fiber of my being. And I knew that no matter what, we would go on, despite the miscarriage. There would be other children, other chances. I didn't know yet what I was going to do about the Ashlyn situation, but I truly believed that Taylor and I would figure it out.\n\nAfter several long minutes, I was resting on my back with Taylor pillowing her head on my chest again. Idly, I stroked her hair while she rubbed her fingers on my belly.\n\nEventually, she sat up and gave me a hopeful expression, her dark blue eyes opened wide. \"Well, I've been DYING for a Cosmo.\" Taylor smiled shakily with her attempt at humor. I just reached out and stroked her cheek with the back of my hand.\n\nYesterday, Taylor had been completely despondent. Now, she was merely morose, and that faint emotion of hope was growing.\n\nCassandra knocked shortly after and entered with a maid, who brought us breakfast in bed. Cassandra then took a deep breath and glanced out the door. \"Jonathan, Taylor, there are some friends who'd like to see you.\" Cassandra gave me a LOOK with her eyes, and then a warning to Taylor as well.\n\nTaylor's initial gladness at the idea of her friends coming up was tempered by Cassandra's look. And then something non-verbal passed between my loves before Taylor steeled herself and nodded.\n\nAshlyn and Kate came in dressed casually. It was the first time either of them was seeing Taylor since two nights prior.\n\n\"How are you Taylor?\" Kate asked as she approached the bed and then sat down at the foot of it. Ashlyn took the opposite side towards my feet.\n\n\"I'm okay. I'm far from happy, but I'll be alright.\"\n\n\"I'm so sorry,\" Kate said softly.\n\n\"I know. Me, too,\" Taylor shrugged, trying to put up a brave front.\n\n\"I'm sorry,\" Ashlyn said sincerely to Taylor. Then she took a deep breath, glanced at me, then returned to Taylor to say much more emphatically, \"I'm *sorry*.\"\n\nTaylor seemed prepared for SOME upsetting news, most likely from Cassandra's warning. Our food was forgotten as Taylor focused in on the redhead. \"I'm guessing you've got something to tell me. Something I'm not going to like hearing?\"\n\nAshlyn looked down. \"I would have told you yesterday as soon as I found out. But yesterday was kind of a bad day for you.\"\n\n\"Found out what?\"\n\nAshlyn took a deep breath and then glanced at me again. When she looked back to Taylor, her eyes lasered in. \"I'm pregnant, Taylor. It's Johnny's.\"\n\nTaylor's jaw dropped and then she looked back and forth between me and her friend. My jaw was clenched and I wasn't sure how to react. I certainly wanted to support Ashlyn as the mother of my child, but at the same time Taylor was my wife and there was no question she was my priority. As attracted to Ashlyn as I felt and as much as I cared for her well-being, I LOVED Taylor.\n\n\"Are you sure?\" Taylor asked with the same fierce intensity I'd asked yesterday morning.\n\nAshlyn nodded. \"We visited the doctor yesterday. It's confirmed.\"\n\n\"How?\" Taylor asked. So Kate and Ashlyn told the whole story. For me, hearing it a second time just rammed every detail home.\n\nAnd when the girls finished, Ashlyn started crying again.\n\nTaylor was just stunned. I knew how she felt. One minute, she was mourning the loss of her own child. The next minute, she was finding out her husband had impregnated one of her best friends.\n\nShe'd steeled herself for some bad news. She'd seen the warnings and she'd done her best to calm herself. But for certain kinds of news, there simply is no way to be prepared. And now, Taylor's face was ghost white.\n\nKate and Ashlyn had finished their recap and we were all now waiting for Taylor to respond. A minute passed in silence, then two. You could feel the tension in the air and I found that I was partially holding my breath, waiting to see how my wife eventually reacted.\n\n\"Get out.\" Taylor blinked twice and a tear squeezed out to form a line down her cheek.\n\nAshlyn blanched immediately and took on a pleading expression.\n\nTaylor's eyes sharpened and a look of murderous rage came over her face. \"GET. OUT.\"\n\nIn tears, Ashlyn fled the room. Kate quickly followed after her.\n\n\"Taylor...\" I said soothingly and reached for her arm.\n\nMy wife spun, the murderous gaze now focused on me. \"You CAME in her?\"\n\nI winced. Then, with deliberately slowness, I nodded.\n\n\"Get out,\" my wife said coldly. She indicated with her head towards the door.\n\n\"Taylor,\" I pleaded.\n\n\"You knocked up one of my best friends. SHE'S going to have your baby before ME, your WIFE. Now get OUT of my *SIGHT*!\" Taylor said shrilly, but without raising her voice. I think I would have been less afraid if she'd started yelling. The quiet intensity of Taylor's voice spooked the hell out of me.\n\nCassandra looked at me with concern, but I couldn't meet her eyes. Silently, I got off the bed and left the room.\n\n***\n\nI stood just outside my bedroom door with my head hanging. How had I managed to so completely fuck things up? Would Taylor forgive me for this? For the first time in our marriage, I had a sliver of doubt whether Taylor and I would last forever.\n\nA couple minutes into my ruminations, the door opened again and Cassandra came out, her face grave. Automatically, I turned to her for support and we came together for a fierce hug.\n\n\"She kicked me out, too,\" Cassandra lamented.\n\n\"What's going to happen?\" I whimpered as I felt the first tears starting to come to my face.\n\n\"I don't know,\" Cassandra sighed and rubbed my back. \"But no matter what, I'll always be with you.\"\n\nThere was an ominous undercurrent in Cassandra's voice and I blinked twice while pulling away to look at her face. \"What are you saying?\"\n\nCassandra's eyebrows canted to the sides and her jaw quivered. \"I'm not sure. I can usually read both of you pretty well. You have your fights and your spats, but this is just so much bigger.\"",
        "\"But Taylor and I will work it out, right?\"\n\n\"I hope so. She's pretty upset right now.\" Cassandra sighed. \"I'm not saying your marriage is irreparably ruined, Jonathan. But trust that I'll always be here for you. I love Taylor, but through you. I'm on your side, okay?\"\n\nMy jaw quivered. I knew Cassandra was trying to reassure me, but as the tears started rolling down my cheeks, I said, \"You each are the legs supporting me. I need both of them to stand.\"\n\n***\n\nCassandra held me for a few minutes before tilting my face to hers and then dropping a sweetly passionate kiss on my lips. She nodded her head slowly and then said reassuringly, \"I'll talk to her.\"\n\n\"Didn't she just kick you out?\"\n\n\"I can be pretty stubborn when I want to.\" A small smirk came onto Cassandra's face. \"Go find Ashlyn.\"\n\nCassandra then went back to the Master Bedroom, turning to smile at me before she went inside.\n\nI found Kate and Ashlyn in the Common Room, curled up together on a plush sofa. I went over to join them by sitting on a nearby chair. Misery loves company.\n\n\"She kicked me out, too,\" I said by way of explanation when the girls looked up at me.\n\nAshlyn was sobbing with her face against Kate's chest. But eventually, she got her tears under control enough to glance over at me. The redhead managed to burble, \"I'll have an abortion.\"\n\n\"No!\" Kate cut in loud enough and harsh enough to grab my attention. Then the blonde looked imploringly at me. \"No, you can't let her.\"\n\nAshlyn looked at Kate like she was a crazy woman.\n\nKate just continued. \"You can't let her.\"\n\n\"Why not?\" I interjected and then turned to Ashlyn. \"Ash, do you want to keep the baby?\"\n\nAshlyn just paled and the tears kept streaming, but she didn't answer me right away.\n\nKate spoke softly. \"She had an abortion when she was nineteen. It broke her heart. I was one of her best friends and I could do nothing but stand there as Ashlyn nearly killed herself with grief. You can't let her do it again. Please, John. Please don't make her abort it. Too many terrible things have been happening to her lately.\"\n\nMy heart went out to her. Ashlyn was 25 now, but curled up and crying she looked like a broken-down teenager again. She was visibly shivering despite the warm temperature of the room. And the internal war over her baby frightened the hell out of her. Could she really abort another child? If she didn't, could she really risk ruining my family and damaging her relationship with Taylor?\n\nAt the same time, it wasn't all her decision. I had some choices to make as well. Aborting the baby would be the easiest for me. One pregnancy with non-spouse erased. No paternity questions, no astronomical child-support payments, no protracted court battles. But like it or not, life had been created. Life derived from ME.\n\nI slipped across the room and knelt beside the sofa. One hand went to Ashlyn's knee and my other touched her shoulder. \"Ashlyn, I'm here for you. I'm not running away from this and I'm not going to try and hide it. Whatever you want to do, I'll support it. I'll support you. We'll make it work.\"\n\nA ray of hope came into her sparkling blue eyes. It was clear from her expression that she didn't want to have an abortion. She wanted her baby, unplanned or not. \"You'll really have this baby with me?\"\n\nTaking a deep breath, I said, \"I will.\" In that moment, we were bonded tightly. Together, Ashlyn and I had created life. Her hands went up to my head and my hands clutched her shoulders, and we came together in a firm, but tender kiss.\n\nAshlyn moaned into my mouth and for the first time when I wasn't in the middle of an amazing orgasm, I released my emotions. I adored this woman. I was even a little in love with her. I wanted her as a part of my life and I wanted to meet the child she was now carrying.\n\n\"Ashlyn...\" I hummed.\n\nFor the first time, she cracked a smile and actually giggled, \"We're having a baby, Johnny!\" There was some excitement in her voice.\n\nBut when we pulled back to look at each other, her eyes were tight. With obvious concern in her voice, Ashlyn asked, \"What about Taylor?\"\n\nI exhaled slowly. I didn't have an immediate answer. I stared off, out the window and to a distant point on the horizon. I wanted this baby with Ashlyn. I wanted my wife. There would be no compromise. There would be no giving up one or the other. I promised to myself and said aloud, \"We'll make it work.\"\n\n***\n\nTwenty minutes later, I was sitting upright on the sofa while Ashlyn was curled beneath my left arm. Her legs were pulled beneath her and her face was pressed against my chest. I just held her tightly with my left arm while my right hand idly ran through her copper hair.\n\nShe wasn't crying anymore. She wasn't even sad anymore. I'd reassured her that I'd stand by her and the baby, no matter what. We didn't need to talk further, and all that was left was the sound of her heavy breathing. Twice, I checked to see if she'd somehow fallen asleep. But her eyes were wide both times, darting back and forth as she was clearly in thought.\n\nKate gave me a pained look every now and again. At first, she'd sat beside her friend just giving warm touches and caresses to remind Ashlyn that she was there. Then, she would be stroking my arm and looking to draw strength from my steady example. Or like now, she sat on the nearby chair just wondering what the hell was going through her friend's mind.\n\nOut of this relative silence came Taylor's sharp voice. \"Ashlyn.\"\n\nWe all turned and looked up at Taylor, obvious fear in Ashlyn's eyes. Cassandra was standing behind Taylor, her face neutral. I couldn't tell if that was a good or bad thing. Taylor herself had an expression was completely unreadable\n\nAshlyn's face went ashen and biting her lower lip, she looked over at me. \"I'm sorry Johnny. I can't do this to her.\"\n\nThen taking a deep breath, Ashlyn looked at Taylor and said, \"It's okay, Taylor. I'll get an abortion. I don't want to cause any trouble for you or Johnny.\"\n\n\"Ashlyn,\" Taylor said firmly again, and this time the redhead didn't speak. Taylor took a deep breath and then asked in a gentle voice, \"Do you want to keep the baby?\"\n\nAshlyn took a long few seconds to look at me, and Kate, and then again at Taylor. She licked her lips with an anguished expression. And then crying, she started to nod her head 'yes'.\n\nTaylor sighed and began to nod in acceptance. My eyes went wide as the ramifications of everything started to sink into my brain, and I felt the first rays of hope that this unexpected pregnancy wouldn't somehow destroy every relationship around me. And that hope blossomed into a fireball as a smile began to cross my wife's face.\n\nTaylor leaned forward and took Ashlyn's hands into her own. Squeezing them gently, my wife smiled and said in a soothing voice, \"Then keep the baby. Congratulations, Ashlyn. I'm happy for you.\"\n\n***\n\nHave I mentioned how incredible my wife is? I swear, there's not another woman on Earth quite like her. How many other women could have faced what Taylor had just faced, and then twenty minutes later walk up in support of the woman bearing her husband's child?\n\nAt first, I moved to release Ashlyn but Taylor bid me stay where I was. Then she moved around beside Ashlyn on the other side, and then together we held the trembling redheaded supermodel who just looked back and forth at us with a bewildered expression on her face.\n\n\"How can this work out?\" Ashlyn asked softly once she got her panic under control.\n\n\"Well, we can keep it under wraps for a few months,\" Taylor said rationally as she glanced at Cassandra. I had a feeling my personal assistant had been the one to logically lay out a plan. \"But once your bump starts to show, the paparazzi will be all over you. We'll go public then that Johnny is the father.\"\n\n\"Won't that cause you two problems?\" Ashlyn glanced up.\n\nI shrugged. \"I stopped paying attention to the media a long time ago. They threw a hissy fit over Kaitlyn and Natalie in Vegas, but it disappeared after two days.\"\n\nTaylor looked at me, \"This will be much more permanent than two days, Johnny.\"\n\n\"I know, I know.\" I looked down to see Ashlyn staring at me wide-eyed. \"Are you going to be okay with the scrutiny?\"\n\nShe blinked and then nodded. \"I'm used to getting hounded. At least out here, the photogs can't even get close. And by taking the helicopter back and forth, you really avoid most everything.\"\n\n\"But not always...\"\n\n\"I'm fine. Having a baby... Johnny, having YOUR baby, is far bigger and better than some minor media scrutiny,\" Ashlyn sighed and then wrapped her arms around my torso while Taylor rubbed her back.\n\n\"But Johnny?\" Ashlyn said in a quiet voice before looking at Taylor and then back to me. \"What about us?\"\n\nI glanced at my wife before turning my attention to the gorgeous redhead. \"What *about* us?\"\n\n\"Are you... just the father to my baby? Or might we be...\" Ashlyn blushed and looked at Taylor again, this time with a guilty expression. \"Might we be more?\"\n\nI sighed and checked my wife for any signs of jealousy. She'd shown remarkably little jealousy for our entire relationship. She never saw Kaitlyn and Lindsay as threats. And despite my extremely intimate relationship with Cassandra, the two were never in competition with each other. And she knew my thing with Kate wasn't for the long run. But Ashlyn... and a baby... would be much more permanent.\n\nFor the first time in memory, Taylor looked at me with a completely blank expression. It wasn't that she was hiding her feelings; she honestly didn't know. My wife shrugged and managed to communicate that she really wasn't sure how to advise me in this situation.\n\nSo I went with my instinct. I held Ashlyn's head and pulled her to me. Then gently, I kissed her forehead and stroked her scalp. \"We'll figure it out, Ash. What happens, happens.\"\n\nShe sighed, clearly not satisfied with the answer. We'd danced around our attraction to one another for over a year without ever really talking about the way we felt for each other. She had been off-limits as Taylor's good friend and I'd locked away my emotions towards her for much of the time I'd known the gorgeous supermodel. Now that we were faced with a situation that might permanentlyl force those emotions to the surface, I didn't know how I'd react.\n\nAshlyn exhaled and then took a deep breath. And then she turned to my wife and moved their hands together. \"I was jealous of you, Taylor. I've always been envious of you and your life. And I idolized you growing up in the modeling world.\"\n\nTaylor arched an eyebrow. \"Me? I was never that big until I met Johnny.\"\n\n\"Maybe you weren't the biggest name on the planet, but all the people in the industry had a ton of respect for you. You were gorgeous, you were successful, and you did it without pissing on the people around you. Your friends LOVE you, Taylor. You had it all, the Maxim cover shoots, the lingerie lines, and the high- fashion, too. And then you went and snagged the handsome, wealthy, and sweet Jonathan Kwong. Yeah, I may have won People's Most Beautiful, but I was still in awe of you.\"\n\nTaylor smiled proudly and glanced at me. Then Ashlyn hung her head and continued, pinching her eyebrows together. \"I think I hooked up with Marty because I was hoping he'd be like you, Johnny. Finance guy. Charming. He had some qualities that reminded me of you.\"\n\nI leaned back, uncomfortable with the idea that Martin Dean and I were alike in any way.\n\nAshlyn picked up on the vibe and then touched my cheek. \"But he wasn't anything like you. He didn't care for me like you do for Taylor. He treated Kate like a toy. It was expected of his position. It's expected of your position. But you don't treat women like that. Here, in this household, everyone always has a choice. And because you give them that choice, they choose you.\"\n\n\"Not always.\"\n\n\"Maybe not. But again, that's a choice they're free to make.\" Ashlyn sighed. \"Just like now, I have a choice. It's a decision that could radically change BOTH your lives, but you let me make it. So it's an easy choice. I choose to keep this baby. I choose to make myself a part of your family, if you'll have me. I can't describe how happy I would be as a sister to Taylor. And for you, Johnny, will you have me? With you?\"\n\nAshlyn took a deep breath and then hugged herself to my chest. \"We don't know each other that well,\" she admitted. \"But I've always felt a connection. It's so easy to fall in love with you.\"\n\nI looked at the gorgeous young woman, her blue eyes piercing straight into my soul. It would be so easy to fall in love with her as well.\n\nAshlyn gasped when I brushed her hair back from her face and held her face in my hands. And then I bent and pressed my lips to hers. And at that moment, the passion of our lovemaking roared back into my head. Ashlyn had a power over me. She made me delirious with her very touch and soon we were both moaning into our embrace.\n\nBut I didn't forget where I was or who I was with. I broke away before I got too carried away kissing Ashlyn. I smiled at Kate and then turned to Taylor, who was watching us intently. My wife had made Ashlyn off-limits in the first place because she suspected the power her friend could have over me. And now that suspicion was coming true right in her face.\n\nI gave one last look at Taylor. She'd made her own decision even before she came down here, and she fractionally nodded to me. So I looked down at Ashlyn, who was still panting from the head rush of our kiss.\n\n\"Okay,\" I said. \"Let's give love a chance.\"\n\n***\n\nI walked through the day as if in a trance. As these things tend to do, word spread through the house like wildfire. The staff seemed as stunned as I was. It was easy to feel sad for Taylor and every staff member we ran into extended their sympathies for our loss. But it took me physically holding Ashlyn's hand and walking her through the house as well before the staff got over their initial shock and awkwardness and began to congratulate Ashlyn on her pregnancy.\n\nIt wasn't that the staff had any problems with Ashlyn. For all her naturally self- absorbed behavior, she was polite to them and never abusive. She knew these people had access to her laundry (clean and otherwise), her food, and her secrets. But watching how they reacted to the news was like a test run for when the world found out.\n\nAnd the world would find out.\n\nEverything just felt so overwhelming that it was surreal. Several times, I imagined I would wake up the next day and everything would be as they were used to be: with Taylor pregnant and Ashlyn not.\n\nWhen bedtime came, I emerged from the bathroom to find Taylor and Ashlyn facing each other in bed, wearing their pajamas. I stood back and gave them space as the two friends whispered to each other, staring into each other's eyes and stroking cheeks. Every now and again, one or the other would give reassuring nods and perhaps a soft peck on the lips. And after ten minutes, Taylor finally turned and beckoned me to them.\n\nFully dressed, we shifted until I was sandwiched between the two gorgeous supermodels. Taylor actually turned me so that I was spooned behind Ashlyn, my left arm running beneath her pillow and back to hold her from the other side. Taylor then moved my hand onto Ashlyn's belly, still taut with muscled abs beneath my fingers.\n\nThen my wife spooned behind me and whispered, \"Let go. Let yourself love her. She needs it. And your baby needs it. Let go.\"\n\nI didn't have the strength or conviction yet to say the words. But I let my head tilt forward and I brushed Ashlyn's coppery hair to the side. I kissed the back of Ashlyn's neck before resting my head against hers. And as my arms circled tighter to draw the beautiful young woman against me, I let down my mental barriers.\n\nFrom the moment I laid eyes on her I was smitten. I'd known intellectually who Ashlyn Scott was and Taylor had mentioned her as a model friend on occasion, but that first time we met in person, she'd taken my breath away. Attraction had turned to lust. But repression of that lust had turned to desire. The mere sight of her would quicken my heart, even if it was something as innocent as a lunch with my wife by my side.\n\nDesire had turned to jealousy when Ashlyn hooked up with Martin Dean. Jealousy turned to concern when she showed up on my doorstep having been beaten by him. And when concern and desire came together, so did my care for her. I didn't yet know if I truly loved her. I certainly wasn't *in love* with her the same way as with Taylor. But I did care deeply for Ashlyn's well-being. And I craved to have her be a part of my life.\n\nAnd so I let go. I stopped thinking about her as an \"off-limits\" beauty. I stopped thinking of her as a beautiful temptress. I even stopped thinking of her as the \"most beautiful woman in the world\". She was just Ashlyn. And I wanted to make her happy.\n\n***\n\nThe next day, December 31, was a quiet day. I spent a lot of time with Ashlyn, just talking. I spent a lot of time with Taylor, just loving.\n\nWe all stayed in for New Year's Eve.\n\n***\n\n*JANUARY*\n\n\"So deep... so good...\" the young platinum blonde beneath me crooned while I slowly chugged in and out of her tight slit. Our fingers were interlaced as I held her hands against the mattress just above her head. From this position, I could use my forearms as leverage to keep my weight from crushing her much smaller body and yet have my face just inches away from hers.\n\nEvery so often, Kate would crane her neck to kiss me softly or perhaps just rub her nose against mine. I panted with the exertion and she rolled her hips into me with every thrust.\n\nOur lovemaking was tender. I lost track of how much time we moved together in that horizontal lambada, but sometime after Kate's second orgasm I felt the swelling in my balls as I prepared to fire away my load.\n\n\"I want it in me,\" she said quietly.\n\nImmediately, my eyebrows canted to the sides in apology. \"I can't,\" I groaned.\n\nHer lips formed a tight line, but she closed her eyes and nodded sadly. I could read the mild disappointment on her face, but when she opened her eyes up again, there was acceptance in her expression. \"In my ass, then.\"\n\nI arched an eyebrow, but Kate wriggled her crotch away from me and I pulled my cock free of her sodden slot. Taking hold of my member, I re-aimed a little lower while the young model rolled her hips to bring her butt up, and as I pushed the mushroom head through her anus, I felt the slickness of Astroglide lubrication. Kate had been prepared.\n\nWith a groan from both of us, I slid all the way down into Kate's bowels and picked up the rhythm where we'd left off. I knew I wouldn't last much longer. Already on the verge of orgasm, the tight constriction and heat of Kate's anal chute were overwhelming, and after a dozen or so strokes, I pushed all the way down and then let fly, splattering her insides with my hot cum.\n\nJust as I was cumming, Kate picked her head up to me and kissed me fiercely, her tongue carving through my mouth as the climax ripped through my body. Our hands gripped each other tightly, only beginning to relax when my ab muscles released and I started to come down from my sexual high.\n\nIn these few seconds after ejaculation, my mind was completely clear. I floated on a cloud of pure bliss and I drowsily smiled with deep satisfaction. It was in this state that Kate made her final play for me.\n\n\"I love you, John.\"\n\nI felt a thousand fuzzy butterflies float through my body as I heard those words. And as I smiled down at the beautiful woman beneath me, I squeezed her hands and opened my mouth to return the sentiment.\n\nBut I didn't. \"I...\" I began, and Kate's eyes sparkled as the hope swelled up inside her.\n\nI took a breath as reason returned to my brain. \"You're sweet, Katie,\" I said softly.",
        "She blinked twice, unable to hide her disappointment. I hated to hurt her, but I just couldn't say the words. I loved what we were doing, but I just didn't feel for her the same way as I did for Taylor or Cassandra. Hell, I didn't even feel as passionately about her as I did Ashlyn.\n\nAfter I pulled out, I flopped onto my back and I stared at the ceiling trying to think of a way to make it up to her. Kate herself just lay where I left her, idly rubbing her clit while sighing and doing some heavy thinking herself.\n\nIt came to me then. \"We should go out on the town tomorrow night. Pick a restaurant, any restaurant. It'll just be the two of us.\"\n\nI'd always planned to step out in public with Kate as my date. Sooner or later, I would have to make that decision to make clear that I was polyamorous. Sure, lots of wealthy men were screwing multiple women. But I'd made it clear that I didn't want to be one of those guys hiding away his mistresses. So the only choice was to be public and honest about it.\n\nUnfortunately, my planned announcement for New Year's Eve had gotten derailed by Ashlyn's pregnancy and Taylor's miscarriage. But I supposed it was better late than never.\n\nKate rolled up to me and kissed my cheek. \"Really?\" She asked. \"I'm finally going public?\"\n\n\"Yes you are, girlfriend of Jonathan Kwong,\" I said warmly. And then I leaned over to kiss her. We had plenty of time for a shower and then round 2.\n\n***\n\nI hadn't seen Kate for the entire day. Taylor joked that the young model was spending the whole time in her room getting primped up and trying on a hundred dresses in order to figure out just the right one. It made sense to me since Ashlyn was holed up in the room with her as well.\n\nI was supposed to \"pick her up\" at 8pm. The restaurant Kate had chosen was black tie and very upscale, so I was dressed to impress and Taylor helped to make sure I looked suitably dashing.\n\n\"Can you believe you're helping me get ready for an actual 'date' with another woman?\" I asked.\n\nTaylor shrugged and replied, \"It's just Kate.\"\n\n\"Still. This will be my first evening 'date' with a woman other than you. I haven't even gone out for a public, romantic evening with Cassandra.\"\n\nTaylor smiled sweetly and said, \"I'm helping a wonderful man get ready for an evening where he's going to make one of my friends very, very happy.\"\n\nI turned and kissed my wife, but then she rubbed her thumb over my lips to make sure she hadn't transferred her lipstick. She grinned. \"Still, it wouldn't do for you to go on a date with Kate wearing another woman's lipstick.\"\n\nAt 7:56pm I collected the beautiful bouquet of flowers Cassandra had ordered for me and I headed downstairs. But when I hit the main foyer, my heart stopped.\n\nKate stood there in jeans and a baggy sweater. Her hair was loose and tucked beneath a stylishly cute hat. She looked good, but her attire certainly wasn't for a black tie dinner. But what really killed me was that her suitcases were packed and ready by the front door. I was hit with a sudden wave of d\u00e9j\u00e0 vu and as vertigo set in, Taylor had to catch me and set me against a railing lest I fall flat on my face.\n\n\"You're leaving?\" I managed to croak to Kate, my throat dry. Evident pain was on my face.\n\nThe pretty platinum blonde looked at the floor and nodded, nervously playing with her own fingers. She looked up at me then and said, \"I can't stay, John.\"\n\n\"But, but why?\"\n\n\"I...\" she took a deep breath and glanced down for a moment before fixing her dark eyes back on me. \"I want more than what you can give me.\"\n\nKate looked down and away from me, as if ashamed for having desires that didn't include me. But then, as I looked at her, I realized that this was *exactly* what I'd been hoping for her. True, I'd miss her. But she *deserved* more than what I could give her, and it seemed that she finally had realized it.\n\nGetting my balance, I walked forward quickly to stand right in front of her. The young platinum blonde still wouldn't meet my gaze, but I gently brought her chin up with my hand until she looked at me. \"I'm so proud of you,\" I said with a warm smile.\n\nKate looked rather confused by my comment.\n\n\"You want love?\" I asked softly and dropped my hand away. She hesitated a moment then nodded.\n\n\"You deserve it, Kate,\" I said earnestly. \"You're WORTH it.\"\n\nShe seemed to finally understand what I was getting at. \"Thank you,\" she said and stood up a little straighter, with confidence.\n\n\"So what made you decide right now, tonight?\"\n\nKate shrugged, \"This date. I realized that if I really want to go out there and find a man of my own, a man who will love me the way I want to be loved, I can't go out in public as your girlfriend. It would just complicate things too much.\"\n\n\"What, you'd be embarrassed to have me publicly linked to you?\" I teased.\n\nShe grinned. \"No, no. You're just too intimidating. No man would want to be my boyfriend immediately after Jonathan Kwong... billionaire.\"\n\n\"But you are going to find a boyfriend, right? Someone who will treat you like a girlfriend?\"\n\n\"Yeah,\" Kate smiled. \"Someone who will treat me as an equal. Someone who won't just throw money at me if I sleep with them. I'm not a mistress anymore. I'm not a sex toy anymore.\"\n\nTaylor stepped forward. \"Good for you, Kate.\" And then Taylor wrapped up the younger woman in a hug. \"Do you already have somewhere to go?\"\n\n\"Yeah,\" Kate patted Taylor's back. \"I just talked to M&M. They'll let me crash at their place until I get on my feet.\"\n\nI blushed at the mention of Maile and Milena. Kate caught my flush and then added, \"I'm sure we'll have a LOT to talk about...\" There was a confident tease in her voice.\n\nThen Kate came over and hugged me warmly. \"Thank you, John. Thanks for being such a sweet guy. And thanks for showing me that I'm worth more than just a plaything.\"\n\nShe released me and then stepped back. An impish grin came to the platinum blonde's face and she coyly said, \"By the way, if you ever want to go for a Ferris Wheel ride... let me know.\"\n\nThen she turned to my wife. \"And Taylor. I love you, sweetie. But if you don't take care of this man, I may just come back to take him off your hands.\"\n\nTaylor laughed. \"Believe me. He's got his hands full enough already.\"\n\n\"Yeah,\" Kate sighed. \"That's kind of the point.\"\n\n\"I'm sorry, Kate,\" I said sincerely. \"I never meant for you to feel lost in the shuffle.\"\n\n\"It's okay. I get it. It's not that you don't love me because I'm not worthy of being loved, which was how I saw it at first. I'm worth it, but you've already found your soulmates. What you have with Taylor and Cassandra is special. And honestly, I think you and Ashlyn have got something pretty interesting going on as well.\"\n\nKate stepped up and stroked my cheek. \"I admit I wish things could have been different, but they're not. The guy for me is out there somewhere. The sooner I start looking the sooner I'll find him.\"\n\n\"In the meantime,\" Taylor put in. \"Don't be a stranger.\"\n\n\"I won't.\" Kate stayed with one hand on my shoulder as she turned her head to my wife. \"My best friends are here. I'll be back to visit. And you WILL meet up with me downtown.\"\n\n\"Of course,\" Taylor smiled warmly.\n\n\"And you,\" Kate said as she returned her full focus to me. Tugging gently on the back of my neck, she pulled me down to her for a soft kiss. When she pulled away, she husked, \"Don't forget about me.\"\n\n\"I couldn't if I tried.\" I set my forehead to hers, and then we finally said goodbye.\n\n***\n\n\"Jonathan.\"\n\n\"Hmm?\" I asked absentmindedly.\n\n\"Jonathan. Earth to Jonathan.\"\n\nI blinked twice and then rotated my chair away from the skyline view of Manhattan and over to Cassandra. We were in my downtown office.\n\n\"You haven't heard a word I've said, have you?\" My ever-loyal assistant asked.\n\n\"Uh, no,\" I replied after a quick search of my short-term memory.\n\nShe sighed and closed up her notebook. \"What's on your mind?\"\n\n\"Too much.\"\n\n\"Let me guess, your complicated love life?\"\n\n\"Sometimes, I wonder if it's all worth it.\" I waved my hands to the sides and sighed. \"I mean, when I was just another finance geek on Wall Street, all I could imagine was finding one woman, a lifelong partner to get married and have a couple of kids with. You know: cramped Manhattan apartment, day job, day care, etc. It would have all been routine, but it would have all been simple. Not like this.\"\n\n\"What, you want to give up the money and the mansion and the parade of naked women walking into your bedroom?\"\n\nI smirked. \"Well, I wouldn't go THAT far. But I do think about how different my life could have turned out. I love my life, but it's a lot more complicated this way.\"\n\n\"Well, Kate moving out *is* one less woman to worry about.\"\n\n\"Not really. I don't have the romantic complications but I still worry about her.\"\n\n\"You'll see her this weekend at Taylor's birthday party.\"\n\nI chuckled at the thought of that guest list. With everything that had gone on, we'd scrapped anything too elaborate event-wise, but the guest list read as a who's who of the women in my life. Besides the casual friends and models and other people in Taylor's industry, on the list were no less than fifteen women I'd had sex with in the past ten years, including Maile, Milena, Jenna, Kaitlyn, Rebecca, Mia, and Kate. And that's not to mention the women currently living in my house.\n\nI was on pretty good terms with just about all those women. And they were just further distractions on top of the delicate balancing act that had formed between myself and the three primary women in my life now: Taylor, Cassandra, and Ashlyn.\n\nTaylor and Cassandra had already worked out their relationship. It was easy, Taylor deferred to Cassandra on all household matters and my wife never tried to be Queen of the House or adopt any sort of imperial ego. Cassandra let Taylor be my wife and never tried to rival her for my love, even thought both women explicitly knew I would share some of my personal time with my personal assistant.\n\nAshlyn was a bit of a curveball into the mix. She wasn't my wife, and as such had no priority over Taylor or other such competitive advantage. But she was the mother of my child and I inevitably found myself going out of my way to pay attention to her to make sure she was comfortable and had everything she needed. Ashlyn was also the \"newest\" and most unknown woman, always a powerful attractant physically.\n\nSo Ashlyn and I both wanted each other, but we were always cognizant of Taylor's feelings. The situation tempered our relationship and prevented us from just falling into each other's arms at every moment and fucking like rabbits. In retrospect, Taylor's presence was just what we needed not to burn ourselves out in the white-hot flame of passion. And it kept our sexual longing for each other constantly on edge.\n\nIt didn't hurt that Taylor and Ashlyn were accomplished lovers and deeply attracted to one another as well. After the decision to keep Ashlyn's baby, I think the three of us got together as a triple more often than I was with either one of them alone, and quite frequently I would return from work to find the two supermodels making love without me.\n\nIt was still to be seen if we all would work out in the long-run, but I had hopes.\n\n\"What do you think about all this?\" I asked Cassandra while staring out the window.\n\n\"All what?\"\n\n\"My... my love life. Your life. All this.\" I waved my hands theatrically.\n\nCassandra leaned forward and put her hand on my knee. \"I'm here for you, Jonathan.\"\n\nI nodded but frowned. \"I just don't want you to feel neglected.\"\n\nShe smiled and then lowered an eyebrow at me. \"We've been over this. If I ever feel neglected, believe that I'll let you know. Right now I'm fine. And I'm always here for advice on your... uh... juggling act.\"\n\nI smirked. \"How am I doing so far?\"\n\n\"So far so good. Just keep being you. Love without restraint. Taylor's an amazing woman and Ashlyn has a good heart. Trust that the women around you know what they're doing, Jonathan.\"\n\nI nodded. I was supposedly the master of the house, but the reality was that my ladies had always been in charge. I supposed I liked it that way. \"Okay, can you tell me anything about Taylor's birthday party?\"\n\nShe shook her head. \"Nope. Charlotte's handling all the arrangements. I'm as in the dark as you are.\"\n\nI took a deep breath and then let out a long, long exhalation. I let it go. No use worrying about things that weren't in my control. I could trust that my women would capably handle things. So I shrugged and nodded. \"Fine, where were we?\"\n\nCassandra smiled and opened up her notebook. \"You have a meeting with The Henderson Group at 3pm. They want to discuss...\"\n\n***\n\nTaylor's party started off brilliantly.\n\nMia and Rebecca were some of the first guests to arrive. After the usual hugs and kisses and grab-assing, Mia glared at me. \"So, for YOUR birthday, we fly out to Las Vegas and you get to line us up in a big circle and fuck our brains out; but for Taylor's birthday, you just take over a Manhattan nightclub? Sounds a little unfair.\"\n\nI shrugged. \"For my birthday, I wanna get laid. For her birthday, Taylor wants to party with fifty of her closest friends.\"\n\n\"And THEN I'll get laid!\" Taylor crowed as she raised her Cosmo and then took a healthy swig from it.\n\n\"Hey, no fair!\" Ashlyn swooped in and complained, patting her still-flat belly. \"You shouldn't be able to drink in front of me.\"\n\n\"Price of getting yourself knocked up,\" Kate scolded and batted away Ashlyn's hand which was reaching for Taylor's drink.\n\nUndeterred, Taylor proffered her drink in Ashlyn's face. \"Wanna trade? Cosmo for baby?\"\n\n\"Never,\" Ashlyn laughed.\n\nKate arched an eyebrow at Taylor. \"Well, aren't you supposed to limiting your drinking if YOU want to get knocked up again?\"\n\n\"Yeah,\" Taylor pouted. \"Johnny's got me on a two-drink limit tonight.\" My wife glared at me and then snarked, \"And so are YOU.\"\n\nI held up my glass of water. Just then, Jeff and his blonde Architecture student girlfriend arrived and Taylor was quick to make introductions. \"Kate, Ashlyn, meet Kaitlyn.\"\n\nKaitlyn giggled and then Ashlyn moved forward to hug the younger woman. \"Cute name. Taylor's told us a lot about you.\"\n\nAshlyn then dragged Kaitlyn off while Kate slipped her arm into Jeff's and led them after the giggling pair. Now that we had a free moment alone, I swept my wife into my arms and planted a robustly wet kiss on her lips. Taylor giggled and wrapped her arms around me.\n\n\"Aww... you two are so sweet...\"\n\nI recognized the voice. I turned my head and Taylor was the first to exclaim. \"Maile!\"\n\nTaylor went to greet Maile. Meanwhile, Milena simply walked up and then reached her hand to my crotch, where I'd started to get hard from kissing Taylor. \"Mmm... any chance of a repeat... big boy?\"\n\n\"Back off bitch,\" Taylor snarked, but without any heat. She quickly interposed herself between me and the Czech beauty and then grinned widely. \"It's my birthday and I want ALL the presents.\"\n\n***\n\n\"Good lord, Johnny. It was MY birthday and half the girls in there were falling all over YOU,\" Taylor laughed as we walked back into the house.\n\n\"Your fault. You've built up this mystique around me like I'm some sort of superhuman lover,\" I chuckled. \"And you've got all your girlfriends believing it.\"\n\n\"Honey, half those girlfriends have screwed you and it's no mere mystique. We've trained you well and you fuck like a GOD.\"\n\n\"I'll say,\" Ashlyn cheered.\n\n\"Well, this god is all for my wife, tonight.\" I swept Taylor up into my arms and while she giggled with glee, I started carrying her up the stairs.\n\n\"And we're coming to help!\" Ashlyn called as she, Cassandra, and Charlotte all followed us.\n\nIndeed, the instant I dropped Taylor onto the bed there were four pairs of hands pawing at her, simultaneously groping, caressing, and working to divest her of her clothing. I wound up kneeling by my wife's head, holding it steady while I gave her a passionate, upside-down kiss. Cassandra, my assistant and Taylor's confidant and friend, pulled off the straps to Taylor's dress and was snaking it down to her waist. Ashlyn, fellow model and one of Taylor's best friends immediately latched onto a bare breast with one hand and began kissing her way across Taylor's torso once the dress was out of the way. And once the dress was pulled to Taylor's waist, Charlotte took over to drag the flimsy material all the way off.\n\nNow while our bed wasn't designed for heavy-duty BDSM play like the dungeon or Playroom, we still had a few toys. I caught Cassandra's eye and actually managed to communicate what I wanted non-verbally. She quickly got the attention of the other girls and while I kept Taylor distracted, the three others found the restraints and soon we had them clapped onto Taylor's limbs, tying her up spread eagle across the bed.\n\n\"Wha-?\" Taylor wailed when she realized she was buck naked and unable to move her arms or legs.\n\nI kissed her and then grinned upside-down at my wife. \"Happy Birthday, honey.\"\n\nAshlyn was soon on one side, running her hands over Taylor's body while she began to nurse at one of Taylor's full breasts. Cassandra was on the opposite side, similarly with a nipple in her mouth. And Charlotte was between Taylor's legs, her tongue already embedded into her employer's pussy. Together, the three of them tongue-lashed my wife and soon she was wailing in ecstasy while beads of sweat started to form on her skin.\n\nBut the wailing only lasted a few minutes. Because after stripping off my own clothing, I then knelt by Taylor's head and fed my hard prick into her gaping mouth, which cut off her screaming. She moaned happily and hummed as she started sucking on me, all the while being pleasured by three of her closest friends.\n\nOf course, I could only last so long before we got to the main event. Today was the first day that Taylor should be ovulating again. For the next three days or so, we fully intended to fill her with as many of my baby-makers as possible. So as soon as the triple-teaming by her girlfriends brought Taylor to orgasm, I pulled my cock out and moved around to take Charlotte's place between Taylor's legs.\n\nI grinned when Ashlyn winked at me, still tonguing at Taylor's nipple. And then as I held my wife's thighs to the side, I aimed my cock and then sank it to the depths of her pussy in one diving thrust.\n\n\"Ungh!!!\" Taylor grunted as I filled her. And as the girls released her restraints, Taylor's legs quickly went up around me.\n\nAs I began to slowly pump in and out of the raven-haired supermodel, I lowered my torso. And as I lay my entire weight on Taylor's body, she wrapped me up in her arms and tugged as if to somehow pull me even deeper inside her. I took a few moments to kiss my wife, our passionate liplock punctuated by short bursts to gasp for air. And when I pulled my head away to focus on my cock pistoning in and out of her pussy, Ashlyn was soon there to take my place on Taylor's lips.\n\nSo while I watched the gorgeous redhead frenching my hot brunette wife from an inch away, I found an extra burst of energy and really began to pound my way through Taylor's clenching snatch.\n\nMeanwhile, Charlotte and Cassandra were not idle. The two assistants were quite familiar with each other and a couple of feet to the side of us, the two of them were engaged in a hot sixty-nine with Cassandra on top, her statuesque body smothering and dominating the smaller brunette beneath her.\n\nBut then Ashlyn's voice grabbed my attention again. \"Feel that? That's Johnny's cock. His big, thick, cock is splitting you open. And in another minute, that juicy prick is going to open up and begin spurting thick, hot, gobs of sticky cum into your womb.\"\n\nAshlyn already had a sultry voice that would have made millions from a phone- sex line. Having her naked and husking those words right into my wife's ear was even better. \"Ooh, that was a good thrust, wasn't it Taylor?\" Ashlyn continued. \"Just a few more, and then he's gonna cum in you. He's gonna cum a quart of semen into your womb, and that semen is gonna be filled with a million fast little sperm. And one of those sperm, tonight, is gonna get into your egg and make a baby. Heck, if you're lucky, maybe Johnny'll knock you up with twins! But it's gonna happen tonight Taylor. That's it, buck your hips. Fuck back at him. Because it's gonna happen tonight. Johnny's gonna bathe your womb in sperm. Just a few more. Harder! Deeper! That's it! That's it! Oh! He's cumming! He's cumming in you!\"",
        "And I was.\n\nMy hands gripped Taylor's buttcheeks so hard I may have bruised her. But I used the extra leverage to cram my cock in as deeply as I could while I felt my balls evacuate their load. My ab muscles crunched repeatedly as I fired burst after burst into my wife's cervical cavity, and I swore I could see the little tadpoles racing along in search of that one lonely spot in the darkness.\n\nWhen I was done, Taylor moaned and went limp. I flopped out and lay on my back beside her, panting with the exertion. But my cock had only gone halfway down.\n\nTonight was the night. I may have been 30-years-old, and I didn't have the recovery time of a teenager anymore, but dammit I was gonna cum at least twice more into my wife tonight.\n\nIt certainly helped that Ashlyn took it upon herself to revive me. The gorgeous redhead scooped her hair to the side and then bent over me, tenderly licking up the mingled cum from my shaft before swallowing my cock whole in an effort to get me hard enough again to fuck.\n\nMeanwhile, Cassandra settled her crotch over Taylor's face to keep my wife entertained while Charlotte knelt between her employer's legs, alternately tonguing Taylor's clit and shoving my semen back into her vagina, as if that would do any good.\n\nIn terms of bringing pleasure to the male sexual organ, Ashlyn's supremely talented mouth was a wonder to behold. She knew just how to suck and caress to maximize feeling without becoming painful. And I was certainly helped when the stacked redhead sat up and squeezed my erection between her breasts. After a few minutes of titfucking, my cock was as hard as it was going to get.\n\nBut even if it was ready, the rest of my body was still working up the energy to fuck again.\n\nSo Ashlyn simply climbed aboard, shoving my dick into her wet pussy and she began to ride me. \"Feel my pussy, Johnny,\" Ashlyn crooned while she gazed at me with those piercing blue eyes. \"You've already knocked me up. Your sperm has already met with one of my eggs to make a baby. So that makes this pussy yours. It belongs to you. Whenever you want, not out of obligation, but out of love. You LOVE this pussy, don't you, Johnny? It wants to please you. It wants to bring you joy, to thank you for giving it a baby. So feel my pussy, Johnny. Feel it and think of cumming.\"\n\nI groaned as Ashlyn's sexy voice reverberated in my head. The longer Ashlyn rode me, the more energy I felt. And when I reached my hands up to cup her swollen tits, Ashlyn grinned and decided I was ready.\n\n\"Fuck your wife, Johnny. Fill Taylor up with another batch of cum,\" Ashlyn ordered while she dismounted me. And then her hands were on me as she turned me around. Ashlyn actually took hold of my cock and aimed it into Taylor's sopping wet snatch, and once I slid home, I began to fuck my wife with abandon.\n\nA minute later, I coated Taylor's womb with a second helping of sperm.\n\nAfter two incredible orgasms, I was pretty wiped out. But we weren't done yet. This time, it was Charlotte who was set to task reviving me while Taylor, Ashlyn, and Cassandra all played together. I felt on the verge of going to sleep while the submissive brunette worked me over with tongue and hands, and only the pleasure she was causing in me kept my half-lidded eyes from fully closing.\n\nMeanwhile, the three great loves in my life were getting better acquainted. Taylor and Cassandra had already worked out their relationship. But together they were bringing Ashlyn into the fold. Taylor would always see Ashlyn as a fellow playmate in a sisterly-sort of bond. But Ashlyn had a lot to learn about Cassandra's role and with Taylor's help, the stacked redhead and statuesque blonde got to know each other a little better.\n\n\"Ohhh!\" Ashlyn cried out once, and I looked over to see that Cassandra was wearing one of the strap-ons. I grinned. Taylor was the wife, Ashlyn was the mother of my unborn child, but Cassandra was the one in charge under this roof.\n\n\"Don't hurt the baby,\" I called to them and chuckled. Then I put my hands on Charlotte's head and focused on her oral technique. The politics of the women in my life would work themselves out.\n\nEventually, Charlotte took a cue from Ashlyn and mounted me. I let the slender brunette ride me for a bit, something she very rarely did. Almost always, I was the one on top, physically dominating her as I took her however I pleased, and by extension, just the way Charlotte pleased. But this time, Charlotte was on a mission to bring me to the edge of orgasm while I did as little work as possible. And at that task, the young brunette succeeded admirably.\n\nShe was almost too good. I nearly nutted inside of her.\n\nBut at the last moment, Charlotte pinched the base of my prick and I held out long enough to join the redhead, blonde, and brunette to my side and slam my cock into Taylor just in time to blast a third load inside of her.\n\nAnd this time, I felt I was truly done.\n\nBut there was one more woman left.\n\nI was pretty sure I DID fall asleep this time. But when I awoke, Cassandra and Ashlyn were both working over my cock which was trying to be as limp as possible. And once the two of them were able to bring me to one last erection, Ashlyn grinned and then went to join Charlotte in pleasuring the birthday girl, leaving me alone with Cassandra.\n\nMy wonderful, beautiful personal assistant slid her way up my body and then sank her hips down, drawing my overly sensitive prick inside her body. \"Mmm... I love this, Jonathan. I love just feeling you inside me.\"\n\n\"We should do this more often,\" I grinned.\n\nShe smirked. \"We do it almost every day at the office.\"\n\nI sighed. \"That's only two or three days a week. And most of those are quickies to relieve stress. We should make love more often.\"\n\nCassandra ran her fingers over my face. \"To me, EVERY time with you feels like making love.\"\n\nSomehow, I got my second wind. And keeping myself inside Cassandra, I rolled us over until I was on top as I lightly thrust in and out of this beautiful woman. With her height, she was able to touch our toes together and rub ankles while still kissing my face and rubbing our noses together. And all the while, I pumped slowly in and out of her. After three cums, I could last a good long while.\n\n\"Someday, will you let me give you a baby?\" I asked softly while caressing Cassandra's nose with my own.\n\nCassandra gazed at me with intensity. \"Not yet, Jonathan. Maybe never.\"\n\nI nodded in understanding and leaned forward. \"But maybe?\"\n\nA small smile crossed her face. \"Maybe...\"\n\nThat was all I needed to dream. And I closed my eyes and really began to drive myself into the statuesque blonde, feeling her massive tits crushed against my chest, feeling her tight pussy squeezing around my cock. And I imagined filling Cassandra with my cum, imagined making a baby inside of her. And all of a sudden I was close to my climax.\n\n\"Out, out, Jonathan,\" Cassandra tapped my shoulder and I groaned in agony as my fantasy was shattered. And then I felt Charlotte's hand on me as I pulled out of my blonde assistant and moved over to my wife.\n\nSomeone had gotten a wedge from somewhere to incline Taylor's torso, using gravity to keep her pussy plugged full of my sperm. And so with her pussy angled up to meet me, I pushed my cock down and held Taylor's legs while I thrust on my final path towards climax.\n\nCharlotte then moved between Cassandra's legs, her agile tongue and fingers finishing off the orgasm I'd brought the blonde so close to, but not far enough. And soon I heard the moan of ecstasy as Cassandra cried her release. I would pay her back later.\n\nMeanwhile, Ashlyn stayed next to her friend, caressing her softly and whispering. \"Here's your husband, again. Only for you, Taylor. Four orgasms for you. He wants to give you this baby.\"\n\nMy wife held her arms out to me and we came together for a loving kiss. It wasn't hurried, it wasn't passionate, it was just love.\n\n\"I love you, Johnny.\"\n\n\"I love you, Taylor.\"\n\n\"Fill me up, honey. Let it go.\"\n\nI gave my last few thrusts and released. My load was far from a quart, but I managed three good spurts to join Taylor's already saturated pussy. If she wasn't inclined up, I'm sure she would have coated half the bed with both our love juices.\n\nAnd when my cock finished its final dry heaves, trying to shoot out semen that wasn't there anymore, I flopped over next to my wife while she turned her head to kiss me with thanks.\n\n\"Thank you,\" Taylor sighed.\n\n\"My pleasure,\" I groaned, meaning it with complete sincerity. And then I closed my eyes. Finally, my girls were going to let me go to sleep.\n\nBut just before unconsciousness took me, Taylor laughed. \"Get your rest, Johnny. We're all starting again tomorrow.\"\n\n***\n\n*FEBRUARY*\n\n\"Are you serious?\"\n\nIn response, Taylor held out the home pregnancy test. There were two clear pink lines, bold and almost red.\n\n\"Keep your fingers crossed,\" my wife grinned and then leaped into my arms.\n\n***\n\n*MARCH*\n\nI held out my hand, and Ashlyn reached out and took it with a smile. Gently she swung into the backseat of the stretch Rolls Royce limo. I closed the door and then circled around to my side. The driver held my door for me and I slid into the other seat. Taylor and Cassandra were already seated inside.\n\n\"Are you ready?\"\n\nAshlyn exhaled slowly, and then fixed me with a hopeful smile. \"Ready.\"\n\nIt was quiet as we drove into town. Cassandra was getting updates from some contact or another on her Blackberry. We were about five minutes away when she warned us, \"There's quite a crowd.\"\n\nAnd then we had arrived. This was our test. This was me announcing to the world the way I lived my life. It wasn't conventional. Most couldn't afford to pull it off. But it was the way we lived our lives together.\n\nCassandra had called ahead to this posh restaurant, making the necessary reservations for the ultra-exclusive eatery. I imagine it took less than five seconds for the Maitre'd to call his media contacts with the scoop.\n\nSo when the limo pulled up outside, there was a veritable wall of photographers blocking the way. The burly bodyguard from the front passenger seat and driver both got out to try and clear a path while cameras were already pressed up to the tinted windows.\n\nThe instant my door opened, the flashes strobed so fast I was blinded by the wall of white light. I managed to circle around to Ashlyn's side of the car and helped her out.\n\nThe light flashes were even heavier on her side. People already knew I was coming. But the reservation for four made no mention of what was going on. Was it just a group of friends on the town? Was it something completely innocent?\n\nBut the fact remained, this restaurant was a well-known prime spot to be photographed. The fact that I was so bold as to make the reservation in my own name said that I had something I wanted public. And every paparazzi in town wanted to be in on whatever Jonathan Kwong... billionaire, wanted to make public.\n\nAnd the instant Ashlyn's face came into view the paparazzi crowd surged forward all at once.\n\n\"Ashlyn! Ashlyn! Over here!\"\n\n\"Ashlyn! Are you with John now?\"\n\n\"John! Where's Taylor?\"\n\n\"OHMYFUCKINGGOD! Are you pregnant?\"\n\n\"John! John! What the hell's going on?\"\n\n\"She's pregnant! She's pregnant!\"\n\nI didn't bother to answer. A second later, Taylor emerged from the limo and the flashbulbs seemed to part right down the middle so that half were on Ashlyn and half on Taylor. Both were experienced models and used to the limelight, but the sheer volume of flashes were blinding. Both women had to hold up their hands to shield their eyes and I moved in between them to take them both by the arm. The bodyguard and driver blocked the way as we began moving towards the restaurant.\n\nA few more flashes went off behind us when Cassandra emerged, but she'd long been considered semi-invisible by the paparazzi and the photogs quickly returned to focusing on me and the two women on my arm.\n\nWe stopped as a threesome and posed just outside the restaurant doors. In the dress we'd chosen, the roundness of Ashlyn's belly was clearly pronounced. I could only imagine how crazy they'd go if they knew Taylor was pregnant as well, even though she wasn't showing yet. Forty-million photo flashes later, I walked us into the restaurant. And then finally we were inside.\n\nIt took my ladies just a minute to calm down.\n\n\"Worse than you expected?\" I asked.\n\nAshlyn shrugged. \"I'm used to it,\" she said with a brave face, but I only half- believed her.\n\nTaylor squeezed her hand. \"The die is cast. No going back now.\"\n\nAshlyn smiled at me and Taylor. \"I wouldn't want to. I love you guys. I love this family, and I'm so happy that you let me be a part of it.\" \n\n***\n\n*APRIL*\n\n\"Ladies and Gentlemen, welcome to the Playroom.\" With a flourish, our two french maids pushed the double doors open and I bowed theatrically. \n\nJeff and Kaitlyn were the first ones through the door. Jeff flashed a grin at me and Kaitlyn paused to peck my cheek before lancing her arm through her boyfriend's and the two practically bounced into the room. They were old hat at these kinds of parties. At least now Kaitlyn was twenty-one and could legally drink.\n\nMia sauntered forward and grinned at all her old favorite toys and sex furniture like the wedges and ramps. She gave me a pixie wink and then skipped inside.\n\nRebecca and her new boyfriend Jack were the next ones in. Jack was the man for whom Rebecca had left the house those months ago. He was another imposing, well-built young man with big muscles and a bigger cock, just the way Rebecca liked them. Their relationship had progressed to the point where Rebecca had invited Mia to join them, and now it was the new boyfriend's first test at one of our parties. Rebecca was already drooling at the thought of getting the three J's to triple-team her.\n\nIn any case, Jack's eyes went wide as he took in the room. And then with a grin he sauntered forward while Rebecca headed straight for the toy box.\n\nCharlotte nodded to Taylor and then she headed for Jeff and Kaitlyn.\n\n\"It's too bad Kate couldn't make it,\" I said wryly.\n\n\"Don't be greedy,\" Taylor teased. \"Kate's boyfriend is a nice guy. Give it a few months and we'll see if he's open-minded enough to join us. But even if he isn't, she deserves to have 100% of his attention for as long as she wants.\"\n\nI nodded and looked around. It wasn't like I was lacking for eye-candy.\n\nOur guests streamed across the room, hips immediately shaking to the music and eyes inexorably drawn to the porn videos playing on the TV screens.\n\nWe four were the last into the room. Ashlyn, with her four-months pregnant belly almost obscenely protruding from her otherwise slender form, slipped her right hand into Taylor's left, my wife sporting a ten-week bulge of her own. The two friends intertwined their fingers together and smiled at the spectacle before them as Jack picked up Mia and carried her screaming into the lovenest. Meanwhile, Charlotte was getting reacquainted with Jeff while Kaitlyn stripped Taylor's cute assistant from behind.\n\nI let my hand slide into Taylor's right hand from the other side. And just behind me and to my right, Cassandra stepped up and rested her hand on my shoulder, reminding me that she was always there.\n\nI smiled. All was as it should be.\n\n\"Heyyy, John!\" came a sultry voice from my right.\n\nI turned to see Rebecca fully naked and bent over at the waist, her feet spread to the sides so that her body formed an A-frame. Her lithe body looked toned and beautiful, her bubble butt sticking in the air seeming to call to me of its own accord. Rebecca winked at me from between her knees and wiggled a bottle of Astroglide in her hand. \"Mind if I borrow him, ladies?\"\n\nAshlyn grinned, Taylor giggled, and Cassandra merely planted her hand on my shoulder and gave me a healthy shove forwards. I glanced back to the three loves in my life with a happy smile on my face.\n\nYeah, all was as it should be.\n\n***\n\nSOMEDAY: JOHN BILLIONAIRE III "
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "orgy",
        "mff",
        "anal",
        "pregnancy"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-billionaires-life-ch-07"
}