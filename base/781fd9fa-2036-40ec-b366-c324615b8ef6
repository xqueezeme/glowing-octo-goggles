{
    "title": "Surefoot 07: Uncertainty Principle",
    "pages": [
        "<blockquote>\"The first principle is that you must not fool yourself, and you are the easiest person to fool.\"\n\n-Richard Feynman</blockquote>\n\nStarbase 74, Fourteen Months Ago:\n\nThe Caitian woman entered the broken room, not seeing its occupant but hearing and smelling him. \"Good morning, Captain. My name is Kami Shall, your new Counselor.\"\n\nHe didn't answer.\n\nShe stepped forward and drew her tail around, allowing the door to slide shut behind her and lock, and allowing the guards outside to relax. She looked around. They had confined him to these quarters rather than a cell, allowing him more furniture to smash and overturn. She noted the mirror mounted on one wall, now looking like some fractal art display with all the cracked patterns given it with repeated punches. \"I like what you've done with the place. Your previous Counselors told me about it, but their words didn't do it justice.\"\n\nStill no answer.\n\nShe knew where he was: even without her nose and ears, she saw part of his foot sticking out from behind an overturned table in the corner of the room. Her nose confirmed what she had read in his file: male, middle-aged, and the victim of abuse and neglect. Her nose told her more, smelled the anger and fear - an understandable reaction, given his terrible circumstances. \"Do you mind if I come close to see you?\"\n\n\"Yes,\" he finally replied, sounding numb.\n\nShe paused. \"Well, I can stay where I am, but I won't go away. It might be nice if we were face to face, so I can see who I'm helping.\"\n\n\"You can't help me,\" he declared.\n\n\"Oh, you shouldn't have said that. All my life, whenever I've been told I can't do something, my stubborn defiant streak rises up, and I do everything in my power to prove them wrong. 'Kami, you can't climb those rocks.' 'Kami, you can't make it in Starfleet.' 'Kami, you can't bend forward enough to lick yourself.'\" After a pause she clarified, \"Actually, I haven't managed that last one, but it's not for lack of trying-\"\n\n\"Go away.\" There was a growl lacing his words.\n\nShe approached, ignoring her raised hackles and the warnings from Security about how aggressive he had become since his confinement pending his retrial. \"Sorry, I didn't hear that, let me come closer.\"\n\nHrelle was sitting on the floor behind the upturned table, his back to the wall, staring at the far corner of the room. She saw all the injuries she expected: the missing tail and claws, the bits of ear tips, the scars on his face and muzzle, the gaunt frame and gaunt expression. But now she noticed the patches on him where fur had been pulled out - not from shaving or natural hair loss, but ripped out at the roots and dropped around him, leaving bloodied patches on his skin.\n\nShe forced down her reaction at this, a truly foreboding sign of distress among their people. Still, this was to be expected, too; after years focused on merely surviving and escaping slavery, now that he had accomplished it, he could face what he had undergone - and what he had lost.\n\nAnd that could be the tipping point for stronger minds than his. \"Esek Hrelle, Clan Hrelle'Deskin'Thrass'Miran'Deelkin... did I pronounce it right? No wonder we shorten them. You're from the R'Trerah Archipelago, aren't you? Fisherfolk, yes? They say you can never get the smell of the salt air out of your fur. I've never been myself, but I used to read those old stories about the sailing ship from there. The Surefoot, I think it was called? My clan is from Csirl. Nothing special, just desert and rocks, but to hear my father tell, it was the birthplace of the Great Mother Herself-\"\n\n\"Do you ever stop talking?\" he muttered, still not looking at her.\n\n\"Sure, when you start talking back.\" Kami slid down, facing him, her back against the opposite wall and her tail curled around to rest on her lap. \"I understand you were offered a chance to contact your clan, but you declined.\"\n\nHe looked away. \"My clan disowned me when I joined Starfleet.\"\n\n\"Their loss. But at least Sasha is coming.\"\n\nMention of his human stepdaughter's name made him react, despite his efforts not to. \"She shouldn't.\"\n\n\"I spoke to her this morning while she was waiting for a transport off of Vulcan. She'd been travelling non-stop for the last four days, from Earth to Starbase 12 to Vulcan, and she has another three days and four starships to go; fortunately, the Starfleet Academy Superintendent pulled some strings, and you've got a lot of friends out there.\" She smiled. \"Even if you didn't, I don't think the might of the Klingon Empire itself could keep her from being with her Dad again.\"\n\nHis expression tightened.\n\n\"She's a beautiful young girl,\" Kami continued. \"I bet her mother was beautiful-\"\n\n\"Send her back.\"\n\n\"Why?\"\n\n\"I don't want to see her.\"\n\n\"Liar.\"\n\nNow he looked directly at her, his gaze dark and dangerous. \"Her mother *was* beautiful. And kind, and funny, and warm, and smelled like honey. And I murdered her. Her, all the people who died on Salem Four, my crew-\"\n\n\"Still lying.\"\n\n\"Starfleet doesn't think so. They're retrying me-\"\n\n\"No, they're reopening the case. You were tried and convicted in absentia of collusion with the Bel-Zon. But now they know the truth. This is just a formality.\"\n\n\"Tell that to the guards outside.\"\n\n\"They're outside because you chose to redecorate your room in Early Chaos, and have frightened off anyone else who approaches you.\"\n\n\"I killed Hannah!\" he bellowed, the tears welling up in his eyes.\n\n\"No, you didn't.\" Kami replied calmly, fighting her natural urge to mirror the tremendous sorrow and rage she felt trapped inside him. \"You were tortured, and the Bel-Zon employed a telepath to probe your mind for Salem Four's security codes. They murdered Hannah. And all the others. No one's blaming you - except yourself.\"\n\n\"That's enough for me.\"\n\nShe chuckled. \"And for me, too. I'm going to have my hands full just fixing you.\"\n\n\"You can't fix me!\" he declared loudly. \"I'm a monster! I HURT PEOPLE! Now get out, before I hurt you too!\"\n\nKami regarded him silently a moment longer, before helping herself back to her feet, swaying slightly as if dizzy. \"As you wish, Captain. But if you change your mind- ARRRGH!\" She had been starting away when she suddenly doubled over, clutching her abdomen, before dropping to all fours, crying out in pain. \"Seven Hells- Help me, please!\"\n\nHe was at her side like a flash. \"What is it, what's wrong?\"\n\nShe looked up, face screwed up in pain. \"My baby- It hurts- Great Mother, IT HURTS!\"\n\nConcern drove him as he looked her over, before rising back to his feet. \"Hold on, I'll get help- Guards! GUARDS!\"\n\nThen she stopped and lay on her side, reclining leisurely. \"Hmph. Some monster you are.\"\n\nHe stopped. \"What? Your baby- you said it hurts!\"\n\n\"Yes - my baby is seventeen years old and a pilot on Cait, and just thinking about how handsome and wonderful he is and how much I love him... well, it hurts.\"\n\nHe stood there, aghast. \"You were pretending?\"\n\n\"I was acting. My father used to say I was the best little actress he ever knew.\"\n\nShock quickly boiled into anger. \"You... you kussik!\"\n\nShe rested on one elbow as she looked up at him, smiling. \"My father used to say that, too, until his husband started smacking him for using bad language in front of cubs.\"\n\n\"WHY WOULD YOU DO THAT?\" he roared.\n\nShe remained insouciant. \"A number of reasons, really. Firstly, to see that look on your face; it was priceless. Secondly, to demonstrate that I can see through your shit as easily as if you were wearing a sign around your neck; you're not a monster, just a man who's been hurt more than anyone can ever imagine - but is not beyond saving, to judge from his reaction just now to a stranger in distress.\n\nAnd finally, to show you that I'm not like any other Counselor you'll have met. I'm not being fooled, I'm not being intimidated, I'm not going away, and I'm not stopping until you no longer need me.\" She sighed. \"Now, your little girl will be here in a couple of days; we don't have much time to make you presentable.\" She reached out and patted the floor. \"Sit.\"\n\n\"What, down there?\"\n\n\"You've wrecked every piece of furniture in here except for the bed. And there's no way in the Seven Hells I'm ever going to be caught lying in bed with you.\"\n\n*\n\nUSS Surefoot, Deck 1, Captain's Quarters, Now:\n\nHrelle and Kami lay together in the dark, their combined scents mingling under the covers, Hrelle's hand cupping one of her breasts. \"Are you okay?\"\n\nShe made pleasing sounds in response, breathing in slowly and deeply. But then she murmured, \"Oh, Esek... what in the Seven Hells have we done?\"\n\n\"Therapy.\"\n\n\"That's not funny.\"\n\n\"It's not meant to be.\"\n\n\"I mean it, Captain. I'm your Counselor, this is a serious breach of ethics. If anyone found out-\"\n\nHe sighed, brushing up against her, stirring a little again as he pressed against her tail.\n\n\"What am I gonna do with you?\" she asked plaintively.\n\nFor a moment, there was only the soft hum of the nearby heater.\n\nThen he replied, \"Marry me.\"\n\nKami lay there, absolutely still. She'd even stopped breathing.\n\nHrelle shifted, despite the effort to keep the blankets still and keep swaddled in their heat and scent from their sex. \"You didn't fall asleep, did you? I thought you might have had more stamina than that-\"\n\n\"Computer: Lights!\"\n\nHrelle blinked in the sudden illumination, as Kami twisted around in place to leer over him, her mane draped around her taut face, her eyes wide. \"Is that meant to be a joke?\"\n\nHe shook his head, drawing back until his head pressed harder against his pillow. \"No. No, Kami. I wouldn't joke about something like this.\"\n\n\"Say it again,\" she challenged.\n\nHe breathed in. \"Marry me.\"\n\nShe seemed to study him for a heartbeat more - before kicking off the covers and rising to her feet, stomping about the sleeping area of his quarters, around the portable heater standing in the centre of the room providing comfort in the midst of the Grey Alert. Then she stopped again, baring her teeth. \"Is this because of what we just did? Are you being chivalrous or something?\"\n\nNow he sat up, confused by her response. \"No, I'm not. I asked because I love you. Because I've loved you for a very long time. I'm not telling you anything new, am I?\"\n\n\"You've never said anything before!\"\n\n\"Did I have to?\"\n\n\"It would have been nice to hear it before you proposed to me!\"\n\nHrelle slipped out from under the covers now, rising naked and joining her. \"I'm sorry, Kami. You're right, I guess I should have said something sooner. I didn't plan on proposing to you. I didn't plan on having sex, either. Maybe I'm still riding on the crest of that hormone surge from our latest arrival-\"\n\n\"Oh, so now you're saying you didn't mean what you said or did-\"\n\n\"ENOUGH!\" he snapped. \"Mother's Cubs, I have loved you from the first day we met, when you saw through my lies and my shields and the terror I'd felt at having to face what I've gone through before my escape! You put me together again. You gave me life.\"\n\nShe frowned at him, her anger subsiding. \"You put yourself together, idiot. And I didn't give you life, that makes me sound like your mother, and that's just creepy.\" She began pacing again, slowly now, her tail swishing behind her. \"And it's creepy enough already, with you being my patient. Starfleet Medical frowns on their staff having sex with their patients; I could have my licence to practice revoked.\n\nIt's my own fault. I let it happen. Seven Hells, I encouraged it: the flirting, the nudity, the sleepovers. I told myself it was just our being Caitian, no one else would understand.\" Her face took on an anxious expression now. \"How could I possibly be objective? I might have avoided problems or overlooked aspects of your recovery that could do you serious psychological damage in the long term.\"\n\nHe rose now from under the covers, joining her in standing. \"You told me yourself not an hour ago that I was not the man I was. Remember? 'You're a good, decent, stable, loving man'-\"\n\n\"As long as your file recommends Compulsory Counseling, I should have kept my distance more. I've... I've let you down, Esek.\"\n\nHe swallowed, his eyes wide and contrite. \"No, it was me, Kami. I'm sorry, I was being incredibly selfish. Let's just forget about-\"\n\n\"NO!\" she cried, suddenly stabbing a finger at him. \"Don't you dare try to take that back! Don't you dare try to take that back from me! It's too late! It's...\" She clutched him, arms around him, squeezing him for dear life, the tears on her cheeks wetting the fur on his chest as he embraced her back, her voice muffled against him. \"You try and take that away from me now, I promise you the Great Mother Herself will have your balls for breakfast!\"\n\nHe stroked her mane. \"She won't get much of a meal out of them right now. They're pretty drained.\" He nuzzled against the side of her head. \"So... whatever happens, is your answer Yes?\"\n\nShe started to reply - but then checked herself, wiping her furry face. \"No. There's work to do first.\"\n\n\"At 0330 Hours?\"\n\n\"I'm not coming anywhere near you again, not until we get the Compulsory Counseling orders dropped on you; that requires a second Counselor's authorisation, and I think I know who to call for that.\"\n\n\"Again, I ask: why the hurry?\"\n\nShe stared at him. \"Because I don't want to lie to T'Varik or Sasha or anyone else onboard. And I don't want to put any of them in the position where they have to lie or cover for us to Starfleet Medical. Do you want to do that?\"\n\n\"Of course not.\"\n\nShe reached for her clothes and began dressing. \"Get back to bed. Counselor's Orders.\" She paused and smiled. \"Maybe we can get married on Cait after my cub?\"\n\n\"Or even at the same time? Since all your clan will be there already?\"\n\nShe snorted. \"My father would smack us back into orbit for wanting to take the spotlight away from his grandcub's Big Day.\" Fully dressed now, she returned to him, nuzzling his cheek and giving him a little nip on the neck. \"Good night, Esek. I love you.\"\n\nHe embraced her again. \"I love you too.\"\n\nHe kept his smile until she departed, before shivering and returning to bed. \"Computer: Lights Out.\" Back in blackness, he lay there, fighting the temptation to fall asleep, his own thoughts as frantic as Kami's.\n\nHe had made love with her. He had proposed. Both actions out of nowhere, without warning.\n\nHe wasn't sorry in the least. He loved Kami. But he was still awestruck that he had done it at all.\n\nAnd by how his impulsive act could still go horribly wrong for them.\n\n*\n\nCounselor's Office, 0400 Hours:\n\n\"I'm sorry to disturb you at this time, Bill.\"\n\nThe human male on the desktop screen had a round, pleasant face, large ears and receding, greying hair, and now smiled at Kami. \"I always have time for my favourite Caitian. But I do have to wonder why you're calling for a co-sign, instead of just putting it through the usual channels?\" The tone in Commander Hilliard's voice made his question sound less rhetorical and more mandatory.\n\nOut of sight of the screen, Commander T'Varik sat, cradling a hot cup of Vulcan tea and silently watching her friend converse with the Starfleet Medical Adjutant. Kami ignored her, focusing on the screen and smiling. \"Well, Bill, I've been really pleased with Captain Hrelle's progress, and though he still needs some Counseling, I think it would be important for him to feel like he could come to me voluntarily - you know how these Captains get.\"\n\nThe man chuckled. \"Yes, they hate the notion that they need help from anyone.\"\n\nShe smiled. \"Exactly. And removing the requirement for mandatory counseling sessions with him will also free me to focus more on the well-being of the cadets and crew.\"\n\nHe grunted good-naturedly. \"Fine. Send me your files on him, I'll give them the once-over and rubber stamp the clearance. Hilliard out.\"\n\nAs the screen went blank, Kami leaned forward and reached for her own cup of tea while it was still hot, grateful for its warmth. \"How did you make this, with the power still out?\"\n\n\"A hand phaser on a low setting to heat the liquid. How are you feeling now?\"\n\nKami smiled. \"Relieved. I'll be more relieved when Bill clears Esek. I'll feel less guilty.\"\n\nT'Varik eyed her silently.\n\n\"What?\"\n\n\"You still lied to your friend. And having him co-sign Captain Hrelle's clearance now will not change your earlier actions.\"\n\n\"I know,\" Kami admitted. \"Neither of us planned this. I mean, one moment, I'm telling him that growing old is part of living, and that he was better off spending his time celebrating being alive. The next moment, we were both... celebrating.\"\n\n\"Nevertheless, you are both responsible adults, though you often act otherwise. It was foolish in the extreme.\"\n\nKami frowned. \"I thought you were my friend.\"\n\n\"I am. But I refuse to be a palliative friend. I will not spare you the harsh truth, especially given my position onboard as First Officer and Liaison to our cadets.\"\n\n\"What does that have to do with it?\"\n\n\"Your relationship with the Captain, including your 'sleepovers', has been a source of idle gossip among the cadets and crew. This is an understandable occurrence for a ship of this size, and very few onboard are aware that the Captain is also your patient. Were this information released, however, it would certainly have an adverse affect on how the two of you are perceived. At any rate, given your own confessed feelings to me about Captain Hrelle in the past, it was reckless of you to allow a situation to arise where you might succumb to temptation, as you did tonight.\" She paused and added, \"I am sorry if my criticism has damaged our friendship-\"\n\n\"No. It hasn't.\" She set aside her cup and rubbed her temples. \"I screwed up. I should have kept a more professional distance. You're right. I'm the worst.\"\n\n\"I did not say that,\" T'Varik denied mildly. \"Having dealt with numerous Counselors at the Academy, I can confirm that, while your manner is... singular, your efficacy is obvious, especially with the cadets, and you have provided me with great insight - no mean feat, I can assure you. As for your relationship with the Captain, it is annoying in its playfulness. But both of you are responsible adults. Usually.\"\n\n\"Yes.\"\n\n\"You regret your actions tonight, and have taken steps to rectify them.\"\n\n\"Yes.\"\n\n\"And you have made no lasting emotional entanglements as a result of them.\"\n\nKami didn't respond.\n\n\"What haven't you told me?\" T'Varik asked.\n\nKami breathed out, smiling. \"Does it count as 'emotional entanglement' if he proposed marriage to me, and I didn't exactly turn him down?\"\n\nT'Varik stared at her before declaring, \"You vex me.\"\n\n\"In my defence, I was still reeling from the most mind-blowing orgasms I have experienced in years! He was so strong, but also gentle! And he was so hard, too, you wouldn't believe-\"\n\nT'Varik raised a hand to cut her off. \"Counselor, Vulcans are raised to believe that the pursuit of knowledge is an ideal without limits, that one cannot possess too much information. I have since confirmed that this is an erroneous belief. As much as I value our friendship and the ability to share confidential information, I do not require details on the Captain's... tumescent properties.\"\n\n*\n\nAlpha Squad Quarters, a Day Later:\n\nSix cadets sat on the floor in various stages of undress, cards in hand and discarded clothes in a pile next to them, while a seventh sat separately in a chair, fully clothed and blanketed, hot-phasered drink in her hands, watching the game with diminishing interest. \"Seriously, are you schmucks really going to keep playing in this cold?\"\n\nNeraxis was down to her bra and shorts, but she remained cheerful. \"Bolians have no problem with these temperatures. You're just jealous that you can't play.\"\n\n\"Yeah,\" Sasha agreed, sipping at her cocoa as she watched the shivering gamblers. \"You see right through me. Here I am, keeping warm and toasty when I could be one of you idiots losing your bits to frostbite.\"",
        "Left of Neraxis, Giles Arrington, clad in only his vest and boxers, rearranged the cards in his hand. \"I'm relying on you to warm me up again, Sash.\"\n\nShe grunted. \"Rely on warming yourself up tonight, stud.\"\n\nOn Neraxis' right, Eydiir Daughter-of-Kaas, half her civilian clothes on the pile, was frowning at her cards. \"That shouldn't be a problem for him. He had plenty of practice of that when he was still living with us.\"\n\nHe shook a finger at her. \"Hey, show some respect to a Squad Leader.\"\n\nThe Capellan woman offered him a finger of her own. Beside her, Jonas Ostrow was the most dressed, and looked pleased at that. \"Come on, you losers, let's see your cards.\"\n\nOpposite him, Kitirik, wearing only shorts and a thick woollen hat on his mottled reptilian head, looked up. \"Friend Jonas, you are sounding uncharacteristically ruthless. Might I take the opportunity to congratulate you on your proficiency at this game?\"\n\n\"Sure, sure, but show us your cards while you're doing it, buddy.\"\n\nNext to Kitirik, the newest member of Alpha Squad, the Caitian named Rrori, like Giles dressed only in vest and boxers, dropped his cards in the pile. \"I am cursed tonight.\"\n\nThe others followed suit, as Jonas displayed a royal flush and cackled. \"Come on, losers! Pay up!\"\n\nThe others began removing items of clothing and adding them to the pile. Jonas chuckled - until he saw Neraxis remove her bra and contribute it, which was when he found something else to look at.\n\nThe Bolian cursed good-naturedly. \"There you go, Scrappy, get a good eyeful of my bouncers, like you've always wanted to.\"\n\nJonas was gathering up the cards. \"That's okay. In fact, if you want, you can put something back on.\"\n\nRrori had removed his vest, revealing a furry, muscular torso of golden-white hue, the tufted tip of his tail curling around to sit in his lap like a pet. \"That's not fair! Why make an exception for her?\"\n\n\"Because he loves me,\" Neraxis teased, grinning.\n\n\"No I don't,\" the young man blushed in denial. \"I mean, not... I mean... Shut up.\"\n\n\"But how do you manage to be so successful, Friend Jonas?\"\n\nJonas was shuffling the deck once more, thankful for the change of subject. \"I didn't just learn engineering from my mother's salvage crew, Kit. Is there a casino at Starbase 154? I might go there and raise enough money to buy a starship of my own, and you can all come and work for me.\" He chuckled.\n\n\"I thought you'd be more interested in visiting the cathouse there,\" Giles quipped.\n\n\"The what?\" Rrori asked.\n\nGiles flushed. \"Sorry, no offence. It's another word for, uh...\" He looked to the others for help.\n\n\"He refers to the brothel,\" Eydiir clarified, her tall, sturdy frame hugging her vest and shorts. \"Beaudine, Ingalls and Pruhl have talked about it.\"\n\nJonas was fumbling with his cards, trying to recover. \"Yeah. I, ah, might give it a miss.\"\n\n\"I heard they have women and men from a dozen different races,\" Giles commented, smiling. \"Human, Andorian, Bolian, Draylax, Deltan-\" His smile dropped at Sasha's look. \"Not that I'm interested in going or anything, of course.\"\n\n\"I will grace it with my presence,\" Rrori declared. \"I have much love, and credits, to offer.\" As the others laughed, he put a reassuring furred hand on Jonas' shoulder. \"Do you wish to accompany me, my friend? We should celebrate your first time.\"\n\nJonas blushed. \"Who says it'd be my first time?\"\n\nThe others looked up at him.\n\n\"I meant no insult,\" the Caitian insisted. \"For everyone and everything, there is a first time. Come, it will be my treat.\"\n\nJonas blushed more, not able to look up at anyone. \"No thanks, I'm okay. I'll stick with gambling.\"\n\n\"He doesn't need to go if he doesn't want to,\" Sasha assured them, though it was obvious who she was really talking to.\n\nKitirik's eyes widened. \"Friend Rrori, having no such carnal drives I would probably not benefit from being a customer. But do you think I might be allowed to observe one of the transactions?\"\n\nRrori nodded. \"I would be delighted to let you watch me! You will learn much from one with my skills.\"\n\nSasha's eyes widened. \"Really? You're okay with that?\"\n\nThe Caitian beamed. \"Of course! I might even become the subject of one of Kit's rather impressive scientific reports!\"\n\nThe Qarari brightened. \"An excellent idea, Friend Rrori! Think of the extra credit I might earn!\"\n\nEydiir grunted. \"I'm sure Commander T'Varik will enjoy reading that one.\"\n\n\"I think she will,\" Rrori agreed without irony. \"Females and males have found me most virile and desirable.\"\n\n\"Even when they learn your first name is 'Meow'?\" Sasha teased.\n\nHis pride visibly deflated in front of them. \"Mine is an ancient and distinguished name among my people. It does not have the same connotations that it does among you dirty primates.\"\n\n\"Are we playing cards, or talking about... sex?\" Jonas asked, dishing out a new hand.\n\n\"Ignore them, Scrappy,\" Neraxis assured him, as the Bolian indicated her ample breasts. \"What do you want with another woman, when you've got me around?\"\n\nThe door chimed, and Sasha called out, \"Come in.\"\n\nCaptain Hrelle stepped inside. \"Sorry if I'm-\" He looked at the near-naked cadets sitting on the floor. \"-Disturbing anything.\"\n\nNeraxis turned a darker shade of blue than usual, lifting up an item of clothing and pressing it against her chest. \"Sorry, Sir, I, uh, didn't expect you here!\"\n\nHe smirked. \"No kidding. Don't worry, this isn't worse than what we used to do at your age during Grey Alerts.\"\n\n\"What did you used to do?\" Sasha asked, but then shook her head. \"Don't tell me, I don't want to know-\"\n\n\"We masturbated until our arms fell off.\"\n\nSasha rolled her eyes as the others laughed. \"Oy, I literally said 'Don't tell me'!\"\n\nHe regarded her, more soberly asking, \"Sasha, if you're not busy, I was wondering if we could have a little private talk? Something important has happened.\"\n\n\"Oh? What's happened?\"\n\nHe breathed in, looking nervous now. \"I've... I've been promoted to Admiral.\"\n\nEveryone looked up at him, dumbfounded. Sasha murmured, \"You're kidding.\"\n\n\"Yes. Come on, Runt of the Litter, let's go someplace.\"\n\nShe rose, motioning to the Squad's sleeping quarters, shutting the door as they entered, her expression more serious now. \"Is there something wrong, Dad?\"\n\nHe shook his head, taking a seat on the edge of one of the lower bunks, having to bend forward a little as she sat beside him, lit up from a nearby lantern. He sniffed. \"Teenagers. I don't know how Rrori can stand it. Does he use nasal suppressants or-\"\n\n\"Dad,\" she prompted softly.\n\nHrelle sighed. \"This is stupid. Usually I go to Kami to talk about things, but... this is about her. And me. And you. I suppose I could talk to T'Varik, but maybe...\"\n\nShe reached out and draped her hand over his, feeling his fur, his heat.\n\nHe stopped and gathered his thoughts, before finally continuing. \"You know I love your mother, Sasha. I loved her the first time she called me a putz and told me to stick my head up my ass. I loved her scent and her chin and her laugh and the little snores she made as she was just drifting off to sleep.\" He stared at some discarded socks under the opposite bunk. \"I always will-\"\n\n\"And you love Kami,\" she finished, her gaze following his.\n\n\"You knew?\"\n\n\"It was pretty obvious. And she already told me that she loved you.\" She smirked. \"I'm not a little girl anymore, Dad. You can't surprise me.\"\n\nHe nodded. \"I asked her to marry me.\"\n\nSasha went silent.\n\n\"Sash?\"\n\n\"I was wrong, I guess you can surprise me.\"\n\n\"Sasha-\"\n\n\"What did she say? When you asked?\"\n\n\"She didn't. She wanted to have me cleared from Compulsory Counseling first.\"\n\nShe nodded.\n\n\"I'm sorry. It's a lot to drop in your lap.\"\n\n\"Yes, it is.\"\n\n\"If you don't want to talk about this any longer, I'll understand-\"\n\n\"No. It's okay. It's been a long day, and I want to go to bed. When you go back out, send Giles in.\"\n\n\"Yes, Ma'am.\" He drew in and brushed against her face, a Caitian kiss. \"Good night, Sash.\"\n\n\"Good night, Dad.\"\n\nShe was barely undressed and drawing back the covers on her bunk before Giles entered. \"Hey, is everything-\"\n\nShe stopped and raised a hand to him. \"I don't want to talk about it. It's nothing bad, nothing terrible, everything will be okay, but I don't want to discuss it now. I just want to go to sleep. You should go back to Beta Squad quarters.\"\n\n\"Are you sure?\"\n\n\"Yes; you need to spend more time with them anyway. And tell the others they can come to bed whenever they want, but I don't want to talk about it with them either.\"\n\nHe stared at her for a moment, before nodding. \"Okay. Good night, Sash.\"\n\nShe nodded back and climbed into bed as he departed, glad he didn't try to insist on talking, or come in for a kiss, or something else she was sure he thought would have been a good idea.\n\n*\n\n\"USS Surefoot, Captain's Personal Log, Stardate 36308.21: We have completed our inspection tour of the Sensor Buoys on the outskirts of the Malbruk system, as well as completing our mandatory Grey Alert test, and I'm pleased to report that both the buoys and we have passed muster. Full power and facilities have been restored, and after three days of eating rations, my stomach for one is pleased to find the replicators back on-line, even if I'm still on a diet of rabbit food.\n\nOn a more personal note, it's been two days since my last... private conversation with the Counselor. She's still waiting for her friend to clear me from Compulsory Counseling. I suppose I'm glad that she feels I'm well enough to only need to consult her as and when I feel like it. Ironically, if things work out the way I'd like them to, I'll be seeing a lot more of her-\"\n\nHis combadge chirped. \"Yes?\"\n\n\"Commander T'Varik here, Sir. We have an incoming Priority transmission from Commander William Hilliard of the Starfleet Surgeon General's office.\"\n\nHe blinked, recognising the name from Kami. \"So put it through to the Counselor.\"\n\n\"Sir, the instructions are for it to be received in the presence of the Counselor, you and myself.\"\n\nHe sat up. He had expected it to be about the evaluation or some other medical matter - then why involve his First Officer? \"Find Kami and get in here.\"\n\n\"I've already summoned her. We're on our way.\"\n\nSeconds later, both women entered his office, Kami's expression and voice matching his own bemusement. \"What's Bill up to?\"\n\n\"Let's find out. Commander?\"\n\nT'Varik opened the link, and the face of Commander Hilliard appeared on his wall monitor. \"Captain Hrelle, I presume?\"\n\nHe nodded. \"Commander. This is my First Officer Commander T'Varik, and I believe you already know our Ship's Counselor.\"\n\n\"Bill,\" Kami piped in, \"You didn't have to call me back yourself about my request-\"\n\nThe man's expression was steely. \"Counselor, one moment please. Commander T'Varik, by now you will have received official orders from my office piggybacked to this transmission; please examine them. Effective immediately, you are to assume temporary command of the Surefoot.\"\n\nT'Varik lifted up the PADD in her hand to access the aforementioned orders, as Hrelle rose to his feet. \"Excuse me?\"\n\n\"What in the Seven Hells are you doing, Bill?\" Kami demanded.\n\nThe man ignored her. \"Captain Esek Hrelle, you are on temporary medical suspension pending a psychiatric evaluation by an investigative officer from the SGO.\"\n\n\"We have received the orders, Sir,\" T'Varik verified.\n\n\"You'd better have a damn good reason for this,\" Hrelle growled at the screen.\n\n\"I do, Sir.\" Now he focused on Kami. \"Counselor Kami Shall, this office has received a complaint about you, specifically allegations regarding an improper relationship between yourself and Captain Hrelle.\"\n\n\"Complaint? Who's complained about me?\"\n\n\"Their identity is not important at this time. Normally I would have dismissed such complaints, given your history - but then I received your rather unusual request, outside of normal channels and involving the Captain. That's a coincidence I can't ignore. And as per Starfleet Medical regulations, you will also be suspended from duty pending completion of an investigation into the allegations.\"\n\n\"Then why suspend Captain Hrelle as well?\"\n\n\"You know the regulations, Kami: when a Counselor is being investigated, those compulsory patients of theirs must also be investigated - especially in this case, since the complaint involves the two of you.\"\n\n\"Commander Hilliard,\" Hrelle said, stressing the man's lower rank. \"This is not only unnecessary, but insulting. Not just to myself, but to the Counselor. If you knew her-\"\n\n\"I *do* know her, Captain. And I don't necessarily believe what's been said; but I would be remiss in my duties if it wasn't addressed.\"\n\n\"Commander,\" T'Varik interjected calmly. \"I have lived and worked with these two individuals. I can assure you that there is nothing of significance to investigate.\"\n\n\"I appreciate your input, Commander. But unless you're a qualified Counselor, then it's merely your opinion.\"\n\n\"Then I must insist that these proceedings take place without undue delay, to minimise disruption to this ship and my cadets.\"\n\n\"I agree. That's why I've arranged for the Surefoot to proceed to Malbruk II; we have a Counselor based with the scientific team there who is a qualified investigator. His name is Lieutenant Martin Aiken, and if you cooperate, you'll be done in a couple of days.\"\n\n\"Bill,\" Kami said, almost pleadingly. \"Please, let me explain-\"\n\n\"You can explain everything to Lieutenant Aiken. The sooner you get there, the sooner this is resolved - one way or another. Hilliard out.\"\n\nThe screen went dark. The room went silent.\n\nThen T'Varik spoke, looking as uncomfortable as a Vulcan could manage. \"I am sorry about this unexpected turn of events, Captain, Counselor.\"\n\n\"Thank you,\" Hrelle replied blankly.\n\n\"Who would report me?\" Kami muttered, sounding bewildered.\n\n\"That is irrelevant.\"\n\n\"Irrelevant?\" the Caitian snapped at T'Varik. \"Somebody complained about me to Starfleet Medical! And it has to be someone on this ship! Doesn't that matter?\"\n\n\"At this point, no. What matters is that you both use the additional time allotted to you during your suspension to prepare for Lt. Aiken.\"\n\n\"She's right,\" Hrelle nodded. \"T'Varik, since shore leave at 154 will be delayed, what can we find at Malbruk II?\"\n\n\"It is a Class-M world, currently with an Archaeological Protection Status, with an orbiting research station.\"\n\n\"I'm sure there are places where they can camp out without disturbing the sites?\"\n\n\"An excellent idea, Sir.\"\n\n\"I offer that as a suggestion, of course, rather than as an order,\" he added with some barbed amusement, \"Since you're in charge now.\"\n\n\"Yes, Sir.\" The Vulcan continued to look uncomfortable about the situation. \"May I infer that you wish yours and the Counselor's status to be kept on a Need to Know basis?\"\n\n\"If you would, please.\"\n\n\"Of course, Sir. If anyone asks, I believe we can truthfully say that the two of you are on... Special Assignment.\" She looked between the two Caitians. \"I also believe this will be resolved to everyone's satisfaction, and so advise you both to remain positive. We will arrive at Malbruk II in 7.62 hours.\"\n\nHrelle frowned. \"As quick as that? The old girl will have to be doing Warp 9.\"\n\n\"Indeed; but it is not beyond the capabilities of the 'old girl', albeit with the requisite complaints from Chief Grev.\" She nodded to them both before exiting.\n\nIt was quiet again. Neither looked at each other.\n\n\"I'm sorry,\" both of them said in unison.\n\nHrelle looked up at her. \"It was my fault. I seduced you.\"\n\nShe smirked, still looking pained and angry. \"And what, you think I'm some innocent young cub just in her first Season? All this time I've been flirting with you, sitting on your lap, sleeping alongside you-\"\n\n\"It wasn't like that-\"\n\n\"Whoever complained obviously didn't see it like that! And do you think this Investigator is going to look at it as something innocent? Esek, we had sex! Regardless of whether or not you were psychologically strong enough for it at the time not to matter, the fact is you were technically under my care at the time! I'll be disbarred!\"\n\n\"You don't know that'll be the case.\"\n\n\"But what if it is? What then?\"\n\n\"Then I'll resign. We'll go off somewhere and do something else together!\"\n\nShe stared at him in abject disbelief, a disbelief that became anger. \"I already feel guilty enough about getting you suspended alongside me, now you threaten to throw away everything you've worked for? Are you insane?\"\n\n\"If I am, then this investigator will know for sure-\"\n\n\"Stop it! What am I supposed to think about a man willing to drop his whole life because of an impulsive act-\"\n\n\"It wasn't impulsive. Well, not really-\"\n\n\"Or maybe this is all just your cock talking? I can just hear it now! 'Never mind all the years you put into becoming a Starfleet Captain, just throw it all away! Throw it all away because you got between this female's legs! To the Seven Hells with everything else in the Galaxy!'\"\n\n\"My penis seems to have a big voice, considering its actual size.\"\n\nShe hissed at him.\n\nHe drew closer to her. \"Kami, stay calm. T'Varik is right, everything will work out-\"\n\n\"You don't know that!\"\n\n\"Yes, I do. Because I've been through far worse, and I'm still here. There has to be a reason for it.\" He reached for her.\n\nShe drew into his embrace, needing it more than she could have guessed.\n\n*\n\nDeck 1, Bridge, 0600 Hours:\n\nT'Varik had heard the alert beep from the Ops console behind her, and had deduced the nature and origin of the incoming message before the cadet on station that shift, the Vulcan Falok, had formally announced, \"Commander, there is a Priority message from Professor Erik Solberg, from Tyche Station on Malbruk II.\"\n\nT'Varik could have pre-empted Falok's statement, but knew such actions would risk engendering a presumption on the cadets' part that they need not always follow procedure. \"Onscreen, if you would, Mr Falok.\"\n\nThe starfield was replaced by the image of an elderly human male, with thinning white hair and wrinkled skin and aquiline nose, his sharp blue eyes fixed on her. \"You are Captain Hrelle?\"\n\n\"I am First Officer T'Varik, currently in command. How may I assist you, Professor?\"\n\nSolberg's thin lips curled into a scowl. \"You may explain why our sensors have detected you on approach to us at high warp! You were supposed to be inspecting our outer Sensor Buoys and then be on your way! What is the meaning of this?\"\n\n\"Please excuse any alarm we might have caused you, Professor. By now you should have been made aware that we have an appointment with a member of Starfleet, Lieutenant Aiken.\"\n\nThe elderly man grunted. \"Yes, but I didn't expect you to arrive for another day at least! Why the rush?\"\n\n\"We merely wish to conclude our business with the Lieutenant as quickly as possible.\"\n\nNow he grunted, sounding more satisfied. \"Having dealt with that officious little prick, I don't blame you. But you can't meet him here! Tyche Station is restricted! It'll have to be on your ship or on the planet!\"\n\nShe nodded. \"Understood, Professor.\"\n\nBut then the man frowned. \"However... I would request that we be allowed the use of your ship's computer while you're here.\"\n\nShe raised an eyebrow. \"For what purpose?\"\n\n\"We have a...\" He glanced around, to things outside the reach of the viewscreen. \"A slight operational problem, one that has arisen in the midst of a programming upgrade. We are attempting to identify and isolate the problem, and an independent computer running a diagnostic would assist us greatly.\"\n\n\"Of course. Our engineering team will be more than able to assist-\"\n\n\"No! Just give us access, and we'll do the rest!\"\n\n\"That will not be possible, Professor. Regulations forbid it.\"",
        "\"Your people won't be familiar with our specifications, and they won't be cleared for access to it!\"\n\n\"I am certain that their talents will be more than sufficient to assist, and if the need is urgent, then they can be temporarily cleared for access-\"\n\n\"Unacceptable! Just give us access and let us get on with it!\"\n\nT'Varik paused, though she already knew what her reply would be. \"That will not be possible, Professor.\"\n\nThe man's skin darkened. \"Starfleet Command will hear about this! Mark my words, Vulcan!\"\n\nThe screen returned to a starfield with warp streaks.\n\n\"Well, he's a charmer.\" That was from Wileves Drill, the Bolian Flight Conn Specialist of Gamma Shift, sitting in front of the Captain's chair.\n\nNearby, Engineering Specialist Bobbi Yeager, a petite human with a broad chin and nose and an impressive mane of sable hair, chuckled. \"We should fix him up with Dr Ling, their combined bad attitude could implode space itself.\"\n\n\"I believe that's more than enough banter,\" T'Varik admonished; she knew Captain Hrelle was more liberal about such instances, but she preferred to not encourage bad habits in the cadets while they were on duty. Then she focused on mentally reviewing her argument with Solberg. There was something indefinably wrong, but she was at present unable to identify the nature of it.\n\n*\n\nDeck 2, Counselor's Quarters, 0800 Hours:\n\nKami had been sitting, looking at her PADD, when the door chimed. \"Come.\"\n\nThe door slid open, and Jonas Ostrow entered. \"Counselor?\"\n\nShe sat up. \"Jonas? I'm sorry, I've had to reschedule our session for a later date, I'm on a... special assignment at the moment.\" The words stuck in her throat, hating euphemisms and evasions, preferring to speak her mind.\n\n\"I know, I got the message. I just-\" His expression was troubled.\n\nKami regarded him. She was technically on suspension, and couldn't operate in an official capacity as Counselor until this damn investigation was cleared. But there was no way in the Seven Hells that she could just send someone who needed help, or at least a friendly ear, away. \"Come on in and sit down, I think I can spare you a couple of minutes for an informal chat. What is it?\"\n\nHe let the door slide shut behind him as he took a seat in front of her desk, his hands clasped tightly together on his lap. \"Am I- Am I normal?\"\n\nShe smiled politely. \"That's a hell of a question this early in the morning, Jonas.\"\n\nHe blushed. \"I'm sorry, it's stupid- I should go-\"\n\nHe started to rise, but she waved him down again. \"You should stay.\" Kami leaned forward, resting her elbow on her desk and her chin on her fist as she regarded him, finally replying, \"No, you're not normal.\" She smiled at his reaction. \"You're better than normal. Why are you asking?\"\n\nHe couldn't meet her gaze. \"It... I'm not... Some of the guys, I don't want to say who, well, they're talking about... well, at Starbase 154, there's supposed to be this place in the civilian sector where... where-\"\n\n\"Where you can pay for sex?\" she finished for him.\n\nHe looked up at her, shocked. \"How did you know?\"\n\n\"I didn't think you'd be this embarrassed if you were talking about a pizzeria. They're pressuring you to come along with them?\"\n\n\"No! I mean, well, not really. I mean, I'm used to it, getting teased when I look away if someone's undressing or if they're talking about sex or something... I know that's stupid-\"\n\n\"It's not stupid, Jonas. Do you want to go with them to one of these places? They're legal, they're clean, you're an adult, you can go without breaking any Starfleet or Academy-specific regulations.\"\n\nHe swallowed. \"I suppose... just to get everyone to stop teasing me-\"\n\nShe held up a hand to stop him. \"Hold it right there. There are many good reasons to go to a place like that... but that's not one of them.\"\n\nHe paled. \"B-But, if it'll make a man out of me-\"\n\n\"I'm sorry, Jonas, but you're way too late for that; a man sits in front of me already. I see him, hear him, smell him. And losing your virginity to someone you don't even know, over an exchange of credits, is not going to change that. The opportunity will come when it comes, you don't have to rush it.\"\n\nHis pale skin had flushed further. \"I suppose. B-But... if I do meet someone, what if I... disappoint her?\"\n\nShe smiled. \"Do you want to know the secret? The secret about what women want in a man?\" She held up her hand and started counting off her fingers. \"Honesty...\"\n\nThen she stopped.\n\nHe blinked. \"That's it?\"\n\nShe seemed to consider the question, before adding, \"Good hygiene. There's few things more distracting than making love with someone who has bad breath or sweaty pits. Everything else we like - in my own case, broad shoulders, a sense of humour and a furry belly - are certainly things we wouldn't say No to. But no matter how attractive we might find a man, none of those things mean anything if he doesn't respect us enough to be honest with us.\n\nWhen you meet the right woman - and you will, I promise - she will already have seen all your remarkable positive qualities, and won't care how experienced you are, or appear to be. You don't have to be the knowledgeable stud; half the fun can be both of you finding out what you like and don't like.\"\n\nThat seemed to bolster the younger man. He nodded, smiling. \"Thank you, Counselor.\"\n\nShe smiled back. \"You're welcome. Now get going, I have work to do.\"\n\nHe thanked her again and left. The office was quiet once more.\n\nAnd Kami was profoundly aware of how much she loved this job. And how much she would miss it if she couldn't do it any longer.\n\n*\n\nDeck 1, Bridge:\n\nT'Varik rose from the Captain's chair as Hrelle entered. He waved her off. \"There's no need, Commander.\"\n\nShe stopped. \"I wish to speak with you privately.\" She motioned to the door to the Ready Room; he followed. \"Captain, an issue has arisen regarding the scientific team on Malbruk II. I remain in command of course, but...\" She paused, breathing in before continuing. \"Your services as advisor would be appreciated.\"\n\nHe nodded. \"Proceed, Commander.\"\n\nShe motioned to the control panel beside the main display screen on the nearest wall. \"The Project's Director, Professor Solberg, has requested permission to utilise the Surefoot's main computer to run an independent diagnostic sweep of his own network.\"\n\n\"What's their problem?\"\n\n\"He would not say, and he refused to provide further details or allow our engineering personnel to assist. I declined, and he has threatened to contact Starfleet Command.\"\n\n\"What's the nature of their research?\"\n\n\"Classified.\"\n\n\"Do you have access to the personnel records? What are their fields of study?\"\n\n\"There appears to be two main fields: the expected Archaeology and Anthropology, and more... esoteric studies: quantum mechanics, probability mechanics and mathematics.\"\n\nHis ears twitched. \"Those tend to lean towards the theoretical than the practical.\"\n\n\"Indeed. However, the Federation Science Council has placed a Level-7 Classified Security Rating on Tyche Station.\"\n\nHrelle nodded at the information, before declaring, \"Still, you did the right thing. You know the regulations better than I do.\"\n\n\"Undoubtedly. And yet it is my discretion to allow for exceptions under certain circumstances.\"\n\nHis furred brow creased. \"Are you second-guessing yourself, T'Varik? Why? I've never known you to do that.\"\n\nHer expression approximated his own. \"I never have... until now. The situation is novel. I am in command.\"\n\n\"You've been in command before.\"\n\n\"Temporarily, while serving my duty shift, with the implicit knowledge that you were still the commanding officer. This is no longer the case, at least for now. The consequences of my decisions, for good or ill, will fall upon me. During the incident with the Nist, Sasha criticised me for having spent my Starfleet career exclusively at the Academy, teaching, while others did the 'real work'. Though those words were spoken in anger, there is some measure of truth to them.\"\n\nHrelle shrugged. \"Some measure... but not much, really. You have a lifetime of knowledge and the recorded experience of starship captains at your disposal - and you have my own modest expertise, which tells me you made the right decision. I've heard many threats from others to go over my head when they've not got what they wanted from me, and more times than not, they're all piss and wind. But if Solberg ends up the exception that proves the rule, Starfleet Command won't chastise you, they'll just order you to assist.\"\n\nT'Varik considered his advice, before nodding and replying, \"Thank you, Sir. And how are you and the Counselor doing?\"\n\nHe sighed. \"She's more nervous than I am, I think. I suppose I can't blame her. I... I put her career at risk, by my actions.\" Now he blushed. \"You, ah, probably don't need to know the details-\"\n\n\"Kami made me aware of the general sequence of events, though I had her spare me the more... graphic details. In your defence, Sir, I should remind you that, unless the Counselor was incapacitated or you forced yourself upon her, then she was as much to blame as you. Your chivalry-driven guilt will not help the situation.\"\n\nHrelle nodded. \"Thank you.\"\n\n\"I am holding the briefing in 1.85 hours. Would you and Counselor Shall attend, for appearance's sake?\"\n\n\"Of course.\"\n\n*\n\nDeck 1, Mess Hall, 1250 Hours:\n\nSasha's nose appreciated the tomato and chorizo soup, at least. Her tongue, too, if she thought about it. The rest of her, however, was too distracted.\n\nRrori was the first member of her squad to join her at the table from the replicators, sitting opposite her with a plate of fried beef and rice. \"There's a rumour that we're going to Malbruk II for military exercises. Have you heard anything?\"\n\nShe shrugged.\n\n\"Cadet Chaudri is working on a holodeck simulator for combat shuttle engagements,\" he continued. \"She, Cadet Drill, Squad Leader Arrington and I will be competing. I hope you do not take it as an affront to your lover if I thoroughly thrash him, but the honour of our Squad must be maintained.\" He chuckled.\n\nShe didn't respond.\n\nThe Caitian regarded her, setting down his fork. \"Are you okay? If I am intruding, just let me know-\"\n\nShe shook her head, gathering her next words carefully. \"Do Caitians love?\"\n\nHis pointed ears twitched. \"Of course we do.\"\n\n\"I mean, like humans do?\"\n\n\"I have no basis for comparison. If you mean physically, like quickened pulse and other biological signs, I imagine it's identical, though with us you'll also know when we can't stop our tails from wagging.\" He chuckled again.\n\n\"But does it mean the same thing to you that it does to us?\"\n\n\"Again, I can't really compare. I know we work on instinct more than humans. We know fairly quickly if we love or hate someone, or something. And we tend to let the object of that love or hate know it.\"\n\n\"And do you believe in fidelity? When you marry, you choose to love that person forever, and never think of another?\"\n\nRrori pushed his tray aside and leaned forward, dropping his voice. \"My people's attitudes to relationships will vary, as yours do. We have polygamous and polyandrous relationships, as well as monogamous, and there are those of us who choose to live alone and have many partners through our lives.\n\nBut I believe that when we marry, we do love that other person forever. Even if that other person is no longer with us, either by death or divorce or whatever other circumstances. Because they remain permanently connected to that part of our lives, even if they can't, or won't, continue to be a part of it.\" He paused, and added in a whisper, \"Your father will always love your mother.\"\n\nShe blinked. \"How- How did you know I was asking about him?\"\n\nHe shrugged. \"I am a most brilliant and talented individual, but it doesn't take brilliance and talent to work it out. I have observed him as he speaks of your mother; he still loves her, and if she was still alive, he would never have bonded with the Counselor. Would your mother have preferred he never love again after her passing?\"\n\nShe didn't answer.\n\n\"Or maybe it's just you who would prefer it if he didn't?\"\n\nBefore she could respond, they and everyone else in the mess hall felt the subtle vibrational shift as the ship dropped out of warp space and into normal space, the starfield streaks outside replaced with the image of a large orange-red planet with dark blue seas and wisps of clouds in the atmosphere.\n\nThen Commander T'Varik's voice filled the air. \"Attention all cadets: there will be a mandatory briefing at 1300 Hours regarding our current assignment. Captain Hrelle and Counselor Shall are on temporary Special Assignment; all ship's business is to be directed to myself until further notice.\"\n\nRrori drew back his lunch. \"We'd best finish up; I don't want to leave the briefing midway to go to the Little Caitian's Room.\"\n\nShe nodded, not looking at him as she replied, \"Thanks, Meow.\"\n\nHe grunted. \"You really don't need to keep using my first name.\"\n\nSasha allowed herself a small smile. \"I know.\"\n\n*\n\nDeck 1, Briefing Room, 1300 Hours:\n\nT'Varik looked out at the assembled cadets, trisected by division, though more by natural instinct, while Captain Hrelle and Counselor Kami sat closer to her, their body language indicative of anxiety. T'Varik concluded that they were reacting to the arrival of Lt. Aiken, who had transported onboard and was waiting in her office.\n\nFor almost 4.5 milliseconds, she allowed herself to feel concern for her friends, before resuming her normal control. \"At ease.\" As the cadets obeyed, she continued. \"As you can see through the observation windows, we are currently in orbit around Malbruk II, a Class-M world that formerly inhabited a civilisation that died out two millennia ago, and recently designated suitable for colonisation following an extensive archaeological survey. There is currently a population of approximately 400, 100 of which are employed on Tyche Station, an orbiting research facility performing classified work. Yes, Mr Arrington?\"\n\nGiles lowered his hand. \"What sort of classified work, Commander?\"\n\n\"The classified sort; the answer is in the question, Cadet, please do not waste our time.\" She allowed the other cadets to laugh, before she continued. \"No one will be visiting Tyche Station, nor the main community, where the majority of the archaeological sites have been deemed protected areas. Instead, I scheduled shore leave on the largest southern continent. You may fly down in the shuttles and select a campsite-\"\n\nSuddenly the briefing room door slid open, and a tall, slim, middle-aged figure with thinning straw-coloured hair and clad in Starfleet medical blue entered. T'Varik focused on the stranger, a pale-skinned human male, suspecting who it was but still ordering, \"Identify yourself.\"\n\nThe figure strode up to her, his voice lyrical, though with a snide and impatient tone. \"Lieutenant Martin Aiken, Starfleet Medical, Investigative Services. You're expecting me.\"\n\nT'Varik ignored the curious rustling from the cadets. \"I believe I left orders for you to wait for me in my office when you boarded.\"\n\nAiken shrugged. \"My time is precious, and I didn't feel like waiting. A Vulcan should appreciate brevity.\"\n\nT'Varik's expression creased. \"We also appreciate respect and decorum-\"\n\n\"Fine, fine,\" he replied impatiently - his attention focusing on Hrelle and Kami as he barked, \"Is this an official briefing? What are they doing in here? Why aren't they confined to their quarters?\"\n\nThe reaction from the cadets increased - in particular, the confusion and concern most apparent on Sasha's expression. Hrelle and Kami rose to their feet, drawing close as T'Varik attempted to regain control of the proceedings, her voice deliberately raised so everyone can hear her clarify the situation. \"Lieutenant, no one onboard is confined to their quarters, as no one is facing criminal charges. You are only here to investigate a complaint. That is all.\"\n\nBut the man was already looking away, to the cadets. \"I'll need to speak to a few of you, too. Which one of you is Sasha Hrelle?\"\n\nSasha glared at him. \"I am, why?\"\n\nNow Hrelle stepped closer, looking angry. \"You stay away from them, they have nothing to do with this.\"\n\nAiken gave him a contemptuous glance. \"You're hardly in a position to make demands, Hrelle.\"\n\n\"That's Captain Hrelle to you, Lieutenant.\"\n\n\"Of course... Captain. But you're still relieved of duty, same as the Counselor, and I have orders to take any steps necessary to fulfil my mission and find out the truth about what you two have been up to. And under such circumstances, you and Counselor Shall really shouldn't be mixing with the rest of the crew, should you? Or with each other, for that matter?\"\n\nHrelle wanted to argue further, but was acutely aware of all the eyes and attention on him just now. Unwilling to make a bad situation worse, he conceded, \"No.\"\n\nAiken turned back to T'Varik. \"Clearly my arrival is not too soon. I'll see the cadets first.\"\n\nT'Varik touched her combadge. \"Mr. Abed, come in here, please.\" She drew up to Aiken. \"Lieutenant, I am in command of this vessel, and regardless of your orders, you will comport yourself as befits your rank.\" As the ship's Security Officer entered, T'Varik ordered, \"Mr. Abed, escort Mr Aiken to the Auxiliary Office on Deck 2. Mr Aiken, you will remain there for the duration of your stay onboard, where you will conduct your interviews. You will also provide me with a list of those individuals with whom you may wish to speak; they need to be briefed on their rights beforehand.\"\n\nAiken regarded her, before reaching out and providing her with a PADD he held. \"As you wish, Commander. But you're not making this any easier for me.\"\n\n\"I do not recall receiving any orders to do so. Mr Abed, if you would?\"\n\n\"Yes, Ma'am.\" The man motioned to the briefing room door, and Aiken followed.\n\nT'Varik turned to Hrelle, her voice lower. \"I regret that this occurred, Captain-\"\n\n\"I know, Commander.\" He looked to Kami.\n\nKami turned to the bemused cadets, her face pained and angry as she addressed them. \"Before the rumour generator goes into overdrive: someone made a complaint to Starfleet Medical about me, that I have behaved improperly with the Captain. They wouldn't tell me who complained - but I know it won't be any of you. If... If I don't get the chance to tell you later, I want to say it's been a pleasure to get to know all of you. You will all have fine, wonderful lives in Starfleet. Thank you.\"\n\nThen she left. Hrelle reached out for her, but she made the effort to step out of his reach.\n\nThen Hrelle spoke again, though it felt more like a need to break the almost unbearable tension in the room. \"If you'll excuse me, Commander, I... need to find some place where I won't get into trouble. Again.\"\n\nAfter the briefing, the cadets selected for interview assembled in a waiting area, opposite the Auxiliary office where Lt. Aiken was set up. As it turned out, it was just Alpha Squad he wanted to speak with. Sasha remained quiet, while the others hovered around her, doing all the speaking. Beside her, Neraxis was shaking her head. \"It's insane! I mean, yeah, she's flirty with the Captain and they banter a lot, but that's just the way they are!\"\n\n\"She's always been good and supportive to all of us,\" Jonas noted, looking forlorn. \"I don't want to see her go.\"\n\n\"None of us do, Friend Jonas,\" Kitirik agreed. \"But if she did, what would happen?\"\n\n\"A replacement Counselor would be provided,\" Eydiir answered, staring at Sasha, concerned for her silent friend. \"She might maintain her licence to practice, but not on Starfleet vessels or facilities.\"\n\n\"What about the Captain?\" Jonas asked. \"Why was he suspended too?\"\n\n\"He's been her compulsory patient,\" Sasha finally offered, her voice low. \"It's standard procedure.\"",
        "\"Who do you think made the complaint?\" Jonas asked now.\n\n\"Until someone admits it, we cannot be certain,\" Eydiir reminded him. \"One battle at a time. Our next battle is in that office.\"\n\n\"I am not comfortable with having to do this,\" admitted Rrori. \"I have only just arrived onboard. What can I say?\"\n\n\"The truth,\" Sasha replied. \"As long as it doesn't hurt either the Captain or the Counselor.\"\n\n\"How can we know what will or will not hurt them?\"\n\nNo one answered that.\n\n\"Maybe it'd be better if we didn't say anything?\" Neraxis suggested.\n\n\"Not me,\" Sasha declared to no one in particular. \"That shithead is going to know exactly what I think of this whole meshuggenah investigation.\"\n\n\"This shithead is looking forward to hearing all about it.\"\n\nSasha and the cadets turned to the new voice; Lt. Aiken stood there, motioning for her to follow him into the office.\n\n*\n\n\"Relax, Cadet, take the seat. Be advised that I'll be recording this interview, and any and all statements you make may be employed in my assessment of the fitness for duty of Captain Hrelle and Counselor Shall.\" He slipped into a seat next to hers, almost facing her, waiting for the woman to settle. \"May I call you Sasha?\"\n\nShe folded her arms across her chest. \"Whatever you want... Sir.\"\n\nThe man's dark thin mouth curved in a approximation of a smile. \"I appreciate your defensive attitude, Sasha. You see me as the enemy. I can assure you I'm not. I merely wish to protect young people like yourself from potential threats-\"\n\n\"My father and the Counselor are no threats... Sir.\"\n\nAiken leaned forward in her chair. \"We can certainly agree on your father. He is a hero, through and through. As far as I'm concerned, he can't do any wrong.\n\nThe Counselor, however, is another story.\"\n\nSasha shook her head. \"No. She's been a big help to him, and to me-\"\n\n\"Of course she has; that's her job, after all. But it was never her job to fall in love with him. Or to use emotional blackmail on you to get your approval.\"\n\n\"What? She never did that-\"\n\n\"Of course she did. Don't you remember?\" He reached out and touched her hand---\n\n---Quicker than Sasha could see, Kami shot her hand forward, pointing a clawed finger in the cadet's face. \"I'm still talking.\" The Caitian relaxed her arm and breathed in before continuing. \"I love your Dad.\"\n\nThe admission was the last thing Sasha expected. She recalled the nasty, cutting remark she had made to Kami when they were fighting, and had hoped the woman would have forgotten it. And if she hadn't, that the woman would have denied it.\n\nKami lowered her arm as she proceeded. \"I love him. I love him in a way I haven't since my late husband. And he loves me. And we've been lovers since before we boarded this ship. And I can imagine that you might feel like that's wrong, that you might want to protest it. But be warned: if you say anything, anything that might get me removed from being his Counselor and off this ship, that could seriously affect his psychological recovery. Even his command. We don't want that, now do we?\"---\n\n---Sasha pulled back, struck as if by a fist. She didn't remember it happening that way! And yet, it did! My God, Kami did do that, didn't she? She was so brazen about it! \"Y-Yes.\"\n\nAiken looked sympathetic. \"And then she had the gall to tell you that she loved you too, like she was a second mother!\"\n\nSasha nodded numbly. \"Yes...\" She remembered: after she had returned from the execution of the man who had murdered her mother, Kami had told her that. She'd been so certain it happened differently... And it was exactly what she needed to hear. \"But she- she-\"\n\n\"She used you, Sasha. You're in her care as much as your father is. She had no right to put you in such an emotionally vulnerable and compromising position. And all for her own selfish ends. And it's all plain: she wants one big happy family again.\"\n\nThe longer she stared into the man's eyes, the longer she listened, the more it became so terribly obvious. \"Yes.\"\n\nSasha proceeded to parrot whatever Aiken said, for the purposes of the recording.\n\nShe never saw the smile in Aiken's eyes.\n\n*\n\n---They sat on the couch instead of in the chairs, and she'd offered Neraxis a shot of Spican flame whiskey that went down her throat like a nova. Kami smelled gorgeous, and looked into the other girl's eyes with a deep mischievous longing as her tail played up into her hands. \"Oh, my darling girl, there is nothing for you to worry about. Yes, you have fears and doubts about your fitness for being in Security. But I'll help you with them. And you can help me with a problem of my own.\"\n\nNeraxis' breath quickened, and she shifted in place. \"P-Problem?\"\n\nKami smiled, reaching out and stroking the girl's bald pate. \"Yes. With Sasha.\"\n\n\"Sasha? Why would you have a problem with her?\"\n\nThe Caitian's fingertips stroked along Neraxis' Bolian ridge. \"She's beginning to sense that there's more going on between the Captain and I than there should be. She could make trouble for me. I think she needs... a distraction. She'll hardly care if her father and I are having sex, if she's busy having some herself.\"\n\nNeraxis swallowed. \"You- You want me to-\"\n\nKami laughed softly now. \"No, no, my darling girl; you're not her type. Giles, however, is another matter.\"\n\n\"Giles?\" It made no sense; the Squad had only been together for less than two weeks, and though the initial hostility between Sasha and Giles had eased, the thought of them ending up Bumpers was ludicrous. \"I can't see it working between them-\"\n\n\"It's already working, Neraxis. I've been subtly guiding each of them individually towards the idea of being a couple. All I need from you is some encouragement offered to them. And then let nature take its course...\"---\n\n---Neraxis pulled back, her breath quickened, her blue skin flushed, unable to look at Aiken now. \"Did that- Did that happen like that?\"\n\nAiken leaned back in his chair. \"Of course; why would you lie about something like that?\"\n\nShe remembered. The potency of the memory struck her, something once buried, now surfaced again. Of course, Kami had done that. \"Y-Yes. But... But it doesn't make sense.\"\n\n\"It makes perfect sense, if you think about it. Sasha is understandably loyal and possessive towards her stepfather. She saw Kami as a rival for his attentions, and any relationship between them as an insult to her mother's memory. Pushing her into her first relationship with Giles gave Sasha someone else to focus on. And given the problems Giles' family was causing towards Hrelle at this time, making Giles Sasha's lover ensured his loyalty.\"\n\nYes, it... it made sense. Why didn't she see it sooner?\n\n*\n\nJonas swallowed. \"There's nothing happening between Kami and the Captain. The Counselor is completely professional.\"\n\n\"Is she?\" Aiken reflected mildly. \"As I understand it, in your first group session, she brought up a rather... embarrassing sexual incident that happened to you. That doesn't sound very professional.\"\n\n\"It was just something stupid that happened! We sorted it out! And she showed me how much she and the others care.\"\n\nAiken looked pained and sorrowful now. \"Oh, Jonas, there's an old human saying: 'There are none so blind as those who refuse to see'. I've read her notes on you. She's not been very... complimentary.\"\n\n\"No! I refuse to believe you, Sir!\"\n\n\"It's okay, Jonas, there's no need to get upset.\" Aiken reached out and patted his hand, letting it linger. \"What did you discuss in your last meeting with her?\"\n\n\"I- I don't see what-\"---\n\n---\"It... I'm not... Some of the guys, I don't want to say who, well, they're talking about... well, at Starbase 154, there's supposed to be this place in the civilian sector where... where-\"\n\n\"Where you can pay for sex?\" she finished for him.\n\nHe looked up at her, shocked. \"How did you know?\"\n\n\"I didn't think you'd be this embarrassed if you were talking about a pizzeria. They're pressuring you to come along with them?\"\n\n\"No! I mean, well, not really. I mean, I'm used to it, getting teased when I look away if someone's undressing or if they're talking about sex or something... I know that's stupid-\"\n\n\"Yes, it is stupid, Jonas. It's galactically stupid. Almost as much as you are.\"\n\nHe looked up, shocked at her response.\n\nShe grunted at his reaction. \"Why would you NOT want to go with them to one of these places? They're legal, they're clean, you're an adult, you can go without breaking any Starfleet or Academy-specific regulations, you can get everyone to stop teasing you, and it'll finally make a man out of you. You're certainly not getting there on your own.\"\n\nHe paled. \"B-But, I thought you would-\"\n\n\"I'm sorry, Jonas, but I have to say I'm sick and tired of listening to you bleat and whine like a little bitch. You're one of the more pathetic cadets I've had to deal with here. Immature, insecure, with a backbone of rubber, always worrying about what other people are saying and thinking about you. Well, for the record, they're as sick of you as I am. Even Kit. Do you know how much it takes to get HIM complaining about something?\"\n\nHis pale skin had flushed further. \"B-But... I can't-\"\n\nShe smiled. \"Do you want to know the secret? The secret about what women want in a man?\" She held up her hand and started counting off her fingers. \"Balls. Now, Captain Hrelle has balls; before we even boarded the Surefoot, he took me, had me bent over and mewling before I even knew what was happening... and even though he's my patient and we shouldn't be doing it, we've been rutting like cubs in our first Season ever since.\n\nYou could learn from him... but frankly, any action you'd get from a woman would be more out of pity than desire...\"---\n\n---Jonas felt like he'd been struck. As he remembered that horrible encounter, he knew deep down... it was deserved. But he had thought all this time that Kami liked him. Now...\n\nAiken drew back, his expression sympathetic. \"You blocked it out. It was too difficult for you to face. But really, ultimately it's better to face the truth. Tell me again what she had told you about her relationship with Captain Hrelle.\"\n\nJonas sat there, numb, recounting the awful memory for the record...\n\n*\n\n---Rrori never saw the hand as it rose and swiped him across the snout, sending him and his chair to the floor.\n\nKami rose and stood over him, her voice still calm, the claws at her fingertips still extended, but her tail displaying the agitation she otherwise kept from her voice as she spoke with bared teeth. \"You made unwanted advances to a female. She told you No, but you persisted. And you touched her without permission.\n\nCaptain Hrelle and I are mates. We have been since before we boarded this ship. If there are any working grey cells in that pretty little head of yours, you won't insult me, and you especially won't insult Captain Hrelle, again.\"---\n\n---Aiken stared at Rrori with alarm. \"She said that? She was quite explicit that she had mated with Captain Hrelle?\"\n\nRrori stared back, certain that the exchange he'd had with the Counselor hadn't gone that way. And yet, the memory of that incident had been as clear as water. \"I- I guess so...\"\n\n*\n\n\"Most Respected Counselor Kami is very good to me, very comforting and supportive.\" He beamed. \"She lets me hug her.\"\n\nAiken frowned. \"And you think that's appropriate behaviour between colleagues?\"\n\nThe cadet was taken aback. \"I- I do not know, Respected Lieutenant.\"\n\n\"Of course you don't,\" Aiken acceded, leaning forward. \"You can't be expected to know that she's meant to keep a professional distance, a detachment from her patients. In the case of Captain Hrelle and Sasha, she had failed them.\"\n\n\"I have not seen this occur, Respected Lieutenant.\"\n\nAiken leaned forward, taking Kit's hand in his own. \"Yes, you have, Kit. Remember that last session you had with Counselor Shall?\"\n\n\"Yes,\" the cadet replied. \"But we did not talk about the Captain and her. We talked about exploring my creativity. I fear my attempts at poetry have been less than successful-\"\n\n\"No,\" Aiken insisted, squeezing tighter on Kit's hand, his expression focused. \"She admitted to having a sexual relationship with the Captain. She admitted to grooming Sasha and Giles to build a relationship together, in order to keep Sasha happy and distracted and not object to Kami and Hrelle becoming a couple.\"\n\nKit looked at him, confused. \"No, Respected Lieutenant. That did not happen.\"\n\nAiken let go of Kit, glaring, looking pained. \"Your species is... Qarari, isn't it? Your brain configuration is different to most humanoids.\"\n\n\"Yes, Respected Lieutenant. Our reptilian brains have compartmentalised the structures of our pre-frontal lobes towards-\"\n\n\"Never mind. Get out.\"\n\n\"Is there a problem, Respected Lieutenant?\"\n\n\"No, just- just remember that everything said in here to to kept confidential.\"\n\n\"Of course, Respected Lieutenant.\"\n\n*\n\nEydiir did not like what was happening. Not in the least.\n\nShe did not like the idea of the Captain and the Counselor being treated this way. She did not like this arrogant outsider. She did not like having to answer questions to the mealy-mouthed man.\n\nAnd as each of her friends emerged from their interviews, her dislike grew. Sasha appeared tense and angry, glaring at the table and refusing to speak about what had occurred. When Neraxis returned, she was in a similar state. Rrori looked confused. Jonas looked ready to cry.\n\nAnd when Kit came out, the group of them sitting around the table, silent, Eydiir refused to continue to let it fester. \"What is going on? What has he been saying to you?\"\n\nSasha never looked at her. \"It doesn't matter.\"\n\n\"Yes, it does.\" Eydiir looked around at them. \"What was Aiken asking all of you? What did he imply?\"\n\n\"We are not allowed to talk about it, Friend Eydiir.\"\n\n\"What, on the orders of that braying ass?\" She looked to the others. \"What's going on?\"\n\nAiken appeared at the doorway. \"Why don't you come in and find out for yourself?\"\n\n*\n\nEydiir sat rigid and silent in her chair, glaring at Aiken.\n\nThe man smiled. \"So... you're Capellan? I've heard about your people. Martial, stoic, Spartan... and yet you joined Starfleet to become a doctor? Quite an interesting contradiction there.\"\n\nShe remained silent.\n\n\"I expected loyalty is prized among your people,\" he continued. \"So I imagine like everyone else who has come in here, you wish to protest the innocence of Counselor Shall and Captain Hrelle?\"\n\nShe remained silent.\n\nHe shifted in his seat slightly. \"It's quite natural to feel defensive when someone like myself comes along. But please understand that I have a job to do, and it involves ensuring the safety of young people such as yourself. So your cooperation towards that would be most appreciative.\"\n\nShe remained silent.\n\nHe swallowed. \"Have you noticed anything unprofessional in the behaviour of either your Captain or your Counselor, either separately or as a couple? Anything suspicious?\"\n\nShe remained silent.\n\n\"Cadet, you are required to participate fully in these investigations.\"\n\n\"No, I am not,\" she finally replied. \"I read the orders. I am required to attend this interview. That is all.\"\n\n\"Yes, but participation is implied-\"\n\n\"Then instruct whoever composes your orders to be more comprehensive next time.\"\n\n\"I could order you directly, as a superior officer-\"\n\n\"Then I will refuse. And you can instigate a court martial.\"\n\nHe smiled. \"I understand. You're conflicted. You have loyalty to your Captain and your Counselor, despite all you've seen happening. You remember the last time you saw them together...\"\n\nHe reached out to take her hand.\n\nShe rose, kicking her chair away and stepping back. \"Do not touch me.\"\n\nAiken rose as well. \"There's no need to be afraid, Cadet, I assure you-\"\n\n\"You can assure me of nothing. I do not trust you. I will be making a formal complaint about you to Commander T'Varik. This interview is over.\"\n\nShe turned and left.\n\nWhen she returned to the waiting room, she found Sasha missing. \"Where did she go?\"\n\n\"Friend Sasha mentioned wanting to see Kami,\" Kit replied. \"She appeared upset, but non-communicative .\"\n\nSuddenly Jonas stood up and stormed out as well, knocking over a chair along the way.\n\nEydiir pursued him. \"Jonas, wait-\"\n\nHe never stopped, never looked back, but replied, \"I have to get back to work. Chief Grev has an assignment for me.\"\n\n\"We should talk first-\"\n\n\"GO TO HELL!\"\n\nThe Capellan cadet slowed down and stopped, confused and anxious to a degree she was not accustomed to, and certainly did not like.\n\nThen she turned towards Sickbay.\n\n*\n\nDeck 1, Ready Room:\n\nProfessor Solberg sat at the conference table, leaning on a cane, repeatedly twisting his neck to view the sceptre-shaped Tyche Station just outside the observation window, as if afraid someone might come along and snatch it at any moment. Then he focused again on T'Varik and Hrelle, sitting opposite him. \"I hope you understand that I'm only here at the sufferance of the Federation Science Council, and because... because I need your help.\"\n\n\"Acknowledged, Professor,\" T'Varik replied neutrally, aware of Hrelle's amused reaction. \"What is the nature of the help required?\"\n\n\"In the past month, there has been an increasing number of accidents occurring onboard Tyche. Mostly minor incidents, the sort of things you expect when forced to work with incompetents.\" His wrinkled face twisted, as if he was ready to spit. \"But now there have been general systems failures: gravity, life support, communications, station manoeuvring thrusters. Too many to be accounted for by mere chance or incompetence.\"\n\n\"You suspect sabotage?\"\n\n\"I accept the possibility of it. But I want an independent team to run a diagnostic sweep of our systems first.\"\n\n\"What are you working on over there, Professor?\" Hrelle asked suddenly.\n\n\"Nothing important!\" the man snapped.\n\n\"Professor,\" T'Varik replied calmly. \"A Level-7 Classified Security Rating is typically not applied to a project that is 'nothing important'. Nor do potential saboteurs focus on such endeavours. We suspect you have discovered something in the ruins on Malbruk II that necessitated such secrecy.\"\n\nThe old man looked to each of them in turn, before finally grunting and responding. \"The archaeological teams discovered a number of artefacts, some sort of machines, about two thousand years old, but still functioning once charged up again.\"\n\n\"Describe these machines.\"\n\n\"They are spherical, 1.14 metres in diameter, and possess sequences of buttons on the upper hemisphere, and when you press them, it makes sounds and blinking coloured lights, depending on the sequence of buttons pressed. We suspect they are some sort of... games.\"\n\nT'Varik raised an eyebrow. \"Games?\"\n\n\"They're not weapons, they're not communications devices or data storage facilities that we can discern. We can power them up with universal capacitors, but we can't open them up or scan their interiors. We have tried programming Nanites to make their way inside and report back, but these have met with failure.\" He harrumphed. \"Hell of a thing for a civilisation to leave as a legacy.\"\n\n\"How did they die out, Professor? The natives, I mean?\"\n\nSolberg frowned, as if ready to argue the significance of the question, before saying, \"An asteroid struck their main city, the hub of their civilisation, wiping out the majority of the population in an instant; the impact winter and iridium poisoning in the atmosphere did the rest. Hell of a thing; what were the odds of it striking at the very heart of their people?\"\n\n\"Literally astronomical,\" T'Varik retorted, pretending to be oblivious to the humorous potential of her reply. \"Professor, I will arrange for an engineering team to accompany you back to Tyche Station-\"",
        "\"No! They won't have Level-7 Security Clearance! You have no right to do so!\"\n\n\"You gave me the right, under Starfleet General Order 18: 'In the event of an emergency involving potential loss of life, a commanding officer may temporarily rescind any and all Security protocols deemed necessary to protect said life'. The moment you mentioned the malfunctions on the system included life support, I could legally classify the situation as an emergency.\"\n\n\"What? That's outrageous! I won't stand for it! I'll protest to the Council!\"\n\n\"You will be free to do so, of course. However, I will be taking action regardless - and if you refuse to allow my team over to make an unobtrusive examination, I will simply order the full evacuation and quarantine of the station for an indefinite period, thus delaying any further research on your artefacts.\" She steepled her fingers together on the table. \"The choice is yours.\"\n\nSolberg told her what she could do with herself - but then added, \"Send your team over.\"\n\n\"A wise decision, Professor - as I am physiologically incapable of carrying out your other suggestion.\" She tapped her combadge. \"Chief Grev, select a small team and prepare to transport over to Tyche Station to run a series of diagnostics on their major systems.\"\n\nThe gruff voice returned loud and clear. \"I'll probably be all day over there, that fool Solberg has probably run the facility to the ground. Grev out.\"\n\n\"What did he say?\" the Professor exclaimed in outrage.\n\n\"Ignore the Chief, Professor, he's a Tellarite,\" Hrelle said, rising to his feet and looking at T'Varik. \"Shall I escort the Professor back to the Transporter Room?\"\n\n\"If you would please, Sir.\"\n\n\"And perhaps I could accompany them over there as well? For security purposes? My schedule is... quite open right now, and I could do with keeping myself busy.\"\n\n\"Another good suggestion, Sir.\"\n\nHe winked at her as he walked around, and gently took Solberg by the arm and guided him out of the briefing room, rather than let the man lean on his cane.\n\n*\n\nKami was sitting on her couch, looking at images of her cub, sent with his last message: he had his father's ears, and that cheeky glint. There he was, with his fianc\u00e9e, looking so happy. She missed him, so much-\n\nHer door opened without a chime; Sasha stormed in, her face a mask of fury. \"Why? Why did you have to interfere?\"\n\nKami got to her feet, setting aside her PADD. \"Sasha, what's wrong-\"\n\n\"What's wrong is that you're a sad, pathetic old woman who has to fixate on a vulnerable man to make up for the one you lost! Becoming so obsessed with him that you'll do anything to get him!\"\n\nKami's hackles rose, and felt like she'd been slapped at the venom in the girl's look and voice. \"Sasha, that's not true-\"\n\n\"And you had the gall to tell me that you loved me! That I should think of you like a second mother! Because you were already setting your sights on marrying my Dad!\"\n\n\"Sasha, please-\"\n\n\"And now he's in danger of losing his command! Because you couldn't keep your hands to yourself! I wish we'd never met you!\"\n\nKami had to fight the shock she felt at the verbal assault. \"Sasha, please, calm down-\"\n\nShe reached for her, but Sasha drew back a fist, baring her teeth. \"Just stay away from us! We don't want you near us!\"\n\nThen she stormed out, as quickly and furiously as she had stormed in.\n\nKami stood there, stunned by the encounter, before leaving her quarters - but not in pursuit of the girl.\n\n*\n\n\"Lieutenant!\"\n\nAiken was crossing over from the office to the waiting room, when he stopped and glared at her with disdain. \"I'm not ready for you, Counselor-\"\n\n\"You'd better get ready. What have you been saying to Sasha? She's upset!\"\n\n\"Yes. She is.\" Aiken indicated the open doorway to the office. \"Shall we discuss it privately?\"\n\nKami glanced inside the waiting room, aware of the attention they were getting from the cadets. And there had been more than enough of that. She followed Aiken inside the office. \"Well? What have you been saying to her?\"\n\n\"Oh, I'm afraid I can't discuss confidential matters like that.\"\n\n\"Don't give me that!\" she snapped. \"I care for her!\"\n\n\"You do more than that. You love her. Didn't you say that to her?\"\n\nKami froze, her tail agitated, her hackles raised. \"How did you know that?\"\n\n\"I was given access to all your notes and your Personal Logs when I was authorised to conduct this investigation. And the cadets have been very forthcoming.\"\n\n\"Forthcoming? She came to me, angry and upset! Accused me of the most horrible things! What have you been saying to her?\"\n\nAiken regarded the woman for a moment, before he moved over to the desk and lifted up the PADD. \"Our interview will be recorded. Counselor Kami Shall, a number of allegations have been raised against you, namely that you have engaged in an improper relationship with one of your Compulsory patients, Captain Esek Hrelle.\"\n\n\"I still want to know who made these false allegations!\"\n\n\"That's not relevant now.\"\n\n\"I have the right to face my accuser!\"\n\n\"All in good time. When Captain Hrelle was declared fit to return to duty, why didn't you return to Starbase 74?\"\n\nKami wanted to stay on the subject at hand, but she also knew that this was inevitable. Calming down a little, she answered, \"He still needed Compulsory Counseling, and I didn't want to interrupt his progress. And the Academy's Program for gifted cadets that he was joining sounded intriguing, he would need a Counselor onboard his ship to help them-\"\n\n\"You stated in your notes that you have frequently appeared naked in front of him, and have compelled him to do the same, too.\"\n\n\"There's nothing wrong with that; Caitians are psychologically comfortable with nudity. And in Captain Hrelle's case, he has had issues with self-image as a result of the physical torture he has undergone-\"\n\n\"When did you two start sleeping together?\"\n\n\"Weeks ago - and it was just that, literally sleeping together. There was no sex involved. Caitians need physical closeness, too.\"\n\n\"Is that going to be your defence throughout this?\" he sneered. \"It's what Caitians do?\"\n\n\"It is, when it's one Caitian dealing with another! I'm not going to use the same tactics with a human or a Vulcan or a Qarari.\"\n\n\"But you are in general friendlier, more emotional with your patients than other Counselors might be? You like to hug them?\"\n\n\"The ones that like to be hugged, yes. The ones who sometimes need a hug.\"\n\n\"These are members of Starfleet, adults!\"\n\n\"I know that. But even adults in Starfleet need hugs now and then. As for the cadets, they're young people, many far away from their homes, their families, for the first time. It can be daunting for them-\"\n\nHe scowled. \"They need to be strengthened, not coddled! And not used as pawns in your obsession with Captain Hrelle.\"\n\nKami stiffened, baring her teeth. \"You'd better be prepared to explain that.\"\n\nAiken looked confident - unnervingly so. \"On Stardate 35000.24, you allowed Sasha to engage in an illicit relationship with Jared Miro, a cadet with problems involving relationships with women to the degree where he was expelled-\"\n\n\"Jared Miro was also under my care, and his issues were protected by medical confidentiality; I could hardly warn her about him. And she was mature and astute enough to recognise him for what he was without my intervention. She suffered no more trauma than anyone else with a disappointing first love.\"\n\n\"But if it hadn't been disappointing, if it had distracted her from becoming possessive of your growing relationship with her stepfather, that would have been advantageous for you, wouldn't it? It certainly was when she subsequently entered into a relationship with Giles Arrington. That was even better for you, wasn't it? It kept her distracted, and made Giles feel loyalty towards the man he was secretly watching on behalf of his family!\"\n\n\"It was never like that! Giles had been pressured by his family, but he never took action. As for their relationship, she's a legal adult. I'm not her mother.\"\n\nNow he laughed, albeit with no trace of humour. \"That's not what you told her on her return from seeing her mother's killer executed! Did you or did you not tell her you loved her, and that she could look upon you as a surrogate mother?\"\n\n\"I said she could do so, or see me as a Counselor, or a friend.\"\n\n\"And that had nothing to do with your professed love for her stepfather?\"\n\nKami didn't answer.\n\nHe pressed on. \"Did you not think that by saying that, you placed her, an emotionally vulnerable girl, into an impossible position!\"\n\n\"It was never like that-\"\n\n\"Do you still go through Seasons? Still produce pheromones to attract mates?\"\n\n\"That's none of your damn business!\"\n\n\"I checked the medical records; you still obtain suppressants from Sickbay.\"\n\n\"Yes, that's what responsible Caitian females do.\"\n\n\"Yes. Responsible Caitians obtain them. As for actually using them?\"\n\n\"I've always used the necessary dosage when necessary!\"\n\n\"No you haven't! You mentioned as much in your Personal Log! Don't you remember?\"\n\nHe reached out and took her by the wrist. Kami pulled back---\n\n---She stood in her bathroom, grooming herself, readying for an evening with Esek, her thoughts filled with the sound of his laughter, the image of his broad shoulders. Such a gorgeous, gorgeous man!\n\nShe looked down at the strip of oral suppressants she had to take on a regular basis for the next fortnight; they made her mouth dry, but they were a necessary evil. She didn't want to lead the Captain astray.\n\nOn the other hand...\n\nShe needed a dose of three that evening to be effective. But what if she only took two? It wouldn't be fully effective, she'd still produce some pheromones. Not enough to be consciously detected, but enough to... catch his interest, keep him distracted.\n\nShe shouldn't. It wasn't ethical.\n\nShe did it anyway---\n\n---Kami pulled back, shocked at the revelation. It was true! She had deliberately lessened her self-medication, to keep an edge, a hold on him! Shame gripped her.\n\nAnd Aiken saw it, too. \"Yes. You might be able to fool yourself, out here on your own, but it's obvious to anyone else. You saw Captain Hrelle as a potential mate, after years of loneliness following the cruel death of your husband Rmorra. \n\nYou became obsessed with Hrelle. And like an addict, deceiving themselves into thinking they can manage their addiction, you slid further and further into impropriety. You had 'sleepovers' with the Captain, appeared naked and flirted with him. You manipulated his stepdaughter and your other patients.\"\n\nShe felt like she'd been punched in the stomach. Nothing seemed certain any more. \"N-No-\"\n\n\"Yes,\" he countered, simply, confidently. \"You can see it all now, can't you? Grooming Sasha and Giles to fall in love, manipulating her friends to encourage them, making Sasha look upon you as a maternal figure, so when you and Hrelle finally mated and were openly a couple, she would not object-\"\n\nTears poured down the sides of her muzzle. It was all so plain, so undeniable now.\n\nAiken drew closer again, taking her hand once more, his voice suffusing into her. \"I'm not unsympathetic, Kami, so I'm going to make this offer to you: Resign, today. I won't interview the Captain, I'll certify him fit to return to duty. And I'll take over as Ship's Counselor until we reach Starbase 154, and from there, you can book passage back to Cait. You'll still be able to practice there, but your career in Starfleet is finished. As is your relationship with the Captain.\"\n\n\"N-No, I can't-\"\n\n\"You must. Whatever you think you have with him, it was based on deception and manipulation. That's a terrible foundation. You know this.\"\n\nYes. She did...\n\n*\n\nDeck 4, Transporter Room:\n\n\"Jonas!\" Grev smacked his combadge link shut. \"Where's that boy? It's not like him to not respond!\"\n\nBeside him, Hrelle was strapping a phaser to his belt. \"He might still be getting interviewed with that Lieutenant Aiken.\"\n\nThe Tellarite's blunt snout wrinkled. \"Pity, he will be missed.\" He squinted his beady black eyes at the other Engineering Cadets, Soolamea and Yeager, and Ensign Utrech. \"It'll just be the four of us, then. You have your tools?\"\n\nAs they indicated the diagnostic instruments they carried on shoulder straps, Professor Solberg stood nearby, snapping, \"We have tools of our own over there, Starfleet!\"\n\n\"And yet you haven't identified the source of your problems, have you?\" Grev nodded to his team. \"I have something even better: an ingenious crew!\"\n\nHrelle smiled - then started at the scent he could from a figure approaching from down the corridor. He turned. \"Kami!\"\n\nShe drew up to him, her face a mask of barely-controlled anguish, aware of the presence of others watching. \"Captain... may I have a quick word with you?\"\n\nHrelle looked around, before indicating the Main Computer Room, opposite the Transporter; as he expected, it was empty. Before the door even slid shut, he approached her. \"What's wrong-\"\n\nShe held up a hand to stop him. \"Listen, I wanted to tell you, face to face, before word got out: I'm resigning.\"\n\n\"What? No!\"\n\n\"Yes! Lieutenant Aiken has enough evidence to charge me with multiple counts of breaches of medical ethics! If it went to a tribunal I could be struck off! This way, I can still go back and practice on Cait, and you and the rest of the cadets don't have to go through any more questioning.\"\n\nHis heart was racing. \"Kami, stop thinking like that-\"\n\n\"One of us has to, Esek. One of us has to be realistic. No matter how we try to justify it... I was wrong. I let myself fall in love with you. I let you fall in love with me. I encouraged an inappropriate closeness that culminated in sex. And I- I used Sasha and the other cadets to further my selfish ends. I can't deny that anymore.\" Tears rolled down the sides of her muzzle. \"I don't want to deny it, either. I have to face the consequences of my actions.\"\n\nHrelle stared at her for a moment, before forcing his voice into a soft and gentle and reassuring tone, \"Kami... I understand. And you need to know, that no matter what happens, we'll get through it together.\"\n\n\"No! We can't be together! It's wrong, and it'd be a greater wrong if you throw away all you've taken back, just to be with me! You have Sasha again, you have a ship again! You're only just restarting your life. You can't discard all that for me.\"\n\n\"Don't you think that's my decision to make?\"\n\nHe stepped forward, but she drew back again, anger flaring up now. \"Stop being a lovesick idiot, Esek! We're adults, not cubs!\"\n\n\"I know we're not, Kami. But I love you. That's how I know that this is the right thing-\"\n\n\"What in the Seven Hells do you know? Look at you! A pathetic, disfigured wreck of a man! One who has to fall in love with his Counselor, for Mother's Sake! You say you love me? I bet you said that to Hannah all the time! When did you think of her last, Esek? That's how much your words are worth to any woman!\"\n\nHe stepped back, shaking, eyes wide, looking as if she'd clawed his face off. Looking ready to claw back.\n\nInstead, through clenched teeth, he snarled, \"I have work to do. If you're smart, you'll get out of my way and not say another fucking word.\"\n\nKami stepped aside, allowing him to depart.\n\nThen, instead of screaming and attracting attention, she swung back and slammed her fist into the wall, breaking four bones in her hand.\n\n*\n\nDeck 1, Bridge:\n\nCommander T'Varik had noticed the change in the demeanour of Alpha Squad as they took their respective posts: there was a silence, a sullenness, which the Vulcan attributed to the emotional uncertainty over the fate of Kami and Hrelle - an uncertainty that T'Varik secretly shared, though of her course her discipline kept it under complete control.\n\nShe had been prepared to leave it at that, and perhaps speak with them privately during a break later - until she noted the appearance of Cadet Eydiir, carrying a psychotricorder. \"Cadet, you are meant to be on duty in Sickbay.\"\n\n\"Yes,\" the Capellen admitted. \"Dr Ling gave me leave to conduct a medical check.\" She moved to Sasha at the Ops console, passing the psychotricorder over the other girl and studying the resulting readings.\n\n\"Looking for something in particular?\" Sasha asked.\n\n\"Yes.\" The Eydiir moved down to the helm, where Rrori received a similar scrutiny, before moving onto Neraxis at Tactical and finally Kit at Science, stopping and frowning. \"You are different.\"\n\n\"I would expect to be, Friend Eydiir.\"\n\nT'Varik rose from the Captain's chair. \"Cadet, explain the nature of this check you are performing.\"\n\nEydiir faced her, collating the data on her screen. \"I am examining everyone who has been alone with Lt. Aiken. With the exception of Kit and myself, they have experienced abnormally high levels of psilosynine.\"\n\nThe Vulcan frowned. \"You are certain?\"\n\n\"What's... psilosynine?\" Sasha asked.\n\n\"A neurotransmitter produced in the brains of most humanoids, though to greater degrees in races with telepathic abilities, such as Vulcans and Betazoids,\" Eydiir explained. \"Although when it appears in such amounts in non-telepathic races such as humans and Caitians, it is indicative of their having been on the receiving end of telepathic events such as mind melds.\"\n\nT'Varik stepped forward, hand outstretched for the psychotricorder, which Eydiir proffered. She examined the readings herself. \"This appears to be the case.\"\n\nEydiir looked to the others. \"The three of you, and Jonas, came out of your interviews appearing distracted, almost traumatised.\"\n\n\"You can't blame us,\" Sasha defended, looking confused and alarmed. \"After what he revealed about what Kami did-\"\n\nT'Varik faced her now. \"What did he reveal?\"\n\nThe younger girl swallowed, flushed. \"He- He told me not to say anything to anyone-\"\n\n\"Cadet, I am giving you a direct order. What did he reveal?\"\n\nSasha looked pained now, as if fighting something. \"She- She told me that she and my Dad had been... been lovers since coming onboard the Surefoot.\"\n\n\"No. They have not.\"\n\nSasha blinked. \"But- But she said- I distinctly remember hearing her say it-\"\n\n\"No,\" T'Varik repeated forcefully. \"They have not. I will not detail the extent of my knowledge, but I can assure you that this is not the case.\"\n\n\"But, she-\" Rrori began, looking just as confused. \"I can vividly recall her telling me the same thing.\" But his expression belied how much he believed this. \"I hear it, see it. And yet... my nose, my other senses, tells me that's not true.\"\n\nT'Varik nodded. \"The Caitian sensory receptors have different proportions to other humanoids.\" \n\n\"I remember one of my first sessions with her,\" Neraxis confessed warily. \"She asked me to help get Sasha and Giles together, so that she could continue to be with the Captain. But that's not something I'd forget easily. Why am I only remembering it now?\"\n\n\"A suppressed memory, perhaps,\" Eydiir considered.\n\n\"Or a false memory, implanted,\" T'Varik offered.\n\n\"If the protocols for interview confidentiality are rescinded,\" Kit began, rising to his feet. \"I must recount that the Respected Lieutenant kept touching my hand, repeatedly insisting that Most Respected Counselor Kami had confessed an illicit relationship to me. This was not true, and I denied it as such. He then inquired about Qarari brain configurations and told me to leave.\"\n\n\"He touched my hand, too,\" Sasha confirmed, growing pale.\n\nT'Varik looked to Neraxis and Rrori. \"Did he make physical contact with either of you?\"\n\nThey nodded together, looking to each other.\n\n\"He tried to touch me,\" Eydiir declared. \"I did not let him.\"\n\n\"That is fortunate for you.\" T'Varik touched her combadge. \"Cadet Ostrow, please respond.\" When there was no response, she asked, \"Computer: locate Cadet Jonas Ostrow.\"",
        "\"Jonas Ostrow is on the Bridge.\"\n\nEydiir held up a spare combadge. \"I found this when I went looking for him.\"\n\n\"He was more upset than any of us,\" Neraxis breathed, her dark blue paling as she rose to her feet. \"We have to find him.\"\n\n\"He will be found.\" T'Varik raised her voice again. \"Beta Shift: report for bridge duty immediately. Lt. Abed: report to the bridge, armed. Dr Ling: Alpha Squad is reporting to you, initiate a full neurological examination on all of them. T'Varik out.\" She looked to Alpha Squad. \"With the exceptions of Eydiir and Kitirik, you appear to be the victims of psychic assault.\"\n\n\"Why?\" Rrori asked.\n\n\"I will ask our chief suspect, after he is in custody.\"\n\n\"What about Jonas?\" Sasha asked, \"He knows this ship better than anyone else, he can be anywhere!\"\n\nThe Vulcan nodded. \"Computer: where is Counselor Shall?\"\n\n\"Counselor Shall is in Sickbay.\"\n\nT'Varik raised an eyebrow, just as Lt. Abed and Beta Squad entered the bridge. She looked to Sasha and the others. \"I believe you can update the Counselor discreetly, and enlist her to find Jonas. Her senses can undoubtedly track him faster than a general search, and given the possible fragility of the state of his mind, it will be better to restrict the search party to one.\"\n\n*\n\nKami was flexing the hand she had broken, now repaired thanks to Dr Ling's nurse, but lingered around, having heard the strange announcement from the First Officer. When Alpha Squad entered, she strode up to them. \"What's wrong?\"\n\nEydiir took the lead. \"Lieutenant Aiken has some sort of telepathic ability. He used it on at least some of us to alter our memories, to make us believe lies about you.\"\n\n\"What? That's not possible!\"\n\n\"My preliminary scans say different, and Dr Ling will confirm the findings. Commander T'Varik is off to arrest him now.\"\n\nThe breath caught in her throat. Memory alteration? That was... that was obscene!\n\nAnd... also made a lot of sense, as to why she had memories of herself, memories that she would have sworn weren't true, but still felt real. So real she believed them. And, to judge from Sasha's earlier outburst, real to the others. Sickened to her stomach, she started, \"I- I'm so sorry-\"\n\n\"Never mind that,\" Sasha interrupted. \"You have to find Jonas.\"\n\n\"Jonas? Where is he?\"\n\n\"No one knows! He took off his combadge, T'Varik doesn't want the whole ship knowing what happened now, she wants you to find him.\"\n\n\"Your father-\"\n\n\"He's over at Tyche Station.\"\n\nKami nodded. \"I'll find him, and bring him back here.\"\n\n*\n\nShe tried to stay focused on her tracking, a far more difficult feat than non-Caitians might understand; not all of her people possessed the same level of skill in using their nose, any more than all Klingons were master fighters or all Vulcans were master intellectuals. Fortunately, a few choice questions with some passers-by pointed her in the right direction, down into the secondary hull, a quieter, less-populated section of the ship, whose more confined interiors allowed the young man's scent to linger for longer periods.\n\nInwardly, she was horrified at what had happened to her and the cadets. She was furious. To be invaded like that, their most private places...\n\nShe wanted to find Aiken right now. Find him and-\n\nNo. She forced herself to focus on the task at hand.\n\nShe heard the young man in some anonymous open airlock before she saw him, and relaxed even further, quietly approaching and poking her head around the corner. \"Jonas?\"\n\nHe was sitting on the floor, staring at the opposite wall, his face blank, his hands fidgeting.\n\nWith a sharp cutting tool in one hand. Slowly rotated by agitated fingers.\n\nKami stepped into the doorway slowly, never feeling this level of anger and anxiety from the young man before. \"Jonas, I heard that something bad happened when you saw Lieutenant Aiken-\"\n\n\"Don't talk to me,\" he cracked, trembling, his eyes looking wet, his grip on the cutter tightening. \"I trusted you. I trusted them. All of you said you liked me. You were lying-\"\n\n\"No,\" she denied softly, slowly descending to her knees beside him. \"What you think happened, didn't. Your memories were altered. You, and me, and the others. It was Aiken-\"\n\n\"I liked you!\" he snapped, facing her now. \"I came to you, opened up to you! And you- you-\"\n\n\"Jonas,\" she murmured, reaching out and gently touching the cutter. \"You're not going to use this, are you?\"\n\n\"What?\" He stared down at it, as if seeing it for the first time. He let her take it.\n\nKami set it aside, swallowing. \"Jonas, Lieutenant Aiken planted false memories in you. In all of us. We don't know why he did it yet, but you have to believe me-\"\n\nHis lips quivered. \"You said I was- I was-\"\n\nNow she took his hand in hers, feeling her own tears race down from her eyes. \"Jonas, I swear on my cub's life, whatever bad thing you might think anyone has said about you... is false. Do you know why? Because there's nothing bad to be said about you. You are a bright, sweet, gentle, wonderful young man, and I am so very proud and happy to know you. We all are: myself, Captain Hrelle, Sasha and Neraxis and Eydiir and Kit and Giles and Rrori and Chief Grev and everyone else. I have never heard a bad word said about you.\"\n\nShe drew closer, taking his other hand.\n\nHis trembling increased. \"I'm sorry- I'm so sorry-\"\n\n\"Shhh... come here sweetheart.\" She took him in her arms and held him tightly, her own tears almost as copious as his.\n\n*\n\nAuxiliary Office:\n\nLieutenant Aiken was sitting at the desk, rubbing at his temples, when the door slid open without warning, and Commander T'Varik and Lieutenant Abed entered, the latter carrying some sort of tricorder in his hand. He stood up and walked around towards them, recovering quickly. \"Commander! You'll be pleased to hear that I will not be conducting any more interviews.\"\n\n\"I know. Lieutenant Martin Aiken, you are under arrest on suspicion of multiple counts of telepathic assault, as detailed under Starfleet Regulation 128.\"\n\nAiken paled. \"Those are very serious charges, Commander.\"\n\n\"Indeed.\"\n\n\"You realise this is merely Counselor Shall's attempt to deflect-\"\n\n\"Counselor Shall did not raise these charges against you. Cadet Eydiir Daughter-of-Kaas has. And she has provided sufficient medical evidence for me to take her accusations seriously enough to be here now.\"\n\nHe shook his head. \"That girl has faked the evidence! She's driven by a deep-seated jealousy of her friend's relationship with Giles!\" Then he reached out quickly and clasped his hand around her wrist. \"You remember her last outburst?\"\n\nT'Varik stood there impassively, her furrowed brow the only visible reaction in her demeanour. \"You are attempting to force a telepathic bond between us, as you did with the others. It is a waste of time and effort. I am Vulcan; we possess many defences. Allow me to demonstrate another.\"\n\nShe reached up with her free hand to his neck, pressed down and pinched.\n\nAiken spasmed and dropped to the floor, unconscious.\n\nT'Varik stared at him for a moment, before asking, \"Mr Abed, you recorded the incident?\"\n\n\"Yes, Commander, both multispectral and neurological; I'm, ah, not sure about what I just saw-\"\n\n\"I will instruct you at a later date. In the meantime, secure the psychotricorder and the prisoner as per procedure; do not allow him physical contact with anyone. I will need to update the Captain on recent events.\"\n\nThe door slid open - and Kami entered, her face a vision of terrible fury, claws extended and teeth bared. \"Where is he? Where-\" She looked down at his unconscious form.\n\n\"He has been disabled,\" T'Varik informed her, subtly stepping between them.\n\n\"Not disabled enough.\" She drew closer.\n\n\"You need to return to Sickbay and be examined, along with his other victims,\" T'Varik reminded her gently.\n\n\"He hurt us!\" the Caitian shrieked. \"He hurt them! Jonas almost- he...\"\n\nT'Varik reached out and set a hand on Kami's shoulder. \"I know. And he will pay for his crimes. But not at your hand; anything you do to him now will ultimately only work in his favour. Return to Sickbay, Kami. Please.\"\n\nKami was shaking in place. Then she breathed in slowly, deeply, before finally relaxing a little. She nodded silently, unable to look at Abed as she turned and departed.\n\nAbed breathed out. \"I've never seen her like that before.\"\n\n\"It is unsurprising; telepathic memory invasion and alteration is a particularly execrable crime, while thankfully remaining a rare one. Secure the prisoner, Mr. Abed. His comfort... is not a priority.\"\n\n*\n\nTyche Station:\n\nHrelle stared at the red and white spheres, looking like a collection of colourful inflatable beach balls more than anything else. Or spatial mines. He focused on the former image. \"And that's them? Your games?\"\n\nSolberg grunted. \"I refuse to believe they're something as trivial as that. By all accounts, the Malbrukians were as advanced as they were peaceful, when my ancestors were sitting around tanning hides and singing about the approaching Ragnarok. To have only these survive-\"\n\n\"At least something did survive; how many civilisations have been wiped out without a trace?\" He watched as a number of diminutive, pink-skinned beings milled around one of the spheres, some working the panels on the upper half, others recording results. They were identical, including their utilitarian jumpsuits, and communicated with each other in high-frequency sounds that made Hrelle's ears twitch. \"Who are they?\"\n\n\"Bynars, from the Beta Magellan system. They're interlinked somehow to each other with cybernetic implants and speak in binary code. They're unnerving... but they're master computer technicians and cryptologists. They haven't had much success finding anything wrong with the systems, so they're working on deciphering any possible activation sequences with the Spheres, and cataloguing the results for analysis.\" As if in illustration, the Sphere the Bynars were testing began reacting with a new sequence of lights and sounds, making the Bynars excited.\n\n\"Uh, Professor,\" Hrelle began. \"If you don't know what these Spheres do, is it really a smart move to just keep pressing buttons until something actually happens?\"\n\nThe elderly man harrumphed now. \"We're not monkeys, blindly smacking the side of a bomb with a hammer, Captain! This is all carefully controlled!\"\n\nHrelle was less sanguine about the method, remembering all the planets he'd read about who'd probably been just as careful with the projects they worked on - biological and nuclear weapons, doomsday machines, artificial intelligence - but he knew his foul mood was more from his fight with Kami before beaming over here.\n\nHe couldn't believe she would be so vicious as to use Hannah against him, though maybe he just hadn't assessed how difficult the situation with Aiken and the investigation had been. He had undergone similar scrutiny and criticism thanks to certain members of Starfleet Command, but he had Kami for support. Had he not been as supportive to her now? Had he simply made things worse by having sex with her, and then proposing, adding more pressure to her?\n\nHe shouldn't be here. He should be back with her, now-\n\nHrelle's combadge chirped. \"Captain, this is Commander T'Varik. May I speak with you privately please?\"\n\n\"One moment. Excuse me, Professor.\" As he stepped away, he continued, \"Go ahead.\"\n\n\"Captain, I am aware that technically you are still relieved of duty, but events have occurred here that you need to be made aware of: Counselor Shall and members of Alpha Squad have been victims of assault from Lt. Aiken.\"\n\nHis heart stopped. \"What happened? Are they okay?\"\n\n\"Lt. Aiken apparently possesses some level of telepathic ability; he used it to attempt to alter their memories to implicate the Counselor in unethical practices, for reasons as yet unknown. They are currently being treated for varying levels of psychic and emotional trauma.\"\n\nSasha... Kami... his cubs... His subsequent words seeped out through clenched teeth as a dangerous growl. \"Where is he now?\"\n\n\"I have confined him to the Brig, after he attempted to assault me as well. I will investigate further and report accordingly-\"\n\n\"No. I'm taking over, suspension or not. Beam me back, immediately.\"\n\n\"One moment, Sir.\" A pause, and then, \"Sir, our sensors are detecting an unusual collection of neutrinos and other subatomic particles coalescing around the station. This is creating a growing subspace interference now preventing transport. Are they running some sort of experiment related to their work?\"\n\nHrelle looked back at the Spheres. \"Possible. Keep this line open and keep listening, chirp in if necessary.\"\n\n\"Captain!\" Chief Grev strode up to him as he returned to Solberg. \"We've been running all the usual tests, and there's nothing wrong with the machinery itself-\"\n\n\"Hah!\" Solberg cackled, tapping his cane on the floor. \"So much for Starfleet ingenuity!\"\n\nThe Tellarite scowled at the Professor, but stayed focused on Hrelle. \"It's not the systems that's the problem, it's the fields surrounding the systems!\"\n\n\"Fields? T'Varik's reporting neutrinos and other exotic particles collecting in a field around the station.\"\n\n\"As part of the diagnostics, we tested some of the neutrino scanners; they're detecting a 100% clockwise spin in the immediate area!\"\n\nBefore Hrelle could ask for an explanation as to the significance of that, Solberg barked, \"That's not possible! Probability dictates that there should be a 50/50 mix of clockwise and counter-clockwise spin!\"\n\n\"Tell the neutrinos that, you old fossil!\" To Hrelle again, he continued, \"There are inexplicable and, well, improbable power drops and surges, malfunctions... Captain, I saw a perfectly healthy power conduit crumble into dust before my eyes, for no reason!\"\n\nA cracking sound drew Hrelle's and everyone else's attention, as a panel of transparent aluminium acting as an inner lining to an observation window suddenly cracked, as if by an invisible fist.\n\nHrelle frowned and looked back at the Spheres. Games... probability... \"Those devices are affecting probability fields around us. Subspace interference is building up, preventing transport. Professor, get them to stop what they're doing.\"\n\n\"You can't be serious, Hrelle-\"\n\n\"NOW!\" he roared, his hackles raised.\n\nThe elderly man, taken aback by the outburst, turned to the Bynars - just as they completed a new sequence, sending a Sphere into an orgasm of colour and sound.\n\nAnd alarms went off throughout the station.\n\n*\n\nUSS Surefoot, Sickbay:\n\nDr Ling pressed the hypospray against Sasha's neck, \"Desegranine will ease the effects of the false memories, and much of the emotional trauma you might have experienced. As for the aftereffects... well, you'll need to speak with the Counselor.\"\n\nSasha breathed out, \"Thank you.\" Then she looked at the others affected: standing or sitting around, shocked, sullen, confused, all reflecting what she was feeling, too.\n\nThen she focused on Kami, looking even worse, after bringing in poor Jonas. Sasha remembered the things she'd said to the woman, after Aiken's attack. Horrible things. It wasn't her fault, but that didn't assuage her guilt.\n\nShe approached Kami, standing before her, their eyes met. Sasha had so much she wanted to say, but had no words.\n\nShe embraced her instead, and was infinitely relieved to have Kami embrace her back.\n\nSuddenly the Red Alert klaxon filled the room, and T'Varik's voice followed. \"All hands to Emergency stations.\"\n\nSasha looked to the others, wondering if they were up for duty-\n\nAll of them mobilised.\n\nShe nodded to them, selfishly glad for the distraction. \"Let's go.\"\n\nAs a unit they departed, Kami with them.\n\n*\n\nTyche Station:\n\n\"We have multiple hull breaches, and the magnetic fields around the warp core are failing!\" Grev shouted over the station's own alarms. \"We have to evacuate!\"\n\nThe gravity failed, lurching the Operations Room and everyone in it to one side; Hrelle caught Solberg before the elderly man could fall and hurt himself. Shouting now, he asked, \"T'Varik, can you do anything about the transporters?\"\n\n\"Negative, Sir, the subspace interference is growing. The instability may even lead to a subspace rift.\"\n\n\"Understood. Get the Surefoot to a safe distance, in case we do breach. We'll use the lifepods to make it to the surface of the planet. Keep track: if a rift is about to open up... destroy the station.\"\n\n\"Acknowledged, Sir.\"\n\nBack with Grev, Hrelle commanded, \"Send the Evacuation alert, let's get to the pods!\"\n\n\"No!\" Solberg cried, \"Not without the Spheres!\"\n\nThe man turned as if to head back to the room where they were being examined, but Hrelle grabbed him by the scruff of his trousers and dragged him along, leaving his cane behind as the orders to evacuate the station filled the air.\n\nAs they made their way to the nearest lifepod, Solberg was still struggling. \"I'll have your command for this, Hrelle! Mark my words!\"\n\n\"Kiss my furry ass, Professor.\" He bundled the man, Grev, and his cadets and assistant into one lifepod. \"Buckle them up, Grev, see you down there.\"\n\n\"Don't be long, Sir,\" the Tellarite warned as the door slid shut. \"The warp core will breach in about sixt-\"\n\nHrelle missed the rest, but guessed he shouldn't tarry. He stayed long enough to see the lifepod launch into space, down towards the planet.\n\nHe moved along the curved corridors, dodging fires and smoke springing up seemingly from nowhere, wincing in pain at the sharp sounds of hull breaches.\n\nThe station lurched again, and Hrelle thought he felt the manoeuvring thrusters firing; a glance through an observation window confirmed they were moving... towards the planet. Seven Hells...\n\nHe found more personnel, ushered them into the remaining lifepods - and then his heart chilled as he heard one woman, having to be dragged into one lifepod, while she screamed, \"My baby! My baby!\"\n\n\"Where?\" he roared over the chaos.\n\nA man, possibly her partner, was pulling her in, saying, \"She's in the Residential Ring, Berth 46! We couldn't get through to it!\"\n\n\"Get going! I'll get her! I promise!\" He raced down the corridor as they closed their door and launched.\n\n*\n\nKami and Alpha Squad emerged onto the bridge, T'Varik sparing them a glance and, \"Are you fit for duty?\"\n\n\"They are,\" the Counselor assured her, taking her place at the Auxiliary Science station.\n\nT'Varik accepted that instantly. \"Beta Squad: report to your secondary stations. Alpha Squad: take your places.\"\n\n\"What's been happening, Commander?\" Sasha asked, on behalf of all of them.\n\n\"The experiments on Tyche Station appear to have produced a growing field of literal improbability - bad luck, to use the vernacular. And the bad luck has reached levels where the personnel must evacuate to the planet before the facility self-destructs, or creates a subspace rift that will endanger the planet.\n\nScience stations: monitor the neutrino spin, that will give you an idea of the scope of the field; feed the information to Helm. Mr Rrori: keep us out of the probability field, or we will begin to suffer the same malfunctions as the station. Tactical: scan the progress of the lifepods, Ops: scan the station for remaining lifesigns.\"\n\nEveryone moved as one, T'Varik waiting patiently, studying the image of the station as it tilted jerkingly towards the ever-approaching planet, like a bottle bobbing on a wave.\n\n\"The field is continuing to expand,\" Kit reported. \"Feeding coordinates to Helm.\"\n\n\"The subspace instability is increasing,\" Kami added. \"The computer is warning of an imminent danger of a rift opening up.\"\n\nT'Varik was not an expert on subspace physics... but knew enough about subspace rifts, especially ones opening up in the proximity of a planet's gravity well, to guess at the devastation it could cause. \"Tactical, bring photon torpedoes online.\"",
        "Neraxis paused, but then nodded. \"Aye, Ma'am. Torpedoes online.\"\n\n\"Commander!\" Sasha called out, \"Some of the lifepods are veering off their designated course, either because of malfunctions or the subspace instability! They're in danger!\"\n\n\"Understood, Cadet. Unfortunately, we cannot leave to assist at this time.\"\n\n\"Our shuttles can. Beta and Gamma Squads can use them to avoid the fields out there, and tractor the malfunctioning lifepods down safely-\"\n\n\"Make it so, Cadet, but I need you to stay at Ops, coordinating the efforts from here... and monitoring the station.\"\n\nSasha paused a moment before replying, \"Aye, Ma'am... And we're still getting a combadge signal from Captain Hrelle on Tyche...\"\n\n*\n\nSmoke was filling the air, and gravity failed, sometimes sending him up onto a wall or even the ceiling, but he persevered, holding his breath as he waded through a thick cloud of smoke before finding a vertical access down to the Residential Ring. More debris littered the floor: pipes, tools- and a rebreather mask, with a limited concentrated oxygen supply, but he grabbed it, thinking it might be useful.\n\nHe wondered how many seconds he had left before the warp core breached. Not enough, most likely. He read the numbers on the residential births: 44, 45- he heard the child crying before he even opened the door, staggering inside as Tyche lurched once more.\n\nThere was a human infant clinging to a crib, a toddler with mahogany skin and sable hair, bawling its head off. Hrelle didn't blame it. He swooped in and scooped it and a blanket up in its arms, smelling the defecation in its nappy. He didn't blame it for that, either; he was ready to crap himself too..\n\nBack in the corridor, he continued onward, trying to reach the nearest lifepod bay. There had to be some left here; not every member of the crew would have been down here to use them.\n\nThe empty launch bays told him otherwise.\n\nSeven Hells...\n\nHe held the child and the rebreather mask closer to him... he was never a believer, but then and there, he pleaded with the Great Mother for help...\n\n*\n\n\"The shuttles are reporting back,\" Sasha updated. \"All lifepods accounted for, they are being guided together. Squad Leader Falok has established a medical base on the surface, and Squad Leader Arrington is supervising the round-up of the stray lifepods.\"\n\n\"Acknowledged.\" T'Varik knew all that; she had been listening to Sasha coordinate her fellow cadets with impressive efficiency, particularly with regards to her father still in danger on Tyche Station. She would commend her and the others for their superlative efforts.\n\n\"The rift is forming,\" Kami warned.\n\nT'Varik steeled herself for the next command, and the inevitable responses it would cultivate. \"Tactical: arm photon torpedoes, prepare to-\"\n\nThe station erupted in a blue-white plume of light.\n\nT'Varik watched, reminded of an ornate crystal bowl she once saw accidentally dropped at a party, shattering in ripples as the kinetic energy travelled through the structure from the point of impact outwards, creating thousands of tiny shards.\n\nBehind her, she heard Sasha gasp, as the rest of the bridge held its breath.\n\nT'Varik rose and turned, noting the shocked, sepulchre pallor on the girl's face. In a firm voice she ordered, \"Scan the area for him.\"\n\nSasha trembled, her eyes wide and fixed on the scene of destruction onscreen, as Kami joined her, staring as well.\n\n\"Sasha,\" T'Varik said, more softly now, \"Look for him.\"\n\nHer mouth opened in stunned disbelief. \"D-Dad-\"\n\n\"Your Dad... is a survivor,\" the Vulcan reminded her. \"But he needs us now.\" Louder, she added, \"All sensors, Main and Auxiliary stations on Full Scan for the Captain! We may still pick up his combadge signal and transport him onboard, especially now that the interference should begin to clear!\"\n\nKami reached out and guided the girl's hands back to the Ops console, both of them now working in concert, as the viewscreen ahead changed to multiple tactical views. Tyche was gone now, and presumably the alien Spheres, and the subspace rift that had almost opened up. Debris was raining down onto the planet, albeit in pieces that were small enough to burn up completely in the atmosphere, no doubt creating a memorable display from the surface.\n\nT'Varik joined the search, privately allowing herself some reflection on the man out there now, an individual who had left a less-than-stellar impression upon her at first meeting, seeing him as someone who was facetious, lazy, profane, effusive... he had admittedly retained many of these qualities since, but to them she had added courageous, generous, forgiving, paternal, inspirational...\n\nThe Universe would be a poorer place without him in it.\n\nThe odds of his survival were incalculable... or at least improbable.\n\n\"Wait.\" Kami's voice broke the terrible silence on the bridge. \"Sector D-14.\"\n\nT'Varik's eyes moved to that part of the viewscreen, where she saw a tiny red streak of something beginning to enter the atmosphere of the planet. That part of the screen was enlarged, again, again, again-\n\nThe screen filled with the image of a jagged piece of grey bulkhead, its edges flaring with the heat of re-entry like the petals of a flower.\n\nAnd Captain Hrelle standing upon it like a surfboard, clutching a child.\n\nT'Varik's cry broke the silence. \"Helm! Intercept course, one-quarter impulse! Transporter: lock onto the Captain's combadge signal, two to beam up immediately!\"\n\nShe kept her back to the two women at Ops, allowed their understandable emotional release.\n\n*\n\nThe Vulcan instructor at the Academy had been typically precise and humourless in his lecture on space exposure: \"The key concerns for most humanoids exposed to space are the following, listed roughly in the descending order of mortal significance: ebullism, the formation of bubbles in body fluids due to reduced ambient pressure; hypoxia, the rapid deprivtion of adequate oxygen supply at the tissue level causing flaccid paralysis; hypocapnia, the state of reduced carbon dioxide in the blood; decompression sickness; extreme temperature variations; and cellular mutation and destruction from high energy photons and sub-atomic particles.\"\n\nEvery word came back to him now, a quarter century or more later. He distinctly remembered snickering at the term 'flaccid paralysis'. But he ignored that now, ignored the ice crystals he felt forming from the moisture in his mouth and nose and in his shorts where he'd wet himself, ignored the burning from the bulkhead beneath his feet, certain that his boots had melted and were now welded to the duranium.\n\nIn his arms, the infant was wrapped up in its blanket, the rebreather mask large enough to cover most of its head. He wasn't sure if it was still alive; his hearing was shot, and his body was numb from the swelling tissue and the vibrations through the bulkhead as it skidded along the atmosphere.\n\nHe let the air in his lungs out, not wanting to risk internal rupture, and took a quick breath from the rebreather, before returning it to the child... wondering why he was bothering. This was the end. He wouldn't see Sasha again. He never even had a chance to say a proper goodbye to her... just like the last time, when he left her and her mother on the girl's birthday, and never came back. I'm sorry, Sweetheart. You are such a remarkable young woman, you will do such wondrous things with your life.\n\nAnd Kami... they parted on such terrible terms. I'm sorry, Beloved. I will love you always...\n\nThe light was blinding him, and he clutched the infant tighter. Sorry to you too, Small One, I wish I could have saved you...\n\nHe felt himself burning up, consumed by light...\n\n*\n\nSickbay:\n\nHrelle opened his eyes to the women standing around his biobed. His voice sounded like crunched paper. \"You... You...\"\n\n\"Yes?\" Sasha prompted. \"What is it?\"\n\n\"You... You bitches took your time getting me back...\"\n\nSasha giggled and hugged him, Kami smiled, T'Varik raised an eyebrow, Dr Ling harrumphed and departed.\n\nHe blinked. \"The infant-\"\n\n\"She recovered,\" T'Varik informed him, \"And has been reunited with her parents. They wish to meet you to thank you personally, when you have recovered yourself.\"\n\nHrelle grunted. \"I take it I got away with all my expected bits intact?\"\n\n\"If you mean will you make a full recovery, then the answer is Yes. Your survival is attributed to the lingering probability fields from the Spheres, and the heat generated by the duranium plating you were riding.\"\n\nKami smirked. \"Not to mention your massive balls!\"\n\n\"I will accept your assessment of the Captain's testicular properties,\" the Vulcan acceded mildly. \"The warp core breach of the station destroyed the Spheres and the rift, and there have been no further incidents reported. All evacuees escaped unharmed or with minor injuries, including Chief Grev and his Engineering team - thanks to the efforts of the cadets.\n\nWe have been ordered to remain in orbit pending the arrival of the USS Grappler, who will investigate the incident, provide the standard debriefing from Starfleet Intelligence.... and take our statements as part of the criminal proceedings against Lieutenant Aiken when they collect him.\"\n\nHe sat up suddenly, immediately regretting it but not caring. \"AIKEN! WHERE IS HE?\"\n\nKami set a hand on his shoulder and gently but firmly pushed him back down again. \"Simmer down, Papa Bear. He's been transferred to a holding facility on the planet until the Grappler gets here.\"\n\nHe looked at each of them in turn. \"So is someone going to tell me what in the Seven Hells happened?\"\n\n\"Lt. Aiken is part Vulcan,\" T'Varik explained, unable to not sound chagrined at the notion. \"He possesses a paracortex, the part of a humanoid brain in races such as Vulcans and Betazoids, that governs telepathic ability. But in Mr Aiken's case, his paracortex is underdeveloped, not allowing him to utilise these abilities without the aid of hyperzine, a dangerous cortical stimulant. When Dr Ling examined him remotely, she found traces of this drug still in his system.\"\n\n\"And why was he doing this in the first place?\"\n\nKami took over the narrative from there. \"I had his personnel record sent over from Starfleet Medical; when Commander Hilliard was informed of Aiken's actions, he proved a lot more cooperative than the last time I spoke to him.\n\nMartin Aiken has what you could charitably describe as a 'chequered career', getting moved on quickly from post to post because of his attitude and performance rating, before ending up on Malbruk II - which was tantamount to exile for him, it seemed. He saw making me resign and taking my place onboard, even temporarily, as his ticket out of that exile. He took hyperzine before coming onboard in order to alter our memories to facilitate this.\"\n\nHrelle frowned as much in pain as in the thought that someone would do that to the people he loved, and looked to Sasha, reaching out and taking her hand. \"Are you okay, hon?\"\n\nThe girl nodded - though it was obvious that wasn't the full answer. \"We will be. We've taken memory suppressants, and we'll be going through some more counseling.\"\n\n\"All of us,\" Kami added, looking at Hrelle again. \"Oh, and you'll be pleased to know that we are no longer suspended from active duty, that the charges against me have been dropped, and you have been signed off from Compulsory Counseling.\"\n\n\"How'd you manage all that?\"\n\nKami looked to an insouciant-looking T'Varik. \"Care to explain yourself?\"\n\nThe Vulcan breathed in, in an approximation of a sigh. \"I utilised a contact within Starfleet Medical; I believe the human expression is, 'I pulled some strings'.\"\n\n\"A 'contact'?\" Kami snorted. \"The Surgeon General himself?\"\n\nThe Vulcan almost shrugged. \"They are substantial strings.\"\n\nHrelle gasped. \"You know Admiral McCoy?\"\n\n\"We met several times during his visits to the Academy.\" She raised her eyebrow. \"He claimed I was the 'funniest damn Vulcan he'd ever met'.\" She paused and added, \"I had him backdate the signing off to several weeks ago, so any... impropriety that might have occurred in the subsequent time cannot be used as evidence in any subsequent complaints.\"\n\nHe breathed out. \"Complaints... did we ever learn who made the original complaint against Kami?\"\n\nT'Varik nodded. \"Former cadet Jared Miro.\"\n\nHe growled. \"If I ever see that insufferable little kussik I'm gonna kick his ass up into his brainsteam!\"\n\n\"It is perhaps best for all concerned that we will never be visiting Argelius, then. Captain, Dr Ling has stated you will need another 24 hours rest before you can return to duty. I will remain in command until then... after which I will be most pleased to return your ship to you. Cadet Hrelle, if you wish to remain with your father-\"\n\n\"No, Commander, we still have work to do, coordinating the return of the shuttles, restocking, collating reports, tracking the station debris still decaying...\" She looked to Hrelle. \"You don't mind if I go, do you?\"\n\nHe shook his head, smiling. \"Go on, Cadet. We'll talk later.\"\n\nHe waved them both off as they left him alone with Kami.\n\n\"Esek,\" she murmured, her eyes welling up, \"I'm sorry. I said some terrible things to you. I know I was under the influence of Aiken's false memories, but I still hurt you-\"\n\n\"Shhh.\" He reached out and took her hand. \"It's okay. It doesn't matter. Nothing matters, except us-\"\n\n\"No.\" She drew out of his touch. \"This incident has forced me to think things I'd rather not face. I'm not resigning now. But... regardless of Aiken's actions and the decision from the Surgeon General, the fact was I let myself get too close to you. I succumbed to temptation. I broke the rules. And as we witnessed, it all went horribly wrong as a result. I also said some terrible, terrible things, because I knew what would hurt you.\n\nEarlier this week you asked me to marry you. I wouldn't let you rescind the proposal, but didn't give you an answer either. \n\nI will now: No. As much as I want to do so... I can't. I don't deserve it.\"\n\n\"Kami, don't-\" He sat up to touch her.\n\nShe drew back further. \"Captain, I will be proud and happy to continue serving onboard your ship. And I will always be available to you should you need my advice. But we can't be together. Please... try to accept that, and make it easier for both of us.\"\n\n\"Kami...\"\n\nShe turned and left.\n\n*\n\nMalbruk II:\n\nSasha sat on the snow-capped hilltop, while around her the eternal trees abided, dark frost-patched evergreen, as numerous and densely packed as the hairs on her head, with irregular pauses for rivers and lakes, all the way to the wintry western peaks, their lines delicate, ephemeral, more dreamlike than actual beneath the patchwork grey of a sky of unwashed clouds. She had visited forests before, particularly on Earth during trips away from the Academy... but nothing there compared to the vast pristine beauty she found here.\n\nThe snow crunched beneath her as she shifted in place to ease her muscles. The crunch resounded in the solemn silence, as loud as the dull distant drumming of a bird in a tree, or a snapping twig beneath a bolting beast, and she had no wish to disturb the clearing below - or the animal pack who commanded it.\n\nThere were ten adults, led by a dominant male and female and their cubs. They were magnificent feline specimens: sharp-eared, sharp-faced, coated in a range of tawny greys and blacks, copper eyes pinpointed with ebony, and long animated bushy tails. Sasha had watched that afternoon as the dominant pair led four of the adults out to hunt, leaving the remaining two to mind the cubs; now they'd returned, with jawfuls of prey for the rest. She observed their snaps and cringes, games of dominance and submission.\n\nShe was in civilian clothes, but still wore her combadge, which chirped once: a pre-arranged signal from her friends when one of them was up here watching the pack, so as not to disturb the animals - it was their planet, after all. She twisted around and made her way down the hill, staying low until she knew the pack wouldn't have spotted her.\n\nThe cadets had agreed upon this area for their campsite: the three shuttles were parked in a large clearing, alongside the shelters, portable toilets, lanterns and campfires. Music played here and there, couples were walking out into the woods for some much-needed... personal time... and there was a general sense of fun.\n\nExcept in her own camp. Alpha Squad had set up like the others, built their shelters and a campfire and even a grill where various meats were sizzling, tended to by Kit.\n\nBut everyone sat around, silent, distracted.\n\nSasha understood. The doctor had helped with the false memories... but, as the doctor had warned, the emotional aftershocks would still be felt by them, and no one was quite willing to talk about it, not yet. She had almost tried to excuse herself from coming down here... but Kami had insisted.\n\nGiles was here, and though he had come to her, and tried his best to be sympathetic and understanding, she wasn't ready for him - and told him so, asking him to go back to Beta Squad. She hoped he wasn't too hurt by her rebuff.\n\nShe looked around them. Rrori, Neraxis... Jonas. Jonas looked devastated when Kami had walked him into Sickbay. She didn't ask what happened. Perhaps she should have, but she was too caught up in what had happened to herself, which only filled her with more guilt. What kind of leader was she?\n\n\"Friend Eydiir,\" Kit called out, holding up a skewer of giant water beetles, \"I am satisfied that mine are done, but I am less familiar with these tubes and discs of animal flesh.\"\n\nThe Capellan drew up with plates and buns, examining the grilling meat. \"I am not entirely certain about the shuris meat for Rrori-\"\n\nSitting feeding the campfire, the Caitian male sniffed the air. \"It's ready.\"\n\nThey ate together, the heat from the fire warming their outsides as much as the food was warming their insides. But they remained silent, though Eydiir and Kit, the only ones not affected by Aiken's psychic assault, did their best to crack at the tension. \"I examined the lake; there are no biological hazards, and it is fed by a hot spring. I believe there will be an evening swim when both moons rise.\"\n\n\"That sounds like fun, Friend Eydiir. Will swimming attire be mandatory?\"\n\n\"I suspect it will be discouraged.\"\n\n\"Excellent! I have studied humanoid societal attitudes towards public nudity, and look forward to seeing the various interactions tonight.\"\n\n\"Try not to be be too obtrusive.\"\n\nSasha stared into the flames. Aiken had reached into her mind, toyed with her memories, things she thought sacrosanct, and twisted them, abused them, made her think and feel lies. She wasn't certain what could be real or not. Was this what Dad felt like, at the hands of the Bel-Zon? Helpless at the whims of another?\n\nIs this what awaited her if she stayed in Starfleet? Is this what awaited them all?\n\n\"I see a full belly has not helped your moods,\" Eydiir said cryptically. \"Kit, get the Kit.\"\n\nThe Qarari spat the last of the beetle shells into the campfire, rose and departed for their shuttle. Rrori asked, \"What is this?\"\n\n\"An Emergency Kit prepared by Kami for this eventuality.\" As Kitirik returned, Eydiir accepted the metallic case, flipping it open in her lap and reaching inside. \"If you would, please.\"\n\n\"Of course, Friend Eydiir.\"\n\nDespite herself, Sasha watched bemused as Kit moved around the circle; she frowned at what he gave her, holding it carefully. \"Phasers? Kami thinks we should have phasers with us?\"\n\nHer Capellan friend set aside the emptied case and stood up, brandishing her own phaser. \"She believes it would help us blow off some steam, as she put it.\"\n\nSasha looked to the others - Neraxis, Jonas, Rrori - all equally armed, all equally astonished. \"Has the Counselor lost her mind?\" She looked up at Eydiir. \"What would possess her to give us these after all we've been through?\"",
        "The other young woman regarded the phaser in her hand - and then aimed and fired it point blank at Sasha.\n\nThe others yelped, as did Sasha - though hers was shock mixed with a tingling sensation when the beam struck her chest. She nearly fell backwards in her seat, but bolted to her feet. \"What the hell-\"\n\n\"Tag Phasers,\" Jonas muttered, studying his own. \"One setting, mix of photons and gravitons; harmless. Very mild charge, leaves a short-term visual trace.\"\n\nSasha glanced down, saw a red glow receding around where the beam struck, like a lingering flare. \"And that's it? A stupid little set of toys is supposed to suddenly make us-\"\n\nShe was struck by another beam. She looked across the circle at Jonas, who was still aiming his phaser at her. He looked down at it and noted, \"Hmph. They work.\"\n\nShe pursed her lips challengingly. \"Yeah? Let's see if mine works.\" She aimed and fired at him.\n\nJonas threw himself to one side out of his chair, avoiding the beam.\n\n\"Have we engaged in the game, Friend- Oww!\" Kit yelped as Neraxis hit him with her phaser.\n\nThe six of them rose and scattered, firing wildly in each other's direction, moving around the shelters and the shuttle, laughing and shouting and daring each other to come out and show themselves.\n\n\"Come on, assholes!\" Neraxis taunted. \"I'm the Security expert here- Hey!\"\n\nEydiir moved around after hitting her. \"Exercise your mouth less and your firing arm more.\"\n\nSasha was grinning, especially when the six of them found themselves moving into the neighbouring camps, ignoring their stares and responding to mild rebukes by shooting them too.\n\n\"Having fun?\"\n\nShe was squatting behind one of the other squad's shelters, when she twisted to look over at Giles, who was sitting with a bottle of beer, watching with amusement.\n\n\"Yes,\" she admitted - shooting him now. To the laughter of his squad mates at this, she shouted, \"I've marked him, girls, he's mine, so keep your grubby hands off him!\"\n\nThen she was off again.\n\n*\n\nUSS Surefoot, Deck 2, First Officer's Quarters:\n\nShe looked down at the strip of oral suppressants she had to take on a regular basis for the next fortnight; they made her mouth dry, but they were a necessary evil. She didn't want to lead the Captain astray.\n\nOn the other hand...\n\nShe needed a dose of three that evening to be effective. But what if she only took two? It wouldn't be fully effective, she'd still produce some pheromones. Not enough to be consciously detected, but enough to... catch his interest, keep him distracted.\n\nShe shouldn't. It wasn't ethical.\n\nShe did it anyway-\n\n\"No, Kami, this did not happen. This is unreal.\"\n\nShe blinked, looking to her right, starting at the appearance of- \"T'Varik?\"\n\nThe Vulcan was standing there. \"Unreal. Appearances only. They are shadows. Illusions. Nothing but ghosts of reality. They are lies. Falsehoods. Spectres without body. They are to be ignored.\"\n\nAnd as she listened, she felt the tendrils of reality around her begin to unravel, grow opaque, intangible. Her bathroom faded away-\n\n-And she was back in T'Varik's quarters, kneeling on the floor opposite the Vulcan, whose hands were still outstretched, fingertips touching the Caitian's temples at appropriate points.\n\nNow T'Varik opened her eyes and lowered her hands. \"That should be the last of the false memories. You will still experience intermittent flashes, but they should not bother you overmuch.\"\n\nKami swallowed, searching for them again, but they were fleeting, like the last vestiges of a nightmare. Then she found she was holding her breath, and relaxed with a half-gasp, half-laugh. \"Thank you for this. I... I know mind melds aren't agreed upon casually with Vulcans. But I'll be better able to help the cadets if my own mind is clearer.\"\n\n\"That is logical. And if I may say, you have shown considerable courage in suggesting a mind meld, given what you have undergone.\"\n\nShe shrugged, displaying a casualness she did not quite feel. \"A fire can burn your flesh, or it can keep you warm. A blade can end a life, or save it. Never fear the tools, only how they're used. Also, you're my friend. I trust you.\"\n\nT'Varik nodded. \"I hope to honour that trust. I am prepared to extend my services as well to the members of Alpha Squad affected by Lieutenant Aiken's crimes, if required and requested. Particularly for Mister Ostrow, if the thoughts I picked up from you during the mind meld were accurate.\"\n\nKami sobered a little more, leaning back out of her sitting position. \"I worry about him. He's always been more sensitive than the others, more empathetic and less assured. He's very dependent on us, and his friends, and still needs time to build up his confidence and self-reliance.\"\n\n\"So I have noticed. But I believe he will get there, with our assistance. And yourself? With the medical and ethical impediments now removed, will you resume your relationship with the Captain?\"\n\nHer expression changed. \"We, ah, decided that it was for the best to keep things on a strictly professional standing between us. A physical relationship at this point in our lives isn't really appropriate.\"\n\nT'Varik made a sound of acknowledgement, but otherwise continued staring.\n\n\"What is it?\"\n\n\"It is nothing.\"\n\nKami frowned. \"You once told me that you were my friend, but you would not be a palliative friend. So... honour that and tell me what's wrong. I wish to know.\"\n\nThe Vulcan folded her hands together on her lap. \"Based on fleeting images I could not avoid in our mind meld, I do not believe that this is a decision that was arrived at together. I believe it was one you came to on your own, following the incident when Captain Hrelle nearly died from space exposure. I believe you were reminded too much of your time with your late husband Rmorra, and what you had to cope with when he was killed. I believe you are afraid to face the loss of a spouse again.\"\n\nKami grunted. \"Don't hold back, tell me what you think.\"\n\n\"I believe I did just that. And I shall offer more: a reminder of mortality, for ourselves and for those around us, should not be treated as a cue to withdraw ourselves, but to cherish the limited time we do have with others.\"\n\nShe smirked. \"That's quite a lot to offer in just a few words.\"\n\n\"I am nothing if not efficient.\"\n\nKami was ready to protest further. But suddenly the silence in the room was broken by an intercom chirp. \"Captain Hrelle to Counselor Shall: please report to my office.\"\n\nKami sighed and replied aloud, \"On my way.\" To T'Varik she added, \"Thanks again. For everything.\"\n\nThe Vulcan nodded.\n\n*\n\nShe entered his quarters, finding him leaning against his desk, arms folded across his chest. \"How are you feeling? Did the session work?\"\n\nShe waited until the door closed behind her before replying, her tail swishing slightly. \"It did. It's really quite amazing, being in a proper mind meld. I can see why Vulcan Counselors are prized. Perhaps if you had been assigned one early on-\"\n\n\"I have absolutely no issue with the one who helped get my life back online, thank you very much. I wanted you to know that the Grappler will be here the day after tomorrow; their JAG officer will take the necessary statements from you and everyone else affected by Lt. Aiken's... actions.\"\n\nShe nodded soberly. \"You haven't been to see him on-\"\n\nShe saw his expression change, darken. \"No. That wouldn't be in the least bit wise, or useful. I'm staying focused on helping the people I love.\" He straightened up, dropped his arms and drew closer to her. \"Speaking of which, I've been thinking about what you said last, about us not resuming our relationship.\"\n\nShe tensed. \"Esek, you know it makes sense. I know we're not medically bound any more, but I may need to remain professional with you, if I'm to be of any use to you. So... it'd be better for us to just stay friends.\"\n\nHe nodded with an understanding that put her at ease. \"Friends. Yes, yes of course.\"\n\nThen he smacked her across the snout.\n\nShe staggered back, hissing, claws extended and clutching her muzzle. \"YOU KUSSIK! What did you do that for?\"\n\nHe remained insouciant. \"A number of reasons, really. Firstly, to see that look on your face; it was priceless. Secondly, to demonstrate that I can see through your shit as easily as if you were wearing a sign around your neck; you're not being noble, you're just scared of being hurt again. And finally, to show you that I'm not like any other male you'll have met. I'm not being fooled, I'm not being intimidated, I'm not going away-\"\n\n\"Wait, wait, wait...\" She pointed an accusing claw in his direction. \"Are you quoting me, you son of a bitch?\"\n\n\"Well, technically I'm paraphrasing you.\"\n\n\"Haven't you listened to a word I've said?\"\n\n\"I've listened to every word. That's how I know that you're talking shit. You're afraid.\"\n\n\"Of course I'm afraid! And not just about losing someone I love. I hurt you, I hurt you deeply! Because I used my intimate knowledge of you against you!\"\n\n\"Yes, you did. And it worked. Our loved ones can hurt us the worst, because they know us the best.\"\n\n\"It wasn't as a loved one, it was as your Counselor-\"\n\n\"I don't think there's much of a difference with you.\"\n\n\"It was unforgivable of me-\"\n\n\"No it literally wasn't... since I forgave you. That's how this works. I like to think everything was always fine between Hannah and me... but that's just my memories being selective. I'm sure it's the same when you think of Rmorra. But that's okay.\n\nAnd if - when - we fight again, I may end up doing the same to you, not because I'm your Counselor but because I'm your lover, your husband. And I'll be begging your forgiveness.\" He smirked. \"I might even get it, eventually, after some serious grovelling on my part-\"\n\n\"This isn't funny, Esek! We can't be certain how things will end up between us if we marry-\"\n\n\"When can we ever be certain of anything, really? This time last week if you'd asked me, I'd have been certain that, of all the things I could be doing, the last thing I'd be doing was surfing into the atmosphere of a planet holding a mewling cub! The Universe isn't just uncertain and unpredictable at the quantum level; it can change at any time, at any point, and not always for the better. So I don't intend to waste any time, or to shy away from what I want for fear of how long it'll last.\"\n\nHe reached out, took her hand. For a moment, she almost pulled away, but she stared back into his gaze, as if mesmerised.\n\n\"I'm not speaking to you now as your patient, or your Captain,\" he continued softly. \"But as your lover, your mate. And I'm asking you again, more formally now: Kami Shall, will you do me the honour, the pleasure and the privilege of marrying me?\"\n\nKami looked up at him - and rushed into his arms, hugging him tightly, sobbing against him.\n\n\"Is that a Yes?\" he teased, stroking her mane, feeling the tears soak into his uniform.\n\nHer claws dug into his back in answer, as they held onto each other, drinking each other's scents in deeply.\n\nThen he began purring against her ear.\n\nShe clutched him, pressing against his growing interest. \"Fuck, Esek, that's not fair-\"\n\n\"You know how traditionally we celebrate things onboard,\" he murmured, his hands moving down her back to her cheeks, squeezing, teasing the base of her tail as it swished with arousal.\n\n\"We shouldn't-\" she continued, gasping, pressing her body against his. \"We-\"\n\n\"We have an hour to go before we go on duty,\" he reminded her, nipping her ear.\n\nShe dragged him to the bed.\n\n*\n\nConsidering the amount of alcohol consumed and the late hour to which many had stayed up, there were far more people up for a morning swim than Sasha would have expected, especially after they were doing the same thing last night. Of course, in the morning and with a sober mind it was far easier to see everyone was naked.\n\nBut it was worth it, a refreshing activity after the... busy evening she had with Giles. Between it, the Tag Phasers and a generous helping of Aldeberan Whiskey, she felt more relaxed than she had in weeks.\n\nShe squealed as Giles came up from behind, wrapped his arms around her, lifted her up and dunked her under the water. She managed to hold her breath, kicking back out of his grip and resurfacing to splash water in his direction, before heading for the grassy shoreline. Giles caught up with her, the pair of them dropping to roll about on the soft, velvety grass, before she found herself underneath him, letting him block the light from the sun.\n\nThey kissed, Sasha running her fingers up through his hair-\n\nAnd then cursed as some asshole threw a couple of big towels over them. She pushed Giles off her and started to rise. \"Right, who wants to get punched in the cock?\"\n\nHrelle sat against a rock, arms folded across his chest. \"Not me, Runt of the Litter.\"\n\nShe squealed, dropping and grabbing a towel to wrap around herself. \"Dad! What the fuck-\"\n\n\"Now that's charming. I throw you a towel to cover your bits and pieces so you don't catch cold, and you respond with profanity. Shocking.\" He looked to Giles, who was blushing beetroot as he wrapped the second towel around his waist. \"Morning, Giles. Enjoying defiling my baby girl?\"\n\nThe boy's jaw dropped. \"I... I literally don't know how to answer that, Sir.\"\n\n\"If it helps, no answer will be good enough.\" Then he winked, before turning back to Sasha. \"Sorry to interrupt, I thought I could have a quick word with you, sweetheart.\"\n\n\"Now?\"\n\nHe nodded. \"I have a busy day ahead of me.\" He indicated the low slope that led to the felines she had seen the day before.\n\nShe tucked the folds of the towel in and padded along, careful not to step on any stones. \"Is there something wrong?\"\n\n\"No - I mean, apart from the usual... I wanted to apologise.\"\n\n\"Apologise? What for?\"\n\nHe frowned, seemingly unable to look at her. \"I let a man onboard our ship who attacked you and Kami and the other cadets. I was responsible-\"\n\n\"Don't be stupid.\"\n\nHe stopped. \"Excuse me?\"\n\nShe faced him. \"You heard me. That's just your male pride talking. You didn't know. No one knew. No one expected. It wasn't your fault, or T'Varik's or Kami's or anyone else's - except Aiken's. And he's going to be punished for what he did. I don't need to think about it, or want anything more happen to him - I've had enough vengeance for a lifetime.\" She hoped she made her point and he wasn't going to argue further.\n\nFortunately, he nodded and started looking around the slope, then back towards the lake. \"Yes, this will do, this will do nicely...\"\n\n\"For what? You building a house here?\"\n\n\"No.\" He looked at her again. \"I love Kami. She loves me. We're getting married.\"\n\n\"Good.\"\n\n\"I know that you-\" He paused. \"Wait, you're okay with it now?\"\n\nShe nodded. \"I know it was a shock when you told me, the other day. But thanks to Aiken, I've had a chance to see a side of me I didn't like. A selfish, uncaring side, who wanted something of the past to stay the same. And when the station blew up...\" She paled, tears pooling in her eyes. \"I saw how Kami reacted; she was as torn apart as I felt. But she still helped me stay focused. She helped me... she's helped me all along. And she loves me. You two should be together.\" Softer now, she asked, \"Do you remember the day you and Mom got married?\"\n\nHrelle smiled. \"I remember being so nervous that morning I couldn't keep my claws retracted. Ripped through two sets of underpants getting into them.\"\n\nSasha smiled back. \"I remember it was the summer I was into everything Caitian, and I'd read about the Caitian marriage custom of the bride and groom each having a Protector, a 'M'Traal'...\"\n\n*\n\nStation Salem Four, 11 Years Ago:\n\nThe seven year old crouched on the arm of the couch, teeth bared, hands raised and fingers outstretched, as if to display claws; a belt was strapped around her waist, hanging a fake tail behind her. \"I am the M'Traal to this female on this blessed day! Who approaches?\"\n\nHrelle stopped, twisting his neck around to work out the tightness of the collar of his dress uniform, his tail swishing nervously behind him as he dropped to one knee, hands lowered and claws retracted, head bowed and answering in the expected fashion. \"I am Esek Hrelle. I seek Hannah Eismann.\"\n\n\"What is your business with her?\" she demanded.\n\n\"I would marry her. And we would have many babies who will fart and pee and poop all the time.\"\n\nDespite her attempt at remaining serious and fierce, his answer broke her down into giggles.\n\n\"There'll be so much poop,\" he continued, rising slowly back to his feet, eyes wide as he approached her. \"We'll convert as much of it as we can, or phaser it away, or transport it into deep space. But there'll be more and more and more! Mountains of it! SO MUCH POOP!\" Then he grabbed her and began tickling her, making her fart and then laugh some more.\n\nHannah entered, in her own dress uniform. \"She'll have an accident, schmuck, and that's her best dress.\"\n\nHrelle stopped tickling, setting her down on the couch and drawing up to Hannah to nuzzle at the side of her head. \"Mmm, you smell good.\"\n\n\"I'm sweating like a hog in summer.\"\n\n\"That's what I mean. I adore your scent.\"\n\nBehind them, Sasha made noises of disgust.\n\nStill embracing, Hannah looked over at her daughter. \"Do you mind? I love this man.\"\n\n\"Like you used to love Dad?\"\n\nBoth adults looked at each other, before Hannah went to sit beside Sasha, taking the child's hand, looking at Hrelle before responding. \"Sasha... I haven't stop loving your Dad. I still love him. I always will. I'll never lose that, or the life I had with him. I only lost him. But he'll always be a part of my life, and yours.\n\nAnd now, in this part of my life, I love Esek.\" She looked up to him and smiled as she continued. \"And I always will. And I can do that without losing any of the love I have for your Dad, okay?\"\n\nSasha nodded, hugging her. And giggling.\n\nHannah drew back. \"What's so funny?\"\n\nBlushing, the child replied, red-faced and still giggling, \"Esek talked about all the poop your babies are gonna be making! SO MUCH POOP!\"\n\n\"Oh, did he?\" She eyed him with mock judgement. \"This wedding can still be called off, mister.\"\n\nUntil he leaned in and nuzzled against her again, and she kissed him, with Sasha between them, making more sounds of disgust...\n\n*\n\n\"I don't suppose you kept that fake tail, did you? I could really use it these days.\"\n\n\"Grow your own. I miss seeing it.\" She grunted. \"So... have you set a date yet?\"\n\n\"Yes: Today.\"\n\n\"What?\"\n\n\"Sundown. T'Varik, as next senior officer, will perform the ceremony.\" He waved out over the slope. \"Here, I think. The cadets and crew are all invited, as our family; we've arranged for qualified colonists to cover for us onboard. And then there'll be a party.\" He smiled. \"I convinced her not to wait. She didn't take much convincing - though you'll be pleased to know she warned me if I ever get myself into another situation like I did out in space, she'll roast my balls.\" \n\n\"Good for her.\" She was smiling now. \"You're getting married again! And I'm going to be there again!\"\n\n\"More than that - Kami is going to need a M'Traal. Care to take that role?\"\n\nHer smile became a grin. \"Tell her I'll be proud to do so.\"\n\n\"Thank you. And... do you think Giles would like to be mine?\"\n\n\"Really? You don't want to ask, I don't know, Lt. Abed or Chief Grev?\"\n\nHe shook his head. \"Caitian custom dictates a M'Traal is typically a younger relative. And... I feel closer to Giles than I do to Grev or Abed.\"\n\n\"I think he'll be delighted.\"\n\n\"Thank you.\" He made a sound, before adding, \"I'll always love your mother, Sash. You know that.\"\n\nShe nodded. \"I know. And I know she wouldn't have wanted you to be alone the rest of your life.\"\n\nHe reached out and drew her into a hug. \"Thank you for understanding.\"",
        "She hugged back.\n\nUnable to stop her towel from slipping off. \"Um...\"\n\n\"I'm going to close my eyes and turn around for a moment,\" he offered.\n\nBlushing, she replied, \"I'd appreciate that.\"\n\n*\n\nThe descending sun had turned the normally aquamarine sky of Malbruk II a deep salmon pink, but lanterns on high poles had been erected in various places. There were tables of food and drink set out at the foot of the slope and a music player, but now, everyone was assembled in a semi-circle around Commander T'Varik, in dress uniform, as was Kami and Sasha, standing at her left side, watching as Hrelle and Giles, similarly clad, approached.\n\nHrelle stopped and tugged at the sides of his uniform. \"They never make these things comfortable.\"\n\nGiles tried to keep from fidgeting as well. \"Thank you again for asking me to do this, Sir. It's an honour.\"\n\n\"I should be thanking you, Giles. I know this is technically shore leave for you and the others, but-\"\n\n\"I owe you so much, Sir, it's the least I can do. Also, you've put out a lot of food and drink for us.\"\n\nHrelle chuckled. \"You should know that, under Caitian law, the M'Traals also end up marrying each other today.\"\n\nGiles stopped, paling. \"You're kidding.\"\n\n\"Yes. Keep moving.\"\n\nThe two males walked up towards the summit, until Sasha stepped forward, her voice clear as she pointed at Hrelle. \"I am the M'Traal to this female on this blessed day! Who approaches?\"\n\nHrelle stopped, dropping to one knee, hands lowered, head bowed and answering in the expected fashion. \"I am Esek Hrelle. I seek Kami Shall.\"\n\n\"What is your business with her?\" she demanded.\n\n\"I would marry her. And we would have many babies that will far-\"\n\nBut Sasha pointed at him warningly, cutting off the rest of his joke, before she looked to Kami for assent. The older female, looking radiant and proud, smiled and nodded.\n\nAs the quartet was complete, T'Varik to each of them in turn, her voice carrying to the assembled cadets and crew. \"Since the days of the first wooden vessels, all ship's masters have had one honoured privilege: that of uniting two people in the bonds of matrimony. And so we are gathered here today with you, Kami Shall, and you, Esek Hrelle, in the sight of your fellows, in accordance with our laws and our many beliefs so that you may pledge yourselves to each other. Please touch.\"\n\nThe couple reached out and clasped hands.\n\n\"Kami, do you take Esek to be your lawfully-wedded spouse?\"\n\nShe smiled as she gazed into his eyes. \"I do.\"\n\n\"Esek, do you take Kami to be your lawfully-wedded spouse?\"\n\nHe smiled back. \"I most certainly do.\"\n\n\"Kami Shall, Esek Hrelle, with the power vested in me by Starfleet Command and the United Federation of Planets, I now pronounce you husband and wife. You may now kiss, or show some other display of affection you would prefer.\"\n\nHrelle smirked. \"Not in front of these dirty bastards.\"\n\nThe couple embraced, nuzzling into each other, as the crowd cheered.\n\n*\n\nNight came quickly, the stars dazzling in a lazy river that cut across the sky, held back as were the insects by the lights around the party. People danced, ate, laughed, and congratulated the newlyweds.\n\n\"Captain? Counselor?\"\n\nHrelle and Kami turned to face T'Varik, Hrelle responding with, \"Thank you for your help today, Commander, and with arranging all this.\"\n\n\"I must thank you for the honour of performing the ceremony. I understand it is a rare privilege.\"\n\n\"Well, I never got to do it in my time on the Furyk, and I doubt if the opportunity will ever arise on the Surefoot. So congratulations.\"\n\nKami moved in and hugged T'Varik. \"Thank you, sweetheart. For everything.\"\n\nThe Vulcan accepted the contact with expected aplomb. \"Now, if you will excuse me, I will return to the ship and take command again.\"\n\n\"Oh? Are you sure you want to go so soon? The party's just getting into full swing.\"\n\n\"I have had sufficient enjoyment this evening, and there is much preparation to be made for the Grappler's arrival tomorrow, and the disposition of Lt. Aiken.\" She offered them the Vulcan salute. \"Peace and Long Life, to both of you.\"\n\nHrelle smiled. \"And to you, T'Varik.\"\n\nShe nodded and departed.\n\nHrelle turned to Kami, realising he hadn't let go of her for more than an instant since the vows were exchanged. \"You take my breath away. And speaking as someone exposed to the vacuum of space, I know what I'm talking about.\"\n\n\"No need to sweet talk me, you've got me now- but you don't have to stop, either.\"\n\nHe chuckled. \"Well? Shall we dance some more? Or shall we depart for our shelter for a... lie down?\"\n\nShe eyed down. \"Just a lie down?\"\n\nHe shrugged. \"Well, eventually we'll lie down.\" His hand moved up to stroke her face, her mane. \"Thank you. Thank you for making the happiest male in the Galaxy.\"\n\nShe drew in, purring against his neck, before replying in a murmur, \"Think you'll still be feeling happy when you're the one getting up at 0300 Hours to feed our cub?\"\n\nHe started, drawing back. \"Cub?\" He glanced down between them, as if his eyes could scan into her.\n\n\"No, idiot, I'm not pregnant.\" She smiled. \"It *is* something to discuss though, isn't it?\"\n\nHe smiled.\n\n*\n\nMalbruk II Colonial Base, Detention Centre:\n\nMartin Aiken lay on his bunk, awake, desperately wishing for sleep; the hyperzine he had taken to temporarily boost his abilities were still in his system, preventing sleep. And the base doctor refused to give him anything to help him, which was tantamount to cruel and unusual punishment, at least in Aiken's view.\n\nBut Aiken didn't mind so much. He would win out in the end. Not with regards to the sleep - but with the knowledge that, with the people he had watching out for him, he would never face trial. They promised him that.\n\nThe lights suddenly went out, shifting to a minimal red backup system. He blinked, sitting up eventually as he looked out through the wide doorway. The station where the guard was usually posted was unoccupied; Aiken had heard him called away on business moments before, but didn't think anything of it.\n\nHis heart quickened. Was this it? They were helping him escape now?\n\nBefore he could react further, he heard a door outside slide open; seconds later, Professor Solberg stepped into view, moving briskly, without the aid of a cane. \"Lieutenant.\"\n\nThe younger man rose from the bunk. \"Now? They're getting me out of here?\"\n\nSolberg held up a hand. \"No. This is just so I can debrief you without the security devices recording my presence.\" He suddenly pressed his thumb against the side of Aiken's neck. \"Sit down.\"\n\nAiken frowned at the man's actions, but complied, looking up at him. \"When am I getting out of-\"\n\n\"You really screwed this one up, didn't you?\" Solberg told him, sneering. \"You had one job to do here: ensure my colleagues were conditioned enough to forward their findings on the Spheres to me and not the Federation Science Council, so that I could pass it on to our real employers. Imagine what they could have done with machines that could alter probability in their favour, helping them win battles, defeat enemies-\"\n\nAiken rubbed at his eyes. \"Yeah, well, the Spheres are all gone now, aren't they? Looks like I'm not the only one who screwed up, huh?\"\n\nSolberg shrugged. \"Fortunes of Science; I'll be forgiven, especially when I blame it all on Starfleet. You, however, are an entirely different matter altogether. When the Surefoot was called here, you were given specific instructions to contrive a way to get into Hrelle's head and learn what you could. You could have played it by the book, saved your boosted abilities for the man himself and got us everything we needed to know. Instead, you used this opportunity to try to get off this rock, and away from our employers.\" He grunted. \"As if you could.\"\n\nAiken felt himself sweat, his head pounding. \"Get out of here, leave me alone, I feel awful. The comedown from the hyperzine-\"\n\n\"No. It's the Nanites you ate with your meal tonight.\" He held up his thumb, displaying a tiny silver dot in the centre. \"I just activated them. They're on their way now to your carotid artery, programmed to create a lethal clot. You'll be unconscious in about sixty seconds, and dead soon after, seemingly a side-effect of hyperzine abuse; you have that long to tell me what I need to know.\"\n\nAiken looked up at him, his heart pounding. He tried to stand up, but Solberg pushed him down again. \"You have about fifty-five seconds now. Why was Hrelle assigned to this sector?\"\n\n\"I- I don't know, I never melded with his mind-\"\n\n\"What about his Counselor? The cadets? She's his lover! You must have picked up some secondary data!\"\n\nSweat felt like it was pouring down his face now, and his vision was turning red. \"It's- It's just a training mission, hauling supplies around, maintenance, that's all-\"\n\n\"Nonsense. They wouldn't assign someone with Hrelle's experience and expertise here unless they suspected something. What about all the communications traffic we picked up between his ship and Starfleet Intelligence these last few months?\"\n\n\"He's- he's had a feud going on between him and Admiral Arrington, a long-running feud-\"\n\n\"And he just happened to stumble on the Nausicaan contract on the freighter Beholder?\"\n\nAiken nodded. \"It- It was an accidental discovery... please, don't-\"\n\n\"So as far as you learned, he doesn't know about any of the other operations our employers are running here in this sector?\"\n\nAiken shook his head, clutching his neck. \"Please- Please help me-\"\n\nSolberg finally nodded. \"I'll pass that on. Thank you for your cooperation, Lieutenant.\" He turned to leave.\n\n\"Wait!\" Aiken tried to rise, but dropped to his knees as if in supplication. \"You said- You said if I told you what you needed to know, you'd spare my life!\"\n\nSolberg stood in the doorway and grunted. \"I never said anything of the sort. I said you had about sixty seconds to tell me what I needed to know before unconsciousness and death overtook you.\n\nThe Bel-Zon don't reward betrayal, Lieutenant. \n\nGoodbye...\"\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... THE WALKING WOUNDED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fan fiction",
        "starfleet",
        "caitians",
        "science fiction"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-the-uncertainty-principle"
}