{
    "title": "The Fool Ch. 08",
    "pages": [
        "Authors Note: Thank you once again to everyone who leaves comments and feedback on my writing, it is much appreciated. Thank you very much to Paul who continues to be my second set of eyes, he is a great friend to help me out so much. I hope you enjoy it. ~ellie\n\n*****\n\nThe Fool Ch. 8\n\nCaught in an invisible net.\n\nDecember\n\nTo Carrie's delight, Sinclair found a manor house for sale no further from the city than where she already lived, and she had fallen in love with it at first sight. The ten-million-pound price tag it bore she hadn't fallen in love with, however, and prevaricated over the purchase. Believing that the house would still be there when they returned, she went to Myanmar with Sinclair to see what he said was the last of the treasure troves. They had already delayed the trip and, with the self-imposed deadlines for the exhibition growing nearer, she needed to see this final collection of Mansvelt treasure.\n\nIn Myanmar, she catalogued even more artefacts revolving around slavery, as well as some treasures of both monetary and historical value, but once again she had not managed to find the Heart of the Heartless. When she asked Sinclair about it, she got a surprisingly direct answer from him for the first time. Seeing that particular treasure would involve another evening or two with his parents and possibly meeting his sisters and their families. She would need his mother's permission to display that jewel, and there was little he could do to expedite that.\n\nShe'd found that there were a lot of girls like Gianna in Myanmar and Thailand whose families lived in poverty and often sold their children to the wealthier landowners and businessmen to pay off debts incurred through illness or misfortune. Carrie had been appalled by the seeming callousness with which this was done, and after ranting and raving about it, and the fact that something should be done to help these young women, Sinclair told her a little more about Gianna and confided in her about the work he did with Interpol.\n\n\"Unless you're prepared to overthrow an unstable government in a hostile country on your own, then you do what you can with the resources you have at hand,\" he had argued with her. \"This is the way these young women are brought up; they know their value. Robyn brought you up in a different way to the way my parents brought me up, and I think the fact that you were so isolated from friends and family is horrifying. Robyn could have sold you into slavery, and who would have been there to stop her?\" he asked bluntly.\n\n\"You're right,\" she agreed. \"My family is more than your garden variety of fucked up,\" she shook her head.\n\n\"Tell me about them and what's going on with Jordan,\" he said seriously. \"You have to tell someone what's going on with you and why you have become so highly strung lately. You're not the cool calm and confident woman I met back in April. What happened in Panama?\"\n\n\"You!\" she snapped back at his sternness. \"You changed the rules of the game in Panama, and before that on Treasure Island!\" Carrie accused.\n\n\"Me?\" he asked in shock.\n\n\"We had a relationship based on mistrust and suspicion. Our mutual needs made it work, but it was never based on affection, let alone love. We knew that going in. Respect, lust, even admiration, but not love,\" she pointed out. \"You tried to change that and put me in an untenable position when your parents arrived.\"\n\n\"Untenable?\" he asked, not denying that their relationship had started the way she explained.\n\n\"You were acting differently, and your parents obviously had expectations, since you'd never brought a girl home to meet them before. Your sisters were even dropping their plans to come and meet me. That's a lot of pressure for a girl that wasn't looking for love, or a happily ever after, as you put it, out of this relationship.\" She sighed. \"After that, you proposed, or tried to make me propose in Panama. You turned your back on me when I didn't say yes as if you were hurt,\" she said in an accusatory tone. \"Not to mention the bitch who rode in on her broomstick and promptly told me I wasn't good enough to handle your family collection, let alone you!\" she spat, still feeling as if the woman had sucker punched her. \"She knew it wasn't real, we knew it wasn't real, and you just kept pushing until I couldn't take it anymore!\"\n\n\"I was hurt and confused,\" he admitted. \"This relationship isn't exactly what I expected either, you realise. You're right, we both came into this with our personal agendas. No one was more surprised than me when true feelings began to creep in between us. I...\" he paused and cupped her face so he could look into her eyes, \"I love you, and even though you struggle to understand it, you love me!\" he asserted.\n\nCarrie kissed him then to avoid having to say anything more. Sinclair broke the kiss and looked into her eyes again.\n\n\"I want to know,\" he said. \"Everything. I want to know everything. I will have your back, against Jordan, against Miles, against the Hats, but I want to know it all.\" Even though he still held her face cupped between his hands, she lowered her eyes. \"You can trust me, Carrie; I'll protect you.\"\n\nFor the last few weeks, while she'd tried to set up a few fail safes for herself, Carrie had been thinking about what she would and wouldn't tell Sinclair. If she said too much and he launched his own investigation, her grandmother would realise she'd betrayed the family, if she continued to say nothing, who knew what he would imagine and act on. He'd done everything she asked of him since her return from the Caribbean. He'd even run interference for her with Jordan, making sure they were rarely left alone to talk, due to bodyguards or himself. She desperately wanted to believe she could trust him; the loss of her trust in Jordan had left a gaping open wound that hurt every time she thought of his betrayal. \n\n\"I feel like such a fool,\" she admitted. \"I blindly believed the few people I trusted, and now I'm caught up in something that appears beyond my control or understanding. I want to believe I can trust you, Sin. I want to believe you could come in like a knight in shining armour and fix what's wrong with me, but as soon as you make waves or start to investigate anything, they'll know I betrayed them.\"\n\n\"Who will know?\" he asked, realising for the first time that she was not just scared of the consequences of talking to him from his side, but she was terrified of what the people who pulled her strings would do in retaliation. \"The people who shot at us?\" he frowned.\n\n\"No, at least, I don't think so,\" she said carefully. \"The shooting had nothing to do with me and more to do with your activities here, and in Panama, I believe.\" She looked around as if worried they might be overheard, despite laying on a picnic blanket at the edge of the huge lawn in front of the house, high in the mountains of Myanmar. \"They,\" she paused and swallowed nervously, \"Are the creators of the Fool.\"\n\nSinclair's surprise showed on his face. With the discretion, absolute lack of evidence and information about the thief targeting the Hats, they had assumed it was a single entity working on their own. The fact that there was an organisation targeting them sounded alarm bells in his mind. \"For what purpose?\" he wondered. They were hardly pirates these days, more like gentlemen thieves. He considered if there were anything the entire association had been involved in that that could bring this sort of vengeance their way and his eyes widened. It was if someone had drawn the curtains and let the light shine in, and he breathed a large heavy breath.\n\n\"They, the Bonnet family?\" he asked incredulously. His father had filled him in on some nastiness with Edith's father and husband while old man Bonnet was still alive. \n\nShe nodded and pulled the portfolio she had brought out to the garden with her towards them. She had known this conversation was going to be pushed harder and harder once they had arrived here, and she had planned to tell him about Jordan's heritage, if not her role in the grander plan of her family. Unzipping the portfolio, she opened to the first diagram and left him to peruse it; he wouldn't need help to understand what it all meant. He flicked through the pages showing Jordan's blood links, if not in a direct male line to every other family in the association as well as the direct line to her own.\n\nCarrie rolled to her back and closed her eyes, wondering if she had done the right thing. She hadn't exposed herself with this information, only Jordan and the plans for his future. Minutes that felt like hours ticked by as she waited for him to finish studying the diagrams.\n\n\"It's strange what a bit of bitchiness from Stella Davis and two weeks in the Caribbean can find. You could have found it yourself if you weren't so focused on me,\" Carrie said, rolling onto her side to look at him again, unable to take the silence.\n\n\"Have you got a pen?\" he asked simply. Carrie reached out and closed the portfolio, unzipping a front pocket and taking out a small set of fine point markers. \"I assumed you knew this information. You said you knew you were related to Jordan in a distant way,\" he said as he changed the names and filled in the locations for the other two supposedly missing men. \"We're pretty good at what we do and have a lot of international agencies behind us. This isn't new information for me.\"\n\n\"Is that like when I thought you knew that my grandmother and your father were quite friendly when they were younger?\" she bit back at his question. \"I believed what I'd been told by people I should have been able to trust and never looked any further. I believed a lot of things that now I realise I shouldn't have. I've done too many things on faith and trust alone. I never knew about Jordan's heritage, or his intention of taking the chair,\" she noticed a brief widening of Sinclair's eyes, which told her he didn't know everything. \"He lied to me, and I can't get past that. He was the one person in this world I was supposed to be able to rely on to have my back, but he only ever had his own.\"\n\n\"Jordan loves you,\" Sinclair said cautiously. \"I find it hard to believe he would purposely hurt you. Maybe he thought he was protecting you.\"\n\n\"They have plans for him,\" she paused and looked up at Sinclair, fear showing in her eyes. \"And me, that I never knew about. He knew everything, and he never told me.\"\n\n\"Plans for what?\" Sinclair knew instinctively what she meant, but felt unable to believe it. He needed her to confirm his suspicions. \"What do they plan, exactly?\"\n\n\"I don't know, I don't even know who they are, exactly, and, short of being in a nudist colony, I don't know who is watching or listening to me at any given time anymore,\" she sighed. \"I'm becoming crazy paranoid.\"\n\n\"I see why you wanted the guys to work strictly for you, now,\" he nodded, indicating Daley and Max who sat on the wide veranda of the house keeping Carrie in sight, despite Sinclair's presence. \"You didn't know any of this? What did you know about the Hats and why the Fool was targeting them?\" he refrained from pointing out that she had admitted she knew who the Fool was.\n\n\"I knew I was a descendant of Stede Bonnet, and that one of his descendants, a male with a direct line to the man himself, had been part of an association nicknamed the Hats,\" she started tentatively. \"I was told that it was time to prove that women could be part of that association, and that Edith or Robyn should have been given the opportunity to take the Bonnet chair instead of being vacated for good because no male heir could be found.\"\n\n\"So, the Fool is a woman?\" he asked, feeling like she was trying to hedge around the Fool's true identity.\n\n\"You don't get it, do you?\" she said acidly. \"This is so much bigger than the Fool; the Fool only had a small part in a much bigger scheme.\"\n\n\"I get it,\" he said a little defensively. \"The Fools activities are obviously part of this greater plan, as are you and Jordan,\" he considered her. \"Robyn and Edith obviously know, or knew, a great deal more than they told you. Did it occur to you that talking to Jordan to find out the extent of his knowledge about this grand plan was a better idea than freezing him out of your life because of hurt feelings? I thought better of you, Carrington. Where is that cold hearted bitch who fought for every inch she gave to anyone? You've just let Jordan and whoever he gets his information from skate by because he lied? Why aren't you turning the tables on him?\"\n\n\"He was all I had. The one person I thought I could trust and rely on,\" she said plaintively, realising everything Sinclair said was true. \"If your father betrayed you, could you turn the tables on him so quickly?\"\n\n\"My father wouldn't...\" Sinclair's voice trailed off. \"I guess I might have had to come to terms with a betrayal of that magnitude first,\" he conceded. \"Can we start at the beginning? I need to know it all if I have any hope of helping and protecting you.\"\n\n\"That's it, I've told you everything I found out and why I am mad at Jordan. I don't know what else you expect me to say,\" she lay back down, rolling onto her back and looking up at the sky. She wasn't ready to trust him with everything and the fact that she was the Fool.\n\n\"You said Edith had plans for you and Jordan. What does that mean?\" he asked, closing the portfolio and leaning over her to watch her face. \n\n\"I don't know the details. Edith did tell me that I shouldn't make any wedding plans with you,\" she sighed.\n\n\"When did you see Edith?\" he frowned in confusion.\n\n\"On my way back from the Caribbean,\" she realised she probably shouldn't have mentioned that part of her trip. \"She's in Europe at the moment with friends.\"\n\n\"Is she?\" Sinclair raised an eyebrow. \n\n\"She was,\" Carrie nodded. \"I'm not sure where she is now.\" \n\n\"But you could contact her and maybe invite her to a small family dinner to celebrate our engagement?\" Sinclair pressed.\n\n\"I guess,\" Carrie frowned as she nodded. \"I'm not sure that's a very good idea though.\" She was doing her best to give him some information without allowing him access to all her plans and concerns.\n\nSinclair could see her shutting down on him again. Every time she gave him these glimpses into what she was thinking, and what was worrying her, he would push until she began shutting down, and he cursed, thinking that she had finally decided to trust him fully and realised he had pushed too far again. He joined her laying on his back and staring up at the sky as he weighed his options now to get her talking again.\n\n\"Okay, so what you're saying, without actually saying anything, is that you have been part of a family conspiracy against the Hats. Recently you found out that there is a greater plan and your part in it was much smaller than you had thought,\" he summarised what she had said, putting his own particular twist on it. He was banking on making her mad enough to start talking to him again.\n\n\"Why do you always have to twist my words!\" she exclaimed, sitting up to look at him.\n\n\"Which part did I twist?\" he looked at her in astonishment. \n\n\"I...\" she tried to think back over her words. \"I never said I was part of any conspiracy.\"\n\n\"You said you were told that it was time to prove that women could be part of that association and that Edith or Robyn should have been given the opportunity to take the Bonnet chair. It seems like your family was holding a pretty big grudge against the association,\" He said, as if it didn't matter.\n\n\"A grudge is not a conspiracy!\" she snapped back, feeling like she was losing control of the conversation she'd planned so carefully.\n\n\"Perhaps conspiracy was the wrong word, but it very much sounds like Edith and Robyn may have had a reason to become the Fool, or encourage you to become the Fool, to prove that the daughters of the Bonnet line are just as qualified as the first-born sons,\" he mused. \"I'm still betting on it being you. I imagine you thought that as the Fool you were the lynchpin in your family's plans. Finding out that you were just a small cog in the wheel of a much bigger machine and that a man would reap the rewards of all you had done must be hard to swallow. It might even make someone crazy paranoid if they weren't as in control of their life as they thought.\" He smirked at her, purposefully baiting her in an argument.\n\n\"Tell me more. You obviously know a lot more about my life and my family than I do!\" she snarled at him, pushing away the information she thought she was giving him, only to find out he knew more than she did.\n\n\"I'll tell you everything you want to know. I'll give you complete access to my networks and whatever else you need, if...\" he paused and gave her a serious look. \"If you say it out loud. Admit that you're the Fool and I will do everything I can to give you the control you want over your life again,\" Sinclair said, reaching out to take her hand.\n\n\"You'll give me control over my life, or take it from me?\" she narrowed her eyes.\n\n\"You don't seem to have that much control over it now. Taking that small bit of control would be a pretty empty victory for me, don't you think?\" Sinclair let his lips quirk into a smirk, seeing her become angrier, not just with him, but the situation she found herself in. \"I can help you. I am the one person you can trust to have your back right now,\" he asserted. \"I promise I would never betray you or anything you tell me.\"\n\n\"Why does it matter what I say? You seem to know everything anyway,\" she took her hand off the portfolio to pick up her glass of wine and take a large swallow.\n\n\"Because, just like you want to trust me, I need to trust you, and I can't do that until you're honest with me. About everything,\" his tone was serious.\n\nCarrie considered if he already knew and had been waiting for her to confess. She shook her head, knowing he had been surprised by her appearance at Miles Rackham's party. He thought he knew, but he wasn't sure, and it was the one snippet of information she had to trade on. It was her freedom she wanted, not a preordained marriage to Jordan, or a forced marriage to Sinclair because she didn't have any other choice.\n\n\"You'll help me get back my independence?\" she shot him a look.\n\n\"You seem pretty independent right now,\" he raised an eyebrow, \"If not fully in control.\"\n\n\"As long as I appear to be following the family plan,\" she murmured dourly.\n\n\"The plan to seduce me and steal the Heart?\" he asked.\n\nShe shrugged, looking up at him finally. The whole conversation had gone too far, and she knew her life was so out of control that she needed to trust what he said if she had any chance of a future that wasn't dominated by her grandmother and brother. \"Yes.\"\n\nIt took Sinclair a moment to register what she had said and react. Even though he'd known it all along, he had wanted to believe that slim possibility that she was as innocent as she proclaimed. Relief flooded him, and he smiled, knowing his instincts had not let him down. He pulled her into his arms and kissed her. \n\n\"The only plan we follow now is our own. You can trust me, Carrington, I won't let you down,\" he urged, and stood up, helping her to her feet and propelled her towards the house. \"You start packing while I call the pilot and have him organise the jet.\"\n\n\"Where are we going?\" she couldn't help the anxiety in her voice.\n\n\"Home,\" he grinned and kissed her again.\n\n\"Wait, what?\" she froze in bewilderment. This wasn't the conversation she'd intended to have, or the reaction she'd expected from him. \"Which home? Whose home?\" Carrie stared at him blankly, trying to regain some sense of equilibrium in her out of control life.\n\n\"Our home, the one I just bought for you in London as an engagement present,\" he couldn't help the smile that split his face seeing her calm, cool demeanour slip into one of absolute panic and anxiety as she dealt with what she had just confessed to him.  ",
        "\"It's time you knew the truth about me too,\" he said, gathering her into his arms. \"You won't regret trusting in me, Carrington,\" his tone was suddenly serious. \"I will keep your secret safe, until we decide what to do about our families, together.\"\n\n\"Together?\" she repeated in a strained voice, the word making her feel a little less unsure of her confession. \n\n\"Yes, together. We're partners in this thing now, for better or worse, so to speak,\" his voice was soft and soothing as his arms remained around her. \"Give in for once, trust me and just give in,\" he murmured into her ear and kissed her neck.\n\nCarrie tried to block out the ominous voice of Robyn in her mind which prophesied nothing but doom and gloom and tried to let herself be in the moment with Sinclair. He hadn't jumped on her confession with accusations and recriminations. He had done exactly as he had said he would, and, knowing why the fool had targeted the Hats from their conversation, had embraced her even more fervently.\n\n\"Does this mean you'll give me the Heart of the Heartless?\" she asked in a teasing voice, though her body language remained defensive.\n\n\"You already have it,\" he picked up her hand and placed it on his chest. \"I guess you can have the necklace too, if you still want to hand it over to the Bonnets,\" he grinned and raised his eyebrow.\n\n\"Maybe that's something we should decide together?\" she queried, looking up at him.\n\n\"Together,\" he nodded. \"Right now, however, there's something else I think we should do together,\" he pulled her against his body and kissed her deeply. \n\n\"I thought you wanted me to pack,\" she said breathlessly as he released her from the kiss.\n\n\"I was just helping you start with this dress,\" he chuckled, softly pushing the strap from her shoulder.\n\n\"Maybe you should wait until the guys aren't watching us quite so closely,\" she laughed as he took her hand and led her quickly back to the house. He gave the guys the afternoon to prepare to return to London and spoke briefly with the staff as he continued to walk through the house, pulling her along with him.\n\n\"Wait,\" she pulled her hands from his and stopped in her tracks, realising that with his commands the staff had left them virtually alone in this section of the house. He'd somehow slipped back into the controlling commanding man who just expected that everyone, including her, would just fall into line with his plans and commands. He was in control, and it took her a moment to realise that, in her moment of weakness and vulnerability in the garden, she had unwittingly given him that control. Robyn's voice resumed sounding alarm bells in her mind. \n\n\"It's too late for regrets, Carrington. I know the truth now, and you have to trust that I will keep you safe,\" his voice lowered as he took a step toward her. \"You're mine now, more than ever.\"\n\n\"What happened to 'Together'?\" she hissed. \"I'm not a trinket for you to add to your collections. You don't own me!\" She watched as a steely look of determination settled on his face, and his stance changed ever so slightly. She took a step back, realising his intentions. Her heart was pounding with anticipation as she waited for him to speak. \n\nHe stared at her for what seemed an eternity, taking in her sparkling eyes peeking out at him through long lashes, the way her teeth grazed her bottom lip when she was excited and anxious. When he finally spoke, it was a single word. \"Submit.\" \n\nHer eyes widened, then narrowed in defiance as she replied: \"Make me.\"\n\nShe turned and ran, knowing she wouldn't get far in the maze-like house full of staff. She needed to be in a familiar room, or a room where she could defend herself. He caught up with her as she ran into a dead end at the end of a narrow hallway. She stood there breathing hard as she realised there was no way out. He stepped towards her menacingly. She tried to use her speed and the small element of surprise to push past him, but he grabbed her round the waist with one arm and pushed her back against the wall. He used the weight of his body to hold her there while he grabbed both of her wrists and held them up above her head. They were both panting hard, their faces so close to each other. \n\n\"Submit\" he demanded in a low growl as their lips almost touched. \n\n\"No!\" she hissed through gritted teeth, and her body writhed against him as she tried futilely to pull her hands from his grip. They hadn't fought for dominance in their relationship for some time now, but if he thought her confession gave him automatic domination of her and their relationship she would make sure he knew how mistaken he was.\n\nHe leant in to kiss her, but she turned her face away, still defiant, despite her position. He growled and took both her wrists in one hand, still pressed against the wall above her head. He pressed his knee between her thighs, almost lifting her off the floor, and grabbed hold of her hair with his now free hand. He turned her head to face him. Her eyes were shining, and her breath was ragged as he bent down and kissed her mouth.\n\nShe tried to resist him, but the feel of his now familiar body against hers, the taste of him in her mouth, the gentle pain where he held her wrists and her hair, was proof that he was prepared to make her accept that she did belong to him, and him alone now. His strength and power radiated through his every touch, and a low murmur delved into the core of her. She started to kiss him back, her tongue searching hungrily for his, their mouths pressed together hard in a rough, possessive kiss.\n\nHe felt her body relax as she gave in to his kiss, felt her start to grind her hips against him as she kissed him back, submitting to his needs and desires. He smiled to himself and pulled his face away. He noted the sparkling eyes following him and knew that, as always, she would submit. She was his completely now, and the defiance had been a token attempt to remind him that she would never be a docile partner in their relationship. He moved his face close enough for their noses to touch. \n\nShe could feel his breath on her lips, but couldn't reach to touch him. He was so close she could feel every inch of him pressed against her. She could feel the bulge in his jeans digging into her hip, and she knew he wanted her as much as she wanted him. He let go of her hair and moved his hand to her waist, tracing the shape of her breast with his finger on the way down. \n\nShe felt his hand move to slide the straps of her dress from her shoulders and expose the lacy bra she wore. His fingers trailed down over her shoulders, tracing soft tickling lines over the soft skin of her breast. He cupped her breast and squeezed it through the fabric of her bra making her moan softly.\n\nHe reached around and undid it with one hand, letting the soft globes of flesh swing free under his gaze. He bent his head and nipped at her nipple with surprisingly hard but fleeting movements. She gasped as the tendrils of pain flowed into the surrounding flesh, and her nipples stood up further as if begging for his attention.\n\nHe kissed her neck just below her ear, and she tilted her head to allow him more. The fingers of his free hand pushed the dress lower to her hips as his mouth followed down her body, kissing each part of her flesh as it became exposed. He let go of her wrists, confident that the fight that she had put up was gone and that she wasn't going anywhere now. \n\nCarrie arched her back and closed her eyes as she felt him tug gently on her nipples while he kissed her stomach. As he let go of her hands, she briefly remembered that they were standing at the end of a quiet hallway where anyone could see them, but then his mouth and hands moved again, and everything but the sensations fled from her brain.\n\nHis hard cock was growing uncomfortable in his jeans, but he ignored it as he knelt before her and pushed the dress over her hips, taking her panties with it. He inhaled her scent, and it made his cock swell even more. He leant forward, his breath heavy and warm as he tentatively kissed the mound above her pussy before moving lower. He used his teeth to nip her thighs and make her inhale sharply before lifting her foot and discarding her clothes to a pile in the opposite corner.\n\nShe shuddered as he ran his finger along her slit, testing to see how ready she was for him. She was so wet that his finger slid inside her without any resistance. Carrie widened her stance allowing more access to his fingers and the teasing tongue which had begun to follow his finger and seek out her swelling clit. She felt her climax growing slowly, a warm fuzzy feel building low in her belly, when he abruptly stopped and stood up, pressing her back against the wall and bringing his face to hers.\n\nHe placed his finger against her lips, wanting to watch her taste herself on his skin. She parted her lips greedily and took his fingers into her mouth. She licked and sucked her juices off his hand eagerly, flicking her tongue up and down the length and around the tip before taking it all into her mouth and sucking hard. He closed his eyes knowing how her skilful mouth felt wrapped around his cock.\n\nShe drew a deep breath as he moved his hand away. She tried to move to touch him, but he held her back, pinning her wrists to the wall either side of her hips.\n\n\"Submit!\" he said hoarsely. \"Admit you're mine and I will finish what I began!\" His eyes searched hers for the glint of defiance and the promise of a battle. \n\n\"You don't fight fair!\" she whined breathlessly, struggling against the grip he had on her wrists. \n\n\"Not when I desire something this much. You're mine,\" he murmured, bringing his lips to hers again. He kissed her hard just once, then moved his kisses lower until he was kneeling in front of her again, purposely taking the submissive position.\n\nShe struggled to get her hands free, torn between wanting to get away and wanting to pull him closer. He held her hands tighter against the wall, then moved his face towards her gorgeous pussy. He took her swollen clit between his teeth and shook his head, causing her to cry out and her knees to sag under her.\n\n\"Oh God!\" she groaned, loving the way his mouth felt on her. She cried out again as he sucked her clit into his mouth and flicked it with his skilful tongue. \n\nHe let go of her wrists and held her pussy lips open with his thumbs. He swept his tongue over her exposed clit again, softer this time. Her eyes were closed, and her naked chest heaved as she panted hard in response to his touch. He teased the entrance to her wet hole with the tip of one finger. She wriggled against it, trying to swallow more of him into her. Her juices were coating her pussy lips, making them glisten, and he couldn't resist running his tongue along her wet slit. He bit, nibbled, sucked, and kissed his way along her lips, making her gasp and moan as he did. He moved his finger back to her hole, joining it with a second. Without warning, he plunged two fingers deep inside her and heard her cry out as he did so. Her breathing was getting faster, and her moans were getting louder as he moved his fingers inside her. He found that sweet spot that set her on fire and his mouth clamped back down on her clit.\n\nShe came noisily, her juices coating his mouth and face, her cum running down his hand and smearing on her thighs. Her body sagged, her legs no longer able to support her, and he caught her on the way down, his fingers still inside her.\n\nHe held her as the last waves of her orgasm washed over her. Her body trembled, her eyes were unfocused, and her breathing was hard and ragged.\n\nAs her breathing slowed, she looked up at him and smiled. She stroked his face with her hand, and he reached down to kiss her softly.\n\nHe picked her up tenderly, all the fight gone from her for now, and carried her towards the bedroom. They could leave later tonight. It was important for him now to make sure she accepted his position in her life and felt the realness of their relationship if they had any chance of unravelling the machinations of those who would use her against him. He needed her trust and loyalty, but what he wanted was her unconditional love, and he knew the battle for that was far from over. He would have to be satisfied with her trust and loyalty for now. \n\n*****\n\nCarrie sat in the library of her new home and stared at the stationary samples before her, only half listening as her future mother-in-law continued to complain about the timing of such an event and that they felt the need to have the party so close to the holidays.\n\nSinclair stopped in the doorway, taking in the situation at a glance and entered, interrupting the two women. \n\n\"Hello, darling,\" Georgia Mansvelt smiled widely at her only son.\n\n\"Mother, I thought you were meeting with Dylan today?\" Sinclair walked in and kissed his mother's cheek before moving across the desk to kiss Carrie. He stood back up and placed a hand on her shoulder showing a united front. \"Didn't you already choose the stationary?\" He directed the second question to Carrie.\n\n\"I am meeting Dylan, dear, as soon as I have finished here,\" Georgia said, flushing slightly with guilt that she had been caught badgering Carrie again about the timing of this party and why it couldn't wait. Carrie merely sighed in resignation. \"It's all the details that become frustrating.\"\n\n\"Mum, we wanted you to be involved in this event, but Carrie is more than qualified to do this on her own and would probably prefer to just make the decisions once and know there wouldn't be any second guessing. Perhaps the timeline is just too tight for your usual thoroughness, and you should let us take it from here,\" Sinclair hated making the threat, but his mother had been pushing the limits of Carrie's patience since their return from Myanmar.\n\n\"Don't be silly, darling; I'm more than happy to help. I was just making sure I understood what Carrie wanted,\" Georgia said quickly. \"Simple and elegant, a black and white theme. See, I listen.\" She smiled sweetly. \"Are you sure I can't convince you to come to lunch with Dylan and me?\"\n\n\"No thank you, it's rare that Sin and I have a day off together, so we've made plans,\" Carrie said quietly but firmly.\n\n\"Speaking of which, are you ready to go?\" Sinclair asked with a gentle smile. Carrie tilted her head inquiringly at Georgia.\n\n\"You kids go on and have fun. We'll just go with the simple yet elegant style of the invitations for the menu and place cards,\" Georgia collected the samples of the place cards. She had been probing for reasons why they were in such a rush to have the engagement party, and, she assumed, marry. Despite reassurances that there was no pregnancy or illness involved in their planning, she failed to come up with another reason for the haste. Given time she could have pulled off the party of the century, as it was she would have to make do with the best of what she could get on such short notice.\n\n\"Thank you, Georgia,\" Carrie said sincerely. \"I guess I'm ready then.\" She smiled up at Sinclair as she came to her feet. \n\n\"We'll walk out with you, Mum,\" Sinclair took Carrie's hand.\n\nIn the time since their return from Myanmar, Sinclair had doted on Carrie, barely letting her out of his sight. She knew she should feel stifled by his presence and the nagging need she always felt to cut loose when anyone crowded her personal space, but she didn't. It was as if telling him the truth had brought a new dimension to their relationship, one she had never felt before. She trusted him, and, for the first time in her life, she knew that she didn't have to be the strong one in the relationship in order to feel safe and secure. He'd opened up his life to her, his real friends and those who were mere acquaintances, and he told her about the rift in the association of the Hats caused by her ancestor and the lack of a Bonnet heir.\n\nCarrie hadn't been surprised to find Sinclair's preferred Range Rover in the driveway and the overnight bag she had packed already stowed in the back. His mother's surprise visit this morning had taken much longer than the few minutes she had asked for before they left for the weekend. Farewelling Georgia, she climbed into the car and sighed loudly in relief. They hadn't told anyone they were planning to get away for the weekend, except their security team, who they gave the weekend off, planning on stealing away quietly.\n\n\"When are you going to tell me where we are going?\" Carrie asked as he slid into the driver's seat beside her.\n\n\"Here's how this weekend is going to work,\" he said, turning to her with a grin. \"I'll pose a heads or tails question, and you flip this coin,\" he handed her a brand-new penny. \"Ready?\"\n\n\"No,\" she shook her head. This wasn't the organised in control man she was used to! She had assumed he had booked them into a romantic little bed and breakfast place near the sea somewhere. \"Why am I flipping a coin?\"\n\n\"To make the important decisions,\" he chuckled. \"We'll start simply. Heads we go north, tails we go south, now you flip, and the decision is made.\"\n\n\"I thought you'd made plans, or a booking, at least,\" she queried, feeling uneasy about his seeming lack of direction or control of the outcome of this trip. Carrie frowned but flipped the coin, keeping her hand over the coin as she caught it and slapped it onto her forearm. \"What if the flip goes in the wrong direction to where your plans have been made?\"\n\n\"I've made several plans, some you will enjoy, others you will endure,\" he waggled his eyebrows suggestively. \"Personally, I am hoping for one of those. Ultimately, however, you get to decide in which direction the weekend will go,\" he smirked. \"Don't be concerned, you can't make a wrong decision.\"\n\n\"That's very vague. What if I would have enjoyed north when we are destined to go south now?\" she removed her hand, revealing the coin.\n\n\"Given that you fell from a large rock last time we went north, I think you'll be just as pleased with the options to the south. Now flip again, heads for east or tails for west and we can leave,\" he instructed.\n\n\"Ah, yes, our last spontaneous weekend away didn't turn out so well, did it,\" she had a serious tone to her voice as she flipped the coin, again showing heads. \"Just promise me that we won't be checking into some rundown motel in the middle of nowhere because you haven't made any reservations,\" she asked.\n\n\"I can promise that wherever we end up tonight we will be expected and catered for accordingly,\" he said seriously, leaning over to kiss her lightly. \"You can trust me to look after you like a princess.\" He put the car in gear and began their journey.\n\n\"What a shame I forgot to pack my tiara, because I will make you eat those words if we pull up at the equivalent to the Bates Motel tonight,\" Carrie threatened with a smile.\n\n\"Don't tempt me,\" Sinclair chuckled. \"It's been some time since I've seen the wild cat from our first night together truly show her claws.\"\n\nThey drove south, making small decisions along the way to take the coast road and finally stop in a small village for lunch. \n\n\"Just lunch?\" she asked, not expecting a response. She hadn't been able to draw him out on anything but the general direction they were heading.\n\n\"Yes,\" he smirked. \"What do you feel like eating? Fish and chips on the beach doesn't quite sound fine enough for a princess, even without her tiara.\"\n\n\"This princess happens to enjoy roughing it with the peasants,\" she said haughtily. \"What she doesn't enjoy is not knowing where we are going.\"\n\n\"Talking about yourself in the third person now?\" Sinclair laughed. \"That's cute. Will you be using the royal we as well?\" He kissed her lightly and led her into a seaside caf\u00e9.\n\nThey ordered and took their newspaper-wrapped fish and chips across the road to a park bordering the foreshore. They found a bench and sat, soaking in the warmth of the sun as they ate. In moments like this Carrie could almost believe she could be normal, have a normal life, just like the few television shows and movies she had watched in her adult life. The last few months had made her believe that having a life beyond her mother's plan could be possible. She may not ever get the happily ever after that Sinclair promised her, but she had started to believe a normal life might be possible. She smiled as Sinclair gathered the refuse of their lunch and stood to take it to the rubbish bin.",
        "The world slowed down before her eyes, and Carrie saw the motorcycle lose control and come careening out of the traffic. She opened her mouth to scream his name as Sinclair spun, whirling around to see the dark machine of death the moment before it slammed into him. Carrie didn't remember screaming or moving with lightning speed to the crumbled mass of the man she loved. She continued to scream, vaguely marvelling at the fact that she did indeed love this man. She sat unseeing and unhearing of anything or anyone but Sinclair, cradling his head in her hands as he lay unconscious.\n\nCarrie was taken in the ambulance along with Sinclair, refusing to let go of him until they were pried apart to take him into the emergencies department. She was numb, and she looked on as if everything was happening to another person until she finally lost consciousness. When she opened her eyes again she was lying in bed at the house she had shared with Jordan, and he was sitting beside her, holding her hand.\n\n\"What are you doing here? I mean, what am I doing here?\" she asked with a croaking voice, pulling her hand from his.\n\n\"There was an accident, Sinclair was hurt, and you were practically catatonic,\" Jordan said with genuine concern in his voice. \"I'm your next of kin. Who else would they call?\"\n\n\"Sinclair!\" she gasped, her eyes widening in fear.\n\n\"He's alive,\" Jordan reassured her, taking back the hand she had withdrawn. \"He's been transferred to a private hospital here in the city. He will be okay, given time to heal, and if you remember who you are and what the plan is for our future,\" He stressed the word 'our'. \"Consider this a not so friendly wake-up call. Try to go it alone again, and Sinclair may not survive the outcome next time we need to remind you where your loyalties lie.\"\n\n\"What?\" she protested. Her mind jolted as everything she had learned over the past few months came flooding back to her. \"I'm following the plan. The only way to the Heart of the Heartless is through Sinclair and his family. I'll get it, or at least access to it at the engagement party. If he dies, no Heart!\"\n\n\"He won't die. His injuries are surprisingly not that bad. I'm not a monster, Carrie,\" Jordan raised his eyebrow sceptically and stroked his thumb over the knuckle of the hand he had reclaimed.\n\n\"Edith knows what I'm doing, I spoke to her on my way home from the Caribbean!\" she protested.\n\n\"Grandmother also told you that I was your destiny!\" Jordan snapped. \"That didn't include leaving me in a half empty house to shack up with Mr-too-good-to-be-true.\"\n\n\"I didn't leave you in this house to shack up with your boyfriend,\" Carrie laughed, trying to diffuse the situation and gain the upper hand again. She was always the stronger of the two of them.\n\n\"I don't think you understand, this isn't something you can smooth over with bad humour anymore!\" Jordan said in a hard voice. The hand that had been caressing hers so gently suddenly tightened into a fist, making her wince as it crushed her fingers. \"I'm done being the sidekick! I'm done being the weaker, the dumber, the lesser man in our relationship! I'm done pretending to be strictly gay when what I have always wanted was just out of reach!\" He stood towering over her. \"You will get the heart, and you will come back to me! If you don't, there will be consequences, not just for you, but him! And you're right, he mightn't survive next time! If you push me to become a monster!\" he spat viciously, dropping her hand and standing abruptly. \"Don't push me, Carrie! You won't like the outcome!\"\n\nJordan stormed out of the room, leaving Carrie with so many emotions coursing through her it made her chest ache, and her brain hurt. She'd let Sinclair lead her to believe he could protect her and keep her safe, yet he couldn't even protect himself from her family. She was caught between all her fears for Sinclair's safety and a future trapped into a loveless marriage with a man she thought of as her brother. She felt sluggish, but she forced herself to sit up, realising she had probably been given a sedative to calm her after the accident. As far as she could tell, there was nothing physically wrong with her.\n\nThe accident played in her mind, and she knew she had to find Sinclair. Swinging her legs from the bed, she stood on unsteady legs. Whatever sedative they had used on her must have been strong, and she sagged back against the bed, knocking a vase of flowers over on the night stand. The door opened again, and Jordan stood there frowning at her.\n\n\"I want to see Sinclair,\" she said in a voice that sounded stronger than she felt.\n\n\"Do you?\" Jordan asked. \"That's to be expected from his fianc\u00e9, I suppose. His family flew him back to London last night as soon as they heard what had happened. Luckily, I was close by and said I would look after you until you were ready to travel home,\" a small smile of satisfaction tilted the corners of his mouth. \"For such a strong girl, you crumpled badly seeing him hurt so badly. You had to be heavily sedated, and, as your next of kin, I had to insist on bringing you home and allowing you to rest here.\"\n\n\"Yesterday?\" she shook her head. \"How long have I been here?\"\n\n\"Just overnight, so far. Whether you stay longer or not is up to you entirely and how easily you can convince Edith and me that you are following the plan. Let me help you back into bed,\" he stepped forward, reaching out to take her arm. Carrie cringed from his touch but forced herself to relax and accept his help rather than antagonise him. People, including herself, often underestimated Jordan, but he had been training alongside her since he was ten, except for the years he was away at University. She'd seen this side of him before when she'd been on a self-destructive bender with Diego or someone like him, and he'd had come to take her home and resume the plan. Was that what was happening here? Had he eliminated Sinclair from her life just so that he could put her back on the right path to finishing the plan?\n\n\"I'll take you to the hospital to see Sin,\" Jordan reassured her, the caring brotherly persona back in place masking the threatening words he had spoken earlier. He sat on the bed as she leant back on the pillows. \"Once we have had a little talk about what a two-faced bitch you've become and how we can remedy that.\"\n\n\"What do you want from me, Jordan?\" she sighed heavily knowing she was at his mercy for the moment.\n\n\"Isn't it obvious?\" He gave a humourless laugh. \"I want you. You can play with Sinclair, or whoever else you need to in order to complete this cycle of the plan because it is necessary, but make no mistake, Carrie; you belong to me. You always have and always will. Despite Robyn's attempts to thwart that future, it is our destiny to lead this family into a new era of power and influence.\"\n\n\"Robyn, what?\" Carrie shook her fuzzy head. She didn't understand what he was saying. Her grandmother had said as much about expecting her to partner with Jordan once he joined the association, but she couldn't believe Robyn had tried to sabotage any family plans. They hadn't even had a plan involving the Fool until Carrie was a teenager and her mother had first become ill. There was something very wrong with what Jordan was saying, and once again she realised just how little she knew about the machinations of her family.\n\n\"I'm afraid that's a conversation we should have had weeks ago when you returned from Panama. Your tantrum was such, however, that you wouldn't talk to me at all, let alone be alone in the same room with me. I wanted to explain some of the finer points of the plan for a new family dynasty,\" he said in a calm voice, but the tone of it told of his disapproval. \"It's your fault that Sinclair is hurt now, I hope you realise that.\n\n\"Life will go on, as usual, Carrie. You will maintain your current living and work arrangements. Your security team will be told to report to me as needed. The plan will go forward; the only changes in your life for the next three months will be that, if I call, you will answer. If I summon you, you will come. If I asked you to jump, you will ask me how high. If you don't start doing as I ask, when I ask, there will be consequences, and I am sure I don't have to spell those out for you,\" Jordan's voice was hard and his eyes bored into hers.\n\nCarrie nodded dumbly. She had no words that wouldn't incur his anger, and she knew now was not the time to antagonise him if she wanted to see Sinclair. She needed to know how badly he was hurt. She needed to see him and reassure herself that he would be okay. She felt sick knowing that the accident had been orchestrated to prove a point to her. Even if she had taken the security team with them, the guys wouldn't have been able to stop what had happened, and more people could have been hurt. She felt tears prick the back of her eyes as she realised she was in a no-win situation.\n\n\"Good, you understand,\" Jordan ran his thumb gently over the knuckles of her hand again. \"I'll have some brunch sent up, and, as soon as you have eaten something and showered, I will take you to the hospital to see Sin.\"\n\n\"What time is it?\" she asked, looking around the familiar room and realising she couldn't find her phone.\n\n\"Just after ten, you have plenty of time. Sinclair's family knows you had to be heavily sedated last night, so they are not expecting you at the hospital until this afternoon,\" Jordan squeezed her hand. \"No one blames you for not being at his bedside after such a traumatic accident. It was quite a scene you made in Bournemouth. If I didn't know better, even I would believe that you truly loved him.\" Jordan's mouth curled into a grotesque sneer. \"You don't love him though, do you? You know your destiny and future happiness lies with me, not the man you're playing house with, don't you?\"\n\n\"I understand,\" she said quietly, realising the question he posed required an answer.\n\n\"Good, we'll talk more tonight. I'm afraid I will have to insist you stay with me because of your delicate state, at least for a few days while your fianc\u00e9 recovers,\" he stood from the bed and went to her bedroom door, opening it to allow Daley and Max into the room with a large tray of food.\n\nThe two big men looked at her anxiously, so she smiled to reassure them that she was quite well and not under any duress. Once they had seen her and were satisfied that she wasn't being kept against her will, they left to ready the car for a trip to the hospital. Eager to get to Sinclair, Carrie ate quickly, much to Jordan's amusement. Then he left her to shower and change, secure in the knowledge that she had no phone or means of communication while he left her alone.\n\nCarrie felt better for eating, but her head remained fuzzy, and she stepped under the water, closing her eyes as the water washed over her head and shoulders. She'd let herself believe for years that Jordan looked at her as a sister. She'd believed that he had come out of the closet and felt none of the attraction for her that had coloured their early life before he left to attend school in a different state. Sinclair had seen it though, right from the very beginning, and she hadn't believed him.\n\n\"Come on, Carrie, you're smart, you're resourceful, you can find a way to make this work, just think!\" she chastised herself. Placing her hands against the cool tiles, she tried to go through everything that Jordan had said and marry it to what she knew. She had to see Sinclair; she needed to talk to him, she trusted him, and, to both of their detriment, she loved him. It crashed in on her again that the only reason he was hurt at all was because she had chosen to trust him over Jordan, who lied to her. His whole life had been a lie it seemed. \n\nShe began washing her hair, contemplating her options. First, she needed to know more about the grand plan for a family dynasty, or empire, or whatever the hell it was. So she needed to play Jordan's game until he told her what he knew and possibly met the family contacts who had been pulling his strings all these years. Second, she needed to save Sinclair. She laughed out loud at that thought. Still, she needed to put some distance between them if she was going to keep him safe from her family. As far as anyone knew it was a freak accident, or that's the impression she got from the way Jordan had so casually spoken of his part in it.\n\nCarrie's mind filled with a million more questions. What happened to the biker? What would be the official reason for losing control of his bike? What excuse would there be for such a thing to happen? Her mind ran around in circles, one question chasing the tail of the previous one.\n\n*****\n\nSinclair grimaced as he shifted in the hospital bed. He'd woken up in the early hours of the morning to find his parents hovering close to his bed, despite the hour. Concern for Carrie filled him. Jordan had insisted on taking the heavily sedated young woman home; his mother had explained when he threatened to check himself out and go to find her. The fact that he was battered and bruised, had two broken ribs and a severe concussion, hadn't been lost on him as he struggled to make good on the threat until they assured him she would be there to see him the following day once the sedation had worn off completely.\n\nHis family filled the private room, and he anxiously watched the clock, wondering where Carrie was as each hour passed without any sign of her. He swung his legs off the bed and found his father beside him.\n\n\"Where do you think you're going?\" Frazer frowned. \n\n\"Well, as much as I love having you all here crowding my room and my life, I'd still rather pee in private, if that's okay, thanks, Dad,\" Sinclair pushed up off the bed and was consumed with a wave of dizziness and nausea. Frazer's arm curled around his son's waist supporting him.\n\n\"I have a better idea,\" the older man said, easing Sinclair back down onto the bed. \"Georgia, why don't you take the girls out to lunch while Sinclair freshens up a little bit before Carrie arrives, takes one look at him and thinks he's dying again.\"\n\n\"I could eat,\" Taylor said. \n\n\"Come on, Mum, let the boys do their boy stuff in private,\" Riley encouraged when she saw her mother about to argue.\n\n\"Why don't we go back to the house and make sure the children aren't wrecking it. I doubt Sinclair or Carrie would appreciate their nice new mansion destroyed by munchkins,\" Darcey winked at Sinclair knowing her mother could be swayed by spending time with her rambunctious grandchildren. \"Plus, we still have an engagement party to plan, and the happy couple have been rendered useless now.\"\n\n\"I'm far from useless,\" Carrie said, lightly stepping into the room. Her eyes fell on Sinclair, and she gasped, moving toward him, ignoring everyone else in the room. \"My God, Sinclair!\" she reached out and touched his face softly.\n\n\"I'll be fine,\" he said, gently pulling her face to his and kissing her. \"As soon as you get my family to leave me alone for a little while and help me shower,\" a small smirk appeared on his bruised face showing her that he was his usual self.\n\n\"I don't think you're up to showering,\" she took her cue from Frazer who had shaken his head slightly when Sinclair said it. \"But I could be talked into giving you a sponge bath and a shave.\" She ran her fingers over his stubble and wrinkled her nose.\n\n\"I wouldn't mind that at all,\" he grinned, happy to finally see her and have her with him again. Placing his hands on either side of her neck and jawline, he brought her face to his in another long kiss, uncaring that his family and Jordan stood watching them.\n\n\"Okay, Ladies, looks like I am taking you all to lunch,\" Frazer said magnanimously. \n\n\"I think you should stay,\" Georgia said, not taking her eyes off her son and future daughter-in-law. \"We'll go and check on the children and bring you and Sin something nice for dinner. Maybe Carrie's brother will keep you company in the caf\u00e9 downstairs for lunch, but I'd feel better if someone was close by, just in case.\"\n\n\"Sounds like a plan,\" Dylan, the youngest of Sinclair's sisters said, and patted her brother's shoulder lightly. \"Try not to let him do anything strenuous,\" he giggled and rolled her eyes at Carrie. \"Gosh knows he won't listen to us. Come on, Darcey, Taylor, and drive Mum home.\"\n\n\"I'll come with you two,\" Riley said and picked up her bag. \"See you tonight, \u00c9clair,\" she poked her tongue at Sinclair and turned to leave with her sisters.\n\n\"That's how you know I'm going to be okay,\" Sinclair indicated his sisters. \"Mum, Roly-poly is being mean to me, when I don't feel so good,\" he pouted at his mother.\n\n\"It's always fun to have all the kids back together,\" Frazer chuckled. \"Let's go grab some lunch,\" he said to Jordan. \"I don't believe we've ever been properly introduced.\"\n\nSinclair and Carrie watched as everyone left the room, leaving them alone. Jordan gave her a hard stare before walking through the door, and she knew he was threatening her.\n\n\"What was that look for?\" Sinclair asked once the door shut.\n\n\"Let's get you cleaned up while we talk,\" Carrie said evasively, and moved away in search of a cloth and basin before he could protest.\n\n\"Carrie?\" he said slowly. \"Tell me what's going on? Why are you here with Jordan?\" Carrie remained quiet, trying to think of what to say, and how to say it. She'd already put his life at risk by trusting him with her secrets. She reasoned that they didn't know she had told him that she was the Fool, because they expected her to continue with Robyn's plan, and she couldn't be sure that even this room wasn't being watched or bugged to ensure she didn't. She lifted a finger to her lips in a gesture to keep silent. \n\n\"Apparently, I freaked out a little bit after the accident and Jordan came to look after me and bring me home. I'm staying with him for a few days, which is just as well if our house has an unruly mob of munchkins tearing it down from the inside out,\" she laughed lightly, but her eyes looked into his with a serious stare.\n\n\"Do you remember seeing the accident? They haven't told me much except that I was hit,\" Sinclair asked, realising she was worried that they were being spied on.\n\n\"A car swerved into oncoming traffic. The biker over-corrected to avoid the collision,\" she shook her head slowly as she spoke; letting him know that wasn't the real reason. She decided, there in the hospital, seeing him looking like death warmed up and still joking lovingly with his family, to continue trusting him. If she was ever going to find a way to be free to live her life she would need his support, and, though she was reticent to admit it, his love. \"You were in the bike's direct pathway; I saw you fly through the air. It was horrific,\" her voice choked in her throat. \n\n\"Come here,\" he said softly. \"There's nothing you could have done, it was a freak accident.\" He said, realising that it was a lie as he said the words. He wrapped his arms around her and pulled her onto the bed with him, kissing her. \"I'm alive, and I have you in my arms, life couldn't get any better,\" he grimaced as his ribs protested the movements of his arms.\n\n\"You're hurt!\" she sat up, quickly noting the grimace he was holding in. \n\n\"I'll heal,\" he pulled her back down beside him.\n\n\"Not if you don't rest properly, so let me go find a basin and razor. Then I might consider kissing you again,\" Carrie moved carefully from his arms and went in search of a nurse to help her find what she needed.\n\nWhen she returned, Sinclair smiled widely and passed her his phone; she stared at the three words, \"Type and erase.\"\n\n\"Bath time,\" she announced, erasing the words and typing in a few of her own as he spoke.\n\n\"Ooh... goody, be gentle with me, I'm a wounded man,\" he said eagerly, trying not to laugh and endure the pain of the act.\n\n\"Trust me,\" she said in a soft voice. \"You do trust me, don't you?\"",
        "\"With my life,\" he answered, making her blanch and hand back the phone as she swirled the cloth in the soapy water and began bathing him. \n\nThrough frustratingly slow typing and reading, she managed to convey that his accident was her family's way of pulling her back into line with the plan, only she didn't know what the greater plan was. She confirmed that they didn't know she had told him the truth about herself, and that perhaps playing along was the best way to find out exactly what that plan was. In any case, she didn't feel that she had a choice, but she wanted him to trust her. Sinclair was mad, but he stifled his rage as they made flirtatious small talk while she bathed and shaved him.\n\n\"Will you kiss me now?\" he asked plaintively, feeling his smooth cheek. \n\n\"If you promise to sleep for a little while before your family returns,\" she stood and took the basin into the bathroom. \n\n\"If you stay with me and promise to be here when I wake up,\" he called after her.\n\n\"I'll stay as long as I can, but I came with Jordan, and I'm not sure how long he and your father can have lunch for,\" she sighed, coming back into the room. \n\n\"Come,\" he held out his hand to her, and she smiled, moving toward the bed. Life was a lot easier knowing someone honestly loved and trusted you and you could trust them in return. She had hope in a future beyond her family's plan now, and this man gave her that hope. She climbed onto the bed carefully and felt his arms curl around her. Carrie took the phone from his hands. \"You can trust me, Carrie. We will find a way to work this out. I love you and trust you with my life.\"\n\nCarrie kissed him properly then. Deeply and passionately for long minutes before curling along the length of his body and watching his face until it relaxed into sleep. Then she closed her own eyes, shutting out the rest of the world and the problems it held for her.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "secrets and lies",
        "family",
        "blackmail"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-fool-ch-08"
}