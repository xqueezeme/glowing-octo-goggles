{
    "title": "Dawn's Anal Awakening Ch. 02",
    "pages": [
        "This story is the third in the Dawn series. The first being Dawn's Orgasm Awakening, and Dawn's Anal Awakening. You don't have to read both to understand or enjoy this one ;)\n\nDisclaimer: All characters in this series are 18 and over!\n\nAlso, although I write about Dawn Simmons going bareback with Eric, safe sex is very important! Please use condoms!\n\n-----\n\n18 year-old Dawn Simmons was a complete and utter anal slut. This was a fact that she had come to realize a few weeks ago when she had her first anal orgasm during her first anal experience on her hot older neighbor's huge cock.\n\nIn hindsight, she shouldn't have been surprised. After all, her thoughts ever since discovering porn were consistently of women getting their assholes speared open. It was only the fact that pussy fucking was more common that kept the boys in school from finding out. Not that she'd let any of them have another chance at any of her holes. She was so over their subpar sex skills! \n\nEver since Dawn spied Eric jacking off in his yard, her life had changed for the better. She no longer felt moody. She woke up early, feeling excited about life and what it had to bring (which was, if she was being completely honest, mostly just good cock). Starting each day with powerful orgasms, and a plug in her cum-filled ass was a surefire way to ensure she stayed awake throughout her classes. \n\nThat fateful day when her parents had been called to Gran's place to help settle a legal issue, that had been the day Dawn had given her precious anal virginity to Eric, who had solemnly taken it upon himself to provide her with anal gratification. The fact that she had gotten so aroused from the mere thought of receiving cock in her ass, coupled with the fact that she had managed two powerful orgasms from being ass-fucked alone, it drove home the point that Dawn's predilections lay with her anal passage.\n\nIt wasn't as if she swore off pussy fucking altogether. Dawn still enjoyed the feeling of having her pussy pounded the way only a fit older man could manage. Eric was an absolute beast in bed, with years of sexual experience under his belt, and a literal monster in his pants. It was just that Dawn really preferred having her ass fucked now that she knew how incredible it felt. \n\nDawn continued to sneak over to Eric's house every morning. Only now, Eric could fuck either of her holes instead of just her cunt. While he was definitely fond of having a wet pussy slurp and slop on his cock, he wasn't averse to having a girl enthusiastically slam her tight asshole onto his dick. Dawn's rectal passage retained a certain degree of tightness that never went away no matter how hard Eric reamed her, a benefit only available for the youth. Most days, he would start by giving her pussy a good pounding, then move on to her asshole for the finale. Dawn loved the thought of plugging all of Eric's hot spunk inside her asshole and walking around school. It made her so wet that she had to keep changing her panty liners! \n\nSummer break rolled around soon enough. Dawn was officially out of high school and ready for college! She wasn't any sort of star student, but she was good enough to into a state-funded institution two states away. It was far enough that she could have her own freedom, but also near enough that she could always come home. \n\nDawn was equal parts excited and sad about it. Who wouldn't be excited for the next part of their life, especially something like college? She wanted to get out and see the world! Dawn wanted to explore her options as a young woman and learn more about life.\n\nBut at the same time, she would be leaving her home. While Dawn's parents were mostly absent minded and sometimes didn't notice things about Dawn's growth, they were as loving as can be and she loved them a lot.\n\nNot to mention, she would be leaving Eric behind. There was no way he would follow her to college, and she couldn't stay here forever! The thought of not being able to ride Eric's hard cock filled Dawn with melancholy. \n\nWould she be able to find good dick at college? Dawn felt doubtful about it. College kids were mostly her age. Even if their cocks were of a comparable size, there was no guarantee that they could fuck her as well as Eric could. Well, unless she purposefully went for the older ones.\n\nSpeaking of which, she still had yet to tell Eric about her college acceptance letter! \n\nDawn waited till her parents left for work then popped over to Eric's house. \n\nEric gave her a passionate kiss and groped Dawn's tits, massaging them sensually for a moment before pulling away. Dawn gazed up at him, filled with affection and lust. \n\n\"Hey neighbor,\" Eric teased. Dawn laughed, pulling Eric into the living room. She drew the curtains and locked all the doors, double checking to make sure no one was around. \n\nHer older neighbor had already freed his cock from his pants and was stroking it slowly, staring hungrily at Dawn's shapely body. Dawn stripped in a haste and tossed everything onto a chair, then dropped to her knees in front of Eric. \n\nThe girl took a moment to just admire the shape of Eric's erect penis. This was the tool that had enlightened her to how good sex could feel. At the start of the year, Dawn had briefly wondered if there was something wrong with her since she had never managed an orgasm when she had sex with the boys in school. But then, Eric had shown her the wonders of a pussy orgasm, fucking her cunt with his thick cock so skillfully that she had multiple orgasms in a single go. Then, he had guided her through her anal training, provided the means for her to stretch her hole and learn how to accommodate a cock in her derriere. As if that wasn't enough, Eric had gone on to give Dawn's virgin asshole an intense drilling, forcing two solid anal orgasms out of her through his relentless invasion of her anal passage, driving home the fact that Dawn was a true anal slut. \n\nDawn leaned forward and took Eric's cock into her mouth. She looked up at him through her big blue eyes and smiled. She moved her head up and down on his cock slowly, not in any hurry. He watched her, eyes half lidded and admiring of the fact that a cute blonde in pigtails was readily blowing his thick rod, polishing his bulbous cockhead with her tongue and rubbing it against the soft insides of her cheeks. \n\nDawn's slow and thorough worship of Eric's huge dick was incredibly arousing and erotic. Her eyes were filled with gratitude and affection, and it was evident that she was concentrating very hard on giving Eric the best blowing ever. \n\nDawn drew back to take a breath, then slid Eric's cock all the way to the back of her mouth, pressing it against her throat. \n\n\"Oh oh!\" Eric groaned as Dawn made a valiant effort to swallow his massive cock. He felt her throat pulse and work around his cockhead, massaging it each time Dawn swallowed. \n\nDawn pulled back and then tried again. She didn't get far, but the mere thought of such a gorgeous girl willing to try deepthoating for Eric, it filled him with happiness. \n\n\"Oh Dawn you're killing me here!\" Eric grunted. He was usually very good at holding himself back, but having Dawn look at him like that while trying to deepthroat his hot rod tested the limits of Eric's self-control.\n\nDawn's eyes crinkled as she smiled, happy that she was making Eric feel good. Sometimes, she thought it wasn't quite fair that girls got to have multiple mind-blowing orgasms in a row, but men could not. Eric was always kind enough to wring every last bit of sexual gratification from her body before he saw to his own needs. \n\nShe sucked and slurped eagerly, wanting to give him all the pleasure she could with her mouth! \n\nEric was losing it. He couldn't stop his hips from moving forwards, humping Dawn's beautiful face as she swallowed his cock down. The first time she had sucked his dick, she hadn't been able to get more than halfway down and had used her hand to jerk off what she couldn't swallow. But as time went on and she got more comfortable with having his cock in her mouth, she had slowly been able to take more, though not all of it.\n\nThat last three inches were not easy, especially for someone inexperienced at the art of deepthroating, but she kept on. After achieving her anal goals, Dawn had a new one: to successfully swallow all 10 inches of Eric's hard cock. She only had two months before she left for college, but she was pretty confident that she could manage it! \n\nEric didn't mind, he was just enjoying the sight of a blonde age dream messily polishing his knob like it was the best thing since sliced bread. Up and down and up and down her head went, Eric's solid length disappearing behind those innocent-seeming pink lips over and over again as her saliva coated his rod.\n\n\"Tasty,\" Dawn moaned, pulling off long at last. She grabbed her tits and pushed them together around Eric's cock, rubbing it between her perky breasts. Eric groaned, titillated by the titty-fucking. Every time his cock head appeared from between Dawn'stits, she would give it a hard suck, tongue-fucking the slit like her life depended on it. \n\nEvery single time she did it, Eric would grab the couch cushions and stare open mouthed at her, lavishing his cock with loving attention. \n\n\"Where would you like to finish, neighbor,\" Dawn purred.\n\n\"What are my options?\" Eric asked, swallowing hard.\n\n\"Oh just the usuals,\" Dawn said flippantly \"My face, my throat, my tits, my pussy, my ass...\" she trailed off.\n\nEric was in a difficult dilemma. On one hand, he loved watching his cock slide between Dawn's pert 32C tits, loved watching Dawn slowly worship his cock like it was the Holy Grail. On the other hand, few women actually loved anal the way Dawn loved it and Eric definitely loved fucking a woman's ass like any other hot-blooded male. And to be honest, every time he fucked her ass, Eric was reminded of the fact that he had been the one to awaken the anal slut in Dawn. He had been the one to guide her in stretching her hole, helping her to get used to the sensation of being filled. And he had been the one to fuck orgasm after orgasm out of her virgin asshole, making her wail and scream and sob with anal pleasure. His skillful use of his meat tool was the reason Dawn was now an insatiable sexual creature with an unquenchable thirst for ass-fucking.\n\n\"I want to fuck your ass,\" Eric said at last. Other women were more likely to be persuaded into giving him a tit-fuck but rarely would one freely offer up her ass for the kind of fucking Eric liked.\n\nDawn let Eric's cock slip from between her tits, rising to her feet. \n\n\"How would you like me?\" she asked, batting her eyelashes at Eric as she turned this way and that, showing off her beautiful body.\n\nThere were a lot of positions that Eric and Dawn both loved. Their absolute favorite was the pretzel where Dawn would put her legs behind her head because it exposed Dawn's pussy and asshole simultaneously, giving Eric's cock easy access to whichever he wanted to use. The curled-up position also restricted her muscles, making her tighter than if Eric were to fuck her in missionary alone. A close second was the full-nelson, which was a position that allowed Eric to use Dawn's weight against her own anus and impale her repeatedly. Being able to manhandle her however he wanted was a boost to his male ego, but it was taxing on Eric if he had to bounce Dawn and aim his cock at the same time.\n\n\"Right here on the table, legs behind your head\" Eric decided, there was no way he could go wrong with the classic pretzel! \n\nInstead of going to the toilet and preparing her enema, Dawn lay down on the coffee table, pulling her legs up and hooking her ankles together. She smiled at Eric and spread her asscheeks invitingly.\n\nEric let out a groan, his cock twitching in anticipation of being massaged by Dawn's velvety rectal walls. She was wearing the largest anal plug and it was already shiny from her pussy juices. \n\n\"I cleaned myself out before I came,\" Dawn said.\n\nThose words made Eric's dick jump. He didn't have to wait at all! He could fuck her right here and right now!\"\n\nHe growled, animalistic in his desire for her beautiful, willing body.\n\nEric took a step forward and slammed his cock balls deep into her pussy. Dawn yelped in surprise and shock! He had wanted her ass, hadn't he? Eric fucked into her cunt with wild abandon, her juices making obscene squelching sounds each time he hilted himself inside her. Her pussy slurped at his cock, welcoming the familiar intrusion happily, gushing harder with every thrust!\n\nThe older man pounded away relentlessly, making Dawn moan and whine with pleasure as his cock stirred up her insides and stimulated the walls of her pussy. Suddenly, Eric ripped the plug from her ass! Dawn cried out in shock. Her anal ring gave up the toy easily, having gotten used to being a two-way passage by now. Eric didn't waste any time, burying himself inside Dawn's rectal cavity.\n\nHer anus opened up beautifully, allowing Eric to hilt himself to the balls in a single hard thrust. There was only the barest resistance from her well-trained anal passage! Her copious cunt cream had effectively lubed up Eric's cock, making it possible for him to go directly from cunt fucking to ass fucking in a matter of seconds! \n\nThe sudden switch from pussy pounding to anal drilling made Dawn's head spin. The toe-curling pleasure in her belly had suddenly been throttled and been replaced with that electric feeling in her spine. Even as she delighted in having her anal desires fulfilled, her pussy felt strangely empty. \n\n\"Put it in me,\" Dawn panted. Eric frowned down at her, confused. \n\n\"The plug, put it in my cunt!\" Dawn begged. Eric's eyebrows shot up, but he obliged her, grabbing the toy from where he discarded it and then shoving it into Dawn's pussy.\n\nHer cunt sucked the plug in eagerly with a loud and wet slurping sound. Dawn would have felt embarrassed at how wet she was if she even had the presence of mind to do so, but as it was, the sudden sensation of being penetrated in both pussy and asshole was too much for her!\n\nGetting reamed in the cunt while wearing an anal plug was great, but getting drilled in the ass while a plug stretched her pussy was even better! The metal curve of the plug was pressing against the front walls of her pussy, up against her G-spot. Every time Eric thrust, his cock would fill and stretch her asshole, pressing against the toy in her pussy, which would then jam up against her G-spot! Her asshole was awash with pleasure, each stab of Eric's cock a jolt of lightning from her shitter to each and every single part of her body. But her pussy was so hot and wet, the wild stretch of her cunt around the metal and the pressure on her sweet spot was stoking her lust to greater and greater heights! There was no possible way anyone could hold back from the insane sensations coursing through Dawn's body like this!\n\n\"UNNNGH!\"\n\nDawn's double orgasm crashed through her like a tidal wave! The pleasure from the simultaneous pussy pounding and anal drilling combined, zipping through her entire body, sending her into wild convulsions. She trashed from side to side as Eric pummeled her tight holes, twisting the plug in her cunt upwards to further tease her G-spot, while drilling her ass with his skillful rod! \n\n\"Oh oh ah ah oh oh ah ah!\" Dawn sobbed, her holes spasming over and over again, helpless against the Eric's relentless dicking. Juices streamed from her pussy, smearing all over Eric's stomach, hips, and thighs, dripping onto the table and forming sticky puddles there. \n\nEric didn't let her come down from her orgasms at all. No, he pinched Dawn's nipples and twisted them, making her squeal. Then he reached down and spanked Dawn's clit hard! \n\nDawn gasped as the pain shocked her system. Eric thumbed at her clit furiously, his face twisted in concentration and eager curiosity. He jammed two fingers in alongside the metal plug and pressed them upwards, then with the other hand, he pinched her clit hard and twisted! \n\n\"Oh no, oh no!\" Dawn wailed, the sudden stab of pain in her love nub didn't deter her body from its pleasure at all. Instead, it sent her on another wild cum ride! \n\n\"I'm cumming again!\" Dawn screamed as yet another cum ripped through her entire body. Eric didn't let up at all! His mouth was open with delight at how hard and fast she had started cumming again even before her first double orgasm had fully finished. Her hips moved back and forth, her body unsure if it wanted to cum again or get away from the sensations. Her chest heaved, trying to get enough oxygen to deal with the fact that every single cell in her seemed more concerned with cumming hard than with keeping her conscious. \n\nEric refused to stop! Could he force yet another orgasm out of her? It would be amazing if he could!\n\nHe frigged her clit harder, forcing three fingers into her cunt and sliding them around the plug. He angled the plug upwards and pressed hard, at the same time, flicking her clit repeatedly as hard as he could. \n\n\"Oh oh oh!\" Dawn moaned. Close but no cigar.\n\nEric pulled the plug out and slammed it all the way in again. Dawn's eyes were wide open, mouth repeatedly mouthing 'oh' over and over at the surprise that her body was still capable of harder, more violent convulsions. \n\nThe plug was the key, Eric decided. He drilled her ass relentlessly with his cock, and her pussy with the plug, pounding it in and out of her cunt as roughly as he dared.\n\nFrom the look on her face, she was almost there, but it wasn't wholly enough! \n\n\"Cum you little slut, cum! This is what you were made for right? You love getting your ass drilled and your cunt fucked. You love getting them both filled at the same time. I thought you were such an innocent girl but good girls don't cum from being pounded in both holes at the same time!\" Eric growled. Dawn's face flushed bright red at the dirty talk, incredibly aroused by how Eric was affirming facts she already knew. \n\n\"What are you, Dawn Simmons?!\" Eric snarled. \n\n\"I'm an anal slut!\" Dawn panted, her body still wracked with orgasm, holes still clutching at cock and plug like there was no tomorrow! \n\n\"Louder!\" Eric shouted.\n\n\"I'M AN ANAL SLUT!\" Dawn screamed.\n\nAt the same time, Eric jammed his cock, and the plug all the way into Dawn's body, using his weight to bear them deeper into her core as he stared deep into her shocked eyes. He grabbed her sore clit, pulled, and twisted.\n\n\"UUUUUUNNNGHHHHHHHHHHH!\" Dawn wailed.\n\nHer body was unable to understand the pain from her clit, confusing it with all the pleasure she was feeling from her cunt and ass at the same time. It tipped her over the edge into another powerful orgasm. Eric watched her body go into another set of violent convulsions, her young body contracting helplessly on his cock and the plug. Dawn's eyes rolled up into her head and she blacked out, going limp upon the table even as her body continued to cum. \n\nEric continued to ream her ass at a steady pace, but kept the plug stationary in her cunt. The best thing about Dawn in the pretzel pose was the fact that he could admire how her pussy muscles milked the plug like it was a cock, desperate for a shot of spunk in it. Alas, Eric was only one man and couldn't cum in both holes at the same time. Otherwise, he would have gladly indulged her cunt's eagerness for sperm. \n\nEric also took the time to burn the image of her pink and puffy asshole pulsing around his massive rod into his brain. Dawn's predilection for anal pleasure was rare and it was an honor to be given the chance to ream her ass on a regular basis. Even if she left for college, the memories of fucking her holes would keep Eric entertained for months if not years!\n\n\"You're so fucking gorgeous, Dawn,\" Eric praised her. He kept his eyes locked on her asshole. Over time, it had gotten used to being stretched and pounded with great frequency. It always welcomed Eric's cock eagerly. Her anal ring was constantly puffy nowadays due to the constant friction Dawn subjected it to. If it wasn't fingers, it would be the plugs, the dildos, or Eric's hard cock. Truly, her anal desires were insatiable! ",
        "The involuntary spasms slowed and stopped. Eric was still rock hard deep in Dawn's ass. He gently pulled the plug from her cunt and stroked her clit to soothe the sting of his earlier treatment. Even blacked out, Dawn shivered at the treatment, her body responding to Eric's touch. He unhooked her ankles from behind her head and then slowly let them down until they rested in the crooks of his elbows.\n\nDawn's face was slack, mouth still open and a blissed-out look on her beautiful face. Eric brushed her hair out of her face, then continued to fuck her ass. Her mind might have checked out from the intensity of her orgasms, but her body was wired with muscle memory on what to do when there was something invading its rectal cavity. Eric watched in awe and wonderment as her hole began to twitch and pulse weakly, trying to squeeze Eric's cock.\n\n\"You're really amazing,\" Eric said to the unconscious girl. He trailed his hands over her flawless skin, marveling at the pertness of her tits, and admiring the smooth plane of her stomach. He kept up his steady ass-fucking until Dawn's eyes finally fluttered open a few minutes later. \n\nShe blinked up at Eric blearily, surprised that he was still going at her ass, steadily pumping his cock in and out.\n\n\"What happened?\" she asked, looking around in confusion. \n\n\"You came so hard that you passed out,\" Eric informed her with a smug grin. Dawn blushed at the thought, embarrassed that she had lost consciousness like that. \n\n\"Oh don't be shy, it's good for my ego,\" Eric teased her. How many men could say they made their partners cum so hard that they blacked out completely? Dawn smacked at his arms lightly with a pout, then reached down to hold her asscheeks open to show that she wasn't really angry at him. \n\n\"Breed me, go on, fill this anal slut with your spunk!\" Dawn said, egging Eric on.\n\nWith such a gorgeous teen dream inviting Eric to bust his load deep in her ass, how could he resist? Eric grabbed her hips and pulled her onto his cock, then roared as he blasted her rectal walls with his cum. Rope after rope of creamy spunk surged from his balls through his dick into the depths of Dawn's body, marking the anal slut from the inside out.\n\nDawn played with her hair as she waited for Eric to finish cumming. The sensation of Eric's cock twitching inside her rear hole was something that had become intimately familiar to her. She would definitely miss it when she left. \n\nEric pulled his cock out as it softened. Dawn's hole gaped open for a moment but was swiftly stoppered with the anal plug. Dawn bit her lip as the sensation of the metal pushing past her sore anus threatened another mini analgasm. Eric jiggled it, making Dawn jolt with another blast of pleasure. It was really amazing how Eric knew exactly what she wanted and liked! \n\n\"I'm gonna miss you,\" Dawn said sincerely.\n\nEric nodded with a sigh. \n\n\"Yeah, I'm gonna miss you too,\" he said, pulling Dawn upright.\n\n\"I'm going to Wheaton soon, it's two states away,\" Dawn said, feeling inordinately shy. \n\nEric hugged her tightly, relishing the feeling of her body against his.\n\n\"I'll come visit, I promise,\" he said, kissing the top of her head.\n\nDawn smiled at him. \n\n\"I'll look forward to it!\" \n\n----\n\nDear Readers, \n\nYour comments inspire me to write faster ;) and I would really appreciate if you tell me about what you liked, what was hot, and what you hope to see happen in future installments! And yes there will be an airtight gangbang in Dawn's future!"
    ],
    "authorname": "kinkbugs",
    "tags": [
        "anal orgasm",
        "anal training",
        "barebacking",
        "big cock",
        "blowjob",
        "tit fuck",
        "young teen",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/dawns-anal-awakening-ch-02"
}