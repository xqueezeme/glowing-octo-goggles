{
    "title": "Bathers and Black Squirrel",
    "pages": [
        "This story attempts to use character development to tell a story. The main character recalls happy memories after the death of a life-long friend and lost love. It reflects that life has both joys and disappointments. It contains explicit descriptions of sex between consenting adults, but sex is not the main thrust of the story. If your interests are primarily prurient, you could be disappointed. If you prefer to read a story that happens to include a sexual component, you might enjoy it.\n\nI went through the receiving line for my 'cousin' Lacey like all the other mourners. In a strange coincidence, I'd met Lacey's second ex-husband once, while still in high school. He got a red card for a nasty foul. I hobbled off the field. Our captain scored on the penalty kick. He didn't remember. I didn't remind him. I met her children and teen-aged grandchildren for the first time that day. I introduced myself to all, but my name didn't spark. They shook my hand. Her daughter held my hand in hers while I expressed my condolences. After just a brief exchange with each, they turned their attention to the next person in line. It saddened me to realize that two families that had once been so close, had drifted so far apart in a generation that they no longer knew each other.\n\nI spoke to Lacey a few days before I heard she'd passed away on the radio, but I hadn't seen her in a couple of months. I sat in the back row while I waited for services to begin, reminiscing. With a small smile some might have found a little disconcerting.\n\nAfter not seeing or hearing from Lacey for years, we reconnected almost five years earlier when I moved back to Vermont. I'd grown tired of petty university politics and endless pressure to publish boring treatises in academic journals almost no one read. I retired from my career as a professor of literature to focus on my more lucrative side-gig writing fiction. My books aren't best sellers. But they sell well enough that I no longer need a job. A quiet place far from the noise, harried pace, bus exhaust, anonymous masses, and aggravation of New York City life beckoned. As a life-long Red Sox fan, another bonus was escaping the surfeit of Yankee fans.\n\nMy wife, Judith, stayed in New York City during the week. She was one of more than eighty partners at a busy mid-sized law firm. Despite growing up as a city girl. she quickly loved the Vermont lifestyle. But she ran the environmental law group at her firm and didn't want to retire yet. She flew to Burlington most weekends, returning to New York on an early Monday morning flight. When she couldn't get away, I usually flew down to spend the weekend. There were things in the city I still enjoyed. Plus, I sometimes had to meet with my publisher or agent. \n\nLacey returned to Vermont twenty years before me, after she divorced her second husband. I blithely wandered into her shop, the Black Squirrel Gallery on the Church Street Marketplace. In a fortuitous coincidence Lacey was helping set up new displays the day I wandered in. Otherwise, I might never have known Lacey was back in Vermont. The two women that ran the gallery for her were nearly bowled over as she rushed to greet me. The years evaporated in tears and a hug that afternoon. \n\nOur parent's generation grew up in rural northern Vermont not far from the Canadian border. My father was county prosecutor and maintained a law practice out of an office attached to our home. He was the sole outsider, Boston-born, educated at Yale and George Washington. He met a girl when he clerked for the chief judge at the US District Courthouse in Burlington. He decided he loved her, and the place she'd never leave. He ditched his plan to conquer the DC legal firmament and proposed. Mom, like her parents, was a teacher. She taught English at the high school Lacey and I attended. I had a brother and a sister, nine and eleven years younger than me, respectively. My siblings and I are close. But the difference in our ages meant we shared no friends as kids, only family, home, and holidays.\n\nReferring to Lacey as my cousin isn't entirely accurate. She wasn't a blood relative. But we were raised as cousins and usually introduced each other to people that way. Lacey's dad, Uncle Charlie, was a seventh-generation farmer with a business degree from Boston College. He turned a struggling family farm successful and profitable, vastly improving the lot of his extended family. The family farm consisted of a half dozen large parcels of land scattered across two counties. There were several rustic farm stores that catered to the tourist trade. Apples and cider from his orchard, vegetables, herbs, flowers, pumpkins and gourds from a market garden, bee products from the large apiary. Employees trucked bees to orchards across New England and upstate New York, clover and hay to dairy and horse farms in Vermont, New Hampshire, and upstate New York. Lacey's mom, Aunt Mabel, taught grammar school. Uncle Charlie, Aunt Mabel, and Lacey lived modestly in a two-hundred-year-old farmhouse. His siblings lived in houses located on the various farms that belonged to the family.\n\nMom and Aunt Mabel were life-long best friends. Dad and Uncle Charlie shared a love of the Red Sox and Boston in general. Our families were close, which is how Lacey became my 'cousin'. I started working summers at Uncle Charlie's farm when I was in junior high. Lacey was eleven days short of a year older than me. We spent our summers playing together as children, working together as adolescents. We were responsible for weeding and harvesting the market garden. Lacey taught me the ropes of beekeeping, our other job on the farm. Beekeeping became my hobby when I moved back to Vermont. Once I was in high school, I got drafted to the haying crew for the first cut.\n\nLacey was whip-smart but lackadaisical about academic subjects in high school. She did well enough in her college prep courses to make the honor roll once or twice each year. But her artwork distinguished her and made her one of the school stars. Oil paintings, watercolors, pencil, charcoal or pastel drawings, sculpture, photography, pottery, anything she tried her hand at won state-wide scholastic awards and blue ribbons at innumerable country fairs. I almost never saw her without her 35mm camera and lens case. Lacey was probably the most popular, and in my opinion the prettiest, girl in school.\n\nI was nerdy and shy, but focused, in high school. I exceled at nearly everything at school including sports. I edited the school newspaper and graduated first in my class at our little high school. Art, however, was not my forte. I can barely draw a recognizable stick figure. My handwriting is atrocious. I might have been just another face in the crowd were it not for my friendship with Lacey. \n\nLacey and I were best friends during high school. We ran with the same crowd year-round. But after she graduated, my stock at school fell. Because I missed her so much, I withdrew a little from the social scene. I felt somewhat lost without her. I wasn't a recluse. I still spent time with friends. I dated. But even before Lacey graduated, I was more popular with the faculty than the student body. Partly because Mom taught there. \n\nMom's reputation was as a tough and demanding teacher. I heard more than one student use harsh language when unhappy about a grade. I can't attest to what it was like in Mom's English classes. Mom was fun to be around most of the time and had a wicked sense of humor with a talent for double entendres. But she was also a mother. A stern taskmaster who brooked no nonsense when she laid down the law or assigned a task.\n\nI only saw Lacey a couple times in the month before my high school graduation. She'd already been home from art school for several weeks but was busy on the farm. I wasn't allowed to work until school was out. \n\nLacey was freshly scrubbed and casually clad when I caught up with my family after the ceremony. She looked great. Lacey turned heads when dressed up. But I had far less appropriate thoughts about her when she dressed like the farmer's daughter she was. A low-key family celebration ended early. The next day was Friday. Though school was out for the graduating class, Mom still had more than a week of school left. Dad, and everyone else, had to work, too. \n\nLacey talked her father into giving us the weekend off. After the celebration at home, we loaded Lacey's pickup truck and met friends at a campsite on a huge wooded property owned by a family we all knew. Local kids had been camping there for decades. Our cars were all off the road, hidden behind trees along the edge of a hayfield. There were hiking trails and a swimming hole. The nearest house was over a mile away. We could make as much noise as we wanted. No one would complain. The family that owned the property never minded the campers because we kept the site clean. No trash, broken glass, alcoholic beverage bottles or cans were left behind. Almost everyone came from a farm family. Land was respected. The only evidence of visitors was cold ashes in the fire ring and a few tire tracks in the grass.\n\nLacey planned to share a tent with our friend Karen, who graduated with me. But once Karen's boyfriend showed up unexpectedly, she was out of Karen's tent. I was alone in the family tent, so Lacey moved in with me. We stayed up late by the fire after everyone else turned in, catching up. Eventually we got tired and turned in, too. We didn't get much sleep though. My tent was near Karen's. Lacey and I spent much of the night snickering while we listened to Karen and her boyfriend get it on, repeatedly, just a few feet away.\n\nOur friends could only spend graduation night with us. They had to leave for their summer jobs and family obligations before lunch-time Friday. Lacey and I opted to stay the weekend. We went for hikes Friday afternoon and again Saturday. Saturday was oppressively hot, a little unusual for northern Vermont in early June. We hiked a wooded trail we'd never taken, getting an early start. Several miles in, we found a brook. Lacey wanted to explore it. She was always on the lookout for scenes to sketch, paint, or photograph. We followed it upstream for almost an hour before we found a wide, shallow pool formed behind a fallen tree that partially blocked the flow. Lacey liked the spot and spent some time taking photos.\n\nWe were hot and sweaty from the hike. After she put her camera away, she took off her hiking boots and socks. I watched her wade into the water and hop up on a large rock in the middle of the pool, her feet dangling into the water. 'This feels good,' she said as she kicked a little water in my direction with a grin. 'C'mon in. The water feels really good on the feet.'\n\nIt was a two-hour hike back to camp. Lacey wore shorts for the hike. I wore jeans. Heavy, wet jeans would not have been fun. 'I think I'll pass, Lacey' I told her. 'I don't want to hike back in wet pants.'\n\nLacey didn't hesitate. 'Take 'em off,' she said while watching her feet play with the water.\n\nWhen I just stood on shore, Lacey looked over at me. 'What the hell, Pete? You too embarrassed to get naked in front of me? Used to be that was how we went swimming.' Lacey got up off the rock and waded back to shore. \n\nWhile I watched in awe-struck silence, Lacey stripped down to her panties. There was nothing sexual about it. She just took her clothes off like she might for a shower after a hot workday. But that made no difference. I was fully erect by the time she unbuttoned her shorts, the first piece of clothing she took off. She piled her clothes on a convenient branch and waded back to the rock.\n\nI might have been speechless and frozen where I stood, but my eyes worked fine. Lacey made no effort to hide herself as she sat on the rock. She looked in my direction and asked, 'Well? What's the problem now?'\n\nAll I managed to get out was a croak. I was rock-hard and uncomfortable, my cock in the worst possible position.\n\n'Pete, just get undressed. Get your feet wet. I won't bite,' she said with a giggle. 'If you're worried about your boner, it doesn't bother me.'\n\nI choked. I tried to say something but, once again, the faculty of speech eluded me. \n\nLacey laughed. 'Did you think I didn't know you get boners when we're together? Stop worrying about it, Pete. It never bothered me. I kinda liked it. Sometimes I even did stuff to try to get you hard. It was so easy. A little wiggle of my butt when bent over. A flash of boob from an open button. A reach inside my shirt to adjust my bra.' She had a wide grin. After a moment she added, 'Now you know my biggest secret. I like cock-teasing my cousin.'\n\nI felt my face flush. The only time I was ever more embarrassed was just after I turned eighteen. I woke before my alarm went off on a school day. I had a burning erection. One I knew wasn't just morning wood. If I didn't jack off it would be a problem off and on all day. I'd only ever done it at night before that morning. I foolishly turned off my alarm clock, kicked off the sheet and blanket, pushed my underwear down and began energetically relieving myself. Unfortunately, my mother didn't hear my alarm when she should have. There was a soft knock as my bedroom door opened. Mom's timing couldn't have been worse. A thick cord of cum shot up my belly and chest as my mother stuck her head around the door. She stared for what I'm sure was just a second, though it felt like hours, then closed the door again. I was mortified that my mother had not only caught me jerking off but had witnessed my ejaculation. I'd 'd long ago had an awkward and embarrassing birds and bees talk with my father. I endured the humiliation of another one with my mother during our daily ride to school. Once she parked, she sternly informed me I'd now be doing my own laundry.\n\nAfter a bit more goading, I stripped down to my boxers and piled my clothes next to Lacey's on the tree branch. I never took my eyes off Lacey while I stripped. She didn't watch me take my clothes off. She did, however, watch as my erection and I waded out to join her on the rock. The cool water felt good on my hot feet. But the condition of my feet didn't dominate my thoughts.\n\nLacey talked to me like nothing was out of the ordinary as we sat next to each other. There was barely enough room on the rock that our bodies didn't touch if we sat still. But any movement meant physical contact. And though my ability to speak returned, I struggled to get words out without a stutter. I never stuttered. \n\nLacey was unfazed by our nudity, or my condition. I was obviously well-aware that I got aroused in Lacey's presence. I didn't realize she knew it. That she sometimes did things to induce an erection was a revelation. Maybe women are right when they say men are clueless about the women in their lives.\n\nI futilely willed my arousal to pass. But my erection stubbornly persisted. It's easy to understand why. Lacey had a pretty face framed by a thick mane of shoulder-blade-length wavy light brown hair replete with natural blonde highlights. Those highlights became a fixation when I first became aware that Lacey was attractive. When she began to develop noticeable breasts and a feminine figure. \n\nLacey had a spray of a faint, tiny freckles on her nose where it flared slightly below the bridge and just either side of it. Golden brown eyes were the color of the honey from her family's beehives and lit up when she laughed. She was slender, lean and athletic looking from the hard work she did on the farm, but she was never an athlete. Her legs were long, lithe and sinuous. At five-seven, she was taller than most of the girls I knew.\n\nI didn't intend to stare at her breasts. But every eighteen-year-old guy finds even the tiniest patch of exposed breast fascinating. Lacey's bare breasts inspired worship. They would just fill her dainty hands if she cupped them. Firm, high, and proud with an enticing jiggle when she laughed. The areolae were half-dollar sized, crinkled with numerous little bumps that grew more pronounced as I watched them shrink into tight dark ovals. The nipples distended into half-inch, pointy cones. \n\nI forced myself to pull my gaze from her breasts. But instead of up to her face, it drifted downward. Across a flat belly. To the dark shadow in her panties. My reverie was broken when I heard her giggle. I finally looked up at her face and saw a big grin. My fixation on her naked body amused her.\n\n'We should head back,' she said with a smile and stood up. When I stood, her eyes scanned down my body. 'Jesus, Pete! Are going to be able to put that thing away?' she asked with a comical lilt.\n\nI followed her gaze to the erection that now protruded from the fly in my boxers. The vein that ran along the side and across the top throbbed with the beat of my heart. My cock moved up and down slightly with each throb. The head was swollen and purple. It looked a bit like an oddly colored mushroom cap on top of a disproportionately long, thick stem. There was a strand of clear, pale gray fluid hanging from to the tip. \n\n'Does it hurt when it gets like that?' she asked matter-of-factly, a moment later.\n\nHer still unconcerned attitude finally allowed me to relax a little. 'I wouldn't say it hurts. But it gets my attention. It feels really good to stroke it. It gets very uncomfortable when it persists like now. It's frustrating when I can't do something to relieve the pressure.' Something about my answer struck her as amusing, because she giggled briefly. What she said next surprised me.\n\n'I'm sure the sensation is different, but I get this feeling between my legs. It's hard to explain what it's like. I get moist and there's a tingly sensation that makes me want to touch myself,' she told me in a soft, nearly breathless voice. 'I've got it now.'\n\nThere was a damp spot in the crotch of her panties. The next words out of my mouth surprised me. 'What do you do about it?' I blurted out stupidly. \n\nLacey looked down at herself and moved both hands toward her groin. She pushed her panties down and kicked them off. She spread her labia apart slightly and lightly circled a finger around her clit. 'First I rub myself here,' she said softly. 'After I get wetter, I push a couple of fingers inside and move them in and out while I rub my clitoris. I think I'm already wet,' she added in a soft whisper.\n\nI watched, captivated as Lacey pushed a finger inside herself. I looked up when she sighed deeply. Her eyes were drifting closed. Relief washed over her face. She spread her feet apart and positioned them so she could bend her knees outward, making more room between her legs for her hands. A second finger joined the first inside her. She staggered slightly when both fingers were inside her. I grabbed her elbow afraid she might fall over. I'm still not sure what came over me then.\n\nLacey screeched and giggled when I picked her up and threw her over my shoulder. I carried her to a wide flat rock near the tree branch where our clothes were. I pulled my tee shirt off the branch and awkwardly spread it out on the rock. I gently set her down on her back. She surprised me by sitting up. When I straightened up, she leaned her head against my hip, wrapped an arm around my leg and resumed rubbing her clit. I put a finger under her chin and lifted her face up so I could look at her. Her eyes were half-closed. Her face a mask of mixed pleasure and anticipation. I bent over and touched my lips to hers. She grasped my neck and pulled me into the most passionate kiss I'd ever had.\n\nI put my hands on her shoulders, held her gently, and leaned into the kiss. She began to recline and came to rest on her back. Her knees came up with her legs spread wide, still rubbing her clit. I broke the kiss and knelt with one leg beside her and the other between her legs. I pushed my boxers down and kicked them away. I grasped my erection, began pulling the skin covering my shaft back and forth. Lacey reached for my hand and pulled it from cock, guiding it to her groin. She rubbed my fingertips along the gap between her labia and guided a finger inside her. After a moment, she manipulated a second finger inside. Her insides were warm and slick on my fingers. ",
        "She held my wrist and guided my fingers in and out, still rubbing her clit. I watched her face intently. She grimaced and moaned with each stroke of my fingers. Her breath came in halting gasps. Once she felt I was keeping her pace on my own, she let go of my wrist. Her fingertips lightly brushed my scrotum and moved up my shaft. I gritted my teeth and gasped at her first touch. \n\nWhen Lacey's hand reached the transition between my shaft and glans, she encircled it with her fingertips and grazed the length of her fingers along that sensitive spot. I grunted and gritted my teeth harder, trying desperately to control myself. Learning Lacey had intentionally caused so many of my erections had me far too excited. I desperately wanted this excitement to continue much longer than I feared it would.\n\nLacey was breathing hard. Her arousal as heightened as mine. I could feel her vaginal walls contracting around my fingers. The way she maintained the feathery tickle on my glans while rapidly diddling her clit and bouncing her hips up to meet my fingers was amazing.\n\nLacey suddenly inhaled deeply and held her breath. My fingers got squeezed hard as her body tensed. Her face and chest flushed. When she exhaled, she stopped rubbing her clit and grasped my wrist with both hands, keeping my fingers inside her. I wiggled my fingers and she cried out, bucking her hips violently. She body writhed and shivered as she gasped out a loud groan. When her nervous system began to calm, the hand on my glans grasped my shaft and pulled me closer. My scrotum nested against her hot labia. Lacey pumped my cock rapidly.\n\nI didn't count strokes. I know it wasn't many. My whole body shook as the first jet of cum struck her chin, trailed across her lips and along the left side of her nose, just missing her eye. Several more jets of cum coated Lacey's belly and breasts. The last of my fluids dripped down her hand and collected in her pubic hair. Lacey shook again when I wiggled my fingers inside her as I finished ejaculating.\n\nWhen my body calmed, I pulled my fingers out of Lacey and supported my upper body with my hands on either side of her chest. She groaned in disappointment. We stared into each other's eyes for an eon before she grabbed my head with both hands, pulled me into another kiss. My body fell against her. When we broke the kiss, we were gasping for air. An occasional tic jarred each of us as we continued to come down.\n\nI finally fell back onto my haunches, my hands on her inner thighs. Lacey and I continued to look at each other, speechless and breathing hard. A moment later, Lacey smiled at me. I returned a grin and she broke out laughing.\n\n'Wow,' she said, her face a joyous smile. 'If I'd known it would be like that, I would have stopped tormenting you long ago.' \n\nI wasn't sure what to say. I couldn't help but smile. 'That was amazing, Lacey,' I said softly. 'I still can't believe it happened.'\n\n'Me neither,' she got out just before she started giggling.\n\n'What?' I asked curiously.\n\n'It just dawned on me,' she struggled to get out as she fought to suppress her giggling. 'It's a good thing we're not really cousins.' We howled with laughter. \n\nOnce we stopped laughing, we realized we were a mess. We didn't want to get dressed without rinsing off. We both had ejaculate smeared across our torsos. Lacey still had some on her face. I had some residue from our kiss on my face that was beginning to feel crusty as it dried. Lacey was wet between her legs and my shirt had a wet spot at the bottom of it. \n\nWe trudged back into the stream and sat in the water, fully naked now. The water came to the bottom of Lacey's breasts, a bit lower on me. But it was plenty deep enough to rinse off. A black squirrel caught our attention for a few minutes. It foraged in the forest debris, crossed the stream on a fallen tree and disappeared up the far side of a tree.\n\nWe washed each other off, playfully caressing each other instead of completing the task at hand. Lacey repeatedly wet her hands to wash her face and mine. We dressed after our bodies dried. I shook my boxers to get the debris out of them. Lacey stuffed her sticky panties in an empty pocket on her camera bag. I rinsed my shirt, wrung it out, and put it on just before we headed back. It felt pleasantly cool at first but was soon clammy and uncomfortable in the afternoon heat. Lacey forgot her camera bag when we started for camp. But we'd only gone a few yards before she remembered it.\n\nLacey wanted to talk about what we'd done as we made our way back to camp, walking side-by-side. Despite how much time we spent together, and how close we were, neither of us ever expected to become as intimate as we had that afternoon. We admitted we enjoyed it too much to regret it. But Lacey had questions.\n\n'Have you ever done that before, Pete?' she asked. 'I've never had someone else's fingers in me.'\n\nI started hesitantly. But once I got talking, everything came out like we talked about this stuff all the time. We had never talked about sex before. Not even hinted at it. We rarely even talked about our dates. \n\n'No, Lacey. I went on several dates with one girl. We were making out in her Mom's car one night. When she felt my erection, she said she wanted to see it. She unzipped me and pulled my cock out. She took off her shirt and bra so I could see and feel her breasts. But she wouldn't let me touch her between her legs.' I said wistfully. 'She played with my cock until I came all over her mother's car. We cleaned it up, but we missed some. When I saw her in school, she told me she got in trouble the next day. Her mom got angry when she saw my stuff dried on the dashboard and a big glob dried on steering column on the way to church. She got grounded. She wouldn't go out with me again after that.' \n\nLacey listened and remained quiet for a couple minutes. 'I only did something like that a couple times before I went to college,' she began. 'And I was the same way with the guy. I only let him play with my boobs. I had to keep pushing his hand away when he tried to slide it between my legs as I jerked his cock. He finally got the message when I told him if he didn't stop, I would.' She looked over at me with a big smile. 'His stuff shot all over his clothes,' she giggled. 'My pickup stayed clean.'\n\n'No guys at Bard?' I asked, not really wanting to know but unable to stop myself.\n\n'I went on dates with several guys,' Lacey told me. 'But all they wanted to do was get drunk or high and fuck. I wasn't going there. None of them even got a kiss goodnight. I laughed at the one guy who had the nerve to ask me for a blow job.' She sounded disgusted. 'I didn't meet anyone like you,' she added quietly. I felt my face flush warm and knew I was blushing. She smiled warmly when she saw it. 'That's what I mean. You're not cocky, arrogant, and demanding like a lot of guys, but kinda shy and sensitive. That's one of the reasons I love ya, Pete.' She hesitated for a moment. 'Even though you get a boner ogling your cousin.' She laughed and pushed me sideways playfully.\n\nWhen we got back to our tent, the first thing I did was take off my shirt and hang it to dry. We grabbed a snack and something to drink. After our snack, we changed into our swimsuits in the tent, separately, and walked to the swimming hole. Lacey's suit was a modest one-piece. My erection still made a return appearance, readily visible in my trunks. Lacey paid it no heed beyond a sly smile and a shake of her head. \n\nWe took turns changing in the tent and made tuna sandwiches after we came back from our swim. I built a fire as the sun began to set. Lacey and I sat in folding chairs and watched the fire until well after dark, talking like we always did. The only thing different that anyone might notice was we sometimes held hands that evening. But I felt a little undercurrent of tension between us. I wondered if sharing the tent would be uneasy somehow.\n\nLacey went into the tent and changed for bed when the fire had burned down. I separated the remaining coals to assure they wouldn't flare up. When I joined her, she was in her bag with only her legs covered, laying on her side facing my side of the tent. Though there was lots of room in the tent, her bag was next to mine. There was space between us the previous night. She was wearing the long, pink night shirt she wore the previous night. It covered her almost to her knees. I stripped down to my boxers, climbed into my bag, and turned off my flashlight. Lacey leaned toward me and gave me an affectionate, but not passionate, kiss on the lips and said good night. She rolled onto her other side and settled in.\n\nI tried to relax and get comfortable. Thoughts of the day raced through my head as I settled in. It was too dark to see anything inside the tent, but I was sure Lacey was soon asleep because I never heard anything but soft breathing, never sensed movement. Gradually, the circuitry in my head stopped processing and I drifted off to sleep.\n\nI'm not sure how long I was asleep when I heard Lacey's voice. At first, I thought it was a dream. But when I heard the soft voice a second time, I thought maybe it wasn't.\n\n'Pete, are you awake?' Lacey whispered a third time.\n\nI was on my back. I stretched and rolled toward her. 'What's up, Lacey?' I asked, still groggy.\n\n'I've got that feeling between my legs again,' she said softly.\n\nThat woke me up. I wasn't really surprised that Lacey might be aroused again. She was nineteen. What surprised me was she woke me to tell me. I also wasn't surprised that I felt a stirring myself. Eighteen-year-old guys get horny almost as often as they take a breath. \n\nI didn't say anything for a moment while I processed what I heard. Lacey misread my silence. I thought I heard a sniffle and wondered if she was crying. \n\n'Me, too, Lacey,' I told her. 'Are you okay?' I asked.\n\n'I was afraid you didn't want to hear that,' she said, her voice cracking. \n\n'I'm half asleep, Lacey. I still think I might be dreaming,' I told her.\n\nI heard Lacey unzip the lower part of her sleeping bad and saw her dark form move toward me. She reached out and ran her hand through my hair. She nudged me to move over, curled up against me and kissed me tenderly. There was passion not affection in this kiss. 'Still think you're dreaming?'\n\n'Yes,' I whispered before I kissed her.\n\nI ran my hand down Lacey's side. Her nightshirt was bunched up at her waist. My fingers found soft, warm, bare skin when I reached her hip. She threw her leg over my hip and pulled herself close, holding me tight. My erection protruded from the opening in my boxers. I felt her pubic hair against it. We both moaned into our kiss. \n\n'I couldn't sleep because I've wanted to be with you again all evening,' Lacey said breathlessly when she broke the kiss. 'But I was afraid to tell you.'\n\n'Why? You've always been able to tell me anything, Lacey,' I whispered before she kissed me again.\n\nOver the next few minutes we explored every part of each other's bodies in the darkness. Lacey nibbled and kissed and licked my face, neck, shoulders and chest. My hands explored her back, face, and hair. I savored the taste and feel of her nipples on my tongue. She breathed heavily while I lavished attention on the hard, sensitive buds atop her breasts. Her fingertips sought to learn every minute detail of my hard shaft, fleshy glans, and scrotum. She tangled her fingers in my pubic hair and tugged gently on it while she cupped my sac and pressed her fingers on the hard base of my cock behind my scrotum. I played with the muff on her mons, explored the folds leading inside her, and gently probed her warm, slippery interior. I licked my fingers to taste her when I withdrew them. Lacey tasted the fluid leaking from my cock that she collected on her fingertips as my own arousal intensified. \n\nWe grew hotter and more aroused as we fondled and teased each other. I didn't want it to end. Ever. My body was on fire. My cock felt like it might explode at any second. I was almost afraid of what I might experience when my release finally came. Despite my own heat, Lacey's skin was feverishly hot against me.\n\nI was surprised when she sat up. She pulled me to a sitting position. I sat cross-legged, vainly trying to see her face in the dark tent. She put a hand on my shoulder to steady herself as she crawled onto my lap with her feet on either side of my hips, facing me. She wrapped her arms around me and pulled herself to me. My hard cock pressed against her sex.\n\nHer lips found my ear. She whispered, 'I want you inside me, Pete. It's my first time. I know you'll be gentle.' She didn't say it, but she knew it was my first time, too.\n\nI wanted so badly to make love to her. A million thoughts raced through my mind in a few milliseconds. But somehow responsibility overcame the overwhelming desire to do what she wanted. The risk of pregnancy from unprotected sex had been discreetly mentioned by my father whenever I left for a date. I never would have thought to a bring condom with me, not that I had any. I was going to be hanging with Lacey, not on a date. If I got Lacey pregnant, it would inevitably come out. Perdition would have been preferable to how our parents would have responded. 'I want to, Lacey. But I don't have a condom,' I somehow managed to gasp out.\n\nIn her heightened state of arousal, Lacey struggled to speak as much as I did. I felt pressure on my shoulders as Lacey lifted herself up to get off my lap before it was too late. But she just repositioned herself slightly on my lap. 'I've been on the pill since late last summer,' she whispered as she positioned herself at the end of my erection. 'Mom took me to make sure I told the doctor I wanted birth control pills,' she gasped. 'Please, Pete. I don't want anyone else to be my first.'\n\nI held her buttocks to help support her weight. I felt the head of my cock slide easily along her slick labia and part it. The pressure built slowly on the head of my cock as she lowered herself gingerly. She grunted, and I inhaled sharply when my cockhead broke through and entered her. She stopped and held herself in place to grow accustomed to my cockhead inside her. My glans was burning. I wanted more of that heat. But I wanted Lacey to be ready. After several deep breaths, she lowered herself again, soon stopping. She shuddered briefly, took a deep breath and lowered herself until she was sitting on me, unable to go any lower.\n\nLacey put her head on my shoulder, her back arched away from me, her hips still. She was taking deep breaths through her mouth. Her arms were wrapped around my shoulders, clinging tightly to me. She lifted her head and looked at me. I could barely see the outline of her face. But I knew she was grimacing.\n\nI was loving the sensations of wet heat, pressure, and the spasms of her vaginal walls as Lacey adjusted to having me inside her. But Lacey's grimace worried me. 'Are you, okay?' I whispered.\n\n'It feels good,' she gritted out. 'But it hurts, too,' she cried softly after taking a couple deep breaths.\n\nI pushed up on her buttocks. 'Get off,' I whispered. I didn't want to hurt her. 'We don't have to do this.'\n\nBut Lacey grabbed one wrist. 'No, I want to,' she said softly. 'I'll be okay in a minute. Just let me sit here.'\n\nI could feel the spasms gradually decrease as she adjusted to me. She clung to me tightly. Her breathing eased as she became accustomed to having me inside her. I was going crazy. Just being inside her had me on edge. The hot, moist flesh squeezing me was far more pleasurable than any hand.\n\nLacey kissed my lips tenderly and whispered, 'I'm ready now, Pete. But let me do this. I want to go slow.' I nodded, though I wasn't sure she would see it in the darkness. \n\nLacey locked her hands behind my neck and arched her back, pushing her hips toward me. I locked my hands around her waist to take some of her weight. I felt her knees press against my rib cage as she used her legs to lift herself slightly. She barely moved up before she relaxed her legs and fell back onto me. Repeatedly she lifted and slowly lowered herself onto me. Gradually increasing how far up my cock she slid. Before long, she was slowly lifting herself until only the head of my cock remained inside her before slowly lowering herself again. \n\nLacey began slowly lifting herself and then falling hard onto me. She grunted softly each time she fell onto me. I was in heaven. What she did felt so good I didn't ever want her to stop. 'That feels nice, Lacey. Are you okay?' I asked as I struggled to fight my intensifying excitement.\n\n'Yes,' she hissed. 'It only hurts a little now. But it feels so good, too. I don't want to stop,' she added just before she pulled herself to me and kissed me wantonly. \n\nLacey leaned into me, forcing me onto my back. In this new position, we both had more freedom of movement. And she could take my cock deeper. I instinctively pushed my cock into her. She exhaled sharply, groaning loudly. Her tongue probed my mouth until it found mine. We kept our lips locked while we coupled. I wasn't going to last long once I was on my back.\n\nI felt my scrotum begin to tingle as the skin around my testicles tightened. Only my cockhead was inside Lacey when I started to ejaculate. When I moaned loudly into her mouth, she knew I was cumming. Lacey sat up and lowered herself all the way down onto me as my cock convulsed inside her. She instinctively ground her hips into mine, moaning softly as my cock twitched with each ejaculation. My shaft slid in and out of her easily now that my seed mixed with her own fluids. \n\n'Oh, yes!' she sighed. 'That feels much better!'\n\nThere was little resistance now as my cock reached into her hot depths. She held herself in place as I pumped my cock into her rapidly, intensifying the sensations I was experiencing. I urgently wished they'd never end. As the pulsations weakened, I held my hips up, off the bedroll. Driving every last bit of me into her until the sensations finally stopped. When my hips fell back, Lacey fell forward onto my chest. She rested her head on my shoulder. Her torso twitched. I was still inside her but softening rapidly.\n\nLacey sighed with disappointment when my limp, spent cock finally slipped out of her. Something warm and wet tickled when it dripped onto me and ran down my scrotum. Lacey ground her mons into me and sighed.\n\n'I didn't want you to stop,' she whispered into my ear as she clung to me and kissed my cheek.\n\n'I'm sorry, I wanted to last longer,' I told her. 'I couldn't stop. I didn't want it to end either.'\n\n'I'm going to be sore, but I feel so good right now, Pete,' she breathed into my ear. 'My whole body is aglow, tingling. I've never felt like this.' A moment later she added, 'I like it. I'm afraid maybe too much.'\n\nI hugged her tightly, delighting in the heat of her body against mine. I was intensely aware of her breasts against my chest, the cone-shaped nipples hard and pressing into me. Lacey let out a sigh of satisfaction and began breathing slowly. It was a few minutes before I realized she was asleep.\n\nThere was some light in the tent when I woke. It was early though. I could hear the morning calls of songbirds in the trees. I looked at Lacey, sleeping peacefully beside me. Her head was nestled into the crook of my shoulder. My arm was wrapped around her, unconsciously tracing my fingertips lightly along her upper arm. Her hair was a tangled mess. I was sure I was in love as I gazed at her, that morning. Maybe always had been.\n\nLacey woke a few minutes later, stretched lazily and sat up. She looked down at me and giggled. 'You going to be able to put that thing away?' she asked for the second time as she grinned at my usual morning erection. 'Is it up for me, already?'\n\nI laughed. 'It's just morning wood, Lacey.' Lacey didn't have a brother. When she looked puzzled, I explained. 'I have to pee. When I wake up in the morning, I'm hard until I empty my bladder. Every guy is.' ",
        "I unzipped the tent flap and crawled out, slipped on my sandals, and headed toward the edge of the trees, about forty feet away. Lacey followed. I wondered why until I reached for my cock to take aim.\n\n'Wait! Let me do it!' she said excitedly. She brushed my hand aside and held my cock between her thumb and two fingers. I winced a little when she pushed it down. Just like I winced when I did it myself. 'Okay, whenever you're ready.' \n\nI sighed in relief, relaxed and began to empty my bladder. Lacey moved my cock around, waving the stream like a fire hose. Giggling. My cock gradually softened as my bladder emptied. When the stream stopped, she started to let go. When I told her to shake it a few times first, she giggled again.\n\n'I'm jealous,' she said. 'Guys can just whip it out and go anywhere. No problem. Me? I've got to find a little privacy somehow, get half naked and squat. Feeling humiliated and vulnerable whenever I pee in the woods. And I have to be careful not to pee on my clothes,' she griped.\n\nI just shrugged. I couldn't do anything about Lacey's anatomical challenges.\n\n'Well, thanks for letting me do that,' she added with a smile. 'At least I got to see what it's like to be the other half.'\n\nI'm not sure either of us realized we were parading around naked, at first. Not that it mattered. We were the only ones there. No one could see us from the lightly traveled dirt road. We washed up, brushed our teeth and got dressed before making breakfast. While packing, we noticed a big stain on the inside of my sleeping bag. It couldn't go home like that. I wasn't the only one that used the bag.\n\nAfter we ate breakfast, we broke camp and drove into Burlington to a coin laundromat. After the bag was washed and dried, we went to my house and hung out for the rest of the afternoon with my mother and my siblings, who adored Lacey. Mom asked if we had a good time when we came in. I'm pretty sure she thought the whole gang had spent the weekend at the campsite. I never saw any evidence she thought or knew otherwise. But my mother was smart. She could well have known and just not wanted to let on she did.\n\nLacey and I spent that summer much like we always had. We worked together every day until the first hay cut when I joined the hay crew for a week. But some things had changed. We were usually able to finish our assigned work by mid-afternoon. We had the rest of the afternoons to ourselves. We had no trouble finding ways to occupy ourselves. We couldn't keep our hands off each other that summer.\n\nLacey teased me openly and unmercifully that summer when no one was around. And sometimes when there was but she thought she could get away with it. All day, every day. Probably because she knew she would soon be the beneficiary of my ardor. I didn't hesitate to take some liberties of my own. The first time I ran my hand up the inside of her thigh while she was bent over, she almost jumped over the truck. \n\nWe almost got caught twice during June. Uncle Charlie came to get me one afternoon because another body was needed to help move a piece of broken-down equipment. We were only dressed a few minutes after an energetic coupling in the cab of Lacey's pickup. Another time, we hadn't been having sex but had just returned from skinny-dipping when Jerry, one of the farm hands, came to get us because the new bee boxes her father bought had arrived. \n\nWe did get caught once, toward the end of July. I had used my lips, tongue and fingers to lick, suck, tongue, and finger Lacey to several overpowering orgasms that morning. Never really letting her come down completely before licking her to another orgasm. It left her shaking, breathless and exhausted. Nearly useless and trembling for most of the day. I grinned like a fool every time I looked at her. She cursed me repeatedly though she practically begged me for a repeat performance a few days later. Lacey also accused me of being a bit too pleased with myself. She was wrong. I was extremely pleased with myself that day. \n\nLate that afternoon, I was sitting on the passenger side running board, Lacey on her knees between my legs. Her shirt and bra off, sucking my cock. Doing her best to make me pay for how I'd left her that morning. She was succeeding. I about to cum, gasping. Too incoherent to speak. Lacey's oldest cousin, Tom, drove by on his golf cart a few rows away from us in the orchard. He stared at us as he drove by. He didn't slow down or stop. Tom barely registered in my brain until after Lacey had sucked me to an orgasm that left me nearly crippled and her coughing from a mouthful she wasn't prepared for.\n\nTom never said anything to anyone as far as we knew. But he was grinning widely at me the next morning while Lacey and I loaded the baskets and boxes we needed in the garden that morning. After we were in the truck, Lacey wondered aloud why Tom was grinning like the idiot we knew him to be. I wasn't about to tell her but couldn't prevent a small smile. She caught it, quickly concluding I knew something she didn't. She pestered me about it until I finally told her. She turned beet red and punched my arm, wanting to know why I hadn't told her he'd seen us. She pouted for a little while but got over it when I explained he'd already seen us. It wasn't like he'd un-see if she stopped what she was doing. Besides, Tom hadn't stopped to watch. And I'd been incapable of processing anything except the exhilarating sensations she was causing.\n\nLacey joked later that afternoon that Tom probably jerked off somewhere right after he saw us. His wife was a terrible shrew, always bitchy and in a foul mood. Lacey never liked her. Neither did I for that matter. Lacey once overheard a conversation between her mother and Tom's wife, Alice. Alice was complaining Tom was always after her for sex, but she hated it and did all she could to avoid it.\n\nWe were much more cautious after that, though it didn't slow us down. A day rarely passed that Lacey and I didn't manage to engage in some form of sex two or three times during the workday. We also spent many evenings and weekends together locked in each other's embraces. Even on nights when Lacey went somewhere with her girlfriends, we'd often rendezvous before she went home. We did our best to act as if nothing had changed between us, but our parents probably suspected something was up. Lacey and I were rarely apart that summer.\n\nI always wondered if Lacey and I might have ended up together if our respective interests hadn't pulled us apart. Maybe I should have gone to Bard, too. The summer after I graduated from high school was the last summer we spent together. I worked for her father the following summer, but Lacey went to Florence to study. The next summer, I interned at a newspaper in Montpelier while she studied in Rome. That was how it went for the rest of our academic careers. We saw each other at Thanksgiving and Christmas. Thanksgiving breaks were always too harried for us to find time alone. We got together every Christmas break for some heated interludes until she went to Paris. Parting those Christmases was heart-rending. I almost didn't go back to school the Christmas I learned she was going to Paris. But she talked me out into returning. She believed we'd inevitably be together again. \n\nLacey was in Paris for two years. That was when our paths parted permanently. We rarely saw each other after she came home from Paris and gradually lost touch. One of the last times I saw her was at Uncle Charlie's funeral. She was married and pregnant with her first child. I quickly took a dislike to her first husband. He had a drink in his hand every time I saw him over the course of a week. I also didn't like the way he berated her in front of others. I heard he left Lacey a few weeks later, before the baby was born.\n\nI graduated from Johns Hopkins in three and a half years then spent a year at Wesleyan, in their writing program. I finished my formal education with a PhD at Cornell. I bounced around for a few years as an adjunct professor and taught high school English. After publishing several well-received papers, I landed a tenure-track position at NYU.\n\nWhen the first speaker stepped to the podium, I stopped reminiscing and turned my attention to the service for Lacey. There was no religious service. I sat quietly, listening with interest as several speakers praised Lacey's contributions to the art community in and around Burlington. I had no idea Lacey was quite so active, respected, and popular in the community. Finally, her youngest son gave a loving and funny eulogy. \n\nAmong the several hundred people that passed through that day, I recognized the mayor of Burlington from seeing him on the news. The president, provost, and art school dean from the University of Vermont all spoke. One of our U.S. senators made a brief appearance to pay his respects and press the flesh but didn't speak. I knew no one in attendance. My siblings lived in Washington state and California. My cousins all lived in the Boston area and never knew Lacey. My children didn't know Lacey and were scattered about the country. Lacey's only sister died as a toddler, before Lacey was born. Lacey's cousins were gone. Our parents, aunts, and uncles long dead. I left quietly when the service was over.\n\nMy phone rang on a Saturday morning a few weeks later. I was in my office working. I had been on a roll since waking before dawn. Finally making progress on a chapter I'd been struggling with. Judith stuck her head in and told me the call was for me. I didn't want to be interrupted but made the mistake of asking who it was.\n\n'A Peter Merritt. Lacey's son?' I heard the curiosity in Judith's voice.\n\nI hadn't met Peter. Hadn't even known about him. I thought the oldest son at the service was from her first marriage. Peter missed his mother's services for some reason. I later doubted he cared, maybe even couldn't be bothered. Lacey's second husband was named Peter. But her first husband's last name was Merritt. The juxtaposition piqued my curiosity.\n\nI said hello but he didn't return my greeting. 'Who are you?' he asked tersely.\n\n'I'm an old friend of your mother's,' I told him. 'We grew up together. In fact, we were raised as cousins.'\n\n'Do you know where Lacey's studio is?' he asked. 'At the house?'\n\n'I've been to the house. I've never been in the studio but I know where it is,' I responded.\n\n'Do you have time to come by?' he asked. He didn't sound like he wanted me to. \n\n'I suppose I can come by. When?' I asked.\n\n'Immediately would be preferable,' he told me.\n\n'I'll be there in an hour,' I told him. His response was a click and a dial tone.\n\nJudith looked at me with a question on her face. Judith knew about my friendship Lacey but hadn't met her. She also knew we'd been raised as cousins but weren't blood relatives. I didn't think she needed to know about our summer of unbridled passion. She knew Lacey passed away unexpectedly. Judith had to be in court the day of the services.\n\n'He wants me to meet him at Lacey's studio. He didn't say why. He was pretty rude,' I told her. 'I'll be back as soon as I can.'\n\nI had to get dressed first. I was still wearing pajamas while I worked. I'm not sure why, but I took my ancient, nearly dilapidated Ford pickup instead of the Volkswagen. Lacey's farm truck had been a Ford of similar vintage, late forties. When I got there, I pulled up to the converted barn I knew was Lacey's studio. A man in his late thirties or early forties came out and met me in the driveway. He was average height, anorexically thin, and had a blotchy, florid complexion like his father. He seemed fastidious about his appearance in a way that was preening and slightly effeminate. Full of nervous energy that made him high strung and jumpy. He didn't greet me but rather led me inside wordlessly. Something had crawled up his butt far enough that he went out of his way to make me feel unwelcome.\n\nOnce inside, he led me to a wooden crate about three feet in all dimensions. The top was sitting on the box, slightly askew. It had never been secured. A shipping label on the lid bore my name, including middle initial, and address. There was a large manila envelope sitting on the lid. \n\nI'm Peter Merritt,' he told me. 'Lacey's oldest son. I'm the executor for Mother's estate.' The way he said it was somehow simultaneously pretentious and disrespectful.\n\n'It's nice to meet you.' I made an effort at cordiality and extended my hand, but he ignored it.\n\n'My full name is Peter Adam Williams Merritt,' he said, testily. 'Not Peter Adam William. Peter Adam Williams.'\n\nThat gave me a chill. My name was Peter Adam Williams. 'Okay,' I said. I wasn't sure what I could say. But I knew his gears had jammed on that tidbit and hadn't broken free. He was way ahead of me in puzzling over it.\n\nHe picked up the envelope and handed it to me. It was unsealed and unaddressed. 'This was inside the box. I've read it already,' he said acidly. 'You should, too.'\n\nInside was another unsealed envelope, addressed to Pete. It was a birthday card. My birthday was a couple weeks away. Lacey's would have been at the end of the month. We hadn't been exchanging birthday cards. I read the card and suppressed a smile at its good-natured needling. I was uncomfortable with this unpleasant man and didn't want to show my affection for Lacey. \n\n'There's more,' he said.\n\nI looked in the envelope again and saw there was an unfolded, hand-written note. I took it out. It was on a heavy, professional drawing paper.\n\nPete,\n\nI was very proud of you when I learned you earned your doctorate. But a bit sad, too. I frequently imagined how life might have been different if we had another summer or two together. Or if our respective talents hadn't taken us so far away from each other. I think much would have been the same. But other things surely could have been different.\n\nI want you to have these pieces of me now. I knew you should have them someday before I finished them. I almost gave them to you the day you blundered into my gallery. But I couldn't bear to part with any of them, then. I think now it's time.\n\nThese works soothed an aching heart during difficult times. Warmed and thrilled me as I created them. They made fond old memories new again. None but me has seen them. I pray they will be even a little dear to you.\n\nHappy Birthday, \n\nAlways with love, Lacey\n\nP.S. I think it's past time you introduced me to your wife. We keep saying we'll get together. Let's not put it off any longer. I'll call you to arrange dinner one night when you know she'll be up. Or I can go to New York with you. \n\nI looked up at Peter. He didn't say anything. He gestured grandly toward the box. I took it as another intentional slight. I lifted the lid off and set it down. There were four artworks of similar size in it. The middle two were the same size. The one closest to me, the smallest. The one furthest away the largest. They hadn't yet been properly packed for shipment. All were framed, but loose in the slots that separated them. \n\nI pulled the first one out and recognized the scene immediately. A watercolor of Lacey and I splashing in the pond in the woods behind the orchard and the apiary. Only Lacey or I would know who or where the figures were. There was no detail to the faces and bodies. But they were unquestionably nude young adults. The second was a pastel. The view was much closer this time, and more intimate. We were in the orchard partially obscured inside the curtain formed by an apple tree crown. I was leaning against the trunk with Lacey in front of me. I recognized the way her naked back, waist, bottom, and legs all flowed to form her graceful figure. We were embracing and kissing. Again, it wasn't graphic. The faces and private parts hidden. The intimacy was beautifully portrayed.\n\nMy hands shook as I took the third picture out of the box. It was a charcoal drawing depicting our first tryst on the flat rock. Once again, the naked bodies weren't represented graphically. My face hidden; her's vaguely depicted. But it wasn't difficult to figure out what the couple was doing. \n\nMy nerves were nearly frayed when it came time to look at the last picture. I delayed the inevitable as best I could. Before taking it out, I replaced the first three. Peter just watched, silent and stone-faced. My hands were shaking so badly I almost dropped the last picture. It was a portrait of Lacey and I sitting in the stream after our first tryst, facing each other. The view is set like the artist was sitting in the water nearby, the surface of the water formed the bottom of the scene. Lacey is gazing at me longingly. She's caressing my face in obvious affection while I wash her breasts which sit just above the waterline. A black squirrel is in mid-hop as it crosses the tree fallen across the river, downstream from where we bathed.\n\nI could recall every nuance of her breasts from that day as I looked at the painting. This oil on canvas was the most intimate and detailed of the four. The faces were readily identifiable. I recalled the black squirrel when I was at the services. I didn't make the connection to the gallery name until I saw the squirrel in the painting. \n\nPeter spoke for the first time in several minutes. His tone full of disgust. 'The first three are part of a series. That one isn't. It's entitled Bathers and Black Squirrel.'\n\nI sighed when I returned it to the box. I was emotionally exhausted when I looked over at Peter. He looked like he had a question for me. It wasn't long before it came out. \n\n'Mother didn't do nudes and erotica. Can you explain these artworks?' Peter asked. His attitude made him sound like a petulant child.\n\n'I can,' I told him. 'I'm not going to. And apparently your mother did do nudes and erotica.'\n\n'There are more than twenty additional works in the series. In various media,' he told me. 'Mostly pastels, and watercolors. Those are media I never saw Mother use. There are a couple of charcoals and three more oils. They're all titled P & L Summer of 72, numbered one through twenty-six. The dates at her signature span more than twenty years.' He hesitated for a moment. 'Are you my father?' he asked impertinently.\n\nI hadn't anticipated the question. Maybe I should have. But I hadn't. I knew the answer was no. I'd have known if Lacey had been pregnant and I was responsible. Mom would have had my head. Uncle Charlie would have taken my scrotum and fed it to his nephew's pigs. I couldn't suppress a smile, which I saw caused Peter's blotchy face to flush in anger. I laughed, which pissed him off even more. 'How old are you Peter?' I asked.\n\n'Thirty-seven.' \n\n'I caught up with Lacey five years ago. Before that I hadn't seen her in more than thirty years. That summer was more than forty years ago. I'm not your father,' I told him tersely. 'Do the math. Or aren't you familiar with the human gestation period?' I would have thought it impossible, but Peter's face got redder. I wondered if his blood pressure had him on the verge of a stroke.\n\n'My father told me he left Mother because she cheated on him and got pregnant from the affair. These artworks and my name suggest you're that man.' He'd been unpleasant and rude from his first words to me on the phone. Peter's overt unpleasantness was irritating enough. Now he was making unfounded accusations. \n\n'I don't know what he told you. Your mother didn't have an affair. He deserted her before you were born. He was an asshole that didn't want to take responsibility for a child.' I saw my nasty retort struck home. I regretted it, immediately. But not enough to apologize to the callous little twit. I was amazed that he had none of Lacey's good humor, kindness, or humanity.\n\nPeter mood got darker but didn't dispute me. 'Then why is my name Peter Adam Williams Merritt?' he asked, petulantly.",
        "'I can only guess. But your mother and I were very close when we were young.' \n\n'The lawyer said not to include these in the estate inventory. They were obviously intended as a birthday gift. Mother just happened to die before she gave them to you.'\n\nThat ended our discussion of Lacey. He gave me some bubble wrap, after I asked for it, and watched silently while I wrapped the artworks. He called someone who came with an old forklift that discharged oil-laden exhaust. The box was set in the back of my truck after the forklift driver secured the lid. I said goodbye to Peter as I got in the truck. He didn't return the courtesy. Just turned his back to me and went into the studio without a backward glance.\n\nThe drive home only took a half hour over secondary roads. I had occasion to both laugh and cry as I drove. Sometimes both at once. By the time I turned into the driveway, I had decided I was going to hang all but the charcoal somewhere. They were tasteful if suggestive. Judith wouldn't like them at first. She knew she wasn't my first love, as I wasn't hers. But she knew she was my last. But Judith is a romantic at heart. I was sure she'd appreciate them if I told her a little about the summer Lacey and I were in love.\n\nEventually, I inherited the rest of the series. And two more that weren't part of the series. Lacey's lawyer called to tell me of the bequest and arrange delivery. He also relayed that Peter demanded I not sell or display them publicly. I asked the lawyer if I could rely upon him to deliver a message to Peter.\n\n'Of, course,' he told me.\n\n'I'm a writer so I'll be as eloquent as I know how. Tell Peter I said he can go fuck himself.'\n\nThe attorney laughed. 'I'll deliver your message when I speak to him. Verbatim. I've wanted to tell him that myself, but it would be unprofessional. But delivering a message to an executor from a beneficiary is both professional and required by my ethics. It was nice talking to you Dr. Williams. Good day.' I just knew he was smiling as he said goodbye.\n\nAs Peter had described the series, the works were related. Tasteful, intimate renderings of the summer we were in love. The two not part of the series, along with Bathers and Black Squirrel, are my favorites. There's no question of who is portrayed in them. Anyone who ever knew us would recognize the young couple in the paintings. \n\nWorkaday Laughs is an oil that looks through the window of Lacey's rusty truck door from the driver's side. We're dressed for work. I'm turned toward Lacey, half on the bench seat, smiling and gesturing. Lacey is in profile behind the wheel, her head thrown back in unrestrained laughter. I remember that day vividly, though I won't share what was so funny. Not even with Judith. I want that memory mine alone.\n\nThe second, Suspicious Mothers, is by far the largest work. It's set at my parent's house at Thanksgiving. Lacey and I are seated on my parent's couch, the middle cushion between us, our heads turned only slightly toward each other as we try to look at each other without appearing to. Our families are behind us in an adjacent room. Our mothers are watching us on the couch from doorway just inside the adjacent room, huddled in conversation. Our pained expressions tell of a young couple longing to be in each other's arms. We sit together on the couch but feel so desperately far apart. Pining for a time and place in an unfulfilled wish. \n\nI wondered if Lacey learned our mothers suspected what was happening with us that summer. And if our mothers were suspicious of us, was Uncle Charlie, who could squeeze a dime so hard it turned into three nickels, so Machiavellian that he financed Lacey's overseas studies to keep us apart? Did Lacey marry poorly because there was always something unresolved between us? \n\nAfter I dropped Judith off at the airport one Monday morning, I went to have breakfast with a friend from New York City before he drove home from visiting his daughter at the University of Vermont. The drive took me past my parent's old house. It belonged to someone else now. But seeing it reminded me of the last nights I spent with Lacey. She would leave for Paris the following summer.\n\nLacey and I went to a New Year's Eve party at a mutual friend's house, about two miles up the road from my house. We agreed to meet there. I'm not sure how she got there. I don't think I ever asked. I parked on the road, well away from the house. I could feel Lacey's tension in the hug she gave me when I arrived. I also heard anticipation and impatience in her voice. As soon as the house was overflowing with well-lubricated partiers, we quietly made a surreptitious escape. \n\nMy parents and siblings were in Boston visiting my grandparents. I had plans to go see my grandparents the next weekend before I went to a Celtics game with two of my buddies from Wesleyan that lived in Boston. Since no one was home at my house, Lacey and I decamped there to ring in the New Year together. Lacey was edgy and wired up during the short drive. She kept one hand pressed between her legs as she leaned against me and the other rubbing my cock through my pants. Her breathing was erratic and labored, punctuated by an occasional groan. I parked my car in the garage instead of the driveway. \n\nWe began stripping each other before we were out of the garage, leaving a trail of discarded clothing as we made our way to my bedroom. Before we were halfway down the upstairs hallway, Lacey's legs were clasping my waist, her arms clinging to my neck while she planted wet, hot kisses on my neck. Her sex was hot and damp against my abdomen. We fell onto my bed so forcefully that one of the slats cracked loudly. After kissing passionately, for several minutes, I kissed and nibbled my way to Lacey's breasts. I had barely encircled a nipple with my lips when she pushed me lower. I gladly accommodated her desire.\n\nMy first probe of Lacey's clit caused her to arch her back and pull my face into her groin. After just a few minutes of licking and sucking her clit, probing her opening with my tongue, Lacey drew in a sharp breath and sat up briefly. She crawled around me, pushed me onto my side and pressed a hand against my chest until I finally came to rest on my back. Her knee bumped my forehead as she straddled my face. She spread her legs widely and fell forward, her face coming to rest against my hip.\n\nI returned my tongue to the slick folds above me. I heard Lacey hiss when my tongue grazed her clit. When I caught it between my lips and sucked gently, she groaned loudly and pulled my already rigid cock toward the hot breath that was torturing me. When I felt the wet heat of her mouth suck on my glans, I almost erupted immediately. Fortunately, the urgency passed.\n\nLacey kept me on edge while I brought her to several ear-splitting orgasms. Only the thighs nearly crushing my skull prevented permanent hearing damage. Lacey never hinted I should stop what I was doing to her with my tongue, lips, and fingers. But the look in her eyes when I crawled between her legs told me she wasn't disappointed by my change of position. She gently grasped my erection and guided it to her entrance. I slid easily into her over-heated, silky smooth depths. She gasped when I first entered her then sighed contentedly once I was nestled comfortably inside her.\n\nIt wasn't long before Lacey was shaking through another peak. Her enthusiasm never waned. Her hips kept pivoting to meet my thrusts through several more orgasms. Never once did she ask for a break. We didn't stop until I erupted into her. My body jerked and shook uncontrollably as I pumped what felt like a continuous stream into her. When the sensations rocking me subsided, I fell sideways, almost rolling out of my twin bed onto the floor. \n\nLacey and I lay beside each other gasping for oxygen. Before my breathing slowed, Lacey hopped out of bed and scooted down the hallway to the bathroom. She returned a few minutes later with a glass of water. I drank it down greedily while she stood over me, wearing only a smile. I didn't get much opportunity to admire the beautiful body that often filled my dreams. Before I could put the glass on my nightstand, Lacey was crawling back into bed, settling in between my legs. I watched in amazement as she greedily took the length of my wet, semen-coated cock between her lips and began sucking. I wasn't eighteen anymore, but I was still young and virile enough to be excited at the prospect of continuing to stoke our passions.\n\nLacey and I spent the next two days in bed. We took breaks only for sustenance, bathroom runs, and showers that were as erotic and heated as what we were doing in bed. Lacey did call home to say she was spending a couple days with friends. I heard only her end of the conversation as I searched the refrigerator for food. Aunt Mabel never questioned where she was, happy to know she was fine. \n\nLacey had to leave the morning my parents and siblings were due to drive home. She was opening one of the farm stores that morning. I dropped her early enough that no one saw us together. I remade my bed after washing and drying the sheets and restocked the fridge before my parents returned home. The broken slat went into the fire. \n\nMy friend and I enjoyed a pleasant visit though I know my attention drifted a few times as Lacey continued to invade my thoughts. We dallied over several cups of coffee, finally leaving just before the lunch crowd began to arrive. \n\nI called the University of Vermont that afternoon to discuss an exhibition of selected, never shown works, by prominent local artist, Lacey Meddows. I don't yet know whether the university will be interested in a show the works Lacey gave and willed to me. I hope they do. I also hope Peter will call me to rant at me about it. That way I can tell him to fuck off myself."
    ],
    "authorname": "carrteun",
    "tags": [
        "first time",
        "intercourse",
        "masterbation",
        "oral",
        "romantic",
        "summer",
        "romance",
        "oral sex"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/bathers-and-black-squirrel"
}