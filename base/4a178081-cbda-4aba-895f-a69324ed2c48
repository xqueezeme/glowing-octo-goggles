{
    "title": "Sharing a Bed with Daddy Pt. 04",
    "pages": [
        "This is the fourth part of an incest story, taking place between a twenty-six-year-old daughter and her father. In fact every character in this story is over the age of thirty except for the first person twenty-six year old narrator.\n\nThank you all for your kind words, encouragement, and more on Sharing a Bed with Daddy, SABWD Part Two, and SABWD Part Three, all of which you should read before this one for context.\n\nAs with all my stories, this takes place in a happy alternate reality where people don't worry about pandemics, std's, or the need for birth control.\n\nPlease check my profile to read about a contest I'm running in September for one of my other series.\n\nThis one has a longer build up than some of my others, so please be gracious in indulging my story. This story also contains some peeing, not in an erotic way, but in a voyeuristic way, so if pee-play isn't your thing don't worry when you get to that part.\n\nThis series started as an experiment. I've written some incest before, but this was my deepest dive into it. Thanks for your indulgence into one of my kink interests.\n\nEnjoy reading!\n\nIE\n\n~~~\n\nFrom Part Three\n\n\"Whenever you want.\" I said. \"Tell me when you want me and I'm yours.\"\n\n\"Don't tempt me.\" He said quietly.\n\nI pulled him close and put my mouth to his ear.\n\n\"I want to taste your cock.\" I whispered to him. \"Consider that your invitation to temptation. Call me and tell when you want me.\"\n\nI kissed him quickly and got into my car. I started it, and with my foot on the brake began to roll down the driveway.\n\n\"I have about twenty miles until I get to the crossroads. One fork takes me home.\" I said. \"The other means neither of us will have to sleep alone tonight. Call me.\"\n\nI moved my foot to the gas pedal and headed for the road.\n\n~~\n\nAnd now:\n\nI sat watching the clothes spin in the laundromat dryer, pretending to read a magazine, but in reality I was staring at an ad for running shoes and thinking.\n\nJust three hours ago I'd left my childhood home which my father had just sold. A ferocious rainstorm had caused me to unexpectedly stay the night, and because we hadn't planned on me staying over my father and I had ended up sharing an old rollaway bed.\n\nIn that narrow bed I had crossed a sexual line with my father that I'd never seriously contemplated crossing outside of my fantasies.\n\nAnd we didn't just cross it once either.\n\nI'd stroked his cock until he unloaded in my panties, and then later during the night he'd fucked me, and I'd happily let him pump me full of his cum.\n\nAnd then right before I left he'd made me cum again, fucking me from behind in the empty house.\n\nI'd let him know before I drove away that a simple phone call was all it would take for me to scrap my plans of heading back to my apartment in favor of joining him at his new house.\n\nAnd I'd made it clear that I was very willing to join him for more sexual exploration.\n\nI'd been less than five miles into my trip when my phone had chirped with his incoming text.\n\nIF YOU PLAN ON BEING HUNGRY WHY NOT JOIN ME FOR DINNER? I'M IN THE MOOD TO EAT A LOT\n\nI'd smiled, knowing that even though he was probably struggling with the reality of what we'd done, he obviously wasn't ready to nail that door shut quite yet.\n\nI'd begun immediately to fantasize about what we'd do that night, and wondered exactly how much I could read into the text he'd sent.\n\nAfter cumming in me last night he'd briefly gone down on me. Now I wondered if he wanted to spend longer licking and tasting his own load as it oozed out of me but had held back for fear of going too far with me.\n\nOf course that wouldn't have been too far. My father would have no way of knowing this, but I have a cum fetish myself, and would have delighted in tasting his cum on his lips, after he'd sucked and licked it from my swollen cunt.\n\nI realized that I was making myself horny.\n\nI'd walked out of that house for the last time with my pussy lips swollen and dripping from the fucking he'd just given me, and it didn't take much to bring my body back up to the edge of sexual need.\n\nBut if I wasn't going home there were some realities that I had to deal with.\n\nI needed a change of clothes. At the moment I was wearing a t-shirt, a bra, jeans and some old running shoes. My panties were balled up and sodden with Daddy's cum.\n\nAll my clothes from yesterday had gotten wet in the storm, and they were wrapped up inside the cum and sweat covered sheets we'd fucked on last night, the whole bundle needing to be laundered.\n\nAnd of course I needed a shower. I'd showered before leaving my apartment yesterday morning, with the intention of returning last night. I'd had a change of clothes with me but hadn't really thought I would need them.\n\nI was far from a germaphobe or neat-freak, but the idea of spending too much more time unbathed didn't appeal to me. Nor did the idea of putting on something dirty afterwards.\n\nI could easily stop and buy something new to wear, I decided. And I could buy shampoo and bodywash, so showering at my dad's new place shouldn't really be a problem.\n\nI wanted to time my arrival for after the movers were done unloading, so I purposely drove the speed limit and stopped to dawdle over an early lunch. Loaded up on food and gas and caffeine, I got in the car again, determined to find someplace to shop to help fill in the time.\n\nI soon found an outlet mall, and headed for one of my favorite stores. I bought a package of inexpensive socks, a sweatshirt, three t-shirts, two pair of jeans, a package of cotton panties, and two sports bras.\n\nBefore I checked out I got bodywash, shampoo, conditioner, deodorant, and added some mid-range perfume to my cart. I figured that some of this I could maybe leave at my father's new house for another visit, and the rest would buy me a day or two until I could get home and do laundry.\n\nOn the way to the checkout I bought a new gym bag, big enough to fit all the clothes I just bought and then some.\n\nAs I was putting the bags into the car, I noticed a boutique across the street. An adult boutique. The sort of place that several years ago would only have existed out by the airport, catering to men buying movies and inflatable toys in brown paper bags.\n\nNow they cater to women almost exclusively and carry much more in the way of lingerie and toys for couples. Although if one still wants an evening of solitary masturbatory fun the store will happily sell you what you need to make that happen, regardless of your gender.\n\nI moved the car closer to the boutique and sat thinking for a minute. I had an idea in my head, but I wanted to think about it a bit more.\n\nI decided to give myself a good excuse to sit and think.\n\nI got into my trunk and tore the tags off of my new purchases and added them to mine and my father's wet clothes from the evening before, along with the two sheets from the rollaway bed, and my panties that I'd used to give him a handjob.\n\nI then drove back towards the place where I'd had lunch and found the laundromat that I'd seen. I parked and headed inside with my load. I used my credit card to buy soap and dryer sheets, and to get coins out of the machine.\n\nThen I sorted all my laundry and started three different washers going. And while they were washing I sat and thought.\n\nI had no desire to turn my relationship with my father into something romantic or long term. Not only did that seem like a disaster waiting to happen for both of us emotionally, but I was also very sure that that's not what he wanted either.\n\nHowever, I had no problem exploring this with him. He obviously had been without sexual release for a long time, and if I could help him find sexual pleasure and avoid jerking off to dirty magazines then I felt like I was doing him a real favor.\n\nBesides I loved him and wanted him to be happy. And along those lines he might be someone safe for me to explore with, someone who would be slow and patient, and willing to indulge me in some things I wanted to try.\n\nHe'd obviously enjoyed the feel of my panties on his cock when I used them to catch his cum. If I hadn't been worried about making a mess, I wouldn't have done that, but since I had it was an image I couldn't get out of my head.\n\nEven if he wasn't fantasizing about pumping another load of his hot cum into a pair of my panties I certainly was.\n\nAnd if he wanted to do it again, I certainly wanted to be prepared, and the pack of cheap cotton panties I'd just bought probably weren't the most erotic thing in the world to use.\n\nIn the dark he hadn't noticed the kind of panties of course, and it's likely that he didn't care. If he'd gone that long without an orgasm, he probably would have enjoyed that handjob even if I'd wrapped his cock in a scratchy wool sweater.\n\nBut I kept thinking about the boutique. I could find something sexy to wear. Not necessarily a costume or anything too kinky. But something a bit less everyday than panties and a t-shirt. Even if Daddy didn't know I was wearing them, I always felt so much more erotic and sexually confident when I dressed sexy.\n\nWhen the three washers were done, I combined everything into two dryers and set them going for eighty minutes. The only other customer in the laundromat was a middle-aged lady sitting by a bank of washers doing a crossword puzzle.\n\nLeaving my clothes here a few minutes shouldn't be a problem. There were plenty of empty machines and there didn't seem to be an after-lunch rush.\n\nI left the store and drove back to the boutique. I parked close and went inside, pausing inside the door to decide which side of the store I wanted to head towards. The right side seemed to be where the sex toys were, and the left had the lingerie.\n\nAs much as I didn't think this relationship was ready for sex toys, I'm always tempted to browse in a place like this. I have a nightstand drawer full of vibes in my apartment, and I'm always willing to try a new one. However, I was fighting a clock, so I went left towards the apparel.\n\nThe store was well lit and clean, with deep carpeting and soft pink and red colors on the walls and shelves. Quiet music played from somewhere, and a scented candle flickered up by the checkout counter.\n\nI wasn't sure what I was looking for, so I headed for the panties first. I noticed that the lowest shelf of each section seemed to be a bin, each shelf having a specific color in its respective bin.\n\nI bent down to look and noticed that the prices were much lower than I thought they'd be.\n\n\"May I help you find something?\" asked a pleasant voice.\n\nI turned and saw a nicely dressed brunette about ten years older than me. She was wearing a light blue skirt and a dark blue blouse, which did little to hide her abundant figure.\n\nShe had piercing blue eyes, made to seem even more blue by her dark hair and what I assumed were carefully selected clothes. Her nametag said: MARIE.\n\n\"I have a sort of date tonight.\" I said. \"And I'd like something sexy to wear.\"\n\n\"Well, you've come to the right place.\" She smiled. \"What sort of look are you going for on this 'sort of' date?\"\n\n\"Well it's fairly casual, so I'll be wearing jeans and a BLOUSE.\" I said. \"But underneath all of that I'd like to be a bit more......well.....I'm not entirely sure.\"\n\n\"Informal but flirty?\" she suggested.\n\n\"I don't want to come across as too forward.\" I sighed. \"But I do want to catch his eye.\"\n\n\"Well what sort of things is he the most excited to see you in?\" she asked. \"Panties and a bra? Or maybe a stockings and a garter?\"\n\n\"This is a pretty new relationship. I'm not entirely sure what exactly would catch his eye.\" I told her.\n\nI saw no reason to hold back. It's not like she knew me or would have any reason to suspect that I was talking about my own father.\n\n\"So maybe something more traditionally sexy.\" She suggested with a wink. \"Something that lets him know you want him to see what's underneath, without quite begging.\"\n\n\"That seems like a good description of what I need.\" I laughed. \"He's about twenty years older than I am and I've never tried to be sexy for someone that much older than me before.\"\n\nI wasn't sure why I told her that part, but I felt a ribbon of naughty pleasure pulse through me as I said it out loud.\n\n\"Well let's see if we can find something that would be sure to catch the eye of most men.\" She said.\n\n\"I know his favorite color is red.\" I said, bending down to look at the red panties in the bin closest to me.\n\n\"Oh you don't really want something from down there.\" She said.\n\nShe bent over and picked one up, stretching it in her fingers.\n\n\"They're mesh,\" she said, \"designed to look sexy but they're not comfortable. They're priced to be disposable.\"\n\n\"Disposable?\" I asked.\n\n\"Sure.\" She said. \"For someone working in the, let's say, entertainment industry. She can leave these behind as a souvenir, without losing any money. Whether they're thrown from a stage or left in a hotel room.\"\n\n\"I got it.\" I said. \"Sort of like slutty business cards.\"\n\n\"Exactly,\" she laughed, \"at least that's how I treated them when I was a dancer.\"\n\n\"My date,\" I said, \"he might enjoy something nicer. Panties I could leave him as a sort of memento. But something, sort of comfortable. Like silk?\"\n\n\"Will he be wearing them after you give them to him?\" she asked softly. \"Forgive me if I'm being too nosy, I'm just wondering about whether they need to stretch to fit him.\"\n\n\"He won't be wearing them.\" I whispered. \"But they might be used to.....uh.....well to.....\"\n\nI blushed, trying to find the words. I couldn't believe I was telling this stranger these details.\n\n\"Something soft he can enjoy against his erection?\" she asked softly. \"Don't be embarrassed. There's not likely to be much you can be planning to do tonight that I haven't done myself.\"\n\n\"Yes.\" I said with a relieved smile. \"Exactly.\"\n\n\"So do you want a sexy outfit you can change into?\" she asked. \"Or something you can wear under your clothes?\"\n\n\"Under my clothes would be the best plan I think.\" I said. \"Leaving the room to get dressed might seem a little too planned.\"\n\n\"Come here.\" She said, turning and walking towards the back of the store.\n\nWe turned a corner and entered another aisle. She turned and looked me up and down, and then walked a few steps further and stopped.\n\n\"These sets match. Panties, bra, stockings, a set of nylons, and a choker.\" She told me. \"You can wear the nylons and leave the panties and stockings for another time or wear just the stockings under a skirt and tease him. It will give you options depending upon your mood. Find your size, and then I can hunt down whatever color you prefer.\"\n\nShe'd guessed my size pretty well, and we were standing so close that the second set I pulled out was correct.\n\n\"Red?\" I asked her. \"Unless you think pink?\"\n\n\"That's a tough choice.\" She said. \"Red is a bit more daring, and pink is a bit more conservative, so it probably depends on what you'd like him to think.\"\n\n\"I'd like him to think I'm new to all this so he could teach me.\" I confessed in a soft whisper. \"But he won't buy that.\"\n\n\"You're young enough to get away with that.\" She said. \"If you want to. No reason he has to know that you're anything less than learning from him.\"\n\n\"We were together last night.\" I told her. \"Even if I'd claimed that last night, he wouldn't buy it two nights in a row.\"\n\n\"I know what you mean.\" She grinned at me. \"Older men love to sexually teach their partners. That really gets them going.\"\n\n\"It got me going too,\" I whispered, \"if I'm being honest.\"\n\nI had no idea why I kept telling her these things. But I suppose there weren't many people I was going to be able to tell these stories to.\n\n\"May I suggest something?\" she said. \"And then I'll leave you to decide.\"\n\n\"Absolutely.\" I replied.\n\n\"A black t-shirt with your jeans.\" She said. \"Over yellow panties and a yellow bra with black trim.\"\n\n\"Yellow?\" I asked.\n\nShe took the set from my hand and winked at me, and then lead me out of the aisle, and further back into the store.\n\nI followed her into an aisle with panties and t-shirts, all of which had words printed on them.\n\n'CUM SLUT'.\n\n'FILL ME UP'.\n\n'FUCK ME'.\n\n'IT'S NOT GOING TO LICK ITSELF'.\n\n'MILF'.\n\n'CUM DUMPSTER'.\n\n'GOOD GIRLS SWALLOW. THE BEST GIRLS SHARE'.\n\n'ANAL PLAY QUEEN'.\n\n'BLOWJOB EXPERT'.\n\nThe selections seemed endless.\n\n\"Something playful, that reminds him of innocence, but indicates that you might be willing to trade that innocence for something only he can give you. That might help sell the mood you want.\" Marie said.\n\nI'd have never thought of something like that, but now that she'd suggested it I could almost picture peeling off my jeans to reveal yellow innocent looking panties. Panties with something deliciously nasty written on them.\n\n\"But my feelings aren't hurt if you don't see anything you want. You know best what you're looking for.\" She gave my arm a quick squeeze and then turned towards the register.\n\n\"I'll definitely look.\" I whispered, almost to myself.\n\n\"I'll go pull one of these in red and one in pink your size and have them at the counter for you. Take your time and look around. Just call out if you have any questions.\" She said.\n\nI ignored the t-shirts and started looking through the panties. I wasn't sure if this was a good idea or not, but I was okay on time and could afford to look for a few minutes.\n\nAs I browsed, I was thinking that the original set she'd picked out for me would be ideal in pink. Sexy but traditional. I could wear the bra and panties and save the rest for another date at another time.\n\nI had just about made my mind up when I came upon a pair of yellow panties that had 'DADDY'S LITTLE GIRL NEEDS SPERM' printed on them, and my heart thudded in my chest.\n\nI could almost see myself, my nipples stiff, visible, and needy, wearing only this pair of tight yellow panties emblazoned with the words 'DADDY'S LITTLE GIRL NEEDS SPERM' clinging to my hips.\n\nI could also picture Daddy, staring at me with lust in his eyes.\n\nI stood stock still, contemplating for just a moment, before making my mind up. I took the yellow panties down and saw that on the back in smaller printing it said: 'PROPERTY OF DADDY'.\n\nWith my heart racing I moved to the bra aisle and found a bra in my size that matched the yellow panties exactly. On my way back to the counter I spotted a rack of make-up.\n\nNothing fancy or formal, more the kind of thing you'd use to dress up to roleplay. I paused for a moment and found a dark maroon lipstick and knew that it would be just the thing.\n\nI headed towards the counter.\n\n\"Find something?\" Marie asked when I laid the panties, bra, and lipstick on the countertop.\n\n\"I did.\" I said. \"And I think your suggestion will be perfect.\"\n\n\"Not exactly traditional.\" She said with a grin. \"But sometimes tradition isn't all it's cracked up to be.\"\n\n\"I agree.\" I told her with a smile. She had no idea how much her words applied to my life right now.\n\n\"Shall I put these back?\" she asked, indicating the packages she'd pulled for me.\n\n\"Maybe I'll take the pink set.\" I said. \"No sense being unprepared for my next date.\"\n\n\"Absolutely.\" She said. \"Do you need anything else?\"\n\n\"A black t-shirt.\" I said.\n\n\"Of course.\" She smiled. \"Solid black, or do you want to see if any have something written that catch your eye?\"\n\n\"Plain and solid, I think.\" I said. \"Unless......\"\n\n\"Yes?\" Marie asked.\n\n\"I don't suppose,\" I whispered, even though we were alone in the store, \"you have one that says 'DADDY'S GIRL' or something like that do you?\"\n\n\"Let's go check.\" She said with a glint in her eye.\n\nI followed her back over to the aisle we'd been in, and we went past the panties. We got to a rack of t-shirts, sorted by color. She started to slide them forward, one at a time, her eyes taking in the writing.",
        "She pulled one out, black with yellow print that said 'DADDY'S BABYGIRL'.\n\nMy heart thudded in my chest and I suddenly felt hot.\n\n\"That's the one.\" I whispered.\n\n\"'Daddy's Babygirl'\" Marie read quietly. \"This is it huh?\"\n\n\"Yes.\" I whispered.\n\n\"Having a little 'daddy-daughter' weekend are you?\" she asked in a whisper, taking my hand and pulling me back towards the counter.\n\n\"How did??? I mean.....I was just....uh....\" I stammered.\n\n'HOW DID SHE KNOW??!!!?' I thought.\n\n\"Well I didn't think that was literally it.\" Marie said, her eyes twinkling in delight. \"But your reaction sure spelled it out.\"\n\n\"I......I.......\" I literally had no idea what to say. I wanted to run out of the store.\n\n\"Honey.\" Marie said. \"It's okay. Like I said before, not much would freak me out. And this certainly doesn't either. You're old enough to like what you like.\"\n\n\"I......thank you Marie.\" I said. \"I can't really explain it.\"\n\n\"You don't have to.\" She said. \"Most of us can't explain the kinky things we need and chase. We just like what we like.\"\n\nWe continued on to the counter.\n\n\"Anything else to go with this?\" she asked. \"Lube? Flavored condoms? Batteries? Candles?\"\n\n\"This scent is delightful.\" I told her, pointing to the soft purple candle flickering on the counter. \"What is it?\"\n\n\"It's called Burnt Cinnamon.\" She said. \"I have this at home. It always arouses me.\"\n\n\"Always?\" I whispered. \"I love the way it smells.\"\n\n\"Would you like one?\" she asked. \"And yes. Always.\"\n\n\"Now I almost wish I didn't have plans tonight.\" I smiled. \"Since I'm going to own a candle that I know for sure at least one beautiful person likes.\"\n\nShe reached under the counter and got a candle and put it in a small bag. She rang up my purchase, and when I handed her my credit card, she finished the transaction.\n\nAs I was signing the sales slip she took a pen and wrote on the back of a business card. I handed her the slip and she handed me my bags.\n\n\"Here, if you have any questions, you can call the store.\" she said, handing me the business card.\n\nShe leaned forward and put her hand on my forearm.\n\n\"The candle is on me this afternoon. And if your date falls through tonight you can call me.\" She whispered. \"My number is on the back, and I'd love to see you in those panties by candlelight.\"\n\n\"What if my date still happens but I'm free next week?\" I asked her, blushing furiously.\n\n\"I'll still like the scent next week I'm sure.\" She whispered. \"I'll tell you about me and my mother sometime.\"\n\nI grinned at her and with shaking hands picked up my bags and walked slowly to my car with my heart pounding.\n\nOnce inside my car I returned to the laundromat in time to catch my clothes before they stopped tumbling through the dryer. They were all dry, so I quickly folded them, and packed them into my new gym bag, and carried them out to my car.\n\nI spent a moment in the trunk, putting my new purchases into the bag with the clean clothes, and then slammed the trunk lid.\n\nI got in the driver's seat and thought for a moment. I pulled out the business card that Marie had handed me and looked at her neat writing on the back. It simply had her name and number and the word 'anytime'.\n\nI typed out a text, and then hit send.\n\nI WANT TO THANK YOU FOR MAKING THIS AFTERNOON SO FULFILLING. I GENUINELY HOPE IT'S OKAY TO TEXT YOU SOMETIME SOON\n\nI started the car and had just buckled my seat belt when my phone chimed.\n\nI PLAN ON LOVING CINNAMON FOR A LONG TIME TO CUM. A VERY LOOOOOONG TIME\n\nI smiled and sent a quick reply.\n\nCINNAMON WILL BE VERY NEW TO ME BUT NEW THINGS ARE OFTEN THE MOST DELICIOUS\n\nI was smiling to myself and fantasizing about the possibilities as I put the car in drive and headed back for the interstate.\n\nI had another hour to go to reach my dad's, and with a little luck the movers should be finished pretty soon.\n\nI had never been to his new place, but I had the address in my navigation app, and I let it guide me in. Within an hour I was driving through a pleasant small town, with older single-family houses spreading out around the old downtown area.\n\nEventually the road took me through town, and the houses got further and further apart, until I reached my turn. I followed a narrow road down through dark woods, until I saw a mailbox with the numbers I was looking for, at the exact moment the navigation system let me know I was there.\n\nI turned up the drive, and saw a small two-story cabin, with a wraparound deck and a short back yard that gave way to lake, where Dad's boat was already docked. The moving truck was backed up to the front of the house.\n\nI pulled into a turnaround just in time for the moving truck in the driveway to pull away from the front porch. I waved at the movers as they headed for the road, and then got out of my car and headed towards the house.\n\nI climbed the steps to the front porch and pushed the front door open.\n\n\"Hello?\" I called, expecting an immediate reply.\n\nI heard nothing, so I called out again, making my way down the hallway to the kitchen that looked out over the back deck. I saw my father walking towards the lake and smiled to myself.\n\nHe hadn't changed clothes since this morning, so he needed a shower too. Maybe we could get cleaned up together.\n\nI went around the kitchen and opened a back door that led out onto the deck. I walked across the deck and down into the yard, headed in the same direction I'd seen him go.\n\nTo my surprise he wasn't too far ahead of me. He'd stopped beside a tall evergreen tree and had his penis out.\n\nHe started to pee, and I stood a few feet behind him and watched. He obviously didn't know I was here, and I was fascinated to see him do something so intimate and personal.\n\nSomething I'd never seen him do before.\n\nWhen he finished I called out to him.\n\n\"Being pretty informal here at the new house aren't you?\" I asked. \"Is that how it will work? We just pee anywhere the mood strikes us?\"\n\nHe whirled around and broke into a smile.\n\n\"When did you get here?\" he asked. \"I saw the moving truck pull out onto the road and assumed I was alone.\"\n\n\"I pulled in right before they pulled out.\" I said. \"Timed it to miss the work and see the peep show.\"\n\nHe blushed a bit.\n\n\"I wasn't sure you were going to come.\" He said. \"I thought about calling and warning you off.\"\n\n\"Why?\" I asked softly, suddenly nervous.\n\nHe laughed.\n\n\"There's no running water until tomorrow.\" He explained. \"And no electricity either. That's why I'm out here peeing next to a tree. Since the toilets won't flush that seemed better than peeing in the sink.\"\n\n\"If there's no electricity then you better show me around before dinner.\" I said. \"Afterwards it'll be too dark to see anything.\"\n\n\"Come on then.\" He said.\n\nHe took me back in through the back door and gave me a quick tour. I noticed that his mattress was on the floor of the living room, with the couch and armchair pushed against the wall, but the bed was set up in the upstairs master bedroom.\n\n\"Why are you sleeping on the living room floor?\" I asked him.\n\n\"It's just until my new mattress gets delivered on Monday.\" He said. \"No sense having the movers haul this upstairs just so I can drag it down Monday morning. I'll be fine on the floor for a few days. It'll probably take me at least that long to get settled anyway.\"\n\n\"As long as your power and water get turned on.\" I teased him. \"Otherwise you'll be too busy stumbling around peeing in the dark backyard to sleep.\"\n\n\"I won't be stumbling.\" He said. \"I have a flashlight.\"\n\nI laughed, and we moved into the kitchen, leaning against the counters facing each other.\n\n\"Well now that you've had the tour, you've seen everything there is to see.\" He told me. \"I'm sorry you came all this way for a letdown of an evening. But I can't even offer you dinner. Let alone a shower or toilet.\"\n\n\"Then dinner is on me.\" I told him. \"We'll head into town and treat ourselves.\"\n\n\"Better be fast food.\" He said. \"I haven't showered since yesterday. I'm not fit for a dine in experience.\"\n\n\"So we'll get cleaned up too.\" I told him. \"I saw some hotels a few miles before town. I'll get us a room and we can shower and change, and then hit the town for dinner.\"\n\n\"No need to spend your money on me.\" He said.\n\n\"Well I'm not driving all the way home tonight.\" I told him. \"And since you're going to insist that I pee in the backyard while I'm here, instead of letting me pee in your sink like a decent person, I might as well shower, and pee, in comfort. So lock up and let's get moving.\n\n\"I'll follow you in.\" he said. \"That way you don't have to bring me back out here tonight after dinner.\"\n\n\"Come on.\" I said. \"We don't get to spend enough time together as it is. We'll ride together.\"\n\n\"Alright, alright,\" he conceded, \"I give up. When did you get to be so stubborn?\"\n\nHe started to pass me, on the way towards the stairs. I hooked his arm and pulled him close, putting my mouth against his ear.\n\n\"You fucked me and made me cum this morning,\" I whispered, \"and I drove away from you with my cunt wet and needy. And you didn't even get to cum. Hotel. Or here. I'm not leaving until I get what I want.\"\n\nHe pulled back a bit and looked into my eyes, and I leaned forward and kissed him. It started soft and gentle, but then I felt his tongue against my front teeth and I bit down, pulling his body to mine and riding against the lust we both felt.\n\n\"I guess I better find something to wear for dinner then.\" He said softly, pulling away.\n\n\"I stopped at a laundromat.\" I told him. \"I have what you were wearing yesterday clean in my car. Jeans, sweatshirt, socks, underwear, all of it. Lock up and come on.\"\n\nHe grabbed his wallet, and keys, and made sure the doors were locked and followed me out to my car.\n\nWe drove back through town, and took a turn before the highway came up, with him directing me.\n\n\"We're about two miles from restaurants, the movie theater, motels, everything we could need.\" He said.\n\nSure enough, a cluster of chain restaurants and stores appeared, and at the edge of the consumer sprawl were three or four hotels.\n\n\"That one would be fine.\" He said, pointing at a motel with two stories and rooms that opened to the outside facing the parking lot.\n\n\"Sure.\" I said. \"If you want to get a fungus from the shower and roll around in someone else's pubes in the bed.\"\n\n\"You always did have expensive tastes.\" He laughed.\n\nI pulled into a four-story chain hotel, known for its clean rooms, recently remodeled bathrooms and showers, and their downstairs bar and restaurant.\n\n\"This will work.\" I said. \"Clean, and affordable.\"\n\n\"Seems silly to get a room this close to the house.\" He said.\n\n\"Seems gross to wait a whole extra day to shower and eat warm food.\" I countered.\n\n\"I can pay for this.\" He said, as we got out of the car.\n\n\"This is on me,\" I told him, \"if you're feeling generous you can spring for dessert later.\"\n\n\"What will they think, two of us checking in without bags?\" he asked.\n\n\"Speak for yourself.\" I said, hoisting my backpack and new bag out of the trunk. \"I've got yours and mine in here. Maybe I'll tell them that I'm sex starved and you're my hired male escort.\"\n\n\"Well at least tell them I came highly recommended.\" He said. \"The only thing worse than being thought of as a male prostitute would be having them think I was a male prostitute who was sexually incompetent.\"\n\nI laughed and we went into the lobby. He stopped to look at the menu outside the restaurant, while I stepped up to the front desk.\n\n\"May I help you?\" asked the young lady behind the counter.\n\n\"Yes please.\" I said, sliding my credit card and driver's license towards her. \"I'd like a room on the fourth floor, something facing the woods if possible.\"\n\n\"I believe I can arrange that easily enough.\" She smiled.\n\n\"Your rooms are advertised as having great showerheads and big showers, right?\" I asked her.\n\n\"Yes.\" She said with a professional smile. \"All the showerheads are new, and the showers have plenty of room.\"\n\nWithin moments there was paperwork for me to sign, and she was handing me my key cards.\n\n\"Will there be anything else?\" she asked.\n\n\"What time is dinner in the dining room?\" I asked.\n\n\"From five o'clock until nine-thirty.\" She replied. \"The bar stays open until one a.m.\"\n\n\"Thank you.\" I replied. \"Could we get some extra towels? We need to shower before dinner.\"\n\n\"Of course.\" She said. \"I'll have someone meet you upstairs with those as you get off the elevator.\"\n\n\"Perfect.\" I said.\n\nI stepped towards the elevator and caught Daddy's eye.\n\n\"All set?\" he asked.\n\n\"Yep.\" I replied. \"Fourth floor.\"\n\nWe pushed the button for the elevator, and within moments were inside, riding up to the fourth floor.\n\nWhen we got out a housekeeper was there, and when I showed her my key card she offered us a clear plastic bag full of towels.\n\n\"That's some service.\" Daddy said.\n\n\"I asked for extras.\" I told him with a chuckle.\n\n\"How come?\" he asked.\n\n\"Because,\" I said, as I unlocked our door, \"we might need to shower twice.\"\n\n\"Twice?\" he asked.\n\n\"Sure,\" I said, sliding the privacy bolt into place, \"maybe even three times.\"\n\n\"I don't.....\" he started, and I put my fingers on his lips.\n\nI pulled him to me, and ran my fingers through his hair.\n\n\"We're in a city where no one knows me, and hardly anyone knows you.\" I whispered. \"We're in a hotel room, with a king size bed, an extra big shower, and I need to be cleaned really bad.\"\n\nI licked his ear and reached under his shirt to dance my fingers over the small of his back.\n\n\"I'm really fucking dirty Daddy.\" I said.\n\nI pushed against him and felt his cock poke into me. I closed my eyes and pressed harder against him.\n\n\"Come on,\" I whispered, \"let's get started.\"\n\nI went into the shower and turned the water on and returned to the room and picked up my bags and put them in the chair next to the window.\n\nI pulled open the drapes, and noticed it was getting dark outside. The room seemed cheerful and warm by comparison. I pulled open my gym bag, and got out my soap, shampoo, and conditioner.\n\nI turned back towards my father, who was still standing by the door, watching me carefully. His erection was still tenting his shorts.\n\nI turned off the room lights and put my things in the bathroom and then went and stood next to him. I pulled my t-shirt off, and then skinned myself out of my jeans while kicking my shoes off.\n\nI stood in front of him wearing only my bra, and reached for his shirt, pulling it up and over his head and outstretched arms. I grabbed the elastic of his shorts and pulled them down, his cock springing up to point at me.\n\nI bent down and untied his shoes, one at a time, and then held them while he stepped out of them. I pulled his socks off, and then pulled his shorts from around his ankles.\n\nI stood up then and looking into his eyes I reached back and unhooked my bra, letting it drop and land in the pile of our clothes.\n\nWithout breaking eye contact I reached out and took his cock in my hand, lightly wrapping my fingers around it.\n\n\"Come on Daddy.\" I whispered. \"Come wash me.\"\n\nI pulled him with me, using his cock to guide him into the bathroom behind me. I slid open the glass door to the shower stall and paused.\n\n\"I didn't get to go in the yard like you did Daddy.\" I whispered.\n\nI lifted the toilet lid, and in the bright light of the bathroom I sat and spread my legs.\n\nPeeing isn't something that has ever caught my imagination in an erotic way, but I knew that for many men it was a visual thrill to see a woman pee. Besides seeing him pee in the yard earlier had certainly made an impression on me.\n\nHe was staring at me, waiting for me to start.\n\n\"I liked watching you pee before Daddy.\" I told him. \"Do you want to watch me? Or do you want to wait for me in the shower?\"\n\n\"I'll watch if you want me to.\" He said softly. \"But it's not really fair, since you had a much better look in the yard then I'll get here.\"\n\n\"Then let me do it so you can see.\" I said, standing up.\n\nI lifted the toilet seat, and then stood with my feet on either side of it. I relaxed my body, and my stream of piss hissed into the toilet, with my Daddy standing twelve inches away from me staring.\n\nWhen I slowed to a trickle I pushed, and then shook my hips as I emptied out, and used some toilet paper to wipe, before flushing and turning back towards him.\n\n\"Now you really need washed.\" He said.\n\nHe picked me up and turned to the shower, putting me inside the spray of hot water and then joining me. He grabbed my body wash and poured some into his hand.\n\n\"Give me your hands Babygirl.\" He said.\n\nI held my hands out to him and he washed them one at a time.\n\nIt was the most erotic fucking thing that I've ever experienced.\n\nHe lathered up my palm, and then the back of my hand, and then scrubbed each finger between his two hands. After each hand he moved up my arms, washing them thoroughly, before turning my back to him and washing my back.\n\nHe washed each of my ass cheeks, and then my thighs, running his fingers up and down until I was shaking with lust. He lifted each foot and washed it, scrubbing between each toe, and then turned me around and washed my belly carefully with two fingers.\n\nWe were staring into each other's eyes again, as I felt his fingers push lower and work into my pubic hair. I shuddered as they inched closer to my throbbing lips.\n\n\"You're not shaved.\" He said. \"Not even trimmed.\"\n\n\"I usually keep it trimmed.\" I whispered. \"But at the moment my only sex comes from my vibrator, and it doesn't really mind.\"\n\n\"Neither do I.\" Daddy whispered, lowering himself to his knees.\n\nI grabbed the handle of the shower door and the safety bar underneath the showerhead as I suddenly felt his fingers spreading my lips apart.\n\nI felt his breath against my lips, and then his tongue slid along them, sending pulses of exquisite desire all through my body.\n\n\"Oh Daddy,\" I moaned, feeling his tongue probe deeper between my lips, shaking in anticipation of his contact with my clitoris.\n\nAnd suddenly his tongue found it, pushing against it so gently that the first touch was almost painful in its white hot intensity.\n\nMy hips rolled, and he grabbed my ass with both hands and pushed his tongue deeper.\n\nAn abrupt climax burst in me, causing me to bend forward and grunt, and suddenly he stood, pushing me against the cold tile and putting his hot mouth on my nipple.\n\nI wrapped my legs around him and shuddered, as aftershocks of that first tiny orgasm echoed through me, and lustful need of another orgasm gripped me.\n\n\"Oh Daddy.\" I moaned.\n\nUnable to control myself I grabbed the bodywash, lathering my hands up and starting to wash him, and he got soap on his hands and joined me, both of us scrubbing the sweat of carrying boxes off of his skin together.\n\nI washed his balls carefully, feeling him jump as my fingers worked against his sensitive flesh. I washed his cock carefully with one finger, while he soaped my breasts and massaged them until my knees were weak.\n\nHe reached behind me and turned off the water, and as I turned to grab a towel I felt him lift me up.\n\n\"Fuck that.\" He growled, and in a few quick steps we were back in the dark room.\n\nHe threw me on the bed and pounced onto the space next to me, grabbing me with his hands and pulling my breasts back to his mouth.\n\n\"Oh Daddy.\" I whimpered, feeling his tongue flick over my rigid nipples as his fingertips gently ran along the edges of my areolas.\n\nI felt his cock brush against my leg, and even wet from the shower I could feel the slippery precum on my skin.\n\n\"Daddy.\" I hissed. \"Daddy fuck me. Fuck me and make us cum!\"\n\nI spread my legs, and moved up, and I felt his cock against my wet opening, and I closed my eyes as he began to slowly sink in. My lips clung to his wet skin, and I felt them being pushed in until suddenly my arousal bubbled up from inside me and his entire cock became slick with my need.",
        "I put my hands on his shoulders and opened my eyes, and in the dim light in that anonymous hotel room my own father's cock throbbed against my innermost place and I rolled my hips against him, and he pulled away and then pushed in again.\n\n\"I'm close Daddy.\" I whispered.\n\nHe grabbed my arm and felt along it, and our fingers intertwined together as we held hands.\n\nHe was propped up on one elbow, and his cock was buried in me to the hilt, slowly grinding back and forth as we fucked in a slow steady pace, staring into each other's eyes.\n\nEach of us could feel our own pleasure demanding our attention, while we desperately tried to savor what the other must be experiencing.\n\nHe was pulling almost out of me, and then pushing back in, in agonizing slow motion, and my body was shivering with need, my orgasm so close that I decided to give in to it and let it happen so I could think again.\n\n\"Faster Daddy.\" I begged in a soft voice. \"Fuck your Babygirl faster so she can cum around your hard cock.\"\n\n\"Shhh,\" he said, leaning down to kiss my forehead, keeping the steady cock sliding pace he'd been keeping.\n\nI had a sudden picture of a cup being filled, one drip at a time.\n\nEach time he pushed himself into me was one more drip.\n\nEach time he pulled out I moaned.\n\nEach time he pushed in I was one more stroke closer to orgasm.\n\nAnd each time he pulled out my orgasm floated a millimeter further away.\n\nI wrapped my legs around his thighs and squeezed his hand in my own.\n\n\"Feels so fucking good Daddy.\" I told him, staring into his eyes. \"Almost too good.\"\n\nIt was getting hard to breath, as my orgasm inched closer and closer, and I forgot about anything but the steady feeling of heat and pressure in my cunt as his cock massaged me from the inside.\n\nI reached between us with my other hand, and pinched my stiff nipple, and felt something start within me that I'd never felt before.\n\n\"Now Daddy?\" I moaned. \"Now?\"\n\n\"Just let it happen Babygirl. Nice and slow.\" He whispered. \"When it happens it happens.\"\n\nHe squeezed my hand.\n\nHe kissed me softly on the forehead.\n\nHis hips rocked against mine in their slow maddening pace that I never wanted to end.\n\nI closed my eyes and swallowed hard, feeling my stomach begin to tighten up, and I squeezed my thighs against him and dug my heels into the back of his knees.\n\nI opened my eyes, and his face was right there, his eyes staring into mine.\n\n\"Hold me!\" I gasped. \"Hold me while it happens Daddy! Please!\"\n\nHe cock slid through my cunt one more time, and then finally my body could wait no longer for what had become inevitable.\n\nIt started like a tiny ball of pleasure behind my clit, that grew and grew and grew until it reached out, still pulsing behind my clit while reaching out to the rest of my body.\n\nIts electric pleasure touched my nipples, my fingers, my g-spot, my anus, my feet, my arms, my ears, and even my tongue as it became more and more consuming and it built more and more and more and more and more, growing in intensity with each second.\n\nSuddenly he pounded his cock into my cunt and pulled it out, and pounded in again, and again, and then I screamed as an orgasm unlike any climax I'd ever imagined wrenched through me.\n\nI bucked beneath him and grunted, feeling my body thrash against his as my own need and pleasure had their way with me.\n\nIt went on and on and on, until I was absolutely exhausted, and totally still, except for my cunt clasping and throbbing around his cock.\n\n\"So good Daddy.\" I whimpered. \"So good.\"\n\nHe moved his hips, and I flexed myself tight around him, feeling how hard and powerful his cock was inside me.\n\n\"You too Daddy.\" I said into his ear. \"I want you to cum.\"\n\n\"I'm close Babygirl.\" He whispered.\n\n\"I want your cum Daddy.\" I said, rolling my hips under him. \"I want you to pump that sticky cum up into me.\"\n\n\"Can you get on top?\" He asked. \"For a minute?\"\n\n\"Yes Daddy!\" I agreed, pushing at him as he slid off of me.\n\nHe rolled over and I got on top of him, grasping his cock with my fingers and lining it up with my dripping snatch.\n\nI pushed my hips forward, and I felt myself sink down on him, his cock filling me with a feeling of total power and contentment.\n\n\"Is this how you want to cum Daddy?\" I asked him, easing myself up and down on him.\n\n\"Yeah,\" he moaned, \"like this if I can.\"\n\n\"Yes Daddy!\" I called out, beginning to work myself up and down even faster. \"Let yourself cum inside me.\"\n\nHe groaned, and I put my arms on either side of his head and began to fuck my hips up and down, feeling his cock sliding in and out of me.\n\n\"Oh Babygirl.\" He grunted. \"Oh fuck yeah.\"\n\n\"Don't hold back Daddy!\" I told him. \"Pump that load into me!\"\n\nHe fucked up at me again, and I felt his hands grab my hips as if to keep me from getting away.\n\n\"It's gonna!\" he screamed through gritted teeth. \"It's gonna go!\"\n\n\"Do it Daddy!\" I screamed with him. \"Do it now! Fuck me now!\"\n\nAnd suddenly a scalding liquid sensation pulsed into me, as his cum began to pump in great spurts from his cock.\n\nIt was hot and slippery, and I felt every throb and drop as it splattered against my insides. I pushed my hips up and down, staring into my Daddy's eyes as his cock spasmed and throbbed inside me.\n\nI slowed my pace, continuing to push myself up and down his cock, feeling his hands stroke along my body as he gasped for breath.\n\nEventually I felt his cock soften a bit, and I stopped thrusting and sat on him, grinding myself against him as I felt the tickle of his shrinking dick.\n\n\"Did you feel it all Babygirl?\" he asked.\n\n\"Yes Daddy.\" I said with a smile. \"You spilled a lot in me. I loved it.\"\n\n\"Do you like your clit licked afterwards?\" he asked.\n\nMy heart leapt in my chest.\n\nMy Daddy liked playing with cum too!\n\nI slid up his body, leaving a trail of our combined slickness along his belly, and I put my cunt lips on his mouth, grasping the headboard as I felt his tongue push into my sperm filled gash.\n\nHe licked and sucked me slowly, building my arousal by pushing his tongue and lips over every inch of my fucked pussy, until at last he slipped my clitoris into his mouth.\n\nHis tongue flicked back and forth against it while he sucked hard, and I arched my back and screamed at the ceiling, riding his mouth and feeling myself come inside out as two more orgasms rocketed through me.\n\nAt last I fell back on the bed, and he snuggled beside me and softly kissed me.\n\nHis lips were salty with his own cum, and I curled my tongue out to taste my own cunt and his jism in his mouth.\n\nWe kissed for a long time, and then we lay quietly in the dark, holding each other and enjoying the silence.\n\nWith my eyes closed I wondered about just drifting to sleep right here, when I heard his stomach growl.\n\nI giggled.\n\n\"Need more to eat Daddy?\" I asked in the dark.\n\n\"I'm still hungry if you have more for me.\" He said.\n\nI reached over and felt his cock, soft and sticky with our dried cum all over it.\n\n\"Hungry or horny?\" I asked.\n\n\"Both?\" he said. \"Mainly hungry. For the moment anyway.\"\n\n\"Me too.\" I confessed. \"Let's clean up and go downstairs and get something to eat.\"\n\n\"Let's just get dressed.\" He said. \"I'm starved.\"\n\n\"At least let's rinse off first.\" I said. \"We'll run out of laundry if we get into anything clean right now. We're both covered with the smell of pussy and sperm.\"\n\n\"You're probably right.\" He laughed. \"I'd forgotten just how messy sex can be. I wish I'd brought a toothbrush.\"\n\n\"Use mine.\" I told him. \"It's in my bag.\"\n\n\"Are you sure?\" he asked.\n\n\"I just licked your sperm out of your mouth, after you licked it out of my pussy, after you pumped it into my pussy.\" I reminded him. \"I think we can share a toothbrush for the night.\"\n\nI rolled off the bed and grabbed my bag, taking it over by the bathroom to use the light to find my toothbrush.\n\nHe got up and pulled the drapes closed and turned on the light, and I went into the bathroom and started the shower, before putting my toothbrush and toothpaste on the sink.\n\nI got in the shower and started rinsing off, and he came in and stood in front of the toilet. Right before he started to pee I knocked on the glass and rolled my finger at him, and he turned a bit so that I could watch.\n\nI didn't enjoy watching him pee as much as he enjoyed having me watch, but I did enjoy his reaction to having me as an audience.\n\nHe flushed, washed his hands, brushed his teeth, and got into the shower as I was getting out.\n\n\"Take your time.\" I told him. \"I need to get dressed.\"\n\nI hurried into the bedroom, toweling off, and grabbed my bag.\n\nI pulled on my new panties, and shrugged myself into my new bra, but not before dabbing my nipples with the maroon lipstick. With the bra in place I looked in the mirror, and was pleased that I could see my areolas darkened through the yellow fabric.\n\nI pulled on a pair of jeans and my new t-shirt, and stepped into my shoes as the shower turned off. I pulled my sweatshirt over my head, with my back to him, as he came out of the bathroom drying himself.\n\n\"Here are your clothes.\" I told him, pulling them from my bag and laying them on the bed.\n\n\"Thanks for washing them.\" He said. \"I have clean ones at the house but now I won't have to dig them out until tomorrow.\"\n\nHe dressed while I brushed my teeth. When I was done, I stood watching him, and we kept catching each other's eyes while it happened. Finally, he stopped and looked at me.\n\n\"Are you okay?\" He asked. \"With this? With what happened?\"\n\n\"I'm fine Dad.\" I told him. \"You might know more about my body than I do, so I'm enjoying sharing this with you.\"\n\n\"Well I don't want you to think that I'm.....\" he trailed off.\n\n\"I think you're just fine.\" I told him. \"If you want to stop you can say 'stop' at any time. In the meantime, I want to try some things.\"\n\n\"Like what?\" he asked, raising an eyebrow.\n\n\"Just some things that I've always been curious about.\" I said. \"Nothing too kinky or weird. Just things I'd be most comfortable trying with someone who knows what they're doing.\"\n\n\"Keep it a mystery then.\" He said with a grin. \"But that's no way to get me turned on for round two tonight.\"\n\n\"Fuck round two.\" I said, picking up my keys. \"If I were you I'd be most worried about rounds six and seven which are due to happen around four a.m.\"\n\nWe laughed and headed downstairs.\n\nThe restaurant was fairly empty, with a few couples scattered around, and a few single guys sitting at the bar.\n\nWe each ordered a beer while looking over the menu.\n\nBy the time the beer came, we were ready. He ordered a chef salad and a plate of vegetables, and I got a turkey club and potato soup.\n\n\"On a diet?\" I asked him.\n\n\"Going to grill tomorrow night.\" He said. \"As long as my water and power end up on. I plan on having a rare burger with all the fixins, so I've been eating careful for a week.\"\n\n\"That's one way to break in the new house.\" I said with a smile.\n\n\"So when do you have to be back at work?\" he asked.\n\nWe spent the rest of the dinner chatting about my job, and his plans for the house.\n\n\"Your Aunt Becky will probably be down sooner or later.\" He said with a smile. \"I already made her a key and she's looked at the place online.\"\n\n\"I don't even have a key yet.\" I teased him.\n\n\"You're not as overprotective of me as she is.\" He said. \"She's always been that way, and even more so over the past few years. You'd never guess she was a year younger than me.\"\n\n\"She loves you.\" I said. \"And she'll be a big help if you let her.\"\n\n\"I hate to say it.\" He said. \"But I should probably get back out to the house tonight. If the power does come on in the middle of the night the alarm will go off. I'd hate to leave that unattended.\"\n\n\"I'll come with you.\" I said. \"We can have a sleepover and then come back here in the morning for showers and coffee.\"\n\n\"You can just drop me off.\" He said. \"No need to stay the night. I have one battery lantern, but there's no lights, and I've only got the one mattress out. I haven't even found sheets for it yet.\"\n\n\"I have a set of sheets in my bag.\" I said. \"I took them with the laundry this morning and they got washed with everything else.\"\n\n\"That saves me a lot of hassle.\" He said. \"Thank you.\"\n\n\"And I don't mind roughing it.\" I told him with a grin. \"If I get cold in the night you can keep me warm.\"\n\n\"There's no running water either.\" He said quietly. \"You'll be giving up indoor plumbing.\"\n\nI leaned over the table and winked.\n\n\"Maybe Daddy will just have to help me balance out in the dark while I tinkle then.\" I said.\n\n\"I won't argue with you.\" He laughed. \"You're welcome of course. I'd like the company. But I won't think less if you opt for the hotel bed. After all you did pay for it.\"\n\n\"I think I got my money's worth already.\" I said. \"And then some.\"\n\n\"Are we putting a price tag on it?\" he asked with a devilish grin.\n\n\"If we are I need you to know that I'm not done collecting yet.\" I told him. \"Be prepared.\"\n\nOur meal was finished, and as our server cleared our dishes he asked about dessert or coffee.\n\n\"Not for me.\" I said. \"Even though he offered to pay for it.\"\n\n\"I'll get breakfast in the morning.\" He said. \"How's that?\"\n\n\"As long as it includes sausage that's a deal.\" I said with a wink.\n\nThe server paid us no attention, but my dad might have blushed. I handed the server my credit card, and he returned promptly with my copy of the check.\n\n\"Let me run upstairs and grab the sheets and some clothes for the morning.\" I said. \"I'll meet you in the lobby.\"\n\n\"Sounds good.\" He said.\n\nI left him sitting there to finish his beer and I headed for the room, where I collected my candle, a few hotel towels, and my toothbrush and repacked my bag.\n\nI decided that I'd keep the room an extra day. Even if I left tomorrow, I'd probably want to shower before hitting the road.\n\nI had a sudden flash of Marie in the room with me, and my chest felt tight.\n\nI'd never done anything sexual with another woman before, aside from some kissing in college and a few graphic fantasies over the years. But Marie was exactly the kind of woman I could see myself trying something sexual with.\n\nShe was pretty, nice, had a sense of humor, and had seemed more than a little into the idea of me fucking my own father. She'd even mentioned something about her and her mother.\n\nI put the thought aside and headed for the lobby. I stopped at the desk and asked about keeping the room again tomorrow night.\n\n\"We're visiting friends who just moved out here, and we might stay with them tonight.\" I told the overnight desk clerk. \"But we'll probably need the room for sure tomorrow too.\"\n\n\"No problem.\" He said. \"I'll reserve it for you, and if you check out before two that will cancel the reservation with no charge.\"\n\n\"I appreciate that.\" I said. \"Do you have any idea where I could get some matches?\"\n\n\"Would a lighter do?\" he asked. \"We've got several in the desk here that have been left behind by guests.\"\n\n\"That would be great!\" I said. \"Thank you.\"\n\nI pushed the tiny blue lighter in my pocket, and turned to see my dad walking in from the restaurant.\n\n\"Ready?\" I asked.\n\n\"Sure am.\" He said.\n\nWe headed out into the clear and cool night.\n\n\"Full moon almost.\" Dad said.\n\n\"Beats driving in the rain.\" I told him, starting the car.\n\n\"Careful through here.\" He told me. \"Lots of deer moving this time of the year.\"\n\n\"Yes Dad.\" I said, with heavy sarcasm.\n\n\"Okay, okay.\" He said. \"I forget how old you are sometimes.\"\n\n\"I'm old enough for all kinds of things.\" I told him. \"Maybe when we get out to the house I'll show you some of them.\"\n\nIn a few minutes we were on the dark road leading to his house.\n\n\"Not a lot out here.\" I said. \"Just a few minutes from town and you're fairly secluded.\"\n\n\"Good.\" He said. \"No one to overhear you. I was afraid someone would call the cops back in the hotel.\"\n\n\"Any noises I made this afternoon weren't caused by me.\" I said. \"You were solely responsible.\"\n\nI glanced at him in the dark car.\n\n\"Besides,\" I asked, \"doesn't sound carry out in the country like this?\"\n\n\"Let's find out.\" He said, slipping a hand along my thigh.\n\n\"Not while I'm driving.\" I scolded him. \"If you need to touch something get that cock out and touch it.\"\n\n\"You're a voyeur aren't you?\" he asked.\n\n\"I guess I am.\" I said. \"But I've mostly noticed that urge with you.\"\n\n\"It's different isn't it?\" he asked. \"Doing something so new with someone you know so well.\"\n\n\"It is.\" I agreed. \"It's different, but it's also nice.\"\n\nI paused in the dark car, slowing down to look for his mailbox.\n\n\"I wasn't really kidding though.\" I said. \"If you want to take it out I won't mind.\"\n\n\"That kind of talk could make me hard.\" He whispered. \"We're there if you need to see it so bad. We'll just have to find the lantern.\"\n\nI parked and got out, and as we closed the doors I saw a flashlight click on in his hand. He must have brought it with him earlier.\n\nHe started for the house.\n\n\"Hey.\" I said.\n\nHe turned back towards me.\n\n\"Yes?\"\n\nI grinned in the dark.\n\n\"If it's really hard show me.\" I said.\n\n\"Well not totally.\" He said. \"Not at this exact moment out in the yard.\"\n\n\"That's too bad.\" I said, walking past him. \"I've always wanted to play with a hard cock out in the fresh air. And I am feeling voyeuristic at the moment.\"\n\nHe laughed, and then followed me onto the porch and unlocked the door. We went in, and he found the lantern in the kitchen and put it on the living room floor next to the bed. I pulled the sheets out of my bag and spread them on the mattress.\n\nHe opened a box that had been sitting on the couch and dumped out two pillows and some blankets.\n\n\"Cozy\" I smiled.\n\nI took the candle out and lit it, setting it on the floor away from the mattress.\n\n\"A candle. Some moonlight. A mattress.\" I said. \"It's nearly perfect.\"\n\n\"If you'll allow me to step onto the back porch a moment.\" He said.\n\n\"For what?\" I asked. \"Do you have a generator out there?\"\n\n\"No.\" he said. \"I'm going to pee off the back porch.\"\n\n\"Nope.\" I said. \"Front porch. Come here.\"\n\nI picked up the candle and we went out onto the front deck. It went around the whole house, with some built in benches, and a wide railing all the way around, interrupted only by a set of steps on each of the four sides of the house.\n\nI took him to the side of the house overlooking the woods and set the candle on the railing and took his hand and guided him to the edge of the deck.\n\nI had him lean against the railing, and I unzipped his pants and used my fingers to pull his cock out into the night air. I laid it carefully on one of the wooden cross slats making up the railing. Its tip pointed out into the yard.\n\n\"Go ahead.\" I whispered. \"But don't put it away when you're done.\"\n\n\"Okay.\" He said softly.\n\nWe stood that way for a few moments, holding hands in the near total darkness, and listening to breeze through the trees. Suddenly he let out a deep breath and I heard a stream of liquid splatter out into the yard.\n\nIt went on much longer than I thought it would, and then it slowed, and then finally after a few more splashes into the dew wet grass, stopped.\n\nI reached over and placed a finger on it.\n\n\"Not hard.\" I whispered.\n\n\"It's hard to pee with an erection.\" He said softly.\n\n\"I didn't know that.\" I whispered. \"But at least you can do other stuff with 'em when they get hard.\"\n\nI traced my finger along his shaft in the dark, and it felt a bit thicker than it had a moment earlier.\n\n\"It's getting thicker.\" I whispered, pinching it between two fingers.\n\n\"Careful.\" He said. \"I don't want any splinters from the porch.\"\n\n\"Turn around.\" I told him.\n\nHe did, and I stood next to him, looking out into the darkness, and slowly petting his cock with my fingers. Little by little it felt heavier and thicker, until I could definitely tell it was stiffening up.",
        "\"I love the way it feels Daddy.\" I told him.\n\n\"It feels good for me too Babygirl.\" He whispered.\n\nI wrapped my hand around him and stroked slowly back and forth.\n\n\"It feels so hard, but the skin slides back and forth. What does that feel like Daddy?\" I asked him.\n\n\"It feels like a muscle that's tensed up, but it's getting the best massage ever. Almost like your fingers are electric.\" He replied.\n\n\"What feels the best?\" I asked, starting to stroke him a little faster.\n\n\"It depends on what else is happening I guess.\" He said. \"If I'm close to cumming I want it stroked either really fast or really slow. If we're just playing, slower is better, because it lets me feel everything.\"\n\n\"What's the best way to get hard?\" I asked him, squeezing my hand around him and feeling it gently throb.\n\n\"If I'm not hard I like to feel it get hard in a mouth.\" He said. \"Something about feeling it go from soft to hard inside a warm and wet mouth really feels amazing.\"\n\n\"Oh Daddy,\" I said, my stomach clenching, \"I like that too, feeling a soft cock get hard. Knowing that I helped cause it.\"\n\n\"You didn't just help cause this.\" He said as my fingers stroked back and forth. \"You totally caused this. I'm so hard because you are so fucking sexy and beautiful.\"\n\n\"Thank you Daddy.\" I said.\n\nI used my other hand to undo his button, and then I folded his pants down and pulled the elastic waistband of his underwear so I could take his balls out too.\n\nI started tapping the fingers of one hand against his hard shaft and gently cupped his balls in my other hand, enjoying the feeling of his hot skin in the cool night air.\n\n\"What's the best orgasm you ever had Daddy?\" I asked him.\n\n\"Are you sure you want to know this?\" he asked instead of answering.\n\n\"If it's too personal you don't have to answer.\" I said. \"But I really do want to know. I want to know all about this part of you.\"\n\n\"The best?\" he said slowly. \"Not necessarily my favorite, but the best was probably with your mom one night. You were away for the weekend on a school trip, and we had the house to ourselves.\"\n\nI started to roll the skin under his cockhead between my thumb and index finger. He took in a long shuddering breath before continuing.\n\n\"She tied me to the chair in the living room and spent a long time licking, sucking, fucking, and stroking me. It built up so long that I almost fainted when it happened.\"\n\n\"And where did it happen Daddy?\" I asked.\n\n\"Fuck that feels good.\" He said. \"What do you mean where?\"\n\n\"Did you cum while she was fucking you?\" I asked. \"Or in her mouth?\"\n\n\"Are you sure you want to know this?\" he asked again.\n\nI nodded my head up and down in the soft candlelight and rubbed my index finger around the tight skin of his cockhead.\n\n\"In her mouth.\" He said. \"Your mother loved oral sex.\"\n\n\"Must be hereditary.\" I murmured, squeezing his balls and feeling his cock throb.\n\n\"So your favorite orgasm was something different?\" I asked.\n\n\"In college.\" He said. \"The first girl who ever let me cum in her mouth. It was going to be just a handjob and then when I got close she used her mouth to finish me. It's one of my favorite sex memories.\"\n\n\"Is that your favorite way to cum?\" I asked him, putting my lips against his neck.\n\n\"Probably.\" He said. \"Although any orgasm you share with someone feels great. But when a woman lets you go off in her mouth it's really something special.\"\n\n\"You and I haven't done that yet Daddy.\" I whispered, holding my hand still and tight around his cock.\n\n\"It's okay if we don't.\" He said, wrapping his arms around me. \"It's not something that every woman enjoys.\"\n\nI pressed my body against his and hugged him, feeling his cock against my belly.\n\n\"But Daddy,\" I whispered, \"I love it too. I want to feel you throb in my mouth while you cum. I want to taste and swallow you. I want that so much.\"\n\nHe squeezed me tighter, and we stood like that for several minutes in the cool summer night air, his cock poking out as we held each other, on the deck of his new house out in the middle of nowhere.\n\nAfter a while I moved my lips against his ear and whispered.\n\n\"Daddy?\"\n\n\"Yes Babygirl?\" he answered.\n\n\"When we go in the house,\" I asked, \"if I suck your cock will you let it cum in my mouth?\"\n\nHe kissed me then, in the flickering candlelight, picking me up off of my feet while he did it, letting our tongues touch and our lips nibble at each other for a long time.\n\nEventually he put me down and I took his hand and pulled him towards the front door, picking up the candle on the way. He was walking slow, and I giggled when I realized that it was because his cock and balls were hanging out over the top of his underwear.\n\nWhen we reached the front door I stopped and tucked them back inside for him, and buttoned up his jeans.\n\n\"No sense in letting you injure yourself before I get what I want.\" I told him, taking his hand again and dragging him through the front door.\n\n\"Letting me?\" he asked with a chuckle. \"I didn't take them out. You did.\"\n\nI stood on tiptoes and kissed him on the nose.\n\n\"Only because I like being near them so much.\" I said.\n\nI turned towards the living room and he swatted me on the ass lightly.\n\n\"Remember what I told you last night about a spanking.\" I said over my shoulder.\n\n\"There's only one bed made up.\" He said. \"I don't think you'll have to sleep alone tonight.\"\n\nI sat down on the couch and set the candle on the coffee table.\n\nHe flicked on his flashlight.\n\n\"I'm going to go upstairs and see if I can find the curtains for this room at least.\" He said.\n\n\"Why?\" I asked.\n\n\"So no one can see in.\" he said.\n\n\"There's no one around.\" I said. \"I wouldn't worry about it.\"\n\nHe turned towards the stairs, and as soon as he was out of sight I kicked off my shoes and peeled off my socks, jeans, and sweatshirt. I turned on the little battery powered lantern he'd brought.\n\nIt put out a small bright white beam of light, and I set it on its side and let it shine on the ceiling, so it bathed the whole room in its soft light.\n\nI got down on the mattress, propped against the pillows, stretched out, wearing only my t-shirt that said 'DADDY'S BABYGIRL' and the yellow panties that said 'DADDY'S LITTLE GIRL NEEDS SPERM'.\n\nBefore long I heard him coming back down the stairs.\n\n\"I couldn't find the curtains, so we'll just have to.......\" He stopped, mid-sentence, staring.\n\n\"Doesn't matter.\" I said. \"We can turn off the lantern to save batteries and entertain ourselves by moonlight.\"\n\nHe stepped closer, reading my shirt. The letters were shiny in the reflected lantern light.\n\n\"Come to bed Daddy.\" I whispered.\n\nI sat up and took the shirt off, putting it aside and facing him, leaning back on my elbows, arching my breasts towards him.\n\nI knew in the pale light bouncing off the ceiling he could see my darkened nipples through the yellow bra. I noticed his eyes transfixed on my panties, and I spread my legs a bit so he could read easier.\n\n\"I know I already had some sperm Daddy,\" I said, twirling one of my fingers in my hair, \"but if you have more I really want to taste it.\"\n\nIn a blur he was kicking his shoes off, his worry over curtains forgotten. He shed his pants and underwear, and he pulled his shirt and sweatshirt off over his head and flung them towards the couch.\n\nI reached over and hit the 'off' switch on the lantern and he practically dove onto the mattress.\n\nI'd noticed that his cock had gone limp since our play on the porch, and before he could react I jumped forward and took it in my mouth, sealing my lips around the base and sucking while pushing my tongue against the soft head.\n\nHe moaned and sank back on the bed, and I immediately tasted a drop of precum from his earlier arousal.\n\nI sucked harder, and started to gently drag my fingers over his ballsack.\n\nHe pulsed in my mouth, becoming steadily thicker and longer, as I pushed saliva into my mouth and sucked. I felt him grow along my tongue, and I felt the head of his cock slide further into my mouth.\n\nI swallowed, and he groaned as my mouth flexed around him. Suddenly I was aware that he wasn't just thicker and longer, but was firmly stiff, pushing against my tongue and the roof of my mouth.\n\nI felt the head touch my throat, and with my mouth open as wide as possible I sucked again, cupping his balls and moaning around him.\n\nI moved my mouth away, a string of spit trailing from my lower lip to his cockhead, looking surreal in the candlelight. I wrapped my fingers around his wet cock, and kissed the head, before moving up his body to kiss his lips.\n\nHe took my face in his hands and kissed me, and I awkwardly stroked his cock from that angle, hardly able to reach.\n\nHe slid his fingers against the clasp of my bra, and I reached behind me and undid it, feeling him cup my breasts in his hands, my sensitive nipples against his palms.\n\n\"Just lay back Daddy.\" I said. \"Close your eyes and let your Babygirl suck your cock and taste your hot cum.\"\n\nI moved down his body, feeling the crotch of my new panties become wet with my own arousal. I hoped he wouldn't end up so spent that he couldn't help me cum.\n\nBut I didn't really care about that. I had enjoyed everything else with him so much that I knew I'd even enjoy fingering myself to orgasm while he held me.\n\nI took his cock back in my mouth and sucked, feeling it spasm against my tongue. I put my legs under me and bent over, taking his balls in one hand and using the other to stroke the base of his cock.\n\n\"Oh Babygirl!\" he moaned. \"Oh fuck yes.\"\n\n\"Does it feel good Daddy?\" I asked, lifting my mouth of him for just a few seconds.\n\n\"It fucking does.\" He said. \"It's been too long since I've felt this. I don't think I can last much longer.\"\n\nI wanted to take my time and enjoy this, but I also knew that if he was able to come again so quick after already erupting once this afternoon that I should take it as a compliment.\n\n\"Take your time Daddy,\" I murmured with his cock against my lips, \"but when you need to cum don't hold back. I want it all.\"\n\nHis hips bucked below me, and I felt his balls begin to pull against my fingers.\n\nHe really was close to the edge.\n\nI tasted a steady flow of precum leaking form his cockhead and knew that he would be past the point of control soon. I sucked harder, holding his balls tight with one hand and tickling them with the other.\n\nI lifted my mouth from his cock again, stroking his slippery shaft with my hand.\n\n\"Daddy, how much are you going to cum for your Babygirl?\" I asked him.\n\n\"A lot I think.\" He grunted. \"You turn me on more than I can believe.\"\n\n\"Good.\" I said. \"Your daughter wants your sticky mess in her mouth Daddy!\"\n\nI put my mouth back on his cock and started sucking, timing my strokes on his shaft with my tongue beating against his cockhead, and feeling his balls start to spasm in my fingers.\n\n\"It's gonna.....!\" he moaned. \"I can't hold much......!\"\n\nI looked up at him and saw him looking at me, his head up off the mattress so he could watch what I was doing. The candle was behind him, so I could just barely make out his eyes, but I knew he could see me in the candlelight.\n\nI took the cock from my mouth and used my hand to slap it against my lips.\n\n\"DO IT DADDY!\" I said loudly. \"Give me your fucking hot load!\"\n\nI put his cock in my mouth and felt it jump, and I sucked as his hips bucked and my mouth was suddenly filled with hot salty sperm.\n\nI was going to hold it all in my mouth, but there was so much I couldn't.\n\nI swallowed the first big spurt, and his cock was spasming in rhythm with his jumping balls.\n\nI looked up again, and he was still staring, looking me in the eyes while his cock throbbed its orgasm into my sucking mouth.\n\nHe started groaning, and I jerked him steadily against my tongue as he pumped wad after wad of liquid heat into my mouth.\n\nI clamped my lips around the head of his cock, feeling him pump spurt after spurt after spurt as I flicked my tongue against him.\n\nI held the rest of his load in my mouth, sucking him until long after he stopped throbbing, and using my fingers to gently touch and rub his shaft and balls.\n\nEventually he began to soften, breathing hard as I kept gently sucking. I held him in one hand, keeping his cock pointed up, and I pulled my mouth off of him, sucking hard as I went and closing it tight as he came out past my lips.\n\nI looked up at him again, and he was still looking at me. I climbed up closer to him, and carefully parted my lips, so he could see all his tasty cum in my mouth.\n\n\"Holy fuck.\" He said.\n\nI smiled at him, a wide opened mouthed smile, his cum covering my teeth, tongue, and lips. I moved my tongue back and forth so he could see how much there was.\n\nHe put his hands on my face again, and I knew he was going to pull me down for a kiss, so I greedily closed my mouth and made a show of swallowing all of his cum in one big gulp.\n\nI swallowed again, tasting his musky aftertaste in my mouth, and then opened my mouth wide and showed him that it was all gone.\n\n\"Thank you Daddy.\" I whispered. \"I love the taste of your fucking hot cum.\"\n\nHe growled in mock frustration and grabbed me, pulling me down on top of him and then rolling over so he was over me. He stood and picked me up and then the room spun and I thought we were falling.\n\nBut we weren't.\n\nHe'd turned around while holding me and pulled me down with him as he sat. I found myself face down on the couch over his knees.\n\nI felt his hand smack my ass, half making skin contact and the other half landing on my panties, which he could now see said 'PROPERTY OF DADDY' on the back.\n\nSMACK!\n\nSMACK!\n\nSMACK!\n\nI squirmed underneath him, feeling my cunt flood with desire, not just from the spanking, but from the knowledge that my own father was spanking me for being a greedy cum-whore.\n\n\"That was naughty.\" He whispered in my ear.\n\n\"I couldn't help it Daddy.\" I whimpered, not having to act at all to put a quiver into my voice.\n\nSMACK!\n\n\"You were still greedy.\" He whispered. \"If you do that again I'll spank you even harder next time.\"\n\nSMACK!\n\n\"Oh fuck yes.\" I moaned, my body shaking. \"Do you fucking promise to spank me even harder next time Daddy?\"\n\nI felt his fingers on the back of my knee, and then they trailed up my thigh and nestled between my legs. They stopped moving as they encountered the sopping wet fabric of my panties.\n\n\"You're fucking soaked.\" He groaned.\n\n\"From you Daddy.\" I whimpered.\n\nHe pushed me off him and then pulled me to my feet, taking my hand and dragging me through the living room and into the kitchen. The moonlight was bright back here, pouring across the deck and into the kitchen windows.\n\nHe pushed me against the counter island in the center of the kitchen.\n\n\"Bend over.\" He told me.\n\nI did, reaching forward and grabbing the far side with my hands.\n\nI heard a chair scrape, and realized he was dragging one over from the table. I felt one of his hands on my thigh and the other on the small of my back, and then with a shiver I realized what he was about to do.\n\nHe grabbed the panties and pulled them roughly down over my legs, pulling them out from under my feet and putting them on the counter next to my face.\n\nI sensed him sit in the kitchen chair at the exact moment I felt his tongue push against my cunt lips.\n\n\"Ohhhhh, ohhhhhhhfuuuuuuuuuck!\" I moaned, lifting my ass and grabbing the counter tighter.\n\nHis tongue pushed up and down my lips, licking, probing, tasting, and I felt my cunt tighten with the inevitable throb of pleasure to be released.\n\nHis fingers parted me, and his tongue pushed further into my hole, and I felt my arousal cover his mouth and chin with my nectar.\n\n\"OHFUCKDADDYTHATSOFUCKINGFUCK!\" My voice screamed through the dark house, and I tried to push back against his face and I felt his fingers push even deeper into my hole.\n\nAnd then three things happened.\n\nThe first one was that I felt a slippery finger push against my virgin anus.\n\nHe'd rubbed it last night, but no one had ever touched it sexually before that. I hadn't thought I'd like anal play until last night.\n\nAnd now I needed his touch on my anus.\n\nThat was the second thing. His finger pushed in and up, causing me to lift my hips another fraction of an inch.\n\nThe third thing happened simultaneously to his finger penetrating my back hole.\n\nHis lips kissed and nibbled and parted my cunt open a bit further and he slid his face down, and suddenly his tongue was covering my clit and sliding back and forth.\n\n\"Daddy,\" I whimpered, \"you're going to make me cum.\"\n\nHe sucked harder and I felt the finger in my ass twist, causing a pulse of pain against my anus that felt so deliciously nasty that I might have cum from that feeling alone, even if he hadn't been pulling on my clit with his mouth.\n\n\"I'm close!\" I shrieked into the darkness. \"Daddy! I'm.....I'm.....I'm......!\"\n\nAnd then I opened my eyes wide and grabbed the countertop, my body twisting and clenching.\n\nMy mouth opened and I literally roared against the imitation marble.\n\nMy hips rolled and an orgasm so intense that it almost hurt started tearing through my body.\n\nEvery muscle I had flexed and my limbs tingled, and I felt a great vibration in my cunt lips and a surge of tingling explosions ran from my clit out to my breasts and thighs.\n\nMy heart thudded, and for three heartbeats I felt a wetness pulse from me, dripping down over my thighs and feet, and then Daddy bit my clit gently and I screamed and wrenched my eyes shut as sensitive and stiff little nub exploded again.\n\nAnd again.\n\nAnd yet again.\n\nI felt like I was dreaming as I lay there, slumped over the island, my heart pounding, my body quaking, and my legs quivering.\n\nI felt my father take my shoulders, and pull me up, and I leaned my weight against him as I followed him on rubbery legs to the mattress.\n\nHe lowered me in slow motion, and I smelled the burning smell of wick smoke as he blew out the candle, and then he was next to me, and I cuddled up to him as I felt him pull a blanket over us.\n\n\"Are you okay?\" he asked softly, a long while after my heart had stopped thudding.\n\n\"I've never felt like that before.\" I whispered, without opening my eyes. \"I didn't know I could feel like that.\"\n\nHe feathered a kiss onto my forehead.\n\n\"You made a mess.\" He said softly. \"I think you squirted a little bit.\"\n\n\"Oh wow.\" I said, unsure what exactly I'd just experienced.\n\n\"Don't worry.\" He said softly, as if from far away. \"We'll get cleaned up in the morning.\"\n\nAs exhausted as I was, I reached over and felt for his cock, feeling it soft and sticky between his legs.\n\n\"Oh sweet Babygirl I'm too tired.\" He said with a chuckle. \"You've worn me out.\"\n\nI squeezed him and kept my hand on his cock.\n\n\"Daddy?\" I asked in the dark room.\n\n\"Yes?\"\n\n\"If you get hard in the night you can do whatever you want with it.\" I said.\n\n\"I always wake up hard in the night.\" He replied quietly.\n\n\"Whatever you want.\" I repeated. \"Cum on me while I sleep. Fuck me. Wake me up and make me suck it. Make me stroke it off so it shoots cum all over me.\"\n\nHe kissed my forehead again.\n\n\"Anything.\" I said. \"Anything you want or need.\"\n\nAnd I felt sleep wrap around me, laying there against my father with my hand holding his sticky limp cock.\n\n~~\n\nIn the dark gray light of pre-dawn I woke up moaning, and felt him between my legs licking my cunt and rubbing my clit with his fingers.\n\nHe'd been doing it for a while apparently, because less than thirty seconds after waking up I screamed and wrapped my thighs around his head as two quick orgasms, one right after the other, washed over me.\n\nI closed my exhausted eyes again, barely noticing what looked like a shadow outside the window on the porch.\n\n~~\n\nThe next time I woke up, the dark gray light had turned lighter, indicating that the sun would be up within the hour.",
        "I felt his mouth on me again, gently arousing me as his fingers rolled my nipple and my hips rocked against the mattress.\n\nAnd then he was in me again, fucking me slow and steady as I moaned against his neck and pushed up against his body, feeling another easy orgasm begin in my belly.\n\n\"Daddy I'm going to cum already.\" I whispered.\n\n\"Do it!\" he groaned. \"Cum for your Daddy!\"\n\nHe started fucking me faster as I felt the familiar spasms start deep in my cunt, and I held on as a long and pleasurable climax shook my body beneath his.\n\nI rolled him over in the room, watching him below me in the pre-sunrise light seeping through the curtain-less windows.\n\nI lowered my wet pussy onto his hard cock, determined to ride him to his edge and then suck another load of cum from his cock.\n\nI started rocking my hips up and down, and felt his hands grip my thighs as he groaned again.\n\nI raised my head as I felt my cunt spasm, and found myself looking at my Aunt Becky.\n\nShe stood in the room, two feet from the mattress staring at us.\n\nI stopped moving and gasped.\n\nMy dad lifted his head.\n\n\"Well I can't wait to hear this fucking story.\" She said with a grin.\n\n~~~\n\nThanks for reading this all the way to the end.\n\nIf you've read this far, thanks for indulging my long buildup to any actual sex in this chapter.\n\nI am so beyond thankful for all of your kind words on this series so far.\n\nI appreciate you all more than you can know!\n\nIsabellaemily"
    ],
    "authorname": "IsabellaEmily",
    "tags": [
        "flirting",
        "cock sucking",
        "cum swallowing",
        "cunnilingus",
        "anal teasing",
        "oral sex",
        "father",
        "daughter",
        "family"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sharing-a-bed-with-daddy-pt-04"
}