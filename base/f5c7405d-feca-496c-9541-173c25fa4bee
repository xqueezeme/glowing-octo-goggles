{
    "title": "The Change Pt. 05",
    "pages": [
        "It was now the middle of the week off Jerry and Lita were taking. Aside from the sex-charged activities that had been going on throughout the week, Jerry was looking forward to Wednesday night for a different reason: the culmination of the World Series. Cubs vs Indians. Who would have thought? Jerry was an Indians fan, and seeing the team get this far has been amazing. Lita didn't necessarily have a \"team\" she rooted for, but she wasn't against watching a good game. Jerry had insisted that they try and hold off on sex for the evening, as they had missed a couple games earlier in the week, and Jerry knew that regardless of the result, this would be an historic game. \n\nJerry and Lita awoke to their new morning ritual: taking care of pitched tents in bed. Lita used to give Jerry a hard time about his morning erections, but now that she was getting them too, it became something they could deal with together. Lita started by taking a cock in each hand and began stroking them. Jerry laid back to let his wife work, and Lita stopped and said, \"Oh no, you don't get to just sit back while I do all the work!\" \n\nLita stopped stroking, and jumped up to straddle Jerry. Lita's cock dropped a little, held solid by her erection, but bowing under its weight. As it rocked there, it rubbed lightly against Jerry's cock, which was equally hard. Lita inched forward to kiss her husband. As their lips and tongue met, Lita's cock rested against Jerry's stomach and chest, pulsing as her blood throbbed through it. \n\nAs they broke from their embrace, Lita's eyes widened as she got a sly expression on her face. \"Let's try something new today...\" she said as she reached down between Jerry's legs. Lita slid her hand down the hard length of Jerry's cock, caressed his balls, and then slid past them to poke her middle finger into the center of Jerry's asshole. \"How about I do you?\" Lita's cock have a hard buck as the thought of penetrating her husband aroused her further. \n\nJerry went white. His whole ass clenched, and he recoiled as if hit by an electric jolt. His whole expression dropped to one of fear and embarrassment. \"I... don't know how I feel... about that...\" he stammered. \n\nJerry saw the look of hurt in Lita's eyes. It was only for a flash, before it turned to irritation. \"I've shoved my cock balls-deep down your throat, and taking it in the ass is where you draw the line?\" Lita's irritation was starting to flow into anger, \"So, what is it, is it an emasculating thing? Are you worried you won't be 'The Man' in the relationship?\" Lita was on the verge of tears. \n\n\"Whoa, honey... it's not like that.\" Jerry began as he tried to rectify the rift his involuntary action had caused. \"I figured that this would come up eventually, but I don't think I'm ready.\" Jerry fumbled with words for a couple seconds, \"I just, in the past, I've, experimented. I don't really find... THAT... to feel good.\" Jerry started to get his composure back, \"Plus, I think I've handled this... change... pretty well, all things considered.\"\n\nLita had a few tears streaming down her face as her anger subsided into frustration, and eventually into a pouting resolve. \"I get that it may be something you've tried, but you haven't tried it with ME. Maybe it would be... different.\"\n\nJerry motioned Lita over to him where he wrapped her in a strong hug. \"You're right honey.\" he reassured her. \"Maybe we can discuss it again later this week.\" Jerry became lost in thought for a moment, becoming aware of how the thought of Lita's cock invoked both a sense of concern when thinking about his ass, and made his mouth water when thinking about sucking it. Maybe it wouldn't hurt or feel bad. Maybe they should give it a try. But now is a bad time... emotions are way too charged. \"Let's just try and relax today. I can make lunch, and we can go out and be in public for a bit.\"\n\nThe thought struck Lita that the two of them hadn't gone out to do anything in public since her clit started growing. Although much of their time had been spent sweaty and naked shooting cum back and forth, perhaps learning to deal with a cock in public would be its own sort of experience. \"Okay... but you're taking me shopping for books. I deserve books for this.\" Lita responded, her gaze shooting down to Jerry's hips. \n\nJerry laughed. Lita always wanted more books. She always got books, but never got around to reading them. \"We can go to the bookstore. Just find something to wear.\"\n\nLita gave a small smile, and hopped up to grab some clothes. Lita soon discovered something: although not skintight, every pair of Lita's jeans were just tight enough that her cock left an obvious bulge running down her left leg. After digging for a bit, Lita found an old skirt that could work. It was a skirt that Jerry liked to see Lita in, but Lita very rarely would wear such garments. \n\nLita stood topless in the room as she modeled the skirt for Jerry. Lita gave a little twirl to make the skirt spin. Lita's beautiful breasts heavily swayed with her as she twirled. \"I like it.\" Was Lita's reply, \" and it doesn't show off my dick.\" She smiled at the thought of walking around in public as she smuggled nearly 9 inches of meat between her legs, unbeknownst to everyone but her and Jerry. \n\n\"Then wear it honey.\" Jerry replied. As Jerry said this, Lita's eyes lit up a little, and she touched at her groin. Almost as soon as Lita touched her groin, she felt the blood begin to pump into her cock. This Lita's dismay, as her cock grew again to its erect glory, it caught the fabric of the dress, and very clearly exposed there was something sticking outward from Lita's hips. \n\n\"Well, this could get awkward...\" Lita blushed, \"so what do we do to calm her down if she pops up in public?\" Lita took a couple pokes at her dick through the skirt, and it shifted and rebounded back to its position of attention. \n\n\"Wait, it's a she now?\" Jerry responded. \n\n\"Of course!\" Lita said, matter-of-factly. \"I'm a girl, and she's cuter and sweeter than other dicks.\" Lita wiggled her hips to make her cock swing back and forth, and her breasts did the same. \n\nAt this point, Jerry was also throbbing hard watching all the tasty parts of his wife jiggle around. \"Well, let's see if we can find a way to make it stay down while we're out and about.\" Jerry rolled out of bed, and went to the closet. After rummaging for a minute, Jerry steps out with a roll of wide pink gift ribbon, and holds it up triumphantly for his wife. \n\n\"Do you really think we can just tie it down? It's not a trailer.\" Lita jested. \n\nJerry smiled and said, \"Yeah, but it does carry a big load.\" Lita giggled at the pun. \n\nJerry cut a long stretch of the ribbon, and got down on his knees in front of his wife. He handed her a part of the skirt to hold on to to keep it up out of his way. As Lita pulled the skirt up, her beautiful cock became exposed, throbbing in arousal as it pulsed in front of Jerry's face. Jerry leaned forward to wrap the ribbon around the back of Lita's thigh, and noticed the little blob of precum resting on the tip of Lita's cock. As he strung the ribbon around and pulled back away, Jerry turned his head in to run his lips along the length of Lita's cock, and then opened his mouth to suck the precum off of the tip of her dick. Jerry tasted a little extra precum squirt into his mouth when Lita tensed unexpectedly from the action. \n\n\"I thought the goal was to get her down, not keep her up!\" Lita said amused. As much as Lita wanted to be mad at Jerry for their disagreement earlier, she found her whole current situation incredibly arousing. The skirt she had on was conservative enough, but always made her feel naughty, typically because she didn't wear underwear whenever she wore it. In Lita's current predicament, seeing her throbbing cock refusing to cooperate with the skirt made her hornier still, and Jerry's mouth cleaning off the tip of her cock made her yearn further for a warm, wet hole to stick it in and unload. \n\nJerry sucked on the head of Lita's cock another couple of seconds, and released with a pop from his suction. \"You were getting ready to drip, and I didn't want you to make a mess on your leg.\" Jerry pushed down on Lita's cock to redirect it before securing it to her leg. Lita hunched over slightly as the erection would not bend 90 degrees without some resistance. Jerry wrapped the ribbon around twice to ensure Lita's cock stayed in place. \n\nAfter Jerry finished, Lita slowly straightened back up and tested if the tie-down would hold. The ribbon strained and tightened as Lita's cock struggled against the bonds, but it seemed to be holding. \"We should go while this is still holding.\" Lita advised. \n\n\"I was a Boy Scout, and I remember my knots pretty well. I don't think it's going anywhere.\" Jerry retorted. \n\n\"You don't think SHE is going anywhere.\" Lita corrected. \n\nThe trip to the book store was uneventful, but after arriving, Lita was discovering something else had changed: she wasn't just more aroused with Jerry, she was more aroused by just about everyone, as if her senses to pheromones were heightened. Lita looked around the store hungrily, taking in all of the attractive bodies. Lita imagined how well hung all the guys may be, and wondered if she was bigger, and she undressed the women with her eyes, and imagined pumping loads of cum into their aching pussies. Lita's cock was rock hard again. \n\nLita, holding hands with Jerry, squeezed down tight on Jerry's hand, signaling to him her concern. \"I've never felt like this before. I just want to put it in everyone.\" Lita whispered to Jerry. She drew in breath nervously as she continued to survey the store. \n\nJerry laughed. \"You sound like a horny teenage boy.\" He whispered back. \"You'll be fine. I'm right here if you need something.\"\n\nLita knew it was true. What she was feeling was hormones in a balance she had been able to freely act on at home, but now had to show some restraint. Her cock throbbed against her leg in its pink lacy prison as it began to ooze a small blurb of precum out. \"We just need to look at books. You still owe me books from this morning.\" Lita reminded, more to her mind off of the people around her than to actually remind Jerry of anything. \n\nJerry, catching on to Lita's predicament, went along, \"Lets take a look at the graphic novels.\"\n\n\"Oh, you mean the big-kid comic books?\" Lita teased. \n\n\"Sure. Because kids can fully appreciate the dramatic flair some of these new comics have.\" Jerry teased back. \n\nThe couple laughed, and went over to the graphic novel section. When they got there, they noticed a woman looking intently at the shelves down the aisle, who would adjust some of the books on the shelf. She was a petite woman with long fiery red hair that flowed down her back, and a very curvaceous figure. Lita saw her when they got to the aisle, and attempted not to gawk. This woman looked so attractive to Lita at this moment in time that Lita could feel it in her balls how badly she wanted to ravage this woman. Lita's cock tugged at her bindings again. \n\nUnfortunately for Lita, the redhead was good at her job and spied that Lita was repeatedly looking her direction. The woman shelved one last book, and began walking over to Jerry and Lita. When the woman made it over, she addressed the couple and said, \"Is there anything I can help you two find today?\"\n\nLita found herself at a loss for words. Now that the woman was closer, she could see the flawless features on this woman. Her soft lips in a half smile, mostly to be professional, her hair gently sweeping against her back. Her chest, not too large, but more than a handful, and her ass: perfectly round in skintight black leggings, not too huge, but just right. Lita opened her mouth to speak to the woman, but no noise cam from her mouth. Lita could feel her cock throb and pulse against her leg harder and harder as she stared at the woman. \n\nJerry, observing the transaction, or lack there of, stepped in to fill the void, \"We were looking for the latest Batman comic that came out this month.\"\n\n\"Oh. That should be over here in the new releases section.\" the woman replied. The woman walked in close by the couple, and stopped in close by Lita. She gave a sniff at the air, and looked at Lita, \"That smells amazing! What kind of perfume are you wearing?\"\n\nLita looked taken aback for a moment, processing what she was just asked. Perfume? I don't wear perfume. At least not to the book store. Lita stammered out quietly, \"I'm not wearing any...\"\n\nThe woman seemed surprised by this answer. In denial, the woman leaned in close to Lita's neck, closed her eyes, and inhaled deeply. The woman was now so close to Lita that Lita could feel her body heat radiating. As the woman exhaled, she opened her eyes, to reveal her bright-blue eyes incredibly dilated. \"It must be your soap then. It's very... nice.\" the woman concluded. She turned her back to Jerry and Lita, and bent over to look in the shelves. \"Lets see... new Batman...\" as the woman bent down at the hip, Jerry and Lita were treated to a near-skintight show of the redhead's perfectly round ass and wide hips. \n\nLita finally hit her threshold. With a small yelp of pain, and a quick ripping sound, Lita very quickly embraced Jerry by the side, fully pressing the front of her body against Jerry. Jerry seemed concerned with the noises that were made, but understood almost immediately with his wife pressed firmly against him: the ribbon had torn, and Lita's cock had sprung forth from its trap. \n\nThe woman searching for the book for the couple looked behind her and asked, \"Is everything okay?\"\n\nJerry made up a story on the spot. Jerry explained that Lita and himself had just been to the gym, and that Lita had overdone some of the leg exercises, leaving her in some pain. \"You wouldn't happen to have a place I could sit her down in private, would you?\" Jerry asked of the woman. \n\nThe woman thought for a minute. \"We have a manager office in back, and the manager has already left for the day. I suppose you wouldn't be bothered back there.\" The woman guided the couple to the office as Lita clung to Jerry's side. Once they got back to the office, the woman said, \"Take as much time as you need, I will come back and check on you in a few minutes.\" And with that, the woman stepped away. \n\nOnce Jerry and Lita were alone, Lita dropped the whole \"in-pain\" act and pulled up her skirt. Sure enough, the pink ribbon holding her cock against her leg was still partially wrapped around Lita's cock, but had torn in two where it was wrapping around her leg, effectively tearing the strip of ribbon in half. \n\n\"Well, what do we do now?\" asked Lita as her cock continued throb. \n\n\"Do you think we can try to just calm it down?\" Jerry suggested. \n\n\"We've gone hours at a time without me losing my erection at home, how is taking care of it here going to help?\" Lita seemed confused. \n\n\"Well, I know my loads are bigger and more satisfying if I draw them out a bit.\" Jerry stated. You've been drawing this out since we made it into the store.\" Jerry thought a moment again, \"Maybe if I draw it out of you slowly, you'll unload enough to calm it down until we get home, or at least to the car.\"\n\n\"What if that lady walks in on us?\" Lita asked, concerned. \n\nJerry looked around the small room. There were a couple file cabinets, and a large desk with a computer on it. Jerry snapped his fingers, \"Under the desk! You just sit at the desk, say you're stretching you legs, and I'll be underneath... stretching your... leg...\" Jerry smiled as he made the euphemism. \n\nLita gave a smile. As horny as she was, she was ready for anything that might help her feel some release. Lita sat at the desk as Jerry crawled underneath it. Lita scooted the chair forward, and Jerry rolled up her dress, exposing her immensely hard cock throbbing in his face. There was a dry trail where her precum had leaked and run down Lita's leg for some time, and the tip of Lita's cock was wet and oozing with more precum. \n\nJerry took the tip of Lita's cock into his mouth, and licked it clean of precum. After swallowing a few oozing pumps of it, Jerry took the cock as far down his throat as he could. Lita let out an audible gasp at the feeling of her cock being redirected down Jerry's throat. \n\n\"Jerry, if you keep deep-throating me like that, I'm gonna cum too soon.\" Lita said between lustful gasps. Jerry knew she was right. In order for this to work, he would have to bring her to the edge, and then stop. \n\nJerry pulled the cock out of his mouth long enough to speak, \"It's so good, I don't know if I can stop.\" Jerry reinserted the dick into his mouth and continued sucking. Lita let out little moans and she continued to feed precum to her husband. \n\nLita's breathing began to pick up as she started grabbing at her breasts through her shirt. \"I'm getting close...\"\n\nWith that, Jerry took the cock out of his mouth and stopped doing anything sexual to Lita's cock. It throbbed and pulsed as it waited to re-enter Jerry's warm chasm of a mouth. \n\nLita let out an almost pained sounding, lust filled moan. \"I was almost there...\" As Lita was saying this, she heard a sound of rustling, and a zipper unzip. She then felt something firm bump up against her cock. Lita shifted in her seat and asked, \"What are you doing down there?\" As she said it, she felt a little pressure from the firmness against her cock, followed my the warmth of Jerry licking at the tip. \n\nLita looked down to see that Jerry had whipped his own cock out, and had it resting against Lita's cock. Jerry was going back and forth, spending a half-second licking Lita's cock, and a couple seconds sucking his own cock before returning to licking Lita's. \"I had to find a way to slow down before I sucked you empty.\" Said Jerry. \"So I got my own out to fill the downtime.\"\n\nLita found this to be cute. The way her husband sucked at the shafts that fed him so much cum. Her balls were aching too, ready to fill him completely full. \n\nThe edging process went on for another 10 minutes or so, until there was suddenly a knock at the door that startled Lita. Lita looked on in concern as the busty, curvy redhead cautiously entered the room. At this point in the edging, Lita was in such a mix of ecstasy and agony that she looked as if she was about to pass out, and spoke with gasps and moans. Lita's long hair was a tangled mess from tossing her head about and grabbing it in her lust. \n\n\"Ma'am, are you all right? Where is your husband?\" the redhead asked, concern on her face. \n\n\"He's... cumming... to help... shortly...\" Lita mustered out between grunts. As the redhead walked closer, Lita was able to lock her gaze onto the redhead's voluptuous body again. Lita's eyes dialated in lust. \n\nJerry for his part, was hard at work juggling between the two enormous cocks in his face. Alternating between soft, delicate sucks against Lita's cock, trying to keep her edged without pushing her over, and hard powerful sucks against his own cock to counter the soft ones. Lita was producing an almost constant stream of precum that Jerry was working his best to keep from spilling onto the floor. As the redhead approached the desk, unaware of Jerry's presence, he noticed something happen: Lita's precum had changed from thin and sticky to thick and creamy. Lita was so close to cumming that the mere presence of the redhead pushed her over the edge. But it was not spasming spurts, it was a constant slow flow of cum pumping out of her cock. Upon realizing what he was sucking out of his wife's cock, Jerry began to start cumming as well. Jerry managed to get the heads of both cocks side by side in his mouth as they fed him their delicious loads. \n\nLita began making a drawn out moan as she began to cum. The redhead hurried over to Lita and grabbed her hand. As she did, Lita gripped it tightly and grunted again. She looked up at the redhead, now close enough again to feel her body heat radiating off of her, and she noticed that although her shirt did not seem thin, the redhead's nipples were visible through her shirt. Looking up further to her face, the woman was watching Lita's eyes, and as they made eye contact, Lita could see the redhead's eyes were dialated lustfully like her own. Lita was scooted close enough to the desk that although the woman was standing next to her, she was unaware of Lita's cock, or her husband eating the cum as it flowed out of her. ",
        "\"You smell so good I could just eat you up.\" the woman said, and then proceeded to hold Lita's arm up so that she could smell her arm. \"I apologize for being so forward, but I don't normally feel this way about women, and you don't seem like you're in pain, quite the opposite actually.\" The woman took Lita's hand, kissed it, and guided it down to between her legs, where she placed Lita's hand over her groin. \n\nAs Lita followed with the woman's actions, she felt and rubbed to find that, although soft underneath the leggings, the woman's leggings were completely soaked through, and when Lita pulled her hand away, her fingers were wet. Lita smelled the strong scent of pussy, and licked the wetness on her fingers. Lita's cock throbbed another large pump of cum into her husband's mouth, which he greedily swallowed down. \n\nJerry was still sucking glob after glob of Lita's cum as the redhead made her moves on Lita. His own cock had finally stopped spurting, and Jerry could focus on sucking on Lita's cock exclusively at this point. He happily continued to feed from the seemingly endless amount of cum his wife was feeding him. \n\n\"Do you like that?\" the redhead asked Lita as she watched Lita licking her juices from her fingers. \n\nLita pumped another pump of cum into her husband's mouth, \"Oh yes, it's so good.\" she said lustfully to the redhead. \n\n\"... Would you like some more?\" The redhead asked, looking nervous as she propositioned Lita. \n\n\"Oh god yes!\" Lita said. And the redhead proceeded to pull her pants off, and expose a pair of pink underwear with little bows on the sides. They were completely soaked, and Lita could see the outline of the woman's perfectly trimmed red pubic hair, and the outline of her soaking wet pussy. \n\n\"I hope your boyfriend doesn't mind this.\" the redhead said as she walked right up next to Lita's face, where Lita turned her nose against the panties and inhaled the smell of the woman's pussy in deep. Another large spurt of cum filled Jerry's mouth. Lita leaned back in the chair, and looked down to see Jerry sucking away at her cock while giving her a thumbs-up from under the desk. \n\n\"He's my husband, and I think he's okay with it. Now come sit on my face.\" Lita said. The redhead straddled Lita as she was reclined in the chair, having her dripping wet pussy right above Lita's mouth. Lita pulled the crotch of the panties to one side to expose fully the redhead's puffy wet pussy, and Lita started licking softly at the wetness trying to drip off of her pussy lips. Lita's balls began to tingle again as she pumped more spurts of cum into her husband's mouth. Jerry continued to slurp down every drop, having given in fully at this point to being his wife's cum receptacle. \n\nLita gave more licks, becoming more vigorous as she continued, and began thrusting her tongue into the woman's pussy, lapping up all the juices that continued to flow out of the woman. The redhead moaned lustfully as Lita tongue-fucked her off and on, rimming the edges of the woman's pussy and clit with her tongue periodically. Lita remembered when her clit was cute and little like that, and exactly what she liked Jerry to do to it. \n\nEventually, succumbing to the lust, the redhead started grinding her pussy against Lita's mouth. Lita happily lapped up and slurped every sloppy bit of the woman's pussy as she ground it into Lita's face. The woman slipped off her shirt and bra, exposing her firm round breasts. Taking the cue, Lita reached up and started rubbing them, making soft circles around her sensitive nipples, and pinching them such that the woman would let out a little gasp as she thrust her pelvis harder into Lita's face. \n\nEventually, Lita could feel as the woman's pussy shuddered with little spasms as she moaned out lustfully, \"I'm cumming!\" The woman tensed hard, and then released, bringing forth a gushing flood of pussy juices that splashed on Lita's face and filled her mouth. As the girlcum hit Lita's tongue, she felt her balls buck and pump, and Lita proceeded to deposit a fresh load into Jerry, who gulped and swallowed to try and keep every drop of his wife's cum inside of him, where it belonged. \n\nAs the girls stopped orgasming, and the mouths they were respectively filling finished swallowing down their loads, the redhead dismounted Lita's face, and reached for her pants. She grabbed a scrap of paper, hastily wrote something down on it, and handed it to Lita. \"My name is Sammy, and if there's anything else I can help you with in the future, feel free to give me a call.\" The woman started putting her clothes back on as Lita sat forward in the chair and looked at the note. It had the name Sammy E. written on it with a little heart after, and had a phone number written below. \"Seriously, ANYTHING, ANYTIME.\" Sammy reiterated as she leaned over and kissed Lita on the cheek, licking off a little of the girlcum that Sammy had splashed on Lita's face. Sammy began to saunter triumphantly and seductively toward the door and said, \"If I see your husband, I'll let him know you're still in here resting.\"\n\nJerry, finally releasing Lita's cock from his lips, gave a smile at the fact that Sammy was still completely unaware of his presence in the room. Lita's cock fell limply out of his mouth, completely spent from the loads she had expelled into him. Jerry licked his lips, tasting the sweet and salty leftovers from both of the cocks that had been cumming into his mouth, and gave Lita's limp dick one last suck to clean off any leftover cum. \n\nOnce the door shut behind Sammy, Lita slid the chair out, still out of breath, and said, \"You can come out now.\" Jerry crawled out from under the desk, looking at Lita the whole time smiling. Lita smiled back with a sly, \"I just got some\" look. \n\n\"Do you feel better now?\" Jerry asked his wife. He watched as she adjusted her cock and balls, and covered herself back up with the skirt. \n\nLita breathed hard and said, \"Oh yeah.\" With a long sigh. She paused a moment, looked at Jerry, and said, \"I am hungry now though, do you wanna get something to eat?\"\n\nJerry, laughing out loud at the absurdity of the question, said, \"Do you realize how full I am right now? I lost count after the 12th full sized load of cum you pumped into me! I won't need to eat for a week!\"\n\nLita blushed for a moment, looked innocently at her husband, and said, \"Well, I had to cum...\"\n\n\"I know, honey... and it was delicious.\" Jerry replied. Let's get you out of here, and we'll pick you up something on the way home.\"\n\n\"Okay.\" Lita said happily. As the couple walked out of the room together, basking in the glow of their sexual adventure, Lita held up the slip of paper triumphantly for Jerry and said, \"Hey look! I got a phone number! We should invite her over sometime.\"\n\nJerry laughed and said, \"Yeah, we could probably do that. Won't she be surprised when she tries to go down on you...\"\n\nLita thought to herself for a minute, and agreed. Lita slapped Jerry on the ass, grabbed a handful of asscheek, and said, \"I'm going to need to have some practice sticking my dick in tight spaces first... if you know what I mean.\"\n\nJerry looked at his wife, laughed, and said, \"We will cross that bridge when we get there. I have a game to watch tonight.\"\n\nThe couple picked up some food for later, and went home. Lita was thinking heavily on how she was going to get her dick in her husband's ass, and came up with a plan."
    ],
    "authorname": "Miah_H",
    "tags": [
        "married",
        "dickgirl",
        "ejaculation",
        "blowjob",
        "eating out"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-change-pt-05"
}