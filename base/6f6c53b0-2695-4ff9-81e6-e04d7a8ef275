{
    "title": "Spanking Kenny's Wife Ch. 06",
    "pages": [
        "Author's note: This is not the original chapter 6 of this story. I sent the original chapter 6 to Kenny to read, and even though I felt it was a fitting end to the story, Kenny didn't agree and asked me not to post it. Therefore, you can let your imagination fill in what you think happened the rest of that amazing night when Jan finally got her spanking. I will just say this, though..... Kenny did keep his promise and Jan got her last wish. \n\nThis is the last chapter to this story, in other words, the epilog. Kenny and Jan both read this chapter and with a few minor changes agreed to let me post it. \n\n#########\n\nIt was several months after I spanked Jan before I saw either she or Kenny again. Kenny never emailed or called me, and since the softball season was over, I didn't see him at the ball park, either. I reached for the phone to call him more than once, but each time I hung up the phone before I finished dialing. \n\nI agonized over and over about it -- about not hearing from him, I mean. Was I supposed to forget we were friends? Was I supposed to act like nothing ever happened? Was I supposed to disregard how I undressed his wife in front of him and spanked her, touching her intimately and then, before the night was over, finally fucking her? Yeah, okay, they asked me to do all that, but maybe they regretted it now.\n\nI spent many a night stroking my cock remembering the things I had done to Jan, both in front of Kenny, and the things I did in the solitude of their bedroom when he couldn't see. I didn't feel guilty, no - that wasn't it at all. I didn't do anything he or she didn't ask me to do. I was completely honest and forthcoming with both of them about what was going to happen that fateful night. I laid it all out before we did it. I never lied or misrepresented the way Jan was going to be treated or what was going to happen. So why hadn't I heard from them?\n\nI finally accepted the fact that perhaps they were ashamed of what they had done - of what they asked me to do and everything that happened that night. Maybe they were so guilt ridden and embarrassed they simply decided that our friendship had to end. I guess I could understand that, but it was hard to accept the fact that the price I would pay would stick with me longer than their shame would stick with them. I lost my friend, my best friend, and I didn't like it. \n\nPutting myself in Kenny's shoes, though, I suppose it couldn't be any other way. For a whole night, I pretty much owned his wife -- in almost every carnal way possible. I embarrassed and humiliated her. I stripped her in front of her husband. I masturbated her. I took her wet panties off her and I kept them. I spanked her bottom and exposed her in the most lewd manner possible. I had her say those gut wrenching, but truthful things she always wanted to say. She was completely under my power that night and I knew exactly what she needed and what she wanted. Without exception, that night was her ultimate dream, desire and fantasy. Where I fucked up is when I made it all come true, exactly the way she wanted.... openly nasty, and, right in front of him. \n\nIt was the evening after Thanksgiving when I ran into Jan at the mall. Just the fact that I was at the mall was amazing in itself, since I hate those places and make an intentional effort never to go there. But, I needed to get my brother a Christmas gift and there was a store in the mall that had a particular gadget he wanted, so, off I went. After making my purchase at the check out, I turned around to see Jan standing there, no more than ten feet away, looking straight at me. \n\nI don't know how long we stood there looking at each other, but, every second was uncomfortable. I just knew all she wanted was for me to ignore her and leave the store, so that's what I tried to do, much like a whipped dog would slink past his master to the safety of the doghouse. \n\nThinking I was going to safely make my exit without any kind of uncomfortable emotional delay, I turned to look back as I passed her and there she was, just five steps behind me. \"Hey,\" she said, \"aren't you even going to say hello?\"\n\nIn the matter of an instant, I thought about all the possible things that could happen if I stopped. Maybe we would just exchange niceties, and finish with \"it was nice to see you\" and then it would be over. Knowing I would eventually have to face one of them, I prepared myself for the worst, stopped and turned to face her. \n\nTo say I was shocked when she hugged me warmly would be an understatement. The way her tiny frame latched on to me was more than a 'How ya doing, neighbor' hug. As the hug ended, she rubbed her hands up and down my sides and pulled herself back and looked up at me. \"We thought you got abducted by aliens or something.\" Jan said. \"It's been months. Where have you been?\"\n\nI was stunned to say the least. The look in her eyes was something I didn't expect. It was, well.... friendly. I started to stutter something, but, she interrupted me saying \"Hey, its okay. Come on, let's go get some coffee and catch up.\"\n\nTo this point, I hadn't spoken five intelligible words to Jan, but she hooked her arm into mine and pulled me out of the store. \"Why don't you get me a black coffee and I'll be right back,\" she said, pointing to the food court, \"I'm just going to run into the restroom for a sec. Promise you won't leave?\" I nodded and she smiled. With that, I watched her disappear into the restroom as I made my way into the food court. \n\nAfter getting her coffee and a soft drink for me, I found a table and sat down. I saw her come out of the restroom with her cell phone up to her ear. I watched as she talked, her hands making animated motions as she spoke -- even waving to me and holding up her index finger as if to say \"I'll be there in a minute.\" I swallowed hard, not knowing what to expect. \n\nShe finished her call and closed up her phone as she walked toward me. \"That was Kenny,\" she said, \"He said to tell you hello and he would call you in a few minutes. He's in Memphis with the kids.\"\n\nJan went on to tell me that Kenny's grandfather had a mild heart attack several weeks ago and Kenny had been spending a lot of time there. This trip, he'd taken the kids with him since they were out of school for the Thanksgiving holiday, leaving Jan at home and would return Sunday evening. \n\nShe reached out and placed her hands on top of mine and said \"It's so nice to see you. So tell me, why haven't you called?\"\n\n\"Well,\" I answered, \"I had this impression you guys were avoiding me, so I didn't press it. I thought maybe you decided the whole spanking thing wasn't such a good idea after all.\"\n\n\"What ever gave you that idea?\" She asked.\n\n\"Jan, I never heard back from Kenny after that night, and it's been a long time. I just thought maybe you wanted some space, that's all.\" I replied.\n\n\"Well, you were wrong.\" She said. \"We had a wonderful time that night. We both did! And I think you did, too. We just didn't call because this thing came up with his grandfather and we got busy with kids and school and all that.... but, we're not avoiding you at all. In fact,\" she paused, \"I just told Kenny I saw you in the store and, uh, we thought you might be interested in coming over for dinner tonight.\"\n\n\"But, I thought he was in Memphis?\" I asked. \n\n\"He is,\" she answered, \"I'm all by myself until they get back on Sunday. But, you can still come by. He said it was fine with him. How about it?\" \n\nAbout that time, my cell phone rang. I recognized Kenny's number and looked up at Jan. \"Go ahead and take it,\" she said, as she stood up from the table, \"I'm going to get some more coffee and some french fries. I'll be back in a few minutes.\"\n\nI stuck my cell phone up to my ear and answered his call. Kenny told me all abut his grandfather and apologized for not getting back with me after the night I spanked and fucked his wife. He went on and on about how much better their sex life had been and how he was getting laid four or five times a week and how much more sexual and sensual Jan had been since her spanking. He talked so much I almost couldn't get a word in. Then he dropped the bomb on me.\n\n\"Dude,\" Kenny said, \"listen, I'm not going to be back until Sunday and today's only Friday. If you don't have anything to do, why don't you spend some time with Jan until I get back?\"\n\n\"What?\" I asked.\n\n\"Come on,\" he answered, \"you heard what I said. You haven't found a girlfriend or something have you?\"\n\n\"No.\" I replied.\n\n\"Then, what's the big deal?\" Kenny said, then added, \"She's all for it. You can go over there for dinner and stay until I get home on Sunday.\"\n\n\"Man, do you know how this sounds?\" I asked.\n\n\"Of course.\" Kenny answered. \"Look, since you came over, we've both been talking about our fantasies and all the crazy shit that turn us on. I've been honest with her and she's been honest with me. One thing we both want is for her to spend some time alone with you. Don't be a pussy, man! She needs you to make her feel like that again. Consider it a reward.\"\n\n\"A reward?\" I inquired. \"You know we did a lot of stuff that night.\"\n\n\"Fuck, I know that!\" Kenny replied. \"But, this is the perfect time for her to have a little fun. I'm out of town and she's all alone. She's hot and horny, dude.... she wants you to make her do things and she wants your cock. \"\n\nKenny went on to tell me that they both were turned on by the idea of someone else fucking Jan and making her do 'things'.... making her suck cock, cuming in her mouth, fucking her over the dining room table.... just about everything you can imagine. The problem was, they were too chicken to make it happen themselves. They didn't know how to find someone they could trust and the whole idea of strangers seemed way too risky. Kenny confessed to me that he'd always fantasized about seeing another man pumping her in and out with a hard cock while she lies back with her legs wide open. He even told me they talked about going out to a bar to find someone to fuck her, but, they were too afraid to actually do it.\n\nHe told me Jan said that evening was the most amazing night in her life. He said she told him it was the fulfillment of every fantasy she ever had.... the way she was touched and exposed and spanked. I could tell by the tone in his voice that he was telling me the truth because he recounted most of what we did with such vivid detail. They must have discussed it over and over until it was engrained in their memories.\n\n\"Kenny, you're making it sound like Jan's turned into some kind of cum slut, wanting to fuck everyone in sight. Are you listening to yourself?\" I asked.\n\n\"No, I'm not, and you know it.\" Kenny answered. \"Look, here's the deal,\" he said, \"these are her fantasies. She would never do any of this with anyone..... except you. I mean, with me and you. She said the way you treated her made her feel so fulfilled -- so nasty. But she also said you made her feel safe. It's like you set her free, man.\"\n\n\"So, let me get this straight.\" I asked. \"You're telling me I can go over to your house and stay with your wife until you get home and I can spank her, touch her and fuck her as much as I want. Is that it?\"\n\n\"Almost.\" He replied. \"What I want is for you to talk to her and grant her fantasies. Whatever she wants, you give it. I tell you for sure, she wants you to make her expose herself..... and she'll want you to spank her.... and suck you off and she'll definitely want you to slam the meat to her.\"\n\n\"Damn.\" I moaned, as my cock pushed against my jeans.\n\n\"I've got an idea,\" he mused, \"let me talk to her for a second.\"\n\nI looked around to see Jan walking back to the table carrying her fries and her precious gourmet coffee. When she sat down across from me, I handed the phone to her and hunched my shoulders saying, \"He wants to talk to you.\"\n\nShe took the phone from me and held it to her ear. After a minute or so, she blushed deep red and gasped. \"Right here?\" She asked into the phone. Her eyebrows shot up and she looked at me and her jaw dropped.\n\nJan leaned across the table and beckoned me closer. Then very softly, so no one else could hear her, she said \"I want you to come over and stay with me while Kenny's gone,\" she began, \"and I want you to spank me and make me do nasty things, really nasty things.\"\n\nThen she listened to the phone for a few seconds and spoke again, looking straight into my eyes, saying \"My pussy is wet hoping you're going to say yes. You can do whatever you want with me..... uh, even..... oh gawd, even take pictures or stick it up my ass if you want. Please say yes.\" She begged. \"I don't know when we'll have this chance again. Please say you will.\"\n\nShe listened to the phone again and looked at me. After a short pause, she asked, \"Please?\"\n\n\"Okay,\" I answered, \"but, with three conditions. First, you're completely mine and agree to do everything I ask from this moment on, and second, you have to tell Kenny every detail of what we do or talk about when he gets home. Agreed?\"\n\nShe put the phone back to her ear for a second and said \"Yes, agreed. But what's the third condition?\" \n\nI asked for the phone back and with her listening I told Kenny the third condition was that he had to agree to go down on his wife and eat her pussy within thirty minutes of getting home on Sunday. After I said it, Jan looked at me. Her eyes got big and she whispered to me \"Oh my gawd! With your sperm in me? He'll love that. He won't say it, but, he'll love it.\"\n\nAt first, Kenny didn't say anything. But after a bit, he moaned into the phone and said \"Oh, fuck, man. Are you going to cum in her right before I get home?\" \n\n\"I think you can pretty much count on the fact that I'm going to leave a nice hot cream-pie for you to lick out of your wife, my friend.\" I answered.\n\nJan was speechless. She held her hands up over her mouth like she was going to scream. \"What is he saying?\" She asked softly. I held up my hand, waiting for Kenny to answer.\n\n\"Oh hell yes,\" he said into the phone, \"you bet your damn ass I will. Go ahead and tell her, dude..... tell her I'll lick her out as soon as I can get the kids settled.\"\n\nI held the phone away from my mouth and leaned toward Jan and told her what Kenny said. \"Oh, gawd,\" she moaned, \"I want you to really fill me up then. He's talked about doing this non-stop since that night you spanked me.\" With a twinkle in her eyes, she asked for the phone back and leaned back into her chair and whispered into the phone so I couldn't hear. After a minute, she leaned forward, said \"I love you, too, honey\" into the phone and handed the phone back to me.\n\n\"Okay, man,\" Kenny said, \"you've got the green light. Take her home and spank her tonight. Treat her right and sex her up for me. But, be gone when I pull in the driveway, alright?\"\n\n\"No problem.\" I answered.\n\n\"Listen,\" he added, \"I told her to take you to one of the stores there in the mall, pull you into a dressing room and masturbate in front of you. Be sure you take her panties from her.\" He said. \"She really got off on it when you took her panties last time. She'll get into it if you make her get 'em all wet and then make her give them to you. Tell her you're going to take them hostage and you'll trade them for new ones next week. That'll make her cum, believe me. Fuck, she'll probably have a melt down.\"\n\nThe vision of that very scene flew through my mind as I listened to Kenny and looked at Jan across the table from me. Imagining what she was going to look like in a few minutes as she stood in front of me lowering her jeans to her knees. Then, while I watched she would begin to touch herself, running her fingers up and down her slit, rubbing herself through her panties creating a nice crease between her pussy lips. \n\nKenny asked me to call him later tonight on the speaker phone in their bedroom after I filled her pussy with my hot cum. I had to chuckle to myself at the words he used. He was obviously excited -- probably as excited as Jan was. \n\nAs for me, I was pretty excited, too. But, more than that, I was elated that our friendship was still intact and they seemed pleased to finally find someone they could both live out their intimate fantasies with. I didn't have any romantic desires for Jan. Sure, she was a beautiful woman, but they were married and I wanted to honor that. They just wanted some excitement in their sex life. I didn't see any harm in helping them get what they both seemed to want. \n\nAfter I hung up with Kenny, I looked across the table as Jan offered me some of her french fries. \"What kind of panties are you wearing?\" I asked.\n\n\"Bikini,\" she answered, \"pink, I think.\" She blushed profusely as she answered my question about her panties.\n\n\"Are you wet?\" I inquired.\n\nStill blushing, she nodded her head and told me she was. When I asked her if she knew she had to masturbate for me before we left the mall, her eyes lowered to the table and she nodded again. \"Is your pussy shaved?\" I asked.\n\n\"It's been about two weeks since I shaved it.\" She answered.\n\n\"You're going to have to shave it all off for me as soon as we get to your house,\" I told her, \"I don't want any hair covering your vagina when I spank you..... I want to see everything clearly.\"\n\n\"Okay.\" She replied.\n\n\"I'm going to be taking a lot of pictures of you, Jan. I think your husband will want to see what he missed out on, and I'll start by taking a few of you shaving your pussy. And by the way,\" I gave her my serious look, \"I want a lot of pictures with you in your panties for myself and a lot of you playing with your pussy. You'll do all that for me, won't you?\" I asked.\n\nHer face was flushed and her cheeks were beet red. She wasn't smiling at all. Her eyes were glazed over and I don't know if she was panicking, dreaming or if I was pushing her too far. \n\n\"You're going to keep the pictures to yourself, aren't you?\" She answered.\n\n\"I will.\" I replied. \"I give you my word on that. I just want some pictures to look at when I'm home alone, uh.... taking care of myself.\"\n\n\"Ah, I understand.\" She said. \"You're going jack off looking at my pictures?\" \n\n\"Yep,\" I laughed, \"and I hope you won't mind me taking a few pairs of your panties home with me, either. I'm talking about wet ones, Jan. I want you pick out some panties for me to keep and I want you to wear them for me and get 'em all wet with your pussy juice.\"\n\nThe look on her face was absolutely amazing. Her eyes got huge and she gasped for air.\n\n\"Do you think that's sick?\" I asked. \"I mean, for me to want your wet panties... saturated with your pussy juice? How are you going to feel knowing another man is sniffing your panties, looking at naked pictures of you and jacking off?\"\n\nI waited for her answer, and when she opened her mouth to speak, I could barely hear her. \"Speak up,\" I said, \"I can't hear you, Jan.\"\n\n\"It excites me.\" She answered.\n\n\"Oh, you nasty girl!\" I said smiling. \"You don't mind at all, do you. In fact, I bet it turns you on knowing I'm going to be masturbating using your panties. Isn't that right, Jan?\"\n\nShe could only nod her head up and down. I think she was caught somewhere between embarrassment, excitement and humiliation and she simply couldn't speak.\n\n\"Well,\" I confessed, \"it excites me, too. And if you want me to come over regularly to see you naked and make you do nasty things, I would be honored to do so. That's something you better talk over with Kenny, though. If he's turned on by this cream-pie thing, I could help him out with that, you know..... as long as you don't mind me giving you a good fuck in front of your husband.\"\n\nI could see the wheels turning in her head as she sat across from me with a blank look on her face. \"Come on,\" I said, rising from the table and reaching out for her hand, \"I want to see you play with your pussy. Let's see if we can find an empty dressing room quickly.\"",
        "As we walked through the mall, she crooked her arm into mine and I began to whisper, telling her how I wanted her to masturbate. I told her I wanted her to start by lowering her jeans to her knees the instant we got into the dressing room. She was to face me at all times, unless I told her differently. When I told her I might leave the dressing room door open a little, I heard her moan. \n\n\"Are you wearing a bra?\" I asked. \n\n\"Of course.\" She answered. \"If I don't, my nipples poke out too much.\"\n\n\"Well, when I tell you, you're going to take off your sweatshirt and bra and put your bra in your purse. I think it's time we set your nipples free.\" I added. \n\n\"Maybe there will be someone lurking close to the door.\" I said. \"If there is, I might let them have a look at you. Please don't disappoint me if I do. Don't cover yourself. Just let them look. Okay?\"\n\nAnother gasp escaped from her lips as we walked. \"Okay.\" She replied.\n\nI was trying to do everything I could to make her anxious and raise her excitement level. I knew talking about how she was going to masturbate for me would get her going, and exposing her to a stranger might be pushing her to the limit, but she didn't say 'No' to any of it.\n\n\"Then once I tell you,\" I continued, \"you'll remove your jeans and start to touch yourself over your panties. I want you to get those pink bikinis really wet for me, Jan. I want them saturated with your pussy juice. I bet you can guess why, huh? Because you're going to give me those panties - that's why.\" \n\nMy excitement was causing my cock to poke against my own jeans and when I told her I had a hard-on she pulled me into the next store we came upon.\n\nFortunately for us, it was one of those boutiques catering to young women and there were many racks and stands set up with trendy things for sale. Looking towards the back, I saw a display of bras and panties and immediately made a bee line directly to them, pulling her with me.\n\nAs Jan and I stood in front of the lingerie display, a young woman, perhaps no more than nineteen or twenty years old, approached us asking if she could help us find anything. This was an opportunity I couldn't pass up. \n\n\"Uh, yes.\" I answered quickly. \"We're looking for bras and panties that are really sheer and sexy..... you know, something that doesn't leave anything to the imagination..... something for a very special occasion.\"\n\n\"Oh, how nice.\" The young woman remarked. \"Like an anniversary or birthday or something?\" She asked.\n\n\"No,\" I answered in a quite matter of fact tone, \"actually, she's going to be spanked.\"\n\nI thought Jan was going to pass out. She turned white as a ghost and I heard her gasp when I said the words, but she didn't say anything. The young sales woman looked at Jan, then back to me and laughed. \"Well, I've never heard that one before. That's funny!\"\n\n\"It's no joke.\" I replied. \"She going to be spanked tonight and I want her to look sexy for the pictures. This is all she's going to wear.... well, at least until the spanking starts.\"\n\nThe young sales woman was obviously taken by surprise with my answer. She looked at Jan and asked, \"He's kidding, right?\n\n\"No, believe me, he's not kidding at all.\" Jan answered.\n\n\"Oh, wow!\" The sales woman said softly. \"You mean, you're really here to buy lingerie to get spanked in?\"\n\nJan looked at me and then back at the sales woman and answered, \"That's right.\"\n\n\"And this is all you get to wear?\" The sales woman asked. \"Just bra and panties?\"\n\nI interrupted them and emphasized the point that Jan would start her spanking wearing only bra and panties. But, the way I said it, I tried to insinuate that the bra and panties would be removed leaving her naked for her spanking.\n\nTo her credit, Jan just stood there and went along with my ruse. I went on to tell the young woman that tonight was 'Spanking Night' and I wanted her to feel beautiful. Then I asked, \"So, do you have something sheer and sexy?\"\n\nThe sales woman seemed to be at a loss for words. She looked around the store and then turned back to Jan and I. \"Look,\" she said, \"I want to help you find just the perfect outfit, but I have other customers. Can you come back in about forty-five minutes? I'll be closing the store up then, but once I get everyone out, I'll be able to spend as much time as it takes to help you find exactly what you want.\"\n\nI looked at Jan, trying to judge her reaction. But before either Jan or I could say anything else, the young woman turned to Jan and said, \"Hey, I'm really intrigued and would love to help you find what you want. I think I have something new in the back that just came in. It's not on display yet, but I want you to see it. I think it's exactly what you're looking for. And, maybe you could tell me some more about.... uh, you know..... spanking.\"\n\nThat clinched it for me.\n\n\"Sure,\" I answered, \"we'll come back right as you close and if you've got something special you think is what we're looking for, that would be wonderful. You're curious about sensual spankings, are you?\"\n\n\"Uh, well,\" she stuttered, \"I guess it's something I've thought about. This is kind of embarrassing,\" she said, glancing around quickly, \"but, if you don't mind, I would love to talk to you about it.\"\n\n\"We understand completely.\" I replied. \"It's a deeply personal and intimate thing to talk about, for sure. We'll come back in a while and maybe we can help each other out.\"\n\nWith that, I took Jan by the hand and led her out of the store. When we got out to the mall walkway, she turned to me and asked, \"Just what the hell was that all about? Come on, we're leaving.\"\n\n\"Oh, not on your life, my dear.\" I answered, laughing. \"Your own husband told you to masturbate for me before we left the mall and you told him you would. Plus, if you remember correctly you told me you would do anything I asked you to do. So, maybe we'll just find a place to have dinner here in the mall and then we'll go back and see the new lingerie she has.\"\n\n\"Oh, come on.\" She begged, tugging me to a stop. \"Isn't it enough that you have me all to yourself until Kenny gets home? Come on, let's just go. I'll take my clothes off in the car and you can watch me masturbate there. Hell, I'll even throw in a blow job, too.\"\n\nI could see the despair in her eyes as I turned to look at her. \"Jan, do you remember the night I spanked you? Do you remember how I looked after you and protected you? Do you remember how much you enjoyed it and how exciting it was for you? Do you remember how you had to trust me that night to make everything wonderful for you?\"\n\n\"Yes, of course I remember.\" She replied. \n\n\"Okay then,\" I continued, \"I want you to trust me like that again. Don't try to analyze it or second guess me on this. Let's go get something to eat and then we'll go back to the store. One way or the other, I'm going to get you in a dressing room and you're going to get naked for me, touch your pussy and make your self cum. I'll keep everything else under control. Okay?\"\n\n\"Damn you.\" She mumbled, as she took my arm and led me back to the food court where she had her coffee. \n\nWe decided on Chinese food once we got to the food court. The line was short and we found a place to sit where we could talk without anyone overhearing us. After a few minutes of casual conversation, she finally asked me what I had planned for her once we got back to the store.\n\n\"Nothing more than we agreed,\" I said, \"with one or two exceptions.\"\n\n\"And what would those exceptions be?\" Jan asked.\n\n\"Well, first,\" I answered, \"it sounds like that woman has some questions or wants to talk about spanking. So, let's do that. She doesn't know our names or anything. What harm could it do? Let's just see what's on her mind. Remember,\" I added, \"there was a time when you were curious, too.\"\n\n\"Okay,\" Jan agreed, \"but I don't want you volunteering to spank her or anything like that. And absolutely no touching her! You're supposed to be with me. That's not too much to ask, is it?\"\n\n\"I see what you're getting at, Jan. But, you needn't worry; the thought never crossed my mind.\" I replied.\n\n\"Thank you,\" she said, smiling, \"so what's the other exception?\"\n\n\"I might want to give you a little warm-up spanking in the dressing room.\" I said as I reached for my fortune cookie.\n\n\"Well, shit! Don't you think she'll hear that?\" She asked.\n\n\"Think about it, Jan.\" I reasoned. \"If we're the only ones in the whole damn store, she's probably going to hear us talking in there anyway..... even if we whisper. She'll probably hear you taking off your clothes and masturbating. Let's just play it by ear and if I decide to do it, I hope you'll be brave enough to put yourself in my hands and trust me.\"\n\nI handed her a fortune cookie and smiled. She smirked as she took the cookie from my hand, cracked it and pulled out her fortune. \"Well,\" she said, \"that makes sense.\" Jan handed me the piece of paper from inside her fortune cookie. I laughed to myself as I read: \"Something exciting will happen very soon.\" \n\nAfter we finished eating, I looked at my watch and told her we had to start making our way back to the store. As we walked, I asked her if she was nervous. \"A little,\" she confessed, \"but, more excited than anything else. I know you're going to see me naked in a few minutes. I hope you don't embarrass me too much.\"\n\n\"Just trust me.\" I replied. \"I promise you won't regret it.\"\n\nAs we approached the store, the young sales woman was holding the glass door open and ushering her last customers out. Looking up, she saw us and smiled. \"I'm glad you came back,\" she said, \"come on in. Give me one second to lock the door and I'll be right with you.\"\n\nSome of the lights in the front of the store had been turned off, but it wasn't dark. I led Jan to the back of the store where the lingerie was on display and I started looking through the panties as Jan stood next to me.\n\nAfter a short second, the sales woman joined us.\n\n\"Okay,\" she said, \"we're locked in now. By the way, my name is Susan. It's nice to meet you.\"\n\nJan and I introduced ourselves and we chatted for a few seconds. \"So,\" Susan continued, \"you're looking for a sexy bra and panty set. Something sheer and see through, right?\"\n\n\"Exactly.\" I answered. \"Can I be completely frank with you?\" I asked.\n\n\"Sure,\" Susan replied.\n\n\"Alright, then.\" I continued. \"I want a bra that shows her breasts and nipples clearly, and some panties that will show her vagina from the front and the back.\"\n\nSusan looked at me curiously. \"From the back?\" She asked.\n\n\"Yes, once she's in position for her spanking,\" I explained, \"I want to be able to see how her vagina is reacting before I remove her panties.\"\n\nBoth Susan and I looked at Jan. She was standing there bravely, but I could see how flushed she was, especially her cheeks, which looked like they were on fire. \"Jan has incredible nipples,\" I added, \"and a beautiful pussy, I just want to take advantage of that with the pictures.\"\n\nNow Susan was blushing, too. \"I see.\" Susan said. \"I may have just the perfect outfit. Hold on a minute and I'll be right back.\"\n\nWith that, Susan left us and disappeared through a door. I took a few steps toward Jan and reached down to unbutton her jeans. She made no move to stop me or step back, so once I had them unbuttoned, I wormed my hand down into her jeans and cupped her pussy in the palm of my hand. I immediately felt the heat radiating from her pussy and as I started to move my fingers up and down per panty covered slit, I could easily feel that she was sopping wet. \n\nI told her to spread her feet, so she reached up and steadied herself by grabbing my shoulder and then shuffled her feet apart. I pressed my fingers further into her furrow, forcing the fabric of her panties deeper into her labia and then began to trace her slit up and down as she leaned against me.\n\n\"She'll be back soon.\" Jan whispered. \"You better take your hand out now.\"\n\n\"Something tells me she won't mind seeing my hand down inside your pants.\" I replied. \"Besides, it feels good and I love touching you like this. Just relax and act like it's no big deal. Close your eyes for a minute and concentrate on what my finger is doing.\"\n\nShe accepted what I said and I pulled her into a close hug, one hand softly rubbing her back and the other hand stroking her luscious pussy through her panties. I closed my eyes, too, just enjoying it and waiting for Susan to walk through the door.\n\nThe sound of the door opening startled us, and Jan instinctively tried to pull away, but I held her close to me and continued to stroke her up and down between her pussy lips. As the sound of Susan's footsteps grew closer, I felt Jan's heart rate quicken and she started to pant. Then before I knew it, Susan was standing there -- no more than three feet from us looking directly at what my hand was doing inside Jan's jeans. Without acting the least bit different, I looked at Susan and asked if she found what she was looking for.\n\nSusan was visibly shocked, and she stuttered a bit as she held up a handful of colorful bras and panties, saying, \"I thought these, uh, might be along the lines of what you're looking for.\"\n\nI boldly withdrew my hand from Jan's jeans and reached out to examine the items Susan was holding in front of me. I could easily see Jan's vaginal secretions on my fingers, and as I reached out and touched the lingerie Susan was holding, both Jan and Susan were totally silent.\n\n\"Let me see just the white ones.\" I said, pushing my hand back down into Jan's jeans and resuming my ministrations on the outside of Jan's panties. \"The pastels are nice, but, the white ones will be easier to see through.\"\n\nSusan eyes followed my hand as it snaked down into Jan's crotch. As she separated the white bra and panties from the colored ones, I withdrew my hand and made an obvious motion against Jan's stomach and then pushed my hand down inside her panties and curled my middle finger so it slipped right into her wet pussy.\n\n\"Spread your feet a little more.\" I said to Jan. When she hesitated, I said, \"Come on, you know you want me to do this. Spread your feet some more so I can get my finger up into you further.\"\n\n\"Oh, Gawd.\" Jan moaned as she spread her feet further and buried her face into my chest to hide her embarrassment. I began to alternate rubbing up and down her slit, slipping my finger part way into her tight vagina when I was at the bottom, and diddling her clit when I was at the top. Jan was almost shaking, but she shuffled her feet even further apart without me asking so I could get one finger well up inside her vagina. Susan's eyes were huge and she was breathing heavy herself as she watched me. \n\n\"Susan,\" I said, trying to get her attention, \"hold each of those up for me one at a time so I can look at them, would you?\"\n\nWithout speaking, she held up the first item, a sheer, white see through bra. As I looked at the bra, Susan was staring at my hand as it worked inside Jan's panties. Looking at the bra, and imagining how she would look wearing it, I began to concentrate my finger on Jan's clit, which brought an immediate reaction from Jan. She started to wheeze and hump herself against my hand and I realized I might be able to make her cum -- right in front of Susan.\n\n\"Do you have matching panties to go with that bra?\" I asked Susan.\n\nAs if in a trance, Susan held up the matching panties for me to see, still not taking her eyes off what I was doing down inside Jan's panties.\n\nI increased my pressure against Jan's bud, first circling around it and then applying direct pressure as I went around and around. Jan was noticeably panting by now, grasping at my shirt and pulling her face tightly into my chest. Bending my head down, I whispered to Jan just loud enough for Susan to hear, asking \"Do you want me to make you cum?\"\n\nJan didn't answer me, so I stopped fingering her and started to pull my hand out of her panties. \"Do you want me to stop, Jan?\" I asked.\n\n\"No.\" Jan answered softly. \"Don't stop.\"\n\n\"Well, I need to you push your jeans down a little bit, then.\" I replied to Jan.\n\n\"Please, no,\" she begged, \"don't make me do that in front of her.\"\n\n\"If you don't want me to stop, you're going to have to push them down a few inches. Not all the way, Jan, but I need some more room.\" I explained.\n\nI felt Jan shift, lifting her head from my chest and moving her hands to the top of her jeans. When they didn't budge, I felt her pull the zipper down and then push her jeans down an inch or two.\n\n\"More.\" I said. \"A few more inches.\"\n\nJan shuddered as her hands moved to her waist and pushed her jeans down below her hips, completely exposing the front of her pink panties and my hand inside them. She buried her face back into my chest and I used my hand to work the front of her panties down as much as I could. Then, once again, I slipped my hand down between her legs until I could easily slip two fingers into her pussy hole. \n\n\"Relax now,\" I whispered to Jan, \"concentrate on my fingers and let it happen. Block out everything else and just feel me touching you. Think about how excited you're husband is going to be when you tell him about this,\" I told her, \"think about how hard his cock is going to be when you tell him I fingered you to orgasm in the middle of a store.\"\n\nI went back to diddling Jan's clit, flicking it up and down in exaggerated motions. Susan was no longer holding up the sheer panties for me to look at, instead she was openly staring at Jan's partially exposed pussy and my fingers masturbating her. The look on Susan's face was priceless; her eyes were big and her lips were parted as she tried to breathe without making too much noise. She looked up at me and I saw her blush as her eyes darted away from mine, but she sheepishly looked back at me and I smiled at her, encouraging her to watch as I brought Jan closer and closer to her climax.\n\n\"I know you're getting close.\" I whispered to Jan. \"It's okay to cum when you're ready.\"\n\nSusan was almost comatose by now. Each of her hands hung limp at her sides holding the bras and panties she was going to show us. Poor Jan was well past the point where she cared about anything besides cuming. Just as she did the night I stripped, fingered and spanked her in front of her husband, she willingly went along with what ever I said.\n\nI knew I had to bring her off quick if I had any chance of getting her into the dressing room and having her undress for me. So, I went in for the kill; wrenching my fingers up into her and pressing down on her g-spot. \n\nAs soon as I touched her spot, she thrust herself against my hand and bucked wildly as I massaged her there. \"Oh, fuck!\" She groaned. \"You're going to make me cum!\"\n\n\"Aaaaahhhhh!\" She exclaimed. \"I'm cuming. I'm cuming.\"\n\nI felt a sudden rush of warm wetness flow over my hand. Jan was grunting and bucking as I fought to keep my fingers in place inside her pussy, but she started to collapse as her orgasm overtook her and I had no choice but to pull my hand out of her panties and hold her to me. Jan's chest was heaving, and she was gasping for air as her body shuttered against mine. I wrapped both arms tightly around her and held her until she quieted down and stopped shaking. \n\nAs I held Jan to me, Susan and I exchanged glances. Susan's jaw was open and it was clear that the exhibition she just witnessed not only took her breath away, but she was in awe of Jan's performance. \n\nHolding Jan steady, I came up with one last idea to further test Jan's trust and her resolve to do whatever I asked. \"Are you okay?\" I whispered into Jan's ear. \"Can you stand on your own for a minute?\"\n\n\"Uh huh,\" she said softly as she nodded her head up and down, \"I think so.\"\n\nI took a step back from Jan and she looked up at me. \"Stay right where you are for a minute,\" I instructed, \"Don't move.\" Then I bent down in front of her and pulled her jeans down to her knees. Instinctively, her hands reached down to pull them up, but I simply said \"No\" and she let go.",
        "I couldn't believe what I saw between her legs. Her panties were literally soaked. The inside of her thighs had small moisture droplets all over them and her jeans were visibly wet. I scooted a little to the side and looked up at the young sales woman. \"Look at this,\" I said to Susan, \"everything is soaked.\"\n\nSusan kneeled down next to me and the two of us peered inside Jan's jeans and inspected her thighs and panties. After a second, Susan smiled and looked up at Jan and then over to me. \"She squirted,\" Susan said, pointing to the wet marks inside Jan's jeans and the clear droplets on her thighs, \"see, it's everywhere.\"\n\nJan's hands immediately covered her face in total embarrassment. But, as we kneeled in front of her looking at the shiny moisture, I put the final touch to Jan's humiliation by placing my fingers in the waistband of her panties and pulling them down.\n\nJan never made a move to stop me or turn away. She stood perfectly still as I exposed her bare vagina to Susan. Jan even remained still as I reached up with both my hands to part her engorged lips, allowing us to see the pinkness buried inside her pussy and her cute little clit, which was still poking out of its protective hood.\n\nI wanted so much to thrust my finger up into Jan's pussy while Susan had such a close view, but I decided Jan had been through enough for now. I was just about to raise Jan's panties when I saw Susan's hand make a move toward the wet vagina in front of us. I turned to look at Susan and she pulled her hand back. I nodded to her and smiled, hoping she would raise her hand to Jan's pussy again. She must have read my mind because she raised her finger confidently, ran it up between Jan's pussy lips and wiggled her clit with her fingertip.\n\nJan gasped when she felt Susan's touch, but she didn't back away. \"She's sopping wet,\" Susan said, \"does she squirt like this all the time?\"\n\nSusan and I both looked up to Jan's face. She was peeking down at us through her hands, partially hiding herself, but still leaving enough room for her to see what we were doing. I spread her lips further -- as far as I could, now exposing her wet vagina as much as possible. I waited to see what Susan was going to do next, but when she lowered her hand and bent in closer to look up inside Jan's pussy, I held her lips open and smiled up to Jan.\n\n\"She's definitely got a beautiful pussy.\" Susan said. \"Her lips are perfectly shaped and such a tight looking hole.\"\n\nI had to make a decision to cut this short so I could move Jan into the dressing room for the next phase of her exposure. I was starting to be conscious of the time because I desperately wanted to get her back to her house so I could slide my cock into that Grade-A pussymeat.\n\nI leaned over to Susan and asked her to pull Jan's panties up. Susan giggled a bit and then reached out to grasp the waistband of Jan's panties and tugged them up. As Susan stood, she pulled them into place and then ran her hand down the front of Jan's panties and pressed her hand up into Jan's snatch and began rubbing.\n\nIf I would have let this continue, I can almost bet one of them would end up sucking the other's pussy, but my throbbing cock took control and as I reached out to pull Jan's wet jeans up her legs, Susan dropped her hand and took a step back. \n\nNot wanting to waste another second, I kissed Jan on the cheek, took her hand and led her to the dressing room. When Jan figured out where we were going, she turned to me and pleaded for me to take her home, saying, \"You still want me to masturbate for you? After all of that? Haven't you seen enough?\"\n\nI leaned in close to Jan and whispered softly into her ear, making sure I was soft enough that Susan couldn't hear me. \"Jan, do you honestly want me to stop? If this is unbearable for you or if you're not getting off on it, tell me now and we'll leave here immediately. But, I've got this feeling you really don't want me to stop.\"\n\nShe whispered back to me, softly telling me she didn't want me to stop. \"Okay then,\" I replied, \"just do what I say and let yourself get into it. Don't be afraid to be nasty. This is a once in a lifetime chance, Jan. You've got the store all to yourself, and Susan is definitely interested in seeing more. Right here and right now you can realize your dream of being naked in front of someone.\"\n\n\"But, she's a.... uh, a woman.\" Jan whispered.\n\n\"What does that matter? She's hot for you,\" I answered, \"you're turning her on. I bet you've made her wet as hell. Plus, she's here and she's interested. Let yourself be a slut for thirty minutes, Jan. Then, I'll take you home, warm your butt with a nice spanking and you can ride my cock for an hour before I fill your pussy with cum.\"\n\nI could see her thinking about it. Her eyes shifted back and forth between me and Susan as she considered what she wanted to do. \"What do you say?\" I asked.\n\nShe nodded her head and I squeezed her hand to praise her decision. Then turning to look at Susan, I said \"Okay if we try some things on?\"\n\nSusan quickly agreed and walked to us holding the bras and panties. I turned to Jan, pointed to the dressing room and told her to go ahead. \"Don't close the door,\" I added.\n\nWhen Jan turned to walk over to the dressing room, I handed my cell phone to Susan and showed her how to use the camera function. \"Take as many pictures as you can, would you?\" I asked. \"All this is like a fantasy come true for her and I want as many pictures as possible.\"\n\nWhen Jan got to the dressing room, she took two or three steps inside and then turned to face me. As I walked toward her, she undid her jeans and pushed them down to her knees. \"Very good.\" I said. Then sitting on the bench in the dressing room, I pulled her over to me, turned her toward Susan and made her stand between my knees. As Susan took pictures, I ran my hands all over Jan's ass and between her legs.\n\n\"Take off your sweatshirt and your bra now,\" I instructed, \"I want to see how hard your nipples are.\"\n\nShe obeyed me perfectly, and looking directly at Susan and into the camera, she pulled her sweatshirt off and shook her hair loose. Dropping the sweatshirt on the floor, she reached behind and unclasped her bra and let it slide down her arms. Reaching up, I touched one of her tiny nipples and rolled it between my thumb and forefinger. Glancing up at Jan's face, I could see her eyes were closed and her head was starting to drift back. \"You okay?\" I asked.\n\n\"Hmm, yes.\" Jan answered. \"That feels nice.\"\n\n\"Good,\" I replied, \"now step out of your jeans and spread you feet so I can finger you.\"\n\nShe did as I requested, spreading her feet enough for me to easily feel her up between her legs. I wasted no time and used both hands in examining her, front and back through her moist panties. I wasn't rough with her, but I wasn't soft and gentle, either. She moaned and swayed as I felt every millimeter of her. I creased her panties up into her butt crack and massaged her ass hole as my other hand felt her pussy. She was gloriously wet and the squishy sounds of her moisture echoed inside the dressing room.\n\n\"Lower your panties for me now, Jan,\" I asked, \"not all the way, just down to your knees.\"\n\nAgain, she did as I asked and then spread her feet as wide as she could. I immediately pushed two fingers up into her pussy and started to move them in and out. I stopped every now and then to diddle her clit, but I didn't linger there long because I didn't want her to cum so soon after her wet explosion.\n\nSusan was taking picture after picture and it wasn't long before Jan was gasping and moaning. I made a conscious effort to lighten my touch so I wouldn't make her cum, but she seemed to be giving all the signs that she was getting closer and closer. It finally got to the point where I knew I had to stop touching her but I didn't want her to cool down. \n\n\"Jan, take your panties off now and hand them to Susan,\" I said, \"then get down on your knees in front of me.\"\n\nJan looked at me, silently questioning my request. But when I lifted my eyebrows, she pushed her panties down, stepped out of them and handed them to Susan without any discussion. As she got down on her knees in front of me, I unbuttoned my jeans, pushed my underwear down and told her to suck me. I didn't have to ask her again; she grabbed my pole and began licking and sucking my cock head like there was no tomorrow.\n\n\"Turn your body toward Susan,\" I told her, \"and open your legs so she can see your pussy while you suck me. Put your fingers down there and touch yourself, but don't make yourself cum. All I want you to do is open yourself up so Susan can see how wet you are and how pretty your pussy is.\"\n\nI didn't take into consideration what Susan might do or what her state of arousal was, but when Jan repositioned herself, opened her legs and started touching her pussy, Susan couldn't take it anymore. She raised Jan panties to her nose and inhaled them deeply. \n\nThe next thing I knew, Susan set my cell phone down, walked right up next to Jan and kneeled down next to her. I watched in amazement as Susan reached over to grab one of Jan's nipples with one hand, and reached toward Jan's pussy with the other.\n\nJan's mouth pulled off my cock and she looked over at Susan. \"Oh, Gawd that's nice!\" Jan exclaimed. Then as I watched, Jan took Susan's hand and guided it to her pussy opening and held it there. Susan got the message and began to piston two fingers in and out of Jan's pussy and I realized at that point she was going to make Jan cum again -- probably soon, too.\n\nSusan obviously knew what she was doing -- I could tell because Jan lost interest in the blow job she was giving me. Her eyes were focused directly on Susan and she started thrusting her hips up and back as Susan's fingers moved in and out of her.\n\nI was just about to put an end their sapphic encounter when Jan moaned, \"Oh Fuck!\". \n\n\"Come on baby,\" Susan said, \"cum for me..... cum on my fingers.\" And that's exactly what Jan did. She convulsed and used my cock as a handle to keep herself upright as her orgasm began to sweep over her. It was an amazing thing watching the two of them silently communicate as Susan brought Jan off. I could only lean back and watch the spectacle unfold in front of me.\n\nWhen Jan finished convulsing, she let go of my cock and put her hands on the floor for support as she caught her breath. Susan looked at me and smiled as she raised Jan's panties to her nose again. I smiled back and asked Susan if she would like to keep Jan's panties. \n\n\"Oh, I would love to,\" Susan said, \"if that's okay with you, Jan.\"\n\nJan looked up from her resting position and nodded her head. She looked so worn out; her tiny body covered with perspiration and the remnants of a sexual flush on her chest and back. I pulled her over to me and let her rest her head on my lap while I stroked her hair and comforted her.\n\nTurning my head to Susan, I asked if she had some bottled water or a soft drink to help Jan cool down. She told me there was some bottled water in the break room and when she left us to get it, I pulled Jan up, wrapped my arms around her and hugged her gently.\n\n\"Tell me, Jan\" I began, \"that wasn't the first time another woman has touched you there, is it?\"\n\n\"No,\" she said, \"in college there were a few girls who...... you know.\"\n\n\"You liked it, though, didn't you? Being exposed and opened up, I mean..... and when she touched you?\" I asked.\n\n\"Uh huh,\" she said, \"it felt really good. She knew exactly how to touch me. It's kind of weird because I feel some kind of connection with her. I'm not sure what it is.\"\n\n\"I gave her your panties.\" I said. \n\n\"I thought you were going to take them for yourself,\" Jan answered, \"but I can give you all the panties you want. I have to admit, though, it's kind of a turn on knowing someone else wanted my panties. You think she'll use them to masturbate, too?\"\n\n\"Oh, I'm sure of it.\" I replied.\n\nAbout that time, Susan returned with some bottled water for Jan, and as she handed it to her, I tucked my cock back into my underwear, fastened my pants and sat down again on the bench in the dressing room. \n\n\"Hey,\" I asked Susan, \"where's those bras and panties we were looking at?\"\n\nIn just a few short seconds, Susan handed me the lingerie she found in the back room. I sorted through them and found the sheerest pair of white panties she had and the bra that matched. \"We'll take 'em.\" I said, pulling the tags off. \"These are perfect spanking panties,\" I added, \"Let me show you......\"\n\nAs Jan took a drink of her water, I reached out to gently stroke her butt and said \"Come stand in front of me, Jan. Let's get you ready to be spanked.\"\n\nWhen Jan moved in front of me, I held out the panties for her to step into. Steadying herself on my shoulder, she stepped into the panties and I settled them onto her hips. Using my hands, I smoothed them out, feeling between her legs more than I actually needed to. Then I proceeded to position Jan in front of Susan and spoke.\n\n\"Spanking panties need to be sheer for three reasons.\" I began. \"First, you want to give the illusion that the person being spanked is going to be able to maintain some level of modesty. As you can see, these panties won't really provide any modesty at all, but the illusion of it will heighten everyone's excitement -- especially the person being spanked. Secondly,\" I continued, \"the sheer panties will allow any onlookers to see her vagina and see that she's shaved, which is very important. Part of the excitement associated with a sexual spanking is the exposing of the person being spanked. Being spanked can be a humiliating experience and when you add the embarrassment of being exposed on top of the humiliation, the apprehension and excitement level of everyone will increase. Jan will have to shave herself bare before she gets her real spanking tonight. The two week growth she has on her pussy right now isn't acceptable for a spanking, and she knows that.\"\n\n\"Then lastly,\" I said, \"the sheer panties play a huge part in telling me when it's time to start the actual spanking. Here..... maybe I better let you see for yourself.\"\n\nI moved Jan into position and helped her down onto my lap facing the door of the dressing room where Susan was standing, but as Jan got into position, the mirrors on the dressing room wall gave Susan a perfect view of Jan's bottom as I moved her into position.\n\n\"The idea here,\" I began again, \"is that you let her keep her panties on for a while. Then you make her spread her legs like this....\"\n\nI used my hands to widen Jan's stance, lightly tapping the inside of her thighs to get her to move her knees apart until I was satisfied she would be on display enough.\n\n\"Once she's spread open, pull the panties tight across her butt and across her pussy lips. Then, all you have to do is look down and you'll have a perfect view of her pussy. Ideally,\" I continued, \"you don't want to start your spanking until you can see she's wet, and that's where the sheer panties come in. You can have her lay over your knees as long as you want..... you can touch her, stroke her, even masturbate her until she's visibly wet. My personal preference is to use a combination of touching and stroking to increase their excitement until I can see she's wet. Then, you can lower her panties to just below her pussy and begin the spanking. It's important that you pull down her panties enough to expose her pussy. That way, you can slip your fingers in her while you're giving her a rest between swats.\"\n\nThen, without giving Jan any warning, I raised my hand and slapped her butt cheek smartly. Jan wasn't expecting it and she jumped as she felt the sting. But as soon as I smacked her, I pushed two fingers into her vagina and started rubbing her g-spot. Almost immediately, you could see a perfect imprint of my hand and fingers on her bottom.\n\n\"Did you see how startled she was?\" I asked Susan.\n\n\"Yes.\" She answered.\n\n\"But notice how still she is now. That's because my fingers are massaging her g-spot and she likes the way it feels.\" I explained. \"She's willing to have more swats, too, because she knows I'm going to play with her pussy each time I stop the swats. Jan also knows that if she's a good girl I'll eventually make her cum and when I do, she's going to literally explode with a very powerful climax. So even if someone else is watching, she's willing to accept the humiliation and embarrassment of being exposed, fingered and spanked because she knows her orgasm is going to be phenomenal.\" \n\nI pulled my fingers out of Jan's vagina and slapped her other cheek -- this time twice in rapid succession. Again, it startled Jan and she flinched because of the sting. But as before, I immediately dipped my fingers into her pussy and used my thumb, as well, to diddle her clit. \n\n\"Ooooohhhhhh.\" Jan moaned.\n\nI let her enjoy my fingers as I masturbated her for about two minutes, then I withdrew my fingers and slapped the first cheek two more times. As Susan and I watched both of her butt cheeks turn red, I noticed how flush Susan looked. I would have loved to reach into Susan's panties and check her wetness, but I remembered the promise I made to Jan earlier and kept my hands to myself.\n\nI didn't want to give Jan many more swats because I knew she was going to get some good ones later tonight. I initially just wanted to tease her a little and of course, have a reason to expose her. The luck we had in meeting Susan had worked to the benefit of all of us, but, noticing the way Susan was reacting, I couldn't help but ask if she wanted to give Jan a few swats, herself.\n\n\"Do you mean that?\" Susan asked. \"That would be great! I would love to.\" She exclaimed. \n\nI brushed my fingers up and down through Jan's labia and stroked her clit for a few seconds. As I did, I noticed she had become considerably wetter after my offer to let Susan spank her. \n\nI asked Jan to get up and I helped her pull herself off my lap and stand next to me. The look in Jan's eyes told me she was excited and I gave her an understanding smile. She gave me a small grin in return and as I hugged her, I whispered in her ear - telling her to be a good girl and do as she was told.\n\nThen, I sat Susan down on the bench. As Jan started to bend down over Susan's lap, I stopped her and told her to take her panties off, saying, \"I think we can dispense with the panties this time. Perhaps having her totally naked would give us better access.\"\n\nWith that, I pulled Jan's panties the rest of the way off and put them in my pocket. Moving her around, I helped Jan get into position over Susan's lap. Copying me, Susan used her hand to tap the inside of Jan's thighs to get her to open up her stance. Without the restrictions of the panties around her, Jan really spread her legs apart; so much so that her pussy lips pulled apart and Susan and I could see the slippery pink entrance between her smaller lips.\n\nI surprised Jan when I kneeled down next to her and kissed her lips softly. \"Enjoy this,\" I said, \"I'm going to help you along if I can.\" \n\nAs Jan closed her eyes, I wormed my hand between Jan's belly and Susan's lap and then trailed it down between Jan's legs until I was comfortably cradling her sopping wet pussy in my hand. Looking up at Susan, I mouthed the words \"Four swats only\" and nodding my head, I gave her the signal that she could begin. \n\nWhen I saw Susan's hand raise in preparation for the first swat, I pressed my finger directly on top of Jan's clitoris and wiggled it around. \n\n\"Smack!\"\n\nJan felt the affects of my finger just as she felt the sting of Susan's hand as it slapped her bottom. \"Oh, fuck!\" Jan moaned. I was sure she wasn't in pain as Susan's swat wasn't anywhere as forceful as mine, but instead Jan was reacting to the sweet and sour sensation of being spanked and masturbated at the same time. She proved me right by rubbing herself against my fingers and trying to increase the pressure on her clit. ",
        "Susan surprised both of us when she slipped two of her own fingers inside Jan's open pussy and when she found Jan's g-spot, Jan let out a scream that told us she liked what we were doing. \"Oh, fuck yes!\" Jan screamed. \"Right there.... that's it.\"\n\nWhile Susan massaged her pleasure gland, I stroked Jan's clit and in a matter of moments, we had Jan panting and moaning saying \"Yes! Yes! Yes!\"\n\nSusan looked at me and I nodded again. As she pulled her fingers out of Jan's pussy and raised her hand for another swat, I pinched Jan's clit between my fingers and twisted her clit lightly. \n\n\"Smack!\" \n\nAs soon as Susan's hand hit Jan's bottom, she slid her fingers back into Jan's waiting pussy and pressed into her G-spot again. Jan started huffing and puffing and I began to worry that she might hyperventilate on us, but Susan pulled her fingers out and gave Jan another swat, this one noticeably harder.\n\n\"Smack!\"\n\n\"Oh!\" Jan groaned. I watched as Jan's back flattened out and her bottom turned up, signaling her readiness to receive Susan's fingers inside her pussy. Susan didn't disappoint her and in a matter of a second after delivering the swat, Susan's fingers were nestled deeply in Jan's vagina rubbing her girl spot. \n\nJan was sweating now..... little beads of perspiration appearing on her forehead and a light sheen of sweat on her back. I started to worry that we were going too far and I looked up to Susan and told her \"One more, that's all.\"\n\nSusan nodded, but kept her kept her fingers inside of Jan for a couple of minutes, rubbing her g-spot while I rubbed her clit. Looking down at Jan, her eyes were squinting, her mouth was open and she was breathing heavy. Then, Jan started to shake and moan, going from low pitch to high pitch crying: \"Oh Oh Oh Oh Oh Oh.\"\n\nSusan yanked her hand out of Jan's vagina and delivered one last swat. \n\n\"Smack!\"\n\nAs soon as Susan's hand made contact with Jan's butt cheek, her fingers dived right back into her pussy and started rubbing her g-spot. Seeing Susan's fingers slip back inside, I started tapping Jan's clit with my finger, something Kenny told me was guaranteed to make her cum. And he was one hundred percent right. The second I started tapping, Jan went off like a rocket, holding her breath, bucking and thrashing all over Susan's lap. I almost expected her to fall onto the floor, but between the two of us, Susan and I kept her in place and let her thrash until her orgasm was over and she lay in a limp heap over Susan's lap.\n\nI removed may hand from between Jan's legs and Susan slowly pulled her fingers out of her pussy. \"Oh My Gawd,\" Susan whispered. \"That was incredible!\"\n\nJan was utterly and totally exhausted. She was covered with sweat and she was lying there trying to regain her breath. I leaned down to kiss her cheek and although she didn't open her eyes, she smiled, and that told me she was okay.\n\nWe let Jan rest for a few minutes on Susan's lap. Neither Susan nor I said anything, but, Susan took advantage of the moment to enjoy the view of Jan's exposed, wet pussy. I watched as Susan slowly raised her fingers to her mouth and silently licked each one of them clean. When she was done, she looked at me and smiled. Knowing exactly how wonderful Jan tastes, I simply smiled back. \n\nFinally, I asked Susan to help me get Jan on her feet and once she was standing, I put my arms around her and held her. In the mirror, I could see the red marks on her buttocks from the swats she received, but what was most impressive was the wetness that was running down the inside of her thighs. \n\nAs I held Jan, I asked Susan to pick up Jan's clothes from the floor and put them on the bench so I could dress her. \"How much do I owe you for the lingerie?\" I asked.\n\n******\n\nI walked Jan to her car when we left the mall. She looked worn out and exhausted. \"Still want me to come over?\" I asked.\n\n\"Of course,\" Jan answered, \"I'm sure I'll need help shaving..... and I still have to masturbate for you..... and you're supposed to spank me and fuck me...... and we still have to call Kenny tonight.\"\n\n\"Okay.\" I replied. \"Let me run by my place and pick up a few things and I'll see you in about forty five minutes.\"\n\nAs she got into her car, I kissed her cheek and told her she was wonderful tonight. Then, before she closed the door I handed her a small piece of paper with Susan's phone number and the words \"Call me anytime.\" "
    ],
    "authorname": "Pro_Ball_Player",
    "tags": [
        "spanking",
        "panties",
        "vagina",
        "pussy",
        "masturbate",
        "exhibitionist",
        "humiliation",
        "exposed",
        "g-spot",
        "squirt"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/spanking-kennys-wife-ch-06"
}