{
    "title": "Mutual Masturbation Pt. 02",
    "pages": [
        "Gabby sat naked on the lounge room floor. She was propped up against the sofa and the sunlight streamed in through the window, bathing her in light and warmth. She was breathing heavily as the remnant of the orgasm that had just ripped through her subsided. She relaxed and looked up at the TV screen where a young woman was being fucked on a kitchen table, surrounded by men waiting their turn.\n\nThis was her Friday morning ritual if she stayed at her boyfriend Jon's house. She would wait for Jon and his housemate Dave to go to work and then get up, fix herself some breakfast, then sit by the window with the curtains open to watch porn for a couple of hours. Recently, Alice had moved in, but she was normally gone by the time Gabby got up. Where she went was a mystery to Gab as Alice pretty much kept to herself. All Gab knew was that the house was empty for the day, and she could masturbate for hours.\n\nJon, Dave and Gab also had a sexual agreement. Gab and Dave could fuck so long as Jon was there. It suited everyone. Gab knew that Dave had long had a crush on her, and she had always enjoyed his attention. She also loved fantasizing about having threesomes with guys, so this current arrangement was perfect. She was worried that when Alice moved in things might change.\n\nGabby didn't really know Alice very well, but she had gotten a chance to learn more about her the night before, when the four of them went to the pub for a meal and a few drinks. What she did know was that Dave and Jon would dearly love to fuck their house mate. Fortunately, after a few drinks, Alice loosened up and told them about the trouble she was having with her boyfriend. She had to get away from the situation and relax, so she had gone to stay with her friend Tammy for a few days. It had been a good night, Gabby thought. Although Alice was still an enigma, she was certainly no threat to Gabby's arrangement with Jon and Dave.\n\nGab looked down at her pussy. It was smooth and bare, and wet from her own juices. Sometimes after she came, she wouldn't be able to touch it for ten minutes as it was so sensitive. This time, however, she eased her middle finger between the soft folds and began to slowly rub it up and down. She loved how silky and smooth it felt to touch now that it was shaved bare.\n\nShe looked up at the screen just as a man was pulling his cock from the girl's pussy and started shooting ropes of cum over her belly. Gab wondered what it felt like. She imagined having a cock of her own and aiming it at the young starlet's face, letting it erupt over her soft skin.\n\nWhat would it feel like? she thought. Jon had told her it's like his soul is squirting out the tip of his dick and that the only thing he can feel in his whole body is his erection as it expands and explodes. She wondered how true that was; he did have a colorful way of explaining things.\n\nShe lightly circled her finger around her clit and let out a soft moan. She was now thinking about fucking Dave in front of Jon. If she was honest, she probably liked Dave's cock more than Jon's. It had a nice curve to it and when he was fucking her from behind, she knew she would cum. Being watched by Jon as she came on Dave's cock was such a thrill.\n\nShe reached down with her left hand and pushed two fingers into her soaked pussy. She loved teasing herself like this. It was time to edge toward another orgasm before riding her rabbit toy.\n\nShe thought back to Dave's cock. While she loved being watched as she was fucking, she also loved giving head. She thought about how silky the stretched skin felt on her tongue. She'd kneel between them and lightly run the tip of her tongue up Dave's shaft. Eventually, it would reach the head and she would swirl her tongue around the top and the swollen glands. Finally, she would suck the head into her mouth with a satisfying suction sound, all the while jerking the other cock with her hand.\n\nShe opened her eyes and looked back at the screen. The lovely starlet was now being fucked relentlessly from behind. Her pussy lips were sucking on the large shaft that was pumping in and out of it.\n\nGab felt the warm sun streaming in through the window on her naked body. Life is good, she thought as she slid two fingers into her pussy.\n\nShe gently fingered herself for a few minutes while watching the action on the screen. She let out a soft moan every few seconds as her fingers pushed in between the soft, wet lips.\n\nNow she felt ready for something a bit bigger inside her. She lifted herself up onto her knees and spread them apart. The warm sunlight created a beautiful shadow of her body on the floor.\n\nShe looked down at her pussy as she began to massage the soft, moist folds and picked up her rabbit vibe with her other hand.\n\nGabby started the vibrator and set it in motion. The little balls were spinning around in the shaft and the head was moving in circles. She loved her rabbit vibrator.\n\nShe put the dildo on the floor and held it with her hand so that it was pointing straight up. She then gradually lowered herself onto the pulsating shaft. As she eased herself down, she felt the twirling head spread her love tunnel open as it pushed deep inside her. She let out another moan as she lifted herself off the toy.\n\nShe loved the feel of cock, and she loved fucking Dave and Jon at the same time. Her rabbit was different though; it was thicker and longer than both of them. She wondered what a big porn-cock would feel like, pounding away inside her.\n\nShe looked up at the TV screen as she lowered herself down on her rabbit again. The camera was looking down at the young porn starlet lying on her back as a thick cock was pumping in and out of her pussy. She would love to try one of those massive porn cocks. God, that would feel good!\n\nGab let out another moan as she pushed down on the vibrator and felt it stretch her pussy deep inside.\n\nAs she lifted herself off the vibe again, she looked up at the doorway and froze as she saw Alice standing there in a bathrobe.\n\n********************************************************************************\n\nIt had been a couple of weeks since Alice had fucked Tim and Dan. Something had awoken inside her and she was now constantly horny. She couldn't get the images out of head. She almost wondered if she was exaggerating the size of Tim's cock in her memories. However, once Tim had connected with her online and switched on his webcam, she was reminded of the length and girth and that it was very, very, real.\n\nHer house mates, Gab, Jon and Dave had asked her out to the local bar on Thursday night. At first, she was reluctant; the last thing she needed was to be slightly hungover and even more horny. But she did think it would be good to get out of the house for a bit and try to take her mind off being fucked for a few hours.\n\nAfter a few drinks, she had loosened up and was enjoying her time with her house mates. They were getting to know Alice and she was keen to show them that she wasn't always a stuck-up prude. When the subject turned to sex, she admitted to them all that she had once fucked two guys at the same time. Although she left out all the detail, and particularly how recent it was, she could tell by the looks on their faces that none of them believed the prudish and shy girl would be that adventurous.\n\nThey got home before midnight and although it wasn't late, Alice had definitely had a bit too much to drink. Inevitably, that meant she would wake up horny, her pussy soaked, and she would have a lot of trouble getting motivated enough to get out of bed and go to work.\n\nThe next morning, her alarm went off and she rolled over and groaned. Her mind was filled with images of Dan and Tim stroking those nice, big cocks, of her sitting on her knees as Tim fucked her from behind, seeing their cocks erupt all over her, and of Tim fucking Tammy on the floor.\n\nGod, she thought, I saw my best friend being fucked. She rolled over to pick up her phone. All she could think about was the image of Tim's cock slow-fucking her friend. She imagined what it would be like to have someone watch as she fucked.\n\nUrrrrgggh, she thought. She taped out the message on her phone. Sorry, I'm sick today, can't come in. Of course, her phone picked this one time to auto correct \"come\" to \"cum\" and as she retyped the word, she was thinking about cleaning the guys' cum off her skin.\n\nShe dropped the phone beside her and almost immediately it lit up with a new message. Alice ignored it for a few seconds, thinking it must be a reply from her work. She didn't want to deal with the guilt of not going in because she had a hangover.\n\nShe sighed and picked up her phone. Her heart thumped out of her chest when she saw that the message was from Tim.\n\nHey, I'm in your neck of the woods. Would you like to catch up for a fuck session today? Just let me know. Can do any time.\n\nAlice let out a moan as felt huge butterflies in her stomach.\n\nShe quickly typed her reply: Fuck, yes! When can you get here?\n\nShe held the phone to her nipple and almost immediately, it buzzed with a reply.\n\nCan grab an uber now if you like?\n\nAlice's body was on fire with a surge of arousal as she replied: Ok, give me 45 minutes so I can shower. No one is home. Will leave the door open.\n\nShe sent her address and then immediately started rubbing her pussy. She couldn't believe her luck; no one was home, she was hungover and horny, and Tim was on his way with his glorious cock.\n\nShe wanted to fulfill her fantasy and have him walk in on her having a wank.\n\nShe got up and quickly brushed her hair. She planned on having a quick breakfast, shower, and come back to her room to start her play session.\n\nHer heart was beating hard in her chest as she opened her door and headed out into the hallway. It was then that she heard the porn playing in the lounge room.\n\nJesus, was he already here?\n\nShe crept down the hallway and looked through the open door into the lounge room.\n\nGab was riding her rabbit toy, completely naked, the sun bathing her pale skin in morning light. She hadn't noticed Alice at the doorway.\n\nFuck, thought Alice. Dammit!\n\nShe was going to creep back to her room. But something made her stay; she couldn't stop staring at Gab as she rode the rabbit toy up and down.\n\nGod, she's got nice tits!\n\n********************************************************************************\n\n\"Shit, Alice, shit, sorry,\" was all Gab could say as she saw Alice in the doorway.\n\nShe was riding her toy and the last thing she wanted to do was stop. She froze just as she was about to push down on the rabbit toy.\n\n\"Dammit, please just give me a few minutes,\" she panted.\n\nShe looked down at her soaked pussy. Somehow getting caught by Alice had taken her straight to the brink of an orgasm.\n\nShe looked up again. Alice had pulled the bathrobe open and was staring directly at Gab's tits. \"Ohhhh fuck,\" moaned Gab as she dropped down onto the toy again.\n\nAlice looked up from Gab's tits and locked eyes with her. \"Will you watch me fuck?\" she whispered.\n\nGab looked confused; she lifted herself off the toy once more. \"Whaaa?\" she gasped as she sunk down onto the toy.\n\n\"My friend is coming over, and I want you to watch me fuck him,\" Alice whispered again.\n\n\"Ok, yes, sure thing,\" Gab panted as she slid back down on to her rabbit, \"but you have to watch me cum.\"\n\nAlice nodded slowly as she began to circle her clit with her middle finger.\n\nGab rode the toy for a few seconds before falling forward as her body convulsed into an orgasm. She let out a gasp as she felt the waves of pleasure rip through her body.\n\nOnce the orgasm subsided, she lifted herself off the toy and rolled over onto her side. She looked up at Alice. \"So, who do you want me to watch?\"\n\nAlice sat down on the sofa and looked up at Gab. Her robe had fallen open to expose her round tits and hard nipples. She opened her legs slightly and again started to gently rub her clit.\n\n\"My friend Tim, he's coming around soon, and um, I want you to watch me fuck him,\" she said.\n\nGab looked down at her soaked pussy and already felt butterflies in her stomach as she replied. \"Um, sure, but, I don't know, I shouldn't really do it without telling Jon,\" she replied.\n\n\"No, please don't. Just watch. You don't have to join in,\" said Alice softly.\n\nGab looked around the room. She was horny as hell and would absolutely love to watch Alice fuck. She felt guilty about not letting Jon know first but came to the conclusion that it was harmless fun, and he didn't need to know.\n\n\"Ok,\" said Gab, \"so, who is this, Tim? Is he your fuck buddy?\"\n\nAlice stared straight at Gab's tits as she replied, \"Not exactly. Well, maybe... I don't know. He's the guy I had the threesome with. Um, he has a massive porn cock.\"\n\nGab felt the butterflies doing backflips in her stomach. She propped herself against the chair and opened her legs.\n\n\"Ohhhh,\" she said, \"this sounds like fun. When is he coming?\"\n\n\"In about 15 minutes. I was going to leave the door open and wanted him to catch me having a wank, but this is more fun,\" said Alice.\n\nGab started rubbing her pussy again as she spoke. \"So, he's got a big cock?\" she asked.\n\n\"Yeah,\" replied Alice with a sigh, \"huge.\"\n\n******************************************************************************\n\nTim had woken up horny in his hotel room. He was here for a conference which had finished, and he had a few hours to kill before he went home. He wasn't going to contact Alice, as he had his eye on one of the women at the conference. And while they had danced and had a few drinks at the after-conference function, she had backed away when she felt the massive bulge between his legs on the dance floor.\n\nHe ended up going back to the hotel room alone. He woke up and thought about jacking off and just leaving it at that but then decided to try his luck with Alice. Although it was a Friday, and he knew she was either at work or Uni, you never knew.\n\nHe sent the message and a few minutes later, got the eager reply.\n\nThey exchanged a few texts and Alice sent him her address. She would leave the door unlocked and gave him directions to her room, so he could just walk in and find her naked and masturbating on her bed.\n\nAwesome, he thought. He quickly showered and packed his bag, checked out, and called a taxi.\n\nAlice was going to leave the door open and while she had said 45 minutes, he really wanted to surprise her in the shower.\n\nHe climbed into the back seat of the taxi and tried to adjust himself. Even semi-erect, his cock was thicker and longer than most guys are fully erect.\n\nThe ride was around 20 minutes and Tim had to keep adjusting himself. He'd hoped it would have gone down by now but the thought of fucking Alice and feeling that amazing pussy again was keeping it hard. As they pulled into the street, Tim noticed a workman's van pulling away from the address. He hoped they weren't going to get interrupted.\n\nAt last, they got to the address and Tim got out awkwardly and walked up toward the house. He noticed the curtains were open and hoped it was only Alice that was home.\n\nThe door was unlocked and as he opened it, he decided he'd had enough of trying to walk in jeans with a hard cock doing its best to be let free. He closed the door behind him and quickly undressed. The relief as his cock sprang free was fantastic and he gave it a few gentle, quick strokes to soothe the tight skin.\n\nHe looked around the entrance and went through the kitchen. He could already hear porn playing on the TV. As he stepped into the living room, he sucked in a breath.\n\nAlice was sitting naked on the sofa, her legs spread open and her fingers circling her clit. But what caught his eye was the second naked girl sitting on the floor next to her. She was gorgeous--nice round tits, beautiful happy face, and a silky-smooth, dripping-wet pussy.\n\n\"Um, hi,\" he said.\n\n\"Hi, Tim,\" purred Alice.\n\n\"Holy fuck,\" said Gab, \"you weren't joking.\"\n\nTim instinctively circled his thick shaft with his fingers and started gently stroking it. \"Well, this is a surprise,\" he said.\n\n\"I told you it was a porn cock,\" said Alice. She locked eyes onto Tim's cock as his hand lightly pumped the skin back and forth.\n\n\"Fuck,\" said Gab, \"that head!\"\n\nTim turned slightly to give Gab a better view of his cock.\n\n\"So, ah, I'm Tim,\" he said. \"Nice to meet you.\"\n\n\"Nice to meet you too. I'm Gabby,\" she replied as she slid her fingers into her pussy.\n\n\"Gab is going to watch us fuck, if that's ok?\" asked Alice as she slid off the couch and walked on her knees over to Tim.\n\n\"Yeah, sweet, that's fine,\" said Tim.\n\nAlice kneeled before Tim and reached out to wrap her hand around the thick shaft. She gently pulled him toward her and flicked her tongue over the huge bell-shaped knob.\n\nBoth Tim and Gab let out a groan.\n\nAlice held the big cock up against Tim's belly and licked from the base of his balls to the tip of his cock.\n\n\"Jesus,\" Tim gasped.\n\nAlice continued licking up and down and started rubbing her pussy with her free hand.\n\nTim grabbed the base of his cock and squeezed it. The head bulged even more, and he looked over at Gab. She looked so hot, he thought.\n\nAlice tilted her head back and Tim lightly slapped his engorged knob against her tongue.\n\n\"Fuck, that's hot!\" whispered Gab.\n\n\"You like watching this?\" said Tim.\n\n\"Yeah,\" said Gab.\n\nTim let out a sigh as Alice washed her tongue around the tip of his cock. He kept his eyes locked on Gab as she rubbed her smooth pussy and stared directly at his dick.\n\n\"So, do you girls always masturbate together and watch porn?\" he asked.\n\n\"Um, no,\" said Gab, \"Alice caught me this morning. We've never done this before.\"\n\nTim felt a surge through his cock as Gab spoke. Damn, I want to fuck her, he though.\n\n\"So, you're just watching today then?\" he asked.\n\n\"Yeah, Alice just wanted me to watch,\" she replied. \"I've got a boyfriend,\" she quickly added.\n\nAlice dropped back on her hands and arched her back. Tim stepped forward and held his cock up to his belly, so his balls dangled down into Alice's mouth.\n\n\"Jesus,\" said Gab, \"fuck, that looks good.\"\n\n\"Do you like what you see?\" asked Tim.\n\n\"Oh my god, yes,\" panted Gab.\n\n\"Is your boyfriend's cock as big as this?\" he asked.\n\n\"No, no fucking way,\" replied Gab.\n\nTim started sliding his hand up and down the shaft as Alice licked his balls.\n\n\"Do you like big cocks, Gabby?\"\n\nGab let out a sigh at the sound of her name from this older, muscular man with the huge cock.\n\n\"Yeah, god yes,\" she replied.\n\nTim was staring straight at Gab's tits as he spoke to her. His hand was gently pumping the shaft up and down as Alice licked and sucked on his balls. \"Fuck, this feels good,\" he said as he smiled at Gab.\n\n\"It looks pretty good!\" said Gab.\n\nAlice dropped her head back and looked up at Tim. \"I need you to fuck me. Just let me go and get some lube,\" she said.\n\nAlice shimmied herself out from under Tim and stood up. \"Don't run away,\" she smiled.\n\nShe headed down to her room and Tim sat down opposite Gab.\n\nHe held his cock so it was pointing straight at the ceiling and again started gliding his hand over the wet shaft.\n\nGab watched Tim and kept fingering her pussy.\n\n\"So is your boyfriend at work today?\" he asked.\n\n\"Yeah, he works on Fridays, so I wait till he's gone and then have a nice session on my own,\" she replied.\n\nDamn, I want to fuck this girl, thought Tim. She looked so good! Alice was good, and he was looking forward to fucking that hot pussy of hers, but there was something about Gab.",
        "\"Have you ever wanted to be caught by someone while you play?\" he asked as he swirled his fingers over the mushroom shaped knob.\n\nGab paused for a moment before she answered. \"Fuck, yes,\" she said as she let out a sigh.\n\nTim watched as she worked her fingers into her pussy. \"Are you going to cum soon?\" he asked.\n\n\"I'm going to cum a lot,\" Gab smiled.\n\nAlice came back into the room holding a tube of lube. She stood next to Tim and squirted some over the tip of the head. Tim massaged the liquid into his skin. It felt great on his cock as he slid his palm over the slick shaft.\n\n\"How do you want to fuck me?\" she purred.\n\n\"Doggy,\" replied Tim. He wanted Gab to get a really good view of him fucking Alice.\n\nAlice dropped to the floor in front of Tim on all fours. She lowered herself onto her elbows and lifted her round butt in the air.\n\nTim was gliding his hand over his cock and got a great view of Alice's inviting pussy lips as she slid her fingers to hold her lips open for his cock.\n\nGab had shuffled around on her knees next to Alice as Tim stood up from the sofa. He could hear the wet sounds of both girls masturbating. His cock was throbbing and pulsing up and down as he stood behind Alice. Gab was only inches away from the bobbing head and for a moment, he thought she might stick her tongue out and lick it.\n\nHe dropped down onto his knees and guided the cock to Alice's open pussy. He grabbed the shaft just below the head and started rubbing it over her soft lips. Alice let out a big moan as Tim teased her with the cock head.\n\nHe looked up at Gab who had now shuffled even closer to get a view. Her tits were heaving up and down with her heavy breathing and he could hear her heart pounding.\n\nHe continued to rub the head of his cock around Alice's pussy lips. He could feel the heat and wetness and the glorious softness of her skin through his engorged head.\n\nHe slowly pushed the tip of his cock into Alice's eager pussy.\n\n\"Fuck, yes,\" she gasped.\n\nAs the knob disappeared into her, Tim stroked the shaft for a few seconds and helped the tip inside her warm pussy. He pulled it out slowly and then gripped the base of his cock, slapping the head a few times on her arse cheeks.\n\n\"Fuck, that's so hot,\" whispered Gab. She was now working her clit in circles and biting her lip.\n\nTim pushed the tip of his cock into Alice's pussy and began fucking her with just the head.\n\nAlice was now panting and groaning with each small thrust. \"Push it in, push it all in,\" she pleaded.\n\nSlowly Tim did as she asked. He felt her hungry pussy lips sucking his cock in. He looked down at his he sank deep inside her.\n\n\"Fuck,\" gasped Gab.\n\nTim slowly pulled his cock out and as he did so, Gab put her finger on the top of his shaft. She scooped up some of Alice's juices and licked her fingers.\n\nTim pulled his cock all the way out and Gab immediately tried to wrap her hand around it.\n\n\"Holy shit, that's thick,\" she said. She angled it down as Tim pushed forward and she used his cock to massage Alice's clit.\n\nTim wanted to fuck now. \"Push it in,\" he said to Gab.\n\nShe gripped his cock under the head and pushed it into Alice, who let out another gasp.\n\nThis time Tim grabbed her hips as Gab let go of his cock.\n\nHe thrust inside her and began to fuck her. Alice cried out in pleasure as his cock pounded her pussy.\n\nHe looked down at his cock thrusting in and out of Alice. Her pussy lips were being sucked in and out with each thrust.\n\nHe looked back up and straight into Gab's lovely eyes. \"She has the best pussy I've ever fucked,\" he said as he reached up and started massaging Gab's tits.\n\nGab let out a long moan and started to shake as an orgasm ripped through her body.\n\nTim felt his own orgasm build, so he reached down to grip the base of his cock and squeezed it shut.\n\nAlice cried out that she was cumming and began pushing back hard on his cock. Tim had to clamp down hard on his shaft as he didn't want to cum before she had finished.\n\nHer body went limp, and he pulled his cock out as she collapsed on the floor.\n\nGab also slumped onto her back and lay on the floor. Her chest was heaving as she got her breath back.\n\nTim was still gripping his cock as he surveyed the two satisfied girls in front of him.\n\n\"Do you want to try this cock, Gab?\" he asked.\n\nAt first, she didn't say anything. He started to release the pressure on his cock as she lifted herself to her elbows.\n\nShe kept her eyes locked on his dick for a few seconds.\n\n\"Yeah, fuck it! Yes. Is that ok, Alice? she asked.\n\n**********************************************************************\n\nGab's heart was thumping as Tim asked her if she would like to fuck. As soon as she had seen his massive cock, she wanted to play with it and feel it inside her.\n\nShe loved her mutual masturbation session with Alice earlier, watching porn and hearing Alice talk about the threesome she had with the two strangers. Gab had been curiously attracted to Alice since she moved in. There was something about her reserved demeanor that Gab found sexy. While she had never been with a girl before, and mostly watched boy-girl porn, she was turned on at the thought of masturbating with one.\n\nAs they waited for Tim to show up, Gab got a good look at Alice as she masturbated on the sofa opposite her. She had a great natural body, lovely round tits, and a furry mound with wispy brown pubes.\n\nShe also loved looking at herself while she masturbated and being naked in the room with another girl doing the same thing made her horny as fuck.\n\nShe already had several mini orgasms before Alice caught her and then another one in front of Alice while she stood in the doorway.\n\nGab had huge butterflies in her stomach and her nipples were hard as a rock when she heard the front door open. Her heart was pounding so hard in her chest she could see her tits shaking.\n\nWhen the older man walked into the room unexpectedly fully naked, and fully erect, she sucked her breath in.\n\nHe was tall and muscular, dark and good looking. But it was that long, thick cock sticking proudly out from his body, with the gloriously mushroom-shaped head that caught her attention. She felt her body surge with excitement as she pressed a finger deep into her wet folds.\n\nShe wondered what it would feel like to have his thick, powerful dick buried inside her. She had been fascinated with large cocks for a long time now but had resigned herself to the fact that Jon's and Dave's were as big as they came, and the porn cocks were unicorns. Not that she didn't love fucking those two, especially Dave, but this is what she had fantasized about.\n\nShe was definitely attracted to Tim, even without his big cock. She watched Alice go to work with her lips and tongue. The fact that he was casually talking to her as she watched and masturbated was a massive thrill.\n\nFinally, she got to watch as he fucked Alice doggy style and couldn't resist a feel as he pulled his cock out of her pussy. It felt weighty, hot and strong in her hand. She could feel the blood pulsing to the beat of his heart through the shaft and she had trouble wrapping her fingers around it. She was fascinated by the shiny cone-shaped head and wanted to lick and suck it like she had seen Alice do earlier.\n\nWhen Tim looked at her and asked her if she would like to fuck, her stomach tensed, and she went weak at the knees. Of course, she wanted to fuck! She felt guilty about fucking another man without Jon being there but right now she didn't care.\n\n\"Yeah! Fuck it, yes. Is that ok, Alice?\" she asked.\n\nAlice rolled over onto her back. Her chest was flushed and her body was shiny with sweat. She reached down to her furry pussy and started to masturbate as she looked up at Gab. \"Yeah, I want to see you fuck him,\" she said.\n\nGab leaned over and grabbed Tim's cock with both her hands. She massaged the balls and stroked the glistening shaft. She started to flick her tongue over the tip. She could taste Alice's sweet juices as she tried to take the cone-shaped head into her mouth.\n\nShe felt Alice's hand on her butt cheeks and then felt two of her fingers slip into her wet pussy. She let out a groan as Alice began to finger her. She pulled Tim's cock from her mouth and rubbed it all over her face. With the heat of his hard erection against her skin and the intoxicating sweet smell of Alice's pussy, Gab had never felt this excited before.\n\nIt was almost too much to bear. She quickly rolled over onto her back, opened her legs and lifted her butt off the carpet so her pussy was angled straight up in the air.\n\n\"C'mon, Tim, fuck me,\" she said as she looked straight into his eyes.\n\nTim shuffled forward on his knees and put an arm under Gab's lower back. He lifted her up slightly and with his other hand, he angled his cock straight at her inviting open pussy lips. He pushed the head into her and looked straight into her eyes as it sank into her.\n\nGab felt her pussy open to take his cock, and she let out a long gasp. \"Ohhh, Jesus Christ,\" she said as his cock sank deeper inside her.\n\nAlice sat up against the couch and was thrusting her fingers into her pussy with one hand and rubbing her clit with the other. \"Do you like it?\" she panted.\n\n\"Yes, fuck yes, yes,\" cried Gab. Tim began to slow fuck her, each thrust deeper than the last.\n\n\"Is this better than your boyfriend's?\" he asked.\n\nGab slowly nodded as he pushed in and out of her.\n\n\"Say it,\" he said.\n\n\"I love it,\" answered Gab.\n\n\"But is it better?\" he asked as he picked the pace up.\n\n\"Yes, fuck, yes! It's better than my boyfriend's,\" she said.\n\nTim began to thrust harder into her.\n\n\"God, it's so much better, it's perfect,\" sighed Gab.\n\nTim began to fuck her hard and Gab closed her eyes and rolled her head back.\n\nShe felt her orgasm building.\n\nAlice was also panting. \"Cum all over her, Tim,\" she said. \"I want to see you cum all over her.\"\n\nGab felt a powerful orgasm rip through her, and she tensed up as Tim kept pounding into her.\n\nHis arm gripped her hard from underneath as pushed deeper into her than anyone had before.\n\nShe thought the orgasm would subside, but it was quickly followed by another one.\n\nTim began to groan and moan as Gab looked up at him. He was watching his cock thrust in and out of her bald pussy.\n\n\"Fuck, I'm going to cum!\" he said.\n\nHe pulled his cock from her pussy and arched his back, so it was pointing straight up. Gab lifted herself on her elbows so she could watch him as he pumped the shaft with his fist. She heard Tim suck in his breath as big ropes of cum shot out into the air and landed all over Gab's tits. He gasped as the final one made a huge arc and landed on Gab's lower neck.\n\nAlice let out a huge groan and started to cum. Gab looked over and saw Alice staring at the cum that had landed on her tits as she tried to keep her eyes open, the orgasm tearing through her body.\n\nGab looked over at Tim as he started to relax. His cock was still rock hard and pulsing to the beat of his heart.\n\n**********************************************************************************\n\nTim looked at the girl covered in cum in front of him.\n\n\"Fuck, that was so good,\" he said. \"You girls are hot as fuck.\"\n\nHe leaned back onto his arms and looked down at his cock. It was hard as a rock and pointing straight to the ceiling. There was a drop of cum left on the tip and he tensed his stomach muscle, so his cock bobbed up and down.\n\nHe looked over at Alice. She was still gently sliding her fingers in and out of her beautiful pussy. While she had one of the best vaginas he'd ever fucked, there was something about Gab that drove him over the edge. He knew as soon as he laid eyes on her that he wanted to cum on her more so than on Alice.\n\nHe looked back over at Gab and her eyes were locked on his pulsing cock.\n\nShe lifted herself to her knees and shuffled over to Tim. The cum was dripping down her tits and belly. She gently reached out and stroked the soaked shaft. Tim shuddered as his cock was now ultra-sensitive.\n\n\"Woah, careful,\" he said.\n\n\"Let me show you a trick,\" Gab whispered.\n\nShe held his hand and lifted him up as she squatted back on her feet. His cock was still pulsing as she gently ran her tongue over his balls. It was so light he could barely feel it apart from the little lightning bolts that seemed to shoot through his body.\n\nSlowly, Gab licked and circled his balls with the tip of her tongue. Eventually she ran it up his shaft, just barely scraping the skin. As she got to the glands under the thick, engorged head, Tim shuddered. She could now taste his cum as she gently licked the point of his cock with the tip of her tongue.\n\n\"Holy fuck,\" said Tim.\n\nGab smiled up at him as she ran her tongue back down his shaft.\n\n\"Fuck, that's hot,\" said Alice as she once again started to massage her tits.\n\nThis time as Gab's tongue began to journey back up his shaft, she gripped the base of his cock with her hand.\n\nShe paused just before she got to the head. \"I don't want this thing going down just yet. Those balls look like they still have more cum in them,\" she whispered softly.\n\n\"Jesus, fuck,\" Tim said as he looked down at Gab. He felt his cock surge as he looked down at her cum-covered body. This chick is pure sex, he thought.\n\nGab gripped his cock and began to run her lips along the side of the shaft like a harmonica.\n\nShe looked over at Alice. With his cock pressed against her lips, Tim heard her muffled voice as she asked Alice to join her.\n\nAlice smiled and crawled over. Tim watched as her tits hung low and swayed back and forth as she made her way across the floor.\n\nShe knelt opposite Gab and together the two girls licked each side of Tim's cock. When they got to the tip, they both began French kissing each other.\n\n\"Fucking hell,\" Tim said.\n\nGab released the lock she had on Alice's lips and went straight under his cock to his balls. She rubbed her tongue all over his balls as Alice popped the head of his cock into her mouth and began sucking on it.\n\n\"Jesus, fuck,\" said Tim as he sucked in his breath. The sensitivity was gone now, and his cock was once again rock-hard and feeling incredible.\n\nHe heard Alice moaning and looked down. She had two fingers pumping in and out of her pussy as she licked his balls. He could feel the vibrations of her soft groans through his cock.\n\nGab was now wanking the shaft and sucking hard on the head. Tim knew he wouldn't be able to last much longer. He was impressed at her coordination as she was also rubbing her clit.\n\n\"Jesus, fuck! You girls are going to make me cum again.\"\n\nGab gripped the shaft a little harder and started to slide her hand up and down in time with her mouth on the head. Alice gasped as she started cumming.\n\nThis was too much for Tim, and he suddenly felt his cum rip through his shaft and out of the tip of his cock. He grabbed Gab's head and she started slurping down hot cum as he let out a big moan.\n\nHe watched as Gab made sure not to spill any cum and swallowed his load. She leaned back and looked up at Tim.\n\n\"Mmmmm, now I've got a nice taste in my mouth,\" she said.\n\n\"Holy fuck,\" he said after he regained his composure.\n\nGab started quickly fingering her pussy as she looked up at Tim.\n\n\"I'm going to cum,\" she gasped as she released her grip on his cock and fell forward. He watched as she shook with pleasure on her fingers.\n\nEventually, she rolled over onto the carpet. Alice had also propped herself against the sofa.\n\nThey stayed silent for a few seconds as Tim looked from girl to girl.\n\nAlice finally spoke.\n\n\"Shall we go shower together?\"\n\n\"Fuck, yes,\" said Gab.\n\n\"Yep,\" said Tim cheerily.\n\n**********************************************************************************\n\nEarlier that morning, Dave had realized he left some of his tools at home and had to quickly jump in his car and head back to pick them up. Lucky he was working about five minutes away from home and shouldn't be noticed while he was away.\n\nAs he pulled up outside the house he shared with Jon and Alice, he noticed the front curtains were wide open. He knew Gab was likely still there as she had stayed the night and didn't work on Fridays.\n\nHe remembered Gab telling him about her morning sessions when she had the house to herself. She liked to watch some porn, open the curtains so the sun would stream in, and imagine there was some guy spying on her as she masturbated in front of the TV.\n\nHe got out of the car and thought it might be fun to fulfill her fantasy. If she was watching, he could get a good view for a few minutes and then tap on the window.\n\nHe got out of the car and went around the side of the house in case any neighbors were watching. Slowly, he crept back around the front but behind the row of bushes, and got to the big tree that was between the bushes and the house. He peeked out from behind the tree and his heart almost leapt out of his chest once he got a view of what was going on inside.\n\nHe saw Gab, kneeling on the floor, riding her favorite toy. Her tits were bathed in the morning sunlight and her hard nipples cast small shadows as she humped the toy. But standing in the doorway watching her was a naked Alice.\n\nDave's cock was instantly rock-hard and painfully pressing against his jeans. He quickly unzipped his pants to let it free and gripped the shaft. As he began to slowly wank, he looked back up into the lounge room. Alice was standing there and slowly rubbing her furry pussy. Her tits looked every bit as good as he thought they would. They were larger than Gab's and hung lower. He imagined squeezing them against his cock and titty-fucking her.\n\nShe said something to Gab, and she looked up and froze. He knew her well enough to know from the look on her face she was about to cum. He couldn't work out what Gab said back to Alice but within a few seconds, she was riding her toy again.\n\nDave watched as Alice said something and Gab looked confused and then Dave could tell she had said yes to something. He watched as Alice fully opened her robe and began to rub her pussy while she watched Gab.\n\nBy now Dave's cock was literally throbbing in his hands. He had never seen something so hot before. He gripped the shaft put held his index finger underneath the swollen head so that it flicked against the sensitive glands there.\n\nFuck, he thought, I can't stay. He was already going to be late.\n\nHe saw Gab start to cum on her toy and Alice was now fingering her pussy as she stood in the doorway.\n\nHe felt his own cum start to boil in his balls and slowed his stroking down.\n\nHe watched as Alice walked over to the sofa and sat down, her robe opened and exposing her naked body. He stared at her tits as they fell slightly to the side. Alice started to rub her clit again as she spoke to Gab.\n\nDammit, he thought as he picked up the rhythm on his cock again.\n\nHe had never felt the urge to come this quickly before and his cock was hard as steel. It also felt incredible, like every nerve in his body was focused inside his rock-hard erection.\n\nHe tried to resist for as long as he could, but he felt the cum start to surge through his shaft. His toes curled as it erupted from the tip of his cock. He spilled thick ropes of cum onto the ground in front of him and tried to not let out a huge grunt of pleasure.\n\nHoly fuck, he thought. He hadn't masturbated without lube for a long time and that had felt fantastic.\n\nHe panted by the tree for a few seconds and took one last look at Alice and her gorgeous tits. She was talking as she fingered herself and he wished he could he what she was saying.\n\nSlowly, he crept around the side of the house and tried to push his still hard cock into his jeans.\n\nHe shuffled out to his car, threw his tools in the back seat and then awkwardly eased himself into the driver's seat. The image of Alice's tits was burned into his brain, and he knew he would have to sneak off for a lunch time wank as well.",
        "As he pulled off from the curb and drove off, he noticed the taxi coming in the other direction.\n\nWeird time of day for a cab, he thought before his brain once again started flashes images of Alice's tits, his cock starting to throb."
    ],
    "authorname": "martin_shecter1971",
    "tags": [
        "threesome",
        "first big cock",
        "mutual",
        "porn",
        "caught",
        "cum"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/mutual-masturbation-pt-02"
}