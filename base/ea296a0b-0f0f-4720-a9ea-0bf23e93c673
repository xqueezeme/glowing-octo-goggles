{
    "title": "The Pact Ch. 03",
    "pages": [
        "It was late when Natalia woke up. Her phone was ringing and she groped underneath her pillows for it.\n\n\"'Lo?\" she said sleepily into it.\n\n\"Nat, honey, did I wake you up?\"\n\n\"It's okay, Aunt Syl, I probably should have been up hours ago. What's up?\"\n\n\"Are you busy tonight?\"\n\n\"Nope, no plans.\"\n\n\"Would you like to make a few bucks?\"\n\n\"Usually.\" Natalia yawned hugely.\n\n\"My boss needs a babysitter.\"\n\n\"Aunt Syl, I don't know anything about kids.\"\n\n\"That's what I told him, but he said that's okay. You just need to be there in case there's an emergency. He wants you at seven so that you can meet his little girl, but he'll put her to bed before he goes out.\"\n\nNatalia groaned. She was uncomfortable around kids. She had absolutely no idea how to talk to them.\n\n\"He's offering a hundred bucks for four hours.\"\n\nOh. Well then.\n\n\"Tell him I will be there.\"\n\n\"Good girl. I'll text you his address.\"\n\nThat evening, Natalia left the house promptly at six-thirty in an old, comfortable pair of jeans and her favorite t-shirt. She was glad she'd left early, as her destination ended up not only across the city but up a winding, hilly road. When she finally arrived at the address her aunt had sent her, she gazed at the driveway a bit nervously. No house could be seen from the street, and the drive was lined with a tangle of trees and blackberry bushes.\n\nAt the end of the drive was a small gravel lot bordered by a tall fence and a garage with black carriage-house doors. The gate was unlatched, almost ominously ajar. Well, she thought, she trusted her aunt. She went through the gate and found a nicely manicured garden with a dogwood tree in full, glorious bloom. At the end of a flagstone path was the house. It wasn't very large, but it was designed in a sharp, modern style, with lots of glass. The lights were on inside, sending a homey glow into the garden. All at once, Natalia felt at ease.\n\nBefore she could even knock, the front door opened. A small, serious-looking girl was in the doorway. Well, Natalia thought, sink or swim. \n\n\"Hi, I'm Natalia,\" she said.\n\n\"My name is Caroline.\"\n\nA man jogged up behind the little girl and pulled the door open wider. He gave Natalia a slightly apologetic smile.\n\n\"Hi, I'm Gavin. You must be Sylvia's niece, Natalia.\"\n\nHe held his hand out to her and she took it, suppressing a little shiver at his warm fingers as they clasped her own. Gavin was younger than she had expected, and rather handsome. He was dressed in a beautiful dark blue suit, but his neatly groomed stubble kept him from looking too elegant, if that was even a thing.\n\n\"Pleased to meet you,\" she said.\n\n\"Come in, please,\" he said, stepping back. \"Why don't we go sit in the living room and we can talk for a minute?\"\n\nHe led the way, and Natalia found that she felt slightly underdressed in the house. It was well designed, every detail beautiful as well as functional. Meanwhile, her sneakers were scuffed. She doubted he would notice, though.\n\n\"Honey, why don't you go ahead upstairs and get ready for bed?\" he said to his daughter. She glanced at Natalia once more, and then left the room.\n\n\"She always that serious?\"\n\n\"Lately, yeah,\" he said. \"The divorce was pretty hard on her, and she doesn't get to see her mother enough. I do my best but... sorry,\" he added, with a shake of his head. \"That's neither here nor there at the moment. So, tell me about yourself. Your aunt speaks very highly of you, but she didn't tell me much beyond 'nice' and 'responsible.'\"\n\n\"There's not much to tell, I guess. I just graduated from high school.\"\n\n\"Going to college in the fall?\"\n\n\"Mmhmm. I'm planning on studying sociology.\"\n\n\"What would you like to do after college?\"\n\n\"Oh, I... I don't really know yet. Just, sociology classes looked the most interesting.\" Natalia shrugged, feeling a bit awkward.\n\nBut Gavin smiled. \"That's the way to do it. Plenty of time to decide what you want to do. So what do you do for fun? Play any sports?\"\n\n\"Read, mostly. I read a lot of sci-fi. I don't play any sports, but I did do competitive swimming for a while. I don't compete anymore but I still like to swim regularly when I get the chance.\"\n\n\"I have a pool out back, actually, so, if you come back to watch Caroline again you're welcome to use it. It's heated.\"\n\n\"That would be great! We don't have a pool at home anymore, and I miss being able to swim in private.\"\n\nCaroline, dressed in a nightgown now, came back into the room and sat primly next to her father.\n\n\"Hey, sweetie,\" Gavin said. \"This is Natalia, and she's going to be here tonight while I go out to meet with a client. Do you have anything you'd like to ask her, anything you want to know about her?\"\n\nAt first Caroline didn't say anything. Then, \"Can you braid hair?\"\n\n\"Uh, sure, yeah.\"\n\n\"French braids, too?\"\n\n\"Yeah, French braids, too.\"\n\n\"Would you braid my hair before bed?\" she looked hopefully from Natalia to Gavin.\n\n\"It's your bedtime,\" Gavin said, firmly. \"But if Natalia comes back to watch you again, I'm sure she will.\"\n\n\"Okay!\" Caroline said, giving Natalia her first real smile.\n\n\"Please, make yourself at home while I tuck Caroline in. Ah, kitchen is through that doorway there, and the bathroom is the first door on the right down the hall there. Let's go, sweetheart,\" he said, to his daughter.\n\nNatalia watched him leave, admiring the way he looked from the back. Just a few short moments later, Gavin came back downstairs and fairly rushed out the door. He was running a bit late, but promised to be back by eleven. Natalia went into the kitchen to get herself a glass of water, and wandered back into the living room. Then she frowned. She'd forgotten to bring a book. It was going to be a long night.\n\nMight as well take a look around, she thought. She knew she probably shouldn't, but she didn't plan on looking in any drawers or anything, just kind of wanted to get the feel of the house. The downstairs hall led to the bathroom, just as Gavin had said, plus an office and what looked like a guest room. She tiptoed upstairs, not wanting to disturb Caroline, and found her room easily identified with a little sign on her door. The master bedroom was nice, and the bathroom held a soaking tub and stone-walled shower. Fancy.\n\nThere was another bathroom upstairs, a small one, and the last door was a linen closet. The stack of fluffy-looking towels gave her an idea: Gavin did say that she was allowed to go swimming, didn't he? So, she didn't have her suit, but it was pretty private out here. Why not go in nude? She could always leave the back door open so that she could hear Caroline if she woke up and needed anything.\n\nOnce back downstairs she glanced outside and reconsidered. It was private...but not quite as private as she had thought. There were a few houses up the hill that might have a clear view into the backyard. Probably it would be fine, but she thought she'd rather wait until it was dark, just in case. She'd still have plenty of time before Gavin got home.\n\nNatalia perused Gavin's bookshelves instead, taking down an interesting-looking volume and paging through it.\n\nThe sky finally darkened completely at nine-thirty. Natalia went upstairs and put her ear to Caroline's door briefly. Hearing nothing and certain her charge was still asleep, she snagged a towel from the linen closet and went into the backyard. Light from the house spilled into the backyard, suffusing the pool area with a soft, golden glow. Lush plants surrounded the cobalt water\u2014stands of bamboo, enormous datura blooms, a few fat palms, and fragrant star jasmine.\n\nFor a moment Natalia could almost believe she was far away, in a tropical paradise. She stripped down and didn't bother to stifle her little moan as she stepped into the water. It felt absolutely delicious on her skin. She'd never gone swimming nude before and it thrilled her senses\u2014especially in someone else's pool. After doing a few laps, she flipped onto her back and floated for a while marveling at the sky above, sparkling with stars.\n\n*****\n\nIt had been a good night, all things considered. Gavin's prospective client was no longer prospective, and he'd left with a signed contract in hand. In fact, it had gone so well that he hadn't needed to stay out quite as late as he'd expected. Natalia would probably be glad to go home a little early, and truth be told he really preferred not to leave Caroline at night\u2014especially not with a new sitter. Natalia had come with a good recommendation from a trusted employee, and she certainly seemed cool-headed and responsible, but there was always a risk leaving one's child with someone else.\n\nGavin pulled smoothly into the garage and jogged up the steps into the house. It was almost eerily silent. Caroline's usual sitter liked to watch television, so he had expected the low murmur from the general direction of the living room. He stepped around into the room and found it empty, with the back door open. A stab of panic hit him straight in the chest, followed by a sharp shock of a very different kind.\n\nMovement in the backyard caught his attention, and he looked out in time to see Natalia, completely naked, rise from the pool. Dark hair was slicked back from a very interesting face. Her olive skin shone in the light from the house, and he observed with interest the brown nipples that crowned her small, pert breasts. Water ran freely down her body and his gaze followed the droplets as they disappeared into a thatch of dark curly hair and reappeared to run down her shapely legs.\n\nHe stood, stock still, as she turned and bent to pick up a towel, showing off a beautiful rounded ass that had his cock hard as iron in his trousers. Deciding it would make her uncomfortable to find him in the house, he slipped back into the garage. He would give her enough time to towel off and get dressed, he thought, willing his erection to subside\u2014but that was useless and he knew it. After a few minutes he simply adjusted it and decided it would have to do. She probably wouldn't notice anyway, as his suit was so dark and, well, she would have to look first. A girl of her age wouldn't be interested in a single father his age.\n\nNatalia was dressed\u2014thank goodness\u2014and still squeezing water from her hair with the towel when he came back into the house.\n\n\"Oh, hi, Mr...\"\n\n\"Gavin is fine. Everything go all right?\" he said with a little smile.\n\n\"Not a peep out of her. I took a dip in the pool, I hope you don't mind.\"\n\n\"Not at all, I did say you're welcome to it.\"\n\nGavin's brain was starting to fuzz. Being in the same room with her was proving too much for his highly aroused senses. She was even more beautiful up close and her t-shirt was stretched just tightly enough over her chest to show off the curve of her breasts\u2014the lovely image of which he tried hard not to bring to mind. He fumbled his wallet out of his pocket and withdrew five crisp twenty-dollar bills.\n\n\"As promised. Would you be available to come watch her again? Our regular sitter is spending the summer with her grandparents. I don't have too many evening meetings, but it would be good to have a go-to sitter.\"\n\n\"Sure, yeah. That would be great.\"\n\nBefore he could bite back the words he found himself asking, \"How would you feel about watching her when I'm here?\" Seeing Natalia hesitate he added, \"Sometimes I work from home, but Caroline does have a tendency to get underfoot. I'll often find myself putting work aside to play games with her, and on a day when I really need to concentrate it might be nice to have someone here for her.\"\n\nIt was perfectly true, if unnecessary, but the explanation had Natalia's face clearing.\n\n\"Oh. Yeah, I don't see why not. Can she swim?\"\n\n\"Pretty well, for her age.\"\n\n\"I was a junior lifeguard for a couple of years, so if you'd feel comfortable we could spend some time in the pool together.\"\n\nGavin felt his cock twitch at the idea of Natalia cavorting around in a bikini. Dangerous territory, he thought. A little harmless fantasy was one thing, but he would never want to become the \"creepy dad\" and make her uncomfortable. He sighed inwardly. Perhaps it was time to think about dating again.\n\n\"That's fine,\" he said. \"Can I get your phone number to schedule with you directly?\"\n\nNatalia scrawled her phone number on a nearby scrap of paper and gave him a luminous smile before heading home.\n\nHe waited merely a beat before turning on his heel and going directly upstairs. As Natalia had done earlier, he paused outside his daughter's door for a moment to be sure he didn't hear her moving around. He didn't want to be interrupted.\n\nGavin closed and locked his bedroom door behind him. He stripped, throwing his suit carelessly over the back of a chair, and headed for the shower. In the blistering, steamy water he soaped up, running his hands over his body and, he admitted, imagining they were hers. He would lift her and take her here, up against his shower wall. Pounding powerfully into her until her cries filled the little room, then turning her around and taking her from behind. The image of her sweet backside filled his head as he poured soap into his palm.\n\nHis cock throbbed as he gripped it, and he leaned back against the shower wall stroking it while thinking of Natalia. Her taut body, those sweet little breasts. Gavin erupted with a hoarse cry, pleasurable waves wracking his body. His breaths came out in shudders. That settled it: next time Natalia came to babysit, he'd jack off before she got there.\n\n*****\n\nFor the first time all summer, Natalia was thinking about the pact. Truthfully, when Allison had suggested they all agree to lose their virginity before college, Natalia hadn't taken her entirely seriously. She had agreed, and she might take the opportunity if it presented itself to her, but she hadn't thought the other girls would take to it with so much...enthusiasm. And now Allison and Britt had already followed through\u2014and sent texts with an abundance of mouthwatering detail. Debbie was the shyest and most innocent of them, and had been completely mum on the topic. Natalia wasn't surprised. But Debbie did fold to peer pressure and there had been a light of excitement in her eyes when she'd agreed...\n\nNatalia wasn't interested in losing her virginity just because her friends wanted her to, but now that she was finding herself thinking more and more about Gavin, it did occur to her that she could kill two birds with one stone. Beyond just being handsome, he treated her like an adult. Natalia was the youngest of a large family, and most people\u2014with the exception of her favorite Aunt Syl\u2014tended to baby her a bit. Gavin didn't. He trusted her, asked her opinion about adult things if they came up in conversation, and, if she wasn't entirely mistaken, was attracted to her as well.\n\nThe night she'd first sat for him, he'd seemed a bit edgy at the end of the night. He kept glancing at her chest, which was odd considering that he'd been the perfect gentleman at the beginning of the night. At one point while his gaze was focused a bit lower than strictly appropriate, she'd thought to give him back as good as she got and glanced down to the front of his trousers. Had there been a bulge there? She thought so, but then again, it had been difficult to tell.\n\nShe'd been back to sit for him about twice a week since then, most usually in the afternoons to give him a break while he worked in his office. Caroline went to a summer camp three days per week and Gavin worked from home the other two days. It turned out that Caroline liked to swim nearly as much as Natalia did, and they spent hours in the pool together. Occasionally Gavin would finish his work before they'd gotten out of the pool, and Caroline had wheedled him into joining them.\n\nThose afternoons had been slightly more charged, and when Caroline inevitably lost interest in swimming\u2014having lost Natalia's undivided attention\u2014Natalia and Gavin would paddle around in the water for a while after Caroline had gone inside. Sometimes they talked, sometimes they just... well, if Natalia hadn't known better she'd have said they eye-fucked each other. Certainly she made sure to get out of the pool first, taking her time to allow him to get a good, long look. Somehow, after Gavin had gotten out of the pool his towel always hung down to cover his groin.\n\nNatalia had never felt this kind of sexual tension with anyone before, but she worried that despite the signals she thought she was receiving, she might be misinterpreting Gavin's kindness to her. His speech never even held a whisper of innuendo, and other than the occasional case of wandering eyes he really had been entirely appropriate.\n\nIf she wanted anything to happen she would have to be the one to make the first move, even if she risked an embarrassing rejection. She had a feeling that no matter how into him she seemed, he would never hit on his teenage babysitter. She wasn't even sure if he would respond to her advances, but if she didn't at least try, she'd be doomed to disappointment\u2014and considerable frustration.\n\nAt first she thought she would have her opportunity when Gavin asked her if she'd be willing to watch Caroline overnight. But her hopes were dashed when he said that he was going on a date and planned to be out all night. It was almost embarrassing to realize how disappointed she was, but he was a grown man and of course, being divorced, she should have expected that one day she might watch his kid while he was out on a date. The evening went smoothly: Natalia fed Caroline her dinner, played a game with her afterward, and then put her to bed. She considered taking a swim but felt rather out of sorts and decided she'd go to bed a bit early herself. The sooner she could go home and not think about what\u2014or whom\u2014Gavin was doing, the better.\n\nNatalia was jerked out of a sound sleep when a door shut nearby. She sat bolt upright and groped blearily for the edge of the bed. Who would have anticipated an intruder up here in the hills? Then again, a burglar casing the homes of the local wealthy might know that Gavin had gone out tonight. She glanced around the room for some kind of weapon and saw nothing useful. But she couldn't just stay in the room. What about Caroline?\n\nShe edged out into the hallway and saw a shadow moving around near the kitchen door. Swallowing hard, she tiptoed closer, trying hard not to make any noise. The intruder was creeping about, also obviously trying to keep quiet. Her heart was hammering in her chest as she watched the shadow move uncertainly through the room. She was near the entryway now, and picked up an umbrella. It was the best she could do.\n\nSuddenly the light went on, temporarily blinding her.\n\n\"Nat?\"\n\nNatalia blinked rapidly, and when she could focus again she saw Gavin looking at her, utterly baffled. It would have been funny if she hadn't been so relieved. She dropped the umbrella and rubbed her eyes.\n\n\"I thought someone was breaking in,\" she mumbled. \"You said you would be out all night.\"\n\n\"Yeah, well...\" He looked a bit uncomfortable now. \"I'm sorry I woke you up. You were asleep?\"\n\nNatalia looked at him again and saw that his gaze was riveted well below her face. She hadn't been expecting to see him before she woke and dressed in the morning, so she hadn't exactly chosen modest pajamas. She often slept entirely nude, but felt she should wear something, just in case Caroline should awake. Her nightgown was short, made of a very soft gauzy material in a butter yellow tone. Aunt Syl had brought it back from visiting their extended family in Italy, and it always made Natalia feel elegant, sensual. She knew the shape of her body, not to mention the shadow of her nipples, was visible through it.\n\nHis date hadn't gone well, he wasn't bothering to conceal his gaze... if there was ever an opportunity to attempt a seduction, this was it.",
        "\"Since I'm up,\" she said conversationally, \"I might go for a swim. It's a nice night.\" She headed toward the pool and then paused, looking over her shoulder.\n\n\"Coming?\" she added, letting her gaze drift lazily over him. She hoped her gentle emphasis on the word hadn't been too obvious.\n\nWithout a word, Gavin followed her.\n\nThe scent of jasmine was thick in the air. Natalia drew her nightgown slowly over her head and dove into the pool. When she came back up for air, she saw that Gavin was undressing. He stopped when he was down to his boxer briefs, hesitating. She watched him, her face giving nothing away as her gaze lingered on his erection pressing against the fabric. After a moment he stripped off his underwear and walked down the steps to join her in the pool. \n\nShe watched him, unable to take her eyes from the evidence of his arousal. Having grown up in a large extended family she had certainly seen boys naked before, but this was nothing like that. Gavin's cock jutted out from his hips and bounced lightly as he strode forward. Knowing she had done that to him, that his body reacted to her, made her feel incredible. Sexy and powerful. Warmth crawled into her belly and spread down her thighs. She had been aroused before, had touched herself before. This was nothing like that.\n\nFor a time, they swam silently together. It was nice, strangely intimate, snatching glimpses at each other's bodies beneath the water. After a while, Natalia settled herself in a shallow corner of the pool\u2014shallow enough for her to sit on the bottom while the water lapped around her breasts. When Gavin spotted her, he swam over and sat near her, making a heroic effort to look at her face rather than her breasts.\n\n\"Do you want to talk about it?\" she asked in a low voice.\n\n\"About...?\"\n\n\"Your date.\"\n\n\"Oh. Not really. Nothing happened.\"\n\n\"I guessed that much,\" Natalia teased gently.\n\n\"I mean nothing bad happened. Colleen is a beautiful woman, interesting and smart, but I'm not sure I'm ready to date again yet. The thing is, I'm not sure it would be fair to her to try having a relationship when, to be honest... can I be honest?\"\n\n\"Of course.\"\n\n\"To be honest, there's someone else I can't get off my mind.\"\n\n\"What if you found out that you were on her mind, too?\"\n\nGavin didn't answer. Natalia leaned over and brushed her lips against his cheek. When he didn't protest or move away, she kissed him full on the mouth. He responded to her immediately, opening his mouth and chasing her tongue with his.\n\n\"Gavin,\" Natalia whispered. \"I want you.\"\n\nWith a soft groan, Gavin drew her deeper into the pool and kissed her, wrapping his arms around her and pressing his body close to her. She felt him, hot and hard against her hip, and shivered. Her mind was spinning, realizing that, now that she had confessed her feelings and made the first move, she had absolutely no idea what to do next.\n\nGavin made the decision for her, lifting her easily and sitting her on the smooth flagstones that bordered the pool. They were still slightly warm from the heat of the day. Looking steadily into her eyes, grasped her ankles and spread her legs. He gripped her hips and pulled her right to the edge of the pool. Almost before Natalia realized what he was about to do, he leaned in and pressed a kiss at the juncture of her thighs.\n\n\"I love women who leave themselves completely natural,\" he said, stroking a fingertip over her mound, continuing down to the spots that made her writhe under his light touch. \"It's so fucking sexy.\"\n\nHe threaded his fingers through her pubic hair and tugged gently, then slid his tongue inside her, dragging it up and over her clit. The tiny spark of pain combined with the pleasure of seeing and feeling his mouth on her to shatter her composure. She bucked up at him, uttering a little cry as she savored the sensations running through her. Gavin glanced up at her, an intense expression in his eyes. He gripped her inner thighs and braced her against the flagstones as he swirled his tongue rapidly around her.\n\nWhen he fastened his lips around her clit and sucked, Natalia exploded. Her thighs closed around Gavin's head and she tossed her head back, unable to stifle her moans. Dimly she found herself hoping that none of the neighbors were outside, as they would definitely be able to hear her.\n\nFinally the waves of pleasure slowed and Natalia opened her eyes again, finding the starry sky above her. Gavin's face appeared above her, grin firmly in place. He held his hand out to her and she gripped it, letting him pull her up off the ground. Then he swept her into his arms and kissed her.\n\n\"You're such a gentleman,\" she said.\n\nGavin carried her over to a soft chaise, dropping her lightly down onto it. He settled down on top of her and brushed his lips over her, kissing down her neck. His cock rested between her legs and he rocked gently against her, coating himself in her wetness.\n\n\"I'm not much of a gentleman in bed,\" he murmured in her ear. \"When I'm with a woman who turns me on this much I like to get a little rough. Most of the women I'm with like that, but how do you like it?\"\n\nNatalia's heart was pounding. He liked it...rough? The thought excited her. Rough wouldn't be tender, romantic lovemaking. Rough would be the two of them desperately, urgently, coming together, Gavin pounding into her...at least, she supposed it would. She also supposed she ought to tell him the truth.\n\n\"I don't really know how I like it,\" she said quietly, \"because I've never done it before. But your way sounds good.\"\n\nShe felt Gavin's cock lurch against her.\n\n\"You're a virgin?\" he whispered hoarsely.\n\n\"Yes.\"\n\nHe pushed himself up, cradling her face in his hands and smiling down at her. \"How about I take it slow to start?\"\n\nNatalia felt him position himself at her entrance and start to slide inside of her. He groaned as he entered her, making such a sexy sound that Natalia felt herself grow even wetter. When he was completely sheathed in her, he paused.\n\n\"How does it feel?\" he asked her. \"Any pain?\"\n\n\"No, none,\" she said, a bit surprised. \"I thought it would, but it doesn't. It just feels...different.\"\n\nGavin slid out partway and then back in, still going slowly and gently. It wasn't overwhelmingly pleasurable, Natalia thought, but nice enough as far as it went.\n\n\"You're so tight,\" Gavin said, his voice sounding a bit strangled. \"I don't know how long I'm going to last.\"\n\nHe slid his hand down her body and started circling her clit with his thumb. Natalia was still sensitive from her earlier orgasm, and gasped as he touched her. She lifted her hips as he moved inside her, meeting his thrusts reflexively.\n\n\"Oh, you like that?\" he teased her. Natalia couldn't even answer, just moaned helplessly. \"You gonna come for me again?\"\n\n\"Yes, yes, yes...yes!\" she cried, coming to pieces beneath him.\n\n\"Fuck,\" he panted. \"I'm going to come, too.\"\n\n\"Wait,\" she gasped. \"Wait, I'm not on the pill.\"\n\nGavin pulled out of her, kneeling on the chaise. His cock jerked and Natalia circled it with her hand. She stroked him, slick with her juices, and he erupted onto her belly with a soft grunt.\n\n*****\n\nHe had just deflowered his babysitter, and all Gavin could think about was getting back into her pussy. His body was still shuddering from his orgasm and her words echoed in his head: \"Your way sounds good.\" Slowly, deliberately, he took a breath until his heart had stopped racing.\n\n\"That was amazing,\" Natalia said in a low voice.\n\n\"That was nothing,\" he said, infusing his voice with the cockiness that tended to drive women wild. \"Are you sore at all?\"\n\n\"I feel great. I could use a shower though,\" Natalia said, looking down at her come-splattered body. \"You want to come?\"\n\n\"If I shower with you, I might,\" he said with a grin. \n\nNatalia picked up her nightgown, slung it over her shoulder, and sauntered into the house. Gavin followed, unabashedly watching the way her hips swayed.\n\nHe managed to control himself in the shower\u2014mostly\u2014despite regaining his erection as soon as he saw Natalia slicked up with soap. Once she had rinsed off, he did pin her hips against the shower wall and ate her out to another orgasm. His cock was throbbing by the time they had dried off and made it to the bedroom, but he didn't want to push. He wasn't sure what Natalia would be up for.\n\nHe needn't have worried. After a round of frantic kissing, she sunk to her knees and had him in her mouth before he could even say \"watch the teeth.\" It didn't even matter that she was clearly unpracticed. Her mouth was hot and wet and she took to the task with such enthusiasm that he felt himself shudder with arousal. It had been a very long time since he had felt this desired by a woman. Spewing his load down her throat was appealing, but he absolutely had to feel her slick velvet walls gripping him before he came.\n\nNatalia protested slightly when he threaded his hands through her hair and drew her away from him, but he silenced her with a deep kiss and maneuvered her back toward the bed.\n\n\"I want to be inside you,\" he said.\n\n\"Yes, please,\" she panted. \"Show me what you like, Gavin.\"\n\nHer eyes gleamed with excitement, and he fought a quick war with himself over whether he wanted to see her face or her ass.\n\n\"On your hands and knees then,\" he said. Natalia scrambled to follow his instructions while he dug in his bedside drawer for a bottle of lube. There was also a box of condoms in his drawer, but she hadn't asked him to wear one and he wasn't going to offer. He'd just pull out. Yeah, that was it, he'd pull out and ask her to swallow his come.\n\nGavin poured a puddle of lube into his palm and stroked himself briefly. Then he positioned himself behind Natalia and gripped her hips.\n\n\"Let me know if I go too hard,\" he warned her, then eased inside. She was still so tight. Wet, too, but he always used lube when he wanted to go hard, just in case. He groaned and started to move within her. Natalia's soft, rounded ass bounced with each of his thrusts. \"I've been dreaming about this ass for weeks.\"\n\n\"Really?\" She sounded out of breath already.\n\n\"Fuck yes. I saw you, by the way, that first night you were here. I came home right when you were getting out of the pool.\"\n\n\"No wonder you seemed nervous that night,\" she laughed. \"Did you jerk off after I left?\"\n\n\"I did, yeah. Thinking about this ass.\" He gave her a squeeze to prove it, then gripped her hips and tilted them up, fucking her a bit harder.\n\n\"Fuck!\" Natalia exclaimed as he bottomed out in her. \"Fuck, that feels so good.\"\n\nGavin grinned. He grasped the back of her neck with one hand and pushed her down to the bed. Natalia cried out, her moans coming louder now. If she thought he was hitting the spot now, she was in for a pleasant surprise. She kept arching her back, trying to get her hips positioned even higher. He knew exactly what she wanted.\n\n\"Do you trust me?\" he said, slowing the movement of his hips and letting her catch a breath.\n\nAll she could manage was a soft grunt in the affirmative.\n\n\"Move forward until your knees are at the edge of the bed,\" he said. \"I'll hold your hips, you reach down until your hands are on the floor. Trust me.\"\n\nOnce she was in position, he saw that she looked absolutely delectable. Her pink pussy was swollen, her petals slick and drops of juice glistening in her bush. Her ass cheeks were parted and for a moment he considered initiating her asshole to the joys of penetration. Would she go wild if he fingered her ass?\n\nNatalia wiggled her hips, catching his attention.\n\n\"Yes?\" he asked, teasing her. \"What do you want?\"\n\n\"Fuck me. Right now.\" She wasn't teasing. She sounded needy, desperate. His cock hardened even further at the sound, though he hadn't thought that was possible.\n\nHe slipped the head of his cock between her folds and thrusted into her. He wouldn't hold back now. The sound she made as he filled her made his balls tighten, and he could only hope he would last longer five minutes. Natalia was moaning, cursing, practically shrieking now each time he bottomed out in her. The sound of their flesh slapping together filled the room. Gavin felt the telltale tremors in Natalia's pussy and was filled with the sudden urge to touch her.\n\n\"Brace yourself,\" he warned her, his voice rough with the effort of holding back his own orgasm. He moved one hand from her hips down to her pussy, finding her soaked. When he started sliding his fingertips roughly over her clit, she went wild, bucking her hips so hard he nearly slid out of her.\n\n\"I'm gonna come, I'm gonna come, I'm gonna come,\" she chanted.\n\nTaking the chance, he slid his thumb into his mouth and then circled her asshole with it. Natalia was moaning, her pussy rippling around his cock, and he shoved his thumb into her ass. She went rigid beneath him for a moment, her head thrown back in a silent scream. Then she was coming, her whole body wracked with tremors as she rode it out.\n\nEven before she had finished coming Gavin slid out of her, too close to the edge himself. His knees were weak, his thighs were weak, and he needed a break. He circled Natalia's waist and lifted her back onto the bed, then lay back and watched her hips twitch with the aftershocks of her orgasm.\n\nWhen she had finally recovered her breath, she twisted around to look at him.\n\n\"You didn't come,\" she said.\n\n\"Almost, but not quite.\"\n\n\"You tired, old man?\"\n\n\"Who are you calling an old man? I just fucked the shit out of you.\"\n\n\"And now you're tired,\" she grinned. \"It's okay, I can help you out.\"\n\nShe crawled up the bed toward him and swung one leg over his hips, sinking down onto his cock in one fluid movement. She rocked her hips back and forth to please herself, and then levered up and began to ride. Gavin's gaze was glued to her breasts. He reached up, running his thumbs over her hard nipples to make her moan. Some other time, he would have to put his mouth on them.\n\n\"You put your finger up my ass,\" she said suddenly, sounding accusatory.\n\n\"Yeah, and you liked it.\"\n\n\"I did, yeah. I liked it a lot.\"\n\n\"Mmmm. You want it again, don't you?\" He slid his hand around and cupped her ass cheek. Natalia bit her lip and nodded. When he worked his finger into her ass, her eyes rolled back in her head. She braced one hand firmly on the bed and rode him hard now. With her other hand she groped her own breast, pinching her nipple briefly before moving down to stroke her own clit.\n\nThe sight of her pleasuring himself as she fucked him had his balls tingling.\n\n\"Nat,\" he groaned softly, \"I'm getting close.\"\n\n\"Yeah, I'm almost there,\" she moaned.\n\nGavin's thighs started to tremble with the effort to hold back his orgasm.\n\n\"Nat,\" he warned. His hips were lifting of their own accord now.\n\n\"Wait, wait, wait,\" she was panting.\n\n\"Nat, I'm going to come,\" he said urgently.\n\nHis cock was swelling inside her, and she gave a loud cry as she came on his cock, her pussy contracting hard. She was no longer bouncing on his cock but grinding her hips down into his. There was no holding back now. He threw his head back, helpless beneath her, with no option but to explode, emptying himself into her pussy. He came so hard his balls ached, grunting hoarsely as he filled her.\n\nWhen he had finished, he was breathing hard, a light sheen of sweat on his chest. Natalia lifted her hips slightly, and he watched with a dull arousal as some of his come dripped out of her, sliding down his shaft.\n\n\"Whoops,\" she said softly. She slid back down, sheathing him inside her again, and swiveled her hips. Groaning softly, she kept rocking. His cock was still hard, for the moment, and her motion had sharp shocks of pleasure shooting through him. It was so sensitive. But she didn't stop. His finger was still in her ass, and as he started to slide it out of her she let out a moan so low and thick with heat that he felt his cock twitch.\n\nAs she ground her clit into his pubic bone, he started fingering her asshole. She was beyond speech now, pumping her hips in pursuit of just one more orgasm. He gripped her ass cheeks, sliding a second finger in to join the first and pulling her hips tight against his body.\n\nShe was starting to lose her rhythm. He pulled his fingers from her ass and rolled her over, shoving her knees up to open her fully to him. He slammed his cock back into her, fucking her so hard that his harsh breathing and a wet, squelching sound were all that could be heard.\n\n\"Touch your clit,\" he commanded, and she did, frantically. \"Yeah, Nat, come again. Come for me.\"\n\nHe buried his head in the crook of her neck and bit down, not too gently. Natalia exploded beneath him, and he felt himself jerk once, twice more as he spurted whatever was left in his balls into her. Finally, they were still. With effort, Gavin rolled off of her. They both lay there, silently, until their breathing had returned to normal.\n\nHaving propped himself up on his elbow and glanced at her. Her knee was drawn up, exposing her pussy. She looked well and thoroughly fucked, her slit glazed with his come and shiny with her own juices. Blowing out a breath, she sat partway up and glanced down at herself ruefully.\n\n\"You came inside me,\" she said, sounding dazed.\n\n\"You didn't give me much choice.\"\n\n\"True.\" She giggled, but was soon flat on her back again, cackling. \"Fuck,\" she said. \"Thank goodness for the morning after pill, I guess.\"\n\nGavin couldn't do anything but snort and shake his head. Natalia wiggled over on the bed and curled up next to him, resting her head on his arm.\n\n\"I'm glad your date sucked,\" she said quietly.\n\n\"Me too. Are you free next weekend?\"\n\n\"I thought Caroline was going to her mom's that weekend.\"\n\n\"She is.\" He felt, rather than saw, Natalia smile."
    ],
    "authorname": "strawberrysoda",
    "tags": [
        "first time",
        "multiple orgasms",
        "older man",
        "sitter",
        "virgin",
        "virginity",
        "younger woman",
        "mature"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-pact-ch-03-4"
}