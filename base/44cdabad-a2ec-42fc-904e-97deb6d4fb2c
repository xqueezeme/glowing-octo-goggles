{
    "title": "An Unexpected Reaction",
    "pages": [
        "I knew there would be trouble when they walked into the bar.\n\nNot physical, getting somebody's ass whipped trouble, but emotional, I don't want to hear this shit trouble.\n\nUp until a few months ago, I would have considered them friends. Even when things went to hell, if they had just kept their mouths shut they would have been fine.\n\nThe ones I found knew about her affair I dropped like a rock, making it very clear they were no longer my friends. Of course, they tried to argue, they didn't want to take sides, they hoped she'd figure out it was destructive behavior, she still loves you, blah, blah, blah, didn't cut it with me and I told they so. It took a couple of meetings and some pretty intense confrontations before they realized I was serious. To this day, if one comes up and tries to talk, I either turn my back or leave. I think they finally got the point.\n\nThe few others I still associated with got the point, and made sure they didn't mention her. If they did, by accident, I simply excused myself and left.\n\nIt had been six months, the paperwork filed, the statements given, my offer of a fifty fifty split more than fair, and it was almost done.\n\nShe was fighting it tooth and nail. We tried arbitration, but they gave up when neither of us would budge. Mostly they talked to her, trying to get her to see she was getting a really good deal.\n\nThen she hit me with counseling. I refused, telling the judge it would be a complete waste of everyone's time and money, because there was no way I'd reconcile. The judge listening to an emotional, borderline hysterical Becky, threatened me with jail, and was shocked when I said all right, just tell me when to turn myself in.\n\n\"You're that positive this marriage can't be saved?\"\n\n\"Beyond the shadow of a doubt, to use a term you'll easily understand. I will not, let me stress that, WILL NOT ever be living with or have a relationship with her for the rest of my life. We have no children. Since this started, we have very few friends in common, my business partner and his wife helped her carry on and conceal the affair, so I'm through with them. Divorcing her will be just a tiny ripple in the big pond of life. Clear enough for you?\"\n\nI may have overstated it, and she decided to test my resolve. I spent three weekends in jail before she finally understood I was willing to keep going indefinitely, and dropped counseling.\n\n...\n\nThey were on a mission, you could see it in the eyes of the women. The men just looked uncomfortable.\n\nI knew they weren't there by accident, the bar was in another town twenty five miles away. I told my new favorite bartender I didn't care for the quality of people in my old one.\n\nShe was pretty shrewd, in her mid forties, and had pretty much seen it all. She managed to get the story out of me in bits in pieces, usually waiting until I'd had at least four beers. She had been married to the same man for twenty one years. They owned the bar. What I loved most about her was she never offered an opinion, even though I could see she wanted to.\n\nFinally one night I told her to speak her mind, a one time, never to be broached again opportunity, so she'd get over wondering about it.\n\nWhen we were done, she just looked at me for a little while.\n\n\"Obviously, I've only heard your side of the story. It might be fantasy and bullshit, but I don't think so. You were probably right to leave, but you might want to let her give you her side of the story. I'm sure you've wondered how it all went down the tubes. It might do you some good. It might not, it may make you even more angry.\n\nStill, human nature being what it is, it might help you to hear her out. Up to you, end of discussion. The next beer is on me.\"\n\nGod, I loved this woman. A mother figure who'd feed you all the alcohol you wanted, for a price, if you gave her your keys first.\n\nShe knew something was up the minute they walked in and she saw my face turn to stone.\n\n\"Friends?\" she said, nodding to them.\n\n\"I don't know,\" I answered truthfully, \"guess I'm abut to find out.\"\n\n\"Don't do anything stupid,\" she warned, \"just give me a look and I'll run them out of here.\"\n\n...\n\nIt took them ten minutes to work up the nerve to say anything. Todd walked up and stood beside me.\n\n\"Hey Jace, how you doing?\"\n\n\"I'm fine. The family's fine. Everybody is fine. Cut to the chase, Todd. What do you want?\"\n\nMy little speech, delivered with no emotion, shook him a little.\n\n\"Me and the boys,\" he nodded at his two friends,\n\n\"we don't really want to do this. But Becky has them all bummed out crying over what an asshole you're being over something she's sorry about and you won't forgive her for. You remember being married, hell, technically you're still married, and they won't let it go. So we found out where you were, and here we are. Will you talk to them?\"\n\n\"If I say no? Tell them to cram Becky up their collective asses and leave me the hell alone?\"\n\nHe colored a little, but kept on.\n\n\"It would probably hurt all their feelings, and they'd come after you anyway. Please Jace.\"\n\nI let him stew for a minute.\n\n\"All right. But remember what I told Jeff and Angela? Bob and Gloria? It still applies. I do this, we're through. Don't bother looking me up again, understand?\"\n\nI think he got a little angry, like I gave a shit.\n\n\"I understand. Man, what a hard ass you've turned into. Now will you talk to them?\"\n\n\"Yes. Let me ask you something before you go. If it was your wife screwing around, would you let it go?\"\n\nHe gave me a smirk.\n\n\"That'll never happen. She loves me.\"\n\n\"Yeah. Becky said the same thing. Still does. Didn't stop her now, did it?\"\n\nHe frowned before I continued.\n\n\"First, go tell Sandy and George what I said, and then have them come over here and tell me they understand. They might not be as pussywhipped as you are. Then, tell the girls I'll give them ten minutes, no more, so they better be sure about what they say right off the bat, because they'll never get a second chance. I figure I'll have time to enjoy another beer by then.\"\n\nI turned away, dismissing him. He stood for a second, head hanging, before he went back to the table. I watched in the mirror as their heads jerked up and a heated discussion started. Sandy threw up his hands and walked over to me.\n\n\"I've always liked you, Jace. You don't deserve this shit. I'm a little ashamed of the whole thing, and I'm out. I apologize for bothering you. But Tina is determined. We're going to have a long talk on the way home. This is the last time I'm going to put up with her meddling. I guess this is goodbye.\" He held out his hand. I shook it.\n\n\"So long, Sandy. You're one of the good ones. If I ever come back to town, I might look you up. Not Tina, though.\"\n\nGeorge never really liked me much, so he had no problem.\n\nThe women watched me like a hawk. I made them wait a little while, before mentally girding my loins and walking into the lions' den.\n\nI sat, and they started talking. I held up my hand, got out my phone, and set the timer for ten minutes. I could tell it really pissed them off.\n\n\"All right, you're on the clock, go.\"\n\nTina rolled her eyes.\n\n\"Really, Jace, a timer?\"\n\n\"Nine minutes and forty nine seconds,\" I said.\n\nThey talked over each other for a minute before they realized their mistake and looked at Carrie. Apparently she was to be the spokesperson.\n\n\"I know this is really none of our business, but...\"\n\nThey almost ran when I slammed my hand down hard on the table.\n\n\"Finally, somebody understands. You're right, it IS none of your fucking business, and you'd be well served to stay out of it. But you can't resist, can you? You're determined to talk sense into me, because you're our friends, right? Then where the hell were you when she was out screwing someone else? Where was your concern for me then? One word from any of you to either of us would have saved me a lot of grief, we wouldn't even be here now. But looking back, I can't recall you or any of our so called friends ratting her out. Hell, a lot of you gave her alibis. Fuck that. Fuck this. Fuck you. End of rant. Let me reset the timer.\"\n\nThey all sat there stunned before Carrie spoke up. She sounded annoyed. \n\n\"Jace, please. It was a mistake. She never meant for it to happen. We didn't know what to say.\"\n\n\"She's miserable. Her parents hardly ever talk to her anymore, her boss has her on probation. She cried when she found out you'd saved her job. I think she's learned her lesson. Time to swallow your stubborn pride and take her back.\"\n\nI rolled my eyes.\n\n\"Time? I'm sorry. I didn't read the Slut Wife Cheating Handbook. I wasn't aware there was a time limit on how long I was allowed to be angry. So now it's okay fine? Kiss kiss, promise promise and we live happily ever after? Not hardly. You know, I'd be a lot calmer if you people wouldn't keep shoving her in my face. Still think you know best for us?\"\n\nThey actually looked a little guilty before nodding yes.\n\n\"You all feel that way?\" I looked round the table and they all nodded their heads again. They babbled for a few more seconds before I stopped them.\n\n\"Hold on. Let's go off the clock for a second here. Carrie, if you found out George was screwing around on you and all of of us knew and didn't tell you, that it would be all right? Or, if the spouse was found out that they'd eventually be forgiven? You love him that much?\"\n\nShe frowned but said she would eventually.\n\n\"And if the person he was fooling with was someone you knew, a friend even, married to a friend, could you forgive them also?\"\n\nShe looked definitely uncomfortable. They all suddenly seemed very nervous.\n\n\"I'd like to think I would, after a time, if I thought they were really sorry.\"\n\nI grinned.\n\n\"Well that's great, because Jan and George have been fucking like monkeys for about eight months now. In fact, when I heard the rumors about you guys, I didn't believe it. And before you ask, I was gonna tell you what I'd heard, but other things came up that required my attention. I left it alone because I thought you deserved to find out on your own, like I did. By then I didn't give a shit about any of you anyway. It's why I moved here, I heard they had a better class of assholes. So take your pompous, hypocritical platitudes and shove them up your collective asses.\"\n\nI stopped, breathing heavily. There was dead silence around the table.\n\n\"So, let the healing begin. That way we can all get over it. Carrie, tell Jan you forgive her. Jan, in four months you can promise her you won't screw him again and everything will be fine. You'll have a stronger marriage for it, I'm pretty sure that's in a chapter of the cheating handbook somewhere.\"\n\nI stopped to catch my breath.\n\n\"Let's get Todd and George over here too, and do a blanket healing. And Carrie, don't throw too many stones, or I'll have to tell an interesting tale about you and a stripper during you last girl's weekend to Myrtle Beach. Did I mention Becky told tales when she was drunk and we were alone? Tina, you and Sandy need a new circle of friends. Looks like the old one is pretty worn out. We've finished our conversation about me and Becky, but it looks like you guys have a lot to talk about, so I'll be leaving now. Let's not do this again, ever. Bye.\"\n\nWas it a shitty thing to do? Maybe, but it didn't bother me much. He without sin, and so on.\n\n...\n\nThere was a hell of a row at the table. A lot of yelling and tears, and more than a few slaps. Sandy grabbed Tina and they went to another table. He wasn't loud, but he had a finger in her face and she was crying pretty hard. Finally Marge, the bartender, told them to either leave or tone it down. They trouped out, all but Tina and Sandy.\n\nShe timidly came up to me.\n\n\"I'm sorry,\" she said, with lowered head and avoided eye contact. Then she gathered her courage and looked up.\n\n\"It just that we thought you were the best of us. You guys seemed really happy. I didn't believe it when you split up, and I figured once you calmed down you'd talk it out and get back together. I'm guessing everyone, especially Becky, didn't expect your reaction. You're really through with her, aren't you?\"\n\n\"Yes, Tina, I am. You're wrong, though. You and Sandy are the best of us. Use this as a learning experience. Choose your friends a little more carefully in the future. Go home now. Love each other. And if nothing else, remember me and Becky, and how you can never be sure of anything, especially how a person will react to betrayal. Maybe I'll see you sometime.\"\n\nSandy apologized again, and they left, holding hands.\n\nMarge nodded towards them as they left.\n\n\"They seem a decent couple. The others though, I'm not so sure of. I think the divorce court in your hometown will be a little busier soon.\n\nI nodded, agreeing. Then gave her my keys, thirty dollars for the cab, and switched to whiskey.\n\n...\n\nI was as surprised as any of them at my reaction. I liked to think I was a pretty decent guy. Still do. Then again, you never know how someone will react to stress and betrayal. The fact that I loved her so deeply made the betrayal even worse.\n\nI wasn't really attracted to Becky at first. She flirted too much and seemed a little flighty to me. We didn't date for the first two years I knew her.\n\nShe was the best friend of my business partners' wife. Cindy was the one constantly trying to put us together.\n\n\"Give it a rest, Cin. We're just not attracted to each other.\"\n\n\"Speak for yourself. I know for a fact she's interested in you. You'd be good for her.\"\n\nBeing half buzzed, I smiled and kissed her cheek.\n\n\"But, dear Cin, would she be good for me?\"\n\nShe left it along for about six months, then Allan, my partner, asked me for a favor.\n\n\"Jace, I hate to spring it on you this late, but all of us, Cin, Becky, and her date were going to the theater tomorrow. The touring company of Momma Mia. I know how much you love musicals, you closet sissy, and Beck and her boyfriend had a big fight and they broke up. Would you go with us and keep her company?\"\n\nI thought about it for a minute.\n\n\"Don't think so, Al. I don't think I'd enjoy it in the company of a weepy or angry woman. And you're the one who picked the show, it's all you've talked about for two weeks. Have you picked which dress you're going to wear? It's after Labor Day, so the white four inch heels are out. Go with the black five inch 'come fuck me' pumps. Maybe Cindy will get excited enough to use that ten inch strapon, you size queen.\"\n\nWe laughed and went back to work. That evening, Cindy called.\n\n\"Please Jace. She's a mess right now. She could use the company of a decent man.\"\n\n\"But I don't need the company of an emotional woman.\"\n\n\"She'll behave. I promise. Please please please?\"\n\nI sighed.\n\n\"All right, but just because I want to see the show. In gratitude, tell Allen you'll use the strapon if he's a good girl. He'll understand.\"\n\n...\n\n\"You asshole! Now I have to buy some scented lube on the way home. Cherry, if they have it.\"\n\nWe laughed for a minute while I tried to get a mental picture. Allan was six four, with a beard. Cindy might be five three.\n\n\"Seriously, dude, thanks.\"\n\n\"If tonight sucks, I'm gonna take a turn on you with that strapon. Now, let's get to work.\"\n\nWe went to dinner first. Becky was subdued but not whiny. I really looked at her for the first time.\n\nShe was five seven, slender, small breasted, but she had a world class ass. Her auburn hair went to her shoulders in soft curls. Her face was well proportioned, with brown eyes that sparkled most of the time, and a mouth that seemed to say \"Kiss me! Now!\" \n\nAll together she was a very nice package. The problem was she knew it and used it. I'd seen her work a guy, and the poor bastard never had a chance when she turned on the charm. Then she'd laugh and walk off, leaving him hanging.\n\nWe enjoyed the show. The girls were actually singing their favorite song from the show in the parking lot. I looked at Al and grinned. We jumped right in. Soon half the parking lot chimed in for the big finish.\n\nWe went for a drink later, at a small club I suggested. I have nothing against dance clubs, but sometimes I actually like to hear myself think, and hold a conversation. It was the weekend, and they had a four piece band. Two keyboards, drums, and a guy that switched from guitar to bass as the song called for. It was old, light melodies, mostly slow. There were actually a few couples dancing on the small floor.\n\nAllan looked at Cindy and she dragged him out on the floor.\n\n\"Wanna...\" was all I got out before I was on the floor, with a hot woman wrapped around me. It was slow, it was soft, it was comfortable instead of arousing.\n\n\"Thank you,\" she whispered.\n\n\"For what?\" I asked in surprise.\n\n\"For showing me good guys still exist. Cindy told me to behave, so I did. I know you didn't want to come, but I'm glad you decided to.\"\n\n\"Me too,\" I said, realizing I meant it.\n\n\"Whether you know it or not, you're a hell of a woman, Becky. Tone the flirting down a notch or two, invest in someone worthwhile, and I'm sure you'll be very happy. And I'm not criticizing you, just making an observation based on watching you for the last few years.\"\n\nShe actually smiled.\n\n\"Thanks, I think. You really think I'm a nice woman?\"\n\nMy turn to smile.\n\n\"When you want to be. Either way, you've got the best ass I've ever seen. Ever noticed when we're around each other I'm always a step or two behind you?\"\n\nShe flushed, then punched me on the arm.\n\n\"Again, thanks, I think.\"\n\nThe song ended and we walked back, talking and smiling. Cindy was sitting there amazed.\n\n\"What were you two talking about?\"\n\n\"How Jace says I'm a good woman most of the time. And what a great ass I have.\"\n\nAllan choked on his drink and Cindy laughed. I looked at him.\n\n\"What? Don't tell me you've never noticed.\"\n\nCindy looked at him suspiciously.\n\n\"What about my ass, honey?\"\n\nHe was trying to think of something diplomatic to say when I rescued him.\n\n\"You do have a nice ass, Cindy, but it's not even close to hers. If it's any consolation, you've got a killer rack.\"\n\nBoth women were looking at me like I was crazy for talking to them like this. Allen started laughing.\n\n\"Stop, Jace. Quit while your breaking even. Honey you do have a nice ass, and you've got Becky beat all to hell in the boob department. But it's you I love, and that's all that counts, to me.\"\n\nNice save, Allan, I thought, remembering now what a good salesman he was. Becky just grinned, turned around and shook her butt in his face. I wished many times I'd had a camera that night.\n\nNot to be outdone, Cindy grabbed my head and stuck my face between her boobs, nearly smothering me. We all laughed until we cried, had one more drink and three more dances. The last dance Becky molded to me, rubbing until she felt me get hard. Then backed off, grinning.\n\n\"You're a good guy, Jace, but you're still a man.\"\n\nI got a really good kiss, and she made me promise to call her, soon.\n\n...\n\nI didn't call for two weeks.\n\nThat Saturday I got a pretty sharp call from Cindy.\n\n\"You asshole[she called me that a lot. I hoped it was a term of endearment]. She was starting to think there were good guys in the world, and then you don't call. Her feelings are hurt pretty bad.\"\n\n\"Cindy,\" I said calmly, when she finally wound down.\n\n\"What!?\"\n\n\"What's Allan been doing for the last two weeks?\"\n\n\"You know damn well what he's been doing. You've been keeping him at the office all those ungodly hours getting the Jamison account done.\"\n\n\"Exactly,\" I said softly, \"and what was I doing all this time?\"\n\n\"Guilting Allan because you're practically living at the office. What's that...Oh.\"\n\n\"Yeah, Oh.\"\n\nSuddenly she was apologizing.\n\n\"I'm sorry, Jace. I didn't think. I should have told her.\"",
        "\"Well, call and tell her now. Tell if she's interested, I'll call next Thursday.\"\n\n\"I will, I will. I wasn't thinking.\"\n\nI thought later many times about my next statement, and how true it turned out to be.\n\n\"Relax, Cindy. She's your friend. Of course you want to protect her, help her be happy. I understand. Gotta go.\"\n\nShe was still talking when I hung up.\n\nI did call Thursday, and she chattered happily. We made a date. She wanted to go to a movie and then back to what she called 'our' club. I threw in dinner.\n\nWe had a really great time. The movie sucked, one of those vapid tearjerkers some asshole was making a fortune writing, but the dinner and the dancing was great. By the time we left the bar she was firmly under my arm.\n\nI surprised her by not coming in when I dropped her off. She looked disappointed until I explained why.\n\n\"I'd love to, honey, but Allan and I are working tomorrow. We're almost over the hump. This account and another we're courting will make us pretty secure, so we're putting all we have into it.\"\n\nI think calling her 'honey' did the trick. I got a really strong kiss, followed by another. I finally had to break it off.\n\n\"Damn, you know how hard it's going to be working tomorrow thinking about these kisses? If I blow this account, I'm making you support me.\"\n\nShe giggled prettily.\n\n\"You'll do fine. If you think those were great, wait 'til I bring out the A game.\"\n\n\"That wasn't the A game?\"\n\nMore giggling.\n\n\"No. That was a I really like you a lot first date kiss. Keep up what you're doing, and you'll get the A game soon. Now go. Conquer the business world. Call me soon.\"\n\nShe and Cindy surprised us by showing up the next day, bringing a home cooked meal.\n\n\"You have to eat, right?\" she said, sailing by me. They set the conference table and we ate a feast fit for a king. Afterwards, they cleaned up and packed. I found her on the conference table, bouncing up and down.\n\n\"What are you doing?\"\n\n\"Stress testing the table. I don't want it to break when we christen it.\"\n\nCindy laughed and joined her.\n\n\"Yeah, It'll hold us. Bye honey.\"\n\nBecky got up. \"Yeah, bye honey. See you this weekend. We're going to the lake, grill and swim. You guys need some sun.\"\n\n...\n\nAs an ad guy, I know one of the most hard and fast rules is always display your wares to the best of your abilities, while minimizing the weak points.\n\nThe girls had both bought new bikinis. Becky had on a modest top, but the bottom was a not quite thong. Cindy on the other hand, had on a modest bottom, but her top was two postage stamps and some wrapping string. I still don't know why we weren't thrown out of the state park we were in. I think the fact that the lifeguards and manager on duty were all male had something to do with it.\n\nAllan and I almost burned the steaks because we couldn't keep our eyes off the girls. They finally laughed and put slinky covers on.\n\nWe ate, we played in the water, got into a volleyball game, us against four guys. Every time they got ahead in points Becky would bend over to pick up the ball, or Cindy would jump op and down, making her boobs shake wildly. We won, despite not being very good.\n\nJust before it got dark they dragged us into the water, snuggling into us. That almost naked ass rubbing on me got me hard in seconds. We were kissing, when she pulled back and dove under. She popped back up, grinning. Cindy did the same.\n\n\"Sorry,\" she said, \"We were getting too hot.\"\n\nwe snuggled and played a little longer. She handed me something. I looked down and found her bottoms in my hand. She grinned as I rubbed down her hip, finding nothing but skin. Her ass felt better than it looked, if that was possible. She turned slightly, and I found out she was just as smooth in the front. She hunched up a little, and soon I had two fingers inside her, stroking slowly.\n\n\"Faster,\" she whispered. I threw it into high gear, and soon she was moaning and shaking. She lost it, cumming on my hand. When she calmed down, she put her hand in my suit, grabbed my aching cock, and stroked me until I blew so hard some of it actually floated to the top.\n\nI looked around at Cindy and Allan. She was completely naked, her nipples would pop out of the water once in a while as she bounced. I couldn't see her hands either.\n\n\"Honey, will you get my cover?\"\n\n\"Aren't you going to put your...\"\n\nShe put her fingers to my lips.\n\n\"No. I intend to stain your upholstery on the way back. Wanna complain?\"\n\n\"Not in the least. Looks like I need to get Cindy's cover too. That's her top, isn't it, out past the safety line?\"\n\nCindy squeaked when she saw it. Becky teased her, telling her she had to come get her cover, while Allen just grinned. Finally she tossed it to her. Hers was a lot lighter than Becky's, and it was like wet tee shirt night watching her come out of the water.\n\nI heard a gasp, and looked around. Three teen boys, carrying their gear out, were standing there like deer caught in headlights.\n\nCindy grinned, stretched, forcing her nipples out, asking Allan for a towel. Not to be outdone, Becky bent over, showing the bottom of her ass cheeks as she picked one up and gave it to her.\n\n\"Goodnight, boys. Maybe we'll see you next week.\" they said, as they walked to the car. We followed along, admiring the view and laughing.\n\n...\n\nThat night will be etched in my memory for the rest of my life. Even now, as hurt and heartbroken as I am, I still get hard thinking about it.\n\nWe damn near broke the bed. Seems she's multiorgasmic, and goes absolutely crazy if you eat her pussy. Her blowjobs would bring tears to your eyes. She could torment you for hours, if she wanted to. By the time she was done you wanted to come so bad it actually hurt.\n\nHer pussy was tight yet yielded easily to my thrusts. I can still feel her muscles massaging the cum out of me.\n\nI had only had anal once before. She didn't like it so we never did it again. Becky taught me it was all about preparation and anticipation. When we first did it, I thought I would pass out.\n\nIn spite of everything else, I never had complaints about the sex, before I found out I was sharing.\n\n...\n\nWe were constantly together. They'd meet us for lunch once or twice a week. One would bring it, while the other went out. We discovered the conference table was really sturdy, the couch not so much. We had to replace it after Allan and Cindy had lunch in one day.\n\nWe were heading towards moving in when we hit a bump in the road. I always felt it was a warning I should have heeded.\n\nWe got the other account we wanted so badly. It meant enormous hours until we could afford to hire someone. I usually worked more hours than Allan, so he could spend time with Cindy.\n\nBecky and I hadn't been out in three weeks. She was a beautiful woman and used to getting a lot of attention, and it didn't sit well. She was bitchy the last two phone calls, despite my apologies.\n\nI looked up one Saturday at five.\n\n\"Fuck this,\" I thought. I was going to call her, spend some quality time. She wasn't home. I called Cindy and she said she thought she was out with her friends from work, after bitching me out for not paying more attention to her. I wasn't in the mood.\n\n\"All right, if that's the way you feel. Tell Allan starting next week he works every hour I do. Sound good?\"\n\nShe was trying to back pedal when I hung up.\n\nForty minute later Becky called.\n\n\"Where are you?\" she asked.\n\n\"I couldn't get hold of you, so I went back to work. Enjoy your night out. I'll call you tomorrow.\" She was still trying to talk when I hung up. Cindy had killed my mood and I wanted to be alone.\n\nI had started back to work when I decide to eat something. There was a little mom and pop operation down the street from the office that had killer hot dogs, so I stopped and ate two piled so high with toppings they were dripping everywhere, with a large order of hand made onion rings. After all, I wouldn't be kissing anyone tonight, would I? Still grabbed a couple of breath mints on the way out.\n\nI started home when I remembered a club Cindy was telling me about. It was sort of like the one we liked except it leaned towards jazz. She had read about it in the entertainment section and thought it might be a change of pace. Maybe they'd be there. Either way, I could check it out.\n\nIt was a nice place, muted lighting, dark wood, with a pub style kitchen and a nice bar. They had a three piece, drums, piano, standup bass. They were pretty good, even If I wasn't a big fan of jazz.\n\nI remember thinking Becky would like it when I heard her laugh. It made my day. This had been where she had gone with her girlfriends. Sneaky little devil was doing what I was, checking it out.\n\nI started into the lounge area when she walked into view arm in arm with some guy I'd never seen, heading towards the dance floor. It didn't concern me, we were both often asked to dance by others. We did, but not often. \n\nI looked around the floor and didn't see any single girls. Huh? I decided to hang back, see what was going on.\n\nI took a small table off to the side, and watched. There was no one else at the table. They danced three more times, the last with his hand firmly on her ass. The kiss at the end and the one at the table sealed it. I hadn't asked her to be exclusive, but I expected her to be more up front if she was dating others.\n\nI can't deny it hurt. It did, a lot. I wrote it off as a life lesson and started to leave, before I remembered the remark about being out with the girls. I got the waitress, had her take them a round of drinks in exactly five minutes, giving her a twenty dollar tip.\n\nShe had the radar of a good cocktail waitress or bartender.\n\n\"There's not going to be any trouble, is there?\"\n\nI assured her, saying I was leaving, they were friends of mine, and I felt foolish not noticing before. The drink was an apology because I had to leave and hadn't talked to them. She bought it, kind of.\n\nI waited a minute and dialed her number. The band was on break, and I heard it ring from where she was sitting. She looked at it, said something to her companion, and took it.\n\n\"Hi, honey. Change your mind?\"\n\nShe sounded so sincere.\n\n\"NO, I'm beat. It's bed for me. Say hi to the girls for me. Where are you? It sounds awfully quiet.\"\n\nThe band's on break, and the girls had to go potty. I'm guarding the drinks.\"\n\nThe waitress was approaching with their drinks.\n\nThey looked over at me and I stepped out of the shadows.\n\n\"The Fedora is nice isn't it? Tell your girlfriend here not to go into the ladies room dressed like that. They may not understand.\"\n\nHer mouth opened and closed a couple of times before she could recover. I was already out the door. I sat in the darkened lot across the street and watched as she ran out the door, looking around wildly. Her date came out and said something, but she shook him off.\n\nThe phone started ringing, and I cut it off. I didn't feel like talking. Her date argued some more and she kept shaking her head no. He finally gave up in disgust and went back inside. I wondered what she was waiting for? Fifteen minutes Cindy roared up in her SUV. She climbed in and started towards my apartment. I went the other way.\n\nNot in the mood for a bunch of drama,I found a motel, paid cash, and knocked out for ten straight hours. \n\n...\n\nThere was no one in my parking lot when I got home, so I showered, changed, and headed back out. I went by the office, but Allen and Cindy were there. I figured Becky was lurking somewhere, so I drove by, went four hours away to the mountains, called and left a message at their house since I knew where they were, and told them I needed a break and would be back Tuesday.\n\nI slept. I walked around in the sunshine enjoying it immensely. I ate when I wanted, what I wanted. Even stopped at a tourist trap and bought them all some gifts. Tuesday morning I was in the office bright and early. I had parked the car out of sight and he nearly jumped out of his skin when he walked in. He grabbed his phone immediately.\n\n\"Use that and I'm gone for the rest of the week. Understand?\"\n\nHe nodded, watching me warily.\n\n\"Good. Let's get to work. I feel great. That little break made a world of difference. I've come up with some good ideas. Tell me what you think.\"\n\nSo until lunch time we worked away. He was excited about the new ideas.\n\nAt lunch I told him I'd see him in an hour, and left. Usually I ate a sandwich at the desk and kept working.\n\nHe had been back twenty minutes before me. Cindy was there twenty minutes later.\n\nShe drew in a big breath, and I held up mu hand.\n\n\"I'll talk first, if you don't mind. Becky doesn't owe me a thing except honestly. We hadn't talked about being exclusive. I would have hated it but understood if she told me she wanted to see others. But she didn't. And then she lied about who she was with and where she was. That tells me a lot.\"\n\nShe started to talk and I held my hand up again.\n\n\"Not done yet. Tell her not to bother me. I'll call her sometime this week. One more thing, did you know she was on a date? And then lied to me about it? If I think you did, it would affect our friendship greatly. If I can't trust you you're not my friend. Understand?\"\n\nShe paled a little and Allan looked uncomfortable. Then she lied her ass off.\n\n\"I didn't know or I would have stopped her. I'm mad at her too, Jace. I thought she was finally growing up. I'm as disappointed as you are. I chewed her a new ass over it.\"\n\nWhen?\" I asked.\n\n\"What do you mean when?\"\n\n\"When did you chew her a new ass?\"\n\n\"That night. She called me from the club, a crying mess. We spent half the night looking and waiting for you. We finally went to my house and crashed for a few hours. You had come and gone while we were asleep. Can I at least call her and tell her you're back and will talk to her?\"\n\nI sighed, mentally. Maybe she was telling me the truth after all.\n\n\"Yes, by all means call her. Now, if you want to keep that house and that tank you drive, you need to let us go back to work.\"\n\nAt six on the dot I told Allan I was leaving for the day.\n\n\"You're kidding, right? There's lots to do yet.\"\n\n\"And it'll all be here tomorrow when we come back. No more killing myself, at least for awhile.\"\n\nI left him with his mouth hanging open. The next day I placed an ad for an associate. Allan was pissed because it ate into the profits.\n\n\"Fine,\" I said. \"I'll pull the ad. But if we do, from now on we're hourly. The salary goes out the window.\"\n\nHe didn't like that because he knew I easily worked at least a third more than he did, so he shut up.\n\nI hired a woman straight out of school. She was really talented but had no real world experience. I ended up spending a lot of time with her at first, but she developed nicely. Our business actually increased because we could handle more.\n\nBetween Aida and I we kept the ideas rolling while Allan handled the contacts and sold.\n\n...\n\nI called Becky like I promised. She didn't know what to say. I waited.\n\n\"I'm sorry,\" finally came out.\n\n\"For what?\" I wasn't going to make it easier.\n\n\"For lying to you. For going out behind your back. I was climbing the walls, and just wanted to get out. I wasn't going to sleep with him. I just needed a companion.\"\n\nI shocked her.\n\n\"I understand. And you hadn't made me any promises. But I expected honesty, and you lied like crazy. Tell me how I could trust you enough now to return to where we were? Or go forward? You know I was wanting more. I thought you did too. Ah well, a leopards spots and all that.\"\n\nThat off hand comment actually sent her into a rage.\n\n\"Damn you! You always had it in the back of your head I couldn't measure up, didn't you? I bet you threw your arm out of socket and put a callous on your tongue patting yourself on the back and saying 'I told you so'. I was falling in love, asshole, for the first time in my life. I was scared, and lonely. Feelings I never had to handle. I fucked up. I'm sorry.\"\n\nI said it gently, just above a whisper.\n\n\"I'm sorry too. And I was already in love with you.\"\n\nI hung up to her voice pleading with me to stay on the line.\n\n...\n\nI didn't talk to her for two weeks.\n\nWhen I did, I didn't expect what was said.\n\n\"Would you like to go to a club Saturday? Maybe eat at that new Indian restaurant before?\"\n\nI was shocked by the anger in her voice.\n\n\"Decided to forgive the poor sinner, huh? My penance over?\"\n\nI hung up, gently. I didn't need this.\n\nCindy called me.\n\n\"What did you say to her?\"\n\n\"Asked her out.\"\n\nSilence. I thought maybe she'd hung up.\n\n\"Oh. What did she say?\"\n\n\"She didn't say yes, and that's all that matters. Good night, Cin.\"\n\nTwo days later Cindy called me again.\n\n\"I'm with Becky. If I give her the phone, will you talk to her?\"\n\n\"Yes, if she'll talk and not rant. Make her understand, it's getting easier and easier not to talk to her. So if she wants to say something, do it, without drama or hysterics. Tell her, then hand her the phone.\"\n\nI heard a couple of minutes of whispering.\n\n\"Jace?\"\n\n\"Hi, Becky.\"\n\n\"Jace, I'm really sorry. For everything. I'd like to start over, like new. I want you to see me as a new person, not someone that you used to know. Allen wants to grill Sunday, will you come over?\"\n\n\"To visit or grill?\"\n\nShe gave a little laugh. Allan would burn concrete if you put it on the grill.\n\n\"Both. I'd like to actually eat.\"\n\n\"Make your potato salad and it's a date.\"\n\n\"I will. Thank you, Jace.\"\n\n...\n\nIt took five months to get a sense of intimacy back. I dated others, which pissed her off no end. I told her up front if I couldn't go out with her and why. She bit her lips raw holding back.\n\nWhen we decided to get intimate, we had the big talk.\n\n\"If we're intimate, it's just us. No one else. Do you understand? Even if you just go out with old friends, if I find out about it from someone besides you, we're over. There won't be any rising from the ashes this time. And I don't intend to be your jailer. I won't be checking up on you, you're on your own. Screw up, and it's all you.\"\n\nShe agreed too quickly for my taste.\n\n\"I want you to really think about this Beck. I'm talking long term commitment here. Don't give me your answer yet. I need to get tested before we do anything. I don't want to bring anything extra with me.\"\n\nFor the first time she understood I'd had sex with others. I could see the tears, but she fought them back.\n\n\"All right honey. I haven't been with anyone since you, but I'll do it too. And I already know the answer.\"\n\nA week later we exchanged clean bills of health and apartment keys.\n\nSex with Beck was always exciting, but the welcome back sex nearly killed me. My balls ached, my dick was sore, and I actually fell asleep at work, twice. Allen said something to Cindy, and she told Becky to let me rest occasionally, so she could keep her house.\n\nShe agreed, reluctantly.\n\nI still worked long hours, but not like before. The experience had taught me to prioritize.\n\nWe had been living together for eight months when I called her at her job. \"Can you get off this afternoon? I wouldn't ask, but it's really important.\"\n\nShe agreed instantly, so I picked her up, handing her a drive through bag. \"Sorry babe. This will have to hold you until dinner.\"\n\nI refused to tell her what it was about. We drove to a nice neighborhood and pulled into a drive. There was a for sale sign out front and a realtor waiting.\n\n\"Is this your wife?\" she asked politely.\n\n\"Maybe,\" I said, \"I'll know by the end of the day.\"\n\nBecky looked at me like I was crazy.\n\n\"Well, let's have a look, shall we dear? Really, men have no clue what's really important in a house, don't you agree? Oh, they understand structure, brick and wood, but they don't have a feel for comfort or possibilities.\"",
        "She kept up her patter as she showed her the house, three bedrooms, nice big lot, small patio.\n\n\"Excuse me for just a moment while we confer, will you?\" she said to the realtor, before grabbing me into the living room.\n\n\"Look honey, a fireplace.\"\n\nShe wasn't going to be distracted. She backed me against the mantle. \"What the fuck is going on here?\"\n\n\"Really, Beck, isn't it obvious? We're house hunting. I don't want to start married life in an apartment. Besides, when we have kids we're gonna need the space.\"\n\nI don't think she heard much past married life, before she launched into my arms. I scraped the back of my head on the stone mantle, and didn't care at all.\n\nThen she cried. Then she giggled. Then she got serious. \"Where's my ring?\"\n\n\"I haven't got it yet. I thought we'd pick it out together.\"\n\nThe realtor came looking for us, and heard the last. She laughed.\n\n\"What did I tell you, dear. Clueless. I swear, if we didn't guide them, the species would disappear. Are you up to looking at a few more houses?\"\n\nUp for it? She nearly dragged both of us out. I got to sit in the back while they talked location, school districts, shopping access. I stopped listening after five minutes.\n\nWe looked at four more, before we went back to our car. She wanted to look at that one once more. When we got to the living room, she looked at the mantle, smiled, and said \"this one.\"\n\nIt took a week to do the paperwork. Our business was booming. We had hired another associate, and Allen was training a new salesman.\n\nWith the hefty down payment I was able to make, we were able to move in less than a month. Of course, we didn't bring any of our old furniture. I let her go until she got to the patio and the garage.\n\n\"Mine,\" I said, defiantly. She laughed and agreed.\n\nI spent a little money and installed an outdoor kitchen and living area. Even had a clay oven built. I loved it. We ended up cooking outside ten months out of the year on a regular basis, and sporadically the other two.\n\nCindy was a little jealous, and before we knew it, we had new neighbors a block over. Made it easier to share rides to work. I swear they wore a groove in the sidewalk going back and forth.\n\nThings went great for three years. Cindy couldn't have children, so they went through the long, frustrating process of adoption. The patience paid off when they got a set of twin girls, eighteen months old. We held a little party to celebrate that turned into a tearfest for the girls while we learned what it was like to watch two active toddlers.\n\n\"Your life is over,\" I laughingly told Allan.\n\n\"No it's not,\" he said, through obvious tears, \"It's just beginning.\"\n\nI was really quiet as we walked home. So was Becky. I stopped at the end of our driveway.\n\n\"When?\" I asked.\n\n\"In four months. That way I won't have to carry him or her through the heat of the summer.\"\n\nThe neighbors must have thought we were crazy, on our knees in the drive, hugging and crying.\n\n...\n\nRight after that conversation the economy started tanking. Six months later Becky's company suddenly declared bankruptcy. She didn't get severance pay, she didn't get her vacation pay, nothing. She was pretty distraught.\n\n\"Calm down honey. A lot of people are going under, including a few of our biggest competitors. We're getting a lot of interest from their old clients. I may have to work a little harder, but we'll be fine. And as good as you were at your job, someone will snap you up.\"\n\nThe economy got worse, and she never found another job in her field. No one wanted to pay her what she was worth despite her experience when they could get an MBA straight out of school for half as much.\n\nShe fretted, she brooded. She and Cindy joined a gym close enough they could walk to, pushing the kids in the strollers. This kept her going for a few months. Never really out of shape, she was like a rock after a couple of months.\n\nShe started volunteering for some big causes, hoping she could network a job out of it. I didn't like it because she would be gone almost every other weekend, to some charity event or another, but I kept quiet, thinking it was doing her some good.\n\nOne Friday she came in at two a.m., waking me from a dead sleep with a first class blowjob. As soon as I was erect and awake, she mounted me, riding me hard. When she finally collapsed, gasping for breath, I asked what brought it on.\n\n\"I got a job! I'm the new assistant event\n\ncoordinator for the Sloan Group. Tonight was my tryout, and they liked what they saw. They represent four major charities. It's not as much as I was making, but close enough to start.\"\n\nShe was on an emotional high, and I cuddled her, making the right noises.\n\n...\n\nIt had been almost a year and she still wasn't pregnant. We went to the doctor.\n\nHe looked over the tests he'd ordered.\n\n\"You're both fine. Everything is in good working order. There's no reason why you won't be pregnant soon. My guess, it's the stress she's been under because of the economy. Animal birth rates go down if the food supply is threatened or there is an unusually large number of predators in their range. It's the same with women. Birth rates are low in stressful environments, like war zones, for instance. Go home. Practice a lot. It'll happen.\"\n\nBut it didn't happen. She came to me the next day during lunch. \"Honey, I need you to do something for me.\"\n\n\"Sure baby. What do you need?\"\n\nShe fidgeted for a bit.\n\n\"I want you to let me go back on birth control, for another year. Let me get comfortable in my new job, and build up enough time I won't lose it over a pregnancy. Just a year honey, I promise.\"\n\nI was actually a little relieved. The economy was still going downhill and I didn't see an upswing for quite a while, so I agreed.\n\nWe were actually doing a lot more work, picking up the slack from failed companies. It was tougher than ever. If we couldn't do it for what they wanted to pay, there was another ad agency just down the street desperate for business.\n\nPart of her job was attending the events, to make sure they went smoothly. I went when I could, but more and more she went alone. She told me not to worry, since she was working anyway.\n\nAs the husband of one of the key players and a business owner, I was sort of expected to contribute to as many of the charities as they represented as possible.\n\nWe picked out the two we thought most worthwhile, and committed to them. We even sent someone occasionally to represent the company at the events. Allan and Cindy went a few times, but he was as overworked as I was, so he backed off.\n\nThe economy was finally starting to turn around. I could see the light at the end of the tunnel. \n\nBeck had been at her job for a year, and had gotten a small promotion and raise. We started talking about a family again.\n\nI talked Aida and her husband into representing the company at some of the events. It kept our name in focus and allowed Allan and I to work more. Aida had developed nicely, to the point that she was being stalked by competitors. We had a long talk about it. I told if she got a truly good offer I wouldn't hold it against her if she took it. She assured me none had made an attractive enough offer to even consider moving.\n\n\"Yet,\" I laughed.\n\nI noticed she seemed a little down, and seemed to be avoiding me unless it was absolutely necessary. I figured she had finally gotten that good offer. I called her in for a little chat.\n\n...\n\n\"You haven't been yourself lately, Aida. If I've noticed, so has every one else. Something you want to talk about?\"\n\nAida was an attractive black woman. Tall, striking, usually smiling. If you got past her looks you discovered she had a steel trap for a mind.\n\nShe looked down, smoothing her dress, one of her stress signs.\n\n\"I thought a lot about what I'm about to tell you. My husband has been pushing me to talk to you, so here it is. It might not matter. You might already know. If not, please don't be angry with us.\"\n\nI figured this was it, she was giving me notice.\n\nShe pulled out her tablet, fiddled with it for a bit, and handed it to me.\n\nA series of photographs. Of Becky, and a man I didn't recognize. There were shots of them laughing, holding hands, kissing. One of them dancing, with his hands on her ass. He had her dress eased up until the bottoms of her cheeks were showing. One in a semi dark room, in a fierce liplock.\n\n\"These were taken over the last three events we've been to. I don't think she's realized who I am, or that I work for you. The last time she knew I was there, she spoke to me, and was extremely professional. Maybe you knew, but I didn't want to be the one to bring it to your attention if you didn't. Please don't fire me.\"\n\nI was in shock. This had to be some kind of gag. I'd go home and Becky would laugh, all our friends would jump out, and she'd say 'Gotcha!' and explain it all away.\n\nBut I knew, I KNEW, that it was exactly like it looked. I sat for a minute, before telling a nervous Aida her job was quite safe, and asked if she would transfer the images to my computer and burn me a hard copy. She stood.\n\n\"You didn't know, did you? I'm so sorry. If you need anything, ask.\"\n\nShe came round and hugged me, the first physical contact we'd had in all the time we'd work together.\n\n\"Again, I'm sorry.\"\n\n\"I am to,\" I said, \"please don't say anything about this.\"\n\nShe promised and fled the office, scared of the look on my face.\n\nDespite being an idea man, I was stumped. I did what I always did when I approached any problem, I did research. All I had now were pictures from an amateur. I wanted hard evidence.\n\n...\n\nHis name was Johnny Walker, and he hated scotch.\n\n\"I should have been named Jim or Jack, I'm a bourbon man through and through.\"\n\nHe came highly recommended to me as one of the best in his business, so I hired him. It only took two weeks to get me everything I wanted.\n\nHe met at a bar owned by one of his friends. There were rooms for private parties, and we used one of those. I didn't want to be seen going into his office, or him coming into mine. He agreed totally. I'd even bought a burner phone I kept locked in my desk to use to communicate with him. I know, it sounds paranoid. After all, if it was nothing, I didn't want Becky getting wind of the fact that I had her investigated. It would not lead to good things.\n\n\"It's all here,\" he said, giving me a small briefcase, \"pictures, video, interviews with friends and coworkers. Some of them didn't even know she was married. Apparently she doesn't wear her rings at work. They weren't particularly careful. I'm sorry.\"\n\nI handed him a check and picked up the case. He stopped me.\n\n\"You're not going to do anything stupid are you? Scorched earth, violence? You've been awful calm about this and in my business calm is kind of scary. It's not worth going to jail for. Cut your losses and move on if you can't forgive her.\"\n\n\"I'm not going to hurt her, or him. Physically, at least. They both went into it with their eyes open. Surely they considered all that could happen if they got caught.\"\n\nI paused, thinking.\n\n\"I'm not going to hide money, make ridiculous demands, play games. And I'm not going to fight to keep her, I should never have to be in the position to have to fight for her, and by her actions there's nothing to fight for. She broke the marriage of her own free will. I'm just going to walk away. Does that make me a wimp?\"\n\n\"No it doesn't. It makes you a man of good judgement, someone calm and logical under pressure. A rarity in these situations. And they probably didn't consider the consequences at all. Few do. Got a lawyer?\"\n\nI shook my head. \"I thought I'd wait for the report.\"\n\nHe wrote something on a notepad and handed it to me. \"I work a lot with these three. They're all good. The first is a shark, he isn't happy until blood is spilled. The second is the guy you want if you want to stop a divorce, not a good choice in your situation. The third guy is your man. He doesn't like drama, likes to keep things clean and calm as possible, while doing his best for your interests. If you don't have anyone lined up, give him a call. Mention me, and you get a discount.\"\n\nHe walked to the door. Turning, he gave me a few more words of advice.\n\n\"If I were you, I wouldn't watch the DVD or look at the pictures. It won't help your case, and it will burn memories into you it will take years to erase. Same with the report. You already know all you need to know. However, read the contents of the red envelope. There's some pretty interesting information about your friends and their knowledge of her affair. And per your instructions, we won't turn the phone tap off for another two weeks. Again, I urge you not to listen to them. Call if you need anything else.\"\n\nI took the case to my office, extracted the red envelope, and locked the case, then locked it in the bottom of my file cabinet. I'd take his advice, for right now. I did call the third man on the list and set up a consultation.\n\nPaul Whitfield ran a small, three partner office. The offices were in an old building that still had the ornate moldings with high ceilings and dangling fans. He saw me looking and grinned.\n\n\"We own the building. I insisted we keep the fans. Give the place character.\"\n\nI liked him instantly. He warmed up during the meeting, and when we were done I had a divorce lawyer I felt I could trust. He approved of the amicable split, said he could do better on the settlement, this wasn't a no fault state, but it should make it easier for everyone. If she didn't fight.\n\n\"Think she will?\"\n\n\"I have learned recently that I have no idea what she is thinking, or doing. When can we file?\"\n\n\"Thursday or Friday, whichever you think best.\"\n\nI thought about it.\n\n\"Can I have it done on a Saturday evening?\"\n\nHe looked at me.\n\n\"This isn't going to stray into getting stupid territory, is it?\"\n\nI grinned, for the first time.\n\n\"Probably. Hold off until Monday, serve her then. She should be home by seven.\"\n\n\"Not at her office?\"\n\n\"No. Let her keep a little dignity. Besides, if she's fired, wouldn't I have to support her?\"\n\n\"Smart man,\" he grinned, and shook my hand, before going back into lawyer mode.\n\n\"Call me if you think of anything you forgot to tell or ask me. I thank you for your business, even if it's sad business. I'll call right before she gets served, if you want.\"\n\n...\n\nI got my ducks in a row.\n\nI looked around and found a nice two bedroom house on the next town over. I thought about an apartment or condo, but enjoyed houses better. It would mean a thirty five minute commute, but it was a quiet neighborhood, and I didn't think she'd look for me this far out.\n\nI had read the red folder. It made me very, very angry to know how many people I knew were aware of or helped cover for her affair. Their time would come, especially four of them.\n\nI played nice at work, kept up the farce at home for the rest of the week. She was feeling amorous Thursday, letting me warm her up for the weekend, I guess. By now she was just pussy to me. I didn't necessarily fuck her, but it wasn't exactly loving either. She got off, I got off, then I got off her.\n\n\"You seemed a little distracted tonight, honey. Do I not do it for you anymore?\"\n\nShe acted playful, but I sensed an undertone of fear in her words.\n\n\"You've always done it for me, Beck. I'm just tired and stressed. Let's get some sleep.\"\n\nI tried, but I just couldn't make myself cuddle, so I turned over and faked sleep. She snuggled to me, spooning.\n\n\"Love you, baby.\"\n\nI didn't answer, still pretending to be asleep. I think she could tell I was faking, but she didn't say anything.\n\n...\n\nIn the end, I just couldn't stand it, straying right into what Paul called 'stupid territory'. I waited until almost an hour after the event was in progress before walking through the doors. I stood on the fringe of the crowd, watching. They held hands, snatched a little kiss now and then. The band started up and I watched them sway across the floor. He was a better dancer than I'd ever be.\n\nOther than that, I didn't see it. He wasn't as tall as me, or as toned. No accounting for taste or lack thereof, as my great aunt was fond of saying. I was almost to them when I stopped dead. \n\nCindy. She appeared right in front of them. They hugged, and they all laughed. I wonder if Allan knew she was here?\n\nI was like Moses parting the Red Sea. One look at my face and people got out of the way. Becky must have noticed how the crowd was moving back. She turned, still holding his hand, and looked dead into my eyes.\n\nShe froze for a few seconds, before trying to form words and let go of his hand. He grinned, the happy grin of a guy who's life is good, and held on.\n\n\"Friend of yours, hon?\" He said, finally letting go and holding out his hand.\n\n\"No,\" I snarled, \"Husband.\"\n\nHe paled and took two steps back. I looked at Beck.\n\n\"Aren't you going to introduce us?\"\n\n\"Jace, honey, it's not what...\"\n\n\"What it looks like? Give it up. It's exactly what it looks like. My wife keeping company with another man. How's that for putting it politely? I could have said the asshole the bitch is screwing. The guy she's hanging the horns on me with. The scum sucking bottom feeder who has no problem fucking a married woman.\"\n\nI was getting louder, and I drew myself in, breathing deeply. Her honey was trying to disappear into the crowd. Quite a few were listening. I called out to him, drawing even more attention.\n\n\"Where do you think you're going? You got the balls to bang her but not stand by her when shit hits the fan? Doesn't say much for you, does it? But don't worry, she's yours now. I got no more use for her.\"\n\nBecky was pulling my arm, begging me to calm down and we'd find a place to talk. I removed her hand, a little forcefully.\n\n\"I know, Beck. I KNOW. Don't try to spin it. Don't insult me by trying to explain it. We're through. Completely, understand? I left you a little something on the dining room table, It should bring back fond memories for you.\"\n\nI looked at Cindy, standing beside her and looking completely terrified.\n\n\"And you. Don't you ever speak to me again, not in this lifetime. If we're in the same room it would be better you stay as far away from me as possible, or leave right away. No wait, I do want to hear one thing. Did Allan know?\"\n\nShe hung her head. That told me all I needed to know.\n\n\"Then tell him we're through as partners. He can buy me out, or I'll put my half up for sale.\"\n\n...\n\nIt hit the fan big time. She called. Allan called. Cindy called. Over and over. I didn't answer, erased the messages. I kept my car in my little garage with the door down. I was walking distance to a grocery store and a bar. Didn't like the bar, but the store was fine.\n\nI shocked the shit out of Allan by showing up at the office Monday. He started to talk but I shut him down.\n\n\"I know you knew. Cindy as good as told me, being the true, loyal friend she is. I'll never forgive Cindy for helping her. And before you say it, she was helping her at the very least by keeping her secret. So tell your wife it would be in her best interest to stay away from the office, and me.\"\n\n\"If she insists on being here, I won't. I'll let the business go down the drain and walk away, Allan. It would be very easy. This includes Becky, her lover, or any other of our so called friends. Leave it alone.\"\n\nI had already called the police about restraining orders. They told me to talk to my lawyer. By nine Becky and Cindy were pounding on my office door. I called Allan.\n\n\"If you want to stay in business, make them leave. Now. Or I'll be the one leaving, and I won't come back.\"\n\nI could hear a lot of the argument through the door. Becky was refusing to leave, and Cindy was supporting her. Allan was trying to make them understand.",
        "\"Please, girls, I'm begging here. This is his place of business as well as mine, and he has the right to conduct it as he sees fit. If you push it, he'll have grounds for a restraining order, and that would be bad. He's so upset he told me he's going to sell his half of the business, if I don't buy it he'll go to someone else.\"\n\n\"We can't afford that, Cindy. Not now. We've just gotten to the edge of being really successful. He's the idea man, the brains behind the business. I just sell whatever he comes up with. It would ruin us, Cindy. Think about the kids.\"\n\nI heard more mumbling, then silence. He called.\n\n\"They've left. You can come out of the office now.\"\n\n\"I don't think so. As long as I'm in here I'm in an asshole free zone. Go back to work, try to figure out what you're going to do. And ask Aida to come in, please.\"\n\nHe was starting to beg again when I hung up.\n\n...\n\n\"It been an interesting few days. Care to hear about it?\" she said, as she sat.\n\nCuriosity got the better of me, so I nodded.\n\n\"I was there, you had forgotten, hadn't you? I nearly flipped when I saw you. Mack[her husband]\n\nand I were trying to intercept you but you were too quick.\"\n\n\"Mack said he saw murder on your face. I know you managed to scare the shit out of quite a few people. After you gave your little speech and left it was bedlam for awhile. Becky did try to follow you, but Cindy and the guy held her back. I was close by then, and I heard Cindy tell her to give you a little time to cool down first. She was crying, saying if she didn't get to you then she'd never get another chance. But by the time she broke loose you were gone.\"\n\n\"Quite a few of the patrons left after the scene. I have a feeling donations that night were a little shy of expectations.\"\n\nShe stopped, looking at me. \"Do you know his name?\"\n\n\"Yes. And his age, his residence, what kind of car he drives, his past, and everything else a really good PI could come up with.\"\n\nShe shuddered a little.\n\n\"You're not going to do anything cruel, are you?\"\n\n\"Yes,\" I said, making her blanch, \"I'm gonna ignore him. Every time he walks around a blind corner or hears a loud noise behind him he'll expect it's me. He'll be a nervous wreck for awhile. Eventually he'll figure out I have absolutely no interest in him, and that will be the biggest insult I could give him.\"\n\n\"What about your wife? They had to almost carry her out of the place. I think she was beginning to realize how bad it was going to be.\"\n\n\"I don't have a wife,\" I said, stonefaced.\n\nThen I grinned, to ease her mind.\n\n\"But if anything ever happens and you find yourself single, I'll be like a politician at a pork barrel. White boys aren't all bad.\"\n\nShe smiled. \"I don't cross the color lines, but if anything ever happens, for you I'd make an exception.\"\n\nWe stood and she hugged me. It felt great. She rubbed those nice mammary glands across my chest.\n\nI couldn't help it, I smiled. She grinned back.\n\n\"I'm gonna stop on the way home and get an average sized white dildo and call it Jace, for future fantasies.\"\n\nWe laughed, hugged again, and worked the rest of the afternoon.\n\nWhen I came out there were two envelopes on my bike seat, one from Cindy, one from Beck. I knew Allen was watching as I dropped them on the ground and left. I hadn't got a block when I saw a familiar SUV behind me. I laughed into my helmet. Let the chase begin.\n\nI was on my Yamaha Road Star, 102 inches of v twin power. My one nod to success. It was two years old, a repo I'd gotten a really good deal on. Beck loved it, and we spent many an afternoon just tooling around, exploring.\n\nKeeping them close, I suddenly made a right turn on red. They were two cars behind and stuck. I whipped into a parking lot three blocks down, waited until I saw them zip by, and went back the way I'd come. They were probably still driving around in circles when I pulled into my garage.\n\nI carried the burner phone I'd gotten with me, and left my regular phone locked in my desk drawer. I still used it for business, I'd screen and delete everything but my customers and lawyer.\n\nBeck finally sent a registered letter, which I signed for, then sent back to her unopened. My lawyer did all my talking.\n\n\"She's a firecracker,\" he said, \"and sure knows a lot of colorful words.\"\n\nShe was living in the house, and I was making half the payment, and directed Paul to tell her it would stop six months after we divorced, in which time I hoped to sell it or she could buy me out. I knew that would never happen, she simply couldn't afford it. She refused to get a lawyer. Paul shrugged.\n\n\"She isn't required to, but you can bet at the first hearing the judge will strongly suggest she get counsel. That will be the first attempt to drag it out as long as she can to get to you. She's not going to let go, I saw it in her eyes. I'm all right with racking up the billable hours, but at some point you need to talk to her. Or, just say the hell with it and withdraw the petition.\"\n\nHe saw the look on my face and held up his hands.\n\n\"I didn't say go back to her. Just do what you're doing now, and ignore her. It may take awhile, but eventually she'll get tired and agree to the divorce. Let's give it until the actual hearing, maybe she'll realize she's pissing in the wind and be reasonable.\"\n\n\"You really think so?\" I felt a faint ray of hope.\n\n\"Nope,\" he said grinning, as he walked me out.\n\n...\n\nShe got her friends to intercede for her. Bad idea. Really, really bad idea. Word got out about my reactions and most of them understood it was a forbidden subject.\n\nThen her mom took up the banner. I'd always liked her, and I told her if she needed anything, help in any way, I'd be insulted if she didn't call me. But if she said her daughters' name one more time, I would never speak to her again.\n\nMy mom became involved. I tried to make her see things as I did. Didn't even slow her down. I left, and didn't return for three months. She stared right back into trying to 'get me to be reasonable'. I left, and she called me two weeks later, crying, and promised to never bring her up again. I think she got it. Now she was going with the sad 'I'll suffer in silence, but you know I'm right' look. Wasn't working for her.\n\nShe did say she thought I needed to see someone.\n\n\"The anger is changing you, honey. Not for the best. You need to get your balance back, for your own well being.\"\n\n...\n\nI thought about that for a while. I tried to compartmentalize, keep it separate from the rest of my life. Never could get it to work. It was the worst when I saw Cindy. She still came occasionally by the office. She knew better to say anything, she could see in my eyes what I thought of her.\n\nShe and Allan were not doing well. They were stressed, trying to figure out a way to save the business. Allan tried to talk about it once. I actually listened, calm enough now to be curious as to what they could possibly say that would justify their betrayal.\n\n\"Please, Jace, I'm begging you here. If you pull out, we both know I'll be out of business in six months. I've worked as hard as you to make this a success. I'll lose everything. The house, the cars. I have children, remember? I need to provide then with the best quality of life possible.\"\n\nInstead of calming me, it just made me angrier.\n\n\"Really? You're using the kids as a bargaining chip? Tell me something, did you even remotely consider how I might react, knowing my best friends in the whole world were helping the love of my life screw me over? You might should have considered the ramifications before you got involved. Maybe if you'd remembered the last time she did something like this and my reaction then, when we weren't married or even seriously committed, you would have spoken up. Were you thinking about the kids while you were lying to me?\"\n\nHe flushed, and looked really, really angry.\n\n\"Goddamnit! It's time for you to get over yourself and think about the harm you're doing here because your feelings are hurt. She cheated on you. I'm sorry. I shouldn't have allowed Cindy and myself to get involved. I was trying to protect you. Do I need to kick your ass to get you to understand?\"\n\nWrong thing to say.\n\n\"You wanted to protect me? Then why didn't you read Cindy the riot act, tell Beck she was making a serious mistake, threaten to tell me unless she stopped? I think you weren't worried about me at all, but were more worried about the business. This cash cow has mooed her last, Allan.\"\n\n\"You're good at what you do. You'll find a job pretty easily, especially now that the economy is rebounding. You may not have the quality of life you have know, but you'll survive. Cindy could actually get a job for awhile, to help. It might give her the shot of reality she needs.\"\n\n\"And as far as kicking my ass, you don't have any idea how part of me wants you to really try. My mom says I need to release some of my rage. Pounding the dog shit out of you might go a long way towards doing that. Now, if you're done, get the fuck out of my office. Go work on your resume or something.\"\n\nLike I said, Allan is six four. I just barely made it to six. And he outweighed me by sixty pounds. But the thing he didn't have was rage. He grabbed me, spun me around, opening his mouth to say more. I didn't give him a chance, swinging instantly.\n\nI gave it everything I had, putting all the pain and rage I had into one punch. It landed right between the eyes. He went down like an imploded building. I stood over him, rubbing my knuckles.\n\n\"I believe we're done here. Let yourself out, and don't ever come back into this office unless I ask you too.\"\n\nThe door had been open, and Ben, our new salesman, was standing there with an open mouth.\n\n\"I think I'll work from home the rest of the day. Help him up, will you?\"\n\nIt was two days before I went back. He'd been treated for a concussion. And he looked like a raccoon with two black eyes. From then on, we communicated by email.\n\n...\n\nThe punch scared me. Mom was right, I did need to see someone.\n\nKathy Grimes was one of the best in her field, according to what information I could gather. It was two weeks before she could see me.\n\nMy age, roughly. Pretty, ultimately professional, with a warm manner and disarming style. Judging by the pictures on the wall, she was happily married with two preteen children.\n\n\"Nice looking kids,\" I said, looking at the pictures. She smiled.\n\n\"Thanks. Do you have any?\"\n\n\"No,\" I sighed, \"don't think it'll ever happen for me.\"\n\n\"Oh, in this business, I've learned to never say never. You're fairly young, there's plenty of time. Sit. Chair of table?\"\n\nHer office looked like a living room. In one corner was a table, plain wood, like you'd see in millions of kitchens in the country. The seats all had cushions for comfort.\n\n\"Table.\"\n\n\"Good choice,\" she smiled, \"I find it's more relaxing in the long run.\"\n\nShe put a pitcher of water, a coffee carafe, and a plate of cookies on the table before sitting down.\n\n\"Homemade. Oatmeal raisin. From a secret family recipe that you can only get from the top of the oatmeal box. Water or coffee?\"\n\nAfter she poured the water, she got down to business.\n\n\" First off, tell me exactly why you wanted to see me and what you hope to accomplish by the end of these sessions?\"\n\nI liked it. Direct and to the point.\n\n\"I'm having a stressful time in my life right now. It's giving me anger management issues. I'd like you to help me focus, to get over the anger.\n\nI'm tired of the way I am now, even I don't like me much.\"\n\n\"Well, that's pretty simple. Now, the big questions. What made you so angry? Can it be rectified, do you want to rectify it, or move on?\"\n\nFor the next ninety minutes I talked about my history, before and during the courtship, marriage, and beyond. How much I had loved her. How deeply she had hurt me.\n\nShe listened, made notes, interjected with a question now and then. By the time I was done the session was over.\n\n\"Well, you've given me a lot to digest. I'll be reviewing the tapes before the next session. Same time next week, all right? And if you feel the rage build up beyond reason, call me. I'll try and work you in. Would you like me to prescribe something to calm you?\"\n\n\"Thanks but no. See you next week.\"\n\nI had been going for a month, and was actually feeling better, when she asked me if she could make some observations.\n\n\"You're a nice man, Jace, in a not so nice situation. You've been terribly hurt, the level of betrayal you feel is enormous. That's why you react so strongly when your wife is mentioned.\"\n\n\"I see this sort of thing all the time, and I've never seen a deeper sense of betrayal. It's eating you up, and you don't know why.\"\n\n\"My opinion, you still love your wife.\"\n\nShe held up her hand before I could speak.\n\n\"That doesn't mean you want to go back to her. The fact that all your friends seemed to support or turn a blind eye only compounds the situation. And all them telling you to get over it, forgive her already, didn't help any. It keeps the pain front and center.\"\n\n\"In the end, you have to ask yourself if you'll be happier with her or without her.\"\n\nI thought about it for a few minutes.\n\n\"It sucks either way. She's betrayed me twice now. If I take her back, despite any promises she makes me, she'll have it in her head if she fucks up again I'll just forgive her again. I'm not willing to take that chance. I couldn't go through it again.\"\n\nI paused, and she waited. \n\n\"So, I guess we're over. I still love her, but love isn't the issue, here. Trust is. I can't ever see a way to trust her again. And that says it all.\"\n\n\"And all our so called friends? I can understand a little reticence, it would be a terribly awkward conversation. But the ones who helped her? The ones who gave her alibis and kept her secret? They're dead to me.\"\n\n\"Looking back, I realize they were mostly her friends anyway. I think you know by now I've always been pretty much a loner. I like people, but I don't have the need to surround myself with them all the time. There's a song lyric,'being alone doesn't mean I'm lonely', that's me.\"\n\nShe was nodding.\n\n\"That's consistent with my understanding. My opinion, if you want it, is to go ahead with the divorce. But, and I can't stress the importance of this, you need to talk to her. As long as you don't she's going to hold hope that she can get you back. Tell her why that will never happen. If you can make her understand, she may stop fighting the divorce. You've told me how you fought counseling, but you seem to the point now of being calm enough to consider it, especially if it gets you the results you want quicker. I can set up a few joint sessions with her if you like, act as referee. Your choice entirely, but that's my expert opinion.\"\n\nI thought about it for awhile. I was tired. It needed to be over. Maybe if I went to counseling with her instead of fighting it she would finally understand and let us move on.\n\n\"Think she'll come?\"\n\nShe nodded.\n\n\"I'm almost positive. She'll see it as a chance to finally state her case, and get you back. I'm warning you now, though, it could be pretty painful.\"\n\nI told her to set it up.\n\n\"I've been in pain since I found out. I'm pretty sure a little more won't kill me.\"\n\n...\n\nThe sad part was I knew she still really loved me. I knew, because I listened into her phone conversations for the next few weeks before I allowed Johnny to remove the taps.\n\nThe first days after we split were mostly her calling me. The messages I didn't listen to on my phone I got to hear anyway.\n\nMost were tearful entreaties for me to talk to her, to let her explain. After about the first fifty it was down to one sentence.\n\n\"Please talk to me Jace, please.\"\n\nThe conversations with her friends were pretty interesting, especially Cindy.\n\n\"God, we really fucked up, didn't we?\"\n\n\"Yes we did. I don't know what I was thinking, Cindy. Why did I do it?\"\n\nShe actually giggled.\n\n\"You did it because it was fun. You're a classic cake eater, honey, thinking you could have them both and he'd never find out. I never thought he'd find out either. I'm sorry Allan found out, but I knew he'd never tell. He needed Jace too badly.\"\n\n\"Hell, we all need him. You know he's trying to get out of the partnership, don't you? Says if we'd do it in our private life, wonder what he was up to in the business? We've got to get to him, get him back on board. We've got to fix this, Beck. The question is how. I see a long period of ass kissing in our future.\"\n\nBecky was sobbing quietly.\n\n\"I don't think there's enough ass kissing in the world to fix this one, Cin. He's really pissed. He left me a folder, pictures, interviews, you'd be amazed how eager some were to throw me under the bus. I can't believe how arrogant we were.\"\n\nSome her friends were no better. Most talked to her about strategies to get me in the same room with her right up to and including kidnapping. Most promised to talk to me.\n\nTheir reports afterwards were entertaining, one woman chewed her out pretty bad.\n\n\"I'm done. He almost took our heads off, and the sad thing is we deserved it. He asked my husband if I was all right with you having an affair and actually helping you cover it and give alibis, what was I doing when he wasn't around? I'm still kissing ass, Jack is really pissed. I'm pretty sure you're toast, Beck. I know we are. I wouldn't ask any more of us to talk to him. Sorry, hon.\"\n\nThe asshole actually called her three times. She hung up on him the first time, but the next two, right before I turned the taps off, were enlightening.\n\n\"Don't hang up, Becky. We're in serious trouble here. We need to talk. Our jobs are in the balance.\"\n\n\"You think I give a damn about the job, Greg? The worst thing I ever did in my life was go to work for you.\"\n\nI could hear the irritation in his voice.\n\n\"Come off the high horse, girl. You practically begged for this job. And it might have been my idea to fool around, but you didn't hesitate once the subject came up.\"\n\n\"Speaking of that, wanna get together? He's not coming back, and you know it. The look in his eyes that night scared the hell out of me. We could console each other, he'd never know.\"\n\nShe exploded.\n\n\"That's what we thought the first time, remember? How'd that work out? And if he's that pissed now, what do you think he'd do if he found out? No means no, Greg, never again.\"\n\n\"Calm down. It was just a thought. I have to go in front of the board of directors next week. Word of our little escapade has gotten back to them. You'll probably get a call too. We need to decide how to spin this.\"\n\nShe actually laughed.\n\n\"Spin this? If they asked, I'm gonna tell them the truth. We had an affair. We both share the blame. I will tell them that it's over, and I'll never do it again if they let me stay. I doubt they will.\"\n\nHe tried one more time.\n\n\"They'll fire me Becky, whether they do you or not. This type of work is all I've ever done. If I get let go and word gets out why, I'll probably never work in this business again.\"\n\nShe softened a bit.\n\n\"I'm not throwing you under the bus here. It was both our fault. But I have to tell the truth. If I don't and Jace finds out, I really will be toast. I'm actually fond of you, Greg, but you're not worth my marriage.\"\n\nWell, she seemed sincere. I called their direct boss and arranged a meeting. He showed, with his lawyer, scared to death I was going to sue them. That kind of publicity in this economy would seriously compromise their fundraising abilities.\n\nAnd I knew they had a very strict moral code, an absolute necessity for their company. They could lose contracts, and it would be very hard to attract new charities. Up until now they'd had a really good record.\n\nI played the tap for them.\n\n\"Before you talk, I need to tell you this tape was legally obtained. If push comes to shove, I'll make it public record in my divorce.\"",
        "I let them sweat before I gave them my proposal.\n\n\"I'll forgo legal recourse for certain considerations. First, my wife is never to know of this meeting. Second, reprimand her, demote her, do whatever you want except fire her. I need her to have a job during the divorce. Do what you want with the asshole, but in my opinion, this doesn't seem like the first time to me. What if it had been a major donor or the wife or daughter of one? In my opinion, he's a disaster waiting to happen. There again, an opinion, do what you want. Agreed? Good. Of course, we can't write this up, but I've taped this conversation. Here.\"\n\nI pulled out the recorder and gave them the tape. I neglected to mention the other recorder still going.\n\n\"Now, if I make trouble for you, you can play the tape. And one more thing. You have a volunteer, Cindy Waller. She helped my wife conduct her affair and covered for her. It might be good if she wasn't associated with you any longer.\"\n\nThey looked like bobble heads, shaking up and down in agreement.\n\nShe did get demoted, and put on probation, but she kept her job. Cindy was pissed when they told her it might be best if she volunteered for another organization, but she understood.\n\n\"I feel like Jace was behind it.\" She whined to Becky.\n\n\"What if he was? So what? I bet Allan would agree, if he would admit it. You're judged by the company you keep Cin. And right now I'm toxic.\n\nThey allowed Greg to resign, and he didn't get a letter of recommendation. I have no idea where he ended up, but he gave Becky a goodbye call.\n\n\"They canned me. Oh, it was polite, but I'm gone, with no recommendation. I guess this is goodbye.\"\n\nShe seemed sympathetic. \"I'm sorry Greg. But we brought it on ourselves. At least you're not married.\"\n\nThere was silence for a second.\n\n\"Actually Beck, I am. She's in service, in a not so nice place right now. She rotates home in three months.\"\n\n\"You asshole! How could you do that to her? At least Jace is home, out of danger.\"\n\n\"I agree. I am an asshole. But I was lonely, horny, and you were agreeable. I'm sorry about all this. You're not gonna tell her, are you?\"\n\n\"No. I have no way of contacting her, but even if I did, she doesn't deserve what I'm going through. Love her hard when she gets back, and don't EVER repeat this mistake.\"\n\n\"I promise. I'm so sorry how it all turned out. I hope you get him back. You're a hell of a woman, Becky. Goodbye.\"\n\nShe cried into the phone for several seconds before hanging up. I thought about trying to contact his wife, but in the end I didn't. She probably needed to know, but if he ran true to type she'd find out soon enough.\n\n...\n\nKathy got in contact with Becky, and she jumped all over the chance to talk to me. At her suggestion, she went to three sessions alone first. I think Kathy was trying to prepare her, but she was too stubborn to see it.\n\nThe big night finally came. The first session. I figured she would try to ambush me, so I made it a point to be there thirty minutes early. Becky was really surprised when Kathy collected her from the waiting room and found me already there.\n\n\"Jace!\" she cried, trying to hug me. Kathy imposed herself between us.\n\n\"Becky, for this to work, you have to give him his space. He's already made it clear he doesn't want any physical contact. If you don't follow the rules I've laid out, he'll leave, and he won't come back. Understand?\"\n\nIt took her a few minutes, but she gathered herself and sat down at the table.\n\n\"Becky, listen to me. I know you have things you want to say, and so does Jace. Remember, be calm, be clear, and avoid dramatics. Would you like to go first?\"\n\nShe nodded, and we waited.\n\n\"First, I need to apologize, Jace. I know what I did was wrong. You have every right to be angry.\n\nI have no excuse. I'm not even sure now why I did it. Was it worth the pain I've been going through? No way in hell. Would I ever be that stupid again? Not for anything.\"\n\n\"But Kathy has explained to me that being sorry and apologizing won't change a thing if you can't forgive me. I know I fucked up and destroyed a good marriage. What I need to do now is convince you to give me another chance. Will you promise to talk to me? If after we finish these sessions and still can't forgive me, I'll walk away and not fight the divorce.\"\n\nI looked between her and Kathy. I could see her hand in this. Maybe those individual sessions had helped after all.\n\nI spoke, she was obviously waiting for me to say something.\n\n\"I know that speech took a lot out of you, Beck. I was thinking about it for the last few days. We've known five couples over the years who've split up over cheating that have gone to counseling to try to save their marriage. How many made it? I checked, one. Gary and Sherrie.\n\nAnd they don't cuddle in public, the little touches they used to give each other all the time, gone. It's been two years, and they're still not back yet. Could you live like that? Knowing I'd always suspect you if you were gone, even for an hour or two? If I automatically tried to verify everything you told me? Snooped in your purse, checked your computer and cell phone on a regular basis? I couldn't.\"\n\nShe was flinching at my words like each was a physical blow, but kept a determined look on her face.\n\n\"If I got to cuddle with you every night in bed I could. I'd do anything and everything I could to reassure you, to show you I've changed, and you could trust me again.\"\n\nI threw up my hands.\n\n\"Ah! There it is, another of the magic words, trust. Exactly how would you get me to trust you again? You went out when we were dating, lying about it when we hadn't even made a commitment yet. I should have seen it then. Now, years later, after being together for all this time, planning a family, a future, you do it again. Were you lonely this time too? Bored because I was out trying to build a business and a better future for us and didn't have time to go to dance clubs or out on the town?\"\n\nI was finally letting go of some of the poison, and it felt good. Becky was looking horrified. Kathy stepped in.\n\n\"Our time is up. I want you to do some homework for me before our next meeting. Becky, I want you to think about what Jace said. Tell him in detail how you plan to get him to trust you. Jace, I need you to think about it too. Do you think you can get over your rage and try to rebuild a relationship with Becky? Be honest and clear. That's all until next week. Jace, could I see you for just a second before you leave? Goodnight, Becky.\"\n\nWe stood and watched as she went to her car, sitting there for five minutes before pulling out. Kathy looked at me.\n\n\"You're absolutely never taking her back, are you?\"\n\n\"No,\" I said, sadly.\n\nShe sighed. \"I didn't think so. We need to refocus the sessions, get her used to the idea, let her down slowly. If you have any love left for her, break it to her gently.\"\n\n...\n\nGently didn't work. We tried, Kathy and I, but she just refused to give up. I tried every way I could think of, and some from Kathy, but I never got her to understand. In the end I just stopped it.\n\n\"You broke your most solemn vow, Beck. Made it look easy. Even now, I know you regret what came of it, but deep down I get the feeling you can't see what you did as serious. Where I considered it life altering, you liken it to spending too much money, wrecking the car, something along those lines. Didn't you feel anything when you did it?\"\n\nShe didn't give me a direct answer as usual.\n\n\"Talk about feelings! You're the one turned to stone! Give me one more chance, please? How can you sit there with no emotion while I fall to pieces?\"\n\n\"You still don't get it, do you? There's plenty of emotion inside me. It's emotion, not intelligence, that makes us human. All animals think at some level, but who besides humans feel love, hate, desire? Not any other specie. I've just gotten better at controlling them.\"\n\nI let her talk another thirty minutes before I held up my hand, rising.\n\n\"It's over Beck. Accept it and move on. Understand I still love you, but it isn't enough anymore. The divorce is final in four weeks. It's best for both of us. You're still a young, beautiful woman. You'll find someone else. When you do, if you ever get tempted, think of us. He will deserve your best.\"\n\nI walked out, my heart breaking all over again as I heard her wail.\n\nKathy called me two days later.\n\n\"I just finished a session with Becky. You know I can't tell you what we talked about, but she still thinks she can win you back. Watch for her, I know she'll be around, and I'm worried. I'm really sorry it ended this way. I think you should continue seeing me, for a while. Shall we make an appointment?\"\n\nI thought about it.\n\n\"Not right now. I'll call you in a month or so. Thanks for everything, Kathy.\"\n\n...\n\nKathy was right. She had one last hurrah before she gave up.\n\nI loved all of her family except her oldest brother. He was a cop, a shift commander. He was also arrogant and a bully. We tolerated each other, just. He'd taken to pulling me over regularly, just to mess with me and demand I forgive his sister. I talked to Paul, he had me log the next four stops, and the good commander found himself explaining his interest in me to the assistant chief. The stops halted, and it didn't make him like me more. \n\nIt was two weeks before the final hearing. The sun was shining, spring was in the air, and I was feeling happy for the first time in a long while.\n\nThe Yamaha was humming right along that Saturday morning when the lights came on behind me. I pulled over.\n\nI was getting my license out, not looking at him, when he tasered me, put me in cuffs and threw me in the back of his car. I had just come around when he stopped at a nearby park, hauled me out while I ranted, and handcuffed me to a bench. Then he took the original cuffs off and used them to hook Becky to me.\n\n\"You'll listen now, motherfucker. I'll be back in forty five minutes, and I better see smiling faces.\"\n\nBecky babbled while I tried to clear my head, apologizing for what was happening.\n\n\"Can we talk now, baby?\"\n\nI looked at her trying to find the woman I'd married in her eyes. She wasn't there.\n\n\"Like I have a choice,\" I said, smiling. \"Just hand me my phone. I had someone waiting on me, then I'll be all ears, okay?\"\n\nShe got my phone out and handed it to me. I dialed 911.\n\n\"911, state your emergency.\"\n\n\"This is J.C. Gooding. I'm in Armstrong Park, the bench on the south side near the gazebo, and I've been kidnapped and handcuffed to the bench and another person. I repeat, I've been kidnapped.\"\n\nBecky was looking horrified, trying to wrestle the phone out of my hand. She was screaming.\n\nThere was a lot of people in the park, and some were coming over.\n\n\"Sir, a car has been dispatched. Do you know your abductors?\"\n\n\"Shift Commander Jeff Sterling. I'm handcuffed to his sister. Help!\"\n\nThe car must have been in the neighborhood, he was there in less than two minutes. Becky was still screaming while he tried to remove the cuffs. Her brother came roaring up, sliding across the grass and scattering onlookers.\n\n\"I got this, patrolman.\"\n\nHe wavered, looking at me.\n\n\"If you leave me in his custody, it makes you an accomplice. Jail time maybe, loss of career definitely. Call someone higher up the food chain.\"\n\nHe made the call, and soon six cop cars surrounded us. Nobody was arrested, pending investigation, and I was taken back to my bike.\n\nThe shit hit the fan the next day. Dumbass had everything on dash cam. Me stopping, him with the taser and cuffs, the whole thing until he stuffed me into the car.\n\nI could have pressed charges. Assault, kidnapping, unlawful use of a police vehicle, the list went on. Becky would be charged as an accomplice. I had Paul with me when we met the DA to discuss the incident.\n\n\"My client will make this easy for everyone. He won't press charges IF the officer is disciplined in house, and his wife agrees not to appear at their final divorce hearing, and ceases all contact with him. Your choice and theirs, but if they decide not to take the deal I'll go after them hard, understand?\"\n\nThey had no choice. Their parents didn't want to see two of their three children through bars, so the deal was accepted.\n\nHer brother didn't get off without pain. He was demoted, assigned the graveyard shift, reprimanded. His chances of promotions again were miniscule. He couldn't quit because no other agency would touch him.\n\n...\n\nSo it was finally over. I went back to my successful business and found a hot young blonde with big boobs who loved me for my tender heart and convinced me there was still sweetness and light in the world.\n\nActually, I lost my friends, my business, and my wife.\n\nIt was a while before I even looked at another woman. My business tanked because everyone knew the situation we were in and didn't give us any more contracts. Luckily Aida got the offer she deserved, and took her trainee with her. Ben quit soon after.\n\nThe next month I walked into the office. There was a note on the door.\n\n\"You win, you bastard. Allan found another job, the paperwork is on you desk. Sign it and the company is official dissolved.\"\n\nShe didn't sign it, but I recognized Cindy's writing.\n\nThere was actually a little money left, and after I got my half of the house sale, I was in pretty good shape. I could even take the next year off if I wanted. I took two months, got on the Road Star, and went rambling\n\nI ended up three states down, well below the Mason Dixon line. It was one of the prettiest cities I'd ever seen, surrounded by mountains, with friendly people and a relaxed atmosphere. It kind of felt like I'd landed in the sixties because the people all seemed so laid back. I stayed three days, hitting tourist traps, doing research.\n\nI checked out a few more towns but none had the same vibe, so I came back, got a room for a week, and went house hunting. I looked at some condos and apartments, but I'd become partial to houses with decent yards. I found what I wanted, the third I looked at. A small cottage, twelve hundred square feet, two bedroom, with a huge yard and a stream running across the back. It was set apart a good distance from the nearest neighbor. I leased for a year with an option to buy.\n\nNext I went job hunting, finding one at a small firm that catered to up and coming and midsized companies. They gave me a few small accounts to see how good I was. In six months the boss wanted to talk.\n\n\"Jace,\" I had to tell him, was not short for Jason. My name was actually John Charles, and I had been called J.C. up until my sister was about four. She pronounced it Jaysee, and then shortened it to Jace. It stuck, and I quit fighting it years ago.\n\nIn that peculiar Southern way, when the conversation was important, he used both my given names.\n\n\"John Charles, you've been doing very good work. So good I wondered why you were here. I checked up on what you put on your resume, and it was all true. I have a feeling you won't stay with us long, so I'm going to use you hard. I'm giving you a new account. He's a friend of mine who owns a very successful regional winery and wants to take his product national. Go talk to him, set up some meetings, and start thinking. This could be very good for all of us. And if I grow, I want you along.\"\n\nI was flattered that he thought so highly of me.\n\nThe vintner was a local, who had trained and studied in Italy for six years, before coming home to take care of his aging parents. He took over their farm, and used the north facing slopes to grow vines he had imported from the region he trained in. He started out small, adding acreage and expanding the winery as he could. Now he leased three more farms and had doubled his own acreage. He'd won several local and regional medals for his sweet wines, and wanted to crack the national market. He had already secured a distributor, now he needed an ad campaign to bring his product into the limelight.\n\nI stopped by, did an anonymous wine tasting. Most were quite good. Some I didn't care for. I finally introduced myself and asked for Mr. Edwards.\n\nHe came hustling in, in farm clothes. We shook and he asked me why I hadn't made an appointment.\n\n\"I wanted to taste your product, observe your operation, maybe work on some ideas. I don't expect you to drop everything to talk to me, just wanted you to know I stopped by, and make that appointment in person.\"\n\n\"What do you think of my wines?\" He seemed anxious.\n\n\"I liked most of them, but then I'm no expert. But I liked then so much I bought a mixed case to take home.\"\n\nWhile I was talking an idea was germinating. I couldn't wait to get back and start developing it.\n\nIt was not to be. Jack[he insisted on first names]had me follow him around for awhile, explaining the winery, the origin of the vines, everything he could think to tell me. I ended up spending three hours with him.\n\n...\n\nPersonally, I spent my off time exploring the area, turning the Road Star loose on those winding mountain roads. I'd had a little work done that boosted power, and she could scoot if I opened her up.\n\nI took some money and bought a well used but reliable four wheel drive truck, the winters could be quite snowy here. I kept my car, a little Dodge Dart. It was more than enough for a single person, and I'd bought the top of the line turbo package. It was supposed to do over one eighty, but I never got it over 110, and that was just twice. The car and the bike were garaged, and the truck stayed outside.\n\nI was wandering around one Saturday afternoon when I ran across a little bar in the middle of nowhere. There were a few bikes out front. Mostly Harleys, but there was a Gold Wing, and a few crotch rockets, so I decided to stop for a beer.\n\nThe place kind of went quiet for a minute. They could tell I wasn't a local. I ordered my beer and looked the place over. \n\nIt was old, but clean and neat. The patrons seemed to all know each other, and the insults and the banter flowed easily. The bartender talked a little after he served the second round.\n\n\"It's been in my family for seventy years,\" he said, talking about the place, \"we got a good reputation. No fights, nobody bothers anybody, especially a woman. That'll get you booted faster than anything.\"\n\nI complimented him, knowing the value of a place you could relax, be it with a crowd of suits and dresses or jeans and short skirts. People were people, basically the same despite income levels.\n\nHe liked the praise, said the next round was on him, and left me. A huge, bearded guy took the stool next to me.\n\n\"Yours?\" he said, looking through the window at my bike.\n\n\"Yeah.\"\n\nHe snorted. \"Another fucking rice grinder, what happened, they don't sell real bikes made in America where you come from?\"\n\nHe was grinning when he said it to take the sting out.\n\n\"Which one is yours?\" I asked. He pointed at an older, chopped out Harley.\n\n\"Nice ride.\" I grinned. \"The forks are from Italy, the carbs, if they're stock, came from Japan. The tires, again if they're stock, were made by a British firm, manufactured in France. Still think it's all American?\" \n\nHe stared at me. \"No shit?\"\n\nI nodded. \"No shit. Still nice bikes, though.\"\n\nAfter that half the bar was in on the discussion. One guy said his Vulcan was made right here in the U.S. We ended up going out to look at all of them. By the time we came back in I had a new set of friends.\n\n...\n\nI ended up hanging at the bar most weekends, going on poker runs, just riding in a group when the urge took us. They showed me a lot of places I would never had known existed.\n\nI got my nickname three months later. I had been to see Jack Edwards about the campaign we were planning. I was hoping to get him to let him shoot a commercial in his tasting room.",
        "It was wood, stone and glass, with a high ceiling and lots of natural light. After I explained he was all for it, if we could do it on a Monday, his slowest sales day. He gave me a case of wines I hadn't tasted it yet, just for an opinion.\n\nMany of his wines had names linked to the area.\n\nMillrace Red was named for the old grist mill on the edge of his property. Yankee Orchard White was named for a friends' apple orchard. A transplanted New Yorker, he specialized in rare and new varieties. Juice from his Pink Lady apples were mixed with a medium white, and it was really smooth, tasting like fresh apples with just a hint of grape.\n\nIt had been a long day, and I needed to unwind. As it happened, I had to go right by the bar on the way home. Forgetting how I was dressed, I walked in. There was silence for a minute, then the laughter and ribbing started.\n\n\"Where you been? A funeral?\" Laughed Fat Bob, the first guy I'd talked to when I found the place. We'd become pretty good friends, to the point I sometimes loaned him my truck if his bike was down and he needed to haul it to the shop.\n\nI was about to explain when another voice rang out.\n\n\"Who's the fuckin' suit?\"\n\nI didn't even need to turn around. Amanda Patterson, known in the bar as Babydoll, because she had just turned twenty and was barely five feet tall. She was cute, a redhead with a hair trigger temper, and had a mouth that would make drill instructors blush. She was sort of a mascot, and nobody hit on her unless she wanted. And I never saw her want.\n\n\"Hi, Amanda. I got all dressed up to ask for your hand in marriage.\" I got down on my knee while the bar roared. She flamed red and the temper came out. Her opinion of love and marriage was well known. I was sure there was history there somewhere. Plus, she hated being called Amanda.\n\n\"That ain't funny, asshole. And what the fuck you dickheads laughing at? Don't make me go to your asses.\"\n\nThat made them laugh harder.\n\n\"I refuse to take that as a no, more of I'll think about it. Do I need to wear the suit until you decide to make an honest man out of me?\"\n\nShe pushed me backwards and stomped off to the kitchen. Fat Bob helped me up.\n\n\"I wouldn't order anything tonight. She'll probably spit on it, or worse.\"\n\nAmanda helped out in the kitchen on the weekend, for tips and meals. I found out from Ellen, one of the bartenders, that she'd had a rough life, was broke and living in a woman's shelter during the week, and sleeping at the bar on a cot in the backroom on the weekends. It wasn't exactly legal, but who was going to tell?\n\n\"She's a good kid, down on her luck. We'd hire her full time if we could afford it.\"\n\nI asked her how she ate during the week, and why she didn't have a job. \n\n\"Soup kitchens, I suppose. I never really asked. I think she has a juvie record, and she hasn't finished high school, has no transportation, and that makes her job prospects pretty slim.\"\n\nAmanda was there almost every night, not leaving until she had to go back to make sure she had a bed for the night.\n\nI don't know why I did it. Maybe I wanted to feel connected to another human being. Maybe I wanted to be able to give her hope. I struck a deal with Helen and Sam, the owner. I'd pay for her meals during the week. Sam agreed to let her wait tables and clean up, four hours a night, for a hundred dollars a week cash, which I paid half. I supplied the cash, on the condition that she absolutely could not know I had anything to do with it.\n\n\"Here,\" I said, giving Ellen two hundred. \"Take her shopping, she needs new clothes. Tell her she can pay you back out of her wages, twenty a week.\"\n\nShe said it was the first time she'd ever seen her cry. Not extravagant, she bought new underwear, three pair of the cheapest jeans she could find, and four plain tee shirts. Two pair of mark down sneakers, and she was done.\n\nI thought about it as Ellen told me. Becky would pay more for a pair of shoes she didn't really like that much, wear them three or four times, and get rid of them. She probably spent more than Amanda made for a month on makeup and accessories alone.\n\nShe didn't come out of the kitchen the rest of the night. Helen said later she thought she might have cried a little, blaming it on chopping onions. I felt bad, hoping I hadn't hurt her feeling too much.\n\nSo I got the nickname Suit, which everybody thought was pretty funny. I actually made it a point, if I was near, of stopping in with my work clothes on, from time to time. Every time I'd wear one I'd ask her if she'd changed her mind. She still cussed me every time. But now she smiled.\n\nThe whole bar petted her. I never really thought about how she felt about anything until one night when a new guy was hitting on her. She fought him off with a smile, but he was getting worse. When she bent over at the next table to pick up the empties, he pinched her on her ass. I saw it and was almost there without even thinking. She screamed, turned, and dumped a half full draft in his face. \n\n\"Bitch,\" he said, pulling back to slap her. I grabbed his arm and yanked him off the chair. Sam and Fat Boy got there in time to keep me from hitting him. Amanda slapped the hell out of him as we got him up.\n\n\"Don't ever touch me again, asshole! Next time my fiancee won't be held off.\"\n\nShe blushed when she realized what she said, and ran into the kitchen. She came out later, thanking me for my help. I grinned.\n\n\"Couldn't have my future bride hurt, now could I?\n\nI know you didn't mean it, but it might be wise to let the jerks that hit on you know you're claimed. Think about it.\"\n\nShe surprised the whole bar by kissing my cheek. After the whistles and yells died down, she told them she'd kick their asses if they laughed at her and her boyfriend again. This really set them off and she fled back into the kitchen.\n\nThree weeks later there was a poker run that I signed up for. We met at the bar and they opened up the kitchen for breakfast. After we'd eaten and were lining up, I felt a tug on my sleeve.\n\nBabydoll looked embarrassed but determined.\n\n\"Can I ride with you?\"\n\nWhy not?\n\n\"Sure, if you have a helmet.\"\n\nShe held up one. \"Fat Boy loaned it to me.\"\n\nShe was in jeans and a tee. It was going to be cool this time of morning.\n\n\"Go get your jacket. It'll be awful cold if you don't.\"\n\nShe hung her head. \"I don't have one. Haven't needed it yet.\"\n\nI sighed and she got behind me, keeping her hands down.\n\n\"Ever been on a bike before?\" I asked. She nodded.\n\n\"Then you know you have to hold on. Come on, I won't hurt you. It won't be safe unless you do.\"\n\nEverybody knew she hated being touched.\n\nShe reluctantly put her hands around my waist. I started out slow until she relaxed. I dropped out after a mile, swinging into a WalMart.\n\n\"Why are we here?\"\n\n\"To get you a jacket. I can feel your shivers through my coat. If you want, you can pay me back. Or you can accept it as a gift for riding with me. Either way, we're not leaving until you have one.\"\n\nShe pissed and moaned, but I dragged her in and got her a nice little jacket and scarf. Even got gloves, which made her bitch even more.\n\n\"If you don't stop, I'm leaving you here. You need these, I don't want you sick because of your stubbornness. Now smile, and thank me for being a nice guy.\"\n\nShe smirked. \"Thanks, asshole. If you want to piss your money away, I'll let you. Can we catch up with the guys now?\"\n\nWe caught up to them at the second checkpoint. By then, she had snuggled in behind me with a firm grip. The halfway point was lunch, at a nice buffet style restaurant. She acted like she'd wait by the bike. I leaned in close.\n\n\"Get you tiny little ass into the restaurant, right now. If you don't, I'll throw you over my shoulder and carry you in. We clear here?\"\n\nShe nodded, looking pissed. Didn't stop her from stuffing herself, though.\n\nAt the end of the day, she was more relaxed. We won a prize, a gift certificate for a hundred dollars at a Harley dealership. I gave it to her, putting my hand firmly over her mouth when she started to protest. I left it for a few seconds.\n\nWhen I removed it, she didn't say anything but her eyes were blazing. If looks could kill.\n\nThings went downhill on the way back. It started raining, a cold drizzle, getting harder. We were less than a mile from my house and ten from the bar, so I turned off. When we pulled into my garage, she got off the bike, took off her new coat, gloves ans scarf, and threw them onto the floor, along with the gift certificate. Her face was a mask of rage and pain. She had misunderstood the situation completely.\n\n\"You think because you bought me a few things you were automatically getting pussy? Shove these things up you ass, you bastard.\"\n\nShe turned around, stalking out.\n\nIt took me a minute or two to recover and calm down. Then I got into my Dart and went looking. She'd set a fast pace and had gone almost a quarter of a mile. It was raining hard by then. I pulled over just past her.\n\n\"Get in the car, Amanda.\"\n\n\"Fuck you!\" she said, trying to walk past. I grabbed her arm.\n\n\"You have a choice here. You can get in the car and I'll drive you back to the bar. You can refuse, and I'll throw you in the car, after I paddle that stubborn ass until you see reason. Your choice.\"\n\nShe tried to push past me.\n\n\"You wouldn't dare! Suits don't do shit like th...\"\n\nI was twice her size and pretty pissed, I had her slammed face down on the hood in three seconds, my first smack landing right between her cheeks. She screamed, more from surprise than pain. I landed two more before she started begging me to stop.\n\n\"I''l get in the car! I'll be good, I promise. Please, no more!\"\n\nBy now I had calmed down and was a little ashamed. I let go of her and opened the passenger door. She slid in without hesitation.\n\nWe had gone a mile when she started to talk. I held up my hand.\n\n\"Not a word, or I'll pull over and finish what I started. Then I'll leave you where you are. Understand?\"\n\nShe nodded, wide eyed.\n\nI pulled into the parking lot, reached over and threw her door open.\n\n\"Out. Now.\"\n\nShe got out. I slammed the door, pulled onto the highway, and turned the turbo loose, shredding tires.\n\nI didn't go back for three weeks, waiting until after she had to leave before I walked in. Giving Helen the coat, scarf and gloves.\n\n\"Here. They're for Amanda. She can wear them, burn them, or stick them up her ass. I don't really care.\"\n\nHelen and Sam looked at me in shock. Then Helen grinned and slapped me.\n\n\"What the hell was that for?\" I asked, rubbing my cheek.\n\n\"That's for making us put up with a screaming bitch for three weeks. We wondered what happened when you dropped out. Then Babydoll came in, went straight into the back, and started crying. She cried for three days before I got it out of her.\"\n\n\"She's had a miserable life so far. Abused and abandoned at fifteen. Foster homes until she was eighteen, and then she was out on the streets. Apparently she hooked up with a flaming asshole who tried to turn her out.\"\n\n\"Take it easy on her, Suit. She doesn't know how to handle someone kind and decent. It a foreign concept to her. She thinks if someone is nice to her, they want something, usually something she doesn't want to give.\"\n\nShe stopped, grinning again.\n\n\"She runs to the door every time she hears a bike, hoping it's you. She'd fry in hell before she'd admit it, but she has a huge crush on you. It's gone from bitching to whimpering. Give the girl a break. Show up while she's here, give her a kind word, before she tears every head in the bar off.\"\n\n...\n\nI went to the bar the next night, driving the Dart and wearing a suit. \"Amanda! Get your skinny ass out here!\"\n\nShe peeked out of the kitchen, fear on her face.\n\nI gentled my tone. \"Come on, Babydoll. I just want to talk.\"\n\nShe eased out into the bar, looking like she was ready to run any second. I had already talked to Sam and Helen, so they knew what I was going to do.\n\n\"Sam, tell her she's fired.\"\n\nHer face went pale and Helen laughed.\n\n\"Just for tonight, hon. You still have your job.\"\n\n\"That's right. You're still employed, just not tonight. Tonight we're going out. First I'll take you to a place that serves real food...\"\n\n\"Hey!\" said Sam and Helen, together. But they were smiling.\n\n\"Let me rephrase that. Somewhere where burgers and fries aren't considered a full meal. Then I thought we'd see a movie, one of those tearjerkers little girls like you love. Get cleaned up while I drink a beer.\"\n\nPeople were laughing and she was red. She unconsciously rubbed her jeans.\n\n\"Jace, I'm not really dressed to...\"\n\n\"Ten minutes Amanda, or we repeat what happened the night it rained. Clear?\"\n\nShe squealed and shot into the back room. I looked at Helen. \"Go back there, use some of your makeup to help her feel pretty, calm her down. It's just dinner and a movie.\"\n\nShe surprised everybody by giving me a huge kiss.\n\n\"Maybe to you.\"\n\nThey oohed and ahhed when she came out, cheeks glowing. Helen had helped her with her hair, put a little lipstick on her. She looked great. I put her hand under my arm, opened the door for her while the gang grinned. They watched from the door as I opened the door to the car and buckled her in. I could hear faint cheers as I drove away.\n\n\"Anywhere special you'd like to eat?\" I asked, as we sped along. I couldn't help driving fast. She had hardly spoken.\n\n\"Anywhere is fine.\" she said, looking out the window.\"\n\nI pulled over in a office lot. \"Look at me, Amanda.\"\n\nShe turned her head.\n\n\"When I ask you a question, I expect a straight answer. Now again, where would you like to eat? Would you like to try something new? Italian, Thai, anything at all?\"\n\nShe looked down, and in a voice so small I almost didn't hear her, said: \"I've always wanted to try lobster, but you don't have to spend that much money.\"\n\nFor an answer I took her to Red Lobster and got her a plate that had lobster in three different styles. She was tentative at first, but gained confidence as she ate. She even tried to get me to take a bite once.\n\n\"Sorry Amanda, I don't like lobster.\"\n\n\"Then why did we come here?\" she asked in confusion.\n\n\"Because you wanted to try lobster. Besides, I've enjoyed the shrimp.\"\n\nThat made her happy, and she had no trouble sampling my shrimp when I offered.\n\nAfter dinner we went to the movies. There were eight choices and I let her pick. Didn't think she was a horror fan, but apparently the gorier the better, for her. After the movie we went to an ice cream parlor and she got a large banana split with two spoons. Fr a tiny thing, she sure ate a lot.\n\nEverything was perfect until we passed a bank, with the time and temperature flashing.\n\n\"Oh shit!\"\n\n\"Oh shit what, Babydoll?\"\n\n\"Oh shit I've stayed out too late to sleep in the homeless shelter. I guess you'll have to take me back to the bar.\"\n\n\"All right,\" I said, driving her straight to my house. She sat frozen while I turned off the car and the garage door closed.\n\n\"Amanda, listen to me very carefully. I have two bedrooms. One of them will be yours for the night. And it has a lock. You can sleep in a comfortable bed, take a nice shower, I'll even throw in breakfast. No strings attached, nothing owed, nothing expected. Up to you, I'm going inside now. If you don't trust me, lock the doors and recline the seat, and I'll wake you in the morning.\"\n\nIt was thirty minutes before she came in.\n\n\"Where's the bedroom?\"\n\nI showed it to her, showed her where the towels were, gave her a shirt to sleep in, and went to bed, laughing quietly as I locked my own door.\n\n...\n\nShe must sleep like a rock, because I had showered, dressed, and had breakfast done before I knocked on her door.\n\n\"Time to get up, sleepyhead, breakfast is ready.\"\n\nI poured coffee, plated the ham and cheese omelette, placed the toast on the table and waited. I had just about given up when she stumbled into the kitchen, still in my tee shirt. It hung to her knees, she looked eleven.\n\nBeing slow to wake didn't hurt her appetite any, and she cleaned her plate. We stacked the dishes into the sink and I picked up my travel mug.\n\n\"Where do you want me to drop you?\"\n\nShe looked surprised.\n\n\"I dunno. I usually hang out at the library until time to go to work, but it'll be two hours before it's open. I guess you can drop me by the park.\"\n\nI didn't like that idea. Bums slept in the park. No way I wanted her there, especially that early.\n\n\"I tell you what. Hang out here. I'll take the truck to work and I'll meet you after I get off. You can take the Dart to the bar. Scratch it and you better run for your life, understand?\"\n\nHer eyes were huge. \"You trust me that much?\"\n\nI grinned. \"You gonna steal from me?\"\n\nShe went bright red. I cut her off before she could talk.\n\n\"I didn't think so. In fact, I need the oil changed, think you could drive it to the Dodge dealership for me? It's already paid for, so you don't have to worry about that. I'll call when they open. Will you do it if they can work me in?\"\n\nShe was just nodding her head. I surprised her by kissing her cheek, backing up before she could react.\n\n\"Thanks, honey. I'll call as soon as I find out. Watch television, eat anything you like. I'll see you later.\n\nShe was rubbing the cheek I kissed as I walked out.\n\nEverybody at work remarked on my good mood. A secretary asked me if I'd gotten laid. She said it kind of snippy, she'd made a run at me right after I'd started working there, and I'd turned her down. She was in her middle thirties, a little older than me. I finished pouring my coffee before I turned to her.\n\n\"As a matter of fact, Gail, I spent the night with a hot little redhead almost ten years younger than me. Remember the energy you had at that age? I'm lucky I can walk.\"\n\nI left her openmouthed, to the laughter of everyone else.\n\nShe did get the oil changed for me. I stopped by home to change, and was amazed at how clean it was. It literally sparkled from top to bottom, she must have been at it all day.\n\nI had called Fat Boy, and he came by to pick me up so I could retrieve my car. He was grinning ear to ear.\n\n\"What?\"\n\n\"You and Babydoll, huh? Is she as hot in bed as she looks?\"\n\nI looked at him and grinned.\n\n\"You're a dirty old man, you know that? All she got last night was a bed, alone.\"\n\n\"If you say so.\" He said, still grinning.\n\n...\n\nI wasn't prepared for what happened when we got there. She ran to me, jumping up so I had to catch her, and giving me a big kiss. Electricity shot through me so hard I fought the urge to look at my shoes to see if the soles were blown out. The bar howled. \n\n\"Shut the fuck up.\" She yelled, \"this how a woman is supposed to greet her man.\"\n\nI was surprised at the display of emotion. She spent every minute she could close to me, to the point Sam told her if she didn't get to work he was gonna fire her scrawny ass.\n\nWhen I got ready to leave, she asked if I'd stay a bit longer and drive her back to the shelter. How could I refuse? I warmed the car and waited. She came out with a big backpack that I had to put in the trunk.\n\n\"What's in here?\"\n\n\"Everything I own,\" she said, sliding in to the passenger seat. \"There's no place safe for me to store it at the shelter, somebody would steal in in a blink.\"\n\nI thought about what a sad way that was to live as I drove. When I missed the turn to the shelter she questioned it. \n\n\"If I don't get there soon I won't have anywhere to sleep.\"\n\n\"You're not sleeping there tonight. You've got a room at my house. You've earned it, cleaning the house and running errands for me today. Consider it a thank you.\"\n\nShe started to protest, thought better of it, and turned the radio to a station I hated, and cranked the volume.\n\nTonight, instead of going straight to bed, she took a shower, put on one of my tees, and flopped on the couch, grabbed the remote and started channel surfing.",
        "\"Hey! I was watching that.\"\n\n\"It's boring as shit, Suit. Besides, I'm your guest here.\"\n\nShe settled on some show about four girls and a secret they shared. I lasted five minutes.\n\n\"If you're going to watch stuff that turns your brain to mush, I'm going to bed before I get infected. Good night, Amanda.\"\n\nI could still hear the tv blaring when I drifted off to sleep. The next morning she woke me up, banging on my door.\n\n\"Breakfast, sleepyhead,\" she said, parroting me from the day before, \"eat it while it's hot.\"\n\nSausage, home fries and grits. I was still getting used to them, not being from the South. I will admit they were growing on me.\n\n\"You don't keep much food around do you?\" she asked as I ate.\n\n\"Single guy, not home much, no reason to,\" I said, around a bite of sausage.\n\nShe stacked the dishes when I was done.\n\n\"Do you need a ride tonight?\" I asked, as I walked out the door.\n\n\"I'm off tonight,\" she said, \"but don't worry about me, I have things to do.\"\n\n\"Will I see you tonight?\"\n\nShe grinned. \"Maybe, you have a good day now.\"\n\nI thought about her off and on all day. She was getting under my skin. I dated some since Becky, nothing serious. Got laid, not on a regular basis, but enough to keep the edge off. In a moment of reflection, I had to wonder how much my feelings for her were pity and how much was attraction. \n\nI ran the reasons for and against trying to start a relationship with her.\n\nShe was way too young, I felt like a cradle robber. She was wounded, loud, profane, irritating beyond words sometimes. We had nothing in common. Her temper had a hair trigger, and many times she acted before she thought.\n\nBut in the rare times she let her guard down, she was sweet and loving. She was smart, strong, dealing with a miserable fate with all the dignity she could. It occurred to me she'd be a great mother, fierce and protective. The thought of that tiny body nine months pregnant made me smile.\n\nAnd though she didn't know it, she was beautiful, or would be if she dressed better and learned to use makeup. And the beauty went much deeper than her skin.\n\n...\n\nI wondered where she had gone as I drove home. The thought of her in the shelter depressed me no end. She deserved better.\n\nThe smell hit me when I walked in the door. I don't know what it was, but it made my mouth water. She must have heard the door, because she came out of the kitchen, hair in a ponytail, wearing an apron. I stood amazed when she went up on her toes to kiss my cheek.\n\n\"Hi, honey, how was work?,\" was all she got out before she almost collapsed laughing at the expression on my face. Then she got serious.\n\n\"I made you dinner. Nothing fancy, I'm a good cook, but I haven't had much opportunity to practice lately. It'll be ready in thirty minutes. Sit down, I'll get you a beer, or would you rather have tea? After we eat, I need to talk to you.\"\n\nThere it was, that determined look she had. I knew it had to be serious.\n\n\"Tea would be fine. Anything I can do to help?\"\n\nShe seemed to let out a sigh of relief.\n\n\"I got it. Sit.\"\n\nDinner was great. Roast pork, basil and rosemary roasted potatoes, asparagus, and homemade bread. Probably the best meal I'd ever eaten. I stuffed myself, then got a little embarrassed. She smiled.\n\n\"I'll take the mass consumption as a compliment. Ready for dessert?\"\n\nShe had made a banana pudding, one of the things I'd learned to love about the South. I was almost comatose when I pushed back from the table.\n\nShe sent me into the living room while she cleaned up. When she was done, she pulled a chair directly in front of the couch.\n\n\"Did you like supper? Is the house clean enough for you?\"\n\n\"Babydoll, I've never seen the house cleaner. And dinner was excellent. Where did you learn to cook like that?\"\n\nShe looked sad for a minute.\n\n\"Momma wasn't much, but she was a hell of a cook.\n\nShe taught me a lot, before the alcohol got her.\"\n\nI wanted to hug so badly right then. She shook off her memories and looked me in the eye.\n\n\"I want to make a deal with you, John Charles. I'd like to rent a room from you. I can give you fifty a week, plus I'll cook and clean the house, do the laundry, I'll even mow the yard. I won't get in your way. Please? These last couple of nights have made me happier that I've been in a long time, I just can't face going back to the shelter. Please?\"\n\nShe looked at me, full of hope.\n\n\"No.\"\n\nHer face collapsed like a balloon losing air, and tears started.\n\n\"I'll get my things. Will you drive me to the shelter?\"\n\n\"No. You're not going anywhere until I talk. So sit, listen, and don't interrupt. Promise me.\"\n\nHer face was a mixture of fear and hope. she nodded.\n\n\"I'm happy to let you live with me, under these conditions. One, you will not pay me anything. Your rent will be keeping the house clean, doing the food shopping and making the meals. Two, I enjoy yard work, so I'll do that. Three, you keep your job at the bar. You can drive the Dart for work and household needs. Four, and this is the big one, you have to go back to school, get your adult high school diploma, or at the very least a g.e.d.\"\n\nShe sat with her mouth open. I knew she was ashamed over her lack of education. Maybe this would force her to do something about it.\n\nShe finally nodded her head. \"I'll do it. But on the school thing, will you help me? I'll need it.\"\n\nI relaxed, smiling. \"I'll do everything short of actually doing it for you. Do we have a deal?\"\n\nShe jumped into my lap, kissing me until she realized what she was doing and jumped back off.\n\n\"Sorry,\" she said, flaming red. I grinned.\n\n\"I've got one more condition. You have to give me a goodnight kiss every night, and one before I go to work every morning. No deal otherwise.\"\n\nShe glowed again, then grinned, holding out her hand. \"Deal.\"\n\nWe shook, and began a wonderful and curious stage of our lives.\n\nI asked her the next morning where the food had come from. She gave me the receipts. I paid her back, then gave her my debit card, telling her to shop for food and anything else she thought we might need. I grinned all the way to work, my cheek tingling from the goodbye kiss.\n\nYou couldn't have blown the smile off my face that day with a stick of dynamite. Gail got catty again. Apparently happiness offended her.\n\n\"See you little jailbait honey last night?\"\n\n\"Yes, and this morning. She moved in last night. You should find someone, Gail, it'll make you a much nicer person.\"\n\nHer look as I left would have soured milk.\n\n...\n\nThe guys at the bar gave me shit, but smiled when they did it. Sam shook my hand and Helen kissed my cheek.\n\n\"You're a good man, Suit. I knew she'd get you sooner or later.\"\n\n\"We're just room mates, Helen. Nothing going on.\"\n\nShe just grinned wider. \"If you say so.\"\n\nAmanda smiled so hard I thought her cheeks would get a cramp when she saw me. I was about to order a burger when she stopped me.\"Your supper is in the fridge. Microwave three minutes. I hope you like it.\"\n\nI had one beer, shot a game of pool with Fat Boy, and went home to a nice dinner. She got off work at 9:30, when the kitchen closed, and was home by ten. She went straight to the shower.\n\n\"I smelled like old fries,\" she said, when she came out in a robe, with a towel wrapped around her head. \"What's on television?\"\n\n...\n\nSo we settled into a domestic routine. I did the yard work, washed the vehicles, while she did the house. She cooked most of the meals, but I insisted on taking her out to eat or grilling for her once a week. On Sundays, if it was pretty, we'd ride, either alone or with our group. She got a new nickname, Mrs. Suit, which she grumbled about but did so with a grin.\n\nHer twenty first birthday came, and I surprised her with a party at the bar. She even got presents. Soon she was crying, a rare display of emotion for her. She shocked everyone by hugging them in thanks. \n\nI gave her a day at a spa, complete with hair and makeup, and a gift certificate to an upscale department store. \"I'd like to see you out of those jeans,\" I grinned, as she colored.\n\nHelen got onto me, telling me it was time to step up and make an honest woman out of her.\n\n\"I don't know how she feels about me,\" I confessed.\n\n\"The you're the biggest dumbass in the state. She loves you, but she doesn't know how to love. You need to teach her. It'll be worth it.\"\n\n\"How do you know so much?\"\n\nShe hugged Sam when he walked up.\n\n\"Because fifteen years ago, I was her. Then I met Sam, and though it took a while, he opened me up, made me understand there were good men in the world, I just hadn't found one until I met him.\n\nI'd been with a bike gang for three years. They did terrible things to me and I let them, because I thought that was what I deserved. They messed me up so bad I couldn't have kids. He loved me anyway. How could I fight that? The age difference is bigger than you and Amanda, and we made it. Take it to the next level, Suit. You'll never regret it. From what you said, she's nothing like your ex.\"\n\nI had told them a little about Becky and me about six months ago, when we'd had them over to dinner and Amanda had run to the store.\n\n...\n\nShe was doing really well in school. She had opted, with my urging to go for a full high school diploma instead of the G. E. D.\n\nWe estimated it would take another two months and she could graduate. They held full graduation ceremonies twice a year, as recognition of their accomplishments. Some of the graduates would be in their sixties, but most were like Amanda, kids that got lost in the system. I promised her a party when it happened.\n\nI almost had a heart attack when she used my birthday present. She had on a very nice sundress, blindingly white, earrings and a necklace[I had never seen her with jewelry on]and three inch platform sandals.\n\nHer hair was teased into a wildly flowing style, her thick locks drifting down her back. She was so beautiful it made me ache.\n\n\"What do you think?,\" she said, twirling around, \"did you get your moneys' worth?\"\n\nI said the first thing that come to mind.\n\n\"All they did was polish a diamond, baby. You've always been this beautiful. The man that gets you will be the luckiest on the planet.\"\n\nShe stopped in midtwirl, her eyes filled with tears, and she bolted int her room. Shit, what had I done now?\n\nShe came home from school the next week giggling.\n\n\"What's up?\" I said, glad she was in a good mood.\n\n\"I got asked out by this really cute guy. We'd been talking off and on for a month.\"\n\nI felt like someone had driven a stake through my heart.\n\n\"Oh.\" was all I said, turning away.\n\nShe was on me in a flash.\n\n\"That's all you got to say? Oh?\"\n\nI was defensive. \"What would you like me to say? You're obviously interested, you've been flirting for a month. Why should I stop you?\"\n\nShe went into her room, slamming the door. I sighed. That had been happening a lot lately. I was going to have to have it rehung if she kept this up. I knocked but she refused to answer. Giving up, I got a beer out, and wallowed in misery.\n\nBy my third, I was pondering the mysteries of women before dozing off.\n\nI woke when she shook my shoulder, gently.\n\n\"What?,\" I said, trying to focus.\n\nThe Big Four came out of her mouth.\n\n\"We need to talk.\"\n\nI was instantly alert. Nothing good ever came after those words, in my experience.\n\n\"Do you like me?\"\n\nI couldn't read her eyes.\n\n\"Yes I do,\" I answered honestly.\n\n\"How much?\" \n\n\"I don't know what you want here, Amanda. Clue a dense guy in.\"\n\nShe slapped the shit out of me. As I rubbed my jaw she went into a rant.\n\n\"I guess what I'm asking here is if do you love me? Not a friend love, but a full grown man woman type of love. Because I've loved you for a long time, and you've never noticed. I know I'm a lot younger than you, I'm uneducated, I have no social graces, I'm loud, jealous, scared, and that's just the start.\"\n\n\"I can't take it anymore. It hurts. So if you don't love me, I'm moving out.\"\n\nI stopped her rant with a kiss.\n\n\"Hush now,\" I said sternly, \"are you trying to talk me out of having feelings for you? Because if you are, you're too late. And all the things you say you don't have are no matter. You have something much more important. You have my heart.\"\n\nI think she actually went out when she heard what I said. When she recovered she was in my lap, kissing and crying until she went to sleep.\n\nDid we jump into her bed and make passionate love?\n\nNo. She was still damaged and fragile, so I held her until she cried herself out, took her to my bed and tucked her in, then went out on the back deck, looking at the stars and wondering what happens next. I was out there for over an hour.\n\nWhen I came back in, she had gotten a shirt out, put it on, and crawled back into bed. When I lay down she snuggled into my arms, mumbled something that sounded like 'love you', and drifted off again. I held her for a long time, reveling in her feel, before I finally dozed off.\n\nI woke up alone, to the smell of breakfast. She was flitting around the kitchen, getting everything perfect. I startled her when I swept her off her feet, kissing the back of her slender neck. She stiffened at first, then relaxed and giggled.\n\n\"Let me go, honey, or all you'll have for breakfast is burnt waffles.\"\n\nAfter breakfast, before she cleared the table, we talked. It was Saturday, and we had no where to be.\n\nShe snuggled into my lap.\n\n\"Honey, you know I love you. Please go slow with me, I'm carrying around a lot of baggage.\"\n\nShe told me the story of her life, in between tears and hugs. She'd been happy until she was ten, when her dad died. Her mom was never a strong person, and she slide down a slope of depression and bad choices into a sea of alcohol. She had a stepfather and several live in boyfriends. When she was fifteen one tried to rape her. She fought him off and told the school. They took her away from her mother and she spent the next three years in foster care, and juvenile hall. She had stolen a car, desperate to see her little sister, nine years younger. It was the first time I knew she had a sister. When she turned eighteen, the system turned her loose. \n\nShe ended up with a guy out of desperation. She gave him her virginity. Apparently it was borderline rape ever time they were intimate. Then he tried to get her to hook for money. She ran away, and ended up here.\n\nMy heart ached for her.\n\n\"I want you so bad I ache, Jace, but I freeze up. Help me?\"\n\nSo I did, even got her a therapist. Four months later it happened. We'd been getting closer, touching, talking. She got comfortable enough to walk around in tiny little panties and a tank shirt, and wear slinky little gowns to our bed, which she hadn't been out of since the first time I put her there.\n\nAmanda didn't like alcohol, but had developed a fondness for wine from our client. After a half bottle one night, the flood gates opened. \n\nI still took it slow, the first time. I kissed all the way down to her center, stopping to pay attention to her throat, earlobes, breasts, nipples, and her belly button. She was so worked up that when my tongue found her clit she exploded immediately, screamed, and ground my head into her.\n\n\"That was, that was...\" she got out, gasping and holding my head. She screamed again five minutes later before she pulled me up, crying. She shoved me over, climbing on top.\n\n\"Like this, baby, please. I need to be in control.\"\n\nShe was so tight it took three minutes to fit inside her. Ten minutes later she was slamming into me as I exploded, screaming again and crying my name. It was the most out of control control I'd ever seen. She collapsed onto my chest, out cold.\n\nThe next morning she woke me up, tugging gently on my cock, which was rock hard.\n\n\"Can we play again? I'll let you drive.\"\n\nShe had her first orgasm missionary, crying out in pleasure. It led to full blown screaming when I took her from behind, her heart shaped ass firmly in my hands. She was so small I almost couldn't see it under my huge hands. We both collapsed when we were done and went back to sleep. She woke me up tugging my erection again. I could easily get used to this kind of alarm clock.\n\n\"Will you do the behind thingy again for a while, then let me drive?\"\n\nShe came twice before she slid on top of me. Five minutes later her ass was a blur, pounding up and down as I gripped her, thrusting back just as hard.\n\nWe skipped riding that day, the thought of bouncing on the seat of bike being too much on her sore bottom.\n\nWe lay around until about three, when I made her get dressed. She drove if we took the Dart, unashamedly proclaiming it her car. We went to the mall, and I dragged her into a jewelry store.\n\n\"Pick,\" I said, standing in front of the engagement rings.\n\n\"Really?\" she said, the tears already flowing.\n\n\"Really,\" I said, dropping to a knee, \"now you know why I wore the suit. Marry me.\"\n\nAfter she sobbed out a yes and calmed down, I think she tried on every ring in the store in the price range I could afford. She finally settled on a simply stone and band, not the most expensive, but the one she wanted.\n\n...\n\nWhen we walked into the bar, an instant party erupted. The women immediately huddled, leaving the men standing.\n\n\"What are they doing?\" I asked. The men laughed.\n\n\"Planning a wedding, you idiot. The best advice any of us could give you is agree to everything she wants, if you can afford it. And stay as far away from them as you can.\"\n\n...\n\nShe wanted a church wedding. We found one close, but part of the deal was we had to attend services for at least six weeks before the wedding.\n\nIt turned out to be a very good thing. The reverend was a pretty smart old guy, and he insisted on a few counseling sessions first. The disaster that was my first marriage came out along with all the stuff that happened to her. She cried for me, looked me in the eye, and said she would never do that to me. I believed her. We ended up being members, not going every week, but pretty often. I accused her of using it as an excuse to buy more dresses. She hardly ever wore anything else except when she worked. She wanted to keep her job, so she'd have money of her own.\n\n\"The first time you say I don't look good in dresses, I'll stop wearing them.\" she said smirking. Now she has so many she rotates, putting the off season ones in the other bedroom.\n\nI can still shut my eyes and see Amanda walking down the aisle. The ivory lace and silk dress hugged her like a second skin, highlighting her shape. Her thick mane of hair fell down her back, shining in the light.\n\nHelen stood in as mother of the bride. Sam gave her away. Fat Boy was my best man. Everyone from my job was there except Gail, and almost everyone from the bar attended. They escorted our limo to the airport on their bikes.\n\nMom was there. She fell hard for Amanda, she had always wanted a daughter. Amanda warmed up more slowly, but when we left, she leaned in and said something that brought fresh tears to her eyes. I asked about it on the way to the airport.\n\n\"I said 'thank you Mom, for sharing your son. I'll return the favor with your grandchildren.' It seemed to make her happy.\"\n\nThen she distracted me by showing me hints of her wedding lingerie.\n\n...\n\nWe honeymooned in Belize, because I had been to Cancun on my first honeymoon, and I did not want overlapping memories. I found out it was the first trip out of the country Amanda had ever been on. It was actually the first trip anywhere.\n\nWe had a ball. We hit the beaches, and she stayed under the umbrella a lot, her fair skin not caring much for the hot sun. I loved to watch her red hair shine as she walked. She shocked the hell out of me by dragging me to a topless beach. Amanda took off her cover, clad only in a tiny thong.\n\n\"Shut your mouth, honey. I wanted to give you something to remember. Me walking around almost naked while men drool over me, knowing that no one but you will ever touch me, should do it.\"",
        "I'll admit it, I had to jump in the water about every five minutes, trying to get my erection to go down. The water was so warm it didn't help.\n\nHer body was small but proportional, making her 32c cups look a lot bigger than they were. Her ass made men stop talking as she walked by. I saw one wife jab her husband in the ribs over it. We tried to kill each other with sex that night. Didn't work, but we almost went into comas.\n\n...\n\nSix glorious months went by. I made her quit the bar so she'd be home with me. She grumbled, but did it. She was walking around with that secret smile I recognized. She was up to something.\n\nTo fill in her time, she went back to school, going for a degree in hospitality and food management. I supported her fully, but didn't understand her degree choice.\n\nShe called me at work, sounding panicky.\n\n\"Honey, I need you to come home. Now. It's important.\"\n\nI left immediately. She was pacing back and forth, obviously agitated. She rushed into my arms. I was starting to get a bad feeling.\n\nI knew it was bad when she started out with, \"Honey, do you love me?\"\n\n\"Do I have to even answer that?\"\n\nShe relaxed, took my hand.\n\n\"I've got something to tell you, and something to ask you. Hear me out, please, before you say anything.\"\n\nShe had been looking for her sister for a few weeks, wanting to connect. She was twelve now, and she hadn't seen her since she was four. It weighed on her, thinking how good her life was now and remembering her experience with foster care.\n\n\"First, I found my sister. She doesn't even remember me. That was pretty hard. She looks a lot like Dad.\"\n\n\"That's great, honey. I'm sure she'll warm up after she gets to know you. Is she in a good home? Adopted? Details, honey, I'd like to meet my little sister in law.\" I was excited, knowing how much she had been wanting this. A tear trickled down her cheek. \n\n\"No,\" she said sadly, \"she wasn't adopted. And she was in a bad place when I found her. A place so bad they had to remove her and the others from the home.\"\n\n\"Where is she now? You haven't lost her again, have you?\"\n\nShe hugged me.\n\n\"No, she's really close.\" She took my hand, holding tightly. \"She's in the spare bedroom.\"\n\nWow. \n\nAfter I collected my thoughts I had Amanda bring her out. \n\nShe was only twelve, but she was already taller than Amanda. Her hair was black, her nose was a little broader, but other than that they had identical features. Same mouth, same elegant neck. same expressive hands. \n\nShe introduced us. I went to hug her and she backed up, so I held out my hand.\n\n\"It's nice to finally meet you, Celeste. Amanda talks about you often.\"\n\n\"The where the hell has she been while I was living in that shithole? Why hasn't she come looking for me before now? I could have been here years ago.\"\n\nThe sheer anger in her voice shook me. Amanda stepped in.\n\n\"I'm here now honey. I came for you as soon as I was able to. Four years ago I couldn't take care of myself, there was no way I could give an eight year old what she needed. I had to grow up first. I'm sorry if you're angry. Let's see if we can make it up to you.\"\n\nCeleste was on a roll.\n\n\"Oh, that's just great. Now I get to live with the Cleavers? Wear frilly dresses and giggle over boys? News flash, I KNOW ALL ABOUT BOYS, why do you think they closed the home down? Guys want one thing, and it's right here.\" She grabbed her crotch.\n\n\"Just as soon as you're out the door, hubby here will try to make me his little bitch. Let's get this over with. Give me some cash and turn me loose, and I'm yours for the night. Deal?\"\n\nAmanda was shocked into silence. I was furious. \n\n\"Maybe we'll just give you a warm bed for the night and send you on your way tomorrow. If what you had is better than what we're offering, go for it. Come to think about it, I haven't offered you a thing. I tell you this. IF we talk it over and decide we want you with us, you'll keep a civil tongue in your head, and not give us any shit. The most important thing in my life is my wife, and I will not have her hurt or suffer because you had a hard life. Hers hasn't been sweetness and light, listen to her story sometime, see if you have any empathy. Are we clear here?\"\n\nShe had paled and backed away from me, but just as soon as I stopped she got her bravado back.\n\n\"Fuck you! I don't need a father figure. I don't need a sister or a mother. I don't need a damn thing from either of you.\"\n\n\"Clear enough.\" I turned to Amanda, hugging her.\n\nShe started crying. I stroked her hair. \"I'm sorry honey. I know how bad you wanted this. It seems you may be too late. It's not your fault, you hear me? It is not your fault. Maybe she'll eventually grow up and realize that.\"\n\nI stepped back and looked at both of them.\n\n\"I'm going to start the grill. You two talk, see if you can come to terms. Celeste, you're here for at least the night. I expect you to be civil. And stop cussing!\"\n\nThey talked while I set the grill up and cooked. I left the curtain open, just in case. I could hear the yelling, see Amanda crying. It broke my heart. Then Amanda said something that caused Celeste to cry, and they started hugging. Maybe there was hope after all.\n\nThere wasn't much conversation over dinner, but there were no outbursts either. Celeste ate two steaks and two huge baked potatoes. She even helped Amanda wash the dishes.\n\nThey came in to the living room to tell me they were going out for about an hour, they had things they had to pick up. Clothes for Celeste, I guessed.\n\nI sat and thought while they were gone, wondering about a society that treated children like unwanted baggage.\n\nThey came back, and Celeste was actually giggling.\n\nShe even said goodnight to us, after modeling her new pajamas, complete with feet.\n\nWe talked, in the bed after she was asleep.\n\n\"Can we keep her, at least for awhile? I'll be responsible for her, you won't even notice her.\"\n\nI gave a dry chuckle.\n\n\"I doubt that. All right, she can stay, temporarily. But she has to behave.\"\n\n\"Thank you, honey. I knew I could count on you.\"\n\n...\n\nThe state was happy to give Amanda custody. She was in a stable marriage, lived in a good neighborhood, and had references from Sam, Helen, and half the bar. Plus, they wouldn't have to pay anything.\n\nIt threw them for a loop when I asked where her social security money was. No one had filed it. I got a lawyer and he did the paperwork. When it was settled, they had to give all the money she was due for the last eight years to her, to us actually, as guardians. She also got seven hundred a month until she was eighteen.\n\nWe put it into a college fund. She could access it at eighteen if she went to school. If she didn't. she got the full amount when she was twenty one. It would almost be enough to pay for the full four years, if she was careful.\n\nCeleste wasn't as grateful as we had hoped, complaining she should get it sooner, to buy a car.\n\n\"That's almost four years away. Let's see what happens between now and then.\"\n\nI ended up being the bad guy, to make it easier on Amanda. Celeste resented it tremendously, but knew better than to try to play us off each other. The first time got her grounded for a month.\n\nShe was behind in school, mostly from not paying attention. She refused help from me at first, but Amanda kind of forced her, giving her rewards for good grades, so she started listening.\n\n...\n\nDuring this time I was doing really well at my job. The campaign for the wine maker was a roaring success, and led to bigger things. My boss was scared to death I was going to leave, he knew I'd had offers, so he struck a deal with me. I could buy into the company, and he'd match every percent I bought up to seven. At current valuation, I would be able to afford about one percent a year. So in seven years, I'd have fourteen per cent of the company. Amanda and I talked it over, and decided to do it. I liked it here, so did Amanda.\n\n...\n\nCeleste ran away, twice. The first time she was gone fur days before they found her at a bus station a state away. Amanda cried the whole time she was gone.\n\nShe came back, defiant and angry. I waited until I could talk to her alone and laid it out.\n\n\"You know, you'd be a good kid if you'd let yourself. You're pretty smart, it looks like you could figure out what kind of life you would have n the streets. A drugged, disease riddled whore most likely, old before your time and dead before thirty. Is that what you want? Here it is, plain and simple. You run again, and you won't come back. In three more years you'll be sixteen. I'll pay your court costs for emancipation, give you your social security money, and wish you a nice life. But my wife has just about shed her last tear over you. Do you understand?\"\n\nI think I scared her. Six months later she didn't come home from school. When she showed up, she found the doors locked. Thank goodness Amanda wasn't there. I opened the door and talked through the screen.\n\n\"I've already boxed your shit. You can come in and wait for D.S.S, I've already called them. They should be here in about forty five minutes.\"\n\nI opened the door and let her in. She huddled on the couch, rocking back and forth. Soon she was crying, then begging.\n\n\"Please, please, please don't send me away. I'll be good, I promise. I didn't mean to leave. I panicked when I got busted for smoking at school. They suspended me for three days. It'll kill Amanda. I didn't know what to do.\"\n\nI was surprised. She hated smokers.\n\n\"Were you smoking?\"\n\n\"No, but I was with them, cutting class. Please don't send me away.\"\n\n\"Celeste, look at me.\" She raised her head. \"You have got to learn you have a support system. Amanda loves you. I love you. We're a family. We're here to provide guidance and a good home. And love. Let us do our job, all right? You should have come to us and told us what you did. We would have punished you, been disappointed, but we wouldn't have stopped loving you.\"\n\nThe tears started in earnest when I told her I loved her, and she flew into my arms, sobbing her heart out. Amanda walked in.\n\n\"What's going on?\" she asked, nervously.\n\n\"Our child is growing up, honey. She did something bad, got caught, came home, and told me all about it. I truly believe she understands what she did, and is sorry. I'll let her tell you about it. Here.\"\n\nI handed her off and went outside, catching the D.S.S. worker at the mailbox.\n\n\"Hi, Denise. Sorry, it was a false alarm. She got caught doing something she shouldn't have, and got suspended for three days. Nothing real serious, but she was afraid to face us. Amanda is with her now, getting to the bottom of what happened. They're inside, if you want to check on them.\"\n\nShe sighed.\n\n\"I ought to, but I think I can trust you. Now I can get home and cook Fred's dinner, and eat as a family for once.\"\n\n\"Thanks, Denise,\" I said, feeling bad for taking time away from her family. \"Why don't you guys come over Sunday? I got a couple of Boston butts I been thinking about roasting.\"\n\n\"That sounds good, Jace, but it's Homecoming at our church. There's going to be a big meal, why don't you guys come there instead? There's an informal competition among a few of us to see how many guests we can get to come, you guys might put me ahead.\"\n\nI told her I'd run it by the girls and went inside.\n\n\"Who was that?\"\n\n\"It was Denise, honey. She saw me outside and stopped to invite us to Homecoming. You guys wanna go?\"\n\n\"I wouldn't mind it. They got that new young reverend. He's kind of cute. I'll give her a call, see what she wants me to bring.\"\n\nCeleste watched me, grinning. I tried to look stern but failed. She hopped off the couch.\n\n\"I know I'm grounded for a month, but I can go to church, right? Bobby Smith goes to that church, doesn't he?\"\n\n\"Celeste! You're thirteen. You've got time for that later. Much later! Between you two lightning will strike the church.\"\n\nThey both grinned at me, and Celeste said \"Men!\", then went to help her sister with dinner.\n\nThat was the exact moment when I knew my little family was going to be okay.\n\n...\n\nThis had been a really big week for our little family. Celeste had made the honor roll for the first time, and was due to start learning to drive over the summer. The thought of someone that young driving scared me pretty bad.\n\nAmanda graduated tonight, holding her diploma like it was life preserver in a stormy sea. She even got to make a little speech that brought the house to tears. She talked about her childhood, her sister's, the fact that she had come so far because she had someone who believed in her and wouldn't let her stop. She thanked me for being the best husband ever, and Celeste for being a perfect 'daughter'.\n\n\"Have faith, have hope, believe in yourself. You may not get as lucky as I did, but you'll be a better person for trying.\"\n\nWe held a cookout for her the next day, and our little house was filled to capacity. Mom came down to celebrate her accomplishment. Our bar friends, most of my work friends including my boss, Denise from DSS, and surprisingly, Jack Edwards and his wife. I thought they were still in Italy. After everyone else had left, they lingered, waiting to take Celeste for the weekend.\n\nThey had married late and never had children. June fell in love with Amanda, treating her like the daughter she never had. When Celeste came along she was over the moon. She kept her for a weekend once a month so Amanda and I could have a little personal time. She always brought Celeste back with at least one new outfit. Mom got in on it too, and between them Celeste was almost never home during the summer. I complained and was jumped by the pack almost immediately.\n\n\"Your girls have had a hard life, Jace. The best thing that ever happened to them was you. I've always wanted a daughter and a grandchild, thank you for these. So stop complaining because your daughter is growing up and bonding with her grandparents. We're supposed to spoil her. I have a suggestion, something to take the heat off Celeste. Give us a couple more grandchildren, it'll make sharing easier.\" Mom sat back after that speech, smirking a little.\n\nWe heard a sob, and looked at Celeste. Soon the women were huddled over Celeste, petting her and whispering soothing words. When they settled down I started to ask but Amanda shushed me.\n\nJune jumped right in. \"Listen to your mother, Jace. You too, Amanda. We're not getting any younger here. Give them to us soon, while we're still fit enough to chase them around.\"\n\nI looked at Jack and he just grinned.\n\n\"I think it's an excellent idea.\"\n\nCeleste hugged me for a long time before she left, clinging to me.\n\n...\n\nWe didn't go down to the bar as frequently as we used to, children limits your options. I still went after work occasionally. Celeste usually had something going on that required transportation, so Amanda became ubermom, taking her to band practice, soccer practice, games, etc. I usually wasn't available for any of that, but made sure I went to all her games.\n\nOne sunny Saturday afternoon, at the end of a soccer game, I sat and listened to her and her teammates chatter, trying to decide where to go to celebrate their win. She was going out with groups now, something I was a little uncomfortable with, because they tended to pair up at these things. Amanda laughed.\n\n\"Even if you'd like to, hon, you can't stop her from growing up. This is good practice for the kids when the time comes for one on one dating. And they're almost all chaperoned, the only exception is when they go to the movies and hang out at the mall. Trust her, she would die before she'd disappoint her Daddy.\"\n\nIt was right after Amanda graduated, and we were at a church function. The kids wanted to go for ice cream later, and I walked up.\n\n\"Here's your Daddy now. Ask him if it's all right.\"\n\nShe looked at me and batted her eyes.\n\n\"Daddy, can I go with Mrs. Jenkins and my friends for ice cream?\"\n\nIt caught me hard, and tears started forming.\n\n\"Sure baby, here's a twenty.\"\n\nShe giggled, took the money, and scampered off, yelling out behind her.\n\n\"Bye, Mom, bye Dad! I'll be home by seven.\"\n\nAmanda had to drive us home. After that, we were Mom and Dad.\n\n\"It's just easier than having to explain every time someones says something about it and I have to explain. Besides, you treat me like your kid anyway. Plus I like it.\" She explained, grinning.\n\nI liked it too.\n\n...\n\nOur friend Sam had a stroke. Not a really bad one, but serious enough he had to cut back on work. All their friends pitched in, but it was soon apparent Helen couldn't keep up. Amanda came to me one Sunday afternoon after church. We were going to ride, Celeste was off with friends.\n\n\"Before we go, I need to ask you for something. Let me get it all out before you say anything. It's important to me.\"\n\nI hoped it wasn't bad.\n\n\"I love being Mom to Celeste. I love being your wife. But, Helen needs help, and I want to use my degree. I've talked it over with Helen and Sam, and they're all for it. I want to go back to work at the bar. Not as an employee, but as a partner.\n\nHelen will run the bar, with Sam's help. I'll run the kitchen. Will you think about it?\"\n\nI did, while we rode. We stopped at the bar and I looked at it with new eyes. It was in good shape, but could use a little sprucing up. Helen came by and Amanda excused herself, going into the kitchen.\n\n\"What do you think?\"\n\n\"I think it's a lot to consider. I don't want to lose my wife to a business. You know my past, and I'm a little sensitive about my wife being on a different schedule. Plus we have to consider Celeste. And, I'll need to know how much money we're talking. In the end, I'll probably say yes, she knows I can't refuse her.\"\n\nHelen patted my hand.\n\n\"You won't lose her, honey. She's already got it planned to where she won't be away from you that much, once the startup is complete and everyone is trained. She has big plans, she's even got me and Sam excited.\"\n\nSo we talked it over. I had long since turned our finances over to her, she was really good at stretching dollars. Oh, I had a general idea, but she usually paid the bills.\n\nOur vehicles were all paid for, even the three year old minivan she had to have to transport Celeste and all her friends. We had bought our house when the lease was up. It was small, but suited our needs. We'd made a pretty hefty down payment, so our mortgage was low. By now I owned four percent of my company, and was making really good money for our size. Our savings account was pretty good, so I had no argument about where the money was coming from.\n\nIn the end, we owned thirty percent of the bar. We spent a little money sprucing it up, upgraded the kitchen, and had a grand reopening.\n\n...\n\nBusiness picked up almost immediately. All the old patrons were happy with the new look of their hangout, and the new customers liked the atmosphere. The place was opening at eleven now, to serve a lunch crowd.\n\nAmanda worked wonders with the kitchen. Gone were the plain burgers and fries. They still offered them, dressed up a little. There were new toppings to select from, such as avacado slices, hot peppers, spinach leaves, four different flavors of cheese slices, and anything else she could think of to put on a burger. Same with the hot dogs. A favorite was covered with grilled onions and mushrooms, hot mustard, and dill relish.\n\nFries were no longer offered. Instead you got home fries, sliced almost as thin as chips, hand cut and soaked overnight in various flavors. \n\nShe also added soups, all homemade. Potato with cheese and bacon bits. Tomato, with half and half blended in. A pork based stew with a lot of herbs was the most popular.\n\nOne of her upgrades was a large gas grill, and you could have grilled veggies in season. \n\nShe insisted on buying from local farmers as much as possible, and had a large chalkboard at the kitchen door, telling which farm provided the vegetables or meats for the day. The farmers loved it.",
        "The regulars were a little leery at first, but soon you could hear discussions and sometimes arguments over which farm provided the best produce, and which fresh herbs and spices complimented which dishes best. It was a riot to see two big bikers almost come to blows over which soup was better, pumpkin or butternut squash.\n\nShe also added a wine list, all locals, with Jacks' getting top billing. It was funny, in our state you couldn't serve wine in a place that had pool tables, so they had to go. Helen and Sam really didn't mind because that was usually where the fights started, and they could add eight more tables in the space.\n\nHelen took the lead and worked a deal with a local brewer to feature their beers on draft.\n\nA local food critic, hearing good things, paid us a visit. We didn't even know it until the review came out.\n\nTHE BEST HIDDEN JEWEL IN THE STATE was the caption, followed by an outstanding review.\n\n\"Sam's Bar and Grill, located on Swan Pond Road just outside of the city limits, has been around for seventy five years. A local favorite, the addition of minority owner Amanda Gooding and her recent upgrade of the kitchen has pushed it out of the shadows and into the limelight. I'm sure the regulars would have preferred it stayed local, but word has spread and there's no going back. \n\nBlue collar, white collar, bikers, farmers, college kids, you'll find them all rubbing elbows in an amiable mix. The only time I heard raised voices was when two patrons disagreed over which herb should be dominant in the pork stew, rosemary or basil. I sided with the biker, because, well, he was bigger, and I've always liked rosemary.\n\nIt features simple fare, well seasoned and prepared, at a reasonable price. The service is excellent, the atmosphere relaxed, and it almost sparkles it's so clean. The sanitation rating is 102, just one point short of perfection. I complimented Mrs. Gooding, and she promised they would get the top rating in six months if she had to work her whole staff to death.\n\nBeing outside the city limits, all it offers is beer and wine, not liquor. Helen Conners, the manager and principal owner, along with her husband Sam, says they have no intention of getting a liquor license should the limits expand and include them.\"\n\n\"It's just so much easier without liquor,\" she said.\"\n\n\"The bar portion looks like an old time saloon, featuring local brews and wines, as well as a full complement of national brands. The staff is well schooled, and can explain the difference between a pilsner, a lager, or a bock, a dry white and a sweet red, with ease. It's a little out of the way, but worth the trip. I've been three times, gotten three different meals, and have been satisfied every time with the quality, the quantity, and the service.\"\n\n\"One more thing. I demand you try the banana pudding. It's a weakness of mine, and it's the best I've ever tasted, and I've tasted a lot over the years.\"\n\nHelen and Amanda just looked at each other and grinned.\n\n\"I didn't know who he was,\" said Amanda, \"I just thought he was a nosey customer with a little knowledge.\"\n\nCeleste and I ate dinner there nights Amanda worked, and she always scheduled her break so she could dine with us. Celeste wanted to start working there when she got old enough for a child work permit, and I had no problem with it. There were a lot of families there now, most of the serious drinking was done in the bar. Thursday night was bike night, and the local Harley Owners Group showed up in force, along with guys riding all different kinds. They wanted to hold their meetings there, but we didn't have a private room. Amanda, Sam, and Helen talked about it, got an architect, and almost tripled the size of the place. Soon even that space was filled.\n\n...\n\nI was up to eight percent ownership by now in our agency.\n\nCeleste turned sixteen, went to work after school and weekdays part time, learning how to cook along side her sister/mom. Her goal was to go to the local culinary school when she graduated from high school.\n\nShe wanted the Dart, but there was no way I was going to give a sixteen year old girl something that would go that fast. We got her a Mustang instead, not one of those turbo monsters, but one with a nice little V6. Still went pretty fast, though.\n\nAmanda was almost twenty six, and I was ready to start our little family. She agreed, but wanted to wait until Celeste had graduated, so she could concentrate on the baby. Celeste laughed when she walked in our conversation.\n\n\"Mom, do I look like a baby? I can take care of myself. You should think about Dad, give me a little sister/neice or brother/nephew while he's still young enough to help take care of them.\"\n\nI thought her argument had a lot of merit, but Amanda just laughed and said we'd talk about it later.\n\nOur business was expanding as well. My ad campaign for Jack had led to a lot more business, especially among the local alcohol industries. We now handled two more wineries and three brewers, and were talking to a local distillery that was just starting to get some national attention.\n\nI was at a regional conference when I ran into an old friend. I hadn't seen Aida in almost six years. Still an ebony goddess, maturity had added to her beauty. I saw her first, and slipped up behind her.\n\n\"Still got a thing about color lines? I got tired of waiting for you, but there's a lot of white boys in here right now practically drooling over you.\"\n\nOf course, I had gathered her up in a big hug while I talked. Shocked at first, she returned the hug when she realized who I was.\n\n\"Jace! Man, it'd good to see you. How are you? Where have you been? You just disappeared off the face of the earth. I've missed you. There were times when I needed good advice and a sounding board.\"\n\nWe got a table and talked for an hour. She was divorced, her husband had cheated on her and she caught him.\n\n\"Apparently he wasn't as rigid over color lines as I was. A skinny little blonde with the figure of a twelve year old boy. I caught him, he promised it was over, we went to counseling. I was just abut sure we were over it when she rolled up pregnant. I never saw him again after that, he didn't even show up at the final decree.\"\n\nI took her hand.\n\n\"Sorry, Aida, I know how it feels. Anyone in your life right now?\"\n\n\"No, too early, I guess. I've been thinking about making a change, my agency was sold and I don't like the new owners. I think the only reason they keep me is because I'm so good at what I do. I really need a change.\"\n\nI grinned at her, fishing out a card.\n\n\"Ever think about relocating to the sunny South? Think about it and give me a call.\"\n\nTo my surprise, she took the card.\n\nJust before we left she asked me about my life. I held up my hand so she could see the wedding band.\n\n\"I literally thank God every day for the life I have now. I've got a great woman, a good daughter, an excellent job, and a large group of really nice friends. Here.\"\n\nI fished out pictures of Amanda and Celeste. She looked at them in wonder.\n\n\"How in the world did you end with a woman this beautiful? And the daughter looks just like her except for hair color. And she looks so young. Did she have the daughter when she was six?\"\n\nI laughed and explained. She hugged me hard, genuinely happy for me.\n\n...\n\nI didn't think about it until later, but neither of us brought Becky up, not once.\n\nMy boss called me into his office two months later, tossing a resume at me.\n\n\"Look this over. She gave you as a reference, even said you trained her. Is she any good?\"\n\nI looked at it and grinned.\n\n\"I might have trained her, but she's a natural. By now she's better than I am. If we can afford her, we'd be idiots not to hire her.\"\n\nHe grunted.\n\n\"Hire her then. Have her report to you. Now, I got something serious we need to talk about. I haven't told a soul yet, and it doesn't need to leave this room.\"\n\n\"I'm sick, John Charles. It's pretty serious. I've got a tumor on my brain. They just found it, and it has to be removed or it'll kill me. There's a fifty fifty chance I won't make it. I talked to Gloria, and she agrees with me that you should run the place until I'm better, if I make it. If I don't, we still need you to take control, keep the place viable until Gloria can decide what she wants to do.\"\n\nIt shook up our little circle of friends pretty badly when he announced it. He and Jack were really close, had been for years. The day of the surgery, our whole office, even Gail, was there. Many of his friends were there as well. He called every one of us into his room to say goodbye, just in case. Ken, June, Amanda, Celeste, and me took turns holding Gloria. When we weren't holding her, we were in the chapel with the rest of his friends, praying for him. He was under for five hours. When the doctor came out, everyone held their breath.\n\n\"He's doing fine, so far. I feel pretty good about his chances of recovery. It'll be tomorrow before he's strong enough to allow visitors.\"\n\nWe shouted, we cried. We thanked the doctors and God. \n\n...\n\nAida fit right in, to the point she became my right hand woman. Amanda and Celeste loved her, and she was soon a part of our group of friends.\n\nPretty soon the matchmaking started, married women have this thing about a single woman being in their circle. She fought them, saying she wasn't ready yet.\n\nShe spent a lot of time in the bar, and soon everyone knew she was our friend, and that made her their friend. I'll never forget the day another friend invited her to ride with him on a poker run.\n\nHe was huge, bearded, and white. And perhaps the gentlest man I'd ever met. Put him in a social situation where there were kids, and in half an hour they were clustered around him like he was the Pied Piper.\n\nHis wife turned out to be a cold, conniving bitch, having multiple affairs before he found out. It destroyed him, and she called him the biggest pussy she'd ever meet. Her new boyfriend thought he could get away with disrespecting him. Huge mistake. Sam and I bailed him out, got him a lawyer, and made it go away, but the damage was done. It had been eighteen months, and he still hadn't even thought about dating.\n\nAida surprised us all by accepting, if they went on a date first, to get to know each other. It must have been a heck of a date, because they smiled like crazy on the poker run. Eight months later she was sporting a really nice rock, and was three months pregnant.\n\nMy life took another dramatic change when I was contacted by a woman, Alice Johnson, to see if we were interested in doing a campaign for her. She even had it planned out. That gave me pause, clients rarely have good ideas, and some as so married to them they insist we do it their way. I usually steered them towards someone else, because when they tank they never understand why.\n\nShe was a personal manager, specializing in fighters. Her new sister in law was Bettina \"Bang Bang\" Burke, now Stewart, a middle weight MMA fighter, World Champion in her class.\n\nThe campaign wasn't for her, but a charity they both supported. I was hesitant but agreed to a meeting. Aida and I met her at the airport, had lunch, and she told us what she wanted. I had to admit, it was very clever. We tweaked it just a bit, did a few focus groups, and decided to go with it. Soon ads appeared, mostly in print and billboards.\n\nIt was a variation on the \"Got Milk\" campaign, only instead of milk they changed it to love.\n\n\"Got Love\" was the official catchword of the National Adoption Coalition, a loose group of agencies designed to get children into loving homes.\n\nIt developed a huge presence nationally. The ads featured famous people, all adopted as a child, with a group of children from various homes, usually in their home city. There was a plea to consider adopting one of the children, and local dairies were tied in, promising x amount of gallons donated to the homes for every successful adoption. We even worked in the milk mustache.\n\nSoon we had spokespeople begging us to let them help. Rock and country stars, professional athletes, business giants, actors, Olympians, Nobel prize winners, all adopted, all literally begging to help. We featured many of them with their adoptive parents. Some had even adopted themselves.\n\nBetty and Mark Stewart, who helped originate the idea, posed with their newly adopted son. It was an instant favorite.\n\nIt led to my company, High Country Advertising, winning a national award. Howard, my boss, was still to weak to travel, so he sent Aida and me to accept it. Of course, her new husband Roy and Amanda went along.\n\n...\n\nIt was very gratifying to be there. We made our acceptance speech, and apologized to Alice Johnson, who we insisted attend and share the stage with us, for stealing her idea, then thanked her and the people present for honoring us.\n\nThere was a mixer after the awards, Aida and I had a bet going, the one who got the most offers had to buy the loser breakfast. I had nine, Aida had sixteen. I told her I wanted steak and eggs.\n\nWe were just about to leave. I was looking around for Amanda, she and Aida had gone to the ladies room, when I ran into her.\n\nBecky.\n\nShe had a hesitant, half fearful look on her face.\n\n\"Hello, Jace. How are you?\"\n\nI looked her over. She was still beautiful, a little heavier, but not much. Her hair was much shorter, her lips seemed fuller, but otherwise she was the still the beauty I fell in love with.\n\n\"I'm good, Beck. And you?\"\n\nShe waved a hand dismissively.\n\n\"Oh, I'm all right. Congratulations on your award, it's was good to see Aida again. She says she works for you now.\"\n\nI answered the implied question. \"I prefer to say she works with me. I'm a minority owner and current manager of High Country Advertising, been there since, well, since after. I like it. I like the area. And the people.\"\n\nShe looked down at my finger.\n\n\"Seems there is one there you really like.\"\n\nI don't know if it hurt her feelings, but I smiled, rubbing my band.\n\n\"Yes there is. I see you found someone too.\"\n\nShe had what could be only descried as a rock on her finger.\n\nShe twisted it, a nervous gesture.\n\n\"I have, and I'm content. But, Jace, late at night, when you're lying there next to her, do you ever think about me? If you'd just forgiven me, we'd still be together.\"\n\nI sighed. \"I used to think about you, a lot. But then I met Amanda, and you became a distant memory. Oh, I haven't forgotten you, every once in a while something will trigger a memory of happier times, but it's fleeting.\"\n\nShe suddenly grabbed my hand.\n\n\"We could start over! I'd leave him in a minute if you'd take me back. I've never gotten over you. We were meant to be together.\"\n\nI heard a sharp intake of breath behind me as I gently removed her hand.\n\n\"No we weren't, Beck. If we were, you would have never cheated, and I would never have found Amanda. There's more love and faithfulness in the tip of her little finger than your whole body. I'm sorry, Becky. Please, try to have a good life.\"\n\nI started to walk off when I felt a small hand slip into mine.\n\n\"Who's your friend, honey?\" asked Amanda, with a bland smile on her face.\n\n\"This is Becky, someone I used to know in my old town. Becky, I'd like to present my wife, Amanda.\"\n\nThey didn't offer to shake, just eyed each other and waged a mental catfight. I looked at them together, Becky in her midthirties, in a simple black dress, and Amanda, at twenty six still carrying the bloom of youth, her green floor length gown matching her eyes, the copper red hair cascading down her back, and was again amazed at how lucky I actually was.\n\nAmanda broke contact and turned to me, smiling.\n\n\"Honey, I know it's early, but would you take me back to the room, I seem to be having an evening bout of morning sickness.\"\n\nShe stopped, put her hand to her mouth, and giggled. \"Oops! I was going to surprise you tonight. Too late now. Congratulations, honey. It's a boy!\"\n\nI think I heard a gasp behind me but suddenly the only thing in the world worth my attention was right in front of me. I gathered her in my arms, kissing and crying while she giggled. She finally had to beat on my back to make me let me go.\n\n...\n\nThere was a massive celebration at the bar. Amanda smiled and thanked everyone, but when we got home she grabbed my balls and squeezed. I thought I was going to pass out before she let them go, then stroked them gently.\n\n\"I'll kiss them in a minute, make them all better. I just wanted to make sure I had your full attention. I know who you were talking to in New York. If I EVER see you in the same room with that bitch again, I'll wear your balls for earrings. Do you understand?\"\n\nShe was starting to squeeze me again. I made her a solemn vow it would never, ever happen again. She let go and purred in my ear.\n\n\"Thank you honey. And I heard what you told her. It was so sweet. Besides, you're gonna need those balls. I still want that girl.\"\n\n...\n\nThat's it. I'm sure you know they lived happily ever after.\n\nThis should have been two installments, the failure of his first marriage and his success in his second, but I got on a roll and just kept writing. Forgive the mistakes. I think I may have actually been a little better in this one. I'm getting the advice of a really good writer, he's helping me with a couple of things already and I don't want to overload him. When the next story comes out, I'll thank him publicly for his suggestions and editing.\n\nQ"
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/an-unexpected-reaction-1"
}