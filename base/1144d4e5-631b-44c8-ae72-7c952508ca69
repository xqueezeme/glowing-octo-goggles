{
    "title": "Blow Your Mind Pt. 09",
    "pages": [
        "Thanks everyone for the feedback so far, and thank you for enjoying. Sorry it's been taking a bit to get these out, but I want to make sure I'm happy with it and put out good product. Enjoy and again, if you have any feedback, be polite about it even if negative.\n\nPART IX\n\n\"Emerald.\"\n\n\"Emerald, time to wake up.\"\n\nBrandi moaned. \"Let me sleep, I'm tired.\"\n\nSLAP!\n\nBrandi jerked hard at the slap across her face and blinked several times. She turned her head slowly and looked up to see Kory smiling a very evil smile.\n\n\"You have slept enough.\"\n\nBrandi looked around and saw the man that she remembered coming in right as she finished changing sitting back by the door. He was a thug. Brandi could tell from a mile away never mind her special skills and senses. He wore a suit that didn't quite fit, obvious bulge from a gun, dumb look in his eyes, and lots of muscles.\n\nShe was in a room that looked like a dressing room, it had a divan, several chairs, including the one she was tied to, a large mirror and vanity, a wardrobe, and a sink. Aside from herself, Kory and the thug they were alone. Kory was dressed in a dark black robe with black slippers. She was naked and a glance in the mirror showed she was in Lucinda's (or Emerald's) form.\n\nKory sat down at the vanity and began to brush her long golden hair. \"So, we follow someone who looks like Mary McLean sneaking out of her house late at night and takes great pains not to be followed. Except it's not Mary McLean, who is in her own bed naked with her husband and they are both passed completely out from what looks like a massive fuck. And so when my boy Frederick here busts into the room, he finds Emerald bonking a hot Asian escort. Except you are not Emerald, you are Lucinda, an escort from Brazil, with several adds on reputable escort sites. Except that Lucinda is currently in NYC with a client for a weekend according to what my hacker tells me. And her phone's GPS.\"\n\n\"The McLean's have been fucked stupid to the point that my boys couldn't get anything out of them except some sighs and smiles. And when they finally did wake up enough to talk they couldn't remember anything other than some extremely wild sex. Although Mary was very confused about her afternoon. And after some questions at the Club it turns out that her friend Diane had come over that afternoon and had then \"had too much wine\" and spent all afternoon and some of the evening passed out in the bed. And the woman, Dawn from Philly, somehow left the club without being seen.\" Kory said as she turned back towards Brandi and gave her a very appraising look.\n\n\"I figured you had some talent and were hungry. Apparently, you have a lot more talent than I realized. I should have been more suspicious when you didn't dig around more. I'm the hottest stripper in Chicago, anytime another hottie shows up it's always a cat fight until I put them in their place. But with you? No cat fight, you seemed indifferent. That should have tipped me off, it won't happen again.\"\n\nBrandi met her gaze and didn't say a word.\n\nKory smiled an evil smile. \"No comment huh? I wouldn't either in your shoes.\" Kory stood up and adjusted her robe. She teased her hair a bit, and then looked at Kory. \"I don't like wasting time so I will get right to it. You are in a world of trouble girl. You are in a place that no one knows about, you have no tracking device on you, on one followed us here, and there is no help coming. If I want you too, you will simply disappear.\"\n\nBrandi kept her face straight. She could tell Kory was watching her closely for any hint of weakness and Brandi felt that she was a bit surprised and impressed that Brandi was keeping calm.\n\n\"But here is the thing. I may let you go. If you fill me in on who you work for and what they are after.\"\n\nBrandi had figured this was coming. \"So how do I answer this?\" Brandi thought. \"Let's try changing the subject and buy some time.\"\n\n\"How did you know I left the house? I didn't see any tails, and I am very good at catching tails.\"\n\nKory grinned. \"Trying to change the subject? Nice try.\"\n\n\"SLAP!\"\n\nBrandi shook her head as Kory giggled. \"That's the last slap you get. THIS is the next time.\" Kory held up a riding crop and whipped it through the air.\n\nBrandi kept her face straight. She thought about her skills as a domme that she had pulled from the Dominatrix back in college and repressed a shudder. She could last for a while, but it was obvious Kory was going to just rachet things up.\n\n\"She is used to breaking people. I need to get her off track somehow. Hmmmm, maybe some honesty works where lying won't.\" Brandi thought.\n\nKory leaned down and cupped her chin with her hand. \"I do love it when people resist. I have so much fun breaking them.\"\n\n\"I was hired by Jones Electronics to find out why he was being targeted.\"\n\nKory blinked. Her face was mostly a good poker face, but Brandi could see that she was a bit surprised.\n\n\"I was to determine who it was, and then why. And then let him know and that was that.\"\n\nKory straightened up. She traced the crop over her tits and frowned. \"That seems a bit too easy.\"\n\n\"I'm not lying, but yeah, it's not like you can tell if I am or not, so I'm likely going to get tortured either way.\"\n\n\"You seem rather, resigned, to this.\"\n\n\"What am I going to do? Lie, and get whipped? Or tell the truth and get whipped? The common theme here is \"whipped\" so I may as well get it out of the way. My job wasn't to wreck your operation or anything, just figure out who was the boss so Jones Electronics can talk to you about what it is you want so he can do business here.\"\n\n\"Why? Seriously, why does the CEO care enough to push it? He can do business everywhere else, just not here.\"\n\n\"Well, why the hell have you singled him out? That's the thing, extort money sure, it's Chicago. Corrupt Unions wanting some padding on the contracts, expected. Crooked cops looking for some rent money, of course. Mobsters looking for possibilities, certainly. But it seems personal, like this company was selected for a reason. And its only Chicago, no issues anywhere else. It's weird. And weird gets attention.\"\n\nTo anyone else Kory would have looked stone faced. But Brandi could tell she had hit a nerve. It anything Kory seemed a bit surprised. \"Okay, this might be an opening. Let's push.\"\n\n\"Since I am likely not going to leave here alive, care to spill? I'm curious as hell myself. Your operation is first rate, cripes I still can't believe it's YOU as the boss. I thought it was David McLean.\"\n\nKory smiled and looked a bit flattered. \"I will take that complement. That's the whole idea, if someone is able to follow some of my pawns around, I will seem like just a go-between and they will aim for the DA.\"\n\n\"Didn't give up anyone else like Megan, just the one I obviously knew about. This woman is clever.\" Brandi thought.\n\nKory paced a bit, swaying her ass in a sexy runway walk. But it was just out of habit, Brandi could tell she was deep in thought. After a few moments she turned and looked at Brandi.\n\n\"I will answer your question about Jones, and then I will say goodbye. It's shame really, I liked you Emerald, and I thought you had some potential. If you had stayed around I was going to bring you into my organization.\"\n\nKory picked up a iPad and tapped in a code. She held it up and Brandi saw a long list of company names.\n\n\"You see this? These are all the companies trying to start up offices in Chicago. Chicago is corrupt, everyone knows that. But I am the ruler of it all. I have the dirt on everyone who is dirty in Chicago, and thanks to my control of the DA, parts of the City Government, and the Police and even a couple of feds, I have crushed any organized criminal resistance or city resistance.\"\n\nKory sat down with a sigh. \"But you know what the problem is? Taking over was easy. Really easy. All you had to do was think about what you needed to do, and then do it. Being the smart girl I am, I realized that I needed to make a long-term plan and then stick to it. I did, it took me five years to get all my pieces into place and then crush anyone else. But then came the problem I didn't see.\"\n\nKory paused and Brandi kept quiet. \"God, enough drama stripper, get to it.\" Brandi thought.\n\nKory frowned and then said \"Keeping it. You would have thought crushing everyone and digging dirt would have gotten the point across. Nope. New players constantly coming into the game, elections not quite turning out like you planned, recalls, actual honest cops doing their jobs, constant turn-over. After a few months it seems like I am right back where I started and I have to make an example.\"\n\n\"So you whack someone. I am not seeing the point here.\"\n\n\"You'd think so, but I have found out that isn't quite as effective as one would think. If you are a crook, you expect that. It doesn't make a splash, it's just seen as regular business.\"\n\nKory scowled. \"I was having to have someone killed or ruined about once every two weeks. It was getting to be a pain. Then I had an idea. I decided to simply target someone out of the blue for no reason at all. A whim.\"\n\nBrandi gave her a puzzled look. Kory grinned at that. \"Got you too? Good, no one has figured this angle yet. Did you ever see that movie \"New Jack City\"? The head bad guy was talking about how he joined a gang. He had to just pick someone off the street at random and kill them. The gang did that because it was harder to do than say a rival gang member. It was just cold-blooded murder, no mental out like \"He was a bad guy\" or \"He was with the other gang\"\".\n\nKory stood up and paced a bit smiling and rubbing her hands. \"And it is. Killing someone who betrayed you isn't showing how tough or ruthless you are, it's just business. Everyone who is crooked knows this and expects this. If you don't you are dead pretty fast, and if you do you are not really impressing anyone, you just did what you had to do to stay in business.\"\n\nKory spun and looked at her and Brandi could see her eyes twinkling with excitement. \"But to just randomly pick some company for no reason? To crush their operation on a whim? No money, no payback, no reasoning. Just an exercise of raw power for no reason other than to simply do it? THAT gets people's attention.\"\n\nKory laughed and clapped her hands. \"When I started targeting Jones Electronics it was a completely random pick, I just spun my list and pointed at one. And then I sat back and listened. Everyone was trying to see the angle, trying to see what the game was. No one, NO ONE, could figure it out. You want to know what fear is? Fear is the unknown. And right now, I'm the unknown. And everyone in Chicago knows it and is afraid. REALLY afraid.\"\n\nKory strode to the door and turned back. \"I haven't had a single issue in two months since I started. Everyone is in line and staying that way because I am the unknown. Why did \"the boss\" target them? What's the angle? What's the payoff? What if there isn't one? What if the boss is just doing this for fun? On a whim? If that is the case, then what could the boss do to me? For any reason? Better to keep a low profile and stay off the boss's radar\"\n\nKory let out a series of giggles that sounded very odd coming from her after that speech Brandi thought. \"God, I haven't had so much fun since I took over my high school Junior year and turned the principal into my sissy. I just sit back and listen to all the talk and work to keep a straight face.\"\n\n\"Why do you still strip then?\" Brandi asked.\n\nKory stopped and blinked. After a bit she snickered and then said \"The real reason? I like doing it. I really get turned on by knowing that everyone out there wants my body and is willing to pay for it. If I wasn't into being a mob boss so much, I would probably branch into being a full-time escort as well as a stripper. That and the fact that this is the perfect cover.\"\n\nKory licked her lips and blew Brandi a kiss. \"Well Emerald, or Lucinda, or whomever you really are, you have your answers. And now I am going to say goodbye and that will be that. Frederick, you know what to do.\"\n\n\"Hey, one last thing. How did you follow me to the hotel? I didn't see any tails and I'm curious about what finally got me.\"\n\nKory snickered. \"Wow, I just pronounced your death sentence, and THAT is what you ask about? Emerald, you really are something else. But I'll tell you. The house behind the McLean's is one of my safe houses. I have some people there who watch the McLean's, that's their only job. He got suspicious when you drew the curtains on the bedroom. They never do that, usually because it's so long between fucks they forget. So when the curtains got drawn, my guy got suspicious. And then he saw you jump the fence. The house is on the top of the hill and my guy has access to the security cameras on the street. So he just watched you work your way downhill and then watched the cameras until you popped out. He saw the bus you got on and let my hacker know. We just checked out each security camera at each bus stop until you got off. And then I my boy scan all the taxies and Ubers that got a call with in a 3-mile radius during the next two hours. Turns out it was only you during that time period, easy peasy to hack the Uber database to find out where you went, and just as easy to hack the hotel and find your room. I'm not exactly sure how you did such a good job on the disguise though, but oh well, it's not like I need to worry about it anymore.\"\n\nKory giggled and blew a kiss at her. \"So now you know.\"\n\nKory opened the door and left. Brandi felt her mouth go dry as Frederick stood up and locked the door.\n\n\"Girl, if you ever had a bright idea, now is the time.\" She thought.\n\nFrederick walked over to her and looked her over. \"Nothing personal.\" He said as he pulled out a rope and began to twist it around his hands.\n\n\"Hey, can I have a final request?\"\n\nFrederick ignored her and took a step to get behind her.\n\n\"Can you fuck me?\"\n\nFrederick stopped dead and looked at her with the most surprised expression Brandi had ever seen.\n\n\"You, you want me to FUCK you? Now? With this about to happen?\" He stammered out.\n\nBrandi gulped and nodded. \"I know that sounds crazy, but the thing is I'm a nymphomaniac. A really bad one. I need a lot of sex or I just go crazy. I know I am not going to need to worry about that anymore, but I would like to end it being satisfied if you follow.\"\n\nFrederick just stared at her. Brandi could tell that he was seriously thrown for a loop and that he was considering it.\n\nBrandi licked her lips. \"Look, just untie me enough to move me over to the divan there. You can keep me tied up, just bend me over and take me from behind. I'll blow you if you want, but I get that you might not trust me enough to put your cock in my mouth. You can have me however you want, but just stuff my pussy full of your cum. If I'm dead, I want to enjoy my last fuck and getting a huge load in me is the best. Trust me, I am the best fuck you are ever going to get.\"\n\nFrederick lowered his eyes. He glanced at her, looked over her body, and then looked at the door. He checked his watch and Brandi could see his lips moving. She made out something like \"Be here is about an hour.\"\n\nAfter a moment he went over and locked the door. He came back and untied Brandi from the chair but left the rope on her wrists. He jerked her up and moved her over to the divan and then bent her over.\n\n\"SMACK\"\n\nBrandi yelped as Frederick slapped her ass. He smacked her a couple more times and said \"Nice ass. Firm. I bet you will be a tight fit.\"\n\nBrandi wiggled her ass and then sucked her breath as she felt a finger slide up between her legs and roughly rub her clit. Brandi began to sway a bit as the thug roughly played with her clitty and then slid a finger into her pussy.\n\n\"Uhhhhhhh, man, could you have wet it a bit first? That's a bit rough.\" Brandi hissed as the finger began to work on her.\n\n\"Shut up. I am doing you a favor, so don't bitch, bitch.\"\n\nBrandi grunted and focused on trying to enjoy it. After a bit she moistened up and Frederick's fingers were soon sliding in and out easily. She heard the jingle of a belt being undone and then heard the slight thwonk of the buckle hitting the floor.\n\n\"OOooo, there we are.\" Brandi said as she felt a hard cock slide up her ass-crack and then slide against her pussy lips.\n\n\"Well, time to see if you are as good as you say you are.\" Frederick said and spread her legs a bit more. He positioned and pushed into her.\n\n\"WWAaahhhhhh?\"\n\nBrandi heard Frederick babble that out as she pushed her connection and ripped into his mind.\n\n\"Bllllllllfffffff...\" Frederick trailed off as Brandi shoved back onto his cock hard with a loud hiss and focused on his mind. Brandi wasn't going to be nice or take her time, she was terrified down to her bones. So much so that she wasn't even feeling any pleasure this time, even though she could feel her body twitching and jerking.\n\n\"Oh shit! NO!\" Brandi yelled as Frederick stumbled backwards and broke the connection. Brandi started to turn around when she heard him crash backwards onto the floor. She glanced at the door and let out a breath as she saw or heard nothing that indicated that anyone was coming to investigate.\n\nFrederick was lying on his back gibbering and his eyes were rolling around in his head. Brandi spun, straddled him and eased onto his stiff cock as fast as she could. Frederick let out one more babble and then his eyes rolled up and his body went limp.\n\n\"Ugggggggggg, move, sssss, fast girl!\" Brandi hissed.\n\nBrandi bounced up and down several times to get a good connection and then scanned his mind. After reviewing the most critical items for the moment (where she was, the layout, plans for the day, who was here in the building with them, where the cars were, how much he knew about her, etc.), Brandi just ripped his whole mind out whole. She wasn't nice about it, and it wasn't very enjoyable even though her body shook with pleasure from the connection. She was fully focused in a way she had never been and it showed.\n\n\"UUHHHHHHHHHHHH!\" Brandi growled out and then jerked off Frederick as they both came. Brandi didn't even try to enjoy the blissful rush she got at the ending orgasm, she started pulling a pocketknife out of Frederick's coat pocket and cut herself loose even though her body was trembling from the pleasure.\n\n\"Come on body! Knock this shit off!\" She growled as she fumbled the knife out. She let the final shudder pass through herself and then cut the ropes around her wrists. She next pulled out a gun from a shoulder holster on Frederick body and chambered a round. She looked through his pockets and found a bag of coke and some pills.\n\nShe stood and ran to the wardrobe and opened it. She stood back and blinked. It was full of S and M gear and some rather nasty devices like a set of jumper cables and a plug-in power source. \"Whoops. Nothing in here to see.\" Her clothes were nowhere to be seen or any clothes for that matter.\n\n\"Okay focus girl. Megan is coming to collect the body in less than an hour. I have a gun, I'm naked, and I'm in a house with two other thugs and Kory. This is one of Kory's little safe houses outside of Chicago. I'm in the basement, there are several other rooms down here, all soundproofed, used for working people over when Kory wants it done. Kory is staying here until I am disposed of. To get to a car, I will likely have to take out at least two more guards and hope one of them has the keys.\"\n\nBrandi thought for a bit. \"Shit. No certainty that I can get the drop on them, and if I don't I will have to kill them. And that still leaves Kory, who is way too dangerous to simply let go. Since I gave her the name of the client, she will likely go after them just to find out who they hired and then come after Mr. Case and me. I have to neutralize Kory.\"",
        "Brandi focused on what she had ripped out of Frederick. Most of it was useless. He was a thug from the south side, had no real skills other than being a thug, and was painfully loyal to Kory since high school where he had been one of her enforcers apparently.\n\nBut she found one little snippet.\n\n\"Oh ho. He walked in on Kory and Megan getting nasty once. They apparently didn't see him. Hmmm, Kory likes girls, and apparently she really likes Megan.\"\n\nBrandi thought for a moment and then grinned. \"Okay Megan, get here soon.\"\n\nBrandi went to the wardrobe and dug around in it for a bit. She pulled out the plug-in power pack and the cables and attached a couple of sponges that she wetted from a jug of water on the vanity. She touched them together and got a nice little zap.\n\n\"Yeah, this will work nicely.\" Brandi said as she moved behind the door. She pulled out Fredrick's cellphone and waited for a text or it to ring. \"Either Kory or one of her thugs will stop by to check or Megan will show up first. Hopefully it's just Megan.\"\n\nAfter several minutes Brandi saw the doorknob jiggle and then heard a knock. She carefully reached down and unlocked the door and pulled it open.\n\n\"Okay, hopefully you strangled this one. If not you are cleaning up...\"\n\n\"ZAP!\"\n\nBrandi moved from behind the door, shoving it closed with her ass and shoved the two jumper cables into Megan's temples. A jumper cable shock is normally painful when applied to a body, but by touching her temples and zapping her brain, Brandi figured that it would knock Megan out.\n\nIt did. Megan's body jerked once and simply dropped to the ground in a heap. Brandi turned off the cables, locked the door and dragged Megan over to the Divan. She quickly stripped her naked, noting that under her business suit she was wearing skimpy, bright red lace underwear, garter belt and stockings.\n\n\"Nice body. I can see why Kory likes you. Although I am betting it has more to do with the power trip of owning a cop. And it looks like you may have been hoping for some action here aside from the official kind.\"\n\nMegan was a natural blonde and had a nice muscular figure with a nice 36CC rack on her. Brandi smiled. \"Yeah, this will work. But how to do this so I get up in time? Every time I have done this I pass out for at least a couple of hours.\" Brandi muttered. Her eyes wandered around the room and then she saw the coke she had taken from Frederick on the vanity.\n\n\"Hmmmm, that might do the trick. It's a lot more powerful than the pep pills I have tried. I guess I need to do it right as I am starting to change. Cripes, I hope this works.\"\n\nBrandi positioned Megan and began to suck on her pussy. She moistened up quickly even though she was out cold and Brandi scanned her mind as she worked her clit with her tongue.\n\n\"Mmmmm, you taste nice Megan. Let's see here. Uuuuuuuuooooooo, yeah, focus Brandi! Okay, let's see, uhhhhh, oh you little tramp. Gonna have some fun with Kory after this huh? Youoooooooooooo, so fucking good! You little two-faced bitch, you are a submissive! Kory dominated you once when you tried to arrest her for hooking! Damn! Looks like Kory got you way under her thumb and you like it! Uh hhhhhhh! Time to scissor!\"\n\nBrandi pulled up and positioned herself. She bent over and said \"Here goes nothing!\" She put her nose down and snorted up the cocaine as fast as she could just as she ground down into Megan's pussy.\n\n\"SSSSSSSSSSSSSSSSSSSSS!!!!\" Brandi sucked a huge breath in as the double rush of coke and pleasure hit her like a ton of bricks. Brandi's eyes rolled up and she felt like she was floating in a rainbow cloud as her body spasmed and jerked. Brandi rode it for a few seconds and then her feelings changed. The pleasure seemed to burn out some and the connection seemed to be much more solid. It was still very enjoyable and her body shook as wave after wave of pleasure coursed through her, but it seemed lesser than before. The connection to Megan seemed very solid, more than she had ever had.\n\n\"Uhhhh, let's see here. Uhhh, there is her file, there is the DNA coding, there is, oooooooo, ssssssss, what the hell is that? It's uhhhhhh, something new! Fuck! This coke is really doing some crazy stuff! Damn, great link, the pleasure is lessened so I can actually focus better and I am seeing Megan's files much better. Fuck, don't have time to waste and I can't let this bitch be an issue. Ahhhhhhh, sorry Megan.\"\n\nBrandi focused and in her mind she swept every file on Megan's desk onto her desk.\n\n\"All or nothing!\" Brandi hissed as she dove into her DNA desktop and activated Megan's file.\n\n\"UH! UH! UH!\" Brandi grunted as her body jerked violently. The third jerk broke the connection and she jerked back against the wall and banged her head. She saw stars for a few seconds and then felt a wave of agonizing pain wash over her.\n\n\"Oh FUCK!\" She whined and then it passed. Her whole body felt sore and her vision swam. She almost blacked out but she ground her teeth and with a massive effort slapped herself in the face as hard as she could.\n\n\"OW! Damn it!\" Brandi spat out. She took several deep breaths and then a long slow in and out. She took another and looked down at her chest.\n\n\"Damn it, it worked. Oh thank you God.\" Brandi said and took another deep breath. Her body trembled a bit and after some more breathing she felt calm enough to roll to her knees and stand up. Brandi looked around and let out a low whistle.\n\nBrandi felt juiced. Her normally heightened senses were even more so. She was seeing everything with incredible detail and she could easily make out the smell of sex. It was nearly overpowering to her now. She curled her toes on the carpet and felt the texture.\n\n\"Damn. I feel like I'm plugged in to a socket! Wow! That coke must have stimulated my mind. Makes sense, cocaine effects the brain, speeds up your train of thought, stimulant. Hmmm, I wonder...\"\n\nEven though Brandi was in a rush, she bent down and kissed Megan.\n\nBrandi felt an immediate connection. It was much better than anything she had had before via kissing, it was nearly as good as eating pussy in terms of connecting. Megan's mind was completely blank so there was not much in there, but Brandi was impressed by the connection.\n\n\"This could be a game changer. I am going to have to look into this more once I'm out of here. Then again, I'd rather not pick up a coke habit. Shit, nothing is ever easy.\"\n\nA quick glance in the mirror showed that she was a perfect copy of Megan. Brandi quickly grabbed the water pitcher and cleaned herself enough so she wouldn't stink of sex to a normal person. She dressed quickly and grinned in the mirror.\n\n\"Perfect. Okay, time to tie some folks up.\" Brandi trussed up Frederick and after some effort was able to shove him into the wardrobe and get it shut. Brandi then gagged Megan, tied her up, and then shoved a hood from the wardrobe over her head. Megan had dropped what appeared to be a rubber body bag on the floor. Brandi grimaced but shoved Megan into it. She zipped it nearly shut but left it open enough at the top so some air could get in.\n\nBrandi focused on Megan's memories for a moment. \"Okay, I'm here, the car is there. Of course, I'm in a basement, so I need help getting this upstairs. Hold on Big Joe is next door doing some work.\" Brandi shook her head. \"Right. Get Big Joe, then Megan into car trunk, then Kory neutralized.\" Brandi murmured.\n\nShe opened the door and went next door. Big Joe was a massive white guy with a shaved head and a lot of biker tats. He was a former Hell's Angel who had been kicked out of his chapter for doing some unapproved business and had been hired as an enforcer while in jail. Megan had arranged his release for Kory, who now used him to break knees when needed.\n\n\"Hey Joe, Frederick went to use the can and I need some help getting the bitch upstairs. She is just big enough to be too big for me alone.\"\n\nJoe turned around and gave her a glare. \"I'm busy pig, fuck off.\"\n\nBrandi walked up to him and gave him a nasty look. \"Listen fuckwad, I need to get this bitch outta here now or Kory will have my ass. Help me get her up the damned stairs and that's it.\"\n\nJoe returned her nasty look but after a moment he grunted. \"Alright. Let's get this shit done, figures Frederick would worm out of it.\"\n\nBrandi muttered \"Tell me about it.\" She led Joe back to the room and grabbed the heavy end herself. Joe arched an eyebrow and she said \"What? I said just a bit too heavy for me so no reason not to grab the heavy part. Unless you want it?\"\n\nJoe spat on the floor and grabbed Megan's legs. With a low grunt they hauled Megan up the stairs and into a closed garage. Brandi popped the trunk and they tossed Megan in. Brandi mentally winced as Megan's head banged off the edge, but she reasoned Megan had it coming.\n\n\"Better her than me. Now, let's find Kory.\" She thought.\n\nJoe turned around and stalked off towards the door. Brandi followed and just as he started to open the door Brandi reached down and grabbed a very large pipe wrench. She stepped up behind Joe and bashed him in the back of the head as hard as she could.\n\nJoe didn't even moan. He just dropped like a sack of bricks. Brandi made sure the door was shut and then checked him out. Thanks to her medical skills she could see she had knocked him out cold and he would be out for several hours and have a nasty concussion when he did come around. If he came around, Brandi wasn't sure if she had overdone it. She hauled him over to a bunch of boxes and onto an old tarp. Looking around she found a roll of duct tape and quickly trussed him up with hands behind him and legs tied up. She shoved a gag into his mouth and then wrapped his mouth up with the tape and then blindfolded him. She then wrapped him up in the tarp and covered them with the boxes.\n\n\"Okay, thug two down. One left. Raul, should be by the front door on watch. Brandi is likely in the Master Bedroom/office checking on the latest information and making plans.\" Brandi thought to herself.\n\nBrandi left the garage and went downstairs again. She carefully checked each room and then moved upstairs. She checked out the kitchen and then looked into the main hallway. Raul, a fairly normal looking guy was sitting on a chair near the door checking some stuff on his phone. A shotgun was against the wall next to him.\n\nBrandi just walked up to him with a glare. Raul looked up at her with a look of surprise and annoyance.\n\n\"What do you want cop?\"\n\n\"Where the fuck is Frederick?\"\n\n\"What are you yammering about puta? He's downstairs waiting for you in the salon.\"\n\n\"The fuck he is. I have been looking everywhere for him. Joe hasn't seen him either. Fuck it, never mind where he went, come and give me a hand moving the package upstairs. I gotta get going or Kory will have my ass.\"\n\n\"Get Joe puta.\"\n\nBrandi grabbed Raul by his hair and jerked him up. \"You fucking call me that again pendejo and I'll cut your cajones off. I'm in a rush, you ain't doing anything, so move your worthless ass.\"\n\nBrandi thought for a moment he was going to either lose it and start a fight or go for his shotgun, but after a moment he broke eye contact and muttered \"Fine\".\n\nBrandi led him downstairs and into the salon again. He walked in and looked around. \"Hey, where's th...\"\n\nBrandi locked lips and held her mind-scrambling kiss until she nearly blacked out. Brandi's heightened condition let her tear into Raul's mind. Where she normally had to hold the kiss for a while, this time she just dove in and completely torn his mind apart in a few seconds. Brandi wasn't sure if she didn't cause some damage but she could tell Raul was a complete zombie with nothing working. Brandi broke the kiss and Raul just fell back onto the divan with his eyes rolled up and didn't make a sound. Brandi trussed him up with duct tape and left him tied to the divan.\n\n\"And that's everyone but Kory.\" Brandi thought. She scanned her memories and found that they were not expecting anyone else. Kory had ordered her to come by before she left for some instructions and Brandi knew Megan was hoping for some action before Kory sent her off.\n\n\"Alright, let's do this.\" Brandi said and went down the hallway to the Master bedroom. She knocked and heard Kory reply. \"Come in.\"\n\nBrandi opened the door. Thanks to her memories she knew to keep her eyes down and to hold her hands together in front of her in a submissive stance.\n\n\"Got her in the car?\"\n\n\"Yes Ms. Kory.\"\n\nBrandi kept her eyes down but she could hear rustling from the bed and she smelled perfume.\n\n\"Good. I think she told me the truth, so we don't need anything else out of her. I can find out who Jones hired without any issues and make sure they don't want to work here again. Dump her where she won't be found.\"\n\n\"Yes Ms. Kory.\"\n\n\"Now then, before you go...\"\n\nBrandi glanced up and let out a little gasp to keep in character. Kory was lying on the bed with her legs spread apart. She was naked except for long black opera gloves and black latex boots with six-inch heels. Kory always billed herself as the hottest stripper in Chicago and she probably could back that claim up. She was six-foot tall, perfect hourglass figure, tight and toned, shaved pussy, perfect manicure, 36 DDD cups all natural, Golden Blonde hair down to her mid-back, and liquid blue eyes that melted men like a blowtorch to snow. Brandi had even felt herself attracted to her when whaling especially after a couple of drinks. Brandi had seen Kory use her beauty as a weapon and smash men with it in the club, and when she wanted to look sexy and powerful, she simply DID. And she was doing that now.\n\nKory smiled evilly and licked her lips.\n\n\"Come here my little pet piggy. Time to show your obedience to your owner.\"\n\nBrandi swallowed and lowered her head. \"Yes Mistress.\"\n\nBrandi moved forward and knelt at the edge of the bed. \"Thank you, Kory for being such a freak.\" Brandi thought. She could smell Kory's pussy and could see that it glistened. Kory had been playing with herself apparently and was in the mood for some real action.\n\nBrandi carefully stripped off her top and then her blouse while kneeling. Kory made a slight tutting sound.\n\n\"Red? You know I don't like red. I will have to spank you for that.\"\n\nBrandi licked her lips and squeaked out \"Yes Mistress, your slave is sorry. Your slave forgot.\"\n\n\"Which is bullshit. The little submissive LIKES getting spanked.\" Brandi thought as Kory laughed.\n\n\"The hell you did slave. You like being my slave and you LOVE being punished. Stand up and finish stripping. Get completely naked, you don't deserve clothes.\"\n\nBrandi stood and quickly stripped naked, keeping her head down. \"Damn, I can just about FEEL Kory! This coke has my brain working overtime.\" Brandi thought to herself. She could hear every move Kory made, could smell her various scents (perfume, pussy, soap, sweat), she could even taste her when she licked her lips and felt her musk in the air.\n\nBut oddly she didn't feel really high or at least what she thought she should feel according to her knowledge and her memories from others. Most of the escorts and strippers she had fed on had used coke and their memories were much different from what she was feeling. They mostly seemed to feel a huge blast of energy, their minds awash in a chemical high, their bodies twitching with sexual energy.\n\nBrandi felt energized. But not stupid energized, she felt like her mind was fully focused and her whole sensory system was boosted beyond believe. Her feet almost felt too sensitive to stand on the floor, not out of pain but of sensory overload.\n\n\"Approach me slave.\"\n\nBrandi looked up and then crawled onto the bed slowly, keeping her eyes down. She moved between Kory's legs and lowered her head near Kory's shaved pussy. Normally she would ask permission to begin, but Brandi was tired of screwing around.\n\n\"Feeding time.\" Brandi said softly. She glanced up at Kory whose mouth turned down in a frown and then shoved her face between her legs.\n\n\"STOP! What dddddddooooooooooooooo...\"\n\nBrandi shoved her tongue into Kory's pussy and moved it around. Normally she would have to get the binders into Kory, but she felt a nearly instantaneous connection. It was weaker than if she had had her eat her out or given her milk, but it was enough for her to reach up and scramble her mind around a bit.\n\nBrandi quickly moved up and straddled Kory's face. Kory's head was rolling around and she was babbling, but she was not completely out of it. \"Shut up bitch! Eat!\" Brandi said as she ground down on Kory's face. She heard some muffled talk and then felt the brush of lips against her pussy. Brandi pushed down hard and she felt the connection again.\n\n\"Uhhhh, that's it! Lick it! Lick! Swirl that tongue!\" Brandi panted out as Kory still seemed to struggle a bit. The connection kept breaking as Kory tried to pull her face away.\n\n\"OUCH!\" Brandi yelled as suddenly Kory nipped her clit with her teeth.\n\nBrandi jerked back up and off Kory's face and Kory rolled to the side. She looked at Brandi with a dazed look that was starting to clear up.\n\n\"Damn bitch! I'm going to fix you!\" Brandi said and moved forward grabbing Kory by her long blonde hair. Kory was dazed but she tried to pulled Brandi's hands away. Brandi got closer and then kneed Kory right in the tits.\n\n\"OOOFFFFFFF!\" Kory breathed out nearly all her air and curled up in a ball with a whimper. Brandi shoved her hard and she fell off the bed. Brandi jumped down on her and pried up her head and locked lips with her and kissed her for all she was worth.\n\nBrandi was surprised. Kory was resisting her mentally. It was like she could feel Kory's mind, the conscious one that she needed to scramble, but it was behind a screen or something that blocked her. She pushed her will hard and just as she was about to break for air, it gave way and Brandi reached in and just mixed everything she could get her mental hands on.\n\nShe broke for a kiss and she felt Kory go limp. Brandi got a full breath and looked at Kory. Kory looked dazed but her eyes still showed some fight in them.\n\n\"Who are you? You ain't Megan.\" Kory breathed out and then tried to squirm free.\n\nBrandi grabbed her head again and kissed her again. The wall was back but she was able to break through it this time much easier and mixed-up Kory's head enough that when she broke the kiss Kory's eyes rolled up.\n\n\"Damn! That bitch is one stubborn cunt!\" Brandi growled out. She quickly started positioning Kory, who even now was still making noises and trying to move and resist. Brandi glanced up and saw a mirror and some white powder on it.\n\n\"Fuck! The bitch did some coke! That's what the issue is, her mind is stimulated! Figures, damn strippers and their drugs!\" Brandi snarled. She was in no mood for being nice anymore. She jerked Kory into position and split her legs.\n\n\"Goodbye bitch!\" Brandi said and rubbed her pussy against Kory's.\n\nBrandi had braced herself mentally and let out a long moan as the connection was made and the wave of pleasure hit her. She normally rode the wave for a bit but she forced herself to immediately use the connection and get into Kory's mind. She saw Kory's desk and her neatly arranged files. She reached over to scoop them up but suddenly felt her mind being pushed back.\n\nBrandi did a mental blink and refocused quickly. She saw Kory's desk and it seemed to have a glow around it. It seemed to be pulsing, sometimes very bright then fading to nearly nothing. Brandi pushed forward when the glow faded and felt her mental hands grab some of Kory's files. As soon as she tried to pull them away the glow became much brighter and Brandi's mental hands were shoved back. This time the glow faded a bit slower and was a weaker tone for a bit less time.\n\n\"Shit! Kory is resisting me!\" Brandi snarled in her head. \"That fucking coke she took! Damn it, and I didn't give her any milk so the binders are not fully in place!\"",
        "Brandi pivoted around so she was not scissoring as much as rubbing. Brandi opened her eyes and saw Kory's face. Kory's head was bobbling around like a bobble-head but her eyes were open and Brandi could see that while she looked stoned, Kory was still somewhat in the game. Brandi moved a bit and then shoved one of her tits up and into Kory's mouth. Brandi pushed her tit hard and felt a big squirt of milk go into Kory's mouth. Kory's eyes widened and Brandi shoved her tit hard into her mouth. Kory tried to cough it out, but Brandi could see she swallowed some.\n\nFor a second Kory's eyes cleared up and then they rolled up into her head and she went limp. Brandi shoved her down and pushed her pussy hard into Kory's again. She had been able to maintain a connection, but it fully kicked in again when she ground down hard. Kory's desk reappeared and Brandi was glad to see the glow was much dimmer.\n\n\"Time to finish this bitch.\" Brandi thought and she took a deep breath.\n\n\"UUUUUUUUUGGGGGGHHHHHHHHH!\" Brandi hissed out as her body shuddered from the pleasure flow. Brandi saw her mind seem to push slowly but powerfully forward, bending and then pulling the glow apart. Brandi felt Kory's body shudder and twitch like it was hooked up to a set of jumper cables. Brandi could feel Kory's juices squirt and ooze out of her pussy, and she heard Kory's loud moan as her body went limp.\n\nBrandi reached down and carefully complied all of Kory's files into a large file and with one final massive shudder began to pull them all over to her mind.\n\nSuddenly the files were jerked back hard and fast. Brandi nearly lost her connection due to the violence of the response. Brandi snarled and pulled back.\n\n\"NO!\"\n\nBrandi didn't have time to be surprised at the sound of Kory's voice in her head. She took a deep breath and mustered her energy and screamed \"YES!\" both in her mind and out loud as she mentally reached deep into Kory's head and pulled with the most force she had ever pulled.\n\nThere was a mental jerk as for a split-second Brandi felt her pull nearly stop, and then suddenly her entire body shook and jerked back as a blast of orgasmic pleasure hit Brandi full in her mind. It felt like a tug of war where the other side let go right as you pulled your hardest. Brandi felt this wave of energy blow through her, felt her body spasm and then felt a massive rush like when she had snorted the coke, but only so much better. Her felt so relaxed and warm, and she just let her body and mind float for a bit as she fell backwards. The last thought she had was how wonderful her whole body felt and then darkness.\n\nBrandi blinked as she looked up at the ceiling. She blinked again and then started up.\n\nShe didn't cry out in a panic, but she looked around quickly. She was alone excepting for Kory who was lying on the floor turned slightly away. Brandi listened and heard nothing. She looked at the clock on the nightstand and saw she had been out for several hours.\n\n\"Good thing I took care of everyone, and no one else is expected today. But time is a wasting.\" Brandi thought.\n\nShe stood up and looked in the mirror. She was still Megan and she noted that her heightened senses had returned to regular. She frowned. \"Too bad. That was really useful. I guess it just lasts during the high, if I can call it a high. Sheesh, I was expecting more from the coke fun wise, but I guess this works too.\" She muttered as she quickly looked around.\n\n\"Ah, my head. Damn, I must be really dehydrated, I don't normally have a hangover from this. Uh. Maybe it's from that coke? Eh, I'll get some painkillers later. Man, it feels like there is something stuffed into my head aside from my brain.\"\n\nShe grabbed Megan's gun and then moved over to check out Kory.\n\n\"Okay, let's... Whoa!\"\n\nBrandi jerked back as she turned Kory.\n\nKory was dead. Her body was cold and Brandi couldn't hear or see her breathing.\n\nBrandi got up and sat on the bed and looked down at her victim. There was something really off about how she looked. After a moment she had it.\n\n\"Her eyes. They are all white, no color. It's like she is a zombie or something. Shit. I did not mean to do that. Christ, what am I saying? I don't know what I did.\"\n\nBrandi thought for a moment. \"Hmmm, let's scan what I pulled out of her. Come to think of it, that feeding was strange. I never did this while coked up, or while my victim was coked, so maybe that had something to do with this.\" Brandi thought.\n\nBrandi took a breath and looked inside her head. She gasped at what she \"saw\" in her head.\n\n\"What the hell? What is this?\" Brandi murmured as she reached out her mind towards what appeared to be another desk in her head. This desk was different, it was covered in a strange shadow. It gave off that \"active\" feeling Brandi had when she activated another woman's DNA file, but it was different also. Muted. Locked up. That would be how Brandi would describe it.\n\nIn her mind she touched the shadow...\n\n\"Hello?\"\n\nBrandi jumped up, spun around and then tripped over her own feet causing her to fall onto the bed, bounce and then fall on the floor. Brandi caught her breath and forced herself to relax. \"Brandi, be very careful and be very calm. Let's try that again and keep the connection.\" She thought to herself and she focused and mentally touched the other desk in her head.\n\n\"What is going on? Hello?\"\n\nBrandi took a calming breath and then she thought \"Hello?\"\n\n\"Hello? Hello? Hey, can you hear me?\"\n\nBrandi jerked back from the connection.\n\nBrandi stood up slowly and then sat on the bed.\n\n\"Holy shit. It's Kory.\" She whispered to herself.\n\n \n"
    ],
    "authorname": "Moosetales",
    "tags": [
        "mind control",
        "brain washing",
        "girl on girl",
        "girl on guy",
        "spying",
        "drugs",
        "domination",
        "transformation"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/blow-your-mind-pt-09"
}