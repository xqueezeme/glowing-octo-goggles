{
    "title": "Meara and Oakley Ch. 04",
    "pages": [
        "The following is an original work of fiction. All characters belong to the author and any likenesses to real people or places is purely coincidental. Please do not copy or repost any part or portion of this work to any other website.\n\nEris Jade\n\n__________________________________\n\nI'm going to kill my sister. She doesn't know it yet, but I'm going to choke the life out of her and watch, gleefully, as the light fades from her eyes.\n\nI had hoped she wouldn't start running her mouth, however, it seemed she just couldn't wait to spread the news about me. All day I've been dodging pointed questions about Oakley from not only my mother and father, but our older brother as well.\n\nI know what they're thinking.\n\n*Meara is back on the market.*\n\nI am not.\n\n*She's finally come out of her self-imposed exile.*\n\nI haven't. If I can manage, I'll live there for the rest of my damn life.\n\n*Will there be grandchildren in the near future?*\n\nHoly fucking hell...\n\nEveryone is interested. Everyone has a question. A suggestion. A concern. I can't fucking stand it.\n\nIt's Saturday, the night of my parents' anniversary party, and everything goes off without a hitch. All things considered. The bar is almost unrecognizable, done up in shades of purple and glittering silver. The food is fantastic; the music is perfect and everyone who is expected to show, shows up. It's a spectacular event and even I, the jaded romantic, got a little misty-eyed watching my parents danced, swaying lazily to the music as they whispered and smiled adoringly at each other.\n\nEven with all the love and affection in the air, the only other thing my family seems interested in is me.\n\n\"It's a shame your boyfriend couldn't make it. It would have been nice to meet him.\"\n\nMy mother is being nonchalant which, we all know, is a cover. She's pushing the remnants of her dessert around her plate with a fork. She glances at me, and then at Ella, the traitor, who I've been mouthing death threats to all night.\n\n\"He's not my boyfriend,\" I reply. \"And, no decision was made that he would come. Your darling baby girl blind-sided him with an invitation without my prior knowledge or approval.\"\n\nElla smirks and I narrow my eyes at her. She lifts her glass of wine and pretends that I'm not telepathically cussing her out.\n\nOakley hadn't mentioned anything about the party, and I hadn't bothered to ask. Well, there hadn't been a moment to do so. I haven't spoken to him in two nights, not since he'd shown up with a busted lip and the glow of apprehension in his eyes. Not since he'd admitted that staying involved with me hadn't been a part of his plan.\n\nI hate emotions. I hate feelings. They fuck up everything. They plant ideas in your head that you only become aware of when it's much too late to, comfortably, do anything about. By then, you've invested enough time to warrant at least a week-long bender to purge yourself of the hell of a crumbling relationship.\n\nRelationship.\n\nMy father settles back in his chair, smoothing his thumb and forefinger over his pencil-thin mustache and goatee. He looks so handsome in his dark gray suit and matching tie. Mom is stunning in a cocktail dress of a lighter shade. They complement each other so well, both visually and in personality. Two halves of the same insane coin.\n\nI'd wanted that once, the type of love my mother and father had for one another. I'd tried and failed, painting an overlay of what I wanted on something that was anything but.\n\nMy heart kicks and knocks momentarily, wondering if I was doing exactly that with Oakley.\n\nMy father's next statement brings me out of my silent musings, however they are not what I want to hear.\n\n\"If he's not your boyfriend, then what is he doing spending the night at your house?\"\n\nLeave it to him to zero in on that part of the conversation.\n\nOur brother, Davis, chokes on his champagne.\n\n\"Dad, please, don't do it to yourself,\" he begs, shaking his head. Tears glisten in his chocolate-brown eyes as he simultaneously attempts to stop choking and hold in his laughter.\n\nDad's eyebrows shoot up to his hairline, and it's almost comical. \n\n\"What? I want to know. Why are you allowing some strange man to spend the night if he isn't your boyfriend?\"\n\nDavis's laughter only intensifies, and he presses his forehead to the table. He clutches his stomach and snorts loudly.\n\n\"Don't be na\u00efve, honey,\" Mom says, patting my dad's arm lightly. She winks at me and I wonder what I've done to deserve this fresh version of hell I've apparently stepped into.\n\nI decide not to indulge him any longer. Any of them. This night isn't about me, no matter how much they want to make it. I excuse myself from the table, from Davis' howling laughter, Dad's focused glare, Ella's satisfied smirk and mom's knowing glances. Bunch of fucking crazy people.\n\nI helping one of my bartender's restock when Evelyn sidles up to me. Her dark eyes glitter excitedly.\n\n\"So, I was outside on my smoke break and happened to see that gorgeous biker who threw Carter out on his ass pull up in a massive gray truck,\" she says, her words coming out in a rush. She smiling big. \n\nFor the second time in the past 30 minutes, my heart knocks and kicks inside my chest. \n\n\"Wait, what?\"\n\nEvelyn leans an elbow against the bar. \"He looks like he's dressed for the party.\" She pretends to swoon, her eyes rolling up into her head as she splays a thin hand over her stomach. \"God, that man is yummy.\"\n\nI'm not sure what to do. What to say. Evelyn and I are fairly good friends and, just as I've done with everyone else, I have not mentioned my connection with Oakley to her. His presence tonight is startling, to say the least. And, deep down, in the pit of my stomach, a soft shudder of excitement begins to bloom. \n\nEvelyn is watching my face, no doubt gauging my reaction and the warring emotions running the gamut through my features. After a moment, she chuckles and straightens up. \n\n\"You sly dog,\" she says, smirking as she saunters away from me.\n\nA beat passes before I make my way around the bar and head toward the front door. \n\nOutside the night air is cool and clean. The parking lot isn't as packed as it normally is on a Saturday night, friends and family the only ones invited to this particular party, and I have no problem spotting Oakley's truck at the edge of the lot. He's leaning against the front grill, his head bowed as he stares at the ground. \n\nI move toward him, the hollow click of my heels against the pavement bringing his attention up to me.\n\nHe looks incredible tonight, dressed simply in a long-sleeved button down, dark blue jeans and clean black boots. His hair is tied back from his now clean-shaven face, and his watchful eyes seem to shine in the light cast over us by the lampposts ringing the parking lot.\n\nI come to a stop in front of him, thinking that perhaps I should hug him, but I'm not so sure. I'm surprised he's here. And a small part of me, the part that has been trying to tamp down the rising hope, is just a little pleased.\n\n\"Well, don't you look pretty,\" I say, teasingly. \n\nA small smile ticks at one corner of his mouth, and I can see that the cut there has healed fairly well. The bruising is faint, almost completely gone.\n\nHis eyes move over me.\n\n\"You're wearing a dress.\"\n\nI shrug, smoothing my palms over my hips. \n\n\"It's a special occasion. Thought I'd go all out, ya know?\"\n\nHe pushes away from the truck, silent for a long moment as he stares down at me. Then, \"You look beautiful.\" \n\nThere's appreciation in his voice, and a bit of awe perhaps, and I'm fairly certain no one has ever looked at me in such a way. \n\nHis gaze lingers on my bare legs and the lavender pumps adorning my feet. They match my lavender sheath dress, which Ella swore up and down when we picked out our respective outfits brought out the gold undertones in my otherwise deep chestnut skin.\n\nWhen his gaze comes back to my face, I can see a spark of desire in his eyes and I swallow deeply.\n\nHe steps closer and I notice he's wearing cologne. It's a dark, woodsy scent which invades my brain and has me wanting to bury my face in the warm skin at the hollow of his throat.\n\n\"This is all pretty new to me, Meara,\" he says in a low voice. \"Not sure what I'm supposed to do.\"\n\nThere's that something in his voice again, the same something that had been there as we lay in the darkness in my bedroom. It's faint, laced with uncertainty and completely matches my own current thought processes.\n\nEven so, I'm warmed by his admission, and the knowledge that maybe he does think of me as something more than someone to keep his dick warm. I place my hand on his stomach, feeling the flutter of muscle there, and try not to have dirty thoughts about him.\n\n\"I'm right there with you, Oakley, if we're being completely honest.\"\n\nHe smiles his barely there smile and brushes the backs of his knuckles across the front of my hip. I'm sure the action isn't meant to, but his touch sets my cunt to throbbing impatiently.\n\nI clear my throat. \"Are you hungry? Plenty of food left over.\"\n\nHe is silent a moment, then he shakes his head.\n\nI shift my hand higher and splay it over his chest, feeling the throb of his heart beating beneath my palm. \n\n\"I feel the need to warn you. Ella told me parents about you.\"\n\n\"Have you threatened to kill her?\"\n\nI smile and laugh. \"As many times as I could fit into every conversation. I've also thrown in some crude hand gestures for good measure.\"\n\nI expect him to laugh in return. Instead, his hand closes over mine and he stops the retreat I've started.\n\n\"If this is going to cause a problem for you, I can go.\"\n\nThere's more to his statement, more that's not being said, and I'm reminded of just how little I know about this man. They've already asked questions to which I haven't had answers, even if I'd had any inclination to do so. We know nothing of each other, little more than the way our bodies fit together. His presence means that he wants to know more. Obviously.\n\nI'm grateful to him for making the effort. Touched. Pleased. \n\nNervous as shit, not only because of the fact that my family will no doubt embarrass the hell out of me, but more because we're now opening ourselves up to more. To the possibilities of ...well, everything. It's fucking terrifying. And, somehow, just a bit heartening.\n\nI link my fingers and tug him along with me. \"Come on.\"\n\nWith fingers entwined we head back into the bar. As expected, all eyes are on us as we thread through crowd and make our way to the head table. \n\nFrom the corner of my eye, I can see Evelyn grinning like an idiot.\n\nMy family, if nothing else, is unfailingly polite and gracious. So much so that I often get asked if I'm adopted. \n\nThey stand as we approach, all smiles and wide eyes. Davis elbows me slyly when we come to a stop beside him.\n\nI ignore him and proceed to make introductions. \n\n\"Oakley, these are my parents - Annette and Avery Kincaide.\"\n\nThey each shake his hand and thank him for coming, immediately offer him food, which he, again, declines. \n\n\"This is my older brother, Davis.\"\n\n\"The lawyer,\" Oakley says. \n\nHe shakes my brother's hand in that manly way that men do, and I try not to roll my eyes.\n\n\"Nice to meet you, man,\" Davis says, a complete contrast to the laughing, sputtering mess he was 10 minutes before. He's eyeing Oakley up and down, taking his measure. Oakley sees it and doesn't seem to mind. \n\nHe nods. \"Same here.\"\n\nAt last, I turn to my sister, giving her the side-eye, and she pipes up before I can say anything more. She reaches across me to take Oakley's hand in her own. \n\n\"Oakley! It's so good to see you again. We weren't sure if you were going to make it!\"\n\nHe smiles warmly at her. \n\n\"Thanks for the invite.\"\n\nThere is a moment of awkwardness, during which my father appraises Oakley, and Davis jabs me in the ribs with his elbow once more. I reach over and pinch a bit of the flesh at his hip between two fingers, satisfied with the muffled yelp it elicits from him.\n\n\"Ok, so can we sit now?\" I ask.\n\nMy mother shakes her head at my abruptness and admonishes me for pinching Davis. Some things never change.\n\nI'm surprised when Oakley pulls out my chair and I stare at him for a long moment.\n\nI can see the humor in his eyes. His lips turn up slightly at the corners. A tiny smile only I can see. \n\nAnother beat passes and I sit. He turns, grabs an empty chair behind us and settles in next to me.\n\n\"What a gentleman,\" my mother comments approvingly. She smiles at Oakley, sitting down in the seat my father has pulled out for her.\n\n\"Ain't he just,\" I say, casting a sidelong glance in Oakley's direction.\n\nHe winks at me! Oakley actually winks at me and I bite down on the bark of laughter that threatens to spill past my lips. This man is suddenly so full of surprises. \n\n\"So, Oakley, how was your day?\"\n\nThis from Evelyn, Queen Shit Starter.\n\n\"Busy,\" Oakley replies. \"Though nothing unmanageable.\"\n\n\"What is it you do, young man?\" It's my father's turn now. He's settled back in his seat with his arms folded over his stomach, dark eyes intent on Oakley. \n\nOakley appears unfazed by the scrutiny and what is quickly becoming an interrogation. His hand finds my thigh under the table and my body unconsciously shifts towards him. \n\n\"I own a motorcycle repair shop in Denton. Goin' on 10 years now. Been doin' a lot of custom work over the last few, so business has been steady.\"\n\nThis I certainly did not know. But, it suits him. \n\n\"Ah, a business owner.\" My mother nods, and there appears to be a bit of relief in her gaze. \n\nI'm sure this fact pleases both my parents, considering my ex was, and is, nothing less than a financial leech, always on the lookout for the next get-rich-quick scheme. \n\nI can see Davis eyeing Oakley. \n\n\"How'd you meet my sister?\"\n\nHe glances at me and I realize I hadn't even considered a proper response to this particular question. I open my mouth to speak but Ella beats me to it.\n\n\"He saved her the night Carter Ludlow busted up her car.\"\n\nHer voice sounds a bit too airy for my liking but I'm grateful that that's all she says. She offers me a soft, knowing smile and I want to kick her under the table. Oakley's heavy hand squeezes my thigh and I turn back to him.\n\n\"I just gave her a ride home, is all,\" he says. \n\n\"Thank you very much for making sure my baby got home safely,\" my mother adds, as sweet and gracious as ever. \n\n\"It was my pleasure,\" he assures her and the smile he casts my way says he really means it. \n\nConversation flows surprisingly easily from there, and I don't think that anyone, save Davis, the lawyer, notices how Oakley manages to steer each topic away himself, instead using it as an opportunity to get to know the others at the table He makes it seem like genuine interest on his part. I am, admittedly, curious about that, but I'm also aware of how overwhelming this moment is on the verge of becoming. For both of us. So I merely sit and listen. Eventually gain his attention and ask him to dance, if for no other reason to catch our breath again. \n\nIt's easier, a bit more comfortable, away from the prying eyes of my family. Oakley has rhythm and is surprisingly graceful. We sway from side to side in a small, easy rotation. He holds my right hand to his chest and, since I'm so much shorter than he is, I have to band my arm around his back. His right hand fits comfortably against my lower back, presses me close to him, his fingertips lightly grazing the top of my ass. \n\nWe are quiet for a long time and I can feel something soft and warm settling inside, what had been anxiety and nerves slowly fading away. \n\n\"Was your dress expensive?\" \n\nHis rumbling voice pulls me from my thoughts, and I look up at him, craning my neck to meet his gaze. \n\n\"Not very. Why do you ask?\"\n\n\"Because you look fucking amazing right now, and I'm probably going to wreck it later.\"\n\nHe says it with such simplicity, such certainty, nevermind that a few of my family members are well within earshot, that I stumble a step.\n\nHe smiles and effortlessly rights me, pulling me into a slow turn. \n\n\"Well, I'll be damned... You're blushing.\" \n\nI laugh and bury my face in his shirt to muffle the sound. His scent is overwhelming, distracting. This feels familiar. Good. Normal.\n\n\"Good grief, Oakley,\" I manage, shaking my head..\n\nHe keeps going, and I'm sure he's enjoying this. \n\n\"The shoes stay on.\" His voice vibrates through me, causing my nipples to tighten behind the smooth fabric of my bra. His hand flexes at my back. \"I'm imagining your legs up in the air, those heels bouncing against my shoulders while I fuck you.\"\n\nMy knees give out and, if he hadn't been holding me so tightly, I'm sure I'd be sprawled out on the floor. \n\nIt's amazing how good he is at winding me up."
    ],
    "authorname": "Erisjade16",
    "tags": [
        "interracial romance",
        "interracial erotica",
        "love",
        "romance",
        "erotica",
        "black woman",
        "white man",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/meara-and-oakley-ch-04"
}