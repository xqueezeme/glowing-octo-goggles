{
    "title": "Three Square Meals Ch. 060",
    "pages": [
        "The shadowy figure crawled out of the sarcophagus, and took a deep breath before exhaling fully, efficiently clearing its lungs of the musty tasting air from cryostasis. It then performed a complex set of stretches, limbering up its body and preparing for action. It was a routine it had performed four-hundred-and-thirty-two times before, starting each mission in exactly the same way. Collecting the tools of its trade from the racks on the wall, the black clad assassin sheathed them about its person, then padded over to the pilot's chair in the cockpit and sank into the seat. \n\nThe console appeared inert and seemingly lifeless, but the assassin reached for a hidden button on the black surface, feeling for the familiar curves by touch alone. Pressing the button, an insubstantial holographic image suddenly appeared, floating above the console as it took shape, and casting a blue light across the darkened cockpit. After a second of static, the image coalesced into the familiar face of Master Amatsu Mikaboshi, sitting regally in his gothic throne.\n\nHe leaned forward, and smiling wickedly he said, \"If you are viewing this recording, Shinatobe, the time of reckoning for my elusive quarry is at hand.\" Reaching out to his side, he pressed a button on the armrest of his throne, and a second image appeared, showing a man with pointed ears. \"This is your target. Further information has been included in your mission debrief. You are to execute mission classification two-one-seven. \"\n\nThe recording ended as abruptly as it had started, and although this was not a live feed, the assassin replied by rote in an almost indecipherable murmur, \"Hai, Idaina-sha.\"\n\nReaching for a tiny data-jack port on the console, Shinatobe slid back a panel from their wrist, uncovering wrist mounted jack points. After hooking them up, there was an almost inaudible high pitched whine as the debrief data began to download. Eyes flickering from side to side, the assassin read through the target analysis and profile of John Blake and his crew.\n\nShinatobe rose from the Pilot's chair, then glided over to the airlock door in the starboard side of the shuttle. The tiny ship was nestled up against the side of the target's vessel, and the adjoining airlock could be seen through the porthole in the door. The assassin reached up to the secured container by the side of the airlock, and entered a complex code into the unlit keypad on the side of the box. There was a soft click, and the front of the locked box swung open, revealing the precious treasure within.\n\nReaching out for the object, Shinatobe gently peeled the silky material from the stand, then donned the genetic synthi-print glove over a Nanoweave-shrouded hand. Once the glove was snugly in place, the assassin reached up to activate the airlock door to the shuttle, pressing the button that would open it. The door parted down the middle with an ominous hiss, then smoothly separated, revealing the outer airlock door of the Invictus. \n\nThe portal barring the way into the Invictus was a Berrings-class model-twelve Airlock; a standard fit in Terran Federation cruisers of this age. Reaching into its pocket, the shadowy intruder retrieved a small black box and placed it above the top right side of the airlock. After a two second wait the light turned green, and with the signal jammer now in place, the airlock would no longer be able to send an alert to the Bridge.\n\nShinatobe placed the hand with the synthi-print glove onto the DNA reader by the side of this secure portal, holding it carefully in place over the built-in scanner. A light swept across the scanner, then after only a split-second delay it flashed green, as the DNA was matched with an entry on the list of authorised users.\n\n\"Welcome home, John,\" a throaty, seductive voice purred, sounding absolutely delighted at his return.\n\nShinatobe flinched, hands instantly reaching for weapons, before realising it was just an automated message. Relaxing once more, the assassin watched the inner airlock door spiral open smoothly. Activating the Nanoweave mesh built into its combat suit, the assassin disappeared from view, all except for the hand with the synthi-print glove. \n\nAfter stepping through the inner airlock door into the Invictus, Shinatobe pressed that same hand to the DNA reader inside the ship. The door spiralled shut once more, leaving no trace of the intrusion, and the assassin peeled off the glove, then folded it carefully before tucking it into a discreet pocket of their combat suit.\n\nNow completely invisible to the naked eye, the deadly invader was free to stalk down the corridor, and begin preparations for the strike. \n\n***\n\n\"You may enter,\" Edraele called out, answering the polite knock on the door.\n\n\"The Extraction teams have begun to arrive, Matriach,\" Almari said, as she walked into the Valaden Matriarch's study, before bowing respectfully. \"We settled our guests in separate suites as you requested.\"\n\nEdraele gave her a grateful smile, and rose from her seat as she replied, \"Excellent, Almari, I had better go and introduce myself.\" She paused, eyeing the lithe young woman before her, and she added with a knowing smile, \"I'm well aware that you, Luna, and Ilyana like to gossip amongst yourselves. I'm quite sure Luna told you what happened a few hours ago?\"\n\nAlmari blushed, and nodded briefly while looking down to avoid further embarrassment. Edraele glided over to her, and reached out to gently lift the woman's chin with her hand. When Almari's cobalt-blue eyes flicked up to gaze into her own, she said, \"Then let's have no more of this 'Matriarch' business between us. Please feel free to call me Edraele. We've known each other for many years now, but I hope that with everything that's happened, we can now become friends.\"\n\nA warm smile spread across Almari's face, and she said, \"I'd really like that. Thank you, Edraele.\"\n\n\"So would I,\" Edraele replied, smiling back at her. She glanced towards the door, and added, \"Regretfully, business calls, so would you guide me to the first of our guests, please.\"\n\n\"Of course, Matri-... I mean, Edraele,\" Almari replied with a self-conscious smile.\n\nThey left Edraele's study, and strolled through the plush lounge before exiting the suite, passing the guards that snapped to attention outside the entrance. Walking along at a relaxed pace, Edraele could feel the slight nervousness from Almari over their empathic bond, the assassin still not fully relaxed in her presence. The guest quarters were some distance from her own private suite, so they strolled along together in companionable silence for a couple of minutes.\n\nEventually Edraele turned towards the younger woman, and asked, \"How are you coping with the changes since John turned our lives upside down?\"\n\nAlmari was a little hesitant as she glanced at the older woman, and admitted, \"It's still taking a little getting used to.\"\n\nLeaning in to her companion, Edraele whispered conspiratorially, \"I really was quite the tyrant, wasn't I?\"\n\nThe assassin laughed lightly, relaxing as she replied, \"Let's just say I was always, -cautious-, with how I spoke or behaved around you.\"\n\n\"I'm sorry, that must have been awful,\" Edraele said sympathetically. \n\nThey reached an intersection in the corridor, and paused a moment to let a small group of naval crewwomen walk past. With the fleet-wide refit still ongoing, Genthalas Shipyard was heaving with personnel. The group of young women looked shocked when they spotted Edraele, and they stared at her for a second before bowing respectfully and then hurrying out the way. Almari watched them closely, constantly on guard for any potential danger, but the tension left her body as the group hurried onwards, eager to be away from the dreaded Valaden Matriarch.\n\nEdraele and Almari stopped and watched them rush off down the corridor, the young women chattering excitedly amongst themselves when they were safely out of earshot. When Edraele let out a melancholy sigh, Almari darted a look in her direction, and saw a sad look of regret on the Matriarch's face.\n\nAlmari paused, still unsure of the limits to the boundaries between them, before she said softly, \"You have quite the reputation for your volatile and extremely deadly temper. That was in the past though, and it really doesn't take long to see that you're not like that any longer.\"\n\n\"I hope so,\" Edraele said wistfully. \"It's horrible to see my people running in fear from me.\"\n\nAfter glancing around to make sure they weren't overheard, Almari turned to Edraele with a reverent gleam in her eyes, and said, \"They'll come around. The changes that John made to you are quite astounding.\" She blushed a little as she added, \"I really like the new you.\"\n\nEdraele smiled at Almari affectionately, and said, \"That was very kind of you to say, thank you Almari.\" \n\nThey continued walking towards their destination, and Edraele glanced at the assassin keeping pace at her side, and asked, \"What about the other recent changes? The physical ones? Have they been unsettling?\"\n\nAlmari laughed as she held out her arms, looking at the perfectly smooth unblemished skin, and she replied, \"I must admit, it's been a little strange not to see my old scars any more. I had some of them for several decades, and now it feels like my past has been scrubbed clean. It's quite liberating!\"\n\nThey had arrived outside the first of the guest suites, and they stopped by the sealed door in the deserted corridor. Edraele smiled at the younger woman, and reached out with her slender hand towards Almari, but her fingers stopped inches away from the bodyguard's torso. \"May I?\" she enquired politely.\n\nAlmari immediately replied, \"Of course, Matr-.\" She smiled, and continued, \"Sorry. Yes, that's fine, go ahead.\"\n\nEdraele smoothed her hand over the firm muscles in Almari's lower belly, causing the younger woman to gasp at her touch. Looking into her eyes, Edraele asked quietly, \"How about the other physical changes? The life-changing ones?\"\n\nMeeting her gaze again, Almari's sharp blue eyes lost some of their focus as she replied wistfully, \"Oh, Edraele, I still can't believe he did that for me. It feels like a dream...\"\n\nEdraele smiled as she said, \"He's a good man, and you're a lovely girl. I think you'll make a wonderful mother.\"\n\nAlmari let out a happy sigh, and then stepped forward to hug Edraele, forgetting about her previous reservations in her state of bliss. Edraele stroked the girl's back as they embraced each other, and after a long moment, Almari stepped back and studied the older woman's face. \"You're really not the same person at all. You're so kind and caring now,\" she marvelled.\n\n\"Thank you, Almari,\" Edraele replied, but her expression was sombre as she added, \"I've got a lot to make up for.\"\n\nAlmari gave her a sympathetic smile, then looked towards the door into the guest suite, and said, \"The first of your guests is Kali Loreleth.\"\n\n\"I had better not keep her waiting any longer,\" Edraele replied, then opened the door to the quarters and stepped inside. \n\nThe youngest daughter of House Loraleth was confused and scared, sitting in an armchair in the cosy lounge of the guest suite. She had been darting nervous glances at the two assassins that were standing silently in the room, who waited with seemingly infinite patience for their Matriarch to arrive. When Kali heard the door to the room open with a quiet swish, she leapt to her feet, her face a mask of dread as Edraele swept regally into the room.\n\n\"What are you going to do to me?!\" she exclaimed, verging on the edge of panic.\n\nEdraele smiled at her, and replied in a soothing voice, \"Be at ease, my dear. I have no wish to harm you, I promise.\" She looked across the room at the two House Loraleth assassins she had subverted, who were clearly unsettling the girl, and she added, \"Avelissa, Renaya, it's wonderful to see you both, but would you give me a moment to speak with Kali alone, please? Almari here will show you to some comfortable quarters, and help you settle in.\"\n\nAlmari cast a wary eye over the last remaining member of the House Loraleth nobility, and said, \"I'm not sure that's wise, Matriarch.\"\n\nThe House Valaden Matriarch forgave her the momentary lapse, as her bodyguard automatically slipped into using the deferential tone she had used with her for years. \"It's quite alright, Almari,\" she said, studying the young woman standing on the other side of the lounge. \"Kali's a sensible girl, and we're just going to have a nice chat.\"\n\nNodding obediently, Almari waited as Avelissa and Renaya gave their respects to Edraele, and the group of three assassins vacated the room. That left Kali alone with Edraele, and the young woman stared at her fearfully, unsure exactly what the devilish House Valaden Matriarch had in store for her.\n\n\"Please be seated, Kali,\" Edraele said, as she glided over to join her. \n\nHer voice was warm and pleasant, but it rang with the calm confidence of someone who had been giving orders for nearly a century and a half, and who expected them to be obeyed. Kali had spent all of her thirty-five years having orders barked at her by her mother and three elder sisters, and despite her racing heartbeat, she responded instinctively, taking her seat. She watched with trepidation as Edraele approached, and her eyes opened wide as the stunningly beautiful woman stopped right next to her chair, then sank to her knees beside her.\n\nA dark shadow of regret passed over Edraele's face, and she gazed into the younger woman's eyes as she said, \"I'm truly sorry for what I've done to your family, but you are now the last surviving member of House Loraleth. Your mother and sisters are dead.\"\n\nKali gaped in shock, stunned into silence as she tried to process this information. She stared mutely at the mournful woman kneeling at her side, her numbed brain in denial.\n\nEdraele was studying her carefully, watching her face to look for a reaction. She expected to see shock, but when nothing else was forthcoming, she said softly, \"It was instant, and they didn't suffer, although I'm sure that offers little consolation.\"\n\nKali's eyes widened in fear, and she gasped, \"So now all you need to do is kill me too, and House Loraleth will be wiped out! You'll be able to annex our entire House unopposed!\"\n\nLooking her directly in the eye, Edraele replied, \"Yes, that is true, I certainly could, but as I said before, I have absolutely no intention of harming you.\" She paused for a moment, before she added, \"Instead I wish to offer you an alliance, Matriarch Kali Loraleth.\"\n\nIf Kali thought she had been shocked before, it was nothing compared to this new bombshell from the House Valaden Matriarch. She gaped at Edraele, and stammered, \"B-b-but why? You can just take what you need, why even bother with me?\"\n\nEdraele let out a heavy sigh as she replied, \"You'll probably find this very hard to believe, but I really didn't want things to pan out this way. I would have liked to have offered an alliance to your mother, Shaedra, but she and I have been fighting for nearly ninety years. You must have known how much she hated me, and your elder sisters had developed much the same mindset.\"\n\nThe young Maliri woman nodded tentatively, admitting with more than a little trepidation, \"Yes, mother loathed you. As her greatest rival, she was desperate to find some way of bringing you down.\"\n\nEdraele found Kali to be guileless, and with a refreshing frankness to her, so she asked hopefully, \"But you don't feel that way?\"\n\nKali blinked in surprise, and she stared at the House Valaden Matriarch, unsure how to respond. Her mother had always said that Edraele was a vile, evil witch, and she had just assumed it was a simple insult. However, now she was in her presence for the first time, she could feel there was something special about this entrancingly beautiful noblewoman. It was shocking to see her flouting all sense of decorum by growing her hair so long, but Kali couldn't deny that the long glossy white hair was extremely becoming. Despite all that, she knew what was expected of her as a House Loraleth Noble, and replied, \"Well, you did just kill my mother and three sisters...\"\n\nEdraele gave her a knowing look, and said, \"Believe it or not, I was the youngest of six sisters. If you were tormented by them, like I was by my elder siblings, I'm sure at least a part of you isn't completely overwhelmed by grief at their deaths.\"\n\nA shadow of guilt passed over the young woman's face, but she didn't look away, and instead gazed at the woman kneeling unthreateningly before her. Although she'd spent her life being told she should hate the House Valaden Matriarch, in truth she had never cared much for all the scheming and political games. As the youngest daughter, her mother had largely ignored her, and she'd been left to pursue her own path, taking an interest in art and literature. She thought about what Edraele had just said, recalling the years of abuse she'd suffered at her mother's and sisters' hands, and she was forced to admit to herself that she didn't regret their deaths. In fact it came as somewhat of a relief.\n\nShe nodded slowly, and admitted, \"Yes, you're right, Matriarch. It's true, I hated my sisters. My mother never cared for me either, and Arbane was always her favourite.\" After pausing to gather her courage, she continued, \"You didn't answer my question before though. Why would you even bother with an alliance when you can just take what you want?\"\n\nEdraele smiled at her, and replied, \"Please, call me Edraele. Believe it or not, I've had a dramatic change of heart recently, and I hate the fighting between the Houses.\" The fervent gleam of a true believer appeared in her angular purple eyes, and she continued, \"I wish to unite all the Noble families, and forge a grand alliance between all the Houses. Together we can stop the in-fighting between the Houses, end the torture and the killings, and usher in a glorious new era for the Maliri!\"\n\nKali felt herself drawn in by Edraele's speech, and she felt a brief surge of hope in her heart at the wonderful vision the woman was painting. Reality suddenly caught up with her, and she said ruefully, \"The other Houses will never agree to this.\"\n\nReaching out to place her slender hands on top of Kali's, Edraele gazed into her eyes. There was an earnest expression on her face as she said, \"All I care about right at this moment is you, Kali Loraleth. Would you like to work with me to make this vision of the future a reality?\"\n\nThe young Loraleth Matriarch was spellbound by Edraele's passionate intensity, and she blinked twice before she nodded, then replied with conviction, \"You have my word, Edraele. I'll be your faithful ally, and work with you to achieve this goal.\"\n\nEdraele looked overjoyed, and the sense of relief radiating from her was palpable. She beamed a sparkling smile at the younger woman, and said, \"I promise you'll never regret this decision, Kali. We have a bright future ahead of us!\"\n\nKali smiled back at Edraele, sharing a similar sense of elation. Suddenly feeling much more at ease with the Valaden Matriarch than she ever had with her own mother, Kali had another moment of courage, and asked softly, \"Edraele, may I ask you a personal question?\"\n\n\"Of course, Kali,\" Edraele replied with a disarming smile. \"I'd like to think that this is the start of a wonderful friendship, so please feel free to ask me anything.\"\n\nLeaning forward a little, Kali couldn't help herself, and she reached out to gently brush her fingers through Edraele's flowing snowy-white locks that tumbled around her shoulders. \"You look so radiantly beautiful,\" she murmured, quite entranced. \"How is it that you and Almari have white hair? I've never heard of such a thing before.\"\n\nEdraele's eyes sparkled, and she replied, \"Would you like to look the same way too?\"",
        "Kali bit her bee-stung bottom lip with excitement, and nodded eagerly.\n\nSmiling at her indulgently, Edraele said, \"I'm sure I'll be able to arrange that for you.\" Her voice was full of enthusiasm as she continued, \"We still have lots more to discuss though.\"\n\n\"What else would you like to talk about? Kali replied, listening attentively.\n\nEdraele leaned forward, and asked her breathlessly, \"Have you ever heard the story about the Mael'nerak?\"\n\n***\n\nJohn slowly opened his eyes, then did his best to stretch, what with Rachel and Dana cuddled up next to him. He grinned as he remembered the previous night's victory celebrations, and thanked whatever gods had decided to bless him with such willing and exceedingly naughty girls. Settling back in bed, the brunette and the redhead snuggled up closer to him in their sleep, and he wrapped his arms around them protectively.\n\nA faint chime echoed through the room, and he smiled when he recognised Faye's customised internal comm ringtone. \"Go ahead, Faye,\" he whispered, knowing she'd be able to hear him with the sensitive audio mics in the bedroom. \"Everything alright this morning?\"\n\n\"Morning, John!\" she replied, sounding bright as a button. \"There were no problems at all during the Watch last night, it was all just civilian traffic on the long-range sensors. We're deep in Terran Federation territory, so it should be safe, right?\"\n\nHe laughed quietly, and replied, \"Yeah, you'd think so, but we've been caught out before. One of Nexus' rogue cruisers caught us napping once, but that was well before your time.\" He lifted up his head to take a peek at the ship's chronometer, and blinked in surprise to see it was nearly eleven o'clock.\n\nFaye was watching him on the cam-feed, and she chirped, \"It was nearly four in the morning before you went to sleep...\" After coughing politely, she continued, \"I thought you'd all appreciate the lie-in after all the action yesterday.\"\n\nJohn sank back against his pillow and said, \"That was very thoughtful of you, thanks Faye.\"\n\n\"You're welcome,\" she replied sounding very happy. \"Oh! I almost forgot. Admiral Devereux called last night, and wanted to speak with you. When I told her you were sleeping, she said not to disturb you, and left a message instead.\"\n\nWith a knowing smile on his face, John asked, \"Did you honestly nearly forget?\"\n\nFaye giggled, and replied, \"Aww, you caught me! No, of course not, but it was a new speech affectation I was trying out, to make me seem more like an organic lifeform.\" She paused, and sounded a little disappointed as she asked, \"Didn't I get it right?\"\n\n\"It was very convincing, and you pulled it off perfectly,\" John replied encouragingly.\n\nHe could hear the confusion in her voice when she asked, \"How did you realise then?\"\n\nHe laughed as he replied, \"You're far too reliable a crewmember to suddenly start forgetting things. Besides, I don't think you -can- forget can you?\"\n\nShe paused as she thought it over, until she finally replied, \"No, not really. Not unless you count a hardware failure on a data archive, or perhaps some memory data becoming corrupted.\" \n\nDespite their best efforts to keep quiet, the muted conversation had started to disturb the girls' slumber. Alyssa's tousled blonde mane appeared above Calara's olive-toned shoulder, and she blew him a kiss before nudging the other girls awake with a gentle telepathic wake up call. \n\n*John's awake now girls,* she murmured to them, knowing they all liked to be up and around as soon as he was.\n\nJohn was treated to a wonderful display of stretching by the nubile, bare-chested girls, and he marvelled at their stubborn refusal to let gravity do its work. He knew full well that they were only putting on a show for his benefit and the teasing smiles confirmed it a moment later.\n\n\"The message?\" Faye prompted him with a cheeky giggle. \n\nJohn coughed and replied with a smile, \"Let's hear what the good Admiral has to say for herself.\"\n\nThere was a crackle of light at the end of the bed, and a holographic image of the brown-haired, middle-aged woman appeared before them. The girls quickly fanned out so they could all comfortably see, while John sat up with his back against the headboard. \n\nAdmiral Lynette Devereux looked slightly flustered when Faye began the vid-feed playback, and she said, \"Hello John, I trust you slept well.\" She grew more perplexed as she continued, \"I just had a fascinating conversation with your Watch Commander. She's a very bold choice considering everything we've just been through with Nexus, but I suppose I have to trust your judgement.\"\n\n\"Pause it a moment, would you, Faye,\" John requested. He glanced up at one of the hidden cameras in the bedroom, and asked, \"What did you two talk about exactly?\"\n\nFaye sounded far too innocent, as she replied, \"Not much! We just said 'hey', really.\"\n\nJohn raised an eyebrow, and asked in an even tone, \"Are you sure?\"\n\n\"Well we might have had a little chat about me being an unshackled AI, and how I'm allowed to roam freely through the Invictus' digital network. The Admiral did seem to start getting a bit worried at that point,\" Faye explained with a sigh.\n\n\"I'll bet she did. Alright, thanks for the honesty, Faye,\" John said with a smile. \"Can you continue the message, please.\"\n\nDevereux seemed to shake off her concerns for a moment, and her face grew sombre as she said, \"I tried pulling some strings directly, but back here in the Terra Sector I'm outside the security lockdown zone in the Dragon March. Everyone I tried to contact who might have been able to assist you, is involved in the big push, and incommunicado at the moment.\" She looked morose as she added, \"I feel like I've failed you, John. I'm very sorry, but you're going to have to come up with a way of speaking to Fleet Admiral Buckingham on your own.\"\n\nAlyssa glanced at John, and asked, \"How bad is this?\"\n\nHe shrugged helplessly, and said, \"I was a Marine Commander; me and my men stormed ships and shot people. There was a bit more to it than that, but I'm hopelessly out of my depth in the kind of political games that the Admiralty likes to play.\"\n\nThe girls looked downhearted, unable to offer any advice that would be helpful. All that is, except for Irillith. \n\nShe had a sly smile on her face as she said, \"I've spent all of my adult life playing 'The Noble Dance', and I'll help you however I can. Of course, you also have my mother at your disposal, and she's been plotting and scheming for nearly a century and a half. Edraele would make the Admiralty's games look like toddlers throwing toys at each other in a sandpit.\"\n\nJohn laughed at her metaphor, and then thought to his Maliri Matriarch, *Are you there Edraele? Have you been listening to this conversation?*\n\n*My lovely daughter is entirely correct, of course,* Edraele informed him. *I'd love to help you, although I don't enjoy the darker side of these games any longer.*\n\nFeeling a surge of relief, John said, *I'll place myself in your lovely hands then. Thank you, Edraele, this means a lot.* He could feel her delight at being able to help him over their bond, and he smiled, glad to be able to make her feel that happy, even if it was inadvertent.\n\nFaye had paused the message during the discussion, with Lynette Devereux's face frozen in a rueful frown. When John looked up at the camera and smiled, the attentive sprite started the video up again.\n\nAdmiral Devereux's expression brightened, and she said, \"There is one thing that I can do for you, John. I hereby promote you to Rear Admiral, and for Calara's incredible efforts, I am raising her to Commander. Please don't think that your new rank is purely to expedite your mission into the Dragon March, although it will help you get a hearing. These promotions are well earned, and the Terran Federation owes you both a huge debt.\" \n\nThe Admiral continued speaking, but whatever she was saying was drowned out by the jubilant cheers and whoops from the girls sitting around the bed. John and Calara both looked as stunned as each other, and stared at each other in shock.\n\nCalara muttered in disbelief, \"She just promoted me two ranks! I outrank all my brothers now!\"\n\nJohn snapped himself out of his daze, and gave her a proud smile as he said, \"You've more than earned it, Calara. The amount you've achieved in the last several months is truly astounding.\"\n\nShe gazed at him, and her big brown eyes shone with happiness. She bit her lip, and said, \"My mother is going to flip out when she finds out I'm dating a Rear Admiral now!\" \n\nThe Latina bounded across the bed, then launched herself into his arms, and they hugged each other fiercely. The girls gathered around, joining them in a group hug, while offering them both hearty congratulations. John could feel Alyssa doing her best to stifle her laughter over the telepathic link, and when he glanced her way, her lips were clamped closed in a herculean effort not to ruin the moment. As nice as it was to see her looking so amused, he couldn't figure out what she had found so funny.\n\n\"What's tickled you so much?\" he asked her curiously.\n\n\"Rear Admiral!\" she blurted out. \"Come on! That can't be a real rank?!\"\n\nHe grinned at her as he replied, \"It is, I promise! I'm just one rank below Charles now.\"\n\nAlyssa couldn't hold it in any more, and she guffawed with laughter, as she gasped, \"Seriously, Devereux couldn't have given you a more appropriate rank!\"\n\nDana smirked, and said, \"The girl does have a point. You are quite fond of a firm bit of rump.\"\n\nThe girls joined in the laughter, and John raised his hands, and said, \"Alright, I freely admit, you're all blessed with spectacular derrieres.\"\n\nFaye coughed politely, and said, \"Sorry to interrupt, but there's a bit more to the message.\"\n\nJohn smiled as he said, \"No problem, Faye. Go ahead, let's hear the end.\"\n\n\"Sure thing!\" Faye replied enthusiastically. She had already rewound the message to the place they were at before all the impromptu celebrations. When everyone had settled down and were looking at the vid-screen again, she continued the playback of the message.\n\nAdmiral Devereux paused briefly, then smiled as she continued, \"The rest of your crew are civilians, so I can't exactly promote them as a reward. I would consider it a great honour if you would all attend another award ceremony, as I'd like to present you each with a medal to honour your valiant defence of Terra.\"\n\nThere were more raucous cheers again as soon as everyone heard this, with Jade, Dana, and even Rachel looking excited at the prospect of another award ceremony. Irillith stayed quiet however, and was studying the frozen image of the Admiral with newfound respect. \n\nJohn spotted her quiet introspection, and misreading her silence, he asked, \"Worried about revealing the Maliri secret, Irillith?\"\n\nShe turned his way, and shook her head, before pausing, and saying, \"Well yes, I suppose. That's not what I was thinking about though, not at that moment.\"\n\n\"What then?\" he asked her curiously.\n\nShe had a wry smile on her face as she said with grudging admiration, \"Devereux is a sly old fox. However this turns out, she stands to gain.\"\n\nJohn frowned, and asked, \"Really? How do you work that out?\"\n\nIrillith leaned forward, and her angular violet eyes sparkled as she began to explain, \"Alright, let's look at all the scenarios: If we manage to stop Norwood and his band of traitors, she gets to say she was heavily involved in unmasking them, which will do her career no end of good. Then she gets to milk us for maximum PR with the promotions and medals at the award ceremony, and she can claim responsibility for any improvement in approval ratings for Terran Federation High Command.\n\nIf Buckingham gets so offended at the implication of treason for one of his officers that he has John kicked out of the Terran Federation military, she isn't actually here with us, so her hands are effectively clean. She could explain away the promotions as another PR campaign, and while we get canned, she can avoid any repercussions. Then whatever happens with Norwood, she won't lose political capital either way. \n\nThen potentially the most lucrative scenario for her in advancing her own career, is if Buckingham refuses to see us, and the Dragon March assault is a slaughter. She could use that disaster as a black mark against Buckingham, while spreading the word that she sent her agent, The Lion of the Federation, to try and stop Norwood. She can go on to mention that her efforts were stymied due to Buckingham's incompetence, and wouldn't it be a great idea to have a new Fleet Admiral.\"\n\n*She's a natural at this,* Edraele said with a mother's pride.\n\nJohn groaned, rubbing at his temples as he said plaintively, \"See, this is what I mean! I haven't got the patience for all this second guessing and dancing around my enemies.\"\n\nAlyssa rubbed his shoulder, and in a soothing voice she crooned, \"My poor man. You just prefer to kill any bad guys in your way, right?\"\n\nHe chuckled at Alyssa's teasing, then looked at Irillith and asked, \"Do you really think Admiral Devereux is using us as pawns?\" \n\nThe blue-skinned girl looked thoughtful for a while, then smiled at him as she gently shook her head, and replied, \"From what Alyssa relayed to me of your encounter with her, she seems to be slightly intimidated by you, but can see your value as a potential ally. I doubt she'd risk playing games, not with someone she's that impressed but wary of. Saying that, my earlier statements are still true, and she has nothing to lose from assisting you, and potentially lots to gain.\"\n\nJohn gave her an appreciative smile, and said, \"Did I ever tell you, I'm exceedingly glad you've joined the team?\"\n\nThe Maliri girl laughed at his playful but earnest words, and flashed him a beautiful smile. \n\nLooking up at the camera again, he asked, \"Is that it, Faye?\"\n\n\"Only a little bit left,\" she replied brightly, and began the playback once more.\n\nDevereux smiled warmly at the camera, and said, \"I wish you every success with your mission, and safe travels in the Dragon March. I'll look forward to your return to the Olympus Shipyard, and perhaps you and I could have another chat. I found the last one most enlightening.\" She stared directly at the lens, and finished by saying, \"Goodbye, John. Best of luck to you and your crew.\"\n\nWith that the message ended, and Faye shut down the vid-screen so they wouldn't have to listen to the annoying sound of static.\n\nJohn leaned back and said, \"Well that was a heck of a wake-up call!\"\n\nAlyssa smirked at him, and said, \"It certainly was, Rear Admiral.\"\n\nHe laughed and said, \"I'm never going to hear the last of that, am I?\"\n\n\"No chance!\" she replied with a sparkling smile. With that, she slid lithely over the bed, before standing elegantly and sashaying towards the bathroom.\n\n\"Where are you off to now?\" he asked her in surprise.\n\nShe tossed her luxurious golden blonde hair over her shoulder, and gave him a wicked glance as she replied, \"I'm getting myself ready. You and I are long overdue our XO catch up meeting.\" As she glided into the bathroom, she called out behind her, \"I'm really looking forward to it. I've never been buggered by a Rear Admiral before!\"\n\nThe other girls giggled, then each gave him a loving kiss began moving off the bed. Instead of heading to the big ensuite bathroom, they began to walk towards their own rooms to get showered and ready for the day, leaving John and Alyssa alone for some time together.\n\n\"We'll meet up at lunchtime,\" John called out to them, \"We've got some things to prepare for before we reach the Dragon March.\"\n\nJade was the last to leave, and she gave him a flirtatious wink as she said, \"I'll be back later for breakfast.\"\n\nJohn reached out to hold her hand, pulling her back to him as he said, \"Come and join me for a shower, then you can stay and watch if you like? There's no point you running off, then coming straight back again.\"\n\n\"I'd love that, thank you!\" she exclaimed with delight.\n\nThey both left the bed, and strolled into the shower where Alyssa was thoroughly washing herself. She looked up at the pair of them, and smiled at Jade as she said, \"Hey, sexy! I'm glad he asked you to stay.\"\n\nJohn and Jade joined her under the warm water, and Jade asked, \"Are you sure it's alright? If you want time alone together, I'm happy to come back.\"\n\nAlyssa stepped close to the Nymph and placed her arms around her neck as she said flirtatiously, \"It's always more fun with an audience...\"\n\nJohn ran his fingers over their bodies under the water, enjoying the feel of their spectacular physiques under his wandering hands. They were both so strong and supple, with well defined muscles in their beautiful toned bodies. At the same time, their skin was silky soft, feeling smooth and yielding to his touch. It was a marvellous contrast which he enjoyed immensely. Jade's body had started off feeling cooler, but as she and Alyssa kissed, he could feel her begin to heat up until she became warm to the touch.\n\nHIs cock throbbed with desire as the beautiful girls kissed in front of him. Alyssa threw him a mischievous glance, and after a quick telepathic instruction, Jade shimmered before his eyes. Her skin went from dark-green to a tanned bronze, while her hair lightened from a rich black with green highlights to a glorious golden blonde. Two sets of piercing cerulean eyes glanced at him alluringly as they continued to kiss for his viewing pleasure.\n\n\"Fuck! You two look amazing,\" he murmured, as he watched the identical blondes kissing and stroking one another.\n\nAlyssa pulled back a little, and asked innocently, \"You like hot blonde twins?\" Her expression grew wicked as she purred, \"Perhaps we'll bring some blue body paint next time...\"\n\nJade giggled, and nodded eagerly, giving him a very inviting come-hither look.\n\nJohn laughed, and said to Alyssa, \"You're such a naughty girl.\" He reached out to take a firm grip of her bottom, and said, \"Enough teasing, let's get started.\"\n\nShe turned away from him and placed her hands on the wall, spreading her feet and arching her back to present herself for him. \"I'm lubed and ready,\" she said, swaying her hips invitingly. \"Mount up, Rear Admiral.\"\n\nJohn grinned at Jade then nodded to the floor of the shower. She immediately sank to her knees, moving around in front of Alyssa, where he could hear her lapping away enthusiastically, even over the sound of the shower. The Nymph took a firm grip of Alyssa's buttocks and separated them for him, causing the exposed girl to hiss with excitement.\n\nHe could see the water resistant lube glistening in the light, while water cascaded down her back, making her look positively breathtaking. Not wasting any time, he lined himself up, carefully positioning the head of his shaft against her winking hole, and took a firm grip around her trim waist, holding her in position.\n\n*Are you ready?* he asked, giving her plenty of warning.\n\n*Absolutely,* she agreed, and he could feel how aroused she was over their empathic bond. Her voice was filled with need as she added, *I want all of it in one go, and no stopping to let me adjust.*\n\nHe did exactly as she asked, slowly stuffing all of his length inside her in one long thrust. She cried out in ecstasy as she felt him forcing his way into her body, ending up on tiptoe by the time he'd reached the base. Alyssa panted with lust as Jade kept her eager mouth clamped firmly in place, moving her long prehensile tongue in a blur over her clit. \n\n*Time for a status update, XO,* John stated calmly, as he pulled about half his shaft out of her slick passage, then rammed all the way in, right up to the balls. \n\n*They all fucking love you, you big-dicked bastard!* Alyssa wailed, her body trembling as she came explosively under the intensive stimulation from both her lovers.",
        "Jade shuffled back to stay in position as John pinned Alyssa against the wall, and really began to ream her out, driving into her with powerful strokes of his cock. *How about you, XO?* he teased her. *How do you feel?*\n\n*I love your massive cock,* she sobbed, arching her back as he ploughed into her, loving the feeling of being stretched wide to take him. *And you know I'm your devoted little girl.*\n\nJohn was a gentle, considerate, and caring lover, but that wasn't what either of them needed right now. His hips were a blur as he pounded into Alyssa, her magnificent taut cheeks bouncing off his groin, and trembling with every impact. He could feel a powerful climax approaching, and didn't bother to try and stave it away. Jade's tongue lovingly caressing his balls was the final stimulation he needed, and his quad rose up as he blasted long gouts of spunk into the groaning blonde. She took him like a champ, her belly expanding to hold all his cum, and she whimpered through another explosive orgasm as she took his full load.\n\nJade helped support Alyssa's weight as John slid his sated cock from her slick passage, and she sagged back against him with a giddy smile on her face. \n\n\"Good catch up meeting, XO?\" he asked her playfully.\n\nShe tilted her head back, her chest heaving as she regained her breath, and reached up to pat him on the cheek as she thought to him, *Best one yet.*\n\nThey cleaned themselves up in the shower, then dried off and returned to the bedroom where they promptly collapsed in bed. John was flat on his back with Alyssa lying on her engorged tummy, nestled in the crook of his arm. She let out a soft moan as Jade knelt between her legs, and began to suck the cum out of her with an insatiable hunger. John kissed her while Jade went to work, with Alyssa staring into his eyes, and whimpering every once in a while as she responded to the Nymph's questing tongue.\n\nJade had returned to her familiar green-skinned form by the time she was done, and she sat up with a contented smile on her face as she ran her hands over her dark-green belly. It was hugely inflated with cum now, and as her body began to feed off the heavy meal, viridian pulses of light began to spread out over her body.\n\nAlyssa moved across the bed to make room, and beckoned the Nymph over to lie between them. \"How's that feel little kitten? Nice having a full tummy?\" she asked Jade, who waddled over to join them, then curled up on her side.\n\nJade began to purr as they both stroked her swollen belly, and she whispered, \"It feels incredible, thank you both so much.\"\n\nJohn rested his heavy hand over her stomach, and said, \"I love filling you up like this, you look so beautiful.\"\n\nThe Nymph let out a sleepy sigh of contentment, getting drowsy as her body eagerly fed off his cum.\n\nAlyssa traced her hand over Jade's body, following an ethereal green pulse of light as it expanded outwards, and she said, \"He's making you stronger, Jade. Do you like that?\"\n\nJade turned her head, and reached up to give Alyssa a tender kiss. \"It feels amazing,\" she replied, deliriously happy.\n\nJohn and Alyssa both cuddled the Nymph between them, and watched her eyelids grow heavy. Alyssa suddenly looked alert, and leaned over the sleepy girl as she asked, \"Jade, do you know what date is your birthday?\"\n\nWith a languid shrug, Jade murmured, \"Nope, don't remember that far back.\"\n\n\"Alright, sleep tight, sexy girl,\" Alyssa crooned to her as she stroked her hair, and just like that, the Nymph was asleep.\n\n*Her birthday?* John asked, giving the blonde girl a curious look. \n\nAlyssa nodded eagerly, and said, *After beating Nexus, I think we need a proper celebration. We'll be up to our necks in shit when we get to the Dragon March, so why not take a moment to smell the roses?*\n\nJohn smiled at her, and replied, *A party could be fun.*\n\nThe blonde teen grinned at him, and enthused, *It's a while until everyone else's birthday, and mine's miles off; I only turned eighteen a day before I joined you on the Fool's Gold. Jade's always doing stuff for us, and we haven't been able to properly thank her for it. As we don't know Jade's real birthday, we'll just make one up for her... and it can be today!*\n\nLooking down at the Nymph, who was sleeping serenely between them, John placed a loving kiss on her verdant cheek. He met Alyssa's gaze and said, *She'll absolutely love it. I think it's a wonderful idea.* He smiled as he added, *That was really thoughtful. Well done, beautiful.*\n\nAlyssa sat up, beaming with excitement, and mimed clapped her hands together with glee. *I'll gather the troops and we'll get started! I thought the Officers' Lounge for the venue?*\n\nJohn unfolded himself from Jade, then climbed out of bed, and tucked her in under the duvet. He nodded at Alyssa and replied, *Sounds perfect. I've got some pressing business to take care of, so I'll leave the preparations in your capable hands, if that's alright?*\n\n*Of course! Good luck!* she replied, as she glided around the bed to give him a swift hug, before rushing off to the walk-in wardrobe to get dressed.\n\nJohn followed after her at a more sedate pace, and strolled into the wardrobe to get dressed himself. As he started putting on his clothes, he stopped for a moment to watch Alyssa dressing hastily, enjoying seeing how fired up she was about Jade's birthday party. She threw on her top and stepped into some heels, then flung her slender arms around his neck and kissed him soundly.\n\n*Thanks for this morning, Rear Admiral!* she exclaimed breathily. *You lived up to the expectations of your rank!*\n\nHe laughed, and replied, *Yeah, that was pretty incredible.* Looking into her bright cerulean eyes, he continued more seriously, *We'll do a proper XO meeting soon. I think it's good to catch up about everyone, and I like hearing your thoughts about each of the girls.* \n\n*You're the boss!* she replied, planting a big kiss on his lips, then sauntered away, hips swinging provocatively.\n\nHe watched her leave, admiring the impressive view, then finished dressing himself. When he walked back into the bedroom, Alyssa was nowhere to be seen, and Jade was still fast asleep. He crept out quietly so that he didn't disturb the slumbering girl, then strolled down the corridor to the grav-tube. It only took a few seconds to float up to the Command Deck, and he greeted Faye with a wave as he turned left and strolled over to the door to his Ready Room.\n\nThe purple sprite had been studying the Raptor's technical manual, learning all she could about the gunship's flight characteristics, but she looked up sharply when John appeared on the Bridge. A huge grin appeared on her cute little face, and she fluttered over to him, buzzing around his shoulders. \n\nLeaning in, she gave him a kiss on the cheek, and blurted, \"Congratulations on your promotion!\" She let out a little sigh, as she added, \"I wish I could be there in person to give you a hug, but I guess I'll just have to leave that to the other girls.\"\n\nHe smiled back at her and suggested, \"How about if I give Irillith a hug for you instead? Then she can pass it on, the next time she's in the Cyber Realm.\"\n\nFaye giggled with delight, and replied, \"I'm not sure my Creator would be too happy about being our physical contact proxy, but that does sound like fun!\"\n\nJohn pressed the button next to the door into his Ready Room, and asked, \"How's the Raptor pilot training going at the moment?\"\n\n\"All theoretical so far,\" Faye chirped, her purple luminescent eyes glowing with a fierce light. \"We need to stop constantly rushing around, and then I can get some time behind the flightstick!\"\n\n\"Things will calm down eventually,\" he said, nodding his agreement. \n\nShe grinned at him, then waved goodbye as he walked into his Ready Room. John strolled over to the far side, then sat down in the big, comfortable leather chair, and fired up the comm interface built into the desk. He quickly scrolled down through the long list of contacts, and settled on the name he was after, swiping across it with a finger. He made the call, and waited patiently for the person on the other end to answer. \n\nHe only had to wait about twenty seconds, and a stern faced man answered the call. \"It's you,\" Yamamoto noted with a frown.\n\n\"Yes,\" John replied curtly. \"Prepare yourself, it's time.\"\n\nWith that, he closed off the comm channel, not giving Yamamoto a chance to respond. He rolled his eyes at all the theatrics, but after spending weeks-on-end training with the taciturn swordmaster, he knew exactly how to yank the man's chain. \n\nTruth be told, he did feel different now, more focused and sharper, and he was eager to test his skills against the veteran swordmaster. However, he just didn't feel like giving the man a grovelling apology for not calling for a few weeks. It seemed unfair when he literally hadn't been himself, and besides, they'd also been in Maliri territory at the end and thus out of range of the simulator signal.\n\nHe rose from his seat, and walked back out of the room and onto the Bridge. Faye gave him a cheerful wave when she spotted him, and he waved back at her as he stepped into the grav-tube, disappearing out of sight.\n\n***\n\n\"A surprise party!\" Rachel gasped with excitement, looking up from her console and grinning at Alyssa. \"That's a great idea! I love a good party.\"\n\nDana was down by her workbench, and she looked up at the Engineer's podium, then smiled at the brunette, and snorted, \"Yeah, you told me all about your party-girl shenanigans. There's no bikers at this one though, I'm afraid.\"\n\nRachel laughed, and asked teasingly, \"That's not the sound of jealousy I hear is it, oh love of mine?\"\n\nThe redhead pouted, and replied, \"John scrubbed that out from us remember!\"\n\nAlyssa smiled at her friend, and said, \"Actually, I don't think it works that way, Sparks. We enjoy seeing each other getting a good bit of long-dicking from him, but I don't think he thought about us pairing off, and getting jealous of our partner's old lovers.\"\n\n\"See! You were getting jealous!\" Rachel said gleefully, peeking over the Engineering consoles to see Dana's face.\n\nDana put down her multi-tool, and darted up the illuminated steps, then gathered Rachel in her arms as she said, \"Only because you're too good for some hairy biker, babes.\"\n\nThe two kissed passionately, and Alyssa rolled her eyes, but grinned at the amorous teenagers as she said, \"I'm heading up to the Officers' Lounge now, so come up when you get a free moment. There's loads of balloons to blow up, and decorations to hang!\"  \n\nRachel gave her a thumbs up but didn't break the lip-lock with the redhead. Alyssa left them to it, and strolled out of the Engineering Bay, and back down the corridor to the grav-tube. She'd already told Calara and Irillith about the party, so by the time she breezed through the door into the kitchen, both girls were already there. They both looked up at her at the same time, smiling happily, before getting back to work. \n\n\"How's the food prep going, Irillith?\" she asked the Maliri girl.\n\nIrillith didn't look up this time, instead she focused on moving her knife with deft strokes, as she carefully filleted an exotic Maliri delicacy, called a Lentaya fish. \"There's lots to do, but it's probably best if I stick to preparing the meat. This fish can make you violently ill if it isn't cooked perfectly,\" she explained, sounding distracted. She glanced over at the Latina, and said, \"Calara could probably use some help though.\"\n\nAlyssa prowled over to the brunette, and slipped her hands around her lover as she sidled up behind her. She leaned in to plant a loving kiss on Calara's coffee-coloured neck, and murmured, \"Do you need some help, gorgeous?\"\n\nCalara chuckled, a happy smile on her face as she snuggled back against the blonde. \"I don't need to ask if you had a good time with John,\" she began. \"You're always so affectionate after he's given you a good seeing too.\"\n\n\"You know me too well, baby,\" Alyssa crooned, slipping one hand under Calara's top and running it over her toned midrift.\n\nThe Latina giggled, and said, \"Shoo! We've got too much to prepare at the moment. We'll have some fun later.\"\n\nAlyssa pouted and said, \"Fine, how can I help?\"\n\n\"Dress the table?\" Calara suggested, as she began to finely chop the exotic Maliri vegetables in front of her. \n\nGiving her a snappy salute, Alyssa replied, \"Right away, Commander.\" \n\nThe girls exchanged an affectionate glance as Alyssa strolled out of the room, but Calara hadn't finished speaking to her yet. *This party is a great idea,* she thought to the psychic blonde. *Choosing Maliri cuisine was inspired as well, Jade absolutely loves this stuff.*\n\n*Just looking out for my girls,* Alyssa replied, as she began to set the place settings.\n\n*No, it was really thoughtful, and reminded me how much I love you,* Calara continued earnestly. \n\nAlyssa paused with a fork in her hand, and replied, *I thought you were too busy for me to ravish you? Keep that up, and I'll have you climbing the walls, party or no.*\n\n*Mmm, I can't wait until later,* Calara purred, and Alyssa's eyes sparkled with excitement.\n\n***\n\nJohn walked into his training room on Deck Three, and knelt on the matting that covered the floor. He closed his eyes, and focused on clearing his mind of distractions, feeling that sense of inner peace descend on him. He'd been finding it easier to achieve a focused state like this, and soon his breathing was smooth and measured, his chest rising and falling in a calm even rhythm. \n\nThe women in his mind were proving to be a steadying influence, and as he relaxed, he tuned in to them, feeling their emotions over the bond they shared. Edraele and Alyssa seemed to sense exactly what he needed, and an aura of tranquillity descended over him as they both projected warm, gentle, loving emotions his way. The hairs on the back of his arms pricked up as his senses felt more alive than ever before, and when he finally opened his eyes once more, he was in a perfect Zenlike state.\n\nHe rose to his feet, standing upright in one long, smooth motion, then walked over to the simulation system. There was a button with a flashing green light on it, and when he pressed it, the device hummed contentedly to itself for a few seconds. The Pulse generators that Dana had hooked up to the communications relay in the Invictus kicked in, sending a powerful signal to Yamamoto's machine, and established an instantaneous connection with his surly trainer.\n\nThe flashing green light turned a solid green, and the room transformed as the simulator constructed a sophisticated holographic environment. The dojo was exactly as he remembered it, centred in the middle of closely cropped lawns, with a babbling brook winding its way through the grounds, filling the air with the sound of running water.\n\nThe rock garden had changed, showing a flat expanse of white stones, with a solitary onyx stone in the corner. The scene made him think of a boat, becalmed on the ocean, but when he glanced across the field of white, he realised there was a slight incline to the meticulously laid array of white stones. He realised the stones represented a massive upswell, foretelling the arrival of a huge tsunami.\n\nDespite the tranquillity of the rest of the garden, with the beautiful cherry blossom trees exactly as he remembered them, his attention kept being drawn back to the rock garden and the scene unfolding with the stones. He took a deep breath to put it from his mind, and turned to look across the polished wooden floors of the dojo.\n\nYamamoto was there waiting for him, studying him with his fierce, brooding eyes. He was wearing his traditional black hakama, belted at the waist, and he was bare-chested, as he had been for all their other duels. The man didn't speak, but simply moved to stand in position across from John, as though waiting for his student to make the first move. \n\nJohn held out his hand, and the Odachi on the weapon racks floated over to him obediently. It felt strange to move an object without the aid of embedded Etherite crystals, but after psychic shaping Crystal Alyssium, he was more than capable of the feat. Yamamoto's eyes widened at this casual display of Telekinesis, but they suddenly narrowed dangerously, his expression darkening with contempt.\n\n\"You seek to distract me with these parlour tricks?\" he snorted in disgust. \"I never thought you'd stoop to fakery in an attempt to defeat me.\"\n\n\"Enough,\" John said calmly. \"Let us begin.\"\n\nYamamoto drew the Katana that was sheathed at his waist in a long smooth motion, and moved to engage. John simply raised his Odachi, and glided forward, his long steel blade moving in a blur as he attacked. Yamamoto defended easily with his Katana, but this had been only the opening stanza in a long and intricate poem. John flowed through one strike after another, launching a relentless flurry of beautiful attacks that left Yamamoto reeling. The swordmaster's eyes remained watchful and impassive, but he was masking his shock, and he worked his Katana at a frantic pace to keep from being struck by the training blade.\n\n***\n\n\"How's Jade doing?\" Calara asked, as she brought out the bowl of finely diced shenai leaves that she had prepared under Irillith's watchful eye.\n\nAlyssa clipped the magnetic anchor for the balloons she was holding to the ceiling, then looked down from the chair she was standing on. \"Still asleep at the moment,\" she replied as she made eye contact with the Latina. \"She does like a nice snooze after a heavy breakfast.\" \n\nShe waved her hand towards some long ribbons, and they floated across the room, tying themselves into a neat bow as they slipped over the back of each of the dining chairs. Dana and Rachel strolled out as well, carrying more bowls of delicately flavoured and lightly spiced Maliri dishes. The dining table was rapidly becoming covered with bowls full of the extraterrestrial cuisine, and the carefully prepared food smelt absolutely delicious.\n\n\"I'll wake her up in a few minutes,\" Alyssa said with an indulgent smile. \"We can't have the birthday girl missing her special dinner after all!\"\n\n\"What about John?\" Dana asked, with a frown. \"What's he up to?\"\n\nAlyssa grinned at the redhead, and stepped off the chair as she said, \"Restoring the balance.\"\n\nDana grimaced, and replied, \"What the fuck's that supposed to mean? Sounds like some kind of new-age hippy bullshit.\"\n\nThe blonde girl couldn't help laughing at that, and she smiled at Calara as she asked, \"Could you grab a couple of bottles of wine please, honey.\"\n\n\"Sure!\" the brunette replied, and then glanced over her shoulder, and asked, \"Red or white with Maliri cuisine?\"\n\nIrillith pushed open the door to the kitchen with her bottom, and then backed into the dining area, before turning around gracefully. She was carrying a steaming platter of Lentaya fish that smelled positively divine.\n\n\"Go with a white,\" she replied, smiling at Calara. \"It will go nicely with the fish.\"\n\n\"White it is,\" Calara agreed amiably, reaching over the bar for a couple of bottles.\n\n***\n\nYamamoto had counter attacked as soon as he'd seen an opportunity, lashing out with a sweeping backhanded blow to try and catch John unawares. John neatly parried the blow, then surged forwards, sending another series of deadly fast cuts towards the swordmaster's face. Yamamoto was stunned to find himself on the defensive again, and he backed away hurriedly as he dodged and parried the flashing steel.\n\nHe'd never seen John move with such purpose before, and he had to stop himself from admiring the effortless ease with which he flowed through so many of the moves that Yamamoto had taught him. Still the taciturn man had no intention of losing, and he continued to parry defensively, while looking for an opportunity to spring his trap. It had been the undoing of many an opponent, and he knew John would be no different.",
        "***\n\nShinatobe sat in the darkened room, watching the camera feeds from the dozens of tiny micro-cameras that the assassin had set up around the Invictus. The only major room that was not covered by the cameras was the bedroom, as the crew had all been sleeping in there when the furtive intruder was sneaking around the ship the previous night.\n\nStill, it was nearly twelve o'clock now, and the crew had been up for nearly an hour. Shinatobe had counted five crew in the Officers' Lounge, which matched the crew count from the awards ceremony, and the primary target was in the room across the hall indulging in some kind of holo-simulation. Selecting the correct devices from the submenu, it only took a single blink to prime the ones in the key locations. \n\n***\n\nYamamoto was really on the back foot now, as his student moved inexorably for the kill. John was moving as if possessed, calm and composed, yet gliding from one swift stroke and fluidly shifting to another. Yamamoto knew he was rapidly running out of time, so he finally sprang his trap, overextending slightly to the left on a parry, to encourage John to attack on his right.\n\nHe knew exactly what kind of attack was coming, a cross-slash from the upper-right which would neatly decapitate any lesser swordsman. However Yamamoto was no ordinary duellist, and he darted inside John's attack, rushing past him with incredibly fast footwork. His blade moved in a perfect backhand strike, and he grinned, knowing full well that John would soon hear the simulator declare that he had been decapitated.\n\nJohn didn't react as Yamamoto expected though, and instead turned to the left, rather than trying to follow the wily swordmaster around to his right. His long Odachi swept up and behind his head, and the clang of steel on steel echoed throughout the dojo, as John neatly parried the cunning strike. \n\nYamamoto was astounded, but not nearly as shocked as when John span in place, his blade slashing around like a whirlwind, and neatly catching the swordmaster across the throat.\n\n\"You have been decapitated!\" the simulator cheerfully announced, showing Yamamoto a slow motion replay of John neatly cleaving his head from his body.\n\nHe shook his head in stunned disbelief, and slowly turned to look at his victorious student. John was standing calmly, a victorious smile on his face, and he bowed deeply to Yamamoto. The older man was about to reply, when there was a ripple in the simulator behind John, and a black clad ninja appeared to materialise out of nowhere a pistol levelled at John's back. \n\nYamamoto felt terror gripping at his heart, flashbacks to the past threatening to overwhelm him. He shook them off and yelled, \"John, look out!\"\n\n***\n\nShinatobe opened the door into the simulator room, finding the target in the midst of a duel with an older, vaguely familiar looking figure. The assassin crept closer to their unsuspecting quarry, while silently drawing a stubby pistol, and taking careful aim at the middle of the man's broad back. \n\nAt the last moment before engaging, Shinatobe glanced at the HUD menu, and triggered the devices. \n\nChaos erupted on the Invictus.\n\n***\n\nAlyssa was watching Calara, admiring the beautiful brunette as she leant over the bar to fetch a couple of bottles of wine. Suddenly a piercing scream of absolute despair and tortured agony filled her mind, reverberating with terrifying intensity. Alyssa stumbled backwards as her senses were overwhelmed by the anguished wail, and she collapsed onto a plush lounge chair, clutching at her head.\n\nCalara glanced down behind the bar, arm reaching for a bottle of wine, and spotted a small package on the floor. \"Hey, no one said we were doing presents!\" she exclaimed with a grin, as she looked back at the girls around the dining table. \n\nSuddenly her world turned upside down, as a thunderous series of explosions ripped through the Officers' Lounge. Her body was overwhelmed with searing pain, and she was sent sailing through the air, before slamming into a bulkhead, and succumbing to the darkness. \n\n***\n\nJohn smiled as he savoured his victory over Yamamoto, hardly able to believe he'd finally been able to defeat the exceptionally skilled swordsman. Tragically, several things all happened at once, which ruined any sense of satisfaction he might have been feeling.\n\nFirstly he felt Alyssa react in shock to something, but before he could ask her what was wrong, he felt vibrations through his feet, instantly recognising the ominous aftershocks of explosives. A split-second afterwards the Invictus began to shake violently, and his eyes widened as he remembered the ship reacting this way to an interdiction, as they were violently yanked out of hyper-warp. He looked up in alarm, just as Yamamoto stared at him with a terrified expression, and cried out a warning. \n\nHe whirled around, and found himself staring at a black clad figure standing just inside the door to the simulator room. The assassin was pointing a strange looking pistol at him, and without even thinking about it he lashed out with his mind, slapping the pistol away. The gun flew out of the shadowy figure's hand, then skidded across the floor before coming to a stop by the wall.\n\nDrawing two razor-sharp mono-edged swords, the ninja padded to the right, the matte black blades seeming to draw light in, rather than reflecting it like ordinary steel. The shadowy assailant suddenly darted over to the simulator and plunged a blade through the sophisticated machine, destroying the device in a shower of sparks. \n\nThe holo-simulation of the dojo ended in an instant, with Yamamoto banished from sight, and leaving John standing in a simple, unfurnished training room. He was left holding a blunt edged simulator blade in his hands, and the assassin stalked towards him, whirling the two deadly looking swords with an elaborate flourish. \n\nHis opponent was wiry, and a lot shorter than his own six-foot-two, probably standing at about five-foot-five. Clad from head to toe in a featureless black bodysuit made from some strange mesh type material, the ninja cut a sinister, mysterious figure. \n\n*Alyssa!* he called out, as he backed away warily. *Are you alright? I heard explosions. What's happening?!*\n\nHis words were met with deathly silence, which made icy fingers of dread claw at his heart. The assassin gave him no respite, and came at him, blades flashing in a whirling display. John managed to deflect the attack, but he had to be careful parrying, angling his Odachi to avoid it being neatly sheared in half by the rapid slashes from the razor-sharp swords. He backed away, giving up ground as he blocked a dozen separate attacks.\n\n*John, what's wrong?!* Edraele asked him in alarm. *Why are you so worried?*\n\nJohn wanted to reply to her, but he had to devote his undivided attention to the assassin, who was lashing out at him with blindingly fast strikes. Edraele could hear his racing thoughts, and she stayed silent to avoid distracting him, although every fibre of her being was crying out in fear. \n\nHe tried to counterattack, but the black-clad opponent was very quick, neatly parrying with the right blade and readying a counterattack of its own with the left. As their blades locked, John's muscles surged, and he chopped down, taking advantage of his raw brute strength. The assassin was taken by surprise as the mono-blade flicked down, slashing across its left forearm, and spattering dark red blood across the training mat.\n\nThere was a strange humming sound, and the ninja back-flipped away, moving impossibly fast. The black-clad intruder glanced down at the wound on their arm, then seemed to freeze for a second before shifting stances. Suddenly the assassin burst into action again, charging forward with arms outstretched, pivoting and gliding inwards in a radically different fighting style. John's eyes widened as he stepped backwards and desperately parried the looping, arcing strikes. \n\nHe'd never seen anyone move so fast before, and the whirling blades caught him for several glancing hits on both arms. He hissed at the slash of pain, then recovered quickly and tried not to let the cuts distract him from his frantic defence. The assassin span away, then came to a stop, glancing down at the mono-blades as John's blood dripped off the end, pattering onto the mat. \n\nTaking advantage of the momentary lull, John pushed out with his will, enveloping his sword in dancing lightning. At least that's what he tried to do, but without the Etherite crystals in his Crystal Alyssium blade to bond the electricity to his sword, the arcing lightning surged out wildly, and blasted into the ceiling.\n\nThe assassin flinched away from the uncontrolled lightning strike, then froze for another almost imperceptible moment. Shifting stances once more, and adopting a new one that John was much more familiar with, the ninja swept towards him, moving through the Kenjutsu Kata. He had no time to try another lightning attack, and was forced to move his sword in a blur, stepping back to avoid the flashing blades. He blocked and deflected the slashes at his head and chest, which were coming at him with neat, controlled thrusts and strikes. \n\nHe thought he was holding his own, until the Ninja attacked low and to the left, forcing a hurried parry. As the two blades met, he heard the odd humming sound again, and his opponent leapt upwards with an astounding burst of speed. The assassin's second sword scythed downwards, neatly shearing through the blade of his training Odachi, and leaving him completely defenceless. \n\nJohn knew that he was a dead man unless he did something really crazy to try and turn the fight around. He dropped his sword hilt, and lunged forward, grabbing the startled Ninja by the Nanoweave tunic. Yanking the slight opponent towards him with a savage display of strength, he slammed his forehead into the wiry assassin's cloth masked face. \n\nThe bodysuit ripped away as the assassin was sent sprawling backwards, clutching at her battered face as she skidded across the floor. John blinked in surprise to see that he had just headbutted a sallow-skinned woman, her broken nose smearing a splash of crimson across her face. She had rolled with the impact, her astonishingly fast reflexes the only thing that saved her from having her head caved in by the crushing blow. Her angular dark-brown eyes looked into his own, but as their eyes met, he felt a shiver run down his spine. Those eyes were blank, dead things, utterly devoid of any spark of life.\n\nAs he stood there in shock, the assassin leapt to her feet and darted across the room in a flash, moving almost faster than his eyes could follow. He suddenly realised that she'd just been driving him backwards to give her an opportunity to retrieve her dropped gun. She dived for the pistol he'd knocked from her grasp, and fired wildly in his direction, not giving him a chance to upset her aim with another telekinetic attack. He rushed after her, but felt a couple of sharp stings in his chest, and then staggered drunkenly, before toppling face down on the mat.\n\n***\n\nEdraele felt John's inner voice go silent. His last thoughts were of the assassin firing the pistol at him, and his shock as he was hit in the chest. She let out a terrified scream, the thought that he was now wholly at the mercy of his deadly opponent was too horrible to contemplate. \n\nWhen Luna burst into the room, she found Edraele curled up on the floor, hugging herself and weeping.\n\n***\n\nFaye was happily watching the long range scanners up on the Bridge, while glancing through her archived copy of the Raptor manual for the umpteenth time. Dana and Irillith had promised that they'd set up an upgraded link between the Invictus and the Raptor, which would allow her to remotely pilot the gunship from back here on the assault cruiser.\n\nHer daydreams of flying John and his girls into battle were rudely interrupted by several explosions, and she looked up in shock as the Invictus began to vibrate ferociously as they were dumped out of hyper-warp. She frantically searched the long range scans in case she'd missing a marauding ship, but there were no ships anywhere near them on the Sector Map. \n\nFluttering over to Irillith's IntOps console, she activated the cam-feed footage, cycling through the images to find out what had happened. It seemed like there had been multiple explosions in two locations. The Drive Room was filled with smoke, and the Tachyon Drive was dark and lifeless, rendered completely inert. That explained the ship dropping out of hyper-warp, but Faye was far more worried about the carnage in the Officers' Lounge. There were several cameras in there, but two of them had been completely destroyed, while the last two showed glimpses of devastation between the clouds of acrid black smoke.\n\nFaye felt fear grip her chest, and she cycled through all four hundred and fifty cameras onboard, desperate to find any signs of life. She knew the girls were preparing a party for Jade in the Officers' Lounge, as Alyssa had come up to the Bridge to tell Faye, Calara and Irillith all about it. She felt even more scared when she suddenly spotted John battling for his life against some unknown black-clad assailant.\n\nShe watched the two of them locked in a deadly dance, and gasped when she saw John receive a number of cuts as she witnessed the fight unfold. She moaned in horror when she saw him get shot, but she felt a slight sense of relief when she spotted the two darts sticking out of his chest, rather than gaping gunshot wounds. \n\nThe mysterious assassin strode over to his prone form, and began dragging him towards the door, possessing a strength unlikely in such a slight girl. A brief movement on cameras thirty-two and thirty-three caught Faye's eye, and Jade's tousled dark-green hair appeared from under the covers as she rolled over in her sleep.\n\nFaye felt a surge of hope, and she called the bedroom on the internal comm, cranking the ringtone volume up to maximum. Jade sat bolt upright at the obnoxious sound, hands clamped over her ears, and she frowned at camera thirty-three. Now that she had thrown the duvet back, the pulses of light that were slowly radiating out from her slightly rounded tummy, were free to chase shadows across the ceiling.\n\n\"Faye, is that you?\" the Nymph called out, rubbing the sleep from her eyes.\n\n\"YES!\" Faye blurted out. \"We're under attack! Someone's got John!\"\n\nJade leapt out of bed, her drowsiness gone in an instant. \"Where?\" she demanded, before shimmering in a verdant haze and shape-shifting into a huge green Tiger.\n\n\"Deck Three! His training Holo-suite,\" Faye replied immediately. She hesitated a moment, and then blurted out, \"I think the girls are hurt! There was an explosion...\"\n\nJade's furry head looked up at the camera, and she nodded once, before dashing out of the bedroom, claws scrabbling for purchase on the floor.\n\nFaye flicked back to the corridor cameras on Deck Three, and watched aghast as the assassin hauled John's prone body out behind her. She suddenly had a brainwave, and activated the internal defences on that Deck, while being careful not to slam down the emergency bulkheads so that Jade could still come to the rescue. Two Gatling Lasers slid smoothly out of the walls, and she trained them on the black garbed intruder. \n\nThe two-metre-long barrels spun up with an ominous whir, and the woman pulling John looked up in surprise. Faye's tiny purple face took on a grim cast as she sent the command to fire a deadly hail of laser bolts at the assassin who was trying to abduct her friend. Except nothing happened. She received a flashing warning from the fire control interface, and stared at the \"Permission-denied\" message in anguish. Rendered utterly impotent, she was forced to watch helplessly as the ninja manoeuvred John into the corridor.\n\n***\n\nJade fell into the smooth loping run of the Tiger, revelling in the effortless agility of this form. Familiar scents filled the air: those of the other girls, from John, and the ship, but there was one new one in the mix. It smelt musty, like an old suit left in a wardrobe for one too many years, but that wasn't all. There was an unpleasant stink of some kind of hydraulic oil intertwined with that scent, which made her nose wrinkle in distaste, curling her lips back and exposing her massive canines.\n\nBounding along the corridor on Deck Two, she reached the grav-tube, and was about to dive down to the lower deck, when she caught the acrid smell of smoke coming from the Officers' Lounge. Remembering Faye's frantic message about the girls, she half twisted, turning towards the double doors to go and help them. John was in danger though too, and she was torn with indecision, caught between an urgent desire to help all the people she cared about.\n\nAlthough she knew John would want her to go and help the girls, her basic Nymph nature won out. As much as she loved Alyssa and the other girls, her purpose was to serve her Master, and he was in trouble. She dived into the grav-tube, floated down in the red glow, and then padded out onto the corridor on Deck Three.\n\nThe source of the stale stench was busy manhandling her Master, dragging him across the floor like a slab of beef, and Jade let out a blood curdling roar from deep in her chest. She sank low, prowling forward while lashing her tail with anger. Lightning burst out of her paws to shroud her six-inch-long claws with writhing electricity, and her lips curled back in a ferocious snarl as she stalked after her prey.\n\nThe assassin released her grasp on John, and calmly drew both swords from the sheaths across her back. The razor-sharp blades were well oiled, and slid free without a sound. Dropping into a defensive crouch, her weight was perfectly balanced on her feet, while her cold, dead eyes never left the Jade Tiger for a moment. She held one sword in front of her, horizontally across her chest, while the other was raised in the air behind her head running parallel to her shoulders.\n\nJade's big emerald eyes narrowed, and she charged in to attack, pouncing on this rank intruder. Her paws flashed out, the vicious claws catching and ripping flesh, and burning the half-dead creature with a sizzling bolt of electricity from her lightning sheathed limbs. The assassin tore free from Jade's grasp in a fountain of blood, and as Shinatobe rolled clear, the Nymph landed on her four heavy paws, then skidded to a halt. She twisted her body, turning around for another attack, when she suddenly felt a stabbing pain in her chest.\n\nAs fast as Jade was, Shinatobe had moved even faster, engaging her adrenal pump as soon as the Tiger had attacked. The cybernetic device hummed as it flooded her system with a potent adrenalin cocktail, letting her muscles surge into action with supernatural speed. As Jade sailed overhead, the assassin thrust upwards with her sword, accepting a grievous wound across her back and shoulder in exchange for a killing stroke.\n\nJade crouched low to the ground to get ready to pounce, but the pain in her torso intensified, becoming a lance of agony. Despite every fibre of her being urging her after the enemy who was trying to take John away from her, she sagged to the ground, flopping weakly onto her side. Her growl of rage came out as a weak, feeble whimper, and she was suddenly and painfully aware of the sword hilt sticking out of her chest, the blade driven straight through her body.\n\nShe could only lie on the floor, her breathing coming in uneven, ragged breaths as she stared at the black-clad woman who was watching her impassively. The assassin straightened, then reached down for John, hauling him away down the corridor with one arm, the other hanging limply at her side. \n\nA tear formed in Jade's beautiful emerald eyes, splashing down on the floor as she watched her Master being carried away. Try as she might, she couldn't even move, her body weak and lifeless, refusing to respond, no matter her desperation. Jade forgot all about the agony from the blade driven through her chest, as she was overwhelmed with the soul crushing realisation that she had failed John when he needed her the most. She let out a broken sob as she closed her eyes for the last time.",
        "\"Jade...\" Faye wept, watching the horrifying outcome of the fight, while powerless to do anything about it.\n\n***\n\nAlyssa groaned as her eyelids fluttered open, and as she tried to move, she felt a heavy weight on her chest. She was in a darkened room filled with thick black smoke, and the tell-tale flicker of fire cast devilish shadows across the wall she was huddled up against. With a wave of her hand, whatever it was that had pinned her down rolled away, and she leaned up on an elbow, coughing fitfully. \n\nNow that she could see a bit better, she recognised the object that had fallen on her as one of the sofa chairs, and her eyes widened as she surveyed the scene of devastation in the Officers' Lounge. The bar was on fire, and the emergency sprinkler system must have been damaged because it hadn't kicked in yet. She raised her left hand, and shrouded the flames in a telekinetic blanket of force, cutting them off from oxygen and swiftly extinguishing them. There'd obviously been an explosion of some kind, and as she seemed to be unscathed, she realised the large sofa chair must have shielded her from harm.\n\nThat momentary relief was short lived, as she felt a surge of panic rise in her chest. *Is everybody alright?!* she demanded with a frantic telepathic shout.\n\n*I'm okay,* Irillith muttered, sounding a little dazed. *The blast knocked me back into the kitchen.*\n\n*M-m-minor lacerations and contusions,* Rachel stammered, although she sounded weak and disorientated.\n\n*What the fuck happened!* Dana snarled furiously. *And can someone get this fucking table off my leg, I'm trapped!*\n\nAlyssa's heart lifted to hear her friends, and as she rolled to her feet, she listened eagerly for the others to check in too. When she was met with stony silence, she glanced around and called out in a panic, *Calara?! John? Jade? Let me know you're OK!* \n\n\"Oh God...\" she cried out a moment later, as she spotted Calara crumpled in a heap a dozen metres away. Running over to the Latina with her heart in her mouth, she skidded to her knees beside her twisted body, and pleaded, \"Please be okay, baby.\"\n\nReaching out with a trembling hand, she carefully floated the bits of broken table off Calara, and placed her hand on her neck, feeling for a pulse. Alyssa sagged with relief to feel the faint heartbeat, and her nervous tension eased a little. \n\nCalara was unconscious, but she groaned when she felt the light touch to her neck, then rolled to her side, her right arm flopping across Alyssa's lap. What was left of it that is. Alyssa screamed in horror, her beautiful girl's hand was completely gone, leaving only a tattered stump that spurted blood at the wrist.\n\n\"No!\" she wailed in shock, hugging her grievously wounded lover.\n\nTurning back towards the dining area, she spotted Dana waving frantically from under the shattered dining table, so she flicked her right hand, lifting it clear. \"Rachel!\" she called out fearfully. \"I need your help, it's Calara!\"\n\nLurching out of the darkness, Rachel staggered towards her, and Alyssa was shocked to see the dozens of cuts the tawny-haired girl had received from flying glass. \"I'm here...\" she said, sounding a little stronger. \"Sorry, I banged my head. I'm a little groggy at the moment.\"\n\nAlyssa nodded distractedly, her gaze dropping to the critically wounded girl she held in her arms. \"Calara's hand,\" she sobbed, her eyes filling with tears. \"It's gone...\"\n\nRachel gasped as she saw the scorched and ragged wound, and her eyes sharpened in focus as she glanced at the blackened door. \"We've got to get her to Medical,\" she said curtly. \"I need to treat her immediately.\" The brunette picked up a piece of shredded tablecloth from the floor, then darted over to Calara, and used it to staunch the bleeding.\n\nDana and Irillith staggered over to join them, with the Maliri girl supporting the redhead, who was hobbling along in obvious pain, trying to avoid putting weight on her left leg. \"Holy fuck!\" Dana swore as she got her first glimpse of Calara's ruined forearm. \n\n*John!* Alyssa called out to him, her telepathic voice thick with emotion. *Answer me! Calara's hurt real bad.*\n\nWhen her plaintive cry was met with deathly silence, she glanced at the others as a terrifying thought suddenly occurred to her. \"John wasn't in here, was he?!\" she demanded, looking up at their shaken faces.\n\nThey shook their heads as they watched Rachel pull the belt from her trousers, her hands moving deftly as she used it to apply a tight tourniquet to Calara's arm. Dana rasped through her gritted teeth as she replied, \"It was just us. Jade was in bed, and John hadn't pitched up yet.\" \n\nA squeal from the doorway drew their attention, and the smoke-blackened doors were forced open in a series of jagged tugs.\n\n\"John? Jade? Is that you?\" Alyssa called out to them. \"We need to get Calara to Medical!\"\n\nA slightly disquieting smiling face poked through the door, and they all immediately recognised one of the maintenance robots. It glided in silently, the anti-gravity motors too quiet to be heard over the emergency fans, which had begun venting out the black smoke that shrouded the ceiling.\n\n\"No, it's me,\" Faye replied, her voice full of sorrow. \"John and Jade are gone...\"\n\nThose icy fingers of fear were back, clawing at Alyssa's heart as she stared at the heartbroken little sprite. \"What do you mean, gone?!\" she snapped impatiently, her tone harsher than she intended, fraught as she was.\n\nFaye's tiny face was a mask of grief as she mumbled her reply, \"The assassin knocked out the Tachyon Drive, then went after John.\" Her voice faltered as she continued, \"Deck Three... I had to watch, couldn't do anything... felt so useless.\"\n\nRachel placed her bloody hand on Alyssa's shoulder, and said urgently, \"Go! We'll take care of Calara.\"\n\nAlyssa looked down at the comatose brunette, her heart threatening to rip in two as she was forced to abandon her love when she needed her the most. Still, she had to know... what had happened on Deck Three? \n\nRachel knelt beside her, and gently lifted Calara's bloodied head from Alyssa's lap. Her voice was calm, soothing and professional as she said, \"She'll be safe, I've got her.\"\n\nStaggering to her feet, her legs feeling like jelly beneath her, Alyssa started to lurch for the door. Someone called out to her from back in the room, but blood was pounding in her ears now, and she couldn't make out what they said over the rushing sound that filled her head. She ran past the maintenance bot, with Faye perched on its shoulder, and glanced once at the tiny AI as she passed by. The look of abject despair on her purple sylph-like face, was so out of character for the cheerful and upbeat little sprite, that Alyssa's state of anxiety ratcheted up even higher and she began to run faster.\n\nDiving into the red glow of the grav-tube, she leapt out on the deck below, then skidded on the slick trail of blood painted along the floor. Her eyes grew wider as she glanced about at all the red under her feet, then looked up slowly, following the trail back up the corridor.\n\n\"Jade...\" she moaned in horror, spotting the once majestic tiger slumped on the floor. \n\nAlyssa ran down the corridor, her heart pounding in her chest as she rushed to the fallen Nymph. She was lying on her side, and her big feline head was resting on the floor, her eyes closed and teeth pulled back in a half-snarl. It took mere moments for Alyssa to see the sword hilt sticking out of her chest, and the tip of the blade appearing up above Jade's striped green shoulder. \n\n\"No, Jade, please...\" Alyssa sobbed, as she sank to her knees. Her face crumpled as she said brokenly, \"Don't be dead... we love you.\"\n\nShe reached out to touch the tiger's soft green fur, gently stroking her heavy shoulder as she reached into her mind, desperately searching for any trace of her friend. It only took her a second to find the metaphysical representations of John and the girls, but there was a gaping hole where Jade's mosaic used to be. \n\nFaye was right. \n\nJade was gone...\n\n\"NO!!\" Alyssa wailed, overcome with grief, tears streaming down her face.\n\nShe sobbed wretchedly, but as grief-stricken as she was, she still had to find John. She called out to him again in desperation, but to no avail, her telepathic cry for help left unanswered. He wasn't on the ship, she knew that much. She sagged against Jade, hugging the fallen Nymph, and wishing with all her heart that she could bring her back. Sadly, her wish didn't come true.\n\nBut as she knelt there, heart torn asunder, something changed in the weeping girl.\n\nA fierce white light flared in her cerulean eyes, growing brighter and more intense with every second. Her tears dried up, burned away by that glare, and she rose smoothly from the floor, her face twisted with rage. When she turned back to the corridor, Irillith and Dana were there, the expressions of grief on their faces changing to shock as they stared at her.\n\n\"What the fuck happened to your eyes?\" Dana blurted out, but Alyssa ignored the question, storming down the corridor, and heading towards the grav-tube. Irillith and Dana turned around, gaping at the blonde, and Dana yelled, \"Wait! Where are you going?!\"\n\n\"To get John back...\" Alyssa snarled over her shoulder. \n\nHer voice had a deeper pitch to it now, a slightly disconcerting echo as if there were two voices speaking as one. She rushed into the blue lit side of the grav-tube, and floated up and out of sight.\n\nDana and Irillith shared a worried glance, and Dana said, \"Go after her! I need to get to the Drive Room.\"\n\nIrillith glanced down at Dana's leg, and asked, \"Can you walk on that?\"\n\nThe redhead shooed her away, saying \"I'll be fine, I'll get Faye to assist. Go! Help Alyssa...\"\n\nIrillith gave her a curt nod, then sprinted down the corridor, nimbly dodging the bloody trail that marred the otherwise spotless floor. She stepped into the grav-tube, and glanced up, just in time to see Alyssa's foot disappearing through the doorway into the Bridge. Floating up after her, she rushed out onto the Command Deck, where Alyssa was darting into the Ready Room.\n\nWhen she ran into the room, she found the blonde girl stepping out of an armour equipping frame, clad in a suit of Paragon armour. Irillith got a brief glimpse of Alyssa's face as she turned towards the weapon racks, and the look of pure fury twisting her features made her heart skip a beat and goosebumps prickle across her arms. She gave the girl a wide berth and stepped into another equipping frame, slotting her hands and feet into the gauntlets and armoured boots. \n\nShe saw Alyssa reach for a punisher rifle, load it with ammo, then grab a few more magazines before dashing out of the room. The robotic arms had brought the armoured plates down into position over her body, so Irillith hit the thumb control that would seal the plates together. As soon as she heard the rippling series of metallic clicks, she stepped clear of the frame, and reached for a Justice Laser Rifle instead, figuring it would be faster than having to collect ammo too. She grabbed the big weapon, then rushed out the door so she could catch up with the sprinting blonde.\n\nAn image of Faye suddenly appeared in her HUD, and the sprite said in a rush, \"The assassin took John, and dragged him onto a shuttle. Another ship jumped in, a big one, and the shuttle docked then jumped out!\"\n\n\"Alright, thanks, Faye!\" Irillith said to her breathlessly as she dived into the grav-tube.\n\nShe just caught a glimpse of Alyssa's white Paragon armour as she ran out onto Deck Nine below her. The floor of the tube was covered in red, where blood had dropped down in the anti-gravity field and pooled below. When Irillith reached the bottom level and glanced down the corridor, she saw that the blood trail led out towards the airlock, which was currently sealed. The door to the Hangar Bay was open however, and that was where she found Alyssa.\n\nThe blonde girl was looking at the Punisher rifle in her hands, and she let it fall to the floor with a noisy clatter. Now her hands were free, she raised them in the air towards the Raptor, and Irillith did a double-take as she saw a white nimbus of light shrouding Alyssa's gauntleted fingers. She could only watch spellbound as Alyssa made an impatient gesture with her right hand, and sucked all the Crystal Alyssium plating off the gunship in one long stream of liquid metal.\n\nThe viscous white alloy formed a huge perfect sphere, which rotated slowly before them, sparkling as it caught the light. Alyssa gestured with her hands, and it began to flatten, spreading out as it formed an enormous portrait of a girl's face. Irillith stared up at the picture in wonder, but she suddenly recognised the girl, and felt her throat thicken with emotion.\n\nIt was a perfect representation of Jade, her beautiful unmistakeable features lifted up into the glorious smile that Irillith had seen so often. The picture froze for a moment, before shifting again, the expression changing to one of maternal care that Irillith remembered well from the times the Nymph had nursed her. She could feel tears running down her cheek now, as she let out a quiet sob, the exact replicas of the Nymph's face making the terrible sting of loss feel even sharper.\n\nIrillith glanced over at Alyssa, blinking though the tears. She couldn't see the Terran's face as she was standing in front of her, but she could see her armoured shoulders trembling as she manipulated the images. The picture changed again, and again, cataloguing Jade's many expressions until it finally settled on one final image; the look of pure devotion that the Nymph only wore when she gazed at John. \n\nAfter a long moment spent staring at the image, Alyssa turned back to the gunship, and she gestured to the Raptor with her hand. The image began to slowly dissolve, trickling away from the bottom first, and covering the gunship in psychically-shaped armour plating. Jade's eyes were the last things to melt away, and Irillith stared up into those lovely cat-like orbs for the last time, until they finally faded into a stream of metal and covered the last of the ship.\n\n\"I promised her I'd do that,\" Alyssa said softly over her shoulder, before turning and stalking towards the Raptor.\n\n\"Your rifle?\" Irillith managed to choke out as she stumbled after her.\n\n\"I won't need it...\" Alyssa muttered, her voice throbbing with rage.\n\n***\n\nThe Master of Assassins known as Amatsu Mikaboshi gloated to himself, a broad grin of satisfaction on his face as he watched Shinatobe's shuttle dock with his ship. He sat on the Command Throne up in the dimly lit Bridge of his Battlecruiser, 'The Amaterasu', and stared at the system map that hovered above him. It was centred on the glossy white assault cruiser, the Invictus, which was becalmed in the blackness of space. \n\n\"Take us out of here, Servant Kasai,\" he said to the ship's pilot. \"Set a course for Yomi-no-kuni.\"\n\n\"Hai, Idaina-sha,\" the man replied with a curt bow, before turning back to his console and plotting the course to their base.\n\nMikaboshi rose to his feet, and descended down the steps from the Command Podium, his long black garments flowing around him as he prowled over to his personal room adjoining the Bridge. Now that his prize was secured below-decks, he would finally be able to take his time, finishing this job in the most satisfying way possible. Shaking his head with barely controlled anger, he dreaded to think how much this supposedly simple assassination contract must have cost him in money and reputation. He strolled over to his desk to collect his tools, but stopped for a moment, savouring the thrill of these emotions as all that anger coursed through his body.\n\nDespite the quite shocking costs to fund this enterprise, he was forced to admit to himself that hunting down John Blake, the supposed Lion of the Federation, had ultimately been extremely satisfying. He felt alive again for the first time in decades, the boredom of watching the years roll by, finally abated by the challenge of a worthy foe. Mikaboshi was actually looking forward to meeting the man in person, this enigma, who had proven to be such an incredibly elusive target. It had taken months to track Mr Blake down, as one attempt after another had been foiled.\n\nHe collected his velvet wrapped bundle from the desk, and walked purposefully into the private elevator that led off from his Ready Room. He hit the button for Deck Six, and as the lift descended, he tapped his index finger on the velvet bundle, hearing the satisfying clink of metal. The elevator came to a halt, and the door slid open quietly, revealing a gloomy corridor that stretched away into darkness.\n\nMikaboshi had no fear of the dark; the things that lurked in darkness knew well enough to leave someone like him alone. He glided along the corridor until he reached his destination, and pressed the button outside the interrogation room. The door slid open smoothly and efficiently, well-oiled and silent. He immediately spotted his quarry restrained against the far wall, and his pulse quickened at the sight. \n\nJohn Blake was tightly secured, his arms and legs chained to the wall, but he was unconscious at this moment, with his head slumped forward. Mikaboshi spotted Shinatobe standing nearby, and he frowned when he saw one of her arms hanging limply, her nanoweave suit badly shredded, scorched, and covered in blood. The mask of her suit had been torn away, leaving her pallid skin exposed to the spotlights in the room. Finally, her nose was broken and badly smashed, with dried blood smeared all over her face.\n\n\"You ran into difficulties?\" he asked in surprise. \n\nShinatobe was his most trusted agent, racking up nearly as many successful missions as he had over his long, shadowy career. If she had struggled to subdue Mr Blake, then perhaps he was even more impressive than he had been let to believe.\n\nThe lithe woman turned her head towards him, bowing respectfully before she spoke in her flat, unemotional voice, \"There is more than meets the eye about this target, Great One. He possess freakish, unnatural strength, and was somehow able to attack me with lightning, like Raijin himself.\"\n\n\"How fascinating,\" Mikaboshi replied, walking across the room, and placing the velvet bundle on the nearby table. \n\nShe turned towards her prisoner, and intoned quietly, \"I took the extra precaution of adding further restraints to keep him in check.\"\n\nSure enough, Mikaboshi could see multiple sets of chains pinning John's arms back against the wall. He approached warily, head tilted to one side, so that he could get a closer look at the man. After staring at John for a few minutes, he shrugged, not finding the prisoner all that impressive. He was reasonably tall at six-foot-two, and fairly well built, but not excessively muscular. In fact the man seemed quite unremarkable except for his unusual pointed ears.\n\n\"Leave us, Shinatobe, and have your wounds tended,\" Mikaboshi ordered, dismissing her with a sharp wave of his hand.\n\nShe looked up at him, and said impassively, \"I'm not sure that's wise, Great Master.\"\n\nAmatsu Mikaboshi drew himself up to his full height, and said in a deathly cold voice, \"You have grown bold indeed if you think to defy the orders of the Divine Lord of the Heavens, Shinatobe...\" \n\nHer blank, dead eyes darted downwards as she bowed her head deeply, and said, \"I meant no disrespect, Idaina-sha. I only urge you to show great caution around this target.\"\n\nShe could feel the palpable waves of anger and displeasure radiating from her Master, so she bowed one final time, and backed out of the room as he had ordered. She knew full well not to provoke him at the best of times, but she had never seen Amatsu Mikaboshi like this before, and beat a hasty retreat. ",
        "Mikaboshi turned towards John, and a wicked smile formed on his face as he said, \"Now, perhaps you and I can get better acquainted...\"\n\n***\n\nGuided by retro-thrusters, the Raptor gunship slid smoothly from the Hangar Bay of the Invictus, the door closing behind it as soon as it was clear. Alyssa brought up the Sector Map, and even though the long range sensors on the Raptor weren't as powerful as those on the Invictus, she could still see the battlecruiser at the edge of her sensor sweeps. She plotted her course in a couple of seconds, then powered up the Tachyon Drive in the gunship. They were swathed in a soft blue aura of Tachyon particles for a moment and then the Raptor slipped effortlessly into hyper-warp.\n\n\"How do you intend to stop them?\" Irillith asked quietly from the co-pilot's seat. \"That ship's too big for us to interdict.\"\n\nAlyssa glanced her way, and her voice reverberated eerily as she replied, \"I was planning on ramming them, but are you able to hack them and shut down their FTL drive?\"\n\nIrillith was shocked at Alyssa's calm declaration of her plan to ram another ship while in hyper-warp, and she hesitated before she replied, \"The Raptor isn't equipped with the comms relay that the Invictus has. The comms portal in this gunship probably isn't strong enough to hold my signal.\"\n\n\"I'll boost you,\" Alyssa said grimly, her eyes blazing as she stared at the fleeing ship.\n\nThe Raptor tore through hyper-space, travelling at over three times the hyper-speed of the unwitting battlecruiser Amaterasu. Irillith could clearly see their objective in the tactical display, and the hulking ship looking fearsome and imposing, even as a ten-inch holographic model. It was nearly fifty percent larger than the Invictus, measuring in at seven-hundred-and-fifty metres long, and bristling with gun decks. \n\nThe Amaterasu had been heavily customised, and the black hull was covered with thick, dark-red armour, while the batteries were already exposed, rather than hiding under protective plating. Irillith could see Beam Lasers, Laser Cannons, Heavy Cannons, Gauss Cannons, and a substantial defence grid of Gatling Lasers swathing the huge ship. Having said all that, she knew full well that the Invictus would be able to cut this ship to pieces, especially after witnessing Calara tear into the Loki. Things had changed now, though, with Calara and the Invictus both crippled, leaving them to pursue in a mere gunship.\n\nIt took them five minutes to catch up to the much bigger and slower vessel, and Alyssa brought them in ever closer, despite the warning messages flashing on her console. Ships travelling through hyper-warp left a wake of disrupted hyperspace behind them, and smaller vessels caught in that wake were in significant danger. Alyssa seemed unperturbed however, making dozens of tiny course corrections to bring them alongside at a perilously close distance.\n\nThe two women shared a look, and Irillith felt that tugging in her chest as she began to Astrally Project herself out of her body. It only took a second to peel away her ethereal Spirit form, and she dived into the data jacks of her console.\n\n***\n\nServant Kasai was sitting up on the Bridge of the Amaterasu, when a strange alarm went off on his Pilot's console. It was one he'd never seen before, despite nearly a dozen years spent flying Master Amatsu Mikaboshi's battlecruiser. He frowned as he pressed the button on the console to acknowledge the alarm, and a bright red circle appeared on the system map next to their ship.\n\n\"Warning,\" the navigation computer intoned. \"Approaching vessel exceeding minimum safe hyper-warp clearance.\"\n\nHe leaned forward and stared in astonishment, as a tiny ship, perhaps only thirty metres in length, appeared to be racing alongside them. Even though the Amaterasu was equipped with a state-of-the-art military FTL drive, this pursuing vessel seemed to have caught up to them with ease. He blinked a couple of times, rubbing his eyes before staring at the map again. Sure enough, what looked like some kind of gunship was drawing in beside them.\n\n\"Matsuki, look at this!\" he exclaimed, turning to his colleague manning the Engineering Station. \"Is that a gunship chasing us? What the hell's it doing?\"\n\nThe other man was older, with a neatly trimmed beard. He stared at the younger man, in case this was some kind of trick, but when he saw that Kasai was serious, he looked up at the System Map. He squinted at the gunship, and said, \"Maybe it's some kind of distorted sensor echo. Vessels that small don't have FTL drives, you know that as well as I do, Kasai.\"\n\nThe two men glanced at the third crewman on the Bridge, Servant Oshiro, who manned the Tactical Station. The lean, flint-eyed man glanced once at the system map, then snorted at them derisively, rolling his eyes. The thought of a jump capable gunship was too absurd to even contemplate. With no one left to ask, Matsuki and Kasai shrugged and decided to ignore the mysterious sensor contact.\n\n***\n\nIrillith had made a connection from the Raptor to the battlecruiser, and she leapt out through the swirling portal that signified the boundary of the Raptor's digital network. The path between the two cyber realms was shadowy and insubstantial, appearing like a wavering grey bridge between the two networks. She did her best to push ahead across the tenuous link between the systems, but the transmitter from the gunship just didn't have the bandwidth to support her digital signal. \n\n*It's no good, the signal can't support me,* she reported to Alyssa, feeling a nagging pang of worry that this now meant they'd be falling back on the ramming plan.\n\n*Let me help you,* Alyssa replied, the sensation of two voices overlapping each other even stronger now that they were communicating via telepathy.\n\nIrillith's eyes opened wide as she felt a huge surge of psychic energy pour into her, and she gaped at her hands as they were swathed in roiling clouds of violet eldritch power. She gasped as she held them outstretched before her, and the shadowy path was snapped into a rigid, unwavering purple-hued link to the battlecruiser Amaterasu. She soared down that link, and dived through the portal into their private digital network, blasting through the protective firewall and sending it cascading away in a million tiny fragments.\n\n***\n\nA loud warning siren filled the Bridge of the battlecruiser, and Servant Engineer Matsuki stared at his console in shock.\n\n\"What's happening?\" Kasai asked him urgently, not recognising the cadence of the siren. \"What's that warning mean?\"\n\n\"Someone just hacked into our network,\" Matsuki blurted out, \"But that's impossible!\"\n\n\"The gunship?\" Kasai cried out in alarm, sharing a worried glance with the engineer.\n\nTactical Servant Oshiro shook his head, and said contemptuously, \"No gunship has a FTL drive, and no ship in the galaxy is that fast!\"\n\nSuddenly the battlecruiser began to shake violently, massive vibrations causing the Bridge crew to clutch fearfully at their chairs.\n\nKasai stared at his Pilot's console with growing fear, and said, \"We've been knocked out of hyper-warp!\"\n\nOshiro was the one who looked shocked now, and the lean man stammered, \"Nothing smaller than a cruiser could interdict us. That's impossible!\"\n\nThe vibrations ended and the battlecruiser Amaterasu was dumped unceremoniously from hyper-warp, as more alarms began to clamour around the Bridge.\n\n\"That gunship is real!\" Kasai hissed, seeing the white Raptor clearly for the first time. He desperately powered up the sub-light engines, so that he could begin making combat manoeuvres.\n\n\"Shields up!\" Oshiro ordered, his calm professionalism taking over in this emergency situation.\n\n\"I can't!\" engineer Matsuki yelled back. His voice climbing several octaves as he shrieked, \"They're not responding! The hacker has put them into a looped maintenance diagnostic!\" \n\nThere was a crackle as the big view-screen sprung to life. A violet image coalesced on the screen, sharpening into a woman's beautiful face. Rather, it would have been beautiful, if it hadn't been contorted with fury.\n\n\"You killed one of us, now you're all dead men!\" she screamed, finally having an outlet for her grief, frustration, and anger.\n\n\"Eject the comm relay!!\" Oshiro yelled at engineer Matsuki, who was staring at the screen, paralysed with terror.\n\nThe petrified man wrenched his eyes away from the screen, pressed several buttons on his console, then moved his hand over another. His hand wavered for a moment, as he was wracked with indecision.\n\n\"Do it!\" Oshiro bellowed at him, \"Before she tears the ship apart from the inside!\"\n\nMatsuki slapped his hand down on the console, and the emergency ejection system kicked in, disconnecting the comm relay from the Amaterasu and blasting it clear. Ejecting the comm relay meant that the Amaterasu now had no way of communicating with the outside galaxy, leaving them in a complete comms blackout. \n\n***\n\nWith the connection cut, Irillith was booted out of the battlecruiser's cyber realm and her spirit form was snapped back into her body. She gasped for breath, reeling from the shock to her senses, and her wild eyes darted over to Alyssa.\n\n\"I took out their FTL drive, and I crashed their shield generator,\" she reported between lungfuls of air. \"They kicked me out before I could attack anything else.\"\n\n\"Good girl,\" Alyssa replied, taking a firm grip on the flightstick. Her eyes narrowed, the glowing radiance not diminishing in the slightest as she snarled, \"They're mine now.\"\n\n***\n\nAmatsu Mikaboshi stepped back from his quarry, empty hypo-injector in his hand. \"This is so much more fun when my subject is awake,\" he said with an evil grin on his face.\n\nHe turned to his right, and unfurled the tools of his trade from the black velvet wrap. He had done this so often, he had the precise motions of his hands practiced to an artform, and the wrap smoothly unfurled, running the length of the table. It revealed the wickedly barbed and hooked implements of a master torturer, and Mikaboshi nodded with satisfaction to see his old friends once more. \n\nJohn was still unconscious, and although the Master assassin found it highly entertaining to see the terrified faces of his victims when he suddenly displayed his tools like this, he was eager to get started. He knew that the counter-serum to Shinatobe's tranquiliser was fast acting, but he was feeling too impatient to wait for it to kick in.\n\nSuddenly the floor began to tremble, the vibrations growing in strength, and Mikaboshi held out his arms for balance. The shaking increased, so he activated his stability magnets, locking him in place against the Titanium-plated floor. He frowned in confusion, recognising the tell-tale signs of his ship being forcibly pulled from Hyper-warp, but he had no idea why they'd been interdicted.\n\nA chime from his optical HUD echoed through his head, and he glanced at the internal comm message from the Bridge in irritation. \"What's going on?!\" he growled. \"Did we just drop from Hyper-warp?\"\n\nTactical Servant Oshiro's panicked face appeared in the small video feed image, and he said, \"A thousand apologies, Great One! We're being attacked by a gunship! They hacked-.\"\n\nMikaboshi cut the man off, his voice menacing as he hissed in fury, \"You dare to disturb me with tales of a gunship?! Why aren't you handling this, Oshiro? Have you outlived your usefulness?!\"\n\n\"No Idaina-sha, I will resolve the situation immediately!\" Oshiro replied in a rush.\n\n\"See that you do,\" Mikaboshi said ominously. He cut off the call, then turned back to glance at John who still hadn't stirred, and said, \"Now, where were we...\" \n\nThe Master Assassin turned away from John to examine the sinister implements arrayed before him, and his fingers began to dance over his favourites. The digits seem to skip merrily between the eye-gouger and the tongue-remover, but he couldn't quite make up his mind.\n\n***\n\nEdraele had been terrified as she'd listened to John's thoughts throughout his fight with the assassin. As bad as it had been, tuning in to his inner voice when it had been filled with worry and self-doubt in the lead up to the confrontation with Nexus, this had been a thousand times worse. When she felt him go silent, succumbing to the tranquiliser and now at the mercy of his opponent, she had nearly been overwhelmed with horror.\n\nFor the last thirty minutes she'd been on tenterhooks, desperately waiting for him to awaken, and when he gradually began to stir, she felt an immense surge of relief. She could feel his sense of confusion when he couldn't move his arms or legs, and when he glanced down groggily at the chains binding him in place, his train of thoughts began an internal monologue.\n\n\"Can't move... chains... mouth tastes of sawdust... spotlights... Alyssa? Girls? where am I?\"\n\nEdraele felt a surge of hope and she gathered her will, readying herself for action.\n\n***\n\nAlyssa pulled the flightstick hard to the right, while powering up the engines, smoothly pivoting the gunship to begin her attack on the battlecruiser Amaterasu. The Tactical Overlay showed her the dozens of fire arcs from the battlecruiser, and she memorised them with a glance, only specifically taking note of those from the Heavy Cannons and the Gauss Cannons.\n\nThe Raptor flipped and rolled with effortless grace, as though the ship was now truly at home amongst the stars. The battlecruiser opened fire with its huge arsenal of weapons, and she nimbly dodged the fusillade of shots, with the incredibly agile gunship moving much too fast for the enemy gunner to track her. She brought the Raptor around so that she was facing the lower port Hangar Bay, and then held position as she took careful aim.\n\n***\n\nKasai watched in shock as the incredibly manoeuvrable gunship showed the flight characteristics of a light fighter, flipping and rolling with bewildering ease. Tactical Servant Oshiro realised he had no chance of hitting it with anything other than the Gatling Lasers, but even with those rapid-tracking, turreted weapons he'd struggled to score more than a few hits on its shields.\n\nThe sparkling white gunship raced towards them, shrugging off the ineffective hits, and making Kasai think they were being attacked by some sort of ghostly wraith. Despite the utterly ludicrous scenario of a gunship approaching on an attack vector towards a hostile battlecruiser, Kasai still felt a shiver of fear run up his spine.\n\nSuddenly the gunship came to an abrupt halt, pointing directly at the lower rear of the battlecruiser. Not caring what it was up to, Servant Pilot Kasai yelled triumphantly, \"Now, Oshiro! Hit it with everything!\"\n\nOshiro didn't need the ship's pilot to tell him when to fire, and when the Raptor suddenly stopped dodging around, he placed the crosshairs right over it, firing every weapon he had. Regretfully the gunship was sitting outside the fire arcs for his Heavy Cannons and Gauss Cannons, so he had no line of sight with them. However, he was still able to open up with four Beam Lasers, nine Laser Cannons, and eighteen Gatling Lasers. A massive cascade of orange beams, laser blasts, and laser bolts enveloped the tiny gunship, blotting it from view on the Tactical map in a blazing flare of amber light.\n\nHe looked up from the fire control overlay, and grinned triumphantly at Kasai and Matsuki, who both wore jubilant, if somewhat relieved grins. Those happy expressions were wiped from all their faces a second later, as the battlecruiser was rocked by weapon impacts. Red lights flashed and warning alarms chimed, as the computer voice from the damage computer announced, \"Hull Breach!\"\n\nThey all stared up at the Tactical Map, and gaped in horror at the white gunship as it blasted the battlecruiser with two blindingly bright azure beams. The shots slashed through the armour covering the Hangar Bay doors, and the gunship pivoted, scything the beams along the length of the Hangar. Even more horrifying than the incredible damage it had just inflicted, was the fact that the gunship didn't show a single scratch or scorch mark from the furious barrage that Odachi had just unloaded on it.\n\nKasai pointed at it with a trembling hand, his eyes wide with fright as he hissed, \"Akuryo!!\" \n\nThe other two men stared at each other in terror. An Evil Spirit... yes, there could be no other explanation.\n\n***\n\nAmatsu Mikaboshi felt the ship shake again, but the vibrations felt different this time, and he knew his vessel had been hit by powerful weapons. He narrowed his eyes in anger, putting down the eye-gouger he had selected, and activated the internal comm.  \n\n\"Odachi!\" he snapped, barely keeping his temper under control. \"What's happening you imbecile?\"\n\n\"We're being boarded...by Akuryo!\" the man wailed, clearly scared out of his mind.\n\nMikaboshi realised his servant was too terrified to be reasoned with, so he just cut the comm channel without responding again. He ground his teeth in anger, as he realised he'd need to repel this invader himself. With a sigh of regret, he resigned himself to getting this business with John Blake over and done with as quickly as possible. As much as he was looking forward to torturing John for days on end until his inevitable death, he hadn't lived to one-hundred-and-thirty-five just by carefully monitoring his diet and vitamin supplements. He'd done so by being very careful.\n\nThe master assassin walked up to John, placed his hands around the man's throat and began to squeeze. He had promised himself that he'd choke the life out of him with his bare hands, after all.\n\n***\n\n*NOW, JOHN!!* Edraele screamed at him through his befuddled mind. She sent him a surge of psychic energy which helped him burn away the last of the tranquiliser, and snapped him back to full awareness.\n\nJohn's eyes flicked open, and he found himself staring face to face with a tanned, black haired man with sharply angular eyes. He felt the man's incredibly strong hands began to squeeze around his throat, and he realised he had seconds to react before his larynx would be crushed.\n\n\"My hunt ends here, Mr Blake. Goodbye...\" Mikaboshi said with grim satisfaction, his powerful hands squeezing tighter.\n\n\"RAWRRRR!!\" John roared, focusing all his will into his psychic strength. \n\nHis muscles flexed, and he tore his right arm free from the chains, snapping through them like they were made from tissue paper. The mysterious assailant gaped at him in stunned disbelief as John grabbed the man's left forearm in a vice-like grip, then yanked back savagely. The hideous tortured squeal of metal twisting against metal filled the room, and as he ripped the man's arm from his shoulder, John blinked in surprise at the shower of sparks that accompanied the dismemberment. The synthetic limb he was holding was heavy in his hand, so he whipped it back like a baseball bat, and battered his attacker across the head with it. \n\nMikaboshi lifted off the ground from the colossal impact, and was sent cartwheeling backwards to crash into the rear wall of the interrogation room. His metal chassis was heavy, and the wall crumpled as he smashed through it, ending up with him bouncing off the far wall in the corridor. His HUD flickered intermittently from the impact to his head, and he staggered to his knees, staring back into the room in utter astonishment. He watched John flex the muscles on his left arm, ripping the half-dozen lengths of chain restraining it out of the wall.\n\nThis hunt was now providing Mikaboshi yet another emotion he hadn't felt in more decades than he could count. \n\nFear. \n\nHe decided it was one he would rather do without.\n\n***\n\nAlyssa brought the Raptor in to land inside the Hangar Bay of the battlecruiser, carefully avoiding the jagged glowing remnants of the hangar doors in the blasted portal. There were several men running across the hangar, but she could feel John's presence a few decks above her, so she gunned them down without a second thought. The six Pulse Cannons opened up, punching huge glowing holes through anyone trying to flee, and a couple of seconds later the room was deathly still.",
        "She landed the gunship, then turned to face Irillith as she rose from the Pilot's chair. \"I'm going to rescue John. You stay here to guard the Raptor, and kill anyone who isn't us,\" she ordered, her face a bleak mask, and the white light shining from her eyes burning brighter than ever. \n\nIrillith was still dazed from being forcibly dumped out of the cyber-realm, so she nodded, too weary to try and object. As Alyssa marched out of the cockpit, the Maliri girl rose from her chair, and slumped into the Pilot's seat. She wrapped her hand around the flightstick, and then rubbed her eyes before staring out into the hangar to maintain a watchful vigil.\n\n***\n\nShinatobe had felt the series of tremors and vibrations through the Amaterasu's hull, ignoring the first ones when they had dropped out of hyper-warp, but springing to her feet when she recognised the tell-tale feel of weapon hits striking the ship. The ship's surgeon hadn't even had a chance to apply a wound sealant to the ragged gashes across her shoulder, and he blinked at her in shock when she leapt off the treatment table.\n\n\"Apply a trauma kit,\" she murmured in her unemotional voice. \n\nDoctor Endoso nodded his head, his topknot bobbing as he did so. He crouched down beside a medical storage locker, and quickly pulled out the desired kit. After carefully unfolding it, he picked up an anti-bacterial spray that he applied liberally to the scorched and torn skin, before pressing the trauma kit into place. \n\nPain flooded her senses, and as Shinatobe hissed in reaction, she quickly darted a glance at her HUD and deactivated her pain receptors. Now she simply felt a strange tugging and prodding as he securely attached the trauma kit, which would prevent the wounds from becoming infected. \n\nAs soon as he was done, she turned and stalked out of the Medical Centre without a word, leaving the bewildered doctor to stare after her in surprise.\n\n***\n\nAlyssa stomped down the landing ramp from the Raptor, then strode across the hangar. White ethereal swirls were coiling around her arms now, looking like slow motion tornados as they twisted and danced around her limbs. \n\nShe could feel that John was near, and she approached a set of blast doors that had been slammed down to seal off the hangar from the rest of the ship. Raising her hand up in a claw, she snarled with anger and tugged with her mind, ripping the massive titanium door from its frame. The edges bent and twisted as she tore it free, and the huge hangar echoed with the hideous grating sound. \n\nThere was a squad of soldiers in the corridor beyond, and they opened fire on her with assault rifles the moment she came into view. Her Paragon armour deflected the rounds with a curious whumping sound, and she ignored the hail of bullets that filled the corridor. Narrowing her eyes, she ripped the jagged titanium door in half, then sent the two pieces spinning away from her with a dismissive flick of her wrist. The enormous, foot-thick sheets of metal sailed down the corridor like a giant's frisbee, and smashed the soldiers out of the way, or cut through them where they stood. When the door sections hit the far wall with a deafening clang, a long, bloody smear and scattered limbs were all that was left of the soldiers.\n\nShe stalked down the passage, stepping heedlessly over mangled corpses in her single-minded obsession to be reunited with her man.\n\n***\n\nJohn watched the armless cyborg stagger to his feet, his shattered face looked incredulous as he stared at the wall he'd just been smashed through. He turned to run, and John called out to him, \"Hey! Wait a minute.\"\n\nAmatsu Mikaboshi stopped mid-stride, and slowly turned to look John's way.\n\n\"I'll be hunting you now,\" John promised him, his voice brutally cold and remorseless.\n\nThe cyborg fled, and as John listened to the man's feet echoing off into the distance, he focused his attention on freeing his legs from the restraints. With his arms unbound, he just had to tug each set of metal chains out of the wall, and after a couple of minutes he was done, completely free once more.\n\nHe stepped clear of the broken shards of metal, and after stretching his aching muscles, he padded cautiously from the interrogation room.\n\n*John! Are you alright?!* Alyssa thought to him, her voice flooded with relief to hear his inner voice once more. There was a strange reverberation when she spoke, almost like an echo that followed every word.\n\nJohn poked his head out through the door, then glanced both ways, before ducking back when he heard movement heading his way from further down the corridor. *Yeah, I'm fine. Just took a few cuts from an assassin in a swordfight, but nothing too serious,* he replied immediately. He sent her a telepathic grin as he added, *You don't know how good it is to hear your voice, honey. I was so worried...*\n\nAlyssa's near-hysterical laughter caught him by surprise, as she went on to reply, *I know exactly what you mean.* She paused for a moment, reluctant to tell him everything else that had happened, so she continued, *But we need to get the hell out of here!*\n\nA group of soldiers paused outside the gaping hole in the interrogation room wall, speaking in hushed, frightened voices. After some furtive conversation, one of them approached the rent in the metal wall, and leaned in to take a quick look inside. John grabbed the man's rifle with his left hand, then slammed his right fist into the soldier's head with a mighty hook, crushing his skull like an eggshell. \n\nThe limp body collapsed in a heap, and John stepped into the breach with the rifle in his hands. The fallen man's comrades were staring at the broken body in horror, so he raised his assault rifle, and sprayed the rest of the squad with bullets at point blank range. They keeled over as they were perforated by ten-millimetre caseless rounds, the wall behind them now covered with riotous sprays of blood. He ejected the spent magazine from the rifle, and picked up another from one of the slain soldiers, slotting it into the MallerArms-G270 he was now carrying.\n\n*Where are you?* he asked, taking another look down the corridor, but seeing no other signs of life.\n\n*Heading your way. Stay put if you're safe, I'll be there in a minute,* she replied, her voice reverberating through his mind.\n\n***\n\nMikaboshi fled down the corridor, desperate to get away from the first man in nearly a century who had actually made him feel afraid. He was unsteady as he ran, the loss of his left arm upsetting his centre of balance, and slowing him down. Glancing over his shoulder, his heart pounding, the Master Assassin felt greatly relieved to see that John Blake wasn't hot on his heels, attempting to chase him down. \n\nReaching a set of lifts, he dived into one just as a small group of soldiers stepped out, and then repeatedly tapped the button for Deck Twelve. The soldiers were shocked to see him running around without an arm, but they were only pawns, and he cared nothing for their opinion. The elevator door finally closed, and dropped down the handful of levels to the lowest one on the battlecruiser, which housed the hangar bays. \n\nThe elevator let out a quiet chime and the doors slid open, filling the lift with the disturbing sound of gunfire and men screaming. Mikaboshi activated the camera in his index finger, and eased it out into the corridor so that he could see what was happening without exposing himself to danger. He looked left first, and he watched the cam-footage in shock as a soldier went sailing through the air across an intersection fifty metres away. Whoever had just hurled the dead man across the crossroads had taken the trouble to snap him in half first. Backwards.\n\nAll the screams of terror were coming from the left side of the corridor, so after checking the right was clear, he slipped out, and then sprinted down the passageway. He took the first passage to the left he could find, running in the opposite direction to the force of destruction rampaging through his ship. Mikaboshi burst into the starboard hangar bay, and heaved a sigh of relief when he saw Shinatobe's shuttle parked on one of the marked landing zones.\n\nHe felt a momentary pang of regret at abandoning the Amaterasu and Shinatobe, but his one unbreakable rule was never to expose himself to unnecessary danger. It was now quite apparent that every second spent aboard the compromised battlecruiser was violating that rule.\n\n***\n\nJohn waited impatiently in the interrogation room, hearing chaotic sounds approaching. Another group of soldiers ran down the corridor outside his hiding spot, but they didn't pause to investigate the rip in the wall, being more concerned with fleeing for their lives. The sounds of running suddenly stopped abruptly, followed by terrified screams and sickening crunching noises. He clutched his assault rifle, and waited nervously in the room.\n\n*It's me!* Alyssa called out to him, *I'm coming in.*\n\nHe sagged with relief, and she opened the door and strolled inside, looking from side to side. When she saw him, he could see the tension drain from her, and she rushed into his arms. \n\n*Oh God, I'm so glad you're safe!* she gasped, hugging him fiercely.\n\nHe held her in his arms, and said in a soothing voice, *Everything's going to be alright now.*\n\nShe looked up at him, and he could see the grief etched in her anguished face, but that was forgotten about the instant he saw the radiant white light pouring out from her eyes.\n\n*Your eyes!* he remarked, blinking in astonishment. *Are you OK?!*\n\nLooking away, she nodded, and replied firmly in her echoing voice, *I'm fine. Let's get out of here.*\n\nRealising that being in the middle of a hostile ship full of enemies wasn't the best place for twenty questions, he replied, *Alright, you lead us out. I'll cover your back.* He frowned when he saw she wasn't carrying a Punisher or Justice rifle, and he asked with alarm, *Did you lose your weapon?!*\n\nShe slowly shook her head, raising her arms to show him the psychic energy cascading down her arms. *Killing them like this felt more personal,* she replied, her voice grim.\n\nJohn was shocked at her tone, but he gestured to the door to proceed, this being neither the time or place for explanations. Alyssa was fearless as she strode out into the corridor, and she glanced both ways, before freezing when she looked to his left. John looked down that stretch of corridor, and grimaced at the sight of a half-dozen horrifically broken corpses that had painted the corridor red with blood.\n\nIt wasn't the bloodbath that had made Alyssa freeze though, and John felt a rush of panic when he spotted the black-clad ninja stalking down the corridor towards them, sword at the ready. \"That's her!\" he blurted out. \"The assassin that knocked me out and captured me.\"\n\nHe could see Alyssa bristle with fury, the glare from her eyes intensifying, as she squared off against the deadly assassin. He heard the odd hum from the sallow-faced woman, and she charged towards them, moving in a blur, she was running so fast. \n\nAlyssa simply held out her left arm towards the sprinting woman, then raised her hand, lifting her from the floor. The assassin struggled violently, thrashing in that invisible grip, and wriggling frantically to escape. Alyssa began to slowly close the fingers of her left hand, constricting her grip, and drastically limiting the amount the assassin could writhe about.\n\nJohn glanced at her, and was stunned at the look of incandescent rage twisting Alyssa's features. She lifted her right hand, and mimed a stinging slap, which was echoed a second later by an actual slap as her force hand belted the assassin across the face. Alyssa didn't hesitate, and backhanded her with another telekinetic slap. Back and forth she went, pounding the cyborg into unconsciousness. \n\nJohn saw the black-garbed woman fall limp in the ghostly grip of Alyssa's telekinetic fist, and as the slaps continued, he realised that Alyssa had every intention of beating the woman to death. He held out his hand, placing it on her shoulder, and said softly, \"Let her live. She might have information on the man behind all this.\"\n\nAlyssa shot him a furious glance, her right hand frozen in the air, waiting to deliver another mighty blow as she snapped, \"You don't know what she did! She deserves far worse than this!\"\n\n\"Tell me later, but we'll take her prisoner for now,\" he said soothingly.\n\nThe blonde girl sagged, her rage spent, and she nodded wearily. They turned and began to walk back to the hangar bay with Alyssa leading the way, and Shinatobe's limp and battered body floating along behind them.\n\n***\n\nIrillith's violet eyes darted around nervously, searching for anyone else attempting to run into the hangar. There were a number of bodies piled up around each of the doorways, with big chunks blasted out of them by the Pulse Lasers. The steaming corpses were an excellent deterrent, and she hadn't seen any signs of movement for the last couple of minutes.\n\n*Incoming friendlies,* Alyssa called out to the Maliri girl. *Hold fire to your left, we'll be right there.*\n\n*Are you and John okay?* Irillith asked with concern. She was relieved to hear Alyssa's voice had returned to normal, and wasn't followed by that disturbing echo.\n\nAlyssa sounded tired as she replied, *Yeah we're fine. Leaving cover now.*\n\nIrillith glanced to her left, and saw, Alyssa, and John jog over to the Raptor. Her eyes widened in surprise when she saw a black-clad figure floating along behind them. The trio boarded the Raptor, and the moment they were aboard, Irillith lifted off the deck and closed the loading ramp. The gunship floated there peacefully while Alyssa, John and their mystery guest floated up in the grav-tube to join her.\n\nShe rose from her chair, and rushed over to join them, flinging an arm around them both as she gasped, \"I'm so glad you're back!\"\n\nAlyssa patted her on the shoulder and gave her a sad smile, then slipped out of the hug and walked over to the pilot's chair. Figuring that the women on the Invictus would want to know as soon as possible, she broadcast to them, *We're safe, girls. John's with us and we're heading back to the ship.*\n\n*Thank God for that!* Dana exclaimed. She paused and asked hopefully, *Did you fuck up that evil bitch who wrecked my ship?\"\n\n*Mostly,* Alyssa replied. *We took her prisoner.*\n\n*Did you now...* Dana said, her voice dripping with menace.\n\nRachel's voice filled her mind next as she said, *Calara's sedated at the moment. I dressed her forearm, and she's resting comfortably.*\n\n*Thank you,* Alyssa replied, her voice full of gratitude.\n\n*You're very welcome,* Rachel said sadly. *She's out of any immediate danger.*\n\nJohn and Irillith sat down on chairs at the back of the cockpit, and Alyssa dumped the assassin on the cabin floor. She glanced at the Sector Map by habit as she rotated the Raptor and prepared to fly out of the battlecruiser's hangar bay. It therefore came as quite a surprise when she saw the Invictus hurtling across space towards their current location.\n\n*I thought an explosion destroyed the Tachyon Drive,* she thought to Dana. *How did you jump into hyper-warp?*\n\nDana replied immediately, saying, *That asshole only took out the power couplings to the Drive system. I guess they didn't want to risk triggering a Drive detonation, so they just tore up the power connections instead. Faye assisted with the maintenance bots, and it didn't take long to replace all the damaged power couplings.* \n\n*Shields up when you arrive, the battlecruiser's still a threat,* Alyssa cautioned her friend as she powered up the engines, and blasted out of the hangar. As soon as she had cleared the wrecked hangar doors, she started making evasive manoeuvres as she put more distance between the Raptor and the Amaterasu. She sounded relieved as she added, *Well done, Sparks. That's one less thing to worry about.*\n\n*Have you told John yet?* Dana said in a subdued voice.\n\n*No,* Alyssa replied, her voice heavy with grief.\n\nThe Raptor soared away from the Amaterasu, with Gatling Laser bolts sailing around them harmlessly. It didn't take long to get clear of the battlecruiser's fire arcs, and as they started to pull well clear of danger, the Invictus jumped in. A flashing light on the pilot's console signified that they were being hailed, and Alyssa smiled as she pressed the button to answer the call.\n\nDana's face appeared on the viewscreen, and her eyes darted about, checking to make sure John, Alyssa, and Irillith were all okay. She breathed a big sigh of relief to see they were, and said, \"Goddamn it's good to see you all safe and sound.\"\n\nJohn rose from his chair, and smiled back at her, saying, \"You're a sight for sore eyes too, Sparks.\"\n\nShe grinned at him, but her eyes flicked offscreen to the Tactical Map, and when her expression darkened, John knew what she was looking at.\n\n\"Can I waste it?\" she asked him, with a fierce longing in her voice. \"I really need some payback right now.\"\n\nJohn figured she was pissed off about the assassin damaging the Invictus, so he nodded and replied, \"Sure, but don't hang about, we need to be on our way.\" He was surprised to see that Dana was alone on the Bridge, so he asked, \"Where's everyone else? How come Jade and Calara aren't flying the ship and manning Tactical?\"\n\nDana looked forlorn, and a dark shadow fell over her face as she glanced at Alyssa. \n\n\"I need to tell you something,\" Alyssa said, turning in her chair to face him, her face a mask of grief.\n\n***\n\nJohn listened aghast as she filled him in on everything that had happened on the Invictus. He was horrified to hear of Calara's terrible injury, and he stared at her in shock as she spoke in a soft voice, informing him about what had happened to Jade. He didn't react at first, and just sat there, stunned into inactivity, staring vacantly out the cockpit canopy.\n\nIn the distance he could see Dana bring the Invictus closer to the battlecruiser Amaterasu, and then lay into the shieldless ship with a relentless barrage of Beam Laser fire. What Dana lacked in accuracy, she more than made up for with vengeful enthusiasm, and she closed the distance to medium range so she could open up with the Pulse Cannons too. It took her less than a minute to reduce the mighty battlecruiser to a glowing field of debris, leaving nothing recognisable of the once huge vessel.\n\n\"I want to see her,\" John said, his jaw clenching as he tried to hold in his emotions.\n\n***\n\nThe Invictus was on its way once more, with a dejected Faye back on watch. The rest of the crew were up in Medical holding a vigil for their fallen friend. They had stuffed the assassin into a cryostasis pod, and Calara was resting peacefully in one of the hospital beds, her ravaged forearm swathed in bandages. John and the rest of the girls had gathered around the operating table, with Jade's lifeless body still and silent before them. She wasn't the Jade Tiger any more, and she hadn't changed into her familiar Nymph shape either. Jade had reverted into something else entirely.\n\n\"When did this happen?\" John asked Rachel quietly, his voice catching at the end. He hadn't been able to take his eyes off the fallen Nymph, and he kept waiting for her to suddenly sit up, then beam a sparkling smile at him. The last time his heart had ached this badly was when he'd lost his grandparents, and the sense of loss was overwhelming. \n\nRachel was standing on the other side of the table to him, and she looked up from Jade's corpse and replied, \"When I removed the sword from her body.\" She let out a mournful sigh, and added, \"She began to shimmer, like she used to when she was shapeshifting, and she changed into this form.\"\n\nJade was smaller now, a little over five feet tall, although it was hard to tell with her lying prone on her side. Far more remarkable than the change in height was the cat-like tail she'd grown, as well as the pointed set of ears high on her head, and the light covering of dark green fur over her body.",
        "\"This must be what the Nymphs looked like naturally, just after the Mael'nerak made them,\" Rachel suggested, as she gazed down at Jade. \"Her DNA did suggest a varied mix of sources, but feline was the base template.\"\n\n\"I still can't believe she's gone. This doesn't feel real,\" Dana whimpered.\n\nIrillith had started crying, and tears ran down her face, as she sobbed, \"She was so lovely, but she'd been through so much. She told me she'd started to remember her past; all those years spent as a slave, and the torture she went through.\"\n\n\"She never said anything!\" Alyssa protested, her stoic resilience crumbling rapidly now. \"Why wouldn't she tell me?!\"\n\nIrillith shook her head, and sniffed, \"She didn't want you to worry. She was so selfless, I've never met anyone like her.\"\n\n\"She saved my life,\" Dana whispered, reaching out to stroke Jade's hair as tears started rolling down her cheeks. \"I wouldn't be here now if it wasn't for her.\"\n\n\"Me too,\" Irillith wept.\n\n\"And me,\" Alyssa whispered, her shoulders shaking as she sobbed.\n\nThey looked to John, expecting him to join in with their tragic eulogy, remembering how Jade had raced to save him from the Drakkar Warlord.\n\n\"No, I won't let her go,\" he said abruptly, his eyes narrowing. \n\nRachel looked forlorn as she said, \"I scanned her, there's no brain activity. I'm sorry John, but there's nothing I can do for her.\"\n\n\"She's a construct made by the Mael'nerak. if he can create life, then I can too,\" he insisted stubbornly.\n\n\"I don't think it works that way,\" Rachel said, her voice full of regret. \"The Nymphs were probably created in a lab of some kind. The Mael'nerak would have undoubtedly needed to use radically advanced medical equipment when he was building these species.\"\n\nJohn looked more determined than ever, and said, \"If she's still shifting, then she can't be dead.\"\n\nAlyssa looked heartbroken as she said, \"I think we have to let her go, John.\"\n\n\"No,\" he replied obstinately. He glanced her way, and said, \"Give me everything you've got.\"\n\nShe looked shocked, but nodded obediently, slipping her slender fingers between his and holding his hand.\n\nReaching out with his mind to the Maliri Matriarch, he said, *Edraele, I'll need every last ounce of power you can spare.*\n\n*Of course John,* she replied, sensing his unflinching determination.\n\nJohn placed his hand on Jade's forehead, then closed his eyes, reaching out for the Astral Plane. He felt that massive resistance dragging him back into his body, and with a herculean effort he finally tore himself free, lurching into the spirit world. He could see the astral tether snaking from his chest, just as Alyssa and Edraele had described, and he turned around to follow that line which led back into his body.\n\nHe got a shock when he looked back at himself, seeing a shadowy echo superimposed over his body, and he instinctively knew that he was looking at the astral echo from Progenitor John. His malignant alter ego was still part of him, despite banishing his higher consciousness into that bottomless pit of despair. Shuddering at the thought that he still wasn't rid of the evil Progenitor version of himself, he knew in his heart that he'd have to face his own personal demon eventually.\n\nHe turned back to face Jade, staring down at the girl who was lying before him. He caught a bright flash of white from his right side, and when he glanced that way, he was so shocked he nearly lost control of his spirit form. As it was he felt himself being yanked back to his physical form, and it was only through an intense focusing of his willpower that he managed to hold himself in place.\n\n\"Hello, John,\" Radiant Alyssa said to him, with a glorious, benevolent smile on her face. \"I've been looking forward to speaking to you for such a long time.\"\n\nHe stared at the blindingly bright girl who was casting white light in all directions. She looked exactly like Alyssa, but he knew immediately that this being was something else entirely.\n\n\"It's you!\" he gasped. \"You've been intervening time and again, for months now!\"\n\nShe smiled at him kindly and said, \"Yes, and we'll talk later, I promise. For now, we have something else to do.\" Her eyes drifted down to the fallen Nymph, and she stepped close to John, placing her hand on top of his. She stared into his eyes, and murmured softly, \"You were right, you can save her. Let me show you how to bring her back.\"\n\nHe was entranced by her beautiful eyes, and he watched completely mesmerised as she leaned into him, and placed a tender kiss on his lips. Kissing her was just like those thrilling electricity kisses he'd started sharing with Alyssa, and his eyes flared as she embraced him. He could feel her guiding him, and he turned his focus to Jade, who was lying before them. \n\nShe was dead, it was true, but Jade wasn't an ordinary mortal. There was still a spark residing within her, and he knew that he merely had to breathe life into it to make it burst into flame once again.\n\n\"That's right,\" Radiant Alyssa encouraged him. \"Now channel your will into her, and ignite that spark! She can be reborn again!\"\n\nHe did as she urged, going by pure gut instinct rather than any kind of rational thought or action. He could feel waves of power throbbing into him from Edraele, and the same from Alyssa, but on an altogether vaster scale. His body pulsed dangerously as he struggled to contain all that raw psychic energy at once, and he opened up a channel to Jade, then poured all that energy into her. He could feel himself growing weaker as he added his own reserves to the torrent of Eldritch power streaming into the Nymph, and he stumbled backwards, breaking contact with her as he hurtled back into his physical form. The last thing he saw was Radiant Alyssa smiling at him wistfully.\n\nJohn drew in a big lungful of air as he was dumped back into his body, and he tottered unsteadily on his feet as he tried to hold his balance. He blinked a couple of times to get his bearings, as Alyssa and Dana helped keep him from falling over. \n\n\"You did it...\" Rachel gaped in wonder, but the focus of her attention wasn't on him.\n\nHe saw similar looks of awe on the faces of the other girls, and they were all staring at Jade, who was now sitting upright on the table. She had an astonished expression on her face, and she turned to gaze at him with a reverent look of adoration in her eyes.\n\n\"Jade, I can't believe it...\" he mumbled, shaking his head in amazement.\n\nHe gaped at her for a moment, and then gathered her in his arms, hugging her fiercely and never wanting to let her go. The girls hugged her too, crying openly now, but with relief rather than with aching sadness.\n\nAlyssa finally looked at the Nymph, an exhausted smile on her happy face, and she laughed weakly as she said, \"Happy birthday, Jade.\""
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "anal",
        "swallow",
        "cum inflation",
        "psychic",
        "violent",
        "shapeshift",
        "cyborg",
        "bossfight",
        "over 9000"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-60"
}