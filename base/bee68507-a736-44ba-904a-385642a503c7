{
    "title": "The Talk",
    "pages": [
        "Author's Note: Obviously how-to's will not work for everyone, you may be in a unique situation. However, I hope that with this how-to more parents fill find it easier to figure out how to talk to their children about sex. As I just ended my teenage years 2 years ago, I'm speaking from a very recent viewpoint and generation; I hope to help. Thank You.\n\n****************************\n\nThe Sex Talk is one of the scariest things to have, not for the parent but for the child. Speaking as someone who had their \"sex talk\" in the 90's, I can remember how much I dreaded it each and every time. Fortunately I had a very understanding and compassionate mother who totally understood teenagers.\n\nMom: \"Do you want to talk about drinking?\"\n\nMe: \"No.\"\n\nMom: \"Ok, just if you're at a party and you get drunk, call me. Don't try to drive EVER and don't get into a car with someone who's been drinking. You won't get into trouble if you call me. You don't call me and you try to drive or go with someone who's been drinking and you will never leave this house again. Do you want to talk about drugs?\"\n\nMe: \"No.\"\n\nMom: \"Ok, well if you're going to try it, do it here where I can monitor you and don't try anything stronger than marijuana. I'd prefer you don't do it at all, but if you're going to try then I don't want you getting arrested for it and I'd rather know that it's going on. Do you want to talk about sex?\"\n\nMe: \"NO!\"\n\nMom: \"Ok, well if you're going to do it make sure that you let me know first so that I can put you on the pill and buy some condoms.\"\n\nAwkward silence.\n\nMe: \"Mom, I'm waiting for marriage.\"\n\nMom: \"That would be great honey, but let's be realistic. I'd prefer it if you wait for college but no matter what I want you to let me know first so that we can put you on birth control. And if you save yourself till marriage that's wonderful.\"\n\nOk, so not only was that incredibly awkward, but it turned out to be right. I never did try drugs because they weren't something that interested me. However, I also never got into a car with someone who was drunk and I never tried to drive after I'd been drinking. My mom didn't flip out when I did get into car accidents, since I wasn't drinking, and so I knew I could trust her. That's why when I was 17 and with my first serious boyfriend, I knew it was ok to go to her and tell her I was ready to have sex. And she was a little startled, and not thrilled, but she didn't yell at me or try to talk me out of it. She just put me on the pill and made sure that I knew how important protection was. \n\nCompared to some of my friends I was extremely lucky. For a 14 year old, my sex talk was mortifying but at least my mother was understanding and open. One friend's parents wouldn't talk to her at all about sex, she had to come to us and our parents for advice and help. She got her birth control from Planned Parenthood and her parents never knew for sure what was going on - they were too embarrassed to talk to their daughter about something like that. Another friend's mother put her daughter on the pill as soon as she turned 14 with the excuse of regulating her periods, she was the only one of us who actually waited till marriage before having sex. One very unlucky friend had parents who told her that sex before marriage was completely wrong, they refused to discuss anything but abstinence; at age 16 she was pregnant.\n\nNow, obviously the same approach isn't going to work for everyone, but most of my friends said they wished that their parents had approached them in the way my mother approached me and my brother. A few said that they wished that their parents hadn't tried to talk about them at all, but I did notice that all of us who's parents had talked to us about it and were mostly open-minded fared the best. Those whose parents expressed loud disapproval either got children who were ashamed of their own desires, unsure about themselves and what they should do, and still went and had sex anyway (hopefully with protection, if provided enough information about it by the school's health class and their friends), or they got children who rebelled and did it without any protection at all. \n\nA parent can hope that their child will wait, that their child will believe in the same morals and religious reasons that they do... but that doesn't always happen. And rather than feeling more inclined to have sex after finding out my mother's open attitude, I actually wanted to do it less. Because I felt obligated to tell her... after all she'd approached me in such a sympathetic and understanding way, so open, so accepting... how could I justify NOT telling her? Which meant that I REALLY wanted to wait. And so I did, I was one of the last of my friends to have sex, and I was definitely the best protected when I did have sex for the first time. Also, the guy I lost my virginity to is the guy I am still with today and one day hope to marry... again that's also not something that is going to happen to everyone, but for me it meant that I chose my first partner with utmost care. Because, you see, my mom was going to know that I was having sex with him. And that meant that not only would I feel the need for her approval, but I really wanted to be sure that I was ready for him if I was going to be telling my mom that my sex life was really starting.\n\nThe best tips that I got from my experiences, and my friend's, were\n\n1. Be open about it. Don't be afraid or ashamed to talk about it, because your child might then feel that it is something to ashamed about. That doesn't mean it will inhibit them from doing it once they decide to, but it does mean that they'll be less inclined to talk to you about it. \n\n2. Be honest. If you would prefer that they wait for marriage, TELL THEM. But also let them know that you'll love them no matter what they choose, and you'll be there for them.\n\n3. Express your deep concern that no matter what they use birth control. Whether they tell you or not, whether it's in your belief system or not - because if birth control isn't, I doubt that a child before marriage is either. Of utmost importance is THEIR safety, not your peace of mind. There are so many diseases out there, so many risks for teenage pregnancy, if nothing else they need that protection.\n\n4. Express some kind of belief that they will make the decision that is right for them. Don't try to order them to do anything - that only causes rebellious feelings. Let them know that in this, it's their judgment that matters.\n\n5. ASK them to come to you when it's time so that you can provide the birth control. If you are honest and open and they don't feel like they'll need to be afraid of your judgments or that you might not love them anymore, then they will come. \n\nMost importantly, remember that this is about them, not about you. Because no matter what you do, they are going to make their own choice on this. You cannot be there every second of every day, making sure that they are following your wishes on sex. They see it on TV, in movies, hear about it on the radio, talk about it at school with their friends. In the end, it's their judgment that you're going to have to rely on. So you can either be a part of their life in this, or not. If they feel that you'll judge them, that you won't accept them, that you'll deny them if you find out that they've been having sex, then they won't come to you. They won't talk to you about it. And it's a much higher chance that they'll be irresponsible about it. \n\nAnd whatever you do, don't panic. You act like it's the end of the world and I can almost guarantee that your kid is going to rebel. Or that they're going to be so afraid of you that when the times comes, they aren't going to be able to talk to you about it at all.\n\nYou may not believe it's right... but I hate to tell you: THAT DOES NOT MATTER. Your kid is going to do what he or she wants anyway. \n\nThis is the best advice I can give to parents who are trying to deal with their teenager's sexuality. Be open, be honest. Tell them that you weren't perfect either. Tell them that you waited till marriage. Tell them about your co-worker's daughter who's pregnant at 15 because she didn't use birth control. Make sure that they know about AIDS and STD's. Give them the knowledge and the support that they are going to need, because this is about them and what choice they're going to make. All you can choose is to be there for them, or not. "
    ],
    "authorname": "Goldeniangel",
    "tags": [],
    "category": "How To",
    "url": "https://www.literotica.com/s/the-talk-2"
}