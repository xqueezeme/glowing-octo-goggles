{
    "title": "Felicity Ch. 39",
    "pages": [
        "Chapter 38: Audrey\n\nI was then thirty-two. I had married at twenty-four and divorced at twenty-eight. My ex and I mistook lust for love. When the lust was satisfied we had nothing else so we went our separate ways as friends. We had talked about having a family but realized early neither of us wanted children; which turned out to be a blessing. \n\nEvery once in a while my ex and I had fucked until she re-married.\n\nI had concentrated my efforts on my career and had risen in the company hierarchy within three rungs off the top.\n\nThen I was fired. \n\nI was stunned. I had made more money for the company than anyone. I got along well with all except one but I still treated her politely.\n\nHer name was Audrey, an intense, humorless redhead with no tits. \n\nShe also made a lot of money for the company but was always second to me in that regard. \n\nI wondered if she had somehow engineered my firing. \n\nI immediately decided that was unfair, she did not have a mean bone in her body and we got along well outside the boardroom.\n\nIt had been almost a year since I admitted her proposal had a better chance to succeed than mine. She was first shocked then elated. \n\nIt had been the only time I had seen a real smile from her. I had decided I liked her smiling at me and had backed her ideas on occasion; she began to back mine on occasion. I saw her smile at me at least once each day from then on.\n\nSomehow that made me happy. \n\nHappier than it should have, I thought.\n\nOur boss, Randall, was a nice guy that had no business running a multi-million dollar company. However a conglomerate owned our company and his father owned the conglomerate. \n\nRandall did not try to hide that he was in over his head and simply relied on Audrey and me to steer him straight. We seldom agreed on what straight was but Randall did have the ability to see both paths clearly and pick the right one. \n\nHe was an excellent administrator.\n\nThe two people that ranked between him and me were corporate lackeys for his father. We seldom saw them.\n\nOn my way to his office it occurred to me Randall would never fire me. He depended on me and we were friends.\n\nAs I walked in his office I said, \"I take it you had no say in me being fired.\"\n\nHe gave me a look of great relief and nodded. \"Correct and I am very happy you could see that. That was my father's idea. George convinced him that you were usurping my authority. I know you were not and would not but they saw my defense of you as proof you needed to go. Sorry. \"\n\n\"You got fired too?\" we heard from the doorway.\n\nRandall and I nodded yes.\n\nAudrey had come to his office to tear him apart but suddenly understood it was not his doing.\n\n\"What are you going to do?\" she asked him in sympathy.\n\nMy opinion of her rose considerably with that question, she was more worried about him than for herself.\n\n\"I have both of your cell numbers and have you listed under A & J Consulting Firm. You need to incorporate it, I have already hired you.\"\n\n\"You are going to get in trouble when George finds out,\" I said.\n\n\"Nah, George knows less about this stuff than I do and he would never equate you to the consulting firm. Go collect your severance and clean out your desk. And please look upset when you do. \n\n\"By the way your first check as consultants is also in the envelope. Use the money to set up.\"\n\n\"Right chief,\" Audrey and I echoed. \n\nWe suddenly had the same perverse thought and kissed each of his cheeks.\n\n\"Oh, you are both so fired,\" he said as we laughed our way out of his office.\n\nWe stomped our way through the offices and to the elevator. Once the doors closed we began to laugh.\n\nShe looked cute. I had to fight off the urge to kiss her.\n\nAs we got to our cars in the parking garage and loaded our stuff she suddenly stopped and asked, \"Do you mind having me as a business partner?\"\n\n\"Well, I had not thought about that, I mean what do business partners do?\"\n\n\"I don't know but I have a cousin that's a lawyer, actually I have several cousins that are lawyers, but I have one I could call and make and appointment for us.\"\n\n\"Do that.\"\n\n\"Now?\"\n\n\"Yes, why not. We are unemployed, it is just barely nine in the morning and we have time to see him now.\"\n\n\"Her. OK but her office is seventy-eight miles away.\"\n\n\"Lets go to the coffee house around the corner, you can call her from there.\"\n\nWe found a quiet table in a corner and I went to get us coffee and kolaches as she called. \n\nAs soon as I sat she said, \"She wants us to go down now and take her and her partner to lunch. They will be going to Las Vegas for a concert this afternoon.\"\n\n\"Where are they?'\n\n\"Felicity. Its straight down the freeway to the coast then a right then a left, it should take us about an hour.\"\n\n\"Like I said, we are poor jobless people, we have the time.\"\n\nWe were not poor people and we were not jobless but it was the appropriate line.\n\n\"Do you have your pay envelope with you?\" she asked.\n\n\"Yes, in my jacket.\"\n\n\"See if the set up check is in it.\"\n\nIt was and it was much larger than expected and so was our severance pay. She was just opening her envelope and just stared at hers.\n\n\"This is more money than a teacher makes in a year. I need to show this to Helen.\"\n\n\"Who is Helen?\"\n\n\"A teacher cousin. Are we going to keep the money secrets from each other?\"\n\n\"No,\" I said and put mine on the table.\n\nShe put hers next to it and the difference was one cent in her favor.\n\n\"He likes you better than he likes me,\" I whined.\n\n\"Yes, and don't forget it,\" she giggled.\n\nI again had to fight off the urge to kiss her.\n\nWe stayed to drink the coffee and eat our pastry then she drove us there in fifty minutes. The little lady had a lead foot. \n\nOn our way she told me about her hometown and seemed surprised I had never heard of it. She described the resort and the Bed and Breakfasts then went into details on some of her friends. It was clear to me she loved the place and its people.\n\nShe parked by an office building just into the new part of town. She explained it was the line past which the last hurricane had had destroyed the place. \n\nWe went into the building and took a right and she yelled her arrival to everyone. A small redheaded flash flew to her and gave her a hard kiss right on the lips.\n\nHer cousin Clara looked just like her except she had noticeable tits.\n\nHer partner Fiona was the definition of a blonde bombshell. She kissed Audrey right on the lips too.\n\nClara filled us in on the procedure to incorporate and reminded Audrey that the office could be anywhere, even the town of Felicity. \n\nShe added that with today's electronics we did not even need to share an office although she strongly recommended we did, fewer misunderstandings that way.\n\nClara then casually mentioned that her building had room for two and a receptionist/secretary on the second floor.\n\nShe said there was a website building firm in town and we could be in business in two weeks.\n\nWe signed forms and handed her the set-up check.\n\n\"This is a lot more than I need. I will keep it until your are in business then give you back the rest for your office lease. By the way the best accounting firm in town is at the other end of the hallway.\"\n\nClara handed the check and the papers to her secretary with a kiss then took Audrey's hand and we walked to an Italian restaurant two blocks away into the older part of town. \n\nI was rapidly getting an entirely new perspective on Audrey. She was animated, laughed a lot, and was always kissing someone. \n\nAmong others two stunning blondes ran out of a ladies gym and just mauled her with kisses, then ran back to the gym.\n\nEveryone was happy to see her.\n\nAfter the three kissed their way to a table and we sat I said, \"Apparently we have two weeks of vacation. My first in two years,\" I said.\n\n\"My first in three,\" Audrey said. \"I had never taken a vacation until I got fired.\"\n\n\"You should get fired more often,\" Clara said.\n\nThe hostess came over and kissed all three with an extra bit of lip for Audrey. I was introduced to her and she kissed my cheek then asked what I wanted for lunch. She took my order and left without asking the other three.\n\n\"Why didn't she take your orders?\" I asked.\n\n\"She knows,\" Audrey said.\n\nClara said, \"Come to Vegas with us, Ruthie has shows the next four nights. Her Felicity fans are going to the show tonight, this will be Fiona and my second one, our first since she and Sean married and with Nancy in the show.\"\n\n\"How are you getting there?\"\n\n\"Felicity Air. There may be some seats left, let me call Carly.\"\n\n\"Who is Ruthie?\" I asked.\n\n\"A good friend,\" Fiona answered. Those were her first words to me. She had a British accent.\n\nIt eventually dawned on me that Clara's partner was not a business partner but a personal one. They still seemed like an odd couple, a diminutive redhead and a tall blonde. However there was definitely a palpable bond between them. Somehow I was happy to see that.\n\nAll three noticed my smile for them. \n\nAudrey seemed to be proud of me for some reason.\n\nClara interrupted our devouring of the linguini and shrimp lunch and said, \"There are three open seats, do you want two of them?\"\n\n\"Yes, but we don't have any clothes other than what we are wearing.\"\n\n\"We will be there early enough to do some shopping. \n\nMarissa!\" Clara called to the hostess/manager/co-owner. \n\n\"There is a seat available, go make juicy promises to Julian and go pack.\"\n\nClara got a wild kiss on the lips and Marisa ran into the kitchen then ran out to a car.\n\n\"When are we leaving?\" Audrey asked.\n\n\"Now,\" was the answer and we stood and paid our bill. \n\nI had been included in the proceedings but was trying to come up with a reason to beg off. The big problem was I had not driven and Audrey obviously really wanted to go so I kept my mouth shut and went to their airport.\n\nThere were about fifteen people walking to a jet on the tarmac all carrying bags. I was carrying Clara and Fiona's bags.\n\nWhen the crowd saw Audrey behind them they all ran back to us and kissed her on the lips and hugged her. Some of the ladies kissed my cheek when she introduced me to them. Apparently just knowing Audrey made me their friend.\n\nAs we boarded the pilot and co-pilot, both were women, visited with the passengers and kissed all the women on the lips. Audrey introduced me to them and I got hugs. There were only four guys on the plane but we were treated well. As soon as Marissa ran onto the plane we took off.\n\nMost of the conversations on the way were about what was new in Ruthie's concert and whether someone named Nancy was going to have more than five songs. The one named Carly, a clone for Clara and Audrey, came by and after drowning Audrey in kisses gave her two tickets and told us we would be staying at Caesars Palace. We had the room Adrian and Martina had reserved.\n\n\"They went to Puerto Rico this weekend. You will not need to pay them back, they do this often,\" Carly said.\n\nThat sent me into a period of concern; Audrey and I were to be in the same room. Awkward was a good term for the conundrum. Audrey did not seem at all concerned and visited with family and friends. \n\nA guy that introduced himself as Marshall sat with me as Audrey visited down the aisle and sat with his wife. \n\nHe told me that everyone hoped I was a good guy and would treat Audrey well. \n\nHe advised me that Audrey was still mourning the death of her mother three years before. \n\nShe had left town to grieve in private but many in town had visited her in the city to lift her spirits. She was better but this was just her second trip to town in three years.\n\nHe also told me that she was not a \"fanatic\" in her lesbianism, and winked as he returned to his seat.\n\nIt had never occurred to me Audrey was a lesbian. Maybe sharing a hotel room would be OK. I however felt disappointment for some reason.\n\nI now understood the humorless part of her life.\n\nAs soon as we landed we were picked up by a bus and driven to our hotel. Audrey and I immediately went to a clothing store but by the time we got there we had decided to wear our work clothes to the concert and just buy clothes for the rest of our stay which would be until Tuesday. That was when the plane would come back for us.\n\nWe had our work clothes dry-cleaned as soon as we returned to the hotel and I took my shower first. By the time Audrey got out of the bathroom we had our clothes back and made it to the theater with five minutes to spare. \n\nAgain a lot of people hugged and kissed Audrey including two tall older redheaded women. Audrey just flew into their arms and they drowned her in kisses. The lights were lowered before I was introduced so we sat and waited for the curtains to open.\n\nI was in shock when they did, the most popular female singer in the world was center stage and the previously most popular singer in the world was backing her up. \"Who was Ruthie?\" I wondered.\n\nHalfway through the show Melody began to kibitz with the ladies in the front row. We were sitting in the middle of the second row.\n\nI was again shocked when the star stopped in mid-kibitz to tell Audrey she was very happy to see her.\n\nI did not pay that much attention to popular music and even though I had heard Melody's songs before I was not ready for the amazing show she put on. She even covered songs by a long dead diva. The crowd was mostly women with a smattering of gay men and couples, all stood to give an ovation when the show was over.\n\nOne of the tall redheads came over and took Audrey's hand and led her to a foyer next to the stage. Audrey took my hand and led me alongside her as she clung to the bigger of the two women. We ended up holding hands until a door opened and we were led backstage. \n\nAs soon as Melody saw her she opened her arms and Audrey jumped into them and gave her a big kiss.\n\n\"You must be Jack, good to meet you,\" a tall redheaded guy said as he shook my hand. The two tall ladies kissed us and walked on.\n\n\"Hi, I'm Nancy. Glad you got Audrey to come. She has said very nice things about you.\"\n\nI was stupefied, a multi Grammy winner had introduced herself to me and it got worse when Audrey introduced the star of the show as Ruthie. \n\nAs it turned out the guy that had welcomed me first was her husband and band manager. I stood next to him as he explained the Melody/Ruthie deal as the women kissed him each time they walked past. Some kissed my cheek before they introduced themselves.\n\nI was in a confused swirl until we left the stage.\n\nAudrey and were both hungry so we went to a famous Chinese restaurant in Caesars. Several of Audrey's friends were there and I managed to hear some of the gossip. All seemed to like me for some reason.\n\nAudrey related to them how our day began and all laughed at the deviousness of our former and future boss. \n\nI also heard Audrey agree to meet two of the ladies in their room a little later. \n\nThe food and conversation were exceptional, I was well entertained.\n\nAs soon as we got back to our room Audrey changed into a t-shirt without bothering to go into the bathroom. She simply turned her back to me took her dress off and put on the shirt. She had been and was still braless. She wore bikini panties.\n\nShe left barefoot after advising me, \"Don't wait up.\"\n\nI was exhausted and was soon asleep. I did feel Audrey get in bed but did not fully wake-up. I had no idea what time that was. \n\nI was up first the next morning and took a shower. As I got dressed I looked at the bed and saw that Audrey was not under the cover and that her t-shirt had rolled up. \n\nShe did have tits, they were small but she had the most beautifully delicious puffy nipples I had ever seen.\n\nI felt my mouth water.\n\nI decided to let her sleep and get breakfast somewhere but before I made it to the door I decided to tell her where I was going. \n\nI covered her with the sheet and knelt next to her. I moved her hair to one side of her face and again had to fight the impulse to kiss her. \n\nI said, \"I am going out to find breakfast.\"\n\n\"The buffet at the Bellagio, save me a seat,\" she mumbled.\n\nI smiled and agreed to do so then left. The Bellagio was across the street from Caesars so it did not take me long to get there. What did take a long time was deciding the priorities for my first plate. I had already decided there would be several trips to the buffet. On my way to find a table I ran into Sean, Ruthie's husband. He pointed at a large table that had a blonde; the bands string players, and two older women.\n\nI was about to continue my search for a table when the blonde with glasses saw me and waved me over. She turned out to be Ruthie. \n\nThere was no way for me of telling she was also Melody.\n\nAs soon as I sat Ruthie asked me if Audrey was still in bed. \n\nI said yes but expected her to join me eventually.\n\nI was introduced around and learned the older women were Sean and Ruthie's mothers. The string players turned out to be husband and wife.\n\nSean returned with a big plate of sausages covered in sausage gravy.\n\n\"Where is that?\" I asked.\n\n\"On the table at the front,\" he said. \"Is Audrey joining you?\"\n\n\"Yes, at least she said she would. She sent me here.\"\n\n\"It may be a while, Sis and Trini are still sound asleep. It was their first get-together in two years and I doubt they got any rest,\" Sean commented.\n\nNancy and her friend Carmen joined us and we all scooted over some. The two tall redheads, sisters Mo and Wendy, and a blonde named Marie, one of the backup singers, joined us and we had to find a bigger table. \n\nMo was the woman Audrey had clung to the previous evening.\n\nAudrey came over and after kissing everyone but me she ended up sitting on Sean's lap. He decided to go get more food and simply lifted Audrey to my lap.\n\n\"I am going to follow him, save my seat,\" I said and lifted her to the bench. When we returned Audrey sat on my lap then ate a third of the food on my plate.\n\nRuthie said to me, \"The smaller the redhead the faster the metabolic rate, the more they eat. Karen and Maggie are the only two that out eat her, so to speak.\"\n\nLaughter followed that remark.\n\nI had not noticed until she got up to get more food but my free arm had settled around Audrey's waist as we ate. She had not objected. When she returned she again sat on my lap even though there was now room at the table. She put my arm around her waist and continued eating. I ate a third of the fruit on her plate.\n\nEventually we quit eating breakfast and most decided to go back to bed. Several of them had to work that night.\n\nI had never been to Vegas and as it turned out Audrey had not either so we decided to see the sights. \n\nAt the Venetian we rode a gondola and got that picture then bought tickets for The Blue Man Group. We toured the Wax Museum then did some more shopping, we got swimsuits and sunglasses.\n\nAs we walked I asked Audrey to describe for me the people I had met and was likely to meet. I specifically asked about Trini and the one everyone called Sis.\n\n\"She is Sis to Sean but Cis for Cicely to everyone else. Marti is their Mother. They were from California then Marti moved to Florida then Sean and Ruthie met at a lesbian biker bar and the rest was history.\"\n\n\"Lesbian biker bar?\"\n\n\"I'll take you there.\n\nOh, Cis and Trini refuse to admit they are a couple.\"\n\nShe told me about her lesbian trysts with them and the fact she and Sean had fucked. So had she and Ruthie, Carly, Clara, and Edie, among others. She explained that many women in Felicity were gay and many more were bisexual.\n\n\"Ruthie, Edie, and Carly are lesbians that fell in love with men. There are several others that fit that classification you have not met including the couple whose tickets and hotel room we got. \n\nNo one in town is shy about showing their love so there is a lot of hugging and kissing but those do not necessarily mean anything, well except I love you. ",
        "We don't do air kisses or cheek kisses unless we don't know them very well. \n\nUnless asked don't kiss the ladies, let them kiss you.\"\n\nShe then kissed my lips.\n\n\"Can I kiss you back?\"\n\n\"Not yet.\" \n\n\"How much have you told others about me?\"\n\n\"Just how much I hated you for being smarter than me.\"\n\nI was going to push on that until I saw she was blushing. \n\nI again had to restrain my urge to kiss her.\n\n\"You sure I can't kiss you back?\"\n\n\"No,\" she said and walked on leaving me confused. \n\nI eventually decided she meant she was not sure I could not kiss her back. I hoped.\n\nSomehow I began to touch her as we walked around The Strip. \n\nIt was not on purpose, my hand and her body simply made contact often. I blushed and apologized at first but she never shied away so I kept my hand on the back of her waist at times. \n\nWe went up the Eiffel Tower and watched the Bellagio fountains dance from there. My arms were around her waist while we watched; it was crowded up there, although perhaps not that crowded.\n\nAt M&M world I bought her a shirt with the green M&M character. She kissed me.\n\nI kissed her back.\n\n\"Fresh,\" she said with a smile.\n\nWhen we found ourselves near our hotel we decided we were sleepy so we went to our room. We stripped down to shorts and t-shirts and got in bed.\n\nOur bed was an extra large king bed, we had plenty of room between us. We were both sound asleep within seconds.\n\nI got up once to pee; she got up once to pee. We were closer to each other when we returned to bed.\n\nI dozed off and when I awoke we were spooning and my hand was on her panty-covered ass. \n\nI smiled and went back to sleep.\n\nI was alone in bed when I woke up. I got up to take a leak and found her in the shower. I took a leak anyway and felt her watching me, which in turn made my cock become erect.\n\n\"Are we going to eat before the show or after?' she asked.\n\n\"Why not both?\" I answered.\n\n\"In that case stop playing with yourself and let me get out of the shower so I can get ready.\"\n\n\"You can just go ahead and come out and I will go right in and take my shower.\"\n\nThere was silence for a few moments then suddenly a wet and naked woman was in front of me reaching for a towel. I did not know whether to look at her tits or red pubic hair until she said, \"Your turn.\"\n\nShe was looking at my crotch. I got naked in front of her then got in the shower.\n\nWe had just played, \"show me yours and I will show you mine\" quite successfully.\n\nWe had appetizers at a different famous chef's restaurant at Caesars and headed towards our show. Half way over to the Venetian her hand took mine and we held hands throughout the evening. We loved the show and did a lot of laughing. The only time she let go of my hand was when we needed to protect ourselves from splashing drums.\n\nAfter dinner at the Venetian we went dancing at Cleopatra's Barge in Caesar's and she seemed to be very pleasantly surprised to see I was a good dancer. She kissed me.\n\nI kissed her back.\n\nShe smiled.\n\nAfter an hour or so we went to our room.\n\nI went to bed wearing only boxer shorts. She went to bed wearing only a t-shirt. I kissed her lips as I said goodnight. She kissed my lips as she said goodnight. There was one more kiss for no reason at all. We both enjoyed it a lot.\n\nWe spooned and amazingly we both simply went to sleep.\n\nEarly the next morning she woke up and went to the bathroom, As soon as she was back in bed I went to pee. As I got in bed I noted she had taken her shirt off, she was naked. \n\nI took my shorts off, spooned behind her and caressed her ass.\n\n\"Masher,\" she said and took my hand off her ass and pulled my arm around her waist with my hand just under her tits. I slid my hand up so half her tit was in it and I got closer. \n\nI kissed her neck then asked, \"What do you want to do today?\"\n\n\"It's Sunday, there isn't much going on in town. The music people and crew will be leaving for home this afternoon if the weather there gets better. Getting naked between Clara and Fiona comes to mind.\"\n\n\"Can I watch?\" I asked in jest. \n\nShe did not treat the wiseass question as a joke. \n\nShe thought about it for a few moments before answering, \"I'll ask.\"\n\nMy cock was already hard and between her thighs, it jumped at her answer.\n\n\"Easy, I have not made my decision yet. I am trying to see if you even like me.\"\n\n\"I have always liked you. Yesterday morning I didn't like you as much as I do now but I liked you a lot more than I had the day before. I knew I really liked you when you were eating half my breakfast as you sat on my lap and I realized I enjoyed that.\n\nYesterday was my best day in years. I still worry about us working together but for an entirely different reason now.\"\n\n\"Yeah, there is that,\" she said as she bent the knee of her top leg giving my cock an unimpeded route to her pussy. I pushed in a bit and she pushed back a bit and the head of my cock slid into her.\n\nAfter a soft moan she continued, \"We seldom agreed on anything and we may end up fighting all the time,\"\n\n\"True,\" I said as I took a short stroke. \n\nShe softly moaned again and as she returned my next stroke asked, \"What are the chances you would fall in love with me?\"\n\nThat was an unexpected question. It quickly occurred to me she had been in love with me for a while. \n\nAs I caressed her tits and kissed her neck I began to suspect I had been in love with her for a while myself. She had always been on my mind.\n\nI rolled onto my back and scooped her up onto my body. She slid my cock into her as I gave her a long soft kiss. \"Better than even that I already am,\" I said.\n\nSuddenly she sobbed. I kissed her tears and her lips then held her tightly to me.\n\n\"Do you want us to live in Felicity?\" I asked.\n\nShe sobbed a yes.\n\n\"Do you give blowjobs?\"\n\n\"No.\"\n\n\"Do you expect to keep eating pussy?\"\n\n\"Yes.\"\n\n\"Can I always watch?\"\n\n\"As far as I'm concerned yes, some may object.\"\n\n\"I will give you privacy with those. Are you going to fuck other cocks?\"\n\n\"No.\" \n\nBy then she was fucking me.\n\n\" Do you love me?\"\n\n\"Yes,\" she hissed as an orgasm hit her.\n\nWe paused for a wild kiss then she resumed fucking me.\n\n\"Do you like me on top?\" she asked.\n\n\"Yes.\"\n\n\"Urgh,\" she said as she had another cum but did not pause after that one. She was suddenly trying to fuck me to a new zip code and I was just holding on. Soon an amazing groan escaped her lungs as she pressed her tits to my chest. That did me in and I began to ejaculate into her. A long moan later she was done and I could feel our juices running down my balls.\n\n\"Best ever,\" I said.\n\n\"Easily the best ever. We need a shower.\"\n\nI sat us up and stood with my cock still in her and walked us to the shower. We took our toothbrushes in with us and spent some quality time in the shower kissing.\n\n\"That was a lot of cum that just came out of my pussy. How long had it been since your last fuck?\"\n\n\"About a year. My last was with my ex just before she re-married. I do masturbate every once in a while but it has been weeks since the last time. You are on the pill I assume.\"\n\n\"No, don't need to be. I had cancer once but between the cancer center and Clara's soups I am cured.\"\n\n\"Oh, that's good. We are likely too old for children anyway.\"\n\nShe slapped my ass hard then said, \"Kiss me some more.\"\n\n\"Gladly.\"\n\n\"Press on the nipple then pinch it hard.\"\n\nI did as instructed as I kissed her again.\n\nHer hand was caressing my cock and my cock soon miraculously resurrected. She knelt and began to kiss and sucked my cock until it was as rigid as it got then climbed up over it. We both groaned as I slid into her.\n\nWe were still in the shower kissing with her legs wrapped around my waist as we coupled when we heard someone knock at the door.\n\nI turned the shower off as Audrey asked, \"Who is it?\"\n\n\"Clara,\" was the answer so I walked us out of the shower and Audrey opened the door.\n\nClara was not at all surprised to see Audrey wrapped around me with my cock in her pussy as we dripped water on the floor. She walked to the bed as she called Fiona and got undressed. Audrey was mostly dry and eating Clara's pussy when I let Fiona into the room. Soon Audrey disappeared between them.\n\nI got dressed and went down to the coffee shop and got us four large coffees and four large fresh cinnamon rolls.\n\nWhen I got back to the room they were resting and kissing. \n\nOur table had only two chairs so Audrey sat on Fiona's lap and Clara sat on mine. My cock immediately returned to the erect position. The three had remained nude.\n\nWe were down to just sipping coffee when Clara stood, exposed my cock past my gym shorts, then straddled me facing me as she slid my cock into her pussy. She resumed drinking her coffee and discussing the plans for the day with the others.\n\nThe conversation resumed but I found my hands on Clara's ass as I watched one of Fiona's hands on Audrey's tits. I assumed her other hand was on Audrey's pussy.\n\nSuddenly there was silence. Fiona had begun to kiss Audrey as she fingerfucked her. Clara was now fucking me. I heard Audrey orgasm. I felt Clara orgasm. Then the two got up and went to the shower. \n\nI gently led Fiona onto the table, kissed her and slowly slid my cock into her pussy. I had given her time to object but she had not so I began to fuck her. \n\nIt had seemed to me that she had wanted me to fuck her but was too reserved to let me know. As soon as the wrapped her long legs around me I knew I had been right.\n\nHer orgasms were quick and intense. Her kisses were very passionate and she was almost constantly moaning through them. She eventually quit after a big cum and we soon joined the other two in the shower. We heard orgasmic moans as we walked in.\n\nI had not cum but was ready for a break anyway.\n\nAudrey climbed over my body and again wrapped her legs around me.\n\n\"This is how they were when they opened the door,\" Clara said to Fiona.\n\n\"No wonder you were instantly horny. So flying over the Grand Canyon is on our agenda today.\"\n\n\"Yes, and more Audrey. I don't' think she understands how much we missed her yet.\"\n\nBetween our kisses Audrey said, \"I don't think you missed me at all.\"\n\nEach pushed our chests apart and began sucking Audrey's tits. \n\nMy cock grew into her pussy and we were again fucking in the shower until her orgasmic groan echoed off the walls and I flooded her with cum for the second time that morning. \n\nWe slowly left the shower and got dressed. We went to the Bellagio buffet then walked over to the helicopter pad two blocks away. It was just nine AM local time.\n\nThe Grand Canyon is an amazing sight from the air and Audrey and I were awed. Clara and Fiona not so much.\n\n\"You were not impressed with the biggest canyon on Earth?\"\n\n\"I've seen bigger,\" Clara said to a reproving glare from Fiona.\n\nAudrey and I laughed at the outrageous statement. \n\nWhen we were back on Earth the ladies decided to go shopping and Audrey went with them. I went to the casino at our hotel and gambled. It took me two hours to lose one hundred dollars so I was pleased.\n\nAs I jumped into the elevator I saw that the ladies were in it. They ignored me until the other two people got off then Audrey asked me, \"Hey mister, wanna fuck?\"\n\nFiona and Clara burst into laughter and got off on their floor after showing me their tits.\n\nWhen we got to our floor Audrey handed me one of her huge store bags and said, \"Here, presents.\"\n\nThe bag had a pair of deck sneakers, polo shirts and khaki shorts all miraculously in my size. \n\nThen I thought, \"Not so miraculously, we still had not put away our previous day's purchases. My size was easy to find among them.\n\nFor some reason even though we were not going to fuck we both got naked. I loved looking at her naked body and apparently she enjoyed looking at mine.\n\nWe got in bed and cuddled.\n\n\"I assume those two are your best friends and lovers,\"\n\n\"They are. Fiona is very conservative and shy around most people except me, and apparently you. She told me you fucked. \n\nYou are just the second guy she has fucked in many years, Sean is the other one.\n\nSean is one of the few men with privileges with other women. Ruthie controls which women but there are about six of us. Of course we have to fuck Ruthie too but that is a great privilege in itself. \n\nBy the way as you could tell, you already have privileges with Clara and Fiona. Cis doesn't fuck men but Trini does, I will see about her. Oh, if Fiona looks familiar to you she was once a supermodel.\n\nMom and her second or third cousin Mo were best lifelong friends. Mo is Clara's Mom.\n\nClara and I are some kind of cousins, which in Felicity is immediate family. \n\nClara vanished off the face of the Earth for nearly a year once. Fiona knows where she was and may have been with her but does not tell. \n\nAnyway when she returned she was a different person, less career and more loving. Everyone pretty much accepts they went to a retreat somewhere. We do know Clara makes the best chicken soup but you have to be sick to get any. She made me a batch when I was sick.\n\nWhen I moved to the city after Mom died I already had cancer. Clara would bring me her soup on a regular basis until I was pronounced cured. \n\nBefore she began feeding me my cancer was not retreating. After she began to bring me soup it was gone in two months. \n\nI am convinced it was she that saved my life, not the cancer center.\"\n\n\"It is clear to me you adore each other so I adore her and Fiona too. I hope I never disappoint them.\"\n\n\"Thank you baby but I must tell you there are many others you should not disappoint.\"\n\n\"They need to wear team Audrey t-shirts so I will know who they are. How many are there?\"\n\n\"Maybe thirty.\"\n\n\"I want a divorce,\" I said as I held her to me.\n\n\"You can't have a divorce. We are not married.\"\n\nI kissed her as I thought things over then said, \"Well you know, we are in Las Vegas.\"\n\nShe looked at me in astonishment and asked, \"Are you serious?\"\n\n\"Why not? Your maid of honor is here and there are enough people left to form a decent audience.\"\n\nI saw her searching my face for something.\n\n\"If I say yes.....?\"\n\n\"We would need to call Carly first. She would know who is still in town.\"\n\n\"No, my first call would be to Aunt Wendy, then Carly then Clara.\"\n\nI handed her phone to her. Her hand was shaking.\n\n\"We have been lovers for just two days'\"\n\n\"No, we have been lovers for almost a year but wasted the first eleven months. Lets, not do that again.\"\n\nShe giggled and I kissed her. I left the bed and got dressed. I kissed her again and told her I would be right back. I went down to the concierge desk and asked for all the literature they had on Vegas weddings then went back up to the room. Audrey was giggling through her tears as she spoke on the phone.\n\n\"No, don't call them, they need to get home.\" \n\nWhoever had been on the phone with her had already hung up.\n\nShe was now sobbing softly.\n\n\"Do you love me?\" she asked.\n\n\"Yes.\"\n\n\"Are you sure?\"\n\n\"Yes.\" \n\nShe threw herself at me and hugged me with all her might but kissed me softly. She began to say something but her phone rang and kept on ringing the rest of the day. \n\nAbout twenty minutes later Carly and Ruthie came into the room screaming and basically tackled the still naked Audrey. The next thing I knew the room was full of women and Sean was leading me out until we found ourselves at a coffee shop.\n\nSean said, \"Aunt Wendy has everything covered including the reception. As much as you love Audrey you will be happy to know you are also marrying all the women in there and the town of Felicity. You have just been admitted into heaven. Do you have rings yet?\"\n\n\"Oh, rings. No.\"\n\n\"License?\"\n\n\"No. It's Sunday.\"\n\n\"This is Vegas. Call her and tell her to get dressed, she has places to go.\"\n\nThe performers had come back from the airport; their plane had been delayed in arriving and had just landed but the group had not boarded yet. \n\nThe stage crew and a few others did go back and later claimed it was their worst flight ever although they had to admit the pilot and co-pilot had them laughing through the worst of it.\n\nI have just a vague memory of the details but we were married Monday morning. We used cheap wedding bands; our rings were going to be made by Wendy.\n\nAudrey had five bridesmaids but only because there were just five identical dresses her friends could fit into ranging in size from Ruthie to Carly. Clara had a different dress but in the same color as the others. \n\nAudrey commented it may have been the first wedding ever in which the bridesmaids were chosen by dress size availability. \n\nAudrey was in a very fine wedding dress. All of their outfits were rentals.\n\nSean was commandeered into the best man position.\n\nOur reception was at a place called Aunty El's owned by what was apparently a good friend of Audrey's Aunt Wendy and Sean's mom Marti.\n\nOn our return to Felicity Audrey and I checked into the beach resort then went to Wendy's shop to pick rings. Sean steered me across the street to a bar and Audrey entertained the ladies as she narrowed the choices to one. I could see and hear a lot of cheering across the street.\n\nWe bought a very fine town home for a lot less than expected then put our condos in the city up for sale.\n\nBy the next weekend we were residents of Felicity.\n\nThe Monday after that the A & J Consulting firm became a reality on the second floor of the same building Clara and Carly worked in.\n\nSean had been right, Felicity was heaven. Audrey was my guardian angel and I became hers. \n\nI coaxed her into introducing me to her mother, her first trip back to the cemetery since her mom's burial.\n\nIt was apparently a cathartic experience for her that began in tears and ended with laughter and love.\n\nWhile there she called her Aunt Mo, her mother's best friend and told her where she was. Mo and Clara joined us in less than ten minutes. Tears returned soon after but so did the laughter.\n\nI was introduced to many departed family and friends and the three always talked to them. I began to say Hi to them.\n\nSeveral gravesides had benches, as did a few others in that section of the burial ground. When we returned to visit her mother a month later there was a bench there too. Audrey overwhelmed me with kisses as she thanked me.\n\nI suddenly found myself a member of a huge family.\n\nRandall had given our name to others and we found ourselves having to turn down business. Randall's was the only account Audrey and I worked on jointly and were happy to see we never had a disagreement; in fact we often combined our ideas into one for him. \n\nAudrey and I found ourselves making a lot of money. \n\nRandall found himself making a whole lot more money.\n\nDid we live happily ever after?\n\nDamn right we did. \n\nAnd it all started when we got fired. "
    ],
    "authorname": "jjcolejr",
    "tags": [
        "romance novella",
        "drama",
        "love story"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/felicity-ch-39"
}