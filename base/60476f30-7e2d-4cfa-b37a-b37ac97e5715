{
    "title": "Point Hollow Ch. 04",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nThis story is dedicated to the memory of Dame Agatha Christie, and is partially inspired by her Poirot novel 'The Hollow'.\n\nPart 19 - Media Relations \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" said the lovely redheaded MILF reporterette at 7:00am, Friday, May 6th. \"Channel Two News has learned that the suspension of SBI Narcotics Task Force Director Richard Ferrell without pay has been upheld!\"\n\nA cheer went up in the MCD room as we listened. Bettina continued: \"The grievance filed by the SBI's Union was denied by the Federally appointed arbitrator, who stated that NTF Director Ferrell very likely broke a number of laws in conducting a drug raid within the jurisdiction of the City. The arbiter also made reference to a number of spotty warrants obtained by the SBI for some of their previous raids, the worst case being the raid that led to the death of a U.S. Marine. The SBI and Mr. Ferrell can appeal the ruling in Federal Court, but that will not be heard for some time.\"\n\nBettina went on: \"The FBI continues to investigate the SBI, though it is believed their findings will not come out for weeks or even months. It is very possible the FBI could release its findings in late October... just in time for the November elections. SBI Director Jack Lewis, who is running for Governor, has demanded the FBI either show cause for their investigation or drop the investigation altogether. And in a stunning development, Director Lewis ordered all SBI Agents to refuse to cooperate with the FBI, at least until the election is over.\n\n\"Republicans charge that this is a ploy to keep the FBI report from being released until after the election. They accuse Director Lewis of corruption, and have demanded he resign as SBI Director or face possible impeachment.\n\n\"Meanwhile, Governor Val Jared has made reform of the SBI a major plank of his platform.\" Bettina said. \"In a speech yesterday to the State Fraternal Order of Police, Governor Jared stated that the SBI is too corrupt to be allowed to continue unchecked. He is proposing a scaling back of the SBI's assets and ability to run operations without cooperation from local law enforcement authorities. Director Lewis will give a speech to the F.O.P. over the weekend, and they will endorse a candidate next week.\"\n\n\"In local news, the new State Crime Lab is nearing completion.\" Bettina said. \"Some members of the Town & County Council are calling upon the Police Department to scale back its own Crime Lab, and use the State Crime Lab's better facilities. Asked for comment, Lt. Scott Peterson, Public Relations Officer of the TCPD, said that policy procedures would come under review at the appropriate time. And now, let's go to Nick Eastwood for Sports...\"\n\n* * * * * * * * * * * * * * * *\n\nMy 'Detective Fiction' meeting did not occur, because at 8:00am I was called into Chief Moynahan's office. When I got there, Deputy Chief Della Harlow was already there. As I sat down at his invitation, I observed that the Chief was as ticked off as I'd ever seen him.\n\n\"Commander Troy,\" said Chief Moynahan with an unusual formality, \"are you the source of Lt. Peterson's comment to the Press about procedures coming under review?\"\n\n\"No sir.\" I said.\n\n\"Neither was Commander Harlow, and certainly I was not the source of that comment. I'm fighting like hell to keep our Crime Lab, and that little twit went and undermined me.\" said the Chief. \"And that's not all: Ms. Harlow, would you tell Mr. Crowbar what you told me, please.\"\n\nDella half turned to me in her chair and said \"Scott Peterson came to me yesterday and said he wanted to reinstate KSTD's credentials. He said he thinks it's his call to make, and mine after that, and that, 'with all due respect', he said, you're not in the chain-of-command to make that call.\"\n\n\"Hmmm, interesting.\" I said, half-musingly. This apparently was not the expected reaction.\n\n\"I expected a stronger reaction than that, Mr. Crowbar.\" said the Chief.\n\n\"Well, he has a point.\" I said. \"Not that I agree with it, but it's a perspective. So, Della, what was your response?\"\n\n\"I told him that I'd bring it up with the Chief, which I have.\" Della said. \"What I don't want is for you to think I'm going around you on it.\"\n\n\"I appreciate that.\" I said. \"Well, the Chief can override either of us any time he wants to. And if you wanted to reinstate KSTD, I'd have a tough time coming up against that, as I'd expect the Chief to support you on it.\"\n\n\"What would you do if Ms. Harlow did reinstate KSTD, and I refused to get involved?\" asked the Chief.\n\n\"Sir, you ask hypotheticals like a lawyer.\" I said, teasing the Chief. \"But since every officer except You The Chief is under my command, I would give orders to every officer that if KSTD personnel were seen in Headquarters, any Precinct, or on any grounds owned by Police Department, to arrest those personnel for trespassing and confiscate their equipment. They might make bail on recognizance, but their equipment remains confiscated as 'evidence'. Do that two or three times, and they start having equipment issues, and those cameras run $75,000-$100,000 apiece.\"\n\n\"Wow, you don't play around, do you?\" Della said with a grin.\n\n\"See, Della,\" I said, \"first of all, KSTD and especially Priya Ajmani have to learn a lesson. The SBI Inspector pulled their credentials just like I did. If someone came into your home, cursed in front of your kids, urinated in your refrigerator, vomited on your floor, then tried to kick your dog, you'd kick that someone out of your home. Well, I'm tired of Priya accusing me of committing crimes and covering up others. She will learn manners, or else.\"\n\n\"In addition,\" I said, \"this is a trump card for us to use with KSTD. At the very least, we should make a deal, and give them their credentials back only if we get something back in return, and something valuable.\"\n\n\"Like positive press coverage.\" said Della.\n\n\"More like specific coverage at a specific time, have them run something specific at a certain time.\" I said.\n\n\"Ah, I like your way of thinking, Mr. Crowbar.\" said the Chief. \"As to what Peterson said about the Crime Lab, completely undermining me and my efforts to fight to keep our Crime Lab... I'll be dealing with that perrrrsonally.\" \n\nI thought to myself that I'd rather take a crowbar beatdown from Cindy than be Lt. Scott Peterson right now... \n\n* * * * * * * * * * * * * * *\n\nI left the door to my office open and the blinds on my windows drawn up so I could see into the hallway. Sure enough, 30 minutes later I saw Lt. Peterson hastily exiting the Chief's suite and walking fast down the hall, his face crimson and his eyes blazing with anger. \n\nI got out my personal cellphone and made a call to Eddie the Bounty Hunter. \"Eddy,\" I said, \"I have something I need for you to do...\"\n\nPart 20 - The Crime Scene \n\nSaturday, May 7th. The Chief juggled the schedules so that some of us had the early rounds of the Police Boxing Matches. Defending Champion (Freestyle Division) Cindy Ross was, by tradition, the first to go, and she faced off against Corporal Ronnie Kirkpatrick. She did not endure much of his standard Police tactics, and had him yielding in about 20 seconds.\n\nMy round was tougher. I had Detective Theo Washington. He actually was not bad with his metal Police baton, and played a decent 'read and react' strategy. I tried not to show too much, and had him subdued about two minutes into the round. Teddy Parker scored a nice win against Patrolman Morton.\n\nWe then had to leave the gym because the FBI had finally agreed to take us to the cabin where Annemarie Reynolds and Sherry Kim had been found. Cindy and I dressed in black shirts, khaki pants, black boots (mine were my old Army boots, that I'd worn at Airborne School), and light jackets with \"FBI\" on the back, as we were consultants. Yes, we had on armor. Teddy and Theo had jackets that said \"POLICE\".\n\nWe... meaning Me, Cindy, Theo, and Teddy... met Jack Muscone, Martin Nash and Sandra Speer at the Mall at the northwest corner of Town, then followed them west, out of the State. We turned on a road north before we got to Hammondsville, and followed this road for a good number of miles. The road went through largely uninhabited areas but was well-paved, well-painted and in good condition. I knew this road would hook up with the main road to Rome and Apple Grove about 20 miles further north.\n\nThen Jack pulled off behind another vehicle that also had Federal Government license plates. Special Agent in Charge Clark Webster and two other FBI Agents were in that vehicle. They were the same Agents that had tried to stop me from interviewing the students in the hospital. They acted as if they'd never seen me before and as if nothing was wrong. 'An unlimited capacity for obedience', as Ayn Rand would describe it (and did, in Atlas Shrugged).\n\nJack and Sandra were dressed similarly to me, Cindy and my Detectives. Martin Nash had on a gray suit, collared white shirt and bluish tie, looking 'GQ' as always, but at least he had on sensible walking shoes. The two FBI automatons had on suits and shoes that were better for office wear. Oh, well.\n\nAs I looked around, I saw a two-track dirt lane going into the woods in a southeast direction. \"This is the road to the cabin where we found them.\" said Clark Webster. \"It's a couple of miles walking. There were a lot of tracks on it at the time, boots, shoes, dirt bikes, motorcycles, four-wheelers. Hunters use this trail a lot.\"\n\n\"It's not deer season,\" said Teddy Parker, \"Or else Joanne and the Sheriff's wife would be up here with us right now.\" Cindy and Theo laughed, and I smiled.\n\n\"Feral hogs are year-round, if memory serves me correctly.\" I said, looking all around the area we'd pulled off and at the entrance to the trail. Webster told his robots to lead the way, and they did... walking right on the paths, and over any tracks that were there. Hoo boy. I asked Cindy to bring up the rear... and to watch her and our backs.\n\nWe made our way along the winding trail through mostly pine forest. We crossed the River, which was little more than a wide (but deep) stream, via a wooden bridge, and came upon the Cabin a short distance further. Behind it was a dropoff into a deep gully that led to a canyon that would come out near Reservoir Lake in Nextdoor County if it were followed.\n\n\"If someone fell down that at night, they'd break their neck.\" said Teddy Parker. I was busy shining a light under the crawlspace under the cabin, which was barely a foot off the ground. There was nothing under there, nor any sign anyone had crawled in the dirt of the ground below. Theo and Cindy confirmed my observations.\n\nI think Clark Webster intentionally did not tell us to prepare for what was inside the cabin. Annemarie and Sherry had been tied to their respective beds for two days, and had to do their bodily functions where they were. The small shelter had not been cleaned since, and it had been days. I need not say what it smelled like.\n\nHowever, I am not an idiot like Steven Ikea. I was prepared, and I passed out face masks to my Officers and myself (my wife works in a hospital; who knew!) and after putting those on we went inside. I went first, looking around from the doorway, then went on inside. I saw the soiled, blood-spattered mattresses, the blood on the floor at the foot of the beds, then the vomit. They'd taken samples, but left the mattresses instead of taking them in as evidence.\n\n\"See anything, Commander Troy?\" Clark Webster asked, his voice sarcastic. Jack Muscone gave him a sharp look.\n\n\"Oh yes, I am seeing a lot.\" I said. I went back outside, and began walking through the woods in ever-widening circles around the cabin, looking at the ground, the trees, the plants. I took my time doing this; it was important. Clark Webster seemed impatient. His automatons looked disinterested. Martin Nash and Sandra Speer watched me with interest, as did my officers. Jack Muscone was making his own observations around the cabin.\n\nWhen I returned to the group, Webster said \"Did you find anything that would help us find Danny Cantrell?\"\n\nI said \"There's a trail that generally follows the River, which I would imagine goes back to Point Hollow. If the students walked up here, that's how they got here, but there are no recent markings on the trail. I also saw no markings for 200 feet around the shelter, though I did not go down the cliff or into that canyon below.\"\n\n\"Our guys went down there, and found nothing.\" said Webster.\n\n\"Hmmm, interesting.\" I said, partly to myself, and partly to the person I was looking at: Cindy Ross. Her eyebrows arched up slightly.\n\n\"But to answer your question, Special Agent Webster,\" I said, \"my initial thesis was that Danny might have been disposed of here. But now I think he is nowhere around here.\"\n\n\"So you think he's dead?\" asked Webster.\n\n\"I'm not saying that, at least not yet.\" I said. \"But he was vomiting blood, which was one thing I've confirmed by coming here; there's blood mixed with that vomit. So he was being beaten, and was coughing up blood and likely vomiting blood, as well. Untended internal injuries... I'm not saying much for his chances.\"\n\n* * * * * * * * * * * * * * *\n\nAt the same time, a meeting was occurring in Midtown, at the office of State Senator Richard Langdon... the office where he'd taken a severe crowbar beatdown for trying to make the Iron Crowbar's sister into one of his prostitutes. Bad plan.\n\n\"All right, so the SBI is practically shut down.\" said Langdon. \"The NTF is practically destroyed, and Dick Ferrell is hanging on by his fingertips. This is starting to hurt Jack in the polls, too. What do we do?\"\n\n\"About the SBI, Ferrell, or Jack, here?\" asked State Senator Jimmy 'Coffin' Cerone.\n\n\"All of the above.\" said State Senator Katherine Woodburn. Also in the room were Rep. Justin Madoff and SBI Director Jack Lewis. Lewis had snuck into the building for this most unofficial of meetings.\n\n\"Seems to me the problem is the State Inspector General.\" said Justin Madoff. \"Maybe we need to take it to the mattresses with her.\"\n\n\"Watch your language.\" said Jimmy Cerone. He was a real mobster, not some amateur wannabee like Madoff was trying to be with his verbiage. \"We don't talk about stuff like that out loud. We don't consider it unless its all out war, and our final option.\" \n\n\"For Dick Ferrell, it's getting to be about final options.\" said Langdon.\n\n\"It's also getting to be all-out war.\" said Katherine Woodburn. \"If we lose the SBI, if we lose State control over the counties, it sets us back immeasurably... not only in this State, but nationwide. You guys all know this. We're at a critical juncture in the country. It's poised for the taking, for the destruction of individual freedom and subservience to the State... but a setback like losing our grip on our State's law enforcement agency...\" She did not need to finish the statement. They all understood the stakes.\n\n\"I'm not sure what we can do.\" said Cerone. \"I'm going to be a little bit blunt here: Dick Ferrell and his boys have had some major fuck-ups in the last few months. Going into the City was bad, even if the raid was successful. And what in the world was someone thinking, sending a paramilitary death squad into the Iron Crowbar's home turf and killing a United States Marine?\"\n\n\"They got the wrong house, there.\" said Jack Lewis, finally speaking. \"Yeah, it was bad, but that was an accident. Their only real failure was not hitting the correct target.\"\n\n\"I don't know who the dumbass was that was behind that.\" said Cerone, peering at Lewis. \"If I'd wanted someone dead, I'd have called for a professional hit. Clean, quick, untraceable.\"\n\n\"I just wonder what the Iron Crowbar would've done if the intended target had been hit.\" said Langdon.\n\n\"We wouldn't be having this conversation now.\" said Cerone. \"Most of us in this room now would likely be dead. Griswold is like a second father to the Iron Crowbar, and the the Iron Crowbar does not fool around. He does not play. I don't understand why it is so hard for that lesson to be learned.\"\n\n\"We know, Mr. Cerone.\" said Katherine Woodburn. \"We've been trying to get the Iron Crowbar to cross the line, although not to the level that that SBI raid would've done. He always seems to step back, though... colors just inside the lines, and you can't see where he steps out of bounds, at least not in time.\"\n\n\"Aside from nearly killing Brownlee with his bare hands, where has he stepped over the line?\" asked Madoff.\n\n\"Oh, I find it interesting,\" said Katherine Woodburn, \"that the organ thief Steven Moschel was reduced to a blubbering mass of absolutely frightened crybaby when the Iron Crowbar simply walked into the room and asked if he was cooperating. And Moschel was found by the Police in an utterly dreadful physical condition. Something happened there.\"\n\n\"This is all very interesting,\" said Richard Langdon, \"but I must ask everyone to not waste the next Governor's valuable time. We need to figure out what to do going forward... and especially what to do to restore the SBI to its full status again, with full sovereignty over every county and the people of this State. How do we get around Maxwell?\"\n\n\"We can't.\" said Justin Madoff. \"Only the Governor can. And he's corrupt and partisan in his zeal to win the Governorship and destroy the SBI.\"\n\n\"What if we were to force Maxwell's hand?\" asked Katherine Woodburn.\n\n\"Care to tell us how you would do that, Ms. Woodburn?\" asked Jimmy Cerone in his nicest voice.\n\n\"Let me paint a picture for you.\" said Katherine Woodburn. \"Inspector Maxwell is presented with irrefutable evidence of the corruption of Commander Donald Troy. She either has to suspend him and investigate him, or her own integrity will come under severe question. Val Jared may be friends with Grandpa Griswold and his little boy the Iron Crowbar, but Jared will be forced to have Maxwell investigate the Iron Crowbar... or his lack of integrity is clearly shown.\"\n\n\"I like what I am hearing.\" said Cerone, who was the ultimate power in the room, and everyone knew it.\n\nKatherine smiled and continued: \"And all this using the raw energy of the most powerful and most unchecked entity in the world... a single-minded Press driving a relentless agenda. The power of the Press is unstoppable. They can destroy anyone at any time, if they have the desire to do so... and when it comes to Commander J. Donald Troy... they have an unappeasable desire to do so.\"\n\n* * * * * * * * * * * * * * *\n\nAs we drove back home, I asked my peeps what they thought of that crime scene.\n\nTeddy Parker said \"I think I appreciate our Crime Lab people even more than I did before. That was some friggin' sloppy work by the FBI.\"\n\n\"I second those remarks.\" said Cindy, who was riding shotgun.\n\n\"Yeah, they found the people and didn't give much of a shit about the rest of it.\" I said. \"But it's instructive. So, what else did you guys see, or should I say not see?\"\n\n\"They had to have driven those people to that site.\" said Theo. \"No way they're carrying three or more human bodies deadweight on foot up that trail from Point Hollow.\"\n\n\"Good point.\" I said.",
        "\"Commander,\" said Cindy, \"can we just skip the middle of the movie and have you tell us what you saw or didn't see?\" There was a chorus of agreement from the backseat. I smiled.\n\n\"Okay.\" I said. \"But I'm going to make a short story long. First, I went up to the scene wanted to see certain things, and just left my mind open to the rest, of course following Dr. Carl Sagan's advice to 'keep your mind open, but no so open that your brains fall out'.\" Everyone laughed at that.\n\nI continued: \"What I saw was that there were absolutely no marks on the trail leading to Point Hollow. That means that not only did our students not come up that way, but the FBI did not even search along that trail for Cantrell, nor the other students that were still missing at the time.\" It suddenly became very quiet in the Police SUV.\n\nI went on: \"I went in a circle around that shelter, like a Boy Scout earning a Merit Badge, looking for any sign of human movement through there. Except for the shelter, which was spotted by drone and investigated via going down the road, there was just nothing there. So that means no one came from any direction, except the road.\"\n\n\"Last, I saw what I expected to see inside the cabin, and in a little greater detail. The girls were tied to the bed, repeatedly raped, and likely in front of Danny Cantrell, who was beaten so badly that he was vomiting and probably coughing up blood. I think they made him watch the rapes while beating him... and that shows some serious hatred for that young man.\"\n\n\"Where do you think he is now? Rome? Apple Grove? Farther beyond? He's not at home.\" Cindy asked.\n\n\"Long way to go before we know that.\" I said. \"The FBI did show some competence in checking every hospital within a five hundred mile radius of Point Hollow, but so far they've found nothing...\"\n\nPart 21 - Zapped \n\nI had intended to spend Sunday, May 8th, with my family. That was not to be when Jack Muscone called me at 9:30am and asked me to come out to Point Hollow. Of course I got Cindy first, and we drove up to the property.\n\nOnce we got there, I saw a large number of FBI agents there. Jack's full team (including Nash), Clark Webster and his team, Les Craig and Miles Winters from Southport, and others that I did not know.\n\n\"Thought you might want to see this.\" said Muscone. He led me over to where two FBI Agents were. They were technicians, and there were a number of devices around them that looked like videocameras.\n\n\"What happened,\" said Muscone, \"is that we set up eight small cameras and listening devices around the perimeter of this place. We were hoping to catch the drug perps or possibly Danny Cantrell or anyone else associated with his case coming back to this place.\" I nodded.\n\n\"We had a couple of camera secreted in trees up on that hillside over looking the place, a couple in trees on the edge of the Hollow, a couple near the entrance at the road. They're not easy to see.\"\n\n\"When did you put them up?\" I asked.\n\n\"The Wednesday after the students disappeared, after sunset.\" said Clark Webster, who was standing nearby and listening.\n\n\"We got some interesting video footage of the area last night.\" said Muscone. \"We'll show you that in a minute. But first, take a look at the equipment. Show him, guys.\"\n\nMaybe it was habit, or maybe to make a distinct point, but I put on latex gloves, which I always carry, before handling any of the electronic equipment. I took a look, and let out a low whistle, and had Cindy come look with me.\n\n\"Wow, these are totally fried.\" I said. The equipment's electronics were damaged, every piece looking as if it had taken a direct lightning hit, the acrid smell of burned electronics still easily detectable. \"This happened last night? The weather wasn't bad; there weren't any lightning strikes that I know of.\"\n\n\"We had camera coverage until midnight last night.\" said one of the techs. \"Here, take a look.\" He handed me his laptop computer, which had built in side and top shields so we could see the screen in daylight. Cindy and I watched. All was quiet and dark, then suddenly there were several blue-white flashes of light, like lightning rolling off a transformer or a Tesla coil. Then the screen went black. Every other camera's video showed the same things.\n\n\"Any idea what could've caused that?\" asked Muscone. \n\n\"Only thing I can think of,\" I said, \"is to check for anything that was connected to the devices, so that a remote device could have a surge of electricity blast through each device at the same time. And that surge might be what the cameras caught before they were destroyed.\n\n\"There's also the audio, Commander.\" said Clark Webster. I listened closer as the tapes were run again. Just before the bluish light... there was the unmistakeable and unearthly sound of a young woman's scream. I looked over at Cindy... she had gone pale.\n\n\"All of the cameras were still in their places when we recovered them.\" said Eduardo Escobar. \"I looked for traces of anyone walking around them and leaving footprints before I went up to them, and there was none.\"\n\n\"How was the data transmitted to your computers?\" I asked. Several FBI Agents looked at each other as if not wanting to answer. Jack Muscone became impatient.\n\n\"For God's sakes, people, the Commander has a Top Secret clearance, is an FBI Consultant, and has worked with this stuff before.\" Jack himself then went on to describe the equipment and the fact the digital data was transmitted by a radio signal to a stronger relay transmitter, which in turn sent the data to the Federal Building in Town.\n\n\"So...\" I said, \"someone could detect the radio signals, and know the devices were there. Was the relay transmitter damaged?\"\n\n\"Yeah.\" said Clark Webster. \"It was on top of the house, and it was totally destroyed, as well.\n\n\"But no damage to the house itself?\" I asked.\n\n\"That's right.\" said Escobar. \"Nor any damage to the trees in close proximity to any of the devices, nor to the fenceposts near the road...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Is it just me,\" asked Cindy as she joined us for lunch at The Cabin, \"or is the FBI a lot less impressive than I expected them to be?\" Also present for lunch were my mother Phyllis, Cindy's sister Molly, and Ross and Ian. I had swept for bugs, finding none, so we could speak freely.\n\n\"Why do you say that, dear?\" asked Phyllis, who was holding Ian. I was holding Ross.\n\n\"When we were looking at the place the two women were found, that crime scene was trampled upon, unpreserved, evidence not collected.\" Cindy said. \"Then they set up a monitoring apparatus that, so sorry, a ten year old child could do a better job of hiding. The system gets fried, and they act like they have no clue what's going on.\"\n\n\"And what is going on?\" asked Molly.\n\n\"Someone easily detected the cameras from their radio signals, then set up something to fry them.\" Cindy replied.\n\n\"What I meant was...\" said Molly, \"... why would someone want to burn out the cameras? I would think the drug makers would not come near there anymore. If they were bringing drugs over the hill and through the woods to Lake Reservoir on four wheelers, we 're now on increased watch for that. And I'm sure you guys stepped up patrols to the area.\"\n\n\"Not really.\" I said. \"They see or hear us coming up the road, they cross over the State Line, we can't do anything. So I just left it to the Feds.\"\n\n\"You don't think Danny Cantrell would go back there, son?\" asked my mom.\n\n\"No, Mom.\" I said.\n\n\"You think he's dead?\" asked Cindy.\n\n\"I don't know.\" I said, then went into a reverie as I mused again, \"I don't know...\" \n\n* * * * * * * * * * * * * * *\n\n\"There is something I need to tell you guys.\" said Molly as we chatted after lunch. \"Frank Soltis called me. He's noticed some people following both him and the SBI Inspector around. He called the Westphalia Police on his cell phone to pull one of the tails over, but they suddenly turned down a street and ran away; they must've gotten wind of it.\"\n\n\"Probably had a police radio in their car, heard the dispatch.\" I said.\n\n\"Yeah, we figured that, also.\" said Molly. \"Anyway, Britt lives in a condo in the City with pretty good security, and she asked them to keep a closer watch. Sure enough, someone pretending to be a plumber tried to gain access to her condo yesterday, Saturday. The security people grabbed him in the hallway, but his paperwork checked out and he said he'd gotten a call to go to that apartment. Britt checked it out, and the call was from a burner phone.\"\n\n\"What did they do with the plumber?\" I asked, my face set in stone... er, iron.\n\n\"He checked out, so they let him go.\" said Molly. \"He seemed as confused as everyone else.\"\n\n\"I'm sure.\" I said, no small amount of sarcasm in my voice. \"Well, that's an opportunity missed. Laura, we need to ask Chief Griswold and his wife to drive over the mountain and come visit. Like, right now.\"\n\n\"Ahhhh.\" said my mom. She understood.\n\n\"Yes, Mom.\" I said. \"Molly, call Frank today and tell him that Inspector Maxwell could be in serious danger, and he and her other subordinates might also be in danger. Cindy, when the Chief gets here, you and I will explain everything to him... and he'll call the Governor. And then... we'll see what happens.\"\n\nPart 22 - Plans In Motion \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" Bettina shouted from in front of the State Office Building at 7:00am, Monday, May 9th. \"University students are preparing for final exams, and Seniors are getting ready for graduation ceremonies next week.\"\n\nAfter rolling a taped piece about the University's year coming to a close, Bettina came back live and said \"In State news, Democrats in the State Legislature are demanding that Governor Val Jared override State Inspector General Britt Maxwell, and restore the SBI's Narcotics Task Force. The Democrats are saying that the NTF is needed to interdict drug trafficking in the State, and they accuse Governor Jared of helping distributors sell drugs to our State's children. Republicans deny the charge of helping drug distributors.\"\n\n* * * * * * * * * * * * * * *\n\n\"Well, Chaplain Ikea,\" said Jack Lewis as Ikea came into his office. \"How was your meeting with Representative Cox?\"\n\n\"Contentious, as usual, sir.\" said Ikea. \"I brought up the NTF, and said that we accused Inspector Maxwell of harming drug interdiction efforts throughout the State. Cox's reply was that he was aware of efforts to follow Inspector Maxwell and to gain entrance to her home, and he said that any further attempts to intimidate her would be countered.\"\n\nIkea then said, his face more concerned: \"He also said that the Iron Crowbar was aware of the problem, and that if anything happened to Inspector Maxwell, the Iron Crowbar would respond; and that, and I quote, 'what happened to you was minor in comparison to what he is prepared to do on Ms. Maxwell's behalf', close quote.\"\n\n\"Good grief.\" said Lewis. \"And he would do it, too. That damn Justin Madoff... fucked everything up yet again. Okay, we'll have to go with Plan B, then.\" He picked up the phone and made some calls.\n\n* * * * * * * * * * * * * * *\n\n\"KXTC just gave us a five minute warning.\" said Della Harlow on the phone.\n\n\"All right.\" I said. \"Thanks.\" Hanging up, I looked across the desk at Cindy. \"Something's going on.\" I turned on the TV.\n\nFive minutes later, KXTC joined a news conference going on in Midtown. SBI Director Jack Lewis was speaking at a podium. SBI Deputy Director Robert Gaston and Dick Ferrell were standing behind him.\n\n\"As SBI Director, and upon the advice of both State and personal attorneys, I am reinstating the Narcotics Task Force.\" said Lewis. \"Inspector Maxwell may can suspend an Agent, provided there is sufficient legal cause. However, she does not have the standing to suspend a department of my Agency. That is for me or the Governor to decide. I have full confidence in the Narcotics Task Force as the premiere anti-drug unit in the State. If Governor Val Jared wants to show his corruption, and help drug dealers sell drugs to our children by suspending the NTF, let him do so directly instead of having the State Inspector General do his dirty work for him.\"\n\n\"Furthermore,\" said Lewis, \"I am requiring Inspector Maxwell to show legal cause to suspend Richard Ferrell, an outstanding SBI Agent with many successful drug arrests under his belt already. I am requiring her to do so through the Court system. Until a Court actually rules to suspend Agent Ferrell based on probable cause, I am reinstating him as the Director of the Narcotics Task Force.\"\n\nLewis took no questions, and the three men walked off the stage.\n\n\"Can he do that?\" Cindy asked.\n\n\"He can try.\" I said. \"We'll see what the Court says. And I'm sorry to have to say it, but I think he's right that Britt cannot suspend the NTF as a unit.\"\n\n\"What does this mean?\" Cindy asked.\n\nI got out the bug killer and turned it on. \"It means,\" I said, \"that my warning to Lewis over Britt Maxwell's personal safety was received and understood. Okay, I have one other thing to do; stay and listen.\"\n\nI picked up the phone and called Dr. Mickelson. \"Doctor, did Dr. Ellman return from his conference yet?\"\n\n\"I haven't seen him, Commander.\" said Mickelson. I thanked him, hung up, and called Dr. Ellman's direct line. The Biology Department switchboard answered.\n\n\"I'm sorry, sir, but Dr. Ellman is unavailable.\" said the woman's voice, trying to sound helpful, but also trying to 'persuade' me to accept her words without question.\n\n\"Is he in the building at all?\" I asked. \"Did he come in this morning?\"\n\n\"I'm sorry sir, I don't have that information.\" the woman said. Seeing that I was going to get nowhere, I thanked the woman and hung up.\n\n\"All right, we'll do this the hard way, then.\" I said. I explained to Cindy what 'the hard way' entailed...\n\n* * * * * * * * * * * * * * *\n\n\"Inspector Maxwell has already filed the lawsuit over Ferrell.\" said Robert Gaston at 1:30pm, still Monday, May 9th. \"She's pretty much conceding the NTF fight. The good news is that the Superior Court in Midtown took jurisdiction of the case, and they've enjoined the suspension of Ferrell until the case is heard. And that won't be for several weeks. The appeal will go to Leahy, and he's already gotten word to us that he's going to squash Jared and Maxwell like ants.\"\n\n\"Excellent!\" said Lewis. Dick Ferrell was sitting next to him, and Lewis shook Ferrell's hand. \"Congratulations, and welcome back, Dick!\" Lewis said.\n\n\"Thank you sir, and thank you for the work you've done for me on this.\" Ferrell said.\n\n\"No problem at all.\" said Lewis. \"So, Robert, what's next for us before I go to the campaign meeting?\"\n\n\"Now that the NTF is back,\" said Gaston, \"we're going to be making a drug raid... in our University's county.\" Ferrell grinned. Lewis did not.\n\n\"You guys just don't know when to to quit, do you?\" Lewis said.\n\n\"Sir,\" said Gaston, \"if we don't take care of this problem now... we only give the son of a bitch time to come against us on Jared's behalf. If you want to be elected Governor, sir... the Iron Crowbar must be neutralized as an impediment to your well-deserved success...\"\n\n* * * * * * * * * * * * * * *\n\nI knocked on the door of Assistant District Attorney Paulina Patterson, as her assistant Yvonne Newton was taking a late lunch with her sister Julie. Paulina had me come in. Of course she first showed me pictures of baby Tasha and we chatted about our daughter.\n\n\"Okay, what brought you in here?\" Paulina asked. \"And no, we're not going to make another baby; I have a meeting with Krasney in twenty minutes.\"\n\n\"Call and ask him to postpone it; and yes, it's for an important reason... and not making babies.\" I said. \"I need some warrants, and we're probably going to have to visit the judge to get one of them...\"\n\n* * * * * * * * * * * * * * *\n\nPaulina and I were sitting in the chambers of Superior Court Judge Rodney K. Watts. I had put on a tie and my Duty Dress jacket for the occasion.\n\nI explained the first warrant, which was to bring in Ben Ellman as a material witness. Judge Watts had no problem with that one. The second one required a lot more explanation, but he finally went with it.\n\n* * * * * * * * * * * * * * *\n\nLieutenant Teresa Croyle went into the Vice Room. \"Julie,\" she said, \"go to the Commander's office; he has an assignment for you.\" Detective Julie Newton locked her computer and left.\n\n\"Okay, guys,\" Teresa said, having the other Vice Detectives come to the long table in the middle of the room. \"I've got some intel that there's going to be a drug dropoff tomorrow night at Point Hollow. The scuttlebutt is that they think it's safe to go there precisely because we think they're avoiding the place. It's supposed to happen right after dark tomorrow night.\"\n\n\"But here's the catch.\" Teresa said. \"The FBI has asked us to not interdict. They want to see if these guys lead them to the last missing student, Danny Cantrell. Our only job is going to be holding the road south of the Water Works, in case the slugs decide to do something stupid like come back into my jurisdiction.\"\n\n* * * * * * * * * * * * * * *\n\n\"Come on in, Detective Newton.\" I said. I had her sit down, then said \"I want you to investigate something, and it's very delicate, so your discretion is very necessary to this. Have you heard about the rumors of guns being run through this County?\"\n\n\"I heard about them, sir,\" said Newton, \"but Lt. Croyle said they'd come to nothing.\"\n\n\"And she was correct.\" I said. \"But we've come across some new intel that militant Blacks may have been involved in running guns, and they want to use those guns to shoot white Police Officers.\" I handed her a file. \"This is all I have, it's thin, but there's a predominantly black moving business called 'Three Brothers Trucking'. Their address is off Jefferson Avenue. They have ties to the County Regional Banks. It may be nothing, or it may be something, but check into them, if you will.\"\n\n\"Yes sir, I will.\" said Julie. \"Especially if these bastards are going to target police officers.\" I could see a fire behind Julie's dark eyes...\n\n* * * * * * * * * * * * * * *\n\n\"Okay, so we're basically just playing a waiting game now.\" said Chief Moynahan as we sat in his office at 5:20pm. I was briefing him on the day's activities.\n\n\"Yes, sir.\" I said. \"Just a few threads to wrap up---\"\n\n*BRING!* *BRING!* *BRING!*\n\nIt was my Police cellphone, and it was FBI Special Agent in Charge Jack Muscone making the call.\n\n\"We've got Ellman.\" he said. \"He wasn't in Knoxville, Tennessee, but in Nashville. Said he was conferring with Biology professors at Vanderbilt University, but no one at the School knew a thing about it nor had any appointments with him. The Marshals will fly him back to you overnight.\"\n\n\"Thanks, Jack.\" I said. After we disconnected the phone call, I told the Chief: \"After we got the warrant, I put out a national APB for Ben Ellman as a material witness, with an emphasis for Tennessee. He was supposed to come home today, but didn't... and he didn't stay in Knoxville, either. The FBI found him in Nashville, and he'll be in our custody tomorrow morning.\"\n\n\"Good work.\" said the Chief. \"Do you think he'll be able to help us find Cantrell?\"\n\n\"I don't know, sir.\" I said. \"But I'm hoping he can shed some light on the disappearances, all of them. I'm not getting anywhere with anyone else, that's for sure.\"\n\n* * * * * * * * * * * * * * *\n\n\"Tomorrow night,\" said Ferrell, to Sharples and other SBI Agents of his newly-regathered NTF, \"we're going into the Iron Crowbar's turf. We're going to bust a drug operation at Point Hollow, where those students disappeared. The FBI wants to tail them, but we're going to arrest them inside the State Line. We'll get big headlines for the bust, and the FBI will be left holding the bag.\"",
        "\"What about the missing guy the FBI is trying to find?\" asked Agent Norm Chow.\n\n\"It's been long enough that he's either dead or he was the perp that kidnapped and hurt the other students.\" said Ferrell. \"But maybe we'll force these perps to tell us what they know about him. If they're involved, it's another coup for us at the FBI's expense.\"\n\n\"What about the 800-pound gorilla in the room?\" asked Agent Ted Ruble. \"What about the Iron Crowbar?\"\n\nFerrell smiled. It was an ugly smile. \"Word is that he's not patrolling the Point Hollow area because he thinks they won't go there after the students disappeared. We're going to humiliate him that way. But if he does show up... he'd better have a hell of a lot more than one machine gun, that's for damn sure. We're going to light his ass up like a Fourth of July fireworks show. And then... I'll spit in his face when he's dead.\"\n\nAs the meeting broke up, Ferrell had Sharples stay behind. \"Did you have your contact leak this to the TCPD?\"\n\n\"Yes sir, I sure did.\" said Sharples. \"He's ready to bust the Iron Crowbar... with extreme prejudice, if you get my drift...\"\n\nPart 23 - Gathering Storm Clouds\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely reporterette at 7:00am, Tuesday, May 10th, from in front of Police Headquarters. \"Channel Two News has learned that Federal Marshals brought Dr. Ben Ellman here to Police Headquarters within the last couple of hours. Dr. Ellman is considered to be a material witness in the case of the disappearing students, and he was brought from Tennessee on a warrant issued by Judge Rodney K. Watts of the State Superior Court.\"\n\n* * * * * * * * * * * * * * *\n\n8:00am. Ben Ellis was in Interrogation-1. He had immediately asked for a lawyer upon arrival, and H.J. Lynch of the firm of Chase, Lynch, and Berry, P.C. was representing him. I had hoped Ellis's trip was long and exhausting, and that he'd be agitated. But it was hard to determine who hated me more at the moment: Ellis, or his CLB legal beagle. Paulina Patterson was in the room with me. You do not need three guesses to get it right that Sergeant Rudistan was the Uniformed presence.\n\n\"What the hell is this about, Troy?\" thundered Lynch when I came in. \"Harassing citizens again, coercing and intimidating them, yet again. Chasing this man across half the United States, humiliating him by arresting him and having Federal Marshals bring him in like he's some kind of common thief in the night... Now why are you exercising your police brutality upon this good man?\"\n\n\"If you're done with the B.S. theatrics,\" I said, \"I'll tell you why I had Dr. Ellman brought in. He was supposed to return yesterday; he did not. He is a material witness in the disappearances of six students. Now, Dr. Ellman...\"\n\n\"I demand that I be released immediately, or else formally charged with a crime.\" said Ellman, hostility dripping in his voice.\n\n\"A warrant was issued for your arrest, Dr. Ellman.\" I said. \"And you are now under arrest as a potential flight risk. What were you doing in Nashville, by the way?\"\n\n\"I intended to interview for a position at Vanderbilt.\" said Ellman. \"I did the same at the University of Tennessee, and a friend said he would set me up for an interview at Vanderbilt while I was in the State.\"\n\n\"Who was this friend?\" I asked.\n\n\"I'm not a rat; I don't narc on friends.\" said Ellman. \"Now with what am I being charged?\"\n\n\"You're not yet being charged with anything.\" I said. \"You are being detained as a flight risk and being an uncooperative but material witness.\"\n\n\"You didn't give him a chance to come back, Troy.\" growled Lynch. \"He didn't even know he was being sought, so how could he be a flight risk?. And I don't blame citizens that don't cooperate with abusive cops.\"\n\n\"Good!\" I said. \"So Dr. Ellman should be cooperating with me. Dr. Ellman, I want to ask you about your trip to collect samples---\"\n\n\"I demand to be released immediately, or else charged with a crime.\" said Ellman. He turned to his lawyer and said \"Do I have to put up with this bastard's crap if I'm not charged with a crime?\"\n\n\"Don't worry, Dr. Ellman.\" said Lynch. \"We're the first case when Court goes into session at nine o'clock. I'll have you out of here in five minutes.\"\n\nPaulina turned to me and said \"Just do it.\" I got out the card.\n\n\"Dr. Ellman,\" I declared with authority, \"you are under arrest as a person of interest in the disappearance of six students, the sexual assault of three of them, and the continued disappearance and possible death of one of them. You have the right to remain silent. If you give up the right to remain silent, anything you say can and will be used against you in a Court of Law. You have the right to an attorney, and to have an attorney present during any and all questioning. If you so desire but cannot afford an attorney, one will be appointed for you by the Court at no charge to you. Do you understand these rights as I've read them to you?\"\n\nEllman refused to answer. I held up the card to the camera over the one-way glass and said \"Let the record show that I have mirandized Dr. Ellman and advised him of his Constitutional rights. Now Dr. Ellman...\"\n\n\"I wish to confer with my lawyer.\" said Ellman. He obviously was prepared with the maximum time-wasting runarounds, but Paulina and I got up and left, and Rudistan guarded the other door from the outside.\n\n\"Think he did it?\" asked Cindy in the anteroom as we watched them talk, though prohibited from listening in. \"His actions are certainly suspicious.\" She then added \"That's not meant to deny him his rights, but still...\"\n\n\"I know what you mean, Crowbar 2.\" I said. \"And I agree that his actions are pretty suspicious. Something is not right, here, though it may not be this disappearance case.\"\n\n\"What do you mean, Mr. Crowbar?\" asked the Chief, who was also watching along with Teddy Parker.\n\n\"He's making sure to legally protect himself from something.\" I said. \"He was looking for jobs in Tennessee, meaning he wants out of here, permanently and soon. He did not come back yesterday, as he was expected to do.\"\n\nWhen we came back in, the lawyer Lynch said \"My client has not yet invoked the Fifth, but reserves the right to do so at any time. Until he does, you may ask questions, and he will give truthful answers, provided I agree that it is okay to answer.\"\n\nThis guy must think I'm stupid, I thought to myself. He just wants to know what the charges might be against his client, via the nature of my questions.\n\n\"I just have a few questions at the moment.\" I said, my own need for answers outweighing playing games with the legal beagle. \"When the six students went to Point Hollow, what were the arrangements to get them and return them to the University Campus?\"\n\n\"I don't know.\" said Ellman. \"You'll have to ask Dr. Mickelson.\"\n\n\"You went to the nuclear power plant site to take samples?\" I asked.\n\n\"South of the facility, along the River.\" Ellman said.\n\n\"And when and how did you get back?\"\n\n\"Sunday. By the vans that took us there.\" said Ellman.\n\n\"And you didn't see any of the six missing students at any time after getting back?\" I asked.\n\n\"No.\" said Ellman.\n\n\"All right.\" I said. \"That's all I've got for now. \"Paulina, at the least we'll need this man to be under house arrest, ankle monitored.\"\n\n\"Oh come on.\" said the lawyer Lynch. \"For what?\"\n\n\"I'm going to have more questions for Dr. Ellman, and soon.\" I said. \"And he's absolutely a flight risk.\"\n\n* * * * * * * * * * * * * * *\n\n\"Ellman is under house arrest, ankle monitored.\" said Paulina in my office when she got back from Court. \"Judge Folsom was less than amused at the scarcity of your reasons for holding him, and Lynch fought like hell. It was the flight risk situation that saved us from having to let him go.\"\n\n\"I appreciate it, and your hard work on it.\" I said.\n\n\"So,\" said Paulina, asking on behalf of Cindy, who was also in the office, \"what gives? Why hold him?\"\n\n\"What I said was true: he's a material witness to this case. We'll get it all ironed out tomorrow. We've got a drug bust lined up for tonight, then tomorrow I'll bring in the FBI and see if we can't help them find Danny Cantrell...\"\n\nPart 24 - Evil at Point Hollow \n\nIt was cloudy, the sun obscured as it was setting on the evening of Tuesday, May 10th. The two men were under the trees in the Hollow. One looked over the rise of the land towards the house. There was a figure in the window of the lighted greatroom.\n\n\"Okay, you stay here.\" the man said to the other man in the trees. \"I'll be back in a minute.\"\n\nThe man climbed up the trail to the land that was in front of the house.\n\n* * * * * * * * * * * * * * *\n\n\"All right, let's go.\" said Ferrell. \"The drop will be soon.\" \n\nThe agents got into the two ubiquitous black vans, with regular State car tags instead of State Government tags. The drove to the road leading up to Point Hollow and turned north. The men were heavily armed with military-assault-grade weaponry... and not all of it was meant for the drug perps.\n\n* * * * * * * * * * * * * * *\n\nHe did not see anyone as he neared the front of the house. The wind was flowing through the trees, creating eerie whispers that seemed to call out to him. He ignored the atmosphere, concentrating on his task. \n\nHe saw no one as he approached the window. Looking inside, he saw what he wanted to see: his target. The Iron Crowbar. He was in the window, facing sideways, apparently talking to other people.\n\nHe took out his silencer-equipped semi-auto pistol and took careful aim at the red head above the trenchcoat. He gently pulled the trigger.\n\nHe heard the tinkle of the breaking glass of the window and saw the Iron Crowbar falling as he turned to run back to the copse of trees. He heard the beginnings of voices shouting from inside the house, but he knew it was too late...\n\nTo be continued.\n\nSo, dear readers... what happened with the disappearing students? And will the TCPD have to solve this and other problems with their Commander dead by an assassins' bullet? Who fired the shot? And what will happen next? Has the Consultant won, despite all efforts to stop him?"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/point-hollow-ch-04"
}