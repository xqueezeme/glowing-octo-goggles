{
    "title": "The Phoenix Partners",
    "pages": [
        "Many thanks to SBrooks for his invaluable advice and editing. If there's anything that still doesn't work, it's probably something I chose not to follow his suggestion about.\n\nRose Valley, Oregon, population 1134, is located about two hours southeast of Portland at the eastern edge of the Mount Hood National Forest. Rose Valley is home to the Maitland Mills, a specialty supplier of natural, organic and heirloom grain-based products. Founded in 1907, the Mills were handed down through three generations of the Maitland family before becoming an employee-owned company in 1996. At the beginning of the 21<sup>st</sup> century, The Maitland Mills employed 420 people, providing 60% of Rose Valley's jobs, with the rest of the town's economy mostly supported by the income from those jobs.\n\nMy name is Geoffrey Lee, and Rose Valley is where I was born and raised. You may have noticed that I didn't say it's \"my home,\" or \"my home town,\" or any of the other things people say when they talk about places they live or used to live and have warm feelings of love or nostalgia for. And therein lies my story.\n\n<hr size=\"2\" align=\"center\" >\n\nMy older brother Paul and I weren't officially considered \"mill kids,\" because our parents weren't employees of the Maitland Mills. Mom and Dad owned and operated - and Mom still owns and operates - Lee's Garden, the town's only Chinese restaurant, across the street and a block south from City Hall.\n\nLee's Garden was opened in 1947 by our grandparents. Grandpa was the scion of a successful Portland restaurant family, and after he returned from service in WWII he and my grandmother were ready to open their own place. Rather than start yet another restaurant in Portland's Chinatown, they chose Rose Valley. Why here? Because the town didn't have a Chinese restaurant, and with his fellow servicemen coming home from the Pacific theater after being exposed to the cuisines of places like Japan, China, the Philippines, etc., Grandpa saw opportunity outside the big city.\n\nAt first, the restaurant was called \"Lee's Chinese and American.\" Grandma and Grandpa bought a downtown coffee shop from Fred and Mary Peterson, an elderly couple ready to retire, and added a selection of Cantonese dishes to the Peterson's existing menu. They held onto longtime customers by keeping everyone's favorite items, especially Mary Peterson's fried chicken, which Mary herself used to come in every Friday to make until Grandma had the recipe down (Mary's Chicken is still on the dinner menu every Friday night, by the way). At first Grandma and Grandpa lived in one of the apartments upstairs from the restaurant, but when my Dad was born the family built a tea garden and house behind the restaurant. When Grandpa passed away and Grandma retired, Mom and Dad took over running the restaurant while Paul and I spent most of our after-school time in the house under Grandma's watchful eye. Grandma passed away when I was a senior in high school and Paul was in his third year at Portland State University.\n\nMy \"girl next door\" was Kathy O'Haney. Her father, Pete, was a deputy with the county sheriff and her mother, Rose, supplemented Pete's salary by working a few hours a day at Lee's Garden. The O'Haneys actually lived next door to our grandparents' house, not the restaurant, but since Paul and I were at the house most afternoons after school and all day on weekends, close enough. When I was eight and Kathy was starting the first grade, our parents assigned Paul and me to walk her to and from school. One day when she got home she told her mother, \"I'm going to marry Geoff when I grow up,\" and from that day on, nothing ever happened to convince our parents that anything different was going to happen.\n\nKathy and I were best friends in grammar school, went steady in high school, and during my first two years away from home at PSU spent as many weekends and holidays as we could together. It was during one of my visits home (for Kathy's senior prom), that we gave each other our virginities. As soon as Kathy graduated high school she showed up in Portland as a PSU freshman.\n\nIn June of 2001, Paul passed the Oregon Bar, Kathy received her Bachelor's in Accounting, I added an MBA to the Bachelors in Mechanical Engineering I had received two years earlier and we all came home to Rose Valley to begin our new jobs. Paul became an associate to a local general practice attorney, Kathy signed on as a junior accountant in the Maitland finance department, and I went to work as an engineer in the Maitland Operations department, which managed the company's production, quality control, packaging and distribution. Kathy and I had been \"unofficially engaged\" ever since that day she had first declared her intention to marry me when we grew up. When we returned home we made our engagement official, ring and all, and we tied the knot that September.\n\nIn January of 2002, Pete O'Haney was struck and killed by a car while assisting a stranded motorist. Soon after that our dad was diagnosed with pancreatic cancer, and even though it was caught early, it didn't seem to respond to treatment. We lost him just after Christmas. Faced with the prospect of living alone in their houses next door to one another, our moms decided to become roommates. Mom moved in with Kathy's mom, Kathy and I moved down from our apartment over the restaurant (Paul was living in the other one) to the house and my cousin Zhen from Portland moved into the apartment and became the restaurant's new chef.\n\nOur mothers insisted that Kathy and I shouldn't put off starting our family any further. I think planning for the birth of their new grandchild gave them something to keep their minds off our losses of the previous year. Our daughter Callie entered the world on Oct 24, 2003. She was perfect.\n\n<hr size=\"2\" align=\"center\" >\n\nRose Valley had always seemed isolated from the ups and downs of the national economy. No matter what was going on in other economic sectors, people still needed what the Maitland Mills produced. The first downturn of the 21<sup>st</sup> century was no exception to this. But soon after, another economic monster came upon the scene: unregulated mortgages. Our town wasn't a fertile field for the McMansions that grew like a fungus across much of the country; the mill's employee management board kept a tight rein on the company's growth to avoid the kind of boom and bust hiring and layoff cycles that seemed to characterize employment in the modern world, and we were too far from the nearest center of growth to be a commuter bedroom community. But mortgage refinancing was another matter. Homeowners were bombarded with offers to refinance homes at amazingly low interest rates, and those who responded found their homes appraised at higher values than they had ever thought possible. Americans became enamored with the miraculous concept of using their homes as ATMs, and the citizens of Rose Valley were as susceptible to the epidemic as everyone else.\n\nIn 2008 the bubble burst. America discovered that predatory lenders had targeted borrowers who could never make their payments when low rates didn't stay low, that corrupt appraisers had deliberately overvalued homes and that banks were hiding bad loans by \"bundling\" them with good ones into securities that were knowingly being overrated. Borrowers in Rose Valley, as in the rest of America, found themselves buried in debt and their homes sinking deeper and deeper underwater. And that was when the worst predator of all made his appearance.\n\n<hr size=\"2\" align=\"center\" >\n\nHis name was Troy Tenneson. Multimillionaire president of Tenneson Equity Partners, a private equity firm that acquired small companies and \"regrew\" them, and he seemed to appear as if by magic during the worst of the mortgage crash. To Rose Valley homeowners being hounded by lenders threatening foreclosure on their underwater mortgages, Tenneson Equity's offer to buy the Maitland Mills was like throwing life preservers to the passengers of the Titanic.\n\nThe company quickly divided into two camps, for and against accepting the buyout offer. I was among those who argued against. Congress and both candidates in the Presidential election were already starting to talk about passing some sort of debt relief, and it seemed premature to be jumping from using homes as ATMs into doing the same with the town's primary source of jobs. And the amount offered was lower than most business analysts thought the company should be worth. But most of all, to be blunt, Tenneson was a swaggering, arrogant son of a bitch, and there was something about him and his people that simultaneously pissed me off and made my skin crawl.\n\nBut the money being offered, divided amongst the employee owners, would be enough for people to get out from under. Most of the proceeds people received would go to the lenders, but their loans would be paid off. And Tenneson and his partners offered all sorts of optimistic projections about how much they could grow the company and bring \"real growth\" to Rose Valley's \"stagnant\" local economy. Those of us who opposed the sale were outvoted, and at the end of October, 2008, the 102-year history of the Maitland Mills as a locally owned and operated Rose Valley company came to an end and the company became Maitland, Inc.\n\nProblems began almost as soon as the new management was in place. Local family farmers who had sold to Maitland for generations found themselves forced to lower their prices or lose sales to out-of-state-suppliers, and even if they agreed, payments took longer and longer. Production was ordered to increase speed, and quality inspectors were overruled when they wanted to halt the lines to fix problems. Even the packaging started coming from unfamiliar sources, and was of cheaper quality. Distributors and retail outlets started complaining about product quality. But month after month, Finance kept reporting a healthy increase in sales and profits, so nothing was ever done. The new management said it was just a reflection of the degree to which the old Maitland had \"gold plated\" its products to the point where they weren't bringing in an \"optimal return on investment.\"\n\nIt just didn't make sense to me. How could management that was just so obviously... stupid... be running the company profitably? Maybe it was because I had grown up watching Robert Maitland and my father throwing back shots of single malt and rice baiju every Friday night as a kid, or the sage advice both men had given Paul and me during our teen years about never giving anything less than our best efforts, or maybe it was the little voice in my head that kept telling me that what we were being told just didn't make any sense, but keeping my mouth shut and my head down while the Tenneson management turned what used to be a high quality line of products into utter crap just didn't sit well with me. I persisted in raising issues, and as time passed the idea of walking away from a job I found myself less and less able to take pride in and joining Mom in running Lee's Garden was starting to sound better and better to me.\n\nThe worst thing about what was happening at Maitland was that Kathy didn't seem to think there was anything wrong. Okay, so the quality of our product wasn't what it used to be. Maybe consumers really didn't care if their flours and meals were made from lower quality ingredients, weren't as consistently milled as they used to be and weren't as well packaged as they used to be. After all, sales hadn't suffered and revenues were actually up, weren't they?\n\n\"We're not owners anymore, Geoff,\" Kathy would say, \"We just put in a day's work and collect our checks now. Unless you keep stirring things up the way you are.\"\n\nThe less said about Kathy's reaction to my thoughts about quitting Maitland in favor of the restaurant the better. They weren't pretty. As time passed there was less and less shop talk between us. But Callie was a good listener, even if her \"solution\" to all of Daddy's sad moments was a tea party with dolls.\n\n<hr size=\"2\" align=\"center\" >\n\nJanuary of 2009 saw the inauguration of a new President. A month later, federal programs were passed to modify and refinance troubled home mortgages to reduce payments and foreclosures. Economists and politicians still argue about whether these programs were successful, so I won't say that Rose Valley's mortgage foreclosure crisis could have been resolved without the employees of Maitland Mills cashing out their ownership of the company. But to this day, the fact that we couldn't persuade them to try still sticks in my craw.\n\nBy the summer of 2009 it had become obvious that the economy wasn't in just another recession. The domestic uncertainty of \"the war on terror,\" two foreign wars, the near-crash of the stock market, the bursting of the housing bubble and the epidemic of mortgages gone bad had been labeled \"The Great Recession,\" and America was hemorrhaging jobs. So it didn't come as a surprise to anyone that despite continuing to report record sales and profits, layoffs came to Maitland for the first time since the Great Depression of the 1930s. There was a lot of big talk from management about how the reductions would \"hopefully\" not be long term and about severance \"benefits,\" but it did not go unnoticed that the 30% or so of Maitland's employees who lost their jobs consisted almost exclusively of those who had voted against the selloff to Tenneson Equity Partners the year before, and shown reluctance to \"go along to get along\" with the new management.\n\n\"So you'll get your wish about becoming kitchen help after all,\" Kathy sneered as we waited for my turn at the guillotine. Her tone was anything but sympathetic; if anything, it was mocking. I let it pass. There was just no point in another of \"those\" exchanges. My time was better spent with Callie and her dolls.\n\nBy the time my call from HR came, I was ready to leave.\n\n\"Never mind the separation benefits speech, Sharon\" I told the HR manager as I walked into her office, \"I'm not going to sign the nondisclosure agreement or the release of claims waiver. Just hand me the state-mandated checks for my last week and my unused vacation and get my COBRA forms into the mail and I'll be on my way.\"\n\n\"I'm sorry, Geoff.\" Sharon said sadly. Sharon Metcalf had been Maitland's HR manager since before I had joined the company. A usually smiling woman about my Mom's age, she was the company's unofficial \"den mother,\" and like me had voted against the Tenneson buyout. I had no doubt that she felt just as bad about what was happening to the company as I did. \"But there's a lot I'm supposed to go over with you...\"\n\n\"Well, what are they going to do to me if I refuse to sit through it?\" I asked with a shrug, \"Fire me?\"\n\n\"Save a place for me on the unemployment line?\" Sharon sighed as she handed me my severance packet. She obviously expected that once she had delivered everyone else's, there'd be one for her as well.\n\n\"Come by the restaurant when you don't have to worry about being accused of fraternizing with the enemy anymore,\" I told her, \"Dinner and an umbrella drink on me.\"\n\n\"Deal.\" We shook on it, and she even kissed me on the cheek before I left.\n\nI had removed all the personal property I wanted to keep from the office weeks ago, so I just said, \"let's go\" to the security guard whose task it was to escort me from the building, got into my car and headed for Callie's school. A tea party with dolls sounded like just what I needed right about now.\n\nI got to the school as classes were breaking for lunch, and after stopping in at the office to arrange a \"family emergency\" release for the rest of the school day, buckled Callie into her car seat and headed for home. Kathy didn't answer her phone when I called, so I had no idea if she knew I'd been walked out the door. I made a quick call to let the grandmas know that they wouldn't need to pick Callie up after school as they usually did, headed for home and figured we'd all have a family meeting about it when Kathy got home.\n\n<hr size=\"2\" align=\"center\" >\n\nSomething didn't \"feel right\" when we got home. Maybe I just wasn't used to seeing the house empty, especially at midday. Or maybe that day everything in the world just felt \"not right.\" It wasn't as if the house had been stripped or there were drawers or closet doors left open. I'll probably never know why it felt the way it did.\n\nBut the note on the kitchen table left no doubt about what \"wasn't right\":\n\nYou had to do it. You just couldn't let it go and now you're fired. I'm not going to end up supporting your dream of being kitchen help. I'm leaving you for someone who can do better for me and Callie. You can keep everything. I don't want any of it. Don't bother to look for us. We're gone and you'll never find us. Sign the papers when you're served and don't make problems, or you'll never see your daughter again.\n\n\"Crap,\" I muttered to myself, and hit Paul's speed dial.\n\n\"Paul, I got fired today and Kathy's gone. She left a note that says she's taken Callie and if I don't sign divorce papers I'll never see her again, but I picked Callie up before I came home and she's with me.\"\n\n\"Get out of there right now, Geoff,\" Paul said, \"Don't wait for the papers. You and Callie come to the office, and make sure you bring that note with you.\"\n\nTwenty minutes later, I was sitting at a conference table with Paul and his boss, Alex Benson, while Alex's PA was keeping Callie entertained.\n\n\"You've thrown a monkey wrench into your wife's plan,\" Alex told me, \"You were supposed to be sitting in an exit interview while she took Callie and left, probably for somewhere out of state.\n\n\"Any idea who this 'someone who can do better' is?\" Paul asked.\n\n\"Not a clue,\" I said, \"My guess is that it's one of those out-of-town managers that Tenneson brought in to run the mills, but she's never mentioned any of them by name.\"\n\n\"What about her threat?\" Paul asked, \"Can she do that? Keep Geoff from seeing Callie?\"\n\n\"If she'd managed to get her out of state, maybe,\" Alex said, Kathy's note in his hand, \"But she's shot herself in the foot with this.\n\n\"The state of Oregon, like most other states, makes custody decisions based on which parent represents 'the best interests of the child.' Unlike some other states, however, Oregon law specifically bars basing that decision on whether the parent is the mother or the father.\n\n\"Is one of you the primary caregiver?\"\n\n\"We've both always worked,\" I replied. \"I drop Callie off at school every morning. One of our mothers picks her up after school and they both look after her until we get home from work.\"\n\n\"Either of you ever abused the other, verbally or physically, or abused Callie?\"\n\n\"No, and we practically live with our family, so there's no way anything like that could happen without them knowing.\"\n\n\"Now that you've lost your job, will you have financial issues supporting a child?\"\n\n\"I've always had a fallback in the family business. And if Callie is living here, she's got two grandmothers for a support system.\"\n\n\"And an uncle,\" Paul added.\n\n\"Then the biggest factors the court will consider will be 'attitude of parents toward the child,' and 'the willingness and ability of each parent to facilitate and encourage a close and continuing relationship between the other parent and the child.' And this,\" Alex said, waving Kathy's note, \"Is going to be Kathy's kryptonite. Threatening to withhold access to a child to force your spouse to sign divorce papers will be the opposite of encouraging a close and continuing relationship in the eyes of the court.\"\n\nAnd so we filed a counterclaim, arguing that Kathy's plan to abscond with our daughter and use threats to withhold visitation to extort my signature on the divorce papers, a plan that was only thwarted by my unexpected early departure from being terminated from my job, was evidence that granting her any form of custody was not \"in the best interests of the child.\" The court granted me temporary custody pending a final decision, and we prepared to do legal battle.",
        "The high-priced legal team that appeared in court to argue against us quickly revealed who Kathy's \"someone who can do better\" was.\n\nTroy Tenneson. But you saw that coming didn't you?\n\n<hr size=\"2\" align=\"center\" >\n\nI've already told you my opinion of Troy Tenneson. He thought he was smarter, richer and more powerful than you, so you should just lay down and let him walk all over you. Or rather, let those he hired to walk all over you do their jobs, because walking all over you himself was beneath him. But where our divorce was concerned, Tenneson's wealth, his power and most importantly his attitude all ended up working against him.\n\nAlex decided that Paul should take the lead and be my attorney of record while he served as advisor and took care of the rest of his and Paul's clients. We'd be two brothers standing together against Tenneson's school of legal sharks, a pair of Davids against an army of Goliaths. The sight of a half dozen lawyers in five thousand dollar suits showing up to try to steamroll over a small town lawyer representing a newly unemployed husband and father fighting for the daughter who was all he had left that could be taken from him rubbed the county judge in the family court the wrong way from day one. The fact that the newly unemployed husband and father was being divorced and sued for custody by a wife who had left him for the wealthy man who had so recently made the husband and father unemployed and was paying for the half dozen lawyers in five thousand dollar suits did nothing to relieve that first impression. When the mother of the wife who had left the newly unemployed husband and father angrily declared to the court that she would be happy to help her son-in-law care for her granddaughter but wanted nothing to do with her own daughter, some of those lawyers in five thousand dollar suits started to look nervous. And when copies of the wife's \"fuck you, loser kitchen help\" farewell note threatening to keep the husband and father her lover had made newly unemployed from ever seeing his daughter again were distributed in court the half dozen lawyers in five thousand dollar suits looked as if they'd rather be anywhere else but in that county judge's family court.\n\nUltimately, the judge took Kathy's note at face value. She ruled that Kathy had relinquished all claim to our marital assets, not that there were all that many marital assets to claim; our house was in my mother's name, as was the family business, so the assets consisted of our cars, IRAs and the contents of our savings and checking accounts. But most importantly, the judge agreed with Paul's argument that Kathy's threat was evidence of a negative attitude toward her own child and a clear unwillingness to \"facilitate and encourage a close and continuing relationship between the other parent and the child.\" She granted full custody of our daughter to me, allowing Kathy unlimited visitation but only with court-approved supervision. Kathy stared daggers at me as she left the courtroom, and Tenneson, who had shown up only on the last day of proceedings, probably expecting to bask in the triumph of my defeat and humiliation, had the shocked look of a hulking bully who had just been beaten by a 98 pound weakling.\n\nWe closed the restaurant that evening for a private celebration, though I seemed to spend most of the evening hugging a crying Rose O'Haney, thanking her for her support in court and assuring her that I didn't feel that what Kathy had done was in any way her fault.\n\nA couple of weeks after our divorce was final Kathy became the fourth Mrs. Troy Tenneson, and the \"happy couple\" made their home in Los Angeles. Kathy actually sent her mother a wedding invitation. Rose's reaction was... colorful, and became characteristic of their relationship from that point on.\n\nKathy flew back to Oregon in Tenneson's private jet every week, but her visits with Callie became problematic. The court readily accepted Callie's grandmothers as court approved supervision, but their home, the house Kathy's parents had raised her in, proved to be unworkable as a visitation location. Kathy and her mother kept getting into screaming arguments every time Kathy visited, the last of which ended with Rose calling her daughter \"an evil bitch she was ashamed had ever come from her womb,\" and declaring that Kathy \"should never again dishonor her sainted father's memory by setting foot in his house.\" We moved visitations to the restaurant, where we rearranged one of our two private dining rooms into a play space. Rose was more restrained in the presence of the staff and customers, but every time Kathy came, she took up a position at a table just outside the door, \"just in case the bitch tries to do something she shouldn't.\"\n\n<hr size=\"2\" align=\"center\" >\n\nMy idea about going back to the restaurant turned out to be premature. The reality was that having grown up in the business there wasn't all that much left for me to learn about running it, and until my mother was ready to retire, I wasn't needed there full time. And since Mom's opinion of retirement was that it was \"waiting to die,\" retirement wasn't going to happen anytime soon. So when Marty Ball, my former boss from Maitland Operations who had been fired at the same time as me, stopped in one day to tell me that he and some of the other fired Maitland managers were getting together to talk about starting their own business and asked if I would be interested in joining them, my answer was an immediate, \"Hell, yeah.\"\n\nThe idea behind the new business, which we named \"Phoenix,\" after the mythical bird that erupts in flames as it dies and is reborn out of the ashes (we almost called it \"Lazarus,\" but someone had beaten us to the name, believe it or not) was to bring the suppliers who had been lowballed or dropped as vendors by the \"new\" Maitland together to form a cooperative. We'd produce a high-quality product, and market it to boutique natural food retailers who were increasingly refusing to carry the lower quality \"new Maitland\" products. Our foot in the door was that we were the management group from the \"old\" Maitland they used to have a good business relationship with\n\nSince we didn't have any \"operations\" to manage yet, and if we ever did Marty would manage them, I was tasked to apply my previously untapped MBA to devise a business plan we could present to banks to secure funding and a marketing plan to convince the people we wanted to bring together that we could actually sell what we proposed to produce. That was what I was working on the day the call came.\n\n\"Geoff!\" Paul's shouting voice came from my phone when I picked up, \"Where are you?\"\n\n\"Meeting in Pendleton,\" I replied concerned at his tone, \"What's up?\"\n\n\"Kathy tried to take Callie! Rose tried to stop her, and... Rose and Callie are both in the hospital, it's bad, Geoff, you have to get back here!\"\n\n\"On my way!\" I shouted, and quickly broke up my meeting and ran for my car. I was about seventy miles from home, and probably broke every speed limit there was along the quickest route back.\n\nAs I drove, Paul brought me up to speed. Kathy had arrived for her visitation as usual, in a big, fancy car with a driver, who always waited in the lounge while Kathy was with Callie. But at the end of the visit, Kathy grabbed Callie's arm and started dragging her out the front door. Rose tried to stop them, but Kathy's driver stepped up and blasted Rose in the face with pepper spray, and as Rose started screaming the two of them exited with Callie in tow.\n\nSomehow, despite the searing pain and being nearly blinded by the chemicals in her eyes, Rose ran after them. When Callie saw her Gramma stumble and collapse in the street, she broke free from Kathy's grasp and ran back toward Rose.\n\nThe driver of the truck wasn't speeding, talking on his phone, texting or doing anything else he shouldn't have been doing. But the realities of human reaction time and braking distance meant there was never any chance of swerving or stopping his huge, heavily loaded truck in time.\n\nMuch later, I would learn that the truck's trailer was boldly emblazoned with the logo of \"The NEW Maitland Mills.\"\n\n<hr size=\"2\" align=\"center\" >\n\nMy mother-in-law, Rose Bridget O'Haney, died in the emergency room shortly after I arrived at the hospital. She was fifty-eight years old.\n\nMy daughter, Callie An Lee, lingered in a coma for eight days before her tiny body gave up fighting for life. She would have been seven in another month.\n\nI \"checked out\" after that. I remember the doctor telling us Callie was gone. The next thing I knew, it was two days later and I was in the restaurant kitchen cutting up a chicken. It should have been disquieting to suddenly find myself with a razor-sharp cleaver in my hand and no memory of how it got there, or how I got where I was, but at the time it just didn't seem to register. Apparently, Mom and Paul had sort of hovered over me and made sure I didn't do anything to harm myself with sharp things as they waited for me to get hold of myself. I guess I did, but at the cost of not being able to feel much of anything for a very long while.\n\nArrangements were made for two more family funerals. I was surprised when I was informed that there were papers recently signed by Rose naming me as her next of kin for all legal matters and a will leaving everything to Callie and/or me, but it was something \"Chinese-y\" that Rose had picked up from spending so much time working and living with my Mom; I had married the daughter of a family with no sons, and Rose had disowned her daughter for leaving me. So the duty of making Rose's final arrangements and disposing of her estate fell to me as Rose's \"son.\"\n\nI couldn't live in the house anymore; there were just too many memories and they were all just too raw. I took Paul's apartment, and he and cousin Zhen argued over who should take the house. Zhen prevailed by insisting that he had to be close to \"his\" kitchen, so Paul ended up being the one living alone in a three-bedroom house. Mom was technically living alone in Rose's house, which was now legally mine, but she was spending most of her time in the restaurant or with me in my apartment and only going back to the house to sleep.\n\nKathy and her driver had been arrested at the scene the day of the accident when the restaurant staff and witnesses on the street told police what they had seen. The DA charged Kathy with \"custodial interference in the first degree,\" and her driver with \"kidnapping in the second degree,\" for their attempted abduction of Callie, and the driver with \"assault in the third degree\" for macing Rose, all felonies, which enabled her to charge them both with two counts of \"felony murder\" for the deaths of Rose and Callie. They were both facing mandatory prison sentences as high as 25 years, and when the DA had Paul and Alex appear at their arraignments to provide the judge with information about Kathy's previous threat to take Callie and the fact that Kathy had left me for a multimillionaire from out of state and her driver was employed by that same person, both were deemed flight risks and denied bail pending trial.\n\n\"I need to tell you that they probably won't be convicted on these charges,\" the DA told us, \"though I certainly think they're guilty of them. The vast majority of cases like this end in plea bargains.\"\n\n\"I don't suppose there's any chance of tying Tenneson to this,\" Paul asked. \"It had to be his money behind it.\"\n\n\"I doubt it, but we could take a shot at offering them more generous plea bargains if they'll implicate him.\"\n\n\"If you think you can get them to do that, try,\" I said, still devoid of emotion, \"Otherwise, nothing you do can bring Rose or Callie back, and I don't care.\"\n\nThe DA proved to be correct. Neither Kathy nor the driver could implicate Tenneson, and they eventually entered guilty pleas to two counts of \"second degree manslaughter.\" With concurrent sentencing they'd be eligible for parole after serving the state mandated minimum sentence of six years and three months. I chose not to speak or submit a \"victim's statement\" at either of their sentencing hearings. I've heard that some people feel a sense of satisfaction, justice or closure when those who have harmed them or those they love are sentenced. I felt nothing.\n\nThe first months after that were a blur. When I was working, whether in the restaurant or on Phoenix business, time seemed to fly by. When I wasn't, it slowed to an interminable crawl. The nights were the worst, and sleep was hard to come by. I finally decided that flying by was better than crawling, and worked as much as I could. I was digging a hole in the tea garden to plant a new shrub when my phone rang.\n\n\"Hello,\" said a female voice with an accent. French, I thought. \"My name is Sofie Soulis. Am I speaking to Mister Geoffrey Lee of the Phoenix Group?\"\n\n\"Yes, you are,\" I replied. Soulis, named sounded familiar.\n\n\"I am calling for Mister Arnau Soulis. Mister Soulis would like to meet with you to discuss a partnership opportunity.\" Arnau Soulis, that name I knew. Multi-billionaire Greek shipping magnate.\n\n\"Well,\" I said, \"I am not really the person you should be speaking to about a partnership with Phoenix.\"\n\n\"We would prefer to discuss this with you first, for personal reasons.\"\n\n\"Oh,\" I said, unable to think of anything that a billionaire Greek shipping magnate would want to talk with me about for personal reasons. There were a few moments of dead air, and then another voice came on the line.\n\n\"Mister Lee, this is Arnau Soulis. I believe we have a common interest and may be able to be of assistance to one another...\n\n\"Troy Tenneson.\"\n\n<hr size=\"2\" align=\"center\" >\n\nTimberline Lodge is situated on the south side of Mount Hood, about 60 miles east of Portland. It was built and furnished by local artisans during the Great Depression under the sponsorship of the Works Progress Administration, and dedicated September 28, 1937 by President Franklin D. Roosevelt. The lodge is a National Historic Landmark within the Mount Hood National Forest. If you saw Jack Nicholson in The Shining, the resort was the exterior of the \"Overlook Hotel.\"\n\nI checked in three days after the call from Arnau Soulis, ostensibly needing to \"just get away and clear my head\" of my black cloud of sadness in Rose Valley. I didn't mention to anyone that I'd be meeting someone else there. There was a message waiting for me at the front desk inviting me to dinner at one of the luxury condominiums at the nearby Lodge at Government Camp, and the lodge's concierge had arranged for someone to drive me there and back.\n\nUpon my arrival I was greeted by Arnau Soulis, a dapper looking elderly gentleman. Sofie Soulis, his companion, was a woman a few years older than me who bore no family resemblance whatsoever to Soulis and turned out to be his daughter-in-law. They both insisted we all use first names, and we sat down to be served a sumptuous dinner. All mention of business, whatever that was going to be, was deferred until after the dishes had been cleared away.\n\n\"Your recent experiences with Troy Tenneson are known to us,\" Arnau finally began, \"But I doubt that Sofie's and my experience with the man are known to you.\n\n\"Troy Tenneson is responsible for the murder of my son, Armand,\" Arnau flatly declared, \"Sofie's husband.\"\n\n<hr size=\"2\" align=\"center\" >\n\nArnau Soulis was a man with a checkered past. The son of a Greek fisherman who had no wish to inherit his father's life, he instead used his small fishing boat to carry cargo, almost none of it legal. In time, he owned a fleet of such boats. In more time, he owned a fleet of freighters and oil tankers. He was ambitious and ruthlessly avaricious in his pursuit of wealth... until he met and married his wife, Manon.\n\nManon Soulis was a woman of compassion and charity. In order to win her love, Arnau had to put aside many of his ambitions and become \"a good man\" in her eyes. That meant no more illegal shipments, treating his workers, business partners and even his competitors fairly and, eventually, dedicating his vast fortune to attempting to make amends for the worst of his past sins. He funded the Soulis Foundation, with a mission to combat poverty and exploitation, and Manon raised their son Andre to share her passion for making that mission a success. Upon Manon's death, the foundation became the Manon Soulis Foundation, and Andre was its chairman.\n\nThe foundation had become involved in the affairs of San Lorenze, a small, impoverished South American state whose government was negotiating a deal that would fund schools and hospitals for all its citizens. But the cost would be the granting of over a half-million acres of rainforest to an energy and mining cartel that would, over the next ten years, deforest almost all the land, turn it from an environmental treasure into a wasteland of oil fields and mining pits and displace the indigenous tribal peoples who made their homes there. It was truly a deal with the devil, but it was also the needs of the many today vs. those of the few and the future.\n\nThe foundation had submitted a competing proposal to fund those schools and hospitals. Not as many as the corporate land deal would provide, but enough to make the destructive land deal unnecessary. The president of the country was receptive, and Andre travelled to San Lorenze to join him for a summit with local officials and tribal leaders. Their aircraft dropped off radar over the rain forest, and soon after the vice president assumed the presidency. The aircraft's disappearance was blamed on unidentified \"ecoterrorists.\" All discussions with the foundation were terminated without explanation, the deal with the cartel was rushed through and another rainforest was promptly signed away into oblivion.\n\nThe funder of the energy and mining cartel?\n\nTenneson Equity Partners. You saw that coming too, didn't you?\n\n<hr size=\"2\" align=\"center\" >\n\n\"You believe that Troy Tenneson assassinated the president of San Lorenze and murdered your son?\" I certainly had a low opinion of Tenneson, but this was far beyond my imaginings.\n\n\"I believe the vice president of San Lorenze was the person directly responsible,\" Arnau replied, \"But Tenneson's money was the prize that motivated him.\" I nodded as I recalled what Paul had said to our county DA about Tenneson and the deaths of my daughter and mother in law: it had to be his money behind it.\n\n\"I was enraged,\" Arnau continued, \"I wanted to crush the life out of all of them. I considered making calls to... people I know.\" His eyes seemed to become lifeless, and I recognized that look; I had seen it a lot in mirrors in recent months.\n\n\"But my Manon would not have approved. My Andre would not have approved.\"\n\n\"And I would not have approved,\" Sofie added.\n\n\"Sofie made it clear that she would not have Andre's memory sullied by violence,\" Arnau explained, \"Nor would she allow her children to be near anyone who would do so.\" He reached into a pocket and handed me a photograph of a boy and a girl both about my Callie's age.\n\n\"Little Arnau and Manon,\" Arnau told me. \"Arnau is five, Manon is six. If I were to yield to my baser instinct, I have every reason to believe that Sofie might never allow me to see them again.\" His daughter in law said nothing, but the resolute expression on her face told me that that might very well be true.\n\n\"And so we are meeting because...?\" I asked. I had not the slightest concept where this conversation was going, since if anything I had less power to act than they did.\n\n\"Sofie has accepted that I must do something,\" Arnau explained, \"But she has insisted that any action I take must be within the law, and may not harm innocents.\"\n\n\"Ideally,\" Sofie added, \"I should like it to be something that might serve as a memorial to my Andre. And perhaps, it might also do the same for your loved ones?\" She handed me a folder with what appeared to be news clippings in it.",
        "\"What Tenneson is doing to your previous employer is only the most recent of his ventures,\" she said.\n\nThe clippings in Sofie's folder told the story of a commercial baker in Illinois. Acquired by Tenneson Equity Partners six years ago for $50 Million, it had enjoyed unprecedented growth for three years that had Tenneson and his partners on the covers of Forbes and Money being hailed as \"regrowth geniuses,\" but then had suddenly gone into a massive decline along with the rest of the US economy. It would soon default on its debts and its assets would be sold for whatever its creditors could recover. More than three hundred workers would be rendered jobless just in time for Thanksgiving.\n\n\"There are two other companies in conditions somewhere between this company's and your Maitland Mills,\" Sofie added, \"Enough to suggest a pattern, do you not think?\"\n\nI could see what they were suggesting. Acquire a small company, grow it fast, drain it dry and then walk away, leaving its workers adrift and, well, fucked.\n\n\"Anything illegal happening here?\" I asked.\n\n\"We suspect that the company's early growth was falsified to overvalue assets that could be used to secure loans,\" Arnau replied, \"Tenneson purged the company's Finance group shortly after acquiring it and installed his own. But that is conjecture on our part. When the company went under, Tenneson's people wiped all the company's financial data as they left. So there is no proof.\"\n\n\"This has already been made public,\" I observed. The news clippings made that obvious. \"So you couldn't be thinking that you'd be embarrassing Tenneson by revealing it. Your idea is...?\"\n\n\"To rescue the companies and their employees,\" Sofie said.\n\n\"More precisely,\" Arnau corrected, \"For you to rescue the companies and their employees.\"\n\n<hr size=\"2\" align=\"center\" >\n\nAranu's idea was for someone to step forward, save the company Tenneson had destroyed, and with words and actions that were diametrically opposed to everything Troy Tenneson said and did, go head to head against him and spectacularly prove that all his pronouncements about what made a business successful in today's economy were dead wrong by outperforming every venture he was involved in. Arnau and Sofie couldn't do it publicly, either as individuals or through their business or foundation; it would just look like super-rich people playing games with companies. But having it be someone who had already taken Tenneson on and won, for example in a divorce/child custody case that had pitted a small-town David against a half dozen of Tenneson's legal Goliaths in five thousand dollar suits, would get peoples' attention.\n\n\"You're assuming that we can actually succeed at this.\"\n\n\"You and your associates are already assuming that a new business producing quality products with integrity can succeed in the shadow of one that no longer does,\" Arnau pointed out, \"Otherwise you would not be attempting to start one. What we are proposing is to provide you the necessary resources to do this using the assets and the workers of a previously existing one.\"\n\n\"And if we're wrong and the company loses money again it will have the opposite effect to what you want,\" I observed.\n\n\"The company will not lose money,\" Arnau replied, \"We will ensure that it does not.\"\n\n\"Isn't that what Tenneson did?\" I asked pointedly, \"Faking the profits?\"\n\n\"No,\" Sofie said, \"We will not be 'faking profits.' The money will really be there.\"\n\n\"For how long?\"\n\n\"As long as it takes to destroy Tenneson's credibility,\" Arnau promised, \"And for you and your associates to have every opportunity to prove your business principles.\"\n\n\"And this is acceptable to you?\" I asked Sofie, remembering the moral restrictions she had put on Arnau.\n\n\"We would do nothing illegal, and no innocent people will suffer because of what we do,\" Arnau pointed out, \"Investors underwriting business ventures that may not succeed is a common practice, though admittedly we will be taking it to absurd lengths. Even if you eventually fail, hundreds of workers will have their lost jobs back for several years, and we will fund a generous 'soft landing' for them. So yes, it is within the limits Sofie has set.\"\n\n\"I'll have to lay this out fully for my associates,\" I finally declared, \"There can't be anything held back from them.\"\n\n<hr size=\"2\" align=\"center\" >\n\nThere were four of us in \"The Phoenix Group.\" Marty Ball, my former manager in Maitland Operations, Lucy Armstrong, who used to be Kathy's manager in Finance, Dennis McCoy, formerly the Maitland Technology Manager, and me (we hadn't determined yet what my role in the company might be, other than the person writing the business and marketing plans). We had also asked Paul and Alex to sit in, since it was expected that if we ever did become a real business they would be handling our legal affairs.\n\nWe were sitting at the big round table at the back of the restaurant, reviewing copies of the proposal I had brought back with me from Timberline and trying not to get them stained with soy sauce and chili oil from the working dinner we were sharing.\n\n\"Wow,\" Marty said, \"Just...wow.\"\n\n\"Second that,\" Lucy said. Dennis nodded; he had just taken a bite of one of Zhen's new deep fried creations that I had yet to sample or figure out a cute menu name for.\n\n\"Is this legal?\" Lucy asked.\n\n\"Not in a publicly traded company,\" Alex mused, \"But when you're privately owned the rules are different. As long as you're not making false claims, especially to lenders or investors, Soulis is right, it's legal.\"\n\n\"It does seem to answer the question of what your role in Phoenix would be, Geoff,\" Marty observed.\n\n\"Yeah,\" I agreed, \"Figurehead, Front Man...\"\n\n\"Clay pigeon and sitting duck,\" Paul grumbled, \"If Soulis is right about what happened to his son.\"\n\n\"There is that,\" Marty conceded, \"But I was thinking that Geoff is doing our business and marketing plans and we still don't have anyone heading up either Business Development or Sales and Marketing.\"\n\n\"I figured Geoff would run both of those,\" Dennis said with a shrug, \"At least until we got big enough to need two people for them. I mean, he's the one with the MBA.\"\n\n\"But that was for a startup cooperative,\" Lucy asked, \"Would it scale up for something like this?\"\n\n\"This company was like Maitland before they were acquired,\" I pointed out, \"They already had people in these roles. Suppose some new owner called us and said, 'Come home and help us put Maitland back the way it was?' Wouldn't we all go back?\"\n\n\"Saving companies like Maitland and the jobs of a lot of people sounds great,\" Paul argued, \"But let's not forget Soulis' real goal here. He wants to ruin Tenneson's credibility in the business world. You've all experienced what Tenneson's capable of when people he sees as his peasants do anything more than disagree with him at the office. What's he going to do if this scheme works and he starts seeing the four of you as a threat?\n\n\"Especially you, Geoff. You're the one Soulis wants standing in the spotlight while he keeps himself and his family safe in the shadows.\"\n\nA pall settled over the table. Paul had left it unsaid, but it was no secret to anyone there that he suspected that what had happened to Callie and Rose hadn't been entirely \"accidental,\" even before hearing about Arnau's son and the president of San Lorenze. I guessed that Paul was seeing Soulis as just another filthy rich bastard looking for people he could use for his own ends.\n\n<hr size=\"2\" align=\"center\" >\n\nOf course we said yes. Otherwise, I wouldn't be telling you this story. We did address the concerns that had been raised during that first dinner in a counter proposal, and the four of us, plus Paul and Alex, made the trek to Mount Hood again to meet with Arnau and Sofie Soulis to hammer out the details.\n\nPhoenix Partners was formed as a New Mexico anonymous LLC. Why New Mexico? Because it's the one state where a truly anonymous LLC can be formed, with the identities of the owners not revealed even to the state government. Paul and Alex would continue to represent Dan, Lucy, Dennis and me as our personal attorneys, while the New Mexico attorney, an old friend of Alex's who had no other ties to any of us, would serve as corporate counsel. The four of us held 50% of the LLC while Arnau and Sofie held the other 50%, ensuring that neither we nor they held a controlling majority, and the four of us signed a mutual agreement that we would not vote on anything unless we could do it as a unified bloc.\n\nTo anyone outside the \"inner circle\" of the LLC, Dan, Lucy, Dennis and I would be presented as employees of Phoenix Partners. Dan would be Director of Operations, Lucy Director of Finance, Dennis Director of Technology, and my title would be \"Managing Director.\" The discussion of whether I would be just the official talking figurehead or actually directing Business Development and Marketing was shelved until we determined what resources we might find available in the companies we were going to try to rebuild.\n\nWe would each draw the same salary of $250,000 per year, generous compensation but not entirely out of the range of credibility for a high-risk startup, with a conventional set of executive benefits for ourselves and our families. What was unconventional was what was added to address Paul's concerns about safety. We and our families would have a 24/7 hotline to an executive security firm who could provide armed security anytime it was needed. Lucy and Dennis would keep out of the public view as much as they could because they had spouses and children. And if things did go \"worst-case,\" we would each have $10 million life insurance policies.\n\nA week after we signed the agreements, Arnau informed us that our salaries and benefits were active, and that Phoenix Partners now had a working capital of $100 million with an additional capital reserve of another $100 million. Lucy nearly hyperventilated when a courier delivered the verified financial statement; it was probably only a small portion of Arnau's wealth, but it was more money than any of us had imagined we'd ever have access to.\n\nThree weeks later the Illinois baking company shut its doors, throwing 316 workers onto the unemployment rolls. The bankruptcy trustee would begin entertaining offers for the company's assets within the next 30 days.\n\nPhoenix Partners, LLC Announces Successful Bid to Purchase Assets of Pathway Bakeries, Inc.\n\nAlbuquerque, New Mexico, Dec 03, 2011 /APNewswire-FirstCall via COMEX News Net\n\nPhoenix Partners, LLC today announced that the U.S. Bankruptcy Court for the District of Delaware has approved Phoenix's bid to purchase substantially all of the assets of Pathway Bakeries, Inc. of Kelton, Illinois. Under the terms of the Asset Purchase Agreement, Phoenix will acquire substantially all of the assets of Pathway for approximately $28 million. The transaction is expected to close no later than December 15, 2011. Phoenix will use private capital investments to fund the acquisition.\n\n\"We're excited about this acquisition,\" commented Geoffrey Jian Lee, Managing Director of Phoenix LLC. \"We are looking forward to reopening the Kelton, Illinois production facility, where we intend to produce Pathway products.\n\n\"In our opinion, the old Pathway's last owners cultivated a toxic business culture that placed profits above people and quality and eventually led to the company's demise,\" Lee said, then added, \"It is our intention to forge cooperative and mutually respectful relationships between management, employees, suppliers and customers and build a new Pathway that we can all be proud of.\"\n\nSOURCE Phoenix Partners, LLC\n\n \n\nTake that, Troy Tennneson. First shot fired.\n\n<hr size=\"2\" align=\"center\" >\n\nBuying the assets of a bankrupted business is an incredibly complicated process. You don't just breeze into a trustee's office, lay down a pile of money and walk away with the ownership papers. If you're not an expert at steering your way through an endless maze of red tape and legal landmines, don't even try doing it yourself. Find someone with the necessary expertise to do it for you, which is what we had our New Mexico counsel do.\n\nKelton Record/Chicago Tribune, Monday, December 6, 2011:\n\nTiny Kelton, population 1,605, has been struggling. Illinois has lost over 130,000 manufacturing jobs since the recession began in 2007. \n\nThe outlook in Kelton became especially bleak in early October when the Pathway Bakeries plant was closed by its out of state owner, Tenneson Equity Partners. Workers at the bakery said they felt betrayed when Tenneson at first said there would be more work in a day or two, but then changed the locks.\n\nReena and Andy Dean were both thrown out of jobs.\n\n\"They just kept taking and taking until there was nothing left to take,\" Reena said, \"and they didn't care that they were putting 300 people out of work.\"\n\n\"How can they do that?\" Andy added, \"This was a good company, a good place to work. They come in from nowhere and destroy it. How can you destroy peoples' lives just to make a profit?\"\n\nAnd with Christmas now only three weeks away, some 300+ Kelton families are looking at bleak holidays after nearly two months of unemployment.\n\nThis week, displaced Pathway workers learned that the shuttered plant that used to be their place of work had been acquired by another private equity firm, Phoenix Partners, LLC of Albuquerque, NM. Phoenix has said it intends to reopen the plant, and will hold a public meeting in the Kelton High School auditorium at 7:00 PM on Friday, December 10th to present their plans to the community.\n\n\"Showtime,\" Dan said as he handed me a bottle of water. \"You ready?\"\n\n\"Prepared,\" I said nervously as I looked out through the curtain, \"Don't know about ready.\"\n\nThe Kelton High School Auditorium had 600 seats. Every seat was filled, the sides and back were packed and it looked as if there were people overflowing into the halls outside. The seats had been reserved for former Pathway employees, and each had been handed an envelope with his or her name on it and asked not to open it until told to. We had brought 316 envelopes, one for every person on the list of employees who had lost their jobs the previous month, and every single one had been claimed.\n\n\"Looks like some of them brought their families with them,\" I observed.\n\n\"Most of them, I think,\" Dan agreed. \"And invited their relatives from the Chicago Tribune and CNN, too.\"\n\nI groaned. Well, we wanted to make a splash, didn't we?\n\n\"What do you think?\" I asked, \"Go out through the curtain or walk on from the side of the stage? Curtain feels like I'm a big star trying to make an entrance. Seems like something Tenneson would do.\"\n\n\"Side,\" Dan agreed, \"Definitely side.\"\n\n\"There's a podium out there,\" I noticed, \"I'm not going to stand behind that and lecture them.\"\n\nI took a last swig from the water bottle and we headed out onto the stage. The podium had a microphone on it, thankfully a wireless one, so I pulled it off its socket and walked up to the front of the stage.\n\n\"Hello everyone,\" I said, \"And thank you all for coming tonight. I'm Geoff Lee, Managing Director of Phoenix, and this is Marty Ball, our Director of Operations.\n\n\"Those of you who previously worked for Pathway Inc were given envelopes when you arrived. Would you please open yours now?\" We waited while envelopes were torn open all around the auditorium and the enclosed letters with their attached bits of plastic were withdrawn and examined. Then there was the sound of gasps, and even a few shrieks as people read the title on the letters and realized what they were holding: hiring letters.\n\n\"We wish we could call you all in to work in time for Christmas,\" I explained, \"But the reality is that between the way previous management neglected equipment and facilities and the fact that the plant has now been closed for almost two months, there's a lot of work that needs to be done to bring Pathway back online.\" Another dig at Tenneson there.\n\n\"We've staged the report-to-work schedule in two-week intervals over the next two months. If your letter says you're in the first hiring round, the main gate and Building One will be open Monday morning at 8:00.\" There was a round of applause and cheers from the audience.\n\n\"Health insurance benefits for everyone went back online at noon today. If you haven't sent your COBRA papers in yet, there's no need to.\" Another cheer.\n\n\"Direct deposit of pay will resume right after the new year. All salaries and seniorities will be preserved.\n\n\"Attached to your rehire letters are Visa debit cards. Each of these cards has been preloaded with $1,500. They're activated by going to the web site or calling the toll free number on the letter and entering your Social Security numbers. We hope this will help make the holiday and the rest of the year a little brighter for everyone.\" There were gasps and scattered \"Oh my Gods,\" and the audience sat stunned for a few moments, then burst into a huge round of cheers and applause. Some actually cried.\n\n\"There's a buffet in the gym,\" I said to complete my remarks, \"Please join us and enjoy. Thank you again for coming, and welcome to what we hope will be a much better Pathway than the one you knew at the beginning of this year!\"\n\nYeah, I couldn't resist taking one more little poke there.\n\nThe official meeting was followed by interviews with various reporters. Mostly, I just expressed the same views we had previously based our nascent grain cooperative proposals on as I talked about how the \"new Pathway\" would succeed on high quality, integrity and just \"doing the right thing.\" And took advantage of every opportunity to point out how Pathway's previous owners had not.\n\nWe spent the remainder of the evening meeting and shaking hands with our soon-to-be new employees and their families. I looked into the eyes of people who just a few weeks ago had been looking at a hopeless future and saw hope. I hadn't seen much of that lately. I wanted to see more.\n\n\"You think any of this is getting back to Tenneson?\" Marty asked as we headed for our hotel.\n\n\"Not a clue,\" I admitted. \"But it feels pretty damned good.\"\n\n\"Yeah,\" Marty agreed. \"There is that.\"\n\nRising from the ashes: Phoenix gives displaced Pathway workers $1,500 gifts.\n\nDecember 12, 2011\n\nKelton Record/Chicago Tribune\n\nA company reopening the former Pathway bakery in Kelton, Illinois, stunned displaced employees by presenting them with $1,500 Visa gift cards.\n\nAlbuquerque, NM based Phoenix Partners will begin operations next week at the former Pathway plant with a staff of 70. More than 300 employees lost their jobs when Pathway filed for bankruptcy in October. Phoenix says it hopes to have all employees back on the job by the end of February.\n\nMary Gladden, a worker at the bakery, had been preparing her children for a very modest holiday.  \n\n\"They said they understood,\" Gladden recalls. \"You always want to give them more, but ... I didn't think I would be able to.\"\n\nNow she can.\n\n\"I was crying,\" Gladden says of the gift. \"Who are these people? They don't know me. They don't know any of the Pathway people. And they come and do this.\"\n\nEach former Pathway employee received a gift card at a meeting Friday at the Kelton High School.\n\n\"We are a new company,\" Phoenix Managing Director Geoff Lee told the Kelton Record, \"We don't have a history people just can look up. These are the folks we're depending on for our future success. They suffered a lot under the old Pathway's owners, and we want them to know that we are not the same as the people who did that to them.\"",
        "Phoenix Partners, LLC's debut in the business world made a splash nationwide when it was picked up by AP and Reuters. Cell phone videos taken by some of the Pathway people who attended the meeting were posted to YouTube and Facebook, and one of them was used in a CNN report. The last week of December was full of catchy headlines. \"Pathway rises from the ashes\"; \"Santa comes to Kelton\"; \"Miracle on Kelton Boulevard.\" Someone labeled a photo of me, \"The new George Bailey.\" Best of all were the side stories about the fall of the old Pathway, the shuttering of its plants and how its former workers were facing a Christmas without jobs or health insurance until Phoenix came along, illustrated with the face of Troy Tenneson labeled, \"Mr. Potter,\" \"Ebenezer Tenneson,\" and my personal favorite, \"Scrooge McTenneson,\"\n\nInevitably, the media focus became, \"Who are these people?\" Searching for information about us turned up the usual social media and professional credentials for all of us...and the story of my divorce from Kathy, her marriage to Troy Tenneson and the events leading to the deaths of Callie and Rose. I declined all requests to discuss my personal tragedy with interviewers, but we had made me \"the face of Phoenix\" knowing that someone would dig the story out on their own and run it anyway. And how could they not? It was an irresistible real-life soap opera. Arrogant millionaire takes over small town's biggest employer and fires a third of its hapless workers. Arrogant millionaire seduces and steals the pretty young wife of one of the hapless fired workers. Arrogant millionaire and the faithless pretty young wife go to divorce court and try to steal the hapless fired worker's little girl from him and fail, their army of high-priced lawyers in five thousand dollar suits defeated by a small town country lawyer who is the fiercely protective older brother of the hapless fired worker. The faithless pretty young ex-wife of the hapless fired worker tries to kidnap their little girl and ends up getting both her daughter and her own mother killed, run down by one of her new husband's trucks, a lumbering symbol of the wealthy running roughshod over the \"little people\" who stand in the path of what they covet. Instead of crumbling under the heavy weight of this loss, the hapless fired worker joins with other hapless fired workers to start a new company, and six months later they come to the rescue of another company's hapless fired workers who were thrown out of work by the same arrogant millionaire and hand out $1,500 gift cards, bringing them hope for the coming year and saving Christmas for them all.\n\nYou can't make this shit up.\n\nSome of the stories were hard to watch. Especially difficult was the \"human interest\" story that started in front of the Maitland Mills plant, then moved to the front gate of the Coffee Creek Correctional Facility in Wilsonville where Kathy was serving her sentence for manslaughter, and finally ended standing on the spot in front of Lee's Garden where Callie and Rose were run down. I had to turn it off when the reporter went snooping around inside the restaurant and showed the little family altar in the back where Mom burns incense in front of little framed photos of my grandparents, Dad, Callie and Rose.\n\nPaul swore he wasn't behind the reporter and camera crew who ambushed Tenneson coming out the front door of his holiday festooned high-rise condo building in downtown LA and asked him if abducting Callie and assaulting Rose had been his idea and if he felt any responsibility for their deaths and his wife's current incarceration. Tenneson screamed something that was mostly unintelligible but I thought I made out \"failing\" and \"losers.\"\n\nIt was the sharpest jab anyone had scored on the bastard yet, so if Paul did whisper something in someone's ear I guess I can live with that.\n\n<hr size=\"2\" align=\"center\" >\n\nThe answer to the question of whether I'd just be the mouthpiece for the \"new Pathway\" or be hands-on with business development, marketing and sales turned out to \"yes.\" As I had anticipated, Pathway's previous, non-Tenneson managers were eager to return, but they needed some handholding to make a transition from merely thinking about restoring the \"old Pathway,\" to building a new Pathway that could fill consumer needs in markets that had existed either barely or not at all when Tenneson had acquired their company six years ago. And even though the Phoenix strategy had been formulated by all four of us with input from fired Maitland marketing analysts who we hired as consultants, as the person who had stood on a stage before the entire company, handed out those $1,500 Christmas gift cards and made all those statements about how we'd all build the new company together, it fell to me to make the pitches that would fire up people's enthusiasm.\n\nIt ended up taking four months to get the shuttered Pathway plant up to full working order. Part of the delay was because Tenneson and his people had utterly neglected just about everything required to keep it running. There were numerous safety violations that had to be corrected, loads of deferred maintenance on equipment, and some equipment that flat out had to be removed and replaced. This included the offices as well. Every computer was at least four years old, so we just replaced them all. Dennis removed the hard drives from every decommissioned workstation, laptop and server and stored them for a \"secret data project\" (more about that later), and then we donated everything else to the local school system and to various local nonprofits.\n\nWe upgraded our rehired people as well. After the first of the year, every employee who was not yet called back to full-time work was signed up for some kind of training. Some updated their skills for their current jobs, while others learned new skills that would enable them to handle the new equipment we were adding, such as robots.\n\n\"Are these robots going to mean job cuts?\" the union rep on our new management board asked.\n\n\"The plan is not fewer people,\" Marty explained, \"But higher output using the same number of people. The company we used to work for maintained essentially the same headcount on the floors for over 30 years. But in that time we more than doubled our output.\"\n\n\"No growth?\" one of the finance reps asked.\n\n\"Not in headcount,\" Marty replied, but in everything else, yes, there was growth.\"\n\n\"The population of our little town didn't change significantly, either,\" I pointed out. Some people said the company and town were 'stagnant'; we called it stability.\"\n\n\"They had layoffs,\" the union rep pointed out.\n\n\"It was a purge,\" I said, making no effort to mask my bitterness, \"They swept out everyone who had opposed their takeover of the company and wasn't willing to be a 'team player' as they turned the place to crap.\" There were nods all around.\n\n\"Are you confident we can sell twice as much Pathway product as we used to after what happened to our quality the past few years?\" asked a marketing rep.\n\n\"Not right away,\" I admitted, \"Not until we can show customers we lost that the old Pathway quality is back. 'Pathway is back and even better than you remember it' is going to have to be the basis of our customer outreach for some time on the old standbys.\n\n\"But we aren't going to just sell the old Pathway standbys. We're lining up some private label contracts that will keep the floor humming. And there are new product categories Pathway can move into: organics, high end sugar-frees, gluten and grain free. These weren't significant markets when Tenneson management took over and they ignored them, but demand is starting to grow and we can help it. We're not going to just stop ignoring change and start keeping pace with it, we're going to be part of it.\"\n\nIf you follow this business, you probably already know that the US market for gluten free products grew more than 60% during the four years that followed this conversation. The new \"Pathway GF\" product line we introduced in the summer of 2012 brought in nearly a third of our total revenue, and cemented my image as a prophet in the eyes of Pathway's marketing group.\n\nMeanwhile, the new Maitland Mills, having fired all those marketing analysts we were using as consultants, totally missed the explosion in gluten-free product sales.\n\n<hr size=\"2\" align=\"center\" >\n\nThe first year of \"New Pathway\" was, for me, a lot like the months I had worked on the Phoenix cooperative, but on a much larger scale. Instead of driving all over Oregon and southern Washington developing new relationships with suppliers, distributors and retailers (which I maintained as we added them to Pathway's list of potential business partners), I was flying all over the US to work on both new and renewed relationships for Pathway. In many cases the renewals were with businesses the old Pathway had alienated with poor quality product, late shipments, short shipments, billings for shipments never delivered and non-payments for deliveries received. Even though we had rehired Pathway's marketing team and sales reps, everyone -- and I do mean everyone -- seemed to want to hear Pathway's new managing director personally repeat the promise that the people who had ruined their good relations with \"old Pathway\" as they ran the company into the ground were gone for good. And of course, I never missed an opportunity to stress that the \"old Pathway\" was Tenneson and our \"new Pathway\" was not.\n\nMy cross-country public relations tour seemed to have a beneficial effect. Before long our sales reps were reporting rising orders for returning products. We also signed several contracts to produce and package store-branded products that were similar, but not identical to what we sold under our own brand. You might think that would have us competing with ourselves on grocers' shelves, but since we weren't spending any of our own money to distribute store-branded products (they were shipped to the store chains' main warehouses and distribution to their retail outlets was their responsibility) or to advertise them, our net revenue per unit was actually pretty close to that of our own Pathway-branded product.\n\nOur business plan was starting to work.\n\n<hr size=\"2\" align=\"center\" >\n\nWe held two meetings every quarter. The quarterly Pathway meeting was an all-hands for the entire company, the senior management in the company board room and the rest of the company able to log into a secure web meeting using their employee ID numbers. As a privately held company Pathway wasn't legally required to conduct such meetings, but we had promised openness and we delivered.\n\nThe quarterly Phoenix meeting was closed-door. Marty, Lucy, Dennis and I in the boardroom, Arnau, Sofie and Phil Barnes, our New Mexico corporate counsel on web. Alex and Paul logged in as well, but generally were silent observers unless they heard something that they needed to weigh in on as our personal attorneys. As the majority shareholder, Arnau should have been our chair, but as he and Sofie had declared themselves silent partners in all matters except those directly related to Troy Tenneson, the task of chairing the meetings rotated between the four of us who were onsite at Pathway.\n\n\"Call to order,\" Lucy declared. It was our third meeting, the one year anniversary of the signing of the Phoenix Partners partner agreement, one month remaining before the Q4 Pathway meeting, and it was her turn at bat.\n\n\"Move to waive minutes of last meeting?\" she asked.\n\n\"So moved,\" I said.\n\n\"Second,\" Marty added.\n\n\"Objections?\" There were none.\n\n\"Updates from last meeting?\" We spent an hour going through our usual list. Sales, plant performance and upgrades, employee morale, technology projects, etc.\n\n\"Last item,\" Lucy said as she hit the key to put her PowerPoint slide on the screen, \"Financials.\"\n\nThere was silence. We were stunned.\n\n\"Pathway will end Q4 in the black.\"\n\n\"That's a year ahead of your projection,\" Arnau noted, \"How...?\"\n\n\"The Champion Markets contract,\" Lucy explained. \"We're providing their entire line of store-branded hard-baked snack foods. And it was unplanned.\"\n\n\"Unplanned?\"\n\n\"I met their CEO at the Grocers Association show in Vegas in February and gave him the full private-label supplier pitch,\" I explained. \"He was cagey about their plans at the time, but in March they announced a seven-state expansion into the Southwest. By the end of Q2 they had twenty new stores open and their existing supplier was overloaded doing both breads and pastries and hard-baked snacks. So now that supplier has transitioned to doing just fresh-baked and we're doing all their hards. Nobody lost any work, so it's win-win and they even shared their recipes with us so there's been no change in product that customers will notice.\n\n\"It's a one-year deal with options, and the new Champion stores have been doing well,\" I added, \"So it's looking good for sustainability.\"\n\n<hr size=\"2\" align=\"center\" >\n\nThe new Pathway's first holiday party was December 21, 2012, our last \"working\" day of the year. The company provided the basics; turkey, ham, mashed potatoes, salad, soft drinks and some desserts. Everybody was invited to bring potluck dishes, and just about everybody did. Families and children were invited, someone dressed up as Santa (no, not me) and we used the projector in the conference room to screen \"It's a Wonderful Life.\" While no adults were looking, I taught some of the younger kids that Mister Potter's first name was \"Troy.\" Never miss an opportunity.\n\nAfter the gift exchange (everyone was told not to spend more than $20 and gag gifts were encouraged) we did a drawing with some better stuff as prizes, then brought out take-out containers so people could divide up what was left of the company-supplied food (we had brought in a lot), and it was time to bid everyone farewell until next year.\n\n\"Before everybody heads off for the holiday, we want you to know how much we've appreciated your efforts this year as we've worked to build our new Pathway,\" I announced, \"And to let you know that when your last checks of the year are deposited or mailed to you, there will be a little something extra in them.\"\n\nApplause. Everyone applauds Christmas bonuses, right?\n\n\"It's going to be the same amount for everyone,\" I continued, \"And it's not a Christmas bonus.\n\n\"It's profit sharing.\"\n\n \n\nRising from the ashes: Phoenix distributes profit sharing checks to Pathway workers \n\nDecember 24, 2012\n\nKelton Record, Business Page\n\nA cheer rose up at the first holiday party of the newly reborn Pathway Bakeries when the managing director of the company's parent company, Phoenix Partners of Albuquerque, NM, announced a profit sharing bonus at the end of the company's first year in business.\n\nThe Record has learned that each worker received $500. Pathway currently employs 325 full time workers.\n\n\"As a privately held company we do not comment on earnings,\" Phoenix Managing Director Geoff Lee told the Kelton Record, \"Pathway's workers all gave 100% and more this past year, and Phoenix has decided to show appreciation for that support by distributing the entirety of this first year's profits equally to all employees. We look forward to the coming year as we continue to build a new Pathway on the ruins left by the owners of its predecessor.\"\n\nNever, ever miss an opportunity.\n\n<hr size=\"2\" align=\"center\" >\n\nThe next round of our war of words against Troy Tenneson and Tenneson Equity Partners came from an unexpected source.\n\nThe termination of 150 employees of the Maitland Mills had had a noticeable impact on business in Rose Valley, especially the more \"discretionary income\" based businesses like restaurants. We used some of my Phoenix salary to make sure all the restaurant's bills got paid, and with family benefits, Mom had company-paid health insurance. We even covered my cousin Zhen by declaring him a member of my \"household,\" since he was related, lived upstairs from \"his kitchen,\" and our restaurant, apartments and houses were all part of the same \"family compound\" (it's good to be one of the bosses).\n\nA month after the party at which we announced profit sharing for Pathway employees, Paul called me about a \"strangeness\" Mom had experienced at Lee's Garden. Longtime customers who were still employed at Maitland were no longer coming in, but longtime customers who had been fired were, and they were buying a lot more takeout than they used to. It turned out that the fired employees were picking up food for their friends and relatives who were still working at the mills, because mill management had removed Lee's Garden from the company's list of approved vendors for catering and suggested to employees that there would be \"repercussions\" if they continued to patronize the restaurant. Rumor was this had happened in early January, and had resulted from an executive meeting in which a screaming, tantrum throwing Troy Tenneson reportedly shouted that he would \"ruin those fucking chinks.\"\n\nI relayed Mom's discovery to Arnau and Sofie, and Arnau in his role as the architect of Phoenix's Tenneson strategy called for a teleconference.\n\n\"I think we're getting to him,\" I observed.\n\n\"Yeah,\" Paul agreed.\n\n\"I would not want to unduly frighten anyone,\" Arnau said, \"But if Tenneson has targeted your mother's business, perhaps it time to talk about security?\"\n\nGreybear Security had a knack for dispatching people with multiple skill sets, and unlike the obvious \"Men in Black\" types you typically see escorting heads of state or corporate CEOs, they fit right in with their surroundings and became invisible. They didn't just pose as what they appeared to be, they actually were what they appeared to be, with the added dimension of being trained to be very effective bodyguards if the need arose.\n\nLee's Garden \"hired\" a new waiter for the restaurant. He also started driving for Mom... so she wouldn't have to waste her time looking for parking. He was a polite fellow by the name of Duc (pronounced Duke) Li (no relation to us) who was actually several years older than he appeared to be and was a retired Navy Chief Petty Officer with experience running the galley on a nuclear attack submarine. According to Mom, Duc was a very good waiter and driver He moved into a spare room in Mom's house so he'd be there... if she \"fell and couldn't get up.\"\n\nArnau made some phone calls, and a TV chef whose show traveled the country visiting eateries in small town America came to Rose Valley. He made stops at the local breakfast house, the craft brewery, the artisan baker whose praise of the stone ground flour he used led to a visit to its source, an historic grist mill across the Columbia River in Washington (the TV crew made a point of showing the chef driving past the Maitland Mills but not going there) and, of course, Lee's Garden. Mom and Zhen pulled out all the stops, and wowed their visitor with exotic selections from the \"secret Chinese menu\" that she and Zhen created just in time for the shoot. The show made Rose Garden a minor gourmet dining destination, and the out-of-towner traffic made up for a lot of the business lost due to the Maitland purge. Word soon came to us that Tenneson had started throwing things when it got back to him that Lee's Garden not only didn't appear to be suffering from his attempted embargo, but had actually expanded its staff.\n\nAlex and Paul \"hired\" a new paralegal for their office, a deputy from another county who was laid off when its voters chose not to approve a bond and was working security while studying law part-time (the company had tuition benefits). She was \"renting a room\" in the home of Alex and his wife Chris, who were empty nesters, and she and Alex drove to and from work together, stopping along the way to pick up or drop off Paul... to save on gas.",
        "Marty, Lucy and Dennis decided to forego fulltime security in the absence of overt signs of danger, but a new person was added to the Pathway security department and assigned to a station near the executive offices and the Armstrong and McCoy families \"hired\" a nanny who split her work day between the two families and drove all their children to and from school... because of how busy Lucy and Dennis were working out of their homes.\n\nAnd I \"hired\" an executive assistant.\n\nRebecca Sullivan was a former Navy NCO who had been assigned to Naval Station Norfolk when a superior officer started making \"inappropriate advances.\" She attempted to deal with the situation through channels, he attempted to \"put her in her place,\" and she had put him in his place, which turned out to be a bed in the Naval Medical Center in Portsmouth. There was talk of a court-martial for assaulting a superior officer, which led to talk of press conferences and lawsuits for sexual harassment and attempted sexual assault, which led to two discharges. Hers had been honorable, his somewhat less than. Her slightly evil look of satisfaction when she recounted her story to Marty and me told us that we had similar attitudes about people who try to abuse positions of power.\n\n\"She's perfect for you,\" Marty told me after we had handed Rebecca off to Maureen, the executive admin we had been sharing since the Pathway takeover. \"Did you see her eyes when she talked about putting that brass asshole on his back? That's exactly how you look when you talk about Tenneson.\" I had never had either a bodyguard or an \"executive assistant\" before, and didn't have the faintest idea what would constitute one who was \"perfect\" for me. But everyone who dealt with Rebecca was impressed by the way she handled the executive assistant part of her job; I wasn't especially eager to find out how good a bodyguard she was.\n\nRebecca and Dave Simpson, the new executive office guard, each moved into one bedroom condos, which they said were more than enough for their needs, in the same complex where Marty and I were each leasing a two bedroom unit. Marty and Dave \"hung out\" together a lot off hours and ride-shared to and from work, and while Rebecca and I didn't \"pal around,\" outside of the office, we did also share rides... and yes, we told everyone it was to save on gas.\n\nRebecca's arrival also solved another staffing issue for us. Maureen, the executive admin who had been supporting both Marty and me, had previously worked for Pathway's harried General Manager, who had developed serious health issues fighting to keep Pathway from failing under Tenneson's destructive reign and had chosen to take pension rather than returning. Marty had been seeing a woman he'd met in Kelton for some time and was now calling Kelton home, and our consensus was that he should become the Pathway General Manager. So Maureen should rightly have been working solely for Marty, and I really did need someone to support me on the many cross-country expeditions that constituted more than two thirds of my duties as Managing Director of Phoenix Partners... and who knew what was really going on behind the scenes.\n\n\"How much do you know about what we do here?\" I asked her.\n\n\"Not very much about Pathway,\" she replied. \"About Phoenix, everything.\"\n\n\"Everything?\"\n\n\"Greybear Security is a subsidiary of Global Maritime Protection Services,\" she explained. \"Which is owned by the Soulis Shipping Group.\"\n\nOf course. I should have seen that coming, shouldn't I?\n\n<hr size=\"2\" align=\"center\" >\n\nThe rest of Q1 2013 was uneventful. Financials continued to improve each month, and if we could maintain this pace we'd be a $10 million dollar company by the end of the year. That may sound like phenomenal growth, but you have to consider that the old Pathway had been a $10 million company before Tenneson destroyed it. So all we were really doing was a decent job of restoring what Tenneson had ruined. And we had spent some $60 million to get there. But as far as accomplishing our other mission, the biggest result we could point to so far was getting Troy Tenneson angry enough to enact a failed embargo on a Chinese restaurant in a small Oregon town. We would need to take things to a new level.\n\nThat opportunity was soon presented to us.\n\n<hr size=\"2\" align=\"center\" >\n\n\"Westover Foods, Inc.,\" Phil Barnes said as we looked at the slide he'd put up at our Q1 Phoenix meeting, \"Maker of Marvel Bread and Happi Brand snack cakes. Its management has been sucking money out of it while staving off bankruptcy, mostly by squeezing concessions out of their employee union in exchange for promising to maintain the pension fund. This month, they reneged on the pension fund, which violates their contract. If the union refuses to accept contract changes, the company will go under but they'll have their pension fund. If they accept, the company will go under anyway and then they'll have no pension fund.\"\n\n\"Bankruptcy sounds inevitable,\" Lucy said.\n\n\"Union members voted down a new contract by 92% last week,\" Phil confirmed.\n\n\"There are two asset acquisition bids in, one on Happi and one on Marvel,\" Phil noted. \"The Happi bidder is from a global conglomerate and is $680 million. That one's a done deal.\n\n\"The Marvel bid is $30 million. The sole bidder is Tenneson Equity Partners.\"\n\n\"Can't imagine the union will like that,\" Dennis said.\n\n\"They don't,\" Phil agreed, \"Which is why they approached me with an overture to Phoenix.\" They like what you're doing with Pathway. If you do the same with Marvel, they'll make significant concessions on compensation until the new company's on its feet.\"\n\n\"And they'll have their pension fund money from Westover,\" Lucy added.\n\n\"Bidding against Tenneson would definitely take things to a new level,\" I commented.\n\n\"Do we know what it would take to outbid Tenneson?\" Arnau asked.\n\n\"Tenneson's bid was presented as a take it or leave it offer,\" Phil replied. \"He's made some loud public statements about Marvel being a 'piece of crap loser company' and how he's the only one who will ever bid on it because nobody else could ever fix it.\"\n\n\"So we make him look bad just by trying to buy Marvel after he predicted that nobody else would,\" I reasoned, \"and even if we don't outbid him, we make him go back on his 'take it or leave it' ultimatum and spend more money to buy it.\n\n\"The question is, if we do buy it, are we positioned to 'save' another company?\"\n\nPhoenix Partners, LLC Purchases Assets of Marvel Bread from Westover Foods\n\nAlbuquerque, New Mexico, April 09, 2013 /Food Business News\n\nPhoenix Partners, LLC, Albuquerque, NM, dba Pathway Bakeries of Kelton, IL, has emerged as the buyer for a number of the Marvel Bread Company assets of Westover Foods, Inc, according to a Jan. 28 filing in the U.S. Bankruptcy Court for the Southern District of New York.\n\nUnder the agreement, Phoenix will pay $43.85 million in cash for the Marvel Bread Company's, Marvel, Pioneer Trail, Montana Heritage and Sitka Sourdough brands, 4 baking plants, 11 depots and other assets. The five baking plants are located in Portland, Oregon; Spokane, Washington; Billings, Montana; and Anchorage, Alaska. The 11 depots are located in Portland, Oregon, Heyburn, Idaho Falls, Montpelier, Pocatello and Twin Falls, Idaho; Billings, Montana; Bismarck, North Dakota; and Spokane, Everett and Tacoma, Washington.\n\n\"The acquisition of Westover Foods' Marvel Bread Company assets will enable us to expand the distribution of Pathway Bakeries brand products into the Pacific Northwest, and to add new lines of fresh-baked products to the existing Pathway family of products and expand their current Northwest distribution to the Midwest region,\" Phoenix Managing Director Geoffrey Lee told Food Business News. \"We welcome the employees of Marvel Bread to Phoenix.\"\n\nA week after the Q1 Pathway meeting we flew into Portland to conduct the first all-employee meeting of the new Marvel Bread. Greybear Security made all our travel and hotel arrangements. There was some joking about the legend that certain executives of the Coca-Cola Bottling Company are not allowed to travel together in order to safeguard the secret Coca-Cola formula (it's not true, by the way), but a limo was more convenient than the five of us lugging our own baggage and hoping that a rental car company wouldn't lose our reservation. So when we deplaned and exited the security perimeter at Portland International we were met by a couple of \"Men in Black\" types. One of them collected our baggage claim stubs and went off with a skycap to collect our luggage while the other escorted us to a sinister looking black SUV that turned out to be rather luxuriously appointed inside, and once we and our bags had been loaded we were off to our hotel.\n\nThe Marvel meetings were a different affair from our dramatic Pathway debut. Westover had obtained permission from its bankruptcy court to liquidate assets without having to shut down all its plants, not because they cared a whit about their workers, but because the facilities and equipment would be worth more if maintained in good working order instead of being idled, and the unions had been the one to initiate our involvement in the first place, so they had a pretty good idea what we were going to say to them about the value of quality products and business integrity. They just wanted to look us in the eyes as we said it. Half of Marvel's 430 workers were able to do that in person in a meeting hall in Portland; the other half did it over videoconferencing in their workplaces in Alaska, Idaho, Montana and Washington. We delivered our prepared remarks and handily fielded questions about our current success with Pathway and our plans to have both Marvel and Pathway products being distributed in all the market areas served by both, but I think the thing that confirmed success in my mind was the reaction from the employees when I told them that the four of us had grown up in Oregon eating Marvel's Pioneer Trail Honey Butter bread and we were going to do everything humanly possible to make sure it never went away. We spent the rest of the day meeting with the department managers of the Portland plant. Then it was back into the air for a whirlwind tour of the Anchorage, Spokane and Billings plants to meet with their managers and staff.\n\nMarty returned to Kelton at the end of the week and the rest of us flew back to Portland, where we were picked up again by our rolling palace for the trip south to Rose Valley. Lucy and Dennis telecommuted from Rose Valley, flying into Illinois for a few days every couple of weeks to meet with the Pathway managers who reported to them, and were happy to be going home. Me? Not so much. Mom and I talked just about every day over Skype, but my extended time out of state had made me realize that even before Pathway I had been spending as much time as I could on the road for our grain cooperative startup because whenever I was in Rose Valley I started to sink into my memories of all the bad things that had happened there. And every visit back seemed like another plunge into the abyss.\n\nMy hope for this visit was that bringing my executive assistant and a lot of Marvel-related work with me would keep my mind focused on the present. Spend time with family, work, keep busy. I wondered what Mom's reaction would be when Rebecca insisted on using the second bedroom in my apartment over the restaurant, but I guess Rebecca was sufficiently business-like that the idea of anything other than business happening never occurred to Mom. Or maybe Mom just decided that after what had happened with Kathy a new woman sharing my space might just be a good thing.\n\nIf you and my mother were thinking Rebecca and I were going to end up sleeping together you were right. But, as the saying goes, it wasn't what you were thinking.\n\n<hr size=\"2\" align=\"center\" >\n\nI woke up to the unfamiliar feeling of a warm body pressed against mine. I sat up with a start, and realized Rebecca was lying next to me.\n\n\"Rebecca?!\" I was under the covers, in my underwear. She was on top of the covers, fully dressed in a T-shirt and sweat pants.\n\n\"Morning,\" Rebecca said with a yawn.\n\n\"What are you doing here?!\n\n\"I heard you cry out during the night,\" she explained, shaking her head to get her hair out of her face. \"You were shouting your daughter's name, then your ex-wife's name. I grabbed on and held you until it passed, then you did it all over again and I figured I should just stay with you.\" She motioned toward the nightstand on her side of the bed, where her holstered gun was resting.\n\nI remembered. Rebecca was using my second bedroom so she could be close by. Just in case.\n\n\"I was back in the hospital,\" I explained. \"My daughter was in a coma, surrounded by all those machines, with tubes in her arms and all over her face. Alarms kept going off, people kept running in and making me wait outside the room. It happened over and over again, and then the doctor came and told me she was gone...\"\n\n\"Has this happened before?\" she asked.\n\n\"The dream, yes,\" I admitted. \"It happens a lot. Don't know about the shouting. There's never been anyone with me when it happened. The worst is when I'm...\"\n\nI couldn't say it.\n\n\"Here?\" she asked.\n\nI nodded.\n\n\"It wasn't just a dream,\" Rebecca said, \"It was more like some kind of panic attack. You need to talk to someone about this. You may have PTSD.\"\n\n<hr size=\"2\" align=\"center\" >\n\nWe were sitting in the back of the dining room going over the notes from our Marvel meetings. Zhen makes these great soup dumplings, big, pillowy envelopes of chewy dough filled with meat, shrimp, cabbage and a spicy broth. Keep your oatmeal, your meatloaf and your mac and cheese, this is comfort food.\n\nRebecca looked across the table at me, as if she was trying to decide whether to say what was on her mind and just couldn't decide.\n\n\"How do you do this?\" she finally asked.\n\n\"No idea,\" I said in between bites, \"This is Zhen's recipe.\"\n\n\"No, I mean this.\" She said, gesturing at a video of one of the meetings that was playing on her laptop screen. \"You find these people whose lives have been crushed, bring their jobs back from the dead, stand up in front of them, talk to them, and help them see a path to the future. You give them hope. And then you climb into your bed and relive the worst experience of your life, over and over again.\n\n\"Where is your hope?\"\n\nI didn't have an answer.\n\nThe rest of my visit to Rose Valley was... uncomfortable. Everywhere I looked, there was a bad memory. The house, where I had grown up and later lived with Kathy and Callie. The school, where I had dropped Callie off every day on my way to work. The park up the street, where we had taken Callie to play. The restaurant, where Rose and Callie met with Kathy that terrible day. And worst of all, the street outside the restaurant's front door, where Rose and Callie had been run down and killed by an enormous \"New Maitland Mills\" semi while Rose tried to stop Kathy from abducting Callie. When the limo returned to take us back to the airport Mom hugged me and cried. I think at that moment we both knew that no matter how many times I might come back to visit from now on, Rose Valley just wasn't \"my home town\" anymore\n\nRebecca was right. I needed to talk to someone.\n\n<hr size=\"2\" align=\"center\" >\n\nWhen you're the Managing Director of a company that's made a big splash in the news and have gotten your face on the cover of Fortune, seeing a doctor for a possible traumatic stress-related condition is more complicated than just picking a name off your company health insurance plan's list of preferred providers and calling for an appointment. Never mind the fact that everything Phoenix did was the result of four people thrashing out ideas on an equal basis and I was just the front man; we had made me the public face of Phoenix. If word got out and caused me to be perceived as \"unstable\" it might have the potential to undermine our business endeavors, and it would certainly be a liability in our war of words with Troy Tenneson. Naturally, Arnau \"knew somebody,\" some calls were made, and a few days after our return to Illinois I saw a doctor in Chicago who, by the look of the designer furniture in his rosewood-paneled waiting room, was probably not on any insurance company's list of preferred providers.\n\n\"The Holmes and Rahe stress scale measures an individual's level of stress by assigning points to \"life events,\" the doctor explained. \"It doesn't matter whether the events are good or bad, they're all stress elevators.\n\n\"A score of 300 points in a year puts a person at higher risk for stress-related illness. Based on your account of what you've experienced during the past year, your score is 848.\"\n\nThe doctor's diagnosis confirmed Rebecca's suspicion that I was suffering from post-traumatic stress disorder, based on unresolved grief for my daughter and anger at my ex-wife, with the most serious episodes triggered by my visits to Rose Valley. But my PTSD paled by comparison to the chronic stress I was carrying from all the changes that my life had undergone, my workload, the responsibilities we had taken on for the jobs of hundreds of people, and the fact that my friends, family and I were all under the protection of bodyguards. And as if that wasn't enough, I was also showing indications of depression. I left the office with a prescription for some low-dose medications and a stress management plan, and I'd be going back again every other week. For the talking.\n\n<hr size=\"2\" align=\"center\" >\n\nSaving another company wasn't actually mandatory to meet Sofie's condition that no innocent people suffer from our scheme; we really only had to save the jobs of the company's employees. The Marvel plants, depots and other facilities were refurbished; instead of \"Marvel Bread, a Westover Foods Company,\" their signs now read, \"Marvel Bread, a Phoenix LLC Company\" and the employees got a new company name and logo on their paychecks.\n\nMarvel proved to be easier to rebuild than Pathway had been. The equity group that owned Westover had sucked the life out of Happi Brands, but had pretty much ignored Marvel except for shifting revenue from Marvel around to make the entire company seem more profitable. Marvel's regional bread brands didn't have \"legs\" when it came to new markets, so we didn't ship much Sitka Sourdough to the Midwest, but existing market sales were growing with the population of the Pacific Northwest and Mountain regions, and that population was - and still is -growing pretty fast.\n\nOn the other hand, all the depots we had acquired made it possible to greatly widen the distribution of Pathway brands. We had garnered nationwide publicity from our acquisition of Pathway and the Christmas gift cards we handed out to its displaced workers, and in addition to the positive TV and business publication coverage, there was a lot of grassroots \"Support American workers, go out and buy Pathway!\" sentiment on social media. Wholesale orders for that year's Christmas cookies maxed out production the week after Halloween, and we ended up having to put extra shifts on to be able to meet the demand. It was the biggest Christmas Pathway had ever had, even in its pre-Tenneson days, and the overtime made for very, very happy workers.\n\nThe concessions the Marvel workers' union had offered to induce Phoenix to buy their company enabled us to bring Pathway workers up to equivalent pay levels after cost of living adjustments, and once we had pay and benefits equalized in all locations, we lifted the Marvel concessions and announced that all Phoenix divisions were now in synch. The unions that represented the Marvel/Westover and Pathway employees eventually decided to associate and negotiate with us together. Don't ask me how that happened, the unions did it themselves and we had no role in it. For our part, we were happy to be able to negotiate one nationwide contract.",
        "Marvel Bread combined with my doctor's plan turned out to be good for me. My blood pressure was down 20% by the end of December, and I learned to \"direct\" my dreams toward reliving better times with my daughter.\n\nWe all rang in a very happy New Year 2014.\n\nWell, maybe not all of us.\n\n<hr size=\"2\" align=\"center\" >\n\nOur first quarterly meeting of 2014 was more or less perfunctory. Sales, plant performance, employee morale, all were going smoothly. Then we turned to the final results of our four-year \"secret data project.\" (I told you there would be more about this, remember?)\n\nThe tangible Pathway assets we had acquired included not only the company's properties and production equipment, but also all of its computers, servers and office equipment. And by acquiring Pathway's intangible assets, we had become the owners of all of its intellectual property, such as patents, recipes, manufacturing processes... all of its data, wherever it was. We had upgraded or replaced all of Pathway's office equipment, but we had removed all the data storage media for our \"secret data project,\" and in a building Phoenix had leased a few miles outside of Rose Valley, a team of Dennis' former staff members, fellow victims of the Tenneson purge of Maitland who we had hired as Phoenix consultants, had been painstakingly recovering deleted data.\n\nArrogance breeds carelessness. We had all seen how Tenneson's managers operated when we were at Maitland, and we knew they were not as smart as they thought they were. When Arnau told us that he suspected Tenneson had used Pathway's financials to commit fraud, we knew there was no way they could have left \"no proof.\" The mere fact that they had wiped all the drives in their computers on their way out the door as Pathway collapsed was like a neon sign that said, \"something to hide here,\" and Dennis knew just where to look for it.\n\nWiping the hard drive in your computer is easy; you can download free software from the Internet for that. But wiping the drives in your servers doesn't wipe the removable drives in a rotating backup scheme, especially after you've fired the IT staff you've been treating like peons for five years. Recent data on the company's backup drives was intact. And during the first couple of years Tenneson owned Pathway the company's IT department was still running tape backups of the company's network server. Returning IT staff produced boxes of old backup tapes that had been shoved into the back of a closet, and they yielded a wealth of four and five-year-old data... once we managed to buy replacement tape drives and a copy of the now-obsolete backup software on eBay.\n\nThe data transmitted through Pathway's wireless phone and internet accounts was also a company asset. Every time one of Tenneson's people had sent or received email or text messages using their cell phones, copies of them were being held on some server in the bowels of USA Wireless for seven years... and all of those accounts now belonged to us.\n\nAnd did you know that digital copy/FAX machines scan the documents you feed into them, use that scan data to make automatic resend attempts if needed and then hold it until you delete it? Tenneson's people apparently didn't.\n\nAs each new cache of data was recovered by Dennis' team, it was handed off to another team made up of Lucy's fired Maitland accountants and business analysts. Lucy's team spent three years crunching the numbers in the data that Dennis and his team recovered and reconstructing Tenneson's financial transactions, and all of our suspicions about how Pathway was used to commit fraud and then raided for every penny that could be stolen from it were confirmed.\n\nTenneson had used the same crooked finance team for all his illegal operations, and for five years they were operating mostly out of the finance offices at Pathway Bakeries, using Pathway's office computers, network servers, telephones and office equipment. We couldn't recreate complete data trails for every scam because Pathway systems weren't used for everything, but we recovered the emails they had exchanged while making their plans, and the numbers of the overseas accounts they used to hide money looted from Pathway and two other companies they owned, Wilson Energy and Paulsen Mining.\n\nAnd then there were the records Dennis found of Tenneson's scheme to engineer the takeover of Maitland Mills.\n\nAs most everyone knows by now, during the first half of the last decade, millions of people across the US were victimized by predatory lenders, fraudulent real estate appraisers and crooked securities bundlers. At one point, almost 11% of all US home mortgages were underwater and nobody knew it until it all blew up. Most news reports will tell you that the city with the highest percentage of underwater mortgages was Newark, NJ, where some 54% of all homes were worth less than their owners owed on them. But underwater home loans represented more than 60% of all the mortgages in Rose Valley, and virtually all of them had been made to people who would have a vote in a Maitland buyout.\n\n80% of the loans made to Rose Valley homeowners had come from a Los Angeles based lender, CountryWay Bank. From 1999 until 2004, the period during which America's most toxic mortgages were issued, seven of the twelve members of the board of CountryWay Bank were also shareholders in Tenneson Equity Partners. And all seven of them had resigned or \"retired\" from the board by the time CountryWay had failed and gone into FDIC receivership.\n\nTroy Tenneson and his partners had carried out a systematic plan to push enough Maitland Mills shareholders into financial distress to make the company susceptible to a carefully timed buyout offer. They conspired to ruin half the people in our town so that they could take over one company.\n\n\"Motherfuckin' sonsa bitches,\" Lucy muttered.\n\n\"Oh. Sorry,\" she said, her face turning scarlet as she realized that she had said it aloud. None of us had ever heard anything like that come out of Lucy's mouth before.\n\n\"That's ok,\" Dennis replied, \"I said the exact same thing when I saw this.\"\n\nMarty and I were just speechless.\n\nWe turned all the data we had recovered over to the federal government's newly formed Consumer Financial Protection Bureau and explained to them how we had come by it. In the next three months, we explained it again to the Federal Trade Commission, the Securities and Exchange Commission, the Internal Revenue Service and the Federal Reserve. And then to their equivalent state agencies in Illinois, Oregon, Texas, Wyoming and Nevada.\n\nApril 12, 2014\n\nDOJ, SEC and IRS level fraud and tax evasion charges against Tenneson Equity Partners CEO Tenneson\n\nThe U.S. Department of Justice, the U.S. Securities Exchange Commission and the U.S. Internal Revenue Service have announced charges and an asset freeze against Troy Tennneson and Tenneson Equity Partners LLC, saying that they operated the former Pathway Bakeries of Kelton, IL, Wilson Energy, Inc. of Dallas, TX, Paulsen Mining, Inc. of Cheyenne, WY as the centerpiece of a $3.2 billion fraud scheme.\n\n\"Our complaint alleges that Tenneson's business model was a sham,\" added Steven Perkin, director of the SEC's enforcement division. \"The only way Tenneson was able to make loan payments was by continually obtaining additional fraudulently borrowed money.\"\n\nThe Justice Department says Tenneson falsified revenues and asset values in order to obtain loans secured by company assets. In reality, the Justice Department says Tenneson operated a scheme in which fraudulently borrowed money was used to pay previously defrauded lenders.\n\n\"The SEC is seeking return of allegedly ill-gotten gains with interest and financial penalties,\" according to the commission.\n\n\"Our complaint further alleges that Tenneson used a web of layered companies and offshore bank accounts to conceal the proceeds of his fraud,\" said Eduard Buscante, director of the Internal Revenue Service's Chicago Regional Office. \"Tenneson used the scheme to line his pockets with millions of defaulted dollars and conceal them for purposes of tax evasion.\"\n\nA federal court hearing is next scheduled for Dec. 29. The IRS has requested that the asset freeze continue.\n\nThe trials lasted over a year, during which Tenneson repeatedly proclaimed that all the data being used as evidence against him was \"faked.\" Dennis and Lucy testified about the forensic work their staffs had done to recover the Pathway data, and Tenneson's defense was never able to explain how the \"faked\" data had included actual numbers for bank accounts in the Bahamas, the Cayman Islands, Belize and Luxembourg that contained over a billion dollars that had never been reported as income to the IRS.\n\nThey just didn't see it coming.\n\n<hr size=\"2\" align=\"center\" >\n\nJune 24, 2015\n\nCEO sentenced for fraud and tax evasion\n\nThe former CEO of Tenneson Equity Partners was sentenced to 60 years in prison for fraud, and tax evasion Friday in federal court.\n\nTroy D. Tenneson, 58, founded Tenneson Equity Partners in 1985. At its peak, the business owned and managed five companies throughout the United States.\n\nTenneson was convicted of conspiracy and falsifying revenues and asset values in order to fraudulently obtain loans secured by company assets. The fraudulently borrowed money was used to make payments to previously defrauded lenders.\n\nTenneson was also convicted of concealing the proceeds of his fraud to evade taxes.\n\nTenneson was ordered to pay $3.2 billion in restitution to the lenders and other creditors he defrauded,\n\nIn addition to Troy Tenneson, the seven other partners of Tenneson Equity Partners and more than a dozen of their employees were indicted on the same charges. All were either convicted or allowed to plead guilty to lesser charges in exchange for testifying about how Tenneson and his partners directed their illegal actions. We were disappointed, however, when the DOJ decided that the predatory mortgage scheme Tenneson had carried out on the citizens of Rose Valley, like the rest of the nationwide mortgage scandal, consisted only of civil violations and no one would face criminal charges for any of it.\n\nThe government instituted criminal forfeiture actions against Tenneson Equity Partners and its principles. $2.8 billion in cash came from the offshore accounts. The company's business assets and the conspirators' personal assets - investments, homes, yachts, private jets, cars, etc., - were also seized and ordered sold.\n\nPhoenix Partners LLC received a whistleblower award from the IRS for 30% of the total amount recovered from Troy Tenneson and the other principles of Tenneson Equity Partners. The award won't be paid out until all the assets have been disposed of, which may take years due to all the ongoing appeals, but if our estimates are correct, at $960 million it will be the largest such award in history. Our scheme to bring down Troy Tenneson by bringing his victimized businesses back from the dead will end up making a profit of nearly $600 million.\n\nAlthough my ex-wife had been employed in the Maitland Mills finance group under Tenneson's ownership she was not charged in any of Tenneson's crimes. The court allowed her to keep the $500,000 in cash, the $1.6 million LA condo, and several cars that Tenneson had put in her name when she married him. Until she is released, all her assets are being managed by a court-appointed guardian due to her lack of family members willing to assume responsibility for them and she can only access what can be deposited into her commissary account each month. She still has another three years to serve before she's eligible for parole, but when she gets out she won't end up as penniless \"kitchen help.\"\n\n<hr size=\"2\" align=\"center\" >\n\nArnau Soulis died peacefully in his sleep on October 2, 2015. He was ninety-one years old. No evidence had ever been found that Troy Tenneson was behind his son's death or any other crimes than financial; despite all his bluster, the man had turned out to be a toothless lion. But we hoped that seeing Tenneson locked up for a long time had provided Arnau with some measure of satisfaction, because ultimately Arnau and Paul had been right: Tenneson's greed had been the driving force behind all the suffering that had followed in his wake.\n\nArnau's memorial was a very private affair, consisting of his daughter-in-law, his two grandchildren and several lifelong friends. We did not attend, as his wish to the end was that no one outside our small band of conspirators should ever connect him or his money to Phoenix Partners, LLC. It would keep us safe from whatever enemies he might have made in his past, and Sofie and his grandchildren safe from whatever enemies we might make in our future. The media reported that Arnau had left several million dollars to various charitable foundations, and that the only other heirs to his vast shipping empire were his daughter-in-law and his grandchildren.\n\nSeveral weeks after the reading of the will, we met with Sofie in the Timberline condominium.\n\n\"Arnau has bequeathed his interest in Phoenix Partners to me,\" Sofie told us, \"So we will continue to be business partners for as long as we all find it mutually agreeable.\" She handed us each a document, which proved to be a financial statement, and we were surprised as all hell to see what it said.\n\n\"One billion dollars...?\" Lucy gasped. Added to the funds already in the Phoenix accounts, our one-eighth interests in the company amounted to more than $200 Million each.\n\n\"Arnau's final investment,\" Sofie confirmed. \"He told me that of all the many things he had put his money into, Phoenix was the one he was most proud of. It is ironic that no one outside this room will ever know that he made it.\n\n\"And he left you this letter...\"\n\nTo my dear friends,\n\nBy now Sofie will have informed you of my final deposit into the Phoenix accounts. I know you will do good things with it.\n\nI want the four of you to know how thankful I am for having known you and for what you have done for me. I do not only speak of bringing about justice for my Andre. I also speak of what you have done for my soul. \n\nSince I met and loved my Manon I have tried to become a better man so that I might be worthy of her, but I have always doubted my success at this. You have allowed me to live my final days fighting on the side of the angels, and I pray I have finally redeemed myself so that I may be permitted to see my wife and son again. For that I am eternally grateful to you all.\n\nThank you.\n\nForever your friend,\n\nArnau\n\nP.S. Save as many of them as you can.\n\n\"And so,\" Sofie asked with a smile, \"Who are we to be saving next...?\"\n\nPhoenix Partners, LLC Completes Purchase of Assets of Tenneson Equity Partners\n\nAlbuquerque, New Mexico, December 4, 2015\n\nPhoenix Partners, LLC today announced that it has completed the purchase of the assets of Tenneson Equity Partners of Reno, NV. Under the terms of the Asset Purchase Agreement, Phoenix has acquired substantially all of the assets of Tenneson for approximately $528 million.\n\nTenneson Equity's assets were seized by the Securities and Exchange Commission and the Internal Revenue Service in connection with fraud and tax evasion actions against the company and the conviction of its chairman, Troy D. Tenneson, and consist of three businesses operated by the company: Wilson Energy, Inc. of Dallas, TX, Paulsen Mining, Inc. of Cheyenne, WY, and Maitland Mills, Inc. of Rose Valley, OR.\n\n\"Tenneson's operation of Wilson Energy and Paulsen Mining was based on environmental destruction and the displacement of indigenous peoples,\" commented Geoffrey Jian Lee, Managing Director of Phoenix LLC. \"We will cease these operations immediately, and do everything in our power to undo the harm they committed. We will also reform the operation of the Maitland Mills, to restore it to the position it once held as a leading purveyor of the highest quality products.\n\n\"All Phoenix Partners companies will adhere to the highest standards of business integrity.\"\n\nSOURCE Phoenix Partners, LLC\n\nWilson Energy and Paulsen Mining turned out to be shadows, nothing more than holding companies and more ways for Tenneson and his partners to steal money from investors. That turned out to actually be a good thing, because the mass destruction they had promised to unleash upon the rain forest was just another fraud. When we pulled the contracts for the rain forest deal with San Lorenze and cut loose all the thugs who'd been hired to make a show of burning out the homes of the indigenous tribes, there were barely 200 actual employees between both companies worldwide. Given what they originally hired on to do we weren't nearly as motivated to save their jobs, but we've given them a chance, if they'll work to advance the newly-formed Phoenix Environmental Group's first South American venture. It's an enormous gamble, because nobody has ever successfully replanted such a large expanse of deforested prime rainforest. But it's attracted some of the world's leading environmental scientists, and if we succeed the potential for creating jobs in environmental restoration is enormous.\n\n<hr size=\"2\" align=\"center\" >\n\nAnd that bring us to today. I'm in the office of a warehouse on the grounds of the Maitland Mills. It's the only building in town large enough to hold all the mill's employees, current and former, and their families. This afternoon we constructed a temporary stage out of scaffolding, and right now about 70% of the population of Rose Valley, Oregon is waiting for the four of us to come out and talk to them.\n\nWe're going to start with the \"Phoenix pitch,\" our mantra about success through dedication to quality and business integrity. We'll remind them that Maitland used to be a place that cared about the quality of the work people did, and treated them with respect and fairness. And we're going to reassure them that we can make this work, and that it shouldn't be that hard because it's the way we always used to do things.\n\nBut rebuilding Maitland isn't going to be like saving Pathway, or Marvel, or even Wilson and Paulsen. The people in those companies were all in the same boat, together, and didn't split into factions for and against selling their companies. A third of Maitland's workers were kicked out the door four years ago, not just for a few months. Yes, we hired most of the marketing, finance and technology people as Phoenix consultants and helped place other fired Maitland workers in jobs with Marvel in Portland and Spokane, and we'll offer all of them their jobs back at Maitland, but a lot of them may choose not to return. And many of those who do come home will still have hard feelings about the fact that their neighbors, coworkers and in some cases even family got dollar signs in their eyes, overextended themselves and then panicked and sold the life blood of our community out from under us.\n\nI know that because I'm one of them. And just as I continue to work through the personal demons that have haunted me for so long, we all have to resolve our feelings, because if we don't they'll eat us alive. I'm going to talk frankly about what we let happen to our town, what it cost us and how we have to cope with our feelings about it and live and work together if we're going to put our home town right. Yes, I said, \"our\" home town. Using me as the public face of Phoenix turned me into the personification of all the pain this town has suffered, and in order for my words to mean anything, I have to come back here too, and try to make Rose Valley \"home\" again. Because if we can't, then the motherfucking sonsa bitches who did this to us still win.",
        "<hr size=\"2\" align=\"center\" >\n\nIf you're not sure whether my story has a happy ending, welcome to the club. Yes, I went from being unemployed to being a partner in a billion dollar business, my faithless, backstabbing ex-wife will be incarcerated in an Oregon state prison for another three years, the arrogant sonuvabitch villain of the piece is a penniless convict in a federal penitentiary in Illinois for what will probably be the rest of his life and more than a thousand formerly unemployed workers and their families in a half-dozen states across the US look at me as if I walk on water.\n\nI'd trade it all in a heartbeat to hold my little girl in my arms again. There's a hole in my heart that hasn't been healed by either success or justice. As for love, it'll be a while before I'll think about rolling those dice again, if ever.\n\nBut my life isn't over yet, and I have a lot to keep me busy. So I guess there really isn't an ending yet, and if I can't say I'm happy, at least I have purpose. And for now, that's enough.\n\nMaybe I have hope after all.\n\n<hr size=\"2\" align=\"center\" >\n\nThis story was inspired by some real-life incidents and news articles:\n\nKathy O'Haney was inspired by my own \"girl next door.\" Thankfully, she never followed through on her childhood declaration of intent to marry me.\n\nCallie Lee's abduction was inspired by an incident in which a child in her grandmother's custody was taken by her mother during a visitation at a diner and dragged across a busy road to a waiting car. No one was harmed, and the child was recovered safely.\n\nFrom 2000 until its collapse in 2003, Countryside Financial, located in the Los Angeles suburb of Calabasas, CA, was the country's largest issuer of \"subprime\" mortgages. More than 60% of its loans were \"high risk,\" 30% of them were underwater and 90% of them were \"bundled\" and sold off to unsuspecting investors.\n\nIn 2008 the private equity owners of the Archway &amp; Mother's Cookies Co. of Ashland, OH, closed its doors amid charges of falsified sales and draining of assets. 300 workers were made jobless. The assets of the company were purchased and reopened by Lance, Inc. of Charlotte, NC. The CEO of Lance met with the fired workers three weeks before Christmas and distributed $1500 VISA gift cards to them.\n\nIn 2012 the maker of Hostess Snack Cakes and Wonder Bread closed its doors when its workers' union refused to make concessions that would defund their pensions after the company's executives gave themselves an 80% raise. The company's Pacific Northwest bakery assets were purchased by the Franz Family Bakers of Portland, OR and reopened.\n\nThe fraud charges against Troy Tenneson are drawn from lawsuits filed by lenders against Archway's former owners.\n\nTroy Tenneson's prison sentence was inspired by the 2006 sentences of Kenneth Lay and Jeffrey Skilling in the Enron scandal.\n\nThe Maitland Mills was inspired by Bob's Red Mill Natural Foods of Milwaukie, OR. As founders Bob and Charlee Moore contemplated retirement they received many offers to sell their company. Instead, in 2010 they decided to transfer ownership of the company to their employees through an employee stock ownership plan. Bob and Charlee are still with us as of this writing and the employee-owned company continues to be successful.\n\nSometimes, the good guys really do win."
    ],
    "authorname": "sdc97230",
    "tags": [
        "betrayal",
        "crime",
        "drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-phoenix-partners"
}