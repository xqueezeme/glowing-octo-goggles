{
    "title": "Trailing Along",
    "pages": [
        "* * *\n\n[Many thanks to my volunteer editor LadyVer, whose helpful investment of time made this a much better story.]\n\n* * *\n\nI was inching my car across the icy parking lot of the Mill Creek Ranger Station when I first saw her: alone on the shoulder of California Highway 38, a pair of skis crooked in one arm, and her thumb pointing up the road toward the mountain resorts at Big Bear Lake. It had been years since I'd seen anyone hitchhiking, much less a lone female.\n\nI watched in disbelief as car after car whizzed by her. From a distance she seemed fairly attractive\u2014about my age, maybe a little older. Dressed in a gray and navy ski sweater and a light blue nylon bib. I could see her boot bag on the ground with a parka lying on top. Her wavy mane of strawberry blonde hair lifted up with the draft from each passing car.\n\nWhat a stroke of luck! A cute gal needs a ride\u2014I'd better get my ass over there quickly. I stomped on the gas, but my folly was met with the whine of spinning tires on the slippery pavement. Slow and easy was the only way. I was sure some guy would pull over and pick her up before I could get there.\n\nIt was excruciating watching her wave her thumb at numerous passing cars while mine barely moved in her direction. Somehow I was the first one to stop. I lowered the passenger window and asked if she needed a ride to Big Bear. I don't mean to sound shallow, but she had a noticeably full bosom that even her bulky sweater and bib couldn't hide\u2014but I would have stopped anyway.\n\n\"What makes you think I'm going skiing?\" she quipped, looking over my car and checking me out for any warning signs. I saw a season pass to Big Bear Mountain Resorts clipped to her bib. She stepped closer and noticed my skis poking through the fold-down section of the back seat.\n\n\"That's nifty. I didn't see a ski rack, so I was concerned you were just driving around looking for helpless women to lure into your car.\"\n\nI put the cark in park and got out. \"Hi, I'm Jim. I've got a full day of skiing planned. I'd be happy to take you up the mountain. Are you going to Snow Summit or Bear Mountain?\"\n\n\"I was thinking Snow Summit. I was at Bear last week. How about you?\"\n\n\"I could do either, but Summit sounds good. What happened to your car?\"\n\n\"No chains. My truck has them, but it wouldn't start this morning. I had to drive my Honda. I knew I could be stuck on the side of the road bumming a ride if they had chain control today. You've got them, I hope?\"\n\n\"Sure. That's why I stopped at the ranger station\u2014to see if they were required today. I figured they would be, after the storm yesterday.\"\n\nShe was looking in the car for clues about me, reassurances that I was no danger to her. I keep a spotless interior. The only thing visible was a CD I was about to slip in before I noticed her hitching.\n\n\"Oh, I'm Sandy, by the way. Thanks for stopping.\"\n\nWe shook hands\u2014mine were bare and hers in wool gloves that matched her sweater. She was only a few inches shorter and had the posture and body language of an athlete.\n\n\"So what's it going to cost me for the ride?\" She had a winsome twinkle in her eye as she waited for my answer.\n\n\"Sandy, your pleasant company will be enough.\" I tried to keep good eye contact and not ogle her chest.\n\n\"OK, that I can handle.\" She leaned over and grabbed her parka and boot bag. \"Pop the trunk. Fresh snow awaits us.\"\n\nI got her gear stowed and pointed to the box holding the snow chains. \"See, ready for anything.\"\n\n\"I'm glad you stopped. I've been out here a lot longer than I expected. I guess drivers these days are afraid to pick up a hitchhiker. Even a woman. Or else I'm getting too old to turn a man's head. Would you have given me a ride if I were a guy?\"\n\n\"Probably. If he seemed like someone I wouldn't be afraid to have sitting next to me on the way up.\"\n\n\"You aren't afraid of me, are you?\"\n\n\"No, you seem like a good person.\" I opened the door for her. She gave me a wink and a grin as she slipped in.\n\nShe was tugging at her seat belt as I slid behind the wheel. The bulkiness of her clothing and breasts made it hard for her to get it clicked the first time. She caught me off guard when she explained her difficulties.\n\n\"I know I've got big boobs. I want to break the ice on that topic and get it out on the table. Guys have been staring at 'em for twenty years now, so I don't want you to feel like you have to look away. Just try to keep your eyes on the road some of the time. OK?\"\n\nI had to laugh. I don't think I'd ever had a woman put me at ease on that matter, right up front like she did.\n\n\"Fair enough, Sandy. I like your style.\"\n\nAs we pulled away she looked over the CD I had out.\n\n\"Fire on the Mountain? Is this what I think it is? Oh, wow, it is! Reggae artists covering Grateful Dead songs. Now I'm certain the right car stopped.\" She slipped in the disc, and the first notes of The Wailing Souls version of \"Casey Jones\" filled the car. Sandy let out a squeal and started to boogie in her seat as we headed up the highway to Big Bear.\n\n* * *\n\nMinutes later it seemed like we were the best of friends. She was very easy to talk to. Laughed at all my jokes, got the obscure references I peppered my conversation with. Her wit was dry and self-deprecating. She had me laughing, too. I was really fortunate to have her along for the ride. I had taken that Friday off to beat the weekend crowds; she had a flexible work schedule but didn't offer any details at first.\n\nIt wasn't long before we saw the area where cars were pulled over to \"chain up.\" I saw one driver arguing with a Highway Patrolman\u2014who made him turn around and head back down.\n\n\"I wonder how much they're charging this year to put on chains,\" I said. A crew of men in yellow slickers and knee pads were offering their services for those who weren't up to the task.\n\nSandy spoke up. \"You don't have to pay. I can do it. That'll be my contribution.\"\n\n\"No, you're a guest. I'll take care of it.\"\n\n\"Horse hockey! I said I'd do it. I know you think a woman can't handle it, but I live on a ranch by myself. I work with my hands all the time. Pull over and open the trunk. I'll get them out.\"\n\nI wasn't going to argue; she seemed confident enough. My work gloves were too big for her to use, so she had to go barehanded to keep from ruining her good ones. She quickly got the chains lined up under the wheels and motioned for me to pull forward. She had them hooked up in less than two minutes.\n\n\"Shit! Why'd I leave my other gloves back in the truck?\" she griped, rubbing her cold, wet hands together in front of the heater grille.\n\nI got a wave of approval from the CHP and pulled back onto the highway. Sandy looked over at me as she put her gloves back on.\n\n\"I hope that wasn't too tomboy for you. Really, it's no big deal. I have to do stuff like that all the time on the ranch. All part of the romance of horse ownership.\"\n\nA horse ranch. A crazy montage of women and horses from years gone by floated through my head: Elizabeth Taylor in National Velvet, Dale Evans on Buttermilk, various actresses who played Annie Oakley\u2014even fashion magazine cowgirls in Ralph Lauren ads, smartly attired and adorned with turquoise jewelry.\n\n\"Jim, do you ride?\" Sandy's question snapped me out of my daydream.\n\n\"I used to. When I was at summer camp as a kid. Every day. That's been a while. I've done a few guided trail rides here and there since then, but it's not a regular thing. I'm still comfortable on horseback, though. Never have been thrown. Yet.\"\n\n\"That's something to be proud of. I've kissed the ground many times over the years, but that's part of the deal when you've got ornery mounts in your stable. The three I've got now are good ones. Even mountain bikes on the trails don't seem to bother them.\"\n\nWe chatted away about her horses and ranch the rest of the way up. I couldn't help but feel attracted to a confident, capable woman like Sandy. It was very sexy in a way. Her \"twenty years\" comment about her boobs would make her mid-30s, maybe a year or two older than I was.\n\nI should point out one thing about the people who ski locally in Southern California. It's a \"regular Joe & Jane\" kind of crowd. The rich folks all go out of state to ski at bigger resorts with fancier amenities. For day skiing locally there's no need to pay for a plane ticket or lodging, so anyone with a steady job can afford to do it. All you need is money for gas, skis, a lift ticket\u2014and a car that starts.\n\n* * *\n\nWe reached the village of Big Bear and drove past the small airport and the turnoff for Bear Mountain. I normally don't come up the back way on 38 since it takes longer; but I knew the shorter routes would be crammed with cars, each one after the same new snow we were about to enjoy. I was glad to have Sandy as company on the drive. I figured she'd thank me and be on her way once we got to Snow Summit and parked the car, but she surprised me.\n\n\"Why don't we ski together for a few runs? It's more fun with a partner. Can you handle intermediate trails?\"\n\n\"Sure, that'd be great. But I was going to take a refresher lesson. This is my first day out this season, and I'd like to escape the plateau of mediocrity I've been stuck on.\"\n\n\"I can give you a private lesson\u2014if you don't mind being ordered around by a woman. You can buy me lunch with the money you'll save. Deal?\"\n\nAfter putting on our ski boots, we trudged up to the base so I could get my lift ticket. Sandy suggested we go right to the top and take an easy run so she could see how well I skied.\n\n\"We'll come down Summit Run. It'll be a good warm-up for your first time out.\"\n\nWe didn't say much on the lift since we were sitting next to a pair of young snowboarders who acted like we were their parents. Sandy took off smoothly and stopped partway down the trail so she could analyze my technique. It was a little intimidating, skiing in front of a woman to whom I was becoming sexually attracted. That, plus the fact I'm not much of an athlete to begin with. I was tense and fearful and almost fell a few times.\n\n\"OK, the number one problem is you're too stiff. And scared. You're leaning back on your turns instead of forward. Let's ski down to the cutoff for Chair 3. Stick with me and I'll give you some pointers and corrections as we go.\"\n\nSandy was a patient instructor. She seemed genuinely invested in my getting better, and I was focused on not letting her down. We did the run two more times. I was improving but still hadn't made the breakthrough I was reaching for. I couldn't shake the fear and stiffness holding me back. When we got to the bottom again, I made a little joke.\n\n\"Sometimes I think I ski better when I'm stoned. I'm more relaxed and fearless.\"\n\n\"Really? Do you have some weed with you?\"\n\n\"Actually, I do. A joint in my pocket. And a lighter.\"\n\n\"Then get it fired up as soon as we're on the next lift. I forgot my stash back in the truck. Let's take Chair 5\u2014it's a double so we'll have some privacy.\"\n\nAfter we were airborne on the lift, I took off my gloves and got out the joint. Sandy stuffed her gloves in her parka and cupped her hands around mine as I flicked my lighter. It was the first time I'd gotten a close look at them. They were feminine but hadn't seen a manicurist in some time: rough, with short nails and no polish. A few cuts and scrapes were in various stages of healing.\n\nI felt ashamed my initial reaction was distaste. After all, how did I think those tire chains got hooked up that morning? I'd never known a woman who worked outdoors. I was a wussy city boy who never did anything more demanding than stir coffee at my desk job.\n\nBefore Sandy took her second hit, she offered to \"shotgun\" me. I hadn't done that with anybody in a long time.\n\nSandy took a long drag and leaned in close, one hand grazing my cheek. Our lips were almost touching as I inhaled the smoke from her mouth. My cock swelled up instantly. I quickly forgot about what her hands looked like.\n\n\"Now I'll return the gesture,\" I offered, taking a hit off the joint and pulling her close to me. My fingers teased her hair as she inhaled.\n\n\"Mmmm ... that was nice,\" she sighed, exhaling and brushing her fingertips across my mouth.\n\nI put away the pot, and we both put our gloves back on. Sandy gave my thigh a squeeze.\n\n\"Getting your instructor high isn't going to make her go easy on you. If anything, I'll be harder since you promised a new, relaxed version of yourself.\"\n\nWell, she wouldn't be the only one getting harder. My erection was as solid as the tree trunks passing below us. She gave me a sexy smile as we both got ready to get off the lift.\n\nI hate to admit I relied on performance enhancing drugs, but my skiing improved noticeably on the next run. Sandy was shouting words of encouragement and praise as we hurtled down the hill. We went up again and moved over to the Timber Ridge intermediate trail. It was amazing how loose and confident I felt. I was finally able to keep up with her speed and maneuvers\u2014well, almost.\n\nWe were back up at the top when she suggested we take one more run down before getting the lunch I owed her. \"I think you're ready for a black diamond run. Let's do Log Chute. It's got a section toward the bottom for advanced skiers.\"\n\nOff we went. We sped down the upper part of the trail like a pair of pros. Sandy pulled up at the top of the expert section.\n\n\"Let me go first. Wait about three seconds and follow my path down. I know you can handle it.\"\n\nIt was the steepest trail I'd ever been on, but I took off right behind her. It was very demanding physically. I quickly tired and felt the early twinges of panic as my speed increased. I never would have chosen to go down such a difficult trail on my own, but I didn't want to disappoint Sandy after she had spent her entire morning with me.\n\nShe pulled away as I began skiing more cautiously. Somehow I summoned a burst of energy to help regain my speed. My body shrugged off its fatigue as the lessons and practice pulled everything together. I sped up and locked into the zone\u2014one with the slope.\n\nSandy reached the bottom and turned back to watch my final descent. She shouted out to me: \"Perfect. Lookin' good. Great turns. You've got it.\"\n\nI planned to speed right up to her and do a last second stop, hoping I could show off and do a fancy spray of snow in the process. Well, I did, but I misjudged my momentum and toppled into her. Down we went in a tangle of skis.\n\nWe were both spitting out unexpected mouthfuls of snow. I tried to get up, but my skis were caught up in hers. Our bodies inadvertently shifted to the missionary position as we wriggled around. I could feel her breasts squash under my weight. A woman from the ski patrol walked over and looked down at us.\n\n\"You two should get a room,\" she joked. Sandy and I couldn't help but laugh as she bent down and released the binding from my top ski and lifted me up. \"OK, lover boy. Help me get your sweetheart off the ground.\"\n\nAfter the ski patrol gal walked away, Sandy put her hand on my shoulder. \"Jim, if you wanted to make out, all you had to do was ask,\" she teased. \"Let's take the lift up to the View Haus restaurant. I'm hungry.\"\n\n* * *\n\nI hate the crowds and chaos at ski resort cafeterias, but often it's the only game in town. Our food was unremarkable, as was the beer and wine selection; but we had a chance to exchange more information about ourselves. She had been divorced for two years; I was in-between girlfriends. Neither of us had kids.\n\n\"After my divorce I returned to work part-time. The alimony alone isn't enough to keep the ranch going. My real estate license is still active, and I get occasional business from old clients and other people I've known for years. My steadiest work is from appraisals. I specialize in ranch properties. My clients are typically banks, estates, and auction houses.\"\n\n\"Where is your ranch?\"\n\n\"Do you know where Oak Glen is? No? How about Yucaipa? OK, Oak Glen is six miles east of there. I'm about a mile or so before you get to Oak Glen.\"\n\nSomehow we got on the topic of relationships. She had some tragically funny stories about dates with various \"Mr. Wrong\" types. I could tell my own sad tales, too. It almost became a competition to see who could relate the most pathetic experiences. I gave the prize to Sandy when she told me about one disastrous night: an accumulation of gaffes, insults, and clueless behavior by some oaf she ended up giving a mercy fuck to after having too much to drink.\n\n\"I was mortified when I awoke the next morning cuddled up against this loser. I seriously thought about chewing my arm off so I could escape without waking him.\"\n\nI thought that was hilarious. It was the first time I'd heard someone refer to what people started calling \"coyote ugly\": bad choices in sex partners who made you feel so desperate to get free the next morning you'd rather gnaw off a limb than wake them\u2014like a coyote caught in a trap.\n\n\"No, it wasn't my finest hour,\" she admitted. \"Haven't had sex since. Boy, it's been way too long\u2014well over a year. How about you?\"\n\n\"Almost a year for me.\"\n\n\"What's wrong with us? We should be getting laid all the time.\"\n\n\"I guess we've been too picky about who we jump in bed with.\" Yeah, right. The ones being picky were the women who gave me the brush-off.\n\n\"Well, you've got a much larger dating pool in L.A. It's pretty shallow out here. The few city guys I meet think I'm too country, but the local guys are too rough for me. Most of them are sexist and macho to the max. And that's just for starters.\"\n\nWe both shook our heads and finished our drinks. I thanked her again for giving up her morning to tutor me. I expected she would take off on her own after lunch, but she wanted to stay together.\n\n\"I'm having fun, and I know you're a reliable ride back down to my car, and ...\" she said, with a shrug and a smile. I thought the look she gave me hinted at more, but maybe I was imagining it.\n\nWe spent the afternoon skiing together. I was able to go on several more black diamond trails, but I began to tire and wanted to go back to less challenging runs. I was in shape physically, but skiing taxes different muscles\u2014the same as horseback riding.\n\n\"No problem. If you're getting tired, then skip the expert runs. That's how people get hurt, not knowing when to ease off.\"\n\nFortunately there were numerous places on the mountain where we could each choose a separate trail that fit our abilities but then easily meet up at the bottom. Before long, the afternoon sun was fading into the golden hour. Sandy suggested we do one more run.\n\n\"Let's do Miracle Mile. You've made remarkable improvement since your first run this morning. I think we have a good rhythm when we ski together. It feels natural. And exciting when we can go hard and fast.\"\n\nWas there innuendo in those words?\n\nAfter riding the express lift, we hit the ground and started our last run of the day. Sandy shouted over to me: \"Partway down there's an alternate trail to the bottom. Near the top of Chair 11. It's very steep at first. But if you're feeling confident when we get there, I'd like to do it with you.\"\n\nI tried not to read too much into her comment. Yes, she'd been flirting with me almost from the time I picked her up, but I never like to be presumptuous about first-time sex with someone I'd just met. \n\nMiracle Mile is the longest run at Snow Summit: moderately challenging, but it allows the average skier to descend at a fast pace without worrying about hazards. The view of the lake and the surrounding mountains is awe inspiring. We had finished smoking the joint after lunch, so I still had a nice, mellow buzz going.\n\nSandy and I skied as close together as we could safely. We both fell silent to the sounds of our skis racing over the snow. Long, languid turns allowed our speed to increase. I don't think I'd ever been so in sync with another woman on the slopes. Sure, I had skied with girlfriends and other female friends before, but that day with Sandy felt different. Almost like a slow, sensuous fuck with her on top. I imagined how nice her strong thighs would feel around my hips.",
        "We slowed down as we approached the top of Chair 11 so we could safely maneuver around the people who had just dismounted from the lift. Sandy called to me: \"Are you ready for a thrill? Stay behind me as we go down. You can follow my path through the moguls.\"\n\n\"I'm right with you. Let's do it.\"\n\nSeconds later I was grabbing nothing but air as we shot over the precipice. Normally I would have freaked out heading into a steep mogul field that fast. And I wasn't even on solid ground at first. I hit the first mogul with a jolt but leaned hard into the turn like Sandy did. She cut each turn sharply, sending rooster tails of snow up in the air. Every move felt natural as I traced her path a few seconds behind.\n\nThere was something about the speed, the steepness, and the aggressive moves needed to shoot around the moguls\u2014not to mention being pushed well outside my comfort zone that day. I felt a weird, fiery tingling deep in my groin. A sensation I hadn't felt since trying to climb those ropes dangling from the ceiling in my high school gym. This wasn't like slow, sensuous sex anymore\u2014more like a rough, doggie fuck just before we both climaxed. \n\nMoments later we shot out of the mogul field into a wide, open bowl and rejoined the main Miracle Mile trail. She let me catch up so we could complete the run in a tight, swift tandem. This time we both finished smoothly, no spills or tangles. Sandy stepped around so she could slide her skis between mine and give me a hug.\n\n\"Well, that was very ... exciting. I'm still humming. All over.\"\n\nAnd so was I. If the steep part had been any longer, I might have creamed my long johns. We were both breathing heavily, like we had just experienced a powerful mutual orgasm. Sandy pressed her waist tightly against me; my erection was aching with arousal. Normally I would have been embarrassed, but I didn't mind her feeling the effect she had on me. Her big boobs flattened against my chest as she looked up and gave me a kiss. It was a little more than friendly.\n\n\"Jim, why don't we kick back in the village? Let the traffic clear out. Even 38 will be crowded now. Maybe shoot some pool.\"\n\n\"Excellent idea. We can get something to eat after we get there.\"\n\nWe made our way over to the car and stowed our gear. It felt good to get the heavy ski boots off my feet. Normally I would have pulled off my bib and changed into my jeans in the car, but I was hesitant to strip down to my long underwear in front of her. After all, I'd only met her that morning. Speaking of awkward matters, I wanted to atone for my collision with her earlier.\n\n\"I'm sorry about my clumsiness this morning. Running into you and knocking you down.\"\n\nShe laughed. \"Oh, no need to apologize. That was silly fun. And kind of sexy, actually. It felt nice to have you on top of me.\"\n\n\"Sandy, you're putting unclean thoughts in my head. Careful.\"\n\n\"Well, I'm glad I can still do that to someone. Thanks for the compliment.\"\n\n* * *\n\nWe got lucky when we walked into a dive bar popular with the locals. A pool table was available, and the crowd wasn't overwhelming. I had the waitress bring over a pitcher of beer and two mugs as we chalked up our cue sticks.\n\n\"8-Ball. A dollar a game,\" Sandy proposed. \"No fun unless there's something on the line.\"\n\nI agreed and watched her win the break and proceed to drop five balls before missing a shot. My game was rusty; she beat me before I could sink a second ball. The second game didn't go much better. Damn, I wondered if she had a pool table at home.\n\n\"Two dollars you owe me. Soon to be three,\" she taunted, lining up her next break shot.\n\nI fared a little better in the third game. I actually won when she accidentally sunk the 8-ball on the same shot that pocketed her final ball. I'd left her with a difficult shot around the ones I still had cluttering the table.\n\n\"Shit! Good defense, Jim. That's one for you.\"\n\nIt wasn't a clean win, but I took it anyway. I kept getting better with each game but couldn't match her skills. Finally I had a series of lucky shots and won one game fair and square. I handed over the money I owed her, and she offered to put it toward some dinner before we hit the road.\n\n* * *\n\nIt was dark and snowing lightly when we stepped outside. Sandy slipped her arm through mine and snuggled against me as we made our way to the car.\n\n\"Jim, you know what I found most impressive about your game?\"\n\n\"No, tell me.\" I unlocked her door. Sandy turned and put her arms around me.\n\n\"You're a good sport. You played like a gentleman. No anger or shame when I beat you. I know guys that would have cursed, flung the cue against the wall, stomped out\u2014and driven off without me.\"\n\nI brushed some snowflakes from her hair. \"I'm not one of those guys. No one likes to lose, but it's only a game. You're the better player\u2014for now.\"\n\nShe smiled as she slid into her seat. Did I make an unconscious reference to a continuing series of billiards matches between us, stretching out into the future?\n\nWe had timed things perfectly. Most of the day skier traffic had cleared out with only a few cars visible on 38 as we headed down. Sandy turned toward me and touched my hand.\n\n\"Jim, I didn't feel very lucky this morning when my truck wouldn't start, but I'm really glad things worked out the way they did. I had a terrific time with you today. I don't think I'm far off by thinking you might feel the same way.\"\n\nI took her hand in mine and squeezed it. We gazed at each other in the soft glow of the dashboard lights. I felt honest emotions flowing between us, even though our friendship was measured in mere hours.\n\n\"You're not far off at all, Sandy. I was about to say the same thing. I feel very fortunate to have met you. I rarely take the back way to Big Bear. It was a last minute choice I made this morning when I got to San Bernardino. Think of all the dozens of things we could have done differently earlier. If any one of them happened, we wouldn't be sitting next to each other now.\"\n\nWe exchanged several meaningful glances. I asked her to pick out another CD. She opened the glove box and quickly pulled out Neil Young's Comes a Time.\"\n\n\"Ooh, this is one of my favorites.\"\n\nWe both knew all the lyrics, so our voices joined together. Her harmonies were almost as good as Nicolette Larson's; the less said about mine, the better. We were mostly quiet after the CD was over, each processing our private thoughts. Soon we approached the chains-off area.\n\n\"Sandy, I'll undo the chains and put them up. That was an impressive hook-up you did this morning. Much quicker than I could have done.\"\n\n\"You just need more mountain driving practice. You should come this way more often.\"\n\nI put the car in park and pulled the brake. \"Would you mind getting behind the wheel while I take care of the outside duties?\"\n\n\"No, I'd be happy to.\"\n\nAt the lower elevation the snow was mostly a drizzle. I crouched down in the slush and reached behind the first tire. The chain crew had gone home for the day. I got flustered trying to undo the chains with my work gloves on; it took forever.\n\nI wondered how I should proceed with the Sandy situation. Ask for her phone number\u2014but maybe end up never calling? Dating her would be madness; the drive is at least ninety minutes, even with no traffic and good weather. Although we had an instant rapport emotionally, we also had very different lives and backgrounds. Or should that even matter? I unfastened the second set of chains and told Sandy to roll forward. I dumped the cold, gritty chains into the trunk.\n\nSo should I begin a relationship with her? Go on the first few requisite dates until she feels comfortable enough to get in bed with me? Even if the sex was great, at what point would I tire of the lengthy commute and decide to pack it in? I was trying to balance the strong sexual attraction I had developed for her with at least a small dose of reality. I wondered if she was weighing the same pros and cons while she sat in my car. She opened her door and started to get out as I closed the trunk.\n\n\"Sandy, you can drive back to the ranger station. If that's OK with you.\"\n\nShe gave me a satisfied smile and got back behind the wheel. We both buckled up, and she pulled back onto the highway. Sandy drove confidently through the drizzle but seemed amused as she looked over at me.\n\n\"You're a very trusting person. Letting me drive your car. Most men wouldn't allow that. Guys expect women to do everything under the sun for them\u2014except touch their precious vehicles.\"\n\n\"I'm not 'most men,' Sandy.\"\n\n\"I know that. That's what makes me feel very comfortable with you.\"\n\nWe pulled into the ranger station parking lot; there was only one other car there. After moving her gear to the Honda, Sandy asked if I could do a big favor for her.\n\n\"Would you mind following me home? It's actually not that far. Only ten minutes or so. I'm still feeling vulnerable after having my truck not start this morning.\" I readily agreed.\n\n\"It's very easy. We're going to turn left on Bryant as soon as we come onto the highway. It curves down to Oak Glen Road. Take a left there, and the ranch is a few miles farther. You'll see the Vista del Oro development entrance. I'm about two miles past that on the left. I'll go slow and keep you in view.\"\n\nIt wasn't long before I saw her signaling a left turn onto a gravel road. I followed her car as it pulled up to a wide wooden gate. It was under a weathered rustic archway that had the name \"Atherton\" spelled out in letters made from small logs. Sandy got out, unlocked the chain, and pushed it open. She began walking back toward my car. I expected her to thank me for seeing her home and say goodnight, maybe lean in the window for a kiss.\n\n\"I'm going to drive through and stop. Follow me in and lock the gate. That's ranch etiquette.\"\n\nSometimes I can be really clueless about women. I didn't pick up on the fact until later that I had just been asked to stay the night.\n\n* * *\n\nI followed her car until she stopped between a low-slung ranch house and a large barn with a traditional gambrel roof. The house was modest but the barn looked like it was out of a movie set: white with dark green trim, well maintained, a winch to hoist hay into the loft, and a cupola up top. We both got out as the light drizzle continued. Sandy beckoned me to follow her to the barn.\n\n\"My great-grandfather built this in 1910. He put every dollar he had into the barn and lived in a very rustic cabin for years. My father razed the cabin and built the house after he came back from The War. I need to check on the horses. You can meet the rest of my resident family.\"\n\nThe barn was dimly lit; the earthy smell reminded me of all the riding I did at summer camp. Three heads poked out of their stalls and nickered.\n\n\"This is Knightfall,\" she said as she stroked the neck of a large dark bay, most likely a gelding. \"He used to be my ex's horse, but I'm the legal owner now.\"\n\nSandy had me come closer so Knightfall could sniff the back of my hand. We crossed the aisle where two other horses were giving me the eye.\n\n\"This is my sister's quarter horse, Firefly.\" Sandy rubbed the mare along the crest of her neck. \"Did you get a ride from Gretchen today? Did you both have fun? That's good.\"\n\nFirefly had a beautiful sorrel coat and a friendly disposition.\n\n\"Go ahead, Jim, she likes to be petted. Stroke her mane like I was doing. She's a sweet girl.\"\n\n\"And this lady over here is mine. Her name is Nugget. She needs to get used to you before she'll let you touch her. Nothing personal. Stay on this side close to me and try not to look her right in the eye.\"\n\nNugget was certainly a handsome animal: a dark gold palomino quarter horse with a lot of spirit.\n\n\"Jim, there's a refrigerator in the tack room with some treats. Get four apple slices for the mares and two carrots for Knightfall. Never too soon to make friends.\"\n\nI opened the small refrigerator, which had lots of veterinary medicines along with the containers of treats. Looked like feeding sugar cubes to horses was pass\u00e9.\n\nSandy petted and calmed each horse as I fed the treats to them. I wondered if I should help with any chores that needed to be done.\n\n\"Do we need to clean out the stalls or anything?\"\n\nSandy laughed. \"No, Gretchen already took care of it. She handles that for me several days a month for reduced boarding. I just checked their water and feed, and they're OK.\n\n\"Besides, I've found if I try to involve a man with mucking out the stalls right from the start, it never produces the long-term results I'm after.\" Sandy put her arms around me for another lingering kiss. \"Let's go inside.\"\n\n* * *\n\nThe drizzle had turned into a full rain. Sandy told me to grab my bag from the car as she retrieved her things from the Honda. We ran to the back door and took off our parkas and footwear in the mud room. I followed her through the kitchen, which still looked like it was from the 1940s except for a few modern appliances.\n\n\"Feel free to get out of your bib if you want,\" Sandy offered, unzipping hers and pulling the straps from her shoulders. I couldn't see a reason not to do the same. She made no effort to slip into a pair of jeans so I stayed in my long johns, too.\n\nWe walked into the living room where a lone reading lamp shone down on the weathered leather of an old oak Morris chair and ottoman. There was a slight chill in the room.\n\n\"Jim, here's a plan. Why don't you build a fire while I make us some mulled wine. There's plenty of firewood, and there's a gas outlet, too. And Presto logs. I'd say do the firewood now, and you can later switch to gas or throw on a Presto log if you get tired of tending the fire. Besides, your hands could be full by then,\" she said with a wink. She asked if mulled wine was OK. \"If not, I could do cocoa instead.\"\n\n\"I love mulled wine. It's perfect weather for it. But won't it lower our inhibitions?\"\n\nSandy let out a burst of laughter. \"Hah-hah! I guess we're going to find out.\" Before she headed to the kitchen she asked me to pick out some music once I got the fire going.\n\nTwo sticks of fatwood and one match later, I had the beginning of a healthy fire. I piled on some thicker logs once the kindling was ablaze. After a few puffs from the bellows, I replaced the screen and stood back. The room's chill was quickly fading. An inviting, spicy aroma from the mulled wine drifted in from the kitchen.\n\nI looked through Sandy's CDs and noticed she had a large selection of Emmylou Harris albums. I pulled one out and added a few similar mellow choices to the CD carousel. I sat down on the sofa and picked up an issue of Western Horseman magazine from the coffee table.\n\nA few minutes later Sandy entered with two steaming mugs. \"Good choice on the music, Jim.\" She set down the tray and yanked off her sweater. \"And an excellent job on the fire. You got things warmed up quickly in here.\"\n\nI didn't want to seem too prim, so I doffed my sweater, too. We both took tiny sips from our mugs, waiting for the aromatic liquid to cool down. I assumed she still had on her sports bra under her long john top and panties under the bottom. Sandy sat down very close to me and began touching my hair.\n\n\"Jim, I really liked the conversation we had after lunch. Sharing our various dating and relationship disasters. You weren't afraid to sound foolish or unlucky in love. And I certainly didn't edit myself either. Trying to top each other's tales of 'dates from hell' and bedroom indignities.\n\n\"I get really turned on when a man allows himself to be open like that. It's uncommon.\"\n\nWe peered at each other over the rims of our mugs. My cock had already sprung to attention.\n\n\"I knew you were different\u2014as soon as we hit the chain control on 38. You didn't expect me to jump out and do it. You were willing to pay or do it yourself. But more importantly, you didn't go all macho on me, insisting that you put on the chains yourself when I offered to. You trusted my abilities without getting all weird about it. That's shows a subtle kind of confidence. It got me hot.\"\n\nDamn, she was gleefully ratcheting up the sexual tension in the room. We continued to sip from our mugs, and she continued to talk\u2014about intercourse.\n\n\"I know what I want from a man in bed, and I'm not afraid to speak up. But ... that doesn't always work out well,\" she said, shaking her head and smiling about those bad memories.\n\n\"Inconsiderate sex is a non-starter for me. I can handle rough sex just fine but not selfish sex. I like being submissive sometimes, but I don't want cruelty. And when I take the lead, I don't want my lover to be afraid of that.\"\n\nMy groin was getting as warm as the spicy wine sliding down my throat. \"Sandy, I think you've got it right. If you want something in bed, you shouldn't be afraid to ask for it. Man or woman. I had the same reaction to your lunchtime confessionals. I found them quite alluring.\"\n\nSandy set down her mug, motioned for me to do the same, and leaned in for a kiss. It started out gently, our tongues softly touching. Stroking each other's hair and cheeks, moans of contentment, both bodies yearning for a more intimate touch. Soft music and the scent of spices filled the room as the rain continued to fall on the roof. We weren't in a hurry; the mantle clock had just chimed nine.\n\nA delicate, spontaneous choreography ensued. Gentle caresses of the face, sighs from well-placed squeezes, gasps when hands brushed across sensitive body parts. Fingers slipped beyond a garment's edge to touch bare skin. Our kissing became more insistent.\n\nBodies shifted and stretched as our hands explored new areas. We wanted each other badly but were enjoying our slow walk down the path\u2014the path where foreplay accelerates, clothes are shed, and each skin to skin contact becomes more daring. We were both about to end a long dry spell of involuntary abstinence. Like thirsty desert travelers arriving at the oasis, we knew not to drink too quickly from the well.\n\nAlmost twenty minutes had passed when Sandy paused our make-out session and smiled.\n\n\"Jim, I've got a challenge for you. Can you still undo a bra with one hand?\"\n\n\"Huh? I thought you'd have on a sports bra.\"\n\n\"No, it's better than a sports bra.\" She sat upright. \"An underwire bra with no underwire. See ...\"\n\nSandy lifted her top, displaying the bountiful breasts I had been dreaming about all day: sumptuous globes swelling up from a well-fitting brassiere, cleavage you could get lost in.\n\n\"It's called a Comfort Revolution bra. It's a miracle for busty women like me. Underwire bras can be really unpleasant, but this Bali bra manages to get support without using a wire. Watch ...\"\n\nShe bobbled her breasts in her hands and shook them side to side. Then she bounced up and down on the sofa cushion. \"See. They're not flopping around everywhere.\"\n\nSandy leaned back and began kissing me again. \"Now where were we? Ah, the bra challenge. I'll give you a hint: bigger boobs get more hooks.\"\n\nMy hand slipped under her top and found the back of her bra. The band was too wide to undo in one motion so I popped each hook individually.\n\n\"Good job,\" Sandy said, sitting up. \"I think you're going to like where this is headed.\"\n\nWhat happened next would have astonished a seasoned Las Vegas illusionist. A hand went up her sleeve, a shoulder shrugged\u2014quickly followed by the same motion on the other side. In a blink of an eye she pulled her bra down from the front of her long john top with a flourish and tossed it aside.\n\nSandy stepped over to the fireplace and placed a Presto log on the fire. She was massaging her breasts through her long underwear as she turned and walked toward me. \"Remember what I said about having your hands full?\"\n\nShe stood in front of me, coaxing her nipples to full attention.",
        "\"Before things take off here, I want to give you a heads-up on something\u2014to relieve your concerns. For later on, when you're inside me. You don't have to worry about getting me pregnant. It's a medical thing ... but that's a story for another time. I just wanted you to know you can come in my pussy without sweating what could happen nine months later. Of course there are lots of other places you can come if you want\u2014on me or in me. We can decide later\u2014just before it happens. OK?\"\n\nWell, that got a couple of issues dealt with up front. I pulled her close and ran my hands up the back of her thighs. Time to take charge. Sandy shivered when I lowered the waistband of her long johns just enough to expose part of her golden bush. I slipped my hands over the top of her bare ass. No panties, as it turns out\u2014one less thing to get in the way.\n\n\"I've been thinking about this all afternoon, Sandy. Touching you. Under your clothing.\" She let out a low moan.\n\n\"Lift up your top a little. I want to see more of you.\"\n\nShe raised her long underwear a few inches, exposing a thin gold chain around her belly and a horseshoe shaped navel piercing. I wondered if she had added any jewelry between her legs.\n\n\"This is nice,\" I said, brushing my fingertips across the chain.\n\nSandy let out a loud groan and resumed teasing her breasts through her top. My hands slipped between her legs and gently massaged her thighs where she was still covered by her long johns. It was all I could do to restrain myself from roughly yanking down her underwear and burying my face in the soft curls on her mound. Apparently Sandy decided it was, however, her turn to take charge. She pushed me back and straddled me. Her hands went to my crotch. Sandy's eyes opened wide when she felt my hardness through my long johns.\n\n\"Mmm, you sure know how to make a gal feel pretty.\" She curved her fingers around my girth and gave it a squeeze. \"I've wanted to touch you like this since we finished our last run. When we had our waists together. I could feel your excitement pressing against me.\"\n\nI pushed my hands up under her top and felt the warmth of her breasts in my palms. The way I had wanted to touch her since she first got in my car. They were much more than the proverbial handful. \n\n\"Oh, Jim. That feels so nice, your hands on me like that. Yes, stroke me all over. I'm sensitive everywhere.\"\n\nThe sounds she made while I played with her tits certainly backed up that claim. I wasn't exactly quiet myself as she manipulated my cock and balls. She was so sexy that I worried about things moving too quickly on my end, even though her touch was still outside my long johns. Time for a change.\n\n\"I'm going to push these down a little bit more so I can touch you,\" I explained. Sandy sat up as I lowered her underwear down far enough to get my hand between her bare thighs. She released my cock and began caressing her breasts up under her top. My fingers teased her bush. I was surprised at how damp she was, even before I put my fingers in her.\n\n\"Wow, you sure know how to make a guy feel handsome,\" I joked, echoing her earlier compliment.\n\n\"Oh, can you feel that? You're making me gush! I haven't been this wet in a decade.\"\n\nHer thick pussy lips were slick with her arousal. I swiped my fingers between them so I could feel the effect I was having on her. They were engorged with the blood of sexual excitement. I teased them slowly, squeezing gently and stretching them outward. She did the same with her nipples. Sandy's eyes were half-closed as she whispered her appreciation to me.\n\n\"Oh, you're so bad! Fingering me and pulling on my pussy lips like that. It's making me hot.\"\n\nI laid my thumb at the top of her clit, pushed down the hood, and gently pressed inward. She began moving her hips in a slow rhythm, controlling the amount of stimulation she was getting from my thumb.\n\n\"Yeah, keep the pressure on my clit, just like that. Mmm, that's perfect. Oh, Jim, you're letting me frig myself with your thumb while you tease my kitty. That's so naughty.\"\n\nSandy's head was lolling back and forth as a sweet sexy smile crossed her face. My arousal kicked up a notch every time a little squeal of pleasure escaped her lips.\n\n\"I'm going to want your cock in me real soon,\" she warned. \"Actually, I want to have a look before you split me open with it. Lift up your butt.\"\n\nShe took a break from our pussy fingering session and slid off the sofa onto her knees. Sandy pulled my long johns down past my thighs and watched my cock spring out. Her hands moved up and grasped my hardness.\n\n\"Hey, I just thought of a way I can pay you back for the ride today.\"\n\nBefore I caught her joke, my shaft disappeared into her mouth, inch by inch, until it was all the way in. Sandy had a randy look in her eyes as my glans tickled the back of her throat without even a hint of gagging. She began a gentle bobbing motion, working her way back up to the tip. An exquisite combination of tongue, lips, and gentle teeth had me groaning like it was my first blowjob. This was a woman who clearly enjoyed demonstrating her oral prowess.\n\n\"You like that, sir? I just wanted to give you a little preview of what I can do.\"\n\nShe had my full attention. A wicked smile appeared as her fingers caressed my cock.\n\n\"I'm capable of devouring you. You know that, don't you?\" she said. \"I could make you ejaculate so hard it would come out my nose. Think about that.\" She carefully lapped up a huge drop of precum that was sliding down the side of my cock. \"But for now, I need to save you for the penetration that I am truly ready for.\"\n\nSandy sat down on the sofa next to me, brought her knees up to her chest, and lay down onto her side. Her long john bottom was halfway down with her bare pussy presented to me.\n\n\"Just do me quick like this. Side-saddle. I think we've both been waiting way too many months for the old in-and-out.\"\n\nI shifted around, looking for a comfortable position to join up with her. Sandy offered to help.\n\n\"Here, let me scoot over and get my butt past the edge of the sofa. You can put a cushion or two on the floor and kneel on that. I think it'll give you a good angle of entry.\"\n\nMy cock continued to ooze precum. Sandy was so wet I could see her labia glistening in the firelight. Time for our first mingling of body fluids: my slick cockhead all over her sexy pussy lips and big clit. The moment we touched she uttered a sharp gasp; I felt a spark of lust shoot up into my groin.\n\nI pulled my glans slowly along her labia, gliding through our combined wetness. Its nerve endings sent out waves of pleasure with each swipe. I began a very deliberate motion, sliding it back and forth across her lips, catching the nub of her clit going both ways. Sandy's body shivered as I teased her with careful strokes. She looked up at me.\n\n\"Oh, Jim! That feels divine. Keep doing that. I'm going to be so wet when you enter me.\"\n\nThe increasing moisture allowed my cockhead to momentarily slip past her lips each time it moved across them\u2014just enough to bury the tip. It was a sensation so different than the feel of my hand when I masturbate that I kept it up much longer than I had intended. She groaned and whimpered with every pass.\n\nI was overwhelmed by the emotional content: first-time sex with Sandy, plus the first sex with any woman for much too long. But we had only met that morning. Should this even be happening? The usual courtship of weeks and months had been compressed down to barely more than twelve hours. Maybe we were both horny enough to fuck a stranger, but this felt like more than that. Much more.\n\nSandy touched my cheek. \"I'm ready for it whenever you are. We could keep doing this indefinitely. It feels so nice and sexy. But I want to be filled up now.\"\n\nI pushed down on my shaft on the next stroke and sank into her, almost to the bottom.\n\n\"Ohhh, Jim. Fuck me good, baby!\"\n\nI pulled back and thrust into her all the way. She grunted as her whole body shook. I followed with several full strokes at a moderate pace, but she writhed and pushed back against me. Nothing was spoken aloud, but her movements signaled that only hard and fast would do. I made sure my stance was solid, grasped her body firmly\u2014and let her have it. She squealed and moaned each time I smacked into her.\n\nIt was intense. Sandy grabbed a throw pillow to keep her breasts from bouncing around too much. It looked like she was using its coarse fabric to stimulate her nipples while I hammered into her like a pile driver. She twisted her upper body around so we could look at each other during our aggressive coitus. The sensation of her warm sheath around my cock was divine. I felt a sweet fever building inside my groin as my balls bounced against the backs of her thighs. Sexual fire burned in her eyes as she tried to tell me something.\n\n\"Jim ... I'm already ... you're making me ... Jim, I'm ... oh, fuck!\"\n\nLess than a minute after I entered her, Sandy's first orgasm surged though her body. She writhed and jerked beneath my relentless pounding. Gasping and moaning, her head thrown back in ecstasy. Seeing her succumb to her first climax amplified the pleasure I felt as I slid in and out of her steamy quim. I had to slow it down to keep my own passion from boiling over.\n\n\"Keep going, I want more,\" she demanded.\n\nI complied, but I still needed to return to a moderate pace so I wouldn't finish too soon. Sandy was having none of that.\n\n\"Faster, Jim. Like you were doing before. I need it fast\u2014and hard.\"\n\nSandy moaned and shoved her pussy back against me, yearning for the harsh thrusting that had gotten her off so quickly the first time.\n\n\"Dammit! Fuck me hard, Jim. Don't tease me like this. I want it now!\"\n\nOn my end, the medium pace I had shifted down to was still pushing me along too fast. I had to fuck her even more slowly. I began sliding my cock in and out at a very leisurely pace. I knew that was going to get some pushback\u2014literally.\n\n\"Jim, fuck me hard! I mean it. Do it!\"\n\nWhat happened next probably surprised us both.\n\nI pulled myself up on the sofa partway and held her wrist down with one hand and grabbed a fistful of her hair. My knee jammed behind her legs, while she still lay on her side, and pushed her body forward until it wedged in the corner of the sofa. I pulled back her hair roughly and hissed into her ear.\n\n\"I'm going to fuck you the way I want to. Understand?\"\n\nI was taking a real risk going in that direction. My god, it was barely minutes into our first sexual intercourse! Yes, she had brought up being submissive and being OK with rough sex sometimes. Was it too soon for that? How could she be sure it wouldn't get rawer than she could handle?\n\nSandy looked up at me with a wild frenzy in her eyes, using her free hand to pinch and pull at her nipples. I took that as a clue she was condoning my approach.\n\nI wasn't that familiar with the \"woman on her side\" position we were using. I'd only done it a few times with other partners, but I knew that extremely deep penetration was possible. I took advantage of how I was situated and began varying the angle of my penis as it entered her, every few strokes, sliding my swollen knob across different parts of her vagina. She shrieked and squirmed each time my cock stimulated a new area inside of her. Her breathing became more frantic as I methodically teased her along to another climax.\n\nI took no mercy on her. I pulled our bodies together as close as I could, released her hand, and reached around the top of her leg. My hand slipped between her thighs until her clit met the tip of my finger. I didn't need to stroke it. Like earlier, when I pressed my thumb up against her bud, her thrashing around was enough to provide a steady stimulus to that most sensitive area. She went nuts, howling with protest.\n\n\"Shit! Jim, what are you doing to me? No, please don't. You're driving me crazy. Please, Jim.\"\n\nI pulled her hair tighter and whispered in her ear as I continued my maddeningly slow assault on her pussy.\n\n\"Does my finger feel unpleasant down there? I think just the opposite. Do you really want me to stop everything? Pull out of you now so you can cool off a bit? Catch your breath?\"\n\nShe answered each question with a whimper and a sideways shake of her head.\n\n\"No, keep fucking me. I'll do as you want. Just don't stop, please don't stop. Oh god, the way you're fingering me. And your cock touching me everywhere, up inside me. I want to explode!\"\n\nHer body started to react the same way it did before her earlier climax. She turned her face to me, looking like she knew I was about to push her off a cliff. But I couldn't resist her consuming sexuality a moment more. I'm usually able to control things pretty well, but my orgasm sneaked up on me fast.\n\n\"Sandy, you're too good. You're going to make me come.\"\n\n\"Do it inside me, Jim. Please? I haven't felt that in so long.\"\n\nShe got her wish. Thick spurts of semen leaped from the end of my cock as I thrust inside her.\n\n\"Oh, fuck, Jim. You're just drenching my pussy with your cum. It's so much, so hot! Mmmh, that's it for me ... oh my god!\"\n\nHer climax was violent. Five or six sharp convulsions along with powerful vaginal contractions. The sounds she made frightened me a little. It was intense: bareback first time sex with ejaculation inside\u2014and a mutual orgasm!\n\nWe were speechless, our breathing rough and desperate as we both gasped for air. I caressed her body and placed gentle kisses on her shoulders and neck. A minute passed before she asked a favor.\n\n\"Jim, can you lie down next to me on the sofa but keep your cock in me, if you can?\" Sandy yanked off her long john bottom and straightened out her legs while I shifted around. \"Now roll over on your back with me lying on top of you.\" She sat up and spun around, still managing to keep my dick inside her pussy, and settled into the cowgirl position with her knees astride my hips.\n\nSandy leaned over and cooed in my ear. \"You don't mind if I'm on top as we wind down, do you? I really got off on being the bottom for that second climax. It felt like you set off a series of firecrackers in my pussy. I've never experienced anything like that before. I won't even think about asking how you did that.\"\n\n\"I don't follow a script, Sandy. It's spontaneous. And a two person effort. You were a magnificent fuck, very inspirational. It's all about feeding off each other's passion.\" She kissed me long and hard, with both hands on my face and her sultry tongue in my mouth.\n\nSandy eventually leaned back and slowly lifted herself up until my cock flopped out, spent and wet. \"That was impressive, Jim. I'm uncoupling a bit reluctantly, but I think we need to pace ourselves after our long abstinence. Save some for later\u2014that's assuming you'd want some later, of course.\"\n\n\"How long do I have to wait?\" I joked.\n\n\"I think I'm done for the evening. Whew!\" She smiled as she put her long john bottom back on. \"At least for now, anyway.\"\n\nThe fire had burned down. Sandy took the tray and mugs back to the kitchen. \"I can heat up the rest of the mulled wine for a nightcap in a minute. But let's take a shower first. We had a lot of physical activity today, both before and after dinner. C'mon, follow me.\"\n\nWe headed down the hall until we entered her bedroom. It didn't look nearly as rustic as the rest of the house\u2014nary a wagon wheel or horseshoe. It was more subtle than I expected with muted colors, indirect lighting, and a step up to a large, welcoming bed.\n\n\"I redid everything in here after the divorce: moved the furniture around, bought a new bed, new linens, built the platform, added the skylight over the bed so I could see the stars. And get the breezes going in the summer. Gretchen's husband is a carpenter. He did most of the work.\"\n\nSandy stepped up to the bed and drew back the covers. \"Take off your long johns. I can put them in the washer with mine while we're in the shower.\"\n\nI must have hesitated. Sandy walked toward me. \"Don't be shy about stripping in front of me. Here, let me go first.\" She whipped off her top, placed her hands on her hips, and cocked her head. Her body was sturdy and athletic. I felt my prick stirring as I gazed at her buxom chest, getting a good look for the first time. She had the pale pink areolas of a fair haired woman with thick nipples I had noticed even when she had her bra on.\n\n\"You have beautiful breasts, Sandy.\"\n\n\"Thanks for being polite, but I know better. Even when I first blossomed in middle school, they were never high and firm.\"\n\n\"I disagree. They're perfect. I love the way your breasts look. Even with their weight, your nipples are still pointing straight ahead. I know that some men prefer small and perky, but this ...\" I stepped closer and hefted a breast in each hand. \"... is what I envision when I daydream about naked women.\" A little sigh escaped her lips as my hands took full measure of her bosom. \"If I had any artistic talent, this is what I'd draw along the side of my class notes during a boring lecture. And if I knew I was coming home to this after work\u2014\"\n\n\"Jim, flattery will get you everywhere.\" She laid her hands on mine, encouraging my caresses. \"For girls like me who matured early\u2014and kept maturing\u2014it was a struggle not to be self-conscious about being so big up top. Lots of stares and sniggering from the boys in school. I made my peace with how I looked eventually, but I'm still never quite sure when I bare myself in front of a man for the first time. But I sense you're sincere about the compliment. Thanks.\"\n\nSandy removed her long john bottom and reminded me to do the same. \"Let's go, Jim. All of it. Pretend this is a nude beach. I'm entitled to a good look, too.\"\n\nI followed her instructions, eventually exposing my member\u2014which was reacting to her natural state, a mere foot away from me. Sandy glanced down and took notice.\n\n\"Hey, this is the first time we've both been completely naked in front of each other,\" she exclaimed. \"I suppose we could have taken our long johns off before we got busy, but it seemed naughtier to just pull our pants down partway and do it.\"\n\n\"Like we were having a quickie at work?\"\n\n\"Yeah, at work. In the stockroom. With the door unlocked. The excitement of being caught.\" She stepped forward and gave me a sexy kiss, running her hands over my shoulders and back.\n\n\"Speaking of the office, you're in good shape for someone who sits at a desk all day. I'm impressed.\"\n\nSandy gathered up our long underwear and headed off to the laundry room. I stood there awkwardly in my birthday suit and waited for her return.\n\nWell, there was one touch of the Wild West in her bedroom: a pistol hanging from the bedpost in a drop-loop leather gun rig. I stepped up on the platform for a closer look. It was an old large-frame Colt Model 1878 six-shooter with a bird's head grip and lanyard ring. But the cartridge loops in the gun belt were empty.\n\nWhen Sandy returned and saw me eyeing the pistol, she came up and slipped her arm around my waist. \"Yes, it's loaded. Five rounds, .44-40, hammer on an empty chamber. It belonged to my great-grandfather, the one who started this ranch.\"\n\n\"Where's the ammo?\"\n\n\"See the small leather pouches clipped to the belt? I made those. To hold speed strips, six rounds in each strip. Quicker way to reload than reaching behind and pulling cartridges off a belt, one by one.\n\n\"Is your finger strong enough to pull that double action trigger?\"\n\nSandy gave me a sharp swat on my bare ass. \"You don't want to find out, pardner,\" she said playfully. \"C'mon, let's get wet.\" \n\nSandy lit several candles in the bathroom and doused the lights before we stepped in the shower. It was nice to feel the hot water after a long day in the snow and cold. Even though we had agreed to hold off on further sexual explorations for the night, neither of us could resist a little touching. The warmth, the wetness, the dim lighting, the close quarters, the slipperiness of the soap. It was a nice tease we both enjoyed, knowing we'd be acting on it in the not too distant future.",
        "After we had toweled each other off, we realized our long underwear still needed to go in the dryer.\n\n\"Jim, there're some oversized t-shirts of mine you can sleep in. That is, if you not freaked out by wearing my clothes.\" She handed me a shirt from a local business: All Seasons Feed & Ranch Supply. \"That's as manly as I've got. Are you going to be OK sleeping bottomless?\" Not a problem, I assured her.\n\nSandy slipped into a robe and set the lights down low. \"I'm going to get the dryer going and warm up the rest of the mulled wine for our nightcap. I know it's still a little early, but I'd like to turn in at a decent hour. We must both be tired after the workout we had today\u2014and tonight. You can get into bed and wait for me. Either side is OK. Your pick.\"\n\nI watched her saunter off. Somehow seeing her big breasts wobble around under the robe got me just as aroused as when we were both naked. I crawled into bed and leaned back against the headboard. My wearing only a t-shirt and no underwear wasn't helping me take my mind off what Sandy and I had been doing to each other for the last hour. I reached over to her nightstand and grabbed the copy of Equine Wellness magazine. If reading about \"Your Horse's Winter Respiratory Health\" wouldn't calm me down then I was in trouble.\n\nSandy returned with the two mugs of mulled wine and set the tray on the nightstand. \"Our long johns are in the dryer. They'll be ready for us when we wake up tomorrow.\" She climbed up on the bed, still wearing her robe\u2014and nothing else.\n\n\"Jim, spread your legs. Let me scoot up close to you.\" I thought she might sit cross-legged in front of me, but she opened her legs wide and draped them over mine and edged closer until our genitals were all but touching. \"Hand me my mug, please.\" She kissed me sweetly before taking a sip. \"You were right: mulled wine does lower one's inhibitions. I'll make a note of that.\"\n\nWe both had a little chuckle but fell silent for a minute. Sandy looked pensive.\n\n\"I broke a lot of rules today,\" she confessed. \"Rules about not bringing a guy home the day you meet him, not taking a shower together the first time, no blow jobs right off the bat. Oh, and waiting until at least the third date to fuck.\"\n\nShe took several sips of wine before continuing. Our unclothed proximity down below was hard to ignore.\n\n\"I was faithful to my husband during our marriage, but he probably can't say the same. I never had a smoking gun, but he sure wasn't poking me the last years we were together. He moved in with his secretary after the divorce. She's probably pregnant by now. I wasted too many good years having to solo. I officially got tired of doing that today. Fuck the rules.\"\n\nI felt honored she had chosen me to break out of her celibacy rut.\n\n\"If you're still here in the morning, that is, if you haven't chewed your arm off, I want you to ride with me tomorrow. After breakfast, if the weather clears up. Are you game?\"\n\nI readily agreed, even though I didn't have the proper boots with me. Seemed like I had passed another milestone in her approval process. After we finished our wine, she hopped out of bed and let her robe fall to the floor. Mmm, nice body.\n\n\"I don't mean to be a spoilsport, but with these boobs I need to wear a sleep bra.\" She took one from her dresser and pulled it over her head. \"It's seamless, like a crop top. See, it can be pulled up easily if you need access to 'the girls.' But I have no problem sleeping bottomless, like you're doing. I'm no prude, if you haven't figured that out already.\"\n\nSandy turned on a night light under the edge of the platform. \"I don't want you to fall if you need to get up during the night. You won't be expecting that first step.\"\n\nShe spread out a colorful Pendleton blanket on the bed and crawled in next to me. \"Jim, can you turn off the lamp?\"\n\nWe both snuggled under the covers in the darkness as a steady rain continued. It resonated on the roof of the house and splattered against the skylight. We turned on our sides and took each other's hands.\n\nSandy's face was close to mine when she spoke. \"This feels so good that I'm afraid to take a breath. I'm so glad you're here. It really feels right. I've missed having a man next to me when I sleep. Actually, you're the first one to share this bed with me.\" She paused for a moment. \"It's been quite a day, hasn't it?\"\n\nI answered her question with a kiss. It became a little more than a goodnight kiss. Looked like we both wanted to let each other know we were just getting started on our shared intimacies. Sandy turned her back to me so we could spoon. She brought my hand around and put it on her sleep bra. Her bare bum wiggled against me until we had maximum contact below the waist. I couldn't keep my cock from noticing. Sandy noticed, too.\n\n\"Mmm, I like that you're already thinking about other things we could do tomorrow besides horseback riding. Good night, Jim. I imagine we'll both have pleasant dreams.\"\n\nOh, I did! And a good night it was.\n\n* * *\n\nI woke up just before dawn with an overwhelming need to fuck Sandy again. After returning from the chilly bathroom and slipping under the covers, I sought her warm body. My morning wood was ready, but what I really wanted was to go down on her. I almost always make sure that happens when I'm with a woman, but the natural flow of things the night before somehow skipped over that intimacy.\n\nShe was sleeping on her side with her back to me. I moved in close and nestled my face in her blonde tresses, inhaling the scent of the Mane 'n Tail shampoo she'd used when we were in the shower together.\n\nI began caressing her hip, using my gentlest touch. My hand drifted down to the backs of her thighs. She stirred slightly as my fingertips grazed along the cleft of her ass and where her legs were pressed together. A little moan escaped her lips.\n\nMoments later Sandy lifted her top leg, moving it slightly so I could have better access to her treasure. It was my turn to groan when my fingers felt the first moisture wetting her curls.\n\n\"Perfect,\" she gasped, reaching behind her knee and pulling her top leg up to her chest as she turned over partway. I wasn't shy about letting my fingertips slip between her labia while I used my wet tongue on her ear and gently nibbled on her lobe.\n\n\"Ooh, this is better than any alarm clock, but I'm going to need you to really wake me up.\"\n\n\"I want to eat you out. For a long time. Would that do it?\"\n\n\"Oh, fuck yeah it would!\" she cried. \"Jim, can I ride your tongue? I promise I won't smother you when I come.\"\n\n\"Sure, I'd love for you to,\" I said, rolling over on my back. \"But I'll need you to lift up that sleep bra before we get going.\"\n\nSandy smiled as she positioned her thighs around my head. She slowly raised her bra until its bountiful contents tumbled out.\n\nI began to stroke her breasts on the sides. She spread herself open down below so I could have full access to her sensitive parts.\n\nWe both moaned when my tongue slipped over her inner folds. After a few swipes I felt a noticeable increase in the moisture coating my lips. I was in heaven.\n\n\"Oh my god, Jim. You don't know how long I've waited to feel this. Mmh! Shit, you're good. How do you know ... oh, yes, YES! Please ... don't stop, don't stop.\"\n\nI thrust my tongue up inside her, swirling it around her opening and teasing her big clit mercilessly. Sandy let loose a chorus of howls, squeals, and groans. My breast fondling became more aggressive, squeezing all over and pinching her nipples. She requested a minor variation.\n\n\"Grab my nipples and pull my breasts up. Hold their weight by my nipples ... EEK! Yes, like that! Oh fuck, don't let go. Keep holding them, keep ...\"\n\nSandy exploded. Thighs trembling, her hands pressing on mine, squashing her breasts tightly against her chest. I was afraid she couldn't honor her promise not to smother me as her orgasm took over her body. I tried to slurp down as much of her nectar as I could while she ground her pussy hard against my mouth. Her lack of inhibitions was intoxicating.\n\nI caressed her torso as she slowly recovered from her climax. Sandy moaned contentedly as she ran her fingers through my hair.\n\n\"Jim, that was incredible, but one's not going to do it for me. Will you get me off again, please?\"\n\n\"Sandy, I'll do it as many times as you want. My tongue's not even tired yet. I love your taste. I'm ready to go anytime you are.\"\n\nSo off we went, Sandy thrusting her quim in my face as I licked and sucked her to a second orgasm. She seemed almost incoherent as she reached for a third, imploring me to touch her in a forbidden place.\n\n\"Jim, can you ... can you touch me ... in back? You don't have to stick it in, just rub me slowly back there.\"\n\nI coated the pad of my thumb with her cum and pressed it against her rosebud. I began to massage that most sensitive spot while I continued to roughly fondle her tits with my other hand. Sandy went crazy, shrieking and tossing her head around. Her wetness dribbled down my cheeks as I lashed my tongue against her clit.\n\nI can't describe how intense it felt for me to be giving her such pleasure. Moments later Sandy erupted a third time, sending rivulets of girl cum down the sides of my neck and filling the room with a guttural moan.\n\nShe lifted her pussy from my face and slowly moved rearward until her wetness slid over my aching shaft. \"Beautiful,\" was all she said as she slipped her tongue in my mouth and tasted her own secretions.\n\nSandy caressed my face while we kissed deeply. Her hand reached between her legs and grasped my cock, stroking it and rubbing my glans against her labia. I was a lot closer to coming than I expected to be.\n\n\"Sandy, that feels so good. It won't take much before you'll have me spewing everywhere.\"\n\n\"Is that so? I guess you really liked sucking my pussy. It sure felt like you were into it ... getting me off with your mouth. I'm going to frig myself with your cockhead until you tell me you're ready to come. I may end up coming again myself. I hope you don't mind.\"\n\nNo, not at all. Sandy continued to tease herself with my cock, even slipping it in her partway several times. She treated herself to one more orgasm before I couldn't hold it in any longer. When Sandy felt the first little warm spurt against her labia, she plunged my cock inside her and grabbed my shoulders as I lost it completely.\n\n\"Oh, Jim. That's so hot. Up in my pussy. So much. Do you like that? Oh, I love feeling you come in me like that.\"\n\nMy ejaculation was so intense I couldn't do much other than shout her name a half-dozen times as I filled her up with my spunk. It came leaking out while I continued to thrust up into her warmth. Eventually I eased off. Sandy let my cock stay in her pussy as she settled down, resting her big boobs against my chest. She put her face up close and stroked my cheek. We were quiet for a long time. She finally spoke.\n\n\"Jim, I have a confession to make.\"\n\n\"Go ahead.\"\n\n\"It's not that easy talking about this, but I'll try. You need to know.\n\n\"I watch a lot of porn online. I'm not apologizing for it. I like it. It turns me on. It's the only outlet for sex I've had recently. If I can't find someone to hop in bed with, then I'll settle for watching other people getting it on.\"\n\n\"Sandy, no need to worry. I imagine I watch as much as you, if not more. You're right, it's a safer and easier way to get off when you don't have at least a decent booty call available.\"\n\nSandy raised her head up, and a big naughty grin spread across her face.\n\n\"Jim, that's a relief! Society has so many rules about what a 'lady' should or shouldn't be doing. If guys watch it all the time, why can't I?\n\n\"My favorite is couples erotica: things that show respectful, mutual sex. But that doesn't mean that it's plain vanilla all the time. I can appreciate certain other activities, a little more out there, outside the mainstream. There're a lot of things I've been wanting to try but didn't have a partner. Or ones that didn't deserve it. Or I was afraid they'd think I was too kinky.\"\n\n\"Sandy, from what I've seen so far, I think we have a very compatible connection in the bedroom\u2014or the living room.\"\n\nShe giggled and gave me a sexy kiss\u2014while she fondled my spent package. \"I'm glad to hear you say that. Now, I'm hungry\u2014for food. I'll make us some breakfast. Afterward we can tack up for that trail ride. The rain has passed so we should have sunny weather. The views can be spectacular right after a rainstorm, particularly in the winter.\"\n\nSandy jumped out of bed and got our long johns from the dryer. When she returned she pulled a pair of men's cowboy boots from the closet and walked over to me as I sat on the edge of the bed.\n\n\"Your Sorels are good for walking around, but you don't want to ride in them. Put these on. I gave them to my ex right before he left, but he barely wore them. What shoe size are you?\"\n\nShe stood in front of me, dangling the boots from her fingers. I must have had a hesitant look on my face.\n\n\"Don't worry. It all legally belongs to me now. He had 60 days to get all his stuff out. He left these boots behind since they were a gift from me. He took his other ones and his clothes and his guns and man toys\u2014the things that mattered to him. If you use them today, you'll have had them on longer than he ever did.\"\n\nI still felt a little weird about wearing the ex-husband's personal things. She dropped the boots at my feet and gave me a mock look of exasperation.\n\n\"Honey, you had your spoon in his ex-wife's pudding last night. And this morning. You shouldn't be concerned about using his boots or tack.\"\n\nWell, she had a good point there. We got dressed and headed for the barn.\n\n\"I'll show you how I do the morning feed. Horses first, then the humans. I pre-measure all the food for the day. It saves a little time.\"\n\nSandy made the rounds to each stall, making sure the horses were healthy and their water wasn't frozen. She showed me how to throw flakes of hay down from the loft and mix up their grain. Each horse need an individualized dose of supplements added to the grain buckets. It was a lot more complicated than I expected, but Sandy seemed to have the routine down pat. The barn cats insisted they be fed as well.\n\n\"Don't worry. I'll muck the stalls later, after the ride,\" she assured me. \"You won't have to get involved.\"\n\nWe stopped by the tack room so she could turn on the heater for our ride later. Four handsome saddles were arrayed along one wall with an assortment of bridles, leads, breastplates, and other tack. Like the barn itself the room looked like it had been in use for a hundred years: worn wood flooring, a large bench with racks of leatherworking tools that had been handed down for generations, and an array of jars, cans, and faded cardboard boxes holding several lifetimes of unknown hardware and spare parts. Pieces of harness leather sides were hanging from a rack, and the bench was strewn with straps and buckles from Sandy's latest project.\n\nSandy pointed to an antique tooled leather saddle with silver conchos. \"I'll let you use this one, my grandfather's. Made by the Visalia Stock Saddle Company back in the '30s. It's the one I use when I ride Knightfall.\"\n\nThe look on her face told me her ex hadn't been granted that privilege. I took her hand and pulled her into a tender embrace, one that lasted longer than you'd expect for the last two animals that hadn't been fed yet.\n\n* * *\n\nThe morning after a first-time fuck can be really awkward sometimes, but it was the opposite with Sandy. She prepared a simple breakfast, and I felt very contented sitting next to her as we ate. She insisted I stay put as she cleared the table and washed the dishes by hand but asked me to add several items to her shopping list on the chalkboard.\n\nI followed her to the back room where her home office was. She unlocked the gun case and removed a Colt 1908 hammerless .32 automatic pistol. It was exactly like the one my father kept in his headboard. Sure, like a fool I'd go into my parents' bedroom when they were gone and take it out and feel its heft and smell the gun oil. But I never showed it to my friends\u2014that's why we're all still alive today.\n\nShe took out a Marlin lever action carbine and a box of .30-30 cartridges and asked me to load it. \"Six in the magazine, but don't cock it. My dad got this back in the '50s when mountain lions were more prevalent out here. I've got a scabbard on my saddle for it.\n\n\"The reality is the big cats like to quietly ambush you, from behind or above. You may never see them coming soon enough to raise your rifle.\"\n\nI motioned toward the pistol. \"My dad had one just like that, but I never got to shoot it.\"\n\n\"This belonged to my father, too.\" She dropped the magazine out and pulled back the slide. \"Here, take a look.\"\n\n\"Oh, this is a .380. My dad's was a .32. This isn't for mountain lions, is it?\"\n\nSandy let out a good laugh. \"Hell, no. A cougar would shrug off all seven shots then saunter over and swat the gun out of my hand with its paw. My dead body would be buried for it to snack on for the next several days. It's for diamondbacks or if coyotes or bobcats are acting strange. All my horses are gunshot trained.\"\n\nI handed the pistol back to her, and she slipped it into a cross-draw holster attached to her belt along with a second magazine.\n\n\"You need to be careful where you shoot now. It's not like when I was growing up out here. Civilization is moving closer every year.\"\n\nWe headed out to the pasture to check the hay and water. Sandy cracked the thin sheen of ice that had formed overnight in the trough, and we headed back to the barn to load some more hay on a cart to take out to the feeder. The rain had stopped while we were asleep. The sun was rising up over the horizon, and the air was crisp and clear.\n\n\"They don't need much extra food in the summer since they have enough to graze on in the pasture, but winter is a different story. I'm going to turn out Firefly, then we can get 'em groomed and tacked up.\"\n\n* * *\n\nAfter she had led her sister's horse out to the pasture, Sandy brought Nugget out of her stall. She demonstrated where to positon the pad on the back of the horse, the motion needed to heft the saddle up and over, and how to cinch it down. Sandy lifted both of Nugget's front feet to pull out any skin wrinkles under the girth. I noticed the bridle didn't have a bit.\n\n\"Yeah, it's a hackamore. Nugget and I know each other well enough that she doesn't need metal in her mouth. Knightfall is a whole other story. He's always going to need a snaffle bit, particularly if a new rider's on his back. I hope you're ready for a spirited mount.\"\n\nI guess I was going to find out soon enough. Sandy led out the gelding while I retrieved his saddle and bridle from the tack room.\n\n\"I'd better cross-tie him before I put the saddle on. He's still wary of you.\"\n\nSandy had to use a mounting block to reach the taller horse. She cinched down the saddle as much as he would let her. \"This Visalia fits Knightfall really well. If you think you can get on without this box, I'll get it out of the way.\"\n\nI told her to leave it. Knightfall was the tallest horse I'd ever considered riding. No need to make a fool of myself first thing. I didn't want to end up hanging upside down with one boot caught in the stirrup. Sandy calmed the horse, and I made it up into the saddle without incident. As we headed out of the barn, I slipped on my ski gloves and tried to get my mind in sync with the huge beast beneath me.\n\n\"It'll take us about a half-hour to make it up to the overlook. I like to go up there for the sunrise or the sunset, but that requires night riding. I wanted to keep it simple today so you and Knightfall can get used to each other. Oh, hold up a sec. I need to fix your saddle.\"",
        "Sandy cinched up the girth one more notch. Knightfall turned his head around to protest but Sandy bumped his nose with her elbow before he could nip her. \"Jim, he's going to challenge you today. Make sure you let him know who's on top.\"\n\nWe kept the horses to a walk until they were warmed up then Sandy led us at a brisk trot toward the foothills. We slowed as the trail began its ascent into the pine forest above her ranch. The ground was muddy, but the horses were sure of foot.\n\nThe trail often narrowed as we passed between huge granite boulders. The sun was still low in the sky so our surroundings were dark and cold. I eyed the stock of the Marlin carbine protruding from the scabbard on Nugget's saddle and nervously looked up over my shoulder at the looming rock formations, wondering if a stealthy cougar was poised to make his move.\n\nWhen we neared the top, the trail became steeper. At the highest point it seemed to end at a wall of granite, but Sandy led us through a narrow slot to a breathtaking overlook. She pointed in the distance to the sprawl of new houses.\n\n\"That's the Vista del Oro development over there. I know they'll get my land eventually. Maybe after I die. I don't have any close family other than some cousins and their kids. It was easier to push back against them when my father was still alive. We were able to foil their most rapacious plans so far.\"\n\n\"Do you run the ranch all by yourself?\"\n\n\"No, I still keep on our old ranch hand part-time, and his wife is my housekeeper.\"\n\nKnightfall insisted on having a snack of scrub grass while we talked.\n\n\"I've got a friend from high school who's made numerous offers for me to come sell Vista del Oro properties for her. It'd be easy. Just taking orders, no hard selling. I could shore up my finances considerably for the future, but I'm not sure if I could look at myself if I did that. After fighting against the development for all those years. I'd feel like a traitor and a whore.\"\n\nDamn, my life was so simple compared to hers. Sandy turned to me and asked a serious question.\n\n\"So, Jim, what do envision our near-term future to be? I imagine you're interested in getting more than a free trail ride.\"\n\nI hesitated a moment, knowing my response would be crucial. I didn't want to blurt out something hurtful without thinking it through first. Sandy turned to look back down on the development.\n\n\"Oh, you'll come back for the sex several more times. I might come into the city here and there. Eventually you'll tire of the long drive. I'll start riding your ass about not being around more often. We'll do more fighting, but the make-up sex will be addictive. Maybe you'll find some other woman who lives closer, or I'll settle for some local up here. Then one of us will make the final phone call.\" Her jaw tightened as she stared into the distance.\n\n\"I thought I was supposed to answer the question.\"\n\n\"You're right. You just saw an ugly, cynical side of me.\" She turned to face me. \"But I'm not going to apologize. That would be a cheat. That's what worries me now, the distance. I'm right on the brink of falling for you hard, only 24 hours later. I've been without for so long it feels like I'm on some drug now.\n\n\"I'm not holding back. I'm not trying to present a perfect person. I'd usually try harder to mask my shortcomings. I guess it says something about having too much respect for you to do that. You should see all sides of me before thinking about the future. But, Jim, the great sex really frightens me.\" Sandy looked back down to the valley.\n\nI started to ramble. \"Sandy, we humans were given a sex drive for procreation, but the pill changed everything. We're both very sexual people. And everything having to do with sex has an emotional cost. Being lonely for long periods of time and settling for masturbation has a cost. Getting mixed up with a 'safe' married person has a cost. Or backsliding sex with exes. Being someone's booty call on the side. Having perfunctory sex in a relationship you should have ended a long time ago. Having sex with a total stranger has a\u2014\"\n\n\"Hey, I'll pretend I didn't hear that.\"\n\n\"Sandy, you're not a stranger. You weren't a stranger by the time we had our first kiss on the sofa. It's the quality of the time not the quantity. Yes, sex can distort one's perspective, particularly at the beginning. If it ever comes to a break-up, I hope that what we got out of it would be much more than the emotional cost of it ending.\"\n\nSandy side-stepped her horse closer to me and took off one glove. \"I'd give you a hug and a kiss right now, but we can save that until we get back. Give me your hand.\"\n\nI removed my glove, and we reached out and entwined our fingers. Impassioned emotions surged between us. Were we both thinking about dismounting and having at it in the great outdoors? But the early morning sun hadn't conquered the sharp chill in the air yet. Even so, the thought of taking Sandy at sunrise on the overlook warmed me down below. Or maybe at sunset. I made a mental entry to my bucket list.\n\nSandy glanced at her watch. \"Jim, wasn't it about this time yesterday that you pulled over to give me a ride?\"\n\n\"I think you're right.\"\n\n\"Boy, I usually scoff at anyone who says things like this, but I've gotta think that my truck didn't start yesterday for a reason. I like the way things turned out. In fact, I'd like to express my thanks when we get back.\" She winked and turned Nugget around. \"I think it's time to go. Follow me.\"\n\nThe ride back down seemed more harrowing than the ascent. The horses' shoes clanged against the hard granite, frequently sending sparks out into the frigid air. Sandy let Nugget find her way down the steep parts. Once we reached the flats, I had to discourage Knightfall from wanting to race back.\n\nWhen I rode at summer camp, I never had to do any chores at the end of the ride. I just walked away and went on to the next activity. I was surprised at the amount of work needed to properly care for the horses after a winter ride, but I was more than willing to help. I wanted to let Sandy know I was there to ease her burden whenever I could, that I wasn't going to act like a guest and let her do all the work.\n\nNugget was still suspicious of me, but Sandy had me stand close by while she dried off her flanks and picked the mud from her hooves. I watched to see how she used different brushes to curry the palomino's coat so I could do the same with Knightfall. Once the horses were turned out, we took another load of hay out to the feeder.\n\nWhen we got back to the barn, Sandy gave me a come hither look and invited me to join her in the tack room. I was eager to see what she had in store for me, but I knew the stalls hadn't been mucked out yet. Yes, she told me twice I needn't get involved in that messy chore, but I wanted to let her know I was serious about spending time with her going forward.\n\n\"That's a great plan, but isn't this a good time to clean the stalls? Now that the horses are turned out?\"\n\n\"Jim, I said I'd take care of it. You don't have to.\"\n\nI walked over to where the wheelbarrow was stored and pulled it out into the aisle. I grabbed the fancy manure fork hanging on the wall and a pair of rubber boots sitting on a nearby shelf. Sandy stared at me while I sat on the bench and changed out of her ex-husband's footwear.\n\nWhat was she thinking? Would she keep saying my help wasn't needed and try to stop me? Or go off in a huff and muck out the stalls herself in stony silence while I watched uncomfortably?\n\n\"The chores will go twice as fast if we both do them. It's just like owning any other pet: goldfish, parakeet, cat, Great Dane,\" I explained to the incredulous horsewoman standing a few feet away.\n\nSandy slowly walked over until she was standing in front of me. She leaned over, putting both hands on my thighs, and slipped her tongue into my mouth. It was the kiss of a woman who was planning lots of things for us to do together besides barn chores. \n\nThe mucking out that followed wasn't that bad\u2014like cleaning out an oversized litter box, except you had to stand in it. Sandy pointed out where in the stalls the horses liked to pee: Knightfall right in the middle and the mares in the back corners. She showed me how to rearrange and salvage the clean bedding, scrub out their water buckets, and check the stalls for hazards. We knocked down the cobwebs and added some new shavings to each stall. While we were getting cleaned up, Sandy turned to me and offered her thanks.\n\n\"Jim, you don't know how much it means to me for you to help with the chores. I know I like to act like I'm a superwoman who doesn't need a man to step in, but I really appreciate it. I'm sure it won't be as enticing after you've done it a few more times, but I'm truly grateful that you want to do things for me. And do things with me, too. I enjoyed our ride today.\"\n\nShe stepped closer and slipped her hands around my waist. \"And to do things to me. Don't forget we have a date in the tack room now.\"\n\nI glanced up at the loft. \"You mean we're not going to literally have a roll in the hay?\"\n\nSandy laughed. \"No, the only reason couples used the hay mow was the lack of privacy in the main house. It's not as romantic as you think it is up there. But after the weather warms up we can discuss it some more. Right now I have something for you before you head home.\"\n\nWe stepped into the tack room, and Sandy locked the door. The oil heater had done a good job of warming up the space, so we shed our coats. Sandy motioned me to follow her over to the workbench. She took the holster off her belt and pulled up a wooden stool.\n\n\"I'm taking charge now. Move your butt up against the bench. Now grab the edge with your hands. Here are the rules. You have to stay in contact with the bench until I say it's OK to move. No thrusting with your pelvis. If you take your hands or butt off the bench, I'll stop what I'm doing. And you won't want that, I promise.\"\n\nSandy had adopted a quiet, stern tone of voice with more than a hint of dominance. She looked up at me and slowly popped open the snaps of her shirt one by one. I watched as she pulled her bra straps off her shoulders with the shirt still on and pushed the cups down until the edges of her pale pink areolas peeked out. Her year-round rancher's tan reached below her throat, down to where a sprinkling of freckles covered her upper chest and voluminous cleavage.\n\n\"Relax, Jim. This isn't going to happen quickly. Just when you want it the most, I'll know when to ease off.\"\n\nSandy carefully unfastened my belt and lowered my zipper. She pushed my underwear and jeans down to my knees and peered at my almost hard cock.\n\n\"Ah, look at this. Already oozing precum. Mmm, so much. I guess that means you're OK with what I'm doing?\"\n\nSandy began to caress my hips and bare ass. There was definitely something sexy about the disheveled way she looked with her blouse and bra undone. Like we couldn't wait long enough to go inside\u2014which was true. Her expression was that of barely contained lust.\n\n\"I know you'd probably like to shoot your big load all over these heavy titties\u2014but not today. You'll have to come back another time for that.\"\n\nShe reached into her loose bra cups and roughly tweaked her nipples, letting out a loud groan.\n\n\"I couldn't finish the blow job last night. That was merely a preview ... foreplay. Right now it's the main event.\"\n\nSandy placed her hands at the top of my thighs and extended her thumbs so she could touch my balls. Sweet waves of pleasure surged through my groin as she rolled them on the pads of her thumbs. How could she know how to touch me like that?\n\nShe let the swollen tip of my cock push past her parted lips as she stared up at me. A thick, involuntary release of precum caused her eyes to open wide.\n\n\"Oh god, that's so sexy,\" she moaned. \"And so sweet!\"\n\nHer tongue swirled slowly around my knob while she gently pulled down on my scrotum. I can usually hold back fairly well during oral\u2014now that I'm not eighteen anymore\u2014but Sandy's technique was going to challenge my endurance in that area.\n\nShe was mostly hands-off at first, with lots of ball licking and sucking. Sandy knew I liked to feel a woman's teeth during a blow job. She was masterful, a true artist.\n\nNext she stroked the base of my penis with both hands while she let the frenulum under my cockhead glide back and forth on her tongue. Somehow her extended little fingers in back were able to tease my balls as they swayed between my thighs. The beginning of the end surged forward unexpectedly as my orgasm built up its momentum. I was seconds from the point of inevitability.\n\n\"Oh fuck, Sandy! You're going to make me come.\"\n\nShe leaned back and grasped the tip of my cock and squeezed hard, two fingers on top and her thumb underneath. Sandy stared at me for about fifteen seconds as the pain caused my orgasm to recede.\n\n\"No, Jim. It's too soon. We've got a long way to go yet.\"\n\nI watched in disbelief as a not so sweet smile crossed her face and her hands went back on my hips. My erection subsided a little, but I knew it would rebound after I ogled her open blouse for more than a few seconds.\n\n\"Remember last night?\" she asked as her fingers traced the sensitive areas on my ass and thighs. \"After you gave me that hard, fast fuck on the sofa? And then I wanted you to keep going after I came, which you did, but you slowed it down when I wanted it rough and quick.\"\n\nHonestly, I thought we would already be fucking on the workbench at that point, but she was following an undisclosed plan instead. Sandy placed the fingers of both hands along my shaft near the base but didn't begin stroking me. She moved her mouth tantalizingly close to my cockhead but let it graze her cheeks instead.\n\n\"Jim, I'll have to admit, it was such delicious torture as your prick explored every square inch of my cunt. From every angle, touching some real special places inside me. But you had to kick it up a notch, didn't you? Reaching around between my legs, pressing your finger almost on my clit, right at the top. Now that was genius. You didn't overdo it, rubbing me raw like some clumsy boy. Just your touch was enough. Where I couldn't help but move around on it. Mmm.\"\n\nSandy started to slowly stroke my cock with her extended fingers as a deviously innocent look covered her face. I let out a huge groan when her lips and tongue sought the tip of my cock and began to stimulate it rhythmically.\n\nIt didn't take much of her oral teasing to bring my climax near the boiling point again. I began moaning as she pushed my shaft up against my stomach and leaned in to lick and suck on my balls. Her hand continued to stroke my length and rub the endless supply of precum into my hypersensitive glans. She reached her other hand between my thighs and pressed her bunched fingertips up behind my balls and massaged my perineum.\n\n\"Sandy ... Sandy ... you've got me right on the brink. Please ... make me come ... please!\"\n\nI struggled mightily to keep from grabbing her head and thrusting my cock aggressively into her mouth. Maybe I could trigger my ejaculation before she backed away and cancelled the blowjob for breaking the rules. It was not to be. She leaned back and clamped down tightly on my cockhead with her fingers and thumb. The backflow of orgasmic frustration shuddered through my entire body. \n\n\"Oh, I got you close again. Sorry, I got carried away. I'm still not ready for you to empty out. I promise I won't leave you hanging. You know I want it as much as you do.\"\n\nHer momentary sympathy was replaced by the potent sight of her digging both breasts out from the confines of her bra and exposing their fullness to me. Her areolas had darkened and her nipples were swollen red with arousal. My flagging erection perked up again to its maximum hardness. Sandy went back to massaging my hips and ass, while she continued her narrative of our fireside coitus the night before.\n\n\"The way you fucked me the second time. Dominating me, pulling my hair, pinning me down. Making me beg you.\" Her voice had become more breathless and forceful. \"How did you know that's exactly how I needed to be fucked? Even though I protested. How could you know my body so well, the first time? Do you know what that does to me? How that messes with my head\u2014and everywhere else?\"\n\nSandy's fingertips touched the sides of my shaft and began a slow, deliberate back and forth motion with my cockhead intermittently brushing against her wet lips.\n\n\"I want to return the favor. Draw it out, push you ever so slowly up to the edge. When your cock and balls are crying out for release, you'll wonder how much longer I'll make you wait.\"\n\nHer tongue snaked out several times to give my glans a thorough coating of saliva. Every cell connected to my genitalia screamed for release, but her devastatingly effective squeeze technique thwarted my climax for a third time.\n\n\"But it'll feel so good when I finally let you come,\" she reassured me. \"I'll make sure you never forget my first blow job to completion.\"\n\nForget? You've got to be kidding! No way was I not going to come back for more. I guess that was the point. It's uncommon to find a woman who knows how to edge a man or who wants to spend the time pleasing him like that.\n\nSandy cradled my scrotum in her hands and began a gentle massaging of my painfully swollen balls as my throbbing penis waved aimlessly in front of her face. She spoke in a mock serious voice as a steady stream of dirty talk inflamed my arousal, almost to the breaking point.\n\n\"You're going to drown me in cum, aren't you, Jim? Give me more than I bargained for? I said you couldn't come on my tits, so it'll have to go somewhere else, and I still have my pants on, so ...\" Sandy opened her mouth and inserted one finger, rubbing it across her tongue. \"Is here OK with you?\"\n\nI was trembling by that point, whimpering and pleading for her to finish me off. My orgasm was like a massive football lineman throwing his weight repeatedly against a door, hearing the jamb splinter and groan, wondering which thrust was going to finally be successful.\n\n\"But maybe you'd feel a little uncomfortable shooting a huge load in the mouth of a woman you've barely known for a day. Might that be a little intimate, too soon for that? Maybe wait until the third date?\"\n\nSandy would punctuate each sentence by giving my cockhead a soft kiss or lick while she continued to massage my balls and stretch my scrotum. I recalled her boast from the night before about devouring me with her oral skills, causing my uncontrollable ejaculation to force semen to leak from her nostrils.\n\nShe surprised me when she shifted her teasing, dominant persona to a meek submissive. Her lips parted, her eyes softened, and her voice took on a quiet, pleading tone.\n\n\"But ... what if she's just a dirty little slut that can't help herself? She needs to have a hot load fill up her mouth right now. You wouldn't feel guilty then, would you? After all, if that's what she wants ... if that's what she's begging you to do to her ...\"\n\nI couldn't believe what I was hearing. She seemed to settle into a lust-driven trance, her diction and physical movements slowing down noticeably. I had been teetering on the brink of an orgasm for so long I felt ready to collapse. Sandy moved one hand up to grasp my shaft lightly and began an extremely slow stroking motion while she continued to caress my balls and talk dirty.\n\n\"Now I may not be able to handle all the cum you're going to shoot in my mouth. Some might spill out onto my breasts. That won't count against the rules if it does.\"\n\nI was descending into the most excruciating erotic delirium I had ever experienced. I looked down as Sandy coaxed profuse precum from the swollen dark red tip of my cock, lapping up each dangling drop between her surprisingly naughty commentaries. I felt like she had a glowing, warm pleasure probe up my ass, pressed against my prostate. It scared me to think of how easily she could actually slide her finger up in me and just let it rest against my gland as I squirmed around, like I had done with the hidden root of her clitoris on the living room sofa.",
        "Sandy continued in her trance-like voice. \"Do you wonder if I'm ever going to let you come? How long will this last? Lucky for you, I'm starting to get thirsty. Ready to take a drink of you. Don't hold back, Jim. I want it all. You might not have much left. You put a huge deposit in my pussy this morning. It felt so good when you shot up inside me, all hot and sticky. Oh, and the way some of it drooled out on your cock! I get hot knowing your cum is still inside me. That's why I wanted to edge you, to build up another big load.\"\n\nShe looked up at me with her soft, pleading eyes. \"I'm ready, baby, I'm so ready. I want you to come in my mouth now. Please, for me?\"\n\nI felt her grasp my scrotum at the top where it hangs down. I knew that would keep my balls from rising up into my body when I came. No woman had ever done that to me before. Sandy flattened her other hand on top of my shaft and kept up her very slow stroking while pushing the tip down against her tongue where she was teasing my frenulum by gently bobbing her head back and forth. I watched the first surge of cum spread across her tongue before the serious contractions of my climax started. I completely lost it at that point.\n\nSandy closed her lips around my cockhead and sucked me delicately while her tongue continued to stimulate my frenulum. I knew we were a long way from the nearest neighbor, so I threw my head back and screamed while my semen emptied into her mouth in seemingly endless volleys. Burning ecstasy spread through my entire body.\n\n\"Oh, Sandy ... please, please ... oh, baby ... oh, shit ... oh, god ... you're sucking me dry! I can't believe what you're ... oh, Sandy!\"\n\nI looked down and saw the raw, sexual excitement in her eyes as she moaned and took in everything I had to give her. My orgasm seemed to last forever. It was a good thing I had the workbench to hold onto when I felt my legs buckling under me. Sandy released my balls but kept my cock between her lips. She used two hands to stroke my shaft, making sure she had my entire ejaculate in her mouth.\n\nSandy opened wide to show me the huge volume of cum she had coaxed out of me. She sucked an errant dribble that her finger had wiped from her chin and looked down at her breasts. They were unsullied\u2014not a drop missed. Sandy smiled and squeezed her nipples before she tilted her head back and swallowed my load. Her clean tongue jutted out to show me what she had accomplished.\n\nI struggled to catch my breath and remain upright after the most profound orgasm I'd ever had in my life. Sandy exhaled deeply and rested her hands on my thighs. I watched her bare breasts heave as she recovered from her exquisitely administered blow job. My wet, half-hard cock dangled in front of her face. We stared at each other intently while a fierce sexual elation consumed us both.\n\nMy head was swimming with a kaleidoscopic montage of every scene from the last 24 hours: seeing her hitchhiking, how quickly we clicked with each other, the ski lessons, the billiards match, driving through her gate, meeting the horses, the fireside fuck, the candlelight shower, the wakeup fuck, the ride to the overlook. I was right: sex can definitely distort one's perceptions. The drive to her ranch now seemed more like nine minutes, not ninety.\n\nSandy reached up and steadied my twitching penis, kissing and cleaning it off with her tongue. She placed it in her mouth and prolonged my pleasure with a series of full-length, gentle, slow sucks as she looked up into my eyes. I was ready to marry her on the spot.\n\nAfter she released my cock from her lips, I extended my hands and lifted her up to stand in front of me. Sandy's head was lowered in a submissive pose. I tilted her chin up with my finger and whispered to her.\n\n\"Kiss me.\"\n\nShe moaned and placed her hands on my shoulders. Her kiss was hesitant as she held back her tongue. Once it became clear I wanted her to give me a taste of what I had just poured in her mouth, she swooned and whimpered as we began a long bout of frenzied French kissing.\n\nI wondered if any other men had done that: kissing after coming in her mouth. Or did they zip up and walk away? Or push her aside and go back to watching TV? Her hand wandered down to caress my balls and softening cock which were still glowing with the warmth of the powerful orgasm she had given me. It was time to repay the favor. I wondered how I could possibly create the same level of sexual intensity for her.\n\nI silently turned her around and pushed her butt against the bench. I took both her hands and placed her fingers around the edge in a clutching position. The rules now applied to her.\n\nI sat down on the stool and ran my hands over the front of her legs. We looked at each other, neither of us knowing what would come next. I loosened her belt and unzipped her jeans, pulling them down to her knees. There was no talking, just the ambient rural noises seeping into the tack room. I spent some time caressing her hips and ass before I lowered her damp panties. She began to shiver.\n\nI buried my nose in her golden muff and inhaled the musky fragrance of our morning sex, the exertion of the trail ride, and her arousal during the lengthy blow job. The scent of her well-used pussy was intoxicating. I leaned in, spread open her labia with my finger and thumb, and gently pressed my lips against her prominent clit. I barely kissed it, not moving at first, then the softest lick.\n\n\"Oh fuck, Jim!\"\n\nI slipped my other hand between her legs so I could stroke her thighs. Sandy started to tremble and moan. I glanced up at her as I barely brushed my fingertips near her opening. I could feel as much moisture clinging to her bush as if she had just stepped from the shower. Sandy writhed and groaned as I used two fingers to slowly tease her lips before I began probing her slit. I put my mouth back on her clit. It was swollen and exposed, so I didn't need to do much more than a subtle slow licking motion.\n\nSandy's arousal went into overdrive. She begged me to do rough thrusting with several fingers. Of course I wasn't going to comply right away. Sandy squirmed with frustration, finally grabbing my wrist to show how I should be finger fucking her. She looked down in horror, realizing she had broken her own rules.\n\nI pulled my hand from her pussy and sat back, glaring at her angrily.\n\n\"I guess you want me to get up and leave now.\"\n\n\"No, no! I'm sorry. Please, I shouldn't have done that. I know the rules. Don't go, Jim. Please?\"\n\nShe pleaded with me strenuously. I had to struggle to keep a straight face while I watched her suffer, her big tits swaying between her open blouse and her jeans around her knees. I finally let her off the hook when I grabbed her hands and slapped them against the edge of the workbench.\n\n\"Oh, thank you, Jim. I'm so sorry. I promise I won't do it again. Really, I won't.\"\n\nI resumed by caressing her hips and thighs some more, running my finger along her belly chain and teasing her navel piercing. Sandy looked down when I slipped the first full finger in her pussy.\n\n\"Oh, fuck yeah! More please.\"\n\n\"I'd be happy to add more, darling. I want to give you the same pleasure that you gave me, but you know the ending is stronger when you have a lengthy build-up. Let's not go too fast.\"\n\n\"But I want it faster.\"\n\n\"Be patient, you'll have a nice climax when I'm done with you. I promise.\"\n\nAs a gesture of good faith, I added a second finger a few minutes later while I continued to drag my tongue across and around her clit in unpredictable ways, occasionally leaning back as to not overdo the oral stimulation.\n\nI knew Sandy wanted faster, but I was going to save that for later, toward the end. I used a steady but hard thrusting at a medium pace. She moaned and came dangerously close to taking her butt off the bench. I had to warn her twice.\n\n\"Please, Jim. One more finger. That should do it. Please?\"\n\nI took pity on her and added a third. She squealed with approval.\n\n\"That's it, baby. Perfect. Nice and hard. You'll do it faster soon, won't you? Please?\"\n\nBefore we could discuss that topic further, I inadvertently grazed my thumb against her clit while I was pushing my fingers up inside her.\"\n\n\"Oh, fuck! Do that again. With your thumb. On my clit. Make me go crazy, baby.\"\n\nGlad to oblige. I clamped my thumb down on the area just above her hood like I did when we were on the sofa. I didn't learn until later that the female clitoris has a lot more to it than just the visible tip. Same thing for the male. You can feel the stiff root of the penis behind a man's balls when he's erect. I let my thumb press and stroke randomly as I pummeled her pussy with my fingers.\n\nI realized I now had a free hand to play with her big boobs that were jiggling and swaying just above my face. I recalled how Sandy asked for some rougher treatment with her breasts while she was sitting on my face earlier that morning. I began grabbing and kneading them forcibly.\n\n\"Yes, YES! More! I like it that way. Hard. Yes, harder!\"\n\nThe next request startled me.\n\n\"Slap them! Go ahead, do it. Slap them with your hand!\"\n\nI'd never been asked to do that before. If anything, one had to be careful not to get too grabby with a woman's boobs. My initial efforts weren't getting the job done.\n\n\"Please, Jim ... harder. It's OK. I need harder.\"\n\nOut of caution, I still fell short of what she wanted.\n\n\"Here!\"\n\nSandy lunged over to her side but still keeping her butt and one hand on the bench. She grabbed a slim length of harness leather and tossed it to me. I was too disoriented to chide her for moving her hand.\n\n\"Double it over and spank my tits. Not too hard. It's the stinging crack of the leather I'm after, not the force of the blow. Don't be afraid to do it.\"\n\nI did as she requested. It took me a few blows to get the right rhythm and snap she was after. I didn't have to swing that hard. The leather did its job perfectly. \n\n\"Oh, yes, Yes, YES! Perfect, honey. Oh, fuck, fuck, fuck! You don't know what this does to me. Hit me all over. Mix it up. My nipples, too. Ahhh! Again, again!\"\n\nMy deliberate, leisurely pace of thrusting my fingers up her pussy kept her teetering on the brink of orgasm for several more minutes. When I sensed she was ready to go over the falls, I eased back on the clit stimulation. I hadn't originally planned to edge her, but the circumstances seemed to call for it. Her breasts were turning a deep shade of pink, but she was lost in the mix of pleasure and pain she had eagerly sought.\n\nSandy spread her legs wider so I could get a better thrust up into her pussy. Her head rolled from side to side as she cursed and told me how turned on she was.\n\n\"Jim, Jim, honey. Keep doing what you're doing. I'm right on the edge. My cunt is burning up. I'm so close. It's sweet torture. I don't think I can last much longer or I'll faint. Take me home, baby. Make mama come. One more minute like this then finish me off. If you speed up your hand, I'll love you forever, baby. Forever.\"\n\nWow, it was getting intense. No more intense, I suppose, than that five-star orgasm she churned out of me. I waited another minute like she requested and began to gradually increase my finger fucking speed. I also resumed the random clit stimulation. Sandy's whole body was shaking as she neared the end. She glanced down at me and asked me to keep looking in her eyes as she came. A wild, frantic look crossed her face as we watched each other closely. The donor and the receiver. I wasn't sure which was which.\n\n\"That's it, Jim. Nice and fast with your fingers. Keep smacking my tits. That keeps a whole other kind of fire burning inside me. Oh, I love the way you're rubbing near my clit but not right on it. Oh god, it's going to feel so good. Here it comes. I'm close, real close. Just a few seconds more. Oh, Jim, you're going to make me come so hard, so hard. Now ...\"\n\nThat was the last coherent word I heard from Sandy. She grunted like a wild beast as each contraction wracked her body. Her wetness streamed over my fingers and down my forearm. Her orgasm was so intense she had trouble keeping her eyes focused on me.\n\nAs her climax went into a long ebb, I laid down the strap, slowed my thrusting, and moved my thumb away from her clit. She moaned softly while a few aftershocks clenched around my fingers.\n\nI stood up slowly with my fingers still in her and softly caressed her burning crimson breasts. She whimpered and nodded her head. \"That feels nice, Jim,\" she whispered. \"I'll let you spread some aloe on them when we're through here. I've never had that done to me before. I know it must have thrown you at first, but that was so sexy. I have no idea how much or often I'm going to need something like that, but I want it to come from you. It felt really special. Thanks for not freaking out on me.\"\n\nI knew I had some feelings to process as well. For the time being I filed it under \"anything that gets her hot is going to get me hot, too.\"\n\nMy kink fire hadn't gone out yet. I don't know what came over me, but I grabbed her hair tightly in back and quickly pulled my hand from her sopping pussy and wiped the girl cum over her face and lips. We both started licking it from my fingers. Sandy got a wild look on her face as she grabbed my hair, too. We pressed our bare genitals together, moaning and rubbing against each other.\n\nWhen she could finally take a breath, she pulled her head back and looked at me with fever in her eyes. \"We're just animals, aren't we? Both standing here with our pants half-down, our sex organs exposed and pressed together, each other's cum on our faces and in our mouths. Maybe we should be the ones living in the barn.\"\n\nOur brute passion gradually gave way to soft caresses and gentle kisses. I was so overwhelmed I didn't know what to say. So I made a little joke.\n\n\"Can I have your phone number?\"\n\nSandy laughed out loud. \"Let me think about it.\"\n\nI laid it on the line. \"Sandy, I want to come back next weekend. You tell me when you want me. Friday night? Saturday?\"\n\n\"I definitely want you here, but I'm not sure how the week's going to play out. I'll have to call you tomorrow. Or by Wednesday at the latest. When I got up yesterday morning, I wasn't expecting to be standing here in the tack room like this, with my clothes half off and cum on my lips. It's going to be a big change in my life. This afternoon I've got lots to do: indoor chores and an appraisal I have to finish the report on by tomorrow. Plus the barn chores. And I need to get my truck fixed.\"\n\nWe both reluctantly pulled up our pants. Sandy took out one of her business cards and wrote her private number on the back. I did the same. She looked at my card.\n\n\"Now I know this is serious\u2014exchanging last names. So you're James Heyward, Senior Systems Analyst. Does that mean I can call on you to fix my computer?\"\n\n\"Anytime I'm here I'll be glad to help. No charge.\" I looked over her card: Sandra Atherton, Certified General Real Estate Appraiser, along with her California license number and the Accredited Rural Appraiser designation. \"If I want to buy an apple orchard up here, I'll know whom to call first.\"\n\n\"And I would discourage you from taking on anything to do with farming or ranching. You saw what I have to deal with just to have a few horses here. I don't have much backup now that both my father and ex aren't around. Just Gretchen and an old part-timer.\"\n\nSandy led me back to her bathroom where she got out a big tube of aloe vera. She handed it to me while she pulled off her bra and leaned back against the wall. I squirted big globs of it down onto her breasts and carefully spread the soothing balm over every inch. Nipples, too. Sandy closed her eyes and moaned softly as the cool gel quieted the fiery aftermath of the leather strap. I could have kept it going for another hour\u2014just to be thorough.\n\nShe pulled me in for a thank-you kiss. \"You'll be smelling the aloe on your hands as you drive home. Thinking about where they've been. All over my big ones.\" She smiled and snapped her blouse together, leaving the bra on the floor. \"I need to ride out to the gate with you so I can unlock it.\" \n\nAs I drove down the gravel road, we remained silent but took each other's hand and smiled. After Sandy pushed open the gate, I stepped out of the car for a final embrace.\n\n\"Jim, you don't have to make any promises or assurances to me. I know you're coming back. I could see it in your eyes in the tack room just now.\"\n\n\"Oh?\"\n\n\"When I finally let you come.\" We both laughed hard at that.\n\n\"Seriously now ... it's what I saw in your eyes when you made me come. The way you got off on giving me pleasure. A man can always take care of himself sexually, but not having a woman to give pleasure to ... for a man that knows how to and wants to ... that's a true emptiness. You need that filled. I can be that person. On the receiving end.\n\n\"And it goes the same way for me. I've yearned for a man I could take care of. In special ways, like I just did for you. I know we have a good fit on that: physically and emotionally.\n\n\"Plus the kink, too. I was nervous about some of the choices I made, but you went right along with me. And you had a few pleasant surprises for me in that department.\"\n\nOur last kiss was gentle and restrained, but the hungry squeeze our hands gave each other between the legs told the true story.\n\nAs I pulled out onto the main road, Sandy was still visible: standing on the gate, watching my car head west, back to the city. She wouldn't know how many times on the way home I wanted to pull over and turn around. I had a very long week ahead of me.\n\n* * *\n\nIf you've read this far, please go ahead and vote. Feel free to favorite or comment as well if you really enjoyed the story -- that's what keeps us authors encouraged to write more stories. Thanks!\n\nAll characters and events are fictional, and any resemblance to actual persons, living or dead, or actual events, is strictly coincidental."
    ],
    "authorname": "KenNicottii",
    "tags": [
        "swallow",
        "spanking",
        "rough sex",
        "cunnilingus",
        "romance",
        "busty",
        "dirty talk",
        "fingering",
        "big tits",
        "fellatio"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/trailing-along"
}