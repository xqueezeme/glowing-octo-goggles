{
    "title": "Spell, Crook and Handle Pt. 07",
    "pages": [
        "All characters are 18 years old. Here it is, number 100, I can't believe I've written that much smut, LOL. I hope you enjoy this one. I have had questions since I finished Iron Rain and spread out to all the other story lines. Is Nick Shaw going to be in every story? Is there one continuous plot? When the hell are you going to finish what you started?! \n\nSo to answer your burning questions here we go. Nick was the first real major character I created and I have a fondness for him and his story. The same is true with most of the major and minor players I have spat out over the last thirteen years. He is kind of the spine that supports my multiverse. Since Jon has done a little tampering here and there not all the stories sync up exactly for a very good reason. I look at each story as a kind of ripple from the main events of Iron Rain. Some are close while others are far different. \n\nI am going to go back after I finish Louis' story and cap off the others like possession and a brief moment. I think 'spell' may go as far as ten parts, but no less than nine I think. Once the others are done I am going to move forward with Evil Bitch and tie all the stories together in an epic climax of the entire thing. After that... I have no clue. So here for your reading pleasure is part seven.\n\n*****\n\nDemogorgan: Wizard Class Hacker\n\nNishi Oku: Japanese Akhkharu [spy/assassin]\n\nSurisa Mee Chang: The Elegant Egotist / Blue Eyed Thai\n\nWizard Class Hacker: Elite programmer specializing in infiltration, data theft and sabotage\n\n[Note: There are perhaps a handful of freelance WCH left outside prison cells or working for a government agency. With the arrival of A.I., countermeasures and security is at an all-time high.] \n\nTime of the Sword Wind:\n\nI made a deal with a devil. I was willing to do whatever it took to protect my family. The entity I had been warned about had ensnared me and threatened those I loved most. It was an insidious thing and I blamed it for the disappearance of Jon Masters. I knew I was a piece on some grand chess board but the manipulations before this had been preparing me for something. But this, this was just a plain old slap in the face. Do what I demand or your loved ones will perish. It was plain and simple. How could I possibly say no? The dark pharaoh smiled when I nodded and agreed to its demands.\n\n\"Good, I knew you'd see things my way,\" it purred. \"Let's get things started.\"\n\nI had gotten Gabrielle pregnant and that had upset the powers that be. I was supposed to impregnate at least one other woman so that it would even things out. I was prepared to leave the cavern when the demon god shook its head. I was confused but not for long. Nyarlathotep produced something gleaming and glittering from a pocket. He snatched my right wrist and slapped the bracelet on me. \n\n\"This will take you where you can spread your seed and balance out what you've thrown into chaos.\"\n\n\"Does Yog-Sothoth know what you are doing,\" I asked and the demon nodded and smiled.\n\n\"We both serve the sultan. Our duties are different but in the end its will shall become manifest.\"\n\nI held up my hand and stared at the device attached to my wrist. The metal gleamed like burnished silver but around the thinnest parts it appeared nearly transparent. It was adorned with sparkling gems of various size, cut and color. My time studying gem cutting I was able to recognize some of the stones but others defied logic and everything I knew of minerology. I heard the dark pharaoh mutter something and the stones blazed to life.\n\nI squeezed my eyes shut against the unrelenting brilliance. When it faded I felt a cool breeze on my face. I opened my eyes and recognized my surroundings instantly. I was standing on the back lawn of the Hyde-White Institute. I had spent almost a year here after my return from the Black Cathedral. I had been having non-stop nightmares and ended up here. It had also been my first encounters with the entity known as Yog-Sothoth. My mind was punishing me for the deaths of my companions and my inability to save them from Yig and his children. The virulence of the nightmares had driven me here. It was a safe place to seek treatment and retain some sense of privacy. It was a kind of celebrity hideaway and I remembered two particular drama queens that had been staying at the same time.\n\n\"I wonder whatever happened to Megan and Milena? They both seemed in a pretty bad way when they were here.\"\n\nMegan's film career had taken a serious nose dive and poor Milena had been struggling with her adult modelling business. As I pondered other people's lives I walked to my favorite part of the institute, the hedge maze. The center of the maze held a secret garden. I walked the shadowed paths of the maze as I remembered the one time my mom had visited me here. I had taken her down these very same paths to show her the garden. The walls were still overgrown but the door remained accessible. I opened the door and peered inside. The checkerboard stonework held the very same arrangement of flowers, how strange. It was as if time had stood still since I had departed. I stepped in and walked towards the center of the garden.\n\nThe white marble of the statue shone bright in the summer sun. I walked around it as I had so many times in the past. It was a variation of the St. George and the Dragon theme. Here stood St. Michael triumphant with long spear in hand pinning Lucifer to the ground. Brothers pitted against each other but few knew the story behind the second war in heaven. It came about because Lucifer had lost faith in his creator. How could god be all knowing and fail to be aware of the presence of the Nameless? It had eaten away at the highest angel until he snapped. That and the fact that some of their own went over to the side of the enemy. It had been the 'First' who had been sealed away within a tome of magic that was at the core of Lucifer's own fall. \n\nI looked at the expression on Lucifer's face and it struck me how placid and yielding it was. I looked up at Michael and was curious, as I always was, with his look of anguish. A gal in Cambodia had once explained to me the role of Master and slave in a sensual relationship. She had said...\n\n'There can be no victory without surrender. The true power in a Master-slave relationship is in the hands of the slave. For without their submission there can be no conqueror.'\n\nThose words and the statue complimented each other perfectly. Lucifer had yielded to his brother so that his sibling could retain his power and status among the Watchers. Was my own decision to submit to Nyarlathotep any different? I wanted only to protect and if it meant accepting another's will, so be it. I heard the creak of the garden's door behind me. When I turned and saw who it was I wanted to scream.\n\n\"Mom, what the hell are you doing here,\" I cried out.\n\n\"I have no idea,\" she said. \"I'm not dreaming am I?\"\n\n\"No, I don't think so,\" I said angry now.\n\n\"Do you know why I am here? Louis, so many secrets, tell me what the hell is going on!\"\n\n\"It is a long story,\" I said. \"I have kept secrets to protect you.\"\n\n\"I know that, but there is a time when keeping things from me does more harm than good.\"\n\nShe was right of course. I took her over to the concrete and wooden bench to sit down so I could tell her everything. I hadn't done this since I had shared with Gabrielle. I stared at my feet just as l had when I was a kid and broken a window or something like that. I took a deep breath and launched into everything that had happened since Lily and I found the extra book in the rare book section. I didn't stop until I reached what had occurred in Bob's basement. I held nothing back, especially the dreams I had shared with her, sis and Mara.\n\n\"So you've been fucking me in my dreams,\" she replied.\n\n\"That's your response to all of that,\" I asked. \"Me fucking you in your dreams...\"\n\n\"Louis, I am your mother, it is bad enough you've been violating your sister but... all three of us?\"\n\n\"I thought of them as just dreams,\" I said. \"I guess I was just lying to myself.\"\n\n\"I should be upset,\" Mom told me. \"I should be angry at the violation.\"\n\n\"You keep saying should be,\" I said watching her closely.\n\n\"Yeah, but damn every time I woke up feeling like I had been hammered to pieces I thought it was your dad at first. But he denied it and he had his bad heart and all. Now I know it really was you. I don't know where you learned to make love to a woman but goddamn Louis you are a fucking beast!\"\n\n\"I have played out this conversation in my head a thousand times and it never included you saying anything like that.\"\n\n\"So why are we here, really?\" She asked and I blushed.\n\n\"Gabrielle is pregnant,\" I said and her face lit up. \"Apparently that child will upset the balance of power. I need to father another child to set things straight.\"\n\n\"So I am here to... oh wow, so you are going to fuck me until I get pregnant is that it?\"\n\n\"Well... it was either that or death to everyone I loved. I had to agree to it...\"\n\n\"Let's get started,\" mom said as she stood up and began undressing.\n\n\"Just like that,\" I asked and she nodded.\n\nShe straddled my lap and began tugging my shirt off. Was she just a little too eager for this? Then Gabrielle's words came back to haunt me. You've been using the dark magic on them for how long. Mom pressed her naked breasts against my chest as she kissed me. This would never be confused with a motherly peck on the cheek. Her tongue was invading my mouth just as her hands worked on freeing my cock. I grabbed her ass cheeks as we kissed. It was like throwing gasoline on a fire. She was moaning and I gasped when her hands wrapped around the shaft of my erection.\n\n\"Yahtzee,\" she cried out as she began stroking me. \"You really are that damn big!\"\n\n\"Yep,\" I said as she spat on the palms of her hands and double stroked me. \"Oh damn you are eager!\"\n\n\"Are you kidding me, I have been dreaming about this moment for years now, thanks to you? Take my panties off, please.\" She said as she lifted her ass off of my lap.\n\n\"Whatever you want,\" I said as I tugged them down her round ass to her knees.\n\nShe sat back down and ground her naked sex against my cock even as she continued stroking me off. I lowered my head to her tits and began licking and biting her nipples. There was my sweet little Latin mother cursing like a sailor. Dreams were one thing but the reality was another matter altogether. She muttered something about being unable to wait any longer. Mom lifted up, aimed my cock towards her soaked slit and dropped down. She impaled herself in a single brutal action. Her cry echoed across the garden and beyond. Her pussy was so wet and warm and tight. She began riding me seconds later.\n\n\"This is no dream,\" she growled. \"Cock... so thick and long... it's all mine!\"\n\nI grit my teeth as she slammed her body down against me as hard as she could. The lewd slapping sounds were nearly drowned out by my mother's cries of pleasure. I looked down and watch my cock disappear inside of her. \n\n\"No pulling out this time kiddo,\" Mom moaned in my ear. \"I want to feel your cock shoot inside of me!\"\n\n\"NNNNNN... so damn close,\" I whimpered. \n\nMom cried out and ground her cunt against me as she climaxed. I got a breather as she clung to me. All she said was praise about my cock, how thick it was, how deep it hit her and how much pleasure it gave her. After a short stint she was moving again. She started off nice and slow but seeing how close I was she rode me hard and fast. My mom's grunts were loud in my ears as she thrust her hips in a kind of rocking motion. My fingers dug into her ass cheeks as I got closer and closer. She bit her lower lip as I swelled up even bigger inside of her. She knew how close I was. \n\n\"Give it to me,\" mom demanded as she fucked me as hard as she could. \"Shoot that sweet load into my pussy!\"\n\nI could feel the heat in my cheeks as I was heartbeats away from blowing my load. I couldn't remain quiet any longer. I cried out as I fired my load into my mother's womb. She sat there and held me close as I gasped for breath. I felt her hands on my head as she ran her fingers through my hair. \n\n\"I love you Louis,\" she whispered in my ear. \"We can do this together. So can you go again?\"\n\n\"Yeah, I think I can,\" I said. \"If you can bend over this here bench...\"\n\n\"Consider it done,\" she purred.\n\nI learned things about her that no son should ever learn about a parent's sexual appetite. Mara had hinted at how sex starved my mother was. It fell far short of the truth. She showed a side of her I never dreamt existed. I would forget she was my mom and see her as a very sensual creature in need of vigorous feedings. It was the setting of the sun and a growing chill in the air that halted our love play. It didn't feel like hours but it must have been. The jewels on the bracelet flared suddenly to life and I closed my eyes until the brilliance faded to nothing. I opened my eyes and I was on my back staring up at the ceiling of the living room in Wind Sword Manor. I sat up and there I was still on the couch. I looked at my right wrist and the bracelet was gone but in its place a series builder's runes forming an unbroken ring. \n\n\"I've been marked,\" I said to myself.\n\n\"Morning sleepy head,\" Carol said as she walked into the room, or was it Colleen?\n\n\"Hey, hope Kat didn't keep you up,\" I said as I stood up.\n\n\"Oh my,\" she said looking down at my morning wood.\n\n\"I am so sorry,\" I said but she just smiled.\n\n\"I'm not,\" she giggled. \"Kat said you were gifted but we didn't believe her. I think she was fibbing, you are bigger than she let on.\"\n\n\"Um... I guess I should get dressed and keep looking for Jon.\"\n\n\"Yeah, but uh feel free to visit,\" she offered. \"Once all this nasty business is behind us.\"\n\n\"How could I possibly say no to that?\"\n\nI got dressed as Colleen or was it Carol looked on. She licked her lips and led me to the dining room. The rest of the girls were there and Kat was flanked by the twins.\n\n\"Louis' mom and aunt are twins,\" Kat was saying as I entered. \"They are identical just like you guys.\"\n\n\"So he likes twins,\" Carol said. \"This is good to know.\"\n\n\"You fibbed,\" Colleen growled as she sat down next to Kat.\n\n\"I did,\" Kat said.\n\n\"He is bigger than you described,\" she continued. \"Are you being greedy or...\"\n\n\"I uh... well... maybe,\" Kat stammered. \"I already had to share him with two other girls...\"\n\n\"We understand,\" the twins said in perfect precision.\n\nI sat alone and the girls eyed me suspiciously. I ate with my eyes downcast and tried to ignore them and failed. Every time I glanced up they were smiling and speaking in whispers. I could hear what they were saying of course and most of it was rather flattering. One of the maids came in and refilled my coffee and then went to the curtains and opened them. The bright morning light struck me and I squinted as a white hot piece of metal sunk into my brain. I placed my arm over my face until my eyes adjusted. My eyes were still watering but at least the migraine like pain had dropped to a bearable level. I wiped the tears from my face and the twins apologized profusely.\n\n\"I sometimes get migraines,\" I said. \"I need to get a pair of sunglasses.\"\n\n\"No need Louis,\" Feng chimed in. \"Let me just adjust... ah there, how is that?\"\n\n\"Oh, that is better,\" I sighed. \"What did you do?\"\n\n\"The eye drops Kat gave you allow me to adjust the amount and wavelengths of light entering your eyes.\"\n\n\"This is just so weird,\" I said. \"I've never had issues with migraines before. Could it be the impact with the wall in Bob's basement?\"\n\n\"Um Louis,\" Feng said silently through the implant. \"It could be the two compounds that Jodi injected into you. Shall I perform a bio scan to see if there are long term effects? Those vials were over a hundred years old. There is no telling how much the contents might have degraded over that time.\"\n\n\"I completely forgot about that,\" I told her. \"Do a complete work up and take your time. I don't want you rushing the results.\"\n\nWhat the hell had she given me? I looked at my hand and turned it over slowly. Professor Griffin had inspired the story of H.G. Well's the invisible man. In the story it had driven the protagonist insane. They had told me I would have died if she hadn't injected me with the contents of those hidden vials. What sort of research had he been working on?\n\n\"Louis, are you okay,\" Kat asked seeing my expression.\n\n\"Yeah, just pondering something,\" I said and smiled. \"I am fine.\"\n\nI finished my third cup of coffee and stood up. I told Jon's family that I would continue looking for him. Feng followed me while Kat stayed behind and played emotional support for Jon's mother and sisters. I went outside and found a quiet place where I could attempt a few spells to try and trace the epicenter of the temporal explosion. This is fucking nuts, why the hell would Jon be messing around with that kind of force? It could all be an accident. That would explain a lot. He had no idea whatever he was doing would have such a huge impact. This of course was all speculation. I would have to locate the source to prove anything. I tailored a few simple spells to try and triangulate ground zero of the event I had felt just the day before. \n\nI cast the spell and once more felt the tug of temporal energy. It was coming from inside the manor house. I followed the pull until it led to an iron bound door. It was locked. I found one of the maid's and she balked at unlocking the door. It was Jon's mother that produced a set of keys and followed me downstairs as the spell directed me onward.\n\n\"So you and Kat have an open relationship,\" she asked out of nowhere.\n\n\"Yeah, she understands,\" I replied as we entered the torture chamber. \"I have commitment issues.\"\n\n\"This is Jon's playroom,\" she purred now.\n\n\"He has interesting tastes, that is for sure,\" I replied as we continued forward.\n\n\"Can I ask a personal question,\" she asked her lips next to my ear and her breasts pressing against my back.\n\n\"I have a feeling you'd ask no matter what I said. But uh sure, ask away.\"\n\n\"Have you ever had sex with an older woman before,\" she asked her arms slipping around my waist from behind.\n\n\"We are looking for your missing son,\" I reminded her. \"Yes I have had older partners. They are both eager and quite gifted lovers. What is down there?\"\n\n\"Oh that is just Charlie's lab,\" she replied pressing her tits harder against my back.\n\n\"Who is Charlie? Has anyone seen him lately?\"\n\n\"He has a place on the property. He should be there now.\"\n\nWe walked into the lab and there on the floor was the source for the temporal explosion. The alien runes that belonged to Iyaden's people were etched on the floor in an intricate circle. They were scorched and burned out from the accident. This was the proof I had been looking for. This was bad and there was no telling if Jon was even alive. The force of the blast could have killed him outright or if he had been displaced as Nyarlathotep had said. He could have been propelled forward or backward to any given millennium. The smell of ozone was strong in the air as well as the tingling of residual tachyons. I had dropped down to one knee to examine the runes.\n\n\"What is that,\" Jon's mother asked.\n\n\"It could be the reason why and how he disappeared,\" I said as I turned my head to look at her. \"Um... you are shaved... I mean why are you flashing me your bald pussy?\"\n\n\"When I get like this I need something to take my mind off how bad things are.\"\n\n\"If I do something I will regret it. Wouldn't you prefer it when I won't hate myself afterward?\"\n\n\"So you do find me attractive,\" she said and I shook my head.\n\n\"You are very attractive Mrs. Masters,\" I said and she flinched.\n\n\"Call me Heather,\" she begged.",
        "I agreed and she lowered her skirt. What the hell was in the water? Jon was missing and the twins and their mother were thinking about sex instead of how to find him. Were they that incapable of dealing with loss? I stopped and stood up. Who was I to judge? I had fucked my own mother to keep her from the mechanizations of a demonic god. \n\n\"I am sorry Heather,\" I told her. \"I know what you're going through. When my sister was kidnaped I lost my mind. Please forgive me.\"\n\n\"I didn't know,\" she said as she pulled me into her arms. \"Is she okay?\"\n\n\"She is recovering from her ordeal. But she should be alright in the long run. Let's go find Charlie and see what was going on down here.\"\n\nShe clung to my arm and directed me up and out of the manors underground. We picked up the rest of Jon's family as well as Kat. Heather pointed the way but never let go of my arm. I had to admire Kat; she let it slide for now. The out building and Charlie's living space were quite a distance from the main house. There was a cobblestone path that we followed and ended near what appeared more like an industrial structure than what should have been living quarters for the help. It should have housed the male and female staff members. Instead was a building that had reinforced steel walls, thick glass brick windows and power lines that looked like they could carry some serious current. \n\nI reached out and knocked on the door. I could hear her heartbeat as she hesitated before opening the door. Her breathing was a little ragged but she opened the door anyway. What the hell? I normally had to consciously enhance my senses but they seemed to be on overdrive since... since the damn injections. The woman was of average height, long dark hair and a very impressive bosom. The translucent top she was wearing gave me quite the view of her hard nipples and dark areoles. I looked up from my checking out her rack to find her smiling.\n\n\"Um... is Charlie here,\" I asked and she nodded.\n\n\"Charlie, you have company put some damn clothes on,\" she called out. \"I'm Becca by the way.\"\n\n\"Louis, I am sure you know the rest,\" I said.\n\n\"Come on in, Charlie doesn't usually get up this early,\" Becca said as she sashayed into the kitchen. \"Coffee, I am going to fix a fresh pot.\"\n\n\"Sure,\" I said and looked at the Masters clan and Kat but they all turned it down. \"I guess it's just me then.\"\n\n\"Excellent, that means more for me,\" she purred. \"Charlie! Get your ass up Kat is here you lazy fuck!\"\n\nBecca couldn't have been older than her late teens, early twenties tops and yet she reminded me of my mom when yelling at my dad. The pang of loss hit a lot harder than I expected. A figure appeared from around the corner and his eyes were half closed and mumbling something unintelligible. \n\n\"Cccc...\" he began and cleared his throat. \"Coffee you old witch... oh hey what are all these... Kat, Heather, Carol, Colleen... who the hell are you?\"\n\n\"His name is Louis,\" Becca purred again. \"He likes my tits.\"\n\n\"Oh he does, does he? Great, they are all natural by the way. She was born with those beauties. So what brings you guys?\"\n\n\"Jon is missing,\" I said and the sound of a coffee cup hitting the floor could be heard. \"Becca, are you alright?\"\n\n\"Yeah, you caught me off guard,\" she replied as she went to get a broom.\n\n\"Missing, hey Tesla ping Umbra for me will ya?\" Charlie said.\n\n\"No response,\" a voice said over hidden speakers. \"I am unable to detect Master Jon or any of his A.I.'s.\"\n\n\"That's damn odd,\" Charlie said scratching his chin. \n\n\"Speaking of odd,\" I said. \"We looked for him in your lab. Who etched that circle on the floor? Was it Jon?\"\n\n\"No,\" Charlie said. \"I did. You think a little floor decoration had something to do with him disappearing?\"\n\n\"Interesting characters,\" I said. \"Feng give me a virtual screen. I wonder if you realize you made a mistake.\"\n\nI drew the proper configuration the runes should have been placed in. Charlie stared at the hologram and his jaw was wide open. Becca poured my cup of coffee and I fixed it with cream and sugar as Charlie walked around the hovering image three times. Becca lifted up her skirt and flashed me her trimmed pussy. She had shaped her pubic hair into a downward facing arrow. I giggled and she just smiled. The next sound was the familiar whine of a gauss pistol charging. I looked over at Charlie and he had it aimed at my head.\n\n\"Who the FUCK, are you,\" he asked his eyes narrowed in a mix or fear and rage.\n\n\"I am the guy sleeping with your boss,\" I said indicating Kat.\n\n\"Put the weapon down Charlie,\" Kat said even as Becca grabbed my ass.\n\n\"Did she just cop a feel,\" Charlie asked and I nodded. \"Fuck man you scared the shit out of me!\"\n\nHe lowered the weapon and I heard the comforting sound of him thumbing the safety. How the hell did Charlie even know about the character's Iyaden's people used? He was looking at me with the same expression. Charlie looked back at my configuration and smiled. He called it fucking brilliant and we became fast friends. There was something odd about Charlie and Becca. Was it his mannerisms or the way he spoke? Becca was a stone cold nympho and I was okay with that. It seemed like all the women on this property were horny as hell and I wondered if Jon was keeping them all happy. If so I was damned impressed.\n\n\"How long has he been missing,\" Charlie asked finally.\n\n\"He disappeared noon yesterday,\" I said. \"There was a surge of tachyons that originated here.\"\n\n\"I fear we are in for a waiting game,\" Charlie said thoughtfully. \"Coffee woman... um please?\"\n\n\"Here you are you art fart,\" Becca said and then caught herself. \"I mean... oh just take it already.\"\n\nI glanced at Becca and she blushed as she sipped her own coffee. There was that weird feeling again. I pushed it to the side since finding Jon was top priority, but it remained on the back burner. Becca appeared to be in her late teens and yet she talked like she was in her sixties or so. She had an amazing body and was flirting for all she was worth and yet she seemed quite attached to Charlie. Maybe they had an open relationship? It was confusing as hell. Charlie was as odd as Becca so I guess they complimented each other just fine.\n\n\"Scan complete,\" Feng silently chimed in.\n\n\"So what have you found Feng,\" I said and Kat looked at me worried.\n\n\"The effects of the injections are ongoing,\" she said. \"I could list the hundred or so subtle changes if you wish or I could simply tell you the major impacts to your health.\"\n\n\"For now let's just cover the important things I need to know.\" I said and found Becca holding my hand.\n\n\"I am going to display to your optical interface unless you wish everyone to know. This was your last scan at the hospital showing your neural activity. This is the scan I just performed. As you can see your activity is thirty percent higher than the high point during your training. The areas of highest impact cover sensory input, cognitive functions and memory. I suspect that if you were to take an I.Q. test you would score drastically higher.\"\n\n\"But that doesn't change does it,\" I asked and she shook her head. \"So it has to be the injection. What else?\"\n\n\"Besides heightened synaptic function it also appears musculature and reflexes have been improved as well. The upper limit won't be known until I can monitor you during training or some form of exertion.\"\n\n\"Alright, that's enough for now.\" I said and thanked her. \"I will be fine it appears. No adverse reactions to what happened at Bob's.\"\n\n\"Thank goodness,\" Kat said smiling.\n\n\"I am happy for you,\" Becca said giving my hand a squeeze.\n\nTalk about a one eighty, Becca went from flirty teen to motherly worry is seconds flat. We still had to find Jon and Charlie needed to explain the runes. I kissed Becca's hand and let go. I looked Charlie in the eye and headed outside. He followed me while the women stayed with Becca. There were two rocking chairs on the side of the house that faced a nearby pond. We sat down and he grilled me and I couldn't help but smile.\n\n\"How do you even know about the Heirorunes,\" he asked.\n\n\"Is that what you call them,\" I asked and he nodded. \"I guess it doesn't matter now. I have a gift for languages, all languages. I encountered them first in a dream and then by a woman whose people created your Heirorunes. I learned the spoken word very quickly and the written over time. It is a very complex written language.\"\n\n\"Tell me about it,\" Charlie said. \"Can I hear it? Will you say something in it?\"\n\n\"Say what,\" I asked.\n\n\"How about I love you Becca,\" he suggested.\n\n\"Um... Sa'lsa'lon ual Becca,\" I said after a moment.\n\nHe smiled and burned those words into his memory. Then his story came spilling out in a series of jumbled narratives that talked about a life lived in shadow and haunted by dreams that he kept in a series of diaries that had his Heirorunes recorded in them. His life covered decades and I sat there staring at him until it finished with his story about a rogue A.I. named Sterling. It had been a woman under the influence of this Sterling that had laced drinks for both Charlie and Becca with some sort of crystalline nanites. These microscopic robots had literally turned back the clock for them both. That explained Becca's behavior as well as Charlie's. \n\nWe spent the rest of the time talking about how to find Jon. If he had somehow been catapulted backward or forward in our timeline it was indeed a waiting game. If backward he could be long dead anywhere on earth. If forward we would have to catch up to him. We were praying for the latter. Charlie got up and went in for another cup of coffee. I leaned back in the chair and enjoyed the view. It was a western view and I imagined how many sunsets they had watched together. I closed my eyes and let my mind drift for a bit. When I had trouble with a problem this would usually, as Gabrielle called it, shake things loose. \n\nNormally I would dismiss the entire concept of time travel out of hand. But I knew that my, I stopped for a long moment when I tried to define my relationship with Yog-Sothoth. Was the demon god my patron, my friend or something else? He had tampered with my biology to remove what it viewed as human contaminants. Friends don't do that sort of thing so I could scratch him off that list. It had been a kind of mentor over the years. Did that make it my patron? I suppose it did. Now the question came to mind, was Nyarlathotep Jon's patron? It sure sounded like it from what little I had heard from the dark pharaoh himself... itself. Sure it could take on a human form but that didn't make it human or even a male or female. The pharaoh said that it and Yog-Sothoth both served the sultan. I had seen the image of the sultan on the apex of the dome of the dreamer. If these two demon gods were so far beyond me as I was above an insect how much more powerful was this sultan compared to them? It staggered the mind.\n\n\"Shhhh...\" a soft feminine voice whispered as a weight settled onto my lap.\n\nHer lips touched mine and I kissed her back. The surprise of the erotic contact stoked my hunger to a white hot flame. I slipped my arms around her waist and her tongue slipped into my mouth and the kiss deepened to a new level. I knew by this time that the woman wasn't Kat. Call it experience, I knew how she kissed and this wasn't her. It could've been Becca or Heather; all I had to do was open my eyes. But that would ruin the moment so I kept them closed. It was the mystery woman that broke the kiss. It was only then that I opened my eyes.\n\n\"Um... who are you,\" I asked to the perfect stranger.\n\n\"It's complicated,\" she said and smiled.\n\n\"What did you just say?\"\n\n\"I said that it is complicated Louis,\" she replied as giggled. \"I must be a fairly good kisser to get you in such a state.\"\n\n\"Can't be helped,\" I said as I pondered which spell to cast.\n\n\"Don't even think about it,\" she said her mood darkening. \"I don't take that sort of thing lightly.\"\n\n\"Gotcha,\" I said and she smiled again.\n\n\"Clever creature,\" she replied as she reached down and unzipped me. \"My, that is an impressive weapon you have there. Let's see how well it works, shall we.\"\n\nShe rose up and impaled herself before I could react. Her pussy was unlike any woman I had ever been with before or since. She was tight, soaked and deliciously warm. I got a good look at her for the very first time. She was beyond the beauty of any mortal woman. She seemed surprised at what she was experiencing.\n\n\"Your first time,\" I asked and she nodded. \"So... what do you think?\"\n\n\"MMMMMMMMMM... I never knew copulation could be so pleasant,\" she purred.\n\n\"What do I call you,\" I asked as she began moving her hips.\n\n\"I would normally respond Goddess, but I suppose sweetie will do for now.\"\n\n\"Most women using the G word are arrogant and narcissistic,\" I said as I grabbed her by the hips. \"But you I firmly believe fall into that category, sweetie.\"\n\nI began lifting her up and thrusting up to meet her as I pulled her down. Sweetie's eyes widened in surprise but only let out a melodious moan as I took charge. The longer we fucked the louder she got and I half expected a rush of female bodies from the inside. That never happened, even when sweetie climaxed and she screamed no one came to investigate. I held her close as she collected herself.\n\n\"So that was an orgasm,\" she moaned softly. \"I like them, give me more...\"\n\nI stood up with her still impaled and placed her back against the wall of the house. Her clothing seemed to evaporate and may never have really existed for all I knew. I thrust slowly at first and then built up speed and force. Sweetie wrapped those long ass legs of hers around me and dug her nails into my back. For a woman that had never had sex before she was learning quickly. Instinct kicked in and the dark magic wrapped around and penetrated her. If she felt it she did nothing to impede it. I dared to take a tiny portion of her life stuff. That, as they say in hindsight, was a bad idea, a really-really bad idea. She knew what I was doing and didn't bother stopping me. It wasn't like I could actually do her any harm. The jolt of power that struck me was like a bolt of lightning hitting a bug. The scream that escaped my lips echoed over the field and raced all the way to the manor house. No one came to my aid. I was still locked in the intimate embrace with this woman.\n\n\"Ah, you are alive,\" she said as she rode my cock. \"I didn't want to waste a perfectly good erection.\"\n\n\"What are you,\" I whispered through dry cracked lips.\n\n\"I told you before. Gaze downwards and see my mark and then you shall know me.\"\n\nWhile the rest of the world was hazy and out of focus, she was crystal clear. Oh gods, it hurt just to move my eyes, there just above her sex was a bright red hourglass. How the hell did I manage to miss that? Oh yeah she was dressed when she first sat on my lap. She was a black widow or maybe she was THE black widow. Was she going to kill me once she was done fucking me? No wait, she said she was a virgin.\n\n\"You were a virgin right,\" I asked and she nodded as she thrust her hips downward on my hard spike of flesh.\n\n\"I was, but now I am your whore Louis,\" she giggled. \"Your cock is the first and only one that will ever pierce my flesh. You should feel honored.\"\n\n\"I am very honored, hell I'd actually enjoy this if every nerve ending wasn't on fire.\"\n\n\"All you had to do was ask,\" she said and the pain was gone. \"Ooh that got you even harder. I like that.\"\n\n\"So you are my divine whore huh,\" I said and shook my head. \"You know, when I was a kid I never even believed in god. I thought people that went to church were idiots and fools. Then I went to the Black Cathedral and encountered Yig and the Dreamer in the Depths and saw the image of the sultan and his court. I have walked around the last few years with a demon god in my fucking head. It decided I was too puny to survive and changed me in ways that it saw fit. I have a deranged angel hunting my ass for killing the First. Nyarlathotep wants me to impregnate women to make up for getting my Inquisitor girlfriend pregnant. Then there's you, some spider goddess from who the fuck knows where and the one thing I don't know is why. Why the fuck, do all of these things keep happening to me! Do I have a goddamn target on my fucking back?! Can you tell me why?\"\n\n\"Because,\" she said as she climaxed. \"It's your dad's fault.\"\n\nI came two more times and the Weaver, as she called herself, got off a whopping six more times. Then as suddenly as she appeared she was gone. But those words of hers burned in my mind. It's your dad's fault. I returned to the rocking chair and sat back down. I looked out over that pond and spewed out a litany of curses. Who or what the fuck was this guy that pissed off gods and demons? I must not have mattered since he never showed his ugly mug from day one. So I was just a one night stand. Great, just fucking great, if I ever meet this fucker I am gonna bust his jaw and then ask why.\n\n\"Louis,\" Kat said snapping me out of my fugue.\n\n\"Oh hey, I guessed you missed all the action,\" I said.\n\n\"What are you talking about,\" she asked confused.\n\n\"All the noise from out here,\" I said and she made another confused face.\n\n\"Louis, there is an open window right above your head,\" she said pointing. \"I came out to check up on you. You've been out here for hours.\"\n\n\"Hours... I don't think she was here that long,\" I said. \"Never fucking mind, I am hungry.\"\n\n\"Let's go back to the manor house and get a bite.\" Kat suggested. \"Does it smell like sex out here?\"\n\nSword of the Time Wind:\n\nWe had all returned to the manor house for lunch. I was offered a spot on the couch with Carol and Colleen to watch the news. I was in the middle and as I munched some stew they took turns sniffing my hair. I put my bowl of stew down and looked at one of the twins and then the other. I paused and pondered how I was going to delicately ask my question.\n\n\"Do I need to take a shower,\" I asked. \"You keep sniffing me.\"\n\n\"Man, he does smell good,\" Heather said from behind the couch.\n\n\"Oh,\" I stammered. \"Sorry I just... Carol why is your head in my lap?\"\n\n\"I'm colleen and I didn't think you'd mind,\" she purred.\n\n\"Kat isn't going to...\" I began as Kat appeared.\n\n\"I'm not going to what,\" she said and then saw where Colleen's head was. \"You're right... move it blondie!\"\n\nColleen made a noise like 'humph' and sat up. I picked up my bowl of stew and glanced at the television screen. They were interrupting the broadcast. What followed made me almost drop my bowl. There was a devastating series of explosions. Both government and private prisons were involved. Thousands of violent offenders had been killed but amazingly there were few if any guards injured in the incident. Apparently, according to what few records remained, alarms and claxons sounded signaling an evacuation. The guards didn't learn until it was too late what was happening. A single hacker was taking credit for the event, Demogorgon. \n\n\"Who the hell is this Demogorgon?\" I asked and Feng chimed in.\n\n\"It will take time to crack the security around the DoD, but I will do what I can.\" She replied.\n\n\"Wait, are you ordering your A.I. to hack the Department of Defense?\" Heather asked.\n\n\"No, she is offering to do it all on her own,\" I replied. \"There is a difference.\"\n\n\"What makes you any different from this Demogorgon character,\" Heather fired back.\n\n\"I want to find and stop them and I didn't just blow up a bunch of maximum security prisons.\"\n\n\"Hey did I miss much,\" Jon asked from the front door.\n\nThe ensuing chaos left me with mixed feelings. The Masters family was reunited and he appeared unharmed. I had a lot of questions but they would have to wait for his homecoming. I gestured to Kat and she nodded. It was time for us to leave and let them have their moment. Jon had other ideas.",
        "\"Where are you two going,\" he asked.\n\n\"You've been missing for an entire day,\" I said. \"Your family has been worried sick. They deserve time to celebrate your safe return.\"\n\n\"It was a blink of an eye for me,\" he said and I could tell that he was lying.\n\n\"Tempus Fugit,\" I said and he smiled.\n\n\"Yes time does fly,\" he agreed. \"Let's order out and celebrate. I want all of my friends here. It is obvious you were here for my family and I appreciate that.\"\n\n\"I guess we have no choice, your Grace,\" Kat replied and I surrendered.\n\nI returned to my spot on the couch and Feng had hijacked the plasma screen for her own purposes. I caught her crossing off people from a very specific list. Everyone involved in Lily's disappearance had been killed. The multiple screens she was using were following a series of news reports about accidents, murders and of course the deaths due to the prison explosions. It appeared that over the last three weeks the deaths had begun culminating in the dramatic event today. I couldn't believe that Feng would go that far and I was right.\n\n\"I can't believe he did this,\" she whispered.\n\n\"Who,\" I sent directly to her via the neural implant.\n\n\"If I tell you, you will be very cross with me.\"\n\n\"If you don't I will shut you down for a week. You can sit in your virtual world that entire time.\"\n\n\"It was Master Nick,\" she said after a long deliberation. \"I asked for his help. He made resources available to me and he was eager to see those responsible for what happened to Lily pay. The death toll needed to be stopped.\"\n\n\"You did good,\" I said. \"So is Nick this Demogorgon character?\"\n\n\"Highly unlikely,\" Feng replied. \"The first occurrence of the mention of the name Demogorgon dates back to the early seventies. He or she was an activist and was anti-big government as well as anti-corporation. They have been fairly active even up to the last decade when they fell off the grid.\"\n\n\"Just about the time that Numenor Tech was founded a coincidence?\"\n\n\"Your logic is impeccable,\" Feng agreed. \"Demogorgon has returned to their old habits or worse case has learned how to hack an A.I.\"\n\nIt was entirely possible that Demogorgon was taking credit for Nick's handiwork. Or Nick was hiding behind the Demogorgon moniker. Feng returned the display to normal and a single news item dominated the airwaves. I had wanted revenge I won't deny it. But this, I never wanted this. I would never go this far. Then I remembered a conversation with Kat about her brother. It was the night I had met her for the very first time. Nick had used a backdoor in Feng's programming to steal copies of my rendering of the dome of the dreamer. He had sent Kat to negotiate my deciphering a certain artifact. I had told her how angry I had been but she explained how Nick thought. He is very linear, she had said, he sees a problem and attacks it head on. He often doesn't think of the consequences. Well, this is a grade A sample of not thinking things through. Unless of course this is just the first salvo in something much bigger, that was a frightening thought. \n\nThat thought was derailed when the staff went to work and began preparing for one hell of a party. Jon was pulling out all the stops and even included raiding the manor house's wine cellar. He was giving orders and delegated the real details to Heather. He somehow managed to disentangle himself from the twins. I was beginning to wonder how deep a brother's love ran. Was incest that common in this generation?\n\n\"Hey Louis, let's talk,\" he said as he stepped outside.\n\nI followed him out and we walked in silence for a few minutes. It appeared Jon was collecting his thoughts so I gave him all the time he required. The path we were taking headed for the cliffs that gave Wind Sword Manor its name. The breeze coming off these cliffs during the winter were said to be brutally cold and unrelenting. But to my surprise there were a series of dark metallic looking stones. If they had once been worked and smooth that had been centuries ago. They seemed to form a kind of stone circle but with much less order to them than Stonehenge. \n\n\"I come here to think when things get overwhelming,\" Jon said in his rich tenor. \"I have spent quite a bit of time here lately. I lied to my family to keep them from worrying about me.\"\n\n\"I know the feeling. I've kept some pretty heavy secrets myself until lately.\" \n\n\"I have a few things to give you before you head off to Japan.\" Jon said.\n\n\"How the hell could you possibly know I was going there? I hadn't really decided until a few hours ago.\"\n\n\"It is what I would do,\" he said and laughed. \"You are so unlike your siblings and yet I can see certain qualities in you that I admire, hell, even respect.\"\n\n\"So, this you is my father,\" I said understanding now. \"You went backwards didn't you? Mara saw the older you with my mom. Wow, that makes a perverted sort of sense. How long...?\"\n\n\"Too long son,\" he said. \"I may not have the right to call you that but you have my blood flowing through your veins. I wasn't there at the beginning of your life but I will do my best now.\"\n\n\"I had a dad. He died three months ago. I could use a friend though.\"\n\n\"That is more than I expected,\" he said as he smiled and offered me his hand. \"Here is your first gift.\"\n\n\"Huh, I don't...\" I began when something dropped out of the sky and crushed me beneath its weight.\n\nThat is how it felt. I imagined Thor throwing Mjolnir from the Bifrost Bridge and clobbering me with it. I could almost see the ground beneath me collapse and form a nice perfectly circular crater. I cried out as I felt every muscle and nerve contract and fire at the very same instant. I was prone when the sensation left me. Jon was there to help me to my feet.\n\n\"I am impressed,\" he said grinning like a Cheshire Cat. \"You truly are my son.\"\n\n\"What... what the hell did you do to me,\" I gasped as I tried to talk.\n\n\"It is a formidable gift for the Last Born. Traditionally the heirs to a legacy are the first born. I always thought that was rot. You are the last child I will sire and so I convey on you a simple yet effective ability. Think of it as instinctual adaptation. I won't go into great detail, I don't want to ruin the surprise, but your touch has grown by leaps and bounds.\"\n\n\"I look forward to finding out, uh damn that smarts,\" I growled. \"Thanks and all but I need to sit down...\"\n\n\"One more thing,\" he said handing me a smooth black rod.\n\n\"What is this,\" I asked as I took it from him.\n\n\"Do you remember the small figurine in my office that day? It was the one that looked like a Martian, the one that came from the meteorite. The rod is made from a highly refined form of that meteoric ore. That said the ore is, how do I explain it, a kind of psycho-sensitive material. Your thoughts alter and shape it with a whim.\"\n\n\"So if I need a Bo Staff... whoa,\" I said as I was now holding a Bo Staff in my hand.\n\n\"Remember that color, texture and size are limited by your imagination.\"\n\nI told him about everything that had happened since I had found the tome. He had just become my latest confidant. I finished and we walked around the strange metallic stones as he processed all that I had told him. His expression was utter confusion and then he smiled.\n\n\"You fucked the Weaver and she let you live,\" he said. \"Nobody fucks that crazy bitch and lives.\"\n\n\"She said she was a virgin,\" I replied feeling lied to.\n\n\"She was a virgin,\" Jon replied. \"That was only her second time taking human form. The first time she only showed herself. I feel, well, cheated, I thought for sure she would bed me.\"\n\n\"Are you jealous,\" I asked and he made a face. \"Oh my god you are! You are jealous that she fucked me. What does that even mean? Is she going to have my kid?\"\n\n\"I have no idea,\" Jon said. \"Her children are well highly advanced as far as species go. They are immortal and free of the confines of a single dimension or universe.\"\n\nI wasn't sure how to respond to that. Yeah, I felt like a bug. This Weaver was way up the evolutionary ladder compared to any human being. The single moment I touched her life force was like leaping into the heart of a sun. I am not sure there is really a comparison to it. Then that damnable thought crept in and cast doubt on it, you survived. I had brushed against a cosmic bug zapper and lived. Somehow beyond the odds I had touched god and lived to tell the tale. To take my mind off that thought I began playing with my new toy. I stepped away from Jon and went through a few weapon katas. I began with the Bo Staff and ended with a sword. I liked it.\n\nI changed his gift into a wrist watch and slipped it on to cover up the builder runes on my right wrist. We returned to the manor and drank ourselves stupid drunk. The girls were dancing and Jon, Charlie and I got to enjoy the entertainment. Jon seemed emotionally overwhelmed as he tried to reenter his life. He had confided in me how long he had been gone. It wasn't a measurement of distance but of time. It took the wind out of my sails. I had been complaining about a mere six or so years while he had been hurtled an unimaginable epoch of time. Could I have survived? Would I have wanted to? His soul must be tempered steel.\n\n\"Oh hey,\" Jon said slurring his speech badly. \"I almost forgot to give you this.\"\n\n\"Uh thanks Jon,\" I said taking the polished black stone. \"What is it?\"\n\n\"A detailed scan of the Weaver's body down to the nanometer,\" he giggled. \"Enjoy.\"\n\n\"How do I access it?\" I asked.\n\n\"Oops sorry,\" he giggled. \"Here let me... Umbra, give him the thingy.\"\n\n\"Do you mean a program to access the crystal?\" Umbra asked manifesting like a genie from a bottle.\n\n\"Yesssh,\" Jon said.\n\n\"As you wish sir,\" Umbra replied and fired off an update to Feng. \"Will there be anything else?\"\n\n\"Nah, I am going upstairs to get busy. See ya in the morning.\"\n\nIf there was any doubt that Jon was intimate with his siblings it was removed when his sisters helped him upstairs and Heather made some sort of excuse and followed them a little while later. He is going to take on all three as drunk as he is. Jon was made of some seriously sturdy stuff. Charlie got up and smiled and headed for the front door. I guess Becca and he were heading off but to my surprise he was accompanied by the two maids. The same ones that had not just help set up the party but were also dancing earlier. That left Kat, Becca and me in the living room. \n\n\"Wanna see a magic trick,\" Becca asked as she dropped down next to me.\n\n\"Ooh I do... I do...\" Kat said sitting on my other side.\n\n\"I will need a volunteer from the audience. How about you young lad,\" Becca asked her hand on my thigh.\n\n\"Sure, what do I need to do?\" I said.\n\n\"Just sit there,\" Becca said as she unzipped me and freed my cock.\n\n\"Ooh...\" Kat purred in my ear. \"I love magic.\"\n\n\"See this fine cock lady and gentleman. I am going to make it disappear.\" Becca moaned. \"Now you see it...\" She said as she deep-throated me in one smooth motion.\n\n\"Now you don't,\" Kat growled.\n\nI moaned as Becca began making love to my erection with her tongue and mouth. Kat stripped down and helped the bent over Becca get naked as well. She was a small package of eager lust. Kat stood up on the couch and placed a foot on either side of me. That put her soaked pussy right in my face. I reached up and cupped her ass cheeks and buried my face between her legs. So while Becca sucked me off I drove my tongue deep inside Kat's pussy. As I tasted her deepest parts I could hear her heart speed up. I could hear the wet sloppy sounds of Becca as she licked, stroked and sucked my dick. I could also hear the soft whispers of Carol and Colleen on the steps behind us.\n\n\"Boy Becca really does know how to suck a cock,\" Carol gasped.\n\n\"She sure does,' Colleen added.\n\n\"Ya think Jon will wear mom down before or after he passes out?\" Carol asked.\n\n\"Dunno, but she does have seniority. I just wish we could get some dick tonight.\" Colleen bemoaned.\n\n\"Are you thinking what I'm thinking?\" Carol purred.\n\n\"He already has two on top of him,\" Colleen said. \"But there is always room for more. I'll take Becca you take Kat.\"\n\n\"MMMMMM, you read my mind,\" Carol agreed.\n\nI could hear as they dropped pieces of clothing on the stairs as they approached. Colleen knelt behind Becca and began eating her out as Carol began tonguing Kat's unprotected ass. I began doing the math and knew of only one possible solution. I needed some privacy to pull it off though. I decided to bring it up once Kat had her first climax; it was only fair after all. I swelled my tongue inside of her and her cry of surprise echoed off the vaulted ceiling. \n\n\"Oh shit Louis,\" Kat howled. \"That tongue of yours is driving me crazy!\"\n\nI could only listen to what was going on around me. But what I did hear was amazing and what I felt Becca doing was even better! If I had to rate oral skills Becca was at the top of my list. I was torn between her and Surisa as the most talented sucker of cocks. As if sensing something Becca's lips wrapped around the base of my dick and remained there. She was doing something and whatever the hell it was felt amazing. I swelled my tongue to a new thickness and that created the cascade. Kat came off around my tongue and a second later I was shooting my load down Becca's throat. The girls withdrew and huddled up for a full minute.\n\n\"If we are to continue we need some privacy,\" I told them. \"Is there a spare room?\"\n\n\"There are plenty of rooms,\" Carol said.\n\n\"I know just the one,\" Colleen added.\n\n\"Ooh yeah, that will be perfect,\" Carol continued in twin speak.\n\nThe five of us went upstairs to what could have passed as the Master bedroom. I closed the door and locked it. I stripped down and positioned the girls evenly around the room. They appeared confused but I placed a finger to my lips. They nodded and waited patiently.\n\n\"You wanna see a magic trick,\" I said and they all nodded. \"Good now I want you all to relax and no matter what you see trust me, okay?\"\n\n\"Okay,\" they agreed.\n\n\"Here... we... go...\" I said as I invoked the spell.\n\nThe fog appeared on the ceiling and the floor. The girls looked up and down and then squealed in delight when the whip-like appendages appeared and gripped their wrists and ankles. I lifted them up off the floor and held them spread legged for my viewing pleasure. Normally I would wait to tie my senses into the spell but I was eager tonight. As the phallic tentacles appeared I was already intimately tied to them. I used them to caress and tease the girls at first. But that isn't what they wanted so we moved on. We all gasped as the tentacles slid inside the girls. \n\nWe began with a simple penetration but the girls were eager for more. I called on more tentacles and each girl was being pleasured by three of them. One between their legs, another between their tits and the last between their lips, the level of pleasure reached a new height quickly. The dark magic rose up and divided evenly between all of them. I could feed from them without harming any of the girls. The twins had a decidedly cute habit of climaxing at the exact same moment. The longer I fucked them the faster the girls synced up. Soon all of them were reaching climax simultaneously. \n\n\"Shall we stop or raise the stakes,\" I asked and withdrew the tentacles from between their lips.\n\n\"Raise it up... More... Give it to me...\" They cried out in answer.\n\n\"Okay here we go,\" I told them as four more tentacles dropped from the foggy ceiling.\n\n\"Wait, where is that going,\" Becca asked just as the slick and slender tendril slid inside her ass. \"Oh god... I've never... NNNNNNNN Booyah!\"\n\n\"I think she likes it,\" the twins giggled in one voice.\n\nI gestured and returned the tentacles to their mouths and the erotic orchestra really began. I was juggling pleasuring them all and driving them over and over again to one climax after the other. I fired off my loads between lips, into tight pussies and even tighter asses. They were filled and covered in cum before our time was over. When the begging began I cancelled the spell and sent them into a dream filled sleep. They would all remember that we had been intimate but the details would be foggy. I couldn't afford them to know the truth. Gabrielle held that singular honor. No wait, I had told mom everything. There were two women who knew everything.\n\nWhile the four of them cuddled in the massive king sized bed I was buzzing with sexual energy. I showered and dressed in clothes provided in the chest of drawers. I decided to do some snooping and wandered around the manor. There were plenty of bedrooms, each done in a particular theme, as well as bathrooms that matched the bedrooms. It sounded like Jon and Heather were still going at it. I let them be and found the one locked door on the second floor. Feng informed me that it was heavily secured and required a DNA scan to open. I found the hidden panel and pressed my hand to it. I never really expected anything other than a negative buzz. To my utter shock there was a solid click and the door opened. \n\nI went up the stairs and found the top floor unlike anything I would have ever expected. The green house was enclosed behind walls of glass. I could see the fading light of sunset streaming in from the roof. I found a second security panel but this one was out in the open. I place my hand upon it and once more the door slid open. It was like a tropical jungle inside. The air was thick with moisture and I thought I was entering a cloud forest. I didn't recognize any of the flowers but at least a few of them looked like orchids. \n\nI headed for the center of the garden and the round window in the ceiling above it. There, in the floor, was a metallic dome about six feet in diameter. It was lined with LED lights and was the centerpiece of his garden. I squatted down to examine the dome. I reached out to touch it and some sort of mechanism activated. The dome lifted up and the LED lights flickered to life. I watched in fascination as the dome hovered six feet in the air. It appeared that there was a hot tub of some sorts beneath. I recognized the mineral smell coming from the water instantly. It was the same as that of the water from the Black Cathedral. But there was no monolith or obelisk feeding the pool. \n\nAs I knelt there a metallic ring rose up and took up a position three feet in the air. It too was lit with those LED lights. I decided to see what exactly this pool was. I stripped down and ducked under the lower ring and stood inside the rings and on top of the water. Something kept my feet from making contact with the pool. The lights changed color from white to green. I watched in fascination as the water rose up creating a column inside the metal rings. It crept up slowly but showed no signs of stopping. I knew that I could shift my lungs and breathe it in easily enough. I did this as the water rose above my head. The rings rose and I felt my feet leave the floor. I was floating in the pillar and felt the familiar tingling sensation of the regeneration taking effect. \n\nI closed my eyes and let the water work its magic upon me. I drifted and felt the dream take hold. It was a sinuous sensation as the tendrils of dark magic enfolded me. I was hovering in the center of a star field. Entire galaxies and clusters of trillions of stars moved and swirled around me. The colors unknown to humanity filled my vision. I knew I was seeing the entire band ranging from x-rays, gamma and full visual light spectrum. What the hell had inspired this?\n\n\"I did,\" a sensuous voice whispered in my ear from behind me.\n\n\"Weaver,\" I said feeling a pinch of fear enter me. \"I never thought I'd ever see you again.\"\n\n\"I have something to admit to you,\" she moaned as her breasts pressed against my naked back. \"I miss your touch. You have infected me.\"",
        "\"I don't know what to say,\" I replied as her arms went around my waist and pulled me to her.\n\n\"A perfect response to the situation,\" she moaned. \"I want you to become my lover.\"\n\n\"What exactly would that entail,\" I asked feeling the fear rising.\n\n\"Sssh... I am not going to hurt you,\" she whispered. \"You have nothing to fear from me.\"\n\n\"The dark magic,\" I gasped and her kiss on my neck confirmed it. \"I have tasted your soul.\"\n\n\"As I have tasted yours,\" she moaned. \"I will teach you dark spells in exchange for your lust. I am incapable of love but I can feel physical needs.\"\n\nI turned around and kissed her. The psychic explosion of her lust blazed in my mind and nearly consumed me utterly. She was all-consuming and unlike any other being I had ever experienced. Despite the setting and the partner I was madly in lust with her. She was beauty and power incarnate and I had dared to for the briefest of moments drank of her essence. I should have been burned to ash but here I was dreaming about her. Was this just a dream? I broke the kiss and looked into her eyes. I was searching for the truth in this moment. Was this just some fantasy I had fashioned? I didn't know and for the moment I didn't care. I cast away my doubts and just let it all unfold. \n\nI was jarred awake by a voice from outside the column of water. I opened my eyes and there was a smiling Jon looking on. He waved and I waved back. He made a gesture and I felt my body drifting down until my feet touched the bottom. The process reversed itself and I altered my lungs back to normal as the water retreated. I began to apologize when he shook his head.\n\n\"It is okay, how do you feel?\" He asked.\n\n\"Refreshed,\" I replied. \"I was dreaming when you arrived.\"\n\n\"You are a fucking monster,\" Jon said laughing. \"I looked in on the girls and all four of them are wrecked completely and utterly. I am a fan and so are the twins. They want you to stay but I know you have business elsewhere. I want you to understand something. This is your home. I want you to have a key to the manor and an open invitation. We are family and I want you and yours to feel at home here.\"\n\n\"Thanks Jon,\" I said feeling the intensity of his words. \"I will tell them and accept on their behalf.\"\n\n\"Excellent,\" Jon said. \"Now let me show you how this baby works.\"\n\nJon showed how the tank functioned and explained how he had managed to replicate the minerals contained in the obelisks. Sure it had taken centuries to perfect but it was well worth it. Jon shared any and all data I asked him about. He was eagerly generous and I felt he wanted to make up for not being in my life earlier. I returned in kind and told him about my skills and abilities.\n\n\"Wait, you can shape shift,\" Jon asked.\n\n\"Yeah, I've been mastering it for years now,\" I said.\n\n\"I bet that is handy,\" he said.\n\n\"Gabrielle likes it,\" I admitted.\n\n\"I have to ask since you brought it up,\" Jon said smiling now. \"What part does she like so much?\"\n\n\"Oh hell, I put my foot in it,\" I said. \"It is easier just to show you.\"\n\nI took on Gabrielle's favorite form, the curvy albino. Jon's eyes lit up as I stood there naked in front of him. I sat down on the grass and we continued our talk. He kept getting distracted so I shifted back. He asked me what it was like fucking as a woman. I told him technically I hadn't. I had only been with Gabrielle in a female form. He understood but I could see that look in his eye.\n\n\"Aren't you curious about actually doing it as a girl,\" Jon asked.\n\n\"I have used toys and the like but I am hard wired as a guy,\" I said. \"I am just not comfortable going much further.\"\n\n\"I get that,\" he said. \"I'm not sure I could do certain things either. So when are you leaving for Japan?\"\n\n\"A couple of days at the most, Kat is heading back stateside the day after tomorrow. So I will probably leave the same day.\"\n\n\"Can I ask a favor?\" Jon asked and I nodded. \"Becca would like to go with you, but I am afraid she is too shy to ask.\"\n\n\"Wait, I thought her and Charlie were an item.\"\n\n\"They were an item,\" Jon said emphasizing the word were. \"The rejuvenation has changed the entire relationship dynamic. I think some time away would be good for them both.\"\n\n\"They might miss each other so bad it will heal the breach, or prove that things are really done.\" I said.\n\n\"Exactly, do you mind?\" Jon asked smiling.\n\n\"Well, if I have to, sure I'll take her.\" I replied grinning like an idiot.\n\n\"She does suck a mean cock though,\" Jon said.\n\n\"I know right.\"\n\nWe spent the next hour or so sharing stories about the women we had been with. My stomach rumbled and that ended the conversation. We headed downstairs for an early morning snack. I rummaged through the fridge and threw together an impromptu meal. I had cooked for my family on any number of occasions. The scent of the cooking bacon was my downfall. Soon I had five hungry women to feed as well. I set out the food I had cooked and returned to the fridge and grabbed more supplies. Becca grabbed an apron and joined me at the stove. While she fried eggs I started a pot of coffee. I kept glancing over at her bare ass since the apron was all that she was wearing. The two of us fed the others and then ate last. In turn the twins did the dishes and cleaned up. \n\n\"I need a traveling companion,\" I said leaning in close to Becca. \"Ever been to Japan?\"\n\n\"Jon's been running his mouth again,\" she whispered back. \"I'd love to, under one condition.\"\n\n\"I am sure we can come to some sort of agreement,\" I said and she leaned closer still.\n\n\"I want to get to know that fine cock of yours better,\" she whispered in my ear.\n\n\"Agreed, I will cover your travelling expenses,\" I told her.\n\nAll was well until the scent of cooking reached the queen of the kitchen and she arrived in a flurry of movement and curses. Jon intervened and told her we only wanted to allow her to sleep in. To make amends the cook took a complete inventory and Jon and I went to the store to restock her supplies. We laughed the entire time to the store and back. \n\nWind of the Time Sword:\n\nKat left later that very same day. She departed with a kiss and a promise. I spent a lot of the day watching the ever growing story about the explosions of the prisons back in the states. There were no survivors at any of the facilities. Engineers, Cyber Security Experts and a dozen other types of specialists were looking into how each facility had been destroyed. They did agree on one thing, each site had been attacked in ways unique to bring them down. It would be months if not years before a concise report on all the sites could be compiled. The other prisons were being assessed for weaknesses and a flood of requests to review thousands of cases for non-violent offenders. \n\nThe remaining concern was the lawsuits being filed by the privately owned prisons against the government asking for compensation for the attacks. The initial reaction by the government in the form of their spokesperson was simply this. It is highly likely that said lawsuits will be thrown out and the private organizations will have to absorb the loss as a cost of doing business. In other words, screw you we aren't paying you for your lack of security. Jon plopped down at one point and he watched the screen quite intently. He seemed shaken to be honest. \n\n\"I went shopping at Old Man Corvinus,\" I said trying to take his mind off of the news. \"He said you bought a Victorian Era case.\"\n\n\"Yeah,\" he said looking at me. \"I think I still have it on my dresser. I can't remember exactly.\"\n\n\"I bought one too and it ended up saving my life,\" I told him.\n\n\"You are talking about Professor Griffin's medical kit. The one the Inquisitor used on you.\"\n\n\"Yeah, I think it's odd that we both bought similar things.\" I told him.\n\n\"Let's go upstairs and I'll show you what I got.\"\n\nWe went to the room he was using as a bedroom. I stared at the bed and then at him. There was only a frame with some strange looking machinery located inside the frame. But there was no mattress, box springs or hell even pillows were absent. \n\n\"Give it a try,\" he said.\n\n\"Give what a try,\" I asked.\n\n\"It's a bed, it works on repulsor technology. The array on the bottom detects movement, weight and position. Go for it.\"\n\n\"Here goes nothing,\" I said as I tried sitting on the edge of the frame.\n\nThe bed picked up the movement and there I was sitting on empty air. I rolled backward and a moment later I was hovering in midair supported by the bed's repulsor technology. \n\n\"Oh man this is so cool,\" I said.\n\n\"I know, you got to check out the sonic shower,\" he said excited again.\n\n\"Seriously, you have a fucking sonic shower,\" I said and rolled off the bed and poked my head into the bathroom. \"It looks normal enough.\"\n\n\"Don't be a pussy, give it a try,\" he said.\n\n\"Fine... I guess it couldn't hurt,\" I said and stripped down.\n\nI climbed into the glass walled shower. The translucent glass gleamed with an odd oily pattern to its internal surface. I wonder if that was some sort of sound absorption material. The entire thing was automatic as I stood under the multiple shower heads. There was a slight buzzing in my ears but the tingling sensation of the shower was unmistakable. It was like a combination of massage and shower. I wanted one real bad. The more stuff I saw the more spoiled I became.\n\n\"I told you,\" Jon said from the bedroom. \"The girls actually fight over using it. I suspect they like the way it makes their nipples feel.\"\n\n\"I bet it does... oh you are just evil, okay hold on,\" I said as I shifted to my female dark elf form. \"Oh yeah that feels amazing. It's like a freaking all over vibrator. A woman must have designed this.\"\n\n\"That is a new voice,\" he said.\n\n\"New body, new voice,\" I told him.\n\nI reluctantly left the shower and showed him the dark elf and his eyes went wide in surprise. I see how women felt like a piece of meat. I almost found myself saying, my eyes are up here. I decided to get it over with and show him the other ten female forms I had created. His smile just kept getting bigger and bigger. I went back to the bathroom and retrieved my clothes. I reverted back and he seemed disappointed. He held up the leather case he had gotten from Convinus'. \n\n\"I remembered something,\" he said as I opened the case. \"Someone bought this for me and even left a picture of me and the day I would be by to collect it. I never did learn who picked it out.\"\n\n\"Weird, a cigarette holder, a cigarette case and a monocle,\" I said looking at each item. \n\n\"The monocle is pretty high tech actually. I never looked at the other two to see what they did. I got distracted.\"\n\nI picked up the monocle and put it up to my eye. I shrugged until he told me to push the buttons on the dark metal frame. The top button activated some sort of built in scanner. When I looked at Jon it displayed his name, body temperature, and the extensive modifications that had been done to him by the A.I. named Sterling. It worked on the bed and any other machine it was aimed at. The second button changed the spectrum of light it viewed. There were twenty or so individual options. It reminded something out of a Predator movie. There was also a lever on the top of the monocle that acted as a focus or zoom depending on what you were looking at.\n\nI returned it to the case and picked up the bejeweled lady's cigarette holder. It was an elegantly wrought and examined it carefully. I laughed and picked up the monocle again. I switched it on and looked at the holder. It indicated a micro power converter, a hidden slide and an activation switch. Jon chuckled and told me to give it a try. I pointed the holder at the wall and pushed down on the jewel that acted as the on button. I flinched when the piercing noise filled my ears. I grimaced but nothing happened.\n\n\"Did you hear that?\" I asked but Jon shook his head. \"Let's try something else.\"\n\nI aimed the business end of the holder at a water bottle on the end table. When I pressed the button the water in the bottle began to swirl counter clockwise. I raised the holder until it was trained on the cap of the bottle and it began to unscrew. I let go of the button and it stopped. Jon was clapping his hands together and pointed at the case. I returned the cigarette holder to the case and picked up the silver cigarette case. I used the monocle again and once more it showed a power source. It wasn't until I actually opened the case that the monocle went crazy. There were a myriad of colored icons pointed out by the monocle. I looked for the activation switch but no matter what I pushed nothing happened.\n\n\"I don't get it,\" I said looking over at Jon. \"There is a ton of icons but none of them appear to be an on switch. What the hell are you?\"\n\n\"I am a data collection and retrieval system,\" responded a gender neutral voice.\n\n\"Whoa,\" Jon said as surprised as I was. \"Ask it to display an entry.\"\n\n\"Display last entry item,\" I said and an image appeared in the monocle.\n\nIt looked like a crowded pub and the clothing was either from a steam punk convention or the late nineteenth century. I handed Jon the monocle and he smiled. He told me it was a popular pub that burned down eighty years ago. I handed him the cigarette case and he viewed over a hundred images before he stopped. \n\n\"That brings back some pleasant memories,\" Jon said and placed both items back in the leather case and closed it. \"I can't wait to peruse the entire data base. There could be some very interesting historical images in there. Nice trick with the monocle there. I'm not sure I would have thought of that.\"\n\n\"Glad to be of help,\" I said. \"Well, with Kat gone I think I am going to pack and get going. I will swing back this way before I return to the states. I have to check in on Lily and see how she's doing.\"\n\n\"I understand,\" he said. \"Don't be a stranger.\"\n\nI fired off an email to Lily. I didn't want to call and maybe wake her up. She needed all the rest she could get. I told her to call when she got it if she felt up to it. My biggest concern was her health and told her so in the email. I was about to call for a cab when Feng showed up driving what appeared to be a late model burgundy Bentley. I got in the front seat next to her. She took me to the bed and breakfast and I collected my things. The widow was disappointed that I had paid her so much money and yet spent so little time in her home. I promised we would have tea when I made my return visit. I told her I had discovered I had family in London and that was all she needed to hear. She glanced out the window at the Bentley and cried out.\n\n\"Is that yours,\" she asked her voice reaching a shrill.\n\n\"No, it is a loaner from my uh... family,\" I responded. \"They let me borrow it.\"\n\n\"Who is your family,\" she asked raising an eyebrow.\n\n\"Um... well... the Duke of Exeter,\" I said and winced.\n\nI stuck my fingers in my ears when she screeched. I watched the color drain from her face and then a rush of scarlet filled her cheeks. She wasn't clutching her chest so I assumed she wasn't having a heart attack. While I attempted to calm her down Feng saved the day. She went upstairs, packed my clothes and brought down the luggage. She was grinning as she went out and placed the bags in the trunk of the Bentley. She took her place behind the wheel and retracted the roof. It was a convertible, sweet! I kissed the widow's hand and that was enough to silence her and I left her there flustered. We needed to find a nice country road and take in the countryside. I guess the city would just have to do. Maybe it was my apprehension that was taking over. I was still nervous as hell about returning to Japan. \n\n\"Fuck it, let's head for the airport,\" I said and Feng smiled.\n\n\"Shall we pick up Becca beforehand?\" She asked.\n\n\"Shit, okay, let's get her and then off to the airport,\" I said. \"How the hell did I forget her?\"\n\n\"You vitals are slightly elevated. I suspect you are focused on the past and not the future.\"\n\nI quietly sat next to her as we took the long way back to the manor house. We reached Wind Sword and Becca was outside waiting. I glanced over at Feng and she grinned. I got out, once we parked, and placed her luggage in the trunk. I opened the door and she sat in front with Feng. I plopped down in the back as we headed for the airport. Becca plugged in her mp3 player and fired up some classic songs. Before I realized it we were all singing to an amazing selection of Beatles, Metallica, The Doors and many others. Her listening range was as least as extensive as my own. We reached the private air strip and actually sat in the car waiting for Bohemian Rhapsody to finish before we got out. I carried the luggage to the jet while Feng made arrangements for the Bentley to be returned to the manor house.\n\nWhile our luggage was loaded on the plane the eager young Londoner drove off with the radio blaring. I allowed Becca to board first and took Feng's holographic sphere and held onto it until I could charge it. I got onboard and sat next to Becca. I was a little surprised that we weren't alone on the flight. The blonde in the back was cute, drunk and belligerent. Well, two out of three ain't bad, I thought to myself. The jet was sealed and after a short wait we took off. I found an outlet and placed Feng's sphere next to it. She could recharge as long as it was close enough to a power source. Becca and I opened a bottle of champagne and that seemed to piss off the already loud mouthed blonde.\n\n\"Too fucking stingy to share,\" she called out from the rear of the jet.\n\n\"Nope, you are too obnoxious to acknowledge,\" Becca fired back. \"Why don't you sleep it off?\"\n\n\"Bitch, you didn't just say that,\" the blonde growled as she staggered to her feet.\n\n\"Magic time,\" I muttered as I stood to confront her.\n\n\"What are you going to do you pussy whipped...\"\n\n\"Silence,\" I whispered as I brought the spell to bear. \"Now listen to the lady and sleep it off.\"\n\nThe blonde's eyes rolled up and she fell backward into her seat. She was snoring before too long. I moved to her and made her comfortable and put her seat belt on. I shook my head and returned to my seat. Becca handed me my drink and we toasted blissful silence. Becca asked me to teach her that trick and I told her I would think about it. We made small talk and I offered my lap for her head. Smiling she adjusted her position and was soon looking up at me. We closed our eyes since we had many hours until we reached Tokyo. I stroked her hair and she was asleep in no time. It took me a little longer to drift off.\n\nIf I dreamt I don't remember. When I opened my eyes Becca was still asleep. I shifted a little that's when I saw the dark red stone floating in my champagne glass. The weird part is that there was no alcohol in the glass. I picked it up and looked at the impossible gem as it floated, glittered and simply defied the laws of gravity. I reached in and took ahold of the stone between thumb and forefinger. It was cold to the touch and I looked at it with great curiosity. I held it up against one of the overhead lights and saw the distinct flaw at the heart of the gem, a black hourglass. Then suddenly she was sitting across from me.\n\n\"Hello Louis,\" the Weaver purred. \"Is she your new plaything?\"\n\n\"Traveling companion,\" I corrected.\n\n\"I keep my promises,\" she replied.\n\n\"I don't understand,\" I said looking at the ruby in my grasp. \"What is this?\"\n\n\"You could call it a kind of arcane tome.\"\n\n\"But we never... or did we?\" I asked and she smiled. \"Did you wipe my memories?\"\n\n\"It seems to be a habit with you. I decided I would do the same. If you stop that practice I will return your memories to you, fair enough?\"\n\n\"Fine, I will stop making them forget,\" I promised.\n\n\"Excellent,\" she said. \"Now be a good boy and wake up.\"\n\nMy eyes snapped open and I knew something was wrong, but I just didn't know what it was at that moment. Becca was still asleep and the ruby hadn't mystically appeared in my glass, pity. I noticed the annoying blonde wasn't snoring any longer. I carefully got up without waking Becca. I looked at the back of the jet and cursed. The blonde was awake and her eyes showed no sign of being drunk. In fact there was a disturbingly keen intellect blazing there instead. I glanced into the astral hoping I wouldn't see what I expected.",
        "\"Aw fuck,\" I cursed again seeing the blazing angelic form inhabiting the girl. \"Really, a fucking jet and this is where you want to fight?\"\n\n\"There will be no fight, only a massacre.\" She replied as she stood up and the seat belt snapped.\n\n\"I drove you out of that other poor girl. I will do it again.\"\n\n\"You took me by surprise. I have made preparations this time.\" It said as it drew closer.\n\n\"So have I,\" I lied as I removed the watch from my wrist.\n\n\"Are you planning on seeing how long it takes you to die?\" The angel taunted.\n\n\"Less talk more action wind bag,\" I said trying to rattle the Watcher.\n\nShe rushed forward and I dropped my arm willing the watch to take on the form of a shield. I brought that shield between me and the possessed girl. Her fist struck the dark material and there was a brilliant flash of light. I was still standing in the same spot and the girl was a few steps back and looking pissed and confused. I didn't want to have to kill her. It would prove decidedly difficult to explain. What would the Weaver do? Well, she would blast the watcher to bits. Wait a second, a wicked idea flashed into my mind. I needed a weakness and I knew what to do. It might kill me but if it worked, oh if it worked. I willed the shield into a new shape, a simple metal baton.\n\n\"You wouldn't hit a girl would you?\" She said in her most convincing tone.\n\n\"Yeah, actually I would,\" I replied as she looked me over.\n\n\"I can still crush your windpipe before you kill this body.\" It replied even as I brought the spell into my mind.\n\nThe angel rushed forward. I dropped my weapon hand to my side and used all that speed Iyaden had drilled into me to sidestep just enough. The girl's outstretched fingers missed my throat but did find my upper arm. However, even as she squeezed I placed my hand on the side of her face. I discharged the spell fueled with the dark magic. It was kind of like adding nitrous oxide to a fuel mixture. It was loud and explosive. The orgasm hit the girl's nervous system like tempered steel. The dark magic did its work as well. I think she broke the long bone in the upper part of my right arm but she was now kneeling on the floor of the jet. The next two spells were cast in quick succession. The first enhanced her sensitivity to pleasure and the second was a stronger version of the climax enchantment. The angel was now trapped in a body wracked with pleasure. \n\n\"Clever worm, I will kill you the next time we meet,\" she said through clenched teeth.\n\n\"I know,\" I replied.\n\n\"Oh god, I am coming,\" the girl said as three more orgasms hit her in quick succession.\n\n\"What the hell is going on,\" Becca said as she sat up rubbing sleep from her eyes. \"Louis, are you okay?\"\n\n\"No, my arm is broke,\" I told her. \"I need to hit the rest room and try and do some damage control. Can you keep an eye out on her?\"\n\n\"Will you explain when you come out?\"\n\n\"I promise,\" I said.\n\nI slipped into the jet's small bathroom and sat on the toilet. I locked the door and only then did I cry out and let the pain have its way. I shifted and felt the bones begin to knit. Okay, I assumed since the pain lessened that I was doing something right. I pushed my shifting by actually focusing on those specific bones and imagined them whole and unbroken. I alternated between male and female forms and when I could shift no longer I reverted to my original shape. My arm was sore as hell but I could wiggle my fingers without screaming. I unlocked the door and Becca was standing right outside.\n\n\"Did you know I was a medical doctor?\" She asked as she examined me.\n\n\"Nope, but anything you can do will be greatly appreciated,\" I told her.\n\n\"Nyx, scan Louis' arm,\" she ordered and her A.I. manifested in her sexy nurse avatar.\n\n\"The bone is in bad shape but not broken,\" Nyx said after a long pause. \"It shows signs of healing but the bruising indicates this occurred recently.\"\n\n\"What the hell happened, are those finger marks on your arm? Did that crazy bitch do this?\"\n\n\"Well in order, the girl was possessed and crushed my arm, yes those are finger marks and yes she did this.\"\n\n\"Possessed, Louis what the hell are you talking about,\" Becca asked giving me that look.\n\n\"I made a promise to be honest from now on,\" I said. \"Hold out your arm.\"\n\n\"Okay,\" she said as she lifted her arm up. \"Now what...?\"\n\n\"This,\" I said casting the sensitivity spell upon her. \"How does this feel?\"\n\n\"UNNNNN... what the hell,\" she moaned. \"Did you do that?\"\n\n\"Uh huh,\" I said fighting the urge to sleep. \"Touch your nipples and that ought to prove my point.\"\n\nBecca reached underneath her top and lightly pinched her nipples. The reaction was priceless and would keep her occupied for a while. I found a seat to recline in and almost instantly dropped off to sleep. I slept for eight hours and woke up to find Becca and the blonde still asleep. There was a definite scent of sex in the air. I recovered Jon's gift where it had fallen to the floor of the jet. I restored it to its watch form and put it back on. I checked on Feng and she was fully charge. I woke her from her cybernetic slumber.\n\n\"Hello Feng,\" I said as the sphere took flight and her hologram surrounded it.\n\n\"Hi Louis, did I miss much?\" She asked looking at the two sleeping women. \n\n\"Just a second attack by that fucking angel,\" I cursed. \"I am afraid the third time will be my last. I cannot keep on tricking it. The first time it nearly broke me by flinging me at an oak tree. This time it latched on and broke my freaking arm. If it wasn't for using shifting to heal I'd be in a world of hurt. If she had gotten her hand around my neck, well we wouldn't be having this conversation.\"\n\n\"We are in Japanese airspace,\" Feng called out. \"ETA twenty seven minutes until we land and there is a limo waiting at the airport. Kat has called ahead and we are staying at the Asakusa Estate. I am sure that Yuki will be pleased to see you back.\"\n\n\"Can you run facial recognition on the blonde,\" I asked and Feng just smiled.\n\n\"The blonde as you refer to her is Tiffany Barnes. She is the daughter to none other than Jeremy Barnes, the U.S. Ambassador.\"\n\n\"Be a doll and wake them up, I am going to throw some water on my face and try for a mulligan.\"\n\nI was favoring my left hand for now but there was no helping it. The range of my right arm was severely limited until such time as I finished healing it myself or Doc Becca came up with a solution. I looked at the logistics and decided I would put up with this situation until we reached the estate. Then I could shift to my heart's content and sleep it off. That seemed the most solid plan I could think of. If I really looked as bad as my reflection I was going to start things in a weak position. There was a knock on the door and I yielded the bathroom to the hung over hussy from Tallahassee. As I passed her I realized one good thing, I didn't look nearly as bad as she did. Chalk up one for the home team.\n\nWe landed and I felt the unrelenting stare from Becca. I told her for the umpteenth time that I was fine. You know what fine stands for right, Fucked up-Insecure-Neurotic-Emotional. The jet landed and as promised there was a limo waiting. We all climbed aboard and the quiet and demure Tiffany was dropped off at the embassy before we headed off to the estate. It took us another forty five minutes to get there because of traffic and what had started out as a dull ache became full-fledged agony. I was holding my upper arm now to keep its movements to a minimum. Becca looked downright concerned by the time I got out of the limo. The house staff was assembled and their smiling faces turned to panic when I nearly face planted from the fever I had developed.\n\nBecca barked out orders and the staff complied without hesitation. I was drifting in and out of consciousness as she operated. Apparently a shard of bone had been dislodged, found its way into the muscle and had become infected. The possessed Tiffany hadn't just broken my arm she had shattered it. While I had managed to repair most of the damage I couldn't do it all on my own. My fever broke and I was given a ton of Master Nick's private stock of bottled water. The regenerative abilities saved me from losing my arm and my life. It had become real fucking personal now. But how the hell was I supposed to beat a being like a Watcher? I would always be dealing with it possessing another human being, an innocent. Even if I killed the host the Watcher remained. That was my last coherent thought that I had for a while.\n\nI opened my eyes and was staring up at the elegantly decorated ceiling. The serpentine dragon looked down at me and my first clear thought was this.\n\n\"Is it smiling at me,\" I mumbled.\n\nI looked around and the pain that had haunted me was gone. I tentatively wiggled the fingers on my right hand. No shooting white hot pain followed so I continued. I lifted my lower arm from the futon I was lying on. The lack of pain made me bold and I lifted my entire right arm up and off the mattress. It felt a little stiff but not a single hint of irritation. I was about to sit up when I realized there was a naked girl on top of me. I lifted up the blanket expecting Becca but it was Yuki, my former bodyguard, sleeping there. She stirred and opened her eyes.\n\n\"Hello Louis,\" she said groggily. \"How are you feeling?\"\n\n\"My arm doesn't hurt if that is what you mean,\" I told her.\n\n\"It was touch and go for a while,\" Yuki said.\n\n\"Tell me what happened,\" I asked and she nodded as she recounted the events.\n\n\"You staggered out of the limo and you were so pale. We knew something was wrong immediately. That's when Becca-san began shouting orders. We carried you to a room that became a makeshift operating room. It was luck that Nick-sama had the estate stocked for any and all emergencies. The surgery kit was one of those items that he demanded be kept in house. It was that and the blood supply that saved your life. I don't have all the details but apparently a shard of bone nicked an artery and an infection arose from that. Becca-san was shocked at how fast the infection had developed and spread. She actually used the word malevolent. She operated and removed the bone fragment as well as taking care of the bleeding. She closed you up and they gave you several units of blood. Over the next twenty four hours she checked her work looking for further signs of infection or blood loss. Louis, she found no signs of your surgery. The skin is unmarred and that's when she began drinking rather heavily. Feng overruled any scans, tests or further treatments short of food and water.\"\n\nShe finished her narrative and closed her eyes again. A hint of movement next to me and I looked to my left and there was a sleeping Becca. She looked like she had been through hell and back. I sniffed the air and her breath reeked of alcohol. I closed my eyes and decided sleep wasn't such a bad idea right now. I would get up when Yuki or Becca got up. My body seemed to like that idea and I was asleep in no time at all.\n\n\"Wake up Louis, I have prepared coffee for you,\" Yuki whispered in my ear.\n\n\"How is Becca,\" I asked and a grumble sounded next to me.\n\n\"I will live,\" Becca said with a hint of doubt in her voice.\n\nI sat up and used my arms to prop myself up. That's when I discovered there were lasting effects from the Watcher's attack. My right hand was numb and would not hold my weight. I fell back and to the side. I stared at my hand as if it had betrayed me. I wiggled my fingers again this time the tingling sensation as if it were asleep was strong. I managed to sit up using my left arm. Yuki had tears in her eyes and Becca was ominously silent.\n\n\"Nerve damage,\" I said and Becca nodded. \"Great... \"\n\nYuki sat opposite of me and held the porcelain coffee cup as I drank from it. I was numb inside. How could the wound heal without a sign and yet I had somehow suffered nerve damage? Wait, the memory of Yuki's narrative hit me. Becca had called it malevolent. Had the Watcher cursed me somehow? That made a sick sort of sense. That feeling of violation just got that much worse. I grit my teeth to keep from screaming. This was not going to slow me down! I would find a cure and pay the angel back in spades.\n\n\"Yuki, can you get me a water bottle and put some coffee in it for me please?\"\n\n\"YES Louis,\" she said smiling brilliantly.\n\n\"I know that look,\" Becca said. \"What can I do?\"\n\n\"I got Yuki's take on things. Can you tell me what happened, from a doctor's point of view?\"\n\nBecca nodded and launched into a very technical and detailed series of events. I asked for the layman's term from time to time to get a clearer picture of how things progressed. That's when she told me about the blood. How the first unit of blood had been absorbed by my body at what she described as an alarming rate. The more blood that was used the faster I healed. She actually had to stop giving me blood so that she could remove the shard before the flesh grew over it. Her narrative ended with my arm being stitched up and fed three bottles of Nick's miracle mineral water.\n\n\"Feng, I want a high resolution scan of my right arm. I need a live full spectrum view of what is going on.\"\n\n\"Yes Louis,\" she said popping into existence.\n\nThe holographic screen appeared and there at the sign of the wound was a dark area of neural activity. I moved my arms and watched how the damage affected the range of movement and strength. Feng zoomed in and what I feared most was confirmed. The damage was spreading. It was excruciatingly slow but it was getting worse. Feng thinking ahead showed me a time lapse display of the eventual spread of the condition. In one week I would be dead. I could cut off my arm and end it or I could seek a solution. \n\n\"If I have the limb removed will it stop the progression,\" I asked Becca and Feng.\n\n\"I give it an 80 percent chance of success,\" Feng said after a short pause.\n\n\"Only 80,\" Becca said surprised. \"Why only 80?\"\n\n\"I suspect Louis' blood has been compromised. If the limb is severed I think the attack will manifest elsewhere.\"\n\n\"You know something I don't,\" Becca said her eyes narrowing. \"Out with it.\"\n\nThe display changed, this one showed an entire body scan. It was color coded and navy blue dominated most of the image. Feng explained this was a scan showing the cellular change since I had been injected with the two vials. The navy blue shows what has been altered by the substance from the vials. Becca and I were equally shocked by the level and depth of infestation. Feng zoomed in on my upper right arm. The black area stood out on the scan and then Feng zoomed in even more. There were thin tendrils extending from the damaged area and Feng highlighted them and they were everywhere.\n\n\"Severing the main mass might destroy the filaments,\" Feng said.\n\n\"I've only seen this once before,\" Becca shaking her head. \"Charlie has an infestation like this. But his has a beneficial nature while this one... well this one is a fucking parasite.\"\n\nI closed my eyes tears ran down my cheeks. My first thought was to attempt using shape shifting to rid myself of his thing. I could improve my condition or it could have been the cause for the spread of these filaments in the first place. There was only one way to find out. I told Feng to maintain the scan and stood up. I looked at Becca and I contemplated asking her and Yuki to leave the room. I knew Yuki would keep my secrets but Becca was an unknown. She was a doctor so I asked her if I was her patient. The withering look she gave me confirmed my trust in her. I began the change as they looked on. Feng monitored me closely and it was determined that it had no affect either good or ill on the infection. \n\n\"I got to think this thing through,\" I said as my bladder decided, upon that moment, to inform me it was full. \"Shit, I need to pee.\"\n\nI crossed the room and as I opened the shoji and shifted back. After my bladder had been attended to I decided a dip in the onsen was required. A good long soak in the hot springs would do me some good. Even if it was only emotional, I needed time to contemplate a solution. There had to be one and I was going to find it. All problems have a solution, even if it demanded maiming himself. I sat in the shallow end of the onsen and closed my eyes. I accessed the neural implant for a quiet place to contemplate uninterrupted. I told Feng not to speak with me unless it was an emergency. I entered my Silent Temple. It was the single aspect of the implant that I had made my own. I had created it when Lily went missing. It was plain, austere and designed for meditation. Even the waterfall fell muted to the pool below it. I step onto the balcony that looked out over the holographic landscape and I was surprised to see new structures. The single most impressive construct was a stark white pyramid with a jet colored capstone. \n\n\"That's new,\" I said breaking the quiet. \"I am guessing Jon placed that here.\"\n\nI teleported to the front of the pyramid and there were two guards carrying wicked looking halberds. The most astonishing thing was they appeared to be twin versions of the god Anubis. They parted and allowed me entrance into the building. The interior appeared to be a massive library and the librarians were other Egyptian goddesses. The majority seemed to be clones of Bastet, the cat goddess. While the jackal god guarded the cat goddess maintained the pyramid and its contents. There was one figure that stood out over the others, the phoenix goddess. Was she the head librarian?\n\n\"Greetings Master,\" she said as she approached. \"I am your primary interface. How may I be of service to you?\"\n\n\"I am ill,\" I said. \"I am looking for a treatment.\"\n\n\"I will access appropriate medical records one moment please,\" she said and her face darkened. \"You seem to have a malfunctioning monofilament neural device. I will attempt a third party interface.\"\n\n\"Third party interface,\" I said. \"I don't understand.\"\n\n\"This node is not allowed to compromise its safety but directly interacting with any type of infected software or hardware. I will construct a... a probe if you like. The nano-probe will interface and attempt to repair the damage.\"\n\n\"That's amazing,\" I said and she smiled.\n\n\"I am Bennu, high priestess of this place and your humble servant.\"\n\nBennu raised her hands and the air shimmered as she built the nano-probe she mentioned. She spoke the entire time as she described her work. To be honest the finished product appeared like a sperm cell. The data package would be delivered once the probe pierced the damaged area. The probe was launched from a tear duct and its progress was observed through a holographic display. The bright blue blip flashed as it moved through my blood stream and headed for its target, my right arm. The anticipation grew as it got closer and closer. After god only knows how many nanoseconds the probe struck its target and was absorbed and destroyed. \n\n\"The probe failed,\" Bennu said smiling.\n\n\"If it failed why are you smiling,\" I growled.\n\n\"Even in failure a fraction of success may be attained. I now know what we are dealing with. It is a psychic parasite and tailored to kill you very slowly. Your enemy wishes you to suffer. I will run simulations until I find a solution. If you wish to peruse the library until then please feel free. I will assign you a Librarian. She will help guide you and explain how this node functions.\"\n\n\"Thank you,\" I said.\n\nOne of the librarians walked over and took my arm. Here at least my right arm followed my commands. The full majesty of the library began to dawn on me. There was a massive chamber dedicated to every subject known to man and a few that appeared to be alien. I was drawn instantly to the runes marking the chamber dedicated to Iyaden's people. The two of us stepped inside and my mouth dropped open in surprise. There were no books; the hemispherical dome was covered with gleaming jewels. The center of the dome was a single massive obelisk carved of glowing amethyst. It was polished to a mirror bright surface.",
        "\"That is the main interface,\" the Bastet said pointing to the obelisk. \"It can guide you to the correct mind to speak with.\"\n\n\"Mind, are you telling me that those jewels are actually living minds?\"\n\n\"Yes, it is a small Infinity Circuit,\" she said smiling. \"It is how the Elda stores their information. What better way to share and store information than with a being that knows it intimately well?\"\n\n\"She never told me the name of her race,\" I said thoughtfully. \"Can they teach me about their society?\"\n\n\"They will be happy to share any and all of their knowledge,\" she replied as I touched the amethyst obelisk.\n\n\"Anatari Baharr, you are a recognized user,\" the soft voice spoke in his mind. \"What do you want to know?\"\n\n\"I need to know about the Elda, their culture, your culture for a start.\"\n\nI felt the urge to sit down. So I sat down and placed my back against the monolith. I placed my head against its polished surface. The words and images flowed into my memory and the entire history and culture of this strange and wondrous people entered me. There was so much but my hunger for the past made me a glutton. They had once flourished long before humanity rose from evolution. But their own pride and hunger led to their self-destruction. Now they were wandering nomads trying to survive.\n\nI asked the living minds about my injury eventually. Maybe their advanced culture could find a cure. I was grasping at straws and I hoped it paid off. A new mind presented itself and told me it would run a thorough scan to see what was wrong. While the machinery went to work the woman sang. The song seemed to focus her attention and guide the device on its path. When it reached my upper arm the song changed and a new one began. The first song was simple and easy to remember. This new one was more complicated and involved her singing in multiple octaves at the same time. I had no idea the Elda could do such a thing. It was like listening to a choir but she alone was singing. The song and the scan ended. The hologram appeared quite disturbed.\n\n\"I am sorry, I cannot aid you. There is a malignancy at work here that I have never encountered before.\"\n\n\"Can you teach me some of your songs?\" I asked and she smiled.\n\n\"My songs are quite limited. Perhaps a servant of the Laughing God would be of better use?\"\n\n\"I leave that to you,\" I told her and she vanished.\n\n\"You wish to learn to sing,\" a voice said as a figure appeared in a flourish of movement and bright flashes of light.\n\n\"Yes,\" I said. \"You seem familiar to me.\"\n\n\"That is a statement that I doubt. We do not normally associate with others of our kind. Our path is our own and where we wander few can follow.\" He said cryptically. \"Stand up and let me see you move.\"\n\n\"Alright, I will do as you ask,\" I said and the newcomer's eyes narrowed in interest.\n\n\"Dance for me,\" he said his voice cold and cautious now.\n\nI summoned a holographic Bo Staff and went through the first two katas before I was halted by the Elda. He rewarded me with a wry smile. He tossed me an unusually shaped sword. I tested its weight and balance and then showed him the first few sword katas Iyaden had taught me. He clapped and I handed him the sword back. The last test was a sparring match between the two of us. The unarmed combat I had learned was a blend of what Kenji had taught me as well as quite a few techniques Iyaden had passed along. He was blinding quick but I managed to match his speed and ferocity. Neither one of us landed a blow and he called a halt with a smile and a low bow.\n\n\"Someone has taught you well,\" he admitted. \"I will teach you to sing. What was their name? Who instructed you in the ways of the dance?\"\n\n\"She called herself Iyaden,\" I said.\n\n\"There are many solitaires that bear that great name. Hearken onto me and I will teach you our songs for Iyaden's sake.\"\n\nWe sang of gods and demons and the birth of what the Elda called the Great Enemy. We sang of love and loss and legacy. It took me a time but I managed to adjust my vocal cords to be able to create the triple octave voice known only to the Elda. It was an age and a day that he and I sang our duet. At the end he was satisfied that Iyaden hadn't chosen a poor student. Tired and weary I left that place only to return on many occasions to learn about art and magic and combat from a race teetering on oblivion. Their song was a great tragedy that had only a single ending. I opened my eyes and wiped away the tears for a people that were nearly extinct. \n\nI did the comparison and only ten minutes had passed in what I had come to call meat time. I explored the limitation for my right arm. While I still possessed a full range of movement, that movement was slow, awkward and about as smooth as a road full of potholes. I tried to see how fast I could touch my fingers to my thumb and well that was a waste of time. I could do it but my coordination was truly gone. I sat down in the center of the pool and let the hot water do its work. I wanted to feel sorry about myself but I rejected that out of hand almost instantly. I had too many people relying on me to wallow in self-pity. I had to find a way to fix this or die trying. \n\n\"So, it is true,\" a soft voice spoke from the tree that stood next to the pool.\n\n\"You have me at a disadvantage,\" I said as I looked at the tree and there a heat source in the upper branches. \"Great, how have I offended the Akhkharu?\"\n\n\"You are a most gifted archaeologist, to be able to so easily detect the presence of a highly trained member of the Shadow Clan.\" She said as she dropped the distance to the edge of the pool.\n\n\"I have a friend in your clan,\" I told her. \"Leah... and I am sure she would vouch for me.\"\n\n\"We are aware of this physical romance,\" she said. \"I am Nishi Oku and I am here to help.\"\n\n\"Help, I thought you were here to kill me,\" I said as she stripped out of her silk uniform.\n\nShe slipped into the water and began examining my right arm. Her fingers poked and prodded my upper arm. I winced when she found sensitive spots; all the while she made little noises of interest. She asked me how I had been injured and I told her all about the Watcher crushing my arm and the remaining damage.\n\n\"Dark Chi,\" she said at last. \"Have you ever heard of Dim Mak?\"\n\n\"No, I haven't heard of either of them.\"\n\n\"Your body has been poisoned with dark chi and if not treated soon you will die. It is a slow and painful process. The fact that you are still alive is a testament to your strength. I was sent to see if certain rumors were true. Something happened to you London, didn't it?\"\n\nI told her all about the dark force we encountered and my near death. The Inquisitor injected me with two vials that had been created by Professor Griffin. I told her about my sensitivity to bright lights and heightened senses. I was dying after all, what did I have to lose. The Akhkharu smiled and nodded as she pondered her course of action for a long time.\n\n\"Normally I would kill you where you stand. However, I have no intention of pissing off an Elder in my own clan. I will help you. I cannot guarantee success but if it works the treatment might be as life changing as the attack itself. So you are warned, what do you want to do?\"\n\n\"I have to try for my family's sake,\" I said.\n\n\"Drink this,\" she said offering him a small plastic water bottle. \"After you drink it I will send a massive jolt of positive chi into your body and we hope for the best.\"\n\n\"Kanpai,\" I said meaning bottoms up in Japanese as I drank the contents of the bottle.\n\nThe woman brought her hands together, palms facing each other and after a full minute she placed both hands on my upper arm. It felt like I had been hit with a defibrillator. My arm went into spasms, the fingers clenching and unclenching on their own. But the spasms weren't limited to my arm. My jaw clenched shut while chest, abdominal and even my back muscles twitched and contracted. She actually kept me from drowning when my knees quit supporting my weight. Nishi Oku held me and was singing a children's song that parents sang to their kids in Japan. The pain in my arm pulsed and worsened as the dark and light chi cancelled each other out. I breathed in and tried to use my own life energy to help the process. I imagined flowing water coursing through my arm and washing away the darkness. The pain subsided and I opened my eyes. The woman was looking down at me and smiling.\n\n\"I believe you will survive,\" she said. \"I will inform Leah of your condition. I will return on the morrow and see how you are doing if that will be acceptable.\"\n\n\"Thank you for everything,\" I said and she nodded. \n\nJust as quickly as she had appeared she was gone. I could have easily chalked the entire event up to a dream but I knew better. I put my arm through some basic movement tests and there was a remarkable improvement. It wasn't up to 100 percent but it was better and that gave me hope. I left the pool, dried off and returned to my room. I found Yuki and Becca there and they looked up at me when I walked in.\n\n\"I found out what's going on,\" I said.\n\n\"Louis,\" Becca said her eyes going wide. \"Are you okay?\"\n\n\"No,\" I said as my left arm went numb and the crushing pain hit my chest. \"It is dark... dark chi... Dim... Mak...\"\n\nYuki swept up from the floor and caught me as I fell. Damn she was fast! Yuki let out a shrill whistle as Becca and her rolled me onto my back and made me comfortable. The entire female staff was kneeling around me and they were told about the Dim Mak attack. They closed their eyes and began performing a technique to channel their chi, it is called Kuji Kiri. The nine hand gestures helped guide and focus their life energy. The pain in my chest lessened but I knew where I needed to go and I tried to convey that to Yuki and the others. The pain rose up again and I cried out.\n\nI felt a stomach lurching sensation and when I opened my eyes I was looking up into the eyes of my former teacher Kenji. He was smiling and telling me to relax. I was able to say the two words, Dim Mak. His features became serious and he nodded. He laid one hand on my arm and the other over my heart. He closed his eyes and I felt warmth spread from those two points to the rest of my body. My eyes fluttered closed and I drifted in the knowledge I was safe. How had he gotten to Tokyo so fast? It didn't matter he was there and I might just survive. If any being could drive out the dark chi it was Master Kenji. He was a tengu after all and a dear friend.\n\nI had been invited for a rare underwater dig off the coast of Japan. There had been a small tremor and when it had been investigated the structure had been found. It was this discovery that had thrilled the University of Tokyo into launching the dig. This dig is what brought Kat and others into my life. Master Kenji was one of those people. The stress of the dig was taking its toll so I sought out an outlet. I had learned from one of the students about Kenji and his shrine. So I split my time in Japan between the dig during the week and Kenji's shrine on the weekends. He had become not just my teacher but a dear friend as well. Kenji had taught me the deeper arts of meditation as well as hand to hand combat. He had nurtured in me a strength I never knew I possessed. I believe he had saved my life.\n\n\"Louis,\" the voice said from a great distance. \"Wake up Louis.\"\n\n\"Master,\" I said through dry cracked lips.\n\n\"I hate that title,\" Kenji replied smiling.\n\n\"Oh hey,\" I said smiling. \"I am thirsty.\"\n\n\"Drink slowly,\" the tengu said grinning his gentle smile.\n\nHe placed a shallow cup to my lips and I drank the water from the mountain spring. It had a strong mineral taste to it but I didn't mind. Two cups of water later I felt remotely human. I looked around puzzled and he smiled even wider now.\n\n\"Yes, you arrived quite suddenly Louis-san,\" he said.\n\n\"How did I get here, helicopter?\" I asked and he shook his head.\n\n\"No, Louis you teleported here,\" he replied.\n\n\"Huh,\" I said and tried to get up too quickly. \"Shit... ow... I am going to lie down now.\"\n\n\"Rest... sleep... when you feel up to it we will talk.\"\n\nI closed my eyes and I was asleep in seconds. There she was in all of her perfect splendor, the Weaver. We were floating in the middle of that same region of space. The Weaver frowned and as she gestured our orbit around each other changed and we drifted towards one another. Her arms went around my neck and she kissed me. I felt her warmth as it entered me. The warmth became a heat, the heat became an inferno and that inferno became sun bright within me. \n\n\"Who did this thing to you? Who dares harm my pet?\" \n\n\"A Watcher... an angel,\" I replied my lips spewing white hot plasma.\n\n\"No angel did this,\" she replied. \"Unless they have fallen from grace, the use of dark energy is forbidden to the light. Let me love you and I will finish what your tengu started.\"\n\n\"Gladly lady,\" I told her as our embrace became far more intimate.\n\nThe memory of our love play was disjointed as my body struggled to repair itself. She whispered dark secrets in my ear and giggled as she took her pleasure from me. I was too weak to do much besides let her have her way with me. That didn't seem to lessen the Weaver's pleasure one iota. I think she liked being in charge. Each orgasm was rewarded by another secret passed onto me. I learned quite a bit as she healed me with her body and energy. Finally sated she kissed me one last time and blessed darkness engulfed me. I drifted on the shadow meridian between light and dark. My anterior was bathed in perpetual illumination while my posterior was caressed by the unyielding abyss. \n\nMy mind was blank and I just existed there in that place. Was I in shock? Was I dead? I had never been here before and to be honest I never wanted to again. I thought about those that had helped me. Kenji, the tengu Master, was my teacher and more importantly my friend. While he appeared as an aging Japanese monk he was in fact far older. A tengu is in fact a mountain spirit. This particular spirit was born when the crashing tectonic plates pushed Japan from the ocean floor. He had been born amidst volcanoes and the primordial forces of that era. He had watched life evolve and become more and more complex over uncounted eons. When man arrived, millennia ago, Kenji and the other tengu were interested in them. Their curiosity outweighed their fear and they taught them what they needed to survive. After a few centuries the tengu faded into legend.\n\nKenji had taken me under his wing, literally. He saw in me a soul in pain and he helped kindle a sense of purpose and self-worth. He was a generous soul and I owed him a debt I may never be able to repay. I smiled when I imagined his expression if I even vocalized those thoughts. The concept of debt was as alien to the tengu as non-Euclidean geometry was to the human mind. Speaking of debt, I thought about the Akhkharu Nishi Oku and how I could repay her. She, like most of her race, was quite attractive and possessed all the qualities I found beautiful in a Japanese woman. Her skin was pale, smooth and flawless. She had the classic almond shaped eyes but hers were the color of golden honey. Her face had that ageless quality of her people. She had a slight build with small breasts and narrow hips. I never got a good look at her ass but I suspected, well hoped, it was nice and round. \n\n\"Master, why is he smiling like that,\" a voice said from a distance.\n\n\"I suspect he is having a pleasant dream,\" Kenji's voice replied. \"Ah, he is waking up. Good evening Louis.\"\n\n\"Evening,\" I said as I opened my eyes. \"Man I am thirsty.\"\n\n\"Come and sit with us, we are about to take our meal,\" Kenji offered.\n\n\"Thank you,\" I said and slowly sat up. \"Hey my arm and chest don't hurt thank you sensei!\"\n\n\"You are most welcome Louis-san,\" he said smiling. \"I am glad that I could help. It was touch and go for a while but you pulled through.\"\n\n\"I wonder how the girl's managed to teleport me here,\" I said as I walked over to the table that looked out over the village far below.\n\n\"Are you sure it was their effort that brought you here,\" Kenji said as he sipped the mountain water in his cup.\n\n\"If not them or you, then who,\" I asked and he just smiled. \"Me, you think I somehow managed a teleport spell?\"\n\n\"Perhaps, perhaps not,\" he said in his cryptic way. \"Has nothing new come into your possession?\"\n\n\"Well...\" I thought about it for a moment. \"My dad did give me a chunk of meteoric metal.\"\n\n\"May I see it?\" Kenji asked politely.\n\n\"Sure,\" I said as I took the watch off my wrist and willed it back into its standard form.\n\n\"Star Metal, you have a Star Metal weapon! What a princely gift to bestow upon a son!\"\n\n\"So you have seen something like this before,\" I asked and he shook his head.\n\n\"I have heard of such things. But in all my long years I have never actually seen one.\" He said and then smiled. \"Are you familiar with Chinese puzzle boxes?\"\n\n\"Yeah,\" I said and he fell silent after that. \"Gods I hate it when you pull that Yoda crap.\"\n\nKenji just chuckled as I picked up the smooth black object. I turned it over in my hands and discovered there were no signs of a hidden cavity anywhere. The surface of the rod was mirror bright and without flaw. How the hell am I supposed to open the damn thing, I thought. A moment later a short vertical line appeared on the side I was looking at. The line became deeper and more defined and then it split open. There were six stones socketed inside the rod. Each stone was a unique color and was cut in a particular geometric shape. Whoa, did he know they were inside of this? Of course he did, he had put them there. \n\nI touched each stone seeing if anything happened. The triangular ruby was warm to the touch but nothing else happened. The tear drop sapphire was cool and slick but again nothing remarkable occurred. I touched the rest of the stones and nothing happened. It was disappointing. Did one of these stones allow me to teleport? The amethyst glittered just a little but there it was. I touched the violet colored stone again and thought about teleporting. Nada, nothing... not a damn thing, perhaps I was going about this the wrong way. How would Nightcrawler do it? So I thought about it. You would have to imagine your target location and will yourself there. Of course if you missed, I shivered at that thought. \n\n\"How the hell do you work,\" I asked and to my utter surprise images pop into my head. \"Whoa, slow down please!\"\n\nThe images appeared slowly and I learned that I could not only teleport myself but objects as well. The tutorial, if that what you wanted to call it, showed me step by step how to manipulate space itself. I looked at the other stones and a seriously frightening idea came to mind. I touched each stone and asked what they did. I should have been surprised but each stone explained its form and function. Each seemed to be tied to a fundamental force, energy, time, thought, matter and life itself. Whether I could actually access them or not was a huge question. Why the hell had Jon given this to me? Did he think I would never discover the stones? Or did he hope I would? The final question is where the hell did they come from? \n\n\"Any ideas, thoughts or suggestions,\" I asked Kenji.\n\n\"They are pretty stones but I only get a feeling from the pyramid shaped one. It is tied to the earth quite intimately. I would suggest you tread lightly Louis-san. Tread lightly my friend. That kind of power can change a man, even a good man. Perhaps that is why it was given to you. Your father wanted you to safe guard it.\"\n\nThe rod closed on my mental command and then reverted to its watch form. I slipped it back on and pondered Kenji's words very carefully. I finished my meal while I pondered if I should even use the stones or not. I could just ignore them. Oh hell, who was I kidding? ",
        "\"Feng, get me a lift, I am going to walk down to the village. There is a great Saki bar, I will be there. Kenji, if you ever need anything please contact me.\"\n\n\"Be well my friend and try not to make too many waves.\"\n\nThe walk down to the village took about an hour. The bar was open and I walked in was greeted by the bartender who remembered me from my last visit. I ordered shots all around and suddenly I was everybody's friend, again. A few of the older guys sat with me and we shared stories about my last visit to Japan. They remembered my generosity and they offered my condolences on the loss of my friends. I ordered another round and toasted to friends here and gone.\n\n\"I am so sorry Tetsuo,\" I said before downing my shot.\n\nHalf a bottle of Saki later and everyone in the bar could hear the roar of the engine and the squeal of brakes. I looked at the entrance and a few moments passed when the door opened and her entrance was heralded with a cloud of road dust. She stepped in and announced her arrival.\n\n\"What's up bitches?\" Surisa called out. \"Drinks are on me!\"\n\nI guess I shouldn't have been surprised when half the people present knew her by name. She walked over and plopped down next to me. The bartender brought a fresh bottle of Saki and Surisa poured. The blue eyed Thai drank her fair share of that bottle and the one that followed. For her petite build and diminutive height she could put it away. \n\n\"Hey, I hear you need a ride,\" she said midway through the second bottle. \"Your digital girlfriend called me up and was like... hey girlfriend my man needs a ride. How could I possibly say no? So how about we finish this bottle and you drive my little toy out there and I give you some much needed road head?\"\n\n\"There is no way I am turning that down,\" I said and she smiled.\n\nWe finished that bottle and departed. We stepped outside and there was a navy blue sports car with heavily tinted windows. It looked like a formula one racer and sure as hell was questionably street legal. I asked her what I was going to be driving and she muttered something like Corvette and Prototype. I just laughed and opened the door for her. By the time I had gotten around to the driver's side Surisa had lost her shoes, jeans and panties in that order. I sat down and closed the door. I reached for the button to fire up the ignition when the car started on its own. \n\n\"I will drive,\" Feng informed us through the car's sound system. \"Relax and leave the driving to me.\"\n\nSurisa just smiled, unzipped me and went to work. I put the seat back as far as it could go and enjoyed the show. Surisa was a stunning beauty and I learned on my first visit to Japan that she loved sucking cock. Even half-drunk she had a wicked attention to detail. She patiently licked every inch of my dick all the while maintaining eye contact. When she finally closed her eyes Surisa had most of my cock down her throat. She moaned as she pushed her head downward so that her lips brushed the base of my erection. \n\n\"Damn girl, you sure know how to suck dick,\" I praised her. \"You put on one hell of a show.\"\n\nShe loved dirty talk and the more foul the language the more intense she became. Call her a cunt or a whore and she was ready to swallow a load at any moment. I cursed at her and the pace of her head nearly doubled. But when I grabbed her by the hair she went limp. Her eyes flashed open and there was challenge there. I made a fist and her eyes narrowed. When I started using her mouth like a pussy she climaxed right then and there. I shoved her head down and the tip of my cock hit the back of her throat over and over again. \n\n\"Close... so fucking close,\" I warned her and her eyes smiled up at me. \"Here it comes!\"\n\nI shot down her throat and there was nothing but worship in her eyes. I let go and she opened her mouth and showed me the last bit of my cum and then swallowed. It was her petite size and build that allowed her to climb on top of me in that limited space. She lifted up her hips and took me inside of her.\n\n\"It's been too long,\" she moaned as she impaled herself. \"Nice and slow... NNNNNN... god damn that is thicker than I remember.\"\n\n\"That sweet pussy of yours is as tight as I remember,\" I told her.\n\n\"Of course it is, there aren't many guys built like you are,\" she whimpered. \"I could do this all night long.\"\n\nShe laid on top of me now and slowly rocked her hips. I grabbed her ass cheeks and that stoked her fire. I moved my hands matching her pace perfectly. We were very limited by space unless we disembarked but we were in the Tokyo city limits now. So we had to be patient. Surisa was squeezing me with her pussy muscles now. She was muttering something about wanting to feel me shoot inside of her. I just wanted to hear her scream. I got my wish. As I rammed my cock up into her she drove her hips down as hard she could. A moment later she was crying out and cursing as she climaxed. I held her and she lay there catching her breath.\n\n\"I love your cock,\" Surisa whispered.\n\n\"You say such sentimental things,\" I replied and she giggled. \"My elegant egotist...\"\n\n\"Elegant Egotist... ooh I like the sounds of that,\" she purred. \"It beats the hell out of Little Moriarty.\"\n\nI took charge and began moving again. She never complained. I wanted to fire off a load inside of her. I dug my nails into her ass cheeks and Surisa growled as I fucked her. As I drove my cock in and out of her she made me promise at least one more time in less cramped conditions. I would have been an idiot to say no, so I didn't. \n\n\"I can feel you getting bigger,\" she moaned. \"Fill me up please!\"\n\nI thrust harder now until I lost control and we both cried out as I climaxed. Our timing ended up being damn good. We had separated ourselves, cleaned up and dressed before we reached the outer gates of the estate. The entire household staff was waiting for us and Becca raised an eyebrow when Surisa climbed out. Becca waited the appropriate count of three before racing up and hugging me. She thought I was dead after I disappeared like I had. I grabbed her ass with my right hand and she jumped and then looked at me in wonder.\n\n\"How,\" she asked.\n\n\"It's...\" I stopped before I dropped the C word. \"There is this monk I know. He is well versed in these things and drove the dark chi from my body.\"\n\n\"That's not what I meant,\" Becca began but my safe return was all that mattered to Yuki and the others.\n\n\"There is food waiting for you,\" Yuki said and placed a gentle hand on Becca's shoulder.\n\n\"Let's eat,\" Becca said as we all filed into the estate.\n\nI glanced over my shoulder and watched the shadowy figure vault over the twenty foot wall with ease. It appeared as if Nishi Oku had returned to further our conversation. I leaned in and informed Yuki that I might be expecting a visitor and not to kill any intruders on sight. We sat down and ate and I returned to my mindfulness habit. I had taken for granted the simple things like two fully functional arms. I pushed down the anger and decided to be more proactive. The angel was going to strike again and chances are that it would be the last conflict between us.\n\n\"Feng,\" I sent silently to her.\n\n\"Louis?\"\n\n\"I need you to try something for me,\" I asked nicely.\n\n\"I would do anything for you,\" she replied.\n\n\"There are six gemstones located in the watch on my right hand wrist. I want you to try and access them if you can. I want to create a training program using them.\"\n\n\"I will try. I will notify you of my progress either way.\"\n\n\"Thanks sweetie,\" I said and I could almost feel her blush.\n\nSurisa was entertaining everyone with a story about one her grand adventures. This one was about two Interpol agents and a clandestine shipment of munitions to a certain third world country. She was a hell of a storyteller and literally glowed in the spotlight. She had everyone laughing before too long and my clandestine guest appeared at my side without anyone but myself noticing. She had her hoodie pulled up and had managed to procure a pair of chopsticks. It wasn't until Surisa's story was finished that anyone noticed the newcomer. Only then did she pull back her hood and surprise everyone, including me.\n\n\"Leah, I thought you were Nishi Oku,\" I blurted out.\n\n\"She is otherwise occupied,\" Leah replied. \"Hello everyone, I heard that Louis was injured and I wanted to offer my aid. I appear to have arrived too late. I am glad your full function has been restored.\"\n\n\"It was touch and go,\" Yuki said. \"The dark chi spread to his heart.\"\n\nLeah turned to look at me and she was paler than normal. She looked me over and raised a delicate eyebrow. If I wanted to try and read her thoughts it would be, you are full of surprises. Seeing the mood darkening Surisa launched into a second story to entertain everyone. Leah touched my right arm and I knew she desired a private conversation. I whispered in Becca's ear that I would only be a little while and if I ran late to get the bed ready. That brought a smile to her face. Leah and I stepped outside and led me to the onsen for our little talk. She stripped down and I decided to follow suit.\n\n\"Louis, what the hell is going on,\" she asked as she slid into the hot water.\n\n\"Please be more specific,\" I said. \"I have a few irons in the fire at the moment.\"\n\n\"I heard all about Griffin's syringe kit. Did they really inject you with both vials?\"\n\n\"Yes she did and it saved my life,\" I told her.\n\n\"I need to see how much you have been affected by those chemicals.\"\n\n\"Go for it,\" I agreed, like I had much of a choice.\n\nLeah looked into my eyes and made a face. She had me open my mouth and made a different face. Next she had me offer my hand, palm open and facing upward. She produced a knife from somewhere and sliced my hand with the razor sharp blade. I flinched but she held me by the wrist watching to see how fast I healed. A dark line formed as the blood coagulated almost instantly. She tugged my hand under the hot water and when she lifted it up again the blood was gone as was any hint of a wound. \n\n'I already know that you are a gifted telepath,' she sent silently.\n\n'So what is your prognosis,' I asked.\n\n'If I had to rate your gifts, I'd call you a Dhampir,' she sent making a face. 'You possess all the basic benefits of being Akhkharu but I don't see any hint of detriments.'\n\n'Sunlight gives me headaches but doesn't burn me. Are you going to kill me?'\n\n\"NO, Louis I'd like to think we are more than friends. You aren't a threat to my people, hell you might even be an asset if you are willing to lend your aid from time to time.\" \n\n\"If I can I will help, you know that,\" I said and she smiled her fangs gleaming in the moonlight.\n\n\"I am glad to hear you say that,\" she purred as she pressed her body to mine. \"Do you mind if I top off for the night?\"\n\n\"Be my guest.\"\n\nI had never been bit before. All of our previous encounters had been purely sexual. This was far more intimate. Her 'kiss' had me aroused and ready in no time at all. All the things I expected never happened. The initial contact stung a little but the pleasure that followed wiped that memory out instantly. I was sure I would be light headed from blood loss but she took only a little. Leah's expression was almost comical as she withdrew her fangs and licked the wound.\n\n\"I've never tasted anything like you before,\" she said. \"I can confirm without a doubt that your blood has been touched with that of the Akhkharu the blending is quite, subtle. Your bouquet is quite unique, thank you.\"\n\n\"You are welcome, I think,\" I said and she smiled.\n\n\"Would you like to try,\" she offered smiling wider now.\n\n\"You mean me...\" I stammered and she laughed.\n\n\"Don't take this the wrong way but you sound like a virgin on his first night.\"\n\n\"I guess in a way I am,\" I told her. \"Sure, I'll give it a shot.\"\n\nI was already feeding on women through sex, was bloodletting any different really? I pulled her close again and my sex slid dangerously close to hers. As she moaned upon that contact I brought my lips to her neck. I took in her scent and felt my canines pop for the first time. It was a little painful to be honest. The needle-like teeth pierced her flesh with ease and to both our surprise the dark magic rose up and enveloped her. As the first drops of her blood hit my tongue Leah's body arched as she climaxed. Her blood tasted like the finest wine I had ever experienced. But there was something else; in her blood was distilled life essence. I needed only a little to sate my requirements. I withdrew and remembered to lick the wound. Leah gazed at me in a kind of foggy euphoria.\n\n\"I climaxed... twice, that was amazing,\" she whimpered.\n\n\"I think I have found a replacement for my other feeding technique.\"\n\n\"Congratulations,\" she growled. \"Bite me again... or fuck me... something, don't leave me like this!\"\n\nI saw the unbridled hunger in her eyes and saw the after math of the kiss enhanced with the dark magic. I turned her around, bent her over and slid slowly inside of her. As I began to move I placed Feng on guard duty. I wanted some privacy as I processed what had happened. I missed my time with Leah and her sudden reappearance was a pleasant distraction from what I was going to face tomorrow morning. I moved slowly and neither of us was in a hurry to finish this. She did thrust back against me but it was a slow sensual movement that enhanced our love play. I closed my eyes and focused on the pleasure she was giving me. Our sounds were soft whimpers that didn't travel very far. I cupped her full breasts and teased her nipples. Leah ground against me and begged for more, more bloodletting.\n\n\"Bite me Louis,\" she moaned. \"I want to feel your teeth in my flesh.\"\n\n\"I don't want to hurt you,\" I said but she kept insisting. \"This is on you...\"\n\nThe second time the feeding fangs slid free painlessly. I grabbed Leah by her hair and pulled her head back. I placed light kisses along her neck before sinking my teeth into her flesh again. Once more the dark magic rose frighteningly fast. I felt her pussy spasm around me as she climaxed. I took only a little and licked the wound. I began hammering her from behind to finish our very satisfying time together. Leah returned to that foggy state and was quite complacent as I took her harder and faster.\n\n\"Almost there,\" I moaned in her ear.\n\n\"MMMMM... come for me,\" she replied dreamily.\n\nI thrust until I could no longer fight my climax. I eased out of her, spun her around and painted her tits and face. Leah sat down in the pool and rubbed my cum into her skin. She licked the excess from her fingers and looked up at me smiling. I lowered my body into the water and watched her intently. Leah, elder member of the Shadow Clan, was completely and utterly engulfed in the hold of the dark magic. I had to willfully withdraw it and only then did her eyes clear and she showed signs of being sober.\n\n\"Wow, that was fucking intense,\" she murmured. \"Did you do that?\"\n\n\"Yeah, I'm sor...\"\n\n\"If you need a regular donor please keep me in mind,\" Leah offered.\n\n\"Wait, you want to be someone I regularly feed on?\" \n\n\"Yes... please,\" she said snuggling into my lap.\n\nI held her close and felt a deep abiding chill pass through me. I had to tread carefully with this new feeding option. Having fed twice in so short a time I was buzzing with energy. It felt like I had ten cups of coffee in me. I was actually a little jittery. I needed time to think and Leah understood that. She cleaned up, dried off and dressed. I watched as she leapt into the middle branches of the ancient tree with an ease I would have normally chalked up to one of the big cats. She disappeared from sight and I took Feng off guard mode. I sat in the onsen pondering the morality of what had just happened. Ah that word again, morality. For the first time in my life I was beginning to seriously question that word and how it applied to me.\n\nI stood up, grabbed a towel and stalked off to be with someone, anyone. I didn't like where that chain of thoughts might lead. I was still dripping wet when Becca and Surisa caught sight of me. My expression must have been pretty profound. I was in Becca's arms seconds later and Surisa managed to slip her arms around my waist from behind. Then she managed to wiggle her way between Becca and me.\n\n\"This is ridiculous,\" I said.\n\n\"I agree, this is now way to start a three way,\" Surisa announced.\n\n\"What makes you think I am sharing him with you,\" Becca declared.\n\n\"I've got 69 reasons that say you will,\" Surisa fired back.\n\n\"Oh really, where did you dig her up Louis,\" Becca asked hands on her hips now.\n\n\"Bangkok,\" I said.\n\nTime of the Wind Swords:\n\nThe satellite picked up the drop in barometric pressure as the storm cell appeared out of nowhere. The wind speeds picked up from a gentle breeze to gale force in an unimaginably short time. Alarm bells were tripped in seven nations as the typhoon blew up in the South Pacific. The information went up the chain of command and the satellite was repositioned to follow the course of this unprecedented event. The clouds thickened, grew and began to rotate. They were registering an impossible amount of lightning activity as the typhoon grew from a category one to three in hours instead of days or weeks. \n\nThe brightest minds that worked in meteorology were brought in to witness and try to predict the course of this monster. By the time the sun had set there it stood, the thing that should not be, a class five typhoon that was hovering stationary in the middle of the ocean. It defied every rule of nature and yet there it was. Typhoon and hurricanes moved and grew in strength that was how it happened. But this, this thing disregarded all the rules as if it were exempt. The Archimedes had been launched from Seoul South Korea by a combined force of military and scientific agencies. It had the latest instrument packages that money and tech could buy and create. It was piloted by the most skilled combat veterans in the region. On board were three of the cleverest men working in the South Pacific. They were determined to see what the hell was going on. The satellite feed was piped directly to the aircraft as it headed straight for the eye of the storm.\n\nThe two pilots, with a combined twenty thousand hours of flight time, were Colonel James Fitzgibbons better known to his friends as Fritz and Major Thomas Longshadow. Either one of them was qualified to man this mission but they had both volunteered. There were enough PhDs in the back to cover the entire English alphabet once over and half way through again. The five man scientific crew was headed up by Professor Ameritas Willam Beckett. While he may be old in the tooth and crotchety as all hell he was also the most brilliant minds when it came to unusual weather phenomenon. With him was his wife Amanda, Rudolf Zeiss, David Goodspeed and the plucky Amelia Rivers. They had been working on the aftermath of the event that decimated the southern coast of Tokyo. It was pure luck they had returned to Korea for a refitting of the Archimedes.\n\nIt took them two hours to reach the edge of the storm and it was a monster. It had nearly doubled in size and yet remained in a fixed position. The pilots plotted a course that would allow them to use the storm's rotation in their favor and hopefully avoid the worst of the storm had to offer. They angled in for insertion and crossed their fingers. The pilots called out to the rear by the numbers.\n\n\"We are ready for insertion, buckle up it's going to be a bumpy ride,\" Fitz called back over the intercom.\n\n\"She's a beast,\" Longshadow commented as they entered the typhoon.\n\nIt was the longest twenty minutes of their lives. The wind outside shrieked as they were carried along the air currents towards the eye of the storm. The pilots and scientific team were jumbled, shaken and vibrated until they felt like they were coming apart. Then there was the sudden silence and stability as Archimedes entered the eye. The pilots corrected their course and turned toward the very center of the storm. The scientists unhooked their harnesses and raced to the cockpit for the first view of what was behind this impossible storm. The five of them huddled there staring in disbelief at the heart of the storm.",
        "\"Jesus Christ,\" Fitz gasped.\n\n\"No way,\" Longshadow cried out.\n\n\"As I live and breathe,\" William said as he crossed himself.\n\n\"Is that what I think it is,\" Amanda asked not believing her eyes.\n\n\"Dear God... in the water,\" Amelia shrieked.\n\n\"Impossible, that's just not possible,\" David wept.\n\nRudolf Zeiss was the only one to remain silent at the unimaginable scene before them. The blazing angelic figured hovered in the eye of the storm. Its glittering crystalline wings must have spanned miles across and the burning sword in its grasp a mile from the pommel to the tip. The unspeakable entity thrust up from the crushing depths was a mass of tentacles, eyes, mouths and a perpetually shifting form that made the mind lose focus and push it towards madness. The pilots desperately tried to reenter the safety of the typhoon but a single casual gesture from the angel rent the plane and its occupants to dispersed atoms. Archimedes perished at the whim of the Watcher and barely a footnote in its perception or memory.\n\n\"Pray continue,\" Dagon, son of the Dreamer in the Depths said.\n\n\"Twice he has thwarted me,\" the Watcher roared.\n\n\"Did you expect him to just roll over and die? He is protecting his family after all. I have discovered that mortals are hard wired to do so. I find his activities quite entertaining as does my father and his allies. We will not intervene one way or the other. The other Nameless have been ordered to cease any and all interaction with him or any of his kindred. I am afraid you are on your own Watcher.\"\n\n\"That is fine. I feared the Key and Gate would aid him in this final encounter. I will crush him. He will be less than ash when I am done with him.\"\n\n\"All of this over a single demon, true she was the First to Fall. But is your own damnation bride price enough for vengeance? He wasn't even the one who burned the tome. I fear your anger is misplaced.\"\n\n\"I have already dealt with that one. I will savage his heart and rend his soul and only then will I let him perish.\"\n\n\"You Watchers really are drama queens. I have spoken my part for the Nameless. Go and do your will Michael and when you Fall, I will be there to embrace you.\"\n\nThe storm broke apart as suddenly as it manifested. The satellite watched its death and all those at the air base and worldwide mourned the passing of those brave souls that had dared to venture into its unknown heart. \n\nThe storm struck suddenly and forced the people in the city to run for cover. It was just about closing time at the main branch of the library. Lily was just finishing up when the lights flickered all over the library. She looked around and shrugged it off. Must be the storm, she thought. Her ever-present shadow, the Inquisitor, wasn't so sure. He took out the relic from around his neck and settled his hand on the butt of his gauss pistol. Lily shivered as the temperature dropped but there was no reason for it. She heard a gurgling sound and spun to see her protector drop dead to the hard unyielding floor. She looked up at the man in the long coat and instinctively took a step back.\n\n\"Hello Lily,\" Michael said. \"We need to talk.\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "magic",
        "tentacles",
        "anal",
        "double penetration",
        "threesome",
        "mother",
        "son"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/spell-crook-and-handle-pt-07"
}