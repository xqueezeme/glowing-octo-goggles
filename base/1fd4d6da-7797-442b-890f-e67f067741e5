{
    "title": "Seriously Inconvenienced Ch. 05",
    "pages": [
        "The chronological order of my stories is as follows:\n\nTodd & Melina series, Interludes 1-5, Sperm Wars series, Russian Roulette series, Case of the Murdered Lovers series, Case of the Murdered Chessplayer series, The Swap series, Interludes 6-10, The Murdered Football Player Series, Case of the Black Widow series, Teresa's Christmas Story, The Case of the Black Badge series, A Case of Revenge series, Teresa's Summer Race, The Trilogy series, Dark Side Of The Force series, Caught In The Act series, Case of the Murdered Bride series, The Credit Card Caper series, The Hot Wives Investment Club series.\n\nSeriously Inconvenienced, Ch. 1-5.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, extreme language, and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial or racist language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 19 - The Spark of Vengeance\n\nAt dawn on Saturday, November 22d, I left the smoldering remains of the disaster and went to see my family. There were hugs and tears and offers of condolences, but also one moment of happiness: my daughter Carole reached for me when I came through the door and hugged me tightly, refusing to let go as I held her. No matter how bad it was, hearing the word \"Da-da\" again and again from my healthy, unharmed baby girl was wonderful.\n\nAfter eating some breakfast (and feeding Carole half of it), I returned to the scene. Fire Marshal Zoe Singer was there. \"My arson team is on the way.\" she said.\n\n\"Call 'em off.\" I said. \"It definitely is arson, we'll never catch the perps, and I don't want the BAFTE crawling around my home.\" I knew that Zoe would be obligated to call in the BAFTE if and when she found remnants of explosives in the cars, so I spared her the trouble by preventing her from finding anything. And, except for the Chiefs of the Police and Fire Departments, I was the only person who could possibly call her and her team off the case.\n\n\"If you say so.\" Zoe replied, then got on the radio and told the arson team to hold off for the time being.\n\nAfterwards, as we looked at the heaps of ashes, I saw tears in Zoe's eyes. \"This is where we-\" she started, but didn't finish. The death of my home had meaning to more persons than just me. I put my arm around her and she nestled into my side for a moment. Then I showed her where the tunnel to the underground wine cellar was, and admonished her to keep people away from there lest they fall and be injured. Zoe marked it off with crime scene tape and didn't let anyone on her arson teams go there. They may not even have known what was there.\n\nMoments later, the police cordon admitted another person: FBI Special Agent In Charge Jack Muscone. I had rarely seen him look so somber as I introduced him to Zoe.\n\n\"Commander Singer,\" said Jack, \"I wish I was meeting you under much better circumstances. I also need you to know that I'm going to have my agents take over this case. We consider it an assassination attempt upon our FBI Consultant, Commander Troy.\" In addition to thinking that he was keeping the BAFTE out of the equation, Muscone was not saying out loud that the FBI also considered this an assassination attempt upon a Deputy Director of the CIA's Directorate of Science and Technology, that being my wife.\n\nZoe acquiesced, actually relieved about it, as I said \"Excuse me a moment.\" I began going around the far side of The Cabin, then into the ashes.\n\n\"Don!\" Zoe yelled. \"Be careful! It's still hot, and you might fall through a weak floor space.\"\n\n\"I'm not going far.\" I said, then saw what I wanted to see. There had been a wall safe in the upstairs bedroom closet, installed by me to keep a few valuables while I was at The Cabin. I saw a corner of it amongst the collapsed wall of the house. Wrestling it out, I found the safe to be scorched but intact.\n\n\"What's that?\" Jack asked as he and Zoe came up to me. The combination wheel turned, but the lock handle was jammed, and it took a strong effort to push it back. The safe still wouldn't open.\n\n\"There is something very valuable in here.\" I said. \"Here, Jack, hold it steady while I use this here red crowbar for something worthwhile.\" Jack held the safe and I jimmied it open fairly easily.\n\nInside, the papers that had been in there were damaged, and the cartridges in the revolver I had in there had exploded, rendering the device inoperable until a gunsmith could repair it. Fortunately, a smaller fireproof box inside had held up, and inside that box were some metal insignia from my ROTC and Army days, and some coins... including the one in particular that I was seeking: the ancient Roman coin that my great-grandmother had left Germany with while escaping the Nazis. \"Thank God, it's here.\" I said. I showed Jack and Zoe the coin, explaining its deeply personal meaning to me.\n\n* * * * * * * * * * * * * * * *\n\n\"I'm absolutely sure that this was an attempted murder.\" I said. It was 11:00am and I was in the Chief's conference room with the Chief, Laura and Jack Muscone. Cindy was at The Cabin, working with Lt. Tanya Perlman, the Crime Lab, and the Arson team, and had been doing so all morning. I'd told Cindy to keep the Fire Department teams away from both destroyed cars, and Tanya Perlman and Police Auxiliary Officer Barry Oliver were personally working them 'at the request of the FBI', that being Jack Muscone again..\n\n\"I just checked with the Power Company people, and they think the transformer was deliberately damaged, which got us out of the Mountain Nest and into The Cabin... right where they wanted us.\" I said. \"Whoever left that message in the book about 'setting fire to our rooms' along with that picture of her with a target on my wife's face... obviously they followed their threat with execution.\"\n\n\"Just two questions.\" said the Chief. \"First, why not just set fire to the Mountain Nest, where you've been living for months now? And second, why warn you of the plot to set your house on fire? Why not just do it?\"\n\n\"To answer your first question: the Mountain Nest is virtually fireproof.\" Laura said. \"It's concrete and brick, and the other materials inside are fire resistant; it was built to not burn down by a previous resident who was paranoid about fire. The several fire detectors in the home are wired into the alarm system, and The Cabin is not as well protected in that way.\n\nLaura continued, almost getting carried away: \"There is much less shrubbery and a lot more lighting at the Mountain Nest, which is gated, and there is also a path down to the University from the back deck of the Mountain Nest, making for an easy escape route. I don't think they expected us to try to go straight down the mountain behind The Cabin, though my husband immediately realized it was our only hope. Last but not least, The Cabin is far more isolated, and was simply a much easier target for what they did... tried to do to us.\"\n\n\"As to warning us,\" Laura said, \"maybe its someone's ego again?... Don... Don? Helloooo, Don...\" Needless to say, I had gone into a reverie.\n\n\"I hear you.\" I said, though my voice sounded tiny and far away. \"I was just realizing something... several things.\"\n\n\"Do I need to call in Lieutenant Ross for some blue crowbar treatment?\" Jack said, trying to be humorous.\n\n\"She'd love it if you did.\" I said. \"But I was just realizing... if I'm right, this is so much larger... so much deeper than we thought.\"\n\n\"What do you mean, Crowbar?\" asked Chief Griswold, who was peering at me with abnormal intensity.\n\n\"Let me demonstrate this way.\" I said. \"Laura, who do you think is behind this?\"\n\n\"Henry Wargrave.\" Laura said. \"Who else could it be?\"\n\n\"And you reeeeeealy wanna kill him, don't you?\" I asked my wife.\n\n\"You bet your ass I do-\" Laura said, then stopped. \"Why? What are you getting at?\"\n\n\"Laura, Jack, you've both been tracking Wargrave for some time.\" I said. \"Tell me, is this his modus operandi?\"\n\n\"I'd say it's not out of the realm of what he might permit himself to do.\" Jack said. \"He's had people killed before, the FBI is sure of it. Mostly in other countries, though.\"\n\n\"He's absolutely ruthless, Don.\" Laura said. \"As much or more than Oldeeds was.\"\n\n\"But he's not this sloppy.\" I said. \"Leaving things to chance that we might get out alive?\"\n\n\"He had his people rig your cars with explosives.\" said Jack Muscone. \"Perlman has already told me they've found residue of 'plastiques' in the cars. Enough to blow out the bulletproof windows of your Police SUV.\"\n\n\"Which reminds me,\" said the Chief, \"we're already outfitting you a new SUV, even more armored. The insurance plus a little extra, at the insistence of the Town & County Council, is paying for it. Sorry to interrupt, Jack. You were saying?\"\n\n\"Just that they expected you to get out, go to your cars, then they'd blow the car that you took up, with you inside it.\" Jack finished.\n\n\"Doesn't make sense.\" I said. As they looked at me, I said, \"That would suggest they were watching, but didn't bother to shoot us when we came out of the house. That would be worse than sloppy.\"\n\n\"So what are you suggesting?\" the Chief asked. I could tell in his face that he was mentally getting to the crux of the problem, if not the answer.\n\n\"Just this.\" I said. \"First, in all the study I have done of Henry R. Wargrave, I have not found a single instance of where he has harmed a child. Not one. Yet our children were definitely put in mortal danger by the fire.\"\n\n\"That's true.\" Jack Muscone said. \"And in addition to that, Wargrave has built orphanages in many places in the world, and full wings of children's hospitals, including at University Hospital here.\"\n\n\"First time for everything.\" Laura said, meaning the attempt to murder a child.\n\n\"Maybe,\" I replied, \"but I seriously am doubting it at the moment. Second, he would know damn well that if either Laura or I survived that fire, his own life would be forfeit if he ever showed himself in public again. Laura said as much to him. And he somewhat backhandedly reassured me he was not after our children in our past verbal sparrings.\"\n\n\"Tie this in a bow for the FBI and CIA people in the room.\" the Chief astutely said. \"I don't need your skills to see that they're not feeling you on this.\"\n\n\"Yes sir.\" I said. \"Guys, what I'm getting at is that Wargrave may not have been behind this. In fact, it could be someone trying to get us to do the dirty work of eliminating Wargrave for them.\"\n\n\"What?!\" cried out three voices in unison.\n\n\"Think about it.\" I said. \"Laura, you have the equivalent of a license to kill, and you've cleaned up one asshole member of the Corrigan Cell already, to my utter delight. But if they'd gotten one of us and our children, the other would've done whatever it took and damn the consequences to take vengeance for our children's lives. And as such, Wargrave would be dead, another of the Corrigan Cell cleaned up.\"\n\n\"400 years ago...\" Jack said, then realized that talking about burnings at the stake would be ill-timed. \"Oh, sorry, that's not the right thing to say right now.\"\n\n\"I'll laugh later.\" I said, understanding Jack's meaning. \"After I take care of this bastard and the remnants of his rogue CIA cell.\" My eyes became jet, and my reverie was not one any decent person wanted to know about.\n\n\"What are you going to do, Crowbar?\" asked the Chief.\n\n\"I am going to finish off the Corrigan Cell, once and for all.\" I said severely, then said brightly, suddenly changing my mood like Shayla Belle would do while talking, \"But first, the four of us are going to the Cop Bar for lunch! We're still alive, and I for one am starving. By the way, Jack, the owner named your favorite item 'Jack's Double Cheeseburger' after you.\"\n\n\"Well, that's nice of him.\" Muscone said. \"What did he name for you?\"\n\n\"The flatiron steak.\" Laura said. \"It's now 'The Iron Crowbar's Flatiron Steak' on the menu.\"\n\n\"Complete with 'Griswold's Grizzly Fries' and 'Gillem's Firehouse Hot Wings', named after the Police and Fire Chiefs, respectively.\" I said. The Chief blushed, but his mustaches were twitching with merriment.\n\n\"All this talk is making me hungry.\" said Jack. \"Let's go.\"\n\n\"By the way, Laura,\" I asked as we got up. \"President Wellman is having his pre-Thanksgiving parties next week. When are we invited?\"\n\n\"Monday night.\" Laura said. \"That's when he's having the Council and the Chief and us and some of the Town businesspeople there. Tuesday night is the Faculty reception, and you and I will be doing it all over again.\"\n\n\"Would you do me a favor?\" I asked. \"Get with him on the guest list for Monday night. I want to make sure certain people are there...\"\n\nPart 20 - Plan of Action\n\nAfter lunch, Laura and I went by Todd and Jeanine's house. Upon my observation and comment, Jeanine showed me a new emerald ring on her finger, gushing that Todd had given it to her the evening before... before all hell had broken loose in the early morning hours.\n\nFor himself, Todd was playing some game with Carole, bouncing her on his knee, and he had his little cousin laughing merrily. When she saw me, though, she reached out and I took her into my arms. I got another strong baby hug, and Carole didn't want to let me go.\n\n\"She's going to be clingy for a while.\" Laura said. \"She knows that something bad happened last night, and she wants to keep you very close and safe.\"\n\nI had intended to talk to Todd and move out on my mission quickly; my wife's words changed my suppositions. I spent the next half hour holding my daughter while talking to Todd, Teresa, Jeanine and Laura about anything but fires, and also expressing my gratitude for them keeping Carole and Jim for me and Laura. Jeanine took a picture of me holding Carole; I still have that picture in a frame on my desk in my office.\n\n* * * * * * * * * * * * * * * *\n\nTodd drove with me to the Crime Lab building, where we found Barry Oliver, Tanya Perlman, J.R. Barnes, Christina Cho and a couple of other techs working. I endured the condolences over the loss of my home, then quickly got down to business.\n\n\"Definitely arson.\" Tanya Perlman said. \"Something fast burning, maybe gasoline, on the front walls of the house, definitely all over the door and in the garage. Plastic explosives were injected into the door panels of both cars, maybe some underneath. Those cars were rolling bombs.\"\n\n\"Don,\" said Barry Oliver, \"can I talk to you privately?\"\n\n\"Sure.\" I said. Barry, Todd and I went into the main office that was now Dr. Woodrow's.\n\nBarry said \"I found the remnants of the device in your wife's car that set off the explosives with a charge to a blasting cap. I'm not discussing this with the rest of the techs unless you tell me to.\"\n\n\"Probably a good idea to keep it quiet.\" I said. \"What did you find out about it?\"\n\nBarry replied \"The device was rigged so that it would've gone off about one minute after someone sat down in the driver's seat. It also had a type of fuse that set the explosives off when the device got really hot, meaning while it, the car, and the house were all burning. They thought of both contingencies: that you might escape by the car, or that you might not make it out alive, and so the bombs were set off to prevent us from getting more information about them.\"\n\n\"Geez.\" said Todd.\n\n\"And there's an alarm that would go off if they'd gone into the garage of The Cabin.\" I said. \"Meaning that this was done ahead of time. Planned in advance all the way.\"\n\n\"Uncle Don,\" Todd said, his voice eerie, \"can I go up and see it?\"\n\n* * * * * * * * * * * * * * * *\n\nWe stood on the driveway before the house. We could now see the Town and the farms to the west of the river. I saw a train coming down the track out of the western horizon.\n\n\"Those bastards.\" Todd said, his eyes looking over the wreck and ashes. The cars had been towed away, only support posts and ashes remained.\n\nI knew he'd rarely been to The Cabin, so this show of feeling was unexpected. As if in answer to my unspoken thoughts, Todd said \"Those bastards tried to kill my baby cousins, Uncle Don. Who did this? I want to kill them.\"\n\n\"I know how you feel, Todd.\" I replied. \"I'm calling dibs on killing them. But you can help. Call Barry Oliver and let's meet him at your offices.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Uncle Don, you've met Takaki Taichi, whom we call 'Taro'.\" Todd said. Takaki bowed formally to me in Japanese style. Perhaps to his surprise, I returned the bow politely.\n\n\"Yes, Taro-san.\" I said. \"I've heard great things about the work you are doing for my nephew and Mr. Oliver here. I'm looking forward to working with you on something of vital importance.\"\n\n\"You are too kind, Commander-san.\" Taro replied in good but accented English. He was a native of Japan. \"I am honored to be of service to the Iron Crowbar. How can I help you?\"\n\nI discussed the remote control plans that I'd obtained from Alicia Foster and given to Barry before. I told what I wanted done, that I wanted a truck to be rigged to be driven by remote control. I explained my plan further.\n\n* * * * * * * * * * * * * * * *\n\nSaturday night. The power was back on at The Mountain Nest, so we went back home with the kids. Cindy, Teresa and Todd all volunteered to stay with us, and to my surprise Laura asked Cindy and Teresa, and also Jenna, to stay overnight, while telling Todd to go home and reap his 'reward' for that emerald ring he'd bought his wife. Carole was happy to be getting so much attention, especially from her buddy Cindy. I realized as I watched them that Laura was more nervous than she was letting on.\n\n\"I put in the order with Ward Harvester that you wanted, through intermediaries.\" my wife told me privately. \"It'll be ready for pickup Monday afternoon. Also, the guest list will be as you wanted it for Monday night; in fact, it was already that way, so I didn't have to say much.\"\n\n\"Good.\" I said. \"I'll have my guys pick the truck up at Ward Harvester.\"\n\nLater that night, I found myself dozing off as I talked 'shop' with Teresa and Cindy, solving all of the Police Department's problems in one sitting... or not. Laura was attending to the babies and pretending to talk with us, though she was a million miles away, it seemed.\n\nWe all headed to bed. Cindy was sleeping in the baby room, having insisted upon doing so, and Teresa was in the guest room. I headed to the master bedroom to get some sleep. \n\nI did dream about the fire, but not too much. I also dreamed about Zoe, and Molly and baby Ross, and I had a dream about being at the 'Vision' headquarters with voices talking around me as P. Harvey Eckhart looked on and multi-colored lights flashing... then back to the orange light of the fire at The Cabin...\n\nI woke at dawn, realizing that I had gotten some sleep and that I felt refreshed. I looked up to see that Laura was sitting at the window... she had not been able to sleep all night, and she was exhausted.\n\n* * * * * * * * * * * * * * * *\n\nThe back warehouse of Arrowpoint Solutions, Inc. was the only building with lights on. Inside, Taro and Barry were working with the large refrigerated truck.\n\n\"We can control it pretty well in a straight line.\" Barry said. \"But I just can't get it to turn fast enough.\"\n\n\"Leave that to me, Barry-san.\" Taro said. Barry noted that Taro looked exhausted. \"I have some additional things I can do. No, I will not say anything about what they are until our mission is complete, but I have been working on a special guidance system for some time.\"\n\n\"Okay, I look forward to seeing it when you have it ready for me.\" Barry said. He knew that Taro did not like to reveal things until they were worked out and error-free. He left it alone, knowing the measure of Taro's brilliance and successes so far.",
        "Part 21 - The Party and the Party\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the redheaded reporterette from Courthouse Square. \"Channel Two News has learned that the fire on the mountainside that destroyed the home of Police Commander Donald Troy was very likely arson and an assassination attempt. The FBI has taken over the case, saying only that they believe the arsonists have been crossing the State Line in and out of the County, thus making this a Federal case, but would not confirm any other details, including the intended victim of the assassination attempt.\"\n\nShut the fuck up, Bettina, I thought silently as I watched. Have I mentioned that despite having some really good sex with Bettina Wurtzburg, I was still not a fan of the Press?\n\nSeveral still photographs of the fire, taken by citizens all over the County, were being shown as Bettina continued: \"Citizens have sent in photos taken of the fire, which could be seen from miles away, even over the top of the mountain by people to the east. This was once the home of the late CEO of Crown Chemicals, old Mr. Bonniker, and there has been speculation that the arsonists were part of the environmentalist terrorist group 'Proactive Citizens of Greenworld'.\"\n\n\"However, Commander Troy himself stated that he does not believe it was environmentalists from an incident a decade ago that set the fire. Commander Troy also stated his gratitude for the Town & County Fire Department, who he said acted with the highest professionalism and whose actions prevented any brush fires that might have caused a larger threat to other homes and to the University below the house.\" Okay, that part was more acceptable, I thought to myself. I might give Bettina another good rogering, after all...\n\n* * * * * * * * * * * * * * * *\n\nMonday night, November 24th. I escorted Laura to the home of Dr. Sidney Wellman, President of the University. Sheriff-Elect Daniel Allgood and his lovely wife Melina rode with us.\n\nI endured a great many offers of condolences upon the loss of my home, accepting them as graciously as I could then trying to change the subject as quickly as possible. I understood the sympathy and the social graces in their words, but I simply did not want to deal with all that for the time being.\n\nAbout an hour into the party, I was in the back library room. Also in the room at the time were President Wellman, who was talking to BOW Enterprises CEO Todd Burke and Dynacorp potential heir Seth Warner. I noted that Town & County Councilman and pastor of First Baptist Church, Raymond Westboro, was talking with Daniel Allgood and T&C Councilman Thomas P. Cook. I'd been chatting with Dr. Bonnie Karpathian when Councilman Reginald B.F. Lewis joined us. I took the opportunity to engage Councilman Lewis in conversation.\n\n\"I have to admit,\" said Lewis, \"I didn't know if you were going to give Precincts the effort I wanted, but I've been pleasantly surprised. And your idea of the Old Mill for the 2nd Precinct, I've got to admit, Commander, that was a stroke of genius. It's working out much, much better than I had originally hoped it would.\"\n\n\"Thank you Councilman.\" I said with alacrity, hoping that my voice would carry, and it did. \"As you know, my background is in I.T., and tomorrow night I'm going to be personally overseeing the installation of the secure I.T. and phone lines there. We're going to work through the night, and should be finished by Wednesday morning.\"\n\n\"You can't do that during the day?\" Lewis asked, his voice also carrying.\n\n\"Since it's the secure lines, the fewer people, the better.\" I said. \"I'll have our people who have the highest clearances working, and by doing it through the night we'll maintain secrecy better.\"\n\n\"But you'll have protection, there?\" asked Lewis, \"You'll have some patrol officers there in case there's trouble?\"\n\n\"No sir.\" I said. \"Nobody will know we're there. We're keeping it quiet. I'm not anticipating any trouble, and we can call for help if we need it.\"\n\n* * * * * * * * * * * * * * * *\n\n\"We've got them!\"\n\nIt was Myron Milton. He had burst into my office with the news, forgetting decorum. It was Tuesday morning, November 25th, about 1:30am.\n\n\"We just got the cellphone pings- oh, sorry Commander, I didn't even knock.\"\n\n\"And if the news is as good as I think it is, you don't need to.\" I said, letting him off the hook.\n\nMyron put a large map on my desk, facing me. \"Right here, just to the west of the State Line. There's a small farmhouse here, which is used by workers for BigAgraFoods when they're harvesting the crops. Right now, it should be empty. But three of the stolen cellphones from the bank job lit up there about midnight, then a burner phone lit up for nearly 30 minutes.\"\n\n\"Good.\" I said. \"Keep this quiet, Myron. I'll let the proper people know.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 4:30am Teresa Croyle, wearing all black, pulled the car off the main road and stopped briefly, letting off the two black-clad, fully masked men. Seth Warner and Teddy Franklin crossed the road and ran straight down the road to the farmhouse nearly a mile away. Todd Burke stayed in the car with Teresa.\n\nThe white van was parked under an awning in the backyard. Not a sound could be heard as the young men crept up to the vehicle. They very gently put tracking devices under the bumpers, which had magnets enabling them to stick tightly to the steel frame of the van. Two in back, one in front. Only one of them clanked as it was attached. The young men retreated back down the road, and they only had to wait a moment for the car coming east down the road to stop and pick them up.\n\n\"How'd it go?\" Teresa asked as she crossed the State Line back into her home County.\n\n\"Great.\" said Teddy.\n\n\"The party never stops in my uncle's Town & County.\" said Todd. \"The tracking transmitters will work... if they're not detected. By the way, why did my uncle want us to plant those devices?\"\n\n\"He told me so that if the perps tried to run before the FBI was ready to go in after them tomorrow, we'd be able to track them.\" Teresa replied.\n\n\"Why not just go get them now, tonight?\" asked Seth Warner.\n\n\"That's what I wanted to do.\" said Todd, menace in his voice.\n\n\"Which is why your uncle told me to keep you in the car.\" said Teresa. \"As to why... maybe the Feds aren't ready to raid them yet, or maybe they expect more people to show up. At any rate, the Commander asked me to drive by the Old Mill and time the drive...\"\n\n* * * * * * * * * * * * * * * *\n\n\"What was that?\" Keeler said. He had been dozing when he thought he'd heard a metallic clank from somewhere.\n\nKeeler's voice awakened the youngish leader of the group. \"What was what?\" he hissed.\n\n\"Nothin'.\" Keeler said, looking out the back window, not seeing anything in the darkness.\n\n\"You idiot, did you fall asleep?\"\n\n\"No, of course not.\" Keeler said, not admitting that he had indeed dozed off.\n\n\"Keep watch, old man. You're not relieved until dawn.\"\n\nKeeler looked out the window, then went to one of the front rooms and looked out. He could hardly make out the front drive that led to the road. He turned back inside, needing to use the bathroom, and did not notice the two figures in black that merged with the pre-morning darkness as they ran swiftly down the road...\n\nPart 22 - Murder in Cold Blood\n\n\"So, did you get the device installed?\" Barry asked Taro late on the afternoon of Tuesday, November 25th. Taro had been in his office most of the day.\n\n\"It is ready to go.\" said Taro. \"I will handle it personally.\"\n\n\"Taro, are you okay?\" asked Barry. \"You're looking tired. You should take the rest of the week off for Thanksgiving, even if you said you don't want to. Why don't you come to our place Thursday? Tanya is a good cook.\"\n\n\"I am fine, my friend.\" Taro said. \"And I appreciate your kind invitation. But perhaps you are right. I will stay at home and rest. Would you do me a favor, Barry-san?\"\n\n\"Sure.\" said Barry.\n\n\"Tomorrow, please mail this letter to my father.\" Taro said. \"And give this scroll to your Commander Troy.\"\n\n\"Uh, sure, but why don't you do it?\" Barry asked.\n\n\"Ah, but I will be resting, as you have advised.\" Taro said, a smile forming on his face.\n\n\"Okay, sure. I'm heading home myself. See you tomorrow.\" said Barry.\n\n\"Sayonara, Barry-san.\" Taro replied. Barry left the office, feeling strange about Taro's actions.\n\nTaro remained in his office for a long time, until the darkness of the night had descended. He thought of his father, one of Japan's greatest men, and the family heritage of ten thousand years, a lineage of the greatest nobility. Taro was the second son of his father, and his father had been angry when Taro had not followed his elder brother into the family business, but had become an engineer and emigrated to the United States.\n\nTaro had felt the shame of what his father had considered betrayal of the family heritage, and he knew he had to make things right. For his soul's salvation, he would make things right.\n\n* * * * * * * * * * * * * * * *\n\n\"Yes,\" Todd said into the phone. \"We're set. It's all good.\" He hung up as his wife came up to him.\n\n\"Who's that at this hour?\" she asked.\n\n\"Oh, nobody.\" Todd replied. \"Is dinner ready?\"\n\n\"Just about.\" Jeanine said. \"Why don't you get Doug ready and I'll change Jack? Wow... only two babies... slow night tonight.\"\n\n\"Yeah, but it's been fun with Carole and Jim.\" said Todd. \"Carole thinks its her job to be their second mommy...\"\n\n* * * * * * * * * * * * * * * *\n\nI entered the semi-darkened warehouse. The Ward Harvester truck was near the entrance. Taro was next to it.\n\n\"Taro-san.\" I said. \"Here is the device you needed. It's tuned to the frequency of the transmitters, so you'll know what truck it is.\"\n\n\"Thank you, Commander-sama.\" Taro said. I was struck by the '-sama' title, it was addressing me as Taro's superior. Taro noticed that I had realized it, and the honor being done to me.\n\n\"You are a very great man doing very great things, Commander-sama.\" said Taro. \"I am honored to work with you tonight.\"\n\n\"Thank you, Taro-san.\" I said. \"I'm honored to be working with you, also.\" Why the formality? I wondered as I looked into the truck, seeing some equipment in the center, attached to the dashboard. \"So is that the remote control?\"\n\n\"It is part of it, Commander-sama.\" said Taro. \"I had trouble making your schematics work, but I have found a better solution. With this tracking device, it will work well.\"\n\nI instinctively knew what was going on. Taro extended his arm, a scroll in his hand, rolled up and tied with string. I took it with both hands, formally.\n\n\"Please, send that to my father.\" said Taro. \"I think you should return to the Old Mill and get ready, Commander-sama.\"\n\n\"It will be my honor to make sure your father receives this, Taro-sama. May the kami guide you in your mission tonight.\" I said, returning the honor. I bowed and Taro returned the bow, then I turned and left.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, we've got the word.\" said the leader of the group. He and his two counterparts were dressed in all black. Gruff was dressed in a flannel shirt and blue jeans. Keeler was dressed in black pants and a blue pullover sweater, not yet changing to the uncomfortable black shirt. Skinny Beard was dressed in his normal college attire. \n\n\"The attack is on.\" said the Leader. \"We're going to hit the Old Mill at 4:00am, kill the Iron Crowbar and his team, set the building on fire like we did the Iron Crowbar's house on the hill, then pull out within ten minutes. We will not be coming back here, but will drive on south to Coltrane County, then west back into this State and then drive west until we hit the Bay Area in California. We'll disperse there. Keep your 'blue' burner phones available for when the Boss calls us back into action. Any questions?\"\n\n\"Skinny Beard, don't you have to get dressed?\" Keeler asked, contempt in his voice.\n\n\"He's not going with us tonight, old man.\" said the Leader, equal contempt in his voice... for Keeler. \"Skinny Beard, I know you want to kill the Iron Crowbar yourself, but the Boss wants to make sure this is done right and done fast, and your poisons won't be what we use. The Boss has been very happy with your work in this County, and he's going to have some good compensation for you. He wants you to drive to the City tonight. Leave right now, get in touch with our contact in the safehouse there.\"\n\n\"Yes sir.\" said Skinny Beard, not questioning the orders, though disappointed that he could not administer the death poison to the Iron Crowbar that he'd so joyously delivered to Pete Feeley, Tim Dawdle, Hugh Hewitt and the others. His days of killing were not over, though. He realized he had better things ahead of him. He also knew what was going to happen, and was glad he did not have to witness it nor be any part of it.\n\nSkinny Beard left, taking the old car that had also been parked behind the house, heading east. He'd go by his dorm room at the School, pick up his things, and be off to the City by the time the mercenaries pulled out for their mission.\n\n* * * * * * * * * * * * * * * *\n\nAfter taking Laura home from Dr. Wellman's reception, with Teresa and Cindy staying with her again, I went to Police Headquarters.\n\n\"Okay, Hugh,\" I said to Senior Sergeant Hewitt, the SWAT Team leader, who was dressed as a technician. \"Is everything ready?\"\n\n\"Yes sir.\" Hugh said. \"Are you sure four of us is enough?\"\n\n\"Yes.\" I said. \"I'm anticipating only three or four of them to attack us tonight. We should have plenty. Lt. Michaels has the other four on standby here at Headquarters, just in case. \n\n\"Sounds good. We're ready.\" Hugh said. The weapons were already in the van, and so it looked like four technicians and myself were climbing in without arms. We believed we were being observed, but though I watched carefully, I saw no one. And that is what I expected to see when the real 'Moriarty' was involved.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, that was good.\" said the Leader after the third practice of their movements for the raid. \"Let's get the weapons in the car. Gruff, you're driving. Sheets, you handle the door and take the rearguard.\"\n\n\"You sure have more than enough firepower in that van.\" Keeler said.\n\n\"We're carrying it all.\" said the Leader. \"As I said, we're not coming back here.\"\n\n\"What do you want me to do?\" Keeler asked.\n\n\"Nothing.\" said the Leader. \"You're not going with us. You're staying here.\"\n\n\"What?\" Keeler said. \"But you said you're not coming back here!\"\n\n\"That's right, you piece of shit.\" the Leader said. A semi-automatic pistol appeared in his hand, a .22 Magnum with a silencer, which the thug quickly raised to the side of Keeler's head. \"We're tired of your shit and your attitude. End of the line for you, old man.\" With that, the Leader pulled the trigger and the bullet drove through Keeler's head from left to right. 'Santa Claus' dropped to the floor, dead... murdered in cold blood. A second shot to the eyeball made sure.\n\n\"Well, that puts us on the 'naughty' list.\" said the Leader, grinning, having done to Keeler what he'd wanted to do for some considerable time. The others laughed, then the Leader said \"Let's get going.\"\n\nPart 23 - Night of the Samurai Warrior\n\nAt 3:45am the van pulled out of the driveway and turned east onto the main road. Within some minutes they'd crossed the bridge over the river that was the State Line. Gruff kept a sharp eye out as he drove the legal speed limit, but failed to notice the patrol cruiser that was hidden well inside the brush, some distance from the road.\n\nSergeant Rudistan and Sr. Patrolman Morton did not speak into a radio, but only pushed the talk button five times, breaking static. I heard the breaks on my police radio at the Old Mill.\n\n\"Okay, they've crossed the State Line.\" I said to the SWAT Team. \"They're coming.\" It had been a busy few hours at the Old Mill, as we had a couple of lights on and I really did install some servers, though not the secure ones... those had already been put in place, days before.\n\nIt was all a ruse. We were going to see who would ambush who.\n\n* * * * * * * * * * * * * * * *\n\nTakaki Taichi waited in the truck. His body was racked by pain, which was now his constant companion.\n\nDon't think of the pain, he thought to himself. What is pain but a privilege for a samurai to bear. It will not be long now, and the pain will go away. Bear the pain, as the samurai warrior you are, the warrior you are meant to be, that your father wanted you to be...\n\nHe heard the breaking of the radio, followed by the words \"Go Time!\" on his radio, set to encrypted Channel 5 police radio. He pulled the truck out onto the highway, coming north on the bypass.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, Gruff,\" said the Leader after taking a radio message, \"take the bypass south to Martin Luther King, Jr. Avenue, go east on MLK and drive right into the Old Mill parking lot. They're there, nobody else is. Sheets, anything on Police Radio?\"\n\n\"No, not yet.\" said the black-clad mercenary. \"Their encrypted channel broke static for a second, but I didn't catch anything. Probably nothing.\"\n\n\"Keep your eyes out, all the same, Gruff.\" said the Leader. \"If you see any police patrols near the Old Mill, any extra cops at the site, anything at all, we're aborting the mission.\"\n\n\"Hey dude,\" said Sheets as he listened to the radio. \"I'm picking up some strange static. Like a transmitter signal in a feedback loop.\"\n\n\"What does that mean?\" asked the Leader.\n\n\"Type of passive device picks up a signal then echoes back.\" said Sheets. \"Probably some feedback from a car or radio station.\"\n\n\"Keep going.\" said the Leader, growing nervous. \"Sheets, let me know if you get something strange again.\"\n\n* * * * * * * * * * * * * * * *\n\nTaro's beeper on his device began beeping. He saw the blip of light on his device. He revved the truck, flooring the gas pedal as he began driving north in the southbound lanes with his lights turned off. The signal became stronger and he could see the shape of the van in the distance in front of him. He steered toward it, his truck gathering speed, as the signal became stronger, much stronger...\n\n* * * * * * * * * * * * * * * *\n\n\"Oh shit, feedback loop is getting strong.\" said Sheets. \"Could be police or a detection device.\"\n\n\"Keep driving down the bypass.\" said the Leader. \"We'll circle back and hit the Mill if we don't see cops. If we do see cops, keep going south, Gruff.\n\nGruff acknowledged the orders, looking out onto the darkness of the road. Then, in that darkness, he was realizing that a seemingly darker shape that had blended in with the horizon was now getting bigger. Only too late did he realize that it was a truck bearing down on him at breakneck speed! There was no time to swerve, the collision was inevitable.\n\n\"Oh, shit...\" Gruff said, then lost control of his bowels... saying it and then doing it in his last act of life...\n\n* * * * * * * * * * * * * * * *\n\nAs he bore down on the van, Takaki Taichi felt the exultation of his final mission, his supreme moment in life. He could feel his innermost soul crying out for release, and as the vehicles were about to make contact he heard himself scream almost joyously:\n\n\"Ban-saiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii...\n\nPart 24 - The Dying Fire\n\n***KA-PWOW!!***\n\nThe explosion was felt all over Town, waking many residents up. I looked out the window of the Old Mill in time to see a bright fireball to my northwest rolling upwards.\n\n\"What the hell was that?\" yelled Senior Sergeant Hugh Hewitt.\n\n\"Let's go!\" I shouted. \"Looks like a car collision on the West Bypass!\" I ran out and got in a police cruiser, the SWAT team piling into their van and following.",
        "\"That was not just a fucking car collision,\" snarled Hugh Hewitt as they got going, \"that was like an ammo truck going up!\" Only now did the first glimmers that there was more going on cross Hewitt's mind.\n\nBlue lights blazing, we were the first on the scene. It was a carnage of two fused, fiercely burning vehicles. I called in on the police radio, and it did not take long for police to block off the bypass and re-route traffic. By the next morning, the northbound lanes wold be made into a two-way lane, and while slower, the traffic would be restored.\n\nBut in the meantime I had a southbound bypass road with a crater in it, and the remains of two vehicles, a big cargo truck and a van. Fire engines and EMTs began pulling up, followed by more police cars...\n\n* * * * * * * * * * * * * * * *\n\nDawn was breaking as Chief Griswold, Jack Muscone, and I watched the examination of the scene. An EMT came up to us.\n\n\"Sir, we've found whats left of four bodies in the van, and one body in the big truck. Guy in the truck had his I.D. in a fireproof sleeve hanging around his neck. His name is Takaki Taichi, he works at Arrowpoint Solutions. There are no IDs on the three guys in the back of the van, and not much left of the ID of the driver of the van.\" He handed me the ID. I could see that we had a partial name of \"Grif\", but more importantly we got some of the picture in the ID... and I could make out the face of Gruff.\n\n\"Sir,\" said Sergeant Rudistan, who had come up from his patrol near the State Line when I'd called him on the radio after the explosion, \"we found bags of burned money and what looks like melted cell phones and credit cards. We also found several assault rifles in the back of the van, as well as some grenade parts. Looks like the big truck had ammonium nitrate from Ward Harvester in the back. None of these guys had a chance in hell. Lucky it was this early in the morning, or other people might have gotten killed.\"\n\n\"Thank you, Rudistan.\" said Griswold, who then turned to me and said \"He's right, Crowbar: other people might have gotten hurt. We're lucky, Crowbar, verrrry lucky.\" I knew he was pissed at me, just as I'd been pissed at my mother's scheme to entrap Eleanor Burke in the attempt to kill my wife.\n\n\"Yes sir.\" I said quietly. \"We were lucky. Fortunately, no one else was hurt.\" I did realize that my plan was brilliant, but if an innocent person had been hurt or killed, that would've been a serious disaster and more than a reproach of my plan's execution. Somehow, I still felt it had been worth it. Maybe it was the Dark Side welling up in me again.\n\nStill, I told the Chief that he was right, which mollified him a bit.\n\n\"Any idea who these guys were?\" Jack Muscone asked.\n\n\"The guy in the truck worked for Barry Oliver, who was our Police Scientist and now works with my nephew at Arrowpoint.\" I replied. \"The guys in the van were most very likely the last three bastards of the Corrigan Cell, and the driver of that vehicle was that guy Gruff that we'd arrested a while back.\" I explained further to Jack who Gruff was, though he knew already.\n\nA few minutes later, Sandra Speer, Eduardo Escobar and Martin Nash drove up. Sandra reported to Jack Muscone: \"Our agents raided the house on the other side of the State Line. We found one man, dead. No one else, and they'd cleaned everything out before leaving. We suspect the haul from the bank robbery is what was found burned in that van.\" \n\nAs she spoke, Sandra showed us a picture of the dead man.\n\n\"Merry Christmas, Iron Crowbar.\" Jack Muscone said, handing the picture to me. I looked at the dead face of the older man with the white beard, instinctively knowing that I was looking at the person who had nearly murdered me on the Fairgrounds just seconds before the Reverend Jonas Oldeeds had been dispatched to Hell. Now Keeler was consigned to Hell, I thought to myself, having failed to kill me... but me being much more successful in my vengeance, however unexpected...\n\n* * * * * * * * * * * * * * * *\n\n\"I can't believe it.\" Barry Oliver said when I told him his friend and employee was dead. Todd was in the room, also. Barry said \"The system we tried, to drive the truck by remote control, didn't work, but he... he said he had another system in place.\"\n\n\"Yes.\" I said. \"He drove the vehicle itself. It was a guided missile, and a kamikaze mission.\"\n\n\"But why?\" Barry said. \"Why did he choose to end his life?\"\n\n\"He was dying.\" I said. \"He had liver cancer. That's why his belly began sticking out and he looked so sick. He was having treatments for a year, but to no avail.\"\n\n\"Oh geez,\" said Barry, \"I thought he was just gaining weight. He never said a thing.\"\n\n\"No.\" I said. \"He wouldn't. He would consider it more shameful to say anything, to complain, or let it affect him and his work, than to keep silent and keep going in pain. He got this opportunity to go out in a blaze of glory,... and he took it, bless his soul.\"\n\n* * * * * * * * * * * * * * * *\n\nThanksgiving Day was at the Mountain Nest, and it was crowded. Besides Laura, my mom Phyllis, and our babies, Molly and baby Ross had come up from Midtown. Cindy and Teresa were 'invited' (meaning instructed) to attend, and Jenna Stiles was there as well. Daniel and a very pregnant Melina Allgood had come, which meant Todd and Jeanine Burke had chosen to go visit Todd's father up at Lake Amengi-Nunagen.\n\nJack Muscone also came, having no other real family, and looked as happy and relaxed as I'd ever seen him. The family atmosphere was one thing, but the Corrigan Cell likely being gone for good added to his happiness.\n\nBefore eating, I said to everyone \"I for one am glad to be alive, to have my family and friends alive and well and here with me, and happy that everything has turned out so well for us this year, despite some near misses. I can always rebuild a house destroyed by fire, but I can't replace any of you in this room with me today. Let's keep that going for next year, too, which means Teresa and Cindy should keep teaching each other how to duck.\"\n\nEveryone laughed, but they knew that I meant it... about the rebuilding as well as the rest of it. I was already spending hours of my free time making plans for a new Cabin on the same site, a better house that would have the best of the old with improvements on that which hadn't been as good. Laura had not really said anything, except to complain that I was taking too much of my free time working on that instead of with the babies and of course with her.\n\n* * * * * * * * * * * * * * * *\n\n\"So, you think the threat has ended?\" Cindy asked me as we stood on the back patio, braving the cold for a few minutes of private conversation after everyone had eaten. Everyone else was inside enjoying drinks and/or coffee.\n\n\"Yes, most of it.\" I said. \"The Corrigan Cell is gone; the weaponry those guys had in that van was consistent with what the cell had been using, including when you were shot. I can't say for sure, but I think we got 'em.\"\n\n\"And they were coming to gun you down at the Old Mill?\" Cindy asked. \"And you had a trap laid for them, but they got blown up along the way.\"\n\n\"That's about the size of it.\" I replied. But the explosion had been a trap, also, I thought silently to myself. Laura had gotten CIA contacts to order the ammonium nitrate from Ward Harvester, and I'd had some people pick it up. Then Jack Muscone had arranged for some FBI agents with explosives experience to rig it up to detonate on the vehicle's impact. Then Taro was supposed to put a remote control on the truck to steer it, but it was too unreliable... and Taro had chosen another solution, one that I understood but still left me saddened.\n\n\"Fortunate.\" said Cindy. \"Our planned ambushes have not always gone too well.\" she added drily, remembering her nearly fatal experience the previous summer, not to mention the SBI showing up at our drug raid. \"So who sent them?\"\n\n\"I suspect it was whoever our 'Moriarty' is.\" I said. \"And just between you and me: I only mentioned out loud and in public that I would be at the Old Mill overnight at one place at one time, and there were eight other people in the room when I told Reginald B.F. Lewis that I'd be there: Councilman Lewis himself, Councilman Thomas P. Cook, Dr. Sidney Wellman, Pastor Westboro, Dr. Bonnie Karpathian, my nephew Todd Burke, Seth Warner, and our new Sheriff-to-be, Daniel Allgood.\"\n\n\"Oh my God, you think one of them is in league with this 'Moriarty', as you call him... or her?\" Cindy asked.\n\n\"More than that, mon ami.\" I replied. \"I think that one of them IS our Moriarty.\"\n\n\"Oh geez...\" Cindy said, totally stunned. \"Surely not your nephew, nor the Sheriff?\"\n\n\"They were both there. But don't stress on it.\" I said. \"Time enough to figure that out.\"\n\n\"So, what's left for us to do?\" Cindy asked.\n\n\"Solve crimes.\" I said. \"Get Sharples out of our Police Department. Get the TCPD ready for a new Sheriff and a new Chief next year. And, of course, keep an eye on Wargrave. He may not have been behind this foiled attack, but he was at least partly responsible for what happened to you last summer. By the way, are you and Teresa going to start training for the Independence Day Triathlon any time soon?\"\n\n\"Yep.\" Cindy said, but we'll start that in earnest in January, after the Holidays. And speaking of those... got anything strong enough to tie Teresa down for this coming month?\"\n\n\"Besides you?\" I quipped. \"Seriously, I'm hoping it'll be a new and better Holiday season for Teresa. She's come a long way this past year. A long, long way. And I'm grateful she has you as a friend.\"\n\n\"Me too.\" said Cindy. \"But don't forget your own long journey this year. Your own brilliance has been nothing short of stunning, Don. I'm thankful you've now avoided four assassination attempts, and that I'm working for and with you.\"\n\n\"Not five attempts?\" I asked.\n\n\"I'm not counting that last one on the highway.\" Cindy said. \"That was you setting them up and then knocking them down like tenpins at the bowling alley. And beautifully done, by the way...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Ah, Lilly, you have surpassed yourself!\" exclaimed Conrad King as he finished up his dessert on Thanksgiving Day as the guest of Henry and Lilly Wargrave. \"It was wonderful!\"\n\n\"Thank you, Mr. King.\" said Lilly Wargrave. \"And I'm so glad you accepted Henry's invitation to Thanksgiving dinner with us. There are drinks on the sideboard, so both of you help yourselves, and I'll just excuse myself.\" Mrs. Wargrave knew that the men wanted to talk serious business. They watched the tall redhead leave, enjoying the sight of her firm ass and especially her long, slender, shapely legs and sexy feet in her high heel pumps as she took leave of them.\n\nOnce they were alone, Conrad King settled into a chair near the fire, the warmth feeling good to his aged body, and the sherry he was sipping helping even more. But the pleasant feelings had to end, and King got right down to it:\n\n\"Henry, I know you're angry about losing the last of the Corrigan Cell, as the Town & County locals are calling it, but we're going to have to let this one go. The attempt to murder the Iron Crowbar's children has riled him up, not to mention the entire County and its citizens. Whoever did that has done us no favors at all; it's getting very ugly for us now. As Admiral Yamamoto so astutely said about the Pearl Harbor attack: \"we have awakened a sleeping giant.\"\n\n\"Nothing a few bullets to the backs of a few heads can't fix.\" Wargrave said, with some asperity.\n\n\"Which is why I am here, Henry.\" said Conrad King. \"You had better not be the one to kill him. Certainly not while I'm alive and my operations are ongoing.\"\n\n\"I'm not the one that set the fire to his home in the first place.\" said Wargrave.\n\n\"It doesn't matter.\" said King, his aged voice barely above a whisper. \"The mud has been splashed onto the innocent, meaning you, and by proxy the rest of us. A huge mistake was made in sending two simultaneous warning messages to the Iron Crowbar; I have word that our friendly neighborhood Police Commander has figured out that it was from two separate entities, and that he's fully aware of your status. Your Leader is now known to the Iron Crowbar; at least his existence, if not his name. As a result, we have made a decision: you must either cut ties with him, or with us. There is no longer any in-between, no longer any independently working for both. No man can serve two masters. You must now choose yours.\"\n\nHow had it come to this? Wargrave thought to himself as he looked into the flames of the fire in the fireplace. No, it had not been him that had set the fire at The Cabin, nor his instructions to do so. He had intended to have Laura Fredricson assassinated by a well-timed, well-planned ambush. He had been told about the highlighted passage in the same book he'd used to send the photograph to the Iron Crowbar; he wondered which of his intermediaries had dared to do such a thing... and for who.\n\nHubba hubba hubba, who do you trust? Wargrave thought, remembering a line of The Joker from the Keaton/Nicholson Batman movie. Conrad King was just a bit player himself in the organization he represented; Wargrave really was no fan of that group. At least the man in the Iron Crowbar's County had criminal ties that Wargrave could use to continue his own schemes.\n\n\"I'll give you my answer in 48 hours.\" said Wargrave. Both men knew as they stood up that this answer meant that Wargrave had already decided.\n\n\"I hope you'll still be with us, Henry.\" said King, knowing that Wargrave's loyalties lay elsewhere. \"But if you're not, I very much appreciate the years we've had together, and the lucrative deals we've done together.\"\n\n\"Thank you, sir.\" said Wargrave, remembering that this man's son Jack King had said similar words before falling to the wiles of the Iron Crowbar. Would History repeat itself? Wargrave thought as the men shook hands and Conrad King ambled out the door.\n\nPart 25 - Epilogue: The Expiation of Shame\n\nOn the Friday after Thanksgiving, November 28th, Selena Steele entered her office at the J.P. Goldman Bank. Her boss, J.P. Goldman, had asked her to come in to handle a special client. Despite the forewarning, she was still shocked when she saw who came through the door, closing it behind him.\n\n\"You?\" Selena said. \"Er, come in.\"\n\n\"Ah, my dear Miss Steele.\" her guest said. \"I am very grateful that you have made some time to see me today.\"\n\n\"Certainly, though I must confess to being surprised to see you of all people here.\" Selena replied. \"Please, sit down.\"\n\n\"Thank you, my dear.\" said the guest. \"As you know, my friend the Iron Crowbar has recently lost his wonderful little cabin on the mountainside to filthy arsonists. I am here to create an account so that you my offer him a construction loan to rebuild the house. You may tell him that the loan is for two million dollars, but I will secretly add another million for any cost overruns.\"\n\n\"That's... very generous of you.\" Selena Steele said. \"You must think very highly of Commander Troy.\"\n\n\"Oh indeed, I most certainly do.\" said the guest. \"He is doing a wonderful job cleaning up this County and the corruption buried deeply within it. And of course, he saved a lovely woman such as yourself from being falsely accused of several hideous crimes.\"\n\n\"Yes, I am indeed grateful for him.\" said Selena as she busied herself setting up the account on the computer. \"Do you want him to know who his benefactor is, or shall we keep your name safely anonymous from him?\"\n\n\"Yes, let's see how long it takes him to figure it out.\" said the guest with the beginnings of a grin. \"With his powers, I'm sure it won't be long, don't you agree?\" Selena laughed, and the paperwork was completed. The guest handed over the credentials to transfer the money into the account.\n\n\"I'll let Commander Troy know of this today.\" Selena said.\n\n\"Thank you, my dear.\" said the guest. \"I must now go and finish other business elsewhere. Happy Holidays, and I do hope to see you again soon.\"\n\n\"Likewise, I'm sure.\" Selena said, though it was to the back of the man already on the move. She watched as the flash of bright white hair went through the door, which closed behind the great mental presence that had just filled the room...\n\n* * * * * * * * * * * * * * * *\n\nHaving no idea of the financial transaction being done on my behalf, I boarded the FBI helicopter at County Airport at dawn, along with Cindy Ross and Barry Oliver. We had been summoned by Jack Muscone's boss.\n\nLanding on the roof of the Federal Building in the City, we were escorted by several FBI agents. Their manner was efficient, but I could tell they were on high alert, and I wondered what was going on.\n\nWe were brought to a conference room inside the building, where Jack Muscone and the FBI Deputy Director were waiting. There were also four Japanese men in the room, two of them obviously security guards. I felt the power of the Director, as always, but I also felt the power in the presence of one of the other men in the room.\n\nHe was an aged Japanese man, with a tall, thin body and a chiseled face that showed well his regal and masterful bearing. I knew that he was Takaki Masaki, Japan's equivalent of the Director of the FBI in our country, and recently semi-retired. It was rumored that he had also had close ties to the Japanese version of the CIA, and that he was, like Conrad King, one of the 'Big Boys' in the world. His presence here was surrealistic.\n\nHe was also Takaki Taichi's father.\n\nAs the FBI Dep. Director introduced us, I bowed, then introduced Cindy and Barry. The old man bowed to us, not quite as deeply as we did to him, and introduced his son, who was his eldest son. The son was following in his father's footsteps in high-level Japanese governmental affairs, which meant that he was not introduced by name and that his name was not spoken aloud. I did not feel the same aura of power from the son, though I did feel he was a lot like a Japanese equivalent of myself, and was good at observation, deduction, knowledge, and taking action. It was the son who spoke first, on behalf of his father.\n\n\"I understand,\" he said in decent but heavily accented English, \"that my father's son, my brother, was recently killed in your County.\"\n\n\"Yes, that is true.\" I said.\n\nThe old man looked hard at me and said \"Tell me. How... did he die?\"\n\nI did not flinch. I stood erect and looked the man square in the eye.\n\n\"He died well, Takaki-sama.\" I said. \"With honor, and with the greatest bravery.\" I bowed formally.\n\nThe old man nearly collapsed with relief, his son prepared to catch him. Takaki rallied, then stepped up to me and took my hand, shaking it in Western style, and also bowing, bowing lower than before. I bowed back, angling slightly to my right so that we didn't hit our heads against each other. He was bowing to hide his emotions, lest he be shamed by them. I was bowing to hide mine.\n\n\"Arigato, Troy-san, arigato.\" the old man said. As we stood up, I brought out the scroll Taro had given me.\n\n\"Takaki-sama, your son requested that I give you this scroll.\" I said. \"It is his death poem.\" The old man signaled to his son, who formally received the scroll. The son opened it, examined the hiragana characters, and at the silent nod of his father read the poem in Japanese, the sonorous words seeming to soar through the room though I did not understand any of it. But all of the Japanese in the room were clearly moved by it, I noted.\n\n\"Translate it, please.\" the old man said. The son did so, speaking the final words of the innermost soul of Takaki Taichi:\n\nGlorious Life continues on,\n\nDeath and Evil will be defeated;\n\nMy life has been but a dream within a dream,\n\nBut my death shall bring victory over the wicked!",
        "No words were spoken, nor needed, as we contemplated the words in our hearts and souls.\n\n\"Again, I thank you.\" said the old man after a moment. \"Thank you also, Director,\" he said to the FBI Deputy Director. \"I must now go.\" Takaki Masaki shook everyone's hand, followed by his son shaking our hands, then the Japanese entourage left the room.\n\n\"Well, Commander,\" said the FBI Deputy Director, \"when your career with the Police and with us is finished, just let me know if you want a career in our Diplomatic Corps.\"\n\n\"Thank you, sir.\" I said, \"I think I'll stick to dealing with our Town & County Council for the time being.\" The Deputy Director smiled in his pursed way, understanding.\n\n\"Our chopper has been sent on another mission, so we have a car to drive you back home.\" the Director said. \"But let's have some breakfast first. I want to talk to this Medal-of-Valor-winning partner of yours and recruit her into the FBI.\"\n\n\"Good luck with that.\" I said. \"I'm not letting her get away without a fight.\" Cindy blushed at the compliments, but during breakfast I was thankful to hear her say she wanted to continue working with me before she got involved with the FBI. But she didn't exactly close the door on it, either...\n\n* * * * * * * * * * * * * * * *\n\n\"Taro told me a little about Japanese tradition, and his family heritage.\" Barry Oliver said as we rode in the back of the FBI limousine towards home. \"He said something about breaking with his father's wishes, that he became an engineer instead of working for his father's business in Japan. So... he committed suicide?\"\n\n\"Yes. Or you could look at it as him sacrificing his life in battle with the Enemy.\" I said. \"He did use himself as a guided missile to exterminate those evil perps from the Corrigan cell. He was already dying, and he knew that by committing honorable seppuku in this way that his death would serve a good purpose and have meaning, that he would restore his honor with his father, and continue his family's honor in his home country. His father understood when I answered his question as I did. And as you could tell, it was well-received and all is now forgiven.\"\n\n\"The Director is right.\" Cindy said. \"You could be in the Diplomatic Corps, knowing the way to answer that question. How did you know?\"\n\n\"It's harder to explain than to have known.\" I said. \"I only hope that when my death comes, that it will be as honorable, and as brave, as Taichi-sama's.\"\n\n* * * * * * * * * * * * * * * *\n\nUpon getting back to my office at Police Headquarters, I saw the object sitting on my desk. Cindy was coming in right behind me and said \"What's that?\"\n\nI went around and sat down in my chair, peering at it. It was a horse made of matchsticks and toothpicks, sitting on a wooden base. The horse was about a foot long and ten inches high. The plate on the base said 'The Fall of Troy'.\n\n\"Should I call the bomb squad?\" Cindy asked, concerned.\n\n\"No, let me look at this.\" I said. There was a little trap door in the horse's belly, and I pulled back the hook and let it fall open. No bombs went off, as the horse was hollow, but a little scroll of paper fell out. I unrolled it and read the words on it, which were as follows:\n\n\"<s>crossed path</s>,\n\n<s>incommoded</s>,\n\n<s>seriously inconvenienced</s>,\n\nhampered,\n\npositive danger.\"\n\n\"Don, why are you grinning like that?\" Cindy asked, seeing the wide grin on my face, which I could not help giving and which I could not stop. I looked up at my partner, then handed her the slip of paper.\n\n\"It means we got them.\" I said. \"It means we wiped out the last of the Corrigan Cell on the bypass. It means we have degraded Moriarty's assets, and we have seriously inconvenienced him.\"\n\n\"Why am I not exactly feeling relieved right now?\" Cindy said, somewhat sarcastically.\n\n\"Oh, we've got another couple of words to go before I get worried.\" I quipped. \"And I'm acquiring such a nice collection of Trojan artworks. This really is a well-made matchstick horse.\"\n\nI began to laugh. Cindy tried hard to keep a straight face, and totally failed; she began laughing with me until we were both nearly in tears...\n\nFinis... for now."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/seriously-inconvenienced-ch-05"
}