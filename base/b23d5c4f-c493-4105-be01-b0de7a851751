{
    "title": "The Barista",
    "pages": [
        "I looked up and down the platform for Track 12 and marveled at the number of bodies waiting for the train to pull into the station. I'd taken the commuter service from New Haven to New York many times before and couldn't ever remember the platform being quite so crowded. It was a beautiful Friday in late May, however, and that may have had accounted for the long line of bodies waiting for the train to pull in from the yard. \n\nThe empty 8:05 finally rolled backwards into Track 12 and as the automatic doors opened, the linear crowd clustered into smaller groups at each portal to climb aboard. I was in no hurry as I knew there'd be plenty of seats available once the crowd entered the cars and dispersed.\n\nI finally entered the train, turned left, and scanned that section of the car to find a seat. It was at that instant that our eyes met and that little twinge of recognition took place. She had her hair down and looked a little different, as someone always does when you see them out of context. But it was definitely a familiar face and a friendly look of recognition.\n\n\"Grace?\" I blurted out. \n\n\"Hi Jack,\" she responded with more than a bit of enthusiasm, mixed with surprise, in her voice.\n\nIt was an instantaneous decision I had to make: say a quick hello and keep moving or ask to join her. I eyed the empty seat next to her and spoke before I even knew what I was saying.\n\n\"What a pleasant surprise. Mind if I sit with you?\"\n\nThere. I'd said it. Too late to back out now. \n\n\"Of course,\" she replied. Perhaps she was just being polite, as I'd put her on the spot. But the warmth of her response spoke otherwise.\n\n\"Excellent,\" I said as I threw my pack up onto the rack overhead and sat down for what would prove to be one of the better snap decisions of my entire life.\n\nGrace is a barista at the local coffee shop that I frequent pretty much every day. While I'm only recently semi-retired, I still go into the office several days a week. My commercial real estate firm is located on the top floor of an old converted mill building not too far from the UConn campus. The coffee shop on the ground floor is a place I still visit on a regular basis, sometimes twice a day when working, and the baristas are usually students working to help pay their way through school. \n\nThe owner of the shop seems to have an eye for talent as the young ladies working there are usually very attractive. Grace certainly fit that description. We had never exchanged more than a few words, but she was always friendly and a bit of a flirt. She had a beautiful smile that made paying $2.25 for a medium coffee somehow worthwhile. I always tipped well.\n\n\"So what brings you to New York, if that's where you're headed?\" I inquired with genuine interest as I settled into my seat and the train lurched out of the station, right on time. I knew that Grace was just about to start a graduate program in Linguistics at the University, but didn't know much else about her outside interests.\n\n\"Well, I am going to New York. I haven't been down to the city in a while and there's a Gauguin exhibit at MOMA that I wanted to see and I've been hearing about the High Line and I wanted to check that out.\" She beamed that marvelous smile of hers as she continued. \"Just figured I was due for a solo trip. I love visiting the city and don't get down as often as I should.\"\n\n\"So you're just going down for the day?\" I asked.\n\n\"Well, I may stay tonight with a college roommate in Brooklyn, or I may head home. I'll figure that out as I go.\" She absolutely glowed as she spoke. I was transfixed. \"I'm just playing it by ear,\" she said with a smile that almost melted my brain. \n\n\"Well, you're traveling awfully light if you're doing an overnight,\" I claimed with a smile, looking at the small leather bag she had with her. It looked more like a large purse than an overnight bag. \n\n\"Well, I don't need much - a toothbrush and a change of underwear,\" she offered. \"Pretty compact,\" she grinned. I smiled at the thought, wondering what color panties she had tucked into a corner of her bag. \"I believe in traveling light if I don't know what the future holds in store.\"\n\n\"Makes perfect sense to me,\" I replied, eyeing the lithe length of her 5'-7\" frame; her lean legs crossed demurely.\n\n\"What about you, Jack? What brings you to New York?\" she asked. \"If that's where you're going,\" she added with a smile. \n\n\"I'm just going down for fun,\" I replied. \"Photography is a serious hobby of mine and I love to go to the city and walk the streets and just shoot what I see. I'm heading down for the night, however. I have a hotel, down off the High Line, actually, and I'll stroll the Village and Soho later, grab a bite somewhere. I grew up in the suburbs and New York has always been in my blood. I just need a fix every so often,\" I offered. \"Guess we both have a problem,\" I joked.\n\nGrace seemed genuinely interested as I spoke and even though I probably had about 40 years on her - my guess was that she was 23 - there was a distinctive twinkle in her eye as we talked. Perhaps I was projecting, but it sure seemed like we had a warm connection that was very real. \n\nAt 64 I have still managed to maintain my slender 6'-1\" physique and, though my hair is very short, I do my best to keep a youthful outlook on life. I used to think anything north of sixty was an advanced age. But, honestly, I feel better than I ever have in my life and appreciate life now, and women, in a way that was impossible in my youth. While I usually dressed fairly casually, the city warranted a bit of an upgrade. So I was wearing tan jeans, a white shirt and a casual black sport coat that day. \n\nI'd always admired Grace when she was serving my coffee and making change. I was subtle about my leering, of course, but enjoyed sizing up her long lean body. I loved looking at her ass when she was turned with her back to me, drawing coffee from the machine. She had one of those pert little bubble butts that looked so good in snug jeans and had to be phenomenal out of them. It was quite obvious that she had very nice breasts as well; a solid C cup from what I could see. But I was used to seeing her in work attire - black jeans, a wrinkled button down shirt, sneakers and hair up - and here she was with tresses flowing and dressed for a solo day in the city. \n\nShe was wearing a pair of skin-tight gray jeans, a tight and fairly low-cut black top and a stylish short brown leather jacket. I couldn't help but notice the open toed sandals that appeared to have a little lift to them. Her sandy blond hair was down, hanging in rich waves of luster, framing her pretty face and partially covering the large hoop earrings that dangled in a very subtle sexy way. She had on just enough make-up to accent her big blue eyes. Plus there was just a hint of cleavage on display that I did my best to try and ignore. She had a little bit of a New York thing going on and she wore it well. Her pretty face was alive with the excitement of a trip to the big city and her translucent skinned glowed with the vibrancy of youth. \n\nI guess what set Grace apart from so many other women her age was this sense of innocence that I felt accompanied her considerable beauty. Perhaps it was an act, but I didn't think so. There was a natural \"girl-next-door\" quality to her allure that couldn't be faked. Yet it still seemed that she was somewhat unaware of her considerable charms and wasn't as impressed with her looks as others certainly were, or certainly I was. I found myself wondering if she had any idea how incredibly sexy she was. Maybe she did. Maybe she just hid that side of her personae in public. Certainly it had led me in the past to wonder what she must be like in bed; whether she was experienced, and if she might be one of those woman who transform themselves behind closed door. Never in my wildest dreams did I think I would ever find out. \n\nWe conversed easily as the train rumbled down through Bridgeport and Stamford. I probed gently on her story and found out she had grown up outside Hartford, did her undergraduate studies at a small liberal arts college in Vermont and had moved to Storrs the previous year to eventually attend graduate school. She had spent several summers working and living in New York and had an affinity for the urban scene, as did I. Her work at the coffee shop was a temporary job to help pay the bills. \n\nShe seemed equally interested in my back story and I swore she smiled a little when I told her I was a widower and on my own in the city. She asked about my business and family and, eventually, the conversation drifted back to my photography. She seemed to know a little bit about cameras and asked what kind of camera I had. I took the opportunity to grab my bag down from the rack and pulled out my Nikon. I handed it to her and she held it up like it was extremely delicate.\n\n\"Wow. This is a little bigger than my point and shoot,\" she exclaimed. \"It's so heavy.\"\n\n\"Here,\" I directed as I lifted the camera up to her face. \"You have to look through the lens on a camera like this and hold the lens in the other hand.\"\n\nThere was something highly erotic watching her slender manicured fingers wrapped around the girth of my lens. I could have sworn she was teasing me a little as she twisted the telephoto lens in and out and watched to see my reaction. \n\n\"Man. This is a really cool lens,\" she said as she pointed the camera at me, zoomed and clicked a shot. \"Amazing.\"\n\n\"It is, but you're pointing it the wrong way,\" I stated as I put my hand out and she handed the camera back to me. \n\nI put it up to my eye and focused in as her beautiful face filled up my view finder. I did what came naturally and snapped a few quick shots as she looked directly into the lens. I could tell in those first few seconds that she was naturally photogenic. I turned the camera around so we could both see the small screen on the back and clicked through the 4 or 5 shots I'd taken. They were stunning. \n\n\"Geez, Grace. You're a natural in front of the camera. I just shot these quickly and look at them,\" I exclaimed. She looked on, but didn't say anything. \"You are one very beautiful woman.\" \n\nI hadn't meant to blurt out such a bold blatant statement; it had just come out. Fact was, it was true. I was just stating the obvious. But I was also concerned that I might have overstepped my bounds and made her uncomfortable. I looked at her carefully to gauge her reaction. \n\n\"Thank you, Jack,\" she replied with a shy smile, a little embarrassed by my bluntness, but appreciative of the compliment. I put the camera down on my lap and looked into those beautiful blue eyes. Her lips were intoxicatingly supple. I decided to try and right the ship - or possibly sink it. \n\n\"I'm serious, you know. I can tell you'd make a great model. Some women, even pretty ones, don't always photograph well. Others, like yourself, just have a natural ability to connect with the camera. It's an innate thing some women are born with, I guess. You have the gene in spades, Grace,\" I gushed. Now maybe I'd overdone it. But, the fact was, I was only stating an honest and obvious observation. \n\nShe put her head down, perhaps a bit taken aback by my honesty, but I could tell from her body language and expression that she was pleased with the comment and it had not offended her in the slightest.\n\n\"Thank you, Jack. You're embarrassing me,\" she said softly and a bit shyly. But her smile belied her mild discomfort and she adjusted in her seat so she was facing me a bit more, her long lean thighs now angled toward my seat. \"You sound like an expert at photographing women,\" she opined.\n\n\"No, not really. I've shot a few female friends over the years. My family. I've never actually shot a model, in fact. I'd love to, but just never had the opportunity.\" She smiled as I rambled on. \n\n\"I bet there are plenty of women who would like to pose for you, Jack. You just need to ask,\" she said without batting an eye. \n\nI changed the subject as the train slowed and crossed the East River, stopping at the 125th Street station. We'd be going underground soon and easing into Grand Central Station within 15 minutes. An idea had been brewing in my mind and, if I was going to ask the question, now was the time. \n\n\"Listen, Grace. You may be coming down to the city to have a nice day on your own and get away from the daily grind back in Connecticut. I guess, in a way, that's what I'm doing. But if you'd like company for a little bit, I'd love taking in MOMA with you and then showing you the High Line, since we're both headed down that way anyway.\" \n\nThere. I'd said it, and not without some doubts. I followed up quickly to make sure she knew she had an out. I could see her pondering.\n\n\"But please know, if you'd rather hang by yourself, I will completely understand and don't want you to feel embarrassed to tell me just that.\" I figured I should stop talking before I put another foot in my mouth. But her emerging smile told me how she would answer before the words ever came out of her mouth.\n\n\"Jack, that would be so much fun. Thank you. Yes, I'd love it. But please don't let me ruin your plans either. I'm perfectly fine taking care of myself,\" she added, allowing me an out as well. \n\n\"Grace, I'd be a fool to want to plod around New York by myself when I could be in such pleasant company.\" God, she looked beautiful as I blabbed on. The thought of spending the day wandering the streets of New York with her put me on cloud nine. \"Let's do it!\"\n\nOur conversation came to a conclusion just as the train lurched to a stop and we both made our slow exit down the long platform into the station. We detoured into the main concourse in Grand Central, awash with the late May sun, and stood marveling at the scene. It was a space that I never got tired of and a wonderful way to arrive in New York. I clicked a few photos as we stood there with the slanted sun streaming through the tall arched windows. \n\nNow, standing twenty feet away, I suddenly was seeing the whole package that was Grace. The skinny jeans she was wearing were obviously of some sort of stretchy material because they conformed to the sinuous curves of her lower body like a second skin. In addition the lift of her sandals stretched her legs the way heels of any sort do on a woman and augmented the incredible shape of her ass and the long sleek muscularity of her well-defined legs. I had certainly noticed this shape before, but never with such definition nor in such attire. And, certainly, when I'd ogled her body before she'd always been behind a counter in work mode; not standing in a grand public space in a pair of sinful jeans.\n\nThe wavy blond hair, dangly earrings, stylish leather jacket, all framing her beautiful young face, just completed the package. She was one of the most strikingly beautiful women I'd ever laid eyes on. The furtive, and some not-so-furtive, glances from passers-by of both sexes just confirmed my own assessment. I could obsess each and every part of her anatomy and being, but it was the glory of the whole that was so astonishing. And, at least for the time being, she was with me.\n\nI caught Grace looking up at the ceiling with a beatific expression on her face. I quickly snapped a couple of shots, but not before she noticed. \n\n\"I'm sorry,\" I stammered. \"I can't resist taking a few more photos of you. Are you going to mind if I take a few while we're here?\" \n\n\"Well I don't know why you'd want to take photographs of me when there is so much else to shoot...and so many beautiful women to boot,\" she added, sweeping her hand around the concourse. \n\nThis was true. New York was crawling with gorgeous women and was a constant source of delight for an old fellow like me. But Grace was selling herself short. And her natural way in front of the camera was like an intoxicating drug to me. I was going to have to temper my enthusiasm, lest I drive her crazy.\n\n\"Well, the paparazzi heard you were in town and are out in force. I'll fend them off, best I can,\" I joked. \n\n\"Jack, you can take pictures of whatever you want,\" she replied. \"I'm truly flattered.\" \n\nI looked at her innocent face and perfect posture and just wanted to jump for joy. I tried not to put too much into the broad scope she'd just proposed, but she had certainly left a door open for further discussion. I could tell this was going to be one marvelous day. \n\nWe weaved our way from Grand Central over to 5th Avenue and up ten blocks to the Museum of Modern Art. We spent an hour or so wandering the Gauguin exhibit and a few of the other interesting galleries. I took plenty of photos of some of the dramatic spaces, but also kept veering back to catch a shot or two of Grace when she wasn't looking. At one point I had to address my photographic obsession or I might drive her crazy.\n\n\"Grace, I hope you don't mind me taking shots of you as we spend the afternoon together. Your face is so expressive and you carry yourself so regally. Are you sure you never modeled before?\" I asked in all seriousness.\n\n\"You are quite the flatterer, Jack,\" she said with a smile that showed that she enjoyed the compliment. \"But, no, no modeling in this girl's past.\" \n\n\"Good,\" I replied. \"I feel like I've found a diamond in the rough. And as long as you don't mind and are patient with me, I'll take enough shots this afternoon that you'll have some nice photos of your own once I've edited them. Deal?\"\n\n\"Deal,\" she said, holding out her hand to shake. Her slender grip was warm and stronger than I would have expected. I couldn't help but notice how nicely our hands meshed together. \n\nWe were finally museumed out, so we caught a cab and headed down to the south end of the Javits Center and crossed West 33rd Street to the start of the High Line. It was fun to point out various points of interest as we meandered south. The High Line is busy any time of year now, but it always draws a crowd on a beautiful warm day. We strolled slowly down the path, bought hot dogs at a street stand, and I continued to click photos left and right. Many of them were focused on the buildings and activity in the area, but more than a few of them were of Grace and many of those were candid shots. \n\nAt one point we came to a wide section of the walk and we wandered over to a railing looking over 10th Avenue. Grace had sunglasses up on the top of her head and her leather jacket was somewhat open, revealing the curvy line of her breasts and a subtle hint of cleavage. \n\n\"Okay,\" I instructed. \"I'm going to be obnoxious and take a series of shots of you. I don't want you to smile or look at the camera. Watch people, look at the sky, or the buildings; anything, but the lens. Just ignore me, if you can, and let me just shoot for a couple minutes.\"\n\nShe didn't say a word, just struck a pose - a rather sexy one, in fact - and began to slowly look about. I orbited around her, taking rapid photos. I know that folks walking by probably thought I was shooting a model, and, in a sense, I was. Grace had this uncanny ability to play to the camera without even trying. I was totally absorbed in her realm and doing my best to capture her pure and utterly beautiful spirit. I took as many photos as felt comfortable, then put my camera away as we continued to walk. \n\n\"You're amazing,\" I stated, shaking my head. She thanked me with a gracious smile as we continued south. \n\nOver the course of the next hour I took every opportunity I could to take photos of Grace. I was drawn to her form and the personality that came so clearly through the lens. She also became emboldened as the shutter continued to click, and seemed to be embracing the notion of me taking photographs, as opposed to being turned off by my constant attention. \n\nSeveral times I caught her off guard or looking up at something and unaware of my lens pointed at her. Her natural beauty and graceful presence just radiated at times and I did my best to capture her essence. I didn't stop to review my photos; I just kept clicking, afraid I was going to miss a perfect moment. But my gut told me that I was, actually we were, going to be very pleased by the end results. ",
        "As we came around a bend, after an hour or so on the High Line, I pointed out a large modern structure spanning the walkway. \n\n\"That's my hotel,\" I noted. \n\n\"Really? Oh, wow, that looks very nice,\" Grace opined. \"And very exposed,\" she added, beaming up at the 18 story structure. \n\nIt's true. The hotel had been an exhibitionist's dream when it opened as all the rooms faced north and south and had large windows that were on full display to those walking the High Line below.\n\n\"Well, it's a little hipper than I'm used to and not a place I'd usually stay. But I do know it has a great roof terrace and bar and I figured the sunset over the Hudson River would be fun to catch later.\"\n\nIt was just getting on toward 3pm and I thought I'd check in and then, maybe, we could continue walking. Or, perhaps Grace was ready to peel off and explore on her own or head over to Brooklyn. I had intruded on most of her day and wanted to make sure I hadn't overstepped my bounds.\n\n\"Well, I'm going to check in and dump my stuff here, maybe clean up a little, and then do some more exploring. You've probably had enough of me by now. But if you still want to do a little exploring, you could wait while I check in and drop my stuff off and we could keep walking.\" I only had to wait a second for her response.\n\n\"That sounds great, Jack. I'd love to keep walking. But, if you're checking in, I wouldn't mind finding a bathroom in the hotel.\" \n\nWe descended the stairs to street level and entered the hotel through bright yellow revolving doors. The lobby was a hip urban scene and there was a youthful vibe that was palpable. It wouldn't normally be my kind of hotel, but it was going to be fun to experience. Then again, I hadn't expected to be accompanied by a pretty young companion when I made the reservation. \n\nWhile Grace relaxed on one of the comfortable love seats in the lobby, I checked in and found I had a corner room on the 14th floor facing north and west. I walked back to find Grace looking happy, relaxed and like she fit right in with the scene. \n\n\"Wow. This place is awesome. Are you going up to your room? Can I see what they're like?\" she asked with unbridled enthusiasm.\n\n\"Of course, you can. Follow me,\" I replied. We headed to the elevator and, once we'd entered, I pressed 18 and suggested I show her the rooftop restaurant and bar first. The dark elevator was permeated by the rhythmic throb of electronic music as we ascended. The door opened and we wandered the angled hallway off the elevator lobby until we entered the huge restaurant - a two story space with floor to ceiling windows. Grace's jaw dropped. \"Wow,\" was all she could say. The expansive views in all directions were awe-inspiring. \n\n\"I may come back here later for a drink,\" I suggested, just to see how she'd react to my subtle suggestion. \n\n\"Then I may have to join you,\" she added with a conspiratorial smile.\n\nI took her out on the rooftop with the plate glass railings and expansive views in all directions. We wandered around the perimeter of the open aired space; looking south to the new Freedom Tower, west to the Hudson and north to the West Side and midtown. The views were nothing short of phenomenal and the mid-afternoon sun felt wonderful on our bodies.\n\n\"This is incredible,\" Grace kept saying. I wanted to show her the sexy bar with the group hot tub, but it was closed until later. We climbed back onto the elevator and descended four floors before disembarking once again. \n\nI think we both felt a little awkward and fell into a nervous silence as we walked the dimly lit corridor on the 14th floor. A few hours earlier we'd both boarded the train for a solo trip to New York; now we were together wandering down the dark corridor of a sexy hotel. The awkwardness subsided quickly, however, as soon as I opened the door and we entered the light filled room. The exterior wall of glass went from wall to wall and floor to ceiling and the view looking up the Hudson and northeast toward Midtown was breathtaking. The king size bed looked incredibly comfortable and on the far wall facing the bed was a huge wall-hung mirror.\n\n\"Oh, my God,\" exclaimed Grace as she sauntered over to the glass wall. This was not a room for someone with a fear of heights, as the view down was dizzying. \"This is amaaaazing,\" she said as she turned around with a slack-jawed look of awe. \n\n\"You like?\" I questioned, knowing full well how she would respond.\n\n\"This is totally awesome,\" she exclaimed while beaming ear to ear. \"You are so lucky,\" she stated emphatically. \n\n\"Well, I splurged a little for this trip, but figured I'd get some great shots from the roof and from the room itself. I was hoping to get some night shots later too. Glad you like it,\" I added enthusiastically. \n\nShe scooted off to use the bathroom and I did what little unpacking I needed to. When she emerged she commented on what a great bathroom it was. I told her I'd be out in a minute and went to use the facilities myself. When I came out a few minutes later, a new breathtaking view was to be discovered.\n\nGrace had discarded her leather jacket and thrown it onto the wraparound built-it couch in one corner of the room. She stood leaning forward against the plate glass window, her hands against the glass, looking like she was tempting fate. The skinny jeans she was wearing hugged her legs and ass like a glove and left little doubt to what a fine body she had. Without the jacket, I could see the thin straps of her black top crossing over her square shoulders. The second line of silky straps told me she was wearing a black bra as well. The top crept up her tummy, exposing a luscious line of pale skin between the top of her low cut jeans and the top itself. She had put her hair up casually and it accentuated the sensuous lines of her neck and shoulders. She was a vision of loveliness; her profile outlined against the afternoon Jersey sky and the Hudson River. \n\nI took the fact that she had discarded her jacket as an indication that she was not in a hurry to go. So I grabbed my camera and idled up to her side, aiming the lens at the silhouette of her long curvy body. God, she looked good. \n\n\"I guess you're not afraid of heights,\" I suggested as I clicked a few photos; loving how the light was playing against her skin and long wavy hair. \n\n\"I am, kinda,\" she mused seductively. \"But I love the feeling I get deep in my belly when I look down from high up. It sends shivers to my core. So exhilarating,\" she said softly as she surveyed the urban landscape, then turned to face the camera. She didn't smile; her gaze bore a hole through my lens. \n\n\"Don't move for a sec,\" I pleaded as I took advantage of the light and pose to grab a few more shots. When I pulled the camera from my face, she smiled and turned around, leaning her back against the glass in a provocative pose. She put her head back, gazed at the lens once again and brought her hands together behind her back against the plate glass. The pose resulted in her breasts protruding forth in a seductive curve. Whatever hesitancy or shyness she may have felt earlier was eroding rapidly as she seemed to be coming alive in front of the camera - and me. \n\n\"You seem to like the camera,\" I said as I continued to move and click as she posed like she'd done this a million times before.\n\n\"I do,\" she admitted. \"I have to admit, I like being looked at this way,\" she said with lowered lids. She hesitated for a minute before putting her hands above her head and looking straight at me. \"It's kind of a turn-on,\" she said in a voice barely above a whisper. \n\nMy pulse raced as the meaning of her words took hold. It seemed like a switch had gone off in Grace. Maybe it was the fact that only hours ago we'd basically been casual acquaintances running into one another serendipitously on a train, and now we were alone with a camera in a sexy hotel room overlooking New York City. Whatever it was, the sweet All-American barista that I thought I had a bead on was transforming into a sexy vixen right before my eyes. The innocent shyness that had defined her in my eyes before was slowly morphing into a quiet sexy confidence that was completely and utterly intoxicating. \n\nShe then looked me straight in the eye and asked me a question.\n\n\"So, Jack. What are you going to do with these photos, may I ask?\"\n\nI could tell we were at a moment of truth. I pulled the camera away from my face to answer.\n\n\"These photos are for my enjoyment only, Grace. And yours, if you want copies. I have no intention, ever, of sharing them, posting them, or ever letting them out of my private collection,\" I stated candidly. I could be completely honest and sincere because it was totally true. Her allowing me to photograph her was a gift, and one I would not take for granted or advantage of. My assurance seemed to lighten her mood and her sexy demeanor returned. \n\n\"Good,\" she said in return. \"Because I trust you. And I want to keep going.\"\n\nShe sauntered over to the huge bed and peered over her shoulder at me with a sexy look as she climbed up and crawled, ever so slowly, to the middle of the mattress. She looked like a cat in heat, moving to find a place to purr. The shape of her ass in the skin tight jeans was driving me crazy and was a like a magnet for my lens. For someone who claimed inexperience, she sure knew how to work it. \n\nShe got up on her knees, legs slightly spread, and put her hands over her head, facing straight at the camera once again. She gave me a conspiratorial look, like we were in this together, and pursed her lips as my shutter finger kept a rapid pace. Suddenly her hands came down, crossed over her body and each hand lifted the bottom of her top - up and over her head in a long slow fluid movement. She tossed the top on the floor unceremoniously, like she'd find it later. Who needed a top on anyway? She was wearing a very sexy black lace bra and her lovely soft breasts were bulging out of their confines. God, she was stacked for such a slender girl; much larger than I had expected, but to my delight. \n\n\"Oh, Grace. So beautiful,\" was all I could manage to mutter. Where was this going? My heart was racing and my stomach was in my throat. She put her hands on her thighs and leaned forward. Between the inward push of her upper arms and the force of gravity on flesh, her breasts squeezed together and oozed out of her low cut bra. Her cleavage was deep and dark and I could not look away. I wanted to dive in and get lost in there. She looked to her side and then back at the camera with an intimate glare. \n\n\"Do you like what you see?\" she murmured, as she bent forward, maximizing her cleavage and removing any doubt that we were going to continue to explore. \n\n\"Mmhmm. Very much,\" I replied as I continued to click photo after photo from different angles. Then, I stopped and pulled the camera away from my face. \"So, you want to hang out here for a while?\" I asked jokingly. \n\n\"Not a bad place to be,\" she crooned. \"How about you?\" She was slightly taken aback by my question.\n\n\"I don't know,\" I exclaimed as I took a few more photos of her half naked body. \"I was thinking we should go get a coffee.\"\n\nShe cracked up and the tops of her breasts jiggled as she laughed, tethered in frilly silk. She kneeled up straight and her hands slid up her thighs, past her stomach, up to the underside of her bra-clad tits. She lifted and massaged them. The way she squeezed them left no doubt as to their naturalness. \n\n\"Really?\" she joked back. \"Coffee? Now?\" Her breasts bulged above her hands as she clasped her heavenly flesh. Her look bordered on disbelief, but she knew I was kidding. \"Are you sure,\" she cooed almost breathlessly. \n\n\"Not really,\" I said as I moved to the side to get a different angle. \"Everything I want to drink is right here,\" I said. \n\n\"Good,\" she purred. \"Your barista is at your service. Just don't stop taking pictures,\" she added, as she squeezed her tits so hard I thought they were going to pop right out of her bra. That, or my head was going to explode. \n\nShe now turned away from me, still kneeling, and reached behind to unclasp her bra. I literally could not believe this was happening. She looked over her shoulder at me and the camera as she unceremoniously unhooked the clasp of her silky black bra. She then held the bra to her breasts casually and with false modesty and continued to look over her shoulder at me, shaking that gorgeous mane of hair. Her lustful gaze told me that she was about to show me something very special. \n\nShe shrugged her shoulders forward and gave me a \"whatever\" look. The bra slid down the slope of her full breasts and fell to the bed. She picked it up nonchalantly and tossed it in the direction of her top. I began to have hope that there might be a pile of clothes on the floor before long. \n\nI could see the outer edges of her full breasts outlined just past the long lean line of her back. I moved again to the side, hoping to see the profile of her gorgeous bosom. She put her hands on top of her head again and her left breast came into view, hanging full, soft and so very round. My God, what perfection. The shape and projection of her breast was a vision of pure and unadulterated beauty. The bottom was a round cup of luscious tit flesh, curving up to an exquisite pink nipple that was hard and pointed slightly upward. The top of her generous breast blended into her shoulder completing the profile of an absolutely perfect bosom.\n\nShe continued to look into the camera with soulful eyes as she returned to lifting, squeezing and massaging her breasts; her luscious boobs now bulging out from underneath her slender hands. She lifted her breasts, accentuating their softness, and pinched her distended nipples between her thumb and forefinger. She pulled her breasts up and out by pinching both nipples; then let them go as they bounced back into place. She smiled knowingly as I gasped my approval. She was killing me. \n\nThe innocent barista who I had wondered about all those times I was ordering a medium coffee to go, was transforming herself before my eyes. The natural beauty was still there in spades. But it was now being reinforced with the quiet confidence of someone who was aware of her considerable charms and knew how to use them. Perhaps it was her own gathering arousal that brought forth her incredible sexual power. All I knew was that I was happy to be the observer of her display and wanted to take it slow and easy to see where things would go. \n\nI kept clicking photos, but encouraged her with a soft voice; telling her how incredibly beautiful she was and how fortunate I felt to be photographing her at this very moment. I could tell she liked hearing confirmation about her poses and my verbal cheerleading was clearly giving her growing confidence in her desire to keep posing. \n\n\"Good God, Grace. Your body is truly amazing. Your breasts are so beautiful. I'd often wondered...\" I said as my voice trailed off, replaced with the sound of a digital shutter clicking.\n\n\"Did you, Jack?\" she queried as she put her hands above her head again and twisted her body back and forth so her breasts swayed gently. \"What did you wonder?\"\n\nI pulled my camera down from my face, but gazed into her eyes as I spoke. \"I wondered what your breasts looked like...naked,\" I stammered. She smiled knowlingly as she cradled them and jiggled them slightly to showcase her womanly bosom. \"I always wondered what your body was like under your barista uniform,\" I stated. It was true. \"Honestly, you're more beautiful and sexy than I had ever imagined,\" I continued. My eyes slowly trailed down the length of her exquisite body as she remained kneeling and facing me. \"And I always wondered...\"\n\nAs my voice trailed off once again, I could see that she had followed my eyes as they came to rest on the tight vee at the crotch of her jeans. She kept her eyes glued to mine as her right hand unclasped the button of her jeans and she slowly unzipped the very short zipper. She was reading my mind.\n\n\"What did you wonder, Jack?\" she seethed, as she dipped her hand down inside her now open pants. My jaw was on the floor and I could not respond. \"Did you ever wonder about my pussy?\" she asked ever so quietly. That word sounded so sexy when she said it; like it had three S's. Her hand squeezed between her lower tummy and the loosened waistband of her tight jeans, sliding down into her sex. I took a couple detail shots, zeroing in on her lost hand. \"Mmm, it's very wet right now,\" she whispered as she withdrew her hand and licked the tips of her glistening fingers, smiling demurely. \n\n\"Oh my, God,\" was all I could summon. I was transfixed. \n\n\"Do you want to see it, Jack?\" she asked innocently as she hooked her fingers on either side of the loose waistband of her jeans. \"Would you like me to show you my pussy?\" she asked rhetorically. \n\nI could only nod as she turned away from me once again, still kneeling, and began to slide the jeans down over her delectable butt. As the horizontal line of her jeans slowly lowered over her ass, her juicy soft cheeks came into view, as did the deep crease of her ass. I'm not sure I'd ever seen a more beautiful sight. The tiny line of a black thong remained in place, but it did little to hide the delicious derriere of this amazing beauty. She pushed her jeans down until they were gathered in a bunch at the base of her thighs, just above her knees, then leaned forward and face down so her butt was in the air. She was so enticing. She turned her head to look at me, rubbed her hand over the curve of her rear, then slapped her butt hard. \"Mmm,\" she cooed. She reached behind and below her butt with each hand and wiggled her fingers; her cheeks jiggling tightly. She was such an incredible tease. \n\n'Holy fuck,' I thought to myself. 'Was this the same barista that served me daily with that innocent shy smile? How had I lucked into such an incredible situation?' Her slap had left a little red mark on her alabaster skin. She turned and sat down to pull off her jeans, throwing them onto the gathering pile on the floor. Then she leaned sideways and pulled her legs up, so that I was looking at the backs of her thighs and her incredible ass. The thong disappeared into the deep recess between her bubble cheeks. She reached down and pulled on her upper ass cheek, exposing the thong tucked deep into her crevice. It did very little to hide the bulging lips of her sex, but modesty had left the building long ago. \n\nMy shutter finger was in overdrive and, when I pulled in close, I was beginning to detect the musky aroma of arousal emanating from Grace's bottom. I kept muttering encouragement, but I think I was blabbering at this point; I just wanted her to keep going. Grace could clearly see that she had a captive audience and she was loving it. She hooked her thumbs beneath the tiny thong, now the only thing she was wearing, and slid it over her ass and down her legs; lifting her hips to slide it off completely. She tossed it blindly onto the floor with the other garments. Now, completely naked, she assumed the same position and again pulled on her upper cheek to open her sex. \n\nI alternated between shots that took in her whole body with zooming in to fill the lens finder with her pussy, ass and legs. The light was making magic with her skin, as she pulled her lips opened and I could hear, smell and see her excitement. Her pussy was a lovely pale pink and glistened with oozing juices. When she let go her full lips closed and framed a deep dark slit that begged to be touched, explored and opened once again.\n\nAll of a sudden she swung her upper leg across, leaving the lower leg in place, thus spreading her long lean legs wide open to fully expose her treasure. There she was in all her glory; her legs spread wide and her pussy now the focus at the apex of her slender thighs. I gasped audibly and stopped shooting for a second. All I could do was gape in amazement. There before me was one of the most beautiful pussies I had ever laid my eyes on. She was completely shaved and as smooth as a baby. Her pussy lips were delicate pink folds of thinly furled flesh, culminating in a seductive curl of delicate labial skin that was punctuated by the tiny glistening pearl of her clit. Her delicate pink nubbin almost looked like a stone in a stream, her labia like the current cascading around it. Her inner lips were clearly engorged with excitement, glistening with her juices and lay in a series of fleshy vees above her clitoris. Her outer lips were thin rounded folds that framed her pink beauty. Her aroma wafted into my nostrils and sent my libido through the roof. I had never, ever, seen a more beautiful sight, nor smelled a more beautiful scent.",
        "She reached between her legs and framed her gorgeous vulva with her long manicured fingers. Gently pulling her labia apart, she opened her hole as I zoomed in for a photo that bordered on pornographic.\n\n\"You like my pussy, Jack?\" she said, barely whispering. Her head was back on a pillow and her eyes were watching my reaction to her display. I stopped clicking and just stared, my mouth open in awe. She dipped her middle finger into her pussy and softly groaned. I could hear her fingers stirring the slippery essence of her excitement. \n\n\"Holy fuck,\" was all I could find to say. I was literally speechless at the sexy display only inches from my eyes. I took a few photos, but even that task was becoming difficult in light of the moment. She closed her eyes and began to rub and finger her pussy as I just gaped at the juicy opening between her wide spread legs. Her lovely lips moved loosely with her soft touch. \n\nIs there a sexier sound than a woman fingering her own wet pussy? I think not. Pretty soon she had two fingers in her hole and they shone with her juices whenever she pulled them out. She slowly put her fingers in her mouth, never taking her eyes off mine. She sucked her fingers and moaned softly. God I wanted to taste her so bad. She put her fingers back in her pussy and began to finger fuck her juicy hole. The sound of her slippery fingers sliding gracefully in and out of her slick cunt was the loudest sound in the room. Grace opened her eyes once again and, with lowered lids, asked me a question.\n\n\"Do you want to touch me, Jack?\" \n\nI couldn't believe my ears. But I also couldn't find my voice. I just nodded in dumb agreement. Was there even a morsel of doubt that I would do anything other than say yes? \n\n\"You'll need to put your camera down,\" she suggested, \"for a minute, anyway.\"\n\nShe sat up, legs still spread, and leaned back on her arms, arching her back to offer me her breasts. They lay proudly on her rib cage, so full and soft; her nipples still hard little nubbins of dimpled pink flesh.\n\nI needed no further encouragement as I placed my camera on the bed and moved in closer to touch her body. I stroked her face, looking deeply into her eyes, trying to thank her with my gaze and my touch. My voice finally returned - barely.\n\n\"Thank you,\" I murmured. My fingertips grazed down her shoulders, across her upper chest and up the slopes of her generous bosom. She arched her back ever more, encouraging me to feel her bust. \n\nI did. Her breasts were magnificent - soft, round and full. They felt like warm creamy balls of Jello in my hand. Her skin was as smooth as silk and her nipples felt hot and rock hard to my touch. My hands couldn't get enough of them. My fingers grazed back and forth over her distended nipples, then circled her silver dollar sized areola. \n\n\"Mmmm,\" she moaned as I gently began to squeeze her tits. \"You have nice hands,\" she cooed.\n\n\"Well, you have nice tits,\" I replied. \"Check that. You have incredible tits,\" I stated as I continued to knead and fondle her heavenly flesh. \n\nShe was looking at me with a look both quizzical and sensual; like she knew what was happening, but didn't know why. She suddenly looked so tender and lovely, while at the same time sexy as hell. I was drawn to her lips and kissed her unabashedly. She kissed me back with a passion that took me by surprise.\n\nHer lips were soft and supple, as I knew they would be. Her mouth opened, as did mine, and our tongues danced in a swirling mix of saliva and heated breath. God, I couldn't get enough of this young lady. I felt like I was falling into a bottomless pit of sensuality. \n\nOur kiss broke and my hands roamed her ass, feeling the smooth skin of her backside and the gorgeous curve of her hips. I squeezed her right cheek and as I leaned on my left arm and engaged her in an even deeper kiss. I stroked her cheek and whispered as I backed away. \n\n\"Turn over, Grace. Let me touch your backside,\" I requested. She turned, folded her arms under her turned head and sighed as I climbed up and straddled her thighs. Her ass was sheer perfection as well, and sloped upward at what seemed an almost impossible angle. Her cheeks were perfect globes of soft white flesh and the cleft of her ass was deep and alluring. I leaned down to massage her shoulders and back, then worked my way along the deep curve of her lower back and up the steep slope of her buttocks. Her skin was so soft and smooth and my old hands looked wizened and wrinkled against her pert young flesh. It was heaven squeezing her cheeks and she moaned softly as I did so, spurring me on. As I gently massaged her butt, my thumbs began to spread her cheeks. I could see the tight light brown sphincter of her snug little asshole and the wet rounded lips of her juicy cunt just beyond. \n\nAs I pulled her cheeks apart with more fervor, I could hear the sticky sound of her lips separating down below. Opening her sex let her aroma waft up once again and it began to make my brain crazy with lust. I slid two fingers in to run along the tight furls of wet flesh and noticed that she arched her back to raise her butt further; a clear sign that I was doing something right and that she wanted me to touch her there. \n\n\"You're so pretty, Grace. So pretty,\" I whispered as she moaned in response. \n\n\"I love the way you touch me, Jack. So gentle. I love that you're not in a hurry.\"\n\n\"I'm not. Let's just stay here forever,\" I joked as the tip of my middle finger slid through her lips and came to rest on the tight starfish of her anus. I didn't probe, I just applied a bit of pressure and her response, raising her ass a little to encourage me, told me that this was an area to be explored later. I even detected a soft moan as I pressed the pad of my finger against her tight little dark hole. \n\n\"Turn over, baby,\" I whispered. \n\nShe did and her boobs flopped around as she lay back down on her back and looked up at me. Her head lay on a pillow and she watched me as I adored her body. It was a body worthy of worship and I felt so fortunate to be laying my hands on her. My hands roamed everywhere, each doing its own thing. I explored from head to toe, but it was hard to ignore her breasts, laying so full and round on her chest. \n\nFor the moment I avoided running my hands between her legs, but my explorations slowly began to circle her belly, hips and upper thighs. Her mons rose prominently from her flat stomach and was completely devoid of hair except for a tiny wisp of pubic growth just above her thin tight slit. I gently lay the palm of my hand over her pudendum and my middle finger settled in between her slippery folds. I felt her spread her legs slightly, allowing me further access to her silken treasure. She was warm, almost hot, to the touch.\n\nHer clit was quite prominent and clearly distended from our foreplay. I let the pad of my middle finger rest lightly on her slick pearl and began to rub in tight small circles. She moaned softly and shifted her body slightly; allowing me the perfect angle. I just looked at her, all of her, as my finger began to flutter over her sexual center. I watched to gauge her reaction to my touch. Did she like a softer or a harder touch? Faster or slower? Circular or back and forth? Or did she respond to changing it up with lots of variety? My intuition told me it was the latter.\n\nI hadn't thought about making her cum this way, but knew that some women loved to be touched and stroked to orgasm. Based on her reactions, I continued to experiment as I could feel Grace's body respond positively to my varied touch. Her cunt was absolutely dripping with juices now and my finger was well lubricated as it slid into her pussy a time or two. Each time she groaned in appreciation and spread her legs further and raised her hips up a little bit more. \n\n\"Oh, don't stop, Jack. Keep touching me,\" she demanded with eyes still closed. \n\nIf she didn't want me to stop, then I wasn't going to stop. I leaned down to suck on her nipples as my finger began to rub her faster and faster. I could tell that this was the right strategy as her body began to squirm and her hands clutched the bedspread. My finger found that beautiful groove just to the side of her pussy and it circled over her clit as I continued to rub her with an ever increasing tempo. The juicy sound of my finger stirring her sex was getting increasingly louder. There was no question now. She was going to come.\n\n\"Oh, Jack. So good, don't stop. Keep go...oh, Jack. Ah, fuck!\" she suddenly screamed as her body lurched and spasmed. She let out a deep guttural cry and came in pulsing waves, wracked with pleasure. I slowed my fingers gradually and eventually pulled away from her clit, sensing that she might now be super sensitive down there. Her erratic breathing settled after a few moments and she turned to face me with a look of warm admiration. \n\n\"My God. Where did you learn to touch a woman like that?\" she queried. \"That was amazing.\"\n\n\"Experience over the years, I guess. I've always been a very tactile person and I love touching women; everywhere, but especially down there. Pretty simple, really,\" I said.\n\n\"Well, you could give a few guys I know lessons. I'll say that,\" she grinned. \"That felt soooo good. Thank you.\"\n\n\"My pleasure, Grace. And I mean that.\"\n\nGrace pulled herself up to her knees, as did I, and she put her arms around my neck. We kissed deeply once again as my hands explored the fleshy roundness of her incredible butt. My cock had softened during my manual ministrations, but was hanging thick and heavy, beginning to harden in my jeans once again. I had lusted so many times for her as she drew coffee from the stainless steel urns; now I was squeezing her cheeks with impunity. We had gotten the formality of her first orgasm out of the way; now it felt like the door was open to extended play. Her ass felt so young, soft and supple in my old hands; maybe because it was.\n\n\"Mmm, Jack. Can I ask you a favor?\" she purred.\n\n\"Anything,\" I replied.\n\n\"May I touch you?\" she inquired innocently, like there was anything other than one answer to such a question.\n\nI still pondered the question, rubbing my chin as if in deep thought. Grace laughed and slapped my arm. \"Tell you what,\" she said. \"You think about an answer to that question while I run to the bathroom.\" She hopped out of bed, her full breasts jiggling with the exertion. God, I loved the way they hung and swayed with even the slightest movement. \n\nAs she padded off to the bathroom, I admired the rear view. Her tight little bubble butt was perfection and jiggled tightly as she toddled off to pee. I wasn't sure I had ever seen such exquisite beauty. \"And we've got to get you out of those clothes,\" she added over her shoulder, just before closing the door. \n\nI shed my shoes and socks and discarded my shirt. I decided to let Grace help with the rest. I always loved being unbuckled and unzipped by a lover when I was really turned on. I stood in the middle of the room and looked out at the incredible view, laden in the orange glow of a late afternoon sun. \n\nThe door opened and Grace emerged with a huge smile. \"Oh. Halfway there. Let me help with the pants,\" she said enthusiastically. She knelt before me and began to run the palms of her hand up and down my thighs and hips, narrowly missing the growing bulge hanging down in my jeans. \n\nShe finally zeroed in on the huge lump and began to stroke the turgid flesh beneath the denim. She had a glowing smile on her face as she traced the outline of my gathering hardness. Looking down at this lovely girl touching me was a complete and utter turn on. \n\n\"Oh, my,\" she said. \"What have we here?\" She palmed my length and suggested that I couldn't be very comfortable with my erection pushing down my leg at a weird angle. I agreed as she began to unbuckle my belt. She then slowly and provocatively pulled the zipper down and grabbed the waistband of my jeans and pulled, bringing my silk boxers with them. As she got to the right spot, my erection sprung up from its release and bounced a few times just inches from Grace's face.\n\n\"Well, well,\" she said with a smile as she leaned back to assess the situation. I was rock hard and proud that I was still able to attain an impressive erection with someone young enough to be my grand-daughter. I've always been very comfortable with my dimensions, both length and girth, and I was clearly more than enough for Grace to handle. I loved the way that she looked at my erection and the way it towered over her pretty face in such a submissive position. \n\nShe smiled as she took it in her hand and lightly stroked it. Her other hand reached underneath to massage my tight ball sack. She encircled her thumb and forefinger and began to slide the outer skin up and down as she looked up at me with a devilish smile. She clearly had experience in the handling of a hard cock; that was for sure. \n\n\"Mmm, I had a feeling you'd be a nice size, Jack. And you shave,\" she stated with amazement. \"I love it.\"\n\n\"Always have,\" I replied. \"I've always loved the feeling,\" I explained.\n\n\"Mmm, me too,\" Grace agreed. Her touch was exquisite and I enjoyed the way she handled me so gently; my steely hardness belying her light touch. She eventually stood up and grabbed my cock from a different angle. She pulled me in for another deep passionate kiss with her hand still around my cock, pressed between our bodies. \n\n\"So,\" she started demurely. \"May I ask you another favor, Jack?\" she whispered. I nodded numbly. She stood on tip toes again to ask her question directly into my ear. \"May I suck you?\"\n\n\"You can do anything you want to me, Grace,\" I replied. \n\n\"Oh, good,\" Grace replied. \"You can do can to anything you want to me too, Jack,\" she said as she knelt down again before me. \"Anything,\" she repeated as she encircled my still fully erect dick with the thumb and forefinger of her right hand and her left continued to massage my tightening balls. She lightly kissed the head before letting go with both hands and placing them on my upper thighs. My very full erection towered over her beautiful face as she stuck her curled tongue out and cradled the bulging head of my thick hard cock. She pursed her lips and kissed the bottom of the crown, then slowly opened her mouth and engulfed the tip of my rock hard dick, all the while maintaining eye contact. \n\n'She is so beautiful,' I thought to myself, 'and she's sucking my cock.' There was something so submissive about her position, kneeling in front of me with her mouth slobbering my erection with the most intimate attention. Her mouth felt like hot liquid silk and her little moans of delight and slurpy sucking sounds filled me with joy. \n\nHer hands rejoined the party as she lofted my rigid dick with one hand and hunkered down to take one of my engorged balls into her mouth. I closed my eyes and let the physical feeling wash over me. I love having my balls sucked. I could feel Grace's tongue swirling around my left ball and hear her muffled moans. With a pop she let my testicle fall out of her mouth and hungrily returned to sucking the head of my cock. 'She may look innocent', I thought to myself, 'but she definitely knows how to handle a hard dick.' \n\nSuddenly Grace stood, a look of deep lust in her eyes, as she lightly grabbed my erection and led me to the bed. \"Come lie down, baby,\" she cooed. I complied and lay on my back in the middle of the bed. My cock was sticking straight up into the air and Grace knelt between my legs and resumed sucking. She cupped my balls with one hand, encircled the base of my shaft with the other and began to impale her mouth on my long thick pole. She stopped at one point, jerked me for a minute, spit on my dick and went back to sucking.\n\n\"Oh, Grace. That feels so good, baby. God, you're good,\" I said, my eyes closed in ecstasy.\n\n\"Mmm, you taste yummy, Jack,\" she said as she jerked me quickly again. She leaned forward with a smile on her face, grabbed my erection at the base and began to slap her hanging left breast with the shaft of my rock hard cock. The sexy sound of hard cock slapping soft tit was mesmerizing. Her lovely breast jiggled with each slap of my member. She had a sinful smile on her face as she knew the effect she was having on me. I reached down to feel her other breast as it hung and jiggled in the palm of my hand. She laughed and went back to sucking with a vengeance. The feel of her soft milky breast hanging in my hand was pure heaven. \n\nWithdrawing once again, a long line of spit hung suspended between the tip of my cock and her full lips. She smiled, knowing how sexy this looked, when the strand finally broke and she smiled and bit her lower lip. She leaned forward, her hand wrapped around the root of my raging erection, and let her breasts hang just above the bulbous head of my straining cock. As she gazed into my eyes she began to jerk on the upper end of my penis. With each upward stroke her hand bounced against her full hanging bosom, making it jiggle and shake. God they were so soft and wonderful, dangling so seductively off her slender frame. She surely knew what she was doing.\n\n\"My God, Grace,\" was all I could summon.\n\nShe giggled. \"You're a naughty boy, Jack. I always had a feeling about you,\" she said, as she continued to jerk me with just the right amount of pressure and tempo. The sight of my stiff dick in her slender hand was mesmerizing. \n\nGod, I wasn't ready to cum yet, but when I did, I could feel it was going to be a massive load. I was so turned on. She couldn't take all of me, but tried a time or two. But each time she gagged and had to back off once again. There was something so sexy about the way she cupped my balls with both hands and impaled her mouth on as much cock as she could handle, slurping, gagging and moaning the entire time.\n\nThen, without warning, she delved way down between my spread legs as I raised my hips up off the bed. She disappeared from view and suddenly I felt her tongue licking my ass. \n\n\"Oh, Grace,\" I stammered. \n\nI hadn't expected any of this. The realization that the beautiful barista whom I'd lusted after for so many months was probing my asshole with her tongue made me moan loudly and place my hands on her head. I couldn't believe the waves of pleasure washing through me at that moment. This beautiful young thing was moaning deeply as she penetrated and probed my ass with her stiffened tongue. She returned to licking my balls, then stuck her tongue out and traced the length of my shaft as she looked adoringly into my eyes. She stopped at the tip, pursed her lips and gave the crown of my cock the softest little kiss. \n\nI suddenly felt I was letting Grace do all the work. \"Pull up here, Grace. Let me taste you. Give me that sweet young pussy,\" I demanded. Grace smiled, and complied.\n\n\"Don't mind if I do,\" she replied as she crawled up, grabbed the headboard, then straddled and mounted my face. She teased me for a minute, hovering a few inches from my mouth and opening her cunt for close-up examination. She was so lovely, pink and wet, the slender ridges of her labia glistening with the succulent juices of her arousal. Her scent was an aphrodisiac of the first order and I smacked my lips in anticipation of my impending meal. She exposed her clit for my inspection, then ran her middle finger over it lightly. \n\n\"Suck me, Jack,\" she whispered as she descended over my face. My tongue darted out to meet her as she slid her pussy back and forth along my wiggling tongue. My groans and erratic breathing were muffled by her body as she ground down on my lips, mouth and tongue. I sucked her like she would be my last meal. She tasted divine; a tangy musky mix of sweet and sour. She was so fucking wet, I felt I might drown in her dripping flesh as she smothered my face with her hot juicy cunt. And, more than anything, her sexual aroma was overpowering and completely and utterly intoxicating.",
        "She slid her hips forward and suddenly my tongue found a new hole. I didn't miss a beat and my pointed tongue delved into her asshole as she cried out. \n\n\"Oh, fuck, Jack. Tongue my ass, baby,\" she seethed. \n\n'Who was this glorious creature,' I wondered? 'What had I unleashed?' I grabbed one cheek in each hand and spread her so I had complete and unfettered access to her darkest hole; my nose, meanwhile, was buried in her hot dripping flesh. I was suffocating in pussy. \n\nShe suddenly fell off of me onto the bed and pulled me with her. She quickly pulled a pillow under her ass to raise up her hips and spread her legs wide. As I repositioned myself between her legs, she put her fingers above her pudendum and pulled the skin back, opening her cunt up completely and unabashedly.\n\n\"Eat me, Jack. Eat my pussy,\" she pleaded. \"Please.\"\n\n\"Mmm, you're a naughty girl, Grace. I had no idea,\" I commented as I got face down on my stomach so I'd have a good angle to dine from.\n\n\"I am when the opportunity arises, which it has,\" she added. \"There are just certain things about sex that I just love.\"\n\n\"Really? What a surprise,\" I said with a hint of sarcasm in my voice. \"Tell me what you like, Grace,\" I suggested as I examined her gaping pussy closely and blew soft warm air on her open sex. God, it was lovely. So open and inviting. She clearly loved showing off her body, and with good reason. \n\n\"Mmm, well, I love to fuck, but then, who doesn't?\" she said without reservation. \"And I love to suck cock. And I really love having my pussy eaten, which you can, no doubt, tell,\" she giggled. \"And you're doing a really fine job, I might add. Do you like the way I taste?\" she asked so innocently, like she was wondering if I liked the cappuccino she'd just brewed. \n\n\"I love your taste, Grace. I can't get enough. I could eat you all night long,\" I said, in all honesty.\n\n\"Then do,\" she replied.\n\nI leaned in with a flattened tongue and licked the length of her sex, all the way from her asshole to her clit, my tongue delving deeply as I passed by the depth of her sleek hole. I arrived at her clit and pursed my lips to suck her little love button as I looked up at her adoring eyes.\n\n\"And I love cum,\" she added. \"I mean, I love it,\" she emphasized. \"And I want you to shoot your hot load into me, Jack. Deep,\" she added as I madly tongued and played with her engorged clit. Her words were driving me crazy with lust. All thoughts of Grace being an innocent, shy young beauty were now out the window. She was a sexual vixen of the highest order. And we were just getting started. I pulled away from her and spoke. \n\n\"Mmmm. I'd be happy to oblige,\" I said. \"Would you like me to deposit it here?\" I asked as I drove my tongue as deep as it would go into the cavernous depths of her hot cunt; my nose rubbing against her clit as I swirled the tangy cavern of her vagina. \"Or here?\" I added as I lifted her ass up and drove my pointed tongue straight into the hot tight hole of her anus. I probed as deep as I could, my nose buried in the juicy folds of her pussy as she groaned loudly and squirmed under my oral assault. \n\n\"Oh, Jack! Yesss! Fuck my ass with your tongue, baby. Awww, shit!\" I began to stick my rigid tongue in and out of her dark hole as she grabbed my head and pulled me into her. Good God, I'd almost walked by this girl on the train this morning and now, here I was in a New York hotel room with my tongue rammed up her ass. I couldn't believe my good fortune. \n\nSuddenly she leaned forward and grabbed my head. She pulled me desperately toward her face and I crawled up quickly. She kissed me hungrily. My tongue, fresh from her asshole, was now swirling with hers in a passionate French kiss. \n\n\"I'm gonna want some here too, Jack. In my mouth,\" she said as our kissing paused for just a moment. \"But I want you to cum in my pussy first,\" she instructed. \"God, I want you to pound me and pump your big load of hot cum deep inside me,\" she seethed. \n\n\"Mmm, I love it when you talk dirty,\" I said as she talked between sloppy wet kisses. \n\n\"Do you? Well, then once you've rested you can fuck my ass and cum inside me again,\" she suggested. \"Then, later, if you've got anything left, you can come in my mouth,\" she added. \"I want every drop of cum you can give me, Jack. I want it all.\"\n\n\"Well, that can be arranged,\" I asserted. \"I can't wait to make a deposit,\" I joked as I gathered up on my knees between her spread legs. I grabbed my stiff cock by the root and guided the head along her slippery folds, lubricating the tip in preparation for plunging into her. I rubbed the bulbous head against her clit and pushed it against her slit, looking to find that little indentation that would take me home. I knew I'd found it when I felt the tip sink in an inch and heard Grace gasp with desire. \n\n\"Oh, God, Jack! Shove it in! Hurry!\" she begged as I did just the opposite and entered her slowly and methodically, giving her just a little more dick with each subsequent probe. Damn, she was a tight young thing, but she was also incredibly well lubricated and my girth didn't seem to bother her as I sunk into her wet pussy inch by inch. I could feel her curving her hips up to meet and encourage my entry. \n\nI raised up on my arms as she reached for my ass and pulled me into her. I gave her two thirds of my length and began to fuck her as if that was all there was. She was into it now, encouraging me with her words and movements. She looked longingly into my eyes as we began a slow crescendo. I started going faster and faster, still only part way in, and just as we were getting into a rhythm, I reared back and plunged my entire length deep into her hot young pussy.\n\nShe gasped loudly and screamed my name. She wrapped her legs around my back and now I began to fucking pound her with dick. She could not get enough and urged me on; screaming my name and begging me to fuck her harder and faster. I obliged. I got up in a kneeling position, hooked my arms under her knees, pulled her up to me and plunged back into her. My hips were slamming against her flesh and her tits were bouncing and careening all over the place. \n\nShe was talking through gritted teeth now. \"Come on, Jack! Give it to me! Fuck me! Harder!!\"\n\nI gave her everything I had in a deep pounding relentless fuck. Without warning I pulled out and spread her legs, pushing them back over her head. Now her freshly fucked cunt was gaping at me along with the tight starfish of her asshole. I leaned down and probed both eagerly with my tongue, going back and forth with abandon, moaning loudly.\n\n\"Yes, baby. Suck my cunt! Eat my asshole! Yesss!\" she screamed in encouragement. I slid my middle finger all the way into her ass as my mouth wildly French kissed her wide open pussy. All protocol had long been abandoned and the sweet young barista I thought I knew was, actually, a sex craved cum slut. She wanted to be fucked and fucked well. But I knew what she really wanted and I was ready to give it to her. \n\n\"Flip over,\" I commanded. I could tell at this point she wanted to be told what to do and she eagerly got on her hands and knees, then leaned forward so her elbows were on the bed, offering me her exquisite bottom. I once again rubbed the head of my cock along her juicy slit, getting re-lubricated. Even I couldn't stand much teasing though, and I grabbed the beautiful taper of her hips and slammed the long shaft of my dick back inside her steaming pussy.\n\nNow we were in doggy and the depth of penetration felt even better; deeper and snugger than before. The view of her perfect ass and the way her butt tapered to such a slender waist was awe inspiring. We found a nice rhythm together, me pounding forward and her pushing back, as our bodies began to crash together in unison. I loved watching the soft flesh of her cheeks jiggle tightly with each deep thrust. There's not much that I find more intoxicating than the sound of hips slamming into a soft butt in the middle of doggy style sex. Our bodies were slapping in a juicy concert of sounds; meshing in with our moans, groans and constant dirty talk. It was hard to believe such talk was coming from such an innocent looking face, but she was on a serious roll. \n\n\"Aww, fuck, Jack! Give it me harder! Fuck my tight young pussy baby! Faster!! Yes! Yes!\" she exhorted as I pounded into her as deep as I could possibly go. I looked over at the mirror and saw a strange couple in the throes of a passionate doggy fuck. Her tits were wobbling and bouncing all over the place with each deep penetrating lunge. I reached down to cup her magnificent breasts as they jiggled in my palm. They felt so incredibly big and soft hanging from her body as she offered herself up for my pounding assault. \n\n\"Oh, God, Grace. I'm close. I'm gonna come in you,\" I warned as I felt a wave of that familiar punch of pleasure getting ready to explode.\n\n\"Yes, Jack! C'mon baby! Fill me with cum! Fuck me deep! Give me everything,\" she screamed. Between her exhortations and the increasing rhythm of my swollen dick in her hot tight young cunt, I couldn't last any longer. \n\nI screamed to warn her and I released. I came and, I mean, I fucking came hard. Really hard. I could feel my cum exploding out of my cock just as I was planted as deep as I could be in Grace's well. I know she could feel the hot jets of seed splashing off the inner walls of her vagina. Even at my advanced age, I could still come with strong pulsing spasms and shoot a load across the room. This afternoon that load was being buried deep inside Grace's precious body. \n\nGrace could feel me let go and she felt the end result deep in her core. We both were out of breath and sweaty messes. Even so, the late afternoon sun was still slicing a sharp amber edge through our room. There was plenty of time left in the day, and the night. \n\nI slowly pulled out, bringing a big dollop of creamy cum with me, and gazed down at the view. Grace's pussy was open and gaping with that freshly fucked look and her own juices coated the inside of her slender thighs.\n\n\"Wow,\" was all I could muster.\n\n\"Wow, indeed,\" she replied. She turned over, her breasts still loose and jiggly. \"That was downright amazing, Jack.\" She was beaming from ear to ear, as was I. \n\n\"And the day is still young, my dear friend. We can stay here or go out or stay here or go up to the bar or stay here,\" I suggested. She giggled that sexy little giggle of hers and almost looked like she was ready to fuck again. \n\n\"I vote for staying here, for a little while longer,\" she said. \"Maybe you can take a few more photographs.\" Damn, I liked the way she thought. \"And then maybe you can fuck me again,\" she added casually, like she was suggesting I take out the garbage or pick up some milk at the store. \"In the ass this time, Jack. I want you to fuck me in the ass.\"\n\n\"I like the way you think,\" I said as we lay down and snuggled together for a little bit. Her soft body felt so warm and comforting as she pushed her butt against my stomach and we spooned. \"I like everything about you,\" I whispered in her ear as I kissed her neck and shoulder. She giggled and pushed her butt against my limpid cock. Oh my, what a night it was going to be.\n\nAnd to think I could have just said hello and walked by her on the train. Serendipity was alive and well."
    ],
    "authorname": "gapster7",
    "tags": [
        "new york city",
        "coffee shop",
        "barista",
        "old man young woman",
        "older/younger",
        "train",
        "older man younger woman",
        "photography",
        "uconn",
        "high line"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-barista-2"
}