{
    "title": "Stargazing - Complete Novella",
    "pages": [
        "Author's Note:\n\nThis is intended to be more of a romantic story than quick get-you-off style sex.\n\nStargazing is the single volume completion of a story I started two years ago. Some may have read the Part 1 I posted back then, and the opening chapters of this story may seem familiar. When I set out to finish Stargazing, I decided that I would have to make changes and additions to the existing Part 1 before moving forward. The end result, the full novella here, is much better for it.\n\nHuge thanks to everybody who helped, including feedback and edits from EGRI, 29wordsforsnow and Jedits, as well as endless encouragement and support from Echo.\n\n-------------------\n\nChapter 1\n\nDuring counselor training week, all the veterans talked about opening day with a strange mix of excitement and panic. For all us newbies, they made it seem like there was a bomb in the middle of camp, and the only way to avoid getting blown up was to get everything set just right. Training week turned out to be less about training and more about rushed manual labor disguised as team building.\n\nThe camp directors went to the other extreme. In the calmest possible tones, they painted a nice, orderly picture of how camper arrivals day would go. Everything would be fine, as long as everybody followed the process. All us counselors had to do was act as guides for the arriving campers and their parents. First, check them in at the office in The Lodge, then health check at The Infirmary, then take them up to the cabins and help them unpack their bags. Always be accommodating to the parents -- but suggest firmly that this was the time to say goodbye to their kids. Finally, keep the campers occupied until everybody had arrived. Easy. The steps even formed a neat, orderly circle on the map.\n\nIn reality, a bomb exploding would probably have been less chaotic. Campers didn't arrive in a nice, even stream. They clumped together. My co-counselor Alexis and I had nothing to do until lunch, then we were suddenly swamped as five campers in our cabin all came at once.\n\nWe were placed in Cabin 2, the second youngest age group. These were girls young enough to have infinite energy, but who had mostly been at camp a year already and were bursting with excitement unrestrained by nervousness. They dashed around us, running away to hug all their friends, wanting nothing to do with waiting in line for paperwork or the nurse and everything to do with having fun.\n\n\"Perhaps designing the process around holding kids still as soon as they get out of the car might not have been the wisest thing in the world?\" I muttered to Alexis, as we watched our campers scatter. \"Are we supposed to go catch them?\"\n\n\"Maybe?\" She shrugged, flashing me a resigned smile. \"As long as we don't let any of them get eaten by a bear, we're probably fine.\"\n\nIt was her first year as a counselor, but she'd been a camper for years, and I'd been leaning on her experience a lot. \"Is it always like this?\"\n\n\"Pretty much.\" Her smile widened just a bit and she gave me a little nudge. \"Tried to warn ya.\"\n\nI thought the unpacking part would be easy because parents would want to organize their kids' beds and lockers themselves -- make sure they were neat at least once during the summer. Surely it couldn't be that much stuff. After all, how much can 10-year-olds pack? If left to their own devices, they'd probably have just come with the clothes on their backs. However, in today's age of helicopter parenting? Every one of them had two tons of bags each.\n\nOf course, it simply wouldn't do to have the parents labor to carry it all up the hill. Alexis and I strained and sweat under bag after bag, all while trying to keep up enthusiastic conversation, get to know our campers, and reassure their parents that we weren't crazy people.\n\nIt was overwhelming, but that was pretty much standard now. I'd been sprinting to keep up pretty much constantly since I got here. Trying to learn all the ins and outs of camp culture felt like trying to memorize an entire new language in a week.\n\nWhich was exactly what I'd wanted. It kept me so busy that I barely thought about Sarah the entire time, which was the whole point of taking this job in the first place. To force myself to stop agonizing over the confused knot of feelings I had for my straight best friend. It had seemed like a straightforward enough plan. I'd never gone to a summer camp before, but I'd always enjoyed sports and hiking, I got along well with kids. Teaching archery was perfect for me. How hard could it be?\n\nThat confidence didn't even survive it all the way through the day. It was crushed by Lilian's parents, who took Alexis and me aside as they were leaving. \"We know she can be a handful sometimes, but she's really sweet once you get to know her.\" Her father shook both of our hands and I felt him leave something behind. \"We hope you have an amazing summer, and we're sorry.\"\n\nThen they left!\n\nAlexis and I looked, dumbfounded, at the hundred-dollar bills in our palms. \"We're sorry? What the hell does that mean!?\" We both turned to look at Lilian, who was sitting calmly on her bed smiling back at us. That wasn't the smile of an 11-year-old. It was a smile that seemed to have 'hail Satan' written all over it.\n\nFortunately, our other campers didn't seem like devil spawn. They were cute, if endlessly energetic. Once we got them unpacked and their parents left, we sent them off to play soccer with the rest of the arrivals. Watching from a distance while trying to catch my breath, it looked more like a mad dash to tackle whoever had the ball than any kind of organized sport. There were at least sixty girls going at it, yelling and laughing hysterically, neither knowing nor caring who was on what team or which goal they were meant to be trying to score on.\n\nI tried to pick mine out of the throng. The one with golden blond hair done up in pigtails was Nora, and the tiny mouse of a girl sprinting to keep up with her was Kim. Another of mine, I was pretty sure she was the one wearing the Taylor Swift shirt, was also named Alexis. We'd have to get a nickname for her soon. Following the trend of terrible music fans, Bonnie had One Direction's faces printed across her t-shirt.\n\nNote to self: no campers allowed to play DJ in the cabin.\n\nThere would be twelve of them all together once they were all here. I'd read a few advice guides before coming, and they varied wildly. Some claimed that young children are like wild animals, and you need to establish yourself as the alpha on day one or it'll be too late. Others said that you should befriend them and gently guide them along the path you want. What little actual training we'd gotten during training week had been similarly contradictory, seeming to say both of those things at once. Alexis -- co-counselor Alexis, damn, that was already mixing me up -- and I had decided to divide the roles. I'd be good cop friend; she'd be bad cop disciplinarian.\n\nOne thing all sources did agree on, though, is that children love being read stories. No matter how old they are or how much they claim to be too cool for that, they all enjoy it. When we finally got them settled down that night, at least most of their teeth brushed, and into their beds, I laid out my trump card. If they promised to be quiet and well behaved, they could pick a book and I'd read it to them.\n\nOf course, they all voted for Harry Potter. I'd brought a bunch of books -- part of me thought they would have all read Harry Potter already and would want some variety -- but I should have known better. After all, Nora had just been bragging about watching Frozen every single day for a year.\n\nThat choice did make it a bit easier for me, because I'd grown up listening to the Jim Dale narrated audiobook version of Harry Potter. I'm nowhere near his talent for voices, but I did my best to make Harry sound heroic and The Dursleys sound like selfish pigs. Sure enough, before I had to figure out how to drop my voice low enough to play Hagrid, my audience was all asleep. Even Alexis was out cold, snoring louder than all our campers put together.\n\nI smiled to myself and sighed, tiredly. It was early by the standards of the rest of the world, but camp has its own timetable, and I was bone weary. Being surrounded by people constantly for all of orientation week plus today's constant activity was tiring work for an introvert! I wasn't used to having to be socially 'on' constantly. It was seriously draining.\n\nQuietly, I put the book and flashlight away and stepped out onto the cabin porch. It was a dark, mostly overcast night, and the quiet felt warm and welcoming. There was a feel to the air -- some sense of living freshness that seemed to combine everything together. The smells of the grass and forest all around me, the wind in the trees, the low hum of chirps and animal calls, the openness that contrasted so strongly with the cityscape I was used to. I tilted my head back and took a deep breath, feeling myself finally unwind.\n\nSarah would love it here. She was the extrovert who thrived on people. I felt like I'd only barely gotten to know about a dozen people during training week out of the forty something staff members. Sarah would probably already be friends with everybody. She'd be the bridge between me on introvert island and everybody else.\n\nBack in Pittsburgh, pretty much every day after we'd finished classes, we'd get dinner together somewhere and tell stories about whatever we'd done. Even if it was nothing really eventful, we'd make each other smile and laugh with how the Data Structures and Algorithms TA had flubbed the live example, or how the high school football team that played on our field was actually better than our college team, or whether the dorm vending machine would ever be restocked. It didn't matter what we talked about, it was about the ritual. Our time together goofing off.\n\nThere was so much I wanted to tell her now! A bittersweet lump rose in my chest. Sarah would be so proud of me for putting myself out there and trying to make friends here. She'd laugh and smile and hug me, listening and making me feel like the world was all ours together. If only she was here with me...\n\nExcept, that's not really what I wanted. What I really wanted was for Sarah to be here, and for her to magically be just as gay as me.\n\nQuickly, before my feelings could overwhelm me for the thousandth time, I shoved them down. I'd finally gotten some space to decompress, and that's the first place my mind went? Down that same depressing track of self-torture?\n\nIt would probably have been easier if I wasn't so used to her company. If I wasn't conditioned to remember all the funny and interesting things from my day so I could share them with her later. If she wasn't such a great listener and she didn't make me feel special just by caring about me. If she didn't make my insides turn to mush whenever she smiled at me and--\n\n\"Your reading was amazing.\" A soft voice in the darkness made me jump a foot in the air! \"Quiet!\" The voice whispered, stifling a laugh, \"You'll wake them up after all that effort getting them to sleep.\"\n\nWhen my heart stopped beating itself out of my chest, I realized there was a darker shadow sitting on the porch railing. \"I -- uh -- I didn't see you there,\" I said, embarrassed.\n\n\"Sorry, I didn't mean to scare you. It's Jess, if you can't see me.\"\n\nJessica was one of the veteran counselors I hadn't gotten to know much yet. Blake, my fellow archery instructor, had mentioned her a few times, and although she seemed friendly, I was a bit intimidated by the way the returning counselors seemed to look up to her. We were both regular cabin counselors, but she'd been coming to camp for ages, and the veteran staff seemed to respect what she said more than they listened to the head counselors and directors.\n\n\"Um--I'm Leah. It's nice to finally meet you,\" I said, wishing my eyes would adjust faster. \"So... what brings you to my porch tonight?\"\n\n\"They sent me and a few other senior counselors to see if you guys in junior camp needed any help with bedtime. You were fantastic in there, I didn't want to interrupt it. Are you sure you've never done this before?\"\n\nThere were two sections of campers broken up by ages: juniors and seniors. The seniors got to stay up a bit later than the juniors. That's what she meant by senior counselor -- that her cabin was with the older age group, not that she was higher ranked.\n\n\"Thanks. That means a lot, coming from you.\"\n\nShe seemed amused by that. \"They hold me up as this pillar of experience, but I can't do the babies for shit. They walk all over me. Getting them to bed on time is seriously impressive. Honestly, I have no idea what I would have contributed if you didn't already have them under control.\"\n\nI sat down next to her, and she shifted so we could both lean our backs against the cabin wall. \"It was nothing really,\" I stammered, wishing I ever had any idea how to respond to compliments.\n\n\"You don't think so?\" Jess motioned to the lights still on in Cabins 1 and 3, each a little way away through the trees on either side of my peacefully quiet cabin. \"Seems your neighbors can't say the same. Want to go help them?\"\n\n\"Oh god, please no,\" I groaned. \"I feel like I'm already about to fall asleep.\"\n\nHopefully, she would think I was just tired, and my frustrating at having to stay socially 'on' even longer after thinking I was finally free wouldn't be too obvious. Reluctantly, I braced myself for yet another round of the same introduction script I'd repeated far too many times:\n\nYes, this is my first time at camp. -- I'm going to be mostly teaching archery. -- Yeah, there's clubs lots of places besides summer camps. There's a club at my school. -- Going into senior year at Carnegie Mellon. -- I'm a computer science major. -- Actually no, the gender ratio isn't nearly as bad as it could be.\n\nBut Jess surprised me. Unlike pretty much everybody else, she didn't seem interested in following her part of the script.\n\nInstead, she gave a warm chuckle. \"I'm glad I'm not the only one. If I didn't have two campers still coming on the bus from the airport, I probably would have been asleep before all the kids.\"\n\n\"Oh yeah, you're definitely not the only one.\" I jerked my head back to the cabin behind us. \"Hear that snoring?\"\n\n\"Yeah? Oh!\" Jess's smile split into a full toothed grin. \"You've got fucking Alexis as a co-counselor, don't you?\"\n\n\"Yep!\" I laughed, then quickly dropped my voice again. \"I can't believe that's enough of a giveaway for you to instantly know it's her.\"\n\n\"Oh trust me, by the end of a summer sharing a cabin with her, that snore will be permanently imprinted on the inside of your skull.\"\n\nI groaned. \"You sound like you're speaking from experience?\"\n\nJess's smile turned slightly mischievous. \"In fairness, Alexis has plenty of stories about me too.\" She settled back, leaning slightly into me. \"But yeah -- she was a part of the L.I.T. group last year in my cabin. It's awesome she wanted to come back as staff. She's great.\"\n\nOkay, mental camp glossary... open up to the L's... I was pretty sure L.I.T. stood for Leaders In Training. The oldest camper group, who were entrusted with a bit of responsibility. Without thinking, I found myself saying, \"maybe it says something about me, but whenever I hear that, I always think it means Long Island Iced Tea at first, even though there's no second I.\"\n\nJess looked questioning for half a second, then made the connection. This time, she had to stifle her laughter. \"Wishing you had one right now?\"\n\n\"Would kill for a few.\"\n\nJess cocked her head to the side slightly, her eyes meeting mine. \"Rough day?\"\n\nI paused, almost reflexively giving the usual one word answer people always give to questions like that, but something about Jess stopped me. She'd sounded like she wasn't just asking for the sake of being polite. She sat quietly, waiting for me to respond, her barely visible eyes meeting mine in a way that seemed like she genuinely cared about the answer.\n\n\"You really want to hear about it?\" I asked, hesitantly.\n\nJess nodding encouragingly, playing with her hair as it fell around her ear and waiting for me to go on. Shadows played across her face as her hair shifted, making her smile dance in and out of sight in a way that was a little distracting.\n\nWell, I couldn't exactly pat myself on the back for becoming a socialite, then tell Jess to fuck off, could I? Besides, hadn't I just been wishing my best friend was here to listen to me vent? A perfect stranger was a shitty substitute for Sarah, but beggars can't be too picky.\n\n\"Okay, but please, stop me if I'm boring you.\" And, feeling more than a little self-conscious, I spilled my guts to her. Not everything, all the stuff about Sarah felt far too personal, but I vented about camp culture shock and feeling like I was drowning. Jess was an attentive audience. She nodded encouragingly, asking the occasional question and making some comments, but she never tried to interrupt or hurry me along.\n\nIt felt good. Relieving. Like, simply giving voice to all the things that had been trapped in my head made me feel less tense. Somewhere along the way, I forgot I was talking to a relative stranger. I forgot the disappointment I'd felt having solitude snatched away from me. I even forgot to feel disappointed it wasn't Sarah by my side. Well, at least a little.\n\n\"I don't mean to sound like I'm not having a good time here. I am! It's just... I don't know.\" I shrugged, helplessly. \"It's like, we're only eight days in, and not even a full 24 hours with our actual campers. On paper, the job has only just started, but I already feel like I'm miles behind everybody. Sorry, I don't mean to sound like a downer with all this complaining.\"\n\n\"You don't, I totally get you,\" Jess said reassuringly. \"It's just all a bit much to absorb all at once.\"\n\n\"Honestly, it isn't even really that. At least I'm used to a steep learning curve. Every semester at school feels like a whole new mountain of information to climb. The difference is, there, I've got my whole life already set up.\" I signed to myself, willing Sarah's face not to flash through my mind, and failing. \"Here, there's so many veterans and everybody seems like they've already been bonding for years. You've all got so many stories about what happened last summer, that one time at wherever, that time she did that, you know what I mean. It's hard to build up to all that shared history and comradery in a week.\"\n\nJess nodded, thoughtfully, making her hair do the cute shadows thing across her face again. Fireflies danced around us, creating little pinpricks of light in the trees. A warm breeze gently rocked through the branches around us, and everything seemed to sway. It was hard to focus on anything for too long, my eyes kept drifting with the motions. \"I think you might be selling yourself short,\" she finally said.\n\n\"Oh?\"\n\n\"Like, the story you told about the demon camper. What was her name?\"\n\n\"Lilian.\"\n\n\"Yeah! You and Alexis will remember that moment forever. Her own father basically poisoning your first impression of the poor girl, plus her look making it perfect.\" Jess chuckled, \"maybe she'll turn out to be actually evil, who knows. The point is, you and Alexis have already started bonding. Years from now, if you decide you want to come back, you two will relive that story, and you'll sound like just as much of a nostalgia junky as we must seem to you.\"\n\n\"Thanks,\" I murmured, a warm ball of happy gratitude filling me up inside. Honestly, I wasn't sure I more than half believed her, but that didn't matter. Jess hadn't blown me off or given me some stock 'it'll be okay!' bullshit! It didn't really matter what she'd said, the feeling that she really wanted to make me feel better was more than I could have possibly hoped for.",
        "We continued chatting quietly about less intense topics. Nothing in particular -- some about her favorite campers, some about trouble kids to look out for, stories about pranks the campers played on each other, things like that. Her voice had a vaguely musical ring to it that made her whispered words seem soothing. She also smelled nice. Maybe it was because I'd spent the last week surrounded by sweaty bodies covered in bug spray and sunscreen, but Jess simply having showered made her seem appealing.\n\nSlowly as we talked, the clouds through the trees opened up, and the tiny crescent moon peeked through. A bat flew over our heads, momentarily visible against the moon before vanishing into the night. Everything around us felt alive and active while Jess and I existed in a little bubble together in the middle of it all.\n\n\"I'd love to get the chance to go stargazing sometime,\" I said, still looking upward in hopes of seeing the bat fly back.\n\n\"That's my absolute favorite thing in the world.\" The way Jess said it, completely serious and earnest, made it clear that she meant it.\n\n\"Yeah? Do you think you could you show me a good spot for it one night?\"\n\nFor some reason, Jess found that hilarious. She gripped my arm and struggled to keep herself quiet. \"I'm sorry,\" she eventually got out between breaths. \"It's just that I usually have to beg people to come out on adventures with me. I've got a bit of a reputation for being a little extreme sometimes, and I think it scares people off. Yeah, I know the camp pretty well. You could say I know a spot or two.\"\n\nI smiled wide. I'd made a friend who I actually really liked, and who seemed excited to do something together! Whatever it might say about me, it made me very happy to have found that.\n\n-------------------\n\nChapter 2\n\nSomeone, somewhere, said that no plan survives first contact with the enemy. There's an underlying assumption there -- that you've actually made a plan in the first place. Some things seemed so basic, it didn't even occur to me to plan for them. For example, it never entered my head that kids' shoelaces would be problematic. I'm not positive how old I was when I learned to tie mine, but I'm pretty sure it was younger than my 10 and 11 year old campers.\n\nI'm not a morning person. Before coming to camp, my earliest class was at 11:30, and I had to set an alarm to be up on time for it. 7:00 AM was the stuff of legends to me. Like, it was this mystical world where only the bravest and most hardened of adventurers would dare to go. Waking up at 7:00 and climbing Everest -- roughly the same things. It wasn't even a gentle awakening. Elizabeth, the head counselor who I was convinced didn't ever sleep, got on the loudspeakers and cheerfully dictated sleep was over.\n\nI suppose it could have been worse. Boys Camp played a goddamn bugle, like they were role playing boot camp something.\n\nAdd to that that it was really cold in The Adirondacks before the sun had the chance to heat everything up, and you had a very sleepy me with cold fingers trying to figure out to tie a shoelace from the opposite perspective I'd done it my entire life, while eleven other kids dashed around me. If Alexis hadn't seen me struggling and barked order across the cabin, I would have never made it as far as breakfast.\n\nAlexis was one of those small-framed people who surprised everybody by the sheer volume she could produce. \"Breakfast in 10 minutes!\" Her voice easily overpowered everybody else's. \"Everybody who's ready, out on the porch. Now!\" She produced an inflatable beach volleyball, the sort that get bounced around in concerts, out of nowhere and she tossed it out the door. In a rush of chaos, they all chased after it, pushing and laughing and acting for all the world like they'd been waiting for hours for something interesting to happen, and weren't fresh out of bed. Kim barely gave me enough time to finish her laces before she raced out with the stampede.\n\n\"Did you lace that thing with catnip or something?\" I asked, staring at the now closed door disbelievingly.\n\nAlexis started saying something, but was cut off by laughter behind us. We both jumped and turned to see Lilian sitting calmly on her bed.\n\n\"They are like a bunch of cats!\" She chuckled, grinning at both of us. The way she emphasized 'they' seemed deliberately intended to separate herself away from the group. \"Who would have thought herding cats was as simple as throwing a ball?\"\n\nWithout waiting for an answer, Lilian got up and walked outside. Calmly and evenly, just to make the distinction even more obvious.\n\nAlexis and I exchanged a look. \"Her bed is made?\" she observed, disbelief at that fact making it sound like a question. \"Did you tell her to do that?\"\n\n\"Nope.\" Not only did the bed look immaculate, complete with the comforter tucked under and an even line of sheet folded over top, the drawer under her bed was perfectly organized. \"Does she have a secret life as a hotel maid or something?\"\n\n\"Hopefully whatever she's got is infectious,\" Alexis said, looking around the rest of the cabin.\n\nIt hadn't even been 24 entire hours, but already there were clothes, shoes, stuffed animals, towels, and all kinds of junk all over the place. There was even a much-read looking issue of Seventeen. Who the hell had brought that? Who in our camper's generation would ever read a physical paper magazine? Other than Lilian's pristinely ordered bunk, everything was a mess. \"And she's supposed to be the evil one?\"\n\n\"Evil comes in many forms,\" Alexis said darkly.\n\nBreakfast was mostly a haze to me, but coffee makes everything better. Somebody very smart had realized the connection between coffee and counselor moral, and the camp had invested in a top-notch coffee maker. Unfortunately, that smart somebody must have retired immediately afterwards, because they'd only bought the one machine to fuel forty of us. We must have looked like the line of extras at a filming of The Walking Dead, all queued up waiting for caffeine so we could become human again.\n\nAfter breakfast, everybody returned to their cabins for 45 minutes of mandatory cabin cleanup. Alexis gave a rousing speech, trying to ignite our camper's competitive spirits to win the cleanest cabin award, which came with a plaque that would hang in the cabin with all our names on it. I hadn't looked very closely at the dozen or so plaques that hung from the rafters, but Alexis took great pride pointing to her name on the newest one.\n\n\"I was like all of you when I was younger. Who cares about some dumb award, I came to camp to have fun! Well, let me tell you all, winning is a ton of fun, and I can personally promise that you'll be very happy you won every time you come back into this cabin and see your name up there.\" She smiled fondly up at it, then clapped her hands and started barking out job assignments. Quickly, the campers scampered into action, trying to look too busy to be enlisted into sweeping or carrying the trash up to the office.\n\nDespite seeming quite roomy before all the kids arrived, the cabin was more than a little chaotic with fourteen people all rushing around. I stood up from my bed where I'd been listening to Alexis speak, watching everybody bustling around and wondering what I was supposed to do now. Was it better to help the campers clean, or would that send the message that they could just sit back and let me do the work?\n\nWell, there had to be some value to leading by example, so I set about bringing order to the mess of clothes I'd stuffed in my locker.\n\nAlly -- who apparently preferred that nickname to Alexis anyway -- was attempting to make her top bunk bed and finding out why all the returning campers had opted for bottom bunks. Kim and Nora, too, seemed to be doing more damage to their top bunks than help. The bunks were high enough up that it was impossible to reach them from the bottom, so they had to climb up into them. But the trouble with that was anywhere you put your weight on the bunks themselves messed up the blankets. The best way to do it was to stand on the wooden frame and straddle the beds, which for somebody as small as Kim involved her nearly doing a split.\n\nLilian opened the locker next to mine, but she didn't seem focused on it at all. Instead, her eyes were glued to the crowd now trying to balance on top bunks. There was an almost hungry light in her eyes, like a cat watching birds out a window. Just like her bed had been before breakfast, Lilian's locker was immaculately neat.\n\nI remember when we broke up, the first time\n\nSaying, \"this is it, I've had enough\"\n\n'Cause like, we hadn't seen each other in a month\n\nReflex took over. Without thinking, I flew across the room and plucked Bonnie's phone out of her hands.\n\n\"But Alexis said we could play music during clean up!\" Bonnie complained.\n\n\"Yeah, I did say that,\" Alexis agreed. \"But I never agreed to T-Swift.\"\n\n\"What do you have against her?\"\n\n\"Nothing,\" I said, scrolling through Bonnie's playlists and trying to hide contempt for what I saw. \"All of Max Martin's songs are really catchy the first thousand times you hear them.\" Alexis and Lilian appreciated my sarcasm, but unfortunately it went over everyone else's head.\n\nBonnie frowned, confused. \"But it's not Max -- that guy. It's Taylor Swift.\"\n\n\"You ever wonder why every pop song sounds exactly the same? It's because more than 80 percent of them are written by the same two guys. Max Martin and Lukasz Gottswald.\"\n\n\"But if you said it's really catchy, why are you stopping her song?\"\n\n\"Because she'd like to hear some music, not Taylor Swift.\" Lilian's voice oozed sarcasm, which only deepened Bonnie's confused look, but made Alexis and me crack up.\n\nIt would really suck if Lilian turned out as bad as her parents seemed to think she was, because in that moment, she became my favorite camper.\n\n-------------------\n\nChapter 3\n\nSurprisingly, the cabin actually looked reasonably good by the time sign-up for first period activities was called on the loudspeakers. It was still a mystery who had brought that issue of Seventeen. Nobody had confessed, but Josselyn had volunteered to take it 'just so it's out of the way'.\n\nI didn't go to sign-ups, but apparently they involved going through the role call of campers and letting them pick what they wanted to do for the morning's two activities. There were some options, each with a cap, and getting to choose first before the best ones got filled up was a big deal. Instead of that, I hurried down to the archery range to get set up for the day.\n\n\"Got any plans for next Monday night, Leah?\" Blake asked while we set about stringing bows.\n\n\"What? A week from now? I've barely got a grasp on what I'm doing today. What's happening Monday?\"\n\n\"Off nights start up. If nobody's ambushed you yet, my crew would love to ride in your truck.\"\n\nI chuckled. \"Let it never be said you left anybody wondering what you're thinking. You only like me because of my ride.\"\n\n\"I do not!\" Blake feigned outrage. \"I'll have you know I like you because you're a badass archer... who also happens to have an awesome ride, that would be great for taking friends out for off nights in.\"\n\n\"Jackass!\" I attempted to give him a shove, but Blake's massive bulk only resulted in me pushing myself backwards. He couldn't have been shorter than 6 foot 4, and I was convinced his huge unruly beard accounted for a non-trivial proportion of his weight. \"Fucking giant,\" I grumbled. \"You guys really plan this stuff out a week away?\"\n\n\"Rides are very hot commodities. As soon as people realize that big truck is yours, you'll have people begging left and right.\"\n\nI stroked my chin, pretending to think hard. \"I don't know... Sounds like I'll get to pick the highest bidder every off night.\"\n\n\"You won't find a better deal than ours! Jess brings the booze, I bring stuff to start a fire, and Anderson doesn't drink, so he's lifetime designated driver.\"\n\nJess, eh? I liked Blake, and after jokingly giving him a hard time, I would have agreed regardless. But after last night, the chance to get in with Jess's circle had me excited. \"Alright. Twist my arm, why don't ya.\"\n\n\"Great! Now you've agreed, I should probably mention that we'll probably end up putting a bunch of crap in the back of your truck. And you'll probably have to help us carry stuff to where we have in mind.\"\n\nI rolled my eyes at him. \"You remind me of all my business major friends back at school.\"\n\n\"That's not a compliment, is it?\" He laughed.\n\n\"Nope.\" How to find out more about Jess without seeming too interested? \"So, speaking of Jess, she's the rugby coach, right? I think I'm with her next period.\" It had surprised me seeing that on the schedule. The girl with the calming, musical voice who had drawn me out by being a fantastic listener was also a hardcore rugby player? Just going by her vibe last night, if I hadn't been told, I would have lost that bet.\n\n\"Yep. The rugby program here is kind of her baby. She's really proud of how popular it is now.\"\n\n\"But I've never played before! How did I end up getting assigned there? How am I supposed to help teach it?\"\n\n\"Don't worry, Jess will handle all that. She just needs three or four sets of extra eyes. She'll probably ask you to run through the drills along with the campers and help maintain order.\"\n\nI raised an eyebrow. \"Three or four extra counselors are necessary just to maintain order?\"\n\n\"You clearly have not spent very much time around campers yet,\" Blake laughed.\n\nAll my campers madly dashing after Alexis's beach ball flashed through my mind. \"Point taken.\"\n\nOn top of being responsible for a cabin of campers, everybody had an activity area of specialty. Blake and I were both archery, but clearly, it didn't mean it was the only activity we'd do all summer.\n\nIt did mean we'd spent most of counselor training week setting up the range. We'd bonded while hauling the enormous straw targets and wooden frames from the winter storage barn all the way across camp, hanging ropes from trees and draping backdrop nets over them, and searching the area for dozens of lost arrows from last year.\n\nOn first impression, the camp range left a lot to be desired. For one thing, it was the single most buggy spot I'd ever encountered, and we both came away with tons of mosquito bites before we got the burners running. Even with them and a gallon of bug spray each, we still had to swat mosquitos away every so often.\n\nThe more time I spent there, though, the more I liked it. I'd thought it would be annoyingly windy and that would interfere with arrows, but the trees surrounding the clearing blocked almost all of it. Our netting did a good job blocking arrows flying into the forest, and after the bugs had mostly been conquered, it felt like something out of an epic fantasy. There was a cluster of apple trees surrounding the equipment shed that added an array of reds to the backdrop of green pines and white birches. The line of trees along the top of the hill perfectly blocked the worst of the sun, creating a cooler feel that was very welcome.\n\nAfter getting used to this, going back to the drab indoor range at CMU was going to be so rough.\n\n\"Showtime,\" Blake nodded down the path towards the sounds of excited voices.\n\nBeyond splitting up age groups, the camp kept boys and girls separate for nearly everything. Gender segregation was so much the norm that Blake and I sharing an activity was very unusual. Girls Camp and Boys Camp were almost completely separate entities which happened to share some of the same facilities. That morning, we were with the junior girls. They came in a heard, shepherded by Abigail on her way down to the Climbing Tower. She waved, waiting long enough for them to get to us before disappearing down the path.\n\nA wide smile grew across my face. This was home. Jumping into a new place with an entirely unknown culture of norms, rules and expectations was terrifying. Teaching my passion was like slipping back into my element -- like being back home at the CMU club, standing side by side with Sarah teaching freshman.\n\n\"Welcome to the range, everybody. How many of you have been here before?\"\n\nWe had eight campers total, which we'd expected. That was the maximum cap, and archery was one of the popular choices that would close out quickly. Most were girls I didn't know yet, except for Lilian and Evelyn from my cabin. Five of them raised their hands. \"Great! This should be familiar to you already, but as a refresher, we'll go through the rules of the range.\"\n\nThe speech was pretty much autopilot. Explaining what instructions would be given -- groups getting their bows and stepping up to the line, then knocking an arrow, and only then firing -- basically, not doing anything until told to do so. Blake modeled the process while I called out the commands, making an exaggerated show of deliberately messing it up so I could ask the campers what he'd done wrong and what he should have done instead.\n\nI watched them as much as they watched me, keeping track of who wasn't paying attention, who was jittery to grab a bow and start shooting, and who was nervous. Mostly, with the one exception of the girl in the middle who said her name was Tabby, everybody seemed to be paying attention. Surprising. My college groups could learn a thing or two from these pre-teens. Lilian especially. She watched with a focused intensity, taking in every move Blake made as I narrated his slow motion shot demonstration. It was actually a little scary. For a moment, part of me wondered if teaching a kid with that look in her eyes how to use a deadly weapon was the best idea.\n\nWith just a few seconds left in the demonstration, Tabby's patience ran out. \"Can we shoot yet!\"\n\n\"Patience, Tabby,\" Blake admonished.\n\nShe bristled. \"But I've been waiting all year!\"\n\n\"We all have,\" said somebody in the back.\n\nEverybody shared her same enthusiasm now that they sensed the time was here. Every hand shot up when I asked who wanted to be part of the first group of four to shoot, most of them straining to be up the highest. Did they think that's how I'd pick? By height? If that was the system, I would always be last.\n\nI picked three at random, and was about to select the last when I realized I'd been wrong. Not everybody was hopping up and down on the benches desperate to be chosen. Lilian sat as calm as she'd been this morning when she'd surprised Alexis and me. She still had her focused excited look from the demonstration, but unlike everybody else, she held herself back from going crazy.\n\nWell, reward the kind of behavior you want to encourage.\n\n\"--And Lilian, you come up too.\" Tabby glared at me, over to Lilian, and back to me, as if trying to decide where to direct her ire. For whatever reason, she picked Lilian, and glowered at her as she made her way to the rack and selected a bow. There weren't many left, and she tentatively picked up the one on the bottom, which was the 45-pound draw I used myself. \"Here, this one will be better for you,\" I scanned down the bows and plucked one of the 15 pounders out.\n\n\"Why that one?\" She asked.\n\n\"Try to pull the string.\" She did, barely managing to get it half way drawn. \"Don't let the string go!\" I added quickly. \"If you do that without an arrow, it's really bad for the bow and you can get hurt.\"\n\nTo my absolute astonishment, Lilian nodded slightly. \"Makes sense. The energy has nowhere else to go without the arrow.\"\n\nBehind Lilian, Blake raised an eyebrow. \"Are you sure you've never done this before?\" I asked.\n\n\"Yep,\" Lilian smiled brightly. She traded for the lighter bow with me, then took her spot on the line with the others.\n\nHow had she known that? I exchanged another look with Blake, and he was clearly wondering the same thing. Among archers, everybody knew dry-firing was bad, but even amongst my college group, not everybody understood why. Half the kids in my cabin couldn't figure out shoelaces, and apparently Lilian had a firm grasp on potential energy converting to kinetic energy, and kinetic energy needing to find an outlet.",
        "In terms of pure results, the best that could be said about the first group was that they didn't miss the targets by so much that we couldn't find the arrows again. That hardly mattered. What mattered was that, by the end, Violet could knock her arrows without my help, Tanasha's shoulders weren't hunched over, Rachel wasn't using her whole fist to grip the string, and Lilian was consistently pulling back to a consistent anchor point.\n\n\"Great job, all of you. Remember what that form felt like, and keep doing it next round. Now, let's get the arrows.\"\n\nSomehow, one of Lilian's arrows had gotten so lodged in the wooden target frame that we needed a pair of pliers to get it out. I'd been more than a little disgusted by the crap arrows the camp had given us to use, but seeing the abuse they'd be put through, I had to admit the wisdom. Probably better to have tons of three-dollar arrows instead of fewer quality ones.\n\nTabby was an interesting one. When I gave the word, she sprinted to the bow rack and planted herself at the far left target, loudly declaring, \"I got the best spot!\" She wasn't bad. Easily the best of this group. Of all the kids, she was the only one to hit the target with all five arrows. Still, she stamped a foot, radiating frustration. \"I suck now.\"\n\n\"Your bow arm is flying off to the side,\" Lilian said from the bench.\n\n\"What?\" Her tone should have been a warning sign, but Lilian didn't notice.\n\n\"It's why all your arrows are going left,\" she explained. \"Your left arm is going that way after your release--\"\n\n\"Who asked you?\" Tabby asked, glaring daggers at Lilian.\n\nFor a second, Lilian looked surprised, but if Tabby was used to people backing down from her, she'd picked the wrong person to make an example of. Lilian met her gaze evenly, her lips slowly curling into that smile that kept unnerving me.\n\n\"She's right, Tabby,\" I jumped in, feeling like it was already too late. \"You've got a decent grouping going on the left there, that means you're doing most things right. You just need to work on keeping your bow arm steady.\"\n\nQuickly, seeming relieved to have an excuse to turn away from Lilian, Tabby turned and aimed her words at me. \"Oh. Thanks.\"\n\nAnother group swap.\n\nTabby sat down heavily on the bench, which tipped over backwards and dumped her on the ground. Laughter burst from every direction, except Tabby herself, who was beat red as she got back up. Something grabbed my attention from the corner of my eye, and for just a second, Lilian and I shared a look. There was that smile again, evil, except now looking distinctly self-satisfied. Just a second, and then Lilian ducked her head and pretended to be very interested in her shoes. As usual, she completely failed to look innocent in the slightest.\n\nI was supposed to say something to her, right? Reprimand her for extracting vengeance? But I couldn't prove she'd done anything. It was just a guess. A guess I'd be completely shocked if I was wrong about, but a guess all the same. Besides, she'd just been trying to be helpful before Tabby jumped down her throat. Could I really blame her?\n\nStill, I couldn't just say nothing. Right? That would be like implicitly telling her that it was perfectly fine to set booby traps for anybody who annoyed her.\n\nBut I still had an activity period to run and seven other campers who needed my attention, so I put off thinking about it. The rest of the morning passed comparatively uneventfully, and at the end of the period, I walked the girls up to the office so they could go off to their next activities.\n\nAnd then rugby with Jess made me forget all about it.\n\n-------------------\n\nChapter 4\n\nIt was late. The mess hall was noisy with counselors enjoying some adult socialization time after putting the kids to bed, and I sat in front of my laptop trying to figure out how to describe everything in an email to Sarah that didn't go rambling on for fifty pages. The words just wouldn't flow right. I'd wanted to do this for ages, but now I finally got the chance, typing into a cold and unfeeling gmail screen just wasn't the same as actually talking to her. I wanted to hear Sarah laugh, see her smile, feel her warm presence beside me...\n\nStop it! Stop thinking that way!\n\nI sighed inwardly and forced my mind back to the email. A few paragraphs on training week, a few more on my campers, a few anecdotes about funny camp norms. Things like calling the lake \"WF\" for Water Front, and how everybody sounded like they were barking when they talked about going for a swim. How the hell did it add up to eight pages? I hadn't even gotten to the good stuff yet!\n\nHow to describe the morning's rugby period without coming off like a horny lesbian gushing over her new crush? Not that Sarah would be deceived by any amount of downplaying. She knew my type well enough to pick up on it instantly. Not anything specific physically, my type is basically any woman who make me go WOW! YOU'RE AMAZING!\n\nSarah had that YOU'RE AMAZING factor in fucking spades. On top of everything else I loved about my best friend, she was the most brilliant programmer in our year, and it was incredibly sexy.\n\nAnd Jess had it too. Again, it wasn't the way she looked -- though she did have a lot going for her there. It was the way she'd managed to create an environment that felt exciting and competitive, but that came with a strong feeling of comradery. The way she'd taken the more shy girls and, in two short hours, had them running and tackling, and then smiling ear to ear as they helped each other up. The way everybody had come away absolutely covered in sweat, mud, and more than a few bruises, and nobody could wait to do it again.\n\nEven having been there the whole time, I'd no idea how she'd done it. One moment, we'd been boiling and biting into mouth guards to fit them, and the next we were all laughing and cheering our way through learning to tackle without killing each other. It was like Jess's enthusiasm and positivity were both infectious, like she were the rugby version of the Pied Piper, and we were all the town's children dancing along behind her.\n\nHow do you tell the straight girl you're in love with about the rugby badass you're suddenly finding yourself attracted to? I grinned, in spite of myself. Oh, the absurdity that is my life.\n\nTen pages. Sarah would just have to live with a ton of rambling, because that's what she was getting.\n\nWhen I got back to the cabin, the day had caught up to me, and I felt tired enough to pass out instantly. To my surprise, there was a light on inside. Somebody with a flashlight. Odd. Everybody had been quiet when I'd left, and Alexis was obviously asleep from the snores audible from the porch.\n\nIt was Lilian. She lay in her bunk with a book in front of her, looking up at me in the doorway like she'd been caught trying to rob a bank.\n\nWhy? Was I missing something? Was there some kind of rule against this?\n\nActually, come to think of it, they had mentioned we needed to make sure our kids were getting enough sleep, and we should confiscate flashlights after a certain time.\n\nThis place had a damn rule for everything.\n\nWell, I wasn't about to become the kind of person who gives children crap for reading books. She was being quiet, not bothering anybody. Everybody else was already asleep, so clearly the light was fine. Let her do her thing.\n\nSo I gave Lilian a quiet \"Good night\" and tucked myself into bed.\n\nLilian eyed me, almost suspiciously. Like she half expected me to spring out of bed and shout SURPRISE! And take her flashlight away from her.\n\nWas that the kind of thing she'd learned to expect from adults?\n\nBut, before I could wonder much more about it, I was asleep.\n\n-------------------\n\nChapter 5\n\nThe next few days passed in a blur of camp activities, quick conversations and meaningful looks.\n\nIf I had one major take-away, it was that camp people are fucking insane. Seriously! Take a regular, down-to-earth person and drop them into a summer camp, and they'll have lost their mind within a week. It happened to me. For just one example, I got into cheering.\n\nFor the uninitiated, cheers not a quick an easy \"huzzah\", nor something with skirts and pom-poms. Cheers are full body, full audience participation ritualistic singing, chanting, yelling, screaming, table banging and stand up dancing affairs. They transform the Mess Hall into a madhouse, and they take place at every single meal. And, despite being a lifelong quiet introvert, I found myself loving it! Even at breakfast, once I got some coffee down and let myself give in to the hive mind, it was a lot of fun.\n\nJess was the craziest of them all. She was often the instigator, riling everybody up and inspiring them to new heights of volume. She swept between tables like a tornado, sweeping people up into her storm until the building shook. It was hard to believe the voice I'd found so peacefully soothing by night could produce so much sound the next morning.\n\nAt least all that didn't get started until everybody was finished eating. I had more than enough to keep me occupied during meal times between making sure my homesick campers ate enough, my overeager campers didn't stuff themselves with nothing but sugar, and nobody spilled anything too messy. And, of course, stealing glances at Jess from across the room.\n\nBeing the center of attention that she was, it was impossible not to take notice. She was cute in a way that set my incredibly unreliable gaydar hopefully buzzing. Her hair came down to just above her shoulders, and it apparently rebelled at being tied back in a ponytail as a few errant strands kept falling across her face. Even from a distance, her eyes were striking in their green tinged sharpness. She had a medium build overall, and honestly wouldn't stick out in a crowd too much if not for one thing -- her tattoo.\n\nJess had a nearly full sleeve tattoo down her left arm that really drew the eye. Multiple interwoven patterns of trees, branches, leaves, flowers and birds cascaded from her shoulder down nearly to her wrist. It seemed to naturally flow across her arm from one angle, and then she'd shift slightly, and I'd find myself following a different pattern back up the other direction. It was beautiful, like a work of art across her skin. Once it drew me in, it held my attention and made it hard to look away.\n\nThe more I looked at her, the more I saw that seemed appealing to me. Her close-cut nails and rough hands that spoke of an active lifestyle outside of camp -- her firm jawline and the way it softened ever so slightly whenever she smiled -- her cute earlobes that seemed to have been designed specifically to be nibbled on... It all combined with the comfortable and friendly way she'd made me feel that night on the porch, and the way she'd impressed me at rugby, to send little butterflies of warmth fluttering inside me.\n\nOf course, she eventually caught me staring.\n\nI glowed red in embarrassment, and I've no idea what she saw in my face, but she smiled wide and let her intense eyes have their way with me. It's hard to describe -- like she was stripping me down and looking into me, and she clearly liked what she saw. Her eyes met mine, then she slowly let them wander over my body, lingering on my lips and chest, her expression subtly shifting to convey hungry desire. My own eyes went wide as the seconds ticked by and she didn't look away, and I realized this wasn't the kind of look straight women give each other. It was hard, but I forced myself not to get completely overwhelmed by her attention and the rush of heat it evoked in me. Deliberately, I brushed my hair to the side and smiled playfully, letting her see my eyes wandering over her body, appreciating the erotic swell of her breasts and her oh so kissable ears.\n\nUnfortunately, I was called back down to earth by instinct and a flash of danger in the corner of my vision. I spun just in time to rescue Kim from spilling milk all over the table. Kim, our smallest camper by at least ten pounds, desperately wanted to be self-sufficient and not look like she was being babied in front of anybody else. At the same time, she didn't quite have the strength yet to do things like pour milk from a full gallon without losing a bit of it. Alexis and I needed to keep a constant eye on her at meals.\n\nKim glared at me. She needed our help, but she resented it when we gave it to her. Damn! Was this what I'd put my parents through constantly for years?\n\nUpon reflection, I was probably worse. At least Kim could make a case for being cute. That definitely wasn't me at her age.\n\nThe moment was long gone by the time I looked back. Was it a moment? Was I reading too far into it? Did one nice evening's conversation suddenly make me enough of an expert on all things Jess to tell? I mean, after all, it was only a look. A hot, erotic look... but just a look!\n\nShe was surrounded by people again now. I sighed, feeling the heat seep away. It was the way I was used to seeing her -- in the middle of a group. Crowds just seemed to materialize around her out of nowhere, which was part of why I'd been too shy to approach her before.\n\nIt was almost surprising to find myself wanting to do it now. But even if I did, what would I say? Hey, you totally caught me gawking at your ink and I thought we shared a look, and by the way, wanna cuddle?\n\nI sighed inwardly. You'd think, coming off the heels of my enormous unrequitable crush on my best friend, I'd have learned to find out for sure if somebody likes women before becoming attracted to her. What I wouldn't give for that kind of control over my emotions...\n\nHow much was I actually attracted in Jess versus simply being attracted to the first hot woman here to seem even slightly interested in me? I didn't want to think about that -- didn't want to feel even more desperate for a connection with somebody than I already did. On top of that, how stupid was it that I also felt slightly guilty? Like hoping for something with Jess was somehow being disloyal to Sarah. I shoved that thought down too. Just once, it would be nice to be able to do something nice without overthinking the hell out of it.\n\nMaybe something would happen, or maybe I was imagining the whole thing. Either way, I resolved to just go with it and enjoy everything as much as I could. I was off from school being paid to be out in the sun playing sports and shooting arrows all day. If I couldn't manage to put my problems away and have fun here, there really was no hope for me.\n\nAnd, over the next few days, I did exactly that. It was wonderful and carefree, throwing frisbees, shooting arrows and bonding with my campers, but despite that, Jess stayed on my mind. We'd run into each other between activities and exchange a joke here, a compliment there, and sometimes the occasional innocently flirtatious quip. Even in the middle of a crowd, she had a way of focusing on whoever she was talking to that made me feel special and noticed whenever we were together. I thought I caught her looking at me a few times, but I was never quite certain. The more we brushed together like that, the more I found myself liking her. And the more I liked her, the more determined I was not to get my hopes up. I wanted to be sure first, but the opportunity to get her alone and ask just didn't present itself.\n\nBut, as it turned out, I didn't have to wonder about Jess's sexuality for very long.\n\nWe had a canoeing activity period together with the seniors, which was an absolute luxury afternoon assignment. It was a 92 degree scorcher of a day, and an afternoon on the water after all morning baking in the sun was exactly what I wanted. Of course, I spent most of the morning fretting about what to say to Jess, wanting something cool and funny to catch her attention, but I should have known better. Awkwardness isn't really a thing that happens around Jess. It's one of her super powers.\n\nThe lake was beautiful. The camp owned all the land surrounding it for miles in every direction, so we had it all to ourselves. There was a beach area and dock structure, along with a small campsite on the opposite side, but other than that it was surrounded by forest. It felt like something out of a Bob Ross painting -- the kind of picturesque water, trees and sky natural setting that felt too perfect to be real until you got out into it and realized it was.\n\nEverybody flew into canoes and immediately started pirating each other. It was anarchy on the water, just like some ancient sea battle. They treated their boats like bumper cars and flipped each other into the water with savage war cries and high-pitched laughter. Jess and I were probably supposed to be keeping order, but we were no better than any of them. We did direct T-rescue operations to get the capsized canoes back upright, but we flipped our share as well. Everybody spent more time swimming than actually canoeing, and we were all thoroughly soaked when it was time to climb the steep hill back up to camp.\n\nJess and I lagged a little behind the campers, herding them ahead of us while we chatted. Being relatively alone with her felt just as comfortable as it had the first night on the porch. Indeed, despite the tension I'd created in myself surrounding her, I'd found myself drawn into her friendly relaxed aura as soon as the activity period started.\n\n\"You got any good Spanner nominations?\" She asked.\n\n\"Any what now?\"\n\n\"Nobody's told you about The Golden Spanner yet!?\"\n\n\"Nope. What's that?\"\n\n\"It's a wrench we spray painted gold, and it gets presented as an award for the biggest fuckup of every week.\"\n\n\"No way!\" I laughed.\n\n\"Yes way! After the staff meeting Sunday night, we all get together and tell stories. If you've seen somebody messing up in a goofy, funny way, you can nominate them. It's a good way to blow off steam and laugh at ourselves. We just have to be sure to keep it upbeat so nobody feels bullied.\"\n\nI wished we had something like that at my campus job. \"Tell me about some of these stories.\"\n\n\"Sure, but feel free to shut me up if you get tired of hearing about people you've never met.\"\n\n\"Don't worry, I like your stories!\" I playfully pushed her shoulder, \"Besides, you can't tease something as ridiculous as that and then get shy on me.\"\n\nShe smiled warmly, making me melt a little inside. \"I'm happy you do. Well, I once had a co-counselor named Erin who won The Spanner because of my nomination. She offered to let the campers watch a movie on her laptop if they won cabin inspection for the week.\"\n\n\"We can do that? I thought the camp was against electronics.\" Maybe I should bribe my campers like that to keep up with cleaning.\n\n\"You have to clear it with the head counselors, but they're usually fine with it for special rewards every once in a while. So, I was on an off night, and Erin set up Avatar for them after lights out and then went down to chill with the other counselors in the Mess Hall. It turns out that they got bored of Avatar and went to see what else was on her laptop.\"\n\n\"Oh no,\" I groaned.\n\n\"Yeah, it turns out, Erin had quite the porn stash. She'd downloaded a bunch to get her through two months here with no internet, and our campers found it.\"\n\n\"Was it at least good porn?\n\nJess laughed and leaned into me, her touch lingering a second or two past casual and into intimate. \"That's what you want to know!?\"\n\n\"It's an important detail for the story!\"\n\n\"Yeah, riiight,\" she rolled her eyes. \"Since you ask, it was a sensual gay men's scene that I was told afterwards was quite hot. Anyway, if we can return to the plot--\"\n\n\"Certainly.\"\n\n\"--Lake George was really boring that night and I got back to the cabin early before Erin. All their faces when I walked in must have been the guiltiest I've ever seen in my life! They were all crowded around the screen, most had blankets over themselves to try to hide their hands down their panties, looking like a bunch of deer all caught in the headlights. I couldn't see what was on the screen, so I just kind of stood there confused until this sexual groan came from the porn and it all made sense.\"",
        "\"I would probably have been shitting myself too,\" I laughed, imagining the scene. \"I've never had anybody walk in on me before.\"\n\nJess's smile seemed to turn more mischievous, and she took on a bit of the same hungry expression I'd seen in the Mess Hall. \"It's happened to me. My ex-girlfriend came home early from a trip--\"\n\nShe kept telling me about it, but the rest of the words didn't quite make it through my head. Her girlfriend! Specifically, her ex-girlfriend! Jess liked women! And she'd made sure to tell me while implying she was single! She really was interested in me! Exclamation marks rocketed around my brain, and judging from the way her eyes danced, Jess knew it.\n\nEventually, I realized she'd finished speaking. \"I -- um -- sorry, um --\" I stammered and blushed, trying to remember what the last thing she said was.\n\n\"You are so easily distracted, Leah!\" Jess leaned into me again and laughed. A second of her warmth and a flash of her scent off her hair was enough to send a jolt of desire through my core... Yeah, I was easily distracted!\n\n\"Sorry,\" I muttered again, embarrassed.\n\n\"Don't be,\" she said in a low voice, still very close like she was about to tell me a secret. \"You're cute when you're all blushy like this.\"\n\nOf course, that only made me redder! I was seriously out of practice flirting. Still, I couldn't just let her have her way with me completely. I skipped a few steps ahead of us and turned around. Slowly, deliberately, I looked her up and down, lingering over her lips, wet bathing suit clad chest, legs and tattoo. \"It's your fault,\" I said, trying my best to sound seductive. \"You make it very easy to get distracted.\"\n\nAs I said it, I tried my best not to blush further. It sounded so corny in my head! But Jess seemed to like it. She gave her hips a little shake, posing to show off her legs where I was looking, then deliberately held her arm out. \"That's right, I was forgetting. You like girls with a bit of ink.\"\n\nThe look had meant something! \"Actually, usually not. So many people's tattoos look like they just got them just because they wanted a tattoo, artistry be damned. Yours--\" I tentatively reached out and traced my fingers along the designs of branches and flowers blossoming from her wrist up to her shoulder, encouraged and delighted by the way she beamed at my touch. \"--is perfect on you. It's beautiful.\"\n\nShe closed the gap between us and I swear I heard her purr as she pulled me into a hug. \"It's going to be clear all night tonight. Do you want to have that stargazing adventure we were talking about?\"\n\nHer breasts pressing into mine, her breath on my ear, her strong arms squeezing me -- it all felt fucking fantastic. \"But I'm on duty tonight! We have our cabin overnight.\"\n\n\"I know.\" She pulled away just far enough to let me see her wicked smile, \"I'm technically on duty too. Why let a little thing like that get in the way?\" It wasn't a little thing. We could get fired if we got caught! I hesitated, and she made an offer I couldn't refuse. \"Trust me, it will be like no other first date you've ever been on.\"\n\nI mean, how was I supposed to say no to that?\n\n-------------------\n\nChapter 6\n\nThe campers collected two piles of wood. Most of them contributed to the pile of entirely unusable wet junk that would never catch. Lilian, by herself, had created a neatly sorted array of birch bark, perfect kindling, lots of dry medium pieces, and a few heavier old maple logs that would burn all night.\n\n\"This is amazing, Lilian!\" Alexis complimented her as she built it up into a campfire.\n\n\"I know all about burning things,\" Lilian said, smiling her trademark failed attempt at innocence smile. \"It'll start faster if you do it like this!\" She nudged Alexis out of the way and made some adjustments to her formation of twigs and bark. Alexis and I exchanged a worried look. Without words, we shared an image of our dry old wooden cabin engulfed in flames and Lilian dancing around it, laughing manically.\n\nEach junior cabin had an overnight trip to one of the camp sites scattered around camp. We'd been given The New Lean-to. The old one was apparently on a path by the lake, and I was quite curious to see how it could possibly look even older than this one. Not that it was bad at all, it just had that feel of ancient lumber that made calling it \"new\" seem weird. The spot was great for young groups like ours. The trees were not dense at all and the ground was almost as level as grass, so we unleashed the campers to play tag and frolic their energy away. They dashed from tree to tree, yelling and laughing, sprinting the entire time for hours in the way only young children seem able to do.\n\n\"Who says kids can't have good clean fun out in nature anymore?\" Alexis said as we watched them go, sounding as relieved as I felt that we wouldn't have to juggle keeping them entertained with setting up camp.\n\n\"Yeah, I wish I'd had this when I was growing up,\" I said, then changed topics now we were alone. \"By the way, thanks again for being cool about tonight.\"\n\nShe rolled her eyes, \"It's okay, really! They'll all be asleep anyway -- not much work to do even if you were here. Everything will be fine as long as you guys don't get caught, and Jess never gets caught.\"\n\nThis wasn't the first time I'd heard that. Jess had quite the reputation. On top of my own experience not seeing her barely 10 feet away on my cabin porch the first night of camp, Blake said that Jess had pulled things off before that made him wonder if she was a witch. Then, of course, he refused to give any more details. He just smiled knowingly and said I'd understand soon enough.\n\nAs counselors, we were mostly free to do whatever we wanted as long as we were off duty and off camp grounds. On camp itself, however, everything was supposed to stay strictly rated G. Especially while on duty. On duty, we were supposed to stay with our campers at all times, even while they were asleep. The lone exception was just after lights out, when we could go to the Mess Hall to have some adult socializing time while two unlucky counselors got stuck staying back and making sure all the cabins stayed quiet.\n\n\"You sound confident, but I'm still kinda nervous,\" I said. \"I mean, we could get in a lot of trouble.\" Because rule breaking was totally what was making me nervous. It had nothing at all to do with how long it had been since I'd been in an intimate, romantic setting with a hot queer girl I was into.\n\nAlexis smiled knowingly. \"I get it, I was terrified the first time I snuck out too.\"\n\nThat got a raised eyebrow. \"You snuck out? What happened?\"\n\n\"Don't sound so surprised. It's actually less rare than you'd think,\" She laughed, apparently amused that I'd thought of her as a rule abiding, upstanding camp citizen. \"Last year, I was an L.I.T. in Cabin 4 and I was trying to meet up with somebody from the Boys Camp. I made it around the lights by the Drama Shed -- there's a bunch of motion detector lights scattered around, if you don't know -- and I thought I was home clear when Jess appeared out of fucking nowhere.\"\n\nCabin 4 was the oldest girl's cabin. Whoever put numbers on the cabins didn't quite have continuity in mind. Cabins 1, 2 and 3 were sequential by age as the youngest, then it skipped to Cabin 8 as the next year up, and worked backwards down to 4 as the oldest. \"She mentioned she was your counselor. What did she do?\"\n\n\"She actually didn't get me into trouble at all. All she did was poke all kinds of fun at me for the guy I was trying to see. I totally deserved that. David was a complete dick, but I was too desperate to see it.\"\n\n\"I've got my fair share of regrets like that,\" I laughed with her. Two semesters ago, I'd hooked up with Clair, simply because we were the only two open lesbians in the new dorm. Turns out, that was the only thing we'd had in common, and we'd never wanted to speak to each other again after the fling ended.\n\n\"Don't we all,\" she sighed. \"I'm lucky it was Jess that caught me, though. If it had been one of the head counselors or directors or someone, I'd probably have been sent home.\"\n\n\"I guess that's who we'll have to avoid.\"\n\n\"Yeah, every year a counselor or two gets caught drinking or smoking or hooking up somewhere on camp at night and gets booted.\"\n\n\"You're supposed to be making me worry less!\" I exclaimed.\n\n\"It'll be fine! Just do everything Jess tells you. Trust me, that girl's a fucking ninja.\"\n\nAnticipation grew in me as the sun slowly set and the campers trickled back to us looking for dinner. They were a bit better at finding roasting sticks than they'd been at collecting firewood, but we still had to replace a few that were far too small before they burned their hands. We cooked hot-dogs, and then realized we had far too few buns, but nobody seemed to care. In fact, they seemed to like ripping into them right off their sticks more than civilized eating.\n\nAfterwards, we got pleasantly stuffed full of s'mores. Shadows lengthened and eventually darkness covered everything beyond the firelight. There was no moon to block out the stars, and they shone bright through the trees. Very soon, I'd be off on a date to see them. She'd deliberately called it a date! What else would we do? How intimate would she want to get? Nervous excitement filled me, a bit at a time, the closer it came.\n\nThe campers had all said they wanted to stay up all night telling ghost stories, and I'd dreaded having to keep them entertained for hours, but half of them fell asleep right by the fire before we'd even set out their sleeping bags.\n\nCompared to a normal night in the cabin, this was downright luxurious. Alexis and I didn't need to herd them through showers and brushing their teeth, and they were so worn out from hours of running around that they were all snoring before their normal lights out time. I didn't even need to open Harry Potter.\n\nNora and Kim were the last stragglers, each trying to stay up longer than the other, but eventually falling asleep by the fire. We carried them into the lean-to and Alexis brought out her phone.\n\n\"Got a bunch of stuff saved on there?\" I asked, wishing I'd thought to download more podcasts on mine.\n\n\"Nah, we get 4G reception here.\"\n\n\"Really? I haven't been able to get any connection on camp at all.\" I'd tried a bunch of times to send texts and pictures home to Sarah, but none of them went through until I left camp on a free period and got nearly as far as the highway. There was the camp internet, but that was only in the Mess Hall and available after lights out, and it was so slow and unreliable that it caused more frustration than anything when I tried to send emails bigger than a few mbs. Still, though, the separation was having some of the desired effect. Already, I was down to only spending half my time obsessing about her!\n\nWhether that was because of the enforced distance, or because somebody else had entered my fantasies? Well... Jess's image flashed before my mind's eye again, and I smiled at the rush of warmth that spread through me. Soon, now.\n\n\"Yeah, this is one of the only spots with decent coverage,\" said Alexis.\n\n\"It's because we're on the far side of Lookout over here, so it doesn't block the signals.\" To my credit, Jess's completely unannounced voice behind me didn't surprise me as badly as it had the first time she'd scared me on the cabin porch.\n\nAlexis, on the other hand, nearly fell off her log. \"Shit, woman! You know, you could make some noise or say hello or something to let people know you're here.\"\n\n\"But where's the fun in that?\" Jess laughed. \"You're facing right down the path, you know. You probably would have seen me if you hadn't blinded yourself with that screen.\"\n\nAlexis grumbled something and I turned to see Jess sitting just a few feet away from me, munching one of the chocolate bars left over from s'mores, looking for all the world like she'd been there for hours. \"You do like to make an entrance,\" I commented lamely.\n\n\"I have a reputation to consider.\" She shoved the rest of the bar into her mouth, tossed the wrapper into the fire and said through the mouthful of chocolate, \"you got a hoody or something? It's cooler away from the fire and you'll want it to keep off the bugs.\" I held mine up. \"Great. Ready to go?\"\n\nA mixture of nervous butterflies and excited heat flew through me. \"Yeah, let's go!\"\n\n\"Out of interest, where are you guys off to?\" Alexis asked into her screen.\n\n\"Up to Lookout,\" Jess said casually.\n\n\"Up the entire mountain!\" I exclaimed. The nervous butterflies soared, but I forced them down, not wanting to sound like a wuss.\n\n\"Best stargazing on Earth. Besides, it's hardly a mountain, just an oversized hill. We'll be up there in half an hour.\" She offered me her hand, \"shall we head out?\"\n\n\"I guess you did promise me an adventure,\" I said, taking her hand and standing up. \"Hang on, let me find my flashlight.\"\n\n\"There's no need for that.\"\n\n\"Oh? You've got a good one?\"\n\nJess's smile took on a cunning edge that made her look like a super villain. \"Nope.\"\n\n-------------------\n\nChapter 7\n\nEvery superhero movie has that one clich\u00e9 flying scene. The one where some mere human clings to the hero for dear life, desperate to avoid falling to their death. Think Superman flying Lois Lane around, or Spider-Man swinging through the air with Mary-Jane. That's kind of how I felt, clinging to Jess's arm as we walked through the near pitch-black forest, praying to whatever god might hear me that Jess didn't drop me and leave me in darkness forever.\n\nWe were walking along a forest trail with no flashlight on a night with no moon. It wasn't just dark. 'Dark' makes it sound like visibility was simply poor. It's more accurate to say that I was basically blind. I couldn't even see far enough in front of me to know if we were about to walk into a tree. Even pressed right up against Jess, I could barely make her out as an outline of darker shadow.\n\nI've never been scared of the dark. Not as such, but there's a difference between feeling comfortable in a dark room and walking blindfold through an obstacle course!\n\nBut, as tense as I was, Jess felt perfectly relaxed. She stepped confidently, one arm around me, guiding us around turns in the path, ducking us under branches and occasionally stopping to step over large rocks. It was mystifying to me, almost as magical as if she were actually flying.\n\n\"How are you doing this?\" I asked in wonder.\n\n\"It's not as dark as you think it is, you've just been staring into a fire for a few hours. Your eyes will adjust better in a bit.\"\n\n\"Adjust well enough to see in this?\" I waved my hand in front of her face, genuinely curious if she would see it or if she was messing with me.\n\nShe laughed and batted it aside. \"A tip for you, don't try to look straight at things. In limited light, you can see better out of your peripherals than your center vision.\" She stopped us and pointed upward, her arm practically right next to my eyes so I could see it. \"You see the stars through the trees?\"\n\nThere were some there peeking through the branches. \"Yeah, but there's not nearly enough light to see by.\"\n\n\"You see how there's a kind of pathway of open stars right above us going forward?\"\n\nThe stars did seem to form a column of light, as it were, or a road in the sky from where we stood onwards. I nodded, then immediately felt silly. \"Yeah?\"\n\n\"That's the opening in the trees above this path. Now, see how the starlight branches left up ahead? That's the path turning. All we do is follow the stars.\"\n\nAs we continued on, I started to understand what she meant. Keeping my gaze directed upwards on the line of starlight helped me notice our surroundings from the corners of my eye. Things vanished when I looked right at them, but reappeared again in my peripherals when I looked slightly away.\n\nIt was really weird! I'd spent my entire life getting used to looking ahead and slightly down while walking, never really thinking of it as a habit. Now, everything was reversed. The path was in the sky and I needed to look up to see what was under my feet. It felt almost like some kind of psychedelic dream of the world flipped upside down.\n\nMy death grip on Jess's arm gradually relaxed and I started enjoying being so close to her. With her arm around me to guide me and me leaning into her, it was a very intimate way to walk. Her hair brushed against my face and her scent teased across my nose. Her body moving beside mine in step felt firm and sensual, even through the sweats and hoodies we both wore.\n\nAnd, of course, there was her calm confident self-assurance. It felt like she was the queen of this realm of darkness, and she was just as at home here as a fish in water. As I experienced it alongside her, something about that seemed incredibly sexy to me.\n\n\"Do you know where we are?\" I asked.\n\n\"That depends.\"\n\n\"On what?\"\n\n\"Whether you'll forgive me for being a showoff.\" She wanted it to be a joke, but she sounded slightly apprehensive, and I realized she was worried about my reaction to all this.\n\nI liked where her head was at -- thinking in terms of what would turn me on and off. \"A little late now if I wouldn't,\" I teased. \"Guess what my type is?\"\n\n\"What's your type?\"\n\n\"Women who are fucking amazing at what they do, like you are.\"\n\nI thought I felt her straighten up slightly. \"Thanks,\" she murmured, reminding me a lot of myself trying to figure out what to say to a compliment. Ha, turnabout! \"Now guess what my type is.\"\n\nMy eyes narrowed in suspicion. \"You're about to flip it back around on me, aren't you? Can't I enjoy the moment of being the complimenter for a second?\"\n\n\"Nope!\" She laughed.\n\n\"Fine, at least that makes the answer easy. Your type is girls you can turn into blushy red tomatoes whenever you want.\"\n\n\"No! Well, yeah, maybe a little,\" she gave my arm an affectionate squeeze. \"But no, actually, I like girls who are daring, like you.\"\n\nBeing on the delivering end of compliments was nice while it lasted. \"Very funny. Jokes on you, you don't get to see me turn red in the dark.\"\n\n\"I'm not joking.\"\n\n\"How am I daring?\"\n\nJess took my hand and held up one of my fingers. \"Well, first, you shared all that stuff with me the first night we met.\"\n\n\"That's not daring,\" I complained. \"You're easy to talk to, and you know it.\"\n\n\"Second,\" she held up another of my fingers. \"You dove into my rugby period head first -- literally -- despite having never played a full contact sport before.\" I murmured something about her making that easy too, but she held up a third of my fingers and kept going. \"Then you didn't back down when I saw you eyeing me up, even though you were embarrassed at getting caught... You've been returning all my flirting and then some.\" And a fourth finger. \"And, of course, I've taken you into the heart of darkness, and you're not freaking out.\" The grin was obvious in her voice as she wove her fingers between my now outstretched ones and gave my hand a squeeze. \"You can try to hide it, but you're awesome.\"\n\nI couldn't decide if I wanted to feel elated or curl up and die. Both? Yeah, both sounded good. \"I still say my first answer was spot on,\" I muttered, earning me a laugh from her. \"How did we get from me trying to figure out where we are to this?\"\n\n\"It's your fault for telling me I'm your type,\" Jess giggled. \"Anyway, if you still want to know, we're about fifty yards straight through the trees away from the Boys Camp. If we turned on a flashlight, they could actually see it from their cabin porches. Up ahead in a few seconds, we're going to pass a thin tree that's got a distinctive hook in the bough that makes it look like somebody trained it to grow in a circle. There's a hidden branch we'll have to duck under there, and there's a fork in the road. If we turned sharp left, we'd come out behind the Rifle Range, and then just down the hill to Boys Cabin 7.\"",
        "Sure enough, a dozen steps or so later, Jess pointed out the tree she'd described silhouetted against the light of the stars. I felt my jaw drop a little bit. \"No way,\" I breathed, as the branch Jess predicted loomed a foot in front of my face. \"Is this how you've dodged us around all the other stuff? With landmarks you've memorized?\"\n\n\"Like I told you, I know my way around the camp pretty well.\"\n\n\"Okay, maybe you are a little bit of an understating showoff!\" I playfully squeezed her to my side. \"Keep doing it. What's next?\"\n\n\"Next is a big open gap in the trees on the right. That means we need to move to the left on the path or we'll trip into a stream.\"\n\nHer prescient tour guiding continued without missing a beat. She was uncannily accurate, guiding us around obstacles hidden in the darkness I would have walked right into. Seeing it all through her eyes was amazing. Jess was like an artist painting on a black canvas, showing me color by describing everything around us. She drew my attention to beautiful details I would have glanced past without really seeing, like the way starlight reflected off a pool from a specific angle, or a line of birches that bent in to form an archway.\n\nThe way the trees moved in the wind kept the stars constantly flickering and dancing above us. There was a constant rustling of leaves and chatter of night animals that made the woods feel very alive. It was so much different from daytime. I'd never experienced nature quite like this, like the darkness was a physical presence embracing me, immersing me in the natural heart of it, and it was amazing.\n\n\"Who taught you all of this?\" I asked.\n\n\"Nobody did. Just me and a shit ton of stubbed toes and bruised knees.\"\n\n\"Really?\" I said incredulously, trying and failing to imagine her tripping and stumbling around. \"But why? I mean, don't get me wrong, this is really cool and I totally understand wanting to do this, but wouldn't it be much easier with a flashlight?\"\n\nThat earned me an affectionate squeeze. \"Maybe, if we wanted to explain what we were doing to our bosses. Trust me, I know from more than a few close calls. It might feel like we're surrounded by walls of trees, but flashlights have an uncanny way of being seen a long way off.\" Jess was quiet for a few seconds before she continued. \"What you said the night we met resonated a lot with me.\"\n\n\"Which part?\"\n\n\"About how we're surrounded by people every single second of every day here. I used to be really bad at coping with that. Don't get me wrong, I love everybody! But still, it gets exhausting. I guess this has always been my escape. It's nice to just be by myself for a bit.\"\n\nA warm spot opened up in me. As popular as Jess was, she was just like me! \"I would never have guessed.\"\n\n\"I've changed a lot over the years. I guess that's part of why camp feels so important to me, like it's this environment that keeps bringing better parts out of me. Anyway, when I was younger, I used to get super emotionally drained. Like, I was always tired, and no amount of sleep made it go away. It sucked so much, I was always looking forward to coming to camp during the year, and then once I finally got here, I felt like that? Well, one day after an especially dramatic lashing out at a well-meaning friend trying to draw me out of my shell, I kind of snapped. Like, I couldn't stand being smothered by people anymore, so I snuck out. It was like a weight instantly lifted off of me. I suddenly didn't need to put on a face for everybody around me, keep up with conversations, pretend to give a shit what people were gossiping about, or anything at all. I only got like two hours of sleep that night, but he next day, I felt much better and more energized, so I kept on sneaking out.\"\n\nJess paused, then gestured up and all around us. \"I guess, along the way, I fell in love with all of this. The peacefulness, the sense of freedom...\" She pressed close into me, making my heart beat faster, and whispered in my ear, \"at night, this camp is a wonderland. You can do anything you want, the only limit is your imagination.\"\n\nHer nearness and the suddenly erotic slant to her voice certainly was flooding my imagination! The easy way she opened herself up and shared her emotional history with me made me feel special and trusted, but that took a back seat to the impulse to return her flirting.\n\nI slipped my hand out from hers and wrapped it around her waist, letting it linger just above her ass before slipping just under the edge of her hoody to rest on her bare skin underneath. I licked my lips, hoping she could hear that, then whispered back, \"what if my imagination spends most of her time in the gutter?\"\n\nJess shivered slightly and let out a soft, purr like sound. \"Then we've got something else in common.\"\n\nIt's a good thing she couldn't see my goofy grin. It really had been too long since I'd done this with a queer girl I was into. The sexual part of me, that I'd repressed so much in the name of stifling my attraction to Sarah, set herself free and reveled in feeling accepted by Jess.\n\nThe last steep stretch was more of a climb than a walk, and Jess needed to micromanage us closely. I got lost trying to keep up with all the twists, turns and visual cues Jess pointed out to navigate by. We went slow, but I was still out of breath by the time we made it to the top.\n\nJess didn't give me any warning. She just gave me a little push, and suddenly all the trees around me vanished. I stumbled out onto the open rock summit and found myself surrounded by light. I've seen stars before, but I'd never felt so immersed in them. It felt like I was in the middle of a snow globe with them floating all around me. They weren't just pinpricks, after the long walk through the dark trees, they all seemed like individual lamps shining down on me.\n\nI slowly turned, gazing up in wonder as the sky spun around me.\n\n\"Worth the trip up?\" Jess asked. Even with no moon out, the stars were bright enough in the clearing to see her perfectly. She was watching my reaction with her head cocked slightly to one side, playfully spinning her hair between her fingers.\n\nI had no idea what to say, so I just nodded dumbly and looked up again. Jess laughed. \"I'll take that as a yes,\" she said. Her arm snaked around me again. \"You should see your face. You look like you're having a good dream.\"\n\n\"This whole thing feels like a dream,\" I murmured, letting myself lean back into her again.\n\n\"Lay back.\" I followed her lead, expecting to find hard rock, but instead feeling a soft blanket. \"I brought it up this afternoon,\" Jess said to my sound of surprise.\n\n\"You thought of everything. I don't suppose you've also got a picnic basket hidden in your pocket.\"\n\n\"Nope, sorry,\" she laughed. We'd been physically close all night, but there had been some pretense of necessity from her having to guide me. Now, I took a neutral position lying on the blanket with my hands up behind my head for a pillow, feeling a little nervous now we'd gotten here and unsure how intimate she wanted to be. Jess didn't hesitate for a second. She settled down by my side and repositioned my arm so she could rest her head on it, our ears lightly touching, her hair tickling my cheek and her body deliberately fitting itself down my side.\n\n\"Do you know any constellations?\" She asked.\n\n\"No. You?\"\n\n\"Yeah.\" She raised the arm awkwardly trapped between us and traced connections between the stars, drawing out The Big Dipper and then bringing in the stars around it to form great bear Ursa Major. Leo, Virgo, Scorpius, Draco and Cassiopeia followed one after the other.\n\nSome definitely looked more complete than others. Others were kind of bullshit. How, for example, the ancient Greeks figured those five stars looked like the vain queen Cassiopeia, or that long string of stars together looked like a scorpion, is a mystery to me. We guessed they were probably high on something when they were making all this up.\n\nI'm not sure how long we lay there talking about stars and long dead Greeks and whatever else. Slowly, my attention shifted from the infinite sky to watching her face as she spoke. The way her lips moved was captivating. So full, feminine and sexy... Jess had taken the lead in everything so far, and I'd been happy to let her. But now I wanted more. I wanted to be the daring girl Jess seemed to think I was, and dive into what we both wanted. Dive into those lips that were calling out to me.\n\nAs though sensing my thoughts, Jess let her arm fall from outlining Hercules and turned to face me. Our eyes met and she smiled wide, her lips turning up at the edges, her expression seeming to ask, 'so what are you going to do now?'\n\nI turned onto my side, slightly over Jess, and slowly leaned down towards her, loving the way her eyes got wider and wider with excitement the closer I came. Some hair had fallen in the way, and I let my fingertips linger on her cheek as I brushed it aside.\n\n\"I want to kiss you,\" I said, half asking her permission, half to get to see her reaction, which was adorable. Okay, maybe I could kind of get why she liked making me blush.\n\n\"Please do.\"\n\nWe were slow and a little uncertain at first, tentatively probing, our lips meeting and parting very slightly before pulling away. It wasn't much, but it sent a jolt through me! My heart raced and blood pounded through my veins, spreading heat through me. Tingling warmth concentrated between my legs, sending my lust for more into overdrive. Jess giggled like a schoolgirl, her breath hitting my now-damp lips, her arm hugging around me pulling me close. Still, she waited for me to move in on her again.\n\nIf she liked me taking the lead, I was happy to keep going!\n\nWhen our lips met again, I pressed into her, splitting her mouth open and slipping my tongue inside. She was hot, scorchingly hot, drawing me in and welcoming me with an erotic sigh. Her whole body seemed to tremble against mine and she pressed against the back of my head, half petting my hair and half pulling me forward. It felt unbelievably good to be so wanted by her. Our tongues met and coiled together, spinning between our mouths, dancing over one another again and again.\n\nThe harder we kissed, the more we turned each other on. The more turned on we became, the more intensely we made out. The cycle fed on itself and escalated. Jess caressed my face and hair, stoking my horny desire for her into a blaze. I pawed at her sweatshirt, rubbing her side and slowly making my way up to her chest. The closer I got, the more frantically her tongue battled mine, making it very fun to tease around the edges of her breasts and drive her crazy.\n\nIt drove me crazy too. My fingers itched to fondle her, the tingles in my core intensified and my pussy started calling out for urgent attention. Around and around, tracing the outlines of her breasts against the fabric, teasing us both with a little nudge here and a playful flick there. Finally, I couldn't resist anymore, and I cupped her boobs firmly all at once. They felt wonderfully full, even through her layers of clothes, yielding softly to my touch as I massaged them. Jess immediately broke the kiss and took in a deep, shuddering breath of air, puffing her chest out and pressing herself firmly into me.\n\n\"Fuck, you're a good kisser,\" she said between pants. \"I wish I could take all this off, but I'd need a blood transfusion from mosquito bites in five minutes.\"\n\n\"Don't worry about it,\" I lightly pressured the centers of her breasts where her nipples must have been, making her gasp. At the same time, I leaned right into her ear and whispered, \"It just means I get to have more fun teasing you.\" My tongue darted out and quickly licked her earlobe, which is something that makes me fall to pieces, and apparently had a similar effect on Jess! She shrieked and laughed like she'd been tickled, making insincere protests and trying to spin the situation and get at my weak spots. We rolled around, her playfully trying to flee, me relentless in my pursuit, loving every breathy gasp and high pitched squeal I forced from her.\n\nJess rolled on top of me and went after my neck, planting kisses up and down and lightly sucking, making my eyes roll back and my blood boil.\n\nThen I managed to get back on top of her, quickly pressing my lips to hers and kissing deep. She struggled for just a second more, then gave in and kissed me back. We went at it slowly, passionately, deeply intimately, connecting ourselves at the mouth and everywhere else. My body on top of hers, feeling her chest expand against mine with every breath -- her hands roaming all over me, rubbing my back, squeezing my ass, teasing along my thighs -- her legs spread between mine, her hips slightly rocking up to meet me as I rocked myself against her.\n\nI kept thinking I couldn't possibly get any more horny for her, but then another heartbeat would pass and I'd feel another brush of her tongue against mine, her chest would expand in sync with my breathing and her pelvis would hump against my sopping wet pussy. I wanted it to go on forever, but I also wanted more. My body needed even more of her.\n\nI pulled back just far enough to see her eyes blazing with arousal in the starlight. \"You're so sexy,\" I breathed. I made a show of bringing my fingers up to my mouth and getting them wet. \"You make me so horny, I wanna fuck you so bad.\"\n\n\"Oh yes please! Damn, that's hot,\" she said, eyes glued to my fingers. \"But there's no need for spit. You've already given me an ocean down there.\"\n\nI couldn't help but smile as she grabbed my hand and practically dragged it between her legs. I teased very lightly over top of her pants and was rewarded by an adorable moan and her hips thrusting forward. \"How do you like it?\"\n\n\"Penetration is good, but not a lot of fingers at once,\" she gasped. \"And please be gentle with my clit.\"\n\n\"Mmm, a sensitive girl, eh? No wonder you're so cute when you're being teased.\"\n\nJess wasn't exaggerating, she really was sopping wet. Slipping my hand into her panties felt like entering a furnace.\n\n\"You feel what you've done to me?\" She sighed.\n\n\"You've not left me any dryer.\" I lightly stroked between her lips, watching her face closely for reactions. \"Tell me what feels good.\"\n\nThis time, she grabbed my breast. \"Do little circles over my clit, like this,\" she demonstrated pressing my nipple in wide fast circles. It felt surprisingly good, even through my own layers.\n\nI sighed happily, and quickly stopped to unhook my bra, guiding her up under my top. \"Keep showing me.\"\n\nI've never thought I had very sensitive breasts, but when Jess finally touched my bare nipple, I felt pure ecstasy. I started in on her clit at the same time, loving the way her silky wetness felt, but Jess pressed down harder on my chest.\n\n\"Okay, I'm not that sensitive!\" She chuckled. \"More, and up a little higher.\"\n\n\"Oh, sorry.\" I pressured a little harder, then harder again as Jess coached me to until I pressed down on her rapidly hardening clit with more than a little muscle. \"What do you mean, be gentle with your clit?\" I laughed. \"I'm practically mauling you!\"\n\n\"If that's what you think, your clit must be the most delicate thing in the world!\"\n\n\"Circles like this?\" I went wide around her, then narrowed to focus mostly on her center. \"Or this?\"\n\n\"The first one. Oh, just like that,\" Jess purred. It was obvious when I got the motion right, Jess's entire body responded. Her legs stretched open even wider, her abs tensed, her breath caught, and pleasure blossomed across her face. She was beautiful, bathed in starlight, wearing the tapestry of her pleasure for me to enjoy.\n\nIt was like her expressions were hard-wired to her clit. As I circled around it, reveling in the erotic feelings it filled me with, her eyes went wide and her mouth opened in a little 'oh' shape. She pressed harder on my nipple and I reciprocated, pressuring her a little more while trying to keep the same rhythm.\n\nThere was so much going on, it was difficult to juggle everything! Between all the feelings rocketing around inside me -- Jess's presence on my boob, watching her face do beautiful things and working my fingers on her pussy -- my attention was being pulled in a lot of directions! So, when Jess suddenly pulled me in tightly for another kiss, it was all I could do to not get overloaded. It was all so sexy and stimulating, I kind of gave up on trying to think and just let it all wash over me.\n\nJess was in an even worse state than me. She made incoherent noises between kisses, like she couldn't decide if she wanted to moan or suck my tongue. She kept cycling between them until she ripped her pants down to give me more room, and I finally realized that she was begging me to fuck her. She must have thought I was deliberately teasing her again! Oops.\n\nShe was very tight, but I slipped easily inside her, making us both moan into each other's mouths at once. I love finger fucking my partners. I've always felt like it's the most delightfully intimate part of giving pleasure -- being inside my partner's pussy. Like I'm deep within the very core of her femininity. I love how much pleasure I can give her and how viscerally satisfying it feels. There's something about feeling a pussy clench down hard and spew molten hot love juice that tells me I've done a good job fucking her better than anything else.\n\nI went at Jess hard and fast, first with just my middle finger but quickly adding another, rocking in and out of her vagina while keeping my thumb planted over her clit. In and out, building her up, feeling her get even hotter and tighter, seeing her eyes roll back and knowing she was close.\n\n\"Cum for me, baby,\" I breathed in her ear. \"I want to feel you cum for me. I want you to cum hard and long and keep on cumming. Cum for m--\" Jess locked her lips against mine just as her abs spasmed uncontrollably and her pelvic muscles gripped my fingers like a vice. Hoping she wasn't the type who got super sensitive during an orgasm, I kept my pleasuring assault up as she came, wanting to feel as much of her release as I could.\n\nShe came and came and kept on cumming, her tongue going wild in my mouth, turning me on to new heights of desperate hornyness. Her whole body writhed up and down against mine, her abs tensing against mine with each contraction, her breasts heaving into me with each shuddering breath, and her legs locking around mine. My own pussy throbbed, trying to mimic Jess's contractions and live vicariously through her.\n\nFinally, with a long and drawn out \"Fuuuuck,\" Jess flopped back and went limp. She looked so contented it made me grin. With her hair in a mess, saliva all around her mouth, her clothes jumbled and her face in a sloppy grin like that, nobody could mistake her for feeling anything but very thoroughly fucked. I wish I'd had my phone to take a picture.\n\nI settled back next to her, expecting she'd want to cuddle, but she surprised me by springing up and getting on top of me. \"Your turn, hot stuff.\"\n\nIn one smooth motion, she had my sweatpants and underwear pulled all the way down to my ankles, my legs spread and her face an inch away from my sex. Seeing her there half eclipsed by my pussy, feeling her breath against my wetness and her weight on my thighs sent me into overdrive. All the blood in my body rushed straight to my clit, and it throbbed and bulged with need, as if it were trying to thrust itself into Jess's mouth.\n\n\"Oh my god,\" Jess laughed. \"Somebody's happy to see me!\" She met my eyes and slowly stuck out her tongue. I couldn't decide if I wanted to hold my breath or hyperventilate in anticipation, watching her get closer, a millimeter at a time, straining to feel her first touch and go crazy.\n\nShe landed right over my vaginal opening at the very bottom of my pussy and slowly licked upwards, pressing her entire tongue hard into me all the way up and over my clit. I swear, just that one lick nearly made me cum. Then, still locking eyes with me, she licked her lips and complimented my tasty pussy juice, and that really nearly made me cum.",
        "Fortunately, Jess must have been done with theatrical teasing then, because she dove in and ate my pussy like a starving woman.\n\nIn full honesty, it wasn't the most comfortable position in the world. The blanket was soft, but there's only so much it could do to compensate for the solid rock sheet under it. Also, I usually prefer to spread my legs wider and not have my ankles bound together by my pants. None of that mattered in the slightest. When Jess sucked my clit into her mouth and started licking me, I thought I was in heaven. I might as well have been floating on a cloud up among the stars.\n\nI stared up at the sky, but couldn't seem to see it. My whole world collapsed inward and became centered on my clitoris in Jess's hot mouth. Every time she sucked me in, my whole body throbbed and pleasure exploded through me. Every lap of her tongue flooded my existence with sensation, hot and wet and overwhelming, ripping through me from my pussy and rocketing through my core to my brain and back again. My hips rocked up into her, desperate to feel even more of her, begging her to lick me and suck me harder.\n\nMy fingers tangled themselves in her hair, half wanting to pet and caress her, half wanting to pull her into me. Her hands kneading high on my thighs directed even more pleasure up into me. Jess hummed and moaned, slightly vibrating her tongue, making my hyper sensitive clit melt and my whole body tingle along with her.\n\nIt was all I could do to hold myself back from cumming. It was really hard -- I wanted to explode, but I also wanted it to last! The more pressure that built up inside me, the more sensitive my body became to everything Jess was doing to me, and the more wonderful I felt. I rocked right at the edge, loving every second of it, up until the point that she slipped a finger inside me.\n\nThat nudge was all it took. My orgasm shook through me, consuming everything. All the fire and lust that had been growing in me since I lay eyes on Jess, our looks and flirting, all our kissing foreplay, everything from our teasing caresses to me fucking her to her eating me out -- it all blazed in me at once and burst itself out through my pussy. There was so much to burn through, I couldn't possibly cum hard enough to get it out at once. I kept cumming and cumming, clenching around her, throbbing against her tongue, again and again until I finally spent myself.\n\n\"Mmm,\" Jess purred as she slid her way back up to pull me into a cuddling embrace. \"You feel like you really needed that.\"\n\n\"You have no idea,\" I panted, staring into her eyes. \"You have a wonderful tongue.\"\n\nShe nuzzled in close, our foreheads touching, our eyes bare inches apart. \"You do too. I can't wait to feel it inside me.\" The kiss she gave me was our most tender yet, soft and affectionate.\n\n\"You taste like pussy!\" I laughed, and she joined me.\n\nJess pulled my clothes back up my legs far enough to be safe from mosquitoes, but left a patch of bare skin open by my hip for her hand to rest on. Lazily, her fingers played over my skin, tracing little designs and making it distractingly difficult to focus on our pillowless pillow talk.\n\n\"Were you on a drought?\" Jess asked.\n\nI panicked. Fuck, how do you tell the girl you just fucked about your one-sided love affair with your straight best friend? \"Something like that,\" I said, hoping she wouldn't ask further. Her fingers dancing over my side were starting to feel really good, so I copied her.\n\n\"Mmmm,\" she purred, nuzzling her forehead into mine. \"Does that mean you're ready for round two?\"\n\nI gave her ass a squeeze. \"Ready? I've been waiting for you!\"\n\n-------------------\n\nChapter 8\n\nThe walk back down from Lookout was actually harder than going uphill. Without Jess guiding me, I would have fallen in a dozen different spots, doubtless killing myself rolling to the bottom. Hiking after sex is difficult! My legs just wouldn't seem to behave, and I kept getting these euphoric attacks of warm tingly feelings through my body when I thought about what had happened. I felt alive and energized, but paradoxically tired at the same time. Like I'd been cramming for a test all night and just chugged a coffee.\n\n\"Next time, let's do that somewhere with a bed?\" I suggested through a yawn.\n\n\"Not too many choices in that department, unfortunately, unless we rent a hotel room in town.\"\n\n\"But I want to fall asleep cuddling!\" I pouted.\n\n\"I didn't say there were none! There's just a little bit more risk involved.\"\n\nMore risky than sneaking away from my campers through a pitch black forest? \"Not that I don't trust you, but I'm calling bullshit on your risk assessment skills and grasp of the definition of little.\"\n\n\"See! You're learning!\"\n\nI didn't even try to keep up with where we were. It was nice to just lean into Jess and let her carry me home. Step after step with her, not wanting it to end, looking forward to bed but dreading saying goodbye.\n\n\"You were right,\" I told her. \"That was unlike any other first date I've ever been on.\"\n\n\"I'm really happy to hear that. Good enough to make up for no sleepy cuddles?\"\n\nHappy emotion filled my voice. \"More than good enough!\"\n\nAlexis's snores were the first thing to welcome us back, then the soft orange glow of the last dying embers of the fire. How long had we been gone? Two hours? Four? Longer? God, I was going to be so tired in the morning, but somehow, that didn't seem to matter at all. Hell, the way I was feeling, I could probably have tripped into the fire and thought of it as only a minor inconvenience.\n\nExcept now, Jess had to go back to her cabin, and I'd have to crawl into my sleeping bag here. All alone. That sucked. Much worse than falling into the fire.\n\nI reluctantly turned, determined to claim a good night kiss, but Jess was gone.\n\n\"You must be Lilian,\" her voice came from a bench on the far side of the fire. A high-pitched squeak must have meant Lilian was taken just as off-guard by Jess as I, and everybody else, seemed to be.\n\nHow the hell had Jess seen Lilian there? Even hearing them and knowing they were there, I could barely tell. I shook my head, wonderingly. Maybe Blake was right. Maybe she was a witch. Standing cloaked in darkness and watching it happen, Lilian's surprise was actually pretty funny. No wonder Jess had made it her trademark.\n\n\"Why?\" Lilian's voice asked, barbed with justified defensiveness.\n\n\"Why what?\"\n\n\"Why must I be Lilian? Do I know you?\"\n\nI tried my best to sneak around silently to where they were like Jess had done, but spoiled it tripping over something. \"Damnit!\" Jess and Lilian broke off their introductions to giggle at me, and I gave up trying to sneak and just walked up to them. \"Lilian, how many of your bunkmates can you imagine us finding sitting on their own out of bed after everybody else is asleep?\"\n\n\"Oh. Okay, I guess that's fair.\" It was hard to tell, but she seemed pleased by that.\n\n\"Which naturally leads to the obvious question, what are you doing out of bed in the middle of the night?\"\n\nLilian didn't hesitate for a second. \"And the obvious response -- you're out of your bed in the middle of the night too.\"\n\nSomebody must have fucked up Lilian's admissions papers. No way she was actually eleven.\n\n\"Oh, I like this one,\" Jess said, leaning around Lilian to grin at me. \"She's got you there, Leah.\"\n\n\"Me?!? Clearly, she just called both of us out.\"\n\n\"I'm not the one who walked right into it asking that question.\" She turned to Lilian, who was stifling another giggle. \"But seriously, you shouldn't be getting caught like this.\"\n\nInteresting choice of words. Not reprimanding her for rule breaking, but for getting found out.\n\nLilian shrugged. \"Couldn't sleep. Evelyn and Josselyn got homesick and wouldn't stop sniffling. It was really annoying.\"\n\nThere was a note of disdain to her voice that raised an eyebrow. \"Do you miss your parents at all?\"\n\nLilian shrugged again. \"What's to miss? I see about as much of them here as I do at home.\"\n\nThis time, the expression Jess flashed me was a mirror of my own surprise and horror. What the hell? What do you say to that? She said it so matter-of-factly, like it was normal and Evelyn and Josselyn having homelives worth missing was weird. I gazed into the fire, furiously trying to think of something to say. Something consoling, without sounding too much like pity?\n\n\"Dude, that's fucked up,\" Jess said. Short and sweet, but with enough concern and caring in her voice to convey that she felt it.\n\nJess was about to continue down the same compassionate tone, but Lilian surprised us again by cracking up. She laughed loud and long and hard, filling the quiet dark of the night with so much sound, we had to hush her to stop her waking everybody in the lean-to up. Even for a conversation I hadn't expected to be having in the first place, this was not going anywhere near the way I'd expected. I thought Lilian was crazy, but Jess's confusion was gone, replaced by a small knowing smile.\n\n\"Are you sure you're an adult?\" Lilian finally asked Jess.\n\n\"Most of the time, but then I remember that my bed is never made and there's no food in my refrigerator, and I start to wonder myself.\"\n\n\"No adult has ever said anything like that to me. They all treat me like I'm about to explode or something.\"\n\nI stifled a choking sound. That was me! Guiltily, all the times I'd thought the worst of her and her evil looks flashed through my mind.\n\n\"We adults are used to being smarter and more mature than kids,\" Jess told her. \"We've got no idea what to do when it's reversed.\" Lilian seemed to like the flattery. Indeed, she didn't seem like she even realized we were worried about her. Or that she'd said anything to make us worry. She really was a strange one, uncannily perceptive about some things but completely blind to others.\n\n\"We really should do something about this fire,\" I said, hoping to sidetrack the conversation onto something less heavy.\n\n\"Alexis said we had to let it die.\"\n\n\"But you could get it roaring again, couldn't you? We'll douse it when we sleep.\"\n\n\"Yeah!\" Lilian practically jumped up and eagerly bounced towards her wood pile.\n\n\"Did you know that about her parents?\" Jess whispered to me.\n\n\"I had no idea.\" We watched Lilian smiling broadly as she built the fire back up to a merrily crackling blaze. How to wrap my head around that from the kid who'd just told us her parents neglected her? \"Being a counselor is hard.\"\n\n\"It's like trying to be a parent to twelve kids at once,\" Jess agreed. \"You just hope as hard as you can that none of your campers have their first periods here.\"\n\nI groaned softly. \"Has that ever happened to you?\"\n\n\"Yep. Twice.\" Jess shifted to be next to me, letting her head rest on my shoulder and putting her arms around me. \"Is cuddling by a fire close enough to sleepy cuddles for you?\"\n\nThe euphoric feelings inside me blossomed with full force, and I squeezed her back. \"Only if you keep holding me.\"\n\nThe three of us chatted for a while longer until Lilian finally climbed back into bed, and then Jess and I kept on chatting. She didn't want the night to end any more than I did, and having my feelings mirrored in her was so emotionally validating to me.\n\nI never did get my good night kiss. It was sunrise when she gave it to me, and clearly, that doesn't count.\n\n\"It totally does count!\"\n\n\"Nope! You still owe me one,\" I insisted stubbornly.\n\nJess kissed me again. \"Does that mean you want a second date?\"\n\n\"Yes. Oh my god yes.\"\n\n-------------------\n\nChapter 9\n\nI once had a girlfriend named Helen. It was early into college, and she was the hot butch girl whose boldness and brazen confidence drew me in during a time when I was still nervous about being openly gay. Before that, I'd scoffed at the notion of U-Haul lesbians as a trite stereotype mostly used as an excuse to roll the laugh track in sitcoms.\n\nAfter our first date, my heart was hers. Three dates in, I was sure it would never beat for anybody else but Helen. After a month, I'd all but kicked out her roommate, moved into her dorm room, and we were plotting to adopt a cat. Predictably, it didn't end well. But that's not the point. The point is, out of my entire social circle, only one person was brave enough to call me out for moving far too fast.\n\nNot that everybody didn't want to be supportive. They all were thrilled to see me spreading my lesbian wings with somebody who clearly made me happy. If they had any misgivings, they kept them to themselves while Helen and I basically doomed our relationship before it had the chance to begin.\n\nNot Sarah. Sarah tried to tell me what I needed to hear. I pushed her away, called her a bad friend for raining on my parade, and was all kinds of insufferable bitch to her. And then, when it ended and I shamefacedly tried to apologize, Sarah waved it all away without so much as an \"I told you so.\" She dragged me onto her couch, ordered a pizza, and spent the weekend with me binge-watching The L Word.\n\nGod. No wonder I fell in love with her.\n\nAnyway, after that debacle, I'd made a conscious effort not to go too crazy over somebody instantly. In so far as I could help it. Jess and I decided to have a second date type adventure on first off night, which was a few days away. It sucked to wait, but part of me rationalized it as a good thing.\n\nBut then I started thinking. And overthinking. And of course, all those good intentions flew out the window.\n\nWhen I thought about home and Sarah, I still got the same knot of feels that made me want to go curl up in a ball somewhere and cry. In a weird way, I was kind of happy about that. It was sort of validating, in a way. If one night with Jess was enough to cure me, what would that say about my feelings for Sarah? That I was just a horny lesbian who needed to get laid?\n\nPart of me reveled in how great it felt being with Jess. How good it felt to be so desired and embraced by her. But another part of me felt guilty, because Sarah accepted and embraced me for who I was too! Just... there's something about somebody enthusiastically sucking your clit that's a level above that. A level that Sarah couldn't compete with.\n\nAnd, no matter how many times I told myself it was completely unfair and fucked up, some small part of me couldn't help holding that against Sarah.\n\nIt was eating me up inside. I needed a distraction. Desperately.\n\nSo I basically had no choice but to plan a surprise for Jess. Otherwise my brain wouldn't stop spinning itself in circles. That's my excuse, and by god, I was sticking to it. Besides, Jess had said she liked it when I was daring. Hopefully, what I had in mind would hit that kink for her, but honestly, now I knew Jess was gay and into me, a lot of my uncertain shyness had gone away. It's a lot easier to make romantic gestures towards somebody when you finally know they like you and there's no risk of being rejected or coming off like a creep!\n\nIt took days of planning, stalking Jess, like a hunter learning the routes her prey takes. Where I could ambush her and where to set traps. How to ensnare her and setting it up. In retrospect, I failed pretty badly at avoiding being a creep, but it was fun! Like my devious plan was a secret I got to walk around with, hidden from everybody else. It wasn't ready until just a day before our first off night and we'd have our planned second date anyway, but hey. Better late than never.\n\nPhase 1: Initiation.\n\nIn the middle of the morning breakfast rush of everybody trying to get food, coffee, and get back to their table without spilling it, I snuck up behind Jess. Hopefully I was right about everyone being distracted enough to make us invisible in the crowd. I flung my arms around her, pulling myself intimately close. \"Beautiful morning, isn't it?\" breathed in her ear. \"But not as beautiful as you, cutie. But still, a nice morning.\" While I said it, I deliberately traced an arm down her side and let her feel me slipping something into her pocket. And, before she could say anything, I skipped around, flashed her a cheerful smile, and went for some coffee.\n\nPhase 2: Passing notes.\n\nThe note I'd put in her pocket said: \"I love the way your eyes make me feel warm inside whenever you smile at me.\" Jess nearly fell off her bench when she read it.\n\nIt was one of a dozen I had prepared to plant in places she would find throughout the day.\n\n\"I love how excited you get sharing the things you love with me.\"\n\n\"I love the way you listen to me like I'm the only person in your world.\"\n\n\"I love how your hair keeps falling over your eyes and you do that cute thing where you play with it.\"\n\n\"I love your tattoo. Seriously, it's so goddamn sexy.\"\n\nAnd so on. Some more serious than others, but each of them meant to compliment something different and hopefully make her feel special.\n\nPhase 3: Eyes tag.\n\nIt was my mission to get caught eyeing Jess up as many times as I could. The first chance came, predictably, when she found my first note. After making something up for her campers to explain why she'd jumped so much, her eyes darted around the Mess Hall seeking me out, only to find me staring right at her. Our eyes met, and we both smiled together. This was so much more fun knowing our attraction was mutual! It didn't take long for Jess to figure out something was up, and from there things escalated quickly. Smiles became winks, winks became blown kisses, and blown kisses became suggestive gestures.\n\nPhase 4: Smack that ass!\n\nRight, full transparency, it wasn't actually part of the official plan. But, ushering the campers ahead of us back up the hill from Water Front, Jess grabbed a chance to score a point in our little game. She caught my eye, gave her hips a seductive swing, and started walking ahead of me like a runway model. The way her butt moved, swaying from side to side in her wet swimsuit, how was I supposed to resist! Quickly and stealthily, I dashed up behind her and planted a firm swat right on her ass.\n\n\"Oh, you're so dead!\" She shrieked and chased me up the hill, the campers laughing hysterically as they tried to keep up.\n\nPhase 5: Just a taste.\n\nPatience. Patience...\n\nJess had to be coming. There was no other path that made any sense for her to take.\n\nDon't look out. Stay hidden. Patience.\n\nShe appeared around the corner without any warning, but I was ready. I grabbed her arm and pulled her to me. \"Hello!\"\n\n\"Hey--\" I planted a kiss right on her lips, just for a second, then pulled away.\n\nShe stood with her eyes half closed, smiling a goofy I-just-got-kissed sort of smile. \"Just a taste,\" I said, then instantly gave into temptation and swooped back in for another. \"Okay, maybe another taste.\" Jess tried to press her tongue into my mouth, but I broke the kiss too fast.\n\n\"You're such a tease!\" She said, trying to seem annoyed, but too clearly loving it to pull it off.\n\n\"And you're too sexy not to tease!\"\n\nPhase 6: Payoff.\n\nAfter dinner, the campers had an hour and a half of organized evening activity. Tonight was dodgeball, and everybody was hyped up for it. Ninety minutes of savage ball-based gladiator combat. Ninety minutes with everybody out of the cabins. Counselors were encouraged to join, but it wasn't mandatory. There would be more than enough counselors who wanted to play that supervision would be fine and not everybody needed to be there.\n\nJess made to follow the mob of ball wielding warriors when she felt my hand on her arm. \"I think I could use a shower,\" I said, trying to sound casual, but after the entire day of sexual tension, letting some eagerness slip through.\n\nDeliberately, I turned and started off towards Cabin 4. Jess's cabin.\n\n\"Isn't your cabin...\" Jess began as I started off, motioning the opposite direction towards Cabin 2, but trailing off as comprehension dawned on her. Her eyes blazed and her entire bearing shifted. \"You better not be fucking teasing this time.\""
    ],
    "authorname": "Lydra",
    "tags": [
        "lesbian romance",
        "romance",
        "romantic",
        "lesbian sex",
        "summer camp",
        "outdoors",
        "lesbian novella",
        "lesbian drama",
        "lesbian"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/stargazing-7"
}