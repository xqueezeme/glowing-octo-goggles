{
    "title": "Spell, Crook and Handle Pt. 05",
    "pages": [
        "All characters are 18 years or older. I am enjoying getting into the head of my villains. Exploring not just the how they do things but why. What motivates a hero is pretty easy but a villain can be downright twisted and convoluted. Louis has had a pretty normal upbringing with a loving family while our Artist had nothing we would consider loving or supportive. At some point he just fucking snapped and his path was set in front of him. Is he bat shit crazy or is there a higher power at work here? I guess only time will tell. I hope you enjoy this installment. Please vote and comment and tell me what you think. Any suggestions are always welcome. So without further delay... \n\n\n\nLhiannon Sidhe: [LEE-ah-nen SHE] A breed of Fae that dance around their victims draining them of blood and life. They are a kind of Irish vampire that firmly declare that they are most certainly not Akhkharu. \n\nKnocking on the Sky:\n\nThree days, it's been three days since my sister was taken and thirteen innocent people perished. What had been a questionable assignment for the Inquisition had now become a very personal vendetta. When three of their own had been murdered they threw the entire might behind finding and cleansing the killer. My father had been moved from the hospital and my mother went with him. They would be under the full protection of the Inquisition. I stayed behind even though they had insisted that I be put under their protection. Gabrielle assured her superiors that she would see to my safety.\n\nI was lying down on one of the couches in the living room. I was staring up at the mural on the ceiling. It reminded me of the creation of Adam. On the left side of the painting was a young man and he looked somewhat familiar. I guess that is why I found it so interesting. The 'god' figure was bearded but he too was young and as muscular as the man he was reaching out to. Behind the god figure was an assortment of interesting figures. Few appeared to be angelic; they did have an almost fey look about them. This was just one of the many strange things I had discovered since I had agreed to stay at the Ordo Malleus chapter house. The decorations and treasures under glass crossed centuries and continents. I had to admire whoever had laid out each room. They made the disjointed objects work despite how diverse they were.\n\nMy aunt Mara decided to make an appearance. I knew it was her since my parents were in Rome for the duration of this situation. She really did look like my mom and it didn't help the way she dressed. The skimpy outfits were causing havoc among the younger male members of Inquisitors. Today's ensemble was a dark purple bra, matching panties and mesh stockings. I could see Mara's hardened nipples and her dark areole. \n\n\"You look like hell kiddo,\" Mara said as she plopped down across from me. \"When is the last time you slept?\"\n\n\"Seventy two hours,\" I said in a dull monotone.\n\n\"Have you eaten today,\" she asked and I shook my head. \"Let me guess seventy two hours.\"\n\n\"Uh huh,\" I said.\n\n\"You need to do both and soon,\" she said. \"If you don't take care of yourself you won't be good to anyone.\"\n\n\"She's right,\" Gabrielle said as she sat down next to me. \"If you collapse from hunger or sleep deprivation at a critical moment...\"\n\n\"Okay... okay... you win, I will go get some sleep and eat when I wake up. Fair enough?\"\n\n\"Yep,\" the pair said.\n\nI pulled myself off the antique couch and headed out of the living room. The main hall was lit by a huge crystal chandelier setting the dark rose wood alight with scintillating rainbows. The stairs that led to the second floor was wide with carpeted steps. The pattern on the carpet was the runic design that belonged to this particular chapter house. I grabbed the banister to keep my balance. They were right, lack of food and sleep were having a major detriment on my health and sanity. I managed the stairs and turned left towards my bedroom. Gabrielle and I were not sharing a bedroom since we were under close scrutiny. \n\nI opened the door and stepped into the gorgeously decorated room. The plush carpeting felt wonderful beneath my bare feet. I closed the door and stripped down on my way to the bed. I crawled underneath the covers, closed my eyes and was asleep before I knew it. I was dragged down into the depths of exhaustion. It was dark at first and then details began to form around me. It was a well-lit park and it looked awfully familiar. I knew that I had been here but where and when eluded me. I walked along the cobblestone path and after a few short steps the downpour struck. I was soaked in seconds. I looked for cover from the ice cold rain. I could see my breath as I jogged down the path.\n\nThe public restroom came out of the gloom. I raced over to it and huddled under the overhang by the men's room door. About ten seconds later a girl appeared and took up a position next to me. She was short. I guessed she was barely five feet in height. The rest was hard to determine since she had a light gray hoodie on and the hood was over her head. She began to shiver so I moved behind her and slipped my hands around her waist to share body heat.\n\n\"I'll keep you warm,\" I told her and she nodded as she reached up and touched the right side of her head.\n\n\"I am not wearing panties,\" she said in broken English as she ground her ass against me.\n\n\"Are you alright,\" I asked her in Japanese and again she touched the right side of her head.\n\n\"Yes, I am okay. Do you have a nice big American cock?\"\n\nShe pulled her hood down and a waterfall of black hair tumbled out. She turned her head and I could see her cute features. But it was her bright blue eyes that startled me. They had to be contact lenses. I watched as she touched her right ear and nodded. She turned to face me and cupped my groin gently.\n\n\"Can I suck your big Yankee dick? I want to see if I can take all of it down my dirty Asian throat.\"\n\n\"Um... are you...\" I began as she dropped down and unzipped me. \"Oh shit darling you are an eager one!\"\n\nThe girl pulled her hood back up and then renewed her attack on my cock. One hand stroked the shaft while the other was up her skirt. I couldn't see much but I could feel all of it. She pushed her head forward in rolling thrusts that drove my cock passed her lips and into her throat. I could feel the suction she applied and growled as I got harder by the second. She brought both her hands into play and double stroked me as she sucked me off.\n\n\"I love Asian hospitality,\" I told her and she stopped and reached into her pocket and produced a condom.\n\n\"Wanna fuck my tight Asian pussy?\" She asked as she unwrapped the condom.\n\n\"It would be rude to say no,\" I said as she used her mouth to put the condom on. \n\n\"How do you want me? I am your play toy mister.\"\n\nI grabbed her by her hips and pinned her back against the wall of the restroom. She spread her legs and I slid inside of her easily. Whoever this gal was she was fucking soaked. Once I was inside of her she wrapped her legs around my waist. I moved slowly and she cursed as my cock stretched her tight little cunt.\n\n\"So goddamn big, oh shut up... you don't have a log inside your pussy! Fuck you... oh shit he is breaking me!\"\n\n\"Who is on the other end,\" I asked.\n\n\"My no dick husband,\" she growled. \"Damn, they grow them big where you come from! You are hitting my fucking womb!\"\n\n\"Why the ear piece,\" I asked as I began to hammer her.\n\n\"UNNNN... oh fuck... he likes to tell me what to say,\" she said between cries of pleasure. \"Just keep fucking me! Biggest cock ever... I bet you are real popular!\"\n\n\"Yeah, I get that a lot,\" I told her as I tugged up her hoodie so I could see her tits. \"Damn, talk about big; those are some amazing tits you got!\"\n\n\"If you are real nice I let you slide that monster you got between them.\"\n\n\"I'll be nice,\" I told her as I thrust faster now.\n\nShe came with a scream and clung to me even tighter now. I adjusted my grip on her and mauled her tits as I kept up my assault. She looked up at me begging for a break and I shook my head. She bit her lip and dug her nails into my clothing. I began feeding and her eyes went wide with surprise and the quick succession of orgasms left her shaking and pounding on my chest.\n\n\"I need a fucking break,\" she cried out.\n\nI lowered her feet to the ground and eased out of her. Grinning she turned me to face the path. She moved behind me, knelt and began jacking me off. I looked down at her and she was mouthing profanities at her husband. They loosely translated to 'you see this... this is what a real cock looks like you fucking loser'. I was grunting as I got close to coming. The woman tugged her hoodie over her head and knelt in front of me. She cupped her tits and trapped my cock between them. The soft pillow-like breasts enveloped me and she knew how to give a tit job.\n\n\"You like paizuri? Does that fat cock of yours like my tits?\"\n\n\"UH HUH,\" I moaned as I got close to climaxing.\n\n\"You can paint my face if you want,\" she said as she massaged my cock with her tits.\n\n\"Getting close,\" I warned her and she wrapped her lips around the head.\n\nMy cry echoed across the park. She swallowed a lot but some spilled between her lips. I stood there panting while she continued to suck on my dick. I guess it was only fair. She kept me rock hard and stood up and bent over.\n\n\"You can go again right,\" she purred. \"I love it from behind.\"\n\n\"Let's try something new,\" I told her as I knelt down and began lapping at her puckered asshole.\n\n\"Hey, I don't do that,\" she growled. \"Oh... is that your tongue sliding into my ass? No... wait... unnnn... that feels unnnn good. Are you going to fuck my ass?\"\n\n\"I am going to fuck them both,\" I told her as I eased a finger into her ass. \"You are going to lose your fucking mind, I promise.\"\n\n\"Why the hell not,\" she moaned. \"Wait, how the hell are you... NNNNNNNNNN... damn... I've never been DP'd before. Slow... that's it... nice and fucking slow... the tips in... I am in lust...\"\n\n\"Shut up you talk too much,\" I said as I lifted her up and fucked her standing up.\n\nI faced her out towards the park and lifted the foul mouthed MILF up and down on my cocks. She squealed, cursed and praised me all in one breath. She leaned against me and panted as I fed a little more now. Her first anal orgasm threw her for a loop.\n\n\"I came from a cock in my ass,\" she said dreamily. \"Oh god I am close already? Are you even human?\"\n\n\"Yes and no,\" I told her as I pummeled her holes.\n\n\"Two cocks, I'd call that not,\" she moaned. \"Cumming again and you are still rock hard in me. I will divorce my husband and be your little cock slot. What do you say handsome?\"\n\n\"Coming!\" I cried out as I fired twin salvos.\n\nI pulled out and set her on her feet. She spun around and hugged me. I watched as this married woman pledged her body to me. Was it just the dark magic or were there something deeper and more disturbing going on.\n\n\"What is going on, really,\" I said as I walked her into the men's room. \"I Gotta take a leak.\"\n\n\"Can I hold it for you,\" she asked and I just nodded.\n\n\"What happened,\" I asked as she gently held me as I emptied my bladder.\n\n\"Are you asking why I am so damaged,\" she said and smiled. \"I was sold to a business partner of my father. My dad couldn't pay his debt in the traditional way. So at the tender age of eighteen I moved into his house and his bed. He took full advantage of his position. If I didn't behave he would ruin my family. So I did every little thing that his warped little mind came up with. I put up with it for four years. I think I got too old for him and he let me go. I found and married a man as fucked up and abusive as him. I figured what decent man would want me.\"\n\n\"Wow, you really are messed up,\" I said and she smiled.\n\n\"Yeah, I know, you wanna go again,\" she asked and I shook my head. \"Why?\"\n\n\"I might hurt you,\" I said and she began crying. \"I will keep an eye out for you. Leave me your address and I will see what I can do.\"\n\nShe took out a business card and pen from a fanny pack. She jotted down her name and address. I glanced at the card and it was all jumbled. So this was just a dream after all. It felt so real. The woman waved and the environment wavered and changed. I was standing outside looking out over a lush forest of strange trees. It was night and three moons hung in the air. The largest of the moons was a pristine white and appeared to be snow covered. The second moon was half the size of the primary and had a distinct green tinge to it. The last moon appeared as large as the secondary and was blood red in color. I looked behind me and I was standing on the roof of what appeared to be a cunningly crafted step pyramid. The blocks making up the structure were translucent and veined with what appeared to be capillaries that pulsed with energy.\n\n\"Wow, when I dream I go all out,\" I said.\n\n\"The dreamer and the dream are not always author and poem,\" a voice said.\n\nI turned to face the tall pale skinned figure. He was dressed in a shimmering body suit covered in the elegant characters I had seen in another dream. He had a thin yet muscular build. I had thoughts of a dancer versus a boxer. His dark hair seemed to have the same translucent quality as the blocks. It was almost as if his hair was composed of glass. The ends of his locks became nearly transparent lending credence to my thoughts. Around his waist was an elegant jeweled belt that also had the runes woven into its construction. He was sporting matching daggers that were as lovely as they were deadly.\n\n\"I am glad we can speak face to face Anatari Baharr,\" he said to me.\n\n\"Anatari Baharr... night wind,\" I said and he nodded.\n\n\"You need my help if you are going to catch this killer,\" he continued.\n\n\"Do you know who has my sister,\" I asked feeling the panic rise in my throat.\n\n\"No, but without my help she will not survive,\" he said. \"Follow me and I will share my thoughts with you.\"\n\nWe walked down the steps of the pyramid and into the weird woods. The trees were gorgeous possessing intertwined trunks and red-gold leaves. Between the trees was a vast network of webs that formed multilayered roadways for the huge freaking spiders that made this forest its home. I watched as one of the spiders disappeared and reappeared a hundred yards further down the path. The more I looked the more I saw these phenomena. He led me to a lake with violet colored water. I wondered if the color of the water was due to the atmosphere or from minerals in the water itself. We sat down and the tall quiet man looked out over the lake.\n\n\"Do you see how tranquil the surface of the water is?\"\n\n\"Yes, it is very peaceful,\" I said.\n\n\"Now observe,\" he said as he chucked a large rock into the lake. There was a huge splash and ripples raced across the surface before dissipating. \"You are like the rock. You create a large disturbance when you travel what you call the Astral Plane. You draw attention from a great distance to yourself. Would you prefer to be a leaf or a stone?\"\n\n\"A leaf,\" I said and he smiled.\n\n\"Good, now attend and I will show you how to be a leaf.\"\n\nHe stood up and walked across the surface of the lake as if it were ice instead of water. He left not a single ripple on the surface. He gestured for me to join him. I got up and walked to the edge of the water. If this was a dream I could manipulate it. I willed myself to weigh nothing. I took a step forward and my foot sunk below the surface but only about six inches. I still left huge wakes in the water as I strode forward. He nodded and smiled as I stood next to him.\n\nGrinning he sat down on the surface of the lake as if it were the shore. He spoke and told me about what he called artifices of the mind. He talked about the nature of the Astral Plane and how it mirrored the physical universe and how it doesn't. The differences were subtle and exploitable. If I learned how to hack the Astral I could walk unseen by friend and foe alike. He paused and looked at me as if deciding to share these secrets with me.\n\n\"Why are you here,\" I asked. \"Am I a threat to you or an asset?\"\n\n\"Both,\" he said and continued. \"A limb from a tree can be used to build a house or crush a skull. I am deciding if I am building a house or a cairn.\"\n\n\"I know there is a lot I don't know. I was thrust into this life quite unexpectedly. For what it is worth, I am doing the best that I can.\"\n\n\"I shall kindle a light in you. I will give you a torch and trust that you don't start a forest fire.\"\n\n\"Thank you,\" I said and he shook his head.\n\n\"No, you may curse me before this quickening has ended. Now we shall begin...\"\n\nI opened my eyes and looked over at the clock by my bed. The LED display read 4:15 a.m. I woke Feng and checked the date. It was the same night I had gone to bed, but that just isn't possible. I sat up and my muscles screamed. If there was any doubt to the training I had received it was over. Boy was Gabrielle going to be pissed in the morning. Oh damn, I gotta take a piss! I clenched my teeth and sat up. I clamped both hands over my mouth to keep from screaming. I was glad this room had its own bathroom. I heard some of the cadets weren't so lucky. \n\nI somehow made it to the toilet without waking the entire chapter house. The simple joy of emptying one's bladder was an accomplishment. I turned on the light and squinted. When I looked down at my arms I nearly fainted. The bruises weren't limited there; no they covered every inch of my body. My skin was a patchwork of black and blue and that explained the pain but how was I going to explain the bruises? \n\nI needed ice, lots and lots of ice. I managed to slip on a hooded robe complete with the Ordo Malleus insignia. I pulled up the hood and headed for the kitchen. I crept down the stairs wincing with each and every movement. I managed the dining room without being spotted, so far so good. I snuck through the butler's pantry and to the door that led to the kitchen. I smelled something cooking. Damn it, I was going to have to try and explain myself to the kitchen staff. I took a deep breath and opened the door.\n\nThere were two of them. They were elderly gentlemen with long gray hair that was distinctly braided. They wore the garb of chefs and were working at preparing bread for the morning meal. They must have been up for hours already. Dozens of loaves of bread were waiting for the oven when I entered. The two paused and looked at me. One smiled and raised an eyebrow.\n\n\"I need some ice please,\" I said and they looked at each other and grinned.\n\n\"Now why would you be needing ice so early this fine morning,\" one said in a thick Irish accent.\n\n\"I was thinking the same thing brother. Why is Her charge up this early wanting ice,\" the other said in an equally robust Scottish accent.\n\n\"Oh hell,\" I said and opened my robe.\n\n\"Saints preserve us,\" the first said and almost fell to tears.\n\n\"Dear God,\" the other said and fetched a large metal bowl while his partner opened one of the freezers and heaped ice into it.\n\nPeter, the Irish chaplain, summoned one of his acolytes to help me back upstairs. He scolded the youth and made sure her ladyship didn't hear about my bruises until the good lord intended. I ran a bath and dumped the ice into it. The youth helped me in and I told him I would be okay. He reluctantly left me to my ice bath. I listened for the outer door to close and slipped my entire body beneath the surface. Damn it was cold! I decided to attempt something that had saved my life before and shift my form to accelerate the healing. If it could close a wound on my leg maybe it could fix this. \n\n'Well, here goes,' I thought as I performed the change.\n\nI winced fearing the change would only aggravate my situation, it didn't. It actually helped. I let out a soft yelp in a low alto as the ice made my nipples feel like they were going to fall off. How did women stand this? I shifted through my entire 'cast' of characters I had created over the past few years. By the time I hit the female albino I was fully healed. I was tired and hungry but I was free of pain. I got out of the bath, pulled the plug and dried off. The long ass hair was going to take a while to dry so I glanced in the mirror and went from hair down to my ass to short cropped in seconds flat. I was yawning as the fatigue hit me hard. Just a little nap and I would be fine.",
        "I slipped beneath the covers and fell asleep right away. No dreams invaded my sleep this time and I was thankful. I was shaken awake and rolled over to look into Gabrielle's loving features. She smiled while she caressed my cheek.\n\n\"Have you lost your fucking mind,\" she whispered in my ear. \"What if I had sent someone to wake you?\"\n\n\"I had a good reason,\" I said. \"I am hungry is the bread ready yet?\"\n\n\"How did you know there was freshly baked bread? Were you out and about like this?\"\n\n\"NO, I was my handsome self,\" I told her and her scowl disappeared. \"I met two old men, an Irishman and a Highlander. They were making bread.\"\n\n\"Why are you...\" she said tugging the covers down and sneaking a peek. \"Oh damn, I like this one a lot! Can we play with this one later?\"\n\n\"Maybe,\" I said snatching the covers up. \"I am just a toy to you.\" I said in my best pout.\n\n\"Yes you are, now change and get dressed for breakfast.\"\n\nI got up and Gabrielle stared at me and I gave her my best puzzled look. I glanced down and bit my lower lip nervously. The Mistress Inquisitor grabbed my shoulder and turned me around. She touched where the remaining bruises were the worst. I flinched and yelped as she pressed the tender skin.\n\n\"I am sure there is some amazing story behind this,\" she growled. \"Hell even the top of your feet are bruised. What the hell Louis?\"\n\n\"It is complicated,\" I said and she let go. \"I thought all the shifting I did last night would have gotten rid of them, I swear.\"\n\nI changed back to the default me and picked out some clean clothes. I slipped on the impact armor and put street clothes on top of that. It was Gabrielle's standing order, body armor at all times. I sat down to put on my socks and when I put on my shoes they feel oddly uncomfortable. Maybe it was just the bruises or maybe it was something else. We went down to breakfast and took our assigned seats. Gabrielle sat at the head of the main table and I was near the end next to the fourth year recruits. \n\nThe Morning Prayer was said and then the food was served. I forced myself into my mindfulness discipline despite how hungry I was. I ate slowly and deliberately tasting and enjoying the meal. A few of the recruits followed my example and slowed their eating pace.\n\n\"Can you explain this to me,\" the cute acolyte next to me asked politely.\n\n\"It is called mindfulness,\" I said. \"It is a way of appreciating life in all its simplicities. You can use it at any time. Personally, I try to focus on food, beauty and instruction. I break down things into their smaller actions and I focus on them. It is especially effective when I eat.\"\n\n\"Thank you Linguist,\" she said.\n\n\"Linguist,\" I asked.\n\n\"That is her ladyship's title we are to address you by,\" she said and smiled.\n\nI returned to my meal and managed to snatch a few extra rolls for later. The meal ended and the recruits went off to class and Gabrielle disappeared to attend to the daily affairs of the chapter house. I went to the courtyard and picked up the five and a half feet long Bo staff. I went to an empty sparring circle and began to practice. My fingers, as well as the rest of my body, were still stiff but I wanted to push through it. I took my initial stance and began slow. I dropped the staff a few times at first but as my practice progressed I felt the confidence build and my technique improve dramatically.\n\nI shifted my arm and leg muscles on the fly ridding them of fatigue and lactic acid. I pushed my speed and difficulty as my workout progressed. I could feel the center of gravity of the Bo staff and made it work for me; demand it to do my will. That desire became all-consuming and not limited to the staff. I directed that force of will to my entire body. While the Bo staff spun and moved my body leapt and twirled in the air. I reached the last Kata, or series of practice maneuvers, and stopped to get a bottle of water. I looked around and there were a full thirty recruits and instructors staring at me. I shrugged and one of the Inquisitors tossed me a towel. \n\n\"Thanks, sorry for taking up the ring,\" I said and the woman who had tossed me the towel touched my arm.\n\n\"Why are you not teaching here? Linguist my ass...\" she said and looked over her shoulder as Gabrielle stepped forward. She looked pissed.\n\n\"Linguist, attend me,\" Gabrielle said and I placed the towel around my neck. \"What the holy hell was that?\" She asked once we were out of ear shot of the others.\n\n\"I don't understand,\" I said and she saw I was in the dark.\n\n\"Where the hell did you learn to move like that?\"\n\n\"I have no idea what you are talking about. I was just practicing.\"\n\nGabrielle snarled and walked over to one of the Inquisitors. She handed over the video camera. Gabrielle went to the beginning of the footage and let me watch it through the camera's viewfinder. Now I understood. I watched as I went through a series of maneuvers that looked like Jet Li had choreographed it. I made a face and handed her the camera.\n\n\"If you tell me it's complicated I will box your ears,\" she threatened.\n\n\"Not here,\" I said and she nodded.\n\nShe led me into the chapter house and up to her office. I closed the door behind me and she opened her belly drawer and pressed something. She dropped down into her chair and glared at me. I waited for her to say something but after a few minutes it was obvious she wasn't.\n\n\"I had this crazy dream,\" I began and her eyes narrowed. \"...A dream that lasted six hours.\"\n\n\"Dreams don't last that long,\" she said. \"Tell me what happened.\"\n\n\"It is all very disjointed,\" I said. \"You know how dreams can evaporate when you wake up. I usually feel refreshed after sleep but this morning I was bruised all over. It was a lot worse before I took the ice bath. I spent a good hour shifting from one form to another. Each shift healed me a little but you saw for yourself. I am still pretty battered.\"\n\n\"You will tell me if you remember more,\" she said.\n\n\"You know I will.\"\n\nI went to the living room, what the acolytes called the common room. The large plasma screen was on and the news was covering the lack of forward movement on my sister's case. The public was upset and there had been a candlelight vigil already. I sat down and one of female students sat down next to me and asked how I was handling the situation. I looked at her and rejected the vitriol response that immediately sprang to mind. \n\n\"I am doing the best I can, considering,\" I told her.\n\n\"Can I ask a personal question,\" she said.\n\n\"I have the option to refuse,\" I asked and she nodded. \"Ask away then.\"\n\n\"Do you believe in God,\" she asked and conversations in the room ended.\n\n\"I have no doubt there is a god,\" I told her. \"However, I am not sure he or she is what we think they are.\"\n\n\"I don't understand,\" she said.\n\n\"And you shouldn't or any of us,\" I said. \"I believe god is as far above us as we are above a virus. We could not conceive the mind of god as a virus could conceive of color or sound.\"\n\n\"I see your point,\" she said and the collective sigh of relief was palpable. \"What about evil?\"\n\n\"That's very subjective,\" I said and she frowned. \"I believe there are things that are objectively evil. I mean that no matter how you perceive them it is just wrong. There are gray areas that I prefer not to tread in.\"\n\n\"What about a personification of evil,\" she said. \"...A singular source of sin.\"\n\n\"No, I think there are many different things and beings that inspire wickedness. But a single source, no.\"\n\n\"I respect your opinion,\" she said and returned her attention to the television.\n\nI watched the newscast and realized Feng hadn't chimed in yet. I checked my hand and my ring was still there. I wonder what was going on. \n\n'Feng,' I sent silently but no immediate response. 'FENG?'\n\n'Masssterrrrr,' she said her voice distorted. 'Oneeee mo... ment... I am nearly... finished...'\n\n'What the holy hell is going on?' I asked and waited.\n\n'Sorry Louis,' she said a minute later. 'I was just finishing reallocating data dumped to your neural implant.'\n\n'Care to explain, why did you need to move data around in the first place?'\n\n'Someone hacked your implant and placed hundreds of terabytes of data there.'\n\n'Terabytes of data, what kind of data? What sort of format are we talking about?' I asked.\n\n'I am still analyzing it but it appears to be highly compressed packets of varying size. The smallest is a single rune form, the largest is a rune circuit that contains hundreds of characters.'\n\n'I still don't understand. Show me...' I said and closed my eyes.\n\nI reversed the connection and entered Feng's digital citadel once more. This time she was alone and holding a familiar rune cupped in her hands. I walked over to her and she handed me the digital construct. It was the runic language from my dream. The rune I held literally meant the hunter's patience. I interpreted it as when you are ready. \n\n'What do you think,' I asked.\n\n'This character has an executable function. I suspect, when you are ready you activate this and it links to all the other rune structures. It is a guess but the most logical I can formulate.'\n\n'Anything else I need to know about these clusters of data?'\n\n'Three executable have already been activated before I moved the inactive bulk to your ring.'\n\n'Do you know what they've done or their purpose?' I asked.\n\n'All three were activated when you put on your armor. I suspect they affected it somehow.'\n\n'Can you access my armor and see what's going on? Is this some kind of trace program or a virus?'\n\n'One moment please,' she said and closed her eyes. 'Link established... running diagnostic... anomalous energy source detected... formatting in progress... ETA six hours until termination. There are several subroutines reconfiguring your armor. I suggest you wait until the process is finished to determine its effects.'\n\n'So basically sit back and wait. What systems are being affected?' I asked.\n\n'From what I witnessed all of its systems are being modified.'\n\n'I am glad you are alright,' I said and she blushed. 'You really like this Talon character.'\n\n'I like the way you look at me in this form,' she admitted. 'If another pleases you more I am always open to suggestion.'\n\n'Any news on my sister or the man responsible,' I asked and she nodded.\n\n'I have attributed at least two hundred and thirty seven murders to this individual. He has been active for nearly twenty years. I am working backwards and when I find his first I will tell you.'\n\n'Thanks make that your top priority,' I told her. \n\nI left her and opened my eyes. Again the time difference was huge. The same newscast item was on when I closed my eyes. I was being helped out by party or parties unknown for their own reasons. I had to accept the fact that I was a piece on a much larger board. I didn't like it but if it would save my sister and return her home alive I would accept it, for now. I had six hours on my hands until my armor was done percolating and Gabrielle was busy with Inquisition business. There was only one thing to do, hit a strip club!\n\nInterlude 1: Crashing Thunder\n\nIt had been three days or that is what the sick song of a bitch told her. It could have been three hours. She hadn't slept or had what passed for a block of sleep in what seemed like forever. That was his plan after all. The entire system was on a timer and when it went off the klaxons blared at 100 decibels and the overhead lights blazed with a blinding brilliance. It was enough to drive a person crazy. Fortunately she wasn't just anybody, she was Louis' sister and she was defiant. She sat on the floor of the cell, legs crossed, back against the wall and eyes closed. Louis had been to Japan and when he returned he had insisted on teaching her to meditate.\n\n\"It will help you de-stress and relax during those frustrating days at work. I know it seems strange but it works, it really does.\"\n\n\"Thank you Louis,\" she whispered for the thousandth time. \"Now find me so you can kill this son of a bitch!\"\n\nThe sprinklers kicked on and cold water fell from above. She wanted to howl in frustration but Louis had sat beneath a freezing waterfall during his meditations. How could she do any less? I will endure! I will not break! I am a mountain. I am water and water is patient. Water always wins! You hear that you sick son of a bitch... water always wins!\n\nAbove her cell the unblinking eyes of the security cameras watched her every move. There wasn't much to see and that infuriated and amazed him at the same time. He stared at the monitors and shook his head. He still had a blank canvas and that just wouldn't do. She just sat there and did nothing, said nothing. She was depriving him of his reward. Where were the screams of fear? Where were the howls of rage? She should be in a fetal position begging him to make it end, but she wasn't. No, this one was unlike any of the others. She was not clay or wax or even bronze. This stubborn bitch was a diamond in the rough. He just needed to find the right blow to shatter her into a million pieces. I am the fucking artist here and this is my studio and your mind and flesh are my canvas. But first she must break! She must crack and scream and cower in fear.\n\nMetallica's Master of Puppets plays in the background as he glares at the screen. He runs his fingers lovingly over one of the monitors whispering his promises of pain and fear and death. His rage reaches a flash point and his fist crashes through the screen and it goes dark.\n\n\"Fuck, that is the third one is three days... this bitch is going to be expensive!\"\n\nThe Cage:\n\nI was jogging along the path around the chapter house. It wasn't like any of the Inquisitors had a list of strip joints on them or likely want to drive me to one. They were a repressive lot. If they only knew what went on when their precious Ladyship left the grounds. That brought a laugh as I hit the wooded section of the trail.\n\n\"Louis! Over here Louis,\" Leah called out from a darkened patch of the woods.\n\n\"Leah, what the hell are you doing here?\" I asked fearing for her safety.\n\n\"I knew you would be worried about me,\" she purred. \"I missed you!\"\n\n\"Of course I have,\" I said. \"I have been occupied with my sister and...\"\n\n\"I know and I understand,\" she said bloody tears streaking her cheeks. \"I will take you.\"\n\n\"Huh, take me where?\" I asked and she wiped the tears away and licked her fingers.\n\n\"The Cage,\" she purred again. \"It is the most prestigious gentleman's club in the city. Consider it a kind of lusty Diogenes Club with the king makers running it.\"\n\n\"How the hell could I get into a place like that,\" I asked and she smiled as she pulled up her hood.\n\n\"I dance at the Cage when needs be,\" she said taking my arm. \"I have a car nearby.\"\n\nThe limo drove us down to the business district downtown. I was told the dos and don'ts of behavior within the confines of the club. We entered via the underground parking lot. Leah directed me to the red elevator. We took it down with the help of a plastic key card she kept in her purse. She opened the door that held the emergency phone in case the elevator failed. She slid the card into a slot below the phone and pressed and held the L button. It turned blue and she released it and removed the card and closed the door. Leah slipped the card back into her purse and clung to my arm.\n\n\"You are going to love the atmosphere of this place, I just know it!\"\n\nThe door opened and we stepped into a hallway. There were two burly looking men in dark suits and glasses. Leah pulled back her hood and they were all smiles. She told them my name and the guy on the left picked up a tablet computer and checked it. He nodded and we proceeded down the hallway. I asked her why my name would be on a list for this club. She just laughed and explained that the governor had put my name of the list years ago. When he chose me for the education grants he also dropped my name with the owner of The Cage. I just shook my head. People never ceased to amaze me.\n\nI sniffed the air and detected the scents of flowers, food, drugs and of course sex. Oh, I was going to like this place, no doubt about that. The hall ended in a pair of double doors. Two more scary looking guys were posted here. Unlike the first pair, these guys didn't appear completely human. There were hints like elongated incisors, slit pupils and heavily scaled skin across the backs of their hands. But they were quite polite and opened the doors for Leah and me. \n\n\"Enjoy your visit Sir,\" one of them grumbled in heavily accented English.\n\nThe Cage was a series of interconnected rooms. Each room had a particular style and inclination. A few rooms were designed simply for mingling while others were strictly for a specific fetish or lifestyle. The first room had a kind of industrial feel to it with lots of exposed brick, metal and neon signs that read XXX Live Nude Girls and the like. There were perhaps a few dozen people standing around sipping cocktails in this room. Most were human but several were most definitely not. I noticed strong eye shine from a darkened corner and the flash of canines, Akhkharu or perhaps something else. I was treading into waters that could be deceptively shallow. I was surrounded almost at once and condolences regarding my sister hung in the air until Leah pulled me free. She took me into the corner I had first noticed and she introduced me to the two dancers that were lurking there.\n\n\"These are Tara and Tera, they're twins,\" Leah said as I got a good look at the pale skinned nightwalkers. \n\n\"We are Lhiannon Sidhe,\" they said in one voice. \"We are Fae not Akhkharu.\"\n\n\"I have never met a Fae before,\" I said and the look that provoked was priceless.\n\n\"Ooh, I do love a first timer,\" Tara said or was it Tera? \n\n\"We share everything and everyone,\" the other said.\n\n\"I look forward to it,\" I said and we were off through the next door and a whole new experience.\n\nThis room was much larger and had a dance floor at the center, bars and snacks along the walls. The motif was something of a grunge rock look. There was a full lighting rig hanging over the dance floor which included a disco ball and even pivoting lasers. This crowd was much louder and more diverse than the first room. While the majority of the clientele were human a full twenty percent were something else. I guessed that most were either vampires or fae but a few I just wasn't sure about. We didn't stay and it became apparent that Leah had a particular room in mind. \n\nThe next section was a series of rooms dedicated to one specific theme, high school. There were signs that read 'Warning: School Zone' and 'Children at Play' and my personal favorite 'No Loitering on School Property'. I heard some very interesting sounds coming from behind that particular door. Leah just smiled and nodded. I opened the door and peered in. The sound that had caught my attention had been an odd metallic sound and now I knew what it was. There was a cute little blonde in a cheerleader's uniform; she was bent over and gripping a chain link fence. The guy behind her was hammering her slow but with a great deal of force. He had her skirt up over her ass and I could clearly see his cock driving in and out of her. I closed the door and let them be.\n\n\"You could've joined in if you wanted,\" Leah purred in my ear. \"You could have slid your cock from the other side of the fence and let her suck you off.\"\n\n\"That would have been nice but he really had his groove on. I didn't want to bust the mood.\"\n\n\"Always so very thoughtful,\" she said. \"Let's go, there are people eager to see you.\"\n\nI followed her through three more rooms and three more diverse bodies of members and entertainers. We reached her goal and amidst the blaring music and overwhelming scents of sex and drugs was the Quietus, the room of silence. It wasn't exactly silent but there was no music and it was finely decorated in late Elizabethan furniture and atmosphere. The men wore suits, smoked pipes and cigars and sipped cognac. The ladies wore collars and either hung on the arms of their male companions or crawled on all fours in search of attention. I did spot a few men seated reading while a woman sucked them off quite leisurely. I couldn't help but smile at that. The pets were patterned after animals, some were cats or dogs or cows or even a pony.",
        "\"Would you like a cocktail Sir,\" a lovely brunette dressed in a harness and sporting a horse tail poking out of her ass asked.\n\n\"Tequila with a beer back,\" I said.\n\n\"Dark or light beer,\" she replied.\n\n\"Dark, Guinness if you have it,\" I said and she smiled as she left to fill my order.\n\n\"Louis, well as I live and breathe,\" the Governor said from a corner of the room. \"I am glad Leah has brought you to our little quiet slice of bliss. If you need anything just ask. I have been on the phone with the FBI and police chief everyday over this insanity.\"\n\nI heard a deliciously naughty sound and turned. What a sight indeed! There was a woman lying sideways on a high backed chair, her head was hanging over the arm of the chair while a man fucked her throat. Despite the act she had an air of nobility and grace about her. I watched as he buried his erection between her lips in a steady rhythm and she took it all without a hint of a gag or any sign of discomfort. She was dressed in an Arabian dancer's costume and a long strand of pearls dangling between her large breasts.\n\n\"I believe you've met my wife,\" the Governor said gesturing to the woman on the chair.\n\n\"Oh, it's been a few years,\" I replied as coolly as I could. \"She looks well.\"\n\n\"That's what I like about you Louis,\" the Governor laughed. \"So polite and so kind, if you want to have a go at her it looks like Simon is about ready to shoot off.\"\n\nThe man Simon he mentioned turned out to be Simon Birch, the District Attorney. His face was bright red and a few seconds later he let out a deep guttural groan and the Governor's wife swallowed every drop. He withdrew his cock and she sat up and settled into the chair and licked her lips. She looked at her husband with a questioning look and he shook his head. She smiled and seemed quite pleased with herself. The Governor reintroduced me to her and she hopped up and hugged me, her tits crushing against my chest. She told me if I needed anything all I had to do was ask. I leaned in close and asked.\n\n\"Oh you naughty boy you, I would love to,\" Sindy giggled. \"How do you want me?\"\n\nShe sat down and placed an ankle on each arm of the chair and leaned back. She beckoned me with a motion of her finger and I walked up. I watched as she unzipped me and freed my member. Her eyes lit up when she saw the length and girth that I offered.\n\n\"Oh my, this is going deep,\" she purred. \"Here let me.\" \n\nShe guided me between her legs and I slid in quite easily. She was soaked after sucking off the D.A. and was eager for a good pounding.\n\n\"Not don't hold back just because we are in a room with other people. You ram that fat cock of yours as deep and hard and fast as you want.\" Sindy said as if she were talking about the weather.\n\nI slid into her completely and she let out a woof of surprise. She reached up and grabbed the back of the chair for support and nodded. I began to move slowly now and a small crowd formed around us. It was easy to feed from them. They were so intent on what was going on in front of them; their lust was a tangible thing for me. I thrust harder and that got her juices flowing. I had a goal and by god I was going to get it. I hammered her harder and faster now. I watched as her demeanor began to crumble and she looked to her husband for support.\n\n\"It's okay sweetie, if you want to go ahead. Nobody will blame you with that fine specimen inside of you.\" The Governor told his wife.\n\n\"Thank you dear,\" she said as I invoked the dark magic and snared her in it. \"Oh shit!\"\n\nHer first orgasm hit so fast and without warning she almost fainted. I pounded her hard and fast and she cursed like a fucking sailor. Leah leaned against the Governor while I reached up and pinched his wife's nipples hard. Her hips bucked against me as she came for the second time. The look of disbelief was evident to all. She used her hands and pulled her ass up and off of the chair's seat. I let go of her nipples and grabbed her thighs to help support her. I adjust my footing and drove my cock as deep as it could go with every thrust now.\n\n\"Fuck me motherfucker,\" she screamed. \"Oh my god I am coming again!\"\n\nI wanted to curse back at her but bit it back. The energy from her was heady but that from the crowd watching was a whole new flavor for me. My balls were slapping against her asshole and as her fourth orgasm closed on her my first was cresting.\n\n\"Oh shit he's getting bigger,\" she cried. \"Are you going to cum?\"\n\n\"UH HUH,\" I growled.\n\n\"MY tits... shoot it all over my TITS!\" she demanded.\n\nI nodded as I hammered her so hard the chair threatened to tip over. Leah stepped in and braced it from behind. I slammed into her cunt until the very last second. I yanked my cock free and plastered her tits, pearls and her face for good measure.\n\n\"Oh well done,\" someone behind cried.\n\n\"Excellent aim Sir,\" another offered.\n\n\"Me next,\" a female voice begged, it was the pony server.\n\nThe Governor's wife slumped down, very unladylike, into the chair and panted as she caught her breath. She closed her eyes and licked her lips. I stepped back as the pony and the cat rubbed my cum into her skin as if it were lotion. They licked their fingers afterward and smiled. Leah did me the service of licking my cock clean before I tucked it in and zipped up.\n\n\"I am sure I speak for my wife,\" the Governor said. \"I would like to invite you and a guest to our next little party. I hope you can come.\"\n\n\"Unless a break in my sister's case prevents me,\" I said. \"I will be there.\"\n\n\"Well said Louis well said.\" He said smiling. \"Oh, it looks like Sindy wants another round with you.\"\n\n\"She is a very adventurous woman,\" I said and he agreed.\n\n\"Oh yeah, a cock hungry slut that one,\" he replied. \"One of the reasons I married her.\"\n\nThe pony delivered my drink and I downed the Tequila and paused before I drank my beer. That was the best Tequila that ever passed my lips. The Governor saw my expression and smiled. He told pony to send a case to the chapter house with his regards. I thanked him and he shook his head. Apparently the pounding I had given his wife was reward enough. As I sipped my pint of Guinness a soft melody came over hidden speakers and the entire climate of the room changed. The subdued gentlemen acted more like horny teenagers. I followed as they pushed open a hidden door behind one of the bookcases lining the room. The passage lead straight to a large room decorated with stripper poles, cages and plenty of tables. I was led to the center table and before it a caged stage with a pole inside. \n\n\"Oh you are in for quite the treat,\" the Governor said excitedly. \"She only comes out for special occasions.\"\n\n\"She,\" I asked and he pointed to a wheeled cage that was being pushed towards our stage. \n\nThe cage was covered but I felt something. The smell of ionized air was heavy in the air. A storm was approaching and it was electric! I found my fingers digging into the surface of the table. Who was under that cloth? No, what was beneath that cloth? The closer it got the stronger the feeling became. Oh no, I recognized it, that magnetic force that I knew intimately well. But that was impossible, where did they find her? The cage was docked and the doors of both cages swung inward allowing the thing inside to pass from one to the other. She wore a hooded robe but I knew what she was even before she revealed herself. \n\nThe cage doors closed and the music began, Son of a Preacher Man drifted over head as she dropped the robe to the floor. The succubus was stunning to look upon. She had chosen the appearance of a buxom yet innocent looking teenager. She wore glasses, hair up in pigtails and a short pleated skirt to finish the look. As she danced she fed from the crowd. Her dark magic strong and heavy in the air and only the iron manacles around her wrists and ankles broke the illusion. The seamless jewelry kept her from shredding the cage and making a massacre of those assembled. \n\nI severed her connection to me with some effort and enjoyed her performance. I saw the glassy eyed look on everyone else and understood their hunger for her. She was their dream girl and perfect fantasy in the flesh. She made eye contact with each man and woman in the room. I could almost see the soul stuff drifting through the air in a kind of spiritual miasma. She shed the skirt to reveal the black thong beneath. I had to admit she had a world class ass beneath. By the end of the song she was down to bobby socks and a devilish grin. The next song began, Scorpions 'Send Me an Angel' and she shifted to a tall leggy brunette with hair down to that world class ass. Her dance style was as mercurial as her form. She was working the pole now and doing some seriously acrobatic maneuvers. When we made eye contact she faltered and this little fact was not lost on certain patrons.\n\n\"She really likes you,\" the D.A. whispered in my ear. \"In the six years I have been coming here she has never made a mistake on the pole.\"\n\n\"Lucky me,\" I said.\n\nHer third and last song, Iron Maiden's 'The Fallen Angel', began and she was now a busty redhead with freckles, green eyes and plump pussy begging to be fucked. She was in full feeding mode now. Her style shifted to a gymnastic form and the pole was removed. It slid silently upwards and used the entire stage now for our entertainment. Her eyes never left mine now. She was as curious about me as I was about her. \n\n'Who are you,' her mind speech slithered into my consciousness.\n\n'No one to be trifled with,' I replied and she laughed.\n\n'A mage... Fae... damn my iron prison... I can't see you clearly,' she growled in frustration.\n\n'How long,' I asked.\n\n'My prison,' she replied and I nodded. 'Forty six years and some change, my own fault for being too arrogant.'\n\nThe song was nearing its end and her body was covered in a gleaming sheen of sweat. The cage doors opened and she returned to the smaller one. She spoke to her handler and he looked at me and then back at her. He nodded and she sat down crossed legged in the center of her cage as it was wheeled over to a side of the room. I was approached by her handler and he told me to sit in the chair provided and not to touch her for any reason. I agreed and walked over and sat down.\n\n\"What is your name,\" I asked and the succubus laughed.\n\n\"Nice try Mage,\" she snarled. \"My Master is far too clever for that. I can smell your power from here and it is intoxicating. Pity I am in here and you are out there.\"\n\n\"Yes a real pity,\" I replied. \n\n\"Do they know that you are a Mage?\"\n\n\"No, I am just a humble archaeologist,\" I said.\n\n\"You are marked historian,\" she purred. \"You are owned as surely as I am. It is good to know that I am not the sole slave in this room. Your leash is more ephemeral than mine but just as binding. She is still alive by the way, your sister. But the pawn has a patron. The patron wants you to suffer before he strikes out at you.\"\n\n\"How do you know that?\" I asked and I saw the delight my pain gave her.\n\n\"If you were more observant you'd know. The patron protects his pawn.\"\n\nOur time was up and she was wheeled away. What did she mean the patron protects his pawn? Was someone shielding the kidnapper? She was a creature of magic and it made sense she might sense such things. Who would want to protect a monster like this one? I sat in that chair for a long time. Long enough for the crowd to dissipate and seek other distractions. I felt a hand on my shoulder and I turned to look at the man in the white suit. He could have been anywhere from his late teens to early thirties. It was his eyes that had that ageless quality about them.\n\n\"It is unwise to take a succubus' words to heart. They are bitter and mischievous creatures.\"\n\n\"You must be the master she mentioned,\" I replied and got to my feet.\n\n\"A very astute deduction, I am indeed her owner. The name is Torre, Victor Torre, at your service.\"\n\n\"Everyone just calls me Louis,\" I said.\n\n\"She mentioned that you are a Mage of sorts,\" Victor said. \"I don't suppose you could perform for my guests?\"\n\n\"I will need a few female volunteers from the audience,\" I said. \n\n\"I think I can wrangle up a few,\" he said. \"Follow me.\"\n\nThe room was patterned after a medieval dungeon along with all the toys. Victor had hand-picked my audience and among them was Sindy and her husband the Governor. I knew it was a bad idea but I felt like I owed him something for his hospitality. Sindy was one of the four female volunteers. I directed them to strip down and stand in the open area near the center of the dungeon. The men formed a loose circle around them as I cast the spell. I had been playing around with this spell and customized it a little. The fog rolled across the floor and the ceiling this time. The two circles formed around the women and the eerie illumination flashed within and all eyes were fixed on it. I invoked the second phase and the whip-like appendages appeared from above and below this time. Arms and legs were grasped as the women were lifted up into the air. \n\n\"Holy shit,\" a man gasped. \"Is he going to do what I think he is?\"\n\n\"Yep, look...\" another man exclaimed pointing at the ground.\n\nThe four tentacles emerged from the fog and slithered up towards the women and they squealed in delight. I could have just impaled them then and there but decided to drag things out. This was as much about feeding from them as entertaining the masses. The tips of the tentacles sprouted mouths and tongues. The tongues began to lap between each woman's legs. The only sound now came from the women as they growled, grunted and moaned. I let them beg me to fuck them but I waited. I watched them carefully and when their legs began to tremble I yielded. The tips of the tentacles became more phallic and eased into them. The cry from them echoed off the stony walls. The men gasped as their wives and girlfriends were violated by the unearthly appendages. \n\n\"Oh he is a fucking rock star,\" the D.A. said to his friends.\n\n\"More cocks... more cocks...\" the men began chanting.\n\nI smiled and nodded. Four tentacles descended from above and four more rose from the floor. The ones from the ceiling slid between the women's lips and began fucking their throats. Those from below began teasing their asses preparing them for the next step. Sindy just relaxed in the grip of her violator and gave herself up to the pleasure. Soon the other women followed her and surrendered. The tentacles from below sprouted little vines and pulled the women's ass cheeks apart so everyone had a clear view. The tendril-like heads eased into each woman very slowly and they groaned as the violation reached completion. Once they were accustomed to their plight I let the heads swell inside of them and made them move. It was like an erotic orchestra and each player had its part. The undulating cocks inside of them pulsed with life as they thrust in and out. The sturdy yet gentle tentacles that held the ladies aloft and the sprouts that held ass cheeks or caressed tit flesh and nipples. \n\n\"I think they are ready for the climax,\" I said.\n\nI tied my senses into the cacophony of pleasure and it hit me full tilt. I took a step back but recovered quickly. I flipped the ladies ass up and head down and fucked them senseless. The men watched in awe as their female companions were completely and utterly violated before their eyes. I was so entranced with the spell I missed out on what else was going on. The ladies writhed in pleasure as one orgasm followed another and I fed on them lightly but fully. I had to recoup what I put into the spell. Their bodies were building for a mind melting orgasm. They were intricately linked via my enchantment and they were synced to the millisecond. As my climax neared so did theirs. We were one and as the moment closed in on us they shook and bucked.\n\n\"Coming...\" I cried out and the simultaneous orgasm that day became legend. \n\nI lowered them to the ground and cancelled the spell. The fog receded from the floor and ceiling, leaving only a pile of quivering female flesh. I blinked a few times and saw that the men had not been idle. They had made an offering of their own to my spell. The multiple puddles of seed shone on the floor evidence of the audience's appreciation. Victor had already recovered and was all tucked in and grinning. He gestured and the cat girl handed me my VIP membership card to The Cage. I had unlimited access to any and all delights it had to offer. \n\n\"Hell of a show,\" the Governor added after a time. \"I think Sindy has had enough stimulation for today.\"\n\n\"Following that up is going to be damn hard,\" the D.A. said. \"But I will do my damnedest.\"\n\nThe ladies were taken away so that they could powder their noses. I turned to see a very aroused Akhkharu behind me. Leah had witnessed my performance and was chewing her lower lip. I had a feeling she wanted to be entertained and soon. I told her the back of the limo would have to do. I had enough of public displays of affection for the day. She agreed. So after a leisurely hour long drive through the park and other scenic parts of the city I was dropped off at the chapter house. In the back seat a wrecked vampire and a promise to drop by soon. \n\nI washed up and dressed for dinner. After the meal I could inspect my armor and see what had been done to it. I walked down to the dining room and at the foot of the front steps was Gabrielle. She looked tired and in need of some serious attention. I stopped and sat on the stairs looking her in the eye.\n\n\"After dinner how about a nice long walk,\" I said. \"Then I will rub out some of that stress.\"\n\n\"That would be nice but,\" she said. \"I have business I need to...\"\n\n\"Do I have to make that an order,\" I said cutting her off. \"I will if I have to.\"\n\n\"I love you,\" she mouthed too afraid to say it aloud. \"You've been out playing haven't you?\"\n\n\"You're not the only one under stress,\" I said. \"I can't just sit around doing nothing.\"\n\n\"I understand,\" she said and the weight of guilt evaporated. \"I can't be there for you as much as I want.\"\n\nWe went to dinner and I took up my usual spot at the end of the table. The same fourth year sat next to me and seemed primed for conversation. I touched a finger to my lips as the Evening Prayer was recited. We ate in relative silence. The girl did in fact begin quite the philosophical discussion. \n\n\"I saw the footage of you in the fighting ring,\" she said after a while. \"You should be teaching.\"\n\n\"That is one opinion,\" I said.\n\n\"Did your instructor not give you permission, is that it,\" she asked. \"I have heard of such things.\"\n\n\"It is complicated,\" I said.\n\n\"You say that a lot,\" she replied. \"Is everything complicated with you?\"\n\n\"Not quite everything, but yes most things,\" I told her smiling.\n\n\"Can I ask a personal question,\" she asked.\n\n\"Eep, this could enter dangerous ground young lady,\" I said. \"Are you sure?\"\n\n\"Oh yes, most assuredly.\" She giggled.\n\n\"Okay, out with it,\" I said as she leaned close, pretending to reach for the salt and whispered.\n\n\"Which do men prefer more, oral or vaginal sex?\" She asked as her hand settled on my leg.\n\n\"I would have to say the latter,\" I replied. \"But in a pinch the former is quite nice too.\"\n\n\"Do you have a preference,\" she asked as her hand moved up closer to its goal.\n\n\"I do have a preference, but uh I am not sure her Ladyship would appreciate me seducing her acolytes.\"\n\n\"Oh... hmm... I never looked at it like that,\" she said as her fingers traced my erection. \"I haven't taken any vows of celibacy yet so...\" \n\n\"Ah... I understand completely,\" I said as she began to rub me through my jeans. \"It is going to be one of 'those' days.\"\n\n\"What do you mean,\" she said as she rubbed harder now.\n\n\"I was kind of busy while I was out,\" I said and I could see the wheels turning.\n\n\"Oh... OH...\" she said and smiled. \"You are pretty damn rigid about your stance. Maybe we can spar later?\"",
        "Her hand left and I let out a sigh of relief. My life was complicated, real complicated. I think I was going to have to look for accommodations away from the chapter house. I wasn't sure how Gabrielle would take to me fucking her students. Understanding only goes so far and I just didn't want her getting hurt. I finished my meal and thought about as many nerdy nonsexual things that I could. Once my erection had gone away I got up and went outside. I walked around to the back of the estate and sat in the gazebo looking out over one of the gardens. The Japanese rock garden was one of my favorites. It reminded me of good times and tragedy. A litany of names always went through my mind when I came out here. \n\n\"I am so sorry guys,\" I said and then stopped when I heard the soft crunch of gravel as someone crept up behind me.\n\n\"You need to let go of it,\" Gabrielle said. \"You take on too much.\"\n\n\"I am not the only one,\" I said and she shrugged.\n\n\"So do I have a rival under my own roof,\" she asked and I shook my head. \"Are you sure?\"\n\n\"I did not encourage her,\" I told Gabrielle. \"You are more woman than I can handle.\"\n\n\"Did you just call me fat?\" She said and I threw up my hands in surrender. \"Let's take a walk. I have been banished for the next hour from the house.\"\n\n\"That's weird,\" I commented as I got to my feet. \"I tell you this day just gets stranger as it goes.\"\n\nWe didn't hold hands, even though we wanted to. I pondered on whether or not to tell her about my armor until I actually looked at it. I decided to wait. I was still a little sore and we stopped a few times along the way. I could tell there were things on her mind but it was Inquisition business and that had to remain private. I respected her strength and her ability to compartmentalize her responsibilities. I am not sure I could do that. I preferred a simple life. It never ended up that way but I preferred it. I shared with Gabrielle that Feng was backtracking what we believed were the kidnapper's previous victims.\n\n\"He's been at this for twenty years,\" she said and I nodded.\n\n\"If Feng is correct, he has been active for a long time. There is no guarantee she is on the right track but if she is, I don't want to think about it.\"\n\n\"You are worried he will kill Lily.\"\n\n\"Yeah and if that happens my dad will never get over it.\"\n\n\"Why is he doing this,\" Gabrielle asked. \"If we can figure that out we can fashion an attack plan.\"\n\n\"He is going at me through family. It could be Tokyo. It could be the Heart of Ashurbanipal. Hell, it could be the succubus.\"\n\n\"Have you received any hate mail or threats after Tokyo?\"\n\n\"No,\" I said. \"If it were the Heart, I think I would be dead already. Could it be the succubus?\"\n\n\"Okay, for the moment let's say it is. Who would want to avenge a succubus?\" Gabrielle asked.\n\n\"Another demon,\" I said and then the words of the demon at The Cage came back. \"He has a patron.\"\n\n\"What, who has a patron?\"\n\n\"It was something that someone said about my sister's case. They said the kidnapper had a patron. I wonder if this patron pointed him at me.\"\n\n\"Makes sense, a demonic patron is bad news. That means a named and numbered entity.\"\n\n\"You are speaking Greek sweetie. What the hell is a named and numbered entity?\"\n\nShe mentioned scrolls handed down from the time of King Solomon, the demon binder. The scrolls list all the major players and their rank in the infernal host, thus named and numbered. The trick was trying to discover who the demon was pulling the strings. If it was a demon, it could just as easily be an angel. She was brainstorming now and I didn't like where this was leading. Was that the reason for the dream? Was there an oppositional force against the mastermind behind all of this? The pawn rarely sees who is moving the piece. \n\n\"First the cease fire between Inquisition and Akhkharu and now this,\" I said aloud.\n\n\"That can't be a coincidence,\" Gabrielle said. \"Have you ever played Wei Chi? It is an Eastern strategy game.\"\n\n\"I played it while I was in Japan. I wasn't very good.\"\n\n\"We are being played,\" she said as if reading my thoughts. \n\nWe finished our walk and as we neared the front of the chapter house and most of the students and staff were assembled outside. I looked at Gabrielle and she seemed as confused as I was. We stopped at the foot of the steps and the two chefs, now in full Inquisitor gear approached. One was carrying a scroll and the other a small wooden box. Gabrielle stood up to her full height and was ramrod straight.\n\n\"We received an announcement from Rome two days ago. The Inquisition is undergoing a restructuring. A new Grand Inquisitor is, as we speak, being placed in office. Rome has decided that we need to be better structured for future threats. Thus under the order of the Holy Father this chapter house is no longer under the banner of the Ordo Malleus. It will from this moment forward be the first of Ordo Hereticus and fly under the banner of the Ebon Chalice. You are ordered to take up the mantle of Majestrix and focus your attention on cleansing the world of demonic forces. Will you take up this mantle?\"\n\n\"I will,\" Gabrielle said fighting back the tears of joy.\n\nShe was handed the charter scroll and then the box was opened and her old pins were removed and the new added. Those assembled began clapping.\n\n\"Strike the colors,\" the old men shouted and the banners that had been mounted were unfurled and there it was a black chalice on a gray background.\n\n\"Congratulations,\" I told her as I shook her hand.\n\nI moved from her side and let the parade of students and instructors shake her hand on this historic moment. I left her with her peers and returned to my room. I had no place with her now. Her life had just taken a left hand turn. I closed the door to my room behind me and slid down the door. I couldn't breathe as the impact of this new promotion struck me. I had told her everything and now... now it was all changing. I pushed the tears away and got to my feet. Nothing lasts forever and I had to find my sister and Gabrielle had demons to hunt.\n\nI went to my closet and opened it. I took out the duffle bag holding my armor. I set it on the bed and opened it. I took out my armor and stared at it. I hardly recognized it. The dull gun metal gray color was replaced with a translucent crystalline material. I held it up to the light and could see the runic patterns that covered every square inch of the armor. I stripped down and slipped it on. The clasps were gone and a few seconds after putting it on I knew why. The armor closed on its own. It normally took five minutes or so for it to adjust but it fit snugly immediately. I put my clothes back on and pulled the hood up and placed the mask on. \n\nThe HUD, heads up display, was replaced by a seven piece runic pattern in the left lower corner of my vision. I looked at one and it brought up defensive status. It was currently set to passive. I ran through the rest and found everything that was in the old display and a few new selections. They were obviously combat orientated and I left them be. I would have time to test them later.\n\nI removed the mask and tugged the hood back. It slipped neatly next to my neck and folded precisely until needed. I returned mask and gloves to my duffle bag. I sat on the bed for a few minutes and decided it was time. I began emptying the drawers of my clothing and folded them as I placed them in my bag. It took less time that I thought it would. I closed the drawers and the closet and opened the door. I had my duffle bag over my shoulder. I took a step out and there was Gabrielle. Her coloring went pale when she saw me.\n\n\"You are leaving,\" she asked and I nodded.\n\n\"Yeah, you have a brand new chapter house to lead. You are the Majestrix of the Ordo Hereticus. There is no place for me and you know it.\"\n\n\"I... need you,\" she said as tears flooded her eyes and flowed down her cheeks. \"I can't do this without you.\"\n\n\"Gabrielle,\" I said and she did something I knew would have repercussions, she kissed me.\n\n\"I told you they were doing it,\" one of the female students said from the end of the hall. \"Typical... Majestrix and Linguist being an item...\"\n\n\"What,\" I asked and Gabrielle was smiling.\n\n\"Gods you are so thick,\" she said. \"It is my duty to help bring the next generation of Inquisitors into the world.\"\n\n\"No shit,\" I asked and she kissed me again.\n\n\"Our children will be amazing,\" she purred in my ear. \"Acolyte, take the Linguist's bag to my room.\"\n\n\"Yes Majestrix,\" she said all smiles. \n\n\"Is there something I need to know,\" I asked. \"I thought you took a vow of celibacy.\"\n\n\"I did, but that vow is not for life. We are not nuns. Our most profound duty is to the Hegemony. It is a kind of breeding program. We select positive genetic traits for our progeny. It's been going on for centuries now.\"\n\n\"Our children will be amazing,\" I repeated. \"Can you get married?\"\n\n\"No silly, you are a kind of recognized breeding partner,\" she said. \"So you can still feed in peace.\"\n\n\"Ah, so we are like... sacred fuck buddies?\"\n\nShe shook her head and grabbed me by the wrist. I allowed her to drag me before the assembled members of the Ebon Chalice Chapter House. A cheer came up and there were many smiles in the crowd below. I did notice one fourth year who looked disappointed. Then I was being drug off to consummate the new charter. I slipped into the bathroom and slipped out of my clothes and armor. I placed the armor in the bathroom closet for now. Once we were done I would show Gabrielle and tell her what I knew so far. I paused, looked in the mirror and shifted into the short haired albino, we were celebrating after all. I wrapped a towel around my torso and walked into the bedroom.\n\n\"Congratulations,\" I said and her eyes went wide with surprise. \"I can change...\"\n\n\"Shut up and come here,\" she purred.\n\n\"Be gentle with me,\" I said as I closed the distance between us.\n\nHer kiss was intense. It was the hungry embrace of a woman who was drowning in responsibility and in desperate need of physical release. She tore the towel from me and kissed her way down to my breasts. She flickered her tongue over my sensitive nipples and I gasped. I was still unacquainted with the sensations of the female form. She caught one nipple between her teeth and lightly bit it. Her eyes watched my every reaction. Gabrielle's attention was all consuming. She alternated between soft and rough perfectly. I was shaking by the time we hit the mattress. I reciprocated as the sexual tension ratcheted up a few notches. But the entire time Gabrielle was definitely in charge and loving it. \n\n\"Hold on it's about to get real intense,\" she growled as her head went between my legs.\n\n\"Oh shit,\" I cried out as my ass left the sheets.\n\nHer tongue was doing things and her fingers were like and my mind went blank. I managed to scream into a pillow when I came. I lifted the pillow from my face and there was a hungry eyed Inquisitor sitting next to me. \n\n\"Ready for round two,\" she asked raising an eyebrow.\n\n\"Are you ready,\" I asked and she nodded.\n\n\"You know what I want,\" Gabrielle purred.\n\n\"Oh I know,\" I said as I partially shifted and pale skinned erection rose from between my legs.\n\n\"I need this so damn bad,\" she moaned as I pushed her onto her back. \n\n\"Beg for it,\" I growled as I teased her pussy with the tip of my cock.\n\n\"Please Louis, fuck me,\" she whimpered. \"Slide that big fat dick into my soaked pussy!\"\n\nHow can I say no to that? She was making those faces, those cute needy expressions of make me scream and I did. I buried my cock inside of her in one smooth motion. Gabrielle arched her back and ground against me. I began moving nice and slow savoring the feel of her wrapped around me. As I thrust inside of her my breasts swayed with the same rhythm as my hips. I was still getting used to that. I rolled Gabrielle onto her side and lifted her top leg so that her foot was pointing skyward. I thrust harder now penetrating deeper than ever. She grabbed the pillow and held onto it just in case. I watched as my snow white flesh slid in and out of her. It was in such a contrast to Gabrielle's tanned skin. \n\n\"I am getting close,\" she said between moans. \n\nI thrust harder now and she cried out each time I was buried inside of her. The cries got louder and more intense as she got closer to climaxing. Here comes the pillow I thought as she clenched it to her mouth and she screamed into it as she came. I stopped and ground a little as she recovered. She let go of the pillow as I rolled her onto her belly. With some careful maneuvering I managed to stand next to the bed with Gabrielle kneeling on the edge without having pulled out. The swat on her ass cheek was loud in that quiet room. She looked over her shoulder and smiled at me. I dug my nails into her cheeks and began thrusting. I went slowly at first but soon I was hammering her as fast as I could. \n\nShe buried her face in the sheets and stuck her ass as high in the air as she could. I slowed down but thrust harder now and her body began to shake as her second orgasm creeped up on her. I didn't want to feed from her if she wanted to have a child. So I decided on another strategy. I eased out of her and she let out a cry of dismay. The spell hit her and I eased back inside of her. The cry of surprise was delightful to hear as I moved slowly so she could get used to her increased sensitivity.\n\n\"Oh that is just... mean... amazing,\" Gabrielle moaned. \"You are going to break me aren't you?\"\n\n\"That was the plan,\" I said as I thrust harder. \"Getting close... \"\n\n\"Inside please... \"She pleaded as she cut me off.\n\nI laughed as I thrust faster now. I saw her bite down on the pillow as she fought off her climax. She wanted us to come at the same time. My cock swelled stretching her pussy and seconds later I was shooting inside of her. Her body shook violently as she came. I held her so that she didn't topple over. I eased out of her slowly and reverted back to myself. Gabrielle spun around and licked me clean just before she tugged me back onto the bed. That was the first of many nights we spent together in that bed. \n\nWe made love twice more before I left her sleeping to wander outside. I couldn't sleep and something was bothering me. I took a quick shower, dried off and put on my new armor. That should have been my first clue something was wrong. I slipped on sweat pants, a hoodie and tennis shoes. I slipped silently outside via the rear of the house. I sat staring at the moonlit Japanese garden. When everything here was resolved I would return to Tokyo and make amends. I knew that Gabrielle was right and I was taking on more than I could handle now but I couldn't help it. \n\nSuddenly the air grew still and all sounds slowly ceased. There were no insects or anything now, something was wrong terribly wrong. I looked around and extended my vision to the Astral and that's when I saw it. The aura was blazing bright and incandescent as it approached me. I turned my vision back to the material world just as she stepped out from the tree line. I knew her instantly and wondered what she was doing out at this hour.\n\n\"You are out late,\" I said and she smiled.\n\n\"I couldn't sleep,\" she said as she walked towards me. \"It looks like you couldn't either.\"\n\n\"Nope, got too much on my mind,\" I said leading the conversation.\n\n\"You are worried about your sister,\" she said.\n\n\"Yeah, she is an innocent in all of this,\" I said and watched her face change.\n\n\"There are no innocents,\" she snarled her face a mask of unbridled rage.\n\n\"You are going to hurt her,\" I said as the girl's eyes began to glow.\n\n\"No, that is what my servant is for,\" the entity said through the girl.\n\n\"I am not talking about my sister. I am worried about the puppet you are using. If you keep this up she will burn out. She IS an innocent.\"\n\n\"She is willing to die for me,\" the thing said. \"She is dedicated to the light.\"\n\n\"You make me sick,\" I said turning on it. \"You are so easy to kill for what, vengeance?\"\n\n\"You killed her,\" the girl roared her eyes blazing with scintillating rays of holy fire.\n\n\"She fed me her fucking blood,\" I shot back and the girl stepped back as if slapped. \"Oh... you didn't know about that. How do you think I ended up like this? Does your creator know you are waging this little war down here?\"\n\nShe stood there silent and the radiance dimmed greatly. I let my words sink in as I brought my armor's capabilities online. I accessed the HUD via my neural link. I switched on both the defensive and offensive systems and waited to see what they would do. The girl looked at me and that rage was back.\n\n\"I will order him to kill your sister. Then I will hunt down your parents and burn them to ash. I will come for you only after you are alone.\"\n\n\"Whatever,\" I said and smiled. \"I think you underestimate people.\"\n\n\"How can you smile? Your sister is going to die tonight!\"\n\n\"Nope,\" I said and the rage intensified. \"You don't understand people at all.\"\n\n\"You feel confident a serial killer will not kill? That makes no sense.\"\n\n\"It makes perfect sense. You want to order him to finish his work prematurely. He won't do it. I have seen all of his work and he is meticulous to a fault.\"\n\n\"He will obey me! He will kill your filthy whore of a sister tonight!\" \n\n\"So much anger,\" I said desperately fighting the urge to throttle the girl. \"Why are you defending the first? She betrayed you and your creator. Why so much rage at me? I think you are taking your anger for her out on me.\"\n\nThe strike was a blur and thank god I had switched on the armor. The defensive screen was composed of hexagonal bricks of hard light. It withstood the first impact but not what followed. The entity shattered the wall with its second strike and sent me flying. I called on the armor and tucked into a ball before reentry. The ancient oak lay broken and I was sprawled amidst the ruins of the limbs and trunk. Goddamn that hurt! I managed to stand and the girl closed the distance again. I couldn't hurt her but I sure as hell could bitch slap her carry-on luggage. I began the spell and held onto the last syllable until she was in point blank range. Her hand came up and I dropped the hammer.\n\n\"TSUK!\" I shouted and the blast of astral energy lashed out at the thing inside of her.\n\nThe girl grabbed her head and screamed as the entity was forced out of her. It wasn't permanent but it sure would sting. I switched my vision to the astral and wished I hadn't. The winged shaped could only be one thing, an angel. In its left fist a shape like a flaming sword and man it looked pissed. Our little song and dance hadn't gone unnoticed. Most of the lights in the chapter house were on and people were filing out now.\n\n'This isn't over mortal! I will have my vengeance!' \n\nThe thing soared heavenward at ballistic speeds and vanished from my sight. I dropped to my knees and hurled. I was hurt and bad but I would survive. The girl was crumpled on the ground but was otherwise unhurt. The two chefs arrived first and they were scanning the area for demonic influences.\n\n\"I sense a huge astral signature,\" the Irishman said passing his hand over the area.\n\n\"I agree brother, a very powerful entity was here,\" the Scotsman agreed.\n\n\"The girl was possessed,\" I said. \"You should look after her.\"\n\n\"I think you are our immediate concern Linguist,\" Peter said. \"Did you do that?\" He asked pointing at the tree.\n\n\"Indirectly,\" I said. \"She struck me and I kind of hit the tree.\"\n\n\"He must have some Highland blood in his veins,\" the Scotsman said. \n\n\"LOUIS,\" the scream came from Gabrielle even as I was helped back to the chapter house.\n\n\"I am alive,\" I said thinking 'okay' was too strong a word. \n\n\"Who is responsible for this,\" she growled and the pair of Celts told her all about the powerful astral entity.",
        "I managed to slip into the bathroom and remove my armor before I was examined. The last thing I needed was trying to explain that right now. I placed a spell of cloaking on it before crawling out of the rest room. I was lifted up and placed on a bed in the infirmary. The resident quack was one Eliza Darkthorn, she had a PhD in medicine and a minor in crazy. She was the touchy feely sort that weirded me out for reasons I am not sure I could explain.\n\n\"Evening Eliza,\" I said and they stripped me.\n\n\"Linguist,\" she replied as they rolled me onto my belly. \"Sweet Jesus, will you look at that!\"\n\n\"Your bedside manner is as soothing as ever,\" I told her as she poked and prodded.\n\n\"You say you struck the old oak and it fell over,\" she said grimacing.\n\n\"No, the damn tree was snapped off at the base,\" Patrick said. \"Must be rotten to the core, I am sure her Ladyship will want it hauled away.\"\n\nThey ran a whole series of tests to see if anything was broken, burst and so on. I was reluctant letting them take a blood sample but I was outvoted. The tree wasn't rotted. The blood sample showed nothing. The scans and x-rays revealed a shit ton of bruising but no broken bones. I was given a towel, pain meds and sent off to bed. I managed to retrieve my armor on my way back to my room. I plopped the armor on the bed and Gabrielle looked at it and then at me.\n\n\"You were wearing this when you got hit, right?\" She asked and I nodded. \"Oh thank God!\" \n\n\"Hey, I am going to be alright,\" I told her as she launched at me and clung tightly.\n\n\"What the hell happened,\" she said her face buried in my chest.\n\nI told her I was unable to sleep and went to the Japanese garden. I shared the entire conversation with the thing inside her student. \n\n\"And then she bitch slapped me into that lovely old oak tree, I don't know why.\"\n\n\"What else,\" she said. \"I can see it in your eyes Louis. What did you see?\"\n\n\"I cast a very dangerous spell. It is not recommended unless the situation is dire. I felt that it was a great time to try it out. It's classified as a major disjunction. It drove the entity out of her and I saw it unveiled in the astral.\"\n\n\"Louis, what was it?\" Gabrielle asked looking up at me.\n\n\"It wasn't a demon Gabs,\" I said and left it at that.\n\n\"Tell me about the armor, what happened to it?\"\n\nI explained how it all went back to the night I dreamed and woke up bruised. The dream remained elusive but someone had hacked my neural implant and left a ton of data. Part of that data had reformatted my armor on every level. Instead of getting upset all she did was hug me tighter. She asked me about the data and I told her there was an executable file to be used when I was ready.\n\n\"Are you ready now?\" She asked.\n\n\"I am afraid,\" I said.\n\n\"Me too... but you can't live in fear,\" she said and that is why I loved her.\n\n\"Okay, here we go,\" I said as I stepped back and put on the armor. \n\nI got the gloves and mask from the bathroom and put them on as well. I activated the HUD and found the hunter's rune flashing in the lower right hand corner of my vision. I took a deep breath and activated it. I had imagined all the things I might experience and none of them happened. To be more precise nothing happened at all. I blinked and took the mask off.\n\n\"Anything,\" I asked and Gabrielle shook her head.\n\n\"Feng, did it work,\" I asked and she manifested in her crimson Talon form projected from a small disc located on my chest.\n\n\"The executable functioned properly and the data files are no longer located in your ring. I am unable to trace function or the current whereabouts of those files. I will continue tracking and alert you if and when there is a success.\"\n\n\"Alright, keep me in the loop,\" I said and Feng faded from view.\n\n\"So that's what she looks like now huh.\" Gabrielle said winking.\n\n\"That was her idea actually. But that is so weird; there were hundreds of terabytes of data. What kind of program needs that amount of information?\"\n\n\"I don't know. I guess we will just have to wait and see. Let's go back to bed.\"\n\n\"Best suggestion I've heard all night,\" I told her.\n\nInterlude 2: Irresistible vs. Immovable\n\nLily felt the change in the atmosphere. At first she believed Louis had somehow found her but the chill in the air made her doubt that very much. It was almost time for the light show as she began calling it. The timed disruptions that involved blaring sounds and blazing lights had become a regular thing for her. She almost began to look forward to it. It was a sign that he was out there watching her. Her frustrated captor was her lifeline with the outside world. She hated being here but as long as she denied him her life expectancy was assured for another day. She shivered as the atmosphere continued to worsen. Lily looked up at one of the security cameras and frowned. He was watching her and she feared the balance of power was about to shift.\n\n\"Kill her!\"\n\n\"Why,\" the man asked. \"My canvas is still blank. I will not damage it now!\"\n\n\"Have you lost your mind,\" the stranger roared. \"I am protecting you! You will do as I say! Kill her now or...\"\n\n\"Or nothing,\" the man snarled. \"I am an artist! She will be my masterpiece and no one not you, not her and not my father... You will not ruin her!\"\n\nLily felt the electricity in the air. It smelled like a storm was about to break. Was there a thunderstorm outside? The room shook and a cloud of dust drifted down. Had there been an explosion? Lily looked around and waited to see what would follow. She moved and placed her back in a corner. \n\n\"Oh Louis where are you,\" she whispered as she placed her arms over her head.\n\nThe security room was in ruins and the man looked at all his years of work now a smoldering ruin. The anger that had been boiling in him turned white hot and he turned on the stranger. \n\n\"OUT... get out of my studio! You have ruined everything!\"\n\n\"Kill her or I will kill you,\" the stranger roared. \"He can't be right about you! You are just a crazed killer... an animal...\"\n\n\"Wait, Louis told you I wouldn't kill his sister? He understands me?\"\n\n\"He called you meticulous. He said I didn't understand humans at all. I do understand insects like you! You will follow my orders. You will kill that whore you have below! Do you understand me... when I snap you jump. Now be a good little insect and do your fucking job!\"\n\n\"He does understand me...\" the man said ignoring the roaring stranger. \"Who would've thought it? I have a fan. I won't kill her. So you'd better be prepared to kill me and her. If not take the necklace and get off my property.\"\n\n\"If I leave he will find you. He will take her from you. He will take your masterpiece before you make a single stroke. Do you want that?\"\n\n\"I know just what to do...\" the man said giggling at first and then growing quiet and serious. \"I knew this day would come and have prepared. It was inevitable. Leave me... get out!\"\n\nThe Bunker:\n\nI stared up the ceiling for what was left of the night. Gabrielle's ass was pressed against my hip sleeping content that I had survived my encounter with the vengeful Watcher. We both agreed not to use the A-word. I could close my eyes and replay the image of its astral self and that blazing sword. I was so fucked! But in the end I didn't matter, my family and those I loved were far more important than I was. I would eagerly sacrifice myself if I knew it would end this vendetta. I was tired and fighting sleep with everything I had. Doc had given me a pain med and it was making me sleepy.\n\nMy eyes closed and as quick as that I was asleep. I was standing outside a small house. I looked around and had no idea where I was. The backyard was neatly trimmed and covered in a light dusting of snow. The French doors opened and light spilled out from the back room of the house. A very feminine silhouette beckoned me inside.\n\n\"You must be freezing,\" she said. \"Have a cup of coffee to warm up.\"\n\n\"Mara,\" I said as I took up her invitation. \"What is going on?\"\n\n\"Beats the hell out of me, last think I knew I was falling asleep on the couch,\" she said as she poured a cup from an antique silver coffee pot. \"So do you want to know about your sperm donor father now?\"\n\n\"Ever since you showed up in my life you've had two things on your mind. My dad and sleeping with me so sure unburden yourself.\"\n\n\"I fibbed,\" she said. \"I met your biological father twice. Once, the night he seduced your mother. The second time was twenty years later.\"\n\n\"You watched your sister having sex, was that a common thing between you two.\"\n\n\"Yeah, we would pick up guys and take turns watching. But on that night things were different. You were conceived. She was so damn lonely and I feel responsible. I picked the guy out at the bar.\"\n\n\"So you two went to the bar and you picked out my sperm donor. Well ain't that sweet, you two must be very close.\"\n\n\"We were until she found out that she was pregnant. She knew who the father was. She blamed me for it. That's why I haven't been in your life. She hated me for what happened. She loves you, never doubt that but she feels guilty for what we did.\"\n\n\"What is so damn important that you needed to tell me about my mom's one night of indiscretion?\" I asked.\n\n\"The second time I met your donor, it was nearly twenty years later and I know this is going to sound crazy but he hadn't aged a day. For a second there I thought I was seeing things and maybe he was the son of that man. But when I talked to him it was the same guy. He denied he had slept with your mom but I know it was him.\"\n\n\"So did you get this name at least?\" I asked and she nodded.\n\n\"His name is Jon,\" she said proudly and I gestured with my hand and she shrugged.\n\n\"Just Jon,\" I said and she frowned. \"Anything else I should know?\"\n\n\"He has a house on the Point,\" she said. \"He inherited it but he doesn't live there anymore. His job took him to England.\"\n\n\"What kind of job?\"\n\n\"He works for that computer company. You know the one they advertise with the built in personalities.\"\n\n\"Numenor... he works for Numenor Technology?\" I asked feeling a chill.\n\n\"Yeah, he is a manager for their London Branch.\"\n\n\"That is something to work off of,\" I said. \n\nI stood there noticing for the first time the change in her appearance. She had been wearing jeans and a bright yellow top but now she was wearing an apron and a smile. I looked her over and she turned around showing me her bare backside. \n\n\"Um, Mara, why are you wearing just an apron.\" \n\n\"Oh you noticed,\" she said with a wicked grin. \"I thought since this is a dream you'd do me like you've been doing your mom.\"\n\n\"Mom told you about her dreams and she told you it was me.\" I said and she smiled. \"How did she know it was me?\"\n\n\"The scar on your knee,\" Mara said. \"You were always wearing a mask but the man had a scar where you had your knee surgery. She assumed it was you, well that and the size and shape of your thingy.\"\n\n\"How the holy hell would mom know what my cock looked like?\" I asked stunned.\n\n\"She caught you in the shower a couple of times. We not only like to be watched but we also enjoy peeking. So are you gonna fuck me or not?\"\n\nI shrugged and closed the distance. My clothes evaporated in dream-like fashion. I knelt behind her and grabbed her ass cheeks and pulled them apart. She was absolutely soaked and I tasted her pussy. Mara ground her sex against my face and began moaning. When my serpentine tongue invaded her cunt she about lost her fucking mind. I held onto her ass cheeks to keep her from falling over. \n\nWhen the tip of my tongue hit her core Mara climaxed and her pussy gripped my tongue. I swelled the thickness of my tongue and began undulating it inside of her. She was cursing nonstop now and calling me every name in the book. Her second climax was far stronger than the first. She was more than ready for my cock now. I withdrew tongue from her hot wet depths and stood up. I grabbed her by the hair and spun her around.\n\n\"It's your turn slut,\" I growled. \"You know what to do.\" \n\nShe dropped down to her knees and began licking my erection. Mara was meticulous and drove me crazy by taking her sweet time before she even reached the tip. I was shaking by the time her tongue lapped away at the precum oozing from the head of my cock. She opened her mouth and it engulfed me. I hissed as her tongue swirled and her cheeks sunk in as she applied suction. \n\n\"Goddamn girl,\" I moaned. \"You know how to suck a dick.\"\n\nI tightened my grip on her hair and began moving my hips. We got a nice rhythm going and I eased a little more of my cock down her throat as we continued. I stopped when half of my length was between her lips. Since she had taken it so easily I decided that was a perfect amount for her. I fucked her throat now and she worked her tongue until I was panting and shaking.\n\n\"I am close,\" I warned her. \"Are you going to swallow?\"\n\n\"MMMMMMHHHHMMMMMMM,\" she moaned around my cock.\n\nI thrust faster now and cried out as my cum splashed against the back of her throat. I let go and Aunt Mara got to her feet and tore off the apron and pressed her tits against my chest. She was all purrs and touching as she asked me if we were going to continue. I watched her reaction when I hesitated.\n\n\"Uh... I don't know Aunt Mara,\" I said and looked in her eyes. \"If I fuck you... I don't know if I could live with that.\"\n\n\"I'll let you do whatever you want,\" she replied. \"You can do that special trick of yours. The one your mom told me about. I'll beg you to DP me nephew of mine. You want to feel my pussy and ass wrapped around you, don't you?\"\n\n\"I don't know...\" I said hiding my smile.\n\n\"Please DP me Louis,\" she begged. \"I need to feel both my holes filled by you. Please!\"\n\n\"Well... alright,\" I said. \"Grab your ankles and let me see what you got.\"\n\nMara let go, spun around and bent over grabbing her ankles for me. Her cunt was drenched. I performed the dark miracle and moved behind her. I took some of her pussy juices and used it on her asshole and my cock. I lined my cocks up and slowly pushed. I watched as Mara's ass opened for me bit by bit. I was patient and eventually the head slipped inside of her. She let out a sigh of relief and when she was ready I filled both her holes to capacity.\n\n\"Well, how do you like it,\" I asked as I snared her with the dark magic. \"Tell me you cock hungry little whore, do you want me to move now?\"\n\n\"YES,\" she cried out. \"I have never had a cock in my ass before! I am glad you're the first Louis.\"\n\nI began moving and my vocal aunt was once more all curses urging me on to fuck her harder and faster. She took her first ass pounding like a pro. I dug my nails into her ass flesh and hammered her hard and fast. The drum roll of orgasms fed me the energy I needed. My body had been badly bruised during my conflict with the Watcher and it required mending. I was careful how much I took but she was generous with her body and the pleasure she gave me. My last orgasm was building and I wanted to try something new before I blew my load. \n\n\"I want to try something new,\" I said and she agreed without hesitation.\n\nI stopped my hips and focused my full attention on the new form my shift would take. Mara let out a squeal of pleasant surprise. Once the change was complete I began moving again. This new shape required a little more attention on my part for it to work the way I wanted. I thrust slowly and Mara howled louder than ever. She was grunting and her eighth orgasm was building fast. If I timed it right we would cum at the same time. \n\n\"Close...\" I said through gritted teeth. \"Where... where do you want me to shoot it?\"\n\n\"Inside of me,\" she begged. \"Please fill up my holes with your seed.\"\n\nI cried out and thrust my hips forward. I buried myself in both her holes as we climaxed together. I wrapped my arms around her waist and pulled her close. She stood up and kissed my cheek.\n\n\"Can I see it,\" she purred. \"I felt it but I want to see it, please.\"\n\n\"Since you asked so nice,\" I said as I withdrew the hold the dark magic had on her.\n\nI pulled out slowly and Mara turned and dropped down to her knees again. She took both my cocks in hand and began licking them clean. The upper one was first before I got rid of it. The lower one she double stroked and licked completely clean. Her fingers on the two heads made me shiver. I had split the front half of my lower cock into two slithering members. The combined thickness was a little more than it had been normally. I was able to cause the ends to move independently with some concentration. The effect was apparent and most gratifying. Boy is Gabrielle in for a surprise!\n\nMara's dream began to fade and I slipped free of it. But I didn't wake up. I was drawn into another one immediately. The three moons hung in the sky and I was next to the violet lake. I recognized the man sitting across from me. He was wearing thin translucent robes that reminded me of my new armor.\n\n\"It is good that you have fed,\" he said. \"I feared you would not survive your encounter.\"\n\n\"If my armor hadn't been improved I don't think I would have,\" I said. \"Thank you.\"\n\n\"Do not thank me,\" he said coolly. \"Your chances of a successful second encounter are unlikely. I want to help you while I can.\"\n\n\"I will take any help you can offer,\" I said and the man shook his head.\n\n\"My aid comes in the form of an introduction,\" he said. \"I will leave you to it.\"\n\nThe man stood up and walked into the woods disappearing from sight. I got to my feet and looked around. I heightened all of my senses and looked around. I couldn't see anything but I could hear soft measured breaths. There was a long deep inhalation and I dove away from the sound. The fallen log I had been sitting on splintered when something impacted it.\n\n\"I am impressed,\" a female voice whispered. \"Be at ease I mean you no harm. I am called Iyaden.\"\n\n\"Tell that to the log,\" I said and she appeared out of thin air.\n\nShe was tall, with a slim muscular build and wearing a full body suit decorated with runes. She holstered the wicked looking pistol she had in her left hand. She removed her helmet and I swallowed hard. The woman was gorgeous and had the same Fae-like facial structure as the man. Her expression was intensely amused as she looked me over. I looked down and sighed. I was still naked. I conjured sweat pants and a hoodie. She raised an eyebrow and giggled.\n\n\"I am going to instruct you in the finer arts of stealth and sorcery. While your former instructor taught you how to move in the astral quietly I will show you how to disappear altogether in any environment. Do you have any questions?\"\n\n\"Is that your natural hair color,\" I asked and she laughed. \"Why are you helping me?\"\n\n\"You have not been told,\" she said and I shook my head. \"We owe your father a debt. I cannot guarantee your survival but I will make it much harder for your foe.\"\n\n\"There are no guarantees in life,\" I said. \"Let's get started.\"\n\n\"I will teach you the three S's, stealth, silence and structure.\"\n\nI learned how my body could move in either male or female form. I pushed my body to its limits and was surprised at how far it could go. I learned how the body makes noise and how environment affected it. I learned the limitations of human and machine perceptions. It would be possible to walk openly and not be observed. I learned to use my armor to mask my astral signature. The last lesson was the most difficult. I relearned how to cast every spell in my repertoire. Instead of using the words and mental focus I was now using the alien runes to conjure and cast. I began by physically tracing the runes in the air to invoke but later I could simply visualize the runes to silent cast any spell I had. \n\n\"Why are you deflecting my aid,\" she asked.\n\n\"I am embarrassed,\" I told her.\n\n\"Why... just cast the damn spell,\" she growled.",
        "\"Okay, it's on you,\" I said.\n\nI invoked the runes and the spell manifested. Three seconds later she was in the air with her ass above her head and the tentacles holding her immobile. She looked at me and laughed. \n\n\"Is this some kind of combat spell or perhaps something sensual,\" she purred.\n\n\"It is for pleasing a female partner,\" I told her.\n\n\"You may continue,\" she moaned. \"I should know the full implications of your spells.\"\n\n\"As you wish,\" I said and invoked the second half of the spell.\n\nThe tentacles removed key parts of her body suit and went to work. Her cries echoed over the woods and I wondered if someone would come and investigate. I gave her something to keep her mouth busy. I should have cancelled the spell but I didn't. I invoked the last part and linked my senses to it. Damn her pussy was tight! She was using her internal muscles in ways that were amazing. I fucked her senseless and left her as I had so many before a quivering mass on the forest floor.\n\n\"That was amazing,\" Iyaden whimpered. \"I am conquered.\"\n\n\"I want your friendship not your worship,\" I told her.\n\n\"You have earned it this day,\" she said looking at me with a newly kindled respect. \"Now show me the rest.\"\n\n\"You are a sucker for punishment,\" I said and she smiled.\n\nI finished my last spell and Iyaden lay on her back panting and covered in a mix of sweat and patches of sperm. She rubbed my cum into her skin and shivered. She caught her breath and sat up slowly. Her skin had that freshly fucked glow to it. We slipped into the lake to wash off our love play. Her long mane of glass-like hair clung to her back as she slipped her arms around my neck and kissed me. She pressed her body against mine and our kiss deepened. \n\n\"I have taught you all I can for now,\" she said after breaking our embrace. \"I cannot directly intercede in this affair of yours. It is not that I don't want to, but... I am hindered. I am sorry.\"\n\n\"No... no, thank you for everything,\" I told her. \"I will put everything you have shown me to good use.\"\n\n\"One more time,\" Iyaden asked as she snuggled close.\n\nI awoke to a fingertip tapping on my forehead. It was a decidedly unpleasant sensation so I opened my eyes. I looked up and a naked Gabrielle as straddling me and looking down. I smiled up at her. She grinned and then frowned.\n\n\"Morning Sweetie,\" I said. \"What's wrong?\"\n\n\"Oh not much... but uh Louis... sweetie... Why is there a naked girl next to you in our bed?!\"\n\n\"Huh,\" I said and turned my head to the right and then to the left. \"Oh, that's just Iyaden. How the hell did she get here?\"\n\n\"That is what I want to know,\" Gabrielle said grabbing my nose between thumb and forefinger. \"What the hell is going on Louis? I swear to God Almighty if you use the C word I will break your fucking nose, capiche?!\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "magic",
        "anal",
        "double penetration",
        "aunt",
        "non humans"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/spell-crook-and-handle-pt-05"
}