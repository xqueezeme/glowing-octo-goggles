{
    "title": "Blissfully Hooked Ch. 10",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nKyle Parker vs. Aaron Hunter\n\nDedicated to Nikki(My wettest fan.), Baikalisan & Syl(love you to bits sis)\n\nHooked for Life!\n\n***\n\nEpilogue\n\n***\n\n\"Happy birthday, Lazy Bones.\" Kyle chuckled as he watched Aaron stretch on the bed without opening his eyes.\n\n\"Ow come on, Kyle.\" Aaron moaned, drawing a pillow to cover his head. \"It's not even morning yet.\" Aaron's voice sounded muffled under the pillow.\n\nKyle burst into laughter as he pulled the pillow off Aaron's head. \"Says who?\" Kyle couldn't stop laughing at the expression on Aaron's sleepy face. \"I just got back from my jog. The sun is already up.\"\n\n\"Ten more minutes please.\" Aaron whimpered, still refusing to open his eyes.\n\n\"But I'm lonely.\" Kyle couldn't suppress the whining in his voice.\n\nAaron gave a deep sigh. \"Come here.\" Aaron said and pulled Kyle on top of him. Then Aaron coiled his arms around Kyle's neck and hugged him to him tightly. When he released his hold on Kyle, Aaron bumped his forehead against Kyle's and murmured, \"Let's sleep for ten more minutes.\"\n\nKyle chuckled. \"Go right ahead, baby.\" Kyle said, interspacing each word with a kiss. \"I'll go take a shower. And next time, when I tell you to come to bed, do it.\" \n\nKyle pulled up the covers and tucked Aaron in again, and then went to take a shower. He knew Aaron was tired. Kyle had gone to bed early without Aaron because Aaron was spending time with the three very interesting fun-loving brothers who had become pals with them. Kyle had been with them too, enjoying the Ghanaian hiplife songs till he'd started feeling sleepy. Aaron, however, had wanted to stay out and listen to more historical stories so Kyle had gone to bed alone. He'd heard Aaron come to bed at dawn. His boyfriend was something else, Kyle shook his head in amusement as he stood beneath the shower. Kyle had gone for a forty minute jog along the beautiful beach before coming back to wake Aaron up. He'd wanted them to take a shower together, go for breakfast, and then come back to relax in bed with his surprise. Well, thanks to his lazy boyfriend, Kyle had to change the plan.\n\nTheir beach resort was simply beautiful. The atmosphere was so serene and refreshing Kyle couldn't have enough. Their chalet was the biggest and most luxurious on the resort and they had all the privacy they needed. The food was to die for. Kyle particularly loved the jollof rice with fried ripe plantain. It was simply heaven. They had been in Ghana for the past four days and so far it had been fun, fun and more fun. The canopy walk had been so scary, exhilarating and exciting Kyle and Aaron had fucked each other's brains out immediately they'd gotten to the privacy of their chalet. With all that adrenalin pumping, it had felt like they were high on drugs. They hadn't even gotten to the bed. They'd fucked right there against the door, standing up. The fact that they were both still fully clothed except for what needed to get out of the way made it all the hotter. That had been hands down one of the best fucks of Kyle's life. Just thinking about it was making Kyle hard. He quickly rinsed himself and got out of the shower before he got tempted to jack off. He wanted to save himself for what was coming.\n\nKyle pulled on cargo shorts, a sexy black polo shirt and a baseball cap, completing his casual look with flip flops. Kyle decided to allow Aaron to sleep in for a while without any disturbances. So he quietly stepped out of the chalet to make some important business calls and to change his laid down plans. Kyle also wanted to call and check up on Ken. His brother was on holidays in Britain with Stephen, spending time with Stephen's folks. Ken was cancer-free after completing his treatment. They'd had a small party for a few close friends, to celebrate his good health. When Ken stood up to give a speech during the party, he'd entreated everyone to say a big thank you to Aaron for saving his stubborn arse. Ken had explained to the guests that had it not been for Aaron, his life would have still been in an uncertain balance. \n\n\"Thanks Aaron...for being the smart devil that you are and saving my arse.\" Ken had toasted softly with a hitch in his throat.\n\nKen's speech had been so touching some of the guests had wiped tears from their eyes. And Aaron...let's just say most of the tears that had sprung to guests' eyes had been a result of Aaron's genuinely floored reaction. Kyle had remembered then, that he'd once prayed in Ken's house, asking for the help of an angel to convince his stubborn brother to undergo treatment. Well, Aaron must have been that angel sent from up above to grant him his wish. Aaron sure did grant more than his wish though, Kyle couldn't help thinking. He'd turned and looked at his gorgeous boyfriend with so much awe and love, people who'd noticed his reaction hadn't been surprised when he'd walked to where Aaron stood and openly kissed him with so much passion. And amidst the cheers that had gone up, Kyle had whispered his thanks into a beaming Aaron's ear. \n\nKyle chuckled as he waited for Ken to pick up his call. He sure did have an angel. And who in their right minds let go of an angel? Definitely not Kyle Dylan Parker. Aaron was stuck with him for life!\n\n***\n\nAaron woke up about two hours later to an empty room. God he was famished, he thought as he stretched. He got out of bed and went to where his backpack stood and drew out a nicely wrapped box and placed it on the bedside table. Then he headed directly to the bathroom to take a shower. When he later heard the bathroom door open, he turned around to see Kyle leaning against the door with his hands stuck in his pocket and his ankles crossed. The smile on his face caused a delicious tingling inside Aaron's body. Oh fuck, the man was too sexy for his own good, Aaron thought with a groan.\n\n\"Wanna join me?\" Aaron asked with a grin, which turned into a groan of protest when Kyle shook his head, no.\n\n\"I'm hungry.\" Kyle laughed.\n\n\"What has that got to do with being in the shower with me?\" Aaron pouted making Kyle laugh even harder.\n\n\"Dude, besides the fact that I've already taken a shower...\"\n\n\"When has that ever stopped you?\" Aaron retorted.\n\n\"...if I should get in there, we're not going to get out anytime soon and you know it.\" Kyle concluded as though Aaron hadn't spoken.\n\nKyle walked to where the towels were stacked and took one for Aaron. But instead of handing it over, he held it open so that Aaron could step into his arms. Then Kyle proceeded to wipe Aaron dry amidst hot kisses.\n\n\"Fuck, I love kissing you.\" Aaron moaned against Kyle's lips.\n\n\"Feeling is mutual baby.\" Kyle husked. \"What I wouldn't give to have you eat breakfast in your birthday suit.\" He murmured.\n\n\"I could. If we request for room service...\" Aaron whispered, capturing Kyle's lips in another searing kiss.\n\nThe minty taste of Aaron's mouth, his scent which was lemony because of the soap he'd used, and his warmth was driving Kyle crazy. Kyle tore his mouth from Aaron's and looked down at his flushed skin, his glazed eyes, swollen lips... Aaron looked as turned on as Kyle felt. They needed to get out of the chalet, Kyle thought desperately. He could only think of one thing...he wanted to thrust into Aaron's body and never stop. Bury his cock in his slick, warm channel and pound into it so deeply they wouldn't know where he ended and Aaron begun. Aaron must have been of the same mind because his hands were already reaching for the fly of Kyle's cargo shorts. \n\n\"Baby, we need to get out of here.\" Kyle panted, taking hold of Aaron's wrists. \"Much as I would want nothing more than to be buried deep inside you right now, I have something else in mind. Come on.\" Kyle said, turning around to pull a grumbling Aaron into the room. \n\n\"Kyle, come on don't be like that.\" Aaron groaned even as Kyle pulled him into the room. \"I ache with wanting you inside me.\" He let go of Kyle's hand and wrapped his arms around Kyle's waist, looking up seductively at the man whose sexiness had gotten him so hard. \"Just a quickie, come on.\" Aaron whimpered.\n\n\"Stop tempting me, Hunter.\" Kyle groaned, bending to press a quick kiss to Aaron's pouted inviting lips. \"Now, get dressed.\" Kyle laughed softly and turned Aaron around to face the walk-in closet, slapping him lightly on the butt.\n\n\"Killjoy.\" Aaron muttered, drawing more laughter from Kyle.\n\n\"Love you too, baby.\" Kyle said, adjusting himself in his shorts. \"Fuck.\" He muttered to himself. \"Oh, your mum called.\"\n\n\"May I have the phone please?\" Aaron demanded with a sigh. \"Knowing her, she's probably staring at her phone, waiting for it to ring.\"\n\nKyle gave his phone to Aaron with a chuckle and went to change his flip flops for sandals, leaving Aaron to talk to his mother and dressed up. Kyle was shaking with excitement. He couldn't wait to see the look on Aaron's face when he finally hit play on their video. When he sat on the bed to buckle his sandals, he saw a parcelled rectangular box with his name on it.\n\n\"The fuck...\" Kyle's eyes widened in surprise. He reached for the parcel as he turned to look at Aaron who was busily dressing up and talking to Peggy Hunter.\n\nWith shaky fingers, Kyle tore off the wrapper and opened the box inside. Then he carefully took out the beautiful glass plaque that was nestled in there. It was exquisite. Taking a deep shaky breath, Kyle started reading the inscription on it:\n\n'To Kyle, My very reason for living. \n\nHaving you in my life is a beautiful feeling...\n\nYou make me feel so special with all that you say and all that you do...\n\nYou're one in a million, my most special Kyle. Your smile makes all the problems in this world insignificant. And my heart really sings when I'm wrapped in your arms.\n\nIt's all the big and little things you do that make me feel completely loved by you. \n\nWhen you put your arms around me, I know I'll never be alone.\n\nWhen you kiss me, I feel kissed forever.\n\nI'm happy you chose me from all the rest, and I'm proud because I know I got the best. \n\nWe may fight, and we may cry, but my love for you will never die.\n\nI love you. \n\nYour Ron.'\n\nAfter reading it twice, Kyle finally looked up and saw Aaron leaning against the wall, smiling uncertainly at him. Aaron looked like he didn't know whether Kyle would like it or not.\n\n\"I mean every word.\" Aaron said softly. \"Do you like it?\"\n\nKyle continued looking at Aaron without answering his question. Then slowly, he fixed the stand behind the plaque and displayed it on the bedside table. Then for about two minutes, Kyle just sat on the bed admiring the plaque. He didn't know Aaron had moved from where he stood till he felt the bed dip beside him as Aaron sat down. When he felt Aaron take his hand, Kyle turned his head to look at the love of his life and gasped in surprise when Aaron reached up to wipe tears from his cheeks.\n\n\"Oh shit.\" Kyle murmured. He honestly hadn't felt the tears on his cheeks. \"I love it, baby. Thank you.\" Kyle said hoarsely. The emotions rolling through him at that very moment was so overwhelming, he didn't know what else to say.\n\n\"I'm glad you love it.\" Aaron grinned.\n\n\"You have no idea just how much it means to me.\" Kyle whispered.\n\n\"Oh but I think I do.\" Aaron countered. \"I see tears for fuck's sake. The last time I checked the cry baby in this relationship was me.\"\n\nKyle laughed and leaned forward to press a kiss to Aaron's lips. \"There's just one problem though.\"\n\n\"What is it?\" Aaron asked between dropping tiny kisses along Kyle's neck.\n\n\"I need more than one of this. This is going to be on my desk in the office. I need one for my study at home too because I spend as much time in there. Can you get me another?\"\n\nAaron burst into laughter. \"Sure baby. I'll arrange for a second one. Is that all?\"\n\n\"Yep. That's all.\" Kyle said, leaning down to lightly bite Aaron's earlobe, making Aaron squeal. \"Let's go get something to eat.\"\n\nAnd throughout their meal, Kyle simply couldn't keep his eyes off Aaron. At a point, Aaron laughed and asked, \"What?\"\n\n\"You know it's your birthday, right?\" Kyle murmured.\n\n\"Uh-huh. So?\"\n\n\"You're the one who should be getting the presents, not me.\"\n\n\"I've already received mine, remember?\" Aaron's eyes lit up. \"This trip. Oh and the surprise that's to come. What I gave you is not a present. It's just how I feel. I should tell you every day. So that's for days that I'm not able to tell you.\"\n\n\"You mean days that my sexy banker will be too busy to tell me he loves me?\" Kyle asked with a raised brow.\n\n\"Asshole.\" Aaron guffawed. \"I'll never be too busy to tell you I love you, Kyle. That's a promise.\"\n\n\"I'll hold you to it.\" Kyle winked sexily at Aaron.\n\nAaron shook his head slowly with a besotted look on his face, remembering all that had gone on in their lives after weeks of therapy with Dr. Murray. All Aaron could say was that, he was very much content with his life because he had Kyle in it. He just couldn't believe how good Kyle had been to him. Chris had also surprised both him and Kyle by giving him a superbly attractive offer to work in one of his banks. For a moment, Aaron had thought Chris was merely joking with him. He'd been over the moon when he realized it was no joke. Chris had made Aaron start work immediately but not before Kyle had made Chris promise to give Aaron a week off for his birthday.\n\n\"Who am I to say no?\" Chris had growled with a mock scowl. \n\nAaron smiled, remembering that scowl on Chris' face. Chris was such a sweetheart. The bank had given Aaron options of loans he was entitled to, so he'd quickly taken out a loan, even before officially starting work, and purchased a car for his mother. \n\n\"That's one of the perks of having the owner of a bank as family.\" Chris had flashed a grin and winked at Aaron.\n\nPeggy Hunter had been so overwhelmed she'd remained speechless for the whole day. Later, she'd tell anyone who would listen that she was the luckiest mother in the world. \n\nAfter finally getting tired of Aaron's whining...that Tristan's choices of cars were too expensive, Kyle had overruled all objections and purchased the latest Mercedes-Benz CLS, which actually ranked nine, out of twelve Super Luxury Cars, for Aaron.\n\n\"Oh my God, Kyle.\" Aaron had whispered when the car was delivered to him one fine afternoon. He was to start work the following day. \"No, no, no...\"\n\nBut when he'd gotten behind the steering wheel and seen the extravagantly crafted interior, felt its powerful engine and experienced its fourteen-speaker Harman Kardon stereo system, Aaron had instantly fallen in love with the car. That first drive had been a totally exhilarating experience. After getting back into his driveway from that test drive, Aaron had called Kyle, who was then in a meeting, and simply breathed into the phone...\n\n\"I love you so fucking much it hurts.\"\n\n\"You like it.\" Kyle had murmured with a smile on his face, gesturing to the people in the meeting to go right ahead with their discussion.\n\n\"I LOVE IT.\" Aaron's voice was barely above a whisper but there was so much heat in his words.\n\n\"Awesome. I'm glad you loved my choice.\" Kyle chuckled. \"Now if you'll excuse...\"\n\n\"No wait, wait...\" Aaron said quickly, stopping Kyle from getting off the phone.\n\n\"Uh-huh?\" Kyle couldn't stop the smile from spreading across his face. Just hearing Aaron's voice could do that to him...make him behave like a smitten fool.\n\n\"I...I'm sitting in the car. And I'm hard.\" Aaron breathed huskily.\n\n\"Oh fuck!\" Kyle groaned when he felt his own cock stiffen inside his pants at Aaron's words. \"Damnit Aaron, I'm in a meeting.\"\n\n\"How about lunch? I want to take you out to lunch...in my new car.\"\n\n\"Come now.\" Kyle growled softly. \"Go directly to my private parking area and wait for me in the car. I'll leave instructions.\"\n\n\"I'm on my way.\"\n\n\"Good. Oh and Aaron?\"\n\n\"Yes Kyle?\"\n\n\"It will save both of us a whole lot of trouble if you went commando. Wait for me in the back seat.\" Then Kyle hung up.\n\nAnd when Kyle opened the door to the back seat of Aaron's car about thirty minutes later, it was to the glorious sight of Aaron stroking his profusely leaking erection, with his already lubed up hole ready to swallow Kyle's already hard cock.\n\n\"Oh fuck, baby.\" Kyle breathed.\n\nAnd those were the last coherent words either of them had spoken for a while. If only that car could talk!\n\nUnbeknownst to Aaron, his eyes had glazed over and his face looked flashed. Kyle didn't miss it.\n\n\"What are you thinking about?\" Kyle smirked. From the look on Aaron's face, it was obvious that whatever it was he was thinking about, was very naughty.\n\n\"What?\" Aaron whispered, his cheeks reddening. He was so hard he was grateful they didn't have to leave the table till they were ready. Those memories...damn!\n\n\"You heard me.\" Kyle chuckled. \"Just now. What...\"\n\n\"About how much I love you.\" Aaron murmured quickly. \n\n\"Oh honey, I know you love me.\" Kyle purred. \"But right now, you're blushing so hard, I'm...\"\n\n\"I was thinking about the car, okay?\" Aaron groaned. \"In your office parking...\"\n\n\"I get it.\" Kyle grinned. \"You have such a filthy mind, baby.\" \n\n\"Well, yours is even filthier, my love. But seriously, there's no way I can look at that car without remembering...\" Aaron's voice trailed off.\n\n\"Me too.\" Kyle shook his head. \"All I need to do is hear the sound of that car, then BAM, Mr. Bonner. If even the mere sound of a car can do that to me, then you can imagine what you do to me.\" Kyle said, looking intently at Aaron.\n\nAaron squirmed in his seat, trying to get as comfortable as he could with the bulge in his pants. It didn't help when he looked up and saw Kyle licking his teaspoon with a mischievous smoldering look in his eyes. \"Kyle please don't. I'm already horny as hell...\" Aaron groaned.\n\n\"God, you so need to get laid, dude.\" Kyle purred. \n\n\"Fuck you.\" Aaron laughed and stood up. \"Shall we? I want you in bed.\"\n\n\"Let's take a stroll along the beach first, baby. The weather is perfect.\" \n\n\"Kyle...\"\n\n\"Come on, that was too much food. Let's walk it off.\" \n\nKyle knew they had to stay outdoors and cool off before they went back to their chalet because with the way they were both feeling right then, they would probably be on each other before they got inside their chalet. Besides, he had a little surprise for Aaron before they went back to their chalet. So they strolled along the beach, enjoyed the serene atmosphere. They even joined some kids to play soccer, before they made their way back to the restaurant area of the resort. \n\n\"Why are we going back to the restaurant?\" Aaron asked just as Kyle pushed the glass door to the restaurant open. \"Shouldn't we be heading for the chalet so we can wash off this sand and sweat...?\" \n\n\"Happy birthday!\" Shouted about twenty people inside the restaurant. They were made up of the resort's management, workers and some few friends that Aaron and Kyle had made during their stay. The few guests who were having lunch joined the workers to clap excitedly.\"\n\nAaron laughed, looking genuinely surprised. His eyes fell on a big lovely cake with lighted up candles...which Aaron was sure were twenty-two.\n\n\"You.\" Aaron wagged his finger at a laughing Kyle. \"Thank you everyone.\" He said loudly to the still clapping audience.\n\nAaron blew out his candles after making a wish. Then the cake and assorted drinks were shared amongst all of them including the guests who were having their lunch. A local Rastafarian band started playing lovely tunes to everyone's enjoyment. Aaron wasn't surprised when they signalled Kyle to join them. His boyfriend had obviously planned everything, Aaron sighed with amusement. And as Aaron already expected, Kyle's sexy voice captured everyone in the restaurant. There was one particular song...Sweet Sensation by UB40, which was originally sang by The Melodians...that Kyle sang so beautifully and sensually, Aaron had to physically stop himself from going to give his man a sensual kiss right there in front of everyone. He stopped himself by accepting to dance with a really pretty girl, who'd actually insisted on dancing with the birthday boy anyway. Aaron knew he was never going to forget that birthday ever. It was simple but fun. ",
        "When Aaron and Kyle got back to their room, they found champagne on ice and a bowl of fresh strawberries waiting for them. Aaron headed directly for the strawberries whilst Kyle dashed into the bathroom to take a quick shower. By the time Aaron finished eating some of the delicious strawberries and entered the bathroom, Kyle was already done and wiping himself.\n\n\"It's all yours.\" Kyle grinned as he went back into the room.\n\nAaron merely shook his head in amusement and hopped into the shower. Kyle was obviously up to something but Aaron was determined not to give him the satisfaction of asking him what it was. By the time Aaron got back into the room, Kyle was sitting on the couch in sexy black boxer briefs, with a glass of champagne in his hand, watching CNN on the forty-two inch LED on the wall. The blinds had been drawn, leaving the room slightly dark and with a touch of intimacy. Aaron didn't miss the tube of lube lying beside the ice bucket on the center table. Opting to remain in his birthday suit, Aaron went to sit beside Kyle on the couch, smirking when he felt Kyle's heated gaze on him. With a naughty grin, Aaron accepted a glass of champagne from Kyle.\n\n\"You're driving me crazy, Hunter.\" Kyle murmured.\n\n\"You've been driving me crazy all day.\" Aaron retorted, making Kyle smile.\n\n\"Happy birthday, love.\" Kyle toasted. \"May there be many, many more happy birthdays.\"\n\n\"Thanks darling.\" Aaron grinned and clicked his glass against Kyle's and promptly drained his glass. Then he held out his glass for Kyle to pour him more champagne.\n\n\"Wanna get wasted huh?\" Kyle chuckled, filling Aaron's glass. \"How about a movie?\" Kyle murmured, filling his own glass.\n\n\"Which one?\" Aaron asked, lifting Kyle's left leg onto the couch, thereby opening Kyle's legs wide. Then he moved back till he sat comfortably between Kyle's thighs and leaned his back against Kyle's fabulous abs, sighing with contentment. \"Okay, which one?\"\n\nKyle coiled his left arm around Aaron and run his fingers lightly over his nipples in a slow caress, smiling when he heard Aaron's breath hitched in his throat. \"Well, there's one I've already slotted in but I don't even know the title.\" Kyle lied through his teeth. \"Let's check it out.\" Kyle said clicking on play.\n\nAaron leaned his head back on Kyle's shoulder. \"It had better be good. Wouldn't wanna watch anything boring on my birthday you know...\" Aaron said and then promptly groaned when he saw the title... 'Blissfully Hooked' written boldly across the screen. \"Ow come on, is it a chick flick?\"\n\nKyle laughed. \"Don't worry. We can always stop it if it's boring.\"\n\n\"We sure...\" Aaron trailed off when he saw an image of Kyle's handsome face fill the screen. \"What...\" He breathed but Kyle remained silent.\n\nNext came Aaron, with his hot body in just a pair of jeans which was sexily riding low on his hips, showing his happy trail. Then a picture of the two of them, topless, standing in front of a bed...Aaron remembered that particular scene as if it had taken place just the day before. They were gazing into each other's eyes, and Aaron remembered exactly what had been going through his mind at that very moment. Fuck! The words which appeared on top of the picture drew an involuntary moan from Aaron. He didn't even know he'd made that lustful sound.\n\n'They were hooked from the very beginning...but they didn't even know it.'\n\nThen the sexy voice of John Legend started belting out the lyrics of 'All of Me', filling the already sexually charged room with so much passion and emotion. \n\n\"Oh God...\" Aaron breathed, his eyes riveted on the screen.\n\nOne thing both men knew for a fact was that what they watched, was NOT porn. It was the hottest, sexiest and most heart-tugging love video that either man had had the privilege of ever watching. There were no fake moans or crass porn talk...just genuine uncontrollably blissful loving. It was beautiful.\n\n\"Have you already...\"Aaron started in a whisper.\n\n\"Never.\" Kyle answered before Aaron could finish his question, his voice hoarse with arousal. \"This is my first time too.\"\n\nAs both men silently watched the video, all that could be heard...besides the low background music in the video and their erotic low moans and grunts, was their harsh breathing. Arousal was an understatement to how they felt. Aaron was strung so tight from the myriad of emotions coursing through him that as he watched himself come for the second time on screen, his cock just erupted... And neither man had touched that spurting cock even once. Moaning uncontrollably, his body writhed against Kyle's in pleasure as ropes of cum shot into the air and onto his stomach, surprising both of them.\n\n\"Oh fuck.\" Kyle breathed, staring at Aaron's spasming cock even as he instinctively tightened his arms around Aaron, holding him tightly till his shivers passed.\n\n\"Shit.\" Aaron moaned shakily. \"I'm sorry. I couldn't help...\" \n\n\"What's with you and apologies whenever you let go unexpectedly?\" Kyle growled. \"You apologized when you creamed your pants in that restaurant too. Don't you know it's the highest compliment you can ever pay me?\" Kyle murmured into Aaron's hair as he reached down to ran two fingers through the cum pooled on Aaron's stomach and brought it to his own lips.\n\n\"Oh fuck, Kyle.\" Aaron moaned brokenly as a hard spasm rocked his body at the erotic sight of Kyle licking his cum. It was so fucking sensual.\n\nKyle turned Aaron's face to his and kissed him soundly, sharing Aaron's essence with him. His hand stroked Aaron's still throbbing cock slowly throughout the kiss, making Aaron shiver and moan with pleasure. \n\n\"Damn, you taste good.\" Kyle murmured against Aaron's lips when they eventually came up for air, his hand not leaving Aaron's cock for even a second. \"Now back to business.\" Kyle whispered, turning to watch the screen.\n\nThey watched as Kyle crooned softly to Aaron on screen as he cried. By then, Kyle had already sacked Max Viggo and his guys from the room, Aaron recalled. He wished he could have seen the look on Max's face when Kyle ordered them out. Not that It would have appeared in the video anyway. Aaron could bet his last cent that it hadn't. When Kyle started kissing Aaron whilst fucking deeply into him on screen, it was so erotic Kyle moaned helplessly and thrust against Aaron's bare arse, his boxers wet with precum. When he felt Aaron wiggle against him, he almost lost it. \n\n\"Baby, stop that.\" Kyle groaned, his breath coming out harshly. He was virtually at the edge of his control. And Aaron moving that sexy arse on his cock was not going to help matters. \"Here, take this.\" Kyle handed Aaron a glass of champagne, which Aaron promptly drained. \"Now let's watch. Because the probability of getting distracted and never ever finishing watching this video is about ninety-nine percent.\" Kyle said, reaching back for Aaron's cock.\n\n\"Then you have to stop that.\" Aaron looked down pointedly at Kyle's hand on his cock till Kyle removed his hand. Then Aaron stretched his empty glass towards Kyle for a refill, making Kyle chuckle.\n\nThey both drank their champagne whilst watching their meltdown on the screen. Songs like Aerosmith's 'I Don't Wanna Miss A Thing', UB40's 'Many Rivers To Cross' and 'Can't Help Falling in Love' were some of the tracks on the video. The songs only ended up getting both men even more aroused to the extent that even before the video ended, Aaron and Kyle were already passionately kissing each other on the couch. When Aaron reached out to pull off Kyle's boxers, he raised his arse to enable Aaron pull it off and free his leaking mammoth erection. Aaron gripped Kyle's cock firmly and watched as it throbbed in his hand. He never ceased to be amazed at Kyle's size. Just watching it made his mouth water. Aaron moaned softly as he watched a thick drop of precum slide down the length to pool at the top of his fist. Aaron felt as if he would die if he didn't taste Kyle. Licking suddenly dry lips, Aaron bent to slowly lick at Kyle's wet slit with the tip of his tongue, before opening wide to take Kyle into his mouth.\n\n\"Fuck.\" Kyle growled as his back arched in pleasure. \"Christ, I love your mouth.\" He breathed as his eyelids grew heavy with pleasure. \n\nKyle couldn't take his eyes off Aaron as he pleasured him with that magic mouth. Neither could he mask the lust and tenderness in his own eyes as he looked down into Aaron's. Aaron melted at that look. It felt damned good to know just how crazy Kyle was about him. Even in his state of lust, his love for Aaron shone through. That perfect blend of love and desire... Aaron's mouth curved in a wicked smile as he moved on to Kyle's balls next, knowing how his mouth on those balls always drove Kyle out of his mind. Then he gave them such a sensual tongue bath, Kyle couldn't hold in his cries of pleasure. This time when Aaron flicked his wet tongue against Kyle's twitching hole, Kyle welcomed the pleasure and rather spread his legs wider.\n\n\"Oh baby, that feels so good.\" Kyle moaned, his eyes fluttering shut in bliss. \"So fucking good.\"\n\nAaron tongue-fucked Kyle like a man possessed. When he felt Kyle had had enough, he reached for the lube on the table and lubed up his fingers. He slipped in a finger and smiled with triumph when Kyle moaned loudly. But when Aaron added a second finger and rubbed on that gland, Kyle went crazy. His body writhed as he rode Aaron's plunging fingers. He whimpered brokenly with pleasure as Aaron's fingers pushed at the swollen hot spot inside him, sensation shooting through him like lightning. \n\n\"Christ.\" Kyle cried out as he shamelessly fucked himself on Aaron's fingers, his eyes still tightly shut. \"Baby, I need more.\" He gasped, reaching for his cock and groaning when Aaron swatted his hand away.\n\n\"That's mine.\" Aaron growled. Then without missing a beat, Aaron added a third finger as he poured more lube into his other hand to slick up his own hardened cock. When he pulled his fingers out of Kyle, Kyle groaned in protest but that groan turned into a gasp of surprise when he felt Aaron's cock breach his thoroughly lubed up channel. Kyle trembled when he felt the warm, hard head of Aaron's slippery prick press very slowly, into him. \n\n\"Oh God...\" Kyle breathed as his eyes opened. The last time he'd offered his arse, Aaron hadn't been okay enough to take it. The Aaron on top of him that very moment, inside him, fucking deeply into him was in total control and was as sexy as fuck. Kyle was simply mesmerized. Instinct took over and Kyle's hips begun moving of their own volition, as he focused on Aaron and nothing else. There was no pain, just unbelievable fullness. Till Aaron's cock brushed that bundle of nerves embedded inside Kyle...then there was so much unadulterated pleasure, Kyle couldn't stop the lusty moan that tore out of his throat. \"Aaron.\" Kyle whispered, his glazed eyes gazing up at Aaron with a look of reverence. \n\nAaron pressed deep and held there a moment, leaning down to spread kisses over Kyle's face. \"Fuck, you're tight.\" Aaron groaned. \"Are you okay?\" He whispered.\n\nKyle didn't utter a word. He didn't think he actually had the ability to speak. He was that overwhelmed. He simply leaned forward and took Aaron's lips in a kiss so passionate and sweet it was almost surreal. And that was all the answer Aaron needed. With a final lick at Kyle's parted lips, Aaron started to move, keeping hold of Kyle' hips as he thrust. It started out slow and tentative, more about sensation than anything else, but soon began to build. Before long, Aaron was hitting that pleasure button relentlessly as he fucked Kyle soundly, plunging into him over and over. Aaron's thrusts were so gut-wrenchingly delicious it made Kyle crazed with desire. Aaron had complete control of Kyle's body and he couldn't do anything but lie there and take it...take Aaron's lust and hunger. It was totally maddening.\n\nKyle's head dropped back onto the armrest as he gave himself over to just feeling, loving the feel of Aaron on him, in him, sending him to cloud nine. He welcomed it. \"Ahh..\" He moaned loudly when Aaron started rotating his hips, grinding that cock even harder into Kyle's swollen gland. \"Right there, baby.\" Kyle whimpered brokenly, his eyes rolling into his head in uncontrollable ecstasy. \"Right there. Please.\"\n\nOne moment, Kyle was begging, the next, he was babbling incoherently. His voice was almost hoarse from crying out so much. He thrust up fervently to meet Aaron's thrusts as he felt a warning tingle spread through his balls and travel up his spine. Kyle's world grew hazy as his body started to spasm, his ass clamping down on Aaron's cock.\n\n\"Aaron...Aaron...Ron... baby!\" Kyle kept chanting Aaron's name helplessly. He was panting hard, his breath coming out so harshly it almost felt like he was sobbing. \"Coming,\" he whimpered. \"God...so good. Can't hold...\" His neck arched and he gasped Aaron's name.\n\n\"Let go.\" Aaron whispered, watching as Kyle shook violently, raw moans spilling from him. Then Aaron saw a look of such helpless vulnerability on Kyle's face he just wanted to hold him to his chest and never let go. \"I love you.\" He whispered and leaned down to capture Kyle's lips in a kiss that was soft, coaxing, wet and so passionate. \n\nAnd the unmistakable love in Aaron's kiss was all it took for Kyle to lose it. All the intense sensations, the relinquishing of control, the love and care he felt radiating from Aaron, and the pleasure of those exquisite lips of Aaron, coalesced into one breath-taking, exploding fireball of ecstasy. Moaning ecstatically into their kiss, Kyle shot between them, coming with such force it felt like his cock was exploding. Aaron never let go of those sweet lips even for a second throughout Kyle's release. Kyle rode his orgasm as Aaron repeatedly drove into him hard and powerfully, relentlessly grinding into that pleasure button as Kyle continued to shoot, keeping the orgasm rolling on endlessly. Kyle's ecstatic cries were swallowed by Aaron, who continued his erotic assault on Kyle till Kyle was left boneless and gasping for breath. Aaron stopped his thrusts, released Kyle's lips and raised his head to look at Kyle's face. God, he was gorgeous. \n\nKyle had no idea how long it was before his senses came back to him. He opened his eyes to dreamy grey eyes filled with so much love, looking at him. Kyle licked his lips and watched as Aaron's eyes dropped to the movement of his tongue. He felt the cock embedded inside him jerk in reaction.\n\n\"Damn.\" Aaron whispered as he looked at the most beautiful man he'd ever seen. And he was all his. What melted Aaron even more was the look in Kyle's eyes...a touch of awe, ecstasy, love, vulnerability and possessiveness...it shook Aaron to the very core. \"Do you have any idea how much I love you?\" Aaron asked with so much feeling. \"Do you have any idea what you do to me, Kyle?\" Aaron actually looked shaken. \"I don't know how to describe it. You destroy me Kyle. I...\" But then Aaron gave a strangled gasp and paused.\n\nThen Kyle felt it. Felt Aaron's cock vibrating inside him. His eyes widened as he stared into Aaron's. \"Fuck...\" Kyle finally found his voice and whispered.\n\n\"Feel that?\" Aaron whispered.\n\nKyle was floored at the transformation that took place on Aaron's gorgeous face. He felt Aaron's body tighten. Then there was a look of pure rapture on his face. He wasn't even thrusting into Kyle, for fuck's sake...he was still. Aaron was actually struggling to keep his eyes open. His breath started coming out harshly from lips that were swollen and sexily parted. Kyle was enthralled by the helplessness on Aaron's face. He'd never seen Aaron stripped bare as he was at that very moment. It was mesmerizing.\n\n\"Aaron...\" Kyle breathed, his eyes locked on Aaron's. He couldn't have looked away from those captivating ecstasy-glazed eyes even if someone had chosen that moment to budge into their room. Kyle's pulse quickened in response to the change in Aaron. He was so hard one would have thought he was yet to come instead of the fact that he'd actually spent his load mere seconds earlier.\n\n\"I love you.\" Aaron gasped and then started coming, shooting hotly into Kyle. His pleasured groan tore out from his throat irrepressibly as he flooded Kyle with his very essence. \"Ah...God.\"\n\nAnd right there, Kyle watched Aaron totally lose himself. Aaron never looked away or closed his eyes. He was an open book...there was nothing between them. And damn, did Aaron flood Kyle with his seed. He couldn't seem to stop coming. In the end, his eyes fluttered shut on their own accord. The pleasure Aaron felt was too much it was euphoric. It lingered on the fringe of his consciousness, tantalizing him, totally taking over his senses. With a cry, Aaron leaned down and buried his face in the crook of Kyle's neck. Kyle wrapped his arms tightly around Aaron's trembling body, holding him close till he calmed down.\n\n\"See what you do to me, Kyle?\" Aaron breathed into Kyle's ear and then started to trace his hot tongue on the shell of Kyle's ear, his breath gushing out in hard pants. \"I'm totally yours.\"\n\nKyle shuddered as he tightened his hold on Aaron. He was so hard he couldn't help thrusting against Aaron's stomach. \n\nAaron wasn't surprised when he felt Kyle's hardness against him. He knew he had to pull out of Kyle otherwise Kyle would be very sore. With a groan, he leaned up and slowly pulled his softening cock out of Kyle. He quickly reached for Kyle's boxer briefs and wiped Kyle clean. Then he dropped the boxers and went right back to his earlier position...with his face buried against Kyle's neck.\n\n\"You okay, angel?\" Kyle murmured, wrapping his arms around Aaron. When he felt Aaron nod against his neck, Kyle smiled. \"Look at me.\" Kyle ordered softly.\n\nReluctantly, Aaron brought his face out of its hiding place and looked down into Kyle's gorgeous, satisfied face. Aaron felt such pride that he'd put that look there. \"Did I hurt you?\" He asked softly.\n\nKyle shook his head slowly. Yes, his arse throbbed...a relentless ache that pulsed all the way up his spine but it was totally worth it. \"I can still feel you inside me.\" He rasped. \"That was fucking incredible. And the way you came like that...totally hot.\" Kyle looked amazed and Aaron revelled in the praise. \n\nAaron grinned and reached between them to stroke Kyle's hardened cock. \"I want this.\" He whispered and drew his swollen bottom lip into his mouth and sexily worried that luscious flesh with his teeth. \n\nKyle moaned with lust when he looked up from the hand stoking his cock and met Aaron's eyes staring down at him, his teeth biting at his lower lip. \"Aaron.\" Kyle whispered, and then almost died when Aaron gave him a slow sexy wink. That was so fucking hot. \"Oh you're gonna get it.\" Kyle breathed. \n\nAaron reached for the lube and poured a generous amount onto that huge cock in his hand. Then slowly, he stroked it. Kyle watched from beneath his lashes as Aaron stroked him. If he had his own way, he would be buried inside Aaron twenty-four seven. He simply couldn't get enough of the man. Siting up, he gave Aaron a lingering kiss and swung his legs off the couch. Then picking the lube off the table, Kyle stood up, wincing slightly at the slight twinge that flashed within his channel. He reached for Aaron's hand and pulled him up to follow him to the back of the couch. Then Kyle bent Aaron over the couch so that Aaron's stomach was folded over the headrest of the couch. Kyle slowly caressed Aaron creamy butt, and then leaned down to scatter tiny kisses all over his back. As he kissed Aaron, he worked his lubed up fingers inside his warm tight channel, opening him up nicely.\n\n\"I'm going to show you just how much you drive me out of my fucking mind, Hunter.\" Kyle growled. \"Gonna fuck you good, baby. Make you come with me all the way inside your tight hole.\" Kyle murmured in between dropping kisses on Aaron's neck. ",
        "\"Oh fuck.\" Aaron gasped as he felt his cock jerk and his precum gush out. He never knew he could get so aroused from dirty talk. He felt a rush spread through him at Kyle's words, his voice, his touch...everything about the man turned his insides to mush. \n\n\"Do it, please.\" Aaron begged. \"Fuck me.\" He turned his head and gave Kyle a smoldering look, moaning at the sight of his love, standing behind him like a warrior. Aaron felt the most amazing high. \"Show me.\" Aaron purred, with so much lust in his eyes.\n\nKyle rubbed the head of his slick cock against Aaron's twitching hole. \"Feel how hard I am for you? Are you ready for me?\"\n\n\"Always,\" Aaron moaned, pushing back against Kyle, wanting that hard cock deep inside him.\n\nWith a groan, Kyle entered Aaron with one long, slow thrust, burying himself in the soft, tight, heat.\n\n\"Oh yes,\" Aaron gave a strangled groan as he felt Kyle's cock stretching him, plunging deep. He cried out breathlessly as he tightened around Kyle. \"Feels so good.\" \n\n\"No, Aaron no...\" Kyle could feel his balls start to climb their way into his belly. \"Oh baby don't clench on me. Just...God, just stay there for a minute, love.\" Kyle ground out, the muscles in his jaw clenching. If Aaron tightened any further on him, Kyle knew he would lose it. \"Oh fuck, you're too tight.\"\n\n\"No. You're too big, dude.\" Aaron retorted, hips automatically rocking as he tried to get that hard flesh embedded inside him to move. He knew the pleasure he would derive from that and he just wasn't ready to wait. \"I need you to move, Kyle.\" Aaron groaned. \"Please.\"\n\n\"Jesus, Aaron hold the fuck still.\" Kyle growled. \"I'm gonna pop if you keep that up.\"\n\n\"I don't care, Kyle.\" Aaron growled right back. \"Just fuck me, please? I need you so bad.\"\n\nWith an agonized groan, Kyle started to move, slowly at first, then a little faster, a little deeper. \"Fuck, you feel so damn amazing, baby.\" Kyle growled as he threw his head back in blissful abandon, his breathing quick and rough. \"You're squeezing me like a fist.\"\n\nAaron pushed back, hunger and need spiralling in him, his own cock throbbing. \"Oh fuck,\" Aaron moaned as a shudder ran through him. \"I want it hard and fast, baby.\" He growled. They'd already done slow. Now he wanted fast and hard. \"Give it to me, Kyle.\"\n\nAt Aaron's words, Kyle's control flew out the window. He totally lost what little control he had left. He withdrew till he was virtually out and then rammed home.\n\nAaron's back arched as a scream tore from him throat. His cock leaked profusely against the couch as Kyle's iron-hard length plunged in and out of him. Kyle's hands gripped Aaron's hips, almost bruising in their strength as he fucked him so hard and fast Aaron could have sworn he could feel Kyle's cock inside his stomach. He grunted and gasped for air as Kyle set up a brutal rhythm, riding him hard. It was so good. Oh God, it was so good. Aaron groaned with need as he lunged back into each stroke, driving Kyle harder and deeper into him with each thrust.\n\n\"Damn, Aaron...\" Kyle groaned and reached down to raise one of Aaron's legs, opening Aaron even move for his erotic assault. \n\n\"Kyle...\" Aaron breathed as that position caused his prostate to take a direct hit. And so it remained till he was sobbing with pleasure. He was dying. Kyle was thick and hard and so, so deep. Aaron felt his body tighten, felt fire erupt in his spine, his balls... \"Kyle...so good.\" He just knew he was going to lose it. Then Aaron wanted to hold it...drag it out...savour the magic feeling of being on that precipice. \"Please, stop,\" he gasped. \"Oh fuck, don't stop. Never stop. Never.\" He shuddered violently as he started gyrating wantonly against Kyle. \"Oh God, you have to stop.\" Aaron kept babbling as he thrust back hard against Kyle. The intensity of what he was feeling was too much. His entire body shook uncontrollably. \"Damn.\"\n\nKyle kept fucking into Aaron deep. He'd pull out completely, and then slam back in, nailing Aaron's gland over and over. Fast and hard, he gave Aaron what he asked for, listening to Aaron broken moans as he plunged in and out of him.\n\n\"Is this how you wanted it, baby? You feel so damn good.\" Kyle groaned, folding himself over Aaron and plastering their bodies together. He coiled an arm beneath Aaron's neck and latched onto his ear lobe. The wonderful pleasure wreaking havoc in Kyle's body was totally blowing his mind. He was like a man possessed, wild, drunk on ecstasy. Kyle probed his tongue into Aaron's ear, fucking it rhythmically to mimic his unrelenting thrusts into Aaron. \"Damn, I love fucking you.\" He said hoarsely into Aaron's ear. \n\nWith a sob Aaron turned his head to seek Kyle's mouth with his, fusing his mouth to Kyle's for a voracious, deep kiss. Aaron took total control of the kiss, thrusting his tongue into Kyle's mouth wildly and almost desperately. Erotic sounds of Kyle's heavy grunts and Aaron's muffled moans filled the room. Then Kyle started to suck on Aaron's tongue, knowing how that always blew Aaron's mind... Aaron froze and tore his mouth away from Kyle's.\n\n\"God...Kyle...I'm...\" Aaron was writhing, begging with his body as his hips rocked relentlessly against Kyle, his orgasm building like white heat. He felt his cock swell, knew he was going to shoot his load. He gasped shakily as he felt his climax travel down his spine, felt his balls tighten up, felt his body tense up in anticipation of the explosion that was almost upon him... \"Fucking hell.\" Aaron's voice came out in a shocked whimper when he felt Kyle squeezed just under the head of his cock with an expertly applied pressure, stalling his climax. Then as if that wasn't enough, Kyle pulled out of him. Aaron almost went berserk. \"Why the fuck did you do that?\" He cried out in frustration.\n\nWith a growl that startled an already confused Aaron, Kyle picked him up fireman style and headed for the bed. He threw Aaron onto the bed when he got to it and crawled over him. \n\n\"I wanted to see your face.\" Kyle said softly, brushing Aaron's sweat-damp hair from his forehead. Then as he bent to kiss away the tears of frustration on Aaron cheeks, he slammed right back into him.\n\nThen Kyle proceeded to show Aaron just how much Aaron had him by the balls. Aaron wanted him to give it to him hard and fast so Kyle was sure as hell going to give that to him. He could never turn down something Aaron needed. What his baby wanted, his baby got. Simple! \n\nAaron had to bite his lips till he tasted blood to stop himself from screaming. It would have been embarrassing for the door of their chalet to be knocked on by management of the beach resort. \n\n'We heard screams coming from in here....' \n\n'Oh it was just my boyfriend...fucking my brains out.'\n\nNo, Aaron couldn't risk that. He'd screamed enough already. He would wait till they were back on Kyle's private jet, revisiting the Mile High Club. Aaron knew he could scream all he wanted just as he'd done on the flight to Accra. His screams, he hoped, had gotten drowned in the sound of the engine. Well, if the pilot and his crew had heard his screams, too bad.\n\nA whimper escaped Aaron when Kyle lifted his arms over his head and captured both of his wrists in his large hand, restraining him. Kyle pinned Aaron's wrists to the mattress by a firm grip, leaving Aaron completely at his mercy. Then Kyle began to gyrate slowly, maddeningly against Aaron, enjoying listening to Aaron's cries of pleasure. And when those cries turned to chants of 'harder' and 'faster', Kyle began to thrust even harder into Aaron, pounding into him with relentless drives, deep-dicking Aaron with the thickly veined length of his big cock. Kyle just took him. He possessed him. \n\n\"Fuck.\" Aaron moaned and rocked up, meeting the thrusts of Kyle, enjoying the deep-dicking Kyle was subjecting him to. It was hard, deep, fast, intense and pure bliss.\n\nKyle's heavy sac smacked against Aaron's arse as he grunted on every plunge, mirroring Aaron's cries, watching the sheer ecstasy on Aaron's face the whole time. With a growl he leaned forward and kissed Aaron like he couldn't possibly survive a second more without those delectable lips.\n\n\"Damn, I can't get enough of you, baby.\" Kyle growled against Aaron's lips. \n\nThen Kyle took it up a notch by virtually folded Aaron in two...with Aaron's legs almost touching his ears...and then fucked him even harder. Aaron loved it!\n\nIn that new position, Aaron's prostate took a pounding like it had never taken before. Aaron heard screaming but it didn't even register that it was coming from him. When he felt his cum hit his chin forcefully, his tightly shut eyes shot open just in time to see Kyle lean forward to lick it off his chin. \n\n\"God help me, I love you Aaron...\" Kyle breathed, watching Aaron come undone. \n\nWhen Kyle felt a powerful orgasm rip through him and his cock shoot his thick hot seed into Aaron's still spasming channel, he wasn't surprised. Seeing Aaron lose it and feeling his channel grip his cock like a vice was definitely enough to floor him. And even as Kyle shook with his release, spilling his load into the love of his life, Aaron's channel kept squeezing Kyle's cock, milking him till Kyle thought he would pass out from all that pleasure. Shudders rolled through him like waves, leaving him drained, weak and exhausted. When his shudders subsided, Kyle released his hold on Aaron's wrists and legs and collapsed onto Aaron, burying his head against Aaron's neck till he got his breathing back under control.\n\n\"Fuuuuuck!\" Kyle swore as he slid his fingers into Aaron's hair, fisting it to hold him where he wanted and then sought Aaron's lips for a soul-shattering kiss. He devoured and plundered Aaron's mouth as though he was never going to let him go. \"I love you, baby.\" Kyle finally released Aaron's lips long enough to murmur. \"So fucking much.\" \n\n\"I love you too.\" Aaron breathed, still trying to gather his scattered senses.\n\nThen Kyle went right back to kissing him senseless. \"Happy birthday, my love.\" Kyle whispered against Aaron's swollen lips.\n\n\"Hmm... Thank you.\" Aaron smiled dreamily, looking thoroughly fucked. He wouldn't be able to move even if Kyle's body wasn't pinning him to the bed. He felt lethargic, as if he had no bones, no strength, no ability to think. All Aaron could feel was his overstimulated body and the pounding of both their hearts. Hell, he could barely move his arms and legs. Even his eyes wouldn't open. As for his arse, that was the price to pay for mind-blowing pleasure and ordering Kyle to give it to him hard and fast. \n\n\"Hey, are you okay?\" Kyle combed his fingers through Aaron's dishevelled hair.\n\n\"This was the best birthday ever. Sorry for ruining yours, baby.\" Aaron whispered, opening his eyes. Though they'd made some really great memories on Kyle's birthday, Aaron's abrupt departure had ruined it for Kyle and Aaron knew it.\n\n\"Oh you ruined it alright.\" Kyle murmured against Aaron's lips. \"But that glass room fuck...damn!\" Kyle groaned, making Aaron laugh softly.\n\n\"Tell me about it. I still get hard whenever I think about that.\" Aaron moaned. \"We've gotta do a repeat.\"\n\n\"That can be arranged.\" Kyle chuckled, rolling off Aaron. \"Be right back.\"\n\nKyle dashed to the bathroom to clean up. Then he came back with a warm washcloth to clean Aaron up, wincing when Aaron gave a soft groan.\n\n\"Did a number on you huh? Sorry.\" Kyle had the grace to look guilty.\n\n\"Nothing to be sorry about.\" Aaron laughed softly. \"I asked for it. And I loved it. Call me weird but I just love it when you get out of control and fuck the shit out of me. Pun not intended.\"\n\n\"Silly boy.\" Kyle laughed and left the bed once again to return the washcloth and his soiled boxers to the bathroom. Before he got back on the bed, Kyle's gaze slid over Aaron's post orgasmic sated body, his mouth curving in a ghost of a smile laced with undeniable masculine triumph. He opened the bedside drawer and took out a box. Then he handed it over to Aaron. \"Now, before you open this, I don't want you to freak out or get worked up over what is in there. Okay?\"\n\nAaron's eyebrow shot up in confusion. \"Okay.\" He murmured as he sat up and tore off the wrapper. Aaron's eyes widened when he saw a beautiful gold box. It looked like a watch box but was slightly bigger and longer than an average watch box. \"Wow! This is...\"\n\n\"Pure gold.\" Kyle interjected. \"I thought it was cute. You can keep little things that you cherish in it. Now open it.\" Kyle looked even more excited than the birthday boy himself.\n\nAaron opened the box to the most beautiful watch he'd ever seen. \"Oh my God. Kyle, this is beautiful.\" Aaron whispered. \"Oh wow! A Patek Philippe Ref 5016P?\" Aaron gushed. \"Kyle this is fucking expensive.\"\n\nKyle guffawed. \"For you, nothing is expensive...\"\n\n\"Dude, I've read about this watch.\" Aaron exclaimed, not even hearing what Kyle had said. He remembered clearly reading about the Patek Philippe Ref 5016P. Of course the P stood for platinum. It was more expensive than a fucking Ferrari. \"Kyle, not only is this watch expensive, it's damned complicated.\" Aaron couldn't take his eyes off the watch.\n\n\"Don't worry, there's an app for it. If you keep it well and running continuously, it won't need adjusting until the year 2100. That's something our children's children's children will most certainly appreciate, don't you think?\" Kyle actually looked amused at how fascinated Aaron was with the watch.\n\n\"Children?\" Aaron's head snapped up.\n\n\"Oh yes. Children. Have any problem with kids?\" Kyle locked eyes with Aaron.\n\nAaron shook his head slowly. \"I've always wished I had lots of children around me because I never had any brothers and sisters to play with, growing up.\" Aaron lowered his eyes and sighed. \"I've never been around any though. So I don't know whether they'll like me or I'll know how to handle them.\"\n\n\"You'll definitely know how to handle your kids when the time comes. Trust me.\" Kyle leaned forward to press a kiss to Aaron's forehead.\n\nAaron turned the watch over and read the inscription on the back. The emotions which filled him were so palpable his eyes instantly filled. It read;\n\n'Today, Tomorrow, Always...Eternally yours! You have my heart, Ron Hunt. K.P.'\n\n\"Like it?\" Kyle grinned.\n\n\"Like it?\" Aaron gasped. \"I love it.\" He gushed making Kyle burst into laughter. \"You used Ron Hunt.\" Aaron's eyes were alight with amusement.\n\nKyle shrugged and pointed at the plaque Aaron had given him. \"You sighed off as Ron.\"\n\n\"Touch\u00e9.\" Aaron chuckled. \"I'll always be your Ron, Kyle. Always.\"\n\n\"I know. Go on, open the second compartment.\"\n\n\"What second...oh right.\" Aaron murmured when he saw a smaller compartment which he hadn't even noticed. When he opened it, all the blood drained from his face. \"Kyle...\"\n\n\"Now, don't panic.\" Kyle said quietly. \"You know I love you, Aaron. I just can't see myself living life without you by my side. I want to kiss those lips forever. I want to make you mine in every way possible, baby. I would very much love to make this official...if you'll allow it. No pressure. Whenever you want to do it...tomorrow, next week, next year...whenever you're ready. Well, tomorrow can't be possible but...\" Kyle chuckled when Aaron laughed. \"Just know that I'm not taking no for an answer.\" Kyle paused to give Aaron that killer smile that never ceased to melt him. \"It's SO gonna happen, baby.\"\n\nAaron blinked rapidly and looked back at the rings in the box. He didn't have to be told they were very expensive. Even to his inexperienced eye, he could tell. The stunning eight millimeter wide ring was Meteorite and had a Sterling Silver Lining, with tiny exotic grey sapphires around the edges. It was simply exquisite.\n\n\"God, it's beautiful.\" Aaron breathed.\n\n\"You are beautiful.\" Kyle whispered. \n\nAaron couldn't tear his eyes away from the breathtakingly exquisite contents of the box. He was hopelessly in love with the rings already. He finally cleared his throat and looked up at Kyle. \"So... You're not asking me to marry you?\" Aaron asked in a hoarse voice.\n\n\"Hell no.\" Kyle growled. \"I'm telling you. Hell, I made a wish and you came true...well, you did run first.\" Kyle laughed softly. \"But I got you back. And I'm sure as hell never going to let you go, darling. \"So yes, I'm going to marry you. Better get used to the idea.\"\n\nAaron laughed and shook his head. \"You're such an asshole.\" He chuckled, knowing that Kyle's attitude of taking charge was never going to stop. That's what made him Kyle. And Aaron loved him to bits. He picked up the biggest of the rings and reached for Kyle's hand. Then mouthing the words 'I love you', Aaron slipped the ring onto Kyle's ring finger. \"Oh boy!\" Aaron murmured. \"It's off-the-fucking-hook.\"\n\n\"Now you.\" Kyle grinned and took out the ring meant for Aaron. But instead of slipping it onto Aaron's finger, Kyle held it out to Aaron. \"Wanna read what has been inscribed in there?\"\n\n\"I'd love to.\" Aaron nodded his head vigorously. Then he took the ring from Kyle and looked at the inscription. It read;\n\n'K&A - 1 room, 1 bed, no PJs. Your arse is forever mine!'\n\nAaron burst into uncontrollable laughter. \"Oh my God, Kyle you're nuts. Seriously?\" Aaron couldn't stop laughing.\n\nKyle laughed too, enjoying seeing Aaron laughing his head off. \"Yes. Seriously. Your arse is SO mine, baby. Don't worry...your wedding band will have the mushy stuff. This one is more like what Araba and co said yesterday. What did they say they usually do before the marriage again?\"\n\n\"Knocking.\" Aaron laughed. One of their new friends had told them how the Ghanaians do their traditional marriages. Knocking was supposed to be a sort of an introduction, and that was done before the actual marriage.\n\n\"Thank you.\" Kyle chuckled. \"Consider this, my way of knocking.\" \n\nAaron wiped the tears of laughter from his eyes. \"What's in yours?\" Aaron asked, giving his ring back to Kyle and extending his ring finger.\n\nKyle shrugged. \"Just, A&K. You have to engrave whatever you want in there when we get back home.\" Kyle said as he slipped Aaron's ring onto his finger. \"Fuck, this looks good on you.\" He leaned forward to kiss Aaron's ring as though he were paying homage to a mafia boss. Then he took Aaron's lips in a spine-tingling kiss. \n\nWhen they eventually came up for air, Kyle heard Aaron murmur something against his lips. \n\n\"What was that?\" Kyle whispered, flicking his tongue at a corner of Aaron's mouth. God, he loved the guy so much it scared him, Kyle thought, amazed at the intensity of feeling within him.\n\n\"I don't want to change this ring.\" Aaron murmured, looking at his ringed finger. \"I don't want to ever take it off. I won't take it off, Kyle.\"\n\n\"Consider these our wedding bands then. Too bad you're going to live with what is in there.\" Kyle chuckled. \"At least I get the mushy stuff.\" Kyle sighed dramatically, making Aaron laugh softly.\n\n\"I need another hour and a day so I can love you 25/8.\" Aaron murmured. \"That's what I want to engrave inside your ring.\" Aaron sat back and looked at Kyle. He still looked dazed.\n\nKyle laughed, impressed. \"25/8 huh?\"\n\n\"Uh-huh.\" Aaron nodded.\n\n\"Move in with me, Aaron.\" Kyle's voice suddenly sounded serious, all traces of laughter gone. \"Please.\" He added in a whisper.\n\nThe fear and hope in Kyle's eyes was Aaron's undoing. Seeing such a hunk with his heart in his eyes was somehow...unnerving. Kyle looked like he expected Aaron to turn down his request but at the same time looked like he was hoping for the best. Aaron didn't understand why Kyle thought he would say no though. Aaron already had a problem with having to sleep alone without Kyle's arms around him and Kyle knew that. His greatest wish was not only to be able to see Kyle's face first thing every morning, but to also see that gorgeous face last before he fell asleep every night. The man was granting him his wish and he was actually scared he was going to reject him? Aaron almost laughed. But the naughty streak in him reared its head. Why don't I stretch this a bit before I put him out of his misery, Aaron thought mischievously. ",
        "\"I don't know...\" Aaron started and heard Kyle's breath hitch in his throat.\n\n\"Baby please.\" Kyle's eyes looked like he'd just lost all his family or something.\n\n\"Come on.\" Aaron said, moving from where he sat. \"Come and sit here.\" Kyle moved to sit against the headboard like Aaron instructed and watched as Aaron came to sit between his legs with his back to Kyle's chest and his head on Kyle's shoulder. \n\nKyle automatically wrapped his arms around Aaron and inhaled the sweet scent of his hair. \"Now what?\" Kyle murmured into Aaron's hair. \n\nKyle was almost hyperventilating. If he had to marry Aaron immediately they got back home to get Aaron to move in with him, Kyle was willing to do that. The only thing that was stopping him from insisting they got married as soon as fucking possible was the fact that he didn't want to come off as pushy. He simply wanted to allow Aaron to get used to the idea first...didn't want to scare him off. He was trying to be a gentleman here, Kyle thought to himself.\n\n\"Sing for me.\" Aaron said softly.\n\n\"For real?\" Kyle sounded so hilariously incredulous, Aaron burst into laughter. \n\n\"You want an answer or not?\" Aaron tried to control his laughter. \n\n\"You're a jerk.\" Kyle murmured. Aaron hadn't rejected him outright so there was hope yet, Kyle thought with some joy. \"Okay, what would you want me to sing?\"\n\n\"Sweet Sensation. Now I want you to sing it to me. Just me.\"\n\nKyle chuckled. \"Okay, here goes...\" Then Kyle started singing 'Sweet Sensations' in that sexy voice of his that never ceased to turn Aaron into a puddle. It was so good, Aaron smiled throughout.\n\n'I can feel those thrills walking over\n\nWhen you hold me tight\n\nNow I feel those pains taking over\n\nWhen you say goodnight\n\nOh, my sweet sensation\n\nLord, what strange emotion!\n\nYou've got love and devotion\n\nAnd I won't forget your touch\n\nNow there's nothing left for me to say boy\n\nBut stay in your world\n\nYou've got so much soul deep inside boy\n\nAnd love richer than gold\n\nOh, my sweet sensation\n\nLord, what strange emotion!\n\nYou've got love and devotion\n\nAnd I won't forget your touch\n\nAnd I won't forget your touch\n\nOh baby please say, you will'\n\nAaron burst into laughter at Kyle's final line. \"Dude, that's a lie.\" Aaron laughed even harder when he felt Kyle shaking with laughter behind him.\n\n\"Wanna bet?\" Kyle laughed. \"Come on, give me an answer. I'm dying here.\"\n\nAaron reached up to draw Kyle's head down for a sweet kiss. \"Just try and stop me.\" He murmured against Kyle's lips.\n\nKyle buried his face against Aaron's neck and just held him. \"Thanks.\" He murmured. \"But you're so gonna pay for what you did.\" Kyle murmured, making Aaron laugh softly.\n\n\"I'm sorry, love. It was too good to resist. The look on your face.\" Aaron laughed. \"Now we're even.\"\n\n\"And what the fuck did I do?\" Kyle sounded surprised.\n\n\"You pulled out just when I was about to come. That was cruel.\" Aaron shot back.\n\nKyle laughed. \"I'm sorry. I didn't know you were that close.\"\n\n\"Bullshit.\" Aaron laughed. \"You knew exactly what you were doing, Kyle.\"\n\nKyle nuzzled Aaron's ear, making him squirm. \"You should see the look on your face when you come.\" Kyle murmured. \"The way your eyes lose their focus as pleasure takes over.\" He bit lightly on Aaron's ear lobe. \"The way they turn soft and dreamy immediately you're done releasing.\" Kyle soothed the flesh he'd nipped with rhythmic strokes of his tongue. \"I didn't want to miss that. Sorry my love, but I just couldn't.\"\n\nAaron moaned as a shiver passed through him at Kyle's words and erotic assault. \"You wanted to watch me lose it huh?\" Aaron breathed, turning his head to suck Kyle's lower lip into his mouth.\n\n\"Uh-huh.\" Kyle moaned.\n\n\"Well, you sure did make up for it.\" Aaron murmured against Kyle's mouth. \"Fuck, that was some amazing shit.\" He shivered, making Kyle laugh.\n\n\"You're such a slut. You'll be the...\" Kyle trailed off when his phone started ringing. It was Chris.\n\n\"Sup man?\" Kyle greeted.\n\n\"Dean popped the question.\" Chris said without preamble. \"The Drill Sergeant accepted. Of course with that bump, she didn't have any choice. Put Aaron on the line.\" Chris said, ignoring Kyle's laughter.\n\n\"It's Chris.\" Kyle said handing the phone over to Aaron. \"He wants to talk to you.\"\n\n\"Chris.\" Aaron couldn't mask the smile in his voice.\n\n\"Hey buddy. Happy birthday.\" Chris boomed.\n\n\"Thanks.\" Aaron laughed.\n\n\"Having fun?\"\n\n\"Massive.\" Aaron gushed. \"You should come here sometime. You'll love it.\"\n\n\"I'll keep that in mind.\" Chris chuckled. \"You guys decent? We're at Cole's. He's going to Skype you guys now so...\"\n\n\"Shit.\" Aaron muttered and heard Chris laugh at the other end. \"Give us a minute, Chris.\" Aaron threw the phone on the bed and jumped out. \"They're going to skype, Kyle. Get dressed.\"\n\nKyle groaned and got off the bed to pull on a t-shirt and jeans just as Aaron had done. Then they went to sit on the couch with Kyle's ipad, which had already started buzzing, and placed it on the center table. When Aaron saw the squad singing happy birthday to him, he actually joined in, making Kyle roar with laughter. Afterwards, each person took turns talking to Kyle and Aaron. It actually felt like they were all in the same room and not miles away as they really were. Kyle said congratulations to Dean and Kayla and asked them when the wedding was going to take place.\n\n\"Ow come on.\" Aaron groaned, when Kayla gave them a date. \"I'll be in India by then. There's this conference Chris said I'm to attend.\"\n\n\"And you're not getting out of that, young man.\" Chris bellowed from behind Dean and Kayla. \n\n\"Don't worry, Aaron.\" Michael called out. \"There'll be many other weddings. Cole and Briana's, Matt and Jen's...your own...\" He trailed off when all the guys roared with laughter.\n\nAaron turned to look at Kyle. \"They know.\" It wasn't a question.\n\n\"Yes they know. I told them I was going to...tell you.\" Kyle's eyes were filled with amusement. And when he saw Aaron shaking his head with amazement, he laughed.\n\n\"How about Chris and one of his blonde bombshells?\" Dean deadpanned.\n\nKyle, Aaron, Kayla and some of the guys who heard, burst into laughter. \n\n\"Fuck off, asshole.\" Chris laughed. \"Why don't you talk about Ty and his bombshells?\"\n\n\"Because everyone knows that Ty is not going to get hitched anytime soon.\" Tristan retorted. \"In fact, I like the bimbo I saw you with last Wed...\" Tristan couldn't get any further because Chris coiled an arm around his head in a headlock. \n\n\"Shut up, Tristan.\" Chris gave a mock growl. \"Why can't you twerps mind your own business?\"\n\n\"Help, somebody.\" Tristan screamed as if he was actually hurting but everyone knew Chris wasn't hurting him at all. \"Damon.\"\n\n\"Next time don't bite more than you can chew, darling.\" Damon guffawed, going off to pour more drink for himself without rescuing his husband. \"Besides, didn't someone once tell me he was a black belt?\"\n\n\"Pick on someone your own size, dickhead.\" Dean growled, pulling Chris' arm from around Tristan's head and shoving Chris playfully.\n\n\"You're sleeping in the guest room tonight, Damon.\" Tristan announced loudly, making everyone laugh.\n\n\"Yeah right.\" Cole smirked. \"Let's just say that guest room bed will, without a doubt, have two people in it.\" He added, slapping his raised palm against Damon's. Everyone erupted into laughter.\n\n\"Oh Kyle, have you been told I'm going to be the maid of honour for the wedding?\" Briana, Cole's beautiful fianc\u00e9e gushed. \"Yayyy!\" She squealed before Kyle could even answer, making everyone laugh.\n\nAfter chatting for almost an hour, they finally said their farewells. \"God, I miss them.\" Kyle laughed. \n\n\"They obviously miss you too.\" Aaron said softly. \"I noticed your phone flashing when I took it from you earlier. I think you have a message.\" Aaron picked up the TV's remote and switched to CNN, whilst Kyle went to pick up his phone from the bed.\n\n\"It's Ken.\" Kyle said, sitting down beside Aaron. \"He wanted to know whether you're awake now. I called him earlier whilst you were sleeping.\" Then Kyle chuckled, still reading the messages left by his brother. \"He says he has news that will blow my mind. I wonder what it is.\" Kyle said whilst he dialled his brothers number.\n\n\"I suppose he's awake now.\" Ken said when he answered the call. \"Call me via Skype, Ky. I have something to show you.\"\n\n\"Okay. Give me a sec.\" Kyle said as he dialled Ken via Skype.\n\nThe first thing Kyle and Aaron saw wasn't Ken's face but his fingers...well at least they thought it was. The only strange thing was the ring on that finger.\n\n\"You went and got married without me?\" Kyle bellowed, startling Aaron.\n\n\"Calm down, Ky.\" Ken laughed. \"Stephen asked me to marry him. But he wants to ask you for your blessing before...\"\n\n\"But you're already wearing a fucking ring.\" Kyle looked...pissed.\n\n\"Come on, Ky.\" Ken cajoled. \"Who proposes without a ring?\"\n\n\"Dean.\" Kyle deadpanned. \n\n\"What?\" Ken didn't understand.\n\n\"Dean asked Kayla to marry him...without a ring.\" Kyle explained, making Aaron and Ken burst into laughter.\n\n\"Aaron darling, happy birthday.\" Ken said.\n\n\"Thanks.\" Aaron said delightedly. \n\n\"I'll give you your present when we get back home okay?\"\n\n\"Okay, thanks.\"\n\n\"Good. Now Ky, can you please be nice when Stephen calls?\"\n\n\"Why won't I be nice? I'm not an asshole like he obviously is, you know...\"\n\n\"Ky...\" Ken groaned.\n\n\"He should have asked me before asking you, Ken. That's how it's done.\" Kyle fumed.\n\n\"Err...Kyle?\" Aaron said softly beside Kyle. \"You didn't ask my mother before asking me to...\"\n\n\"I didn't ask you to marry me, baby. I told you I was going to marry you. There's a difference.\" Kyle purred. \"Besides who said I didn't ask your mother?\" Kyle asked, making Aaron's eyes widen. \n\n\"You did?\"\n\n\"Uh-huh.\" Kyle leaned over to kiss Aaron's slightly parted lips. \"She gave her blessing.\" He whispered. \n\n\"Hey, cut it out you two. I'm still here?\" Ken said sternly, drawing a chuckle from a surprised Aaron. Kyle still looked pissed. \"Ky, listen. Last week I told Stephen about your impending... warped proposal. Apparently the idiot...\" \n\n\"He also knows.\" Aaron stated.\n\n\"He's my twin brother.\" Kyle deadpanned.\n\n\"Are you two listening to me?\" Ken growled.\n\n\"Yes.\" Both Kyle and Aaron responded, with Aaron trying to hide his smile.\n\n\"Okay so as I was saying, Stephen apparently bought a ring, with the intention of asking me to marry him six months ago but was scared of rejection. Can you imagine?\" Ken waited for the two people he was talking to, to say something and when they didn't, he went right ahead. \"Well, so he decided to propose today too when I told him what you were planning on doing. Please forgive him, Ky. He's still shaken as it is.\"\n\n\"Why the fuck is he still shaken? You accepted.\" Kyle growled.\n\n\"No I didn't.\" Ken shook his head. \"I told him to ask you first.\" He sighed.\n\n\"But the ring...\" Kyle pointed out.\n\n\"He's out, Ky. I only wanted you to see it that's why I put it on. He doesn't know I've taken...Oh my God, he's back.\" Ken groaned and turned to look behind him even as he tried to take off the ring. \"Shit. After telling the man I'm only going to accept his ring and proposal on condition that he asks my brother, he catches me wearing the ring? How mortifying!\" Ken moaned, pulling his finger with all him might. \"Fuck!\"\n\nAaron couldn't hold in his laughter. Even Kyle grinned at his brother's predicament. Ken looked like he wanted to die. What made the whole scene funny was the fact that Ken couldn't seem to be able to pull off the ring.\n\n\"Get some cream, Ken.\" Aaron shouted, hitting Kyle who had erupted into raucous laughter. \n\nBut even as Ken raced towards the dresser in the room, Aaron and Kyle saw the door behind him open and Stephen, looking every bit like his military self in a tight t-shirt, cargo pants and combat boots, stepped into the room. Ken froze. Stephen merely stood and watched as his boyfriend's face heated up and dropped his eyes to Ken's ringed finger. At that point, Kyle and Aaron went quiet, waiting to see Stephen's reaction. \n\n\"It's a lit...little tight.\" Ken stammered.\n\n\"I know.\" Stephen said quietly. \"I had it made at the time you were very sick. I tried it on you once whilst you were fast asleep. It was perfect.\" He explained. \"You've put on since then. If...if you accept my proposal, we'll go and get it...\"\n\n\"I accept.\" Ken surprised both Stephen and the audience Stephen didn't know they had, by blurting out shakily, tears already spilling from his eyes. \n\n\"Oh God, baby are you serious?\" Stephen looked totally humbled. Ken nodded his head vigorously, obviously feeling too emotional to talk. \"Oh Ken, I love you.\" Stephen said closing the distance between them and wiping at Ken's cheeks. Then he wrapped Ken in a tight embrace. \"I love you so much. Thank you.\" He picked Ken up and Ken immediately wrapped his legs around Stephen's waist.\n\nStephen sounded like he was crying too. The two were obviously lost in each other at that very moment. Till...\n\n\"What the fuck happened to asking me first?\" Kyle bellowed, making Stephen turn his head towards Ken's ipad and the faces of Kyle and Aaron.\n\n\"Oh shut the fuck up, Kyle.\" Aaron groaned.\n\n\"Kyle?\" Stephen said, wiping at his eyes. Then he moved closer to Aaron and Kyle, with Ken still in his arms. \n\n\"Wasn't expecting me where you?\" Kyle growled, making Aaron roll his eyes. Kyle sounded as though he'd actually walked in on Stephen and Ken, when in fact, he was sitting thousands of miles away. \"Isn't there something you want to ask me?\"\n\nStephen flashed a grin and sat on the chair that Ken had been sitting on earlier. He didn't let go of a still shaken Ken for even a second. He hugged Ken to his broad chest, making Kyle smile despite himself, remembering the reason why he'd always liked Stephen. The man totally adored and love Ken to death. And Kyle knew he couldn't ask for a more fitting husband for his brother.\n\n\"I do actually.\" The soldier said in such an authoritative voice, making Kyle wonder whether it was the same man who hadn't had the balls to ask his brother to marry him six months ago. Love could make the strongest of men act like wimps, Kyle thought amused. He should know. \"Oh, happy birthday, Aaron.\"\n\n\"Thanks Stephen. And congratulations.\" Aaron grinned.\n\n\"Congratulations to you too.\" Stephen winked.\n\n\"Waiting...\" Kyle growled. \"What did you want to ask me, Stephen?\"\n\nStephen's brilliant smile could have lit up a dark room. \"How about a double wedding?\"\n\nKyle, Aaron and Ken froze. Ken was the first to recover. \"That is the best suggestion I've heard in a long while.\" Ken gushed, dropping a quick kiss on Stephen's lips. \"Baby, that's brilliant.\" Then he turned around to face his brother and Aaron. \"Well...\"\n\n\"Kyle?\" Stephen looked at Kyle and Aaron expectantly. \"Aaron?\"\n\nKyle was so startled by Stephen's question, he forgot that that wasn't the question he'd been expecting. He turned to look at Aaron, surprised at the twinkle in Aaron's eyes. \"We can do that.\" Kyle said slowly, looking at Aaron the whole time. \"Immediately Aaron here, gets comfortable with the idea.\" \n\n\"Who says I'm not?\" Aaron retorted with a smile, his eye so filled with love for the man beside him. \n\nKyle's eyes widen in surprised. The joy that filled him at that very moment was so intense and overwhelming he didn't even hear when Ken and Stephen started cheering as though their football clubs had won a cup. He only had eyes for Aaron. \n\n\"Really?\" Kyle whispered. And at Aaron's nod, Kyle gathered Aaron into his arms and held him as though he was never going to let him go, his body trembling with reaction, against Aaron's. \"You just made me the happiest man alive. Thank you.\" Kyle's voice cracked.\n\nAnd just like that, Aaron knew Kyle had been bluffing the whole time. All that talk about 'telling' and not 'asking' had been Kyle's way of shielding himself from rejection. He'd obviously been scared Aaron would say no. Apparently Stephen wasn't the only chicken after all, Aaron thought with a smile.\n\n\"You were scared weren't you?\" Aaron whispered when he felt Kyle shaking and sniffling against his neck. \n\nKyle nodded against Aaron. \"Terrified.\" He whispered.\n\nAaron tightened his hold on Kyle. \"You big chicken.\" He whispered, making Kyle shake even harder...this time with laughter. \"God, I'm crazy about you.\"\n\nKyle raised his head and wiped at his eyes. Then he gave Aaron that smile that never ceased to get Aaron's heart to pound faster and turn his insides to mush. \"I know.\"\n\nAnd even as Ken and Stephen looked on with delight, Kyle kissed Aaron with a fiery passion. Each man knew the other owned him, body and soul, and there wasn't any way they would change that. They were not just blissfully hooked, they were hooked for life.\n\nTHE END! \n\n'To err is human, to forgive, divine!' - Alexander Pope (1688 \u2013 1744)"
    ],
    "authorname": "adjoaq",
    "tags": [
        "hooked",
        "hea",
        "birthday",
        "happiness",
        "kyle",
        "aaron"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/blissfully-hooked-ch-10"
}