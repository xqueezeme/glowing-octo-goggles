{
    "title": "Changed Redux Pt. 02",
    "pages": [
        "Authors Note: \n\nThis story depicts graphic lesbian sex and mind control. All characters are fictional and are depicted as being over the age of 21. \n\nThis is the continuation of the Changed Redux series. This is a redo of the Changed series I wrote years ago under a different pen name. It is not a slavish copy but rather a reimagining of the series with more depth and a few different twists and turns. \n\nPlease remember that I, like all the authors on this site do this in our free time solely for your enjoyment and that we are not professional writers. Our only reward is the feedback and votes we get from you, our loyal readers.\n\nA heartfelt thank you to everyone who has read, voted and especially taken time to leave feedback on my previous works. Your continued support means to world to me. \n\nHaving said all that, I hope you will enjoy my words. \n\n~CD \n\nPart One ~ A Whole New Roommate\n\nFresh, clean morning sunlight streamed through the open window shades and flooded into the living room. The light was bright enough to make it's way through Mary Calise's closed eyelids and it slowly prodded her back into the world of the living. Groaning and stretching, she eventually regained some semblance of consciousness and her eyes fluttered open. She was lying on the floor of the living room completely naked with an equally naked Julia snuggled up next to her. The petite, raven haired girl's head was resting comfortably on Mary's shoulder as she slept peacefully. Mary looked down at her and smiled recalling how amazing last night had been with this woman.\n\nHer eyes wandered down the small woman's body, over the luscious swell of her curvaceous backside. Mary still marveled at the new and amazing powers she had acquired since putting on the enchanted ring last night. She recalled with a little flush of excitement how she had changed Julia's slim, girlish body into the wickedly curvy, heavily breasted and thick hipped beauty in her arms. She was equally amazed at how much the look and feel of the woman lying with her now excited her in ways it never had before.\n\nNever before putting on the ring had Mary ever had any real interest in her own sex. But since slipping the ring on and subsequently bonding with the magical presence that resided withing it, she was now finding she had a whole new outlook on life.\n\n\"I guess I'm a lesbian now.\" She said to no one in particular.\n\n\"Are you now? That was quick. One roll in the hay with that pretty young thing and suddenly you're a lesbian?\" A voice echoed in her head, sounding very wry to Mary's ear despite the exotic accent.\n\n\"Marcellene?\" Mary asked the air. \"Is that you?\"\n\nMarcellene was the Sorcerer Priestess that was trapped in the ring by the magic and had subsequently been bonded to Mary when she put the ring on. The woman was thousands of years old and had served many, many masters over the centuries. However, in all those long years, Mary was the first woman she had ever served.\n\n\"Do you have any other voices inside your head I should know about?\"\n\nMary pictured in her mind the image of the woman from her dream. Tall and dark haired with dark eyes and dusky skin. She was a very beautiful woman, or at least she had been six thousand or so years ago before she was destroyed by her own spell and bonded to the ring now stuck on Mary's thumb.\n\n\"No.\" Mary said quietly, not wanting to wake Julia. \"Not unless you brought some more with you.\"\n\n\"At times, I've wished there was someone else in here with me. It would have given me someone to pass all the long boring centuries with. But sadly, you have just me, my Mistress.\"\n\nMary's sex twitched and sent a little thrill up her spine at the word \"Mistress\" on another woman's lips. Being called that was something new for her and she was a little disturbed to find how much she enjoyed it. She was almost certain it wasn't something she had ever liked or even fantasized about before. Not that she had ever really had any opportunities before, she admitted to herself. Pretty much all her previous boyfriends had been the controlling, overbearing type and wouldn't have allowed her to indulge in dominance even if she had wanted to. She wondered if this new development was a result of something being done to her by the ring or if it was just something deep in her psyche that was only now coming to the surface. A little disturbed by both of those options for different reasons and not wanting to really dwell on it at the moment, she asked, \"Where have you been? I was beginning to think I had just imagined you this whole time.\"\n\n\"My apologies Mistress. I was exhausted by the Bonding and then also bringing you into my world for a time. The Bonding requires and immense amount of energy and I have been so long without a host that it drained me utterly. While you were sleeping I was finally able to regain some of my energies from you.\"\n\n\"You get your energy from me?\"\n\n\"Yes Mistress. I, or more appropriately, the ring draws it's energy from it's host. Do not fear, the energy used is such a tiny amount that you will never feel it most of the time.\" Marcellene replied. \"Only if you attempted a monumental transformation, turning someone into a dragon or some such nonsense, would the energy drain be significant.\"\n\n\"Oh, ok.\" Mary replied before her brain actually caught what Marcellene had said. \"Wait, a dragon? I could transform someone onto a dragon?\"\n\n\"Yes, I suspect you can. From what I saw of your manipulations of this girl you're with, I can see that the magic has manifested in you differently than it has in any of the male hosts that have wielded this ring in the past. You have gained a power far more powerful than they ever did. You have the power not only to manipulate minds, but also bodies. That power was an element of the original spell that I was trying to weave but it was not an ability bestowed upon any previous ring bearer. I had thought that power was lost when the spell failed and I was destroyed but it appears not. That power was only awaiting the correct host... you.\"\n\n\"Me? Why?\"\n\n\"Truthfully, I do not know, but the most likely reason is that you are female. It is also possible that you already have some innate magical ability that has to this point been untapped, or perhaps it is some other reason entirely. Without more knowledge, I cannot tell. Perhaps we will learn more with time.\" The sorceress answered. \"For the moment, the why does not really matter. It only matters that you have this immense power and that you learn to control it properly. This kind of power is dangerous in the extreme. Any undisciplined thought can have to power to destroy. An instant of rage could easily kill. You must be very careful with your thoughts and only use the power sparingly.\"\n\nMary looked down at the small woman sleeping so peacefully in her arms. \"Will Julia be ok? I didn't hurt her, did I? I didn't really know what I was doing when I did these things.\"\n\nShe heard Marcellene scoff, \"She will be fine. Probably much better than fine with the changes you made to her. With how you enhanced her sexuality, you will be lucky if you can keep up with her needs now. No, what you did to this girl is nothing, a mere pittance compared to what this power can really do.\"\n\nMary looked down at her friend again, at the lush new curves of her small body. Changes like she had made in Julia would normally take hundreds of hours in a gym and tens of thousands of dollars in plastic surgery. Without even really trying, Mary had made those changes in a few seconds. It was incredible. \"A pittance?\"\n\n\"Yes. Small physical changes are nothing. Even implanting small thoughts or commands are nothing. Like what you did with this lovely girl earlier, making her sing to you. This is nothing.\" Marcellene paused for emphasis and when she continued her tone was darker, \"But changing an individual's personality,\" her voice became still more serious, \"their emotions, thoughts, memories, this is more of a change. When you begin to tamper with the mind, you begin to truly change who that person is. Their personality, their dreams, their memories, everything that makes them who they are. This is where the real power resides and where you must be careful, especially with those you care for. When you make a physical change to a person you can easily change it back. Bigger breasts, smaller breasts. Taller, shorter. Easy. But changes to the mind are not so easily reversed. Remember that.\"\n\nMary's stomach started feeling a little hollow at the potential dangers that the ring held. Looking down at Julia and thinking about how she could easily damaged her in some way without even meaning to another thought occurred to her, \"OK, different question, so because of the magic, nobody that I change even realizes that a change has been made, right?\"\n\n\"Correct.\"\n\n\"So, should I tell Julia about this? I don't really feel right about changing her and not telling her. We've know each other for so long. I don't think I should keep this from her.\" \n\n\"That is up to you Mistress. I would caution you about allowing the knowledge of the ring spread to far. It is immensely powerful and many people would covet that power.\" She paused then asked, \"Do you trust this woman?\"\n\nMary looked down at the young woman sleeping snuggled up beside her. She had known Julia for five years now and they had been best friends for much of that time. Mary had always had a strong feeling of connection with Julia but never before had it been a desire to become something more, to become lovers. Mary had actually never had any real feelings for her own sex before yesterday. But now, it was as if some switch deep in her mind had been flipped and everything had changed. She could no longer picture herself with a man of any kind, her desires were now wholly centered on women. Just the idea of being with a man made her shudder uncomfortably. Thinking about her new outlook actually made her feel a bit confused. She knew that she had different feelings in the past but thinking back, couldn't really recall what they had felt like. Shaking her head a little, she pushed that line of thinking from her mind for the time being. \n\nJulia rolled over in her sleep and Mary looked down fondly at the beautiful, dark haired young woman. With all the changes that had been made to her, Mary had suddenly come to a new realization, that she now loved Julia in a whole new way. Gone was the best friend, sisterly bond with this beautiful young woman. It had morphed into something deeper and far more powerful. Now in addition to that bond of friendship she also felt an intense connection, both emotional and physical, that had never been there before. She gently stroked Julia's raven black hair and said softly, \"Yes. I'd trust her with anything.\"\n\n\"Then I will leave the decision to you.\"\n\nJulia stirred in her arms again, probably awakened by the fingers running through her hair. She sat up and looked at Mary groggily then smiled. \"Good morning.\" she mumbled.\n\nEven with smudged, day old makeup and her hair completely askew, Mary felt her heart skip a beat at how lovely this woman looked. How did I never notice how beautiful she was? Mary thought to herself. She leaned down and gave Julia a kiss on the lips, enjoying how soft they were, \"Good morning Beautiful.\"\n\nJulia accepted the kiss and even pushed in, making it last a little longer before sitting back. \"I was hoping you would still be with me when I woke up. Last night was so amazing. I was a little worried that it was just a dream.\"\n\nLaughing a little, Mary said, \"Well it kind of felt like it.\" She ran her hand over Julia's backside, \"You were incredible.\"\n\nBlushing, Julia smirked, \"I try.\" Trailing a hand down to Mary's breast, she lightly stroked the nipple for a few moments before pinching it gently, making Mary's breath catch in her throat. \"And of course it helps to have such a wonderful partner.\" She gave the nipple a little rolling twist, making Mary shudder. \"And you weren't to bad yourself.\"\n\nFeeling her passions reigniting under Julia's expert touch, Mary said huskily, \"What do you think you're doing? Didn't you get enough of me last night?\" Julia looked up into Mary's eyes and the raging lust she saw kindle in those dark, ebony pools almost made her gush on the spot. She moaned and whispered, \"Dear Goddess, you're so beautiful.\"\n\nJulia smiled wickedly, \"Glad you finally noticed.\" She bent down and wrapped her soft lips around Mary's hard nipple, sucking it deep into her hot, wet mouth. Her tongue rolled the stiff, sensitive skin around in a slow, steady rhythm for a few minutes while Mary squirmed. Eventually, Julia let the nub go with a wet little pop and kissed her way over to it's twin. She kissed it softly before looking up at Mary. \"Would you like me to suck on it?\" She cooed, teasingly.\n\n\"Mmmm.... she's good.\" Marcellene moaned into Mary's thoughts. \n\nThe sound of her exotically accented voice in her head sent a bolt of pleasure straight up Mary's spine and she gasped, \"Yesss.\"\n\n\"If you insist.\" Julia said before giving the hard nipple a quick suckling kiss. She looked up into Mary's eyes as she sucked on the nub. Holding the eye contact, she moaned into the sensitive skin.\n\nHer eyes held captive by the heat in Julia's smoldering gaze, Mary wondered distantly if Julia had always been this sexy or if her enhancements to the petite girl's sexual responses had done this. Julia moaned again, louder this time and Mary could feel her nipple vibrate with her lovers hot mouth.\"Oooooh.\" Mary moaned again. \"So good.\"\n\nJulia released the nipple and stretched up so they could kiss again. Her tongue sliding easily into Mary's eager mouth. Their tongues danced for several minutes while Julia's hands wandered over Mary's body. Starting at her breasts and working their way steadily downward till they reached her thighs.\n\nMary was almost delirious with need by this point. Julia's lips on her nipples, her tongue in her mouth and her hands all over her body sent Mary's passions rampaging around inside her to the point where she was already on the verge of climax. At the touch of Julia's hands on the inside of her thighs, Mary's legs parted of their own volition, opening up for her lover. The cool air on her soaking wet pussy sent a shiver through her and she gasped.\n\nJulia backed off a bit and sat up, smiling down at Mary, \"You're pretty eager to spread your legs for me.\" She teased, \"What is it you want?\" She purred.\n\nHer voice thick with passion, Mary said, \"You.\"\n\n\"Oh, I know you want me. I can see that.\" She ran a finger lightly over the tuft of soft brown hair over Mary's mount, making her moan loudly. \"But what do you want me to do?\" She bent back down and whispered in Mary's ear. \"I'll do anything for you.\"\n\nIn her head, Mary heard Marcellene moaning loudly, \"Oh, dear Goddess, what did you do to this girl? She's so wanton.\" She moaned again into Mary's thoughts. The sound of the sorceress enjoying the sensations as much as she did added fuel to Mary's already raging internal fire.\n\nMary didn't know if the changes she had made to Julia had supercharged her sex drive or if maybe she was like this just because she had wanted Mary for so long. Whatever the reason, she just hoped Julia would always be ready for hot sex like this, lascivious and wanton, just as Marcellene had said. Yes, Julia, always be this sexy and this ready for sex. Always this ready to serve me. \n\nThe air shimmered.\n\n\"Oh no...\" she started to say but was distracted at that instant by her lover.\n\nJulia took one of Mary's breasts in her hand and started to knead the firm mound as she kissed the side of Mary's neck. She whispered again even more lustily, \"Your Pet will do anything at all you want.\" She kissed her ear, \"All your Pet wants to do, is to please you.\"\n\nHer Pet. That was what Mary had called her last night. Mary couldn't believe how incredibly sexy and erotic that simple word sounded coming off Julia's lips. Without thinking Mary moaned, \"Lick me, my Pet. Lick me. I need... your tongue.... in... in me.\"\n\nJulia sat back up a little and looking deep into Mary's eyes said, \"Anything for you, my Mistress.\" Sliding sensuously down, Julia positioned herself between Mary's thighs. Gently, she pushed Mary's knees wide apart, exposing her completely. Within just a couple minutes of the first touch of the beautiful, raven haired girl's tongue on her clitoris, Mary came.\n\nRapture exploded in Mary's head as the climax she had been holding back the whole time finally broke free of her restraint. A cry of primal lust was torn from her lungs and her sex convulsed in a paroxysm of sheer bliss.\n\nIn her head, she heard Marcellene's cries of ecstasy echoing her own and it drove her passions to an even greater height. She imagined the exotic, dusky skinned sorceress writhing in about in rapture, one hand fondling her breasts while the fingers of her other hand plunged deep into her needy sex. The image sent Mary over the edge for a second time and with another cry of pure bliss.\n\nNot wanting to stop yet, Julia wrapped her arms around Mary's thighs and using them as leverage, pushed her tongue in deeper. Mary felt Julia probing farther into her sex, seeking out her most intimate places and she shuddered with each wave of pleasure that washed through her as the girl's tongue moved inside her. Wanting more, needing more, Mary thought, I wish her tongue could go deeper! \n\nThe air shimmered. \n\nBefore Mary even realized what she had done she felt Julia's tongue slipping deeper into her throbbing sex. Farther and farther it slid into her, filling her depths, reaching impossibly far down into her core. The sensation was exquisitely erotic and with a shriek, yet another fabulously intense orgasm ripped through Mary's body. She felt the powerful muscles of her sex contract around Julia's invading tongue and try to drag her in even deeper. Another spasm rippled up the walls of her sex and she felt wetness flooding from her, soaking Julia's face and running down over her own ass.\n\nMarcellene's voice was moaning an crying deliriously in her head as together they came over and over, utterly under the control of Julia's nimble tongue. Opening her eyes, Mary looked down to see Julia's beautiful face between her thighs staring up at her. Their gaze locked again for an instant before the dark haired girl's eyes rolled up as her own climax took her. But even as the girl's own orgasm raged, Julia's tongue continued to plunged in and out of Mary's pussy. The sight of Julia in rapture between her thighs sent Mary over the edge and with a dwindling cry she came one last time. Her muscles turned to quivering jelly as searing ecstasy flowed through her veins, overloading her senses and her mind. With a whimpering groan, she collapsed, totally spent.\n\n<center>* * *</center>\n\nMary awoke with a shuddering groan as bliss saturated her entire body. Groggy an confused, she moaned as her body reacted of it's own accord. Her hands went to her breasts and fondled the sensitive mounds as her legs squeezed hard around something between her thighs. Her moaning turned to a cry as a long, rolling climax surged through her still groggy mind and body. Her back arched and she clutched at her breasts as her body rode the waves of rapture.\n\nAfter a few minutes her body came down from her climax and she lay panting on the floor. She felt lips pressing against hers and a tongue pushed into her mouth. The tongue was long and thick and tasted of her own sex. She found she liked the taste and eagerly opened her mouth to accept the kiss. Her mind distantly recognized that it was Julia kissing her but it felt so strange. Mary opened her eyes and saw that Julia was staring at her, a look of amused passion in her eyes.",
        "The tongue pushed deeper into her mouth and Mary moaned again. The tongue was so long that it was starting to reach down her throat. She though that it should make her gag but oddly it didn't It just slid down her throat. Julia moaned into her mouth as she pushed herself into Mary, sharing both the taste of her sex and their passions. She felt Julia's legs move to straddle her thigh, the hot wetness of her pussy quickly making a slippery wet patch on Mary's skin. The motion of Julia's hips quickly became more forceful as her moaning increased in intensity. Her tongue plunged down Mary's throat as she ground their bodies together.\n\nIt's like I'm giving her tongue a blowjob, Mary thought as her own passions built. She heard Marcellene moaning in the back of her mind and wondered if the sorceress had ever had a host like her before.\n\nMarcellene gasped in her thoughts, \"This girl.... she may kill... us... ooooohhhhh.... kill us... both!\"\n\nMary couldn't respond with Julia's tongue down her throat but she knew what the sorceress meant. If Julia was going to want sex like this every minute of the day, she didn't think she could keep up for long. But oh, what a way to go.\n\nWith strangled cry, Julia's body went taught and Mary could feel a flood of hot wetness on her thigh as the petite woman came. Her small body bucked against Mary and her tongue pushed impossibly deep down her throat for a final instant before slowly sliding back out as her body sagged into Mary's arms.\n\nTenderly, Mary held the smaller woman in her arms, her body continuing to shiver and twitch as the orgasm faded. Mary enjoyed watching her girls huge breasts jiggle and bounce with every shudder that her body made. Cupping one of the mounds, Mary was a little surprised to see how small her hand was in comparison. Julia was now much more than a handful, at least for her. She snickered at the realization.\n\nJulia's eyes cracked open and she looked up at Mary, her distant gaze still clearly showing the afterglow that still coursed hot through her veins. \"Something funny?\" She aid breathlessly.\n\n\"I was just seeing how huge your breasts are now. I can barely hold them.\"\n\n\"Now?\" Julia said.\n\n\"I... well...\" Mary stammered, about to make up a correction but then thought better of it. She wanted to be honest with Julia. Her friend, no, her lover, deserved the truth. Briefly, a vision of everything she could do with the ring flashed through her mind, manipulating Julia, controlling her, making her do whatever she wanted, maybe controlling other women, manipulating them as well? She thought about what Marcellene had said earlier about how the previous owners of the ring had used it's power to gather vast harems of beautiful women and wondered if she could really do that as well. With an effort, she pushed the mental image of dozens of beautiful woman out of her mind and brought her thoughts back to Julia. Under her breath, she whispered, \"Please be cool with all this.\" \n\nThe air shimmered. \n\nCaught off guard, Mary paused for a second wondering what she might have just done. She hesitated but Julia was sitting there looking at her expectantly. Taking a deep breath, Mary started, \"Well, it's like this...\" and went on to explain the events of the last day.\n\nAbout fifteen minutes later Julia was leaning back against the couch with a look on her face that made Mary think she was rethinking the years of pining for her and likely mulling over Mary's sanity as well.\n\n\"So let me get this straight, you found a ring, a magic ring.\" she said while waving her fingers around in gesture that Mary could only assume was mocking, \"This ring has an ancient priestess or sorceress or something trapped in it and it, she... whatever, transported you to an ancient temple and gave you the ability to control others and manipulate them in any way your little heart desires? And you took this incredible, mind bending power, a power that would let you do just about anything, a power that could probably make you ruler of the fucking world... and you supposedly gave me big tits and a round ass.\" She raised one eyebrow. \"Did I get that all right?\"\n\n\"Uh, well it sounds kinda bad when you say it like that.\" Mary mumbled, suddenly feeling very stupid. She was glad she had left out the part about how she also had sex with Marcellene on that hilltop temple. Adding that into Julia's already mocking recital of the last few hours would have made the whole thing sound just that much more ridiculous. \"That wasn't exactly what happened.\"\n\nThe eyebrow quirked higher and her lips curled into a wry, lopsided grin. \"You're right. I left off the part where you said you boosted my erogenous zones off the charts, made me into a nympho and gave me a tongue from a circus freak show.\"\n\nFeeling exceptionally embarrassed, Mary said,\"It all sounds so stupid when you say it like that. It's all just so new. I still don't even really know how to control it. Most of the things I did to you were by accident. I can change them back... I think.\"\n\nShaking her head, Julia said, \"Ok, this is really getting pretty weird Mary. You're starting to scare me now. I don't' get what you think there is to change back Mary. You keep talking like you changed me all around, but I've always been like this. You didn't change me!\"\n\n\"You don't see anything different about yourself from yesterday?\" Mary said, wondering to herself how she was going to deal with this. Or if she should she even deal with it. Couldn't she just leave things the way they were? Julia didn't know and what she didn't know wouldn't hurt her, right? Whatever the ring did, it apparently changed the mind of the person it was changing so they wouldn't notice the change. Julia thought she had always been like this. At least she mostly accepted the changes as always being like that. She recalled her conversation yesterday just after she had given Julia her fabulous new curves and while she accepted it almost totally, there did seem to be at least a little confusion and recalling of the way she had been. But it hadn't been much and what little confusion there had been didn't last long. Basically, Julia just thought this was how she had always been and Mary simply explaining it to her wasn't going to change that. The easiest solution was to just let the magic work and go with it. \n\nMary mulled that over for a minute but decided she didn't like that answer. Keeping all this from Julia didn't feel right. She wanted Julia to know. A part of her knew she could just wish or will or whatever and use the magic on Julia again to make her know all this, but for some reason she wanted to do this without the ring if she could. A though struck and she stood up, \"Wait here.\"\n\nShe ran to the bathroom and rummaged through the pile of dirty laundry that was still there from yesterday until she found her phone. Unlocking it she was happy to see she still had a little battery power left after leaving it unplugged all night. She opened up photos and scrolled through looking for a good photo of Julia before the changes. She found a good full body shot of Julia in leggings and a tight tee shirt but it wasn't what she had been expecting. The photo showed Julia as she was now. Her huge breasts stretching the tee shirt fabric out and her curvy backside filling out the leggings nicely. The photo had changed just like Julia.\n\n\"It changed too.\"\n\n\"Interesting. The magic changed her and everything associated with her changes as well. This magic is indeed powerful. This cannot come only from me.\" Marcellene said into her thoughts. \"This is coming from you as well. You have your own magic. Untapped, untrained, but it's there.\"\n\n\"I don't have magic. I'm not a wizard. This isn't a Harry Potter book.\"\n\n\"Harry who?\"\n\n\"Nevermind. Maybe it's just that one photo...\" she scrolled through but quickly found that they were all changed. They all showed the new Julia. \"What the hell...\" Another idea struck her and she turned to the clothes hamper next to the door. Rummaging through she pulled out one of Julia's bras but was shocked to see that it had changed as well .The thin, basic A-Cup bras that Julia usually wore had been replaced with a much more sexy looking piece. Checking the tag, Mary noted it was a E-Cup. \"Thirty E. That's even bigger than I thought. No wonder they look so huge on her little body.\" She muttered.\n\n\"They look delicious, you mean.\"\n\n\"Yeah, that too.\"\n\n\"Who are you talking to?\" Julia's voice said from the doorway, startling Mary and making her jump. Julia stood there naked, smirking at her, \"Ooooh, I get it. It's your sorceress friend, right?\"\n\nMary though she looked both amused and a little concerned. \"Actually I was. I was just trying to find a photo of the way you used to be but they all changed too. I just need to find a way to...\" She broke off, and turned her back to Julia. Becoming more frustrated by the second, without thinking she bit out, \"I just wish you knew what things I changed!\" \n\nThe air shimmered. \n\nMary's head snapped around, realizing what she had just done. She was just opening her mouth to curse when Julia beat her to the punch. \n\n\"Holy shit, you really did change me!\" Julia exclaimed. She was looking down at her breasts, her hands running under them and cupping their full weight. She turned to the mirror, \"Holy crap! These girls a fucking huge! I look like a porn star! No, more like an anime girl. And look at this ass. Holy shit!\" She laughed, turned to look at Mary and smiled wickedly, \"And you are a serious fucking pervert! Look what you did to me!\" She looked down and cupped her tits in her small hands, \"Wow, I guess you're a boob girl, huh?\" She turned to the mirror again and checked out her ass, \"Or maybe a ass girl? I guess since you gave me both you're more of a full package kind of woman.\"\n\n\"I guess...\" Mary started but Julia interrupted her.\n\n\"And this tongue!? You really are a fucking wierdo.\" She laughed, \"This is some seriously kinky shit.\" She slid her tongue out and Mary was a little shocked to see just how long it really was now. It slid out maybe ten or twelve inches as Julia twirled it about like a snake. It was both kinky and more than a bit creepy to see.\n\n\"I don't really know how to control it yet.\" Mary said, feeling incredibly self conscious. Julia was right of course, all the changes she had made had been pretty perverted. She felt herself blushing furiously and she couldn't meet Julia's eyes. \"I just think of something and it sort of happens. When you were licking me I just thought how amazing it would be if you could lick deeper and it happened. I'm so sorry I did these things to you. I can try to change you back if you want.\"\n\nJulia's tongue slid back in a way that reminded Mary, a little disconcertingly, of a snake. \"Change me back!?\" Julia practically shouted. \"Have you gone completely crazy? I'm like a fucking sex goddess now! Don't you dare change me back!\"\n\nA little taken aback, Mary said, \"Uh, ok. If that's really what you want.\"\n\n\"Of course it's what I want! I've dreamed about looking like this my whole life. And how you amped up how good sex feels?\" She cupped her breast again and took her nipples between her fingers, rolling and pinching them gently. Her eyes slid closed and she groaned. \"Oh Baby, this is sooooo amazing.\"\n\n\"Is it really that good?\" Mary asked, feeling herself starting to respond to the sight of Julia playing with her tits.\n\nJulia stopped and looked at her, surprised. \"You mean you haven't tried this on yourself yet? Why?\"\n\n\"I don't even know if the magic will work on me.\" Mary said a little lamely. In truth, she hadn't even thought about trying it out on herself.\n\n\"The mind control aspect of the magic most certainly won't work. You can't really alter your own mind. But the physical changes?\" Marcellene seemed to be considering for a moment. \"It may work on you. There is really no way of telling since this aspect of the magic is unexpected.\"\n\n\"What were you doing jut now?\" Julia asked curiously. \"Was that sorceress talking to you in your head?\"\n\n\"Yes, Marcellene was just telling me that the magic might actually work on me but she doesn't know. Seems like this is kind of new territory for her too.\"\n\n\"So she just like talks in your head? She always there now?\"\n\nMary shrugged and held up the ring on her thumb. \"Yup. We're stuck with each other apparently.\"\n\n\"Hopefully you don't snore\".\n\nMary laughed then told Julia what Marcellene said.\n\n\"She sounds pretty snarky.\" Julia said, looking at the ring.\n\n\"Yeah, I'm beginning to think that too. Should be interesting.\"\n\n\"And you can't take the ring off? Ever?\" Julia asked, still looking at the ring. \n\n\"I don't think so.\" Mary said. \n\nMarcellene spoke into her thoughts, \"The only way that ring comes off is if it decides to, or you die.\" \n\nA bit shocked to hear it put like that, Mary asked, \"Really?\"\n\n\"What did she say?\" Julia asked. \n\n\"She said either the ring decides it wants to come off, or I have to die. Otherwise I'm stuck with it.\" \n\n\"It decides?\" Julia asked. \"The ring or the sorceress?\"\n\n\"The ring. It's... well, it's a little hard to explain but basically, she's not in charge, the ring is.\" Mary explained. \n\nShaking her head slowly, Julia said, \"Ok. Whatever.\" Straightening a little, she turned her gaze back to Mary, put her hand on her hip and cocked her head to the side,\"So what about you?\"\n\n\"What about me?\"\n\n\"I mean, look at me.\" She waved a hand vaguely down her body, \"I'm like a fucking sex goddess now and you get to sleep with me. Only seems fair that I get to sleep with a goddess too.\"\n\nMary hedged, \"I don't know if I should. I still don't really...\"\n\nJulia interrupted her, \"Don't give me that crap. Now come on, try the tits first. Oh! No, wait!\" She said and turning, ran from the room. A few seconds later she bounded back into the room, huge tits bouncing, phone in hand. Opening up photos, she brought up a pick of two women sitting by a swimming pool. They were both on their knees, sitting back on their feet but leaning forward to kiss. Both women were wearing one piece bathing suits but the tops were pulled down allowing their breasts to spill out and touch. The woman on the left was busty but the woman on the right was in a whole other league entirely. Mary couldn't even begin to guess what cup size she might have been or where she could even buy a bra. \"That one.\" Julia said with a grin, naturally indicating the one with the colossal tits.\n\n\"Like that?\" Mary said, taken aback. \"She looks absolutely ridiculous. And by the way, what are you doing with this on your phone?\" She waggled the phone and it's accompanying porn under Julia's nose.\n\nJulia actually laughed at that. \"The Queen of Pervs turns me into a walking wet dream and now she want to make fun of what I get off to when I'm alone? That's funny! Now,\" she grabbed the phone and held up the photo. \"That body. Try it.\"\n\n\"Really?\"\n\n\"Oh come on! Please! At least try it for today. If you really don't like it you can always change back.\" Then a little gleam came into her eye and she slid closer to Mary. Slowly, almost casually, she reached up to circle one of Mary's nipples lazily with a fingertip. \"But I'm betting I can make you very,\" she leaned in closer and pinching the nipple, whispered into Mary's ear, \"very happy in a body like that.\"\n\n\"You're so bad.\" Mary said, her voice becoming thick with lust. \"Ok, I'll try it for you, but no promises on how long I stay like that.\"\n\nComing face to face with Mary, Julia stood up on her tiptoes and kissed her on the lips. Casually slipping her tongue deep into Mary's mouth for a moment before pulling back. \"Whatever you say Mistress, but once I show you what we can do together with me looking like this and you looking like that, you won't want to ever go back.\"\n\nShe's probably right about that. Marcellene said into her thoughts, Judging by that look in her eye, you probably won't get any sleep for at least a month. But I guess that's what you get for turning your new girlfriend into a nymphomaniac.\n\n\"Oh shut up.\" Mary muttered.\n\n\"What?\" Julia asked.\n\n\"She's being snarky again.\"\n\n\"Oh. I'm beginning to think I would like to meet her. She sounds pretty interesting. What was she saying?\"\n\nMary snickered, \"She was just commenting on how I'm not going to be sleeping much now that I've turned you into a nympho.\"\n\nJulia snapped her fingers and pointed and Mary, \"Hey that's right! You need to be like me too! Before you do the body, you need to do that super-duper sex drive boost thingie you did to me!\"\n\n\"That too?\"\n\n\"Yeah! Oh, trust me Baby, this one will be worth it. You won't believe the difference. It was frigging a...ma...zing! I have never cum like that in my life!\" She came over behind Mary and turned her to face the mirror over the sink. \"Ok, sex boost first. Let's go, no more stalling.\"\n\nResignedly, Mary tried to set her mind in order. She looked at her reflection in the mirror and then much as she did yesterday with Julia, she pictured all her erogenous zones as highlights on a schematic diagram of herself. She imagined turning up the brightness, making all the hot spots blazing and making the cool spots warm. Holding the image in her mind's eye, she superimposed it over her own image in the mirror then pushed them together. \n\nThe air around her shimmered. \n\nMary felt a ripple of, something, run quickly through her body, then nothing.\n\n\"Well?\" Julia asked, still standing behind her. \"I felt something... odd. Like the air in the room shook or something but nothing actually moved. Weird. Was that you?\"\n\n\"Yeah. And I felt something. I don't know if it worked though. How do I tell?\"\n\nA wolfish grin spread across Julia's reflection in the mirror. Wordlessly, she slid her hands up under Mary's breasts and took her nipples in her fingers. At the first touch Mary groaned at the sensations that flowed from her breasts. When Julia's fingers started rolling her nipples Mary cried out with the startling jolt of pleasure.\n\n\"Oh dear Goddess!\" She moaned when she could catch her breath. \"It's never been like this!\"\n\n\"I know. I told you it's amazing.\" Her hands slid away and she moved back a pace. \"But first, you have something else to do.\"\n\nMary almost dropped to her knees at the sudden lack of contact. It had felt so good. \"Oh, you naughty little bitch.\" She breathed.\n\nJulia's wicked smile was back, \"Don't worry Mistress, your little Pet will give you what ever you want as soon as you give her a little present.\"\n\n\"Alright.\" Mary faced the mirror again. Looking down at the photo again, she fixed the image in her mind then looked at her own image in the mirror. She was about to try the superimposing trick again when she recalled how she had accidentally changed Julia just by wanting the change. Was it that easy? She looked at the photo again and said, \"I want my body to look like that.\"\n\nThe air shimmered.\n\nMary felt that same surge of energy course through her only much more intense this time. It felt as if she had been dunked in both freezing cold and steaming hot water at the same time. Her entire body felt charged for an instant before the sensation left her in a rush. She fell forward, catching herself on the counter and staring down into the sink. After a couple breaths she realized that her body suddenly felt very different. Somehow out of balance and... heavier.\n\nBehind her, Julia gasped, \"Holy fuck! It actually works! You're like... well, look at you!\"\n\nLooking up into the mirror, Mary felt an electric thrill of shock run straight up her spine and she squeaked in surprise. The woman looking back at her in the mirror was no longer her. Or at the least, not totally her. The face was the same but the body... holy moly, the body. Yikes. Curvaceous didn't even begin to cover the woman that was on the other side of the looking glass. Her breasts were beyond huge bordering on colossal capped by huge nipples that were incredibly dark, long and thick. Her waist was slim by comparison but was still probably several inches bigger than she had been, Her stomach flat and toned and her hips wide and curvy. Twisting about, she could see that her backside easily matched the rest of her ridiculous proportions. ",
        "\"I look completely preposterous like this. I seriously hope you don't expect me to go out in public like this.\" Mary stated flatly. \"I look like an escapee from a hentai flick.\" She lifted her monstrous tits with her hands, a little surprised at how heavy they were. Just the act of holding the orbs with her own hands was enough to send ripples of pleasure through her and Mary had to suppress a little groan. This new hyper sensitivity to stimulation was going to take some getting used to. \n\n\"What do I expect?\" Julia slid up beside her and ran a finger teasingly down the side of Mary's breast. \"What I expect,\" she said in a voice that could easily have charged $4.99 a minute, \"is that you're going to take your Pet into your bedroom, throw her on the bed and make her fuck your brains out all weekend.\"\n\nAnother ripple of shock ran through Mary at Julia's wantonness. Goddess but this woman was seductive. How had Mary never noticed how hot she was before? \n\n\"I think she likes being your Pet.\" Marcellene said, her voice sounding wry, \"Lucky for you. You got a woman that's already naturally submissive in bed. You don't even need to make her enjoy being controlled.\" \n\n\"Yeah, I can see that.\" Mary muttered even as heat flared in her sex at the idea of doing just what Julia had suggested. The image of Julia spread out on her back, her face between Mary's thighs, her own fingers rubbing furiously at her own clit while that incredibly long tongue plunged deep into Mary's... \" She moaned at the thought. \n\n\"What was that, my Love?\" Julia said softly, \"Oh, were you talking to that other woman in your life?\" \n\nAs Julia spoke, her talented fingers found one of Mary's big nipples and was lazily tracing circles around the large, dark areola, making Mary squirm. The sensations coming from her breasts at that moment were far more intense than anything she had ever experienced from them before now and Julia was barely even touching her. She wondered what it would be like to feel Julia's luscious lips wrapping around her nipple, pulling it in, her velvety tongue stroking it... she moaned again. \n\nBeside her Julia purred, \"You know it occurs to me that if she sees everything you do, she's right there when we're having sex, right?\" Not waiting for an answer she continued, \"So that makes it more like a three way.\" She pinched Mary's nipple and started rolling it slowly, \"That's actually kinda hot, having another woman in there with us. Maybe we should think more about that. With your new power, just think of all the fun we could have.\"\n\nThe vision of Julia lying before her with another woman flashed through Mary's mind like a bolt of lightning and she sucked in a startled breath. Julia was right, with her power she could to that, they could do that. The two of them could go out tonight to dinner, a movie, the mall... anywhere, and pick up another women or two and bring them home and... oh dear Goddess, Mary thought, what is happening to me. These thoughts are so wrong but.... but.... the image of walking through the mall, seeing two young college girls shopping for clothes and Mary casually strikes up a conversation about one of the items they are looking at. A little mental push and they are more friendly, another push and they are into girls, a little more and they are very friendly, one more push and they are submissive... it was as if something snapped inside Mary's mind. She let out a little cry as a jolt of white hot rapture shot through her. Distantly she hear Marcelllene cry out at the same instant and it made the experience even more exquisite. Control. Yes, Mary had control. \n\nMary spun around to face Julia. Reaching to the back of her head, she took a handfull of Julia's silky black hair and pulled the smaller girl to her, their lips meeting in a fierce, passionate kiss. Mary felt Julia's tongue snaking into her mouth while the girl moaned softly. An idea flashed in Mary's mind and before she could even really consider it, she felt the air shimmer and her body tingled. She smiled wickedly, this was becoming easier every time.I hardly even thought about what I wanted that time and it just happens. \n\nSliding her hands down to Julia's hips, with her newly enhanced strength, she effortlessly lifted Julia up and hugged her into further their kiss. Julia gave a little squeak of surprise and being lifted so effortlessly by Mary but adapted quickly. She wrapped her arms and legs around the taller girl and clung to her, returning the kiss. \n\nThe feel of Julia's large breasts crushed into her own massive new boobs was completely foreign to Mary but also deliciously intoxicating at the same time. She could feel Julia's hard nipples pushing into her while her own nipples slid and rubbed against Julia's soft, velvety skin. She began to think these colossal new tits might be here to stay. \n\nHolding the smaller girl in place easily with one hand, Mary slipped the other hand down and under. Without any preamble, she pushed two fingers deep into Julia's dripping pussy. Julia let out a shriek of surprised bliss and arched her back as her hips thrust down, trying to impale herself harder on the invading fingers. A few quick, hard thrusts from Mary and Julia was screaming with rapture, her hips rolling and her sex quivering. The girls powerful thighs tightened their grip around Mary's waist until she thought the smaller woman was going to be crush her in two. \n\nEnjoying the way the girl's small body felt against her and enjoying the way her tight pussy enveloped her fingers even more, Mary simply held her there for a couple minutes while Julia bucked and rode the fingers that were filling her. When Mary sensed that Julia was about to slip over the edge, she said, \"Look at me, my Pet.\", her voice thick with passion. \"Look right into my eyes.\"\n\nObediently, Julia opened her eyes and did as she was told. \n\n\"Good girl.\" Mary hissed, leaning close, \"Now be a good little Pet and cum for your Mistress.\" \n\nTo Mary's delight, her lover did exactly as she was commanded. The small body went taut as drum for an instant before, with a feral cry, Julia came in Mary's arms. Even with her new strength, it was still hard to hold onto the smaller woman as she bucked and shook for a surprisingly long time.\n\nAfter a few minutes Julia's movement slowed and she clung to Mary, trembling slightly and whimpering softly. \n\n\"Was that good, my Pet?\" Mary asked softly, kissing the side of Julia's neck. \n\nWordlessly, Julia nodded and grunted a weak little affirmative. \n\nMary gave Julia a smack on the bottom, making the girl squeak in surprise. \"That's not how a good little Pet answers her Mistress, not is it?\"\n\nJulia's body shivered and she said, \"No Mistress.\" \n\n\"That's better. Now, answer my question.\" \n\n\"It was very good Mistress.\" Julia's voice was soft but thick with passion. She clearly was enjoying being Mary's 'Pet'. \n\nMary found she was thoroughly enjoying being Julia's Mistress as well. Distantly. Again she wondered how much of it was her and how much was the ring but that thought was pushed back by the heat between her thighs. \"Tell me how it felt. Look your Mistress in the eyes and tell her how hard she made you cum.\"\n\nJulia, her face turning bright red, looked into Mary's eyes and whispered, \"It felt so good when you just pushed into me. I'm so sensitive now that I almost came right then. Then you started finger-fucking me and it was even better. Then you said to cum and it was so hot and it was like my body wanted to obey so I just came.\" \n\n\"Good girl. You're supposed to obey your Mistress. After all, she is the one that can control you.\" Mary said, running a finger slowly over one of Julia's new tits. \n\nThe implications were not lost on Julia and she shivered and moaned, \"Yes Mistress.\" \n\nLooking into Julia's eyes, she pinched her nipple, making the girl gasp. \"Do you like being controlled Julia?\" \n\nTurning an even darker shade of red, Julia shuddered and whispered, \"Yes Mistress.\" \n\nMary gave the nipple a little twist and said, \"Good.\" Still holding her, she walked into Julia's bedroom and tossed the smaller woman onto her bed. \"Now lie back, my Pet. It's time for you to please me.\"\n\nObediently, Julia scooted to the center of the bed and lay down, allowing Mary to crawl over her. Gripping the headboard, Mary lowered herself down over Julia's face. Looking down, Mary almost came just at seeing the look of intense lust burning in Julia's coal black eyes. She wondered if the same look was burning in her own eyes. \"Eat me.\" She commanded. \n\nInstantly, she felt Julia's long tongue snake out and tease her swollen outer lips before slipping between her warm, wet folds. Faster than she would have imagined possible, Julia's tongue was sending waves of pleasure flooding through her body and she was moaning and crying out incoherently. Her hands clenched the headboard while her hips thrust and ground against Julia's face. Looking down she was amazed to see how her colossal new breasts bounced and swayed with the motions of her body. She raised a hand and cupped one of the huge orbs and was again amazed at both the weight and at how sensitive the skin was. She moaned again even louder. \n\nJulia looked up at the moaning and seeing what Mary was doing, reached up with one hand to fondle the other breast. Her small fingers found Mary's big nipple and she pinched it, hard, making Mary cry out. \n\nMary's hips were working without her thinking now. They rolled and thrust down, trying both to rub her clit against Julia's lips and pull her amazing tongue even deeper. Mary managed to hold out for a few minutes but eventually the swirling tongue found a sensitive spot and with just a few quick strokes it was finally too much for Mary. The floor dropped out from under her and with a shattering cry, she plunged headlong into a roiling, thrashing sea of ecstasy. \n\n<center>* * *</center>\n\nPart Two ~ A Chance Encounter\n\n\"So, I have a question for you.\" Mary said to Julia who was seated across the small dining table. As she spoke she idly waved a fork with a piece of waffle on it. \n\nIt was Monday and glorious bright morning sunlight was again streaming through the glass patio doors and flooding through the large open main room. After seeming weeks of constant rain Mary was almost bubbly with glee at the prospect of going outside on her day off. Julia, by contrast, had to go to work today and didn't seem nearly as excited. \n\n\"Yeah?\" Julia mumbled around her own bit of waffle.\n\nMary looked down at her plate for an instant and hesitated. Without looking up, she asked, \"Does the whole... um... 'Pet' thing bother you. Because I can stop.\" She toyed with her food for a moment, \"I don't even really know where I get it from. I guess... I... it just sort of comes out when I, you know, get turned on.\" She looked up at Julia, \"When I see you getting all turned on.\"\n\nI was now Julia's turn to look embarrassed and stare at her plate. \"I, uh, I kinda like it actually. Like...\" She looked up and bit her bottom lip and blushed bright red then looked immediately back down. \"I mean I like it, like... a lot.\" She appeared to hesitate then continued, \"I mean I like the whole 'Mistress and Pet' thing. I like you telling me what to do, making me obey and even spanking me a little was pretty hot,\" Her voice got harder and she looked up, meeting Mary's eye. \"But if you're thinking you're going to start using whips and chains on me or tying me up or ball gags then we're going to have real problems. That's... that's just a major, major nope.\" \n\nHonestly, the whole S&M thing was a little weird to Mary anyway. While she did like smacking Julia's plump ass, she really couldn't see herself going any further than that. \"I understand. I don't think you have to worry about me trying any of that on you. It's a little too... well, just don't worry.\" Mary paused for a second and looked at Julia, feeling a stupid little grin creeping across her face and hating herself for it but try as she might, she couldn't help it. \"But you like the rest of it?\"\n\nMary didn't think it was possible, but as she watched, Julia blushed an even more furious shade of red. Mary was a little amused to see that now even her ears were turning red as she muttered, \"Yeah. I'm actually getting super wet right now just talking about it.\"\n\nIn her mind she imagined her stupid little grin getting even more foolish but out loud Mary asked, \"You are?\"\n\n\"Yeah.\" She looked up at Mary and gave her a little lopsided grin, \"So knock it the fuck off! I have to go to work today and I don't want to be wearing wet panties all day.\" She wadded up her napkin and threw it playfully at Mary. \"You've been screwing my brains out for two days now. Three if you count Friday night so chill your raging libido. I don't have the day off like you so today you'll just have to amuse yourself somehow.\" Her eyes glanced down at Mary's massive breasts and the little grin turned wry, \"I'm sure you'll think of something.\"\n\n\"Yeah, I'm sure I can come up with something.\"\n\nForty minutes later Mary heard Julia's Volkswagen GTI go ripping off up the driveway and she was alone for the day. Since it was the first actual spring like day in weeks, Mary decided to do some spring cleaning. She wasn't really a neat freak but she did like having the place at least presentable. Also, it gave her an excuse to open all the windows and air the place out. The entire condo practically reeked of sex and with good reason. Over the past two days Julia and her had been engaged in every room and on practically every flat surface in the place. And truthfully she admitted, even a few surfaces that weren't really flat. That little tryst on the bathroom sink had been sexy with the mirror behind them but she still had a bruise on her back from the faucet handle. Thinking about the bruise, her hand went to it reflexively, probing the wound, seeing if it was still tender.\n\n\"You could just heal that you know.\" Marcellene's voice echoed through her head. \n\n\"There you are. I've been wondering where you disappeared to!\" Mary said to the empty room. \n\n\"I'm still here. It's not like I have anyplace to go.\" She gave a rich, throaty chuckle, \"Besides, I've just been enjoying the ride, so to speak. Your lover has quite a lot of energy. You two have been going at each other for days. I lost count of the number of climaxes we've had.\" \n\nMary felt her insides twitch a little. \"So you really feel whatever I feel? You have an orgasm whenever I do?\"\n\n\"Yes, we are bonded. I experience everything you do. Well, mostly. I can somewhat detach myself if I wish to.\"\n\n\"Detach yourself?\"\n\nMarcellene was silent for a moment and Mary could almost see the sorceress in her mind, hand on her chin, considering her next words. \"I guess the best way to describe it would be like comparing it to riding in a car. Your body is the car, you're the driver and I'm in the front passenger seat. You are in control, alI I can do is sit there and watch the world go by. Oh, sure, maybe I can play with a few things, open a window, change the radio station, turn on the AC, maybe even yank up on the parking brake. But you're the one really in control. If I want to get away, I can slip into the backseat. I can't 'see' as much from there but can still look out. If I want to get further away, I could crawl into the trunk. I can't really see at all in there but I'm still there. I can feel the car moving, I can hear the road, if the car bounces, I can feel it. She paused, \"Does that make any sense?\"\n\n\"Yeah, actually it does. So... wait a minute. How do you know so much about being in a car? Or a modern car with a radio and air conditioning? I thought you were burred in the mud for years?\" Mary asked. \n\nWe are bonded. I know everything you know\" \n\n'\"Yeah, I guess you already mentioned that but it didn't quite register at the time. So how come you know about cars but you didn't get my Harry Potter reference the other day?\" \n\n\"A Lifetime's worth of knowledge take a while to sort through. I'm still sorting many things out.\"\n\nMary snorted. \"Yeah, I guess there is a lot to deal with all around. So do you know everything about me by now?\"\n\n\"Well, I can access all your memories, so to speak but that doesn't mean I know everything. As I said, an entire lifetimes worth of memories is a lot to take in. If you point me in on the path of something specific or mention something, I can think of that almost the same as you do and the memory will be there.\" She paused, \"It's a little hard to explain. It's a little like trying to explain how you remember the lines to a song. It's not something you have at the front of your mind all the time, but when you want it, the knowledge is there.\"\n\n\"Ok, so you can read my memories. That's... well, honestly it's a little creepy but I don't suppose there is much I can do about it now. Right?\"\n\nNot a thing.\n\n\"You know, the more we speak, the more I'm noticing that you're even starting to talk a little like me. You're sounding like someone from, well, now. Not from like eons ago.\" \n\n\"We are bonded. As that bond deepens over time, The line where I end and you begin will begin to blur.\"\n\nMary wasn't so sure she liked the sound of that. \"What do you mean 'blur'? I'm going to start becoming like you?\"\n\n\"No, sorry Mistress, that was not what I meant. What I meant was that what Iam will blur. I will start to become more like you. You are the master here. It is my being that will be molded around you, not the other way around.\"\n\n\"That honestly doesn't sound much better. It's like you're looking yourself to me.\"\n\nI appreciate your concern Mistress, but there is nothing or I can do about it, and it is something that has happened many, many times over the centuries.\"\n\n\"So, you've already changed? This isn't who you always were?\" \n\n\"I don't believe so, though it is hard to say. The changes are slow and occur over years. I have often wondered if this still close to who I really am, who I used to be, or if I was someone completely different. Sadly, I suspect I will never know who I really used to be. I think that woman is now long dead.\"\n\n\"That... horrible.\"\n\n\"Do not worry for me Mistress.\" Marcellene said and Mary could almost see her shrug. \"It is the way of it and neither you or I can change it.\" \n\nMarystill didn't like it but she supposed Marcellene was right, there likely was nothing she could do about it. \"Mmmm.\" Mary felt her lips compressing into a hard line then realized that there was no one in the room to see her facial expressions and almost laughed. This talking to an empty room took some getting used to. One of the other things Marcellene said came back to Mary and she asked, \"Ok, so back to something you said earlier, you said you can do a few things or make a few changes while you're riding in the passenger's seat. 'Change the radio station, turn on the AC' or something like that, right?\"\n\n\"Yes.\"\n\n\"So, what can you change in me? And have you, uh, you know, changed anything?\"\n\nMarcellene hesitated and Mary became wary. \"Marcellene?\"\n\nSlowly, the voice in her head said, \"I don't really know. I didn't ever mean to change you. But maybe...\"\n\n\"Maybe what?\" Mary's voice had a bit of an edge now. \n\n\"I am beginning to suspect that during our bonding and then in that time together at the Temple of temple, I may have... altered you... slightly.\"\n\nVery slowly, Mary said, \"What did you do to me?\"\n\n\"Understand, I didn't plan on doing it. I didn't even realize at the time that I was. But thinking back,\" she paused, then said slowly, \"I may have made you a bit more dominant. A bit more, ah, let's say 'receptive' to the idea of becoming a Mistress.\"",
        "Mary's eyebrows came together in a scowl. \"A bit more receptive to being a .... Really?\"\n\n\"I was nervous that you would not take well to having so much power over other people. I could easily see through the bonding that you were not a naturally self confident or assertive person and the thought occurred to me that I could ease your transition and make you more comfortable with the changes by making you a bit more... assertive.\"\n\n\"'Not self confident or assertive'. Wow, this is sounding more like a bad performance review at work. Thanks, this really helps.\" Mary bit out sarcastically. In truth, she knew that Marcellene probably wasn't that far off the mark. She never had been all that self confident and she had definitely never been very assertive, but to hear it said out loud and especially by someone she really just met stung. A thought clicked, \"Wait, ok, I get that I was never really assertive or confident. You're probably right. But, how do I know that? If you changed me shouldn't it be like when I changed Julia, she didn't realize it? The only reason she knows now is because I told her. I mean, I know you just told me, but shouldn't I not believe you like Julia didn't believe me at first?\" She paused and gave a little laugh, \"Did that even make any sense?\"\n\n\"Yes Mistress, it made perfect sense and no, I can only make small changes in you because I am part of you now, not because of the power of the ring. That is, well, not quite separate, but not really the same either. I'm sorry, it is a little difficult to explain.\" She stopped for a second to collect her thoughts. \"I can change small things in you because I am in your mind. Essentially a part of you now. But I cannot effect the physical world. I can only touch your mind. It's not the same a you using the ring's power.\"\n\n\"So you can make me do things, but not do them yourself. Does that about sum it up?\" \n\n\"Essentially, and only small things, but yes.\"\n\nMary's lips curled into a crooked grin, \"So making me enjoy being Julia's Mistress is a small thing?\" \n\n\"Essentially, yes. All I did was make you more assertive and self confident. Small tweaks to your personality. The 'Mistress' part was an unforeseen consequence.\n\n\"Ok, well going forward, please talk to me before you go messing around in my head.\" Mary's voice was surprisingly calm but had an edge of steel to it. \"I don't need you trying to make me a little more aggressive to win a card game and turn me into a chainsaw murderer as an 'unforeseen consequence'. Understood?\" \n\n\"Yes Mistress.\" Marcellene's voice was soft and contrite. \"I do apologies for what I did. It was not my intent.\"\n\n\"I know. But lets talk about it next time.\" \n\n\"Yes Mistress.\". \n\nA while later Mary was just finishing up vacuuming the living room when there was a knock at the door. Opening it Mary found the UPS delivery woman waiting for her. With a little smile and quick hello, the woman handed her a package and the tablet for signature. Mary hadn't ordered anything but she assumed Julia had so she signed without even looking. It wasn't until the door was closed behind her that she realized that the package wasn't actually for either of them. It was for a woman named Alissa West. but the packaged had been addressed to their condo, unit number three. Mary figured she must be somewhere else in the complex but she couldn't recall anyone by that name. A thought occurred to her that it was probably woman who just moved into unit number thirteen. The \"Unit 3\" on the package was likely a typo and just missing it's '1'. \n\nShe slipped on a pair of sneakers and walked across the grounds to number thirteen. The parking lot was almost empty at this time of day since almost everyone in the complex was some kind of professional or trade. There was only a couple small families and only two stay at home moms that she knew of. \n\nAn old, silver Jeep Wrangler was parked in front of unit thirteen so she thought that perhaps someone may be home. She didn't know the woman who lived here yet but she had seen her a couple times from across the parking lot. She looked to be about Mary's age, low to mid twenties, and about her build. Well, about her build before she thought with a glance down at the vast swell of her new boobs. She smirked a little at the way they bounced and swayed as she walked, their heavy motions obvious even under the baggy sweatshirt she was wearing. \n\nMary had found that just as Julia's clothes and even old photographs had changed to reflect the changes that had been made to the young woman's small body, so to the world adapted to the changes in Mary. It had been both startling and oddly exciting to find that her lingerie drawer, formerly filled with size 6 panties and 36C bras, was now filled with size 12 panties to accommodate her wide hips and 36G bras to support her huge new assets. Holding up the massive lace cups she was amused to notice that they had five hooks on the wide back strap. Well, she guessed it was supporting about thirty pounds of boob so that about figured. Briefly she had wondered if she would develop back problems because of her new girls but pushed the thought aside. She hadn't even decided if she was going to stay like this. She rather thought Julia enjoyed her liked this but she still thought it was too much. She liked the curvy new hips and fabulous ass, but the boobs were a bit over the top. She thought maybe she should take them down a size or two. Pushing aside the thought for the moment, she mounted the steps and punched the doorbell. \n\n\"Hold on a sec.\" came a faint, muffled voice from beyond the door. Mary waited patiently while much more than a second went past, then a little more until finally after a couple minutes, the door was flung open and a young woman stood there wrapped in a large, fluffy blue towel. \"I'm sorry I was just...\" The woman started to say but when she saw Mary she let out a startled sounding \"Oh!\" and took a step back, closing the door a little. \n\nIn response to the somewhat ambivalent greeting, Mary quirked one eyebrow and gave her a little lopsided grin. \"Hi.\" She said, trying hard to keep the amusement from showing in her voice. \"I think this is yours. It got delivered to my place a few minutes ago. That is if you're Alissa West.\" As she spoke she gave the woman a quick once over without being too obvious about it. \n\nShe decided her earlier guess of about age and build was close but maybe a bit off. She looked to be a bit younger, maybe early twenties and she was a bit taller than Mary by a solid three inches. The woman was very cute in a girl-next-door kind of way with amazing copper red hair that looked to come about halfway down her back, though that was a little hard to determine with the woman now hiding partway behind the door. Her eyes were a brilliant green and her cheeks and the upper part her chest were covered with an adorable smattering of freckles. \n\nMary just stood there for a moment holding the package out until the woman finally gave a little laugh. \"I'm sorry, it's just, well, you see I was expecting my sister to arrive soon and I thought it was her.\" She took a step out from behind the shelter of the door and gestured at the towel, \"It's just I'm not usually in the habit of answering the door wrapped only in a towel but I was just about to step into the shower.\" The woman's voice was rich and throaty with a distinct southern drawl though Mary wasn't well traveled enough to be able to tell what region of the south she might be from. \n\nSmiling, Mary said, \"Doesn't bother me if it doesn't bother you.\" She pointed over towards her own condo, \"I'm a woman, I have a sister, my roommate is a woman, so I'm kinda used to seeing women walking around in towels. No biggie.\" But actually, I'm still rather enjoying how you look in that towel. Mary thought but of course didn't say. Holding out her hand, she said, \"I'm Mary. Nice to meet you and invade your privacy.\"\n\nThe woman laughed again, this time sounding a little more genuine. \"I'm Alissa West, but I guess you already figured that part out.\" She said, pointing at the label on the box. Sorry about the mix up and the cool welcome.\" She smiled a broad, dazzling smile, \"I usually make a much better first impression.\" \n\n\"I would have to say I've had better, but I've had worse too so we'll call this one a draw.\" Mary smiled, trying to will her eyes not to look the woman up and down again, \"So, you just moved in?\" \n\n\"Yeah, just moved up here to Massachusetts last week. I'm starting a new job next week at the Oceanographic Institute.\" \n\nMary was impressed. The Institute was a world class research center. It wasn't exactly her field of study, but from what she had read, only the best in the field got hired there. She looked at Alissa again more critically, \"Are you doing an internship there?.\"\n\nAlissa laughed, \"No, I'm long past my working for free days.\" \n\n\"Oh.\" Mary said, a little surprised. \"Sorry, I had you pegged as a college student.\" \n\nAlissa laughed again, \"No, but I get that a lot. I look young I guess. I'm actually twenty nine. But I am still a student, of course it's post grad now. \n\n\"Wow, I never would have guessed that, you look a lot younger.\" She paused then changed the subject slightly, \"So, I'm assuming you haven't actually started work yet since it's the middle of the morning and you're standing around talking with strangers dressed only in a towel? Why don't you come over tonight? You can meet my room mate Julia, we'll get some take-out, maybe watch a movie or something. Kind of a meet the neighbors thing.\" \n\n\"Um, sure. I guess that would be fun. I don't really know anyone in town yet so meeting some new faces would be good.\"\n\nSmiling, Mary said, \"Perfect. About six? Julia should be getting home around then.\" \n\nAlissa smiled and Mary felt her insides leap a little. When she smiled her whole face practically lit up. She is adorable. Mary found herself thinking. \n\n<center>* * *</center>\n\nA few hours later the front door opened and Julia walked in, dropped her purse and computer bag down on the counter and without preamble, flung herself into Mary's arms. \n\n\"Woah!\" Mary exclaimed, laughing as she just barely caught the smaller woman. \"I guess you missed...\" The rest of her words were cut off and Julia planted her soft lips on Mary and kissed her fiercely. Mary allowed her lover to kiss her for a few minutes, thoroughly enjoying the wonderful feel of the woman in her arms.\n\nEventually Julia's hands started to wander and with an iron will, despite the pleasant glow beginning to spread through her body, Mary gently set Julia down and pushed her away. \n\n\"What?\" Julia said, looking more than a little disappointed. \n\n\"We have company coming over tonight.\" \n\n\"You made plans? What? Who?\" Julia said, looking a little miffed. \n\nOne of Mary's eyebrows quirked up. Oh, she was going to pout, huh? Mary thought, Well, if she wants to play games... She straightened to her full height, thrust out her heavy breasts an glared down at the smaller woman. With some steel in her voice she said, \"Is that how you talk to your Mistress?\"\n\nThe change in Julia's whole manner was instant and to Mary, a little bit shocking but also very exciting. The young woman before her went from almost petulant to embarrassed and subservient in an instant. She looked down, bit her lower lip and clutched her hands behind her back, fidgeting. She looked for all the world like a little girl who just got caught cheating on a test and was now standing in front to the school principal. \n\n\"Well?\" Mary asked. \n\n\"No Mistress.\" Julia mumbled. \n\n\"That's better. Now, why don't you be a good little girl and go get ready. Alissa will be here any minute now. And of course you'll have to stop acting like that for now. We don't want to scare her away in the first three minutes. \n\n\"Yes Mistress.\" She paused, then said, \"I mean, ok. Yeah. And who is coming over?\" \n\n\"Alissa West. That new woman that just moved in a few buildings over in number thirteen.\"\n\n\"The redhead?\" Julia asked a little too eagerly. \n\nMary couldn't hold back a smirk. \"Yes, the redhead.\"\n\n\"Did you make any, um, suggestions?\" Julia asked with a wicked little smirk. \n\n\"No. And here I thought you said I was the love of your life.\" She said in mock indignation. \"One weekend and you're all ready to jump into another pair of panties.\" She sniffed, \"So, who is being the pervert now? Huh?\" Mary waggles a finger at Julia, \"You can just keep your raging libido in check there Missy. We'll see how the evening goes.\"\n\nTruthfully, Mary still didn't know exactly what she was really planning for tonight. She didn't even really know why she had asked the woman over in the first place. It had just seemed like the thing to do at the time once the woman was in front of her . She was a little nervous to think that maybe the idea had come more from the ring than from herself. A knock at the door interrupted that line of thinking. \n\n\"Guess who...\" Julia said, heading for the door.\n\n\"Well, someone is looking forward to tonight.\" Marcellene's voice echoed though Mary's head. \"You may have done your work a little too well with that one.\"\n\n\"I don't even know what I really did. I just wanted to boost her sensitivity so sex would be, you know, more fun. That was all. This...\" She gestured after Julia, \"was not what I had intended.\"\n\n\"Then you need to learn to be more careful with your wayward thoughts and wishes. I think the thing that changed her was when you were just about to tell her all about your new powers. You muttered something about 'Please be ok with this.' or something like that and there was a change. The question is, what were you thinking when you said that?\"\n\nPausing to think, Mary tried to recall what had been running through her mind. \"I think I was thinking that I hoped Julia would be alright with the changes I had made with her and with my new powers.\" She closed her eyes, trying to bring the moment back in her mind. \"I was thinking...\" The memory clicked and with a sudden realization, Mary groaned. \"Oh, no. I had just thought about how I could manipulate and control her and she'd like it. But I also was thinking about other women, changing and controlling them as well. Also that thing you said about how the old ring masters used to gather vast harems of beautiful women. Then I think I said, 'Please be ok with this.' or something like that.\".\n\n\"Well, you seem to have gotten your wish.\" Marcellene laughed, \"She seems to be looking forward to the idea of you controlling other women and maybe even building your own harem.\" She laughed again, the sound surprisingly musical in Mary's head. \n\n\"Wonderful.\" Mary muttered as she heard footsteps approaching. A moment later Julia followed by Alissa came into the kitchen. \n\nTaller than Julia by probably almost a foot, her long, brilliant copper-red hair was loose and pushed back over her shoulders framing her adorable befreckled face. She was dressed in grey leggings and a tight fitting black blouse that set off her hair wonderfully and did absolutely nothing to hide her slender figure. \n\nAlissa smiled and despite herself, Mary felt her insides melt. \n\n\"Dear Goddess, she's lovely.\" Marcellene whispered.\n\nMary couldn't help but agree. A glance over the woman's shoulder at Julia and she could see that she agreed as well. No, more than agreed, Mary thought. She could clearly see the lust burning in Julia's deep eyes and this time it wasn't aimed at her, at least not entirely. \n\n\"Thank you so much for inviting me over.\" Alissa said, coming over and holding her arms out to give Mary a friendly hug. Before Mary could even react, the taller woman had come up to her and wrapped her arms about her, pulling them lightly together. \n\n\"Well, someone is friendly.\" Mary heard Marcellene mutter wryly in her head as she felt the taller woman's small breasts pushed up against her own mounds. Even that slight contact was enough to send a wave of pleasure and longing washing through her body. Oh dear Goddess, what had she done. She glanced over at Julia and saw the smaller woman smirk knowingly. \n\nBacking away perhaps a little too hastily, Mary stammered, \"Yes, it's so nice of you to come. There aren't many other women our age in this complex and honestly,\" she cupped her hand to her mouth and whispered theatrically, \"most of the people here are pretty boring anyway.\" \n\nAlissa laughed, \"Well, hopefully you won't think I'm boring after tonight.\" \n\nFrom behind her, Julia piped up, \"Oh, I can almost guarantee that we won't.\" \n\nMary could see that Julia's little smirk of earlier was slowly changing to a wolfish, predatory grin. Nervously, Mary coughed and said, \"Yeah, I'm sure. So,\" She clapped her hands and rubbed them together, \"Pizza sound good to you? It better be if you're going to hang around with us, we practically live off it.\"\n\n\"Yeah,\" Julia said, \"We actually have a running tab down at the local pizza place. The owner knows us so well he invites us to his family parties.\" \n\n\"Really?\" Alissa asked.\n\n\"Sadly, yes.\" Mary confirmed. \"We just went to his daughter's eighteenth birthday party a few weeks ago. It really is kind of pathetic honestly. We almost never cook. The only thing in our fridge is drinks, snacks and anything that can be microwaved.\" She paused then added, \"And wine of course.\"\n\nLaughing, Alissa said, \"Of course. Well then maybe you can come over my place once I have everything set up and I'll do some cooking for you. I rather enjoy it and I'm told I'm quite good.\" Alissa said, giving their spotless and largely unused kitchen a glance. \"Or I could cook over her if you prefer. You have a lovely, big kitchen.\" \n\nJulia laughed, \"You better bring your own cooking utensils! I think the only things we own is a few pans, some tupperware, a can opener and maybe a spatula.\"\n\nNodding, Mary said, \"That's probably about right. We do kind of a lot of take-out here.\" \n\nWith her own smirk, Alissa said, \"Well, we can work on that.\" Looking back and forth between Mary and Julia, she asked, \"So, pizza?\" \n\nFour hours later Mary shut and locked the front door. Turning around she found Julia staring at her with a curious expression on her face. \"Yes?\" Mary asked. \n\nJulia looked at her silently for a few more long seconds before finally answering, \"Nothing. I was just... no, nothing.\" She turned and headed for the kitchen. \n\nMary sagged against the door and let out a quiet sigh of relief. The evening had been an odd one for her. Alissa was an absolute delight, both on the eyes and just to be around. She was an excellent conversationalist, very worldly, witty and most important of all, brilliant. After talking with her for a very short time, it hadn't surprised Mary at all to find out that Alissa was actually almost done with her Doctoral Degree. The primary reason she had transferred to the Oceanographic Institute was to continue work on her Doctoral Thesis. Something about deep sea bacterial growth around deep ocean geothermal vents. \n\nOr at least that was what Mary thought. Most of the conversation had gone over her head. Although she was a little surprised at how engaged Julia had been. Of course, Julia had always been interested in anything to do with the ocean so sue supposed it fit. \n\nAnd in all fairness to herself, she thought she may have followed the conversation better if she hadn't been so distracted by the woman who was speaking because in addition to her brilliant mind, Alissa was also lovely to look at. A fact that had been very hard for Mary to ignore when the woman was sprawled out on their sofa only a few feet away, her long shapely legs on perfect display encased in the skin tight leggings and her blouse riding up slightly exposing her flat, toned midriff. More than once she had caught Julia sneaking glances at Alissa while squeezing her thighs together or sneakily giving one of her boobs a quick rub or pinch. ",
        "Mary knew that Julia wanted her to just take Alissa but she just couldn't. At least not just like that. Not that she hadn't wanted to. Practically her entire evening had been consumed with ideas of what it would be like to take the woman to bed. To share her all night long with Julia. To sit back and watch her and Julia... \n\nShe shook her head and forced the image from her mind even as she felt the wetness in her sex increasing with her arousal. It was actually a wonder that her panties and even her pants weren't soaking wet considering how turned on she was right now and how much she had thought about sex all evening. In reality, much of the evening had been spent trying to control her thoughts and not change anything. A couple times she had almost lost control and once she thought she actually might have. She had been picturing in her mind the three of them together and she thought she may have let her mental control slip for an instant. At the time she couldn't tell if the shimmer in the air had been real or just in her overwrought imagination. Thinking back she thought it was probably just her imagination. Maybe. \n\nShe walked into the kitchen to find Julia sitting on one of the stools, completely naked and practically panting with need. \n\n\"Horny much?\" Mary asked with a grin. \n\n\"Yes.\" Julia said thickly. \"Please, take me.\"\n\nMary's arousal came back in a thick, hot, heady rush and she nodded. \"I think I will.\" Without another word she walked over to Julia and trailed a hand down between the small woman's thighs. \n\nJulia' legs spread eagerly and her hips rocked back giving Mary easy access. She let out a little squeak at the contact of Mary's fingers on the tender folds of her outer lips. The squeak quickly turned to gasp as Mary slipped first one finger, then two easily into the woman's soaking wet pussy. Within moments Julia was moaning and grunting, her hips rolling with the motions of the fingers inside her. She made a move to get up but with a strong hand, Mary held her down to the wooden stool. \n\nMinutes passed and Julia's moaning became keening little cries as she had her first climax. Her body bucked and shuddered against Mary's hands and her hips rocked and thrust frantically. After the surge had passed she made to get up but again Mary held her down and continued to work her fingers inside the woman.\n\nJulia gasped, \"Again?\" \n\n\"I like watching you like this.\" Mary hissed in her ear. \"I like feeling your tight little cunt squeeze my fingers when you cum.\" She pushed her fingers hard and deep while grabbing a handful of the girls hair and pulling her head back. She forced Julia to meet her eyes and hissed, \"Now cum for your Mistress.\" \n\nWith a wild cry, Julia did. Her entire body shook as a powerful spasm tore through her. \"Cumming!\" She screamed as she bucked again. Mary could feel the powerful muscles of the girls core tightening and loosening in a steady pulsing rhythm as the orgasm raged throughout her small body. She felt the hot, slippery wetness flood from Julia's pussy and soak the wooden seat under her tight ass as the sticky sweet sent of her womanly lust filled the entire room. \n\nAfter a few minutes Julia's passion cooled and she sagged against Mary, shuddering and moaning occasionally as her afterglow slowly faded. Mary was content to just stand and hold her lover, enjoying the feel of her body pressed against her own. \n\nEventually, Julia looked up and said quietly, \"I need to taste you.\"\n\nWordlessly, Mary picked up the smaller girl and carried her into her bedroom. She didn't think either of them were going to be getting much sleep tonight. \n\n<center>* * *</center>\n\nPart Three ~ A Quickie\n\nFor Mary. the next week was an odd juxtaposition of old and new. Her work was much the same as it always had been. Although she did notice the guys in the office giving her a lot more attention than they ever did before and she caught them sneaking glances at her breasts far, far more often than they ever had before. She actually thought she even caught Sally, the office administrator checking her out. An action that sent a little shiver of lust straight up her spine. With an effort, she resisted the powerful urge to do something about it. \n\nShe was finding that as time went on it was becoming both harder and easier to control the ring. Her direct control of the ring was much better now than it had been. Julia had allowed her to experiment on her earlier that week. Actually allowed wasn't really the right word, Julia had loved every second of being controlled and manipulated. She had been so turned on by the end of the session that she climaxed as soon as Mary kissed her.\n\nBut for all Mary's increased direct control, she was becoming increasingly aware that the ring also had, as Marcellene had warned her, a mind of it's own. Mary was finding that the urges to take other women were becoming stronger and much more difficult to resist.\n\nOn Wednesday she had to go out of town for work for work and by the late afternoon her libido was raging. She had gone back to her hotel after work and masturbated furiously for an hour or so and than had helped for a bit. But by dinner time her blood was up again. The waitress at the restaurant had been a pretty young woman, probably just out of high school and Mary had found herself fantasizing about taking the young woman back to her hotel and having sex with her on every bed, chair, table, and bit of open floor in her hotel room. \n\nIt was only with a steel hard resolve that she managed to get out of the restaurant and back to her hotel room without manipulating the poor girl. She had immediately called Julia and told her about it. What followed was Mary's first experience with phone sex and she was surprised how much it turned her on. It only got better when after a couple minutes, Julia got her onto Facetime and she could watch Julia masturbating for her. Entranced, she watched Julia's fingers plunging in and out of her own sex while she did the same. Listening to Julia's groaning cries of pleasure and her sultry voice, thick with passion as she described all the things she was doing to herself and all the things she wanted Mary to do to her when they saw each other again. Most vividly, she recalled Julia holding the phone up near her face, staring right into the camera as an orgasm finally ripped through her and she cried out Mary's name. The sight of Julia's beautiful face contorted in rapture was finally too much and Mary came with her.\n\nTheir phone sex episode had seemed to help for a while but by the next afternoon when she was driving home her need was back even stronger than before. The drive home was about six hours and for much of that time Mary found her thoughts wandering to sex, her ring and what she could do with it. Just a little after eleven in the evening, a few minutes from home, she stopped to fill her car's fuel tank which was on empty. She didn't really feel like doing it now but knew she would feel less like doing it at six tomorrow morning on the way to work. Pushing thoughts of hot, lesbian sex from her mind and trying to get a grip on her ragged breathing she got out of the car, very aware that her panties were completely soaked. \n\nThis late in the evening, the gas station was mostly deserted except for a old gray minivan that had clearly seen better days parked directly across from her at the next fuel island. It's owner must have been inside the store. \n\nMary got out and started filing her tank. After a minute, a pretty young mother lugging an infant carrier emerged from the store and walked towards the old minivan. She was small and cute with mousy brown hair blue eyes. She glanced at Mary and gave her a polite smile as she juggled the infant carrier in one hand and managed to open the back sliding door to the van. Turning, she slung the infant carrier into the backseat and as Mary watched, bent down to pick up something off the floor of the van, giving Mary and excellent view of her plump backside encased in yoga pants that hid nothing. \n\nMary felt her sex clench at the sight and immediately turned away, trying to change the direction of her thoughts. \n\n.I could take her. Her own voice flowed through her mind. It's not like she wouldn't enjoy it.\n\nOn their own and despite her best intentions, her eyes turned back towards the woman, eyeing her up and down hungrily, taking in the shape of her body. The curvy backside, the slight rounding of her belly where he hadn't lost all her pregnancy weight, the swell of her rounded breasts.... Mary's thoughts hung up on her breasts. Oh, Goddess, she was probably nursing. The thought of the woman's breasts being full of hot, sweet, milk jolted through Mary's mind and slipped past the ragged edge of her control. Mary looked at the woman as she closed the rear door and turned to the drivers door. She caught the woman's eye and thought. I want to see what that pretty face looks like when you cum. \n\nThe air between them shimmered.\n\nThe young mother let out a startled sounding gasp as her body shuddered. For a long moment she just stood there, one hand on the door handle, as her eyes slid closed. After a couple more seconds a little whimper came from her lips and her hips started rolling slightly as her free hand went to her breast. \n\nFrom ten feet away, Mary watched the lewd display with an equal mix of excitement and horror. Part of her couldn't believe what she had just done and the other part... well, that part couldn't believe what she had done either but for an entirely different reason. She was so turned on at that moment watching the display before her that she thought she might have an orgasm without even being touched. \n\nThe mother let out a little cry and dropped to her knees, one hand still clutching her breast, the other slipping under the waistband of her pants and down between her thighs. Mary could now clearly see spreading wet patches on the woman's shirt where her big nipples were now clearly standing out. \n\nShe's leaking milk. Ran through Mary's mind and with that thought, she came with an entirely unexpected, heady rush. The climax hit her so suddenly she cried out and fell against her car, catching herself half way down as fire burned through her. Leaning heavily on the car, gripping the open fuel door for support, Mary moaned and shuddered as rapture sizzled in her veins. The climax had been so fast and without build up that it was a little difficult for her mind to even register that had happened. \n\nThe young mother had been so lost in what was happening to her body that she either didn't realize or had just forgotten that she had an audience but Mary's sudden movement changed that. The woman looked directly at Mary and saw she was being watched but that knowledge didn't really seem to matter as her hands continued to work in time to her raging passions. Locking eyes with Mary, her face heating to an intense red with her embarrassment, the woman came with shriek. Her back arched and as she pushed her hand deep between her legs, at the same time thrusting out her swollen tits and savagely pulling on one nipple through her now soaking wet shirt. The wet stains on the summits of her breasts spread as her milk let down with her climax. Another thrust between her legs and another cry, followed by another until finally the woman sagged against the car, totally spent. \n\nMary, felling her own glow still flowing through her, thought You enjoyed showing me that. You thought it was incredibly hot to cum with another woman, especially me.\n\nThe woman looked over at Mary and smiled at her. Still panting she asked \"Enjoy the show?\" \n\nNow feeling her own cheeks heat with embarrassment, Mary said , \"Yeah, you were really something.\" \n\nGetting up shakily, the young mother grabbed the door to her van and pulled it open. She paused for a second, looked back over her shoulder at Mary, pulled a scrap of paper out of her purse and scribbled something on it. Quickly, she turned and handed the paper to Mary, meeting her eyes shyly, her hand touching Mary's and seeming to linger there for a long moment before turning away, getting into her car and driving off. \n\nMary stood there leaning heavily against her car for a several long seconds before the reality of what just happened came crashing in on her. Frantically, she looked around for anyone who may have seen her but there was no one in sight. She looked to the store but the kid behind the counter was looking at something on his phone and seemed completely oblivious to the world outside the plate glass windows. Looking up she saw the surveillance cameras but likely no one would be looking at the video footage unless something happened tonight and she figured the chances of that were pretty slim. Hopefully. \n\nTaking a deep breath she put on the fuel cap, grabbed her receipt from the pump and got in her car. Only when the door was closed did she let out a huge sigh of relief. A sigh that quickly turned to a laugh. That had been so stupid but at the same time incredibly fucking hot. Making that woman cum right in the open like that, right in front of her. And then making her like it! Dear Goddess this was dangerous.\n\nUnfolding the small scrap of paper, she read the name, Kristy. She had dotted the 'i' with a little pair of lips. Mary entered the number in her phone and considered sending a text but thought better of it. Maybe tomorrow. \n\nShe started the car and drove the last mile home. As she pulled into the lot a message from Alissa popped up on her phone. \"do u 2 want to come over friday night?????\"\n\nWhat time?\n\n6 im cooking Came the reply instantly.\n\nWithout bothering to ask Julia, Mary typed, We'll be there.\n\n<center>* * *</center>\n\nPart Four ~ Stereo\n\nThe door opened and Mary was greeted by Alissa's beaming smile. \"Hey, welcome. Come on in.\" She said in her delightful southern drawl. Stepping to the side, Mary politely allowed Julia to enter first before following. \n\n\"Thanks so much for having us. I'm looking forward to seeing if you're as good a chef as you said you were.\" Mary said as they walked into the main room. She noted that the place was basically the same layout and Julia and her place but the colors were different, much brighter and cheerier as opposed to their own unit which was mostly white and dark wood. She decided she liked it and began to think that maybe Julia and her should think about doing some painting. \n\n\"Any food that we don't have to cook sounds wonderful.\" Julia said, \"And truthfully, Mary and I are getting a little sick of pizza.\"\n\n\"Hey, speak for your self!\" Mary laughed, \"I'm never sick of pizza.\" \n\nAlissa laughed as well then turning said, \"Oh, hey, this is Amanda, My sister...\" She made a little self-conscious shrugging motion, \"obviously.\" \n\nMary felt herself start a little at the sight of the woman walking into the room and she could sense that beside her Julia was doing the same. The woman that walked into the room was an exact copy of Alissa in every way. Same face, same body, same posture, even their hair style was identical. \n\n\"You're twins!\" Julia blurted, then blushed and stammered. \"Uh, sorry. I was just a little surprised.\" \n\nBoth redheads laughed and Mary marveled that even their voices were the same. They shook hands all around and Mary was pleased to note that like her sister, Amanda was apparently a hugger as well. \n\nAlissa got out a couple bottles of wine and got everyone seated in the living room like a good hostess before excusing herself to the kitchen to continue cooking. After some small talk Julia asked Amanda, \"So, are you just visiting or are you moving here as well?\"\n\n\"I'm actually moving to the area as well. I officially transferred to the Providence office last week and I'm here this week getting set up. I'm debating if I'm coming to live here with Alissa or if I'm getting my own apartment closer to my work. I like the idea of splitting the rent but not so sure about living with Alissa.\" She smirked and glanced towards the kitchen door where Alissa had just emerged, heading towards them. In a somewhat louder voice she said, \"She's kind of obnoxious at times.\" \n\nPlopping down onto the couch next to her sister, Alissa wrapped one arm around her and half hugged her. With her other hand she pinched her cheek as if she were a little kid. \"Not nearly as obnoxious as you, Baby Sister.\" \n\n\"Don't start with the 'Baby Sister' crap. I'm about six minutes younger than you. If you keep calling me that I'll start calling you 'Old Lady'.\"\n\nMary watched the exchange with a kind of bemused interest. Glancing over, she noticed that Julia was watching the exchange with somewhat more than just bemused interest. She could see that the petite woman was having an increasingly hard time keeping her eyes off their shapely bodies. She also noted that Julia's nipples were starting to stand out a bit and she doubted that it had anything to do with the temperature of the room. The idea of just what Julia was thinking sent a hot spike of pleasure straight through Mary's brain and she almost gasped. Unbidden images of Julia entwined with the twins appeared in her mind. Julia with one twin on each breast, Julia with both twins bent over before her, fingers on each hand buried deep inside them. Julia straddling one twin's face while the others face was between her sister's legs.... \n\n\"If you're all ready, it's time to eat.\" Alissa said with a smile. \n\nCatching Mary's eye, Julia smirked and said, \"I bet it's all delicious.\" \n\nWith a supreme effort, Mary managed not to gasp in shock. Was Julia reading her mind? Or were her words only an incredibly erotic coincidence? How could Julia possibly have known what Mary had been thinking just then? \n\nSidling up to Mary, Julia took her arm and pulling her close, whispered in her ear, \"I can see in your beautiful eyes what you're thinking you pervert.\" Keeping an eye on the twins to make sure she didn't get caught, she reached up and pinched one of Mary's nipples, making her suck in a sharp breath. Leaning closer Julia whispered more seductively, \"And I think it's a wonderful...\" she licked Mary's ear, making her shiver, \"incredibly, fabulously sexy idea...\" she wrapped her lips around Mary's earlobe and briefly sucked on it before letting it slip away with little wet, 'pop', \"Mistresssss.\" She dragged out the final 's' into a long hiss as she slowly released her and took her seat. \n\nMechanically, Mary took her seat and tried to cover her flustered wits by taking an inordinate amount of time to unfold her napkin and pour herself another glass of wine. Without thinking she downed almost the entire glass in two huge gulps, the second of which made her choke. \n\n\"Woah! Easy. This isn't a frat party. Slow down.\" Alissa laughed.\n\n\"Actually, it doesn't look like such a bad idea.\" Amanda said, and downed her own glass as well.\n\nTwo hours later, there were several empty bottles of wine on the table in addition to a half bottle of vodka that Alissa had produced to make a few stronger drinks, most of which she had drank herself. \n\nThrough out the entire dinner Mary had fought a running battle with her conscience on whether she should use the ring or not. Earlier in the week she had convinced herself that using the ring on other women would be completely wrong on so many levels. What she had done with Julia had essentially been by accident when she had no idea what she was doing and anyway, Julia liked it so she felt that one was probably ok. The troubling part about her using the ring to essentially make Julia be ok with the changes she was choosing to ignore at the moment. \n\nBut the incident with Kristy had changed her thinking somewhat. Sure she had changed the woman, but the young mother had clearly enjoyed herself and so had Mary. So where was the harm? It wasn't as if she had made the woman do anything really bad. Well, ok, maybe masturbating in public wasn't the best plan but nothing bad had come of it so it was all good. Right?",
        "Mary shook her head a little and eyed her wine glass. How many glasses had she drunk anyway? Five? Six? She couldn't remember. All she did know was that her thoughts were getting decidedly fuzzy. Looking around the table, it was clear that she wasn't the only one. Both sisters had downed even more alcohol than Mary and were most definitely feeling no pain at this point, especially Alissa who had been the first to move to mixed drinks. Watching the tipsy twins laugh and joke, Mary found she really enjoyed watching how close the sisters appeared to be. Not really all that surprising considering they were identical twins but still, it was nice to see. \n\nShe also admitted to herself, it was also pretty sexy in a very taboo kind of way to see the twins leaning on each other and touching each other constantly. She had never had a very close relationship with her own sister and it was something she regretted, but clearly these two women did. Watching them touch and lean against each other as she laughed and joked was fanning the simmering heat in her core. A glance at Julia told her that it was doing the same for her as well. \n\nJulia caught her looking and bit her lower lip seductively, holding her eyes for several heartbeats before slowly shifting her simmering gaze back to the twins. Her thoughts on the matter were crystal clear. \n\n\"Ok, so I have a stupid question.\" Julia said, taking another sip of her wine. Mary noted that Julia was only on her second glass which was odd for her. \"So I've heard that twins can sense what the other is feeling. That if one is hurt or in trouble or something that the other will know even if they are miles apart. Is that true?\" \n\nAt the same time, Alissa said \"No.\" while Amanda said \"Yes.\" \n\nAlissa looked at her sister and laughed. \"You liar!\" She yelled a bit too loud, her words slurring just a bit. \"That's not true! You can't feel what I do and I can't feel what you do.\" \n\n\"It is so true! Remember that time you were home sick from school with the flu. You tripped on your blanket and fell down the stairs and broke your arm, I knew! I even made the teacher let me go to the office to call home to tell mom something bad had happened. Remember!\" Amanda said. \n\nPushing her sister playfully, Alissa said, \"You just wanted an excuse to get out of school!\" \n\n\"I did not and it is so true!\" \n\n\"Yeah, sure.\" Alissa laughed again, taking another drink of wine. \n\n\"Maybe you just ignore what you feel from me. But I know what you're feeling!\" \n\n\"Yeah,sure!\" Alissa said then giggled, almost dropped her glass, managed to set it down then turn to her sister. With one hand she grabbed her boob and started fondling it. Leering at her sister she said in a drunken approximation of a sexy whisper, \"Can ya feel this baby?\" \n\nMary's breath caught in her throat. Seeing the beautiful woman fondling her own breast, even if it was just clumsy drunkenness, was very arousing. In her likewise drunken state, Mary's reigns slipped and she couldn't resist thinking, I wish you two really could feel everything the other felt. \n\nThe air shimmered. \n\nAmanda let out a little gasp. Her hand went to her breast and she gently cupped it, looking down at it in surprise. \"What the hell?\"\n\nStopping, Alissa said, \"What, you're going to tell me you can actually feel this?\" \n\n\"I... yeah, I did.\" Amanda said, her eyes wide. \"Not like a little bit, but like your hand was actually on me. It was... weird.\" \n\nSmirking, Alissa slurred loudly, \"Nice try Sis. You're just trying to prove me...\" she wobbled a little, \"wrong as usual.\" \n\n\"No Alissa, really, I could totally feel that. It was like a hand was on me!\" Amanda said, her eyes wide. \n\n\"Yeah, well how do you like this action?\" Using both hands now, Alissa cupped both breasts and started to roll the firm mounds in her hands in an overly exaggerated manner. \n\nMary watched, totally enraptured and becoming more turned on by the second despite the slightly absurd way the evening was unfolding. Alissa was clearly very drunk and apparently she was the kind of person that got loud and obnoxious under the influence. She wondered again just how much alcohol Alissa had downed in the last couple hours. \n\nGlancing over at Julia, Mary was just in time to see her take the opportunity to scoot her chair much closer to Amanda. Looking at her, Mary could plainly see the searing heat in Julia's dark eyes. Her lips were parted slightly and she appeared to be almost panting with her need. She licked her lips and her eyes slid closed for an instant as a small shiver ran through her. Again, the mental image of Julia having sex with the twins flooded into Mary's mind and she barely contained a groan. In her inebriated state, she knew she wouldn't be able to restrain herself for much longer. The ring's influence was getting too strong and in her current state, her will was weak while her lust was high. \n\nAmanda now had both hands on her breasts as well. She was just holding and studying them with a sort of confused wonder. \"I really can feel that Sis. It's like I can actually feel your hands on me! It's like...oh, easy there. It's actually feeling kinda nice.\" She gave a little sigh, \"You're kinda turning me on you know.\" \n\nMary's restraint finally collapsed utterly as her eyes flipped back and forth between the beautiful twin sisters. A thought slipped neatly into place at the front of her mind. \n\nThe air shimmered again. \n\n\"Oooh!\" Both sisters cried out in unison as the sensations they were experiencing abruptly increased dramatically. Surprised, Alissa's hands stopped moving and she shook her head a little. \n\n\"What was that?\" Alissa said with a little gasp. \"Did you do that?\" \n\n\"I... I don't know.\" Amanda said, carefully bringing her hand back up to her breast. Tentatively, she gave herself another little squeeze and both sisters gasped again. \n\n\"Holy crap! I really can feel that!\" Alissa said in wonder. \"I really can!\" She stared down at her breasts in drunken wonder. \"Wow! And it feels amazing!\" She looked to Amanda, \"What the heck is going on?\" \n\n\"Can you really feel everything your sister feels Alissa?\" Julia asked in a voice that was part wonder and part seduction. As she said it she came right up behind Amanda and placed her hands on the woman's shoulders, squeezing gently. \"Can you feel this?\"\n\n\"Mmmm... yeah, I can feel your hands on me... or, well, her I guess.\" Alissa said, giggling. One of her own hands creeping back to her boobs. \"It's like you're right behind me.\" \n\n\"What about this?\" Julia asked, running her fingertips slowly up the back of Amanda's neck and up into her thick hair.\n\n\"Yesss... \" both sisters hissed as one. \"So nice...\"\n\nSomehow, Julia managed to sidle herself right up beside Amanda on her chair, half wrapping around the redhead, pressing her body up against the taller woman. The move was so quick and so smooth that Amanda, in her tipsy, slightly confused state, hardly even seemed to notice. Almost in the same smooth motion, Julia grabbed Amanda by the chin and turned her head, \"And how does this feel Alissa?\" She leaned in and kissed her hard.\n\nMary could see Amanda's initial shock as she tried to resist and pull back but after a few short heartbeats the intense new sensations raging through her body took over and she melted into the embrace. Within a few more heartbeats both sisters were mewling and whimpering as ripples of pleasure spread through their bodies. Julia adjusted herself and slid even tighter up against the taller redhead, pressing her heavy breasts into Amanda and trailing a hand down to start unbuttoning the woman's shirt. \n\nAmazed, Mary watched as Alissa stared at her sister and Julia, seemingly lost in a trance. Even has she stared blankly, her hands as if with a mind of their own finally completed their journey back to her small breasts. After a time, Alissa lifted her shirt and slid her hands up under the fabric. Mary saw the woman's eyes were still wide and staring but now were glazed over with lust as her own hands continued to glide over her deliciously sensitive skin. The redhead's lips were moving slightly as if she were the one kissing Julia and not her sister and her panting was also starting to sound more labored by the second as her arousal appeared to be building. The little whimpers she had been making a few minutes before were now sounding more and more like small moans. \n\nMary glanced back over to Amanda and Julia to see that her roommate wasn't wasting any time. She already had Amanda's shirt unbuttoned and her bra, which Mary was pleased to note was a front clasp, was open. Julia's had somehow moved around fully in front of and under Amanda and was straddling the chair. Amanda was seated in the smaller woman's lap straddling her, which put her now exposed breasts almost at the perfect height for Julia to tease them with her tongue. Mary hoped for an instant that Julia would have the restraint not to flick her long tongue out to it's full limit and completely freak the sisters out but she supposed she could deal with that problem if it came up. \n\nWith a little thump, the table jumped as Julia bumped it with her elbow while shifting position in Amanda's lap. A clear, crystal clink filled the room as one of the wine glasses tipped over and shattered, spilling Pino Grigio across the tablet top in a small river. Most of the cold liquid flowed over the edge of the table, spilling right into Alissa's lap. Like a glass of cold water to the face, the cold wine in her lap had much the same effect. With a start Alissa jerked her head up and looked about, her trance shattered. She yanked her hands out from under her shirt, a look of alarm dawning on her face. \"Oh my God, what are we...\" she closed her eyes and shook her head before continuing, \"What.... Amanda, no... we can't do this. It's not right... we're not....\" Her eyes closed and she shivered then she tried again but still unable to ignore what her sister was feeling, \"We can't... Amanda, stop. You're not... we're not.... oh... not... lesbians!\"\n\nApparently Alissa wasn't quite as far gone as Mary had thought. Just that little splash of cold wine had been enough to snap her out of her aroused stupor. Even in her drunken state, she was only going to go so far before she started having reservations. Mary was just about to give the twins another push when Amanda spoke. \n\n\"Speak for yourself... Alissa. I've... unh... I've been with a few girls and... loved it... every time. You can stop... if you want, ungh... want too.\" She managed to say between panting and grunting. Her shirt and bra were now completely removed and Julia's lips were kissing, sucking and nibbling their way back and forth between her small, pale pink nipples while Amanda ran her hands through Julia's silky black hair. \"But this...\" she rolled her head back and gave a moan, \"This is the hottest thing... I've...\" she sucked in a breath, \"I've ever felt.\" \n\n\"You what?!\" Alissa stopped moving and just stared at her sister, mouth agape. \"You never told me!\" \n\nAmanda smiled wickedly, \"You never asked.\" Grabbing a double hand full of Julia's hair, she pulled the smaller woman up and kissed her fiercely. After a few seconds she broke away and leered back at her sister, \"How was that sis?\" \n\n\"I... I don't...\" Alissa whispered then just started and didn't seem to know what to say. Her hand drifted up and she brushed her fingers over her lips, checking to see if the ghostly lips she had just felt were really there. She looked both terribly conflicted and incredibly aroused. Her face was flushed but Mary couldn't tell if it was with embarrassment, arousal or something else. \n\nMary was herself terribly conflicted as well. On one hand, she desperately wanted to take the beautiful redhead in her arms and see if her body looked, felt and tasted as amazing as she had imagined it to be. On the other hand, seeing Alissa watch Amanda with Julia was much more erotic than Mary had ever dreamed it would be. The part that actually surprised Mary the most was how turned on she was watching Alissa's internal struggle. She never would have imagined what a turn on it would be watching a woman fighting the sexual impulses of her own body. \n\n\"No... I need to go... \" Alissa was panting again, unable to resist or control what her body... what her sister's body, was experiencing. She turned slightly away and grabbed the back of the chair as if the get up but stopped and let out a long, low moan. \n\nGlancing back, Mary saw that Julia had slipped a hand under the waistband of Amanda's tights and was making, small motions under the tight fabric. Both Amanda and Julia were watching Alissa now and the look in both their eyes made Mary's core tremble. \n\n\"Dear Goddess, Amanda is just as bad as Julia.\" Marcellene's thoughts flowed through Mary's mind. \"That poor girl doesn't stand a chance.\"\n\n\"Yes.\" Mary whispered, not wanting to disturb what was unfolding before her. \"Think she'll give in?\" \n\n\"Absolutely. Just be patient.\" \n\nMary had to agree with the sorceress. Even putting the power of the ring aside, Mary was quickly seeing that Alissa didn't stand a chance against those two. Mary began to wonder to herself if the changes she had made had unleashed these passions in Amanda or maybe it was just the alcohol or maybe she was always like this. She had only intended to give the twins the same sexual boost that she had already done on herself and Julia but maybe in her drunken state she had done more without realizing it? She whispered that thought to Marcellene. \n\n\"No, if you had changed her in that way, the other twin would have been changed as well. No, this is coming from her, not you. She is a seductive, sexual creature when aroused, much like your Julia.\" \n\nLooking at the fire in Amanda's brilliant green eyes, Mary figured the sorceress was probably correct. \n\nAcross the room, Amanda let out a low, growling chuckling noise as she grinned wickedly over at her reluctant sister. Her eyes rolled back in her head and she threw her head back as she asked her sister, \"How about now sis? Is... is that... better?\" \n\nIn response Alissa only moaned as her other hand started creeping it's way between her thighs. Just as her hand was slipping under her waistband, her resistance rallied and she shook her head. \"No!\" she said and got up, turning to leave to room. \n\nOut of the corner of her eye, Mary saw Julia make some quick move with the hand in Amanda's panties and both sisters barked out a surprised cry which quickly dissolved into moaning. \n\nAlissa dropped to her hands and knees on the floor beside the table, moaning and twitching.\n\n\"I don't know if she's ready yet my Love.\" Julia called over to Mary. \"Why don't you come over here and join us instead.\" \n\nMary was enjoying watching the show but the invitation was simply too much to resist. She left her chair and moved to join Julia at Amanda's side. As soon as she was close enough, Amanda turned to her, grabbed her by the back of the neck, pulled her in and savagely kissed her. The redhead eagerly pushed her tongue between Mary's lips as they shared a ferociously passionate kiss. As they kissed, Mary's hands started wandering over the woman's body, stroking her back and playing with her tits. She guessed that whatever Julia was doing between her legs was working well if the way she was squirming was any indication. Watching her, Mary guessed that Amanda was only moments away from her first orgasm of the evening. Looking over at her twin sister, now lying on the floor, she saw that the other twin had finally given in to her body's needs. Alissa was writhing around in rapture, one hand under her shirt, the other in her pants. She was moaning and crying out in almost perfect sync with her twin, giving their passions and erotic, stereo soundtrack. \n\nAfter a longer time that Mary would have expected, Julia's ministrations were finally too much for Amanda and, she went over the edge into ecstasy. With a blissful smile, she threw her head back again and this time let out a piercing shriek as she came. Mary sat back a little, watching as Amanda's entire body shook under the relentless assault of her first magically enhanced climax. Still in Julia's lap, she bucked and bounced against the petite woman as the girl's small fingers continued to work busily between her legs. \n\nOn the other side of the table, Alissa had sat back onto her haunches and pulled her shirt off. Her bra was still on but the straps were pushed aside and the soft cups were down, exposing her small, firm mounds. Her cries and movements mirrored her sister's as she shared with her twin, the most powerful orgasm that either of them had ever even dreamed of. As she came, her hands tightened viciously around the small, creamy mounds on her chest as she cried out \"Amanda!\" \n\nThe sound of the reluctant twin crying out her sister's name at the height of her climax was so unexpected, so erotic and so taboo that it sent an electric charge straight from Mary's brain to her clit and she let out a startled, euphoric cry. \n\nBeside her, sitting under Amanda, Alissa's exclamation apparently had the same effect on Julia but the petite woman must have been farther along than Mary because with her own groan, she slipped over onto rapture as well. Her moaning cries of pleasure muffled as she continued to lavish attention on Amanda's breasts with her mouth. Glancing down, Mary could see that while Julia still had one hand in Amanda's pants, she had somehow managed to slip the other into her own. \n\nDeciding that she didn't want to be left out, Mary stood and slipped her pants off and pulled off her shirt and bra, exposing her fabulous breasts for all to see. Even at the height of her passions, Amanda's gaze was drawn to the massive orbs and her eyes popped open at the sight. Hungrily, the redhead leaned over and wrapped her lips around one of the large, dark and wonderfully sensitive nipples. \n\nMary cried out as she felt that small piece of herself being drawn into Amanda's hot, wet mouth. She felt Amanda's eager tongue circling the sensitive nub and a loud moan slipped between her lips. Letting her had trail down her stomach to the heat between her thighs, Mary slipped a fingertip along the soft outer folds, savoring the little waves of pleasure that the faint contact sent through her. She let out a little moan as she dipped her finger between the lips and then back up, over her aching clit. The moan turned to a startled little cry as she felt Amanda's teeth grab hold of tender flesh of her nipple and pull back, stretching and pinching the sensitive skin. The surprising mix pf pleasure and pain jolted through Mary and with her own cry, she fell into rapture. \n\nMany minutes and many climaxes later, Julia and Amanda collapsed heavily onto the floor beside the table. There they lay moaning and panting for quite some time while Alissa lay alone on the other side of the table softly moaning to herself. Following them down, Mary lay down across Julia, resting her head on the smaller woman's chest, listening to her pounding heart as all their passions cooled. \n\nAfter some time, Amanda pushed herself up and went to the to the other side of the table where Alissa lay, her back turned to them. Gently, she put her hand to her twin's shoulder and turned her. They sat there,looking at each other with a completely unreadable, or at least completely unreadable to Mary, expression in their matching eyes. \n\nSlowly, Mary pushed herself off Julia and moved around the table to better see what was happening. After a couple seconds, she felt Julia come up beside her. Sitting on their knees, they both silently watched the twins, wondering what would happen next. Mary considered using her power to help the situation along but quickly dismissed the idea. She wanted to see how this played out on it's own. If things would progress as she hoped they would on their own it would be so much more satisfying. And besides, if things didn't work out like she was hoping, she could always give them a little push later. ",
        "Mary felt her heart skip a beat as one of the twins finally broke the trance. Surprisingly, at least to Mary, it was Alissa who made the first move. Cautiously, tentatively, she placed her hand on Amanda's cheek, then brought it around to the back of her neck. Hesitantly, she pulled her twin closer. When their lips were only a breath apart, Amanda stopped her with a hand to Alissa's wrist. Softly, she asked, \"Are you sure about this?\" \n\nBlushing furiously but unwavering, Alissa whispered, \"Yes.\" And closed the final gap between them. Their lips met tentatively at first but very quickly their movements became more animated. Amanda's hand came up to the side of her sisters face and after a time, started move downward, to her shoulder, then her arm and finally to her breast. When she touched the nipple both sisters sucked in a breath and stopped. Alissa brought her own hand up and mirrored her sister, placing a hand on Amanda's breast, pinching the small pink nipple. The twins gasped again, louder and throatier this time. Their kissing resumed, now deeper and with even more passion. Their hands started wandering with more impunity over each other and soft gasps and moans stated to float about the room. \n\n\"That might be the hottest thing I have ever seen.\" Julia whispered in Mary's ear as she leaned in close and settled against her back. Her small hands came around and started roaming around Mary's huge breasts, eventually settling on circling about the large, hard nipples. \"Did you do that?\" \n\n\"No.\" Mary whispered back, enjoying the feel of Julia's hands and the lewd show before them. \"Well, some. I boosted their sex, just like us and then linked them so they feel each other. But this...\" She indicated the very sisterly kiss being done before them, \"No, this is all them.\" \n\nJulia moaned at that and her hands clenched around Mary's breasts with almost bruising force. Finally she managed, \"That make is so much fucking hotter. Oh my... oh... \" she broke off as her eyes slid closed. After a few seconds she said quietly, \"Can you take me Mistress. I need it so bad right now.\" As she spoke, one hand left Mary's breast and went between her own thighs. Fingers slipped easily into her sex and she let out a little gasp. \"Please Mistress.\" \n\nMary smiled and whispered, \"Patience my Pet. Let's enjoy the show first.\" \n\n\"Yes Mistress.\" Julia said softly but continued to touch herself as she looked back to the twins. \n\n\"She obeys well.\" Marcellene said. \"Beautiful,loving and completely obliging. You are quite fortunate. With her and now the addition of these two, you harem is starting off nicely.\" \n\n\"A harem?\" Mary whispered, too soft for even Julia to hear. Mary hadn't really thought she was forming a harem, but in her current sex fueled state she found the idea certainly had appeal. \n\n\"Well, a harem figuratively speaking of course. I doubt you will have a hundred girls lying about wearing silks all day as in ages past..\" Marecllene said, her voice wry. \"Or perhaps you will. It is your choice my Mistress.\"\n\n\"My choice...\" Mary whispered to herself. She briefly considered the thought but found the whole idea of her having her own harem was just too big an idea for her to really wrap her wits around right now in her current state. She let the thought settle into the back of her mind for later consideration and turned her immediate attention back to the twins. \"I'll have to think about that.\" She whispered to Marcellene. \n\n\"Oh course my Mistress.\"\n\nBy now, Amanda had removed Alissa's pants and panties and was trailing her fingers down her sister's naked body. Alissa for her part, was lying back and moaning appreciatively while pawing at her sister's breasts. When Amanda's fingers eventually traced a line through the tuft of curly red hair over her mount, Alissa let out a small, quiet cry and reflexively spread her legs open as if offering herself to her sister. Eager to oblige, Amanda moved to lie down next to her, sliding up against her, their perfectly matched bodies beginning to intertwine. Slipping her arm under her sister's shoulders, Amanda pulled Alissa in tight and wrapped her lips around one of her small, pink nipples. Alissa let out an adorable little gasp that turned into a loud cry as Amanda slipped a finger easily between into the soft, wet lips of her sister's quivering pussy. \n\n\"Amanda!' She cried. \"Oh... it's.... I.... ungh!\" Alissa gasped as her sister traced her finger tip back and forth between the swollen lips. \"I.... I...\" she said, her head rocking from side to side as forbidden pleasure that she had never considered exploring now flowed through her veins. Beneath her, Amanda was experiencing the same feelings and was moaning in time with her twin. Her hips rocking and thrusting trying to touch the ghostly fingers that she could feel but weren't actually there. \n\n\"This is so unbelievably fucking hot to watch.\" Julia whispered harshly in Mary's ear. \"I may gush without you even touching me.\" \n\nGrabbing Julia's chin and forcing her to meet her eyes, Mary whispered sternly, \"Cumming before your Mistress allows you to? Oh,I don't think so my little Pet.\" She Sat up and situated herself to lean against one of the table legs where she had a good view of what was going on across the room. Leaning back a little she spread her legs and with a hand, spread the lips of her sex open a little. \"Now, down on your hands and knees and pleasure your Mistress.\" \n\nObediently, Julia did exactly as she was told. She settled her face between Mary's legs and with her wonderfully long tongue, started lapping at her Mistresses dripping pussy. \n\nLosing herself in the haze of hot, lesbian lust, Mary's eyes strayed back to the twins. She watched spellbound as Amanda brought her sister closer and closer to climax. Amanda had pulled Alissa beside her and slipped her thigh under her twin's ass, lifting Alissa pussy up and opening her fully, allowing her fingers total access. Her other hand was slipped under her sister's back and was pinching and pulling at the far nipple while her lips eagerly worked on the closer. From the look on Alissa's face, Mary didn't think the redhead was going to be able to resist her sister's ministrations for long and she was right. \n\n\"Oh! Amanda! Amanda! I...I.... oh.... I'm.... Aaaaagh!\" Alissa cried as her body went rigid in her twin sister's embrace. As Mary watched, she saw glistening wetness gush from Alissa's throbbing pussy and soak the carpet under them.\n\nAt the same moment, Amanda let out and equally powerful cry as she shared the same incestuous orgasm with her sister. As one they cried and shuddered under the relentless waves of bliss that rolled over both of them. \n\nThe combination of the lusty, sapphic incest on display before her and the delightfully talented tongue probing her core was finally altogether too much for Mary to resist and with a cry she felt herself slipping over the edge. Grabbing a hold of Julia's hair, she pulled her head back enough to meet her dark eyed gaze, \"Cum with me.\" She hissed. \n\nWith a cry that was muffled by Mary's sex, Julia did exactly as she was told. Her small body shuddered in rapture but her tongue continued to twirl about deep inside Mary. \n\nSeeing the look in Julia's eyes as she came hard on command, Mary allowed herself to share the experience with her beautiful lover. She released the last of her restraint and tumbled over the precipice, blissful agony coursing through her in long, powerful surges. \n\nAgain and again, Julia's tongue inside her brought her to the peak of passion, only to catch her again on the down slope and push her yet higher and over another peak even grander than it's predecessor. Mary's entire body felt alive with power flowing through her veins, saturating her very being. Her eyes closed and she concentrated on the feelings, savoring the experience as another cry was ripped from her throat. As the orgasm rolled through her a though slipped into place. \n\nThe air shimmered. \n\nWith yet another climax was building inside her, Mary's eyes snapped open as she felt lips, hot and soft, wrapping around her nipple. She looked down to see the twins, one on each breast, suckling her nipples. The feel of their tongues teasing her sensitive skin in combination with what Julia was doing between her thighs was mind shattering. Mary's hands ran through the twins wonderful red hair, holding each of them to her as her thighs clamped around Julia's face, holding her in place as well. \n\nOrgasm after pounding, throbbing, screaming orgasm ripped through Mary as she willed herself not to pass out. Her vision was starting to go gray around the edges and her blood was screaming in her ears but she didn't want to stop, didn't want this to ever stop. \n\nFrom the noises the twins and Julia were making, she knew that they were cumming with her. She couldn't see but somehow knew that while their mouths were busy on her breasts and pussy, their own fingers were busy teasing and bringing themselves off. \n\nOn impulse she pulled the twins up off her nipples and using her hands in their hair to guide them, kissed first one, then the other, taking time to savor the way they were so much alike. Their lips felt the same, tasted the same and even seemed to kiss the same. Without their clothes on, she couldn't even tell them apart now. She could be kissing Alissa or Amanda and she had no way of knowing. It was all so amazingly, erotically taboo. \n\nBreaking the kiss, she guided them to face each other and kiss again, right before her. She watched entranced as their tongues danced and they moaned and gasped into each other. Mary could tell their fingers were still busy between their thighs and both were approaching another climax. With matched, twin cries of rapture, they both went over the edge at the same instant,.\n\nMary had a thought.\n\nThe air shimmered, \n\nThe twins cried out in stereo... \n\n\"I love you Amanda!\" \n\n\"I love you Alissa!\" \n\nAs one, they went over the edge, staring deep into each others' eyes. \n\n<center>* * *</center> "
    ],
    "authorname": "china-doll",
    "tags": [
        "lesbian",
        "mind control",
        "magic",
        "twins",
        "lactation",
        "twincest",
        "incest"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/changed-redux-pt-02"
}