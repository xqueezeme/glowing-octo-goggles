{
    "title": "The Fury",
    "pages": [
        "Special thanks to blackrandi for the invitation to participate in \"The Magical Mystery Tour,\" and allowing me to throw in two stories. I wrote one story for the invitational -- \"Mausefalle,\" a historical posted in Romance. I was quite happy with that, but a country song, \"Hell on Heels,\" left me with an itch to write this particular story. It wouldn't leave me alone until it was finished, so I asked blackrandi if it was acceptable to submit two. I've included other \"Thanks\" at the end.\n\n*\n\nI'm no hero, at least not now.\n\nThe last time I did anything brave was a long time ago. Fourth grade, actually. There was a girl in my grade named Cindy Van Dyke. Not popular, not well dressed and not well off. She'd probably never be pretty. Her red hair was dark and, dull, hardly ever washed. She had freckles; not the cute dusting across the nose some girls had. They were stark blotchy ugly things on a pallid smooshed mean-looking face.\n\nIt was on one of those blustery fall days where the damp wind came up extra cold, the kind where nobody's parents had them jacketed quite heavily enough, so we clung close to the school during recess to stay out of the harshest part of the wind. That kind of concentration of fourth graders reaches critical mass quickly.\n\nFor whatever reason, Cindy Van Dyke somehow became the focus of a random rush of grade school cruelty.\n\nI don't really remember the exact nature of the Cindy Contagion, but I do remember that if you wanted to remain uncontaminated, you had to stay off whatever 8 x 6 block of broad playground concrete she was on. The effect was like a reverse magnet, hordes of fourth graders rushing to evacuate to safe places, leaving a miserable Cindy surrounded by a bubble of loneliness. I have no idea what possessed me to stand my ground as she trudged toward me, a cloud of misery hovering around her. Maybe at first I was playing the game, too, and by staying in place I was showing I wasn't afraid of our newly-minted Typhoid Mary. If so, it didn't last past a single look at her downcast eyes.\n\nI had been singled out just a couple months before for the crime of wearing a t-shirt with the Butterfinger candy bar logo on it. I'd suffered my sentence of carrying \"Butterfingers\" as my nickname for a month. As if life isn't tough enough at that age when you are already named Calvin Pickmann. I'd shaken those chains off and gone back to my given name just a week ago.\n\nSo as she stepped onto my block, when I was supposed to jump clear, I just stood there and said, \"Hey.\"\n\nShe watched me warily for some clever trick; she knew how the game was played, too. She couldn't believe anyone would defy the will of the Horde. After a minute, she nodded, and I went back to rearranging pebbles for some mystic fourth grade reason.\n\nI could feel the communal outrage build as the Horde realized in its dim emotional collective conscience that I was refusing to play along. There was a slow but certain realization that I'd have to be punished, at the very least ostracized, along with her. I was, as they say, well and truly fucked. I'd even done it fully knowing the consequences.\n\nMy salvation came in the form of another redhead: Laura, a skinny fearless copper-wire-haired bucktoothed fury in slightly ragged clothes. She'd never been a friend before, barely had two words for me in our five years as classmates. Maybe she really stepped in as a member of the Secret Redhead Mutual Aid Society. Regardless of the reason, the equation changed as soon as she stepped onto that forlorn block of concrete desert with us. Laura was nobody to trifle with. She had an explosive redhead temper and long sharp nails that she wouldn't hesitate to bring into play. Many of our classmates had felt her wrath.\n\nShe glared around with blazing forest-green eyes at the suddenly cowed mob, daring them to do or say one goddamned thing.\n\nThe nasty energy of the mob evaporated in the inferno heat of her stare. Kids were suddenly drifting away, finding other things to do, leaving the three of us standing uncomfortably on our stronghold. Cindy glanced around, not quite sure what to make of her rescue and hastily retreated to the safety of the space near the classroom door, where there was real teacher overwatch. She would disappear after the end of the school year. Moved to Ohio, I think someone said. I don't remember for certain. I remember hoping she fared better there. I really did.\n\nLaura and I just stood ignoring each other for a long while. She finally gave me a curt nod and headed toward the foursquare area where her friends were waiting. Later that year, Laura would mark my arm with her nails in a rather one-way discussion over the use of a jungle gym, but compared to the usual way she dealt with interlopers into her chosen domain, it was rather mild.\n\nWe weren't friends, not really, but we nodded to each other in passing.\n\nAbsolutely unable to suppress her, the popular girls brought her into their fold; although she never seemed as cruel and heartless as the rest of the Amy-Angie popular-girl crew tended to be. For my part, I trudged along in my hand-me-down clothes with my nose buried in whatever book I'd dug out of the school library.\n\nLaura didn't go through puberty, she exploded through it in epic style. By the end of 8<sup>th</sup> Grade, her frizzled carrot mop had turned to exquisite red-gold silk, buck teeth turned into a brilliant 1000-watt smile, and her figure... well suffice to say it looked like the boob fairy had decided there was no such thing as too much of a good thing. Somewhere along the way, she changed her ragged clothes for the fashionable kind. She'd immediately been swept into the Cheerleader-and-Jock world of the beautiful, while I had slogged into the lower end \"Brains\" category as we felt our way into, and then through, high school.\n\nI actually managed not to completely screw up High School. I passed with pretty good, though not great, grades, and I'd had a for-real, all-the-way girlfriend, named Keri, until her parents packed up and took her to Colorado with them right after my Senior Prom.\n\nBy the time we graduated High School, my fourth grade heroics were long forgotten, and I'd probably said two sentences to Laura in the last three years. Partly because no sane girlfriend would want her boyfriend talking to the most beautiful girl anyone could imagine, and partly because Laura moved in different circles. Once in a while, passing each other in the hallway, we'd say \"Cal\" and \"Laura\" to each other, but nothing more. Sometimes I would look at her and it was like we caught each other looking, both hastily looking away. Even thinking about her was probably dangerous. She had a college boyfriend with a black Trans Am, for God's sake. I think the boyfriend actually changed out occasionally, but they were hard to tell apart. For all I knew it was the same car.\n\nI'd decided to skip college, mostly due to a distinct lack of money for such things, and had continued working at the auto parts store where I'd been for the last two years. Six months of that, though, and when the Army recruiter told me about how I could finagle college out of a four-year enlistment, I decided to give them a shot. I'd be getting on the bus to basic training on the 2<sup>nd</sup> of January. I had no great dreams, but I scored big on the test for learning languages, and I'd asked to be a Chinese linguist. I'd heard it translated to a lot of college credits.\n\nFor my last hurrah, I decided to attend Joe Pedone's New Year's Eve party. He was a year older than me and had \"the cool parents\" who, since the year he turned sixteen, simply disappeared for about three days before and a week after New Year's, giving him plenty of time to plan, execute and clean up. Needless to say, this time was not wasted. He had the craziest parties, or so I'd heard. Having a full-time girlfriend whose idea of celebrating New Years was much more intimate had prevented me from joining the festivities, before.\n\nOf course, I'd run into problems. My cousin needed help moving to his new house and I'd been roped in, under the pretext of him seeing me one last time before basic training, of course. So, after an 18-hour day, I made it to the party after it'd been in full swing for a couple of hours, and I was completely wiped out. I managed one rum and coke, then asked him if I could lie down for a half hour in one of the guest rooms. He gave me a solemn promise to send someone in to get me in 30 minutes.\n\nI basically missed the whole damn party. As raw morning light filtered in through my eyelids, I shifted and someone spoke in a hushed tone.\n\n\"Where's your shirt?\"\n\nI managed to blink one eye open and looked to my left. A single sparkling green eye was visible through the mass of golden red hair resting on my bare chest.\n\nI squeezed my eyes shut for a second and re-opened them, sharpening the image a bit.\n\n\"Unless you have a Rolling Stones Bridges to Babylon concert T-shirt of your own, you're wearing it.\"\n\nThere was a brief pause as she swiveled her head a bit and lifted to look between us.\n\n\"Huh. Okay. Then where's my shirt...\" shift \"... and bra\" another shift \"and pants.\"\n\nAt that point I realized my left hand was resting on a very firm, apparently completely bare butt, and one of her long legs was draped luxuriantly across mine. I kept my hand right where it was, so as to not draw attention to it, of course.\n\nSeriously. I knew that voice. I still had scars on my arm from crossing her at the jungle gym all those years ago.\n\nAt least I was still wearing boxers, although I had no idea where my jeans had gone. She moved to get more comfortable, bringing an awful lot of bare inner thigh into contact. At least she hadn't exploded yet.\n\nI must've returned to the party and gotten completely obliterated, although I didn't have the splitting headache or what I would later think of as a latrine-floor taste in my mouth that I so clearly remembered from the previous few times I'd had too much to drink. All in all, the gods had been kind.\n\nNow, I had to figure out how to get out of this alive.\n\nThe times I'd seen Laura with boyfriends, they roughly resembled the more powerful of the great apes. They'd just gotten even bigger and meaner looking since she'd started college. Even they would only become a problem if I survived Laura's epic temper. I kind of figured out what happened though.\n\nGood old Joey Pedone had a sense of humor.\n\nIf you passed out at one of his parties, he'd shave your eyebrows, mark you up with permanent marker, or, if stories were true, you might wake up naked in bed with another guy who'd passed out, or this. Funny, Joey, really funny, setting me up to be mangled, or worse, by one of Laura's college football players.\n\n\"Uh, Laura?\"\n\nShe shifted her head to clear the other eye so I could see both of them. \"Mmmm?\"\n\n\"I think Joey got the drop on us. I don't remember getting drunk, but I was really tired and must've passed out. I'm guessing you did the same.\"\n\n\"Yeah. Seems like it.\"\n\nShe pulled herself partly up and leaned across my chest a bit to squint at the clock on the bedside table. Accidently bringing her set of Destroyer-class breasts into full contact with me.\n\nShe twisted her lips in a curious moue. \"It's nine o'clock. The damage is done, there's no way anyone is going to believe we weren't in here screwing all night.\"\n\nShe didn't even seem really pissed by that.\n\nShe was silent for a long moment, still resting on my chest. Then:\n\n\"Heard you're headed off to the Army.\"\n\n\"Yeah, on the bus tomorrow.\"\n\n\"Still a hero, huh?\"\n\nMy confusion must've been obvious. I was a lot of things, but hardly a hero.\n\n\"Fourth grade. You stood up to everybody in fourth grade at one time. To protect somebody that nobody even liked. You're the only hero I've ever really met.\"\n\nI laughed. \"I was stupid, if you hadn't showed up, I'd have been ostracized for the rest of my life. You're the hero.\"\n\nShe shook her head. \"I did the right thing because you showed what it was.\"\n\nI was about to respond until she abruptly pulled herself up on top of me, straddling me.\n\nI started to object, but she ground down against me and I lost the capacity for speech.\n\nShe smiled her unbelievably brilliant smile. \"Everybody is going to assume we were doing this all night, anyway, no matter what we claim.\"\n\nShe peeled the t-shirt off over her head in one motion. She was absolute perfection, even more spectacular than I'd imagined. That really is something; a nineteen-year-old's imagination is fueled purely by Playboy and hormones.\n\nThe next couple of hours were spent doing what everyone would believe we were doing anyway. It was about as much fun as you can have in bed, on the floor or over a chair. Actually, that's how we managed to find our clothes under the chair.\n\nLaura didn't seem to care who knew what we were up to, she was gleefully vocal; if anyone in the house had any doubts about what we were doing, she dispelled them quickly, and frequently.\n\nWe lay there, tangled together for a long while.\n\nHer voice was almost a whisper, as if she was talking in church. \"I came here on purpose, Cal. I had to do this once. Had to break Mom's rules and try out a real guy, someone who cares about someone other than himself.\"\n\nI looked at Laura, but her eyes were downcast. \"What do you mean... 'Mom's rules'?\"\n\nShe grimaced and started talking, muffled and sad. Her mom had married her great love, a great guy who would do anything for her, but he'd been thoughtlessly laid off, lost his job when Laura was in second grade. A banner year for the company, the executives made massive bonuses after all; but they'd had to \"restructure\" and \"downsize a few departments.\" Laura's father drifted from part time job to part time job, unable to find anything better until the stress crushed him. He had a massive coronary in the parking lot of a fast food burger joint. He'd just finished his night shift sweeping factory floors and was trying to be on time for his morning shift at the local McDonald's. Laura's tone was bitter. He'd died trying to take care of them.\n\nAfter years in low-rent housing, struggling to keep a life going for them, even spending a year in a shelter, Laura's mom, almost as beautiful as Laura, had re-married for money. \"Love doesn't keep a roof over your head,\" she'd told Laura.\n\nWhen we finally got dressed, we walked out through a hung-over crowd that watched us with one collective eyebrow raised.\n\nLaura stopped at the door and gave me a lingering kiss. She whispered, \"Stay a hero.\"\n\nThen she was gone.\n\n*****\n\nI discovered a lot about myself in the Army. Basic training sucks. The most important thing a drill sergeant teaches you is that no matter how pessimistic you are, you're actually even more worthless than you think.\n\nI also discovered that when you sign up for a language, that's exactly what you are doing, signing up for: \"a language\" not \"the language\" that you thought you were choosing. I didn't even know Shona was a language, much less that it centered in Zimbabwe. Hell, I didn't know that Rhodesia had officially changed its name to Zimbabwe. Just another victim of the public school system. It also meant that my clever idea of going to language school in California so I could surf was out the window. Shona was taught in a grim contract school in Virginia.\n\nAfter I finished training, I was off to Fort Bragg as a brand new Private First Class. I should have spent the next year learning how to be a soldier, but I was immediately sent to support a Special Forces team on a six-month pump in Africa. I didn't think I'd done much more than stay out of the way, but a letter of commendation reached my unit before I even got back. It quickly became a pattern: six months in Africa, more language training in other African languages, and another six months and so on.\n\nThree years of being loaned to every Special Forces team with missions in Africa set my course, and I finally applied for Airborne School, then the \"Q\" course, the Special Forces selection course. If I was going to be doing this anyway, I might as well get all the training. It sure as hell wasn't easy, and it gave me a new respect for the guys I'd been working with.\n\nFor the next seven years, I spent about half my time in Africa, mostly trying not to stop a bullet or catch something incurable, while I used the time to finish my degree in Corporate Security. I learned more and more about the rivalries, connections and dynamics of Africa. I imagined myself becoming part of the web, becoming part of Africa. I was \"that guy,\" the guy that spoke the languages, understood the people. The guy that reminded everyone that, \"It's Africa, that's the way it goes.\"\n\nI'd probably have worked there for the rest of my career, untangling the knot of Africa, until I went to the market. I was looking for trinkets for family members, some food for the team house, nothing really important. I was really just killing some time; I'd just finished my degree before returning for the pump, and for the first time in a long time, I had no reading to do, no papers to worry about. My weekends were my own for a change.\n\nI was probably a hundred feet away when I saw her. She was young; she was terribly young, and very, very, pregnant. It was the eyes though, that caught me, the soft, warm, brown, African eyes that I'd always thought were so special, so much the thing about Africa that I'd always remember. Her eyes were different: empty, hollow. All that remained in them was the vacant stare of the dead.\n\nShe saw me, looked into my eyes and she knew that I knew.\n\nI know I yelled, know I tried, but it made no difference at all. A young girl, kidnapped from her school by self-serving religious fanatics, tortured, abused and brainwashed. She was little more than a weapon by the time I saw her. Maybe, with time and effort, somebody could have recovered that lost girl, but there was no time.\n\nThe explosion of the suicide vest slammed fragments through the packed crowd. I was unharmed. The layers of almost a hundred innocent victims, men, women and children, between us had absorbed the fragments. I helped the ones that I could.\n\nI was physically unharmed, but hardly unscathed. The cynicism that I wore as armor had shredded in that single eternal stare. I wasn't part of Africa after all, and I never could be. No matter how long I stayed, I'd always be a visitor, always be an outsider.\n\nI dropped my plans for re-enlistment and put out my resume.\n\nI barely had it out before the corporate headhunters started calling. Special Forces experience combined with the degree in Corporate Security was a very attractive combination for many companies. Maybe an occasional visit to Africa, usually to a nice hotel, five times my pay and a plush office against ten more years of pumps to every disease and insurgent-infested corner of Africa; it really wasn't much of a challenge to pick the winning hand in this game. Maybe, someday, if I was lucky, I'd even forget those eyes.\n\n*****\n\nThe winner, at least to me, was Qantic Services Inc.; they'd opened a new satellite office outside the Highway 35 loop of Dallas, and they were planning some business operations in Africa in the future. A Security Manager with some experience in Africa was just about perfect for them: they couldn't justify hiring a full time \"Africa Expert\" by himself, but my role in Security allowed them to keep the expertise on hand and still have me working full-time. I'd provide a bit of advice on Africa while \"managing\" facility security. It didn't feel like a \"manager' position; there was no team to manage, but more of a security coordinator. I \"owned\" personnel security, but the guard force and computer security weren't mine, even though I had to work with them.\n\nI moved in the week before I started, choosing a \"singles\" apartment not too far from my new workplace. I noticed a few pretty girls around the pool when I moved in, and a couple of them noticed me right back, so at least I had some off work-hour prospects. I decided that would have to wait until I got settled in to work.",
        "The management board was fairly typical, mostly corporate drones, a lawyer, and Alan Daniels, the director of the new division, and the son of the CEO. His father was preparing him to take over the whole thing. I got the impression he felt he was out of his depth, that maybe he felt like he wasn't up to the task of being his father's heir. He had an air of desperate desire to be something, anything. Still, he seemed like a nice guy, and he spent a couple minutes greeting me and talking about his fianc\u00e9e, a woman named Karen whom he'd met at a horse show.\n\nThe board quickly welcomed me and handed me off to Human Resources. The head of Human Resources was Bethany, who reminded me of my ninth grade English teacher, a graying, but sharp woman with a wry sense of humor. She handed me my personnel paperwork and led me to my new office, a bit smaller and more cookie cutter than I'd dreamed, but better than a cubicle.\n\nI wasn't there ten minutes before the phone rang.\n\n\"Hey, this is Jessie with IT. Bethany says we gotta set you up with an account on the system. Like, today. You got a minute?\"\n\n\"Sure. Where are you?\"\n\n\"Bring your in-processing papers. Go out of your office, turn right. Take the green corridor to the light blue, go left and walk until you reach lemon yellow. My office is the first on the right.\"\n\n\"Sounds colorful.\"\n\n\"Welcome to Crayola Land!\"\n\nThree colors and a near miss on dark yellow and I walked into her office. A pixie-ish woman with bright green hair and matching lipstick peered at me through green-framed glasses past her computer screen. Her blue eyes sparkled, and she smiled broadly. \"Hey! You made it.\"\n\n\"How do colorblind people get around here?\"\n\n\"I sneak out and leave cookie crumb trails. You'd be taking snickerdoodles to chocolate chip to peanut butter.\" She grinned mischievously, then launched into a horrible parody of a German accent, sticking her hand out. \"Your papers! Ve must haf your papers!\" I handed them over and watched her hands blaze over the keyboard.\n\nShe glanced down at the papers. \"Not married... you got a girlfriend?\"\n\n\"No time, just got here. Moved into my apartment a week ago\"\n\nShe wrinkled her nose like a bunny for a second. \"Steak then.\"\n\n\"What?\"\n\n\"I was going to flirt with you until you asked me out, but that could take half an hour, and I have a lot to get done. It would work, though. Once you asked me out, we'd have to go out for coffee, then a casual date of some kind. After that you'd want to take me to a good restaurant, and you'd want to make a good impression, so you'd ask me what kind of place I'd want to go. I figured we could fast forward through that stuff. So, steak.\" She flashed an impish smile.\n\nI held my hands up in surrender. \"Okay, you figured out my plan. What time?\"\n\n\"Six thirty. We'll walk, there's a new place that just opened up about three blocks from your apartment.\"\n\nThis felt distinctly like a set-up. \"Where do I pick you up?\"\n\n\"Three floors down, apartment six. I watched you move in.\"\n\nI squinted at her. \"The girl by the pool. In the blue bikini.\"\n\nHer suppressed giggle managed to burst out. \"The bikini you found so interesting that you didn't remember my face.\"\n\n\"Hey, you had on huge sunglasses and that big hat.\" There hadn't really been very much to the bikini, which was why it was so interesting, to be honest.\n\n\"Yeah, yeah, I saw what you were looking at, and it wasn't my hat.\" She gave me a sideways smile to let me know she wasn't offended.\n\nThat was the start of a lot of good times. Jessie was a Dallas native and knew every fun place to go. She'd lived in Austin for a while, which explained the hair. It didn't stay green, it changed often, and her lipstick and glasses changed with it. Stay weird, Austin, stay weird. She wasn't shy, and she didn't have any problems letting me know when she was interested in spending the night. She was honest and made it clear that she wasn't interested in a real relationship right from the start. She even admitted she was more into women than men, and that I was something of a break from \"all the drama.\"\n\nConventional relationships just weren't her thing at all, but she only dated one guy or one girl at a time; while the logic didn't seem quite straight-forward to me, it suited her quirky personality, and frankly, I was just having a good time anyway.\n\nI didn't really have time for a full-time relationship, anyway. I'd only been at Qantic six weeks before I was called down to the CEO's main office in the heart of Dallas.\n\nAfter waiting an extra half hour, I was shown in to meet him.\n\nHe was an older man in a five-thousand-dollar suit with a perfect tan, perfect teeth and a snow white perfect head of hair. He looked like he belonged in a movie or on a golf course. He got up and walked around the desk to meet me as a I walked in, taking my hand in a perfect handshake, gripping just hard enough to show no sign of weakness, just light enough not to be overly aggressive. \"Calvin. Welcome aboard.\"\n\n\"Thank you, Sir. Glad to be here.\"\n\n\"Good to hear. How are you settling in?\"\n\n\"I'm doing well, the office is good, and my co-workers are friendly.\" In Jessie's case, extremely friendly.\n\n\"That's good. Have a seat.\" He gestured to one of the chairs in front of his desk and sat in one opposite it.\n\nHe made small talk for a few more minutes before getting to the point. \"I need you go to Kinshasa and make arrangements for meetings. We'll get you a contact list. This is just to lay the groundwork with businessmen and a few government officials. There's a lot of potential there; untapped resources, and we really need to set up contacts and get in on the ground floor.\"\n\nI kept a polite smile on my face. \"That's what they say.\"\n\nIt was what \"they\" had been saying for decades. There was a running joke among a lot of \"Africa hands\" that Africa was the wealth of the future \"and always would be.\" Africa might have wealth, but it was far harder to exploit than all the businessmen ever dreamed. Safety, corruption, dysfunctional economics, and crime all created an atmosphere that always seemed to conspire to prevent the promise of Africa from paying off, especially in the Democratic Republic of the Congo and the Central African Republic aka the DROC and the CAR. Hell, some kind of industrial chemical spill had killed nearly three hundred people along the Bangui River in the CAR just a few months before I'd left the Army; all that anyone had done was shrug and say, \"It's Africa, that's the way it goes.\"\n\nStill, it was going to pay the bills, so I smiled, and decided to go along, making arrangements for mid-level executive meetings. Some of the businessmen were almost certain to be con men, but that wasn't my end, everybody seemed happy, and it all seemed pretty small scale, so Qantic could easily absorb any financial losses.\n\nAs I was getting ready to leave, a tall stone-faced man came in unannounced.\n\nDaniels nodded to him. \"Calvin, this is Philips. He's my Chief of Security and he represents me when things go wrong.\"\n\nI extended my hand, but he just stood there and didn't respond.\n\n\"Philips is a bit of a germaphobe. He really doesn't like to be touched.\"\n\nI nodded to him. \"Nice meeting you.\"\n\nHe only responded with a curt nod and I left thinking he was one of the creepiest men I'd ever met.\n\nThe trips broke up the monotony of security programs and paperwork, so between Jessie and the coordinating trips, I certainly wasn't bored. Jessie always had me bring back mementos of the trips from Africa.\n\n*****\n\nAlong with employment came social obligations. Mr. Daniels was adamant that everyone from the janitors on up make it to at least four of the eight \"corporate mixers\" that he had every year; it was written into the employee handbook and reinforced frequently. They actually sent out RSVP cards and secretaries and office managers chased down answers. Bethany hinted, and Jessie confirmed, that more was better. If you were out of town on business, that was fine, just make a note of it in your \"Regrets\" response, but if you had any chance of making it to the mixers at all, you should take it. Mr. Daniels was at every one of them and he remembered every employee who showed up, and that reflected in the end of year bonuses. Since four of the gatherings were barbeques, two were semi-formal and only two formal, most people could find four they could tolerate.\n\nI figured I'd better attend all I could, and decided to drag Jessie along if possible, at least that way it wouldn't be boring. I brought it up while we ate at a new Thai place Jessie had discovered.\n\n\"I'm going to the Fourth of July Barbeque, are you interested?\"\n\nShe shrugged, her fluorescent purple hair bouncing. \"I could be. It's more a family event, but they rent out the whole resort, the rooms are free, and the food is always amazing. The only problem is that you have to participate in some of the events to go.\"\n\n\"I really need to hit as many of these mixers as I can, and I can't think of a better game partner than you.\"\n\nShe flashed me a smile. \"I already looked up the events. I think we can place in the rock wall race, because only one couple has signed up. I'm pretty good at trivia, so if I con Bethany and her husband into teaming up with us, we have a shot at not looking like idiots there. He's a history professor and wicked smart at trivia.\"\n\n\"We need one more event, right?\"\n\n\"Not the thirty second hot dog eating contest. I got talked into that last year. I won, but I not only got sick, I got propositioned by every jackass with a dick for six months.\"\n\n\"Well that explains why you are so good...\"\n\n\"Shut up.\" She glowered at me in mock fury.\n\n\"Okay. Got it. So how about the Mud Run obstacle course race? It's the big event, it's on a Sunday and the rock wall race is Saturday morning, so we'll have time to recover.\"\n\n\"I'm too short for the walls.\"\n\n\"I've done a lot of obstacle courses; it's practically an art form in the Army. I know some tricks for walls.\"\n\nShe shrugged. \"It's messy, but it might be fun. You sure you will be there? I don't want to be left hanging.\"\n\n\"I should be back at least three weeks before, I'm only going for two weeks this time. This whole thing is probably a waste of money on their part, but I'm doing my best and I'm getting paid.\"\n\n\"Did you tell them it seems pointless?\"\n\nI finished my bite of Pad Thai noodles. \"I did, I thought I was pretty circumspect, and I sent a nice polite note up the chain. The only one that responded was Philips. He basically told me to shut up and do what I'm told.\"\n\n\"I've only met him a couple times. He makes my skin crawl. Never says anything, just stares and looks at me like I'm an insect. I don't even know what he really does; none of the security people report to him.\"\n\n\"I know some of the meetings I've set up in the CAR and DROC are for him, but that's all.\"\n\nJessie spooned some Jungle Curry onto her rice. \"I know he reports only to Mr. Daniels.\"\n\n\"I just don't trust him. All the stuff I've gotten from him seems... I don't know, 'condescending,' maybe.\"\n\n\"Probably just an asshole. You're the new guy who's done that cool Special Forces stuff, maybe he's just jealous.\"\n\nI watched our mangos and sticky rice arrive. \"Just doesn't feel right.\"\n\nOur conversation turned back towards the Fourth of July mixer.\n\n*****\n\nI did get back in time. Jessie and I came in second on the rock wall race out of five couples, but, honestly, two of them were doing it because everything else was full. Jessie turned out to be right about the Trivia contest. It wasn't even close. I managed to answer two whole questions, and Bethany about five, but Jessie and Howie, Bethany's husband, pretty much ran away with the competition, while we all drank too much and ate dry-aged steaks that must have cost fifty bucks apiece.\n\nDespite her serious demeanor at work, after a couple drinks, Bethany turned out to be hilarious. I asked her if she and Howie intended to run the Mud Race, Bethany rolled her eyes, snickering. \"I can't believe you're asking me that! Have you looked at the obstacles?\"\n\n\"The walls aren't all that bad.\"\n\n\"Screw the walls. It's the crawl-through pipes. There's no way in hell I'm getting this forty-two-inch ass through a thirty-six-inch pipe!\"\n\nJessie, a little more than half lit, began giggling uncontrollably. \"Howie could get behind you and push.\"\n\n\"Oh yeah, I know how that would go. If I get stuck in a pipe and he gets a hand on each of my hips, helping me get loose will be the last thing on his mind.\"\n\n\"Ride 'em Cowboy!\" Jessie spun an invisible lasso over her head, grinning from ear to ear.\n\nBethany choked on her drink for a second. \"That'd be the last year we're allowed to attend!\" Her eyes widened. \"Hey, maybe we'll do it the year I retire.\"\n\n\"Go out with a bang!\" Jessie howled. Howie nodded agreeably and both women worked their way up to breathless laughter.\n\nI shook my head. \"Sorry I asked.\"\n\nHowie gave a half smile. \"I keep forgetting to keep the two of them apart when they get to drinking. They feed off each other.\"\n\n\"I can see that.\"\n\nHe smiled fondly over at his wife for a second, then turned towards me. \"Bethany tells me you're the Africa Expert as well as the Security Manager. Said Daniels himself chose you.\"\n\n\"Alan's a pretty good guy, but I think the board probably identified me.\"\n\nHe pursed his lips, puzzled. \"No, I'm sure she said it was the old man, not Alan.\"\n\nI started to ask, but Jessie fell back against me laughing wildly at something Bethany had said. Howie held his hand up. \"Sorry, Cal, but I think we need to rope these two in and get them to bed before they go overboard.\"\n\nBethany grabbed his hand. \"Come on, let's go practice that pushing technique.\" He shrugged helplessly as she dragged him away.\n\nI half carried Jessie up, and put her on the bed while I brushed my teeth. I was just thinking about Howie's confusion when I heard a noise behind me. Jessie stalked towards me, dropping her dress to the ground. \"Let's see if we can put some of that red meat you ate to good use.\"\n\nThe victory, sex, and grilled steak induced coma that we fell into later that night was well earned, and it was a damn good thing the Mud Race started late because we barely made it to the start line at eight o'clock. Not too many of the other runners looked all that much less bleary than Jessie and me.\n\nMr. Daniels made a few opening comments about the race symbolizing perseverance and a lot of other stuff that I was frankly too tired to listen to, then he fired the starting pistol.\n\nIt was absolute chaos, at least a hundred and fifty runners pouring into a three-mile-long mud course that had been heavily watered for over a week. It was a sort-of \"choose your own destiny race.\" It had about six different routes with different challenges.\n\nI half-dragged Jessie for a ways since the start of the course was really deep mud. Less than fifty feet into it, not one runner was anything but a mud colored blob. It was easy to see we weren't going to finish in the top five. Some of the couples obviously took it really seriously and must have trained on how to run mud courses. Still, we struggled along, laughing mostly at each other, though when one of the bustier secretaries had her tube top pulled down to her waist by the mud I cracked up.\n\n\"Who wears a tube top to a mud race?\"\n\nJessie gasped for air. \"Tiffany always does. I think this is the third year running she's lost her top that way.\"\n\n\"Not really an accident then?\"\n\n\"I think it is her version of sitting on the copier to make 'Christmas Cards'.\"\n\n\"Can't really see anything with all the mud.\"\n\n\"I think that's the idea -- blatant exhibitionism without the actual risk. Daniels turns a blind eye to it.\"\n\nLaughing our way along we managed to get two miles into the course before we saw somebody in real trouble. Shielded from nearly everyone by a clump of bushes, a woman had slipped and had her foot trapped under a short wall. Her partner was frantically digging as quickly as possible to keep her from slipping under in the three feet of near liquid mud. They must have been way ahead of us, because he was obviously exhausted and starting to lose the fight to keep her from going under.\n\nWe stumbled over to them. \"You need a hand?\"\n\nThe guy nodded, choking in air, unable to answer while the woman looked at us with more than a bit of panic.\n\nJessie immediately joined in keeping her face clear of mud while I pushed down and worked an arm in to get her foot free. It didn't take long, with the three of us working together, though she lost her shoe for good. I found a chunk of rock and jammed it in the gap under the wall to save the next person to come along. We stumbled along in a little group, him and me helping the girls up over the walls, then pulling ourselves over. It was just a matter of height.\n\nThe guy looked at me. \"I couldn't pull her out.\"\n\n\"You have to break the suction; the mud's like quicksand. I'll send an email up the ladder and make sure they put people along the course for safety next year.\"\n\nHe shook his head. \"Don't worry about it. I've got it covered.\" Once they scraped enough mud off their faces, it turned out our new friends were Alan and his fianc\u00e9e, Karen.\n\nWhen we finally reached the end, they insisted we cross the line before them because we'd stopped to help them. As we headed over to the wash-up station to clean up, Alan laughed as he washed the last of the mud out of his hair and off his face. \"I was really hoping to place higher this year.\"\n\nKaren laughed. \"We did okay, I survived and for a while it looked like that wasn't going to happen.\"\n\nJessie pulled her waistband out and peered down into her shorts pensively. \"I have mud in places a lady should never have mud. Good thing I'm no lady.\"\n\n\"Yeah, I'm really glad I don't have a gynecologist appointment this week. Scare the hell out of her.\"\n\nJessie grinned back at her. \"Unless she's really into gardening. She'd need a garden trowel to find anything.\"\n\nThey both laughed cheerfully together, while Alan and I traded wry looks. Alan finally grinned. \"My Father paid for a very expensive brunch, and I think we need to make a serious dent in the champagne. Meet you there after we clean up a bit?\"\n\nI nodded. \"At least it'd wash the taste of mud out of my mouth.\"\n\nWe cleaned up and were back down in less than a half hour. Jessie paid tribute to the Mud Run with mud brown hair, nail polish and lipstick.\n\nAlan and Karen had grabbed a table and already heaped it with food and a chilled bottle of Mo\u00ebt &amp; Chandon.\n\n\"What did you do? Order four of everything?\"\n\nKaren nodded and held up a chocolate filled croissant and pointed to a plate with three more. \"Better catch up you two, I'm about to drown my memories of endless mud in chocolate and champagne.\"\n\nJessie and I dug in, laughing and joking with Alan and Karen. Karen seemed to have all the self-confidence and assuredness that I sensed lacking in Alan.\n\nShe'd gotten her undergraduate degree at Wellesley, then moved on to an MBA at Harvard Business School. She seemed more comfortable with the idea of running a multinational company than Alan did. They really complemented each other.\n\nBy the time we left, Alan and Karen had promised us an invitation to their wedding.\n\n***\n\nThe next few months were a blizzard of work and trips. I did trade emails with Alan, and we even managed several games of racquetball where we were pretty much evenly matched. We also downed a few beers together on occasion, until the tempo of my trips to Africa picked up.\n\nI was gone for the next two mixers, which was very disappointing, partially because Jessie managed to go to the Halloween party and said that Tiffany dressed up as Elvira with \"a bit more bare skin.\" She did take pictures, though, and it was truly impressive. I asked about Alan and Karen, but she hadn't seen them there, which was odd.",
        "More bothersome, something about the trips to Kinshasa was starting to seem peculiar. The guys I was setting up meetings for seemed to know each other already, and there didn't seem to be any rhyme or reason to the scheduling. Even for Africa, where delay for monetary gain was a time-honored tactic, it was just feeling wrong.\n\nI sent a note up to Alan about my concerns; his response was distracted and a bit confused, but he promised to kick it upstairs to his father.\n\nI didn't catch it at the time, but he completely ignored my polite, \"send my regards to Karen.\" Maybe, if I'd have noticed that, I wouldn't have been caught so completely flat-footed at Christmas.\n\n***\n\nThe Christmas Ball was the most formal of all of Mr. Daniel's mixers. White tie, ball gowns, entrees nobody could pronounce, and live orchestra music in a massive ballroom were the order of the day. I'd have asked Jessie, but she sent me a note before the invite even reached my desk, telling me to pick her up at 5:30 on the day of the ball, that we had a room reserved and that she already had an \"unbelievable\" dress picked out.\n\nThe dress really was unbelievable. When Jessie answered the door in a shimmering opalescent white sheath dress, with matching hair, lipstick and nail polish, I was momentarily dumbstruck.\n\nShe gave a smug smile. \"Cat got your tongue?\"\n\nI caught my breath. \"Wow. Just, wow.\" I squeezed my eyes shut and opened them again. \"Just unreal.\"\n\nHer smile went a little lopsided, in a good way. We both recognized that we were just friends with benefits, but she liked being appreciated. She took my arm and we headed out to my car.\n\nAfter dropping the car with the valet, we headed into the grand ballroom, an enormous hundred-year-old venue that they'd managed to keep in near perfect condition.\n\nWe found our table off in a remote corner, which bothered me a bit, as stupid as it seemed, I'd thought we'd had a lot of fun with Alan and Karen, and I'd kind of expected to be a bit closer to wherever they were sitting. Still, Bethany and Howie ended up at our table and so we had entertaining conversation and when the dancing started, we traded partners for a couple of dances.\n\nI caught a glimpse or two of Alan, and finally during a lull, Jessie and I decided to go over and socialize a bit.\n\nWe were still twenty feet away when Jessie suddenly stopped and tightened her grip on my arm. \"Holy shit. Who the hell is she?\"\n\nI followed her stare. The woman hanging onto Alan's arm wasn't Karen.\n\nShe was tall, with a figure that was barely believable; mile-long legs, and long golden-red hair. She radiated sex like a supernova. She held on to Alan with an easy confident belief in her ownership. We weren't the only ones looking at her. Nearly every man and woman on the floor had one eye on her in a mix of jealousy and barely concealed lust.\n\nJessie blinked. \"Wow. Where the hell did she come from?\"\n\nAlan suddenly caught us staring. \"Cal, Jessie, come on over here and meet Trina.\"\n\nThe redhead turned to look at us and smiled, a practiced, perfect blinding smile. \"Trina Roberts, I'm Alan's fianc\u00e9e.\" She didn't seem to recognize me at all, but I knew her. I hadn't seen her since the day before I left for basic training, but there was no way I'd ever forget her.\n\nI kept my face straight with enormous effort. \"Nice to meet you, Trina. I'm afraid I've been out of the country, so Alan hasn't had a chance to tell me about you.\"\n\nA look of relief washed over Alan's face when he realized I wasn't going to say anything about Karen. \"Yes, it's just been so hectic; we just keep missing each other. Trina and I met in October.\" He went on to discuss a relatively meaningless charity ball and how their eyes had met, and they \"just knew.\" It was all very romantic, if you discounted the unspoken part about Karen.\n\nJessie followed my lead, introducing herself with distant politeness. We excused ourselves and wandered up to the balcony overlooking the ballroom.\n\n\"Damn.\" Jessie shivered. \"Karen never stood a chance against that.\"\n\n\"She's... something.\"\n\nJessie eyed me wryly. \"If you get a shot at hitting that and pass it up, I'm getting you an eye test, a testosterone check and maybe a mental exam. That's a once in a lifetime ride there. As in 'You-must-be-this-tall-to ride-this ride.' Hell, I'd do her right there on the floor.\"\n\n\"She's pure poison, Jessie. I can feel it.\"\n\n\"Don't I know it. But it'd be a helluva way to go.\"\n\n\"It would be. Maybe.\" A voice came from behind us.\n\nI turned to face Mr. Daniels. \"Sir.\"\n\n\"I'm glad to find you two together. I need to speak with you both and this is as good a time and place as any.\"\n\nJessie edged a little closer to me and looked at him impassively. \"About what?\" Her voice was curiously flat.\n\n\"From your conversation, you can probably guess. Trina Roberts has her hooks so deep into Alan that they're coming out the other side. One minute he's happily engaged to Karen Albright, pretty much the perfect woman for him.\" He paused and smiled sardonically. \"And, admittedly, for me, since it would pretty much guarantee a partnership with Albright Financial. The next thing I know, the engagement is off, my golf games with her father are cancelled and all Alan can say is 'Trina, Trina, Trina.'\"\n\n\"What do you want us to do?\" I could see genuine concern in his eyes, but I had the feeling it was less for Alan than for the business.\n\n\"Look into her, find out what you can. Let me know if it is as bad as I think it is. Alan has made some relationship mistakes before, and it has cost the family more than a little money. He doesn't seem to be very good at discerning intent.\"\n\nJessie shrugged. \"We can do that. But what do you do if it's what you think? Alan won't listen; I can see it in his face. He won't hear anything you have to say.\"\n\nDaniels pursed his lips. \"If it's all about money, I'll make her an offer. Most of the gold diggers are happy to take a quick and easy payday against the long haul with a pre-nup.\" He glanced at me. \"I can find other ways to convince her to listen to reason.\" Without another word he turned and strode off.\n\nJessie made a sour face. \"Ick. I don't like him. He's the kind of guy that has to have everything his way. Like he'd just order you to show up in a \"slutty schoolgirl\" outfit with pigtails.\"\n\nI looked at her incredulously. \"Did you forget? Two weeks ago, you showed up at my door in a schoolgirl outfit and pigtails.\"\n\n\"Yeah. But that was my idea. It's different.\" She smirked.\n\nWhen the evening ended, as Jessie and I were heading up to our room, I glanced down and accidently looked right into Trina's eyes as she watched us. Even though her eyes were emerald green and hard as ice, all I could think of was the dead eyes of that young girl in Africa.\n\n*****\n\n\"This is bad. Really bad.\" Jessie stared wide-eyed at her computer screen.\n\n\"You mentioned that when you called me over to your office.\" I leaned back in the visitor chair. \"Define bad.\"\n\n\"Category Five Hurricane bad. Just follow the carnage. Two marriages and two divorces in less than eight years, each lasting less than a year. Named in four more divorces. Probably paid hush money for at least that many that aren't in the legal records.\" Jessie pursed her cupid lips and shook her head in slow disbelief.\n\n\"Daniels will insist on an ironclad pre-nup.\" I walked over to the window and stared out.\n\nJessie studied her screen. \"These were all old money families. The kind that are born with pre-nups in hand. Her lawyer broke them.\"\n\n\"Shit. Alan is all twisted up. He broke off his engagement to Karen. He's crazy enough over her that he might do something crazy like elope to California. No pre-nup at all.\"\n\nJessie tapped out a rhythm on her keyboard for a few seconds, and pulled up a picture from the Christmas party, then gave a low whistle. \"Damn. I forgot how hot she is. It'll be damn hard to pry any man away from that.\"\n\nI walked behind her desk and looked at our nemesis. Jessie was right, if Alan was going to throw millions of dollars away, at least she looked like she might be worth it. I wanted to tell her who \"Trina\" really was, but came up blank when I realized how it would look.\n\nJessie caught it immediately. \"Cal? What's going on.\"\n\nI took a deep breath and decided I had to trust someone. \"Laura. Her name is Laura Pike. Or it was at one time.\" I went on to explain to Jessie where I'd met her before.\n\nShe looked at me wide-eyed. \"Shit. Daniels will never believe this is a coincidence.\"\n\n\"I think you're right about that. Even I'd have trouble believing it's a coincidence, and I know it is.\"\n\n\"So stay out of it. You tell Daniels what we've learned about 'Trina' and never bring up 'Laura'. It's enough to know what he's dealing with. He'll either pay her off or scare her away.\"\n\n\"Unless she's changed a lot, scaring her away isn't going to be easy.\"\n\n\"He'll probably try to pay her off, but he'd better not be cheap. She probably has a pretty solid bank account. There's a 400-acre seaside estate in Mexico, a penthouse apartment in Beverly Hills, a penthouse apartment here, and a collection of vintage cars.\"\n\n\"I'll make sure he knows.\"\n\n\"You do that, he creeps me out.\"\n\nI headed over to my office and pondered my options while I idly picked my way through my inbox. An odd envelope caught my attention.\n\nIt was to \"PKM Advisory Services, LLC,\" and I very nearly stuck it back into the outbox as mis-delivered distribution until I saw \"Calvin I. Pickmann\" in the second line. There just aren't a lot of guys with that name. I tore it open and found a business bank account statement that totaled just over a million dollars.\n\nI felt sick. Whatever it was, this couldn't be good. Deposits had an obvious pattern, at least obvious to me. The deposits almost invariably followed my trips to Africa. I looked back at the address and saw it was in the main office building in the Center of Dallas, but to a room I'd never been to. I thought of the strange trips and Howie's comment on me being hand-picked by Daniels.\n\nI only had one person I trusted enough to ask for help. I walked back over to Jessie's office and tossed the envelope down in front of her.\n\n\"I'm in trouble. I think I'm being set up for something. I don't know what, but this doesn't look good.\" I explained the pattern to her.\n\nShe read the statement wide-eyed, then hammered at her keyboard, white faced. \"According to the records, you registered PKM Services about a month after you started here. The suite is rented out to PKM Services by Qantic. Payments made, but nothing else really. The suite is right next to Philips though...\" She paused and looked up at me. \"I think you're right; this smells bad. I can do some digging. You need to be careful, Cal.\"\n\nI nodded. \"I'll pass the info on 'Trina' to Daniels and act like nothing is wrong.\" I stopped and thought for a second. \"Could you find out more about Philips? There may be something there.\"\n\n*****\n\nI sent Daniels the information on Trina in an email. There was no way I wanted to meet him in person and risk him realizing that I knew something. Good businessmen can read people all too well. I got a short response back that he would take care of things.\n\nWhen I dropped by Jessie's office, she let me know what she'd found on Philips. Not a lot, but enough to make me worry. His full name was Eric Philips, and he was a former DEA agent who'd left that agency under a cloud of suspicion when his partner was killed and several thousand dollars had gone missing. Not enough evidence to prove anything, but it was clear what the DEA thought of him.\n\nJessie also looked into the bank account; the money was coming from anonymous accounts in places like the Cayman Islands, but she was otherwise sparse on information. Her stock answer was a harried and distracted \"still digging.\"\n\nI'd just have to play along until I knew what was going on.\n\nIt was quiet for a couple days, while I mostly tried to figure out what to do. If Daniels was stitching me up for something, I needed to know what it was and how far it went.\n\nI was staring out the window watching rain spatter against the pane in a numbing rhythm when the phone rang.\n\n\"Please hold for Mr. Daniels.\"\n\nA moment later he came on the line. \"Calvin. I need you to have a word with Miss Roberts. The bitch laughed in my lawyer's face when he offered her a four-hundred-thousand-dollar payment to leave town and leave Alan alone.\"\n\n\"What do you think I can do?\"\n\n\"Push her. Get her to understand that this is not happening. I will not allow it.\" Sensing my hesitation, he continued. \"I'd send Philips, he can be very convincing, but he is out of town at the moment.\"\n\nHis voice made it clear that he expected me to do what I was ordered, and I needed time. \"I can do that. I'll have some words with her.\"\n\n***\n\nShe opened the door to her penthouse apartment and just stood back with an enigmatic half-smile and one arched eyebrow. She was even more beautiful than I remembered. Her white silk robe was one step from sheer, and it highlighted rather than hid her unbelievable figure. The silk clung to her in a way that made it very clear it was the only thing she had on.\n\nI stepped past her and she pressed the door closed. \"Laura.\"\n\nAt least she didn't deny it. \"Nice to see you, Cal. Still playing the hero?\"\n\n\"Not so much anymore.\" I glanced around, the whole place screamed \"money\" in a million subtle ways.\n\nShe leaned back against the doorframe in an almost lazy cat-like stretch, her emerald eyes locked on me. \"So I'm guessing Daddy Daniels sent you?\"\n\n\"He asked if I could talk with you about Alan.\"\n\nGlancing sideways at me she smiled slightly. \"I'm a little surprised; I thought you'd still be too much a hero to do this kind of thing.\"\n\n\"I'm just here to talk.\"\n\n\"Did you tell him you know me?\"\n\n\"Not yet, I was hoping we could deal with this quietly.\"\n\nShe pushed off the doorframe and moved liquidly, slowly around me to a bar on the side wall. \"Is that what they call it now?\"\n\n\"I'm just trying to keep everyone out of trouble.\"\n\nShe opened a bottle and began to pour whisky into two tumblers. \"Oh, but that's not how it works, Cal.\" She turned and handed me a tumbler and took a long, slow drink from the other.\n\n\"So how does it work?\" I sipped her very expensive whisky, savoring the taste almost as much as the sight of her. She was hypnotic, almost addictive to watch.\n\n\"Daddy gets concerned, he sends a lawyer around to make an offer, just a gesture really. 'Leave my son alone.' He promises a little money. That sort of thing.\"\n\n\"And if that doesn't work?\"\n\n\"That's where you come in Cal. They send you.\"\n\n\"And what do I do?\"\n\n\"Oh, you know. You come by unannounced, loom over me, and make scary noises.\" She put her tumbler on the coffee table, widened her eyes and held her hands up in mock fear, then shook her head and sighed. \"But that just doesn't work with me.\"\n\nI put my tumbler down next to hers and stepped towards her. \"So what next?\"\n\n\"That's when you start getting a little rough with me. Slap me around a bit. You don't want to leave bruises or anything I could use to get sympathy from Alan and alienate him from Daddy, but you need to put some fear into me, teach me a lesson.\" She stepped slowly towards me one hip at a time. \"That's what you do.\"\n\n\"I don't want to do that, Laura.\"\n\nShe stepped forward until I could feel the heat of her body, and she put one warm fingertip to my lip. \"But you have to. It's part of the script. It's just how these things are done.\"\n\n\"Not by me. I still have my soul.\" Her eyes narrowed and her hand blurred, catching me with a stinging slap. She drew back for another and I caught her wrists. \"Stop.\"\n\nI made the mistake of staring into those glittering green eyes for a second; she pushed up against me and I fell into them.\n\nOne moment we were standing, the next we were locked together on the plush white carpet, her robe had somehow disappeared, and she was tearing at my shirt, the buttons snapping off and flying across the room.\n\nWe were driven by a desperate need, a desperate want, desperate memories that had surged out of nowhere. Or maybe from everywhere.\n\nBy the end of it, we lay side by side, gasping for air, trying to calm ourselves. Only our fingertips touched. I'd thrown her coffee table half up on her sofa, the whisky tumblers lay on the expensive carpet. My slacks hung on the corner of the sofa, over a crumpled shirt that would have to be replaced.\n\nI studied the ceiling for a moment. \"I feel like shit.\"\n\n\"Because of Alan? You know that isn't real, it never was.\"\n\nThat didn't make me feel any better, but there was no point in arguing. \"What are you doing here, Laura? I don't want you to get hurt.\"\n\n\"Me? It's too late for me, Cal. I'm as hurt as I'm going to get.\"\n\nWe both rolled up on our sides to face each other. \"I think Daniels is dangerous. Alan has made... mistakes before and it has been expensive.\"\n\n\"So do what they're paying you to do.\"\n\nI searched her eyes for a second. \"I think we both know I couldn't ever harm you.\"\n\nFor a brief second I saw a flare of pain. \"I've believed that about a man before. I was wrong.\" She paused. \"I married, right out of college. Just like Mom said. You know the type. The football player, the fast car, the family with all the money. It lasted two years before it all came apart.\"\n\nThere were tears in her voice, but none in her eyes, just cold anger. \"He had girls everywhere. I knew how he was when I married him, and I put up with until I got pregnant. One day I lost it; I threw a plate at him. He threw me down the stairs. I lost the baby. I lost the ability to have a baby. Then he decided if I couldn't give him children, I wasn't 'wife material' anymore. The pre-nup had me out the day I left the hospital with no money.\"\n\n\"So how did this happen.\" I gestured at the room around us.\n\n\"I found a lawyer. She broke the pre-nup. They're amazingly delicate things, you know. One little mistake and it's out the window. I got half his money. The maid saw him hurt me. It cost money to get her to testify, but it was worth it. He spent a couple months in jail learning how to be nicer to people.\" Her eyes glittered, hard and cold. \"My lawyer had some friends there who made sure he learned his lesson about beating women.\"\n\n\"And since then?\"\n\n\"Well, I knew the way the game was played after that.\"\n\n\"So since your marriage didn't work, they all need to be destroyed?\"\n\nI expected anger, but instead she smiled; it was edged in ice. \"I've never broken a marriage where a man wasn't already playing around. They deserve it, and their wives deserve to know they're not worth keeping. I even make sure the wives get the evidence they need. Very quietly, of course, through my lawyer.\"\n\n\"What about Alan? What'd he do to deserve this?\"\n\nShe looked away. \"Alan is a special case. Believe me, this is for the best.\" A catch in her voice told me it bothered her.\n\nI didn't know whether I should or not, but I was running a deficit on trust for the whole Daniels clan, so I dropped it. \"So what now? We're right back where we started.\"\n\n\"You go to Daniels, tell him you really roughed me up.\" Her mouth quirked in a real smile. \"That's close enough to the truth anyway, just don't tell him it's mostly carpet burns. Then tell him I hinted that I might leave if the offer were a bit better. He'll up the ante, and I'll get out of here while things are still... peaceful.\"\n\n\"You will?\"\n\n\"After I get what I came for they'll never see me again.\"\n\nI laid back and looked at the ceiling. \"So that's that.\"\n\n\"Almost.\"\n\n\"What else is there?\"\n\nLaura slid up on top of me with a hungry smile. \"I'm not quite roughed up enough; I think one more time should do the trick.\"\n\n*****\n\nI watched the accountant transfer the money to Laura's account. Laura sat back with cold satisfaction etched on her beautiful face.",
        "\"There. Seven hundred fifty thousand dollars, paid as a consulting fee from Mr. Daniels personal investment accounts.\" He sighed as he closed down the laptop. Laura looked at something on her phone and nodded to her grim-faced lawyer. Her lawyer pushed a memory stick over to one of the Qantic lawyers.\n\n\"Miss Roberts will vacate her apartment tomorrow and leave the state of Texas for at least five years. The stick has a video statement by her to that effect. She also declares that she has had no interest in Alan Daniels except from a financial perspective.\"\n\nAside from Laura and the Qantic accountant, only three lawyers and I witnessed the transaction. It'd all taken place in her lawyer's office in an oddly sterile conference room. Laura pointedly ignored me. Daniels had insisted I be there as an implied threat, a reminder that he could do more than offer money. He, on the other hand, had distanced himself from the proceedings. Alan, of course, was unaware of the coldly financial sacrifice of his dreams of happiness.\n\nWhat I couldn't understand was the sheer glee in her eyes as she walked past me to leave. From what Jessie and I had seen, the money just wasn't high enough to really buy her out.\n\n*****\n\nConsequences to the innocent are, of course, inevitable. It was almost 2 AM when I got the phone call to come down to the police station. He was uncooperative, and the cops found my Security Manager card in his wallet.\n\n\"No bail, just get him the hell out of here.\" The cop at the desk just wanted Alan gone. Alan Daniels in the drunk tank would be way too much trouble, and she didn't want it. She led me to the holding cell of the substation.\n\n\"Where'd you find him?\"\n\n\"Lobby of the Mandalay. They really didn't want to call us, but he was getting pretty unruly.\"\n\nHe was half-crouched, half-sitting on the end of the single bed in the cell, but he opened his eyes as soon as we entered. \"Fucking Judas.\" He tried to lunge off the bed at me, but just flopped onto the filthy floor, out cold.\n\nThe cop helped me get him up on my shoulder, then pushed an envelope at me with his belongings. \"Cell phone, belt, wallet, thirty dollars and thirty cents in cash. You gonna be able to handle him?\"\n\n\"I'll probably be wearing whatever he drank for supper, but I'll make it.\"\n\nI dragged him out to my car and strapped him in the seat. I tried to think of who to call. No way I was handing him off to his asshole father, and I couldn't think of anyone else who cared enough about him to watch over him.\n\nExcept, maybe, there was that one person who might. I pulled his phone out and checked it. Poor na\u00efve Alan didn't even keep a screen lock on it. I stared at the picture he had set on his phone as wall paper and felt nausea. I flicked through the contacts and made the call. She didn't sound thrilled, but she'd answered, and I told her I'd just dump him on her doorstep if she didn't let me bring him in.\n\nI dragged him up the steps then into the high-end townhouse while she held the door.\n\n\"What am I supposed to do with him, Cal?\"\n\n\"Keep him away from sharp objects for a couple days. Treat him like shit for a while, then maybe forgive him. He didn't have a chance against her. You know he didn't.\"\n\nKaren pointed down a hallway. \"I do know. That's what hurts. I didn't even see the bitch coming.\"\n\n\"He doesn't love her or anything like that, it was just infatuation.\"\n\n\"Alan should have been smarter than that. Pisses me off.\"\n\n\"You've always been the sharper half, Karen, remember that.\" I tossed Alan up on the bed and pulled his phone out, flicking it on and holding it up for her to see. \"Somebody sent this to his private number from a burn phone. If his father had it, he'd have thrown it in his face. If you wanted revenge, you'd have sent it from your phone so he'd feel worse. You're the only one who stands to gain from sending this anonymously. That's why I'm here.\"\n\nShe stared at the picture of Laura and I tangled up naked on the carpet. \"I had her place wired. I knew if I waited and kept the surveillance on, she'd fuck up sooner or later. I just didn't expect it to be you. You're the only real friend Alan had. The only one who didn't want something from him or his father.\" She hissed the last.\n\nI sighed. \"There's history between me and her. It goes back a long way. Long before any of us met.\"\n\n\"So I heard in the tapes, her real name is Laura, right? Now I get her leftovers?\"\n\n\"No, Alan almost got carried away by a wolf. We got lucky and drove the wolf away. He's not leftovers; he's a victim. If you want him to be, he can be a survivor.\"\n\nShe grimaced at him. \"He's a cheating asshole.\"\n\n\"Maybe, but if you hadn't wanted him back, you wouldn't have sent the picture that way and then let me through the door with him. He's inoculated now, he'll never do it again. You made sure of that.\"\n\nKaren's expression softened, just a bit. \"There probably isn't another one like her, is there?\"\n\n\"I don't know. Maybe there is, but now you know what to watch for.\"\n\n\"He'll be making up for this for the rest of his life.\"\n\nI rolled Alan on to his side and braced him with a pillow. \"And he'll thank you every day for letting him. Just keep him on his side or the rest of his life could be ten minutes. I don't expect Alan will want anything to do with me anymore, so I wish you two the best.\"\n\nKaren saw me out. As I headed home, I reflected that with all Karen's manipulation and deception, maybe the only real difference between her and Laura was that she actually loved Alan.\n\nAt least a little. Maybe it was enough.\n\n*****\n\nI dragged into the work the next morning, exhausted. I opened the door to my office to find Jessie already sitting on my desk next to a pile of manila envelopes. She looked somber; of course her hair, lips and nails were all dead black, so that may have made it a bit more obvious.\n\n\"It's as bad as you suspected. Daniels and Philips are setting you up to take the fall for covering up that industrial spill on the Ubangi. Evidence tampering, witness tampering, obstruction, corruption, extortion. Everything. Daniels took it on as a favor to be paid back later for one of the French-aligned CAR factions. He didn't realize how bad it was going to get and he decided he needed a fall guy. Philips is doing most of the work.\"\n\nI sat heavily next to her. \"Shit.\"\n\n\"Cal, their plan only works if you can't testify. It'll only work if you're dead.\"\n\nI sighed. \"What have you got?\"\n\n\"Some emails, but mostly texts. Everybody forgets the company backs up the texts from company phones for five years.\" She pointed to the stack of envelopes. \"I've got it ready to mail out. FBI, Department of Justice, IRS, and every other agency I can think of.\" She shrugged. \"I even have the Department of Agriculture in there somewhere.\"\n\n\"I could just take it over to the FBI office.\"\n\n\"They'd take one look and drop you in jail until they can sort it out. Philips was DEA and Daniels has reach. You wouldn't make it alive until morning.\" She reached up and touched my lip with one fingertip. \"I may not love you, but I'll miss you Cal. I really will.\"\n\nI grabbed the stack of envelopes and headed out to the post office.\n\nIt was less than half an hour later when Daniels called me. \"Calvin. I need you to get over to Trina Roberts' place and stop her from leaving if she's still there.\"\n\nI almost told him to fuck off, but held my tongue. \"Why? You wanted her to leave, she's leaving.\"\n\n\"Not with seventy-five million dollars of my money.\"\n\n\"It was seven hundred fifty thousand. I was there, I watched it happen.\"\n\n\"I had a bad feeling about it and had it checked. Somebody hacked the link, caught the computer between the display and the security system. The geeks say it's a variant of something called 'data scraping' whatever the hell that means. You guys saw what they wanted you to see. They got seventy-five million dollars of my money. You stop her from leaving. Philips and I will get there as fast as we can.\"\n\nI stomped on the gas.\n\n***\n\n\"Cal.\" Laura was dressed down in jeans and a blouse, but what really caught my attention and staggered me for a second, was the smile on her face, a real, honest smile that went to her eyes. She was genuinely happy to see me.\n\n\"Daniels is on his way here with his enforcer. They caught your little game with the money and he wants blood.\"\n\n\"Shit. I thought we had another ten hours before they'd notice. Even had some of the money routed to Philips's bank account to confuse things.\"\n\nI could hear footsteps coming down the hall. \"Hide.\"\n\nShe nodded, then slid into the closet as they began pounding on the door.\n\nDaniels and Philips shoved into the room.\n\n\"She's gone.\"\n\n\"Why did you let her leave?\" Daniels glared at me.\n\nI pretended to look out the window. \"She was gone when I got here.\"\n\n\"Goddammit. It'll take weeks to hunt her down and deal with her.\"\n\nI didn't say anything. I just needed to get them out of the apartment. Philips seemed to be drifting aimlessly, not really searching.\n\nDaniels rubbed the bridge of his nose. \"Might as well do it here anyway.\" Philips pulled out a small revolver, a short barrel .38, and leveled it at me. He stepped over behind me and put one hand on my shoulder.\n\nDaniels walked over to the bar and examined the bottles slowly pouring himself a drink. \"It's just business, Cal.\" He pulled a case out of his jacket pocket and pulled out a syringe. \"Philips tells me it doesn't hurt.\"\n\n\"Murdering me to cover up your mistake? Seems pretty personal to me. Not everything is business.\"\n\nThe closet door opened, and Laura stepped out behind us, a small automatic in her hand. \"No, not everything is business.\" Philips started to turn but she stopped him. \"Put the gun down.\" Something in her voice made it clear she'd shoot. He tossed the revolver onto the sofa.\n\nDaniels had the sheer gall to look betrayed. \"So I guess she didn't leave.\"\n\n\"I guess not.\"\n\nLaura gave a shark-like smile. \"No she didn't.\" Her voice dripped sarcasm as she waved Philips away from me.\n\nPhilips let go and started to back away. I spun and punched as hard as I could, staggering him back into the wall. He tried to fight back, but it was too late. I hammered him until he slumped to the floor.\n\nDaniels stood rigid, looking at me in shock.\n\n\"What was the plan? Unsolved murder in the missing woman's apartment, maybe get law enforcement to do your dirty work?\"\n\nLaura cut in. \"Cal, do you remember when I told you about my father?\"\n\nI nodded. Daniels looked lost.\n\n\"Robert Pike, that was his name, though I don't expect you would remember that.\" She looked at Daniels with a curious tilt of her head.\n\nHe shook his head slowly.\n\n\"You 'downsized' his department one year so you could pay yourself a bigger dividend. I looked into it, the division was doing well, but you reported that you wanted a bit more cash flow for the investors, so you chopped it.\"\n\n\"That was business.\" His voice was slow and uncertain.\n\nHer eyes narrowed to slits. \"That's your answer for everything, isn't it? But it wasn't. It took me years to find out, but I did. You did it to cover up a mistake, a drug experiment that caused birth defects in testing. You eliminated the division that was supposed to do the long-term follow-up for the testing, to shift the responsibility for that to someone you could control. Thirty positions, including my father's. It killed him. It took a year, but it killed him.\"\n\nDaniels's face went blank. \"So you decided to take my money. It's all about the money...\"\n\nLaura cut him off, eyes blazing like an angry cat. \"I didn't do this for the money, I did it to hurt you. I thought of going after you, I could have done it... 'Sugar Daddy.' But you know that old joke about the difference between politicians and whores? There are some things a whore won't do for money. I couldn't bring myself to even think of touching you.\"\n\n\"So you went after Alan.\" Daniels voice was dead calm.\n\n\"Not really. I knew you didn't care about Alan, the only thing you care about is money. So instead of taking Alan, I took the money. I just used Alan to do it.\" She shot a glance at me.\n\nHer face was drawn, and I could see her finger start to whiten on the trigger. \"Laura, he's already screwed. I just sent evidence of the cover-up he was running in Africa over to the Feds, he'll spend the rest of his life in prison.\"\n\nDaniels looked at me, trying to calculate how serious I was. A sound drew my attention as Philips uncoiled from the floor to rush me. I could tell he was still bleary from the beating, but he was still too damn fast. He cannonballed into me, managing to get one arm around my throat. Both of us slammed first into Laura then caromed into Daniels.\n\nAs we crashed into the bar, I twisted, trying to break Philips's grip and felt another pair of hands gripping my arms. As we tumbled, I saw Laura's gun skitter across the floor and disappear under the sofa.\n\nI was fighting, but losing, starting to black out, until Daniels suddenly let go, freeing my arms.\n\nI pulled Philips's arm loose, just enough to choke in air. With that I was able to get my legs under me, shoved and catapulted us backward. I felt the air go out of him as we smashed into the wall and I pulled free, diving for the sofa where he'd dropped his gun.\n\nI probably wouldn't have made it, but Philips tripped over Daniels, giving me time to scoop his revolver out of the sofa.\n\nFrom the rage on his face, I didn't have a choice. I fired the snub nose .38 twice and Philips crumpled lifeless to the floor.\n\nI finally looked at Daniels. He was drawing ragged breaths, only the whites of his wide-open eyes showing. It didn't make any sense at first; then I saw the hypodermic sticking out of the side of his neck. I pulled it out; only about half the serum had been injected.\n\n\"It was all I could do.\" Laura was half crouched by the remains of the bar, rubbing her rib cage. \"What do you think it was?\"\n\n\"I don't know but it wasn't good.\"\n\nFor the first time since we'd met, all those years ago, Laura suddenly seemed uncertain. \"What do we do now?\"\n\n\"We leave.\" I picked a towel from the wreckage of the bar and wiped down the revolver, put it in Daniels hand for a few seconds, making sure to press his forefinger on the trigger. \"We clean up a bit, make it look like it was between them.\"\n\nI took the syringe from Daniels neck, wiped it and put it in Philips' hand. \"Cops like simple answers. We'll just give them one. Your little trick with the money going into Philips account makes it a pretty neat little package.\"\n\nWe left Daniels with Philips's body, but I dialed 911 on his cell phone and dropped in on the floor on the way out.\n\nLaura, it turned out, had a red 1966 GTO convertible stashed in a nearby parking garage. There was an atlas in the glove box with the route to Mexico already marked.\n\n*****\n\nI was sitting in my beach chair, drying off from my last run, the surfboard leaning lazily against another chair off to my side. The cool ocean breeze was a welcome contrast to the hot dry air.\n\nOn my tablet, I looked over the Wall Street Journal headlines. Daniels was under so many federal indictments that just reading them off would take a week. Even with his pull, the combined weight of so many agencies and governments baying for his blood would have brought him down. That didn't matter now, though, he'd never be prosecuted. The picture of him showed a bent old man in a wheelchair, the poison-induced stroke hadn't killed him, but it'd imprisoned him in his own body forever, unable to even speak.\n\nA lone female figure delicately picked her way down the stairs towards us, coming from the massive hacienda to our blinding white perfect beach.\n\nI glanced over at Laura, laying nude, half asleep, on a sun shade-covered platform. A true redhead, there was no way she could tan, just \"fry and freckle,\" but that didn't mean she didn't relish laying out naked in the open air, and I certainly wasn't complaining about being on sunblock application duty.\n\nThe woman walking towards us came into focus. She was petite, with a pixie cut and dark brown hair, in a blue wrap dress and sandals.\n\nLaura turned her head and smiled. \"Hey, Babe, how'd it go?\"\n\n\"It was perfect, just like we planned; the records are all gone.\" I watched in shock as Jessie dropped her wrap dress to the ground and stepped out of her sandals. She wasn't wearing another stitch. \"Move your butt.\" She slid onto the platform and settled in next to Laura. \"I had all the servers way overclocked, and the whole server farm fried. Fire broke out and the sprinklers finished it off. The half dozen memos I sent up over the last two years about how badly the server farm was set up and how we needed to shift to cloud storage back up paid off.\"\n\nLaura chuckled. \"Did you get to lose your temper at the board meeting?\"\n\n\"I even threw a binder at the head of IT. Pompous asshole. Alan and Karen backed me up and asked me to stay, but I refused to stay employed where I wasn't being taken seriously. They insisted I take a really nice severance package. Of course, the FBI thinks Daddy Daniels set the fire up on purpose. They even added an obstruction charge.\" Jessie grinned.\n\nLaura shook her head. \"They never had a clue.\"\n\n\"I think Karen suspects, but she doesn't care. She got what she wanted. She's pretty much running the company. Because of all the secrecy and precautions Daniels set up, she managed to separate the company from Daniels' dealings in Africa. Karen and Alan are getting hitched in June at the Omni Mandalay. I hear the pre-nup is Armageddon-level Mutually Assured Destruction.\" Jessie rolled up on one elbow and grinned wickedly at Laura. \"She quietly asked me to pass an invite to the wedding to Cal, but I don't think she wants to see you there.\"\n\nLaura laughed softly. \"I bet not.\"\n\nThey quieted for a moment.\n\nI broke into their reverie. \"So how long have you two been working on this?\"\n\nLaura focused her shining eyes on me. \"Two years.\"\n\n\"Met her at a club in Austin and she seduced me. She's really, really good at that, you know.\" Jessie smiled and sent me a quick raise of her eyebrows. \"She told me about Daniels, asked if I was interested in some real money.\"\n\nLaura closed her eyes. \"You almost screwed it all up, Cal.\"\n\nJessie nodded. \"Once Laura realized who they hired and that they planned on making you the fall guy for the whole Ubangi River cover-up, she was determined to rescue you.\"\n\nThe full scope of their plan hit me. \"So now what?\"\n\nJessie flopped back onto the platform. \"I just dropped by to let you guys know that it's all clear. The FBI has even lost interest in you. I met a really cute girl in Cabo that I have to get back to tonight. I'm thinking of taking her to Paris to go shoe shopping.\"\n\nLaura turned up on her side and eyed me cautiously. \"I don't have any plans to go shoe shopping or anything else. So I guess the rest is up to you.\"\n\nA real hero would have been offended and angry at being manipulated like I so obviously had been. A real hero would have left, stuck to his principles and stormed off.\n\nBut as I said, I'm no hero.\n\nPost Production Notes:\n\nI once heard the \"noir\" genre described as \"A woman with a past meets a man with no future.\" This story touches on that, and it is a nod to \"Gilda,\" \"The Lady From Shanghai,\" and \"Double Indemnity.\" \n\nSpecial Thanks\n\nThanks to blackrandi for top-of-the-mark line and content editing on this story; to sbrooks103x for amazing line editing and beta reading and Crkppr for beta reading. They all did this on extremely short notice, with just a couple days to the deadline. There are others who contributed ideas and discussion: Thanks to all of you, I appreciate it and continue to learn from you input. Any errors are entirely mine - probably added after their assistance. ",
        "As always, I need to mention my wife. The Missus contributes far more than she'll ever admit, including characters, ideas and what little sanity manages to sneak in."
    ],
    "authorname": "Todd172",
    "tags": [
        "magical mystery tour",
        "caper",
        "noir",
        "laura",
        "dallas",
        "africa",
        "jessie"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-fury-2"
}