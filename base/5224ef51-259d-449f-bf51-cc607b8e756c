{
    "title": "Caroline's Solution",
    "pages": [
        "Thanks to Literotica member, Smoothed for his help with editing.\n\n*****\n\nCaroline Eriksson had the best cubicle on the entire floor at the office. It didn't have windows, or a comfortable sofa, or nice plants. It wasn't large and spacious or decorated any more nicely than the others. None of those reasons were why it was the best. It was best because of the gossip. The back of her cubicle was a shared wall that backed up to the breakroom. There was an air intake grate just under her desk, and another that matched it in the other side. From her place, she could hear even the quietest of conversations with only minimal effort. \n\nShe had been the first to hear of pregnancies, new romances, and failed marriages. She was the first to hear of her co-worker's son, Jack, passing away, and she knew about her ex-boss, Chuck, and the affair he was having with the receptionist. She heard all the office gossip first-hand. Of course, Caroline never did anything with the information. She considered herself a good Christian and never spread rumors, or shared in any gossip, but it made her job of editing copy for a nationally circulated news magazine a little more interesting.\n\nCaroline's strong religious beliefs motivated her to serve those in need within her community. She tutored abused women at the shelter, taught Sunday school to first graders, and she regularly donated to the local homeless shelter. But despite her beliefs, and her commitment to service, she was a very lonely woman. \n\nCaroline's mother and father were born in Sweden and Caroline had a stereotypical, Swedish-blonde look to her: long, straight pure-blonde hair with a luxurious, natural sheen and bright, blue eyes; she had an almost angelic appearance. Her perfectly proportioned, tall and slender frame, made her stand out in a crowd. She had a rare and remarkable beauty. Yet with all of her natural gifts, Caroline still had trouble holding on to boyfriends.\n\n\"You don't want to have sex, Caroline!\" She could still hear Stephen's cold, critical words as he broke off their two-month relationship. \"You say you do, but you don't. You have some serious issues.\" On that night, he slammed the door to her townhouse and never called or texted her again. Despite her repeated explanation of her condition, he thought her problem was purely psychological. \n\nThere was nothing psychological about it. Caroline suffered from vulvodynia; a chronic condition that makes intercourse painful for women. For Caroline, this meant that she did not enjoy sex due to the pain that she experienced anytime a man tried to enter her vagina. No matter how hard she tried to deal with the discomfort, or what position she attempted to use during intercourse, she could not avoid the excruciating pain that accompanied penetration. As a result, her condition made it extremely difficult to achieve any sort of orgasm, even clitoral. Most would find it impossible to imagine a life without the ability to have an orgasm on a regular, or even semi-regular basis, but this was Caroline's life. Her orgasms came at a price: an intense, burning, cutting, vaginal pain. \n\nCaroline correctly attributed her difficulty in keeping long term relationships to her condition. It is extraordinarily difficult to find a man who did not want to have sex. At twenty-eight years old, Caroline has had a total of four lovers, all men whom she loved, and who could not handle a sexless relationship, even with such a beauty as Caroline. \n\nOn one particularly frustrating Monday morning at work, Caroline sat at her desk, depressed from a weekend of chocolate and romantic movies, listening to Bob Hesse and another employee whose voice she could not readily recognize talking in the break room. \n\n\"...then what happened?\" Bob was asking questions of the other man.\n\n\"She said I was disgusting, that I was a pervert,\" he answered quietly.\n\n\"A pervert. Man, that's rough.\" Bob's voice grew even more quiet, making it difficult for Caroline to hear. \"Just because you wanted to try something new?\"\n\n\"It's tough to find a woman...\" The man's sentence was cut short.\n\n\"Good morning, gentleman.\" Caroline's supervisor, Laura just walked into the break room.\n\n\"Hi Laura. How was your weekend?\" Bob and the unknown man stopped their conversation mid-stream and shared pleasantries with Laura.\n\nCaroline was dying to hear the rest of the conversation and listened intently for the sounds of Laura leaving the room.\n\nThe conversation resumed when the two men were alone.\n\n\"...it's tough to find a woman...go on.\" Bob encouraged.\n\n\"...who likes anal. You would think more women would be into it by now, you know?\"\n\n\"Yeah, well, I don't know. I've never had a girlfriend that was into anal, not that I'm not interested in it, I just don't bring it up.\" Bob shared. \"I guess you just have to meet the right woman. Why is it so important to you, anyway? What's wrong with just, you know, regular sex?\" Bob asked. \n\n\"It's just a preference. I love the feel. It's tighter, feels warmer, it's sexier to me. Damn. It's late, I've got to get back to work.\"\n\nCaroline was disturbed by what she heard, partly because of her views on sodomy, but also because she didn't know who the other man was in the breakroom. She left her cubicle and walked quickly around the corner to see if she could get a look at the man who was speaking with Bob. \n\nIt was too late. They had both disappeared into the sea of cubicles on the other side. She looked at the clock, it was just after ten-thirty. \n\nThat week, Caroline monitored the breakroom conversations, to see if she could hear the two men's voices. She also looked more carefully at the dozens of men who worked in her office. Could she tell if a man was a sexual deviant by the look on his face? She tried to determine who was the \"sodomite\" as she scanned the breakroom during lunch, but without result. After four days of investigation, she was no closer to solving her mystery than she was when she first heard the lewd conversation on Monday.\n\nFinally, on Friday, she heard Bob's familiar laugh while working in her quiet cubicle and paid close attention to the conversation he was having with the still unknown man. \n\n\"Let me guess, still single, right?\" Bob asked.\n\n\"I can't exactly place an ad that says looking for a girlfriend who enjoys anal sex, can I?\" \n\n\"Well, you could, but I shudder to think what you would get,\" Bob joked.\n\nCaroline recognized the man's voice this time, it belonged to Geoff Jones, one of the vice presidents in marketing. She had talked with him a few times and recalls feeling uncomfortable around him. She didn't think he was all that handsome either. As Caroline remembered, he was slightly shorter than she was, brown hair, average build, nothing special. Now she had a real reason to stay away from this guy. \n\nCaroline closed her eyes tightly and shook her head to rid her mind of the thought of Geoff Jones wanting anal sex from some poor, desperate woman. She busied herself with work for the rest of the day. Thank god it was Friday.\n\n***\n\nAt home, she realized that she had exactly nothing planned for the entire weekend. Her neat, well-decorated townhouse seemed quieter and lonelier on the weekends. She watched a movie and went to bed early for lack of anything else to do. \n\nOn Saturday morning, she ran her usual three miles, did some shopping, and looked on the Christian Singles website for profiles of potential suitors. She also cried three times, which was good for a Saturday. Sunday was almost a repeat of the day before, only she at least had church that morning. Caroline was still mourning the romantic loss of her last boyfriend who grew bored and frustrated with the lack of sex and the go-nowhere, extended make out sessions, which was the only sexual activity, save for the occasional blow job, that she could provide. Caroline couldn't help it; she was forced to deal with the consequences of her condition. She went back to the online dating website on Sunday night. As she stared blankly at the screen scrolling through the litany of handsome and available Christian men, she inhaled deeply and gave a long sigh. It was not reasonable to expect a man to date her seriously and at the same time not want to have sex. Even if they abstained, there was no guarantee that her condition wouldn't persist into their married life. How would they make love as a husband and wife? How would she have children?\n\n***\n\nFour long, dull days had passed at work and Caroline was relieved that she had heard nothing more about Geoff's anal obsession. She was now forced to listen to the office slut, Chloe, complaining loudly about her boyfriend cheating on her to a friend she was talking to on the phone. Bob and Geoff came in as the woman ended the call. She must have immediately left the break room as the two friends began talking about sex again. It sounded as though Geoff was in the middle of giving Bob instructions.\n\n\"Preparation is everything. You can't just shove it in her. It takes time to get her ready. You have to talk about it. Stretching her ass, a little at a time, and some vaginal stimulation is very helpful. It makes the difference between a 'no' and a 'go'. Use a dildo, or a plug, something like that, well in advance of when you actually try to penetrate her.\"\n\n\"Thank you, Dr. Geoff.\" Bob chided his friend.\n\nCaroline shuddered as she began to understand what the two crude men were talking about.\n\n'They're talking about it again. Oh my god. That's disgusting!' Not wanting to miss out on any of the disturbing details, Caroline opened her side desk drawer and leaned down as if she were looking for something to get her ears closer to the air intake that connected to the breakroom.\n\n\"Have you ever had a girlfriend that was into it as much as you are? It sounds like you're too particular. Most women aren't even going to admit they like that until you've been dating for a while, you know?\" Bob was always amazed at how picky Geoff was with women, given the fact that he didn't consider him that great a catch to begin with. \n\n\"Do you remember my telling you about Deanna? She had broken off her engagement and I dated her before she got back together with her fianc\u00e9e.\"\n\n\"Yes, I remember you saying something about her.\" Bob took a sip of coffee and looked at his watch.\n\nCaroline looked around briefly to make sure no one was watching her extended search in her drawer. \n\n\"Well, we had a very sexual relationship, and when she had her period, she still wanted sex, so we started doing it anally. Her period had come and gone, and she still wanted it in the ass every time...and we had sex several times per week for three months during the time we dated.\" Geoff slid his chair back and crossed his arms. \n\n\"How did she cum? I don't get it.\" Bob became more curious after Geoff's last claim.\n\n\"For the first few times, she rubbed herself, you know, then, she began having orgasms anally.\"\n\n\"Damn, that's hot.\" Bob looked off to the side, imagining the situation.\n\n\"Hey, I've got to go. See you around.\" Caroline heard the room become quiet before a woman in heels walked in and used the sink. \n\nShe thought briefly about telling someone, like Mary, her human resource officer, but realized that she would be revealing her secret source of gossip, and it may be discovered that she had been spying on her co-workers and secretly listening to their conversations. No, she had to keep this quiet. Besides, regardless of her moral objections to the content of their discussion, Bob and Geoff were under the impression that they were in a private setting when they had their conversations. \n\nCaroline's face was red from hearing such graphic, nasty details coming from the breakroom. She couldn't focus on her work, so she decided she would take a walk down to the other side of the expansive office floor.\n\nCaroline faked a smile and said hello to the several people she passed as she made her way through the cubicles to the marketing division. She would probably not have smiled at all had she seen the several men turn around to watch her strut down the hallway. Her long, muscular legs and toned, firm butt were the result of good genes and spending good money on a personal trainer, and the subject of many a male co-worker's fantasy. She always wore tighter-fitting clothes to accentuate these features. She was single after all. Today, she wore a tight, dark grey business skirt and white button-down blouse. \n\nCrossing the lounge area that separated the administration wing from the marketing wing, she slowed her pace as she walked by Geoff's office. The door was open and the walls around the door were glass, allowing her to see inside. For some reason, she wanted to look at Geoff now that she knew his twisted secret.\n\n'There's that foul man.' Geoff was in his office module standing behind his desk, looking out the exterior window talking on his cell phone. He turned to face the room but did not notice Caroline glaring at him on the other side of the glass wall separating his office from the rest of the floor.\n\n'Who does he think he is? All he likes is anal sex? That's disgusting. He's probably an atheist too.' Caroline lingered in the hallway, pretending to read from a company memo left on a vacant desk across from the door to Geoff's office. \n\nShe was sizing him up. He wasn't quite as short as she remembered, but she still had a couple of inches on him with her heels on. His dark, brown hair was combed back, no part. He dressed fairly well, not a slob, but not an office hipster either. As he turned around, she took in his face, relatively handsome, in proportion, but not someone you would go crazy about. Not someone she would look twice at if he were on the street. He was on the nicer side of average, she thought. \n\nCaroline frowned at him pretending to read the memo and continued walking. 'I don't want him to think I'm interested. Yuck!' \n\n***\n\nAfter her session with her personal trainer, Caroline celebrated her Friday by returning home and enjoying an extra-long, hot shower. She used a natural sea sponge to scrub her smooth skin, as she always did, but that particular evening, she hung her sponge on the hook under the shower head and spread body wash on her hands to wash her bottom. This was unusual for her as she normally used a washcloth for that area. She hated to admit to herself that after hearing the conversation between Bob and that perverted Geoff that she was curious, but she was. She was very curious. \n\nCaroline spread the slippery liquid soap all along her long, toned legs and buttocks, luxuriating in the sleek feel of her blemish-free, baby-soft skin. Arranging her hands on the sides of her ass, she separated one of her firm, round cheeks, having to grasp it closer to her body so it wouldn't slip away from her under her soapy hands. Arching her back and causing her butt to jut upwards, she used her right middle finger to delicately spread soap up and down her crack, barely running her finger over her sphincter. \n\nShe hadn't really paid too much attention to her butt before, other than giving it a thorough cleaning each day with a washcloth. She always viewed it as serving a utilitarian function, never erotic. Today was different. With all of Geoff's disgusting talk about anal this, and ass that, she had anal sex on her mind, although it was buried deep down, underneath all her wholesome values, it was still there, motivating her current actions. Geoff's words clearly had an effect upon her.\n\nNow finished with her cursory cleaning, she used the tip of her middle finger to circle around her tight, pink virgin asshole, causing a small shudder to run down her spine. She never was so purposeful about touching her ass as she was in that moment. In a crazy impulse, she gently slid her finger inside her tight hole to her first knuckle. She felt slight resistance, then a loosening, then a tight clamp around the digit.\n\n\"Oooh!\" The sensation surprised her. \n\n\"That's okay, I guess,\" Caroline observed aloud, keeping the tip of her finger inside her. \n\nShe wiggled her finger around a little, feeling the sides of her tight hole and the smooth tissue at the entrance to her rectum, then pushed more inside her, now up to her middle knuckle. She pulled her finger out and looked at it, not knowing what to expect, but cleanliness was foremost on her mind. Finding nothing but a less soapy finger, she inserted it again, this time faster, just to see what it was like doing so in one motion.\n\nHer raised ass jiggled as she slid her middle finger back into her asshole. \n\n\"Oooh!\" \n\nCaroline was surprised at how stimulating it was, and not in an unpleasant way at all. She removed her finger again and washed it off, then applied more soap and inserted it into her asshole again. This time she made a few penetrations using the entire length of her middle finger. Slowly pushing in, and then up deeper into her rectum. She felt the warm, slippery texture, and was surprised to discover that the sensation was not only pleasant but gave her a mildly thrilling shiver.\n\nWashing herself off again, she ended her shower, dried and dressed in a short, black T-shirt and her white, bedtime panties. She sat up on her bed brushing her long, straight blonde hair thinking about what Geoff had said that day:\n\n\"...she began having orgasms anally.\"\n\nAfter her experiment in the shower, she could imagine that it might just be possible. Her ass was sensitive, and she felt sexually stimulated in a deep way, almost what she had read about when she was in college about having a G-spot orgasm, which she had never experienced. \n\nCaroline hadn't enjoyed an orgasm in several months. She was tired of the whole process she had to go through to achieve one. Normally, she would need to take a few ibuprofen tablets several minutes before trying, and she used a little lidocaine to numb her vaginal tissue all the way up to the base of her clit. Often times the lidocaine numbed her too much and made the effort more labored than it should be. The result was always the same: her orgasm was barely worth the pain and discomfort she experienced trying to achieve it.\n\nAll the talk she heard from Bob and Geoff had put the thought of an anal orgasm into her head, and she was having a difficult time ignoring the thoughts of having a climax. After her continual failure to remove the thought from her mind, she suddenly got a burst of sexual energy. A wave of arousal rushed over her and made her mind race with sexual thoughts. \n\nShe was going to try it.\n\nNow almost delirious with excitement, she began to think about the logistics of anal penetration. 'I will need a lubricant for sure...Vaseline, I have some Vaseline, and I have baby oil.' \n\nBecoming giddy with anticipation, Caroline got up out of bed and grabbed the lubricants from her bathroom cabinet. \n\n'A little wine wouldn't hurt!' \n\nShe hurried to the kitchen and opened a bottle of wine, carrying it back to her bedroom with a stemless wineglass. \n\nPouring herself a full glass of the shiraz, she peeled her duvet back to her sheets and lay down. Caroline inhaled deeply, then took a few, large sips of the strong, red wine. \n\nAs she reached for the Vaseline, she realized that this could be a messy process, so she leapt up from her bed and grabbed a box of tissues. While in the bathroom, she noticed her round brush laying on the vanity. She always thought the long, solid handle looked phallic, and it was, quite phallic; perfectly smooth, polished, varnished wood...she grabbed it too.\n\nCaroline settled onto her bed and spread her long legs wide. She had to lean back more than what she was used to in order to access her ass as she lay down. Dabbing some Vaseline from the plastic jar, she lightly smashed the gel into her clenched sphincter, then spread it around the entrance. ",
        "She couldn't deny her excitement. She had suddenly, over the course of about thirty minutes, worked herself up into a sexual frenzy that she had never experienced before. She took her left hand and finished her glass of wine as her right stuck up awkwardly in the air, now set aside for the single purpose of penetrating her ass. \n\nShe carefully poured another large glass of wine and took a deep breath. Feeling the warm glow of the shiraz, she hiked her legs up higher and further apart to expose more of her ass for her finger to explore. Without any further experimentation or half-measures, she penetrated herself using her middle finger until it was entirely inside her ass. Pulling and pushing it in and out, produced a very sensual feeling. She liked it when she did it in the shower, but it was even better while relaxing on her bed. After a few minutes of using her finger, her repeated penetrations soon became insufficient to maintain the same level of stimulation.\n\nPulling her finger out and finding it to be clean, she wiped it with a tissue and got up to wash her hand. She prepared a soapy washcloth in the bathroom and wrung it out, so she wouldn't have to get up again. Slightly frustrated in her current position, she took two more large gulps of wine as she thought about repositioning herself for better access to her butt.\n\nWhile she stood drinking her wine, she looked in the mirror at her body and noticed in the reflection the padded chair she had in the corner of the room. Taking it to the other side where she had the full-length mirror, she set the chair directly in front, facing it. Her excitement grew as her rearrangement of her bedroom furniture quickly turned into a sexual ritual. A ritual that she knew would culminate in her first anal masturbation session.\n\nShe lay a towel down on the chair, gathered her supplies and sat down about three feet away from the mirror. \n\n'Oh my gosh, this is so kinky!' she thought. She sat with her ass hanging slightly off the edge of the chair and spread her legs apart, then hooked each on a chair arm. Her perfect asshole was now much more easily accessible and graphically on display in the mirror. Clutching her leg behind her left knee with her left hand, she used her right middle finger to run circles using increasing pressure around her tight hole. \n\n'This is a much better position.' She toyed with herself, inserting her middle finger inside, then drawing it out half-way, and back in again. She increased her tempo and discovered she needed a lubricant that would allow her finger to slide without as much resistance. The baby oil did the trick. Using it, she was able to glide her middle finger in and out with a much faster pace and with less drag against her rectum and anal ring. \n\nAfter several minutes, she arrived, once again, at the place where her middle finger wasn't producing the same level of stimulation as it was when she first started. She used more oil and combined both her index and middle finger in a sort of one on top of the other approach and began working them into her ass. It worked, she got them both comfortably inside, and was able move them both in and out after a few times. She stuck her two fingers deep inside of her and looked at the lewd image in the mirror. Her heart beat loudly in her chest. \"Oh god!\"\n\nShe soon increased her pace and was now wanting a deeper, more filling experience.\n\nWiping her hands off with her washcloth, she reached down and grabbed her brush. Her hands trembling with excitement, Caroline coated the handle with what was too much Vaseline, held the bristle end in her right hand and very slowly began to open herself up to the very first foreign object she had ever had up her ass.\n\nThe tapered tip entered effortlessly, but it expanded to a more expansive girth toward the middle that caused her to stop, frozen with about two inches inserted into her. She gawked at the sight of the oak-colored brush handle sticking into her body. It was both thrilling and perverse to her. She also noticed that as she took her focus off of trying to penetrate herself, her anus relaxed and seemed to welcome more of the wooden handle into her body. She used the opportunity to slide more of the five-inch handle into her until she had what she estimated to be four, relatively thick inches sticking into her ass. \n\nShe was impressed by how much progress she had made in such a short amount of time and realized that her bottom was far more accepting of sexual play than she had ever thought possible. She also had to admit that this was an unexpected outcome to her experiment. Leaving the brush handle in her ass was providing her more pleasure than she could have imagined, and given her slow, meticulous approach, she hadn't hurt herself or made a mess. Even now, as she stared at herself with the brush sticking out of her ass, she was turned on. She felt that an anal orgasm could indeed be possible.\n\nCaroline was getting extremely aroused, but she didn't want the experience to end painfully, so she dared not try to touch her clit directly. Instead, she began to fuck herself in the ass with the brush handle. The thrusts began soft and slow, then, as her stimulation increased, she began increasing her speed and depth. Soon she was grabbing the bristle-end tightly and fucking herself much harder than she had when she first began. Her thrusts utilized the entire handle of the brush. The slapping and squishy noises she was making brought her near to climax. \n\nShe was further stimulated by the obscene thought that entered her mind: 'I'm fucking my butt with a wooden brush handle!' \n\nAs the brush handle entered her more deeply each time, the side of her forearm began to graze the very tip of her extended clit. \n\n\"Oh my God!\" She exclaimed loudly. It was a soft enough touch to produce a pleasurable response without any pain. Her arm only grazed the tip of her swollen clitoris. It happened again, then again.\n\n\"Oh...yes...yes...YES!\" The fourth time she glanced against her clit she had a tremor-inducing orgasm. As she looked at the thick, wooden brush handle embedded in her ass, and her legs spread more widely than she had ever had before, her body tensed, flexed, and then thrashed violently.\n\n\"Ummmmm...Ooooh!...Aaaahhh! Ggggggodddddd!\" Her powerful orgasm overtook her body and mind. She was flooded with a pleasure she had never thought even possible. Caroline was immediately taken to another place, another world. Her eyes fluttered and she saw purple and red dots speckle her vision. \n\n\"Unnnn!\" \n\nShe started laughing. It was a large, booming, laughter of pent-up sexual release. \n\n\"That was crazy!\" She smiled at her reflection in the mirror.\n\nAs her climax subsided, she released the brush and watched it shoot out of her ass and drop onto the floor, in that brief moment, she watched her asshole wink at her; closing itself tightly, then opening up to the size of the brush handle, then closing up again. She thought this was the most obscene, and yet strangely sexy thing she had ever seen. \n\nCaroline started laughing again, still looking at herself in the mirror, her legs now together and placed on the ground, she leaned back and stretched her arms over her head, smiling a huge, satisfied grin.\n\n'It wasn't totally an anal orgasm but having the brush in me really changed the quality of it. I felt it in my butt!' Caroline sipped on her wine and began to clean and replace the items she had collected. Her sleep that night was restful and luxurious. Curiously, Caroline's religious objections to her own adventures in sodomy did not surface as she fell fast asleep.\n\nCaroline had a very relaxing, yet productive weekend working on a draft of an article she should have finished Friday and enjoying her time with her friends at church. She felt a little tender from her first anal experiment, so she decided to give her butt a rest. \n\nThat week at work, she heard nothing from Bob or Geoff in the breakroom. She was considerably happier than usual as her orgasm that past weekend had cheered her up considerably. She felt invigorated, and more than just a little bit naughty.\n\nOn that Friday, Caroline had an intense anal session with her brush and was able to have another orgasm much the same way she had the previous weekend. She was delighted that she was capable of having consistent orgasms with her newfound interest. Her stance on the evils of sodomy had been nearly pushed out of her mind.\n\nThe next day, Caroline awoke refreshed and feeling alive. Last night's orgasm helped to improve her overall mood. She went for a short run ending at the coffee shop for a well-deserved latte. On her walk back to her townhouse, she could feel a difference in her ass; she felt looser, more relaxed, and she could swear that she was walking with more sway to her hips. She smiled and wondered how often she could masturbate like she was with the same fantastic results. \n\n'I wonder if my bottom can take having my hairbrush handle in it every day?' She wondered.\n\nIn the shower, Caroline cautiously reached her hand around and played with her sphincter. It was a little sensitive, but not at all hurt or sore like she would have imagined. As she was washing herself, she kept reaching around and putting her middle finger deep inside her. It slipped in much easier now. She was still surprised that she had discovered something so pleasurable that she once found to be so utterly repulsive.\n\nCaroline wasn't happy about the source of her new discovery: Geoff. She recollected that it was his words that guided her during that first night of anal play, although she wasn't entirely conscious of it at the time. \n\nShe remembered him saying:\n\n\"Preparation is everything. You can't just shove it in her. It takes time to get her ready...stretching her ass, a little at a time, and some stimulation is very helpful...\"\n\nShe took his advice and it worked. As she thought about the other parts to his conversation, she began to consider that perhaps she had been too judgmental toward him. \n\n'Maybe he wasn't so bad after all. Maybe he's not actually a pervert,' she conceded. \n\nAfter her shower, Caroline planned to run some errands that day: drop off her dry cleaning, return a dress, pick up a few groceries; the usual Saturday chores. While at the dry cleaners, she saw a colorful sign blinking in the shopping strip across the street that caught her eye: \"Cupid's Adult Novelties.\" It was a new store in the new series of shops that couldn't be more than a few months old. After placing her clothes in the back of her car, she made a quick dash across the street to the new store. \n\nShe nervously pushed the metal handle and entered. To her relief, there was a woman behind the counter, and no one else in the store. The place itself was rectangular-shaped and stocked full of various sexual products. There were racks of gift items like penis candles for cakes, crude party games and favors, lubricants, and other sex related items along the walls. The books and DVD's were toward the back and lingerie occupied the racks in the center of the store. Caroline didn't immediately recognize or understand all that she saw.\n\nShe didn't know exactly what she was looking for, but she remembered that last part of what Geoff had said about dildos and plugs. Ultimately, she was looking for something that she could use instead of the brush handle, something more manageable, more comfortable, maybe even a bit larger, and more penis-looking. \n\nCaroline stood frozen at the entrance to the store until a voice woke her from her daze.\n\n\"Do you need some help?\" The woman behind the counter looked to be in her forties and had a short, bleached-blonde men's style haircut. Caroline assumed she was a lesbian. \n\n\"Oh! No. My god.\" Caroline laughed uncomfortably. She was just now aware that it was the first time she had ever stepped foot inside a shop like this. \n\n\"Sweetie, why don't you do yourself a favor and just tell me what you're looking for. There's no judgement here.\" The woman smiled warmly, putting Caroline's apprehensions at ease. \n\n\"Well, I was looking for something for...I like...no, I would like...\"\n\nThe woman crossed her arms waiting patiently for Caroline's nervousness to subside. \n\nCaroline blushed deeply, but since she was already in the store, she thought she might as well just come out with it. \"Do you have something like a dildo or a plug for anal sex?\" Caroline shrugged her shoulders and left them in the upward position squinting her eyes in a state of frozen embarrassment.\n\nThe woman's reaction couldn't have been more nonchalant. \n\n\"Over here.\" She stepped around from behind the counter and led Caroline toward the middle of the store, then to the back, against the wall. All sorts of toys were hung on a display board in clear plastic packages and boxes with plastic windows.\n\nShe pointed, \"These are the plugs. Here are the vibrators and dildos, most are dual-purpose, but the ones that have a firmer surface are better for anal. We have different lubes up front. If you have any questions, just let me know.\" She smiled and turned, walking back to the register. \n\nCaroline stared up at the black pegboard with dozens of dildos and packages of butt plugs. She was instantly overwhelmed. The different sizes, colors, materials, and shapes. Vibrating or not? Remote control or manual? Natural skin-colored: black, brown, or white? Artificial colored: pink, purple, silver, or clear? She decided she needed to think very clearly about what she was doing so she wouldn't have to embarrass herself by having to make a return trip. She also assumed they didn't take exchanges or offer refunds. \n\nShe decided she wanted to get a dildo first, as that was the most important to her mind and her new sexual interests. She was looking at the plugs and couldn't figure how to use one or even what purpose it served, so she focused on the dildos. She wanted to get something she could use on a regular basis, as well as something to be used maybe only now and then, perhaps something larger for special occasions. \n\nCaroline's nervousness turned to sexual excitement as she began to envision each dildo and how she would use it.\n\nShe selected a hard, white skin-color, six-inch vibrating dildo that was submersible and had variable speeds to it. She thought it could serve as her regular one. She chose a life-like, white skin colored, thicker, seven-inch dildo to be used for every now and then, or if she wanted to move to something bigger. It too had a vibrating feature and even had veins running around it like a real penis. \n\nNow that she had two dildos selected, she went back to the confusing butt-plug section. She still didn't know how they should be used so she picked up a random plug and quietly approached the salesperson, feeling especially awkward carrying the plastic packages containing the dildos through the store. \n\n\"Can you help me select a plug, please?\" Caroline winced.\n\n\"Okay, let me see what you've got there.\" The brusque woman grabbed Caroline's dildo selections and looked at them.\n\n\"These are good for both vaginal and anal.\" She put them on the counter. \"Okay, a plug is usually used to give you constant stimulation while doing something else, like if you want to be stimulated anally while you were being penetrated vaginally, you know?\"\n\nCaroline wanted to run out of the store. She had never had such a sexually descriptive conversation with a stranger.\n\n\"People also use them to help prepare them to take something larger in the near future. To get loosened up a bit so it's not so uncomfortable later.\"\n\n\"Oh!\" Caroline was speechless and considering all this new information. \n\n\"See the sort of diamond shape?\" The woman pointed to the plastic object in the see-through package, \"It tapers to this flat disk at the bottom so that it doesn't go any further. It's shaped so it stays in. Hell, you could walk around with it inside you and not worry about anyone knowing, or about it coming out.\" She chuckled softly as she considered the object.\n\nCaroline felt her face flushing red again. \n\n\"The largest dildo you bought is seven inches long and five inches in circumference, so use the thickness part of the dildo to help estimate the correct size for a plug. Try a five-inch thickness, one that doesn't go too deep. That should be good.\" She walked back around the counter and resumed reading her book, as if this was a conversation she had all the time.\n\n\"Thank you.\" Caroline went back and chose a three-pack of black-colored butt plugs that included 4, 5, and 6-inch diameters. They looked too big, but given the woman's advice, they were the right choice. \n\nShe quickly picked up a large bottle of lubricant and took the plugs to the counter. \n\n\"You did alright for your first time!\" The woman was smiling awkwardly trying to be friendly.\n\n\"Is it that obvious?\" Caroline turned red again.\n\n\"Oh, Sweetie, it's all right. That's what I'm here for. In fact,\" she reached out her hand for Caroline to shake, \"I'm Trudy.\"\n\nCaroline returned her firm grip. \"Caroline.\"\n\n\"I manage the place. We get a lot of women in here, a few men, but the owners are female, and we try to make it comfortable and safe for women to come in without a bunch of men loitering about.\" \n\n\"That's nice to know, thanks!\" \n\nCaroline took her bag of toys across the street and back to her car, finished her errands, and once home, excitedly took her second shower of the day. She felt she needed to give herself a good cleaning now that she had her new toys.\n\nIn a red tank top and a white pair of panties, she began to set up her masturbation area.\n\nShe moved her chair in front of the mirror and placed a towel over the seat. Then she opened the dildo and plugs and washed them before setting them on a table that she slid over next to her chair. Her lubricant and wash cloth ready, all she needed now was her wine.\n\nShe felt extra naughty since she was about to use a dildo on herself for the very first time, and the fact that she was going to use it anally, and even during the day, made her shake with anticipation.\n\nCaroline sat with her legs spread wide, each one hanging over the padded arm of the chair. Her hips were angled upwards, so she could see the reflection of her asshole in the mirror. She smoothed on the lubricant she bought on her smaller dildo and teased herself by rubbing the realistic-looking phallus against her pink sphincter. \n\n\"Ummm.\" She loved the build-up, and the heady arousal thinking of what she was about to do. \n\nShe used her left hand to spread her cheek further away from the other and slowly guided the dildo through the tight ring of her forbidden opening until the artificial head disappeared within. \n\nShe panted, waited, and slid more inside herself. This was different than the brush. Although it didn't look much larger than her wooden friend, it felt much wider. The feeling was incredible. The dildo felt more life-like, it felt much better than the perfectly straight, cylindrical brush handle. It looked sexier too. After waiting a few more moments, she continued until she was at the hilt. She could feel the increased girth stretching her wider than the brush handle did. The additional length gave her a more stimulated feeling than the brush. \n\n\"This is a lot better!\" she said.\n\n'Oh God. This is so exciting!' she thought. She drew the artificial penis in and out of her body slowly, then more rapidly, until she was fucking herself with a slow, steady rhythm. The sight of the flesh-colored penis disappearing into her asshole was thrilling. She left the dildo embedded in her ass and reached over to get the larger one. \n\nSwitching in on, to its lowest vibrator setting, she settled her body into position. Caroline used her right hand to steadily pump her ass and held the vibrating dildo in her left bringing it down ever so gently to barely touch her engorged clit.",
        "She carefully set the curved head of the penis onto the very tip of her protruding nub. The effect was instantaneous.\n\n\"Aaahhh! Gggodd! Oh, Gggoddd! Oh, Gggoddd!\" Caroline dropped the vibrator while holding the dildo deep in her ass. Her tight hole gripping onto it near the base.\n\n\"Uuuhhh! Uuuuhhh!\" Her powerful orgasm caused the dildo to shoot out from her body and land on the floor in front of her seat.\n\nAgain laughing, Caroline smiled and shook her head. \"That took all of three minutes!\" She took several deep breaths. \"Wow!\"\n\nNever in her sexual life had she had so many intense, pain-free orgasms. This was special. It was new and exciting, and it was consistent. This new approach to her sexuality changed everything for Caroline.\n\nFeeling relaxed and content, Caroline left all her sexual paraphernalia exactly where she had dropped it and curled up in bed for nap. After a good, hour-long rest, Caroline gleefully stripped her shirt and panties off. She wanted to try one of the butt plugs. \n\nSitting back in her masturbation chair, she coated the plug with a little lubricant then reached around and inserted the smallest, four inch one into her body. She could feel her sphincter open around the widest part, then close around the narrower base, holding it in place. She marveled at the effectiveness of the simple design. \n\nShe walked around her condominium naked; walked past her full-length mirror and turned around, 'You can barely tell it's in there!' She smiled, impressed with the discovery. 'I could wear this under my panties when I wear a skirt!' Her mind played out scenarios where she was in public wearing a plug. 'What a sexy little secret that would be!'\n\nMonday arrived all too soon, and Caroline found herself squatting down at her desk at ten-thirty in the morning listening to Bob and Geoff.\n\n\"I'm done. Giving up on the dating scene for a while.\" It was Geoff apparently discussing his weekend with Bob.\n\n\"Yeah, what happened?\"\n\n\"Nothing. Absolutely nothing,\" Geoff lamented.\n\n\"You mean you didn't get any responses to your ad requesting anal sex from hot-looking women?\" Bob laughed at his own joke.\n\n\"Not funny, man. How about I got no messages, likes, or emails at all? Fuck it, Bob. I'm done for a while.\"\n\n\"I think if you would just put this ass fetish out your mind and just dated a woman you found interesting; you'd do better.\" Bob's tone became serious noting his friend's angst.\n\n\"I told you about that because I enjoy it more than vaginal, it's not like I have to have anal. I just like it a lot more than vaginal. I don't put anything about it in my profile.\"\n\n\"Well, that's good!\" He chided. \n\n\"No, it's not 'good.' It means that women aren't interested in me, and there's nothing I did or said to warrant this lack of interest.\"\n\nTrying to improve his friend's mood, Bob asked, \"Hey, I've been meaning to ask you, how do you know if a woman wants anal without asking them outright? Wouldn't it scare them off to say, 'hey, do you want me to fuck you up the ass?'\" Bob wanted to experiment with his girlfriend, Lisa, and wondered if Geoff had any insight about how to get the ball rolling.\n\n\"Quit messing with me, Bob.\"\n\n\"No, I'm serious. Like, how would I approach the topic with Lisa?\"\n\nWith a deep sigh, he responded, \"Sometimes it's clothing. A G-string or thinner-style thong can be a sign. I've dated a couple of women who went anal pretty quickly who wore those kinds of underwear. But more women are wearing these styles of underwear these days so that can't be the only thing to consider.\"\n\n\"Lisa has a few pair of thongs. Keep going.\"\n\n\"What I do is when I'm having sex, I reach around and touch her asshole. Just touch it, nothing else. I put my middle finger against it when she's on top or if I'm behind her. If she likes it, she'll usually say something, if she's indifferent, she may hold off until it happens again, then she may say something. If she doesn't like it, she'll probably tell you right then and there. Of course, all women are different.\"\n\nGeoff continued, \"A few women I've dated let me finger them a little but didn't seem to be into the idea of anal sex. Usually a really hot, sexual relationship will get around to discussing it at some point, you know?\"\n\n\"That's good to know. I might try something this week.\" Bob looked at his watch, \"I've got to go.\"\n\nCaroline heard them both leave the breakroom, so she stopped pretending to fix her power strip against the wall and sat back in her chair, now pretending to read a draft she was supposed to have finished by lunch.\n\n'That was a hot conversation. I wonder what I would have done if Stephen had touched my asshole when he was trying to have sex with me? At the time, I would probably have kicked him out of bed.'\n\nCaroline sighed, then got back to the draft.\n\nAfter a meeting with her supervisor after lunch, Caroline began to crave another orgasm. She was fantasizing about going home and getting her dildos out for some after-work fun.\n\nOn her way home, she dropped off some dry cleaning and glanced at the adult sex store she had visited over the weekend. 'Maybe I'll stop by.'\n\nWithout thinking about it further, she found herself in the store.\n\n\"Back so soon? How are you, Caroline?\"\n\n\"Hi, Trudy!\"\n\n\"Did everything work out alright with your selections?\" Caroline appreciated Trudy's pleasant way of saying 'how are the dildos and butt plugs working for you?'\n\n\"Yes, just fine. Thank you for your help! I have another question, and I know it sounds na\u00efve, but I really don't know who else to ask.\" Caroline approached the register.\n\n\"Go ahead, dear. What's on your mind?\" Trudy put down her graphic novel.\n\n\"What's a 'G-string?'\"\n\n\"A G-string is like a thong, only a lot thinner. We have some over here.\" Trudy walked around the sales counter to a circular clothing rack in the middle of the store.\n\nShe held up a lime-green garment that, at least to Caroline, looked like some sort of stringy contraption that a stripper might wear.\n\n\"This part is the front, and this part's the back.\" Trudy held it up by the sides to illustrate.\n\n\"That doesn't offer much protection, does it?\" Caroline held the tiny thing in her hand.\n\n\"Well, you don't wear it during that time of the month, but protection is not what they're for. A lot of women wear them to avoid panty lines, or to just feel sexy.\" Trudy held the G-string up and turned it around, \"you'd definitely need a trim to wear this one,\" she chuckled.\n\nShe turned around and lifted her shirt up a little. \"See, I'm wearing one now.\"\n\nCaroline observed a thin red cord sitting horizontally just above Trudy's hips with another red cord of the same size running vertically fastened with a small, gold ring disappearing below her jeans down between the cheeks of her butt.\n\n\"Oh! Yes, I see. That is considerably thinner than a thong.\" Caroline went back to looking at the other G-strings on the rack before she started to feel uncomfortable.\n\n\"Thank you. I'll look for my size.\"\n\nTrudy went back to her place behind the register and returned to her novel.\n\nAfter several minutes, Caroline returned with a handful of the miniscule underwear.\n\n\"Anything else I can help you with?\" Trudy began removing the security magnets from the G-strings.\n\n\"No, and thanks again for being so helpful!\"\n\nOn her drive home, Caroline questioned her purchase. 'Why did I buy these?' She picked up the black plastic bag and held them up as if examining them from the outside of the bag. 'Is it because of what Geoff said?' Despite her questionable motives for buying the under garments, she found that she couldn't wait to get home to try them on. \n\nNaked in all but her new, lime-green G-string, Caroline turned before her full-length mirror and commented aloud, \"Now I see why women like wearing these.\" She could feel the thin cord in the back, it pressed tightly against her anus and gave her a very naughty feeling. \n\n\"I like that!\" \n\nOn a whim, she inserted her smallest plug and arranged the cord of the G-string so that it fit over the bottom of the plug.\n\n\"Oh, God. That's sexy.\" She said in a soft tone. Caroline put on a shorter, white skirt and a blue tank top with a sports bra and decided to pick up a few groceries at the store. She wanted to test out wearing her plug in a public setting.\n\nThe drive to the market was almost too stimulating to be safe. She had to fight the urge to pull over and fuck herself silly with the butt plug. Once in the store, she realized that it was more difficult walking around normally than she had thought. She didn't trust that the plug would stay in and regretted selecting the smallest one for her outing. 'One of the larger ones would have stayed in better,' she thought.\n\nWhat Caroline didn't realize was that her sphincter was getting accustomed to having something stretch it out. As she finished her shopping, she realized she had been smiling the entire time she was in the store. She liked her new sex life, although she was beginning to feel the pangs of loneliness return. She wanted companionship. Dildoes were not a man. Sex or no sex, she missed the intimacy of a serious, monogamous relationship.\n\nCaroline had three masturbation sessions between Saturday afternoon and Sunday evening, all producing monumental orgasms. During the last two, a thought fueled her excitement. 'I want to wear a plug and a G-string to work.'\n\nHer decision was final. Tomorrow at work she would try it out. She packed her purse that night with two butt plugs- the medium and larger size and a regular pair of panties in case the G-string became uncomfortable. \n\nShe awoke earlier than usual for a Monday morning. After showering and completing her morning prep, she decided it would be best to insert the plug at work rather than have it inside her during her commute. She wore a form-fitting, grey pantsuit that would highlight her lack of panty lines. Her white, pullover blouse and black heels were the perfect complement to her outfit. \n\n\"Good morning, Caroline.\" Rachel, the office assistant for her editing department looked up at Caroline from her desk. \"You're in a good mood today! Fun weekend?\" She smiled.\n\n\"You could say that. How was yours?\" Caroline paused as she spoke with the thirty-something brunette.\n\n\"By the look of it, not as fun as yours.\" Rachel's attention returned to her computer as Caroline continued on to her desk.\n\nAfter booting up her computer, Caroline took her purse into the ladies' room and inserted the medium-sized plug into her awaiting ass. \n\n\"Ooh!\" She was surprised at how good it felt as it slid inside. Caroline quickly covered her mouth with her hand, thankful that she was alone in the restroom. \n\n'I like this. I wonder if anyone can see it?' She left the stall and turned in front of the half-mirror in front of the sink. You could see a small bump, if you looked closely enough, at the seat of her pants. This was an exciting sight to Caroline who felt like she was having anal sex in the office. \n\nShe left the ladies' room and took a stroll around the floor, practicing her walk and feeling sexual for the first time in years. She decided that the larger plug made all the difference in the world. She dropped off her sack lunch in the breakroom and settled into her desk to try and work.\n\n'There's no way I can get much work done like this.' After ten minutes, she became so distracted by her plug that she had to make a quick trip to the restroom and remove it. Now finally able to concentrate, she finished up two articles for next week's deadline and reorganized her file drawer.\n\n\"Hey Bob, what's up.\"\n\nCaroline could just make out Geoff's voice from the breakroom. She didn't want to miss the conversation, so she sat on the ground and took out a few files that she had already organized to pretend she was still sorting them. Just as she was flipping over the papers in the first file, she had a naughty thought.\n\n'I wonder if Geoff would notice my thong if I were to bend over in front of him?'\n\nCaroline's body shook with excitement at the thought of teasing her oblivious anal mentor. She took off her jacket and squatted on her feet as if she were picking something up in her heels. She reached her hand behind her and felt for the gap between her shirt, her G-string, and the waist of her pants. She smiled as she felt skin between all three garments. It would not only be noticeable, but obvious.\n\n'That's it, I'm doing it!'\n\nCaroline ventured into the breakroom. \n\n\"Hello gentleman,\" she greeted the two, who were to her relief, alone sitting near the refrigerator, in their usual manner.\n\n\"Hi there, Caroline.\" Bob and Geoff stopped talking and watched the gorgeous blonde enter the space. \n\nBob nudged Geoff with his elbow and nodded toward Caroline as she opened the door to the fridge. Geoff pointed at Caroline with his thumb and shook his head then put his hands together as if he were praying. The entire office knew Caroline was a religious person. Although Geoff found her irresistibly attractive, he didn't consider her as one with whom he would have any interests in common. Besides this, he considered Caroline out of his league. She was clearly a \"10\" and he had often categorized himself as a \"6\" or \"7\".\n\nGeoff and Bob looked on nonetheless and made small talk with her.\n\n\"Good weekend, Caroline?\" Geoff asked.\n\n\"It was okay. Boring.\" She turned around and smiled.\n\n\"You too, huh? There's a lot of that going around,\" Bob said.\n\nThe two men were still looking at the slender blonde when she squatted down moving her lunch from the top to the bottom shelf.\n\nGeoff was first to see it. He hit Bob in the arm and motioned to Caroline's lime-green G-string wedged between the top of her butt cheeks. The two men were staring in disbelief, mouths open, eyes locked on the unexpected but extraordinarily sexy sight. Her G-string cord was clearly visible as was the very topmost part of her perfect ass.\n\nBefore either of the men could say another word, Caroline stood up, turned on her heel, and headed out of the breakroom back to her desk.\n\n\"Have a great day, guys,\" she said as she left.\n\n\"You too!\" Geoff offered.\n\nCaroline walked as fast as she could around the corner to her desk and dropped to the floor to hear what was said, hoping they had seen her sexy underwear.\n\nThey had.\n\n\"Are you kidding me? Jesus. I would have never guessed she would wear a thong like that,\" Bob said.\n\n\"That was definitely a G-string, my friend. I didn't think she was the type. Wow!\"\n\n\"Well?\" Bob asked.\n\n\"Well what? Oh...you mean because of the G-string you think she's into anal? Well, I'm definitely calling it a good sign, but the verdict is still out.\"\n\n\"Hey, why not ask her out, Geoff? Rachel says she's single.\"\n\n\"No way, man. She's like a runway model. She would never go out with me.\" Geoff looked into his coffee now feeling sorry for himself.\n\n\"You know, I saw a talk show a few years ago where they interviewed these insanely beautiful single women and asked them questions about dating. They all said that they get lots of catcalls when they are out alone in public, but they never get asked out. They said they thought it was because guys were too intimidated by their good looks.\" Bob was trying to give his friend a little courage.\n\n\"Yeah, I could see something like that being true. I don't know, maybe. I'll see if she has a profile on CitySingles. You know, Google her or something.\" Geoff and Bob left the breakroom.\n\nCaroline felt her pussy become painful as she grew wet from overhearing the conversation.\n\n'How informative,' she thought. \n\nThat night, Caroline researched the dating site CitySingles and placed a profile, then quickly deleted it. She sat back in her chair staring at the screen.\n\n'This just isn't my style. Besides, I'm not sure what sort of man I want. I don't want someone like any of my past boyfriends. I'll probably need someone who is a bit on the wild side to go for the kind of sexual experience I now require.' She closed her browser and lie on her bed.\n\nCaroline was so profoundly moved by her recent ability to have orgasms, and her new fondness for ass play that she could only think of having a boyfriend that knew what they were doing as far as anal sex was concerned.\n\nFor the first time, she considered Geoff as a potential suitor. Perhaps not a serious romantic choice, but someone she knew would certainly have an excellent understanding of how to meet her sexual needs.\n\nShe sprung up from her desk and rifled through her closet. She was thinking of a pair of thin nylon pants that were actually more like yoga pants but looked professional enough to wear at work. \n\n\"Here they are!\" she declared aloud.\n\nThe next day at work, she wore a purple G-string and brought her largest butt plug. Her plan was simple. Be as obvious as possible without actually coming out and asking Geoff to go on a date.\n\n***\n\n\"Finally, Ten-twenty. Break time!\" Caroline had been anxiously looking at her watch all morning waiting for the time when Bob and Geoff would be in the breakroom. Something told her that after the show she gave them yesterday that they would be there at the exact time today. \n\nShe took her purse into the ladies' room and inserted her largest plug. She could have easily had an orgasm if she had inserted it a few more times. She shuddered at the sensation of the thick object expanding her hole.\n\nPulling her tight pants up, she saw the circular shape of the butt plug through the brown pants. 'Oh my God! He'll have to be blind not to notice!'\n\nCaroline carefully made her way to her cubicle and listened at the intake.\n\n\"We should walk by her desk,\" Geoff suggested. \n\n\"I have a girlfriend, buddy. Maybe YOU should walk by her desk. Go for it, Geoff! At least flirt a little.\" Bob poured himself a cup of coffee and left the breakroom to return to his office, giving his friend the opportunity to talk to the lovely blonde.\n\nHearing the conversation, Caroline spun around her cubicle looking for her purse. She quickly rummaged through it and pulled out the Asstrolube lubricant that she used to lubricate her plug a few minutes earlier. She put it right next to her computer keyboard. \n\nShe slid her desk chair to the side and leaned over her desk as if she was reading a document. From her position, not only would Geoff be able to see her purple G-string, but he would see the protuberance in her pants created by the plug...and the lubricant sitting on her desk.\n\n'I can't get any more obvious than this!' she thought.\n\nGeoff had to ask the receptionist where Caroline's cubicle was. As he approached, he could just make out her blonde hair sticking up over the shorter partition walls. He rounded the left side and hung his hand at the top of the divider in an effort to appear casual. \n\nThe small bottle of Asstrolube was immediately apparent. As it happens, Geoff had used the product once, but found it too thick to his liking. As quickly as he noticed the bottle of anal lube, he set his eyes on the sexy sight of Caroline's G-string. Then the plug caught his attention. \n\nHis poorly restrained gasp alerted Caroline he had indeed wandered in looking for her. \n\n\"Oh, hey, Geoff. What's up?\" Caroline looked back at him, then turned back around as if she was not quite finished with what she was doing. \n\n\"Hi Caroline. Um, pardon my being so forward, I like those slacks, but they look funny in the back.\" Geoff's heart felt like it was about come out of chest after uttering such a daring comment.\n\nCaroline turned her head and smiled. \"There's nothing funny about what's going on in the back,\" then reached her hand around and pushed the butt plug in a little more.\n\nShe looked over at the Asstrolube and quickly reached for it, \"whoops.\" She grabbed it and stashed it in her purse.\n\n\"Looks like you're having a great morning, Caroline!\" He was beaming, his eyes wide with interest.",
        "\"Yeah, you could say that. I'm a little behind, but not too backed up if you know what I mean.\" Caroline was enjoying the not-so-subtle innuendo.\n\n\"Well, like I always like to say, it all seems to work out in the end.\" Geoff grinned proudly at his ability to keep the inuendo going.\n\nAll the planning that went into her sexy wardrobe, and especially the stimulation she was receiving from the anal plug, had caused Caroline a near frenzied level of arousal. She had never felt so turned on, and here she was talking to a man who had picked up on all the anal-related clues she was giving. She was primed.\n\nIt was under these conditions that Caroline made the boldest statement of her entire life.\n\n\"Speaking of working out in the end, I know someone who needs a workout in her end.\"\n\nShe wore a sly smile as her sultry eyes looked down to Geoff's crotch.\n\nGeoff paused with his mouth wide open, then looked down sheepishly and laughed. \"Okay, okay. God damn it. Bob put you up to this, didn't he? Shit. I should have known.\" He shook his head and looked around the office again.\n\n\"I was hoping for a workout, not a prank,\" Caroline said as she turned around and stuck her butt out. \"Push it in a little, will you please?\"\n\nGeoff's smile left his face. 'Holy Jesus, this is for real?' He simply could not believe this was happening.\n\nCautiously, he took three steps into the cubicle area and used two fingers to push the round end of the plug further into Caroline's ass.\n\n\"Ummm,\" she whispered quietly, \"God, that feels good.\"\n\nCaroline turned around and crossed her arms. \"Well?\"\n\nGeoff had never been so flustered in all his life. Nor had he ever met a woman as attractive as Caroline, yet so comfortable flirting with him. His high level of discomfort got the better of him.\n\n\"Well...\" He looked at his watch. I've got a conference call I have to prepare for. Uh...See you around.\"\n\nCaroline watched dumbfounded as Geoff walked out of her cubicle and out of sight.\n\n'Wow. That was going so well too! I must have come on too strong.' Caroline was perceptive enough to see exactly what had happened. In her sexually aroused, aggressive state, she did in fact, come on too strong and caught him completely off guard. She would have to adjust her approach a good deal. Her first experiment with being a forward woman failed to achieve the results she had hoped for. \n\nThe next day, Bob and Geoff were in the break room together.\n\n\"So, what happened? Did you ask her out? Flirt? Anything?\"\n\n\"We talked for a few minutes, nothing special.\"\n\n\"Are you going to ask her out or what?\" Bob's voice was raised a pitch. He sounded excited.\n\n\"I'm thinking about tomorrow.\"\n\n\"Good luck!\"\n\nCaroline heard most of their exchange and realized at that moment that her hunch was right. She had intimidated Geoff. She also realized that he could be trusted. He never mentioned the sexual banter or her wearing a plug to his friend.\n\nLater that night and after a long masturbation session, she decided she needed to tell Geoff about her problem and not try to go about having a relationship in the usual manner. She also felt she needed to apologize. Her behavior was out of character for her and she felt like she was being a tease.\n\n***\n\nThe next morning, as she was marking up a copy of an article, Caroline felt someone standing behind her. It was Geoff.\n\n\"Hey Caroline. Do you have a sec?\"\n\nShe put her work down. \"Sure thing. What's up?\"\n\n\"Look, Caroline, I don't know if you're aware of your reputation around the office, but everyone thinks you're a religious fanatic. That's why I was more than a little surprised by your remarks, or suggestions or whatever it was you did the other day. You have to tell me now if this is some sort of joke or something.\"\n\nShe motioned Geoff further into her cubicle. Whispering, Caroline responded, \"Okay, I'll tell you what this is all about. A few weeks ago, I happened to hear part of a conversation you had with Bob. Let's just say that after that conversation, I know what you like, sexually. And...I like that too. Why don't we go out and get something to eat tonight and talk it over?\"\n\nGeoff was flush. All the energy and effort he had put into his search for a woman who was cool with anal sex and here she just falls into his lap. Not even to mention a woman of Caroline's physical beauty.\n\n\"You mean about what I like to do with my girlfriends?\" Geoff stammered.\n\n\"Yes. That's what I heard,\" she confirmed. \"So, why don't we go out and talk about it. I'm not comfortable talking about this at work.\"\n\nHe nodded his approval. \"Absolutely. Tonight. Yes.\" Geoff paused, but wanted to sound confident, so he followed up with, \"Why don't we meet at Sandstone. Do you know where that is?\"\n\n\"Yes, it's on Atwater Street, near the park.\" She knew the place. It was nice.\n\n\"Right. How about seven?\" Caroline was carefully examining Geoff's clothing, his physique, sizing him up. 'He should do,' she thought.\n\n\"Seven it is. See you then.\" Geoff abruptly left Caroline's cubicle. \n\nCaroline had worn the bigger plug again in order to keep herself ready, but it was too distracting to work in. She ducked into the restroom to take it out.\n\nRemoving her plug took a little doing. Her sphincter had tightened over the narrow, tapered part and didn't want to give it up. She quickly cleaned it in the sink while she still had the bathroom to herself, then wrapped it in toilet paper and shoved it deep into her purse.\n\nThe rest of the day was spent daydreaming about her date with Geoff that night. She seemed to be wearing a constant smile, not so much as a result of thinking about Geoff, but more of how sexually direct she had been with the man. She really wanted this and based upon all the conversations she had overheard over the past few weeks, Geoff seemed like he would make a good friend with benefits.\n\nCaroline went straight home after work and took a shower. She used copious amounts of liquid soap to clean her ass. She marveled at how elastic her sphincter had become and knew she was ready. Whether it would happen tonight or not relied heavily on how Geoff presented himself at dinner.\n\nGeoff arrived at Sandstone with five minutes to spare. As it was a Thursday night, he was able to easily get a table near the front window, so he could see Caroline arrive.\n\nA woman like Caroline was once in a lifetime, and although he was by no means ready to marry, she was the type of girl men took seriously. She was definitely marriage material.\n\nHe saw her walk from across the street, her long legs showcased nicely by her white shorts, her bouncy breasts, braless in a red stretchy top. Her pitch-blonde hair she wore in a ponytail, made her impossible to miss.\n\nHe left the table to greet her at the door.\n\n\"Hey there!\" she let Geoff kiss her on the cheek.\n\n\"So, you're for real. I'm very pleasantly surprised,\" Geoff said.\n\n\"Here I am. Very real.\" \n\n\"I already have a table.\" Geoff escorted Caroline to their table.\n\n\"So!\" Geoff put his hands up and smiled.\n\n\"So!\" Caroline laughed. \n\n\"How long have we worked in the same office now?\" Geoff asked.\n\n\"It must be at least three years. I think you were there before I was hired.\"\n\n\"Yes, I think I would have remembered you if you were there before me.\" Geoff was trying to contain his smile but having a difficult time. There was still a part of him that didn't believe Caroline was serious. \n\nThe couple opened their menus. \n\n\"You said you wanted to discuss something about...my interests?\" Geoff was dying to discover what the gorgeous blonde had to say.\n\n\"Yes, I do. Geoff, I don't know you very well, but there is a very private, very personal reason why I did what I did the other day. I feel I need to share this with you before we begin our evening.\"\n\nGeoff could not believe this was happening to him. He rarely caught breaks like this in any area of his life, but especially not with women.\n\n\"I'm all ears Caroline. What you share will stay between you and me, you have my word.\"\n\n\"Good. The rumors you've heard about me are true. I am a very religious person. I don't date around, and I don't fool around. I've never dated anyone from work, so discretion is very important to me.\"\n\n\"Absolutely. Me too.\" Geoff nodded.\n\nThe waiter arrived at their table. \"I'll be right with you.\"\n\nCaroline waited for him to leave, then continued.\n\n\"I have a condition, sort of a physical disorder you could say, one that is relatively rare. This isn't easy for me, so here it goes,\" Caroline lowered her voice, \"I can't have vaginal intercourse due to this condition. My genitalia is perfectly normal, but any physical contact with it causes me excruciating pain. This pain is so intense that it has prevented me from having vaginal sex with boyfriends and has made any future hope of marriage and having kids very bleak.\" She looked around to be sure no one could hear what she was saying. \n\n\"My last serious relationship ended because of this. He just couldn't commit to a relationship with me knowing that we may never be able to have sex.\"\n\nGeoff sat with a stunned look on his face. He nodded for her to continue.\n\n\"It has been a curse. Anyway, a few weeks ago I was about to go into the breakroom when I accidently overheard part of your conversation with Bob about anal sex.\" (Caroline lied about where she overheard the conversation to avoid any potential problems with her purposely eavesdropping on her fellow employees through the air intake in the wall).\n\nGeoff smiled. \"Wow! I thought I was being extraordinarily cautious.\"\n\n\"It's okay, you thought the conversation was private, I shouldn't have listened. So, anyway, I decided to try, you know, stimulating myself anally.\"\n\nGeoff could feel an erection coming on.\n\n\"It was awkward at first, but with some experimentation with a few new toys, I discovered that I could...satisfy myself anally.\"\n\nThe waiter returned to their table. Geoff coughed nervously, then ordered a bottle of Merlot. Once the waiter was gone, Geoff commented, \"So that's where the plug comes in.\"\n\n\"Yes. I feel sexually liberated, Geoff. All of my orgasms up to a couple of weeks ago had been very painful. My condition has caused me a great deal of physical and emotional suffering and now, I have discovered a real alternative that has changed my life completely.\"\n\n\"Caroline, that is such an amazing story. It's not at all what I was expecting to hear.\" \n\nCaroline thought Geoff looked shocked, but in a good way. There was a light in his eyes that gave her a good feeling.\n\n\"I miss having a romantic partner, and I've never had a boyfriend I could have sex with. But recently, my attitude about sex has completely changed. But there was a new problem; how do I go about dating men when I know going into the relationship that I can only have anal sex? I mean, sure I can give oral, and that was what carried my relationships along as long as they lasted, but what does that do for me?\" She laughed.\n\nCaroline felt a tremendous weight had been lifted from her. She was finally able to share what had been troubling her, and her solution with another person, and one who would understand the pleasure of what she had recently discovered.\n\nGeoff coughed again, then cleared his throat. \"Sorry, this conversation is a bit more... frank than I'm used to having on a first date. I'm good. Ah...here's the wine.\" \n\nThe waiter poured their wine and took their order. They both ordered a sliced steak salad.\n\n\"If you don't mind my asking, where do I fit into this? I mean, why me?\" he asked.\n\n\"I'll be honest, you really weren't on my radar until I overheard the conversation. I don't date guys from work, period. But you gave me hope. You dispensed advice and I tested your advice, and it worked. I know it was unintentional, but I felt I knew you would understand and even appreciate my newly discovered pleasure better than some other guy I may have had something else in common with.\"\n\n\"I think I like where this is going.\" He smiled.\n\nCaroline continued, \"Well, think about it. I can ONLY have anal sex. How am I going to broach that subject with a prospective boyfriend? And if I could, what if they just aren't that into anal?\"\n\n\"You're right. I know a lot of guys who are indifferent to anal sex or dislike it altogether. You have a valid point.\"\n\n\"I'm sorry, I know I'm taking a lot for granted. You may not be interested in me or my weird anatomical problems. I'm assuming a lot.\"\n\nAfter several clarifying questions, and a discussion about the nature of vulvodynia, their meals arrived, and they began to eat their salads.\n\n\"Caroline, you are hands-down the most beautiful woman in the office. All the guys say as much. It would be like winning the lottery to be able to date you. And the fact that you like anal sex? Good Lord.\"\n\nGeoff looked at his salad and shook his head. \n\n\"That makes me happy to hear you say that. I know this is an unusual conversation to have with someone you don't even really know.\"\n\n\"It is a breath of fresh air, Caroline. I couldn't make this up if I tried. Do you mind if I ask a few more questions? Personal questions?\"\n\n\"Not at all.\" Caroline was nearly finished with her salad.\n\n\"Did you purposely wear that plug just for my sake?\"\n\n\"Yes.\" Caroline smiled deviously. \n\n\"And bending down showing me your G-string?\"\n\n\"Yep. It's completely out of character for me, but you have to understand what I have been going through. Try to imagine that every time you touched your penis you experienced an intense, excruciating pain. Try masturbating or having sex through this pain. Imagine this beginning when you were around 13 years old, around the beginning of puberty. Now fast forward. You're twenty-eight years old and the condition persists. What effect do you think such a condition would have on you physically? Emotionally? Socially?\"\n\n\"I can't imagine, Caroline. Not even hypothetically.\" Geoff had a difficult time trying to be sympathetic sitting across from such a sexy, beautiful woman. \n\n\"That's what I've been going through and a few weeks ago, that all changed when I had my first anal orgasm, thanks largely to your words I overheard in the breakroom. It was a life-changing experience.\"\n\nThe waiter returned and suggested dessert. Caroline asked for the check.\n\n\"Hey now, let me get this Caroline,\" Geoff objected.\n\n\"I believe I asked you out, it's my treat. You can get the next one.\"\n\n\"Okay, I can do that! So...\"\n\nCaroline grinned like a mischievous schoolgirl.\n\n\"So...? Back to my place?\" She extended her leg under the table and rubbed his thigh with her bare foot.\n\nGeoff swallowed hard. \"Uh, yeah! That would be amazing!\" \n\n\"Why don't I ride with you. My townhouse is two blocks from here. I walked.\"\n\nCaroline took Geoff's hand as they left the restaurant. She smiled to herself thinking back at her week thus far. So bold, so uncharacteristic of anything she had ever done. She felt a dark chapter in her life was ending and a new exciting one was about to begin.\n\nGeoff parked the car and the two walked quickly to Caroline's townhouse.\n\n\"Nice place!\" Geoff looked around the beautifully decorated first floor. \n\n\"Have a seat. I'm getting some wine.\"\n\nCaroline returned with glasses and a bottle.\n\nGeoff was sitting looking rather nervous on the couch in her living room.\n\n\"Do you mind?\" She handed Geoff the corkscrew and bottle and sat back waiting for him to pour.\n\nCaroline removed her sandals and was running her hands along her long legs. She sighed as she took the glass of shiraz from Geoff.\n\n\"Thank you.\"\n\n\"Here's to your new outlook,\" Geoff toasted.\n\nCaroline laughed, \"Here, here!\"\n\nCaroline moved closer to Geoff, legs touching. She decided it was now his time to lead. She had already spoke more frankly and used more graphic detail than she ever had before with any man. She felt a tremendous sense of relief at having shared all that she had with him. Now, as she sat with her legs tucked under her body, she angled herself toward him.\n\nGeoff finished his wine quickly, Caroline followed suit. He poured them both another glass.\n\nFor as fast and loose as Caroline was acting, Geoff could tell this wasn't a one-night stand to her. That was what was so strange. She acted and spoke as if she had made a decision and that his being there seemingly about to have sex, anal sex, was just a foregone conclusion. \n\nHe didn't mind, especially not with a woman as attractive as Caroline, but he was having a difficult time adjusting to the reality of what was unfolding before him.\n\nIt was close to eight-thirty on a work night. He needed to move this along in order to have as much time with her as possible. Geoff made his move and leaned in for a kiss. \n\nCaroline eagerly received him. She felt comfortable and relaxed. He was a little tight-lipped at first, undoubtedly nervous from having her share so much of her expectations with him, but he loosened up and after a few moments, she was enjoying a delicious, open-mouthed kiss. She thought of how nice it was to be able to kiss a man who knew her situation beforehand. Free from the anxiety that came with the knowledge that she would have to tell her lover that she couldn't have sex, usually at the most inopportune moment. \n\nGeoff wasn't sure how to take her aggressive approach, he still didn't know what to expect, but the kiss was a good sign. Geoff was a good kisser and valued that in a woman. Caroline was becoming very aroused and he could sense this by her assertive tongue and writhing body.\n\n\"Mmm,\" she moaned as she felt his hand gently squeeze her breast. She was becoming wet, and she began to feel what it was like to expect a pleasurable sexual experience. For so many years, this would be the point where she would begin to feel disappointment. Distressed in the knowledge that she would not be able to see a passionate feeling to its sexual fruition. Now she had a legitimate outlet. One that she had already tried and tested. \n\nCaroline felt she was squirming in her seat. She ached for Geoff to be deeply imbedded in her ass. She found herself hoping that his penis was neither too large nor too small. Her understanding of her body was nearly a science now. She knew what she could handle, something around seven inches, and on the thick side, and she also knew what she would feel less than satisfied with, something under five inches.\n\nGeoff's kissing was more heated. He worked his way down to her neck as he caressed her arms. He reminded himself not go near her pussy. This thought caused him to pull back slightly and made him unsure of himself. At that moment Caroline stood up and declared, \"I'm ready.\" \n\nShe reached down and took his hand escorting him up the carpeted staircase to her room.\n\nCaroline had already thought about how this first experience would go. She wasn't expecting it to be romantic. She was still viewing anal sex as a graphic, even deviant act. She had accepted the fact that if she was going to have painless orgasms that they could only be anally achieved so she had been able to quiet any feelings of guilt about the subject.\n\nGeoff and Caroline continued kissing on her bed, but Geoff, as turned on as he was, wasn't feeling the sort of passion that he normally would expect from an encounter with such a beautiful woman. It felt as though they needed to have sex before they could progress with any relationship. It was a strange twist, one that if someone else had presented to him, he would probably express admiration for their unique stroke of luck.\n\nGeoff lifted her stretchy-tight, red shirt from her body. Her pert, full breasts sprung free and jiggled on her chest. 'Damn, she's perfect,' he thought. Caroline slid out of her shorts and slipped off her thong as she watched Geoff remove his clothes. She anxiously awaited the penis reveal. ",
        "He dropped his slacks, then his boxer briefs to the ground looking at Caroline's body, completely naked. Her body was magnificent. Absolutely flawless and perfectly proportioned. He noticed her bright blonde pubic hair trimmed short, showing the light pink folds of her pussy. He could see no outward signs of the physical condition she complained of, which was a relief.\n\nHer long, toned legs looked like those of a runner. Her waist was thin, and her hips narrow. She was a goddess. \n\nCaroline smiled in her own sense of relief. Geoff was erect and was sporting a good-sized penis. It looked to be around the same size as her larger, seven-inch dildo and about as thick. 'Not too big...not too small,' she thought. She also caught something in Geoff's expression. He didn't appear to be all that happy. \n\n\"What's wrong?\" she asked.\n\n\"Nothing.\" He looked down. \"Well, okay. I'm just not used to this. To the fast pace of the thing. I mean as of four days ago, I had no idea you were...who you are. Now, a few days later and I'm about to have sex with you in the expectation that we are going to start dating. I don't know, I'm a little surprised at myself. I mean, if you would have asked me a week ago what I would do if these exact circumstances presented themselves, I would tell you that I would be all over you.\" \n\nCaroline felt tears swell in her eyes. Geoff was not quite the player he bragged about to his buddy in the breakroom. He was sensitive. Caroline wanted him even more now and found that she too was confused. She always thought that once she decided she could have sex with a man, that he would just be ready, willing, and able. Geoff's hesitancy was a huge turn on.\n\n\"Oh, Geoff! My goodness.\" Caroline leaned in to hug the man. \"I'm so sorry. I have been so deprived, so alone, that I just took for granted that you would be willing to start a sexual relationship with me.\"\n\n\"I am, really! Look!\" He pointed at his hard penis.\n\nCaroline looked down and laughed.\n\n\"I just don't know about dating you when I know so little about you. I know it sounds weird, but...\"\n\n\"This is going to sound strange, especially if you knew me, but why don't we just be you know, 'sex buddies'?\"\n\n\"Fuck buddies,\" Geoff corrected her.\n\n\"Yes, fuck buddies.\"\n\n\"Would you have a problem with that?\"\n\nGeoff smiled. \"Good god, no.\" \n\nCaroline climbed onto her bed and sat up on her knees as Geoff joined her.\n\nShe moaned as their kissing resumed. Geoff's hands tweaked her small, firm nipples and moved back and around smoothing over her sublime ass cheeks. He reached down and placed his hand over her bare pussy, inserting the tip of his middle finger between her folds.\n\n\"No!\" Caroline's body wiggled away from his touch.\n\n\"Oh, Geeze! Caroline, I'm so sorry!\"\n\nCaroline balanced herself with her extended arm resting on Geoff's shoulder. She looked down with a serious expression on her face, breathing deeply.\n\n\"I forgot in the heat of the moment. Shit!\"\n\nCaroline nodded her head. \"It's okay. Just give me a minute.\"\n\nGeoff was worried he would forget again. Judging by her reaction, he could tell this wasn't just a discomfort, but a serious pain she was experiencing. \n\n\"I guess I should have reminded you.\" She forced a smile.\n\n\"How long does the pain last?\"\n\n\"It's intense for about a minute, then it fades pretty quickly.\"\n\nCaroline got up and returned with a bottle of scented baby oil and a hand towel.\n\n\"Okay. I'm fine now.\" \n\nShe pushed Geoff back onto her bed and lowered her body down between his legs. She figured it would be safer if she were the aggressor.\n\nShe spread his legs far enough apart to fit between them, then, resting on her elbows, she kissed his still erect penis. She knew how to give blow jobs as that was the only sexual activity that she could provide for her previous boyfriends. \n\nCaroline allowed her saliva to collect in her mouth and lowered her head to his cock. She surrounded his tip with her lips and allowed the clear fluid to escape the grip she had over his hard cock and drip down. She expertly worked the first few inches into her hot mouth without the use of her hands.\n\nJust watching the gorgeous blonde's face full of his cock made Geoff moan out loud. He had never had such a beautiful woman go down on him. \n\n'This is going to be good.'\n\nCaroline continued to use no hands as she sucked two more inches into her. Geoff moaned again. Then she made a gagging noise and forced her head down all the way, deep throating his cock in the last motion.\n\n\"Shit,\" he gasped.\n\nHe watched intently as her nostrils twitched and her lips separated and flexed around the base of his cock. She took the whole thing without much effort at all. He's never had a woman deep throat him before. Geoff knew he wasn't a monster in terms of his size, but he also knew he had a well-above average dick. \n\nCaroline then removed the cock from her mouth, backing up its entire length and then swallowed the entire length in one downward motion. \n\n\"Damn, Caroline. That's so good!\"\n\nShe moaned. Caroline deep-throated Geoff's cock now with every thrust downward. Every time the cock went into her mouth, she took it to its base. He could only take a few minutes of her extraordinary skills before he leaned forward and pet her head.\n\n\"Caroline...Caroline...Caroline! Stop. STOP!\"\n\n\"Ahhh...\" she exhaled as she pulled her mouth off his dick. Spit coated the shaft and trailed up to her lips.\n\n\"What?\" She looked at Geoff, puzzled.\n\n\"You're too much. Do you have any idea how good you are? My god! I almost came!\"\n\nCaroline was deeply flattered. It seemed that all those blow jobs she gave her boyfriends had paid off. \n\n\"Oh. Okay. Sorry.\"\n\nGeoff got up and onto his knees. \"Here, roll over.\"\n\n\"Remember don't touch my...\"\n\n\"I'll remember.\"\n\nCaroline lied down on her stomach with her legs about a foot apart. She reached over to her nightstand and grabbed the oil, then held it blindly in the air. Geoff took the bottle and set it next to him.\n\nHe grabbed Caroline by the hips and pulled her up to her knees. He leaned back and took in the view. Her back arched nicely, curving down then rising up at the shoulders. She had perfectly smooth skin and sexy back muscles that ran parallel to one another on either side of her spine. He loved that in a woman's back. Her narrow waist made her perfect ass the center of attention on her body in this position. She allowed her chest to lie on the bed, pushing her ass further into the air.\n\nGeoff caressed each toned cheek of her ass and pat it playfully. He looked at her asshole, it was absolutely perfect. He could tell she had been working it as it gaped slightly. He stroked his cock, still wet from her slippery blow job then buried his face into her ass. \n\n\"OH MY GOD! YES, GEOFF!\" Caroline yelled in complete surprise. \n\nShe had never expected, or even considered a man giving oral to her ass. Geoff surprised her initially and she scoot herself away from his face for a moment, but now she eagerly wanted as much as he would give. She wiggled her butt as he circled his tongue around her pink star. She grabbed the sheets in front of her and pushed her body back into his face when he inserted his tongue as deep as it could go. She moved her pelvis up and down as he licked her cheeks. She was very well primed for the fucking she hoped he would soon give to her.\n\nAfter several minutes of Caroline wiggling in pleasure, Geoff uncapped the baby oil and squirted it around Caroline's puckered hole, then slathered his cock. \n\nCaroline was still shaking her butt in reaction to the delightful rimming Geoff just gave to her.\n\n\"Okay, you're going to feel the pressure of my head against you. It's best if you push back onto me at a pace that is comfortable. I'm not going to move until your body has adjusted to me.\"\n\n\"Oh my God, this is so hot!\" she said excitedly.\n\nGeoff placed his cock up against Caroline's ass and waited. Expecting her to slowly ease him in, he was surprised when he saw her sphincter expand and her ass take half of his cock in the first push. \n\n\"Oh, shit, yes...YES!\" she cried.\n\nOn her second push she had his penis balls-deep inside of her and began moving back and forth on Geoff's rigid tool.\n\n\"Damn! That's it, Caroline. Are you ready?\"\n\n\"Yes, you have no idea. Fuck me!\"\n\nGeoff put his hands around her waist and began slowly pumping her tight asshole. She felt hot, smooth, and deep. He increased his pace after several moments as she moaned and shrieked her approval.\n\n\"Shhhh...Ahhh! Yes!\" he felt her body tremble, then shake. Then stop.\n\nPanting heavily, she said, \"I just came. Oh, god, that was so good!\" She panted.\n\nAfter a few seconds she turned her head back to Geoff, \"Keep going!\"\n\nStarting off slowly, Geoff resumed pumping his cock into Caroline again. As he worked up speed, she began to push back into him, creating a sexy slapping noise.\n\n\"That's it, Geoff. Oh my god, this feels so fucking good!\" \n\n\"Nnnn...Mnnn...Ohhhh! FUCK!\" Caroline huffed again. Tilting her head down, then shaking it slowly from side-to-side. \"So good!\" Another orgasm. Caroline began to laugh.\n\nCaroline was just what the doctor ordered for Geoff's ego. She made him feel like a virile young, stud, and he loved it. She impressed him with her oral skills, and now, anally, she could take a pounding with very little experience whatsoever. \n\n\"Turn me around.\" She stopped and waited.\n\nGeoff slowly let her move away from his dick, taking in the sexy sight of her expanded hole as she pulled off. \n\n\"Stay there.\"\n\nShe walked to the bathroom and came back with a wet, soapy wash cloth.\n\n\"Let me clean you.\"\n\nShe grabbed his cock and twisted the washcloth around it, then folded it over and did it again.\n\n\"Very clean. Awesome.\"\n\nCaroline felt better after having checked how clean she was. It was a big deal at this stage in her sex life that she remains clean. \n\nShe had already thought about how she wanted to be fucked next; in the padded chair she masturbated in.\n\nSpreading a towel over the chair, she sat on the edge and hiked her legs up, hanging them over the arms. This angled her ass up and her pussy back. Geoff watched in awe. \n\n'She is so fucking sexy.' \n\nHe had reapplied more baby oil and was stroking his cock while he watched her arrange the chair.\n\n\"This is how I masturbate, only I face the mirror when I'm alone.\" Geoff smiled at her willingness to share details most women would keep to themselves. Caroline was definitely different.\n\nGeoff got on his knees in order to line his oiled-up cock with her gaping asshole. \"Are you ready?\" \n\nCaroline looked into Geoff's eyes and said, \"fuck me.\"\n\nGeoff pressed his cock against her and watched as she expanded around him, accepting the first half of his dick. He could feel the tight ring stretch around the thickest part of his glans, then clamp around his shaft as he penetrated deeper into her rectum. \n\nHe squirted more oil onto the remaining portion of his shaft, then leaned forward and buried himself completely.\n\n\"Oh my god, that's so nasty.\" Caroline remarked in a very serious tone.\n\nHe let his cock stay stationary as she got used to it again, then slowly drew in and out as he held her legs back gripping her behind her knees.\n\n\"Spread my legs back more, Geoff.\" Caroline was struggling to see the view. She had become accustomed to watching her fuck herself with her dildoes in front of the mirror. Her being able to watch her ass expand around a phallus as it entered her had become a big part of what turned her on about her masturbation ritual. He pushed her legs back further and continued his steady penetrations. \n\nFrom the new angle, Caroline could feel every inch of Geoff's dick as it bore into her rectum. She was surprised how different it felt being penetrated by a flesh-and-blood penis versus the synthetic dildo. First off, the real penis was hotter. She could feel the warmth of the thing, especially when it was moving more slowly, or not at all. Next, Geoff was of a different mindset than her own. His pace was his, not what Caroline would have used, so there was a different feel to the experience. Where Caroline's hand would have grown tired at the tempo Geoff was using, Geoff could maintain a pace Caroline could never achieve with her toy. Finally, Geoff's dick was behaving independent of what she had in mind regarding anal penetration. This made the fact that she was getting fucked by someone else obvious. It was a far more thrilling experience. She realized that her dildoes just wouldn't cut it anymore.\n\nAs she was reveling in the experience, she felt a drop of sweat fall from Geoff's forehead and land on her bare chest. She looked up to see his face, twisted in erotic pleasure. Although she didn't really know the man, she could tell that he was very near his own climax. \n\nThe thick, filling penis had caused her ass to expand in the most delightful way. Watching it appear and disappear inside her body, expanding her little asshole, became overwhelming for Caroline. She could feel the deep, electric pulse that indicated she too was near.\n\n\"Keep fucking me like that, Geoff!\" she huffed.\n\nCaroline's words brought the man back from his concentration. Her legs pinned back and her ass gaping open, accepting everything he had, soon made it impossible to continue. He began pounding her loudly and with force.\n\n\"YES! Oh God YES!\" she cried. \n\nThe hard fucking was exactly what Caroline needed.\n\nGeoff felt the familiar sensitivity at the tip of his cock. His mind raced to hold off, giving the beautiful blonde more time to have her final orgasm before he lost all control.\n\n\"Oh...god! Yes...Yes...keep going!\" Caroline's eyes were locked onto the big dick as it entered her body. \n\n\"Ahhhh!\" She bucked and threw her hips up against Geoff's thrusts, panting in rapid breaths. Then, she saw blotches of white dot the room and an explosion of sexual pleasure overwhelmed her as she came.\n\nWatching Caroline wiggle and shudder through what was obviously an intense orgasm, triggered Geoff to finish. The entire experience was surreal. Her absolutely perfect body, her attitude about sex, her enthusiasm. Geoff no longer wanted or needed to hold back. \n\n\"Oh FUCK!\" His climax arrived very quickly. He had been ready to explode almost since the first moment he felt how tight she actually was. He looked at her now smiling face as she observed his every move and filled her ass with his hot cum.\n\nFeeling hot semen in her ass made Caroline want to risk touching her clit, but she dared not spoil the perfect ending to her first, real anal sex experience. Feeling hot cum fill her up was the most luxurious and sexy feeling she had ever had. She closed her eyes to enjoy it for a few moments before grabbing the towel and getting it ready for when Geoff pulled out.\n\nGeoff gently allowed his cock to exit Caroline's ass, enjoying the enormous hole created as he pulled out completely, then took part of the towel she was holding and wiped the cum from himself. He looked on as she held it to her ass and sat up.\n\n\"I'll be right back.\" Caroline gave Geoff a soft kiss on the lips. \"Thank you!\" She smiled and got up, walked into the bathroom and closed the door. \n\nGeoff waited until Caroline was finished then took a shower and dressed. It was a work night, so sleeping over wasn't an option. \n\nCaroline was wearing a robe as she watched him dress.\n\n\"That was the best sex of my life, Geoff,\" she smiled.\n\n'She's too much. I need more of this.'\n\n\"Wow! Really?\" Geoff moved in and kissed Caroline, \"Glad to hear it!\" he smiled, you were by far the best lover I've ever had!\"\n\nShe smiled and looked down at the floor. She escorted him downstairs to the front door.\n\n\"Good night, Geoff. See you tomorrow!\"\n\nAnd it was over just like that. The greatest sexual night of his life had come to a glorious end.\n\nOn his way home, he thought about all that had happened that night.\n\n'Either she has just discovered her sexuality, or she's the freakiest game-player I've ever met.'\n\nThe truth was, despite her very convincing story and what appeared to be a painful reaction to his touching her pussy, Geoff didn't know what to think about Caroline. \n\n'Even if everything she said is true, where does that leave us? Are we dating or just having sex? Does she really want me to be just a fuck buddy? Who does that?'\n\nUnder her sheets, Caroline smiled and gave a contented sigh as she reached to turn the light off on her nightstand. She quickly fell asleep in the comfort of her king-sized bed.\n\n*** \n\nCaroline arrived early to the office the next day. She had to be sure and keep up with her workload, so she could afford the extra time to listen in on Geoff and Bob's conversation. Although he didn't know it, the future of his relationship with Caroline hinged on what he would say or not say to his buddy.\n\nBy ten-thirty, Caroline had finished most of the items on her agenda for that day. She was now free to work at a more leisurely pace as she listened for signs of Bob and Geoff in the break room.\n\nChris from sales was talking to his wife on the phone about getting an estimate for their broken furnace. She heard Bob say hello to the man. \n\n'Okay. Bob is there.' Caroline squatted near the wall shuffling papers as if they had been recently dropped.\n\n\"Hey, man! How did it go?\" Geoff walked into the room.\n\nChris was now off the phone and left as Geoff spoke to Bob.\n\n\"It was nice. She talks a lot, but that's good.\"\n\n\"Probably nervous energy,\" Bob added.\n\n\"Yeah.\"\n\n\"So, where'd you go?\"\n\n\"Sandstone. It's not too far from here. Good food.\"\n\nCaroline's eyes were closed tightly hoping nothing too embarrassing would be shared. Bob's interrogation continued.\n\n\"And after dinner?\"\n\n\"I stopped by her place, had a glass of wine and went home.\"\n\n\"Very cool! Are you seeing each other again?\"\n\n\"I don't know. It was just a first date. I'll have to ask her out, but I think she'll say yes.\"\n\n\"Good job! Damn. Who would have thought Caroline would date a co-worker? You know, I bet just like on the talk show I told you about, no one has asked her out.\"\n\n\"You may be right.\"\n\nCaroline straightened out and sat down behind her desk. \n\n'He passed the gossip test. That was a big one.' She smiled, relieved that she didn't have to worry about her reputation being permanently destroyed. Now it was just a matter of waiting until he asked her out again, and something told her that she wouldn't have to wait too long.\n\nEnd"
    ],
    "authorname": "Cockhole",
    "tags": [
        "anal sex",
        "ass play",
        "beautiful",
        "blonde",
        "dildo"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/carolines-solution"
}