{
    "title": "Jess was a Bitch Ch. 15",
    "pages": [
        "Closure.\n\nThanks for going along on the ride and a special thanks to LarryInSeattle.\n\n==============\n\nJess is so lost in her thoughts it barely registers that they've landed. The seat where Jon should be sitting is occupied by an older gentleman who, having nodded in her general direction when he boarded, had been content after that to occupy his time perusing a journal whose pages were cluttered with arcane math symbols. She'd made her decision as soon as the van carrying Jon had disappeared around the bend of the resort's driveway. Yes, she'd made up her mind but now she's trying to decide if the new concern occupying her thoughts has any bearing on that decision. As the plane makes its maddeningly slow way to the gate, her mother reaches across the aisle and touches her arm.\n\n\"Are you okay, honey? You look pale. Are you getting sick?\" Gloria doesn't wait for an answer. \"Honey, I know, believe me, that this sounds like the sort of pablum old people tell young people, but it's true. Everything is going to be alright; whatever happens, it will be alright. You need to believe that, trust in that.\"\n\nNot trusting herself to speak, Jess simply nods. The seatbelt sign dings and goes dark and there's the usual insensible dash to be the first to jump up. Before she can pop open the overhead bin, Gloria grabs her in a ferocious hug. James, hunched over and trapped in the window seat, settles for squeezing her forearm. Halfway up the jetway, Jess panics. She appears to be about to bolt back onto the plane but surrenders herself to her mother's embrace. Gloria holds her until she quits trembling. \n\nIs this the right thing? What if I'm wrong? How can he be sure? Is this the right thing? Fuck! - Her thoughts are a pack of mad dogs tumbling and snarling inside her skull. She puts both palms against her temples and squeezes as hard as she can, squeezes until she starts to see stars. Her parents regard her with growing concern but Jess' breathing slows. She's still pale but no longer ghostly. She takes a deep breath and as she lets it out she opens her eyes and nods. Gloria nods back. She can't help herself; it kills her to see her daughter so pale. She resorts to a trick that she learned from her own mother. She pinches Jess' cheeks a few times. \"There you got a bit of color now, better than rouge,\" she tells her daughter before she puts an arm around her waist and walks with her up the ramp.\n\n***\n\nFor his part, Jon is calm. No one looking at him would be able to tell that his heart is pounding. He's forgotten that David is standing slightly behind him. For his part, David is cursing himself for thinking this was a good idea and is considering dashing into one of the bars and texting Jon his apologies. As the crowd exiting the security area begins to thin, a hint of nervousness starts to show around Jon's eyes. There's more than one flight arriving. The board reports Jess' plane is at the gate but he has no real idea when to expect her. The crowd slows to a trickle before he spots her. His mom has an arm around her. \n\nFuck, fuck, fuck, is she okay, this is my fault, what am I doing to her? Asshole. Selfish jerk dick asshole. Jon's control begins to slip away as he berates himself. \n\nDavid, despite barely knowing him, senses Jon's body tightening. He puts a hand on his arm, afraid he'll bolt through the security barrier and get himself arrested. The arm under his fingers trembles. \"Jon, relax, buddy. It's okay. You can't go to her yet.\"\n\nJon nods and his body relaxes. He moves closer to the security exit but stays back far enough not to draw a warning from the bored TSA agent sitting at his high desk. It's Jess that runs. She darts between irritated passengers, sprinting for the exit. \n\nEven though he's prepared, the force of Jess jumping into his arms causes him to stumble backward into the wall. He can't speak. Her lips are all over him. He doesn't care. As she ran, he could see she wore the necklace.\n\n\"Uh, Mr. and Mrs. Vandermach?\" Gloria and James tear their eyes away from their children. David sees the play of emotion in their eyes. \"I really shouldn't be here but Jon insisted and I really wanted to meet the two of you, the three of you,\" he corrects himself. \"I'm David, David Berman, the gallery dealer, Caitlin's friend.\" He offers his hand. James shakes it. Gloria gives it a quick squeeze before turning back to her children, cheeks wet. \"As I said, I feel an utter fool thinking this was a good idea. I just wanted to tell you that in the couple days Jon has let me watch him work I'm even more impressed by his art than I was when Caitlin sent me that first photo. Amazing. Truly. But I'm even more impressed by his caliber as a person. He's a great soul, your son. Lovely soul. I'm sure you know that. I will do my best to help and take care of your son and his work. You have my word on that. Here's my card. Call me if you have any concerns. I think I'll just slip away now.\"\n\n\"Please don't go, Mr. Berman.\" It's Gloria that speaks as she wipes her eyes. \"I know Jess won't feel right until she meets you. She has convinced herself that since she, 'doesn't know anything about art', that she'll be uninvolved in Jon's art. She's not a foolish person but that idea is, of course, absurd. I don't know how much you know but she's going to be very much involved in Jon's art, his life.\"\n\n\"Jon has spoken of it. It's unconventional, to state the obvious, but looking at the two of them and to an even greater extent, looking at Jon's art, I don't see how something that powerful can be ignored or set aside. That is likely not what you'd like to hear but, from my vantage point, it seems, nonetheless, to be true.\"\n\n\"If you're going to be doing business with our son, I expect you to speak your mind. I'm James, by the way, and this is my wife, Gloria. Forgive my manners; it's a bit stressful.\" The two men shake again. \"I suggest we get an Uber and let Jon and Jess make their own way home,\" he offers. The two of them have separated and stand holding hands, foreheads touching, talking.\n\n\"Jon hasn't let me pay for a damn thing all week. How can I claim an airline ticket as an expense with nothing else? Please, for my accountant's sake, let me pay for the Uber? Dinner even?\"\n\n\"Far be it from me to give your accountant an ulcer,\" Gloria says, smiling through her wet eyes. \"I'm busy working on my own. Let me go see if I can make either of those two understand that we're leaving and we'll see them at home. I'd not be surprised if they simply forget where they are and we get a call at two in the morning that they're still standing there holding hands.\"\n\nShe and James make their way over to the couple. Jon gives them both bear hugs. He's crying. That sets Gloria off and even James is sniffling by the time they re-join David. \"What the hell are you crying about?\" Gloria asks David, noticing his red, wet eyes and putting her arm through his. \n\n\"I've always been a big cry baby,\" David admits, wiping his own eyes. \"Come on. Anyone want to stop for a drink before we blow this popsicle stand?\"\n\n\"If it's a double, yes,\" James assures him. \n\nThey leave Jess and Jon talking and begin the long walk toward the terminal.\n\n***\n\n\"There are a couple of hotels right here at the airport. What do you think?\"\n\nAnother tremble runs through Jess' body. \"That would probably be easiest on mom and dad but what about after that? Jon, this just seems so impossible. I know I want to stay with you.\" She touches the necklace as she speaks. \"But that's just the start of it. You think mom and dad are going to let us share a room?\"\n\n\"We could get our own place.\"\n\n\"With what? All my money goes toward school and you just got fired!\"\n\nFor the first time since reuniting, Jon gives Jess one of the giant smiles that melts her heart. \"Yeah, I got fired but I also just got paid, seven thousand bucks.\"\n\n\"You got paid what? Seven grand! For the chalk drawings?!\" \n\nJon nods. \"Yup. That's my half. Of course, there's taxes and shit. David says that's the most a new artist in his gallery has got off a first sale. And the guy that bought them wants to see more. Wait until you see the big canvas. I know it's my own work but it's fuckin' awesome.\" \n\n\"You need a space to work before you need a space where we can fuck.\"\n\n\"Who says it can't be both?\"\n\nShe doesn't respond. She's no longer shaking, and her tears have dried up, but Jon sees more worry in her eyes than joy. \"Hey, baby, it's okay. Let's call mom. We can meet them for dinner. I want you to meet David. We don't have to go to a hotel or anything.\" He's utterly sincere, though the deep lizard part of his brain is appalled at the prospect of delaying the already long delayed rutting.\n\n\"No. We need to talk. The hotel is a good idea.\" Her lip trembles. \"I want you to know that if you change your mind, I understand.\"\n\n\"Change my mind? Are you nuts? What are you talking about?\"\n\nShe takes his hand. \"Not now. Not here. Let's go get my bag. Then we can talk. Okay?\"\n\nHe nods. \n\nHer phone chirps. She looks at it. \"Mom and dad want to meet us for dinner at 8, with David. You cool with that?\"\n\n\"See if they can find some place close, so we don't have to be gone too long.\"\n\nShe nods, stops long enough to text Jon's request. Jon asks her to check for a room while he gets her bag. They don't even need a shuttle to get to the Hyatt. As they walk along the concourse, neither of them speaks. Jon has no idea what's wrong. The relief he felt at the sight of the necklace around her neck gives way to worry. When he feels for her hand, Jess squeezes his and some of his fear is eased. \n\nThe hotel clerk clearly thinks they hooked up on the plane. Neither of them cares. \n\n\"I feel gross. Take a shower with me?\"\n\n\"I'd love to, Jess, but the sight of you naked is liable to make me jizz on the spot.\" \n\nShe smiles. \"I'll chance it.\" She takes his hand and leads him to the large bathroom. \"Just like old times, huh?\"\n\nHe smiles at her quip but the knot of unease in his stomach continues to wiggle and squirm.\n\nHe's rock hard before they can even brush their teeth. Somehow, they wash each other, though their lips are barely apart. The don't bother with towels, leaving a damp trail across the carpet and fall into the bed. Jon is on top of her, pressing against her hip, maneuvering his leg between hers. \n\n\"Stop, Jon. We need to use a condom.\"\n\nHe stares at her baffled. \"What? Why?\"\n\nShe opens her mouth; a word tries to escape but is engulf by a swallow sob. Jon rolls to lie beside her, resting on one elbow, cupping her face. \"What's wrong, baby? You're scaring me.\n\n\"That's because I'm scared out of my mind. I fucked up my pills. I missed nearly a week. I could be pregnant! I'm a couple days late for my period.\"\n\nTo her surprise, he grins. \"So? Fuck yeah. I'd love to put a baby in you.\"\n\n\"Jon don't be a dope. I talked to Caitlin. It's not her area but we did some research.\"\n\n\"You told Caitlin you were pregnant?\"\n\n\"No! Fuck no! I asked her what the real risk of sibling pregnancy was. I was praying the taboo was all societal. It's not. There's not a lot of data but around forty percent of the children of sibling or father-daughter incest have a genetic or other health problem. And just like the old joke about inbred royalty, children of sibling incest tend to have intellectual problems.\"\n\n\"Come on, Jess. Do you think most children of incest come from families like us? How many of them were the children of two people who were in love and wanted to have kids and were good parents versus how many were the offspring of rape? Nature versus nurture, Jess.\"\n\n\"Maybe but it's still an issue. Inbreeding has been bad for dogs and people are a little more complex than dogs.\" She takes a deep breath and looks at her fingers. \"If I'm pregnant, I think I should get an abortion.\"\n\n\"Huh? What? No way, Jess.\"\n\n\"Why not? That makes the most sense.\"\n\n\"Most sense? Are you nuts? If you're pregnant, it's our baby, Jess. Our baby!\" He takes her hand. \"There's testing and stuff, we can see if there's a problem. Even if there is, I have to tell you, I'd have a hard time if you got an abortion.\"\n\n\"What do you mean? You'd try to stop me? Leave me?\"\n\n\"Christ, don't be a simp. No, I wouldn't leave you. How many times do I have to tell you that I love you. I don't think perfection should be a criterion for being allowed to be born. We've never had a reason to discuss this. I'm not some Christian right-wing nutjob. I don't think abortion should be against the law. In the end, it has to be the woman's decision. But, I also think it's bullshit to pretend it's no more a big deal than getting your hair dyed.\"\n\nShe shakes her head and then lets her head fall back onto the bed. \"That's pretty much exactly what I've always said, right up until the moment I realized that I might be pregnant and that my brother would be the father.\"\n\n\"Hey, if you are, it'll be fine. If you aren't, that'll be fine, too. You really want me to use a condom?\"\n\n\"Don't you think you should? What if I'm not? Shouldn't we be careful until I'm sure it's safe to go back on the pill?\"\n\n\"Aren't you back on?\"\n\n\"No, and even if I were, you have to be on it like a couple of weeks, or a month, or something.\"\n\n\"Why didn't you start taking 'em again?\"\n\n\"I wasn't sure if they'd hurt the baby. If I was pregnant, I mean.\"\n\nHe pulls his sister to his chest and runs his fingers through her hair, kissing her forehead. \"That doesn't sound like something a chick planning on an abortion would do.\" She doesn't answer. \"Uh, how long do you need to wait until you can check? You know with one of those pee stick thingies?\"\n\n\"I'm two days late. There's one that is supposed to be 99% accurate already.\"\n\n\"Really? Why don't we get one?\" He scoots from under her, sits up and grabs his phone. His thumbs dance across the screen. He snorts. \"If I could walk across the runways there's a CVS about a mile away. According to the map, it's a twelve-minute drive since you have to drive around the airport. You wait here and relax babe.\"\n\n\"You're going? To get a pregnancy test? Now?\"\n\nHe smiles down at her as he pulls on his jeans, not bothering with underwear. Despite the seriousness of the conversation, his young cock is still half-hard. \"Yeah. I'll get condoms too. If you're not pregnant, decide if you want to use them. I hear all the doom and gloom bullshit but, I'm not kidding, the idea of filling your pussy with my sperm and making a baby is fucking exciting.\"\n\n\"Jesus, Jon! Forget the rest, what about the fact your nineteen and I'm twenty and in college? How the fuck do you think we can manage a baby, too?\"\n\nJon shrugs. \"Call me a dope but that part doesn't scare me. I think it would be fucking baller to have a kid running around. I think...\" he stops and looks off into space for a minute. \"I think this art thing is gonna work out. For the first time, just this fucking second, I can imagine a life where I don't have to be behind a desk by eight or nine, where I can work around my life instead of working my life around a job.\" His grin is so full of joy, Jess can't help but feel better. \"I'm going to get an Uber. That'll be cheaper than getting the car out of the garage.\" He leans over and kisses her tenderly, one hand on the back of her neck. \"See you in a few minutes.\" He straightens and grabs his tee shirt. He has it over his head with one arm halfway in when he stops and stares at Jess. \"God, I fuckin' love you. Jesus.\" When she tears up, he pulls the shirt on and kneels on the bed. He kisses her eyes, savoring the salty taste, even if it is from her tears. \"Don't cry, little one. I'll be right back.\" He hops off the bed. At the door, he turns and gives her an utterly unconvincing stern glare. \"No beatin' the bishop while I'm gone.\"\n\nJess rolls her eyes. \"Oh my God, where'd you hear that one?\"\n\n\"Hear it? I knew it. I'm a virtuoso when it comes to masturbation slang, chicks and dudes.\"\n\n\"Great,\" she scowls at him. Her scowl is as patently false as his glare. \"Hurry back, Jon.\"\n\n\"You got it.\"\n\n***\n\nGloria is surprised to discover she can forget, for a moment or two, about her children. She, David, and James settle into an easy conversation. They've all chosen to go with the never-can-go-wrong martini, assuming the bartender knows how to make a proper one. She'd had her doubts, given the location of the bar in one of the busiest airports in the world but, in this too, she has been pleasantly surprised.\n\nBefore the first martini is finished, her doubts about Jon's business dealings with David have been erased. She sighs. That's one thing off her plate.\n\n\"How did you meet Caitlin?\"\n\n\"Charity auction. I talked one of my clients into donating a piece. She was coordinating the auction part of the event.\"\n\n\"I wonder if it was the same event where she met Travis?\" Gloria asks, looking from her husband to David.\n\n\"You know, I'm not sure. I think they were already together, if not married, at that point but I won't wager a large sum of money on it.\"\n\n\"This is the first time you've done business with her?\" James interjects before sipping his martini. He pauses to enjoy the abstract patterns the condensation makes as it coalesces and begins to run down the side of the glass.\n\nDavid looks at his own glass. \"Fascinating, isn't it? The reflections and distortions.\" James nods, somehow pleased that he and David had been on the same track. \"To answer your question, yes and no.\" \n\n\"Oh, my god, don't tell me you're a lawyer, too?\" Gloria moans. \"Yes and no? Please.\"\n\nDavid smiles. \"No, I'm not a lawyer. Yes, I've sold Caitlin and Travis art work. So, we have done business. No, in that I've never been involved as a business partner with either of them.\"\n\n\"May I ask why not?\"\n\n\"You may and there's no reason in particular that I can think of, honestly.\" David shrugs. \"The right reason, or the right artist, simply never came along - before now. A second factor is that, until recently, I've not felt comfortable enough to consider opening a second gallery. I'm doing quite well and the thought of the time, effort, and expense, not only of the physical plant but of also finding someone I trust and respect, artistically speaking, enough to partner with struck me as more trouble than it was worth. I've plenty of respect and trust for Caitlin. And, insofar as it's a concern, she's contributing her own capital. It seems to me, especially in light of Jon's work, that it's a win-win, and win, situation.\"\n\n\"So, it's not that you were afraid of mixing business with, ah, pleasure?\"\n\nDavid looks at James, one corner of his mouth, twitching upward into a half-smile. \"You mean am I one of Travis and Caitlin's lovers? No. They are exclusively interested in couples and I have never been part of the right couple at the right time.\"\n\n\"Sorry, I don't mean to seem rude,\" James offers.\n\n\"Not at all. Nor do I. Jon is going to be a client. Are you and Gloria involved with Travis and Caitlin? Although she is the heart of discretion, Caitlin felt it only fair to tell me that they had been involved with Jon and Jess. If you two are as well, that's a complication that could affect Jon isn't it? Let me add, lest you think I'm a total spying ass, Jon volunteered he and Jess had been intimate with Caitlin and her husband. Sex is quite a complicating factor, even at the best of times.\"\n\n\"Yes, that it is.\" It's Gloria who answers. \"We have had a...have been involved with Travis and Caitlin. I almost said 'fling' but that's the wrong word entirely. They're lovely people. Yes, it's extremely complicated, knowing they'd been involved with Jon and Jess but Jess has made it quite clear that she not only knows that something happened but is rather charmed at the idea. Having said that, you surely know that when it comes to love and sex and family and business, we are in no position to guarantee the whole damn shebang won't blow up in our faces. I quite understand, from the standpoint of doing business with our son, your concern. The only issue I'd consider you an ass over is if you are also questioning our commitment to our son's, and daughter's, well-being. Surely, that was not the gist of your question?\"",
        "David shakes his head and, leaning toward her before she finishes speaking. \"No, Gloria, not at all. I saw enough of the reunion back there to have no concerns whatsoever in that regard. I cannot imagine our interest in Jon's welfare, and by extension, Jess' will ever be anything but perfectly aligned. I personally believe the 'tortured' artist motif is self-indulgent posturing. I hate the idea. It's true that genuine success, in any field, requires effort and determination and often a degree of pain and suffering but if pain and suffering is the only reward, it's a fool's bargain.\"\n\n\"In that case, buy me another martini.\" \n\n\"My pleasure. James?\" he asks turning his head. \n\n\"As long as we don't forget we're meeting the kids in,\" he looks at his watch. \"We have time.\"\n\n\"Shit,\" Gloria hisses under her breath. \"I forgot to tell you. Jon and Jess are staying at the Hyatt...\"\n\n\"Staying at the Hyatt? Why? Oh.\" The look Gloria gives James would have withered him in his seat had it not been accompanied by her loving and amused eyes.\n\n\"They want to eat some place close by.\"\n\n\"Well, let's go to the Grand Met. It's in the Hyatt,\" James suggests, digging in his front pocket for his phone. He taps at the screen for a few minutes. \"There, all done. Dinner for 5 at eight pm.\" \n\n\"I'll text the kids.\"\n\n***\n\n\"Did you get mom's text?\"\n\nJon shakes his head. \"No, I mean my phone went off but I don't check it driving. You know that.\"\n\n\"We're eating at the restaurant here. Eight o'clock.\"\n\nHe nods, distractedly. He's busy undressing. He finds he abhors being clothed around Jess. He kicks his jeans across the room with one foot, stares at them and then swears. \"Jess, I don't have anything to wear to a nice restaurant. Fuck.\"\n\nShe starts to giggle. \"Impregnating your sister doesn't faze you but nothing to wear to a restaurant does? Oh my God.\" She picks up her phone. \"Mom, uh not to be a bitch, not me this time, Jon. He only has the jeans and tee shirt he wore.\" She nods. \"814, yeah, one-four, not four-one, eight-one-four. Okay. Quarter till. Deal. Bye. Love you.\" She kneels behind Jon and rests her chin on his shoulder. \"There, all settled, she'll drop by with a pair of 'decent jeans', her words, and a shirt.\" She nods at the small plastic bag he holds in one hand. \"Are we doing this?\"\n\n\"Yeah, unless you want to forget about it, lie back and bed and make love. I'm okay with that, too.\"\n\nJess considers it then shakes her head. \"I'd rather know. I love the way you jump in with both feet but the idea of two of us having a baby, right now, needs a little more thought. If I'm not pregnant, I want you to use a condom.\"\n\n\"If you are pregnant, you going to be okay?\"\n\n\"I think so.\"\n\nHe nods, then, looking over his shoulder, smiles, looking much younger and very shy. \"Uh, you know how we talked about being honest and no hints, about sex and, well, everything?\"\n\n\"Yeah, of course. Why?\"\n\n\"Uh, fuck this is honesty shit is hard, I'm afraid you'll look at me like I'm a total freak.\"\n\n\"Jon, please, I got enough to worry about without that. What is it?\"\n\n\"I want to watch you pee.\" He flings the words from his mouth before he has a chance to re-consider.\n\nShe starts laughing. \"Again, you have no problem telling me, your sister, how much you love me and want to have my baby and live together forever and fuck everyone else but that, asking if you can watch me pee, that you have to work up to? Again, oh-my-fucking-God.\" She kisses the back of his shoulder. \"You are unbelievable. Come on. If you're that interested, you can hold the fucking stick for me.\"\n\n\"You know how to do this?\"\n\n\"No. Come on we can read the instructions together. Bring a phone. We need a timer I think.\"\n\nHe holds her hand as they make the short journey to the bathroom. It dawns on him that there's the real possibility that he'll walk back out of this door on an entirely different path than the one he'd envision just an hour ago. He gives a mental shrug, realizing he walks through doors leading to different paths multiple times a day; it's just that most of the time he's not aware of it. \n\n\"Jess, what do you think we'd be doing right now, if three or four months ago, the reservations clerk hadn't been hungover or worried about a kid, or whatever, and hadn't fucked up the reservation? What if we'd each had our own room? What if we were sitting at home, each in our own room, counting the days until you went back to school and we didn't have to deal with each other? You ever think about how a very small, very simple, thing can change everything?\"\n\n\"Yeah,\" she whispers. \"All the time.\" She takes a breath and opens the box. The directions are simple. Jon recommends the tub. Jess perches at the back, knees apart, fingers spreading her labia. He checks a dozen times to make sure he's holding the stick the right way. Jess emits a short, desperate giggle. \"I can't go.\"\n\n\"Should I leave, baby?\"\n\nShe closes her eyes. \"No. Give me a second.\" There's a small, brief, gush of urine, a pause and then she's able to relax. \n\nJon is enamored at the rush and force of her stream. He had no idea girls peed that hard. As amazed as he is, he's more worried about not fucking up his role in this enterprise. He slips the tip of the stick into her stream. He doesn't trust a mental count. He uses his phone and at exactly five seconds removes the stick. He ignores the continued rush of Jess' stream, caps the stick and lays it carefully on the sink. He then surprises her by hopping into the tub. Her dwindling stream plays over his lower belly and half hard cock.\n\n\"It's so hot, not sexy hot, well that too, but temperature hot,\" he whispers to her as he leans forward to hold her in his arms. He helps her up. \"Let's rinse off.\" He adjusts the water and uses the shower attachment to rinse their bodies. They step out of the shower. He checks his phone. \"Almost three minutes,\" he whispers. They lean over the counter and look at the stick.\n\nAt the first glance, her heart soars; at the second glance it flutters and feels as if it has stopped. The second line is faint, faint enough that she missed it at first but it is there. There's no mistaking it. \n\n\"Oh Jesus, oh Jesus,\" she whispers over and over. \n\nShe starts to slump; grabs her. He helps her to the floor and sits with his back against the tub, neither of them minding the chill of the cold tile on their bare skin. He rocks her, brushing her hair back. \"Sssh, now, hush, baby. Everything is going to be fine. It's okay. Hush, baby,\" he whispers in her ear, over and over until she quiets.\n\n***\n\n\"I really want you to see the new painting. It came to me like a vision or something, seriously, that last day we had in Mexico, when we made love in the waves, remember? I didn't totally understand then, but I think it really was a vision, a vision telling us that everything is going to be alright, better than alright, fucking gloriously alright. I know you'll think that's just my own desires, desires so intense I want them to be a vision. That's what I always thought explained people's belief in God; they want life, the world, to make some sort of fucking sense, therefore there must be a God. But this isn't like that. You have to trust me.\" Jess is lying on her left side, curled into a ball, hugging her knees to her chest. Jon does his best to hold her close, folding his body around hers. He's whispering in her damp hair, rocking her. \"Are you cold? Do you want to get under the covers?\"\n\n\"No,\" she whispers. \"And I do trust you but, my God Jon, how can you honestly imagine we can handle a baby? Now?\" Her body uncurls so abruptly her head bumps his jaw, causing Jon to bite his tongue. The pain is abrupt and exquisite in its intensity. He ignores the pain as Jess sits on the edge of the bed and begins to hit herself in the head. \"Stupid, brain-damaged cunt, fucking idiot, one pill a day, how fucking hard is that? Stupid imbecilic cunt.\" Each phrase is punctuated with a punch to the side of her head. \n\nHe scrambles out of bed and grabs her wrist. \"Fucking stop it!\" She jerks her right hand free and hits him, hard, in the chest. He grabs for her wrist again. She jerks away, manages to hit him along the side of his arm. He lets go of her. \"You want to hit someone? Fine, hit me. But quit hitting yourself; it's fucking stupid. I told you before - don't call yourself a cunt. I meant it. Don't.\" He's no longer yelling; he doesn't even raise his voice. \n\nJess stands, pummeling his chest with the sides of her fists, landing a glancing blow along the side of his jaw as she does. \"I'm a cunt, cunt, cunt, cunt.\" Her fists stop flying as abruptly as they'd started. They rest on his chest. She sees blood on his lip. \"Oh my God. I made you bleed. I...fuck...I.\" She lowers herself to the floor beside the bed. Before she can slump onto her side, Jon grabs her, pulling and turning her, so that she sits between his legs, her back to his chest. \n\n\"I bit my tongue. You didn't make me bleed. Seriously, Jess, what the fuck? You need to seriously pull your shit together. You think you're the first person in the world to forget her pill because she's having a good time? Fuck, spare me. I forget shit all the time, important shit, like going to work. Does that make me a stupid fucking cunt?\"\n\nJess starts to giggle but there's no amusement in the sound. It's a desperate sound, full of fear. \"Maybe you are. You love me, don't you? And I'm a stupid cunt, so maybe you are.\"\n\nHe reaches past her and picks up his phone. \n\n\"Who you callin?\"\n\n\"Mom,\" he replies, voice steady. \"I think I need to call an ambulance but I want to talk to her first. You've lost it. You need a doctor or something, like right fucking now.\"\n\n\"Don't.\" She puts her hand over the phone. Laughter and giggles vanished. She looks terrified and very tired. \"Please don't tell mom. I can't handle her disappointment right now.\"\n\n\"She's not going to be disappointed.\" Seeing the look in her eyes, he adds, \"Not much anyway. And she'll be just as disappointed in me as in you. I'm calling her. I don't know what to do and she will. You're going to hurt yourself or something. You've totally fucking lost it and I don't know what to do. Mom will.\"\n\n\"Mom will? You think we can have a child when we still need to have mom fix things for us?\" She fingers the necklace. \"This is wrong. I'm a fool and you're still a kid. You're trippin' on the idea of being in love, even if it's with your sister. We're not playing house, Jon. A kid isn't just some 'baller' miniature bro you'll be playing video games with. Look what mom and dad have been putting up with the past few weeks. You think that was 'baller' for them? I'm not blaming you. I loved the feeling of being loved as much as you did but we're fooling ourselves.\" Her hands go to the back of her neck.\n\n\"Fuck you, Jess. You are so full of shit sometimes; it fucking amazes me. I can imagine the shit well enough. I can also imagine the joy. Can you? I'm a kid? No, Jess, you're the kid. You're scared, so rather than deal with it, you convince yourself that it's doomed, there's nothing we can do, so you don't even have to fucking try. Fuck that. Fuck you.\"\n\nHe hops to his feet, a Kung Fu-like move she had no idea he was capable of. She's so lost in processing his words, searching the words and herself, looking for the truth, she doesn't respond as he gets dressed. It's not until his hand is on the door handle that she wakes from her stupor. \"Jon, wait, please. I need a minute to think about what you said. That alone tells me you're probably right. If what you said was nothing but bullshit I wouldn't need this much time to digest it. So, please come back. If you leave, nothing'll be settled. It'll still be there. It sucks but we have to deal with it, not just me, we, both of us. So, please come sit down.\"\n\nHe hesitates, hand on the handle, for what feels to Jess like a very long time. \"I'm so pissed at you right now; I don't wanna talk.\"\n\n\"Fine. Do you think you'll never be pissed at me again? You don't have to talk, not right this minute, but I think it would be a mistake to walk out. You'll be pissed at me again, and I'll be pissed at you, but walking away won't fix that.\"\n\n\"Fix what exactly? I'm a child, playing house. Why should I sit down if there's nothing to fix?\"\n\n\"I told you; what you said hit home. I'm trying to wiggle my way through to the truth of your words. Maybe it's not all true. Maybe it's hardly true at all. I don't know but I do know there's at least some truth in it or it wouldn't have bothered me so much. Maybe you should think about that as well.\"\n\n\"Think about what?\" He's still standing in front of the door but his forehead now rests on the door.\n\n\"About why what I said pissed you off so much. If it was all bullshit I don't think it would have had this effect on you.\" She waits for another explosion but none is forthcoming. \"You're right. I am trying to hide from something hard. I don't think that means I don't love you. You're right, I'm childish in my own way. And I may have overreacted but thinking that mom will fix this for you does seem childish to me.\" \n\nHe spins around. \"I wasn't calling her to fix 'this'. I was calling her to ask her what to do with someone who's fucking lost their fucking mind! That's a pretty big fucking difference, Jess. You're fucking cackling like a goddamn lunatic, hitting me, hitting yourself. What the fuck did you want me to do? I should have just called the front desk and told them to send an ambulance or a padded van if they still have those. That's what I was going to do. I decided to see if mom had a better idea. That makes me a child?\" He leans his butt against the door and slides to the floor, resting his head back against the door. His legs stretch out as far as they can in the small alcove. His hands hang loosely between his legs. \"God, I hate this, hate being pissed at you. It's exhausting.\"\n\n\"I know,\" she sighs. \"You know how many times I've heard, 'don't worry, everything will be alright' in the past week or so, either from you or from mom? That is bullshit and we both know it. It may be alright but there's no guarantee. There never is, why pretend? If you're doing it to be strong for me, don't. I know you're strong, stronger than me most of the time, but tossing out platitudes isn't strength or even very helpful.\"\n\n\"Platitudes? If that's what you think then we really are doomed. Those aren't platitudes, Jess. You're not simple. How can you not know that? There affirmations. Affirmations of commitment and belief in us, in our love for each other, that if we stay trusting in each other, lean on each other, we will be fine. Doesn't every couple imagine that? If they don't, what's the point? What's the point of being together if you expect it won't work, that it'll be a disaster, huh?\"\n\n\"I'm not saying I expect it will be a disaster but pretending it will be all ice cream and unicorn rides isn't particularly helpful either.\"\n\n\"Not constantly focusing on the potential negatives isn't pretending it will all be ice cream, Jess. That's bullshit and you know it. Just because I don't choose to obsess about all the possible horrors life may hand out doesn't make me a fucking simpleton. Perhaps that's why I got so pissed. I'm tired of people, you, that fucker Ed, half the senior class, thinking I'm some sort of brain-damaged dork.\"\n\n\"I don't think of you that way.\"\n\n\"Really? Even in the last couple minutes, you don't hear any hint of patronization in your words, in your voice?\"\n\nShe opens her mouth and closes it again. She nods. \"Fair enough. I don't mean to. I'm just trying to get you to acknowledge the realities of the situation. It's hard for me to imagine we can make this work, if you don't understand the reality of what the two of us trying to be together means. And of having a child. A child Jon. Diapers and no sleep. How are you going to paint? How am I going to go to school? And, what if that forty percent is real? Factor in a special needs child on top of that. A nineteen-year-old aspiring artist and a college student raising a special needs child, seriously?\"\n\n\"For the millionth fucking time, I get it! You want me to freak out, start punching myself in the head and throw myself on the floor to prove it? Would that help? Because I have to tell you, that sounds pretty childish to me.\"\n\nShe flinches at the words. He bites back the apology that springs to his lips. \"That was pretty cold, little brother. I did freak out. I am freaking out.\"\n\n\"Yeah, you did. And who was there for you, huh? Who?\"\n\n\"You, but who was about to walk out? That was you as well.\"\n\n\"It sure felt to me like I was being told to go. I was walking out to calm down, not to leave. Do you want me to leave?\"\n\n\"I've been telling you not to, haven't I?\"\n\n\"Yeah, is that because you want to go over it all over again, get in a few more digs, and then tell me you made a mistake putting that necklace on? If that's why I need to sit down, no thanks. If it's to figure out how we get past this, fine. If you're saying we're done, say so, please.\"\n\n\"I'm a bitch but not that big of a bitch. If I thought we were done I wouldn't have tried to stop you from leaving.\" Jess gets up from the bed and walks to the door. She sits down beside Jon and leans against him. At first, he just sits there, then he raises an arm and puts it around her shoulder and rests his cheek on top of her head.\n\n\"I know this seems impossible and stupid and crazy but I believe in us, that we can beat all that. I'm sorry if that seems silly to you. I'm sorry for getting pissed.\"\n\n\"Jon, we're going to get pissed at each other. How can we not? You can only get really, truly pissed at someone you care about. I'm sorry I accused you of being childish. I misunderstood what you meant by 'mom will'. I did freak out, I'm still freaked out. I'll freak out again. I've never hit anyone like that before though. I'm sorry. I know you were trying to help. I'm sorry about your lip.\"\n\n\"It's not my lip. I bit my tongue. I told you.\"\n\n\"Tongue, lip, you didn't bite it chewing gum so, I'm guessing I had something to do with it.\" She puts her hand on his leg. \n\n\"Did you hurt yourself?\"\n\n\"You mean my head? Not on the outside. Some of the things I said to you hurt me plenty but mentally not physically. I thought I had that part of me under control.\"\n\n\"I said some pretty shitty things as well.\"\n\n\"Don't do that. Please. You did but not the same sort of shitty. Don't provide me with an excuse that will let me give myself a pass.\"\n\n\"Dammit, Jess, you're not a...\"\n\n\"I am, at least a little, most of us are, in the non-gender sense of 'asshole' or 'jerk'. You don't get how unusual it is that you aren't a bitch, do you?\"\n\n\"I'm as big a dick as anyone. I'm...\"\n\n\"No, Jon, you're not. You may want to think so but you aren't. If you want to think you are because you think that makes you tougher, you're wrong. The fact that you aren't a bitch means you're much stronger than most of us. It's one of the things about you that awes me.\"\n\n\"That's silly. I'm just a regular guy who happens to be deeply in love with a woman who insists she's a bitch when she's actually the most amazing person I've ever met.\" He pulls his arm from around her shoulder. \"I'll be right back. I'm going to the lobby to check on something.\"\n\n\"Uh, okay? What?\"\n\n\"Secret. What time is it?\" He hops to his feet and grabs his phone. \"Okay, we got time.\" He holds out his hand and pulls Jess to her feet before pulling his on his jeans and tee shirt.\n\n\"Kiss me before you leave. Please.\"\n\n\"You don't have to say please. There's nothing I'd rather do.\"\n\nAs gentle as the kiss is, he feels his cock stir. He remembers someone saying a hard dick has no conscience. His mind is a mosaic of worry, fear, a bit of anger, and hope, yet, the touch of her lips has him getting hard in his pants. He doesn't know it, his father could fill him in, but it won't be all that many years into the future before he'll start to miss the fact his dick is constantly at the ready. He kisses her quickly and slips out of the room. ",
        "\"Before I go, I need to know where we're at. Are you changing your mind? Calling it quits?\"\n\nJess shakes her head, clutching at the shell around her neck. \"Jon, I'm scared out of my mind.\"\n\n\"I know that baby. Don't you think I'm scared? Just not out of my mind.\" He pulls her to his feet and embraces her. \n\n\"Okay, Jon. As long as you love me, I can try.\"\n\nHe kisses the tip of her nose. \"And if you love me, I can try. Deal?\" \n\nShe nods. He kisses her for a long time.\n\n\"I know you're right. I know this is the last time will be pissed at each other but can we try? I fucking hate it. I felt like I was going to throw up.\" \n\nJess cups his face in her hands. \"So, did I. Go on. Hurry up. I'll miss you.\"\n\nShe goes into the bathroom. She's a mess. Her eyes are bloodshot with dark circles. It must be her imagination but she wonders if her boobs look bigger. \"Impossible,\" she whispers to her reflection. She puts a hand over her belly. \"What the fuck are you doing in there? No what are you up to in there but what the fuck are you doing in there in the first place?\" she whispers. She splashes on her face and returns to lie down on the now rumpled bed. She refuses to curl up in a fetal position. She lies on her back, one hand on her tummy, and closes her eyes. \n\n***\n\nJon takes longer than he'd expected. Jess is dozing when the door opens. \"Sorry, I had to go back down the concourse to a business supply store for one of the things I needed,\" he explains as she sits up with a yawn. \"Hey, you want to take a nap? You okay?\"\n\n\"No, I'm fine. What did you need at a business supply store?\"\n\n\"First, even with all the uncertainties and worries, are you still committed to us?\" He touches the half a seashell hanging on the chain around her neck. \"Do you want to take this off? I know you said no earlier but I need to hear it again.\"\n\nShe wraps a hand around the shell. She's surprised by how warm it feels in her hand, too warm to be nothing more than her own body heat. She opens her fist, half expecting the seashell to be glowing. It isn't but it still feels impossibly warm in her hand. She closes her fist around it. \"No, I don't want to take it off. Not ever.\" She feels the shell blaze in her hand. The only thing that surprises her this time is that the room doesn't fill with light. \n\nHe leans toward her and kisses her. \"Okay, then. I want us to have a commitment ceremony. The world may not allow it but fuck the world. I want to wash away the old us and walk out of here not just as new people but as a new couple, a new thing, a new entity that the world hasn't seen before.\" \n\n\"Okay, babe. What do you have in mind?\"\n\n\"Well, mostly a bath, a symbolic bath. I want to bathe you, then you bathe me.\" Jess nods and Jon continues. \"And I want you to shave me again. I know you wanted me to let some of my hair grow back and I will but right now I want you to shave it all.\" He pulls a set of disposable razors and tosses them on the bed.\n\n\"Sure, Jon. I love the idea. You shave me too, okay?\"\n\nHe nods. \"I want you to shave all of me, everything but my eyebrows.\" \n\nHe reaches in the other bag and drops a pair of scissors on the bed. Jess looks confused for a second, then shakes her head. \"No, Jon! I love your hair. Not your hair.\" \n\n\"All of it. The new Jon may let it grow long again. I want to start all over. I want anything that might have bad luck or karma or whatever removed from my body.\"\n\n\"Jon, I don't think I can shave my head.\" \n\n\"Oh, baby, you don't have to. It seems important to me, for me to do it. You don't have to.\"\n\nThe total acceptance of her wishes overwhelms her. \"Can we cut my hair short but not all off?\"\n\n\"Baby, we can do whatever you want.\"\n\n\"So, we're getting married in a tub?\"\n\n\"Works for me,\" he grins at her.\n\n\"Works for me, too.\" There's no undercurrent of worry or fear in Jess' voice or mind. She has no doubt it will work for her as well. \n\n***\n\nIt takes a lot longer to cut Jon's hair and shave his head and body than either of them had anticipated. Jess does his body first. She gets him wet in the shower. Disposable razors aren't the best for the task. When she nicks him, she puts her lips over the nick and touches her tongue to the drop of blood there. His blood tastes like hot metal. It's her turn next. When Jon nicks her, he too takes that part of her into himself. They get out of the shower to do his hair. He sits on the closed toilet. The large clumps of hair tickle as they cascade down his naked body. Jess collects a handful of the long strands of hair and lays them on the counter. Back in the shower, she shaves his head. She only nicks him once. She's surprised at how good he looks with a shaved head. \n\nShe takes his place on the closed toilet. There's no frisson of fear as the scissor's make a snickety sound and a clump of hair falls into her lap. She trusts Jon to leave enough for her stylist to fix. He takes his time. He fluffs her hair to get the lose hair out. \n\n\"Don't look yet, if you can help it. I need to use some of your gel but we have to bathe first.\"\n\nShe nods and keeps her head turned when she rises. \n\n\"Is it okay if we bathe together? It took longer than I thought to do our hair.\"\n\n\"Of course, Jon. Of course.\" She kisses his cheek, climbs into the tub and kneels. He joins her. They use the hand shower and washcloths to wash each other. He washes her hair. He has her close her eyes and sit on the side of the tub, facing the mirror. He retrieves her hair gel form her toiletry bag. His fingers work in her hair, tugging and pulling. \n\n\"Okay, you can look.\"\n\nShe opens her eyes and stares. She doesn't speak. Jon's face falls. \"Is it okay? We can get you to a salon...\"\n\n\"I fucking love it.\" She turns to look at him. \"God, I fucking hate you sometimes. You can fucking paint and draw. And,\" she turns to look in the mirror, \"apparently you can style hair as well. Fuck. I look like I paid two-hundred bucks for this coif. Fuck, Jon, do you have to be good at everything?\"\n\nHe shrugs, embarrassed. \"I see things and my hands seem to know how to make them happen. It doesn't even seem like it's me doing those things sometimes.\" He glances at his phone, sitting on the countertop. \"Shit! Jess it's seven o'clock. Mom is going to be here in thirty, forty, minutes. You know she's always early.\" \n\n\"Come on. I can't believe I'm saying this. For the past week all I've thought about was jumping on your cock, at least until I realized I'd fucked up my pills, but let's go lie down for a few minutes, just snuggle. Okay? I'm sorry I fucked up our reunion.\"\n\n\"You didn't fuck up anything. All that shit needed to be dealt with at some point.\" He drops to his knees and kisses her just above her pussy. \"I can't believe you have a new human growing inside you.\" He looks up at her and his face is so full of awe, she can't help but feel that he's been right all along; everything is going to be alright. She puts her hands behind his head and pulls his face close to her tummy.\n\n***\n\n\"Sweet, ever lovin' Jesus! Jon what did you do to your hair!? I knew I should've had another martini before leaving to buy you some damn clothes.\" Gloria stares at her son.\n\n\"Cool, huh? It's the new me. A new start. A new life deserves a new me.\"\n\n\"Oh, yeah, cool. The new you couldn't just settle for a new haircut?\" Gloria shakes her head, navigating her way between surprise, amusement and not a little pride at her adventurous offspring. \n\n\"Uh, some of us just went for a new haircut.\" Jess sticks her head out of the bathroom. She looks nervous. Gloria puts a hand to her mouth.\n\n\"Honey, you look beautiful. How did you find time to get to a salon?\" Jess pulls her face into an exaggerate frown and points past her mother. Gloria turns back to her son. \"You did that? How? With what?\"\n\n\"Scissors.\" Jon looks at his feet, then back at his mom. \"I could see how her hair wanted to lay and grow. I knew how I wanted it to look. I expected a disaster but it came out pretty cool, huh?\"\n\n\"Yeah, pretty cool.\" She reaches out one hand, pauses. \"May I?\"\n\n\"Sure.\" He tips his head. His mom's hand is warm. It feels nice. She sighs. \"You do look handsome; I have to admit. It's just such an abrupt change.\" She tosses a bag onto the bed. \"Here's some jeans that still have knees in them and a shirt with a collar. You remember what that is?\"\n\nHe blows her a kiss and steps over to the bed. He undresses, heedless of the audience, and picks up the bag. He turns to his mother, who is surprised to find she's not blushing. \"No underwear?\" Gloria shakes her head. Jon pulls the jeans out of the bag, pulls off the tags and steps into them. She notes that his body is hairless, other than his eyebrows. She also notices several bruises on his chest.\n\nShe turns to her daughter. She been distracted by Jess' haircut earlier. She looks closer. \"You've been crying, haven't you?\" she whispers. \"Did you have a fight? Honey, did you hit Jon?\"\n\n\"No, she didn't. Jeez you're a terrible whisperer mom. At the risk of TMI, which you asked for, we got a little carried away.\" \n\n\"No, we didn't. You don't have to lie for me, Jon. In fact, I rather you didn't.\" He nods and continues to check the shirt for tags. \"I totally lost it for a few minutes. I sorta pounded on his chest while he was trying to calm me down.\"\n\n\"What on earth did you get so upset about, Jess?\"\n\nJess goggles at her mother. \"Oh, gee, I don't know. Being madly in love - with my own brother. Wanting, and deciding, to try to make a life together, despite the fact you and daddy are almost certainly right that it's utter madness to even think about it. Little things like that.\"\n\nJon is on the cusp of blurting out, \"plus the fact we're having a baby\" but stops himself in a rare moment of awareness that total candor is not appropriate for every moment. He settles for pulling the shirt over his head and smoothing it out. \n\nThe two women turn to look at him. \"Jesus Christ, Jon,\" his mom whispers. He looks alarmed. \"What? My fly down?\" He bends. \"No, babe,\" Jess tells him softly. \"You're unbelievably beautiful.\" Jon blushes. \"Thanks but...\"\n\n\"No, sweetheart. Your sister's is right. I don't call men beautiful but you look very, very handsome. I picked the right colors or something. You look amazing. Awesome, as you kids say endlessly, but in this case, it would be an appropriate use of the word.\"\n\nHe steps to the full-length mirror on the closet door. The jeans fit perfect, hanging low on his hips. They're not skinny jeans; his mom knows better but they're slim enough to not look baggy. The shirt catches the color of his eyes, which without the long hair as a distraction, are striking. He rubs the top of his head. \"It looks funny. My head's white.\"\n\n\"You'll need to be very careful about the sun, Jon. Your scalp, unlike your body, hasn't been soaking up sun in Mexico.\"\n\nHe nods. Jess' stomach growls. \n\n\"Alright then,\" Gloria orders. \"Let's get our butts down to the restaurant.\"\n\n***\n\nJess and David hit it off immediately. It helps that it's obvious he's in love with Jon. Everyone except Jon can see that. Jess wonders how she's going to deal with the fact that everyone will keep falling in love with her brother. She doesn't mind if it's her friends, people she loves as well, but simply walking to the table she noticed, and was irritated, by all the woman, and not a few men, who openly ogled Jon. She failed to notice that an equal number of men, and women, ogled her; Jon noticed. \n\n\"Are you okay baby?\" Jon asks as Jess slips into bed. She's wearing his tee shirt as a night gown. \"Um-hmm, I'm good. A lot better,\" she snuggles up to him. \"Now that I have you to hold on to. I'm perfect.\" Her breast is warm against his arm, the thin cotton of the tee shirt does nothing to lessen the warmth of her body. \"Lie on your back, babe.\" He does as she asks. She sits on his belly, legs tuck along his sides and hips. She can feel his cock stirring against the bottom of her butt. \"I sold Travis the picture of your cock. I hope you don't mind. In a few days, after we send it to him, it'll be on the wall of their bedroom. Caitlin will be sitting on top of him, like this, and they'll be getting turned on by your cock. Just like I am.\"\n\nAll he can manage is a soft, \"mmm\". His cock rolls over his belly and with each beat of his heart begins to rise to press more firmly against her butt. \n\n\"I've been imaging what we'd do, once I got home. I know what I want to do first. I want to suck your cock. I've been dreaming of all that cum you've been building up and I want it. I want it in my mouth. I want it dripping onto my tits. That's what I want to do first. How 'bout you? What do you want to do first?\"\n\n\"Fuck you, eat my cum out of your pussy while you grind on my face.\"\n\n\"Mmm, what if you came on my tits? I suck your cock but you cum on my tits. You can lick it up and feed it to me from your mouth.\" \n\n\"Fuck, Jess. You're going to make me bust a nut just talking about it. Suck my dick, baby. Please.\"\n\n\"Hmm, love to but not here.\" Jon looks confused. Jess slides her body down his legs and then off the bed. She holds out one hand. He takes it and she leads him to the large window that looks out over the airport. Jess pulls back the sheer panel and then pulls him to her. They kiss, standing in the window, his cock pulsing against her belly, her tongue deep inside his mouth doing things that a month ago he'd not even dreamed a tongue could do. \n\nHe steps back, grabs the bottom of the tee shirt and pulls it over her head but not off. He keeps her head and arms trapped in the shirt as he bends his head and sucks a nipple into his mouth. He bites it, teeth sheathed behind his lips, and she arches her back, pressing her breast into his mouth. He pulls on the nipple, releasing it when she gasps. He stiffens his tongue and circles her nipple with the tip before sucking it back between his lips. She straddles one of his knees and begins to rub herself on his leg. Her pussy is hot and wet, so wet, against his smooth skin. He pulls away, squats and uses one hand to guide his cock to the opening of her cunt. He pushes as she lowers her body, welcoming him home. His hands go to her hips and he begins to thrust. She yanks the shirt off her head and tosses it aside. \n\n\"Don't cum, yet. Don't cum.\" \n\nJon groans but stops thrusting. His hands hold her to his body, his cock deep inside her.\n\nShe pulls herself off his cock and starts to drop to her knees. \n\n\"Hang on, baby.\" He crosses to the bed and grabs a pillow. Jess is hypnotized by the swaying of his glistening cock as he returns to her. She kneels on the pillow and greedily grabs his cock, swallowing it in one quick swoop of her head. He groans and clutches at her head with both hands. She milks his cock with her lips and tongue as she withdraws. She pulls his foreskin forward with her lips, then forces her tongue under it. She savors him. His cock has been leaking copious amounts of fluid, and to her delight, his intact foreskin has trapped a goodly portion of his nectar. His fingers, entangled in her hair and urge, not force, her forward. She deep throats his cock, loving how his fingers clench at her head. She pulls back and - does nothing. She waits, but not for long. He begins to fuck her mouth. He holds himself in check. He's insistent, not violent. She never gags, never feels she lacks the ability to pull away. He makes a point of relaxing his grip on her head, letting one hand fall to rest atop her shoulder. He wonders if anyone can see them. Jess' hands knead his ass, pulling him forward. \n\n\"Ah, fuck, baby, I'm going to cum, Jess. Fuck. Oh, Jesus your mouth is so sweet, so hot.\"\n\nShe pulls away. \"Cum on my tits, Jon. My tits and my face. I've waited a week for what you've saved for me. Give it to me, babe. Let me see.\" \n\nHis cock sprays cum that is nearly as thin as water as he begins to stroke his stiff dick. His hand jerks. His ass clenches. His hips buck forward. A series of short, barks of amazement fly from his throat to fill the room. Cum plays across her face and neck. She opens her mouth, holding her tongue out, catching random pearly ropes of cum. As the eruption of sperm slows, she takes him in her mouth, sucking and licking and stroking the last of his gift. \n\nUnlike most orgasms, this one does nothing to quench the fire in Jon's mind and body. He pulls her to her feet. He licks a long opalescent line of cum off her breast and nipple before seeking her mouth. Jess, who has yet to cum, sucks at his tongue greedily. He returns to her breasts, then her face, licking, kissing. When he's finished, he pulls the pillow over with one foot and drops to his knees. She puts one foot on the arm of the nearby chair and leans back into the corner of the window. As his head moves forward, she glances out. Their room faces the airport. Not far away stands a control tower. She wonders if anyone over there has binoculars and can see them. If so, she hopes they're on break. She doesn't want to be the cause of a mishap between two airliners. His tongue drives into her pussy, pushing all thought from her mind. Her awareness narrows to the places their bodies connect. The feel of his smooth scalp beneath her fingertips, his mouth on her cunt, his nose on her clit, his tongue pushing deep into her pussy.\n\nHe sucks her labia into his mouth. He drags his tongue up her slit, filling his mouth with her taste. He rubs his face in her pussy, pushing his nose, cheeks, chin, forehead into and over her sensitive and flowing cunt before trapping her clit between his lips. He flicks his tongue over it and she moans; a low rumble of animal satisfaction that causes his cock to begin to stir again. He wipes his hand over the head of his cock, fingers squeezing the shaft and then foreskin. He kisses the inside of her leg as he pushes his slick fingers into her pussy, two, then three, as his thumb massages the hard nubbin of her sex. He moves his hand slightly and reaches between her legs. His wet fingers rub over her asshole. There's another animal moan. \n\n\"Turn around, baby.\" \n\nShe does as he asks. He spreads her cheeks and pushes his face into her crack, smearing her butt cheeks with the juices clinging to his face. He tongues her pucker, wetting it, penetrating it and then pulls back. He urges her to turn again with his hands. She returns her foot to the chair. He puts his fingers, all of them, in her pussy, removes them and reaches between her legs. Her ass accepts his little finger without protest. Her belly tightens. He can feel her ass clench at his finger. He sees her clit twitch. He rotates his hand and pushes his first two fingers into her pussy. He rests his damp cheek on her thigh and watches as his fingers begin to fuck her. Her body moves in time with his hand. \n\nHer hand finds his head. He kisses the palm, knowing what she needs. \n\nHe pulls his fingers back, but not out, and licks her juices off the top finger on his way back to her clit. His tongue dances over her clit, flicking and caressing, before sucking it between his lips. When he feels her tense, he stops, his tongue, not his fingers. His fingers continue to fuck her ass and pussy. It's hard to get very deep with his little finger. He vows that next time he'll bring a dildo for her ass. Unbidden, an image of Travis standing behind her, fucking her ass, while he eats her pussy fills his mind. Another canvas perhaps. \n\nHer hands clamp onto his head. She gulps in a lungful of air, holds it. Her hips begin to buck. He doesn't pull away; he couldn't if he wanted to, she's holding him fast in place, but he is careful not to let her bump herself on his teeth. She stiffens and a moment later a long, and loud, wailing cry of relief fills the room. She stills, then begins to buck against his mouth again. He sucks on her clit, pushes with his fingers. Another held breath, another shudder of the body and another, softer, cry is forced from her throat. He continues to suck and flick her clit until she pushes him away and collapses against the wall. ",
        "Jon stands, scoops her into his arms and carries her to the bed. He kneels, lowers her to the bed, and curls up beside her, his cheek on her heaving chest. He strokes her lower belly, staring at it, wondering what, if anything, the little creature growing insider her had made of what had just happened to his, or her, little world. He smiled. \"Hope you had a fun roller coaster ride, little one.\"\n\n\"I did,\" Jess replied, not understanding who he was talking to.\n\nJon rolls his head to kiss the top of her breast. \"Good. Night is still young,\" he tells her with a smile. \n\n\"Mmm,\" is all she can manage.\n\n***\n\nA burst of wild, high-pitched, laughter and squeals of delight, draws Jon away from the canvas. He turns and smiles. Soon-to-be three-year-old James Travis Vandermach is standing, jumping more than standing if the truth be told, and clapping his hands as his mother, makes little jets of water erupt from her clasped hands. It's when the little jets of water connect with his chest or belly that the little boy lets out the squeals of delight. His hair is sun-bleached and his body nut brown. Jess and the little boy sit in a small wading pool that they've set up in the shade of the back garden. Sophia is enjoying her lunch break at the small table. She needs to go back to work in a few minutes, so she's not bothered to undress. Later, front doors locked for the day, she may enjoy a few clothing free moments with them before she heads home to care for her own brood. The rest of them are nude, including his parents. Gloria is bouncing Travis and Caitlin's Susanne on her knee, while her mom and Travis keep big James company. It's a small garden for such a large group and when David and his new squeeze, Zach arrive later tonight it'll be even more crowded. Jon smiles. He doesn't mind a crowd. Besides, they won't be staying with Jess, little James and him. The backroom of the store is far too small for that. They'll camp at Caitlin and Travis' place. Little James, LJ, as they've taken to calling him will want to go to Aunt Caitlin's to play with Susanne, or maybe Susanne will stay with them. Either way, it's all good.\n\nJon smiles at Jess. She smiles back and stops squirting water at their perfect son long enough to pat her protruding belly and blow him a kiss. He catches it in his free hand and turns back to the canvas.\n\nIt will be his wedding present to David and Zach. He'd better get busy.\n\nAuthor's comments:\n\nI'd like to thank those of you who have stuck it out with me and forgiven the occasional mistakes. I appreciate the thoughtful comments on how I could have done better. For those readers who might be interested, and for those who didn't like some aspects of the story but stuck with it, I offer a few details about how it evolved.\n\nFirst, it was just going to be a quick, straightforward, bit of erotica. Brother and sister get stuck sharing a room, discover they're not as hideous as each had assumed about the other, and have some, I'd hoped, hot sex. End of story. I had mostly finished another long story, \"Shooting Matt\" and I didn't want to dive into another long story, but somehow the characters overruled me. Jess and Jon seemed to have more they wanted to say.\n\nAs I've mentioned in the past, I don't outline my stories, as the occasional continuity errors demonstrate, and I had no reason to do so for this one since I planned it to be a one and done. I have no idea when or why I decided to make Jon an artist. When I first started extending the story, I intended Gloria to be the evil mom and for her and James to split up. Nope, that didn't happen. \n\nTravis and Caitlin were a total accident. As I was writing about Jon and Jess masturbating on the beach, I wanted them to get excited about the thought that someone had seen them. That was all. The rest of the Caitlin/Travis part of the story just developed. \n\nThe story took a big hit over the little interaction between Jon and Travis. I hate trying to shoehorn stories into categories. It was primarily an incest story, more than group sex and certainly more so than a \"Gay Male\" story. I'm sorry if anyone was put off but not sorry for leaving it in the Incest/Taboo category.\n\nI intended to take an author's easy way out of a dilemma by getting rid of Jon. I included a bit in the first chapter, while it was still a one and done idea, of Jon going from nerd to buff by studying martial arts. I'd just watched a show about Filipino knife fighting. Later, when the story got longer, I was going to set the family up to be kidnapped. Jon would get them out with his martial arts but die in the process. That would solve the problem of what Jon and Jess were going to do. Obviously, I let that idea go. \n\nLater, I thought about bumping him off in a car accident, even going so far as to have him tell himself not to get distracted while driving. I contemplated bumping him off on the way to the drug store for the pregnancy test but I couldn't do it. \n\nAnd, I thought about ending the story with Jess and Jon peering at the pregnancy test but not saying what it showed. That way everyone could have the ending they wanted. \n\nFinally, I do appreciate the comments suggesting that in a story in an erotic category there should be less dialogue and angst and more fucking. It's hard to argue with that. \n\nThanks for giving me some of your time the past few weeks/months. \n\nPeace,\n\nTurbidus"
    ],
    "authorname": "Turbidus",
    "tags": [
        "cum swapping",
        "cunnilingus",
        "blow job",
        "rimming"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/jess-was-a-bitch-ch-15"
}