{
    "title": "A Tale of Twin Tails Ch. 13",
    "pages": [
        "***This chapter begins a couple of days after the last chapter ends.***\n\nBrent made it home without Danny knowing he had been in town.\u00a0 After she had left her treatment, the professor went over some of the key phrases Brent could use with her, even over the phone.\u00a0 Phrases like, \"Daddy loves you\" or \"You make dad proud\" would instil mildly euphoric feelings in Danielle and would gradually lead her to seek out more substantial positive reinforcement from her father and family members. Over time, the combined effects of the escalating interactions would overcome the self destructive behavior that the professor had instilled in his patient and return Danny to a healthy state of mind.\u00a0 How long that would take was uncertain.\n\nThe professor also went over the induction technique with Brent.\u00a0 Even though he assured Brent that the likelihood of it working was less than probable, he warned that, should it work, Brent must proceed with extreme caution, lest he cause additional damage to Danny's subconscious mind.\u00a0 Brent brushed those concerns aside, and committed the induction to memory.\u00a0 He was to get Danielle alone and in a relaxed state.\u00a0 Then state to her, \"There is no time like the present to begin feeling pleasant.\"\u00a0 Brent had hurried back home with the phrase memorized and his pockets filled with stolen \"relaxation\" pills.\n\nIn the following days, Danny had called him at least twice a day.\u00a0 While her calls were brief, she actively sought out her father's compliments, just like the professor said she would. Brent quickly noticed she often guided the conversation somewhere that would make it easy for him to praise something she did that day.\u00a0 Brent saw almost immediate success when he said the phrases the Doc had recommended, but anything close worked. Danny's face would immediately light up if they were on a video chat, if not, he could tell by the lilt of her voice that she was smiling on\u00a0the other end of the line.\u00a0 All in all, so far so good, thought Brent.\n\nBack at home, Jessie remained quite shy around everyone.\u00a0 Fucking Kat, it seemed, had only made her feel all the more awkward around Becky and the rest of the family.\u00a0 Of course, one on one, she was almost entirely at ease with both Kat and Becky, who had each visited her more than once down in her bedroom.\u00a0 On the positive side, Jessie appeared to be very horny at all times.\u00a0 Being undersexed for so long tended to do that, as did being a teenager. On top of that, Jessie was a natural giver and wanted to please anyone who bothered to show her any affection.\u00a0 In exchange for getting her pussy and ass eaten repeatedly, Kat was more than willing to throw a few kisses and compliments Jessie's way.\u00a0\n\nKatie, on the other hand, seemed to have had little to no success with Jessie.\u00a0 Brent mused that it was probably because both Katie and Jessie were submissive to the more aggressive members of the household.\u00a0 Neither of them seemed willing to initiate with the other.\u00a0 So Brent would have to come up with a way to fix that.\u00a0 Katie also seemed a little bit jealous that Jessie was suddenly getting everyone's attention.\u00a0 He had a fix for that too.\n\nOne evening, he and Kat were out for a quick walk through the neighborhood.\u00a0 Brent had started finding time out of earshot to have planning sessions with Kat or Becky so that the others would not hear. Even though there was now considerably less sneaking around than before, Brent found it both fun and sometimes necessary to make individual plans with his women.\u00a0\n\nOnce out of sight of the house, Brent said, \"I've noticed that you and Jessie are hitting it off.\u00a0 Any luck getting me into the game?\"\n\n\"Hmm?\u00a0 Oh, not yet, honey,\" said Kat, who in reality had never even brought it up with Jessie as Brent well knew from his video session reviews.\u00a0 \"Things are going really well with me and her but she's just so shy.\"\n\n\"Yeah, we need to break her of that.\"\n\n\"How do you think?\"\n\n\"Well, for starters we need to get Katie in there and we need to get Jessie used to having multiple partners at the same time.\"\n\n\"She has been seeing Becky pretty heavily this week... and me too,\" Kat blushed a little at the memory of her latest romp with Jessie.\u00a0 That girl could suck the corn out of her ass any day.\n\n\"Well, why don't you take Katie down with you tonight?\"\n\n\"Just like that?\u00a0 Oh Brent, Jessie is so timid.\u00a0 I don't know.\"\n\nBrent knew that Jessie had some experience with three way sex, since he and Becky had fucked her a few weeks prior.\u00a0 In partial concession he said, \"Fine, take Becky.\u00a0 Jessie has had you both separately so just team up.\u00a0 I don't know, maybe have some fun with it.\u00a0 One of you could walk in on the other or something.\"\u00a0\n\n\"What are you going to be doing?\"\n\n\"Katie has been jealous that you guys are fawning over Jessie and ignoring her.\u00a0 I'll see what I can do, but that's why, sooner or later, we need to fully break Jessie in.\"\n\nKat sighed in mock exhaustion and smiled.\u00a0 \"Yes, dear.\"\n\n\"Plus,\" added Brent.\u00a0 \"Danny will be home in a little over a week.\u00a0 She will be here for about a month before school starts back again.\u00a0 How did you want to handle that?\"\n\nBrent had only briefly mentioned taking Danielle into the group a few times in passing.\u00a0 Kat had been hesitant at first, then noncommittal, but at least seemed open to the idea.\u00a0 Now that the date was approaching, Brent had to get Kat to make a decision.\n\nKat was silent for a long time.\u00a0 Then she said, \"Brent, our time with the twins has been, well, it's been incredible, but whenever I think about Danielle, it's just so incredibly dirty to even consider it.\u00a0 I mean, it's the definition of off-limits.\u00a0 It's wrong.\u00a0 It's taboo.\"\u00a0 She looked over at her husband of over twenty years.\u00a0 \"But dammit Brent, I just can't keep the vision of your cock sinking into our daughter's pussy out of my mind. I want to hear her moan for her daddy when you make her cum all over that cock. I mean I bet she's never even seen one that big. Imagine the look on her face when she sees it for the first time. Oh god, Brent, I think I need this as much as you.\"\n\nBrent sighed in relief.\u00a0 She had him worried for a second.\u00a0 \"Well, you are welcome to watch the real thing,\" he chuckled. \"All we have to do is make it happen.\"\n\n\"But how, Brent?\u00a0 How can we even start down that road?\u00a0 Plus, she's just been so down in the dumps lately.\"\u00a0\n\n\"When's the last time you talked to her?\"\n\n\"Last week unfortunately.\u00a0 I've been pretty busy lately.\"\u00a0\n\nBrent rolled his eyes.\u00a0 \"Yeah, I think you still have some pussy juice on your chin.\"\n\n\"Shut up, you big nasty,\" chuckled Kat.\n\n\"I talked to her last night and she seems to be coming out of the woods.\u00a0 Seems like every time I talk to her, she brightens right up.\"\n\n\"Like she has a crush on you?\" said Kat hopefully.\n\n\"Sadly, no.\u00a0 Still, she seems happier than she had been.\"\n\nKat linked her hand in Brent's.\u00a0 \"Well, we will have to find a way to get her crushing for that daddy dick, just like I do.\"\n\n\"I'm sure we will work it out, babe.\u00a0 Let's focus on Jessie for now.\u00a0 I need to get my dick wet in her so you and Becky can suck it clean.\"\n\n\"Damn, you're nasty.\"\u00a0 She squeezed his hand and added, \"That's why I love you.\"\n\nIn truth, Kat did love Brent, and his big dick.\u00a0 More and more though, she found herself craving pussy.\u00a0 Right now she coveted Jessie's shy little cunt, but the forbidden nature of fucking Danielle was what really got her motor running lately.\u00a0 Ever since Brent had suggesting seducing Danielle, Kat had begun imagining her daughter's mouth closing around her swollen pussy lips.\u00a0 Oh how she needed to look down into her daughter's eyes while Danny tasted her mom's cunt for the first time.\u00a0 Suddenly finding herself very horny, Kat tugged on Brent's hand to hurry him home.\n\n...\n\nWhen they came in, the girls were finishing up in the kitchen.\u00a0 They had been quite good at completing their chores lately.\u00a0 Brent assumed that steady doses of sex and orgasms tended to motivate them to stay in their parents' good graces.\u00a0\n\nJessie tossed her dish towel onto the counter and announced that she was heading down to do some homework.\u00a0 Everyone knew that this was her way of inviting Kat or Becky to come fuck her.\u00a0 Despite how adventurous she had become in the bedroom, Jessie was still unable to be open about herself with the family.\u00a0 She might announce that she had homework several times in an evening or get Becky and Kat to come \"help\" her separately, but if either one of them tried to kiss her in front of the others, Jessie would shy away.\u00a0\n\nSo, when Kat quietly announced, \"I think Becky and I will both come down shortly to help you, if that's OK?\"\u00a0 Kat knew she was pushing Jessie's limits.\u00a0 Like Brent said though, they needed to break though with Jessie so they could turn their sights on Danielle when the time came.\u00a0\u00a0\u00a0\n\nJessie froze midstride on her way to the stairs, when she realized what Kat had said.\u00a0 She stayed that way for more than a beat, but eventually resumed her course without saying anything.\u00a0 Her heart was hammering in her chest by the time she got downstairs.\u00a0 At the same time, Kat grabbed Becky by the hand and they headed back to Kat's room to get ready.\n\nAlone in the kitchen, Brent asked Katie what she wanted to do this evening.\u00a0 She grabbed her dad by the crotch and led him to the living room without uttering a word.\u00a0 By the time Kat and Becky came back through to head downstairs, Brent's shirt was off, his pants were open and Katie's head was bobbing on his knob.\u00a0 Brent leaned back in his recliner and gave Kat a quick kiss for good luck while Katie did her best to bury her nose in Brent's pubes with his cock deep down her throat.\u00a0\u00a0\u00a0\n\nBrent fished his burner out of his pocket while Katie went to town.\u00a0 She looked up at him and posed with his cock bulging her cheek out while Brent snapped a few photos.\u00a0 Katie pulled her mouth free and let Brent's slobbery dick rest against her lips.\u00a0\n\nShe looked up lovingly at her dad and asked, \"Don't you want to go downstairs too, daddy?\"\n\nBrent knew she was testing him.\u00a0 Despite the lusty look in Katie's eyes, he could tell she was a little down from the sudden lack of attention.\u00a0 He cupped her cheek and said in his most loving voice, \"Tonight, I just want to be alone with my baby doll.\"\n\n\"You mean that, dad?\" she asked.\u00a0 Her doe eyes searching out any hint of deception in her father's face.\n\nBrent set his burner on the small table beside his chair where his work and personal phones sat among some odds and ends.\u00a0 He reached back with both hands and ran his fingers through Katie's hair.\u00a0 His cock throbbed and danced against her cheek, leaving hot trails of Katie's spit wherever it touched her.\n\n\"Do you feel how hot and hard I am for you, Katie Bug?\" he asked quietly.\n\n\"Yeah, daddy,\" she answered while nuzzling her cheek against his pulsing shaft.\n\n\"This cock is all for you tonight, baby.\u00a0 Say, do you remember that night in this very chair?\u00a0 The night you and I first hooked up?\"\n\n\"I do,\" she said and kissed his shaft lightly.\n\n\"Mom was over there on the couch, so we couldn't go all the way.\"\n\n\"I remember.\u00a0 You still made me cum though.\"\u00a0 She kissed his shaft again, letting her lips linger a bit.\u00a0 \"You always make me cum, dad.\"\n\n\"You know I always want to make you happy, kiddo.\"\u00a0 Brent tried to guide Katie's mouth back to his cock, but she stiffened, still wanting to talk.\n\n\"Daddy, why is Jessie here?\u00a0 Aren't we supposed to be a family?\"\u00a0 Katie seemed more curious than mad, because her lips went right back to caressing Brent's shaft.\u00a0 Her eyes though remained tinged with jealousy.\n\n\"You know we talked about this.\u00a0 Jessie had a shitty family and Becky is in love with her.\u00a0 Just like you and I talked about how our love has no bounds, the same is true for Becky.\u00a0 She can love you, me, mom, Danny and Jessie all just as much.\"\u00a0 Brent ran his fingers back through Katie's thick hair.\u00a0 \"You know, you could be with Jessie too if you wanted.\u00a0 She's very cute and I have seen how she looks at you every time you get close.\u00a0 She really wants to kiss you, but she's too shy.\"\n\n\"You really think so?\"\n\nBrent nodded.\u00a0 \"Definitely.\u00a0 I mean, who wouldn't want to kiss those pretty lips of yours.\"\u00a0 Katie couldn't help but smile at her dad's flattery.\u00a0 He went on, \"And Jessie knows that what happens in our house has to stay in our house.\u00a0 She has as much to lose as we do now.\u00a0 Since her family put her out, we are all she's got.\"\n\nKatie lifted her head and kissed the tip of Brent's leaking dick.\u00a0 A drop of precum stuck to her lip when she pulled away to speak once more.\u00a0 It stretched out to a glistening trail until it snapped when she started to speak.\u00a0 \"Are you going to fuck her too, daddy?\"\n\nI already have, thought Brent while Katie licked her lips clean. \"I guess I'm not opposed to it,\" he said carefully.\u00a0 \"But family comes first.\u00a0 Always.\u00a0 I am sure I could grow to love Jessie like a daughter, but my girls are always my number one priority.\"\n\n\"And I'm your favorite?\" she asked innocently before planting a not so innocent kiss on the head of his cock.\n\nBrent gently pressed her head down before she could lift away from her slobbery kiss.\u00a0 Katie let her face be pushed down onto Brent's shaft.\u00a0 His head slipped between her lips, past her teeth, and brushed the back of her throat.\u00a0 Katie swirled her tongue around the thick shaft that barely fit between her widely stretched lips.\u00a0 Brent gave her a few encouraging nudges and Katie started bobbing her head.\u00a0 \"Oh shit, that's good, baby,\" he grunted without answering her question.\n\nJust then Brent's phone rang.\u00a0 As soon as it started chirping, he remembered that Danielle had been calling him every evening around this time ever since his visit with the professor.\u00a0 Apparently, blow jobs from loving daughters had a way of making one lose track of time.\u00a0 He thought about letting it go to voicemail, but then again, a video chat with one daughter while banging another was a temptation too hard to resist.\n\nBrent quickly said to Katie, \"It's your sister.\u00a0 Be quiet, but don't stop.\u00a0 It'll be fun.\"\n\nKatie looked up at him, doing her best to smile around a mouthful of dick, and hummed her approval.\u00a0 \"Mmm Hmm.\"\n\nBrent eased back into his chair and hit the connection.\u00a0 Danielle's pretty face popped up onto his screen with a tiny version of Brent's image down in one corner.\u00a0 He focused on keeping his expression neutral despite the magic Katie was working on his rod.\u00a0\n\n\"Hey, Danny,\" he said with a smile.\n\n\"Hi, daddy.\u00a0 I just wanted to call to tell you goodnight.\u00a0 I can't wait to get back home,\" she replied.\u00a0\n\nDanielle already looked much improved from the solemn girl that had trudged into the professor's office a few days ago.\u00a0 The color was back in her cheeks.\u00a0 Her eyes sparkled with a hint of their former cheer.\u00a0 Even better, Danielle had stopped wearing the frumpy clothes she had adopted as her daily outfit.\u00a0 Tonight it appeared she had just gotten out of the shower.\u00a0 She was laying on her bed, under covers, but Brent could see the straps and bosom of some kind of demure but alluring sleep wear.\u00a0\n\n\"We can't wait to see you in person either. You owe me a hug first thing, young lady,\" Brent added with mock sternness.\u00a0\n\n\"Yes, sir!\" Danny replied sharply with a half assed salute.\n\n\"So, anything go on today?\" he asked Danielle innocently, while Katie began lolli-popping his knob.\u00a0\n\nBrent caressed Katie's cheek while Danny started going through her day.\u00a0 Only half listening, Brent gave Danny enough verbal cues to keep her talking while he focused his attention on Katie's blowjob.\u00a0 She continued to suck wetly on his head, letting her mouth pop free occasionally and letting spit run our of her mouth onto his fat, round head, but never letting her tongue lose contact with Brent's slobbery knob.\u00a0\n\nUnable to take Katie's teasing anymore, Brent pushed her head back down a little more forcefully than before.\u00a0 \"That's really good,\" he half groaned, speaking to both girls at once, while he forced Katie's head down until her nose brushed his pubes.\n\n\"Dad,\" Danielle said, changing subjects.\u00a0 \"I know I've been a real downer lately.\u00a0 Even my friends have said so.\u00a0 I just wanted to say that I'm sorry.\"\u00a0\n\nBrent could tell his daughter was fishing for compliments.\u00a0 This was apparently how her subconscious had manifested the professor's instructions.\u00a0 He played along while grabbing a fistful of Katie's hair and guiding her into long, tip to base, mouth strokes on his throbbing hard dick.\u00a0 He said, \"You're no downer, babe.\u00a0 I love being with you.\"\n\n\"Thanks, dad.\"\u00a0 Danny snuggled down into her pillows.\u00a0 \"I think I'm finally over my breakup.\u00a0 Maybe that's what had me down.\u00a0 I don't know, but I am definitely in a better mood lately.\u00a0 Maybe I should swear off men.\"\n\nBrent kept Katie bobbing.\u00a0 Her slurps were getting a little bit noisy, but Brent was feeling bold.\u00a0 \"That would be a shame.\u00a0 I'd be all over you for a date... if I wasn't your father.\"\n\nThe comment could easily have come off as creepy, but since Danielle had been trained to seek and love Brent's compliments, her face broke into a gorgeous, blushing smile.\u00a0 \"Awe.\u00a0 That's so sweet, dad.\"\u00a0\n\nInteresting, thought Brent, maybe it's time to escalate a bit.\u00a0 He suddenly had to stop Katie so he didn't blow his load too soon.\u00a0 He asked Danny to hold on and muted the phone briefly.\u00a0 \"Strip,\" he commanded Katie before turning the mic and camera back on.\u00a0\n\nBack to Danielle he said, \"So you don't have a boy stashed in your room somewhere?\"\n\n\"No,\" said Danny and panned the camera around.\n\n\"Not under your covers?\" asked Brent slyly just as Katie finished removing her clothes.\u00a0 Brent could tell Katie was super horny by the way she had all but ripped her clothes off.\u00a0\n\nKatie lunged for his pants to get them to the floor while Brent returned his attention to his phone.\u00a0 Danielle had giggled at her dad's question and lifted her blanket up.\u00a0 She spun her phone around again and tucked it under her covers in a slow scan.\n\n\"Nothing under here, dad,\" she said as the camera panned over her body.\n\nIn the dim light, Brent could barely make out Danny's lower legs, but the good stuff was crystal clear.\u00a0 She casually panned over herself, revealing the swell of her big breasts barely hidden under the satiny cream colored material of her top.\u00a0 Brent noted that, while her nipples were not rock hard, they did appear to be slightly puffy. Very interesting, he thought, but not as interesting as her crotch.\u00a0\n\nDanny was just wearing panties, a high cut bikini type affair that looked to be pink.\u00a0 Her mound was tightly pressed against the plain but silky looking material.\u00a0 Danny had her legs casually spread, showing she had no shame in showing off her toned body or smoothly muscled legs to her dad.\u00a0 Fucking gorgeous, thought Brent...or had he said it aloud?\n\nKatie had Brent's pants all the way off now and turned away from him.\u00a0 She backed up and settled herself down onto his lap, while making sure his slobbery dick slid neatly into her dripping cunt.\u00a0 Brent kept his expression neutral but did have to let out a long sigh as his daughter's tightly stretched pussy lips swallowed the full length of his fat shaft.\u00a0\n\n\"Hmm, I wouldn't say there was nothing there, cutie pie,\" Brent flirted breathlessly.\u00a0 He braced himself to minimize the rocking motion just as Katie began to gyrate on his cock.\u00a0 \"You must live in the gym to get a body like that.\"\n\nDanny had flipped the phone back to show her blushing face.\u00a0 \"Daddy, you are so sweet.\u00a0 If my boyfriends gave me compliments like that everyday, maybe I wouldn't have kicked them all to the curb.\"\n\nHe grabbed Katie's ass with his free hand and sped her up a bit.\u00a0 Brent could hear wet fapping sounds, which told him Katie was rubbing her clit.\u00a0 Brent let his hand glide up and down Katie's back.\u00a0 Her pussy felt so good that he couldn't keep the growl out of his voice when he said to Danielle, \"If any boy didn't worship you every day, then he got what he deserved.\"",
        "\"I don't know about that, dad.\"\n\nBrent trailed his hand down Katie's back, twisting his hand until his thumb led the way into her butt crack. \"I do, baby,\" he said casually.\u00a0 Brent found Katie's crinkled hole and pressed his thumb inward.\u00a0 She moaned softly when Brent's thumb tip broke through her anal ring and began fucking its way into her ass hole.\u00a0 \"You are one of the most beautiful, caring, sexy young women that I know.\"\u00a0\n\nBrent made sure to thrust his thumb into Katie as he spoke each descriptive word into his phone.\u00a0\u00a0 Katie groaned quietly and hoped her dad was speaking as much to her as he was to her sister.\u00a0 She bent forward to give her dad better access to her ass.\u00a0 At the same time, she started bouncing her butt and pussy up and down on Brent's lap.\u00a0 Brent controlled her speed with the thumb he had now buried in Katie's butthole, but her round, muscular ass began to clap loudly against Brent anyway.\n\nShe's trying to get us busted, thought Brent.\u00a0 He began flexing his arm to ease Katie's descent speed when Danielle asked, \"What's wrong dad?\u00a0 You look like you're hurt?\"\n\nBrent quickly wiped his growing strain from his face and replaced it with a smile.\u00a0 He covered by saying, \"Nothing, babe.\u00a0 I just get mad when I think about other boys not treating you right.\"\n\nDanielle broke into a shy smile.\u00a0 \"Other boys?\u00a0 Are you a jealous dad or am I your girl now, daddy?\"\n\nHer words started Brent's balls on their unstoppable journey that began his climax.\u00a0 Brent swallowed and held his face neutral as he started to squirt his thick load into Katie's pussy. \"You know you're my girl, Danielle.\"\u00a0 He paused while a wave of pleasure rolled through him.\u00a0 He shot another thick jet into Katie and added, \"You're my best girl.\"\n\nDanielle blushed and giggled at how choked up her dad suddenly looked.\u00a0 \"I guess you better buy me some flowers then.\u00a0 I haven't gotten those in ages.\"\n\n\"That's... a crime,\" Brent managed to say.\u00a0 Katie's cunt had clamped onto his dick as she shuddered in front of him. She was milking his dick with her cunt.\u00a0 Her motions had suddenly grown more intense as she rode out her own orgasm in relative silence.\u00a0\n\n\"Are you sure you're OK, dad?\"\u00a0 asked Danielle.\u00a0 \"You're really red.\"\n\nBrent let out a deep breath and pulled his thumb out of Katie's ass.\u00a0 \"Yeah,\" he sighed.\u00a0 \"Just a little embarrassed I guess.\"\n\n\"Aww, why?\"\u00a0 she asked sweetly.\n\n\"Because, sometimes I want to kill those boys who have treated you wrong.\u00a0 I want to bust their asses because you deserve better.\u00a0 I'd like to show them a thing or two about how a man treats a woman right.\"\n\n\"Dad, you're just saying that because I'm your daughter,\" said Danny with a smile, but Brent could see she was eagerly waiting for his answer.\u00a0\n\nDamn, thought Brent, that professor did a number on her.\u00a0 Or maybe Danielle had always wanted what the rest of his girls had been getting, some of Brent's big fat dick.\u00a0 Maybe she had just been waiting for Brent to make the first move.\u00a0 There was only one way to find out, so he said, \"Nope, and when you get home, I'll prove it to you.\u00a0 I'll take you out and treat you like the princess you are.\u00a0 That way you'll know how far all these other jokers fell short.\"\n\nDanielle's face was beaming.\u00a0 Her face was blushing.\u00a0 She just nodded subtly though and said, \"It's a date.\u00a0 Goodnight, daddy.\"\n\n\"Goodnight, Danielle.\"\n\nBrent ended the call and pulled Katie back onto a hug.\u00a0 She resisted him a little, but soon melted back into his unyielding embrace.\u00a0 They stayed that way until Brent's softening cock plopped out of Katie's cunt.\u00a0 With his breath finally back to normal, Brent gave Katie a squeeze and kissed the edge of her ear with a feather light touch of his lips.\n\n\"I love you, Katie Bug.\"\n\n\"I love you too, daddy....\"\u00a0 Katie sighed softly, and, unable to keep her disappointment from showing, added, \"But I thought I was your best girl.\"\n\n\"You are,\" he whispered with a nuzzling kiss behind her ear.\n\n\"That's not what you told Danielle.\"\n\nBrent huffed lightly onto Katie's neck and planted another soft kiss.\u00a0 His hands roamed across her body until they were cupping her alabaster breasts.\u00a0 He gave them a tender squeeze.\u00a0 \"Sometimes a girl just needs to hear the right words from someone they love.\"\n\nKatie stiffened as Brent's thumbs found her nipples and pressed in on them lightly.\u00a0 \"Is that what you're doing now daddy?\u00a0 Lying to shut me up?\"\u00a0\n\nBrent let his nose and lips graze along his daughter's neck back up to the arch of her jaw.\u00a0 Katie rolled her head aside to give him better access.\u00a0 Brent obliged her with a soft bite before replying, \"It's not lying.\u00a0 It's not even as simple as flattery.\u00a0 I love you, Katie.\u00a0 I love Danny too.\"\u00a0 Brent let his right hand start to slide down along Katie's belly to her crotch.\u00a0 She did not resist. As he slipped his finger into her still dripping wet slit, he added, \"And I look forward to loving you both at the same time soon.\"\u00a0\n\n\"Daddy, you're such a perv,\" Katie said softly while opening her legs a bit wider.\n\n\"That's right, but I do love you.\"\u00a0 He found Katie's clit and began massaging it with the tip of one finger while they talked.\u00a0 His other hand cupped her breast and held Katie tight against his muscled chest.\u00a0 \"When I tell you that you're my best girl, you know it's the truth.\u00a0 You are the one I seduced first, the one who let me fuck her ass first, the one who cums for me whenever I touch you.\"\u00a0 Brent felt his daughter's hips begin to rock while his softly spoken words and his relentlessly circling finger did their work.\n\nBrent kept his finger going but dropped his other hand to Katie's thigh.\u00a0 He took it in his iron grip and lifted her leg to spread her cunt open a little more.\u00a0 He gave her neck a savage sucking before continuing.\u00a0 He raised his voice a little so she could hear him over her own growing moans.\u00a0 \"I can feel my cum all over your pussy.\u00a0 Daddy needs his best girl to do him a favor.\"\n\n\"Mwha, what daddy?\" she whimpered.\n\nBrent could tell Katie was getting close but he had no intention of letting her cum.\u00a0 He wanted her right on the edge so she would be eager to get someone to finish her off. It was time to end the shyness between Jessie and the rest of the family.\u00a0 \"I need you to go downstairs and feed my cum to Jessie.\u00a0 Make her eat it out of you.\"\n\n\"Daddy, that's so nasty,\" groaned Katie.\u00a0 \"We haven't even kissed.\"\u00a0\n\nBrent sped up his finger just a bit more and kept going until Katie began to quiver with tension.\u00a0 Then he growled, \"I'm not asking you to kiss her.\u00a0 I'm telling you to make her drink my cum from your cunt.\"\n\nThen he kissed her neck deeply while pulling his hand away from her slit.\u00a0 Katie moaned with longing at his sudden absence, but Brent finished his kiss and made her stand up.\u00a0 He gave her butt a playful swat and pointed toward the basement door.\u00a0\n\n\"Go. Make daddy proud.\"\n\n...\n\nDown in the basement, at about the same time that Danielle had called Brent on the phone, Kat and Becky stepped into Jessie's room.\u00a0 She was sitting on the edge of her bed with her legs crossed.\u00a0 The top one was bouncing nervously while she chewed her nails.\u00a0 The nervous teenager was still fully clothed.\n\nBetween Kat and Becky, they had each given Jessie more action in a week than she had seen in her entire life, but only individually.\u00a0 Already Jessie found herself thoroughly addicted to sex, which was exactly what Brent had wanted.\u00a0 The only thing holding Jessie back from being fully incorporated into the group was her persistent shyness.\u00a0 Kat and Becky meant to break her of that tonight.\u00a0\n\n\"Mind if Becky and I come in?\" asked Kat even though she and Becky had already stepped in and closed the door behind them.\n\nJessie had not answered so Becky walked over and stood in front of her.\u00a0 Becky opened her robe and let it fall to the floor.\u00a0 She was entirely naked except for an nine inch, very realistic looking strapon, which stood up proudly a few inches in front of Jessie's face.\u00a0 Jessie stared up at her girlfriend, her mouth a mildly surprised O shape.\n\nJessie was already starting to blush when Becky spoke.\u00a0 \"I know you've been fucking my mom, Jessie.\"\u00a0 She ran her fingers through Jessie's purple black hair while Kat walked over to join them.\u00a0 \"I know because I've tasted your cunt on my mom's tongue.\"\n\nJessie knew that everyone knew what was going on, but to hear it said out loud still embarrassed her.\u00a0 She flushed beet red and let her eyes fall to the floor.\u00a0 Becky let her hands fall free from Jessie's hair and turned to face her mother.\u00a0 A few seconds later, all Jessie could hear were the sounds of lips sucking and smacking together.\u00a0 She looked up.\n\nKat and Becky were lip locked, tongues probing and darting in and out of each other's mouths. Kat was lightly fondling Becky's perky breasts while Becky slid Kat's robe off of her shoulders.\u00a0 As the robe fell away, revealing Kat's sculpted, nude form, Becky let her hands glide down to her mom's ass.\u00a0 She grabbed two big handfuls and pulled Kat up against her fat dick until it was sandwiched between their bellies.\n\nThey kissed and fondled each other in front of Jessie for several long moments. Jessie stared in awe as she watched mother and daughter, both her lovers, make out in front of her for the first time.\u00a0 Then Becky broke the kiss and dropped to her knees.\u00a0 She buried her face in Kat's pussy and started noisily slurping up her mom's juices while Kat ground herself against Becky's face.\u00a0 Still Jessie remained motionless.\n\nBecky turned and smiled at her girlfriend.\u00a0 Her lips glistened with her mom's pussy dew.\u00a0 She stood and turned to Jessie, then leaned down, clearly wanting a kiss.\u00a0 Frozen, Jessie licked her lips just before Becky clamped her mouth onto Jessie's.\u00a0 She tasted Becky's lipstick and Kat's pussy at the same time.\u00a0 Becky darted her tongue into Jessie's mouth, delivering pussy juice deeper into her lover's throat.\u00a0\n\nJessie melted, savoring Kat's taste from Becky's pouty lips.\u00a0 Soon she was sucking on Becky's tongue while Becky began groping her tits and pushing her fat cock against Jessie's crotch.\u00a0 All too soon though, Becky pulled away and stood up.\n\nShe guided Kat over to stand in front of Jessie.\u00a0 \"Eat,\" Becky commanded.\n\nJessie bit her lip, still timid to perform in front of an audience.\u00a0 It was different when Brent had forced her to perform.\u00a0 There was something about him that made her want to please him, and she had pleased him, she knew.\u00a0 Jessie's pussy tingled at the memory of Brent's fat cock filling her up.\u00a0 She realized she was craving that feeling, had been craving it since the night he fed himself into her.\u00a0\n\n\"Eat!\" Becky said sternly.\u00a0 She grabbed Jessie by the hair and pulled her face into Kat's crotch.\u00a0\n\nKat's scent filled Jessie's nose, bringing her back to the moment.\u00a0 She kissed Kat's pussy lips, then darted her tongue in between them.\u00a0 She decided that she craved this too and began devouring her girlfriend's mother with long, wet swipes of her tongue.\u00a0 Kat moaned and tried to grab Jessie's head, but Becky slapped her hands away.\u00a0 She pulled Jessie's face away and kissed her again, this time letting Jessie feed her Kat's juices.\n\nBecky made Kat watch while she and Jessie made out.\u00a0 Becky took her time, slowly pushing Jessie back onto the bed until Becky lay atop her.\u00a0 Her cock pressed tight against Jessie's crotch, but she was still fully dressed.\u00a0 That didn't stop Becky.\u00a0 She tongue fucked Jessie's mouth while she dry humped her crotch.\u00a0 Her hand groped Jessie's tits through her shirt and bra, somehow finding and tweaking her nipples.\u00a0 Becky was rough, almost manly in her motions and Jessie loved it.\n\nWhen Becky felt Jessie's soft hands grab her ass, she abruptly rolled off of her and stood up.\u00a0 Just as quickly, she pushed Kat down onto the bed beside Jessie.\u00a0 The two women began making out right away, but Kat was gentler, more feminine in her movements.\u00a0 Becky stood over them, her cock standing up proudly.\n\n\"Yeah, that's fucking hot,\" Becky said gruffly.\u00a0 \"Strip her down.\"\n\n\"Yes, Ms. Johnson,\" Kat replied softly.\n\nWhile Kat worked on Jessie's buttons, Becky went on.\u00a0 \"Tonight when we fuck you, you're going to refer to Kat as your mommy.\u00a0 Is that clear?\"\n\n\"Yeah,\" said Jessie just as Kat began jerking her pants down and off.\n\nOnce they were removed, Becky said, \"Roll her over, mom.\"\n\n\"Yes, Ms. Johnson.\"\n\nKat had Jessie down to her simple looking underwear by now and did just as she was instructed. Jessie, ever docile, rolled onto her belly.\u00a0 Kat and Becky could see the dark, wet spot in the crotch of Jessie's panties.\u00a0 They smiled at each other and kissed briefly before Becky climbed onto the bed beside them.\n\nShe unhooked Jessie's bra and gave her neck a soft bite.\u00a0 \"And you're going to call me daddy.\"\n\n\"What?\" Jessie asked.\n\nBecky popped her ass with a stinging blow from her open palm.\u00a0 \"Daddy wants that ass,\" she said, letting her fingers trail between Jessie's cheeks.\n\n\"Becky, what...\"\n\nBecky's hand flew again, a quick but stinging blow.\n\n\"Damn, ow!\" complained Jessie.\n\nBut Kat, unable to help herself had already slipped her hand between Jessie's legs.\u00a0 She began vigorously fingering the younger girl through her panties, which ended Jessie's whimpering.\u00a0\n\n\"Who's fingering that cunt?\" asked Becky.\n\n\"Mmmommy,\" moaned Jessie and spread her legs.\u00a0 She began to hump herself against the bed.\n\nBecky popped Jessie's ass again.\u00a0 \"And who's spanking that ass?\"\n\n\"Uhng!\u00a0 You are... daddy,\"\u00a0 came the groaning response.\n\nShe popped Jessie's ass again for good measure, \"That's fucking right.\"\u00a0 She glided her hand along Jessie's spine up to her neck and then back down to her butt.\u00a0 Kat was still fapping away at Jessie's pussy over her underwear.\u00a0 Becky pressed her thumb against Jessie's asshole through her panties. \"And who's fucking that ass tonight?\"\n\nJessie moaned and looked over her shoulder and up at her girlfriend.\u00a0 Her hips bucked as she fucked herself against the mattress while their fingers teasing her holes. \"Daddy? Can I eat mom's ass while you fuck mine?\"\n\n\"Oh shit, please say yes,\" whispered Kat while she peeled Jessie's soaking panties down to her knees.\n\nBecky grabbed Jessie by the hips and lifted her butt into the air.\u00a0 She began fingering Jessie's asshole using the girl's own pussy juices as lubrication. Her cock slid smoothly into Jessica's dripping cunt for it too would need to be well lubed in order for Jessie's ass to handle what was coming.\u00a0 While she steadily pumped her dick in and out of Jessie, Becky said, \"Mom, get Jessie's dildo out of the drawer by the bed.\u00a0 She needs to fuck that dirty cunt of yours with it while her tongue fucks that asshole.\"\n\n\"Yes, Ms. Johnson.\u00a0 Thank you, Ms. Johnson,\" Kat tittered greedily.\n\nAs fast as lightning, Kat had retrieved the dildo and lay face down on the bed with her butt just in front of Jessie's face.\u00a0 Becky's pace in Jessie's cunt had picked up noticeably while she watched the girls get into position.\u00a0 Her middle finger was buried to the third knuckle in Jessie's asshole and she was taking it like a champ.\u00a0 Becky watched Jessie spit on the dildo, then lick it, then give up any hint of daintiness and stuff it into her mouth to get it slick.\u00a0\n\nJessie pulled the wet rubber dick out of her mouth and pushed its fat head into Kat's pussy hole.\u00a0 Kat tensed momentarily, then relaxed, letting the textured rubber dong fully penetrated her.\u00a0 Jessie only worked it in halfway, gave Kat's ass cheeks a few kisses, rubbed her butt with gentle fingers, and then paused to look over her shoulder again.\u00a0 While looking up at Becky, Jessie spread Kat's cheek with one hand until her hairless brown star was exposed.\u00a0 She was moaning quietly with each of Becky's thrusts, but she spoke clearly.\u00a0 \"Daddy, I thought you wanted to fuck my ass.\"\n\n\"Shhh,\" said Becky.\u00a0 She reached forward and turned Jessie's head back to face Kat's smooth butt cheeks.\u00a0 At the same time she pulled both her finger and her cock from Jessie's holes.\u00a0 She put the thick head firmly against Jessie's reddened star and pushed.\u00a0 Jessie groaned as her anal ring was spread into a tightly stretched circle and then pierced by the thick rubber dong.\u00a0\n\nOnce Becky had the head into her girlfriend's ass, she pushed Jessie's hips down until she was flat on the bed just like Kat.\u00a0 She let her weight fall onto Jessie and pushed her own hips forward.\u00a0 Becky's fat dick slithered in between Jessie's snowy white cheeks and quickly disappeared entirely into her butthole.\u00a0\n\nJessie gasped at the sudden fullness inside her at the exact same time that Becky forced her face down between Kat's cheeks.\u00a0 She ended up inhaling a huge whiff of Kat's musky asshole combined with that of her dripping pussy.\u00a0 Jessie groaned into Kat's crack and then sucked in another deep breath of pungent air.\u00a0 Jessie could vaguely hear Kat begging her to \"eat mommy's asshole\", but she was largely oblivious to everything beyond that intoxicating smell and the thick, thick dick filling her own bowels. She felt Becky's dick settle its full length inside of her and groaned loudly between deep sniffs of Kat's scent.\u00a0\n\nBecky's mouth pressed against Jessie's ear and she was breathing hotly into it while pushing Jessie's face further in between Kat's cheeks. \"Daddy's going to fuck you so hard, baby,\" she whispered.\u00a0\n\n\"Oh god,\" whimpered Jessie just before kissing Kat's asshole lightly.\u00a0 She licked her lips, getting a taste of her new mom's ass.\u00a0 She kissed it again, lips now parted, wet.\u00a0 Kat cooed, arching her hips and pressing herself back into Jessie's face.\u00a0 Jessie felt Becky pull her dick back a few inches before pushing back into her.\u00a0 \"Oh god,\" Jessie moaned again into Kat's asshole.\u00a0 Becky pulled out and plunged back into Jessie's ass again, this time pushing Jessie's head firmly into her mom's butt.\u00a0 All Jessie got out was a muffled moan before she locked her lips in a dirty kiss with Kat's ass.\n\nFrom there, things descended quickly.\u00a0 There was no tenderness, no lovemaking.\u00a0 There was only hard, filthy fucking. Becky worked her dick in and out of Jessie's tightly stretch butthole in ever lengthening strokes. Jessie sunk her dildo into Kat's pussy until its 9 inches were buried to the base in creamy pussy juice.\u00a0 The dildo's suction cup was all the remained visible between Jessie's quivering fingers.\u00a0 The horny teen was doing her best to make even that bit disappear inside of Kat's cunt while she plunged her tongue as deep inside of Kat's musty little ring as she could get it.\n\nJessie's muffled grunts of pleasure spurred Becky on. In no time at all Becky was long stroking her dick almost from tip to base into Jessie's quaking ass.\u00a0 Her strokes were forceful and steady, each one ending with a solid clap when Jessie's ass met Becky's hips.\u00a0 These were punctuated by moans from Jessie that disappeared up into Kat's butt.\u00a0 The entire time she was being fucked, Jessie kept her face buried between Kat's cheeks.\u00a0 Breaths were hard to come by with Becky pressing on the back of her head, but what air she could take in was filled with the aromas of her new mom's arousal.\u00a0\n\nBecky heard a deep groan come from her girlfriend.\u00a0 Though muted from Kat's ass cheeks that all but encircled Jessie's face, Becky knew an orgasm was just about to hit her lover.\u00a0 Becky kept her stroke long, deep, and hard, but picked up her speed.\u00a0 She served Jessie a long series of ramming strokes that filled her ass completely and banged her pussy against the bed.\u00a0\n\nJessie groaned again, long and soulful.\u00a0 Her free hand slapped Kat's ass while the other pumped the slippery, rubber dong as fast as she could manage it.\u00a0 This time Jessie and Kat moaned together, each tensing as their orgasms built and then released in a flood of moans and feminine juices.\u00a0 The steady claps from Becky filling Jessie's ass built to an applause as Jessie grunted in guttural bliss.",
        "\"Yeah, fucking cum on my dick, bitch,\" whispered Becky while she pounded into her lover's ass.\u00a0 \"Who's your fucking daddy?\u00a0 Huh?\u00a0\u00a0 You've got daddy's dick in your ass, you little slut.\u00a0 Fucking cum on my fat dick, you gorgeous little whore.\"\u00a0\n\nBecky's orgasm surprised her and hit her quickly just as Jessie's was fading.\u00a0 The idea that her dirty talk and role play must have really gotten to her flitted across her mind just before all conscious thought disappeared under wave after wave of pure carnal pleasure.\u00a0 She grabbed two handfuls of Jessie's ass and delivered a last few bone shaking strokes while she threw her head back and moaned up at the ceiling before the three of them collapsed into a heap. Damn, she hoped her dad was watching.\n\n...\n\nIn fact, it was Katie who had been watching at the door for the last few minutes.\u00a0 The three women on the bed were doing their best to shake it apart before they all fell together and lay in a panting pile of flesh.\u00a0 Katie had been clenching her pussy as tightly as she could but still felt rivers of pussy juice running down her legs, undoubtedly taking some of her dad's cum with it. She needed to cum soon and the sex show she had just caught the end of had not made the situation any better.\u00a0\n\nBecky was just teasing the shaft of her cock slowly out of Jessie's butt when Katie quietly padded into the room naked from head to toe.\u00a0 She surprised her sister with a wet kiss on her cheek before whispering on her ear, \"Daddy said I need to make Jessie to eat my pussy.\u00a0 Now.\"\n\nBecky smiled over shoulder and kissed her sister with her cock still half buried in Jessie.\u00a0 They made out that way for a several minutes while Becky held Jessie pinned in place, her cock tip still stretching Jessie's tiny butthole.\u00a0 Kat however wriggled herself free and turned around to watch her daughters.\u00a0 She slowly teased the dildo from her still tingling pussy while Jessie watched. Then just as slowly, pushed it back in.\u00a0 Between the\u00a0heavy buzz of her own orgasm, the cock in her ass, and the pussy play show that Kat was putting on inches from her face, Jessie had not noticed Katie's arrival.\n\nEventually, Jessie's head cleared enough for her to notice that Kat's eyes were locked on Becky.\u00a0 Jessie looked over her shoulder and got her first good look at the twins making out with each other.\u00a0 Fuck, that's hot, thought Jessie.\u00a0 Katie had Becky's tiny nipples delicately pinched between fingers and thumbs while their tongues bobbed and danced in each other's mouths. Becky's hands stayed clamped on Jessie's ass. Her cock began to inch it's way back inside of Jessie's rectum.\u00a0 Jessie had never seen anything so beautiful as the naked twins kissing deeply with their eyes locked on one another. Oh god, I want to taste those lips too, thought Jessie.\u00a0 She caught herself pushing her ass deeper onto Becky's dick.\u00a0 She didn't stop. It felt too good.\n\nJessie's groan snapped Becky back from the depths of her sister's eyes.\u00a0 Damn, she was gorgeous. I want to fuck that mouth, thought Becky before forcing her gaze back down to Jessie.\n\n\"Roll over onto your back, Jessie,\" commanded Becky. \"But keep my cock in that ass,\" she added with a light slap to Jessie's butt.\n\n\"Yes, daddy,\" Jessie said quietly. Role play still made her feel anxious, especially now that Katie was watching.\n\nKatie arched an eyebrow at Jessie's comment, but quickly figured out that Becky was just getting the new girl used to saying \"Daddy\" for when Brent took over. Katie did not much like that, not one little bit. Still, she did love her dad and knew that Becky was just doing as she was told, just as Katie was about to do what she had been told. Well she can eat my pussy for you dad, she thought, but I don't have to like it. Her dripping cunt begged to differ.\n\nKatie looked down at Jessie from the side of the bed. Becky was moving Jessie's legs around a bit to get her settled while making sure her cock never left Jessie's ass. Kat fluffed Jessie's hair and helped her lie all the way down on her back. She thought better of swooping down for a kiss after remembering where Jessie's mouth had just been. Instead, she settled back against the headboard to watch Katie crawl onto the bed near Jessie's head.\n\n\"Listen up, Jessica,\" Katie said with equal parts coldness and lust. She could not stop herself from caressing Jessie's closest breast while she spoke. \"We've never so much as kissed, and I'm not about to kiss that filthy mouth right now, but...\" She gave the little nipple grasped in her fingers a hard tug. Becky pushed Jessie's knees up to her chest and gave her ass a few warm up thrusts at the same time. They were long, deep, and slow. \"...but, watching you get fucked by my sister made me jealous...\" She gave her boob another tug. \"...and very horny.\" She climbed up to the head of the bed and knelt facing her sister. \"So I need you to eat my pussy for me while sis fucks your ass again.\"\n\n\"Um...\" Jessie looked to Becky for guidance.\n\n\"Do as Katie says,\" commanded Becky.\n\n\"OK...daddy,\" mumbled Jessie, suddenly shy and blushing once again. Her nipples had grown stiff under Katie's touch. Her pussy drooled. She had often daydreamed of this moment. She was about to be used by the twins. She sucked on her bottom lip nervously but nodded her head.\n\nThat attitude is so hot, but it won't last much longer, thought Becky with a smirk. I'll have to train her to act shy on command though. I'll bet that when she sees dad's cock again she'll get as shy as she is wet. Hmmm, that will be nice. I could use a nice cock right about now, she mused to herself before the scene playing out in front of her brought Becky back into the moment.\n\nKatie straddled Jessie's head and lowered herself down onto Jessie's face. Between the strain of holding her dad's cum inside her and how horny he had made her, Katie was literally shaking. Becky saw her sister's quivering flesh and the goosebumps dotting her flesh. Becky's own little breasts stood straight out, aching to be sucked. Not able to hold back any longer, Becky started fucking Jessie's ass again in quick, short strokes. The nub of her strapon went to work on Becky's clit, eliciting a long, low moan.\n\n\"Mmmm, fuck that is hot,\" Becky whispered as Katie's swollen pussy lips first touched Jessie's puckered mouth. \"Eat that cunt!\" she demanded.\n\n\"Ok...\" Jessie said and then sniffed deeply. \"Ok, daddy,\" Jessie breathed up into Katie's glistening lips.\n\nJessie parted her lips just as a drop of Katie's dew dripped down onto them. She licked her lips instinctively. Katie's juices were divine. Jessie groaned up into Katie's box before latching her mouth onto it in a sensual, sucking kiss.\n\n\"Oooohhhh,\" moaned Katie loudly. \"Suck my pussy dry.\"\n\nJessie plunged her tongue deep into Katie's hole.\u00a0 She was so incredibly juicy, thought Jessie.\u00a0 Copious amounts of tangy cunt cream coated Jessie's tongue and filled her throat.\u00a0 She relished the exotic taste, noting that it was both sweet, salty, and pleasantly bitter.\u00a0 She gulped it down, her head a fog of sensations ranging from the aroma of Katie's asshole bumping against her nose to the sensation of Becky's fat dick filling her ass so completely that she felt like she was about to pop.\u00a0\n\n\"Mmmmmm.\u00a0 Hmmmm. Mmmmmm,\" Jessie groaned up into Katie's wet hole before taking another big sniff of her hairless butthole. \"Mmmmmm,\" she moaned again then took another gulp of the thick cream that had just dripped into her mouth.\u00a0\n\nKatie's groan matched Jessica's, the vibrations of which tickled Katie's asshole.\u00a0 She ground herself down against Jessie's mouth and willed her cunt muscles to relax and release more of her dad's seed. She felt Jessie's tongue probing her, searching her canal for more as it dripped from her body into Jessie's.\u00a0 She was glad her dad had put so much in there.\n\n\"Ooh, that tickles,\" Katie breathed softly when Jessie's nose settled against her butthole.\u00a0 She leaned forward slightly, spreading her cheeks and letting another dollop of her dad's spunk dribble down into Jessie's hungry mouth.\u00a0 \"Fuck that's so good, Jessie.\u00a0 Eat daddy's load out of me.\u00a0 Mmmm, eat every drop.\"\n\nKat, who had been lazily fucking herself with her dildo while she watched the twins break Jessie in suddenly perked up.\u00a0 She crawled over until she was kneeling beside her daughters, Jessie on her right, Katie on her left.\u00a0 Her dildo was still buried inside her and she settled herself down until the base was flat on the bed and was pressing the dong up into her.\n\nShe leaned in to Katie and asked, \"Did you just say you had daddy's cum in you?\"\n\n\"Yes, mom.\u00a0 Mmm. Mm.\u00a0 Uh fuck, Jessie don't stop.\u00a0 She's sucking it out of me right now.\u00a0 You hear that?\u00a0 You're eating daddy's jizz.\u00a0 Oh god, don't stop.\"\n\n\"Oh, that's so nasty,\" Kat cooed.\u00a0 She took one of Katie's full tits in one hand and one of Becky's perky ones in the other.\u00a0 She squeezed and milked at them while fucking her dong filled pussy against the bed.\u00a0 Soon she was bouncing like an excited schoolgirl and quietly chanting, \"Fuck her, daddy\" over and over into Becky's ear.\n\nBecky obliged her mother and pressed Jessie's knees even tighter against her chest before delivering a barrage of ass clapping strokes that set the bed quaking.\u00a0 Becky's orgasm was quickly approaching about the same time that she felt Jessie begin to quiver beneath her.\u00a0\n\nIn fact, when Jessie heard Katie tell her what she was eating, a million vile thoughts filled Jessie's head all at once.\u00a0 Thoughts of being used as a cum dump, a pussy vacuum, an ass licker, of taking Brent's fat dick in all of her holes filled her head one after another.\u00a0 Her pussy flooded with juice at the thought of being Mr. Johnson's personal slave.\u00a0 She was in heaven.\u00a0 She was home.\u00a0\n\nJessie grunted her pleasure with each of Becky's enthusiastic, ass pounding thrusts.\u00a0 She launched her tongue as deep as she could get it into Katie, her tongue seeking out the last of Brent's jizz.\u00a0 She buried her nose into Katie's asshole, breathing as deeply as she could of the musty aroma and occasionally letting her tongue slip up and inside the dark, dirty hole.\u00a0 This elicited a high pitched squeal from Katie each time and made her fuck Jessie's face even harder.\u00a0\n\nUse me! Fucking use me, Jessie screamed inside her head over and over until the thought consumed her.\u00a0 Jessie grabbed Katie's ass, pulling her down tight against her face.\u00a0 She buried her tongue in Katie's asshole letting her fuck it a few times before diving back down and gobbling up her pussy some more.\u00a0 Katie was screaming now, grinding and bucking against Jessie as her orgasm slammed into her.\u00a0 A thick gout of spunk and Katie's pussy cream splashed down Jessie's throat and sprayed across her chest.\u00a0\n\n\"Fuck her, daddy!\" screamed Kat, who could not take her eyes off of Katie's gushing pussy.\u00a0 She had both girls' nipples trapped between her fingers and distended beyond belief.\u00a0 She threw her head back, bucking and grunting, losing all intelligible speech for several long seconds until she came with her own flood of juices which oozed down onto the bed.\n\nStill Becky's dick plunged relentlessly in and out of Jessie's ass.\u00a0 Close now, she leaned forward until Katie's full breasts were quivering and softly slapping her face. She sucked the one Kat was tweaking into her mouth and bit down gently just as Katie released another splash of cum onto Jessie's soaking wet chest.\u00a0 Becky sank her dick into Jessie to the balls and held it there.\u00a0 She wriggled herself against Jessie's butt faster and faster, letting the fire inside her clit build.\u00a0\n\n\"Oh fuck,\" Becky moaned around Katie's tit.\u00a0 Wet fapping sounds filled the room.\u00a0 The bed shook and shimmied.\u00a0 The girls were all groaning at various stages of their climaxes when Becky and Jessie came together.\u00a0 Jessie tensed and groaned. Quivering uncontrollably, she tried to buck, but was held fast by the twins.\u00a0 She settled for moaning her pleasure up into Katie's pussy.\u00a0\n\nGoing over the edge, Becky went back to pounding Jessie's ass again.\u00a0 Just a few long, hard strokes pushed Becky beyond control.\u00a0 \"Ohhhhh fuuuuuuuunnnnggggg, ng, nnng,\u00a0 nnnnnnngggg....\"\u00a0 She pumped her dick in a few more times, barely able to stay in control of herself.\u00a0 Her strap on harness was dripping with her cream.\u00a0 Her clit throbbed and pulsed inside it.\u00a0 \"Oh fuck,\" she finally groaned, her glistening face pressed against Katie's heaving tits.\u00a0\n\nEveryone stayed where they were, letting their juices flow while they basked in the afterglow.\u00a0 Becky went back to sucking Katie's titty briefly, just to let her sister know how much she loved them. Then she kissed her neck, then her mouth.\u00a0 Their tongues danced lightly while Jessie, drenched in girl cum, panted beneath them.\u00a0 Then they each kissed their mother before finally collapsing on the soiled bed.\u00a0\n\nBecky looked over to Jessie with a tired smile.\u00a0 \"No one's kissing that mouth until you've brushed those teeth.\"\n\n\"A hundred times,\" added Katie.\n\n...\n\nAfter everyone had showered and brushed their teeth, Becky invited Jessie to sleep in her bed since Jessie's had gotten so nasty. Jessie thought Becky was being so nice to her and no one objected, so she happily agreed.\u00a0 Becky was really just reinforcing the breaking of boundaries with Jessie.\u00a0 Getting her out of her room and openly sleeping with each other would prevent her from slipping back into her shell.\u00a0 The only obstacle left was Brent's dick, and Jessie had already experienced that once before. Becky knew feeding it to her again would not be difficult. Becky drifted off mid-thought with her lover spooned up tightly beside her.\n\nIn Brent's room, he and Kat had settled into bed.\u00a0 They held each other close, something they had almost gotten out of the habit of until recently.\u00a0 Kat snuggled up against Brent's warm chest and gave him a squeeze.\u00a0 They chatted about the evening's conquests as if they were just talking about any other ordinary day.\n\n\"So I guess Jessie is getting broken in nicely then?\" asked Brent.\n\n\"Oh I think so, but I might need to watch Katie fuck her another time or two.\u00a0 Brent you should have seen it.\u00a0 Hell, that was just...\"\n\n\"Raunchy?\"\n\n\"Yes, but also beautiful.\u00a0 Our girls are so gorgeous.\"\n\n\"I hadn't noticed.\"\n\nKat gave his nipple a playful tug. \"Whatever.\u00a0 And what's with getting Katie to feed her your cum like that?\u00a0 Where do you come up with this stuff?\"\n\n\"I'm a dirty old man I guess.\"\n\n\"Well don't stop, old man.\u00a0 You can tell me all about how that big load got inside your daughter if you want,\" Kat said seductively while tracing her finger around his chest.\n\n\"I would rather talk about how to get a load inside our other daughter,\" Brent replied.\n\n\"Oh? Do you have any ideas?\"\u00a0 Kat shivered, suddenly anxious, like a lover about to receive a first kiss.\n\n\"Tons.\u00a0 All dirty, all filthy,\" Brent joked and got a light slap on the chest for his trouble.\u00a0 \"Seriously though, I had a video chat with her tonight that went well.\u00a0 I've been getting a little flirty with her lately and trash talking her boyfriend.\"\u00a0\n\n\"And how is that going?\"\n\nBrent kissed his wife's forehead while he thought.\u00a0 He had no plans to tell her the truth, but he kept it as close as possible, as all lies should be.\u00a0 \"Well, he's the ex boyfriend now for starters.\"\u00a0 He kissed Kat's cheek.\u00a0 \"And she let me see her in panties\"\u00a0 He kissed her lightly on the mouth.\u00a0 \"And I'm taking her out on a date when she gets home.\"\n\n\"How did you... in her panties?\u00a0 Already?\"\u00a0 Kat was incredulous.\n\nBrent chuckled, \"The panties thing was easy.\u00a0 I just tricked her, but it shows she's relaxed around me.\u00a0 The date is similar.\u00a0 She just thinks I'm going to show her how a real man should treat her.\"\n\n\"Oh I bet you will.\"\n\n\"Yes I will,\" he said confidently.\u00a0 \"But not all at once.\u00a0 So far, I just have a foot in the door.\"\n\nKat's hand trailed down to Brent's cock.\u00a0 \"But soon you will have this in her mouth.\"\n\n\"Damn I hope so. I was on the phone with her when I fucked Katie tonight. Video chat. Once I got her to show me those panties, I couldn't stop thinking about it.\"\n\nKat felt her husband's cock begin to grow in her hand. \"Thinking about what?\" she asked, even though she knew.\n\n\"Seducing her of course. Fuck babe, her panties were so thin that I could almost see her pussy.\" Brent's dick was fully hard now. \"I can't wait to be the one peeling them off of her.\"\n\n\"What if I beat you to it?\" She squeezed Brent's fat cock playfully.\n\n\"Is that a challenge?\"\n\n\"Maybe. Why should you get to have all the fun?\" She was jacking Brent off now.\n\nBrent looked deep into his wife's eyes and gave her a soft kiss. \"First of all, didn't you get to seduce Jessie and get to fuck her I don't know how many times while I still haven't?\"\n\nKat smiled and teased, \"Good point, but sounds like you need to up your game.\"\n\n\"You were supposed to be helping.\"\n\n\"Well, I think we did everything but get your dick in her tonight. The rest is up to you. If Becky hadn't just about broken Jessie's ass, I would say go for it right now.\" She continued jacking Brent's dick. \"Anyway, you were saying?\"\n\n\"I was saying that you got to have your fun so now it's my turn. And secondly, you are going to have your hands full keeping the other girls happy while I focus on Danny.\"\n\nKat pouted, \"That's no fair.\"\n\nBrent suddenly rolled over and grabbed Kat by her thighs. He rolled her onto her belly and ripped her panties to the side before she knew what was happening. Brent plunged his dripping cock into her cunt from behind until she had taken all nine inches of him. Kat groaned at the sudden sensation of fullness.\n\nBrent leaned into her with all of his weight, pinning her chest to the bed while keeping his dick buried in her.\n\n\"Neither is getting me all horny about our daughter when you look exactly like her,\" he growled.\n\nBrent started slamming himself balls deep into his wife. She groaned with each ass slapping stroke. \"She is all I think about now. She's who I thought about when I filled Katie's box tonight. Who I'll think about when I fill yours. Oh fuck, you're wet. I'm going to fuck her little box just like this,\" Brent huffed. He slapped Kat's ass, making her yelp. \"She's my favorite little princess right now, but not for long.\" Brent savaged Kat's pussy from behind, rocking her entire body with his deep, plunging strokes. \"I'm going to fuck her cunt.\" He slapped Kat's ass again. \"I'm going fuck her mouth.\" Slap. \"I'm going fuck her tight little ass until she's addicted to this dick. Just like you.\"\n\nBrent sank his thumb into his wife's puckered hole and held it there while he fucked her. She groaned at the sudden intrusion, but it pushed her over the edge. Kat moaned her husband's name over and over until she finally screamed, \"Cum inside me, daddy!\"\n\nBrent felt her pussy clamp down on his dick. He hammered into his wife. Her pussy sucking at his cock until he finally roared with his release. \"Unngg, Danielle!\"\n\nKat and Brent collapsed together onto the bed. They kissed and teased each other while talking about all the ways Brent could get into Danielle's panties and what he would do when he did. They both agreed that Danny would be their greatest conquest and their sweetest daughter would soon be their finest little slut. Neither of them noticed when Katie quietly slipped back down the hall away from where she had been lurking in the hall.\n\n...\n\nBack in her bathroom, Katie was in tears.\u00a0 She knew that Brent wanted to fuck everyone in the house, and that would undoubtedly include Danielle, but still to hear him say those words out loud.\u00a0 She was suddenly furious with jealousy and began rummaging through her medicine cabinet.\u00a0 Yeah, she thought, I'm adopted and she's his real daughter, but he said I was his favorite.\u00a0 Her hands finally clasped around what she was looking for.\n\n\"I'm your best girl, daddy?\" she said while standing over her toilet bowl.\u00a0 She opened her clamshell of birth control pills and poured them all into the commode.\u00a0 The load Brent had filled her with tonight would not get her pregnant, but soon enough, she would show her dad how much she loved him.\u00a0 She slammed her hand down on the lever, smiling as her pills swirled around and disappeared forever.\u00a0 \"I'll show you who's your best girl, daddy.\"",
        "...\n\nThe next morning, the conversation around the breakfast table was tense and uncomfortable.\u00a0 Jessie still sat with her head slumped over her cereal while the twins chatted about their upcoming day at school.\u00a0 Becky tried to include Jessie, but Katie was clearly ignoring her.\u00a0 Both Kat and Brent noticed the building tension right away.\u00a0 For her part, Jessie appeared to be making some effort to come out of her shell, but every time she did, Katie would either dismiss her comment or say something snarky. Brent pulled her aside as soon as she finished eating.\n\n\"Katie, what's wrong with you?\u00a0 We talked about Jessie last night and we agreed that you were going to be nicer to her.\"\n\nKatie held her dad's stare.\u00a0 \"No dad, you agreed to this, not me.\u00a0 I don't like her here.\"\n\n\"That's not what mom told me last night.\"\n\nKatie flushed, remembering how Jessie's tongue felt on her clit, then inside her asshole.\u00a0 She had made her cum so hard that she squirted, and not just a few drops.\u00a0 It was a gusher. Her eyes dropped to her dad's chest.\u00a0 He was just wearing his white t-shirt and dress pants.\u00a0 He always waited to put on his dress shirt until the last minute so it stayed clean.\u00a0 His chest filled and stretched the thin material perfectly.\u00a0 Katie reached up and let a hand rest on one of his pecs.\n\n\"I liked being with you more.\"\n\n\"And none of that changes, kiddo.\"\u00a0 Brent took a deep breath and sighed.\u00a0 \"Look, if you don't want to be with Jessie, then don't, but you will be nice to her and you can't be jealous of her.\u00a0 She's family now.\u00a0 That's decided.\u00a0 Am I clear?\"\n\nKatie nodded obediently.\u00a0 \"Yes, daddy.\"\n\n\"Look, your other sister is coming home in a week for the winter break. She has no idea what's been going on here and we can't exactly spring it on her the second she walks in the door.\u00a0 It's going to take some time to see if she is even open to...what we have going on here and I can't be having to worry if you or one of the other girls are going to start fighting and let something slip.\"\n\n\"We won't, daddy,\" Kate said demurely.\n\n\"Well, I need you to show me.\u00a0 You and Jessie better play nice this week.\u00a0 When Danielle gets here, I am going to have to focus on her for a while and I need the rest of you to understand that, and I need you all to get along without freaking out Danielle.\"\n\n\"So you can fuck her?\"\n\nBrent grabbed Katie's chin and raised her face until their eyes met.\u00a0 \"So we can fuck her.\u00a0 Don't think I don't want to see her licking your wet little pussy while my cock's in your ass.\"\n\nKatie bit her bottom lip as a million dirty thoughts ran through her head.\u00a0 \"Can I feed your cum to her like I did Jessie?\"\n\n\"Til she sucks you dry,\" said Brent.\u00a0 \"But first we have to bring her around to our way of thinking.\u00a0 That might take a while and a lot of my attention. So in the meantime, I don't want to hear another word about jealousy, baby girl.\u00a0 Besides, how would you feel if you were the one left out?\"\n\n\"Not very good,\" Katie conceded.\u00a0 \"But what if she isn't into it?\"\n\n\"Let me worry about that.\u00a0 Just be patient.\"\n\n\"I will, but don't forget about Becky and me while you're busy with your new sex toy,\"\u00a0 Katie teased.\n\nBrent gave her a quick but passionate kiss.\u00a0 \"Never.\"\n\nBrent hustled to get ready after putting Katie at ease.\u00a0 He managed to get to the front door before anyone had left.\u00a0 With his coffee in one hand and his briefcase at his feet, Brent stood sentinel as his girls walked out.\u00a0 Time to break some more boundaries.\n\nAs Kat walked by, he gave her a long, wet kiss.\u00a0 The other girls were grabbing their bookbags, but did not fail to notice Brent's hand on his wife's ass, a finger planted in her crack.\u00a0 As they walked up, Kat stepped aside, clearly flustered, out of breath, and unable to hold back a smile.\u00a0 Next Brent grabbed Becky, this time putting his hand around her waist to pull her body tight to his.\u00a0 While the girls watched, Brent buried his tongue down Becky's throat.\u00a0 The kiss was brief compared to the one he gave Kat, but no less passionate, though his hand never strayed beyond her waistline.\n\nBrent handed Becky off to Kat and reached for Katie. Becky gave her mom's breasts a gentle grope while they embraced.\u00a0 Meanwhile, Brent cupped Katie's ass and pulled her tight against him.\u00a0 She clung tightly to his chest while their lips and tongues danced.\u00a0 Brent ended their kiss with a long, loving hug before passing Katie over to her mom.\u00a0 They too embraced, but only briefly because everyone wanted to see what came next.\n\nJessie, who had been watching with equal parts awe and trepidation, shouldered her bookbag and made her way toward the door.\u00a0 Brent did not block her path, but only held his hand out invitingly.\n\n\"Jessie, you are part of the family now,\" he said.\u00a0 \"We accept you for who you are and who you want to be.\u00a0 We all love each other here, as you can see.\u00a0 We want you to be a part of that. Do you?\"\n\nJessie thought back to last night, how they had fucked her senseless while making her drink Brent's load.\u00a0 She had loved it. She thought of the time Brent had forced himself on her with Becky.\u00a0 She had loved ended up that too.\u00a0 She thought of everything in between that she had done and all of the filthy things she wanted done to her.\u00a0 She was home.\n\nJessie took Brent's hand in hers and took a cautious step forward.\u00a0 Brent gave her an encouraging smile and pulled her forward as gently as he could.\u00a0 She took another step.\u00a0 She could smell Brent's cologne, see his bicep flexing lightly as he pulled her forward. He was smiling, his face filled with both warmth and desire.\u00a0 Jessie floated forward into her new father's embrace.\u00a0\n\nBrent wrapped Jessie in a warm hug that he hoped conveyed equal parts lust and acceptance if not yet actual love. He looked over at his family.\u00a0 They looked on expectantly.\u00a0\u00a0 Surprisingly, when Brent looked down, Jessie was looking up at him.\u00a0 Her eyes threatened to swallow him up.\u00a0 Her lips parted and she leaned up into Brent's hard chest.\u00a0 Now her eyes closed, but not out of shame.\u00a0 Their lips touched lightly and only briefly, but Brent felt a big wall between them come tumbling down.\n\nJessie dropped back down from her tip toes and opened her eyes.\u00a0 She made no effort to pull away.\u00a0 Still gazing up at Brent, she asked, \"Can I really be...your daughter?\"\n\n\"Absolutely.\"\n\nShe hugged Brent close again.\u00a0 Climbing back onto her tip toes, she whispered so only he could hear, \"I want you guys to love me...but...\" Her breath was suddenly just a hot nothing against his skin.\u00a0 Even with her lips almost touching him, Brent almost missed it when she said, \"I need to be used, especially by you...daddy.\"\n\nBrent gave Jessie another squeeze, letting his hand roam just below her waistline where he gave her upper ass a light pop.\u00a0 She squealed softly before giving Brent another quick peck on the lips.\u00a0 She was still anxious, Brent could tell, but another big wall had just crumbled.\u00a0 He watched and smiled while Kat grabbed Jessie around the waist and pulled her in for a quick but thorough tonguing.\u00a0 Jessie, Brent noted, got in a grope of both of Kat's tits in the process.\u00a0 She was definitely coming along.\n\n...\n\nBrent spent the day squaring away some business.\u00a0 He let Tammy, his secretary know about the impending deal, which would hopefully close in the very near future. Brent assured her that both he and her would remain employed.\u00a0 Brent would stay on as a consultant and she would remain his assistant. The new boss, he insisted, was every bit as nice as he was and twice as good looking.\u00a0 Tammy laughed and called him a liar, but he had put her mind at ease.\n\nAs Brent was going through his files, he ended up staring at the copies of the file the good doctor had made on his daughter.\u00a0 He read through them over and over, imagining how far gone she would eventually become had he not stepped in.\u00a0 Then he thought about the cabinet full of files of other kids just like Danielle.\u00a0 Now that she was safe, Brent decided he had to do something.\u00a0 He picked up the phone and dialed.\n\n\"Hey, Tommy.\u00a0 It's Brent.\"\n\n\"Hey bro.\u00a0 Everything OK with the kid?\"\n\n\"Things are looking up.\u00a0 Look, I really appreciate all you did.\"\n\n\"I should be thanking you.\"\n\n\"Why's that?\" Brent asked.\n\n\"Well, the boss said once he buys you out, he is gonna need some new upper management.\u00a0 He said you had put in the good word for me and looks like I'm about to get promoted.\"\n\n\"Good for you man, but you know I'm not going anywhere any time soon.\"\n\n\"Yeah, yeah.\u00a0 I need someone to train me anyway.\"\n\n\"Ok, here goes.\u00a0 Bring Tammy donuts and coffee every day.\u00a0 Keep her happy.\u00a0 That's it.\"\n\n\"No shit?\"\n\n\"No shit.\u00a0 So now that training is taken care of, you wanna go fuck up that weird doctor?\"\n\n\"Like beat him up?\u00a0 Won't that be pretty obvious that it's you?\"\n\n\"Fine. Be professional then,\" growled Brent.\u00a0 \"How about you figure out a way to get what he's done out in the open.\u00a0 Once the public gets their hands on him, he's done.\"\n\n\"Any ideas?\"\n\n\"Yeah, quietly start to reach out to some of the victims until you get one you can work with.\u00a0 Get them to start talking and go from there. Pretty basic, and he will pull out their non-disclosure agreement letters, but the bad press will still get him canned at least.\u00a0 Or you can get more creative.\"\n\n\"I can?\u00a0 What about you?\"\n\nBrent's mind raced back to Jessie panting \"Use me\" into his ear.\u00a0 \"Sorry pal,\" he said with a smile.\u00a0 \"I'm gonna be really tied up this week.\u00a0 Besides, I need to stay far away from this dude or I'll kill him.\u00a0 Think of it though, you take him down and you'll be famous.\"\n\n\"Famous, eh?\u00a0 Hmmm.\"\u00a0 Brent could hear Tommy's wheels turning.\u00a0 \"So I get all the credit?\"\n\n\"Hundred percent.\"\n\n\"I'll catch you at your office later then to get any paperwork you have on him and take it from there.\"\n\n\"I look forward to reading about you in the news,\" Brent said before hanging up.\u00a0 He wanted to just drive over and punch the guy's lights out, but putting Tommy on his trail with the promise of a gigantic fall was just as good.\u00a0 The dude was fucked now.\n\nBrent spent the rest of the day planning this evening's activities.\u00a0 Jessie had said she wanted to be used, so use her he would.\n\n...\n\nAfter running a few errands to get ready for tonight, Brent got home before the family and immediately took one of the E.D. pills Kat had given him.\u00a0 He didn't need it to get his dick hard, but he planned for tonight's session with the family to be one they would not forget.\u00a0 He needed them to be in line before Danielle got home so it was time to teach some hard lessons.\u00a0\n\nWith the pill down, he chose the living room couch as his base of operations this evening and set a massive array of toys and lubes on a couple of TV trays within quick reach of his easy chair.\u00a0Brent was mildly astonished at the trove of toys they had collected in so short a time.\u00a0 Between his purchases, Becky's, and Kat's, their collection now included six butt plugs in varying sizes, almost a dozen dildos ranging from an eight inch dick to a hefty twelve inch dong.\u00a0 Three strap on harnesses, each with a dong of their own took up one little table.\u00a0 A range of vibrators filled out their assortment.\u00a0 Brent went ahead and pre-lubed everything, then he tossed a cloth over them to keep them out of view for now.\n\nNext, he took today's purchases to the kitchen and got them ready before setting the little bundles in Kat's and the twins' bathrooms. He took a quick shower before putting on some dark red boxer briefs, a form fitting gray t-shirt, and some khaki shorts.\u00a0 By then he heard the front door opening, followed by the clucking chatter that could only be all of the ladies coming in at once.\u00a0\n\nAs he got closer, Brent could tell that there was some sort of dispute going on.\u00a0 Well, this will work out nicely, he thought before putting on his game face and walking into the kitchen. He saw that Kat was standing at the counter looking at two glasses of white wine on the counter.\u00a0 Brent picked up one of them and handed it to Kat.\n\n\"What's all the chatter ladies?\"\n\nKat took the offered glass.\u00a0 Wondering where the rest of the wine had gone, she asked, \"Have you been day-drinking?\"\n\n\"Not at all,\" said Brent and raised his glass to his wife. \"This is my first sip of the night.\u00a0 Cheers.\"\n\n\"Cheers, Brent.\u00a0 Where's the rest?\"\u00a0\n\n\"It's a surprise for later\" he tried to say, but Katie was talking over him.\n\n\"I know you took them, Jessie,\" she was saying.\n\n\"I heard you Katie, but I promise I didn't.\u00a0 I don't know how I can say it any other way.\"\n\n\"Yes you did!\"\n\nBrent stepped in between the girls even though he would not have minded seeing things escalate. Jessie was more upset than angry and just stood there looking flushed.\u00a0 Katie, who Brent already knew was jealous of their new housemate, took an aggressive step forward.\n\n\"Give my panties back!\"\u00a0 Katie screamed.\n\n\"I don't have th...\"\n\n\"I saw you smelling them,\" Becky chimed in.\n\n\"But you gave them...\"\n\n\"Shut up!\" Brent bellowed, cutting Jessie off.\u00a0 \"Everyone.\u00a0 Living room.\u00a0 Now.\"\u00a0\n\nBrent was loving this but kept his face neutral as his wife and the girls shuffled past him without another word.\u00a0 They settled down on the couch shoulder to shoulder.\u00a0\u00a0 Kat sipped her wine, but the other girls stared at their feet.\u00a0 Brent followed them into the room and stood before them. His shorts were starting to bulge from his pill kicking in.\u00a0\n\nHe stepped up in front of Jessie with his crotch inches from her face.\u00a0\u00a0 Right now his cock was tightly contained in his boxer briefs.\u00a0 Even so, his shorts were tented and so tight that anyone who looked could trace the outline of Brent's shaft, which was what Jessie appeared to be doing right now.\u00a0 Brent willed her to look up at him, standing silently until she did so.\u00a0 He looked down into her big doe eyes, but when he spoke, it was to everyone.\u00a0\n\n\"My daughter, your sister, is coming home in less than a week.\u00a0 What in the hell do you think she would do if she heard you girls arguing about who was sniffing each other's panties?\"\n\n\"If she wasn't so uptight, she might like it,\" Becky mumbled sarcastically.\n\n\"Can it Rebecca,\" snapped Brent.\u00a0 He took a dramatically deep breath, flexing his muscled arms while he pretended to struggle with a decision.\u00a0 Finally, he said, \"We are going to work some things out tonight ladies. I'm in charge in this house.\u00a0 I think it's time I teach you all a lesson or two so you don't fuck things up next week.\u00a0 I will be back in a few minutes.\"\u00a0 Brent stared at each one of them as he paced along the couch.\u00a0 \"Nobody better move.\u00a0 Nobody better say a word.\"\n\nBrent walked out of the room and down the hall.\u00a0 He already had everything set up in the bathrooms, but while this sudden excuse for disciplining the girls was weak, he was going to make the most of it and pretend he was getting their punishment in order right now.\u00a0 He used his few moments alone to pull out skimpy outfits for his girls and laid them on the beds before heading back to the living room.\n\n\"Twins,\" he announced.\u00a0 \"Come with me.\"\n\n\"But dad...\" started Katie.\n\n\"Not a word, I said,\" growled Brent.\n\nBecky and Katie silently stood and followed their dad to their room.\u00a0 Brent pointed to the bathroom and marched them in.\u00a0 Both girls gasped at what the saw waiting for them.\u00a0 Two silver, tear drop shaped, butt plugs sat glistening with a sheen of lube on the counter.\u00a0 Beside them were two douche bottles filled with a pale yellow liquid.\n\nBrent pointed to the bottles, which he had filled with white wine.\u00a0 \"You will squirt these up your asses and hold it until you get the plug in.\u00a0 Then go sit on your beds until I get back.\u00a0 No talking.\u00a0 No funny business.\u00a0 No spilling.\u00a0 Am I clear?\"\n\nBrent could tell both girls wanted to say something.\u00a0 Becky looked particularly dismayed, but he pretended to fume hard enough that they both simply nodded. They didn't know they were about to take wine enemas, nor did they need to know why he was having them do it.\u00a0 Soon enough though, they would find themselves drunk with relatively germ free rectums, something that Jessie would thank him for later.\n\n\"Good.\u00a0 When I get back, I'll check to make sure you did as you were told.\u00a0 Now get to it ladies.\"\n\nBrent left without waiting for them to move.\u00a0 He returned to the living room where Kat was finishing her wine. He instructed them to follow him to Kat's bathroom where he repeated his instructions.\u00a0 Kat, upon seeing the wine enemas, seemed to catch on to the general idea of what was happening.\u00a0 Always eager to play with another girl's ass, she had Jessie's pants and panties down and had her bent over the counter before Brent had even turned to leave.\u00a0\n\nHe watched Kat spit on the bulb of the douche wand and press it into Jessie's asshole.\u00a0 Jessie winced and bit her lower lip.\u00a0 She looked at herself in the mirror, then noticed Brent watching her just as Kat fed the length of the wand into her ass and squeezed a blast of cool liquid into her rectum.\u00a0 Jessie blushed but pushed her ass back toward Kat, somehow holding eye contact with Brent despite the shame she felt.\u00a0 Another gush of liquid filled her and another, until the bottle was empty and she was very full.\n\nThen the wand was gone and something much larger and very slippery was pressing on her tightly clenched asshole.\u00a0 Jessie's butt plug was made of black rubbery latex and it was quite large.\u00a0 Kat pushed it steadily in without pulling back lest the precious liquid start spraying from Jessie's ass before her body could absorb it.\u00a0 Jessie groaned, biting her lip and holding Brent's gaze, as her already full rectum accepted the four inch long, two inch wide plug.\u00a0 With her ass sealed, Jessie stood back up and finished undressing before helping Kat complete her \"butt-chug and plug\".\n\nBrent went back down the hall to the twins' room. They were each sitting on their beds naked, staring at each other.\u00a0 Brent stood them up, one by one, and carefully examined their asses to make sure their plugs were in place.\u00a0 He wriggled each one enough to let a little wine trickle out, confirming they each had an assful of booze.\n\n\"Good girls,\" he said approvingly.\u00a0 \"See how easy it is to do as your told.\u00a0 Now get dressed and go sit back on the couch.\u00a0 Katie, you will wear that little green and white plaid skirt I laid out and that white button up blouse.\u00a0 No underwear I'm afraid.\"\n\n\"Yes, daddy,\"\u00a0 she said shyly.\u00a0 Her liquid filled ass burned a bit and was making her feel hot and flushed.\n\n\"Becky,\" Brent said, turning to her, \"White thong, black tank top.\u00a0 How's that butt plug feel?\"\n\n\"You know I don't like ass stuff, dad.\"\n\n\"Oh? That's not what I heard.\"\n\n\"That was a one time thing.\"\n\n\"That you enjoyed.\"\n\nBecky flushed, suddenly hot all over.\u00a0 Fuck, her ass felt so damn full.\u00a0 She wriggled a little to relieve some pressure, but that just settled the plug a little deeper inside her ass and made her feel weak in the knees.\u00a0 Her dad had just said something else.\u00a0 Her head was swimming a little.\u00a0 What had he said?\u00a0 Did he say she would be enjoying it again soon?\u00a0 Becky caught herself tweaking her own nipple while staring at Brent's crotch.\u00a0 Then he was gone. She began to dress with trembling fingers.\n\nBrent returned to his room and gave Kat and Jessie their inspections.\u00a0 He took extra time with Jessie, repeatedly pressing in on the plug and pulling it out until a dribble of wine trickled out.\n\n\"Is this OK?\" Brent asked softly while he worked.\n\nJessie was flushed and blushing, not entirely from what was the equivalent of two glasses of wine her bowels were currently absorbing.\u00a0 \"Yes, daddy,\" she said without hesitation.\n\n\"Good,\" he said, patting her bare bottom.\u00a0 \"I'm going to fuck this ass tonight.\u00a0 Is that OK too?\"\u00a0\n\n\"Yes, daddy,\" she said again, almost eager this time.\n\n\"Then things are going to get really dirty for you, Jessica, because you deserve it.\"\u00a0 Brent slapped her ass one time and put his ear next to hers.\u00a0 \"Isn't that right you dirty little slut?\" he whispered.",
        "\"Yes, Mr. Johnson,\" came the whimpering reply.\n\n\"Good girl,\" he said and kissed her cheek.\u00a0 \"Now get dressed with mom.\u00a0 I laid out some black, thigh high stockings for you.\u00a0 Oh, and a purple ribbon for your ponytail.\u00a0 That's all you get to wear tonight I'm afraid.\"\n\n\"OK, daddy.\" Jessie's voice was slightly slurred now, more from anticipation than intoxication, but that would soon change. Two glasses of wine was not usually a big deal, but taken anally, it would hit the girls just as fast as their little asses could soak it up.\n\n\"Kat, put the rest of that pussy cat outfit on to match the cat tail sticking out of your ass.\"\n\n\"Yes, dear,\" Kat said while giving the fluffy tail attached to her butt plug a wiggle. Brent had yet to fuck Kat's ass.\u00a0 She might be thinking tonight was all fun and games, but even so, her ass was his tonight, all of their asses were.\n\n\"See you in the living room,\" he said on his way out.\u00a0\n\nWhen Kat and Jessie walked in, the twins were seated at one end of the couch.\u00a0 Brent had spun his recliner around to face the couch, which he had draped with a couple of sheets to catch any...spillage.\u00a0 He had done the same with his chair.\u00a0 He motioned for the newest arrivals to take their seats beside the other girls.\u00a0\n\n\"Becky, make me a bourbon with one ice cube please,\" Brent commanded.\n\n\"Sure, dad,\" she said.\u00a0 The alcohol flushing into her system had taken the edge off of her voice.\u00a0\n\nShe stood up and walked to the bar.\u00a0 Brent waited quietly while she worked, staring at each of his girls in turn.\u00a0 Katie, in her school girl outfit, looked delicious and actually quite relaxed.\u00a0 Jessie on the other hand, had not stopped blushing.\u00a0 She sat naked with her legs tightly crossed, arms fidgeting to cover her chest but unable to hold still.\u00a0 Probably, Brent mused, because her nipples are hard as rocks right now.\u00a0 Her skin, he noted, was also covered in goose bumps.\u00a0 Her eyes never left Brent's crotch.\u00a0 Kat too had noticed Jessie's stare and gave Brent a wink.\u00a0\n\nBecky handed Brent his drink and walked uncomfortably back to her seat, but not before Brent gave her tight little butt a playful swat.\u00a0 Brent sipped his drink.\u00a0 Savored its smoky flavor.\u00a0 Swallowed.\u00a0 He watched as his girls sat in silence, their nerves on edge but softening as the alcohol began to seize hold. Finally, Brent spoke.\n\n\"Like I said earlier, tonight we are going to settle things once and for all about how things work here.\u00a0 Rebecca, who's in charge of this house?\" Brent asked sternly.\n\n\"You are dad,\" said Becky.\u00a0 Her face was flushed, her eyes full of lust.\n\nHe repeated the question to each of them in turn and got the same answer.\u00a0 Finally, he asked Katie who was in charge.\n\n\"You are daddy,\" she answered sweetly.\n\n\"Then why are you causing problems with Jessie after I asked you not to?\"\n\n\"I didn't mean to but she stole my panties.\u00a0 At lunch, Becky said she saw her sniffing them this morning.\"\n\n\"Becky, is that true?\"\n\n\"Yes, dad.\u00a0 She slept in my bed.\u00a0 When I woke up, I saw her with them nuzzled up to her face right beside me.\"\n\n\"But...\"\u00a0 Jessie blurted before catching herself.\u00a0 Brent held up a hand, silencing her.\n\nTo Becky he said, \"Did you see her actually take Katie's panties?\"\n\nBecky was blushing now, knowing she was about to be caught.\u00a0 She cursed her dad's cameras knowing he would check if he suspected she was lying. She also knew she would be punished if she lied.\u00a0 Her pussy suddenly felt much warmer.\n\n\"Yes,\" she said defiantly anyway.\u00a0 Jessie gasped but remained silent.\n\n\"Rebecca Johnson, why would you lie about your own girlfriend?,\" Brent said after sipping his drink.\n\nTo get punished, she said to herself. Now her pussy felt as hot as her face.\u00a0 Instead Becky shrugged and said, \"I'm not technically lying, dad.\u00a0 I took Katie's panties last night and gave them to Jessie to sniff while I fingered her.\u00a0 She had said she just loved how Katie tasted and I wanted her to be happy.\u00a0 So she did take them...from me.\"\n\n\"Rebecca Johnson, you know better than to try to split hairs with me,\" Brent chided.\u00a0 \"Besides, if you want to keep your status in this house, you need to be the one solving problems, not causing them.\"\n\n\"Yes, daddy.\"\u00a0 She swallowed and licked her lips.\u00a0 \"I'm sorry, dad,\" she offered, knowing Brent would not let her off that easy.\n\n\"Come over here,\" he ordered.\n\nShe stood, suddenly light headed.\u00a0 It felt like she was floating across the floor.\u00a0 She found herself standing before her father.\u00a0 Her tiny nipples were peaked under her tightly stretched tank top.\u00a0 Her white panties were already drenched even though nothing had leaked from her plug.\u00a0 The wetter they got, the more transparent they became.\u00a0 Brent could clearly see her swollen pussy lips and when she turned to face her family, he got a perfect view of her silver butt plug ring, which was just peeping out from between her butt cheeks through the wet, tightly stretched material of her underwear.\n\n\"Apologize,\" he ordered.\n\n\"I'm sorry, dad,\" Becky said.\n\nCLAP!\n\n\"Uuung!\" screeched Becky.\n\nBrent's hand caromed off of Becky's ass cheek.\u00a0 \"To them,\" he corrected.\n\nBecky's eyes watered from the stinging blow, but she wasn't crying.\u00a0 Still, it made her apology seem more sincere when she said, \"I shouldn't have tricked you, Jessie and Katie.\u00a0 I am sorry.\"\n\n\"Good girl,\" said Brent.\u00a0 He rubbed the red hand print rising on Becky's ass.\u00a0 \"But that's just the start of your punishment.\u00a0 Take daddy's shorts down please.\"\n\n\"Yes, sir,\" she said a little sloppily.\u00a0\n\nBrent stood up as Becky knelt down.\u00a0 He ran a hand through her hair while her trembling fingers popped his button and unzipped his fly.\u00a0 She could see Brent's dick pressing up against the stretched cotton fabric of his underwear.\u00a0 She peeled his shorts down, leaving the underwear in place.\u00a0 Becky's eyes locked onto the darker red spot where Brent's head had been leaking.\u00a0 She could almost see it pulsing. Her dad looked huge.\n\n\"Good girl,\" Brent was saying as he sat back down.\u00a0 \"Now lay across my knees.\"\n\n\"But dad...?\" she protested.\n\nBrent pinched one of Becky's little nipples quite hard and pulled until she squealed.\n\n\"Ow. Ow. Ow.\u00a0 OK, OK.\"\n\n\"Lay across my knees,\" he repeated.\n\nBecky tried to position herself comfortably, but Brent maneuvered her little body easily.\u00a0 She ended up with her head dangling almost to the ground, her ass in the air across Brent's knees, and her legs draped along the floor.\u00a0 Becky's toned ass pointed right up at Brent's face.\u00a0 With her legs slightly spread, he could see her wet cunt and butt plug quite easily through the wispy material.\n\nBrent caressed Becky's ass, letting his fingers trace her smooth skin, occasionally slipping into her butt crack and down along her pussy.\u00a0 He continued his lazy caressing while he spoke, but he also began to ease Becky's panties down bit by bit with each orbit.\n\n\"Let me be clear ladies.\u00a0 In this house, I am in charge and Kat is second.\"\u00a0 He swirled a finger around Becky's pussy lips, then back up through her butt crack, pausing on her plug long enough to tease it out a little before watching it settle back home.\u00a0 \"But when it comes to the sexual pecking order, I come first, then Becky is second, followed by Kat.\"\u00a0 He eased Becky's panties down a bit more, exposing her butt plug filled anus to the open air for the first time.\u00a0 \"Is that clear?\"\n\n\"Yes, daddy,\" they said in unison, even Kat.\n\n\"So Becky, are you in charge here tonight?\" Brent asked, his thumb pressed firmly on her plug.\n\n\"No, daddy,\" she whimpered.\u00a0 Her eyes were watering.\u00a0 Her head was spinning.\u00a0 She knew they were all watching.\u00a0 Dad was about to humiliate her in front of them. She felt her pussy flood and pulse in anticipation.\n\nCLAP!\u00a0 CLAP!\u00a0\n\nBrent pounded her tanned cheek with his open palm.\u00a0 The blows rattled Becky's body and made her cry out.\u00a0 Then her dad's thumb was back on her plug again, pressing firmly while his fingers traced and smoothed her skin.\u00a0 Becky's panties came down a bit more, just barely covering the bottom of her ass.\n\nCLAP! CLAP!\n\nBrent hammered her other cheek, making tears flow from Becky's eyes to drip onto the floor.\u00a0 Then his thumb was back and her panties were being teased down past her butt, fully exposing her ass and pussy to the world.\n\n\"Becky, you took something from Katie this morning.\"\u00a0 He was lightly tracing her skin again.\u00a0 \"How would you feel if Katie took something from you?\"\n\n\"I wouldn't like it,\" she managed to say between whimpers of pain, shame, and pleasure.\n\nBrent looked up at Katie as he started teasing Becky's plug from her ass.\u00a0 He felt like he was uncorking a fine wine while he spoke.\u00a0 \"Katie, Becky stole your undies so why don't you steal her girlfriend?\"\n\nBecky sucked in a shocked breath.\u00a0 Katie looked confused, then caught on.\u00a0 Her eyes drifted over to Jessie sitting naked beside her.\u00a0 Jessie had stopped fidgeting, suddenly frozen like a baby deer caught in the open.\u00a0 A hungry look suddenly filled Katie's eyes.\n\n\"That's right,\" encouraged Brent.\u00a0 He had Becky's asshole bulging outward as the plug struggled to slip past her muscular anal ring.\u00a0 \"Katie, take Becky's girlfriend from her while she watches.\u00a0 She can't stop you. Can you Becky?\"\u00a0 Brent held Becky's plug in place, just on the edge of popping free.\u00a0 With his free hand, he slipped a finger inside Becky's pussy and found it to be filled with thick, hot pussy cream.\n\n\"Daddy, dooon't,\" she begged.\n\nBrent let her plug go and slapped Becky's ass again, rocking her body. Just as quickly, the plug was back in his grasp and distending her butthole.\n\n\"Nnnnggg!\" She both moaned and screamed.\n\n\"Can you?!\"\n\n\"Nnnooo.\u00a0 Daddy, nnnooo,\" she whimpered.\n\n\"That's right, Becky, and why is that?\"\u00a0 Brent asked slipping a second finger into his daughter.\u00a0 Pussy juice ran freely down into Brent's lap as he seesawed his fingers in and out of Becky.\n\n\"Mmm.\u00a0 Nngg.\u00a0 Because... you...nngg... you're in control,\" she moaned.\n\n\"Yes, I am,\" said Brent triumphantly.\u00a0 \"Now watch,\" he commanded.\n\nAcross the room, Katie had already taken Jessie in her arms.\u00a0 Jessie was clearly stiff and uncomfortable, holding her arms tight across her bare chest.\u00a0 Katie was gentle and persistent though, nibbling and caressing her sister's lover in all the ways a woman would love.\u00a0 Becky watched as Jessie's resistance slowly faded.\u00a0 Kate kept rubbing Jessie's arms ever so lightly, breathing hot nothings into her ear, and planting soft kisses that promised of something far more passionate up and down Jessie's cheek and neck.\u00a0\n\nSoon enough, Jessie's arms began to drop, exposing her breasts bit by bit.\u00a0 Her breathing became rapid, her face somehow more flushed. She kept glancing over at Becky, both looking for rescue and hoping not to be.\u00a0 Brent's fingers kept pumping into Becky's cunt.\u00a0 Her moans were a mixture of pleasure and dread.\u00a0 What if Jessie actually fell for Katie?\u00a0 Her ass was pulsing, aching to release her plug.\u00a0 She groaned again, eyes locked on her sister's roaming hands and lips.\n\nBy now, Katie's kisses had found their way to the corner of Jessie's mouth.\u00a0 Jessie's arms had fallen limply into her lap. Her body had turned toward Katie.\u00a0 She had even opened her legs a bit. Becky watched in dismay as Jessie turned her head toward Katie, locked eyes with her, took one final breath, and let their lips touch for the first time.\u00a0\n\nBrent watched Katie seduce the shy teen bit by bit.\u00a0 A few soft mouth kisses grew to a gentle brushing of tongues.\u00a0 Jessie looked over at Becky less and less often.\u00a0 Katie, Brent realized, was whispering things to Jessie between kisses.\u00a0 Catching bits and pieces, he realized that Katie was promising to treat the tipsy teen far better than Becky ever had.\u00a0 Soon Jessie was nodding at whatever Katie was saying.\u00a0 Her chest was heaving as Katie's light touches, words, and kisses, did their work.\u00a0\n\nBrent eased his fingers out of Becky and grabbed a thick, nine inch dick from the table beside him.\u00a0 Kat, who sat motionless through all of this, gasped when she saw the array of toys Brent had hidden beside him.\u00a0 Brent shushed her with a look and went back to watching the show, his dildo held poised to strike at just the right time.\n\n\"Watch, Becky.\u00a0 Watch Katie and fuck your girlfriend,\" Brent said so quietly no one else could hear.\n\n\"Nnnnn.\"\u00a0 Was all Becky could manage.\u00a0 Her head was swimming, her pussy on fire.\n\nThey watched Jessie's seduction together.\u00a0 Katie took the trembling girl's cheeks in each hand and pulled her forward.\u00a0 Jessie let herself be led.\u00a0 Her eyes glanced briefly over to Becky and then closed.\u00a0 Her lips parted.\u00a0 The two teenaged girls locked their mouths together.\u00a0 Their tongues slipped in and out of each other, their mouths opening wider and wider trying to take in every bit of breath and spit they could from the other.\u00a0 Katie's hands fell to Jessie's naked breasts.\u00a0 She cupped them from below, pushing them up and catching Jessie's nipples between her fingers.\u00a0 Jessie moaned, a long, deep sound that resonated in Katie's mouth.\u00a0\n\nAt just that moment, when Becky was sighing with lust and anguish at the scene she was being forced to watch, Brent gave her butt plug a final tug.\u00a0 It plopped free, releasing a little flow of unabsorbed wine.\u00a0 Becky moaned at the sudden emptiness, then groaned when she felt Brent putting it back in.\u00a0 Her groan drew out to a desperate wail as whatever was filling her ass kept going far beyond where the plug had been.\n\nBrent pushed all nine inches of the dildo into Becky's ass in one steady push.\u00a0 She wriggled and cried out but Brent kept pushing until the dong's rubber balls were settled neatly between Becky's cheeks.\n\n\"Dad, nnnnnnoooo...oh god nooo!!\" Becky wailed.\n\nBrent grabbed a fistful of Becky's hair and forced her to look back over at Jessie and Kate.\u00a0 \"Look, Becky.\u00a0 Jessie didn't even notice you screaming.\"\n\nBecky looked, and sure enough, neither Jessie nor Kate had so much as paused when Becky cried out.\u00a0 In fact, Jessie's hands were sliding up Katie's skirt while Katie milked Jessie's big tits.\u00a0 Becky watched Jessie work her finger into Kate's glistening box.\u00a0 Katie broke their kiss and whispered something to Jessie before sinking her teeth into the girl's neck.\u00a0 Jessie threw her head back, making her black and purple ponytail whip wildly.\n\n\"Yes,\" she moaned while Katie sucked her neck.\u00a0 \"Yes!\" Jessie had two fingers in Katie now and was pumping them slowly but surely deeper and deeper.\u00a0 \"Yes!\" Jessie groaned again while pulling Katie on top of her.\n\nBrent pulled Becky up by the hair until she was facing him. Tears ran down her cheeks, smearing what little makeup she wore.\u00a0 \"That's what it feels like to have something stolen from you, Becky.\u00a0 Now suck my dick!\"\n\nBrent pushed his daughter to her knees and waited.\u00a0 Obediently, she reached up and pulled his straining underwear down over his cock.\u00a0 It sprang up to full attention, his full, round balls swung free as his briefs fell to the floor.\u00a0 Becky looked back over her shoulder one more time.\u00a0 Jessie had Katie's dress up over her ass.\u00a0 Her hands were clamped on Katie's butt cheeks, spreading them wide so they could see her butt plug.\u00a0 Katie was bouncing and grinding against Jessie, who's legs were spread wide.\u00a0 Brent could just see one of Katie's hands working its magic between Jessie's legs.\u00a0 Jessie let her penetrate her without a second thought. She just wanted to be fucked now. Katie's other had Jessie's ponytail pulled tight, forcing the girl's head back.\u00a0 Katie's mouth was locked on Jessie's, but it barely stifled the drunken teen's moans of ecstasy.\n\nBecky felt Brent's hand on her cheek, forcing her to turn away from where her girlfriend was getting fucked senseless.\u00a0 Brent laid his dick against Becky's cheek.\u00a0 \"You don't get to watch your EX-girlfriend get fucked. Now suck.\"\u00a0 Becky moaned and sobbed simultaneously but obediently opened her mouth.\u00a0 He looked over at Kat as he fed his dick to his daughter.\u00a0 \"And you.\u00a0 Tonight, all you get to do is watch.\"\u00a0 He grabbed Becky's skull in his massive hands and started fucking her mouth until her gags filled the room.\u00a0 \"Am I clear, wife?\"\n\nAfter seeing what Brent had done to Becky, was currently doing to her, she simply nodded and watched the show.\u00a0 Brent would not leave her hanging all night.\u00a0 After all, she had not done anything to make him mad.\u00a0 Had she?\n\nBack on the couch, Katie had swapped her two fingers in Jessie's pussy for a thumb.\u00a0 She pumped it in and out of Jessie's tight box while using her newly freed fingers to play with the fat rubber plug sealing Jessie's ass. She locked her fingers around it and pulled lightly while her mouth dove for one of Jessie's big tits.\u00a0 She sucked the whole thing into her mouth at once, swirling her tongue in fats swipes while biting down lightly.\u00a0\n\nKatie didn't love Jessie at all, but the idea of stealing her away from Becky, even for one night, was too much to resist.\u00a0 She meant to make Jessie cum as many times as she could before their dad got to her.\u00a0 Becky was always a trouble maker, and this is what she gets, thought Katie, just before diving for Jessie's furry little cunt.\u00a0 She latched her lips onto Jessie's snatch and let her tongue seek out the fat, throbbing clit hidden in Jessie's folds.\u00a0 At the same time she pumped her thumb and curled her fingers which got the slippery butt plug gliding back and forth.\u00a0 She felt Jessie cum in her mouth right away.\u00a0 The girl bucked and screamed Katie's name.\u00a0 Good girl, thought Katie.\n\n\"Unnngg! Katie!\u00a0 Katie!\" Jessie screamed again.\n\nBecky heard it even though barely conscious.\u00a0 Brent had slipped his dick deep down her throat and had been holding it there until her eyes rolled up before letting her breathe again.\u00a0 He was on his third round of this when Jessie had her first orgasm.\u00a0\u00a0 Becky came back to reality with Brent's dick on her cheek, his balls on her panting lips.\n\n\"Sounds like Katie just hit the jackpot.\u00a0 Have you learned your lesson yet, sweetie?\"\u00a0 Brent asked while caressing Becky's sweaty face.\n\n\"Yes, daddy,\" she whimpered.\n\n\"Are you going to fuck things up for us when Danielle gets home or are you going to help keep the other girls in line?\"\n\n\"I'll help.\u00a0 I promise.\"\n\n\"You're going to do as I say?\"\n\n\"Yes, every time, daddy.\"\n\n\"OK,\" said Brent.\u00a0 He reached over to the side table and grabbed an egg vibrator, a long, slender vibrator and an eight inch dildo.\u00a0 \"Stuff this egg in your pussy on high speed, then take the others over to Katie and ask her to get Jessie ready for me.\u00a0 Once you do that, kneel beside them on the couch so I can fuck your ass.\"\n\nBecky gave a gulp that would have been audible if Jessie hadn't been moaning so loud.\u00a0 She took the offered items and waited for Brent to let her go.\u00a0 Brent looked over and saw Katie squatting on the floor with Jessie's stocking clad legs draped over her shoulders.\u00a0 Jessie's toes were curled into fists, her legs were quivering. She screamed Katie's name again as her whole body shuddered.\u00a0 Katie's dress was still pulled up, giving him a nice view of her delicious looking ass.\u00a0 Brent was going to have to pace himself, but he felt like he easily had three loads in him tonight.\u00a0 He looked down at Becky. She looked desperate to please him.\u00a0 Hopefully four, he amended.\n\nWith Jessie taking a second to cool back down, Brent let Becky go over to them.\u00a0 He watched her waddle to the couch with nine inches of dick in her ass. She bent down to speak to her sister briefly before handing her the toys and even planted a kiss on her cheek.\u00a0\u00a0 Brent could tell Becky wanted to say something to Jessie, to kiss her, but she did not.\u00a0 Instead, she obediently took her position beside them on the couch and presented her cock filled ass to Brent.\n\nHe walked up and pulled the thick dong free in a long, slow tease. The head came free with a little plop, leaving Becky's hole gaping briefly.\u00a0 Brent put the swollen, leaking head of his cock into the the gaping canal before it could close up and began to fill his daughter's ass. He took his time easing into her, enjoying her moans and shudders as the egg in her pussy did its work.",
        "While he did worked his way into Becky, Brent looked down at Jessie beside him.\u00a0 She was panting heavily already even though Katie had only just started working the dildo into Jessie's cunt.\u00a0 She looked up at him and smiled drunkenly.\n\nBrent smiled back and offered her the dildo he had just taken out of Becky's ass.\u00a0 \"Can you suck this clean for me, little slut?\"\n\n\"Hasn't it been...in her...?\"\n\n\"Ass?\u00a0 Yes, and really deep too.\u00a0 I need you to suck this clean and if you do a good job, I'll let you suck my dick after I fuck Becky's ass.\"\u00a0\n\nJessie groaned in reply and reached for the dong. Brent grabbed her hands.\u00a0 \"No.\u00a0 I'm feeding this to you just like I'll feed my dick to you later.\"\u00a0\u00a0\n\nWith that he dangled the dick, slick with lube, wine, pussy juice, and Becky's ass funk down toward Jessie's face. A drop of something dangled from the tip of the downturned dick.\u00a0 Jessie opened her mouth, eager to catch whatever it was.\u00a0 It dropped onto her tongue just before the head passed her lips.\u00a0 Brent teased the head around her mouth. Jessie showed no revulsion.\u00a0 Her tongue actually reached out, her head bobbed and she tried to suck the head into her mouth.\n\nBrent pulled it back and asked, \"Why do you want this dirty dick in your mouth, Jessie?\"\n\n\"Because I'm a dirty whore, Mr. Johnson.\"\n\n\"Yes you are.\"\n\nBrent liked that she had reverted back to calling him that.\u00a0 He fed the dong to her, watching her slurp it down as deep as she could get it.\u00a0 She wasn't able to deep throat like Becky could, but she was trying.\u00a0 Brent let her take the dick from him so he could pound Becky's ass.\u00a0 Jessie cleaned it from head to balls while Katie ate her pussy.\n\nTurning his attention back to Becky, Brent grabbed her butt cheeks and delivered her a savage ass fucking.\u00a0 His balls slapped her cunt every time his hips met her ass. Becky grunted with each rapid hit.\u00a0 Her toes curling, her breath ragged.\u00a0 Brent felt the vibrator humming deep inside her.\n\n\"Uh, uh, uh, uh, daddy, I'm...uhuhuhuh, daddy I'm....I'm....cuhuh, cuhuh, huh, uh, uh! Uh! Uh! Ccuuuhhhhhhh!\"\n\nBrent felt Becky's asshole clamp down and knew her cunt was doing the same. He hammered into her and felt his balls get soaked as they slapped into her spraying pussy.\u00a0 Her juices splashed onto the couch in a hot, creamy rain.\u00a0 Becky grunted like an animal before finally collapsing under Brent's weight.\n\nBrent pulled his dick from Becky's ass and climbed up to put it in Jessie's face.\u00a0 She dropped her dong and swallowed up the head of Brent's dirty dick.\u00a0 Brent fucked her mouth as gently as he could.\u00a0 Her mouth was so soft and tender, a sharp contrast to the dirty deed she was doing. The thought of her sucking a dick fresh from his daughter's ass was so nasty that he blew his load almost immediately.\u00a0 Brent roared and groaned, but held back as much as he could so he didn't hurt the young teen.\u00a0 He held Jessie by the hair with just his cock head in her mouth. She sucked and swallowed, sucked and swallowed jet after jet of Brent's seed only letting his cock pop free once she felt him soften slightly.\u00a0\n\nBrent staggered back to his seat to regroup.\u00a0 Becky was in a daze, face down and panting from her soaking wet place on the couch.\u00a0 Kat was sitting in a big wet spot herself, her hands tightly clenched on her thighs.\u00a0 She was clearly both very frustrated and very into watching everything going on.\u00a0 Meanwhile, Jessie was panting Katie's name over and over while Katie sucked her clit and pounded her pussy. Brent saw Kat's fingers creep to her slit while she sat mesmerized by what Katie was doing to Jessie.\u00a0 Brent understood how she felt. His own dick was already starting to inflate again.\u00a0 Still, he had told her not to touch herself and here she was disobeying.\n\n\"Becky... Becky!\u00a0 Come over here,\" he ordered from his easy chair.\n\nShe had finally caught her breath after one of the most intense orgasms she had ever had. Her dad had perfectly balanced shaming her, hurting her, and arousing her to the point that she all but blacked out.\u00a0 She had cum so hard she had ejected the vibrating egg from her pussy in a rain of pussy juice.\u00a0 She heard her father calling her and staggered to her feet.\u00a0 She up pulled her panties, which were still down around her knees, and made her way to him.\u00a0\n\nBrent pulled his daughter down into his lap, easily spinning her as he did so so that she once again faced the lesbian scene unfolding on the couch.\u00a0 Brent held her gently this time.\u00a0 One hand rested on her hip, the other played with her nipple through her flimsy tank top.\u00a0\n\n\"Are you ready to be daddy's helper again?\"\n\nAcross the room, Jessie had pulled Katie up into her lap again and was slowly unbuttoning Katie's blouse.\u00a0 Katie's immaculate ass was gyrating in tantalizingly slow circles giving the observers occasional glances of her shiny plug.\u00a0 Katie was running her fingers through Jessie's hair and planting soft kisses on her lips every few seconds.\u00a0\n\n\"Yes, daddy,\" Becky said without taking her eyes off of Jessie.\n\n\"You'll get her back,\" Brent assured her.\u00a0 \"I just hope you've learned your lesson.\"\n\n\"I have.\u00a0 I promise.\"\n\n\"Good girl.\u00a0 So if I want your little ass, what will you say?\"\n\n\"I would say, yes please, daddy.\"\n\n\"Good. Maybe tomorrow night then.\u00a0 In front of everyone.\"\n\nBecky bit her lip and nodded.\n\nBrent continued, \"Now, are you going to cause problems for me or solve problems?\"\n\n\"Solve them, sir.\"\n\nBrent ran his hands up under Becky's tank top and cupped her little boobies. She purred and stretched, slowly coming back to her old self.\u00a0 Across the way, Jessie was opening Katie's shirt to reveal her large, perfectly shaped, alabaster orbs.\u00a0 Jessie caressed one lightly, almost reverently.\u00a0\u00a0 Katie groaned into Jessie's ear and told her not to stop.\u00a0\n\nBrent watched Jessie lean in and begin lightly sucking on Katie's nipple. To Becky, he said, \"I need you to go take control of your mother. She's touching herself when I told her not to.\u00a0 Take Jessie's ribbon and tie her hands behind her back.\u00a0 Then please her or punish her as you see fit until I'm ready for her.\u00a0 She is not to cum.\"\n\n\"Yes, daddy,\" Becky said and immediately set to action.\u00a0\n\nShe walked up behind Katie and slapped her ass hard.\u00a0 Katie yelped and looked up at her sister, \"Daddy said she's mine tonight, Becky.\"\n\nBecky leaned down and kissed her sister on the cheek.\u00a0 \"Just make sure you treat my girlfriend right.\"\u00a0 She looked into Jessie's eyes and added, \"Because I love her.\"\n\nJessie pulled her lips from Katie's nipple and started to say something but Katie pressed her head back down to her breast.\u00a0 Jessie closed her eyes and went back to softly suckling while Katie gyrated in her lap.\n\n\"Mmm, that feels so nice, Jessie.\u00a0 I promise I'll take good care of her, sis, all night long,\" Katie said suggestively.\u00a0\n\n\"Well you better,\" Becky said with as much bravado as she could muster while reaching over to pull on Jessie's hair bow.\n\nThe silky purple ribbon came loose easily, letting Jessica's dark hair cascade over her shoulder.\u00a0 Jessie looked up at her girlfriend briefly before sighing into Katie's heaving breast and letting her eyes drop to meet Katie's.\u00a0 Jessie sucked in more of Katie's breast, suckling hard enough to draw milk if Katie had been lactating. Katie cooed, whispering that Jessie was a good girl while pressing Jessie's head tighter to her chest.\u00a0 Becky walked away to deal with their mother while the two girls made out and stared deeply into each other's eyes.\n\nBrent, now almost hard again stood and walked up behind Katie.\u00a0 He gathered her hair into a ponytail, which he held in one hand, and bent to speak into her perfect little ear.\u00a0\n\n\"Are you having fun, Katie Bug?\" He asked softly.\n\n\"Yes, daddy.\u00a0 Are you joining us?\"\n\n\"After we talk.\"\u00a0 He kissed her earlobe and went on.\u00a0 \"You have been very jealous lately even though I have asked you not to be.\"\u00a0 He pulled on Katie's ponytail firmly but not unkindly until her head tilted back.\u00a0 \"What's more fun, Katie, sulking in the corner or being in on the action?\"\n\nJessie turned her attention to Katie's other nipple.\u00a0 She was savoring, almost worshipping every inch of Katie's body that her mouth and hands touched.\u00a0 Katie, who loved being worshipped, was in heaven, so she said, \"This is much better, daddy.\"\n\n\"So you won't be jealous any more?\"\n\n\"No, dad.\u00a0 Mmm. Oh Jessie, don't stop.\"\n\nJessie, Brent noticed, had two big handfuls of Katie's ass and was making her hump Jessie's thigh while she sucked on Kate's tit.\u00a0 All of Jessie's motions were slow and delicate.\u00a0 She was savoring each little touch and every motion of Katie's smooth, curvy body.\n\n\"What if I take Jessie from you right now and fuck her?\u00a0 Would you be jealous?\"\n\n\"Yes,\" she admitted.\u00a0 \"But I wouldn't pout about it.\u00a0 I would join in.\"\n\n\"What if I don't let you?\"\u00a0 Brent was pulling harder on Katie's ponytail now.\u00a0 Her head was pulled almost straight back.\u00a0\n\n\"Why would you do that?\" she asked, now able to look straight up at him.\n\nBrent jerked her head back firmly with one hand and began to spank her with the other.\u00a0 His blows were so hard they shook Katie's ass with each impact.\u00a0 He used each blow to emphasize his words.\n\n\"Because\" -smack- \"I'm\" -smack- \"in fucking\" -smack- \"charge\" -smack- \"of this\" -smack- \"family!\"\n\nKatie gasped at the flurry of stinging blows.\u00a0 Like her sister, tears came to her eyes, but Brent noticed she had not stopped grinding on Jessie's leg.\u00a0 If anything, her pace had just picked up.\u00a0 Brent held her head firmly by the hair and stared down at her.\u00a0 More calmly, he said, \"Am I clear.\"\n\n\"Yes....yes, sir,\" she whimpered.\n\n\"Good.\u00a0 Has Jessie made you cum yet?\" Brent asked, settling his fingers around Katie's butt plug.\u00a0\n\nBeside him, he saw that Becky had Kat's hands tied behind her back and had her bent over the back of the couch.\u00a0 She was currently fucking the furry cat tail butt plug in and out of Kat's ass as fast as she could. It looked painful.\u00a0 Kat was begging Ms. Johnson to stop. Both Brent and Becky ignored her pleas.\n\n\"Not yet, daddy,\" whimpered Katie.\n\n\"Should I let you?\"\n\n\"Oh daddy, please.\u00a0 I'm sorry.\u00a0 I won't be jealous anymore.\"\n\n\"Well you won't be getting any dick tonight as punishment, but I think I'll let you cum.\"\u00a0 Katie started to protest but he cut her off.\u00a0 \"Quiet.\u00a0 That's final.\u00a0 Now stand up on the couch.\"\n\nReluctantly, Katie separated herself from Jessie's delicate embrace and stood up straddling Jessie with a foot on each couch cushion.\u00a0\n\n\"Face me,\" ordered Brent.\u00a0 Katie obeyed.\u00a0 Jessie looked up into Katie's pussy and ass from below.\u00a0 \"Look down,\" Brent ordered and Katie obeyed.\u00a0 Brent knelt on the floor between Jessie's legs and dipped down to Jessie's cunt.\u00a0 \"Watch,\" he commanded before he sunk his tongue into Jessie's slit.\n\nKatie stood there watching her dad slurp up Jessie's pussy juice which was oozing from her cunt.\u00a0 Jessie groaned and wriggled, grabbing Brent's head so she could hump his mouth.\u00a0 Brent got her worked up but didn't let her cum.\u00a0 He ran his tongue along her clit a few more times and sat up.\u00a0 His dick was rock hard.\n\n\"Keep watching.\"\n\nBrent gave Jessie's butt plug a few playful tugs before easing the thick black phallus from her ass.\u00a0 His finger massaged her clit the entire time he worked, just keeping her near the edge but never letting her get too close.\u00a0 When the plug plopped free, he pushed it into Jessie's mouth.\n\n\"Clean it, dirty girl.\"\n\nJessie sucked it like a pacifier.\u00a0 Brent glanced over at Becky.\u00a0 Kat was still bent over the couch while Becky worked the fat twelve inch dick into her cunt.\u00a0 Kat was groaning as she struggled to accept the massive girth.\u00a0 After she took a few inches Becky would give her mom a break, but used the pause to wickedly slap her ass and thighs.\u00a0 The cat tail poked up into the air from her ass, so Becky slapped that too.\n\nGroaning, Kat looked over her shoulder at Brent.\u00a0 \"Why are you punishing me, Brent?\"\n\nHe stared at her coldly and simply said, \"You know why.\"\n\nAfter dismissing his wife, Brent turned back to Jessie and Katie and placed the crown of his fat cock against Jessie's gaping star.\u00a0 He was very gentle with her as he worked his thick round head through her tight little sphincter.\u00a0 Brent liked abusing Jessie because he knew she liked it, but he also knew she needed to feel loved.\u00a0 So he pressed forward as tenderly as he could, savoring the feel of her tightly stretched ring of muscle while he steadily penetrated it.\u00a0\n\nJessie groaned around her dirty pacifier.\u00a0 She stared up at Katie's dripping cunt just a few inches above her head.\u00a0 A sprinkling of pussy juice dripped onto Jessie's upturned face.\u00a0 Brent asked her if he was hurting her.\u00a0 She saw the compassion in his eyes despite the dirty deed he was doing to her. She shook her head no, so Brent pushed a little deeper.\u00a0 His head popped through and into her rectum with a soft blurp.\u00a0 Jessie sighed around her rubber gag. Take me, use me up, daddy, she thought.\n\n\"Mmm,\" Brent groaned.\u00a0 He reached for the plug in Jessie's mouth and pulled it out. \"Now you pull Katie's plug, Jessie.\"\u00a0 He worked his dick a little deeper.\n\n\"Katie, I'm sorry I spanked you so hard, but you deserved it,\" Brent said without looking up.\n\nWith trembling hands, Jessie reached up and popped out Katie's butt plug.\u00a0 A small shower of dirty wine dribbled onto her face.\u00a0 A little went into her mouth, but she didn't mind.\u00a0 She was Brent's...no, her dad's slut now, her new family's play thing, here to do as she was told.\u00a0 She felt Brent feed more of himself into her ass.\u00a0 Damn, he felt huge inside her.\u00a0 His fingers traced her clit lightly.\u00a0 Jessie shuddered in anticipation of the abuse she knew her ass was about to take. If her real parents were to see her like this, they would die of shame on the spot.\u00a0 The thought got her even wetter.\n\n\"I know I did, dad.\u00a0 I really am sorry,\" Katie was saying.\n\n\"I know you are, Katie Bug.\u00a0 Why don't you sit on Jessie's face, Katie so she can eat your ass while I eat your cunt.\"\n\n\"Really, dad?\"\n\nBrent nodded and settled himself all the way into Jessie, while both girls hurried to obey their dad's orders.\u00a0 Jessie wrapped her legs around Brent's waist and cupped Katie's ass with her hands to help her lower herself.\u00a0 Katie reached back and held on to the back of the couch for support.\u00a0 This thrust her pussy forward and gave her dad easy access to it from where he knelt on the floor.\u00a0\n\nBrent watched Katie drop her butt onto Jessie's upturned face.\u00a0 Jessie guided Katie in and put her tongue out once Katie was close enough.\u00a0 With perfect aim, Jessie slid her tongue directly up and into Katie's asshole as far as she could get it.\u00a0 Katie moaned at the warm, slippery sensation and wiggled gently.\u00a0 Brent watched Jessie work while he got his dick moving.\u00a0 Slow and easy, he made love to Jessie's asshole while his fingers teased her clit. Occasionally he pumped them into her pussy for a few probing strokes.\u00a0 Whenever she got close to cumming, Brent would stop to let Jessie cool down.\n\nBefore diving in on Katie's muff, Brent checked on Becky.\u00a0 She had Kat seated on the couch again and Becky was licking her clit while banging her box with the twelve inch dick.\u00a0 Brent could tell Kat was close to cumming, but just before he could warn Becky not to let her, Becky sat up and slapped Kat's tits as hard as she could.\n\n\"Aaaagh, why!?\" Kat screamed.\n\n\"You know why this is happening, mom.\u00a0 And so does daddy,\" she said each time she slapped her.\u00a0 Then she dove back down and started eating her again.\n\nTaking Becky's cue, Brent leaned forward and wrapped his lips around Katie's mound.\u00a0 Her slit and lips were warm, juicy, and delicious.\u00a0 He drove his tongue into her, fucking her pussy with his mouth.\u00a0 Kate's closely shaved fuzz reminded Brent of a ripe peach.\u00a0 Just as he was doing with Jessie, whenever Brent sensed Katie getting close, he stopped for a moment to bring her back down.\u00a0 He kept both teens on edge this way for almost half an hour.\u00a0 The only thing that never stopped was the slow, steady deep-dicking he was giving Jessie's ass.\u00a0\n\nEventually, Brent felt his load finally building beyond control.\u00a0 He was covered in sweat as was Katie.\u00a0 She was quivering from the strain of holding herself up combined with the two relentless, teasing tongues stroking her holes. Katie had been babbling senselessly for the past few minutes, begging her dad to let her cum and demanding that Jessie get deeper into her ass.\u00a0 Jessie obliged her each time, somehow licking, sucking, and working her face deeper into Katie's perfect ass.\u00a0 Jessie had also gotten herself into a rhythm with Brent.\u00a0 She rolled her hips with each of his strokes, which had steadily gotten longer, harder, and faster.\u00a0 Her moans were muffled by Katie's ass, which was lightly bouncing on her face, but they were no less demanding than those of the girl riding her.\n\nBrent found his daughter's clit with his tongue and began to tickle it with the tip.\u00a0 He let his head relax so he could bob perfectly in sync with her rocking hips.\u00a0 He kept his mouth sealed over Katie's pussy and added a deep hum that vibrated her throbbing nub while he licked and sucked. His thumb found Jessie's engorged clit and started a final round of massaging.\u00a0 Tiny circles, gentle strokes, faster and faster he went without ever breaking rhythm.\n\nBoth girls sensed Brent's eagerness and desperately hoped he would finally allow them to cum.\u00a0 Jessie felt Brent's cock somehow swelling even more inside her.\u00a0 Her ass was raw from the reaming he was putting into her tightly stretched hole.\u00a0 She had asked him to use her and Brent was not disappointing.\u00a0 Jessie groaned up into Katie's musky asshole when she felt Brent begin to really pound her.\u00a0 He had been so gentle at first but as his climax approached, he had left all tenderness far behind.\u00a0\n\nSheathed in sweat that ran in rivers down her tits and flat belly, Katie was babbling to her daddy, \"Please let me cum! Please let me cum!\u00a0 I'm your bitch, daddy.\u00a0 I'm your fucking slut, oh fuck, ohfuckohfuck oh fuckingletmecum!\"\n\nKatie was quaking, her whole body vibrating except for her hips.\u00a0 They kept rocking in time with Brent and Jessie's licks and sucks.\u00a0 Both of their mouths slurped and slopped and swallowed down Katie's juices while she fucked their mouths.\u00a0 Katie's babbling continued, her pitch rising higher and higher.\n\n\"Daddy, daddy daddydaddy pleasedaddy,\" she squealed.\n\nBrent's finger danced across Jessie's clit.\u00a0 It throbbed under his touch.\u00a0 He hammered the little teen's ass.\u00a0 Jessie's legs lost their grip around Brent and flopped around loosely.\u00a0 She was screaming up into Katie's asshole now.\u00a0 Still Brent pounded away as hard as he could while his fingers danced. Brent groaned into Katie's cunt.\u00a0 He began to grunt with each stroke of his dick as his climax arrived.\u00a0\u00a0 The vibrations drove Katie over the edge.\u00a0 Her thighs locked around Brent's head.\u00a0\n\n\"Daddydaddy ohmygod ohmygod! Ohhhhh my fucking, my fuck, my ffffffffnnnnngggg!\"\n\nKatie's words devolved into a high pitched moan.\u00a0 Her body shuddered.\u00a0 Brent felt a tidal wave of thick, tangy pussy cream blast into his mouth and all over his chin.\u00a0 It cascaded down his face and splashed Jessie's neck and tits.\n\nBeneath him Jessie's scream rose to match Katie's.\u00a0 Though muffled by Katie's ass, it was no less intense.\u00a0 She bucked and quivered and curled her toes while Brent delivered several more bone shaking strokes that clapped loudly against Jessie's butt.\u00a0 He felt his load coming and pushed his dick deep.\u00a0 He pulled out and went deep again, then again, then again.\u00a0 Brent's groan of release became a deep hum that sent Katie's screams of ecstasy to new heights.\u00a0\n\nCum erupted from Brent's buried dick, filling Jessie's bowels with four thick spurts of his creamy hot seed.\u00a0 Jessie felt him filling her and came again on the spot just from the thought of what an incredibly dirty deed Brent was doing in her ass.\u00a0 She slurped up pussy juice pouring down from Katie's crack.\u00a0 Her tongue was raw, her jaw aching, her ass most likely destroyed.\u00a0 Brent's fingers, at least two of them, were now in her pussy, pounding it as hard as he could while he dumped the last of his seed into her.\u00a0 Jessie groaned and slurped, and came again.",
        "Finally, it was over.\u00a0 Katie was clearly about to collapse so Brent helped her fall to the side without hurting Jessie.\u00a0 He looked down at the mess of a girl beneath him.\u00a0 Her face was a wreck of spit, pussy juice, and assy wine.\u00a0 Her lips were flushed and swollen, her chest covered in sweat and pussy rain. Her ass gaped, red and raw from where Brent had just pulled his deflating cock. Jessie, Brent decided, had been well used tonight.\u00a0 He patted her glistening ass lightly and told her she was good girl.\u00a0\n\nBeside them, Becky was riding her mom's face, intentionally suffocating her with her pussy for a minute at a time before letting her take a breath. Becky used the shirt break to dive down and lick her mother's box.\u00a0 Kat's face was coated in juice.\u00a0 Becky must have cum a couple of times by now from the looks of it, thought Brent. Kat had long since stopped begging for Becky to stop.\u00a0 She simply groaned on the edge of agony or of cumming without being able to succumb to either fate.\n\nBrent wiped his mouth with the back of his hand and spoke.\u00a0 \"Becky, that's enough.\"\n\nShe looked over at him with a tired smile.\u00a0 Her face was a sheen of sweat.\u00a0 \"I haven't let her cum even once,\" she panted.\n\n\"Good girl.\u00a0 Take mom to my room please.\u00a0 Leave her tied up.\"\n\n\"Yes sir,\" she said with a half assed salute. \"Lets go, mom,\" Becky commanded while jerking a whimpering Kat to her feet.\n\nBrent gave Katie a soft kiss once they were gone.\u00a0 \"Katie Bug, take your new girlfriend and help her shower.\u00a0 She needs one badly,\" Brent said with a tired smile. \"Then you two sleep together tonight.\u00a0 Becky won't bother you.\"\u00a0 He handed Katie a big, fleshy strap on from the table.\u00a0 He winked and said, \"Just in case.\"\n\n\"Thanks, dad.\u00a0 Can I make her brush her teeth with Becky's brush?\"\n\nBrent gave her butt a light pop.\u00a0 \"Don't you dare unless you want to go without dick even longer, but do make her gargle...a lot.\"\n\n\"I'll take care of her, daddy,\" Kate said softly.\u00a0 \"And daddy?\"\n\n\"Yes?\"\n\n\"Thank you for letting me cum.\"\n\n\"My pleasure.\u00a0 Good night, baby.\"\n\n\"Good night.\"\n\nThe girls made their way to Katie's bathroom and took a long hot shower together.\u00a0 Katie laid a very clean, but exhausted Jessie in her bed and climbed in beside her.\u00a0 She rubbed lotion all over Jessie's body, making sure to gently rub a large dose into her raw asshole.\u00a0 Katie turned off her lamp and snuggled up beside her new lover.\u00a0 This, she decided, was far better than jealousy.\u00a0 They kissed softly for a long time and eventually dozed off in each other's arms to the sound of Brent finally letting Kat cum.\n\n***Author's post script: We will see how Kat's night ends in the next chapter. I don't know that Katie is quite finished with Jessie either.\u00a0 The night is young.***"
    ],
    "authorname": "Iamnotstevebuscemi",
    "tags": [
        "anal",
        "lesbian",
        "taboo",
        "daddy",
        "daughter",
        "incest",
        "threeway",
        "big dick",
        "spanking"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-tale-of-twin-tails-ch-13"
}