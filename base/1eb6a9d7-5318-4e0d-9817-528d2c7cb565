{
    "title": "Coming Back Home",
    "pages": [
        "This story is somewhat long and is mostly focused on characters\u2014the sex is incidental rather than the point. I thought about splitting it and posting in pieces, but that didn't feel right. If a 10&ndash;12 page story (it's hard to judge accurately in advance on Literotica) isn't what you're looking for, please pass this one by with my regards.\n\nNobody under eighteen has sex, and the one character threatened with nonconsensual stuff is resourceful enough to avoid it. So, I hope you enjoy a little romance.\n\n\u2014C \n\n<center>Chapter 1</center>\n\nI happened to be walking into the darkened kitchen for a beer when I saw the flash of light out my back window. It wasn't bright or long, just a momentary flicker. The thing is, there shouldn't have been any lights. I back onto a wooded area, and the next house in that direction was a quarter of a mile away. I took my hand off the refrigerator door handle and moved over to the window to see. After a few seconds, I saw another brief glimmer. Someone was in my shed.\n\nShould I call the police? If I was being robbed, I should. I mean, an old lawnmower and some hand tools weren't worth that much, but I wasn't okay with someone helping themselves to my stuff on general principle.\n\nOn the other hand, if it was Doug Hagerty from next door borrowing a tool, he'd be mortified, and I'd feel like an asshole. The guy was over seventy and being pinned in a cop's Maglite would probably give him a heart attack. Eight o'clock on a cold February night seemed a little odd, but I'd told him, \"Any time, just help yourself.\" I'd been drowsing in the den, and no lights were on in the house. Maybe he thought I was asleep.\n\nCall out to check? If it was someone pilfering my stuff, that would just let them take off with it.\n\nI ducked into the front hall and grabbed the one iron from the set of clubs my dad had left there. I dialed 911 on my phone without pressing Send and quietly opened the side door to slip around the house. On second thought, I retreated and, tucking the golf club under my arm, quietly lifted an empty garbage can. Moving as softly as I could, I crept up to the shed and risked a glance in the window, prepared to complete the call and back away if I didn't like what I saw.\n\nInstead, I straightened and yanked open the door. \"Can I help you?\"\n\nThe long hair flew out as she whirled. With a reaction time that would have done a professional athlete proud, she hooked a backpack with one hand and, before I could say anything more, a shoulder slammed into my side and she was past me.\n\n... straight into the trash can I had set on its side two feet from the door. Matte black, hard to see, easy to trip over. She went ass over teakettle, losing the pack as she fell. She scrambled into a crouch and looked at it, but it was two feet from me and ten feet from her, and I had a golf club in my hand. I could barely make out the grimace in the dim moonlight. She turned and darted off into the woods.\n\nI dropped my phone into my bathrobe pocket and reached down to hoist the pack up onto my shoulder. I stepped into the shed and flipped the sleeping bag she'd left over the same shoulder. Glancing toward the woods to see if she had reappeared, I walked back to the open door.\n\nBefore I stepped inside, I let my eyes scan the tree line, but there was nothing to see in the darkness. \"I have your stuff,\" I called out loudly. \"If you want it back, you can come ask nicely. I imagine you will since I hear it's supposed to drop into the low twenties tonight.\"\n\nI started to close the door and then turned for one more thing. \"Don't mess with me or my things and I won't call the cops.\" I stepped inside and bolted the door as I always did.\n\nIt took fifteen minutes but, eventually, I heard my front doorbell ring. I flipped on the outside lights and looked out through the leaded glass of the sidelight. She had moved off the porch and was standing at the foot of the front steps, maybe fifteen feet away.\n\n\"Can I have my stuff?\" she asked as soon as I opened the door.\n\n\"I think I said nicely.\"\n\n\"May I have my stuff, please?\"\n\n\"Yes. Why were you in my shed?\"\n\n\"I hear it's supposed to drop into the low twenties tonight.\"\n\nI cocked my head. When I replied, my tone was as dry as hers had been sarcastic. \"I think maybe you misunderstand the situation here. I have your things. One little press\"\u2014I showed her the phone in my hand\u2014\"and the police come.\"\n\n\"I'll be gone before they get here.\"\n\nI smiled but it wasn't entirely humorous. \"True. But I'll still have your pack, and the police will be looking for you, Madison Dwyer.\"\n\nIt rocked her that I knew her name. \"You went through my stuff?\"\n\n\"Why not? You were going through mine. How much were you going to steal?\"\n\n\"I wasn't going to steal anything!\" she protested.\n\nI nodded. \"Yeah, not much out there that's worth anything. And most of my tools have my name on them. Still, I bet if you'd found something you thought you could hawk, I'd have found it missing in the morning.\" The sideways glance told me I probably wasn't far off the mark. \"Why?\"\n\nShe didn't answer. After a second, she faced me again. \"May I have my stuff, please? I'll leave.\"\n\nI considered her for a second. I could see that made her nervous. \"I said you could.\" I pulled her backpack up from where I had it leaning against the wall, the sleeping bag re-rolled and neatly fastened in place. Opening the storm door, I dropped it outside. \"I'd like an answer, though. Why would you rob me? You want booze to get through the night? Or was it drugs?\"\n\nShe snorted. The porch light showed me the scornful expression quite clearly. \"Not everyone on the streets is, like, a wastoid. I get hungry.\"\n\nShe still hadn't started forward to reclaim her stuff. I figured she was leery of coming within my reach, so I let the storm door close. I lifted both hands in a gesture of \"I'm harmless\" and stepped back a few paces. She edged forward. Her gaze never leaving me, she came up the stairs and reached for her pack.\n\n\"If you're hungry, I have leftover lasagna in the fridge,\" I said, loudly enough that she could hear me through the glass.\n\nShe didn't respond, just backed off the porch and was gone.\n\nI locked the door and returned to the den to see what I could find on TV. I figured it was fifty-fifty whether some small things would be missing from the shed in the morning. I settled on a Cheers re-run. I knew the show was a bunch of lame jokes with a laugh track to convince you it was funny, but my dad had loved it. And when he'd gotten sick, I found that I enjoyed sitting with him while he re-watched it and other shows like it for the zillionth time. What I'd rolled my eyes at when I was young was a connection now, a connection to a time when things weren't so&nbsp;... so the way they were.\n\nMy thoughts turned to idle daydreams about the woman I'd seen in the diner this morning. It had just been a quick glimpse from the side as I turned from the cashier, but fuck, she'd looked good! At least, she had as far up as my eyes got before she was gone. For the zillionth time in the last few months, my thoughts flicked to the women you saw in the bars, the ones obviously working&nbsp;... but I was too chicken about what I might catch, and with my luck, I'd probably pick some undercover cop.\n\nIt was two hours later that my doorbell rang again. Once again, I saw her standing far back at the foot of the steps.\n\nI opened the door and raised my eyebrows in a question.\n\n\"May I please sleep in your shed? I promise I won't steal anything.\"\n\nI considered her. Her face was pinched with the cold. That wasn't surprising since the thermometer was dropping fast, but I suspected it was also from hunger or exhaustion. She took my silence as reluctance. \"Please! None of your neighbors have sheds, and the cops just chased me out of the bus stop. I promise I won't steal anything.\"\n\n\"Yes, you can. Or,\" I said before she could turn away, \"you can come in and have something to eat and then sleep some place that's forty-five degrees warmer than my shed will be. That's not a four-season sleeping bag you're carrying, and you'll freeze your ass off at a minimum. Frostbite or hypothermia wouldn't surprise me.\"\n\nShe went still. I didn't say anything more or move. We stood that way for what seemed like an eon. Then I saw her shoulders sag. I pushed open the door and let her in. \"The kitchen's straight back.\"\n\nShe wouldn't meet my eyes while I puttered around getting stuff out. A quiet \"yes\" was all I got when I asked if she liked lasagna and an equally soft \"water\" when I asked about something to drink. I put two pieces of the pasta into the microwave to reheat. Ducking into the tiny pantry, I unwrapped the loaf of semolina I had cut into at lunchtime and carved off two thick slabs, spreading butter on them. By the time I had filled a glass of water for her and poured myself a glass of milk, the microwave dinged.\n\n\"Eat up.\"\n\nIt was a quiet ten minutes. I didn't ask questions, and she didn't say anything more than, \"Thank you.\"\n\nWhen we finished, I gave both plates a quick rinse and dumped them in the dishwasher. \"Come on,\" I said.\n\nThe way my house is laid out, the master bedroom is right at the top of the stairs, closed off by a pair of French doors that were standing open. Out of the corner of my eye, I could see the resigned look on her face as she stepped toward them.\n\n\"No, that's my room,\" I said, pretending I hadn't noticed her expression. \"The spare is down here on the right. The bad news is that it doesn't have an attached bathroom. You'll have to use the one there,\" I said, pointing across the hall. \"The good news is that the washer and dryer are in there also, so you can wash your things if you like. Hang on&nbsp;...\" I left her for a moment and grabbed another bathrobe out of my closet. \n\n\"Here, you can wear this while your clothes are in the wash. Raid the kitchen if you get hungry. Otherwise, I'll see you in the morning. I get up early and I'm tired.\" I started down the hall, then turned back.\n\n\"Oh. The doors deadbolt, and you need a key to open them. Please don't force a window or something. It's too damn cold. I'll let you out anytime you want to go,\" I said, adding silently to myself: while checking to make sure you're not taking a ton of my stuff with you.\n\nI wasn't tired, and I hadn't slept in that bed for quite some time, but I figured that removing myself was the most non-threatening thing to do. As I turned to go into my room, I saw her standing in the door of the guest room, watching me. About fifteen minutes later, I heard the washing machine start, and the shower followed right after it. I waited until everything stopped and then another ten minutes, then I slipped out and went down to the den, turning the volume on the TV down to barely audible.\n\n<center>\u2022 \u2022 \u2022</center>\n\nI heard her coming quietly down the stairs the next morning. I wondered if she'd try to sneak out. I wasn't particularly worried she'd bolt with a backpack full of stuff because I hadn't lied about the doors needing a key to open, even from the inside. However, I could just see the edge of the front door from where I sat, and I saw her drop her pack beside it and turn toward the kitchen.\n\n\"In the den,\" I called out.\n\nShe jumped a bit, startled, then came in. \"Thank you. If you'd let me out, I'll get out of your hair.\"\n\n\"I was thinking it was breakfast time,\" I replied. I didn't know how much of the thin figure was nature and how much was missed meals. I looked her over: the dark hair no longer matted under a watch cap, the jeans noticeably cleaner, a dusting of freckles on her nose apparent now that the smudge I'd noticed last night was removed. \"You look better.\" She went still again, just staring at me. I ignored it. \"I should do the same. My coiffure could use some work,\" I said with a grin, running a hand through my bedhead.\n\nI stood up and led the way to the kitchen. \"Do you know how to make pancakes from scratch?\" I asked over my shoulder.\n\n\"No.\"\n\n\"Okay, how about French Toast?\"\n\n\"Yes.\"\n\n\"Well, bread in the pantry, eggs in that bowl over there, butter and milk in the refrigerator, cinnamon in that cabinet. Griddle's hanging over there,\" I said, indicating the pot rack. \"Why don't you make some for both of us while I go put on some day clothes? I like three slices.\" Without waiting for a reply, I headed upstairs for a quick shower and change.\n\nLater, when our plates were empty, I asked, \"So, what now?\"\n\n\"What do you mean?\"\n\n\"I'm assuming that last night wasn't part of your Master Life Strategy. So, what now?\"\n\nShe ducked her face down and didn't answer right away, but I waited her out. Finally, she said, \"I was thinking I'd go someplace warmer, down south, and see if I could find a job as a waitress or something.\"\n\n\"Sounds like a plan. How did my shed figure into that?\"\n\nAgain, the reluctance to answer. Again, I simply waited. \"I don't have the money for the bus fare to Florida yet. I was going to try to find a job to get enough. That didn't work out, and I needed a place to crash.\"\n\n\"You picked Seylerton to try to find a job?\" I asked in disbelief. \"We're not even a town.\"\n\nShe shook her head. This time the answer came a little more quickly. \"I had a ride with some college kids as far as Penn State. Then I had enough for a bus from there to Pittsburgh, but I got sick on the bus and had to get off in Johnstown. I stayed there a night, and then this guy was willing to give me a lift to Greensburg where he said I could probably find something but&nbsp;...\" She trailed off.\n\n\"But?\" I prompted after a few seconds.\n\nShe flushed. \"But I decided it was a good idea to hop out when he stopped for gas in some place named Ligonier.\"\n\nShe pronounced it as a liquid Leegonyeh like it was French\u2014and actually, I guess it originally was\u2014but I made a little tsk sound. \"Don't let anyone around these parts hear you say that. It's pronounced Li-guh-neer,\" I said, emphasizing the flat vowels and hard consonants.\n\nI smiled to let her know I was teasing and to try to lighten the tone. I had a good idea that some variation of the \"rides cost gas, grass, or ass\" speech had prompted her to bail in a service station. \"But that's still, I don't know, ten miles from here?\"\n\n\"One of the women at the diner there was nice and told me the hardware store down here had a Help Wanted sign. She dropped me off on her way home.\"\n\n\"They weren't hiring? I thought they were too.\"\n\nShe shrugged. \"They had a sign up but they told me no. I think I wasn't quite what they were looking for. Maybe two days without a shower&nbsp;... I don't know.\" I could see her eyes welling a bit. \"I can't seem to catch a break lately.\"\n\nI looked away so as not to embarrass her further. I heard her sigh and saw a quick wipe of her eyes out of the corner of my vision. \"Probably just as well,\" she said. \"I never even thought about the fact that small towns wouldn't have youth hostels or anything. Anyway,\" she stood up, \"if you'll let me out, I should get going. Do you know when the bus comes through?\"\n\n\"Not really. You have money for the fare?\"\n\n\"Since I ate for free,\" she flushed at that, \"yeah, enough for Pittsburgh.\" She looked down at her sneakers and then back to my face. \"Thank you for what you did and for, well, not calling the cops last night.\"\n\nI nodded. \"Why Pittsburgh?\"\n\nShe shrugged. \"Cities have jobs and cheap places to crash. Hopefully, I can find one. Other than that, it's just a stop on the way to Florida.\"\n\n\"Okay.\" We walked out into the hall, and I unlocked the front door as she scooped up her pack. \"Hey, Madison, look at me a second.\" She turned, puzzled. \"Is there anything in that pack,\" I asked, watching her eyes, \"that I'm going to be pissed off is missing later today?\"\n\nI saw the offended expression. \"I promised I wouldn't steal from you! Especially after what you've done. I may be a little desperate, but I'm not an asshole!\"\n\nI raised my hands. \"Fair enough.\"\n\nI could tell she was still indignant, but she forced a smile and put out her hand to shake. \"Thanks&nbsp;... oh&nbsp;... I don't even know your name.\"\n\n\"Will.\"\n\n\"Well, thank you, Will. You're the best thing that's happened to me in a while, that's for sure.\" I watched her walk down my sidewalk and turn toward the bus stop.\n\nTwo hours later I headed over to Underwood for my daily late-morning coffee, jamming along to Green Day's \"Boulevard of Broken Dreams\" at full volume, when I saw the figure huddled in the bus stop shelter. Killing the volume, I rolled down the passenger window. \"Problem?\" I called.\n\nShe shook her head. \"Bus comes at eleven twenty-five.\"\n\nI pulled the car farther onto the shoulder, moving down so I wasn't in the marked area. Leaving the engine running, I got out and waved to her. She didn't move so I walked back. \"Come on. Sit in the car. It's freezing out here.\"\n\n\"I'm okay.\"\n\nI shook my head in exasperation, reached, and snagged her pack off the bench. She still had fast reflexes but her hands had been up inside her sleeves and I got it cleanly. \"Come on,\" I ordered. She trotted after me and docilely climbed into the passenger side after I tossed her pack in the back. I flipped the blower on high and pushed the middle vent to point directly at her.\n\nHonestly, all I had intended up to that point was to keep someone obviously down on their luck from freezing. I could wait for my coffee and Danish long enough to do that. But then a car swung out to go around my parked truck, and I saw Mrs. Thompson look over. I nodded in greeting. When she saw who it was, she looked away without acknowledging me.\n\nThe familiar conflict started: \"Fuck you, I don't need your fucking approval\" at war with \"I'll show you.\" \n\nI knew myself. That conflict would never end because neither side of it was true enough to beat the other. I loved living in a place where my roots ran back generations, and saying \"fuck you\" to it wasn't living there. And how do you show people who can't be bothered to see, who heard something and made up their minds and then closed them?\n\nI looked at Madison. And a back-eddy in the maelstrom of my mind let the second side in my private, internal war emerge victorious&nbsp;... at least, for today's battle.\n\n\"Do you just need a job?\"\n\n\"Why? Are you hiring someone?\"\n\n\"No.\" I watched the momentary hope fade as quickly as it came on. I pulled out my phone.\n\n\"Hi, Carrie, it's Will Dannreuther. How are you and the boys?\"\n\nThe throaty voice that always sounded as if it was on the verge of a chuckle came back, \"Fine, Will. How are you?\"\n\n\"I'm doing well, thanks. Hey, the reason I called is, are you still looking for someone to help out?\" Madison's eyes went wide at hearing that.\n\n\"Yes, I am.\"\n\n\"Would you be willing to consider someone if I brought her by?\"\n\n\"A friend of yours?\"\n\n\"Well, more like someone I happen to know, but she's eighteen and could use a job right now.\"\n\n\"Sure, stop by.\"\n\n\"Great. I'll be by in a few. Thanks, Carrie.\"\n\nI looked over at Madison. \"Carrie Schaeffer owns a stable just down the road. She's a grandmother and caring for her two grandsons while her daughter is deployed abroad. She's looking for someone to man the desk in the afternoons and early evenings while she deals with the kids. You don't have to know anything about horses. She has a groom for that.\"\n\nShe looked uncertain. \"What do motels here cost for a day, and is there even one in walking distance?\"\n\n\"You can stay in my guest room. Give me whatever Carrie pays you for an hour's work a day to cover your food and whatnot and we'll call it even. You'll have enough for a Florida ticket in a week or so.\"\n\nI could see the undercurrent of wariness, more muted today, but still there. \"Why are you doing this?\"\n\nI shrugged. \"Doesn't cost me anything to be helpful,\" I said. I let her process it&nbsp;... let her work up her nerve, more likely&nbsp;... then reach a conclusion based upon last night's events. At her nod, I headed over to Bothwell Farm Stables.",
        "I wandered into the barn while she went into the office. Like a lot of local kids, I'd worked here one summer, stall-mucker and hay-spreader. It wasn't my favorite job, but it did earn me a down payment on my first truck. If only Caroline Frey, who rode exercise, had noticed me, it would have been a good time. But nerdy sixteen-year-olds aren't high on pretty seventeen-year-old girls' priority lists.\n\nDown the long row, I saw a woman come out of a stall, bundled up against the cold like I was and carrying a bag. She gave me a perfunctory smile as she passed by on her way to the office. \"Carrie's interviewing someone right now,\" I said, as she reached for the door handle. She turned back to me and I suddenly felt rude. \"Sorry, I shouldn't have butted in like that.\"\n\nShe shook her head. \"It's okay. I'm not in a hurry.\" She flopped down on the bench outside the office, setting her bag at her feet.\n\nI noticed the caduceus emblem with the V over it. \"You don't look like Jim Harvey.\"\n\nHer eyebrows went up. \"I'm glad to hear that,\" she said. I could hear the brush-off and read the body language of eyes that met mine precisely as long as it took to say that and then looked away. I gave her a smile that was probably ninety-five percent grimace and stepped outside. Somehow, the chill from the gust of wind that slipped under the neck of my jacket seemed warmer than the metaphorical one inside.\n\nHalf an hour later Madison came back out, looking happier than I'd seen her. \"Five hours a day,\" she said.\n\n\"More than I expected. I hope you were honest with Carrie that it's a short-term thing?\"\n\nShe nodded. \"I explained. She said we'd deal with that when it came up.\"\n\nShe was quiet the rest of the trip to the diner for the long-delayed coffee. We got a booth and ordered some food since it was later than I normally came in. Then we sat in silence for a while. To me, it was normal, but she looked uncomfortable. I figured I might as well find out more about my unexpected housemate.\n\n\"Where are you from?\"\n\n\"Oregon.\" That was a surprise. Even though the birth certificate tucked in her pack had said she was born in Medford, I'd assumed she was more local now. \"I know, long way away,\" she said. \"I came out to Boston to see my dad. I saw him but it was only for a short visit and here I am.\"\n\n\"But not heading back to Oregon?\"\n\nShe shook her head, toying with her spoon. I wasn't sure where to go from there. Asking, \"Why not?\" seemed intrusive so I tried, \"No other family?\"\n\n\"In Oregon.\" Oh. The flat tone let me know I'd stepped in it. She glanced up at my face then looked away out the window. \"I'm not wanted by the cops or anything if that's what you're thinking.\"\n\n\"I wasn't,\" I said truthfully.\n\nShe nodded and continued staring out the window. Then, in a quieter voice, \"I had issues with my stepdad.\" She left it at that. Again, I sat there silently. It's how I normally spent my time there, other than some idle chatter with one or two of the waitresses if things aren't busy.\n\nApparently, however, silent table partners unnerved Madison a little because she started over-sharing. Really over-sharing, from my point of view. My parents had operated on the principle of: if we want to know something, we'll ask you directly and you better tell the truth. Otherwise, keep it to yourself. They loved me dearly, but they were big on independence.\n\n\"I was on the pill for my complexion, and my stepdad saw them one day. That night he came into my room and told me that, if I was keeping the high school boys happy, there's no reason I couldn't keep him happy, too.\"\n\nI ignored the spike of anger that shot through me. I had no idea how to respond to a woman saying something like that.\n\n\"I managed to get him out of my room by threatening to scream, but I knew he'd be back. My mom travels sometimes for her job, and he and I were alone in the house a lot.\"\n\nI kept my voice level. \"What happened then?\"\n\n\"I told my mom. She slapped me and told me that she was ashamed that I'd lie about a good man just because I resented the fact that he'd replaced my worthless father. Then she called Dave\u2014that's his name, Dave\u2014into the room, told him what I'd said, and told me to apologize for lying.\"\n\n\"Did you?\"\n\nShe smirked. \"She thinks I did. I was, like, 'I'm sorry I said that to my mother.' She didn't realize all I was saying was that I was sorry I went to her. Dave knew though.\"\n\n\"Did he call you out on it?\"\n\n\"No. He gave me this look that let me know it wasn't over. So, that night I grabbed my pack, my birth certificate, and stuff, and took off. I swiped all the cash in their wallets and her ATM card. I didn't know the PIN to his or I'd have taken it too. I could only get $300 at one time and then I ditched the card. I didn't want them tracing me by it.\"\n\n\"I doubt your mother would throw you in jail no matter how pissed off she was.\"\n\nShe shook her head. \"Not that. I didn't want to have to go back. I was a minor.\"\n\nI was surprised. I'd checked her age on her birth certificate when I poked through her pack to know if I was dealing with dynamite. It's how I knew she was eighteen. \n\nShe read my reaction correctly. \"It was Labor Day. My birthday is in October. I've been gone for five months.\" She shrugged like it didn't matter. \"I went to see my dad in Boston. I couldn't buy a plane ticket because they said my parents had to do it if I wasn't eighteen, so I spent three days on a bus from Oregon to Massachusetts. That sucked!\"\n\n\"If you were only seventeen, why didn't you stay with your dad?\" I figured that question needed to be asked.\n\n\"His new wife didn't want me there,\" she said tightly, \"and she said\u2014\" She broke off and started sliding out of the booth. \"I need a ladies' room.\"\n\nI wasn't fooled. I'd seen the expression on her face when she stood, and the scrubbed look and red around the eyes when she returned made it clear she'd been crying. I dropped a few bills on the table before she could sit. \"Let's head back to the house.\"\n\nIt was a quiet ride for the first five minutes. Then she said, \"I'm sorry.\"\n\n\"Don't be.\"\n\nAfter another uncomfortable silence, she finished her story. \"She told me why my dad left my mom when I was eleven: he found out I wasn't his daughter.\"\n\nJesus! What was it with her blurting this stuff out? That was the second time in the last fifteen minutes that I didn't know what to say. Even if it upset her, the truth seemed like the best bet. \"After eleven years, you should have been, regardless of what happened in the past.\"\n\nShe looked over at me with an expression I couldn't quite fathom: either it was a \"Yeah\" of agreement, or it was, \"Are you from planet Mars?\" She glanced back out the window. \"Since then, I've just been trying to get by on my own. But I've had trouble making it, and the cold has been getting to me, so here I am.\"\n\n\"Well, there's no evil stepmother at my house to throw you out,\" I said, trying to lighten the mood. \"You can stay until you're on your feet again.\"\n\n\"I don't know how to repay you for all this.\"\n\n\"No hurry,\" I said dismissively. \"You thank me when you figure it out.\"\n\nThe rest of the day she was a ghost around the house. I needed to get some work done, so I told her I would be busy at the desk in my room. \"I'll be in there until bedtime, so just help yourself to anything in the kitchen, and I'll see you in the morning.\"\n\nThat's not my usual routine. Normally, I work until eight or nine and then move downstairs and put the television on. But like the night before, it seemed the best bet was to remove myself. When my last conference call finished, I lay down on top of the bed to read. I heard the shower start and figured I'd give it another ten or fifteen minutes and head down. I was just finishing a chapter when I heard a light knock at the door.\n\n\"Yeah?\"\n\nIt opened to show Madison standing there in a robe I'd lent her. She stepped in and reached back to shut the door. What? Barely meeting my eyes, she walked over to the edge of the bed. Her hands fumbled at the belt of the robe for a second and then it dropped off her body. Topless, just a pair of panties below, she reached for the covers on the edge of the bed.\n\n\"Whoa! Madison!\"\n\nShe looked me directly in the face for the first time. \"Thank you, Will, for everything.\" She started to slide in.\n\nI scooted back, understanding. \"Stop! Right now. Just stop.\" She froze. I slid off the other side of the bed and walked around, scooping up the robe from the floor. \"Put this on, please.\" She clutched it to her chest but didn't put it on. \"What's this about?\"\n\n\"I wanted to say thank you. It's okay.\"\n\n\"No.\"\n\nShe got a startled look. \"Oh! Do you, umm, not like girls?\"\n\nI laughed, but it was a tense one. \"I like girls plenty. But no.\"\n\n\"Why?\"\n\n\"Because&nbsp;...\" I was stymied for how to explain my feelings, mostly because I was so off-balance with the whole thing. \"I guess because you're eighteen.\"\n\n\"That's legal.\"\n\n\"I know but&nbsp;...\" I struggled to put it into words. \"Look, if you weren't homeless, having family problems, and desperate to have a place where you won't starve or freeze to death, would you really look at a thirty-five-year-old guy?\" I shook my head. \"No, you wouldn't.\" \n\nShe didn't respond. I didn't expect her to. If she agreed, she'd be telling me she didn't find me attractive, and I had a feeling she was afraid of insulting me.\n\nI ignored the tiny part of my brain that woke up at the whole porn-fantasy aspect of this\u2014I said it had been a while\u2014and shut down the situation. She was cute as hell, but she was little more than half my age. \"I don't care how attractive you are&nbsp;... and you are&nbsp;... there's a part of me that knows this is creepy. And that's the part that I'd have to live with. So, no. Period. And please put that robe on.\"\n\nI looked away as her chest came back into view while she pulled the robe around her. \"Jesus!\" I muttered. I saw her eyes start to tear up. \"What?\" I demanded.\n\n\"Please don't throw me out. I misunderstood.\"\n\n\"I'm not going to throw you out. Just stop crying.\" I ran my fingers through my hair as I tried to figure out what to do. Now that I wasn't faced with a topless, cute young woman, it was easier to get my balance back. \"Look, when I said, 'figure it out,' I wasn't implying figure out how a woman could reward a guy. I meant figure your life out. And by 'thank me,' I meant with words.\"\n\nShe still looked scared and a little desperate but at least the waterworks held off.\n\nI shook my head. \"I&nbsp;...\" I had to look away; this was unbearably awkward. \"Maybe it's my bad. I saw the look on your face last night when we came up the stairs, what you expected was going to happen. I should have said something then, but I'm not good at knowing what to say sometimes.\"\n\n\"You knew? I'm&nbsp;...\" Her voice trailed off. I could see that, now that panic was ebbing a little, she was as embarrassed as I was: a pair of tongue-tied strangers trying to have a conversation. \"I'm not a whore, Will,\" she said very quietly.\n\nThat one was easier to field. \"I never thought you were. I just figured it wasn't the first time you had to make some hard choices. I figured that was why you bailed in Ligonier.\"\n\nI glanced over to see if that hit the mark and saw her eyes start to water again. \"Now why are you crying?\" I asked in exasperation.\n\n\"Because all guys aren't like you.\"\n\n\"Jesus! I'm going downstairs to watch some TV. I'll see you in the morning.\" I shoved my feet into slippers, grabbed a robe for myself, and bolted.\n\n<center>\u2022 \u2022 \u2022</center>\n\nWhen she came into the kitchen the next morning, it was awkward. I dealt with it the way I normally did: said nothing and turned my attention to making pancakes. She, apparently, had a different set of social responses wired in.\n\n\"Will?\" \n\nI sighed and turned to her. \n\n\"Last night\u2014\" she started.\n\nI cut her off. \"Look. I'm super uncomfortable with this kind of conversation. Just do me a favor and pretend it never happened.\"\n\n\"But I don't want you to think\u2014\"\n\nI cut her off again. \"I don't. I meant what I said: I figured you had to make some unhappy choices, but I don't judge you for them. I just don't want to talk about stuff like this with someone half my age. God! I can barely talk to women my own age.\" I saw a small flicker of amusement cross her face at that.\n\n\"Go ahead. Smirk. I write software for a living,\" I said defiantly. \"Guess what that means about my social skill with girls.\" My face flushed, I turned back to the stove. \"Let's just drop it,\" I muttered.\n\nShe said nothing. After a moment she went over and got two plates, some silverware, and pulled the maple syrup out of the pantry. It was a quiet meal. I was embarrassed. I don't know what she was thinking.\n\n\"I have to walk the dog,\" I announced.\n\nShe looked surprised; there'd been no sign of a dog since she arrived. \"He stays with my neighbor,\" I said. Opening the back door, I gave a two-tone whistle. Seconds later, I watched Madison's face crease into a smile as forty pounds of black and white sailed over the three-foot hedge as if it wasn't even there and came bounding inside to dance around in front of me in excitement. \n\n\"This is Lucy. Just put your hand out and let her sniff you. She won't bite.\" Lucy crept over and gave Madison a sniff or two, then one quick lick on the hand before darting back to me, her entire back end wagging as her tail whacked the hell out of the lower cabinet.\n\nIt was a long walk while I tried to get my head around the previous evening. The thing was, Madison had the kind of looks that I'd always loved. Maybe a touch under-nourished, but she had a girl-next-door quality that caught the eye. And a little part of me had reacted, had said, \"Hey, you could have that.\"\n\nHow am I different from Dave? I wondered. It took me a while to get unrattled enough to answer that. It wasn't that he liked her looks; she was attractive, and the eye likes what the eye likes. It was that he acted on it when he knew he shouldn't. He was her stepfather, for Christ's sake! Not even some rando guy she made an offer to.\n\nMore than that. \n\nIt was that he demanded and then didn't accept her \"get lost.\" For those two things, I'd cheerfully have beaten him to a pulp even though she was nobody to me. \n\nI relaxed, finally finding my perspective. I'd said no even though she'd given me the exact opposite of \"get lost.\" I didn't need to add this to the list of things I felt bad about myself over.\n\nWe got back from our trek through the woods and I started in on splitting some wood. With temperatures like these, the wood stove got hungry. We weren't having the \"snowmageddon\" of two years ago, but 2012 was holding its own. Lincoln's birthday had met us with over a foot of new snow followed by bitter temperatures that had only eased slightly.\n\nSplitting wood is a peaceful thing for me. Slow at first until my body warmed up enough that I could shed the heavy coat and get into the rhythm. Earphones on with music I liked\u2014Pearl Jam today\u2014to isolate me from the sounds of cars going by. Just me and the ax and the lengths of log. I kept Doug in wood also, finally convincing him I enjoyed it rather than was just coddling him. \n\nAfter a couple of minutes, Madison came out.\n\n\"Do you need some help?\" she asked tentatively after I dropped one earbud out.\n\n\"It's a one-man job. You could take a carrier-full of kindling in if you want.\" I gestured to the pile of smaller wood off to the side. \"There's a box for it next to the wood stove.\"\n\nLucy chose that moment to come bounding by, hot in pursuit of a bird that was twenty feet up in the air. Hope sprang ever-eternal in that dog's heart.\n\n\"Why does your dog live with your neighbor?\"\n\nI paused. \"I can't talk and swing an ax. Give me a few minutes and I'll come in.\" Turning back to the chopping block, I saw Doug open his back door. He was poker-faced as always, but his eyes were on Madison. I waved him over.\n\n\"This is my neighbor, Doug,\" I said to Madison as he walked up. She was watching Lucy, who had given up the bird for lost and had come over to see if anyone wanted to throw a stick. \"This is Madison,\" I said to him. \"She's staying with me for a while.\"\n\nHe gave her a brief nod, his face still impassive. I could see she wasn't sure how to deal with that beyond a quiet hello, so she covered her uncertainty by picking up the stick Lucy had dropped and threw it. Both Doug and I fought grins as Lucy took off like a shot, caught the stick on its first tumble, and came racing back to drop it at Madison's feet, staring at it with that fixated expression border collies have perfected.\n\n\"She knows you're a sucker now,\" Doug observed.\n\n\"Madison needs a ride over to Bothwell at two-thirty and I have a call at two,\" I said. \"Any chance you could take her?\"\n\n\"Sure. Just come over,\" he said to her. He gave another of those nods to her, an expressionless glance at me, and turned back to his place, calling Lucy as he went.\n\nBetween filling the wood box and then showering and dressing, I chewed up the better part of an hour. I came down to find the breakfast dishes clean and drying in the rack. Madison was sitting at the table waiting.\n\n\"Will, I need one or two things from the store. Can you tell me where it is?\"\n\n\"There's a small one about a mile down to the left but it's pretty cold outside. I usually go for a coffee at around ten thirty. If you want to come, we can stop. If you don't, I'll pick it up for you.\"\n\n\"I'll come with you then if that's okay.\"\n\nJust then the phone rang. It was the Hyderabad team. After thirty seconds of listening, I realized this was another one of the all-hands-on-deck \"emergencies\" the idiotic project manager called whenever something went wrong. Eleven people would sit around on a conference call doing nothing while one person fixed the problem he or she'd caused. I sighed and muted my line. \"Is your stuff urgent?\" I asked Madison. She shook her head. \"Have Doug stop when he takes you. This will take a bit.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nIt was a little after seven thirty when I heard a car pull into the driveway. I looked out the window, and when Madison opened the passenger side, it looked like the driver was the woman I'd run into earlier. I opened the door\u2014I wasn't quite ready to trust Madison with a key\u2014and told her, \"Dinner in a few minutes if you want to wash up.\"\n\nIt was another quiet affair. Toward the end of it, she spoke up. \"Doug asked me what I thought of you. Doesn't he know you?\"\n\n\"What did you say?\"\n\nShe wriggled a little but answered. \"I told him you seemed nice.\" I could hear the caution lurking behind her words.\n\nI didn't want to make her more uncomfortable, so I answered her question mildly, \"Doug's known me since I was young. He's just making sure you're okay. He's that kind of guy.\"\n\nI started to head to my room, then turned back. \"Who drove you home?\"\n\n\"Her name's Avery. She's working there part-time and said she'd give me rides.\"\n\nThe next day was pretty much a repeat. I continued to sit utterly bored on the phone while the team fixed problem after problem in their latest upgrade effort. Since my stuff was working properly, I managed to work my way through a fair bit of Russell's Swamplandia!. \n\nMadison seemed slightly more comfortable with her situation. Truthfully, I didn't have a whole lot invested in her, and if she went, she went. Still, it was nice to have someone to talk to over dinner, and I did feel good about myself for helping her out. Part of the whole rebuild-self-image process.\n\nThe only thing different the third day wasn't a change for the better. It was slightly warmer, and I was out on a ladder doing a little repair to a gutter that had been damaged by a combination of ice and wind.\n\nAvery pulled up to take Madison to work, giving a little toot of the horn to let her know she was there. I gave her a brief nod. She'd made it clear the first day that talking to her wasn't welcome, and I'd had a lot of practice in just not giving a damn when people didn't want to talk to me.",
        "Apparently, it was okay for her to start the conversation though. I heard the window power down. \"You're Will, right?\"\n\nI turned back to the car. \"Yep.\"\n\n\"I'm Avery. I'm working over at Bothwell.\"\n\n\"I'm glad to hear that.\" I wondered if she remembered our previous conversation and realized I was feeding her own line back to her.\n\n\"Ice?\" she asked, nodding toward what I was doing.\n\n\"Yep.\" I wasn't holding up my end of the conversation, but I was up on a ladder trying to do some work. Being talked at from a car window directly behind me so that I had to contort wasn't exactly making my day.\n\nShe was quiet for a few seconds, but it didn't last. \"Madison says you have a border collie, but you don't keep it in your house. You leave it at a neighbor's. Pretty high-energy dogs. A lot of people find them more trouble than they bargained for when they get them.\"\n\nSince I didn't know her, I suppose she could have meant that as commiseration or, at least, understanding. I could hear the tone, however, and figured what she was really saying was, \"Great! Another moron who got a dog and then couldn't be bothered to take care of it.\"\n\n\"Yes, she's got a ton of energy,\" I said with a thin smile.\n\nShe gave a little noncommittal nod. I read it as, \"Yep, that's what I thought: a moron.\"\n\n\"And I saw your neighbor out in his yard. He's getting on a bit.\"\n\nAt that point, I could have simply told her why Lucy was at Doug's. But truthfully, I'd found her brush-off the other day about an inch short of rude. Plus, opening a conversation with thinly veiled accusations about how I took care of my dog didn't sit well. I had developed a low tolerance for presumption.\n\n\"Doug's fine. You don't need to worry about it.\"\n\nI turned back to what I was doing, but she wasn't done yet. \"Town shelters are bad for dogs, but there are rescue places I know. There's one up in Morris, New York that specializes in border collies.\"\n\nI bit my tongue before I told her to get fucked. \"Thank you\"\u2014my tone said otherwise\u2014\"but I don't need a rescue place.\"\n\n\"Why'd you take Madison in? I mean, it's a nice thing to do, but what prompted it?\"\n\nThe sudden segue caught me off-guard. I gave her the same answer I gave Madison, this time barely looking over my shoulder. \"Doesn't cost me anything to be helpful.\"\n\n\"Is that the kind of thing you do often?\"\n\nSighing, I stepped down off the ladder and walked over to the car. \"If there's something you want to say, Avery, why don't you just say it?\"\n\nShe didn't back down. \"I'm just wondering about a man your age taking in a woman that age who's vulnerable because of her situation. No offense. You understand, I'm sure.\"\n\nOh, I understood the insinuation perfectly. But at the same time, the surge of offense\u2014because, yeah, there was one\u2014didn't stop me from seeing how it might look if you were doing the looking from outside. And there was a momentary flash of feeling like a hypocrite. \n\nJust two days ago, Will, didn't you get angry that no one ever asked? Everyone deserves at least one chance, even this annoying woman.\n\n\"She needed help, and that's what I'm giving. As I said, it costs me nothing, and I don't expect anything in return. If she finds it too uncomfortable, she knows she can leave.\"\n\n\"But you don't have a wife here, right? Madison said you lived alone.\"\n\nMy back stiffened automatically. She was new in town; I knew everybody, so I knew that. How new?\n\n\"Is there some reason you bring that up?\"\n\nInstead of answering my question, she doubled down. \"Look, I can't take her because I'm staying in my uncle's spare bedroom temporarily. But maybe I could talk to Carrie about\u2014\"\n\nI had reached my limit. I think it was the mention of Carrie that did it. If she had bothered to talk to Carrie&nbsp;... someone who actually knew me&nbsp;... before deciding I was a pervert, this conversation would have been very different. Or maybe it wouldn't have based on what I could tell of her. I interrupted her.\n\n\"Did Madison complain about me in any way whatsoever?\"\n\n\"No, but\u2014\"\n\nI interrupted again.\n\n\"Then, Avery, that's three.\"\n\n\"What?\" Blank incomprehension.\n\n\"Three strikes. You were borderline rude when I tried to make some polite conversation two days ago. Two minutes ago, you were insulting about my dog. Now, you're implying something even worse about my helping Madison. So, Avery?\"\n\n\"What?\"\n\n\"Fuck you and the horse you rode in on.\" I ignored the shock on her face, turned, and went back into the house. The gutter could wait.\n\nI passed Madison bounding down the stairs. She saw the look on my face and pulled to a stop. \"Is something wrong?\"\n\nI shook my head. Digging in my pocket, I pulled out my key ring and extracted the house key. I handed it to her. \"There. So you can get out if you feel the need to.\" I stepped around her, ignoring the wide-eyed look, and went upstairs to change into something that wasn't dirty.\n\nWhen Madison came home later that evening, she was quiet. About halfway through dinner, she decided it was time to talk about it. Apparently, just not talking about something was a foreign concept to her. \"Avery told me you got pretty angry at her.\"\n\n\"Did she tell you why?\"\n\n\"She said you thought she was rude and insulting.\"\n\n\"Well, I guess she isn't also stupid.\"\n\nShe sat there as if trying to make up her mind whether to continue. \"I told her that she was wrong about you letting me stay. I didn't go into details, but I said I was certain you weren't looking to hook up with me.\"\n\nI shrugged.\n\n\"The thing in the stable that first time you saw her I&nbsp;... well, don't get angry at me, but I kind of understand where she was coming from. Girls get tired of being hit on.\"\n\n\"I wasn't hitting on her.\"\n\n\"She didn't know that. When a strange guy starts talking to you out of the blue, he's hitting on you, like, ninety-nine percent of the time.\"\n\nI thought about that. \"I'm pretty sure I disagree but fair enough. That wasn't really what made me angry.\"\n\nShe nodded. She understood it wasn't. It had been the other things. After a moment, she changed direction. \"Why doesn't Lucy stay here? You never told me.\"\n\n\"Doug has some political views that are a little unpopular around this neck of the woods, and he's not shy about them. A couple of months ago, a bunch of kids drove over his lawn and threw a rock with an unpleasant note wrapped around it through one of his windows. It upset him and he was worried they'd do something more next time.\"\n\nI took my plate over to the sink to rinse. \"I think he's worrying for nothing. I'm pretty sure I know who at least some of them were, and it's a good bet they were drunk off their asses when they did it. The next day they were probably terrified of a visit from the police&nbsp;... and I mentioned in a couple of ears that that's exactly what would happen if the situation ever occurred again.\n\n\"But Doug's over seventy and getting hard of hearing. I can't really blame him for being nervous. Anyway, Lucy's got a hair-trigger when it comes to barking at any stranger who comes in the yard. She goes nuts. And she gets along with Doug well. So, I loaned her as a watchdog. He feels safer. If he's still worried in the spring, I figure I'll get him a dog of his own.\"\n\n\"Oh.\"\n\n\"An explanation I could've given Avery if she asked why instead of assuming I was too lazy to take care of a dog.\"\n\nShe looked uncomfortable. I guess she was starting to see Avery as a friend. \n\nWhatever.\n\n<center>\u2022 \u2022 \u2022</center>\n\nFriday brought a knock on my front door. Glancing out the window, I saw Avery's Subaru. I was surprised: it was a bit earlier than Madison finished, and besides, she had a key now.\n\n\"I owe you an apology,\" Avery said by way of greeting. Madison was nowhere in sight.\n\n\"For what?\"\n\nShe looked confused as if it should be obvious, so I clarified my question. \"For which thing, specifically, do you think you owe me an apology?\" \n\nIt was clear that my blunt question disconcerted her. I guess she was expecting \"Never mind. It wasn't important\" or some such social axle grease. A year ago, maybe. Now, not so much.\n\n\"Well, I definitely owe you an apology for what I suggested about you and your dog. I shouldn't have done that. About the only excuse I can offer is that as a vet, even a large-animal vet, I see far too much of it, and I'm tired of dogs ending up in shelters. But that's not really a good reason and I'm sorry.\"\n\n\"Apology accepted.\" I wasn't a total asshole, and just because I wasn't willing to take crap from someone, it didn't mean I couldn't be gracious about an apology. I left it at that since, as far as I was concerned, she still had two strikes going. She must have realized that when I didn't say anything else.\n\n\"As for what you called the third strike, I can't quite apologize for that. Unlike with your dog\u2014where I admit I assumed when I shouldn't have\u2014I wasn't condemning you. But I don't think there's anything wrong with being proactive in looking out for a young woman in her situation. I'd already asked her a question or two, and her answers were kind of squirrelly. So, I wanted to form my own impression.\"\n\nWhen I didn't say anything, she continued with an expression that said she wasn't finding this conversation as comfortable as she thought it would be. \"You don't agree?\"\n\n\"I don't like people making decisions about what type of person I am without any evidence, and\"\u2014I held up a hand to forestall her protest\u2014\"despite your revisionist history about not judging, your implication was crystal clear. You had already made up your mind enough to intervene.\"\n\nHer eyebrows went up. \"Look, I apologize if I came across as accusing. I wasn't trying to be. I'm just a very protective person, and I was trying to be&nbsp;... forthright, I guess. I talked to her some more after you blew me off, and she's put my concerns to rest. Her answers are still squirrelly, but&nbsp;... well&nbsp;... despite her life for the last few months, she's still a little na\u00efve and transparent. I have a fairly good guess as to why she's sure you aren't after her. And your reactions, despite the profanity, are reassuring.\"\n\n\"I'm so glad you approve of me.\"\n\n\"You're not going to give an inch on this, are you? Why?\"\n\n\"We don't know each other well enough for that conversation, Avery.\"\n\n\"Are you still pissed that I didn't respond when you hit on me?\"\n\n\"I didn't hit on you. I was being sociable.\"\n\nShe looked at me with disbelief. \"I've been hit on like a million times in the month I've been here by everything in trousers. It's been non-stop. You're the exception?\"\n\nShe must have seen my skepticism and looked a little embarrassed as she realized how arrogant that sounded. \"No,\" she said. \"I'm not saying I'm all that and a bag of chips.\" She flushed a little. \"I mean&nbsp;... I've seen prettier women even in this blip on the map. But my figure appears to attract a lot of attention, and the first thing you mentioned was how I looked.\"\n\nI gave her a tight smile. \"First of all, that's twisting what I said. I wasn't commenting on your appearance. I saw your bag and commented that you didn't look like Jim. You know, the normal vet. It was a joke. Lame, perhaps, but a joke. \n\n\"Second, I've never seen your figure. You've been wearing a knee-length down coat that's puffy as hell every time I've seen you. You're the Michelin Man from the knees up.\"\n\nShe glanced down and hesitated. Finally, I'd taken her off her stride. \"I&nbsp;... Actually&nbsp;...\" She paused, turning pink. \"You have a point.\" She blew out a breath like a horse, then looked up and stuck out her hand. \n\n\"Hi. I'm Avery Liaci. I'm fairly new to town. I'm a large-animal vet. I make unfounded snap judgments about people more than I should. I occasionally say stupid things that sound like I'm more conceited than I really am. I understand that you're Will Dannreuther, and you're nice to strays but prickly as a cactus.\"\n\nI studied the outstretched hand for a second. The truth was, I was a little lonely and the expression on her face was friendly. I balanced that against the irritation I still felt. The irritation would have won if good manners didn't factor into the equation. But I'd been raised to factor them. \n\nWhatever. \n\nI shook. \"Will Dannreuther. I love my dog. I don't chase jailbait or anything close to it. I admit to showing interest in women at times but generally only after I know them a little and never by opening with a comment about their figure.\"\n\nHer eyebrows went up, but her expression was considering rather than irritated. \"Prickly as cactus indeed.\" She stepped back. \"Nice to meet you. I have to go see a man about a horse\u2014literally,\" she said with a crinkle of humor around her eyes, \"but I hope to see you around.\"\n\n\"Where's Madison?\"\n\n\"Someone else is giving her a ride today.\"\n\nI considered her retreating form, but there wasn't much I could tell. I guessed the figure must be good given that, while she was reasonably attractive, it wasn't \"everything-in-trousers\" type of attractive. Seylerton had several prettier women, particularly the Frey gaggle.\n\nAbout two hours later, a red pickup pulled into the driveway. I didn't recognize it, and the sun glinting on the windshield made it hard to see who was driving. After about five minutes, Madison got down out of the passenger side.\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe same pickup made an appearance the next morning. With a quick, \"Morning, Will. I'm having breakfast with some friends if that's okay,\" Madison grabbed her coat.\n\n\"Of course.\"\n\n\"After work, could I talk to you about something?\"\n\n\"Also, of course.\"\n\nShe gave a smile and was out the door and gone.\n\nI headed out around my usual time to get coffee and a pastry at the diner. \"Ellen,\" I greeted the cashier as she gestured toward my favorite table. \n\n\"Thanks, Linda,\" I said to the waitress as a large coffee and a pecan Danish were set in front of me without my even asking. It was slow and Linda dropped down across from me to chat for a few. I liked all the staff here, but Linda was my favorite. After a few minutes, a group came in and she pushed herself up with her usual, \"No rest for the wicked.\"\n\nI looked over and saw it was a group of people I knew, and to my surprise, Madison was with them. She didn't notice me sitting in the corner, and I figured I'd spare her the awkwardness of me butting in.\n\nI finished and rose to go. The movement caught Madison's eye. She said something quietly, and I knew she was uncertain if she should wave me over or not. I gave her a nod and a smile and headed for the register. As I turned to go out the door, I saw the others at the table had followed her gaze, and five pairs of eyes watched me leave.\n\n\"Did you have a good time?\" I asked when she came home about an hour and a half later.\n\nShe nodded. \"I didn't know whether you'd want to meet\u2014\"\n\n\"I've known most of them since they were born,\" I interrupted. \"Alyssa is my distant cousin. Another cousin coached Drew and Ryan, and I know they work part-time at the stable. I didn't know the other girl, though.\"\n\n\"Brianna's from Mount Pleasant. She's Ryan's girlfriend.\" She hesitated and then said, \"I have to get ready to work.\" She half-turned away, started to turn back, frowned, then dashed upstairs. Twenty minutes later, there was a toot from the driveway. Without the reflection this time, I could see Drew at the wheel.\n\nDinner was an odd affair. Madison was quiet and withdrawn, much like she'd been the first two days. Finally, I prompted, \"This morning you said you wanted to talk about something?\"\n\nShe looked surprised, then shook her head. \"Never mind. It wasn't anything important.\"\n\n\"Ah.\" Something had happened during the day to change her mind. As if I couldn't guess. I just watched her with a neutral expression and waited. \n\nShe met my eyes, looked away, met them again. Finally, \"When they found out who I was staying with&nbsp;... well&nbsp;... the others said you used to be married.\"\n\nI nodded but didn't say anything else. This topic wasn't a shocker.\n\nShe hesitated, then blurted out, \"They said that you two weren't getting along, so she moved to New York.\"\n\n\"They?\"\n\n\"Well, Drew and Ryan. Alyssa didn't say anything and Brianna's not from here.\"\n\n\"Did they happen to mention specifics about how we supposedly weren't getting along?\"\n\nShe squirmed and didn't answer. I felt the familiar flare of resentment.\n\n\"Let me guess. Someone told you that people think I hurt her? That she couldn't take being a punching bag, and when I finally almost choked her, she fled to New York to get away?\"\n\nShe didn't respond, so I knew I was pretty close to the mark. I felt my face tighten as the flare turned into the anger I felt every time someone convicted me in absentia. I opened my mouth to tell her exactly how I felt&nbsp;... and stopped, caught by what I saw.\n\nShe wasn't staring at me with disgust and loathing. I saw the eyes shift away so they weren't meeting mine, though they watched my legs from their corners. I took in the rounded shoulders, the hands clenched in her lap, her perch on the edge of her seat. \n\nShe was scared.\n\nI couldn't blame her. Older men hadn't behaved well around her so far. She was probably wondering if I was the kind of guy that would be set off by asking me if I was the kind of guy who would be set off.\n\nIt took a long moment to stuff what I was feeling away, to throttle the adrenaline. I took it. Madison didn't know me. She wasn't the Whites or the Mackeys or the Thompsons or fill in the blank.\n\n\"Okay,\" I sighed after a moment. \"It's not true.\"\n\nShe looked at me with uncertainty. Finally, in a quiet voice, she asked, \"Why would they say it then?\"\n\n\"Drew probably says it because he's heard his father say it. He and his father are close, so I don't particularly blame a kid for listening to his father. Ryan, maybe the same; I'm not sure.\"\n\nShe thought about that. \"Okay, then why does Drew's father say it?\"\n\n\"Because Drew's father is perfectly willing to believe any bad story about me, and this has become a game of Telephone where things get further and further from the truth with every telling.\"\n\nShe didn't say anything, just looked uncomfortable. I could tell she felt she was in over her head. At eighteen, who could blame her? On the other hand, I'd been dealing with this for a long time and was fed up with it. It wasn't her fault, but that didn't mean I was in the right frame of mind to go into history or detail. I didn't owe her anything.\n\n\"Madison, look. I've taken absolutely everything you've said and everything you've promised on faith even though, for all I know, you could be a scam artist hiding out from the cops. I'd like you to extend me the same courtesy. I never hit my wife, shoved her, choked her, or did anything else abusive to her, including emotional abuse. It's a bullshit story. I know about it. I know who started it, and I know why it was started. I'm not willing to go into it with you since we barely know each other, but it's bullshit.\n\n\"However, if you're too uncomfortable, I understand. We can call Carrie. Her house is small, but if I ask, I'm sure she'll let you stay on the cot at the stable for the few days until you have enough to catch a bus.\"\n\nI was watching the news when Madison came into the den later. I muted the TV.\n\n\"Does Carrie know this story?\"\n\n\"Yes. Everyone's heard it.\"\n\nShe perched on the edge of the other chair. \"She didn't say anything to me.\"\n\n\"She doesn't believe it and isn't one to spread trash.\"\n\nMadison went back to studying her hands. Finally, she said, \"This morning, I said I wanted to talk to you about something.\" I waited. It was a long wait, but finally, she asked, \"How soon do you want me out of your house?\"\n\n\"To Carrie's? We can call her now if you want.\"\n\nShe was shaking her head before I finished the question. \"No, how long is it okay I, like, stay here?\"",
        "I was surprised by the question. \"I'm in no hurry, but I figured you'd leave when you have enough money to get to Florida.\"\n\n\"Can I stay a little longer?\"\n\n\"Why?\"\n\n\"I really need a phone. I left mine behind because I knew Mom could track it. I gotta have one and that sets me back.\"\n\nDespite my sour mood, I smiled to myself at the verb she chose. At seventy-one, Doug \"put up\" with one in case of emergencies. At thirty-five, I \"liked\" having one. At eighteen, Madison, apparently, \"gotta have\" one. Though, I guess I understood. I'd been that way back when I lived in Jersey, my phone surgically attached to my body, checked constantly for texts. But in the quieter pace of rural Pennsylvania, I'd found I preferred using it for making a phone call when needed, but that I liked people's voices in person rather than words on a screen.\n\n\"Okay. I don't have a problem with that.\"\n\nShe muttered, \"Thanks,\" and stood to go.\n\nBefore she could leave, I asked, \"What made up your mind?\"\n\nShe fidgeted, not quite meeting my eyes. \"I&nbsp;... I'm ... I don't really know what to think 'cause I don't really know you. But, umm, you gave me a key and, like, when you had a chance, you didn't sleep with me.\" She flushed and hesitated. \"I felt guilty for being wrong the other day about you and thought that, umm, maybe I shouldn't be so quick to judge.\"\n\nI felt something loosen inside.\n\n\"Talk to Carrie tomorrow. If you think it's best you move there, just give me the key back.\"\n\nThe next day she came in after her afternoon shift. I wondered if she'd be handing me the key and going up to pack. Instead, she said, \"Umm, I know how to make spaghetti. Do you want me to do dinner?\"\n\n<center>Chapter 2</center>\n\nAvery's \"I hope I see you around\" translated to catching me in my yard while dropping Madison off. She walked over to where I was loading firewood in the carrier.\n\n\"Can I buy you a cup of coffee?\"\n\nI straightened. \"I don't drink coffee in the evening.\" I saw her face fall a little at the perceived rejection of her olive branch. \"But I go every morning at around ten thirty if you want to tomorrow.\"\n\n\"Go where?\"\n\n\"The Mason Jar.\"\n\n\"I know the place. I'll meet you there at ten thirty.\" She gestured to what I was doing. \"I'll leave you to your manly endeavors and see you tomorrow.\"\n\nShe arrived right at the appointed hour the next morning. She slid her down coat off and dropped it on the back of her chair.\n\nSuddenly, I realized I had seen her before\u2014the sweater she was wearing was the same and the visual triggered the memory. She was the woman I'd seen passing out of the corner of my eye as I left the Mason Jar that one day, but my eyes hadn't gotten high enough that time, and so I hadn't recognized her face when we met at the stable. \n\nI was embarrassed inside at the realization. On one hand, I'd only seen her for a split second in my peripheral vision, and I didn't see any need to apologize for finding large breasts in a tight sweater eye-catching. On the other hand, it made me feel shallow to think that \"Oh, I recognize the boobs\" was about the best I could come up with if I wanted to admit the previous encounter. I opted for discretion and hoped I didn't flush.\n\nRight here and now, of course, she'd seen where my gaze went for a fraction of a second, but she smiled into my eyes that were immediately planted back on hers.\n\n\"At least you're a gentleman, unlike many around here. Now maybe my comment that day in your driveway doesn't sound so arrogant or off the wall.\"\n\n\"I don't understand. What are we talking about?\"\n\nHer eyes widened for a second, then she got it and burst into laughter. \"Well-played.\"\n\nShe settled into her chair. \"I don't mind men finding me attractive, and I don't mind a subtle look. I do mind a stare. I super mind a catcall. And they can shove the unsolicited propositions up their asses.\"\n\n\"Not every guy, surely?\"\n\n\"I dunno in this town. I bet if I turned around suddenly right now, I'd find every single guy in the place trying to guess my bra size.\"\n\nI let her see my eyes flicking surreptitiously around the room as I judged. \"Not Richard, the owner. The guy in the corner booth has his back to you, so not him. The two teenagers to the right, maybe, yeah, I guess.\" I ran through the other males in the room, ending with, \"So about fifty or sixty percent. That's enough that I'll concede.\" \n\n\"Thank you. I appreciate a gracious loser.\" She picked up her menu and bent over it. Just as I took a sip of water, she said without glancing up, \"It's 32G if you're wondering.\"\n\nI tried not to choke as it went down the wrong pipe. She ignored me though I could see the grin as she examined the choices.\n\nI waited for her to take a swallow of her drink. \n\n\"Novel icebreaker: hinting for lingerie.\"\n\nI laughed as she snorted water.\n\nIt wasn't a bad morning. I was able to let go of my earlier rancor about being judged. I deflected a lot of the talk away from me and found out about her.\n\n\"Jim Harvey is my uncle. When I graduated from vet school, I worked for a while in upstate New York, but the practice wasn't going to take on any partners. I was always going to be just a hired hand. So, when Uncle Jim said he was starting to eye retirement and did I want to think about Pennsylvania&nbsp;...\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nCoffee one day with Avery turned into coffee every couple of days. I can't claim it was my doing. Habits are ingrained after a year, and I was perfectly content with my morning chats with Linda if she wasn't too busy, and reading my book if she was. But Avery would occasionally show up at my habitual time and ask to join me. Conversation with her broke the solitude as much as talking to Linda.\n\nWe'd talk about people she'd met in the area. \"What is he really like?\" she'd ask.\n\nI'd give her my insider perspective while keeping everything personal that I happened to know out of the conversation\u2014letting her know about the hidden currents that any small town possesses and which could trap an unwary outsider. \"He's Edna at the Sunoco's niece's husband, so anything you say in the convenience store is going to get back.\"\n\nSometimes, she'd take an interest in whatever I was reading. I suspect it was feigned since she'd never read any of them, but it was still fun to talk about a book. After the second week, she turned to me as we were heading for our cars.\n\n\"So, are you planning to ask me out any time in the next century?\"\n\nI stifled the automatic\u2014and true\u2014response that I didn't think about asking women out very much. \n\nEver since my wife, Anne, had decided that small-town life sucked, that big city was where it was at, and that any guy who didn't see that was a loser, things had gone downhill in the dating department for me. It had taken me a while to get over the shame and hurt of being left, of course, but once I was ready to make a few tentative overtures, it was too late.\n\nRumors had been left behind. When I told Madison that I knew who started them, I wasn't lying. I knew it had been Anne. Or more accurately, Anne's father, Carl, but I'm sure after speaking with his daughter. \n\nAnd what woman wants to say yes to a guy who abused his wife? They don't have any desire to get a backhand once he's had a few. I didn't have any quibble with that. Steer away from those kinds of guys like the plague, and if you can't, use a baseball bat. \n\nWhat I did have was a quibble with people who'd known me my entire life thinking I was one of those guys based on nothing more than whispered innuendo and not bothering to ask me my side of the story. Now I decided to rejoin the game. \n\n\"This Friday?\" I answered her.\n\nFriday dinner earned Saturday dinner and going to hear a band after. That led to a more upscale dinner the next week, and Avery in a cocktail dress was a sight to behold. My random, useless thoughts about ladies of the evening from weeks back were now firmly rechanneled into my dinner date.\n\nI was hesitant to push things too fast. I'd always been that way, uncertain that I was reading a woman's signals correctly. Anne had had to put a lip lock on me in the back row of a theater before I got the hint.\n\nBut it had also been a long time. So, I ignored the butterflies. I leaned in slightly after that nice dinner and was gratified that she met me there for a nice kiss, followed by one even warmer and longer. And one date later, curled on my couch for more extended making out, I tentatively slid a hand where I'd wanted to slide it for quite a while. She didn't object. \n\nBut I didn't ask, \"Stay?\" \n\nI told myself it was because I knew that Madison was upstairs in her room. The truth was, Madison certainly knew all about the birds and the bees, and a little breakfast awkwardness wouldn't be all that awkward. The truth was, I was shy about women, and Avery had made no secret of being touchy about men's advances.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"It's a little chilly in here, can you stoke up the stove?\" Avery asked as we came home from listening to a new band at Larghie's. \"Where's Madison?\"\n\n\"Out with friends.\"\n\nI added kindling until a pleasant-sounding crackle filled the room and then tossed on a couple of larger pieces. I let her pick the movie. She chose When Harry Met Sally, which was fine with me; it wasn't a bad movie.\n\n\"Beer?\" she asked. \"I'll get them.\"\n\nWhen she came back in, my jaw dropped. The long tails of her man's-style shirt provided some minimal coverage for the pink lace that peeked out as her legs moved without the encumbrance of her skirt. As I started to say something, she cut me off, staring at the TV.\n\n\"Ssh! This is one of my favorite scenes. Sally's so full of shit. Of course Ilsa wanted to be with Rick.\" She dropped onto the couch next to me, handed me my beer, and put her head on my shoulder. As I continued to stare at her, she added, \"Pencil skirts are too tight to be comfortable to sprawl in. Now pay attention to the movie.\"\n\nWhen the scene finished, she sat up. \"We need munchies. I saw some chips. Be right back.\"\n\nShe was right back. Her shirt wasn't. And Avery in a plunging bra was a sight to strike a man dumb, and dumb I stayed. Again, she snuggled up against me. When I put my hand on her thigh, she smacked it away playfully. \n\n\"Down boy. We've got a lot of movie left.\"\n\nWe watched. I'm not certain what thoughts were going through her head. She was enjoying the movie, but I saw the faint smirk at the effect she was having on me. For my part, I was paying little attention to the story despite my eyes being pointed toward the screen. Excitement and anticipation and surprise were too much of a distraction.\n\nThe restaurant scene brought a dirty chuckle from her; she knew what thoughts Meg Ryan's performance was evoking in me. \n\n\"Another beer?\" She hopped up.\n\nIt was a no-brainer than I was watching as she came back from the kitchen. The sight of her breasts swaying free as she hipped her way through the swinging door made my mouth go dry. She handed me the cold beer and sat down. Her eyes were on mine; mine were traveling up and down. \n\n\"You're not going to watch the movie, are you?\"\n\n\"Umm, no?\"\n\n\"You promised we could watch a movie. If I give you a blowjob, will you settle down?\"\n\nThe question was a hundred percent more erotic for being so casual. The crinkles around her eyes from suppressing a smile and faking a frown told me she knew that.\n\n\"Umm, yes?\"\n\nI gasped as a beer-cold hand slid inside my waistband to grasp me. She let it warm there while she leaned in for a kiss, then turned to my belt and pants. \n\nI gasped again as a warm mouth wrapped around me. This was no tender tease of foreplay. This was a wet, raunchy blowjob&nbsp;... filled with pops of suction and satisfied noises of \"mmm\" as she slid off the head, sloppy saliva everywhere, and hot hands stroking, cupping, and gently squeezing. I warned her. Then I came in what felt like a tsunami deep in her mouth, as she milked the base of my cock to encourage me.\n\nWhen it was over, she sat up, primly wiped her lips with her fingers, then dried them on my flannel shirt with a giggle. She settled back against my shoulder.\n\n\"Now can I watch my movie?\" \n\n\"Umm, yes?\"\n\nShe gave a throaty chuckle, then added quietly, \"You are so going to repay that when this movie ends.\"\n\nAs the credits rolled, she slid further down on the seat and leaned her head onto the sofa back. \n\n\"Ahem.\"\n\nI recognized my cue and moved to kneel in front of her. I used my fingers at first, touching her through her panties, stroking a line, pressing in a little as I passed over her opening, letting the cloth's friction start things in a slow, steady rhythm. \n\nAs I felt the first hint of moisture seep through the fabric, I slid a thumb in through the leg opening to stroke. A teasing entry: first just the merest tip, then to the first joint over and over. As her excitement built, I drove in deeper, plunging in as far as my thumb could, drawing out the wetness to lubricate her lips and clit. She began to make tiny purring sounds, and I hooked her panties and pulled them down.\n\nI did as she had done. This wasn't a tease to edge and warm someone up for something else. This was the something. \n\nI stabbed my tongue as deep inside her as I could, then drew it up along the length of her pussy to stroke softly over her nub. I buried fingers up inside her, hunting for the feel of her G-spot. I found the pressure and pace that made her breath quicken the most, that caused her hips to work in counterpoint. She had sucked me until my brain had whited out, and now I was going to finger and lick her until hers did the same. Until her center told her mind, which told the rest of her body to tip over that same delightful precipice.\n\nI heard her breaths shallow and shorten. I felt her thighs begin to tremble. I kept the pace exactly the same. \"When it's working, don't change things\" had been advice from a long-ago girlfriend; advice I agreed with because I felt the same way when on the receiving end. \n\nShe shuddered with a drawn-out cry of \"fuuu\" and still I kept going. Only when her hands clutched into my hair and pressed hard to pin me did I stop, leaving the warmth of my lips in place, the sensation of my fingers still stretching her, but staying still as she rode out a second and third shock with only her own jerks creating friction.\n\nWhen she came down, she lifted my soaking face from her pussy. She met my eyes and smiled.\n\n\"Best ending to that movie ever.\"\n\nAn hour later, she sighed in post-coital contentment and relaxed on my chest. She leaned up and kissed me, then slid back, pushing lightly at my arm.\n\n\"I like the right side of the bed. You scoot over,\" she said.\n\nOh.\n\nThat seemed like a simple thing, but it wasn't.\n\nI'd slept on the right before I dated and then married Anne. There was nothing complicated about why: I liked to sleep on my left side, and that made that edge of the bed easier to get in and out of. Anne changed that.\n\n\"I need my space when I sleep, Will, and prefer to face away. And I don't like looking at a wall so close to my face.\" The bed in our first apartment had been near to the wall on the left side. \n\n\"Besides, the outlets are on the right side and I have more things to charge than you do.\" She did: phone, watch, iPad, headphones, Bluetooth speaker, laptop, PowerCore portable charger in case any of the above gave out during the day. Anne did her best to single-handedly keep the rechargeable battery makers solvent.\n\nSo, I had moved to the left. It wasn't a big deal, although I didn't sleep as well on my right side and she didn't like me \"staring at her back\" by lying on my left. It wasn't a big deal.\n\nAnd habit kept me there for a couple of nights after she left. Right up until I dropped the C-word in a moment of utter rage during her \"yeah, I've run off with your friend and you owe me half of everything\" phone call. She responded in kind.\n\n\"Yeah? Well, I fucked him once in our bed. What do you think of that?\"\n\nThe thing was, I knew all about sex with Anne. And one of the things I knew was that Anne didn't get the wet spot. Sex was on the other side of the bed. Damned if I was going to sleep in their leavings\u2014metaphorical because I replaced the mattress, but still a powerful image\u2014and I reclaimed the right side.\n\nAnd easy-going Will of yesteryear had become not-so-easy-going Will of today.\n\nSo now I told Avery, \"I don't sleep on the left side. We can cuddle here if you want.\"\n\nIt startled her; I could tell. I guess she was accustomed to any guy getting into her pants being putty in her hands. But she smiled. \"Huh! Well, I can't promise you won't get an elbow in the gut when I'm asleep. I'm used to having my space.\"\n\nI pushed aside the knee-jerk those words caused. We were a new couple trying to find boundaries. I pulled her in close and distracted myself with the delicious sensation of tits-against-ribcage.\n\n<center>\u2022 \u2022 \u2022</center>\n\nEvery week, Madison carefully handed me twenty-five dollars. We'd compromised on that. She'd originally tried to give me thirty-six plus a quarter. \"You said an hour's pay. I work five days right now. Five times seven-and-a-quarter is&nbsp;...\" She shook the money in her hand.\n\n\"Not five full days. You work half-time. That's about eighteen dollars.\"\n\nI didn't really care. I would have been fine with nothing. The original proposal had been when I was still uncertain about the whole Good Samaritan thing. It cost me almost nothing to have her around, and I liked the company. On the other hand, I could tell it was important to her and I understood. So, twenty-five&nbsp;... which I dumped into a separate account.\n\nTwo weeks later, she approached me with a roll of bills. \"I've never opened a bank account, but I don't want this just sitting around. Is it easy?\"\n\n\"Yep.\" I drove her to the bank. On the way, she chattered along.\n\n\"I had a bank account for birthday money and babysitting, but my mom started it. It was one of those custodial things because I wasn't eighteen. Last week I had Drew drive me to a branch of that bank here, but they said my mom has to fill out paperwork for it to become mine. I can't force her until I'm twenty-one. By then she'll probably have spent it on shoes,\" she said morosely.\n\n\"What bank was that?\"\n\nI left her with the assistant manager. I could tell she wasn't feeling confident, but sometimes you just have to learn to do stuff yourself. \"I'll be right over there,\" I said, pointing to the waiting area. I got on the phone.\n\nWhen she came over with a sheaf of paperwork and a temporary ATM card, the grin on her face told me letting her do it alone had been the right move.\n\n\"So,\" I said as we got in the car, \"what the bank told you was correct.\" She looked puzzled. \"The other bank. There's something called the age of termination, and in Oregon, that's twenty-one. Until that age, you can't force a custodian to give up control of an account. But\u2014\" \n\nI held up a finger to forestall the frown. \n\n\"You do have the right to demand access to online statements. And it's a felony for the custodian to use the money for anything other than&nbsp;... and here I'm quoting&nbsp;... 'the express benefit of the child.' That means you can watch it like a hawk and call her out if she buys any shoes.\" I matched her grin with one of my own. \"Think of it as a two-and-a-half-year forced savings plan.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"I'll be out late,\" Madison said to me.\n\n\"Okay.\"\n\n\"Drew and I have been talking.\"\n\n\"Okay.\"\n\nShe waited to see if there was any more. It amused me to think she felt I'd interfere.\n\n\"I'm not your father, and you're eighteen. So, have a good time and turn the lights off when\"\u2014I almost said \"if\" but I stopped myself just in time\u2014\"you get home.\"",
        "\"You don't mind? I mean&nbsp;...\" She fumbled around for words. \"I mean that it's, like, Drew.\"\n\nI wasn't going to touch that. \"Look. You're a smart woman and you'll make up your own mind. And I'm the last person in the world to be handing out relationship advice. Divorced, remember?\"\n\nStill, she hesitated. Then I could almost see her bite the metaphorical bullet.\n\n\"Why are you divorced?\"\n\n\"Because my wife ran off with one of my friends to live in New York City, and for some odd reason, I wasn't okay with that.\"\n\nThe sarcasm didn't deter her. She dropped into the chair across from me. She waited expectantly, clearly wanting more. Did she have zero concept of boundaries? If she didn't, I did. I stood and went back to the den.\n\nAvery came over and we were in the den later when we heard the outside kitchen door open. By some trick of acoustics, anything above a whisper in the kitchen could be heard clearly in the den. Drew probably thought he was being quiet, but we could hear the masculine grumble. \"He's in there? Fuck, I better go.\" I met Avery's eyes in shared amusement. \n\nThat was followed by a few words of Madison's quieter hiss, \"... polite&nbsp;... say hello.\" \n\nThey pushed through the swinging door. I noticed the surprise on both of their faces at Avery's presence. Madison knew about the two of us. We'd been through that awkward-morning moment, handled with aplomb by the two women and with a red face by the man. But I'd driven, so Avery's car wasn't in the driveway.\n\n\"How are you doing, Dr. Liaci? Everything going okay?\" Drew's question to Avery pulled my attention away from Madison to him.\n\nThe question had been to Avery, but his eyes were on mine, and his face was tight.\n\n\"Uh, why yes, Drew, it is,\" she answered. I could see the tone of his question wasn't lost on her.\n\nThe moment dragged for that fractional-second that edges into uncomfortable. If I had been alone, I'd have poked the bear with something like \"Anything wrong, Drew?\" as part of my no-fucks-given approach to opprobrium. But I wasn't alone. I was with a woman who was spending the night, and three minutes ago, my thoughts had been on lechery. I wanted to be back in that mood.\n\n\"Why don't you two go out into the living room?\" I said. \"That way you'll have privacy.\"\n\n\"What's his malfunction?\" Avery asked as we closed my bedroom door behind us.\n\n\"He's Patrick Mackey's son.\" I handed over the whiskey I'd been carrying for her, her hands being full of overnight case and purse.\n\n\"And what does Patrick Mackey have to do with anything?\"\n\n\"Patrick and I were in high school together. Along with Anne, my ex. He wanted her; they even dated for a short bit. But I got her. He eventually married Drew's mother, but she got sick and died a few years back. After a little while, he made a pass at Anne one night when I wasn't around. She turned him down, but it rekindled the jealousy.\" I stopped and took a sip of my drink before continuing.\n\n\"When Anne and I came back and started to fight about living here, he got wind of it. He thought his second chance had arrived. Then, she did the runner to New York. He went ballistic that I drove her away. \n\n\"He confronted me in a bar one night, stinking drunk. Said that, even though I was too pathetic to hold onto a woman, I shouldn't have spoiled it for someone who could have. He tried to take a swing at me, but some others pulled him back. Lucky for me.\" \n\nI smiled to show that I had a sense of humor about it. I did. After all, she'd dated him first, so who had had trouble holding onto a woman?\n\n\"You couldn't stand up to a drunk?\"\n\nI looked at Avery in disbelief. \"Have you ever seen Patrick?\" I didn't wait for an answer. \"He's about six-four, two forty if he's an ounce, and ain't none of it fat. High school may have been seventeen years ago, but I bet he'd be just as lethal a linebacker now as he was then.\"\n\n\"Hmm. Well, neither he nor Anne are here now, so why don't you figure out what you want to do with present company?\" One hand raised her glass to her lips for a sip; one hand started popping buttons on her blouse; both eyes twinkled.\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe sound of hammering interrupted our early morning sexy time. We managed to ignore it as Avery crossed the finish line like Willie Shoemaker, with me barely holding on to the end. As we lay there in a little sweat-soaked puddle, the rhythmic smacking sound filled the room.\n\n\"It's boiling in here, and it smells like someone had sex,\" Avery said. \"I'm gonna crack a window.\"\n\n\"If that's Doug, you'll give him a heart attack if you do it like that.\" My bedroom window faced his house.\n\n\"Improves the circulation in old men,\" she laughed, \"but he won't hear me over the hammering.\" She studied what my neighbor was doing. \"He's putting up Vote For signs.\"\n\n\"Primaries are around the corner.\"\n\nShe continued to look out. \"He must have fifteen signs up along the edge of his property, and there's a pretty distinct pattern to them. Oh look, another sign about an issue. He's one of those people who think they know all the answers about what's best for us.\"\n\n\"I think that might be an overstatement.\"\n\n\"Really?\" She gestured out the window as if to say the proof was right in front of her. \"Do you agree with those?\" I got up and walked behind her to look.\n\n\"Some yes, some no. But actually, Doug cares more about others than most people I know. The fact that what he thinks is right doesn't always match someone else's opinion or mine doesn't change that.\" I leaned around her and cracked the window. Doug glanced up briefly, causing Avery to step back, and then he went back to his hammering.\n\n\"Come back to bed,\" I wheedled. She did and a pleasant Saturday morning was made even more pleasant as she lay on her side with me sliding into her from behind, my hands overflowing with softness while one of hers reached back behind her head to pull me in to nuzzle her neck while we fucked.\n\n\"No hickeys!\" she laughed when my mouth became a little aggressive. I switched to nibbling on the lobe of her ear, continuing even when her hand left my hair to reach down between her legs and work herself in time with my thrusts until she exploded in her third of the morning and I followed shortly with my second.\n\nLater, when I went over to get Lucy for a walk, Doug held up a sign.\n\n\"Can I put this in your yard?\" He was grinning. He knew the answer. It was the same one I'd given him every year and my father had given him every year before that.\n\n\"Not a chance.\"\n\n\"Okay.\" As Lucy bounded up to me, he turned to go, then looked over his shoulder and winked. \"She appears to be an extraordinarily&nbsp;... healthy woman.\"\n\nI laughed and nodded. I debated whether to tell her. I couldn't decide if she'd be embarrassed and pleased, or embarrassed and irritated at two guys united in appreciation of what she'd had on display.\n\n<center>Chapter 3</center>\n\nThe greeting I got later that week when I wandered around Bothwell to find her after dropping off Madison was a lot cooler.\n\n\"I thought you said you and Anne just didn't agree on living in Seylerton.\"\n\nWell, I guess she's finally heard the rumors, was the first thought that popped into my head.\n\n\"No. I did say that we didn't agree on living here, but I don't think I used the word 'just' when I did. For example, we also didn't agree on her sleeping with a friend of mine.\"\n\nI wasn't trying for a sympathy vote, but if I had been, it failed. Her face didn't thaw. \n\n\"Nothing else?\"\n\n\"Everything else stemmed from that, so actually, no. Nothing else.\"\n\nThe still-tight jaw and sharp tilt of the head made it pretty clear my thought had been right. It also made it pretty clear what her reaction was. She thought my response was bullshit. She waited.\n\nI could tell that answering her silence with my own disconcerted her. Also, that she read it as unwillingness to admit my guilt.\n\n\"Nothing to say?\" The disdain was plain.\n\nDid she think I was going to plead and claim something like \"I'll never do it again\"? She hadn't read me very well in the time we'd known each other. Well, obviously&nbsp;... she'd already convicted me in her mind.\n\n\"So how bad were the bruises?\" I asked.\n\nThe non sequitur threw her. Her brow wrinkled in confusion. \"What?\"\n\n\"You know, the ones in the evidence pictures I assume the police took when I smacked her. I've never seen them. How bad were the bruises? Or did you only talk to people who saw firsthand the black eyes and choke marks? Maybe as a vet, doctors gave you some professional courtesy and you saw hospital reports?\"\n\nThe confusion was still there. Now it mingled with \"He's a freak.\"\n\nThe jaw tightened even more. She'd made her decision. \"I think\u2014\"\n\n\"I've seen no evidence that you do that,\" I interrupted. I turned and walked away.\n\nCarrie saw me stalking out. The expression on my face was certainly an indicator of my mood.\n\n\"Will?\"\n\n\"Patrick or Drew or someone talked to Avery. She bought it.\"\n\nThe concern on her face morphed to something softer. \"I'm sorry.\"\n\nMadison, standing in the doorway of the office, looked on with concern. \"See you later,\" I called over. \"By the way, Avery may be your friend, but she's not welcome in my house.\"\n\nI ignored the eyebrows shooting for the ceiling and headed home.\n\nLater, as she helped me put the dinner stuff out, Madison brought it up.\n\n\"Carrie explained what happened.\"\n\nI waited. Nothing. I waited for her to say \"sorry\" or ask how I felt, but she busied herself with silverware. Oh my God, was she finally learning boundaries? She could at least have said it was too bad that I was going back to a cold bed.\n\nI snorted inside at my hypocrisy.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"You should finish high school,\" I said over breakfast one morning.\n\nMadison froze.\n\n\"Well, or go to trade school if you want to be an electrician or something. But minimum-wage jobs forever is a bad plan.\"\n\n\"I'm not going back to Oregon,\" she said decisively.\n\n\"Finish here.\"\n\nFinally, in a small voice, she asked, \"I could stay?\"\n\n\"You can stay as long as you want. I like having you here.\" That brought a flush to her cheeks. She thought for a bit, then shook her head.\n\n\"Transferring credits from West Kincaid would mean letting the pedo and the bitch, like, know where I am.\"\n\n\"I doubt that. You're eighteen and I suspect you could do a transfer on your own. But if you're concerned about that, get a GED. You might have to study a lot, but&nbsp;...\"\n\n\"You have an answer for everything.\"\n\n\"Yes. I am far older and far wiser.\"\n\n\"You're a nerd.\"\n\n\"True.\"\n\nShe considered longer, then shook her head. \"Carrie's going to take me on full-time and&nbsp;...\" She paused, shook her head again. \"No. I need to get my shit together first, then I'll figure out my life. But thank you for, like, letting me stay.\"\n\nI shrugged. \"Thank you for reminding me how old I am by saying 'like' all the time.\" I ignored the tongue stuck out at me. \"And congratulations on Bothwell.\" I got up and dumped my dishes in the sink. \"Think about what I said. Minimum wage.\"\n\n\"My life's good the way it is.\"\n\nI let it go for the moment.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"She's back.\" Carrie's somber tone was a clue as to whom she meant. I was dropping Madison off and Carrie had pulled me aside.\n\n\"Anne?\"\n\nShe nodded. \"Apparently, all that glitters is not gold, including the streets of New York.\"\n\n\"What have you heard?\"\n\n\"It's all third-hand, so take it for what it's worth. Friends of friends of friends say that he turned out not to be a prince. He got what he wanted from her, and when he'd had his fill, he looked around elsewhere. When she raised a ruckus, he went elsewhere.\"\n\nFor a second, Carrie's eyes turned inward. For the umpteenth time, I wondered about her story, the two years away while her cousin managed the stable, the daughter, the varying and seemingly casual dates with bachelors in the area. But I knew I'd never know. Carrie was fiercely private. Her eyes came back into focus.\n\n\"Then she found out that rent prices there are nothing like here. Nor are food prices, paying for your own insurance, or any other real-world things. And when your job resum\u00e9 is thirteen years in small-town retail, high-paying jobs in New York aren't abundant. So, home seemed a good idea even if it meant Mom and Dad.\"\n\n\"Talk is going to flare up,\" I sighed. Her eyes were sympathetic.\n\n\"Probably. But you know something, Will? The people who are your friends, who can see what's plain as the nose on your face, they all couldn't be prouder of you.\"\n\n\"I've become a grouchy old man.\"\n\n\"That's true. You need to work on that. But you've also carried yourself with dignity. I'm glad you're my friend.\"\n\nComing from one of the people I respected most on the planet, it eased my reaction to the ominous news. We saw Avery turn out of a stall far down the row. Her eyes went to us, then shifted away.\n\n\"She's not her uncle,\" Carrie observed. \"Jim Harvey always said, 'Listen, think, ask, then open your yap.'\"\n\nI nodded. I'd heard him say it. It'd struck me as a Yogi Berra-ism at first, but it made more sense as I got older.\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe doorbell rang, and when I looked through the sidelight, the devil incarnate stood there.\n\n\"If you're looking for Cheaters Anonymous, I think it meets at the Ramada on Thursdays.\" My snide greeting disconcerted her, and she didn't respond. \"What do you want, Anne?\"\n\n\"I-I came to see if those boxes of clothes are still in the basement.\"\n\n\"Goodwill. Oh, isn't that funny!\" I fake-laughed. \"Bad Will gave them to Goodwill. Bye-bye.\" I started to close the door.\n\n\"Will, please!\"\n\nI swung the door wide again. \"What?\"\n\n\"Can we talk for two seconds?\"\n\nI debated, then let her in the door, but I didn't offer her a beer or a chance to sit down. She stared at her feet for a second, the fingers of her right hand working convulsively. That had always been a sign she was nervous.\n\n\"So?\"\n\n\"I didn't come for the clothes. I was ninety-nine percent certain that nothing of mine was left in this house.\"\n\n\"Six years of marriage. I guess you learned a thing or two about me.\"\n\nShe gave a little nod. \"I-I came because I've been hearing what's going around town. At first, I didn't realize what they meant when they commiserated with me, then I did. It shocked me.\"\n\n\"It's pretty much what one would expect when your wife brands you an abusive husband.\"\n\n\"I didn't actually say that,\" Anne protested.\n\nI gave her a look that made it clear just how much I wasn't buying that. \"If you didn't say it, you implied it. And you certainly never denied it.\"\n\nShe didn't say a word. Anne always clammed up when she didn't want to admit she was wrong. I waited her out. If she wanted to talk, fine, but I wasn't going to whitewash over bullshit. She caved.\n\n\"I'm so sorry, Will. I wasn't thinking right.\" If I hadn't known how easily she could turn on the waterworks, I might have believed the tears that threatened to spill. \"I was stressed, and my parents were on my case. Mom was yelling at me. Dad had done that ice-cold thing he does. I was afraid they'd never speak to me again. So, when he asked if there was some reason I felt I needed to leave town, I just said I needed to get away from you and let him jump to conclusions.\" She looked miserable. \n\n\"I'm so sorry. It was a horrible thing to do. If it's any defense, I never imagined that anyone in town would believe that of you except my family. I thought everyone would just say it was ridiculous and no way Will Dannreuther would do that.\"\n\n\"People love dirt. And your dad knows a lot of people in this area.\" I stood. \"Time for you to go, Anne. I don't feel like talking to you.\"\n\n\"I'm so sorry.\"\n\n\"Fine. Time to leave.\" \n\n\"I just want to apolo\u2014\"\n\n\"Time to leave.\"\n\nShe stared, stricken. Then she turned toward the door. She looked back over her shoulder. \"The bridges are burnt, Will?\"\n\nI looked at her in complete and utter astonishment. That was answer enough. She nodded and opened the door, then hesitated again.\n\n\"I lied about having sex with him in our bed. I was trying to hurt you. The only time we did it before I left was once at the Motel 6.\"\n\n\"Only once. Imagine my relief. Okay, I'll add one needlessly destroyed mattress to the list of things you cost me then.\"\n\nShe gave a jerky little nod and left.\n\nI found Madison sitting in the kitchen when I went to get a drink. She had trouble meeting my eyes. She had heard the conversation. Whatever. I headed back to the office to get some work done.\n\nBefore I reached the door, she spoke. \"Will?\"\n\nI stopped and turned back.\n\n\"I'm sorry I doubted you. I should have known better after the way you've treated me.\"\n\nI shrugged. The bitterness was eating me up right at that moment. \"You barely know me. I grew up in this town and they all doubted. So, don't beat yourself up about it.\"\n\n\"Maybe. But I know what it's like not to be believed. I guess I'm no better than my mom.\"\n\nThat stopped me. I turned back a second time. \"No. I'm just someone you know&nbsp;... and not even all that well. She was someone whose entire job was to protect you. She didn't even try. You're not the same as she is. At the risk of sounding like an asshole, you had two parents who didn't have a clue about what being a parent meant.\"\n\nI turned and went to the den and a Married With Children episode, another of my dad's favorites. Fuck working. But nostalgia-based entertainment wasn't enough. I put on some Pearl Jam, switched it for Nirvana, and buried myself in my book. A little while later I heard her call, \"I'm going to take Lucy for a walk.\" \n\nI felt a little guilty; I knew Madison didn't care for grunge. But it's my house, and my even keel of existence had just gotten rocked by a rogue-wave bitch of an ex, so I didn't feel too bad. I lived with Maroon 5 blasting from her bathroom when she showered.\n\nI was surprised the next morning when I went out to get some wood. Doug walked over.\n\n\"For a while now,\" he said by way of greeting, \"I haven't known whether to listen to my gut or my ears.\"\n\n\"What?\"\n\n\"Madison talked to me a bit when she came by for Lucy yesterday.\"\n\n\"Oh.\"\n\n\"You may not know this, but the Whites are second cousins of my late wife.\" I hadn't. Anne had never mentioned it, but in an area with so many old families who had intermarried, that wasn't surprising. She was probably related somehow to half the people in the area. He nodded. \"Yep. So, while my gut was telling me one thing, family grapevine was saying something else. It made me careful. I hope I wasn't too much of an asshole to you. I tried to stay neutral.\"\n\n\"You weren't an asshole at all, Doug. Just distant.\"\n\nHe nodded again. \"No hard feelings?\"\n\n\"You didn't know, and family's family. So no, no hard feelings.\"\n\nHe smiled, probably the first really warm smile he'd directed at me in over a year. \"I called Carl and told him the story he'd been fed was a load of horse manure.\"\n\n\"What did he say?\"\n\n\"He told me to go fuck myself.\" Now he barked a laugh. \"Carl takes a while to change his mind, but he gets there eventually. Anne's in for a tough conversation with her dad in the near future.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Tell me what really happened,\" Madison said to me over dinner two days later.\n\n\"Huh?\"\n\n\"With your wife.\"\n\n\"She's not my wife. I have a piece of paper to prove it.\"\n\nShe rolled her eyes. \"With your ex, then.\"\n\n\"No. It's none of your business, and it just dredges up stuff I'd like to forget.\"\n\n\"People are telling me all kinds of crap, and I don't know what to say to them.\"\n\n\"Say nothing.\"\n\n\"I know for a fact you didn't abuse her. So, what was the real reason she left?\"\n\nI got stubborn and shook my head. She got stubborn. Guess what?\n\n\"Anne and I lived in New Jersey after we got married. Her dream was to get an apartment in Manhattan, and I said okay. I didn't truly want to live in the City, but I figured I could hack it for a year or two. Compromise, you know?",
        "\"Then my dad got sick with cancer. Mom had died years before. We moved back here to take care of him, thinking it would only be for a couple of months at most. It turned out to be over a year. She made a few comments about the situation, but even she knew that saying we should abandon him was a step too far. Then he died.\" I paused and took a sip of my beer.\n\n\"That's when things started downhill. I wasn't willing to sell this place; I'm the fourth generation in this house.\"\n\n\"Wow,\" Madison said. \"That's, like, forever. I think the longest I've lived anywhere was about five years.\"\n\n\"Yeah, it's important to me, and I'd like to raise kids here someday.\"\n\n\"So why not keep it?\"\n\n\"Because selling it was the only way we could have the down payment to buy a place in New York. Suddenly that's what renting an apartment in Manhattan turned into&nbsp;... buying a condo in the East Village. She'd paint this picture of having lunches in cute little places with artsy friends. She'd tell me I'd like going to boho bars where we guys could try whiskies. Not that either of us knew anyone in New York.\n\n\"I had no idea how we'd afford that. Anne hadn't had a job in a year, and on just my salary, the mortgage and taxes would have killed us. I guess I should have hammered on that instead of blowing up. But I didn't. Instead, I dug in a little harder than maybe I should have.\n\n\"I told her no fuckin' way were we spending over a million bucks to get a one-bedroom place just so she could go to 'cute' little places for lunch. I said flat-out no to selling this place. I said another no to moving back to New Jersey if the goal was saving to buy in New York. We could save a lot faster out here. \n\n\"That, apparently\"\u2014my voice oozed sarcasm\u2014\"was tantamount to torture. Expecting her to endure Seylerton when she'd already been successful at shaking its dust off her sandals once&nbsp;... oh my God, the inhumanity! It was headed for a knock-down, drag-out fight.\"\n\nI snorted, bitterly amused at the memory.\n\n\"But it never came.\" \n\nThat startled Madison. \n\n\"Nope. A month later she just left. And you know how she whitewashed the reason to make herself not look bad.\"\n\nI looked over at her. She was rapt.\n\n\"And now I've met you more than halfway, so leave me alone.\"\n\n\"There's more to the story.\"\n\n\"Go away, Madison. Leave me alone.\"\n\nI went up to my room, closing the door firmly.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Hey, Madison,\" I called out.\n\nShe stuck her head in my door.\n\n\"I want you to take a look at something I found.\" I turned the monitor so she could see it. It was a page on the Oregon State Police's site entitled \"Missing Persons.\" I pointed to a picture of a dark-brown-haired teenager with pale skin and a light scattering of freckles on her nose. Below it was a name, age, height, weight, a \"last seen\" date, and contact information for the West Kincaid Police Department.\n\n\"Look familiar?\"\n\nShe stared at it silently.\n\n\"The thing is, while I know you don't give a damn about Dave and probably not much of one about your mother, I suspect there are friends and maybe other family who are probably heartbroken.\"\n\n\"I called my best friend from my dad's before I left Boston and told her I was okay.\"\n\n\"But I'm guessing you swore her to secrecy, or we wouldn't be seeing this.\"\n\nHer expression got stubborn. \"I'm not going back.\"\n\n\"No one's saying you should. But maybe you could let the rest of the people know?\"\n\n\"You want me to call them?\" At my shrug, she shook her head. \"Then I'll have to deal with all the calls from everyone.\"\n\n\"Have you heard of blocking your number? You know, star six sev\u2014\"\n\n\"No!\" She cut my teasing reply off. \"I don't feel like dealing with all the 'you have to come home' bullshit. There's enough stress in my life without that drama. I don't want to talk to anyone yet.\"\n\n\"Spoken like someone who's not ready to be on their own.\" I let a little whip creep into my tone. \"People are hurting right now. I don't know anything about your life before, but I know that much because you're the type of person who would have had people who cared.\"\n\nShe didn't want to meet my eyes. When she finally did, I saw a little extra moisture in the corners. \"Will, I'm afraid I'll cave under the stress of arguing, and my life will fall apart again just when it's getting on track.\" It was a plea, not defiance.\n\n\"Then send a video from a temporary email account and delete the account after.\"\n\n\"You've got an answer for everything, don't you?\"\n\n\"What can I say, young padawan? The master, I am.\"\n\n\"You're such a nerd.\" She said it with a certain amount of affectionate amusement despite her upset. I could see the wheels turning.\n\n\"Can I say whatever I want?\"\n\n\"It's your video.\"\n\n\"If I do this, I'm not going to come across as, like, some stupid-ass bimbo who just ran away because her parents wouldn't give her a new phone.\"\n\nI shrugged.\n\nTen minutes later, she played me the first version. \n\n\"It's your call,\" I said. \"But I bet you're open to a charge of libel since you give his name and accuse him of being a pedophile.\" She looked mulish. \"Madison, do you need more problems right now? Legal ones?\" After a few seconds of struggle, I could see the message sink in.\n\nAbout thirty minutes later\u2014I suspect after several attempts based upon the continuous stop and start of not-quite-intelligible talking I heard\u2014she came back. The friendly dark-brown-haired woman stared at the lens, not smiling but not frowning either. The backdrop was a plain putty-colored wall with a lighter square where a picture was taken down: the front hall.\n\n\"This is for police officers who are looking for Madison Dwyer of 218 Forest Glen Drive in West Kincaid. I didn't know you were looking until a friend showed me your Missing Persons page. Thank you for being concerned, and I'm sorry for any trouble you took on my behalf. This is just to let you know that I'm not dead and not trafficked somewhere. See?\" \n\nThe selfie video showed her moving to the front door, taking a key out of her pocket, and opening it. \n\n\"Not locked in an upstairs room somewhere, not hooked on heroin. I needed to leave because I was only seventeen and really didn't want to have sex with a man old enough to be, like, my father. I'm now eighteen. I'm an adult. I'm doing fine and I'm not coming back.\"\n\nBefore I could consider any more, she clicked Send.\n\n\"It's going to the police, to several high school friends, my mother, and my aunt so that the family will know in case Mom pretends she never got it.\"\n\n\"Well, that will set tongues wagging,\" I observed.\n\n\"I hope so. The age of consent in Oregon is eighteen. I checked.\" She met my look. \"Fuck him.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"I'm Tammy Strickland, Madison's mother.\"\n\nThose words, spoken by the woman who had just rung my doorbell, certainly weren't what I expected that day.\n\n\"What are you doing here?\" \n\nThe words came from behind me. I turned to the hostile young woman behind me.\n\n\"I've come for you, Maddy.\"\n\n\"How did you find me?\"\n\n\"I hired an agency that looked at some kind of address on your email and then they tracked it down by what they could see out the front door in your video.\"\n\nMadison looked at me accusingly. I had been the one to suggest she contact home.\n\n\"Hey,\" I said. \"I should probably have considered IP addresses, but I wasn't the one who took a picture of my street or hit Send before anyone could think about it for two seconds.\"\n\nShe grimaced and shrugged to admit the fairness of that.\n\n\"I'll be in the den,\" I said firmly. \"You two can use the living room.\"\n\nTen seconds later, Madison poked her head through the den door. \n\n\"We're going to be in the kitchen, not the living room. Please stay here,\" she said. At my stare, the corner of her mouth quirked slightly. She remembered how easily one could hear what went on in the kitchen from the den. \"So you'll know,\" she said enigmatically.\n\n\"I've come to take you home, dear\" was Tammy's opening salvo. No \"How are you?\" or \"I've missed you.\"\n\n\"I'm not going with you.\"\n\n\"Maddy, you are. I know you think you're an adult\"\u2014Tammy ignored the quiet \"I am\" and bulled on\u2014\"but you're not really. You haven't even graduated high school yet, so you're hardly prepared to face the real world. I mean, come on! The very fact that you've failed your senior year and haven't graduated is proof enough.\"\n\n\"I'm not going with you.\"\n\n\"This isn't your home.\"\n\n\"Will's fine with me being here.\"\n\n\"Maddy, there's only one reason an older man keeps a young woman around, and it's not a good\u2014\"\n\n\"A fifty-one-year-old man?\"\n\n\"Will doesn't look fifty-one to me. I think he's probably mid-thirties, but that's a big gap at this stage in your life.\"\n\nI had to bite my cheek to keep from laughing. I didn't know anything about Madison's stepfather, Dave, but I'd bet he was precisely fifty-one years old. \n\n\"Maybe he is.\" I could hear the twin to my amusement in Madison's voice. I wondered if Tammy could and wondered what it meant. \"But whatever Will's age is, he's been more of an adult role model than my parents&nbsp;... or step-bastard&nbsp;... ever were.\"\n\n\"Oh, honey. I know it can seem that way. I was eighteen once myself, and I know how profound someone a little older can seem. But you have to trust me&nbsp;... trust us. We're doing what's best for you.\"\n\n\"Whoa! Doing? What are you doing?\"\n\n\"I'm taking you home. If Mr. Dannreuther makes any trouble&nbsp;... well&nbsp;... Dave has already contacted an attorney in the area. He advised him about the situation of a young girl being isolated with an older man and asked him to contact the relevant authorities. And based upon some things I heard when I got to town, I called the attorney to add that I had evidence that your physical wellbeing was in jeopardy as well as your&nbsp;... umm&nbsp;...\" Tammy trailed off.\n\nYou could hear a pin drop in the silence as Madison absorbed this news. When she spoke, her voice was controlled.\n\n\"I'm ashamed that you'd lie about a good man just because you resented the fact that he'd replaced my worthless mother.\"\n\nI don't know which was more of a shock for Tammy, the echo of the very words she'd said to her daughter, the arctic tone in which they were delivered, or the scathing judgment they contained.\n\n\"I'd slap you too,\" Madison continued, \"but I don't want to sink to your level. For your information, not that, like, you deserve it, Will worked very hard to keep me out of his bed. You hear me? Not in. Out! So there&nbsp;... Mom.\" The tone thawed on that final word, revealed the molten anger underneath. \n\nTammy made the mistake of bringing her husband into it. \"Dear, Dave is willing to forget the whole thing. You misinterpreted his natural desire to be a father to you and talk about your relationships with the boys in your school. You overreacted. We'll put this\u2014\"\n\nI could hear the shock Madison felt etching her every word. \n\n\"Oh my God! You're actually, like, trying to pin this on me.\" The tone morphed into pure battery acid.\n\n\"Fuck you both! I will never go back to that pedophile, and I will never go back to a mother who refuses to believe her own daughter when she's molested. Leave.\" As her mother started to protest, Madison's rage finally broke free and her voice skyrocketed. \"Get out! And tell your fucking lawyer that when Will sues all your sorry asses for slander, I'm going to testify that you admitted you made all of it up.\"\n\n\"Maddy!\" The cry was plaintive.\n\n\"Get. The fuck. OUT!\"\n\nIt was time to intervene. As Tammy started another protest, I stepped into the room.\n\n\"Ms. Strickland. It's time for you to leave.\"\n\n\"You! This is none of your\u2014\"\n\nI cut her off by moving into her personal space. \"Now.\"\n\nShe shrank from the anger radiating from someone six inches taller and a hell of a lot stronger. \n\n\"Don't you dare touch me!\" she screeched. She reached over and grabbed Madison's elbow. \"Maddy, come on, we need to go.\"\n\n\"I wouldn't dream of touching you,\" I said. I pulled out my phone and dialed. Madison steadfastly refused to be compelled, and the little tableau held as my call went through.\n\n\"Hello. This is Will Dannreuther at 83 Pine Street. Could you send a patrol car? I have someone trespassing who refuses to leave.\" Tammy's eyes opened wide. \"No, we're not in danger. We know the intruder, and she's no real threat.\"\n\nAfter thanking the dispatcher and hanging up, I gave Madison a little nod. \"I figure five or ten minutes. The police will probably want to speak to you without me present. I'll be in the den.\" At the protest I saw form in her eyes, I added, \"It's okay. It's the right thing for them to do when someone might be being coerced.\"\n\nMy eyes swiveled to her mother, who stayed mute as I gave her a cold smile.\n\n\"If you're still here when they arrive, I will be pressing charges for trespass. And jerk on that arm any harder\"\u2014my eyes went to Tammy's futile pulling at Madison's elbow\u2014\"and I'll be glad to corroborate simple assault if Madison also presses charges.\"\n\nI'm sure Tammy's rental passed the patrol car as it came down Pine Street. She'd kept up her insistence almost to the last second, growing ever more infuriated at Madison's snide countdown of minutes.\n\n\"You didn't tell me they came to talk to you earlier,\" Madison accused me when they were gone. I'd been right: they had wanted to talk to her with me not present. I could see she was a little rattled; one-on-one with the police would do that to a teenager. As she would say, \"Shit just got real.\"\n\n\"I told them you had a house key, friends you went out with, and weren't at home because you'd been working at Bothwell for a while. Then I showed them your birth certificate\u2014sorry for going into your stuff\u2014to prove you were eighteen. They said they'd follow up with you tomorrow morning just to be sure.\" I smiled.\n\n\"Me mentioning Bothwell was what had them ease up. Everybody in this town would bust a gut laughing at the idea that Carrie Schaeffer wasn't capable of: A) figuring out that a young woman who worked for her needed help, and B) providing that help, even if it meant arranging an ass-kicking for some guy. Some of her hired hands are seriously tough guys, and they'd do anything for her.\"\n\nShe stared at me; I had no idea what thoughts were going through her head. Finally, she turned to go, then hesitated. She turned back. \n\n\"Is the offer of helping me figure out GED stuff, like, umm, still good?\"\n\nDefiance of a parent's judgment was always a potent motivator for a teen.\n\n<center>Chapter 4</center>\n\nSo, I got my ass kicked. Not super thoroughly, but enough that I wasn't happy.\n\n\"Danny boy!\"\n\nI knew without turning who that voice belonged to. Patrick Mackey. I was out on the side of the Sunoco station, putting some air in a tire.\n\nI looked up at the tall figure.\n\n\"You know Anne's back,\" he said.\n\n\"Yep.\"\n\n\"She didn't come back to you, though.\"\n\n\"Nope.\"\n\nHe smirked.\n\n\"Didn't think so, after what you did. Yeah, I know she's said maybe we got it a little wrong.\" I noted the \"maybe\" and \"little\" in that sentence and wondered how I'd ever liked that woman. \"Way I figure it, she's just too nice to keep kicking you now that you're down. She knows we all know what a piece of bird turd you are.\"\n\n\"You know what, Patrick? I don't give a rat's ass what you think. You want Anne, go for it. I stopped caring a while ago, long about the time she took up with Gordy.\"\n\n\"Even fuckin' shithead Gordy's better than you, huh? Anne and me've gone on a date, but she tells me she needs a little time before she even thinks about getting serious again. I can live with that. But you know what, Danny boy? You can't hold onto women.\"\n\nI didn't know or care what he meant.\n\n\"Well, Patrick, then I guess there's nothing to talk about. Have a nice day. Preferably somewhere else.\"\n\nBut he wasn't done with his entertainment for the day.\n\n\"You got yourself a new woman living with you now. I hear she's pretty young. Some slut you picked up off the street, I hear.\"\n\nThat made me angry.\n\n\"No, I wouldn't say she was a slut.\" Okay, anger can get you into trouble. Maybe I emphasized \"she\" just a bit too much. Okay, maybe it came out like it was the whole point of the sentence. I'm human and Anne had screwed me over&nbsp;... in addition to screwing Gordy.\n\nThe huge left hand grabbed the fold of my jacket and hauled me to my feet before I could react. The even huger right fist slammed into my gut.\n\n\"Don't you ever talk about Anne White that way!\" he hissed.\n\nI landed my own jab into his ribs. I know it didn't feel good to him. I wasn't weak even if I didn't play linebacker in school. But he just shook it off and hit me again. Patrick Mackey was big, and Patrick Mackey was strong. I was in trouble. He held me from collapsing as I tried not to vomit from the blows to my stomach. Serious trouble.\n\n\"PATRICK!\" The bellow came from twenty feet away. \"I've called the police.\" He let go of me, causing me to double over, and turned to see Edna, the owner of the gas station, standing there with her phone in her hand. \"I saw everything, including that you hit Will when he was defenseless.\"\n\nThe two of them locked eyes, but Edna won. Patrick was an utter asshole, but Patrick wasn't a bully. He didn't like the implication that he'd thrown a sucker punch. He glared at her, glared at me, then turned and stomped over to his truck.\n\n\"You okay, Will?\" she asked, her eyes following my assailant.\n\n\"In a minute, yeah.\"\n\nThe police arrived, checked that I was okay, and listened to what Edna had to say. They nodded. They were locals; they knew where the currents of bad blood lay in town and weren't surprised.\n\nOne of the two, Matt, walked over to me. He and I had gone to high school together.\n\n\"Want to press charges? Edna would rather not have to testify. Local boy and all.\"\n\n\"No. Though I wouldn't mind one of you putting a word in his ear that there better not be a next time.\"\n\nHe nodded. \"Absolutely. I'll do it.\" \n\nHe looked down at his feet then up to meet my eyes squarely. \"I heard from Old Man White that maybe Anne's story doesn't hold water.\"\n\nI was surprised. It had been a few weeks, but I hadn't expected Anne's father to change his mind no matter what Doug Hagerty said.\n\n\"Speaking for myself, I'm sorry I thought what I did. We have to take the woman's side seriously because statistics show&nbsp;... well, you know what can happen. But I'm sorry.\"\n\nMatt was a good guy, and he'd never singled me out the way a cop can if he wants to teach a lesson. I couldn't blame him because, yeah, women do become punching bags for their husbands more often than vice-versa. \n\n\"Don't sweat it. Just let Patrick know that next time, he's the one up on battery charges, not me.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nGod, my gut ached. So did my heart. What the fuck had I done to deserve a town despising me? Sure, some of them were starting to come around, but not all. \n\nAfter the police had left, Edna had looked me over. \"You good?\" she asked again.\n\nI nodded.\n\n\"I don't hold with beatin' on people.\" There was no mistaking the subtext. She saw me read her. \n\n\"But where there's smoke, maybe there's fire?\" I asked, trying to keep the sourness to a minimum. She'd just saved my ass, after all.\n\nShe shrugged. \"I dunno 'bout nuthin'.\"\n\nThe idea of a whiskey as an anesthetic sounded good. Not the ordinary stuff, some of that bottle of Balvenie 21 my dad had left.\n\nOne turned to two, both poured with a heavy hand. A modicum of common sense surfaced when it came time for the third&nbsp;... not that there wasn't a third because it was only a modicum of common sense. But I did realize I needed to switch to something that didn't cost two hundred and fifty bucks a bottle. I was pouring a Jameson's when Madison came in."
    ],
    "authorname": "chasten",
    "tags": [
        "runaway",
        "teen",
        "older man",
        "younger woman",
        "oral",
        "oral sex",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/coming-back-home-4"
}