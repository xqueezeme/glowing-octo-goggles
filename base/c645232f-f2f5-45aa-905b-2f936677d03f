{
    "title": "A Pleasant Surprise Pt. 03",
    "pages": [
        "Authors Note: All individuals depicted are over 18, this is an adults story concerning adults.\n\nTom was a deep sleeper and a slow walker, so when he slowly drifted into consciousness the next morning, his sleep-addled brain took a great deal of time to process the sensations his body was experiencing. Firstly, he was in an unfamiliar environment and he was pretty sure of a different bed, secondly waves of pleasure were radiating from his dick. \n\nHe very slowly came to his senses and realised that the bed he was in belonged to Ellie, and the magical sensations coming from his cock were being caused by the most beautiful girl he'd ever seen, deep-throating his cock all the way down to the base of his shaft, a fierce glean in her eyes as they watered just a touch from the effort of swallowing his entire cock.\n\n\"Holyyy shittt,\" Tom moaned as he came to, his fingers digging into the sheets either side of him.\n\nEllie let his cock slide out of his mouth with a loud pop, \"Look who's finally awake!\" she said with a grin as she stroked his cock with her hand. \"I genuinely thought I might be able to make you cum in your sleep, you sleep like the dead!\"\n\nTom propped himself up on his elbows, \"If I had known to expect this kind of a wake up I might have warned you\"\n\n\"Well, that would have ruined the surprise now wouldn't it?\" Ellie asked with a crooked smile. \"Besides, this gives me all sorts of ideas for surprises I can pull on you.\"\n\n\"What kind of- Oh Goddd\" Tom moaned as Ellie took that moment to recommerce her work on his cock. Tom fell back against the bed again and let the feeling of Ellie's mouth around his cock wash over him. Almost too himself, Tom muttered \"I am going to have a lot to repay you for if you keep treating me like this.\"\n\n\"Speaking of,\" Ellie said brightly, moving down the bed to lay beside him before resuming stroking his cock with long firm strokes. \"I was wondering... if maybe today you wanted to take things a little further... did you want to maybe fuck me?\"\n\n\"I would love that,\" Tom answered a little too quickly, Ellie laughed at his reaction.\n\n\"Somebody's pretty eager,\" she replied, taking a bottle of lube which Tom had failed to notice earlier from the bedside table. \"You mind if we start with me on top?\" she asked.\n\n\"Not at all, but-\" Tom began but was cut off as Ellie started moving.\n\n\"Great, let me just-\" Ellie began, starting to take off her shirt.\n\n\"Wait, just wait a second\" Tom replied, a little more firmly than he intended. Ellie's expression quickly became concerned as she sensed the change in his tone.\n\n\"Hey... sorry, I guess I'm pretty eager too. Is everything okay? I didn't mean to pounce on you, I just-\" Ellie said all in a rush before being interrupted by Tom's hands around her neck.\n\nTom pulled Ellie's face to his and kissed her deeply, after a brief moment of surprise she kissed him back.\n\nTom broke the kiss, smiling up at her. \"I didn't mean to freak you out, sorry I just- this is very fast. And I wanted to make sure that just because it's fast doesn't mean it's just a fling.\"\n\n\"I'm sorry... I'm not used to actually thinking about that kinda stuff\" Ellie admitted in an uncharacteristically small voice, \"I really do like you, I usually just move this fast with people.\"\n\nTom smirked, \"Look, I'm really not complaining, after that wake up call? I'm horny as fuck. I just wanted to clarify is all... Can we make out now?\"\n\nEllie smirked back at him, \"Oh so who's moving fast now?\" she asked sarcastically, straddling him at the waist before leaning down and pressing their lips together smoothly. Tom's head swam as Ellie kissed him, idly he thought to himself how she really was the best goddamn kisser he'd ever experienced. Ellie nibbled at his lip before sliding her tongue into his mouth, eliciting a small sigh of pleasure from Tom. As they made out, Ellie planted her hands firmly on his chest and slowly rocked her hips back and forward, grinding against Tom's dick. For his part, Tom let his hands wander over every inch of Ellie's killer body, feeling the soft globes of her ass up to the glorious feel of her perky tits through her shirt. Ellie moaned appreciatively as he explored her body, breaking the kiss for a moment to slowly and teasingly pull off her shirt.\n\n\"Oh fuck\" Tom mumbled as the shirt finally slid free, exposing her breasts properly for the first time. Ellie delicately took his hands in hers and placed them on her chest with a squeeze.\n\n\"Everything you ever dreamed of huh?' Ellie purred as Tom massaged the soft flesh in his hands. A weak nod was about the best he could manage as he continued mindlessly fondling the best paid of breasts he'd ever laid eyes on. \"Well, for as long as you keep being super sweet and ticking all the right boxes, these 28F's are all yours Tommy\" Ellie whispered as she slowly leaned down to kiss Tom's neck. This had the secondary effect of pressing Ellie's tits against Tom's chest causing another moan to escape from Tom's mouth. Moving his hands lower, Tom grabbed a handful of each of Ellie's ass cheeks and squeezed firmly, earning a gasp from Ellie in return. With the gentle motion of Ellie's grinding and and the amazing sensations Ellis was causing with her mouth and the feeling of her boobs against his chest, Tom could take no more.\n\n\"Please, ride my cock... I wanna fuck you so bad Ellie, jesus.\" Tom all but moaned out. Ellie withdrew from his neck smirking before taking back up the bottle of lube from where it had been discarded earlier and squirting a generous amount onto Tom's rock hard cock. Tom caught his first glance of Ellie's own dick as it strained obviously against the fabric of her thong, but didn't have much time to dwell on it before Ellie was pulling the string of her underwear to the side and pressing the head of his shaft against her tight asshole.\n\nAfter a moment of resistance as the head of Tom's cock pressed up against Ellie's ass, Tom and Ellie both gasped in pleasure as his cock slipped inside her. The two of them moaned in unison as Ellie slowly let herself slide down the length of Tom's hard cock until eventually her ass cheeks rested gently against Tom's groin.\n\nTom groaned as he felt Ellie tense and relaxed with his shaft buried deep inside her, \"Jesus Christ you're tight.\"\n\n\"And you sir, are a little girthier than I was expecting.\" Ellie said in a slightly higher pitch than usual, \"Have you ever done anal before?\" Tom shook his head and she continued, \"All good, just give me a minute to get used to your size.\" Ellie leaned down slightly to place her hands on Tom's chest. After a moment, Ellie slowly leaned forward until Tom's cock was almost all the way out before sliding slowly but smoothing all the way back down. \"How does that feel babe?\"\n\nTom moaned in response and nodded, \"Really really fucking good.\"\n\nEllie smiled down at him as she started to slowly increase the pace of her movements. \"Good, cause it's only going to get better,\" she said, increasing the pressure on his chest in order to pick up her pace. Another moan escaped Tom and he gripped her hips and started to thrust up into Ellie as she came down, causing a moan of her own to slip from Ellie's mouth. \"Jesus, you can keep doing that\" she muttered as she bounced up and down on his cock, faster and faster.\n\nEllie leant backwards and gripped Tom's legs behind her as she began forcing herself down on Tom's cock as hard as she could. The bed began to squeak beneath them as Tom began to feel his orgasm start to approach with Ellie's renewed enthusiasm. Each time Tom hilted his cock deep in Ellie's ass she let slip a small moan as she rode his cock.\n\nEllie's thong had long since failed to contain her growing dick and it stood out rigidly as she bounced on Tom's hard shaft. Almost without thinking, Tom moved one of his hands to start stroking her shaft. Ellie's gaze, which had drifted to the ceiling, lost in the act as she was, snapped suddenly back down to what Tom was doing and she moaned loudly. \"Oh. Fuck. Keep. Doing. Thaattttt\" she gasped, each word punctuated by her downward thrusts. In response Tom quickened his pace on Ellie's cock and it was only seconds before Ellie stuttered out a brief warning, \"I- I'm gonna c-cumm!\" she moaned as her orgasm overtook her. Ellie began quivering and twitching as ropes of cum spewed from her hard cock.\n\nThis was the final straw for Tom and he felt his own orgasm rip through his body. Momentum more than anything keeping the two of them moving through their twin orgasms, as Tom deposited his not insignificant load deep inside Ellie.\n\nEventually, Ellie leant to the side, allowing Tom's slowly deflating cock to slip from her ass. Laying down beside him, she looked at the cum covering his chest. \"S-sorry about the mess\" she mumbled, still somewhat shakily. \"I actually wasn't expecting to cum, until you started... ya know...\"\n\n\"What, jerking you off?\" Tom asked smirking, the afterglow of the best sex of his life cutting through some of his usual nerves.\n\nEllie blushed and punched him playfully in the shoulder, \"Yes, you jerk.\" She stretched out her legs and raised her arms above her head, \"I wasn't really expecting... I mean, it's not like you've played with someone else's dick before, right? I thought you might be more... hesitant.\"\n\n\"Not really... I mean, the dick belongs to the hottest lay I've ever had so... can't really complain can I?\" He answered.\n\n\"Oh that's what I am to you is it?\" she asked laughing, turning to rest on an elbow as she stared him down.\n\n\"It's not ALL you are to me,\" he replied smiling, \"You're also very funny, good fun to be around and I really really like you.\" The look Ellie gave him made Tom blush, \"Is that too corny to say? I don't know, I jus-\"\n\nEllie cut him off with a finger to his lips, \"It's not corny, it's perfectly what a girl wants to hear\" she murmured quietly before leaning in and replacing her finger with her own lips, kissing him deeply. Tom returned the kiss, losing himself in the feeling of her body against his as she leant in and let their legs get tangled in the kiss.\n\nBreaking the kiss, Ellie looked down at her chest, which after leaning against Tom's was partially covered in her own cum. \"Hey look, we match\" she said giggling, \"Shower with me?\"\n\nTom grinned, \"I thought you'd never ask.\"\n\nRolling her eyes at him, Ellie took his hand and led him out into the hallway and a short way down the hall to a very spacious and luxurious looking bathroom. A large spa-shower combination filled one corner of the room, which was where Ellie led Tom. Turning the water on high and hot, Ellie pulled Tom underneath the large showerhead, \"Try not to drop the soap\" she murmured grinning.\n\nDespite the spacious nature of the shower, Ellie insisted, quite deliberately Tom imagined, on standing right up against Tom, grinding her ass against his cock and pushing her perfect tits against his chest at every possible opportunity. Ellie even insisted on washing Tom herself, muttering something about \"boys not being trusted with their own hygiene.\" The attention had a very noticeable effect on his cock and before long it was back to full hardness, nestling between Ellie's asscheeks whenever she had her back turned.\n\nEllie made some excuse about examining the drain and bent over from the waist, grinding her very luscious behind right into Tom's cock and something in Tom snapped. As she leant back up, he slid one arm around her stomach to grip her tightly and the other slipped round Ellie to take her semi-hard dick gently, but firmly in his grasp. \"Alright you fucking tease,\" Tom murmured in her ear, \"Time for you to get some of your own medicine.\n\nEllie giggled quietly and muttered something that sounded an awful lot like \"finally\" as Tom began to stroke her cock rapidly. Ellie bucked at the sudden increase in pace and Tom took a firm grip on one of her boobs, which only increased Ellie's squirming. After a few moments of hard pumping, Tom suddenly slowed, stroking her cock ever so slowly, which elicted a whine from Ellie, \"Nooooo, don't stoppp.\"\n\nTom grinned devilishly and shook his head, \"I want you to ask nicely.\"\n\nEllie caved immediately, \"Please keep stroking my cock, it feels so good!\" And moaned loudly when Tom resumed his vigorous pace from before. Tom held Ellie against him tightly with one arm while pumping Ellie's cock with his other. The arm that was gripping Ellie's breast took her nipple between two fingers and rolled it lightly, causing Ellie to moan again, much more loudly and she had to rely on Tom to keep her standing as her knees went weak.\n\nAgain though, Tom slowed his pace and this time Ellie let out a whimper at the loss of sensation, \"You are so mean, please please please!\" she begged, \"I was getting close.\" Tom smiled and started stroking her again, and the moan that Ellie gave made his heart leap. Gently at first, but more firmly as Ellie responded eagerly, Tom began to pinch the nipple he had in his grip as well as roughly massage her boob. Ellie planted both of her hands against the shower wall and Tom had to more or less hold her entire weight as for the second time that morning her orgasm crept up on her.\n\nSensing she was close, Tom started to plant rough kisses down the side of her neck and Ellie could hold back no more. She came, throwing back her head with a moan and shooting cum all over the shower wall.\n\nAs she gradually recovered Tom let go of her dick and let his arms drape comfortably across her chest and stomach until she could stand on her own two feet. \"Remind me to tease you more\" Ellie murmured, turning in his embrace to face him, placing her arms around his neck.\n\n\"I guess I got played there huh?\" Tom laughed.\n\nEllie shrugged, \"Not really, I was planning on blowing you again to be honest, but your fixation with my boobs gives me another idea.\" Ellie shut off the water and took a small bottle of lube from the wrack amongst the shampoo and other hair products.\n\nTom smirked, \"Why do you have lube in the shower?\" he asked.\n\n\"Because wall mounted dildos are great and you should stop complaining because I'm about to let you fuck my tits.\" Ellie replied matter of factly, squirting a generous amount of lube across her chest. \"Take a seat on the edge there\" she said, gesturing to the side of the spa and as he did so, she knelt down in front of him, massaging her large handfuls. \"Now, tell me how much you fucking love this\" she murmured, taking a firm grip on each of her breasts and enveloping his hard cock between them.\n\nThe feeling of her soft, warm tits encasing his rigid cock made Tom moan almost immediately. \"Fuck that's good\" Tom managed to say amidst the low moans Ellie coaxed from him.\n\n\"I thought you might like that\" Ellie said sarcastically as she bobbed up and down, slowly increasing the pace which she slid her boobs up and down the length of Tom's rock hard cock. After all the teasing he'd put Ellie through, the amazing view of Ellie's gorgeous and curvy body, combined with the delightful sensation of Ellie's tits now rapidly stroking his dick, Tom knew that he was on borrowed time. \"You wanna finish on my tits big guy?\" Ellie asked, grinning up at him, ever so slightly out of breath. \n\nTom nodded and with a strangled, \"I- I'm going t-\" Ellie let his cock slip from between her cleavage and started stroking his cock hard and fast. Keeping his cock pointed dead center at her chest, she cupped her boobs with one hand, presenting a perfect target. With a loud moan and a shuddering gasp, Tom came, spewing his load all over Ellie's chest. As he gradually recovered, Tom looked down to see Ellie with a shocked smile.\n\n\"It is going to take me a good while to get used to this\" she muttered, almost to herself as she surveyed the thick coating of cum covering her perky tits.\n\nTom blushed slightly but managed a smile, \"At least we're in the shower?\" he said jokingly.\n\nEllie laughed, getting to her feet and turned on the water back on. \"The least you can do is help me wash up,\" she replied with a suggestive smile.\n\n\"Hey, you started it!\" he retorted, but got eagerly to his feet all the same and began laboriously soaping up Ellie's chest.\n\nEllie giggled guiltily, \"That's true, I'd forgotten that\" she said, as he worked soap and water across her chest thoroughly.\n\nShe let him play with her boobs for a good minute before announcing in a dry voice, \"You know, my boobs are perfectly clean now\" as Tom continued to massage and feel up her chest.\n\nTom blushed but didn't remove his hands, \"You can't be too sure with these things\" he mumbled before giving her nipples a slight pinch.\n\nEllie yipped briefly at the unexpected sensation before slapping his hands away and turning off the water. \"Thomas Edwards, what am I going to do with you?\" she asked with mock severity as she stepped carefully out of the shower and tossed a towel in Tom's direction before grabbing another and beginning to towel herself off.\n\nAs she dried off, Ellie asked almost hesitantly, \"So did you have anything you had to do today? Or did you maybe want to... stick around?\"\n\n\"I have work tonight, but I'm free all day. Did you have something in mind?\" Tom replied.\n\n\"Well... Seeing as our first date was kinda... less than ideal, I was wondering if you wanted to try a take 2? I checked and the Mexican place does lunch too.\"\n\nTom grinned, \"That'd be great! I didn't actually end up eating there last night anyway.\" he explained, quickly toweling off himself.\n\nEllie returned his grin and leant over to give him a kiss on the check, \"Yay!\" she cheered and started wrapping her towel around her hair. Ellie led them back into her bedroom and started to dig through her wardrobe. \"I guess you're going to have to wear what you did yesterday, you can borrow these though if you like\" she said tossing a pair of blue tight looking boy shorts over to him.\n\n\"Aren't these girls underwear?\" he asked, examining them.\n\nEllie rolled her eyes, taking out a matching black lacy bra and thong and slipping them on, skilfully tucking her cock away as she did so. \"Technically? Yes, but I'm the only one who's going to know and I don't give a shit. Besides! They're BASICALLY boxer briefs anyway.\"\n\nTom shrugged, pulling them on and noticing with pleasant surprise how soft they felt against his butt and the silky feel of the material against his package. Shaking the thought away he quickly dressed in his clothes from last night, before noticing Ellie was eyeing him curiously.\n\n\"What?\" Tom asked with a confused expression on his face.\n\nThere was a strange gleam in Ellie's eye but she merely said \"Nothing, nothing\" before pulling on the rest of her clothes. She slid some fishnet stockings up her legs, followed by a slightly shorter than average black skirt. Into which she tucked a bright yellow T-Shirt and finally pulled on a pair of equally yellow converse. As she finished tying her laces she noticed Tom staring, \"What? I do something stupid?\" she asked, glancing down at her outfit.\n\nTom jerked as realised he'd been staring and blushed, \"No! No, you're just- Is it totally lame if I was just completely entranced? There's... I don't know, I've never watched a girl get dressed before, it's kinda hot\" he finished weakly, running a hand through his long hair.\n\nEllie giggled and walked over to him, \"Not at all, I just didn't realise I could have that effect on you\" she whispered, pulling him in for a kiss, her tongue brushing teasingly along his lips.\n\nShe pulled away after a few moments slightly flushed, \"I can't keep kissing you right now, I literally JUST got dressed and if we kiss anymore I'm going to end up fucking you again.\"\n\nTom chuckled, \"No complaints from me either way.\"\n\nEllie scowled jokingly and slapped his arm playfully, \"But I look great! You said so yourself, this outfit has to see the outside world\" she replied laughing, before making her way back to the bathroom. \"Meet you in the car? I gotta do hair, makeup- girl things, and then I'll lock up.\"",
        "Tom nodded, \"Meet you there!\" he called after her before making his way back outside to the car.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"And he spent the DAY like that?\" Ellie asked through tears, as she desperately sucked in air between laugher.\n\nTom grinned harder, \"All day, he wouldn't take it off after we told him how lucky it was.\"\n\nAfter the best Mexican he'd ever had, Tom sat contentedly telling Ellie a story about Josh from school camp years ago. Ellie was leaning heavily to one side as a duel result of the laughter she couldn't seem to stop and the several drinks she'd had. Tom, having had to drive, had only had one so far.\n\n\"Man I will never look at Josh the same way.\" Ellie said, busting out into a fresh spasm of laughter. \"With stories like this, how are you not the most sought after comedian in school?\" she asked, leaning her elbows on the table resting her chin on her palms.\n\nTom blushed at the unexpected compliment, \"I'm usually a lot more shy to be honest\" he admitted, \"You're very disarming, I feel more comfortable than usual around you.\"\n\nEllie giggled, \"Yeah well it's difficult to be embarrassed with someone you've seen naked I tend to find.\" Ellie continued, adopting a mock sophisticated tone, \"One relaxes around one when one's had one's dick sucked by one.\"\n\nTom laughed, \"You have to know that made absolutely no sense right?\" he managed to say.\n\nEllie straightened and tilted her chin up in an imitation of royalty, \"One fails to know what you mean.\" But spoiled the effect by bursting out laughing again and snorting accidentally. Ellie covered her mouth with her hands in shock and giggled despite herself. \"I didn't mean to make that noise\" she murmured as Tom's face reddened with laughter.\n\nAfter they had calmed down somewhat and settled their bill, Tom and Ellie walked back down the wharf arm in arm. \"You know I think that's the best first/second date I've ever had\" Ellie said softly, resting her head on Tom's shoulder as they walked.\n\n\"You mean that?\" he asked, looking across at her.\n\n\"I do yeah\" she said simply with a smile, \"I haven't laughed that hard in what feels like forever.\"\n\n\"Well I'm glad you enjoyed lunch, did you still fancy doing something else?\" Tom asked, remembering the suggestions he'd originally made for their date.\n\n\"Mmmm tempting, would you prefer to have your ass kicked in bowling or at Arcade Games?\" Ellie asked, smirking at him.\n\nTom chuckled, \"I think my ego could take being messed up at the Arcade, besides, they say overconfidence is your downfall.\"\n\n\"Only if you can't deliver\" Ellie replied with a wink, as they made their way down the wharf to the arcade. \"Besides, I think you secretly love the fact you're dating a girl who's way better at video games than you are.\"\n\n\"We're dating?\" Tom asked with a small amount of surprise.\n\nEllie gave him a slightly exasperated sidelong long, \"Yuh, we're dating - we're not talking about what else we may or may not be yet, I'm still making up my mind about you.\"\n\nTom shrugged, \"I'm okay with that, you've not half put me under pressure though.\"\n\nEllie laughed, \"Oh my dear, if you can't handle the pressure, then you don't deserve me.\"\n\nTom couldn't help but agree with that.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"And you promise you didn't let me win because you felt bad?\" Tom asked jokingly as they left the Arcade and headed back to his car.\n\nEllie rolled her eyes and laughed, \"Your opinion of me is extraordinarily high, perhaps a little too high, but for what feels like the thousandth time, no I did not let you win. It may or may not have something to do with those drinks you kept buying me\" Tom grinned like a kid in a candy shop and brandished the enormous stuffed panda he's won with all his tickets. Ellie couldn't help but laugh, \"You're also a huge dork for getting the stuffed panda.\"\n\n\"What! It's traditional!\" Tom protested, but ruined the effort by bursting out laughing. \"What else was I going to get?\"\n\n\"This is true\" Ellie replied, \"There wasn't much on offer that was any good.\" At this point they had reached Tom's car and Tom began the drive back to Ellie's place.\n\nFor a while they sat in companionable silence, before Tom noticed a slight frown resting on Ellie's features. \"Anything on your mind?\" he asked, returning his gaze to the road.\n\n\"Kinda,\" Ellie replied at length, seeming to consider something carefully, she continued, \"I'm debating if I should ask you something or if it's a bit soon, after only a date and a half.\"\n\n\"Without knowing, I'm not sure I can help you, but if I know, it's a rather moot point\" Tom answered unhelpfully.\n\n\"Yes thank you Mr. Philosophy, that was great\" she answered sarcastically before seeming to come to a decision, \"Do you want me to be your girlfriend?\" she asked rather bluntly. Tom opened her mouth to respond but Ellie cut him off, \"Cause I really would like you to be my boyfriend, but people will talk... You know I wasn't exactly born...Me. That will matter to some people, they might think differently of you too.\"\n\nTom knew what his response was going to be from the second she asked, but he appeared to consider his choice before responding, \"I really would like you to be my girlfriend Ellie.\"\n\n\"You sure?\" Ellie asked, \"Cause this is your last opportunity to back out before you really hurt my feelings.\"\n\nTom glanced sidelong at her as they approached her street, \"I really am sure\" he answered simply.\n\nEllie made a very uncharacteristic squeaking noise and leaned over the center console to kiss him on the cheek, \"I'm really glad you said yes Tommy, you're something special.\"\n\n\"Me? Special? Nah, I'm just lucky\" he responded, \"After all I get the call TBB my girlfriend after all.\"\n\nEllie giggled, punching his arm playfully, \"You really aren't going to let that go are you?\"\n\n\"I'm really not,\" he answered with a laugh, pulling into her driveway.\n\n\"Well I'm just going to have to lean into it then aren't I?\" she asked playfully, as she got out of the car and headed towards the house. \"Come on inside, my boyfriend doesn't take me on a date without getting a reward\" she called over her shoulder as she neared the door.\n\n\"I could get used to this\" Tom murmured to himself as he locked up his car and followed eagerly after Ellie.\n\nTo be continued..."
    ],
    "authorname": "Risis",
    "tags": [
        "high school",
        "trans girl",
        "transgender",
        "consensual",
        "teen",
        "orgasm",
        "anal",
        "shower sex",
        "tittyfuck",
        "date"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-pleasant-surprise-pt-03"
}