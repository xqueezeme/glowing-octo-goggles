{
    "title": "Faster, Higher, Stronger,\u2026",
    "pages": [
        "Roger: \"Good evening and welcome to the first Sexual Athletics final of the 2024 Rio de Janeiro Olympics \u2013 the much anticipated Team Freestyle competition. My name is Roger Codger and I'm here today with Lily \"The Vacuum\" Love, the British double silver medallist in the Individual Technique and Double Volume Fellatio events from the Bangkok Olympics, four years ago.\"\n\nLily: \"Hi, Roger. It's lovely to be here and I'm just so excited that Great Britain has made the final of the Team Freestyle against pre-tournament favourites, Thailand.\"\n\nRoger: \"Lily, for the benefit of any of our viewers who haven't witnessed the ribald yet exhilarating spectacle of an Olympic Sexual Athletics event, please could you tell us a little about the sport and the Team Freestyle event in particular.\"\n\nLily: \"Sure, Roger. It would be my absolute pleasure. Well, since the IOC ratified the introduction of Sexual Athletics as a sport in its own right at the Bangkok games in 2020, it has gone from strength to strength. At this year's Rio Olympics there are two different classes of events \u2013 the technique or judged events and the speed or volume races. The basic events include Manual, Fellatio, Cunnilingus, Copulation, Anal and Freestyle in various categories - Individual, Double or Team.\"\n\nRoger: \"And what kind of event is the Team Freestyle, Lily?\"\n\nLily: \"Well, Roger, the Team Freestyle is a speed event. The basic aim is to make the male representative from the opposing team, known as the Punter, ejaculate as quickly as possible. It's a team effort and you can have any five of your squad of seven in play at any time doing whatever they can to get the opposition's Punter to orgasm.\"\n\nRoger: \"So Lily, tell us more about the two teams we're going to see today.\"\n\nLily: \"OK, Roger. Thailand won this event at the last Olympics and were hot favourites coming into this one. They've also started the final well, winning the toss and electing to go second so that their target time will be a known objective. Their legendary captain, Sukhon Sawika, is considered the foremost fellatrix in world sex. She's competing in her own right in the Individual and Double Technique Fellatio events as well. Basically, she's an amazing cock-sucker.\"\n\nRoger: \"Wow, Lily. She sounds like fun.\"\n\nLily: \"You can say that again, Roger. Their Punter is also pretty special. You can see that Chanarong Thipayametrakul isn't much to look at, as he makes his way to the Banging Couch. He's 54, short, obese, his penis is functional yet small and he has a face only a blind mother would love. But, boy oh boy, is he difficult to bring off. He's got the stamina of a bull and he's a master of Buddhist meditation. I myself have spent many hours competing against the Thai team, licking and sucking on his small stubby erection, holding his flabby belly out of the way, desperately trying to finish him with my mouth.\"\n\nRoger: \"Really? Your mouth does look very welcoming and able, Lily. You're retired now but you yourself competed in four different sucking events in Bangkok?\"\n\nLily: \"Yes, Roger, that's right. I sucked in the two Individual Fellatio events as well as both Doubles events with my partner Nicola Grey.\"\n\nRoger: \"Perhaps you could describe the events in which you took part for the viewers at home, Lily.\"\n\nLily: \"Of course, Roger. The Technique event consists of basically fellating a panel of three international judges to an extremely high standard. Marks are given for, amongst other things, suction, energy of the head-bob, the generation of slurpy noises and the ability to keep each judge on the bring of orgasm for as long as possible as well as for the quality of the final climax and swallowing performance. As for the Volume events, I basically had to suck off as many men as possible in fifteen minutes. Nicola and I got a silver when we got through 33 in the Doubles final.\"\n\nRoger: \"Oh, wow. Anyway, Lily, what about Great Britain, the surprise finalists in the Team Freestyle?\"\n\nLily: \"Well, Roger, Great Britain has done brilliantly getting to the Team Freestyle final. They use a fairly standard 2-1-2 formation but are happy to switch it around if they need to. They got to the semi-final via the repechage after they lost to Sweden in the first round but they somehow managed to beat Germany when they brought the German punter to completion in just under thirty minutes, a fabulous effort all round.\"\n\nRoger: \"2-1-2 formation? Could you explain that, Lily?\"\n\nLily: \"Sure, Roger. A 2-1-2 formation means that the British team use two suckers, the position I played, one shagger or possibly an arser and two tonguians, reamists or manipulators.\"\n\nRoger: \"Well, Lily, the British are entering the arena now and making their way to the central podium. They're wearing their customary and patriotic costume of miniscule white bikinis with red hold-up stockings and blue stiletto heels and they look fabulous. Perhaps you could introduce each of them and explain their positions as they climb onto the stage.\"\n\nLily: \"Sure, Roger. First up on to the podium comes Sarah Cookman, Team GB's lead sucker. Her role, along with Jemma Davies who's approaching now, is to concentrate on the Punter's penis and testicles, using her mouth, tongue, lips and even teeth to pleasure him to climax. Most teams start off with one or two suckers in play although three isn't uncommon and I once saw a fantastic power play from the Ukrainians with four suckers on a cock at the same time. Amazing stuff!\"\n\nRoger: \"Yeah, I bet that really was amazing, Lily. I have to say the two British Suckers are gorgeous.\"\n\nLily: \"That's right, Roger. Sexual athletes have to be very skilful but they're also chosen for their looks to ensure added excitement for the Punters. Sarah is 5' 8\", with long blonde hair, tied back in a pony tail, green eyes, tanned skin and 38B breasts. Jemma is slightly shorter at 5' 6\" with coffee brown skin and brown eyes, a short black afro hairstyle and 34C boobs. As you can see their figures are stunning, with long legs, perfect flat stomachs and pert bottoms. They also complement each other perfectly; I mean, can you imagine the two of them licking your erection, their tongues sliding over your dick?\"\n\nRoger: \"Er. Um. Right now, I really can, Lily. They really are smoking hot. And, wow, look! They're taking off their bikinis to reveal their lovely breasts and perfectly trimmed matching \u2018landing-strip' pubic hair; and they're even touching themselves suggestively!\"\n\nLily: \"Of course, Roger. Anything to get Chanarong, the Thai Punter, interested. Although he's playing it cool, you can see he's noticed Sarah flicking her tongue over Jemma's right nipple, whilst maintaining eye contact with him. As long as the girls don't touch him they can do what they want before the match actually starts.\"\n\nRoger: \"Oh my, that is so sexy, Lily! They're even talking to him now.\"\n\nLily: \"Another accepted and expected type of gamesmanship, Roger. Right now you can bet that, as they lean over him, they'll be telling him how their hot sucking mouths are going to be all over his cock and that they'll be swallowing his spunk really soon.\"\n\nRoger: \"Shit, I mean, gosh, Lily. And look here come the rest of the GB team.\"\n\nLily: \"That's right, Roger. Here's Amanda Kenny who plays shagger and Jenny Ling, GB's arser. As the name of her position suggests, Amanda, who's 5' 10\" with black hair, blue eyes and 38E breasts, is a copulation expert. Her vagina is amazingly tight and she has fabulous muscle control down there. Once the suckers have got Chanarong warmed up, Amanda's job is to ride him furiously using her amazing pussy moves to take him even closer to orgasm. She's also a good medal prospect in both Individual Copulation events.\"\n\nRoger: \"She's a complete babe, Lily. And so is Jenny. What does she do?\"\n\nLily: \"Jenny's a pretty controversial pick for the team. She actually competed for Hong Kong at an amateur level before she moved to London to become a naturalised British citizen. But she's one of the best arsers in the world. You can see her lubing her arsehole up right now, getting ready to go. I mentioned how tight Amanda's pussy is, well Jenny's anus has to be felt to be believed. I visited the Olympic village yesterday to say hello to the team and Jenny invited me to slide a finger up her to check out her form. It was like a vice! And the things she can do with her sphincter are incredible. She'll be a great alternative to Amanda when play hots up.\"\n\nRoger: \"And she's lovely too, Lily.\"\n\nLily: \"Yes that's right, Roger. She's little short for an arser at 5' 2\" but her shiny black hair, gorgeous almond eyes and 34EE breasts make her hotter than a volcano.\"\n\nRoger: \"She doesn't look too short to me, Lily, in those high heels.\"\n\nLily: \"Remember, Roger, that shaggers and arsors tend to mount Punters as they sit on the Banging Couch. A little extra height means that their breasts are at face level while they grind which can be very distracting to the Punter. You'll see also that the rest of the team have big tits too as opposed to the suckers whose boobs don't tend to get into his field of vision too much.\"\n\nRoger; \"Of course, Lily. And even I recognise this next young woman: it's Katy Fletcher-Hampton, the British team captain.\"\n\nLily: \"That's right, Roger. Katy is a generalist in that she's a great Tonguian and Reamist but can also manipulate extremely skilfully. She's 5' 9\", with red hair, green eyes, big but firm 34F breasts and a figure to die for. The petite brunette next to her is Catherine Clark, who's a specialist Reamist. Tonguians use their mouths on every other area of the Punter's body apart from his actual genitalia, in which the suckers specialise, and the anus which is where Catherine comes in. The skills required for the two are similar but not every girl dreams of sticking her tongue up a man's butt so it's sometimes a difficult position to get right. GB is lucky in having the 5'5\" 34D Catherine, who is amazingly enthusiastic about her work.\"\n\nRoger: \"A plucky lady, Lily. And who's that ravishing young lady who's bending over in front of the Thai Punter, showing him her open wet pussy while she fingers it lasciviously?\"\n\nLily: \"That, Roger, is Vicky Fox, the GB manipulator. As you can see Vicky is beyond gorgeous: blonde, blue eyes and the best body I have ever ever seen. She's 6' 1\" tall, her breasts are a gravity defying 32G and her legs are endless. She'll be called in later in the play to use her practiced hands to finish Chanarong off and to use her astounding body to drive him crazy with desire.\"\n\nRoger: \"She's a real stunner, Lily. So the girls are all naked now except for stockings and stilettos. What happens next?\"\n\nLily: \"Well, Roger, as you can see, Jenny and Vicky have stepped back and are indulging in some heavy lesbian petting while they finger each other's pussies and bums. While they're substitutes they can indulge in whatever degraded act they wish just as long as they're not using any tools or toys and they don't touch the Punter. As you can see they really know how to put on a show.\"\n\nRoger: \"Oh, my god, Lily. That's amazingly tasty. So Britain is going to start in the 2-1-2 formation you mentioned earlier?\"\n\nLily: \"That's right, Roger. As you can see the two Suckers are on their knees in front of Chanarong, licking their lips, ready to go, whilst Amanda Kenny, the Shagger, and Catherine Clark, the Reamist are getting into place. That means that Katy Fletcher-Hampton will be Tonguing. And there goes the hooter! We're off!\"\n\nRoger: \"My word those girls are fit and flexible, Lily. They're in some amazing positions!\"\n\nLily: \"They certainly are, Roger. This is a very physical sport. And a young woman's game too. Katy is the veteran in the side at 26. In fact the rest of the British team are all in their early-twenties. I feel quite ancient compared to them at the age of 29!\"\n\nRoger: \"Oh no, Lily. You're as gorgeous as any of them! Your body is astoundingly lovely.\"\n\nLily: \"Oh, Roger, you're so kind. I have kept my figure quite well but my breasts aren't what they used to be.\"\n\nRoger: \"They look stunning to me, Lily.\"\n\nLily: \"Oh, Roger, that's really kind, But, here, let me get them out for you to feel of them. See, they're not as firm as they used to be and they sag a touch.\"\n\nRoger: \"Oh, fuck, Lily. They feel unbelievable to me!\"\n\nLily: \"Thanks, Roger. I think you'd best stop fondling my enormous breasts and tweaking my perky pink nipples now because the action's underway. You can see that the girls have pulled Chanarong down a little off the couch a little so that Catherine Clark can get access to his arse with her snakelike tongue. The Punter is not allowed to resist anything the girls do to him but of course he doesn't have to help them in any way either. Amanda Kenny is rubbing her huge sexy boobs over his face, her hard nipples sliding across his closed mouth whilst the two suckers get down to some serious licking as does Katy who's working intensely on his nipples. Come on, girls!\"\n\nRoger: \"Oh, wow. I can't believe Chanarong isn't as hard as a rod, Lily! How can he resist all those tongues and tits? He can get hard, can't he? I mean, what if he's impotent?\"\n\nLily: \"Don't worry, Roger, that's just not possible. Yesterday, at the Suck-Off he'll have been put through his paces by the judges.\"\n\nRoger: \"The Suck-Off, Lily? I've heard of that. Isn't it a bit like a boxing weigh-in?\"\n\nLily: \"That's right, Roger. Except that Chanarong was fellated by two of the independent female judges, both of whom incidentally are ex-competitors themselves, to make sure that he can get an erection and that he is able to ejaculate. I'm pleased to say both he and Arthur Coombes, the British Punter, passed with flying colours, both of them spunking generously in a judge's mouth within the two hour limit. They will also, of course, be drug tested to ensure no arousal inhibitors have been used.\"\n\nRoger: \"Oh, boy. Lily, I can't believe the self-control that Chanarong is exhibiting. I mean, if I were him, I'm sure I'd have come already!\"\n\nLily: \"I know it's every man's dream job but it's really difficult being a successful Punter. Both Chanarong and Arthur spent hours training, having their cocks sucked, fucked and wanked by a succession of gorgeous young women including, of course, their own teams. As for during sex, Chanarong goes into a meditative trance whilst Coombes is said to recite the starting line-ups of every post-war FA Cup finalist to provide distraction. And you have to remember these girls aren't exactly your average cocksuckers either. Their mouths have to be experienced to be believed. I mean if I were to unzip your flies right now and take out that erection you've had for the last ten minutes before kneeling down in front of you and kissing your cock with my moist red lips and licking it with my slick agile tongue prior to sucking you into my warm wet mouth\u2026 Well, Roger. Let's just say you'd come in seconds.\"\n\nRoger: \"Wow. Really?\"\n\nLily: \"Oh, yeah, Roger. Here let me do it for you right now. It'll help you concentrate a bit more on the commentary rather than on my full heavy breasts.\"\n\nRoger: \"Oh, my god, Lily! Oh shit. Oh fuck, yes! Yes! Yes! Oh I can't believe this happening. I'm coming!\"\n\nLily: \"Mmmm. That was nice, Roger. See. Seconds.\"\n\nRoger: \"\u2026\"\n\nLily: \"Are you OK, Roger?\"\n\nRoger: \"Yes, sorry. I'm fine now, Lily. That was the single most amazing that has ever happened to me. Wow. Thank you.\"\n\nLily: \"No problem, Roger. Now that I've stopped competing, I usually charge \u00a31,000 for head, but I just wanted you to understand how good those girls are out there and how difficult it is for Chanarong to resist them.\"\n\nRoger: \"I might need some more tuition later, Lily. But anyway back to the action. What's going on now? The British girls seem really excited.\"\n\nLily: \"Let's see now, Roger. Has he\u2026? Yes! That's brilliant. We have wood!\"\n\nRoger: \"I beg your pardon, Lily?\"\n\nLily: \"The suckers have got him hard, Roger! Now they can really work on him. Chanarong's tiny penis and huge overhanging stomach make it very difficult for the suckers until they have gotten him hard. I think a combination of four tongues, the subs' lesbian show and Amanda's outstanding boobs and dirty talk have finally worked. And now you can see that Sarah and Jemma, the British suckers, are taking turns to head-bob whilst the other licks and sucks his balls.\"\n\nRoger: \"Oh, my word, Lily. I can't believe how quickly their heads are going up and down on him! And how well they're working together!\"\n\nLily: \"It is phenomenal, Roger. A good sucker is a wonder to watch and both these girls are fabulous. And it looks like Catherine has got a good two to three inches of wiggling tongue up his butt while Katy licks his nipples and directs the play. I think they've got Chanarong hooked! His face has been completely impassive so far but now I can see him twitching and trying to control his breathing. These girls have done brilliantly: at this rate they might be able to get a sub-40 minute time which would be a real achievement.\"\n\nRoger: \"Really, Lily? I would have thought at this stage, it would be over in minutes.\"\n\nLily: \"Not yet, Roger. Chanarong is a doughty competitor. The girls still have some work to do but it's going well. And the suckers have drawn back to allow Amanda Kenny to impale herself on him and ride him to heaven. Go on, Amanda! Fuck him hard!\"\n\nRoger: \"My word, Lily. I can't believe the pace she's going at! I don't think I've ever seen anyone move their hips so quickly!\"\n\nLily: \"That's right, Roger. Professional Shaggers have got amazing hip action. Amanda needs to get the balance right. If she allows him to slip out as she fucks him she could cause him injury which would mean they'd have to start over again. She's also making sure her enormous tits rub up over his face as she flies up and down, whilst Katy licks the back of his neck and ears, something Chanarong is rumoured to enjoy more than he should. The girls have done their research well!\"\n\nRoger: \"Is there much time spent on research, Lily?\"\n\nLily: \"Well, Roger, the girls will have been watching the Thais through the rounds, trying to work out what gets their Punter going. But really they spend most of their time training by practising their arts on their own Punters and on the various coaches, athletes, volunteers, anyone who's around really. When I myself was competing, I would spend hours giving head to the British Punters practising for the judged events or sucking off maybe 70-80 cocks a day when I was preparing for speed events. It's hard work!\"\n\nRoger: \"It certainly is, Lily. Well it looks like the girls have settled for this next phase.\"\n\nLily: \"That's correct, Roger. As you can see the suckers are now lying underneath Chanarong with a ball in each mouth while Catherine Clark, the Reamist, tongues his bum. It's getting busy down there but it's definitely having an effect. Look out for the first substitution within the next few minutes.\"\n\nRoger: \"OK, Lily. What can we expect?\"\n\nLily: \"I think the Brits will go down a conventional route next Roger. As you may have noticed, Vicky Fox, the lovely GB Manipulator, is sliding her finger in and out of Jenny Ling's bum, preparing her to join the fray I would guess. As you can see, Shagging is really hard work and the British team will be looking for Jenny to come in and take over from the tiring Amanda.\"\n\nRoger: \"You were right, Lily. They're making their move!\"\n\nLily: \"Oh and that was a fantastic handover, Roger. I reckon Chanarong's dick was out in the open air for less than a second as Amanda dismounted and Jenny slid her tiny tight bottom down onto his minute erection.\"\n\nRoger: \"But what's she doing, Lily? She's going a lot slower than Amanda.\"\n\nLily: \"A really interesting tactic from the British, Roger. Instead of riding him at speed, Jenny is slowly moving her arsehole up and down and rippling her anal muscles along his shaft. And look at Chanarong! He's beginning to sweat! Jenny's arse is working brilliantly! We're getting to the climax a lot quicker than I had dreamed possible! These girls are doing amazingly well!\"",
        "Roger: \"I have to say, Lily, it does look like his composure is disappearing.\"\n\nLily: \"I completely agree, Roger. The girls will now be thinking about making their final substitution and deciding on their completion options.\"\n\nRoger: \"What do you mean, Lily?\"\n\nLily: \"There are a variety of ways, Roger, that they could finally finish off the Thai Punter. I don't think it's likely that Jenny will have the stamina to make him come up her arse so I think the Brits will be thinking more a combination of hand and mouth. However, there are still loads of ways the other girls can help. In the semi-final, the Jamaicans eventually brought Chanarong off after a heroic effort by their sucker, Sherone Coulson, in a modified Amsterdam Combination.\"\n\nRoger: \"I didn't realise the sport was so technical, Lily.\"\n\nLily: \"Oh, yes, Roger. There's a lot of theory for the team coaches and captain to get their heads around although usually the difference between winning and losing is due to the individual brilliance of the competitors. And it looks like GB is getting ready for the finish! On comes Vicky Fox, as the brave Jenny Ling staggers off, her poor arse sore with abuse.\"\n\nRoger: \"This is so exciting, Lily! They're all swapping around!\"\n\nLily: \"Oh this is brave from the Brits, Roger. They've gone for a modified Stockholm Configuration. Vicky is using her adept right hand to masturbate Chanarong furiously while she holds his head against her magnificent bosom. The two suckers, Sarah and Jemma, are flicking their tongues over his glans. Catherine, the Reamist, continues her stalwart tonguing of his butt. And, in a courageous and unconventional move, Katy Fletcher-Hampton is sucking both of his balls, an area usually reserved for the Suckers.\"\n\nRoger: \"I'm amazed at the girl's equanimity at licking his cock when it's only just been in their team-mate's bottom, Lily.\"\n\nLily: \"Oh, Roger, these girls are pros. Such things don't bother them. In any case, Jenny's bum probably tastes nicer than Chanarong's cock. As part of his preparations to put the girls off, he won't have washed for several weeks!\"\n\nRoger: \"Oh, that's disgusting, Lily. I hadn't realised how tough it was up there.\"\n\nLily: \"And it looks like, yes Roger, I do think that Vicky Fox's huge boobs have finally pushed Chanarong over the edge! He's actually sucking her left nipple and there go his hands! He can't help it. He's squeezing her large round boobs! He's been broken! It won't be long now!\"\n\nRoger: \"The girls are going wild, Lily!\"\n\nLily: \"This is a wonderful performance, Roger! Who can blame them? And it looks like they've got him. Yes, Sarah Cookman has plunged her mouth down over Chanarong's dick while he shudders and shakes. And now she's holding her mouth open for the judges to check. Yes! Stop the clock! The British team have done it! They've finished off the Thai Punter in 31minutes, 6.4 seconds and set the Thais an incredibly hard time. Yes! Well done, GB! Look at them celebrating whilst Chanarong looks disconsolate!\"\n\nRoger: \"That's great, Lily. What next?\"\n\nLily: \"We've now got a break of about half an hour before it's the Thai team's turn, Roger, to do their best on Arthur Coombes. He's a relatively new Punter but he hasn't been brought to climax in less than 35 minutes in all competitions this year so I'm confident of our chances.\"\n\nRoger: \"Well that gives us time to go over to the qualifying rounds of the Dressage, Lily. Over to Sue in the studio.\"\n\nLily: \"How was that?\"\n\nRoger: \"Fucking amazing. You're not only a great commentator, you're smoking hot and, unsurprisingly I suppose, you give the most amazing head. Thanks.\"\n\nLily: \"Oh, that's sweet. It was a pleasure.\"\n\nRoger: \"Um, I don't suppose you'd, err, you know, before we're on again? And maybe the soundman? And camera crew?\"\n\nLily: \"Go on then. Get them out boys. I reckon I can do you all twice each in half an hour.\" "
    ],
    "authorname": "seth_perm",
    "tags": [
        "olympics",
        "competitive sex"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/faster-higher-stronger"
}