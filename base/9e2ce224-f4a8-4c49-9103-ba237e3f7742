{
    "title": "Five Years and Four Days Ch. 04",
    "pages": [
        "Preface\n\nPart four of four. More good stuff. Probably need to read parts one, two, and three first to get the gist of all this.\n\nFIVE YEARS AND FOUR DAYS - DAY FOUR (and FIVE)\n\n-- MORNING\u2014\n\nJESS\n\nThe phone woke me up. I blinked and looked at the clock -- it was just about 10 in the morning. I shifted my legs as they felt a little sore, prompting me to fully remember everything that happened the night before. I turned a little and saw Alex's sleeping form. I knew I was grinning like an idiot.\n\n\"Hello?\" I said quietly as I picked up the phone.\n\n\"Why are you still at home instead of sitting here with me and Julia for brunch?\" Cathy's voice came booming through the handset.\n\n\"Oh shit. I overslept -- sorry.\" My eye wandered over to the still sleeping Alex.\n\n\"You better have a good reason for standing us up, Jess.\" Cathy paused, waiting for me to offer an acceptable explanation. I heard Julia in the background urging her to find out what's going on.\n\n\"Alex stayed over,\" I finally said.\n\n\"Oh. My. God.\" Cathy exclaimed, \"Tell me everything. EVERYTHING, Jessica Wainwright.\"\n\nI gently lifted the covers off Alex, deeply enjoying the sight of her naked body.\n\n\"She stayed over. We were up rather late, uh, catching up,\" I said, still smiling with the memory.\n\n\"She's still there, isn't she?\" Cathy asked.\n\n\"Uh-huh,\" I conceded.\n\n\"Ok -- well, Jules and I will finish up here. Why don't you guys putter over to our place later today? Jules's sister and nephews will be popping by to drop some stuff off, but do come round, Julia is DYING to meet Alex. \"\n\n\"All right. No promises. I'll shoot you a text if we head over. Talk later.\" I hung up.\n\nI slid deeper under the covers, snuggled into the crook of her arm and pulled the covers back over us. I placed my knee on her thigh and I felt an immediate spark of desire when she shifted her hip slightly. No one has ever been able to turn me on like this. In the past, if such a night had happened, it would have taken a lot of masterful foreplay to get me humming again. But Alex wasn't even awake and I was ready to jump on her.\n\n\"Jess...\" she muttered.\n\n\"Hm?\" I leaned in closer.\n\n\"Yes, I would,\" Alex said, her eyes still closed.\n\n\"Would what, darling?\" I asked.\n\nI stopped, realising I just called her 'darling'. It had just popped out of my mouth.\n\nI also realised that Alex wasn't awake and was talking in her sleep.\n\nAlex's hand moved towards her crotch as I watched, and I felt more and more aroused as I realised what -- or who -- she must be dreaming about. I moved my knee higher and pressed it against her. Alex's eyes opened and took a moment to focus on me.\n\n\"Good dream?\" I asked slyly.\n\n\"Uh...\" Alex was still waking up, but she caught up quickly, \"oh my god, what did I do?\"\n\nI tried to suppress my glee, \"I think you were dreaming about me -- you said my name and you started moving you hand, um, lower...\"\n\nShe turned away from me and buried her face in the pillow. \"OH no-no-no-no-no! This CAN NOT be happening.\" She yelled.\n\n\"I thought it was pretty hot.\" I said in her ear. \"Do you... um, have dreams like that often?\"\n\nAlex nodded, still face down in the pillow.\n\n\"And what is it that we are doing in those dreams?\" I lightly ran my fingers up and down her back.\n\nAlex looked up, red in the face, \"Not much, honestly. It's usually us hanging out and then I get up the courage to touch you or something and then, uh, things happen.\"\n\nI laughed, \"Come kiss me, you nut!\"\n\nAlex flipped over to claim my mouth with hers.\n\nI reached down and dipped my finger into her, feeling the results of her dream that I interrupted. I was so turned on that I plunged my fingers deep inside her, feeling her warm wetness taking me in. Alex sighed and immediately pushed her fingers into me. We were a tangle of arms and legs as our fingers went to work; Alex kissed me again, nipping my lips and sucking softly. I moaned into her mouth as our tongues touched. The kiss became more urgent as we each started to come. I felt her thumb on my clit and I reciprocated with my thumb, both of us rubbing and pushing faster until release blasted through our cores.\n\n\"Good morning, gorgeous,\" I sighed.\n\n\"This is so much better than the dream,\" Alex was still blushing.\n\nI laughed, \"How is it that I've only just figured out that you are this amazing?\"\n\n\"I've been waiting for you to notice me,\" she replied, \"I never thought you would... so maybe we can do more of the kissing and stuff,\" Alex's hand started wandering down my stomach.\n\n\"You are worse than a guy with your one track mind!\" I teased.\n\n\"What else do you want to do?\" Alex asked, tracing small circles on my thigh.\n\n\"Well, since you asked, we do have an invitation to go over to Cathy's later today if you want.\"\n\nAlex's eyes widened, \"Oh no, she knows. How much does she know?\"\n\n\"Cathy called this morning -- I missed our brunch date, and she pretty much guessed what happened.\"\n\n\"So... what exactly happened?\" Alex asked, \"Are we a 'thing'?\"\n\nI brushed her lips with mine, \"I want us to be, yes.\"\n\nAlex raised two fists into the air, \"YES! YES! YES!\"\n\nI laughed, \"You are a nut, you know that, right?\"\n\n\"Are you okay with this?\" Alex asked, wrapping her arms around me. \"I mean, not like you have to parade around with a rainbow flag, but generally speaking you know, okay being with me... two women... that kind of stuff...\"\n\n\"More than okay, Alex. The rest we can figure out, okay? I promise.\"\n\nAlex nodded. \"If we are going over to Cathy's, I'll need to go back to the hotel to pick up some clean clothes. And we should probably shower...\" She grinned.\n\n\"Take my car,\" I said, \"I would offer for you to shower with me, but I don't think we'd get out of the house if that happened. I'll get cleaned up here and you can come back to pick me up before we go round to Cathy's.\"\n\nALEX\n\nIt was all so surreal. I was driving Jess's car, wearing clothes that smelled like her, and would more than likely be spending the rest of the weekend with her before my flight back to the States. It was odd to be passing through the world where everything seemed to be the same, but so much was different. My reality now included the ability to kiss Jess Wainwright. I felt drunk with joy.\n\nGrateful that I still had passing familiarity with the roads after five years away, I navigated back to the hotel, where I quickly ate something, showered and packed up. I thought I might as well have my stuff with me in case I didn't return. I peeled off the bandage on my shoulder and laughed to myself as I saw the tremendous set of teeth marks that Jess branded me with.\n\nI was nervous about how this was all going to work out, but there was a part of me that felt completely confident in what was happening. Even if Jess were to throw this in my face, I thought to myself, this weekend would still be worth it.\n\nGoing through the lobby, I made sure everything was in order in case I didn't return to check out on Sunday, and headed back to the car.\n\nI bought some flowers for Jess -- I'd take the risk that it was a step too far, but I figured I could always crawl back to the hotel in shame. Nothing ventured, nothing gained.\n\nI felt so excited during the drive back to Jess's house. I didn't want to get too much ahead of myself, but last night blasted my world wide open, and I would do anything to have whatever this thing was with Jess continue to grow.\n\nI decided to leave my suitcase in the car, just in case it was too presumptuous. I grabbed the flowers and rang the bell. \"It's open!\" Jess's voice yelled. I opened the door, walked in, and my heart stopped.\n\nJess was wearing the shirt I had left in her closet. My visual cortex almost shut down with over-stimulation. She looked so sexy in my shirt; the sleeves were rolled up and she left enough buttons open that I was able to see her cleavage and the beginning of the slopes of her breasts. The shirt was tucked into a pair of jeans that showed off her body just enough to make me not be able to look away. I couldn't help but read EVERYTHING into it.\n\n\"I, uh, got you these,\" I somehow managed to say, offering her the flowers \"You look amazing, uh, sexy, I mean. You found my shirt. Which you can wear for as long as you'd like.\"\n\n\"You are adorable when you get flustered, do you know that?\"\n\nShe gave me a quick kiss on the lips -- as if she'd done it a hundred times before -- and disappeared into the kitchen with the flowers. I was rooted to the spot, still recovering, having lost all ability to respond.\n\n\"Cathy's been burning a hole in my phone with all her texts,\" Jess said as she returned, \"She will have a conniption if we don't show up soon.\"\n\nI nodded, still rendered speechless by her beauty.\n\n\"Alex, you are staring,\" she smiled.\n\nI shrugged, \"Making up for years of having to do it surreptitiously.\"\n\nJess squeezed my hand and led me out to the car, \"I'm not complaining, handsome.\"\n\n\"Is that your suitcase in the back?\" She asked, looking in the rearview mirror as we pulled out onto the road.\n\n\"Yeah -- I thought I'd bring it in case I didn't need to go back to the hotel.\" I replied, my eyes frequently straying to the open neck of her shirt.\n\n\"Good thinking, Sherlock,\" she said, noticing my glances and smiled. She patted my thigh and left her hand there. \"You really are enjoying the view, aren't you, Alex?\"\n\nI put my hand on hers and sighed contentedly, \"very much so!\"\n\n\"Oh, Cathy mentioned there might be a few little ones at their house. Julia's sister and her children are supposed to make a quick visit today.\"\n\nI nodded, not really caring if the Prime Minister showed up.\n\n--AFTERNOON--\n\nJESS\n\nI parked behind Cathy's blue VW in front of the house and headed to the gate that led to their back garden. Alex followed closely behind, sneaking in a gentle nip to my ear as I threw the gate open. I loved seeing the effect I had on Alex, and I loved how she was making no effort to hide her attraction to me. If I didn't have Cathy pinging me with texts to go round to her place, I doubt we would have left the house.\n\nI heard the kids before I saw them: a blur of blonde hair and short legs making a bee line for us. Cathy was sitting on the patio and waved us in with a massive grin on her face.\n\n\"We were wondering if you would show up or if you'd continue to be distracted with you, er, 'catching up',\" she said with a wicked twinkle in her eye. \"Make yourself at home. Jules will be out in a moment.\"\n\nOne of the boys ran into Alex at full force while trying to keep ahead of his brother, who was brandishing a water gun. He stared up at her with alarm, but Alex didn't miss a beat, \"UGH,\" she shouted as she feigned pain, \"you got me... ahhhhh!\"\n\nBy the time Julia and her sister emerged from inside the house, Alex was in the thick of it with the boys, taking a shot right in the stomach as the brothers screamed with delight. She collapsed dramatically as the boys ran over, giggling joyously while continuing to pelt her with water. I had both hands on my mouth as I watched, finding Alex's play both horrifying and alluring all at once.\n\n\"NATHAN! COLIN!\" Julia's sister shouted, \"No shooting water at people! That's the rule!\" The boys scrambled away and Alex stood up, gasping for air, \"It's fine, it's just water,\" she said with a drop-dead gorgeous grin.\n\nThat, combined with the half wet t-shirt, set off a silent quake of desire between my legs.\n\n\"I'm so sorry,\" the mother said, \"they should know better. I'm Chris, Julia's sister... and mother to the hell spawn who just soaked you,\" she reached out her hand.\n\n\"Alexandra,\" Alex said laughing, shaking her hand.\n\n\"And I'm Julia,\" Julia interjected, \"lovely to meet you. Cathy has told me so much about you. Before anything else though, come on in and let's get you a dry shirt.\" Alex followed her into the house.\n\nChris shouted good-bye to her sister, blew a kiss at Cathy, and went off to herd the two boys into their car.\n\nThe moment Cathy heard Chris's car start, she turned to me hissing, \"Quickly, before Jules and Alex come back. Tell me everything.\"\n\nI laughed. \"Well, as you know, I gave her the big signal -- I chased her down in her hotel and we kissed. Then we met up at my place last night, started talking, and then one thing led to another.\"\n\nCathy squealed, \"Wow. So how was it?\"\n\n\"It was good, Cathy. So, so much better than good, actually. I didn't expect it to be that good.\" I started blushing.\n\nCathy was beaming at me.\n\nI shook my head, \"I don't know where this is going -- it all happened so quickly. I mean, you know my relationship history. And I don't just jump into bed with people... but I kind of jumped on her. And it didn't feel like a whim... but, um, we haven't really done much talking this morning.\" I blushed again.\n\nCathy smiled, \"No, you haven't had it easy with relationships. But I've also not seen you glow like this because of someone. Just make sure she knows how you feel -- she's been pining for you for years, you have some catching up to do.\"\n\nI looked at Cathy, \"Of all people... I never thought Alex... I mean, I didn't think it could come to this, so I'd just been treating her like any other former student. But how I feel now is something quite else.\"\n\nCathy nodded, \"There's something that makes you guys click. And you're right, it's an all-girls boarding school, people have crushes all the time that never lead to anything, so she probably had no idea as to the full force of what she was feeling. But from where I stood, the way you looked at each other on Wednesday, it was clear those feelings were not fleeting -- for either of you.\"\n\n\"I might be very different from what she imagines me to be. So this might all come to nought.\" I reminded her.\n\n\"No, I don't think so. There's a history here. I saw you guys together when she was at school. You never crossed the line -- let there be no mistake -- but there was a connection there. You guys are in this -- whatever it is -- together, and it's not just all in her head.\"\n\n\"After last night, it'll be hard for anyone to think it was just in her head. But Cathy, it's not her head I'm worried about. It's mine.\"\n\nALEX\n\nJulia led me down the main hallway into what appeared to be a guest bedroom. She went to a chest of drawers and pulled open a drawer. She dug through and came up with a random collection of polo shirts and t-shirts.\n\n\"These have been left here over the years when people visited -- one of these ought to fit.\"\n\nI sorted through them and picked a navy blue polo. \"Thanks,\" I said, \"This should work.\" I handed the remainder back to her.\n\nShe headed out of the room, \"Super. Come back out once you are done.\"\n\nI peeled off my wet t-shirt, and was about to grab the polo shirt when she poked her head back in, \"What do you want to drink -- oh, sorry -- you were quicker than I thought you would be.\"\n\n\"No harm done,\" I smiled, \"just us girls.\" I reached for the dry shirt.\n\n\"What happened to your shoulder?\" She gasped. \"That looks painful!\"\n\n\"Ah. Um. Small accident.\" I stammered as she came closer to take a look.\n\n\"These are teeth marks!\" She exclaimed.\n\nHer eyes eventually widened in understanding, \"Oh. Ohhhhh! I see. Oh heavens, Alex. Sorry.\"\n\nI quickly put on the dry shirt. Julia started shaking with laughter, \"looks like you guys had a good time last night... Cathy is going to die when she sees this.\"\n\nI blushed, but Julia put an arm around me as we walked out and squeezed, shaking her head with amusement.\n\nCathy and Jess were deep in conversation when we returned to the patio. Cathy looked up, her eyes darting between me and Julia. \"Jules, why do you look like a cat that ate a canary?\"\n\nJulia made a motion of zipping up her lip, \"No comment.\" She turned to me and said, \"Drink?\"\n\nI nodded as I sat down next to Jess, \"Iced water would be great. Thank you so much.\"\n\nCathy narrowed her eyes at me, and when I shook my head, she turned to Jess: \"What is this little inside joke between Alex and Julia?\"\n\nJess shook her head and shrugged. Undeterred, Cathy leapt up to find Julia and Jess looked back at me, \"What?\"\n\nI pointed to my shoulder, \"Julia popped back into the room when I had my shirt off and saw the bite mark.\"\n\nJess hid her face in her hands.\n\n\"I didn't say anything and Julia pretty much guessed. Sorry Jess.\"\n\n\"LET ME SEE IT!\" Cathy came bounding back.\n\nJess buried her head in my chest. \"Fine, you can show her,\" Jess mumbled into my shirt.\n\nI hooked my finger under the collar and pulled the opening over towards my shoulder.\n\n\"Holy mother of bite marks! Bloody hell, Jessica Wainwright, you must be part werewolf or something. Alex, we can lend you some lacrosse goalie pads for future, um, nocturnal activities.\" Cathy's mouth was twitching as she said this.\n\n\"Don't mind her,\" Julia said when she returned with my water, \"she bit me on the leg once. And it wasn't even during sex. She was losing an argument and decided that a bite would redeem her failure to make a valid point.\" Cathy stuck out her tongue at Julia as I laughed.\n\nI felt instantly comfortable with our hosts, and although Jess was still blushing, she did laugh along with the rest of us. I leaned back on the settee and Jess tucked herself into my side.\n\nThe four of us fell into an easy conversation, and time passed easily.\n\n\"Stay for supper, you two. Jess, it's the least you can do after missing brunch this morning,\" Cathy said as the clock ticked towards 7pm.\n\n\"What do you think, darling?\" Jess asked. I nodded, wondering if Jess realised she'd call me 'darling'.\n\nCATHY\n\nJulia shooed me into the kitchen. I stood by the door trying to get a peek at Alex and Jess, who had followed us inside and were now sitting on the living room couch.\n\n\"Stop spying on them and help me with the food,\" she admonished.\n\n\"They are just talking -- I'm not invading their privacy or anything. It's just good to see them together.\" I left my perch by the door and started on the veggies.\n\n\"I didn't know Jess had it in her, honestly.\" Julia said, \"I mean, she's talked about random trysts with women, but I never thought it was her thing.\"\n\n\"Alex is her only thing, darling.\" I replied, \"She just didn't know it back then, and how could she? She was a teacher, Alex was 18. It was unthinkable. The effect they had on each other the other day was instantaneous -- they couldn't keep their eyes off one another. Also helps that Alex grew three inches and put on a couple pounds of muscle.\"\n\n\"Is someone feeling a little insecure about not having abs of steel?\" Jules teased, coming over to give my bum a thwack.\n\n\"Oh, excuse me, but weren't you the one who accidentally-maybe-on-purpose caught Alex in a state of undress this afternoon? Good eye candy was it?\" I feigned distress.\n\n\"Too butch for me. I like my women soft and strong, and none better than the one I have at home.\" Julia gave me a quick reassuring peck on the cheek. \"The lean muscle mass thing works for some people, but I think it looks too skinny.\"\n\n\"Hmph,\" I grunted, \"Well, it seems to be working for Jess. I reminded her that given their history, this has been bubbling under the surface for a while, with Alex being a little more aware of it than Jess was.\"\n\n\"I think it's sweet that Alex has held a torch for Jess, but Cath, watching them today, it does not look one-sided... What was that?\" Julia looked up. We'd both heard a loud crash.\n\nI poked my head around the kitchen door. \"That, my dear, is the consequence of two women snogging like teenagers on our couch. They may have broken our clock.\"\n\nJulia giggled and waved her wooden spoon like a conductor's baton, \"Well, let's hurry up and finish making supper then. They can bugger off back to Jess's place before we have to put in ear plugs and lock them in the guest room.\"",
        "JESS\n\nWith Cathy and Julia busy in the kitchen, Alex and I sat in contented silence next to each other in the living room. I reached behind us and gently stroked her neck.\n\n\"You called me 'darling',\" Alex said, \"I liked it.\"\n\n\"I liked saying it,\" I replied honestly. \"Actually, I called you 'darling' earlier this morning, before I realised you were talking in your sleep.\"\n\n\"That was embarrassing,\" Alex leaned her head back into my hand, so I started massaging her scalp. \"Feels good,\" she murmured.\n\n\"Hmmm. It's been very hard keeping my hands off you all afternoon,\" I snuck at look at the kitchen, and seeing that we were still alone, grabbed her shirt, \"come here.\" I pulled her towards me for a kiss. Alex pivoted and shifted her long legs onto the couch and settled on top of me.\n\nCRASH.\n\nThe force of our bodies accidentally tipped over the clock on the adjacent side table.\n\nAlex popped her head up.\n\n\"I'll buy them another one,\" I said quickly, not wanting to interrupt the kiss for more time than necessary.\n\nAlex grinned and shifted her weight on top of me. She then kissed me so deeply it made my toes curl.\n\nI had not been lost in a kiss like that for a long time; we barely noticed when Cathy and Julia emerged from the kitchen laden with food.\n\n\"Alright love birds, come get the grub,\" Cathy said in an unusually loud voice. Alex jumped like she was on springs, and quickly excused herself to go to the bathroom.\n\nI quickly shoved bits of my shirt back into my jeans and, trying to sound casual, said, \"Hm... this looks delicious!\"\n\nJulia snickered, \"Good try being suave, Wainwright. Sit down and dig in. Oh -- and your left boob is just about hanging out of your shirt.\"\n\n\"Shit!\" I immediately re-adjusted and buttoned up, as Julia returned to the kitchen, laughing maniacally.\n\nAlex came back from the bathroom to find Cathy piling an absurd amount of food onto her plate. \"Julia says you are too skinny,\" she explained, earning a well-aimed punch in the arm from her wife.\n\nCathy and Julia could not have been more gracious hosts, and the conversation and wine flowed easily. It helped that Cathy and I have been good friends for so many years allowing our conversation to naturally draw Alex into our world. Cathy and Julia told stories about mutual friends, members of my family, and anecdotes about me that, while being borderline embarrassing, were filling in gaps for Alex that were equal parts informative and amusing.\n\n\"When will you be flying out tomorrow, Alex?\" Cathy asked, causing my stomach to drop.\n\n\"Flight's at four,\" Alex said, glancing at me.\n\nFewer than 24 hours left, I realised.\n\nJulia stood up and started clearing the table, \"Then get out of here, you two, don't worry about the dishes, we'll take care of it. Just don't give each other anymore injuries tonight, okay? \"\n\nI threw a napkin at Julia in mock protest.\n\n\"Thank you for having us over,\" Alex said sincerely, as we got up.\n\nCathy gave her a big bear hug and walked us towards the door. \"Drive carefully ladies, and Alex, safe travels tomorrow -- come back and see us soon.\"\n\n-- NIGHT\u2014\n\nJESS\n\nAs we drove home, Cathy's words about Alex were echoing in my mind. I knew I had been coy with Alex in terms of keeping in touch. Now, on the eve of her return to the New York, I felt an urgency to assure her the balance would be righted. Come what may, I wanted Alex in my life, not as an eager dispatcher of information from across the Atlantic, nor as a star in some far-reaching constellation of my consciousness.\n\nNagging me at the edge of my heart though, was a small reminder of how badly my last relationship ended, and why I'd been reluctant to jump into anything. My mind was a whirl of a million thoughts, and I was driving on auto-pilot until Alex reached over and took my hand, interlocking her fingers with mine.\n\n\"You okay, baby?\" She asked. My heart leapt when she said 'baby.' I had always disliked men calling me that, but coming from Alex's mouth, the endearment enveloped me like the warmth from a cozy fire.\n\nI looked over at her, \"I don't want you to go,\" I said bluntly.\n\nAlex squeezed my hand, \"You don't know how much it means to me to hear you say that. I don't want to go either.\"\n\nWhen we got home, we collapsed onto the sofa and I rested my head on her shoulder.\n\n\"I'm keeping this shirt,\" I stated, \"and I'm driving you to the airport tomorrow.\"\n\n\"Ok,\" said Alex, running her fingers through my hair.\n\n\"We can talk every day,\" I continued, \"and I can fly over the next long weekend I get.\"\n\nI felt like I was over-compensating: for the sheer enormity of the feelings that I had swelling up for her, and for the uncertainty that crept quietly around the edges of my heart.\n\n\"Jess, you don't have to say all this,\" Alex sat forward and looked at me, \"This is just a little more than 24 hours old. Don't get me wrong, I'm all in in terms of whatever this is -- it's already way beyond anything I dared think about. But you don't have to say all this. I love that you did say it, but I'm not expecting anything.\"\n\n\"But that's just it - I know my track record for keeping in touch has not been great.... Wait, just let me finish,\" I put my hands on her lips, \"but it's just the way I've been with all my former students. Now, no one produces quite the volume of correspondence that you have done, but I've always chosen to not get too personal with everyone who wants to keep in touch with me. You understand? And now, what I'm saying is, we've moved beyond that -- massively -- and I want you to know --- mmmph\"\n\nAlex's kiss cut off the rest of my sentence. When I kissed her back, she immediately had her hands all over me and before I knew it, my shirt was unbuttoned and my bra undone.\n\n\"How did you just do that?\" I laughed.\n\nAlex started kissing and licking my breasts, \"you said you wanted me to know something?\" She said between kisses.\n\n\"I-I...mmm... just wanted you to... oh god... AH!\" I cried as her mouth reached one of my nipples and she gently pressed it between her lips.\n\n\"I'm listening Jess, keep going,\" Alex moved over to my other breast.\n\n\"Uh, it's just... I want... um,\" I froze with pleasure as Alex ran her tongue over my nipple, \"screw it. Just take me to bed Alex.\"\n\n\"As you wish,\" Alex murmured. She stood up with me in her arms, her mouth showering my neck with kisses, and deposited us onto the bed moments later.\n\nALEX\n\nShirts and trousers and everything else came flying off. Jess took my breath away as she caressed and kissed every part of my body. I couldn't believe how much I'd missed the sensation of her body on mine. She started moving lower and lower as her fingers teased apart my opening. I inhaled as her fingers entered me, slowly moving in and out as she kissed my inner thighs, her other hand squeezing my ass. My body jerked involuntarily when her mouth homed in, sending currents of pleasure zig-zagging through my nervous system.\n\n\"Oh Jess!\" I moaned, looking down at her, \"I need you up here with me.\"\n\nShe stopped and smiled, \"What do you need, honey?\"\n\n\"Turn around and bring that beautiful arse of yours closer.\" I grinned, \"I feel like multi-tasking....\"\n\nJess obliged, spinning around until she hovered over my mouth. I grabbed her hips and pulled her down towards me as her mouth and fingers resumed their assault deep inside me. I mirrored her lips' and fingers' every move, and every change in speed. Our bodies were vibrating with mutual arousal and stimulation. We were moaning into each other's hot, slick flesh as our bodies flexed against each other with every stroke of our tongues. I felt her pulse beneath my tongue as she came, and I released my own explosion moments later.\n\n\"Oh. My. God.\" She moaned into my thigh, \"I didn't think that could work like that.\"\n\nI chuckled, \"It doesn't always.\"\n\nJess turned around and nestled into the crook of my arm. I grabbed the blanket and pulled it over us.\n\nShe draped a leg over my body, her hand covered my breast casually. \"Hmmm,\" she sighed.\n\nI ran my hand up and down her body, ecstatic with the realisation that Jess and I have become lovers.\n\nAfter a while, Jess raised herself up on her elbow, looking serious. \"Alex, can I ask you something?\"\n\n\"Sure -- go for it,\" I looked at her.\n\n\"You said there was nothing worth talking about in terms of a 'somebody' back in New York, but is that person, I mean, is she expecting anything to happen?\"\n\nIt took me a second to realise she was talking about Tasha, my triathlon training partner.\n\n\"I don't know,\" I replied, \"We weren't dating, if that's what you are asking, and certainly nothing is going to happen now. Why? What are you thinking?\"\n\n\"I am thinking a lot of things, none of them very clearly,\" she said, looking uncharacteristically flustered, \"but one thing I'm certain of, and I have no right to feel it, or ask for it, but I desperately do not want any other woman vying for your attention.\"\n\nMy stomach lurched with joy. I smiled, \"I don't think it's something you need to worry about. I've never wanted anyone vying for your attention, so we're even. I'm going to have a hard time thinking about anyone but you, you know that, right?\" I propped myself up to face her.\n\nJess leaned in and gave me a kiss, \"That's just the thing. What if the 'me' that you've been thinking of for so long is really not me at all? I might be a real let down. Also, this is new and different to me, you've been with women before -- what if you find me terribly disappointing?\"\n\nI snorted -- how could she even think that!\n\nJess smiled, \"No, really. I've never felt this level of physical attraction to anyone, and maybe it's because it's new, but I also know that I have probably have a deeper emotional attraction to you than I've ever fully acknowledged. I don't want to lead you on, but I know it would be a lie to call this a fling.\"\n\nI rolled onto her and kissed her gently, \"You are not leading me on. If anything, all you've done -- prior to this weekend -- is throw off signals that there would be nothing beyond friendship, if that. That fact that we are now in the middle of something is more than I could have hoped. I don't think you understand how besotted I am with you. That would be the truth even if we hadn't ended up sleeping together this weekend. That would still be the truth if you told me this had to end tomorrow. I'm just glad neither one of us wants this to end tomorrow.\"\n\n\"Kiss me again,\" whispered Jess.\n\n--DAY FIVE --\n\nJESS\n\nI woke up feeling a delicious weight on my body. Alex's arm was lying across my chest as she slept next to me. I gently bent her arm and positioned her hand on my breast.\n\nAlex stirred, \"Hm... what are you doing?\"\n\n\"Helping you grope my breast,\" I explained.\n\nAlex gave my breast a squeeze, \"What time is it?\"\n\n\"Just after 8:30,\" I said, looking at the clock.\n\nAlex groaned, \"That's 3:30 New York time for me... Lemme sleep a little more...\" she rolled over and reached for the covers.\n\nI went to the loo, and when I returned to the bed, Alex lifted the covers, \"Hold me, please,\" she muttered drowsily.\n\nI spooned her from behind; her breath fell to a steady pace.\n\nI started caressing her breasts.\n\nAlex grunted, \"You are not going to let me sleep, are you?\"\n\nI nipped her gently on the shoulder, \"I could do that... but I was thinking more about how you could use that tongue of yours to do unspeakable things to me.....\"\n\nAlex sat up immediately, \"I'll sleep on the plane.\"\n\nI laughed.\n\n\"Just a minute,\" she said, and went padding off to the bathroom.\n\nAlex returned just as I was lying back on the bed, legs spread in anticipation. Alex eyes widened with lust as she slotted her body between my legs. She buried her face between my breasts and started kissing my cleavage, moving to the underside of each breast, until finally her mouth took hold of one nipple after the other.\n\n\"Don't make me wait, Alex,\" I said breathlessly, my desire for her cresting.\n\nHer brown eyes locked on mine, Alex trailed her hand downwards, slipping her fingers inside me. She pushed in deep, and made a delectable twist at the end of each thrust, sending bolts of pleasure through places inside me I didn't know I had. I reached out to pull her closer, but Alex pinned my arms above my head, holding her body just above mine as she continued to push slow, deep strokes into me, priming me for climax. I looked down at her beautiful body, muscles flexing as she filled me up. I was helpless to touch her, and was whimpering for more.\n\n\"More, Alex, oh god, this feels so good,\" I whispered.\n\nAlex started to pump her fingers a little faster, making slick pops as she slid in and out me. I lifted my legs towards my body, and Alex took full advantage, adjusting the angle of her thrusts. \"Oh shit, Alex, fuck me harder, baby,\" I heard myself screaming, \"don't stop!\"\n\nAlex grunted as she threw it into a higher gear, and her fingers felt like a jackhammer with its speed and depth. The first orgasm exploded within the first five strokes, and like dominos, wave after wave hit me until I couldn't scream any more.\n\n\"Come for me one more time, Jess,\" Alex panted.\n\nI grabbed the back of my knees and pulled my legs towards my shoulders, giving Alex even more room. She lowered her mouth towards me as I arched for her. Her fingers resumed fucking me. Alex's hot and skillful tongue danced all over me, her mouth sucking and nipping. And then it hit me, an orgasm so overwhelming I started making sounds I didn't recognise as I came.\n\nMy limbs felt like lead as they fell around me limply. Alex fell on top on me with a delicious sheen of sweat, breathing hard. My legs kept twitching.\n\nALEX\n\nJess and I didn't move for what seemed like an eternity after each of us came several more times. I was sprawled on top of her, my head resting on her left breast. I tried to memorize every inch of her beautiful body. Her silky brown hair, falling around her face in a sexy mess. Her green eyes luminous and deep. Her full, pink lips, curled in a small smile as she looked at me.\n\nI could hear her heart beating as she caught her breath. My arm ached from the thrusting that I did. There were small beads of sweat in her cleavage that caught the light as her chest moved up and down. I loved making her come.\n\nSlowly, Jess lifted her arms and wrapped them around me. I looked up and gave her a quick kiss.\n\n\"Oh my god, honey. I think you scooped every last orgasm out of me.\" she whispered.\n\nI cupped her breast with my hand, gently squeezing, \"So this will last you until the next time we get together?\"\n\n\"Do you have to go?\" Jess asked.\n\n\"Yes, I do, unfortunately, which reminds me that I have to call the hotel and let them know I am checking out.\" I reluctantly rolled off her body.\n\n\"How utterly unromantic,\" Jess said as she stretched luxuriantly, \"I'm going to take a shower, then.\"\n\nI detached my phone from the charger as I heard the shower come on, and quickly called the hotel to close out my charges. By the time I stepped into bathroom, steam was billowing out of the shower.\n\nJess was just soaping up her body when I stepped in. \"Let me,\" I said eagerly.\n\nI ran my hands over her upper body, my soapy fingers sliding over her skin. I spent a lot of time on her breasts, until she slapped my hands away and turned towards to the water to rinse off.\n\n\"You are being a killjoy,\" I protested, \"I thought we could have a little fun in here.\"\n\n\"Well, if I let you get your way, and given our track record, we'd drain the entire town's supply of water. And I'm starving.\"\n\n\"That's the second time you've prioritized food over other -- um - things.\" I protested, although my stomach was growling in agreement with Jess.\n\nWithin minutes, we were both showered and dressed. We walked into town to one of Jess's favourite brunch spots. We were very obviously presenting as a couple, and I kept expecting Jess to adjust her behaviour towards me in public; but there was none of it. It was as if Jess just woke up in a lesbian relationship and expected the world to go along with it. And why shouldn't she? I remember the awkwardness of being with a woman who insisted on acting straight in public. That relationship didn't last long, not surprisingly.\n\nJess took my hand in hers on the walk back to her house. I knew I was falling in love with her, and maybe I already did a long time ago. Annie's words of caution still rang in my ears and I pushed aside my fear that Jess might never feel the same way.\n\n\"What's on your mind, Alex?\" Jess interrupted my thoughts, \"You've gone awfully quiet.\"\n\n\"Committing to memory how it feels to walk like this with you, holding your hand,\" I gave her hand a squeeze. She gave me a quick squeeze back.\n\nAs we got back to her house, Jess looked at her watch and sighed, \"We'll need to get in the car soon. But before we go, I have something to give you.\"\n\nI sat on the sofa while she disappeared into the spare room. When she came back out, she had an envelope on her hand.\n\n\"This is for you,\" she said, handing it to me.\n\n\"Well, this is new!\" I teased, \"I'm usually the one flooding you with letters.\"\n\nJess blushed, \"As I said, everything is different now. Alex, please don't open it until the plane has taken off, okay?\n\nI nodded, sliding the envelope into my backpack, \"I promise,\" I said sincerely.\n\nJESS\n\nAlex and I were both lost in thought as we headed to the airport, her hand holding mine as I drove. I cursed the lack of traffic as we cruised towards Heathrow, jealous of cars headed in the opposite direction.\n\nBefore we knew it, I was pulling into the short stay car park at Terminal 3. Alex got her suitcase and backpack from the backseat and we headed to the check-in kiosks. With her boarding pass in hand, we slowly meandered towards the departure area.\n\n\"Call me when you arrive,\" I said, hugging her tight.\n\n\"It will be after midnight for you,\" Alex's strong arms held me reassuringly.\n\n\"Just call me. You have my mobile and home number, right?\"\n\n\"Jess, I've had them committed to memory since I coaxed them off you years ago,\" Alex kissed me on the nose.\n\nI hugged her tighter.\n\n\"I better go,\" Alex said quietly.\n\nI held her face in my hands and kissed her, desperately wanting to convey everything that I was feeling but couldn't say.\n\n\"I really do love kissing you,\" Alex murmured when we finally broke away from each other, \"drive home safely, okay? I'll call you when I land.\" She gave me another kiss, grabbed her bags, and walked through the gates.\n\nI stood there, mute and frozen as I watched her hand her passport and boarding pass to the immigration officer. She turned, raised her hand, and disappeared around the corner.\n\nI walked numbly back to my car, picked up my phone and texted Cathy: Alex just left. At airport.\n\nMy phone beeped instantaneously: Don't go home. Come to us. Jules will fix you up something strong.\n\nFor lack of ability to make any decisions, I drove myself to Cathy and Julia's. I let myself in, and Cathy came running out of the kitchen when I walked through.\n\nShe gave me a big hug, \"Jess -- have you eaten?\" Cathy asked. I shook my head and she disappeared into the kitchen, saying 'Julia's in the kitchen fixing up just the thing.'\n\nMy phone buzzed. It was a text from Alex, The immigration officer asked me the purpose of my trip and I contemplated telling him it was to do unspeakable things to you.\n\nNot long after came another, Now sitting in the lounge, watching a kid repeatedly plug and unplug his dad's phone into the wall. Dad oblivious.\n\nI chuckled, dried my eyes, and texted back, At C and J's. Wish you were here.\n\nAlex: Me too. Say hi for me. I'm going to grab some food. Will text you before I board.",
        "I wandered into the kitchen. Julia was mixing a drink of some sort and Cathy had a steaming bowl of hot pasta in her hand.\n\n\"Which do you want first -- the drink or the pasta? I'll have whichever one you don't want.\"\n\n\"Uh, I'll have the pasta, thanks.\" I slid onto a bar stool by the kitchen counter as Cathy placed the bowl in front of me.\n\n\"Alex says hi,\" I grumbled with a mouth full of pasta, \"she'll text when she boards. Probably in about an hour. She's getting some food now. She promised to call when she lands, but that won't be for hours yet, probably midnight. Around 7 her time.\"\n\n\"Oh boy,\" sighed Cathy, \"you're smitten, haven't you?\"\n\nI shrugged. Then I pushed away the bowl and rested my forehead on the counter.\n\n\"I didn't want to be in a relationship. I'm not good at them. I don't know what happened these past few days. I feel like I've gone mad or something.\"\n\nCathy reached for the bowl of pasta and took a couple of bites, \"But you like her a lot. As in reciting-her-flight-itinerary-in-two-time-zones a lot.\"\n\nJulia rubbed me on the back, \"Here, drink this. Vodka and tonic. I'll make you something else to eat since Cathy seems to have hijacked your pasta.\"\n\nI took a gulp of the drink, feeling the alcohol burn my throat on the way down, \"Oh wow. That's strong. Uh, yes. I do like her a lot. But again, I was happily single and I really wasn't looking for anything to happen. But she just... \"\n\n\"The sex was that good?\" Julia teased.\n\nI sat up and took a deep breath, \"It's not just that. Yes, it was good -- I mean, guys, it was ridiculous it was so good, but it wasn't just that. She's funny, intelligent, strong, attractive. She listens to me. But I think she's always been that way. I'm just realizing now that she's always been that way with me. I always dismissed it, or didn't see it, or something.\"\n\nCathy took another bite of pasta, \"So you don't feel comfortable with the attention?\"\n\n\"No it's not that. I want to be with her. I can't bear the thought of not having Alex's attention. Saying good-bye was harder than I expected it to be,\" I muttered.\n\n\"That's not a bad thing, right? Just means you want to spend more time with her?\"\n\nI nodded.\n\n\"I'm still not hearing what the problem is, Jess.\" Cathy shrugged.\n\n\"The problem is, I can't get enough of her, and I don't how it happened. I usually give these things a lot of thought before jumping in. I thought I had decided to not get into a relationship. I mean, I don't know what's going to happen next. She's lives in New York City! How is that going to work?\"\n\nJulia grimaced, \"If you wanted to stay single, why didn't you tell Alex it was just a fun weekend then, why are you throwing a wobbly in our kitchen?\"\n\nThe notion of not being with Alex again was devastating.\n\nJulia shook her head, \"Look Jess. You can do what you want, and stay single all you want. But here's the thing: I've known you for a while now, and I've never seen you happier than you were yesterday when you and Alex came over.\"\n\nCathy nodded earnestly.\n\n\"Ok, fine. Say I've fallen in love with her --\" I glared at Cathy, whose mouth had dropped open.\n\nJulia started laughing. I returned my forehead to the cold surface of the kitchen counter.\n\n\"It's not funny, guys,\" I groaned, \"I mean, what if I don't live up to her expectations, and she realises she doesn't really like me... and the whole thing just withers away...\"\n\n\"Oh Jess. You silly ninny,\" Cathy slapped my shoulder, \"Alex has been in love with you from the first day she laid eyes on you. You are the only one who hasn't noticed.\"\n\nALEX\n\nMy phone buzzed: C stole my food and plying me with alcohol. I miss you.\n\nJess texting me, telling me she missed me? My heart was thumping out of my chest it made me so happy. I shot back: Miss you too, boarding soon.\n\nJess: Call me when you land. I'm staying over at C's.\n\n\"Okay,\" I typed back, \"sleep well, baby.\"\n\nI boarded and was settled into my seat soon enough, my hand gripping the envelope from Jess, willing the cabin doors to close. The minute the pilot gunned the engines for take-off, I ripped it open, my hands shaking with anticipation. There was a single sheet of paper in the envelope, with Jess's distinctive script on both sides. I took a deep breath and started reading:\n\n**********\n\nMy dearest Alex,\n\nI'm writing this while you are back at the hotel getting your things. The house already feels different without you and I'm dreading your flight home. I'm sitting at my desk in the spare room, and finding myself at a loss for words. You, being here this weekend, has changed everything.\n\nIt's ironic, really. I'm thinking about all those letters you wrote me, all those emails, telling me what's been going on in your life, how little things you noticed reminded you of me, and how I always thought it was really sweet that I would cross your mind. Now, it is all I can do to not think about you, and as I sit here, I feel compelled to tell you this, even though I can barely find the words to describe what it is that I'm feeling.\n\nI already miss you desperately, and I worry that I won't live up to the ideal that you may have in your head -- that you won't like the parts of me you don't yet know.\n\nI can't bear the thought of me not being what you've been yearning for all these years -- and you turning away. Can you tell how hard I am falling for you? I cannot wait to be in your arms again.\n\nSo there it is. I've told you. Please call when you land. I'll be waiting.\n\nLove,\n\nJess\n\n**********\n\nTears were streaming down my face and my heart was bursting. I looked up at the video screen showing the progress of the flight: 7 hours to go. This was going to be torture.\n\nJESS\n\nI've stayed over at Cathy's before, so the three of us fell into an easy rhythm. Julia was in the study, getting papers ready for her work in the City the next day. Cathy was in the living room with me, reading a book. I was stretched out on the couch, the Sunday paper on the floor, staring into space, wondering if Alex had read my letter. My heart started pounding. I shifted onto my side and stared at Cathy.\n\nShe peered over her book at me and went back to reading.\n\nI continued staring at her. She ignored me.\n\nI sighed loudly.\n\nShe put her book down, \"Yes, Jessica. What is it?\"\n\n\"Alex lands in two hours,\" I stated.\n\n\"That she does,\" Cathy said, \"You are not going to make the plane fly any faster giving me the bloody countdown every 20 minutes.\"\n\n\"Do you really think that she's in love with me, like, not a crush, but the real thing?\" I asked her for the hundredth time that evening.\n\nCathy picked up her book and slowly hit herself on the forehead with it. \"Yes, Jess,\" she muttered.\n\nI smiled. \"So you really think so. Because I wrote her that note...\"\n\nCathy's eyes flashed dangerously, \"Yes, you told me about that note many, many times. And now that you've mentioned it for the two thousandth time, I've changed my mind. I'm thinking now that she's had her way with you, Alex is going to forget all about you, move on and run off with some blonde and buxom American swimsuit model and have lots of babies with her.\"\n\n\"That's exactly what I'm afraid of!\" I groaned and dove under the pillows of the couch.\n\nJulia padded out of the study, \"I'm hitting the hay... What's wrong with her?\"\n\nI poked my head out of the pillows, trying not to look too pathetic.\n\nCathy shrugged, \"She kept asking me if I thought Alex loved her, because she's getting insecure about that vague love note she wrote. So I finally told her that there's no hope of Alex ever feeling the same. I may have gone too far.\"\n\nJulia leaned down and kissed Cathy on the forehead. \"Who knew we'd have so much drama this weekend? Come to bed, darling.\"\n\nCathy nodded, \"I will, after giving this one oxygen... or something to knock her out with. I was JOKING, you quivering puddle of ectoplasmic paranoia!\"\n\n\"What if she doesn't call?\"\n\n\"Come on, off to bed, it'll be better if you go to sleep because otherwise you are going to drive yourself mad,\" Cathy said as she and Julia started to maternally herd me towards the guest room. \"She's going to call. It's going to be fine. Go.\"\n\nI reluctantly complied, and fell into bed after checking 3 times that the ringer on my phone was on. I really am going mad, I thought, well, Cathy and Julia can wave enthusiastically as the men in the white coats cart me away...\n\nALEX\n\nI scrambled to turn my phone on the moment the plane landed. I had slept fitfully throughout the flight, and kept waking up to read Jess's letter over and over again. It's hard to think of the Jess that I know as being emotionally vulnerable. She always seemed so unattainable, and I had never seen her wracked with doubt. But her letter made me wish I wasn't on a flying tin can blasting away in the opposite direction. I wanted to reassure her that nothing could turn me away from what I feel for her. I spent the last hour of the flight trying to figure out what I would say to her when I called, and it ranged from cheesy to enormously cheesy. I pretty much gave up.\n\nI stared helplessly as my phone took its sweet time starting up and grabbing a signal, so decided to prioritise getting out of the airport as soon as possible. I gathered my things and followed everyone else trooping out of the cabin. Immigration was surprisingly quick, and without any checked luggage, I was through customs and standing in the taxi queue before most of my fellow passengers.\n\nI checked my watch: just after midnight in the UK. I fished my phone out of my pocket and quickly punched in 12 digits and waited.\n\nJess picked up on the second ring, \"You landed...\" She sounded sleepy. Her voice was heavenly.\n\n\"Yep. Standing in the taxi queue. I hate that I woke you, go back to sleep, baby.\" I said.\n\n\"It's okay. I miss you,\" She said, sounding more wide awake now, \"did you read my note?\"\n\n\"Yes, I did -- maybe a hundred times. I am not going anywhere, Jess. I wish we didn't have to be apart tonight.\"\n\n\"Hmmmm. Me too.\" Jess murmured. I could hear her smile.\n\n\"Go back to sleep, sweetie, I'll call you in the morning.\" I promised.\n\n\"Ok. Good night, my love.\"\n\nI froze. \"Good night,\" I responded.\n\nJess hung up. I couldn't move. My love. Must be the jetlag. No, no, it was real.\n\n~ END ~ "
    ],
    "authorname": "careythomas",
    "tags": [
        "lesbian",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/five-years-and-four-days-ch-04"
}