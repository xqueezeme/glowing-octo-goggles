{
    "title": "There and Back Again Ch. 071-072",
    "pages": [
        "Chapter Seventy-One: Forgiveness\n\nI left Tomas pouring over his maps, and continued on my way to find Alistair; after clearing the main hall, and stealing some bread, cheese, and another apple from a passing servant, I headed up towards his room. As I walked down the hall, munching on my snack, I heard talking; I paused just outside of Theron's open door. He was talking quietly with Blake, and I eavesdropped for a few minutes.\n\n\"This is the letter A. Each letter makes a sound; this one can either sound like 'ahh' or like 'ay'. For example, apple, or make.\"\n\n\"Like eight?\" Blake asked, and I grinned. I'd asked the same question once, in school, as I recalled.\n\n\"Um, not exactly. It sounds the same, but sometimes other letters in a combination can make the same sounds. Eight is spelled with the letters E and I. When you put them together, they sound like 'ay'. It's a bit confusing, isn't it?\"\n\nI could practically hear Blake scratching his head. \"Okay, if you say so,\" he replied dubiously.\n\n\"Let's try the next one. Letter B. It's less confusing.\"\n\n\"How do you know what order they go in?\"\n\n\"You just have to remember. You'll get it eventually.\"\n\nI turned the corner, finally having something to add to the discussion. \"There's a song, actually. It makes it easier to remember.\" I smiled softly at Theron, and he flushed slightly. Blake bounced off his chair to hug me.\n\nI spent ten minutes teaching the alphabet song to both Theron and Blake; it was sort of cute watching a full grown man fumble his way through something every first-grader could do back on Earth. I took my leave, not wanting to disrupt their lessons, no matter how adorable it was to watch Theron try to teach; I was convinced, though, that I'd done the right thing for Blake. And I thought it just might be good for Theron, too.\n\nI finally reached Alistair's room; I listened at the door, and heard soft snoring. Evidently Alistair had decided to have a nap. I crept into the room, trying to be silent, glad he'd left the door unlocked. He was fast asleep, lying spread-eagled on his belly, wearing just a pair of trousers. Sunlight poured through the open window, and his sandy-blond hair looked almost golden; his face was angelic, matching the golden halo nicely. And on his bedside table, sparkling in the light, was a miniature Ironman figurine.\n\nNot wanting to wake him -- Maker knew we both needed sleep, after our...exertions, the night before -- I tiptoed to the edge of the bed and crawled onto it. I carefully climbed up to lay beside him so I could see his face; he stirred, briefly, wrapped one arm around my waist to pull me closer, and dropped back to sleep without a word. I watched him for a while, admiring his regal features and bronze skin, allowing my fingers to trail softly over the arm that held me; in that moment, I felt content, and even confident, in a way I'd never felt before. We had come through the fire, he and I, and we had made it. Never again would we take each other for granted. I fell asleep with a smile on my face, cuddled into his embrace.\n\nI woke a while later to find him staring down at me, a warm smile on his face.\n\n\"Maker, how I've missed this.\" He leaned in for a kiss.\n\nI thought about making a smart comment, but couldn't. I returned his smile dreamily. \"Me too.\"\n\n\"I sleep so much better with you here. Fewer nightmares. It's odd.\"\n\n\"Works for me. We'll just stick together, and we'll be fine.\"\n\n\"I can handle that.\" He grinned. \"So...when do you want to admit to everyone that we're...\"\n\n\"Back together? No need. Maybe Eamon doesn't know, though I wouldn't guarantee that; everyone else does. Teagan saw us last night, and apparently we weren't very good at keeping straight faces at breakfast this morning.\"\n\n\"Andraste's ass, I'm sorry Sierra. I know you wanted to wait.\"\n\nIt hadn't occurred to me how he might take such a sentiment until he said it out loud. \"Only because I thought I should warn Aedan before he tries to kill you for taking liberties. Not because I don't want people to know. I'm not ashamed of us.\"\n\nHe blushed. \"I didn't...right, um. Thanks.\"\n\nI kissed him again, but before it could turn into anything more serious, my stomach rumbled, and I winced. \"I mostly missed lunch, and I think it's almost supper, based on the light. I think we'd better get up before I'm forced to gnaw my own arm off.\"\n\nHe laughed. \"Your desire is my command, my dear.\" I punched him lightly, and he cried out dramatically. \"Hey! I bruise easily, you know.\"\n\n\"Then consider it me marking my territory. Now get moving, buster. My stomach waits for no man.\"\n\nI climbed out of the bed, smoothing my dress and running fingers through perpetually tangled hair; he shrugged into a tunic -- it's a shame to cover all those muscles! -- and declared himself ready. I took a deep breath, reached out for his hand, and headed into the hall.\n\nWe walked down to the main hall hand-in-hand, me skipping along to keep pace with his long legs. I didn't mind, though -- I really was hungry. Eamon's eyes widened when we entered the hall together, but he kept his thoughts to himself; Isolde wasn't so clever. She shot me an exceptionally dirty look before turning towards her husband and saying something. I couldn't catch it all, but I heard the word 'bastard' in scathing tones. I tensed up, contemplating my escape route if I flew across the table and scratched her eyes out; Alistair, seeming to sense my aggravation, put his arms around my waist and held me back.\n\n\"It isn't worth it, Sierra. You'll never change her mind, and only cause problems for Theron, and for the Grey Wardens. Let it go.\"\n\nI slumped, leaning back against him. \"I hate that bitch. I swear, one day...\"\n\nHe escorted me to the far end of the table, as far from Eamon and his wife as possible. Leli grinned at me, waggling her eyebrows as I sat beside her and Alistair squeezed between us. I blushed, and heard her musical giggle peal out. Morrigan rolled her eyes, and I shrugged slightly; I could tell her scowl wasn't really real, though. Theron's smug smirk made me want to smack him, but I kept it to myself. No one else mentioned anything, and soon we were all too busy eating to think much of it.\n\nAfter supper we retired to the library and spent the evening gabbing; Teagan joined us, and was a welcome addition, though he wouldn't quite look me in the eye. Eamon did not, to my relief. I wasn't sure if he just wasn't into social interaction, was still recovering from Jowan's poison, or was avoiding us for fear of my (or Theron's) reaction.\n\nAlistair and I confirmed we were back together, not that anyone was surprised. Leliana squealed with delight before admitting that she didn't think I'd ever manage to learn to forgive him.\n\nI blushed and shrugged. \"Everyone has to grow up eventually, I guess.\" I snuggled closer to Alistair and hid my face; he kissed the top of my head, and I decided I just didn't care what anyone else thought.\n\nAfter a few hours of chatting, everyone slowly headed to bed. Theron stayed back, and motioned to me to stay as well. Alistair, as expected, stayed with me, unwilling to allow me to be alone with his half-brother. I'm going to have to explain that I forgave him, too...\n\nWe sat, awkwardly, Alistair and I sharing a couch, Theron sitting in a nearby chair. No one made eye contact, and we just sat in awkward silence for a few minutes.\n\nFinally Theron cleared his throat. \"Thank you both for staying. Alistair, I've wanted to talk to you, but I didn't really know where to start. I...\" He trailed off.\n\nAlistair, startled to be addressed directly, groped for something to say. \"Your Majesty, you don't have to say anything.\"\n\nTheron cut him off before he could continue. \"Yes, I do. And please, you're my brother. I think we can dispense with the titles, don't you?\" Alistair nodded, reluctantly, and Theron continued. \"I just want to say that I had no idea you existed. I suppose I should have known it was possible, but our father never told me. He probably knew what my reaction to it would have been; I'd have pestered him mercilessly to acknowledge you and bring you to the palace. I assume he had reasons for not doing so, but I doubt I'd agree with any of them.\n\n\"And even if he couldn't acknowledge you, to leave you with Eamon...I'm sorry, Alistair. Our father owed you a thousand apologies; I just wish I'd known about you sooner. I might have been able to get you away from the Chantry sooner, or something. I was never angry to discover I have a brother, just angry I'd never been told.\"\n\nAlistair's expression was a priceless mix of shock and discomfort, with a little bit of pain and bitterness peeking through. I wrapped my arm around his waist in a silent show of support. Theron just waited patiently while he collected his thoughts.\n\n\"I've been told my mother forced Maric to promise never to acknowledge me, though I didn't know that until recently. I'd never even spoken to the man. I don't expect anything from you, and believe me, I have no designs on your throne. I can't even tell you how glad I am personally that you survived Ostagar. I'd be a terrible King.\"\n\n\"I have it on good authority,\" Theron shot me a small smile, \"that you'd actually make an excellent King, whether you believe it or not. Probably better than I've been, if I'm honest. I am also glad to have survived, so I can try to atone for my mistakes in the past. These last few months...well, like Sierra said, I guess everyone has to grow up sometime.\n\n\"My point is, I'm not threatened by you. Honestly, if you wanted the job and I thought you could do it, I'd hand over the crown in a minute. But seeing all the things I've done wrong so clearly since Ostagar...I want the chance to fix it. To be the man I would like to think I'm capable of being. And I was sort of hoping I might have a brother by my side for some of it.\"\n\nAlistair looked dumbfounded, and even I was in shock. Who is this man, and what did he do to Cailan?\n\n\"Your Ma...Cai...Theron,\" Alistair finally managed to spit out, \"I am...\"\n\n\"You're a Grey Warden, and I understand that. I'm not asking you to give it up. And you're probably not really thrilled with me, either. All I'm asking is that you give us the chance to get to know one another, the way we should have since childhood, and that maybe, if you find me worthy, we could be...friends. Support each other, or something. I could use someone I can trust, and I think I can trust you. And you've clearly won the heart of this lady, which speaks volumes about you as well. Will you at least think about it?\"\n\nAlistair agreed, and Theron slipped out of the library to leave us alone.\n\n\"Well that was...\"\n\n\"Not what you expected?\" Alistair shot me a look, and I grinned. \"What? I didn't exactly have time to tell you that he and I have spoken a bit in the last few days. He's not at all what I thought he was.\"\n\nHis expression was clouded. \"And just what is he, then?\"\n\nIt occurred to me, then, what the problem was. \"Okay, now that's sort of cute.\"\n\n\"What is?\"\n\n\"You're jealous.\"\n\n\"The King of Ferelden wants you as his mistress; Maker, yes, I'm jealous.\"\n\nI slid closer to him on the couch, taking his hand. \"He can want whatever he likes. It doesn't change the fact that I'm yours.\" I turned and cupped his cheek, pulling him to face me. \"Only yours.\"\n\nHe kissed me softly, then leaned back with a sigh. \"I know.\"\n\n\"Besides, he's not actually the drooling lecher I thought he was.\"\n\n\"The maids gossiping around the castle would indicate otherwise,\" he said, drily.\n\n\"Oh, I don't doubt he sleeps with anyone in a dress who says yes...but he wouldn't pressure someone who said no. I just don't think anyone ever had said no before. He had no practice at accepting it gracefully. He apologised sincerely for his behaviour. I believe him. And he defended me, against Isolde and Eamon both. I'd probably be in the dungeon right now if he hadn't interceded on my behalf.\"\n\n\"The dungeon?\" He looked at me, aghast.\n\n\"Yeah, well, I did threaten that stupid Orlesian cow. In her own home. He sort of had the right to lock me up, in truth.\"\n\n\"He threatened to throw you in the dungeon for standing up for Blake? Really?\"\n\n\"Uh, yeah. Well, not so much threatened as much as informed me he would be within his rights to do so. Theron got in his face and told him that if he did anything to me, or if he ever heard about servants or children being mistreated again, he'd take away the Arling and deport Isolde.\"\n\nAlistair rubbed his eyes with the palms of his hands. \"I can't even...I don't...\"\n\nI waited patiently, reaching up to stop his hands.\n\nHe finally seemed to know what he was trying to say. \"I always figured Cailan would be an entitled ass, and never thought he could be anything else; at the same time, I always thought there was good in Eamon, somewhere. I wanted to believe it. That so much of what happened was her fault, not his. That he cared about me, about his people. You didn't agree, but I just thought you were defending me. Not that he could truly be so...\"\n\n\"Heartless? Yeah. Sorry, honey. Eamon only cares about what's best for Eamon. Maybe a little for Connor and Isolde, though honestly it seems like they're just accessories to him. Tools to get what he wants.\"\n\n\"I'm sorry I didn't believe you.\"\n\n\"How's this? You give Theron a chance -- just one, single chance -- to see if you can be family for each other, and I'll forgive you.\"\n\nHe looked up with a smile. \"It means that much to you?\"\n\n\"No, I think it could mean that much to you, though. Having a brother...well, let me just say from experience, it's worth a shot.\"\n\n\"I suppose you would know,\" he nodded, agreeably. \"I'll try.\"\n\n\"So...bedtime?\" I requested with a shy smile.\n\n\"Definitely.\"\n\n\"My room this time?\"\n\n\"Deal.\" My stomach interrupted with a growl, and he grinned. \"I'll raid the larder and meet you there.\"\n\nOur lovemaking that night was tender and gentle, and I'd never felt so cherished. I fell asleep secure in his arms, my head pillowed on his shoulder, and slept like a baby.\n\nIn the morning I spent some time sparring with Tomas and Alistair; I still had trouble figuring out what to do with someone holding a shield. I had gotten enough better, though, that both men had equipped themselves with wooden practice swords, which they seemed to enjoy smacking me with just a bit too much. Alistair never hit hard, of course; not enough to bruise, barely enough to feel, but humiliating never-the-less; Tomas, on the other hand, had no trouble walloping me one if I did something stupid, like drop my guard or telegraph my moves. Not the most fun I'd ever had, but it was good motivation to improve, I had to admit.\n\nWe'd been at it, on and off, for about an hour, when Alistair finally challenged Tomas to spar. I grinned and sat on a nearby crate to watch as the two men squared off. I noticed Sten walk up beside me, and gave him a nod before returning my attention to the fight. They circled and feinted, shields crashing against each other, swords ringing, in a furious battle for dominance. Alistair was clearly the stronger, and as the younger man, tired less easily; Tomas made up for that with agility and experience, such that they seemed evenly matched.\n\nThe fight might have gone on forever, except that after a particularly vicious strike by Alistair, which Tomas blocked with his shield, Alistair's wooden sword snapped, splinters flying everywhere. Shocked, he hesitated; Tomas did not. With a single step forward and a low swing of his sword, Tomas knocked Alistair back onto his ass. Before the templar could get his shield up, Tomas' practice blade was at his throat.\n\nAlistair yielded; Tomas dropped his sword and offered Alistair a hand up, both men laughing and talking animatedly. Sten grunted, and I looked up at the enormous Kossith warrior.\n\n\"So, Kadan. I find myself displeased with you.\"\n\nI blinked. Sten has a bone to pick with me? Whatever did I do? \"Uh, may I ask why?\"\n\nAlistair and Tomas joined us as he responded. \"You have sparred with the assassin, your brother, the Warden-Commander, even the templar...but you have never asked me to teach you. You have never invited me to spar with you.\"\n\n\"Um, well...\" What could I say? The truth, I suppose. \"That's because I'm terrified you'll chop my head off with that big-ass sword of yours?\"\n\n\"You question my control with a blade?\"\n\nI couldn't read his stoic expression, but the leading question made me certain he was angry. I swallowed thickly. \"No, not that...more that I question that there's even the slightest chance I could hold my own against you. Or offer even the most minimal of challenges.\"\n\n\"So you are afraid to face me?\"\n\nI blinked again. Who wouldn't be? \"You're seven feet tall, you carry a sword I can't even lift, and you were raised to be a warrior from birth. Hell yes, I'm afraid of you.\"\n\nHis eyes flashed. \"I had not expected you to be a coward.\"\n\nI choked; Tomas turned away to try and hide a smile, and Alistair grinned at me. Bastard! \"I...oh for the love of God. Sten, how would you like to spar with me? Perhaps help me learn more about fighting?\"\n\nThe giant nodded. \"Indeed. Let us begin.\"\n\nI'd never actually hoped for Alistair to get overprotective as much as I did at that exact moment, but as I picked up my daggers and reluctantly stood, he gave me a thumbs up and an encouraging smile. I wanted him to save me, but he didn't. He took my place on the crate, watching eagerly; I almost expected him to ask for popcorn.\n\nTo my surprise -- and relief -- Sten started me with a brief tutorial on two-handed weapon fighting. Not from the point of view of the wielder, which was good because I wasn't joking when I said I couldn't lift his sword, but from their opponent's perspective. It came as no surprise that they had to move a little slower than someone with a dagger or a short sword, but he showed me how to predict the swings based on shoulder position and footwork. He held the sword out from him at an angle while I practiced ducking under to get behind him -- the muscle strength required to just hold that position must have been incredible.\n\nAnd then he had me cross my daggers and practice blocking swings. He started hitting lightly, teaching me to angle my blades to deflect rather than fully block, which was good because even with the changes he suggested, my arms were sore and my hands slightly numb after no more than a half-dozen swings. No matter how successfully I deflected, some of that force was applied to my blades, and through them to my wrists, elbows, and shoulders. I decided it was a good thing that if we ever actually really fought he'd be able to kill me in one or two swings. Trying to limit the pain before my eventual demise, of course.\n\nWhen we finally began actually sparring, I was more worried about dropping my daggers with my insensate fingers than I was about him hurting me; he'd demonstrated, time and again, his ability to pull his strikes and avoid actually injuring me. So he went easy on me, initially, moving slowly and allowing me the chance to dodge and duck, to try to get behind him. And then, I saw an opening, and I took it; I grasped his wrist, bent and twisted my hips, and pulled. The surprised giant stumbled forward, but as I expected him to sail over my back, his height and weight brought me up short, and all I managed to do was make him trip forward and land on me.\n\nBent over as I was, my knee gave out, and I fell; I heard something snap, but it was a moment before I felt the pain and screamed. Sten rolled with the fall, managing to avoid putting all of his weight on me, and was on his knees beside me before I even fully settled onto the dirt of the training ring. Alistair was beside me in a flash, propping up my shoulders to rest against his chest; he pulled my face up to look at him as I felt Sten try to realign my deformed limb. I tried not to look, but out of my peripheral vision, I saw that my right knee was bent at a quite unnatural angle, and there was blood trickling out of the leg of my leathers.",
        "The whole time, it was like I'd gone deaf. The last sound I'd heard was the snap of bone breaking, and after that there was just silence. I could see Alistair's lips moving, so clearly he was talking to me, but I could make out nothing of what he was saying. When Sten moved my leg, the pain made my head spin and my vision tunnel, and it felt like I screamed again, but I heard nothing.\n\nAnd then we were surrounded by people, and someone was pressing something against my lips, pouring something into my mouth, and then a second time and a third. Even as I choked and sputtered as the fluid finally went down, I started noticing a strange buzzing that preceded the return of my normal hearing. It was like something from a movie, where they mute the sound to emphasize the gravity of a situation. And as disconcerting as the silence was, the sound wasn't exactly welcome when it turned back on. Alistair was mumbling, half-prayer, half-platitude, his eyes searching the crowd who'd gathered around me wildly. People were talking, though I couldn't make out many of the words, and the noise was irritating.\n\nAnd above all that, was the sound of a woman screaming. Probably one of the castle's servants, who's never seen a major injury before. I opened my mouth to ask someone to take the annoying woman away, only to realise that my mouth was already open. I closed it, and the screaming cut off. Oh, it was me. Huh. The pain started to dull a bit, and as my wits returned to me, it occurred to me that the liquid someone had poured down my throat was a healing potion. Not that I thought it would fix what was obviously a badly broken leg, but it did help with the pain.\n\nFinally the crowd parted, and Tomas ushered Wynne through the gap. I smiled, relieved, and was happy to notice Alistair looking relieved too.\n\n\"Wynne,\" I drawled, words slurring. \"I think...I mighta broke my leg.\"\n\nI felt warm and fuzzy, and my vision started to blur. I had trouble keeping my eyes open, and my head spinning felt almost nice. I heard Wynne say something about healing, and Lyrium, but I was too sleepy to really pay any attention. Alistair turned my face back to his, forcing me to make eye contact.\n\n\"Sierra, you must stay awake. Do you hear me? Just look at me, sweetheart. I'm right here. That's it, just keep your eyes open. I promise you can sleep in a few minutes, but not yet, okay? Stay with me.\"\n\nI was briefly distracted by a lance of pain shooting up from my leg, but then the warm sensation of healing spread through me, and I relaxed again in Alistair's grip. \"You have pretty eyes,\" I mumbled.\n\nI heard someone snort a laugh, but Alistair just flushed slightly and smiled at me. \"That's right. Just keep looking into my pretty eyes. You can do this.\"\n\nI noticed again when the aura of healing increased, but couldn't muster the energy to turn and look at what was happening. I stared at Alistair's face -- not only his eyes, but his pouty lips, his aquiline nose, his bronze and pink skin. He's so beautiful.\n\n\"I think,\" I swallowed and tried again, \"that I'm going to throw up.\"\n\nI managed to turn my head slightly, and vomited noisily onto the dirt of the training ground. Alistair held my hair back as I retched, tears pricking my eyes. Someone handed me a water skin, and I took a drink before rinsing out my mouth and spitting. I started feeling a bit better, less woozy, after vomiting, until I slumped again in Alistair's arms. Someone took that opportunity to pull my boot off and prick my skin with something sharp. I cursed and tried to pull away, which drove a spike of pain through my knee, and I finally, blissfully, blacked out.\n\nChapter Seventy-Two: Protective Instincts\n\nWhen I woke, I was in a nightgown, in a bed, but it wasn't my bed. I lifted my head to look around; Alistair was dozing in a chair on one side of the bed, Teagan, Eamon, and Theron were seated on chairs facing each other on the other side, and Aedan, Zev, Tomas, and Wynne huddled together by a large hearth. Aedan? When did he get back? How long have I been out? My head and stomach seemed to have sorted themselves out, but my leg ached abominably.\n\nAs my head cleared, I realised I was actually in Eamon's room. In his bed. Isolde's bed. Maybe it was the only room big enough for everyone to fit, or something, but it was seriously creepy. He'd been comatose in this exact spot a few weeks prior. I tried to stifle the disgusted grunt that burst forth... unsuccessfully. It wasn't loud, but it was enough to wake Alistair; he leapt off the chair, moving to sit on the edge of the bed, calling out to Wynne as he moved.\n\nAlistair took my hand just as everyone arrived around the large bed, and I was suddenly the centre of attention for eight people. I knew I probably had been for quite some time, but it didn't count -- I'd been unconscious. Now it was embarrassing, and a bit intimidating.\n\n\"Um, hi.\"\n\nAlistair kissed the back of my hand, and Aedan frowned. When I didn't pull away, he huffed and seemed to decide to ignore it, for now.\n\n\"Sierra...you scared the pants off everyone today. What were you thinking?\" Aedan scowled at me.\n\nI laughed. \"It's good to see you too, brother. I feel terrible, thanks, why do you ask?\"\n\nHe flushed, irritation flashing across his features. I sighed. \"I thought I was sparring with Sten. I thought I should try to learn how to fight a little better before I end up stuck in the Deep Roads without the ability to defend myself. I failed to take into account that Sten probably doubles my weight. No one mentioned that those throws don't work on someone so much larger than yourself...\"\n\nHis jaw dropped. \"You tried to throw Sten?\" His voice went higher in pitch the closer to the end of the sentence, until he squeaked the last word.\n\n\"What, no one told you? I tried to throw him. He left me with an opening. I took it. It didn't end well.\"\n\n\"No one seemed exactly sure what had happened.\" He glared impartially around the room. \"Why would you try to throw Sten?\"\n\n\"I got cocky? I wanted to prove to him that I wasn't totally useless. It was stupid.\" I shrugged my shoulders, which wiggled the bed, jarring my leg and dragging a hiss of pain out of my mouth. Alistair squeezed my hand helplessly, as Wynne pushed Aedan and Tomas out of the way and ran one of her diagnostics over my supine form.\n\n\"I need some space, and Anders. And perhaps Dariel and Morrigan. And some Lyrium.\" She gave everyone except Alistair a look, and they all got the hint, scattering to find the other people she'd asked for and some Lyrium. A couple of minutes later, I saw Leli at the door, escorting Anders -- she waved, and I smiled -- and shortly after that, Morrigan, Dariel and Aedan showed up, each carrying an armful of slightly glowing, silvery-blue potion bottles.\n\n\"Is it really that bad?\" My eyes were wide, and my heart started pounding. Three healers, another mage, and that much Lyrium? How screwed am I?\n\nWynne smiled reassuringly. \"No dear. It's just your magical resistance. I set your leg earlier, and Dariel helped me heal it enough so you could be moved; now we need to finish it. You'll be as good as new, I promise.\"\n\nI turned towards Anders. \"Okay...but is this going to be like that other time?\" I could feel myself blushing. It had felt good, but I did not particularly want it happening again, especially not in front of Alistair. Or Aedan, for that matter.\n\n\"No, no. Limbs don't get that sort of...response.\" He winked, and I blushed even harder. I felt Alistair's hand twitch; in retrospect, I wondered what watching Anders heal me had cost him, as I writhed and moaned. I wonder what not punching Anders at this moment is costing him.\n\nAedan looked confused, but before he could ask, Wynne started talking. \"Alright, focus, please. Aedan, Alistair, if you insist on staying, be quiet. Anders, you will lead. Dariel, do what I do. Morrigan, you're back-up.\"\n\nThe elf and the human nodded, while the witch just sniffed dismissively, and I felt Anders' magic flare, followed by Wynne's, then after a few moments, by Dariel's. Wynne pulled the covers back, baring my leg; all I could see were bandages. And then my head was swimming again, as somehow the mages combined their power, and Anders directed it at me. I didn't know they could do that.\n\nIt didn't hurt, exactly, but it wasn't pleasant either. I could feel something -- bones, I assumed -- sliding underneath my skin, and crunching into place, then Wynne gasped and chugged a Lyrium potion. Morrigan twitched, but relaxed again when Wynne's expression eased. It kept going, and started to feel like someone was compressing my skin, then I felt it ease off somewhat. My skin began to itch, and I felt dizzy; Dariel reached out to grab a Lyrium potion. It went on and on. Anders started to sweat, his face became ashen, but he finally stopped casting before swaying on his feet.\n\nWhen the world finally held still again and the nausea abated, I had a bit of residual stiffness, but my pain was gone. I smiled up at the three healers, only to see Anders' eyes flutter; Aedan grabbed a chair and placed it behind him, guiding him to sit before he fell. Dariel looked at the tall blond man with an expression of awe; even Wynne looked impressed.\n\n\"Wynne?\"\n\n\"Hmm? Oh, everything's fine, Sierra. Anders just depleted himself too much.\" She turned to the person in question. \"Why didn't you take some Lyrium?\"\n\n\"Didn't need it.\" His voice was weak, but audible.\n\nWynne tsk'd, but cast a quick rejuvenation spell; Anders almost immediately perked up. He stood, murmuring thanks, and with a smile and a wave, left the room with Morrigan, talking animatedly. I heard something about Chantry fools and towers, and figured they were probably bonding over their mutual disdain for the Circle, the templars, and the Chantry in general. Dariel followed, asking questions about mana reserves and spell control. Wynne watched them go with an exasperated look and a shake of her head.\n\n\"That boy is going to hurt himself one day doing that.\"\n\n\"What did he do, Wynne?\" Aedan asked.\n\n\"He has one of the deepest mana pools I've ever seen, and a very powerful spirit. He is, easily, the most talented healer outside of the Tevinter Imperium, and maybe even within it. But he thinks he will never run out of mana, never go too far. He's reckless. It should have taken twice as much Lyrium, at least, for what we just did, if we'd had anyone other than him leading that. He made up the difference. But he wouldn't have been able to heal a paper cut after.\"\n\n\"What would happen if someone completely ran out?\"\n\n\"To be honest, I don't know. Most of us aren't able to go that far. There's a self-defense mechanism in there that prevents it. Anders...I don't know how, but he's overcome it, and not only in life-or-death situations. It makes me wonder what was done to him, either in the tower, or perhaps after being captured at some point. He hates the tower so much...there had to be something.\"\n\nWe fell silent in contemplation of that, and I knew that at least the four of us would be watching him a little more closely for a while.\n\nWynne finally shrugged and turned to me. \"As for you, young lady...\"\n\nI blushed and ducked my head. \"I know, I know, no more trying to throw Sten.\"\n\nAedan jumped up, agitated. \"No more sparring at all!\"\n\nI rolled my eyes, but Alistair cut in. \"You'd really leave her defenseless when we're heading into the Deep Roads? Besides, that isn't our choice to make, Aedan. It's theirs.\" He pointed at me and then Wynne in succession.\n\nWynne cleared her throat, interrupting the explosion I could see coming. \"Yes, well. Definitely no sparring for a week. I want to make sure that knee is solid before you go testing it again.\"\n\n\"But it will be okay after that?\"<br>\n\n\"Yes, dear. It's probably better than it was before.\"\n\n\"So I can walk? Like, now?\"\n\nShe nodded, and I pushed aside the blankets and sprang to my feet. It didn't hurt, and I almost cried with relief. I turned and wrapped the elderly healer in a hug, and then kissed her cheek. \"You're the best, Wynne.\"\n\n\"You should thank Anders and Dariel. I just provided a bit of power. Anders did the real work.\"\n\n\"I'll thank him when I see him,\" I promised. \"Both of them.\"\n\nAedan was standing there, practically vibrating; I turned and hugged him as well. \"I'm okay. It's okay.\"\n\n\"Sierra...I can't even... We got back in the middle of the commotion. You weren't conscious, you were barely breathing. There was a pool of blood under you, and you wouldn't wake up. You can't tell me that's okay.\"\n\nWynne cut in. \"That's just her reaction to the healing, Aedan. She was conscious before that.\"\n\n\"I admit it wasn't pleasant, but I need to learn, Aedan. This world isn't like where I grew up. I thought I could just coast through, rely on you and everyone to take care of me, but that's not only not fair, it's stupid. At some point I'm going to be alone, even if by accident, and I need to know how to handle myself.\"\n\nI felt him shudder, but finally his arms came around me. He looked over my shoulder at Wynne and Alistair. \"Can I talk to my sister alone for a moment?\"\n\nThey shuffled out of the room, and I pulled back. \"You're not going to convince me to stop training, you know.\"\n\nHe sighed. \"I know. But I wanted to talk to you about something else.\"\n\n\"Ahh. Alistair?\" He nodded. \"Yeah...this wasn't supposed to be how you found out.\"\n\n\"So it's true? You've forgiven him?\"\n\n\"I have.\"\n\n\"But...how? What he did...\"\n\n\"Was stupid. I know it, and so does he. But really, I should have expected it. His insecurity... Anyways, we've worked through it. If anything, I think we'll be better now than before.\"\n\n\"How can you be so calm? I'm still angry, and he didn't even do it to me. He's my best friend, and I still want to punch him every time I see him.\"\n\n\"That's because you're my protective big brother.\"\n\n\"Ha! Now you admit you're the little sister?\"\n\nI laughed. \"I suppose I'll have to. But seriously, Aedan...we're okay. Better than okay. I need you to be able to accept that. He didn't mean to hurt me. It seems to be a theme with Theirin men.\"\n\n\"Yeah I saw Ca...Theron watching pretty avidly downstairs when you were hurt. He looked concerned, but not in a...\"\n\n\"Drooling lecher sort of way? Yeah. I think he sees me as a sister, or at least an in-law. Finally.\"\n\n\"A lot happened while I was away, I take it?\"\n\n\"Not as much as it sounds. Just a lot of discussions. But that's beside the point. How did it go with your trip? Everyone freak out at their first sight of darkspawn?\"\n\n\"A little. Not too bad. After the first hesitation, they did alright. Jowan's more use in a fight than I thought he would be, and Anders is...awe-inspiring, actually. Not just at healing. His frost spells...anyway. Solona, on the other hand, is a little frightening with hexes and nightmares.\"\n\n\"Oh, she's an entropy mage? I never thought to ask. Yeah, creepy.\"\n\n\"But effective.\"\n\n\"So everyone got their...uh...\" I checked the open door to ensure no one was listening. \"Blood?\" I whispered.\n\n\"Yup.\"\n\n\"Learn anything about Anders and Solona?\"\n\n\"Other than she's mightily angry, no. She didn't speak to him the entire time.\"\n\n\"Oh.\" I deflated. \"That's disappointing. When's the Joining?\"\n\n\"We'd have had it already if you hadn't decided to smash your knee to bits! We'll do it as soon as everyone's had a chance to clean up. Will you come?\"\n\n\"I'd like to, yeah. Speaking of, know why Tomas isn't offering the Joining to any of our companions?\"\n\n\"I do, actually. I asked him that. He said he was concerned that they'd learned too many Grey Warden secrets, that if he asked, and they in any way indicated knowledge of said Warden secrets, he'd be forced to conscript them, and he didn't want to do that.\"\n\n\"So we're going with 'don't ask, don't tell' then?\"\n\n\"I...suppose.\"\n\n\"Right. Well, I don't think Morrigan would have Joined anyway, nor Leli, and I have a hard time picturing Sten as a Warden somehow too. Wynne shouldn't, what with her passenger, so...I guess it doesn't matter. Anyway, I'm assuming I'm still covered in blood under all the bandages. And I'm wearing pyjamas. How about I go get cleaned up, and I'll meet you downstairs?\"\n\nHe agreed, and I wandered off to my room, glad I wouldn't have to stay in Eamon's. I imagined he was happy about that, too; probably disgusted at having me contaminate his silk sheets. When I opened my door, I found Alistair, sitting on the edge of my bed, looking unsettled. He'd changed, wearing just trousers and a tunic. I went over and climbed into his lap, and he held me to him tightly as he settled back on the bed.\n\n\"I'm sorry,\" I whispered. \"I didn't mean to scare you again.\"\n\n\"I have to admit you were sort of cute after Wayne gave you those potions. Right up until you threw up, anyways. I bet you're a funny drunk.\"\n\nI stuck my tongue out at him, and he chuckled. \"I want to thank you for what you said to Aedan.\"\n\nHe shrugged. \"I didn't do anything.\"\n\n\"No, seriously. I know you probably agree with him, and want me to stop sparring, to stay out of the fighting...thank you for understanding that I can't. Thank you for supporting my decisions.\"\n\nHe kissed my forehead. \"If I made you change to be with me, it wouldn't be you anymore. Doesn't mean it doesn't scare me half to death. Or that I won't be trying to stop you in future when I forget.\"\n\n\"I'm glad you were there. I knew I was safe, because you were with me.\"\n\n\"So...how angry is Aedan?\"\n\n\"He's more...surprised. Am I that rigid? No one believed I could learn to forgive you.\"\n\n\"Well, you were pretty angry. But I, for one, am not going to complain.\"\n\nI kissed him softly, feeling a surge of desire, which I ruthlessly suppressed. I pulled away reluctantly. \"I have to get cleaned up, and we have a Joining to go to.\"\n\nHe groaned. \"Let's just stay here instead.\" His fingers slide under my nightgown, stroking my thigh, and I squirmed.\n\n\"Hey, that's cheating.\" I clambered out of his lap, heading to my wash basin.\n\nI smirked as he grunted when I pulled off my nightgown, but he came over to help me with the bandages, which were stuck in place with blood. We peeled them off, and I was grateful again for the healing, because there was no scab to rip off. I grabbed a cloth and soaked it; Alistair took it from my hand as soon as I rung it out, and gently started washing the blood off my leg. It wasn't doing anything to defuse my arousal, and when he finished washing and kissed my thigh, I had to quash the urge to turn slightly and let him continue.\n\nI reluctantly stepped away, heading over to the armoire where my clothes were. I put on my faux velvet dress, then swept my hair up into a messy bun. \"I'm so having a shower tomorrow.\" I muttered.\n\n\"Ooh. Can I come?\" We exchanged anticipatory grins.\n\nFinally ready, we headed downstairs; as usual, we found everyone in the library. To my surprise, Morrigan was there, though she left just after we arrived. I supposed it made sense -- the Joining potion required a mage to create, and she was already familiar with the process after Soldier's Peak. And then there were just the seven of us; three recruits, three Grey Wardens, and me, whatever I was.\n\nI hugged Anders, thanking him profusely for healing me again; he shrugged it off, but neither of us missed the irritated sniff coming from Solona. I couldn't wait to have some girl time with Solona; I hoped she'd tell me what was going on.\n\nThe three mages were clearly nervous; I could sympathise, having gone through the same thing recently. It occurred to me that there was something we could at least improve upon, and I pushed and pulled until Aedan stood near Jowan, Alistair behind Anders, and I stood behind Solona. Anders watched the process suspiciously.",
        "\"What? It's not uncommon for recruits to faint. This way, someone can catch you, before you end up with a goose egg.\"\n\nAedan winked at me, and then whined. \"Oh sure, you get to catch the pretty girl.\"\n\nSolona blushed, Anders looked away and muttered something uncomplimentary under his breath, and I chuckled. \"He's joking,\" I whispered so that only Solona could hear. \"He's just baiting Anders. Anders is closer to his type than you. Anyway, this way you know there's not going to be any funny business.\"\n\nShe nodded, and then turned back to Tomas when he cleared his throat. He produced the chalice, setting it on a nearby table. He went through his spiel about how Wardens master the taint by drinking darkspawn blood. No one gasped, and Tomas shot me a dirty look. I shook my head -- I certainly didn't tell anyone -- and he finally finished. He nodded at Aedan, who spoke the same words as had been spoken at my Joining.\n\n\"Join us, brothers and sisters. Join us in the shadows where we stand vigilant. Join us as we carry the duty that cannot be forsworn. And should you perish, know that your sacrifice will not be forgotten, and that one day, we shall join you.\"\n\nTomas stepped up to Anders. \"You are called to submit yourself to the taint. From this moment forth, you are a Grey Warden.\"\n\nAnders looked over at Solona, seeming to try to convey something; after a moment with no visible response, he closed his eyes, took a deep breath, and then took the chalice. I was perhaps the only person in the room who wasn't nervous; I knew he would survive. Without a word, he drank, handing the chalice back to Tomas. His eyes rolled back, showing the whites, and his face scrunched in a rictus of pain. He fell into Alistair's waiting arms and was lowered gently to the floor. Alistair checked for a pulse.\n\n\"He lives.\"\n\nI saw Solona twitch in front of me, and knew she cared more for Anders than she seemed willing to admit. I could understand that, with what Alistair and I had been through. \"He'll be okay. He's just asleep,\" I whispered. She nodded.\n\nNext, Tomas stepped up to Jowan and repeated the process. The blood mage took the chalice with shaking hands, eyes wild. I almost wondered if he'd try to escape, but it seemed sense won out. He took a steadying breath, and then drank.\n\nHis eyes rolled back, and he fell into Aedan's waiting arms. Aedan lowered the mage to the floor, and checked his pulse. \"He's going to make it.\" I let out a breath I didn't realise I was holding; I truly hadn't been sure if Avernus' altered potion would allow him to survive.\n\nLastly, Tomas handed the chalice to Solona. She took one last look at Jowan and Anders, unconscious on the floor, and I nodded reassuringly. Taking one last breath, she opened her mouth and drank. I caught her as she fell, unable to see the agonised expression and white eyes I knew would be there. As a formality, I checked her pulse; it was steady and strong, like I knew it would be. I smiled.\n\nAnd then there were seven."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-71-72"
}