{
    "title": "There and Back Again Ch. 147",
    "pages": [
        "Chapter One Hundred Forty-Seven: *Homecoming\n\nUtha crumpled to the ground, her unblinking eyes open, not even a rasping breath left of her unfortunate life. Zevran taught me well...but what does that say about me? Chaos broke out around me, but I ignored it, settling her body down, closing her eyes, and whispering a sincere prayer to whatever deity might be listening. I looked up for something to cover her with, and found Zevran, an island of calm in the chaos, handing over a length of rough fabric, scavenged from where I couldn't guess.\n\nThe former assassin wore an expression I wasn't used to -- approval, I thought, and not a single trace of a smirk anywhere. He offered me his hand, and I let him haul me to my feet. I felt nothing -- just numbness, no remorse or pain, though I suspected those would come later -- and I had no desire to deal with everyone else's reactions, but I had little choice. Everyone around was talking -- to each other, at me, to themselves for all I could tell -- but they all went suspiciously silent as I stood up. Some part of me feared censure, whether in anger or disgust, but I couldn't bring myself to worry excessively, and I wasn't going to justify myself. It might bother me more later, but what I did was still the right thing.\n\nI finally took a deep breath and looked up. I met Alistair's concerned gaze, relieved he wasn't pulling away from me, and forced a reassuring smile for his benefit. He held his arm out for me, and I snuggled up against his side gratefully. \"I'm sorry,\" he murmured, and though I wasn't entirely clear what he was apologising for, I squeezed 4his waist and waved it away silently.\n\nAedan studied me, his expression a mix of puzzlement and shock, but he didn't look angry, so I thought I could live with it. Nate, standing back a bit, met my eyes with a nod and an understanding smile. A dozen other sets of eyes watched me expectantly, but no one spoke. Deciding that nothing I said could make the situation better -- those who understand are already on my side, and those who don't, aren't going to listen anyway -- I cleared my throat and changed the subject.\n\n\"How are Solona and Anders?\"\n\nI turned back towards where the two mages lay, surrounded by Wardens and Legionnaires alike. Solona remained unconscious, but her complexion had improved and Trevian sat beside her calmly, so I assumed she was out of danger. Anders, on the other hand, was awake, sitting up with one hand cradling his head, his elbow resting on his bent knee, holding a water skin and watching Solona carefully. Rolan knelt nearby, yet another healing potion in his hand, keeping an eye on both mages.\n\nSeeming to understand that nothing was forthcoming on the topic of the ghoul I'd just killed in cold blood, everyone nearby turned away and got on with the normal post-battle activities. Some started piling darkspawn corpses for burning, while Wulf and Zevran began carefully tying up the Architect, clearly not trusting whatever poison Utha had used. Conrad searched through the small bag Utha had carried, finding a vial of what must have been poison, and little else of value. Oghren and the rest of the Legionnaires continued searching through the Thaig, trying to discern where we were and find anything important of note. It was all just so weirdly normal, and I had to stifle a sudden scream that tried to claw it way out of my chest. Now I know what Alistair meant when he said he'd scream while at the monastery just to see people react.\n\nAfter another moment pulling myself together, Aedan, Alistair and I approached the mages carefully.\n\nAnders looked up with a groan as the three of us settled nearby. \"Andraste's Dirty Arsehole, my head hurts.\" I chuckled at the crude obscenity, and was pleased to see Rolan do nothing but roll his eyes. \"I'm assuming they gave me magebane - I'd heal it myself if I had even a sliver of mana left.\" And he was right; I could feel the faint aura of an unconscious Solona, but for all I could tell with my templar senses, he had so little mana he might as well not even be a mage.\n\n\"Are you okay? Can you tell us what happened?\" Aedan waited until Trevian backed away to ask. My brother appeared to be trying to maintain his patience, but he was clearly as eager to understand as I felt.\n\nAnders sighed. \"I supposed you heard about the capture.\" He gestured to Rolan, and we nodded. \"I was knocked out most of the time, but from the little bit I heard while I was awake, the Architect's plan was to turn Solona into a Broodmother, hoping that she wouldn't be stark-raving mad like the Mother.\" He looked over at the petite blonde worriedly. \"I don't know what all he's done to her. I'm hoping she can tell us when she wakes. She doesn't feel any different, taint-wise I mean.\" He grimaced, fingering the bruise on his temple. \"I was to be her first...snack. I think he was going to 'free' her right away after her transformation, and he thought that my Warden blood would help her stay sane.\"\n\nI blanched. Sweet Jesus. If I could wake the Architect up just so I could stab him again a few times, I would. Rolan looked positively sick, and I could tell he was blaming himself for the mages being in that position. I was grateful when Sigrun, hovering nearby, put a comforting hand on his shoulder and led him away.\n\n\"So...we're leaving him alive?\" Anders' question interrupted my daydream of dismembering the creature responsible for all of this.\n\nAedan explained the problem with killing the tainted Magister, and Anders swore again. \"Doesn't that just figure. The person - uh, thing? -- that I most want to roast on a spit, and I'm not allowed.\"\n\n\"And here I thought you preferred lightning, Anders,\" I teased, and he smiled weakly.\n\n\"Ah, how well you know me.\" His smile fell as he looked over at Solona once more. \"So what are we going to do with him?\"\n\nAedan frowned, and I scowled again at the former Magister's unmoving body. \"It's just like him to leave us with this sort of dilemma,\" I groused.\n\n\"I'm not aware of any poison that will keep him unconscious forever without killing him. Tying his hands, keeping him prisoner...do you suppose Greagoir might help? The templars must have some way of keeping mages from casting when they're in the dungeon, right?\" Aedan asked, eyeing Anders speculatively.\n\n\"There are glyphs written into the walls of the cell -- I suppose you might be able to reproduce that somewhere. They usually give us magebane for as long as we're there, just in case. And there's hand restraints that prevent casting too. Greagoir will help, whether he likes it or not -- the templars owe us,\" Anders finished darkly.\n\nAedan winced. \"Anders, I'm sorry. If I'd thought for a minute...\"\n\nThe mage waved his hand negligently. \"Not your fault. We all knew Rolan had issues, and that there were going to be some in the Chantry less than happy about the new mage freedoms and replacing the Grand Cleric. I'm just glad Rolan and Conrad came for us -- I think we'd have been in much worse shape otherwise. The templars didn't have a chance to do anything to Sol or me because they were frantic that Rolan had left...and I saw him standing over us after Solona was knocked out and I ran out of mana, defending us against the darkspawn. I won't forget, but I think I can forgive, in time.\"\n\nWe all stood silently for a moment, absorbed in our own thoughts. Finally Alistair cleared his throat. \"So we're taking the Architect to the Circle? I feel like that's...that's not a good idea, is it?\"\n\nI stood up and shook my head. \"I don't think so. But maybe some of us could go, ask Irving and Greagoir for some help? I have some thoughts I want to discuss later, but I'm thinking the best thing we can do with the Architect is take him to Soldier's Peak.\"\n\nAedan nodded. \"That's my thought too. It seems that our darkspawn problems around Amaranthine should be done; perhaps we should split up? I want Rolan, Anders, Solona -- once she wakes -- Conrad, Zev, and I to go to the Circle. Greagoir needs to be informed what happened, and he'll want to hear it from Conrad and Rolan directly; there's also help available there if Solona requires further healing or...something.\" He winced.\n\nI reached out and sensed Solona through the taint; she didn't feel any different than usual, so I hoped that whatever the Architect had done to her left no permanent damage. Her mana was regenerating as well, according to my templar abilities. I hoped she'd wake soon so she could tell us what had happened.\n\n\"Did you learn anything about Faren's poison?\" Alistair asked while I was woolgathering. I wanted to kick myself; in the chaos, I'd almost forgotten why the mages had been on the road to be ambushed in the first place.\n\nAnders' eyes lit up. \"I think so! It will take some testing, but I found some information that might help. One of the Tranquil is a talented alchemist. There's some papers in my...damn. Anyone seen my pack?\"\n\nWe all shook our heads, and Anders slumped. \"Maker's hairy chest, all of that writing for nothing. Well, if I'm going back to the Circle, I can find it all again. The good news is that if the poison is what I think it is, nothing bad will happen because of the delay. As long as we can keep him fed, I think I can eventually wake him up.\"\n\nI smiled, feeling truly hopeful for the first time in a while.\n\n\"So you're going to the Circle. I'm thinking the rest of us should escort the Architect to the Peak -- and we should both borrow some troops from Arl Nathaniel, just in case,\" Alistair suggested.\n\n\"And perhaps you can bring Faren to the Peak with you as well. We will head there immediately from the Circle with whatever help Irving or Greagoir can provide, get the Architect settled somehow, and then relocate more permanently.\"\n\n\"The question remains, though: how are we going to move the Architect safely?\"\n\nZevran and Conrad joined us, apparently satisfied with whatever they'd done to the Architect. \"I think, amore mio, that we should just be able to put him on a cart. We've got lots of empty carts, since we've used so many supplies, yes? Conrad found a vial of the poison Utha used, which evidently should keep him unconscious for a week. And you should be able to keep an eye on his mana, mia sorella, no? Though what we do with him once the poison wears off, I don't know. If he were human, I'd have some idea what to give him, but I'm not sure anything I came up with would work on a darkspawn.\"\n\nI nodded, sighing. I'm reasonably well-rested; I guess a few days without sleep won't kill me. \"We will figure something out. For now, personally, I'd like to get out of here. I imagine there's a few others who feel the same. Why don't we camp outside, and we can all leave early tomorrow.\"\n\nEveryone agreed, and we began organising everything so we could leave. Nate had helpfully stayed away from what he recognised were 'Warden matters', and it took little for him to get the troops moving. Zevran dosed the Architect, and had a small cart carefully brought down into the Thaig, where the darkspawn could be loaded and covered; he and Conrad supervised a team of soldiers to work on maneuvering the cart back up the long ramp to the outside. The dwarves, ever resourceful, had found some kerosene or oil of some sort abandoned in one of the nearby buildings, and the darkspawn corpses, including Utha, were piled for burning.\n\n\"We'll come back here,\" Trevian declared. \"There's another tunnel out the back, and I'd like to see where it leads. The assembly will be pleased if we can reclaim this and Kal'Hirol -- might even get me some more funding, and some new recruits.\" He grimaced, and we all winced sympathetically. New recruits are just more people for him to watch die. I sighed. There was nothing I could do about it, no matter how awful. The Legion Commander formed up his troops and they headed outside, one of them frantically scribbling map markings on a large piece of parchment as they went.\n\nAnders levered himself up onto his long, unsteady legs, and graciously accepted Rolan's help in wrapping Solona up in a blanket and gently lifting her. The templar refused the offer of a cart, and with Anders hovering protectively over his shoulder, carried the petite mage down the hallway towards the exit.\n\nI watched Utha's corpse burn, feeling sadness and despair nibbling at the edges of the cloak of numbness I'd pulled around my feelings; I shook myself, took Alistair's offered hand, and was the last one to leave the old abandoned Thaig to darkness.\n\nThe darkness persisted; to my amazement, an entire day had been lost to the Deep Roads, and it was pitch black outside, broken up only by the torches and campfires of the camp we shared with Nate's troops and the Legionnaires. It was a rare night without either of Thedas' two moons in the sky, and I sat quietly watching the stars as I ate a hurried supper of jerky, cheese, and dried bread.\n\nConvinced that the Architect would sleep for at least a few days -- and reassured by Zevran's confidence that he'd added enough magebane to the poison to knock out three emissaries -- I collapsed into a tent with Alistair immediately after supper. He said nothing, just held me quietly as the shakes took me; I finally fell asleep, fully clothed, in his arms.\n\nThe next morning, myself, Alistair, Wulf, Oghren, Sigrun, Justice, and Alim accompanied Nate back towards Vigil's Keep. We'd decided to stop there for one night and retrieve Faren (and hopefully Seranni and Velanna) before heading to Soldier's Keep.\n\n\"We'll keep him in the Deep Roads,\" I'd said to Aedan and Alistair about the Architect before we left. \"There's that chamber where someone was doing 'research' or whatever -- we can build a cell for him there, keep him guarded until we decide what to do with him.\" I'd pulled them both aside, asking Zevran to help make sure we weren't overheard.\n\n\"And don't tell anyone,\" Aedan had cautioned. \"I think we should keep the location under wraps -- the last thing we need is an escape or some sort of rescue from an intelligent darkspawn Utha missed. The fewer people who know, the less chance of anyone else finding out.\"\n\nAlistair had nodded. \"I'm thinking we will set up a fake prison somewhere else, tell everyone that's where he's being kept. You said there's no dungeon, Sierra?\"\n\n\"Not that we'd found before I left, but there were dozens of hallways blocked with junk. Who knows what Levi's found by now? However, maybe we could tell everyone we're keeping him in Avernus' tower. Tell everyone Avernus is helping to guard, being a blood mage and all. At least when I was there, Jowan was the only other one who ever went up there.\"\n\nAnd so it was that the group of Wardens surrounded a borrowed, covered cart dragged by borrowed oxen, driven by some of Nate's troops, as we headed north.\n\nSolona had yet to wake, when we'd left; bowing to inevitability, Rolan had conceded he wouldn't be able to carry the mage all the way to the Circle. Aedan and his group had borrowed another of the army's carts and were heading towards Kinloch Hold. We hoped they would meet up with us at Soldier's Peak in ten days, barring major complications.\n\nGetting back to the Vigil took us less than the two full days we'd needed to get to the Tarcaisne Ridge; the weather had held, the ground was less muddy, and the carts were much lighter than they'd been going the other direction. We made it to Vigil's Keep in the afternoon of the second day, to see a very relieved Seneschal Varel, and the worried faces of two Dalish elves. Alistair briefed Seranni and Velanna on what had happened -- leaving out much about the Architect, Utha, and what we planned -- while Nate and I updated Varel.\n\n\"The darkspawn attacks should stop, or at least slow,\" I assured him. \"The intelligent darkspawn are, we believe, all dead. Once we deal with a few things and get settled in at Soldier's Peak, we will keep patrols going across Amaranthine for a while to make sure. I'd recommend keeping some of the soldiers doing the same; I know you want to release them all back to their lives, but there must be some who'd prefer to stay. I'm sure I can convince the King of the need, if you would like me to ask.\"\n\n\"He's already approved increasing the size of the standing army and using them for patrols and defense, here and in the bannorn,\" Nate assured me. \"I'll ask for volunteers, but considering most of them were farmers before, we will need most of these people to go home if we want the harvest brought in before the first real cold spell. I've got this.\" He smiled at me, and I nodded in appreciation. Not having to deal with us will make his life easier, and I can't deny I'm looking forward to just being at the Peak with my Wardens and not a lot of other immediate worries. After we deal with the Architect, of course.\n\nMy thoughts had affected my expression, and Nate examined my frown uneasily. \"Sierra?\"\n\nI shook my head and plastered a smile back on. Not telling Nate everything is the right thing to do, but it does make it harder on me. \"All good. I'm sure you want to go see Velanna and Seranni -- and I want a bath. Goodnight, gentlemen.\"\n\nThe architect had shown no sign of regaining any of his mana, nor had he stirred in the two days of travel; I knew I'd start feeling less certain about leaving him unattended soon, but I was hoping for one more night's sleep first. After checking in on Faren -- unchanged, and being fussed over by Sigrun -- I headed to the room I shared with my husband. Alistair found me a short time later drowsing in the bathtub; he helped me out, encouraging me to go to bed while he had a quick wash. I was still awake when he was finished, curled up in bed and staring at the ceiling tiredly.\n\nHe pulled me into his arms, and I groaned as his clean, male scent washed over me. \"Distract me?\" I whispered, and felt him hum in the affirmative even as he claimed my lips in a soft kiss.\n\nI kissed him back, the feel of his stubble rasping against my chin and his chest hair against my sensitive nipples as he rolled on top of me spiking my arousal; I went from sleepy to randy in mere seconds, and was suddenly not content with his gentleness as he sucked my lower lip and hovered over me, weight on his elbows. I want him -- here, now, and hard. I reached -- one hand down to grip his gorgeous, toned ass, the other to grab a handful of his scruffy blond hair -- and yanked him closer to me, taking advantage of his gasp to stroke my tongue into his mouth, tangling with his aggressively.\n\nI could feel his erection trapped between us, pressing against my belly, and I bucked underneath him, trying to wriggle it into the gap between my thighs. Surprised, he tried to pull back, and I knew he'd be worrying about hurting me -- but I wasn't having any of that. I bit his lower lip sharply, and he cried out; I wrapped one leg around him, hooking my heel behind his thigh, and then pushed with the other leg, knocking him onto his back with me straddling his hips.\n\nFinally getting the picture, I felt one of Alistair's powerful hands slide into my hair and drag me down, capturing my lips in a heated kiss while my tongue vied with his for dominance. I took advantage of his distraction by wriggling my pelvis, capturing his length along my wet slit and grinding against him as I tried to get him sheathed inside me. The friction of his erection against my vulnerable core set off sparks inside me, and I moaned into his mouth, reaching down with one hand to try to position him where I needed him.\n\nLightning fast he grabbed my wrist, and I felt him chuckle as I whined in frustration. I ground myself against him again, relishing his hiss, only to gasp as he quickly grabbed my other wrist, transferred both into one of his strong hands, and used his other to crush my pelvis to him, preventing me from achieving my goal or teasing us both further.",
        "\"Just what do you think you're doing, little minx?\" he demanded, his grin ruining the serious, disapproving expression he was going for.\n\nI struggled against him unsuccessfully, once, unable to get any satisfaction for my aching breasts or my dripping sex as he held me taut between his hands, and I kicked my feet uselessly behind me. Giving up, I slumped in his grasp and decided to beg instead.\n\n\"Please,\" I gasped, shimmying slightly to make my breasts wobble in his face, as enticingly as I could manage. \"I need...I want...oh, please, don't tease me. I don't want gentle. Please, just...\"\n\nFlushed with arousal, he smirked at me mischievously. \"What do you want, my love?\" Zevran would be so impressed with him right now.\n\nI closed my eyes, embarrassed as always by the prospect of saying the words, of asking for what I wanted. \"Please...\" I tried again, trying one more time to wriggle my hips.\n\n\"Please what? I will give you anything you ask for, Sierra. What do you want?\"<br >\n\nI opened my eyes again, scowling at the mirth in his voice, desperate and needy and angry that he was taking so much joy in teasing me. \"Fuck me, you colossal ass,\" I spat out. \"Stop fucking around and take me!\"\n\nHe groaned, as usual turned on as much by my dirty talk as he was by the thought of the act itself. \"Your desire is my command, my love.\"\n\nAnd then I found myself suddenly being pulled by the arms, one of Alistair's hands lifting my pelvis, and before I could react I was on my knees and elbows on the bed, ass in the air, Alistair behind me with his hands on my waist. I felt something warm and impressively firm nudge my opening from behind, and then I was crying out as he sank into me in one fell swoop.\n\n\"Like this?\" he demanded, pausing once fully sheathed to allow me to adjust to his thickness stretching me deliciously. \"Is this what you want?\"\n\nI pushed with my arms, grinding my ass back against him and encouraging him on. \"Yesss,\" I hissed, squeezing my internal pelvic muscles to caress his length. He groaned, and then he was finally giving me what I needed, deep firm thrusts, driving himself in and out of me with abandon, pounding into me while I gripped his pillow and did my best to push back against him. \"Don't stop,\" I commanded breathlessly.\n\nAlistair cursed and curled forward over my back, one hand questing down to tease my button with dexterous fingers, the other arm wrapping around my shoulders, lifting my chin to give him access to my neck and ear. He tortured my sensitive earlobe with his teeth while he drove both of us closer and closer to completion. \"Come for me, Sierra,\" he whispered, voice husky and hoarse with lust and effort. As his teeth delved into the place where my neck and shoulder met, his fingers pinched one nipple and attacked my pearl, and I shrieked and came, slamming back against him again and again as my orgasm overwhelmed me and the world greyed out. There was only his voice, his fingers, his length, and the feeling of warmth as he shuddered and spilled inside me.\n\nAfter an eternity, when I started recovering my breath and my wits, I was kneeling in his lap, leaning back against his chest, his arms the only thing preventing me from collapsing bonelessly on my face. My head lolled on his shoulder as he pressed gently kisses to my jaw, whispering sweet nothings in my ear.\n\n\"You're going to be the death of me, do you know that? I'm never going to get enough of you. You've ruined me.\" He didn't sound particularly upset by it.\n\n\"Me? Ha. I thought this insatiable need was supposed to wear off. Everyone on Earth says married couples hardly have sex. But you...even now, I can't move, but if you asked me to go again, I'd find a way.\"\n\nHe groaned, and I felt his length twitch, making both of us shiver involuntarily. \"You can't just say that sort of thing to me,\" he complained. \"Some unnamed part of me is going to take it as a challenge.\"\n\nI giggled, and felt his chest rumble with a chuckle. I shuddered as he slipped out of me, and both of us collapsed forward onto the bed, rolling until we laid facing each other, legs intertwined, my head on his shoulder. He interlaced his fingers with mine and pulled my hand up to kiss my fingertips. I snuggled in as close as I could, trying to use the sunshine sensation radiating from him to banish the dark thoughts that recurred every time I wasn't actively distracted by something else.\n\nIt didn't work.\n\n\"I killed her,\" I finally whispered, burying my face in his chest.\n\n\"I know.\" He tightened his arm around me, offering silent support as he waited for me to go on.\n\n\"It was the right thing to do.\"\n\n\"Yes,\" he agreed.\n\n\"Her life was awful. And she did terrible things. And letting her go would have made her suffer more, and put others at risk.\"\n\n\"I know,\" he assured me.\n\nI hesitated. \"I don't even feel awful. What does it say about me that I can kill someone in cold blood, and not feel anything?\"\n\n\"Oh, Sierra.\" He sighed. \"All it says is you've seen too much, and you've been forced to re-examine your priorities. It's normal, not that I expect that to make you feel better. I wish I could have protected you from this. There's nothing I can say that's going to make this alright. It's going to take time. Just keep in mind...no one blames you. No one is angry. You really did the right thing. And...I love you.\"\n\nI nodded, unable to respond, and wiped an errant tear off my cheek. Alistair just held me close, humming softly under his breath, until I fell asleep feeling warm and safe and loved.\n\nThe next morning, it took us a few hours to pack what we needed, arrange Faren comfortably in a cart --the Architect uncomfortably tied up in another, and the eluvian well-padded in a third -- and settle affairs with Nate, Varel, and Trevian.\n\nAlistair reiterated his promise to Trevian to help them retake Kal'Hirol and the Thaig in the Tarcaisne ridge once we were settled. The Legion were planning to return to Orzammar -- through some better-known tunnels evidently mapped by Shale and Caridin in their search for golems -- and promised to send word when they would be back in the area.\n\nVelanna had negotiated a treaty between her former clan and Nathaniel that would benefit both; Nate would allow them some land in the more heavily wooded areas in the Wending Wood, and they would monitor for darkspawn and trade with the Arling at supervised sites under the protection of Amaranthine's enlarged guard. Velanna and Seranni were to accompany us, and Velanna would undergo her Joining once Aedan met us there.\n\nAnd Varel promised to send me more books and information on protocols, politics, and anything else he thought I still needed to know as Steward of Soldier's Peak. Oh joy, I can't wait!\n\nFinally though we were all set. We bid goodbye to the Legion, and I was surprised to realise how sad I actually felt at the separation. Sigrun seemed to be handling it well, though I caught her hugging Trevian a little too tightly, making the Commander bluster and roll his eyes -- and hug her back just as tightly, I noticed.\n\n\"Take care of yourself, lass.\" He bowed to me formally, his seriousness belied by his wide grin and a wink. \"You keep all them Wardens on their toes, you hear?\"\n\nI grinned and waved, turning to Nathaniel. If I felt sad at leaving the Legionnaires behind, I felt worse at leaving Nate.\n\n\"Come visit, okay? I'll show you around exciting Soldier's Keep. Levi assures me we have guest quarters adequately furnished and everything.\" He promised, and then offered me his hand to shake. I ignored it, and pulled him into a hug. \"Are you sure you're going to be okay?\"\n\nI heard him chuckle. \"I'll manage, your Highness. I've been alone before, and supposedly I was raised for this.\" I stuck my tongue out at him, and he grinned. His smile faded slowly, and I knew he was thinking of Leliana.\n\n\"She'll be back. You'll see.\"\n\nHe nodded half-heartedly, and I squeezed his hand. \"And I'll be waiting,\" he muttered, forcing his lips back into a smile. \"Travel safe.\"\n\nWhen everyone else's goodbyes had been said, with a last wave at Nate and Trevian, I climbed up into the cart holding the Architect, settled myself in a nest of cushions I'd made to try and stay comfortable, and we headed away from Vigil's Keep to begin our new lives at Soldier's Peak."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-147"
}