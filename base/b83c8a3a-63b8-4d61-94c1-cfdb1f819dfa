{
    "title": "Mary and Alvin Ch. 09",
    "pages": [
        "The Queen of Hearts\n\nAlvin woke up in the big four poster bed. He rolled over and reached for the pillow on the other side of the mattress. He buried his face in it while he cleared his head of sleep. Something seemed just a little bit off this morning. He sniffed the pillow and realized that it just smelled like a pillow. For years, he had clutched it before he went to sleep and again when he woke, because it smelled like Bonnie. Her scent had probably faded away long ago, but in Alvin's mind it had lingered. Now, it was gone.\n\nHe sat up and lifted his jeans from the floor. He judged they were clean enough to wear another day. He pulled them on and padded barefoot out of the bedroom.\n\nThe bathroom door was closed but he could hear water running. Even after two months, he had not really adjusted to living with women in the house again. He wondered if it was Jennifer or Danni in there. If it was Danni, she'd be out quick. The young woman was remarkably efficient, Alvin thought, button down and by the book. But if it was Jennifer, he'd be dancing in the hallway for a while. He started to knock, then shrugged and went down the stairs. His father had liked to say that he'd never live in a house where he couldn't piss off the back porch, and right now, Alvin saw great wisdom in that statement. As he relieved himself, he scoured the sky. The morning was clear and cool, but there was a haze on the horizon that indicated that it would be hot and muggy later.\n\nHe went inside and washed his hands at the kitchen sink. He put a pan on the stove to heat. As he was getting a slab of bacon from the refrigerator, Danni came down the stairs and greeted him.\n\n\"Morning Danni, how are you?\"\n\n\"I am fine, thank you,\" she replied as she turned on the coffeemaker. Alvin had once been put off by her seeming aloofness, but over time he had come to understand that she was a warm hearted woman behind an unassailable shield of personal dignity. \n\nBy the time Jennifer stumbled down the stairs Alvin and Danni had the bacon and coffee ready and had started making eggs and toast.\n\n\"You always did wake up by sense of smell,\" Alvin joked as his daughter poured herself a cup of coffee and flopped down at the kitchen table. Angus moseyed into the kitchen and jumped into her lap.\n\nWhen the food was ready, the three of them sat and ate together. Alvin knew he would miss them when they returned to Orono for their last year of college, but took comfort that when they came back in the spring, it would be to stay.\n\n\"So, how's Mary?\" Jennifer asked, \"Haven't seen her around lately.\"\n\n\"Mary's fine,\" Alvin said, \"we're just taking our time with things.\"\n\nJennifer looked skeptical. \"You sure? Seems like you two cooled off.\"\n\nAlvin shook his head. \"No, we are just figuring out how we fit.\"\n\n\"I guess that's an issue for straight couples,\" Jennifer laughed.\n\n\"You know what I meant,\" Alvin said, rolling his eyes, \"I mean, we reached a particular point and now we have to figure out where we go from there.\"\n\n\"I don't get this particular point thing.\"\n\n\"You know, when it becomes serious.\"\n\n\"When you tell her you love her,\" Danni said.\n\nAlvin nodded.\n\n\"Oh!\" Jen exclaimed, \"Did you screw this up and tell her before she was ready?\"\n\n\"Jeezum crow, no,\" Alvin said, throwing up his hands, \"She more or less told me to say it.\"\n\n\"Did she say it back?\" Danni asked.\n\n\"Yes.\"\n\n\"Well, alright then,\" Jen said, breaking a piece off the last strip of bacon and feeding it to Angus before eating the rest of it herself.\n\n\"But, that brings up issues, don't you know,\" Alvin shrugged.\n\n\"Like what?\"\n\n\"Well, like, she's a city girl. You think she's going to want to live in the willywacks of Maine the rest of her life? And I sure as shit ain't about to go live in California.\"\n\n\"Ha! I can see you strolling around in sandals and socks.\"\n\nAlvin looked at Danni. \"I told Bonnie that we should give the kids regular beatings, but she wouldn't have it.\"\n\n\"Yeah,\" Jennifer scoffed, \"like you were the tough parent.\"\n\n\"Well, there is the other thing. I guess her Mom is wicked riled over the age business. Can't see her alienating her own family over somebody she ain't known long.\"\n\n\"I did,\" Danni said. Jen took her hand and kissed her cheek.\n\nAlvin hung his head.\"I'm sorry, Danni.\"\n\n\"It's fine,\" she nodded, \"you didn't mean to be insensitive.\"\n\nIt was quiet for a moment, then Alvin asked, \"So what's on the agenda today?\"\n\n\"Finishing the electrical,\" Jen said, \"Still need to get the insulation in and the drywall up. If there's time I'd like to get the painting done before we leave.\"\n\n\"And the furnace?\"\n\nDanni answered. \"It will be delivered Friday.\"\n\n\"Well, call on me if you need help with it.\" He looked at the two of them, and felt a surge of pride. \"The two of you have done a hell of a job, I'll tell you.I never expected you to be as far along as you are.\"\n\nThey had worked on the house all summer, and with only a little more than a week left before the fall semester began, it was near completion. Alvin had pitched in when he had time, and Tim had helped Danni with the roofing. A few of Jen's high school friends had come by now and then, but for the most part, the two young women had really done it themselves, they had built their own house. \n\n\"I wish your Mom could see what you've done,\" Alvin said, reminded of Mary's feelings about her father, \"She'd be so proud of you.\"\n\n\"Thanks, Daddy,\" Jen said. \n\n\"Yes, thank you,\" Danni concurred.\n\nThey cleaned up the breakfast dishes and Alvin went upstairs to prepare for the day while the girls went out to work on the house. \n\nAs he showered he thought more about his girls, and how well they had turned out. He was sure that Bonnie would be proud of both of them, and maybe of him as well. It had not been easy, but he supposed he had done alright.\n\nHis determination to be strong for his daughters was the only thing that kept him from collapsing into inconsolable grief in the months after he'd found Bonnie in her garden. He had help, of course. His mother, as poor as her own health was, rose to the occasion, showering the girls with grandmotherly love. Diana took care of many of the household duties of which Alvin was clueless, and even Tim was helpful, taking the girls to McDonalds or a movie when Alvin began to feel overwhelmed. But the bottom line was, he was their surviving parent, and the emotional burden fell squarely on his shoulders. \n\nCharlotte grieved hard for the first few weeks, sometimes spontaneously weeping at the slightest reminder of her mother. But then she seemed to will herself to get past it, and at first Alvin was proud of the way she had toughened up. It reminded him of his own response to his father's sudden death. But then the night terrors began. That was perhaps when he came closest to losing control, hearing his little girl screaming in the middle of the night, and knowing that while he could hold her and comfort her, he could do nothing to prevent the terror from returning the next night. After a time, the bad nights grew further apart and eventually stopped, but Alvin knew all that pain was not gone but was stored up, and would one day find an outlet. When she began to show signs of promiscuity with boys at school, he realized that he needed more help than family could provide, and for a year he took Charlotte to Bangor every Tuesday afternoon to see a counselor. Her behavior improved, but Alvin feared the root of the problem had never been addressed.\n\nJennifer was more stoic about her mother's death. Alvin had always felt that while Charlotte was very much her mother's girl, Jennifer was more like him. It was obvious that she grieved for her mother, but she adjusted quickly to the new normality. While Alvin worried about Charlotte, he thought that raising Jennifer would be smooth sailing. So, he was surprised on the bitter January day when the middle school principal called and asked him if he could come in for a conference.\n\nHe was waiting outside the school when classes ended. When Jennifer came out, she looked at him with a puzzled face which quickly fell into a downcast expression.\n\n\"Come on, let's go get ice cream,\" he said as they walked to the car.\n\n\"Dad, it's like fifteen degrees. People don't eat ice cream when it's this cold.\"\n\n\"Well, I guess they won't be sold out, then.\"\n\nThey drove to Wendy's Diner and took a booth in the back. Alvin ordered a bowl of coffee ice cream and Jennifer got a strawberry milkshake.\n\n\"So,\" Alvin began tentatively, \"I got called to come in and talk to the principal. I'm figuring you know what it was about.\"\n\nJennifer looked down into her glass. \"I guess so.\"\n\n\"Alright, well let's start with you ain't in no kind of trouble, so you can go ahead and look at me when we are talking.\"\n\nJennifer looked up at her father.\n\n\"You want to tell me about it?\"\n\nShe hesitated a minute, then said, \"I kissed Donna Cloutier in the girl's bathroom and Miss Edwards came in and saw us.\"\n\n\"Yeah, I know that part. That's not what I meant.\"\n\n\"What then?\" she shrugged.\n\n\"Were you just playing at, whatever, or is this something serious we need to talk about?\"\n\n\"Can it be something serious we don't need to talk about?\"\n\n\"I think we need to talk about it at least once.\"\n\n\"Why?\"\n\n\"Because I'm your father and it's my job to look out for you. I can't do that if you keep secrets from me. Big secrets anyway, I don't need to know every damn thing.\"\n\nJennifer sipped her milkshake for a minute, then looked her father in the eye. \"I don't like boys. I like girls.\"\n\nAlvin shrugged. \"Girls smell better.\"\n\nJennifer snorted. \"Don't be a goof, you said it was a serious talk.\" \n\n\"Alright. What I need is for you to look me right in the eye and tell me that this isn't some rebellion thing or just trying to take after some singer you like or something.\"\n\nShe looked at him and said, \"It's not a rebellion. It's not about being anybody but me.\"\n\n\"Well, alright then.\" Alvin ate a couple of spoonfuls of ice cream.\n\n\"Daddy?\"\n\n\"What, baby?\"\n\n\"You still love me, right?\"\n\nAlvin looked at his daughter, the girl who looked so much like her mother, and felt like his heart might break.\n\n\"Sweetie,\" he said, \"I just found out two things about you. One of them doesn't matter one little bit. The other one does. And that's that you are the bravest girl I ever knew. Why would that make me love you less?\"\n\n\"I'm glad you're not mad at me.\"\n\n\"Didn't say I wasn't. You get no pass on misbehaving. And if you don't want to piss me off, don't ever doubt that I love you again.\"\n\n\"Alright. So am I getting punished or anything?\"\n\n\"Yes. You have to spend the rest of your day with me.\"\n\nHe watched as she loudly slurped up the last of her milkshake. He smiled at her and refused to show her his melancholy mood. He wasn't completely surprised to learn that she was gay. She'd always been a tomboy and she was well past the age where Charlotte had become boy crazy. But he felt heartsick with the thought that he would lose her. She wouldn't want to stay in a small town where everyone knew your business. He had wanted to run far away when he was young, and she had much more reason to than he'd had. \n\nAlvin remembered that day at the diner as he left the house to head to the wharf. He looked across the meadow and saw Jennifer pick up a box from the back of his old pickup. As she lugged it up the front steps, Danni came through the door and kissed her on the cheek as she passed. Alvin got in his car and headed down the long driveway. Danni was getting another box from the truck. She smiled and waved at him as he drove by. I thought I was going to lose my daughter, he thought, but I got another one instead.\n\nLate August is still prime vacation season along the coast, and Alvin was busy all day. When his phone rang, he looked at the screen and was surprised to see that it was already past two o'clock. He was not surprised to see that it was Mary calling.\n\n\"How's your day going?\" she asked.\n\n\"Busy as a one armed boxer,\" he replied, \"How are you, darlin'?\"\n\n\"I'm fine. Busy here, too. A lot of people out on vacation.\"\n\n\"Well, they all come down to the waterfront, by the looks of it.\"\n\n\"Listen,honey, I want you to come over for supper tonight.\"\n\n\"I don't know, dear, I'm so busy and...\"\n\n\"Excuse me, but did you hear me ask a question?\"\n\n\"No, I don't suppose I did.\"\n\n\"Good. I'll see you at seven.\"\n\nI guess I'd better be there, he thought with a chuckle as he put the phone back in his pocket.\n\nHe managed to get away from the wharf in plenty of time to shower and change into fresh clothes. At exactly seven o'clock, he was climbing the stairs to Mary's apartment. She opened the door when he was halfway up. \n\nThey kissed in the doorway, then Mary turned and went into the kitchen. \"Sit down,\" she said, \"it's not quite ready yet.\"\n\n\"Something sure smells fine,\" he said, sitting on the couch. Mary came back and handed him a bottle of beer. \n\n\"Jennifer called me today,\" she said.\n\n\"Oh? What did she want?\"\n\n\"She asked if you and I would like to go with them to that Roadhouse where they do the karaoke on Saturday.\"\n\n\"Well, I wonder why she didn't say anything to me.\"\n\n\"Because you would say no, and I said yes,\" Mary said as she disappeared back into the kitchen.\n\n\"I ain't singing,\" he called after her.\n\n\"Nobody's asking you to,\" she shot back.\n\nA few minutes later, Mary called him to the kitchen. The table was adorned with a red and white cloth and a single tapered candle. In the center of the table sat a shallow earthenware bowl filled with steaming brown rice.\n\n\"What's this, Spanish rice?\" he asked.\n\n\"Paella,\" she said, taking his empty beer bottle and handing him a glass of white wine. \"It's got lobster and chicken and chorizo in it.\"\n\n\"Jeezum crow, it smells good,\" he said as he sat down, \"what's in it that gives it that smell?\n\n\"Saffron,\" Mary told him as she sat across from him. She dished several big spoonfuls into a bowl and set it in front of him, then filled one for herself.\n\n\"Isn't that stuff a hundred dollars a sniff or something?\"\n\n\"Not quite.\"\n\n\"You brought it from California?\"\n\n\"No, I bought it in Camden the other day.\"\n\nAlvin took his first bite. \"Oh, Jeezum, that's wicked good.\"\n\n\"Thank you,\" Mary smiled, as she began to eat.\n\n\"You went to Camden?\"\n\n\"Sure, I went shopping with Kelly.\"\n\n\"I didn't know that. This sausage is terrific. Wicked spicy, though.\"\n\nThe only sounds for the next few minutes were their forks clinking on their bowls. Then Mary broke the silence.\n\n\"Do you think I should shave my public hair?\"\n\nAlvin nearly choked on a bite of chicken. \"Excuse me?\"\n\n\"Well, I read an article about how to keep your man from losing interest. What if I didn't wear underwear all the time and flashed you on occasion?\"\n\n\"I'm not losing interest.\"\n\n\"Honey, I'm an expert on men losing their interest. I've been through it, I know the early warning signs.\"\n\nAlvin reached across the table and took her hand. \"Mary, I adore you. I am not losing interest.\"\n\nShe shook her head. \"You stepped back, you are all of a sudden not as emotionally available. You change the subject or make jokes whenever I try to talk about us.\"\n\nAlvin put down his fork. \"It's a thing I have to go through. You know...\" he paused, looking down at his plate. \"I've only really been in love once before and you know how it ended.\"\n\n\"It ended with her loving you for the rest of her life.\"\n\n\"I never looked at it that way.\"\n\n\"Well, whatever your thing is, get on with it, goddamn it.\"\n\n\"Alright, sweetheart. That underwear thing sounds interesting, though.\"\n\nMary shook her head. \"You can be a jerk sometimes, Alvin.\"\n\n\"What else did the article say?\"\n\n\"It recommended surprise blowjobs in unexpected situations.\"\n\n\"Well, if it was an expected situation, you'd have to be a real numbie for it to be a surprise.\"\n\n\"Just finish your supper, Alvin, and see what you can expect afterwards.\"\n\nLater, after they had made love and Mary had drifted off to sleep, Alvin lay awake, thinking. \n\nAs his daughters got older and became more independent, he had considered whether he ought to try dating. He had no intention of entering a relationship. He didn't think anyone would ever replace Bonnie, but he was lonely. He craved companionship and he missed sex.\n\nOne day as he was pumping gas into his pickup, he heard someone call his name. He looked around to see a full figured woman with long dark hair coming out of the store, sipping soda from a huge styrofoam cup and waving at him.\n\n\"Terri!\" he called back, \"How are you?\"\n\nHe had not seen Terri Arsenault since Bonnie's funeral. She had been his first girl friend and they had lost their virginities together in the back seat of his father's car at Sandy Point Beach. There were fine lines around her eyes and she'd put on a few pounds, but she looked much the same as she had then.\n\nShe came over to Alvin and they hugged.\n\n\"Where you been, Terri, I ain't seen you in an age.\"\n\n\"Well, when me and Bobby broke up I moved out to Liberty.\"\n\n\"You down by the lake?\"\n\n\"No, out to the village.\"\n\n\"Still running the family shop, though?\"\n\n\"Ayuh,\" she said, jerking her thumb across the lot. Alvin looked over and saw the panel truck adorned with the blue and white logo of Midcoast Shellfish. \"I'm still the mother shucker in charge. How 'bout you?\"\n\n\"Oh yeah, still on the wharf. Probably be there until a big enough swell comes in and washes me away.\"\n\n\"What time you get done? Maybe we could meet up at Hurley's, get a couple of beers and eat some wings. Sox play at seven.\"\n\nAlvin hesitated, then agreed. \"I'll have to run home and make sure my mom and the girls get fed. See you about six thirty?\"\n\nShe gave him a thumbs up and a wink and returned to her truck. Alvin watched her go and felt a surge of excitement he had not experienced in a long time. \n\nTerri was perched at the bar sipping a coffee brandy when Alvin arrived. She was wearing a Red Sox jersey with the number 5 and the name Garciaparra across the back. He climbed on the stool next to her. \n\n\"Jesus, you still wearing that Nomar shirt? What, was they out of Ted Williams?\"\n\nTerri laughed and lifted her glass to her lips.\n\n\"And you still drink that Allen's swill?\" Alvin asked.\n\n\"Remember what we used to call it?\"\n\n\"Liquid panty remover.\"\n\n\"Ayuh, and the champagne of Maine.\"\n\nAlvin ordered a beer.\n\n\"How's your girls doing?\" Terri asked.\n\n\"Good, as far I can tell. But they're teenagers, so you know, hard tellin', not knowin'.\"\n\n\"Hey, you know I went to our twentieth reunion a while back. You should of gone.\"\n\n\"Jeezum, can't imagine why you done that.\"\n\n\"Well, wanted to see who'd show up, I guess.\"\n\nAlvin shrugged. \"All the smart ones moved away.\"\n\nTerri laughed. \"Wasn't Sam Melanson voted most likely to succeed? That dubber bagged my groceries down to the IGA last week.\"\n\n\"Well, but you got to admit,\" Alvin said, \"He's a wicked good bagger.\"\n\n\"Does a fine job with paper or plastic,\" she nodded.\n\n\"Jason Bradford was probably the most successful, really, until the staties found his lab.\"\n\nTerri sipped her beer, then said, thoughtfully, \"We ought not make fun of them, Alvin. Only reason we ain't the sad cases they are is our granddads started businesses that fell to us.\"\n\n\"You've got a point there,\" Alvin said, looking into his glass. \"Used to be there was good jobs at the cannery and the shoe factory. Hell, even the lobsterin' ain't as good as it once was.\"\n\n\"You ain't telling me nothing I don't know there, sugar.\"\n\n\"Jeezum crow,\" Alvin shook his head, \"you and me was what nowadays they'd call slackers, and we turned out the success stories.\"\n\n\"They did one of those memorial videos. You know, like on the Academy Awards and what not. Some sad shit there.\"",
        "\"Sandy Bartlett died from a brain tumor not a year or two after we graduated.\"\n\n\"Yeah, they had her. And that numbie Carl Franks. They had him on there, didn't say nothing about him overdosing, they left that out.\"\n\n\"Jeff Cyr died in a wreck up on 95. His family buried him at their camp down by Mill Stream, and planted a nice sugar maple over him\"\n\n\"Thats a nice thing.\"\n\n\"Couple years later, beavers gnawed the frickin' thing down.\"\n\nTerri nearly spit out a mouthful of her coffee brandy. \"Jeezum, that's a pisser,\" she said, \"shouldn't be funny, I suppose, but it is.\"\n\n\"Joe Staples got the white lung, working over to the Bucksport mill,\" Alvin added, \"passed last year.\"\n\n\"He was on there. And Jeannie Moody. Didn't you go out with her sister?\"\n\n\"Ayuh. Ned Chamberlain.\"\n\n\"I liked Ned.\"\n\n\"I did too, he was a good sort.\" Alvin said, then after a moment's silence added, \"Fuck George Bush.\"\n\nTerri pretended to spit. \"So, here's to you and me, the real most likelies.\" She clinked her glass against Alvin's bottle.\n\nThe bar filled up as the ball game started. Alvin and Terri watched the Tigers jump out to a quick three to nothing lead. The Hurley's crowd grew disgruntled.\n\n\"You know what,\" Terri said, \"fuck Miguel Cabrera, too.\"\n\nThe Red Sox fans perked up when Big Papi jacked one over the Green Monster, but in their half of the inning the Tigers put five runs on the board and a consensus was reached that once against, the Sox would break New England's heart. Alvin finished his second beer.\n\n\"Probably ought to get going,\" he said.\n\n\"Not already,\" Terri said, putting her hand on his arm. \"You getting old on me?\"\n\n\"Might be,\" he shrugged.\n\nTerri leaned in close to him. \"Remember when we used to rent a room at the Sea Breeze?\"\n\n\"I remember,\" Alvin nodded, \"only motel around rents by the hour, no questions asked. I recall the time we got a room and the door wouldn't shut tight. Kept swinging open on us.\"\n\n\"Alvin, I can afford an hour.\"\n\nAlvin looked at her blankly for a minute, then realized what she had meant.\n\n\"Jeezum, Terri, I don't know...\"\n\n\"You did get old on me. Bullshit, let's go, for old times sake.\"\n\nAlvin tried to tell himself that there were good reasons why he should not go to the Sea Breeze with Terri, but he couldn't think of a single one. When she stood and said, \"C'mon, let's go,\" he followed her out of the bar.\n\n\"I'll drive,\" Terri said as they walked toward their cars, \"you might not remember where it is.\"\n\n\"I reckon you've been there more recent than I have,\" Alvin said.\n\n\"If you're calling me a slut, chummie, keep a mind to who helped me get started down that path.\"\n\nAlvin laughed as he got in the passenger seat. Terri climbed behind the wheel and started the car. \n\n\"You need to stop at the store, bub? I've got the Trojans if you've got your blue pill.\"\n\nAlvin shook his head. \"I think I'll get along fine,\" he told her, \"unless you're saying you ain't the inspiration you once were.\"\n\nThey drove out of town and headed east on the main highway. They crossed the big bridge and a mile further along, pulled into the potholed parking lot of the Sea Breeze Motel. Terri parked in front of the dimly lit office. A neon light in the window read \"V CANCY\". Alvin stepped out of the car.\n\n\"I said I'd pay for an hour,\" Terri reminded him.\n\n\"Might want to each pay for an hour.\"\n\n\"Well, ain't you a frickin' optimist,\" Terri laughed.\n\nAlvin entered the dingy office and rang the bell on the front desk. A few minutes later, an old woman came out from the back room, a cigarette dangling from her lips. Alvin remembered her from previous visits, and was amused that she didn't seem to have changed at all in almost two decades.\n\n\"You want the night?\" she asked, without removing her smoke.\n\n\"Two hours,\" Alvin replied. \n\n\"That'll be fifty bucks.\"\n\nAlvin took out his wallet, and wondered if he had enough cash, before realizing that there was no reason he couldn't pay with a credit card. I don't think I even had a credit card the last time I was here, he thought.\n\nTerri was leaning on her car when he came back out. \"Room Three,\" Alvin told her.\n\n\"You didn't get the presidential suite?\" she asked him.\n\n\"No, I guess they are holding that in case some VIP comes by.\"\n\n\"Stephen King, maybe, doing some research.\"\n\nAlvin opened the door and stepped into the room. He flipped the light switch and a lamp came on. \n\n\"Smells like my Uncle Jeb's chicken barn in here,\" Terri said.\n\n\"This is what the flatlanders call shabby chic,\" Alvin said. The room's entire furnishings consisted of a bed, a side table with the single lamp, and a pair of yellow plastic chairs. A rabbit eared television was chained to a wall mounted metal shelf.\n\nTerri pulled her Red Sox jersey over her head and hung it on the doorknob.\n\n\"Can't let that touch the floor,\" Alvin joked.\n\nShe sat on the bed and took off her shoes. Looking up at Alvin, she said, \"You already been invited, what are you waiting for?\"\n\nHe quickly kicked off his shoes and undressed.\n\n\"If we wanted romance, we'd have not come here,\" Terri said as she slipped out of her jeans.\n\n\"That's true,\" Alvin said, kneeling on the bed beside her. He leaned down and kissed her. She put one hand on the back of his head and leaned back, pulling him down with her.\n\nAs soon as Terri touched his cock, Alvin felt the years fall away. When she took him in her mouth, it was as if they were eighteen again.\n\nHe was afraid that, having been celibate for so long, he would not last long enough to please her, but Terri knew how to bring him close to the edge without sending him over it.\n\n\"Jeezum, Terri,\" he muttered, \"you got better at that over the years.\"\n\nTerri laughed. \"Let's see if you did,\" she said climbing on top of him and lowering her crotch toward his face. He grasped her hips in his hands and began to use his tongue on her. \n\n\"Ayuh, that's pretty good,\" she said, before returning to his cock. She pressed down against him until he could barely breathe. He rolled on his side, carrying her with him, and they continued in that position until he had to pull away to keep from cumming.\n\nThey took a minute to catch their breath. Alvin's cock began to sag, but Terri revived it with a few deft strokes and then climbed over Alvin, her back to him, and lowered herself on to him. He stroked her back as she rode up and down on his cock. She moaned and gasped for air. \"Alvin, give it to me hard,\" she panted.\n\nAlvin rose up and kneeled behind her, pressing her shoulders down. She raised her ass and he entered her from behind. There was no holding back now, he pumped into her as hard and as fast as he could. It had been so long for him. When he came, he thought he might pass out from the intensity. He slumped down over Terri's back, wrapped his arms around her and fell on to his side. She spooned against him, panting from her own climax.\n\n\"Jeezum, you must have been saving that up,\" she said.\n\n\"Well, been almost three years,\" Alvin replied.\n\n\"Aw, fuck, Alvin, you mean since Bonnie? Wish you had told me that.\"\n\n\"Would it have made a difference?\"\n\n\"No, I guess not.\"\n\nAlvin sat up and looked around the tiny room. \"Jeezum, \" he said, \"did we ever think this place was cool?\"\n\n\"Nope, we thought it was christly nasty.\"\n\n\"Better than fucking in the pucker brush, I guess.\"\n\n\"Hard tellin', not knowin', probably more bugs in here.\"\n\n\"Let's get the hell of of here.\" Alvin said. Terri took no convincing.\n\nThey drove back to Hurley's. When they pulled up, they could hear the crowd inside yelling and cheering. They stepped inside just in time to see Kevin Youkilis slap a liner down the right field line, bringing Ellsbury home and winning it for the Sox in the bottom of the ninth. The fans in the bar pounded their fists on their tables and chanted \"Youk! Youk!\"\n\nAlvin and Terri joined in the ritual chugging of Fireballs that accompanied every Red Sox victory. Everyone agreed that this would be Boston's year.\n\nAlvin laid awake in the dark, thinking back to that night with Terri. He rolled on to his side and propped his head up on his elbow. He could dimly see Mary's face in the moonlight and hear her soft sleeping breathes. A strange notion came into his head. Terri was my first lover, he thought, Mary will be my last. That disconcerted him, and he sat up and quietly slipped out of the bed. He tiptoed into the living room and crossed over to the window that overlooked the harbor. He could see the wharf there, and his boat gently rocking at it's berth. A wavering line of moonlight shimmered across the bay.\n\nTerri had been special. Not just because she was first, but she seemed to understand him in a way no other woman, not even Bonnie, ever could. Maybe the fact that they were so much alike was the reason that they had twice drifted apart. \n\nAfter their liaison at the Sea Breeze, he and Terri had gotten together regularly for a couple of months. It wasn't dating, they rarely went anywhere. Usually, Alvin would drive out to her house, they would have a few drinks and go to bed. The sex was always good, but they soon ran out of shared reminiscences and their conversation dwindled. By mutual agreement they returned to just being friends.\n\nBut the brief affair had recharged Alvin's libido. He signed up with a couple of online dating sites, but unless he wanted to spend all his time going to Portland or Bangor, they were useless. He confided his desires to his brother Tim, and he set up a few dates with local women he knew. After some initial awkwardness, Alvin came to enjoy them, but none of them led to more than a few pleasant evenings and a couple of one night stands. After a while he stopped trying, and it was only then, when he stopped pressing, that he became more successful.\n\nAbigail Staples was an advertising salesperson for a Bangor radio station. She came to the wharf one day, looking to sell ad time. Alvin was not interested in radio ads, but he found himself interested in her, and asked her out. They dated for two months before she decided to reunite with an ex-boyfriend who had just returned from Afghanistan.\n\nThen there was the divorcee who showed up one day to inquire how best to sell the boat she had taken from her husband in their settlement. The Canadian woman who was sailing the coast solo from Halifax down to Martha's Vineyard. The sales clerk at the chandlery in Southwest Harbor who wrote her phone number on his receipt. \n\nOn a stormy October morning, when Charlotte was in her first year of college, Alvin drove Jennifer down to the road in his pickup, so she would not have to wait for the school bus in the rain. After seeing her off, he went back up to the house to get ready for his workday. The tourist season had wound down, but there were still a few boats to get ready for winter and a fair amount of maintenance yet to be done on the facilities.\n\nHis mother had still been in bed when he and Jennifer got in the truck, but she was sitting at the kitchen table when he returned.\n\n\"You alright, Ma? You looked a bit peaked.\"\n\nHannah shook her head and coughed. \"No,\" she replied, \"I'm doing poorly.\"\n\n\"Let me make you some tea,\" Alvin said, but as soon as he turned his back, he heard a loud thump. He spun around and saw his mother lying on the floor. His mind immediately flashed to the image of Bonnie in her garden. This time, I can do something, he thought. He rushed to her and rolled her onto her back. She wasn't breathing. He placed his hand on her chest and could not feel a heartbeat.\n\nAlvin had been certified to do CPR for years, but had never actually used the training. He tried to remember what to do. He began doing compressions to Hannah's chest and was amazed when, after a dozen or so, she drew in a deep but ragged breath and began to cough. She tried to get up, but he pushed her back down.\n\n\"Stay put, Ma,\" he told her, remembering how she had driven herself to the hospital while having her first heart attack. He rushed to the living room and grabbed a pillow and blanket from the couch and his cell phone from the table.\n\nHe put the pillow under her head and covered her while he dialed 911. Once they told him help was on the way, he sat on the floor next to her and held her hand while they waited.\n\nHannah seemed disoriented and Alvin kept reassuring her that she would be alright. At one point she looked at him and said, \"Twenty two years.\"\n\n\"What's that, Ma?\" Alvin asked, but her mind had drifted off.\n\nThe paramedics arrived and hustled Hannah on to a gurney and whisked her into the ambulance. Alvin jumped in his truck and followed them to the hospital. It was only a ten minute trip, but to Alvin it seemed like hours.\n\nHannah was rushed into the emergency room, with Alvin close behind. A nurse took his arm and told him he would just be in the way. She escorted him to the waiting room. He took a seat and stared at the ER door. The first time he had ever seen Bonnie was when she had stepped through that door. Christ, Bonnie, he thought, I need you right now.\n\nHe had only been there a few minutes when Dr. Gates, the ER supervisor, came out.\n\n\"Mr. Faulkner?\"\n\nAlvin stood up and the doctor came to him.\n\n\"Mr. Faulkner, I'm afraid that your mother arrested again in the ambulance. She didn't make it. I'm very sorry.\"\n\nAlvin looked down at the floor and nodded. \"Knew it would happen someday,\" he muttered.\n\n\"She had a long history of cardiac disease,\" Gates said, \"She fought a good fight against it.\"\n\n\"Thank you. I, uh, I've got to call my brother and sister. And my kids.\"\n\n\"Of course, we will be here for you.\"\n\nAlvin called Diana and Tim. The wharf could stay closed for the day. He would go to the high school and pick up Jennifer, then call Charlotte when they got home.\n\nAs he drove to get Jennifer, he wondered what his mother had meant when she had said \"twenty two years.\" She wasn't talking about her age, obviously, nor his. Then it came to him. It had been twenty two years since his father had died. Twenty two years since she had lost the only man she had ever loved. In the months after her death, Alvin pondered those three words many times. What was she trying to tell him? Was she expressing her sorrow that she had been so long without her love? Or her expectation that she and Jack would be reunited? Alvin didn't believe either were right. The more he considered her words the more certain he became that she was trying to advise him. She was warning him of the terrible loneliness of a loveless life. From the moment of that realization, Alvin ceased to be interested in casual dating and one night stands. Someday another real love would come into his life and he would keep his heart open for it. He did not know it yet, but he was waiting for a girl on a bicycle.\n\nAlvin was so lost in thought that he did not hear Mary get out of bed. He was startled by the sound of her voice softly calling his name from the doorway.\n\n\"Oh. Good morning, babe,\" he said when he saw her.\n\n\"Is everything okay?\" she asked as she crossed the room to him.\n\n\"I'm fine, just looking out at the new morning.\"\n\n\"Standing naked in front of my window,\" she said, leaning against him and putting one hand on his shoulder. \n\nHe had waited years for love to return to his life and now that it had, he found himself pulling away from it. Opening his heart to love meant opening it to the possibility of unbearable pain. \n\nWhen he didn't answer her, Mary reached down and wrapped her hand around his cock.\n\n\"I want you to come back to bed with me,\" she told him, \"I think you need a morning treat.\"\n\n\"Well, I won't say no to that,\" he replied, feeling himself stiffen at her touch. She gripped his cock and began to step backwards, leading him toward the bedroom. She giggled, watching his downcast face light up with a grin.\n\nAlvin sprawled on the bed and Mary kneeled between his legs, stroking him.\n\n\"Do you remember,\" she asked, \"the first time we were together, I told you that I liked your cock?\"\n\n\"I do recall that you said that.\"\n\n\"Guys like that, don't they? To have their cocks complimented?\"\n\n\"Well, we don't get complimented on our...features all that often.\"\n\n\"Women get comments about our features too much.\"\n\n\"You more than most, I'd venture.\"\n\nMary laughed. \"You know, you can say things that are so dumb and so sweet at the same time.\"\n\n\"How is that...\" he began, but he stopped talking when he felt her lips on the tip of his cock.\n\nHe closed his eyes and enjoyed the warmth, the wetness, the gentle suction of her mouth. Within a few minutes he knew that he would not last long. He propped himself up on his elbows.\n\n\"Mary,\" he whispered, \"look at me.\"\n\nMary looked up at him, while continuing to slide her mouth up and down his shaft. As soon as they made eye contact, Alvin felt himself losing control.\n\n\"I'm going to...\" he began, but it was too late. Mary nearly choked, but kept sucking as he came in her mouth. She swallowed hard, then raised her head and gasped for breath. A single line of cum ran down from her lip. Alvin reached down and wiped it off with his thumb. Mary kissed the thumb and giggled as she licked it off.\n\nShe laid down in his arms and snuggled against him.\n\n\"Thank you, baby,\" Alvin said.\n\n\"You're welcome. I consider it a treat for both of us.\"\n\nThey held each other for a few minutes before Mary looked over at the clock.\n\n\"I've got to start getting ready for work,\" she said. She got up and went into the kitchen to start the coffee maker. Alvin found his shorts, put them on and followed her. He watched her as she bustled around the kitchen, preparing breakfast. In a few minutes she joined him at the table with slices of cantaloupe and toasted english muffins.\n\n\"I'm excited about going to the karaoke with Jen and Danni,\" she said as they ate.\n\n\"I'm looking forward to hearing you sing.\"\n\nShe looked at him thoughtfully. \"Alvin, I'm sorry I said that no one wanted to hear you sing.\"\n\n\"Well, no one does,\" he shrugged.\n\n\"If you were going to sing, what song would you choose? What's your all time favorite song?\"\n\nAlvin stared at the ceiling a minute, then replied, \"Three Little Birds.\"\n\n\"I don't know that.\"\n\n\"Yes, you do, everybody does. You just don't know you do. It's Bob Marley.\" Speaking more than singing, he went on, \"Don't worry 'bout a thing, 'cause every little things gonna be alright.\"\n\n\"Oh, I do know that. I wouldn't have expected that. Interesting.\"\n\nAlvin shrugged. \"Wherever there's boats, there's reggae.\"\n\nMary looked at her phone. \"My Mom emailed me four articles with tips about dating.\"\n\n\"Any of them mention that no underwear thing?\"\n\n\"I didn't read them, Alvin.\" \n\n\"Well, only tip you need is how to keep all the interested men sorted out.\"\n\nMary rolled her eyes. \"That's the kind of thing I was talking about. Dumb but sweet.\"\n\nShe got up and put the dishes in the sink. \"I've got to get moving or I'll be late. I need a shower. I smell like I've been fucking.\"\n\n\"I'm not going to shower, for just that reason.\"\n\n\"There you go again.\"\n\n\"Should I stop?\"\n\n\"Never.\"\n\nAlvin gathered his clothes and dressed while Mary got in the shower. When he was ready to go, he stepped into the bathroom. Mary pulled back the shower curtain far enough to lean out for a kiss.\n\n\"You sure look good wet, darlin',\" Alvin said.\n\n\"But, baby, I'm always wet around you.\"\n\nAlvin laughed. \n\n\"I just wanted to see what talking like you feels like,\" Mary said.\n\n\"You done good, sweetheart.\" He kissed her again and turned to leave.\n\n\"Hey,\" she called after him, \"there is a tupperware with left over paella in the fridge. Take it with you and warm it up for lunch.\"\n\nAlvin thanked her and retrieved the bowl from the refrigerator. He bounded down the stairs and started to walk down the hill towards the wharf. He hefted the bowl in his hand, felt it's weight, it's substance. There was something about it that seemed important. She gave me food to take to work, he thought. That's not a casual thing, that doesn't feel like something \"just a girl you are seeing\" does. That feels like a wife.",
        "The Roadhouse sat at a crossroads two miles west of town. It wasn't the kind of place tourists were interested in, so in the hectic summer months it served as a safe haven for locals who wanted to kick loose with a little elbow room. It was about half full when Alvin opened the door and gestured the three women inside.\n\nJennifer gave a loud whoop as they came in. A couple of middle aged women were on stage belting out a ragged version of Like A Virgin. They found a round table in the middle of the room and ordered beers for all except Danni, who did not drink and was therefore the permanent designated driver.\n\nWhen the Madonna wannabes finished to moderate applause, a slender young man mounted the stage for a passable rendition of Wonderwall. The next singer was obviously drunk, and was roundly booed as he fumbled his way through Suspicious Minds.\n\nA large woman in a sequined pant suit received a chorus of applause and cheers as she mounted the stage.\n\n\"That's Charleen,\" Jennifer told Mary, \"She's a sheriff's deputy. She's really good!\"\n\n\"A good deputy or a good singer?\" Mary asked, but she was unheard as the music began and Charleen wowed the audience with a heartfelt edition of I Go To Pieces.\n\nJennifer and Danielle decided to go put their names on the list of performers. They urged Mary to go with them, but she waved them off. \n\n\"A bit later,\" she said. \n\n\"I hope you don't chicken out,\" Alvin said.\n\nShe patted his thigh. \"Later.\"\n\nThey sat through horrific attempts at Happy and All About That Bass and Let It Go before Jennifer and Danni were called up to the stage.\n\nAlvin and Mary clapped and laughed as the girls sang and giggled their way through a slapdash take on Love Shack. They were not very good, but they were obviously having so much fun that they got a good hand when they finished. Alvin stood and gave them both hugs when they returned to the table.\n\nThe DJ took a break and Alvin went to the bar to fetch another round of drinks.\n\nMary asked Jennifer and Danielle how much more they thought they would get done on the house before they went back to school.\n\n\"We got a lot done today,\" Jennifer replied. \"Danni is going to try to get the furnace installed before we go, and I'm hoping to get most of the interior painting done.\"\n\n\"You know, I've got Monday off,\" Mary said, \"It's Labor Day. I could help,\"\n\nBoth girls smiled and thanked her. Alvin returned just as the DJ announced the next singer and they were treated to another, even worse version of Let It Go.\n\n\"I'll be right back,\" Mary shouted into Alvin's ear above the loud music. She got up and went over to the DJ's table and flipped through the song catalog. The DJ handed her a clipboard and she wrote on it, then returned to the table.\n\nAlvin grinned as she sat back down. She winked and smiled, then leaned in and gave him a kiss. She gripped his hand tightly and sat, nervously, waiting her turn. A would be Tom Jones bungled Delilah and then the DJ announced, \"Next up, Mary Winslow.\"\n\nJennifer and Danni cheered and clapped as Mary made her way to the stage. She stood at the mic and straightened her skirt, cleared her throat and in a voice that sounded very small said, \"This is for Alvin, with all my love.\"\n\nThe crowd quieted as the sound of a piano filled the room and Mary began to sing.\n\nDesperado, why don't you come to your senses\n\nYou been out ridin' fences for so long now\n\nHer voice wavered, then grew stronger.\n\nOh, you're a hard one\n\nI know that you got your reasons\n\nThese things that are pleasin' you\n\nwill hurt you somehow\n\nAlvin swallowed hard. He watched as Mary raised her hands in front of her and let her voice rise.\n\nDon't you draw the Queen of Diamonds, boy\n\nShe'll beat you if she's able\n\nYou know the Queen of Hearts is always your best bet\n\nWell, it seems to me some fine things\n\nHave been laid upon your table,\n\nBut you only want the ones that you can't get\n\nDespite the glare of the stage lights, their eyes found each others as Mary turned her hands up and towards him.\n\nDesperado, oh, you ain't gettin' no younger\n\nYour pain and your hunger, they're drivin' you home\n\nAnd freedom, oh freedom, well that's just some people talkin'\n\nYour prison is walking through this world all alone\n\nAlvin felt Jennifer take his hand and squeeze it. He glanced at his daughter and realized that his eyes were filling with tears. Mary took the mic from its stand and held it close to her face.\n\nDon't your feet get cold in the winter time?\n\nThe sky won't snow and the sun won't shine\n\nIt's hard to tell the night time from the day\n\nYou're losin' all your highs and lows;\n\nAin't it funny how the feeling goes away?\n\nThe room had disappeared for Alvin. All that existed was Mary, her voice and his heart.\n\nDesperado, why don't you come to your senses?\n\nCome down from your fences; open the gate\n\nIt may be rainin', but there's a rainbow above you\n\nMary's voice rose to a near shout.\n\nYou better let somebody love you, \n\nYou better let somebody love you\n\nThen dropped to a whisper.\n\nbefore it's too late\n\nThe crowd applauded as Mary put the microphone back on the stand. She quietly said thank you, and stepped off the stage. Alvin stood as she walked towards the table. He opened his arms and she stepped into them. She could feel him trembling as he squeezed her tightly against himself.\n\n\"Let's go outside and get some air,\" she said quietly. She took his hand and led him out of the Roadhouse. There was a picnic table under the trees on the far side of the parking lot. She guided him there and sat down. He sat beside her, his shoulders drooping, his head down.\n\n\"Mary, I...well, wow, you were wicked good.\" \n\nShe patted him on the thigh. \"Thank you, sweetheart.\"\n\nHe took her hand in both of his. \"I love you, Mary.\"\n\n\"I know you do, Alvin. But I need you to stop being scared of it.\"\n\n\"I just...\"\n\n\"No, listen, you don't need to justify yourself or defend how you feel. I get it. But can I explain something to you?\"\n\n\"Doubt I could stop you if I wanted to.\"\n\n\"That's true. Alvin, have you thought about me, about the risks I am taking here? My mother is freaking out about us. I think she'll be fine once she meets you, but maybe she won't. I am willing to risk losing my family because I love you.\"\n\n\"Well, she...\"\n\n\"Let me finish. I like it here, I'm happy here. But do I want to live here forever? I don't know. I get homesick.\"\n\nAlvin nodded. \"Mary, I have actually given thought to all of that.\"\n\n\"How would I know that? You won't talk to me about it.\"\n\n\"I think people talk too much about their relationships, instead of just getting on with having them.\"\n\n\"There's a difference between too much and not at all, Alvin.\"\n\n\"Yes, that's so.\"\n\n\"Okay, I can't make you talk, but I can make you listen, so let's talk about the elephant in the room. You lost Bonnie and you have been afraid of falling in love again ever since. I really do get that. But Alvin, think about it. It's far more likely that I will attend your funeral than that you will attend mine.\"\n\nAlvin chuckled. \"Well, I guess that's so.\"\n\n\"If a car pulled into this parking lot right now and somebody jumped out and started shooting, I bet you would throw yourself in front of me.\"\n\n\"I like to think I would.\"\n\n\"Well, it seems odd then that you would let me be hurt in order to not take a chance of being hurt yourself.\"\n\n\"I never want you to be hurt, Mary.\"\n\n\"You know,\" she said, \"your dad was wrong.\"\n\n\"How do you mean?\"\n\n\"Well, maybe not wrong, but he only told you half of the truth. When he told you that there was a moment when you would choose to be a man.\"\n\n\"And what's the other half?\"\n\n\"That it's not something you do and that's that. You have to keep choosing, over and over, for the rest of your life. Love or fear, Alvin, you have to choose which one rules you.\"\n\nHe raised his head and looked at her.\n\n\"I'm pretty fucking healthy, Alvin.\"\n\nHe put his arm around her and pulled her close to his side.\n\n\"Well,\" he said, \"I guess I better let somebody love me, before it's too late.\"\n\nMary elbowed him in the ribs. \"Well, alright, then,\" she whispered.\n\nJennifer and Danielle came out of the Roadhouse a few minutes later. \n\n\"We're over here,\" Alvin called.\n\n\"What are you, making out in the dark over there?\" Jennifer laughed.\n\nAlvin stood and held his hand to Mary. She took it and rose beside him. They met Jennifer and Danni at the car and they all piled inside, Danni behind the wheel. Alvin and Mary sat close to each other in the back.\n\n\"Now they are going to be swapping spit in the back seat\" Jennifer said to Danni. She looked over her shoulder at them. \"Are you coming back to the house or going to Mary's?\"\n\nAlvin hesitated, but Mary told her that they'd spend the night at her apartment. She rested her head on Alvin's shoulder and closed her eyes.\n\n\"We need more music,\" Jennifer said, snapping on the radio. She jumped from station to station, stopping when she heard Elton John singing Tiny Dancer.\n\n\"Blue jean baby, L.A. lady,\" she sang along. \"Hey, Mary, a song about you.\"\n\nMary chuckled and burrowed her head against Alvin's shoulder. As they drove down the dark road, she could hear him, in a barely audible voice, singing along.\n\nHold me closer tiny dancer,\n\ncount the headlights on the highway\n\nLay me down in sheets of linen\n\nyou've had a busy day today\n\nShe draped her arm across his chest and squeezed him tight. He kissed the top of her head and looked out at the dark landscape, but all he could see was Mary, his queen of hearts, standing in the spotlight, her arms outstretched towards him. It's not too late, he told himself over and over, it's not too late.\n\nDesperado @1973, by Glen Frey and Don Henley\n\nThree Little Birds @1977, by Bob Marley\n\nTiny Dancer @1972, by Elton John and Bernie Taupin\n\nThis one is for Petey"
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "love",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/mary-and-alvin-ch-09"
}