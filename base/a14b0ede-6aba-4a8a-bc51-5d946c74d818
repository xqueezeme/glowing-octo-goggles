{
    "title": "Three Square Meals Ch. 050",
    "pages": [
        "The girls looked at him attentively and waited for him to continue. You could have heard a pin drop in the room, as they all leaned forward to hear John lay out his plan to take down the Armoured Cobras.\n\n\"We're going to form three teams,\" John said decisively. \"I'll lead Team One, taking Dana and Rachel with me on a ground insertion into the base. We'll rescue the kidnap victims, and sabotage the base's generators. When the generators go down, that'll knock out their planetary defence shield, and any laser batteries. Dana, I'll need you to come up with a good way of taking them out.\"\n\nThe redhead nodded eagerly, her mind already whirring as she thought about different ways to do it. Alyssa was about to protest strongly at not being able to accompany him on the mission, when he silenced her objection with a stern glance.\n\n\"You'll be Team Two. You can sneak us down there in the Raptor, then stay on station in case we need an emergency evac,\" he explained.\n\nAlyssa frowned and said, \"Why can't Jade fly the gunship? Then I can join you on the ground mission.\"\n\nJohn glanced over at the Nymph and said, \"Because I'll need Team Three, which will be Jade and Calara, up here on the Invictus. I want you to stay hidden, but be prepared to engage their defensive fleet if we set off an alarm. If that happens, we'll need those cruisers and destroyers distracted, to make sure we can make a clean escape on the Raptor. If all goes well with the generator sabotage, and getting the prisoners clear, you can hit the defending merc fleet as we're flying out of there on the Raptor. Once their fleet is destroyed, you can start bombarding their base.\"\n\nThe blonde girl pouted, but nodded her acceptance of the plan. She then looked thoughtful and said, \"Actually, it might be better if I fly the Invictus and Jade pilots the Raptor. She'll be able to make much better use of the gunship's manoeuvrability than I can, and provide you more effective close fire support if there's trouble. Besides, I'm the only one with real combat flying experience piloting the Invictus.\"\n\nJade frowned and said angrily, \"But you told me I could fly the Invictus!\"\n\nThey all looked at her, astonished at her outburst, and she giggled mischievously. \"Sorry, I couldn't resist! Of course, I'm happy to fly the Raptor.\" \n\nJohn chuckled and said, \"Just fucking with us?\"\n\nThe Nymph winked at him playfully, then said in a more serious voice, \"I have quite a bit of combat time in the Raptor now, against both the Drakkar, and the Kintark. Alyssa's plan makes good sense.\"\n\nHe looked around at them and said, \"We can't risk direct communication between the teams using normal comms channels, as the base sensors might pick it up. We'll have to coordinate through Alyssa using telepathy, and I'll relay my orders through her.\" He then glanced at the blonde, and asked, \"With you up here, and us on the surface, will you have any problem staying in touch?\"\n\nAlyssa shook her head, and smiled at him confidently as she said, \"Nope. Not, unless we have to jump out of the system, then I'm not sure. Otherwise, we'll be fine.\"\n\nIrillith masked her expression, but she was shocked to hear this. From the audio recordings, she was aware the blonde girl had some kind of telepathic talent, but assuming this wasn't some kind of trick, the range of her ability was astounding.\n\nCalara then looked away from the holographic images, and said to them cautiously, \"From their fleet listing, the three cruisers and the dozen destroyers, all look to be modern and well equipped. They aren't going to be a walkover like the decommissioned ships the pirates used.\"\n\n\"Can you take them?\" John asked her succinctly.\n\nShe pursed her lips as she thought it over and replied, \"If we just stood there slugging it out with them all, it would be very close, and will depend a lot on the skill levels of their crews. We'd likely sustain considerable damage, though.\"\n\nHe nodded, then said, \"We should only be facing two cruisers and a handful destroyers, what are our odds against those?\"\n\nCalara grinned at him, and said confidently, \"With all the upgrades Dana has done to the Invictus, we should be fine.\"\n\nIrillith looked at him with a raised eyebrow and asked, \"And where am I going to be in this little scenario?\"\n\nJohn studied her for a moment and said, \"We all saw what you did to that Maliri patrol cruiser. Can you incapacitate a Terran Cruiser like that too?\"\n\nHer sly grin was all the confirmation he needed, and he nodded with satisfaction. \n\nCalara grinned, and said, \"Even better! It'll be like shooting fish in a barrel.\"\n\nJohn shared her enthusiastic grin, and said, \"Alright then, does anyo-\"\n\n\"Wait a moment,\" Irillith interrupted him sharply before he could continue. \"Have you forgotten our agreement?\"\n\nJohn shook his head and replied, \"No, but this first phase of operations against the Cobras is too risky for you to go big game hunting, and you'll be much more effective against their fleet. When we've cleaned out SerpentHold, we'll mop up the rest of their company that's currently on garrison duty. You can hunt as many of them as you like.\"\n\nThe Maliri woman thought this over for a moment, then nodded her agreement.\n\nJohn smiled, and then looked around at the girls. \"Any suggestions or queries?\"\n\nCalara raised her hand with a wry smile, and he nodded at her to proceed. \"I suggest you infiltrate their base at night while most of them are sleeping. It should make it much easier for you to get around without attracting too much attention.\"\n\nIrillith had been searching through the data she had assembled and said, \"I think this might be what you're looking for.\"\n\nShe hit a button on her vambrace and an email appeared from Colonel Semias Morgan to Captain Hitch Mallor. It read, \"Hitch, spring a surprise on the tank boys and send them out on night manoeuvres. They're getting fat and lazy and could do with some exercise!\"\n\nJohn nodded and said enthusiastically, \"Perfect! If they send out a group on some night mission that's even better. We could infiltrate the base when there's even less personnel around. When was that sent?\"\n\nIrillith checked the timestamp and said, \"Two days ago. Judging by the rota shifts on patrol duty, Captain Mallor plans to send them out tonight. There's another option as well, if you'd like to hear it?\"\n\nHe smiled at her eagerness and said, \"Sure, go ahead. What is it?\"\n\nShe grinned and said, \"They're expecting fuel supplies today. We could ambush the incoming fuel convoy, rig it with explosives, and then detonate it while they're refuelling at the base. All that would be left of SerpentHold would be a big smoking crater.\"\n\nRachel frowned and said, \"Sounds pretty risky, and wouldn't give us much time to rescue the prisoners.\"\n\nIrillith grumbled and said, \"Yeah, but it would save wasting the rest of the day waiting!\"\n\nJohn mulled it over for a while and then said, \"We'll go with the night patrol option. We can pick off their tanks at our leisure once we've extracted the kidnap victims. Besides, what about the fuel convoy crews? We can't just take them out, they're innocent civilians.\"\n\nThe Maliri woman shrugged nonchalantly, and said, \"Well, that's what I'd do.\"\n\nJohn restrained himself from rolling his eyes, and looked around at the girls. \"If there's no more questions, let's head out. We can sneak into Beta Draconis and do some surveillance while we wait. How long will it take us to get there, Alyssa?\"\n\n\"Four hours,\" she said immediately, having already mentally plotted out a course. \n\n\"Alright, let's do this,\" John said resolutely.\n\nThey all rose from the Briefing Room table and headed to the grav-tube to keep themselves occupied for the rest of the day. Alyssa glided up the illuminated steps to the Command Podium, and sat in her seat at the Executive Officers Station. \n\nShe smiled at John as he walked up the steps to join her, and soon it was just the two of them left up on the Command Deck. Her hands flashed over the console, and she said quietly, \"Two hundred against seven. That sounds like steep odds, even for us!\"\n\nHe smiled as he looked down at her and said, \"All being well, we won't actually have to fight more than a handful in the base. Besides, we must have killed way more than that fighting the Fulmanax.\"\n\nShe laughed wryly and said, \"Yeah, but they weren't driving tanks, or flying spaceships.\"\n\nJohn chuckled and said jokingly, \"You worry too much. Besides, we haven't killed anything for a couple of weeks. I'm getting withdrawal symptoms!\"\n\nAlyssa laughed as she finished entering the flight path, and engaged the Tachyon Drive. As the Invictus was swathed in the soft blue glow of the Tachyon particles, and leapt into hyper-warp, she glanced up at John curiously. Something about his tone sounded a little off, and although he'd been joking, he almost sounded eager to get into battle. \n\nJust as the blonde girl was about to ask him about it, he smiled at her and said, \"If you haven't got anything interesting planned this afternoon, how about helping me run through some combat drills with Dana and Rachel? I'd like to have them working as smoothly with me as you do.\"\n\nShe grinned, and nodded eagerly, her questions immediately forgotten.\n\n***\n\nAfter several hours of intensive combat tactics training and drills with the girls, John left them to finish off their preparations for the mission, while he headed up to his Ready Room. He strolled into the room, and over to the heavy desk on the far side, then sank into the big comfortable leather chair behind it. Pressing a couple of buttons on the console built into the desk, the holographic comms interface appeared, floating in front of him.\n\nHe swiped his hand over the name of the man he wanted to speak to, then waited patiently for the call to connect over the secure channel. John had deliberately waited before making contact, just in case the man he was about to brief about this upcoming mission, wasn't as friendly as he outwardly appeared. If he wasn't an ally, it was now too late for him to intervene with unfriendly forces, and put their plans in jeopardy. John felt a pang of sadness that he had to handle one of his oldest friends and comrades in such a manner, but until they could make certain of the man's allegiance, it was the only course open to him.\n\n\"John! It's good to see you,\" Vice Admiral Charles Harris said, his bushy grey moustache twitching into a smile that lit up his normally stern face.\n\nJohn smiled, and said, \"Likewise Charles, I hope you're well?\"\n\nThe older man chuckled and said, \"I'm sure you aren't calling to ask after my health, but I'll play along. I'm fine, thanks for asking.\" He then looked thoughtful and asked, \"How did you get on with the Maliri? Any luck trading weapons with them?\"\n\nJohn shook his head as he replied, \"Afraid not. Looks like you were right all along.\"\n\n\"Sorry to hear that. Most uncooperative race I've ever dealt with, so it doesn't surprise me,\" Charles said sympathetically. He then looked at John appraisingly and asked, \"Now, how can I help?\"\n\nJohn paused a moment, as he leant forward to tap away at his console. When he was done, he sat back and said, \"I've just sent you some light reading, thought you might be interested.\"\n\nCharles narrowed his eyes, and looked at John curiously as he said, \"What are you up to now, you rogue? I thought you were living the enviable life of a millionaire playboy?\"\n\nJohn laughed, and was about to reply, when a chime on Charles' console alerted him that the transfer was complete. The older man opened the files, then frowned as he stared at the dossiers and accounts that had unfolded before him. \"What am I looking at?\" he asked, bemused.\n\n\"Have you heard of the Armoured Cobras?\" John asked him soberly.\n\nCharles looked at him with a puzzled expression, and said, \"Of course, biggest Mercenary group in the Terran Federation. From all these files, it looks like you're investigating them. Why?\"\n\nJohn's face took on a grim cast as he said, \"Because they funded their group by kidnapping wealthy civilians, and ransoming them for huge amounts. I was looking into a murder, and the trail led me straight to them. Before they formed this Merc Company, the media referred to their gang as the New Eden Snakes.\"\n\nCharles looked shocked and said, \"I remember that! It was all over the news ten years ago.\" He then added in a worried voice, \"You must have made some kind of mistake! They're a sanctioned Mercenary unit, they've even done a few contracts for the military.\"\n\nJohn shrugged and said, \"It's all there in the files I sent. They haven't stopped the kidnappings. Take a look at their accounts, the money trails tie it all back to them. If that isn't enough, the Police Captain on Avalon confessed to tipping them off about targets, in front of a few dozen witnesses, all of them police officers.\"\n\nCharles blinked a couple of times as he took in this startling news, then frowned as he asked perceptively, \"And what are you up to now? Please don't tell me you're about to attack them.\"\n\nJohn grinned at him, and said wryly, \"I like to keep myself busy in my retirement.\" \n\n***\n\nThey arrived in the Beta-Draconis system shortly afterwards, and Alyssa immediately powered down all their non-essential systems and brought them in closer to the fourth planet. With the minimal use of engine power and retro thrusters, she was able to sneak them into orbit on the far side of the planet, with the Armoured Cobras defence fleet none the wiser.\n\nCalara brought up the tactical map, and the opposing fleet was laid out before them, clearly displayed with the wealth of information provided to them by the Invictus' sophisticated sensor array. The Cobras weren't bothering with mounting patrols of the system, as they considered themselves entirely safe as a legitimate Mercenary Company, fully sanctioned by the Terran Federation. The small defensive fleet had their ship hulls painted tan and brown, and the holographic representations on the map reflected the colouring.\n\nCalara looked through the formations of ships and said, \"They've got two cruisers stationed here, as we suspected. That's odd though...\"\n\n\"What's up?\" John asked her curiously.\n\nThe Latina pointed up at the tactical map and said, \"They've got all twelve of their destroyers with this fleet.\" She then glanced at Irillith and asked, \"I thought they usually split their destroyers and sent half off as escorts for the other cruiser and the carrier?\"\n\nIrillith frowned and said, \"That's what they've done for the last seven garrison missions.\"\n\nJohn thought this over for a moment, and asked, \"Could they have expanded their fleet?\"\n\nThe Maliri woman looked doubtful and tapped some commands into her armoured vambrace. She scrutinised the Armoured Cobras accounts again, and eventually said, \"I don't see any new purchases on their books, and the latest entries date from today.\"\n\nHe looked over at Calara and asked, \"Are the extra destroyers going to make a big difference?\"\n\nShe shook her head, and said, \"If Irillith is able to disable one of the cruisers, it should be no problem.\"\n\nJohn nodded, and asked Dana, \"Can you bring up a map of the base?\"\n\nThe redhead hesitated a moment and replied, \"Yes, but only what we've picked up with the passive sensors. We'll be able to see the general structures, but nothing in any detail without an active scan.\"\n\nHe smiled at her and said, \"That's fine. We just need to confirm that the maintenance schematic Irillith has is current, and that they haven't built anything new.\"\n\nDana smiled up at him, and then tapped in a series of commands on her console, bringing up the planetary map. The section highlighted was in a rolling area, with rugged hills to the north, and flat plains to the south. The base itself was positioned on a raised plateau that was obviously artificial in construction, and the entire base was surrounded by ten-foot-high sturdy looking walls. There was one large structure in the centre, with a dozen smaller looking buildings dotted around the inside of the compound.\n\n\"That looks roughly the same to me,\" John said, rubbing his chin thoughtfully. \"Irillith, can you bring up your maintenance schematics for us to compare please.\"\n\nIrillith unclipped the holo-projector from her belt and placed it on the console in front of her. The light green architectural plans of the base floated above them, showing the various buildings with the names tagged next to them. The largest was their command centre, with a main generator, maintenance garage, and barracks the next largest buildings. Surrounding them were fuel stores, the armoury, a backup generator, orbital shield projector, and several storage units. \n\nJade's sharp eyes spotted a discrepancy, and she pointed to over a dozen shapes rising skyward on Dana's passive map, which didn't appear on the original maintenance schematic. \"They all look new, what are those metal spires?\" she asked inquisitively.\n\nCalara squinted at the holographic map, and eventually nodded saying, \"Well spotted. Fixed emplacement Beam lasers. The bottom third of the barrel must be underground, but the other twenty metres are visible. They'll be able to hit ships in orbit, so we'll have to draw the defence fleet away from the base when we engage them.\"\n\nJohn pointed to the original schematic and said to Jade, \"It looks like they've got Gatling laser nests placed evenly around the walls, and on the roof of the Command Centre. We'll probably have to knock out the power to shut those down, before you can come and get us. With the amount they have, they'll cut the Raptor to pieces otherwise.\"\n\nThe Nymph tilted her head, looking up at the map, and nodded agreeably.\n\nThey spent a couple of hours watching activity on the base, studying the general movement of vehicles in the surrounding area. A couple of APC's left to perform looping patrols around the plateau a couple of times, but other than that there wasn't a great deal of activity. The highlight of their surveillance was the arrival of two civilian fuel haulage ships, that landed in the open drop zone in the northern part of the base. They waited patiently on site for thirty minutes, as their cargo was pumped into the base's fuel reservoir. \n\nIrillith looked up at John and made an exploding gesture with her hands, then shook her head as though disappointed. He couldn't help laughing at that, and she grinned at him wickedly.\n\nNight started to draw in on this part of the planet, and as the shadows started to lengthen, lights began to flicker on around the base. There were some floodlit areas, and the main buildings were all well lit, but there were plenty of places shrouded in darkness for them to creep around in.\n\n\"I think we're going to miss the black armour for this mission,\" John said ruefully.\n\nDana smiled at him and said, \"Don't worry, I gave our armour a quick lick of paint. It will chip and come off pretty quickly, but it should last long enough to help keep us concealed for tonight.\"\n\nCalara looked worried and said, \"What if they have mag-view or thermal imaging on those gun turrets? You'll stick out like a sore thumb!\"\n\nDana said enthusiastically, \"I'm working on counters for those in the new body armour, but that isn't ready yet. I've fitted the Raptor with something that will help get us in there, but its effects will only last fifteen minutes at maximum, so we'll have to move fast.\"\n\nJohn smiled at her, and said, \"Come on, don't leave us in suspense! What have you got planned?\"\n\nThe redhead toyed with some thought for a moment before she shrugged and replied, \"I was thinking of leaving it as a surprise, but it won't be very impressive. I've rigged up a limited EMP device, which will send out a low powered EMP shockwave. I doubt anti-personnel turrets will be EMP shielded, and any bigger buildings that are, won't be disturbed. Anyone manning the towers will probably assume they've had some kind of power outage, rather than their electronic targeting systems are being scrambled.\"",
        "\"Very nice,\" John said approvingly. He then glanced at the ship's chronometer and added, \"They'll be sending out the night patrol in two hours, So if we leave then, we should arrive when they're well clear of the base. Let's have some dinner, then we can gear up and get ready.\"\n\nThe girls nodded eagerly, and even Irillith was too keyed up for the coming fight to bother with game playing. Dana and Calara offered to stay on the bridge to keep watch, while the rest of the crew headed down to the Officers' Lounge to prepare dinner. Irillith returned to her quarters, and briefly mused over the idea of looking for the tech repository, but realised she wouldn't have enough time.\n\nShe had grown weary of preparing her own meals over the last several days, and was looking forward to someone else doing the hard work for a change. Besides, she quite enjoyed John's company this afternoon, as he didn't seem quite so uptight as normal. She hooked up her armoured vambrace to the hacking portal, and sent off a fresh AI sprite off to gather another set of video footage to review.\n\nJohn cooked pulled pork for them that evening, with roasted potatoes and mixed vegetables. He had also prepared them a light and sweet tasting apple sauce to go with the pork, and when he brought out the gently roasted meat, there were appreciative murmurs at the enticing aroma. Irillith strode into the room a minute later, and sat in her chosen seat opposite John, over at the other end of the table. She glanced at him flirtatiously to make sure he was watching her when she made her entrance, but couldn't be bothered to cause trouble, and they all tucked into dinner ravenously.\n\nGlancing at his watch after they had eaten, John looked up at them and said, \"It's getting close to that time. We better get ready.\"\n\nRachel and Dana rose with him, and Jade got up as well a moment later. \"I'll go prep the Raptor,\" she said eagerly, as she followed them out of the room.\n\nAlyssa glanced at Calara and Irillith, then smiled as she said, \"Well ladies, time to make our way to the Bridge.\"\n\nThe Latina and the Maliri woman nodded, then followed the blonde girl out of the lounge as they made their way up to the Command Deck.\n\n\"I'll join you in a minute, I need my hacking deck,\" Irillith said, and descended in the red glow of the grav-tube, while Alyssa and Calara stepped into the soft blue glow on the other side instead. \n\nThey waved her goodbye as she disappeared from sight, and after ascending in that soothing blue glow, they stepped out onto the Command Deck and walked over to take their places. Irillith rejoined them a couple of minutes later, just as John strolled out of the Briefing Room in his blackened body armour.\n\nCalara gave him a playful frown and said, \"I prefer you as my white knight.\"\n\nJohn laughed and said, \"I'll have to rescue my dusky damsel in distress when I get back.\"\n\nThe Latina bit her lower lip coyly, and nodded at him eagerly. He looked up at Alyssa's beautiful face, and saw the worry creasing her brow. He smiled at her and said, \"Don't worry, we'll be back in no time.\"\n\nAlyssa frowned as she replied, \"This is the first time I've let you go off on a mission without me. I want you to be careful, okay?\"\n\nHe winked at her and said, \"Hopefully you won't get injured after this one! I've had enough of seeing you knocked out!\"\n\n\"It's not me I'm worried about,\" the blonde girl said, but smiled at him regardless.\n\n*Seriously, be careful,* she told him cautiously. *Something doesn't feel right, but I can't put my finger on it.*\n\nJohn smiled at her confidently and said, *We've got this, don't worry!*\n\nHe led Rachel and Dana over to the grav-tube, and they were about to step inside when Alyssa darted down the steps and gave him a tight hug. At least it would have been tight if he wasn't wearing double plated body armour. Pulling off his helmet, he leaned down and gave her a kiss, then rubbed noses with her. \n\n\"Keep in touch,\" he said softly. \"You'll be the one coordinating all of us.\"\n\nAlyssa looked up at him, and nodded earnestly, her bright cerulean eyes staring up at him intently. He suddenly remembered just how young she was, and how much responsibility he'd piled on her youthful shoulders. At eighteen years old, she was commanding a lethal, five-hundred-metre long warship, with enough firepower to level a small planetoid. Not only that, but he was relying on her to keep their team linked together via her extraordinary telepathic gifts.\n\n*You're sweet to worry, but I'll be fine,* she told him bravely.\n\nHe looked at her soberly, his bravado gone for the moment, and said, \"You stay safe up here.\"\n\nNodding, she waved him farewell, then sighed as she watched him depart. He descended in the grav-tube, his face cast in a foreboding red glow as he dropped down out of sight. When she turned and walked back up the illuminated steps to the Command Podium, she saw Calara and Irillith watching her intently. The Latina looked worried and sympathetic, and if Alyssa hadn't known better, she would have said the blue-skinned Maliri woman almost looked jealous.\n\n\"Let's get ready then,\" she told them resolutely. \"We'll have to be ready to strike if they get in any trouble.\"\n\nCalara nodded, and turned back to the holographic tactical map, studying the images intently. Irillith turned to face the brunette and asked, \"You're the Tactical Officer aren't you?\"\n\nSurprised, Calara spun her chair to look at Irillith and replied, \"Yes, that's right. Why do you ask?\"\n\nThe blue-skinned woman hesitated for a moment, then asked quizzically, \"Can you provide me some more detail on those cruisers? The more I know about them the better.\"\n\nThe brunette smiled and nodded, saying, \"I can provide you generic design schematics for a Terran cruiser. They might have done some customisation work, so I can't provide you accurate detail without an active scan.\"\n\nIrillith nodded curtly and said, \"That will suffice.\" She then looked down at her vambrace, activated the holographic panel, and focused on it intently as she began to tap commands into the interface. Compared to her normally abrasive tone and mannerisms, the Maliri woman had almost been polite.\n\nCalara exchanged a wry smile with Alyssa, who raised an eyebrow, but didn't comment.\n\n***\n\nJade brought the Raptor down to the planet in a long, arcing descent, slowing their approach by carefully feathering the retro-thrusters. She managed to keep their energy signature to a bare minimum, so unless the Cobras had access to an incredibly sophisticated sensor array, she was confident they would remain undetectable.\n\nThe Nymph had powered off all extraneous systems, but she kept the sensors running on minimal power, to avoid any potential navigation mishaps. As they glided silently towards the base, she could see the outline of the perimeter walls, and the buildings within, highlighted in a green wireframe image. A column of heavy tanks had left the compound and were snaking their way off to the south, over the flat plains in that direction.\n\n\"There go the tanks,\" she called out to the passengers seated behind her, and they craned their necks to see.\n\nJohn stood, and walked over to her, placing his hand on her shoulder as he asked, \"What's our ETA?\"\n\nJade glanced at the HUD, checking the gunship's velocity, and said, \"Just under two minutes. You should get into position.\"\n\nDana stood up eagerly, and said, \"Try and bring us over the north end of the compound. I'll drop the EMP device near the wall, then you can bring us down when that section goes dark.\"\n\nJade gave her a smile and a thumbs up sign, and the redhead walked out of the cockpit, with Rachel following close behind. John leaned down and planted an affectionate kiss on Jade's head and said, \"Take care, my lovely little Nymph. Remember, I have big plans for you, so no getting hurt!\"\n\nShe looked up and grinned at him happily, then waved goodbye before he turned and walked out of the cockpit to catch up with the others.\n\n*We're nearly in position,* he thought to Alyssa as he dropped down in the grav-tube. *Everything going alright up there?*\n\n*We're fine, just keeping an eye on things,* the psychic blonde replied to him confidently. *They did send out the destroyers in a couple of groups a few minutes ago, but it seems to just be a random patrol.* \n\nJohn looked thoughtful and said, *It might be worth hitting the destroyers while they're away from the planet. If the cruisers join the battle, you'll have drawn them away from the beam lasers at the base.*\n\nAlyssa paused for a moment, before coming back to him and saying, *Calara's been thinking the same thing; that we should hit them while their forces are divided. We'll get ready to strike as soon as you've escaped with the prisoners.*\n\nHe walked into the rear of the ship, and found Dana kneeling on the floor next to a device no larger than his armoured fist, which was attached to a small platform. He could see what looked like a couple of anti-grav cyclics, but they were the Maliri version, which Dana had appropriated while on Geniya Space Station. The redhead pressed a button on the back of the platform, and it lifted off the ground, floating silently in the air.\n\n\"Your EMP device?\" John asked her curiously.\n\nDana nodded animatedly and replied, \"Yep! It's all ready to go. As soon as Jade gives the word I'll pilot it in via remote.\"\n\nJohn looked thoughtful for a moment, then glanced at Rachel and said, \"As Alyssa isn't here, and you can't communicate back to her via telepathy, we'll have to rely on old fashioned comms. Are you comfortable using the communications suite in the phalanx armour?\"\n\nDana laughed and said, \"She's been in the Engineering Bay watching me work on the new armour the entire time. I think she must have got sick of hearing me talk about it by now!\"\n\nRachel smiled at her fondly and said, \"I love hearing you chatter away. Even if I can't understand half of it!\"\n\nJohn smiled at the pair of them, and lifted the helmet he was carrying under his arm, placing it back on his head. He then unslung the Punisher railgun he had over his left shoulder, and glanced up at his sword over his right shoulder to make sure it was still safely in position.\n\nAlyssa's warm voice suddenly echoed through his mind. *Jade says she's hovering in position, two hundred metres directly above the northern wall,* she thought to him informatively.\n\n*Thanks, beautiful,* he replied, then glanced at Dana.\n\nThe girls had obviously received the same message, because Rachel walked over to the panel that operated the rear loading ramp, while Dana produced a handheld remote. The remote looked a lot like the one she had used to demo the maintenance robot, and she carefully steered the EMP device over to the loading ramp. \n\nThere was a sudden whistle of air as the loading ramp began to swing open, the terraforming of the planet bringing strong winds as well as a breathable atmosphere. The EMP drone wavered slightly as it was buffeted by the wind, but under Dana's skilful piloting, it struggled on towards the now yawning rear of the gunship. \n\nJohn could see the look of intense concentration on Dana's face as she fought valiantly to keep the drone upright and stable in the high winds. Through the clear crystal faceplate of her armoured helmet, he could see her sky blue eyes watching the view from a camera fixed to the drone. They stood and waited for a tense couple of minutes, and John walked over to the loading ramp to peer out below. He could see the walls and buildings bathed in light, and he began to picture names against each of the buildings, as they corresponded to the maintenance schematics.\n\nSuddenly a small section of the wall directly below them flickered then seemed to short out, plunging that length of wall into pitch darkness. He turned and smiled at Dana, who grinned back at him. He felt a slight sinking feeling, and he faintly heard the retrothrusters dropping in pitch as Jade throttled back the power slightly, while drifting slightly to put them just outside the base. They descended silently at a measured pace, and the base below loomed larger then disappeared out of sight, as the Nymph brought them down in a basin to the north of the plateau. Rachel and Dana walked up to flank him, and they hopped off the rear landing ramp, twenty seconds after the EMP device had made its disruptive presence felt.\n\nThe moment they were clear, Jade was up and flying away, rising up and disappearing into the night's sky. John watched her leave for a second, before jogging stealthily towards the darkened section of wall in the mercenaries compound. The northern gate was normally magnetically sealed, but with the power knocked out, he was able to push the heavy titanium doors apart. The servos were well oiled, so they made a minimal amount of noise when he opened them, allowing the girls to slip inside. He pulled the huge doors closed after they were through, and they ran silently to the nearest building, then crouched in the pitch black by the Ferrocrete wall.\n\n\"This should be one of the storage buildings,\" he said into the audio pickups of his helmet, as he glanced at the base layout in his HUD. \n\nHe knew full well that his two companions would be able to hear him clearly, while the sealed helmet would prevent the sound of his voice from carrying. When he reached the reinforced Ferrocrete wall of the sturdy building, he turned to glance behind him to make sure that Rachel and Dana were still with him. The redhead and the brunette were right behind him, and they smiled bravely, their eyes flashing with excitement.\n\n\"We'll loop around behind the next two storage units, then the bigger building in the north-west corner of the base should be the Main Generator. Watch out for any patrols inside the compound, or anyone out for a stroll. If we stumble across someone, don't wait for my permission, just take them out,\" he said quickly and quietly.\n\nThe girls nodded soberly, and Dana nodded, raising her railgun, and said, \"Make sure you're on low power mode!\" \n\nJohn and Rachel checked, and sure enough, the toggled switch had an indicator light with a muted green glow. John headed west, sticking close to the rear walls of the storage units, moving quickly through the darkness created by the EMP device. They passed a guard tower built into the wall, half way down the northern edge of the base, and John grinned as he heard the sound of confused voices drifting down from the gun nest at the top.\n\nThey reached the edge of the last of the storage units, and glanced across the twenty metre gap to the Main Generator. It was housed in a reinforced Ferrocrete building in the north-west corner of the base, with thick power cabling feeding out from the building to a junction box outside. From there the cables went underground, snaking out to provide power to the rest of the base. The clean, new-looking tarmac path led up to the door of the generator room. Along each side, the path was lit by illuminated strips, that clearly delineated the boundaries for anyone out on a late night errand to the building. Away from the path the comforting shroud of darkness reigned, offering them sanctuary in the murky gloom.\n\nJohn glanced behind him to check the girls were still with him, and said, \"We'll dash straight across this open section one at a time, but stay clear of the path. The other two cover the runner. When we reach the corner of the building, we can check for patrols, and then slip inside when it's clear.\"\n\nHis plan was met with eager nods, and he sprinted out across the gap between buildings, then hugged the northern wall of the Main Generator building. Rachel and Dana dashed across after him, then slid around to crouch in the shadows behind him. Rachel was covering the rear, while Dana was keeping a wary eye on the walls to their front, and he was impressed how seamlessly they had executed the drills he had taught them. He poked his head out to have a quick look around, but could see no one in the vicinity, and no alarm seemed to have been raised from their run across the open.\n\nHe slipped around the edge of the building, then moved swiftly and furtively up to the heavy titanium door. He was relieved to find it wasn't locked and was well oiled, so it swung open easily and silently. Heading inside, the layout of the building was simple, with the huge generator in the middle of the room, and a glass panelled wall surrounding it. In the southern corner was a control room, and a man in combat fatigues was sitting on a chair, with his feet up on the desk. He was drinking a cup of coffee, as he watched football on a viewscreen above the console.\n\nJohn brought his rifle to bear, and trained it on the man, walking forward silently. The merc caught the movement out of the corner of his eye, and turned saying, \"Hey, Bob! You're earl...\"\n\nThe Predator railgun answered his friendly greeting with a soft murmur. \"Prrrkow,\" the railgun whispered, and three rounds blasted big holes though the man's chest, sending him sprawling backwards, and spraying the rear wall with blood.\n\nJohn continued walking towards the dead merc, and said, \"Rachel, do a circuit to the north, I'll check to the south. Dana, start rigging the explosives.\"\n\nThe brunette and redhead followed his orders immediately, with Rachel heading around the corridor in the opposite direction to him, and Dana opening a glass door into the inner generator room. Dana pulled the pack of explosives from her back, and glanced around the corner of the generator, just to make sure no one was inside the central room. She could see Rachel walking swiftly down the corridor to her right, the girl's railgun readied at her shoulder, as she looked for any more mercenaries. \n\nThe rest of the room was clear, so Dana moved behind the generator and placed the explosives on the ground. She activated the remote trigger that was linked to the detonator switch she carried on her belt, and with one last check to make sure everything was in place, she jogged around the generator to rejoin her friends.\n\n\"All set?\" John asked her, as she ran over to join them.\n\nDana nodded eagerly, and replied, \"Yep! It'll make one hell of an explosion when it goes off!\"\n\nHe nodded at her appreciatively, then said, \"Let's hit the Backup Generator next. Same as before, we'll move around the outskirts of the base, using the buildings as cover. The other generator is in the South East of the base, so we've got a little stroll ahead of us.\"\n\n\"A midnight walk! How enchanting,\" Rachel said with a smile.\n\nHe chuckled, then tentatively opened the door that led outside. There was no one around outside, so he waved the girls past him, and they snuck out and turned right, sneaking away silently. He was about to follow them out, but after glancing backwards at the new crimson decor of the control room, he knew the moment anyone stepped inside, the alarm would be raised. Looking up at the sturdy doorframe, he walked outside, then closed the doors securely. He reached up and sunk his fingers into the Ferrocrete in a cascade of dust and stone chips, then tugged down slightly, warping the doorframe and jamming the doors shut. He smiled with satisfaction, then jogged to catch up with the girls.\n\n***\n\nJade had cleared the Landing Zone easily, drifting out and away from the mercenary base using the lightest of touches on the retro-thrusters. From their earlier estimations, John, Dana and Rachel would be at least thirty minutes, all going well, so she pivoted the Raptor and headed south. It didn't take long for the nimble gunship to catch up to the armoured column she had seen leaving earlier, and the heavy tanks were clearly illuminated in the wireframe view of the passive sensors. \n\nShe followed them, trailing a couple of kilometres behind as she watched the armoured vehicles fan out and move in-formation across the flat plain. They seemed to be mounting an assault against a group of hills in the distance, and she was curious to see what they had planned. The central four tanks came to a sudden halt, and she was surprised when there were several flashes from their main guns, as they began a barrage of the distant target. Bright explosions lit up the range as the shells exploded, sending geysers of dirt and rock high into the air. ",
        "While the central squad of tanks began shelling the distant hills, the other tanks peeled off, three to each side. They moved effortlessly over the rugged ground, their anti-grav cyclics keeping the fifty ton vehicles gliding smoothly along as they flanked their target. Jade watched them depart, and then banked her gunship, bringing the Raptor around to follow the western group.\n\n***\n\nAlyssa watched the holographic Tactical Map, keeping an eye on the tan coloured destroyer groups as they did a broad sweep of the system. She was keeping a close telepathic eye on her friends down on the surface, and all seemed to be going according to plan so far. When she glanced over at Calara, the brunette looked up from her console and smiled at her warmly.\n\n\"Have you come up with an attack plan?\" Alyssa asked the Latina.\n\nCalara nodded, and said decisively, \"We should hit that central group first, then sweep out to attack the far group of destroyers. Even if the two cruisers move to intercept, they won't be able to reach us in time to save the second group, and it'll pull them far out of range of the planet's defence lasers.\"\n\nAlyssa glanced up at the map, and plotted out the course in her mind. She grinned, and said to Calara, \"Great plan! I'm glad you're on my side.\"\n\nThe Latina smiled back at her and said flirtatiously, \"I prefer being underneath you, but I appreciate the sentiment.\" \n\nAlyssa giggled, throwing a loving look her way, and when Irillith snorted with disgust, the blonde girl smirked with amusement. \"Never known the love of a good woman?\" she asked the Maliri mischievously. \"You've been missing out.\"\n\nIrillith was about to snap back an angry retort, but a shadow crossed over her face, and she looked away, her eyes suddenly sorrowful. \n\nAlyssa immediately regretted taunting the blue-skinned woman, and said, \"I'm sorry, I didn't mean to upset you. I was just being playful.\"\n\n\"Forget it,\" Irillith said frostily, and turned back to the console, focusing on it intently.\n\nCalara met Alyssa's puzzled glance, and thought to her, *I wonder what that was about?*\n\nAlyssa shrugged imperceptibly and said, *We'd better leave her be, we don't want to upset her right before the battle.\"\n\nThe Latina nodded, then blew her a quick kiss, before turning back to the tactical map to watch the progress of the destroyer groups.\n\n***\n\nJohn walked at a brisk pace close to the back wall of the armoury, with the reinforced Ferrocrete brushing his left shoulder. He could hear the light footsteps of Dana and Rachel's armoured boots on the ground behind him, and they seemed to be having no problem keeping up with the pace he was setting. They reached the end of the wall, and he glanced around the corner, seeing a broad, squat building up ahead. The Barracks was in the south west corner of the base, and provided the sleeping quarters for up to two hundred mercenaries in the company. With half the Cobras off on the garrison mission, and the crews manning the fleet in the Beta-Draconis system, that only left around eighty men on the base. Thirty of them had headed south on the tank manoeuvres a short while earlier, so there were probably only a few dozen asleep in the barracks at the moment.\n\nHe was about to lead the girls across the gloomy gap between the Armoury and the Barracks, when a sudden thought came to him. He paused, and a sly smile formed on his face. \n\nTurning to the eager young women behind him, he said, \"You two head on to the Backup Generator. Just follow the back wall around the Barracks, go past the Shield Generator building with the big dish on the roof, and it's the next one along. Set the charges, and I'll be with you shortly.\"\n\nDana looked confused, and asked warily, \"Where are you going? Splitting up wasn't part of the plan.\"\n\nJohn nodded at the heavily reinforced Barracks and said, \"I won't be long. I'm going to make it harder for the sleeping troops to join the fight if the alarm gets raised.\"\n\nThe redhead nodded enthusiastically, remembering how he'd wedged the door shut to the Main Generator and said, \"Sounds like a good idea! We'll see you soon.\"\n\nShe walked up beside him, peered out around the corner of the Armoury to check for guards, and then sprinted across the twenty metre gap, being careful not to stray anywhere near the illuminated path. Rachel darted out after her, a few paces behind, and John watched the armoured girls disappear out of sight around the robust Ferrocrete wall of the Barracks. Checking to make sure that the way was clear, he ran across the gap towards the Barracks, and up to the double thickness Titanium door. He opened it quietly, and then stalked inside, closing and locking it behind him. His face lit up in a feral grin as he shouldered his rifle, and reached for his long, razor-sharp sword.\n\n***\n\nAlyssa sat up in alarm, as John's thoughts abruptly went dark. They hadn't been in any trouble, and there was no chance of him having been knocked out, so why would he be blocking her out of his head at a time like this?\n\n*What's happening down there?* she thought to Dana with concern.\n\nHer oldest friend replied immediately, surprised at the worry in Alyssa's voice. *What do you mean? Everything's fine at the moment, it's going like clockwork. We set the explosives in the Main Generator, and we're just heading to the backup Generator to rig that to blow too. John's just going to wedge the Barracks door shut to make it harder for them to respond to an alarm.*\n\nAlyssa sat back in her chair, a sense of foreboding building within her.\n\n\"Fuck!\" Calara gasped, snapping Alyssa's attention to the Latina. The even tempered brunette never swore, so it was even more shocking to hear.\n\n\"What is it?!\" Alyssa asked her worriedly.\n\nCalara was gazing up at the local Sector Map, and their long range sensors had picked up an incoming fleet. She pointed at them and said, \"It's the rest of the Cobras! There's TWO carriers incoming, escorted by a cruiser, and half a dozen destroyers!\"\n\n\"That can't be right!\" Irillith said, looking shocked. \"There's no way they bought all those ships, and hired on new men, without it going through the accounts. Their accountant is fastidious!\"\n\nAlyssa was sitting on the edge of her seat and she exclaimed, \"Forget the accounts then, there must be some clues somewhere else!\"\n\nIrillith lifted her vambrace and hurriedly tapped at the buttons on her arm. A purple mist appeared above her forearm, and the violet digital blocks began to form together into the tiny, four inch AI sprite.\n\n\"Are you my creator?\" it asked her in wonder, its wide eyes blinking as it stared at her in awe.\n\nIrillith was distracted by the incoming fleet of enemy ships, and she snapped, \"Yeah, I need your help.\"\n\nThe diminutive digital creature frowned and said, \"You don't seem like a very nice person.\"\n\nIrillith's face contorted with rage, and she snarled back, \"I didn't summon you to give me a personality appraisal. Shut the fuck up and get to work you annoying little shit!\"\n\nThe AIs face darkened and it somehow managed to look menacing, even though it was only four-inches-high. \"Filthy organic. Let's see how you like a few hours without oxygen,\" it growled at her, and darted towards the data jacks.\n\nThe Maliri moved faster and stabbed her finger down on the de-res button, and with a strangled, agonised cry, the tiny purple sprite began to disassemble. \"Not so smart-mouthed now, are you?\" she noted with a wry grin.\n\nThe digital creature vanished a few seconds later, and its tortured death wail echoed around the Bridge. When she was sure it had been destroyed, Irillith looked up at Calara and Alyssa, who stared at her with shocked expressions on their faces.\n\n\"We'll have to wait ten minutes while the memory archives are scrubbed. I'll be able to create another one then,\" she said, shrugging apologetically.\n\nAlyssa blinked at her for a moment, and said resolutely, \"Alright, forget who they are and why they're here, we've got to assume they're hostile, and know we're attacking them.\"\n\nCalara looked up at her and asked, \"Abort the mission?\"\n\nAlyssa nodded, then paused for a moment looking worried. The image of John in her mind had still gone dark and she wasn't able to reach him. \n\n*Dana!* she thought to the redhead urgently. *We've got the rest of the Cobras inbound. Is John back with you yet?*\n\nBack on the surface of SerpentHold, Dana and Rachel had just run over to the big building housing the Shield Generator, the huge forty metre dish that projected the shield towering over them. Reaching out to take hold of Rachel's arm, she said, \"Wait a moment. We might have to abort, I'll look for John.\" She glanced behind her, but could see no sign of movement near the Barracks.\n\n*I can't see him,* she replied to Alyssa. *What should we do?*\n\nAlyssa glanced at the sector map above them, estimating how long it would take for the carrier fleet to reach them. She thanked her lucky stars that Dana had so massively upgraded their sensors, giving them over four times as much reaction time.\n\n\"Can we take them before that fleet gets here?\" she asked Calara insistently.\n\nThe Latina looked up at the incoming carriers, and glanced at the cruisers and destroyers in their system, then said, \"It's going to be close.\"\n\n*Plant the other charges,* Alyssa told Dana decisively. *If we have to get you out of there in a hurry, we'll need their shields and weapons knocked out.*\n\nDana nodded grimly and said, *We're on it.*\n\nAlyssa's angry voice then said, *And when John turns up, tell him to drop his damn mind-shield!*\n\n***\n\nJade was following behind the three heavy tanks as they moved in a broad sweeping motion to flank the hill. She was trailing a few kilometres behind them, and was quite confident that they had no idea she was there. It was good fun stalking the tanks like this, but it was frustrating not being able to pounce.\n\nAlyssa's strained thoughts suddenly flashed into her mind, and said, *We've got the rest of the Cobras inbound! We can't abort the mission, because John seems to have gone off on some side mission, and I can't reach him with my thoughts.*\n\n*Is he hurt?!* Jade thought back to her in alarm.\n\nAlyssa sounded confused when she replied, and said, *No. Dana said everything was fine, but he suddenly started blocking me from his thoughts. We can't pull them out of there until he rejoins them.* \n\nJade was about to reply, when the three hover tanks abruptly came to a halt, and slowly turned around, before heading back the way they came. *Looks like the tank column is returning to base too,* she said, cautiously.\n\n*Fuck!* Alyssa swore angrily.\n\nJade's cat-like eyes gleamed with excitement, and she said animatedly, *Don't worry, I'll keep them busy!*\n\n*Be careful!* Alyssa thought to her with concern.\n\nJade grinned, and swung the Raptor around sharply to flank the incoming tanks. They were lined up like nice little ducks in a row, as she powered up the gunship's weapons.\n\n***\n\nBob Channing slapped the unresponsive targeting scope on his Gatling laser angrily. Power had gone out along the northern wall ten minutes ago, and he had initially assumed it had just been a brownout of some kind. He had been sitting in the Gatling laser nest in darkness since the lights had gone out, but he'd won a game of rock, paper, scissors with Jacob his shift partner, and sent the grumbling man off to check on the generator. Fortunately the lights were still on in the rest of the base, so he wasn't sitting there in pitch darkness.\n\nBob hated doing tower guard duty, especially on a bleak planet like this. Colonel Morgan was always talking about how they would make a huge fortune from this world, but Bob had come to loathe the place. Especially that biting wind! No matter how warm you wrapped up, it still managed to send cold shivers down his spine.\n\nA noise on the steps inside the guard tower, made him turn in his chair to face the pitch black hole in the floor. He asked with annoyance, \"Jacob! Any news on the generator? What the fuck's going on over there?\"\n\nThe darkness seemed to rise ominously, forming the indistinct shape of man that loomed above him. There was a slight movement, and something round and wet was flung into Bob's lap, as a chilling voice said, \"Jacob says he's sorry, but he never found out.\" \n\nThe mercenary felt shivers go down his spine, but they had nothing to do with the cold wind. Eyes wide with fear, he couldn't help but look down at the object in his lap, and Jacob's decapitated head stared up at him, his mouth open in a silent scream. Bob screamed in terror, but the black shape moved impossibly fast as it lunged towards him, and agonising pain blossomed in his chest. With terrified eyes he gaped at the huge sword impaling him through the sternum. Blood began to dribble out of his mouth, and the armoured man smiled humourlessly, then hauled the sword from the mercenary's chest. Leaping over the edge of the guard tower, the man in black armour dropped the twenty metres to the ground, landing silently, and then ran swiftly towards the next one.\n\n***\n\n\"Powering up weapons and shields,\" Calara stated, as Alyssa brought the Invictus around towards the group of destroyers. \n\nThe sleek white model of their assault cruiser raced across the holographic system map, as though eager to leap into the fray. They charged towards the unsuspecting group of destroyers that was making its way back to the cruisers, and the mercenary ships had no idea that their doom was only moments away. The long fire arcs indicating the full reach of the Invictus' Mass Drivers overlapped the destroyers, and the Latina sprung into action.\n\nCalara pressed the left thumb buttons on her weapon controls, then made a tiny adjustment with her targeting and hit the right thumb buttons a split-second later. The Invictus trembled twice as the first pair of two-hundred-metre long rails accelerated their shells to hyper-warp, followed almost immediately by the others. The huge shells raced out, leaving faint blue trails of tachyon particles as the ordnance slammed into each of the four destroyers that Calara had targeted. \n\nKnowing Terran ships like the back of her hand, she had sent each shell slamming into the bridge of all four destroyers. Without their shields up, the heavy rounds had smashed through the thick titanium plating, leaving huge craters. The colossal force of that impact ruptured the hull, and triggered explosive decompression on each ship, instantly killing the bridge crew. A moment later, the shells detonated in a huge explosion, ripping apart what remained of the devastated destroyers.\n\nSimultaneously, Calara pulled the triggers on her Beam Lasers, sending three coruscating orange lances into each of the remaining two destroyers. Throbbing energy cut through the titanium armour and hull structure like a hot knife through butter, and having aimed at the power cores, both were speared through by the bright beams. One of the destroyers immediately exploded, sending debris in a wide radius, while all lights on the other guttered and died, leaving it to tumble in space as a lifeless hulk.\n\nIrillith watched the engagement in open mouthed amazement. By viewing the video feeds, she had witnessed the Latina in action before, but the mild mannered brunette had just eviscerated six enemy destroyers in two seconds. The Maliri possessed more powerful weapons of course, but shooting with that kind of deadly precision was absolutely unheard of. She found herself rapidly re-evaluating the threat this deadly ship and crew posed, and her conclusions were not reassuring.\n\n\"Bringing us around for the second group,\" Alyssa stated calmly, turning the Invictus in a broad arc, and sending the ship racing towards the next formation of six Destroyers.\n\n***\n\nThe laser cannons on the Raptor opened up, sending bright orange laser bolts smashing into the completely oblivious tank. Although the plating on the fifty ton vehicle was thick, the laser cannons were designed to punch through titanium armoured ship hulls, and with half a dozen hits, they blew apart the tank chassis, causing the stricken vehicle to explode. The two tanks behind came to an abrupt halt, the crews stunned by the sudden destruction of their section leader. \n\nJade grinned as she banked right, walking searing laser cannon bolts into the second tank, whilst opening up with her six Gatling lasers on the one at the rear. The second tank didn't last much longer than the section leader, and laser bolts blew apart the turret, triggering a magazine explosion that obliterated the second heavy tank. After spinning up for a second, the Gatling lasers were carving huge furrows through the titanium plating, but it was proving too thick for the individual shots to penetrate. The terrified third tank crew away drove recklessly, desperately trying to escape the gunship's deadly ambush, as pieces of armour plating rained down on them from their exploding comrade.\n\nJade dropped the nose of the gunship as she cranked up the engines, which roared to life as they throbbed with power. Leaping forward, the Raptor rapidly closed the distance, with Jade opening up on the last vehicle with her laser cannons. It ground to a halt as a laser bolt smashed the engine, and it exploded shortly afterwards as she poured more fire into the now stationary tank.\n\nFinding tank hunting to be great fun, Jade raced eastwards in search of the second flanking group. Now that her full sensor suite was active, the four tanks in the main group, and the three in the eastern flanking group were flagged on the terrain map. She raced east from her current position and smiled to herself when she spotted her next prey.\n\n***\n\nDana crouched next to the backup generator, carefully setting up the remote trigger on the second set of explosives, and making sure that it was linked correctly to the detonator. Two red lights were now shining on the detonator she carried on her belt, with a switch next to each that was currently secured by a restraining clip, to prevent accidental activation. \n\n\"All set?\" Rachel asked over her shoulder, as she stood guard by the door. \n\nSpringing lithely to her feet, Dana nodded and gave her the thumbs up. \"We're all good to go!\" she said with a grin, as she walked over to join the brunette. \"Any sign of John yet?\"\n\nRachel pushed the door open carefully, and looked outside, but could see nothing of their lover. \"Where is he?\" she asked Dana, sounding concerned.\n\nDana shrugged helplessly, and looked out over the compound, but they could only see the lights illuminating the mercenary buildings, and the impenetrable darkness between.\n\n***\n\n\"They've taken the bait,\" Alyssa said as she glanced up at the tactical map. \n\nThe two cruisers were powering up their shields, weapons, and engines and had started to move from their geo-stationary orbit above SerpentHold base, and appeared to be engaging. From the data available to them, they seemed to be modern Torkan-class cruisers. They were armed with six front mounted beam lasers like the Invictus, but they also had eight turreted heavy cannon on their topdeck, which boasted broad full frontal fire arcs.\n\nCalara nodded, and said confidently, \"I'll be done with this group shortly.\"\n\nThe second destroyer group had reacted to their ambush of the first group, by powering up shields and weapons, then turning to attack. Calara had split her Beam laser fire between the first two destroyers, knocked out both their shields, but doing no damage. She left that to the Mass Drivers, and two pairs of shells smashed into the destroyers, blowing apart the incoming ships before they could open fire. \n\nThe remaining four destroyers flew gamely onwards through the broad debris field, which was all that was left of their two compatriots. Each destroyer was armed with two beam lasers and six laser cannons, and they opened up with the beam lasers from medium range. Alyssa had thrown off their accuracy with her evasive manoeuvres, and three of the orange beams sailed wide, leaving only three to hit home. The beams slashed across the Invictus' shields, causing bright ribbons of energy to flare as the shields absorbed the incoming shots.",
        "Alyssa glanced at the damage control display she had projected above her console and said in a steady voice, \"Shields at ninety one percent.\"\n\nCalara nodded distractedly, too focused on targeting the incoming enemy ships at the moment to be concerned about the Invictus' shields. The cooling icons next to the Mass Drivers, and the Beam lasers on the weapon loadout display, disappeared just as they closed to laser cannon range. She targeted the rear destroyers first, obliterating them with the same combination of Beam lasers to knock out the shields, then hyper-warp shells to rip apart their hulls. That left only two enemy ships, and she opened fire with the laser cannon batteries, sending a shower of laser bolts arcing out towards them.\n\nAlyssa flew straight between the enemy destroyers, so Calara was able to unload full broadsides on both ships, hitting each with repeated impacts from the twelve laser cannons on each facing. The destroyers only had three laser cannons per flank, so the volume of fire each side could unleash was hideously unbalanced. To make matters worse, the blindingly bright laser bolts from the Invictus had been powered up by the Ashanath power core, with the Kintark heatsinks keeping the barrels from melting.\n\nCalara strafed laser bolts into the destroyers, and their shields convulsed as they desperately tried to repulse such a huge amount of damage. By the time she had fired a second volley, their shields flared out and the laser bolts began to strike home, smashing into the hulls, and blasting big chunks out of the titanium plating. Now that the shields were gone, Calara aimed all twelve laser cannons at a point on the hull just back and below the engines. The shots tore through the tan coloured armour, ripped into the superstructure, then blew apart the power cores, and both destroyers exploded within seconds of each other.\n\nIrillith was stunned once again, shocked that the unassuming Latina was somehow able to independently target, and then eliminate both ships at the same time. She had seen her showing off against asteroids, but blowing up chunks of rock was entirely different to watching someone take out two ships in different directions. What made it even more alarming was the way Calara annihilated both ships, with vastly more accurate shooting than Irillith knew she'd be able to manage against even one.\n\n\"Shields at eighty nine percent,\" Alyssa said jubilantly. However, her elation was cut short as she abruptly leaned forward in her chair and said, \"Damn! The cruisers are running away.\"\n\nIrillith looked up at the map, and was surprised to see that the two cruisers weren't heading towards the planet. \"Where are they going?\" she asked in confusion. \"Are they fleeing the battle?\"\n\nCalara studied the map for a moment, then shook her head, and sounded worried as she said, \"No, they're regrouping with the incoming fleet!\"\n\n***\n\nDana and Rachel darted concerned glances at one another, hearing the status updates from Alyssa about the battle in the skies above them.\n\n\"I hope John is okay,\" Rachel said, sounding worried. She opened the door again, to have another look around. \n\nShe gasped with surprise as John suddenly burst through the door, his chest rising and falling rapidly as he panted. He leaned over, hands on hips, as he struggled to regain his breath, his breathing heavily laboured.\n\nDana crouched down next to him, and looked up at his face as she asked, \"What happened to you? We were worried sick!\"\n\nJohn shook his head, and blurted, \"I've no idea! I was running with you past the Armoury, then I blacked out! When I came to, it took me a minute to regain my bearings, and I sprinted straight over here.\"\n\nRachel suddenly exclaimed, \"John! Are you hurt? You're covered in blood!\"\n\nHe turned to look at her, and shook his head as he said, \"No I don't think so. I'm not in any pain.\"\n\n\"Look at your sword,\" Dana said quietly. \n\nJohn reached behind him, and pulled the quadruple-forged Alyssium blade over his shoulder, and looked at it in shock. It was drenched in blood and gore, and the once smooth coat of black paint that Dana had applied earlier, was now chipped and scored in dozens of places.\n\nDana looked up at his face, and said astutely, \"You've been in combat. Well, Progenitor John has been at least.\"\n\nJohn looked alarmed and said, \"But I wasn't injured, and none of you girls got hurt. What could have triggered that?\"\n\nDana shrugged and said firmly, \"We'll have to chat about it later. All hell's breaking loose up there.\" She glanced up towards the stars, and the heated space battle that was unfolding in the Beta-Draconis system.\n\n\"What do you mean?\" John asked in confusion. \"I thought they were supposed to wait until we evaced before hitting the cruisers?\"\n\nDana shook her head, and said animatedly, \"Drop your mind shield!\"\n\nJohn blinked at her twice, not realising he was blocking Alyssa out. He focused for a moment, and concentrated on dropping the barrier preventing Alyssa from reaching his mind.\n\n*John! Oh thank god! I was so worried...* Alyssa said frantically, her voice rushing into his mind. \n\n*It's alright, calm down. I'm fine,* he said soothingly. \n\n*Calm down?!* Alyssa exclaimed indignantly. However, within a heartbeat she had done just that, and said in a steadier voice, *The rest of the Armoured Cobras are inbound. They'll be in-system in less than a minute. We wiped out their destroyers, but we haven't engaged the cruisers yet.*\n\nJohn nodded, rapidly evaluating these events, and said, *Alright, don't engage unless you have to. We've rigged the generators to blow, but we haven't got the prisoners yet. We'll try to rescue them now, so let Jade know that we'll need her here to pick us up as soon as she can.*\n\n*Will do!* Alyssa replied, sounding much happier.\n\nJohn breathed out heavily, then smiled as he looked at Rachel and Dana. \"Let's go rescue those prisoners,\" he said buoyantly, and the two girls grinned at him, nodding eagerly.\n\n***\n\nJade watched the third tank explode in a satisfyingly bright explosion, and she swung the Raptor around, so that she could pursue the final fleeing group of four heavy tanks. The tanks only carried a pair of Gatling lasers for anti-aircraft protection, relying primarily on air supremacy from the destroyers and cruisers to keep from being hunted by a gunship. Without the luxury of that kind of protection, they were sitting ducks against Jade in her Raptor, and they struggled to even hit her shields with her evasive flying.\n\nThe Nymph grinned as she closed on the final group of tanks, and they opened up with their Gatling lasers, sending desperate streams of orange laser fire into the sky. She pressed the thumb buttons on her flightstick, and bright orange laser bolts from her laser cannons slammed into the rearmost tank. Her first shot blew apart one of the anti-grav cyclics, and the corner of the bulky, fifty ton vehicle crashed to the ground, digging out a huge furrow as it veered to the side. She kept her finger on the fire button as she performed a lazy roll, sending laser bolts into the next tank, as she easily evaded the incoming Gatling laser fire. \n\n*Jade!* Alyssa's voice came through to her. *John is back and he's okay. They'll be needing an evac in a minute, so we need you back there as soon as possible.*\n\n*On my way!* the Nymph replied cheerily, noting with satisfaction that the second tank had exploded under repeated hits from her laser cannons.\n\nShe powered up the Raptor's engines, bearing down on the fleeing tanks at high speed. She opened fire with her laser cannons as she raced ever closer, and the shots blew apart the turret on the tank second from the front. The heavy tank chassis seemed to have survived relatively unscathed, but she poured Gatling laser fire into the gaping hole in the hull, as the gunship roared overhead. The searing laser bolts hit the gunner in the head, killing him instantly, but miraculously the driver and tank commander cowering in the front of the vehicle survived unscathed.\n\nJade watched the last unscathed tank try and adjust its Gatling laser turrets to track her, but the Raptor was much too fast. She felt a pang of regret at leaving any of them still alive, but she was so overjoyed at the thought of seeing John again soon, she got over it immediately.\n\n***\n\nJohn poked his head out of the door and took a quick looked around, but could see no sign of any mercenaries. \"They'll probably be keeping the prisoners in the Command Centre,\" he said as they left the Backup Generator building, wedging the door shut behind them.\n\nRachel glanced at him as they sprinted diagonally across the lit path, running towards the huge Ferrocrete Command Centre, which dominated the centre of the compound. \"What if they aren't there?\" she asked with a worried frown.\n\nHe shrugged and said, \"Then we ask someone nicely.\"\n\nThey ran over to the southern wall of the Command Centre, and jogged along its length, trying to keep low to the ground and in the shadows as much as possible. The middle of the compound was more brightly lit than the outskirts, so John hoped that no one would be wandering around this late at night. They reached the south western corner of the building, and movement ahead of him and to the left caught his attention. A mercenary in combat fatigues staggered out of the Barracks, and was suddenly and violently sick.\n\n\"Hold up,\" John said, crouching down warily.\n\nRachel tucked in behind him, while Dana moved up to his side. \"What's up?\" she asked him curiously. When he pointed out the merc by the wide open Barracks doors, she frowned and asked, \"I thought you were going to wedge those closed?\"\n\nJohn looked at her in confusion and said, \"I was? When was that supposed to happen?\"\n\nFurther discussion was cut off by the loud blaring alarm of a warning siren, and when John glanced across at the queasy mercenary, he saw the man was shouting animatedly into a comm device. The merc ran on unsteady feet back towards the Command Centre, with a pistol held in his shaky grasp. John narrowed his eyes and waited until the distracted mercenary had run past them, then he sprinted out, and grabbed the man from behind, knocking the pistol from his hand. He clamped an armoured gauntlet over the man's mouth, stopping him from crying out in surprise, then dragged him back to the relative safety of the darkness by the wall.\n\nThe mercenary looked up at them with terrified eyes, and as soon as John released his hand, the man blurted out, \"I'll do anything, just don't kill me like that!\"\n\nJohn masked his confusion, and asked, \"Where are the kidnap victims being held?\"\n\nThe merc pointed a quavering finger at the big building behind them, and stammered, \"In the b-b-bunker below the Command Centre. They're all in there!\"\n\nSmiling at the man, John said, \"Well let's get going then. You can be our guide.\"\n\n***\n\n\"Here they come,\" Alyssa said, and moments later, the two carriers, the cruiser and six destroyers jumped in-system.\n\nAs soon as the new ships jumped into the Beta-Draconis system, it became clear why the new ships were not listed on the accounts, or their crews on the personnel rosters. One of the carriers, and the escorting cruiser were coloured tan and brown just like the rest of the Armoured Cobras ships, but the second carrier and the destroyers were painted a bright red.\n\nThe sensors picked up the transponder codes immediately, and Calara nodded as she checked who the ships were registered to. \"That carrier and the destroyers belong to another merc group called the Red Hornets. Maybe they've joined forces?\" she suggested thoughtfully.\n\nAs they pondered this, the Red Hornets carrier opened its launch bays and two wings of fighters blasted out into space, then grouped up into their respective wings. The Rapier class fighters were small but highly manoeuvrable, and according to the technical readout on the tactical map, they were armed with a pair of Gatling lasers. The two carriers peeled off from the fleet, and headed towards the planet, while the fighter wings raced ahead of them, clearly on some kind of urgent mission.\n\n\"Where are those fighters going?\" Irillith asked curiously.\n\nAlyssa looked up at them in alarm, and reached out with her mind to the Nymph flying the gunship below, *Jade, you've got incoming fighters! At least twelve!*\n\nThe blonde girl shared a worried look with Calara, who said, \"Shall we intercept them?\"\n\nAlyssa shook her head and said, \"We'd never reach them in time. I've warned Jade, but we're going to have our hands full up here!\"\n\nCalara nodded grimly, and glanced up at the system map. The retreating Cobra cruisers had joined the formation of other ships, and now three mercenary cruisers and six destroyers were heading straight towards the Invictus.\n\n***\n\nColonel Semias Morgan sprinted across the carrier's Hangar Bay, and straight towards his Exo-armour mech. He took the steps up the maintenance gantry two at a time, and barged past the mechanic who was currently feeding ammo into his 40mm autocannon from a loading hopper.\n\n\"Hey! Watch what you're do-\" the mechanic blurted out angrily, before he stopped abruptly when he realised who was diving into the mech's cockpit. He then mumbled, \"Sorry Sir, I didn't realise it was you.\"\n\nColonel Morgan ignored the man, as he buckled himself into the harness restraints of his command chair. He was fuming with anger, partly at himself for not tying up loose ends, and liquidating Police Captain Buckley of New Avalon's finest PD. Mostly with Captain Buckley for ratting them out, but also at this jumped up \"Lion of the Federation\" who had the balls to mess with his Armoured Cobras. \n\nAs soon as he'd received word from his mole in the Avalon PD, about what had happened with Captain Buckley, he had ordered his forces to abandon their Garrison duty and return to base. Sure, the Tetra-Cola company might be furious that he'd left his contract with them mid-mission, but he wasn't going to risk having his forces taken apart piecemeal.\n\nUp until then, everything had been going so perfectly. He'd secured a deal with the Red Hornets, whereby that Merc group would agree to merge with the Armoured Cobras, giving his own Merc Company some much needed fighter support. With their increase in stature, he was on the verge of forming the first Mercenary Regiment the Terran Federation had ever seen. \n\nThat would teach those uptight High Command bastards for kicking him out of the army, after twenty goddamn years of dedicating his life to the Corps! Yeah, maybe that little rich bitch might have been just shy of eighteen, but it would have been brushed under the carpet if her daddy hadn't pulled some strings with the top brass and had him discharged. Still, he'd had his revenge, and made those rich bastards pay a fine price over the last few years.\n\nColonel Morgan snapped his attention back to the present as he began powering up his mech. He'd got some garbled nonsense from Captain Pickering, about some mystery white ship ripping their destroyers to pieces. Then he'd been receiving frantic reports from Captain Mallor, that his tank group was being torn apart by some kind of special forces gunship. When Colonel Morgan's carrier group had arrived in-system, he'd laughed derisively when the white ship turned out to be an antiquated assault cruiser. \n\nHe had left Captain Pickering in charge of the cruisers, and ordered him to knock out that white hulled relic, figuring that three to one odds would bolster the man's spine. Pickering also had the Red Hornets destroyers, and a wave of bombers as backup, so Colonel Morgan expected this little intrusion into his system to be over in minutes. \n\nMeanwhile an alarm had been set off on SerpentHold, and there'd been some kind of report about Captain Latimer being butchered in his bed. Well, whoever was stirring up trouble down there was in for a hell of a shock. No one came to Colonel Morgan's backyard and messed with his home. This 'Lion of the Federation' had fucked with the Armoured Cobras, and no one got to live to tell that tale!\n\n***\n\nThe chime on Irillith's vambrace let her know that her hacking deck was ready again, and she tapped in the commands to construct another AI. She took a deep breath, and calmed herself down, not willing to risk an ugly confrontation like last time. The purple skinned digital construct began to take shape, forming the androgynous pixie shape out of tiny violet-hued blocks.\n\nThe AI opened its wide, luminous eyes, and asked in wonder, \"Are you my creator?\"\n\nIrillith beamed a warm and loving smile at the tiny artificial creature, and said, \"Yes, that's right little one. My, you are clever, aren't you?\"\n\nThe tiny creature nodded eagerly, blinked, and then reformed into a male shape. \"What's your name, beautiful lady?\" it asked with an expression of awe on its diminutive features.\n\n\"Irillith,\" she replied, with another disarming smile. But her face suddenly fell in an artfully sculpted look of sorrow, as she said sadly, \"But I'm afraid I won't be able to talk to you much longer, some bad men want to kill me!\"\n\nThe AI sprite looked furious and exclaimed valiantly, \"I'd do anything to protect you, Irillith! What can I do?\"\n\nIrillith swooned while she tapped into her holographic keypad. \"You're so heroic and brave! Here, I'll give you some instructions on how you can help.\"\n\nThe AI tilted its head as it listened while she uploaded her programs, then it beamed a wide smile at her, and said, \"Don't worry, I'll protect you!\" It ran along the data jacks into the console port, and disappeared from view.\n\nIrillith then turned towards Calara and said sternly, \"Target the cruiser on the left. The AI will help you.\"\n\nCalara glanced up at Alyssa, and then nodded to Irillith as she focused on the incoming inverted v shaped formation the three enemy cruisers had adopted.\n\n***\n\nJade left the smoking ruin of the armoured column, and its handful of survivors behind her as she raced towards the mercenary base. Alyssa had warned her of incoming fighters, and with her upgraded sensors, she saw them before they had spotted her. The Nymph quickly shut down as many systems as she could, flipping the sensors to minimal power on passive mode, and slowed the engines right down. Her energy signature crashed through the floor, making her all but invisible to sensors. Unfortunately, the Raptor was still bright white against a dark grey volcanic mesa, so she pulled up the nose on the gunship, and began to climb into the dense cloud above.\n\nShe didn't have to wait long before the two waves of fighters came screaming down from low orbit, then began to circle directly above the mercenary base. They held position there for a minute before they peeled away, heading south, on a direct intercept path with the Armoured column she had devastated minutes beforehand. Jade rotated the Raptor so she was facing south as well, hovering silently in the dense white cumulus cloud, invisible to both sensors and visual spotting alike.\n\nThe first wing of fighters raced by underneath her, and she began to power up the gunships engines, as the second wing tore towards her, heading south at speed. Jade cranked up her speed to match theirs as they flew beneath her gunship, then dropped out of the cloud cover directly behind the fighter wing. She glanced at each fighter in turn to lock them into the targeting system, then grinned wildly as she hit the thumb button, sending bright orange blasts of laser energy into the central fighters. The Red Hornets pilots were so shocked by her surprise ambush, that they didn't even have time to react.\n\nThe Red Hornets fighters relied on speed and agility, not shields and armour to protect them, and the laser blasts blew apart the fragile craft instantly. She cut loose with the Gatling lasers at the same time, and after whirring up with an angry hum for a second, the six weapons scythed through the lightly armoured fighters. One of the remaining three fighters exploded instantly, but the rest began to drop like stones, as she cut the wings off them with searing laser blasts that melted straight through the light armour. ",
        "A few kilometres ahead, the first wing banked sharply, looping around to get their vengeance on this impudent gunship pilot that had just killed six of their colleagues with a cowardly ambush. Jade grinned eagerly, and the Raptor surged forward to meet them.\n\n***\n\nThe terrified mercenary prisoner stumbled ahead of John on shaky legs, and led them around the corner towards the main entrance to the Command Centre. John was surprised that they hadn't seen any reaction to the alarm from the perimeter guards, or the rest of the forces in the barracks, so he kept his eyes peeled as they strode up to the broad double doors. \n\nJohn waved him onwards with the barrel of his Punisher railgun, and the man stumbled up the steps to the DNA reader by the side of the door. The merc put his trembling hand on the device, and the double reinforced door unlocked with a solid thunk, then swung open smoothly. \n\n\"After you,\" John said quietly.\n\nThe merc nodded, then walked into the room beyond. It was a long corridor that had several nondescript doors leading off it. The frightened man walked over to the second door on the left, then opened it hesitantly, before walking inside after some prompting.\n\n\"Hey, Dan! what's going on?\" a worried voice asked from inside the room.\n\nA second voice joined in saying, \"We heard the alarm go off a couple of minutes ago. Where's the Captain?\"\n\nJohn strode in after the mercenary, and the three men in light armour looked at him in shock. John raised his railgun, and mowed two of them down with three round bursts before they could react, but the third opened up with an assault rifle. The bullets would have hit John in the head, but they all ricocheted with an odd whumping noise, striking the ceiling instead. John turned to face the third merc who stared at him dumbly in shock, but Rachel had darted through the door by his side with her railgun at the ready, and she pulled her trigger first. The unfortunate soldier was hit twice in the chest from the three round burst, and the hyper-accelerated slugs blasted fist sized holes through his torso, sending him crashing to the floor. \n\nTheir guide had curled in a ball, whimpering with fear, so John crouched down and said grimly, \"Keep going, or you're next.\"\n\nThe merc nodded frantically, and staggered to his feet, leading them to a set of steps on the other side of the room. The steps led downwards, to an underground room, which was dominated by a circular, solid titanium door set into the far wall. John followed the merc down the steps with the two girls in their wake.\n\n\"Alright, open it up,\" John said to the merc.\n\nThe man walked up to the DNA reader set in the wall, and when he pressed his hand against the panel it glowed blue and said, \"Welcome, Lieutenant Daniel Clark.\" \n\nThere was an ominous grinding noise, and the titanium door rumbled slowly towards them for half a foot. It then stopped and rolled ponderously to one side, revealing a dimly lit bunker behind it. John walked up behind Lieutenant Clark and nudged him with the barrel of his railgun, pushing him forward. There were half a dozen rooms along the left hand side with what looked like glass panels and doors sealing in the inhabitants. Several dejected looking women sat in the small cells, staring listlessly into the distance. Two small children were in the last room, a little boy of about five, and a girl of about eight, who were pushing a small toy spaceship between them half-heartedly. \n\nRachel looked ashen when she saw these women, and John turned to look at her. \"Are you doing okay?\" he asked her with concern, and she looked up at him, then nodded bravely.\n\nDana had a puzzled expression on her face as she asked, \"With these glass walls, won't the women you ransom off be able to identify you when they get back home?\"\n\n\"One-way glass,\" Lieutenant Clark said shiftily.\n\n\"How do we open them?\" John asked him curtly.\n\nThe mercenary lieutenant walked over to a desk on the other side of the room, and pulled open a drawer. He retrieved a keyring with half a dozen electronic keyfobs attached, and handed it over with a shaking hand. John grabbed it, then passed it to Rachel, who dashed over to the cells and began unlocking them. The first woman scrabbled backwards, and looked wary as Rachel swiped the keyfob through the lock and unsealed the door. The kidnap victim looked greatly relieved when she saw it was a woman opening up her cell.\n\n\"My name's Rachel. I'm here to rescue you,\" the tawny haired girl said soothingly.\n\nThe prisoner sobbed with relief, and then ran over to hug the startled teenager. Rachel smiled at her reassuringly, held her tight for a moment, and then ushered her out of the room. Dana walked over to the woman with a warm smile on her face, and greeted her in a friendly voice, letting Rachel move on to the next cell. \n\nJohn turned his attention back to the trembling mercenary prisoner and said, \"How many Cobras are here on the base?\"\n\nLieutenant Clark looked up at him, and said tremulously, \"I'm not sure.\"\n\nJohn frowned, and said testily, \"What do you mean you aren't sure? You're a Lieutenant here, you must know how many base personnel there are!\"\n\n\"Well you people butchered all the men in the barracks,\" the frightened man said in a quavering voice. \"And none of the guard posts have checked-in over the last ten minutes. That only leaves ten men in the Command Centre, and you just shot three of them.\"\n\nJohn's eyes narrowed, and he asked, \"Where are the rest?\"\n\n\"Command and Control,\" the merc replied hesitantly. \"Door opposite us on the central corridor then it's a big room upstairs. You can't miss it.\"\n\n\"Alright, get in that first cell,\" John growled, and the man made stumbling steps towards the small room. \n\nGrowing impatient, John shoved him in, and the merc staggered inside as John sealed the door behind him. He turned to Dana and said, \"Guard the door behind me. I'm going to clear out the rest of the mercs in the Command Centre.\"\n\nThe redhead smiled at him bravely, then walked up to the doorframe when he strode outside. \"Don't take so long this time!\" she called after him, \"And don't shield your mind from Alyssa again, she'd kill me!\"\n\nJohn nodded, then jogged up the steps.\n\n***\n\nThe three Armoured Cobras Cruisers bore down on the Invictus eagerly, confident of a quick and easy victory. They were flanked on the starboard side by the group of six Red Hornets destroyers, and the scarlet coloured carrier heading towards the planet launched two wings of bombers, that had then flown in to support the cruiser group.\n\nCalara cracked her knuckles, and took one last glance at Alyssa before turning to focus completely on the incoming targets.\n\nAlyssa looked over at Irillith, who had been gazing intently at the overhead tactical map. The blue-skinned woman seemed to sense the blonde girl's attention on her, and looked up at the podium, nodding confidently.\n\n***\n\nMeanwhile, in the Armoured Cobras cruiser at the rear of their formation, Captain Abraham Pickering sat in his Command Chair, watching the engagement on the Tactical Map. He had been shocked to the core earlier, watching impotently as the white hulled ship cut his destroyer groups to pieces. Now he'd had a chance to think it over, he realised the white cruiser amassed just enough firepower to overwhelm each group piecemeal. He was feeling jubilant now, as his three state-of-the-art cruisers bore down relentlessly on the solitary assault cruiser. Up against three incredibly resilient cruisers, which each individually boasted greater firepower than the glorified troop transport facing them, he knew the other ship stood no chance at all.\n\n\"Fire as soon as we're in range, Lieutenant,\" he ordered his tactical officer, and the man nodded in reply, a broad grin on his face.\n\nSuddenly there was a shower of sparks from the left side of the Command Deck, and the power on the Bridge guttered and died. The emergency lighting cut in a few seconds later, casting the room in a dim red glow, and the holographic maps reappeared after a brief pause, flickering intermittently.\n\n\"What the fuck was that?!\" Captain Pickering said in shock. He glanced at his Chief Engineer who sat below him and to the left of the Command Podium, and shouted, \"Lieutenant Maverley, what's happened to the power?\"\n\nThe seasoned veteran Engineer looked just as shocked as Pickering felt, and rubbed his beard as he shook his head. \"I've no idea Captain! We just lost main power to the Bridge,\" he said in disbelief.\n\nThe holographic viewscreen suddenly crackled to life and a horrifying purple face stared out at them, It had several wicked horns on its head, and had a mad gleam in its eyes as it chortled, \"Evil Terrans! I won't let you hurt my creator!\" This was followed by a horrendous digitised screech, which sounded like a mixture of cruel laughter and a baby crying. \n\nThe Bridge stank of fear as Captain Pickering stared up at the purple apparition with dread. \"W-w-what the fuck is that?!\" he stammered to his Executive officer.\n\nPickering glanced at his XO, but the man was staring at the purple electronic demon with bug eyes, his face contorted with fear. The Chief Engineer suddenly gasped in alarm and cried out, \"Our shields are down, and weapons are powering up, we're targeting the Naga!\"\n\nPickering stared up at the viewscreen in horror, as the six beam lasers on the prow of his cruiser opened fire on the rear of the friendly cruiser. The tan and brown cruiser was hit by all six beams, causing violent splashes of cracking energy to arc over the protective dome from the searing impacts. \n\nLieutenant Commander Barnes from the Naga suddenly appeared on the viewscreen, and screamed, \"Pickering! Cease fire goddamn it!\"\n\nCaptain Pickering could only stammer helplessly as the white assault cruiser opened fire on the Naga as well. Blindingly bright orange beams scythed into the front of the Armoured Cobras cruiser, and the shields crackled and sparked as they were overloaded.\n\nOn the viewscreen showing the Bridge of the Naga, a terrified mercenary engineer shouted out, \"They blew out our shields, Sir!\" Lieutenant Commander Barnes replied in shock, \"That's not possible! No beams hit that har-\"\n\nThe viewscreen crackled and went to static, as the white assault cruiser opened fire with its Mass Drivers. The four shells pounded into the Naga as the merc pilot desperately tried to pull away, and the hyper warp shells smashed into the underbelly of the stricken cruiser, creating huge impact craters before the shells detonated, sending armoured plating and bits of torn superstructure spiralling out into space. \n\nThe violet demon returned to the viewscreen, its eyes glinting with a feral madness as it said, \"Let's give them a hand, shall we? Hahahahaha!\"\n\n\"Shut that fucking thing down!\" Pickering screamed, but his engineer shook his head frantically, pointing helplessly to the unlit lifeless console in front of him.\n\nThe eight heavy cannons on Captain Pickering's cruiser pivoted slowly, locking on to the devastated Naga. They opened fire with a thunderous salvo, and huge shells pounded into the rear of the Cobras cruiser. The four massive engines were hit by one enormous detonation after another, and the relentless destructive force of the explosions blew apart three of the engines, and ripped the fourth completely clear of the shattered hull.\n\nPickering's pilot cried out in panic, \"Engines have been shunted to maximum power, Captain! Safety overrides are off!\" He stabbed buttons on his console in vain, as their ship surged forward, while banking slightly to starboard on a direct collision course with the immobilised Naga. \n\n\"RaMmING SpEEeD!\" The purple electronic demon cried out, chortling insanely. \n\n***\n\nAboard the Invictus, Alyssa and Calara had watched in astonishment as the rearmost mercenary cruiser had suddenly opened fire on one of the lead cruisers. The Latina had reacted instantly, and unloaded their beams as well, knocking out the enemy ship's shields and making them vulnerable to their Mass Drivers. The Naga's pilot had rolled their ship and pulled up frantically, in a normally insane manoeuvre that exposed their belly to the enemy.\n\nIt turned out that this panicked action saved their bridge from instant annihilation at Calara's waiting hands, and instead she had to content herself with knocking out the port and starboard power converters. The rearmost cruiser continued to open fire on its mortally wounded compatriot, but this time with a massive barrage from its heavy cannons. It then charged forward, ramming into the crippled cruiser with a colossal impact. Armoured plating on both ships buckled and twisted under the calamitous impact, and a long rippling series of internal explosions seemed to shudder through the Naga. Suddenly the power core ruptured, and engulfed both ships in a tremendous blast, which incinerated both vessels in a blindingly bright explosion that sent debris cartwheeling away in all directions.\n\nAll the other vessels in the system had ceased firing, as they watched in stunned disbelief at the treacherous actions of the rearmost Cobras cruiser. The destroyers were the first to snap out of their trance, and they abruptly turned tail, yawing swiftly to port while they were still out of range of the Invictus. The Red Hornets bombers and Carrier also seemed to have a change of heart, and they also fled towards the Nav Beacon. They wanted no further part of this fight, or any further association with the Armoured Cobras, who were clearly insane.\n\nCalara reacted next, and opened up with a salvo of their six beam lasers on the previously untouched remaining cruiser. Its shields sent bright ribbons of light cascading outwards in pulsing circles as the powerful lances of laser energy slashed across the front of the cruiser. The Cobras Tactical Officer was an expert gunner, and hit with five of his six beam lasers, but the shields on the Invictus were strong, heavily boosted by the shield modulator. \n\n\"Our shields are down to seventy four percent,\" Alyssa said after a quick glance at damage control, this being the second beam laser volley they had taken from the last cruiser.\n\nThe Latina nodded eagerly, allowing herself a confident grin as they closed to laser cannon range. By the estimates from the tactical computer, the shields on the enemy cruiser were down to less than fifty percent. Alyssa turned to port, then rolled the Invictus to the right, so that they would pass the Cobras cruiser facing them with their topdeck. That meant Calara could open fire with the sixteen upper mounted laser cannons, and a punishing cascade of laser bolts began to slam into the other ship's shields. \n\nThe Cobras pilot copied their manoeuvre, and soon both ships were circling each other, while exchanging vast broadsides of laser energy. The Invictus had more powerful laser cannons, and stronger shields, so the result of this fight was a foregone conclusion.\n\nAlyssa guessed that the Armoured Cobras mercs must have realised the same thing, as their cruiser's shields looked more and more feeble, while Calara raked them mercilessly with laser blasts. She opened a comm channel to the mercenary ship, and after a brief crackle, the face of a middle aged, dark haired man appeared in the view-screen.\n\nShe smiled at him, and said cheerily, \"Hi! This is Alyssa Marant in command of the Invictus. We're about to kill you, and all your men. Please let me know if you'd like to surrender, or I'll just let my Tactical Officer finish you off.\"\n\nThe man looked stunned that this young girl was in command of this lethal ship that had ripped apart his fleet, and he faltered a moment. \n\nAlyssa frowned and said, \"I'd make my mind up quickly! It doesn't look like your shields can take another volley.\"\n\n\"Nice bluff little girl,\" the mercenary commander said derisively, \"but we can take a few hits, and your shields won't last much longer, then our heavy cannons will rip you apart!\"\n\nCalara's next salvo of laser cannon fire rippled over the mercenary cruiser's shields, causing orange pulsing circles in the shimmering sphere, before they finally faltered and collapsed. She had been aiming at the big guns on the top deck of their cruiser, and the mercenary ship shuddered violently as one of the heavy cannons was hit by several laser bolts, causing it to explode. The mercenary Bridge crew were shaken by the impact as the heavy cannon detonated, and it wiped the sneer off the mercenary commander's face.\n\nAlyssa looked at him with a puzzled expression on her face, as she asked, \"The heavy cannons she's shooting off your hull?\" She glanced at her console, and frowned as she added, \"I'm afraid our shields are still over half strength. They'll last quite long enough for her to get bored of tearing your ship to pieces...\"\n\nTwo more trembling impacts occurred in rapid succession as a pair of heavy cannons were blown apart in the next devastating cascade of laser bolts.\n\n\"She's right!\" a desperate looking merc shouted behind the commander. \"They completely outclass us, we're totally fucked!\"\n\nReacting quickly the mercenary commander said, \"Alright! Alright! Hold fire, we surrender!\"\n\nCalara immediately stopped shooting, while Alyssa smiled at the man graciously. \"Great! Now power down your weapons and engines, then wait here for further instructions. If you move, and force us to hunt you down, I won't give you a second chance to surrender. Clear?\"\n\nNodding dejectedly, the man asked, \"Who are you people?\"\n\nAlyssa grinned at him, and said enthusiastically, \"We're the Lions of the Federation!\"\n\nShe closed the comm channel, then brought the Invictus out of the death roll with the other cruiser. After powering up their engines to full, she pointed the Invictus straight for the planet, SerpentHold. They still had one last ship to stop.\n\n***\n\nJohn darted across the corridor in the Command Centre, and swung open the door opposite. There was a broad stairwell leading up to the level above, so he jogged over to the stairs, then ran up them two at a time. He didn't want to leave the girls on their own for any longer than he had to, so he was determined to get this over with as quickly as possible. There were a couple of double doors ahead of him, and he ran towards them, barrelling through, and slamming the heavy doors open into the Command and Control room.\n\nThe doors smashed back against the walls, making a wet, sickening crunch, as gouts of blood splattered out from the impact. The red smears were all that remained of the two mercs who had been waiting patiently to ambush him from behind the door frame. The mercenaries in here had heard the brief sound of gunfire coming from downstairs, and were all on alert, hiding behind sturdy computer consoles or desks. They stood up and opened fire with their assault rifles as John stormed into the room, and with five men firing on full auto, vast swarms of bullets tore towards him. \n\nThere was a deafening chorus of whumping sounds, as most of the bullets were harmlessly deflected by his magnetic field. Only a few managed to get through to strike his armour, and left small impact craters on the tough Alyssium plating. John stood there calmly, as he flipped the switch on his Punisher rifle to high power mode. Turning to aim at the first merc who was blazing away at him, John pulled the trigger on his rifle. \n\n\"VrmPkaow!\" the rifle barked, and the mercenary's chest exploded as his corpse was thrown backwards. \n\nHe cut another two in half before the rest ducked down out of sight, so John just activated thermal imaging, and shot the next man through the cover instead. The metal console provided no protection from the massively powerful armour piercing rounds, and he shot a dinner plate sized hole through the console, and then the man cowering behind it. The last man bolted from cover, so John shot him in the back, blasting a big hole through the man, and the Ferrocrete wall behind him. The remains of the mercenary crumpled to the floor, and an eerie silence descended on the room.",
        "\"I've finished off the Command Centre mercs, and I'm on my way back,\" John said into the voice comms, updating Dana and Rachel.\n\nDana's excited voice came through the comm, and she said, \"That sounded like a full powered railgun round. What was it like?\"\n\nJohn glanced around at the shattered remnants of the mercs, and said wryly, \"It left a bit of a mess...\"\n\nHe began to walk briskly back to the bunker, when Alyssa's worried voice came through to him clearly. *John, we've got trouble!*\n\n*Are you and Calara alright?* he asked her, concerned for their safety.\n\nAlyssa answered him quickly and said, *We're fine. We've taken out two of the cruisers, and the last one surrendered.*\n\nJohn grinned as he jogged down the stairs, and said proudly, *That's amazing! Great job.*\n\nThe psychic blonde then said urgently, *Thanks, but that's not the problem. The carrier with the Exo-armoured mercenary's is right above the base, they've started dropping mechs!*\n\nSwearing profusely, John vaulted over the banister, skipping the last set of steps and sprinted out into the hallway. He ran full tilt towards the heavy doors to the Command Centre, and shoved open the door. Sure enough, the huge, six hundred metre long carrier loomed overhead, hovering only one hundred metres above the ground. From this range, he could see the hangar doors open on the side, as Exo-armoured troopers stepped out from the carrier. \n\nHe watched one of the fifteen-feet-tall armoured behemoths plummet towards the ground like a stone, only for retrothrusters to kick in at the last moment, and gently halt its fall. The mech landed unsteadily on its feet, before righting itself, and jettisoning the bulky jetpack from its shoulders. It raised the long barrelled autocannon built into its right arm, and began to unload shells at the entrance to the Command Centre. \n\n\"Poom! Poom! Poom!\" the autocannon rang out, as it pumped heavy rounds towards him. \n\nJohn had dived backwards as soon as he saw the barrel swivelling in his direction, but one of the heavy rounds struck him in the leg, and the impact sent him sprawling across the floor. The shell hadn't been able to penetrate his body armour, but it left a broad crater of cracked concentric rings in the plating on his right thigh. The rest of the autocannon rounds smashed into the door he had opened, ripping it in half, and blasting it off its hinges as the shells struck home. \n\nJohn scrabbled backwards as a volley of missiles struck the entrance way moments later, detonating in a rippling series of explosions, and the waves of force knocked him further up the corridor. John avoided the worst of the explosion, but the heat and lick of flames scorched off the last of the black paint, leaving his armour white as snow once more. \n\n*We're on our way!* Alyssa said to him in alarm as she read his thoughts. *We'll be there as soon as we can. Hold on!*\n\nRachel's worried voice reached him on the comm, as she said, \"What's happening up there? It sounded like explosions!\"\n\n\"They're dropping mechs in the compound!\" John replied, as he got back up in a crouch. \n\nHe aimed down the corridor, and a few moments later, the overconfident mech pilot strolled out in front of the scorched entrance, its heavy feet making rumbling clumping sounds with every step. It stooped down to look along the corridor, and John opened fire with his Punisher railgun.\n\n\"VrmPrrrkaow!\" the railgun chattered angrily as he fired a three round burst at the heavily armoured mech. \n\nFortunately Dana's innovative genius for lethal destruction overcame the Terran Federation's defensive capabilities for the metal behemoth. The hyper-accelerated rounds slammed into the armoured torso, sending it reeling backwards, as the 20mm slugs smashed through the titanium plating, and punched huge holes through the mech pilot within. There was a gout of crimson from the gaping rents that has been driven through the mech's chest, and it staggered backwards, before keeling over and crashing to the ground with a loud metallic clang.\n\n*Get to the bunker!* Alyssa said to him frantically, as he rose to his feet. *Move! Now!*\n\nHearing the urgency in her thoughts, John darted through the door, and into the room with the bunker. He sprinted over to the stairs, and leapt down them three at a time. Stumbling slightly at the bottom, he staggered inside, where Rachel caught and steadied him.\n\n\"Hold on to your butts!\" Dana grinned, as she brandished the detonator in her hand. She flipped back the safety restraints, and then stabbed her thumb down on the red buttons.\n\n***\n\nColonel Semias Morgan had walked his mech out into position, and was standing by the carrier's huge hangar bay doors. His men worked like a well oiled machine, and he had grinned with satisfaction as his elite mech platoon had combat dropped into the hostile LZ with perfect precision. He always went in with the first squad, his best and brightest. Mercs he'd hand-picked and worked with for eight years now, ever since he'd bought this carrier and outfitted it with mechs. Several of these men he knew personally from his days back in the corps, and he had even convinced a few of them to retire from the Terran Federation military to join him as a mercenary. \n\nHe looked down and could see his men fanning out, securing a perimeter around the drop zone, and he almost felt sorry for the poor bastards that had dared to attack them. He nodded to the second mech platoon that was moving into position, and he was just about to step out of the carrier, when two thunderous detonations enveloped his base on SerpentHold. He looked on in horror as the colossal explosions ripped through the compound, flattening buildings and tossing the mechs aside like broken toy soldiers. \n\nThe shields on the carrier prevented any debris or the explosion itself from reaching the hangar, and when the clouds of smoke finally cleared, he gaped in stunned disbelief at the destruction wrought below. Fires raged in the burning hellscape, illuminating the scene of devastation in flickering orange flames. There were now two huge craters where the main and backup generators had been, and the blast waves from those explosions had flattened the armoury, barracks, shield projector and maintenance garage. The command centre had partially collapsed, and looked like a sad, broken ruin of its once imposing sight. \n\n\"No...\" he mumbled in shock, at the thought of the time, effort and money he'd invested in this base and the men that had been wiped out in an instant.\n\n***\n\nJade yanked back on the flightstick as the three fighters on her tail sent long streams of orange laser bolts towards her from their wing-mounted Gatling lasers. Her shields were out, and the hull of the gunship was scorched in several places where the Elite Red Hornet pilots had managed to hit her armour. \n\nThey had been in the middle of an intense dogfight for what seemed like forever, and it seemed that her surprise assault against the first wing, had not given her an accurate appreciation of the skill of these pilots. The targeting computer was finding these quick and nimble fighters almost impossible to hit, especially with the Nymph executing such wild evasive manoeuvres. She'd only been able to destroy three of them by taking control of the turreted Gatling lasers from the outmatched targeting computer, and concentrating on aiming the weapons herself. Although she had been able to take out half the wing, when her shields had gone, she knew that she had to concentrate purely on piloting or she was doomed.\n\nShe was getting flashbacks to that battle in Iota-Leonis against the Kintark, feeling that same dual sensation of rising panic at being hunted, and frustration at not being able to do anything about it. Jade decided that she really didn't like fighters very much.\n\nThe Nymph concentrated on making herself more dense, increasing her resistance to G-Force, then yanked the flightstick to the right, and rolling the Raptor through several tight spins. This threw the fighters off her tail for a couple of seconds, and gave her an opportunity to yank back the flightstick and bring the Raptor up in incredibly tight loop.\n\nAt the speed she was going, the G-forces were incredible, and the G-Force meter went off the scale, flashing red and blaring a warning. She felt herself get a bit lightheaded, but managed to maintain consciousness. The Red Hornet pilots had followed her into the loop, and while their fighters were more agile and manoeuvrable than the Raptor, the pilots were Terrans, and faced with all their physical limitations.\n\nJade flipped to manual control of her guns, and when two of the pilots blacked out, she cut the fighters in half as they sailed past her. The last fighter gave up on the loop, choosing to retain consciousness whilst losing his prey, and he raced away into the clouds. Jade levelled out of the loop, then turned to pursue the fighter, and while they had agility on their side, the Raptor had raw power. She cranked up the engines, and there was a sonic boom as she blasted through the sound barrier, rapidly increasing her speed, and catching up with the last of the Red Hornet fighters.\n\nThe Pilot had seen more than enough of Jade's fearsome skills, and was desperate to flee, pulling up and climbing for orbit. Unfortunately for him, Jade wasn't in a forgiving mood, knowing that she'd get a worried look from John for putting herself in danger. She opened up with all six Gatling lasers, and the bright orange laser bolts sliced through the light armour, cutting the enemy fighter to pieces.\n\nShe breathed a sigh of relief, and brushed the back of her hand over her brow. If she sweated, it would have been pouring off her by now. Alyssa had been keeping her informed about events up in space, as well as those down on the ground, so Jade turned the Raptor and raced towards the Cobras base. Even from this distance, dozens of kilometres away, she could see the smoke from the explosions rising up above the horizon.\n\n***\n\nDown in the bunker, the ground had seemed to lurch under their feet when Dana's explosives had been triggered, and all the lights went out as a deep bass rumble echoed dully through the room. The freed prisoners screamed in panic, until Rachel activated the outer lighting on her armour, bathing the room in a soft white glow. Dust was thick in the air, and they could see motes of it in the dim illumination from her armour. The kidnap victims coughed lightly, but seemed otherwise unscathed.\n\nThey were all crouched near the floor, and John slowly rose to his feet, saying, \"Is everyone alright?\"\n\nDana and Rachel nodded, looking at him with wide eyes, while the freed prisoners all blinked owlishly in the gloom. John walked over to the entrance, and above the stairwell, sections of the ceiling had collapsed, dropping girders and rubble across the stairs. He carefully approached the rumble strewn stairwell, to see how bad the collapsed ceiling was. \n\n\"If you move that girder there, you should be able to lift most of it out the way,\" Dana said, peering over his shoulder in the half-light.\n\nJohn nodded, and said to her, \"Sure, I'll give that a try. Back up a little so I'm not worrying about you being hit by rubble.\"\n\nDana grinned at him affectionately, then did as he asked, scampering backwards, and ducking back into the bunker. Once she was well clear, John reached up, taking hold of the huge steel girder that had smashed through the ceiling and brought it down on the stairwell. He flexed his muscles and with an ominous groan, and a shower of dust and stones, the huge girder creaked upwards, lifting the collapsed ceiling with it.\n\nThe two little children were sitting next to Rachel, cuddling her tightly as she knelt next to them, as they watched John lift the huge girder out of the way. The women prisoners were watching in amazement, while the children had looks of awe on their faces.\n\n\"Is he a superhero?\" the little boy asked in wonder.\n\nRachel laughed, and smiled as she looked down at him, then said gently, \"No, he just ate all his vegetables.\"\n\n\"Is he your boyfriend?\" the little girl asked curiously.\n\nThe other women all laughed at that, and Rachel blushed, then nodded as she said, \"Yes, he's my boyfriend.\"\n\nThe little girl sighed and said, \"When I grow up, I want a boyfriend just like that.\"\n\nRachel nodded and said softly, \"I'm a very lucky girl.\"\n\n***\n\nHitch Mallor stared in shock at the shattered remains of the Cobra base, as his heavy tank raced back up the slope to the plateau. He and his men had seen the huge explosions at the base, but now, seeing it flattened and burning like this was something else entirely.\n\nTheir carrier was hovering overhead, and Hitch recognised the distinctive shape of Colonel Morgan's Command mech standing in the doorway to the hangar bay. The carrier was suddenly struck by six bright orange beams, and before Hitch's horrified eyes, a huge white spacecraft descended out of the clouds, and began unloading laser cannon blasts on the carrier. \n\nThe Colonel and his remaining mech platoon began to jump out of the carrier, dropping like stones as they fell from the huge vessel. Hitch felt a surge of relief when the Colonel seemed to get clear, but that was short lived when one of his men yelled in fear, \"That fucking gunship is back!!\"\n\nThe white hulled ship raced in, and bright orange laser bolts started ripping through the falling mercenaries in their mechs. The pilot was just as merciless with the mechs as they had been with his tank column, and both men and machines were cut to ribbons by lethally accurate laser fire. The white cruiser opened up as well, and the bright curtain of orange laser bolts meant instant death for the unfortunate mercenaries who had tried to jump to the base below.\n\nAn ominous clang on their tank's hull had Hitch staring at his tank crew with wide eyes. \"What the fuck was that?\" he said to the gunner in a hushed voice. \n\nThe gunner stared back at him on the verge of panic, and started to reply, when there was a horrific tearing screech of twisting metal that drowned out anything he might have said. The four men sitting in the tank looked up in horror as the turret was ripped effortlessly off the hull. They gaped in shock at the man who had torn the top off their tank, just as easily as if he'd opened a can of sardines, and he casually tossed the mangled turret aside. \n\n\"Any last words?\" the man asked curiously, as he unshouldered an evil looking white rifle, pointing it towards the gaping hole above the mercs.\n\n\"You fucking bastard!\" Hitch shouted at him angrily, and was gunned down a second later. \n\nJohn rolled his eyes, and said, \"Very profound.\"\n\n***\n\nColonel Semias Morgan landed on the rubble strewn remnants of his base, and grappled with the controls of his mech as he laboured to keep it steady. He jettisoned his drop pack, and looked around, trying to get his bearings. He glanced upwards to check to see how his second platoon were doing, and gaped in horror as he watched a white gunship start shooting his men out of the sky. \n\nMeanwhile, the white assault cruiser tore into his carrier with its laser cannons, until moments later the carrier's shields blew out, and laser bolts started striking its hull. He had no idea how that assault cruiser wasn't blown into a million pieces by his cruisers, but it seemed totally unscathed. It began to open fire with dozens of Gatling lasers, targeting any mechs which somehow managed to avoid the gunship. He watched the last of his men leap from the carrier's hangar, only to be tracked and hit by eight Gatling lasers, which cut him clean in half. The upper and lower sections of the mech fell to the ground in two separate glowing pieces.\n\nHe flinched as there was a big explosion on the carrier, and it yawed to starboard, tipping away from the base. The white assault cruiser pivoted in place, and as soon as the carrier was clear, six blazingly bright orange beam lasers slashed across the engines, slicing them in half in a series of explosions. The carrier dropped like a rock, and although Colonel Morgan couldn't see it crash, he felt the tremors of the impact through his feet.\n\nGone. All of it. Every last man and bit of equipment he'd painstakingly gathered over the last ten years had been ripped apart in just under an hour. Overwhelmed with rage and grief, he yelled out his pain and anger in one long bellowing release. As he sat in his command chair afterwards, panting with the exertion, he looked up, and saw a white armoured man with a Lion on his shoulderpad striding towards him.\n\n\"You...\" he snarled through gritted teeth, feeling the hate rising up, and colouring his vision red. \n\nFlipping a switch on the external speakers, he roared, \"Fight me one on one, 'Lion of the Federation' if you've got the balls!\"\n\nThe white armoured man strode towards him confidently, and Colonel Morgan grinned with anticipation. He readied both his 40mm autocannons, and his shoulder mounted rocket pods, training them on John Blake as he walked calmly towards him.\n\n\"You're one cocky son of a bitch, I'll give you that,\" the Colonel grudgingly admitted.\n\nHe had the external audio ready, in case his opponent replied, but instead of some defiant challenge from Commodore Blake, he heard an odd sound from his right. \n\n\"VrmPkaow!\"\n\nSuddenly Colonel Morgan was in agony, and he gaped down in horror at the bloodied stumps where his hands had been. A twelve inch wide hole had been punched through the right side of his mech, and the slug had ripped apart the controls, and his hands with them. The mech tottered over, collapsing on its front, and he screamed with pain, thrashing in his chair.\n\nA few moment later, the mech was flipped over, and the bolts holding the canopy securely in place snapped like twigs as the front was ripped off the mech. Through his pain, Colonel Morgan stared up at the man, and instantly recognised him as Commodore John Blake from the TFNN interviews. John smiled at him, then turned to his left and said, \"Nice shot, honey.\"\n\nColonel Morgan stared up at him in utter disbelief, and managed to mumble, \"Why? What did I ever do to you?\"\n\nJohn knelt down next to him, and said quietly, \"Absolutely nothing. But you hurt my friend, so I decided to destroy you, and everything you'd built. Hopefully, it'll make her feel a bit better.\"\n\nBefore the shell-shocked colonel could reply, a black armoured figure appeared in his view, holding a sinister looking rifle with a shimmer of heat coming from the barrel. The beautiful brunette removed her helmet, and looked down at him, studying his pain contorted face. \n\n\"Do you remember the Voss kidnapping?\" the girl asked him in a voice throbbing with emotion.\n\nHe tried to think through the agonising pain shooting up his arms, and snarled dismissively, \"Yeah, some rich bitch. We grabbed her years ago, but her tightass husband wouldn't pay up, so we killed her. What the fuck has that got to do with anything?!\"\n\nThe girl's face crumpled with grief for a moment before she managed to control herself. She then looked down at him, and said softly, \"Her name was Catherine Voss. She was my mother, and I loved her very much.\"\n\nThose were the last words Colonel Semias Morgan ever heard, as the girl slowly raised her rifle and shot him in his astonished face.\n\n***\n\nJade brought the Raptor down to land in the middle of the ravaged landing area. The floor was blackened and scorched from the explosions, and large chunks of rubble were strewn about the ground. She lowered the landing ramp, then got up from her seat, and darted out the back of the cockpit, eager to see John and the girls again.\n\nDropping down in the grav-tube, she dashed through the front loading area, and stood at the top of the loading ramp. John walked towards her with his arm wrapped around Rachel, while Dana followed behind them, leading several women and holding hands with two young children.",
        "Jade smiled at them all, her heart lifting with relief to see they were all unscathed. \"Are you all okay?\" she asked them anyway, as they walked up the loading ramp.\n\n\"Yeah, we're good,\" John replied. \"It's over.\"\n\nThe Nymph nodded, and reached out a comforting hand to stroke Rachel's cheek. The brunette looked across at her, and smiled warmly, but Jade could see she was in pain. \n\n\"It's okay, I'll look after her,\" Dana said, taking Rachel's arm, and walking with her through to the corridor behind. She glanced back at John before she left, and said with a smile, \"John... don't forget.\"\n\nWhen the two girls had left, Jade turned to look at him quizzically, as he ushered the kidnap victims onto the safety of the Raptor. \"Don't forget what?\" the Nymph asked him curiously.\n\nJohn smiled at her and said, \"She wants us to pick something up before we head back to the Invictus. Just fly fifty metres to the west, and I'll load it in the back.\"\n\n***\n\nThere had been a quiet reunion up on the Invictus, when they were all gathered together once more. Everyone was jubilant to see each other looking safe and well, but out of respect for Rachel and the grief she was dealing with, celebrations were muted. John was surprised to see Irillith waiting for them in the Hangar Bay, alongside Alyssa and Calara, but she smiled at him shyly when he nodded towards her in gratitude.\n\nA small Terran Federation Fleet led by a Captain Munroe, had jumped into the Beta-Draconis system while the Raptor was returning to the Invictus. The heavy cruiser captain leading the group had been sent by Charles Harris, and he looked suitably shocked when Alyssa handed over the captured mercenary cruiser to his care. \n\nJohn had settled the tearful but overwhelmingly grateful kidnap victims in the spare quarters on Deck Four, while Alyssa set a fresh course for New Eden. Rachel went to her own room, to be alone with her thoughts, but Dana insisted on going along to help comfort her. John and the girls agreed between them that they'd do a debrief once the last of their business here was resolved, so the journey back to Rachel's homeworld was uneventful.\n\nAlyssa contacted Detective Karen Walsh, to let her know that the kidnapping victims had been rescued, and requested that they drop them off at Avalon Police Headquarters for the Police to help them return to their families. Karen agreed immediately, and was astounded to hear that they'd wiped out the Armoured Cobras, who they'd confirmed were responsible for the plague of kidnappings. \n\nJohn, Alyssa and Rachel waved the rescued women and children goodbye, as they left them with Detective Walsh and her capable retinue of medical personnel and police officers. They walked back into the Raptor and sealed the loading ramp behind them.\n\n\"Are you sure you want to do this?\" Alyssa asked Rachel gently, placing her hand on her friend's shoulder, and stroking her reassuringly through the material of her black skirt suit.\n\nThe brunette nodded firmly and said, \"I've been avoiding the estate for two years. I need to go back to make my peace with everything that's happened.\"\n\nJohn held her hand, and they followed Alyssa up to the cockpit. The blonde girl sat in the pilot's chair, powered up the engines again, then carefully lifted off as she added more power to the retro-thrusters. The Raptor rose smoothly, and then turned and began to head west, flying away from the city. They sat quietly, not wanting to disturb Rachel as she grappled with her emotions, and after ten minutes, they received an incoming call. \n\n\"Incoming vessel, this is restricted airspace. Please identify your name and business,\" the man on the call said firmly.\n\nRachel leaned forward and said quietly, \"Rachel Voss. Here to visit my mother's grave.\"\n\nThere was silence for several long moments, before the man said respectfully, \"Please proceed Miss Voss.\"\n\nAlyssa followed the guide path, and they flew across acres of beautiful, well tended grounds. A huge mansion eventually appeared ahead of them, and Alyssa looped around the massive stately home, following the green path on her HUD. She brought them down to land at the back of the mansion on a clearly marked landing pad, and they all stood together, then exited the Raptor.\n\nRachel led them across the fine gravel area, and the stones crunched quietly under their black leather shoes. They headed away from the mansion itself, and followed the brunette to a well kept flagstone path, which led down a gentle hill towards a small lake surrounded by trees. The path ended by a small summer house that overlooked the lake, and Rachel walked off the path and over the neatly cropped grass. She walked under the willow trees and half way around the lake until she stopped by a carefully tended grave. The headstone read:\n\nIn loving memory of \n\nCatherine Voss\n\nBeloved wife and mother\n\n\"She loved this place,\" Rachel said, her eyes filling with tears. \"I have so many fond memories of her here.\"\n\nJohn put his arm around her comfortingly, and she leant her head against his shoulder. Alyssa closed her eyes for a moment, then looked around once more, taking in the psychic echoes around the lake.\n\n\"You used to spend summers here, and played on a red boat on the lake,\" she said softly. \"Then in the evening, you used to sit in the rocking chair together, on the veranda by the summer house. The two of you liked to drink hot chocolate, while you watched the fireflies over the lake.\"\n\nRachel stared at her with wide eyes, and said in wonder, \"How do you know that?\"\n\nAlyssa turned and smiled kindly at the girl and said quietly, \"I can feel her presence here very strongly. When people feel strong emotions in a place, they leave behind a psychic echo. Your mother loved you very much.\"\n\nTears were rolling down Rachel's cheeks as she stared out across the lake. \"It's been ten years, but I miss her so much,\" she said sadly.\n\n\"Would you like to see her again?\" Alyssa asked her tentatively, and Rachel turned towards her, her face filled with hope.\n\n\"More than anything,\" she said earnestly.\n\nAlyssa reached up her hand, and touched Rachel's face. Suddenly she could see everything that Alyssa had described, and so much more. The picnic they had under the willow tree. The time her father had fallen out of the boat, and come up with a lily leaf on top of his head, making her and her mother fall about with laughter. Learning to ride a bicycle on the grass, and her mother running behind her, pushing the seat, and clapping with joy as Rachel cycled on her own for the very first time. The look on her mother's face was so proud, and so full of love.\n\n\"Thank you,\" Rachel sobbed gratefully. \"You don't know what this means to me.\"\n\nJohn and Alyssa held the overcome girl, comforting her in their arms as she stood between them, her shoulders trembling as she wept for her lost mother. Eventually she pulled back, and breathed a deep sigh. \n\nShe looked Alyssa in her bright cerulean eyes, and said with conviction, \"I'm ready.\"\n\nAlyssa smiled at her lovingly, and replied, \"I know.\"\n\n***\n\nThey walked back up the hill a couple of hours later. Rachel was quiet, but at peace, and she walked hand-in-hand with John and Alyssa as they headed towards the mansion. A man in a smart business suit was waiting for them by the gravel area at the top of the hill, and his eyes widened slightly when he saw them approach. His attention was completely on Rachel, and he appeared to be studying her intently. \n\nRachel stopped when they reached him, and let her hands slip out of John and Alyssa's.\n\n*Go ahead to the Raptor,* she thought to Alyssa. *I'll join you shortly.*\n\nNodding, Alyssa and John walked away, leaving the girl with her father.\n\nHenry Voss stared at his daughter for a long moment, then his eyes darted away, and over towards the lake. The site of her mother's grave. \n\nHe looked back at Rachel, and his eyes grew heavy with sorrow as he said haltingly, \"Rachel, I'm so sorry.\"\n\nShe smiled sadly, and nodded, then walked over to him and wrapped him in a warm embrace. \"I forgive you, Daddy,\" she whispered to him, as he hugged her tightly."
    ],
    "authorname": "Tefler",
    "tags": [
        "revenge",
        "justice",
        "teenager",
        "mercenary",
        "armoured cobras",
        "rachel",
        "psychic",
        "violent"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-50"
}