{
    "title": "Sizzling Embrace Ch. 04",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nPardon me for the delay in posting this chapter, Folks. It was due to circumstances beyond my control. As the title of this chapter implies, it's all about TYTAN getting down and dirty. Please skip if you're not interested. \n\nTyler Tyron Wesley vs. Tanesha Ashton \n\nDedicated to LLAP\n\nGiving in to desire!\n\n***\n\nTanesha looked up from the magazine she was reading when she heard the door opening, and froze. Standing in the doorway with a lewd grin on his face was one of the two criminals Ghost had left behind to replace Polks and Heat.\n\n\"Hey sweetheart.\" The man, whose name Tanesha still didn't know grinned, closing the door behind him. He looked drunk. \"I haven't seen you in days.\" He said conversationally as if he was talking to an old friend.\"\n\nTanesha tensely stood up and took some steps back till she felt the wall against her. \"What do you want?\" She asked tightly, trying to hide the fact that she was shaking inside with dread. Where was Skull when she needed him, she asked herself silently. \n\n\"Ow come on, is that how to welcome a friend?\" The man pouted as he started towards Tanesha. \"I just thought you could give me a helping...hand or mouth or...pussy.\" He laughed at his own joke. Tanesha could smell the alcohol on his breath. \"You see, I need me some warm body and you're going to help me.\"\n\n\"Walk away, Mister.\" Tanesha hissed. \"If you lay a finger...\"\n\n\"What the fuck can you do?\" The man growled. \"Come on I know you need it too.\" He husked, staring at her heaving chest. \"I hear the big guy is not giving you any. I am going to take good care of you...fuck you real hard and real good.\" He reached out a hand towards her breast but Tanesha slapped the hand away before it could touch her.\n\n\"Don't you dare touch me.\"\n\n\"Wow, so it's like that huh?\" The man licked his lips. \"I like it even more when my women fight me before the fuck.\" He reached behind him and brought out a pistol which he rubbed against his groin. \"I'm hard already. Please fight me some more. On the other hand...\" He brought the gun up and looked at it. \"It might not be a good idea to fight me.\" He gave a devilish grin as he reached for his zipper. \"I think I want you to start with your hand.\" He reached for Tanesha's hand but she quickly brought her fisted hand up and gave him a punch on the jaw, totally ignoring the fact that the man had a gun. \"You bitch.\" He growled and gave Tanesha a sharp slap which caused her head to snap back.\n\n\"Get your filthy hands off me you son of a bitch.\" Tanesha screamed when he grabbed her hand. \n\n\"Rambo.\" Tanesha heard Skull's voice and almost passed out with relief. She'd never been more thrilled at the sound of that voice. \"You heard the lady.\"\n\nRambo, turned his head and looked at Ty. \"Lady? You call this...\"\n\n\"I'm not going to repeat myself Rambo. Let her go.\" Ty's voice sounded deadly cold.\n\nRambo let go of Tanesha and fully turned to face Ty. \"What's your problem?\" He rasped. \"I hear you're not even hitting it. What is it with you anyway? Huh? \"Is the great Skull's dick one hundred and eighty, shy of heaven?\" Rambo started towards Ty. \n\nTy wanted to smash the idiot's face in for daring to put his hands on Tanesha but he refrained from doing that. It however took a lot of effort to keep himself under control.\n\n\"So how come you actually sleep in the same room with her but don't fuck her?\" Rambo looked curious. \"I saw you that day. You wanted to fuck her so bad. I remember how you sucked on those fine knockers...how she loved it. Fuck, we could all see how badly she wanted your cock inside her puss...\" Rambo didn't finish what he'd been about to say. Just one punch from Ty had him unconscious at Ty's feet with blood pouring from his broken nose.\n\nWithout a word, Ty went outside and came back with Donk and Shark who dragged the unconscious man from the room. Ty closed the door and slowly turned to face Tanesha. Though she looked shaken, she was okay. Ty was so angry he could feel himself shaking. \n\n\"Never argue or struggle with a man holding a gun.\" He said gruffly. \"Definitely not one who's drunk. Do I make myself clear?\" Ty waited till Tanesha nodded and then abruptly turned and left the room, taking his phone out of his pocket to dial Mickey's number.\n\nTy was in a foul mood. He'd gotten some really bad news from his team that afternoon which had pissed the fuck out of him. He couldn't believe Gustav was dead. Killed by none other than ZONKAI. Somehow Ty blamed himself for his colleague's death. If he hadn't told the FBI about Ghost's human trafficking operation, Gustav would still be alive. He clearly remembered his Admiral telling him to forget about the human trafficking till their current mission was done. But Ty had insisted they intercept and stop that operation as there were hundreds of kids involved...most of whom had been kidnapped, according to Ghost himself. Now a good man had paid with his life. Ty had never wanted to kill Ghost more. And when he'd seen that slimy bastard trying to do God knew what to Tanesha, his anger had only intensified. He needed to get out of the house...needed to breathe. But what he'd just witnessed was too fresh in his memory he didn't feel comfortable leaving Tanesha in a house full of trolls.\n\nTanesha watched Skull go and wondered what she'd done wrong this time. It was not like she'd invited that silly man into the room. Hell, the door had been locked from outside for goodness sake. She'd been engrossed in one of the magazines Skull had gotten for her, when the drunken fool entered and she'd been as surprised as could be expected. She therefore didn't understand why Skull looked at her as if she'd done something wrong. With a shaky sigh, Tanesha sat down on the couch, too shaken by what had taken place to go back to her reading. She stared unseeingly at the door, rubbing her sore cheek and trying very hard not to think about what would have happened had Skull not shown up the time he did.\n\n***\n\nTanesha nearly jumped out of her skin when the door burst open about thirty minutes later. She let out a sigh of relief when she saw Skull enter the room with a pair of orange and white tennis shoes in his hand.\n\n\"Wear these. We're going for a walk.\" Ty said as he threw the tennis shoes at Tanesha's feet.\n\n\"Wh-what?\" Tanesha stammered in surprise. She was sure her ears were deceiving her.\n\n\"What are you? Deaf?\" Ty muttered. \"We're going for a...\"\n\n\"You're actually allowing me outside?\" Tanesha sounded incredulous.\n\n\"Hurry up before I change my mind, woman.\" Ty growled. What was it with girls and unnecessary questions? \"Chop, chop.\"\n\nTy needed to get out of the house before he went bonkers, especially after warning those criminals off Tanesha. Oh the look on their faces... After all, it wasn't every day a legendary psychopathic killer threatened to cut off their hairy, stinky balls and stuff them inside their mouths if they so much as looked at a girl...who was actually their prisoner. Thank God for shitty reputations, Ty thought smugly.\n\n\"Oh my God, you're the best.\" Tanesha's squeal startled Ty, who turned to watch as she slipped her feet into the comfortable tennis shoes. \"Do I get to swim too?\"\n\n\"Don't push it.\" Ty growled, wanting to laugh despite his feeling of impatience. It had once come up in their conversation that he went for swims most nights. Tanesha had groaned with longing, saying how much she loved to swim and how good she was at that. Ty didn't have any intention of letting the girl into the ocean. If she was as good as she claimed she was, only God knew what she would do when given that opportunity.\n\nIn the hall, the men didn't even spare them a glance as they passed. Mickey was sitting on the porch when they went outside. He looked down at Tanesha's feet and gave a brilliant smile.\n\n\"Yes! I knew they'd fit.\" He grinned and looked up at Tanesha's smiling face. \"Have fun. And don't do anything stupid.\"\n\n\"Fuck off.\" She muttered as she turned to follow Skull.\n\nThey walked for about an hour in silence, Tanesha somehow sensing Ty's need for tranquility. She also noticed that Ty was taking it slow to enable her keep up with him. \"What did Rambo say when he came to the room?\" Ty finally broke the silence.\n\n\"Nothing much.\" Tanesha shrugged. \"It was pretty obvious what he wanted.\"\n\n\"I know what he wanted, Tanesha. It doesn't take a rocket scientist to know he wanted to fuck you.\" Ty rasped. \"What I need to know is what he said.\" He needed to know whether in his drunken state, Rambo had revealed anything worth noting especially in the wake of Gustav's death.\n\nTanesha felt the blood rush to her face and thanked her stars for her dark skin. \"He said that he needed help...you know.\"\n\n\"And...\"\n\nShe sighed. \"And that he's heard I wasn't getting any from you.\"\n\n\"He's heard?\" Ty frowned.\n\n\"Well, I'm sure Mickey might have...\"\n\n\"What has Mickey got to do with all this?\" Ty growled.\n\nTanesha groaned. \"We were just...he was just teasing me.\" She sighed. \"He thought we were... I told him it was nothing like that. I'm sure they were probably talking and he told then we were not doing that.\"\n\n\"Don't be so sure.\" Ty muttered.\n\n\"I know a good person when I see one, Skull. Mickey would never deliberately do anything to hurt me.\"\n\n\"I see. You two must be very close. Maybe I should ask... Is he giving you some?\"\n\n\"Fuck you, Skull.\" Tanesha hissed and abruptly turned around to go back.\n\n\"Hey, it was just a question.\" Ty grabbed Tanesha's hand and turned her back onto their route. \"No need to get your panties in a twist. That was a simple yes or no question.\" Ty couldn't help the relief that flashed through him. \"How about a run?\" He asked after a while.\n\nTanesha gave a snort. \"I never got running. Awful lot of effort just to get back to where you started.\" Tanesha looked up at her companion when he made a sound of shock. \"What?\"\n\nTy shook his head in incredulity. \"That's the first time I'm hearing something like that. How the hell do you keep in shape? 'Cause that body...\"\n\n\"I walk, swim, go to the gym...anything but run.\" Tanesha tried not to smile like a simpleton at Skull's comment about her body.\n\n\"You're something else.\" Ty muttered and then looked up when thunder rumbled in a distance. \"I hear there's a storm brewing.\" He said. \"I was told it would surely hit two days ago but nothing so far.\"\n\n\"Well it had better not start now because I'm loving this weather.\" Tanesha gasped when a bolt of lightning split the sky. \"Skull I think...\" But before she could complete her sentence, the storm actually hit. Rains started pouring down in torrents.\n\n\"Oh fuck!\" Ty breathed. \"We have to make a run for it, Tanesha.\" Ty bellowed over the sound of thunder even as he grabbed Tanesha's hand a broke into a run. \"I guess you have to forget about your running rule.\" He shouted as they run. They were soaked within seconds.\n\n\"I feel tired already.\" Tanesha panted harshly as they ran. \n\n\"We can't stop or slow down.\" Ty shouted. \"Staying out in this kind of weather could make you sick.\" And that was the last thing both of them needed at that point, Ty thought desperately.\n\nHis main aim was to get them out of the storm to safety, even if it wasn't the house. He didn't want to alarm Tanesha but staying out in that kind of storm was dangerous as the heavy rains were accompanied by very strong winds, thunder and lightning. They could get hit by anything. The sky had gone pitch black, the only occasional light being the blinding flashes of lightning. It was very difficult to run in that kind of downpour. \n\nAfter running for about twenty minutes, they saw the headlights of a car, coming towards them. Ty pulled Tanesha to the side cautiously when the jeep came to a stop beside them. The window rolled down to reveal Mickey's face.\n\n\"Come on, boss.\" He shouted. \"Let's get you guys out of this storm.\" Ty and Tanesha got into the back seat of the jeep, both grateful for Mickey's thoughtfulness. \"You didn't take your usual route boss.\" Mickey said as he turned the jeep around. \"I've been driving around, looking for you guys.\"\n\n\"Yeah. This is an easier terrain.\" Ty responded, turning to look at a shivering Tanesha. \"I didn't want to be too hard on her.\" He reached for Tanesha's tightly clasped hands. Her teeth were actually chattering. \n\n\"We have to use a longer route to get back to the house.\" Mickey informed them. \"A tree has been ripped from the ground and thrown across the road to the house. This is one shitty storm.\"\n\nTy pulled Tanesha into his arms. He didn't even think he was helping, as his own clothes were also soaked through just as hers but she clung to him and buried her face against his chest. \"I'm so cold.\" She breathed shakily against Ty.\n\nTy drew back and pulled off his t-shirt. Then he pulled off Tanesha's tank top, slapping her hands away when she tried to stop him. \"Stop it.\" He growled. \"The wet stuff on you will only make it worse. We're not going to get to the house anytime soon.\" He explained. \"Apart from the fact that Mickey has to use a longer route, he has to drive slowly otherwise we may get stuck somewhere. Now, do you want to catch a cold or something even worse?\" He rasped, reaching behind her to unhook her bra.\n\n\"Oh God, Skull...\" \n\n\"This is not a big deal, Tanesha. I've already seen and sucked these boobs, remember?\" Came Ty's amused whisper. \"And I've touched that puss...\"\n\n\"No you haven't touched it.\" Tanesha groaned. \n\n\"Okay so I touched it through your leggings. Same shit. This is important Tanesha. Trust me, you don't wanna fall sick.\"\n\nWith a groan of surrender, Tanesha plastered herself against Skull, feeling warmth begin to seep into her already. She gasped when her nipples, which were already hardened due to the cold, grazed against Ty's chest hair. \"Oh, this is not good.\" She moaned as a delicious shiver flashed through her and a jolt of incredible need shook her body.\n\n\"What is it?\" Ty asked, rubbing his hand soothingly on her back. At least she wasn't shivering as badly as she was before, he thought contentedly. \n\n\"Nothing.\" She murmured against Ty's neck. Despite being cold, Tanesha was getting turned on so fast it was making her dizzy. \n\nTy felt a powerful shiver pass through Tanesha and tightened his arms around her. Much as he was concerned about Tanesha's well-being, he couldn't overlook his own aroused state. Of course it was only to be expected. What hot-blooded male would not be turned on when they had such a body plastered against them? He wanted to feel those nipples rubbing against his bare chest, in his mouth again...wanted to devour those succulent lips...wanted to bury himself very deep inside Tanesha till he didn't know where he ended and she began. Ty was hard, so hard he ached.\n\nTanesha was having a hard time sitting still. She'd never felt that overwhelmed with sexual hunger in her entire life. She wanted Skull with a ferocity that shocked her. She wanted to crawl inside Skull and be one with him...which didn't make any sense at all. At her tortured whimper, Ty drew her into his lap so that she straddled his thighs. And when Tanesha felt the unmistakable rock hard bulge at the juncture of her thighs, she tried to move back onto the seat. But Ty tightened his arm around her waist, stopping her.\n\n\"Skull, you...\"\n\n\"Ignore it.\" Ty said softly, rubbing his hand soothingly on her back. \n\n\"Oh God.\" She groaned, burrowing her face deep between Ty's head and shoulder. \"How can I ignore it?\" She moaned, feeling herself getting wet.\n\n\"You know I can't help it, don't you?\" Ty murmured softly, nuzzling his face into Tanesha's wet hair. \"Do you have any idea how beautiful and sexy you are?\" He asked huskily. \"It's only natural that I'll be affected this way. But you need this.\" His lips were on her temple. \"We both do.\" He sighed.\n\n\"Hold tight guys.\" Mickey shouted just before the jeep hit a ditch.\n\nBoth Ty and Tanesha moaned uncontrollably. Hitting the ditch had only succeeded in making Ty's cock thrust forcefully against Tanesha's moist heat. Feeling that hard cock pressing against her clit was too much for Tanesha. Before she even knew what she was doing, her mouth was blindly seeking Ty's. And when she found it, she did what she'd wanted to do since their first kiss. She kissed the shit out of him. \n\nTo say Ty was shocked would be an understatement. There he was, trying very hard to keep his hands to himself...not literally though. Then what does she do? Lock lips with him as if there was no third person in the car. Ty knew he had to stop Tanesha but her mouth on his felt so good he couldn't bring himself to. And when she began to grind against his erection, Ty almost went out of his mind. With a throaty groan he took over the kiss. And what a hot kiss it was. Ty's hands moved up to cup Tanesha's face to hold her to him as his lips ate at hers. He couldn't get enough of her... couldn't kiss her deeply enough, strongly enough. When Tanesha captured his tongue and began to suck erotically on it, heat exploded inside his body, pouring to his cock, hardening it even more. Ty couldn't hold back the lustful moan that tore out of his throat. At the back of his mind, he couldn't help but be thankful that in the midst of the pouring rains, the rumbles of thunder and Mickey's concentration on getting them to the house safely, their raunchy antics was going by unnoticed. \n\n\"Fuck!\" Ty bellowed as he tore his mouth from Tanesha's after what felt like hours. \n\n\"What was that, boss?\" Mickey shouted.\n\n\"Nothing.\" Ty's breathing was harsh and erratic. He felt Tanesha trembling and trying to get some air into her lungs. At least her trembling was not due to the cold, Ty thought satisfied. But that notwithstanding, he still wanted to get her into a hot bath. \"Are we almost there?\" \n\n\"Sure. Looks like the lights are out though. Donk must be outside trying to get the generator started.\"\n\n\"Hurry then please.\" Ty said, hoping they would be in before the lights came back on as he definitely wouldn't want any of the idiots to see his obscene bulge. He reached for Tanesha's tank top and put it back on her. \"You okay?\" He whispered. And at Tanesha's nod, he kissed her lightly on her swollen lips and moved her off his lap back onto the seat. Then he reached for his t-shirt and Tanesha's bra just as Mickey parked in front of the house.\n\nTy got out, still bare-chested and reached inside the jeep to help Tanesha out. Then he picked her up, bridal style and sauntered into the house as if he actually owned the place, Tanesha couldn't help but notice and admire. Damn, the man just oozed power, she thought. Ty didn't stop till he got to his bathroom. He put Tanesha down in front of the bathtub just as the light came back on, and then started filling the tub. Then he crouched before Tanesha to undo the lace of her tennis shoes. When he was done, he pulled them off her feet and then stood up.\n\n\"I'm going to take a hot shower in the other bathroom. I want you to soak in this for a while.\" Ty instructed. \"I'll ask Mickey to bring you some hot tea. Take it immediately he brings it before it goes cold. Do I make myself clear?\"\n\n\"Yes.\" Tanesha muttered.\n\n\"Good. We don't want you falling sick.\" Ty said reaching for his towel.\n\n\"Why? Will that be bad for business?\" Tanesha grumbled, but knew even before the words left her mouth that they were the wrong thing to say. \"Sorry.\" She murmured when Ty turned to look at her.\n\nWithout a word, he turned and left the bathroom.\n\n***\n\nAfter standing under the hot spray for a while, Ty got out of the bathroom with a towel wrapped around his waist. He went into the kitchen and made himself some hot coffee. Then he stood sipping it whilst staring out the window at the pouring rain. He'd definitely never seen a storm that violent before. \n",
        "\"Good night boss.\" Mickey called out.\n\n\"Night Mickey. Thanks.\" Ty responded and went back to sipping his coffee and watching the rain.\n\nEven after he finished drinking his coffee, Ty continued to watch the rain. All the guys had already gone to bed. Hopefully Tanesha was already fast asleep too, Ty thought as he pictured the scene in the jeep earlier. Fuck, he'd come so close to damning the consequence and fucking the shit out of her right there in the jeep. His hold on his control was still so thin he knew the least thing would make it snap. That was why he'd waited in the kitchen for so long. He really hoped Tanesha was already asleep Ty thought as he headed for his room. \n\n***\n\nTanesha groaned in annoyance as she stepped into the room, a towel wrapped around her. She couldn't believe she'd actually fallen asleep in the tub. She made a mental note to strangle Mickey the next time she saw him. The silly boy had laced her tea with brandy and insisted it would help warm her up faster. Though she'd tasted the alcohol, it was obvious it wasn't much but since she virtually never took in alcohol, it had obviously knocked her out. But for that last ear-splitting thunder, she would have still been asleep in the tub. Tanesha was grateful Skull wasn't in the room yet because for the first time since sharing a room with him, she hadn't taken a change of clothe to the bathroom. Tanesha didn't want to risk Skull walking in whilst she dressed so she decided to quickly grab sweatpants and a t-shirt, and then go back to the bathroom to dress up. But just as she reached up into the wardrobe, she heard the door open. \n\nTanesha squeaked, her heart almost jumping out of her chest. She turned to face the door, her hand going to her chest. She watched as Skull closed and locked the door behind him, and then headed straight to where his backpack stood, not even once looking in her direction. The sight of his sexy body with its sheer power caused a shiver of lust to slither down Tanesha's spine. He had such an amazing body. He was so hard and tight...so virile. It was impossible not to become aroused seeing him half naked. Even the tattoo of the skull on his back suddenly looked sexy for some reason. She remembered the feel of those powerful thighs beneath her, remembered how wet she'd been whilst she rocked against Skull's rock hard erection not too long ago. Tanesha couldn't suppress the moan that tore out of her throat.\n\n\"What the...\" Ty's words died on his lips when he turned around to find Tanesha staring at him with so much hunger on her face. He swallowed audibly, taking in her salaciously provocative appearance. His gaze centered on the towel wrapped around Tanesha, wishing it away from her body, willing her to drop the towel and give him a glimpse of that perfect, beautiful body beneath. \"I thought you would be in bed by now.\" He rasped, feeling his cock swell beneath his towel, his balls drawing tight, in need for release. \n\n\"I...I fell as...asleep in the...tub.\" Tanesha stammered as she came back to her senses, wishing the ground would open and swallow her up. Her reason for not being asleep sounded silly even to her own ears. She wouldn't have been surprised at all if Skull had told her just how stupid he thought she was. \"I'll just grab my stuff and...\" She turned around hastily to face the wardrobe and again reached up to grab some clothes. Then the worst possible thing happened. Her towel slipped from around her to pool down around her feet.\n\nTanesha gave a sharp cry of distress. And then without thinking, she bent down to pick up the towel, exposing her pussy to Ty in the process. Wild horses wouldn't have been able to hold Ty back at that point. In four long strides his chest was plastered flush against Tanesha's back, the contrast between their bodies so strikingly captivating. Where Ty was hard, virile and light, Tanesha was soft, alluring and dark. Ty thought it was stunningly poetic. He snatched the towel from Tanesha's shaky fingers and flung it on a nearby chair. Ty loved the tiny erotic sound...a cross between a moan of desire and a groan of protest...that fell out of Tanesha's lips. With a groan he wrapped his arms around her tiny waist and pushed aside her wet hair to expose her delicate neck. Then he kissed that downy soft, sweet spot, his lips nuzzling sensuously along her neck. It was so arousing and so pleasurable Tanesha's breath hitched.\n\n\"Skull...\" She breathed shakily, feeling her knees threaten to buckle as her nipples hardened into taut points. Skull's lips against her skin, his wet tongue licking her skin, his oh so hot and delicious breath and the feel of his hardness against her arse...even through his towel, was sending her into a lustful meltdown.\n\n\"So sweet and responsive.\" Ty husked as he tugged her neck to one side to enable him explore better. \"Just a touch, a kiss and your pulse leaps. I can feel it under my lips. I want you so badly. I'm so hard for you right now.\" He whispered, allowing his tongue to travel along her jaw to end beside her mouth. \"Feel it?\" At Tanesha's nod, Ty gave the corner of her mouth a slow lick. \"Give me your mouth Tanesha.\" He breathed.\n\nWith a sob, Tanesha turned her head and allowed Ty to capture her hungry mouth with his coffee-laced mouth in a kiss so intense but sweet it blew her mind. Her hand moved up to coil around his neck, holding him to the kiss. The feel of Ty's hot tongue in her mouth dueling with hers totally lit her whole body on fire and at the same time, turned her legs to jelly, causing her to sag against Ty's large and hard body. As he plundered her mouth, the fingers of the hand wrapped around her waist shifted up to tug on her distended nipples. \n\nTanesha moaned helplessly into the kiss, feeling herself get so wet she squeezed her thighs together. She felt Skull's other hand begin to caress her flat tummy, and then move down over her hip and along inner thighs. It wasn't torture, it was bliss. Tanesha's thighs opened of their own volition. She wanted Skull to touch her. Was dying to feel his hand there. She knew she was acting like a slut but she couldn't help herself. She craved his touch. And when those magic fingers eventually grazed against her drenched slit, Tanesha tore her mouth away from Ty's and gave a loud cry.\n\n\"You're so wet.\" Ty cooed. \"Very good. I can't wait to taste you.\" He whispered just below her ear. Then he began to languidly stroke over her clit. \"I need to fuck you, Tanesha. So bad.\"\n\n\"Sweet Lord...\" Tanesha cried out, her hips circling, her head thrown back against Ty in blissful abandon. Those wicked fingers were driving her out of her mind. Her hips jerked, an erotic, throttled cry falling from her lips.\n\n\"So hot and slick.\" Ty murmured huskily. \"Makes me wanna fucking drool thinking about how I'm going to bury myself in this tight heat and make you scream.\"\n\n\"Skull...\" Tanesha cried desperately, her thrusts becoming more urgent and frantic. \"Please... Oh God, please...\" She needed to come so badly heat bloomed across her skin, her senses overwhelmed. \"Skull...\" Tanesha didn't recognize her own voice. Her thighs quivered. \"I'm...ahhh...\" Her orgasm hit hard. She climaxed with a breathless cry, her legs shaking with the rush of her release. It was a skin-tingling explosion, pure and simple.\n\nTy expertly applied pressure to Tanesha's spasming clit throughout her release, prolonging her orgasm till she was reduced to a whimpering mess. She was still quivering with pleasure when Ty picked her up and laid her face-up on the table in the room. He really didn't think he had the strength to make it to the bed. He ripped off his towel and stroked himself with fingers, slick with her juices. Ty knew he was big...had been at the receiving end of silly cock jokes in the showers, and had seen the discomfort on faces of countless number of women...but he also knew that Tanesha was slick enough to accommodate him.\n\n\"Skull the light...\" Tanesha gasped, feeling embarrassed by the position she was in and how exposed she was. \n\n\"The light stays.\" Ty husked as he hooked his hands under Tanesha's legs and pulled her so that her arse was right at the edge of the table.\n\nTanesha whimpered and closed her eyes. Being plastered against Skull earlier hadn't been as bad because she hadn't been able to see his face, and had also been too far gone on lust to even care. But at that particular moment, she was back down from her intense orgasmic high, and knew just what was about to happen. Tanesha was embarrassed and terrified. But beneath that dread was a feeling of excitement. She was finally going to experience how it felt like to be filled with cock. Though she didn't know what to expect, anticipation built in her chest.\n\n\"Please go easy on me, Skull.\" There was a slight tremor in Tanesha's voice which Ty didn't miss.\n\n\"Baby, I'd love nothing more than to go slow and savour your sweetness.\" Ty rasped, his voice thick with its own need. With a sigh of pleasure, he nudged the bolus head of his cock against Tanesha, rubbing it up and down the slick slit, getting it lubricated and causing a delicious shiver to pass through Tanesha. \n\n\"Oh God...\" Tanesha moaned despite herself. The friction against her swollen and still tingling clit felt so good that she forgot about her fear of getting fucked for the first time...till she heard Skull's next words...\n\n\"But this very moment, I can't promise to be gentle.\" He groaned as he leaned over her and tucked his head into the crook of her neck. \"After this, I'll give you all the gentleness you desire. But now...\" Ty lined up his pulsing, rock hard cock with the slick pussy.\n\nWhen Tanesha felt him pushing against her she automatically tensed up. She hadn't seen his dick but she could tell from the feel that it was huge. She just knew she was going to be hurt but couldn't bring herself to stop Skull. She wrapped her arms around Skull as she braced herself for the pain that she knew she couldn't escape...if what she'd read was anything to go by. \n\nInch by inch Ty pushed in, the ripe purple head stretching Tanesha. He tried very hard to take it slow, was shaking with the effort it took. But then he felt Tanesha's teeth clamp down tightly on his shoulder, and her nails dig deep into his back and instantly felt his control desert him. Just as a loud thunder rumbled all around them, Ty plunged in to the hilt. His own cry and the sound of the thunder drowned out Tanesha's scream. And since his face was buried against her neck, he didn't see the agony on her face either.\n\n\"Damn, you're tight.\" He gasped against her neck. Tanesha's pussy was hands down the tightest pussy he'd ever had the pleasure of filing. It squeezed his cock so exquisitely, it totally blew his mind. \"You feel so fucking amazing.\" Ty couldn't believe how good it felt to be inside Tanesha. \"Damn!\"\n\nAfter that initial scream of pain, Tanesha froze. She felt so unbelievably full and painfully stretched it felt as though she was being torn into two. All coherent thinking fled her mind. She could hear Skull whispering lewdly against her neck, heard him saying how much he loved being inside her and how he'd never felt anything so tight, blissful and amazing. The sound of his voice...those bawdy and yet sexily spoken words sounded so erotic Tanesha found her pulse increasing rapidly as she completely concentrated on them. Skull was not even moving. And though that wasn't what Tanesha expected, she was grateful as the pain soon reduced to a dull throb. \n\nBody tight and tense, Ty managed to remain still, wanting Tanesha to get used to his girth. But she was so tight he was going out of his mind. Dammit, if her channel clenched any tighter on him, she would definitely strangle his cock, Ty thought. He gritted his teeth, fighting for control to suppress the scream that was threatening to burst from his throat at the incredible pleasure from the friction of her hot tight flesh against his rock hard sensitive cock. When the exquisite pleasure became unbearable, Ty couldn't remain still any longer. He began to move with slow thrusts, driving deep. \n\n\"Oh...\" Tanesha gasped at the feeling of Skull moving inside her. She could still feel some pain but it wasn't as bad as before.\n\n\"Fuck, you have the tightest and hottest pussy ever.\" Ty's rough whisper sounded tortured. \"It's so good it's sinful.\" He husked, his body consumed by a rush of sensations he'd never felt before. \"So fucking wonderful.\" He growled as he changed his angle and began to thrust hard and fast.\n\n\"Skull...\" A sharp breathless gasp tore out of Tanesha at the sudden burst of pleasure that flared deep inside her from the point where they were joined, mingling with the little pain that she could still feel. Her hands moving up to tightly grip Ty's shoulders, her nails biting into his skin. \n\nThe pleasure-pain. The incredible sting of being stretched. It was so good. With a small cry Tanesha began to move against Skull, her actions instinctive, primal and uncontrollable. Was it always like that, Tanesha asked herself, awed. Each stroke of that hard flesh inside her core pushed that pleasure up, generating an intense thrill that caused her eyes to roll into her head. As if that wasn't enough, Skull's position caused her clit to take a hell of a rub with each thrust. It was absolutely amazing. Tanesha's hips began to move faster, thrusting almost desperately against Skull. She wanted more of that thrill. Her body was desperately begging for that thrill. When she felt Skull increase his tempo, a burst of such rapturous pleasure jolted through Tanesha, her toes curled almost painfully. \n\n\"Ahhh...\" Tanesha moaned as her legs lifted to clasp Ty's hip. She was delirious with pleasure.\n\nTy raised his head and looked down at the beauty in his arms, writhing beneath him, her head thrashing from side to side, her hips bucking and grinding against him, taking all of him harder and deeper into her soft heat. Goddamnit, Tanesha was something to behold when she was in the throes of passion. Ty totally loved those erotic little whimpers she was making in the back of her throat. He'd never seen a more beautiful woman, Ty couldn't help but think.\n\n\"Damn, you're beautiful.\" He breathed as he leaned down to capture a taut nipple firmly between his teeth, plunging deep the whole time... stealing her breath. Ty maddeningly flicked the tip of his tongue across the nipple stuck between his teeth. \n\nThe pleasure that exploded from within Tanesha was unlike anything she'd ever known. Her body arched, her eyes widened and a scream tore out of her as an unexpected orgasm hit her like a thunderbolt. Her eyes remained wide opened and yet they couldn't see a thing...her mouth remained opened but no sound came out after that first scream. She writhed rhythmically and ecstatically against Ty as delicious contractions racked her whole body. And they just wouldn't stop.\n\n\"Oh fuck!\" Ty tore his mouth away from the hard succulent nipple and threw his head back in agonized pleasure. He felt his cock pulse and swell as each contraction against it gripped him like a vise. Pressure was building everywhere...inside his head, in his balls, inside his chest, in his belly... Ty knew his orgasm was going to be a huge one. He wanted to delay it... wanted to draw out that intense magical moment before that explosion. But the pull was impossible to resist. A guttural growl tore out of him as sensations so powerful rushed through him he could do nothing but follow her. \n\nAnd at that crucial moment, Ty was faced with the most gut-wrenchingly difficult task. A task that was even more difficult than his task on that Island as far as he was concerned. Immediately he'd entered that tight heat, it dawned on him that he hadn't used protection. If you were close friends with people like Dean Broody, who came from a family of medical practitioners, and Michael Murphy, who was a medical doctor, you would never fuck anyone raw, thanks to their scary stories. Tyler Wesley prided himself on always using protection but that night, it had been the last thing on his mind. Much as he would have loved to spill his essence into that warm heat, he knew he had to pull out. Calling on every discipline that had been instilled in him in his line of work, Ty pulled out of Tanesha and immediately began to shoot his load onto her stomach. He came so mind-numbingly hard his vision actually faded. He roared with absolute, mindless joy as he totally lost himself in the most intense climax he'd ever had. Ty collapsed onto Tanesha, still quivering with pleasure so earth-shattering he forgot where he was.\n\nWhen Ty eventually came back to himself, he raised his head to look down at Tanesha. She looked spaced out. There was also an aura of vulnerability around her that actually made her look positively angelic and impossibly young. \n\n\"Are you okay?\" He asked, but Tanesha didn't even give any indication that she'd heard him. \n\nTy stood upright and gently picked Tanesha up, cradling her against his chest. Then he strode to the bed and placed her on it. Tanesha still hadn't said anything or even met Ty's eyes. The storm was still raging on outside. Ty went to retrieve their towels from where they'd left them and went to the bathroom with the intention of cleaning up and then bringing a washcloth to clean Tanesha up. But when he began to clean himself, he noticed something very odd that actually made him freeze. Ty noticed that the washcloth he was using came away from his cock with traces of blood. \n\n\"What the fuck!\" He breathed, staring at the washcloth. Where the hell did the blood come from, he asked himself, examining his dick. He definitely wasn't hurt. And he could have bet his last cent on the fact that Tanesha was not on her period. So where... \"Oh fuck!\" He swore, his eyes widening in shock as it dawned on him. It couldn't be. Could it? How the fuck had he not noticed? But she was a very sexy, alluring girl. The way she'd even acted during their very first kiss... No fucking way. How in hell could Tanesha be a virgin?\n\nTy snapped out of his trance and quickly finished cleaning himself. Afterwards, he pulled on one of his boxer briefs that he'd hung on the mini drying line in the bathroom after washing it the day before. He did all that mechanically, his mind in turmoil. Damn it, why hadn't she said something? He remembered how abnormally tight she'd been, how she'd begged him to go easy on her...and his subsequent response. \n\n\"Fuck!\" Ty exploded, angry at himself. \n\nHe filled a small washbowl with hot water, grabbed a washcloth and went back into the room, his heart pounding so hard he feared it might jump out of his chest. Tanesha was where he'd left her. She hadn't moved. Her eyes were still staring unseeingly at the wall. Ty went to sit beside her hip and softly caressed her thighs. Even his hand was shaking. Fuck!\n\n\"Baby, look at me please.\" He requested softly, and waited till Tanesha turned to face him. She wouldn't meet his eye though. \"Tanesha, was this your first time?\" Ty could have kicked himself when that silly question fell out of his mouth. Of course it was her first time. Why else would she bleed? He hadn't been that vigorous with her. \"Why didn't you tell me?\" He asked, leaning forward to brush her semi-dried hair off her face. \"Are you in pain?\" Tanesha still wouldn't talk. Ty gave a sigh of frustration. \"I don't think saying sorry is enough but...I'm really sorry.\" He said softly.\n\nSomething in Skull's voice made Tanesha actually look at him. And the look of regret and misery on his face tugged at her heart. \"It's okay.\" She said softly. \"I'm fine.\"\n\nTy nodded but didn't look any less miserable. \"I'm going to clean you now...\"\n\n\"No. You don't have...\" Tanesha started to protest and attempted to roll out of the bed but Ty gently pushed her back onto the bed.\n\n\"Please. Just...allow me.\" ",
        "Tanesha let out a pitiful groan and covered her face with her hands, shielding her eyes from Ty, totally mortified. Truth was she still couldn't feel her legs. That was why she hadn't attempted to move. She also couldn't help but remember how wantonly she'd behaved with Skull. A decent lady, who was a virgin to boot wouldn't allow that to happen in the first place, how much more allow herself to enjoy it as much as she had. And to top it off, Skull wanted to clean her up...with the light still on. If that wasn't mortifying, Tanesha didn't know what else was.\n\nWith an amused chuckle, Ty gently pried her hands off her face. \"Stop that.\" He admonished softly. \"There is nothing to be ashamed of. I've had my cock inside you. That's the highest form of intimacy between two people. We're way past the level of shyness don't you think?\"\n\n\"Not when I'm the only naked person here.\" She said with a frown.\n\n\"Tanesha Ashton, if you want to see my cock, all you have to do is say so.\" Ty said with mock seriousness as he stood up and took off his boxers, ignoring Tanesha's squeal of protest.\n\n\"Are you crazy?\" Tanesha gasped, and then promptly burst into laughter when Ty made humping moves, causing his already stiffening huge cock to bounce up and down obscenely. \"Skull, put that back on.\" Tanesha laughed, throwing a pillow at Ty. \n\n\"Sorry Babe.\" He laughed, moving to lean over her so that their faces were almost touching. \"That can no longer accommodate me in this state.\" Ty watched as all the laughter disappeared from Tanesha's face and her tongue came out to lick her lips. \"You are so fucking beautiful.\" He whispered and closed the gap between them. \n\nIt was a very passionately and arousing kiss, full of tongue and want, a kiss that was long and so fucking sweet. Damn, but Skull sure could kiss, Tanesha couldn't help but think. By the time Ty pulled away, they were both breathless. He ran his thumb along Tanesha's swollen bottom lip, staring at it as though he was committing it to memory.\n\n\"Now, what do you say I take care of you?\" Ty husked and smiled when Tanesha nodded. \"Good.\" He dropped a quick kiss on those succulent lips and then moved back to sit between her legs.\n\nTy proceeded to thoroughly clean Tanesha up. By the time he was done, she was very clean and not too sore. He dropped the washcloth into the bowl and moved up her body.\n\n\"Are you okay?\" There was so much concern in his voice.\n\n\"Very much okay. Thanks.\" She smiled, her eyes soft and dreamy.\n\n\"No. Thank you.\" Ty responded and dropped a kiss on Tanesha's lips.\n\nThen as if he couldn't help himself, Ty dropped soft kisses all over her face and neck, and then down to her hardened nipples. His tongue flicked against the sensitive peaks, then he gave them gentle bites, before his mouth surrounded a tender peak and sucked softly. Tanesha moaned brokenly as her body constricted with involuntary spasms. She felt every pull on her nipple directly inside her core, which was getting wet so fast. Her breathy moans filled the room as Ty moved down her body, teeth nipping her skin till his wonderful, hot tongue got to her belly button. Shudders of pleasure racked Tanesha's body, her breath coming out harshly as Ty gave that sexy indent on her flat tummy a tongue fuck that made her eyes roll back into her head. \n\n\"Skull...\" She cried shakily, squirming on the bed. But Ty didn't stop his torture. He wanted to worship her body as he should have done in the first place.\n\nTy moved down to drop kisses on each foot, sucking sensually on her toes, before his wet tongue licked up to the back of her knee. Tanesha was going out of her mind at that point. Skull's sizzling breath on her skin was causing havoc on her mind, making her feel hot all over. She was so wet it didn't even feel like she'd been cleaned dry mere minutes earlier. And when she felt Ty's hot mouth moving up her thighs, dropping kisses and tiny bites on her inner thigh, Tanesha bit her lip to stem her cry of need.\n\nShe opened her eyes to look at the man driving her insane with desire and promptly moaned when she found Skull's eyes locked on that intimate, desperately aching part of her body. Tanesha instinctively tried to close her thighs but Ty stopped her. \n\n\"Oh God.\" Her glazed eyes widened as she felt herself get even wetter. \"Skull please...\" Came a breathless plea from Tanesha. The man was driving her mad. It was pure torture. \n\n\"Please what, baby?\" Ty didn't take his eyes off the beautiful sight in front of him for even a second. He wasn't normally into going down on women but at that moment, he felt he would probably die if he didn't taste that juicy, swollen and throbbing button that was standing proudly and invitingly inside Tanesha's slick folds. He leaned further down and blew softly on her throbbing clit, loving how it quivered captivatingly.\n\n\"Oh my God, Skull don't torture me please.\" Tanesha cried shakily. The mere feeling of Skull blowing on that bundle of nerves found her spiraling into incredibly hot sensations.\n\n\"No torture, Babes. Just giving you what you deserve.\" His wet tongue came out to lick her drenched slit in one long, pleasure-filled stroke. \n\n\"Ahh...Please...\" Tanesha moaned brokenly as she squirmed on the bed. She could feel her orgasm building already...could taste it. She wanted it. It didn't even occur to her to shield herself from Ty anymore. She was so lost in lust and desire there was no room for shyness or shame at that point. \"Please Skull...\" She almost sobbed.\n\nThe sound of her plea evoked such an intense feeling of masculine pride in Ty he growled. \"Damn, I love it when you beg like that.\" He dove in and closed his hot mouth around her clit. That was all it took for Tanesha to lose it.\n\n\"Oh. My. God.\" Tanesha screamed as a powerful orgasm tore through her. Her back arched, hands clenched into the sheets and her heels sunk deep into the mattress as her orgasm rolled through her. Ty didn't stop. \n\nThroughout and after that first orgasm, Ty kept that engorged, pulsing button in his mouth, sucking for all he was worth, delivering indescribable pleasure. He licked, sucked, lapped, laved and did all together, totally reducing Tanesha to a quivering mess, obliterating any coherent thoughts that she might have had and was likely to have for quite some time. The forks of electricity racing over her flesh and within her body were more intense than the lightning flashing outside. Obviously, when Ty got around to giving, he gave it all. His hands gripped her hips, held her in place against the bed and his wicked mouth as he ravished her. Ty would have smiled with triumph if he could, when Tanesha bent her knees, unashamedly and wantonly, parting her thighs further and allowing him better access to her intimate flesh.\n\nTanesha lost track of the number of times she climaxed. They began rolling into each other, sweeping her along in a tidal wave. She felt herself dissolving, losing all thoughts of everything but Skull's tongue. Her hands moved down to tightly hold Ty's head as gasps, cries and screams tore out of her throat. Her whole body was covered in a film of sweat, her insides drawn taut as the ecstatic feeling kept tearing through her. Ty took her orgasm from her as easily as though he knew her body even better than herself. And Tanesha allowed him, totally letting herself go, losing all control of her body and emotions. She could do nothing more than writhe and moan beneath him, her temples and cheeks wet with sweat and tears as she gasped for breath. There was no doubt at all that Ty was a splendid lover but Tanesha knew she couldn't take anymore. Surely too much of all that pleasure couldn't be healthy, she thought. \n\n\"I can't take any more, Skull.\" Tanesha sobbed, wanting to push his head away from her but her limbs wouldn't obey her. \"Plea...\" She gasped as another orgasm crashed through her. \"Oh my God... Skull...\" She screamed as she jerked against his mouth in mind-numbing pleasure, totally unraveling. It was too much. The pleasure. It felt like she was flying...was like totally losing touch with her being. Almost as though she was having an out of body experience. It was rapturous, consuming and...terrifying. She wasn't prepared for the onslaught of such bliss. \"Enough...\" Tanesha gave an ear-splitting scream.\n\nTy slowly raised his head when he heard Tanesha's desperate scream. It finally penetrated his brain that Tanesha had had enough. Immediately his head came up Tanesha tried to curl away from him, crossing her legs in the process. And that was all it took to come undone again. With a hoarse cry of his name, her entire body convulsed in fierce tremors as utter bliss exploded through her. Ty moved up her thrashing body, totally ignoring his own hard-on. He gathered Tanesha into his arms and just held her, knowing in his heart that he had never enjoyed being with anyone more. \n\n\"I have never tasted anything so good, Tan.\" His rough whisper sounded tortured. \"You taste absolutely amazing, baby.\" Ty sounded reverent, totally floored with the intensity of feeling whirling within him for the woman in his arms. He gently wiped the tears and sweat off her face with the edge of the comforter, noting how drained Tanesha looked. Flooded with sensations, all Tanesha could do at that point was whimper shakily. She was still in a daze, had totally lost her bearings. \"Your body is so beautiful and sweet, I don't think I can ever get enough of you darling.\" And Ty had never meant anything more.\n\nTy kept murmuring sweet nothings in between kisses, till he felt Tanesha's breathing even out, indicating that she was asleep. But when Ty made to pull away to go and switch off the light, Tanesha tightened her hold on him with a whimper. Ty gave up and pulled the covers over their bodies. He breathed her in, allowing the sweet fragrance of her strawberry shampoo that he'd come to associate with her, intoxicate him. Ty dropped a soft kiss against Tanesha's mouth, knowing he was dangerously close to becoming addicted to not just things about Tanesha, but the human being as a whole. \n\nFuck! \n\n***\n\nTanesha slowly came awake the next morning to the feel of fingers stroking through her hair. It felt so good she moaned, unconsciously moving closer to the body beside her, seeking warmth. Sounds of rains and thunder penetrated her consciousness, causing her to come completely awake. Then all that had taken place the night before came flooding her mind, causing her to shiver with remembered pleasure.\n\n\"Oh God.\" She breathed, suddenly dreading facing Skull. \n\nIt took quite some time for Tanesha to open her eyes, and when she did, she saw the most sexy smile on the face of the sexiest man she'd ever seen. The smile was so beautiful Tanesha found herself smiling back.\n\n\"Hey, sleepyhead.\" Ty murmured huskily. He was so hard...an uncomfortable situation that even a cold shower hadn't been able to fix that morning. \"How'd you sleep?\" He asked, rubbing a thumb against Tanesha's lower lip.\n\nTanesha snuggled closer to Ty, hiding her face under Ty's neck. \"Okay.\" She murmured. \"You showered.\" She muttered almost accusingly, making Ty laugh softly.\n\n\"Yes. I had to.\"\n\n\"You smell divine.\" Tanesha moaned, wrapping her arms around Ty, who was in jeans and a t-shirt that clung to his body like a second skin. The man was so sexy it was sinful.\n\n\"You have to eat.\" Ty murmured and then laughed softly when Tanesha groaned. \"How are you feeling?\" He asked quietly. \n\nTanesha knew exactly what he meant. She burrowed her face even more under Ty's neck, with an embarrassed groan. \"I'm fine.\"\n\n\"Sure?\" He sounded doubtful.\n\n\"Uh-huh.\" She nodded. \"Well I do feel sore but...it's not too bad.\"\n\n\"I'm so sorry I was rough on you.\" Ty murmured, though he could have bet his last cent he hadn't been rough. \"If I'd known you were a...ugh... Never mind, I'm going to run you a bath.\" Ty rasped and rolled out of the bed. But Tanesha's hand shot out to grab his wrist before he could move away.\n\n\"Don't beat yourself up.\" She said softly. \"I could have asked you to stop but I didn't. I...I loved it.\" Tanesha lowered her eyes, embarrassed at admitting to Skull just how much she'd liked what they'd done. \"Tell me...is it always that good?\"\n\nTy was stunned for about two seconds, and then he burst into laughter. \"It is always good when the two people involved are in sync with each other.\" He said when he stopped laughing. \"And I'm glad you loved it.\" He said softly, tangling his fingers into Tanesha's hair. \"I loved it too. But then you already knew that.\" He gave a mock growl, drawing laughter from Tanesha. \"Come take a shower so you can eat your food before it goes cold.\" He said as he left her side for the bathroom.\n\nTanesha watched Ty go and gave a sigh of contentment. She knew she was opening herself up to be hurt but she couldn't help how she felt about the man. She simply adored him. Call it Stockholm syndrome or whatever but she didn't care a hoot. Skull rocked her to her very soul. And she wasn't sorry she was allowing herself to embrace it at all. Maybe that was the only time in her lifetime that she was going to experience that kind of intense feeling. Maybe like Rose in Titanic, her time in the clutches of her captors was her only chance of feeling what most people never got the opportunity to feel in a lifetime. Tanesha also knew that despite the fact that Skull was her kidnapper and in effect a criminal, he cared for her a little. His actions showed he had a good heart. Yes, it could be that he was acting that way just to get inside her pants. But the question was...did he really need to? As her captor, he could have chosen to take her against her will after all. Tanesha didn't care what the consequence was going to be but she vowed to herself that she was going to make the most of what she'd found even though it was at the least expected place.\n\nAnd with that resolve in mind and a naughty smile on her face, Tanesha got out of bed naked, and boldly walked towards the bathroom where Ty was, running her a bath. She couldn't wait to see the look on his face. \n\n***\n\nLt. Tyler Tyron Wesley walked slowly towards the house he was currently lodging in with five criminals, one 'innocent' criminal and a beautiful woman who made his heart melt with feelings he couldn't begin to explain whenever he thought about her. He was terrified. Not because he more than liked Tanesha, his charge, but rather because he'd just confirmed that in three days, everything was going down. He'd never felt so shaken in the middle of a mission since he became an Arrowhead. Dread or terror was definitely not in Lt. Tyler Tyron Wesley's vocabulary as he especially loved the excitement that came with the climax of a mission. Everyone knew that. But for the very first time, he was scared shitless. And it was all because of Tanesha. He'd made the mistake of allowing himself to grow attached to his 'task'. She'd come to mean so much to him he simply couldn't help but worry about her. What if something went wrong? What if he wasn't able to save her? What if he got killed before he could get her out? What if...\n\n\"Oh fuck!\" Ty growled. He couldn't live with himself if anything happened to Tanesha. He was going insane just thinking about the possibility. Ty knew he'd fucked up real bad but also knew that the harm had already been done. Tanesha meant everything to him.\n\nHe'd received word from his people that all the culprits in the Jamaican government had been identified and the Arrowheads were standing by to make the necessary arrests. They couldn't rely on the authorities in the government to do that since some of them were involved. Ty had been thrilled to hear that as it meant Tanesha would be off that Island and back home in the next five days. But then he'd called Ghost to give his usual bullshit update and had been shocked to learn that Ghost was planning a trip to the Island. He was going to be there in three days. According to the Head of ZONKAI, their client was to be made Prime Minister in just a week. So he wanted to be on the Island with their worm...just in case something went wrong and they had to take some drastic decisions. Of course everyone knew what that drastic decision would be. Tanesha's head on a stick. \n\nBut three days? Fuck! The Arrowheads were going to be on the Island in five. There was no way in hell Ty was going to allow Tanesha to be in the same house with Ghost and his beasts. Plans had to change, Ty thought grimly as he dialed his Admiral with the latest information. Ty did clearly remember Ghost's promise to his men the last time they were on the Island. He'd promised they could fuck Tanesha on their next visit. Ty's heart pounded so hard he feared he was getting a heart attack. He wanted Tanesha off the fucking Island. With the news of Ghost's impromptu presence on the Island, the Arrowheads quickly decided to send a team to the Island as early as the bad weather could permit. Ty prayed it would be before Ghost and his killers got there. All he needed was to get Tanesha out of the way in order to face Ghost himself. His plan of taking him back dead or alive still stood. Till the Arrowheads got to the Island, Ty wasn't a happy man at all.\n\n***\n\nTanesha looked at Ty from her perch on the bed. The guy looked shaken. He sat on the couch with his head in his palms. It was obvious that something was bothering the man big time. He'd barely looked her way when he entered the room. He'd simply dropped onto the couch and assumed that miserable position. Tanesha wondered what was wrong with her man. Yes, that was what she was calling him in her head after their steamy encounter two days earlier. It still brought a smile to her lips.\n\nSince that day, Tanesha and Ty had spent every moment with each other. Ty couldn't go out much because of the storm, which according to the locals, could go for days. They hadn't had sex again after that first time as Skull seemed to be holding back, much to Tanesha's surprise and displeasure. She wanted him; ached for him all the frigging time. They did however kiss and fondle each other a lot...nothing heavy though. What thrilled Tanesha was how much they'd grown closer within the two days after blowing each other's minds. They would just stay in bed and talk about everything and nothing. Tanesha told Ty about the blast she'd had growing up as an only girl, and how challenging and downright stifling it had been, having to be the daughter of a Prime Minister. Ty hadn't said much about himself but that was understandable. Tanesha hadn't pushed him. She'd however asked him simple things like his favourite food, colour, attire and stuff like that. She'd once asked him what the rationale behind his tattoo was. Ty had answered that he didn't want to talk about it. He'd told her at one time that he had seven very close friends that he loved like blood brothers. He hadn't said much about them however. All he'd said was that they were a crazy bunch who would go to great lengths just to help each other. \n\nTanesha found herself falling more and more under Skull's spell each day. He was all she could think about. She'd surprisingly forgotten that she was actually his prisoner. As far as she was concerned, nothing mattered but Skull. She was probably going to regret it later but...fuck it, she was happy.\n\n\"Are you okay?\" Tanesha asked softly as she placed the magazine she'd been reading on the bed. She knew Skull could probably not be able to tell her what was wrong but she still needed to ask...let him know that she was there for him.\n\nWhen Ty groaned without looking up, Tanesha's heart went out to him. She got off the bed and made her way towards Ty. When she got to him, she drew his head out of his palms and pushed him back so that his back touched the backrest of the couch. Then she climbed onto his thigh, straddling him. She leaned against him and began to scatter kisses all over his face.",
        "\"What can I do to make it better?\" She murmured in between kisses.\n\n\"Just having you in my arms is okay for me.\" Ty responded huskily, wrapping his arms around Tanesha's tiny waist. \n\n\"Hmm...I can do that.\" She murmured, cupping the sides of his face in her hands. Then she leaned in and covered his mouth with hers. She kissed him slowly, leisurely licking and tugging on his bottom lip, coaxing him to forget about what was bothering him. But the teasing strokes of Tanesha's tongue only succeeded in arousing Ty.\n\n\"You do know how to get a man in the mood, little girl.\" Ty growl hungrily as he pushed a hand into Tanesha's hair. Then holding her still, he took over the kiss and devoured her. \n\nTy poured all his frustration and emotions into the kiss. His tongue plunged forcefully into her mouth, mating with hers. Tanesha's tongue met his just as aggressively, dueling with his, drawing him deeper, caressing over him. She loved his taste. And when Ty began to suck erotically on her tongue, Tanesha went berserk. She groaned against his lips, needing more. Tanesha rocked against Ty, feeling his rock hard cock beneath her. She needed Skull...was desperate for him. It suddenly felt as though her body needed a fix.\n\nTanesha tore her mouth from Ty's, giving a loud lustful moan when his mouth latched onto the sensitive spot on her neck. \"I want you, Skull.\" Tanesha moaned, tilting her head to the side to give Ty better access. \n\nTy reached up and tore Tanesha's tank top down the middle, releasing her succulent braless breasts. With a growl he captured an aching nipple in his hot mouth and sucked hard, whilst pulling on the other with his fingers. Tanesha threw her head back in pleasure, unable to suppress her cry of utter pleasure. But for Ty's arm around her, she would have fallen off his lap. She rocked her hips harder, wishing her leggings and panties would just disappear.\n\n\"Skull...\" Tanesha had never wanted anything so bad.\n\nShe pulled Ty's head from her swollen nipple and slammed her mouth on his. And even as she kissed him, her hands moved down to undo his zipper. Then she rose onto her knees to enable Ty lift his hips and yank down his jeans and boxer briefs...but not before taking out his penknife from his pocket. And when his pulsing erection was finally released, Tanesha couldn't suppress her gasp.\n\n\"God, you're huge.\" She breathed, staring down at the leaking tip of Ty's cock. \"I wish I could take it in my mouth.\" She whispered, licking her lips hungrily. \n\n\"Maybe another time, baby. I'm dying to be inside you right now.\" Ty rasped as he opened his penknife. But then immediately his hand touched the juncture of Tanesha's thighs, he stilled. \"Are you okay?\" He asked huskily, wanting to know whether Tanesha was healed enough to take him again.\n\n\"Yes.\" She replied eagerly. \n\n\"Get up on your knees.\" He instructed huskily. Without wasting any time, Ty cut through the layers of fabric covering Tanesha's slit in one fluid move, exposing Tanesha's tight wet mound. \"So wet.\" Ty murmured as he placed the wide crest of his cock between the lips of the tightest pussy he'd ever had the pleasure of fucking.\n\nTy rubbed his hardness back and forth, coating it with Tanesha's slickness. He captured Tanesha's lips in a hot kiss, drinking in her erotic sounds as he began to slowly push into her heat. He could feel himself quivering. That tightness and exquisite heat was blowing his mind. He had to restrain himself from slamming up into Tanesha. The effort that took was legendary. When he finally felt Tanesha's butt on his thighs, he threw his head back and let out a hoarse cry.\n\n\"Fuck, you feel amazing.\" Ty gasped, leaning his forehead against Tanesha's, both staring into each other's eyes, lips parted as they breathed harshly. He held still so Tanesha could adjust. \"Baby, tell me you're okay.\" He husked.\n\nTanesha's eyes fluttered close, her mind and body centered solely on that long and think flesh filling her so pleasurably. She dug her knees into the seat and reached out to hold Ty firmly on the shoulders. Then she opened her eyes and stared into the beautiful blue eyes of the man she knew without a doubt she'd fallen for.\n\n\"I'm going to ride the shit out of you.\" Tanesha breathed. \"Brace yourself.\"\n\n\"Oh fuck.\" Ty was floored by those unexpectedly dirty but sexy words. \"If you talk like that, I can't promise to hold back.\"\n\n\"Who said anything about holding back?\" Tanesha purred breathlessly, slowly lifting off till only the head of Ty's cock remained inside her. She didn't slide back down...she slammed down.\n\n\"Holy hell!\" Ty gasped, shocked that Tanesha had actually taken him to the root in one smooth, ram. \n\nAnd ride him, Tanesha did, her breasts bouncing wildly with every movement. It was a little bit uncomfortable for Tanesha initially due to Ty's girth, but it got easier the more she fucked herself on that big cock as it got very slick from her wetness. Gasps and moans tore out of Tanesha as she pumped her hips up and down. Sexily undulating her hips, she took her pleasure, driving Ty out of his mind in the process. At a point, he lost his cool. Tightly gripping Tanesha around the waist, Ty lifted his thumb to his mouth and licked the pad, and then he reached between them and began to skillfully rub her clit. \n\n\"Skull...\" It was a breathless cry, which turned into an ecstatic scream when Ty latched onto a nipple and began to rotate his hips. Tanesha couldn't have held in the scream even if a gun had been pointed at her head. It was that mind-blowing.\n\nMuch as that lustful scream thrilled Ty to no end, he knew he had to keep Tanesha quiet before the criminals they lived with came to knock on the door. But just as he released the nipple in his mouth and was about to cover her mouth with his, the door opened to reveal Mickey's concerned face. Shit...he hadn't locked the door, Ty thought as he watched the look of concern on Mickey's face turn first to shock, and then to pure lust. Shit! Why the fuck hadn't he locked the damn door like he always did? But then the last thing on his mind when he'd entered the room was sex.\n\nTy felt Tanesha tighten up on him as she suddenly sped up in her movement and knew she was about to come. Mickey still stood frozen in the doorway but Ty didn't want to interrupt Tanesha's release by telling Mickey to close the door...so he didn't. He rather turned back to the beautiful woman bouncing frenziedly in his lap and felt his own orgasm snake down his spine. Fuck!\n\n\"Oh my God...oh my God...oh my God...\" Tanesha chanted with her head thrown back in sheer ecstatic abandon as she came undone, unraveling around Ty. She didn't notice the presence of Mickey at the door. Neither did she hear his loud gasp. Nothing mattered but the mind-blowing pleasure she was taking from Ty. \n\nSeeing Tanesha come unglued like that was it for Ty. He heard the door shut but he didn't even turn to look at it. \"Get up baby.\" He gasped. \"Tan...\" Ty trailed off when it dawned on him that Tanesha was in no position to move. He determinedly pulled Tanesha off his cock just as he erupted, spilling his load against Tanesha's legging-covered arse. \"Oh fuck.\" He gasped as he jerked in ecstasy. Ty didn't think he'd ever come that much in his life.\n\nHe wrapped his arms around a still panting Tanesha whose head rested on his shoulder. \"If I didn't know for a fact that I was your first, I'd have said you were a pro.\" Ty murmured.\n\n\"Hmm...\" Tanesha couldn't bring herself to think coherently. When she felt Ty stand and head for the door with her still wrapped around him, she didn't even raise her head. She trusted Ty that much. \"Where are we going?\" She mumbled, dropping kisses along Ty's neck.\n\n\"To lock the door.\" Ty responded simply.\n\n\"Hmm... Why bother? It's not like someone will come in here whilst you're here.\" She began to suck on Ty's lobe.\n\n\"Shit.\" He groaned when a shiver ran through him. \"Oh someone did come here alright. Mickey came in whilst...oh baby...\" Ty moaned. \n\n\"Hmm...\" Tanesha continued to suck on that flesh. Then... \"What?\" She screeched, her head coming up so fast she would have fallen had Ty's arms not been firmly around her. \"What do you mean...\"\n\n\"You screamed.\" Ty said as he started towards the bathroom. \"He came to see what the problem was, obviously. 'Skull is hurting the love of my life.' Ty mimicked Mickey so perfectly Tanesha laughed despite herself. \"Only to find the love of his life, riding an angry cock like a professional Bull Rider.\" Ty laughed softly when Tanesha moaned in embarrassment. \"And what a ride that was. Damn!\" \n\n\"Oh my God, I can't believe Mickey saw me like that.\" Tanesha groaned as she allowed Ty to strip off her ruined clothes and panties. \n\n\"And he's never going to forget it too.\" Ty murmured as he started stripping. \"You, my dear lady, are something to behold when you're coming.\" He purred. \n\n\"You're enjoying this aren't you?\" Tanesha slapped Ty on the arm.\n\nHe chuckled. \"Poor boy is probably somewhere this very moment, wanking the shit out of his dick.\" Ty laughed as he leaned down to kiss Tanesha softly. \"You were so fucking hot, baby. Any hot-blooded man would be wanking off to that sight of you for the rest of their lives. I know I would.\" They stepped under the spray.\n\n\"I'd rather I'm there to take care of you.\" Tanesha murmured sexily, taking Ty's semi-hard cock into her hand. \"I want to take care of this.\" She rubbed the semi-hard veiny flesh in her palm. \n\n\"When I'm alone in bed at home, and there's no Tanesha,\" Ty groaned, thrusting slowly into Tanesha's stroking palm, \"I'll need something to work with, wont I?\" Ty said without thinking.\n\nTanesha froze at Ty's words. Just the thought of not being with Skull had her tearing up. She slowly tilted her head up and looked into Ty's aroused eyes, hers welling up. \"I guess I better take care of it whilst I still have it.\" Her voice shook with unshed tears.\n\n\"Shit.\" Ty groaned as he felt his heart break. \"Please don't cry. You have no idea what it does to me to see you cry. Ugh...\" He seemed to realize he'd said too much. That was the closest he'd come to telling Tanesha he cared. He felt so shaken he slammed his mouth on Tanesha's, just to stop himself from saying anything even more stupid. The girl was in his blood.\n\nTanesha coiled her arms around Ty and kissed him back for all she was worth. The kiss got heated so fast neither of them was surprised when Ty picked Tanesha up and pressed her back against the tiled wall. She wrapped her legs around his waist and then locked her feet behind him. Both gave sighs of pleasure when Ty thrust up into Tanesha's eager and aching sex. Ty proceeded to fuck Tanesha with everything he had, reveling in the warmth and tightness of her pussy as it gripped him fiercely. It was languid, passionate, rich and damn sensual. Their gasps and moans filled the bathroom. Ty watched in awe as droplets of water dripped from the taut peaks of Tanesha's beautiful breasts. He'd never seen a more stunning woman. He was totally under her spell and he didn't know how to get away...didn't want to get away.\n\n\"God, Tan, what have you done to me?\" He breathed, burying his face in her hair. \n\nTy gave a low growl when he felt Tanesha clenching, tightening and spasming around his cock. He knew he wasn't going to last. Fuck. Ty leaned in and captured her mouth in a toe-curling kiss. Then even as he plundered her mouth, he thrust deep, expertly rubbing that perfect spot inside her. The mind-scattering sensations that unfurled within Tanesha were too exquisite to contain. She tore her mouth away to take in deep breaths.\n\n\"Skull...\" She gasped. \"Oh my God, what is that?\" She squealed, wrapping her arms tightly around Ty's neck and pressing her temple against Ty's. She was trembling uncontrollably.\n\n\"Ever heard of the G-spot?\" Ty rasped, gently rotating his hips to intensify Tanesha's pleasure.\n\n\"Sweet Lord.\" She gasped. \"The what? Oh God, don't stop. Feels fantast...\" She trailed off as she froze, stuck between that place just before orgasm and the actual explosion. \n\nAnd when the explosion hit, it hit hard. Her body arched, eyes widened as she stared unseeingly, screaming her orgasm for the second time that day. She clenched rhythmically around Ty, the action making her so tight he could do nothing but follow her. With a guttural growl Ty pulled out just in time to spurt straight up in between them. With his head thrown back in ecstasy, he didn't even see where his cum landed...right on Tanesha's chest and heaving breasts. \n\n\"God, Tanesha.\" Ty's voice was low and raspy. He dipped his head and rested his damp forehead against Tanesha's. \"You were fucking made for me.\" He growled. \"Never forget that.\" Then he was kissing Tanesha senseless, wishing he could wave a magic wand and get them in his own comfortable bed in his luxury home where he could make sweet love to her as she really deserved.\n\nWhen they came up for a much needed air, Tanesha uncoiled an arm from around Ty's neck and scooped up some of his cum from her breast with a finger. \"A woman never forgets her first fuck.\" She breathed and then licked the thick cream off her finger. \"Mmm...you taste so good.\" She moaned and then laughed softly at Ty's groan. \"I really want to suck you off.\" She whispered almost shyly.\n\n\"What have I unleashed?\" Ty muttered as he moved to stand under the spray with his naughty woman still wrapped around him.\n\n***\n\nFor the next two days, the 'kidnapper' and his captive fucked their brains out. They couldn't get enough of each other. Ty never thought he could want one woman so desperately. It almost felt as though he was a drug junkie...addicted to Tanesha. He literally couldn't go for an hour without being buried deep inside Tanesha. It was crazy. He craved her constantly and no matter how many times he had her, that craving never receded. \n\nTanesha on the other hand didn't want to be away from Ty for even a second. They took showers together... which always ended in sex anyway. They ate together, talked, laughed and fucked some more. Sometimes they made gentle, slow, sweet love which melted their hearts for each other and other times, it was a frenzied and brutal fucking that left every muscle and joint aching deliciously and yet they wanted more. The day Tanesha finally blew Ty, he damn near went ballistic. And when he flooded her mouth with his thick hot cum, she swallowed every drop. Ty couldn't believe Tanesha had never given anyone a blowjob before. It was that good. \n\nMickey stayed out of their way...and their room whenever Ty was in the house. The next time he saw Tanesha after witnessing that passionate encounter between her and Ty, she'd been so mortified she couldn't meet his eye. But he'd made her feel okay by actually teasing her till she'd ended up laughing.\n\n\"Who thought Miss High and Mighty would actually willingly get off on a 'dick'?\" He gave the word quotations with his fingers. \"Pun intended.\"\n\n\"Oh God...\" Tanesha had groaned, hiding her face in her palm.\n\n\"That was one of your favourite names for him, remember?\" Mickey laughed. \"I must admit I never understood why you thought the man was a dick but hey...the guy must have one hell of a dick to get you that way.\"\n\n\"Mickey...\" \n\n\"No, seriously. I've watched my share of porn, Tanesha. And that was not like anything I've ever seen.\" He threw his hands up. \"Maybe seeing it live made all the difference this time but damn...that was hot as hell. I think I saw you actually drool.\"\n\n\"Fuck you, Mickey...\" Tanesha burst into laughter, throwing the magazine in her lap at a laughing Mickey. \"I wasn't drooling.\" She gushed, wiping tears of mirth from her eyes.\n\n\"Was too.\" Mickey bent to pick up the magazine and went to sit beside Tanesha. \"I'm glad you're having fun, Tanesha. I can also clearly see what has happened.\"\n\n\"What's that?\"\n\n\"You're absolutely in love with him.\" He stated simply.\n\nTanesha's heart pounded but she didn't bother denying the obvious. \"He's such an...amazing guy, Mickey. One minute I hated him with a passion, and the next... I don't know what hit me, honest. I just...ugh...\" Tanesha turned to face Mickey. \"It doesn't make sense.\" She whispered desperately as her eyes welled up. \n\nMickey drew her into his arms and rocked her. \"Shhh...\"\n\n\"I know it's wrong but I can't help it.\" Tanesha breathed shakily as she wiped at her eyes. \"I love him so fucking much.\"\n\n\"We don't choose whom we love, Tanesha. It just happens. So you happen to fall in love with the man you're supposed to hate. Big deal. It was an accident. Totally beyond your control. Just go with it. Don't overthink it.\"\n\nTanesha gave a shaky laugh and nodded. \"I try not to. But sometimes it's so hard.\"\n\n\"Oh it's hard all right.\" Mickey drawled. \"If what I saw yesterday was anything to go by, it was very, very hard indeed.\"\n\nTanesha had laughed so hard she'd broken into a fit of coughs. Ty had chosen that moment to walk into the room. He'd heard Tanesha's laughter from outside. Sending a glare Mickey's way, he'd grabbed a bottle of water from the fridge and actually held it to Tanesha's lips, making sure she gulped some down.\n\n\"Better?\" He'd asked with eyes full of concern. And at Tanesha's nod, he'd pulled her off the couch and into his arms and then kissed her, right in front of Mickey. By the time he broke off the kiss, Mickey was long gone.\n\nAs the final day drew closer, Ty's love making became more desperate. He worshipped Tanesha's body. He wanted to commit every touch, kiss, sound, facial expression and even the orgasms into memory. He knew he might not see Tanesha again. Even if he did, Ty knew it would be wrong to be with her. Hell, he could be discharged if it became known that he'd grown that attached to his charge. It just wasn't accepted. Whether he saved Tanesha or not, he couldn't date her or even befriend her. Those were the rules. He had to stay out of her life. Sometimes Ty had the urge to spill his seed inside her, impregnate her, create a permanent link between them...but he knew he couldn't do that to her. The last thing he would do was saddle Tanesha with such a burden as carrying and taking care of a child without its father. Ty also knew that there was no way in hell he would abandon his kid. Surely the Force would make an exception if there was a kid involved...right?\n\nThe night before Ghost and the Arrowheads were to arrive on the Island, Ty was so tensed up he couldn't even manage an erection though they were both naked in bed. He held Tanesha so tightly in his arms, she asked him for the umpteenth time whether he was okay.\n\n\"No, I'm not.\" He finally growled, burying his face between her breasts. His hard body quivered violently.\n\n\"Oh baby, what can I do to help?\" By an unspoken agreement, they never spoke about his 'job' or her fate.\n\n\"Just hold me, and never let me go.\" His hoarse words were muffles against her breasts but she heard him perfectly.\n\n\"With pleasure.\" Tanesha murmured as she wrapped her arms around his head, holding him against her. \n\nTanesha had the shock of her life when she felt a hot wetness slide over her breast. She didn't need to ask what it was. She just knew that Skull was crying. Tanesha couldn't help but wonder what could reduce such a fierce man to tears. She didn't bother asking...she simply held him, nuzzling her face against his low cropped head as she sang softly...soothingly. She didn't know why the words in Estelle's 'Conqueror' felt appropriate at that point but they did. The fact that those words applied more to her because of what she was going through at that point in her life...being kidnapped and all...wasn't lost on her. Tanesha sang till she heard Ty's even breathing. Then she gently placed his head on a pillow and pulled the covers over them. She reached up and wiped his tears off his face, taking the rare opportunity to study his face, unguarded and relaxed in sleep. Tanesha couldn't help but ",
        "notice how young, peaceful and vulnerable Skull looked in sleep. He looked totally different from the Skull who radiated so much power and authority when he was awake. She also couldn't help but acknowledge the fact that despite that silly tattoo...which was obviously there to put the fear of God into people...Skull had a gorgeous face. Tanesha gave a low groan when she realized she was actually smiling. She didn't need to be told she had it real bad. She loved the man so damn much it scared her sometimes. With a sigh, Tanesha pressed a soft kiss on his chin and snuggled closer to him, enjoying the feel of his naked body against hers. He felt amazingly good. She eventually drifted off to sleep with a smile on her face. \n\nTanesha woke up at dawn to Ty's mouth on her slit. She cried out in surprise as he latched onto the nub hidden between her folds and sucked hungrily. Erotic moans tore out of her throat as he ate her hard and fast, his tongue pushing deep into her slick pussy. \n\n\"Ahh...Skull.\" Tanesha writhed in pleasure, her core clenching and releasing with the first tingles of orgasm. When she felt Ty's teeth, gently biting down on her clit, she came in a violent rush, her lungs burning as she fought for breath. \n\nTy's lips remained on Tanesha throughout her release, licking her clean. But before she could come down completely from her high, he flipped her over onto her belly and yanked her hips up. Tanesha thought she knew what was coming. But it was nowhere near what she expected. She gasped in shock when she felt Ty's breath against my butt. A surprised cry tore out of her throat when she felt the tip of Ty's wet tongue on that puckered hole that she had no idea could be pleasured in that way.\n\n\"Oh my God, Skull...\" She cried out in surprise, totally confused at the sudden rush of intense pleasure that slammed through her. But she didn't try to stop him. They were definitely past the embarrassing stage. Even if they weren't, Tanesha didn't think she could have stopped Ty. He was wild and ravenous...a man on a mission.\n\nTy rimmed the fuck out of that sexy arse, strumming his fingers against her aching swollen clit the whole time. By the time he felt Tanesha was loosened enough to accept his thumb, she was a quivering mess, the pillow on which her head rested, wet with sweat. When Tanesha felt Ty's surprisingly wet thumb push slowly into her tight rosette, she relaxed and opened up to let him in with sexy whimper. \n\n\"Oh my God, that feels so good.\" Tanesha breathed, suddenly needing Ty's thick cock inside her empty pussy. God, she ached. \"Skull I...\" But she trailed off when she felt the wide head of Ty's cock rubbing at the entrance of her pussy. Tanesha had run out of patience at that point. She rocked back onto that hard flesh, impaling herself on Ty.\n\n\"Fuck!\" Ty bellowed as the tight heat engulfed him...flexed around him. He completely lost control.\n\nTy showed no mercy. He took her hard, fast and deep. With his thumb in her arse and his cock deep inside her hungry core, Tanesha felt so gloriously filled. Her cries grew louder and louder with each thrust, spurring Ty on to thrust harder, deeper and faster. He watched his cock slide in and out of her and thought he had never seen a more beautiful sight. When he reached beneath Tanesha and stroked her clit, she went berserk. \n\n\"Skull!\" Tanesha screamed into the pillow, her entire body shaking uncontrollably. \"Please don't stop.\" She writhed beneath him in ecstasy. Then... \"Oh God, you have to stop.\" She gasped, rocking back wantonly against Ty, fucking herself on his thick length, taking him deep...completely contradicting herself. \"So good.\" She whimpered breathlessly. \n\n\"Oh fuck baby.\" Ty's eyes widened in surprise as he watched Tanesha shamelessly fuck herself on his cock. It was the hottest sight ever. Her movement would put a porn star to shame Ty couldn't help but think. She was a natural when it came to fucking. \"Christ!\" Ty gasped when Tanesha began to gyrate her hips whilst tightening up her pussy muscles. \n\nTy didn't know what hit him. He cried out in shock as an intense orgasm shook him unexpectedly. It totally took him by surprise. Ty erupted inside Tanesha even as he heard her scream her release. His mind went numb with utter bliss. At that point, pulling out of Tanesha was not an option. The bed they were in could have caught fire and Ty wouldn't have noticed. He buried himself balls deep inside Tanesha, riding out the contractions of Tanesha's muscles, his head thrown back in deliciously erotic abandon. Coming inside Tanesha was like nothing he'd ever experienced. It was amazingly exquisite. \n\n\"Oh fuck, fuck.\" Ty gasped shakily, grabbing Tanesha firmly around the hips to stop her gyration. \"God!\" He yelled, still spurting hotly inside Tanesha. \"Oh God, Tan, what are you doing to me? I can't stop coming.\" His entire body shuddered and trembled. \n\nTy pulled Tanesha up so that her back was plastered against his front, his cock still hard and embedded inside her tight heat. He turned her head and captured her mouth in a kiss so sweet it brought tears to Tanesha's eyes. He kissed her with loving reverence. \n\n\"I've never had an orgasm this intense in my entire life.\" He husked when they came up for air. \"You're amazing.\" With that heartfelt praise, Ty pulled out of Tanesha and turned her to lie on her back. Then he slipped back into her tight cum-filled heat and made mad sweet love to her. \n\nBy the time morning broke, Tanesha had lost count of the number of orgasms she'd had and Ty knew he would probably be dehydrated by the amount of cum he'd released into Tanesha's body. Yes, he hadn't bothered pulling out again. Why bother, he'd asked himself. As the saying went, 'what will be will be'. Tanesha getting pregnant only meant he had to be with her...right? But Ty knew within his heart that even if she didn't get pregnant, he would fuck the odds and be with her. What was the worst that could happen? He would lose his job. Big fucking deal. He didn't need the money because he was a multimillionaire. So fuck their rules. He just prayed that everything would go according to plan with the mission. He would go back home, wait to be debriefed and then talk to his Admiral. If they played hardball, he would simply quit. He was definitely going to miss all the excitement he loved about the force but...some things were more important. They would probably say he was thinking with his dick. But he knew better. \n\nAs they took a shower that morning, Tanesha couldn't help but wonder what was going on with Skull. The man cried the night before in her arms, then he'd woken her up at dawn to fuck her brains out...fucked her like a man possessed, then for the first time since they'd started being intimate, he'd actually spilled his seed inside her...which had felt absolutely amazing, and then in the shower, it felt like he couldn't stop holding her. The way he'd taken her that dawn had definitely been different from how he'd taken her so far. His lust was frantic and insatiable, his need tinged with a desperation that had frightened her with its level of intensity at some points. It had almost felt like a good-bye. There was no doubt about the fact that Skull had blown her mind from dawn till that morning. But she couldn't help but feel something was terribly wrong.\n\nWhen then got back into the room, Ty made Tanesha wear jeans and a t-shirt. Then he dressed in black jeans and a black t-shirt and pulled on a black cap. Tanesha thought Skull looked insanely sexy and extremely fuckable. \n\n\"Oh God, you're hot!\" She murmured, wrapping her arms around Ty from behind. She laid her cheek on his back and just held him. \"Skull?\" Tanesha called softly.\n\n\"Uh-huh?\"\n\n\"Are you going away?\" Tanesha asked quietly.\n\nAfter a moment of silence, Ty turned around and took Tanesha's hand into his. \"Come here.\" He drew her to the couch, sat down and pulled her into his lap. \"Do you trust me, baby?\" He asked urgently.\n\nTanesha didn't even hesitate. \"Yes.\"\n\nTy made a mental note to advise her not to trust so freely. At that moment though, her trust was all he had. \"Good. Now listen to me very carefully.\" Ty began with all seriousness. \"Ghost is coming in today.\" Ty felt Tanesha stiffen at that information. \"In fact he will be here this morning. I want you to do exactly as I tell you whilst he's here. Do you hear me?\"\n\n\"Yes.\" Tanesha whispered.\n\n\"Don't try to escape even if you have the chance unless I tell you to. And if I tell you to, run as fast as your legs can carry you. Do I make myself clear?\"\n\n\"Skull, you're scaring me.\" Tanesha whimpered, looking into Ty's frustrated eyes. \n\n\"Good. It's good to be scared. Let that emotion guide you. Don't trust anyone but me. Remember the route we used the other time when we went for the walk?\"\n\n\"Yes.\"\n\n\"When I tell you to run, take that route. Do you hear me, Tanesha?\"\n\n\"Yes, yes. God, what is going on?\" Tanesha was dying of worry.\n\n\"Nothing to worry yourself over. Just do as I say all the time. And if I come across as mean whilst they're here, just go with it. Don't act surprised. Am I making myself clear?\"\n\n\"Yes.\"\n\n\"Good. After you've had your breakfast, lock yourself in here. Don't open the door to anyone but me. Alright?\"\n\n\"Alright.\"\n\n\"Great.\" Ty murmured and slipped his hands into Tanesha's hair to hold her in place whilst he ravaged her mouth with desperate kisses. \"Fuck.\" He swore when he released her lips. \"If anything happens to you I'll just die.\" He rasped. His grip on Tanesha at that point was excruciatingly tight but she didn't complain. It was obvious to her that Skull was scared for her. And that only made her fall even harder for the guy.\n\n***\n\nTy watched as Ghost's chopper landed. Surprisingly, he felt calm. He was in what everyone who knew him in the force called, his 'kill mode'. No one fucked with this Ty. Tanesha was locked inside his room for now, with the windows locked and the already locked door blocked with a chair. He'd taught her how to position the chair so that even if someone was able to unlock it from outside, they wouldn't be able to open the door. He hoped the Arrowheads would put in an appearance soon. Till then, Ty hoped he could continue deceiving Ghost and his pack of wolves. After all, Ghost had shown no indication when they last spoke, that he was suspicious of him or had a problem with him.\n\nGhost stepped out of chopper, followed by six fierce looking men. Ty made a quick calculation. There were eight men in the chopper...the six plus Ghost and the pilot. Then with him in the house were Donk, Shark, Jess, Mickey and the two fools who replaced Polks and Heat. That meant he had fourteen men to deal with. Ty knew he wouldn't blink an eye when it came to killing all of them to save Tanesha. Mickey, he hoped would be reasonable. After all, he was in love with Tanesha. \n\n\"My friend.\" Ghost extended his hand to give Ty a firm handshake when they got to where Ty stood on the porch.\n\n\"Hope you had a good flight.\" Ty said, turning to open the door for them to enter.\n\n\"It was great.\" Ghost answered with a devilish grin as he took a seat at the big oval table. \"I couldn't wait to get here and get down to business.\"\n\n\"Good.\" Ty said, taking the seat opposite Ghost. \"You guys need something to drink?\" Ty didn't miss the threatening stance of the six criminals who had come in with Ghost. He made a quick note of where each criminal stood. They had no idea who they were up against, Ty thought calmly. \n\n\"That won't be necessary.\" Ghost waved his hand. \"Our client claims he has a feeling something is going on, he's worried, blah, blah, blah. They all get scared at a point.\" Ghost laughed. \"Pussies. That's not why I'm here though. Three of my human trafficking units got busted. None of my men survived.\"\n\n\"Wow.\" Ty said with a blank face. He would have smirked if he could. Insisting the Arrowheads bust Ghost's human trafficking operation had been a dangerous move on his part. But Ty had just wanted those kids to the rescued. He knew he would make the same decision again any day. \"That's rather serious.\"\n\n\"And very strange.\" Ghost chuckled. \"You see, the way they got busted was very...what's the word? Meticulous. Looks like the Feds had the exact information to conduct their operation. I was devastated. Have any idea the money I've lost?\" Ghost tilted his head and gave Ty a questioning look.\n\n\"I can imagine.\" Ty relaxed into his seat, his eyes fixed on Ghost.\n\n\"I couldn't fathom how that had happened as no one knew about the deal. It was just between myself and my contact in India. Poor man died of a heart attack when he heard the news. Very sad indeed. He was a good man.\" Ghost shook his head slowly, a mockingly solemn look on his face. \"So there I was, wondering how the deal could have gotten out. Then it hit me...I told you all about it the last time I was here.\" Ghost's face hardened. \"In fact you even gave me pointers. Told me the best route to use, where to dock and who to contact.\"\n\nTy resisted the urge to groan. Much as he didn't regret what he'd done...saving those kids had been paramount as far as he was concerned...Ty couldn't help but think the chickens had come home to roost.\n\nShit!"
    ],
    "authorname": "adjoaq",
    "tags": [
        "storm",
        "tanesha",
        "kidnap",
        "bathroom",
        "virgin",
        "desire"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/sizzling-embrace-ch-04"
}