{
    "title": "Life after the Lottery Ch. 45",
    "pages": [
        "This is the second part of chapter 44, the time I spent with Samantha. Now I get to the good parts! Thank you for reading and I ask that you become a member of Literotica.com, the writers all like to hear from members.\n\n*****\n\nWho's knocking on the door? \n\nI opened the door to find a couple that appeared to be in their fifties standing there naked.\n\n\"We just wanted to say thank you,\" the nice looking older lady said.\n\n\"Come in out of the hall,\" I told them. They walked in and I closed the door.\n\n\"Thanks for the entertainment, it was wonderful,\" she said.\n\n\"You are welcome.\"\n\nThey looked over at Sam, she was lying on her side looking at them. \n\n\"Oh, sorry. I hope we didn't embarrass you two. I'm Gary and this is my wife Helen.\"\n\n\"Nice to meet you Gary, and it is really nice to meet your lovely wife,\" I said as I looked her over. \"You two have a seat.\"\n\nThey smiled and walked to the sitting area and sat down. I tossed my towel on the bed and walked over and sat on the small sofa.\n\n\"I'm James and that is Sam. We enjoyed listening to you two also. Sounded like you were having a great time.\"\n\n\"We just came in from dinner, and while we were getting ready for bed, we listened to all of the screaming from in here and we got turned on,\" Helen said.\n\n\"I am glad we could be of service. Sam, you want to join us?\" I said.\n\nSam slipped off the bed and walked to the sofa and sat with me.\n\n\"Sam, what had you so turned on and screaming, may I ask?\" Helen said.\n\n\"He had me tied up and blindfolded and was running ice cubes all over my tits. When he went down on me with a mouth full of ice, I went crazy.\"\n\n\"Oh that sounds like fun,\" Helen said.\n\n\"Would you two like a drink, I have just enough champagne left for four glasses.\" I asked.\n\n\"Sure,\" Gary said.\n\nI got up and got the bottle of Cristal from the fridge and four glasses and poured all of us a glass.\n\n\"Here you go.\" I handed out the glasses.\n\n\"We didn't know what you would think with us knocking on your door in the middle of the night naked,\" Helen said and sipped her champagne. \"Oh this is good.\"\n\n\"We just thought you two would probably understand,\" Gary said.\n\n\"You know there is a security camera in the hall, don't you?\" I asked.\n\n\"We don't care,\" Gary said. \"We travel all over the world and get caught fucking in places we shouldn't be.\"\n\n\"You sound like our kind of people. Do you two live here?\" I asked.\n\n\"No, Houston. We are on vacation for a month.\"\n\n\"Gary, what do you do?\" I asked.\n\n\"Semi-retired. My son runs the oil company now. How about you?\"\n\n\"Sort of retired. I am a psychologist.\"\n\nGary and Helen looked at me curiously for a minute.\n\n\"I am treating Sam to some quality time away from the house.\"\n\n\"It sounds like you two are enjoying it!\" Gary said and laughed.\n\n\"Oh I am. He is going out of town for the next two weeks. I needed him to fuck me enough to last me,\" Sam said. I wanted to laugh. Helen looked at her and smiled.\n\n\"Gary used to travel a lot and leave me to my own devices. Years ago, I told him I was going with him on his trips so he could take care of my needs,\" Helen said with a big smile. \"Why don't you go with him, sweetie?\"\n\n\"He is going to be traveling all over the country and overseas for the next two weeks to do some consulting work for a friend of ours.\"\n\n\"That sounds like a lot of hard work, James, won't you miss Sam?\" Helen asked.\n\n\"I will take care of Sam when I get back.\"\n\n\"Well, if you don't get your needs met, don't get in trouble while you are gone, James!\" Gary said with a boisterous laugh.\n\n\"I'm sure our friend will meet his needs, she is stunning.\" Sam said as she sipped her champagne. Gary's laugh died down.\n\n\"I see. There must be a lot of fringe benefits working for this other lady,\" Gary said.\n\n\"There are, I'm sure they will be fucking each other senseless for two weeks.\" Sam told them.\n\n\"And you don't mind if he goes with her?\" Helen asked curiously.\n\n\"I don't mind, she is a nice. I'm surprised his wife is letting him go though.\"\n\nHelen looked at Sam closely.\n\n\"His wife? You are not his wife?\" She asked.\n\n\"Not really.\"\n\nSam was being a tease now. Helen still had a curious look on her face.\n\n\"Not being nosey, but does your wife know you are here with her?\" She asked me.\n\n\"Oh yes, but she is having a good time at the house with Sam's sister,\" I said to see what happened.\n\n\"Oh, I see,\" Helen said.\n\n\"Excuse me a minute, I need to go clean all this cum of me,\" Sam said as she looked down and spread her legs and ran her fingers through the still wet come. She got up and walked to the bathroom while she sucked on her fingers.\n\n\"Your friend is beautiful,\" Helen said.\n\n\"Yes she is. Helen, you are very beautiful also.\"\n\n\"Thank you, but to be that young again...\"\n\n\"She is incredible, but it sounded like you have plenty of life still in you.\" I said. Helen smiled at me.\n\n\"Oh she does! She still fucks like a teenager!\" Gary got out. Helen looked at him for a minute.\n\n\"I bet she does. Where are you two going next?\" I asked,\n\n\"We are staying till Sunday, then we are off to New York,\" Helen said. \"How long will you two be here?\"\n\n\"We have to leave early Sunday, I have a plane to catch about 2:00.\"\n\nI saw Gary look toward the bathroom, I waited. Sam walked around the end of the sofa, I looked at her and she had all the beautiful long red hair unpinned and hanging about her. She sat down next to me and leaned into my shoulder. I watched as she snuggled next to me and at the same time spreading her legs apart enough so that Gary and Helen could get a good look at her beautiful pussy. They were both looking at the tempting morsel.\n\n\"We are flying out later in the afternoon,\" Helen said as she looked up at me. Gary was still looking at Sam.\n\n\"I have never been to New York,\" Sam said. \n\n\"We should get together before we leave,\" Helen said. \"You two sound like fun.\"\n\n\"Maybe. I think Sam wants to stay in bed all weekend.\"\n\n\"You like what you see, Gary?\" Sam asked watching him stare at her pussy.\n\n\"Gary, you are staring at her pussy,\" Helen said.\n\n\"Oh, sorry, Sam.\" Gary said looking embarrassed. \"You just look so nice with your flawless skin.\"\n\n\"Thank you, Gary. I used to hate my pure white skin when I was younger and being a redhead. Now it is nice to know that you men love it.\"\n\n\"Sam, I have never seen a women with skin as perfect as yours. I just have to say that your pussy is perfect. Sorry, honey.\"\n\n\"She is. Sam your skin looks flawless,\" Helen said.\n\n\"You think so?\" Sam said as she pulled her legs up and spread her legs wide apart. \"Gary, do you like a woman smooth?\" Sam said as she ran her fingers over her mound and pussy lips.\n\nSam was teasing the hell out of him. His poor cock was turning purple.\n\n\"I like yours that way,\" Gary told her.\n\n\"What about your wife?\" Sam asked.\n\nIt was funny, we all looked between Helen's slightly spread legs. She noticed and closed her legs together.\n\n\"Let us look,\" Gary told her as he grabbed one of her legs and pulled. Helen hesitated, then spread her legs apart.\n\n\"I think it depends on the woman,\" I said looking at Helen's trimmed little brown patch.\n\n\"Why?\" Helen asked me.\n\n\"Well, look at Sam. She is young and with her skin it looks perfect. Her sister is older, she has skin and hair just like Sam, but she has a beautiful small patch of ginger hair. She likes it and I like it. Helen, you look nice.\" I said.\n\n\"Yes she does,\" Sam said as she got up. She sat next to Helen and pulled her legs further open and looked closely. \"I like your little brown patch with your skin tones. You would look nice smooth too.\" Sam said as she ran her fingers slowly over Helen's mound.\n\nHelen looked embarrassed with Sam looking her over and touching her. Sam got up and sat back next to me.\n\n\"Helen, I like a man with short hair also,\" Sam said. \"Like his.\"\n\nSam took her hand and pulled my legs apart. I kept all my hair pretty short.\n\n\"What do you think, Helen?\" Sam asked as she looked at her.\n\n\"It looks nice.\"\n\n\"Yes it does. It also helps keep all of his hair out my mouth.\"\n\n\"I guess it does,\" Helen said as she looked.\n\n\"You two, we are going out to dinner tonight, and then maybe to a club for a bit. If Sam doesn't mind, would you two like to go?\" I asked to try and take some pressure off Helen.\n\n\"Sam, would you mind if we joined you?\" Helen asked.\n\n\"That sounds like fun, I will probably need a break by then,\" Sam told her.\n\n\"It's no place fancy, we did that tonight,\" I told them. \"Or yesterday, I guess would be right.\"\n\n\"You two young people are not tired are you!\" Gary said.\n\n\"Oh no, I'm about ready to fuck some more,\" Sam teased. Gary paused for a moment and looked at Sam some more. I had been watching him as he looked at Sam, his average size cock had gotten hard as a rock as Sam displayed her pussy to him and his wife. Sam was looking at his cock also. She sat up and pulled her legs up under her and sat cross-legged.\n\n\"I bet you are...\" Gary mumbled as he looked between Sam's legs again.\n\n\"You know what he did to me earlier, Helen? After he rubbed ice all over my breasts and the rest of my body, he got a mouthful of ice and placed his mouth over my pussy. God, I thought I was going to freeze!\" Sam started.\n\n\"I bet that was cold,\" Helen said with a smile.\n\n\"He finally stopped and I thought he was finished but I couldn't see him because I was blindfolded and tied up. He got another mouthful of ice and placed his mouth back over my pussy and started licking my clit with his frozen tongue. That was what all the screaming was about. God I must have had four or five orgasms.\"\n\nSam was in full tease mode now. Gary was looking at her closely, but Helen was hanging on every word she said.\n\n\"When I thought that was over, you know what he did then, Helen?\"\n\n\"No, what?\"\n\n\"He used his tongue to push the ice cubes deep inside my pussy! I was cold and hot at the same time. That was a first for me. Gary have you ever done anything like that to Helen?\"\n\n\"No...he hasn't,\" Helen said.\n\n\"Wow! After he had me full of ice, he stopped. I wanted to dig the ice out of my pussy because it was so cold, but I couldn't with my hands tied to my ankles.\"\n\n\"I bet that was cold,\" Helen said staring at Sam.\n\n\"It was, but then he slipped his hot cock in me, that took care of it.\"\n\n\"I bet it did,\" Helen said as she glanced at my partially erect cock.\n\n\"God, I am dripping again just thinking about it,\" Sam said as she looked between her legs and ran her fingers over her wet pussy lips. \"Jeez, would you look at that!\" Sam said running her fingers over her pussy lips again. I wanted to laugh at her, but she had Gary mesmerized, as well as Helen. Sam slipped her fingers in her mouth and sucked on the tips of them.\n\n\"emmmm\" came softly from Helen. Sam looked at me and smiled.\n\n\"James, I need you to fuck me again,\" Sam said. \"Oh, wait honey. I'm sorry, were you planning on fucking Helen?\"\n\nI wanted to burst out laughing, she was being terrible.\n\n\"What?\" Came from Helen.\n\n\"Helen, if that is what you were going to do, I can wait, or maybe Gary can take care of me while you two fuck,\" Sam told her. Helen's eyes went from me to Sam.\n\n\"Oh...no...I...uh...I mean...I...emm...I couldn't...oh...shit...I didn't mean...I wouldn't...oh god...\" came from a flustered Helen.\n\n\"Oh go ahead Helen!\" Gary said looking at Sam, jumping at the prospects of fucking her.\n\n\"Gary!\" Helen yelled. \"You are not serious are you?!\"\n\n\"Oh hell, Helen, we talked about it last month. Here is your chance.\"\n\n\"Gary! We...I was talking about it while you fucked me, talking about fantasies, that's all!\"\n\n\"You are always talking about things like that when we fuck! I never know when you are serious!\" Gary said as he looked at Helen.\n\n\"Gary, you are just thinking about having sex with that beautiful young thing.\"\n\n\"You're damn straight I am! Oh, I'm sorry Sam...it's just...you are so damn gorgeous.\"\n\n\"That's okay Gary, I misread your wife. Sorry Helen,\" Sam said. I knew she wasn't finished.\n\n\"Oh. That's okay, it does sounds tempting, but...,\" Helen said as she looked at my cock. \"Thanks for the offer though.\"\n\nI thought I would fuel the situation some.\n\n\"Helen, you two don't do that?\" I asked.\n\n\"Oh no.\"\n\n\"Sorry, we just thought that since you two came over here naked...sorry.\" I said to them.\n\n\"Do you two do that?\" Helen asked cautiously.\n\n\"Some. Sam and her sister and my wife are always having sex together. We know a few other couples that visit and we have some good times.\" I said.\n\n\"She lives with you and your wife?\" Gary asked.\n\n\"Her and her older sister, another gorgeous redhead.\"\n\n\"All the time?\" Gary asked.\n\n\"Yes. They live with me and my wife,\" I said as seriously as I could, like everyone does that.\n\n\"Wow.\"\n\n\"Gary!\" Helen exclaimed.\n\n\"Oh, sorry. I just mean...it sounds like you four have a nice arrangement,\" Gary said with lustful eyes.\n\n\"I wouldn't call it an arrangement. My wife and I are both deeply in love with Sam and her sister.\"\n\n\"And you let all of them have sex with other men?\" Helen asked.\n\n\"Helen, I don't let the three of them do anything. That is their choice. They do what they wish, but they come home with me at the end of the day.\"\n\n\"See honey, he lets his wife, and them, have sex with other men,\" Gary told Helen. Gary was hoping he could talk his wife into letting him do Sam. Sam had thrown it out there, I guess she was okay with it.\n\n\"Hey, I didn't mean to start anything. I just need fucking and I am sure James is enjoying looking at your wife, Gary. I know she is enjoying looking at him, her pussy is all wet and dripping,\" Sam added to the fire.\n\nHelen had let her legs spread some as she talked. She snapped them back together as she looked up at me.\n\n\"That's okay Helen, he makes me wet looking at his big cock too,\" Sam fueled the talk. \"If you have gotten horny Helen, and Gary won't let you fuck James, we could get each other off.\" Sam told her.\n\n\"Oh my god,\" Gary said under his breath. Helen snapped her head toward Gary.\n\n\"You would like that too, wouldn't you!\" Helen snapped nervously.\n\n\"Oh god yes,\" Gary let slip out, then realized he had said it out loud. He opened his mouth, but then shut it. He had said it, he couldn't take it back.\n\nI looked at Sam, she was about to burst out laughing, so was I. However, Sam was making me horny and my cock was getting harder. Helen was a beautiful older lady. She had nice full tits and a nice body. Her shoulder length brown hair was well done and I had been glancing at her pussy while she had her legs spread.\n\n\"I'm sure that is something else you would like to watch me do, besides him,\" Helen told him, then looked at Sam. \"Sorry Sam.\"\n\n\"For what?\"\n\n\"For him, he is being a toad.\" \n\nSam giggled.\n\n\"A toad?\" Sam asked.\n\n\"Yes, that is what I call him when he does things like this,\" Helen said, then started laughing. \"Oh, this has been a crazy evening.\"\n\n\"We enjoy sitting around with our friends naked and talking,\" Sam said. \"Especially after we all have sex. The women like to tease their husbands by telling them what the other men did to them.\" Sam and Helen laughed.\n\n\"How would you like for me to say things like that to you, Gary? Would you like me telling you what other men did to me?!\" Helen said with a laugh. Gary looked at Helen and shook his head and laughed.\n\n\"That would be fine, as long as I got to tell you what other women did to me.\"\n\n\"Toad!\" We all laughed. \n\nThe situation was lightening up some, we were having some fun.\n\n\"Hey you two, it is almost 3:30, I'm about ready for breakfast, maybe a champagne breakfast,\" I said. \"Would you like for me to call room service and see if the kitchen is open?\"\n\n\"The Omni kitchens are always open,\" Gary said. \"We stay at them everywhere.\"\n\n\"I'll call. What would you two like?\" I asked.\n\n\"Oh, whatever they have. I guess we should go get some clothes,\" Gary said.\n\n\"That's okay, I'm sure we are all enjoying the view,\" I said to Gary. He looked at Sam. \n\n\"I know I am,\" he said.\n\nI got up and went to the phone and called room service, I was surprised when they answered and said they could fix anything. I ordered a variety of items for the four of us and before I hung up I ordered I big bottle of Cristal.\n\n\"He said about 30 minutes,\" I told them and returned to sit with Sam. Helen and Gary each watched as I moved around with my hard-on.\n\n\"You're not getting out of fucking me,\" Sam said as she leaned over and kissed me.\n\n\"Can I ask you something?\" Helen said. \"How did you all get into swinging?\"\n\n\"It's not like we go to clubs and pick couples up, Helen, we just have a handful of close friends that we have all gotten to know very well,\" I said.\n\n\"Apparently. But you were trying to pick us up?\" Helen said.\n\n\"Hey, you two were the ones that came over here naked. If an opportunity presents itself and we like what we see, we may try and take advantage of it,\" I said looking into Helen's eyes. She looked at me and shifted nervously.\n\n\"I see. Then you two like what you see!\" Helen said laughing.\n\nI looked at Helen as seriously as I could. \"Yes, I really would like to fuck you, Helen.\" That stopped the laugh. She cleared her throat nervously. \"And Helen, I'm sure your husband would like to have sex with Samantha, or she would like to make love to you, while Gary and I watch. Isn't that right, Gary?\"\n\n\"Sure,\" he said. Helen looked at him.\n\n\"Toad!\"\n\n\"Helen, you know what James thinks about me having sex with other men or women?\" Sam asked. \"He enjoys it because I am having a wonderful time. Maybe not as wonderful as when I am with him, but I have a great time and he makes sure I have a goodtime.\"\n\n\"And you, and his wife, are okay with him being with other women?\"\n\n\"Oh, if you only knew Helen. He is such a wonderful, and I mean wonderful lover, we enjoy knowing the other women are getting the fuck of their life.\" Here we go again, I thought. \"Wouldn't it excite you knowing that Gary was pleasing another woman and driving her crazy the way he does you,\" Sam said as seriously as she could. \"I mean, it sounded like you were getting a wonderful fuck earlier. Don't you know other women that would enjoy that?\"\n\n\"I guess,\" Helen eased out.\n\n\"It makes me so happy and aroused to watch James do to another woman what he does to me. That is just part of being a woman for me, and for me it is simply a part of life. It may just be me and my sister and his wife, but that is how we feel. I know there are a few couples we have sex with that just want to have sex with other people, but a lot of them enjoy it, like we do.\" Sam explained.\n\nSam was really selling it, but I was enjoying hearing her say that.\n\n\"It sounds interesting. I'm not sure how I would feel watching the toad have sex with another woman.\"\n\n\"Oh Helen, it's not just sex, or at least it shouldn't be. James and us, we make passionate love to whoever we are with. Like I said, some of the couples just like to fuck, but feeling another person that is not yours making passionate love to you, like Gary did to you earlier, is incredible. It is such a wonderful feeling. Emmm, sorry, I just get all turned on thinking about it. I guess it is just something you would have to experience to understand.\" Sam finished.\n\nSam took a deep breath, she had been in full sales mode, but I think she was getting turned on thinking about it. My girls really did enjoy me giving other women almost the same pleasure as I give them. Sam leaned back on the sofa and paused, letting her legs spread apart. She ran her hands through her hair pulling it behind her head, then she ran her hands over her breasts and squeezed them.\n\n\"I guess we will be sleeping all day,\" Sam said looking at me.\n\n\"Not all day, Dawn wants me to take you shopping this afternoon.\"",
        "\"Okay. After we eat and have sex, we can sleep,\" Sam said rubbing her tits again.\n\nSam had done her job, it was up to me now. There was a knock at the door, \"room service\" we heard. I picked the towel up and headed for the door, stopping to get tip money out of my crumpled pants on the floor.\n\n\"You don't have to,\" I heard Sam say behind me.\n\nI stopped and wrapped the towel around my waist as best I could with my hard-on. I opened the door and there was a nice looking young lady about 20 standing there with a cart full of food.\n\n\"Please come in,\" I said. She looked at me, then at the tent under the towel and smiled, then pushed the cart into the room.\n\n\"Oh, I'm sorry,\" she said when she saw all the naked bodies.\n\n\"Here, please, just roll it over here,\" I told her as I pointed to the seating area.\n\nShe pushed the cart next to the table, paused to look at Sam and Helen, then uncovered the food and opened the champagne.\n\n\"Thank you very much...\" I looked at her name badge, \"Kathy.\"\n\nShe handed me the bill. I turned and laid it on the cart to sign. My towel slipped off when I bent over.\n\n\"oh...nice...\" I heard come from Kathy.\n\nI signed the bill and handed it and $100 to Kathy.\n\n\"Thank you sir, will there be anything else,\" she said with a big smile.\n\n\"Not at this moment, Kathy. I guess you have had a long night?\"\n\n\"Ten to six.\"\n\n\"Oh, you are getting off soon,\" I tried to say as suggestively as I could.\n\n\"Uh...yes, in a few hours, when I get home,\" Kathy said as I stood and faced her. \"If you need anything before...I get off, just call room service.\"\n\n\"If I think of anything, I will call for you, thanks.\"\n\n\"Emmm, thank you,\" Kathy said first looking at the $100, then at my cock. \"Yes, thank you.\"\n\nI walked Kathy to the door and opened it for her.\n\n\"Are we okay?\" I asked her before she stepped into the hall.\n\n\"Oh sure, you would be surprised at what I see working in the middle of the night.\"\n\n\"A lot?\"\n\n\"You guys are cool, it is when they want me to come in while they are fucking that surprises me.\"\n\n\"Often?\"\n\n\"About once a week.\"\n\n\"Should I call for you later, I'm going to be fucking those two women?\"\n\n\"If you want to, I will come up and get the cart.\"\n\n\"You think you could stay for a while, Kathy? Do you like to watch?\"\n\n\"We'll see,\" she said with a big sexy smile.\n\n\"The lady I am with is going to do the older lady after breakfast, then I am going to fuck her. I'll call for you before then,\" I said with a smile.\n\n\"Emmm, that sounds like fun. I don't get to see two ladies very often, the gay guys, but not the ladies.\"\n\n\"I will keep that in mind, if you like that.\"\n\n\"I do. I always wake my roommate up when I get home by making love to her.\"\n\n\"Excellent. Thanks Kathy.\"\n\n\"You are welcome.\"\n\nKathy gave me a seductive look, then reached for my cock and wrapped her hand around it. She looked down, then took her thumb and ran it over the tip, catching the drop of pre-cum on the end. She lifted her hand up and sucked her thumb in her mouth.\n\n\"You are very welcome,\" she said again, then walked out into the hall. I headed back inside; Sam, Gary and Helen were all standing around the cart getting food for breakfast.\n\n\"Honey, what have we told you about hitting on the waitresses and the help,\" Sam said.\n\n\"Just an opportunity knocking, and she is cute,\" I said.\n\n\"What kind of club are we going to tonight?\" Helen asked.\n\n\"I am glad you asked, that reminds me of something, be right back,\" I told them. I went and picked up my cell phone and went into the bathroom and closed the door. I scrolled through my contacts, found what I needed and dialed. After a few rings:\n\n\"Hello?\"\n\n\"Hi Ashley, this is Dr. James Smith,\" I said.\n\n\"Hi James.\"\n\nAshley always made me hot just by dragging my name in her southern accent.\n\n\"What are doing calling me at 4:00 in the morning?\"\n\n\"Are you just getting off work?\"\n\n\"I'm about to get dressed. Why haven't you been back? You told me you and your wife were going to start coming back.\"\n\n\"We are, I promise. I am bringing some new friends tonight. Can I get an 18 year old lady in?\"\n\n\"Legally, yes. But, you know we only allow people in that are 21 or over. We don't like teenagers. Are you dating teenagers now, James?\"\n\n\"She is the sister of the redhead I was with last time, I wanted to bring her by. I was hoping you could get her in. She is very mature.\"\n\n\"Why should I, you haven't kept your promise.\"\n\n\"Ashley, we will come by more, we are still getting settled in after winning all the money. We met a nice older couple from out of town tonight and I wanted them to see you and your friends, but I am spending the weekend with this young lady. Her sister told her about you and Raven and she would like to come.\"\n\n\"James, how old does she look?\"\n\n\"It depends. Dressed right, about 14. Dressed in a nice sexy dress, 21.\"\n\n\"Let me ask Rick.\"\n\n\"Make sure you tell him it is me asking.\"\n\n\"I'll ask him after I get dressed.\"\n\n\"I'll make it up to you, Ashley.\"\n\n\"You better, James,\" dragging my name out.\n\n\"Can you let me know in the next hour?\"\n\n\"Yes.\"\n\n\"Just text me. I want to make sure before we make plans for tonight.\"\n\n\"Bye, James.\"\n\n\"Bye, Ashley.\"\n\nI hung the phone up and went back into the room.\n\n\"Who are you calling at 4:00 in the morning?\" Sam asked.\n\n\"Just checking on something.\"\n\nI picked up a plate and grabbed a few things to eat. After the others sat down I poured them all a glass of champagne. I wanted to make sure Helen had plenty. We sat and ate awhile and talked, I kept refilling Helen's glass.\n\n\"That was a wonderful breakfast,\" Sam said. \"Oh god, it is almost 5:00. Gary are you ready, I need to get some sleep.\"\n\n\"Uh, ready for what?\"\n\n\"Aren't you ready to fuck me? I thought we decided you were going to do me and James was going to do Helen?\" Sam said acting totally innocent.\n\n\"Oh, did we decide that?\" Gary asked with a big smile.\n\n\"I thought so, do you want to do me or watch me and Helen do each other,\" Sam said, putting Gary in a double-bind.\n\n\"Uh, Sam, I have never done that,\" Helen said.\n\n\"Oh, okay, Gary come with me,\" Sam said standing.\n\n\"Wait!\" Helen said. \"just...wait...\"\n\nSam was standing next to Gary as he sat with her tits inches from his face. Helen was trying to decide what was happening. Sam was wise enough to not say anything, putting the decision in Helen or Gary's hands. We waited.\n\n\"Oh my, too much champagne, I can't do this, not right now,\" Helen said as she looked first at my cock, then up at me. \"Not right now...\"\n\n\"Helen, is it something you would like to do?\" I asked her. She paused and stared at my cock.\n\n\"I...I don't know. Gary?\"\n\n\"Honey, if you want to, go ahead.\"\n\n\"Seriously? Oh my god...I don't know...damn you're big...\" Helen said confused.\n\nI stood and walked to her as she sat, my cock was fully hard. As I stood in front of her, my cock was directly in front of her face.\n\n\"Helen...touch it,\" Gary said to her.\n\nI watched as Helen looked closely at my cock. She slowly raised a hand and wrapped it around my cock.\n\n\"You are so big...\"\n\n\"Try it Helen...\" Gary said. Helen looked over at him. \"Go ahead.\"\n\nHelen looked a minute as she gently stroked my cock. I watched as she leaned forward and wrapped her lips around the head of my cock. Within a minute she had half of it in her mouth.\n\n\"Oh, wow.\" I heard Gary say. Sam had sat down on the arm of the sofa next to him. She was leaning into him, so her tits we touching his face as he watched his wife.\n\nHelen slowly slid her mouth up and down my cock, sliding a little more in each time. I looked over at Sam and Gary, Gary was watching his wife closely. I watched Sam slowly slip several fingers between her legs and rub her wet pussy lips.\n\n\"Honey, are you liking it?\" Gary asked. Helen didn't pause and kept going.\n\n\"Gary?\" Sam said to him. He looked at her and watched as she rubbed her pussy. I watched as she pulled her fingers from her pussy and moved her fingers too his mouth. He opened it and Sam slipped her slick fingers in. Gary closed his mouth and sucked on her fingers.\n\nHelen obviously knew what she was doing. She slipped up and down a few more times then pulled her mouth off my cock.\n\n\"Oh shit. I can't do this, not right now. I have had way too much to drink,\" Helen said as she looked at my cock.\n\n\"Emmm,\" came from Gary. Helen looked over as Sam slipped her fingers from his mouth.\n\n\"Hey, we have been up all night. I'm sure you and Gary are tired. You two decide in the morning. We will stop by after we go shopping,\" I told Helen. Gary was smiling after watching his wife suck my cock and tasting Sam.\n\n\"What time?\" Helen asked.\n\n\"We should be back here about 4:30,\" I told her. \"We will get up about noon and eat, I need to get Sam a business outfit at a very nice shop just down the street.\"\n\n\"Okay, knock on the door when you get back. Toad, are you ready to get some sleep?\"\n\nGary broke his stare. \"Really?\"\n\n\"Yes!\"\n\nHelen stood in front of me.\n\n\"Come Gary,\" she said as she turned and waited for him to get up. I stood next to her and slipped my arm around her waist. She jumped a little.\n\n\"Helen, don't let Gary force you into anything, but if you change your mind, I would enjoy making love to you for several hours,\" I whispered in her ear. \"Your mouth felt good on my cock. I think you would enjoy my mouth on your pussy.\"\n\n\"Oh god,\" slipped out.\n\nGary was up and heading to the door following us. We stopped and Helen joined him.\n\n\"It has been a fun night...morning, maybe we will see you two tomorrow,\" Gary said.\n\n\"Yes, maybe.\" Helen said.\n\n\"Hope so,\" Sam said.\n\nGary and Helen left.\n\n\"We tried,\" Sam said. \"I do need a quick fuck before I can sleep.\"\n\n\"Come with me,\" I told Sam and took her hand and climbed into the big bed. I sat up and leaned against the headboard and the wall.\n\n\"What are you doing?\" Sam asked.\n\n\"Shhhhh.\" I was listening to see if I could hear Gary and Helen.\n\n'I know you wanted to,' we could hear Helen saying.\n\n'Did you like his big cock? You are wanting it.'\n\n'Sorry, Gary...I don't know what got into me.'\n\n'Did you like it, honey?'\n\n\"Gary, you were okay with me doing that?'\n\n'I thought it was hot watching you with another man's cock in your mouth.'\n\n'I did like it. He is so big though.'\n\n'She slipped her fingers in her pussy, then slipped them in my mouth.'\n\n'What did she taste like?'\n\n'Sweet and young.'\n\n'We have never done anything like that, Gary.'\n\n'There is always a first time...did you want him to fuck you?'\n\n'I don't know...how do you feel about it?'\n\n'You want to...I know you do.'\n\n'I'm sure you were not interested in the pretty redhead then.'\n\n'God, she was pretty.'\n\n'Yes she was.'\n\n'Helen, have you ever been with another woman?'\n\n'No...never.'\n\n'Is that something you would like to try?'\n\n\"I'm not sure. I'm sure you would like to watch.'\n\n'No...really, if you would like to try it, I would be okay with it.'\n\n\"James?\"\n\n\"Shhhhh.\" I was listening to them talk. I felt Sam straddle my lap and sit, then start to stroke my cock back to life.\n\n'I would be too embarrassed with you watching, but I have always been curious about that.'\n\n'She talked like she knew what she was talking about, I bet she is good.'\n\n'I don't know Gary...she is pretty, and oh so perfect.'\n\n'If you don't want to eat her, I sure do', they laughed.\n\nI felt Sam move, then felt her sliding her pussy down on my cock. I looked at her and she smiled and kissed me.\n\n\"Do you think they will talk each other into it?\" Sam asked.\n\n\"Give it a few minutes.\"\n\n'I can't believe she ran her fingers over her pussy lips while we watched.' We heard him say.\n\n'God Gary, I wanted someone to run their fingers into mine...I was so embarrassed when he said something about me dripping.'\n\n'Were you really dripping?'\n\n'Hell yes.'\n\n'Then why didn't you let him fuck you?'\n\n'Gary!'\n\n'You wanted too...didn't you?'\n\n'Oh yes.'\n\n'Then let him do it, Helen.'\n\n'Gary...I couldn't do that. Besides, I don' think he would fit as big as he is.''\n\n'Yes you could. You would enjoy it. You enjoyed sucking on him.'\n\n'Yes I did. I have never had a cock that big in my mouth.'\n\n'How many cocks have you had in your mouth, honey?'\n\nWe heard Helen laugh.\n\n'You would enjoy doing her wouldn't you?'\n\n'Of course. I would especially like to eat her smooth young pussy.'\n\n'...and you would be okay...watching him have sex with me?'\n\n'I have always wondered what it would be like watching you with another man.'\n\n'You have never said anything before . Why?'\n\n'I wasn't sure what you would think if I ever suggested something like that.'\n\n'But why?'\n\n'I would just like to watch.'\n\n'I guess since we are talking about you too, it is different.' Helen said.\n\n'I guess so. Aren't you curious, Helen?'\n\n'Of course Gary...I have always fantasized about it since we have been married, but those were just fantasies.'\n\n'Sam is beyond any fantasies I have ever had.'\n\nSam smiled really big as she slowly worked her hips. \"I think they are almost there,\" she said with a smile.\n\n'Are we considering this?' \n\n'Are we?' I heard Helen ask.\n\n'I'm okay with it if you are.'\n\n'Are you sure, Gary?'\n\n'Sure...they seem like nice people.'\n\n'We need to set some ground rules then.'\n\n'What do you mean?'\n\n'I mean...what is off limits?' Helen asked.\n\n'Helen...it is just sex...we can do what we always do...I guess?'\n\n'So if he wants to fuck me in the ass like you do...it's okay?'\n\n'Oh...I see what you mean...'\n\n'What is off limits?'\n\n'Does anything need to be off limits?'\n\n'I'm asking you...if I want to suck his cock until he comes in my mouth...can I?'\n\n\"There we go,\" Sam said. \"Now fuck me.\"\n\n'I guess so...I would sure like for her to suck mine.'\n\n'Okay then...when they stop by tomorrow...I will ask if they still want to do it.' Helen replied.\n\n'Okay.'\n\n'Okay.'\n\n\"Okay!\" I said.\n\n\"She is pretty, I think you will enjoy her,\" Sam said.\n\n\"I know I will. Will you enjoy doing him?\"\n\n\"Oh yes, I think I can get everything eaten and licked!\"\n\n\"You want to fuck him?\"\n\n\"Sure, I think he will be fun.\"\n\n\"Shhhh,\" I told Sam, then she giggled.\n\n'Helen, can I ask something?'\n\n\"Shhhh.\"\n\n'I guess so at this point.'\n\n'Have you ever seriously fantasized about being with another woman?'\n\nSam stopped working her hips.\n\n'I have thought about it.'\n\n'Would you like to try with Sam...I mean...we are away from home...no one would ever know. You can try it and experiment if you want too.'\n\n'Would you feel different about me if I did?'\n\n'Of course not...try it if you want too. I kind of hope you like it.'\n\n'Why?'\n\n'Maybe I could watch you do it again. I think that would be so hot.'\n\n'Let me think about it, Gary.'\n\n'Honey...if you do...can I watch?'\n\n'Is that one of your fantasies?'\n\n'Yes. I think I would like to watch you with another woman.'\n\n'Let me think about.'\n\n'Well, while you are thinking about, I want to eat you. You can imagine it is her.'\n\nSam smiled and started working her hips hard. I started playing with Sam's nipples while she sat on my cock and worked her pussy. She was enjoying my extra hard cock. Our room phone rang.\n\n\"Now what?!\" Sam asked. \"It must be them. I don't want them coming back over right now, James.\"\n\n\"Let me get it...\"\n\nSam rolled to my side letting my cock slip from her pussy. I grabbed the phone.\n\n\"Hello?\"\n\n\"Dr. Smith, this is Kathy. Would you like for me to come get the cart?\"\n\n\"Oh, Kathy...sure, come and get it. Are you ready to get off?\"\n\n\"Maybe!\"\n\n\"Do you have a master keycard, I'm sort of busy?\"\n\n\"Sure.\"\n\n\"Come on in then.\"\n\n\"Did you just invite her up here?\" Sam asked.\n\n\"We had talked before she left. She had mentioned she would like to watch you and Helen.\"\n\n\"Oh, she asked if she could?\"\n\n\"I offered.\"\n\n\"Well, she can come get the food and watch if she wants too,\" Sam said as she climbed back on me.\n\nSam had been working my cock nicely when we heard the lock on the door. Kathy walked in, now in a pair of shorts and a t-shirt.\n\n\"What happened to your friends?\" She asked as she closed the door.\n\n\"They are still thinking about it,\" I told her. \"Kathy, this is Sam.\"\n\n\"Hi Sam.\"\n\n\"Hi Kathy. Do you get to see things like this often?\" Sam asked.\n\n\"Working the night shift, I do.\"\n\n\"Sorry you didn't get to see me and Helen,\" Sam said.\n\n\"That's okay. I'll grab the cart and go.\"\n\n\"You are already here, come sit with us,\" Sam said as she worked her pussy nice and slow.\n\nKathy looked at us and smiled, then walked to the bed and sat on the edge next to us.\n\n\"So, you didn't get anywhere with them?\" Kathy asked.\n\n\"I think we will be successful tomorrow, or today rather,\" I told her.\n\n\"Good, you can call for me if it is after 10:00.\"\n\n\"It will probably be this afternoon, we are going to dinner and to a club tonight,\" I told her.\n\n\"I'm sorry I will miss it. What time will you all be back?\"\n\n\"Probably late, but Sam and I are going to have some private time when we come back, I have something special for her.\" Sam stopped working her hips and looked at me.\n\n\"What is it?\" She asked.\n\n\"You will have to wait.\"\n\nSam looked at me frustrated.\n\n'Oh god Gary, fuck me harder!' Came through the wall as we heard the bed banging the wall.\n\n\"I will have to tell maintenance to move the bed away from the wall, again,\" Kathy said.\n\n\"I don't know, I think it is rather erotic,\" Sam said.\n\n\"You might, but for what people pay for this room, some don't!\" Kathy said laughing.\n\nWe all laughed.\n\n\"We hate to disappoint you Kathy. Would you like to join us to make up for it?\" Sam asked.\n\n'Oh fuck Gary! Harder!'\n\n\"Sam, I would like to join you,\" Kathy said.\n\n\"Oh, I see. Honey, is that okay with you? Are you okay with watching?\" Sam asked.\n\n\"You know I am, sweetie.\"\n\n\"Is that okay, Kathy?\" Sam asked.\n\n\"Since I got a nice tip earlier, it sure is,\" Kathy said.\n\nI watched Kathy grab the bottom of her t-shirt and pull it up and off. Out popped a nice set of young tits with a wonderful tan, being held up by a thin bra. Kathy stood and unsnapped her shorts and pushed them down leaving her in a thong and her bra.\n\n\"Very nice,\" I said. \"I like your tan.\"\n\n\"Thank you.\" She sat back down on the bed.\n\n\"Let's see the rest,\" Sam said as she pushed herself up on her knees and off my cock.\n\n\"Oh don't stop, please. I want to eat his cum out of you,\" Kathy said.\n\n\"Oh, I just thought...\" Sam started to say.\n\n\"Oh no, I like guys too, I would just like to make love to you this morning,\" Kathy said.\n\n'Fuck Gary! I'm coming!! Harder!!'\n\n\"Sounds like they left here hot,\" Kathy said as she removed her bra.\n\n\"Oh they did,\" Sam told her.\n\nKathy stood and slipped her thong off.\n\n\"Kathy, you have a nice body. I like the all over tan and your smooth pussy,\" I told her.\n\n\"Thank you,\" she said as she squeezed her full tits together.\n\nKathy got on the bed straddling my legs behind Sam.\n\n\"Go back to fucking him,\" Kathy told Sam as she reached around her and rubbed her tits.\n\nSam grabbed my cock and put it back in and slid down on me.\n\n\"I wouldn't want to interrupt your fuck, you only get one,\" Kathy said laughing, then Sam started laughing.\n\n\"Oh Kathy!\" Sam said with a big smile.\n\nSam started working her hips again while Kathy massaged her breasts. Sam closed her eyes as she enjoyed herself. Sam was slowly grinding her pussy down hard onto me. I watched her areolas and nipples begin to swell.\n\n\"You like this, Sam?\" Kathy asked.\n\n\"Oh yes. His wife will do this sometimes.\"\n\nKathy kept working Sam's nipples as she started kissing her on the shoulder tenderly. I could tell Sam was getting very turned on just by listening to her breathing. \n\n'Keep fucking me!!' We heard Helen scream.",
        "I watched Kathy tenderly squeeze and twist Sam's huge nipples.\n\n\"You said his wife does this?\" Kathy asked.\n\n\"Yes, I live with them.\"\n\n\"That sounds like something special.\"\n\n\"Oh, it is. My sister lives with us too.\"\n\n'Stick it in my mouth!' Helen yelled.\n\n'Suck it!' All of it!'\n\n\"I guess you two got them turned on,\" Kathy said to us.\n\n\"She started sucking his cock, but then stopped.\" Sam told her.\n\n\"It looks like it would be nice to suck.\"\n\n\"It is.\"\n\n\"You think they will come back?\" Kathy asked.\n\n\"They will be back,\" I said.\n\n\"Emmmm, I'm coming,\" Sam said softly.\n\nI felt her pussy squeeze my cock a few times then she shivered and her juices ran out onto me.\n\n\"Oh yes, your hands feel good, Kathy.\"\n\n\"Come on Sam, you can come harder than that!\" Kathy told her.\n\nKathy worked her way up my legs closer to Sam, pulling her back against her bare breasts. I watched her slide her hands down to Sam's pussy. She pulled the skin back away from Sam's clit and used her other hand to rub her swollen clit.\n\n\"Oh god!\" Sam exclaimed.\n\n\"Work those hips girl!\" Kathy told her.\n\nSam wasted no time, she started slamming her hips onto my cock as Kathy circled her clit with her fingers.\n\n\"Oh god!! That feels so good!!\" Sam screamed.\n\n\"Fuck his cock! Make him fill you full of cum so I can eat it out of you!!\"\n\nThis went on for 10 or 15 minutes as I got more and more turned on watching. Sam had reached up and was twisting her own nipples as Kathy worked her clit. Sam moaned and groaned for a long time as she worked her pussy on my cock while Kathy teased her clit.\n\n\"Oh fuck!! Oh fuck!! I'm going to come!!\"\n\nSam shoved her hips down onto me hard, Kathy's fingers became a blur.\n\n\"Ahhhhhhh!!\" Sam started shaking as she came very hard. I grabbed her hips and pulled them down harder and pumped her full of cum. \"Oh fuck yes, your cum is so fucking hot!!\"\n\nSam jerked hard several more times, screaming again.\n\n\"Perfect!\" Kathy said as she held Sam for a few minutes.\n\n\"That was great, Kathy!\" Sam told her.\n\n\"Let me help you up,\" Kathy told her as she stood on the bed. \n\nSam rose up on her knees while Kathy helped her. Sam began moving back as she lifted a leg and I slid out from under her. Kathy helped Sam lay back on the bed as she stepped off the end of the bed, laying Sam's head near the end. I moved to the edge of the bed to watch as Sam spread her legs. Kathy was aggressive, climbing on the end of the bed and over Sam and placing her pussy over her mouth immediately.\n\n\"You look tasty!\" Kathy said as she lowered her mouth down to Sam's pussy. \n\nI leaned against the headboard as I watched the two of them. Kathy was tonguing and slurping cum out of Sam with vigor as Sam grabbed her ass and worked on her pussy. The two of them moaned and groaned and came numerous times over the next half hour while the sun came up outside the huge windows.\n\n\"Oh god you're good!\" Kathy said.\n\n\"You too,\" I heard come from the other end of the bed. \"Kathy, you do enjoy a good fuck from a man don't you?\"\n\n\"Oh god yes!\"\n\n\"That's good to know,\" Sam said.\n\nI eased off the edge of the bed as Kathy returned to Sam's pussy. When I walked around the end of the bed, Sam smiled at me. Kathy had her legs under her as she had lowered herself down onto Sam's expert mouth. I watched Sam lick Kathy's dripping pussy as she smiled. I worked my way to the end of the bed and stood with my erection pointing straight toward Kathy's pussy. I had been enjoying the scent of the two of them. Sam reached up with one hand and grabbed my cock. I grabbed Kathy's perfect hips and pulled her back to the edge of the bed quickly.\n\n\"What!?\" Came from Kathy.\n\nSam held my cock next to Kathy's wet pussy. I held her hips and slipped in slowly as I pulled back on her hips.\n\n\"Oh god! What are you doing to me?!\"\n\n\"Kathy, is this okay?\" I asked.\n\n\"Fuck yes!!\"\n\nI leaned forward as I held her hips and slid in until the tip of my cock found bottom.\n\n\"Oh my god!! You are so fucking big!!\" Kathy screamed.\n\n\"Are you okay?\" I asked.\n\n\"Yes!! More, please!!\"\n\nI pushed in hard as Kathy screamed more.\n\n\"Oh fuck!! Fuck yes!! Fuck me!!\" Kathy screamed.\n\nI held her hips in place and started working my cock in and out of her hard.\n\n\"Yes, yes, yes!!\"\n\nI drove my cock in and out of Kathy a long time until she came in a screaming orgasm. Sam wrapped her arms around Kathy's hips as I kept driving into her.\n\n\"Oh fuck!! Don't lick my clit!!\"\n\n\"More Kathy?\" I asked.\n\n\"Fuck yes!! More!! Come in me!!\"\n\nI jammed in and out of Kathy for a long time until she started screaming she was coming again. When her pussy crushed my cock and her back started arching up and down, I could hear her screaming into Sam's pussy as she worked on it.\n\n\"Emmmmmm!!\"\n\nKathy was jerking on top of Sam. Sam screamed. I let go and pumped Kathy's tight little pussy full of cum.\n\n\"Emmmmmmm!!\" Came from the other end again as I kept driving into her until I ran out of cum.\n\n\"Ahhhhhh!! Stop!! No more!!\" Kathy screamed.\n\nI stopped driving into her and held my cock still in her pussy.\n\n\"Oh my god. That was fucking wonderful! I didn't expect that.\"\n\nI slowly slid my still hard cock out of her pussy and looked down to see that Sam was letting the cum run into her open mouth. She licked it all up then smiled at me then pulled Kathy's hips down hard. Kathy screamed again when Sam started licking my cum out of her pussy.\n\n\"Oh, sweet Jesus, Stop!!\" Kathy was screaming and struggling, trying to get away from Sam's hold. Sam hung on to her as she licked her pussy clean. Kathy begged Sam to stop and she did. When she released Kathy's hips, Kathy sat up quickly to get away from Sam, then collapsed on the bed. \"Oh my god! You two are terrible!\"\n\n\"It was okay wasn't it?\" Sam asked.\n\n\"Oh yes. I have done a few guy's wives here, but I have never let the guys do me before.\"\n\n\"Kathy, I'm sorry if I did anything you didn't want, but I asked if it was okay,\" I said.\n\n\"Oh no! Everything was great. I let you do me because you were not bugging the shit out of me to do it. Also, because your friend is wonderful!\"\n\n\"She is, isn't she?\"\n\n\"Yes she is. Sam, that was great.\"\n\n\"Thank you, you are great too. I take it you and your roommate do each other often.\"\n\n\"Oh yes. She only does women, but I am bi.\"\n\n\"Kathy, you won't get in trouble for being here so long will you?\" I asked.\n\n\"Oh no, once we clock out, they don't care where we go.\"\n\n\"What about the security camera in the hall?\"\n\n\"No problem, the lady that is head of security is a very close friend of mine.\"\n\n\"I see. Thank you for stopping by,\" I told her.\n\n\"You are welcome. Do I need to leave?\" Kathy said pushing herself up on the bed.\n\n\"Not if you don't want to. We need to get some sleep soon.\" I told her.\n\nKathy looked at my still hard cock and then looked up at me.\n\n\"May I?\" She asked.\n\n\"Sure,\" I told her and lay on the edge of the bed next to her.\n\nKathy sat up and moved down and grabbed my cum covered cock.\n\n\"Damn, you are still hard.\"\n\nKathy wrapped her lips around the end of my cock and started sucking. I watched Sam sit up next to her. Kathy slowly slipped my cock into her mouth. Sliding down further than I expected.\n\n\"Emmmmmmm,\" came from Kathy.\n\nSam and I watched as she worked her mouth up and down. After a few minutes she had my cock slipping down her throat.\n\n\"Emmmmm, emmmm, emmmmm,\" came from Kathy as she slipped my cock in and out of her throat.\n\n\"That feels nice, Kathy.\" She slid her mouth off my cock.\n\n\"I don't get to do this often, my roommate is not into threesomes, unless it is another woman.\"\n\nShe slid her mouth back down the length of my cock.\n\n\"Emmmm!!\" Came from Kathy.\n\nI looked and saw Sam sliding her fingers into Kathy's pussy. Kathy wiggled and squirmed and had a nice orgasm about 10 minutes later. Kathy kept deep throating my cock while Sam fingered her pussy. I watched and enjoyed for about 10 more minutes before I pumped a load of cum down Kathy's throat. She sucked me dry then pushed up on all fours.\n\n\"Wow that was fun.\" Kathy said. \"I haven't had anything that good in a long time. How long are you two staying?\"\n\n\"Afraid we are leaving tomorrow,\" I told her.\n\n\"Too bad. Call me if you want me to come back,\" Kathy said sitting up now.\n\n\"Kathy, we need to get some sleep.\" I said.\n\n\"No problem, not at all. Do you mind if I take a shower before I go home?\"\n\n\"Only if we can join you,\" Sam said.\n\nWe all got in the big penthouse shower and cleaned up. After Kathy got dressed and took the cart and left, Sam and I climbed in the bed for some much needed sleep.\n\n+++++\n\n\"Sam, we need to get up!\"\n\nIt was a little after noon and I wanted Sam to get up so we could grab some lunch and go shopping. She finally woke up, but it took a little bit to get her out of the bed.\n\n\"Get dressed and we will grab some lunch and walk down to Dawn's store,\" I told her as she headed for the bathroom.\n\nI got some casual pants out of the bag and a nice shirt and got dressed, loading my pockets with my wallet and things. I checked my cell phone before I slipped it in my shirt pocket to see if Ashley had sent me a text.\n\n'Rick said ok. You owe me! \uf04a' the message said followed by several pictures of Ashley naked in her dressing room. I paused on the last picture, Ashley had her fingers in her pussy. I laughed and put the phone in my pocket. I was tying my shoes when Sam came out and grabbed her bag. I watched as she slipped on some underwear then a pair of tight jeans and a simple top.\n\n\"Is that all the clothes you brought?\" I asked.\n\n\"No! I have a skirt and a top.\"\n\n\"Just wondering what you planned on wearing tonight?\"\n\n\"What do I need to wear tonight? You haven't said where we are going.\"\n\n\"I have changed the plans, I was hoping for something a little sexy.\"\n\n\"The skirt is short, I could not wear a bra and leave the top unbuttoned, would that be sexy enough?\" Sam asked with a bit of attitude.\n\n\"That might work.\" I got a stare from Sam. \"Get your tennis shoes and let's go. Are you hungry?\"\n\n\"Starving!\"\n\nThe restaurant in the hotel was busy since it was lunchtime on Saturday. We waited a few minutes before we were seated at a table. We ordered some burgers and waited.\n\n\"Are you having a good time, my girl?\"\n\n\"Yes I am. Last night was a treat.\"\n\n\"You seemed to have enjoyed it.\"\n\n\"I did, I was super horny anyway and Kathy was just an extra treat. She is cute.\"\n\n\"Yes she was. After I had talked to her before she left the first time, I thought she would like to join you and Helen.\"\n\n\"I don't think Helen would have been ready for that,\" Sam said.\n\n\"You are probably right. Was she really okay with me fucking her?\"\n\n\"Oh yes. Did you give her a nice tip?\"\n\n\"A $100 bill when she brought breakfast.\"\n\n\"Can you leave her some more?\"\n\n\"Sure. I will call her or leave it at the front desk.\"\n\nWe finished lunch and walked out of the hotel. Sam took my hand as we walked down the street. One of Dawn's favorite and expensive stores was just down the road, I had been there with her a few times, and usually spent a fortune.\n\n\"Has Dawn brought you to this store before?\" I asked.\n\n\"No, she has taken me to a store that only has evening wear.\"\n\n\"You will like this place, it has a lot of very nice business wear for professional women, and some dresses.\"\n\nWe walked a little further then came to the store. When we walked in I could tell Sam felt a little out of place in her jeans.\n\n\"I should have worn my skirt, why didn't you say something,\" Sam said as she held my hand tightly.\n\n\"You're fine.\"\n\n\"Dr. Smith, I haven't seen you in a few months,\" a pretty saleslady I had met walked up. \"Your wife called and told me you may be stopping by. Is this Samantha?\"\n\n\"Yes, this is Sam. Dawn would like for her to have several nice business outfits.\"\n\n\"I think we can find something that she will like.\"\n\nI was trying to remember the saleslady's name. This was not a place that the people wore name tags. She was asking Sam if she wanted a suit or a business dress, Sam didn't know. She led her off across the store. I got out my phone and called Dawn.\n\n\"Hey honey, how are you and Amy doing?\"\n\n\"We are doing just fine. We are eating lunch in bed.\"\n\n\"Any food?\"\n\n\"Plenty of wine.\"\n\n\"I'm at the store to get Sam some clothes, what is that saleslady's name? The pretty blonde. I can't remember.\"\n\n\"Katherine.\"\n\n\"Now I remember.\"\n\n\"Are you two having a good time?\"\n\n\"Yes we are. We met a nice couple in one of the other penthouse suites that we are trying to talk into joining us.\"\n\n\"I thought this was Sam's weekend, honey.\"\n\n\"I'll have to tell you how we met. Sam likes them, they are an older couple.\"\n\n\"I didn't think she would want to share during her special time.\"\n\n\"I'm letting her do what she wants. We have already had a good time with a pretty young lady that brought us breakfast this morning at 4:00am.\"\n\n\"I see you two are staying up late.\"\n\n\"We did. She will be up late tonight too. I called Ashley and asked if I could get her in the club.\"\n\n\"I thought you had to be 21 to get in?\"\n\n\"She asked Rick and he said okay. She doesn't know I am taking her to my gentlemen's club. If this other couple wants to go, I will take them too. I had to promise Ashley we would start coming back occasionally.\" I told Dawn. \n\n\"We do need to go back more often. I haven't seen Ashley in a while. Since Amy liked the place and Sam can get in, we can all go now.\"\n\n\"That sounds like a good idea, I hope Sam likes the place.\" Dawn said.\n\n\"She will.\"\n\n\"Make sure you get her several lap dances.\"\n\n\"She just brought a skirt and a top for tonight, I may get her something special for tonight,\" I told Dawn.\n\n\"Tell Katherine what you want, she has some sexier things in the back they don't keep out front.\"\n\n\"Okay. I'm going to try and get home by lunchtime. That will give me time to get cleaned up and finish packing.\"\n\n\"I will get your clothes packed. Will four suits be enough?\"\n\n\"Yes.\"\n\n\"I will pack plenty of casual clothes.\"\n\n\"Dawn...are you really okay with this?\"\n\n\"Yes, you can go with Linda and have a goodtime. I talked to Olivia last night, she and Sam are going to come spend the night at least once.\"\n\n\"Good...why don't you call Katrina and have her come during the day, Amy will be at work and you two can spend some time talking.\"\n\n\"Good idea,\" Dawn said. \"The two of us can do some other things, also.\"\n\n\"Sam wants me to come look at something, I will see you tomorrow, honey.\"\n\n\"See you later. Try to get home in time to give me a good fuck to last me a week.\"\n\n\"I will try. If I don't, I am sure Olivia will like watching Sam give you one!\"\n\nI hung up the phone and walked across the store to my girl.\n\n\"Did you find something for her, Katherine?\" I asked.\n\n\"We are just getting started,\" Katherine said.\n\n\"James, what about this suit?\" Sam asked holding up a suit coat.\n\n\"Will it fit your big breasts?\"\n\n\"Oh yes, we have clothes cut for ladies like Sam.\" Katherine said.\n\n\"Go try it on,\" I told her.\n\n\"Let's get you a nice white blouse to go with it,\" Katherine said as she walked off.\n\n\"James, this is expensive,\" Sam said.\n\n\"Sam, I have already had a talk with you about this,\" I said.\n\n\"I know.\"\n\n\"I will get you what you need, stop looking at price tags, lord Dawn doesn't.\"\n\nSam giggled. \"Okay.\"\n\nKatherine came back with a blouse and took Sam to the dressing rooms.\n\n\"She is a sweet young lady. Friend of yours?\" Katherine asked as I walked toward her as she waited.\n\n\"Yes. Get her at least one suit with a skirt like that one, one with pants and several nice business dresses and tops. She is going to need them for school.\"\n\n\"Yes, Dr. Smith.\"\n\nKatherine walked off to look for more clothes. A few minutes later Sam walked out of the dressing room. She looked very grown up in the charcoal suit.\n\n\"You look nice,\" I told her.\n\n\"This is a nice suit, I like it.\"\n\n\"Does it fit you up top?\"\n\n\"Yes it does, I'm surprised.\"\n\n\"Is that a silk top?\"\n\n\"Yes, it is very nice.\"\n\n\"I am having her get you some more things, make sure you get tops you like to go with them. Do you have dress shoes you can wear all day?\"\n\n\"Just the ones I wear with the evening dresses.\"\n\n\"Those heels will be too high for you to wear all day. They have some nice shoes, have Katherine find you two or three pair.\"\n\n\"You look very nice,\" Katherine said as she walked up. \"Does it fit okay?\" She asked as she tugged on the lapels of the coat.\n\n\"Yes it does,\" Sam replied.\n\n\"Let me see,\" Katherine said.\n\nI watched Katherine run her hand under Sam's arm and over her tit as she checked the fit of the coat. She ran her hands inside the coat and felt to see how tight it was. As I watched, I decided that Katherine was really feeling Sam tits.\n\n\"Very good. I have some other things for you to try on.\"\n\nI looked around in the store, there were several other ladies looking around and being helped by the other staff. Katherine took Sam back to the dressing rooms and helped her try on more clothes. I watched as Katherine stood outside the dressing room. She had the door open so she could help Sam. They swapped some and tried some other clothes. Sam came out and asked me if each of the outfits were okay. Katherine would feel her up each time as I watched.\n\nAfter she had plenty of new outfits Katherine took her to find some shoes. I was checking my watch to make sure we didn't spend all afternoon there, but Sam was having a good time shopping. She had on a nice skirt and blouse when Katherine asked her about shoes.\n\nI sat and watched Sam try on shoes for a while, Katherine was advising her about shoes and explaining things to her. I was sure Dawn had told her to teach Sam about nice clothes, very nice clothes. Katherine and Sam were getting along nicely. As I watched, Katherine slid her hand up Sam's leg and under the skirt she had on. She and Sam were laughing.\n\nAbout 3:30, they appeared to have enough shoes. It took them longer to find the shoes than the clothes. Women and shoes. Katherine was boxing everything up and writing it all down. Sam came and sat next to me.\n\n\"James, I know you said not to ask, but some of those shoes are over a $1000, is that okay?\"\n\n\"Aren't you worth it?\"\n\n\"Well, yes, but I didn't know shoes could cost that much...Dawn never let me see what she paid for what she bought.\"\n\n\"Dawn goes places that they don't have price tags on items, honey. It keeps the husbands from falling over with a heart attack,\" I teased her. I was happy she giggled.\n\n\"Will there be anything else?\" Katherine asked when she walked back to us.\n\n\"One more thing. We are going to some place special tonight and Dawn says you have some sexy things in the back. Do you have something that would fit Sam?\"\n\n\"Oh yes. Sam, how sexy would you like?\"\n\n\"Something short and very revealing,\" I said.\n\n\"Come with me Sam,\" Katherine said with a laugh.\n\n\"James, come so you can approve,\" Sam said. I got up and followed through a door.\n\n\"James, what would you like to see her in,\" Katherine asked.\n\n\"Something very short, low cut, and no back,\" I said.\n\n\"Short enough she can't wear a garter and stockings?\" Katherine asked.\n\n\"Yes,\" I told her.\n\n\"Come with me.\"\n\nI followed Katherine and Sam around a corner and down a hall. Katherine looked through some dresses. She pulled out a small blue dress and showed it to Sam.\n\n\"That's pretty,\" Sam said.\n\n\"Try it on,\" Katherine said.\n\nSam looked around and saw a dressing room. She walked to it and left the door open as she slipped off the business outfit. She held the dress up and looked at it, then slipped off her bra as we watched.\n\n\"She is beautiful,\" Katherine said as we watched Sam slip the dress on.\n\n\"Katherine, do you like beautiful women?\"",
        "\"Yes. Quite a lot.\"\n\n\"Do you like my wife a lot?\"\n\nKatherine looked at me straight faced.\n\n\"Yes, I do.\"\n\n\"Have you two made out in here before?\"\n\nKatherine looked at me and smiled. We looked back at Sam as she worked her tits in the dress. She got it on and came out.\n\n\"This is nice,\" Sam said.\n\nThe blue dress was pretty, it wasn't as low cut as I wanted though.\n\n\"Turn around.\"\n\nSam turned around, the back was pretty open, but not what I wanted.\n\n\"Katherine, you know some of the sexy things my wife wears. I would like to have something open down to at least her stomach, or lower. Loose fitting to cover her breasts, but loose enough that if she bends over I can see her nipples.\"\n\n\"I see,\" Katherine said and turned back to the racks of dresses.\n\n\"James, you want me naked?\" Sam asked.\n\n\"Yes, go take that dress off while you wait for her.\"\n\nSam smiled and pulled the dress off her shoulders and slipped it off and waited.\n\n\"Oh my!\" Katherine said when she returned. Sam handed her the blue dress. \"Try this one,\" Katherine said as she handed Sam a red dress.\n\n\"Would you help me get in it?\" Sam asked her.\n\nKatherine gladly followed her to the dressing room. I watched as Katherine helped Sam slip the red dress on. Once she had the dress on, Sam turned to face Katherine. I watched as she slide her hands up to Katherine's breasts and squeezed them through her white silk blouse. Katherine smiled and reached up and rubbed Sam's tits. I watched the two of them for a few minutes until they started laughing.\n\n\"Let me see if he likes this,\" Sam said heading for me. \"What do you think?\"\n\nI looked her over, the dress was pretty. I pulled on the edges of the opening to see how loose it was. Her breasts popped out easily. I turned her around and the back opened down to her waist. I ran my hand down the back and the edge of the skirt and cupped her ass.\n\n\"James!\" Sam shouted.\n\nI liked the dress, but the red was a little too much. I didn't want her looking like a hooker.\n\n\"Katherine, that dress is perfect, do you have it in black?\"\n\n\"I think I have it in a black silk.\"\n\n\"Let me see it please.\"\n\nKatherine walked off.\n\n\"I think her and Dawn must have fun when she is here,\" Sam said.\n\n\"I think you are right. Why don't you try and have some fun with her.\"\n\nSome smiled and slipped the dress off and stood there with just her panties on.\n\n\"I think you will like this one,\" Katherine said.\n\nShe followed Sam to the dressing room. Katherine was only about 3 inches taller than Sam. I watched as Sam held her arms up as Katherine slipped the dress over her. Katherine tugged on it to get Sam's breasts in it, then sat on stool and pulled the tight dress down over her ass. The dress was really short. Katherine smoothed the dress out on Sam's ass.\n\n\"Thanks, Katherine,\" I heard Sam say. \n\nThe two of them looked the dress over, Sam looked in the mirror. She turned back to Katherine still sitting on the stool.\n\n\"Thanks for all the help,\" Sam said as I watched her pull the straps of the black dress off her shoulders so her tits were sticking out.\n\nSam moved toward Katherine. I watched Katherine grab one of Sam huge breasts in her hands and lean forward and suck her nipple into her mouth. Sam held her head against her tit. I watched as she sucked on Sam's nipples for a few minutes, then watched Katherine run her hand up under the short dress. Sam looked pleased.\n\nI walked to the door of the dressing room and stood and watched. Katherine removed her mouth from Sam's tit and reached under the dress and pulled Sam's panties down. She placed her mouth back over Sam's nipple as I watched her slip her fingers inside of Sam.\n\n\"Emmm, I see you are full service,\" Sam said.\n\n\"I have some special clients,\" Katherine said. \"I think we should take this dress off.\"\n\nKatherine helped Sam get the dress off as she sat on the tall stool. She stood and hung the dress up.\n\n\"Samantha, why don't you sit here,\" Katherine said as she patted the top of the stool.\n\nSam moved and sat on the stool. I watched Katherine get down on her knees in front of Sam and spread her legs.\n\n\"Lovely,\" Katherine said just before she placed her mouth over Sam's pussy.\n\n\"Oh yes,\" Came from Sam as she sat there naked.\n\nI walked behind Sam and held her by grabbing her tits. Katherine was really working on Sam. Katherine paused to look up and smile at Sam. She saw me holding her so she lifted Sam's legs up so she could go in deeper.\n\nI held Sam and watched Katherine as Sam moaned.\n\n\"Sam, keep it down,\" I told her. She grabbed my hands squeezing her tits and moaned loudly. I watched Katherine slip several fingers into Sam.\n\n\"Oh god!\" Came from Sam.\n\nI held Sam as she squirmed and moaned. She was growing closer and closer to coming.\n\n\"Ahhhhh!\" Came from Sam as she took her hands and pulled Katherine's head into her pussy.\n\nI could hear Katherine slurping up Sam's juices as she came hard.\n\n\"Jeeeeez!\" Came from Sam as she humped.\n\nKatherine licked Sam clean then stood up and kissed Sam.\n\n\"That was nice, thank you,\" Sam said.\n\n\"You tasted nice.\"\n\n\"Katherine, pull your skirt up and sit,\" Sam said.\n\n\"Not this time, maybe next.\"\n\n\"Have you and Dawn done this?\" Sam asked.\n\n\"Like I said, I have special clients,\" she said with a smile.\n\nKatherine turned and rubbed my hard-on through my pants.\n\n\"Your wife didn't tell me about all of this,\" she said running her hand up and down my hard cock.\n\n\"Katherine, when my wife comes back with her sister, I will have her talk to you about visiting us at the house.\"\n\nShe kept rubbing my cock.\n\n\"I would like to come and visit.\"\n\n\"Do you work every weekend?\" Sam asked.\n\n\"Two a month.\"\n\n\"I think you should come and spend the weekend with us. We have extra bedrooms, if you need one,\" Sam followed up.\n\n\"Katherine, we look forward to you visiting,\" I said.\n\nKatherine smiled and stood up. I wrapped an arm around her and kissed her, cleaning all of Sam's juices off her lips.\n\n\"I look forward to it.\" She said as I released her. \"I just have one question?\"\n\n\"Hold that thought,\" I said. \"We need to get everything together and back to the hotel.\"\n\n\"Too bad.\"\n\n\"Katherine, she needs some black stilettos.\"\n\n\"Very good,\" Katherine said. \"But I have something else she might like.\"\n\nKatherine disappeared for a minute then came back.\n\n\"Try these on,\" she said handing Sam a pair of black silk stockings.\n\nSam sat and rolled them up her leg. They came up high. The tops were lacey and came all the way up to the edges of her pussy.\n\n\"I think those will go with that dress nicely,\" Katherine said. Sam looked at me.\n\n\"I do too.\"\n\nSam slipped the black dress on to see if the tops of the stockings could be seen. They were covered, but only if she didn't sit.\n\nI sat and watched Sam trying on stilettos until she found a nice tall pair. Sam got up and walked over to me with Katherine following her, she spread her legs and put a knee on each side of me and climbed in my lap while Katherine watched.\n\n\"Thank you,\" Sam said as she kissed me for a minute. \"There is no one else here.\"\n\nSam reached down and grabbed my cock through my pants.\n\n\"Sam, someone will come it, it is a busy Saturday.\"\n\n\"I will have something special for you when we get back to the hotel.\" Sam said and kissed me.\n\n\"I'm sure you will. We need to get back.\"\n\n\"I can't wait to get back.\" Sam said.\n\nSam kissed me again and got up and went to get her clothes. She came back out and handed the stockings and the dress to Katherine to box up.\n\n\"Oh my god, we walked here from the hotel, we can't carry all of this,\" I told Katherine.\n\n\"Not a problem, I will have the limo come around and pick you two up and get all of the packages,\" Katherine said. I started to tell her for the commission she was making, she should come to the hotel and let me have my way with her, but I handed her my AMEX instead. Sam walked up and wrapped her arms around me and held me while I signed the charge.\n\n\"Thank you,\" Katherine said.\n\n\"With the commission you just made Katherine, why don't take the rest of the day off and join us at the hotel,\" Sam said to her.\n\nKatherine looked up and smiled.\n\n\"Some other time,\" Katherine told me with a big smile.\n\nWhen I had been there many times before with Dawn, I would tease Katherine while Dawn changed clothes. I felt pretty sure that one day Dawn and I would get her to a dressing room.\n\n\"Sam, you better have something very special for me all night long,\" I told her. \n\nKatherine looked at Sam and smiled. Katherine was a nice looking lady about 40 with auburn hair. She always helped Dawn out when she came in. Her and Dawn had struck up a friendship. She was now very curious. \n\n\"Katherine, I know you are curious, I don't have time to explain right now. Dawn will be in soon with Sam's sister to get her some clothes, ask her then.\"\n\n\"I will be sure too.\"\n\nThe valet walked up and he and the limo driver loaded packages in the limo. We got in the limo for the short ride. The valet opened the door at the hotel and we got out. I told him to get some help and take all of the packages up to our room.\n\n\"Come with me Sam.\" I took Sam's arm and walked her into the hotel and down the hall to the salon. A young lady met us.\n\n\"Yes sir, what can I do for you and the young lady?\"\n\n\"How long are you open tonight?\" I asked.\n\n\"On Saturday night we are open to 6pm for the ladies to get ready to go out.\"\n\nI paused to think-if Gary and Helen came over when we got up stairs, it would probably be 6:00 at least before they left to get ready, so 6:00 would be too late, I planned on leaving at 7:30. \"That's too early, thanks,\" I said.\n\n\"Sir, what do you need?\" The young lady asked.\n\n\"I was hoping you could get all of this long beautiful hair curled for me.\"\n\n\"That shouldn't take too long, what time would she be ready?\"\n\nI looked at Sam for a second, \"Probably about 6:30.\"\n\n\"Wait a minute.\" She walked back into the salon, a minute later returned with a young guy that had blonde hair and eyeliner. \"This is Andre, he said he could come to your room at 6:30 and curl her hair if that would work?\"\n\n\"Yes, I could curl all that beautiful hair for you in about 30 minutes, if you have it washed and dried for me.\" Andre was obviously gay.\n\n\"Sam, would that work for you?\" I asked.\n\n\"Sure, I will have it washed and dried. Thank you.\"\n\n\"Don't mention it!\" Andre said.\n\n\"Thanks, I want her to look very pretty tonight.\"\n\n\"Oh, she will! She will look fabulous. Honey, do you need help with your makeup?\" Andre asked.\n\n\"I would like her to look very grown up and sexy. Andre, can you manage that?\"\n\n\"No problem, it will just take a few minutes,\" he said.\n\n\"Perfect!\" I said.\n\nAndre walked back into the salon.\n\n\"Ma'am, just put the charges on my bill, Penthouse 2001,\" I told her.\n\n\"Yes sir.\"\n\nWhen we got to the room the valet was still carrying boxes in.\n\n\"Someone had a nice shopping trip!\" He said as we walked by.\n\n\"I did!\" Sam told him. I pulled a $100 bill from my pocket and gave it to her to give the valet. I walked down the hall to Helen's room and knocked. She opened the door and stood there wearing a bathrobe.\n\n\"I just wanted to stop by and let you know that we are leaving at 7:30 if you two want to join us. We are going to a nice steak house and then to a club I belong to.\"\n\n\"Oh...okay,\" Helen replied nervously. \"We would like to go with you two. How nice do we need to dress?\"\n\n\"I'm going nice casual, do you have a nice sexy dress?\"\n\n\"I can find something,\" Helen said with a smile.\n\n\"We just got back from shopping for Sam, the valet is still unloading packages. Helen, would you and Gary like to join us for some drinks in the room?\"\n\n\"Yes we would, thanks.\"\n\n\"Where is Gary?\"\n\n\"Taking a shower, I just finished. We slept late and just came back from the workout room.\"\n\n\"Good, we can stay out late then. I will see you two shortly then.\"\n\n\"Okay...uh...James? Is the offer still open?\"\n\n\"You mean for me to fuck you?\"\n\nHelen paused.\n\n\"Yes.\"\n\n\"Of course, I am looking forward to it.\"\n\n\"Thanks, we had a long talk last night.\"\n\n\"You should have,\" I said. \"You two come as you are when you are ready, I still have half a bottle of champagne from breakfast.\"\n\n\"We will be there in a bit,\" Helen said with a smile.\n\n\"I'm looking forward to it. I'm really looking forward to eating you.\" I said to stir her up.\n\nHelen looked at me and took a deep breath and smiled, then closed the door and I walked back to the room. Sam was talking to the valet.\n\n\"Did you get everything?\" I asked.\n\n\"Yes sir,\" the valet said. Sam handed him the money and he left.\n\nSam reached up and pulled my head down to hers and kissed me.\n\n\"Take your clothes off, I need to thank you,\" Sam said.\n\n\"We can get naked if you want, but Helen and Gary will be here in a bit.\"\n\n\"I will have to thank you later,\" Sam said.\n\n\"It's 4:00 now, we need to get them out of here in time for you to shower and get your hair dried, about 6:15?\"\n\n\"That will work. Where are we going tonight that I needed a sexy dress?\"\n\n\"I made arrangements for you to join me at my club.\"\n\n\"Where you took Amy!\"\n\n\"Yes, if you would like to go to very nice gentlemen's club?\"\n\n\"Hell yes! I have never been to a strip club!\"\n\n\"You will enjoy it.\"\n\n\"Are they going with us?\"\n\n\"If they want to. If they don't, I will get them a cab after dinner.\"\n\n\"Don't tell them where we are going!\" Sam said with a giggle.\n\n\"You think so?\"\n\n\"Yes!\"\n\n\"Okay then.\"\n\n\"You said you had something special for me tonight, thank you!\"\n\n\"Sam that is not it.\" Sam looked at me for a moment. She knew better than to ask me again what it was.\n\n\"I'm going to shower and you need to shower and shave,\" Sam said as she started pulling her clothes off.\n\nI took a quick shower with Sam and was finishing shaving when there was a knock on the door. \"Hang on a minute!!\" I washed my face off and took the towel with me and wrapped it around my waist before I opened the door.\n\n\"Hey you two, come on in. Sam is in the shower,\" I told Helen and Gary. They came in and I walked them to the sofa. \"You two get comfortable, I'll be right back.\"\n\nI walked back to the bathroom as Sam was exiting the shower.\n\n\"After you dry off grab a robe, they are here,\" I told her.\n\nI grabbed one of the hotel terrycloth robes and slipped it on and walked back out to Helen and Gary.\n\n\"Would you two like some champagne from this morning?\" I asked.\n\n\"I think I could use some,\" Helen said. I grabbed the bottle from the fridge and the four champagne glasses that had been washed and placed on the bar and carried it all to the table. I was pouring Helen a glass when I heard Sam.\n\n\"Hi you two.\" I saw Gary's eyes get really big. \n\nSam walked up naked while drying her hair with a towel. I finished pouring for Helen and handed her the glass. Sam stood and worked on her hair and talked to Helen and Gary until her hair was as dry as it was going to get. She gathered it up and pulled it all over her right shoulder then sat down with me.\n\n\"I have a question?\" Helen asked. \"What was all that screaming this morning?\"\n\n\"That would have been Sam and Kathy, the lady from room service last night,\" I said.\n\n\"Me and Kathy! You were the one fucking the shit out of her!\" Sam said.\n\n\"She came back up?\" Gary asked.\n\n\"Yes, I had asked her if she would like to come up and watch Helen and Sam this morning, but she was happy to join us,\" I told Gary.\n\n\"I need to be nicer to the ladies that come to the room,\" Gary said.\n\n\"Toad,\" Helen said, then we all laughed.\n\n\"Be careful Gary, you need to be able to read a person very well,\" Sam said. \"You need to know when a woman might be interested in you and your wife.\"\n\n\"I'm afraid I don't have any experience with that,\" Gary said.\n\n\"It just takes some time and experience, just like I know that Helen is ready for her first time with a woman,\" Sam added. Sam was cheating, she had heard them talking. Helen looked at Sam.\n\n\"How do you know that...I mean, you can't know that,\" Helen said.\n\n\"Sure I can Helen. You are looking at my naked body with just as much lust as your husband, and I'm sure you two talked about it. You are ready, aren't you?\" Sam said making it sound like a statement and not a question.\n\n\"She's ready,\" Gary said.\n\n\"Gary!\" Helen said. \n\nSam stood and walked over and stood in front of Helen. Helen looked her over for a moment.\n\n\"Give me your hand,\" Sam said to Helen. Helen reached up and Sam took her hand. \"Touch me.\"\n\nHelen hesitated, then Sam pulled her hand up and placed it on her huge breast. Helen looked, then began rubbing Sam's tit. Gary and I watched as Helen rubbed and squeezed on Sam.\n\n\"Helen, come with me,\" Sam said.\n\nHelen hesitated, but finally stood. Sam grabbed the edges of her robe and opened it and pulled it off her shoulders and let it fall. I looked her over, I noticed her small brown patch was gone. Gary must have talked her into shaving it after he saw Sam. Sam took her hand and led her over to the bed.\n\n\"Helen, lie on the bed,\" Sam told her.\n\nGary and I watched as Helen nervously slid up on the big bed. I got up and walked to the small eating table and grabbed a chair and moved next to the bed. \n\n\"Gary, grab one of the chairs from the table and we can sit next to the bed.\"\n\nGary did the same thing on the other side.\n\n\"Helen, just relax,\" Sam told her. Sam had slid up and was sitting next to Helen.\n\nGary and I watched as Sam slowly ran her hands over Helen's body. Helen tensed up when Sam began to rub her breasts.\n\n\"Relax,\" Sam said.\n\nSam squeezed and massaged Helen's breasts a few more minutes then turned around in the bed and lay so she could kiss her breasts. After Sam had kissed her breasts and body for a while she moved her mouth up and began licking Helen's nipple.\n\n'ohhhhhh' came from Helen.\n\nI looked at Gary and he was fixated on Sam. Sam was soon squeezing and sucking on Helen's nipples. Each time she removed her mouth, I could see that Helen's areolas were swollen from excitement.\n\n\"See Helen that is not so bad is it?\" Sam asked as she looked at her.\n\n\"No...it's not...\" Helen smiled at Sam.\n\nSam returned her mouth to Helen's nipple and sucked and licked on it some more. Soft moans were coming from Helen. Sam removed her mouth from her nipple and slowly started kissing her way up to Helen's neck. Once there, she kissed and licked her neck. Helen had her head back when Sam slipped up and kissed her on the mouth.\n\n\"Are you okay?\" Sam asked.\n\n\"Yes.\"\n\nSam placed her lips back over Helen's and kissed her until Helen accepted her tongue.\n\n\"Wow,\" came from Gary.\n\nI looked across the bed and Gary's cock was as hard as a rock. \n\n\"Beautiful isn't it.\"\n\n\"Yes.\"\n\nThe two of them kissed for a few minutes before Helen lifted her hand and began rubbing Sam's bare skin. Sam stopped kissing Helen's mouth and began kissing her way back down to her nipples. A short pause to lick, then she started kissing further down Helen's body. When Sam got to her mound, Helen was looking down at her. Sam started licking her mound as she looked up at Helen. Helen smiled nervously. Sam licked further and further down.\n\n\"Oh god!\" Came from Helen when Sam ran her tongue over the top of her slit. Sam licked her a few times then kissed her pussy.\n\n\"Spread your legs,\" Sam told her. She nervously spread her legs wide as Gary watched. Sam moved between them and leaned over and started licking the length of Helen's pussy\n\n\"Oh my god! Ohhhhhh!\" Came from Helen as she tried to watch. I bent over the bed to wedge a pillow under Helen's head, lightly trailing my fingers across her cheek as I finished and sat again. Helen briefly glanced up at me with a small smile before turning her gaze back to Sam.\n\nGary was watching Sam closely as she licked his wife's pussy. Sam spent some time licking and tonguing as Helen got more and more aroused. Helen arched her stomach up and moaned loudly when Sam slipped several fingers into her.",
        "\"Helen, are you okay?\" I asked.\n\n\"Yes!\"\n\nSam had her tongue shoved into Helen's slit as she worked her fingers around inside her. Several minutes later I looked at Helen and she had her head back with her mouth open. I watched as Helen's fingers curled into the sheets.\n\n\"Oh god!!\" She screamed as she arched her stomach up and down. Helen was coming hard. \"Oh fuck yes!!\"\n\n\"Damn!\" Gary said as he watched.\n\nSam removed her mouth from Helen's pussy and started rubbing her stomach. Helen was breathing so hard she couldn't talk. Sam rubbed for a minute.\n\n\"Was that okay?\" Sam asked.\n\n\"Oh god yes!!\"\n\nSam smiled and slipped her hands under Helen's knees and lifted her legs up then pushed them apart. Helen looked down to see what was next. Gary and I watched Sam spread Helen's labia apart with one hand then lean forward and placed her mouth over Helen's pussy. Helen screamed when Sam drove her tongue deep inside her. Gary and I watched as Helen went crazy as Sam drove her to two more huge orgasms in about 10 minutes. When Sam stopped, Helen was drenched in sweat and exhausted.\n\n\"I think you liked that,\" Sam said. \"Gary, does Helen react like that when you eat her pussy?\"\n\n\"I wish.\"\n\nSam started kissing her way back up toward Helen's head, for the last test. Sam looked into Helen's eyes just before she placed her lips over Helen's. Helen paused a moment then grabbed Sam's head and pulled her in tight. Gary watched as his wife kissed Sam. After a few minutes Sam removed her mouth, backed up, and then laid on Helen.\n\n\"Sam, that was incredible. Thank you.\"\n\n\"My pleasure.\"\n\n\"What do I do now?\" Helen asked.\n\n\"Whatever you want to do, you don't owe me anything,\" Sam said.\n\n\"Yes I do.\"\n\nHelen pushed Sam on her back. Gary and I watched awhile as Helen kissed Sam and sucked and licked on her huge nipples. Helen spent plenty of time sucking Sam's nipples until they were fully engorged with blood, then started kissing her way down toward Sam's pussy. Helen licked on Sam's smooth mound, then paused, then licked across the top of her slit.\n\n\"Emm, perfect,\" Sam said.\n\nHelen moved on the bed and pulled Sam's legs apart and moved between them. She lay between them with her legs hanging off the end of the bed and started licking Sam's pussy. Gary was watching his wife closely as she began to enjoy what she was doing. Sam moaned several times then reached down and put her hand on the back of Helen's head. Sam lifted her legs up and spread them.\n\n\"That's beautiful, isn't it Gary?\" I asked.\n\n\"God yes.\"\n\n\"I enjoy it every time I see it.\"\n\n\"How often is that?\"\n\n\"Probably every day.\"\n\n\"Oh my god. Every day?\"\n\n\"Yes. Sam and her sister live with me and my wife. We are all very close.\"\n\n\"Your wife lets you have sex with them?!\"\n\n\"You heard Sam this morning, they don't 'let' me do anything Gary, they want me to do other women.\"\n\n\"Uh...does Sam and her sister get together?\"\n\n\"You mean do they make love to each other?\"\n\n\"Uh...yes.\"\n\n\"Yes they do. Watching the two of them is very erotic.\"\n\n\"Lucky shit.\"\n\n\"I'll agree that it was 'lucky' that we found each other, but it is not luck Gary, we all have a very passionate love for each other. It appears that Helen has decided she enjoys this. I would suggest you encourage her to pursue her new found experience.\"\n\n\"How do I do that?\"\n\n\"You make sure you tell her how much you enjoyed watching her, then tell her it is okay if she wants to experiment with her friends.\"\n\n\"I will enjoy watching that!\"\n\n\"I didn't say you would be there watching, I said encourage her to experiment with her friends, alone. If she wants you to be there and watch, and she will, she will ask you. Her friends may not be ready for a threesomes yet.\"\n\n\"Oh, okay.\"\n\n\"And Gary, before we are finished, you will know how you feel about other men fucking your wife,\" I told him strongly. He looked at me, then I could see the realization that he understood what was about to happen. \"Then, you two will decide if that is what you two want to do. Your wife may decide another man fucking her is too much, but she may like spending time with other women. Can you accept that, Gary?\"\n\n\"I guess I will find out.\"\n\n\"That's it Helen, suck on my clit!\" Sam exclaimed.\n\nWe looked back and Helen was vigorously diving into Sam's pussy while she worked her fingers in and out of it. Sam had several juicy orgasms and Helen appeared to enjoy licking up all her juices. When she was finished, Helen climbed back to Sam's mouth and they exchanged passionate kisses for several minutes.\n\n\"Did you enjoy that?\" Sam asked.\n\n\"Oh god yes! Thank you for letting me try it!\" Helen said with a laugh.\n\n\"Is there anything else you want to do?\" Sam asked.\n\n\"Can I just play with your pussy?\"\n\n\"I would like that, Helen.\"\n\nHelen moved between Sam's legs. Sam lifted her knees up and let them fall to the side so we could all see her lovely pussy. Helen ran her fingers around Sam's pussy and stroked her labia.\n\n\"It is hard to explore yourself.\" Sam said.\n\n\"You are so perfect,\" Helen said as she ran her fingers over Sam's lips.\n\nWe watched as Helen explored. She played with and tugged on Sam's lips. After exploring the outside she slowly slipped her index finger inside her.\n\n\"I have fingered myself, but another woman feels so different,\" Helen said as she watched her finger slide in and out of Sam.\n\nI watched Sam slid her hands down and spread her lips wide apart for Helen to look.\n\n\"God you are beautiful,\" Gary said.\n\nWe watched as Helen stroked Sam's open pussy. After a few minutes she began to finger her clit.\n\n\"Helen, you know what feels good.\"\n\n\"Yes I do.\"\n\nShe teased Sam's clit for a little while then began rubbing circles around it harder and harder. Sam was moaning now as Helen got her exited.\n\n\"That's it!\" Came from Sam.\n\nSam moaned more and more as we watched. Helen stopped rubbing Sam's clit and took her hands and spread Sam's lips wide apart. Gary and I watched as Helen leaned over and flicked Sam's clit with the end of her tongue.\n\n\"Oh god!!\" Came from Sam.\n\nWe watched as Helen flicked her clit and circled it with her tongue. Sam began thrusting her hips up.\n\n\"I'm coming!!\" Sam screamed.\n\nHelen kept flicking her tongue as Sam came.\n\n\"Fuck!!\" Sam screamed and we watched as Sam's juices squirted out several inches. Helen placed her mouth over Sam's clit and sucked them all up.\n\n\"Oh...shit!\" Came from Sam. \n\nHelen sat back up and rubbed Sam's mound.\n\n\"Gary, did you learn anything?\" Helen asked.\n\n\"Is that what you like?\"\n\n\"Yes. Sam, did I do okay?\"\n\n\"Oh god, yes. Helen, women just know what feels good.\"\n\n\"You sure did,\" Helen replied.\n\nHelen lay next to Sam.\n\n\"Is it something you want to do again, or is this just an experiment once since you two are out of town?\" I asked. Helen looked over at Gary.\n\n\"Gary, can I do it again?\"\n\nGary looked at me, understanding what I had told him.\n\n\"Honey, if you have some friends that you think are into this, go ahead. I don't have to be there and watch...each time. You looked like you really enjoyed it.\"\n\nHelen sat up and crawled across the bed and sat in Gary's lap and kissed him. I could tell he was savoring the taste of Sam.\n\n\"We can talk more about it,\" Helen said with a big smile. \"Thank you for letting me try.\"\n\n\"I think it is time for some more champagne,\" I told everyone.\n\nSam got up and helped me pour the glasses.\n\n\"Was she okay?\" I asked quietly.\n\n\"Yes she was. She likes it.\"\n\n\"You need to stall, or Gary will come too fast.\"\n\n\"I know.\"\n\nWe carried the champagne to Helen and Gary, still sitting together. We sat on the edge of the bed.\n\n\"James, Gary told me that Sam and her sister live with you and your wife, is that true?\" Helen asked.\n\n\"Yes they do.\"\n\n\"How do you four work out everything?\" Helen asked as she sipped her champagne.\n\n\"Helen, they have been living with us awhile now. It would be hard for me to explain the way we all love each other. But, there is no competition or anything like that. Some nights, especially on the weekends, we all sleep together and have sex. Other times, we just end up where we end up. Sam and her sister both enjoy making love to my wife, and she enjoys it. I don't feel left out, I don't mind if they want to spend time with each other. It doesn't matter.\"\n\n\"Sam, how old are you?\" Helen asked.\n\n\"I'm 18, 19 soon.\" Helen paused to look at Sam.\n\n\"Helen, Sam did not move in with us until this summer. I do not have sex with underage women,\" I told her. That seemed to return the blood to her face. \n\n\"Sam, you are awfully young.\"\n\n\"Sam is young, but she is an incredibly mature and sensuous woman,\" I said looking at Sam.\n\n\"Yes she is,\" Gary said.\n\n\"So, where do you two go from here?\" Sam asked.\n\n\"I guess we will have to talk,\" Gary said.\n\n\"Helen, what do you want to do?\" I asked. She looked at Gary.\n\n\"Honey, I understand why you like eating me so much now, it is fun, and erotic,\" Helen told him.\n\n\"You are so right,\" Gary said looking at Helen, then at Sam.\n\n\"Gary, are you wanting to eat me now?\" Sam asked. \"I'm already wet.\"\n\n\"Very much.\"\n\n\"That's great, after you eat me and finish fucking me, Helen will know how she feels about it,\" Sam told him.\n\n\"I guess so,\" Gary said with a smile. \"How do we do this?\"\n\n\"I want to watch first,\" Helen said looking at Gary.\n\n\"That would be my suggestion,\" I said. \"You need to take in what is happening and how you feel, Helen. You watch them, then Gary can watch us.\"\n\n\"Okay, I think that will work,\" Gary said. I knew Gary just wanted to do Sam, but he may not have been ready for what I was going to do to his wife.\n\nSam tipped her glass up and finished her champagne.\n\n\"I'm ready!\" She said as she crawled back to the middle of the bed. Gary smiled as he looked.\n\nHelen stood and walked across the room and poured herself another glass of champagne. Gary stood and sat on the edge of the bed, I sat in his chair.\n\n\"Sam, I'm going to love eating your young pussy,\" he said.\n\n\"I expect you to!\" Sam slid her legs up and let her knees fall to the side, letting Gary enjoy the full view of her beautiful pussy.\n\nHelen walked back to the bed.\n\n\"Helen, you can sit in my lap if you would like?\" I said. She looked at me and smiled and walked to the chair. She was sipping her champagne as she looked down at my hard-on. The chairs had no arms on them so she sat across my lap. I kissed her on the cheek and reached up. \"No more champagne,\" I said as I took her glass and sat it on the table. \"Watch your husband.\" I wrapped my arms around her waist and held her as she turned to watch.\n\nGary was doing a respectable job of eating Sam. I knew he was enjoying her young pussy. He was taking it nice and slow.\n\n\"Does Gary enjoy eating you?\" I asked Helen.\n\n\"Yes he does, he always has.\"\n\n\"Good. What are you thinking?\"\n\n\"He is enjoying that way too much,\" Helen said with a giggle.\n\n\"I'm sure he is, did you enjoy Sam eating you?\"\n\n\"Very much.\"\n\n\"Why?\"\n\nHelen looked at me as Sam groaned some more.\n\n\"Because she is very good.\"\n\n\"And?\"\n\n\"I found another woman to be very...stimulating.\"\n\n\"You don't get that from your husband?\"\n\n\"Not like that? It was just so erotic.\"\n\n\"And a little dirty?\"\n\n\"Not dirty, but very...I had to overcome my inhibitions.\"\n\n\"Yes you did. Are you ready to overcome the rest of them?\"\n\n\"Yes I am,\" Helen said looking at me with a big smile.\n\n\"Oh, that's it Gary, drive your tongue in me!\" Sam moaned.\n\nWe returned to watching. Gary slowly drove Sam to a nice orgasm. He looked up and moved up and sucked on Sam's tits.\n\n\"I'm sure he is enjoying that,\" Helen said.\n\n\"I do. You have nice tits, I'll enjoying sucking on them too.\" I slid my hands down onto Helen's naked thighs, she looked down at them. \"Still okay?\"\n\n\"Yes.\"\n\nWe looked back and Gary was kissing Sam. A minute later Sam told him to roll on his back. Once Gary was on his back, Sam straddle him and worked her way up and placed her pussy on his mouth.\n\n\"I haven't tried that,\" Helen said.\n\n\"My girls love it. I will let you try it.\"\n\nWe watched Sam work her pussy on Gary's mouth long enough she had another nice orgasm and gushed juices all over Gary. Sam leaned forward and sucked his cock in her mouth. She sucked on him for a few minutes to get him wet and fully hard, then she climbed off his mouth and down to his cock and worked his cock into her pussy.\n\n\"I want you to suck my cock before I eat you,\" I whispered in Helen's ear. \"I want to feel your mouth on my cock until I come down your throat.\"\n\nHelen looked at me, then smiled. \n\n\"Okay.\" She said.\n\nI used my hands to pull her legs apart some. I slid my hand over and ran my fingers over her wet pussy lips. She spread her legs some more.\n\n\"Oh god, you feel so good!\" Gary said as he looked at Sam. \n\nSam was taking her time because she knew Gary would come too fast if she tried too hard. We watched as he reached up to play with Sam's tits. I slid my fingers over Helen's pussy, getting them covered in her juices, then moved my hand to her tit and smeared her juices on her nipple. She reached up and placed her hand over mine. After that, she took my hand and lifted it to her mouth and sucked my fingers in as she watched Sam. After she slipped my fingers from her mouth I took her hand and placed it on my cock. She grabbed it and looked down.\n\n\"You put this in me slowly,\" she warned.\n\n\"Oh, I will, very slowly, so that you enjoy every inch of it.\" Helen squeezed my cock.\n\nWhile we watched Sam work her pussy on Gary's cock, I played with Helen's tits and her pussy. She still had her hand wrapped around my cock when I slipped a couple of fingers in her.\n\n\"Emmmm.\"\n\nI whispered in her ear.\n\n\"Is this the first time you have had another man's fingers inside you since you were married?\" I asked.\n\n\"No.\"\n\nI pushed my fingers in further and harder.\n\n\"Ohh.\"\n\n\"Another man?\"\n\n\"Several.\"\n\n\"Is that what you meant when you said he left you up to you own devices?\"\n\n\"Yes.\" Helen whispered.\n\n\"You are a little slut aren't you?\"\n\n\"Yes.\"\n\nI kept my fingers inside Helen as Sam fucked her husband. Sam did a very good job of keeping him on the brink but not letting him come for a long time. Thirty minutes later, Gary finally came in Sam as she had another orgasm. Helen had already had a nice gentle orgasm as I rubbed her clit.\n\n\"Oh god!!\" Gary screamed as he jammed his cock up into Sam. I was impressed he had lasted that long.\n\n\"Gary did a good job, I am surprised he went that long,\" I told Helen.\n\n\"He is pretty good, over the years he has been able to last longer and longer. We usually fuck for that long, although I really didn't expect him to last that long with a teenager.\"\n\n\"Very good, then you will be okay with me fucking you at least that long then.\" Helen looked at me, nodded, and smiled.\n\n\"At least!\" She said with a nice seductive smile. I had a nice surprise for her, and her husband.\n\n\"Sam, you are wonderful!\" Gary told her as she slid off his cock.\n\n\"That was a nice fuck, Gary, thank you!\" Sam said. She looked at the two of us. \"What do you think, Helen, were you okay with that?\"\n\n\"I think so. I'm not sure about him fucking my friends though. They will think we are swingers.\"\n\n\"You can work up to that, just with your special friends, especially if they have special husbands,\" Sam said. \"Gary, come with me, I need to rinse all of your cum off me.\"\n\nGary got up and followed Sam to the bathroom\n\n\"Are you ready?\" I asked Helen.\n\n\"Oh yes, you have me so horny now.\"\n\nWe both stood and crawled to the middle of the bed. Helen reached down and stroked my cock for a few minutes then moved so she could give me a blowjob. She had just gotten to a point where she was going well when Gary and Sam came back. Gary paused a moment to watch his wife giving another man a blowjob. He sat back in his chair and Sam sat on the other side of the bed. Helen was doing well, then she moved so she could get between my legs on all fours and started really working on my cock, gagging a few times as she sucked it deep into her mouth.\n\n\"Gary, your wife gives good head,\" I told him.\n\n\"Yes she does.\"\n\nHe kept watching his wife as she moaned and groaned while she gave me an excellent blowjob. Helen sucked my cock for a good 15 minutes before she started sucking it deeper into her mouth. I was enjoying someone new and different and she was really trying to take it down her throat. She was doing very well as she moaned, so I let her go for a bit longer then shoved my cock up into her mouth and filled it full of cum. She moaned as she sucked the head of my cock and pumped the remainder of the cum out.\n\n\"Emmm, that was delicious!\" Helen said. She crawled on top of me and lay. \"I couldn't get it all down my throat.\"\n\n\"It takes practice,\" Sam told her.\n\n\"I bet it does!\"\n\nI grabbed Helen and rolled her onto her back then moved on top of her and started kissing her lips, then I spent some time kissing her all over. By the time I got to her mound she was already breathing hard. I licked and kissed her for a few minutes then placed my mouth over the top of her clit and sucked and tongued it. Helen was in heaven.\n\n\"Oh that is perfect!\" She told me.\n\nI kept going from that angle until she had a huge wet orgasm. While she was recovering I moved and spread her legs apart and got between them. I went back to work on her pussy, driving my tongue deep into her as well as my fingers. For the next 15 minutes she screamed through several more orgasms. After a huge one, I let her rest as I laid next to her sucking on her nipple.\n\n\"Oh god, that was wonderful,\" she told me.\n\n\"It's time for you on top,\" I said.\n\n\"Like Sam?\"\n\n\"Yes.\"\n\nI rolled on my back and Helen slowly worked her way over my mouth. She lowered her pussy down facing my cock. I grabbed her hips and held her as I moved her around so I could drive my tongue up into her pussy.\n\n\"Ohhh, I like this! Gary, will you let me do this?\"\n\n\"I liked doing it with Sam.\"\n\n\"Good!\" I heard Helen say.\n\n\"Helen, work your pussy around so that you are getting what you want,\" Sam told her.\n\nI felt Helen working around until she settled. I worked my tongue in and out of her pussy. Her juices were flowing. Helen began to moan and groan.\n\n\"Oh this feels sooooo good!\" Came from Helen. She leaned forward and drove her clit in my mouth. I started sucking hard on it. Soon, Helen was coming in a huge orgasm. Her juices were squirting in my mouth.\n\n\"Ahhhhhhhhhh!!\" \n\nHelen lifted her pussy off my mouth and I pulled her hips down.\n\n\"Fuck! That was incredible!\" Helen yelled. \"Gary, you have to do me this way!\"\n\nI held Helen's hips tight, then began licking her asshole.\n\n\"No, no, no, no!! Oh shit!!\"\n\n\"What's wrong Helen?\" I heard Sam ask.\n\n\"He is licking my asshole!!\"\n\n\"Has Gary never done that for you?\" Sam asked.\n\n\"No man ever has!!\"\n\nI held on to Helen as I continued. She was squirming and trying to pull away.\n\n\"Ahhhhhhh!! Stop James!!\"\n\nHelen's asshole was nice and wet now. I took my index finger and slipped it in her ass.\n\n\"Oh, yes!!\"\n\nHelen stopped trying to pull away. I worked my index finger in then two fingers. Helen moaned.\n\n\"Now what, Helen?\" Sam asked.\n\n\"He has his fingers in my ass.\"\n\n\"Gary, does she like that?\"\n\n\"Yes she does.\"\n\nHelen moaned and groaned as I worked my fingers deep in her ass. After some time I slipped them out and her asshole was open. I pulled her back down and jammed my tongue in her ass.\n\n\"Oh my god!! He has his tongue in my ass!!\"\n\n\"Gary, would you like to try that with me?\" I heard Sam ask.\n\n\"Yes I would.\"\n\nI was working my tongue into her ass as she pushed back and groaned. I felt the bed move.\n\n\"Go ahead, Gary.\" I heard Sam say. \"That's it!\"\n\nI kept working on Helen's ass as I heard Sam moaning.",
        "\"Oh Gary! Do you like doing that?\" Helen asked.\n\nI didn't hear Gary say anything.\n\n\"Yes Gary, that's it!\" I heard come from Sam.\n\nHelen was moaning hard. I was tonguing her ass and she was watching her husband. A few minutes later she was screaming she was coming.\n\n\"Oh my god!! Yes!!\"\n\nHelen jerked hard then I felt juices squirt from her pussy and run down my neck.\n\n\"James, stop!!\"\n\nHelen got off my head and turned around and straddled my cock. \n\n\"Oh yes, you are so big,\" she said as she worked the first few inches into her pussy.\n\n\"Just do it, Helen,\" Sam said.\n\nI looked at Sam. She was on all fours and Gary was working his fingers in and out of her ass.\n\n\"Tongue me, Gary!\"\n\nGary pulled his fingers out then started licking Sam's asshole.\n\n\"Oh fuck yes!\" Helen said watching her husband. She forced her pussy all the way down on my cock.\n\n\"Ahhhhhhhhh, yes!\" She exclaimed as she slid down.\n\nI felt some resistance before she got all of it in her, but she paused a second then used her weight to push all the way down.\n\n\"Ohhhhh, I have never had a cock in me this big!\" I think Helen had forgotten her husband was sitting there. \"Gary bought me a vibrator this big, but this is so different, and warm.\"\n\nHelen sat for a minute and then began to work her hips. Being an older woman, she knew what to do. I reached for her breasts and rubbed them for a minute then began squeezing her nipples as she kept going. She would alternate between grinding her hips into me and leaning over and putting her hands on the bed and working her pussy up and down. She had several nice orgasms over the next half hour.\n\nSam was enjoying being fingered and licked. She had come at least once from Gary tonguing her ass.\n\n\"Oh, that is so nice! I'm so full.\" Helen had her head swiveled so that she could look at her husband, \"Gary, will you do that to me from now on?\"\n\n\"Yes I will! Just before I slip my cock in your ass!\" Gary said.\n\n\"Helen, James always does this to us just before he slips his huge cock in our ass.\"\n\n\"He can get this thing in your small ass?\" Helen asked.\n\n\"Yes.\"\n\n\"Oh my god.\"\n\n\"Gary...I will let you fuck my ass...if you let James do Helen's ass,\" Sam said.\n\n\"Oh my god!\" Gary said.\n\nI could see his cock was turning purple again.\n\n\"Helen?\" Gary said.\n\n\"I don't know, Gary. He is stretching my pussy pretty tight!!\"\n\nWe watched as Gary worked his fingers in Sam's ass. Helen was still working her pussy on my cock. Sam was moaning as Gary worked on her. Helen kept working her pussy until she came again.\n\n\"Oh fuck!! Okay!!\" Helen screamed.\n\n\"Gary, I guess that means you can finish the job,\" Sam said.\n\nSam was up on all fours on the bed. I watched as Gary climbed on the bed behind her. He grabbed his cock and started it into Sam's ass.\n\n\"Ohhhh yes! Fuck my ass Gary!\"\n\nHelen was slowly working her pussy on my cock as she watched her husband. He was taking his time slipping in and out of Sam. Helen was hot, I watched as she ran her hands down to her pussy and started fingering her clit.\n\n\"Oh god Gary, harder!\"\n\nSam looked over at me and smiled as she grew hotter and hotter. I winked at her and she smiled. Gary grabbed her hips and began slamming into Sam's ass. I was enjoying watching Sam's tits swing as she got fucked. I returned my attention to Helen, she was humping me faster and was rubbing her clit harder.\n\n\"Fuck her Gary!\" She shouted.\n\nGary was working his cock in and out of Sam hard. Sam was enjoying it. \n\n\"Fuck me!!\" Sam screamed.\n\n\"Ahhhhhhhhh!!\" Came from Gary as he started pumping cum into Sam's ass.\n\n\"Oh fuck!! Came from Sam as she came hard.\n\n\"Oh...my...god!!\" Helen screamed as her fingers became a blur over her clit. She started jerking and screaming as juices kept gushing from her pussy over and over. \"Oh god...never!!\" Helen kept coming again and again.\n\n\"Oh fuck, Sam. That was wonderful!\" Gary said.\n\nI watched Sam push her ass back into Gary. He leaned forward and reached around Sam and grabbed her tits.\n\n\"Ahhhhhhhhhh!!\" Helen screamed as she tensed up then fell on top of me.\n\n\"Oh James, your cock feels so fucking good inside me!\"\n\nAfter Helen was rested she sat up. She pushed herself up on her knees and grabbed my cock and placed the tip at her asshole.\n\n\"Let me do his!\" She said.\n\nHelen held my cock as she pushed, but she was so hot, she pushed hard. My cock slipped into her ass and she pushed down.\n\n\"Oh my god! You are so big!\" \n\nHelen removed her hand from my cock and began pushing down. Inch by inch she slid down as she bit her lip.\n\n\"Damn!\" Gary exclaimed.\n\nGary was watching my cock slip into his wife's ass as he squeezed Sam's tits.\n\n\"Gary, I feel your cock getting hard again,\" Sam said. Gary raised up and began sliding his cock in and out of Sam's ass again.\n\n\"Ahhhh!!\" Came from Helen as she shoved herself all the way down.\n\n\"You feel good,\" I told Helen.\n\n\"You do too!\"\n\nHelen pulled her legs from under her ass and put them up by me and leaned back on her hands, just the way I liked it. She went to work sliding her ass up and down my cock. She knew how to get what she wanted.\n\n\"Oh god, this feels so good!!\" She was having a good time sliding up and down my big cock.\n\nHelen took her time, but worked her ass hard on me. I was holding her legs and watching my cock slide in and out of her nice looking ass. Her pussy was still dripping from her previous orgasms. Helen sped up, frantic to have me come in her ass.\n\n\"Oh god!! \"I'm going to come again!!\" Helen was breathless as she worked harder. \"Oh fuck!! I'm coming!!\" Helen had her biggest orgasm so far. She kept slamming her ass down on my cock.\n\nI heard Sam and Gary moaning somewhere.\n\n\"Oh your cock feels so good deep inside my ass!!\" Helen screamed.\n\nI heard Sam screaming as I watched Helen work her ass. She was slamming down on me hard. I was about to come.\n\n\"Fill my ass full of cum, please!!\" Helen screamed.\n\nI grabbed her legs and yanked her down hard on my cock and began pumping her full of cum.\n\n\"Oh yes!!\" I yelled.\n\n\"Oh shit, your cum is so hot!!\"\n\nHelen was trembling as she sat on my cock after her final orgasm.\n\n\"I'm finished,\" Helen said softly.\n\nWe heard Sam and Gary finishing.\n\nI reached for her hands and she took mine and I pulled her up.\n\n\"I'm exhausted,\" she said. She looked spent.\n\n\"Oh that was good!\" I told her.\n\n\"Yes...it...was...\"\n\n\"Gary, were you okay with that?\" Helen asked.\n\n\"You looked like you enjoyed it,\" he said.\n\n\"I did, I have never come so much, damn you James!\"\n\n\"I wanted to make sure you enjoyed your first time with another man, just in case you two decide not to do this again.\"\n\nHelen rolled her head to look at Gary as he lay with Sam.\n\n\"What do you think, Gary?\" She asked. As she asked I flexed my cock inside her, drawing her eyes briefly back to me as she waited for her husband to respond.\n\n\"I really enjoyed watching and I know you enjoyed it,\" he said.\n\n\"Can we do this again?!\" She asked.\n\n\"If you are okay with it, I am. I am not sure you will ever get another fuck like that, but I am happy you had a good time.\"\n\nHelen, with me still inside her, took a moment to look lovingly at her husband before responding softly, \"thank you, Gary.\"\n\nHelen lifted her ass up and I slid my cock out of her and looked at the clock, it was 10 till six.\n\n\"Let's go shower first,\" I told Helen. I got off the bed and helped her up. She grabbed my still partially erect slick cock. I took her to the shower.\n\n\"James, that was fucking wonderful, I have never been fucked like that before. I mean it.\"\n\n\"As long as you two enjoyed it and everything is okay.\"\n\n\"I think it is going to be. I think Gary got off on watching me get fucked.\"\n\n\"Did you get off on watching him fuck another woman?\"\n\n\"Yes I did. You are right, it is very erotic watching him please another woman. I hope some of our friends and husbands want to share.\"\n\n\"Just take it slow. You may want to experiment some more without Gary watching. He will be okay with that. Remember that this isn't for everyone, so pay attention to who you can trust with this kind of thing.\"\n\n\"Are you sure?\"\n\n\"Yes. I let my wife experiment a lot alone with other women when she wants. When you are ready, you and your friend let Gary watch you in a 69.\"\n\n\"Do men like that?\"\n\n\"I think it is beautiful, and I'm pretty sure that I speak for most men on this.\"\n\nWe got in the shower. Helen wanted to play with my cock as the water ran over us. While I was soaping up her tits and the rest of her body she kept stroking my cock. Soon she had me hard again so she looked into my eyes then slid down to her knees and sucked my cock into her mouth. She was going at it like she was starved. Much more aggressively than when her husband was watching. I reached down and placed my hands in her wet hair and pulled her onto my cock, sliding more into her mouth. She kept going.\n\n\"Are you okay?\" I asked her. She slipped her mouth off my cock and looked up.\n\n\"I want all of it!\" She slid my cock back in her mouth and started shoving her mouth down on me. I took her head and pulled it in harder. She didn't resist so I pushed harder until I felt the head of my cock sliding down her throat. I released her, but she held her head there for a few seconds before I felt her pulling off.\n\n\"That is what I fucking want! Fuck my mouth!!\"\n\nWhen Helen slipped her lips back over my cock, I did what she requested. I jammed my cock down her throat as I held her head, over and over I thrust. I didn't get the opportunity to do this often, so I took my time. Helen was being very aggressive as she sucked. I knew we had spent too long at this, but I eventually jammed my cock down her throat and shot a huge load of cum down it. Helen sucked it all out then stood up.\n\n\"I wanted to do that before, but I didn't think Gary would like seeing me deep throat you. That was good, thank you.\"\n\n\"Thank you.\"\n\nWe got rinsed off and left the shower and dried off. When we went back to the bedroom. We didn't see Gary or Sam. About that time the door came open and Gary and Sam run through it laughing.\n\n\"Where did you two go?\" Helen asked.\n\n\"To your room to shower!\" Sam said.\n\n\"Gary, I think you have had enough.\" Helen said as she sat on the end of the bed.\n\n\"Emmm, yes! Thanks Sam.\" Gary said.\n\nSam turned to Gary and grabbed his hard cock.\n\n\"I had a good time too, thanks Gary.\"\n\n\"We hope you two had a good time, and we hope that you will take something away that you can use to enhance your sex lives,\" I told them.\n\n\"I think we will,\" Gary said. \"You two have been nice to let us see what we like.\"\n\n\"Is there anything else you two do?\" Helen asked.\n\n\"Yes, we like to watch people fuck,\" Sam said.\n\nGary smiled at Sam then looked at his wife.\n\n\"On the bed Helen, on your knees!\" Helen giggled then crawled up on the bed on all fours.\n\n\"It's the least we can do for you,\" Gary said as he got behind his wife and slipped his cock into her.\n\nSam turned and sat on the bed next to them as they got a good rhythm going. I sat in the chair and watched as Gary pounded Helen. Fifteen minutes later, the two of them came at the same time. There was a knock at the door, I looked at the clock and it was 6:30.\n\n\"Just a minute!! That will be the guy coming to fix Sam's hair,\" I said.\n\n\"Oh, good idea, I need to do mine,\" Helen said as her and Gary got off the bed and found their robes. \"We will be ready at 7:30.\"\n\nI picked up my robe as they headed to the door. I opened the door and they left and I let Andre in.\n\n\"Oh me! Having some fun I see!\" Andre said.\n\n\"A little.\"\n\n\"Where is that beautiful young lady?\"\n\n\"In here!\" I heard Sam call from the bathroom.\n\nWe walked to the bathroom and Sam was sitting naked in the chair brushing her hair.\n\n\"I guess we will get started!\" Andre told her.\n\nI went back to the bedroom and got dressed. I could hear Sam and Andre laughing as I finished. I straighten up the room and the bed, the sheets were covered in cum and female juices. I called housekeeping and asked if they would come and change the sheets later...the penthouse has its privileges. I would also leave $50 on the bed. I sat in one of the big chairs and waited.\n\n\"What do you think?\" Sam asked standing in front of me with all her long red hair curled in big curls and her makeup perfect. Andre was watching, waiting for my response.\n\n\"Excellent! Thank you Andre.\"\n\n\"My pleasure!\"\n\nAndre went to pack his things up as Sam turned for me.\n\n\"You need to get dressed, it is getting late.\"\n\nSam walked over to the packages she had acquired and got out the dress and shoes. She got the black stockings out she had bought and sat on the bed and slipped them on as Andre and I watched.\n\n\"Those are so hot!\" Andre said.\n\n\"Sam, when you sit, the tops are going to show,\" I told her. She looked at me and smiled.\n\nAndre got ready to go but stopped to watch as Sam stood and slipped the black silk dress on. He walked to Sam and helped her get the dress on and in all the right places.\n\n\"You are just perfect!\" He said.\n\n\"Thank you.\"\n\n\"Yes, thank you for helping,\" I told him and gave him $100. He smiled and left the room.\n\n\"Sam, you look gorgeous.\"\n\n\"Thank you. What time is it?\"\n\n\"We have about ten minutes.\"\n\n\"That was a first, I have never been with you when you picked up another couple,\" Sam said.\n\n\"It is rare, but you seemed to like the idea.\"\n\n\"I did! Can we do it again sometime?\"\n\n\"If the right occasion arises. What about Kathy?\" I asked.\n\n\"That was fun and erotic. The first time I am with another man or woman, I find it erotic. With the woman, I find it challenging to find all the ways to turn her on while I eat her.\"\n\nListening to Sam talk, I felt like there was going to be a lot more to her than Dawn and I suspected. She was saying things that only Dawn and I talked about.\n\n\"Sam, since you have never been to a strip club, especially one like this, I need to explain a few dos and don'ts.\"\n\nI was explaining things to Sam when there was a knock at the door. I went and opened it and it was Helen and Gary. I looked Helen over, she was wearing a blue dress similar to Sam's, but not quite as short. Sam came to the door and they looked her over as we walked out.\n\n\"Let's go. It will take about 20 minutes to get to the steak place. You two ladies are going to liven up the place,\" I told them.\n\nOnce we were in the limo sitting across from each other, they wanted to talk about how to approach other women and couples. We talked the entire ride as I gave them a quick lesson . Gary had been looking at Sam's legs. I had been looking at Helen's thighs. I was surprised she had on a blue garter belt that matched her dress. The dress was short enough the tops of her black stockings showed too.\n\n\"Helen, that dress is awful sexy,\" I told her. She smiled.\n\n\"It's not as short as Sam's, but it shows a lot.\" She said with a smile as she pulled the hem up to show me the garter belt was all she had on.\n\n\"Perfect.\"\n\nWe stopped at the front of the restaurant. As we exited the limo and I told the driver to be back at 10:00. I also told him where we were going after that and asked him if he would be available to pick us up about 4:00am. He explained that the hotel limos were on call 24/7. He gave me a number to call.\n\nThey were waiting on me at the door as I walked up so we went in and were seated. I asked Sam to not try and order any alcohol. She pouted, but then smiled. We had a nice long dinner with wine and dessert as we talked.\n\n\"James, where is this club?\" Gary asked.\n\n\"Other side of town. It will take about 20 minutes from here.\"\n\n\"What kind of club is it?\"\n\n\"A very exclusive Gentlemen's club, I am a member.\"\n\n\"That sounds interesting,\" he said.\n\n\"Does gentlemen's club mean strip club?\" Helen asked.\n\n\"Yes, is that okay with you?\"\n\n\"Yes it is.\" She waggled her finger at her husband, \"He will never take me to his.\"\n\n\"Helen, this is a very elegant place, you will enjoy it,\" I told her.\n\n\"Maybe the Toad will take me from now on!\" We all laughed.\n\nWe finished dinner and went to the limo. The ride across town was long enough that dinner had time to settle while we talked some more. When we pulled up, the valet let us out. Gary had gotten out first, when Helen leaned over to get out I ran my hand up the inside of her leg to her crotch, she paused a moment, then she got out. Sam exited and I looked at her ass as she bent over, then I got out.\n\n\"I think we will have a good time tonight.\" I told everyone.\n\nWe walked to the door and I showed the hostess my VIP card. She looked at Sam a second.\n\n\"You are 18?\" She asked.\n\n\"Yes,\" Sam answered.\n\n\"You look older than that. This way Dr. Smith.\"\n\nWe were led to a nice table at the front of the stage that I had asked for. The hostess picked up the 'Reserved' card. The music was on and the show was going on as we sat.\n\n\"Nice place,\" Gary said.\n\nWe had only been sitting about a minute when one of the beautiful waitresses walked up in a thong and a very small top. They usually waited until after midnight to take their tops off and sometimes their thongs.\n\n\"My name is Sara, what may I get for you, Dr. Smith?\"\n\n\"What would everyone like? A nice wine or some champagne?\" I asked. We settled on a nice wine. Sara walked away and we watched her nice ass.\n\n\"There are some pretty women here,\" Gary said as he looked at the stage where a redhead was performing.\n\n\"You will find that the women here are very pretty. The members make sure they are well paid,\" I told Gary. Ashley had told me once that she made well over $100,000 a year just in tips.\n\n\"I will keep that in mind,\" Gary said with a smile.\n\nWe watched the redhead finish up before Sara came back with the wine. She sat four wine glasses on the table and opened the bottle.\n\n\"I will be your waitress all night. Is there anything else I can get for your party, Dr. Smith?\"\n\n\"Sara, I need some cash please.\"\n\n\"Very good, I will be right back.\"\n\n\"Gary, if you need cash, she will be back with a form to write how much you need and it will be charged to your credit card,\" I told him.\n\n\"Great, I didn't have time to get any at the hotel.\"\n\n\"Can I?\" Sam asked.\n\n\"She brought you a glass, I guess so.\"\n\nI poured the four of us a glass of red wine. Sam sipped it slowly as she looked around. \n\n\"The place is full,\" Sam said.\n\n\"Probably about 150 people. The place will get crazy after midnight,\" I told Sam.\n\n\"How do you swing a table in front of the center stage?\" Sam asked with a smile. I just smiled back at her.\n\n\"How do you do it?\" Helen asked.\n\n\"I am a VIP a member, there are not many of us. It comes with perks,\" I told her.\n\n\"I'm a VIP member at my club, but it doesn't come with these perks,\" Gary said.\n\n\"Gary, your membership is probably not $75,000 a year.\"\n\n\"Damn,\" Gary said. \"What does a regular membership cost?\"\n\n\"Regular members pay $20,000 a year. That is why this place is so nice and the girls are so beautiful. It is a very exclusive club.\"\n\n\"Must be at that price.\"\n\nA gorgeous black girl came out on the stage and started dancing. I had not seen her before and she had an incredible body with excellent tits. We were enjoying her show when Sara came back. She handed me the form and asked Gary if he needed one. He said yes. I wrote $10,000 in $100 bills on it and signed it and gave Sara my AMEX. She waited while Gary finished.\n\n\"Thank you, I will be right back.\"\n\n\"I would have thought the waitresses would be topless,\" Helen said.\n\n\"They will be. VIP members get their own personal waitress. I will take care of it.\"\n\nIt was getting close to 11:00 and I figured I could get Sara out of her top and thong before midnight. I had looked around and none of the other girls were topless yet. We returned to watching the show. The young lady was putting on an excellent show for us. She was down to her thong as we watched her dance.",
        "\"She is very pretty,\" Sam said.\n\n\"Wait until you meet Ashley.\"\n\n\"Good evening, Dr. Smith!\"\n\nI looked up and it was Rick, the owner.\n\n\"Good evening, Rick!\" I stood to shake his hand. Sara was standing with him.\n\n\"This must be the young lady Ashley asked me about, how are you?\" He said to Sam.\n\n\"I'm fine, thank you!\" Sam said.\n\n\"Rick, these are some friends of ours in town from Houston. I wanted to show them what a real gentlemen's club was like.\"\n\n\"Hi, nice to meet you!\" He said to Gary and Helen. \"Enjoy the club, if you need anything, Sara will get it for you!\" The music was getting loud.\n\n\"Rick, do you have more than one club?\" Gary asked.\n\n\"I'm opening another in New Orleans soon, if I can get the city council to cooperate!\"\n\n\"What about Houston!\"\n\n\"I haven't looked to see what they have!\"\n\n\"Nothing like this,\" Gary said. \"I'm a VIP member of the best one there and it is nothing like this at all.\"\n\n\"What about the laws there!\"\n\n\"Alcohol and food are okay, no legal touching, lap dances are okay.\"\n\n\"I can't make money if they don't allow alcohol like some states!\"\n\n\"Listen Rick, if you are interested in Houston give me your card. I would like to discuss being a backer! I know enough people, there wouldn't be any problems!\"\n\n\"Sure!\" They exchanged cards.\n\n\"We'll talk!\" Gary said.\n\nRick walked off and Sara handed me and Gary an envelope. I opened it and took the banded stack of $100 bills out as Sam watched. I took half of them and handed them to Sam, she looked at me then put them in her small black purse.\n\n\"Sara, would you put this on the stage for me?\" I asked as I handed her $200. Gary handed her $200 to keep up with me. Sara took them to the stage and came back.\n\n\"Anything else?\" She asked. I made a gesture of looking at my watch.\n\n\"Too bad it isn't midnight yet,\" I said looking at Sara. She smiled at me.\n\n\"It's always midnight for you!\" She said. I looked back at her and smiled and laid $500 on her tray. \"Thank you.\"\n\nI looked at Sam and she was dancing in her seat to the music as she watched the girl pole dancing completely naked now.\n\n\"Everyone seems to know you here,\" Helen said.\n\n\"They better!\"\n\nThe girl on the stage finished and everyone clapped, Sam especially.\n\n\"I like this place!\" Sam said as she hugged me and kissed me.\n\n\"James, do you bring your wife here?\" Helen wanted to know.\n\n\"Oh yes, she loves it. It's the first time for Sam though. I had to call in some favors to get her in, the restrictions are 21, and there are not many of them here.\"\n\nI was turned and talking to Gary and Helen when I felt a pair of hands slide across my shoulders and down my chest. I looked and saw a pair of long black gloves.\n\n\"Hi, Ashley!\" I said.\n\n\"I'm glad you made it. Is this the young lady?\"\n\n\"Yes it is. This is Amy's sister, Sam.\"\n\n\"Hi Sam,\" Ashley said as she leaned over and wrapped her arms around me from behind.\n\n\"Hi Ashley, thanks for getting me in,\" Sam said.\n\n\"No problem, anything for James.\" Ashley worked her way around and sat in my lap in a very short tight black dress. She had an arm wrapped around my neck as she sat.\n\n\"Is Raven still here?\" I asked.\n\n\"Oh yes, she is one of the favorites now. She will be out about midnight.\"\n\n\"Do you two still dance together?\"\n\n\"We can, around 2:30. Do you want us to dance for you?\"\n\n\"I would like that,\" I told her.\n\n\"I thought you were going to hire some of us for a party at your house?\"\n\n\"Our parties are usually on weekends, you work!\"\n\n\"Not until 7:00.\"\n\n\"I will talk to Rick about it.\" I told Ashley.\n\n\"You better!\" Ashley kissed me on the cheek and got up and walked off. I watched as she stopped to talk to another VIP.\n\n\"How does she get away with that?\" Gary asked.\n\n\"What?\"\n\n\"All of the touching and sitting in your lap?\"\n\n\"Okay you three, here are the house rules. The girls are allowed to touch all they want but we can't touch them, unless they ask, and then only very discreetly and limited.\"\n\n\"How can they get away with it?\"\n\n\"This is a private club. With the people that are members here, the local constabulary does not come by. And, there are a few sex clubs in town that are private, so this place is tame. Just remember the rules.\"\n\n\"I will have to check around Houston,\" Gary said.\n\nI saw Sara heading for our table in a billowing thin silk black robe. When she got to the table, she made a minor production of removing the robe while standing by my side, and then miming the question of whether she could leave it with me, she draped it over my shoulder. Sara had an attractive, thin strip of hair just above her slit. \n\n\"Is there anything else I can get for you, Dr. Smith?\" She asked now standing nude in front of us.\n\n\"We are good for now, just stop by occasionally and check on us.\"\n\n\"I will.\" She daintily picked the robe off of my shoulder and pulled it back on, turned and walked off.\n\n\"Damn, she is hot. They only get topless at home,\" Gary said.\n\n\"You may not see many hostesses completely naked. The price goes with the membership.\"\n\nThe music came back up and we watched a very pretty Hispanic girl that I had seen before come out. The lights came on the two side stages and two more girls came out. Everyone clapped. We watched the show for 20 minutes. As she was finishing up Sara came back.\n\n\"I can take your tips to the lady if you want. We are letting the waitresses collect them now so people don't move around and block the stages.\"\n\n\"Good idea. What if I want one of the ladies to join us?\"\n\n\"Just tell me.\" Gary and I handed her some money, but Sara had to wait a moment as Sam reached into her purse. Eventually, Sara collected the money from us and walked off in her billowing robe.\n\nThe music came back up with a deep bass beat and the house lights went down. It was midnight. Everyone was clapping with the music and I watched as Ashley came out on the stage in her short black dress and long black gloves. She looked wonderful with all her long blonde hair cascading over her shoulders. She walked to the front of the stage as she danced and looked at me and smiled. Sam was dancing in her chair. I watched Ashley as she performed a great strip tease down to her lacey bra and thong.\n\n\"She is good!!\" Sam yelled at me. Yes she was.\n\nWe watched her perform as she removed all of her lingerie and danced suggestively until her show ended 20 minutes later. When the music stopped everyone cheered as the girls took a bow. Ashley looked at me and I motioned with my finger to come and see me. She turned and walked off the stage. Sara came by.\n\n\"I've got this one, Sara.\" She smiled, turned, and walked off. She collected some tips from other patrons as she went.\n\n\"That is one gorgeous woman!\" I heard Helen say. I turned and looked at her. She smiled at me.\n\nA few minutes later, as the music played, we could see that Ashley was heading toward the table, still naked. She smiled at me and I pointed at Sam, she smiled as she walked up and sat in my lap facing Sam. Sam was looking her over.\n\n\"See anything you like, Sam?\" Ashley asked.\n\n\"A lot. Everything! You are great!\"\n\n\"Thank you.\" Ashley reached over and ran her hand through the red curls hanging over Sam's tits. \"I love your hair! We have a redhead here now, but her hair is not as long as yours. Can I see how long it is?\"\n\nSam stood up and turned her back to Ashley. Ashley ran her hand through Sam's hair, all the way to the top of her ass. She kept going and ran her hand over Sam's ass then down the side of her leg. Ashley moved her hand to the inside of Sam's leg and slid it up under her dress.\n\n\"I see you dress like your sister,\" Ashley said as she held her hand under Sam's dress a minute before she removed it. Sam turned and sat down.\n\n\"Are you sure you are eighteen?\" Ashley asked her.\n\n\"I will be 19 soon.\"\n\n\"Ashley, Sam is an incredibly mature and sexy woman,\" I said.\n\n\"Yes she is. I think it would be fun to spend time with your two beautiful redheads, James.\"\n\n\"Ashley, Sam would like a lap dance,\" I told her. Ashley looked at me and smiled, then got up from me to sit on Sam's lap.\n\nShe wiggled and moved to the beat of the music. Sam was actually turning red. Ashley ground her ass into Sam as she moved and wiggled for a long time. She got up and turned to Sam and straddled her bare legs and worked her ass on her like that. Ashley was wiggling her ass on Sam's legs when she reached down between them and rubbed Sam's pussy. The two of them smiled at each other. Ashley kept dancing in Sam's lap.\n\nWhen Ashley was finished she move back to my lap.\n\n\"Thank you,\" I whispered in her ear.\n\n\"You're welcome. I'll put it on your bill.\"\n\n\"You do that.\" I leaned to whisper in her ear again. \"Make sure you and Raven dance together on this stage and when you two finish, I want you to come back and give this guy a lap dance and I want Raven to do his wife.\"\n\nAshley sat up and kissed me on the cheek and stood and walked off.\n\n\"She seems to like you!\" Gary said. I turned to look at him and smiled.\n\n\"Sam, did you enjoy that?\" She looked over at me and smiled.\n\n\"I didn't give her any money?\"\n\n\"It will be on my bill. If she comes back you may tip her as much as you want.\"\n\nI looked around as the next dancers came out and I saw Sara headed my way in her billowing robe. She arrived at the table and stood.\n\n\"Anything you would like?\" She asked.\n\n\"Yes, but I think it is illegal!\" I said looking at her.\n\n\"Probably not. Can I get you anything?\"\n\n\"How about some dessert for everyone!\"\n\n\"I'll be right back!\" Sara said and walked off.\n\n\"Are you two enjoying the show?\" I asked as I turned to talk to Gary and Helen.\n\n\"Very much!\" Gary said.\n\n\"Helen?\" I asked.\n\n\"Oh yes, very much. Are you and that other lady close?\"\n\n\"Ashley has the hot's for me and my wife, I'm not sure why!\"\n\n\"Have you ever had her?\" Gary asked. I laughed.\n\n\"That would be mixing business with pleasure I am afraid!\" Helen smiled at me. I turned back around and Sam was dancing in her chair to the loud music.\n\nWe watched a very lovely short woman put on a good show. When she finished Sara appeared with a tray full of chocolate cake. She sat each slice on the table.\n\n\"Sara,\" I said motioning for her to lean over. \"I will tip you at the end of the night so you don't have to keep up with that much cash.\" She stood and looked at me and smiled.\n\n\"Is there anything else?\" Sara asked.\n\n\"Can you sit for a few minutes?\"\n\nSara smiled then sat across my lap.\n\n\"This is new for the hostess,\" I said.\n\n\"Only for VIPS, if I want to,\" Sara said with a big smile.\n\n\"Well, I'm glad you want to.\" Sara pulled the side of her robe nearest me back and away from her body. I had a nice view of her tits and thighs.\n\nI got Sam to turn around and eat some of the cake. She had been drinking plenty of the wine so she needed something else in her stomach. There was a break in the shows. \n\n\"Sara, do you dance?\" Sam asked.\n\n\"Sometimes, during the week.\"\n\nI slipped my hand inside her robe and was running my hand up and down her back and ass.\n\n\"Dr. Smith, I hear you have a very special wife,\" Sara said.\n\n\"Yes I do and I know that she will like you.\"\n\n\"I hope so. When are you bringing her?\"\n\n\"Soon. Did Ashley put you up to this?\"\n\nSara smiled at me.\n\n\"I need to go.\" Sara said.\n\nSara sat up slowly. I ran my hand across the bottom of her ass and rubbed her pussy. She stood the rest of the way and smiled at me.\n\n\"I will be back.\" Sara walked off in her flowing robe.\n\n\"Sam, if I haven't told you, you look nice in that dress,\" Helen said.\n\n\"Thank you. I like your dress too.\"\n\n\"I want to thank you for the experience, I couldn't have asked for anything nicer.\"\n\n\"Just remember what we told you two. You will find that there is another world of eroticism out there,\" Sam said as she delicately ate her cake and sipped her wine.\n\n\"I hope so,\" Helen said and leaned over and kissed her husband. Gary pulled her close to him and ran his hand up under her skirt between her legs.\n\n\"Dr. Smith! Long time no see,\" I heard. I turned to see a guy that Dawn and I had met at the club a few times.\n\n\"Hey, Jake!\" I said as I stood to shake his hand. \"Where is your wife?\"\n\n\"Where is yours!\" He said looking at Sam.\n\n\"At home!\"\n\n\"Teresa is sitting back there, I just wanted to make sure it was you. I haven't seen you and your beautiful wife in a while.\"\n\n\"We have been a little busy.\" He looked at Sam thighs and the top of her stockings showing from under her dress.\n\n\"Who is this young lady?\"\n\n\"A very dear friend of me and my wife.\"\n\nHe was wanting me to introduce him to Sam, but I wasn't going to. When Dawn and I would run in to him and his wife at the club, they always tried to sit at our table with us. That happened twice, then I would call ahead and have all the chairs but two removed from my table.\n\n\"Jake, nice seeing you. I need to get back to our friends.\"\n\n\"See you later,\" he said and walked off.\n\nI looked at my watch and it was almost 2:00am.\n\n\"I will be back in a bit,\" I said. The first thing I had to do was piss.\n\nComing back from the restroom I stopped one of the waitresses and asked her where I could find Rick. She led me down a hall to his office.\n\n\"Thank you,\" I told her and knocked on his door. A lovely young lady wearing only panties opened it, I told her I wanted to talk to Rick. She walked off and in a moment Rick returned.\n\n\"Hey, Dr. Smith, what can I do for you?\"\n\n\"I want to talk to you about something.\"\n\n\"Come on in!\"\n\nWe walked in and sat on a big couch with the young lady.\n\n\"I asked Ashley before about hiring her and some of the ladies for a party, is that okay?\"\n\n\"Sure, they just have to be here by 7:00pm.\"\n\n\"Do they get any nights off?\"\n\n\"They rotate during the week, but not on Friday and Saturday nights, sorry.\"\n\n\"I have some friends that would enjoy some of them working a party.\"\n\n\"They wouldn't be expecting sex would they?\" Rick asked.\n\n\"Oh no, they are good people. As matter of fact, I would need the girls to sign a non-disclosure agreement.\"\n\n\"Why?\"\n\n\"Rick, my friends are highly placed people. It is not like they were here, this is at my house we are talking about. I need to make sure that anything the girls see or people they may know doesn't get out.\"\n\n\"I don't think that would be a problem. They have to sign one here for the same reason. Plenty of the waitresses that work topless and nude would like to make some extra money.\"\n\n\"Good. What do they charge for something like that?\"\n\n\"That is between you and them. I get no part of that. But, don't expect to pay them anything less than $300 an hour, especially Ashley.\"\n\n\"Not a problem. I would take care of them.\"\n\n\"If there is any touching going on, plan on doubling that,\" Rick said with a smile.\n\n\"Young lady, would you excuse us please,\" I asked the topless sweetheart. She got up and left.\n\n\"Rick, tell me about Ashley?\"\n\n\"Ashley is wonderful. Did you know that she is finishing up her MBA?\"\n\n\"I do know that, yes. What is she planning on doing with it?\"\n\n\"I have asked her if she would manage one of my clubs because I don't want to lose her.\"\n\n\"She is incredible. Do you know how old she is?\"\n\n\"Twenty-seven.\"\n\n\"She told me once she makes well over a $100,000 a year in tips. Does she?\"\n\n\"Oh god yes! On a good weekend, she'll make 5 or 10 grand easy.\"\n\n\"Are you going to be able to pay her enough to keep her?\" I asked.\n\n\"Don't worry about Ashley. I am going to let her run this place while I get New Orleans going. When I have another new club for her, she is buying in as a partner!\"\n\n\"Great!\"\n\n\"Let me ask you something Dr. Smith, what is it with you and her?\"\n\n\"I really don't know Rick. I tip her very well so I guess that could be it.\"\n\n\"No it's not. There is another guy that comes in here that gives her absurd tips but she doesn't treat him like she does you and your wife.\"\n\n\"Does she need to stop?\"\n\n\"Oh no! She has a good time with you two. I think she likes you because you bring your wife all the time, very few men do. May I ask who the two gorgeous redheads you have been here with are?\"\n\n\"That was Amy and the young lady tonight is her sister Samantha. The two of them are very close to me and my wife.\"\n\n\"I see. How close, may I ask?\"\n\n\"They live with us.\"\n\n\"Nice!\"\n\n\"Rick, do you know if Ashley has a man?\"\n\n\"No she doesn't. She doesn't have the time, and she is way too smart to deal with a jealous man. Most of the women here are not involved with a man because they get too jealous.\"\n\n\"I can imagine. Let me ask you something kind of sensitive. Does Ashley sleep with any of the customers that you know of?\"\n\n\"Oh no, she is a wonderful woman, why?\"\n\n\"She has hinted to me several times that she would like to come to our house.\"\n\n\"You mean as in have sex with you and your beautiful wife?!\"\n\n\"I think so. That is why I am asking, I was just wondering why?\"\n\n\"Oh my god! If that beautiful creature wants to be with you and your wife, let her!!\"\n\n\"You don't think she has some other motive?\"\n\n\"I wouldn't think so. I have heard her tell the other girls that she thinks you are nice looking?\"\n\n\"You don't think it is because of my money?\"\n\n\"Dr. Smith, there are plenty of guys that come in here that have plenty of money. Why don't you just ask her?\"\n\n\"Maybe. That couple that I'm with, they seem to have plenty of money. I would talk to him about the club in Texas.\"\n\n\"I am, I looked him up and he has quite a bit of money!!\"\n\n\"Good, let me know what happens with him.\"\n\n\"I will, you need anything else?\"\n\n\"That's it. I didn't mean to interrupt you and the young lady.\"\n\n\"That is my assistant, she also has an MBA!\"\n\n\"She doesn't look that old, Rick!\"\n\n\"She is 26...and she likes to work in just her thong, what can I say?\"\n\n\"No funny business?\"\n\n\"Oh no, she does have a husband!\"\n\n\"Thanks.\"\n\n\"No problem.\" Rick escorted me to the door and when I walked by his office I saw the young beauty sitting at his computer working hard.\n\nWhen I got back to the table, Gary was getting a lap dance from a young lady, though she was only topless. I sat and watched.\n\n\"Where did you go?!\" Sam shouted over the music.\n\n\"To piss!\"\n\n\"Liar!\"\n\nSam returned to watching the show and dancing in her chair. It was approaching 2:30, I wanted to see Ashley and her friend Raven. After Sam tipped the last girl, two women came out on each of the three stages. They put on a nice show teasing and touching each other as they stripped. When they finished, Sam stood and clapped for them. Sara walked by and Sam gave her several hundred dollars.\n\n\"They were good!\" Sam yelled returning to her seat.\n\nI leaned over to kiss her and when she turned to me I snuck my hand between her legs.\n\n\"You are really enjoying this aren't you?! You are dripping wet!\"\n\nShe reached up and pulled my lips to hers for a minute.\n\n\"I need you bad!\" She told me.\n\n\"It will be about 5:00 in the morning before we get back to the hotel.\"\n\n\"I hope they go to their room,\" Sam said.\n\n\"They are, I have already told them we had something special planned,\" I told Sam.\n\n\"Like what?\"\n\n\"Something you have probably never had done to you.\"\n\n\"Oh shit! What? I already let you tie me up!\"\n\n\"A surprise. I think you will enjoy it. And, you asked me to tie you up!\"\n\n\"Tease!!\" Sam yelled as the music started up again.\n\nWe turned to watch the stage and to my pleasure Ashley and Raven came out. They were only wearing some sexy lingerie. We all watched them dance together awhile before they started touching and teasing each other.\n\n\"Damn they are hot!\" Gary yelled at me. Hot was not the word I had in mind.\n\nThey were running their hands all over each other as the music blasted...occasionally kissing very sensuously. Sam was cheering them on. When they pulled each other together and started kissing more, I watched as they each removed the other's top to cheers. More suggestive dancing as they touched and caressed each other's breasts. I looked at Sam. She had stopped dancing in her seat and was mesmerized watching the two beautiful women.",
        "They pulled each other together and mashed their breasts together and kissed long and hard. When they separated, I watched Ashley slither her way down Raven's legs, pulling her panties off as she did. She wiggled her way back up kissing and dragging her tongue over Raven's body.\n\n\"Damn!\" I heard come from Gary. \"We don't get this at my club!\"\n\nAshley made her way back to Raven's mouth and kissed her as she ran her hand up Raven's thighs, then between her legs and finally up and over her breasts. Raven slowly worked her way down, kissing Ashley's body as she went. She paused at Ashley's panties, pulled the front down and kissed her on her mound as she slipped her panties the rest of the way down and off. Once Raven worked her way back up Ashley's body by dragging her tongue all the way up and over one nipple, they kissed, then resumed dancing. By the time they finished my cock was as hard as a rock. We all stood and cheered as they took a bow and danced off the stage.\n\n\"That dark haired girl is incredible,\" Sam said.\n\n\"That is Raven. They will be coming to the table. I asked for them to give Gary and Helen a lap dance.\" Sam looked at me and smiled real big. Sara walked up.\n\n\"Ashley said they would be here soon. Can I get you anything?\"\n\n\"An expensive bottle of champagne and some extra glasses.\"\n\n\"Very good.\" Sara disappeared in the crowd.\n\n\"I've got this one,\" Gary said. \"You have been treating us all night.\" I turned around to talk to Helen.\n\n\"What did you think?\"\n\n\"That was very seductive!\" Helen said. \"That dark haired girl is gorgeous.\"\n\n\"That is Raven, she is nice looking,\" I said.\n\nI talked to Helen for a few minutes about how she felt watching two women dancing like that. She told me she was dripping wet from the show.\n\n\"James...\" I heard Sam say. I turned to see what she needed and saw that she was looking toward the dressing room door. \"That is hot!\"\n\nAshley and Raven were walking our way very seductively. I was surprised that they both had on full length flowing black silk robes, blowing open as they walked exposing their naked bodies. Raven looked extra special in the black as she walked.\n\n\"Wow,\" Sam said. We all watched as they walked. It was like everything was moving in slow motion.\n\nThey arrived as everyone in the front of the room watched. Ashley paused and smiled at me then moved to Gary. She pulled her robe open as she straddled his lap.\n\n\"James said you would like a lap dance,\" Ashley said very seductively. Gary mumbled \"yes\". Ashley started a nice lap dance. Helen was watching her when Raven straddled her legs.\n\n\"Oh my!\" Helen said.\n\nSam and I watched the two of them work their magic. I saw Raven grab the edges of her robe and wrap them over her legs, covering the two of them. Helen jumped a few seconds later so I could tell Raven had her hands under Helen's dress playing with her pussy. Gary was struggling as if he was trying to decide which was nicer to look at, Ashley, or Raven playing with his wife. He decided on Ashley as she grabbed his head and turned it to look at her. After 15 minutes, they finished. Ashley and Raven stood and sat across each of their laps and wrapped an arm around them. They talked to Gary and Helen a few minutes. Then it looked like Gary handed Ashley about 3 grand. She slipped it in the pocket of the robe for her and Raven. The two of them stood and thanked Gary.\n\n\"You are more than welcome, young lady!!\" Gary said.\n\nAshley walked around in front of me and stood.\n\n\"What about you James?\" She asked me. \"I have to perform again in 30 minutes.\"\n\n\"Of course Ashley!\" I watched her straddle my legs and sit on my lap. I was looking between her legs when she took her hand and lifted my chin up.\n\n\"Up here,\" she said. \"You said you were going to invite me to do a party at your house.\"\n\n\"I'm working on finding a time during the week when all my friends can come for an afternoon party, Ashely.\"\n\nWe heard Sam laughing. I looked at her and Raven had planted herself on Sam's lap.\n\n\"We can have a party without your friends, if they can't work it into their schedules,\" Ashley told me as I felt her hand run down and over my chest. \"I told Raven about your lovely wife, she wants to come too.\"\n\nI looked at Ashley as she leaned forward, drawing her dark robe around us. I felt her hands run down and grab my cock through my pants.\n\n\"You mean like a private party?\" I asked.\n\n\"Something like that. Raven and I could put on a show for you and your wife.\"\n\n\"And my two redheads?\"\n\n\"Even better. If you like our show, you could hire us and some of the other girls to work your party.\"\n\n\"Would this show with you and Raven be a special show?\"\n\n\"It would be a lot hotter than when we are on stage together.\"\n\n\"I see. I know I would enjoy watching you two, I'm sure my girls would too.\"\n\nI felt her hands pulling the zipper down on my pants, no one could see. She got my zipper down and reached in my pants and grabbed my cock.\n\n\"Oh god, you are bigger than I thought you were!\" Ashley said as she rubbed my cock.\n\n\"Do you do this often,\" I asked her.\n\n\"Only for you,\" she said with a big sexy smile.\n\nI leaned forward so my mouth was next to her ear.\n\n\"Ashley, do you want to fuck me?\" She squeezed my cock hard and sat up straight.\n\n\"Oh yes, that would be great for the show!\" She said.\n\nShe managed to work my cock out of my pants and had her hand wrapped around it, she looked down.\n\n\"Damn! Please invite us!\" She exclaimed.\n\n\"What about my wife and my girls?\"\n\n\"Them too! God I want to suck this thing!\" Ashley said as she stroked my cock, hiding it behind her black robe.\n\n\"It may be a few months,\" I told her.\n\n\"I can't wait. When?\"\n\n\"If I give you enough notice, can you and Raven get the same night off?\"\n\n\"You bet. Just not Friday or Saturday night.\"\n\n\"Maybe you two could come and audition. After that, you two could stay the night, we have plenty of room.\" I told her.\n\n\"That sounds like a nice idea. Would we have to share a bed, or do you have extra rooms?\"\n\n\"We have plenty of extra rooms, but I hope we can share a bed.\"\n\nAshley squeezed my cock and smiled. She played with my cock another minute then pulled it to her pussy and rubbed the end against her very wet lips as she rose up.\n\n\"Ashley...\"\n\n\"Looking to see if it will fit,\" she said as she worked my cock on her hot pussy lips.\n\n\"It will fit.\"\n\n\"I'm sure it will. Is that okay with your wife?\"\n\n\"Of course. Ashley, your pussy and the rest of your body looks incredible.\"\n\n\"Thank you.\" She slid the tip of my cock against her clit a few times. \n\nShe reached around my neck with one hand and slid closer to me, sliding my cock beneath her pussy.\n\n\"James, I want this in me, soon,\" she whispered. \"I have waited long enough.\"\n\n\"I will see what I can do.\"\n\nShe wiggled just slightly so her pussy lips slid on the top of my cock.\n\n\"Ashley, I can't wait to fuck you.\"\n\n\"I can't wait either. You are sure your wife is okay with it?\"\n\n\"You know it will. She likes to watch, and I know you know that I am fucking the two redheads.\"\n\n\"Very nice. I was hoping you all were enjoying each other.\"\n\n\"Your pussy lips feel good.\" I told her. \"Ashley, why do you want to be with me?\"\n\n\"James, I have always liked you because you bring your wife and she has a good time. Other men bring their wives, but they don't look like they are enjoying. So I know you and her are special.\"\n\n\"Ashley was whispering in my ear as she slightly slid her pussy lips around on my cock.\"\n\n\"I better stop before I come. Mmmm, I have to go,\" she said. \"Let us know when.\"\n\nAshley had to work at it but she finally got all of my cock stuffed back in my pants and zipped them up. She wiggled and danced on my lap awhile so things looked semi legit. I looked over at Sam and her alabaster skin was a deep crimson. I could tell Raven probably had her fingers in Sam's pussy or at least fingering her clit. Sam suddenly reached between her legs and grabbed Raven's hands.\n\n\"Was that good?\" Ashley asked.\n\nI looked at her perfect D tits then into her eyes.\n\n\"Ashley, what is this private party with you and her going to cost me?\"\n\n\"I'll trust you to be fair, but I may do it for free.\"\n\n\"Okay,\" I told her. She leaned forward to whisper in my ear one last time.\n\n\"I really want to fuck you too,\" she said.\n\n\"I really want to drive you wild with my tongue,\" I said. She kissed me on the cheek.\n\nShe wiggled her ass and stood and grabbed her robe and wrapped it around her as Raven did the same thing. The two of them danced across the room in front of everyone flashing their robes open as they moved. Ashley's nipples were huge and swollen.\n\n\"Sam?\" I asked looking at her.\n\n\"yes...\"\n\n\"Sam!\" \n\nShe turned to look at me, her face and chest were beat red.\n\n\"Did you have fun?\"\n\n\"Yes, but I am sitting on a big wet spot.\"\n\nSara came back with the nice champagne and set it down.\n\n\"I didn't want to interrupt,\" she told me. She handed Gary the bill and he handed her a big wad of $100 bills. \n\n\"You have been excellent tonight, Ms. Sara!\" He said to her.\n\n\"Thank you, sir.\"\n\n\"Sara, would you take my friend back to the lady's room, she is a bit damp.\" I asked her.\n\nSara smiled real big and giggled.\n\n\"Ma'am, would you like to come with me?\" She asked Sam. I motioned for Sam to go with her. She grabbed her small purse to take with her as Sara slipped her arm inside of Sam's and walked her toward the dressing room doors.\n\n\"Hey James?\" I turned. \"Was she playing with your cock?\" Gary asked.\n\n\"Some.\" I was watching Sara and Sam as they made it to the dressing rooms. I looked back at Gary. \"I am trying to coordinate her and some of her friends to work a party at my house.\"\n\n\"Good luck!\" Gary said and laughed.\n\n\"Helen, did you enjoy the lap dance?\" I asked.\n\n\"The dance and Raven slipping her fingers inside me.\"\n\n\"Very good!\" I told her.\n\n\"James, how long are we staying?\" Helen asked.\n\n\"You need to get back to the hotel for a good fucking?\"\n\n\"Yes.\"\n\n\"It's about 3:15, I told the limo to pick us up at 4:00. Can you wait?\"\n\n\"I guess I will have too.\"\n\nGary got up and said he was going to the restroom. I got up and sat next to Helen.\n\n\"Have you ever fucked in the back of a limo?\" I asked her. She looked at me surprised.\n\n\"We have fucked on his jet!\"\n\n\"My wife and I fucked on a commercial flight.\"\n\n\"You're kidding?\"\n\n\"Have the pictures to prove it. Get Gary to do you on the way back to the hotel, it will take about 45 minutes to get there.\"\n\n\"Are you serious?\"\n\n\"Sure. Sam and I would enjoy watching,\" I told Helen as seriously as I could.\n\n\"I don't know, what about the driver?\"\n\n\"He won't mind watching.\"\n\nHelen looked at me a second and then smiled. I placed my hand on her thigh and slid it up under her dress to her pussy. She jumped slightly and looked around. She was soaking wet. I slid the tips of several fingers inside her and pushed.\n\n\"Oh shit, don't do that, I'll come.\" I slid my fingertips back out and up and over her clit and flicked it a few times. I thought Helen was going to come. \"Oh god...\"\n\n\"Think about it,\" I told her.\n\n\"I am.\"\n\nI sat next to her through half of the show that was going on. I was wondering what happened to Sam. The girls finished dancing, the house lights came up. It was time to settle up the bills and the tips before the last show. Gary finally walked up as I moved back to my chair. I looked around for Sara, then saw her walking back our way with Sam. Sam looked mussed. She got to the table and quietly sat down. Sara walked off to get our bills.\n\n\"Where did you go to?\" I asked. She looked at me then leaned over.\n\n\"I went with her to cleanup...and she was helping as I sat on a sofa. As she helped wipe my legs off...she got down on the floor and did me!\"\n\n\"Was it good?\"\n\n\"Fuck yes!\"\n\n\"You have plenty of money left, make sure you tip her nicely.\"\n\n\"I will, how much?\"\n\n\"Whatever you want, I gave you the money.\"\n\nSara reappeared with a tray with a cash box on it. She handed Gary his bill and then mine. I saw Ashley had added the lap dances. This had to be the only strip club with computer terminals for everyone to add things to the bill.\n\n\"Damn! Sam said as she looked at the bill. There was a $5,000 charge for the lap dances. After I finished writing Sara, Raven and Ashley's name on the bill with a $1,000 tip for each, the bill was near 10 grand.\n\n\"James!\" Sam said.\n\n\"I'll explain it to you later, sweetie. How much are you going to tip Sara?\"\n\n\"Wasn't that enough?\"\n\n\"That is my tip.\"\n\nI watched Sam open her purse and pull out a $1,000.\n\n\"Sara, thank you, your service has been excellent,\" Sam told her as she gave her the money.\n\n\"Anytime, Sam.\"\n\n\"James, will you get Sara to come to the party?\" Sam asked.\n\nSara looked puzzled.\n\n\"Talk to Ashley, Sara.\"\n\nSara gathered up her tips and the bills and left. \n\n\"I heard you talking to Ashley about a party, is that okay?\" Sam asked.\n\n\"You like Sara?\"\n\n\"Yes...I do.\"\n\nSeveral minutes later the music came up loud. Everyone cheered as about 20 girls came out naked dancing on the stages. Everyone was standing and cheering. Sam got caught up in it and started dancing. A few minutes later the girls came down from the stages and danced up front with people. I saw Raven dancing her way toward us with Ashley. When she got to us she started dancing with Sam. I watched as she got behind Sam and wrapped her arms around her and placed her hands over her mound and pulled Sam back into her tight as they danced together. Ashley came over and danced for me and Gary for a few minutes. She looked at me with a beautiful sexy smile.\n\n\"I'll be waiting!\" She yelled over the music.\n\nThis went on for a bit longer, then the girls danced their way back on the stages. The stage lights came up to a cheer and the girls waved and ran off stage.\n\n\"Oh yes!! I have got to buy me one of these!!\" Gary yelled.\n\nWe grabbed our women and headed out the side door reserved for the VIP's. Our limo was waiting. The driver opened the door and Gary climbed in then Helen bent over to get in and I ran my hand up her leg and slipped my fingers over pussy as she got in. Sam and I were waiting for them to get seated, Sam pulled me down and gave me a big kiss.\n\n\"Thank you, this weekend has been fun.\"\n\nShe got in then and sat down and I got in next to her. Helen was already kissing on Gary. The driver closed the door then jumped in and sped out of the parking lot to beat the other cars.\n\n\"Thank...you...James!\" Sam said.\n\n\"You are very welcome!\"\n\n\"Yes, thanks you two!\" echoed Helen. Then we watched her grab Gary's pants and start to unbuckle them.\n\n\"What are you doing?\" He asked Helen.\n\n\"You are going to fuck me before I explode!\" Helen yelled.\n\n\"Then you have to get naked!\" Gary said with his big laugh.\n\nIt took her a few minutes but she got his pants down. We watched as she turned her back to him and pulled her short dress up and off, then grabbed his cock.\n\n\"Oh fuck yes!!\" Helen screamed as she lowered her pussy down on Gary's cock as she faced us. Helen went to work on him.\n\n\"How long do we have?\" Sam asked.\n\n\"About 45 minutes.\"\n\n\"Perfect!\"\n\nSam wasted no time in getting my pants down paste my knees, she sat up and grabbed the hem of her short dressed and worked it over her head.\n\n\"Damn,\" I heard come from the driver.\n\nSam turned toward me and jumped in my lap and kissed me.\n\n\"Fuck me!\"\n\nI worked with Sam and soon had all of my cock deep inside her. I wrapped my hands around her bare ass and she went to work as she faced me.\n\n\"Oh god, I'm so horny!\" Sam said as she worked her pussy up and down. I looked over her shoulder and watched Helen riding Gary.\n\nAbout 25 minutes later, Helen had been through two huge orgasms before Gary pumped her full of cum. She had relaxed and was sitting on his cock as the two of them watched Sam as she kept going.\n\n\"Oh James, this was so much fun! Can we come back?!\" Sam asked as she worked her pussy.\n\n\"I guess so, you seemed to have made some new friends.\"\n\n\"Uhhhhhh...ahhhhh!\" Starting coming out of Sam. \"Yes...yes...yes, yes!!\" Sam screamed then gushed all over me. \"Ahhhhhh!! Fuck!!\" Sam screamed but kept driving her pussy onto my cock. I grabbed her breasts and started pinching her nipples hard. \"Ohhhh, yes!!\"\n\nI twisted Sam's nipples hard, she always liked that. I looked up at Helen and she had her fingers working her clit hard as she humped Gary some more. Sam jammed my cock into her for a few more minutes.\n\n\"I'm coming! Come in me, honey!!\" Sam yelled.\n\nI grabbed Sam's ass and pulled her hard onto my cock as she started screaming and jerking.\n\n\"Ahhhhhhhhh, fuck me!!\"\n\nWe jerked into each other and I pumped a night full of restrained cum into Sam's hot pussy.\n\n\"Yes!! Yes!!\"\n\n\"Oh fuck!!\" Helen screamed as she came again.\n\nSam held me tight as her chest heaved as she tried to catch her breath.\n\n\"Oh god yes!\" Sam said. \"This has been a wonderful weekend.\"\n\nShe caught her breath and rose up to turn and sit next to me.\n\n\"What do you think, Gary?\" I asked.\n\n\"I think I am going to have to tip the driver a lot to cleanup!\"\n\nWe all started laughing. I looked up at the driver and he was looking back in the mirror smiling.\n\n\"Shit, where is my dress?\" Sam asked as she turned and sat up.\n\n\"Oh honey, you can't put that nice dress on with all that cum dripping out of you!\" Helen said.\n\nWe all watched Helen slide to the floor and crawl over and spread Sam's legs and plant her mouth over her pussy. Sam lifted her legs up and spread them.\n\n\"Oh yes, perfect!\" Sam said as she placed her hands on the back of Helen's head and pulled her into her pussy.\n\nGary and I watched our girls for some time until Sam came in a nice orgasm.\n\n\"Emmm, that was good!\" Helen said as she moved back next to Gary.\n\n\"Yes you were, Helen!\" Sam said as she found her dress. I helped her work her way back into it. Helen slipped her dress back on about the time we arrived at the hotel. We got out and stood as the driver told Gary it was $200. It looked like he handed him $600.\n\n\"Sam, is it?\" The driver said to her.\n\n\"That's me.\"\n\n\"You are the sexiest thing I have had the pleasure to drive in a long time, if I may say.\"\n\n\"You may, thank you! What is your name?\"\n\n\"Kirk.\"\n\n\"Well, Kirk,\" Sam said as she grabbed his hard-on through his pants, \"I always enjoy it when a man gets hard from looking at me.\"\n\nKirk was surprised, but stood there a minute as Sam rubbed his cock. Helen had grabbed Gary's arm and had headed inside.\n\n\"Let them go,\" I told Sam.\n\n\"Is that enough to cover the mess?\" I asked as the driver stood and looked at Sam.\n\n\"Oh yes, thank you. I'll consider it my tip to have had the opportunity to look at Sam naked.\"\n\n\"You're sweet!\" Sam said as she released his cock.\n\nI took Sam's arm and walked her into the lobby. Helen and Gary were gone.\n\n\"I have had a wonderful weekend, thank you!\" Sam said.\n\n\"It's not over yet.\"\n\n\"James, it's almost 5:00am, they are starting to serve breakfast, what else do you want?\"\n\n\"Come with me.\"\n\nI led Sam to the elevator and then to the penthouse. We heard Gary and Helen going at it when we walked past their room. I got the door open and led Sam in and straight to the bed.\n\n\"Out of that dress!\" I told Sam as I started pulling all my clothes off.\n\nShe complied then jumped in the middle of the bed with just her stockings on. I walked to the bed and crawled over her. I grabbed her wrist and pushed her arms over her head as I held them down. Sam spread her legs for me and slid my cock into her still wet pussy, nice and slow.\n\n\"Emmm, one more time!\" Sam said.\n\nI held Sam's arms above her head for a very long time as I worked my cock in and out of her slowly. She was moaning and wanting to touch me, but I wouldn't let her go.\n",
        "\"Fuck James!! What are doing to me?!\"\n\n\"Having my way with you.\"\n\n\"Oh god, let go of my wrists!\"\n\n\"No, you are going to surrender to me.\"\n\n\"You said never to do that!\" Sam got out as she twisted beneath me playing.\n\nI tortured Sam with a slow fuck until the sun came up, she was moaning very loud, but had succumbed and was lying there as I fucked her.\n\n\"You were so fucking hot tonight, Samantha.\"\n\n\"Oh...god!\" Sam groaned, then came hard in a whimper. \"Please! Fuck me harder!\" Sam said and lifted her legs up and spread them wide.\n\nI held her down and sped up.\n\n\"Yes! More!\"\n\n\"Sam, I love you, you know that don't you?\"\n\n\"Yes, I do!\" Sam said moaning. \"Oh god, I know you love me!! Now fuck me!!\"\n\nI worked my cock in and out faster until Sam came again.\n\n\"Oh...shit!!\"\n\nI was working Sam to exhaustion.\n\n\"Oh god...I'm...you are wearing me out...\" Sam moaned.\n\n\"Do you want me to fuck you harder?\"\n\n\"Oh fuck yes! Fuck me hard and fill my pussy full of cum!!\" Sam screamed out with her last bit of breath.\n\nI held onto her and began driving my cock into her harder.\n\n\"Ahhhhhhh!!\" Sam screamed.\n\nI kept going until she was screaming constantly.\n\n\"Pleeeeease!!\" Sam screamed then started jerking all over. She was whimpering as she came so hard. I jammed my cock deep inside her and filled her full of everything I had.\n\n\"Ohhhh, god.\" The hoarse whisper came from Sam with the last few spasms of her muscles.\n\nThat was it for Sam. She turned her head and closed her eyes. I let go of her arms and rubbed them for her. She lay and breathed.\n\n\"Sam, you are wonderful. I just want to make sure you know how much I love you.\"\n\n\"Emmmmm.\"\n\nI kissed Sam on the lips for a minute.\n\n\"Emmm,\" was all I got.\n\nI lifted my weight off her and started kissing her neck then down to her breasts, licking and kissing them.\n\n\"yes...please...\"\n\nI kissed and sucked on Sam's nipples until she was about almost asleep. I looked up at her and smiled. I kissed her between her breasts and started kissing my way to her stomach. When I got there, I stuck my tongue in her bellybutton and licked.\n\n\"emmm, that tickles,\" came out softly.\n\nI started slowly kissing down to her mound, Sam moaned as I kissed and licker her mound. I slowly started kissing my way to her pussy.\n\n\"Honey?\" Sam got out.\n\nI kissed and licked ever so slowly toward her slit.\n\n\"Honey! James!\"\n\nI felt Sam push herself up so she could see. I pushed her legs wide apart and kissed her on her slick lips.\n\n\"James!!\"\n\nI placed my mouth over her pussy and drove my tongue deep inside her cum filled pussy.\n\n\"What the fuck!! James!! Ahhhh fuck!!\" Sam screamed when I drove my mouth onto her hard, licking her insides. \"You're not fucking doing that!!\"\n\nI slipped my arms under Sam's legs quickly and held on as she tried to back up.\n\n\"Honey!! Oh my god!! James!!\"\n\nI licked and sucked her slick lips into my mouth.\n\n\"Ahhhhhhh!! Fuck!!\" Sam screamed at the top of her lungs as she jammed her pussy up into my mouth while I felt her entire body convulse. \"I...don't...believe...you...are doing...that!!\" Sam kept jerking repeatedly as I licked and sucked all of the cum from her pussy.\n\nI held onto her as she fell back on the bed. I got her clit between my teeth and bit her gently.\n\n\"Nooooo!!\" Sam screamed as she drove her pussy into my mouth one more time and gushed.\n\n\"James, you are...not...doing...this...\"\n\nI sucked harder on her clit.\n\n\"No!...No...No...no...no...nooooo,\" Sam trailed off.\n\nI took my mouth off her pussy and looked up. She had passed out. I let her legs down and rubbed her stomach. I got off the bed and went to the bathroom and wet a small towel and came back. I had to stop at the end of the bed and look at my sweet crimson red Samantha. I picked up my phone and took a few pictures, then sent them to Dawn. I got on the bed next to her and turned her head up and kissed her on the lips. I took the wet towel and rubbed her face and then her chest with it. The deep red sex flush was beginning to fade. I checked and she was breathing fine.\n\n\"Goodnight, Sam.\" I kissed her again, then grabbed the side of the sheet and pulled it over us. I was tired, I knew Sam was exhausted. It was almost 7:00am.\n\n+++++\n\nI grabbed a few hours of sleep, then woke up about 10:30. Sam had rolled and wrapped her arm around me. I eased out of bed so not to wake her and packed all of our stuff while she slept. By 11:00, I was dressed and everything was packed but Sam's jeans and a top. I called down for two valets and carts, they said five minutes. I walked back to the bed and eased next to my beautiful lady. I leaned over and kissed her for a minute.\n\n\"Sam...\"\n\n\"emmmmm\"\n\n\"I hate to wake you honey, but we need to leave.\"\n\nAn eye came open.\n\n\"What...?\"\n\nI kissed her again.\n\n\"It's after 11:00, you need to get dressed so we can leave.\"\n\n\"Emm, what?\" Sam opened her eyes and looked at me. \"Oh...what happened?\"\n\n\"We got a few hours of sleep. I have packed everything but we need to go.\"\n\n\"Emm...sleep my ass! You made me pass out!\"\n\nI kissed her again.\n\n\"Come on.\"\n\nSam woke up abruptly.\n\n\"James!! You didn't do that!!\"\n\n\"I hope you enjoyed it.\"\n\nSam sat up and tackled me and started kissing me.\n\n\"Enjoyed it!! Fuck, you made me pass out!! God I love you!!\"\n\n\"I love you too. Now put your clothes on, we have got to go.\"\n\n\"No go! Fuck me!!\"\n\n\"Later, remember I have to leave with Linda at 2:00.\"\n\n\"Fuck Linda!! Fuck me, now!!\"\n\nI pinned Sam to the bed and kissed her hard then sat up and escaped her grip.\n\n\"Wait!!\" She screamed.\n\nI picked up her jeans and tossed them at her.\n\n\"James, wait...I need to ask you something!\"\n\n\"While you get dressed.\"\n\nSam sat up on the side of the bed and pulled her jeans partly on. I tossed her the top.\n\n\"James? You have never done that before? Why?\" Sam asked as I tossed her shoes to her.\n\n\"Because I love you, that's why.\"\n\n\"But...I...James...does Dawn know you did that to me?\"\n\n\"She will, I'm sure.\"\n\n\"Do you do that to her?\" Sam asked as she got her jeans pulled up.\n\n\"All the time.\"\n\n\"Oh my god! Really?\"\n\n\"Yes, honey.\"\n\n\"Amy?\"\n\n\"Not yet, and I don't want you to tell her either, it will be a surprise for her too.\"\n\n\"But...\"\n\n\"No Sam, you wait!\"\n\n'knock...knock' \"Valets.\"\n\nThe valet sounded female. I walked to the door.\n\n\"But why now?\" Sam asked. I opened the door to find that it was a cute young girl and a guy about 19. I let them in and they went to get the bags and packages as the two of them looked at Sam with no top on.\n\n\"Because you are mine now, Sam.\"\n\nSam stopped in her tracks and looked at me.\n\n\"I have always been yours.\"\n\n\"I know, Sam.\"\n\n\"James...that was so fucking hot! I have never heard of a man eating his cum out of a woman. Do other men do that?\"\n\n\"Dawn says no! Get your stuff, Sam, and put your top on.\"\n\nI turned to take a bag to the door and the cute female valet was looking at us wide eyed.\n\n\"You're kidding,\" she said softly.\n\n\"See! Has a man ever done that to you?\" Sam, asked the girl.\n\n\"No,\" was all she said.\n\n\"See!\" Sam said.\n\n\"Sam, calm down. I do that to all the women I love, you are the second.\"\n\n\"Why me first, why not Amy? I can't keep this from her!\"\n\nSam was going 90 mile per hour.\n\n\"You were first because the last time I did Dawn, she said it was time. I will treat Amy next.\"\n\n\"Wow, he ate you after he came in you?\" The female valet asked as she looked, then went back to loading our bags and all of Sam's packages as the guy looked at Sam's tits.\n\n\"I will explode before then!\" Sam yelled as she pulled her top over her head.\n\n\"Young lady, or young woman...if you tell your sister, it will spoil the surprise for her.\"\n\n\"Hmmmp,\" came from Sam as she slipped her shoes on.\n\n\"Let's go.\"\n\nWe left the room and followed the two valets to the elevator. The doors opened and the valets pushed the carts in and we followed. When the doors closed, Sam jumped up and wrapped her arms around my neck and held on to me.\n\n\"Thank you,\" Sam said and held on. Then I heard her start to cry.\n\n\"Sam, what's wrong?\"\n\n\"I'm just so happy,\" she got out between whimpers. \n\n\"How was it?\" The female valet asked.\n\n\"Fucking incredible!\" Sam said looking at her.\n\n\"Daphne, I'll eat you if you let me fuck you,\" the male valet whispered.\n\n\"Don't tempt me,\" she said.\n\n\"I would,\" he said. \"It would be a pleasure to eat my cum out of you.\"\n\n\"You should let him,\" Sam told her.\n\nThe female valet turned to look at the male valet.\n\n\"Seriously?\" She asked.\n\n\"It would be my pleasure,\" he said. She smiled at him.\n\nA minute later the elevator stopped. Sam let go and turned to the door, she saw her reflection in the doors.\n\n\"Fuck!\"\n\n\"You look like it!\" I said.\n\nThe doors opened.\n\n\"James, why didn't you say something!\"\n\nThe two young valets loaded the Escalade while we watched. The young girl was cute. They finished and I went to hand her $100.\n\n\"What is your name?\" I asked.\n\n\"Shelia.\"\n\nI handed her the $100 and the two room keys.\n\n\"Shelia, you and your young friend here should probably go back up to the penthouse and make sure we didn't leave anything. If we did, just leave it at the desk.\"\n\n\"Okay.\" She said looking at me curiously.\n\n\"If you don't find anything, you may want to take your young friend up on his offer,\" I told her.\n\n\"Yes sir!\" She said as she smiled and took the $100 bill and the two keys.\n\n+++++\n\nI pulled up to the house and parked, Sam had nodded off against the door.\n\n\"Sam, wake up!\" I said as I shook her.\n\n\"Emm, okay...\"\n\n\"Grab something and let's get everything inside, it's 1:00.\"\n\nWe were pulling out bags and packages when Dawn and Amy came out naked and helped us. We got everything after several trips.\n\n\"You need to hurry,\" Dawn told me.\n\n\"Amy, you are not going to believe...\" Sam started.\n\n\"Sam!!\" I yelled at her.\n\n\"How great a weekend we had!\" She ran and hugged and kissed her sister then ran back to Dawn and hugged her. \"Thank you!\"\n\n\"For what?\"\n\n\"For being you.\"\n\n\"I guess you two had a good time. After we get him out of here, you can tell us all about it. You looked like you got fucked hard on the way home, Sam,\" Dawn said. Sam laughed and ran in the house.\n\nDawn turned and looked at me, \"Go! I have everything packed! We will get the rest!\"\n\nI got to the bedroom and took off my clothes and made it to the shower, the hot water helped wake me up. I got out and shaved and got ready, it was 1:30.\n\n\"What can I do to help?\" Dawn said standing there still naked.\n\n\"Get your diamonds out of my briefcase.\"\n\n\"I did. I left your gun in it, are you taking it?\"\n\n\"I think I will. Did you and Amy have a special time?\" I asked.\n\n\"Yes we did. What has gotten into Sam?\"\n\n\"She needs to tell you, but not Amy.\"\n\n\"Oh, you did her didn't you?!\"\n\n\"Oh yes.\"\n\n\"What happened? What did she say?!\"\n\n\"Screamed a lot, just before she passed out.\"\n\n\"You didn't make her pass out, James!\"\n\n\"She is fine, just wired. We got back from the strip club about 5:00 am...and she will tell you the rest.\"\n\n\"What about Amy?\"\n\n\"If she is in the mood, next weekend. Damn, I'm starving.\"\n\n\"Well, you don't have time to eat me...\"\n\n\"Not right now.\"\n\n\"I'll go make you a sandwich, dress casual.\" Dawn said.\n\n\"Come here.\"\n\nDawn walked to me. I hugged her and grabbed her ass with both hands and leaned over and kissed her.\n\n\"I love you.\"\n\n\"I love you too, honey. Now get ready.\"\n\nI watched Dawn walk out of the bedroom. I found some clothes I would be comfortable in until we got to LA and put them on. By the time I got downstairs and gathered everything I needed, it was 5 minutes until 2:00.\n\n\"Here!\" I heard Sam say, I turned to her and she was handing me the small digital camera. I took it and put it in my briefcase that Dawn had ready along with my portable computer.\n\n\"Sit and eat,\" Dawn said. I sat at the table and worked on the sandwich. \"So, what time did you two go to bed?\"\n\n\"While ago.\" I said. Sam giggled.\n\n\"I woke up after he...I'll tell you later,\" Sam said with a big smile looking at me.\n\nAmy walked up behind me and wrapped her arms around me from behind so that I could feel her breasts pushing into the back of my head. \n\n\"We will miss you,\" she said.\n\n\"I understand you have some company coming over?\" I asked.\n\n\"Yes we do. We are all going to fuck Sam and Olivia,\" Amy said as she hugged me.\n\n\"I'm sure they will enjoy that.\"\n\n\"I'm sure they will,\" Amy said and kissed me on the cheek. \"Did you make my baby sister happy?\"\n\n\"Did I Sam?\"\n\n\"Fuck yes!!\"\n\nAmy and Dawn giggled.\n\n\"Thank you,\" Amy said and released her hold on me after another kiss.\n\nThe gate buzzer went off.\n\n\"I'll never make it today,\" I said.\n\nSam laughed and came and hugged me. \"Be nice to Linda,\" she said with a laugh. \"But, not too nice!\" Sam said laughing.\n\n\"Sam, I may be fucked out for once,\" I told her.\n\n\"You!!\" Sam yelled and laughed.\n\nThere was a knock on the door so Dawn headed that way.\n\n\"Honey, that may be the driver?\" I said.\n\n\"Oh, forgot. Sam get the door,\" Dawn said as her and Amy walked into the bedroom. It was Linda.\n\n\"Hi Linda!\" Sam said.\n\n\"Well, you look much different than the last time I saw you!\" \n\nSam laughed and walked back to me. \"Take care of him!\"\n\n\"I plan on it. Hi Dawn, Amy,\" She said as they walked out wearing untied robes.\n\n\"Linda, I wore him out,\" Sam told her with a big smile.\n\n\"He can sleep on the way to the coast,\" Linda said. \"We need to get going.\"\n\nLinda walked over to Dawn and wrapped her arms around her and leaned over and kissed her, \"Thank you.\"\n\n\"Just don't break him,\" Dawn said.\n\nI finished swallowing my sandwich and grabbed my soda and got up.\n\n\"You look tired,\" Linda said to me.\n\n\"That's Sam's fault.\" Sam laughed.\n\nThe driver came in and started carrying my bags to the limo.\n\n\"Did you two have a nice weekend?\" Linda asked.\n\n\"Yes, we did!\" Sam exclaimed.\n\n\"Very good! Did you leave anything for me, Sam?\"\n\n\"It may take him a day or two to recover!\" Sam and Linda laughed.\n\n\"Well, you can sleep on the plane, I have some work to finish up,\" Linda said. \"Dawn, we will be at the hotel around 6:00, I'll make sure he calls you.\"\n\n\"You two have fun, and get some work done!\" Dawn said. I kissed Dawn and the girls and then Linda and I left."
    ],
    "authorname": "drmac100",
    "tags": [
        "lottery",
        "james",
        "sam",
        "group sex",
        "threesomes",
        "red head"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-45"
}