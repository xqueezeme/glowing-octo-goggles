{
    "title": "Mira Ch. 03",
    "pages": [
        "Hey guys,\n\nSo I've rewritten this chapter three times. I don't know about this one. I'm having a rough go. I just don't like the way it's coming out. I feel like I'm struggling and that doesn't bode well for this one's shelf life. My brain is working in different directions. I could force it out. But I don't think you guys would like the way it goes if I do.\n\nSo here's the deal. I'm gonna write some other stuff that I'm feeling more inclined to write and then I'll come back to this one. As much as I'm capable of writing on demand I don't want the stuff I'm posting here to feel like work or I'll get tired of it and stop. None of us want that! But I promise I'll come back to this. \n\n<p align=\"center\">*Chapter 3*</p>\n\nMira may have thought it all a disturbing nightmare, if not for the handprint on her throat and the new pain searing through her skull. She stood in front of the mirror and examined the purple seeping into her pale skin. Collapsing onto the edge of her bed, she stared at the door, imagining that she was brave enough to leave. She knew she could find the way out. Rillan wouldn't follow her. He would just tell the druids to send someone else. But without a withered body lying on the slab outside the cave all of her teachers and friends would know that she had run away. She was trapped here by herself.\n\nMira lay back on the bed, letting tears stream down her cheeks. Slowly she resigned herself to her existence. I don't know why it's taking so much for me to get used to it all. Didn't they tell me how horrible this was? Wasn't I prepared for being sacrificed for the good of my people? Mostly she was angry at herself for seeing something in Rillan Tiernay that wasn't really there. Just because the man's touch was gentle once and he seemed so&hellip; I was wrong. I was just wrong, she thought. \n\nIt took some time that night, but she was able to turn her tears off. Mira busied herself by preparing a bath and making plans for what she could do to pass time until Rillan wanted another meal. That's all I am. A meal. A well cared for, unwanted, meal. In the end, I suppose, it makes sense. He hates himself. I'm another representation of what he despises about himself. I guess if I were a good person who turned myself into a monster I wouldn't much like the things that reminded me of that either.\n\nMira soaked in the tub, feeling the warm water sooth the tension from her body. She did her best to remember her lessons and try not to be resentful for all of this. It had been her choice. No one had forced her into this life. Now she would have to adjust to it. The longer she lasted the fewer girls in the next generation would have to be subjected to it. She resolved to look through the library and see if she could find some books on music. Nothing had surprised her more than when she had found the room with all the stored instruments. If she could find some books on how to play one of them, maybe she could teach herself. That would certainly take a great deal of time. Besides, Mira had never liked sewing and there was plenty of clothing. She had only to cook and clean for herself. There were no gardens to tend or animals to look after or children to teach. She had never had so little to do.\n\nMira eventually got out of the tub, dried herself off, and went to her bed. She wouldn't disobey his rules again.\n\nRillan grabbed his armor off the rack and strapped it on. Choosing one of the more violent looking maces on from the weapons rack, he stepped up to the armored dummy. He roared frustration as vicious blows rained down on the dummy. Sweat covered his face and ran down the back of his neck as he battered the inanimate enemy into submission. When it finally lay in a brutalized mound on the floor he threw the mace across the room with an unsatisfied war cry and paced away from the mess. Air was forcefully drawn into his lungs as he tried to calm down. \n\n\"She's right to some extent,\" he said aloud to himself, a habit he had developed during long hours of silence. \"I've shown her no consistency. She has no idea how to behave because I've given her no real direction,\" he sighed. He wanted to badly to trust her and walk down the hall to spend time near her. He stared at the large double doors and wondered if he had hurt her too badly when he had slammed her against the wall. \"Well if she didn't fear me before, she'll be starting to now.\"\n\nHe couldn't decide if he wanted her to be afraid and cut off all chance of resurrecting what had started between them or if he wanted her to continue to challenge him. Rillan walked back to his dummy and began to repair the damage he had done with a skillful hand. This wasn't the first time, nor would it be the last, that he had relieved some of his frustration this way.\n\nMira could hear the echoing sound of metal on metal bouncing off the stone walls in the darkness. She worked her way down the hall until she found the door to the library. She was grateful for the yelling and pounding. He sounded angry and that concerned her, but it also told her where he was. She wasn't nervously wondering if he was watching her from the shadows this way. \n\nThe library was well organized and it didn't take long for her to find the books concerning music. The ones she found were mostly books that discussed music or talked about the history of music. Mira looked around the room with interest and found that there were more history books than anything else. \"He must be interested in learning about the things that have happened since he was trapped inside this gloom,\" she said softly to herself.\n\nMira tilted her head toward the door and listened to the continued hammering of metal on metal. It was getting louder. She sighed nervously, using the sound to break the uneasy feel of her situation, and went back to the music books. She found one that looked simple enough. It was a book that was mostly the history of tin whistles, but there were some pages containing simple chords and a small section on how to read music notes. \n\nMira left a note for Rillan on the desk, letting him know that she had borrowed one of the books and which one. As she headed back toward her rooms, silence descended on the hall. A nervous queasy feeling had Mira watching the light around the doors at the end of the hall as she quickened her pace toward her own rooms. She wasn't doing anything wrong, but she didn't want him thinking she was up to something either. She didn't intend to ever find out how he would \"punish\" her, if she stepped out of line again.\n\nThe heavy wooden door closed behind her with a thud and she felt safe again. Excitedly she ran down her hall. The light helped her feel better as well. Mira wondered if she would ever grow used to the darkness of his halls. She opened the door that led to her music room. It didn't take long for her to turn up a small intricately carved wooden box that contained, what looked to be, a well made tin whistle. It was silver and had a soft red cord with tassels on it tied around the end near the mouth piece. She smiled thinking it was very pretty. Placing the whistle back in the little wooden box she picked up the book and the box then walked out of the music room and down the hall into her bedroom. She placed the box with the whistle on the stand next to her bed and began reading, absorbing everything the book said.\n\nIt didn't take long for her to realize that she would mostly have to teach herself how to play it. Mira smiled. \"I've got all the time in the world,\" she said to herself.\n\n<p align=\"center\">***</p>\n\nIn the beginning, Rillan had been worried about how she was reacting to what had happened between them. It became evident by her behavior, which changed very little, that she was still the same. She was respecting his space as a result of the attack and staying in her own room. But she was still moving about and doing things to occupy herself. The ones who had given in to the darkness in his home had always taken to lying in bed and sleeping their tedium away or staring blankly at walls for hours on end. The ones he pitied were those who didn't lose their minds and lived every day knowing where they were and what he was.\n\nIt was a late night when he walked into his library. There was a tingling in the back of his mind. He wouldn't admit even to himself that hoped she might come here as well. Then he could call it a chance encounter in a small space and neither of them would have to admit to needing the company. Rillan was letting his pride rule him and he knew it. He was refusing to go to her and pissed at himself that he had so thoroughly given her the impression that she was not to come to him. \"I've no one to blame save myself,\" he groused as he walked the shelves of books and tried to find one that interested him. \n\nA piece of paper with unfamiliar handwriting, on his desk caught his attention. When he read it a smile cracked his face. She had been here. The muscles in his cheeks balked at the unfamiliar movement and his face fell back to the standard frowning position it was used to. Rillan walked out the door and down the hall toward Mira's rooms. His mind was working on some kind of excuse to use for interrupting her solitude. He was curious as to why she had taken the book she had chosen. \n\nStanding outside her door and trying to formulate the thing he would say to make it all right that he was visiting, he heard her wobbly attempt at a scale on the whistle she had found. The laughter started as a muffled chuckle and a grin as he listened to the poor excuse for a scale. Rillan hadn't actually thought someone could do that poorly with a tin whistle. It wasn't as if it was a complex instrument. When she stumbled over another couple notes he turned away from the door and allowed the bottled amusement out. She was just plain horrible.\n\nThere as an odd sound from the hallway and Mira put the pretty silver whistle down. If she hadn't believed Rillan Tiernay incapable of it, she would have thought the sound to be laughter. She placed the instrument in the crease of the pages of the book and got up to go and see what it could possibly be. \n\nRillan heard the so-called music stop and stepped quickly back into the shadows down the hall. He didn't want her to be insulted. If his laughing had brought her to the door, that would be a great way of getting reacquainted. Hi Mira, I was passing your door and heard this awful sound from inside. When I realized it was you I broke down into gales of laughter. You'll have to forgive me. I didn't realize you could play, his brain said to him sarcastically. Oh that would make her forgive you.\n\n He watched as her door creaked open and her beautiful face popped out the crack. At first it was a small look down the hall in both directions. Then she stepped out. Rillan felt as though a vice were being tightened in his chest as he looked at her. There was a wicked handprint shaped bruise on her throat, but her brown eyes were bright and filled with curiosity as she looked up and down the hall. Her hair hung in neatly curled waves about her shoulders. The neckline of the dress she was wearing dipped dangerously low. He wanted to slide his arms around her trim waist, pull her into his arms, kiss the bruise and apologize for all of it. The vice tightened a bit more in his chest.\n\nAfter a thorough inspection of the hall Mira went back into the room. That's where he told her to stay, wasn't it? Rillan stood in the shadows for some time staring at the closed door. \"She doesn't belong down here,\" he said softly. Then he walked back to the library, randomly chose a book from a shelf, laid the note she had left him carefully on the table, and went to his own rooms. This one never should have been chosen for me, he decided as he closed his own door and disappeared into his dark halls.\n\n<p align=\"center\">***</p>\n\nRillan had been holding back the hunger for days now. His indecision was annoying him again. In the past couple months he had watched Mira visit the library a couple times. But she mostly remained in her own rooms.\n\nRillan was pleased that she wasn't wallowing in her own misery as he tended to do. But the small pleasure he took from that was like adding more salt to the wound that had opened in his soul since she had arrived. It was constant and nagging. He wanted to be near her, but he couldn't bring himself to believe that she could ever be what she seemed. Then his mind would drift to Elizabeth again and he'd become angry. The continual shifting from sad longing to irate anger had him tired from the inside out. The only real decision he had made about the situation was that she at least deserved some amount of consistency in his behavior and until he could figure out which way to go he was keeping his distance. After a great deal of debate he decided on a solid middle ground for his emotional state and chose to warn her that he'd be coming for her again in the near future. \n\nWalking down the hall, he heard it start, softly. The notes were sad and slow. He could almost feel the loneliness in the tune as it slipped through the cracks in the stone and filled the dark hallway. She had been practicing. \n\nMira had immersed herself in the pages of the books she had found on music. It didn't take very long to master the scales, considering she had all day, every day to practice. It wasn't long before she found the line in the book that said music was only variations on the scales. When she read that it was as though something clicked into place in her mind and suddenly the music poured out of the little tin whistle. \n\nFirst she had tried playing happy songs and imitating the ones she had heard at solstice or in the market, played by old men with beards who were accompanied by fiddles. But the happiness needed for playing those was simply not in her. The soft lullabies that she remembered from her childhood followed and from there she began playing with the notes on her own. The songs that she found herself playing were low and slow. They seemed to start from inside her chest and flow out the tin whistle, causing the candlelight to dance the shadows around her to the soft sounds. She had no idea how far the stone walls of the cave carried the music.\n\nRillan stood outside her doorway listening and breathing. He closed his eyes and let the sound pass over him. As sad as it was the music was beautiful. How could something that comes from her be anything but beautiful, he thought. After a few moments he finally knocked loudly on the door. The abrupt stop to the music was almost painful. He knocked again.\n\nMira wasn't sure he had heard right at first. It had been so long since noise had come from anything other than herself. When the knock came again she set down the whistle and leaned over the edge of her bed to look down her hallway at the main door so far away. Finally she called, \"Come in.\"\n\nRillan didn't know if the uncertainty in her voice was fear of letting him in or confusion for his presence. He opened the door and walked down the hall, not realizing how much the music had softened his features.\n\nMira stood as Rillan approached and watched him coming toward her. He noticed that she looked concerned, but not upset. The bruise their last encounter had left her with was completely gone. His dark blue eyes met her soft brown and he almost looked away. It was still strange and unsettling to him. After all this time and the realization that he was unlikely to break her spirit, even if he tried, her strength still baffled him.\n\nRillan cleared his throat as he realized he was staring at her. \"Why don't you play something happy,\" he asked to break the silence.\n\n\"I've tried,\" she said softly. \"Those don't seem to come out right. I need more practice. Is that why you're here? I didn't realize you could hear it outside my rooms,\" she blushed as she realized he could have been listening all this time. \"I'm not very good. I can close more doors and play more quietly,\" she said quickly. \n\nThe blush across her chest was a tempting target for him. Though Rillan was sorry he had embarrassed her he took great pleasure in the sweet way she reacted. \"No. That's not why I came. And I enjoyed listening. I wouldn't want you to stop. It's a much more pleasant sound than silence. There has been too much of that of late,\" he sighed. \n\nEven as he spoke he could hear her heartbeat and almost see the pulse of blood running through her warm body. Rillan closed his eyes and he could smell the rose scented water of her bath mixed with her own scent on her skin. Mira watched as he opened in eyes and the black of his pupil bled tellingly into the dark blue irises and then out into the white until his eyes were solid black in his sockets, giving his face the demon appearance that sent chills over her skin. \n\n\"You're hungry,\" she said definitely. \n\nRillan watched her hug herself as she said it. The movement was subconscious and spoke volumes of her total lack of desire to experience that again. But neither her gaze nor her voice wavered at the certainty of the statement. She was amazing to him. Smart enough to know that it was not something she wanted to do, but she accepted it and was not afraid of it. She had the appearance of someone facing down an approaching storm and knowing there was nowhere to run to. He nodded.\n\n\"Now,\" she asked in that same certain tone.\n\n\"Soon,\" he said. \"But it doesn't have to be now. I've only come to warn you.\"\n\nMira's eyes shifted to the walls and then the ceiling. \"Last time you said that it would be worse the longer you waited and when I came to you it was still not so bad as it could have been.\"\n\nRillan nodded at the statement. She was weighing her choices with a logic he had to admire. \n\n\"How bad has it gotten now? I mean in comparison to what it was last time,\" she asked with concern.\n\nHe sighed heavily. Rillan had yet to admit to her that he had taken it too far the last time and that normally it would never be that bad. \"I'm not as far gone as that,\" he said, trying and failing to sound reassuring.\n\n\"Alright,\" Mira said haltingly. \"I guess, if I have any choice in this, then I would prefer that it be done sooner rather than later. I don't mean to be insulting,\" she added quickly. \"It's just that the after effects are not very pleasant.\"\n\nRillan had to smile at her phrasing and the look of distaste that crossed her face. \"I'll be in my rooms. Come to me when you like,\" he said. \"I take no offense at things that are fact.\" With that he turned away from her and headed for the door.\n\nOnce he was outside he stood and waited to see if she would start playing again. After a short time he heard the song start again, low at first and then gaining in volume. For the next few hours he stood against the wall outside her room and listened to the sad sweet music. It was as though she was singing to him in the darkness and knew the exact notes it would take to reach into him.\n\nGetting herself cleaned up and lighting a lantern to take with her down the hall, Mira wondered what time of day or night it may be. She had long ago lost track. There was no way of telling how much time had passed without seeing the sun rise and set. \n\nMira waited until she was so tired that she was almost falling asleep sitting up. She hoped that if she was tired enough then she wouldn't stay conscious as long as she had the last time. As she walked down the hall she considered asking Rillan for something to tell time with. \n\nRillan's door was closed when she reached it and she knocked loudly, setting the lantern down next to the door. Almost instantly he called for her to enter. The cold metal latch clicked open and the door swung heavily as Mira pushed it. A weight sat heavily on her shoulders as she walked slowly down the tunnel toward Rillan's bedroom. As she stepped inside her eyes instantly went to the closed door over the shaft that led to the outside. ",
        "\"It's not yet sunset,\" Rillan said.\n\nMira flinched when she heard his voice. It wasn't as if she didn't know he was there somewhere. But she hadn't actually noticed him when she entered. He was standing next to his fireplace, staring into the flames. Shadows darkened his features and made him seem more menacing as he stood there.\n\n\"When the sun can no longer reach it, I'll open it. But not before.\"\n\nMira nodded quickly, but remained silent. She was very tired and was afraid of how he would react to any continued conversation about the shaft. He didn't seem upset at the moment, but she wasn't willing to risk it. \"I suppose then I should get ready,\" she suggested and yawned.\n\nRillan was amazed. Her voice didn't waver a bit. He smiled at the yawn. It was a strange compliment. Generally people who are scared don't find time for yawning. \"You look tired,\" he said gently.\n\nMira blushed. \"I suppose a little.\" Her heart started racing a bit. Would he be angry if he knew she had planned it that way? She was trying to read his face but the shadows obscured any clue as to his mood. \"Why do you always keep it so dark?\"\n\nRillan looked around. \"I don't need as much light to see as you do. Darkness doesn't bother me.\"\n\nMira nodded. She knew that. \"Well,\" she started uncertainly.\n\n\"Are you truly in such a hurry,\" he asked. He wasn't sure how to take this.\n\n\"Not a hurry exactly, just&hellip; I don't know.\" Her eyes fell on the door to the shaft again. \n\nRillan watched as she did her best to look everywhere else. You just don't belong down here, beautiful, he thought sadly. \"Mira,\" he said seriously. \"Why are you here?\"\n\nShe looked up at him in confusion. \"Because you said-\"\n\n\"No,\" he interrupted. \"Why did you choose to be a sacrifice? Why did you choose this life?\"\n\nMira stared at the shadowy figure in front of the fireplace. She didn't want to answer that. There were too many sad memories there. \"Does it matter?\"\n\n\"Yes,\" he said in an authoritative tone that bit into her. \"I need to know why you chose this.\"\n\nThere was a long pause while she tried to find a way around it. There was no point in lying. The only reason she didn't want to talk about it was because she didn't like talking about it. She didn't think it'd make a difference. \"You killed the man who killed my father.\"\n\nRillan wasn't sure he wanted to know who or when. But if she felt like she owed him something then that could explain a lot. \"I do my assignments. I didn't kill anyone for you Mira.\"\n\nShe shook her head. \"I never said that. I didn't have anyone left after he died. I volunteered for this because it gave me a purpose.\"\n\n\"Purpose,\" he echoed quietly and then turned back toward the fire. He could certainly understand that. \"Far be it for me to impede someone in their purpose. Take your clothes off Mira.\"\n\nHe didn't watch, but he listened as soft swishing sounds told him that she was complying with his order. Rillan had been longing to take her again since that first night they had been together. It had been a very long time since any woman had responded to him the way that she had. She found him terrifying when he turned. He had no delusions about that. But she forced herself to bottle the fear well enough that she responded to his touch with something other than fear. She'd never know how much that meant to him. When the room went silent except for the crackling noise of the fire Rillan finally turned around.\n\nMira had her eyes closed. She was waiting for him to descend upon her, fangs protruding from a mouth too large for his face and black coal eyes sunk deep into shadowed sockets. The image in her mind started her heart racing and she waited.  \n\nRillan stepped up to her. Mira's chest was expanding and contracting with labored breaths and he watched her breasts rise and fall with the effort. He could guess what she was thinking. Leaning in close to her, he breathed in the scent of her hair. His breath on her cheek made her flinch. She hadn't realized that he was so close.\n\nMira's heart was pounding in her ears. The vision in her mind grew progressively worse. She imagined his thin pale lips curled back from his fangs, his ears set farther back on his head and his skin almost translucent white pulled tight over his sharply angled cheeks and jaw. His voice startled her.\n\n\"I know that your racing pulse has nothing to do with wanting me right now,\" he said gently. He reached up and stroked her cheek. \"In truth I'm no better than your teachers. I gave you a foul impression of me.\" He leaned down and lifted a handful of hair to his face. \"I'm sorry. It doesn't have to be like that. I've rarely done this Mira, but I'll give you a choice.\"\n\nMira's brow had furrowed and she appeared confused, her eyes still squeezed shut. \n\n\"Look at me. I haven't changed.\"\n\nShe opened her eyes and found that he was only inches from her. Rillan's dark blue eyes bored into hers. Mira almost forgot that she was naked until his gaze shifted. She blushed a deep red that only worsened as he smiled. \"What,\" she asked as she cleared her throat, desperately wanting something to cool her heated embarrassment.\n\nRillan's eyes met hers again and he reached up to cup one breast in a cold calloused hand. Mira shivered as his frozen digits closed around her soft mound and gently squeezed. He circled her nipple with his thumb and licked his lips, anticipating the feel of the firm nub in his mouth. \"In the past,\" he said and his eyes dropped to the breast he was playing with, \"most of the girls who have come here have wanted as little contact with me as possible. So I waited as long as I could and then I went to them. But you seem to be capable of dealing with me better than the others have been. So I give you the choice. I need the same amount of blood no matter when I take it. I can either come to you and drain you near death once and a while or I can come to you and take small amounts more often. You'd not feel the kind of pain and sickness as you did before, but you'd have to lie with me more frequently.\" As he finished the suggestion his eyes nervously returned to hers. He had never wanted to read anyone's thoughts before. She was so strange to him. \n\n\"I don't understand why anyone would choose pain and sickness over time with you.\" Mira felt his thumb and finger pinch her nipple. This time her racing heartbeat had nothing to do with fear. Mira momentarily lost track of what she had intended to say. \"Uh,\" she looked into his dark blue eyes. \"How often would you need to&hellip;\" Mira's voice trailed off as his other chilled hand began to slide along her hip and he stepped closer, bringing his mouth so near hers that she could feel his breath on her lips.\n\nRillan smiled as a little whimper involuntarily escaped her mouth. He neglected to tell her that he had been too annoyed with most of the other girls to bother with little pleasantries like this. They were all so frightened of him that it made him feel as though he was raping them. With the others, more often than not, he took their blood and left their bodies alone. He couldn't help himself with Mira though. He almost felt alive when his touch was able to cause her such obvious pleasure.  \n\nRillan nudged her nose with his own, repositioning her face so that he could kiss her, but he only teased her with his lips, coming close and not quite touching her. To his delight, Mira's hands snaked up into his hair, stopping his game and bringing his lips to hers. She felt the strange cold of his skin as her lips pressed against his. Heat flooded into his body from her. Rillan pressed his tongue along her lips and she parted them, allowing him to taste her mouth.\n\nHe rolled her nipple between his thumb and finger and a soft moan bled into his mouth, stopping the kiss. Rillan lifted his head and looked down into her eyes, answering her nearly forgotten question. \"The more often I feed the less I need to take and the less sick you will feel from the experience. I leave the choice of timing to you. Come to me when you're willing. But know that if you don't come to me, I will eventually come find you.\"\n\nMira nodded, not really caring at this point what the rules were. She only wanted him to keep touching her. She had never known anything like this in her life and she wished that this part would never end, as much as she hoped the feeding would never come. Is his touch worth the price of it?\n\nHer obvious compliance only confused Rillan. He wasn't sure if she was insane, masochistic, or so empathetic that it didn't matter. He couldn't make himself believe the later. In truth, in this moment he didn't care so much about the why. He hadn't been with a compliant woman in so long. Whatever her reasons were, they were good enough for the now. Besides, the conversation would serve as a decent reason to spend time with her later.\n\nCold hands slid across Mira's heated skin and goose bumps broke out along her flesh. Rillan leaned in to her and closed his eyes. Her hands were on his shoulders and he pulled her body against his own, reveling in the warmth of her, even through his clothes. Rillan stroked down her back. His fingers danced over the goose bumps as Mira shivered. Her breath was coming in heavy waves and her little hands had fisted in his shirt. When he looked to her face again her eyes were closed and her head had lulled back across her shoulder, exposing the pale line of her neck to him.\n\nEverything in existence momentarily melted away. Rillan leaned down and kissed her neck, tasting her skin and taking in the scent of her arousal. A soft seductive beating just beneath the surface tantalized him. Rillan felt the hunger roll in his stomach and surge through his dead body, as certainly as he felt her heartbeat pounding in her chest pressed against his. Before he could lose his control he pushed her away.\n\nRillan paced across the room. Mira's look of disappointed confusion was not lost on him as he stood near the fire. He laughed, almost manic as he stared into the flames eating away at the wood in the fireplace. \n\n\"Did I do something wrong,\" she asked timidly.\n\n\"No,\" he growled. \"Get into the bed Mira.\"\n\nRillan didn't even look up at her. He knew full well that his eyes would frighten her. He was about to lose the fight with his hunger. He had waited too long. This one deserves better, his mind chanted. \"Close your eyes Mira,\" he said almost too softly for her to hear. \"Don't open them.\"\n\n\"Aren't you going to,\" she paused, too sweet and innocent to say what she was thinking. \"I mean before&hellip;\"\n\nIf Rillan didn't already feel guilty about everything he would have started to now. She actually wanted him to make love to her. He wanted so badly to look into her eyes, but he couldn't allow himself to frighten her any more than he already had. \"I'm too hungry right now Mira. Touching you only makes it worse. After the feeding's done I'll pleasure you.\" My sweet one, he added in his mind.\n\nMira's mouth went dry. She clamped her eyes shut and went stiff, beneath the soft blankets. He couldn't have given her a more clear warning of his intentions. Mira could hear fabric rustling and then the bed moved.\n\nHer heart pounded so hard against her chest that she feared it may explode through her rib cage. She could feel the shifting of the bed as he moved closer to her. The pressure was all around her. Her mind's eye clutched desperately to a vision of tanned leather skin, dark blue eyes, and a gentle smile. But in the endless moments she waited for him to touch her a monstrous image was steadily distorting the one she was trying to hold onto. \n\nRillan watched her tremble. The beast in him was pleased at the sight and smell of fear. He craved it. There was something sweeter about blood tainted with terror. He moved slowly, letting his icy touch make her flinch beneath him. Rillan pressed her head to one side and leaned down to bite her. His fangs sliced into her flesh. \n\nMira whimpered in pain as she felt the sharp piercing and then the rhythmic pressure as he sucked her blood from her. She gasped as the darkness began to swim. Tears squeezed from her eyes and she started to relax as she surrendered to the situation. Rillan's cold heavy body pressed down on her, pinning her beneath him. His icy grip on her arms was painful as he held her down, just in case she decided to fight it. Mira was finding it difficult to breath as the cold pressure on her chest, the pain searing through her neck, and the spinning darkness enveloped her. As she felt her consciousness slipping away she surrendered gratefully to the black.\n\nRillan took his time finishing his meal. He was careful not to take any more than he needed. Warmth flooded through his body, both from the blood and from being pressed against her. He reveled in the feeling as the chill left him. It wouldn't last long, but he would enjoy it while he had it. When he was sated he lay down beside her and pulled her into his arms. Her back was to his chest and her head rested on his shoulder. His body shifted back to normal and he sighed contentedly as he held her.\n\nElizabeth drifted back into his mind. That was the last time he had allowed himself the pleasure of keeping a woman in his arms as she slept. He took in a deep breath and let it out, staring up at the cave ceiling. She had been very different though. Elizabeth had lost her mind almost the instant she had been delivered to him. It was easy enough to ignore. She wasn't crazy in most ways. Her mind simply chose not to acknowledge the demon half of him. She behaved as if she was his lover or wife and life here was perfectly normal. At first it had bothered him. But quickly he came to accept it as a reasonable way for her to cope with what he was. Elizabeth smiled and loved him, until he changed or needed blood. Then she would become catatonic until it was over. It was with Elizabeth that he had learned to eat normal food again. She would cook dinner for him, make him clothes. After a while he had even grown to like the way she had adapted. It allowed him to forget himself when he was with her.\n\nNow there was Mira. Rillan wondered how long she could last down here. If she were living amongst her people, he had no doubt that she would be the wife of a powerful person. She would give birth to warriors or teachers. She had the inner strength to know and accept what he was, the intelligence to be afraid of it, but the bravery to survive it. He held her tighter. He knew she could survive indefinitely down here. He would bleed her dry and watch her die slowly. \n\nRillan pressed his face into her hair and took a deep breath. This was exactly what he had wanted for as long as he had been here. Now he was finding himself unable to justify keeping her here. The others were one thing. Sacrifices that were pitiful excuses for what the people he protected were capable of. To some extent he believed that he was helping their population by eliminating such weak excuses for human beings. But Mira deserved to be married and have children. Things he could never give her. A voice in the back of his head warred with him. Haven't I earned this? She volunteered. It's what I want. Rillan growled at himself and his own misery. One year, he decided. \n\nRillan wrapped his arms more tightly around her. She was young enough. He'd keep her for a year. At the end of the year he'd send her back to her people, arrange for her to have whatever she needed, and have a new girl sent to him. For now he would enjoy her company. Rillan could feel a strange pain in his chest. For the first time since he had offered himself up for this life he was truly regretting his choice. He had always believed that revenge and the good he had done outweighed anything that life could have offered. \n\nHe closed his eyes and shut the thoughts out of his head. It wasn't long before he drifted to sleep holding Mira in his arms."
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "druid"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-03"
}