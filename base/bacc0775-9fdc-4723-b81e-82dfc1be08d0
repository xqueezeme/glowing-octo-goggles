{
    "title": "The Witch of Dark Hollow",
    "pages": [
        "Leah.\n\nLeeeee-ah.\n\nShe moaned fitfully, emerging from a sleep that felt as deep and dark as Goodman Miller's millpond. \n\nLeeee-ah.\n\nThe voice, crooning. And then a laugh. A laugh that seemed familiar. High, shrill, tittering, a laugh like rusty nails and icicles. \n\nPain. Sharp and twisting. At the tip of one breast, then the other. \n\nLeah gasped. Something was on her. Sitting on her chest. A hot, furry, loathsome weight. And the pinching. Through the thick wool of her night-dress, those sharp pinching twists to her nipples. \n\nHer eyes snapped open. The room was dark but for the edges of moonlight around the muslin curtain. She recognized the familiar bulky shadow-shapes of the furniture, recognized the scents of candle-tallow, lye soap, the apples in the pantry, the bitter tang of smoked ham. \n\nBut over all of those, rushing eagerly into her senses with each startled breath, was the stink of the thing upon her. Rancid and yellow, like bacon fat and garlic spoiling in a pan of sour milk. \n\nShe could only see it as a black shape, a black shape with glinting red-rimmed eyes that peered with avid cunning into her upturned face. It was hunched and small. Its paws, clever as a raccoon's, reached to tweak her painfully sore nipples again. \n\nA revolted cry caught in her throat. Leah thought she would strangle on it, this scream she was unable to voice. The air felt locked and feverish in her lungs. Her mouth worked like that of a landed fish.\n\nWith another shrill, grating laugh, the creature on her chest scurried forward. Its little claws snagged her gaping lips and forced them apart. Her vision drew in the moonlight, and the dull umber glow of the banked coals out in the kitchen hearth. She could see the thing more clearly now. \n\nIts form reminded her of drawings of monkeys from far-off Africa \u2013 the parson was a learned man, and had many fabulous books in the parlor. Yet it was no monkey. There was something of the cat to it, and the rat as well. Most of its body was shaggy with matted fur. It must have teemed with fleas and lice. Its heat was terrible, its stench worse. \n\nLeah could not move. Her body felt as rigid as if it had been turned to stone. She heard the creak and groan of the house settling, and fancied she could hear the parson's snores and his sister's restless tossing and turning from upstairs. \n\nLaughing again, as Leah lay prone and helpless, the creature stopped with its hind feet planted on her collarbones. Its forelegs, tipped with their deft little paws, still held her lips open. Red eyes glittered maniacally down at her. \n\nSomething hot and slimy brushed her lower lip. It flexed and curled like a worm. She tried to jerk her head away but could not move. The appendage slithered over her teeth and touched her cringing tongue. It tasted of rotten eggs. \n\nThe creature closed her lips around the vile length. With a cooing sort of grunt, it began rocking its misshapen body back and forth. Leah strained her jaws, wishing to gnash her teeth together and sever the slippery, coiling thing that had invaded her mouth. She could not.\n\n\"Leeee-ah,\" the creature whispered. \"Ooh, niiice Leee-ah.\"\n\nThe pace of its movements increased. So did the noise it made, grunting and grunting. Dribbles of scalding saliva drooled from its chin onto Leah's face. All at once, the appendage went stiff, then convulsed. A flood of thick, sticky fluid spurted from its end.\n\n\"Soooo niiiice,\" crooned the creature. It voiced its piercing trill of a laugh again. \n\nLeah gagged. She struck the floor with a hearty thud, jarring her bones. Without knowing how she got there, she huddled in the tangle of her bedclothes and retched. A thin stream of vomit sprayed the floorboards. She spat and spat, desperate to rid herself of the taste. Tears ran freely from her stinging eyes, clear mucus from her nose. Just when she thought she might be able to sit up, another cramp seized her gorge and she retched again. And again. Until she felt husked out and empty. \n\nAt last, she collapsed onto her side, shuddering from head to toe and sobbing. She raised one shaky hand to wipe the mess from her face. Her abused nipples throbbed, chafed as the scratchy wool moved over them. \n\nSlowly, lest she trigger another episode, she pushed herself into a sitting position. Her back rested against the edge of her cot. She drew her knees up and tucked the skirt of her night-dress around her legs. \n\nThe creature was gone. If it had ever truly been there. The residue of its foul seed was gone from her mouth, which was filled with the acidic flavor of her vomit. Leah gingerly touched her lips, thinking that she might find them pin-pricked from the grip of the claws, but they were unmarked. Only the ache in her breasts remained. \n\nHer next thought was to go up and wake the parson, and tell him of this nightmare. But she blushed at the very idea. Brother Ezekiel was a staid and sober man. She couldn't imagine having to answer if he asked what had happened in this nightmare to cause such distress. She simply could not tell him what the creature had done to her.\n\nAnd what if he called upon her to testify? What if Brother Ezekiel deemed that it had not been the mere wanderings of a sleeping mind, but the touch of Evil? The touch of the witch?\n\nLeah trembled. She climbed hurriedly back into her bed and pulled the blanket over her head. There, entirely in darkness now, she prayed urgently. \n\nNot the witch. Please, in Thy mercy and goodness Oh Lord, not the witch.\n\nShe couldn't think of any reason that the witch would single her out. She and the accused barely knew each other well enough to bid good morning when they passed on the street. \n\nBut then, why did Evil need a reason? Was it not an end unto itself? \n\nAll at once the close confines of her makeshift cocoon turned from comforting to coffinlike. Leah sprang up. She could not abide another moment in the room until her nerves had settled. \n\nHer tiny chamber had once been the butter-pantry. When Brother Ezekiel and Sarah had taken her in to cook and clean for them, they'd generously given it to her as her own room. Her cot was narrow, but she needed no more. The wardrobe was a scarred old hulk, but Leah had few clothes to store within it. \n\nShe dashed chilly water from the washstand onto her flushed face. Her hair had come partly undone from its nightly plait, wispy strands now stuck to her brow. Donning her heaviest mantle and warmest shoes, she went into the kitchen.\n\nAll here was neatness and order. The bowls were already set out for the next day's early baking. The woodbox was full. Leah knew that in only a few short hours, she would be wakened by the crow of the rooster from the henhouse out back, and her long day would begin. Much as she needed her rest, much as she knew she'd regret this by afternoon, she could not go back to bed.\n\nIt was the middle of the night, all of Dark Hollow's good and decent folk long since abed and asleep. When she moved aside the kitchen shutter, she saw no lights below the parsonage hill. The houses were touched with wan moonlight, but in no window did so much as a candle burn. \n\nLeah stepped onto the back stoop to take the air. It felt fresh and welcome, and the briskness to it helped drive the last of the night-terror from her mind. She breathed deeply and gratefully. Her head was clear now, and she knew that no devil's imp had disturbed her slumber. \n\nNo wonder, though. With all that was going on in town. Why, the trial was the talk of Dark Hollow and likely the surrounding villages as well. Some folk had even come twenty miles to hear the parson and the magistrate from Johnstown interview the witnesses. Three days now it had been going on, and they still had yet to question the accused witch herself.\n\nIt made Leah shiver to think of the way Judith Greene sat there, eyes frantic over the metal bars of the scold's bridle. The way she'd wrench at her bonds, as if freedom was worth a broken wrist or sprung shoulder. Not that she'd get far if she did free herself \u2026 the magistrate had ordered two of the stoutest men to stand guard over her. \n\nThe assembled crowd, everyone from Dark Hollow and the visitors from neighboring settlements besides, had heard many a horrifying testimony already. Mordecai Brewer's dog birthing a succession of deformed pups. The little Creekwater boy losing his eye that awful way. The curse on the Samuelson twins, making them bark and foam and run on all fours like dogs. All of Goodwife Webster's milk-jugs clabbering. The coughing sickness that killed three members of the Oakentree family. Lilah Fischer's prized possession, a silver mirror given her by her grandmother, mysteriously vanished. \n\nAll that, and more besides. Grievance upon grievance, ill upon ill, and every last one of them leading to Judith Greene's door. She had visited evils upon them, and laughed while she did. Laughed that same shrill tittering laugh. \n\nLeah wrapped her arms around herself. The night was no cooler, but she felt a deeper chill. \n\nShe might have been tempted to lay her own misfortunes at the feet of the witch, but Zachary Greene hadn't brought his bride home from Thorn River by the time of the fire that killed her parents and the four younger children. She sometimes wished that she hadn't been roused by the family dog. That she hadn't dashed out to fetch water from the well, only to find the flames too strong to get near. Even the faithful dog had perished. His bones had been found in the blackened wreck, alongside those of Leah's father. \n\nNo, Judith Greene couldn't have had anything to do with that. Nor had her name even been known in Dark Hollow when Leah's only suitor, dear Jacob, fell through the ice and drowned in Bennett's Pond. \n\nA twinkle caught Leah's eye as she was about to go back inside. There and then gone again, a flicker between the brooding trees that ringed the churchyard. \n\nAnd there, another. This one a strange green light like marshfire. \n\nA pretty color, really. Fascinating. \n\nShe wanted to go to it. \n\nWhich was silly indeed \u2026 go into the churchyard? Alone and in the very dead of night? She didn't like the place by full light of day. The six graves of her family, with their pitiful wooden markers \u2013 others had stone, and some even fine marble, but the fire had destroyed everything \u2013 never failed to bring her to tears. \n\nAll the same, her feet were moving. Carrying her across the parsonage yard, through the long dewy grass, through the flimsy gate, down the hill. \n\nNow she could see more lights, dancing and leaping. Cavorting fairies, her baby sister Emma would have said, and likely earned a swat from their father and a stern rejoinder to rid her head of such nonsense. There were no fairies, no pixies, no brownies who needed a dish of cream left out for them on saint's eves. If her father had been here, he would have scolded Leah as well. Chasing a will'o'wisp, roaming off alone in the dark. \n\nNonetheless, she was passing through the sparse stand of woods and nearing the churchyard. She could see the rising crosses of the headstones, some topped with guardian angels. The lights were brighter now, closer, and such colors as she had never seen. Brilliant blues, greens, and violets. Yellow like sunshine filtered through honeycomb. Red like some dazzling starstruck jewel.\n\nMusic, as well! Leah smiled as she heard a pipe and a fiddle. \n\nShe reached the churchyard wall, which rose to her knees in irregular blocks of mossy stone, and stopped short. \n\nThe fascination and curiosity that had lured her hither abandoned her, but in their place came a horror so paralyzing that Leah might as well have been rooted in place. \n\nThe merry tunes of pipe and fiddle turned suddenly to a cacophonous screech. The spinning, frisking lights lost their brilliance and took on muddy, bloody hues. From every corner of the churchyard, strange shapes skulked or trotted or pranced. \n\nShe saw dogs with the faces of men. Pigs that walked on their rear legs, and had full woman's breasts and hairy thatches. Men with the hindquarters and heads of goats. Rams with the bodies of men. Birds with the heads of women. \n\nAt the center of their circle, as these monstrous beasts gathered, stood a tall figure in a hooded robe. The lights swirled and spun around the hood, but cast no illumination on the features within. Clasped in its arms, the figure held a book.\n\nThis was no book like the many in the parsonage parlor, Leah knew. Its cover was a hodgepodge, as if it had been quilted together from many types of hide. Or skin. Human skin, yes, and why not? For those did look to be human teeth and fingerbones describing a symbol on the front. \n\nThe robed figure called out, its voice so low and husky that Leah could not know if it was that of a man or a woman. The beasts \u2013 nothing could be further in all creation from the fairies, sprites, and brownies that poor little Emma would have imagined \u2013 swarmed eagerly in response. They formed a procession, following the robed figure into the heart of the churchyard.\n\nLeah could see better than she wished. Her view was unobstructed, and the will seemed to have fled from her spirit. Her limbs were nerveless, her bowels watery with fear. Oh, this that she was seeing, she knew what it had to be! A coven, a black mass. Yet how could it be so when Judith Greene was kept under lock and key in the gaolhouse, awaiting the conclusion of her trial?\n\nIt came to Leah with a numbing dread that perhaps Judith was not the true witch after all. Had not Zachary Greene maintained determinedly throughout that he believed his wife innocent? The other townsfolk clucked with pity at this \u2013 what else would the man say? She likely had him enspelled from the moment they met! \u2013 but now, Leah wondered. \n\nCould it be that Judith was innocent after all? Could it be that she, Leah, a humble servant in the parson's house, was about to see the true witch unmasked? Perhaps the spells had been done in a way to make it seem that it was she \u2026\n\nThe unholy beasts curbed their unruliness, waiting expectantly as the robed figure reverently laid the book open atop the mausoleum of Isaiah Fletcher. He had been the wealthiest man in the region, the founder of Dark Hollow, and many considered his stone tomb to be a final gesture of the extravagance that had characterized his life. Ivy grew in clutching fingers up its sides, and the corners of the flat slab were rounded by the years. \n\nSpreading both hands over the open pages, the witch \u2013 Leah had no doubt \u2013 commenced a chant. It might have been Latin. The parson and his sister, educated both, spoke the ancient tongue. Leah was familiar with the sound of it. Yet this sounded older, somehow, and harsher. \n\nThe congregation of monstrosities responded to each pause with wordless animal noises. Some fell upon their neighbors, and Leah's heart seemed to freeze in her chest as she saw the abominable acts they performed. Males with females, yes, but males with males as well, and females with females, and whole groups of them heaving and bucking and thrashing and thrusting. \n\nOne of the pig-women broke away and ran, snorting over her shoulder at the ram-headed man in pursuit. They raced in Leah's direction, and still she could not summon the will to move. Mere yards from where she stood in terror, the ram-man seized the pig-woman and threw her to the earth. He knelt looming over her, holding her legs wide, and drove the naked prong of his erect member into her loins. The pig-woman squealed in what sounded to Leah like utter agony. The wet slapping of their union made Leah's stomach roll again. \n\nBeyond them, with a cry and a flourish, the figure who had been reading from the book flung away the concealing robe. A nude, white-skinned body was revealed, a woman, slim of waist but lush of breast and hip. Her back was to Leah. A pagan flood of wild unbound hair reached to the crest of her buttocks. It was some dark color, brown or black, impossible to tell anything by moonlight except that it was not blonde. \n\nHer head was thrown back in abandon as her arms reached to the sky. She undulated like a serpent, swaying in place as her voice rose in a throaty song. Though she could not understand the words, the melody stirred something in Leah. \n\nSomething not unlike the way she'd felt the one time she had permitted Jacob to kiss her. The very day he'd announced his wish to wed with her, that had been. She had wept, because he was so handsome and so kind, not caring that she owned little else but the very clothes on her back. He loved her, he said, and he'd kissed her to prove it. \n\nHis kiss had turned her entire body weak and fluttery, making her aware of parts that she usually ignored. The memory of it had made sleep elude her far into the hours of the night, as she'd lain restless and awake with a curiously unfulfilled yearning. \n\nThat feeling rushed in upon her again now, but it was much stronger, and much darker. Somehow, Jacob's kiss had been clean and honest. This sensation, which peaked her sore nipples with a mingled pain-pleasure and made her loins turn damply warm, was not. Yet it pulled at her, dredging up desires that she only partly understood. \n\nShe took a step closer. The ram-headed man and the pig-woman had concluded their coupling and returned to the others. Leah could see a heap of them, joined in ways that looked impossible and unnatural. \n\nThe churchyard fence blocked her way. She wanted to scramble over it, but her legs still felt clumsy and wooden as stilts. \n\nThe witch's voice soared to a piercing ululation. At the peak of it, a new figure emerged from the concealment of the trees and approached her. Like she had been, this new arrival was shrouded from view in a long sweeping garment. \n\nLeah sensed that the newcomer was male. Perhaps it was the height \u2013 he towered over the witch \u2013 or the breadth of shoulder, or the stride. \n\nA second man, garbed in a long night-shirt and cap, appeared as well. He walked toward the witch as one in a trance. The moonlight fell full upon his face, and Leah recognized him. He had been a frequent caller at the parsonage in days past. \n\nThe witch turned, finally affording Leah a good look at her as well. Again, recognition, in the dim part of her mind that could still think. The rest of her was riveted as the witch hopped nimbly atop the stone slab of Isaiah Fletcher's tomb. \n\nThe man in the night-shirt and the tall one in the cowl moved up on either end of the mausoleum. The capering beasts danced around them in a ring. \n\nWhat they did next was \u2026 obscenity.\n\n**\n\n\"Where is she, that lazy girl?\" Ezekiel asked, scowling up from his Bible. \"I've no tea as of yet, nor any sign of breakfast.\"\n\nSarah Parsons set down her needlework. \"I shall rouse her, brother.\"\n\nHe harrumphed, and returned to the good Book. She supposed that in light of what the day would hold, he must be reading that which pertained to witches, and how they should not be suffered to live. It was the mood of the town, and Sarah did not doubt that before much longer, one Goodwife Judith Greene would be hanging from a gallows and her body burned to ashes.\n\nHow hideous a death that would be \u2026 the slow strangling of the noose, and the knowledge that the pyre awaiting would only be the precursor of the fires of Hell.\n\nShe shook off those horrible thoughts and went into the kitchen. Leah had not wakened them this morning as was usual. Nor had she stoked the fire. It had nearly gone out. Sarah knelt and coaxed a lick of flame from the embers, then added wood until she had a hearty blaze.\n\nSuch as the one which would consume the mortal flesh of Judith Greene, tomorrow or the next day.\n\nA shudder twisted through her. Pushing the image aside again, she set the kettle on the stove and went to the doorway that gave onto the former butter pantry. She heard rustling and murmuring. It sounded as though Leah were in the thrall of some dream.",
        "The sight that met her eyes was nothing of the sort. Oh, Leah was abed, but far from sleeping. Far from dreaming. She was as naked as a newborn, her clothes a muddy heap in the center of the floor. Her knees were raised, her feet planted wide, and both hands were rubbing busily between her thighs.\n\n\"Leah!\" gasped Sarah. She hastily looked away, but from the corner of her eye could still see Leah's bare skin, and the fingers, slick and shining, as they plunged in and out of the pink-lipped orifice crowned with fleecy yellow curls. \n\n\"Mistress Sarah,\" Leah moaned. \"Help me, please, help me, I cannot stop!\"\n\n\"What are you doing?\" Sarah covered her eyes. \n\n\"I \u2026 oh! \u2026 I \u2026 need it \u2026 I need to \u2026 oh!\" \n\nLeah's hips rose from the cot. Her thighs parted wider, making the opening between them gape like a hungry mouth. Sarah was staring at this spectacle despite herself, amazed. Leah seemed to be circling her fingers over a little nub of flesh that poked up like the bud of a rose. \n\nAll at once, a series of tremors wracked her body. Her thighs and belly rippled from the force of it. She arched up higher, until her back was a bow, then sank down with a mewling whimper. Her toes twitched and curled. Her head lolled. \n\n\"Leah?\" Sarah asked. \n\nThe girl's eyes drifted lazily open. They were different somehow. Older, wiser. More knowledgeable by far than Sarah remembered seeing them just last night after supper. Thus might Eve have looked after biting of the Apple, she thought. Leah had always been pretty, pretty enough that Jacob Woodbine had courted her despite her lack of family, education and fortune. \n\nPretty, yes, in a fresh-faced innocent way. No longer. She had attained a beauty that would forever be beyond the reach of plain Sarah Parsons, but it was a beauty with a sultry cost. \n\nHowever, it vanished in an instant as Leah's expression turned to one tormented with guilt and despair. Tears poured down her cheeks. She rolled into a ball, trying her best to hide her shameful nakedness. \n\n\"Mistress Sarah, I'm so sorry, so sorry!\" she wept. \n\n\"My goodness, Leah.\" Sarah was at a loss for words. \n\n\"I couldn't help it. How I tried! It was what I saw \u2026 the awful things I saw \u2026\"\n\nSarah picked up Leah's blanket from the floor and draped it over her. \"Whatever are you talking about?\"\n\nLeah shot a fearful look toward the kitchen. Sarah interpreted it. \n\n\"My brother the parson is in the dining room. Waiting for his tea. The kettle's not yet a'boil.\"\n\n\"I've failed in my duties.\"\n\n\"Never mind that. What is all this, Leah? What did you see? What could make you do such a thing?\"\n\nSitting up, the blanket wrapped around herself, Leah haltingly told Sarah how she'd awakened in the night to find a laughing imp of some sort perched upon her chest. And how, after it had seemingly disappeared, she had stepped out for a breath and been drawn to strange lights in the churchyard. \n\n\"I saw the witch there,\" Leah said. Her chin was quivering, and she was whiter than milk. \"Two men joined her. Or so I thought at first, that they the both of them were men.\"\n\n\"You saw the witch?\" Sarah instinctively crossed herself. \"Was it \u2026 was it her?\"\n\nLeah nodded. Neither of them dared say the name. \"Her, yes, yes Mistress Sarah, it was. And her husband was one of those with her.\"\n\nA pang struck at Sarah's heart. \"Zachary. She has bewitched him, then. I feared it was so. You know, Leah, he used to visit here quite often. Before he met her. I even thought that he might \u2026 well, let it be of no matter.\"\n\nInside, though, it was of great matter indeed. Zachary Greene had been one of the only men in Dark Hollow to show any interest in the parson's homely sister. Until he had gone to market in Thorn River, and come back with tales of the lovely Judith. He'd gone back as often as he could manage it, courting her, and finally brought her home as his bride.\n\n\"What did they do?\" she asked now.\n\nLeah shook her head. \"I cannot even speak of it!\"\n\n\"You must! You'll have to testify today before the magistrate.\"\n\n\"Please, no!\" She quailed, and although Sarah wouldn't have thought it possible, went even whiter. \n\nShe sat beside her to soothe her. \"Don't you see, Leah, it's proof. You saw her. You must say so.\"\n\n\"But the things they did, oh, the terrible and ungodly things!\" Leah broke down in a renewed fit of weeping. \"And they got into my mind like worms, burrowing, and it was as though I wasn't myself any more! I had to do what you saw me doing, Mistress Sarah. I couldn't make myself stop.\"\n\n\"What did you see?\" Sarah urged. \n\n\"She \u2026 she was naked,\" Leah said. \"All around her were beasts of hellspawn. Imps, animals mixed with men and women, the most appalling creatures. It was \u2026\"\n\n\"A devil's orgy?\"\n\n\"Yes!\" The chalkiness of Leah's complexion was turning rosy again. Her tears had dried up. \"A devil's orgy, bodies joined together in every conceivable way. Loins and mouths and \u2026\" \n\nHer breath was quicker, panting. The blanket slipped from one creamy, rounded shoulder. \n\n\"And then,\" Leah went on, gazing at the wall as if she could see through it to re-witness the events she was describing. \"Oh, and then the witch got up atop the tomb. On her hands and knees like a dog, like a ewe. Goodman Greene stood before her. He raised up his night-shirt. She sank onto her elbows --\"\n\n\"You saw Zachary Greene unclad?\" asked Sarah, wide-eyed.\n\n\"The other one was behind her,\" Leah said. \"Still cloaked, and cowled. He \u2026\"\n\n\"What? Leah? Are you all right?\"\n\nWith a longing cry, Leah turned and flung herself at Sarah. The blanket fell entirely away. Startled, Sarah leaned back, and Leah's weight bore her down on the narrow cot. Before Sarah could protest, Leah's mouth closed over hers. Her lips were wet and eager, her tongue darting.\n\n\"Mmmph!\" Sarah cried. She pushed, but Leah was pleasantly plump compared to her own thinness. \n\nLeah grasped Sarah's hand and forced it down. Sarah felt the soft tuft of hair, and then the moist heat as her fingers were engulfed. Leah's thighs trapped her hand, while Leah's own found the insignificant swells of Sarah's breasts. \n\nWith an unexpected burst of strength, Sarah freed herself. She leaped from the cot. Leah, trying to recapture her, sprawled on the floor with a groan of pain. \n\nAt once, Leah dissolved into hysterical tears again. She threw herself at Sarah's feet, begging for forgiveness. Sarah minced backward a few steps. \n\n\"'Tis the witch, the influence of the witch,\" she said. \"You must testify.\"\n\n\"I cannot,\" said Leah miserably. \"How can I tell any of this to another living soul?\"\n\n\"If you do not,\" Sarah said, \"it will haunt you the rest of your days. Only when she is dead, and you are confessed, will you be free.\"\n\n\"But to go before everyone. All the town! To sit upon the witness stand as she watches me! And to say such things!\"\n\n\"You must, Leah!\" Sarah took a deep breath, trying to rid herself of the memory of Leah's tongue in her mouth, of her fingers lost in the clasping warmth of Leah's lions. \"If we are to be rid of her, you must tell. The townsfolk will not hold you to blame. Just as I do not. They know, as do I, that evil is everywhere, and sly as a fox.\"\n\n**\n\nThe town hall was filled to capacity, with every seat taken and people standing along the walls and in the aisles. It was hot, stifling, the air drifting with motes of dust. The good folk of Dark Hollow were packed in shoulder to shoulder. Others, from nearby towns and outlying farms, crowded in among them. \n\nTobias Miller had arrived early to secure a spot in the front row. There, he'd have a clear view of the proceedings. He doubted that they would decide to strip the witch again, but if they did, he wanted to see. \n\nHis manhood shifted in his breeches at the recollection. The magistrate had ordered that Judith Greene be stripped, that they might ascertain whether she bore the traditional marks. This could not be done in private, he had said, for she might use her evil glamours to trick the minds of a few.\n\nWhat a sight she had been! Standing head-high, beautiful face almost haughty as she endured the shame. Her husband had been incensed, and nearly had to be forcibly dragged from the hall as the last article of clothing was removed. Upon very close inspection \u2013 Tobias would not normally have envied the parson and the magistrate, but he did that day as they lifted Judith's firm breasts and parted her buttocks \u2013 she was discovered to have three moles. Witch's teats, where she would suckle her unholy familiars before letting them loose to work her wicked magic. \n\nThat had, thus far, been the most thrilling part of the proceedings. Tobias had found most of the testimonies tedious or dubious by turns. He was waiting to hear more. Amos Cousins was supposed to speak today, and so was Deborah Fletcher.\n\nThe last few stragglers entered the hall. Tobias saw the parson point his sister and housemaid to a low bench, then turn to greet the magistrate. \n\nBrother Ezekiel, Tobias thought, looked the part of the handsome but unreachable man of God that the girls would secretly pine for. He knew that many of them already made up excuses to visit the parsonage. They delivered fresh-baked bread and pies, canned preserves, quilts. Far more than Brother Ezekiel and Sister Sarah could ever hope to use. \n\nIt really was a pity that the parson got all the looks of the family. He had strong features, a cleft chin, and dark hair that tumbled down on his brow when he was intense about his preaching. His stormy blue eyes, according to Tobias' sister-in-law, made all the ladies' hearts gallop. \n\nWhat Tobias would have given to make any lady's heart gallop! Or even just to canter. He knew that his face looked like someone had hacked it out of an oak plank, and his one wandering eye was unsettling to the beholder. He had shoulders broad as a beam, and a barrel chest, and those girls he didn't put off with his homeliness were intimidated by the bulk of him. He despaired of ever getting one alone in the hayloft, let alone into the marriage bed. \n\nAnd there was the parson, wasting the gift of his handsomeness by pledging himself to God. It made no sense to Tobias, no sense at all.\n\nThey brought in the witch through the side door. The crowd, only just settled, surged to its feet. Voices rose in competing shouts and invectives. Fists waved angrily in the air. No one threw eggs or rotten vegetables, not yet. That would be saved for the ascent up the gallows stairs. \n\nJudith Greene was much the worse for wear after so many nights in the gaolhouse. Her hair hung around her in strings, her cheekbones were prominent as blades, and her plain brown dress billowed on her body like a sack. The scold's bridle, an affair of straps and bars, was locked securely around her head. A curved metal plate went into her mouth, pressing her treacherous spellcasting tongue down to prevent her speaking.\n\nShe was dirty and disheveled, stumbling along in the blindfold as the guards led her to her seat. They pushed her into it so hard that it rocked back and smacked against the wall. Her hands were bound before her belly. Her legs were tethered by a length of rope. Yet, somehow, through it all she retained a vestige of her former beauty.\n\nZachary Greene's face was a mask of misery. He might have gone to her, but his father's large, work-callused hand held him in his seat. The eyes of the senior Greene were stony. He hadn't approved of his son's choice of a bride, would have sooner seen Zachary wed to the parson's sister. A fair woman, Greene was wont to say over mugs of ale, brings foul news. Better to take a plain and dutiful one to wife. \n\nThe magistrate strode to the head of the hall. His powdered wig rested squarely on his head. His black robe flared about him like the wings of some dark carrion bird. He was tall and thin, with sun-darkened skin stretched too taut over angular bones. Steel-grey and piercing were his eyes, and his mouth was a tight drawstring. He took his place upon the high bench and rapped smartly with a gavel. \n\nTobias saw Judith Greene flinch with every sharp report of the wood on wood. Her shoulders shook. He wondered if they would strip her again to hang her. Would the gaolers do that? What else did they do, when the hour was late and they were alone with their charge in the silent gaolhouse?\n\nOh, it was absurd, he knew. Neither of the gaolers would lay a finger on an accused witch, no matter how shapely she might be. They were too afraid for that. Tobias wouldn't have been.\n\nHe grinned to himself, thinking of what he would do were he gaoler. There were ways to make the dank and drafty cell more comfortable, for a price. Surely a witch who'd already consigned her soul to the Devil would hardly be concerned about the modesty of her body. \n\nIt would be dangerous to remove the bridle, of course. That was a shame, for Tobias had long admired Judith Greene's lush mouth. Nor should her hands be freed, lest she make a hex-sign at him. But he could have at her ripe breasts to his heart's content, or bend her over and plough her from the rear \u2026\n\nThe discomfort in his breeches continued to grow. Tobias shifted on the hard wooden bench and hoped that no one would notice. Their attention was fixed on the witch and the magistrate as the trial was called to order. \n\nAmos Cousins was summoned. A portly, florid man with a balding pate and a propensity to sweat, he stammered out his tale under the magistrate's inquisition. He had, he claimed, paid a call at the Greene house to borrow a scythe from Zachary. Arriving unannounced, he went round to the back. There, through the kitchen window, he beheld the accused down on all fours like an animal, hunched over a freshly-killed hare.\n\n\"Eating it alive, she was,\" he told the breathless assembly. \"Not skinned, neither, but the fur all caught in her teeth and the blood splashed all around.\"\n\n\"And did she see you?\" asked the magistrate.\n\nWith a nervous gulp, Amos nodded. \"Looked up, she did, and saw me. She hissed. Like a cat, she hissed! And laughed. A devil's laugh if ever there was one. High, it was, and shrill, like a rusted nail being pulled from a plank. Sent shivers down me, it did.\"\n\n\"What happened next?\"\n\n\"She cast the hare aside \u2013 I saw how its guts were eaten out, and its eyes gone \u2013 and stood up. She came to the window. It was like she wasn't mindful at all that she was drenched with blood and bits of fur. To the window, and there she smiled at me. Gruesome, it was!\"\n\n\"What did you do?\" \n\n\"I wanted to run, I did,\" Amos said. \"But my legs would not seem to budge from that spot. And she, the witch, she raised her skirt. She turned her backside to the window and raised her skirt.\"\n\nTobias wasn't the only one to lean forward intently. In his imagination, he saw Judith lifting the hem of her skirt higher, past her dimpled knees, up her thighs.\n\n\"Bent over, she did, and \u2026\" Amos faltered. His gaze flicked to his wife, who sat with a scowl that would have curdled milk. The rest came out in a rush. \"And pushed out her back end at me. She laughed over her shoulder, that same high, terrible laugh. Her chin still all running with hare's blood. She told me that if I wanted, I could climb in and \u2026 and stick it to her, your magistrate sir.\"\n\nUproar, not the least of which was Zachary Greene bolting to his feet and shouting that Amos was a liar, a damnable liar.\n\n\"Order! I will have order,\" said the magistrate. \"Goodman Cousins, what happened then?\"\n\n\"She said I shouldn't tell anyone what I'd seen. Or she'd put the hex on me.\" His voice quavered. \"Said she'd turn my innards to black rot, and make my skin peel off in great infected welts.\"\n\nTobias ground his teeth impatiently. He wanted to hear more of how her backside had looked. All bent over like that, surely Amos must have been able to see right up. Tobias only had the word of his friends for what it looked like, that dark and mysterious woman-place, but he found he could see it quite vividly in his mind. If he'd been there instead of cowardly Amos, he would have been through that window quicker than Jack, and taking what she offered. It might mean the annihilation of his soul, but \u2026\n\n\"Did you go into the house?\" the magistrate asked forbiddingly. \n\n\"No! No, by God! I shut my eyes and that let me move my legs. I forgot all about the scythe, I did, and was down the road and gone before she could chase after.\"\n\n\"It's lies, I tell you, lies!\" bellowed Zachary Greene. \"My wife is no witch! Someone is causing you to believe these things! A glamour, as you said --\"\n\n\"Be still, man!\" Goodman Miller raised a menacing fist at Zachary. \n\n\"Thank you, Goodman Cousins,\" the magistrate said, acting aloof and above the disturbance. He glanced at the parson. \"Brother Ezekiel, who shall testify next?\"\n\n\"But am I safe, sir?\" Amos asked. \"She said she'd put a hex on me, she did!\"\n\n\"Rest assured, Goodman Cousins, that the witch is in no way able to act on her threats. She is quite powerless at the moment. I promise you.\"\n\nNot entirely mollified, Amos stepped down. He gave both Greenes as wide a berth as the hall allowed, and resumed his seat beside his fuming wife. She gave him a look filled with anger and disgust, then snorted and turned her head away as if she'd expected no better.\n\n\"Mistress Deborah Fletcher,\" Brother Ezekiel said.\n\nTobias forgot his disappointment over Amos' tale and craned his neck as Deborah came forth. She wore a demure dark blue dress that could not hide the robust young curves of her body. Golden ringlets dangled becomingly from under her white cap, framing her sweet face with its upturned little nose and dainty mouth. \n\nHe was not the only onlooker to murmur appreciatively. Deborah was a beauty, but more, she was her wealthy father's only child. Any man who married Deborah would be well-set for the rest of his life. They all knew this, and so did she, and the combination of her choosiness and her father's indulgence saw her well past the usual age for marriage. \n\nToday, however, Deborah was pensive and pale. There was a peculiar quality to her mood, a jumping-at-shadows that was unlike her usual vivacity. She had chewed her lower lip ragged, and her hands were marked with scratches as if she'd clawed at them. \n\nShe sat in the witness chair, ankles crossed. Her breasts rose and fell with rapid breaths. Tobias couldn't keep from staring at them, and wondering how full and soft and white they must be. \n\nThe parson calmed her with a few friendly words. Deborah's smile was the ghost of its normal bright self, but her nerves seemed steadied enough to go on. The magistrate requested \u2013 in a rather kindly way, suggesting that even he was not immune to her charms \u2013 that she tell them of her interaction with the witch. \n\n\"It was after the sewing circle,\" Deborah said. Her throat moved as she swallowed. \"At the Greene house. I stayed late to sort thread, and she must have thought that I'd gone as well. When I came into the kitchen, meaning to ask if she wanted any more help, I saw her. She had a \u2026 a creature on her lap, and she was suckling it like a babe in arms.\"\n\n\"Describe this creature,\" commanded the magistrate over the din of reaction.\n\n\"It was small, and covered in hair. It had claws.\"\n\nTobias saw the parson's maidservant start and gasp, and Sarah Parsons take hold of her to mutter reassuringly. \n\n\"Its head was like that of a \u2026 a wizened old man \u2026\" Deborah's words emerged with difficulty, and her head began to jerk in spasmodic little twitches. \"Wrinkled \u2026 like a dried apple. She \u2026 she laughed \u2026 as she gave it suck. A \u2026 a shrill laugh \u2026 awful \u2026\"\n\nAbruptly, she flung back her head and pealed a shriek to the rafters. Half the crowd screamed in response, jumping up. \n\nDeborah fell from her chair to the floor. She was rolling and thrashing on the boards, making inarticulate gobbling noises. ",
        "\"This is the work of the Devil!\" the parson cried, leveling his finger at Judith Greene. \"She's put a hex on this girl!\"\n\n\"Witch!\" roared the crowd. \n\nTobias, meanwhile, could not wrest his gaze from Deborah. Her skirt had come well up her legs, which kicked and scissored. Her hands clawed madly, ripping off her cap, tearing at her clothes. She shrieked again, and began spewing obscenities.\n\n\"Fuck! Dirty fucking cocksucker! Jab my cunt!\"\n\nThe uproar became bedlam. Several women fainted. Panicked people charged for the doors. Daniel Fletcher struggled against the frantic mass, trying to reach his daughter. The magistrate hammered futilely for order. The parson dashed toward Deborah, but recoiled as she yanked her skirt to her waist. \n\n\"She is possessed of demons!\" he wailed, ashen. \n\n\"The witch, it is the work of the witch!\" someone called.\n\n\"Filthy pig-fucking bungholes!\" Deborah spat. She tore open her undergarments, exposing a honey-colored thatch and a red, inflamed opening. Her buttocks beat against the boards as she bumped her lower body up and down. \"Fuck it, fuck it, pig-slut-devil-whore, stuff my cunt with your dog's prick! Shit-eaters! Ass-licking bastards!\"\n\nIt was there, right there in front of him, only a few feet away! He could see everything. The way it glistened in the lantern-light, the way it seemed to open and close like a hungry mouth as her hips bucked, bucked. \n\nTobias lurched forward. His wandering eye bulged. His tongue slavered over his thick lips. \"Help me!\" he shouted. \"Help me, the witch, she's controlling me! She's in my head! Ah, for the love of mercy, help me!\"\n\nBrother Ezekiel, grimly resolved, made another move toward Deborah. Tobias drove his fist into the parson's stomach, doubling him over.\n\n\"No, oh, no!\" Tobias howled. \"Parson, no, I didn't mean \u2026 I can't stop!\"\n\nDeborah's frenzied gaze fell hot and smoking upon him. Normally, she wouldn't spare him so much as a greeting. Her hands flew down, not to cover, but to part her hairy nether lips wide. \"Fucking horse-cock son of a whore!\"\n\n\"Someone, help me!\" Tobias yanked at his breeches. Wooden buttons popped and skittered. \n\nMore women screamed and fainted as he hauled his prodigious, plum-headed organ into view. In Deborah's eyes, he saw sudden fright, sudden awareness, but by then it was far, far too late. His knees hit the floorboards with a sound like thunder. \n\n\"No!\" That was Daniel Fletcher, fighting to get to them, but he tripped and crashed headlong. He only just raised his head in time to witness as Tobias dropped onto Deborah's body.\n\nShe was wonderfully warm and springy-soft beneath him. Tobias held the base of his hefty prick with one hand and groped the other along her furred lips. He could smell her, feel her wetness, and his fingers sank into a place, the place. He set his cockhead there and thrust it in as hard as he could.\n\nDeborah screeched, and he felt some blockage give way inside. Then he was buried deep, buried all the way. She was scratching at him, striking his face, but he barely felt the blows. One of her breasts was bare \u2013 as white, as full, as soft as he had suspected \u2013 and he stuffed the large, pale-pink nipple and as much of the surrounding flesh as he could into his mouth. He pumped up and down, in and out, overwhelmed by the delicious clasping slide and give of her. \n\nHe knew he couldn't last long, not like this, his first time ever to be with a woman. And not just any woman! The idea that he was doing this to Deborah Fletcher, in front of her father and half the town, spurred Tobias in ever-greater peaks of excitement. \n\n\"No \u2026 unh \u2026 oh!\" Deborah groaned. But she quit gouging at him with her nails, and swung up her heels until they crossed at the small of his back. \"Oh, yes!\"\n\n\"Stop him!\" Daniel Fletcher begged, stretching out a pleading hand. \n\n\"It's the witch's doing!\" a woman's voice shrilled. \"Hellspawned wretch, release them!\"\n\nTobias pounded harder into Deborah. She was raking at his shoulders now, and jerking up to meet each downward thrust. He went faster, faster, and then his loins seemed to explode. His seed gushed out of him, filling her, overflowing her, running in sticky streams down the crack of her bottom as he continued plunging his softening length into her. She writhed against him, snarling that he had better not stop, it had better not be over. \n\nBut it was, for he slipped limply out and lay atop her, breathing heavily. Deborah cursed him, slapped him. Moments later, many strong pairs of hands dragged him off of her. He was flung, stumbling on weakened legs with his breeches around his ankles, to collide with a bench. \n\n**\n\nA semblance of order was finally restored to the town hall once a very stunned and chastened Deborah Fletcher was led away by her equally stunned father. She was to be confined to bed, strapped down if necessary, until they were sure that the witch's influence had departed her body. \n\nThrough it all, Judith Greene had remained in her seat with her hands bound, her legs tethered, her eyes blindfolded, and her mouth locked shut by the leather and steel of the scold's bridle. \n\nLeah could not believe the raw boldness of the witch. Bad enough, the things she had done, but to cause something like this! Nearly everyone in Dark Hollow had witnessed Deborah's fit of hysterical possession, seen the daughter of the wealthiest man in town bare her nethers to the world. Half of them had been helpless onlookers as the evil found poor Tobias and compelled him into ravaging her. A dozen people had been injured in the chaos, three of them seriously. \n\n\"Why did she do that?\" Leah asked in a whisper to Sarah Parsons. \"She must have known it would surely seal her fate.\"\n\nSarah, who had sat motionless and wide-eyed throughout, exhaled shakily. \"Perhaps she already knows she's doomed, and has nothing more to lose.\"\n\n\"But they'll hang her for certain!\"\n\n\"They would have anyway.\"\n\n\"Such vile deeds.\" Leah would not admit, to Sarah least of all, that the scene had caused a resurgence of lewd desire in her own loins. She blushed hotly. The memory of the previous night \u2013 and worse, that morning! \u2013 was still very near in her mind. \n\n\"It'll be the ruin of Deborah,\" Sarah said.\n\n\"It wasn't her fault,\" Leah said. \"She was under a witch-spell!\"\n\n\"That doesn't matter.\" Sarah shook her head and pursed her thin lips sadly. \"She's no virgin now, and the entire town knows it. Her father will never find her a decent husband. She'll probably have to marry Tobias. Imagine that! The prettiest, wealthiest girl in town having to marry the ugly stablehand!\"\n\n\"Well, at least this means I needn't testify.\"\n\nSarah clutched her hand. \"No, Leah, you must!\"\n\n\"Why? Haven't they enough evidence against her? Wasn't what just happened here proof enough?\"\n\n\"They must know all.\"\n\n\"All?\" Leah echoed faintly. \n\n\"All that you saw,\" Sarah amended soothingly. \"I \u2026 I told you, I don't hold you to blame for this morning. You weren't yourself.\"\n\nRelief washed over Leah like balm. She would have died on the spot if she had to confess to the parson and the magistrate how Sarah had caught her rubbing herself, and how she'd even tried to force Sarah to join in. \n\n\"Thank you.\"\n\n\"The rest, though, you must tell them. Last night in the churchyard. How you saw her, and what she did.\"\n\n\"Not today, of course.\"\n\n\"Yes, today! Now!\"\n\n\"With everyone in such a state?\" Leah looked around at the citizens of Dark Hollow and the neighboring towns. About half of the original crowd had returned after Tobias was carted away in disgrace. \"It might start a riot, Sarah. Couldn't I wait?\"\n\nSarah thought, then smiled. \"I have it! You need only tell your tale to my brother and the magistrate. They will decide if it should be said to the whole town. And after all this, I rather think that they will say it should not.\"\n\nShe rose, and pulled Leah with her. \n\n\"Now?\" Leah quailed.\n\n\"Yes.\"\n\nAs they approached the front of the nearly empty hall, they came face to face with Zachary Greene. He was haggard and defeated, shoulders slumped. Behind him, the gaolers were none-too-gently escorting his wife back to her rat-infested cell. The witch's body quivered. Her blindfold was soaked through with tears. Her posture was one of utter hopelessness and despair.\n\n\"Goodman Greene,\" Sarah said, a trifle coldly. \n\nLeah, thinking of what she had seen this man do in the churchyard, could not look him in the eye. He had not seemed nearly so abject and downcast then, caught up in the dark revelry. \n\n\"Oh, Sarah, what am I to do?\" he asked. \"I know that my Judith is innocent of these crimes. My heart tells me so!\"\n\n\"But Zachary, you've hardly known her a year. Why ever did you marry her so suddenly? She must have bewitched you.\"\n\n\"No! No, never that. I fell in love, that's all.\" He sighed. \"I cannot explain it, Sarah. From the moment I saw her, I knew that she was the one.\"\n\n\"I don't think that he knows,\" Leah whispered. \"He does not remember.\"\n\n\"Remember what?\"\n\n\"Where you were last night,\" Sarah said.\n\n\"Home \u2026 in bed \u2026 asleep.\" Zachary Greene was a study in earnest perplexity. \n\n\"He doesn't know,\" Leah said. She felt a pang of sympathy for the man. \n\nSarah sniffed. \"Whether he's in this knowingly and willingly or not, it doesn't matter. He was the one to go off and marry a stranger. If he'd found a nice local girl as his bride, none of this would have happened. Now, please step aside, Zachary. Leah must testify. I daresay hers will be the last evidence to fully condemn your precious Judith.\"\n\nThey swept past the bewildered Greene, leaving him looking after them. Leah's mouth went dry as she saw the tall, black-garbed figure of the magistrate ahead. His wig rested perfectly in place, and he looked aloof, far above the petty insanity that had so recently gone on in this hall. \n\nBrother Ezekiel was not in such a flawless state. He sported rumpled and dirty clothing from the panic and the scuffle. The parson yet held himself gingerly, unable to straighten to his full height after the brutal punch from Tobias. \n\nLeah wrung her hands. Sarah left her side for a moment, long enough to speak a few hurried words to both men. \n\n\"This way, Leah,\" Brother Ezekiel ordered when his sister had delivered her urgent message. He led her into the chamber behind the magistrate's bench. Sarah gave her an encouraging nod and a wave as she went.\n\nIt was a small parlor or sitting room, windowless, homey. The parson sat down, rubbing the spot where Tobias had struck him. \n\n\"Please be quick about this, Leah,\" he said. His tone suggested that he doubted a lowly servant could have anything useful to say, and that he was only allowing this to humor his sister. \"I will be glad to have this entire unpleasant matter behind us.\"\n\n\"Yes, Brother Ezekiel.\"\n\nThe door opened to admit the magistrate. He snatched a deep breath, blew it out, and fixed bright hawk's eyes on Leah. \n\n\"So, then. This is your maidservant, my good man?\"\n\n\"She's called Leah,\" the parson said. \n\n\"Leah.\" The magistrate's smile was toothy and yellow. \"I understand you have something to tell us. Something you witnessed last night.\"\n\n\"I do, sir.\"\n\n\"Very well.\"\n\nHaltingly, she related her tale. She found herself speaking more and more softly as it progressed, fear clambering with small icy prickles up her spine. \n\n\"And then \u2026 she got upon the tomb. On all fours. Laughing. It was the same as the imp's laugh. Like fingernails scraped over slate. Goodman Greene stood before her with his night-shift lifted, so that she could \u2026 that he could \u2026 insert himself \u2026 into her mouth.\"\n\nThe magistrate's dark brows rose. \"Insert himself?\"\n\n\"His \u2026 his manhood, sir.\" Leah stared at the floor, vehemently denying the warm throb in her lower belly. \n\n\"Into her mouth, you say.\" The magistrate frowned, stroking his chin. \"How tall is this tomb?\"\n\n\"It rises some three feet from the earth,\" Brother Ezekiel said. \"Made of stone, with a flat slab for its top.\"\n\n\"How could that be? This bench is three feet in height. Yet how, if a woman were to kneel upon it, could she receive a man's member in that way? Leah, are you quite sure?\"\n\n\"I am only telling you that which I saw, sir.\"\n\n\"Hmm.\" He paced to and fro, black robes flaring. \"Let us see.\"\n\nWith a swift economy of motion, he moved the bench from the wall to the center of the room. \n\n\"Magistrate?\" asked the parson.\n\n\"A bit of a test.\" His hawk's eyes caught and held Leah's. \"If you would be so kind as to show us precisely how she was positioned?\"\n\n\"Oh, but sir \u2026\"\n\n\"We must understand if we are to judge fairly,\" he said. \n\n\"Go on, Leah,\" Brother Ezekiel said. \"Let us finish this and be done.\"\n\nSlowly, she got up and went to the bench. \"The witch knelt upon it like so, on knees and elbows.\" \n\n\"I see. Brother Ezekiel, you're of a height with Goodman Greene. Stand before her as she described. I must be certain we have the right of this.\"\n\nClearly astonished, the parson moved in front of Leah. His belt was at a level with her eyes. He cleared his throat uncomfortably. \"Well, magistrate?\"\n\n\"A moment. Leah, continue.\"\n\n\"Well, sir \u2026 while she was \u2026 doing what she did, the other man approached her from behind. He was very tall, and I did not recognize him.\" Leah shuddered. \"But then, he threw off his cloak.\"\n\n\"And?\" he prompted. \n\n\"He was not a man at all,\" she whimpered. \"His legs bent back like those of a goat or a dog, covered in black fur. His skin was scarlet-red. He had \u2026 he had an enormous \u2026 it wasn't \u2026 it was red and knobbed and as long as a man's arm! I saw horns on his head and eyes that glowed, and he crouched down straddling the tomb and \u2026 and \u2026 drove that hideous thing into the witch as she knelt there.\"\n\nThe parson blinked and looked faint. The magistrate stroked thoughtfully at his chin again.\n\n\"You believe you saw the Devil, then, Leah?\"\n\nShe nodded. \n\n\"And that he took Judith Greene from the rear as she used her mouth on her husband?\"\n\nFighting not to cry, Leah nodded again.\n\n\"I'm still not certain I understand. The act you describe does not sound possible. Here \u2026 parson, if you would \u2026\"\n\nLeah jumped as a cool draft hit the backs of her thighs. The magistrate was lifting her skirt in folds and crumples, bunching it on her back. \"What are you \u2013\"\n\n\"Hush. Parson, oblige me by sticking your cock in her mouth, would you?\"\n\n\"I beg your pardon?\" Brother Ezekiel sounded as shocked by the words as was Leah.\n\n\"We must know if what she claims to have seen was real. Do it, man, or the witch may go free.\"\n\nConfusion was writ large on his face, and his motions were like one caught in a strange dream, but the parson began undressing. Leah, stricken with dismayed fright, tried to get off the bench. The magistrate held her in place. She heard his chuckle, felt his hot breath on her cheek.\n\n\"Steady, there,\" he said in a low voice. \"We must know if you speak the truth.\"\n\n\"I do, I swear it!\"\n\n\"Open your pretty mouth,\" he instructed. \n\nThe parson, his eyes fogged as if in a waking sleep, stepped toward her with his manhood held out like an offering. It was stiff, a fleshy pole springing from a mat of wiry black hair. The tip protruded a bit from beneath the foreskin. \n\nLeah wanted to scream and run, but a strange lassitude settled over her. She did not feel dazed, but neither could she summon the strength to resist. Instead, as the parson's organ bumped urgently at her lips, she opened them. \n\n\"Do what you saw the witch do,\" said the magistrate. He had released her, and was somewhere behind her. \n\nUnable not to obey, Leah drew the parson into her mouth. She tasted the saltiness of him, felt him twitch, heard him stifle an unbelieving groan. \n\n\"Suck him, yes, very nice,\" the magistrate said. \"And I'll \u2026\"\n\nSomething cold and sharp slid along Leah's backside, slitting open her undergarments so that the pieces fell away and left her bottom bare. She felt the brush of hot fur as the magistrate swung his leg over the bench, straddling it. \n\nFur?\n\nShe saw the terror in the parson's glassy eyes. He was staring over and beyond her, and his face had gone slack. The involuntary rocking of his lower body, moving his erection ever-so-slightly back and forth, kept on. She wanted to spit him out and turn around to see, but she could not move. Only her mouth, as if it had an eager life of its own, kept up sucking and slurping and rolling her tongue around the rigid shaft. \n\n\"And then it was something like this?\" asked the magistrate. Yet not the magistrate's voice. Darker, ominous, laced with deadly menace.\n\nLeah's skin shrank in on itself, but she remained immobilized. Not even when what felt like a curved and bumpy bar of iron hot from the forge touched her defenseless buttocks could she cringe away. This bar, this rod, rubbed up and down in the crease of her bottom. It moved lower, and when it nudged her nether lips, Leah moaned helplessly.\n\nIt parted her, opened her, eased slowly in. The girth of it stretched her, made her feel as if her insides were being driven up into her chest. The slight pain as her virginity tore away was lost in the aching fullness that the magistrate slowly pushed deep.\n\nBrother Ezekiel, for all that his expression was one of absolute horror, thrust himself in quicker strokes into Leah's mouth. His hands gripped the sides of her head, preventing her from turning even had she been able to move of her own accord. She could not see what was behind her, and did not wish to. Enough that she could feel it, the searing length of him nearly splitting her yet moving with surprising gentleness.\n\nA sweeping sensation very like that she'd experienced earlier with Sarah was now taking hold, gathering strength. With a smoky laugh, the magistrate increased the speed of his thrusts. Clawed fingers settled on her hips, hurting, pinprick wounds surrounded by dusky purple bruises. It did not matter \u2026 the pain only heightened the incredible pleasure as what seemed a series of soft thunderclaps rolled through her. \n\nThen, although she had not yet finished telling them what she'd seen in the churchyard, the magistrate completed the act. Leaning forward over her trapped form, he released one of her hips and caught the parson by the nape of the neck. Brother Ezekiel's desperate cry was abruptly muffled, as if something was shoved into his mouth. \n\nBy craning her eyes as high as they'd go, Leah had an odd-angle view of the two of them above her. The magistrate \u2013 or the demon going by that guise \u2013 had his scarlet-skinned jaws gaping wide. A tongue that was no tongue at all, but a second male organ every bit as large, knobbed, and inhuman as the one currently filling her, protruded from the fang-lined orifice. Its end and several inches of shaft vanished between the parson's lips.\n\nThe three of them heaved and thrust as one, an ungodly creation of limbs and openings and penetrative lances of pulsing meat. Leah sucked hard on the parson's manhood as he quaked and convulsed and shot forth jets of creamy fluid down her throat. She swallowed it down in great gulps. Moments later, her innards were flooded by a molten stream from the magistrate. \n\nDimly, as from very far away, Leah heard the shrill, tittering laughter of the little imp. \n\nBrother Ezekiel reeled back, making a drowning gurgling noise. His organ popped wetly from Leah's lips. She saw a dark, noxious liquid like bile and old blood coursing in twin rivers from the corners of his mouth. \n\nThe parson fell headlong and lay in the grip of fearful spasms. His chest hitched. He clawed vainly at his neck. His back bent into an impossible bow, so that only his head and heels touched the floor. His spine made a terrible snapping sound. His manhood, still partly erect and shining with Leah's saliva, pointed at the ceiling. \n\nA single strangled word, perhaps a plea to the Lord, was the last thing he said before he collapsed in a staring, sightless heap. ",
        "**\n\n\"A visitor, witch,\" snarled one of the gaolers.\n\nJudith Greene looked up through matted strands of once silken hair. She knew this man. Her neighbor. Knew his wife, his family. They had taken dinner together. And tomorrow, without so much as a flicker of remorse, he'd kick the barrel from her feet and watch her die. \n\n\"I advised against it,\" he added. \"She says she's not afraid, though by God she should be! If not even a godly man as the parson is safe from your witchery \u2026\"\n\n\"I am no witch,\" she said. As she had said a thousand times, and would say a thousand times more, and it would avail her nothing. \n\n\"A wrong move, a wrong word, so much as a wrong look,\" the gaoler said, \"and you needn't wait for the noose. There's straw enough in that cell, one good spark and you'd burn alive. Ask me, it's what you deserve.\"\n\nShe bowed her head again, and tried to hold back the tears that wanted to flow from her eyes. Evidently having had his say, the gaoler retreated. She heard him mutter to someone, and a woman replying. New footsteps drew near. \n\n\"Judith.\"\n\nHer gaze rose to take in the sight of the parson's sister. Sarah, more severe and pallid than ever in the harsh black of mourning, stared dispassionately at her through the bars. \n\n\"I heard of your brother. The parson was a good man. I am sorry.\"\n\n\"Sorry?\" Her voice was sharp as a dagger. \"My brother, a man of the cloth, was found dead and half-naked. My maidservant, Leah, is still insensate and might never recover her wits. And you dare to tell me 'sorry' \u2026 I spit on your sorry!\"\n\n\"It was not my doing.\"\n\n\"What else but a witch's spell could have done such a thing? The magistrate says that they sounded like wild animals. By the time he could reach them, it was too late to intervene. Too late to save my brother's life, let alone his soul! You worked your dark magic upon them to prevent Leah's testimony!\"\n\n\"What must I do to prove that I am no witch?\" sobbed Judith. \"I have recited the Lord's Prayer a dozen times, I have pressed the Holy Bible to my brow \u2013\"\n\n\"Which means only that your dark master protects you,\" Sarah said. \"His favorite. His whore! You thought yourself so clever, but killing my brother and reducing Leah to a gibbering lunatic will not save you. It has only driven the last nail. You hang tomorrow, Judith. And then you burn.\"\n\nShe spun and marched out, head held high and pointed chin haughtily outthrust. As she left the gaol, and passed the gallows where a ready noose already hung, Sarah Parsons laughed.\n\nA high, shrill laugh. Like fingernails on a slate. \n\n**\n\nThe End "
    ],
    "authorname": "Sabledrake",
    "tags": [
        "accused witch",
        "tobias",
        "leah nodded",
        "leah gasped",
        "ezekiel",
        "leah mouth",
        "greene",
        "churchyard",
        "eyes leah",
        "hand leah"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-witch-of-dark-hollow"
}