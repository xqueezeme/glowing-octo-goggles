{
    "title": "Jessa Ch. 10",
    "pages": [
        "Jessa felt her hands shake and she lifted the pendant dangling between her breasts and looked at it again. There was a tiny inscription on the back; she had to step over by the window to get enough light to read it. It said \"To My Love.\" She stared out the window at the autumn sunlight bathing Paris in an early morning golden glow. Her fist curled around the pendant. Would a man, forced to take a lover solely to breed more children give that woman a pendant that said \"To My Love?\" And if Torah's father had loved her, why proclaim it in such tiny, secretive script? But what if the lover had a secret lover of her own? Torah had said she became his lover after she was sent to Renik. But if there had been true love between her and Torah's father, why did she run to Torah in her misery with Renik? And why would Torah betray his father's honor to bed his love? What if her affair with Torah had started long before Renik? What if they had been lovers when she was with his father? What if Samu and Saula were Torah's children, not brothers? Twins, even as she had been carrying. Coincidence? Jessa shook her head. She knew better. Propensity for multiple births was carried in the female line. She forced her fingers to uncurl and stared at the pendant as if it could give her answers. It seemed as if it was screaming betrayal at her. Maybe all of the anger Torah directed at her was because she wasn't Lania, and this was his way of reminding himself, every time he saw her wearing it.\n\nIn a sudden fit of her own anger, Jessa ripped the necklace from her neck, breaking the delicate chain. Immediately, she felt dismay, wondering if Torah was in the outer room, waiting for her to emerge; with the pendant about her neck. She put it back in the box and tucked his note into the pocket of her robe. She had memorized all of the instructions all ready, being gifted with excellent recall. But she didn't know when she would have access to a computer again and this was one gift she meant to hang on to.\n\nShe padded barefoot out of the bedroom and was surprised to find Jacq, seemingly waiting for her. He was busy tapping away on his phone, but looked up with a smile and put it away when he saw her. \"Torah asked me to let you know that he had to leave during the night. Drau was extremely persistent, I'm afraid.\" He said Drau's name with the same distaste that Torah and Erich seemed to have for the man. Jacq cocked an eyebrow at her. \"Did you find the gift Torah left?\"\n\nJessa nodded. \"I did. There was a lovely pendant, but I'm afraid in my clumsiness I broke the chain. I guess I'm not used to such delicate jewelry. I shall have to get it fixed.\"\n\n\"I'm sure Mia can recommend a jeweler to you. In the meantime, an apartment has been arranged and your servants arrived late last night. They will pack your things here later today. If you want to get dressed, I would be happy to take you by the apartment before I head in to work.\"\n\n\"That would be wonderful,\" Jessa agreed and hurried to dress.\n\nJacq drove her to an apartment building across the river. It looked ancient, but well-kept and there were even flowers planted in some of the window boxes which gave it a quaint look. Her apartment was on the top, third floor and when they reached it, the door was open. Jessa could hear two women chatting, though it took a while to find them. The apartment was large, much bigger than Torah's \"bachelor pad\" in Dusseldorf. The bedroom was similar to the one at the villa though not as large, with two walk in closets. There was also a guest bedroom. The large main room included space for dining and an open kitchen. Jessa suspected the old apartment building must have undergone significant remodeling, since most buildings of this vintage in old France tended to have many small rooms. Off of the large main room, there were two private offices. There were minimal furnishings, but enough to get by with easily.\n\nThe two women turned out to be Shay, an older highborn, and Raza, a young Elite close to Jessa's age. Her curiosity was peaked, as Raza was certainly of childbearing age and comely enough. Jessa couldn't help but wonder if she had fertility issues, but she wouldn't ask such a difficult question. Even her nearly boundless curiosity knew some boundaries. She found both women likable. They certainly were not put there as a security force, either to protect Jessa or to hold her captive in Paris, though to report to Torah on her behavior, she had no doubt. \n\nAs Jacq was preparing to leave, Jessa put a hand on his arm. \"Am I safe here? I mean, from Torah's enemies?\"\n\nHe smiled encouragement at her. \"Our Council factions are not so contentious as in Dusseldorf and other areas. And all field teams have been alerted to watch for elements from... less friendly factions.\n\n\"Then I can come and go as I please? Without worry, I mean.\"\n\n\"Within the occupied sector, yes. Just keep your cell phone with you and turned on. Then we can find you easily if need be.\"\n\n\"Thank you for everything.\"\n\n\"It has been my pleasure,\" he said warmly. \"You have my number and Mia's in your phone. Call us if you need anything.\"\n\nEven as he said that, his own phone rang and he put it to his ear. \"Yes. I'm still here.\" He glanced at Jessa as he listened. \"I'll let her know. Tr\u00e9s bien.\"\n\n\"They want you to come back to the hospital this afternoon. Around two. One of your servants can drive you.\"\n\n\"Did they find something wrong?\" Jessa asked, her hand instinctively going to her belly.\n\n\"No, no. The doctor just wants to check something. He will explain better than I can. Don't forget now,\" he said, with a kiss to her cheek.\n\nJessa learned that the servants had a small apartment across the hall from hers. She chatted briefly with them even as she surreptitiously looked for her laptop among the items they were unpacking. When she found it, she scurried off to one of the small office spaces where she found a serviceable desk and, in one of its drawers, instructions for how to get on the building's wireless. A short time later, Shay knocked on the door to tell her that they were going to go by the hotel to get the rest of the items left there, then shopping for groceries and would be back in time for one of them to take her to her appointment. When Jessa suggested that she could drive herself, both women looked horrified. Apparently, that was not something that proper ladies did. She had a feeling they were going to be even more shocked when she went back to running every morning, in sweats, no less. Jessa smiled at the thought, and wondered briefly if she might be able to swim in the river, though it would soon be getting too cold for such things.\n\nShe returned to her computer. It turned out that the Councilary Web was beyond frustrating. Every attempt to create search spiders or web crawlers or other bots were blocked leaving one to follow a trail of bread crumbs from one site to another, and somehow keep track of the thousands of URLs one did manage to discover. No matter, she may be na\u00efve to the ways of Tenth Circle Ladies, but this she knew. And soon, she would no longer feel like a total idiot when it came to the Council and the Circles. She was still turning up random sites, watching for patterns to the URLs or naming conventions when the servants returned and knocked on her office door, offering her some lunch. Jessa reluctantly left her computer behind and followed her stomach to the outer room. \n\nShe had barely finished the delicious, filling lunch before it was time to head for the hospital. Shay stayed at the apartment to begin on dinner while Raza drove her to the doctor appointment. Raza chatted endlessly about how much she liked Paris and its quaint atmosphere, as opposed to the more sterile feel of Dusseldorf where she had been providing services. Again, as with Charl and Menah, Jessa felt that arm's length diffidence between Elite and Tenth Circle, even though she'd only been Tenth Circle for a matter of days. She found herself hoping she could break down that barrier with Raza, who was so close to her age and upbringing. She gently steered Raza to speaking about where she had grown up in Rhine Region and threw in comparisons to her own childhood in Parvil. By the time they reached the hospital, she felt she'd actually made some progress, though the moment they left the car, Raza returned to full-on servant mode, even walking exactly two steps behind Jessa on the way in. Jessa rolled her eyes in exasperation, but she didn't want to get the girl in trouble, either. So, she didn't say anything.\n\nThe same doctor met her in the same maternity ward. Apparently, it was his base of operations, even though he was more gynecologist than obstetrician, from Jessa's understanding. She balked when he was pushing her to change into an exam gown. \"I don't understand why we need to do this again,\" she complained as he rolled the ultrasound equipment over by the exam table.\n\n\"Didn't they tell you?\" he asked impatiently.\n\n\"Tell me what?\" \n\n\"The Council has dictated that your egg be harvested, or eggs if we should be so lucky again. It will be fertilized and implanted in a woman whose ovaries are not producing. Please get changed.\"\n\n\"My egg?\" Jessa exclaimed.\n\n\"Of course your egg. We need to determine how close you are to ovulation. The gown,\" he said, waving imperiously as he left the room.\n\nJessa stared after him, unsure what she was feeling. Some other woman would be carrying her baby. That didn't seem right, somehow. But the doctor had explained the damage that could be done to the muscle wall if a fertilized egg were to implant in the bruised area. Although the risk was minimal, any risk at all was too much as far as the Council was concerned. Even more so now that she had shown a propensity for twins. And a healthy egg was too valuable to waste, apparently. She changed with great reluctance, trying to remember what was involved in harvesting eggs. Visions of very long needles were dancing in her head as she climbed onto the exam table.\n\nA short while later, after the ultrasound and a blood draw had been completed, the doctor assured her that they should be able to harvest in less than a week, and that she would have to come back daily until then. Jessa didn't even try to hide the fact that she was rolling her eyes at the thought. As she dressed, she wondered if Torah knew what was going on and how he would feel about it. Not that he could override the Council's decision, anyway. Or would even want to, she suspected. \n\nWhen she went back through the ward, Raza jumped up from the waiting area and fell into step behind her. All Jessa could think about was getting back home to her computer, though. Her initial searching had been so tantalizing, it had been almost impossible to concentrate on finding her way around first. She had bribed herself with the promise of delving deeper into the sites she had already found that evening. In fact, when they got back to the apartment, Jessa went immediately to change into comfortable clothes and headed for the office. It took both Raza and Shay to convince her to come back out a few hours later for some dinner.\n\nIt was obvious that Shay was an excellent cook, though her skills were more toward Germanic dishes, but Jessa suspected she would soon discover the subtle wonders of French cuisine. It was also obvious that it was going to take a good deal of work to break down their ingrained caste barriers if Jessa wanted any company for dinner. As soon as they had her situated at the table, they had both disappeared to their own apartment with barely warm food and the promise to return to clean up later. She knew that's what Torah would approve of, but it was damn lonely for her. Still, if he came back unexpectedly and found her being too familiar with the servants, there would be hell to pay for her and for them. Tonight, though, Jessa was only too happy to gobble her food and get back to her computer as soon as possible.\n\nWhen Jessa emerged in the wee hours of the morning, it was only because her bladder and thirst were insistent and undeniable. When she finished in the bathroom, she returned to the kitchen and found the wine bottle from her evening meal. She filled a glass and went to stand by a window looking out over the subdued, but sparkling lights of the occupied sector. Her mind was spinning with a history of the Council and Circles that had never been taught in any of her history courses. And that was just the new history of Europe. Undoubtedly what she had learned of the other continents was every bit as fallacious. She sank to the floor, her chin resting on her arm as it lay on the windowsill. It was small wonder the Circles had so little to do with even other highborn. The weight of the lies must be nearly unbearable. And what meaning did it have to be Highborn or Elite if they received the same lies that the lowborn were told. Obviously, it meant nothing more than the privilege of holding a 'job' that was less menial than those reserved for the lowborn. Oh, yes. And the fairytale hope of marrying someone of Circle status. \n\nShe thought of her father who oversaw windfarms throughout the Parvil and Switzerland Regions. He sat at a computer all day and ordered lowborn to make repairs and perform maintenance. Because he was Elite. As was she. And why? Because an ancestor had been an Olympian? Because someone in their past had a slightly higher IQ than someone else? She had just discovered that being Elite was a meaningless distinction save for the happenstance of perceived genetic advantages. Worse, she had discovered that an entire continent's social stratification strategy hinged on who received which production run of vaccine. And that was determined first by who had the money and assets to fund the research \u2013 Circles One through Four \u2013 then on who did the research and production \u2013 Circles Five through Twelve \u2013 and then on those the Council \u2013 consisting primarily of members of the first four Circles \u2013 determined were genetically advantaged enough to receive the precious limited quantities of vaccine after the demands of the Circles had been met. And just in case nurture really was as important as nature, rules were handed down that highborn women with children must be mothers first, working only before or after their childbearing years, if at all.\n\nSo probably, a great-grandfather, or -mother, of Torah had been a microbiologist, or epidemiologist or some such scientist important to the finding of a vaccine. And because of that distant relative, he was a lord, wealthy beyond her imagination; served, in fact, by people like her and the lowborn, many of whom survived by virtue of natural immunity rather than a vaccine they were the very last to receive. And his contribution to the world now was to kill on command. Her contribution, while it could be to find a cure for the tertiary pandemic, would instead be to breed, perhaps even more killers like Torah.\n\nJessa leaned her forehead against her arm, weary to her soul. She knew the truths she found would not be pleasant, but somehow she'd always thought they would at least make a certain sense. She'd been taught that the Circles and indeed the Council itself had been selected from great leaders. She wasn't foolish enough to believe that the best leaders just emerged to everyone's acclaim and at everyone's accord, still she had assumed that there had been some process to select for wisdom and leadership. Something more than just money.\n\nShe hadn't even begun to delve into the current makeup of the Council or expertise of the Circles and certainly not the factions that Jacq had hinted at. What else would she find? She pulled her cell phone out and looked at the time. A little after four. She stood with determination and went to the bedroom to dress for running. She needed to clear her head of the ugliness from the night, and the fresh autumn air of Paris seemed just the thing. Part of her hoped that when the sun rose, the light of dawn would make everything seem less dark and foreboding. After just a bit of searching, she found her clothes and a light jacket. It took more searching, though, to find the key card for the apartment door. The women hadn't felt comfortable leaving it in plain sight and hadn't wanted to disturb her, assuming no doubt that she would have no need of it so soon. As an afterthought, Jessa left a short note explaining she had gone running, then slipped out of the building, thrilled to finally be running again and for fun rather than for her life.\n\nShe had only gotten a bit of the occupied sector mapped out in her head during her brief trips through the city, but Torah and others had pointed out the yellow ribbons that marked the boundaries and she made sure to stay within those areas. Where Dusseldorf had been a small area of tall buildings, Paris' occupied sector was somewhat more sprawling, encompassing older and definitely more picturesque parts of the city, giving her lots to explore and remember to return to in the daylight. She saw few cars and even fewer people. Once, when she saw a black, gas-powered SUV that reminded her of the vehicles that Renik had used, she changed course to avoid it, opting for a footpath that eventually lead through a park along the Seine.\n\nEventually, the sun drifted up, shining through a narrow patch between the horizon of the cityscape and the low hanging clouds. It was every bit as cleansing as she had hoped, but it was still with some reluctance that she turned back toward her apartment. She was less than half way there when the sun was again hidden, this time by the grey clouds. The brief brightness of the morning, as well as her thoughts, turned to murkiness again. She slowed to a walk, hands shoved in her jacket. When a car pulled up beside her a moment later, and the passenger door opened, she came to a full stop, eyes searching for an escape route. She even backed up a step or two as the driver door opened, but then she recognized Jacq emerging with an angry frown.\n\n\"Get in the car, Jessa.\"\n\nShe stepped slowly toward the passenger door. \"Is something wrong?\"\n\n\"Torah called me. Apparently, your servants called him, frantic because you were missing.\"\n\nJessa looked at him over the top of the car. \"I just went for a run. I left them a note. And I was careful to stay within the occupied sector.\"\n\n\"Get in the car, s'il vous plait,\" he repeated. With great reluctance, she slid into the seat and closed the door. She stared out the windshield even when she could feel his steady gaze on her. \"People don't go for a run at four o'clock in the morning.\"\n\n\"How do you know what time it... Oh, security cameras,\" she said, answering her own question. \"I left a note,\" she repeated.\n\n\"You also left your cell phone.\"\n\n\"I was told not to keep it in a pocket because of radiation,\" she argued. \"I don't run with a bag.\"\n\n\"Then you don't run,\" he said with finality, pushing the starter.\n\n\"You can't...\" she exclaimed, but the glare he gave her stopped any other words in her throat.\n\n\"How many options do you think you have, Jessa?\"\n\nShe sank back in the seat, closing her eyes to keep the tears at bay. When he pulled up in front of her building, she was out of the car in a flash and up the front steps. He didn't follow, though he watched until she was inside, and she noted with disgust that Raza was on her phone when Jessa reached the apartment, apparently confirming her arrival. Both Raza and Shay had the decency to look somewhat guilty as Jessa headed for the shower. She knew the servants were only doing their assigned duties, but her anger would take time to quell and a hot shower seemed the best place for that at the moment. \n\nBy the time she had emerged from the shower, she had a renewed determination to find out everything available about this grim world she found herself in and to find it out as quickly as possible. She donned a gown, knowing she wouldn't be allowed to refuse the appointment with the doctor in the afternoon, and she may have slammed a few doors getting dressed, because when she emerged from the bedroom, Shay was just putting her breakfast on the table, and studiously avoiding her eyes.",
        "Jessa strode over to the table and picked up the plate, noticing that one of them had put her cell phone right next to the plate, with a voicemail from Torah prominently displayed on the screen. Jessa debated for a long moment, but she feared that if she didn't answer him, he might come back for her, and that was best avoided. She had a lot of research to do. She finally picked up the phone also and headed for her office. Shay protested weakly, but Jessa ignored her, shutting the door on the outside world and settling in before her computer. She didn't bother to listen to his message. She hit the recall button on the phone as she chewed mindlessly at her food, relieved when the call went to Torah's voicemail.\n\nShe took a deep breath as his greeting played, then dove in. \"I asked you if I could run in Paris and you said it was up to Jacq. I asked Jacq and he said as long as I stayed in the occupied sector, I was safe. I went early in the morning because I couldn't sleep. I did that often back home, to watch the sunrise. I left a note for the servants. I will ask the doctor today for a safe way to carry my cell phone while I run. I'm sorry everyone was so upset but I didn't do anything wrong. I promise I won't do it again in that manner. I can't wait to see you again.\" She disconnected the call and took another deep breath, then turned to her computer.\n\n****\n\nJessa rubbed her sore eyes and glanced at the cell phone to check the time. It was almost four in the morning, again. She had emerged from the office only a few times for bathroom visits, to return one meal plate in exchange for another and for the tedious drive to the hospital. She was only vaguely aware that Raza was practically in tears when she drove Jessa for the appointment. Raza had offered a vague apology for calling Torah, lacking in sincerity since she obviously feared Torah far more than she feared Jessa's anger, but Jessa was too preoccupied with what she was learning to be overly concerned with Raza's feelings. She hardly even noticed when the doctor told her he could harvest her egg tomorrow. She had begun to suspect that Torah had no idea how much she would be able to find, or at any rate how quickly she would find it, when he gave her the 'key' to the Councilary Web. She also was mildly curious that he had not called her back, but that curiosity was little more than a tickle at the back of her mind. \n\nShe had forgotten about asking the doctor how to safely carry her cell phone, and she didn't really feel like running anyway. Her mind was spinning with what she had learned so far. She found she was reluctant to delve deeper into the Circles and Council. It was somehow easier to hope that more recent history, some four generations from such an ugly start, would be more palatable, then to risk learning it was far worse. Especially given that she was now married into that stratosphere and how secretive Torah was about what he did and for whom, not to mention how deadly his enemies were, though supposedly of a perfectly legitimate security service.\n\nShe had done some research on the other remaining population centers of the world, and found the information wasn't so different from what she had been taught. There was indeed almost no information out of China and Eastern Asia, though it was widely believed that the majority of the population had retreated to the southwestern highlands of China. Russian natives had moved somewhat north and had furiously resisted migrants from countries south of their borders, though they were eager to push their borders further west, against stiff resistance from their European counterparts. Europe, for its part had absorbed two major waves of migration from Spain, Italy and Greece, and to a lesser degree from the African Mediterranean coast and the Near East countries. \n\nThe African Continent had been severely decimated by the pandemic, with the few survivors fleeing south. In Australia, though the efforts to flee the pandemic and absorb populations from neighboring island nations had been well organized, the lack of arable land in the interior had resulted in scattered pockets of inhabitation in the highlands which made governance difficult. The Americas had followed the pattern of Europe and Africa, fleeing from the low and middle latitudes north and south with little regard for nationality. The Canadians, in particular, had welcomed Americans, Mexicans and those from Central America with open arms. Jessa had only begun to delve into the governance of the various regions, though it was evident that some were far more transparent and communicative than others. Even in the beginning, when the pandemic threatened the very human race itself, as well as many species of primates, some areas had been reluctant to share any discoveries regarding speeding of vaccine replication or addressing fast-moving mutations.\n\nThe information about the pandemic itself seemed compartmented in a myriad of frustrating ways. She could easily find the early information she already knew from her coursework, that it was hemorrhagic, with the virus attacking macrophages leading to interactions that then resulted in the failure of vascular walls and massive internal bleeding. It had shown a higher mortality rate than the common strains of Ebola. She had to dig and decipher endlessly to discover information about the mutations, and it seemed, not surprisingly, that as travel dwindled to virtually non-existent levels, the mutations were totally different from continent to continent. She had to infer some of that based on information from the areas that actually shared information. It did seem, at least in North America and probably in Europe that the virus adapted to exist in and transmit through one or more genera of fleas from the original Aedes aegypti mosquito vector \u2013creating the tertiary pandemic \u2013 while in other areas, it appeared to adapt to other mosquito genera, the adaptations resulting in a broadening its range, both further north and higher in altitude. More frightening, but less substantiated, were rumors of a pneumonic mutation where the virus appeared to act much slower hemorrhagically, but instigated fluid retention in the lungs, carrying the virus along for the ride, and from there being able to spread human to human through coughing, sneezing, etc. before other symptoms where evident. Jessa suspected the virus had adapted from attacking macrophages to some other component of the blood, but she had been stymied so far in her efforts to find more research.\n\n****\n\nJessa was staring at the computer screen, too tired to really see what was on it. Or make sense of what she was seeing, at any rate. She had found a satellite shot, showing what purported to be Italy, though it was barely recognizable as such, rising oceans, particularly apparent in the Mediterranean, had covered so much of the low coastal areas. What caught her attention, though, was an area, along the spine of the Apennine mountains near what had been the city of Perugia, where there were, unquestionably, city lights. In point of fact, she was staring at the time stamp, trying to make sense of the fact that the photograph had been taken less than a month ago. How could that be? Who could be living there? How were they generating electricity? She saw movement and rubbed her eyes. It was a static photo. There couldn't be movement. She peered at the screen. The movement was there again, and her fuzzy brain finally resolved it into a reflection on the screen. She spun around. Torah stood in the doorway of her office.\n\n\"When was the last time you slept?\" he asked quietly, in that deep, low voice.\n\n\"I'm not sure,\" she answered cautiously.\n\nHis eyes went to the uneaten plate of food she had pushed aside hours ago. He looked back at her, eyes sliding slowly down. She was wearing stretchy, comfortable exercise clothes, and she realized belatedly that he would be able to see the weight she had undoubtedly lost, despite Shay's best efforts. But when his eyes rose to hers again, all he said was \"They took the egg?\"\n\n\"Yesterday,\" she replied softly.\n\nHe strode abruptly across the room and she cringed, but when he took her arm and pulled her to her feet it was not particularly roughly, though firm and brooking no argument. He pulled her through to the master bedroom and into the bathroom. \"Shower,\" he said, then spun on his heel and left. Jessa stared after him, wondering if this was yet another peculiar facet of his many personalities. She looked in the mirror and saw her short hair splayed haphazardly about her head from finger combing. Perhaps he thought she hadn't been showering either, along with foregoing eating and sleeping. Indeed, as she thought about it, she couldn't remember when she had showered last. She quickly stripped and stepped into the shower.\n\nWhen she emerged, she took care to actually brush her hair into some semblance of a style. She glanced at the clock, it was closing in on midnight. She donned a silk robe and went back out into the main room. Torah was in the kitchen, dishing something onto a plate. He crossed to her, once again took her arm and pulled her to the table, setting her and the plate down at the same time. \"Eat,\" he commanded, and she knew from experience that meant every bite, quickly and efficiently. She dug in, far too tired to argue.\n\n\"This is good. What is it?\" she asked, hoping to get more than monosyllables from him.\n\n\"Piroshkies,\" he replied, sitting very still, watching her as she ate.\n\n\"Umm,\" she replied in appreciation.\n\n\"It's what your cook served you last night. She found most of them in the garbage this morning.\" Jessa put her fork down and dropped her eyes and her hands to her lap. \"Just like your maid wonders what to do with herself when she finds your bed unslept in and your shower and towels unused.\"\n\n\"Torah, I...\"\n\n\"I thought I was giving you a diversion,\" he interrupted. \"Something to quench your thirst and keep you out of trouble while I was gone. Instead, I find I have given you a narcotic that is driving you to early death. Eat!\" he snapped. She jumped to obey. \"My computer tech is quite impressed with your skills,\" he continued with more than a hint of sarcasm. \"He says you've even designed a search spider unlike any he's seen before. No one has managed that. The Council has always stayed a step ahead of hackers and probers. He is deleting your programming as we speak. You will not recreate it. Understood?\"\n\nShe nodded, glancing briefly at the door to her office. \"I didn't mean to cause problems,\" she said quietly.\n\n\"And yet it seems that is all you ever do,\" he accused.\n\n\"I'm sorry,\" she said, with true remorse. She wiped at tears that welled as much if not more from fatigue as sorrow. \"I haven't been running,\" she offered by way of appeasement.\n\n\"Yes. And only you would take permission to go out running as including at four o'clock in the morning.\"\n\nShe shrugged weakly, concentrating on her food. \"I liked running early in the morning. In the summer, I would leave early to arrive at the lake by dawn.\"\n\n\"Your father was far too lenient with you.\" Jessa dared to peek up at him. Had she detected just a hint of humor behind the exasperation? At least she welcomed exasperation over anger.\n\n\"How long can you stay?\" she asked.\n\n\"Eager to get rid of me?\" he countered, leaning forward, his elbows on the table.\n\nShe shook her head, attempting nonchalance. \"I thought you might be able to offer me a different diversion,\" she suggested coyly. When she peeked at him again, his eyes seemed darker, yet she was sure she saw a spark within. Her fork paused in midair as she waited for an answer.\n\nAll he said was, \"Eat,\" but the tone seemed more urgent than before, and she hurried through the last bites. The moment she set her fork down, he had her by the arm again, leading her toward the bedroom. Even as he closed the door behind them with one hand, his other hand shifted and he was pulling the robe from her shoulder, pushing it back to expose her upper body. His eyes slid over her breasts, down to her too prominent ribs, then back up her chest. She realized belatedly that he was probably looking for the necklace he had given her. Lania's necklace. She held her breath, but then his fingers were unknotting the belt about her waist, impatiently shoving the robe behind her to fall free.\n\nHe stepped back to look at her and scowled but said nothing as he went to work on his shirt buttons. When he had his own clothes off, he suddenly stepped forward and scooped her up into his arms. \"I swear Saula and Samu weigh more than you do now,\" he muttered. \n\n\"I'll be better,\" Jessa promised. \n\n\"Yes, you will,\" he said sternly, and she suspected he was giving her no choice in the matter. Then he was tossing her on the bed and falling atop her, his hands and mouth devouring her neck and her breasts and her belly. She tried to push at his shoulders, to force him to where she had the greatest need for his lips and tongue, but he was unmovable, setting his own pace, until she was driven to begging. \n\n\"Torah, please! I need you,\" she cried.\n\n\"Do you, now,\" he replied. \"And where do you need me?\" He slid farther down the bed and blew softly against her damp pussy. \"Here?\"\n\n\"Yes, please!\" she moaned, trying to raise her hips toward his mouth that was so close now. He wrapped his arms about her legs, pulling her firmly down on the mattress. \"Ahhh,\" she cried out, unable to move in his strong grip. \"Torah! Don't torture me,\" she yelled.\n\nHe dipped his head so that his lips rested against her pussy lips, so very close to her clit that she could feel the vibration when he spoke. \"Like you torture me?\"\n\n\"No!\" she cried out, her head rolling from side to side. She reached for his head and laced her fingers into his hair, trying to pull him closer.\n\n\"Yes!\" He hissed the word against her and the sibilance shot through her entire pussy like an electrical jolt.\n\n\"I don't mean to, Torah, I swear I don't! Please, make me come like only you can. Please!\"\n\n\"Then you'll do what you're told to do?\" he said, blowing again on the head of her clit where it peeked out of hiding.\n\nFor just a moment, she paused, terrified that he would tell her she could no longer explore the Councilary Web. But when she felt him pulling away, she gasped out, \"I swear, I swear. Just tell me what you want. I'll do what you tell me.\" \n\nInstantly, his tongue was lapping at her entry, spreading her juices up to her clit, then he was sucking and licking, still holding her tight, denying her escape as he tormented her with multiple orgasms even as he had tormented her with none a moment before.\n\nJessa was screaming incoherently. She couldn't form the words to beg him to stop and wasn't sure she wanted to, even as she felt she might go mad from the overwhelming sensation. Then, just when the experience was bordering on unbearable, he was suddenly on top of her, buried deep inside of her, stretching her but with miniscule thrusts, pulling out only a fraction of an inch before plunging back in again. At first, she was thankful for the relief from the intensity of sensation, but then, as the pressure in her belly began building and building without sufficient stimulation for release, she realized he was again torturing her by denial of what she most needed. His head was buried in the crook of her neck and shoulder, his breath hot, but slow and steady, as if he was unaffected by the slow, delicious suffering he was inflicting on her.\n\n\"Torah, I beg you! Faster, please!\" she whined, her voice cracking from the previous screams.\n\n\"You'll do everything you're told?\" He whispered the question in her ear.\n\n\"Everything. I swear.\" She tried to writhe under him and create her own friction, but he was too heavy, his weight distributed too carefully. When she tried to brace with her hands to lift her hips against him, he grabbed both her wrists and pinned them next to her shoulders, immobilizing her even further. He lifted his head and gazed down at her in an almost cold way, his eyes sparking with reflected light, but then he was plunging harder and faster and deeper into her, finally allowing the release of the unbearable pressure in her belly.\n\nJessa was gasping, his hard weight almost crushing her, yet in a most satisfying way. She had lost her voice as if it had been drowned out by the roaring in her ears when yet another orgasm thundered through her. Torah was pounding into her now, rocking her and the bed with a need that went far beyond orgasmic. She took it as his need to control her, to own her; and at that moment in time, at least, she wanted to give in to his need, answer his desire as he had hers. But even still, a small part of her dreaded to learn what she had just agreed to in her weakness for the one thing she needed and wanted \u2013 had to have \u2013 from this man who confused and frightened her so.\n\nWhen he finally came, unleashing his seed in the deepest part of her, he rolled away almost immediately, and she thought he was intending to leave, but then his hand was there, tracing each all-to-obvious rib, and she realized that he had been concerned with physically hurting her with his weight. She wanted to argue that she had not become frail just from losing a few pounds, but bit her tongue instead, wanting to savor the quiet moment with him. In fact, when she looked up to his face, he was already scowling again. \"Sleep,\" he ordered. She obligingly rolled to her side, then pushed back against him, pleased when he didn't pull away or question her motives. He wrapped an arm about her and pulled her closer, and she was asleep before her breathing had even returned to normal.\n\n****\n\nWhen Jessa awoke late in the morning, Torah was gone from the bed, but she could hear his voice in the outer room. She hauled herself out of the bed and into the bathroom, stumbling into the shower. She hadn't realized how truly tired she was until now, when she finally had some small amount of sleep. She knew she needed more, but she was being drawn to the need to discover, both the challenges presented by Torah, and the information still to be discovered on her computer. Assuming Torah was going to let her continue with her research. She brushed her hair carefully and donned an appropriate gown. When she opened the bedroom door, she paused warily, not sure what sort of greeting awaited her. \n\nTorah was in the kitchen discussing something with Shay. He looked up at Jessa without expression, and nodded at Shay, who went to fetch a dish from the oven. \"Come and sit down for breakfast,\" he said rounding the kitchen counter and heading for the dining table. \"At the table,\" he added emphatically. As she sat, Shay set a dish in front of her with food she had been keeping warm.\n\n\"Be careful, the plate is hot,\" she warned, then left the apartment. Once again, Torah was watching Jessa closely as she ate. When he was satisfied that she was giving due attention to the food, he pulled a folded piece of paper from his pocket. \n\n\"This is your schedule,\" he said, carefully unfolding the paper.\n\n\"My schedule?\" Jessa started to protest, then swallowed her words under his glare.\n\n\"You will get up at 6:00. You will run or exercise, being back in the apartment by 7:30. You will shower and be at breakfast, at this table and only at this table, by 8:00. From 9:00 to 12:00 you may only be on the computer for program or coursework.\" \n\n\"I wasn't able to suspend my programs before everything happened in Dusseldorf. I would have to start over.\"\n\n\"Then start over,\" he said impatiently.\n\n\"But the money!\" she protested.\n\nHe simply glared at her till she dropped her eyes and went back to concentrating on her food. \"At 12:00, you will be at this table and only at this table, for lunch. From 1:00 until 5:00 you will engage in social activities.\"",
        "\"Social activities?\"\n\n\"Yes. You are in a city with people all around. You have obviously spent way too much of your life alone with too much time on your hands for getting in trouble. You will socialize. There are art museums, tea houses, you can spend time with Mia, you can make new friends, you can learn to dance, to paint. I don't care as long as it does not involve a computer. Go shopping.\"\n\n\"I don't need anything,\" she protested weakly.\n\n\"This place needs decorating. Start there. From 6:00 to 7:00 you may do as you wish, as long as it does not involve a computer. At 7:00 you will be at the table for dinner. And only at this table,\" he added with a glower. \"After dinner, you may be on the computer doing as you wish or other activities of your choice, within reason, until 11:00. Absolutely no later. You are to be in bed by 11:30. Understood?\" When she didn't answer immediately, he leaned toward her. \"This is what you agreed to last night. Were you being insincere?\"\n\n\"No!\" she hastened to assure him. \"It's just... so strict.\"\n\n\"Apparently, you require firm guidelines to regulate your behavior. In addition to following this timeline, you will eat all of the food you are given. Shay is an excellent cook with a strong background in nutrition. You may express preferences to her, but you will eat what she gives you. Understood?\"\n\n\"Yes, sir,\" she replied softly, looking at her unfinished plate and wondering how she was going to manage the large meals.\n\nTorah sat back, seemingly satisfied. \"Eat up and then I will help you generate an appetite for lunch.\"\n\nJessa glanced up in surprise and caught him almost but not quite smiling at her. She ducked her head to hide her own smile and began shoveling in the last few bites. She had barely set the fork down before he was once again pulling her toward the bedroom.\n\nThis time, there was no teasing, no extraction of promises in exchange for pleasures. There was only hard, hungry fucking. Torah grabbed her around the waist and swung her up onto the bed on her hands and knees, throwing the hem of her gown over her head, enveloping her in darkness under the thick material, even as he ripped her panties apart. She wasn't aware of when or how he had freed his cock, but it was buried deep inside her even before the remnants of her panties fell away in shreds. She was grateful for the eager anticipation his earlier words had invoked, which had freely lubricated her entrance as he began slamming inside her, using her hips as handholds to pull her back on the very root of his cock with each thrust.\n\nThen his hands were suddenly gone. \"Push, Jessa!\" he commanded, and she grasped the bedspread tightly with both hands, using it as a brace to push back on him as a thumb buried itself in her asshole and fingers rubbed her clit until she was exploding around him. She heard him grunt with the effort to resist coming despite her spasms squeezing him so tightly at the base and rippling all the way to the head buried in her deepest recess. \n\nHe yanked the hem of her gown back over her spine and she was vaguely aware of the zipper running down her back even as the morning light assaulted her eyes and the aftershocks of her orgasm rocked through her belly. A moment later, the entire gown was pulled above her head and tangled about her arms, followed by her bra and she was flipped onto her back. Torah pulled her knees over his shoulders and gripped her waist to line her pussy up against his cock, plunging deep inside her again. Her shoulders were on the mattress, her arms above her head becoming more tangled in the gown with each thrust and her ass was being held above the bed, pulled hard onto his cock over and over again. Jessa let out one long moan that ratcheted up with each stroke that hit her g-spot on its way to the depths of her pussy. Torah didn't make a sound, but looked down at her, watching her breasts rocking back and forth over her ribs in time to the fucking, frowning with concentration.\n\nJessa began to wail as another orgasm welled up, but this time, instead of stopping, Torah began a relentless hammering of her g-spot. She tried to push away from the extreme intensity of it by putting her heels against his chest, but that only served to make the angle more perfect and she was no match for his determined strength. He didn't relent until her scream became soundless and breathless. He let her legs fall and leaned over her, aiming for her depths again. \"Breathe,\" he commanded, and when she was finally able to obey, he let most of his weight drop onto her as he thrust harder and faster, feeding his own pleasure this time.\n\nJessa finally freed her arms from the gown as he came and she wrapped them tightly about his back, holding him close as he shuddered through the orgasm. Almost immediately, he rolled to his back bringing her with him and she limply draped herself over him, her head on his shoulder, nuzzling against his neck. She could have slept that way, warmed by him, despite the hardness of his body, but once his breathing returned to normal, he said quietly, \"I have to go back.\"\n\n****\n\nWhen Jessa emerged from the bathroom, she found Torah dressed and sitting on the edge of the bed. He was holding the box that had contained Lania's pendant. Jessa saw the chain dangling between his fingers. \"I broke it. I'm sorry,\" she said in a rush. \"I haven't had a chance to ask Mia about where I could get it repaired. I... kind of hoped I could get it fixed before you found out.\"\n\nHe fisted his hand around the pendant, then opened his fingers again slowly, staring at the delicate silver piece. He stood up. \"I don't know computers the way you do. And I certainly don't know as much about microbiology.\" He stepped toward her and lifted her chin with one outstretched finger. \"But what I do know very well, is how to tell when someone is lying to me.\" He tucked the pendant in his shirt pocket and turned on his heel, striding from the room and the apartment without a backward glance. Jessa stared after him."
    ],
    "authorname": "Chimera44",
    "tags": [
        "betrayal",
        "pussy eating",
        "orgasm denial"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/jessa-ch-10"
}