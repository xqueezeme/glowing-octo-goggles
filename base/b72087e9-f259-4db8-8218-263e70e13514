{
    "title": "Flash 04: OJT, Part 02",
    "pages": [
        "<p align=\"center\">Flash 04: OJT, Part 02</p>\n\nThe following was inspired by an email from a reader. To fully understand the context of what is happening here, I suggest you read the first three parts of this story.\n\nThis story contains elements of sci-fi and mind control. I have chosen to put it here after several comments suggesting I keep the whole story in one area of Literotica. Part of this story was inspired by NTRMaster's 2014 story, \".\"\n\nMy apologies for taking so long to get this part of the story up. We're doing a major remodel on the house, and my writing time has been severely hampered.\n\nThis story turned out to be much longer than I originally anticipated, so I decided to break it down into multiple parts.\n\nMany thanks to QuantumMechanic1957 and Kalimaxos for giving this a beta read. Their suggestions have made this a much better story, in my opinion. I would also like to thank those who offered comments and constructive criticism on my previous stories.\n\nFor those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper...\n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. (Yes, I DO moderate comments) And please remember, this is a work of fiction, not a docu-drama...\n\n...\n\nThe end of \"Flash 04: OJT, Part 01\"\n\n\"I don't get it. Why not just tell me you didn't want to be married to me anymore? Why did you do all of this?\"\n\n\"Because it made him happy,\" she said. \"You see, he's not just my lover. He's my soul mate. My master and I would do anything for him. Anything. I would even kill you if he asked me to.\"\n\n\"You would kill me?\" Joe asked.\n\n\"Yes,\" she said calmly. \"But don't worry. He doesn't want you dead. Not by my hand, anyway. He wants you to suffer. Now if you decided to kill yourself, that would be different. We would both celebrate that.\"\n\n\"My God, you're not even human,\" Joe said. \"What are you?\"\n\n\"What I am is your past,\" she said. \"I'm my master's personal plaything now. By the way, this will be the last time we ever talk. I'm having you served with a restraining order. Goodbye, Joe. Enjoy what's left of your miserable life. And remember to keep your eyes peeled. One of these days, I may just decide to put you out of your misery like a dog. Bye now. Bye.\" The call ended and I stopped the recording.\n\n...\n\nAnd now, Part 02 of \"Flash 04: OJT\":\n\n\"You okay?\" Max asked. \"Your eyes are pulsing.\" I looked in the mirror and saw the gold specks in my eyes pulsing brightly. I knew that was the first sign of a possible eruption. I took a few deep breaths and relaxed.\n\n\"Yeah,\" I said quietly.\n\n\"Maybe we should step out back and discuss our next steps,\" he said. I nodded my head and followed him out. We stopped in his room long enough for him to make two cups of Adrestia's tea, then went outside and sat on the bench facing the large rock. He offered me another cigarette and I accepted.\n\n\"You're gonna get me hooked on these things,\" I said.\n\n\"There are worse vices,\" he said as he lit my cigarette. I inhaled deeply and took a sip of tea. I could feel myself starting to relax.\n\n\"And you thought you had it bad,\" he said with a smile. I realized he was right.\n\n\"Did you hear the tone of her voice?\" I asked.\n\n\"I did,\" Max said. \"She seemed very detached, emotionally. You think he may have drugged her or something?\"\n\n\"No,\" I said. \"I don't think so. She was cool, calm, collected. She deliberately calculated how she would hurt her husband and executed her plan. I'd love to take a look at her brain feed.\"\n\n\"I'll bet you would,\" Max said. \"I know one thing -- the lawyers are gonna have a field day with this one. This isn't just a civil case anymore. I don't know if you caught it, but she admitted to more than one crime. The incestuous acts with her sister are enough to technically get her thrown in jail for a couple years. And that's only one possible charge.\"\n\n\"We'll need to go to Orange County,\" I said. Max nodded his head.\n\n\"I agree,\" he said. \"The sooner the better. I suggest we go home tomorrow morning as planned. Take the rest of the day off, spend some time with Ginger. Adrestia and I will make arrangements and we'll go to southern California on Thursday. You and I will get together and work out our strategy on Wednesday. We should be able to do what's needed on Thursday and return on Friday. Don't forget, you and Ginger are coming to the gallery on Saturday.\"\n\n\"Gonna be a busy week,\" I said.\n\n\"Yes, it is,\" Max said. We went back to our rooms and I got ready for bed. My last thought when I closed my eyes was of Ginger. The next thing I knew, I saw her in my mind, almost as if she was in the bed with me, laying on her side, nude. She looked at me with a big smile and the specks in her eyes actually twinkled. I smiled back and reached out to her, pulling her to me.\n\nShe wrapped her arms around me and we kissed deeply. I could feel her breasts against me and I began to respond to her presence. The next thing I knew, she had taken my now-erect cock in her hands and guided me inside her. She felt so good to me and so real. Far too real to be a dream, I thought to myself.\n\n\"This is no dream, my love,\" she purred in my ear, almost as if she could hear my thoughts. \"I've missed you so much. I need this,\" she whispered as we bucked against each other. We groaned as we coupled and were soon crying out as we climaxed together. We held each other for a few minutes as we calmed down.\n\n\"Sweet dreams, my husband,\" she said, giving me a kiss.\n\n\"As long as you're in them, they'll always be sweet,\" I said. She smiled and we exchanged another kiss.\n\n\"I'll see you in the flesh tomorrow,\" she said. \"I love you.\"\n\n\"I love you more,\" I responded. I slept like a log for the rest of the night and woke up to the sound of reveille being played on the camp's speaker system. Even though it was 5:30 am, I felt surprisingly refreshed and couldn't help but wonder about what happened the previous night. Was it real, or was it Memorex, I asked myself, thinking about the old commercial. I made a mental note to ask Smith and Jones about it the next time I saw them, which was scheduled to be tonight.\n\nI got up, did my business, took a shower, dressed, and went to Max's room. He opened the door before I could knock and looked at me.\n\n\"Ready for breakfast?\" he asked.\n\n\"Sure,\" I told him. We locked our doors and headed for the chow hall, where we enjoyed a large Denver omelet, hash browns, bacon, coffee, juice, and milk.\n\n\"Boy this sure takes me back,\" Max said as he ate his omelet. John and Gunny Rob joined us as we ate. I pulled out a bag containing Joe's phone and handed it to Gunny Rob.\n\n\"I got everything I need off of that,\" I said. \"Thanks.\"\n\n\"You may want to get with legal,\" Max added. \"I have a feeling the authorities in California will want to examine it.\"\n\n\"You think this has evidence of criminal activity?\" Gunny Rob asked.\n\n\"I do,\" Max said.\n\n\"So, what are your plans now?\" Alan asked.\n\n\"We're going back right after breakfast. Our flight leaves Spokane at 11:00. We'll be following up on some things later this week in California, see what we can find,\" Max said.\n\n\"What do we tell Nelson?\" Gunny Rob asked.\n\n\"Tell him we're looking into his case. We'll be back in a couple weeks, regardless of what we find,\" Max said. Gunny Rob looked at me.\n\n\"What do you think, son?\" he asked.\n\n\"I know what my gut's telling me, Gunny,\" I said. \"But I'd rather wait and see what we learn down there before I say anything.\" He nodded his head.\n\n\"Alright,\" he said. \"I guess we'll see you two in a couple weeks, then.\"\n\n\"We'll be here,\" Max said. We stood and said our goodbyes after we finished eating, then went back to our rooms and packed up. We turned our card keys in to the receptionist, said our final goodbyes, and left the camp.\n\nI called Ginger while Max took care of the car rental to let her know we were about to board the plane in Spokane.\n\n\"We'll be leaving here shortly,\" I told her.\n\n\"I know, silly,\" she said.\n\n\"You know?\" I asked.\n\n\"Of course. You left your itinerary, remember?\"\n\n\"Oh, yeah. I guess I did,\" I said sheepishly.\n\n\"How did you sleep last night?\" she asked. I detected a bit of mischievousness in her voice.\n\n\"I slept very well, thank you. How about you?\"\n\n\"Like a baby,\" she purred. \"Did you enjoy yourself last night?\" she asked in a very low voice.\n\n\"I did. Wait, was that for real?\" I asked, shocked.\n\n\"Uh, yeah, it was. I told you it was real last night,\" she said.\n\n\"Wow,\" I said. \"We'd better tell Smith and Jones about this. They'll definitely want to know.\"\n\n\"I know,\" she said. \"They'll be over this evening, by the way.\"\n\n\"Yeah, I know,\" I said. \"So, did you enjoy that last night?\"\n\n\"More than you'll ever know,\" she said.\n\n\"I guess we'll have to do that more often,\" I told her.\n\n\"Got that right, stud muffin,\" she said. \"I'd better get going. I'll see you when you get home. Love you.\"\n\n\"Love you too,\" I said, ending the call. I looked up and saw Max watching me.\n\n\"You two lovebirds finished?\" he asked. \"We have a plane to catch.\"\n\n\"Yeah,\" I said. \"We're done.\" He nodded his head and I followed him to the terminal.\n\n...\n\nGinger flew into my arms when Max dropped me off at the house. She wrapped herself around me and it felt so good to be home with her again. We said our goodbyes to Max and went back into the house. After I put my things away, we embraced each other again.\n\n\"So, I take it you had a good trip?\" she asked.\n\n\"Yes, it was very productive,\" I told her. \"Max and I will be going to southern California to do a follow-up on Thursday. We're planning to be back on Friday. I had an idea about something I wanted to run by you,\" I added.\n\n\"You mean, setting up a server for the brain feeds and showing me how to use your app so I can help you review them?\" she asked. I looked at her, stunned.\n\n\"Yes, how did you know?\"\n\n\"It just came to me about an hour ago,\" she said. That was about the time I had the idea. I would definitely have to talk about this with Smith and Jones tonight.\n\n\"Well, what do you think?\" I asked her.\n\n\"I think it's a very good idea,\" she said. \"You obviously don't have time to spend digging through other people's memories and I already told you I'd be more than happy to help you in any way I could.\"\n\n\"Alright, I'll start planning it out,\" I said. \"Have I told you lately that I think you're the absolute best?\"\n\n\"I think you may have mentioned it a time or two, but a girl likes to hear that more often,\" she said with a smile.\n\n\"Well, you're the absolute best and I love to pieces,\" I told her, making her smile even wider. \"So, what did you find out about Lee and the Hamilton Group?\"\n\n\"I'm still putting together a portfolio on them, but so far, everything seems to be on the up-and-up. Lee is a very well-respected member of the community down there and the law firm is doing very well,\" she said. \"They have several elected officials as clients and one of their lawyers was elected to the State Assembly in the last election.\"\n\n\"So, they're politically connected?\" I asked.\n\n\"Yes,\" she said. \"The firm has its own PAC and they contribute the maximum to a number of candidates on both sides of the political aisle. So far, about 95 percent of their benefactors win their elections.\"\n\n\"Interesting,\" I said. \"So, nothing jumped out at you? No red flags?\"\n\n\"No, nothing,\" she said.\n\n\"Which means Lee is very good at covering his tracks,\" I said.\n\n\"Apparently so,\" she said. \"You may find this interesting. Lee is being considered for a 'man-of-the-year' honor by a local business group down there. It's set to be announced at the group's annual dinner in about six weeks or so.\"\n\n\"Really?\" I asked. \"Even more interesting. I'll mention that to Max tomorrow. Thank you for doing that, by the way.\"\n\n\"You're very welcome,\" she said.\n\n...\n\nThat evening, Smith and Jones sat quietly and listened as we detailed the changes in Ginger and the strange occurrences over the last few weeks. Ginger showed them her journal and they read through it quietly. When they finished, Smith pulled a device from his briefcase, opened it up, and ran it around Ginger's head, then mine. He sat back down and the two of them conversed in their language as they looked at the device.\n\n\"What's going on?\" I asked, a bit impatient. Smith looked at me before speaking.\n\n\"I take it you two are still exchanging genetic material?\" he asked.\n\n\"You mean, having sex? Yes. Why?\" I asked.\n\n\"It is difficult to adequately explain in your limited language,\" Smith said. \"It appears the two of you are going through a cellular synchronization.\"\n\n\"What?\" I asked.\n\n\"Let me put it in terms you might be able to understand,\" Jones said. \"You understand your computer and network technology, is that right?\"\n\n\"Yes,\" I said.\n\n\"What is happening to you is similar to what happens when two computers connect on a network. Right now, your minds are engaging in a... handshake, of sorts. They are connected to each other on a cellular level. As a result, your brain waves are synchronizing much in the way that computers can synchronize on one of your networks,\" he said.\n\n\"In short, your two minds are beginning to function as one,\" Smith added. Ginger and I looked at each other, shocked. \"Her thoughts will be your thoughts and vice versa. You will each maintain your own identities and personalities. You will continue to have your own dreams and aspirations. But they will no longer be just yours alone. Of course, this means that over time, you will not be able to keep secrets from each other, and there could be other ramifications.\"\n\n\"We will need to develop a protocol to ensure that your base system remains separate from that which you share, just as your computer servers have their own operating system and programs,\" Jones said.\n\n\"What about the baby?\" Ginger asked. Smith ran the device over Ginger's abdomen and the two of them examined the results before responding.\n\n\"Hmm,\" Smith finally said.\n\n\"What does that mean?\" I asked.\n\n\"Your offspring are well within normal parameters,\" Smith said. \"They are functioning exactly as they should. They will become part of your neural network and will link to you just as the two of you are linked to each other. For them, it will be as natural as breathing or eating.\"\n\n\"Them?\" I asked.\n\n\"Yes,\" Jones said. \"Two lifeforms are gestating within your wife's body. One male and one female. Did you not know this?\"\n\n\"No,\" Ginger said. We looked at each other. Twins! We're having twins, we each thought.\n\n\"So, will they have the same abilities as I?\" I asked. Smith and Jones looked at each other, then at me.\n\n\"Yes,\" they both said at the same time. \"In fact, you could say they will be the first in your species' latest evolution,\" Jones added. Holy fuck, I thought to myself. I sensed the same from Ginger.\n\n\"Ah, that's right,\" Smith said. \"Human offspring are not mentally mature at birth.\"\n\n\"True,\" Jones added. \"They can be quite... precocious and demanding at first.\"\n\n\"That could be... catastrophic,\" Smith said. Then it hit me what he meant. I could just see one of our children blowing the house up during a temper tantrum. Or the neighborhood.\n\n\"We will need to develop protocols for the upbringing of your children,\" Jones said. \"Something that will ensure they mature while maintaining the safety of everyone else.\"\n\n\"I know I'm still transitioning, but what about Ginger? What about the changes she's experiencing?\" I asked.\n\n\"She is in transition as well, however, her transition is much slower, and therefore, more manageable,\" Smith said. \"We are developing a training plan for her. As for you, Cameron, we need to do more work on your anger management. You need to learn how to control yourself a bit better.\"\n\n\"The exercises you gave me seem to work just fine,\" I said.\n\n\"Which is why you nearly blew up at Camp Rollins,\" Jones said sarcastically. \"The exercises were intended to stop sudden outbursts, but nothing more. We will work on this starting tonight. In fact, we'd like both of you to participate.\"\n\n\"I think that would be a good idea,\" I said, looking at Ginger, who nodded her head in agreement. We went through the workout with Smith and Jones, which I felt helped both of us. Before they left, I hit them up with a question.\n\n\"Just curious, what's my capacity? How many years of memories can I realistically download into my mind?\" I asked.\n\n\"You should be capable of holding roughly 750 years' worth of information. That should be far more than enough capacity given the average life span of your species,\" Smith said. \"In fact, with that amount of storage space, you should be able to easily hold multiple brain feeds at one time. Why?\"\n\n\"Just curious. What happens if that capacity is exceeded?\"\n\n\"In that case, the brain feed is rejected and sent back to its origination,\" he explained.\n\n\"I see,\" I said. \"Thanks, I was just wondering.\"\n\n\"Have you experienced a brain feed rejection?\" Jones asked.\n\n\"Yes, it happened once and I was curious to know how that could happen,\" I said.\n\n\"We can upgrade that subsystem if you feel it is necessary,\" Smith said. I shook my head.\n\n\"No, I don't think that'll be necessary,\" I said. \"But thanks anyway.\" So, I thought to myself after they left, THAT'S why I didn't get Adrestia's brain feed. But, I recalled, I had no other memories stored at the time I tried connecting to her. Then the implication of that hit me. That would mean Adrestia was more than 750 years old. That's impossible, I thought to myself. But, I realized, it's really no more impossible than what I have been experiencing these last few months. I'm definitely not in Kansas anymore.\n\n\"What's that about Kansas?\" Ginger asked.\n\n\"Oh, I was just thinking that we're not in Kansas anymore,\" I said.\n\n\"You got that right, sports fans,\" she said with a chuckle. \"So, how do you feel about the idea of us being able to share our thoughts?\"\n\n\"On one hand, I can see how it could bring us closer together,\" I said.\n\n\"But, what if one of us has an impure thought?\" she asked, echoing my concerns.\n\n\"Why do you ask? Are you having impure thoughts about your co-workers or something?\" I asked jokingly.\n\n\"No,\" she said. \"I've already been down that road, remember?\" I could tell that whole period in her life still bothered her, so I decided not to make an issue of it.\n\n\"Yeah,\" I said. \"I guess we'll have to just take things one day at a time. You know, it's one thing to have a stray thought. We all have them. It's another to act on it.\"\n\n\"I suppose you're right,\" she said after a while.\n\nLater that night, Ginger and I held each other in bed. We had just wrapped up a steamy session of sex and were basking in the afterglow.\n\n\"I'm scared, Cameron,\" she said quietly.\n\n\"About what? Having twins?\"\n\n\"Yeah, that can be a bit scary. But I was thinking about having twins with super-human abilities in a world full of fucked-up people,\" she said. \"How are we going to deal with that?\"\n\n\"I don't know,\" I said. \"With a lot of love and a lot of patience, I suppose. You know, we could always read some old Superman comics and see how Clark Kent's parents dealt with him,\" I added jokingly.\n\n\"Oh, yeah, let's rely on a comic book,\" she responded with a laugh. I laughed with her. Yeah, it was a silly idea, but at this point, I was ready to consider almost anything.\n\n\"Let's see what Smith and Jones come up with,\" I finally said.\n\n\"We'll need to tell your parents,\" she said.\n\n\"Yeah, we will. That's going to be an interesting discussion.\"\n\n\"And what about school? What do we say then?\"\n\n\"Oh, that's easy. We'll just tell the principal that our children have super-human powers and can blow up the school with a single thought if someone pisses them off,\" I said half-jokingly.",
        "\"That'll go over like a lead balloon,\" Ginger said, laughing. \"Please, I'm being serious here. What do we do?\"\n\n\"Maybe we should think about home-schooling,\" I said.\n\n\"But they need to socialize with other children,\" she countered.\n\n\"You're right. I guess we'll just have to see how things go. Who knows, maybe they'll be well-adjusted enough that it won't be a problem. That's not all that's bugging you though, is it?\"\n\n\"No, it's not,\" she said quietly. \"All this talk of neural networks and transitioning and mental links -- I mean, how do you cope with all of it?\"\n\n\"It's not easy, I'll admit,\" I said. \"I try not to let it overwhelm me. Just look on the bright side, though.\"\n\n\"What's that?\"\n\n\"We'll never be able to say we couldn't get in touch with each other,\" I said with a smile. She chuckled and slapped my arm.\n\n\"I'm being serious here, and you're making jokes,\" she said.\n\n\"Look, if worse comes to worst, we'll buy an island somewhere and start our own civilization of super-powered human beings, okay? At this point, I'm focused on the here and now. And right now, I'm in bed with the most beautiful woman in the world who just happens to be carrying my children. I've never been happier or more in love with anyone in my entire life,\" I said.\n\n\"Oh, Cam, that's the sweetest thing you've ever said to me,\" she said as she snuggled into me. \"You know what I really need right now?\"\n\n\"What?\" I asked.\n\n\"Right now, I need another big dose of your genetic material,\" she said as she grabbed my cock.\n\n\"Yes, ma'am,\" I said. \"One dose of genetic material coming right up. You want fries with that?\" She giggled and took my manhood into her mouth.\n\n...\n\n\"Good morning, Cam,\" Sally, Max's receptionist, said as I walked into the office. \"Max is waiting for you.\"\n\n\"Thanks, Sally,\" I said. \"And good morning to you as well.\" I went into Max's office and found him sitting behind his desk, a lit cigarette in his ashtray. Two cups of hot tea were sitting on his desk and I knew one was for me. I sat down and took a sip of tea.\n\n\"Morning,\" I said.\n\n\"About damn time you got in,\" he said with a smile. \"I take it everything went well last night?\"\n\n\"It did, thanks. Ginger's working up a portfolio on Lee and the Hamilton Group. No red flags so far, but she did say he's being considered for some kind of award.\"\n\n\"Interesting,\" Max said. \"Oh, I got something for you,\" he added as he pulled a tablet out of his briefcase and handed it over to me. \"Adrestia put an application on it for you. It's just like the one I use. Go ahead, turn it on and use 1234 to unlock it. You can set the code to whatever you want.\"\n\nI opened the tablet and found only one icon on the main screen. That was odd, I thought. Max told me to go ahead and launch it, so I did.\n\n\"What is this?\" I asked.\n\n\"It's a tool that lets you perform real-time surveillance on anyone, anywhere and at any time,\" Max said.\n\n\"How is that possible?\" I asked.\n\n\"Trade secret. I'd tell you but then I'd have to kill you,\" he added with a smile and a wink. \"Just kidding, of course. Actually, it's something Adrestia cooked up. It's a lot like what you can do, except you don't need to have a previous mental connection to the target.\"\n\n\"Feds would probably go nuts with something like this if they ever learned about it,\" I said.\n\n\"They won't learn about it, trust me,\" he said. \"Watch how this works.\" He showed me how to search for anyone I wanted. He entered Roger Lee's name in the first box and \"Orange County, California\" in the second box. A list of Roger Lee's showed up, but one had a yellow star next to it.\n\n\"I took the liberty of drilling the search down myself to save us some time,\" he explained. He selected the name and the main window appeared. We found ourselves looking at a man sitting at a desk inside a well-appointed office. I recognized him right off.\n\nMax selected another icon and a smaller window appeared below the video. I saw gibberish scroll across and wondered what was going on.\n\n\"That's the thought monitor,\" Max said. \"It's synchronizing to his brain. Give it a couple minutes.\" Sure enough, after a few minutes, the gibberish changed to something that could be read.\n\n\"This is what he's thinking?\" I asked.\n\n\"Yes, it is,\" Max said. \"As you have probably already surmised, he's reading some paperwork in front of him and thinking about how he plans to handle the case he's working on. We heard a knock on his door.\n\n\"Enter,\" Roger said abruptly. The door opened and an attractive brunette walked into the office carrying two cups of what I assumed was coffee. She handed one to him and kept the other for herself, taking a sip.\n\n\"Caramel mocha, decaf, just like you wanted,\" she said with a smile. He looked up and smiled back at her.\n\n\"Thank you, Veronica, this is just what the doctor ordered,\" he said before taking a sip. \"Perfect,\" he added, wiping his mouth. I looked at Max.\n\n\"Did he just call her Veronica?\" I asked.\n\n\"That's what I heard. You thinking what I'm thinking?\"\n\n\"That she's Nelson's ex-wife? Yeah,\" I said.\n\n\"Let's watch and find out,\" Max said. As we watched, Roger closed his folder and turned his attention to Veronica.\n\n\"So, have you found out where that loser ex-husband of yours is hiding out?\" he asked. The woman shook her head and sat down.\n\n\"No, I haven't heard anything from anyone,\" she said.\n\n\"I haven't had any luck either,\" he said.\n\n\"Why are you so interested in finding him?\" she asked. \"You've taken everything from him. You got me. We destroyed him. Why not just let it go so we can move on with our lives?\"\n\n\"I haven't taken everything yet,\" Roger said. \"He's still working at that bank and he's still drawing air.\"\n\n\"You promised me you wouldn't kill him,\" she said.\n\n\"And I don't intend to. Not unless he forces my hand. I'd rather he did it himself. You know that. You're not going soft on me, are you?\"\n\n\"No, sweetheart,\" she said. \"It's just that I'd rather forget about him and focus on us.\"\n\n\"I'd like nothing better myself,\" he said. \"But there's one thing I need to do first.\"\n\n\"What's that?\" she asked.\n\n\"I need to piss on his grave,\" he said grimly.\n\n\"Haven't your investigators found anything out?\" she asked.\n\n\"No. Useless bunch of worthless fucks haven't been able to find out shit. So I hired in some guy from back east.\"\n\n\"Oh? Who?\"\n\n\"Some gumshoe named Hammer,\" he said. That got my attention. \"Found him in Atlantic City, running from some mob types. Fixed his little problem for him, then brought him here to find your ex.\"\n\n\"Has he found anything?\"\n\n\"Not yet, but he's hot on the trail. Went by his apartment the other day. Found out he hasn't been around for the last couple of months. All his bills are being paid, though, and his mail is being held until just after the end of next month,\" Roger said. \"He's asking around, though.\"\n\n\"What happens if this Hammer guy finds him?\"\n\n\"He'll do what he's been paid to do. Enough about your ex. Are you still my little slave?\" he asked with a sneer.\n\n\"Of course,\" she said. \"You know I'm yours to command.\" He smiled wide and pulled back from his desk.\n\n\"Then what are you waiting for, my slave? Why aren't you under my desk sucking my dick?\" She smiled and crawled under the desk as he unzipped his fly.\n\n\"Watch this,\" Max said. As I watched, he moved his finger on the screen and the camera angle followed his movement. He touched another icon and zoomed in. By now, we could clearly see Veronica with Roger's cock planted firmly in her mouth. I looked at Max, shocked.\n\n\"How is that possible?\" I asked.\n\n\"Trade secret, remember?\" I shook my head in disbelief.\n\n\"You recorded this, right?\"\n\n\"Of course,\" Max said. \"Man of the year, huh?\" he asked with a snort.\n\n\"Yeah,\" I said sarcastically. A germ of an idea began to form in my mind. I connected to Hammer's mind to find out what he was doing. At that moment, he was in bed with what looked like a hooker. She seemed to be well-worn and a bit long in the tooth, but I wasn't there to judge Hammer's taste in women.\n\nProjecting myself through his mind, I looked around the small motel room and discovered that he was in Westminster, California, one of the many communities that filled Orange County just south of Los Angeles. I made a note to myself and disconnected from his mind.\n\n\"Where the hell were you?\" Max asked. \"I tried talking to you, but you just sat there staring at the desk.\"\n\n\"Sorry, I connected with Hammer's mind. He's located in Westminster, California. Last I heard, he was in Atlantic City. I wanted to see if the Hammer Roger spoke of was the same guy. It is.\"\n\n\"I take it you've had dealings with this Hammer?\" Max asked.\n\n\"Yes, I have. He worked for Bergstrom for a while,\" I said. \"After he was sent to prison, he wanted Hammer to kill us. I convinced Hammer it would be best if he left the area.\"\n\n\"I see,\" Max said. \"Are you alright? You seem to be a bit stressed.\"\n\n\"I'll be fine,\" I said. \"It takes a lot of effort to project myself through someone's mind.\"\n\n\"I imagine it does,\" he said. He pressed a button on his intercom. \"Sally, would you mind bringing in a couple cups of tea, please?\" he asked.\n\n\"Of course, Max,\" she said in response. \"I'll be right there.\" A couple minutes later, she came into the office with two cups of hot tea and set them on the desk.\n\n\"Thank you, Sally,\" Max said.\n\n\"You're welcome,\" she said before leaving the office. He pulled out his cigarettes and offered one, which I took. We drank our tea and smoked our cigarettes as we discussed the plan for our visit to Orange County. Then we spent the next two hours or so rehearsing my part, with him playing Roger. By the time we finished, I felt like I had a good handle on things.\n\n\"Why don't you call it a day, go on home, rest, pack and spend some quality time with your wife,\" Max said. \"I'll pick you up at 7:00 am so we can get to the airport in time.\"\n\n\"Sounds like a plan to me,\" I said. I went home and packed my bags for the trip. Ginger got home from work about the time I finished.\n\n\"You about ready to go?\" she asked.\n\n\"Yeah,\" I said. \"I've got my martial arts class this afternoon, but other than that I'm all yours. How was work?\"\n\n\"Oh, pretty much the same old, same old. You know how that goes,\" she said.\n\n\"Yeah, I do. Listen, after my class, you want me to bring home a pizza or something? Maybe we can hang out on the couch and... play.\"\n\n\"Play?\" she asked, raising her eyebrows. \"That sounds... interesting. Does this play involve swapping genetic material?\" she asked with a smile.\n\n\"It just might,\" I said, taking her in my arms.\n\n\"Well then. I guess it's pizza and playtime tonight,\" she said before giving me a kiss. \"What time is Max picking you up?\"\n\n\"Six o'clock,\" I said. \"So I'll have to get up earlier than normal.\"\n\n\"Well, better get going then, so we'll have time to play,\" she said.\n\nI went to my class and stopped off for pizza afterward. I got a large half veggie and half meat-lovers with extra sauce. The half veggie part was Ginger's and the other was mine. I though about calling her to let her know, but decided instead to connect directly to her mind.\n\n\"I'm picking up the pizza now,\" I told her in my mind when I saw her smiling face.\n\n\"Good,\" she replied. \"The wine is chilled and the rest is warming up,\" she added with a delightfully wicked smile. I pulled back and saw she was totally naked on the couch.\n\n\"I'll be home as fast as I can get there,\" I said. Grabbing the pizza, I made it home as fast as I could without breaking any laws. We fed each other some pizza and... played. I made sure her eyes flashed multiple times before we fell asleep.\n\nThat night I dreamed of tropical beaches. I was stretched out, naked, in a hammock strung between two large palm trees watching a fairly large group of nearly-naked people frolicking in the surf and sand not too far from me. I felt a connection to those people, as if I knew them.\n\nI turned to the naked woman laying in the hammock with me. She turned her head toward me and smiled, her eyes flashing. It was definitely Ginger. She was a bit older in my dream, but just as beautiful as ever.\n\n\"This is the life, isn't it?\" she asked.\n\n\"It sure is,\" I said.\n\nThe alarm woke me at 5:15 am. I turned it off, and went into the bathroom to shit, shower and shave. After I got dressed, I gave Ginger a kiss.\n\n\"You getting ready to leave already?\" she asked.\n\n\"Yeah,\" I said. \"It's about that time. I'll get with you when I get there.\"\n\n\"You'd better,\" she said. \"I love you.\"\n\n\"Love you too,\" I said. She turned and fell back to sleep, holding my pillow. I went downstairs, grabbed a cup of coffee to go. Just then, Max arrived and we headed out for the airport.\n\nWe landed at John Wayne Airport in Orange County and Max got the rental sedan he and Adrestia reserved. I connected to Ginger to let her know we had landed.\n\n\"Be careful,\" she said.\n\n\"I will,\" I told her. We exchanged mental \"kisses\" and disconnected. Max drove us to the Comfort Inn, which was close to the airport and we checked into our rooms. After we put our things away, Max looked at his watch.\n\n\"Get changed and grab your gear,\" he said. \"We have just enough time to get you to your appointment with Roger.\" I already knew from Max that Adrestia had managed to get me an appointment with Roger and Veronica. I did as he said, changing into a suit and tie. I grabbed my briefcase and followed Max back to the car.\n\nFrom there, we drove to Irvine, where the Hamilton Law Group was located. Max looked at me as I climbed out of the car.\n\n\"I'll be over in Santa Ana,\" he said. \"I don't know how long this will take, so you probably should call an Uber when you're finished.\"\n\n\"No problem,\" I said.\n\n\"You have everything you need?\" he asked.\n\n\"Under control,\" I said.\n\n\"Alright, I'll be in touch. Good luck,\" he said. I watched him drive off and went into the building.\n\n\"May I help you, sir,\" a large burly man in a dark suit asked when I approached the large desk in the entryway. I could make out the bulge in his suit and knew he was carrying a pistol.\n\n\"I'm here to see Roger Lee and Veronica Hartley. I have an appointment,\" I said. He looked on his computer before turning back to me.\n\n\"You have some identification?\" he asked. I pulled out my license and let him look at it before putting it away. \"One moment,\" he said before picking up a phone. I heard him talking to someone on the other end before ending the call.\n\n\"Someone will be with you shortly,\" he said abruptly.\n\n\"Thank you,\" I said. About five minutes later, a tall blonde wearing a tight dress came out of an elevator and headed my way.\n\n\"Mr. Drake?\" she asked with a smile. \"My God, what piercing eyes. And what's with those gold specks? I bet he'd be fun in the sack,\" I heard her say in her mind. Then I saw Ginger's face. \"Don't even think of it, buster,\" she warned with a smile. I smiled back in my mind.\n\n\"Don't worry, babe,\" I told her. \"She's got nothing on you.\"\n\n\"Damn right,\" Ginger said before we stepped in the elevator.\n\n\"So, is this your first time to southern California?\" the blonde asked after the doors closed.\n\n\"Yes, it is,\" I said.\n\n\"Well, I hope you enjoy your stay,\" she said when the elevator stopped. \"I'm Lucy, by the way.\"\n\n\"Cameron,\" I said. \"Good to meet you, Lucy.\" The door opened and Lucy escorted me to another desk where another blonde-haired woman looked at my identification before pressing a buzzer.\n\n\"Mr. Lee and Ms. Hartley are expecting you,\" she said. \"Please, go on in.\" Lucy escorted me into the office. I recognized Veronica and Roger from Joe's brain feed. They both stood as we walked in. Veronica held out her hand and I accepted. I felt the slight jolt and saw her flinch.\n\n\"Must be static,\" I said as her brain feed downloaded into my mind. \"Sorry. You must be Veronica Hartley.\"\n\n\"Yes, I am,\" she said.\n\n\"Cameron Drake. Good to meet you,\" I said as pleasantly as I could. The anaglyph effect was strong with Veronica, but it was even stronger with Roger. I knew I would have to be on my toes with these two snakes.\n\nRoger held out his hand and I accepted it as well. He also flinched when he felt the slight jolt.\n\n\"Roger Lee,\" he said. \"Pleasure to meet you.\"\n\n\"And you as well, Mr. Lee,\" I said. \"Please, call me Cameron.\"\n\n\"Very well, Cameron,\" he said with a crooked smile. \"Would you care for something to drink? Coffee? Tea? Something a bit stronger, perhaps?\"\n\n\"Coffee would be fine, please,\" I said. \"Preferably black.\"\n\n\"Coffee it is, then,\" he said. \"Ms. Johnson, would you please bring our guest a cup of coffee, black?\"\n\n\"Of course, sir,\" Lucy said before leaving.\n\n\"Please, have a seat,\" Roger said. I sat as did Roger and Veronica. I noticed he was eyeing me closely, and I heard both of them comment on my eyes in their minds. I had gotten used to that by now, but for some reason it still unnerved me just a bit.\n\n\"You seem familiar to me for some reason, Cameron,\" he said. \"Have we met before?\"\n\n\"No sir, this is my first time in California,\" I said. By then Lucy had returned with a cup of coffee. She set it on a coaster on Roger's desk and looked at me with a smile.\n\n\"Coffee, black,\" she said. \"Is there anything else I can get for you?\" I heard her mind quite clearly. \"Like a hot, wet pussy?\" I saw her lips hadn't moved and I shook my head as I looked at her.\n\n\"No, I'm fine. Thank you for asking anyway, Lucy,\" I said, making sure she could see my wedding ring as I picked up my coffee.\n\n\"Damn, married,\" I heard her think to herself. \"Oh well, I tried.\"\n\n\"Did you hear that?\" Ginger's voice echoed in my mind. \"That woman was ready to fuck you right there in the office. I have a good mind to fly down there this instant and scratch her eyes out!\"\n\n\"You're welcome, Mr. Drake,\" Lucy said before leaving the office, completely unaware of the conversation taking place in my head.\n\n\"Aaaghhh!\" Ginger's voice exclaimed in my mind. \"We're going to have a talk when you get home, mister,\" she said.\n\n\"It's alright, sweetheart,\" I responded in my head. \"You're the only one for me and you know it. We talked about this, remember? Calm down and let me work, okay?\" I turned back to Roger.\n\n\"So, tell me about this company you work for, Cameron,\" he said. \"I know all of the investigative firms in the area. Work with most of them. I don't believe I've ever heard of the Burnage Agency.\"\n\n\"We do specialized investigations all across the country, Mr. Lee. We're not based in California,\" I said, sticking to the script Max and I had worked out.\n\n\"But you are licensed to operate in California?\" he asked.\n\n\"Of course,\" I said. \"We're licensed to operate in all 50 states.\"\n\n\"Do you have a business card or something?\" Roger asked. I pulled one out of my shirt pocket and handed it to him. Let him call the number, I thought. I knew he would either get Sally or Adrestia and they would both stick to the script. So far, this was going pretty much the way Max said it would. He looked at it for a few moments before setting it on his desk.\n\n\"So, Cameron, tell me how we can help the Burnage Agency out today,\" he said. Having gotten Roger's and Veronica's brain feeds, I had already accomplished what I came here to do, and could have simply gotten up and walked out. But I decided to stick to the script as much as possible to see what I could get from them.\n\n\"We're doing background on a claim of property damage filed by one Joseph R. Nelson,\" I said. \"That's your ex-husband, right, Ms. Hartley?\" I asked, looking at Veronica.\n\n\"Yes,\" she said. \"He's my ex-husband. I reverted back to my maiden name after the divorce. Have you talked to him? Do you know where he is?\"\n\n\"I have spoken to him, Ms. Hartley,\" I said. \"At this time he is in an undisclosed location. Apparently, he claims he has reason to fear for his safety. Would you know anything about that?\" Her face paled and she shook her head.",
        "\"No... I don't,\" she said.\n\n\"Mr. Nelson made a number of wild and dubious claims during the divorce,\" Roger said. \"Veronica here was the real victim. He stalked her, threatened her, even went after her sister. He came very close to being arrested and thrown in jail.\"\n\n\"Mr. Nelson said the divorce was contentious,\" I said. \"But I'm not here about that. I'm here specifically to investigate his claim of damage.\"\n\n\"What kind of property damage is he referring to?\" Roger asked.\n\n\"Specifically, a baseball card collection and a stamp collection. Do either of you know anything about that?\"\n\n\"Well, he did have those collections, but they got damaged when a water pipe broke in the house,\" Veronica said.\n\n\"So let me see if I have this right,\" Roger said. \"Mr. Nelson got his little baseball card and stamp collection ruined and he filed a claim for damage. Is that right? I mean, come on. That's something a little kid would have. Not a grown man. Get serious.\"\n\n\"The combined value of those collections were appraised at somewhere just north of $250,000, Mr. Lee,\" I said. \"Some of the stamps in that collection were acquired by his grandfather in Europe during the Second World War. Those stamps can never be replaced. Plus, those collections held a great deal of sentimental value to Mr. Nelson. I'm sure you understand.\"\n\n\"So what does any of that have to do with me or this firm?\" Roger asked.\n\n\"Mr. Nelson says he has reason to believe those collections were deliberately destroyed by his now ex-wife and her lover, someone he believes is an employee of this firm,\" I said. \"Perhaps, even a partner or someone in a management position.\" The two of them looked at each other for a second and I heard him exclaim, \"oh, shit,\" in his mind. I wasn't finished, however.\n\n\"I'm sure you understand as an officer of the court, Mr. Lee, that if that damage was done deliberately it constitutes a felony under California law, specifically, California Penal Code Section 594, given the value of those collections. The last time I looked, that could get someone sent to state prison for up to three years, along with a fine of up to $50,000.\n\n\"And if it's determined that Ms. Hartley conspired with someone else to deliberately destroy Mr. Nelson's property, that makes it a criminal conspiracy under California law, specifically, Section 182 of the penal code,\" I said, pressing the issue. Both of their faces went pale when I said that, but Roger recovered first.\n\n\"I'm an attorney, Cameron,\" he said. \"I'm very well aware of California law.\"\n\n\"Then you understand the gravity of the situation, Mr. Lee,\" I said. \"And as an officer of the court, I'm sure you will cooperate should this become a criminal matter.\"\n\n\"Of course,\" he said. His mind, however, was reeling from what I had just said and he was desperately thinking of ways to weasel out of the situation. \"Is there anything else, Cameron?\"\n\n\"No, Mr. Lee, I have everything I came here for,\" I said. \"You have the number to my office. Please feel free to call if you can think of anything else.\"\n\n\"How long will you be here?\" Roger asked.\n\n\"I'm leaving in the morning,\" I said. He nodded his head.\n\n\"Very well,\" he said. \"If either of us can think of anything, we'll call. If there's anything more you need in this matter, feel free to contact me.\"\n\n\"I will, Mr. Lee,\" I said, standing up. He stood and we shook hands. \"Thank you for the coffee.\" I shook Veronica's hand. \"Good day, Ms. Hartley.\" I turned and left, leaving them both reeling. I could sense the emotional turmoil in both of them and I felt good, having accomplished my goal.\n\nI took the elevator back to the first floor and connected to Roger's mind. Veronica was beside herself with worry.\n\n\"Was he right? Can we go to jail for what we did to Joe's collections?\" she asked.\n\n\"Technically, he's right,\" Roger said. \"But it's a bit more nuanced than that. Don't worry, no one's going to jail for pissing on a childish collection of stamps and baseball cards. Did you know they were worth that much at the time?\"\n\n\"I knew they were worth quite a bit, but I didn't know it was that much,\" she said. I knew she was lying, and I could tell she knew she was lying as well.\n\n\"Then that's our defense,\" he said. \"Call Hammer, have him meet me at the Watering Hole,\" he added, giving her a slip of paper which I presumed had Hammer's number. \"Don't let him give you any shit. I wanna see him immediately, if not sooner. I wanna find out everything I can about this Cameron fucking Drake.\" He punched a button on his office intercom as Veronica called Hammer.\n\n\"Yes, Mr. Lee?\" the receptionist said.\n\n\"Cancel all my appointments for the rest of the day. I'll be out of the office to take care of... personal matters,\" he said.\n\n\"Yes, sir,\" she said. Just then, the elevator doors opened and I was on the first floor. I grabbed my phone, pulled up my Uber app and arranged for a car to pick me up. According to the app, my ride would be here in about 10 minutes.\n\n\"Okay if I wait for my ride? I just ordered an Uber,\" I told the man at the front desk.\n\n\"Sure,\" he said. \"You can wait there if you want,\" he added, pointing to a row of plastic chairs along the front window.\n\n\"Thanks,\" I said, walking to the chairs. When I saw the car stop at the curb, I headed out. When we got to the motel, I spoke to the driver.\n\n\"Say, you know where the Watering Hole is?\" I asked.\n\n\"Uh, yeah, man, it's about maybe 15 or 20 minutes over in that direction, depending on the traffic,\" he said as he pointed out the window. \"You want me to give you a lift over there?\"\n\n\"No, thanks,\" I said. \"I heard someone mention it and was just curious. Maybe next time.\"\n\n\"No problem,\" he said. \"Have a good day now.\"\n\n\"Yeah, you too,\" I said. \"Thanks.\" I headed to my room, set up my laptop and downloaded Roger and Veronica's brain feeds. While the app processed those feeds, I connected to Roger's mind to see what he was up to.\n\nHe was sitting at a table in a small bar sipping a drink when Hammer showed up. He looked up at Hammer and motioned for him to sit. Hammer ordered a beer and looked at Roger.\n\n\"What's up?\" he asked.\n\n\"I have another job for you,\" Roger said, pulling out a photo. I could tell it was of me, taken at the front desk in his building. \"I need to know everything you can get me on Cameron Drake.\" Hammer's eyes grew wide and his face looked pale.\n\n\"Blue eyes, weird little specks?\" Hammer asked.\n\n\"Yeah, you know about him?\" Roger asked.\n\n\"I do. And if you were smart, you'd stay the fuck away from him,\" Hammer said.\n\n\"Why? He's just another man, like you or me. Don't tell me you're scared of him.\"\n\n\"Look, Mr. Lee, I can't explain it, but there's something about that guy that really scares the shit outta me. You know I'm not afraid of any man. But him? Hell, I'd rather tangle with a mob boss than him.\"\n\n\"What makes you say that?\" Roger asked.\n\n\"Like I said, I can't really explain it. You'll probably think I'm crazy, but he has a way of getting into your head, know what I mean?\"\n\n\"No, I don't know what you mean,\" Roger said. \"Spell it out for me. I find it hard to believe anyone could spook 'Sledge' Hammer.\" Hammer took another sip of his beer and let out a long sigh.\n\n\"Alright, but don't say I didn't warn you,\" he said. \"First time I met him was at a hospital where his wife was in a coma. I'll never forget it. I had been assigned to follow him by my boss at the time, Harold Bergstrom.\"\n\n\"You mean, the Chairman of the Board of that financial company who was sentenced to life in prison?\"\n\n\"Yeah, that was him. Anyway, he wanted me to find out what I could about Drake. I didn't ask why, and it didn't really matter to me. Anyway, I was sitting in the hospital coffee shop when Drake sat down right in front of me. We said a few words, then his eyes... They flashed. Red. Like something you'd see in a science fiction movie or something. Then my head felt like it was gonna explode. Weirdest shit I ever experienced. He told me to leave him and his wife alone.\n\n\"Told me to leave town. After that, I believed him, so I quit Bergstrom and went east. After Bergstrom got sent to the slammer, he called me. Said he had a job for me. Wanted me to take out Drake and his wife. Pro bono, like you lawyers do sometimes.\n\n\"I told him to give me a couple months or so and left. When I got back to my room, Drake just appeared right out of thin air. Told me to go back east and forget about him and his wife. Or else. I told him Bergstrom has lots of friends, but he said Bergstrom would either be dead or in a padded cell in a week.\n\n\"At first I thought he was just bullshittin' me. But sure enough, Bergstrom was taken to the prison psych ward less than a week later, just like Drake said. Claimed the spiders were coming after him. A contact of mine in the prison said Bergstrom went nuts in the chow hall, started yelling about spiders and stabbing himself with a fork trying to kill them. Last I heard, he's still there.\n\n\"So no, I'm not about to fuck with Cameron Drake. You want someone to look into him, you'll have to find someone else.\"\n\n\"I... see,\" Roger said, digesting what Hammer just said. \"Find anything new about Nelson?\"\n\n\"No, nothing. I've been around his place, but there's another investigator keeping an eye on things. I don't know who he works for, but I'm trying to find out.\"\n\n\"Interesting,\" Roger said.\n\n\"You want me to lean on some of his co-workers?\" Hammer asked with a wicked smile.\n\n\"No,\" Roger said. \"This isn't Atlantic City. We know Nelson will be back. I have some things going on over the next six weeks and the last thing I need is a lot of unwanted attention. For now, just lay low. I have some other things for you to do in the meantime so you're still on the payroll.\"\n\n\"Alright. You're the boss,\" Hammer said.\n\n\"That's right,\" Roger said. \"And don't you ever forget that.\" I disconnected from his mind and thought about what I had witnessed. I connected with Ginger and saw her in the kitchen, making herself something to eat.\n\n\"Hey, you,\" I said in her mind, causing her to jump.\n\n\"Dammit, Cam, you almost made me pee myself,\" she said.\n\n\"Sorry, just wanted to check in and say hi,\" I told her.\n\n\"Well, hi right back at ya,\" she said. \"How's it going?\"\n\n\"I got what I came here for. How's it going with you?\"\n\n\"I'm doing alright, just miss you. Sorry about earlier.\"\n\n\"That's alright,\" I said. \"I understand.\"\n\n\"I know it sounds a bit hypocritical after what I put you through, but it pissed me off the way that girl was looking at you.\"\n\n\"We talked about this, remember? Did I give you any reason to think I'd fall for her or something?\"\n\n\"No, it's just... I don't know. Maybe it's my hormones or something. I'm sorry, really I am. I know you'd never screw around on me,\" she said.\n\n\"That's right,\" I said. \"I'd never mess around on you. Ever. You're my wife and I love you.\"\n\n\"I love you too,\" she said. \"I'm just... afraid.\"\n\n\"You've got nothing to be scared of, sweetheart,\" I said. \"Maybe we need to work on our communication, you know?\"\n\n\"Maybe,\" she said. \"I just love you so much and I don't want to lose you.\"\n\n\"You won't,\" I said. \"Max is gonna be back soon, and we'll get something to eat and call it a day. I'll see you when we get back tomorrow, okay? We'll talk more then.\"\n\n\"Actually, I was kinda hoping to see you tonight. You know, after we're both in bed,\" she said with a mischievous grin. I grinned back.\n\n\"I like the sound of that,\" I said. \"I'll see you then.\" We disconnected and I heard a knock on the door. I looked through the peephole and saw Max, so I let him in.\n\n\"I got it,\" he said, waving a manila envelope in the air.\n\n\"Joe's divorce file? The whole thing?\" I asked.\n\n\"Every bit of it,\" he said.\n\n\"I thought it was sealed. How'd you manage that?\" I asked.\n\n\"I spoke to a judge I helped out once. He was more than happy to oblige, in fact,\" Max said with a smile.\n\n\"Have you looked at it yet?\" I asked.\n\n\"I glanced at it, a lot of legal gobbedegook, mostly. I did notice one thing, though. Veronica's attorney of record just happened to be Roger Lee himself. He had his underlings do most of the dirty work, though.\"\n\n\"Veronica's lover,\" I said.\n\n\"Yup,\" Max said. \"And co-conspirator.\"\n\n\"He could get disbarred for that, couldn't he?\" I asked.\n\n\"The last time I looked, yes. But I'm not a lawyer, and this is California, so I can't really say for sure. I'll leave that for the legal beagles at Camp Rollins. How'd you make out?\"\n\n\"Got everything I came for,\" I said. \"Got both Roger's and Veronica's brain feeds.\"\n\n\"Look at 'em yet?\"\n\n\"No, not yet. I listened in on a conversation between Lee and Hammer,\" I said. \"Looks like Lee's going to back off Joe for a while, at least until he gets back from the camp.\"\n\n\"Does he know where Joe is?\"\n\n\"No idea,\" I said. \"Hammer wasn't able to put it together, either.\"\n\n\"Good. That'll give the lawyers up north time to work their magic, then,\" Max said. \"And it'll give you time to dig through their memories.\"\n\n\"Yeah, it will,\" I said.\n\n\"Better you than me,\" he said sarcastically. \"In the meantime, keep a loose tab on Lee, Hammer and Veronica.\"\n\n\"I will,\" I said.\n\n\"I don't know about you but I could go for something to eat.\"\n\n\"Yeah, I could eat something as well.\"\n\n\"I don't like the idea of leaving this stuff behind, though,\" he said.\n\n\"Then let's call something in,\" I said. \"I've got Uber Eats. Might as well put it to good use.\" We ordered a meal from Olive Garden and enjoyed it as we watched a movie on the television in my room. When the movie was over, Max yawned and I realized how tired I was. We stepped outside for a quick smoke as we finished our tea.\n\n\"I'm gonna hit the rack,\" Max said when we finished. \"Our flight leaves pretty early, so make sure you're up in time.\"\n\n\"No problem,\" I said as I went back into my room. I cleaned up from our meal and got ready for bed. I was exhausted when I laid down and thought of Ginger as I started falling asleep.\n\n\"Not so fast, mister,\" I heard in my mind. I looked and saw Ginger in our bed, completely naked, her legs spread wide. \"I've been wanting to do this for a while.\"\n\n\"What's that?\" I asked.\n\n\"This,\" she said as she ran her fingers through her shaved lower lips. \"Just lay there and watch me. I'm going to be your after-movie entertainment.\" I watched, mesmerized by what she was doing to herself. I had never seen her masturbate like this before and I have to admit, I really liked watching her do this.\n\n\"Like what you see, sailor?\" she asked with a wicked smile.\n\n\"I love it,\" I said. Her smile grew wider as she pulled out a large dildo from her nightstand. \"Where did you get that?\" I asked.\n\n\"Bought it online,\" she said as she got on her knees. \"Watch this.\" As I looked, she impaled herself on the thing as she looked me in the eyes. \"God, I wish you were here. I'd fuck your brains out right now. I need you in me right now,\" she moaned as she went up and down on the fake cock. \"Go ahead. Grab your cock. Let me watch. Show me how turned on you are.\"\n\nI did as she asked and before long, both of us were about to finish as we watched the other. I saw her eyes flash and I knew she had experienced an orgasm. But she wasn't finished, and kept on pounding herself with the dildo.\n\n\"Cum with me,\" she cried. \"Please.\" I stroked myself as I watched her fuck herself with the thing. Then it happened. She squirted at the same time her eyes flashed a bright pink. She threw her head back and let out a wild cry. I erupted just as she looked back at me.\n\n\"Oops,\" she said sheepishly as I cleaned myself up. \"I wasn't expecting that. Guess I'll have to change the sheets before I go to sleep. Oh well. Did you enjoy that?\"\n\n\"I did,\" I told her. \"What made you decide to do this?\"\n\n\"I thought we'd try something a bit different tonight,\" she said. \"Sleep well, my love. Tomorrow, I plan to wear you out.\"\n\n\"Sounds like a plan to me,\" I told her. We exchanged kisses and said our good-nights. I slept like a baby that night, waking up at 6:00 am the next morning. Max and I drove to the airport and said goodbye to Orange County. When Max dropped me off at the house, he helped me carry my things inside and handed me a card with the address of the gallery where he and Adrestia stayed.\n\n\"Adrestia's expecting you two about 1:00 in the afternoon,\" he said. \"No need to dress up. Just come casual.\"\n\n\"We'll see you then,\" I said. Ginger rocked my universe that night, and I made sure her eyes flashed several times before we fell asleep in each other's arms. The next morning, I caught up some of the chores around the house and we headed out around 12:00. We got to the address Max gave me about 45 minutes later.\n\nThe large Victorian house sat back from the road a bit. It looked old but well-maintained. The yards were neatly trimmed and full of trees and bushes. I parked the car and we went to the door. It opened before I could knock and we saw Adrestia's face peering out from inside.\n\n\"Please come inside,\" she said. \"We've been expecting you.\" We went inside and looked around. The inside, much like the exterior, seemed old but very well-maintained. It had a bit of a gothic tone to it, reminding me of something I had seen in an old movie.\n\nI couldn't help but notice how highly polished the wooden panels were. I figured Adrestia probably spent much of her day dusting the place down to keep it clean. \"I hope you don't mind, but I planned on a late lunch,\" she said as we walked inside.\n\n\"That's fine with us,\" Ginger said. \"This is a beautiful place,\" she added, looking around.\n\n\"Thank you,\" Adrestia said. \"It can be a pain at times to keep clean.\"\n\n\"I'll bet,\" Ginger said.\n\n\"Please, come this way, I'll show you the main part of the gallery,\" Adrestia said with a smile.\n\n\"Isn't Max joining us?\" I asked.\n\n\"He'll be along shortly,\" she said. \"He's finishing up a couple things for me.\" We walked to a large doorway, and Adrestia stopped before we went through.\n\n\"I should warn you in advance that you may find some of these portraits a bit... disturbing. I must also respectfully ask that you not touch any of them. Some of them are very old and quite... fragile,\" she said. \"And there could be other... consequences.\"\n\n\"Of course,\" I said, wondering what she meant by \"consequences.\" She smiled and walked through the doorway. We followed her and I was stunned when she turned the lights on. There, on each side of the wide corridor, were paintings, three high on each wall for as far as the eye could see. It was almost as if the interior of the house was larger than the exterior. How was this possible, I asked myself. Ginger thought the same thing.\n\nI looked at the portraits and noticed they included men and women of all ages, races and walks of life. Some were obviously rich and powerful. All of them, though, appeared to be in a state of extreme distress and some images seemed to be taken shortly before death. I had never seen such a macabre collection of pain and anguish in my entire life.\n\nOne portrait showed a woman in mid-air, her eyes wide and her mouth open in a silent scream. Looking closer, I could see she was falling. Another portrait showed a woman falling into what looked like the maw of a giant shark. Her eyes were wide and like the previous portrait, her mouth was open in an eternal scream. Similar portraits lined both corridors. My God, I thought to myself. What kind of collection is this?\n\n\"A one-of-a-kind collection,\" Adrestia said as if reading my thoughts. \"Not exactly for the squeamish.\"\n\n\"Who are these people?\" I asked.\n\n\"Cheaters. Narcissists. People who spent their lives hurting others. Mostly the ones who loved them the most,\" she said.\n\n\"So they were real people?\" I asked.\n\n\"Yes, they were,\" she said. \"Very real. Like this one,\" she added, pointing to an image of a man in Roman garb being stabbed by what looked like soldiers.",
        "\"Who was that?\" I asked.\n\n\"His real name was Gaius Caesar Augustus Germanicus. History knows him as Caligula, the cruelest emperor of Rome,\" she said. \"He was a ruthless, wanton killer. Suffered from syphilis. Even killed members of his own family. The stupid fool even declared war on Neptune, the god of the sea. On January 24, 41 AD, he, his wife and daughter were killed by conspirators who wanted to restore the Roman Republic. Stabbed 30 times.\"\n\n\"And you had a hand in that?\" I asked, shocked. She looked at me with a smile that reminded me of the Mona Lisa.\n\n\"I had a... hand in all that you see here,\" she said quietly.\n\n\"And these paintings captured their last moments alive?\" I asked.\n\n\"In a manner of speaking, yes,\" she said sadly. \"But only their bodies died. The thing that made them what they were -- call it their spirit or soul, if you wish -- remains here, forever locked inside these portraits, condemned to experience their final moments over and over again. I suppose you could say it's a hell of their own making.\" I looked at Ginger and realized she was just as shocked as I. I looked back at Adrestia.\n\n\"Why are you telling us all this?\" I asked.\n\n\"Because, Cameron Drake, you and Ginger are now part of something much larger than yourselves. And you deserve to know the truth. Not everything is as it seems, you know,\" she said.\n\n\"So you're not really a doctor, then?\" I asked.\n\n\"Oh, yes, I have multiple doctorates in multiple disciplines,\" she said.\n\n\"So, who are you, really?\" I asked.\n\n\"Let me show you,\" she said. Leaning forward, she took my head in her small hands. My mind suddenly exploded with images -- strange images of large dark mountains, lightning and thunder flashing in a sky filled with strange winged beings. I saw a large figure in a robe with a double-edged sword. It was Adrestia.\n\nBeneath her sandal-clad feet were snakes struggling to get out from under her. Around her were people undergoing various forms of punishment. I saw one woman screaming as she sat helpless in a pot of boiling oil with large creatures urinating on her.\n\nThen it hit me. She was timeless, an immortal creature. I reeled as she pulled back from me.\n\n\"I have been called many things over the years by many civilizations,\" she said. \"Tyr and Nemesis are but two of the names I have been given by mortals. You may recognize my image as that of Justice, but I am much, much more than that. I am Retribution. Vengeance. And there is no escape for those who fall into my clutches. Caligula and all these others can attest to that.\" Now I knew why I couldn't download her brain feed. She was literally as old as history itself.\n\n\"And Max knows all of this?\" I asked, shocked.\n\n\"He knows everything,\" she said. \"You see, Max is more than just my soul mate and my lover. He is my rock. He is the one who keeps me sane.\"\n\n\"Are there others like you out there?\" I asked.\n\n\"There is only one like me,\" she said. \"Just as there is only one like you. But to answer your question, yes, there are others. And you will meet them in due course. There is one part of the gallery I would like to show you now. Please, follow me.\"\n\nWe followed her to a staircase and climbed to the next level. When we got there, she turned to us.\n\n\"This is a relatively new section,\" she said. \"So there aren't as many portraits here as below.\" We walked into a mostly empty corridor and we saw Max hanging something on the wall. Adrestia was right. There were only a couple portraits in this corridor, the first one of a couple in bed looking at each other. It was clear from the portrait they were very much in love with each other. A second portrait showed another couple happily dancing in a ballroom. The third was covered. This was where Max stood.\n\n\"I got it up for you, dear,\" he told her. She smiled and kissed him on the cheek.\n\n\"Thank you so much, sweetheart,\" she said. She turned to us. \"This is your portrait. I hope you approve.\" She pulled the cover off and I was shocked. There, in the picture, were two people embracing each other as they lay in a hammock strung between two large palm trees.\n\nAs I looked, I recognized the scene -- it was the beach scene I dreamed about earlier. Ginger and I were a bit older, but still in good shape. In the distance were several people playing in the surf. The two of us smiled as we gazed upon each other in the hammock. Looking closer, I saw that our eyes were glowing.\n\n\"What do you think?\" Adrestia asked.\n\n\"It's very nice,\" I said. \"But this hasn't happened yet.\"\n\n\"Yes, it has,\" she said. \"In here,\" she added, tapping my head with her finger. \"And I have every reason to believe it will happen in real life.\" I looked at Ginger, who smiled as she took in the picture.\n\n\"What do you think?\" I asked her.\n\n\"I love it,\" she said. \"Who are those people in the background? Are those tourists or something?\"\n\n\"You'll find out in time,\" Adrestia said. \"Now, why don't we go downstairs and have something to eat?\" We went downstairs into their dining room and Adrestia pulled a large bowl out of her refrigerator.\n\n\"I rarely get to prepare any meals, so I hope you enjoy this,\" she said as she set the bowl on the table. We each spooned some of what she had made onto our plates and Max poured us each a glass of wine.\n\n\"This looks delicious,\" Ginger said.\n\n\"It's a Mediterranean shrimp and pasta salad,\" Adrestia said. \"I hope you like it. I enjoy garlic, so I added a more than normal.\"\n\n\"Anything you make is delicious, dear,\" Max said with a smile.\n\n\"I could serve you a mud pie and you'd say it was delicious,\" she quipped.\n\n\"Probably true,\" he said. We all laughed at that. We talked as we enjoyed our meal and Max regaled us with stories of the cases they had worked. I could tell they were very much in love with each other. Adrestia told us of a few cases she had worked prior to meeting Max and I found her stories intriguing.\n\n\"Let me tell you, I've seen this woman behind a bench, and trust me, you don't ever want to get on her bad side,\" Max said. Adrestia smiled at that.\n\n\"So, you know about every marriage?\" I asked. Adrestia nodded her head.\n\n\"Yes, it's part of my job,\" she said.\n\n\"Why don't you get involved in all of the problem marriages, then?\" I asked.\n\n\"Fair question,\" she said. \"I learned early on to be particular about the cases I get directly involved with. I have a strict protocol I use now, so I wait until I'm asked.\"\n\n\"And how would one go about asking?\" I asked.\n\n\"There are lots of ways,\" she said. \"I have responded to direct inquiries in the past and sometimes still do. Regardless of how it happens, I only get involved when someone asks for justice.\" She looked at me as though she knew what I was thinking. \"In your case, I knew what was going on, but you never asked for help. In a way, I'm glad you didn't.\"\n\n\"Oh? Why?\" Ginger asked. Adrestia looked at her sadly.\n\n\"Because, Ginger, you and the others might very well have found yourselves on my lower gallery wall,\" Adrestia said. \"And you would not have enjoyed it.\" Ginger and I both paled at that. \"As it happened, the H'tq'uiy stepped in and, well, the rest is history.\"\n\n\"You know about the H'tq'uiy?\" I asked.\n\n\"I know of them, but I cannot tell you much about them. They're outside my jurisdiction,\" she said.\n\n\"Outside your jurisdiction?\" I asked.\n\n\"Yes. Earth,\" she said. \"I will tell you this. The H'tq'uiy you know as Smith and Jones seem to be trustworthy. I don't believe you have anything to fear from them.\"\n\n\"That's good to know,\" I said.\n\n\"So, when are you two going back up north?\" Adrestia asked Max, eager to change the subject.\n\n\"We're going back up week after next,\" he said.\n\n\"Oh yes, the bitch-burning.\" She turned to Ginger. \"Just wait until you see this.\"\n\n\"What's a bitch-burning?\" Ginger asked.\n\n\"It's a little ceremony to help the students vent their anger before they come back to the real world,\" Max said. \"Get a certain amount of closure. I really can't tell you any more than that, sorry. I'm sworn to secrecy.\"\n\n\"I guess you'll just have to see it when I do, dear,\" I told Ginger. We finished our meal, said our goodbyes and headed home. I drove in silence, mostly, my mind reeling at what we had learned. Ginger interrupted my thoughts.\n\n\"Are you okay? You seem troubled,\" she said.\n\n\"Just trying to wrap my head around everything Adrestia told us today,\" I said. \"I can't help but wonder what it is we're involved with. I mean, that gallery with all those people...\"\n\n\"I know,\" she said. \"And what she said about me possibly being on the wall of her lower gallery. It scares me just a bit.\"\n\n\"Me too,\" I said. \"Makes me kinda feel like we're living in some sort of Twilight Zone or something.\"\n\n\"You think that picture of us on that hammock will really happen?\" she asked.\n\n\"It did seem rather nice and peaceful, didn't it?\"\n\n\"Yes, it did,\" she said. \"Not to mention fun.\"\n\n\"Yeah, I kinda like the idea of making love to you on a beach like that,\" I said, causing her to giggle.\n\nI didn't have much time to ponder the issue as I had a lot to do before Max and I went back north. I spent the next week setting up a small cluster of servers to hold the brain feeds I had collected, then set up a powerful desktop with the brain feed application for Ginger to use. I also set up a backup device to save everything on a nightly basis.\n\nOnce done and tested, I trained Ginger on the application itself and walked her through it with the feed I had gotten from Veronica and Roger. She picked up on it very quickly and I was amazed at how she was able to pick out little details I would have overlooked. I could also tell that giving her this level of access to our work had a profound impact on her. It made her feel needed. More than that, it made her feel -- trusted.\n\nI turned her loose on the feeds and spent time getting ahead on my courses. I also spent time at Max's office finishing up the loose ends of a couple other cases he had on his plate. Smith and Jones came by to check up on us and put us through our paces, and I had my weekly martial arts class to attend.\n\nThe night before Max and I went back to Idaho, Ginger handed me a flash drive containing videos she had copied from the two brain feeds. She also handed me a folder containing notes of the things she discovered. I glanced through them and saw that she had organized them all by filename, date and time, with bullet points for each video clip. I was very impressed with her work and hoped it would help Joe's lawyers.\n\nOne of the things she found was the exact time Veronica and Roger began their sexual relationship. I knew from my coursework this would be important to Joe's lawyer. If the relationship began after he became her lawyer of record, it could spell the end of his legal career and he could be disbarred. She also copied video of the two of them plotting against Joe.\n\nWe got to the camp and settled in. After checking in with the front office, we went to see the lawyer who would be handling Joe's case. He smiled as he thumbed through the documents we gave him. I handed him the flash drive and he glanced through Ginger's notes and executive summary.\n\n\"Well?\" Max asked.\n\n\"I think we have enough here to do the job,\" the lawyer said. \"I see a potential civil and criminal case here. It'll take me a while to put it all together, but this should do the trick.\"\n\n\"How long you think it'll take to work that all up?\" I asked.\n\n\"I'd say the better part of the month,\" he told us. \"I'll have to coordinate with the authorities in Orange County, of course.\"\n\n\"Good,\" Max said. \"That will work just fine. Thanks.\"\n\n\"No, thank you for getting this to me,\" the lawyer said. From there, we ate lunch and spoke with John and Gunny Rob. It was good seeing them again and we caught up on things over a beer at the staff lounge.\n\n\"Got a question for ya, Gunny,\" Max said.\n\n\"Shoot,\" Gunny Rob said in response.\n\n\"You still looking to get rid of that rock out behind the guest quarters?\"\n\n\"Yeah, we've been wanting that outta there for a while. Why?\" Gunny Rob asked. I wondered where Max was going with this.\n\n\"I think I may have a solution, if you're okay with it,\" Max said, giving me a glance.\n\n\"Yeah, sure. Just don't damage anything in the process,\" Gunny said.\n\n\"I don't think that'll be a problem,\" Max said. \"Do you, Cam?\"\n\n\"Uh, no, I don't think so,\" I said.\n\n\"Good,\" Max said with a sly smile. When it was time for the bitch-burning, Max and I made our way to a small field behind one of the student barracks. A class of 15 students had prepared a straw effigy, tied it to a wooden pole with wood and kindling piled at the base and attached photos of the women who had cheated and hurt them. I felt Ginger's presence in my mind.\n\n\"Are you seeing this?\" I asked her in my mind.\n\n\"Yes,\" she said. An instructor stood before the assembled group.\n\n\"Winston! Front and center,\" the instructor commanded. A student ran forward and stood at attention in front of the instructor, who handed him a lit torch.\n\n\"Burn the bitch!\" the instructor commanded.\n\n\"Sir! Burn the bitch! Aye, aye, sir!\" Winston yelled in response. He lit the pile of wood, and the fire quickly engulfed the straw figure. The students began chanting, \"burn, burn, burn!\" As the figure burned, they went wild, pumping their fists into the air, howling and chanting. When the figure fell on the ground, the students danced and chanted and some urinated on the figure. This continued until the figure was reduced to ashes.\n\n\"My God,\" Ginger gasped. \"That's so... primitive. So much hatred and anger. Is that what you wanted to do to me?\"\n\n\"At first, yeah,\" I responded.\n\n\"I'm... sorry,\" she said softly. I could hear her sobbing. \"I'll never, ever hurt you like that again.\"\n\n\"I know,\" I said, looking at the pile of ashes on the ground.\n\n\"I love you, Cameron,\" she said after a few moments.\n\n\"I love you too,\" I said. After the ceremony was over, Max and I went back to the guest quarters.\n\n\"Meet me out back in a few minutes,\" Max said before we entered our rooms.\n\n\"Yeah, sure,\" I said. \"Everything okay?\"\n\n\"Everything's fine,\" he said. I went to the bathroom and did my business, then met Max out back by the large rock outcropping. He held two cups of hot tea and handed one to me.\n\n\"So, what's up?\" I asked when I saw him. He pointed at the rock.\n\n\"I wanna see what you can do to this rock,\" he said. I looked at the rock, which had to be a good six or seven feet high.\n\n\"Are you really sure about this?\" I asked. He nodded his head.\n\n\"Yeah, I'm sure,\" he said.\n\n\"Alright, but you might want to stand back a bit,\" I said. He nodded his head and stepped back a few feet. I set my tea down, looked at the rock and recalled the training I got from Smith and Jones. I imagined the rock reduced to a pile of dust on the ground and exercised my eye muscles. I felt the pressure in my head and focused on the center of the rock. All of this only took a matter of a second or two.\n\nMy vision turned red, and I knew my eyes would appear to be red from Max's point of view. I released the pressure in my head as I aimed for the center of the large boulder. It cracked, glowed red, then exploded inside, sending bits of rock and dust everywhere. After it settled on the ground, there were only a few piles of rock dust laying on the ground where the boulder had been.\n\n\"Oh my God,\" Max said as he surveyed the damage. \"And you did that just with your mind?\"\n\n\"Yeah,\" I said.\n\n\"Can you control the intensity of this?\" he asked.\n\n\"I'm getting better at it.\" We wiped the rock dust off the bench and sat down. He pulled out his cigarettes and offered one to me, which I accepted.\n\n\"What about Ginger? Can she do this?\" he asked after lighting our smokes. I nodded my head.\n\n\"Yeah, but her ability's not quite as developed as mine. Yet.\"\n\n\"And the kids? Ginger told Adrestia about the twins and she told me,\" he said.\n\n\"Don't know yet,\" I said. \"Smith and Jones both say they probably will. We won't know just yet until after they're born.\"\n\n\"Well, it sounds like your life is going to get... interesting,\" Max said.\n\n\"That's one way of putting it,\" I said.\n\n\"Maybe the idea of a tropical island isn't such a bad one after all,\" Max said after a few moments. I chuckled at that.\n\n\"Maybe,\" I said. \"We'll just have to see how things go. By the way, I've been meaning to ask you something.\"\n\n\"What's that?\"\n\n\"What's it like being married to an immortal goddess?\" I asked. He looked at me for a few moments before saying anything.\n\n\"I'd be lying if I told you it doesn't have its unique set of challenges,\" he said. \"But what relationship doesn't have challenges?\"\n\n\"Good point,\" I said.\n\n\"Tell you the truth, I've never been happier or more content in my entire life,\" he said. \"Sure, we have disagreements from time to time, but we talk things through and we never go to sleep upset with each other.\"\n\n\"But what about her abilities? Don't those ever get in the way sometimes?\" I asked.\n\n\"We established boundaries with each other a long time ago. She knows I'm a frail flawed mortal human and prone to making mistakes. She's okay with that so long as I'm honest and faithful,\" he said. \"And I'm more than okay with what she can do. In fact, she's saved my ass more times than I care to admit.\" I absorbed what he said as I smoked my cigarette and drank my tea,\n\n\"So, what do we do about Joe?\" I asked.\n\n\"We did what we set out to do,\" he told me. \"It's in the hands of the lawyers now. The only thing we need to do is get him home safely when he finishes his training. In the meantime, continue to keep tabs on Hammer, Lee and Veronica, in case they decide to take preemptive action.\"\n\n\"Sounds like a plan,\" I said. We went to bed and left the next morning after apologizing to Gunny Rob for the rock. He laughed and thanked us for taking care of it.\n\n\"I'd ask how you managed to do that, but I have a feeling I don't really want to know,\" he said.\n\nWhen Max dropped me at the house, Ginger met me at the door, wearing her wedding gown.\n\n\"What's this?\" I asked.\n\n\"I looked at my brain feed while you were gone,\" she said. \"I hope you don't mind.\"\n\n\"Of course not,\" I said.\n\n\"I wanted to relive our wedding night,\" she said. \"Maybe repeat our wedding vows.\"\n\n\"I like that idea. There's only one problem,\" I said.\n\n\"What's that?\" she asked, looking stricken.\n\n\"You're more beautiful now than you were then,\" I told her. Tears fell down her face as she wrapped her arms around me.\n\n\"Oh, Cam,\" she whispered. \"I love you so very, very much. Make love to me the way you did that night, please.\"\n\n\"As you wish, my goddess,\" I told her, picking her up. That night, we made each other's eyes flash multiple times as our bodies merged into their own special space-time continuum.\n\nThe next month went by pretty quick. Ginger worked part days, then came home to work with me. I organized things as best I could, but left the details to Ginger, who was far better at that than me. When I wasn't working with Max, I worked through my online courses.\n\nWe had our scheduled workouts with Smith and Jones, both of whom heaped praise on Ginger for the progress she had made. They also confirmed what the doctor already told her -- the children were both healthy and developing as they should. I continued taking my weekly martial arts classes, which I found helped me maintain a sense of mental discipline.\n\nGinger and I also talked a great deal about our situation. I remembered what Max told me at the camp and suggested setting some boundaries. After discussing it, we agreed not to probe each other's mind without an invitation -- unless either of us gave cause to do otherwise. I realized, of course, that if what Smith and Jones said was true -- that our minds and thoughts would be linked as one -- that all of this could be academic.",
        "The advantage of having our minds linked is that we no longer had secrets, like what she had with Wheeler. The disadvantage was that we no longer had any secrets, meaning it would be impossible to surprise the other the way we liked to do for our anniversary and on special holidays. My God, I thought, a fellow could go crazy thinking about this stuff.\n\nWe agreed that we would instantly know if the other was being deliberately deceptive or underhanded, so there would be no need for constant monitoring of the other. I felt much better about the situation after that, and I could tell she did as well.\n\nI also kept a loose tab on the terrible three in Orange County. About halfway into the month, I connected with them as Hammer and Roger were discussing Joe.\n\n\"I found your boy, Nelson,\" Hammer said. Roger's eyes lit up in anticipation.\n\n\"Oh?\" he asked. \"How did you manage that?\"\n\n\"Piece of cake,\" Hammer said. \"I caught up with one of his co-workers. After a few beers, he sang like a canary.\"\n\n\"So, where is he?\" Roger asked.\n\n\"In Idaho,\" Hammer said.\n\n\"Idaho? What the hell's up there?\" Roger asked.\n\n\"He's at a camp for men who have been cuckolded,\" Hammer said.\n\n\"No shit?\" Roger asked, laughing. \"What do they do? Sit around a campfire in their bearskins, gnawing on potatoes while they connect with their inner wimp or something? Hah hah hah.\"\n\n\"It's not that kind of camp,\" Hammer said. \"You ever see any of those movies about guys in Marine Corps boot camp?\"\n\n\"One or two,\" Roger said. \"Why?\"\n\n\"Well, multiple that by about 50, and that's what this place is like,\" Hammer said.\n\n\"How do you know? You ever been there?\"\n\n\"No, but I know a few guys who have,\" Hammer said. \"They may be wimps going in, but they're stone-cold hard-asses coming out. They'd just as soon rip your dick off and shove it up your ass as to look at ya.\"\n\n\"And you think Nelson will come after me when he does?\"\n\n\"Quite possible,\" Hammer said. \"Especially if he thinks you're the one who fucked him over.\"\n\n\"Well, I am the one who fucked him over,\" Roger said. \"But that's beside the point. Nelson's a pussy cat. There's nothing he can do to me. I'll get a restraining order on him. That should do the trick.\n\n\"You don't get it,\" Hammer said. \"These guys don't give a shit about a piece of paper. And as for being a pussy cat, well, I guarantee you he won't be one coming out.\"\n\n\"What do you mean?\" Roger asked, dropping the arrogant mask.\n\n\"They turn these guys into... monsters or something,\" Hammer said. \"One of the guys I know who went to that camp went after the man who cuckolded him, and really messed him up bad. Just thinking about it gives me the chills. Laughed the whole time he did it. I'm tellin' ya, these guys are fucking brutal.\" Roger's face turned white.\n\n\"I guess you'd better go up there and take care of him, then,\" he said. Hammer shook his head.\n\n\"Can't get into that place. I know. I've tried,\" he said.\n\n\"When is he getting out of there?\" Roger asked.\n\n\"Last day of the month,\" Hammer said.\n\n\"That's the day of the awards dinner,\" Roger said. \"Alright, we'll just have to be careful. I want you to join me and Veronica at the dinner. Keep an eye out.\"\n\n\"Alright,\" Hammer said. I disconnected and called Max to let him know. He was concerned, but didn't think anything would come of it.\n\n\"Still, I'd feel better if the camp knew. I'll take care of that. You keep an eye on those three anyway,\" he said.\n\n\"Got it,\" I said.\n\n\"I'll make arrangements for the two of us to collect Joe when he graduates. Make sure he gets home in one piece,\" Max said. We ended the call and I went back to my studies.\n\nTwo weeks later, we went back to Idaho. When Max picked me up, I noticed a ring with a blue stone on his right hand. I hadn't seen it before, so I asked him about it.\n\n\"A little gift from Adrestia,\" he said. \"Just in case we need to make a hasty retreat.\"\n\nWe spoke to Joe's attorney who briefed us on what he had done with the case. From listening to the attorney, there were a number of conflicts of interest in the divorce, and the information we provided was enough to get the attention of the local prosecuting attorney's office. He didn't say any more than that but I sensed something was in the works for Roger and Veronica.\n\nWe got to watch Joe participate in his bitch-burning ceremony, and was part of the audience at his graduation the next day. After he shook hands with his instructor, John and Gunny Rob, he collected his small bag and joined us in the rental car.\n\n\"What's the plan?\" he asked.\n\n\"We're going to take you home, unless there's someplace else you'd rather be,\" Max said.\n\n\"Actually, there is,\" Joe said. \"I'd like to go to the Anaheim Convention Center if that's alright with the two of you.\"\n\n\"What's going on there?\" I asked.\n\n\"Roger Lee is going to be named the man of the year by some big business group,\" Joe said. \"I'd like to be there to give my regards.\"\n\n\"Are you sure that's wise?\" Max asked.\n\n\"No, I'm not, but I really don't care,\" he said. Max chuckled at that.\n\n\"Alright,\" Max said. \"Anaheim Convention Center it is.\"\n\n\"I'll get an Uber to meet us at the airport,\" I said, pulling out my phone. After I made the arrangements, I connected with Joe's mind to see what he was planning. He intended to shame Roger at the ceremony in front of as many people as he could. I wasn't sure I liked what he had in mind, but I understood how he felt and figured he owed it to himself to publicly face the man who destroyed his life and marriage.\n\n\"Mind if I see your phone?\" I asked him.\n\n\"No problem,\" he said, handing it over to me. I already knew what he wanted to do, so I copied selected audio from my laptop to his phone. I showed Joe what I had done and saw a smile spread across his face.\n\n\"Perfect,\" he said. \"Thanks.\" We got to the airport and met our Uber outside the terminal. Traffic between the airport and the convention center was quite heavy and it took us quite a while to reach our destination. By the time we got there, the ceremony was well under way, but that didn't stop Joe.\n\n\"Don't go anywhere. We'll be back,\" Max told the Uber driver in a voice I knew would make him obey.\n\n\"Sure thing,\" he said, turning the car off.\n\nWe got out and followed him to the front doors and entered the center. We found where the ceremony was taking place and headed out. Max and I nearly had to run to keep up with Joe, who apparently knew exactly where he was going. When we caught up with him, he was talking to a doorman in a tuxedo. The man looked at Joe's pressed denim and sneered.\n\n\"I'm sorry sir, this is a black tie affair,\" he said haughtily. Joe nodded his head.\n\n\"Of course it is,\" he said. Suddenly, he reached out and grabbed the doorman's tie and crammed it in his trouser pocket. \"There's my black tie. Thank you.\" We followed him as he headed for the door.\n\n\"Sir, these gentlemen can't go with you,\" the tieless doorman blustered. Joe looked back at him.\n\n\"These gentlemen are with me. You got a problem with that, dickhead?\" The look on Joe's face convinced the doorman to let it go. He waved his hands in front of him.\n\n\"No sir,\" he said. \"Enjoy your evening.\"\n\n\"Thank you,\" Joe said, his face red. We went into the darkened room and stood along the back wall. Roger was on stage, being introduced by a somewhat obese man in a tuxedo that looked to be one or two sizes too small for him. Roger stepped into the spotlight and gave a crooked smile before launching into his own speech.\n\n\"I've always been raised to think of others before myself,\" he told the group, heaping praises on himself. As Clint Eastwood once said in an old \"Dirty Harry\" movie, he was clearly a legend in his own mind. After a minute or two of this, Joe shook his head and spoke out loud enough for everyone in the large room to hear him.\n\n\"LIAR! You're a goddamned liar,\" he exclaimed, causing some to gasp and look at him in shock. \"You've always been nothing but a cheat, a thief and a liar,\" Joe added.\n\n\"Who is that?\" Roger asked from the stage, shielding his eyes with one hand.\n\n\"Here's your man of the year,\" Joe yelled, his voice dripping with hatred. He pulled out his phone, maxxed out the volume, then held it high so the microphones hanging from the ceiling could capture the audio. He played one of the audio clips I copied earlier.\n\n\"I'm going to fuck your wife and take her from you. Hah hah hah,\" the voice on the recording said. Gasps were heard throughout the room as the voice on the audio was clearly Roger's. Veronica stood and looked in our direction.\n\n\"Joe, is that you?\" she asked. Hammer was sitting at the table with her and stood, turning around. I saw him reach into his jacket and knew he was going for a gun. He almost got it all the way out of the holster when I reacted. My vision turned red and as everyone watched, he was flung backward into a large concrete post.\n\nHe hit it with a sickening thud and seemed to be suspended there for a second or two, his eyes wide as he tried to catch his breath. When he finally slid down, everyone could see deep cracks in the post where he had made contact.\n\nThe gun he held fell on the floor next to his table and Veronica reached down to pick it up. Panic ensued when everyone saw the pistol. People screamed, then got out of their chairs and rushed the back door. She looked to find us and I tried to focus on her but was unable to get a clear view thanks to the people in the room between us.\n\n\"Veronica! NO!\" Roger yelled as she pointed the gun in our general direction. He jumped off the stage and started to head in her direction.\n\n\"Hit the deck!\" Max told us in that strange voice of his. I felt compelled to obey, as did Joe. We heard one gunshot, then another, followed by screams. Suddenly, we heard four more shots in rapid progression. These were close by us and I realized they were from deputies who had entered the room.\n\nI looked up and saw the deputies were by Roger and Veronica's table. I could tell there were two people laying on the floor there. Looking around, I saw another woman laying on the floor splattered with blood. A deputy was kneeling next to her. Hammer was in a pile at the foot of the concrete post and another deputy was busy checking him out. We stood and surveyed the scene in front of us.\n\n\"I think it's time we got the hell out of Dodge,\" Max said.\n\n\"You two go on ahead,\" Joe said. \"This is my home. It's my fight now. I'll take care of it from here.\"\n\n\"Alright,\" Max said. \"But your bag is still in the car. Let's go get it.\" We went back to the Uber and pulled Joe's bag from the trunk.\n\n\"I want to thank you both for everything,\" he said, shaking our hands.\n\n\"You're welcome,\" Max said. He pulled out a business card. \"Give us a call if you need anything. And don't be a stranger.\"\n\n\"I won't,\" he said with a smile. We watched him walk back into the convention center, which was now surrounded by a number of vehicles with flashing lights. Max looked at me before speaking.\n\n\"What do you say we go home?\" he asked.\n\n\"Works for me,\" I said.\n\n...\n\nEpilogue (Four months later):\n\nRoger and Veronica survived their gunshot wounds after undergoing hours of surgery. They spent a couple weeks in the hospital before being arrested and hauled off to jail on a growing pile of charges. In addition to everything else, Veronica had been charged with attempted murder.\n\nIn her desire to kill Joe, she ended up shooting the wife of a prominent local district attorney, who was now out for blood. The woman fortunately survived the shooting, but was still in therapy.\n\nThe Hamilton Group fired Roger and Veronica as the two of them were placed in handcuffs. By then, the senior partners had also filed complaints against Roger with the State Bar. Using the information Max and I provided, the district attorney was able to present an airtight case against the two and they were found guilty of all the charges against them.\n\nRoger was sentenced to a total of seven years in state prison and would probably be out in about five. Veronica, however, was sentenced to 20 years for all of her crimes, which now included attempted murder.\n\nJoe's attorney also filed a civil case against Roger and Veronica over the destruction of his personal property and the emotional damage the two of them caused which led to Joe's stay at Camp Rollins. They settled out of court for a large but undisclosed amount of money.\n\nThe divorce records revealed several conflicts of interest and, when put together with the other evidence we provided, showed that Roger and Veronica began their sexual relationship almost immediately after establishing an attorney-client relationship. That, along with Roger's felony convictions, prompted the state to revoke his license and disbar him.\n\nThe records also showed the judge who presided over the case had received a large campaign contribution from the PAC Roger's company operated. In addition to the numerous false statements, information we gathered from Roger and Veronica indicated that Joe signed the papers under duress. Armed with this information, and Veronica's confession, the terms of the decree was appealed. It is still being reviewed, and Joe says it may take another five months for a decision to be handed down.\n\nHammer also survived the incident at the Convention Center, but he is now confined to a wheelchair. It seems that in the contest between his body and the concrete post, the post won. Hammer is paralyzed from the waist down, and has limited use of his arms. He now resides in a long-term care facility courtesy of the state.\n\nGinger and I stopped off to see him after attending the sentencing hearings for Roger and Veronica. By now, Ginger was clearly showing her pregnancy. He trembled when we came up to him.\n\n\"Well, Hammer,\" I said. \"I see you're still alive. By the way, this is my wife, Ginger. Ginger, say hello to Mr. Thomas 'Sledge' Hammer.\" She flashed her eyes at him briefly as I chuckled. His eyes grew wide and his hands began to shake.\n\n\"Hello, Mr. Hammer,\" she said in a soft but very firm voice.\n\n\"H...Hello, Mrs. Drake,\" he said, his voice shaking from fear.\n\n\"As you can see, Hammer, she's quite pregnant. Twins. Imagine that. I don't suppose I need to remind you to stay as far away as you can.\" He shook his head.\n\n\"No, Mr. Drake,\" he said. \"I got the message.\"\n\n\"Good,\" I said. \"I'm sure you're aware that it's never a good idea to get between a mama bear and her cubs.\" Just then, Ginger's eyes flashed again, this time a bright red. I also four small points of light emanating from her extended belly through her maternity clothing. Hammer saw it as well and the blood drained from his face.\n\n\"I'm not going anywhere, Mr. Drake,\" he said. \"You'll never see me again, I promise.\" I nodded my head.\n\n\"Smart man,\" I said with a smile. \"You know, maybe you should consider a career change. I know it's done wonders for me. Take care of yourself. And pray we never meet again. Goodbye.\" He nodded his head as we turned and walked away.\n\n\"You're such a bad boy,\" Ginger said in my mind. I laughed in response.\n\nFour months after Max and I left Joe at the Anaheim Convention Center, I got a call from Adrestia. She said Joe was in town for the day and asked if we could join them at her house. Of course, I accepted her invitation.\n\nWe got there and enjoyed catching up with Joe. After dinner, Adrestia asked us all to join her in the front room. When we got there, we heard a knock at the door. Max answered and a tall man wearing a beat-up Stetson came inside carrying a box.\n\nHe looked like he had just stepped out of an old western movie. He wore a floor-length duster over a pair of worn blue jeans and a double-breasted red shirt. I saw an old-style tin badge on the shirt and the two revolvers slung on his hips. He extended a hand and I accepted it. I tried, but was unable to read anything from his mind.\n\n\"Name's Peace,\" he said with a slight smile. \"Justice O. Peace. Mah friends call me Eli,\" he added in a deep Texas drawl.\n\n\"Good to meet you, Eli,\" I said. He shook hands with Ginger, Joe and Max, then gave Adrestia a quick hug before handing her the box.\n\n\"Thank you, Eli,\" she said. She turned and gave the box to Joe. \"Go ahead, Joe. Open it.\" He pulled off the thin twine from around the box and opened it up. There were tears in his eyes when he pulled out two binders. He opened them both and flipped through the pages.\n\n\"Is this for real?\" he asked, looking up at Adrestia. \"This isn't a joke, is it? Please tell me it isn't a joke.\"\n\n\"It's no joke, Joe,\" she said. \"Those are your collections.\" Tears fell freely from his eyes as he thumbed through the books.\n\n\"How is this possible?\" he asked.\n\n\"Where I come from, nothing is impossible, Joe,\" Adrestia said. Sobbing, Joe hugged Adrestia.\n\n\"You have no idea how much this means to me,\" he said in a voice choked with emotion. I wiped a tear from my eye and saw Ginger and Max do the same. Even the grizzled cowboy who brought the box was fighting tears.\n\n\"I know exactly what this means to you,\" she said. \"It also meant a great deal to your father and your grandfather. Now you can pass it down to your children.\"\n\n\"But I still don't understand how you were able to do this,\" Joe said.\n\n\"I helped your grandfather through a very difficult time when he was in Europe during the war,\" she said. \"I watched as he raised your father, and as your father raised you. I saw the joy this collection gave all three of you. When I learned what Roger and Veronica planned to do, I asked Eli to exchange the original with a carefully-crafted replica that would pass even the closest scrutiny. I also asked him to keep it someplace where no one would ever be able to find it until it was time to return it to its rightful owner.\"\n\n\"But wait,\" I said. \"I thought you had strict protocols and rules about getting involved.\"\n\n\"And I followed those protocols, Cameron,\" she said. \"Although I may have bent them just a bit. I never once got directly involved in Joe's marriage. But I couldn't sit by and do nothing as they destroyed his prized possession.\"\n\n\"Well, I for one am not about to complain,\" Joe said. \"I am eternally grateful for what you've done. I'll never be able to repay you for this.\" Adrestia smiled and took Joe's head in her hands.\n\n\"Just be happy,\" she said. \"Live your life. Find another love. Trust me, she's out there, waiting for you. And always do the right and just thing. Do that, and we'll always be there for you.\" He nodded his head.\n\n\"I will,\" he said. \"I promise.\"\n\n\"Well, if y'all will excuse me, I've got work to do,\" Eli said. \"Good to meet you, Mr. Nelson,\" he added, shaking Joe's hand. He shook Max's hand, then tipped his Stetson at Ginger. \"Ma'am,\" he said. \"And I'll be seeing you around, pardner,\" he told me as we shook hands.\n\n\"I look forward to that, Eli,\" I said. He smiled, then turned and headed out the door. A few moments later I heard a loud \"hyahh\" followed by the sound of hoof-beats.\n\n\"I need to head out as well,\" Joe said. \"I have a plane to catch. Thank you again. All of you.\"\n\n\"You're welcome,\" Max said. Adrestia, Ginger and I echoed his sentiments. Max turned to me after Joe left. \"Good job, son,\" he said with a smile. \"Why don't you take a couple days off and I'll see you back in the office on Wednesday.\"\n\n\"I'll see you then,\" I said. We said our goodbyes and left for home.\n\n\"I have a feeling our lives have just gotten a bit more interesting,\" I told Ginger as I drove.\n\n\"You and me both, Cam,\" she said quietly. \"You and me both.\"\n\n...\n\nFade to black.\n\nMore to come...\n\nNotes: Camp Rollins was first mentioned in my series, \"The Camp.\" Gunny Rob shows up in \".\"\n\nAdrestia Rhamnousia first appeared in \".\" She is also featured in her own series, \",\" and plays a prominent role in the \"\" series.",
        "Eli, a.k.a., Justice O. Peace, was first mentioned in my series, \".\" He has appeared in several other stories since then."
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "cheating",
        "adultery",
        "divorce",
        "revenge",
        "adrestia",
        "justice",
        "dream",
        "camp",
        "masturbation"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/flash-04-ojt-part-02"
}