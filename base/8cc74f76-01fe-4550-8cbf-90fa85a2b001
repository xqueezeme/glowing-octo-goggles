{
    "title": "Gathering Storm Ch. 03",
    "pages": [
        "Needless to say, we were both soaking wet by the time we'd finished up with the shutters on all the small windows. The rain was really coming down now with periods of thunder and lightning. Cynthia had told me earlier, but reminded me again of her concern and worry for Joy. Joy truly was terrified by thunder and lightning, had been so all her life in fact. And of course Cynthia also told me, she very often reacted to it in strange ways, trying to hide and cover up her fear.\n\n\"All I'm saying is...don't be surprised by anything,\" Cynthia said as we had stood against the wall on the back side of her home, temporarily shielded from the weather before making our mad dash back inside. \"She's apt to do just about anything in order to keep her mind off the storm, especially if the thunder and lightning gets closer or more intense.\n\n\"Thanks for the warning,\" I near shouted as the wind seemed to be picking up a little. Though thankfully...for the moment anyway, the thunder and lightning didn't appear to be very close yet, though it was frequent, and beginning to increase in intensity.\n\nWhen we'd made it back inside, standing near the same towel rack, Cynthia immediately began stripping off her wet clothes. \"Here,\" she said handing me a large towel. \"Take off your wet things and dry off with this.\" We both stripped, and then began drying off, though I soon grabbed another dry towel, once again wrapping it around myself just as Cynthia did. Walking back into the main room, we were of course greeted again by Joy who remained sitting on the couch, her display of obscene, yet interesting toys now laid out side-by-side there on the table in front of her.\n\n\"All set to go,\" she announced as though packing for a trip, or an outing to an amusement park, which in this case, was her own pussy. She still wore a white, wife-beater tee shirt along with a white thong, that I could see as she sat on the couch with her knees partially bent, it did little if anything to conceal that pressed in \"V\" of her split as it pushed against the thin material of her panties. Not to mention of course, her hard twin tipped nipples clearly showing through the thin material of her top. Twin aroused points of pure hard ecstasy that I allowed my eyes to feast upon. I know Cynthia could see what I saw, but didn't comment on the obvious. Apparently she was used to this...though I was far from being there myself. Joy was, and continued to be a disconcerting puzzle to me. She was indeed an enigma of character that had me constantly trying to second guess her intent, continually keeping me on my toes whenever I was around her.\n\n\"What about the main windows?\" I asked trying to change the subject and give me reason and cause to avert my eyes away from Joy's continued, almost obscene display of herself.\n\n\"I don't think we need to worry about those just yet,\" Cynthia stated playing along. \"At least those can be closed from the inside. But we should think about putting something together for dinner, just in case we happen to lose power for a while.\"\n\n\"I'm not hungry...what I am, is horny.\" Joy quipped her eyes locking directly on mine as she even more decadently spread her legs, even going so far as to lift one of them up, placing it on the couch. This simple move now displaying even more of herself as she did that. The outline of her sweet succulent looking pussy lips almost winking at me as she smiled in that naughty little girl, flirtatious way of hers. I turned away glancing towards her mother, almost having to will myself in doing so.\n\n\"Fine, then go up to your room and do something about it,\" Cynthia suggested, which would have been my suggestion too under the circumstances. Joy of course just sat glaring at her mother. As I stood feeling my cock beginning to stir.\n\n\"You know damn good and well I hate being alone in my room when the weathers like this,\" she said sullenly. As though to emphasize this very fact, a loud sharp crackle of lightning lit up nearly the entire sky, hinting at the fact that the storm was indeed intensifying and getting closer. This was almost immediately followed by a long rolling echo of thunder that reverberated inside the house. Joy's eyes had opened wide upon seeing and hearing it, and then oddly enough, if not bizarre enough, she reached over towards the table, grabbed what appeared to be a fairly large purple vibrator with more gadgets on it that I had in my car, and turned it on. \"At least do me the courtesy of doing something to help me take my mind of the fucking lightning!\" She exclaimed almost yelling at us.\n\n\"Like what?\" Cynthia asked her in a much calmer tone of voice as Joy placed the tip of the now vibrating toy against herself, though merely teasing her split through the material of her sheer thong at the moment. My eyes unfortunately, once again glued to her as she sat doing that.\n\n\"Give me something to look at, to concentrate on while I'm doing this. If you don't...I'll never get off!\" She sincerely asked her.\n\nCynthia turned looking at me, a small smile on her lips, though she again turned back facing her daughter, once again asking the very same question. \"Like what?\"\n\n\"Oh...I don't know, maybe you two could at least fuck or something. You both seem to be good at doing that!\"\n\nJust then another even brighter flash of lightning lit up the room, which was followed almost instantaneously by a rolling peel of thunder.\n\n\"Please mother!\" She now begged, clearly agitated and upset, nearly dropping the toy she'd been holding against herself as she literally jumped up from the couch a bit.\n\nI know I was standing there with my mouth agape, not believing everything that was going on for one thing, the weather outside making it even more surreal as Cynthia and I stood there looking on at her daughter as she once again placed the toy against her split, this time easing away the small patch of material covering her pussy lips. She now held it directly against them, teasing herself though her eyes remained wild-eyed and fearful.\n\n\"I know this is going to sound crazy Jack, but...would you mind?\"\n\nIt was crazy. The thought of fucking Cynthia right in front of Joy without the pretense of her peeking at us from her window while we did, was strange enough. But then we'd already entered the 'Twilight Zone' a short time after I'd arrived here anyway by my way of thinking.\n\n\"Why the hell not?\" I heard myself saying. Truth was...it was just kinky enough to appeal to me in a strange sort of way, decadent, taboo...dirty wrong. And it made me even hornier that I already was, standing there looking over at Joy as she so uninhibitedly, so unabashedly sat...playing with herself in front of the two of us. I easily undid the knot holding the large towel around my waist, it fell away unceremoniously around my feet, my cock springing up, as it did like a striking cobra. Both Cynthia as well as her daughter were looking at me as I did that, my prick still wobbling a bit having just thumped against my lower abdomen.\n\n\"Fuck you're hard!\" Joy proclaimed still staring at my prick. I was. Very hard in fact, and very, very swollen. Even glancing down at myself now, I almost felt boastfully proud at the way I looked. I never considered myself as having a gigantically large cock, but at the moment it felt like it. So thick and swollen, the almost purple head straining against itself, a small droplet of precum already leaking from the tip as I stood there hands free, just letting the two of them admire it. As I myself was. And then Cynthia allowed the towel she was wearing to come free.\n\n\"God mom...you really do have a gorgeous body!\" Joy told her mother. Which again was strange for me in hearing her say that, and perhaps for her mother too, though she responded in kind, accepting the compliment, and giving her daughter one.\n\n\"Thank you honey. At least the years have been kind to me, though I daresay, my breasts still aren't nearly as perky and well-rounded as yours are.\"\n\nOnce again this intimate little mother-daughter exchange was sending jolts of excitement and desire up and down the length of my prick as I stood there listening, looking back and forth between them like someone attending a tennis match.\n\n\"So...where would you like us? What would you like to see? Have us do?\" She asked calmly enough, though I caught a lustful edge of excitement in her tone of voice. Doing this...doing what we were about to in front of her own daughter, had aroused...excited her. But then again, it had fucking aroused me even more so too!\n\nJoy actually giggled, resettling herself there on the couch even more comfortably. I half expected to see her produce popcorn and settle in for the show. Though what she did do was suddenly lift up her top, exposing her breasts completely, and then scrunched up her ass, peeling the thong she was wearing quickly down her legs, tossing it away with one foot.\n\n\"Lean over against the arm of the chair there,\" she instructed. \"I'd like to start off...with seeing Jack fuck you from behind.\"\n\n\"Start off?\" I thought to myself. \"Bloody hell!\"\n\nCynthia moved without question however, soon positioning herself just as her daughter had asked, standing off to one side at an angle from where she sat, with me standing behind only a couple of feet away. I could see it in my mind's eye as though sitting next to her watching us, what it would look like. I grinned, couldn't help it as I stepped behind her mother.\n\n\"Don't put it in just yet,\" Joy moaned hotly. \"Tease her a little first,\" she now added. \"Let me see you rub it up the crack of her ass for a bit.\"\n\nI began doing that as Joy in turn placed the now quiet toy between her own lips, not inserting, not even vibrating, but just allowing it to slide up and down her wet juicy center briefly as I began doing the same to Cynthia's ass. It was pleasurable, and quite a turn on for me, doing so...looking over, watching Joy as she in turn looked at us. Even when another clap of thunder and lightning occurred during this, Joy didn't freak out or flinch nearly as much as she had been. Perhaps there was something to this...in again, a strange sort of way.\n\n\"Ok,\" Joy said panting now, though still perhaps quivering from her almost unreasonable fear rather than excitement, though it was no doubt a combination of both perhaps. \"Put it in just a little...not all the way though, I want to see it...watch you as you ease it inside her.\"\n\nWhat I did...Joy did. Placing just the tip of my hard swollen cock at the opening of her mother's cunt, Joy did as well. I watched her now turn on the toy to its lowest setting, and then merely hold it...only the tip of it pressing directly against her lips. Sitting close enough to us, only a foot or so away as we stood there, I was mesmerized as her own pussy seemed to wrap its lips around the tip of the purple-headed toy, as though trying to suck it into herself.\n\n\"This is so...fucking...naughty!\" Cynthia moaned hotly, allowing herself to become consumed by this rather macabre, wanton exhibition of one another, the periodic flashes of lightning and rolling thunder still filling the room, though Joy truly did seem to be reacting to them less and less, the more she herself became aroused sitting there...directing us.\n\n\"No fucking shit!\" I exclaimed myself, adding in my own two cents, half tempted to simply drive my straining cock into her mother's depths as wet as she now was. Even I could see a small trickle of her mother's own lubrications running down between her legs as I periodically stepped back, looking down...teasing myself in just seeing her doing that.\n\n\"Oh fuck!\" She said aloud moaning. \"Now Jack...now, push all the way in...slowly though!\" She amended. \"I want to see it go as deep as you can inside her...and then all the way out again. Let me see the head of your dick pop out, before you shove it back into her pussy!\"\n\nI did as she asked, taking direction well, thrusting inside Cynthia's wet slick cunt, hearing her moan, grunting with the sudden sensation of my prick knocking on the door of her cervix.\n\n\"Oh fuck, oh my god!\" Cynthia exclaimed loudly, one hand still helping to support herself, the other briefly cupping her breast where she now pulled on one of her hard extended nipples.\n\n\"Oh yeah...I like that, I like watching you play with your tits!\" Joy announced having seen her mother do that. Reaching up, her firm young breasts likewise exposed, she kept one hand on the toy, deeply embedded inside her now, holding it there. The other...likewise fondling her own hard thimble sized nipple, rolling and twisting it as she looked on. \"Let me see it,\" she now said looking at me as I'd just shoved in again filling her mother's cunt full of cock. \"Let's see how juicy she is,\" Joy said removing the toy from her own pussy, and then holding it up to her mouth, licking her sweet sticky juice from the vibrator as I pulled out. Cynthia certainly was that. My cock was glistening with the saturated wetness of her cunt. The purple tip literally shining with the essence of her mother's fluids thickly and obscenely coating it.\n\nCynthia moaned once again humping back against me expectantly, enticing me to slide back inside her. \"Fuck!\" She wailed. \"Fuck me damn it! Fuck me!\"\n\nJoy giggled, hitting yet another button on her toy. Rotating beads near the tip of her device now springing into action, along with a slightly louder buzzing sound coming from the evil, wicked looking toy. She placed it back at the opening of her cunt, holding it there momentarily. \"Ok Jack...when I tell you...shove it into her, hard...and then fuck her as hard and as fast as you can...let me hear it. Let me hear flesh slapping against flesh...but, please...please promise me, you'll both tell me when you're about to cum!\"\n\n\"Ok...ok, for god sakes, just let him fuck me!\" Cynthia said almost by way of chastisement. Joy squealed in erotic delight and then screamed out.\n\n\"Now!\"\n\nI shoved, she shoved...I thrust, deep...fucking deep, in and out, in and out, like a piston machine. Joy too was doing the same. Her hand now a blur as she fucked herself mercilessly with the toy. I could hear the sound of her liquid cunt, her juices increasing ten-fold as she did so. Even the frothy bath her cunt was now giving her, could be heard above the din of the wind and the rain outside.\n\n\"Oh my god! Oh my god!\" She cried out over and over again. Cynthia's hot wet snatch doing the same. I could feel her female nectar now coating and slicking up my prick even more. The pounding thrusts into her making erotic squishy sounds, the slap of my balls against her flesh, her ass meeting me as she rammed herself backwards in greeting as though trying to impale herself even more deeply than I was already doing.\n\nThe lights flickered, flickered again. Another clap of thunder, lightning all around now, almost continuous.\n\n\"Fuck...I'm gonna...\"\n\n\"Pull out! Pull out! Let me see it!\" Joy screamed, just as her mother already was...the throes of her own orgasmic release having seized her already, though her pleasure had robbed her of vocal expression for the moment. Only the harsh intake of her breath, holding it...the sudden vice-like clamp of her pussy tightening around me gave hint at her sudden, somewhat unexpected release. In feeling hers...it had triggered my own. I pulled out, about to spurt. Joy too now crying out in that all too familiar way. \n\nThe lights went out, another blinding flash of lightning filling the room, like a strobe as it crackled, sparked. I looked over, my own orgasmic release only then leaping from the head of my cock. Yanking the toy out of her at that same split second, I saw briefly that geyser of female cum suddenly erupt from the darkest depths of her pussy. It seemed to sparkle, momentarily caught in that precise moment of darkness, and then almost too brilliant light. Likewise, as the curtain of darkness fell once again, for only a millisecond of a moment, I looked up towards Cynthia, saw the second arch of cream leaping from my prick, the first already having landed, splattering across the landscape of her mother's back. This one now highlighted, like a laser beam pointing out a graph on a whiteboard as more lightning struck filling the room.\n\n\"Jesus H!\" I screamed out now myself. The intensity, the rapture, the bizarre sensation of seeing all this in bits and pieces of refracted light, shadow and brilliance was beyond description.\n\nAnd then darkness fell.\n\n**\n\nIt was as though Poseidon himself had pulled the curtain down. It was pitch black, though again only briefly. The lightning mostly behind us now, though even then the all too frequent strikes briefly lighting up the room. Joy sat there on the couch, knees now pulled up against her chest, arms surrounding them locking them against herself as she rocked, her head buried between.\n\nI could hear the heartfelt sobs coming from her now, just as Cynthia did, quickly pulling away from me, rushing towards her, sitting beside her now. \"Come Jack...sit, hold her with me,\" she all but demanded, though I moved with the grace of a Gazelle, clearing the coffee table in one step, landing next to her on the other side where the two of us gathered her up in our arms holding her tight.\n\nGradually she relaxed, as the more intense portion of the storm moved on, though the winds remained, if anything more intense now as the window seemed to shudder almost continuously.\n\n\"Maybe it's time to cover the windows,\" Cynthia announced moving now, though only because we'd both felt Joy's tension and fear relax. I began to pull away from her myself, but her arm came up, her hand grabbing mine, holding it against her just beneath her breasts. I could feel the soft firmness of them resting against me as she did that, but allowed myself to remain.\n\n\"Thank you,\" she said softly, only loud enough that I could have heard her, though I simultaneously felt her free hand suddenly land within my lap. And though my cock was spent, mostly flaccid now, it retained a small degree of firmness. It was still slick with the creamy spending of her mother's cunt as she held it in her hand, gently caressing, enjoying the slick, sticky feel of it. I thought briefly about allowing her to continue, forcing her to remove her hand. But holding me as she was, the almost too gentle feel of her as she toyed with it almost lazily felt good. Admittedly so, even though I felt a renewed arousal already reawakening my senses. Just a moment or two longer...and then I would stand, would force her to let go. Just a moment more. \n\n**\n\nCynthia now standing near the large twenty-foot high windows. The soft whir of the motor already engaging, the Plexiglas protective shield coming out of its encasement, slowly sliding both left and right towards center as it began covering and now protecting the windows which slowly quit shaking and vibrating as they had been.\n\nIt was even darker now. I could barely make out the silhouette of Joy's mother as she stood next to the window watching it close, ensuring that it did so properly. I moved, preparing now to stand. Joy however tightened her grip on my cock, almost painfully forcing me to remain as I was unless I wanted to make a scene.\n\n\"I guess I'd best light some candles,\" her voice came out of the darkness, though I could just see that she'd turned, standing there facing us. Wondering...if she could possibly see any of this, see me still sitting there, Joy's hand wrapped firmly around my cock, now hard though not quite nearly so as it had been...stroking it.\n\n\"Not yet mother,\" Joy spoke surprising me a little. \"I'm still enjoying myself a little,\" she added a bit more softly. To my surprise Cynthia laughed.\n\n\"And just what is it you're doing?\"\n\n\"Making it hard again,\" she answered honestly.\n\n\"And why doesn't that surprise me,\" her mom answered back, only then walking towards us though for a moment she disappeared entirely as she stepped off to one side in the darkness of the room, reappearing seconds later like a wraith settling down in the chair she'd been leaning against earlier, facing us. Now at least I could make out a bit more of her, even the occasional expression in her face as some light filtered into the room from the less dark skies outside the windows. I knew she was looking at me, as I sat looking at her, Joy's hand still slowly pumping and caressing my cock. \"Go ahead...enjoy it,\" she told me then. \"Just as long as you don't fuck her...I don't mind. Really.\"",
        "I laughed with uncertainty even after hearing her words. Once again intending to stand up and move away. Joy's grip became even firmer, as did the sound of Cynthia's voice.\n\n\"No worries Jack...sit back, relax, let her amuse herself...and me, while I watch. It's really ok.\"\n\n\"Could this really be happening?\" I asked myself, though I did lean further back into the couch. Joy's hand now expertly working me, sliding up and down, though alternating her teasing of my prick. Sometimes palming it, sometimes merely tweaking the head between her fingers. I realized I had closed my eyes, opening them...glancing over though it was still difficult to see any real expression or features on her mother's face. Just the less dark form of her nude figure sitting there in the chair.\n\nAnd though we could all hear the diminishing rolls of thunder somewhere in the distance, the lightning itself no longer entered the room, now keeping it dark. Her hand stroked, fondled and then squeezed. She milked me, producing self-made lubricant. She purposely jacked it, smearing it, forcing it to sound as she did so.\n\n\"Hmmm,\" Cynthia moaned softly. Movement more than anything telling me she had repositioned one leg. \"Do that some more, I like hearing that,\" she told her daughter. I liked feeling it, and settled back even more as she again milked my dick forcing out even more pre-cum fuck juice. It was indeed slicker than before as she purposely played with it, even bending it off to one side, releasing it...allowing it to slap back against my own thigh. She did so repeatedly as Cynthia's groans and soft mewling moans began to accompany her doing that.\n\nAnd then I could hear the subtle, yet again sweet slick sounds her fingers began making as she sat across from the two of us, now quite obviously fingering her own slick, slippery pussy. \"Louder!\" Cynthia urged her daughter. \"I want to hear more...make it slicker, louder!\" She asked again, doing so herself now.\n\nAs slick as I honestly was...Joy made me even more so, purposely spitting onto my dick. If it wasn't erotic, lusty...even vulgar enough as it was, she made it more so in doing that. Jacking me fiercely now up and down, rapidly, she periodically continued to spit. In the darkness it began sounding almost as though she were churning butter. Next to us...Cynthia had begun to pant. Hearing the pleasure in her soft almost continuous moans now, I knew she was again nearing orgasmic release. The likewise fast, furious fingering of her own cunt clearly heard.\n\n\"Come, mother...come,\" Joy now urged her, which seemed perhaps to have triggered it as she did. Crying out intensely, deeply...her voice taking on a sultry wail as though sirens themselves had appeared adding to it as she came.\n\nAnd then Joy leaned over, her lips surrounding my cock so unexpectedly, pulling from the root of my balls the rapturous release of my own cosmic explosion.\n\n**\n\nI was stunned of course that she had done that. Not expecting it in any way shape or form, not even sure that her mother might have suspected it when she had, too lost in her own joyous bliss perhaps to have noticed. I dared not mention it, or that she had. Though again, neither did Joy, licking her lips however, tasting and thus swallowing whatever trace remained of my second copious spending.\n\n\"Now we can light candles,\" she announced standing up. \"But first...I gotta pee!\"\n\nThere was a guest toilet right around the corner down the hallway, which she headed towards. I heard the door open, but never close. And then the familiar tinkle of her piss as she began relieving herself.\n\n\"Candles are in the kitchen,\" Cynthia now stated standing up. \"Come Jack, help me light and distribute them.\"\n\nI followed her down the opposite hallway leading towards the kitchen area where we indeed lit several candles, soon turning the darkness into a soft warm glow. I couldn't help but admire her still nude body as we did so, and noticed that she appeared to be blushing a little. Almost demurely she looked at me, blushing even more perhaps.\n\n\"I know...it was sort of naughty wasn't it?\" She said. \"Doing what we did...but admittedly, it was hot...sensual, arousing, even if it was highly wicked of us both to have done that.\"\n\n\"Yes...it was,\" I answered back. \"But if you're ok...with what happened,\" I wondered, wondering as I asked if she knew. If she had known that Joy had taken my cock into her mouth, sucking me...draining me, swallowing my soul in a way when she did that. Even I had to wonder.\n\n\"Like I told you before Jack...just don't fuck her. Promise me that, you won't fuck her. Beyond that, I don't mind...I know she can be a real temptation, and I'm not so cruel as to not realize that. Especially leaving the two of you alone together during the day.\"\n\nHer comment again a reminder of the day to come, and I asked once again. \"Are you sure you have to go? Really? I don't mind going with you. I mean shit Cynthia...the weather!\"\n\nShe walked over, her fingers caressing my chin, a quick soft kiss on the cheek then as well and then a nice lingering hug as I felt the press of her soft breasts digging into my chest.\n\n\"I appreciate it...but no Jack. You saw how she can get, so fearful and afraid. This storms just beginning Jack, it's far from being over. Unfortunately I believe, the worst is yet to come, and I'd much prefer you're being here...with her. When it does.\"\n\nI had no idea just how right she was. But I was about to find out.\n\nTo be continued... "
    ],
    "authorname": "Many Feathers",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/gathering-storm-ch-03"
}