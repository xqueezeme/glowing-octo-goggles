{
    "title": "Contrast Ch. 02",
    "pages": [
        "Author's note: I know I said this would be three or four parts last time, but I'm revising that to four or five. Or six. Pretty sure no more than six. \n\nRecap: After a chance street meeting, a kind-of-meek white guy and a part-time-college black woman go back to her place and fuck like weasels. Then they agree to begin a just-for-sex, no-names relationship. They get together the next Saturday morning, when she's still a mess from an out-on-the-town birthday celebration with her best friend. The story picks up just after they've had sex in her shower. \n\n***** \n\nHim \n\nAfter we dry off, she says she's going to brush her teeth. \n\n\"Do you just want to let that coffee go completely cold, then?\" I ask as she squeezes toothpaste onto her toothbrush. Her eyes, in the mirror, look from mine to the chalky green gel on the bristles, and she crinkles her nose. \n\n\"No, you perked me up, but I'm gonna need that caffeine. How about you go get it ready while I do something with my shit-heap hair.\" \n\n\"Sure,\" I say, watching her put the loaded toothbrush down and rummage in a drawer full of brushes and hair gizmos I couldn't name the purpose of. \"How do you like it?\" \n\n\"You can't put too much cream and sugar in.\" \n\nI nod, but I can't take my eyes off her to turn away yet. She's leaning over the drawer rummaging in it, breasts hanging bare and free with the dark nipples pointing down. \"Does that mean it's not possible to put too much cream and sugar in, or that you don't want me to put too much in?\" \n\nHer eyes come up from the drawer. \"It means get me my fucking coffee with a crap-ton of shit in it or I'ma bite your fucking head off.\" \n\nI raise my hands, but she grins and laughs and pulls a fat bead-bristled brush from the drawer. \"Boy, you scare too easy.\" \n\n\"No, you're just too good at being a bitch, honey. Now does bitch mean real sugar or the fake stuff?\" \n\n\"Fake stuff tastes like ass.\" \n\n\"That's not an answer. We haven't talked rim-jobs yet ... maybe you like the taste of ass.\" \n\nShe makes a face and turns to me, suddenly just a beautiful, real woman taken off balance. \"Ew. Gross. Please tell me you're not into that.\" \n\nLaughing, I poke her sternum, right between the breasts. \"Now who scares too easy? One coffee coming up, cream and sugar, hold the rim-job.\" \n\nShe growls and narrows her eyes, back in character, returning to the mirror and her hair. \n\nIn the kitchen, I fix her coffee and mine the same way: sweeter than sweet, several shades paler than her skin. The rasp of the brush through her hair fills my ears as I stir. It's quiet, still too early on a Saturday morning for there to be much activity outside, though her apartment complex sits off of a pretty big street. I feel like I'm having an out-of-body experience. This place is so bare. Either she's not a decorator, or she hasn't been here long and doesn't plan on being here long either.  \n\nI don't want her to be a decorator. \n\nAnd not just because I'm not a decorator, but because I want whatever we are right now to last. I came into this woman three times on Wednesday and once this morning, and my life already revolves around her. She's so raw and alive, we're so focused together, so purely and ravenously erotic, that the close, pent blankness of this apartment makes the world of four days ago seem vacuous. Even the wait between Wednesday morning and today, empty of her but bursting with anticipation, excitement, arousal - it felt so much richer than who I had been without her. A voice somewhere inside me keeps saying don't obsess, this is a Bad Idea, you're setting yourself up for a crash down the line. \n\nBut the sex-charged air of her apartment won't let me believe it. \n\nShe's rolled her brown-and-bronze hair into a topknot by the time I return to the bathroom with our coffees. Her pelvis is up against the edge of the sink and she leans forward, turning her head one way and the other to check her work. It's a plain look. Simple. Functional. Fuck-me-able. With one glance, I know she put it up that way because it was quick and easy and practical. And knowing that makes me feel like I know her. \n\nAt the same time, her pose sticks that sweet round ass out right at me, and I can't help sucking in a breath at the sight of it. She laughs and wiggles her derriere. My cock leaps halfway to attention. \n\nI clear my throat. \"Stop that and drink your coffee or I'm not going to wait for you to drink it.\" \n\nTurning, she takes the paper cup with its plastic lid from my hand, sips it, then closes her eyes and coos a little as she drinks more. \n\n\"Ohh,\" she says with the cup level but still at her lips. \"I needed that.\" \n\nMy own cup is forgotten in my hand. As I stand there in the doorway of her bathroom, looking at her before me naked and unadorned, my conscious mind has completely shut down. She's an African deity, a soft, smooth sculpture in dark flesh, her eyes still closed, her breasts lifting and settling gently as she breathes in through her nose just above the sip-hole of the coffee cup and then sighs out through her mouth. \n\nHer lashes flutter up and those earthy deep eyes find my face. \n\n\"You stir a good cup of coffee,\" she says, twinkling, mischievous. Then her eyes flick downward and she smirks. \"Hot coffee get you hot?\" \n\nI look down too, to find my dick stabbing straight out at her. I'm kind of surprised and can't think of anything funny to say. \n\nBending at the waist, she takes me in her free hand, fingers encircling my shaft in a firm grip. \n\n\"You like your coffee, mister stir-stick?\" she asks it. Somehow my cock gets even harder, the purple head swelling where it juts from her grasp. She's kneeling to the carpet now. \"You wanna stir some more creamer in for me?\" \n\nShe tilts her head and takes a big swig from her cup. Then she looks up at me, eyes blazing, and puts her smiling, pursed lips to my tip. \n\nAnd sucks me in. \n\nThe front half of my cock floats inside her mouth, bathed in not-quite-too-hot liquid. She keeps her eyes on mine and swallows, swallows, drinking down the coffee and bringing her inner cheeks into contact with my shaft. \n\nThen she pulls off me with a pop and fills up from her cup again. \n\n\"God, I hope to fuck you're going to do that again.\" \n\n\"Hmm-hmm,\" she says through her nose, a hum and a laugh and agreement all at once, her eyes glittering brown and mischievous, her lips working hard to hold back the coffee and her amusement at the same time. \n\nAnd then she leans in again, enveloping me in heat and wetness. Her cheeks flutter between full and fuller as she swishes, tickling me with light rolls of her tongue. Her seal doesn't quite hold this time, and a tiny bead of coffee swells at one corner of those glorious dark lips and then finds its way down toward her chin. A hand comes up to swipe the drop away as she swallows quickly, lips squirming tight around me like she's fighting a smile that would spill coffee everywhere. With a gulp, she pulls off. \n\n\"Yeah?\" \n\n\"Oh, yeah.\" I take a few deep breaths, try to shake what I assume is a stupid, glazed look off my face. \"I feel like such an idiot right now.\" \n\nHer eyebrows nudge together. \"Why?\" \n\n\"Because I thought I knew what the word 'sexy' meant, and it turns out I didn't have a clue.\" \n\nA grin flashes her teeth, strong and white. She takes another swig from her cup, closes her eyes, and goes down on me again, very, very slowly. This time she doesn't swallow, but bobs - easing me in and out of liquid suspense, washing my cock in heat, keeping only the rigid ring of her lips in contact with my shaft. I move my hands down to frame and caress her luxuriant oval face, then close my eyes along with her and let myself just feel. There's nothing else in the world but the gentle motion of her mouth. My whole body might as well be floating in coffee. \n\nThen I hear her throat work, feel her lips and tongue close around me in soft surges, and breathe a long, grateful breath as she slides her head back and free. \n\nWith her thumb and forefinger still wrapped at my root, she waggles my cock and rasps, \"I need this in me.\" \n\nMy hard-on practically gives a mule-kick in response. \n\n\"Where?\" I ask. \"Bed?\" \n\n\"Uh-huh.\" \n\nShe gets up, a little awkwardly because she's still holding her coffee and hasn't let go of me either. \n\n\"Come on,\" she says, tugging me along by the cock, drinking as she goes. I follow helplessly, watching her ass, watching her head tilt up with the coffee cup, watching her throat move as she swallows. At the bedside, she smacks the empty cup down on her nightstand with a hollow clonk and turns, drawing me to her like my dick is a leash. I can't help but notice the big box of condoms standing right next to the now-empty coffee cup. She hooks an arm around my neck and kisses me, hard, hungry, jacking me off with the other hand as her tongue invades my mouth. It's electrifying and amazing and ... a little strange, because she keeps her eyes open. \n\nI am going to fuck you so hard, those eyes are saying. I'm fucking you with my tongue right now. I'm fucking you with my hand. I'm fucking you right in the brain through your eyes. \n\nThen she breaks loose and puts a hand in the center of my chest and maneuvers, pushing me, so that I'm between her and the mattress. \n\n\"Lie down,\" she demands, reaching for the condom box as she says it. \n\nI clamber onto the sheets on my back, elbows keeping me propped up. She steps up onto the bed and walks with me as I go, one foot on either side of my body, the soft round globes of her breasts swaying with the boldness of each stride. When we're dead center of the mattress, I stop, staring up at her, and she towers there right over my dick, hands on her hips, powerful and proud and possessive. A smile slowly bends the dark, full curves of her lips. Watching me and not her hands, she rips the top from the box of rubbers, pulls out a string of them, tosses the container over her shoulder to thump to the floor. \n\nAnd I think, Who is this woman? How can she be everything that I want when I don't know where she's from or what kind of things she's interested in or what she believes or what her name is? \n\nShe tears one condom packet from the strip, flips it down smack between my pecs, leans and drops the rest within arm's reach but far enough away we're not likely to migrate over them during the act. I quickly get the square package open and roll the contents onto my tick-tocking cock. And then she's kneeling, very slowly, closer and closer, left knee beside my ribs, right knee coming down on the other side, those breasts hanging full and rich, nipples tantalizingly erect, her torso leaning forward, one hand landing just above my shoulder to brace her, and that face, that face, searching mine like I'm her favorite aisle in the adult toy store ... or maybe something better. \n\nThen I feel her other hand close around the latex-sheathed cylinder of my dick, and her eyes flare and she starts to lower her hips. \n\nAnd just before penetration, I think, Good God, what am I going to do when this is all over and she's done with me? \n\n* * * \n\nHer \n\nI take him into myself way more slowly than gravity wants me to. Way more slowly than the hungry thing inside me, itching for orgasm, wants me to. And it's because that look on his face, the way he stares at me, is even more incredible than the physical rush, even more exhilarating than the drive to get myself off. \n\nHis excitement flares when I grab hold of him, swells when my crotch kisses the tip of his cock, then turns into some kind of disbelief as I open around him and ease my flesh lower and lower, steady and slow, into place around him. I'm not ignoring how it feels, filling myself up with his hot, stiff man-candle - I can't help letting out a gasp of satisfaction, low and breathy. But my brain is as full of his reactions as my cunt is with his dick. \n\nSix or seven hours ago, I was still out clubbing with Niza. I don't know how many different guys I danced with - sweaty bodies trying to get in close to mine, eyes sizing me up, checking my moves, a couple of them brave enough or maybe douchey enough to get in behind me and dry-hump my ass to let me know how turned on they were, or maybe they figured it would get me turned on. And I went with it and rubbed my crack against them, but I was laughing inside and maybe a couple of times out loud as I got more boozed up toward the end of the night. Some of them were hot, and a week earlier even some of the ones who weren't so hot would have had a chance, especially the way Niza kept pushing me and pushing me and actually getting kind of pissed every time I shrugged one of them off and told her I just wasn't feeling it. Thankfully, she was sloshed enough by midnight that she couldn't keep focused on trying to get me laid, just kept draping herself over one guy after another until one of them got her so worked up she gave up on me and agreed to go home with him and I kissed her and told her to have fun and got myself a cab back to my place. \n\nAnd the whole night of music and dancing, I was waiting for this. Waiting for him to be looking at me this way, knowing that it would be better than the way any of the players in the club looked at me. \n\nOnly I had no idea how much better. \n\nWhen I'm down, all the way, plugged full of his erection, I just lean there on both hands, dangling my nipples an inch or two from his chest, staring into his eyes. Sooner or later, I think, he's going to grab hold and start moving, and I know I'm going to come really fast once he does. Only the longer I sit there, the more I realize, he's barely even blinking. Every once in a while, those grey eyes shift just a little, like he's switching his attention from my left eye to my right, or something. His chest is rising and falling beneath mine, but everything else is still, because he is fucking hypnotized by my face. I bet I could keep him like this for an hour. A fire sparks and blazes in my belly, right below the ribs, and I smile, knowing I sure as shit don't have the patience to find out. \n\nHe smiles back, and I give a tiny twist of my hips. \n\n\"Oh my god,\" he groans. \n\nI drop my mouth to his and start fucking. \n\nHis hands are on me then, all over me. He's thrusting up to match my rhythm. I feel the pressure and glide of his cock, deep as it will go inside me, and I moan at the fiery grind of my clit against his pubic bone. \n\n\"Mmm. Mmmm. Uhh ...\" \n\nHis noises make me laugh - that laugh that's all joy, the one you can't help letting out, even though what's going on isn't funny at all, just electrifying and gorgeous. My tits are squashed between us. The nipples feel dizzy at the stimulation of his skin. \n\n\"Yes. Yes. Yes,\" I whisper, rocking above him with every muscle in my spine trying to keep us tight together while I'm gliding him in and out of me. He's pale - not quite crawled-out-from-a-rock pale, but way less tan than the other two white guys I've been with. I'm not all that dark, but right next to his shoulders, my arms look like I'm straight off a plane from Nigeria. It's beautiful. \n\nMy lips and tongue fumble for his, glide across his cheek to his ear, work their way down to the base of his throat and then lick up and over his Adam's apple until I end up sucking at his chin. He's groaning and caressing me the whole time, palms and fingers working the flesh of my back, my shoulders, my ass, my thighs, never stopping anywhere for long - although my ass seems to be their favorite destination, and the power of his thrusts and the pressure between our groins are all but overwhelming when he's clutching me there and giving me everything he can. \n\nAnd I'm right about coming fast. I groan it through my teeth, clenching my jaw: \"Nng - nnggg ...\" Pleasure strobes up through my body from that spot the two of us melt together, pulsing wilder and higher until it pushes me out of my brain and floats me through the sky into heaven. It's pure white light, not the raunchy colored flashes of the dance floor last night, and the throbbing is so much better than the bass beats of the club. From somewhere far away, I hear his voice. \n\n\"Oh God, bitch, I'm coming!\" \n\nMy orgasm isn't over, though, and I barely sense the new pulsation of his cock going off inside me. I'm way up in clouds, hanging inside a lightning bolt. \n\n\"Jesus, oh my God.\" \n\nThe lightning lets go of me. I float back toward Earth. I realize his dick is still twitching weakly inside my pussy, and that his arms are absolutely crushing me to him as he stays jammed as deep as he'll go. \n\n\"Oh my god. Oh my god, bitch.\" \n\nI just laugh. \n\nThe bear-hug relaxes, a little. Nuzzling at one side of his throat, I listen to him moan, feel his hands go from clutching to holding and then eventually to slow, sweet caressing. \n\n\"How did you do that?\" he gasps. \"How do you do that?\" \n\nI don't have any answer, at least, not any answer I'm going to say out loud. \n\nI don't know how I did it, but I want to keep doing it forever. \n\nYou're different, this is different, it's just ... so right. \n\nYou change something in me. \n\nFinally, I say, \"Yeah, see, what I did was, I kind of moved my body back and forth so my pussy would slide on and off of you. I heard guys like that.\" \n\nHe laughs, a laugh that's still full of orgasm-exhaustion, and he lets his eyes close, head down limp against the sheets. His hands are still lazily, helplessly exploring my back. I drop down and rest my forehead against the bed linen. I can feel the heat of his cheek with my ear. \n\nYou feel so fucking good inside me right now. But I only think it, I don't say it out loud. Because I know it's not just about sex. And I'm afraid, if he hears that in my voice, he'll freak out. God, you make me feel so fucking good inside. \n\n* * * \n\nThem \n\nShe falls asleep on top of him, blissful and still short on rest from the night before. He lies there a while once he realizes she's slipped off into dreams. There's something about listening to her slow, even breathing that fascinates him. Beneath her weight and heat, he realizes he should be uncomfortable, but he's not. \n\nHe's enthralled. \n\nOverwhelmed. \n\nMesmerized. \n\nHer head rests between him and the nightstand clock. He has no idea how much time passes before the inevitable happens and he finds himself growing hard within her again. \n\nWould it be okay to start fucking her while she's still asleep? Sure, of course - I bet she'd love it if I woke her up that way. But he doesn't move. She's still so new, and he's terrified of crossing her boundaries, maybe sparking that mercurial side of hers, firing her to an anger that would make her throw him out and never let him back in, so that he'd never feel this again, never get to look at her sleeping face so close to his own. He does wonder, though. What would that even be like? Would she start responding in her sleep? If I was gentle enough, could I get all the way there with her still unconscious? Could I make her come in her dreams? \n\nShe remains completely under, dreaming about ice cream, sharing a huge heaping sundae with him in the strip mall across from her apartment complex. Completely clothed, no gonads involved. But the hot fudge tastes like sex, and there seems to be an endless supply of maraschino cherries being pulled out of whipped cream and sucked from their stems. Bananas that haven't been split, sliding through oceans of melting vanilla and chocolate. \n\nWhen she wakes up, he's shifted them both and lies naked next to her, breathing with a hint of a snore. She puts a hand on his chest and eases her fingers through the hair there. Eventually, her stomach growls, and she shakes him awake, and they go and eat doughnuts and drink cold coffee, and then fuck some more. ",
        "And some more. \n\nAnd some more. \n\nBefore he knows it, it's noon on Sunday and they're spooning with her facing the clock and his cock still inside her. And she's sighing and telling him he has to go, she's got things, commitments. Even though his genitals have never been this sore from overuse in his entire life, he thinks about saying, Just one more time, and he's pretty sure she'd go along with it. But he doesn't want to make her late for anything, so he sighs too and pulls out and kisses her, long and deep, and starts getting ready to leave. \n\n\"How does your tomorrow night look?\" he asks, seeing the hungry way she eyes him as he pulls on his underwear and jeans. \n\nShe wrinkles her upper lip. \"Shitty.\" \n\n\"Tuesday?\" \n\n\"Worse. Wednesday and Thursday too. I'm gonna be thinkin' about you and riding my vibrator all week long.\" \n\nOnce his shirt is on, he gets out his phone, pulls up a map, does a search, adjusts the zoom. \n\n\"Okay, look,\" he says, walking back to the bed and holding it out. \"I picked a spot that's five minutes from my work, and everything on that page is about five minutes from that spot. I can take my lunch hour starting anytime between eleven and one. There someplace on that map you could get to for a nooner?\" \n\nShe takes the phone and looks. She's gotten pretty good at superimposing bus routes onto maps even without hitting the public transportation icon. Her school-to-work bus passes within a couple of blocks of an intersection in the northeast corner of the screen. \n\nWith her fingertip on that upper-right corner, she hands the phone back. \"Here. I could be there eleven o'clock Tuesday or Thursday, or, uh, twelve-thirty Wednesday.\" \n\nHe looks at the phone, then back at her. \"Could you be there eleven o'clock Tuesday and Thursday? Oh, and twelve-thirty Wednesday?\" \n\nThat grin flashes and she laughs. \"Yeah, but are you gonna have anything left by Friday night?\" \n\n\"I'll eat some oysters for lunch.\" He kneels to put his shoes on and tie them. \"And today I'll drive over there to scope it out and text you an exact spot for Tuesday, okay?\" \n\n\"Okay.\" \n\nHe stands back up, just watching her for a second. She thinks, Tell him something. He thinks, Tell her something. \n\n\"Hey, this -\" \n\n\"Look, I -\" \n\nThey both stop and laugh. \n\n\"You first,\" she says. \n\nHis eyes are on fire as he tells her, \"This is the best weekend I've had in a long fucking time. You're unbelievable, you know?\" \n\n\"Yeah,\" she says, putting her jaw at a cocky tilt to her bare shoulders. \"I do know. But I'm gonna make you learn to believe. And this isn't the best weekend you're going to have for very long.\" \n\nHe laughs and shakes his head, then turns to go so that he won't throw himself at her again. Naked and bold, she shadows him to the door and presses herself to him one last time before he can open it. They kiss, hot, hard, wet, fervid. Blood rushes where passion and instinct and hormones tell it to. \n\n\"Fuuck ...\" she says, breaking loose. \"I am so sore.\" \n\n\"Uh-huh,\" he says. \"Let's just hope we're both recovered by Tuesday.\" \n\nI'm not recovering from this anytime soon, she thinks. But out loud, she just says, \"Yeah, right, like you're not going to be banging off the whole time between now and then thinking about it.\" \n\nHis eyebrows go up. \"Am I the only one?\" \n\nShe grins. \"No.\" \n\nAnd then the door opens, and then the door closes, and then they both wonder how they're going to keep their heads on straight for the next forty-eight hours."
    ],
    "authorname": "IanSaulWhitcomb",
    "tags": [
        "coffee blowjob",
        "coffee",
        "no-names",
        "white man",
        "black woman",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/contrast-ch-02"
}