{
    "title": "When We Were Married Ch. 05D",
    "pages": [
        "I'LL BE ALRIGHT...'TIL THE HURTING STARTS\n\n(Author's note: Another long gap and as always I apologize to readers who've emailed me asking for more of the WWWM saga. But I hope readers like this one. And as I mentioned at the end and I'll repeat here, this is not the end of the story. There are a number of chapters remaining. Which I'll post as I can finish them. If there's any confusion, all I can suggest is going back to earlier chapters to refresh your memory on who's who and what's what. As I've said too many times, this is a novel, and a long one, and there are a lot of characters and a lot of interwoven stories.)\n\n*\n\nMy name is William Maitland. I am, as of today, 42 years old. I have been divorced for nearly 2 months from Debbie, my wife of 18 years and companion of 20, who tore my heart out and cut my balls off when she left me for a 10-year younger stud five months ago\n\nI have moved on, to the extent of starting a hopeless relationship with a beautiful French woman I can never have a future with because she is married to a man who was my friend, and she has a young son she will never leave.\n\nAfter being ambushed by my entire family at my new downtown Jacksonville condo and having to introduce my friend, Aline to my kids, ex-wife, mother and stepfather and ex-mother and father in law, my ex's beautiful sister and her two small children, we are all getting ready to go out for a big family celebration of my 42nd birthday. \n\nI haven't told anyone and won't that Aline is a married woman who will be going back to her husband -- probably. She may have an open marriage, but it's not anything my family would understand or accept. \n\nAnd it doesn't matter. Our relationship is ours -- not my mother and stepfather's, and not my kids. I've done something very stupid and it will come back to bite me, but it's my decision.\n\nThe only person who isn't going out with us is Debbie. She and Aline had one of those female catfights conducted at a level that males can only realize SOMETHING is going on until somebody's head falls off. There wasn't any blood, but blows were taken and received. And Debbie retreated.\n\nI don't know where she is or what she'll be doing while I'm enjoying the company of my family and Aline. I know she was hurt, at least her pride. \n\nI know she didn't think much of me as a man, and I hadn't given her much of a reason to look back on our last years in the bedroom with much affection. I know she pitied me, compared to her tall, strong young boyfriend with, she said, a much bigger dick than I wield.\n\nAnd when she saw a naked Aline walking out of our bathroom to give herself to me, when she saw her slim, gorgeous body in a slinky black dress, it was as if I were giving her the finger, figuratively. She couldn't pity me anymore as the hopeless loser who wasn't worthy of her love or her body. \n\nI saw it in her eyes as she left my condo. I had hurt her. Why in the hell she would be hurt like that, I still don't understand. If you don't care for someone anymore, why should you care if they meet somebody else. \n\nDespite everything, I felt sorry for her. How people can shut off loving someone I've never understood. \n\nI could never live with her again. I could never share her bed again. We would never look in each other's eyes at the end of a long day and know without words what the other was thinking. \n\nBut how do you tear memories and emotions and a life out of yourself and pretend it was never there? And our two children are a daily reminder that I can't remove what she was to me once upon a time.\n\nBut even loving her still, there was a part of me that enjoyed seeing the pain in her eyes. She had never once apologized for falling out of love with me and lusting for a younger man. She had never apologized for taking him into her bed before she even told me she wanted a divorce. \n\nShe had said she was sorry she hurt me. But that's not the same thing. And even though it was low of me, I wanted her to know and feel what it was like to be replaced in someone's life. Of course, it wasn't the same. Because when she had dumped me I was desperately in love with her. Now, I was only hurting her pride. But I'd take that.\n\nShe needed to be hurt. If there was any cosmic justice, she needed to be hurting even a little bit like she had hurt me.\n\n##################################\n\nSATURDAY, SEPTEMBER 3, 2005 9:30 p.m.\n\nShe knocked on the door of the Shire apartments just off Atlantic Boulevard. They were set right along service road that ran alongside the Arlington Expressway. They were built in a faux-Medieval system with corner apartments looking like the rounded towers at the edge of a castle. \n\nHe lived in one of the tower apartments. The fact that they were set at ground level instead of 50 feet in the air kind of defeated the image, but he had said he just liked the idea of living in an anachronism. She wondered if he had someone with him. Usually she would have called. But tonight it didn't matter. If he had somebody, he'd have to kick their ass out.\n\nShe knocked again, and a third time. His car was in the parking lot. He could have gone out with friends, but she was praying he hadn't. He had to be home.\n\nThe door opened and he stood there, dressed in slacks and a white t-shirt. He had a bottle of Bud in his left hand.\n\nHe was about to say something when she stepped across the threshhold, put her arms around his neck and pulled him down to plant her lips on his. After a few seconds his lips parted and she darted her tongue inside. She rubbed her breasts against his chest and pushed her groin into him. She felt the hardness between his legs started to grow and she made love to it with her own body.\n\nAfter a minute he pushed her away gently and held her by the shoulders.\n\n\"I know this is a silly question, Deb, but why are you here?\"\n\n\"Do I need to give you an instruction manual?\"\n\nHe grinned.\n\n\"No, I think I know how to insert Part A into slot B and how it goes from there. But, I didn't know we had a date tonight. Did I do the unforgiveable and forget about a scheduled assignation?\"\n\nShe kissed him gently this time, reaching up to brush his unruly hair away from his eyes.\n\n\"No. This is a spur of the moment booty call, as my kids would say. Do you think you could work me into your busy schedule? You have any women I need to run out of here?\"\n\n\"No. No women hiding in any corners. Actually, I was working on a freelance magazine article. It's for Parade Magazine. It's due next Friday.\"\n\n\"And I interrupted your work? Do you suppose....\"\n\nShe knelt and unzipped him. He was already hard and she pulled his Hanes down and was able to move the stiff column of hard male flesh enough to release it. She ran one hand up and down it, rubbing her thumb over the head and feeling the wet pre-cum that was already leaking.\n\nShe squeezed it hard enough to make him gasp, then lifted it to allow her tongue to run over his balls and ran her tongue up its lenth until she got to the tip, where she licked and stuck her tongue as far into his pee-hole as she could get it. Then she sucked it like a straw while she jerked. \n\nFinally she pulled her head back and look up at him.\n\n\"You taste so damned good, Clint. Is there any way, any way at all, that you would consider putting off your very important freelance article for a few hours? Would you let me jerk your big hard dick until you squirt all your hot white stuff all over my face and titties? And let me get you hard again and convince you to slam it all the way up inside my pussy until you make me scream?\"\n\nHe took a deep breath and pulled her to her feet.\n\n\"Damn, if you weren't a college professor and a professional administrator, Deb, you would have made one hell of a saleswoman. Screw the article.\"\n\nHe swept her into his arms without straining too much and she mentally applauded him. She knew she wasn't a little girl and he wasn't a bodybuilder, but he hoisted her without showing much strain. For a writer, he was pretty buff.\n\nOn his bed, which she'd already become familiar with, he threw her down and with a few practiced moves, unbuttoned and slipped her blouse off, then pulled her skirt down. He looked at her naked vagina and grinned.\n\n\"Why do I have the impression that you came ready for action, little lady?\"\n\n\"Why, whatever do you mean, Rhett Butler. Are you prepared to take advantage of little 'ole innocent me?\"\n\nHe made the classic 'villain twirling his mustache' gesture and slipped his slacks off. His cock was standing straight, hard and proud. She felt herself beginning to get even wetter.\n\n\"Actually that was my plan, if you see anything you like.\"\n\n\"Umm....yes, actually I do. Would I lower myself in your estimation if I told you that I find mens' cocks beautiful. Yours very beautiful.\"\n\nHe sat down beside her and ran one finger lightly down the side of her thigh, his fingers running close to the opening of her femininity.\n\n\"Really? I mean, I know women like what we do with them. But I've never quite heard a woman call them beautiful.\"\n\nShe rolled toward him and closed her fingers lightly about him, moving it up and down so softly as if she were afraid of hurting him.\n\n\"They are beautiful, Clint. I ..you know...I was kind of wild when I was younger. I've seen and rubbed and sucked big one and littles one and thin ones and ones with a kind of kink. Circumcized and uncircumsized. I've watched pornos. Everybody watches pornos nowdays, you know. Even Bill....and I...we watched them sometimes to make it hotter for us.\n\n\"And a hard cock....God.....its strength. Men are hard and angular and women are soft and round. And the cock is where you're the hardest. It's like living rock, soft, pulsing. Those strong lines. I wish I were an artist sometimes. I'd specialize in beautiful strong, long, straight cocks.\"\n\nHe rolled toward her and slipped his fingers into her pussy and felt them sink in. She was so wet he went in with no effort; He lowered his mouth to one heavy breast and licked the pebbly aurealea. As he did she sucked her breath in. He already knew she was one of those women with a direct line from her breasts to her pussy. If you could suck her, she'd spread her legs and be ready.\n\nBut somehow, she managed to bring her hands up under his chin and she pushed him away. He looked at her in confusion.\n\n\"You can have me, Clint. All night. But first...\"\n\n\"What? You want me to do a handstand, pound some nails into a board with my dick. Jesus, just tell me...\"\n\nShe rolled toward him and he couldn't read her eyes. It had happened before. Even though he knew better, it was too easy to fall into the trap of thinking she was just a big tittied bimbo. But she was a lot more than that, and if she let you treat her like a fuck toy, it was because she wanted to be treated that way. \n\n\"Tell me I'm beautiful.\"\n\nHe looked her, curious.\n\n\"What? Why?\"\n\n\"Don't ask, Clint. Just tell me. Use words to make me wet. I know you can do it with your body. Make me believe that I'm beautiful, for a few hours anyway.\"\n\nHe knew then, but it wouldn't do any good to talk about it, now. \n\nHe lifted himself up on an elbow and looked at the golden body lying next to him.\n\n\"Alright, Ms. Bascomb. I could with Biblical allusions from the Song of Solomon, but how about this. You are a walking wet dream. When you walked into my office that first day I took one look at you and knew that if I had to crawl across broken glass to get into that hot pussy, I'd do it.\n\n\"You are every horny teenage boy's dream of a blonde with huge tits and big nipples and a great ass. I can't see you in clothes without thinking of what you look like under those clothes. I want to stroke those huge soft breasts, to sink my fingers into them, to suck on like a baby on the teat.\n\n\"I want to spread your legs and dive in to that wet pussy that's gleaming at me. I can't be around you and not envision myself sinking all the way in. I think about the way those breasts look like when they're wrapped around my cock and I'm sliding it back and forth. \n\n\"I can be sitting here sometimes, alone, and I think of you and the way you look naked on my bed and I can't help pulling my dick out and jerking until I come all over myself. I haven't done that in years. But you bring that out in me. \n\n\"It's like the old joke about Marilyn Monroe. Some critic said she just appealed to 13 year-old boys and the rejoinder was, yes, but around her, every man is a 13-year-old boy.\"\n\nHe leaned over and placed his hand at the base of one large breast and pulled it up, running his fingers over the yielding flesh until he captured the nipple and tugged and pulled until she gasped.\n\n\"But it's not just sex, Debbie. Your smile lights up this room. If I knew I could never have you, that smile would make me want to be your champion. It's the lips and the eyes and those cheekbones. I want to be a hero for you, to be better than I am. I know that's what other men feel for you. It's the reason why guys fall all over themselves to do whatever you ask. \n\n\"Even if they're old or young or fat and know they'll never in this lifetime have you. They want you to smile upon them.\n\n\"And I know that's what Bill felt like that night...\"\n\nShe grabbed his hand, held it tight and raised herself up to catch his lips with her own. \n\n\"No, don't mention his name, Clint. I don't want him here. He's not part of my-\"\n\nHe shut her up and rolled onto her, sliding his cock deep inside her in one fluid motion so that she gasped into his mouth but couldn't make a sound.\n\nHis cock slammed in as far as it would go, so hard it bruised her, but she pushed herself up to him to take even more of him inside her. She wrapped her legs around him to keep him as deep as she could, only allowing him to pull back and then ram it home again.\n\nHe ran his lips down from hers nipping her neck and then fastened on her right nipple, sucking and then pulling it up with her teeth hard enough to make her wince. But it just made her wetter. He'd already discovered that she liked a little bit of pain. Sucking hard made her moan inside her throat and start to scratch his back.\n\nShe wanted him to hammer her hard, the way Doug had, the way---no no no and she pulled her mind from the past and concentrated on the feel of him inside her, the way he played her, using her breasts and lips and pussy and ass, kneading and stroking and pulling and hammering and driving any thought but the moment out of her mind.\n\nAnd then she felt him speeding up and she exploded around him and still the hard ram inside her hammered and she came again and she felt him almost there and she scratched his back and screamed and felt him pouring into her one molten blast after another and she came again.\n\nHe fell backwards, and she felt his still hard cock sliding out of her and she felt empty.\n\nShe rolled onto her stomach and found his cock and licked it, then shimmied up the bed until her breasts were over his face. She smothered him and grinned as he licked and then sucked as much as he could of the left and then the right in his mouth.\n\n\"Does baby like that?\" she said in a teasing tone. She lifted herself lightly and batted them across her face.\n\nHe sounded winded but, \"God yes, just let me lay here and suck for a while till I get my strength back. I'm not 20 anymore.\"\n\nShe pulled her breasts out of his reach and then began to give him what Bill-fuck shit fuck why did he keep sticking himself back into her memories --what the bastard had called a titty rub. She slid the heavy melons that sometimes gave backaches but were worth it up and down his chest and over his arms and back up to where he could nip them with his teeth and then down around his groin.\n\nShe sucked him first and then enveloped him with her breasts, rubbing them up and down and using her hands to press them in and, not surprisingly, in a few minutes she felt the steel beginning to return and he started to rise again.\n\n\"Ohhhhhh....\"\n\n\"You like that huh...you like having those big heavy titties loving your dick....don't lie I can tell.....let's see if you like this,\" and she captured him in her mouth, sucked, then let him go and caressed him again. She sucked and rubbed and massaged and in minutes he was thrusting up to meet her mouth.\n\nThen she stopped and keep his quivering cock motionless a few inches away from her hot wet mouth and looked up at him to ask, \"Do you want to fuck me again, Clint...or would you like to cum like this?\"\n\nHe answered her by grabbing her head and pulling her mouth onto him and he hadn't thrust more than two or three times until he was squirting into her mouth. She continued to titty rub him until the squirting stopped. He didn't have much, but hell, like he'd said, he wasn't' 20 anymore.\n\nShe kept her head in his lap while she licked him clean and rolled it around her mouth before swallowing. As she'd told Teller, she knew the taste of a man's semen. As a young girl she'd hated it. It didn't taste like anything else she'd ever tasted. But, now...hell if you could learn to like oysters you could learn to like almost anything.\n\nShe waited until she thought she'd swallowed it all before moving up to lay her head against his chest. Most guys, no matter how nice they were trying to be, just didn't like tasting their own cum. They didn't mind licking pussy, but their own...probably some hangup about having homoerotic tendencies. She still didn't understand, but when a guy made her feel this good, why force him to do something that really turned him off.\n\nThey lay like that for awhile until they were both breathing normally and then Clint slid her off him and asked, \"You want a beer? Wine? I got coffee and some Danish in the kitchen in case you worked up an appetite.\"\n\n\"Coffee would be good. No Danish. Got to watch the figure.\"\n\n\"Can I watch it for you?\"\n\nShe pretended to slap at him. A few minutes later they were sitting up in his bed naked, drinking hot coffee carefully. Clint was demolishing two frosted slices of Cheese Danish.\n\nThey'd been talking about nothing in particular when Clint said, \"So what did Bill do this time?\"\n\n\"Don't Clint...don't go there.\"\n\n\"I keep telling you, it's alright Debbie. You were married until a few months ago. It takes a couple of years for most people to get their heads screwed on right. I was in love with my wife for five years after she died and she was a cheating lying bitch.\"\n\n\"Just like me...that's what you're thinking, isn't it,\" she said, turning away from him to put her coffee on the side table and thought maybe this was a mistake.\n\nHe was able to grab her shoulder before she got off the bed and pulled her back to him. She wouldn't face him but she didn't try to pull away.\n\n\"That's what you see yourself as, isn't it? Yeah, you made mistakes. But most of the time it takes two people to kill a marriage. Bill is a good guy, but from what you've said, he wasn't the best husband in the world. Even if it was 100 percent your fault, you two are done now. You've got a new job, you're seeing at least one nice guy and if Bill hasn't found somebody, he will.\n\n\"He's not that old, even if he thinks he is, he's a powerful man in an important job and he's started getting famous. Trust me, women willl be stalking him.\"\n\nHe was silent for a moment then put his hands on her shoulders.\n\n\"He has, hasn't he? That's why you came here tonight. I'm hurt. I thought you were lusting for my body. This was a revenge fuck. Even if he doesn't know about it, you're giving another man what used to be his.\"\n\n\"Her name is Aline....Aline for God's sake. Who's named Aline? And she's a fucking stewardess. Oh she works on a cruise ship, but it's the same damned thing. Coffee, tea or me. And in his case, she gave him HER.\"\n\nClint's voice was gentle.\n\n\"You had Doug. You've got me. And...I don't know...maybe other boyfriends. He's got one woman. Why does it bother you so much?\"",
        "\"It's just you, Clint. No one night stands, no pulling some young stud lawyer's pants down and sucking him off, no zipless fucks. Just you. You believe me?\"\n\n\"If you say so, Deb, I believe you. We're not married. You've got no reason to lie.\"\n\n\"I think...the gossip is...he's probably had other women. I'm not surprised. Since he started getting into shape, got that new look, I knew he'd find somebody. But why her?\"\n\n\"What is so special about this Aline?\"\n\n\"Because,\" and she took a deep breath to avoid screaming, \"because she's beautiful and French and she's a fucking bone and standing next to her I felt like a 400 pound hippo. She doesn't have any tits, but what she's got looks good. Shit, I felt fat, and old next to her. And she LOOKS at me like I'm fat and old.\"\n\nShe turned to look at him.\n\n\"Women don't look at me that way, Clint. They're jealous, they're contemptuous because they think I'm a slut and a threat to steal their husbands or boyfriends, but not like....I didn't....I didn't....threaten her. She thought she was hotter than I am...and the bitch rubbed it in that she had Bill now. \n\n\"She walked out in front of my whole familly, my parents, our children flat naked, rubbing her pussy. The only way she could have made it more obvious is if she'd thrown Bill down and started fucking him.\"\n\nClint shook his head.\n\n\"She walked out in front of your whole family naked?\"\n\n\"Long story. They pretended it was an accident. But I know the bitch planned it. Not a fucking ounce of fat on her. Every guy in the room got hardons, I know it. And what could I say? Everybody knows about me and Doug. I had to swallow any comment I could have made about her being a cheating fucking slut tramp.\"\n\n\"Okay, I can see that would be...traumatic. But, still, you knew he was going to find somebody. He found a beautiful woman. He did it before. What's so different about this?\"\n\nShe leaned into him and nestled her head against his neck and shoulder. He couldn't' see her eyes.\n\n\"I....this sounds crazy....I know it does. But....it was the WAY he looked at her.\"\n\n\"How?\"\n\n\"I know that look, Clint. It was the way he looked at me. Even....even after things blew up, when he was hurting, I knew when he looked at me he still loved me. He was looking at her that way. And it drove me crazy.\"\n\nHe felt moisture on his neck and realized she was crying.\n\n\"What kind of terrible fucking monster am I? I didn't love him and I went to another man and I enjoyed the fact that the man I'd thrown away was still hung up on me and now when I can see that he cares for somebody else, it's killing me.\"\n\nHe held her until the tears stopped and then pushed her away. He wiped the tears away.\n\n\"You're a human being, Deb. You're a gorgeous, big breasted walking wet dream, but you're still just a human being. You did what you thought was right at the time. And now you're having second thoughts.\"\n\n\"No-\"\n\n\"Yes, you're having second thoughts. I don't mean you're going to go back to him, but I told you before I thought you moved too fast. \n\n\"You took up with another man before you straightened things out with Bill. You probably, in a perfect world, should have filed for divorce or got a separation, maybe went in for counseling. That way if it fell apart you could have had Doug or anybody else you wanted.\n\n\"And now....you've got issues. And it might be too late to do anything about them.\"\n\n\"Might be? MIGHT BE? Christ, no way will we get back together. I -- there are things I'm trying to get straight in my head, but he still makes me see red sometimes. And -- he would never be interested in me again. Don't ask. He just never will be. And anyway...how long did it take you to get over your cheating wife?\"\n\nShe sat back and looked into his eyes and saw the answer to her question. \n\n\"Oh yeah, she died 20 years ago and you never re-married. Have you even been serious about another woman? Talk about being hung up on somebody.\"\n\n################### \n\nSUNDAY, SEPTEMBER 4, 2005 5 p.m.\n\nWe stopped at The Columbia on A1A south of St. Augustine. I've always loved their paella and found out that Aline loved it as well.\n\n\"I was raised in a little town near Marseilles,\" she told me. \"Just the smell of paella de marisco gets my mouth watering.\"\n\n\"They serve a good seafood paella here. And I love their Sangria. I'll order a pitcher of the real stuff and a couple of glasses of virgin for me because I can't afford any tickets for drunk driving.\"\n\nShe leaned into me and said, \"Are you trying to get me drunk?\"\n\n\"Well, it wouldn't be a bad idea.\"\n\n\"Why? You're going to get lucky whether I'm drunk or sober.\"\n\n\"I love easy women.\"\n\n\"Don't get me started sailor, or I'll turn us around and take advantage of you in your car in this parking lot, Unless you can find a spot on the Beach.\"\n\nI looked at her. She was dressed in a blue skirt and a gold v-necked top that showed the curves of her breasts but not much more. She was slender and casual and I wondered for the thousandth time how in the hell I'd wound up with her. It was only luck and chance that led me to Debbie's bed, and again it was only the wildest coincidence that led Aline to me.\n\nI don't know if somebody up there likes me, or hates me with a passion.\n\nWe ate two plates of paella and it was as good as I remembered it. It had been a couple of years since I'd been here. As usual, Debbie had insisted on the paella with chicken and pork. For an intelligent woman, she was as traditional in her tastes and unwilling to experiment as any Southern mom whose tastes were limited to pork, chicken and mashed potatoes.\n\nOr maybe our differing culinary tastes were just another indication of the chasm that had been growing between us that finally led to our divorce.\n\nAline polished off at least a half a pitcher of hard Sangria and was laughing and clinging to me as we walked out the door. It was nearly 9:30 p.m. and I figured we'd just head back to the condo and try to find at least one room we hadn't already christened. We'd done the bathroom, the tiny living room, the kitchen/dining room. Come to think of it, there wasn't anyplace else to christen. \n\nAs we walked across the small parking lot to where my Escalade was parked, her cell phone began to trill the \"Marseillaise\", the French national anthem. We both stopped and looked at it at the same time. I didn't have to look at the number. She hadn't received a call since she'd gotten to Jacksonville. I didn't know of anyone, other than the obvious suspect, who would be calling her.\n\nShe gave me a look and punched the button to answer the call. At least she didn't turn away from me to talk to him.\n\nThere was a rapid stream of French that I could barely follow. All I knew was she had said \"hello\" in French. Philippe of course sounded the same in any language. There were questions and she responded in rapid French. There was a smile that broke my heart and more French. Then a pregnant pause and \"Jacksonville\" and \"Bill Maitland.\"\n\nThe conversation proceeded for a little while and then she handed me the phone.\n\nAs she did so she mouthed the words, \"He knows.\" I didn't know how much he knew, so I assumed he simply knew that Aline was vacationing in Jacksonville and I was showing her around. It had been stupid to assume he didn't keep some kind of eye on where and what his wife did. That was the way I'd play it.\n\n\"Hello, my friend.\"\n\n\"Hello, Philippe. How have you been?\"\n\n\"You know how it goes,\" he said in almost perfectly unaccented English. \"Evil never rests. Of course, the Angel of Death must be aware of the depths to which men can sink.\"\n\n\"I'm famous over there?\"\n\nHe laughed, that deep rich chuckle that reminded me of the nights we had gone drinking and he had flirted with three or four women, at least a couple of whom I had no doubt he'd be fucking after he left me.\n\n\"You're famous everywhere, Bill. With the Internet, anything is possible. I've read of the 'Killer Granny' case. That was a bold stroke on your part. I would have bet against your winning. But, I thought when you were here with us that you are a man it's not safe to bet against.\"\n\n\"It's all PR Philippe. Just a matter of luck and timing. I'm the same guy I was when I was a grunt prosecutor hitting the dives with you and your Gendarme friends.\"\n\nHe laughed again.\n\n\"We had some good times. I am sorry our paths never crossed again.\"\n\n\"So am I, Philippe. I appreciated your sending me the followup. It took you a solid year, but you did nail those bastards. Too bad that the head man chose to shoot it out rather than face trial.\"\n\n\"It was actually rather fortunate. You and I both know it would have been hard to get a conviction. There were too many layers between him and the slavers. He saved the state a great amount by taking a bullet to the brain rather than wasting the time of many good men and women.\"\n\nI had no doubt then and I had no doubt now that the rich man who profited off the sale and use of Muslim teenage girls hadn't put a bullet into his brain voluntarily. Philippe had never admitted in his file which he'd emailed me that he had had the man murdered, but he made it clear when you read between the lines. \n\nAnd I knew from hints that cops and thugs both dropped in Parisian dives that, like me, Philippe was owed favors by some of the worst of the worst, and I had the feeling that he had called in at least some of those favors over the years.\n\n\"When Aline decided to wait until I brought Andre back to Paris, I had assumed she would stay with the Bonne Chance or stay in Miami,\" he continued in a friendly voice. \"But friends told me she had left the ship. Imagine my surprise when I learned she was staying in Jacksonville, the stomping grounds of my old American friend.\"\n\nI didn't say anything.\n\n\"I haven't been keeping up on your activities,, but when I learned that Aline was in Jacksonville I thought of you and made some calls. I learned of your -- troubles. I was very sorry to hear about the end of your marriage. I remember the photo you showed me of your Debbie. A very beautiful woman.\"\n\nI didn't say anything.\n\n\"I know that you loved her very much. It was evident in every conversation we had about your life in America. You remember that second night we went to that bar near the Seine? Lilly, the bartender, was taken with you. She was always strange for Americans. Must be the accent. She practically threw herself under you, but you never took the bait.\"\n\nHe laughed that laugh again.\n\n\"She was very upset with you when I talked to her later that morning. You hurt her feelings. I explained to her that you loved your wife and Americans take a different view of recreational sex than we French. You have a -- stricter -- view than most French.\"\n\n\"I was in a bad place when I met Aline, Philippe. If she didn't tell you, I was close to being suicidal. Debbie tore my heart and my balls out when she left me. My time on the Bonne Chance and Aline's friendship helped me take my life back. I can never express my gratitude to her. You are a luckier man than you know to have her in your life.\"\n\n\"I know I am, my friend. It never hurts to be reminded though. A married man sometimes forgets what he has, until he sees it through someone else's eyes. She is very fond of you, you know.\"\n\n\"I hope so.\"\n\n\"No, truly. When I asked her just now, she told me of how you had met on the Bonne Chance and that you had volunteered to show her around your city. She said you have been very gracious with your time, taking her to restaurants and seeing that she has not been bored. I would have expected no less of you, my friend, but I am grateful.\"\n\n\"It's been my pleasure, Philippe. I can honestly say I've enjoyed every minute I've spent with her. And since my divorce, I have the time to show her my home town.\"\n\n\"You have my thanks, Bill. When you're separated as much as we are by our professions, you can worry. It can be hard to keep a marriage alive. When she is with you, I can rest assured that she is safe. And that you would not do anything to jeopardize our friendship because you are not that kind of man.\"\n\n\"You know I consider you a friend, Philippe. And I would treat your marriage with the same honor and fidelity that I know you have shown it.\"\n\nThis time there was a long silence on his end of the line. Finally he said, \"I am back in Paris now with our son, Bill. I am looking forward to Aline's return. I have missed her, in my life and in my bed. \n\n\"I only hope that someday in the near future you can come visit us in Paris. You have never seen the two of us together. I don't know if we have a marriage to equal the one you had with your Debbie, but I would like to show you what our marriage is like, what we are like together.\"\n\n\"I hope you have a better marriage than Debbie and I had, and I hope yours lasts longer than ours.\"\n\n\"Can I speak to Aline again, Bill? I wish you good fortune if we do not speak again.\"\n\n\"And you also, Philippe. Here she is.\"\n\nI handed the phone back to her\n\nHer face was white in the moonlight as she brought the phone to her ear. I heard the whisper of voices in the darkness and then she said, \"Andre...\" \n\nHer face was lit with a smile as tears rolled down her face. Finally she said, \"Je t'aimerai toujours, Andre.\"\n\nThe tears stopped as she spoke for a little while longer to Philippe and finally, \"'Je T'aime. Au revoir.\"\n\nAs she clicked off the hand holding the phone dropped to her side. She looked across A1A toward the sound of the rolling surf and swayed. I stepped in behind her and put my arms around her. I could feel the silent sobs she fought to hold in. I didn't say anything because I didn't know what I could say.\n\nWe walked to the car in silence and drove home to my condo without saying a word to each other. In bed she grabbed me hard and burrowed her head into my chest, wetting my chest with her tears. We didn't have sex, merely held each other until her breathing slowed into the natural rhythm of sleep. I stared at the ceiling until dawn.\n\n################## \n\nTUESDAY, SEPTEMBER 6, 2005 -- 3 p.m.\n\nI walked into Sheriff Knight's office. Knight was a relatively tall, maybe 6 foot 1, sandy haired 50-ish cop who'd managed to stay trim and fit. He was a good looking guy except for a bad case of acne he must have gotten as a teenager that had left his face pocked.\n\nIn his case, it made him more of a regular guy type, which he had used in his campaign to succeed the Old Sheriff as everybody had called the guy who ran the department for 20 years prior. We'd always gotten along and I'd tried to stay on his good side. I didn't think I'd manage to do that today.\n\nHe got up from behind his desk and came around to shake my hand.\n\n\"Hi, Bill. I appreciate your taking time out of your busy schedule to come have a talk.\"\n\nI smiled at him and said, \"Why do I think there's a little barb stuck in there, Sheriff. Anyway, you know I'm never to busy to talk to the head law enforcement officer in this county.\"\n\nHe laughed and said, \"I'd better roll my pants up beause the shit is getting really deep. And here I'd heard you weren't a diplomatic type.\"\n\nI smiled at him and said, \"Not a matter of being diplomatic. You're a very important man in this community. We don't get much done without your active cooperation. I'm always glad to meet with you or anybody in your department. We're both on the same side.\"\n\n\"Most of the time.\"\n\n\"I thought it was all of the time, Sheriff. What do you have in mind?\"\n\n\"You know what I'm talking about, Bill. Shawn Smith.\"\n\n\"We both have the same objective there. We want to make sure that police officers obey the same laws and are judged by the same standards as any other person involved in an incident in which people lose their lives.\"\n\nHe leaned back against his desk.\n\n\"God, sometimes I think you attorneys are some alien breed that was dropped on the earth, because you are definitely not real people. How do you manage to say something that sounds so logical and is full of horseshit at the same time?\"\n\n\"Not sure I follow you, Sheriff Knight.\"\n\n\"That sounds good, Bill. Police officers should be judged by the same standard as everyone else. Of course you and I know that's a crock of shit. Every cop is judged by a much higher standard than anyone not wearing a badge. My men have to make split second decisions involving life and death and then weeks or months later guys in suits that have never had a gun pointed at them decide if they made the right decision.\"\n\n\"That's why we pay police officers well and give them great retirements and look the other way at a lot of shit they do that would get someone not wearing a badge jail time.\"\n\nI sat down in one of the chairs facing his desk and cross my legs and leaned back.\n\n\"Don't try to paint me as a cop hater, Sheriff. You've worked with me since you got into office. I've always backed your guys. You won't find a stronger backer of police than me in my office. Because I know how important your men are. It doesn't matter how good we are at putting away bad guys. Your guys have to catch them first and hopefully save innocent victims from assault or rape or murder at the same time.\n\n\"But....\"\n\n\"Shawn Smith is a good man and an exemplary officer. He hasn't deserved to be hung out to dry all these months. He was allowed to come back to work, but without a clearance those vulture asshole attorneys representing the Roper families and children and trying to get his scalp.\n\n\"And everybody he works with knows he could still go down. Other officers are afraid to get too close to him for fear that it will be catching.\"\n\n\"Sheriff, I know he's a good cop. Unfortunately, he's a good cop who lost it and shot a man in the back and planted a gun on him to try to get away with murder. Or at least manslaughter.\"\n\nKnight just shook his head and walked back behind his desk and stood there looking at me.\n\n\"You really believe that?\"\n\n\"Yeah, unfortunately I do.\"\n\n\"Those guys could have picked up that gun from anywhere. It was in the seat of the truck where Artie Roper was headed when Smith shot him. Just because we can't prove that any of the three Ropers bought or got the gun doesn't prove they didn't place it there.\n\n\"You know as well as I that there's a river of cheap, untraceable guns flowing through this city, through any American city. The Ropers could have brought the gun.\"\n\n\"And Artie Roper walks with his two brothers armed with only clubs into the house of an armed cop and leaves the gun behind the cab of his truck? I know all three of them were pretty stupid. But you believe anybody is that stupid?\"\n\n\"Don't ask me how stupid criminals are. I could keep you entertained for hours talking about the stupid crooks I've run into in 20 years in this job. They're not geniuses.\n\n\"Anyway, I'll agree that the Ropers weren't homicidal killers. I believe they intended to break into the house while Smith was asleep or groggy, get to him before he could grab a gun and beat the shit out of him. He was a black man sleeping with and stealing a white man's wife.\n\n\"I don't think they intended to shoot him in cold blood. But, I think the Ropers must have brought the gun along just in case. And when Smith fought back and started shooting, Artie lost his nerve and was running for the truck. \n\n\"Smith followed him out. He had no way of knowing what the Ropers had out there. And I wouldn't expect him, after three men burst into his house in the middle of the night, to just stand there and let Artie get to this truck and maybe start shooting. \n\n\"Cops aren't trained to let themselves be used as target practice by criminals. You honestly believe you're in danger, you shoot to kill. That's what I'd do. That old saying is true; better to be tried by 12 than carried to your grave by six.\"\n\n\"I understand where you're coming from, Sheriff. And you might be right. But I might be right. And I owe it to Art Roper and the taxpayers of this city not to sweep this under the rug. I'm going to take Smith and the shooting to the grand jury and let them hear the evidence and let them decide if there's enough to take him to trial. I'm not going to make the decision myself.\"",
        "For the first time Knight let his anger show.\n\n\"Bullshit, Maitland. Bullshit . And you know it is. You are going to play that damned grand jury like a grand piano. A good prosecutor can get a grand jury to indict Mother Teresa if you want her scalp. Grand jurors are sheep. So spare me that crap about grand jurors being independent evaluators. YOU want to bring Smith to trial, and before you're through he's going to be railroaded to Raiford.\"\n\n\"You're wrong, Sheriff.\"\n\n\"The worst part is that you know how this is going to end up. At best, he'll be in solitary for his own protection for the next five or ten years and if he gets out he'll be a broken man. \n\n\"But he won't get out. Prisoners don't like cops. He won't make it. They'll either gang rape him, or gang rape him and then plant a sharpened screwdriver up his ass or in his eye. You take him to a jury, and you're killing him.\"\n\nThe more he spoke the louder he had gotten until he was almost shouting at the end. I kept my voice purposely calm and low key.\n\n\"I don't deny that if he's convicted, he'll have a rough road. But it's not an automatic death sentence. And Art Roper won't be getting any second chances. I happen to believe in jurors, Sheriff. They usually come out with the right decision. Not always, but most of the time. And I don't have super powers. They could just as easily acquit him, let him walk away.\"\n\nHe looked at me again and then shook his head.\n\n\"I told him he was a stupid bastard to brace you in that sandwich shop. He's sure that's why you're going to go after him. It was a stupid thing to bring your wife -- your ex-wife -- into it and he knows it. Everybody around the courthouse knows that's a sore subject. If I was you, and I lost a woman like that, I'd be walking around pissed all the time too.\n\n\"But insulting you and hitting you in a sore spot, is not reason enough to ruin a man's life. I'm asking you as one professional to another, one man to another, don't take out your anger on Shawn for something he had nothing to do with. He's not Doug Baker.\"\n\nI stood up.\n\n\"Whether you or he believe it or not, his comments in the shop have nothing to do with my taking the case to the Grand Jury. Or at least, I'm not doing it because he got me angry. I've been putting this off for way too long, Sheriff. I haven't been doing him any favors by letting this drag out. We need to get closure on this. That's why I'm taking the case to the grand jury in about two weeks.\"\n\nKnight just stared at me and his hands closed into fists.\n\n\"You son of a bitch. And I thought you were a good guy.\"\n\n\"I am.\"\n\n\"If you do this, Maitland, your name is going to be shit with every officer in this county. No more rounding your drunk ass up and seeing you get home. You step out of one line fucking time and I'll make sure you wind up behind bars. See how you like it when we toss you in with the animals and tell them who they're bunking with.\"\n\nI shrugged and started walking toward the door.\n\n\"I guess I'll have to lead a perfect life then, Sheriff. It'll help knowing you're looking over my shoulder.\"\n\n\"I'm calling Edwards. You may think you're God, but you're just a goddamned flunky. He won't let you do this, not when he knows what's riding on it.\"\n\n\"Talk to him all you want. But if I was you, I'd tell Shawn to get the best criminal attorney he can find in the next couple of weeks. He'll need a good one.\"\n\nAs I walked out I thought that I probably wouldn't get my yearly Christmas bottle of expensive Scotch from the Sheriff this year. \n\n######################## \n\nWEDNESDAY, SEPTEMBER 7, 2005 -- 11a.m.\n\nMyra looked up at me curiously as I stopped at her desk. She wore a dress with a slight scoop neckline that would have been demure on most women. In her case it looked like a sack of volleyballs was rolling around trying to escape out through the top.\n\n\"I won't ask you what's going on, Bill. But, I don't know that I've ever seen him this angry.\"\n\nThe last was more of a question than a comment and I appreciated the delicacy of her probing.\n\n\"I'm afraid this is where the rubber meets the road, sweetheart.\"\n\nHer look said it all. I couldn't really explain.\n\n\"When I come back out, Myra, I'll know if I still have a job here.\"\n\nShe looked stunned.\n\n\"Wha...t? Bill-Mr. Maitland. You're not...resigning...are you? This place wouldn't be the same without you.\"\n\n\"No. He'll have to make that decision.\"\n\nI reached out and took one of her slim hands in mine.\n\n\"If things go south, and sour, really bad and it gets hectic and I don't have a chance to talk to you again...\"\n\nI looked into those green eyes and let my gaze wander down the hills and valleys of that incredible body that I had passed on for a woman that was almost certainly going to leave me.\n\n\"I want you to know, Myra, that it's been a pleasure working with you. You're smart and competent and entirely too nice for any woman with a face and body like yours. I never said it, but I have lusted for you every day for five years, whether I saw you or not, and if I hadn't been married and in love with my wife I would have hit on you every single day.\n\n\"And I know that God has a sense of humor because after lusting for you helplessly for five years, I'm finally free of that bitch I was married to and I find myself in love with somebody else. Life isn't fair.\"\n\nShe took her hand and ran her thumb gently up and down the inside of my palm. I was reminded of the old joke about how Martians make love. Her touch was hotter than most blow jobs.\n\n\"I know this is serious, Bill, because you talk like you're dying, like you'll never see me again. But..just remember..whatever happens...you may not be here, but I'll still be here. For when you finally are out of love with somebody else.\"\n\nI squeezed her hand, said, \"Wish me luck,\" and walked in to see which direction my life was likely to go in from this day forward.\n\nEdwards was sitting back in his chair. Unlike most times, he didn't get up to shake my hand. He just stared at me. For most SAs summoned to his office, I imagine it would be an intimidating stare. But I had known him too long and we had a different relationship. And maybe I just didn't give a damn anymore.\n\n\"Good morning, Bill.\"\n\n\"I hope so.\"\n\n\"That's entirely up to you.\"\n\n\"No really, it's up to you. How about not dancing around this thing. What did you want to talk about.\"\n\n\"Okay, straight to it. Good. Knight is so fucking angry he's about to stroke out over the way you've been jerking Shawn Smith around.\"\n\n\"I'm sorry the Sheriff is upset. Is that all we had to talk about?\"\n\n\"Bill, Knight is one of the most even tempered, easy-going guys you'll ever run into. And you know it. But he said he called you in the other day to get a handle on when you're going to give Smith a clearance on the shooting and you told him you were going to take Smith before the Grand Jury and try to prosecute him for murder.\"\n\n\"That's right. That's what I told him.\"\n\n\"And when were you planning on letting me into your confidence about all this? I thought we had an understanding that eventually you were going to clear him, let him go back to his life and let this mess die down.\"\n\n\"Actually, Austin, we never had that understanding. I know that's what you wanted. You've hinted about it, but you never flat out said that I had to clear him. I thought you wanted me to treat this case like all the others and use my best judgment.\"\n\n\"I do. But I don't understand why you decided to crucify this guy. It's true I want him cleared. The Police Union and 99 percent of the county's cops want him cleared. The NAACP and at least two other black groups are ready to go on the warpath about another black man railroaded by white southern justice if he isn't turned loose.\"\n\nHe leaned forward and steepled his fingers in front of him. He reminded me of an ash blond Gregory Peck from \"To Kill A Mockinbird.\" He had a high forehead, dark brown eyes, straight nose, strong chin. It doesn't hurt in today's media environment to be good looking, and Edwards was. \n\nHis hair had turned almost white, but in a relatively unlined face it didn't make him look as old as he really was. It just made him look more distinguished, the way Governors and Senators and -- if you could dream that high -- Presidents ought to look.\n\nHis smile was his fortune though. He wasn't smiling now, but when he unleashed that wattage, it made every person watching him on television or in a crowd he was addressing think that this was a good guy to go out for a couple of beers with, or women started fantasizing about what that still lean 6-foot-4 body looked like under the clothes. Whatever charisma, or 'it' was, he had it.\n\n\"You and I both know that if this blows up and he gets convicted and maybe dies in prison, the blacks will never forget or forgive me, and every cop and Highway Patrolman in the state will do their best to screw me over. This will still be hot and fresh in everybody's mind next Fall when the Governor's race rolls around.\n\n\"I'm running -- or will be running -- as a conservative, law and order candicate, but I've always good relations with the blacks and Hispanics. It's a perfect combo. \n\n\"But how can I do that next year if every major black organization in the state is calling me a corrupt racist and cops are saying I hate police and want to punish a cop for protecting himself and his -- fiancee -- from home invaders. \n\n\"The cops are going to kill me with the average white law and order voter, and the blacks are going to kill me with every minority. What the hell does that leave me with as a voter base? \n\n\"And I ask myself, why have I been busting my ass for the last ten years hustling money for Republican candidates, making myself sick choking down overcooked chicken and steak at political functions, spending days and weeks away from my wife to earn political credits.\n\n\"What does it matter if the guy that I trusted to help push me over the line screws me royally right at end, just as I get to the finish line for the 2006 race.\"\n\nHe was really trying to be calm, but the anger was flooding out at the end of his comments.\n\nI didn't say anything. Let him get it out.\n\n\"I thought we were friends, Bill, in addition to being co-workers and committed to the same thing, which is justice. We've talked enough, you know who I am. I've got an ego, you don't get into public life without one. But I really do think I can do some good in Tallahassee. \n\n\"I'm honest, and I have ideas on how the state could be a better place to live in for everybody. The prison system is a horror and we're losing kids every day that could be saved. Our drug policy is medieval and because I am a law and order candidate, I can do things to make our drug policy sane that no liberal could ever get away with.\n\n\"I've got ideas on how to make our schools better, how to make the state cleaner without driving away business. I think I could do a lot, Bill, but I can't do anything if I can't get elected. And you're going to drive a stake through the heart of my election chances if you prosecute Smith.\"\n\nWe just looked at each other for a few seconds.\n\n\"I agree that you'd be a good governor, Austin. We've talked enough, and I know you're a good enough politician that you could do a lot of good in the Governor's mansion. But, what are you prepared to pay to do all that good?\"\n\n\"I don't understand.\"\n\n\"Suppose I had somebody bring in Doug Baker, the fucker that stole my wife away from me and ruined my marriage and my life. And I had him kneel down in front of this desk and I put a .45 to his head and told you that if you let me blow his brains out, I'd move heaven and earth to get you into the Governor's chair. And only you and I would ever know that Doug Baker was the price you had to pay. Could you do it?\"\n\n\"You're not making sense, Bill. What does that have to do with Shawn Smith?\"\n\n\"You know that two of the men -- Alan and Arnold Roper - who broke into Smith's house while he was there with his fiancee, who happened to be married to Arnold Roper at the time, , were shot inside the house. \n\n\"Smith could claim self defense for killing Alan and Arnold. But Art -- Arthur -- Roper, the other brother, was shot in the back trying to get to his truck. You and I both know Smith used a throw-down gun to shoot an unarmed man in the back.\"\n\n\"You 'think' he used a throw-down gun. You can't prove that.\"\n\n\"True, but I've got enough evidence to convince any jury that Art didn't use guns, he didn't have one before that day, and Art's brothers didn't use guns. They had a tire-iron, a baseball bat, and a billy club bought at a used police equipment online site. Nothing else that anyone knows about.\n\n\"I looked into Art's background. He was a high school dropout, been through dozens of temp jobs, usually getting fired. He had dozens of misdemeanor arrests, usually drunkness, getting into fights, dealing in stolen property. One felony involving an attempted robbery of a liquor store down on 8th Street where he was a lookout. He didn't carry.\n\n\"So, he was pretty much white trash, a loser. He'd never been married. But, he did have two illegitimate children, one an eight-year-old boy named Pete and a five-year-old daughter named Melanie, all by an old girlfriend named Lawanna Salyers. \n\n\"She's been with about six men since Art. They've gotten back together and split a dozen times in the last ten years. He couldn't keep from hitting her when he drank and she couldn't keep her legs together around strange men when she drank.\n\n\"She told me when I interviewed her that she knew she'd never be able to make it for long with Art, but the one good thing about him was that he loved his kids. He couldn't always make child support, but he gave them every spare dollar he got. He saw them on their birthdays and Christmas. They named the boy Pete after Art's grandfather.\"\n\nI looked at my boss and saw that he got it.\n\n\"Art Roper had as much right to life as Doug Baker, or you, or me. He should have gotten jail time or prison time for taking part in a home invasion. But he didn't try to kill Smith. He was running for his life when Smith executed him. \n\n\"That's why I'm going to take Smith to the grand jury and let them decide if he should go to trial. There are questionable elements, but Art Roper deserves a grand jury hearing.\"\n\nI stopped and looked around his office, at all the photos of Edwards and state and national politicians, the plaques and trophies. He wasn't just a figurehead. He was a good man. But even good men can be wrong.\n\n\"Art wasn't Doug Baker. But he was murdered. Are you prepared to let Art Roper be the price you pay to walk into the Governor's mansion? Can you live with that?\"\n\nEdwards just shook his head and dropped his eyes, then looked back up at me.\n\n\"Shawn Smith is a good cop, Bill. You checked him out and you know I'm right. He's received department commendations three times in 14 years on the force. He saved the life of an old man having a heart attack three years ago. He walked into that KFC armed robbery six years ago and killed both those bastards after they'd executed two workers and were getting ready to kill the other two.\n\n\"Even if I believe you, and he executed Arthur Roper, he had provocation. Three men break into his house in the middle of the night, start beating him, try to grab and take the woman in bed with him. He got to his gun and killed two men and saw a third running. He probably chased him on instinct and he had no way of knowing the guy wasn't going for a gun.\"\n\n\"At best for your case, at best, he had a lapse in judgment. He let anger and fear overcome police training and he did what almost anyone else would do. He shot the bastard.\"\n\n\"So if you're a good cop, or just a good guy, for enough years, you're allowed a free pass, good for one murder?\"\n\nHe scratched his chin and said, \"That Angel of Death crap is only PR, remember Bill? We're people, dealing with flesh and blood victims and criminals and sometimes we have to temper justice with mercy.\"\n\n\"What kind of mercy are you going to extend to Pete and Melanie? You going to bring their father back?\"\n\nHe just shook his head.\n\n\"Don't do this, Bill. Don't be a hardass on this one. There's too much riding on it.\"\n\n\"Public trust is riding on this. You and I both know that the first thing that went through people's minds when they heard about this was, another cop shoots down three guys and will walk away from it. So Smith is a good cop. He's a hero cop. Last I heard, being a hero cop doesn't allow you to get away with murder.\"\n\nI let the silence grow because I had the feeling we'd both said almost everything we could say until we cut right to the bone. But finally I had to say the words that might end a chapter in my life.\n\n\"I'm sorry, Austin, I really am. I tried to walk away from this. I've been a coward because I've been afraid it would come to this so I tried to delay things. I should have taken the case to the grand jury a couple weeks after the shooting. But I knew how explosive it was. And I guess I figured that I like this job too damned much to take a chance of losing it.\"\n\nEdwards gave me a hard look. \n\n\"What do you mean by that?\"\n\n\"I'm going to take it to the grand jury in two weeks. Let them look at it and let the cards fall where they may.\"\n\n\"No.\"\n\n\"No?\"\n\n\"No, you're not going to take the case to the grand jury. You're going to issue a report clearing Smith of any wrong doing and listing it as a justified shooting by virtue of self defense in the course of a home invasion.\"\n\nThis time it was me shaking my head.\n\n\"Not going to happen.\"\n\nHe leaned forward over the desk.\n\n\"Bill, this is partly my fault. We made an agreement. I trusted your judgment. I always have. I've let you run the place. But I've always basically agreed with your decisions. Not this time. I know you think I've got personal reasons for this decision, but I think we just honestly disagree. I don't think it would be right to destroy a man's life for something you only 'think' he did.\n\n\"And, the agreement only stands as long I say it does. You are going to do what I asked you to do.\"\n\nI stood up. He leaned back and his eyes opened a little wider.\n\n\"No, Austin, I'm not. I am going to the grand jury, as long as I'm the lead prosecutor.\"\n\n\"That's right. As long as you're the lead prosecutor. Reconsider.\"\n\n\"I wish I could. I've thought about this for months. And I can't.\"\n\nHe stood.\n\n\"If you're intent on doing this, I'll expect your resignation on my desk at the end of the day. You're not just out as lead prosecutor. You're out of this office and don't expect a job in any State Attorney's office in Florida. But as the Angel of Death, I'm sure you will land somewhere.\"\n\n\"No. I'm not resigning. You can fire me. But there is something you should consider before you do anything you can't take back.\"\n\n\"What?\"\n\n\"Like you said, I'm the Angel of Death. There are people all over this country, not just in Jacksonville, that would be intrigued by a story about a prosecutor so blinded by ambition for higher political office that he was willing to let a killer cop skate on the cold blooded murder of the father of two to avoid antagonizing cops and the African American community.\"\n\nI watched the ice descend over his eyes and a smile froze on his face.\n\n\"Are you threatening me? Me? You ungrateful son of a bitch. I gave you this office and let you play God for six years and this is how you repay me. Besides which, who do you think is going to even care about one case involving a cop that may or may not have broken the law?\"\n\nI smiled at him, and had to force myself. I didn't want to do this. I did like and respect the man. But on this one he was wrong.\n\n\"How many people care about what Bill Maitland thinks? Probably not that many, although I think it would interest the local media. But the Angel of Death? A lot of people. It would at least give my charges an audience. Remember, you wanted to push the Angel of Death PR angle. Well, live by PR and die by PR.\"",
        "\"No matter what, Bill, it's only one charge. It will be forgotten. No one will care by next year.\"\n\n\"You're a reader, Austin. I know you've read John D. McDonald, the Travis McGee writer. There's one...I think it's \"A Flash of Green\", although I might be wrong. You remember that one. It's about a guy who's a big big fish in a little pond and he thinks he can get away with anything. But an enemy manages to publicize a scandal he's involved in.\n\n\"The big fish walks away from the scandal, but he's going to be stuck in that little pond for the rest of his life. A line has been drawn around the Little Pond and as long as he stays in it, he'll be safe. But if he ever steps outside it, the scandal he's been tarred with will be brought up. He'll never win higher political office or move to a higher level in business. Because no one will want to have the scandal tar them.\n\n\"How does this apply to you, Austin? Well, there will be a well publicized scandal about you betraying the public good to curry favor with cops and miniorities in the archives of most major newspapers and organizations around the country. \n\n\"When you go for governor next Fall, how many negative ads will be run quoting a prominent prosecutor about how you can't be trusted to protect the public good?\"\n\nHe was leaning forward on his desk and I noticed the knuckles were turning white as he pressed down.\n\n\"Doesn't matter if the charges prove out or not. All a lot of long suffering white voters will see is another politician currying favor with blacks and minorities, and a lot of minorities who don't trust cops will just see another politician who lets cops go around killing people and getting away with it. \n\n\"You run for Governor and you're going to get screwed from both ends. It's hard enough to win any elective office without those kind of lead weights around you. \n\n\"You fire me and I go public, you might as well learn to love being the State Attorney here, or maybe run for Mayor. Because you're never going to rise any higher, and all those dreams you had of doing good for the state can be put into a drawer somewhere.\"\n\nFinally he eased his grip on his desk and sat back down. Taking a deep breath, he said, \"That French woman you're banging has one hell of a body.\"\n\nI know my mouth dropped open.\n\n\"That change of subject just gave me whiplash. Where did that come from?\"\n\n\"Just a comment, Bill. I had no idea when I called the Captain of the Bonne Chance and asked him to give you a babysitter that you'd wind up banging her. And not only that, but that she would follow you home. You think her husband knows what she's up to?\"\n\n\"Austin, I knew you could be cold blooded when you wanted to be, but you honestly think that threatening the marriage of a woman I'm seeing is going to make me back off?\"\n\nHe shrugged.\n\n\"Of course not, unless you care about her and her marriage. Of course if you did, you wouldn't be banging her, would you?\"\n\n\"Is there any point to this conversation? And how do you even know about her? Do you spy on all your employees?\"\n\n\"No, only the ones that are important. Actually, Harry, you know him, he's one of our investigators, was having an anniversary supper at the restaurant where you and your family showed up last weekend. He recognized you, and, naturally, knowing about your divorce, he spotted the good looking brunette sitting with you. He took a picture. It's second nature with him.\n\n\"Well, since you've already had one breakdown and you're vital to this office, I had her checked out. We employ a lot of investigators, you know. And I talked to the Captain of the Bonne Chance. \n\n\"So I know what happened on the Bonne Chance between you and Aline des-Jardins. I know she's currently married, with one son. And I know her husband knows you from that investigation four years ago in Paris.\n\n\"That one kind of surprised me. You're the guy who does the right thing, and you got a married woman to cheat on a man who took you under his wing and was your friend. You seduced a friend's wife. Somehow, after that experience with Doug Baker, I wouldn't have expected that of you.\"\n\nI should have just walked away, but I was curious to see where he was going.\n\n\"That's a fucking low blow, Austin, and you know it.\"\n\n\"About as low as what you've done to Philippe Archambault.\"\n\n\"I repeat, what is the point?\"\n\nHe smiled. Despite his nice guy image, he could be a bastard when he wanted to be. He wanted to be now.\n\n\"You know she's never going to stay with you, don't you?\"\n\n\"So now you not only snoop, but you tell the future?\"\n\n\"She's been married for ten years. She's had a few shipboard flings, but she always goes back to Philippe. She has a son to tie her to him. If they split she knows she'll never get her son. Philippe is too high in the French government. He'll get the boy. And so when her two weeks here is up, she's gone. No matter what she tells you.\"\n\nI already knew that, but it sounded different coming from him.\n\n\"Again, so? What do you care about my love life?\"\n\nHe pointed to a photograph in a frame on his wall. It had been taken at a party the year after I was appointed lead prosecutor. He was there with his wife, the three other Chief Assistants and their wives and at the end myself and...\n\nI looked away from it, determined I wouldn't let him read anything in my eyes or on my face about how the photo hit me.\n\n\"Aline is a passing fancy. You're still in love with your ex. I saw it just then. Anybody that's around you when she's anywhere close can see it. You can lie through your teeth, but why bother. You can bang all the women you want around the courthouse, but there's a hole in you and you've never going to fill it with anybody but her.\"\n\n\"You're so full of shit, but again, what does this have to do with me and Shawn Smith?\"\n\n\"If you let Shawn Smith slide, I'll run for Governor next year and get it. Even if I don't get it, I'll step down and I can arrange it so you're appointed to follow me. That gives you four years to prepare for another run. With a four-year track record, my backing and that 'Angel of Death' reputation you can probably have the job as long as you want it.\"\n\n\"And....?\"\n\n\"This job takes time, but not like yours. You'll politic and handle a few cases, but this is only a 9-5, maybe a 9-6 Monday through Friday job. Being a prosecutor cost you your marriage. Being the boss will let you take back your life.\"\n\n\"I don't have a life, as you well know if you're keeping tabs on me that closely.\"\n\n\"You could, Bill. Your ex is seeing another instructor at UNF, a writer type named Clint Abbott. Seems like a decent guy but they're just friends with benefits according to all we can tell. \n\n\"In the meantime, she's buzzing around the courthouse in her new job and, according to some of our female staff, she manages to find reasons to come up to this floor many more times than she needs to. Almost as if she was trying to see, or be seen, by somebody.\"\n\n\"If this was a Harlequin romance, I'd say you might have something. But there is nothing left between us, never will be.\"\n\n\"You're not the man you were six or seven months ago. And whatever she did is in the past. If you wanted her back, I'm betting you could get her.\"\n\nHe turned the photo that sat on his desk next to his phone around so I could see it. It was a photo of himself, his wife in a low cut black gown and their two daughters since married and mothers in their own right.\n\n\"Greta and I have been married for 30 years next February. It was the best thing I ever did. I was pretty wild in my younger days, but I've never regretted marrying. I'm proud of what I've done in public life. I'm proud of the job I've done here, not least of which was picking you. But there's nothing in my life that matters as much as she does.\n\n\"I know you love this job. I know you've made sacrifices for it. But you can't take the damned job to bed with you at night. You can't hold the fucking job in your arms when life kicks you in the teeth and you need human contact. Aline won't be in your life. You can't fill it with temporary stand-ins.\"\n\nHe turned the photo back toward him.\n\n\"You're not just giving up this job if you go forward with the grand jury on Shawn Smith. You're giving up any hope of ever putting your life back together, of winning Debbie back.\"\n\nI was determined that the puppet master wouldn't know that he had just kicked me in the guts with his words.\n\n\"We playing a scene from Faust now, Boss? You're Mephistopheles offering to grant me my fondest wish if I'll only surrender my soul?\"\n\n\"Just think about it, Bill. You said you won't do anything for a couple of weeks. I gather you're waiting to see what happens with Aline. All I ask if that you think about what we've talked about before you make a final decision. You've waited this long. Give it a couple of weeks.\"\n\n\"I won't change my mind.\"\n\n\"I'm hoping you will.\"\n\n####################### \n\nWEDNESDAY, SEPTEMBER 7, 2005 -- 2 p.m.\n\nJudge Leonard Pizaro looked first at Lew Walters and then at me.\n\n\"You gentlemen ready to proceed?\"\n\nJudy Johansen sat in an orange jail jumpsuit at Walters' side. He had railed and pissed and moaned about the prejudicial impact of his client having to wear prison garb. When Pizaro mentioned that there was no jury to prejudice and that it was he, Pizaro, who had ordered her to wear the jumpsuit, all Lew could do was grin and throw his hands up.\n\n\"I had to try, your honor,\" he said.\n\nPizaro smiled back. A long, long, long time ago, I knew that he had been a legal hotshot. He had a grudging admiration for Lew's showboating he'd done his best to hide during the trial.\n\n' \"I understand your concerns, Mr. Walters, but Ms. Johansen has been convicted of premeditated first degree murder. There is no bail because with the money she has at her disposal she would be too great a flight risk. That means she has to be housed in the Duval County Jail and there is no rationale for allowing her to possess different clothing. Do you disagree?\"\n\n\"No sir, your honor.\"\n\n\"Are you ready to proceed with your arguments and witnesses?\"\n\n\"Yes, your honor,\" he said humbly. \n\nAs he turned to speak to his client I mouthed \"asskisser\" and grinned at him.\n\nWhen he just gave me a weak smile and bent over to talk to Judy I got a bad feeling. It wasn't like him not to give me shit about something like that. I'd talk with him after we finished.\n\nJessica Stephens had come up from behind me with a file I'd requested thirty minutes before. It wasn't like her to be late to hearings. Strange things.\n\n\"Is everything alright, Jessica?\" I asked, looking at her curiously. She swept a few strands of her hair back. I noted that a button at the top of her blouse was unbuttoned. And she was wearing hose, but one leg showed a flesh of flesh at the top. I really couldn't believe what I was seeing.\n\n\"Jessica?\" I said. She caught my eye and I slowly looked up and down. She noticed the unbuttoned button as my gaze dropped she looked down and spotted the errant pantyhose. Her face turned an attractive shade of crimson.\n\n\"Anything we need to talk about?\"\n\nShe looked up toward the front row of seats behind the defense. It was the reporters' row. I spotted the dark hair and barrel chest of TU reporter Carl Cameron. He was smiling at Jessica, the kind of goofy, loopy expression a man has after really good sex. I glanced at him, then back at Jessica.\n\n\"Where?\"\n\nShe blushed deeper, if that was possible. \n\n\"The bailiff's room behind Judge Pizaro's chambers.\"\n\nI broke into a smile.\n\n\"You slut, you.\"\n\nShe held her left hand out. There was a diamond ring on the second finger. A respectable diamond in a white gold setting.\n\n\"Carl?\"\n\nShe nodded.\n\n\"When?\"\n\n\"We got married Sunday. No time for a honeymoon so we're...\"\n\n\"Doing it everywhere you can. Well, congratulations, Jessica. You let him make an honest woman out of you. I'm happy for both of you.\"\n\n'It took me a long time, but I finally realized that I didn't want to live without him. No matter what it cost me.\"\n\nI knew what it had cost her.\n\n\"You did the right thing, Jessica. Being married is a good thing. And if anybody catches you, at least you've got a marriage license.\"\n\n\"Mr. Maitland?\"\n\nPizarro's voice cut through our conversation and I looked up to see one of Judy's sons approaching the witness stand.\n\n\"Sorry, your honor.\"\n\nWe sat down and I heard Judy's two sons talk about what a loving mother she had been and a good wife to her first husband. I heard them tell Pizaro what a son of a bitch Clark Carroll, the husband she had murdered by messing around with his heart medicine, had been to their mother. \n\nOf course, it had been mental abuse, simply because there weren't any confirmed medical records of physical abuse and she had never complained of it during their marriage.\n\nJudy followed and told the judge how she has fallen in love with a forceful millionair and been swept off her feet by him. But, she said, after they'd married he had changed, at least in part because his children hated her and wanted to keep her from inheriting any of his fortune.\n\nHe had been insanely jealous and bitter because he was unable to function sexually and made her life a living hell. But he had been clever and kept his torments hidden from the outside world.\n\nShe smiled at the judge, a sad smile, as she said, \"I'm not proud of what I did, your honor. I cheated on Clark. But I'm not dead yet. I'm a woman with a woman's urges. I wanted to be with Carroll, but it wasn't just that he couldn't physically satisfy me. He was so bitter, so jealous while I was still faithful to him, that we couldn't even cuddle, couldn't do the non-sexual things a loving couple can enjoy.\n\n\"I turned to another man because I was lonely. I needed a man's touch. I'm sorry, but I did.:\n\nThen she stared at me, a stare that should have turned water to ice.\n\n\"But I did not kill my husband deliberately. Mr. Maitland was able to fool the jury into believing that a mistake was murder. But I didn't mean to kill him. He made my life a living hell at th end, but I never wanted him dead. I knew he was in pain and he knew I was cheating on him. I was hurting him and I felt guilty about that. But as God is my judge, I did not kill him purposefully.\"\n\nLew had done a good job of preparing her. She actually sounded believable and if she had been testifying before a jury, I might have worried. But she was testifying before a man who had been hearing such statements for 30 years. And he had long ago learned to distinguish truth from bullshit.\n\nWhen Pizaro called on me I stood up and walked toward Lew's table.\n\n\"Ms. Johansen did a very good job in her testimony. I congratulate Mr. Walters on his preparation. I'm not going to introduce any witnesses and my comments will be short and, I hope, to the point.\"\n\nI turned away from Judy and Lew and walked to the center of the courtroom facing Pizaro.\n\n\"Your honor, the jury, the triers of fact, have determined that Ms. Johansen with premeditation deliberately gave her husband medication that she knew would kill him. They convicted her of first degree murder. Therefore, her denial of her role in his death simply is of no consequence. It's moot. The jury said otherwise.\n\n\"Ms. Johansen herself admitted on the witness stand that she had ample motive to kill her husband. She took a lover, who testified that she told him she was going to kill Clark Carroll. Even if you believe Ms. Johansen about Mr. Caroll's alleged abuse, that merely strengthens the argument that she had reason to kill him.\n\n\"And finally, it is clear that Ms. Johansen could have easily escaped Mr. Carroll's abusive ways, simply by divorcing him. But, if she had done that, she would not have been in line to inherit his millions. Thus she had another reason to murder him.\"\n\nI looked back at Judy. She had tried so hard. And it was all for nothing.\n\n\"That will conclude the state's arguments, your honor.\"\n\nPizaro took a slow and deliberate drink of water from a glass in front of him and then spoke to Judy.\n\n\"Ms. Johansen. Would you please stand. Mr. Walters. Mr. Maitland.\"\n\nI looked at her instead of Pizaro,\n\n\"I really don't need any more time to consider your sentence, Ms. Johansen. Nothing had been said here today that really changes the facts proven in this case. You have been found guilty of premeditated first degree murder. The possible sentence could be death. But in my opinion, this crime does not reach the level where a death sentence could be justified.\n\n\"Life in prison without parole is another option. In my judgment, however, this crime not not reach that level of punishment either. At your age, I believe a substantial punishment woiuld consist of a mandatory ten-year sentence to be followed by ten years probation.\n\n\"You're welcome to appeal this sentence, and I expect you will, but considering what you could have faced, I don't think any appeal will be upheld. And that is another reason for the sentence. I believe it will forestall an avalanche of appeals that will do nothing but further clog up the court system. \n\n\"The bailiff will now take you back, Ms. Johansen, and you will be transported to the women's section of the state's minimum security prison at Lawtey within the next two days. Good luck to you.\"\n\nShe just stood there for a long moment, her face frozen in a hopeful smile. One of her sons groaned, another fell back into his seat sobbing. She was their mother. It wasn't unexpected.\n\nTwo women bailiffs approached her. I walked over as they did. She stared at me as if she didn't know who I was. It was one thing to expect to serve the balance of your life in prison. Another for it to be made real. She probably was beginning to go into shock.\n\n\"Judy,\" I said softly enough that only she and Lew could hear me. \"You might live to leave prison. You're a pretty healthy lady. But you won't be that well off. Carroll's children are challenging the will, and with your conviction against you, I'd say they have a good chance of taking every dollar away from you. I'd watch my pennies if I was you.\"\n\nThat shocked her back to reality.\n\n\"Why do you hate me, Maitland?\"\n\n\"I don't hate you, Judy. Actually I feel sorry for you. If you'd hung in there another year or two, he'd have died and you'd have gotten most of his money. You'd still have been young enough to enjoy spending it. There are some hot 70-year-olds. And 70-year-olds worth millions don't have any trouble finding playmates. \n\n\"But you got greedy. And impatient. Think about that for the next ten years as you go to sleep in a bunk bed with some interesting bunkmates.\"\n\nAs the bailiffs led her away, Lew said from behind me, \"That was cold, Bill.\"\n\n\"She's doing better than Clark Carroll. But...\"\n\nI turned to face him. He'd bent over to collect papers he was shuffling into a briefcase.\n\n\"Are you alright, Lew?\"\n\n\"Why?\"\n\n\"You just don't seem like yourself, today. Where's the old swagger? Where is the Shark we've all grown to know and laugh at?\"\n\nHe gave me a mild smile at the jibe but there was definitely something wrong.\n\n\"Maybe you just beat the swagger out of me. The Angel of Death took me out.\"\n\n\"Hell, I've beaten you before and you didn't act like your best friend died. Level with me. What is it?\"\n\n\"I just...it's nothing, Bill. Just take a few bows and prepare your concession speech because the next time you go up against me, it will be me handing you your head.\"\n\n\"I hate to say this to a professional, but you're a piss poor liar. C'mon man, this is me. You want to go somewhere for a coffee? I can take the rest of the day off if you want to knock back a few cold ones.\"\n\nHe shook his head.\n\n\"Sorry, Bill. I have a few things to do and then I have to get ready to fly out. I've got a case they just called me in on in San Fran. A big payday and I need some time to prepare for opening motions. I have to leave tonight.\"",
        "I knew to a certainty there was something wrong. Talk of big money didn't rouse a smile. That wasn't Lew. But someone tapped me on the shoulder. As I turned, Heather McDonald smiled and hugged me.\n\n\"I'm sorry I was late. I wanted to be here for the actual sentencing but I had to make a meeting of detectives. But they just told me. Ten years. I guess that's acceptable, right?\"\n\n\"She'll be nearly 80 when she gets out. I think Pizaro figured that was enough, if she even makes it out. And I just told her Carroll's kids will probably succeed in breaking their father's will, so when she does get out she won't be a pauper, but she won't be any multi-millionaire. All in all, I think she had a pretty shitty day.\"\n\nShe licked her lips and I just smiled. She knew what she was doing, as her answering smile showed. \n\n\"Congratulations, Bill. You did good.\"\n\n\"We did good. I wrote a memo to Knight praising you to the skies, although right now I don't think praise from me is going to do you any favors over at the cop shop. Didn't anyone tell you that you shouldn't be seen talking to me.\"\n\n\"I know what's going on, Bill. But a lot of us don't think Knight should be putting the whole department and its reputation behind a guy who shot a man in the back. You still have friends there.\"\n\n\"Thanks, Heather, but you should keep your head down. Don't get in the middle on this one because it could get ugly.\"\n\n\"I won't be signing any petitions, but remember if you need a friend, just pick up the phone. Oh, by the way...\"\n\nShe turned slightly as a tall, dark haired young guy who just had the look of a plainclothes detective walked up to stand beside her. The looks they exchanged told me the story.\n\n\"Mr. Maitland, this is Detective Rob Goland. He's in homicide. Rob, this is Bill Maitland, the guy I was telling you about. The best prosecutor in the state.\"\n\nHe reached out and I shook his head. He smiled but he moved to put himself slightly between us. He was letting me know who she belonged to. She gave me a little contented grin.\n\n\"Glad to meet you, Mr. Maitland. Heather has told me all about you.\"\n\nFrom behind his back she mouthed, \"not all.\"\n\n\"Well, I appreciate the kind words but she's the one that really put Judy Jacobsen away. Not me. She's very good at what she does.\"\n\nShe couldn't help shaking her head a little bit at that, but the kid didn't pick up on it. I doubt he was thirty. More like twenty five or twenty six.\n\n\"Mr. Maitland, I just wanted to come by to check on the verdict. We've got to run. We're going to grab a bite. Rob, would you go on ahead and grab a car and pick me up at the front. I just need to take care of one more piece of business with Mr. Maitland.\"\n\n\"Sure. See you later, Mr. Maitland.\"\n\nAfter he left the courtroom, she moved closer and said, \"I'm sorry we haven't had a chance to get back together, Bill. I've missed...you know.\"\n\n\"Yeah, but...right now I'm involved. So...\"\n\nShe reached out and again I shook a hand. This time she held my own between hers and squeezed. It looked professional.\n\n\"I understand, Bill. I didn't expect it to be anything more than a one-time thing. And, really, I couldn't do much now. Rob and I....we're uh..\"\n\n\"He's a good looking guy. But he's lucky to have a hot item like you to hang with. Isn't he a little old for you, though.\"\n\n\"Smart alec. What can I say. It's the older woman thing. Love it.\"\n\n\"Well, Heather, go on and have your 'dinner.' But seriously, don't get involved in this Shawn Smith thing. You have to live and work in that department, and right now I'm poison. You take care of yourself. I'll be fine.\"\n\nI was the only one left except for a single court reporter finishing up her work, and one lone bailiff who apparently didn't have anywhere else to be. I still felt funny about Lew so I headed down to Starbucks and realized I'd gotten lucky when I saw him grabbing a coffee and turning around to leave the courthouse.\n\n\"Lew.\"\n\n\"Now you're following me? You're not getting a crush on me, are you? That would be sticky, to say the least.\"\n\nHe sounded more like himself, but not enough.\n\n\"Lew, we've been friends for a long time. I'm not trying to pry, really, but is there anything I can help with. Professionally or personally?\"\n\nHe stopped by the doors to the outside and took a sip of coffee.\n\n\"No. Your antenna are good as always, but this isn't anything you can bring your powers to bear on.\"\n\n\"Personal?\"\n\nHe nodded.\n\n\"It's Mona. Mona and you. You remember the first thing you said when I called you about Debbie and me splitting. So I'll ask you. Did you do something stupid?\"\n\nHe shook his head and just looked at the floor.\n\n\"Tell me or I'll just keep bugging the hell out of you until you do.\"\n\nKeeping his eyes down, he said, \"You know Mona and I......we've been trying....for kids. For awhile.\"\n\n\"Yeah, although I wonder about your sanity sometimes. Sorry. I know it's not funny for you.\"\n\n\"Well....we uh....found out.....not too long ago.\"\n\n\"What?\"\n\n\"It's Mona. She can't...you know. So it's over.\"\n\nNeither one of us said anything for a moment.\n\n\"Have you thought about-\"\n\n\"It's over, Bill. It's over.\"\n\nHe met my stare.\n\n\"It's uh -- things have been tense since then. But...we'll get through it. Right now, it kind of...seems like I should be giving her a little space. That's why I'm taking the case. She's been out of the country for a little while. We just need some time.\"\n\n\"God knows I'm not an expert in keeping marriages together, but, you don't think you guys should be talking? Maybe see somebody?\"\n\n\"Right now, she...uh....doesn't want that much to do with me. We....I didn't take the news well.\"\n\nHe took another sip and then said, \"I do have to go, Bill. I'll be in touch.\"\n\nI grabbed his arm before he could push the door open.\n\n\"I'd talk to Mona if you wanted me to. Sometimes an outside party.....\"\n\n\"Just leave it alone, Bill. You have enough on your plate. We'll be alright.\"\n\nAnd he was gone.\n\nI just stood there looking at the streams of people entering and leaving. How many of them had good marriages. Or relationships? How the hell did men and women ever manage to stay together?\n\n##################### \n\nTHURSDAY, SEPTEMBER 8, 2005 2:30 A.M.\n\nShe rolled back and forth on the bed. Jesus Christ, she'd never realized how big the bed was. She was half awake, in that state where you know you're on the brink of waking, but can't quite do it. She thought of Clint, of Doug, of men and cocks from long away and her fingers ran down her thighs but she couldn't make herself enter herself.\n\nShe thought of Bill, and her defenses were down and she couldn't make herself stop thinking about him. God damn, but he was looking good. Trim and hard and cold. At least around her. He was probably hot and filling that bitch's cunt with his cum every night and every day.\n\nJust like she'd known he would. She had always known.\n\n\"You bastard. You bulldoze your way into my life. And you desert me for your fucking job...and who knows what or who else. Just like I knew you would. Just like she said you would.\"\n\nAs the thought flashed in her mind it was like a key unlocking a door to a hidden room. And she was....\n\n...walking up to the long plate glass front of a bar she and Bill had been in one time years before. O'Brien's was a honky tonk, or a dive or whatever word you wanted to use. It wasn't the kind of place she or Bill hung out in anymore. Although she knew Bill liked it.\n\nShe had called MaryJane, one of Clarice's only friends from before the divorce, looking for her aunt. \n\nThey had used to talk almost every day but it had been nearly two weeks. Clarice had been the most beautiful, the most elegeant woman Debbie had known growing up. Much of what she knew about men, about being a woman, she had copied from her aunt. \n\nSince that bastard husband of hers had dumped her, she'd fallen to pieces. Debbie knew she'd been frantically dating, going out with guys way too old or way too young for her to be seeing, anything to keep a man in her life while Frank was squiring around the little tramp that was carrying his baby.\n\nMaryJane, Clarice's oldest friend, had been oddly reluctant to talk to her, finally saying only that Clarice had been getting more and more wild, more reckless in who she saw and what she did with men. MaryJane was no prude. She'd been divorced three times and had a long list of men friends, but...\n\n\"I'm worried about her Debbie. She's doing stupid things. She's having unprotected sex. I saw her get into a car with a guy and I know he fucked her without a condom. I've talked to her, but she won't listen to me. Maybe she'd listen to you.\"\n\nMaryJane hadn't been sure where she was tonight, but she thought that she remembered Clarice talking about meeting \"some young studs\" for a party beginning at O'Brien's on the Westside. \n\nDebbie had thought about asking Bill to go with her, but as usual he was working late on a case and even if he'd been available, he just didn't like Clarice. Or at least he didn't feel the sympathy that Debbie did. \n\nBut he hadn't grown up with her. She wasn't a second mother to him. And he had always been so fucking rigid and moralistic. Clarice always said he must have been born with a stick up his ass.\n\nNow she was inside and it was fairly un-crowded for 8 p.m. on a Thursday night. There were people at the big horseshoe shaped bar, some couples dancing, others playing pool. She looked around but didn't see a blonde almost as tall as she was anywhere. \n\nTwo of the pool players, pseudo cowboys with black hats, moseyed on over and smiling, asked her if she felt like a game or...something. \n\nThe taller one just grinned and never took his eyes off her boobs. The shorter one, who at least had the manners to pretend to be checking out her face, asked if they could buy her a drink if she wasn't with somebody.\n\n\"No thank you, boys, although the offer is appreciated. If I didn't have business, I'd love to play with you...\"\n\nShe grinned as she said it, knowing their tongues would be dragging the floor and they'd do almost anything she asked now that she had flirted harmlessly with them. Sometimes it seemed almost unfair to take advantage of men's horniness. Sometimes... \n\n\"I'm looking for a friend. An older lady. Blonde. About 5-6. Mid-50s. She might have been in here with some friends -- male friends. Any chance you might have seen her in here tonight?\"\n\nThey exchanged glances.\n\nThe taller one managed to drag his gaze away from her chest and said, \"Yeah, I think she's in here. She headed into the bathroom. I guess those other guys must have gone in with her to hold her hand.\"\n\nThe look she flashed him made him quickly add, \"Probably they all just had to go at the same time. A lot of beer gets drunk in here.\"\n\n\"Thanks boys. Maybe I'll see you in here again someday.\"\n\nShe walked across the room trying to tone down her natural wiggle. It came naturally after so many years of practicing it, but they'd been helpful and there was no need to tease the animals in the zoo.\n\nAs she approached the bathrooms painted with Western Cowboys and Cowgirls art, she hoped she was wrong about what might be happening back here.\n\nShe walked into the Cowgirls' bathroom. It was a big place. There was somebody in a stall and a girl who looked to be 15 with long straight hair, no boobs, and a pierced bellybutton putting lipstick on in the mirror. \n\nThe girl gave her a quick glance and quick as that Debbie knew she had earned another enemy. Women were bitches. She glanced at the bottom of the occupied stall. The legs were black.\n\nShe pushed on the door to the Cowboys' bathroom and it moved a little then stopped. Someone was blocking the door. \n\n\"It's occupied. I got a sick friend in here. Let me get him cleaned up and you can come in.\"\n\nShe stepped back two paces and hit it at a run, trying to take the impact on her shoulder. The door swung open hard and the man who'd been blocking it went down to his hands and knees. Beyond him was...\n\n\"Clarice!\"\n\nThe guy who had been grinding his heel into her naked breast stared at Debbie for a moment, then lunged at her. \n\n\"Bitch. Grab her you morons.\"\n\nDebbie put all of her weight into the kick that landed squarely between his legs and left him gasping on the floor. \n\nBefore she could move the guy she'd pushed away from the door had grabbed her from behind. She tried to kick backwards but he was smart enough to wrap her legs up with his own.\n\nWith her arms pinned, she started to scream. With the music outside, and this far back, they might not hear her, but no one was going to hold her down again and use her against her will. Not without a fight.\n\nThe third man who'd been standing over Clarice came at her and she braced herself. She didn't even think about it as she shouted, \"You touch me and my husband will hunt you down.\"\n\nHe didn't stop but barreled into her, grabbing her by the shoulders and using his momentum to slam her and the guy behind her into the wall next to the door. \n\nThe head of the guy holding her slammed hard into the wall and the man holding her shoulders rammed him into the wall again hard. The man behind Debbie loosened his grip and the man in front of her grabbed Debbie and threw her to one side.\n\nThe man he'd rammed into the wall put his hands up only to get a fist to the face that bounced him off the wall again. In the next instant, the third man who'd thrown Debbie to the floor had him in a bear hug up against the wall.\n\nAs they struggled, the third man looked at the one Debbie had kicked in the balls. He had risen to his feet and started toward Debbie.\n\n\"Danny, don't. You stupid fucker, don't.\"\n\n\"Are you fucking crazy. The bitch could send us all to prison. Now we have to grab her and take her somewhere where we can convince her to keep her mouth shut.\"\n\n\"Let go of me Bobby.\"\n\n\"Both of you, shut up. Listen to me. We are so, so fucking close to spending the rest of our lives in Raiford, if we even get that far.\"\n\n\"Yeah, if we let her call for help. I'm not going down for raping some old slut that wanted it.\"\n\nThe one called Bobby kept his arms around the man he was holding.\n\n\"LISTEN. Listen to me. I've seen her. I've done work around the courthouse. She's that guy Maitland's wife. He's the fucking top State Attorney in Jacksonville.\n\n\"Touching her is worse than going after a cop's wife. He's a fucking asshole and if the stories I've heard are true, we hurt her and we won't live to go to trial.\"\n\n\"You might not make it that far anyway.\"\n\nThe three men looked at the doorway and the short dark haired man who stood there tapping a baseball bat lightly in one hand.\n\nDebbie recognized the owner of the bar, O'Brien, and she knew of his reputation. With or without the baseball bat, the three of them were about to enter a world of pain.\n\n\"You stupid assholes...you got the balls to do this in MY place. I hope you fight back, I really do.\"\n\nHe gestured to the trio with one hand, beckoning to them.\n\n\"Come on, please try to get by me. I'm just one old man. You might make it.\"\n\nThe man called Bobby let his friend go and held up his hands in a placating gesture as he backed away from the man with the bat.\n\n\"O'Brien, don't. The old bitch wanted this. She told us she wanted us all and didn't want to wait till we could go somewhere private. It turned her on to get gang fucked in a public place. It got out of hand, but she wanted it. She did.\"\n\n\"Call the cops, O'Brien,\" Debbie said, rising unsteadily to her feet. Her nylons were ruined and her left breast was sore where she'd hit the floor.\n\n\"Already done, Mrs. Maitland.\"\n\nThe three men looked from one to the other. Gauging their chances of making it past O'Brien against waiting for the cops to arrive. The one called Danny breathed hard and Debbie knew he was getting ready to charge.\n\nAs he set himself she stepped in behind him and buried the point of her right shoe deep into his balls from the back. He went down like a pole-axed steer.\n\n\"Debbie, baby, don't.....\"\n\nDebbie looked back at the woman on the floor. White strands of cum ran from her hair to her face to her half naked body. Piss had pooled around her on the floor. The smell of that the vomit on the floor and on her was enough to make Debbie nauseous. Clarice's voice was so reedy and thin Debbie almost couldn't hear her.\n\nShe knelt down beside her and pulled her body close to her, ignoring the smell.\n\n\"What, Clarice...what?\"\n\nShe whispered into Debbie's ear, \"no, let them go, please.\"\n\n\"No. I'm not going to let them go after what they did to you. They raped you, the bastards. Bill will send every one of them to Raiford for life.\"\n\n\"please...please..just take me home....\"\n\n\"How can you ask me to do that? God, Clarice, look at what they did....\"\n\nHer aunt forced her with one trembling hand to look into her eyes.\n\n\"It's true, baby. I came in here of my own free will. I wanted them...to.....and it just got...out of hand....\"\n\n\"They still didn't have the right-\"\n\n\"Deb....if they're arrested....it will all come out.....and Frank...with that fucking little bimbo of his...will get a good laugh....at how desperate for cock I am since I lost his. I couldn't stand it. I'd kill myself.\"\n\n\"It's not right that they get away with this.\"\n\n\"They're just pigs, like every other man. I let them have me. It's my fault.\"\n\nIt took her just a second. The cops would be here any time.\n\n\"O'Brien, let them pass.\"\n\n\"No.\"\n\n\"Please, for me. For Bill. I know he likes you and this dive. She's my aunt. I can't let this go public. Please.\"\n\nHe stood there for an interminable minute then stepped back. The three men stepped warily around them. As they passed he touched Bobby on the shoulder and Bobby froze.\n\n\"I know your daddy, Bobby. You and your friends will never come in here again. If you see me on the street, you'll cross to the other side. Because if you ever cross my path again, I'll hurt you, and I'll tell your daddy exact what kind of animal he raised. And you know that will break his heart.\"\n\nBobby nodded and the three men stumbled away.\n\n\"What can I do?\"\n\n\"Can you get me a blanket or big towel, and is there a back way out of here?\"\n\nWhen he came back she took the towel and said, \"Please, keep everyone out and don't come back for a few minutes. And, O'Brien, for the love of God, don't ever tell Bill anything about this.\"\n\nShe could read the question. \n\n\"He's never liked Clarice and he won't have any respect for her if the finds out. And he won't let it lie. He'll go after them and it will all go public and she'll be humiliated. No matter what it looks like, she deserves better than that.\"\n\nHe finally nodded. \n\n\"Nothing ever happened back here. Just another boring night.\"\n\nAs she walked by him she gave him a quick kiss on the cheek. He touched it as she passed and said with a smile, \"Now I can't ever wash my face again.\"\n\nTen minutes later she had a shivering Clarice slumped over in the front seat of her 2001 Cadilac CTS. It was Autumn, early September, but unseasonably cool and her aunt couldn't stop shivering. Debbie had done everything she could to wipe the fluids off her and clean her hair, but she was still a mess. There was an ugly bruise on the side of one breast.\n\n\"It'll be okay, Clarice. Thank God you didn't let them....inside you without protection. No telling what those assholes might be carrying.\"\n\nClarice kept her eyes closed but said, \"It's okay baby. I know you think I'm a miserable slut. Sucking off three men in a bathroom. Not the way you remember me, is it?\"\n\n\"Clarice...God knows I can't act Holier than thou. You've pulled me out of some nasty situations. You know what I was like. You remember the time when I was 16 and you stormed into that Biker Bar at the Beach and pulled out a .38 and threatened to start shooting off balls if they didn't toss my drunken ass out of that place.\"",
        "She smiled for the first time since Debbie had seen her lying on the floor of O'Briens.\n\n\"Wasn't that a night, Baby? You remember the fat guy. He crapped in his pants when I put a bullet into his thigh.\"\n\n\"And you said, 'Sorry my aim was off. Next one leaves you peeing out of a tube for the rest of your life'.\"\n\nClarice slumped back against the seat, tears starting to run down her face.\n\n\"That was a long time ago, Baby. When I had a life. And a husband.\"\n\nDebbie reached over and took her aunt's hand. It was cold and clammy.\n\n\"You're still a beautiful woman, Clarice. You don't need to be going into bathrooms with creeps like that. There are a ton of guys that would trip over their tongues to get at you if you'd clean up and wear something low cut. Show a little boob. You always had great breasts.\"\n\n\"Fat old guys that can't get it up and can't keep it up when they do. And they won't lick your pussy but get pissed if you won't spend hours sucking their lollypop, and they act like they're doing you a favor by letting you suck on their limp linguini.\"\n\nShe opened her eyes and wiped the tears away with the back of her hands.\n\n\"You don't know, Baby. You don't know. You're young and your boobs still are firm. They're sagging cause they're so big, but guys go crazy for big ones that sag like that. They know they're getting the real thing. Wait till your boobs start heading for your belly button.\n\n\"Wait till the wrinkles get so deep even botox won't get them out. And your skin starts to sag and you get those first blemishes. \n\n\"Wait till young guys approach you cause they like the view from the rear, but once they see how old you are they look like they found a rat turd in their soup and can't get away from you fast enough.\"\n\nShe took a deep breath and let it out.\n\n\"I want to be you so fucking bad. I want young men with big hard dicks to try to get their hands on my boobs, to be rubbing my ass and creaming in their jeans when I accidentally touch them. \n\n\"I want to be young again, baby. And for a little while in that bathroom, before they got mean, I felt young. They were so damned big and hard and they wanted me.\"\n\nAnd then she was at Clarice's Southside home and so damned grateful that BJ was spending the night with a friend and Kelly was on a trip to Atlanta with a friend and her family so she didn't have to be home with them. When Bill called, she'd make up some lie about spending the night over with Clarice -- a girls' night out. \n\nDebbie helped Clarice out of the car. She was drunk and hard to hold up, but it made Debbie's skin crawl. She moved like an old woman. And she wasn't that old. Only 20 years older than she was. She wasn't old. Not yet.\n\nShe got her to the shower and then stripped her off. Clarice still smelled of piss and cum and it was still in her hair. She propped the older woman in a corner and let her slide down, then turned hot water on and went to a bedroom to strip off. She came back and knelt down beside the older woman and started shampooing her hair to get the smell and stickiness out.\n\nClarice turned her face toward her under the cascading hot water and kissed her on the forehead. She didn't know why, but Debbie felt like crying herself.\n\n\"You know I love you, Baby, don't you. You're the daughter I never had. That I could never give Frank.\"\n\n\"I love you too, Clarice.\"\n\n\"It's too late for me, Baby, but it's not too late for you.\"\n\n\"It's not too late. You've got a lot of years ahead of you. There'll be another man. Frank is a stupid asshole and he doesn't know what he's thrown away.\"\n\n\"He's a stupid asshole, but I still love him and I always will. I loved the man, as much as a woman can love a man. I would have done anything for him. I did. I let him have me every way a woman could. I did three ways because it excited him.\"\n\n\"He didn't deserve you,\" and now Debbie was crying.\n\n\"No, he didn't. But it doesn't matter. My life is over. It will never be good again. But you still have time.\"\n\n\"Time for what?\"\n\n\"Frank is a dog. A fucking cunt sniffing dog. Like all men. They will all turn on you. They don't love the way we do. You get old, and they start sniffing around for new stuff. \n\n\"My own brother, as much as I love him, is no better. I know you've never heard of it, but when he and your mother were going around, he dumped her and started screwing every piece of ass he could find. She chased him for a year before he finally took her back.\"\n\nDebbie just stared at her, disbelieving.\n\n\"It's okay. He's your father. You don't have to believe it, but it's true. And Bill will do the same thing to you if he isn't doing it already.\"\n\n\"No. Maybe he's let himself go and he's not the man he was, but he's a good man. He wouldn't-\"\n\n\"I said the same thing about Frank. He was special because he was mine but he let himself get a belly and he started losing his hair. But he still found that bitch who spread her legs for him because he's got money and power. Bill's not the man he was in bed because somebody else is getting what he used to give to you.\"\n\n\"Clarice, you're wrong. Bill's not that kind of man. I'd know, I'd sense it if he was-\"\n\n\"Just like I would have known what Frank was up to.\n\n\"You're wrong, Clarice. You're just wrong.\"\n\nClarice took her face in her hands and stared into hers with dead eyes.\n\n\"He will hurt you, Baby. He will hurt you. I hope I'm not around when your world falls apart like mine did. But it's coming. Please, don't let him. Protect yourself. Find someone. Don't be like me...not like me...\"\n\nLying on her too-big bed, Debbie stared at the ceiling in the darkness and whispered, \"You were right, Clarice. But... I protected myself and see what it got me.\" \n\n##################### \n\nTHURSDAY, SEPTEMBER 8, 2005 -- 4:30 p.m.\n\nI picked up the phone after Cheryl buzzed me. I was trying to get out of the place by 5 p.m. for a change. The internal clock of the time I had left with Aline was running and it felt like something was chasing me and it was gaining on me. \n\n\"Ms. Martinez is down here. Can you talk to her?\"\n\nI wondered if Edwards had a message for me or if he was sending her down in another attempt to change my mind. Or if he had told her what was going on and she had her own reasons.\n\n\"Send her in.\"\n\nA minute later she jiggled in. I had to smile. She was almost like a cartoon caricature of the female earth mother figure. But nobody was going to laugh at this cartoon.\n\nShe wasn't smiling. That in itself was unusual.\n\n\"Ms. Martinez. To what do I owe this pleasure? Did Mr. Edwards have a message for me?\"\n\n\"Austin told me what's going on. You're going to do it, aren't you?\"\n\n\"Yes.\"\n\n\"It wouldn't do any good to ask you to back off, would it?\"\n\n\"Did Edwards send you down, Myra? Actually, I have to tell you, I had a higher opinion of you. I didn't think you'd use that face and body as a bargaining chip.\"\n\nIt was the first time I'd ever seen her really angry. I was glad the desk was between me and her. If she couldn't get her hands on me, she could probably beat me to death with those 50 pound tits.\n\n\"You can be such a stupid bastard sometimes, Bill. I should tell you to go fuck yourself because you're never going to get any of this now.\"\n\nAs she said \"now\" she placed her hands under those huge orbs and lifted them toward me as if offering them on a silver platter. I wouldn't have done it, not really, but I could have fantasized for a moment about cheating on Aline -- just for the pure physical joy of sex with this fantastic creature.\n\nShe let them sink and said, \"But unfortunately, you and I both know I'd be lying. I am hurt, though. You really think I'd prostitute myself to help Austin get his way?\"\n\n\"Myra, I've never asked, but I know you have a 'special relationship' with Austin And that's okay. You're both adults. But I know you work 'closely' with him, and I know how bad he wants me to change my mind about Smith. So it's a question I had to ask.\"\n\nShe gave me a strange look.\n\n\"I do have a special relationship with Austin. He's a wonderful man. Although it may not be the relationship everyone thinks it is. But he's never asked me to use my body to help him out. I know him. He never would.\"\n\n\"Okay, I apologize.Why are you here, Myra?\"\n\n\"I did ask Austin what was going on between you two and he told me. You are really prepared to give up ten years in this office, eleven now I guess, to prosecute one case where even you admit there might be some room for reasonable people to disagree. \n\n\"I've always admired you for being a pit bull when you thought you were right. But there's stubborness, and there's obsession.\"\n\n\"Sometimes it's a hard area to draw a line. Maybe I'm just holding fast to what I think is right. Maybe I'm persecuting the poor bastard. But I have to do what I think is right and I can't let this one slide.\"\n\n\"You really don't think he'll fire you if you go ahead, do you? I know you probably think you're the only person in the world who'll walk through fire to do the right thing, but he's the same kind of guy. \n\n\"I think he will fire you if you push it, even if it kills any future political hopes he might have.\"\n\nI tried by force of will to make the erection that was threatening to turn my zipper into shrapnel go away, but watching her breath, those red lips and those emerald eyes sparkling with anger or lust, and who the hell cared which, made me realize that while love is said to be the strongest force in the universe, sheer rampant physical lust runs it a close second.\n\n\"He might fire me, Myra. I know that. But, really, so what? The world will go on turning. I'll go work somewhere else. \n\n\"Maybe I've been here too long anyway. Maybe moving on is what I need. Being somewhere away from...memories...might be a good thing. And the office will go on. Whoever comes after me will do their best. No one is indispensable.\"\n\n\"No, nobody's indispensable, Bill. But you're very good at what you do because you care about the people who get hurt by the bad guys. It's never been a job for you. \n\n\"That's one of the things that has attracted me to you. You're not just another lawyer. It's never been a game to you. You're not one of those guys who can lose a case, go out and have a few drinks and leave it at the office.\"\n\n\"It's not that great a quality, Myra. It cost me my wife. And almost cost me my kids. I'd have been better off if I could leave it at the office.\"\n\nShe reached across the desk and laid her hand over mine. I thought, this is it, my zipper is going to explode. But it didn't. \n\n\"I'm being selfish, Bill. I don't want you to leave Jacksonville. I still want my shot if ....this thing with the French woman doesn't work out. But, I know that the chance for the hottest sex you'll ever have in this world isn't going to be enough to change your mind.\n\n\"So just think about this. Whoever comes after you isn't going to be you. People that you would have helped, would have championed, are going to suffer. A lot of them. Is prosecuting one man worth depriving all those other people of the chance for justice?\"\n\nI didn't even bother to answer her. What would have been the use. After a long moment she took her hand back. She shook her head and stood up.\n\n\"You are an infuriating bastard,\" she said. \"I don't know if I want to slap your stupid face, or drop down and give you the greatest blow job you've ever had.\"\n\nShe walked out and left me barely breathing.\n\n#################### \n\nSATURDAY SEPTEMBER 10, 2005 -- 9 p.m.\n\nWe stood on the Riverwalk watching the big yacht gently roll on the waves lapping against the river bulwark. The lights of restaurants and stores lit up the darkness behind us, but here there were only a few isolated lights on poles casting shadows onto the water of the St. Johns.\n\n\"It's beautiful,\" Aline said. It was cool enough that she shivered a little in her off-the-shoulder red dress. \n\nWe had had dinner at Benny's, arguably the best steak house in Jacksonville, then walked along the St. Johns looking at the private yachts anchored at berths along the river. Their owners boated in to eat at restaurants and hit the few night clubs worthy of the name in Jacksonville.\n\nThe yacht was all gleaming gold and polished metal outlining polished wood, nearly a hundred feet long. I stole a glance at her eyes. \n\n\"There was a hunger and a hurt in them so raw that it was almost sexual. I knew in that instant that she'd never stay, even if she left Philippe. She loved the sea and that life more than she could ever love me. Or Philippe.\n\nShe looked up to meet my eyes and saw that I had seen. She leaned into me, her arm snaking around my waist and leaning over to kiss me on the side of my face.\n\n\"I love you more than you will ever know,\" she said softly. \"More than I should, more than I would ever have believed I could love another man.\"\n\n\"It's owned by a member of the Saudi royal family. It has been priced at more than $50 million. It's a floating home that can stay at sea for six months without having to come into port. There's a spa, gym, every luxury you could possibly imagine. The owner, they say, has four wives that sail with him and about a dozen kids.\"\n\nShe searched my face as I talked about the yacht rather than her words. I didn't know exactly what she wanted me to say. Or maybe I was afraid to put my feelings into words.\n\nSince that call from Philippe at the beach, I felt like a man walking across a rotting bridge, gingerly feeling each plank as I stepped from one to the other, not sure when one would give way and leave me falling forever. He had been a name and a memory. Now he was real and standing between us.\n\n\"You don't have to say anything, Bill. I know how you feel. I have since the Bonne Chance. I hope you know how I feel.\"\n\n\"I do. And I know you love Philippe, or was that 'Je Taime' a lie?\"\n\n\"No, but I wish it was. It would make it so much easier if it was.\"\n\nI pulled her to me and smelled the fragrance of her hair.\n\n\"This is a mess.\"\n\n\"You're sorry now that I came?\"\n\n\"I will never be sorry that you came back. I might be hurting later, but right now, I'm glad you came back.\"\n\nI pushed her away from me and despite the feelings running through me grinned as I said, \"This is like some1950s Hank Williams song -- 'I'll Be Alright...'Til The Hurting Starts.' We're living in a sad country western song.\"\n\nShe nestled against me and said, \"Don't you believe in fate? Destiny, Bill? What are the odds against the two of us meeting? Of my being ordered, in effect, to meet you? Of you're insulting me and breaking down my anger and resistance and then seducing me with that damned, wonderful Fleur-de-Lis. And your lawyer words. \n\n\"Those can't be accidents. No matter what happens afterward. They were meant to happen.\"\n\n\"I don't know that I believe in God. Or destiny. I believe in coincidence, because I'd rather believe that than believe God is a crazed monster who enjoys setting us up for pain, heartbreak, destruction and death.\"\n\nShe pulled away from me and led me by the hand down the Riverwalk away from the yachts. We were alone for a moment, no one walking nearby, under a streetlight. The St. Johns River's black water gleamed in the light and somewhere close something leaped out of the water and plopped back in.\n\nShe leaned back against the wooden railing and touched the Fleur-de-Lis pin, moving it so the light of the streetlight glanced off it.\n\n\"You and I both know what this means, what it represents. You won my heart with this.\"\n\nDebbie and my mom and everyone I've ever known have told me that at times I can be a smartass. They're right. I'm not sure where it comes from.\n\n\"You are so easy, lady. One pin and-\"\n\nShe slapped me not too hard on the side of my face and then leaned in to kiss the pain away.\n\n\"It's not the pin. It's what it represents, and that is you.\"\n\nAfter we tongue wrestled for a minute she broke the lock and took my left hand in hers. She held it up to the light. My wedding ring gleamed so bright it could have been a spotlight.\n\n\"Why do you still wear her ring, Bill?\"\n\n\"It's not her ring. It's my wedding ring. And I don't know why. I...just got used to having it on. Habit.\"\n\n\"It's her ring, Bill and everyone knows it. It's why I know there's still a part of you in love with her. You can't make yourself take it off because as long as it's on there at least a part of her is still with you. And, Bill, don't fool yourself, she knows it too.\"\n\n\"Maybe it looks that way, Aline. But it's not.\"\n\n\"Then take it off. Take it off, Bill, and put it in your pocket or on another finger where it will just be another ring. If you don't still love her.\"\n\nI reached out with my right and gripped that circle of gold that represented a half of my life and the best times and the worst pain I'd ever known. Then I tugged until it slid off. Losing weight had ended the ordeal it once would have taken to get it off.\n\nI had a gold nugget ring on the next to little finger on my right hand. The little finger wasn't wide enough to hold it. I tried the middle finger. It was a job, but again the weight loss made it possible to slide it on.\n\nI held my left hand up to the light and there was only the groove of pale skin where the ring had been.\n\n\"Convinced?\"\n\nShe reached into her purse and pulled out a gleaming circle. She held it up to the light. It was a silver ring with a square head. On the head was a Fleur-de-Lis inlay of white gold and there was a small, gleaming diamond in the center. It was the sister-ring to the pin she wore.\n\n\"You're not the only person who can give presents, Mr. Maitland.\"\n\nI shook my head for a second. \n\n\"If that's real, it's too expensive. You could explain away the pin, but how do you-\"\n\n\"I have my own money, Bill. Philippe does not pry into my personal spending. And it's real. And it didn't take a fortune to have it made. Will you wear it for me?\"\n\n\"I will, but why?\"\n\n\"You remember you said that you hoped I'd think of you when I wore the pin? Well....no matter what happens...I want to think that you will not forget me. And if you're wearing my ring, I know that you won't.\"\n\nShe kissed the naked finger and handed me the Fleur-de-Lis ring. It felt oddly formal as I slipped it on. It went on as if it had been made to go on that finger. It was a moment that meant everything, and yet nothing.\n\nAnd I took her home and we re-christened the kitchen table, the rug in the living room, the bathtub and finally my bed.\n\nLying next to her trying to catch my breath, my dick so sore I thought I was going to have to put some vaseline on just to get my pants later in the morning, I said, \"Well, that's got to be some kind of personal best for me. I'd have thought what I just did was medically impossible for a 42-year-old male.\"\n\nWith my semen gleaming on her lips and nipples and the reddened vagina that lay between her splayed legs, she looked like a poster child for Porno movies. She smiled and reached out to touch the Fleur-de-Lis ring.\n\n\"It's magic, Bill. It's magic.\"\n\nHow the hell do you argue with reality.\n\nBut I tried.\n\n\"You're the magic.\"\n\nOf course it wasn't magic. She couldn't get me up a fifth time. But she tried. God damn, but she tried.\n\n################## \n\nMONDAY, SEPTEMBER 12, 2005 -- 7 p.m.\n\nWe sat at a table in The Top Floor restaurant located on the 15th floor of the Barnett Bank Building looking out into the gathering darkness and over the city of Jacksonville. I had promised Aline this view until we were hijacked by my family on our birthday. Now she was going to have it, just before she left, probably forever.\n\nI'd ordered grilled Tilapia, the first step I'd have to take in the penance for the over eating and lack of gym time while Aline had been in town. Aline ordered the restaurant's version of Chicken Breast Coq Au Vin. Probably not what she'd find in a true Parisian eatery, but close enough for Jacksonville.",
        "We sat uncharacteristically silent. Normally the conversation flowed easily, as we talked about anything and everything, except those forbidden areas we knew to avoid. But now the silence lay like a heavy shroud over us.\n\nWe ate, Aline interspesing bites of chicken with sips of red wine, myself sipping at coffee because I knew Knight had meant what he said. \n\nI knew he'd have cops shadowing me, regardless of what they were supposed to be doing officially. And if I was spotted drinking anything alcoholic and I didn't walk and drive an exact, geometrically straight line he'd have me pulled over.\n\nI didn't think he'd frame me, because he wasn't that kind of guy and he knew that even if Edwards was unhappy with me, framing a prosecutor would start a cold war that would blow up in everybody's face. But if I gave him the opportunity to take me out, he'd run with it.\n\n\"It's nothing like the Eifel Tower,\" I said, gesturing to the view of Jacksonville from 130 feet up. \"But I hope you remember it.\"\n\nIt was the closest I could come to saying that she would remember it because she wouldn't be here. \n\nI hadn't checked her luggage, hadn't checked her out at all, but she had to have an airline ticket for the flight home to Paris. We hadn't talked about what we'd do on Tuesday, how she'd get to the airport. Or even that she would be going to the airport.\n\nMaybe we should have, but if we did, it would become real. And I wanted to keep these last few moments between us free from the curse of reality.\n\nWhen we finished our meals and paid, she said, \"Could we drive to St. Augustine tonight. Is it too late. I'd like to walk the beach one last time.\"\n\n\"No, it's not too late.\"\n\nWe went by the condo and picked up blankets and I headed out I-95 and took the third St. Augustine exit which would take us directly to the beach and bypass most of the city. We drove to Matanzas and I parked in the little pull off area. There were two other cars, but the occupants were too busy with each other to notice us.\n\nWe crossed the highway and walked down to the water, blankets over my shoulders. We stood hand in hand watching the breakers slowly roll ashore under the light of a half moon. It seemed to float on the water, but I thought Aline was looking much further, toward home.\n\nWe walked into the dunes and she was out of her clothes in an instant and had me down on the blankets, stripping me. When we were down, she attacked me. Sucking, stroking, pulling, flipping around to lower her steamy pussy dripping into into my mouth while sucking and nibbling on my dick and balls.\n\nI didn't think I was that much in the mood but in two minutes I was holding her ass with both hands and trying not to drown as I bucked up and came and came into her mouth. Before I could catch my breath she had flipped around and was licking my face clean of her juices,\n\nThen she slid down me to suck me and get me hard again and rising above me, she slammed down on my cock so hard that it hurt and I imagine she hurt too, but she just pounded it again and again until I couldn't hold back and came again inside her.\n\nWe lay there, both of us gasping as an ocean breeze rustled the cattails around us. I didn't have to look at her, didn't have to be a mind reader, to know that this had been a goodbye fuck.\n\nShe raised her head to look at me and said, \"Can we walk on the beach one more time, Bill. And then I need to get back to the condo and get some sleep.\"\n\nShe didn't add, \"so I'll be ready to leave early in the morning,\" but I heard the words.\n\nWe walked on the beach and we went back to the condo and we both showered and got ready for the next day and she lay down next to me but not wrapping herself around me as she had. She moved close enough to me to touch but turned her back to me and after she thought I'd gone to sleep she began to cry.\n\nThere is something ineffably, unutterably, sad about a woman trying to cry softly in the darkness next to you. When you can't reach out to comfort her.\n\nI made myself sleep. I might have dreamt it, but I think she kissed me on the lips.\n\nAnd when my alarm went off at 6 a.m., I was alone in my bed. I lay there for what seemed a long time. There was still a slight warmth on the bed sheets where she should have been. I ran my hand over the empty space.\n\nFinally I knew I had to get up because I had a job and a life to go back to. I rolled out of bed and padded to the closet and grabbed clothes. I dressed, made my way to the bathroom and pissed, brushed my teeth and made myself presentable. Then I went to the kitchen and would have hit the coffee maker 'on' switch, but somebody already had.\n\nI poured myself a cup, poured in some diet French Vanilla creamer and walked over to the kitchen/dining room table. \n\nAs I'd known there would be, there was a piece of cream colored parchment sitting in the center of the table. Aline's precise, tight letters covered it. I took a sip of coffee so hot it burned the roof of my mouth which gave me an excuse to have my eyes water, and picked up the paper.\n\n\"Dearest Bill,\n\n\"You know by now that I am on my way to the airport. And you know that I am a coward. But I could not say goodbye to you because I did not know if I could walk away from you if I were looking into your eyes. And I have to go back.\n\n\"No matter what Philippe has done with other women, he has not violated the rules of our marriage. I have. I have to face him, to see if we still have a marriage. I will not know until I stand in front of him.\n\n\" But more than that, I have to go back for Andre. I told you that I love you and I do. But if I leave Philippe for you, I will be leaving Andre as well. I know that I will never be able to take him away from Philippe. And I cannot leave Andre. He is only a little boy and he would never understand why his mother abandoned him.\n\n\"It is time to leave, Bill. My heart feels like it is tearing in two. I expect that you will hate me. But, I had to come to you, and I have to leave you. Please forgive me,\n\nAline.\"\n\nI read it a dozen times, but the words never changed. I held my left hand up and watched the light dance on the white gold and silver of her Fleur-de-Lis ring and realized I'd never be able to take it off.\n\nI prepared my briefcase with the documents I'd need for the coming day and before I walked out the door I took a quick look around. It was back to simply being a condo again. I closed my eyes for a moment and thought I could almost catch a hint of her fragrance.\n\nI had lied to her and myself all along. Two weeks is not forever. It can't be. It's just two weeks.\n\n#################### \n\nTUESDAY, SEPTEMBER 13, 2005 - 11 a.m.\n\nI made my up the elevator and managed not to speak to a single living soul or look into another set of eyes. A few times ASAs or courthouse staff of one type of another were heading my way and for some reason I couldn't figure out, they suddenly found they had pressing business somewhere else and veered off in different directions or suddenly turned and started walking the other way.\n\nAfter I'd left the condo I'd almost found myself driving toward the airport, but I managed to stop myself. There was nothing I could say that would change her mind. Nothing I could make myself say. I checked and found out her flight was leaving at 11 a,.m., if it departed on schedule.\n\nI had hours to kill so I went by the gym and worked myself into exhaustion for an hour and a half, then showered again and headed to the office.\n\nAs I got off on the fifth floor I noticed the giant figure of Johnny August deep in conversation with a man I didn't recognize. He glanced up at me and I knew I could only be a moving shadow and yet...he dropped his eyes and turned so he had his back to me. Was it obvious that even a blind man could see it?\n\nI just nodded in Cheryl's direction, said, \"No calls -- from anyone -- for the next ten minutes\" - and entered my office. I turned and locked the damned door. Let the rumors begin. I'd unlock it before they called in security, but right now I didn't want to see anyone.\n\nI laid my briefcase on my desk, took the phone off the hook, and walked over to the plate glass window. I pulled the curtains back and looked up into the sky. Somewhere over there, Aline's plane was ascending into the clouds, if hadn't already left Florida's skies on its way to New York and a change over for the New York to Paris leg of her journey.\n\nI visualized her in her seat. Had she asked for a window seat so she could see Jacksonville, and me, fall away beneath her and finally vanish into the white haze of the clouds. Was she having a drink now? Or preparing a story for Philippe on what she'd been up to the last two weeks? \n\nWas she wearing the Fleur-de-Lis proudly as she'd said she always would, or had she packed it away the way she'd put me and our time together away in her memory book?\n\nWas she crying? Did I merit a tear or two? Or was she dry-eyed, coming out of the romantic dream we had shared and returning to the mundane world of work and husband and son and obligations and shared marital memories?\n\nI wondered if she would ever think of me when Philippe had his big cock buried deep inside her. Would she ever slip and call my name in a moment of passion, or in a few months with no photographs of our time together would she have difficulty seeing my face in her mind?\n\nI had thought there were no more left in me, but I felt tears trickling down my cheeks. It was so silly. I was a grown man. I'd had a two week romantic and sexual idyll with a beautiful woman, but it had never been anything real or substantive. It was just a passing episode in both our lives.\n\nAnd then I told myself, \"You are such a miserable liar. At least be honest with yourself. You are, were, will be, in love with that woman. The same way you are still at least a little bit in love with your cheating whore of an ex-wife. \n\n\"Not in love with HER, the one that kissed Doug outside her home and shaved her fucking pussy to excite Doug....not that Debbie.\n\n\"The Debbie that you held in the night so many nights...the Debbie that cried inconsolably the night her crazy aunt Clarice committed suicide...the Debbie who made you smile just by looking at her after a hard day at the office....the Debbie whose body and mouth and smile made the miserable fucking world that you live in bearable so many days over the years.\n\n\"Lew, Mom, everyone on the outside only see the cheating bitch....they didn't live with her when she loved me. They can't see that Debbie...they only see the ghost that lives in her body now....and I can't make myself throw dirt on her grave the way we buried Clarice and accept the fact that MY Debbie is dead and gone forever....\"\n\nI realized I had locked the door because if anyone had walked in and heard me talking to myself, they really would have sent me to a hospital for observation.\n\nBut, I didn't want to get taken away for observation. As the cop had observed months ago, the job is the only life I have now. Or if not the only life, it's the important one. I couldn't jeopardize it by giving anybody the idea I was having another breakdown.\n\nI'll keep my job for a little while longer, a few days at least. And after that...all bets would be off.\n\nI unlocked my door but left my phone off the hook. It might buy me another few minutes of solitude. And then I walked back to the view of Jacksonville's northern approach.\n\nI put my face in my hands and tried to think. I am a smart man. I handle problems every day. I have made a life for myself. What do I do now?\n\nBut nothing will change the fact that I love..loved one woman who stopped loving me and I love another woman who never started loving me...enough...because she's still in love with her husband\n\nI am so fucked.\n\n############################ \n\nTUESDAY, SEPTEMBER 13, 2005 - 11:10 a.m.\n\nShe looked at Cheryl.\n\n\"His phone's off the hook. I don't think he wants to talk to anybody.\"\n\n\"I know you don't have to let me, Cheryl, but I thought we were friends. One friend to the other...you saw him....let me go in and talk to him.\n\n\"I don't know that you're what he needs right now.\"\n\n\"I'm exactly what he needs. And no matter what anybody says, I don't want to hurt him any more.\"\n\nCheryl finally nodded.\n\nShe opened the door. He was standing at the plate glass picture window looking out into the morning sky. She knew what he was looking for.\n\nHe didn't turn around.\n\n\"Why did I know you'd turn up this morning?\"\n\n\"Because we were married for nearly 20 years and you get to know someone in 20 years.\"\n\n\"Not really. I thought I knew you but I obviously didn't.\"\n\n\"But you knew I'd be here.\"\n\n\"Only because bad things happen in threes. I knew you had to be in there somewhere. God only knows what the last thing will be. Maybe I'll have a heart attack.\"\n\n\"You're too healthy for a heart attack...and only the good die young. You're not THAT good...despite your press releases.\"\n\n\"If that's true, Deb, you should live forever.\"\n\nHe still hadn't faced her and she walked toward him until he was directly in front of her. She wrapped her arms around him and pressed her breasts into his back. He was thinner, harder than she ever remembered him being. She hadn't touched him in more than six months. \n\nHe stiffened but didn't throw her off. \n\n\"I know that I am really bad off when I can't work up the energy to throw your cheating ass out of my office.\"\n\nShe leaned forward and pressed her face against the back of his head.\n\n\"I'm sorry.\"\n\n\"Why? What have you done this time?\"\n\n\"I hired a private investigator. I know she was living with you. I know what you're been doing together. I know she's married and has a son in Paris. I know she left your condo early this morning -- without you. You didn't take her to the airport.  \n\n\"She's going back to them, isn't she?\"\n\n\"Why do you care? Why go to that much trouble? We're not married anymore.\"\n\nShe put her head on his shoulder and tried not to rub her breasts back and forth across his back. It was almost automatic when they had been married.\n\n\"I know you, Bill. I know you're probably banging some of the women around here. I know you must have had that female cop, and I've heard rumors about others. But I know they're not serious.\n\n\"I saw the way you looked at her the night we all barged in on you two...The only woman you've ever looked at that way...was me. That's why, part of why, I got so crazy that night. \n\n\"I know we're not married. I know I have no right to be jealous. I'm like the dog that doesn't want another dog to have a bone, even though I don't want it any more....But, it hurt.\"\n\n\"Why the hell would it hurt? You told me you didn't love me anymore. We're divorced, for God's sake.\"\n\n\"I know it's not logical...reasonable. But I haven't been logical or reasonable...about a lot of things lately. I'm seeing...somebody....because I have kind of....gone off the tracks lately. I'm starting to get some things straight.\n\n\"I only know that it -- seeing her that night and seeing you look at her that way...that it hurt me. I wanted to find out everything I could about her...and that damned Fleur-de-Lis.\n\n\"You know you NEVER bought me anything like that in all the years we were married...\"\n\n\"You can't be serious. You screw around on me with a younger man, with a bigger dick. Even if you didn't fuck him, I know you were cheating emotionally. You threw me out of my own house. You fucked him in my bed. You threw me out of your life...and you're upset because I bought some expensive jewelry for a new woman in my life.\"\n\nShe held him a little tighter and he didn't move to throw her off.\n\n\"I know it doesn't make any sense. You said I was crazy. I'm thinking I was. At least for awhile. But one thing I know, you were serious about Aline. Or the skinny French bitch, as I prefer to call her.\n\n\"And so when she left alone, and you came in here and you looked like you'd lost your best friend or your dog died, I knew what happened.\n\n\"She went back to him, didn't she?\"\n\n\"Yes, she went back to him.\"\n\n\"Is she coming back? Do you think she'll leave him?\"\n\nHe reached out with his fingers and touched the glass.\n\nShe saw the unfamiliar ring on his left hand, then the wedding ring on his right. The Fleur-de-Lis was the mark that bitch Aline had left on a man that used to belong to her. Even if she wasn't here to rub her nose in it in person, Aline would still be doing it in spirit.\n\n\"I hope to God not. She could lose her son. She could lose a man she still might love. I don't want to be Doug...even though I've been acting like him ever since I met her.\"\n\n\"Doug didn't break us up. I was going to leave you, Bill, if I'd never met him.\"\n\n\"Thanks. That makes me feel better.\"\n\n\"I shouldn't tell you this. The person...I'm seeing...said I shouldn't. But I have to. I told you I didn't cheat on you before Doug. And I didn't...go to bed with anyone or suck them off. But...I.....teased a lot of guys....and...\"\n\nShe felt him stiffen and wondered why she was doing this. Was that stubborn anger driving her to kick him when he was down, do the most damage she possibly could. It didn't feel like it inside her. She didn't know, but maybe she was just tired of lying to him.\n\n\"What? Shit. I'm in the Valley of Despair, so why not drop some more shit on me?\"\n\n\"I...jerked a couple of guys off at parties. I...masturbated them through their pants. I never held their naked dicks in my hands, but I jerked them off.\"\n\n\"So you never got any semen inside your pussy. I should be grateful for small favors.\"\n\n\"I'm not claiming any special...virtue, Bill. I was a pretty bad wife...for the last three or four years. I told myself it was alright because I saved my pussy for you....when I let you have it. But I honestly got more out of my vibrator than I did from you.\"\n\n\" What did I ever do to deserve that kind of treatment from you?\"\n\n\"I don't know. I was angry as hell at you most of the time, but I thought I hid it pretty well. I guess I was angry...and contemptuous....I didn't think much of you....as a man.\"\n\n\"You forget. I read your emails. I know how you felt about me as a man.\"\n\n\"What good would it do me to lie about it? I told you I wrote the truth. That's...the way I felt about you. But...I...I know this drives you crazy, but it was some of your fault. Even if you never admit it, you know I'm right. You left me alone for this damned office and this damned job. You wanted to be Saint Bill more than you wanted to be inside me.\"\n\n\"And that made what you were doing right?\"\n\n\"No, I didn't say that. Just like what you've been doing with Aline for the past two weeks wasn't right...and you know it. But you did it anyway.\"\n\nThey stood there silently for a moment.\n\n\"I know I was wrong, but...can you be honest with me about one thing?\n\n\"What have I ever lied to you about?\"\n\n\"I don't know. That's why I'm asking. Did you ever cheat on me. You don't have to tell me the truth, but we're over. It won't change anything. I just...would like to know.\"\n\n\"To make you feel better about what you were doing\"?\n\n\"No, whether you were screwing half the females in your office, or were as pure as the driven snow, I should have divorced you. I should have had the courage to walk away. I had a good job. The kids weren't little. They were in their teens. I could have made a new life for myself. God knows, I have never had a problem attracting men. I could have found a good guy to replace you. I shouldn't have hurt you the way I did...with Doug...and the emails.\n\n\"I was a coward. And that I'm sorry for.\"\n\n\"I hope this hurts you a little more, Debbie. No, I never cheated on you. I never had another woman in all the years we were married....until Aline.\n\n\"That's Aunt Clarice speaking from the grave, isn't it?\n\n\"I never really believed it...but...the things she said got stuck in my head, and I never really dis-believed them either.\"",
        "He shook his head.\n\n\"The poor miserable bitch. She lost her husband and her mind and her life...and she dragged you down with her. I almost can't hate her....almost. But you shouldn't have believed her.\"\n\n\"I'm sorry I did. But I loved her. She was almost more of a mother to me than my real mother.\"\n\n........ \n\n\"I've got things to do, Debbie. I've got a life to start putting back together again...for the second time. So why don't you take you and those tits of yours and get out of my office.\"\n\n\"Now that sounds more like the Bill Maitland I knew and lo-\"\n\nShe had reached the door to his office when she looked back at him.\n\n\"If she had left her husband and chosen you...or if she comes back...would you...?\"\n\n\"I don't know, Debbie. I've known her for less than two months. On the other hand, I knew you for two years before I married you and look what that got me.\"\n\n\"Thirteen or fourteen years of a good marriage and two kids I think you love.\"\n\n\"True. I guess....I'd marry her in a heartbeat. And if she comes back in a month of two, I still will....if she'll have me.\"\n\nWhen he turned away from the window she had left without another word.\n\n#\n\nNOT THE END OF THE STORY!"
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "divorce",
        "courtroom action",
        "adultery",
        "crime",
        "romance"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-05d"
}