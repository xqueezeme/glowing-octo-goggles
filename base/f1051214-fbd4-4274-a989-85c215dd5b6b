{
    "title": "Three Steps to Heaven",
    "pages": [
        "I hope this lesbian love story has turned out okay. One evening I was listening to a 1950s/60s music programme on the radio and an Eddie Cochrane song inspired the story title and chapter headings. Trouble was, I didn't have even an inkling of a story idea, just liked the title with headings, and it took me a while to come up with this. So if it fails, blame me and not Eddie Cochrane (especially seeing that he's in great rock 'n' roll concert hall in the sky). But I hope you enjoy it. There is sex but as always it's secondary to the plot (such as it is). \n\nCharacters in sex scenes are eighteen years old or over. All characters and places are imaginary\u2014any resemblance to persons living or dead is coincidental.\n\nCopyright \u00a9 2017 to the author\n\nStep One: You find a girl you love\n\nMen! What is it they say? Can't live with them, can't live without them! Well, scrub that last bit: very definitely can live without them!\n\nI'm Jessie Thorne (middle names Moonbeam Hummingbird but we'll come to that later) and I think I'm fairly intelligent and quite a nice person. But\u2014and it's a big but\u2014I'm one of these women who has a talent for picking absolute rotters when it comes to men. With all the nice guys in the world, why do I always seem to get stuck with with nature's bastards? To sum up, the men I've been involved with over the years have been arseholes, slime-balls, slugs and creepy-crawlies. There, clear on that? Every time, every heartache, every speck of despair, I promise myself \"Never again!\" My life becomes a banner for all the proverbs and clich\u00e9s such as: \"Caveat emptor!\" or \"Look before you leap!\" And then I do it all over again.\n\nTake Howie for example. Howie is a teacher, a headmaster in a highly-regarded school in fact, quite a catch for any girl (or woman\u2014I'll not see thirty again). When I was in my late twenties I was actually engaged to Howie and we were living together. I'm not even sure that I was properly in love with him, I'd somehow persuaded myself that I was. My parents are a bit unconventional (make that very unconventional) and I'd gone down the rebel route by being the exact opposite, goody-goody almost to the point of nausea. I think now I was just conforming, doing what people expected of me. And Howie's mother is a very forceful woman who probably pushed me, if not us, into the engagement. Anyway, we had the wedding planned, the venue chosen, his mother beside herself with joy. My mum, who has a reputation for being a bit ditsy, had reservations. \"Never trust a man who wears a three-piece suit and tie in high summer,\" she said. That describes Howie's dress code to a t. A weird basis for mistrust, you might think, but she was right. I came home from work early one day and caught Howie with his todger buried up to the hilt in the pussy of a squealing blonde dimwit called Chloe something. In our bed! And he had his socks on! Nothing else, just his socks. Have you ever noticed how silly a man looks with nothing on but his socks?\n\nOf course, I kicked him out. Then very stupidly let him back in. He pleaded, grovelled, said it was a momentary aberration, Chloe had tempted him, seduced him, couldn't help himself, didn't know what he was doing, moment of weakness, major mistake, I was the only woman in the world for him, never happen again, on his life it wouldn't! I forgave him, we kissed, made up, Howie moved back in on the understanding he was on probation. Wedding back on, he couldn't wait to marry me, his own true love.\n\nYes, you've guessed. I caught them at it once more, just when I'd started to trust him again. I came home to collect some work-papers I'd forgotten and recognised Chloe's enthusiastic squealing as I walked through the front door. This time they hadn't even made it to the bedroom. I found them shagging like bunny-rabbits on the sitting-room sofa. I've never seen an erection collapse so quickly. In Howie's case it just goes to show that intelligence doesn't necessarily confer common sense. In wide-eyed Chloe's case, well, she didn't really see what the problem was\u2014didn't everyone shag other women's men? I honestly believe there wasn't a bad bone in the girl's body but I did say she was a bubble-head. When it comes to glamour and oomph, Chloe's got it in spades, more than her fair share, but the poor girl must have wandered off when they were handing out the brains and got overlooked. You remember what they used to say about Gerald Ford? Can't walk and chew gum at the same time\u2014Chloe in a nutshell.\n\nThat wasn't quite the end of it. For a long time Howie kept calling me, begging me to take him back. Again? Fool me once, your bad: fool me twice, my bad. I suspect his mother was the driving force behind the attempts at reconciliation. By this time Howie was living with Chloe and I once asked him if he wanted to be with me so much, what about her? \"Oh, I'll just kick her out,\" was the airy reply.\n\nWhat a piece of work, eh? It's a good job his academic subject was Maths\u2014I shudder to think what his pupils would have learned if he taught Ethics. I told him to fuck off and I didn't wash my mouth out with soap and water afterwards either.\n\nI saw them in a pub once, about a year after the second split. I thought it wouldn't hurt to be friendly and so I went over to say hello. We chatted quite amicably for a few minutes before poor little Chloe came out with a remark of such staggering stupidity that even the pub's resident cat blinked. Turning to Howie, I smiled and said in my most saccharine possible tone: \"See?\"\n\nRevenge, a cold dish best sweetened with a little sugar.\n\n* * * * *\n\nTimothy was something else again. He was a senior sales manager in the huge company where I worked in PR. Odd thing about Timothy, there was nothing really attractive about him\u2014receding hairline with chin to match, weak eyes behind thick-lensed glasses, lumpy nose overhanging a wispy moustache\u2014and yet for some reason he was a babe magnet. Powerful pheromones and a silver tongue, I guess. He certainly got me, somehow. I was wary at first, knowing he was married. He sweet-talked me into believing that he and his wife had split up some time previously, even taking me to his new flat to seduce me.\n\nHis (temporary) fall from grace came when the police caught him kerb-crawling in a red-light district, in a company car. Most people would have got the sack instantly. Not Timothy, he was a brilliant salesman and brought in too much business for the firm. He was relegated to a desk job for one month as punishment and then turned loose on his clients and an unsuspecting female population again.\n\nOf course, I dropped him. Then I found out that not only was his marriage still intact but he was also knocking off three other women in the company at the same time he was giving me one. A wife, four girlfriends, and he goes kerb-crawling, looking for a prostitute. Another piece of work. It's a wonder his dick didn't die from exhaustion. I found out about the same time that 'his' new flat actually belonged to a friend of his who was working overseas for a few months.\n\n* * * * *\n\nI won't bore you too much more with my tales of woe but I must mention Clifford. He wasn't in the same league as Howie and Timothy but he was definitely strange. He used to write me love-letters in Spanish despite me telling him over and over that I didn't speak the language. He always signed them off with about the only Spanish I worked out: Te amo siempre.\n\nClifford's not Spanish, he's from the West Midlands. If he had been Spanish his name would likely have been Cliffio or something similar. I suppose he was trying to impress me. He didn't. I told him several times to knock it off but still the billets-doux continued to arrive. So not too long and it was \"Adios Clifford!\", amo-ing me siempre or not.\n\nThere were others. 'Nuff said.\n\n* * * * *\n\nI told you Timothy was a babe-magnet. Me? I seem to be an arsehole magnet. And do you know the worst of it? I never had an orgasm with any of them, not once, only the occasional little spasm which hardly counts. I'd been led to believe that with spectacular orgasms I would experience soaring to heaven while orchestras played crescendo, tsunamis thundered, bells peeled out, grand-opera choruses boomed, constellations spun madly and far-flung galaxies whirled. But no, just the occasional little spasm, a hiccup almost.\n\nI'd lost my virginity when I was eighteen. He was the handsome and dashing Captain of the school's First XI cricket and rugby teams and all the girls drooled over him. He took my virginity and I wondered what the hell all the fuss was about. Himself seemed to enjoy it judging by the shrill squeaks he made when he shot his load (after what seemed to be about thirty or so seconds). But, a presage of things to come, it left me cold.\n\nOh, I got pretty good at faking orgasms, knowing how sensitive most of the pathetic little ratbags are about their prowess but the sex did nothing for me. I just put it down to the fact that I might have a very low sex-drive. Come to think of it, I never even got really wet with a man, only slightly (very slightly) moist. One particularly unpleasant specimen\u2014a one-night stand after a few too many bevvies in a local wine bar\u2014pulled his trousers on and told me I was the worst shag he'd ever had. It was \"...like wanking into a lump of warm meat...\" was his delightful way of putting it. I didn't stop crying for an hour after he left. I'm not sure whether the tears were because of his shitty remark or the agony of my shitty hangover.\n\nFinal whinge coming up, I promise. Not one of them would go down on me, not even Sir Timothy of the Tireless Todger. Oh, they all expected me to play a merry tune on their penny whistles but when I suggested reciprocation you can imagine their reaction... Urrghh! Men, eh?\n\nI did once have a heart-to-heart with my mother about the men who've been in my life and about my non-orgasmic sexual adventures. She sympathised but pointed out the bleeding obvious, that I had terrible taste in men and that my judgement was seriously impaired. She added that as for the orgasms\u2014or sad lack thereof\u2014I just couldn't have met the right person yet. Then she said: \"Darling, have you ever considered that perhaps you're not made for men?\" Now what the hell did she mean by that?\n\nMind you, I didn't go through life orgasm-less. I had several vibrators of varying shapes and sizes and they gave me what I needed. Funny that, I never once had any problems coming off with one of my toys nor with my hand. Not the full crashing monty, mind you, but enough to keep me happy. Perhaps the fact that I could come by myself with fingers and vibrator should have told me something.\n\nRant over. Don't get the idea I hate men, I don't. Most I've known are generally decent types. It's just that something about me sends out a siren call to the Howies and Timothys and Cliffords of this world. And I've always seemed to fall for whatever bullshit they come up with. Do you think perhaps I could have been desperate?\n\n* * * * *\n\nI realise I've been shooting off about all the men I wish I'd never met and haven't told you a lot about myself. So here goes, potted version. I'm aged thirty-one with thirty-two peeping just over the horizon. I'm five-seven, although with a bit of stretching I can add quarter-inch to that, curly chestnut-brown hair, hazel eyes and on a good day I can pass for moderately nice-looking. Reasonable figure with smallish boobs, no bad thing that, I've been told that really big boobs can get very uncomfortable. I'll never make it onto a Pirelli calendar but at least my passport photograph isn't too horrifying to look at.\n\nMy parents are lovely although, as I mentioned, somewhat unconventional. By day, Dad, a gentle soul, is a copywriter working for a major advertising company; by night he's the big daft twenty-year-old he once was. Gets home from work, takes off his workplace clothes, in themselves pretty casual, dons leisurewear that would make Abba flinch and then gets on with what he considers to be his real work\u2014he writes moderately successful paperback thrillers under a pen-name (Brett Hardman\u2014says it all really, wish-fulfilment I guess) while listening to Seventies and Eighties rock music. Mum has a reputation for being scatter-brained but deep down she's very astute, just manages to hide it well. She paints. On the one hand she produces dashing abstracts in virulent colours which are snapped up by aficionados; on the other she paints bread-and-butter cutie pictures of puppies and kittens and so on, the kind of pictures much loved by small girls that sell very well in several local souvenir shops. So they're comfortably off. I've also got two sets of grandparents, all in their late seventies, all in good health, all beating old age off with clubs.\n\nSo there you have me, Jessica Moonbeam Hummingbird Thorne, spinster of this parish, unlucky in love and failed romantic but living in constant hope.\n\n* * * * *\n\nIt was another little skunk in human form, I think, who lost me the PR job I loved although I couldn't prove it. His name was Archie McNaughton and he was the Big White Chief 's son. The occasion was one of these executive dinners where they all get together to congratulate each other and hand out thoroughly undeserved (in most cases) awards. I was there to write articles for the house magazine and also to string for a couple of local newspapers and a national trade journal. My three colleagues in PR had all found an excuse to wriggle out of the dinner, having been lumbered with it in previous years. And fate, or someone with an unpleasant sense of humour, sat me next to the McNaughton rat at table.\n\nCoffee had been served, the speeches were beginning and I was scribbling notes to supplement the recording I was making. That's when I felt the sweaty hand crawling onto my knee. Now this would have been unacceptable if he'd been tall, dark and handsome but the McNaughton was small, greasy and ill-favoured which made it doubly so. I glared at Archie who gave me an 'I'm the boss's son, I can do what I like' smirk. I lifted his hand and moved it away. It came back immediately, this time further up my thigh, almost within finger distance of my pussy. I shifted it a second time and he moved fast. He grabbed my hand and put it on the bulge in his trousers. Another smirk, this one saying 'So what are you going to do about it?'\n\nI showed him. I retrieved my hand, picked up my cup of fresh hot coffee and poured it into his lap. \"Oops! I've spilled my coffee on you. Sorry about that.\"\n\nArchie McNaughton went scarlet as he double up and clapped a napkin over his mouth to stifle any moans. After all, it wouldn't do to spoil Daddy's speech, would it? Of course, his trousers and underpants would have absorbed much of the heat but it still must have stung. And the spreading wet stain on his crotch would have caused big-time embarrassment. Shame about my coffee though. What a waste!\n\nThree or four days later I was summoned to the HR director's office. Henry Lassiter was a nice enough man but I think he was too much under the Big Fellow's thumb. Although I suppose with a family to support he couldn't risk his position in the company. He certainly didn't look happy when I entered his office, more vaguely embarrassed than anything.\n\n\"Have a seat, Jessie. Now this is always a very difficult job to do. I'm afraid that for financial reasons we're having to cut back on staff. As you're the last one into PR, I'm afraid you'll have to be the first one out. We're having to declare you redundant. Effective immediately. I think you'll find our severance package generous, more generous than the legal requirement.\"\n\n\"Financial reasons, eh?\" I said, \"That's odd. The most recent figures I've seen showed the company to be in excellent shape.\"\n\nHenry reddened a little but didn't reply, just passed me an A4 sheet with sets of figures showing payments to me net of taxes.\n\nHenry was right. The package was generous\u2014too generous. \"How long before you replace me, Henry?\"\n\nHe wouldn't meet my eyes. \"I'm not sure what you mean, Jessie.\"\n\n\"This isn't about me being surplus to requirements, is it?\" I said, \"It's because I wouldn't play footsie with that little shit Archie McNaughton.\" Henry still wouldn't meet my eyes and said nothing. \"How often has this happened before, Henry? Now I think of it, several girls have left the company over the past couple of years, all of them with generous severance packages.\" I suppose I could have kicked up a stink, threatened to go to law, but with no witnesses it would only have been my word against Archie's (the four or five others at our table had their backs to us as they watched McNaughton Senior give his self-serving speech). And I'd poured hot coffee onto Junior's chopper which in the absence of witnesses might have left me open to an actual bodily harm charge. Hell, forget your pride and accept the too generous severance money I told myself.\n\n\"Jessie... I... \" Henry seemed to be having problems answering me and when he spoke it seemed to be to change the subject. \"Jessie, do you know Newcombe Parva?\"\n\nNewcombe Parva was a town some fifty miles away. \"Slightly. Why?\"\n\n\"It's a small place but has a lot of light industry,\" said Henry, \"An old pal of mine called Bill Laker is HR manager in a small manufacturing company there. They're not our rivals, deal in totally different products. Bill called me recently, they're thinking of setting up a PR office, asked me if I knew anyone suitable.\" He passed me a card. \"If you wouldn't mind moving away from here, give him a call. I think it's a one person job and it would suit you. I'll give you a excellent reference.\"\n\n\"Thanks, Henry.\" I took the proffered card. \"I might give it a try. Mind if I give you some advice?\"\n\nHe shrugged. \"Go ahead.\"\n\n\"I should look for some way to cover your backside. Sooner or later the McNaughton brat is going to slip up badly and if it's found that the company has been covering up for him, the shit will really hit the fan and splash all over everyone without an umbrella.\"\n\n* * * * *\n\nBill Laker was middle-aged and pleasant and the interview went well. My work would be much the same as I'd been doing but on a smaller scale. I'd write publicity shots, newsletters, press articles and Bill asked if I'd be able to start an in-house magazine. I'd brought a portfolio of my work so he could see I'm a competent journalist. He gave me a tour of the place, offices and factory floor (they produced 'clean' white goods so the factory floor area was bright and shining), and the upshot was he offered me the position and I accepted.\n\nThe salary wasn't as good as my previous job but then living in Newcombe Parva was much cheaper than the city. Bill arranged accommodation for me in a very decent lodging house, mine for as long as I wanted it. I put most of my stuff in store until I could find a house or flat I liked and so started out on a course that in time would change my life completely.\n\nThe third day in the job I was invited to a meeting. It was a small group to discuss various staffing matters and I couldn't figure out why I was there. Everything under discussion was a matter for HR, not PR. Bill Laker clarified things when he introduced me to the half-dozen or so gathered there. \"I've asked Jessie along so that she can get a feel of how we operate.\"\n\nThe first item on the agenda was a proposed staff recreation area. Two large adjoining rooms on the ground floor had become vacant and were deemed ideal for the purpose. One room would be a furnished sitting room with tea- and coffee-making machines, the other kitted out with pool table, table tennis and similar equipment. The arguments started over what to call the area. One wanted to call it 'Human Resources Division Staff Facilities' while another scoffed and opted for 'Multi-personnel Recreational Facilities'. A third came up with an equally pompous sounding name. Some of these prats seemed to think that the longer and more complicated they made something, the more clever they appeared. Did I have news for them.",
        "I raised my hand. \"Why not just 'Rest Room' and 'Games Room'?\"\n\nThree or four people looked at me as if I'd grown an extra head.\n\n\"Kiss!\" I added brightly. I got more looks. This time they suggested I'd added a third, silly head to those I already had.\n\n\"Kiss!\" I repeated, \"It's an acronym. K-I-S-S. Keep It Simple...See?\" The usual last word of the acronym is 'Stupid' but I didn't think that would be appreciated coming from the newbie.\n\nBill Laker smiled as he looked around at the others.. \"Jessie's right, simple is best. Thanks, Jessie. Okay, 'Rest Room' and 'Games Room' have it.\"\n\nSome others just glared at me.\n\n* * * * *\n\nPerhaps I'd been na\u00efve in thinking that in a small company office politics would be almost non-existent. Wrong! I'd had more than a few dirty looks from longer-serving staff when Bill had agreed my simple suggestion. I didn't contribute further, I'd had my quota of dirty looks for the day.\n\nAnyway, the meeting had dragged on and on. Like most of these gatherings, little was achieved and it had almost deteriorated into which ego would prevail. As a result, by the time it ended my bladder was telling me that three cups of tea before the meeting had not been a good idea and to make a very fast trip to the ladies' room. The alternative would have meant publicly humiliating myself not to mention ruining an expensive pair of trousers,.\n\nI rushed into one of the stalls, lowered trousers and panties, sat and released a gusher. Phew! I lingered for a several moments just in case Miss Bladder could produce a few more drops and passed the time by reading some of the graffiti. Many of the pearls of wisdom would make a porn merchant blush. Some of these young girls\u2014and perhaps some of the older ones too\u2014had very vivid and very filthy imaginations. And people say that men have one-track minds!\n\nOne set did make me laugh. Someone had written: \"My man is 10\u00bd\" long and 2\u00bd\" wide!\" Underneath, in a different hand was the reply: \"Wow! that's amazing! And how big is his penis?\"\n\nAnother one caught my eye: \"My mother made me a lesbian.\" Now I'm not the sort of person who writes on lavatory walls but I couldn't resist this one. Chuckling to myself, I reached into my bag for a pencil and added: \"If I supply the material, will she make me one too?\" Having made my contribution to the world's great literature, I wiped Lady Jane, washed my hands and exited the ladies' room, as I did so crashing into a woman coming the other way.\n\nWe both muttered apologies and I realised she was someone I'd not seen before during the time I'd been here. She was... off-beat, I suppose is as good an expression as any. Off-beat and eye-catching. Very eye-catching. Mega eye-catching. And very, very attractive. About my height and slim, the first thing I noticed about her was her hair-style. On the left her hair was fairly short while on the right it was long and luxuriant, flowing to a little past shoulder-length. Its natural colour seemed to be black but it was shot with highlighted streaks of gold and silver. Each ear had three gold studs high up while ear-rings at her lobes were hoops so huge that you'd almost expect to see small parrots balanced on them. Make-up was exotic, the shadowing around huge violet eyes emphasising them to the point they were fascinating, almost hypnotic, while her light and floral scent went straight to my head. She was dressed in a lavender trouser suit complemented by a similarly-coloured silk shirt with a deep collar and a flowing kipper tie of a sort popular in the Seventies.\n\nOh, and on top of all this did I mention that she was very, very attractive?\n\nI know, it seems a lot for me to have taken in during a brief encounter in a washroom doorway but she was striking. And do you want to know something weird? My heart did a little flip when I saw her. Me, Jessica Moonbeam Hummingbird Thorne, Miss Straight-if-somewhat-sexually-frustrated battle-hardened survivor of a thousand encounters with arseholes of the masculine persuasion. My heart just flipped! Now why the hell did that happen? I bumped into a strange woman in a toilet doorway and my heart flipped!\n\nStep Two: She falls in love with you\n\nYet more meetings. Of course, they have to have meetings. God knows why, nothing ever seems to get accomplished. Meetings are little more than social get-togethers for an organisation's hierarchy to massage their own pathetic little egos. Oh, and a scramble among them to show the boss who's the greatest. Believe it or not, in previous jobs I've even attended meetings about meetings.\n\nSorry if I sound resigned but I am. I've whiled away many a happy hour staring at ceilings in meetings, trying to work out how much productivity is being lost while the would-be alpha males smarm and bullshit each other.\n\nThis one was a section head meeting. I had to attend because I'm my section head. My staff comprises me, myself and moi. Bill Laker sat beside me and introduced me to the dozen or so people around the conference table. I smiled pleasantly and got one or two smiles back. I guessed that those who didn't smile were trying to work out whether or not I posed a threat to their position in the company. I didn't but if they wanted to think that way, let them sweat.\n\nThe door opened and the managing director came in. \"Right, folks, shall we get started?\" he greeted us.\n\n\"Milly's not here yet, Charles,\" somebody said.\n\n\"Oh hell, what's she up to now?\"\n\n\"Probably polishing her latest moan until it's all nice and shiny,\" the same voice replied.\n\nBill leaned towards me and whispered: \"Milly Granger, she's the services liaison administrator. If misanthropy, complaining and downright misery were Olympic sports, Milly would take gold, silver and bronze all by herself. And carry the great big silver cup home afterwards. Ah, here she is.\"\n\nMy first impression of Milly Granger was one of rotundity: she was short and round, something like a beach-ball. She had a round head with a tiny round button nose affixed to the front, not much in the way of neck, and a round body balanced on sturdy little legs. Only her eyes and lips were not round. She had the cold dead eyes of a professional hit-man and thin mean-looking lips pressed together so hard that her mouth was little more than a slash. She wore a plain calf-length grey skirt and a tightly-buttoned blazer which seemed several sizes too small. Waddling straight up to the MD, she slapped the table in front of him. \"Things have gone too far now, Charles! It's disgusting!\"\n\nHe sighed. \"What is it this time, Milly?\"\n\n\"The ladies' room!\" she snapped, \"I repeat, it's disgusting!\"\n\n\"It shouldn't be. The last health and safety inspection reported the wash-rooms as being spotless.\"\n\nMilly slapped the table again. \"I'm not talking about hygiene and cleanliness. I'm talking about all the graffiti. It's disgusting! The young women in this company have minds like sewers [well, can't argue with her there] and Something needs be done about it!\" That's right, she seemed to say 'something' with a capital letter. I wondered if she'd appreciated my contribution. Probably not.\n\nTwo or three people started to chuckle, only to be quelled by the glare Milly turned on them. The MD sighed. \"All right Milly, I'll get maintenance to look into the problem. Maybe there's a graffiti resistant paint on the market. Now can we please get on with the meeting?\"\n\nI estimated Milly's age as being about mid-forties which would make her a child of the Seventies. Well, I was to find out she was a child of the Seventies all right, the Eighteen-Seventies. She was humourless, narrow-minded, strait-laced, bigoted... oh hell, you pick your own adjectives\u2014the harsher they are the more appropriate they're likely to be.\n\nOne blessing about my new job was that I had very little to do with Milly Granger. On the odd occasions we did talk, usually at the tea-station, I found her to be a very unpleasant piece of work. She had two conversational default settings: moan and gripe. The French dramatist Moli\u00e8re wrote a play called The Misanthrope. I reckon I know where his inspiration came from. I think the old fellow had a crystal ball\u2014he gazed into the future one day and there was Milly ranting and raving about something or someone.\n\n* * * * *\n\nI couldn't work out what was wrong with me, I just could not get that exotic-looking creature I'd bumped into out of my mind. Much of the following week I looked forward to seeing her around but not a sight nor hair of her anywhere. I got talking to Milly Granger at the tea-station one morning and mentioned the strange girl. I described her and asked: \"Do you know who I mean?\"\n\nMilly's thin lips compressed together in distaste. \"Oh yes, I know her!\" she snapped, picking up her tea and stalking away. Did I say 'stalking away'? Stomping away would have been better, I could almost feel the floor shaking under flat-footed disapproval. And I was left none the wiser.\n\nSo I stepped in to see Jayne North, the HR deputy manager on some pretext and just casually mentioned the unknown. \"I asked Milly who she is and Milly threw a strop and buggered off without telling me.\"\n\nJayne laughed. \"Yes, Milly would. I think you're talking about Gay Fay and she offends Milly's sensibilities mightily.\"\n\n\"That's her name, Fay?\"\n\n\"No, actually it's Amelia... Amelia Brogan. People just call her Gay Fay because Gay doesn't rhyme with Amelia.\"\n\n\"And is she?\" I asked, \"Gay, I mean.\"\n\n\"I'm not sure,\" Jayne replied, \"It's widely believed round here that she is. Despite her Goth looks she is an attractive girl, but she's never been seen with a man. Plenty here have tried to get dates and she's turned them all down\u2014but you know what some men are like, any woman who turns them down is automatically labelled lesbian. As for Milly, she disapproves of anybody and anything out of the norm. If Milly had her way, Amelia would be locked up and the key thrown away, and that's just for looking the way she does.\"\n\n\"I've only seen her around that once,\" I said, \"Which office does she work in?\"\n\n\"Oh, Amelia's not an employee here,\" Jayne explained, \"She's a freelance IT consultant and she's one of the elite. We used to have our own IT team but they were pretty useless. The best IT people can command very high salaries and our small outfit can't compete for the best. Once we were hit by a very nasty virus or dose of malware and our IT lot couldn't solve the problem. In desperation the CEO authorised hiring Amelia for a one-off job. She found the nasties within an hour or two, cleaned them out and had everything up and running within another couple of hours. Sheer genius.\n\n\"So our IT people were assigned to other work and we retain Amelia's services to solve our problems. Her fees are high but still work out less than the combined salaries of a team. Given that she's brilliant and keeps us operational with little or no fuss, she's worth it. She works from home on software problems and only comes in here if we have hardware troubles.\"\n\nSo it looked as if I'd not see the exotic Amelia Brogan again unless by accident. And for some strange reason, that pissed me off mightily.\n\n* * * * *\n\nYou know, having whinged about my lack of orgasms with men, I'm almost reluctant to admit to the one time I did have an orgasm with another person. However, in the interests of total honesty, here goes.\n\nI was nineteen and a fresher at university. Nineteen, free from parental restrictions (not that mine had ever restricted me excessively) and still inclined to go over the top when having a drink. But what student doesn't? A number of us went on a Students' Union organised pub-crawl, a kind of initiation ceremony or rite-of-passage, and at some stage in the evening the world suddenly grew a bit hazy. In the last pub visited I at least had the sense to switch to mineral water before sitting down for a while. Nature called, I went off for a pee (a long one) and when I returned to the bar my party had disappeared. Gone. Evaporated. I don't think the union rep conducting the piss-up had bothered to count his flock\u2014probably hadn't even bothered to count his own number of pints\u2014and had just ushered them all off to the next boozer. Which was all very well but I hadn't got a clue as to where we were let alone where we were supposed to be next. But brace up, Jessie girl, I told myself, after all, you're nineteen years old and like most teenagers you know it all. The world, my dear, is yours. So I tottered off to find my own way back to the halls of residence.\n\nHow to describe my attempts to find my way home? 'Blundered' is likely the best word. At least the small university town was considered to be a fairly safe place at night because my body language probably yelled out: \"Vulnerable!\" Then I saw it, the neon sign proclaiming The Blue Mood Wine Bar\u2014that's right, Blue Mood, not Blue Moon as might be expected\u2014and its doorway seemed to sing out to me. I went in.\n\nIt was blue. All of the lighting cast a soft blue glow over everything\u2014some of the drinks I could see looked really weird. I pushed my way through a crush to the bar and ordered a mineral water. The attractive barmaid looked doubtful and I'm sure that if I'd ordered alcohol she'd have refused on the grounds I'd had enough. But mineral water? She shrugged and served it with plenty of ice and a slice of blue-tinged lemon (or lime, when they're blue who can tell?). A long swig did me some good and I asked for a refill before taking a look around. Then it struck me...\n\nThere wasn't a man in sight, The Blue Mood Wine Bar was filled with women, women drinking, women laughing, women dancing, even... Good God! even women kissing and cuddling and generally carrying on in a way I'd never seen before. I hoped the blue lighting concealed my blushes. \"Is this... women only bar..?\" I asked the barmaid, waving a hand at the crowd. \n\nShe nodded, amused. \"You could say that, yes.\"\n\nInnocent me\u2014I had this vague idea that single-sex bars were illegal. Or was I thinking about something else? Christ, six or seven pints of Greene King Abbot ale had really rattled my brain. Oh well... While I was getting my head round this, someone approached me. \"Hello, I've not seen you before. First time here?\" The woman who'd spoken to me was... well, now I'm more aware of life, I suppose she might be called a butch although she wasn't what most people would think of as butch. Perhaps 'tomboy' would be more appropriate. She was a little taller than me, slim, dressed in jeans and a light leather jacket, with a short pixie cut framing a pleasant freckled face.\n\n\"Yesh... firsh...\" I got a grip of myself, trying to control my tongue which was still a little floppy after the pints I'd consumed. \"Yes, first time,\" I managed.\n\n\"And you're at the uni,\" she added.\n\n\"Tha...s, that's clever... how'd you know?\"\n\n\"Doesn't take Sherlock Holmes to recognise the uni ID card draped around your neck.,\" she pointed out, offering her hand. \"I'm Marnie.\"\n\nI shook. \"Jessie.\"\n\n\"I'll bet you were on a uni pub-crawl and got lost.\"\n\n\" 'Sright... went for pee, when I got back... all gone. Jus' melted away.\"\n\nMarnie laughed. \"Some of those Students' Union blokes are irresponsible buggers,\" she said, \"They're always losing freshers. So, what're your plans for the rest of the evening, Jessie?\"\n\n\"Was... tryin' to find my way home... halls of residence...\" I held up my glass. \"Saw this place, thought 'nother one of these wouldn't hurt.\"\n\nMarnie prised the glass from my hand and sniffed the contents. \"Well, you may a teensy bit pissed but at least you've got the sense to drink water now. Should help with the hangover tomorrow. Tell you what, Jessie, give me time for a quick beer\u2014you have another mineral water\u2014then I'll get you home. Okay?\"\n\n\"Thanks, Marnie... 'sreally nice of you...\"\n\nWe settled at a table and then I decided I wanted to dance. Well, why not? All the women on the dance floor seemed to be having a lot of fun, why shouldn't I join in? Good for Marnie, she humoured me until I'd had enough then steered me out through the door, me waving and shouting happy farewells to the other patrons.\n\nShit happens. That's what they say, shit happens. When we reached the halls of residence, the doors were firmly locked. \"What's time?\" I asked.\n\nMarnie checked an outsized watch on her left wrist. \"Eleven-forty-five,\" she answered.\n\nAnd they locked the doors at eleven-thirty. Each night. On the dot. Christ, it's the twenty-first century and they're still following rules laid down probably in the nineteenth century. I raised my fists to hammer at the door but Marnie stopped me. \"I know what these sods can be like,\" she said, \"They'd probably suspend you for causing a disturbance. Might even call the cops saying you're drunk and disorderly. Tell you what, Jessie, my flat's nearby, couple of streets away. You can stay there tonight. It'll mean sharing a bed but my bed's big enough for both of us.\"\n\n\"You're a good 'un, Marnie,\" I told her solemnly, \"Let's go!\"\n\nMarnie's place was only a studio flat, one medium-largish room with a three-quarters bed in one corner, chest-of-drawers, sofa and armchair, small table, ditto bookcase and a closet. Off to one side were a kitchenette and shower-room with toilet. She kept the place neat and tidy, contrasting strongly with my student's cubby-hole which was a tip.\n\nWhen we'd both used the toilet, Marnie pulled out a couple of t-shirts and tossed one to me. She stripped off quite unselfconsciously and I had a glimpse of a neat, athletic body before she put her t-shirt on. I hesitated, suddenly shy.\n\n\"What's the problem, Jessie?\"\n\nIt was a warm evening for September and I'd worn a long dress so I'd gone commando. \"Not wearing a bra,\" I mumbled, staring at her bedside rug, \"or pants.\"\n\nMarnie cocked an eyebrow at me. \"Jessie, do you honestly think that I've never seen boobs and ladies' bits before?\"\n\nShe was right, guess I was just being silly. \"Oh, the hell with it!\" I whipped my dress off and pulled on the t-shirt as quickly as possible.\n\nMarnie regarded me with an amused grin. \"You've nothing to be ashamed of, Jessie. Nice boobs and a backside to be proud of.\" She climbed into the bed and turned her back to me. \"Light switch is by the door, kid,\" she said, \"Turn off then come and get comfortable.\"\n\nDon't know why, I woke up in the early hours unsure for a moment where I was before remembering I was sharing a bed with a kind woman called Marnie who'd more-or-less saved my bacon. Then I realised something else and could feel my face flushing.\n\nWe were spooned together, both of our t-shirts had ridden up in the night and Marnie's bare bottom was pressed firmly against my pussy. Not only that but I had an arm around her and was holding one of her boobs in my hand, its large hard nipple pushing into my palm. I was holding a boob! With a large hard nipple! And to my surprise, it felt good, better than good. Embarrassed\u2014with myself more than anything\u2014I tried to slip my hand away. Marnie's hand came up to cover mine, holding it firmly in place. \"Mmmm, that feels nice,\" she murmured, voice sleepy.\n\nShe wriggled around so that she was facing me and pressed velvety lips to mine with just a hint of tongue. Instinct told me to jump out of bed and run but my body betrayed me\u2014I could feel myself getting wet and I yielded, returning the kiss, opening my mouth a little to admit Marnie's tongue. Our kiss grew deeper and our embrace tightened. My mind was clamouring This isn't right! but wicked little puss only seemed to get wetter as our mounds crushed together. This isn't right? Then why was it feeling so much better than the episode with the Captain of the school teams, my only other sexual experience to date?",
        "Marnie captured a thigh between hers and began to move her hips slowly. I could feel her wetness against my leg and mine against hers. I found myself reacting to her movements, falling into the pattern quite naturally as my breathing first slowed and became languorous then quickened in response to the building pressure on my clitoris.\n\nI gave a little cry as I suddenly came and I think Marnie came a few moments later. She kissed my forehead, saying: \"There, Jessie, that should help you sleep better.\" She was right.\n\nI woke up several hours later, less hung-over than I deserved, probably thanks to all the mineral water I'd had. Marnie still appeared to be asleep. I was desperate for a pee, again thanks to all the mineral water I'd had. After than I pulled my dress on, took a notebook from my bag and scribbled a 'Thank you' note to Marnie. Then I saw that she was awake, quietly watching me. I held up the note and muttered: \"Thanks for everything.\"\n\n\"Will I see you again, Jessie?\" she asked.\n\nI fumbled. \"Perhaps... maybe... not sure... lots of studies at uni...\"\n\nMarnie gave me a sad little smile. \"It's okay, Jessie, I understand. It took me quite a few years to recognise and accept my sexuality...\"\n\nAs I made my way back to the halls of residence, I wondered what that last bit meant. There was nothing to recognise in my sexuality. I was straight. I was only nineteen, things were sure to be better when I met real, grown-up men.\n\nI didn't see Marnie again. I avoided pub-crawls, I steered clear of The Blue Mood Wine Bar, I limited my drinking to the Students' Union bar, I studied. I felt guilty for a while because Marnie was so decent and had saved my backside when there was no reason for her to do so. As for the sex, well, that was just an aberration wasn't it? Wasn't it...?\n\nIn time I put the whole thing out of my mind for quite a few years.\n\n* * * * *\n\nAs the new kid on the block I was an obvious target for the rampant men in the company and true to form it seemed to be the hairballs who wanted to get into my pants. They ran the full gamut too, very young, very old, very married, very engaged, hardly a one of them single, all dribbling down their chins at the thought of new blood. Wall-to-wall sleaze. The decent blokes stayed just that, decent and friendly and not bothering me in that way. By now I'd well and truly learned my lesson, no more Howies or Timothys for me, thank you, and I had some fun making up a variety of excuses for not accepting dates with the worst element. Depending on who you listened to afterwards, I was variously: engaged to a special forces unarmed combat instructor; gay; a former nun seeking divine guidance and adhering to my vows; with a boyfriend who was an enforcer for some very unpleasant and illicit businessmen; scared of an insanely jealous cage-boxing ex who loved violence and stalked men who fancied me. I don't know how many of my fanciful put-downs were accepted as fact but after a couple of weeks they left me alone and I was able to start organising my work the way I liked.\n\nAnd then one day the gods smiled on me. Or perhaps a god. Which one? Hermes, maybe\u2014he was the Messenger of the Gods and this was a communications matter. Oh hell, get me... I'm rambling...\n\nStart again. The gods smiled on me. My computer wouldn't fire up one morning. Despite all the dirty names I called it the blank screen just stared at me defiantly. I tried all the usual suggestions including restarting it several times. The only thing I didn't try was giving it a good kick. I didn't think the company would appreciate me putting my foot through the wretched machine. I phoned procurement who have responsibility for IT equipment and they agreed to get their expert out as quickly as possible. My call was returned within five minutes. \"Amelia Brogan will be with you by twelve.\"\n\nAmelia Brogan will be with me by twelve! Yippee! Bloody hell, what's going on inside my head?\n\nAt ten to there was a soft knock on my door and Amelia came in. This time her trouser suit was a black chalk-stripe and her shirt and tie combination a silvery colour. She wasn't wearing the hooped earrings this time but some long dangly-jangly things in silver and jet. \"Ms Thorne? I'm Amelia Brogan. I understand you're having computer problems.\"\n\n\"It's Jessie.\" I held out my hand. \"And yes, the bloody thing's gone on strike.\"\n\nAmelia took my hand and I felt a little tremor inside my chest. It seemed as if her warm hand was the nicest I had ever shaken. As I released her hand reluctantly, I noticed that her fingernails were short and painted to match her outfit, alternating black and silver. \"Have we met before, Jessie?\" she asked, \"You look familiar.\"\n\n\"We collided in the toilet doorway some weeks back,\" I told her.\n\n\"Oh yes, I remember. Right, let's have a look at this computer of yours.\"\n\nAs Amelia bent to work at my machine I caught a whiff of light, floral fragrance. \"That's a lovely perfume,\" I said, \"What is it?\"\n\n\"It's called L'eau Bleue.\"\n\nAmelia tried all manner of tricks with the computer to no avail. She looked puzzled briefly then murmured: \"I wonder...\" Reaching beneath my desk, she removed the plug from its socket, took a small screwdriver and opened it. \"There's your villain,\" she said, pointing, \"No power coming through.\" A tiny screw had worked loose and the wire it held had lost contact. Amelia replaced the faulty screw, plugged in and turned the computer on. \"Bingo!\"\n\n\"Thanks. I'm sorry you had to come out here just to tighten a loose wire,\" I said, \"If I'd known I could have sorted it myself.\"\n\n\"Don't worry about that,\" she replied, \"I'll be charging my usual call-out fee and job price and that'll piss Milly Granger off mightily. Any day I can do that is a plus in my book.\"\n\n\"You don't get on?\"\n\nAmelia laughed. \"She lumps me in with Jezebel, Salome, Lucrezia Borgia and Snow White's wicked stepmother.\" She pointed to my computer. \"Anyway, it's the top brass's fault. The IT equipment in this company is more or less obsolete and that includes software. I keep urging them to replace it all but they don't listen, too tight I guess. I've done what I can to protect the system but one day they'll get a virus that I might not be able to handle. Still, I should worry\u2014the longer they keep this junk, the more I make from them in fees. So, nice to have met you, Jessie. I'll be off now...\"\n\n\"Wait a minute, Amelia,\" I said, \"It's almost lunchtime. There's a great little coffee shop a few minutes walk from here. I usually eat alone so some company would be good if you'd like to join me.\"\n\nAmelia gave me a huge smile. \"Thanks, I'd love to...\"\n\n* * * * *\n\nWe took coffees and Danish pastries to a window table where we could look out on the world and good-humouredly criticise the passers-by. After a little small talk, Amelia said: \"Are you out yet, Jessie?\"\n\n\"What do you mean?\"\n\nShe looked puzzled at my response. \"You know... out... to your family. About being gay.\"\n\nA light-bulb clicked on. Was this what Mother had meant when she suggested maybe I wasn't meant for men. Then I had a sudden flash of memory\u2014a nineteen-year old student and an attractive tomboy type... No, can't be. Not quite sure how to respond, I hesitated then: \"But I'm not gay.\"\n\nAmelia reddened. \"Oh God, my mistake. I'm so sorry Jessie, I just got it into my head somehow that you were gay. When we shook hands I'm sure I felt something between us [so did I, Amelia]. And I'm so used to some of the Neanderthals in your company treating me like muck because I'm gay that when you were friendly and asked me to lunch I sort of assumed... how stupid of me... my gaydar must be having an off day.\" She picked up her bag and started to rise. \"Maybe I'd better go before I make things worse.\"\n\nI grabbed her hand. \"No you don't, sit back down. You might have been mistaken about me but given my track record with men... And anyway...\" I trailed off. She seemed undecided about staying so I took her hand in both of mine. It felt lovely and I experienced a little inward quiver. \"Amelia, I'm not offended. I'd heard rumours that you might be gay but I didn't know for sure, and if I had known it wouldn't have made a scrap of difference to me. I try to take people for who they are, not what they are. Look, I'm new to this area, I haven't made any real friends here yet, and I think\u2014I hope\u2014perhaps we could be good friends.\"\n\nAmelia put her bag down again. \"You mean it?\" I nodded yes and she added: \"Thanks, Jessie. I don't often make a prat of myself like that. Yes, I'd like to be friends. Um... you said, 'And anyway...' as if you were going to say more. Was it something?\"\n\nI'd been going to add I think you're bloody gorgeous and if anyone could turn me, you could. Instead I shrugged and said I couldn't remember, adding: \"That's settled then, friends. Anyway, how about you? You out?\"\n\n\"As far as it goes,\" Amelia said, \"I haven't got much in the way of family. Grandparents all gone, my father died when I was very small, traffic accident, I can barely remember him. Several cousins but we don't stay in touch much. My mother's a bit of a cold fish, we're not exactly estranged but we're... distant... I was going through an early rebellious phase when I came out to her, styling myself to please me and not the everyday world. She sniffed and said something like what else could I expect looking the way I did. Neither approval nor disapproval, just that sneering comment.\"\n\n\"That's sad.\" I reached out to her hand again and gave a little squeeze. \"If it's any consolation, Amelia, I think you look fabulous, rebel or not.\"\n\n\"Thanks.\" She squeezed back and gave a little sigh, quite sad-sounding. \"I came out when I was eighteen and still in the sixth-form at school. I lost a number of friends that way.\"\n\n\"Then they weren't real friends,\" I told her, \"My dad once told me that true friends are people who know all about you yet still like you. It's a good philosophy. As for my colleagues, well, if some of them are so hide-bound as to cold-shoulder you because you're gay, then fuck 'em! From what I've learned about the IT set-up here, they need you more than you need them.\"\n\nShe grinned. \"I suppose I could always create a software virus so that a big butch dyke carrying a rainbow flag and flashing her boobs pops up on their PCs when they turn them on. Probably scare the shit out of some of them.\" She started laughing. 'I'd love to be a fly on the wall when Milly Granger saw that! Anyway, Jessie, you said something about your track record with men. What's that about?\"\n\n\"You see before you the world's worst man-picker.\" I told Amelia about Howie and Timothy and some of my other great mistakes.\n\n\"Not good,\" she agreed, \"I thought I'd made a poor judgement call but at least it was only the once. I had a partner called Anneka, we were together four years and I thought it was forever. Then I found out she'd been shagging quite a few other women left, right and centre throughout those years, including my then best friend. So bye-bye, Anneka... and best friend... More or less been by myself ever since... the odd short affair or one-nighter, but nothing permanent.\"\n\nWhile we'd been talking, a small girl about three years old on the far side of the coffee shop decided to have a mini-tantrum and a hapless young mother was pleading with her. \"Fifi-Tinkerbelle darling, please settle down and drink your lovely juice. Please, Fifi-Tinkerbelle darling.\"\n\nAmelia took a sip of her coffee. \"Enough about our disastrous love lives.\" She gestured towards the mother and child. \"No wonder that kid's misbehaving with a name like Fifi-Tinkerbelle.\" she commented, \"Do you ever wonder about the mindset of parents when they lumber their children with terrible names?\"\n\nThis was a sore point with me. \"Often. Why?\"\n\n\"Oh, guess it's because I'm a bit of a victim myself...\"\n\n\"Nonsense,\" I said, \"Amelia's a lovely name.\"\n\n\"You don't know the half of it,\" she said with a rueful smile, \"My full name is Amelia Vanity Fair Brogan. My mother's an academic, teaches English Literature at a provincial university. She's a great admirer of Thackeray's novels and pledged her commitment with my middle names.\"\n\nBrogan... Brogan... English Literature... rang a bell... \"Is your mother Letitia Brogan?\" I asked, \"Wrote a biography of George Eliot, Mary Anne and George?\"\n\n\"That's her. You've read it?\"\n\n\"Not voluntarily, it's a bit dry and heavy going. It was required reading for one of my university courses. Vanity Fair, eh? Think yourself lucky, you got off lightly.\" I didn't mean to say that last bit, it just slipped out.\n\nAmelia's eyes sparkled. \"You too?\"\n\n\"Uh-huh,\" I mumbled, lowering my head. I felt as if I was blushing.\n\n\"Come on, let's have it,\" said Amelia, \"You know my terrible secret. What's yours?\"\n\nI mumbled again. \"Worse secret.\"\n\n\"Speak up,\" she demanded.\n\nI couldn't look her in the eye. \"Moonbeam Hummingbird... Jessica Moonbeam Hummingbird Thorne.\"\n\nTo Amelia's credit she didn't laugh although she did smile a bit. \"With names like that, I'd guess your parents were hippies.\"\n\n\"Well, neo-hippies I suppose you'd call them. They're slightly too young to have been originals.\"\n\n\"What's the story?\"\n\n\"They spent a few months in a commune in Central America,\" I told her, \"They claim that I was conceived on a night when a full moon shone on their tent and when they stepped out in the morning, the first living thing they saw was a hummingbird. I suppose in a way I got lucky. They returned to this country before I was born and my name was going to be just Moonbeam Hummingbird. Thankfully, both of my grandmothers objected and ganged up on them, pointed out that when I went to school, at best I'd have the piss taken because of my names, at worst I'd be hounded and bullied.\n\n\"Common sense prevailed and as both grandmas were fans of Murder, She Wrote I was given the first name of Jessica after Angela Lansbury's character. Narrow escape although Mum and Dad still had their way over my middle names. And the irony is that they're called Joan and Gordon, very non-hippy.\"\n\n\"Could have been worse,\" mused Amelia, \"They could have stayed on in their commune and called you Zweeble Dweeble or some such.\"\n\nI put on a mock-serious face. \"Oh, they wouldn't have called me that, those are boys' names.\"\n\nWe started laughing and Amelia reached over to touch my hand. As her warm fingers touched mine my heart did that strange little flip again. And Fifi-Tinkerbelle darling deigned to calm down and drink her lovely juice.\n\nAs we were leaving the coffee shop, Amelia suddenly said: \"I don't want to upset you, Jessie, but there's definitely something about you. You're sure you're straight?\"\n\nI was taken slightly aback but figured I could bend the truth a little. Shrugging, I said: \"Never really thought about it much. I've only ever had boyfriends and none of them were worth a pinch of shit.\" I had a momentary flash of memory... Marnie... dismissed the thought.\n\nAmelia's eyes shone as she put a hand on my arm. \"No harm in asking.\" Then she added: \"You need to be careful, Jessica Thorne. I've only known you a couple of hours but I think I could easily fall in love with you.\"\n\nSomething inside me leapt and fluttered around and I tried to keep a poker-face. \"I'll be careful.\"\n\nSo we did become good friends. Any time Amelia needed to come to the company she'd look in on me and we'd usually lunch together. If she was doing work for anyone else in town, we'd make some time to meet up. We found we had a lot in common. For instance, we both enjoyed fantasy and the better class of horror novels; we loved the same kind of films and music and both had an appetite for spicy foods.\n\nOf course there were some areas where the lines didn't meet up. Amelia was a genius with computers but other than technical writing I don't think she'd make a good journalist in a hundred years. I'm a pretty good journalist and PR person but computers? I can use one: spreadsheets, word processing, internet and so on but the really clever stuff leaves me baffled and cross-eyed. Still, I was glad to have Amelia in my life and I believe it was mutual.\n\nShe called me one Thursday when we'd been friends for several months. \"Hi, how'd you like to come to stay at my place this weekend, Saturday and Sunday?\"\n\n\"Sounds good,\" I replied, \"But I've promised to go for lunch with my parents on Sunday. They live about forty-odd miles away.\"\n\n\"That's okay. Stay here Saturday night, you'll have plenty of time Sunday morning to get to your folks. I live just outside a village called Wychett-St-Jude...\" She gave me directions. \"And Jessie, bring some warm clothes and coat, it can get pretty cold round here this time of the year...\"\n\nStep Three: You kiss and hold her tightly\n\nThe seven- or eight miles drive didn't take too long and I was soon approaching the picturesque village of Wychett-St-Jude. \"Drive straight through Wychett,\" Amelia had instructed,\" and you'll see my place on the right a mile or so on. Can't miss it.\"\n\nCan't miss it? Had I missed something? What place? All I could see from the road was a thick hedgerow, about three or four feet high, and an old windmill standing atop a small knoll. I drove on a bit further. In the distance I could see several scattered cottages but they were certainly more than a mile or so from the village. I stopped the car and took out my mobile to call Amelia. Wouldn't you have guessed? I was in a no-signal pocket. The best thing to do would be to return to Wychett and make enquiries. I turned the car and started to drive back. As I neared the windmill I spotted Amelia running down a path towards the road and saw where I'd gone wrong. Coming from the village, the hedgerow curved out slightly, effectively concealing a wide gateway with five-bar gate, open now, and path leading up to the mill. I could also see what looked like a cottage extension attached to the mill, a building which again had been invisible travelling from Wychett. A little way inside the gateway was a concrete hard-standing where Amelia's Range Rover was parked. I pulled in beside it and applied the handbrake just as Amelia reached me.\n\nPanting slightly she said: \"I saw your car going by. I'll have to do something about that hedge one day. I guess you didn't see the gate.\"\n\n\"No, and you didn't say your place was a windmill either.\"\n\nAmelia shook her head. \"Sorry, Jessie, I'm just so used to people round here knowing... anyway...\" She reached out and gave me a big hug. My heart gave another of those little lurches it did each time Amelia touched me. \"It's good to see you, Jessie. Grab your bag and come on, we'll have some tea now and I've made a large curry for later on. I do a mean curry and it'll warm us up nicely before we go out this evening.\"\n\n\"We're going out?\" I asked, surprised.\n\nAmelia nodded. \"That's why I told you to bring warm clothing. It's a kind of annual celebration or commemorative event in the village. During the Civil War, Wychett had Royalist sympathies and in 1645 they held off a Parliamentarian force for several days until relieved. Not bad for a bunch of yeomen farmers and peasants facing seasoned troops. So at this time every year the local people go up the hill behind the village and there's a bonfire with an effigy of Oliver Cromwell and fireworks and general fun. Beforehand, everyone gathers in the village pub for a few drinks. I think you'll enjoy it. I always do.\"\n\nThere seemed to be something different about Amelia this afternoon and it took a moment for me to get it. I think in a different place at a different time I might not have recognised her had it not been for her hair style. For a start, her usual outsized earrings had been replaced by small gold studs matching all the others round her ears and then her face was free of makeup. Often when you're used to seeing someone with makeup and then suddenly you see them without, there is a strange nakedness about their appearance. But not in Amelia's case\u2014if anything her scrubbed face was even more lovely. I was used too to seeing her wearing flamboyant clothes but now she was simply dressed in a thick turtle-neck sweater and jeans.",
        "And she was so, so beautiful...\n\n\"By the way...\" I reached into my car and handed Amelia the mixed bouquet I'd bought her. \"I didn't know whether Goth girls liked flowers so I took a chance...\"\n\n\"This Goth girl loves flowers.\" She looked delighted and leaned in to kiss my cheek.\n\nFlip! went my heart. Thud! went my heart.\n\nWe had tea before a roaring fire in the cottage and then Amelia showed me round her home. The comfortable cottage comprised sitting-room, kitchen, bathroom and guest bedroom. There was an old shotgun mounted above the fireplace, looked a bit of a museum piece. \"You shoot?\" I asked.\n\n\"No, that's been there like forever,\" she said, \"I guess it's pretty unusable by now. I wouldn't like to risk it, that's for sure.\"\n\nAn inner doorway led into the windmill where the ground floor was a real museum piece containing all the original machinery, obviously very old. Then a narrow spiral staircase took us up to the next floor.\n\n\"My office,\" Amelia told me. Vertical blinds at the windows were closed to shut out the sunlight and some seven or eight computer desks, bearing all manner of IT paraphernalia, were arranged in a semi-circle round the walls. There were a number of iMacs and Mac laptops and I recognised the black, cylindrical shape of a Mac Pro. In addition to the Macs there were various PCs and laptops, printers, routers and impressive-looking appliances and machines inset with control knobs, flickering gauges and small coloured lights that I couldn't put a name to. Even to the untrained eye, this was serious apparatus. More than anything, Amelia's office was like the flight-deck of the Starship Enterprise, the only thing missing being a pointy-eared bloke pontificating about... lesbian love, perhaps. Now why the hell did I think that Spock would comment on such a thing? \"It's love, Jim, but not as I know it...\"\n\nThe spiral stairs went on to the windmill's top floor which turned out to be Amelia's bedroom, a small section of which was partitioned off to make an en-suite bathroom. The floor was covered in rich crimson carpeting and the room's centrepiece was an enormous four-poster bed, its cover matching the carpet exactly. Framed art nouveau prints of women graced the walls between the several windows and I recognised the erotic works of Alphonse Mucha, Gustav Klimpt and Aubrey Beardsley\u2014obviously the fine arts module of my degree course hadn't been a waste of time after all.\n\n\"Take a look from the windows,\" Amelia invited.\n\nThe view from all the windows was spectacular. From one I could see into the village which from this distance seemed to be a toy for a giant child. The clock-face on the square church tower shone white against the ancient and blackened stonework, although from here I couldn't make out the numbers, only the hands. From other windows were varying views of fields, some with cattle and sheep, others lying fallow, and distant hills and clumps of trees, leaves glowing with the colours of autumn. Perhaps half-a-mile away was a narrow stream, sparkling with reflected sunlight and I could make out several people fishing.\n\n\"Wow,\" was all I could say.\n\n\"Great, isn't it?\"\n\n\"It certainly is,\" I enthused, \"You should have your office up here, Amelia.\"\n\nHer smile was tolerant. \"If I had my office up here, I'd never get any work done because I'd be too busy looking at the view, especially in summer when it's truly spectacular.\"\n\n\"You've got a great place here but why a windmill?\"\n\n\"An inheritance,\" Amelia explained, \"my grandfather Brogan was very wealthy, he'd made some of his money in property and had a huge portfolio. The mill was one of his properties. He'd had it modernised and the cottage built and as I was the only one in the family who truly loved it, he left it to me. My mother was left a house in her university town. There was money for us too, but...\n\n\"He was an odd man, Grandfather Brogan. Although born in the early 1940s, his attitude was... ultra-Victorian, I suppose you could say\u2014he was quite a throwback. Despite all evidence to the contrary, he firmly believed that women were incapable of handling their own financial affairs so instead of leaving us actual money with the properties he set up two trust funds from which we each get an annual income. Whichever one of us dies first, her trust fund is transferred to the survivor. When the second one dies, the trusts are wound up and the proceeds go to various charities. It was so silly. One of my cousins, Lawrence, is a compulsive gambler and he got uncontrolled money\u2014blew most of it within a year, lives on benefits now. But of course, as far as grandfather was concerned Lawrence is a man and could be relied on to deal with his finances in a sound and trustworthy way.\n\n\"Fortunately the trustees are a little more flexible than my grandfather and within the constraints of his will, they're willing to release money from the capital for worthwhile projects. When I got my Master's in computer science they were quite happy to release funds for me to start up my own business and I'm pleased to say I'm doing well...\"\n\nAmelia was right\u2014she made a brilliant curry. I laughed a little as later on as we prepared to go out. \"What's funny?\" Amelia asked.\n\n\"Oh, it's your jeans and sweater and that lovely sheepskin coat you've put on. It just doesn't seem to be you. I guess I'm so used to seeing you in flamboyant trouser suits...\"\n\n\"Even we Goth girls feel the cold.\" She gave me a gentle punch on the arm. \"I'm not freezing for you or anybody else, so stop taking the piss. Oh, and stick this in your coat pocket, we'll need it later.\" She handed me a large flashlight.\n\n* * * * *\n\nI loved the village pub, The Magpie. No music, no gaming machines, just a log fire in a huge fireplace and an all-round cosy and friendly atmosphere. The man I took to be the landlord was almost a caricature of the species, corpulent and jolly-looking with a luxuriant handlebar moustache and a silver watch-chain and fob spread across a chequered waistcoat. And the place was crowded, with many of the customers dressed in period costume for the occasion. There were smock-clad peasants, dandy cavaliers, Cromwellian soldiers, Puritans dressed in black broadcloth (although their seventeenth century predecessors might not have approved of the drinks in their hands). Others, like myself and Amelia, were well-wrapped in warm autumn clothing. \"This place is brilliant, Amelia,\" I said.\n\nShe gave me a happy smile. \"Glad you like it. Glass of wine?\"\n\nI eyed the row of beer pumps on the bar. \"No way, it's a pint of real ale for me. Ruddles County, I think.\"\n\nAmelia's smile became even brighter. \"Thank God, a girl after my own heart. I'll have the same.\" She went to the bar and waited patiently for service.\n\n\"Hello, pretty lady. You're new here, aren't you? I'm Felix.\" The smooth voice was close to my ear, a little too close, invasion of space and all that. I took a couple of steps back before turning to look at the speaker. He was tall, good-looking, well-spoken and his clothes looked very expensive but... I don't know what it was but there was just something about him that suggested the suave exterior concealed a sleazebag struggling to get out. Perhaps it was something to do with his lank, swept-back hair or his self-satisfied smile or the way he reminded me of some of my catastrophes. \"Let me buy you a drink and then we can become better acquainted,\" he offered. I didn't feel any great urge to become better acquainted.\n\n\"No thanks,\" I said, \"A friend's getting me a drink already.\"\n\n\"Fortunate fellow,\" purred Felix, \"But I'm sure I'll be able to tempt you away.\"\n\nYou'll be fucking lucky was trembling on the tip of my tongue but at that moment Amelia returned with our pints. She placed them down on a table, took one of my hands in hers and said, \"Forget it, Felix. Jessie's with me and you know I don't share.\"\n\nHe grunted: \"Huh! Another one!\" before moving off to shark his way around the bar.\n\nAmelia released my hand and suddenly there was an odd expression on her face. \"I'm sorry, Jessie, did I do the wrong thing there? Did you want to get to know Felix?\"\n\n\"Amelia, you did exactly the right thing. I don't like being rude to strangers but something about that bloke was getting right up my nose. I was working myself up to telling him to fuck off.\"\n\nAmelia relaxed and handed me my pint. \"Good. Despite the presentable exterior he's a king-sized creep. And not only is he a creep, he's not much good at taking hints.\" She laughed. \"If you'd told him to fuck off he'd probably have taken it as an agreement to marry him. It took him months to accept that I'm not interested in men.\" She lifted her glass. \"Cheers!\"\n\nWe drank for a while and Amelia introduced me to a number of villagers, all of whom seemed to be very friendly. The she spotted an elderly man on the far side of the bar. \"Excuse me a moment, Jessie. That's Ernie Paxton, the local handyman. I need a quick word with him about a job he's doing for me at the mill.\"\n\nWithin a minute or so of Amelia leaving me, Felix was back chancing his arm again, oozing dubious charm. \"Hello, pretty Jessie. Now you're not really one of those, are you?\"\n\n\"One of what?\"\n\nHe leered. \"You know, a dyke.\"\n\n\"What makes you think I'm not?\"\n\nFelix gave me that annoying, smarmy grin again. \"Well, you don't look like a dyke.\"\n\n\"Oh, that so? And what's a dyke supposed to look like?\"\n\n\"Um... er...\" He floundered, obviously unused to women asking him awkward questions. He was probably accustomed to seducing women younger and more innocent than me (or older and more desperate). Then I saw Amelia approaching and there was blood in her eye. I thought quickly, wanting to forestall any sort of unpleasant public argument. As she drew near, I pulled her into my arms and kissed her on the mouth. Amelia seemed to pull back slightly in surprise then responded as she pushed her body against mine. Wow, something intended to be a defensive measure suddenly became so much more as Amelia's arms crept around my neck. Her slightly-parted lips were soft and warm and I found myself melting into them. My whole body tingled unexpectedly and I realised... what did I realise? That this was the way it should be, that I was getting more from this kiss with a woman in a crowded pub than from all the sex I'd had with Howie and Timothy et al. Our embrace tightened as the kiss deepened. Then the spell was broken as some wag in the pub shouted: \"Hey! Get a room, you two!\"\n\nI turned to Felix. \"There! Is that dykey enough for you?\"\n\nHe gave a disgusted snort and slouched off, I guess to look for an easier touch.\n\n\"What was that all about?\" Amelia asked, \"I'm not complaining but why did you kiss me like that?\"\n\n\"Felix wouldn't accept that we're together and I showed him but\u2014\"\n\n\"Oh.\" There was a world of disappointment in that 'Oh' and on Amelia's face as she stepped away slightly. \"So it was just to get rid of Felix. I thought perhaps\u2014\"\n\n\"Amelia, you didn't give me a chance to finish. Yes, it started out to get rid of him but it became something more for me. That was the loveliest kiss I've ever had.\"\n\n\"You mean that? But you're straight.\"\n\nI took both her hands in mine. \"I don't give a stuff what I am. That was still the sweetest kiss I've ever had.\"\n\n\"Thank you for saying that, Jessie.\"\n\nSpontaneously we hugged and to general laughter the same voice as before drifted across the bar. \"Cover your eyes, folks, they're at it again!\"\n\nAwareness was dawning. I knew now that my feelings for Amelia were going way beyond ordinary friendship. I think loved her, not friendship love but proper falling-in-love love. As speedy and simple as that. But it was all so strange and confusing and I needed to assess my emotions. Let's see\u2014the evidence seemed to be there. The way my heart had flipped the first time I saw her and had continued to do so, especially when she touched me. This kiss that had, for me and I think for Amelia, turned in something so much more than just a way of discouraging the odious Felix. Suddenly I was becoming very unsure about my sexuality.\n\n* * * * *\n\nAs Amelia had said, the evening was great fun. The makings of the bonfire were piled so high that it must have been visible from miles away. Oliver Cromwell burned merrily on top while people in the various period costumes barracked and mocked each other but in the friendliest possible way. Some enterprising kids had brought a load of potatoes which they jacket-baked in the flames and sold for fifty pence a time. The firework display was marvellous and Amelia and I ooohed and aaahed with the best of them. I don't know why people oooh and aaah at fireworks, it just seems the right thing to do.\n\nIn time the flames started to die down and the crowd gradually dispersed, making their way down hill towards their individual homes.\n\nThe wind had picked up during the evening and was now icy and vicious, driving straight into our faces and cutting through our coats as we walked back through the village. Although the night was clear, we were forced to walk with heads bent to avoid streaming eyes. We'd hardly unclasped our hands ever since I had seen the sleazy Felix off; in fact, at one point during the evening, Amelia had removed her right glove and my left, interlocked our fingers and buried our joined hands in the deep side pocket of her sheepskin coat. We came out on the far side of the village, leaving the lights behind, and I switched on the powerful flashlight to guide our way. It was only a mile or so to the windmill but on that dark and lonely road it seemed to be so much more. Several cyclists, and once a moped, passed us with people calling out cheery good nights as they made their way to their even more distant dwellings.\n\nAt last we reached the turn-off path to Amelia's place and then to my surprise she led me straight past the cottage's entrance. \"There's something very special I want you to see,\" she told me. She conducted me to the far side of the windmill and down the shallow slope of the knoll. Now the keening wind was at our backs and we were able to straighten up once more. What could be so special to see here in the dark?\n\n\"Now look up at the sky,\" Amelia instructed.\n\nI did as she told me and caught my breath. The moon hadn't yet risen and the sky seemed to be a solid mass of stars, so thickly gathered together that it was difficult to distinguish individual constellations. I was able to identify the very familiar shapes of The Plough and Cassiopeia and Orion together with the Pleiades cluster but couldn't pick out any of the other constellations in those crowded heavens. And for the first time in my life I could see clearly the luminous band of The Milky Way floating across the sky against that backdrop of stars. \"Amelia,\" I breathed, \"I've never seen anything like this before. It's so wonderful.\"\n\nReaching out with her free hand, Amelia turned my face towards hers and kissed me very gently on the lips. There was no intention behind it just then, I believe, it was just a sweet kiss of friendship. Then she gave a little laugh. \"Let's get inside before we freeze our boobs off.\"\n\n\"Like a hot drink?\" she asked once we were in the warm and had doffed our outer clothing, \"Or are you ready for bed? It is very late.\"\n\nI clutched at her hands. \"Thank you for showing me that amazing sky.\"\n\n\"Wonderful, isn't it? No light pollution here,\" she told me, \"Now, hot drink or bed?\"\n\n\"Drink please.\"\n\n\"Hot chocolate sound good?\"\n\n\"Hot chocolate sounds wonderful.\"\n\n\"Five minutes.\" Amelia threw another log onto the fire then wandered off into the kitchen while I sank gratefully into the huge sofa. The place was beautifully warm thanks to the central heating but there's something so cheering about a large open fire.\n\nAmelia returned with our drinks and as she bent to put them on the coffee table, I caught a whiff of the L'eau Bleue perfume she favoured. I had another of those strange little inner flips and suddenly my pussy tingled.\n\nWe lifted our cups and silently toasted each other before taking a sip.\n\nInstantly my throat was aflame and I'm sure my eyes must have bulged out on stalks. \"Christ! That's hot chocolate?\"\n\n\"Well, it's a chilly night so I did put a tiny drop of rum into it,\" Amelia admitted.\n\nI took another sip and my tongue and teeth went numb. \"A tiny drop?\"\n\n\"Well, quite a large splash.\" Amelia tried her drink. \"Hmmm, perhaps I was a bit overgenerous with it.\"\n\nMaybe it was the rum that gave me the kick up the backside I needed. I reached out and took both of Amelia's hands in mine. She turned to look at me, an enquiring expression on her face. \"Amelia...\" I hesitated briefly then found courage. \"Amelia, can I sleep with you tonight? Please?\"\n\n\"Is that the drink speaking?\"\n\n\"No, I've not had all that much, even with your hot chocolate.\"\n\nAmelia's eyes were solemn. \"Do you really mean it, Jessie? Are you sure that's what you want? Are you sure of yourself?\"\n\n\"I'm not sure of myself,\" I confessed, \"What I am sure of is that I'd like to be with you tonight. I'm overwhelmingly attracted to you, Amelia, have been since I first saw you. I think I could easily fall in love with you. No, I think I'm already in love with you.\"\n\n\"But you said you're straight.\"\n\n\"Perhaps... I don't know...\" I searched her face for any sign of encouragement. \"Some time ago my mother suggested that maybe I wasn't meant to be with men. I didn't understand her then but perhaps she was right. Could be I'm not as straight as I always thought.\"\n\n\"Jessie, have you ever been with a woman?\"\n\n\"Well... yes, once...\" Oh, get it out, woman, I told myself, it's nothing to be ashamed of. \"Yes, just the once. I was nineteen, at university and I was slightly drunk. Her name was Marnie, she was gay, and I met her in a lesbian bar I'd accidentally wandered into. Long and short of it, it was late, I got locked out of the halls, and she was kind and let me stay at her place... one thing led to another...\"\n\n\"Nothing since?\"\n\n\"No. I tried to forget it\u2014thought I was straight but the kind of men I attracted...\" I shook my head in disgust.\n\nAmelia remained doubtful but she said: \"Kiss me, Jessie, see if it's as good as you thought in the pub.\"\n\nStill nervous, I cupped Amelia's face in my hands and brought my lips to hers. Her arms slipped around my waist and pulled me a little closer. Soft lips parted slightly and the tip of her tongue brushed my bottom lip. I let out an involuntary moan and let my tongue meet hers. They caressed tenderly. There was no great rush: our kiss was gentle and slow and easy and for me it was even better than the pub kiss. There was no offensive Felix, no joker shouting comments, just me and Amelia and, for me, a strengthening of the love I was already feeling for her.\n\nAt last we broke apart and I think we both sighed. Neither of us said a word. Amelia simply took my hand and led me through the mill's ground floor towards the spiral staircase...\n\n* * * * *\n\nAmelia led me to the huge four-poster and sat me down gently on the bed's edge. \"There's something you'd better know about me, Jessie. Have you got any tattoos,?\"\n\n\"No.\"\n\n\"What do you think of tattoos?\" I wondered where Amelia was leading with this.\n\nNow I've always had something of a take-it-or-leave it attitude to tattoos. Some I've seen have been brilliant, others just tawdry or even silly. Considered a tattooed line of script for myself once or twice, mostly something along the lines of Howie and Timothy are floppy-dicked bastards! Never did get round to it though, it definitely fell within the silly range and they weren't worth the pain or the cost. But wanting to hear Amelia's point... \"Not thought much about it,\" I told her.\n",
        "\"Before anything else, Jessie, I'd better tell you that I'm heavily tattooed.\"\n\nI shrugged. \"So? A lot of people are tattooed. Anyway, I hadn't noticed.\"\n\n\"They're well covered\u2014I don't have any that are visible when I'm dressed. Some of the older folk I give private computer lessons to may not approve\u2014when a lot of them were young usually only some military personnel and criminals were tattooed. Thing is, though, the last girl I invited here, a brief mistake after I broke up with Anneka, didn't like my tattoos, in fact she was utterly scathing about them. Barbaric, disgusting, spoiled my looks, why did I want to abuse my body like this... on and on and on... We didn't last long, didn't even get to make love, I asked her to leave straight away.\"\n\n\"Tell you what, Amelia, why not let me make up my own mind?\"\n\n\"Okay, Jessie, give me a minute.\" She disappeared into her bathroom to emerge a few moments later naked.\n\nAmelia had a beautiful body, trim with small breasts and a tight little backside, but it was her tattoos that caught and held the attention. I'd never seen any quite like them before. Amelia's tattoos were fascinating. They were exotic, they were inventive, they were just... well, they were just so Amelia...\n\nHer upper arms, shoulder to elbow, had detailed, near-perfect, copies of Mucha's sensual art while her legs, from thigh to ankle, were adorned with a series of lush, multi-coloured blossoms. Starting from her belly-button, a golden-scaled Chinese dragon crept its sinuous way upwards, sliding between her neat little breasts and curving off to disappear over her left shoulder, only for its head to reappear from behind her right, reaching down towards her breast tattooed on which was a lotus flower with her nipple at the centre. Another lotus flower embellished her left breast. Below all that was the pi\u00e8ce-de-r\u00e9sistance: between her navel and clean-shaven mound and honeypot was a huge dragonfly in iridescent colours, head at her belly-button, tail-tip touching the top of her cleft, while the lacy transparent wings extended on either side to her flanks. She pirouetted so that I could see her back. There was the curl of the Chinese dragon's body around the nape of her neck while from buttocks to between her shoulder-blades she was adorned with a full-length naked Balinese dancing girl.\n\n\"Amelia! they're so... just simply wonderful... amazing... they're the loveliest tattoos I've ever seen... who did them?\"\n\nRelief flashed across Amelia's face. \"Woman called Tilly, has her own parlour in Newcombe. They're unique, though, designed most of them myself except for the dragonfly. That's Tilly's own work. And there's a beauty parlour couple of doors along where I get my wax jobs done. You like the tattoos, then?\"\n\n\"Like them? I love them!\"\n\nAmelia looked at my face for several seconds and obviously decided I was being truthful. \"I worried that you might find them too much. Right, Jessie, let's get you out of those clothes now. You're overdressed.\"\n\nAmelia came close, pulled my sweater over my head, tossed it towards a nearby chair and began to undo the buttons on my plaid shirt. Her breasts and dark-brown little nipples were almost in my face and I reached out an exploring index-finger to touch one. It felt strange to be doing something like this but lovely strange. Amelia gave me a little smile of encouragement so I leaned forward to take the other nipple between my lips. My tongue crept forward and I took a tentative lick. Her nipples seemed to become more erect and my licking turned into avid sucking.\n\nAmelia pulled away slightly, cupping my face in her hands and I wondered if I was doing something wrong. Obviously not, though, for she lowered her head so that her lips met mine and gently found my tongue and sucked on it. I heard myself moaning a little before she once more held a breast to my mouth so that I could resume kissing all around it before again paying attention to the nipple. After several minutes I moved across to her other nipple while caressing the first between finger and thumb.\n\nAgain Amelia pulled back. \"Carry on like this, Jessie, and I'll never get you undressed.\" She gave me one quick kiss before unfastening the final two buttons of my shirt which she threw in the general direction of my sweater. Off came my bra which followed the other two garments. My breasts were a little larger than Amelia's with dark red nipples and areolas. \"Oh, Jessie, what lovely boobs you have,\" Amelia exclaimed with delight. None of my male lovers had complimented my breasts with such sincerity. Come to think of it, I couldn't really recall any of them paying me much in the way of compliments at all. Something else was happening. Down below I could feel myself getting really, really wet, not a sensation I was used to when other people were involved.\n\nAmelia knelt at my feet to tug my boots off before unzipping my jeans, pulling them down and lobbing them across the room. As far as I could see, none of my clothes had hit target but were scattered on the floor. In the position I was in I should worry? Finally, my panties went the way of all other garments. I was a bit hairy down below and seeing that Amelia was waxed smooth I worried that she might find this off-putting. I shouldn't have been concerned. She leaned forward, kissed my pussy and audibly inhaled, evidently delighted. \"God, but you smell good, Jessie, and\u2014\" she ran her finger along my slit, \"\u2014you're lovely and wet.\" She eased my lips apart and using just the tip of her tongue, licked slowly from vagina to clit. I gasped aloud with pleasure.\n\nShe moved up my body then, planting a series of soft, moist kisses along my torso until she reached the hollow below my throat where the kisses changed to a firm lick, tongue moving over my chin until she reached my lips. Straddling me, Amelia said: \"That first day we met, when we had lunch in the coffee shop\u2014I told you then that I could easily fall in love with you. Well, that was only a half-truth, I already had fallen. There really was something about you that convinced me you were gay, Jessie, even if you hadn't realised. Now you believe you're in love with me. Don't just let me be a novelty try-out, Jessie, that would break my heart. So now's the time to stop if you want, before this goes too far...\"\n\nI could feel my eyes filling with tears as she spoke. \"I promise that you're not an experiment, Amelia, I couldn't... wouldn't treat you like that.\" I pulled her down and kissed her firmly. \"For tonight, please just love me.\"\n\nAmelia lay down so that her body was pressed firmly against min and our lips met again, our tongues lovingly exploring each other. \"You're beautiful, Amelia,\" I whispered, \"and I do love you.\"\n\n\"Keep right on loving me, Jessie, because I love you too. And guess what... I think you're beautiful as well.\"\n\nTears started to well again. \"None of my blokes ever said that to me.\"\n\nAmelia laughed. \"Well, if you did waste all those years on a bunch of dipshits...\"\n\n\"Oh, be quiet Amelia Vanity Fair Brogan, and kiss me again.\" She obliged and then started to work her way back down my body with those soft kisses that seemed to say so much. She stopped at my breasts, kissing her way slowly around them, pinching and tugging at my nipples before taking one in her mouth, sucking so hard that it felt as if my whole breast was afire with pleasure. After several minutes she turned her attention to the other nipple, lapping and nibbling and suckling. By now I was wetter than I'd ever been and emitted little whimpering sounds as I bucked my hips, wordlessly imploring Amelia to pay attention to my honeypot.\n\nShe must have sensed my need for she reached down with a hand and slipped a pair of fingers into my vagina very slowly, stroking the inner walls with a tender touch. A soft thumb caressed my clit at about the moment her exploring fingers found my spongy g-spot. I gasped aloud as I felt myself clench down on her. Amelia resumed her slow movement down my body until she knelt between my legs, kissing all around my outer lips before she eased them apart to explore my pussy with her eyes. \"I don't know if you realise, sweetie, but you're awash down here, it's pouring out of you. I'd better clean you up.\"\n\nAmelia brought her mouth to my pussy to lap like a kitten. She did things with her pointed tongue that I wouldn't have believed possible including pushing it some way into my vagina before withdrawing it and thoroughly licking my inner lips. I could feel myself nearing the brink and when Amelia took my clit between her lips and tongue to suck, I exploded.\n\nOh wow! Oh holy wow! This was it! This was the spectacular orgasm of my dreams. I felt myself soaring to heaven while orchestras played crescendo, tsunamis thundered, bells peeled out, grand-opera choruses boomed, constellations spun madly and far-flung galaxies whirled.\n\nAnd then I did the weirdest thing. As I was returning to earth I started to laugh like some kind of loon, barely able to stop myself. Amelia, now lying beside me on her tummy with an arm around my waist, looked bemused. \"That's hardly the reaction I expected,\" she said.\n\n\"I'm sorry, sweetheart,\" I said between giggles, \"but you've just given me the orgasm I've always dreamed of and never got. Thought I never would.\" I pulled her towards me, smothering her face with kisses in between explaining about the heavenly flight complete with orchestras, tsunamis, bells, grand-opera, constellations and galaxies. \"And you did all that with one flick of your tongue, the best orgasm in the world. I think that mild-mannered IT expert Amelia Brogan must be the alter ego of Supergirl!\"\n\nAmelia smiled and kissed me back. \"No, just an ordinary gay Goth girl trying to please the woman I love.\"\n\n\"Can I please the woman I love now? I might not be very good at it but I'll give it my best shot.\"\n\n\"You'll be just fine,\" Amelia told me, \"just do what you think you'd like.\"\n\nAs Amelia was already face-down, I bent to kiss and lick the hollows behind her knees and she gave a little shiver. \"Clever girl,\" she purred, \"I've always liked that.\" So I gave her a few more minutes of that before kissing and licking my way along her inner thighs. Amelia raised her hips a little to give me a good view of her naked pussy which glistened with creamy rich juice. I hesitated, not knowing what to expect, but the urge to lick her was overwhelming. I parted her labia, briefly admired the delicate inner lips and rosy colouring, then used my tongue.\n\nHow the hell do you describe a taste when you've had nothing to compare it with? An unusual sweetness with a soup\u00e7on of tartness and tangy under taste\u2014whatever it was and as strange as it was, I decided that I loved it.\n\nMoving back, I slid fingers into Amelia and lovingly played with her as I began to lavish a series of kisses on her dancing girl tattoo, all the way up to her neck. As I did so, I reached beneath her with my free hand and sought out her clit, caressing tenderly. Amelia was shivering a little now and moaning softly. The hot, wet walls of her pussy clenched spasmodically down on my fingers and then she came, hard and fast.\n\nPanting a little, Amelia turned over and hugged me tight. \"I told you you'd be okay,\" she said and kissed me full on the mouth.\n\nA little later we slept, arms around each other.\n\nYeah, that sure seems like heaven to me\n\nI was awakened by Amelia sliding out of the bed, obviously trying not to disturb me. The bedroom was flooded with daylight, casting a rich glow over the crimson carpet and bedspread, and I guessed it was getting late.\n\nAmelia slipped on a robe then bent to give me a good-morning kiss. \"I didn't mean to disturb you but now you're awake, it's after ten and you've got to drive to your parents' place. Grab a shower and come on down to the cottage. I'll have breakfast ready for you.\"\n\nWhile showering I did some serious thinking. I was in love with a woman and I'd made love with her and slept with her. Did that make me a lesbian? Or was it Amelia alone that affected me this way? My thoughts drifted to The Blue Mood Wine Bar and Marnie, something that I had put firmly from my mind for years until very recently when events triggered memories. Was I in some kind of closet and had I put myself in there without realising? Frankly, at this moment, I didn't have a clue as to how to label myself.\n\nI stepped out of the shower and as I dried my body I noticed that on top of the clothing in Amelia's laundry basket was a lacy thong, probably chucked there the previous night when she stripped to show me her tattoos. On impulse I picked up the thong and held it to my nose. Its smell was delightful, an exotic mixture of woman musk and Amelia's favoured perfume, L'eau Bleue. God! I was standing there sniffing another woman's underwear. Did this make me some kind of pervert? I was baffled, couldn't answer my own question.\n\nAmelia had greeted me with another kiss when I came into the cottage but as we ate breakfast she seemed to become serious. \"Did you really enjoy last night, Jessie?\"\n\n\"More than I can tell you,\" I said.\n\n\"So did I. But I've been thinking. There's something we have to talk about.\" Her tone was such that I suddenly had a sick feeling and I thrust my food to one side. Amelia reached across to take my hand. \"Jessie, I've known what I am since before I was a teenager. I'm a lesbian through and through, and I honestly believe that deep down you are too. I've got pretty good gaydar and I'm rarely mistaken. However, I get the impression that you haven't quite accepted it in yourself. Am I right?\"\n\nI lowered my eyes. \"I don't know... I don't honestly know...\" A sudden lump in my throat seemed to get bigger and it was hard to speak. \"...all I know for sure is that I'm in love with you.\"\n\nAmelia nodded slowly. \"Thank you for that, Jessie. But I'd be much happier if you could decide one way or another what your sexuality is. I'd rather lose you now and be unhappy for a while than lose you at a much later date and break my heart totally. I've had that once, with Anneka, I don't want to go there again. Jessie, I'd like you to go away from here today and have a long, hard think. If you can recognise and accept your gayness, then you'll make me happy beyond words. If you decide that the straight world is for you, then I'll accept that.\"\n\nThe dam burst then and I was hugged against Amelia as my tears flowed. She soothed me gradually until I was able to speak. \"If that's what you want, Amelia, I guess it makes some kind of sense...\"\n\nOn the way to my parents' home I had to pull into a lay-by and have another little weep. I acknowledged, though, that Amelia was being pragmatic\u2014better to be sure now than wreck things in some unforeseen future...\n\n* * * * *\n\nI was in the habit of going to the same little place each day for my lunch because their coffee beat places like Starbucks hands down and they served delicious sandwiches and pastries\u2014hurrah for private enterprise. The only thing I didn't care for about the coffee shop was a young waiter who worked there part-time, about three days a week. I think his name was Kenny. Perhaps nineteen or twenty, he was tall and good-looking and judging by his self-satisfied smirk he obviously thought he was God's gift. I'd heard him making risqu\u00e9 remarks to some of the younger female customers a few times, usually picking on the more wimpy or timid-looking types, seemingly getting a big kick out of embarrassing them. Classic bully. He never did it when the manager was around nor did he try it with the tougher-looking girls or those women apparently over twenty-one\u2014if he'd tried it on with me I'd have had his balls for earrings.\n\nWhenever possible I took a window seat and people-watched. Then a couple of days following my visit to Amelia's windmill I slowly became aware that while I was watching the passers-by in the street outside I never looked at any of the passing men, only women. And the more I thought about it, the more I realised it had always been that way. How was it that I'd never noticed before? Was I hiding some deep-down truth from myself?\n\nSuddenly my thinking went up a gear or two. This wasn't just about gender and sex; more importantly it was about emotions and emotional connection. I had never felt such connection with any of the men I'd been involved with\u2014I was trying to conform, to be 'normal', whatever that is, while they to a man had seemingly been concerned only with their own gratification. With Amelia... yes, with Amelia the emotional connection was there. In the long term it wouldn't have mattered a damn to me if we hadn't made love that night, just being with her would have been sufficiently rewarding. And I'd stood there in her bathroom, breathing in the natural scent on her panties\u2014how straight a woman did that make me? My call now, no-one else could make this decision for me...\n\nWith realisation came the echoes of others' words, both long past and recent:\n\n...it's okay, Jessie, I understand. It took me quite a few years to recognise and accept my sexuality...\n\n...darling, have you ever considered that perhaps you're not made for men...?\n\n...are you out yet, Jessie? You know... out... to your family. About being gay...\n\n...when we shook hands I'm sure I felt something between us...\n\n...you need to be careful, Jessica Thorne. I've only known you a couple of hours but I think I could easily fall in love with you...\n\nAnother minor memory crowded in. That time I'd written a flippant answer on the lavatory wall to the graffito about the mother making the daughter a lesbian. \"If I supply the material, will she make me one too?\" Was that my subconscious trying to tell me something?\n\nComing out... is it possible to come out to yourself? I think it might be. Finally I was ready to accept it... I was gay... really, really gay...\n\nThat was one hell of a revelation. What was it that old Greek guy did? Ran round the town naked shouting \"Eureka!\" I sure as hell wouldn't get away with that these days and it was too bloody cold anyway. But mentally I was \"Eureka-ing!\" with any number of old Greeks, naked or otherwise.\n\n\"Miss... miss!\" An anxious-sounding voice snapped me out of my trance. A pretty young waitress stood by my table, a concerned look on her face. \"Are you all right, Miss? You haven't moved for about ten minutes, you've just been staring out of the window. I thought maybe you were ill...\"\n\n\"No, I'm fine...\" Her name tag read Nessie. \"...I'm fine thanks, Nessie.\" I gave her a confidential smile. \"Sorry if I worried you, I've just been working round a personal problem and think I've found the answer.\"\n\n\"Oh, that's good,\" she said, relieved. Then she bent towards me and confided: \"I wish I could get rid of my personal problem.\"\n\n\"What's that? Perhaps I can help.\"\n\nShe jerked her head towards Kenny who was serving coffee at the counter. \"He's always pressing up against me,\" Nessie whispered, \"pushing at me with his... you know... I complained to the boss once but Kenny insisted it was an accident while we were so busy. I need this job so I don't want to make too much fuss. Jobs for young people in this area are a bit scarce right now.\"\n\nI felt for her. Another nervous youngster having to let a sleazeball get away with it. \"If your boss won't help, you could complain to the police or go to a counsellor although it would still be your word against his,\" I told her. She shook her head, obviously scared of either idea, so I added: \"Tell you what, the next time he does it, why not accidentally spill a cup of hot coffee on his... you know.... Works a treat. Do it over his apron and clothing so you don't cause too much damage. Just don't be obvious about it.\" I handed her a business card. \"The company I work for is looking for several junior clerks and the pay's probably better than here. Give them a call and speak to Jayne North, say I recommended you.\"",
        "I slipped Nessie a couple of quid tip then turned to my neglected meal. The sandwich was still good but the coffee had cooled during my reverie so I hurried it up. Just as I was leaving the coffee shop, I heard an anguished cry. Along with all the other customers I turned to see what was happening. Kenny was bent double, clutching at himself while a triumphant-looking Nessie, coffee pot in hand, was saying insincerely, \"I'm so sorry, it was an accident because we're so busy.\"\n\nGood for you, girl! I do enjoy spreading a little light and happiness.\n\nBack on the street I pulled out my mobile and dialled. \"You were right and I was wrong,\" I said the moment Amelia answered. \"I know now that I am gay. I am gay and I'm in love with you.\"\n\n\"You're sure about this, Jessie?\"\n\n\"Oh yes, I'm so sure now. But it's all so new and strange to me, I've got to sort my feelings out. Will you give me a couple of weeks please?\"\n\n\"I love you too, Jessie,\" she told me, \"I can live with a couple of weeks or so. You know where I am. Make it as soon as you can.\"\n\n* * * * *\n\nThere were a couple of people at the tea-station when I went to get my mid-morning fix, Milly Granger and some tall, scrawny young bloke from the accountancy office, Phil I thought his name was. They were sipping their drinks and Milly was chomping on a Mars bar, not the healthiest snack for someone of her build. We exchanged greetings and while I was getting my tea Phil carried on with what he'd been telling Milly.\n\n\"...so, as I was saying, my printer's decided to give up the ghost, just as I have to get the mid-month profit-and-loss returns ready. I've spoken to procurement and they're getting our expert in to fix it or install a new printer. She should be here about eleven.\"\n\nMilly grunted. \"God knows why they have to employ that lesbian bitch, she's a disgusting pervert ...\"\n\nFury erupted\u2014I went apeshit. \"You fucking what?\"\n\nBoth looked shocked as I screamed at Milly. She went white and backed against the wall as I crowded into her personal space and thrust my face close to hers. \"If ever I hear you talking about the woman I love like that again, I'll kick your fucking arse! Now fuck off!\"\n\nOops! it was out\u2014be all over the company by lunchtime. Oh, so what?\n\nMilly fucked off without argument. Must have been quite a shock for her, being so used to controlling unpleasant situations she'd set up. She scurried away, chubby little legs going like the clappers, cup of tea and Mars bar forgotten. She didn't head for her office, though, but instead dashed in the direction of HR. I guessed that an official complaint was about to be laid against me. Well, if I wanted I could make trouble for her\u2014I wasn't the homophobe in the altercation.\n\nI rounded on the innocent Phil. \"And have you got any smartarse remarks to make?\" I snarled.\n\nI must have looked quite fierce for he held his hands up in conciliation. \"Hey, easy, tiger, I'm on your side. Milly had no call to speak like that. Besides, my favourite sister's gay so I'm not going to knock it...\"\n\nThen as my temper cooled a bit it clicked what Phil had told Milly. Amelia was on her way and would be here about eleven. Although longing to see her, I couldn't just yet\u2014I still had to get myself through a few things. I needed an excuse to get out of the office. That was it\u2014I had to see a local newspaper editor at some stage to discuss a feature ad for the company and a quick phone call established that this morning was fine. I would be on my way before Amelia arrived.\n\n* * * * *\n\nIt was past lunchtime when I left the newspaper office and as I was some way from my favourite coffee shop I went into a nearby pub for a sandwich and coffee. While I was eating my mobile rang and when I answered it was Henry Lassiter from my previous company.\n\nHe didn't waste much time with greetings and small talk. How was I then straight to the point. \"You were right, Jessie,\" he said, \"about Archie McNaughton, that is. The stupid little bastard tried it on with an off-duty policewoman in a wine-bar, attempted to slip her that date-rape drug. She spotted him at it and arrested him and he made matters worse by trying to bribe her to let him go. Now plenty of other women are coming forward to make complaints about him. Reckon he'll soon be looking at some serious jail-time. It's also come out that McNaughton senior authorised the generous redundancies for employees who had any reason to complain about his son and the Board have pushed him into resigning. I took your advice and made sure I was fireproof.\n\n\"So, Jessie, the main reason I'm calling is to offer you your job in PR back with a substantial salary increase. What do you say?\"\n\nIt didn't require any thought. \"Thanks, Henry, but no thanks. I like it here and I've started a relationship with someone. I think we'll make a go of it.\" Then I had a brilliant idea and my mouth went into motion before I could think through the implications of what I was saying. \"Henry, suppose I go self-employed freelance, would you commission me for special jobs? Save you hiring another person with all the employment red tape that involves. I'll have to give Bill Laker a month's notice but after that...\"\n\n\"Hmm, that's worth thinking about,\" Henry said, \"We'd need to meet to discuss contracts, fees and so on but... yes, I like the idea. E-mail me with your proposals when you're ready. And Jessie, I wish you and the lucky man well.\"\n\nI wasn't hiding from anyone any more, especially myself. \"It's a lucky girl...\"\n\n\"Oh...\" I could almost see Henry Lassiter shrugging. \"Whatever. Guess you're both lucky girls then.\"\n\nFreelance Jessie Thorne. Yes, I liked the idea too...\n\n* * * * *\n\nThere was a message on my answering-machine the following morning: go and see Bill Laker as soon as I got in. I wonder why (ha-ha)?\n\nBill certainly wasn't his usual cheerful self, looking as if an unripe lemon had crapped in his mouth (if lemons could crap, that is). Before he could say a word, though, I pre-empted him. \"Milly's made a complaint about me, right?\"\n\n\"I'm afraid so. It's alleged that you used foul and abusive language and threatened her with physical violence.\"\n\n\"I blew my top and told her I'd kick her arse\u2014no... in the interests of accuracy I said I'd kick her fucking arse. Come on, Bill, how often have you threatened to kick someone's backside when they've annoyed you? It's only an expression, not meant literally. Anyway, I'll bet that Milly didn't tell you why I lost my rag.\"\n\nBill checked his note-pad. \"According to her statement, your attack on her was entirely unprovoked. You just flew into a rage for no discernible reason and threatened her with violence. She's questioning your mental stability.\"\n\nI nodded. Typical of the woman, Milly was never at fault. \"There's something you'd better know, Bill, that's if you've not heard already. I'm gay and I'm in a relationship with Amelia Brogan. Within my hearing yesterday, Milly questioned why you have to use Amelia's services at all, referring to her as a 'lesbian bitch' and a 'disgusting pervert' I think were her exact words. Those were uncalled-for homophobic remarks about the woman I love. That's why I lost my temper and threatened to kick Milly's backside. And I've got a witness as to what happened, that skinny lad in Accounts, not sure of his name, Phil I think...\"\n\n\"Phil Maddox,\" Bill confirmed and continued: \"So he saw what happened, eh? Milly failed to mention that\u2014makes quite a difference. I'll have a word with young Phil, see if he'll confirm your story. If he supports you, Jessie, what do you want to do? Put in a formal complaint about Milly's homophobia?\"\n\n\"No, she's not worth the effort. Anyway, I'll be leaving the company soon, Bill. You'll have my resignation letter tomorrow, one month's notice as required.\"\n\n\"You're not leaving over this, surely?\"\n\n\"No, I've got a chance to go freelance and I've decided to grab it. I can continue to do work for you if you wish, but it'll be on mutually agreed terms by negotiation. If contracted I'd guarantee not to work for any of your rival companies. As for Milly...\"\n\n\"As for Milly...?\" Bill prompted.\n\n\"Well, you could have her in and put the fear of God into her. Point out that there was a witness to yesterday's incident and that I'm considering bringing an action against her for homophobic hate-crime. Let her sweat for two or three weeks and then tell her I've decided to let her off the hook this once. The shock might keep her off other people's backs for while.\"\n\nBill smiled, a great big happy smile. \"Yes, I think I'll enjoy that. It'd be nice to have a subdued and uncomplaining Milly around for a while.\"\n\nBack in my office, I took out the business cards I'd picked up in a couple of Newcombe Parva shops. I dialled the number on the first card. \"Hello, my name's Jessie Thorne... Amelia Brogan recommended you... I'd like to make an appointment... the special treatment... yes, as soon as possible please... oh, that's great, this evening will be very convenient, thanks...\"\n\n* * * * *\n\nTen days later I parked my car beside the Range Rover, killing the motor and dousing the lights so that Amelia wouldn't be aware of my approach. I'd spoken to her fairly regularly and the last time she had sounded sad and resigned, as if believing that she'd seen the last of me. It was a clear night with a full moon and I was able to make my way along the mill's path with little difficulty although shivering a little in my light coat and lighter dress. Reaching the cottage entrance, I pressed the buzzer on the intercom.\n\n\"Who the hell's that at this time of night?\" There was asperity in her voice, understandable I suppose given how late it was getting.\n\nI put a handkerchief lightly over my lips and lowered my voice so that it would sound like a throaty mumble to Amelia. \"Special package for Ms Brogan.\"\n\n\"Special package? It's late for that. Who's sending me special packages?\"\n\n\"Dunno, Miss. Says urgent delivery. Goods are delicate so don't leave out overnight. I'll just leave it on the doorstep for you.\"\n\nAmelia seemed to hesitate. \"Okay, but this had better be good. And I warn you, I've got a shotgun.\"\n\n\"No need for that, Miss, special delivery's on the step. I'm just going.\" I made stomping noises on the doorstep.\n\nA few moments more and the security light over the door came on. I heard the door-chain being applied then bolts rattling back. The door opened slowly. I turned to face the entrance to see both barrels of the useless shotgun and Amelia peering cautiously through the gap. \"Jessie!\" For a moment she didn't seem to know whether to laugh or cry then she freed the chain, flung the door fully open and threw herself into my arms. \"I was starting to think you wouldn't be back!\"\n\n\"I promised you I would,\" I said, \"I just had to sort out my mind and do one or two other things.\"\n\n\"And are you sorted now?\" she asked.\n\n\"Yes, now and for always.\" I sniffled a little as a solitary happy tear trickled down my cheek. \"I'm absolutely certain\u2014you're all that I want, Amelia. I'm gay and I love you and think we can make a good life together.\"\n\nShe reached out to wipe the tear then kissed me hard. \"Well, we can make a bloody good stab at it. I love you too.\"\n\n\"Would you have space for me in your office?\" I asked, \"There's been a sudden change in my work circumstances.\" I explained what had happened at my old company, ending: \"...and if things do go pear-shaped, well, I've made some useful contacts over the years and I think I can build up a good business in time.\"\n\n\"I know why you want to share my office,\" Amelia smiled, \"You want your own personal IT expert on hand.\" She pulled me close and pressed her lips to mine. \"Okay, you've got her. Contract sealed with a kiss.\"\n\n\"Oh, and on your behalf I've scared the shit out of Milly Granger.\" I told Amelia of the tea-station confrontation and the Milly-subduing plot Bill Laker and I had hatched. She grinned, then laughed and we high-fived.\n\nI took my coat off and hung it up. \"Can we go up to the bedroom now?\" I said, \"Regarding the couple of other things I needed to do, there's something I have to show you, a surprise.\"\n\nAmelia led the way up the several flights of narrow stairs and I kept my eyes on her swaying backside, accentuated by the silk of her robe. So closely did the material cling that I reckoned she was wearing nothing but the robe and I'm sure she put an extra wriggle into her bum for me. Whatever, it was a lovely view.\n\nWhen we reached the top floor, I said: \"Just stand there a moment, no peeking.\" Keeping my back to her, I unfastened the buttons down the front of my dress. Underneath I was naked. \"I told you I had a couple of other things to do,\" I said, \"so here they are.\" I dropped my dress and turned to show Amelia my recently waxed mons and pussy with the brand new tattoo, the huge dragonfly's tail resting on the top of my cleft. It matched Amelia's exactly.\n\n\"Oh wow,\" she breathed, \"You did that for me?\"\n\n\"For you and only for you,\" I assured her, \"Now there's something else I've got to do. You once asked me if I was out to my family. Guess now's the time so here goes.\" I reached into my bag for my mobile phone. \"You can listen in,\" I told Amelia, setting it on loudspeaker.\n\n\"Wait, Jessie\u2014are you sure it'll be okay? You won't be making things bad for yourself?\"\n\nI reckoned from what Amelia had told me of her chilly mother, she'd be astonished by my parents' warmth. \"You don't know my folks, Amelia.\" I pressed a quick-dial number.\n\nMy mother answered and I knew she had caller ID. \"Moonbeam, darling!\" she cried with delight. I saw Amelia smirk.\n\n\"Oh, Mum...\"\n\n\"Sorry, sweetie. Jessica darling! What is it? It's not your usual day for calling.\"\n\n\"There's something I need to tell you, Mum,\" I said, \"You remember all the disasters I had with men and the other little related problem. Well, everything's okay now. I'm gay, Mum. I think perhaps I always was lesbian but subconsciously suppressed it, which probably goes a long way to explaining my misfortunes with men. Anyway, I'm sure of what I am now and I'm in love with a wonderful girl called Amelia. And the other little problem, the O word, isn't a problem any more.\"\n\n\"That's nice, darling,\" Mum replied.\n\n\"Mum, you did hear me right?\" I didn't think for one moment that Mum would be upset by my announcement but I wanted to be sure.\n\n\"Yes, darling, I heard you right. I'm quite a few years from deafness and senility yet. You've realised you're a lesbian and you're in love with a wonderful girl called Amelia. I think that's marvellous and I'm so happy for you. I did suggest several years ago that perhaps you weren't made for men. Looks like I was right. Gordy babe\u2014\" I heard her shout to my father, \"\u2014Moonbeam's a lesbian and she's in love with a wonderful girl called Amelia!\"\n\n\"That's great!\" Dad called back, \"Got to be better than some of the shithouses she's been involved with in the past.\"\n\n\"Is the wonderful Amelia there with you?\" Mum asked, \"I'd like a word.\"\n\n\"She's right here and you're on loudspeaker.\"\n\n\"Hello Amelia dear,\" Mum said, \"Welcome to the family.\"\n\n\"Thanks Mrs Thorne,\" Amelia said, \"I want you to know that I love Jessie with all my heart. We've both made bad mistakes with wrong 'uns in the past but we reckon we've got it right this time. Jessie and I are soul-mates\u2014she's the love of my life and she feels the same way about me.\"\n\n\"That's perfect,\" Mum replied, \"Listen, I want the two of you to come to lunch next Sunday so we can meet you properly. And Amelia, no stuffy formality, no Mr and Mrs Thorne. We're Joan and Gordy...\"\n\nEventually, after a lot of happy back-and-forth chat we managed to say goodnight to my mother, reluctant though she was to end the conversation.\n\nThe moment the call finished, Amelia allowed her robe to slide to the carpet and I was right, she was naked underneath. She opened her arms to me. \"Come here, Jessica Moonbeam Hummingbird Thorne, come here and give me a great big kiss. And then get your beautiful backside into that bed\u2014I've got this sudden irrepressible urge to smother your dragonfly tattoo with dozens of kisses.\"\n\nAnd that's exactly what she did.\n\nNow that sure seemed like heaven to me.\n\nThe End"
    ],
    "authorname": "Maonaigh",
    "tags": [
        "unfaithful fiance",
        "useless men",
        "job change",
        "student drinking",
        "lesbian encounter",
        "exotic stranger",
        "friendship",
        "lesbian love",
        "lesbian sex",
        "homophobic colleague"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/three-steps-to-heaven-1"
}