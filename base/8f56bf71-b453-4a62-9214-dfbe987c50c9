{
    "title": "Milly Scott Pt. 05: An Ending and A Beginning",
    "pages": [
        "This is a continuation of 'The New Assistant,' and 'The Milly Scott stories.' It would really help to have read those. \n\nIn many of my stories there is a tragedy and sadly life is like that. This one is no different and it was the hardest thing that I've written. It tells the story of three main characters and how they move forward. There is a happier ending, but get the tissues ready! \n\nThere is some incest between sisters in this story, but it is not the main theme. All sexual activity is consensual. All the people involved are fictitious and over 18. \n\nThank you for your comments on my previous work, I appreciate and welcome them. \n\nThe car \n\nThere was a throaty burbling sound coming from outside the house and I dashed to open the door. I knew what to expect, but it still made me gasp when I saw it. Fiona had partially climbed out of the driver's seat leaving one leg inside the car as she smiled at me. Bloody hell, not one, but two beautiful things. My wife, early thirties, long blonde hair falling about her shoulders, a luscious figure clothed in a close-fitting blouse and a short flared skirt, flat shoes that she wore for driving instead of her usual heels, and a cheeky grin. She waved me over and I slammed the house door shut behind me. It was low with a huge grill that looked predatory, like a shark's wide-open mouth. The paintwork was a similar colour to that of a shark, it had sleek lines and a trident badge - a Maserati, something that she'd coveted for a couple of years. \n\nI slid into the beige leather upholstery of the passenger seat and leaned over to kiss her cheek. She backed out and set off along the road. I felt the car rumble underneath me and heard the throaty sound of the engine as she picked up speed. At the start of the dual carriageway, I saw her glance into the rear-view mirror and felt myself being pushed back into the seat. There was a wonderful roar as she hit the accelerator. My breathing stopped, 90 mph came up quickly before she let it drop back to the legal limit. All the time there was this huge grin spread across her face. \"You love it don't you?\" \n\nShe nodded her head and smiled at me. \"Not as much as I love you. But thank you, you helped make this possible yet again. Thank you.\" \n\nWe pulled into the driveway where Jane had just parked behind my SUV. She was picking up her bags from the back seat and looked up. \"Well, well, nice wheels.\" \n\nI was still getting out when I saw Fiona toss the keys to her sister. She looked at Fiona and me with a sense of disbelief. \"Take Milly for a spin.\" She took Jane's bags from her and headed for the house. Jane and I stared at each other speechless as Fiona turned back to look at us laughing. \n\nJane climbed in beside me as I sat back down. \"She must have some button to disable it. No way is she letting me take this out.\" She pressed the button and it came to life. Jane turned to look at me. \"Buckle up!\" Still not believing it, we headed out to drive the same circuit and Jane did the very same thing on the dual carriageway. As she slowed again she turned to me and smiled, \"I'm definitely doing something wrong, she got you and one of these.\" \n\nI smiled to myself. Fiona loved her sister a great deal, she must, because she'd just let Jane drive her brand new sports car. It had cost enough to solve some small countries debt problems. It was beautiful and I was excited about it. Maybe this weekend we could take it for a long run to test it, find a nice hotel for the night and have some energetic sex and lots of kissing, especially the kissing. \n\n\"Bloody hell, Fi. That's amazing, I like it and it shows that you like me, lending me the car and Milly!\" She laughed and so did Fiona. \n\nThat night I lay in bed and thought that back to what happened just over a year ago and what made the new car possible. \n\nNew job \n\nI'd reached over the table to lift Fiona's plate and saw that she was smiling at me. \"Thanks for dinner Milly, that was lovely and I'm stuffed.\" I put the plates into the dishwasher and Fiona slapped me on the bum as she refilled our wine glasses. \"Karen wants to come over for dinner on Friday.\" \n\n\"She's invited herself? Did she say why?\" It didn't sound like Karen to invite herself. \n\n\"She wants to talk about something to do with work and doesn't want to be overheard. She also said that she wanted to hear your views.\" \n\nThat made no sense, but she was good company and would no doubt bring a nice bottle of wine. \n\nI'd cooked a rack of lamb that was delicious. We'd laughed as we talked over dinner. None of us could manage a dessert right away so I made coffee and realised that Karen was thinking over whatever it was she had to say. \n\n\"Milly, first, thank you for dinner, it was great as usual and I apologise for inviting myself, but I needed to speak to Fiona confidentially.\" I nodded and poured more coffee. \n\nKaren looked at Fiona. \"I'm stepping down as MD.\" \n\nFiona's mouth fell open in disbelief. \"But what? Are you selling the company?\" \n\n\"No, I couldn't do that. My Dad founded that company and it would seem wrong to sell it. No, I'll still be the main shareholder and be the Chair of the Board, but I need to hand over the management to someone with more energy and new ideas. This is the right time.\" \n\n\"How long have you been planning this?\" \n\nKaren laughed and Fiona looked confused. \"I first had the idea years ago. I've been planning it for the last five and finally made up my mind about the timing three months ago.\" \n\n\"Wow, you never said anything. So what do you need from me? You want my help to identify someone?\" \n\nShe didn't laugh, but it was close and then she smiled at me. \"Fiona, you're a genius in so many ways. So smart you sometimes scare me and most of our staff, but at times you can be as thick as a plank. Milly's way ahead of you.\" Fiona turned and looked at me puzzled. I was smiling; I had a good idea where this was going. \n\nKaren brought her hand up from under the table and slid it towards Fiona before lifting it and leaving behind a business card. She'd done this same thing once before. Fiona reached out to pick it up and examine it. Her mouth fell open again and she stared wide-eyed at Karen and then at me. \n\n\"Do you accept?\" \n\nFiona handed me the card. I knew what I was going to see; 'Fiona Scott, Managing Director.' \n\n\"But...\" \n\n\"What do you think Milly?\" asked Karen. \n\n\"It's got nothing to do with me.\" I protested. \n\n\"Actually it does. It will affect you as well.\" \n\n\"Many years ago I wanted Fiona to get the best education that she could so that she could do what she wanted to do. I got the chance to help and support her. Here we are today and that's not changed. I'm very proud of her and I'll be right there for her as I have been until now.\" \n\n\"Thanks, Milly. Of course, I'll take it; I'm flattered that you think I have the skills and ability. It'll be a challenge.\" \n\n\"You have to understand that when you were thirteen or fourteen you showed an understanding of our business and our work that shocked most people. That grew each time you came to work with us. Your first eighteen months were about making sure that you had a grasp of things. Since then you've been working towards this even if you hadn't realised it. The next few months will allow a proper handover and then it will be all yours. Your first task will be to identify an assistant, who you'll have to groom.\" \n\n\"I'm speechless.\" She was red and embarrassed. I opened some champagne and we sat going over some details. \n\n\"There will, of course, be a fairly substantial salary. But you need to have some reason to keep the success going, so I'll be giving you shares amounting to a 5% stake in the company, actually, I need to sell them to you. So you owe me a hundred pounds. You won't be able to sell them for ten years, but there are dividends of course.\" \n\n\"What? But that'll be worth ...\" I could see her trying to calculate. \n\n\"Let's just say, it's an incentive.\" Karen grinned. \n\n\"I'll say. Thank you so much.\" \n\nI sat on the bed, with my legs under me, wearing the old T-shirt of hers that I'd had for years when she came out of the bathroom. She was wearing an old shirt as well. \"Sit with me for a minute please.\" She sat, looked at me and took my hand. \n\n\"I love you and I'm very proud of you, congratulations.\" \n\n\"Thanks, I love you as well. I'm chuffed, gobsmacked actually.\" \n\n\"Remember the Easter that you and Jane visited when you were considering going to Lancaster? I told you then that you should get the best degree that you could so that you would achieve great things.\" She nodded. \n\n\"I was excited back then because I hoped that maybe I'd get to see you occasionally over the time that you were there, at university. I knew how I felt about you but assumed it was just me being silly. Then, when you were there I only ever wanted to help and support you, but it became much more than that.\" \n\n\"You really did help me in so many ways.\" \n\n\"Several times you've said that you felt that you were sponging off of me, although I never felt that, ever. I remember Victoria saying that if we were serious about each other you'd accept my help and pay me back eventually. She's a wise woman. It was never about payback for me, but now it's a reality. I backed the right horse didn't I?\" \n\nShe smiled at me, took my other hand and with a serious look about her asked, \"Are you calling me a horse?\" We both laughed and serious conversation stopped, with good reason. It's very difficult to talk and kiss at the same time and lets' face it kissing was much more important at that moment. \n\nBefore we fell asleep sometime later I whispered, \"Maybe you need to think about that car you've been drooling over. We can afford it now.\" \n\nThe months that followed were busy and exciting. Fiona worked long hours, but came home elated and spent many evenings talking about her ideas and plans. They were happy times for me. I loved watching her animation and enthusiasm as she talked. Of course, I was immensely proud of her, as were her parents and Jane. \n\nWe did go away the weekend after she collected the car. Up through Yorkshire, across the Pennines and back through Staffordshire, staying off the motorways where we could to put the car through its paces. Fiona even let me drive for an hour or two. It was wonderful, but for me, the best bit was watching her as she drove, despite her frequently pulling faces at me. Our two evenings were spent in small hotels and after dinner, we'd head for our room and kiss for a long time. I'd never been happier. \n\nIllness \n\nI was reclining in Fiona's arms and happy. I felt loved. Fiona cuddled me with her arms wrapped around me and she moved her hands to my breasts. 'Please' I thought to myself 'I don't need any more,' but actually, I was ready to take what she had to give. I was getting aroused again when suddenly she stopped the gentle caresses and was groping. 'What was this?' \n\n\"Milly, when did you last do a breast exam?\" \n\n\"What? A week ago, what is it, don't fool around?\" \n\nShe rolled me towards her. There was a serious look on her face, one that I rarely saw, but when you did see it, you'd better pay attention. \"You've got a lump, here.\" She closed her hand around my right breast. \"Give me your hand.\" She placed my hand over the tissue and she was right. It was a lump, not something that I could have missed a week ago. \n\nFiona was crying. \"It's okay honey. I'll see the doctor tomorrow, it'll all be fine.\" I was lying to her; I knew that this was serious. \n\n\"Milly, please don't leave me. I need you, I want you. Milly, I love you, I've never loved anyone else, please don't leave me.\" It was my problem, but she was the one who needed consoling, she was distraught. \n\nTwo days later I was at the hospital waiting to be called in. Jess and Jane were sitting with us when the doctor called Fiona and me into the consulting room. \n\nTwenty minutes later the four of us sat with coffee. \"It's almost certainly cancer and a scary type. I should have surgery within a few days and it's likely that I will lose this one. With a bit of luck, radiotherapy and maybe chemo, it should be okay.\" \n\nWhen I started to come to again I saw Fiona and Jane looking down at me and I knew from the look on their faces that it was not good news. I took a sip of water and looked at them, \"Both?\" They nodded. I closed my eyes. I knew that they would take both breasts, I don't know why, but I knew it. I didn't care, I was still here and breasts were not that important. \n\nThe next few months were hard. The chemo flattened me, it was aggressive, it left me weak and wanting to throw up all the time but strangely I lost very little hair. I was fighting, but it was hard. I was never alone; one of them was always there with me. \n\nEvery night Fiona had cradled me in her arms, cuddled me, kissed me and told me how much she loved me. When I threw up she'd held me, when I cried she'd mopped up my tears, when I felt terrible she'd do whatever she could to soothe me. I don't think that anyone could have done more. When we were lying together she would stroke me, not in a sexual way, it was relaxing and felt so good. \n\nFiona had cried gallons of tears; she wanted to take away my pain. I spent so many hours watching her, the pain in her face, the love in her eyes, the sadness. At first I was sure that I was going to die, but I felt the love pouring out of her. At least I knew the happiness that I was sure few people had experienced. She was beautiful and I loved her. \n\nIt took six months from that first trip to the doctors before they pronounced me okay. I was cancer-free and had a positive prognosis. \n\nOur sex lives had been very limited during that time. I'd tried hard to play but I'd struggled and Fiona had discouraged me at every turn usually adding the words, \"I don't care about sex, I only want you with me because I love you.\" I'd never had any doubt about how she'd felt before, but it was clear that she simply wanted me back to health. \n\nAs I'd regained my strength and started to feel stronger I began to take an interest in sex again and she was willing, but always gentle and loving, with me being her priority. I caught her once or twice looking at my chest, now flat and scarred. I'd given it a lot of thought. Breasts had always been an important part of our sex play but now they were gone and I didn't want more surgery. We spoke about it several times and always she said the same thing, \"I want you healthy. A few bits missing don't matter.\" I felt that she was being honest and I was content. \n\nIt really didn't seem to matter. There was no longer any teasing or restraint. I have no idea why it just never happened. \n\nI got back to caring for Fiona and the house, but when I picked up a pencil and my sketch pad nothing happened. That bit of me never returned, it made me sad, but I was still alive. I never wrote again either, that too seemed to have gone. \n\nWe went to Crete for a couple of weeks and spent our time walking on the beach, swimming, sun-bathing, reading and talking. I felt relaxed and Fiona chilled out. I realised how worried she'd been. She'd been everything that I could have hoped for and more, much more. \n\nDeparture \n\nFiona had left me sleeping and headed off to work. I felt fuzzy and when I stood up, I felt bad. I had a pain across my chest and under one arm; I was weak and knew that things were not right. I understood what this was and this time, it was going to end badly. \n\nI knew that Jess wasn't working and called her. She was there twenty minutes later and we were at the doctor's surgery twenty minutes after that. Two hours later I was in the hospital when Fiona arrived. She was a beautiful woman normally, but when she walked through the door it looked as if she was carrying several tons of weight on her shoulders, her eyes were red and every part of her face was sagging. Jane trailed in behind her and took Jess into her arms. They were both in tears and still crying ten minutes later when Victoria arrived. She was ten years older than me, today it looked more like twenty, but I guess that I wasn't looking so good either. \n\nWe'd had almost a year from first detecting the lump and after the doctor delivered the news that we all knew was coming, she left. I looked at them and pleaded, \"Please will you take me home, if I've got to go, I'd like to be there, please let me spend my time with Fiona.\" \n\nWe both cried in bed that night. My tears were because of the grief that she was going to have to cope with. Maybe it wouldn't be too bad, at least I hoped so, but I doubted it. I turned to face her and she stroked my chest and ran her fingers over the scars that were the legacy of the breasts that she loved to touch and that I loved her touching. \n\n\"You'll never forget me and a large part of you will always love me, but you need to promise me something. Will you?\" \n\n\"I love you, honey. What do you want me to promise?\" \n\n\"There's nothing that we can do to change what will happen and I want to enjoy the time that I have, that we have. But when I'm gone you need to recover, get back to being you. You're just too wonderful to allow yourself to grieve for the rest of your life. You can't betray me by seeing someone else, no one else will be me, but you have the capacity to love someone else. You must try. I'll watch over you if I can.\" \n\n\"I wish that we'd had kids. You'd have been a wonderful mum and I'd still have a part of you.\" \n\n\"We talked about that and now that we're here I'm glad we made that decision. Let's try to sleep. I love you.\" I cried for at least another hour before sleep came. \n\nThe next morning I was in pain, both physical and mental, but there were things that I had to do. I had to make the most of the few weeks that I felt I had. I sorted out my affairs and wrote letters. I cooked a lot so that Fiona and I could have romantic evening meals, but after a few days, they became strained because she watched, waiting for me to show some signs of discomfort. I arranged to meet with Jane and asked her to speak with Jess and Victoria. They were with us for dinner more often than not and it made things easier and lighter. \n\nJess and I went for a slow walk one morning and over coffee in the park, she spoke about Fiona. \"She never takes her eyes off of you; she's going to take this badly.\" \n\n\"She is, but I'm counting on you three to help her through this. Alex and Jenny just died without any warning and that was hard. I hope that it's easier for Fiona. At least I'll have the chance to tell her all the things that I want to say.\" \n\n\"We'll do our best, but we all know how she feels about you. I thought that the two of you were crazy all those years ago and I've never been so wrong. I've never seen two people so happy and in love. She'll take it hard.\" \n\nI stared out of the window at the leaves as they turned brown, I was deep in thought. I'd known for a long time, for several years, that death was the only thing that would part us and it seems that, very soon, I was going to be proven right, but I'd hoped for longer. I knew that there was nothing that I could do to stop the inevitable. I accepted that it was my fate, what distressed me was the heartache that this was going to cause to the woman that I loved so much. I closed my eyes. I'd been lucky, I'd found three people to love and marry. They were all very different but they were all good, nice, kind and loving people. I'd had Jess as my friend for a long time; she and Victoria had been kind to me, let me into their lives and allowed me to share their children, what a special gift that was. They gave me a daughter to become my wife and allowed the other to become my friend. I loved Jane very much I was just sad that she'd not found that same love, that special person. ",
        "I'd felt awful for almost a week. The pains were bad and my mood was low. I hung in, but it was tough. Fiona and Jane were there and helped me, but I could see that they were finding things hard as well. \n\nTwo days later I was feeling a lot better and that night I made mad, passionate love to Fiona. It was not about me, it was about me pleasing her. That was to be the last time and I think that we both realised it. \n\nI slid gently down the slope from then onwards. My time was coming to an end and this seems like a good point to let my sister take the story over. \n\nJane \n\nI loved Milly, not in the way that my sister did, but I loved her as my sister in law and my friend. She was my closest friend. I couldn't wrap my head around her dying, how could such a wonderful person be taken from us before she'd lived her life to the full? But it was going to happen and as much as I didn't want her to go, it would be a blessing. She was in pain and the zest had gone from her. Most of the time I managed to find somewhere to be alone for at least a few minutes each day so that I could cry my heart out and it happened every day. \n\nMilly was lying in bed propped up on several pillows and she was smiling at me. How wonderful to see her like that. Her face was drawn with weight loss and pain, but deep down I could still see her, the wonderful woman who became an adopted aunt to Fiona and me, with whom we had such fun. It was my sister who'd married her, but I considered myself lucky because it meant that I got to spend time with them both. \n\nThe look on her face changed, she'd just realised something. The next few minutes were about to change my life beyond anything that I could have imaged, but I didn't know what was about to come until she spoke, well, it was more of a whisper. \n\n\"I've got it! After all these years I've worked it out.\" \n\n\"What Milly, I don't understand?\" \n\n\"I know who the mystery person is. The one that you love, but cannot tell anyone about.\" \n\n'Oh shit, there was no way she could know, surely not.' \n\n\"It's Fi, Fiona. The person that you've been in love with for all of these years is Fiona!\" \n\nMy face reacted and gave her the answer. 'Oh shit!' \n\n\"Jane, tell me, am I right?\" I nodded my head and then hung it in shame. \n\n\"Come here, lay beside me, you poor girl.\" I climbed onto the bed and held her. I'd imagined so many times being in her place and holding my sister, Fiona, like this kissing her, making love to her. Yet here I was in tears of shame. \n\n\"You poor girl, all these years, you've remained faithful and loyal. Don't be embarrassed, you need to tell me all about it, don't fool around, I don't have long. I doubt if I'll be here at the end of the week. It's too much Jane. I'm hurting and it's not going to get any better. Tell me about it.\" \n\nI spilt my guts. I confessed everything. How I'd realised that I loved my little sister when she was about twenty when she and Milly were together. I'd always loved her, she was my sister and we were close, very close. But one day after a night of failed love I wandered off inside myself wanting to know why I couldn't find love. Then I saw it, my sister. I fantasised about her, sexually. I realised that I wasn't jealous of Milly, how could anyone be jealous of such a lovely person, no I just wanted to be her or in her place. \n\nI'd tried to shake it off, deny it, forget it, but nothing had worked. I could never share my feelings with anyone. In any case, how could I love my sister, how could we have a sexual relationship? It was just not possible. I tried hard to find someone else, I even tried guys, but that was never going to be a solution, I didn't like them in that way. I liked girls, but except for one disastrous encounter, none of them made me feel the way that I knew I could feel, the way that Fiona and Milly felt about each other. \n\nWe spoke for a couple of hours and she promised never to tell anyone or share my secret. That was a relief and I settled, but only for a moment or two. When she spoke again she did so with authority and with love. \"Jane, Fiona is going to need someone, someone close, and someone who loves her. That person has to be you. Remember, I've been in the position that she's about to find herself in. It'll take time, but you may be able to have that relationship. She loves and cares for you very deeply. You'd make a great couple, it will be difficult, but you could do this.\" \n\nMilly was silent for a while, thinking. I think she was having a pain spasm as well. \"I'd like to think that you two could be together, it would make me happy, but I'll be gone, so what I think doesn't matter. But you've to tell her, not right away, maybe months, but you've to tell her. If you don't I'll haunt you.\" \n\nMilly's end \n\nFiona and I were sharing the big chair watching Milly, it was close now. She'd been sleeping until a moment ago. A few minutes later Victoria came in and went over to the bed. She leaned over and Milly tapped the bed covers. Victoria lay down beside her. I heard a little of the conversation, \"If there is something else after this maybe Alex and Jenny will be waiting for you. If there is, keep me a place near you.\" \n\nI heard Milly laugh and she whispered something, Victoria smiled, \"I've loved you for a long time, Milly. You made my life better because we shared it, thank you.\" The two of them hugged each other for several minutes. \n\nVictoria got off the bed and made to leave the room. As she opened the door Jess came in, but the door hadn't fully closed and we all heard Victoria collapse on the floor in the hall sobbing, loudly. Fiona went to her. \n\nJess kissed Milly and sat beside her. They whispered and I heard nothing, but they smiled at each other and held hands. They kissed again and Jess left with tears streaming down her face as well. \n\nWhen Fiona came back in she nodded to me and as I was leaving I saw her climb onto the bed beside Milly and cuddle her. \n\nAbout an hour later I was in the bedroom that I'd been using. I was hugging myself as I sat there crying hard. I couldn't stand this and then I heard Fiona sobbing and rushed to her. I found Fiona sitting hunched up on the floor in the corner of the room, wailing. I went to the bed and saw that Milly was gone; she looked pain-free at last, and beautiful. I took her hand and leaned over to kiss her for the final time. \n\nFiona clutched me and was sobbing when Victoria and Jess joined us. We held hands at the end of the bed. I was surprised when Victoria said a prayer for Milly, but it was the right thing to do. \n\nThe funeral was just as Milly had requested, quiet and simple. Fiona had asked for one piece of music to be played; 'Something in the way she moves,' by George Harrison. It was a song that Fiona had sung to Milly many times and had us all crying. \n\nThere were more people there than I'd expected, but I don't have much idea who they all were. I recognised Isha and Susie, Milly's friends from the Lake District, but I couldn't see much else, I was blinded by tears and grief, hanging in there desperately for my sister. Fiona was broken; she could barely sleep, could barely speak a coherent sentence, had cried so many tears and lost a couple of kilos in the space of a week. \n\nVictoria took charge with a steely determination as ever. It was a good job too because Jess, Fiona and I were hopeless. Two days before the funeral I'd spoken to Jess for a long time about how much I'd loved Milly, my best and closest friend. \n\nThat evening wasn't easy. I'd put Fiona to bed and I sat with Jess and Victoria. \"Listen, I know that I've been at Fiona and Milly's for a few weeks, but I'm moving there permanently. I'm moving in with Fi until I know that she'll be okay. That may take a while. I'll try to get her to come back here, but she's a stubborn bastard and wants to hang on to their home, where she feels closer to Milly.\" \n\nThey nodded, they understood. \n\nRecovery \n\nFiona was like a shell of her former self. Her shoulders drooped, she never smiled. Her eyes had dark rings, her hair was dull and there was no spirit to her. She spent a lot of time in bed and I heard her sobbing every night. I could stand it no longer, so one evening I went and climbed into bed and hugged her. She fell asleep quicker that evening and each evening thereafter I did the same thing until it became a habit, sharing her bed. \n\nAfter a week she went back to work, but she didn't stay for long. The following week Karen told us that she seemed to be doing a lot better and was getting things running again, but there was a constant air of sadness about her. When she came home she ate something and went to bed. It looked as if she'd expended all of her energy in getting through a workday. \n\nShe wore the same old T-shirt every night. She'd wash it every other day and leave it to dry before she went out. Then put it on in the evening without bothering to iron it. It was a very old one and looked worse for wear. \"Why do you wear that same thing every night?\" She looked at me with sad eyes and I expected to see tears. \n\n\"I wore this the summer I stayed with Milly, after Jenny died, and I left it behind when I came home. When Milly found it she wore it almost every night. She stopped wearing it when we started sleeping together, but if I was away overnight or when I came back here, she'd drag it out. When it falls apart I'll wash it and put it somewhere safe.\" \n\nIt took another month before I saw her smile again and another month before she cracked a joke. After another three months she seemed to have realised that she needed to do something. She was sleeping better, eating proper meals, conversing with people and she looked more like her old self. But deep down, she was still hurting. \n\nShe'd been gone for a quite a while and I found her sitting on the end of her bed holding one of Milly's dresses and staring at the wall. \"Fiona, we know that you're hurting, but we're all worried about you. What can we do to help?\" \n\nIt was a simple statement. \"Bring her back.\" She looked forlorn. \n\n\"If only I could. She asked me to help you, help you to get through this. I love you.\" I sat beside her; she grabbed me and held onto me as if I was Milly. \n\n\"I love you, Jane, I've always loved you and you're helping me, you really are. I'll get through this, just give me time.\" \n\nOver the next few months, she came back to us little by little. We went out on our bikes a couple of times but she was driven and I couldn't stay with her. She seemed to be working her feelings out on the tarmac, but she was getting better. \n\nI held her every night. I loved being there next to her; it was what I'd wanted for a long time, but not like this. During those months I never had any sexual feelings towards Fiona. She was my sister and hurting, I simply needed to help her. \n\nDisclosure \n\n\"What are your plans?\" Fiona looked sad again today, but then that was still often the case. \n\n\"I need to go through some of Milly's stuff. I'll start with underwear and shoes. I can't face the dresses just yet. It'll be difficult but I need to try.\" \n\n\"Want me to stay?\" \n\n\"No, I need to do this, but thanks.\" \n\nI was just about to deliver coffee when I heard the angry shout, \"Jane get in here right now!\" I wasn't sure what was wrong. \n\nShe was sitting on the bedroom floor with two drawers lying beside her and underwear strewn everywhere. Her eyes were red and in one hand she was clutching a pair of panties that were soaking wet, presumably with tears. In her other hand she was brandishing a letter, blue notepaper, Milly's notepaper and from the little that I could see, Milly's handwriting. \n\n\"What the fuck is this, what does this mean?\" She cracked and the tears poured out of her like a fountain. I went to hold her, but she shrugged me off. \"Don't touch me, don't you dare touch me!\" \n\nI took the letter from her and started to read: \n\nDearest darling Fiona, \n\nI have no idea how long it will take you to find this letter and you may already know what I am about to disclose. I am close to the end as I write this, but what I have to tell you is very important. \n\nI am so sorry to desert you, but it is beyond my control. I thank you for the love and pleasure that we have shared; as aunt and niece, as friends, as lovers and finally as my wife. I have gone and you will grieve, but you have to move on. You are too wonderful and have so much to offer to be alone for the rest of your life. Move on, you cannot grieve forever and do not try to compare. \n\nI've loved Jane as well; I was blessed to have her in my life and she has been a good, kind friend. \n\nI finally figured out the identity of the mystery person that Jane is in love with. It's you, Fiona. I worked it out and she has confessed it all to me. It's a wonderful and tragic story. She promised me that when she felt the time was right she would tell you. Maybe as you read this you already know, but this is my insurance policy. \n\nI have always known that you love and care for her as she does for you. But she loves you very much in a different way. There would be difficulties, but you would be perfect together. Don't be angry with her, she's suffered enough. Let her love you, with my blessing and good wishes. \n\nThank you for everything, these last fifteen years were perfect and so were you. \n\nAll of my love \n\nMilly X \n\nI was almost crying as I looked up at her and she asked softly, \"Is this true?\" I nodded and once again, hung my head in shame. \n\n\"When were you going to tell me?\" \n\n\"I don't know when the time was right. Soon, I think. I didn't know about the letter, but I should've guessed.\" \n\n\"When did she work it out?\" \n\n\"Two days before, that must have been one of the last things she did.\" I stopped pretending. The tears flowed, my life was over, I was ashamed, embarrassed and more than anything I wanted Milly back too. Through the tears and anguish, I managed to say, \"I miss her Fiona, I want her back, I loved her too. I have no idea how you must feel.\" \n\n\"If I could have one more thing it would be a kiss, one more kiss. When our lips were touching it was the most magical thing. Just one more kiss. Hold me, please.\" \n\nWe sat together for several minutes holding each other with our own thoughts. \n\n\"She always dreaded that I might meet someone my own age. I knew that I wouldn't, I was so certain of that. I knew the one thing that could separate us was this, her death. Now you need to tell me about the contents of this letter.\" \n\n\"You and Milly were already a couple and it was the summer that I finished university. My love life had been a mess. For a couple of months, I'd behaved like a slut, men and women. It never felt right, it was never satisfying. I woke up one night in a sweat and a conversation that we'd had was right there in front of me. You'd told me about the feelings that you and Milly had when you kissed, when you had sex. I'd never had anything close to that. When I fell asleep again I was restless and woke up again shocked, but I wasn't sure why. An hour later I realised that what I needed was to find someone who I loved, who turned me on, who understood me. It hit me like a baseball bat - you made me feel like that.\" \n\nI looked at her and there was a look, an understanding, but she remained silent. \"I didn't sleep for a week. I kept telling myself that it was wrong, could never work, that I was crazy. I told myself some of the most stupid things. It took months before I accepted that I was in love with you the same way that Milly was. I nearly told her once, but I couldn't. It was the only thing that I never told her until just before... I couldn't tell you or Jess or Vic.\" \n\n\"So what did you do?\" \n\n\"I buried it or tried to. I went out with people, I tried hard to find someone, but I kept seeing your face. I kept dreaming about you. Terrible things, things I wanted to do with you. It took me a few years before I managed to bury it enough to almost ignore it. Being around Milly kept it at bay. Not because I wanted her, I didn't want to split you up. Somehow, being with her and having her as my friend, kept a lid on it most of the time.\" \n\nThat night I went to my own room or at least the room that I used to occupy and where my clothes were kept. I didn't go to Fiona's bed for the first time in a long time. I didn't think it was right and wasn't sure that she would want me there. \n\nTwo days later we were having dinner. Fiona had been quiet, but that wasn't unusual. She looked at me and raised an eyebrow, \"Why have you been sleeping alone?\" \n\nI was surprised and took a few moments to consider my reply. \"After the letter and you knowing my feelings I thought it better.\" \n\n\"I missed you holding me. I'd like you to come back, but only if you want to.\" My heart lifted, of course, I wanted to, but I just nodded. That evening I went to her bed and held her again. As I lay there thinking, I knew that this was where I most wanted to be, with the person that I loved. The contact was important; the sex was not, because I knew that was a fantasy. \n\nWe never spoke about Milly's letter again for a long time. Fiona was coming back and I saw more of the old her each day. \n\nStars \n\nI watched Fiona; she was deep in thought and sad. I assumed that she'd been thinking about Milly, that was what usually happened and it often started me off as well. She clasped her wine glass, opened the patio door and stepped outside. She stood still and the security light went off after a minute or two. I saw her looking up. From where I sat I could see that it was a clear sky and the stars were visible. \n\nI stopped watching her, I hurt for her, I hurt for myself. I was miserable, we both were. I heard the door slide open; when I looked up she stepped inside and was smiling, \"I saw a star winking at me.\" \n\nI thought that she had flipped; I'd feared that this might happen. \"I'm sorry, a star winking?\" She came over and sat on the couch next to me. \n\n\"One night when we were on our honeymoon Milly told me that she'd seen two stars winking at her. I thought that she'd gone mad, but she told me that it was Alex and Jenny giving their approval to the two of us. She said that she felt at peace about them and that it wasn't just a fantasy. She really believed that she was right.\" \n\n\"And you just saw a star winking as well?\" \n\n\"Come with me.\" She took my hand and we went outside. The security lights went off and we took time to adjust to the darkness. Still holding my hand she pointed up to the sky and there was a star, I don't know if it was winking, but it seemed to glow a little. \n\nShe shouted excitedly, \"That's Milly, that's Milly! I know with a certainty that defies logic. She's looking down on us and telling me that I have to do something.\" \n\nFiona turned and stood right in front of me, as close as she could get. Her hand came up to my cheek and she leaned forward and kissed me. It felt so wonderful, my eyes rolled and I caught sight of that star. It was glowing much brighter. She was right, it had to be Milly. The kiss was something else, it was the best kiss that I'd ever had.\" \n\nFiona stepped back and looked up. I saw her mouth, \"Thank you, Milly, I love you.\" She turned back to me, \"She was right; we might make a good couple. Let's try that again.\" We kissed again and when we stopped she looked at me, \"I felt it, did you, the spark?\" I nodded. I'd felt it alright, I knew what it was even though it had eluded me for all of these years. \n\nI looked up to the stars as well and whispered, \"Thanks Milly, for everything.\" \n\nIn those few moments, Fiona had changed. She seemed taller and lighter, excited. She was smiling as wide as I'd seen for over a year, certainly since Milly had become ill. ",
        "She took my hand and led me to the bedroom, then pushed me backwards and knelt over me. She came down so that our lips met and she kissed me. Milly was right, she's good at this. Two minutes later she had one of my nipples in her mouth and a few minutes after that was pulling my knickers down. My head was in a whirl and I didn't know if I wanted to stop or help her or die. She drove her tongue into me and I came very quickly. \"Shit, nothing has ever been that good.\" \n\nI closed my eyes, even the best orgasm I'd had before that night didn't come close. \n\nA couple of nights later I went outside and looked up again. The star that we'd seen wasn't there, the others were still in place as I remember them, but Milly's star was gone, Milly was gone. I offered up another prayer to the heavens. \n\nThe next two weeks saw a change in our relationship. We slept together each night and for the first few nights we kissed, like lovers, but that was all. \n\nThen we started touching and stroking. That was torture for me because it turned me on. One night I looked at her and had to tell her how I felt. \"Fiona, a couple of weeks ago we had sex and it was great, better than anything I could've imagined. Since then we've kissed and stroked. It's turning me on and I'm in danger of doing something that could cause a problem. What are we doing? Was that a one-off or are you trying to adjust, I just need to know.\" \n\nThere was silence. It was so quiet I was convinced I could hear her thinking. It was taking too long, this was killing me. \n\n\"I'm sorry, I know that you love me and I love you, but I'm scared, terrified. It was great, but it seems wrong, I'm sorry. It's Milly, you know it's Milly. I'm sorry.\" \n\nI held her and eventually she fell asleep. I had no idea what to do, so I held her in my arms. \n\nFiona stayed in bed the next morning; she refused to get up and called in sick. She even shouted at me and told me to leave her alone. \n\nShe'd cooked dinner and had it ready by the time that I got home. She looked drawn but had, at least, dressed and wore make-up. \"I'm sorry, I've treated you badly and you of all people did not, do not deserve that. I'm scared to death. I thought that I was ready to move forward ...\" \n\nI sat facing her and said nothing, clearly, there was more to come. \n\n\"Being with Milly was incredible. I loved everything about her. We understood each other in a way that was unbelievable, but you know all of this. I'm just scared to let go. What if I start to forget her?\" \n\n\"Neither of us will ever forget her. She was an important part of my life too. The two of us had our own relationship; something neither of us understood properly, but it was special. I'll never forget her and I wouldn't let you either. Ask yourself this, what would she tell you to do right now? Think about it.\" \n\nNeither of us spoke for a quite a while because she was thinking. \n\nLater that evening Fiona took my hand and said, \"She wouldn't tell me off or tell me what to do; she'd be asking me questions. She'd say the same thing that she said before she went, that I had to move on and find another person to share my life with.\" \n\nAgain I said nothing; she had to this for herself. \n\nIt was twenty minutes later that she spoke again, \"I do have someone else to share my life with and who I love, who I've always loved, you. I want you. I want you very badly.\" Without warning, she slid between my legs, reached under my skirt and was tugging at my panties. \n\n\"Stop, Fi, stop, not like this, I don't want it to be forced.\" \n\n\"Shut up, I need this as much as you. Be quiet while I still have the courage.\" She tugged them down to my ankles, pushed my knees apart and licked my thighs. I have no idea what happened in the next five minutes because my brain had disconnected. Then I started to work out what was going on. She had her tongue inside me, licking, kissing, nipping. I felt as if I was standing in surf, just too deep to touch the sand, with waves crashing over me, not in control. Then she touched my clit and I thought that I was going to die. I came and passed out. \n\nI opened my eyes and she was smiling at me, \"You okay?\" \n\nI had no idea how long I'd been gone for. \"No, no I'm not.\" \n\n\"What's wrong did I hurt you? I'm sorry.\" \n\n\"You didn't hurt me. I have no idea what you just did to me. I came, but it was not like any time I've come before it was ... I don't know what it was.\" I sat trying to process but it was no use. This was what Milly had told me about, scrambled brains. It was better than the first, and only other time, she'd done that. How was that possible? \n\nI pulled her over towards me and kissed her. I slid my hand under her skirt and found that she was naked. I touched her and slid a finger inside. She grabbed my wrist and looked at me. \"Don't fucking tease me, hard and fast, please.\" \n\nI slid between her thighs and five minutes later she came so strongly I thought I'd been caught in a hurricane. She screamed so loudly it frightened me and probably half of the cats within a few miles of us. \n\nShe took my hand; we went to bed and held each other naked. After some time she touched my face, \"Thank you for everything. For loving me, caring for me, being there for me and everything that you did for Milly. And thank you for that, it's been a long time since I felt that and I've missed it.\" \n\n\"It's been a long time since I experienced anything like that.\" \n\n\"How long?\" she asked. \n\n\"Thirty-five years.\" \n\n\"What?\" \n\n\"I've never felt that before and I got as much from making you come as I did from my own.\" \n\n\"I know what you mean.\" \n\n\"Was it always like that with Milly?\" \n\n\"Yes, always, from the first time to the last, for both of us.\" \n\n\"Wow, what was I missing? None of my business, but how often ...? Don't answer that, none of my ...\" \n\n\"Almost every day there was something. She never went to bed until I was ready, even if I was working late. We'd cuddle and kiss every night. Unusual if that was all.\" \n\n\"You had sex every night?\" \n\n\"No, there were occasional days when we didn't, but there were some days when it lasted for a while.\" \n\n\"A couple of hours? Wow.\" \n\n\"Actually there was more than one occasion where it lasted for twelve hours.\" \n\n\"How is that possible?\" \n\n\"One day I may tell you. We had toys as well.\" \n\n\"Toys?\" \n\n\"Yes, quite a few. They're hidden.\" I was quiet. \"How would you describe Milly? Was she proper, sexy, slutty?\" \n\nI thought for a minute, \"She was gorgeous and sexy, but always proper. She had a devilish sense of humour.\" \n\n\"I agree with you, that's exactly who she was, except when it was just us. Then she could be the dirtiest, sluttiest, most sexual creature you could believe, but only when the doors were locked. We were both the same. Sometimes we were just loving, but at others, we were sex-crazed.\" \n\n\"Bloody hell.\" I was quiet, thinking. \"She hinted at that now that I think about it. She said that you'd changed her.\" \n\n\"She told me that she'd enjoyed a great sex life until we got together and then it became something else. She gave herself to me totally and placed herself completely in my hands. One day I'll tell you more.\" \n\nWe didn't speak for a while and I fell asleep. \n\nWe were fine the next morning and didn't mention what had happened until it was time for bed. Fiona came over, climbed in beside me and we hugged and kissed. Then she started to touch me and within a few minutes it became crazy and for at least an hour I experienced sex at the hands of an expert. I was a willing pupil, but I had some stuff to learn. \n\nShe whispered, \"I love you,\" before falling asleep. \n\nOver the next few weeks, things went on the same way. There was sex most evenings and I was learning fast. There were occasional hiccups and Fiona would suddenly think of something that made her tearful, but I held her. \n\nOne evening I found her sitting on the bed looking into a box. It looked as if she'd been crying. I sat beside her and she put the box on the bed between us. I nearly died when I saw the contents. Ribbons, some straps, vibrators, what I assumed was a butt plug and something else. \n\n\"What's that?\" \n\n\"It.\" She replied. \n\n\"Okay, what is it?\" \n\n\"That thing is called 'It.' We never found another name for it. It's a dildo, a strap on.\" \n\n\"But it's huge. Don't tell me that's been inside you or Milly.\" \n\n\"It's been inside both of us many times. It's not too big if you use it properly. I'll show you, but not with 'It,' I couldn't do that. I think it's time for 'It' to retire, and it'll be well deserved.\" \n\nI was stunned yet again. What doors I had opened? It took a while, but eventually, Fiona ordered another one of those things. She took her time and showed a great deal of love as she introduced me to its capabilities. I had no idea that I could accommodate such a thing, but I came to love it, giving and receiving. We also gave it a name - 'Thing.' \n\nEngagement ring \n\n\"Fiona, you realise they'll be home in a couple of days, Jess and Victoria. We need to talk to them, but we need to decide what to tell them.\" \n\n\"The truth, we tell them the truth. We're lovers, the truth.\" There was a look of steely determination about her. \n\nThat night I was looking for something in my jewellery box and found Milly's engagement ring. I was gazing at it when Fiona came over and she saw it as well. \n\n\"I wondered what'd happened to that.\" \n\n\"Milly gave it to me,\" I felt myself letting go again, but sniffled and held the worst of it back. \"The day before ... the day before she left us. She asked me to look after it and she also said that one day I would wear it and that I'd know when it was the right time.\" \n\nSuddenly it hit me. \"She must have known that this is how it would go. She wanted me to wear something that you gave to someone that you loved.\" \n\n\"That sounds like her. You should wear it, part of her, something that I gave her and she's given to you. She wanted us to have each other didn't she?\" \n\nI nodded, \"Maybe.\" \n\nJess and Victoria were back from months abroad and arrived for dinner. As we sat chatting over the main course I saw Jess look over at me and then I saw the puzzled look. \"Isn't that Milly's engagement ring?\" \n\nI held my hand up. \"Yes, Milly gave it to me.\" \n\nShe looked at me, quizzically, then at Fiona and then at Victoria. \"Why?\" \n\nFiona put down her knife and fork and took a deep breath. \"This may shock you, but we, Jane and me, are a couple, lovers. Milly left it for Jane; it was like she wanted us to have each other.\" \n\n\"That was nice of her.\" I could see that Jess had not understood. \n\nNow it was my turn to take several deep breaths, \"Two days before she left us, Milly worked out who I was in love with, had been in love with for a long time. She made me promise to tell Fiona, but she also hid a letter. I've loved Fiona for years and Milly gave me, us, her blessing, but that's another story and one that you'll find hard to believe. Whilst you were away things changed for us. We've shared the same bed for almost a year,\" I almost whispered the next part, \"And for the last couple of months we do more than just sleep in it.\" \n\nThere was surprise and some anguish over the next hour. It was a hard evening; lots of things were said that might have been better not said, but eventually, things calmed down. Fiona went to get champagne and poured four glasses. \n\n\"It's a year ago today that we said our final goodbye at Milly's funeral. I still miss her and so does Jane. You need to read her letter and in a minute I'll tell you a story about winking stars. But first I have two toasts, to Milly, an incredible woman and secondly, to Jane and me.\" \n\nFiona told them the story about the stars, we showed them the letter. Eventually, after a period of reflection, I spoke again. \"We're a couple, we love each other and not just as sisters. We can be good together. We need to be careful, we can't get married obviously, but we'd like your blessing.\" \n\nVictoria stood and walked across the room. She stared outside into the dark for at least five minutes before she turned around. \"I'm not sure that I fully approve, but I want the best for the two of you, I want you to both be happy. It's what I've always wanted. I'm so proud of you, in everything that you've achieved and for being really good girls, nice people. If this is what makes you happy then it makes me happy as well.\" \n\nJess was crying, yet again, but she nodded, \"I agree, I love you both.\" \n\nMilly's letter \n\nThe following day I was tidying up when I heard Victoria speaking to Fiona. \"I have something for you and I think that this will be tough. Milly gave me a letter to give to you a year on ...\" \n\nI looked up stunned. My eyes were wide and so were Fiona's. A blue envelope changed hands, how many did she leave? Fiona took it as if expecting it to hurt her and stared at her name on the front. She looked at Victoria and muttered \"Thanks.\" \n\nFiona's shoulders slumped as she walked away to the bedroom. I raised an eyebrow in Victoria's direction. \"I have no idea what it says. She gave it to me the day before she died and asked me to hand it over in a years' time. I hope that it doesn't hurt her too much.\" \n\n\"Does Jess know about it?\" \n\nThere was a real look of concern across her face. \"No, she doesn't and that's been killing me. It's the one and only time that I've ever kept anything from her. Now I need to go and ask for her forgiveness.\" \n\nI wasn't sure if I should go to Fiona or leave her alone. I dithered before I plucked up the courage. She was curled up on the bed gently sobbing. The letter was lying on the covers and it seemed to be huge. I went over; she looked at me then pushed the letter towards me. I expected it to feel different but it was just a piece of paper with Milly's lovely script. \n\nMy dearest darling Fiona, \n\nBy the time that you read this, it will have been a year since I left you. I don't want to go but it's time, I'm in pain from my cancer and from the sadness that I can see every time that you look at me. \n\nI have been lying here cursing that I have to go when I don't want to. Cursing the fact that I have to leave the person I love and who is so special to me, knowing the pain that you are going to experience. I hope that by the time you read this the grief has diminished, at least a little. I'm sure that your wonderful family will have been there to support you and that you have been there for them. \n\nI have been thinking back over my life, it hasn't always been easy, especially when my parents rejected and shunned me, but that was a choice that they made. Losing two wives and partners was tough as well, but that has made me think about things differently. \n\nI was lucky that I found love with Alex and she changed my life. I have no idea what would have happened to me if she had looked the other way that day. I was lucky when Jenny saved me from my stupidity and black thoughts, lucky when the people of the Lake District welcomed me, lucky that I found a talent in art that I wasn't aware of, lucky that I bumped into Jenny again in the pub. I was lucky that Jess and Victoria were there for me. \n\nI met two lovely young girls who gave me a family of sorts, a family that I had not thought that I'd ever have. I was lucky that one of those two girls became my friend and confidant. I love Jane in a way that I've never understood. \n\nThe other girl was also special. I fell in love with you the first time that I met you properly. Then a few years later you cared for me and nursed me after Jenny died. I realised that summer that I'd fallen in love with you in a different way and I was tortured by guilt about how stupid and inappropriate my feelings were. You were never far from my thoughts and I was so happy when you came to visit me and then to live with me. It was beyond my wildest dreams that I would be able to spend a few years with you while you were at university. \n\nThen one night we kissed and my world tilted on its axis. I never understood why it happened that night, but maybe I was just lucky again. A short time after the kiss you asked me to marry you. I had no idea what I was saying that night, but I knew deep inside of me that is what I wanted. I put my sensible brain into gear and told you no. I'm glad that I did, it was wise, but a part of me regrets it. I wish that we'd got married in Vegas but that would have been cruel to Jess. We got there eventually and it did us no harm. \n\nIf Alex had looked the other way and Jenny had not confronted the man with the knife my life would have been so different. My relationship with you would have been different and none of us can know how that would have worked out. I wish that Alex and Jenny had not died, they didn't deserve that. I loved them both and it still breaks my heart to think of them. \n\nMy fear was always that you would come to your senses and find someone your own age. By the time we actually did get married I knew that it was for keeps. You had shown me your love and devotion in so many ways, so many times that I knew how you felt. \n\nWe had all of those years together and I experienced such joy, fun and love with you. So I think that I've been pretty lucky. \n\nI have no idea how your life will be when you read this letter, so all that I can do is ask you to remember me fondly, but move on. You can find new love, experience joy and happiness once again. I know this for sure because it happened to me. \n\nI wish you well and I hope that as you read this letter I will be sitting on a cloud with Alex and Jenny sipping chilled wine and watching over you. Maybe I'll be waiting for you so that I can kiss you once again, but I hope that is a long way off. \n\nThank you for a wonderful life, but it's time for you to move on. \n\nAll of my love, \n\nMilly X \n\nI was in tears before I got halfway through. I lay beside Fiona and held her, neither of us spoke and soon we both fell asleep. \n\nMemory box \n\nI found Fiona in the study sitting on the floor holding a pair of pale blue panties. She told me the story of how and why she came to steal them. \n\n\"What else have you got in there?\" \n\n\"Lots of things. A lip gloss that Milly gave me the night we met Jenny for the first time. A ring of Jenny's, the garter that I wore at our wedding, a stone from the Grand Canyon, a roulette chip from Vegas, some boarding cards, the key fob from my Audi, all sorts of stuff.\" \n\n\"What were you looking for?\" \n\n\"I wasn't, I was retiring this T-shirt. It started off as mine, became Milly's and now it's mine again, but it's done. I just couldn't bear to throw it out.\" She folded it, placed it in the box and closed the lid. She looked up at the picture wall and I sat beside her. \n\nI looked over at the pictures and sighed, \"As long as we have these, we'll never forget them or the times that we had, the sorrow and the joy, the laughs and the love.\" I rested my head on Fiona's shoulder and she wrapped an arm around me and kissed my head. \n\n\"I know, I love you.\" \n\nBaby Milly \n\nFor the next two years, we'd been together as lovers and we were very happy. I'd got the person that made me spark and she'd re-emerged, like her old self. We were living in the home that Milly and Fiona had created and I loved it, just as I had from the day the two of them had moved it. One quiet evening Fiona turned to me and in a low hesitant voice, said, \"Jane, I need to ask you something, serious stuff.\" That opening line made me a little nervous, I worried that Fiona might still be fragile, but I may as well face this head-on. \n\n\"Okay, love what is it?\" \n\nShe took a very deep breath, \"I'd like us to have a baby, for me to carry it, and for us to raise it. We've been lucky with great parents; Milly was a proper friend and aunt to us. I think that we could try to do what they all did for us.\" ",
        "That took my breath away; I'd not been expecting that and the words had barely registered in my brain, but I knew that she was right. \"Okay, I agree.\" \n\nIt was a year later that we set off to the hospital. We were ready; we had a nursery, clothes and toys. Fiona was nervous and I was excited, we were going to have our own little girl. \n\nJess and Victoria peeped round the door and then came over to the bed. Jess smiled as she asked, \"Are you okay?\" Fiona nodded and I saw them both look down at the beautiful little bundle that Fiona held close to her breast. \n\n\"Would you like to take her?\" Jess took the baby into her arms and Victoria leaned in to get a better look before she took Fiona's hand. \n\n\"Oh, Fiona, I'm so proud of you, she's gorgeous. Have you thought of a name for the little one?\" \n\nFiona nodded, I saw a tear in the corner of her eye, she paused, \"I'd like to you meet your granddaughter, Milly; Milly Victoria Jess Scott. It would've been Milly's birthday tomorrow.\" \n\nJess took a pause; there were tears forming in her eyes as well as she looked down, \"How lovely to meet you, Milly. I hope that you're as wise, funny, loving, talented and beautiful as your namesake, my little one.\" \n\nVictoria hugged me as I stood beside the bed holding Fiona's hand. The two of us would love and care for this Milly as much as Fiona and I had done for the other one. \n\nThe End \n\nThis is the end of Milly Scott's life and story. I fell in love with Milly soon after I started writing about her and despite the fact that she is a fictional character, I'll miss her, but it had to end. There will be another story about Fiona and Jane's daughter in due course and I have some ideas for spin off stories. \n\nThank you for reading, I love reading your comments."
    ],
    "authorname": "sandy_paris",
    "tags": [
        "caring",
        "grief",
        "lesbian",
        "lesbian romance",
        "love",
        "recovery",
        "sisters",
        "tragedy"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/milly-scott-pt-05-an-ending-and-a-beginning"
}