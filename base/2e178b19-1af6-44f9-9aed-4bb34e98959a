{
    "title": "Fluffer in Training Ch. 06",
    "pages": [
        "Ch. 6\n\nAlan directed Rachel to the big ensuite bathroom while he took a shower in the other bathroom. He'd handed her some clean towels and left out a variety of items he said might be suitable for her to wear to bed. He'd explained that he often had women stay over, a number of who had left various garments at his place. He told her to take her time, and then to join him in the bedroom when she was done.\n\nPeeling off the wet singlet, Rachel lavished in the unexpected pleasure of using his huge walk-in shower. The glass and gray marble structure was like nothing she'd been in before. She turned on the dual shower heads and luxuriated in the feeling of the hot stinging pellets raining down on her. The big fluffy towels he gave her felt incredibly soft and warm as she dried herself. A hair dryer on the vanity helped get her lustrous black locks in shape. She opened her purse and touched up her makeup, taking extra care with her eye shadow and lipstick. She hoped she looked more grown up and glamorous than usual\u2014she wanted to look good for Alan, especially after all the trouble he was going through for her.\n\nSatisfied with her face and hair, she looked through the various items he'd set out for her to choose from. It was all sexy lingerie, in a variety of colors and styles. She checked the sizes, smiling as she noticed the things Alan had set out for her were mostly bigger sizes that would fit her buxom form. She finally selected a sapphire blue chemise of glistening satin, edged with delicate white lace. The slip-like garment fit her nicely, if just a little too snug. Thin white spaghetti straps went over her shoulders, the satin cups barely able to contain her girls. The bodice fit snugly around her waist, and then flowed out enticingly over her wide hips. The lace-trimmed hem ended high on her thighs, a teasing vertical slit rising high on her hip on the front of the left side. She liked the look of that slit as she surveyed herself in the mirror, the smooth skin of her upper thigh coming provocatively into view as she moved. She adjusted her girls one more time, the cool satin feeling wickedly delicious against her breasts. Almost forgetting, she reached into her purse and pulled out another hairband, tying her inky tresses back in a nice tight ponytail. If she was going to be sucking the porn star's cock all night long, she wanted to make sure nothing got in the way of her duties. With a final look in the mirror, she turned on her heel and entered the bedroom. The only light in the room was from a lamp on his bedside table, the light giving off a soft golden glow that gave the whole room a sensual warmth.\n\n\"Oh my,\" Alan said as he watched her approach. He was sitting up against a stack of pillows piled against the headboard in the king-size bed, the sheets pulled up to his waist. He gave an exaggerated wolf whistle as he took in her voluptuous curvy form, gorgeously displayed in the sexy chemise. \"Rachel, you look fabulous. Blue is definitely your color.\"\n\n\"I'm glad you like it,\" the young girl said, doing a little pirouette. \"Are you sure the woman it belongs to won't mind me wearing it?\"\n\nAlan gave a light laugh. \"Oh, I don't think the woman that belongs to will be coming back anytime soon. Not with the political office her husband has these days. Let's just say she's in the news a lot\u2014and I mean a lot. No, that slip is yours from now on, if you want it.\"\n\n\"Really, I can really have it?\" Rachel asked, her fingers tracing along the lace-trimmed edges of the overflowing bra cups.\n\n\"Yes, it's all yours. It looks a lot better on you anyways. I love the way you fill it out. And that slit at the top of your thigh, well, let's just say it looks pretty hot.\"\n\n\"Thank you, Alan. I love it.\"\n\n\"All right then,\" he said, picking up the remote from his bedside table. He turned on the wall-mounted TV opposite the front of the bed. \"I'm going to watch the news for a while, and then I need to get some sleep after that. I've got an appointment at nine with my personal trainer at the gym. No rest for the wicked, as they say. So like we talked about, you can suck on my cock all night if you want. If you want to lie up beside me and go to sleep, that's fine too. I'll leave that up to you. Okay?\"\n\n\"Yes. I appreciate that you said I can just sleep if I want to, but I'd really like to suck on it as long as you'll let me.\"\n\n\"It's yours for as long as you want. Okay, there's the channel I was looking for,\" he said, setting the remote down on the table beside him. He drew back the covers from his naked body, drawing up his legs and letting his thighs roll open to each side. \"Okay, you can get started.\"\n\nHe reached down and lifted his limber dick, the immense cylinder of flesh making Rachel's mouth water as she looked at. Like a bear to honey, she was drawn in instinctively, getting to her knees on the big bed and crawling up between his widely-spread thighs. She lay down on the cool sheets and made herself comfortable, planning on being there for a long time\u2014a very long time. He'd showered in the other bathroom and his body smelled of citrusy soap and his own clean masculine scent. It filtered into her senses erotically, the pure manly fragrance making her blood rush already.\n\nRachel flicked her eyes up, seeing him concentrating on the TV, the newscaster's voice coming to her from the background. She didn't care about that\u2014all she cared about was servicing his enormous cock. He let go of his dong as she wrapped her own fingers around the trunk-like shaft. She lifted the mushroom-shaped crown to her mouth, pursing her lipstick-covered lips forward and kissing the tip lovingly. She started to make love to the sensitive knob, rubbing it all over her face and licking it, watching it as it started to puff up and grow. She took her fingernails and scratched teasingly around the base of his rising prick, feeling more blood pulsing into the steely shaft, the huge cock swelling and extending right before her eyes.\n\nJesus Christ, how does she do that so fast?, Alan thought to himself as he looked down, the plump young girl rolling his stiffening pecker all over her face. The girl was amazing, her lips and hands like nothing he'd experienced before. She was so much more enthusiastic and better at sucking cock than any porn star he'd ever been with. The only one who'd even come close was Mrs. Stevens, the math teacher he'd had in his senior year of high school. He turned his gaze away, trying to concentrate on the news, his usual routine before shutting off the light and calling it a night.\n\nFeeling the immense barrel of his prick getting harder and longer, Rachel couldn't wait any longer\u2014she had to have it in her mouth. She opened her bright red lips wide, sliding the growing head right into her hot wet mouth. \"Mmm...\" She couldn't help but purr in satisfaction, feeling like everything was the way it should be, this gorgeous man's huge cock filling her loving mouth. She rolled her tongue all around the pebbly glans, moaning softly in her throat as she felt it puff up even more.\n\n\"Oh fuck,\" Alan said, giving up on the news as he looked down at the pretty girl sucking his cock. She was incredible, her mouth and hands taking him to heights he never thought imaginable. Her mouth was incredibly hot and wet, and velvety soft, and she seemed to know instinctively what to do from one minute to the next. He slid further down in the bed, getting more comfortable as she moved with him, now bobbing her head up and down over his thrusting erection.\n\n\"Oh my God,\" he said as he lay back and threw his arm over his eyes, surrendering to the amazing sensations her mouth was bringing him. She was the perfect cocksucker, knowing just when to lick, and when to suck, not too hard, not too soft\u2014she was like the baby bear in the children's story\u2014just right. She kept bobbing up and down, sucking his cock slavishly as he lay back and let her service him. He felt her hand move around the thick root of his cock again, those sharp fingernails scratching slowly, teasingly, at the skin circling the base. That was all it took to send him over the edge.\n\n\"OH FUCK, I CAN'T BELIEVE THIS,\" he said as he started to go off already. A thick rope of cum spewed from the tip of his cock, her head lifting up slightly as the powerful shot caught her full in the back of her mouth. The initial shot was quickly followed by more volleys of sperm-laden semen, her cheeks quickly becoming bloated under the deluge. Alan knew that was one of the reasons for his success in the porn business\u2014no matter how many times he came, he always shot a lot. And under this girl's considerable talents, he knew he'd be filling her belly once more.\n\n\"Ehmm...ehmm...\" He lifted his head slightly and looked down as she started to squeal, seeing one of her hands busy down between her legs. His head dropped back onto the pillow as he continued coming, firing wad after wad into her eagerly-sucking mouth. His hips were bucking up into her mouth as she sucked him ravenously, pulling every creamy morsel out of him. After what seemed like a full minute, a final shudder tripped down his spine, the tingling sensations from another amazing climax flowing slowly out of his muscular body.\n\n\"Oh God, Rachel. You are incredible, girl. You can suck cock like nobody else, you know that?\"\n\n\"Thank you, sir,\" the pudgy girl said, slipping her lips off his spent prick and rubbing it lovingly all over her face.\n\nHe smiled down at her, blissfully content. \"Okay,\" he said, reaching over and using the remote to shut off the TV. \"I'll leave the light on so you can see if you want, but I really have to get some sleep now. Let's arrange these sheets so that we're both comfortable.\" Alan pulled a couple of the stacked pillows out from beneath his head, and then rearranged the sheets, covering most of his body but leaving the area around his midsection open. Rachel did likewise, pulling the sheets around her, but making sure she could breathe freely while positioned between his spread legs.\n\n\"All right, are we all good?\" he asked once she'd settled down between his thighs, her hand softly caressing his spent member.\n\n\"Yes. Thank you, Alan. Thank you for doing this for me.\"\n\n\"That's fine, Rachel. Like I said, feel free to do what you want. But right now, I need to get some sleep. Good night.\"\n\n\"Good night,\" Rachel replied softly, lying still between his legs, her fingers tracing lightly over the full length of his long heavy cock. Within just a few minutes, she heard him breathing deeply and regularly as sleep overtook him. She lifted her head slightly and looked at him, his handsome face looking peaceful and serene in the lamplight. Smiling to herself, she turned her attention to his incredible cock, knowing it was hers to suck on all night long.\n\n\"We're going to be best friends tonight,\" she whispered under her breath, bathing the head of his dick with her hot breath as she moved in close. She remembered what he'd said: \"I know my cock, and it will probably stay hard for as long as you suck it.\" She wanted to see if that was true. She gently slipped her lips back over the heavy knob, pushing a big gob of spit forward in her mouth to bathe the sensitive glans. She started working it, rolling her tongue all over the pebbly surface as she sucked at the same time. Within a minute, she felt his pecker start to respond. Once again, it started to fill, pushing her head backwards as it grew and grew. Soon enough, it was totally erect, the shaft as big and hard as a thick steel pipe. She closed her eyes and rubbed the mammoth dick all over her face, luxuriating in the feeling of the precum oozing from the tip and clinging to her soft skin.\n\n\"I love that,\" she said quietly to herself, flicking the tip of her tongue into the yawning red eye and drawing out his flowing cock-sap. She swallowed, loving the feel of the slimy fluid sliding silkily down her throat. Wanting to test out his theory about his cock staying hard, she released his erection entirely, watching it slowly start to deflate. Once it was lying heavy and limber on the sheets, she started in on it again, the dormant monster rapidly hardening under her skilful touch and sucking mouth. She played with this phenomena a number of times, watching his gigantic prick rise and fall, rise and fall. Finally, she wanted more, wanted to feel the magnificent slab of meat filling her mouth once more until it went off, feeding her that hot thick cum she knew she was addicted to already. So, she took it in her mouth and kept sucking, his enormous cock becoming a weapon of pleasure in her mouth. She slipped her fingers beneath the hem of the chemise, finding her pussy dripping wet. She kept working his cock, bobbing her head up and down, lathering it with saliva, feeling it throb and pulse between her lips. Her fingers were busy in her cunt, sliding in and out, her slimy juices coating her whole hand. She reached up with her index finger, finding her clit fiery hot and throbbing. She pinched the sensitive button, feeling the explosion start.\n\n\"Ohhnnn,\" she moaned loudly as she came, her cunt gushing all over the sheets. When that climax waned, she kept her fingers moving, bringing herself to a second orgasm, and then another one, this time as she rubbed his huge cock all over her face. Temporarily sated, she sat up on her haunches, bringing her slimy hands to his prick. She started stroking the rigid shaft up and down as she bobbed her head, the craving for more of his cum taking possession of her.\n\n\"What the...?\" Alan muttered as he came awake, feeling his prick on the verge of exploding. He propped himself up on his elbows and looked down as Rachel flicked her eyes up to his, her glassy eyes burning with desire. As he watched her service him, she got those teasing fingernails working again, the provocative scratching driving him right over the edge.\n\n\"FUCK MEEEEE,\" he gasped as he collapsed back onto the sheets, flooding her mouth with cum. He totally unloaded again as she eagerly devoured it all, bringing herself off again as she swallowed every drop. When it ended, he immediately dropped off to sleep again, but she kept sucking.\n\n*\n\nLike she'd said she would, she kept sucking him all night long. When the morning light started to drift in lazily around the curtains, her lips were swollen and numb from the constant friction, but she'd never felt happier in her life. Like he said, he'd stayed hard as long as she kept sucking on him. He ended up feeding her three more loads during the night, waking up briefly each time. She lost track of the number of times she'd climaxed herself. She stopped counting somewhere around twenty. And now, she felt Alan stirring, her lips still working up and down on his erection.\n\n\"Jesus, you're still at it?\" he asked as he pushed himself up and looked down at her.\n\n\"Yes. I had the best night ever,\" she replied, cradling his cock in her hand and rolling it all around her face.\n\nHe looked down at his bloated cock, wondering how long she'd been sucking on him since the last time he came, but he could tell he had another load there primed and ready to fire. \"You want one more?\" he asked teasingly as he rolled his hips, rubbing his enflamed cockhead against her cheek.\n\n\"Oh God, yes,\" she hissed wantonly, her eyes hooded with sluttish desire.\n\n\"I want that throat of yours again,\" he said as he got to his knees on the bed, his huge prick thrusting out menacingly in front of him. \"Get up on your hands and knees and I'll hold your head like before. I'm going to slide it all the way down that tight throat of yours, and then when I'm ready to come, I'm gonna pull out and paint that pretty face of yours.\"\n\nRachel shivered at his domineering tone, but her pussy was tingling like crazy as she listened to his words, knowing she wanted him to do exactly what he'd said. She clambered onto her hands and knees right before him.\n\n\"That's it,\" he said as he reached forward and took her head in his hands. \"Lower your upper body and tip your head up...that's it...that's perfect.\" She did exactly as he asked, putting her mouth and throat in perfect alignment. He could see her quivering with desire, so he didn't wait. He pulled her head forwards, the flared helmet of his cock sliding deep into her mouth. He bumped up against those soft tissues at the back of her mouth, rolling his hips as he felt the incendiary heat of those tender membranes.\n\n\"Okay, take a deep breath. One...two...three...\" He pulled her head towards him as he gently flexed forward, his cock sliding right into her hot tight throat.\n\n\"Oh fuck, yesssss,\" he hissed, her throat embracing him like a hot buttery fist. She gave off a low moan, the sound emanating from deep in her throat and pulsing right through his driving prick. He pulled her mouth slowly towards him, inch by inch, until finally, her pursed lips were pressed up against his abdomen. \"Swallow.\" She obeyed immediately, the luxurious sensation running the full length of his cock. Without being told, she swallowed again, the rippling massage making his dick throb even more. He slowly flexed his hips backward, and she moved with him willingly. They got into a smooth rhythm as he long-dicked her throat, the full length of his enormous member sliding in and out of her clutching windpipe. Alan moved his hands downwards, wrapping her fingers around her slender throat as he face-fucked her. He loved feeling her throat bulge in and out beneath his fingers, his long hard cock filling her windpipe with each driving thrust.\n\nRachel had never felt her throat so full in her life, but it felt wonderful, knowing she was bringing him as much pleasure as she could. She loved him taking control like this, possessing her, working her mouth and throat as he pulled her head back and forth, getting ready to feed her his potent seed. She could feel her pussy gushing again, her body tingling on the edge of orgasm.\n\nAlan couldn't believe how hot and tight her throat was, and how easily she'd taken every last inch. She swallowed time and again, her clutching throat pulling at him, wanting him to go deeper, to fill her completely. She had her hands on his hips, pulling him even closer as she sucked him ravenously. He felt the semen speeding up the shaft of his cock, and knew exactly where he wanted this load.\n\n\"Aaaahhh,\" she gasped as he levered his hips backwards, his rigid erection popping out of her mouth wetly. He quickly wrapped his hand around his throbbing cock and pointed it right at her face, just as the first thick rope of brilliant white cum jettisoned forth.\n\n\"Yesssss,\" Rachel hissed as the flashing ribbon of cum pasted itself up the full length of her face, from her chin right up into her hair. A second rope of cum burst forth, this one pasting itself against her cheek. She felt herself start to come, her body trembling and shaking like crazy as he continued to shoot, painting her face with his thick milky cum. He pumped his surging prick, moving the spitting tip all over her face, the ribbons and wads of cum crisscrossing her face in a bizarre mosaic. Rachel stuck her fingers back between her legs, her pussy absolutely dripping as she hurriedly fingered herself, climaxing again as his spunk rained down on her pretty face. He absolutely pasted her face, the warm thick cum feeling luxuriously warm and heavy on her skin. She was gasping and quivering when he finally finished, dropping the oozing head of his cock right back into her mouth, letting her eagerly lap up the final few drops.\n\n\"Oh fuck, that was unreal,\" Alan said as he looked down at her, the pudgy girl nursing wantonly at his dripping cockhead. He let her continue as he slowly recovered, his labored breathing gradually returning to normal. Her face was a total mess, a thorough whitewash of milky cum covering every square inch, the heavy gobs now sliding sluggishly down the sides of her face and neck. The intoxicating scent of his masculine seed hung ripe in the air, like she'd just starred in a bukkake movie. He turned and looked at the clock on his bedside table. \"Oh shit, look at the time. I don't want to miss this session with my trainer.\" He pulled his dick out of her mouth and slid off the bed. \"You can use the ensuite again. I'll use the other bathroom. Sorry, but we've got to get going.\"",
        "As he walked out of the room, Rachel got off the bed and stepped into the bathroom. She looked at herself in the mirror, her face a total mess of swirling white cum, big huge wads dangling from her chin and ears, swaying obscenely as she leaned closer to the mirror. She couldn't believe how brilliantly white his cum was, knowing his semen must be chock full of sperm. There was something wickedly nasty about seeing herself covered with the stuff that made it all the more exciting. She reached up and pushed the clumpy wads of scum into her mouth, swallowing heartily, his potent swimmers finding a home in her belly. When she'd gotten it all, she took another quick shower, washing her own slimy juices off the insides of her plump thighs. Her meaty thighs were covered with the stuff, creaming herself so badly that her gooey nectar had slid down almost to her knees.\n\n\"That's better,\" she said to herself as she soaped herself up, lingering a little too long on her nipples, feeling them swell and stiffen beneath her slippery fingers.\n\n\"Sorry, Rachel,\" Alan's voice called out to her from the bedroom. \"I hate to rush you, but we've got to go. Your apartment is on the way, but we've got to go in the next few minutes.\"\n\n\"All right, just finishing up,\" she called out, turning into the pelting spray and rinsing off.\n\n*\n\nAs he drove her home, he gave her his cell number which she entered into her contacts. He pulled to the curb in front of her apartment building. \"Look, Rachel, if you need anything at all, don't hesitate to call. I mean it.\"\n\n\"Thank you, sir. I mean, Alan.\" She climbed out of the convertible, totally exhausted, but feeling higher than a kite.\n\n\"All right then,\" he said as he slipped the car into gear. \"I'll see you at the studio Monday afternoon. You're working, right?\"\n\n\"Yes. Paul said there are a few more days to shoot on Game of Bones, so I'll be there. Thanks again, and thanks for the ride.\"\n\n\"No problem. See you, new girl.\" He winked at her as he pulled from the curb, his car quickly accelerating away.\n\nRachel turned and entered her tiny apartment, naturally comparing it to the one she'd just come from. \"Maybe someday,\" she muttered to herself, feeling blissfully content. She made herself a cup of tea, the lack of sleep suddenly hitting her. She turned the kettle off before it had even started boiling. She went to her bedroom and changed into a big loose t-shirt, closing the drapes against the brilliant sunlight and pulling the sheets over her. Within seconds she was fast asleep.\n\n*\n\nWhen Rachel awoke, it was midafternoon, the day nearly gone. She roused herself from bed and took another shower, feeling groggy and needing to shake off the punkiness. She thought of Alan as she lathered up her big tits again, and this time, with no one to stop her, brought herself to another tingling orgasm, one hand working over her big guns while the other one rubbed her juicy cunt. She washed off again, and then dressed in a t-shirt and jeans, leaving her heavy jugs braless.\n\nShe grabbed herself some food, finally getting to that soup and grilled cheese she'd expected to have the night before. She ended her meager meal by downing a couple of chocolate bars she had stashed away, her craving for sweets winning the battle over her dwindling willpower. She did some schoolwork, but found it difficult to concentrate, her mind wondering back to Alan and her job at the studio. She thought back on her time with the starlet, Tanya, smiling as she remembered licking all of that warm thick cum off the young girl's body. And then she thought of Alan\u2014Justin Deeper\u2014the porn star. The porn star, but really just a regular guy\u2014a regular guy with a cock the size of Mount Everest. As she thought about his impressive tool, she found her hand subconsciously drifting between her legs. She slid her hand into her jeans, quickly rubbing herself off, but feeling restless, wanting more. After regaining her breath, she reached over and picked up her phone, finding Alan's number she'd just entered into her contacts. She thought of texting him, but she really wanted to hear his voice. She punched in his number.\n\n\"Hello.\" His warm masculine tone flowed right through the phone to her pussy.\n\n\"Hi, Alan. It's me, Rachel.\"\n\n\"Rachel. Hi. I didn't expect to hear from you so soon. Is everything all right?\"\n\n\"Yes, everything's fine. I know you said I'd see you at the studio on Monday, but I was just wondering...do you...do you think I could have another lesson today?\"\n\nRachel got nervous as there was a temporary pause on the other end of the phone. \"Uh, well Rachel, I've got a date in a little while.\"\n\n\"Oh, of course. I'm sorry. How silly of me.\"\n\nAlan could hear the disappointment in her voice, her request for another lesson having initially surprised him more than anything. \"Um, hang on. I've got an idea. Can I call you right back?\"\n\n\"Sure, of course,\" she replied, her voice quivering with excitement.\n\n\"All right. I'll get back to you in a minute.\"\n\nRachel put the phone down and started pacing, wondering what Alan was doing. Two minutes later, her phone rang.\n\n\"Hello.\"\n\n\"Okay. I spoke to the woman I'm going out with tonight and told her about you. I mentioned that you'd called and I wondered how she felt about you joining us later this evening after we'd had dinner. She was very intrigued by the idea and says you're welcome to join us if you like.\" He paused, letting Rachel digest what he'd said. \"Well, what do you think?\"\n\nRachel had immediately thought about her encounter with Tanya, her first intimacy of any kind with another girl, and how much she'd enjoyed it. Rachel didn't hesitate in giving Alan her answer. \"I'd like that. That is if it's okay with you?\"\n\n\"I think it's a great idea. Listen, we're going for dinner first, and then back to my place after that. Why don't I call you when we're done dinner, and we'll swing by and pick you up?\"\n\n\"Okay. What should I wear?\"\n\n\"Don't worry about that, I'll have something for you. Okay, I'll call you later.\"\n\nAfter Rachel hung up the phone, she couldn't stop herself from smiling. If tonight was going to be anywhere near as great as last night, she couldn't wait.\n\n*\n\nRachel fretted from one thing to the next for the rest of the afternoon. She tried to do more school work, but it was hopeless\u2014she just couldn't concentrate. She was too nervous to eat much, but she did find a box of cookies in the cupboard that hit the spot. As time crept by, she changed from one outfit to another, nothing feeling good enough. She finally decided on a matching pink lace bra and panties, pairing that with a short-sleeved pink cardigan and white cotton miniskirt that she knew fit her well\u2014Mr. Dexter liked it well enough anyways, never failing to grope her lush curvy body whenever she'd worn it in his class. She put on the clothes she'd finally chosen, everything feeling a little tighter than she remembered. \"Damn cookies,\" she muttered under her breath, the swells of her breasts clearly visible above the top button centered over her straining tits. The skirt was no better, her curvy bum seeming to pull the hemline higher than she remembered. She pulled on a pair of white strappy sandals and waited, wondering if the phone was ever going to ring. Finally, at just past 8:30, her phone buzzed, indicating a text. She hurriedly grabbed it off the table. It was from Alan.\n\n\"5 min away, C U outside.\"\n\nGrabbing her purse, she locked up and hurried outside, not wanting to keep them waiting. In the darkness, she stood at the curb looking up and down the street, the warm air drifting around her like a comforting cloak. She spotted the headlights as he turned onto her street, recognizing the purr of the Mercedes engine as he quickly pulled over next to her. She looked into the car, a smiling face looking back at her from the passenger seat. Rachel felt her jaw almost drop to the floor. \"Carole?\" she said, shocked to see that Alan's dinner partner was the woman who was the studio's office manager, the same woman who'd made Rachel feel all tingly inside when she'd looked the young girl up and down.\n\nThe older woman saw the surprise in the girl's face. She nodded. \"Good evening, Rachel. I'm glad you'll be joining Alan and me tonight.\"\n\n\"You...I...I...\" Rachel stammered, totally flummoxed.\n\n\"You can get in on this side,\" Alan said as he climbed out of the driver's door and pushed his seat forward, allowing Rachel to climb into the convertible's tiny back seat. Feeling somewhat numb, Rachel got in the car, her eyes going from Carole, to Alan, and back to Carole. The older woman turned slightly in her seat, looking back at Rachel.\n\n\"I was actually thrilled when Alan called and said you were interested in joining us tonight. He was telling me how much you want to work at doing well on your job, and how you and he had a profitable lesson last night.\" Carole paused as she looked over at Alan for a second, who nodded in return. \"I think that's great, and tonight, we'll do the same thing. He and I will give you some training, helping you with the type of work you'd be doing on the set.\" She gave Rachel a naughty look that had the young girl creaming her jeans in an instant. \"Would you like that, Rachel? Would you like learning from both of us tonight?\"\n\nRachel remembered the confusing feelings she'd had when Carole had looked at her the same way previously. And now, after her experience with Tanya, she knew why she'd felt that way. Still somewhat flustered, she answered truthfully. \"Yes, I'd like that very much.\"\n\n\"Well then,\" Carole continued, \"we should all be in for an interesting evening. One thing though, we just want to get this clear with you\u2014tonight is about you learning what's expected of you on your job. And by that, I mean it's all about us getting our pleasure by having you do as we ask. Whatever we ask you to do, we expect you to do it. Do you understand?\"\n\nRachel was surprised that Carole spoke so freely, but she found herself flushing with excitement at the thought of being their\u2014well\u2014their slave.\n\n\"Yes, I understand.\"\n\n\"Good. If you want to get yourself off at any time during the evening, that's fine\u2014but our pleasure comes first. Got it?\"\n\n\"Yes, miss.\" Rachel didn't know why she answered that way\u2014calling Carole 'miss'\u2014but it was similar to the same feelings she'd had last night with Alan when he'd spoken to her in a domineering tone and she'd called him 'sir'.\n\n\"Very good. That's what I like to hear. Now, it's probably best if the rest of the people at the studio don't know about Alan and me. We've been seeing each other for a little while, but we'd like to keep it from the others right now. Do you think we can trust you to keep our little secret?\" She gave Rachel a conspiratorial wink as she smiled naughtily.\n\n\"Yes. Yes, miss. I can do that,\" Rachel replied without hesitation.\n\n\"That's good. It will be nice having you as our 'private girl' tonight. I only hope you can keep up with us.\"\n\n\"Oh, she can keep up all right,\" Alan replied, flicking a quick glance back towards Rachel, a smile on his face.\n\n\"I...I'll do my best,\" Rachel said, feeling herself getting excited already.\n\nA few minutes later Alan pulled into the underground parking garage in his building. He helped Rachel out of the car, and then went around and opened the door for Carole. Rachel watched as the older woman stepped forth, one long beautiful leg coming out first, followed by the other. In the darkness of the car, Rachel hadn't been able to see what she was wearing. She felt her breath being taken away as she now looked at what Carole was wearing. For their dinner date, the older woman had chosen a jet-black bandage dress, the panels of the dress fitting her classic hourglass figure spectacularly. The top of the sleeveless dress molded itself perfectly to her nicely-shaped breasts, the deeply scooped neckline showing a teasing hint of cleavage. The bodice nipped in waspishly at her waist, and then flowed out smoothly over the noticeable flare of her mature hips. The dress ended about mid-thigh, the older woman's beautiful legs nicely displayed in sheer black nylons. On her feet she wore black pumps, but these shoes were incredibly sexy, with a wicked pointy toe and rapier-like 5\" stiletto heels. Glittering drop earrings and a matching necklace made the look complete. Rachel was envious of the older woman's tall slender body, and how sexy and glamorous she looked in the whole outfit. She looked like she'd just stepped off the red carpet. Alan looked just as good, a trim-fitting navy suit and open-collared shirt making him look like a movie star as well. Rachel felt woefully inadequate in her sweater and skirt. She could only dream of owning clothes like those two.\n\nCarole smiled at Rachel as she slipped her arm through Alan's. Rachel followed behind as they made their way to the elevator. When they were inside and on their way up, Carole turned her face up to Alan's. He slipped his arms around her and they kissed passionately, as if Rachel wasn't even there. Carole gave off a low moan as they continued to kiss, her long fingers pressed against Alan's muscular chest. Rachel felt herself getting excited as she watched, envious of the two of them. As the elevator dinged at their floor, Carole finally stepped back from Alan.\n\n\"Whew,\" she said as she looked at Rachel, waving her hand in front of her face, \"that was nice and hot.\" Rachel nodded in return as Alan led them into his apartment. As soon as he'd closed the door, he pushed Carole up against the wall, moving in close and dropping his mouth to hers. The older woman dropped her purse and slipped her arms around his neck, returning his kiss as he pressed his body against hers. Rachel saw him slide his hand up the front of Carole's dress, squeezing her breast. The woman moaned, picking one long leg up and wrapping it around his hip, encouraging him. Her sexy shoe dangled provocatively behind him as she rolled her hips, teasing him with her body as she nipped at his lip.\n\nAlan reluctantly stepped back, a noticeable bulge in the front of his pants. \"I need to fuck this woman soon, Rachel. We're going to be putting you to work right away.\" Rachel stood there watching the two of them, her steaming box leaking like crazy. \"What you're wearing looks good, but like I told you on the phone when you asked what to wear, I said I'd take care of that for you. We stopped by the studio earlier and picked up some things from the wardrobe department. You'll find them set out on the bed in the spare room.\" He looked over at Carole, who was looking at Rachel with a hungry look in her eyes. \"We're both pretty good at guessing sizes, so what we put there for you should work. We got your shoe size off that sheet of detailed questions you filled out at the interview. Size seven and half, right?\"\n\n\"Yes, that's right.\"\n\n\"Off you go then,\" Alan said, gesturing to the spare room off the kitchen he'd shown her last night. \"Come and join us in the master bedroom when you're ready.\" He reached out and took Carole's hand, leading her towards his bedroom.\n\n\"I'd love to see you in the white one,\" Carole whispered breathlessly as she walked past Rachel, a lecherous twinkle in her eyes.\n\nRachel felt a shiver of excitement run down her spine at the way the woman looked at her. Carole gave her another wink as they walked away, the subtle gesture making another trickle of emulsion run into Rachel's panties. Feeling her heart pounding already, she turned and raced to the spare bedroom, eager to see what they wanted her to wear.\n\nShe felt like a kid in a candy store as she looked at the array of sexy lingerie covering the bed. There were all kinds of colors and styles, brilliant satins and enticing silk garments spread out before her. Next to the bed were a number of pairs of shoes\u2014all high heels\u2014with rakishly pointy toes and sky-high heels. She felt herself breathing raggedly as she surveyed the sexy clothing, her fingers tracing over one thing to the next. She spotted the white outfit front and center, remembering what Carole had said about what she wanted her to wear. Rachel picked up the garment and held it up in front of her. It was a heavily-structured merry widow corset, the main panels made of shiny satin that was cool to the touch. She could feel that the vertical ribs separating the panels covered stiff pieces of underwire, just like she could feel beneath the massive bra cups. Ribbon-like garters hung down from the bottom edge of the corset. She turned it over and looked at the size: 38E. She'd worn a 38DD for quite a while now, but her bras had been getting too tight lately. It was like Alan and Carole knew her better than she knew herself. She held it out, running her fingers over the huge formed cups, the cool satin feeling wickedly sensuous beneath her fingertips. She felt a naughty smile coming over her face, thinking to herself that this was just about the sexiest piece of lingerie she'd ever set eyes on. She couldn't wait to try it on.\n\n\"What else is there to go with it?\" she muttered under her breath as she looked down at what had been placed next to the corset. There were a matching pair of white g-string panties and pair of sheer white nylons. She held up the tiny g-string first, the front panel being barely big enough to cover her shaven mound. She'd never worn anything like that, but she was eager to see how it would look. She draped one of the nylons over her arm, the sheer gossamer fabric feeling heavenly light and wispy-soft against her skin. The tops of the nylons were a panel of delicate lace embroidery, which looked femininely innocent and daringly sexy at the same time.\n\n\"So beautiful,\" Rachel whispered quietly as she set the nylons back on the bed. Having decided on the white corset that Carole wanted her to wear, Rachel looked down at the shoes lined up beside the bed. Just like the lingerie on the bed, there were different colors and styles. Her eyes immediately zeroed in on a pair of white slingbacks, knowing they'd go perfectly with the rest of the virginal white outfit. Like the other shoes in the row, these had a deadly pointed toe and slender 5\" heels. Rachel loved the look of slingbacks, and these were just about the sexiest shoes she'd ever seen. She undressed, shucking her sweater and skirt in no time flat. She stepped out of her panties and unleashed her girls from the too-tight bra.\n\n\"This is so gorgeous,\" she said as she picked up the shiny white corset. She slipped it around her body, doing up the numerous hooks that would go in back. When she was done, she spun it around, adjusting it to fit her buxom form. She lifted her heavy tits and fitted them into the massive bra cups, the heavily-structured underwire pushing her voluminous breasts together and up spectacularly. She pulled on the tiny panties next, noticing they had miniature Velcro tabs over each hip, making it easy for them to be removed in a hurry. She drew the wispy nylons up her legs, loving the feel of the sheer fabric against her skin. They felt wickedly delicious against her full meaty thighs as she reached down and fixed the garters in place. The shoes were next, and she felt grateful to Carole and Alan as she slid her foot into place, the gorgeous shoes fitting perfectly. She turned and looked at herself in the full-length mirror on the opposite wall.\n\n\"Oh my God, Rachel, is that really you?\" she said under her breath as she looked at the ravishing beauty looking back at her. She never dreamed she could look so sexy. The corset fit her perfectly, the 38E size forming to her body like it was tailor-made. Her breasts looked amazing, pushed together provocatively to create a huge line of cleavage that drew her eyes like a magnet. The upper swells of her tits were billowing over the top of the merry widow, but she could feel that the size was just right\u2014this was the way the corset was meant to look. It made her chubby waist looked thinner than she would have thought possible, the vertical ribs doing their job splendidly. The corset flared out slightly before ending where it met her wide hips, her eyes following downwards past the skimpy panties to where the garters bit enticingly into the lacy stocking tops. The sheer white nylons made her legs look fantastic, the sky-high heels having something to do with that as well, making her gams look longer and leaner than normal. The sexy slingbacks added the finishing touch, making her look absolutely stunning in the complete outfit. Rachel ran her fingers up the front of the corset, feeling like a bride on her wedding night in the brilliant virginal-white garments. She loved the feel of her heavy breasts as she cupped them, hefting them inside the gorgeous corset, her nipples coming alive as she ran her thumbs over the stiffening buds.",
        "\"Oh my gosh,\" she said, finally breaking out of the trance she'd found herself in, her hands letting go of her big jugs. \"I better not keep them waiting.\" She was just about out the door when she remembered what was expected of her. She turned and grabbed her purse, reaching inside for one of her hairbands, spotting a single white one amongst the others. She chose that one, whipping her black hair up into a ponytail and securing it tightly.\n\nShe tapped on the door of Alan's bedroom as she stopped at the entrance, spotting the two of them standing next to his bed, kissing. Alan was naked, his rugged masculine form taking her breath away like it did every time she looked at him. Her eyes quickly went to Carole as they broke their kiss and looked towards her. The older woman looked fantastic, dressed all in black. Her dress was nowhere to be seen, but beneath it she'd been wearing an alluring black bustier. The vertical panels alternated between ones made of shiny satin, and ones with the satin covered with delicate black lace. The bra cups themselves were made of the same shiny satin, with a delicate ribbon of the same black lace trimming the edges of the cups. Rachel looked at the woman's chest, her breasts filling out the cups of the bustier magnificently. Rachel estimated her at a generous C-cup, and they suited her tall slender body perfectly. The cups of the bustier were cut daringly low, barely covering the woman's nipples and areolae. The upper swells curved enticingly, making Rachel's mouth water as she looked at the woman's impressive chest. Rachel let her eyes wonder down, following the lines of the bustier as it nipped in at Carole's waist, emphasizing her hourglass figure. The bustier ended there. Beneath it, the older woman wore a pair of sexy French-cut black panties, the leg openings cut sinfully high on her broad mature hips. Her legs were encased in black thigh-high stockings with delicate lace at the top, the wide elasticized bands gripping the woman's upper thighs snugly to stay in place. Her legs were long and perfectly-shaped. Rachel knew Carole must have been a model as some point. She wore the sexy sky-high pumps she'd been wearing earlier, as well as the glittering earrings and necklace. The whole outfit breathed of sex.\n\n\"You're just in time,\" Carole said, stepping to the side, showing her hand stroking up and down Alan's rising cock. \"You look lovely, Rachel. I knew the white one would look great on you. Don't you think so, Alan?\"\n\nAlan looked at Rachel, his cock pulsing in Carole's hand as his gaze zeroed in on Rachel's chubby body gloriously on display in the sexy outfit. \"Oh fuck, yeah.\"\n\nCarole felt his reaction as his cock got even harder, smiling to herself as she continued to slowly stroke his stiffening prick. \"Come here, girl. I want to see you suck him before he gives me every hard inch of that beautiful cock of his.\"\n\nMesmerized by the two sexy people before her, Rachel stepped across the room and automatically dropped to her knees in front of them. Carole pulled Alan closer and presented the tip of his surging dick to Rachel. The young girl immediately opened her mouth, knowing now to stretch her jaw as far open as possible to take his massive girth.\n\n\"That's the way,\" Carole said, using her hand to stuff the bloated head right inside Rachel's open lips. The young girl immediately closed her lips down past the rope-like coronal ridge, feeling the huge knob fill the space between her tongue and the roof of her mouth. She flogged the monstrous cockhead with her tongue, feeling his delicious precum seep from the vent at the tip of his prick onto her eagerly-waiting tongue. \"That's a good girl. Let me see you suck it while I jerk it off at the same time.\" Rachel looked up to see the older woman looking down at her, a bewitching look in her sexy eyes, letting Rachel know who was in charge here. Rachel loved the look on Carole's face, loved knowing she was here to serve these two, wanting to do whatever they wanted her to. She closed her eyes as Carole started pumping his shaft back and forth, forcing more of his slithering goo to ooze forth onto her tongue. Rachel loved the tartness of his cock-honey, sucking for more, her tongue writhing all over the engorged head.\n\n\"Let's see you take a little more,\" Carole said, pulling Alan closer as she pumped her hand back and forth, the front of her hand now hitting Rachel's pursed lips as she shoved a couple more inches of the steely-hard barrel into the girl's hot wet mouth. She smiled up at Alan as the plump girl started whimpering blissfully as she sucked. Alan could feel her tongue fluttering against his cock, her cheeks caving in as Carole pumped his cock back and forth. With what Rachel was doing already with that magical mouth of hers, he knew he couldn't take much longer\u2014and he wanted to fuck Carole badly. They'd been going at it without anyone at the studio knowing for over a month now, and she was an amazing fuck. She was the definition of a hot MILF. She was in her mid-forties, but man, did she know what to do in bed. She was insatiable, and so fucking hot he thought she should teach a course to all the girls in the porn industry. She never seemed to get enough, and she was one of the few who could take every last inch of his huge cock, and still want more. He'd been a MILF fan from his teenage years, and in his senior year of high school, he'd bedded his math teacher, Mrs. Stevens, first, and then three other married teachers followed after that. Mrs. Stevens has spread the word to the other teachers, the word about the tall 18-year old boy with the huge cock\u2014the boy with the huge cock and the prodigious talent to make her scream in ecstasy for hours on end. Alan had been fucking hot MILFs ever since, never looking back\u2014and Carole was one of the hottest.\n\n\"Okay, I'm ready,\" Alan said, stepping back and pulling his surging dick out of Rachel's mouth before it got too late.\n\n\"Just relax for second, lover-boy,\" Carole said, releasing his prick and turning to face Rachel, her hands fisted on her hips as she set her feet about shoulder-width apart. \"Now it's my turn. Take my panties off, girl.\" Carole's domineering tone and imposing stance made Rachel shiver, but she did as she was told immediately. Kneeling in front of the tall older woman, she reached up and slid her fingers beneath the waistband of the high-cut black panties. As Carole shifted her hips, she drew them down and off her long toned legs. \"That's a good girl. Now smell them.\"\n\nRachel obediently brought the woman's panties to her face, the warm womanly scent wafting into her senses erotically. The fragrance was intoxicating\u2014slightly musky and perfumy, but not offensive at all\u2014it was all woman. \"Lick them.\" Rachel responded to Carole's demanding tone, turning the panties inside out and running the flat of her tongue up the gusset. The material was soaked with the woman's juices, the acrid flavor hitting Rachel's taste buds in a delicious assault. Like she'd done with the starlet, Tanya, as soon as she tasted the heady elixir, she wanted more. She pressed the panties harder against her tongue, sucking at the sodden material, slurping noisily as she pulled the tantalizing morsels of nectar onto her tongue.\n\n\"Oh fuck,\" Rachel hear Alan mutter under his breath, but she was too carried away to even look up. She pushed the panties right into her mouth, sucking at the soaked cloth feverishly.\n\n\"I think she's ready for the real thing,\" Carole said, stepping right up in front of Rachel. She set her feet further apart as she reached forward, pulling the panties out of Rachel's mouth and tossing them aside. She slid her hands around to the back of Rachel's head, her long slender fingers fisting in the girl's hair. She pulled Rachel forward. \"Here you go. I think that this is what you really want.\"\n\nAs soon as she pressed Rachel's mouth to her bubbling snatch, the young girl was lost. Rachel slid her tongue eagerly between the woman's slick labia, the warm petals closing around her tongue as she instinctively feathered it deep into the woman's gooey canal. The scent and flavor of Carole's cunt-juice had set her on fire, and Rachel enthusiastically worked her tongue all around and inside the woman's shaven mound.\n\n\"Oh Jesus, you were right,\" Rachel heard Carole say to Alan. \"That mouth of hers is absolutely amazing.\"\n\n\"I know,\" replied, \"but I want you here on the bed. You can feed that gorgeous cunt of yours to her later.\"\n\nRachel felt Carole pull away from her working mouth as Alan picked the woman up and placed her on the bed. The older woman edged herself up until she was leaning on the stack of pillows in front of the headboard. Settled into position, she looked at Alan, the look of a sultry enchantress in her eyes. She slowly drew her knees up, and then let her nylon-clad legs roll open. \"C'mon, baby,\" she said to Alan, crooking her index finger at him, beckoning him enticingly, \"come and give Momma every hard inch of that big beautiful cock of yours.\"\n\nAs Alan climbed onto the bed, Rachel could see the pink petals of the woman's glistening cunt part as her thighs rolled open further to each side. Rachel felt herself salivating as she looked at the woman's beautiful pussy. It was cleanly shaven, the mound of her sex a warm pink, her fleshy inner lips a brighter shade of pink, and they glistened\u2014they glistened with a fragrant coating of her womanly nectar. Rachel could smell her cunt from the side of the bed. The rich vivid scent was sensual and alluring, making Rachel want to bury her face in it so bad that she felt her own pussy weeping uncontrollably, soaking the front of her tiny g-string panties.\n\n\"Oh yeah, let me work that big fat head inside me for a minute,\" Carole said once Alan positioned himself on his knees between her spread thighs and fit the engorged knob of his cock between her parted labial gates. Carole wriggled her hips, getting the crimson crown settled just inside her, her shiny pink labia circling the huge knob possessively. She rolled her hips, and to Rachel it looked like the woman was flexing her pussy, the lips seeming to grip and pull at the invading monster.\n\n\"Oh fuck, Carole. You are so fucking hot,\" Alan said as he looked down at their joined bodies. He reached down and wrapped his big hands around Carole's slender ankles, lifting her legs straight up. Holding her firmly by the ankles, he spread her long legs far out to each side, opening her right up for the assault he knew was coming. With her dagger-like stiletto heels pointed skyward, he shifted into position. \"I can't wait any longer\u2014time for you to get fucked.\"\n\nRachel saw the woman smile as Alan started to flex forward, the head of his prick disappearing from view into Carole's hot oily depths. It looked like he was going to split the woman in two, but Rachel saw her eyes glaze over with desire as he went deeper. She knew his massive prick was stretching her insides, the steely barrel of his prick parting the hot pink folds of flesh as inch after inch disappeared from view.\n\n\"Yes, give it to me,\" Carole hissed, her hands clutching at the sheets in a death-grip. Alan was not to be denied, insistently thrusting forward, pushing her legs up and further out to each side, spreading her apart like a wishbone. Rachel could see Carole panting excitedly, her body writhing and twisting as she pulled at the sheets while the huge cock went deeper, filling and stretching her slippery trench. Alan kept driving forward, until finally, his groin pressed against hers, his stallion-like cock buried to the hilt, the engorged head pressing up against Carole's cervix.\n\n\"Oh fuck, I'm gonna come, I'm gonna...OHHHHHHHHHHHHH,\" Carole groaned loudly, twisting and bucking as her climax hit her. She was thrashing about like a wildcat, her orgasm blasting through her like an atomic bomb. She was panting like crazy, her hands pulling the sheets up from the bed as she shook and spasmed.\n\n\"Oh my God,\" Rachel muttered under her breath as she watched, totally spellbound. She could see the muscles on the insides of the woman's spread thighs quivering like mad as her orgasm shot through her. Her shattering release went on for a long time, Alan punching his cock into her with rapid short strokes, stoking the furnace deep inside her. Before her climax ended, Alan drew his cock back and drove it in again, bottoming out once more.\n\n\"Oh fuck, yessss,\" Carole hissed as the two lovers got into a rhythm. Even with him holding her legs wide apart, she was able to flex and roll her hips, making sure his hammering cock rubbed against every square inch of her tight coital walls. She was panting like a runaway steam engine, but still fucked back at the young stud, her talented mature pussy gripping and pulling at him possessively.\n\nRachel could see Alan was getting closer himself. The intensity of their fucking was amazing. He leaned forwards, the older woman's legs now pressed up against his shoulders as he folded her up like a pretzel. Carole let go of the sheets and wrapped her hands behind his neck, pulling his mouth down to hers as she kissed him passionately. Rachel watched as Alan withdrew and then corkscrewed his hips as he drove forward, stirring the woman's insides like a batch of wet cement.\n\n\"OH GODDDDD...\" Carole threw her head back and moaned loudly as she came, flopping about like a ragdoll as Alan hammered her deep into the mattress. Rachel could hear the bed squeaking like crazy, the headboard bumping against the wall in a steady tattoo. But she knew neither of the two lovers heard it at all, they were too wrapped up in their own pleasure.\n\n\"Oh fuck, I'm gonna come,\" Alan said, pulling back one last time before pounding the hard fleshy stake between his legs deep into Carole's velvety love-pocket, getting it buried to the hilt just as he started to go off.\n\n\"Yessss,\" Carole hissed as she climaxed again, her hips twisting from side to side as she used the muscles inside her to pull every precious drop out of his overflowing balls.\n\nRachel saw Alan's buttocks clenching and unclenching as he poured his seed into the woman, his muscular butt making her mouth water as she thought about all that creamy cum he was dumping into the woman's hot oily snatch. He groaned and flexed as he unloaded, grinding his midsection up against Carole's, basting her insides like a Christmas turkey. Finally, his climax ended, and he collapsed onto the older woman, letting her legs slip out from around his body, her stiletto heels digging into the mattress on either side of his tall muscular form.\n\nStill on her knees beside the bed, Rachel stared, spellbound, listening to their ragged panting turn into longer deep breaths as they both recovered. She saw Carole look over Alan's shoulder at her, a nasty look in her eyes that made Rachel shiver, wondering what was coming next.\n\n\"I think it's time we put our clean-up girl to work,\" Carole said, pushing Alan back. He got the idea and slowly withdrew, his spent cock coming out of her gooey twat in a slippery rush. As soon as he got off her, Carole closed her legs tightly. He climbed off the bed and stood in front of Rachel, his semi-hard dick covered with a mixture of brilliant white semen and Carole's glistening cunt-honey.\n\n\"You know what to do,\" was all he said as he put his hand on the back of Rachel's head and pulled her into his messy crotch. Carole had propped herself up on one elbow to watch, a sly smile on her face as the young girl eagerly leaned forward and started licking Alan's cock.\n\nRachel was incredibly aroused, the two older people treating her like their sex slave. She was surprised that she found herself dizzy with excitement at the thought of it. She didn't hesitate when Alan started to pull her forward, eagerly sliding her tongue out of her mouth and running the flat paddle up the full lengthy of his tumescent dick, a huge gob of semen building on her tongue. When she reached the drooling tip, she drew her tongue back into her mouth, savoring the flavor of their mixed juices, feeling her taste buds come alive under the heady combination. She swallowed, the silky juices sliding luxuriously down her throat. \"Mmmm,\" she purred, enthusiastically bringing her mouth back to his sticky loins for more.\n\n\"That's a good girl. Get it all,\" Carole encouraged. Rachel didn't need any coaxing, licking up every drop that she could. She took his balls in the palm of her hand and licked their juices off his satin-smooth sack, and then licked at the warm crease where his leg met his body, and then his shaven groin. Every drop of semen and cunt-juice was now safely stored in her belly, a glistening sheen of her drying saliva was all that was left on his muscular body.\n\n\"I've got more of that for you,\" Carole said, crooking her finger towards Rachel. She eased herself back against the pillows stacked against the headboard, sitting up once more. Rachel thought she looked beautiful, still wearing the sexy black bustier and thigh-high stockings. \"I've been keeping it warm for you.\" She drew her knees up again, her stiletto heels digging into the mattress as she slowly rolled her legs open. Rachel couldn't help but crawl onto the mattress, hypnotized by the lurid sight of the woman's glistening inner thighs and pussy. It was a mess of cum, from both of them. Her shiny inner thighs were spackled with gobs of pearly semen, while a thick milky trail oozed from between her puffy cunt-lips, sliding slowly down her body towards the sheets.\n\nRachel didn't want that cum to go to waste by getting soaked into the sheets, so she crawled forward and lowered her face, plunging her tongue into Carole's drooling twat just in time. She made a sound like someone slurping up a strand of spaghetti as she drew the precious wad of cum into her mouth. She swallowed, giving off an unconscious purr of contentment as the clumpy goo slid down her throat.\n\n\"There's more. Get it all, girl,\" Carole said, rolling her hips teasingly. Rachel eagerly went back for more, pressing her face flush up against the woman's glistening mound, her tongue sliding deep into the woman's cum-filled channel. She felt Carole's hands on the back of her head, pulling her face even harder against the woman's dripping cunt. \"Oh my God, she's fantastic. I'm gonna let her make me come. Keep at it, girl. Just a little bit longer.\" Carole rolled her hips up as she pulled Rachel's eager mouth against her, grinding her pussy into the young girl's mouth. Rachel's tongue was driving her insane, spinning in slow tantalizing circles all over her steaming insides. Her juices were flowing onto the girl's tongue, eagerly drawn back and down to Rachel's waiting stomach. Rachel was devouring her pussy, making sweet oral love to it as she licked and sucked, almost trying to get her whole face inside Carole's dripping box.\n\n\"Oh fuck,\" Carole groaned deep in her throat, panting raggedly, her perfect tits heaving up and down in the sexy bustier. \"Yes...yes...yessssssssssssssss.\" She came quickly under the girl's skilful tongue, her wide mature hips bouncing up and down on the bed, happy to see that Rachel stayed right with her, licking furiously at her gushing cunt.\n\nRachel licked and sucked, pulling the gooey juices into her mouth, feeling her own pleasure level climbing as she swallowed. Overcome with excitement, she slid her fingers under the edge of her tiny panties, finding her own cunt absolutely dripping. She touched the protruding nodule of her clit, finding it fiery-hot and throbbing. She rubbed it, the slightest touch rocketing her over the top. \"Ohhnnn,\" she groaned like an animal as she started to come. She was trembling like crazy, but kept her mouth working, licking and sucking at the woman's overflowing trough.\n\n\"That's it, let it go. Come for me, girl. Come for me.\" Carole's words reached Rachel in a cloud of euphoria, her climax causing her to almost black out with pleasure. The intensity finally slowed, but she kept sucking and licking. Carole moved her mouth all around her loins, having the girl clean her just as thoroughly as she'd cleaned Alan, making sure the young girl had gotten every drop from her last climax, as well as all the spunk Alan had dumped into her. Satisfied, she pushed Rachel away. \"She is a hungry little thing, isn't she?\" Carole addressed Alan as if Rachel wasn't even there.",
        "Rachel was happy just the same, hoping she'd get to serve both of these people again soon. She was only too happy to be their 'clean-up girl'.\n\n\"See, I told you, baby,\" Alan said, sitting at the top of the bed next to Carole. He slid his arm around her, his hand toying with her breast through the bustier. He leaned down and kissed her tenderly, before both of them looked down at Rachel, still on her knees between Carole's spread legs. \"What should we do with her now?\"\n\n\"Well, you were telling me about her taking it all the way down her throat,\" Carole said, both of them still speaking as if Rachel wasn't there. \"I'd love to see that. And then once you've fucked her throat for a while, I want it back inside me again. You know it's gonna take more than that one time to satisfy me.\"\n\n\"Oh I know, I know,\" Alan said, getting up from the bed and standing at the side, his long limber cock arcing out before him. \"C'mon, Rachel, time to put those talents of yours to work.\"\n\nRachel turned on her hands and knees and moved to the side of the bed, her mouth right in front of Alan's semi-hard dick. Knowing what was expected of her, she leaned well forwards, and then tipped her head up, knowing she'd need her mouth and throat in perfect alignment in order to take his enormous cock.\n\n\"Is that the way you do it?\" Carole asked Alan.\n\n\"So far.\"\n\n\"Why don't you turn her over and get her to hang her head over the edge of the bed? I'd love to see you fuck that throat of hers that way.\"\n\n\"I like that idea,\" Alan replied, grabbing one of the pillows and setting it at the edge of the bed. \"You heard her, Rachel. Lie down right here.\" Rachel obediently complied, turning over on her back with her head on the pillow. She shifted backwards, until she felt her head start to go over the edge. \"Tip your head back just a bit more so that your throat's nice and...yes...that's it.\"\n\nWith her head hanging over the edge of the bed, she arched her back slightly, getting her throat aligned with her mouth, wanting to form a perfect channel for Alan's huge cock. With her back arched, it emphasized her tremendous chest even more.\n\n\"Jesus Christ, look at those tits,\" Carole said, getting to her knees on the bed and kneeling next to Rachel's laid-out body.\n\n\"I know,\" Alan replied. \"Not only are they huge, look at how round they are.\"\n\n\"They're so soft too,\" Carole said, sliding her fingers over the swells of Rachel's voluminous breasts. \"There's nothing better than the feel of a set of big natural tits in your hands. I'm gonna play with these babies while you fuck her throat.\"\n\nAgain they were speaking as if Rachel wasn't even there, but she didn't care. She was thrilled by the attention the two older people were giving her. And now, Carole's soft mature hands were swarming over her chest, her slender fingers sliding right down inside the cups of the corset and groping her tits. Rachel was just about to let out a soft moan when Alan spoke as he wrapped his hand around his heavy cock and brought it to her mouth. \"Open up, Rachel\u2014time for another feeding.\"\n\nRachel dropped her jaw, opening her mouth for Alan's assault. She felt the spongy head fit into her mouth, almost totally filling it. She closed her lips and immediately started assailing it with her tongue, lashing her hot spit all over the swelling crown.\n\n\"Oh fuck, she is so fucking good,\" Alan said, slowly flexing his hips back and forth, his cock quickly stiffening and lengthening.\n\n\"And these tits are spectacular,\" Carole added, reaching deep into Rachel's overstuffed bra cups and drawing both tits up and out of the corset, letting them go so they spread out over the full breadth of Rachel's broad chest, her rosy nipples pointing skyward.\n\n\"Nice, very nice,\" Alan piped in, feeling another pulse of rushing blood go straight to his loins as he looked down at Rachel's brazenly-displayed tits. He was rock-hard now, and wanted her throat. \"Okay, Rachel, it's time. Relax that throat of yours...one...two...three...\"\n\nCarole watched, a nasty look in her eyes as Alan flexed slowly forward, his big thick erection sliding smoothly into the chubby girl's throat. The girl's lips were stretched to the max, but by her little mews and whimpers, Carole could tell she loved it. The older woman looked down as Rachel's throat started to swell, the mushroom-shaped protrusion now extending further down her neck as Alan's prodigious member continued to disappear from view. Carole felt herself panting as she watched, the girl's swelling neck just about the most exciting thing she'd ever seen.\n\n\"Oh fuck,\" Alan cooed, \"almost there...almost...yesssss.\" He stopped with his prick buried to the hilt, his swollen nuts filling the girl's eye-sockets, the ballooning head of his cock probing the depths of her esophagus, her neck bloated like an inflated inner tube.\n\n\"Oh my God, she took it all,\" Carole said, in awe of what she was seeing. As she watched, Rachel swallowed, a tantalizing ripple visible as it ran down the length of her throat.\n\n\"Jesus, I love when she does that,\" Alan said, sliding his hips back, and then quickly feeding the full length into Rachel's beckoning throat again. He and Rachel quickly got into rhythm, his balls slapping noisily against her pretty face with every throat-filling stroke. Rachel was gyrating and twisting about on the bed, loving the feel of this hot man's huge prick filling her throat. The sensation was almost indescribable, but she knew she was bringing him pleasure, and she felt her own pussy dripping like crazy just knowing that. She reached up and back with her hands, gripping his muscular hips and pulling him closer towards her sucking mouth.\n\n\"She fucking loves it,\" Carole said, her hands continuing to run all over the plump girl's huge tits. She watched the girl's throat expand and contract, expand and contract, the thick pistoning cock of her lover almost visible beneath the girl's soft young skin. Carole couldn't believe how wickedly erotic it looked. Rachel's legs were thrashing about as she continued to suck, her pussy on the verge of exploding.\n\n\"She's being a very good girl,\" Carole said, looking up at Alan. \"I think she deserves a reward. How about you make yourself at home with these tits of hers while I work on her pussy?\"\n\n\"I think that's the least we can do for her.\" As Carole shifted across the bed and positioned herself between Rachel's flailing thighs, Alan reached forward, filling his big hands with Rachel's massive boobs, the sumptuously soft tit-flesh feeling exquisite beneath his fingers. Kneeling between the girl's spread nylon-clad thighs, Carole reached forward and undid the little Velcro tabs holding Rachel's tiny panties in place. She drew the g-string away, easily clearing the sexy garters that framed the girl's pussy enticingly. The g-string was soaking wet, and Carole took a good deep sniff, the girl's youthful scent wafting into her senses provocatively. She tossed the panties aside, looking down at Rachel's shaven mound, the girl's pussy glistening with her flowing juices.\n\n\"Just look at that pussy of hers,\" Carole said, leaning in closer. \"Those lips, so pink, so wet. And so nice and plump\u2014just like the rest of her. It's beautiful.\" She dropped down on her front, bringing her pretty face right up to Rachel's steaming love-box. The youthful girly scent seemed to wash over her in waves, with the heat coming off the girl's pussy warming her face instantly. \"Oh my goodness, she's so hot, and just soaking wet. I think I'm going to need a shower after this.\" With that, she dropped her face right onto Rachel's throbbing snatch, burying her mature tongue between the chubby girl's fleshy cunt-lips.\n\n\"Ohhhnnn...\" Even with her throat full of cock, Rachel let off an animal-like groan, her body flexing, her meaty legs scissoring about on the bed as Carole slid her tongue deep inside her, showing Rachel what she'd learned from all her years of experience. With Alan mauling her big tits and Carole's talented tongue working its magic in her youthful pussy, it only took a minute or two before the two of them took Rachel over the edge.\n\n\"UHHNNNNN,\" she moaned loudly as she started to come, her body quivering like a plucked guitar string as they worked her over at both ends. She could feel herself gushing, spraying her girly juices all over Carole's face as the woman never let up, her long mature tongue making Rachel climb the walls with pleasure. Alan tweaked her big nipples between his thumbs and forefingers, rolling the stiff buds around and around, the delightful sensations flowing to every nerve ending of her curvy body. He kept driving his raging prick in and out of her throat, letting her feel every hard inch as she continued to climax. As her orgasm started to wane, Carole shifted to her clit, nipping at it with her teeth before clasping it between her lips and sucking hard, the tip of her tongue bathing the sensitive nodule with her spit.\n\n\"OHHHHNN.\" Rachel came again, a second tremendous orgasm right on the heels of the first. The older woman's mouth was amazing, taking Rachel to heights of pleasure she'd never experienced before. This must be what they mean by ecstasy, she thought to herself as her body spasmed and quivered under the skilful touch of the two older people, her huge breasts jiggling and shaking erotically under Alan's teasing fingers, her nipples burning-hot against the palms of his hands. When the final tingling sensations coursed through her, they both stepped back, Alan carefully withdrawing his surging erection from her abused throat while Carole lifted her mouth from Rachel's soaked pussy.\n\n\"Time for more clean-up duties,\" Carole said, shifting over on the bed and bringing her gooey face down to Rachel's.\n\nRachel looked up, the woman's attractive face an absolute mess of her cunt-honey, the stuff glistening and shining from her chin to her forehead. \"Oh my gosh, I'm sorry.\"\n\nCarole smiled back at her playfully. \"There's no need to be sorry. I could tell you really needed that. But now, it's time for you to lick up all that creamy cum of yours.\" She lowered her face to Rachel's, surprising the young girl by bringing her lips right to hers, kissing her passionately.\n\n\"Mmm,\" Rachel mewed softly, loving the feel of the older woman's tongue sliding deep into her mouth, bringing with it a coating of her own juices. She sucked on the invading tongue tenderly, drawing the sweet juices into her own mouth. Rachel had never kissed a woman before, and she loved it, finding Carole's mature lips irresistibly soft and delicious. She never wanted the kiss to end, but Carole eventually pulled back, a knowing twinkle in her eye as she gave Rachel a little wink before pressing her sticky cheek to the girl's mouth. That wink made Rachel shiver with excitement as she proceeded to lick the sexy older woman's face, getting every bit of her shiny goodness cleaned off the woman's smooth skin.\n\n\"Oh fuck, I really need that cock again,\" Carole said breathlessly, moving up in the bed on her hands and knees, her gorgeous backside facing the foot of the bed, her glistening pussy framed attractively by the sexy thigh-high stockings, her killer stilettos looking tantalizing provocative as the sharp toes poked into the sheets. \"Give it to me, Alan.\"\n\n\"Fuck yes,\" the hunky man said as he got to his knees behind the sexy MILF, fitting the engorged knob of his raging prick between her dripping pussy-lips.\n\n\"C'mon, girl,\" Carole said, beckoning to Rachel. \"Your place is on your back with your face between my legs. Put that gorgeous mouth of yours to work on both of us as he fucks me.\"\n\n\"Yes, miss,\" Rachel said obediently as she scrambled into position, lying on her back beneath Carole, her mouth right beneath their connected bodies.\n\n\"That's it. Now let us feel that talented tongue of yours.\" Rachel slid her tongue forward, taking a long leisurely swipe over their joined bodies, licking both Alan's hard thick cock and Carole's tightly-stretched labia at the same time. \"Oh fuck, yeah. That's it. Fuck me, Alan. Fuck me hard. And you just keep licking, girl.\"\n\nAlan did as she asked, driving his surging prick the full length into the sexy older woman with one vicious thrust. Carole let out a breathy moan, but pushed back against him, the two of them quickly getting into a savage rhythm as they fucked passionately. Rachel stayed right with them, her tongue working over their connected loins, licking and sucking at them feverishly as they screwed like animals. She quickly got aroused again as she serviced them, her pussy leaking like crazy again. Carole could see it, reaching down and sliding her fingers all around the girl's dripping cunt, teasing her with her skilful hand. Carole came first, moaning loudly as Alan fucked her hard and deep. The older woman came again, her juices spewing all over Rachel's upturned face, the girl's tongue gathering in the creamy goodness of the two people fucking above her.\n\n\"I'm gonna come soon, baby,\" Alan said to Carole. \"Where do you want this one?\"\n\n\"Just dump it inside me, and then when you're done I'm gonna sit right down and feed it to her.\" Less than a minute later, Alan came, driving his prick to the hilt as he went off, filling Carole's hot oily love-pocket with a huge load. When he was done, he pulled his spent prick out, a huge slithering ribbon of brilliant white semen dropping down onto Rachel's upturned face. Carole sat back, wriggling her hips as she sat on Rachel's face, like a rider settling down in the saddle.\n\n\"There you go, girl. There's a nice hot meal for you,\" she said, grinding her hips down at the same time as Rachel eagerly feathered her searching tongue deep into the older woman's overflowing cunt. She sucked vigorously, drawing out every delicious drop of Alan's thick creamy baby batter. She couldn't believe how much the guy could shoot, the woman's gooey trench filled with the stuff. Rachel didn't complain, feeling herself getting more excited with each swipe of her tongue. Carole's fingers were back working on her pussy as she rolled her hips all over Rachel's face, her lithe body leaning forward as those long slender fingers worked their magic on Rachel's overheated snatch at the same. Rachel really lost it when the older woman went for her clit, rolling the tip of her index finger all around it.\n\n\"Uhn...uhn...uhn...\" Rachel came again, thrashing about beneath Carole's sexy mature body. The older woman's fingers felt amazing on her girly cunt, taking Rachel to two more spine-tingling climaxes, sitting on Rachel's face the whole time, making the girl take her to two more orgasms as well. Finally, she climbed off and sat back against the headboard, leaving Rachel lying there, here face and upper body covered with pussy juice and sweat, the plump girl's body flushed, her huge tits heaving as she fought to regain her breath. Rachel looked over to see Alan relaxing on an easy chair next to the bed, a beer in hand.\n\n\"C'mon, clean-up girl. Get to work,\" Carole said, nodding towards Alan. \"Get him ready. I want him to fuck me again.\"\n\n\"Yes, miss,\" Rachel replied, rolling her numb body off the bed and crawling towards Alan on her hands and knees. Alan let his thighs roll open for her to take her rightful spot between them, lifting his heavy dick and dropping it right into her mouth. Rachel got him hard in no time, her amazing mouth doing what it does best. He fucked Carole again. This time she got him to pump his load out all over her face and chest. As soon as he was done, she beckoned Rachel over, making the chubby girl gather up every scrumptious drop of semen with her tongue. She got Rachel to kiss her, the two women snowballing his precious seed back and forth, sharing equally as they both swallowed mouthfuls of his thick white cum.\n\nIt went that way for the rest of the night. Rachel couldn't believe how insatiable both of them were, especially Carole. The sexy older woman never seemed to get enough, and whenever Alan's cock wasn't in some part of her body, she made use of Rachel. The plump young girl lost track of the number of orgasms the older woman experienced while having Rachel service her. Rachel's tongue felt numb, but she kept going, doing as they both asked. She was thrilled to be with both of them, and relished the times when Carole used her own mouth and hands to pleasure Rachel. The woman was amazing, her experience coming to the forefront as her talents took Rachel to that level of ecstasy she'd experienced earlier a number of times more through the night.\n\nAlan eventually turned over and went to sleep, pulling the sheets over him. Carole sat up against the headboard and pulled Rachel back between her long sexy legs, making Rachel eat her for another hour before turning out the lights. Rachel finally went to sleep, Carole's hand cupping her big breast, her belly full of semen and pussy juice. She drifted off, blissfully exhausted.\n\n*\n\nIt was just before noon when Rachel awoke to the sound of the shower, opening her eyes and noticing Carole standing near the foot of the bed, sensually drawing one of the sheer black stockings down her longer slender leg. \"C'mon, sleepyhead. Join us in the shower. Alan's already in there.\" Rachel watched as Carole peeled off her sexy corset, dropping it on the bed and heading toward the bathroom.\n\n\"I'll be right there, miss,\" she said hurriedly, quickly getting out of bed and taking off her own lingerie. She entered the bathroom and walked over to the shower stall, the steamy air giving the room a warm sensual feel. She noticed both shower heads were going, Carole and Alan standing together, arms around each other as they kissed. She tapped shyly on the glass and entered.\n\n\"There's our girl,\" Carole said, giving Rachel a warm smile as she turned, her hand stroking leisurely along Alan's semi-hard dick. The older woman nodded to the shower floor. \"I think you know what to do.\"\n\n\"Yes miss.\" Rachel dropped to her knees and shuffled over until she was kneeling right in front of Alan. With her hand wrapped in a warm loving corridor around his prick, Carole dropped the head right into Rachel's eagerly-waiting mouth. The young girl closed her lips, enthusiastically setting to work, knowing exactly what her duties were. Within just a couple of minutes he was hard as rock.\n\n\"There, that's the hard cock I need,\" Carole said, pulling his stallion-like cock out of Rachel's sucking mouth with a POP! She pulled him over to the side of the shower, putting her back up against the slick marble wall. Alan reached down and put his big hands beneath the sexy MILF's upper thighs, easily picking her up. She wrapped her legs around his back, using one hand to steer the engorged head of his prick into the beckoning gates of her mature cunt. Once she had the broad flared knob situated between her clutching labia, she brought both hands up and slipped them around his neck, drawing his mouth down to hers in a searing kiss.\n\n\"Unggh,\" she moaned loudly as Alan drove his prick home in one fierce stroke, pinning her against the wall. Rachel saw the older woman lock her ankles one over the other behind his back as she surrendered herself to the intense fucking she knew she was going to get. Rachel remained kneeling next to them, the hot stinging pellets feeling heavenly as they rained down upon her. Alan started pounding it into Carole, long-dicking her, his immense cock drawing almost all the way back with each powerful stroke, the older woman's labia stretched obscenely around the steely barrel of his huge member. Rachel heard Carole squeal as she came, flopping about like a ragdoll against the shower wall, her mature face a mask of ecstasy as she climaxed, her head rolling blissfully from side to side. Alan kept hammering her against the wall, a wet slapping sound reaching Rachel's ears as they fucked. Carole came again, and then a third time, before Alan let out a loud groan and buried himself balls-deep, flooding Carole's hot oily depths with a massive load.",
        "He stepped back when he was done, both of them looking at Rachel as soon as he let Carole's legs down, the older woman's delicate feet touching the shower floor. Rachel didn't need to be told, crawling over and bringing her mouth to Carole's spunk-filled slit. She pressed her mouth flush up against the hot pink mound, sending her tongue into the gooey mess between the woman's legs. She got it all, but Carole kept her there, her hands on the back of Rachel's head, making her eat her to one more orgasm. When Carole had finished gushing onto her upturned face, Rachel turned to Alan, knowing he was waiting for her to clean his spent cock. She pressed the flat of her tongue against his sticky member, lapping and sucking up their combined juices. When she was done, they both helped her to her feet.\n\n\"I think our girl's going to do just fine, don't you?\" Carole asked, smiling at Alan as she reached for the soap and started to lather up Rachel's big heavy tits.\n\n\"Oh, I think she's going to do better than fine,\" Alan replied, filling his own hands with the chubby girl's huge breasts. The two of them worked on her together, both of them taking turns kissing her or mauling her lush curvy body. They made her come, and then twice more before they finally turned off the shower. Rachel was quivering so badly from her climaxes that she was barely able to stand, but managed to dry herself and get dressed, donning the pink cardigan and white miniskirt she'd worn the day before.\n\nThey went out for breakfast together, and then Alan dropped her back at her apartment on his way to take Carole home. Rachel climbed out of the convertible and raced around to Carole's side, leaning over the door to say goodbye.\n\n\"Thanks for everything you two have done for me, I really appreciate it.\"\n\n\"That's fine, sweetheart. It's our pleasure. Isn't it, Alan?\" Rachel was surprised when the older woman reached up and quickly plucked open the top button on her pink cardigan, sliding her hand right down inside the girl's top and groping her tits.\n\n\"It's definitely been our pleasure,\" Alan said, looking over with a smile as Carole's hand moved over Rachel's substantial chest.\n\n\"Just lean over a bit further, dear,\" Carole said. When Rachel did, she felt the woman's hand slide right into her overflowing bra cups, her fingers teasing her rubbery nipple.\n\n\"Jesus, these tits of hers are perfect,\" Carole said, turning to face Alan as she continued to grope Rachel. \"So Alan, do you think you've got one more load in there? There's something I want to do.\"\n\n\"Don't I always?\"\n\n\"Let's go inside.\" Carole drew her exploring hand out of Rachel's top as Alan pulled right to the curb and shut off the car. The three of them went in to Rachel's tiny apartment.\n\n\"Take off your sweater and get down on your knees,\" Carol instructed as soon as they had closed the door. Rachel obediently peeled off her top, her huge tits filling her pink bra, the 38DD that was a touch too small. Wearing the little white skirt she'd put on before they'd picked her up, she dropped to her knees, facing them, her heart starting to beat excitedly.\n\n\"God, those are gorgeous,\" Carole said, looking down at Rachel at the same time she fished Alan's prodigious member out of his pants. \"So big, and so perfectly round. C'mon, Alan, stick it in her mouth.\" With Carole's hand directing, the porn star's big prick was soon in Rachel's hot wet mouth, her cheeks caved in teasingly as she sucked, her head bobbing back and forth enthusiastically.\n\n\"Oh fuck, yes,\" Alan said, savoring the scintillating sensations flowing through him as the chubby young girl quickly brought his dick to full erection.\n\n\"That's it, suck it,\" Carole said, her hand pumping vigorously back and forth along the shaft of Alan's turgid cock, the top ring of her circling fingers bumping time and again against Rachel's pursed lips. It took only a few minutes between Rachel's skilful sucking and Carole's experienced hand for Alan to be ready to blow.\n\n\"Oh fuck. I'm gonna come,\" he warned, the delicious contractions in his midsection letting him know he'd reached the point of no return. At the last minute, Carole pulled his throbbing prick out of Rachel's avidly-sucking mouth and pointed it down at the girl's huge tits. She was just in time as the wet red eye at the tip seemed to yawn open and fill with milky fluid for a split second before a long thick rope of semen rifled forth, splatting audibly as it pounded down on the curvy upper swells of Rachel's tits.\n\n\"Yes, that's it. Cover her with the stuff,\" Carole encouraged as her hand jerked back and forth, pumping out rope after rope of thick white cream onto the chubby girl's big round tits. Rachel reached to the sides of her bra-encased tits, pushing them together, presenting her breasts as target practice for the lustful desires of the two people before her. She saw Carole smile wickedly as she continued to pump Alan's spewing prick, wad after thick gooey wad raining down on the young girl's chest. Rachel had seen Alan come a number of times by now, but even to her, this load looked huge. Carole kept pumping, and Alan kept shooting, until finally, the last drops of pearly semen oozed forth. Carole's hand slowed, and she shook her partner's dick forcefully, flicking the last drops of milky seed onto the girl's chest.\n\n\"Oh fuck, look at that,\" Alan said as they all looked down, their eyes feasting on Rachel's big round tits, every square inch covered with what looked like thick white paste. Milky gobs and swirling pearly ribbons of sperm-laden semen covered her chest from one side to the other, the thick heavy cum starting to run sluggishly into her cleavage and down the sides of her sumptuous tits.\n\n\"That's just what I wanted to see,\" Carole said, dropping to knees and burying her mature face in Rachel's cleavage. They could hear her slurping loudly, her lips and tongue running feverishly over Rachel's soft young flesh as she gathered up Alan's warm seed. With a mouthful of cum, she brought her head up and kissed Rachel, the two of them sharing the wealth. Alan watched both of them swallow some of his spunk, and then Carole dived down for more, filling her mouth and kissing Rachel again. Eventually Carole had licked up every savory morsel, both girls feeling content with their bellies full of cum.\n\n\"So, we'll see you at work tomorrow,\" Carole said, getting to her feet as she took a last leisurely swipe around her mouth with her mature tongue, not wanting to miss a drop. \"I hear they're going to be shooting the bukkake scene in the next few days. I guess in the story, they're going to capture the bitchy blonde queen, Hearsay, and give her what she deserves. After all, she's been fucking her twin brother all along, so, everybody in the Stark Naked army is gonna have a shot at her. I'm sure Paul with definitely want you around for that one. Don't you think so, Alan?\"\n\n\"He'll definitely need you and that perfect mouth of yours for that scene. You'll be getting a lot of cock that day.\"\n\nRachel felt her already-throbbing pussy give another little twitch, picturing a lineup of cocks, just waiting to use her mouth. Which takes us to the start of our story...\n\nTHREE DAYS LATER\n\n\"That's it, girl\u2014suck it. Just keep sucking. I'm almost there. Oh yeah, that's good. Okay, I'm ready to go.\" The young man pulled his rock-hard cock out of her mouth, leaving a slimy trail dripping down her chin.\n\n\"I'm next,\" another guy said as he stepped in front of her kneeling form. Before Rachel could think twice, the guy dropped the bell-shaped head of his prick between her gaping lips. She willingly closed her mouth around the semi-hard dick and started sucking, her tongue swirling over the pebbly glans as she bathed it with hot saliva. It quickly stiffened, swelling and extending deeper into her eagerly sucking mouth.\n\n\"Oh fuck,\" the guy said as he turned to the row of naked men standing behind him. \"This one is something special. Her mouth is like liquid velvet. You won't believe it.\"\n\n\"Here, let me try,\" the blonde-haired guy right behind him said as he pulled his friend back, the first guy's hard prick rocketing into the air, a shimmering web of saliva bridging the gap between the engorged cockhead and Rachel's full red lips.\n\n\"I'm good to go anyways,\" the first guy said. \"I can't believe how fast she got me hard.\"\n\nRachel turned to the new semi-hard cock in front of her, the blonde-haired guy stepping right up to her as he inserted the head of his dick between her ovalled lips. She closed her mouth, pushing a big wad of spit onto the pebbly surface of his glans, her tongue swirling over the surface of the sensitive knob. She brought her hand up to his stiffening dong and started pumping it towards her sucking mouth. The guy let out a low animal-like groan as his cock rapidly stiffened, a trickle of precum sluicing onto the girl's swirling tongue. She groaned with pleasure as the slimy cock-sap slid warmly down her throat, the masculine flavour making her eagerly suck for more. She was rewarded as another silky morsel pulsed forth into her mouth, her busy lips and tongue drawing hungrily from the seeping tip.\n\nRachel looked past the young man she was sucking to the line of naked guys behind him. She counted 16 more well-hung young men, all of them leisurely stroking their cocks. There was another line with just as many standing in front of Lori who was on her knees next to her, that girl's mouth and hands working just as hard as Rachel's. As Rachel watched, three guys from the back of that line snuck into Rachel's line, smiles on their faces as they watched her work, their hands toying with their waiting cocks.\n\n\"Oh fuck, she's amazing,\" the blonde-haired guy said as his swelling dick extended and got harder under Rachel's talented efforts. Rachel smiled to herself, feeling her panties getting wetter by the second as she sucked enthusiastically. She knew she'd be here for most of the afternoon, on her knees, working. It was still just her first week of working as a fluffer, and already they'd asked her to work on a bukkake scene. She knew her lips would be puffy and swollen by the end of the day, but she was loving her new job.\n\nTHE END "
    ],
    "authorname": "rmdexter",
    "tags": [
        "older woman",
        "dominant woman",
        "face painting",
        "cream pie",
        "bit tits",
        "big cock",
        "porn star",
        "cumeating",
        "cunnilingus"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/fluffer-in-training-ch-06"
}