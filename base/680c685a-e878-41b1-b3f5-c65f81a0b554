{
    "title": "Laura's Vineyard",
    "pages": [
        "On January 24, 1965, I reached the mature age of nineteen years and left Michigan State University in a snowstorm. It had snowed more than a foot and the drive south to Baroda took over six hours. I have reflected on that day upon more than one occasion in my life, and still marvel at how seemingly innocuous events can have such far-reaching repercussions.\n\nI had left school after one semester. It was not that I didn't like engineering. I had worked on cars with my uncle since I was fifteen, and I wanted to be an engineer more than I wanted anything else in the world. I had a singularly difficult problem with continuing my education. My father had died when I was ten, and he left few assets. Mom's salary as a secretary didn't provide all of the toys my friends owned, but had been sufficient to see us through my high school years. I had not been fortunate enough, or smart enough, to win a scholarship, and Mom had been able to save only enough for the first semester's tuition and expenses. I didn't want a student loan, so I decided to come home, get a job, and try again next year.\n\nI soon found that temporary employment in an inflationary economy was only a dream. I applied at all the factories in Benton Harbor, but as soon as I mentioned I was going back to school in the fall, the interviewer would relax and switch to idle chat. I tried finding farm work, but most of that was done by migrant labor from the South. In February, I took my draft physical, and the doctors discovered the twisted left leg that remained as a reminder of a childhood accident. They sent me home with a 4-F status and the embarrassment of explaining it to my high school buddies. I watched them board the bus for basic training, and soon was nearly the only guy my age left in town. I was also still without a job. I had six months to earn about three thousand dollars, or I would have to let another year go by. \n\nI found a two day job moving boxes of peaches at the local Co-op, but that wasn't going to do more than let me pay Mom back for the gas I'd burned in my search. On the last day, the supervisor told me that if I was interested, there might be another temporary job available. The next morning, I drove to Laura Hildebrand's grape farm. \n\nThe long, wide white rock drive ran in a horseshoe around the huge lawn, and the farm buildings sat along the curve. The twenty-odd acres of grape vines surrounded the farmstead proper, and the place looked run down. A huge red barn stood on the left, but the roof sagged and one of the double doors hung by one roller. I saw the headlights of an old Ford tractor gazing out of the shadows, but that dangling door would hold it captive until someone fixed it. The hayloft door hung down from it's hinges, and a half-dozen pigeons sat sunning themselves on the edge. In front of the barn, and joining the wide drive was a white rock area that must have covered at least an acre. The house wasn't much better, and must have been at least fifty years old. The mortar was crumbling between the cobblestones that formed the walls, and the enormous weeping willow trees around it probably made it dark for most of the day. The moss growing on the stone and cedar shake roof gave it a rustic look, but the facia was rotting away, and the porch hadn't been painted in years. In it's day, it was probably a beautiful house, but now it looked shabby and neglected like the barn.\n\nIn between the house and the barn stood a small replica of a chalet. I couldn't fathom the reason for such a structure, but I figured it was Mrs. Hildebrand's business. I was there for a job, not to criticize the architecture. I knocked on the back door of the house, and it was opened shortly by a woman in a long, grey wool dress coat. She was fifty or better, small in stature, and wore a man's winter hat with ear flaps that hid most of her silver-streaked brown hair. Her orange cotton gloves were about three sizes too big, and she tromped out on the porch in four-buckle overshoes. Her face was severe looking, as if she was angry with someone or something. She asked why I was there. The voice was just as severe as the face.\n\n\"Mrs. Hildebrand, I'm Terry Winters, and I hear you need some help with your grapes.\"\n\n\"I can't pay much, and you'll have to work hard.\"\n\n\"Anything is better than what I have now. How much is not much?\"\n\n\"Three dollars an hour, and all the hours you can work until the vines are trimmed. That'll be about a week, if you work fast enough to earn your pay.\"\n\nWell, it would be over a hundred dollars that I didn't have, and I had nothing better to do.\n\n\"When do I start?\"\n\n\"Monday morning at six, unless it's snowing.\"\n\nSouthwest Michigan has a peculiar winter climate that dumps inches of fluffy white snow on its occupants one day, and then warms enough to melt it the next. That weekend was typical of late February. The temperature rose to about thirty-five, and the snow turned to slush. The sun was barely up when I drove to Mrs. Hildebrand's, but she was already standing outside with a five gallon water can. She was dressed in the same garb as last Friday, and as I drove in, she started across the white rock. She met me as I got out of my car.\n\n\"Well, at least you're on time. Here's your shears. Ever trim grapes before?\"\n\nI told her I hadn't.\n\n\"Just watch me. It's not hard. There's just a lot to do.\"\n\nI followed her down the row, and she taught me how to cut away all of last year's growth and make sure the main vines were still on the wires. Half way through, we switched, and she followed me. She had to correct me a few times, but when we reached the end, she seemed satisfied, and moved over two rows. We started back through the field. Laura trimmed her row and I trimmed mine, and things seemed to be going quickly. By nine, however, the temperature had risen enough that the dirt between the rows melted, and soon we were slogging through mud. We finished one pass at about twelve and Laura announced it was time for lunch. \n\n\"I hope you brought something, because I don't have enough for two\", she said casually, and tromped off to the house. I went to my car and ate the peanut butter and jelly sandwich Mom had made for me. I got a drink from the water can, and sat back to wait. She came walking back across the drive after about twenty minutes, motioned me to come, and started back to the field.\n\nWe stopped when it was too dim to see the vines. I was feeling my lack of activity over the last five months. My legs were rubbery from struggling through the mud and my hand felt numb from squeezing the shears all day. The engineer boots I had worn had started to leak sometime that afternoon, and my feet were freezing. As she walked me back to my car, she said, \"You did pretty well today. Will you be back tomorrow?\"\n\nHer voice seemed a little more friendly. I assured her I would be back, and asked why she thought I wouldn't.\n\n\"Most young men don't want to work this hard. The last one left at lunch. I just guessed you might quit after today. I'd bring rubber boots tomorrow, though. That mud can get pretty cold.\"\n\nI went home and collapsed on my bed. Mom woke me for dinner, and I ate a little, but then went back to bed and slept until the alarm went off at four. I staggered to the john against the ache of my legs, and soaked in the shower for fifteen minutes. The bacon and eggs Mom fixed tasted good, and by five-thirty, I was on the road to Laura's.\n\nTuesday was the same, except that it stayed cold enough to keep the dirt frozen. We made better time, and by that evening, had finished a little over half of the field. I still ached when I moved in certain ways, but the rows of neatly trimmed vines more than made up for the pain. \n\nEach day was a remarkable repetition of the first. Laura wore the same clothes, had the same sour expression, and seldom said anything except for short instructions. She was a strange woman, I thought, but I was impressed by her ability to so easily do the work that was leaving me exhausted at the end of every day. We finished the field about ten on Friday.\n\n\"Well, Terry, I promised you a week's work, but we've finished the field, and I don't have anything else for you to do. I'll go get your money.\" She went to the house, and after a few minutes, came back out with a handful of bills. She handed them to me, and I grinned at her. The start of a smile crooked the corners of her mouth, but the sour expression quickly returned. \n\n\"That's a hundred and thirty nine dollars there, and you earned it.\" She paused for a moment as if resolving some internal struggle. \"You do good work, and I've been thinking. I need that door fixed on the barn. That ought to take you at least part of the day. You interested?\"\n\nThe door was a challenge. It must have been hanging there for several years. I found a bench in the barn with a few tools, and after a lot of effort and a few words I couldn't say around my mother, I got the door down. It took an hour to loosen up the rollers, and half an hour to get it back on the track. When I finished, it worked; it wasn't new, but, with some effort it would roll open and closed again. I went to the house, told Laura the door was fixed, and she gave me six more dollars.\n\nThat weekend, I splurged and bought a milkshake at the local restaurant. I was sitting at the counter nursing it along, when Tom Wilson sat down beside me. Tom was a close friend of mine, and was marking time until Uncle Sam called. He told me he had gotten his letter.\n\n\"Well, Terry, I go to Chicago next week. I probably won't be seeing you for a while, so keep your dipstick dry.\" As always, he laughed at his own joke. \"Hey, I hear you're working for Crazy Laura.\"\n\n\"Crazy Laura? I'm working for Mrs. Hildebrand, if that's who you mean.\"\n\n\"One and the same, pal, one and the same. She went off her rocker when her old man died, at least that's what my dad says. I worked for her last summer, but I quit at noon the first day. She'll work you to death. Even the Mexicans won't work for her. They think she's crazy, too. Except for the mailman and the kid who delivers her groceries, she never talks to anybody. She doesn't even have a car or phone! The grocery kid carries notes back to town for her.\"\n\n\"How come I never heard of her before?\"\n\n\"She's kind of a hermit, so I guess people just forgot about her. Anyway, I got to get home. Dad's planning a going away party for me. Watch your back out there, OK? Never know what that crazy woman might do.\" He was still chuckling as he walked away.\n\nMarch and April were dry months for jobs. I had a couple days work here and there, but I was a long way from serious school money. I had finished painting at the drugstore when the druggist handed me a piece of paper.\n\nThe note was written on yellow stationery, and the words were in the unmistakable flowing hand of a woman.\n\nDear Mr. Winters\n\nI could use some help in the grapes if you're available. I'll pay you the same as before. If you're interested, I will start at six tomorrow.\n\nLaura Hildebrand\n\nI drove through the chill, spring Michigan morning, and wondered what she had in store for me. Laura must have liked my work, or she wouldn't have called me back. She was waiting in the drive with the water can when I drove in. I noticed that the long coat had been replaced by a sweatshirt and loose jeans. Her hair was done up in a pony tail, but she still looked pretty severe. She didn't waste any time with \"hello\" or other small talk. She just handed me a hoe and started for the field.\n\nWe hoed until it clouded up and started to sprinkle.\n\n\"Well, I guess were done for the day\", she said in disgust. \"I need to get those grapes hoed before the weeds get up. If it doesn't rain, we'll go at it again tomorrow, same time. OK?\"\n\n\"OK, but why don't you use that tractor with the plow thing on the back? It would be lots faster between the rows. Then all we'd have to do by hand is between the vines.\"\n\n\"That plow-thing is a grape hoe, and that tractor doesn't run; hasn't for a couple of years. I don't have the money to get it fixed.\"\n\nShe sounded a little sad, and this was the first emotion she'd shown since I'd known her. For some reason, I felt sorry for her.\n\n\"Mrs. Hildebrand, you see that car I'm driving? Well, it didn't run when I got it, either. I saw some tools in the barn. Why don't you let me look at the tractor? Maybe I can fix it. If I can't, you don't have to pay me. If I can, well, I charge three dollars an hour. OK?\"\n\nI spent the afternoon checking out the Ford. The only thing I could find wrong, other then the mouse nest I cleaned out of the carburetor intake, and the stale odor of the gas tank, was a plugged up fuel line. I cleaned out the line and the plugs and made a quick trip to the gas station to fill up the can I found in the corner. The battery had gone dead after the years of sitting, so I turned on the ignition, and went around to the crank in front. I'd never done this, but my uncle had told me about cars with crank starters, so I figured I could surely start this tractor. I pushed the crank over the drive pin, and rolled the engine to top dead center. It took all my weight to pull the engine through the compression stroke, but it did pop. I cranked again, and the backfire almost broke my arm. I guessed I hadn't heard my uncle exactly right. On the third crank, the engine rolled over, coughed twice, belched blue smoke, and then finally ran. I pulled out the crank, ran around to the side, and played with the carburetor until the idle settled down. I let it run while I checked the oil pressure and charge indicators. Both were fine, so I climbed in the seat and drove it out in the yard. Laura ran out of the house with her mouth open. I drove the Ford up to her, and pulled the throttle back to idle. \n\n\"See, Mrs. Hildebrand, I fixed it. Now we won't have to work so hard.\" I noticed the same little smile that curled the corners of her mouth, but this time it didn't go away. I let the engine run until the battery seemed charged, and checked the temperature gauge. The old Ford was running like a top.\n\nThe next day, I started the Ford, this time with the starter, and drove it out on the drive. I would have to change the oil in the Ford soon, but it would be OK for today. Laura met me in the drive as usual, and after I had lifted the water can to the floorboard, I drove the Ford to the field. I had finished the field by noon, and after lunch we started hoeing between the vines. Laura seemed happy for the first time since I had started working for her, and we actually had some small talk about college, my love of engineering, and of her knowldege of grapes.\n\nWe finished the first pass over the field on Thursday, and I had worked myself out of a job again. Laura came out of the house with my money.\n\n\"Terry, you seem to be able to fix things, and I've got a lot that needs fixing. Could you just kind of fix things around here in between the grape work? I still can't pay much, but I can keep you busy all summer, I think.\"\n\nI don't know where she got the money, but she paid every Friday. I fixed the woodwork on the house and painted it, fixed the porch and painted that, and took care of the mowing the yard and the area in front of the chalet. Whenever the grapes needed spraying or another pass with a hoe to keep the weeds down, I took care of that. Laura always worked beside me, and her stamina still amazed me.\n\nThe weather that summer was perfect for fruit, and the grapes grew from honey bee covered blossoms to tiny green dots to swollen purple globes that hung in huge clusters from the luxuriant green leafed vines. Laura kept checking them by tasting the juice, and one Thursday in late August, she announced they were ready to pick. When I arrived at the farm the next morning, a truck was parked on the white rock in front of the barn. I dropped the hoe off the tractor, and hitched up the small wagon as Laura had asked. We spent the day cutting the clusters and putting them into the cardboard boxes in the wagon. When we filled a load of boxes, I drove the wagon back to the truck and helped the driver load. We picked all day Friday and started again on Saturday. At about four, Laura said she had something to do, asked me to finish and get the truck on its way, and walked back to the house. I finished the field, and drove the load back to the truck. It was dark by the time we finished loading, and after he left, I put the tractor and wagon back in the barn. The grape juice had turned my hands purple and sticky, and I washed off as much as I could at the pump in the yard. My T-shirt was stained with purple blotches, as were my jeans, but they would have to wait until I got home. I went to the house to find Laura and tell her the truck had left. My first knock on the back door went unanswered, as did the second. I was looking around the yard, trying to find her when I saw a light in the chalet. I knocked on the door and waited. The door opened slowly, and I stopped breathing.\n\nIt took a moment to recognize her. Her streaked, dark brown hair hung in shining waves that caressed her bare shoulders, and the simple black strapless dress hugged the figure she had been hiding under the sweatshirts and sloppy jeans. Her slender legs were sheathed in black nylon, and she stood three inches taller because of the shiny, black, spike heels. I was staring, but I couldn't help it. Laura had changed from the severe, cold woman of the grape arbor to the beautiful creature who stood in the door, and I was in awe of the transformation. Her voice finally broke through.\n\n\"I said, come in Terry.\"\n\nI walked through the door into another age. The room was decorated in a fifty's modern style, and on the long counter at the back, an old record player was playing the slow, sensual sounds of one of the old big bands. The pictures on the walls were also old, and all were black and whites in simple frames. The beamed ceiling supported a small, but ornate chandelier, which was not lit, and the cold, open hearth of a huge, stone fireplace begged for logs and flame at one end of the room. Two candelabra sat on the mantle, and the white tapers that burned at the end of their graceful, silver arms lit the room in a soft, warm yellow glow. The furniture was limited to a coffee table and a large couch with burnt-orange velvet upholstery. On the table sat an open bottle of wine, two glasses, and a picture. \n\nLaura walked to the couch and sat down, and then patted the cushion beside her. I sat at the other end of the couch, and when she leaned back with closed eyes and listened to the music, I felt as if I were intruding on something very private, although I didn't know why. She stayed that way until the song ended, and then looked at me. Laura had used makeup for the first time I had ever seen, and the effect was amazing. The severe look had change to a soft, feminine glow, and her eyes shone at me in the candlelight. \n\n\"Can I pour you some wine?\" Before I could answer, she filled the second small glass, and set it before me. Her nails were short from all the field work, but they were filed and painted a deep red that matched her lipstick. I was most entranced by the change in her face. The scowl and lines had been replaced by blushing cheeks and long, fluttering lashes that framed a very pretty smile.\n\n\"You're staring again, Terry. What's the matter?\"\n\n\"It's just, well, Mrs. Hildebrand, you're beautiful.\"\n\nShe laughed softly. \"Thank you, but I hardly think I could be described as beautiful. Girls your age are beautiful. I'm fifty-five, Terry, and women my age are usually described as mature-looking. Look at all these wrinkles around my eyes. Those aren't beautiful.\"\n\nLaura got up, selected another record from a large stack, and when the music started she returned to her chair. She took a sip of wine from her glass, and then her eyes closed as she let herself drift on the slow melody. Two more songs started, melted out of the speaker, and quietly ended before she opened her eyes again. Her voice was still soft, and had an almost dreamy quality to the tone.",
        "\"You probably wonder what Crazy Laura is doing out here tonight, don't you?\"\n\nI started to ask, \"How did you hear about that?\", but she stopped me.\n\n\"Yes, I know what they say in town, and sometimes I think they're right. But this was our dream and I just can't give it up. I owe at least that much to Charlie.\" \n\n\"Charlie?\"\n\nShe pointed to the picture, took a sip of wine, and handed me the bottle from the table.\n\n\"This is the last wine Charlie made. I have about a hundred bottles left. You really ought to try it.\"\n\nThe taste was fruity, but not too sweet, and the aroma was that of open fields, sunshine, and wildflowers. I had always wondered why wine drinkers raved so much about bouquet and aftertaste, and now I thought I understood a little of the infatuation. I took another sip and set the glass down. She was leaning back with closed eyes again.\n\n\"I was thirty when I met Charlie. That was in '40. I should have been married with a couple of kids long before then, but I hadn't met any man that I thought I loved. I met Charlie, and even though he was eight years younger than I, I knew I had found the man I was meant to be with. The Lend-Lease was going strong, and Charlie had a good job in Benton Harbor. We both worked and saved everything we could so we could buy a house, and had set a date for September in '42, but then Pearl Harbor happened. He enlisted in August. We got married the Saturday before, spent the rest of the weekend in Michigan City, and on Monday, he was gone. He came home for a week in November, and then went to Africa. He ended up in France about a year before the war ended. It was in France that he fell in love with vineyards.\" \n\n\"When he came home, he was full of ideas about raising grapes and making wine. He got back his job in Benton Harbor, and I got a job as a bookkeeper in Bridgeman. We used his GI Bill to get a loan for this place, and we used our savings to buy starter vines and to string the wire. For eight years, we held those jobs in the day, and then came home and worked this place until dark. I loved the work here, because it was with Charlie, and after six years, it started to pay off. We had made enough money to build this chalet, and Charlie's dream started came true. The first year, we only made a few gallons of port for friends and family, and it was good wine. The second, we gambled, and used the whole crop. The next spring, we opened the vineyard. Charlie was so proud. He hired a band every two weeks, advertised free music, and put bottles of our wine on ice back there, behind the counter. The first night, only a few people came, but after that we kept getting more and more. The bands played Glen Miller and Tommy Dorsey, and people came to listen and dance on the grass. They bought wine, of course; they bought lots of wine. We sold out by July, so that fall, Charlie bought grapes from another farm, and we made twice as much. In the spring of 1954, we both quit our jobs and ran the vineyard full time. We had to hire three people during the wine making season, and ten for the parties in the summer in order to get everything done. That year, on the evening of my birthday, Charlie asked me cover my eyes. He led me out to the front of the chalet, and told me to look up. He had painted \"Laura's Vineyard\" in gold letters across the front.\"\n\n\"He said he named it after me, because without me, it couldn't have ever happened. I broke down and cried, and when he showed me the new labels he had printed, I cried some more. Look at the bottle, and you'll see why.\"\n\nThe label was faded with age, but I could still see her. On a background of burgundy red, stood a younger Laura. She was dressed in the white, sweeping gown of a fairy-tale princess, and held a bouquet of pink roses. On a flowing banner above her were the words \"Laura's Vineyard\", and at her feet was a gold oval with \"Select Rose\" in black script.\n\n\"It's a very nice picture of a very beautiful woman, Laura.\"\n\n\"That's what Charlie said when he showed me the label. He said it was a beautiful woman for a beautiful wine.\"\n\nShe sipped her glass, and continued.\n\n\"The parties were wonderful, and we made money. People would drive all the way from South Bend and Chicago just to hear the music and buy our wine. Charlie and I had our special place too. Here, let me show you.\"\n\nShe rose and led me to the back, and then up a staircase. At the end of the room was a door, and she walked through the door onto the balcony. \n\n\"We would sit up here and listen to the music, and cuddle. When the band played our special song, we'd dance. Every time I come up here, I can almost see the crowds and the band, and sometimes, I can feel Charlie by my side.\"\n\nShe gazed into the autumn night sky for a few minutes, and then turned and walked back through the door. I followed, and closed it after myself. We went back downstairs, and sat down.\n\n\"On the eighteenth of December, in 1959, I found Charlie on the floor of the wine cellar. I called the ambulance, but by the time they got here, he was gone. After the funeral, I took stock, and decided to keep going and run the farm by myself. I didn't know how to make wine, so I stopped the parties, and started selling grapes for juice. The money isn't as good, but I manage by doing without what most people would think is necessary, and Charlie and I had put some money back. I just don't spend it, and people think I'm a little off for living like I do. That's why they started calling me Crazy Laura.\" She took another sip. \"It doesn't hurt so much anymore.\"\n\n\"Laura, I don't think you're crazy. It's just that you don't associate with people much, and they don't know you. If you just dressed -\"\n\n\"I know, if I dressed up and went to town, and all that stuff, people would feel sorry for me. That's not what you were going to say, but that's how it would be. I couldn't tolerate that, so I just live here by myself, and they can say what they want. Charlie knew who I was, and he's the only one who counted.\"\n\nHer glass was almost empty, and she closed her eyes again. We sat like that through the last song on the record.\n\n\"Terry, there's a single by Glen Miller over there, \"String of Pearls\". Would you play it for me?\"\n\nI found the record, placed the needle on the track, and the soft buzz of saxaphones and violins filled the room. She listened for a moment, and then said, \"Could you bring yourself to dance with an old woman?\"\n\nI took her in my arms. We must have looked really strange with me in my stained jeans and shirt, and Laura in that beautiful dress. We didn't really dance, because I didn't really know how. We just swayed back and forth, and as the song went on, she moved closer and closer. It was time for me to be amazed again. Her body was soft and yielding, but underneath the softness, I could feel the firm muscles that she kept toned with all that hard work. When the song ended, Laura held on with her cheek on my shoulder as the record player played it's unending \"scratch-pop, scratch-pop, scratch-pop\". After a minute, she gently pushed herself away. I lifted the needle and placed it on its stand. When I walked back to Laura, she picked up her glass, and handed me mine. She held her glass out for a toast, I clumsily clinked mine to hers, and we drank. \n\n\"Today is our twenty-fifth wedding anniversary. Every year since Charlie died, I've come out here on this night, opened a bottle of his last wine, and listened to our music. Sometimes, it feels like he's here with me, and those nights are wonderful. Tonight, until you knocked on the door, I just felt alone.\" Laura sipped her wine, and seemed to think for a while. Then she said, \"I'd forgotten how wonderful it felt to be in a man's arms. Would you dance with me again?\"\n\nWithout waiting for a reply, she started the song again, and this time, I pulled her close. She pressed her breasts into my chest and lay her cheek on my shoulder, and we kept time with each other instead of with the song. The \"scratch-pop\" started before either of us was ready. Laura disengaged herself from my embrace, and shut off the record player. \n\nShe walked up to me, put her arms around my neck, and kissed me. I had kissed a girl or two, but this was different. Laura flowed into me in a kiss that made me catch my breath. As my heart threatened to burst through my chest, she whispered in my ear, \"Hold me Terry, please hold me.\" \n\nI took her in my arms very gently, and even then, I was afraid I was crushing her.\n\nThe soft whisper said, \"You can squeeze tighter than that, Terry. I won't break.\"\n\nAs I tightened my embrace, she kissed me again, and this kiss melted away all my trepidation. Her lips were parted, and she forced her tongue between mine. They opened to match hers, and for the first time in my life, I understood what it really meant to kiss a woman. To this day, it is difficult to describe the feeling. . She inhaled me, and at the same time completely gave herself to me. It was as if we became one body joined by our lips; she felt as I felt, I tasted as she tasted, and our thoughts were only of the touch of one against the other.\n\nLaura gently pushed me away. She didn't say anything. She just reached behind her back, and suddenly the dress floated to the floor. Laura stood before me in stockings and heels, black panties, and a black, lace garterbelt. She seemed to wait for something; years later, I understood she was waiting for me to say it was time to leave. I said nothing, because words could barely describe her beauty.\n\nMy stare started at the dark brown hair that fell in waves over her creamy white shoulders, and followed the faint blue veins on her breasts to the pale brown circles that painted their tips. Her breasts were not large, at least they weren't as large as those I had seen in men's magazines, but the shape was beautiful. They sagged a little, but their shape was round and full, and her small nipples stood away from their pink-tan bases. Her belly was mostly covered by the panties, but the swell of black satin was unbelievably erotic. There was a small area of creamy white visible between the legs of the panties and the tops of the stockings. Her nylon sheathed legs seemed to go on forever.\n\n\"Terry, you're not saying or doing anything. Am I that bad?\"\n\n\"Gosh, Mrs. Hildebrand, no. It's just that I've never seen a woman so pretty. I don't know what to say or do.\"\n\nLaura crossed the few feet that separated us, pressed her breasts into my chest and kissed me again. The same feeling hit me again, and I held her close. She broke the kiss, and the soft whisper breathed in my ears.\n\n\"Terry, if you want to leave, I'll understand, but I'd like you to stay. You've treated me better than anyone since Charlie. I know that I'm old, compared to you, but tonight, I really need you to be with me.\"\n\nWhen I didn't move, she slowly pulled the T-shirt over my head. My belt went next, and I felt the zipper of my jeans being lowered. Laura pulled them down over my hips, and then pushed my shorts down. She pulled me close and pressed her face into my chest. My arms held her of their own accord, and my fingertips burned when they touched the satin skin of her back. Laura kissed her way up my chest, looked into my eyes as she pressed her nipples into me, and kissed me again. \n\nI truly believed that the sensations of her kisses were the most exquisite feelings of my life, and in my own inexperienced way, I tried to return them. I was learning quickly, it seemed, because the intensity of Laura's lips and tongue increased, and she was breathing deeply through her nose. As her breath hit my cheek, my skin tingled with excitement, but nothing could have prepared me for the next sensation.\n\nLaura slipped one hand to my butt cheek and squeezed. The other slid softly across the other hip and in between us. Soft fingers found my hard member, and lightly stroked across its length. The hand on my butt traced a path up to my arm, back to my hand, and gently guided my fingers to her breast. She placed my fingertips on her nipple, and began a gentle, circular, rubbing motion. When I picked up her rhythm, a tiny moan slipped between her lips and tingled at the back of my throat. \n\nLaura released my shaft, and I felt her fussing with the garterbelt. The lacy garment was pulled from between us, and then I felt the satin touch as the panties slipped over my manhood. She moved away slightly as she raised first one foot and then the other, and then pressed her body against mine. The satin and lace had been replaced with soft curls, and when the head of my shaft brushed against them, incredible sensations surged from my loins to my brain.\n\nShe pushed me back gently until the couch touched the back of my legs. I sat down, and Laura spent a few moments with my boots. The jeans slid over my legs as she pulled then off, and I felt her soft hands gliding up my legs. The hands found my shorts, and they joined the jeans on the floor. Laura lifted my legs to force me to recline, and then covered my body with hers.\n\nHer mouth found mine again, and she lay on my chest as we kissed. Her soft breasts flattened against me and her rapid heartbeat throbbed into me in counterpoint to mine. I put my arms around her, and because I didn't know what else to do, I gently rubbed her back. My hands explored down to her small waist, and then found the wonderful curve of her hips. I cupped them and squeezed, as she had done to me, and Laura groaned. She spread her legs, and pushed herself to a kneeling position over me. As she moved forward, the soft curls on her mound brushed over my manhood, and I jerked uncontrollably. \n\nLaura reached behind her hips and grasped my erect shaft. She lowered herself until I felt soft lips caressing the head. As she moved me over their surface, I felt a slippery dampness unlike anything I had ever experienced. Laura tentatively pressed herself against me, and I slipped between the lips into the wet heat of her sex. She adjusted her position, and then slowly pushed herself down over my length. I closed my eyes at the incredible tension in my belly and then erupted in a blinding feeling of release. My body jerked as seed spurted through my manhood. Laura raised and then sat down over me. I spurted again, then again, and felt myself begin to grow soft. \n\nHer hard nipples brushed across my chest as she leaned to kiss me again. I felt the incredible suction as she caressed my shaft with her passage, and I began to harden again. As Laura felt me increasing in size and length, she began slowly rocking her hips to force me in and out of her soft lips. Her nipples brushed up and down my chest, and I reached between us to gently squeeze and caress her. She broke the kiss, raised to sit on my shaft, and pulled both my hands to her breasts. I slowly massaged the soft mounds, and Laura began raising and lowering herself over me. The feelings were not so intense now, and as I gently squeezed and caressed her breasts, I concentrated on the sensation of her soft lips and the convolutions of her passage as they slipped easily over me. \n\nLaura slipped her fingertip between us, and I saw that she was gently rubbing a firm nubbin of flesh that protruded from between her lips. She began to breath quickly, and she exhaled in small sounds. The speed of her strokes gradually increased to keep pace with her breathing, and I lost all thought of any individual sensation. Intense feelings shot throughout my body, and I began unconsciously to meet her downward push with my own upward thrust. I felt the same tension begin to build, although more slowly than at first. As the first wave of release began to flow from my thighs, Laura gasped, pushed down hard, and gasped again. She raised up, and when she lowered herself, I thrust up hard, and shot my seed deep inside her. Laura cried out, then cried out again, and her whole body shuddered. Wave after wave rippled her passage over me, and I thrust up to meet them as I spurted another gush of release. She ground her mound into me as the third jet of my seed splashed into her, and her final cry was a low and lingering hum. Laura collapsed onto my chest and held my shoulders tightly. She whispered, \"Thank you, Terry.\", and we lay united until we fell asleep.\n\nShe was gone when I woke, but an envelope leaned against the empty wine bottle. Inside, I found twenty, one hundred dollar bills and a note in the familiar feminine script.\n\nDear Terry,\n\nPlease don't come to the house to say good-bye. After last night, I couldn't face you. I didn't know how much I needed you until after we danced, but being in your arms brought back feelings I thought were dead forever. You made me feel like the girl on the wine label again, and for this, my heart will always hold a special memory of you and of this night. Please don't think I'm a terrible woman for wanting you, but I needed so much to be loved again. You were the only person since Charlie died to look past the outside to see the woman inside, and I needed you to let me feel like that woman again.\n\nI know you didn't make enough money to get back to school this fall, but I know of no man who deserves it more. I hope this money will help. Don't worry about me. As I said, Charlie and I put some back, and I would rather spend it this way than to buy things I really don't need. Take care of yourself and study hard. You're going to be a great engineer someday.\n\nLove,\n\nLaura\n\nI went back to school that fall, and managed to win an academic scholarship that paid for tuition and fees. Spring break found me back home for a week, and when I drove past Laura's place, I saw that she hadn't yet trimmed up the vineyard. I bought a dozen pink roses and drove out to Laura's. As I drove in, she was walking to the house in the same sweatshirt and jeans as last summer.\n\n\"I hear you need some help with your grapes, and I thought you might like these.\"\n\nLaura smiled and took the roses to the house. She came back with a set of shears.\n\n\"You ever trim grapes before?\"\n\n\"I have. I once worked for this crazy woman who turned out to be beautiful.\"\n\nLaura laughed and started for the field.\n\nI worked for Laura every spring break, and every summer until I graduated. We never went back to the chalet, and we never made love again, but there was a special something between us after that night. It was always a little sad when the last load of grapes were safely on the truck and away.\n\nI graduated in the spring of 1970, and Laura rode with Mom to the graduation. She presented me with a bottle of Charlie's wine and a kiss on the cheek. I still don't know which I liked best. A few weeks after graduation, I got a job in Grand Rapids, and had been working for nine months when I got a call from a Bridgeman attorney named Bill Dobson.\n\n\"Mr. Winters, I'm Laura Hildebrand's attorney. I'm sorry to have to tell you this, but she passed away last night. She wanted you to know if anything happened to her, and asked me to take care of the notification. Her funeral is in two days, and she wanted you to attend if it's possible. I'd also like you to come to my office as soon as you can.\"\n\nWhen I saw her for the last time, she was beautiful again. She looked to be just sleeping and I longed to wake her, but I knew Laura was with Charlie, and was again the Laura only he and I knew. I stood by the open casket for a while, remembering, and then finally touched her hand and said good-bye. It felt strange to be the only one in the room; Laura had never mentioned relatives, and apparently she had none.\n\nThe funeral was very small by any standard. The service was held in the funeral home, and besides me, the only attendees were Bill Dobson and a local minister. At the graveside, the minister said a few more words, and before I left, I placed the pink roses I had brought on top of the casket. I caught up with Bill as we walked back to our cars.",
        "\"Bill, I can't stay here and be sad any longer. Could we take care of whatever you need to talk to me about this afternoon?\"\n\nWhen I arrived, Bill had asked if I wanted coffee, and when I said \"No\", he handed me a familiar, yellow envelope. The outside simply said \"To Terry\", in Laura's flowing handwriting. I opened it, and pulled out the same yellow stationery from five years ago. After I read the first paragraph, tears were streaming down my cheeks.\n\nMy Dearest Terry,\n\nBy this time, if Bill has done as I asked, I will be beside Charlie at Quiet Acres. I hope you will have been able to be with me this one, last time. It is a comfort to know that you might be there to help me once again, and to send me on the journey that is ahead of me. I hope that as you see me lying in my final rest, you will remember our good times. I want you to know that I think of our summers together each and every day. \n\nThe week before you graduated, Dr. Wilson told me that I had only a few months to live. I didn't tell you then, because I didn't want to spoil your special day. I've had a good life, in spite of what most people would consider hardship, and now I'm going to be with my Charlie again. I'm not afraid for myself, and am trying to get my affairs in order so that things will go well after I'm gone. One of those things I have to do is say good-bye to you.\n\nTerry, you were a friend when I needed one badly. You helped me keep the farm going for Charlie when I couldn't do it alone anymore, but more than that, you saw through what all the other people saw, and made me feel alive again. The months between harvest and pruning were agony, but then you would come back, and we could be together again for a few months. I really enjoyed knowing that I was helping you get your education. Somehow, Charlie and I got so wrapped up in the vineyard that we never had children, and you became the son I never had. I know that some day you will be a wonderful husband and father. I regret that I won't be there to see it.\n\nThat first summer, when you found me in the chalet, I was so depressed that I seriously considered ending all my pain and joining Charlie. I knew that would be wrong, but I didn't know what else to do. Then you came looking for me, and told me something I hadn't heard for years. You told me I was beautiful. I so appreciate what happened between us that night. I wanted it to happen again, but somehow, the mood was never right, and I confess that I did feel a little strange about it. We were so far apart in age. I was happy when it didn't make a difference to you, and for that, I shall be grateful forever. It was something that I needed at that time, and you gave it to me without reservation, and without regret. In my own way, I have always loved you for that, even though I couldn't bring myself to tell you.\n\nMy second regret is that the farm will pass into unknown hands, and the vineyard will die forever. For this reason, I ask one last favor from you, Terry. I have made you the sole beneficiary of my will. The farm will be yours, along with all the money that Charlie and I put back. It isn't as much as I wish I could leave you, but it will pay the inheritance taxes, and give you a start. I know that this favor is larger than anything I have ever asked of you, and I want you to think hard and make the right decision for yourself. If you decide not to keep Laura's Vineyard, I will understand. Bill will help you with all the details, whichever way you choose.\n\nWell, Terry, this will be the last time I will be able to say anything to you. There is so much I would like to tell you, and so much I want to hear you say. There is no time for that now, so I will leave you with these few thoughts that come from the heart you warmed with your presence and kind words. Terry, you gave me life for the past five years, even though you didn't know it, and you made me feel like a young woman again. You gave me the strength to go on with Charlie's dream, and I think he would have appreciated it too. I love you as a friend, I love you as a son, and wish you a wonderful life. I will pass from this world with your face in my eyes and your name on my lips, and I hope you will think of me from time to time.\n\nAll my love to a very wonderful man,\n\nLaura\n\n**************************************************\n\nI sat the wine glass down on the railing of the balcony that overlooked the lawn and bandstand, and put my arm around Wendy. The last concert of the season was always the best, and she and I loved our private seat to this performance. She looked at me, and then kissed me softly. \"You're thinking about her, aren't you?\"\n\nThe first years had been difficult, but I managed. After I met Wendy, things got easier. Wendy was raised on a fruit farm, and was no stranger to hard work. Her smiling face and uninhibited laugh made the hours with shears and hoe a joy. Soon after we were married, I explained about the relationship between myself and Laura, and why the farm would always be \"Laura's Vineyard. She cried, and said it was the most beautiful story she'd ever heard. She became as determined as I to begin the lawn parties again. After five years, we had the first wine party that Laura's Vineyard had seen since 1958, and as with Laura and Charlie's first, attendance was minimal. Word gradually got around, and the event grew and grew. We expanded the chalet twice to add a tasting room, a gift shop, and a larger sales area. Two weeks ago, we had a crowd of over six thousand, and severely depleted the wine stocks. There were barely enough of the bottles with the brown-haired princess on the label to make it through tonight, but now, the hour was late, and it looked like we would still have a few bottles left for Christmas presents.\n\nAfter the third year of Laura's Vineyard, I was able to buy more land, and now, after twenty years of wine parties on the lawn in front of the chalet, Wendy and I own five hundred acres of prime vineyards. We have graduated from field hands to managers and wine makers, and have four full time employees. During the heavy months in the spring and summer, migrant laborers do all the work except for the twenty acre patch of vines that surround the farm. Wendy and I still care for that, and as soon as our son was old enough, he helped too. The grapes from those vines make wine for us and a few close friends. I still haven't matched Charlie's flavor and bouquet, but I get a little closer each year. \n\nLucas is eighteen now, and will enroll at the University of Michigan next semester in agriculture. He wants to buy more land and diversify the vineyard with apples, peaches, and strawberries. I've been working on wines blended with these flavors, and so far, the results have been good.\n\n\"Yes, I'm thinking about her. Tonight is her anniversary. Tonight is the night, all those years ago, that I saw the real Laura.\"\n\nI reached into the ice bucket and gently lifted the bottle of Chablis. The label was faded almost beyond recognition, but Wendy and I knew it well. The bottle had been chilling since noon, and as I pulled the cork, the fragrance wafted through the night air. I filled our glasses a last time, and put the bottle in the rack with the others. There are about eighty bottles left in the locked room in the cellar, and that should last us and Lucas for a long time. \n\nThe band tonight was special, and was the same band that always played at the final August party. The music was from an era long gone, but people still drove a hundred miles to hear the jive of Glen Miller and the fox-trots of Tommy Dorsey. The soft strains of \"String of Pearls\" drifted across the lawn, and people stood up from their blankets to hold each other close and sway to the notes. I put down my glass and turned to find Wendy reaching for me. We danced on our own private floor, high above the crowd below, and as the final notes of the song drifted away on the evening breeze, I kissed her softly. I hoped Laura was in Charlie's arms, as Wendy was in mine, and that Laura was again the beautiful princess on the label.\n\nThe crowd and staff were gone, the band packed and away, and Wendy and I picked up our glasses and walked down the stairs to the first floor. We passed through the tasting and sales areas to the private room in the back. The old couch, table and photographs were still there, as were most of the original furnishings from the house. We sat on the couch, as we always did after a party, and talked for a while. I leaned forward to move the picture of Charlie and Laura standing in front of the chalet. I had found it in the house when I moved in, and it seemed to belong in this room of the chalet. Every time I came out here, the picture had been moved in some manner. It used to concern me, but then I realized it was just Laura's way of telling me she was all right. As if reading my thoughts, Wendy said, \"You know, after every party, I feel her here. I don't know how, but I know she's still here and watching over us.\" She chuckled. \"You must have really had something back then, to make her feel the way she did.\"\n\nWendy pushed me gently back and she grinned as her lovely, dark eyes stared into mine. \"I've felt that \"something\" a time or two, myself. How 'bout showing it to me again?\" \n\n**********************\n\nThanks for reading this work. Please vote to indicate how much you enjoyed it, and send feedback if you can spare the time. Your votes and feedback are the only way I will know how much you enjoyed my effort, and furnish the only means to improve my writing. \n\nThanks again, \n\nRonde. "
    ],
    "authorname": "ronde",
    "tags": [
        "sour expression",
        "laura charlie",
        "year found",
        "laura slipped",
        "brushed chest",
        "buy land",
        "hope time",
        "nipples brushed",
        "school fall",
        "listened music"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/lauras-vineyard"
}