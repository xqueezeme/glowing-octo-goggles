{
    "title": "Cousin Pt. 03",
    "pages": [
        "The three headed upstairs. Dan didn't bother putting any clothing back on at all, but had the two girls leave on their wrist and ankle cuffs so they \"could stay used to being captives.\" This brought a couple of giggles, but actually both of the young women found it exciting, knowing they could be restrained at any time. Lisa had spent almost all of the time she had been here before completely naked, but this was Diana's first experience of going without clothing for any length of time. To her own surprise she had quickly adjusted to the constant nudity and loved the feeling of both freedom and bondage that seemed to go with it. She had never spent much time out of doors naked except for some private sunbathing - she and Lisa had done that last week, in fact - but up here was so isolated and quiet that it seemed natural to go outdoors without worrying about who might see.\n\nThe three dug around in the kitchen and put together some sandwiches, fruit, and snacks and shoved these into a picnic basket they found. Lisa picked up a couple of beach towels and Dan disappeared for a minute and returned with a large cotton blanket and a small cloth bag and the three headed out the back and down to the pond. The day had warmed up again and the lack of clothing didn't bother them. They spread the blanket, but Lisa wanted a swim before they ate. Dan had them remove their cuffs - no use ruining the leather. The three spent the next twenty minutes swimming and playing grab ass around the float until finally hunger drove them back out. They dried off and Dan replaced their cuffs. The three flopped down on the blanket and began to attack the food.\n\nDiana asked Dan, \"Lisa said you hadn't really played many of these games before, but you seem to know just what to do - and how hard, for that matter. You're really new at this?\"\n\n\"Before last week I'd only played a few spanking games, but I'll admit I have a rich fantasy life. Not as good as this reality, but rich. And I do read a lot.\"\n\n\"I'd like to see your library,\" Diana said, only half teasingly. \"I don't care where you learned, but I've loved every bit of it. And I expect to leave here with stripes like Lisa had last week.\"\n\nDan looked sharply at Lisa, who shrugged. \"I guess they weren't all gone before she got a glance. I'll have to be more careful next time.\"\n\nStill looking at her, Dan said, \"Humm. That kind of carelessness probably calls for more punishment, don't you think?\"\n\n\"Most certainly,\" Lisa grinned. \"I'm sure you'll really have to whip my ass.\"\n\n\"Well, since I saw it,\" Diana added, \"I think you should whip my ass too. OK?\"\n\n\"I'm sure there will be enough to go around for both of you. You know, you two are the sexiest women I've ever met. In fact you are hotter than any I've ever imagined. This all seems so much like a wild dream I think maybe I should pinch myself. But I think I'd rather pinch you two.\" As he said this Dan reached out and caught a nipple in each hand and squeezed them between his thumbs and forefingers. Lisa and Diana both sucked in their breath, but both also arched to thrust their breasts farther towards him. The three of them spent the next forty five minutes feeling, kissing, stroking, and in general making out. Dan would be locked in a full length press with one girl and the other would push herself against his back and let her fingers play with his balls and anus. Once, at Lisa's silent urging, Diana wet her finger and worked it inside Dan's rear hole. His response indicated he liked this stimulation and Diana, to her own surprise, also found it exciting. She had had a few fingers in her own ass and during the last day Dan had introduced her to all kinds of anal stimulation, but she had never done anything along those lines to any of her own boyfriends. She was finding she liked a lot of things she had never tried.\n\nFinally Dan reached into the cloth bag he had brought and pulled out a couple of lengths of rope. \"I think we should stretch one of you now. I think maybe Diana first.\" he tied the rope ends to her wrist cuffs and then had her lie back on the blanket. They were in a small grove of shade trees and Dan used two of these to tie her arms widely spread. He then added two more ropes to her ankle cuffs and used another tree and a stake which he drove into the ground to spread her feet four feet apart. With Diana now stretched tightly on her back, he turned and embraced Lisa. After a long, deep kiss and a bit of feeling, he said, \"Come on Lisa. Let's see if she's ticklish.\"\n\nDiana's eyes popped wide open. She was not only ticklish - she was very, very ticklish. Dan began to run his fingertips lightly up and down her sides, across her stomach, and along her thighs. Diana broke into fits of laughter and strained and twisted against the ropes. \"Come on, Lisa. Help me out.\"\n\nLisa thought, \"What the hell. Why not?\" She knelt on one side of the stretched brunette and began to let her own fingers dance across the taut skin along with Dan's. Soon Dan began to let his fingers wander across her breasts and along her pussy lips. Lisa hesitated only a second and then joined him in tormenting these areas too. She even let her own finger tease Diana's anus and actually penetrated her pussy a couple of times. Finally Dan stopped the tickling and began to run his tongue across her swollen nipples and down her now sopping slit. He was sucking on Diana's right nipple when he suddenly reached up and put his hand behind Lisa's neck. He gently urged her down, and with only a second's resistance, Lisa lowered her mouth to her friend's left nipple. Diana didn't object. She arched her back as much as possible, bringing her tits closer to the two hot tongues busy working on her.\n\nSoon she was squirming uncontrollably and started begging, \"Fuck me, Dan. I need you inside me. Fuck me now.\"\n\n\"Not quite yet,\" Dan said. \"I want to get you properly aroused first.\"\n\nAs Diana cried out in frustration, Lisa suddenly stood and started for the house. \"I'll be right back. Just keep on with what you're doing.\"\n\nDan didn't lift his head, but gave what might have been a wave in acknowledgment. He continued to stimulate the bound girl, driving her higher and higher. He was now getting almost too aroused himself to wait much longer. Somewhere in the back of his mind he heard Lisa come out of the house and saw her start back towards them, but he was too busy to pay much attention. He stretched himself out above Diana, supporting himself on his hands and knees. He lowered his head and sucked hard on first one and then the other nipple. He placed the tip of his rock hard cock against the entrance to her slit and pushed just the head inside. Diana strained upwards as far as her bonds allowed to try and get him in deeper. Dan finally let himself sink in all the way and pressed her hard against the ground. For half a minute the two ground their genitals together, not withdrawing at all, but pushing and twisting against each other. Suddenly Dan felt a slick finger at his own anus. He looked back and saw Lisa kneeling between his own (and Diana's) legs. She had her finger extended and was twisting it deeper and deeper inside of him. As her finger probed and lubricated, he pressed even harder against Diana's tight pussy. Suddenly Lisa withdrew her finger, but almost immediately Dan felt the end of something - must be a dildo, he thought - press against his now open rear. Slowly the plastic shaft began to penetrate him and suddenly he realized that this fake cock was mounted in a harness around Lisa's waist. She was fucking him with a strap on as he fucked Diana. In fact, although Dan didn't know it at the time, the other end of the dildo was deep within Lisa's own pussy and she was also fucking herself as she fucked him. Dan responded and began to move in and out of Diana as Lisa moved the hard shaft in and out of his own rectum. Lisa stretched herself against Dan's back and, not surprisingly, the intense stimulation very soon had all three exploding in the convulsions of incredible orgasms.\n\nFinally they collapsed in a hot, sweaty heap. Diana reveled in the weight of both of them pressing her against the ground and tightened her internal muscles around Dan's shrinking member. At last the three pulled apart and Dan turned and embraced Lisa for a long kiss. Then both of them turned and, without a word, bent to suck hard at Diana's nipples. Suddenly Lisa began to let her mouth move down across Diana's taut stomach and on over her newly shaved mound. She moved between Diana's legs and began to lick the length of her slit. For several minutes her tongue darted over Diana's clit and in and out of her pussy. Dan sat back and stared intently, his hardening cock indicating his reaction to this show. Soon Diana came again in another loud climax. Lisa made one more long lick from just in front of Diana's anus, up through her slit, across her clit, and on up her stomach and over a hard nipple. When she finally pulled away, she and Dan began to release the stretched girl from her bonds.\n\nAs Diana sat up and worked her sore arms, she turned towards Dan and gave him a hug and deep kiss. Then she turned to Lisa and gave her one too. As she pulled back she quietly said, \"Well, I guess we know how we feel about this, now, don't we.\"\n\nLisa looked into her eyes, nodded and said, \"I guess so. It feels awfully good, but don't expect me to give up men.\"\n\nThe three sat close together and talked about the experience. Diana wanted to examine the strap on. She had never seen one and now ideas of using it on Dan - and Lisa! - were flooding her head. Dan admitted the experience did really turn him on and that playing with the three of them together was even better than he could have anticipated. They agreed that if anything bothered any of them that they would let the others know, otherwise everyone was free to experiment.\n\nThe three lay around for another half hour, talking and occasionally necking and feeling a little. Finally Lisa said, \"I don't know about you, Diana, but I think I feel the need to be tortured a little bit. Why don't we go back to the dungeon.\"\n\nDiana immediately responded, \"Yes. That sounds great. I won't say that the bondage sex isn't great - you both know I found it wonderful - but I want to try a little more severe stuff. Just as long as you don't hurt me too much. The whippings really turned me on.\" She looked over at Dan. \"So, Captain, if you would like to work over your helpless captives, I guess we're available. They than began to gather the picnic stuff and made their way back towards the house. \n\nThey dropped the leftovers in the kitchen, made a trip to the bathrooms, and then headed back downstairs.\n\nAgain as they entered the room, all three looked, as the expression goes, like kids at Christmas. Their aunt and uncle had put together a very complete dungeon and they wanted to try all the devices at once. Actually there were enough different devices, restraints, and ways of using them that they could spend a month and not get to them all. Now Dan looked thoughtfully around the room.\n\n\"I think Lisa can go on the table and maybe Diana can ride the leather horse. Come on, Diana. You wanted to be tortured a little, so let's get you mounted.\" He pulled out the narrow leather 'horse' Lisa had ridden the last time and anchored it to the floor. This device had a leather saddle about six inches across with a mount for the eight inch knobbed dildo that Dan now installed. The saddle was of a height that, seated on it, Diana's feet would still be a foot or more off the floor. The horse itself was mounted on springs with ratchet devices so that any small movement would be amplified and the horse would 'buck' mildly as it bounced around. Dan placed step stools on each side of the saddle and had Diana stand on one. He lubricated the dildo and instructed her to straddle the device with one foot on each stool. He then had her bend her knees slightly, impaling herself on the dildo. She gradually sat lower until the shaft was almost completely inserted. When she stepped to the next lower steps of the stools, holding her knees straight just kept her pussy lips off the saddle surface. Dan attached her wrist cuffs to a ceiling chain with enough slack so her arms were forward and above her head, but not stretched tightly. He then added two wicked nipple clamps and attached six ounce weights with the long springs. He tied narrow velvet ribbons around the base of each of her breasts, soon making them swollen and tender. Next he attached a weight to each of her ankle cuffs.\n\nBefore removing the stools, Dan found a power cord attached to the base of the horse and plugged it in. Lisa looked surprised at this last: when she had ridden the horse they hadn't noticed the cord. Dan saw her look and explained, \"I looked a little closer at some of this stuff last week. Remember Uncle Tom was trained as a mechanical engineer before he decided to farm. Anyway on this I found that there is a timer and motor arrangement set so that it will give random bounces. That way even if you learn to hold the horse perfectly still, it will still move once in a while. Also the dildo is powered. Diana should be in for quite a ride.\" With this he removed the two stools and Diana gasped as she slid the rest of the way down the shaft and her weight came to rest on the leather ridge of the saddle. Dan gave the horse a quick push and it began to bounce. The sensations Diana was feeling flashed across her face: pain from the leather ridge, the bouncing weights, the knobbed dildo. Stimulation from the vibrations of the fake cock and the friction of the leather against her wet sex. Dan helped with a dozen lashes with a leather cat, bringing several cries from the bound and bouncing girl. Then he turned his attention to Lisa.\n\nHe had her lie on her back on the padded table with her ass just at the bottom edge. He then bound her hands to the head of the table and pulled a wide leather strap tightly around her waist, pinning her to the table. A rope was used to connect each ankle cuff to a pair of ceiling rings. When Dan pulled these tight, Lisa's legs were sticking straight up and spread nearly five feet apart. Her pussy and anus were completely exposed and open. Dan used another pair of the painful nipple clamps to connect her tits to cords looped through ceiling rings. Springs and lead weights were added to these, pulling her breasts into stretched cone shapes. Another clamp, not quite so tight, was attached directly to her clit and a cord and small weight were also added to this. Next Dan inserted a large, ribbed, vibrating dildo into her rectum and turned it on. Finally he added a dozen or so clothes pins to the sides of her tits, her vaginal lips, the insides of her thighs and under her arms. He stepped back to watch Lisa struggle with the various pains and then, without warning, began to apply a riding crop to her stretched ass.\n\nFor the next twenty minutes Dan alternated between the two women, using several cats and crops on their tormented bodies. And while both girls cried out and screamed a number of times, neither called a safe word. Finally Dan put down the crop he was holding and began to pull the clothes pins from Lisa's pinched flesh. The table was the perfect height so that when he stood between Lisa's spread and raised legs, his cock was directly in line with her open pussy. He picked up a short tailed cat and then plunged his hard member into Lisa's sopping slit in one long, single thrust. He began to fuck her with long, hard strokes while at the same time lashing her stomach and flanks with the cat. Lisa came almost immediately but Dan didn't even hesitate and continued to pound her. Twice more she came in screaming orgasms, the last as Dan suddenly pulled the clip from her clit. Dan followed her third climax within seconds, coming deeply inside her.\n\nDan released the clamps from her nipples and let her legs down, but left her still bound to the table. He then turned his attention to Diana. Diana had already come three times herself from the stimulation of the horse and Dan's floggings, and watching his action with Lisa had brought her over the top again. He picked up a cat with thirty inch tails and approached her. \"Had enough yet, Winch? Or do you still crave more punishment?\"\n\nDiana was still bouncing around on the horse and the sudden pains caused by the saddle and clamps flashed clearly across her face every few seconds. But she looked directly at Dan, taking in the whip and coming to rest on his eyes. \"Whip me again, Captain. Make me really feel this one.\"\n\nDan was once more astonished at how much these two beautiful women were taking to the rough BDSM sex. But he didn't complain. Instead he raised the whip and lashed it across Diana's hip, wrapping the tails around to her thighs. The blow was hard and brought a scream from the bound girl, but it also obviously stimulated her more. Dan delivered another ten or fifteen strokes, all hard and leaving angry red lines and each bringing a scream. With the last Diana began to convulse in the throws of another intense orgasm. When she began to come down, Dan decided she had had enough and stopped the bouncing horse and placed the stools under her feet again. When she had taken her weight back on her legs with a groan as the pressure came off her battered genitals, he began to release her from her bonds. He then went back and untied Lisa, helping her up.\n\nBoth girls moved slowly, relieving sore and cramped muscles. Both were marked by many red lines, but none of these welts was severe enough to last too long. They would probably be gone by the next day. Dan looked from one to the other and, from the smiles on their faces, knew for sure that he hadn't gone too far with them. \"Do you two still find the idea of torture exciting?\" he teased.\n\nDiana started to say something and then turned serious. \"I loved this. But the idea of real torture is repulsive. I know I used that word before, and I'm sure I will again, but I just want to make it clear that when I say it you know that I mean 'play torture.' But, yes, I know it seems crazy, but even though that ride hurt and I'll probably be bruised for a while, I loved it! I still can't quite believe how good the whipping makes it when I come.\"\n\nLisa chimed in. \"Exactly! Diana, Dan and I both know that we're only talking about play. We'll say torture, torment, whipping and so forth, but we all know that we never mean any more than the victim wants. I had Dan really work me over once the week before last to see what it felt like. It hurt like hell, I was sore for a couple of days, but I have never come so hard in my life. Three weeks ago I had no idea how hot something like this could be and probably wouldn't have believed it if someone had told me. But I'm hooked. I think I'm going to have to take a break for a little while to recover, but I want to be back down here being worked over again yet today. How about you, Diana?\"\n\n\"I could handle that. A little break might be good, but even though the ride was fantastic and I came and came, I still need to be fucked. I'm not letting Dan off that easy.\"\n\n\"In that case,\" Dan said, \"we definitely need to take a break. I know Lisa told you about our bet last week, but I'm still amazed we managed it that many times. I don't think I can handle twelve times a day every day, but I think I'll have enough for both of you a couple of more times today at least. I guess it's the sexy company that keeps getting me hard.\"\n\nLaughing, the three went upstairs and got some cold drinks. Finally Dan said, \"You don't want those sore muscles to set up. How would you like a walk out in the woods?\"\n\n\"Sure,\" Lisa said. \"Sounds good.\"\n\nDiana hesitated a second. \"You mean like this? Are you sure no one will see?\"\n\n\"Dan hasn't seen anyone up here all summer and I know the place is always isolated. Besides we'll put some clothes on.\" Then she laughed and added, \"Shoes, anyway.\"",
        "The three put on shoes and socks, but otherwise remained naked. After they had been walking along one of the paths into the forest for ten minutes or so, Diana remarked, \"I guess I'm really not too worried about other people. Even if someone should happen to get a look, they won't know me. Besides, it feels wonderful - really free - to be out here naked. Not to mention, sexy as hell!\"\n\nThe three walked for about an hour and a half, stopping occasionally for a little necking and petting, and finally returned to the yard. Pulling off her shoes, Lisa called, \"A quick swim, just out and back, before we go in. Come on, you two. Race you.\"\n\nThey plunged into the pond and swam out to the middle and back and then, dripping wet and carrying their shoes and socks, made their way back to the house.\n\nIt was near five and so they decided to eat supper before any more activity. When they had finished, Diana was ready to go back, as she put it, 'to the torture chamber,' but Lisa suggested it would be wiser to let some of the food digest. Dan asked if they would like to see another video and both quickly agreed. As they settled on the couch, Dan between the two girls, Diana realized that she had now been completely naked for a full day and had experienced more hot sex than she would have thought possible in such a short time. Well, she certainly wasn't going to complain! She slid one hand along the inside of Dan's thigh and reached over him with the other to run it along Lisa's. Lisa leaned over Dan and suddenly kissed Diana full on the mouth, at the same time allowing her hand to stroke Dan's cock and balls. Then all three settled back to watch as a series of hot sex scenes unfolded on the screen.\n\nWhen the film ended, about eight, the three were ready to return to the dungeon for some more play. Most of the red lines from the afternoon's whipping had disappeared and both girls assured Dan they were ready for some more rough action.\n\nDan had been thinking all evening about what he wanted to do to the two. When they entered the dungeon he immediately led Diana over to the end of the padded leather vaulting horse. He positioned her facing one end and spread her legs three feet apart before fastening them in position. He then had her bend over and lie along the length of the device. Diana felt the smooth leather quickly warm as her stomach pressed against the smooth surface and her breasts settled along each side. Dan pulled a wide leather belt tight around her waist, pinning her firmly to it. He then pulled her wrists up and out and attached them to two ceiling chains located a foot or so forward of her waist. She was now pinned to the leather at the waist with her back arched sharply upward and her wrists pulled three feet apart.\n\nLisa, seeing this position which she had herself held only eight or nine days ago, had a good idea what Dan had in mind for her. She smiled to herself imagining how surprised and then turned on she expected her friend to be if Dan did as she suspected. However, she had little time to think about this. Dan led her to a post directly in front of and about four feet away from Diana. This post reached to the ceiling and had a high crosspiece. There was a second crosspiece located just below the height of Lisa's shoulders, but this crosspiece was heavily padded and set so that its surface was six or eight inches out from the post. While Lisa stood with her back to the post, Dan fastened her wrists to strong, heavily padded cuffs attached to the ends of the upper crosspiece. He next picked up a seven inch dildo, studded with rubber prongs which he generously lubricated. He used his finger to lube Lisa's rear hole, twisting and turning first one and then two fingers as he moved them in and out. When she had opened he inserted the end of the slick dildo and worked in its full length. Lisa had noticed a small wire trailing from the end of the dildo and assumed correctly that it contained a vibrator. Dan now pulled her legs back towards the post, forcing her back to arch against the lower padded cross and forcing her breasts out from her chest. He bent her legs at the knee and fastened her ankle cuffs behind the vertical post against some padding. He completed her bondage with a leather belt around her waist which arched her back even more severely and forced the vertical post against the dildo buried deeply within her ass. Her entire weight was then suspended from her wrists and, to a lesser amount, from her ankles where they were bound to the post.\n\nDan picked up a cat with two foot lashes and began to whip Lisa's front, soon covering her stomach, thighs, and breasts with red lines and making her nipples stand out sharply. He put down the whip and attached two clamps, complete with springs and six ounce weights, to her nipples. He moved over one of the dildo stands and used it to insert a large, ribbed dildo deeply into her pussy and then turned on both this vibrator and the one in her rear. Finally he took a small plastic clothes pin and placed it directly on her now extended clit. Smiling, he said, \"Don't go away. Just hang around and have fun for a while.\"\n\nTurning his attention back to Diana, he again picked up the whip and began to work her over, both on her bound ass and her exposed tits. When she was also covered with a network of red lines and each lash was bringing loud cries, he stopped long enough to add weighted clamps, similar to Lisa's, to her nipples. He then stepped behind her and began to really lash her exposed ass. Diana screamed at many of the blows, but it was obvious she also found them arousing, and before too long her entire ass had assumed a bright red color. Finally Dan stopped and again used a finger - and then two and three - to lubricate her anus and rectum. The sensation as he moved them in and out was diverting Diana's attention from her sore ass and aching nipples when, suddenly, Dan removed his hand. Her ass clinched in an attempt to hold him inside, but almost immediately she felt something else pushing at her rear opening. It took only a second to realize that what she was feeling was the head of Dan's hard and lubricated cock. As Diana had told Lisa, she had never experienced anal sex but the idea sounded interesting. Now she wasn't quite so sure. Dan's large organ felt like it was going to split her as he slowly worked it in and out. But she soon realized he was being very careful not to really hurt her and also that her body was rapidly adjusting to the intruder. Almost before she realized it she felt his groin press against her hot buttocks as his cock was completely imbedded within her rear. Slowly he began to move out and back in. The sensation was wonderful!\n\nShe began to try to push back against him to get him deeper, but her bonds didn't allow much movement. In the back of her mind she became aware of Lisa screaming into her own orgasm and saw her friend twisting in her own bondage. All the stimulation was driving her senses into overload. Never had she felt so excited. Suddenly one of Dan's forward thrusts was accompanied by the sting of a small cat wrapping around her flank and onto the sides of her straining tits. Each of the next several thrusts was similarly enhanced. These pushed Diana over the top and she started to come, clinching at Dan's member with her ass muscles and screaming at the top of her lungs. Her actions set Dan off and he began spurting deeply within her. Lisa, watching their action, began to come again herself.\n\nWhen they began to come down, Diana hung limply in her bonds, but when Dan started to release her, she said, \"No. Get Lisa first and let me hang here for a little while.\"\n\nDan took time to clean his cock and then turned to Lisa and began to unfasten her ankles. Soon she could take some of her weight on her legs again and could relax her sore muscles. She winced as he removed the nipple clamps but also sucked in her breath at the stimulation caused by the new pain of their release. When she was completely free, the two of them went back over beside Diana. Dan removed one nipple clamp, bringing a sharp cry. Lisa then removed the other and immediately brushed her hand back and forth across the brunette's nipple, adding to her new pain. She then bent over and sucked hard on the other girl's sore nipple and a second later Dan followed suit and sucked at her other side.\n\nDiana was obviously becoming aroused again by this treatment. When the two finally pulled away from her breasts and stood up, Diana quickly said, \"Don't let me loose yet. I'm still so hot and turned on. Dan, please whip me some more and then, if you can, fuck me again.\"\n\nLisa looked at her. \"I told you it would be hot, didn't I?\" She picked up a couple of cats from nearby and handed one to Dan. \"Here, I'll help you.\" With that she snapped the lashes across Diana's back, letting the lashes wrap all the way around her breasts to land on her tortured nipple, bringing a scream from Diana.\n\nFor the next ten minutes both Dan and Lisa whipped Diana all over her exposed body, leaving more red lines on her already striped flesh. Diana's breathing was becoming more and more rapid and she was twisting in her bonds. Lisa grinned at her. \"You're going to hurt like hell tomorrow, but it does feel good now, doesn't it?\"\n\nDiana practically yelled out, \"Yes! God, yes! Please, I need to be fucked.\"\n\nLisa noticed that Dan had become hard again and gripped his cock to add a little more stimulation. \"Let's take her loose, Dan. I've got an idea.\" As Dan began to loosen her bonds, Lisa went over and retrieved something from one of the drawers that neither Dan nor Diana could see.\n\nWhen he had her free, Lisa clipped Diana's wrist cuffs together behind her back and told Dan, \"Now lie down on the mat. OK, Diana, let's help you get your wish.\" She moved Diana so she was standing over Dan and then helped the bound girl to kneel and then impale herself on his hard cock. She stretched out atop him, but then Lisa said, \"Don't move yet. Just lie there.\"\n\nLisa was doing something, but Diana was feeling very hot, was buried in a deep kiss with Dan and couldn't see. Suddenly she noticed Lisa kneeling behind her and then felt the tip of a dildo pressing at her distended anus. As this shaft slid home she became aware that it was mounted in a harness around Lisa. Her friend was now fucking her with a strap on even as she rode Dan. \"Now,\" Lisa said and Diana forgot to be surprised and gave herself up to the incredible sensations of the dual penetration. In only a minute or two she was coming with Dan also reaching his own climax. Lisa kept thrusting and entered her own orgasm before the other two had fully finished theirs.\n\nLisa pulled out and rolled onto her back leaving the dildo sticking obscenely straight up. The other end was still pressing against her overly sensitive clit and she quickly loosened the harness to remove it. Diana pulled herself off of Dan and rolled onto her back on the other side from Lisa. All three were still breathing hard as Diana gasped, \"Wow! That was unbelievable!\"\n\n\"Everything for the last two weeks has been unbelievable,\" Dan said. \"You two are the most incredibly sexy women anywhere. If I make it through the rest of the summer without succumbing to total exhaustion, I'll be surprised. Very, very happy, but surprised.\"\n\n\"Amen,\" Lisa added. \"I feel like I've fallen through the rabbit hole into Wonderland or something. I've never even dreamed of most of the things we've been doing, but I love everything we've tried.. If you'd told me a month ago that I'd be fucking someone's ass - female or male - or that I'd enjoy being tied up and whipped, I'd have said you were crazy. Maybe I am crazy, but I love all of it.\"\n\n\"Exactly,\" Diana added. \"I'd never have believed it either. Sure, we've both played a few spanking games, but this - it's better than any fantasy I imagined. I know we can't keep it up at this level. I'm probably going to be too sore tomorrow for much.\"\n\nLisa broke in. \"You might be surprised.\"\n\nDiana gave her a look. \"Well, we'll see about that. But everything now is so new and exciting. Incredible new sensations. And I have the feeling I'm becoming addicted to this stuff.\"\n\n\"Not really addicted,\" Dan put in. \"I expect none of us will ever want to give up this kind of play. But addicted means you can't be satisfied without something. I love the feeling of lashing your pretty asses - mostly, I think, because I love the way you react to it. But I could just as much love straight sex with either of you. Bad analogy, but, well, I love Mexican food - but I could still be happy if I had to give up enchiladas and tacos.\"\n\n\"Which am I,\" Lisa asked teasingly, \"an enchilada or a taco?\"\n\nDan gave her a slightly irritated look. Then he broke his serious attitude and said, \"I'm not sure, but you are definitely one of the most hot and spicy dishes I ever eaten.\" Than he looked over at Diana and added, \"And you are definitely another.\"\n\n\"Well, before we all get heartburn,\" Diana said, \"maybe we'd better quit down here tonight. I'm still turned on by the thought of you whipping me again, but I don't think I could really take it. How about you guys? Maybe we could go watch some more of your dirty tapes before we quit tonight?\"\n\nBoth Dan and Lisa quickly agreed and the three headed upstairs.\n\nCousin - Ch. 16\n\nThey dragged the couch back some and spread some thick quilts and pillows on the floor in front of the TV. Dan retrieved one of his tapes, loaded it into the VCR, turned off the lights and then joined the girls on the quilts. The three snuggled together on the floor and watched as the tape started. The plot line, such as it was, of this one had two young women, a brunette and a redhead, paddling along a river in a canoe. Both wore only bikini bottoms, their rather large breasts showing no tan lines. The canoe pulled into the river bank and the two came ashore. They tied the canoe and then spread a blanket and began to eat lunch. Soon, however, their interest turned from food to each other and they began to embrace and kiss. Within a couple of minutes, both were completely naked and the redhead had her face buried between the brunette's spread legs. While they were thus engaged, two men wearing backpacks emerged from the woods. They stopped and watched the lovers for a few minutes and finally when the brunette came, they stepped forward and applauded. Both girls appeared startled and started to run but the men quickly caught them. They used some rope from their packs to tie the women to trees and then began to sexually tease them. When the girls didn't respond as much as the men wanted, they used their belts to whip the two until their bottoms were bright red and the girls became much more cooperative. The action, if not the plot, continued for over an hour with a lot of sex, including oral and anal, in almost all possible combinations among the four. There was also some more bondage and whipping, but compared to what Dan and the two girls had been doing earlier, it seemed pretty tame.\n\nThey watched until the end and then Dan put in another tape. But by the time the second tape had barely started, exhaustion overcame them and all three fell asleep on the pile of quilts, bare arms and legs intertwined. Once during the night Diana woke to find Dan and Lisa languorously making love. Still half dozing she ran her hands over both of them a few times and then fell back asleep again.\n\nThe next time Diana awoke it was to Lisa gently shaking her shoulder and holding her finger to her lips. Diana blinked away the sleep and saw that there was light outside the window. Lisa again indicated silence and held up a piece of soft rope. She indicated Dan and mimed tying his hands. He was lying on his left side with his lower arm stretched above his head and the other resting on his right side. Diana looked a little confused but quickly joined Lisa in slowly pulling Dan's right arm up near his left. Twice he started to move, but when the girls froze for a second, he settled again. When his hands were nearly together Lisa dropped a loop of the rope over his wrists and quickly began to wrap the cord around them. Diana threw her leg over Dan's prone form and Lisa placed a knee across his arms to hold him still as he woke to the surprising situation. When she had his wrists tightly bound, Lisa joined Diana in sitting on Dan, pinning him to the floor.\n\nBy now his eyes were wide open and he looked at the two girls. Lisa grinned at him. \"Today I think we'll be in charge of the ship, Captain. And I'm sure we'll deliver strong retribution for your many cruelties. Your harsh actions shall be repaid many fold.\"\n\nDiana couldn't contain herself any more at the exaggerated and overly dramatic speech and broke into laugher. This triggered Lisa who also broke down and soon Dan joined them. \"Well, if I'm to be your victim today, at least let me make a trip to the bathroom first,\" Dan said. Then he added, \"And, you rebelling winches, I'll give you my parole as an honorable officer.\"\n\nThis resulted in more laugher, but the two let him up so he could make his way down the hall with them at his side. Lisa said, \"OK, Captain. Why don't you shave - we'd hate to scratch ourselves on you. We'll grab a shower and then let's see what we can find to eat. But after breakfast we get to work you over. After all, I'm sure it's our turn. And besides I expect Diana is as sore as I am and we need a little rest.\" Dan agreed and in a half hour the three were back in the dinette eating leftover muffins and hot chocolate.\n\nWhen they had finished, Lisa turned to Diana and said, \"Well how should we punish this monster for the acts he inflicted on us yesterday?\"\n\nDiana joined in the spirit of the thing and said, \"I believe the punishments should fit the crimes. We should begin down in the dungeon where he can learn the other end of the whip.\" The two pulled Dan to his feet and once more - this time with his cooperation - bound his hands. They then descended to the hidden room.\n\nWhen they entered, Diana whispered in Lisa's ear and then Lisa nodded. They led Dan over to the center and replaced the rope on his wrists with padded leather cuffs which they fastened to ceiling chains, stretching him upwards. They then spread his legs and bound his ankles to floor rings, leaving him tightly stretched and not able to bring his heels all the way down to the floor.\n\nLisa went to the drawers and got something out. Dan couldn't see what but was sure that what ever it was would probably hurt. Lisa and Diana then walked around in front of him and held up two wooden frat type paddles, each about four inches across and a foot and a half long. He was right - they would hurt. But before starting the two girls used their hands to tease his cock and balls, making him hard and erect. Before he was aroused enough to come, they stepped back and a second later Dan felt a searing pain on his right buttock as the sound of Lisa's paddle echoed in the room. This was followed half a second later with a similar blow on his left cheek. For the next five minutes the girls alternated, sometimes placing their strokes all the way across and sometimes on the opposite side of his ass as well as the one nearest them. In this way Dan could never tell where the next blow would land and, in fact, several times a number of consecutive strokes landed in the same spot. The girls put a lot of muscle into each swing and soon Dan's entire bottom was bright red and he was crying out with each stroke.\n\nWhen the paddling stopped, Diana and Lisa began to rub their hands over his hot rear as well as to fondle his now very hard cock. \"Let's get him in a better position for some more activity,\" Lisa said. She and Diana released Dan's ankles and wrists and quickly pulled him - Lisa using his hard cock as a handle - over to one of the whipping benches. This device resembled a child sized version of a very narrow picnic table. The 'table' part was a heavily padded beam, about four feet long and five inches wide. It was set at a height of about two and a half feet from the floor. On either side where 'benches' would be on a normal picnic table were two, padded, two by six planks, extending a foot beyond the 'table top'. Lisa had Dan kneel on the extended portion of these two benches and lean forward along the top. This placed his pubic bone against the padded end, spread his legs widely, and left his genitals hanging in open air. Lisa and Diana quickly used leather straps to anchor his legs to the benches, both at the ankles and just below the knee. Another strap went around his waist, pinning him to the beam. They stretched his arms severely forward and fastened them to rings at the far end of the benches.",
        "Lisa and Diana then went over to the drawers and selected several toys. They moved back, one on each side, and began to use their fingers to tickle and tease their bound captive. They ran their fingers up and down his sides and under his arms. They pinched and twisted his nipples. They used their fingernails to sharply trace the region between his open anus and heavy balls. Finally when they thought Dan couldn't take much more of the forced laughter, each girl pulled hard on one of his nipples and attached a vicious clamp, complete with spring and heavy weights. Lisa bound a wide leather thong around his balls and added a one pound weight to its end. \"Now, I think we're ready to begin,\" Lisa said.\n\n\"Then let's hear him scream,\" answered Diana. The two young women each had a cat with thirty inch lashes which they began to apply to Dan's unprotected rear. They began lightly, but soon had worked up to where each stroke left a series of angry red lines and brought a cry or scream from the helpless man. They spread out, laying strokes on his back and thighs as well as his sore ass. Sometimes they would stop or slow down to break the rhythm. Once they stopped and Diana said, \"Let's add this and make it more interesting.\" Dan couldn't see that she was holding up a black silk blindfold, but soon found his vision shut off. Now there was no way to tell where the girls were and where or when the next lash would land.\n\nThey continued to whip him, sometimes consecutively some times landing blows in tandem, for fifteen minutes. Dan's body was marked almost all over with red lines and tears flowed from beneath the blindfold. His cries were real, showing that he really felt each stroke, but he never even considered a safeword, trusting the women not to go too far. He suddenly noticed a lessening of the whipping and guessed that one of the women had stopped beating him. A half minute later the blows stopped altogether and he felt feminine hands caressing his sore body, including occasional trips across his swollen cock and balls. Then he felt a slick finger penetrate his anus and begin to lubricate him and he began to wonder what was going to go in there.\n\nHe didn't have long to wait. The finger moved away and the tip of a dildo, slick with lube, touched his open anus and began to press inwards. Dan let out a groan as the seven inch rubber cock slid all the way inside and he felt smooth legs press against his own. A second later the dildo began to move in and out and he heard Diana say, \"Now who's going to get fucked, Captain?\" As she pressed the strap on in and out, he felt her lean forward and her breasts glide over his sore back. A second later Lisa bent to kiss him on the mouth and at the same time twist and pull on his nipple clamps. Diana kept up her tempo and Lisa turned so that Dan's face pressed against the soft area between her legs. He didn't wait to be told to try and use his tongue, although this wasn't easy in his bound position. Still, he managed to lick whatever area of flesh was within reach. He could hear Diana becoming more and more excited and finally felt her slam as deeply as possible into him as she loudly began to come.\n\nWhen Diana had finished, Dan expected to be released, but as soon as the dildo was removed and Diana stepped away, he felt another penetration began as Lisa inserted another strap on and the rape began once more. For several more minutes the pounding of his ass continued in a steady rhythm as Lisa pushed herself back and forth. Then suddenly he heard a gasp from Lisa and felt her stiffen and jerk awkwardly. He couldn't see, of course, but Diana had just pushed her own strap on into Lisa's rear. In a few seconds the two began to move together, Lisa driving her shaft into Dan and Diana pushing hers into Lisa. Lisa reached around and grasped Dan's hard cock, releasing the thong and weight, and before very long all three had come.\n\nAs the three separated, Lisa said, \"I didn't expect that. I'm not complaining, mind you, but I didn't expect it.\"\n\n\"That's OK. Neither did I,\" Diana said. \"But I decided it might be fun.\"\n\nThe two removed Dan's blindfold and released him from the bench. He looked from one to the other, took in both dildo harnesses, and decided he didn't need to ask what had been unexpected. What ever it was it had obviously been enjoyed by both of them and Dan had been too happy enjoying his own situation to worry about it.\n\n\"We're not done with you yet, Dan,\" Lisa said. \"Over here.\" She indicated the post with the dual crosspieces he had bound her to the day before. Dan moved so his back was against it and raised his hands. \"Not quite yet,\" Lisa said. \"Bend over first.\"\n\nAs Dan bent and grabbed his ankles, Lisa took a large butt plug, covered with small, flexible rubber projections, lubed it and began to twist it into Dan's distended rear. It was fairly large and took a bit of force - and some interesting sounds from Dan - to get it inside. When it was well seated, she had him back up against the post and securely fastened his wrists to the upper crosspiece ends. The lower crosspiece made him arch his chest well out and Lisa used a leather belt to secure his waist, holding him in the tight bow. Diana now came to help and the two of them bent his knees and tied his ankles up behind the vertical post, leaving him hanging mostly by his wrists. The butt plug pressed hard against the post, driving it in even more deeply. Lisa touched a switch and it began to vibrate.\n\nShe and Diana then went around in front and began to suck on Dan's sore nipples. The clamps had left them incredibly sensitive and the two sets of lips caused him to twist and sweat. The two women then retrieved their whips and for the next several minutes worked over his front, covering his chest, stomach, and thighs with red lines. They avoided his exposed cock and balls, but the worry that they might miss was always there, keeping Dan's attention. When they thought he had had enough, both knelt beside him. Diana took him in her mouth while Lisa used her fingers - and fingernails - to excite his balls and play along the ridge back to his stuffed rectum. In less than a minute Dan was coming hard, shooting his load down Diana's throat.\n\nDiana licked him clean causing shudders when her tongue touched his overly sensitive organ. But as soon as she pulled away, Lisa took her place and began to suck and lick. Diana took Lisa's previous place and began to tease his balls and the surrounding area. It took a while, but eventually Lisa got him hard and soon he was coming in her mouth for a repeat performance.\n\nThe two released him and Lisa said, \"OK, Captain, I think you need a break. Let's go out and lie in the sun, and maybe swim, for a little. But I've got another idea I want to try later.\"\n\nThey once again put together some lunch stuff, took a blanket and headed for the pond. Dan was pretty sore, but as he told the girls, didn't resent a second of it. He was just in a hurry to get over it so they could begin again.\n\nAfter a couple of hours of resting with occasional dips in the pond, Diana whispered something to Lisa. Lisa looked surprised but then slowly nodded agreement. The two turned towards Dan and started in his direction. \"Hey, I'm not sure I'm ready for more, yet,\" he called out as they approached.\n\n\"Don't worry,\" Diana said, \"This won't hurt at all. Really.\" She and Lisa moved Dan so he was sitting with his back to a tree and then tied his hands around the back side. They spread his legs a couple of feet apart and fastened his ankles to stakes to hold them there. Each gave him a long hot kiss and then they moved away to the blanket, about six feet from the tree and directly in front of Dan.\n\nDan watched them, curious as to what they had planned. The two girls knelt on the blanket facing each other and suddenly Dan's eyes flew open as Diana and Lisa reached out and embraced each other and locked into a deep open-mouth kiss. Dan's cock sprang to attention as for the next thirty minutes he watched the two beautiful women making love with each other, ending with a hot sixty-nine bringing them both to shouting climaxes.\n\nDiana turned to him and asked, \"Enjoy the show?\"\n\nDan could hardly answer them. \"Doesn't it look like I enjoyed it. God, you two are hot! Have you done that before?\"\n\nLisa shook her head. \"No, and I guess I'm a little surprised at how much I liked it. But, Diana, don't feel insulted, but I'm not going to marry you. I still prefer men.\"\n\nDiana laughed. \"Don't worry. I loved it too, but I agree that men have something you don't.\"\n\nLisa moved over to Dan and wrapped her hand around his hard shaft which was sticking up between his spread legs. \"You mean something like this?\" she asked innocently.\n\n\"That is exactly what I mean,\" Diana answered as she joined Lisa in front of Dan. The two looked at each other and then, as if on some signal, both lowered their heads and began to lick and suck until finally Dan exploded onto both of their faces. Then kneeling directly in front of him, they each licked the other clean. Finally they untied Dan and all three headed back for a quick shower.\n\nLater Dan said, \"What exactly was it you wanted to try, Lisa? I may be feeling up to it by now.\"\n\n\"Well it's something I got into my head when we were playing a week or so ago and Diana has agreed to help me try it. Let's go back downstairs.\"\n\nThey headed back to the dungeon again and this time as they entered Lisa led Dan immediately over to the center below the two ceiling chains where they had paddled him that morning. She and Diana once more stretched his arms and bound his wrist cuffs to the ceiling a good three and a half feet apart. They secured his legs to the floor, but this time only about a foot apart. Dan was still wondering what they had planned when Diana knelt and began to suck him, but once he was hard, stood back up.\n\nLisa now moved to stand face to face with Dan and he noticed she also wore wrist and ankle cuffs. Diana attached her wrist cuffs to the same points as Dan's. This caused her body to press against his and in a couple of seconds Diana used her hands to help insert his hard cock into Lisa's pussy. She then added a leather belt tightly around both of their waists and two more around the tops of their thighs, effectively holding him inside her. Diana then bound Lisa's ankles to the outside of Dan's.\n\n\"I'm certainly not complaining,\" Dan said, \"but strapped like this we can't move very much.\"\n\n\"Well,\" Lisa began, \"I have in mind some other stimulation.\" As she said this she looked towards Diana and Dan followed her gaze. Diana was shaking out the long tails of a heavy cat. \"Once while you were whipping me I got to wondering how it would feel to be whipped and fucked at the same time.\"\n\n\"It sounds hot to me, too, and I think we're about to find out,\" Dan said. Then he leaned towards her mouth and the two of them were locked into a deep kiss when Diana brought down the first hard, stinging lash around their bare asses.\n\nDiana lashed both of them, covering them everywhere between their shoulders and knees with red lines while they twisted against each other. She concentrated mostly on their bare asses. Each time a blow landed on Lisa, Dan felt her vaginal muscles contract around his cock and each stripe to his own ass drove him hard against her. Diana kept up the whipping, lashing them hard and making them cry out, usually into one another's mouth. After a number of minutes, even though the straps prevented his thrusting in and out, the constant stimulation drove Dan over the edge and he cried out as he emptied himself deep inside Lisa. His cries and ejaculation were all it took to start Lisa into her own orgasm.\n\nDiana stopped the whipping and, while fingering herself, watched the two shaking against each other. When they finally settled she asked, \"Was it as hot as you thought?\"\n\nDan and Lisa both answered together, \"Better.\" They laughed and Lisa continued, \"Definitely. There's just no way to describe it.\"\n\n\"In that case,\" Diana said as she began to release the pair, \"I may just have to try it myself.\"\n\nFor the rest of the day the girls kept Dan in bondage, finding several interesting ways to torment and excite him. With only a break for supper, they spent the rest of the evening in the dungeon subjecting him to several whippings and other tortures. But they also spent a lot of time using him sexually. They each managed to have his cock at least two more times and both of the women used a strap-on to fuck his ass again. By eleven that night all three were tired, but Dan was exhausted. Not even the activities of the two sexy women could get his cock hard again. The three returned to the bedroom where they tied Dan spread eagled on the bed for \"tomorrow morning\" as Lisa said. Then the two girls climbed in and, each with a hand on Dan's now limp cock, fell asleep.\n\nThe next morning Lisa was true to her word and rode Dan's now erect organ while Diana kept his mouth engaged with her pussy. When all three had come, Dan was released. Over breakfast the three agreed that the remainder of the time Diana was there they would trade off who was in charge and who was captive. That afternoon Diana got her chance to repeat Lisa's experiment of the previous day. This time they used the limb of one of the trees down by the pond. Once Dan was stretched tightly between a branch and stakes in the ground, Lisa helped get his rampant cock into Diana and tied her tightly to him. She then used the long tailed cat to whip both as they became more and more excited and then finally came in intense orgasms.\n\nDiana stayed for another week and the three explored an incredible variety of equipment and torments in the dungeon. They also found there were many ways that three people could have sex. Once when Dan was deep inside Diana's vagina, Lisa used a strap-on to take him in the rear. Then she switched and fucked Diana's ass. Dan made some remark about there being a dozen combinations of ways for the three of them to fuck together and, Lisa, the computer science major, had to enumerate them. They found a total of eight possibilities, not even counting any oral sex.\n\nThe day before Diana had to leave, she asked that the other two really work her over. She ended up spending the entire day in some form of bondage and received a number of severe spankings and whippings. She also spent the night bound to the bed while both Dan and Lisa used her repeatedly. By morning she was sore and stiff, but asked that before she left she be strung up with Dan again and whipped until they both came. Lisa agreed and applied the lash to both of them. She then untied Dan but before releasing Diana, she and Dan knelt and applied their tongues to the stretched beauty, both front and rear, until she came twice more.\n\nWhen, near noon, they finally got ready to drive Diana down to the airport, Diana realized that she - for that matter, all three of them - had not had any clothing on for ten days. As it was she had to be careful in choosing her clothing so the various marks wouldn't show. There was no covering the soreness, however, and she knew she was probably going to be squirming in her seat for most of the long flight.\n\nAt the airport, Diana hugged Dan and gave him a deep kiss. In deference to the location she restricted herself to giving Lisa a tight hug. \"Dan and Lisa, I want to thank you both for letting me explore this stuff. I never imagined it could be as hot as it was. I will guarantee that you two will both be in a lot of fantasies of mine from now on. You both need to come out to California some time. There's a cabin I know of up in the mountains that's almost as isolated as your place here. I'm sure we could find something to do up there.\"\n\n\"We just might take you up on that,\" Lisa said. \"And Diana, if you get back here some time, maybe the three of us can get together here again. I wouldn't count on having my aunt and uncle's place again. I doubt if we could get that lucky, but we'll find somewhere.\"\n\n\"I'll second that,\" Dan added. \"Both of you have made my life hotter than any fantasy for the last several weeks and while I don't think I could keep up that pace all the time, I'd love to give it a try sometime again.\"\n\nLisa looked at Dan and said, \"You'd better be able to keep it up a little while longer. Remember I'm not leaving for another week or so.\"\n\nThey all laughed and Diana added, \"Give him some extra for me, Lisa. If I can't be here, I can imagine what you're doing to him. Or what he's doing to you. That's my plane, I'd better go. It's really been more than wonderful. I'll e-mail you when I get back.\"\n\nThey all hugged once more and then Diana boarded her plane. Dan and Lisa stayed until after the takeoff and then went back out to the car. \"Well, we've got another week. What do you want to do?\" Dan asked.\n\n\"That's a dumb question. You know what I want by now, stud. What about you?\"\n\n\"Well, that was in my mind. But maybe you'd like to get some supper first. It's a long drive back and I don't think right now you and I like sitting still any better than Diana. There's a good seafood place on the way out of town. How's that sound.\"\n\n\"That sounds good to me,\" Lisa replied. Then she leaned over across the car seat and put her lips against Dan's ear. \"But then let's get back. I want to get out of these clothes and get you inside me.\" She then ran her tongue around the inside of his ear before moving away.\n\n\"I think you're reading my mind. But if you don't want me to stick out in the restaurant - literally - you'd better lay off of that sort of stuff for awhile.\"\n\n\"OK,\" laughed Lisa. \"At least until after supper.\"\n\nCousin - Ch. 17\n\nDan and Lisa arrived back at the farm well after midnight. Although it had been a long day and both were still sore and somewhat stiff from the previous few days' activities, they were still wide awake. In fact they were more than awake. For most of the long ride home they had been verbally teasing each other with suggestions and descriptions of more and more improbable sexual activities. Dan frequently let his right hand wander over Lisa's legs or across her breasts. Lisa hadn't cooled things down either and had, in fact, taken off her blouse the last half hour and kept playing with Dan's cock, first through his pants and then opening them to reach inside. Fortunately the road had been completely deserted the last hour and Dan was familiar with the way.\n\nWhen they pulled up beside the large, dark house, Lisa quickly opened her door and got out. When Dan emerged and looked around, he couldn't see where she had gone, but saw she had dropped her blouse a couple of yards from the car and her skirt a little farther along towards the shadows near the house. His shirt was completely unbuttoned from where Lisa had been playing earlier and now he dropped it beside her clothing and started towards where he thought she was hiding. He arrived next to the house and softly called her name. No response. Slowly he started around the house, listening intently. While the moon should have been getting near full, there were heavy clouds blocking any light. The only light for miles was from a small bulb burning in an upstairs bathroom and this did nothing to illuminate the ground around the house. He cautiously moved forward, staying close to the wall with his hand extended in front of him. He moved around the corner at the back of the house with still no sign of her. \n\nHe stopped and listened but the only sounds he heard were insects and a slight breeze through the trees. He thought maybe she was hiding on the far side of the porch and moved on along in that direction. Suddenly he thought he heard something behind him and started to turn. Just as he made it almost all the way around he was hit hard by a charging Lisa who clasped her arms around him and broke into laughter. Her bare breasts crushed against his chest and his arms responded by locking around her back. He was starting to meet her mouth with his when the force of her grip and her twisting movements combined with the dew covered grass and his foot slipped. They started down still with their arms locked around each other and Dan was just able to get his left hand free to help break their fall. Still he landed on his side and rolled onto his back with Lisa still clutching tightly to him. The shock of the cold dew brought a yell from him and this produced another laugh from Lisa. \"Think it's funny, huh?\" he said and rolled her over so her bare body hit the cold, wet grass and he ended on top of her. Lisa sucked in her breath, but instead of a shriek as Dan had expected, he received a hot mouth on his own as a pair of bare arms pulled him even more tightly against her.",
        "The kiss went on for a long time and their hands began to wander. Even before their mouths broke contact, both were completely naked. The first laughing embrace turned to a hot, passionate clutching and then to almost desperate love making. Lisa's legs wrapped tightly behind Dan's back, pulling him in as deeply as possible while her arms crushed him to her with surprising force. When the climax came both were surprised by its intensity and were left gasping and breathless. The clouds chose that moment to part and bright moonlight shone on the two lovers. Dan looked down at Lisa's pearly skin as the moonlight and moving shadows alternately striped it and caught reflections from her eyes. Her hair was spread around her head and her smile let the moonlight pick out her white teeth. His breath froze for a second and he thought he had never seen anything so lovely. The clouds came back and the spell suspending that instant of time was broken, but the image stayed. Dan thought to himself, \"She's wonderful - fun to be with and the hottest woman I've ever dreamed of, but is that it? Or maybe I'm really falling for her.\"\n\nHis mind filled with confusing images and thoughts and he almost didn't hear when Lisa said in a quiet voice, \"That was really nice, Dan. Hold me tight for a few more seconds.\"\n\nHe pulled her to him, but in a couple of seconds he felt her begin to shiver. Then he realized he was shivering, too. \"Are you OK?\" he asked.\n\n\"Just a little chilled. I guess we'd better get inside.\"\n\nThey stood and picked up what clothes there were around them and then started back towards the front of the house, Dan's arm tight around her shoulders. Before reaching the front door they picked up Lisa's clothes and Dan's shirt. As he unlocked the door, Dan remarked, \"I guess we'll have to do some laundry tomorrow.\"\n\n\"I guess,\" Lisa replied. But I don't expect we'll be getting too much more dirty for a little while, do you?\" Then she shivered against him again.\n\n\"Possibly not, but now we'd better get dried off. Or maybe better yet, a hot shower. Come on, we can take care of this stuff in the morning.\"\n\nHe led her up to the bedroom and on into the bath. They showered together, but more as comfortable companions than as playful sex partners. They dried each other with large, fluffy towels and then went back out to the bedroom. Lisa yawned and this brought a similar response from Dan. She pulled down the bedcovers and climbed into the bed. Dan started to join her, but stopped before turning off the light, he instead ducked into the closet for a second and returned with something in his hand. At first Lisa couldn't see what it was, but as he set it on a high dresser beside the bed she saw that it was a red glass candle holder on an iron stand. He lit the candle, turned off the light and then joined her beneath the covers.\n\nThe flickering candle cast a shadowy red light across the room as the two moved to hold each other. They clung happily together, gently stroking and softly kissing. Occasionally the moonlight would reappear, but usually departed within seconds, leaving only the ruby candlelight. The caresses soon stirred their passions again, but this time their lovemaking was slow and gentle. When at last they were spent, both fell almost instantly asleep.\n\nDan woke to sunlight with Lisa still molded against him. The candle had long since burned out and with it the mood of the previous night. However, that is not to say that passion had cooled. Dan immediately felt himself stir as he became aware of Lisa's bare body against his own. He looked at her and thought that sleeping she looked very young and innocent. He leaned over and gently kissed her neck, her cheek and her eyelids. She opened her eyes and smiled up at him. For maybe five seconds she stared into his eyes and then suddenly wrapped her arms around his neck and pulled him down into a deep kiss, her tongue exploring his mouth. When she pulled away this very young and innocent looking creature looked him in the eyes and whispered deep in her throat, \"I'm horny. Fuck me, stud.\"\n\nThe effect was incredibly erotic. Dan felt his cock stiffen and his breath caught in his throat. But Lisa wasn't waiting. She pulled him down on top of her and reached her hand for his hard member. This broke Dan's spell, and he responded with equal passion. This time they made love in a hot, pounding tangle that would have left both of them bruised had it lasted for more than two minutes. But such was the intensity of their arousal that their passion peaked before then and left them gasping and nearly limp.\n\nThey rolled onto their backs, and Dan asked, \"I'm not complaining, but what brought that on?\"\n\nLisa laughed. \"I have no idea. Maybe I'm just becoming hooked on your nice bod and hard cock.\" With this she bent over and gave his now softening member a quick kiss and then leaped from the bed and headed towards the bathroom. Dan shook his head in disbelief and quickly followed her into the shower.\n\nWhen they had dried each other off, Lisa turned towards Dan and said, \"I really am horny today. Let's stay naked again.\"\n\nDan looked up and down her taut body. \"You won't hear any objection from me on that,\" he said. I'll never get tired of seeing the 'real' you.\"\n\nAs they ate breakfast they talked about the previous week. \"You really didn't mind it when I made it with Diana, did you?\" Dan asked.\n\n\"No,\" Lisa answered. \"I was even a little surprised myself, but I guess I really accepted it all as fun and games, and as long as we all played, jealousy didn't even enter into it. After all, did you mind when I made it with Diana instead of you?\"\n\n\"No, I see what you mean. But you two were so hot I wouldn't have had a chance to get jealous anyway. I was too busy looking and getting turned on. But I'm also really glad we've got this week to ourselves.\"\n\n\"Emmm,\" Lisa said. \"I completely agree with that. I really like you, Dan. And I can't tell you how glad I am that you introduced me to this kinky sex. I'm still not sure why, but I really get off on being tied and whipped or whatever. But I guess you're right and I'm not addicted. Straight sex, like last night, with you is just as wonderful. It's nice to have a childhood dream turn out even better than you thought it would be.\"\n\n\"I'm not sure I introduced you any more than you introduced me,\" Dan replied, \"but I like it just as much as you. Both sides.\"\n\n\"Well, whoever's idea it was, I'm happy they thought of it. I know we can't keep up forever like that first week, but I told you I was horny today. I want to spend the whole day and maybe night on just sex. Tie me up and torture me and fuck the living daylights out of me.\"\n\nDan looked at her thinking how he could never have imagined this side of Lisa years ago when they stayed here summers. \"I'm sure I couldn't dream of any better way to spend the day. Come on, wench, let's take you down to the dungeon.\"\n\nTwenty minutes later Lisa was bound over the end of the leather horse again. As before her legs were wide spread and bound to the frame and a wide belt held her waist down against the smooth leather. Her arms were pulled up hard above her head, arching her and placing a strain on her back. Weights hung from her clamped nipples and Dan was vigorously applying the two and a half foot leather strands of a heavy cat to her red ass. A large vibrating dildo filled her pussy and each blow of the cat brought a cry but also tightened her muscles against the knobbed intruder. He continued to whip her another fifteen minutes, applying the lashes to her back, thighs, flanks and the sides of her breasts. When she was covered with red lines Dan dropped the cat and proceeded to ream her rear with his hard cock.\n\nLisa came even harder than she had before from this treatment and afterwards hung limply from the bonds on her wrists. Dan began to release her, but she stopped him. \"No. Leave me here and work me over some more until you're ready to take me again. I want more.\"\n\nDan could see she was still excited and turned on, but still was surprised by her request. Never the less, he stopped what he was doing and thought for a second. Then he suddenly removed the clamps from her nipples, bringing cries at this renewed pain, but he only allowed her a few seconds for it to subside. He then picked up a smaller cat and began to use this on her stomach and already sore tits. He whipped her breasts for a while and then stopped to remove the dildo from her pussy. But again in only a few seconds he reinserted in, but this time into her distended anus. It was fairly large and took a little pushing and twisting to make it go all the way in, but even though this activity brought cries and a couple of shrieks from Lisa, she had no thought of using her safeword. Dan again picked up the cat and began to once more apply it to her, now covering all of her body with the lashes. He finally landed several along the crack of her ass and onto her open pussy, bringing a loud scream. This he followed by using his now hard cock to plunge in and out of her open pussy in long, hard, deep strokes until finally they both came once more. This time she didn't object when he released her, but did find the strength to give him a tight hug and deep kiss.\n\nFor the rest of the morning they continued in the dungeon with hot wax, clamps, paddles, and a variety of other toys. All wasn't just pain. He bound her tightly and tickled her until she was barely able to breathe. He used vibrators as well as his fingers and tongue to excite her sexually to uncounted orgasms.\n\nBy lunch time Dan was himself worn and felt sure that Lisa must be exhausted. But she was still excited and when lunch was over had recovered most of her energy and desire and wanted to play some more. This time Dan decided on a little strenuous stimulation and staked her out spread eagled on the grass out back. He spent the next three hours teasing her almost to orgasm and then stopping to leave her in frustrated agony. By the time the three hours were over, Lisa was screaming out in frustration and when Dan finally pushed himself deeply inside her she came within seconds. And then again. And again. And once more before Dan reached his own climax.\n\nThis time even Lisa had to admit that she was nearly exhausted. Dan suggested she take a nap. \"I've got something in mind I have to set up,\" he said. \"So why don't you rest for an hour or so and then maybe you'll be able to handle it.\"\n\n\"I expect I can handle anything you think up,\" Lisa retorted. \"But I guess I could use a little rest first. Why don't you tie me to the bed and let me have that nap.\"\n\n\"I'll certainly agree to the nap, but not to tying you to the bed when I'm not there. That's a definite hard and fast rule. If someone else isn't right there, no tying so you're restrained.\"\n\n\"Yeah,\" Lisa agreed. \"That makes sense. Still, I wish there were some way you could. I love that helpless feeling.\"\n\n\"Tell you what,\" Dan said. \"Suppose I tie your hands behind your back. You could still move if you have to and I'll just be outside here somewhere. How does that sound?\"\n\n\"Not quite as good as being stretched, but not bad. I can go along with that,\" Lisa said.\n\nDan put on wrist cuffs and clipped her hands together. He helped her to lie down on the bed, gave her a kiss, and said, \"OK, have a good rest. I'll be back for you in a couple of hours.\"\n\nWhen Lisa had lain on the bed, she relaxed and began to feel her exhaustion. She smiled at Dan, yawned, and was practically asleep as he left the room. Dan went out to the barn and in a back storage area found a pole designed for pole barn construction. To someone familiar with farm buildings these were quite common. It consisted of a small log, about five to six inches in diameter, ten feet long, and smoothed of all bark and other rough surfaces. While the surface was not quite sanded, it still was worked to an almost gloss finish. It was not a perfect cylinder - branches and bumps had been removed with something like an adze, but the surface had been sanded enough so there were no splinters or sharp spots.\n\nDan carried this pole out onto the open grass area above the pond. He took it over near an isolated tree and laid it at an angle so that the top was about eight feet off the ground. The pole now made the slanted side of a right triangle about fifty degrees above horizontal. He used some nylon strapping to securely anchor the top end to the tree and the bottom end to a couple of stakes driven into the ground. Next he went back to one of the workrooms in the barn and returned with a large sheet of finished leather. Dan had been playing with leather during the summer, trying different techniques and learning to work the material. This sheet was one of the pieces of stock he had used. Now he wrapped it around the pole so that a five foot section was covered with the leather. He then used a staple gun to attach the sheet to the under side of the pole. The leather now began at a point about two feet above the ground and continued up the pole for five feet. Another trip for some heavy leather harness straps and a couple of other things from the dungeon completed his preparations.\n\nAbout four o'clock Dan went to get Lisa. As he entered the room she seemed to hear and in a second or two, opened her eyes. \"Hi,\" Dan said. \"Ready to be tortured some more?\"\n\n\"Just let me make a quick trip to the bathroom, and then you can do as you wish to me. My body is yours.\"\n\nDan laughed. \"How could I possibly resist an offer like that. But before we get started are you hungry for dinner yet? I expect what I have planned will take two or three hours.\"\n\n\"Sounds interesting,\" Lisa said. \"But, no I'm not hungry yet if you aren't.\"\n\n\"OK,\" Dan said as he released her hands. \"We'll wait. I'm sure you'll need the dinner break by the time I'm finished with you.\"\n\nDan made sure that wrist and ankle cuffs were securely fastened to Lisa and then led her out to his new pole. Lisa looked at it with interest, but didn't immediately see the purpose. She looked blankly at Dan.\n\n\"I read about something like this somewhere once,\" Dan said. \"You've heard the expression about being ridden out of town on a rail and you know what it means to ride the leather horse downstairs. And we've talked about the wooden horse, or pony, but you know that's a little more severe than we want. And then there are the whipping horses. Well, this is called the whipping rail and is sort of a combination. I'll show you how it works.\"\n\n\"I thought you might,\" Lisa said somewhat sarcastically.\n\nDan led her over to the slanted pole. He reached into the bag lying nearby and pulled out a large, knobbed dildo about eight inches long. He held it up in front of Lisa and said, \"Guess where this goes.\"\n\nHe didn't expect an answer, nor did he wait for one, but reached between Lisa's legs to find her already soaked. He used her own juices to lubricate the dildo and work it all the way inside her. He then had her straddle the pole, standing on two small wooden boxes on either side. The boxes were about four inches thick so they raised her by that amount. He had her scoot up against the pole until it was solidly contacting the end of the dildo. He then attached the protruding flanged end of the rubber cock to the pole so it couldn't slip. He leaned Lisa forward along the slant and used some straps to pull her hands tightly above her head along the pole. In this position she was lying along the leather covered pole with her breasts on either side and the dildo being pressed deeply into her as the smooth leather touched and separated the insides of her thighs. Dan removed the boxes and now more of her weight was transferred to the dildo base. Her toes could just reach the ground to take a slight amount of the strain. Dan quickly bound her ankle cuffs to stakes anchored deeply into the ground. Her open pussy lips made contact with the rapidly warming leather and her juices flowed even more freely.\n\n\"How does that feel?\" Dan asked.\n\n\"Sexy as hell,\" Lisa replied. \"Now what are you going to do to me?\"\n\nDan didn't immediately reply, but retrieved some more things from the bag. \"This, among other things,\" he finally said as he began to rub her nipples and then added two rubber coated clamps. He hung some lead weights from the clamps and gave them a couple of tugs to make sure they were well attached. He let his hands wander over her body a little, running his finger up the crack of her ass and touching her opened anus. \"I also plan to show you why it's called a whipping rail,\" he added.\n\nDan picked up a cat with three foot soft leather flails. He let them trail over Lisa's back and ass, pulling them back and forth. He then touched a switch on the base of the dildo and it began to vibrate deep within the bound girl's pussy. \"This is to be a long, slow torture. I plan to keep you on the rail for at least a couple of hours. Oh, and I also plan to whip you and otherwise abuse your lovely body while you're there.\" With this he lifted the cat and brought the tails crashing down across her open ass.\n\nDan whipped her quite hard for several minutes. When he stopped he allowed only a minute respite before he began applying a long feather to Lisa's flanks, the backs of her legs, and the crack of her ass. She pulled and strained against her bonds as her laughter erupted in sporadic gales. Then he stopped and applied the whip once more.\n\nFor the next two and a half hours Dan alternately whipped and then teased and tickled his bound victim. The pressure of the dildo in her pussy, the feel of the warm leather, the pole holding her legs spread widely apart, all combined with the treatment to make her more and more turned on. Lisa actually came several times from the whipping and tickling. Finally, after a particularly severe application of the cat to Lisa's ass, Dan stood on the two discarded boxes and straddled Lisa's lower body. He applied some lube to Lisa's rectum, working his fingers in and out. He then leaned forward along her length and pushed his cock deeply into Lisa's ass. As he entered, Lisa screamed in a tremendous release. She achieved orgasm twice more before Dan finally came deeply in her bowels.\n\nDan released her bonds and removed the clamps. \"Well, how do you feel about it now,\" he asked.\n\n\"Pretty much like before,\" Lisa said. \"Sexy as hell. The feeling of that leather between my legs and tits is incredible. This is definitely a fun toy. But you were right and I do need a break now. If I can walk straight and manage to sit down, we can find some supper.\n\nLisa found that walking was actually a little more trying than she had expected. The whipping, like the others, didn't actually break the skin or do any lasting damage, but the long application had left her sore and with a few welts. Being stretched out on the rail had made her muscles stiff and strained. But the unbelievable heights of the sexual arousal made it seem more than worthwhile. She made her way back to the house and Dan let her rest while he made the two of them supper.\n\nWhen they had finished eating Lisa was feeling a little less stiff, but the long afternoon had definitely taken its toll. She finally turned to Dan and said, \"I want to keep playing tonight, but I'm afraid I'm not really up to any more rough stuff for a while. Why don't we watch some more of those hot videos?\"\n\n\"All right by me,\" Dan said. \"Come on. Let's pick out a couple and get settled.\"\n\nWhen they had the first tape loaded and ready, Lisa said, \"Tie me up, Dan. Just don't make it too tight, OK?\"\n\n\"If you're sure you want that.\" Lisa nodded. \"OK, then,\" he said as he bound her arms wrist to elbow behind her back. Lisa was obviously becoming aroused again and he asked, \"Do you feel well enough to sit on my lap to watch.\"\n\n\"Sit on your lap?\" Lisa said. \"Just exactly how did you have in mind for me to sit?\"",
        "\"That depends on what you feel up to,\" Dan replied.\n\n\"I think you mean what you feel up to,\" Lisa grinned and looked at Dan's hardening cock. \"I bet what you really mean is not sit on your lap, but be impaled on that nice hard shaft. Right?\"\n\n\"I won't deny that that sounds awfully good, but aren't you too sore?\" he asked.\n\n\"I hope not,\" Lisa replied. \"Let's try it and see.\" With that she let Dan lower her onto his hard cock and as it slid into her she gave a little shudder.\"\n\nDan quickly froze and asked, \"Does that hurt too much?\"\n\n\"Not if we don't get too rough. Let's just sit like this, it feels so good. If it starts to hurt too much, I'll tell you.\"\n\n\"All right, but be sure and let me know if you want me to stop anything. OK?\" Lisa nodded and Dan kissed the back of her neck and gently stroked the sides of her breasts as they started the tape and settled down to watch.\n\nThe couple held their position with Dan comfortably embedded in Lisa's pussy for the entire first tape. They had to separate to put in a new cassette, but then to Dan's surprise and delight, Lisa wanted to resume where they had left off. Again they settled, but before the end of the second tape the action on the screen started Lisa rocking and squeezing Dan with her vaginal muscles and soon both were slowly and gently making love. Finally Dan could hold out no longer and came which triggered Lisa's release. As the second tape ended they remained coupled with Dan's member shrinking inside her.\n\nAfter the tape had ended, Dan released Lisa's arms and the two climbed the stairs towards the bedroom. Moving up the stairs brought a couple of groans from Lisa and as they showered together Dan noticed that her pussy was swollen and red along with her nipples. As they finally got ready for bed, Lisa said, \"Dan, I'm afraid I'm too sore to be tied to the bed tonight. I hope you don't mind.\"\n\n\"Don't be silly,\" Dan said. \"Of course I don't mind. I was pretty rough on you today. Tell you what. Would you like to keep me tied to the bed tonight?\"\n\n\"That does have possibilities,\" Lisa said. She helped Dan put on soft wrist and ankle cuffs and then tied him spreadeagled to the bed. When she finally shut off the light and climbed in beside him, she said, \"I really am too sore to ride you tonight. But that doesn't mean I can't think of something else.\" She then lowered her head and began to lick his cock. Within seconds he began to respond and soon Lisa was taking his hard cock deeply into her mouth. She continued to suck and tease him for several minutes until he suddenly came in her mouth. Lisa swallowed and licked him clean and finally gave him a deep kiss before snuggling down next to him with a hand resting on his cock.\n\nCousin - Ch. 18\n\nDan came slowly awake. First he noticed bright sunlight in the room, so it must be morning. He became aware his hands and feet were still restrained, but he was also aware of a wonderfully comfortable relaxed feeling. This entire process had taken perhaps three seconds and in the next second Dan realized the wonderful feeling was a warm, wet, feminine mouth wrapped around his cock. He suddenly sucked in his breath as Lisa pushed her tongue into tip of his rigid member. She looked up and smiled at him and continued to lick and suck until Dan went over the edge and shot his load deeply into her throat.\n\nShe pulled back and, with a little cum dripping from the corner of her smile, said, \"Good morning, Lover.\"\n\n\"A most wonderful morning,\" Dan replied. \"Definitely a wonderful way to start the day. Now what can I do for you?\"\n\n\"Well, if you can be very gentle ...,\" Lisa replied as she arranged her knees or either side of Dan's head. She lowered her slit towards his mouth and Dan sent his tongue stretching to meet her. For the next several minutes as he licked the aroused girl he noticed that several times he must have touched someplace a little sore because Lisa gasped or pulled away from the touch, but mostly he just noticed that she became more and more turned on. Finally his relentless attention pushed her over the edge and she came.\n\nLisa released him and the couple headed for the bathroom. In the shower Dan got a good chance to examine the visible results of their play yesterday. There were still several red welts on her ass and one that ran across the back and side of her left thigh. A few small lines decorated the sides of her breasts and her pussy lips and nipples still looked a little swollen. When he asked, Lisa admitted her muscles were still a little sore and several spots - especially her tits, pussy, and anus - were pretty tender. \"I'm afraid we'll still have to lay off today,\" she said. \"I think my arms might even be too strained to use a whip on your cute ass.\"\n\n\"The way we've been playing,\" Dan responded, \"it's amazing we're able to move at all. Got anything in mind to do today, then?\"\n\n\"Not really. What about you?\"\n\n\"I don't know either.\" Then after a few seconds Dan added, \"Just how stiff are your muscles? Would you be interested in a hike or maybe even camping a couple of days?\"\n\n\"No, I'm sure I could handle that,\" Lisa said. \"Sounds like fun. Do you have some place in mind?\"\n\n\"Well, if you're really up to hiking,\" Dan said, \"there's a beautiful spot I know of, but it's about eight miles or so from here. Are you up to that much of a hike?\"\n\n\"Sure,\" Lisa said. \"That's not really that much. I assume you mean one way and we'd camp. I don't think I'd want to try a sixteen mile round trip today. Where is this place?\"\n\n\"It's back up in the national forest area beyond the next ridge north of here. We go along one of our trails until it runs into the edge of state forest land. That's about a half mile. Then along a forest trail for another mile and a half until we get to the national forest, then two miles down the White Oak Ridge Trail, and finally another four miles along another forest trail. We end up at a nice spot on Emerald Creek. There's a waterfall with a pool big enough to swim in and a good place to camp. And the nicest part is it's so far back that I don't think anyone else has found it. I've never seen any evidence that anyone else has been there, anyway.\"\n\n\"Sounds wonderful,\" Lisa said. \"It really is isolated? I mean I don't expect to be this sore for very long and a spot like that sounds like it was made for lovers.\" She gave him a look which started his cock responding on the spot.\n\n\"Like I said,\" Dan replied, \"I've never seen signs of anyone else. The trail is mostly just a deer trail, not even maintained. There might be a hiker or two along the White Oak Ridge Trail though, so we had probably better put on some clothes.\"\n\nLisa made a face. \"Do I have to? OK, but when we get there ... And one other thing, I want to bring a few toys along.\"\n\nDan grinned at her. \"Why, I never would have thought of that on my own,\" he said sarcastically.\n\nLisa stuck out her tongue at him and swatted his ass with the towel she was holding and then flounced out into the bedroom. \"At least we don't have to get dressed until we're ready to leave,\" she called over her shoulder. \"Come on and let's get some breakfast. I don't know about you, but I haven't had enough to eat yet today.\" She then started down the stairs, the double entendre hanging in the air, as Dan shook his head and followed her.\n\nWhen they had finished breakfast, Lisa went to her car to get her boots and some of her camping stuff while Dan dug out some of his own. They sorted through the equipment, deciding what to take. \"Both of these bags are right hand,\" Dan said. \"We can't zip them together and I assume you don't have in mind sleeping apart.\"\n\n\"I'm not even thinking of sleeping right now,\" Lisa said. \"Can't we just unfold them enough to use as blankets? After all, it's pretty hot today and I expect it won't cool off too much tonight.\"\n\n\"Yeah, we can do that,\" Dan said. \"I'll throw in another blanket we can use with them if we need to.\"\n\nThey also each grabbed a couple of things from the dungeon and added them until finally they had two light packs made up with enough food for about three days. They set them down and Dan said, \"Now for the really hard part - putting on clothes. I would much rather follow your cute little naked ass down the trail, but what the heck.\"\n\n\"I'm not real happy about it either,\" Lisa said. \"But I was planning on you going first so I could watch your cute little naked ass.\"\n\n\"I guess we'll just have to wait until tonight and then chase each other in circles,\" Dan responded. He put on a pair of cutoffs and a short sleeved shirt along with his hiking boots. Lisa also donned her boots and cutoffs, so short her ass cheeks almost pushed out, and a shirt with the tails tied under her breasts to reveal several inches of bare skin. After one last check around the house, they picked up their packs and went outside, locking the door behind them.\n\nAs they started towards the woods Lisa asked, \"Am I covered OK? You can't see any whip marks or such can you?\"\n\n\"No, not really,\" Dan replied. \"There's that one welt around your left leg, but that could be from a slapping branch or such. No one will notice anything even if we do happen to meet someone.\"\n\nThe day was already warm but under the trees it wasn't too bad and the couple walked for a while in companionable silence, broken only by the sound of insects. After a few minutes they came to the edge of their aunt and uncle's property and joined a spur to a forest trail. After the better part of an hour this intersected a wider trail marked with metal oak leaf shaped tags indicating a designated hiking trail. Still they saw no one else for the next hour and a half. Dan began to look closely at trees and rocks along the trail side. \"It's not too much farther to the turnoff,\" he said. \"We've got to watch closely because this one isn't marked and is pretty hard to spot. Watch along the left side. It should be somewhere about fifty yards past a big maple with a hickory on either side.\"\n\nIn a few minutes Dan spotted the trees he'd described. \"OK, now, somewhere just up here.\" He looked closely along the trail edge. Lisa peered in the same direction, but couldn't see anything different. Finally Dan said, \"Right here, I think.\"\n\nHe pushed through some thick bushes and around the side of a large rock. Lisa followed him and when she rounded the rock could make out a faint trail leading away from the one they had been following. \"How in the world did you ever find this the first time?\" she asked.\n\n\"I happened to be up here one November before there was any snow on the ground. With the leaves gone you can see it a little better. Anyway I just followed it to see where it went and discovered the falls.\"\n\nThey followed the deer trail for another half hour when Dan finally said, \"We've still got a couple of hours to go to get to the falls. Want to stop for some lunch now?\"\n\n\"That sounds good,\" Lisa replied. \"Look. How about up there.\" She pointed to what looked like a wide flat area part way up a hillside about a hundred yards from the trail. \"That should make a nice picnic grounds, don't you think?\"\n\n\"Looks good to me,\" Dan said and started in that direction. After a short climb they came out onto the area and found that it wasn't completely flat. In fact it was a wide depression about thirty feet across and covered with a thick mat of leaves and pine needles. \"Looks perfect,\" Dan decreed.\n\nThey shed their packs and got out the extra blanket Dan had brought - an old cotton Indian blanket, somewhat worn, but soft - and spread it on the ground. Lisa had made some sandwiches for their lunch and got these out along with some fruit and cheese. The couple sat side by side on the blanket, Lisa leaning against Dan's shoulder, while they ate.\n\n\"This is beautiful up here,\" Lisa said. \"Maybe I should forget about computer science and become a forest ranger.\" Dan laughed, but agreed that this part of the country was some of the best in existence.\n\nWhen they had finished they continued to sit where they were and talk. Dan began running his hand up and down Lisa's bare legs and she started letting her hands roam also. Before too long the talk stopped and they began to neck. Lisa's breathing was becoming more rapid and as she stroked her hand across the hardening bulge in Dan's crotch, she said, \"I don't know what you've done to me, Dan, but I can't seem to think about much of anything else but sex when you're around.\"\n\n\"It isn't just me,\" Dan replied. \"You are definitely the hottest and sexiest woman I could ever have imagined. It sounds trite, but sex has never been like it is with you.\"\n\nLisa had her arm around Dan's neck and now pulled him closer, covering his mouth with hers. As her tongue snaked into his mouth her free hand began to unfasten his cutoffs. When she had them loosened, she let her hand move inside and wrap around his cock. She pulled her mouth back slightly and said, \"You know, sometimes you talk too much.\" She then locked her mouth back to his and the two of them began to remove each other's clothing.\n\nDan started to enter her, but suddenly Lisa gave a groan and said, \"I'm afraid I'm still too bruised. I want you in me desperately, but I still need a few hours to recover. Let's try this instead.\" She shifted around bringing them into a sixty nine position and lowered her pussy over Dan's mouth as she took his hard cock into her own mouth. Dan didn't argue, but began to lick gently and soon both were coming in a warm and easy climax.\n\nThey cuddled for another twenty minutes and finally decided they had better go if they didn't want to get to the campsite too late. \"We'll have plenty more time for that once we reach the falls,\" Dan said, and reluctantly he and Lisa once more dressed and shouldered their packs.\n\nThe trail, such as it was, wound through the woods for another mile and then came to the bank of a small stream. Here it turned and followed the bank on upstream. Actually it intersected another deer trail which ran in both directions along the stream, but Dan indicated they wanted the upstream direction. Occasionally the woods opened up and they could see across forested valleys to other ridges beyond, but mostly the trees were heavy enough to limit their view to a short distance. After another hour the trail turned left away from the stream side and on into the woods. Here the trees were large maples and white oaks with some poplar and hickories for variety. While these weren't truly first growth, they were certainly large and a trunk three or even four feet across wasn't unusual. The only sounds were insects and the breeze in the tree tops. There was no indication of civilization at all.\n\nSuddenly Dan stopped and cried sharply, \"Wait! Hold very still.\"\n\nLisa froze where she was and Dan slowly moved around in front of her. He stopped less than a foot past her, looking intently down the faint trail in front of them. Lisa held her breath and strained forward to try and see what he was watching so intently. Than all of a sudden Dan whirled around and, catching her in his arms, pulled her into a tight embrace and kissed her hard. Lisa was startled and for a second fought him, but then relaxed and returned the kiss. When Dan finally pulled away, she said, \"What was that all about? What did you see up there?\"\n\nDan grinned at her. \"Nothing. I just decided I needed a kiss.\"\n\nFor an instant Lisa looked as though she was going to erupt at him. Then a laugh worked its way out and she broke down in hysterics. \"You startled the heck out of me. Just wait, I'll get even,\" she said in between gasping for breath.\n\nThey went on for another half mile or so and then the trail rounded the shoulder of a steep hill. Lisa went around the corner in front of Dan and then suddenly stopped. \"Here it is,\" Dan said.\n\n\"It's beautiful! Absolutely perfect,\" Lisa said. In front of them was an open glade a hundred feet across. Running through it was a stream fifteen feet wide and at the far end was a waterfall. The falls had a drop of about twelve feet into a deep pool fifty feet long. This late in the summer the water coming over the falls was not a heavy flow, but was still more than just a trickle. The pool looked like it was deep and where it flowed out the stream tumbled along the shallow bed. On the near side of the pool was a grassy glade ending in a four foot stretch of beach. The beach extended thirty feet along the pool and then gave way to large smooth rocks on either side. While the beach wasn't sand, but rather a mix of fairly small gravel, it was smooth and would be comfortable to walk on. The grassy area looked almost like it was maintained - smooth and level and practically nothing in the way of weeds. At the edge of the glade the land sloped upwards to another flat area about six feet above the stream. This area was surrounded by large trees and looked to be an ideal place to set up a tent.\n\nDan said, \"It is probably the best campsite I've ever found. Let's set the tent up over there.\" He pointed to the elevated area. \"If we want we can build a fire on the flat rocks down near the stream. As long as the fire danger isn't high, no one in the forest service will worry about a small campfire. After all, we don't want to be interrupted by a bunch of firefighters, now do we?\"\n\n\"Most certainly not,\" Lisa agreed. \"Come on and let's get the tent up. I want to swim in that pool.\"\n\nThey arranged the tent and their gear. As soon as everything was in place, Lisa pulled off her clothes. Dan watched her slim form as she undressed and than headed towards the water. He quickly began removing his own clothes. Lisa stepped into the pool and called out, \"Hey! This is cold!\"\n\n\"What did you expect?\" Dan called, joining her in the edge of the pool. \"Actually it's pretty cool but not really cold. You can swim in it without freezing. I have a number of times.\" He dove past her into the water, splashing her as he hit. Lisa squealed and then plunged in to follow him.\n\nThey swam around for twenty minutes and then headed for the bank. Dan had brought the cotton blanket and a couple of towels down with him and now he got the towels and tossed one to Lisa. They dried themselves and then spread the blanket on the beach strip where the afternoon sun was still striking. They lay in the sun for a time, dozing, and occasionally rubbing backs or feeling each other's ass. After a while they began to neck and soon were aroused.\n\nDan soon rolled Lisa onto her back and began to lick and suck her nipples. This brought a favorable response from the girl and she used her hands to excite his cock. Dan placed his head between her legs and spent several minutes using his tongue on her dripping slit and erect clit. He began to work his way up her body once again and soon was stretched above her, his arms holding him above her open body. His cock touched the entrance to her pussy and he hesitated.\n\nLisa said, \"Go ahead, Dan. I think I may have recovered enough now.\" She used her hand to guide him inside and soon was moving her hips to meet his own thrusts. They worked each other higher and higher until suddenly the glade was pierced by Lisa's noisy cry as she climaxed and immediately after by Dan as he found his release.\n\nThey rested for a little time and then had another quick dip to wash away the sweat. As they were drying off, Lisa said, \"If it doesn't get too cold, let's stay naked the whole time we're here.\"\n\n\"You know I won't object to that,\" Dan replied. The only thing prettier than this site is your lovely body. And if it does start to cool off, I'm sure we can find some way to keep warm.\"\n\nThe day was actually quite hot and Dan and Lisa were not at all uncomfortable. They spent the rest of the afternoon lying on the blanket and just talking. Well, maybe not just talking, but their sexual activity was limited to kissing and a few caresses. When they became hungry they dug into the packs for supper. Since this wasn't an extended trip they had taken mostly canned food, but for the first night Lisa had suggested hot dogs. They built a small fire on the rocks near the edge of the stream and cooked the franks over it. \"Not much different than the back yard,\" Dan said, \"but somehow out here they taste better.\"",
        "\"Very true,\" Lisa replied. Then with a leer she added, \"And probably some other things taste better too.\"\n\nDan laughed and said, \"Wench, you are insatiable. And I'm really, really happy about that.\"\n\nLisa joined his laughter and said, \"Maybe. We'll see in a little while. Right now let's get stuff cleaned up and the food hung so we won't have to fool with any of it after dark. After all, I can think of more interesting things to do in the dark, can't you?\"\n\nThey burned the trash and hung the food sack from a tree branch, high out of the reach of animals. By then it was beginning to get dark except for a full moon which had risen. \"Next one is the harvest moon,\" Dan remarked. \"But this one comes up pretty early, too.\"\n\nThey spread the blanket on the grass above the stream and lay together watching the stars come out and listening to the evening sounds mixing with the noise of the waterfall. Lisa propped herself on one elbow and watched Dan as he talked about some of the stories of the constellations that were appearing. She actually knew most of them herself and was only half listening. Instead she was studying Dan and thinking to herself, \"He is definitely the most desirable man I've ever met. I know it's been mostly lust - I never even dreamed about sex like this - but is it something more? Here we are naked in the most beautiful place I've ever seen and, yes I definitely want to fuck him, but I keep thinking how much fun he is to be with and how much I like him. Am I falling in love with him? Well, I'm not sure and I certainly won't say anything about it unless he does. After all, we agreed that this was just fun sex games.\" Still, the idea wouldn't leave her mind.\n\nDan stopped talking and looked at her. After a few seconds he said, \"That's enough about stars for now. I can think of more interesting topics. Have you got any idea what they might be?\"\n\nLisa smiled down at him. \"Maybe not the particulars, but I have a pretty good idea about the general subject.\" She moved a hand to slide up the inside of his thigh and across his cock.\n\nDan laid his own hand over hers and held it still for several long seconds. Then the pulled her to him and locked his mouth against her as his own hands began to explore her body. Soon Lisa was kneeling astride and riding him as his hands played with her breasts and clit. When they finally came it was a sweating, shrieking climax, but a warm comfortable one. Afterwards they lay entwined staring at each other's eyes, kissing and stroking. After some minutes they again snuggled side by side, watching the skies, their hands on each other's bodies.\n\nEventually they started to doze off. Dan yawned and said, \"I'm going to sleep. Maybe we should head for the tent.\"\n\n\"Why?\" Lisa suddenly asked. \"It's not raining and not really cool out here. Let's get one of the bags to lie on and use the blanket on top if we need it and spend the night out here. I haven't seen stars like this in a long time. If it gets cold, then we can go inside.\"\n\n\"OK,\" Dan agreed. \"The weather is perfect for it and lying naked with you under the stars seems the absolutely best thing I could be doing.\" He went to the tent and got a sleeping bag and a light ground cloth. When he returned Lisa helped him spread the ground cloth and bag. They piled the blanket at their feet so it could be pulled up if needed, but were still feeling comfortable in the hot night. Getting things set up had awaken them again and soon they were once more making love. This time they finished up with Lisa on her hands and knees and Dan pounding her from behind. After a few more minutes of sleepy talk, both fell asleep.\n\nSometime during the night Dan came awake. Looking at the stars he guessed it was about three, but while the air was cool, one of them had pulled up the blanket and it wasn't uncomfortably so. Dan was lying on his back and Lisa was on her left side pressing against him. Her right hand was between his legs and occasionally stroked his thighs and balls, but she wasn't awake. Dan wondered what she was dreaming, but then decided it didn't matter because whatever it was, he liked the resulting attention. He moved his hand and gently traced the contour of her breast and hardened nipple where it was pressed against his chest. Lisa moaned softly and increased her activity below his waist. Dan continued to stroke her breast for a minute or two and then let his hand move on to caress her pussy lips. Lisa was now squirming slightly and making soft sounds of increasing excitement. She opened her eyes and in a couple of seconds Dan saw awareness enter them. \"Hi,\" he said, and kissed her on the mouth.\n\nLisa didn't stop playing with his cock and balls but kissed him back hard. \"I seem to be recovered,\" she said, and rolled on top of him. She locked her mouth to his and used her hand to guide his hard cock into her sopping wet pussy. Before long the night was pierced by her cry of climax.\n\nWhen Dan woke next, the sun was up and sparkling on the water in the creek. Lisa was already awake and watching him. \"Good morning,\" she said. \"Sleep well?\"\n\n\"Very definitely. How about you?\"\n\n\"Emm, yes,\" Lisa replied. \"But I had the nicest dream. Almost seemed real.\" She smiled at him showing she was really aware of what had taken place. \"Say, it finally feels cool out.\" She pulled the bag tighter around her shoulders.\n\nA devilish look overcame Dan. \"Well, as Becket said, don't fight it. You just have to get used to it and you'll be ready to face the day.\" As he said that he pulled the bag away completely and stood, picking a squirming Lisa up in his arms. He turned and headed towards the creek.\"\n\n\"Hey wait a minute,\" Lisa cried. \"It's cold out here. Wait! You wouldn't!\"\n\nBut Dan would. Moving to the edge of the pool he tossed Lisa into the water. She came up shrieking and sputtering. \"Oh! It's cold. See if I'm nice to you today.\" She swam back to the shore and Dan reached out to help her ashore. She took his hand and started to pull herself out, but suddenly planted her feet and pulled Dan into the water.\n\nHis cry was similar to hers and as he came up he reached for her and pulled her back down. For a couple of minutes the two splashed and wrestled in the cool water until finally they began to settle and headed for shore. Dan ran to the tent and quickly brought back a couple of towels. He helped Lisa to dry off and while she watched, still wrapped in her towel, he put a pan of water on their small stove to make hot chocolate. By the time they had drunk the hot drink and eaten some breakfast the day had already begun to warm and soon the towels were no longer necessary.\n\n\"This is definitely the best way to camp,\" Dan said as he watched Lisa's nude form moving around the breakfast things.\n\nShe was bent over and looked back over her shoulder at him and grinned and then deliberately wiggled her ass in his direction. \"It does have it's points,\" she said.\n\nDan came over to her and put his arm around her waist, pulling her against him. \"Got anything in mind to do today?\" he asked.\n\n\"Oh, I've got several things in mind. But I think to start off, my arm is better enough to wield a whip at your ass and get even for that stunt with the pool this morning.\"\n\nDan pulled back with an overly dramatic look of mock shock on his face. \"My lady, if I have offended you I shall certainly not interfere with your revenge.\"\n\nLisa broke up and, laughing, said, \"OK, Mr. Offender, I'll be right back.\" She then ran to the tent and pulled a couple of things out of her pack. She wrapped them in the towel so Dan couldn't she what she had picked up and then went back to where he was standing.\n\n\"Let's see. I think over there will do.\" She pointed towards where one of the big trees had fallen at the downstream end of the glade. The tree lay from one bank of the stream to the other and she led Dan over to where it crossed. Here it was about three feet high and she faced him towards it. From her towel bundle she pulled out some soft rope and attached it to his wrists. \"OK, bend over.\" She pulled the two ropes around the log, each beyond a branch, so his arms would be spread and the branches would keep him from bringing them closer together. She then passed the ropes below the trunk and tied each to an ankle. Dan was now bent over the fallen log with his arms and legs spread widely.\n\nLisa reached between his legs and gently squeezed his balls. His cock was becoming hard, but the log prevented it from sticking up and instead it stuck down between his legs and pressed against the rough bark in an attempt to stand erect. She played with him for a couple of minutes, exciting him and sometimes tickling. Then she went back to the towel and returned with a cat with two foot tails. \"I think now we can begin,\" she said as she dragged the leather strands across his buttocks.\n\nShe swung the lash across his ass, but only lightly. There was almost no sting and the sensation served only to further excite the bound man. The next stroke was a little harder, but still caused no real pain. For the next twenty minutes Lisa continued to whip his bound body, concentrating mostly on his stretched ass. The strokes became harder and harder and soon the whip was leaving a pattern of red lines across his white flesh and bringing cries with nearly every lash. Lisa continued until several of the strokes brought loud screams and then she stepped back and began to retrieve something else from her bundle. Dan began to catch his breath but couldn't see what Lisa was doing. She was suddenly back behind him and he felt her fingers tracing the welts on his abused bottom. Then she began to probe his anus and soon began adding lubricant. Dan had an idea of what was coming next, but not the exact form, when he felt the tip of a dildo press against his rear opening. As it slowly sank into him he realized it was a strap-on. When it was all the way inside, Lisa stopped and let him get used to the deep penetration. \"I've wanted to do this ever since I saw that video of those two couples camping. Now, lover boy, you are about to get your ass reamed.\" She began to pull out and then plunged deeply back in. She fucked Dan for several minutes and finally slammed into him as deeply as possible, pulling herself into him with her hands on his hips, as she screamed into her own climax.\n\nShe unfastened the dildo from the harness, but left it embedded in his rectum. \"You're not quite done, lover,\" she said as she began to remove the ropes. When he was free she had him straddle the log and lie back. She tied his arms together under the log and then did the same for his legs, leaving the dildo pressed deeply inside by the log and his rock hard cock sticking straight up into the air. She then straddled the log herself and bent to take him in her mouth. For several minutes she teased him, but did not let him come. Finally she mounted him, impaling herself on his shaft and letting her weight force his reddened ass into the rough bark of the log. Not surprisingly neither lasted long and within a minute both were coming hard.\n\nAs Lisa released him she asked, \"Think you've learned you lesson now?\"\n\n\"Probably not yet,\" he replied. \"I'm sure it'll take some more before it really gets through.\"\n\n\"Well,\" Lisa said, \"we'll have to see what we can do. But not now. I want to spend part of today with you torturing me. It's been a couple of days and I'm feeling the need to be whipped. Think you can help me out?\"\n\n\"That you don't have to worry about. I've got a few things in mind myself.\"\n\nBy now it was late morning and the sun was again shining hotly. Dan dug out some wrist and ankle cuffs and bound Lisa spread eagled on the ground. Next he began to tease her with a couple of feathers he'd found. When her laughter had strained her as much as Dan thought he should allow, he switched tactics and applied nipple clamps to her tits and used a cat to lightly whip her stomach, breasts, thighs, and pussy. When he stopped this he knelt between her legs and ate her to a hard orgasm. Then he began to repeat the cycle. For two hours Lisa was subjected to cycles of tickling, whippings and tit torture, and oral stimulation. She came so many times she lost count until finally Dan decided she was too exhausted to continue and released her.\n\nThey rested, lying in the sun, for another hour and a half. Often they would stroke or feel each other and once spent fifteen minutes just lying face down, each with a finger up the other's ass. Finally they stopped and ate some lunch and then once more lay down for a short nap.\n\nThat afternoon they alternated playing sex games and just lying around. Once Lisa suspended Dan from a tree branch with his legs widely spread and used the cat, nipple clamps and a weight on his balls to torment him for over an hour. Dan once took Lisa back to the log where she had bound him that morning and instead bound her in the same position. He used his hand to spank her ass until it was red and then fucked her rear passage. By the time they stopped to fix dinner, both were ready for a break.\n\nAfter dinner they again lay before a fire and watched the day change to evening as the stars came out. Sometime after it had gotten dark Lisa said, \"Dan, I've got something I'd like to try. I've read about it - or something like it - several times, and I'm not sure if I'll find it a turnon or not. Evidently some people do, but I'm not sure, so I want to try it and find out.\"\n\n\"What do you have in mind?\" Dan asked. She told him. He wasn't real sure about it himself, but agreed to try.\n\nIt was then full dark and Dan got the items he needed and led Lisa away from the fire and out of the glade itself. He finally stopped in another small clearing where there was a large white oak. He put the wrist cuffs on Lisa and asked once more if she was sure if this was what she wanted. Lisa assured him she wanted to try it, so he led her to the oak and tossed a rope over a branch on the far side. He fastened the ends of the rope to her wrist cuffs, pulling her against the tree and up on her toes. He took a large dildo and inserted it into her pussy, filling her. He then shook out the strands of the cat and began to whip her. He continued until she was moaning and crying out at each stroke and her ass was covered with red lines. He put down the cat and began to lube her rear opening and then to fuck her there. He drove her hard and when he came pulled away and once more picked up the cat and gave her another dozen hard strokes, bringing cries and several screams. He then turned and walked back into the forest, leaving her hanging from the tree, her breasts pressed against the rough bark, her pussy stuffed and cum running out of her abused ass, and alone in the dark.\n\nFinally after more than an hour Lisa heard him returning. Her removed the dildo and rope and pulled her into his embrace. \"Well, did you find out? Was being bound alone in the dark a turn on?\"\n\nLisa squeezed him back and said, \"Not really. The stuff you did before you left was definitely hot, but I found just hanging there didn't really do much of anything. Actually sort of boring. Maybe some people get off on that, but I don't think I'm one of them.\"\n\n\"Well, that's all right with me. I don't get any particular charge out of leaving you by yourself. I'd rather be there to play with you. Besides it could always be dangerous.\"\n\n\"Yeah, I kind of worried about that a little. It wouldn't even have to have been a bear or anything like that. Even a small animal or snake or something and I couldn't do anything about it.\"\n\n\"Well, really you weren't alone this time. Remember, I said I'd never leave you tied up by yourself. I wasn't just going to go away and leave you like that, so I just went back about fifty yards and kept quiet.\"\n\n\"Oh, Dan, that was really nice of you. It couldn't have been much fun for you just sitting there either. But thanks. I'm glad you did. Anyway, let's just play together after this.\"\n\nThe couple made their way back to the glade and their camp. It was well after midnight and the fire had burned down to just a few coals. They added more wood and got it blazing again. \"Are you sleepy?\" Dan asked.\n\n\"Not really,\" Lisa replied. \"Got something in mind?\" she inquired playfully.\n\n\"Actually yes. Back there you looked absolutely lovely in the moonlight. Incredibly sexy. I want to tie you to another tree for awhile, but this time I won't go anywhere.\"\n\n\"Well, Captain, I'm your helpless toy. Have your way with me.\"\n\nDan laughed and led her over to a tree near the edge of the open area. This time he bound her with her back to the tree and her arms again pulled over her head. Her feet could just reach the ground to take her weight, but she was still stretched. Dan then proceeded to tease her, sucking her nipples and licking and sucking at her clit. The moon was a day past full and played brightly on her bound body. A few clouds began to come up and soon shadows were drifting across, alternating the white moonlight with dark patches. For over an hour Dan teased and stimulated the bound girl until finally he could stand it no longer and took her still bound against the tree. When he released her, Lisa pulled her arms tightly around his neck and said, \"That is definitely more fun than hanging there by myself.\" Then she added, \"It's still nice out so let's spend it outside again. But this time tie me.\"\n\nDan grinned. \"You really like being bound, don't you? OK, let's get the ground cloth and a bag. Just leave your cuffs on.\"\n\nThey spread out the cloth and bag and then Dan had Lisa lie down on her back. He drove four stakes into the ground and tied her cuffs so she was spread eagled, but not so tightly that she would be uncomfortable. Dan settled down next to her and pulled the blanket over them. They talked for a little while but then sleep caught up and they both drifted off.\n\nAgain, sometime during the middle of the night, Dan awoke. He began to play with Lisa who soon awakened herself and rapidly became aroused. Neither spoke a single word but were soon engaged in passionate sex. After they came, Dan kissed Lisa tenderly and, still without a single word between them, he lay his hand over her bare, damp pussy and both were soon asleep.\n\nWhen next they woke it was morning but, like the previous day, cool. This time, however, there was no sudden freezing swim. Instead after he released her, Lisa got two jackets from their packs. They donned the jackets - but nothing else - and soon had warm drinks ready. Also like the last day, by the time they finished with breakfast the temperature had risen and they shed the jackets. Lisa remarked, \"I've discovered I love being nude. It's going to be pretty hard getting used to being dressed all the time again. Maybe we can manage to do this again next summer.\"\n\n\"I certainly would love to. Maybe we can even manage something during the year. I know, I know. Not outside. At least not around here anytime except in the summer. But inside isn't bad either. After all, our schools are only a hundred miles apart.\"\n\nLisa stopped and looked at him. \"I'd like that. You've got me hooked on this BDSM stuff now, but I don't think I'd try it with anyone else I know. I trust you completely, but I'd be afraid with someone else.\"\n\n\"I sure hope so,\" Dan threw in. \"You must trust someone absolutely for these games. After all, not to sound overly dramatic, but you are trusting someone with your life.\"\n\n\"I hadn't thought about it exactly like that, but I guess you're right. Well, I don't see wanting to give this stuff up altogether, so I guess we'll just have to get together some more. You have a problem with that, Stud?\"\n\nDan stared at Lisa's wonderfully shaped body. His eyes raked her curves and seemed to slide over her nude form. Slowly he said, \"No. I don't have a problem with it. Lisa, I told you you are the hottest thing I've ever imagined. The only problem I could have is paying for the gas for all those hundred mile trips. And maybe a little exhaustion.\"",
        "When they had finished cleaning up everything they took down the tent and assembled their gear. \"We don't have to leave until after lunch,\" Dan said. \"Let's spend the morning here.\"\n\n\"That sounds good to me,\" Lisa replied. \"I adore this place. Are you up to some more play for awhile?\"\n\n\"I expect so,\" Dan said. \"What do you have in mind?\"\n\n\"I was sort of thinking about a repeat of yesterday morning. I loved having you over that log.\"\n\nDan laughed. \"Well, we'll be hiking all afternoon, so I guess I won't have to sit down. Besides you have no idea how much that turned me on.\"\n\n\"Which,\" Lisa asked, \"the whipping or fucking you in the ass?\"\n\n\"Both, actually,\" Dan replied. \"But afterwards I get to have you again, too.\"\n\n\"That's a deal,\" Lisa responded. \"OK, let's get you over to the log.\"\n\nOnce again Dan was bound tightly over the fallen tree with his hands and feet widely spread. Lisa used the cat for twenty minutes or so to redden his ass and make him cry out and scream. She then lubed his rectum and used the strap-on to penetrate and fuck his helpless bottom. After she had come twice, she released him from his bonds and the two cooled off with a swim.\n\n\"Now it's my turn,\" Dan said. \"I think I'll have you in the same position as you just had me.\" He bound Lisa over the fallen log, pulling the ropes tight so she was stretched against the rough wood bark. He then applied the leather strands of the cat to her defenseless rear. When she was screaming with nearly every stroke, he lubed her bottom and guided his hard cock deeply into her rectum and fucked her to three more orgasms.\n\nWhen he finally released her, both had had enough for a little while and they spent the rest of the morning just lying in the sun. After lunch they repacked their packs, reluctantly dressed and set out for home.\n\nCousin - Ch 19\n\nDan and Lisa arrived back at the farm late in the afternoon. They shed their packs on the porch and their clothes almost immediately after. \"Let's catch a quick shower,\" Lisa offered, and Dan quickly agreed.\n\nAfter they had washed away the trail dust and sweat, they headed for the kitchen to find something for supper. As they passed the phone in the hall, Dan noticed the light on the answering machine was flashing. \"That's funny,\" he said. I don't think I've had a call all summer except from you when you were on your way back here with Diana. I wonder who it could be.\"\n\n\"Well, there's one way to find out,\" Lisa said and pressed the play button.\n\nThe tape quickly rewound and suddenly they heard their uncle's voice. \"Hello, Dan. We ended up a little earlier than we had planned and will be arriving at the airport on the twenty- eighth, 1:12 pm, flight number 1256. Could you pick us up? I hope so, because we aren't going to be anywhere you can call us, so hope to see you then. Bye.\"\n\nLisa and Dan looked at each other. \"Today's the twenty sixth,\" Dan said. \"I didn't expect they'd be getting back for another week. I guess our fun and games are going to have to end a little earlier than I'd hoped.\"\n\n\"Yeah, I was looking forward to several more days in the dungeon,\" Lisa said. \"Oh, we're going to have to get that cleaned up and back in order so they won't know we've seen it. Darn, that gives us even less time.\"\n\n\"Right,\" Dan replied. We'd also better check for anything else we've left out. I'm not sure I'd like explaining wrist cuffs or a cat left in the living room. But you said you wanted to see them, so why don't you stay here anyway. We can tell them you just stopped by if you want.\"\n\n\"I would like to see Aunt Mary and Uncle Tom. I guess tomorrow we'd better move my stuff into the other guest room, but I wouldn't be surprised if they guess we haven't been sleeping in separate rooms. They are awfully perceptive.\"\n\n\"I don't know,\" Dan said. \"Remember the last time they saw us together you were being a pain in the neck and I kept trying to get away from you.\"\n\n\"Pain in the neck, huh? We've still got a day and two nights. I'll see if I can't be a pain somewhere else besides your neck.\"\n\n\"Well, a little, maybe. But I plan to make use of most of that time abusing your fair body instead,\" Dan replied.\n\n\"Oh, I hope so,\" Lisa replied.\n\nThey put together a scratch supper and carried it into the TV room where they ate while watching another of Dan's hot videos. \"This is definitely a genre I didn't know about,\" Lisa said, \"but it certainly bears further investigation.\"\n\n\"Investigating it bare is definitely the best way,\" Dan responded. This brought a swat from Lisa to which Dan responded by pushing her back to the floor and holding her arms. He began to lick her nipples and soon both were engaged in a hot kiss. Dan broke off for a second and said, \"Come on. I want to get you to the dungeon and torture that lovely body.\"\n\nLisa's breath was coming rapidly and she breathlessly said, \"Yes, I want that. Come on.\"\n\nThe couple made their way down to the secret room where Dan soon had Lisa bound to the x-frame. He attached nipple clamps and weights and used a riding crop, a thin leather strap, and a cat to punish her. Soon with her juices dripping down her legs and her entire front criss- crossed with red lines, Lisa was begging Dan to fuck her. He couldn't resist her pleas for long, even if he had wanted to, and was soon plunging deeply into her pussy while her bound form strained to get him even deeper.\n\nThen the couple switched. Dan was bound spread eagled from ceiling chains with his ankles attached to floor rings. Lisa used a stand to position a ribbed dildo deep within his ass and attached weighted clamps to his nipples. Another lead weight was hung from his balls. She then whipped him with a variety of instruments intermixed with licking and sucking at his cock, but not allowing him to come. She then repositioned him on his back on one of the low benches with his arms and legs tied below the bench. The weights pulled his nipples to either side and the weight at the end of the leather strap around his balls pulled them towards the end of the bench. She whipped the insides of his thighs, his chest, stomach, and legs. Finally she mounted him and rode him to a hard orgasm.\n\nThey then decided to try something a little less strenuous to give their sore asses a little time to recover. Dan made a suggestion which Lisa readily accepted. They headed towards the shower area and Dan prepared two enema bags of three quarts each. While he was filling each of these with hot water, Lisa dug out two Bardex nozzles and a couple of other things. Dan hung the full bags from the ceiling and then he and Lisa inserted the Bardex devices in each other's ass. Next Dan stretched Lisa spread eagled from the ceiling and attached the tubing to her Bardex. He fastened his own ankles to the same floor rings as Lisa's and attached his own nozzle to the other bag. By this time he was hard and Lisa was dripping wet in anticipation of what was coming. He inserted his cock into her willing pussy and used leather straps to bind around their thighs and waists. Finally he stretched as far as possible and attached his wrist cuffs to the ceiling chains holding Lisa's wrists. He had run the tubing with the release clamps around these chains so they would be within reach and now opened both valves. As the hot water began to flow into the two young people, they began to push hard against each other in an attempt to come. However the straps restricted movement and did not allow much in and out motion. The water flowed slowly over the next ten minutes as the couple strained against each other. Lisa began to contract her vaginal muscles rhythmically and this combined with Dan's short thrusts to start them both climaxing. They hung limply for a couple of minutes until the cramps drove them to extract themselves from the bonds and find release.\n\nThey took a shower to clean up before going upstairs. As they were drying off Lisa said, \"I guess we can take tomorrow morning to play, but then we'd better get things straightened up. So if it's going to have to hold us for a long time, what do you like best for me to do to you?\"\n\n\"Everything you've done is exciting,\" Dan replied. \"But I think I might like it most if you tied me to one of the whipping benches, worked me over with a cat and then fucked me. I never imagined anal sex could be so much fun on the receiving end.\"\n\n\"Good. I never imagined it could be so good on the other end. And I definitely do like whipping your ass.\"\n\n\"OK,\" Dan replied. \"What would you like me to do to you?\"\n\n\"It may seem funny, but I think the thing that has turned me on the most was when you tied me to the end of the leather horse and pulled my arms up so I was bent backwards at the waist. It's a real strain and the clamps on my nipples hurt even more in that position. But you've done that twice and both times it turned me on incredibly. Not to mention the stuff you did after you stopped whipping me.\"\n\n\"That sounds good to me,\" Dan said. \"You have no idea how sexy you look in that position.. Now what about tonight? Feel up to anything else now?\"\n\n\"I expect I could be interested,\" Lisa said. \"And besides my ass hasn't really had much attention tonight.\"\n\n\"Well, we'll just have to see what we can do about that, now won't we?\"\n\nDan led her over to one of the waist high frames and faced her towards it. He spread her ankles and fastened them to floor rings and then bent her over at the waist, pulling her arms taut in front of her and fastening them to poles extended out in front of the frame. He once more added clamps and weights and even put a small clamp on her clit, bringing a sharp cry. He then used a cat to turn her ass a uniform bright red before plunging his hard cock from behind into her sopping pussy. By the time they finished, both were ready to head for bed and sleep.\n\nThey slept straight through the night and didn't wake until after eight the next morning. They hurried through breakfast and then went back down to the dungeon for one last session. \"You first,\" Lisa said, and quickly bound Dan to one of the whipping benches. This was similar to the one to which Lisa had been fastened the previous night and soon Dan was stretched tightly. Lisa used a particularly strong set of clamps on his nipples and added a couple of heavy weights. She looped a leather thong around his balls and hung a two pound piece of lead from it. Next she found a cat with thirty inch tails and spent over twenty minutes tormenting Dan's bound body. Long before she finished Dan's entire ass was bright red and he was crying out or screaming at every stroke. When Lisa finally put down the whip, she began to lubricate Dan's rear passage and soon was pushing an eight inch strap-on into his tight hole. She fucked him both slowly and fast and spent a good twenty minutes before using her hand and helping him to come as she ravaged his rear.\n\nWhen his climax finally came, Dan was nearly exhausted, but admitted to being more turned on than he could ever remember. After a short break he placed Lisa at the foot of the waist high leather horse. He spread her legs and bound her ankles to the horse supports. She bent forward along the leather covered length, her breasts falling to either side and pressing against the rapidly warming leather. A strap was pulled tight around her waist, holding her down against the leather. Her wrists were bound together and stretched to a ceiling chain about a foot forward of her ass so she ended up bent backwards at the waist and bound to the end of the horse, but with the chains pulling her straining arms and upper body up and back. Again strong and heavily weighted clamps were added to her nipples. Dan lubed her rear opening and worked a large butt plug inside and then added a big dildo to her front opening. He turned the two dildos on and both began to vibrate. Finally he picked up the cat Lisa has just used on him and began to whip her bare buttocks. He, too, stretched the whipping for twenty minutes before he finally dropped the whip and, after removing the butt plug, pushed his hard cock deeply into her ass. He fucked her hard while squeezing her breasts and pulling at her sore nipples. Every time he pushed deeply into her she felt like the skin of her ass was on fire and his cock probing deeply inside her produced incredible sensations. By the time Dan finally came, Lisa had twisted through no less than five separate orgasms.\n\nAfter lunch the couple began to straighten the place up and spent all afternoon cleaning the dungeon and its equipment. They put everything back where it had been, at least to the best of their memory. Finally both were satisfied that they had removed all traces of their use and left the dungeon, locking the door. They moved the shelves back in place in front of the hidden door and made sure there wasn't anything like a set of tracks or some such leading to it.\n\nThey spent the rest of the afternoon cleaning the house and looking for anything they had left out. They stopped for dinner and then made a final sweep of the house and grounds around it. \"I think we've about got it,\" Dan finally said.\n\n\"Yeah, I think so, too,\" Lisa added. \"Dan, I've loved this. You were right that I've always liked sex, but this has been so much more, I'm really happy you introduced me to these games.\"\n\n\"I told you before,\" Dan said, \"I'm not sure who did the introducing. But I agree. This has been the hottest time I've ever imagined. If you would like, I'd really like to get together some during the year and play some more. I can't think of anyone else I trust for these games and I've loved every second of everything we've done.\"\n\n\"I most certainly agree with that,\" Lisa said. \"I wouldn't trust anyone else either and now that I have a taste for this stuff I don't want to stop altogether. Maybe some time we'll even find a chance to come back here and 'borrow' their dungeon again. But for now, how about before we go to bed you get that cat you made this summer and we have one more session up in the barn where all this stuff started.\"\n\nDan grinned. \"I won't fight that, Wench. Come along and accept your punishment.\"\n\nThey made their way back to the hayloft and once again Dan bound Lisa's hands and pulled them high above her head so that her toes just touched the ground. He then spent nearly a half hour flogging her with his homemade cat, bringing her to orgasm several times. When he finally stopped, he lowered her arms and bent her backwards over a couple of bales of straw and tied her in an open leg, arched position. He then used his hands and tongue to tease her body for forty five minutes, bringing several more orgasms. Finally he plunged his hard cock deeply inside and brought her - and himself - to one more long, screaming climax.\n\nAfter a few minutes, Dan released her. Then, both still completely naked, they made their way back to the house and up to bed where they found they were entirely too tired for another round and feel asleep pressed closely together.\n\nWhen Lisa opened her eyes it was to sunlight and Dan's gaze. He smiled and she returned it looking deeply into his eyes. \"Hi,\" he said. \"Sleep well?\"\n\n\"Emm, definitely,\" Lisa replied. Then she reached up and pulled his mouth down to hers for a long, hard kiss. When he pulled back, both were breathing rapidly. Lisa opened her mouth and whispered, \"One more time, Lover.\" Dan took the hint and soon they were both straining into the throws of orgasm.\n\nThey got up and showered, but as they were drying off, Lisa said, \"We've only got about an hour until we have to leave, but let's not get dressed until we have to. I've decided I like this nude stuff.\"\n\n\"That's fine with me,\" Dan replied. \"I've told you I never mind watching your naked bod. It makes any day nicer.\"\n\nThey had breakfast, cleaned up the dishes, and reluctantly went back upstairs to get ready. \"We'd better shift stuff to the other two bedrooms,\" Dan said. \"We wouldn't want to disillusion them about their innocent niece and nephew.\"\n\n\"I guess so,\" Lisa said. \"But I doubt they have many illusions left about either of us.\"\n\nDan laughed and added, somewhat sarcastically, \"No! You know they would never think much about sex themselves and surely wouldn't expect us poor little children to even guess it exists.\"\n\n\"You think that and I've got this great bridge I can let you have cheap,\" Lisa laughed back. \"Judging from that dungeon I expect they think about sex almost as much as we do. And I'm sure they remember what was always the top topic when they were our age.\"\n\n\"You mean they knew about sex way back in their day?\" Then he became a little more serious. \"OK. I guess, much as I don't like the idea, we'd better get dressed.\"\n\nLisa made a face, but nodded. \"Yeah, you're right. But first, come here a second.\" When Dan came over she wrapped her arms around his neck and pulled their bare bodies tightly together, giving him a long, deep French kiss. When they finally broke apart she looked at Dan and said simply, \"Thanks.\"\n\nDan looked back into her eyes and said, \"No. Thank you.\"\n\nThey dressed and each checked the other to make sure no welts or other marks were showing. Then they went out and got into their uncle's car and headed out on the long drive to the airport.\n\nThey stopped for lunch and finally arrived at the terminal about twelve thirty. According to the board the flight was on time and they went out to the gate to wait. When the plane had landed and people started to disembark, Dan and Lisa were standing and looking at each one. Their uncle appeared, looking around, no doubt in apprehension that Dan hadn't gotten the message. He spotted Dan and a smile came over his face. A second later he noticed Lisa and a look of happy surprise appeared. Their aunt was right behind him and Tom turned and said something to her. She looked over and saw the two of them and excitedly began to wave.\n\nAfter hugs all around they headed down to claim their bags and Lisa explained that she had come by to see them and when Dan told her they were coming back today, she had decided to stay.\n\nThey drove home with Dan and Lisa in the front seat and Tom and Mary in the back. The entire long trip was filled with a constant stream of conversation as they told about their trip. By the time they arrived it was late afternoon. Lisa said that she and Dan would put together some supper while Tom and Mary freshened up. As the older couple headed upstairs, she and Dan headed to the freezer to see what was available. The rest of the evening was spent catching up on everyone's activities for the last six months, but by ten Tom and Mary were beginning to yawn. \"Crossing all those time zones seems to be confusing me, so I guess we'd better go sleep off the jet lag,\" Tom said. He and Mary said their goodnights and started up. Lisa and Dan said they were also tired and made a show of going to separate rooms, but after about twenty minutes when Dan thought his aunt and uncle must be settled, he made his way to Lisa's room.\n\nShe was waiting, wearing only panties, and reading a magazine. Dan came in and quietly closed the door. \"You look beautiful,\" he said. \"The only problem is you seem to be overdressed.\"\n\n\"Well we certainly don't want that,\" Lisa said, and pulled off the three ounces of cotton she was wearing. \"OK, come here, Lover. But we'll have to be quiet and not wake them. And I'm afraid you're going to have to go back to your room afterwards.\"\n\n\"Yeah.\" Dan made a face. Then he pulled her to him and said, \"OK. But first I have some other plans.\" He began a long deep kiss which didn't end until his hardened cock was moving in and out, each stroke being met by Lisa's own thrusts.\n\nAs they lay together afterwards, Dan said, \"I hope we didn't make too much noise, but I think they are probably pretty soundly asleep.\"\n\nLisa cocked her head a second. \"I wouldn't bet on that. Listen.\"",
        "Dan held his breath and listened intently. From down the hall in the direction of their aunt and uncle's room came the unmistakable sounds of sex. He turned towards Lisa and whispered, \"Not quite as tired as they sounded, huh?\"\n\nLisa grinned back. \"Nope. I have the feeling it would take an awful lot to make them too tired for sex.\" For the next twenty minutes they heard the sounds of Tom and Mary's lovemaking and this excited them again. By the time everything was quiet down the hall, Lisa was again riding Dan's cock and both were trying very hard to hold down their own sounds. Finally, after it had been silent for awhile, Dan kissed Lisa and made his way back to his own room.\n\nAt breakfast the next morning, everyone seemed wide awake and very relaxed. Dan looked at Lisa and thought that it wasn't surprising. Everyone had definitely had an enjoyable night. When they had finished eating, Lisa and Mary cleared the table. While they were in the kitchen, Mary began to open cabinets and look at the contents. She shook her head a couple of times and finally said, \"Seems Dan has let us run out of a few things. If we're going to eat for the next few days, we'd better get some more stuff.\"\n\nWhen she and Lisa came back in the other room where Tom and Dan were talking, she immediately said, \"We're going to need to make a grocery run today. Say, Dan, would you and Lisa mind doing it. I think I'd like to take a short break from traveling.\"\n\n\"Sure,\" Dan said. \"We'd be happy to.\"\n\nLisa put in almost simultaneously, \"Of course. Just give us a list.\"\n\n\"OK, thanks a lot. This is really nice of you. I'll have a list together in a couple of minutes.\" She was gone only about five minutes and handed Lisa a long list along with some cash. \"Thanks, again,\" she said.\n\nDan and Lisa stood and he said, \"We might as well get going. But if you don't mind, I think we'll take a little longer and have lunch out. I want to show Lisa that new Italian place in town.\"\n\n\"That'll be fine, Dan. Just take your time as long as you're back before supper. Otherwise we might not have much to eat.\" Mary laughed to show she was kidding.\n\nWhen Dan and Lisa were driving down the narrow road, Dan said, \"Did you get the feeling they were trying to get rid of us for a little while?\"\n\nLisa grinned. \"No kidding! I'll bet they 're already on their way down to the dungeon.\"\n\nDan laughed. \"Yeah, I bet you're right. Hopefully they won't notice anything out of place. You know, I also kind of noticed that you seemed in a big hurry to agree that we should go get the stuff. Just being nice to them?\"\n\nLisa smiled at him. \"Well, the thought did cross my mind that maybe we could find some place off the road for a little while. That is, if you're interested.\"\n\nDan laughed. \"Have you seen me not interested anytime in the last month? I've got an even better idea. Let's find some place off the road now AND on the way back.\"\n\nLisa smiled at him. \"I like the way you think, stud.\"\n\nDan grinned at her and within two miles found a forest road that let them pull a quarter mile into the woods and out of sight of the road. It took all of about three minutes for them to spread a blanket and get naked. Forty five minutes later they couldn't stop grinning as they once again pulled on their clothes and dusted off the pine needles before starting out again.\n\nThey bought everything on Mary's list and loaded it into the car. Because town was so far away from the farm, Dan and Lisa were both used to bringing a cooler for frozen and refrigerated stuff and now they packed this full. Dan said, \"I really do want to show you the Italian place. The food is pretty good there. Besides you should know what it's like so when they ask you about it, you can make sense.\"\n\n\"That's fine with me. As along as we have time to stop on the way home. I'm not satisfied yet, you know.\"\n\n\"Don't worry,\" Dan said. \"No way will I miss the best part of this run to town.\"\n\n.................................................................................................\n\nLisa had been right and as soon as the car was out of sight, Tom and Mary headed downstairs to the dungeon. \"It's been nearly three months,\" Mary said. \"I need to feel some leather.\"\n\n\"And, Babe,\" Tom responded, \"I need to swing some leather at your tight little ass.\"\n\nBoth Tom and Mary were in good physical condition and looked years younger than forty nine. Mary especially could easily pass for early thirties. The couple had never had children of their own which probably had something to do with the way they felt about Dan and Lisa. But the fact that they hadn't, had left Mary's waist narrow and her breasts still firm. Tom often remarked that naked she looked better than many women half her age.\n\nThey moved the shelves and opened the lock. As they made their way through the double doors, Tom remarked, \"You know, those two seemed to be almost as interested in making the trip to town as we did in getting them to go. Do you suppose there's more going on here than just being cousins?\"\n\n\"Of course there is,\" Mary said, \"and they're not really cousins, after all. Didn't you hear the two of them last night?\"\n\n\"Well, I was a little preoccupied. But after we finished I did think I heard some interesting sounds from the direction of Lisa's room.\"\n\n\"I don't see how you could have missed it. And I'll be willing to bet that last night was the first time they've used two rooms since Lisa got here. And speaking of that, any idea how long she's been here? They seemed kind of vague about when she stopped by.\"\n\n\"I never heard them say. But I'll tell you one thing. Judging from the dust I saw on Lisa's car when I went out to the barn this morning, I'd say at least two or three weeks.\"\n\n\"Well, I'm glad they seem to be getting along. Lisa's always been hot for Dan, but he didn't seem to notice her.\"\n\n\"Not surprising. When he was here last Lisa was still pretty young. Hadn't even begun to fill out yet.\"\n\n\"She's definitely filled out now, eh?\" Mary laughed. \"I'll bet you wouldn't mind looking at her a little closer, would you?\"\n\n\"I'd much rather examine your nice bod, Babe. Especially once I get you stretched out.\"\n\nThey'd entered the dungeon and now Mary stopped and looked around. Tom followed her, but didn't say anything. After a minute of just looking at everything she began to open drawers and examine the contents. \"Been so long you've forgotten what we have here?\" Tom teased.\n\nMary shook her head. \"Come here and look into the drawers. Tell me what you see.\"\n\nTom came over to join her and examined each drawer as she opened it. After several he, too, stopped and looked around the dungeon. Slowly he said, \"Do things look a little out of place to you?\"\n\n\"Yeah,\" Mary replied. \"Not much, but a few things aren't where we usually leave them. And I also noticed the combination on the lock before I opened it. You know how we always set it to 1234 when we close up? Well, it wasn't. It was set to 5574. Want to bet that the kids haven't been in here?\"\n\n\"I'd say you're probably right,\" Tom slowly decided. \"You think there's a chance that they've been playing with our toys?\"\n\n\"As a guess I'd say about 95%. Not surprising, really. They are related to us and you know how much both of us love this stuff. I certainly don't mind, but I'm curious and I'd like to know for sure. They said they could stay another week. Maybe we can set up something to find out for sure.\"\n\n\"What exactly did you have in mind?\" Tom asked.\n\n\"Well, I was thinking that maybe we could find an excuse to be gone for half a day or so and put a thread on the door jam or something,\" Mary replied.\n\n\"Yeah, maybe,\" Tom said. \"Just like James Bond. But right now I want to get you out of those clothes and stretched across the horse.\"\n\n\"Well, Big Boy,\" Mary said as she began unbuttoning her shirt, \"let's see if you're man enough to do anything about it.\"\n\n\"OK, Hot Stuff,\" Tom replied, removing his own shirt and picking up a cat from a drawer. \"I'll see what I can do to convince you.\"\n\n.......................................................................................................\n\nBy one, Dan and Lisa, now full of good Italian food, were on their way home. Neither, however, was concentrating on that destination. Lisa kept letting her hand run up and down the inside of Dan's leg and Dan's hand often left the wheel to touch Lisa's breast or her bare legs. When they were about two thirds of the way through the hour and a half trip, Dan saw a sign and suddenly said, \"I know just the place.\"\n\n\"Where's that?\" Lisa asked.\n\n\"You'll see in a couple of minutes,\" Dan said. \"The turn is right up here.\" He swung left into a Forest Service road labeled \"Hickory Creek.\" \"Ever been back here?\" Dan asked.\n\n\"I think once a long time ago. Isn't there a picnic grounds overlooking a waterfall?\"\n\n\"That's right,\" Dan replied. \"But there's something else. You'll see.\" They drove on for a mile and a half along the narrow gravel road. Finally the road ended at a parking area large enough for about three or four cars. There were two picnic tables and a single grill. Otherwise the place could have been untouched forest of the seventeenth century. As Dan got out of the car he said, \"No tire tracks. Looks like no one has been here since the last rain. It's used mostly in the late fall by hunters as a jumping off point.\"\n\nLisa looked around. At the edge of the cleared area a bluff dropped about six feet down to a narrow stream. Hickory trees surrounded the stream, giving it its name. The stream fell over a series of rapids - not really a waterfall at all - giving a pleasant, tinkling background sound. \"It looks like a great place just for a picnic,\" she said. 'We'll have to remember it.\" Then, surprised at herself, she thought, \"I'm already thinking in terms of 'we.' It just seems natural that if I come here again it will be with Dan.\"\n\n\"Yeah,\" Dan said. \"But since we're already full of food, I have something else in mind.\" Grabbing the blanket from the back of the car, he added, \"Now come on and I'll show you a great place for dessert.\"\n\nHe led Lisa to the edge of the clearing and as they approached a grove of large Hickories, a path appeared in front of them. It looked largely unused, which wasn't surprising, but it was still clear. It appeared to follow the creek upstream, but within a hundred feet it started to climb. They hiked for fifteen minutes, always uphill, and were soon sweating in the warm air. Dan pulled off his shirt and Lisa unbuttoned her own, letting it hang open. Dan could see that her nipples were already hard. His own cock was pressing against his shorts and, more to encourage himself than Lisa, he said, \"Just a little farther.\"\n\nThey came to a place where the trail seemed to level off and Dan slowed, looking along the right side of the path. Suddenly he pointed. \"Here.\" He pushed a branch aside and started down an even smaller side trail. However this trail only ran about a hundred feet. Suddenly the trees stopped and left a clear area thirty feet wide between the end of the path and the edge of a cliff. Dan and Lisa walked towards the cliff edge. Looking over they found that they had climbed about a hundred and fifty feet above the stream which wound along below them. They were high enough to see across the tree tops on the far side of the stream all the way to a distant ridge. The sky was an intense blue with only a few white clouds and a soft breeze moved the warm air across the clearing.\n\n\"Lovely,\" Lisa said. \"You do seem to find the most beautiful places.\"\n\nDan turned towards her and placed his hands on her shoulders. As he let them slide down her arms, pulling her shirt with them, he said, \"Un huh, but I know something even more beautiful.\"\n\nAs her shirt fell from her arms, Lisa raised them and wrapped them around Dan's neck, pulling herself against him. Their kiss began softly but was soon urgent, their tongues tangling like mating snakes. Soon Dan's hands began to loosen Lisa's shorts which started her working on his. Both were completely naked before they broke the kiss. They pulled apart long enough to spread the blanket on the grass and kick off their shoes. Then they knelt and began another kiss which lasted even longer than the first. Before it was over Dan was thrusting his hard cock in and out of Lisa's wet slit. In a few minutes the quiet was broken by first Lisa's and then Dan's cries. As they lay entwined, the euphoria of their mating combined with the good Italian food and the warm sun to cause both of the young people to drift into sleep.\n\nDan came slowly awake to a wonderful feeling of well being. He became aware of Lisa's breast pressed against his chest and his hand gently stroking her ass. Her head was lying against his shoulder and as he looked at her, she lifted it and her eyes opened. \"I guess I fell asleep,\" she said.\n\n\"Both of us,\" Dan replied. Then he glanced at his watch. \"It's nearly three thirty. We must have slept for forty minutes or so. We'd better get back before they begin to wonder what happened to us.\"\n\n\"I expect they have a pretty good idea what happened to us,\" Lisa said. \"Besides,\" she added with a smirk, \"I'll bet I'm not the only blonde having fun this afternoon. I'll bet that Aunt Mary is just as naked and probably tied up down in the dungeon.\"\n\nDan laughed. \"Maybe. But maybe it's Uncle Tom who's stretched out getting his ass whipped.\"\n\nLisa smiled at the picture. \"Maybe, but my money is on Mary. Or maybe they take turns, too. Either way I don't think they're sitting around holding their breath until we get back.\"\n\n\"Then maybe,\" Dan said, \"we have time for some more. Still want to play?\"\n\nLisa pressed herself against him and murmured, \"You know it, Lover.\"\n\n\"In that case,\" Dan said as he reached for his shorts, \"let's make it interesting.\" He pulled the belt from the loops on his shorts and took Lisa's wrists in his left hand. He rolled her over and used the belt to bind her arms behind her. He then sat up and pulled her, face down, across his lap. \"I think maybe you need a spanking, don't you?\"\n\n\"I'm sure I do,\" Lisa answered, and Dan began to slap her ass with his bare hand.\n\nThe spanks got harder and Lisa's skin began turning first pink and then bright red. Then Dan stopped for a second and reached over to pick up a small branch that had blown down near where they were. He quickly stripped off the side twigs and soon had a limber switch, a foot and a half long, which he applied to Lisa's already sore rear. Soon each stroke was leaving a small welt and Lisa was crying out but was also squirming more and more as she became aroused. Finally Dan delivered a quick series of five hard blows and then threw down the switch. He rearranged Lisa on her knees, leaning forward with her shoulders and face on the blanket and her sore ass sticking up invitingly. He moved behind her and, meeting no resistance, plunged his hard cock all the way into her wet slit.\n\nFor half a minute he moved in and out in long, hard strokes and then suddenly Lisa cried, \"My ass, Dan. Fuck me in the ass.\"\n\nDan didn't need to be further convinced. He withdrew from her vagina and used her own juices to lubricate her rear passage. He then slowly inserted his slick cock into the tight, hot tunnel and began to stroke slowly in and out. Lisa met his strokes with her own, trying to force him more deeply inside with each thrust. Within two minutes both were coming again as Dan emptied himself inside her hot bowels.\n\nWhen they had recovered and started getting dressed again, Lisa looked around at her ass as best she could. \"Wow! I seem to be pretty red there.\"\n\n\"I think it's all going to be covered. I tried to keep it under where your shorts would be, but I don't think you'll be wearing a bikini this afternoon. I didn't hurt you too much, did I?\"\n\n\"No, it all felt wonderful. Maybe I'm kind of kooky, and I definitely get turned on getting my ass whipped, but I wouldn't like it if we went too far. Don't worry, I'll let you know if anything gets too rough.\" She pulled on her shorts and asked, \"Is there anything showing?\"\n\n\"No, not at all,\" Dan said. \"And I'll bet a lot of what's under there will be gone by the time we get home.\"\n\nThey looked around at the view once more and then started back down the path to the car. Once there they dusted off any leaves and shook out the blanket and then got back in the car and started for the farm.\n\n..................................................................................................\n\nLisa had been at least right about one part of her analysis: Both Tom and Mary had been on the receiving end of quite a few lashes. But by the time Dan and Lisa were waking up in the clearing, they had once more locked up the dungeon and come back upstairs.\n\n\"I'd really like to stay down there a while longer,\" Mary said, \"but we wouldn't want them to come home while we were inside. Even though I'll bet they stop somewhere along the way. In case you didn't notice, I saw Dan shoving a blanket into the car along with the cooler before they left. I doubt the blanket was to keep the food warm.\"\n\nTom laughed. \"You are probably right. The more I think about it the more I realize that they've been acting like lovers. But had you thought about this? If they did find our playroom downstairs, they must realize what kind of games we play there.\"\n\n\"Yes, the thought did cross my mind,\" Mary said. \"But I'll still bet Lisa has made the acquaintance of some of that leather, too. Maybe even Dan as well.\"\n\n\"I guess I wouldn't be surprised,\" Tom admitted. \"After all, they are related to us. Does it turn you on thinking that the cat I used on you may have been whipping Lisa's ass a couple of days ago?\"\n\n\"I won't say it doesn't excite me,\" Mary slowly replied. \"But you know by now that I find the idea of playing games with anyone besides you a real turn-off. Especially the kids.\"\n\n\"Oh, I agree with that,\" Tom said. \"I was just teasing. But the idea that they play these games too doesn't bother me in the least.\"\n\n\"No. Not me either,\" Mary replied. \"I just have no desire to join them. I'd much rather have you to myself.\"\n\n\"That's good. because that's exactly what you're going to have,\" Tom said, pulling her into a tight hug and deep kiss.\n\nAs the afternoon wore on, Tom and Mary unpacked and did some laundry. Then, guessing the young people would be back pretty soon, took a couple of books out onto the screened porch to wait for them.\n\nWhen the car finally pulled through the gate - later than they had expected - they came out to help unload and put away the groceries. While they were carrying things inside, Tom asked, \"Get to the Italian place for lunch?\"\n\n\"Yeah,\" Dan said. \"We had their ravioli.\"\n\n\"Yes, it was delicious,\" Lisa put in.\n\n\"How was dessert?\" Tom asked innocently.\n\nDan and Lisa exchanged quick looks. Lisa's cheeks seemed to be a little more pink than normal. Dan quickly said, \"We were too full for dessert there. We just stuck with lunch.\"\n\n\"Oh,\" Tom said. \"Dessert is always good after a nice Italian meal. I hear their cheesecake is pretty good. Melts in your mouth.\"\n\n\"I'll have to try it sometime,\" Lisa murmured self-consciously.\n\nAfter dinner that evening, Dan and Tom went into the study. He brought Tom up to date on everything that had happened while he and Mary were away. \"I see you've even made arrangement to sell that last hay crop,\" Tom said.\n\n\"Yeah, Mr. Barnard called and asked about it. I didn't think you'd mind, so we arranged for him to pick it up some time in the middle of September. That OK?\"\n\n\"Definitely,\" Tom said. \"It'll save me the trouble of fooling with it. Thanks.\"\n\nIn the mean time Lisa was helping Mary clean up the kitchen. They had been talking about several different things when Mary suddenly threw in, \"You know, Lisa, you and Dan don't have to go sneaking around the halls at night. We don't mind if you move into the same room.\"",
        "Lisa froze and her face began to turn red. \"Aunt Mary, what gave you the idea we want to be in the same room. I mean I'll admit Dan's nice and we get along now, but...\"\n\n\"Don't go worrying about it, Honey,\" Mary said. \"We're not blind. You and Dan can't keep your eyes off of each other. And I'll bet it's taking quite a bit of effort for you to keep your hands off each other, too. Look, it doesn't bother us. You're my sister's daughter. I know the blood is pretty hot in our family and I know you've been after Dan since you two were kids. I also know that Tom's family has pretty hot men in it and I'll bet Dan is one of them. We surly don't mind, Lisa. In fact, we're really happy for you two.\"\n\nLisa threw her arms around her aunt. \"Oh, Aunt Mary, I should have known you'd understand. I'll admit we really like each other, and, OK, we're sleeping together. But don't go getting us married yet. Neither of us know if this is going to become something really serious or not.\"\n\n\"Don't worry, Honey. I remember what it was like to be your age. And I know Tom and I are a little unusual in that I fell in love with him the instant I saw him and knew from the first date that we'd get married. And I'll tell you something. Tom is the only man I've ever slept with and the only one I expect to. But we still did a few wild things together. I'll tell you a secret, but don't mention to your uncle that I did or he'd be embarrassed. You know that picture of us on our honeymoon? The one near the dining room? We'd been riding all day and once when Dan was little and a neighbor was over here, he made a crack about me being too sore to sit down. Well, I was sore from horseback riding just like I told you and Tom was tired from the same thing, but that was only because we'd had enough practice at sex before we were married that it didn't do us in on our honeymoon. If you and Dan want to, as the expression goes, 'see if you fit one another,' Tom and I don't mind. Like I said we're just happy that you found each other.\"\n\nLisa hugged her again. \"Thanks, Aunt Mary. You always did understand me.\"\n\nA little later Lisa got a chance to get Dan alone and told him of what their aunt had said. At first he looked astounded, but then his face broke into a smile and he said, \"Well, I guess it shouldn't really be a surprise. Anyway, I'm not going to argue. I suppose I should move into your room: it has its own bath. Say, they didn't offer to let us use their dungeon, did they?\"\n\nLisa spurted, \"No! I certainly didn't tell her about that.\"\n\n\"Relax,\" Dan said. \"I was just kidding. But I wouldn't mind getting you into it again.\"\n\nSomewhat mollified, Lisa responded, \"I wouldn't mind either. But I'm not going to complain if all we get to do the rest of the week is simply fuck, are you?\"\n\n\"Absolutely not,\" Dan said. But then he added, \"Still I wouldn't mind.\"\n\nAbout the same time Mary had let Tom in on what she had said so he wouldn't be surprised. Tom had no problem with it and said, \"Good for them. I should have known that Dan would find the second sexiest woman in the state to sleep with.\" Then, putting his arm around Mary, added, \"But I'm not going to let him anywhere near the first.\"\n\nMary kissed him and said, \"You don't have to worry. At least not as long as you don't lose interest.\"\n\n\"That,\" Tom said, patting Mary on the ass, \"will never happen.\"\n\nLater, when everyone said goodnight and Dan and Lisa headed for the same room, everyone acted as if this had always been the case.\n\nThe next day at lunch, Mary casually mentioned that one of her friends from back in college was visiting someone she and Tom both knew who lived in the next county. She and Tom had been invited over to spend the next day. \"If we go we probably won't get back until after midnight,\" Mary said. \"I wouldn't even consider it except that it's been years since I've seen her. I know you two are only going to be here a few more days, but you don't mind if we go tomorrow, do you?\"\n\n\"Of course not,\" Lisa immediately said.\n\n\"I'm sure we can find something to entertain ourselves,\" Dan added. This earned him a reproachful look from Lisa and a smile from both Tom and Mary. He quickly added, \"I didn't mean just that,\" which brought laughs from all three of the others.\n\nThat night after they had gone to bed Dan said, \"Maybe I'll get the chance to take you back downstairs one more time, after all.\"\n\n\"Are you sure we should?\" Lisa asked. \"I mean they have no problem with us sleeping together, but I'm not sure how they would like us using their playroom if they found out.\"\n\n\"They didn't notice last time, so I don't see why they would this time,\" Dan said. \"After all, they don't even know that we know it exists.\"\n\n\"I guess you're right,\" Lisa agreed. \"And the thought of playing down there is getting me turned on already.\" She turned towards Dan and rubbed her bare breast against him. \"Think you can find something to do about that to hold me until tomorrow?\"\n\nDan didn't say anything, but rolled her onto her back and pulled her hands over her head. He lowered his head and began to lick and suck her hardening nipples. Soon the young people were straining against each other and this time didn't even notice the similar sounds coming from their aunt and uncle's room.\n\nThe next morning everyone was up and at breakfast early. Right afterwards Tom and Mary got in their car. \"You're sure you don't mind?\" Mary asked.\n\n\"No. Go ahead and have fun,\" Dan assured them.\n\n\"All right,\" Mary replied. You two go ahead and eat supper. We won't be back until late - probably between midnight and one.\"\n\n\"Have fun,\" Lisa said as she waved and the two started towards the gate. As soon as the car was out of sight down the narrow road she turned to Dan and said, \"OK, Lover, let's get downstairs and get naked.\"\n\n\"In a hurry, aren't you, Wench?\"\n\n\"Damn right!\" Lisa said. \"I feel incredibly horny. How about you?\"\n\nDan slapped her on the ass. \"I'm always horny when you're around. I guess they probably won't come back for anything, so let's get you down there and stretched tight. I plan to severely abuse your beautiful body.\"\n\n\"Oh, goody,\" Lisa said as she started towards the basement stairs, unbuttoning her shirt on the way. Dan grinned and followed her, unbuttoning his own shirt as the couple started down to the dungeon.\n\n..................................................................................................\n\nAs soon as they had gone about a half mile, Tom asked, \"Did you rig the door.\"\n\n\"Yep,\" Mary said. \"I stuck a couple of threads along the door jam with some beeswax and rigged several of the drawers the same way. If they get inside, we'll know it. And I'll bet they're already on their way right now.\"\n\nTom chuckled. \"You're probably right. I know if I'd had a chance to get you into some place like that when we were their age, I wouldn't have waited a minute.\"\n\n\"If you had tried to wait, I'd have been dragging you there myself,\" Mary replied. \"I have the feeling those two will enjoy playing games just as much as we do. I wish we could offer to let them use the playroom, but I expect they would be too embarrassed to take us up on it or even to admit they liked that stuff.\"\n\n\"Yeah, I expect so,\" Tom said. \"Still, if they do use it, let's try to think of ways to let them use it in the future without scaring them off. In the meantime, today, what are we going to do? I mean you don't really have a long lost friend to visit.\"\n\n\"Well, I was sort of thinking that we'd drive down to town and find a motel for today. I expect we can find something to do for a few hours. Then, since I know you're getting too old to keep it up forever, we can have a nice dinner while you recover.\"\n\n\"Too old, huh? We'll see who needs to rest first,\" Tom replied and slid his hand up Mary's skirt all the way to the damp spot on her panties.\n\nMary sucked in her breath. \"We'll see. Maybe we'll just send out for room service.\"\n\n..................................................................................................\n\nIn the dungeon Lisa was stretched into a tight X-shape between ceiling chains and floor rings. Dan was dragging the soft leather tails of a cat across her breasts and back, bringing shivers and moans from his bound captive. Between gasps Lisa said, \"Oh, Dan, I'm so hot. I want you to whip me and fuck me and all kinds of other stuff. Please, just remember, we don't want anything that shows when they get back.\"\n\n\"Don't worry,\" Dan said. You might have to wear some longer pants, or at least not your usual short shorts, but I'll be careful not to mark you anywhere I shouldn't. But I do intend to really whip your ass.\"\n\nLisa shivered again. \"Then do it! Make me feel it, Dan.\"\n\nDan suddenly swung the leather tails hard against Lisa's bare ass, bringing a cry but also making her stick her bottom out even farther for the next blow. He delivered ten more strokes and then paused to attach weighted nipple clamps. Lisa's juices were beginning to run down her legs as Dan applied another ten lashes to her reddening ass and then switched to land blows on her stomach, breasts, and pussy. For fifteen minutes he continued to torment her until he could wait no longer himself. He loosened her hands and bent her over a waist high vaulting horse, securing her hands to more floor rings. After another five hard strokes he put down the whip and entered her dripping pussy.\n\nLater, when Dan had released Lisa, the couple explored some more of the dungeon. Walking naked, with their arms around each other, they examined drawers and equipment. \"Wouldn't it be awfully nice to have something like this to use whenever we wanted?\" Lisa said wistfully.\n\n\"It sure would,\" Dan agreed. \"Maybe someday we will.\"\n\nLisa looked at him, but didn't say anything. But she thought to herself that Dan was also beginning to think of them as a long term couple. It gave her a warm feeling to realize that he seemed to be falling for her the same as she was for him.\n\nAfter they had rested a while, Lisa bound Dan bent over a padded punishment bench and worked his ass over with a leather strap. She used nipple clamps and tied a weight to his balls. By the time his bottom was covered with red stripes and his cock sticking out rock hard, Lisa had her finger embedded in his anus while the fingernails of her other hand teased the sensitive flesh between his rear hole and his balls. After a few minutes of this, she removed her fingers from his rear and replaced them with a long dildo. Thrusting the fake cock in and out and teasing his cock and balls with her other hand, Lisa brought Dan to a hard climax.\n\nThe couple continued to play in the dungeon for some time. In fact they were so enjoying themselves they completely forgot lunch and when they finally realized they were hungry, found it was already five o'clock. They took a break for supper, for which they remained naked, and by seven were back in the dungeon where they continued until after ten. They then carefully replaced everything where they had found it, cleaned the equipment, and then locked the room. When their aunt and uncle returned at ten of one, Dan and Lisa were cuddled on the sofa watching a movie.\n\nThe next day Lisa noticed that Mary seemed to have a smug \"I told you so\" look when she glanced at Tom, but had no idea what it was all about. And Tom seemed to grin each time he looked at Dan and Lisa.\n\nAlmost before they realized it the week was up and Dan and Lisa had to depart for their respective schools. Tom and Mary insisted they come back up at Christmas or sooner if they could, and both agreed. Finally as the two young people drove off in their own cars, Tom and Mary stood waving until both cars were out of sight.\n\nWhen the cars were gone and the dust began to settle, Tom said, \"OK, Beautiful, I think we should take your lovely bod downstairs where I can whip it properly.\"\n\n\"At least I see we agree on one thing,\" Mary said, taking off her blouse and starting for the house."
    ],
    "authorname": "professorjames",
    "tags": [
        "lisa diana",
        "diana lisa",
        "hours lisa",
        "dan immediately",
        "ground cloth",
        "hug deep",
        "weighted clamps",
        "dan suddenly",
        "suddenly dan",
        "sex dan"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/cousin-pt-03"
}