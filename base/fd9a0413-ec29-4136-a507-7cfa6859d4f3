{
    "title": "Hero Worship Pt. 05",
    "pages": [
        "So here is part five of eight, more than halfway now. Read the other parts before this one. Thank you for rating and commenting. All characters in explicit scenes are over eighteen.\n\n*********\n\n- Taylor -\n\nHow could I be so stupid? She said it was going to be different. I stifled a bitter laugh. Sure, a rich, power couple like that was going to let some low-income, college dropout dyke like me date their daughter. No chance in hell.\n\nAnd she knew it! She hadn't been serious about anything. She'd been telling them I was a guy, for Christ's sake! Well I hope she enjoyed her time slumming. She was going to have me over for dinner with her family. What a pile of crap.\n\nIt's better for her, probably. She could go marry some doctor or lawyer or other rich asshole, live in some fancy house and keep labradoodles or whatever the fuck rich people did. She could be with someone who could give her more than a crappy studio apartment over someone's garage. She was right to go. She deserved so much more than I could give her.\n\nI looked down the walkway where she'd gone, and my heart leapt in my chest as I saw a young woman with light brown hair coming this way. But the people in front of her moved, and it wasn't my Aly. I sat back in my chair, ignoring the people walking past.\n\nI'd done a lot better interacting this year. It might have something to do with winning the ribbon, but mostly it was because of Aly. She smoothed away my rough edges and was just a natural when it came to talking to people. I missed her. Already.\n\nI took a deep breath, glancing over at the two food containers still sitting on the rear table. I hadn't eaten since breakfast, and no sense in letting them go to waste. They weren't cheap, after all. I picked up the top one and opened it, letting the spicy aroma waft over me. Aly loved spicy, within reason. I'd been really excited about that, as it opened up so many possibilities.\n\nMy mind's eye brought up her eager face when I'd have her try a new dish, or I'd order something off the menu for her. Back to take-out loneliness now, I guess. In my head I heard her laugh at some silly joke I'd made. I loved her laugh. It made everything sparkle. And holding her. God it felt so good to hold her, the way she'd snuggle against me, like we could never be close enough.\n\nThe first tear rolled off my cheek. No! Damn it! I wasn't the one who did this. I didn't run away. I never did. Everyone always left me.\n\nI'm not sure how I got through the last hours of the fair that day. Booths had to stay open and manned until eight PM. It was one of the rules in the god awful paperwork I'd had to read. But the second it ticked to the required hour, I dropped the front of the booth and took off. I needed to think, to decide what to do.\n\nI motored out of the parking area, weaving through traffic a bit until I could find some open road. I headed north, giving my thoughts free reign as they chased themselves around inside my head. How could she do that to me? No. The real question was why wouldn't she? She'd never been serious. No one would ever be serious about me. I wasn't worth taking seriously.\n\nI made it all the way to the other side of Santa Barbara, and it was close to ten by the time I turned around. I couldn't ride forever, much as I might want to. I was tired, too, the emotional day was catching up to me, and riding while sleepy is a recipe for disaster.\n\nI stopped for a coffee, adding a double shot and inhaling it, hoping the caffeine boost would get me back home. I ended up having to repeat that one more time before I managed to make it back. The simple concentration needed to stay awake and alert helped a lot, I think, and I was in an okay place when I pulled into my neighborhood. I hurt, a lot, but I was still breathing. At least until I saw Aly's Mini Cooper in the driveway, exactly where she'd left it.\n\nI put my bike away before heading up the stairs, my heart pounding in my chest. She might not be here. She could've Ubered back to her dorm or her parents' house. It didn't mean anything.\n\nI tried the door handle, and it wasn't locked. I pushed it open, stepping inside as quietly as I could. I glanced up at the bed, which was still made. I let out a sigh. She wasn't there. I took off my boots and headed into the living area, where I saw the white note on the table.\n\nSomething was glittering on top. It was the key I'd given her. My breath caught in my chest for a moment before something moved on the couch. Oh, god, it was Aly. She was still here. I took the note and moved to the window, reading it by the light of the street. There were tear stains on the paper, and the handwriting was shaky. It broke my heart, and the signs of my own emotions slipped free from my eyes and rolled down my cheeks as I read it.\n\nAnd finally, I asked myself the question I should have been asking from the beginning. I'd known I was gay for over a decade. Aly'd known about herself for only two months. What would I have done if my parents had walked in on an early date with Gillian and me in college, or caught me with that magazine I'd found when I was in high school? I'm not sure, but I could virtually guarantee the answer wasn't to proudly stand up and announce my sexuality to them.\n\nAly rolled over on the couch, her face illuminated by the soft light from the window. Her beautiful features were marred by tear stains. My baby had been crying, and I hadn't been there to hold her. I should have seen what was really happening immediately. She was just scared, and she made a mistake. We all make mistakes. She hadn't left me. Well, I mean, she did, but she'd run right back here, to us.\n\nI knelt down next to her and ever so gently ran my fingers through her hair.\n\n\"Aly?\"\n\nHer soft brown eyes fluttered open, taking me in for a moment. Her lip immediately began to quiver as water filled her eyes. \"Taylor?\"\n\n\"I'm here, baby.\" As I spoke I started to mist over, too.\n\n\"I'm sorry. I'm so sorry.\" I'd never seen anyone's face twisted into that much misery before, and the fact that it was happening to Aly, well, it just destroyed me. I put my arms around her, and she threw herself into them, sobbing bitterly onto my shoulder.\n\nWhat was I doing? I should be so angry, but I found myself just stroking the back of her head as she cried. \"Shh, it's okay. It's okay\". As I held her I realized how scared I'd been, the raw terror at the thought of losing her breaking free from deep inside. My own tears began to fall. Maybe they'll come take away my butch card, but I don't care. I was shaking. \"Shh, sh, It's okay, baby, I'm here.\"\n\nI continued to whisper in her ear until she started to calm down. Eventually she pulled away, but she wouldn't look me in the eye, instead staring down at the floor, eyes squeezed shut.\n\n\"How much do you hate me?\"\n\nI let out a soft, reassuring chuckle. \"I don't hate you.\"\n\n\"Yes, you do. You have to. What I did, that was ... I'm so sorry.\"\n\nShe started to break down again, so I put my forehead against hers. \"Hey, hey. Look at me. Aly?\"\n\nShe opened her eyes, which were shining with tears.\n\n\"Hey. It's going to be okay. I promise.\"\n\n\"But I ...\"\n\n\"Aly, I lied to my parents about who I was for years. I understand.\"\n\nShe cocked her head to the side. She didn't believe me.\n\n\"Baby, I'm not going to say it didn't hurt. But I'm not going to throw this, throw you away over it.\"\n\n\"Really?\"\n\n\"Of course not.\" Which is funny, because in any of my extremely brief relationships since college I would have done exactly that, and for a lot less.\n\nStrength and resolve flowed back into Aly's face. \"I'm going to make this right. I promise.\"\n\n\"I know, baby.\" I really believed her. My Aly could run through a brick wall if she set her mind to it. So if she decided to come out to her parents that's exactly what she would do. \"But not tonight. It's late, come to bed.\"\n\nShe threw her arms around my neck as I stood up and scooped her off the couch. I carried her back and laid her on the mattress before pulling off her socks.\n\n\"Alright, baby, get undressed.\" She did, crawling under the covers once nude. I wondered if she'd even brought pajamas. We didn't generally sleep in anything unless one of us had to, and then it was just a pair of panties.\n\nI disrobed, sliding in next to her. Her arms went around me as I held her close, our legs intertwining under the sheet. Aly gave a happy little sigh and began slipping away. I had no thoughts of sex; I just wanted to feel her against me. I had her, and she was safe in my arms.\n\nMaybe that had scared me more than anything else. Aly was so trusting, so loving, so giving, she could be so easily taken advantage of. If she were ever no longer mine, how could I trust the next person she gave her heart to would cherish it like I did?\n\nAly believed in love, the pure, never ending kind. It was all she knew. She came from a happy home, with parents who loved her and each other. She might know divorce and betrayal existed, but she'd never experienced it, so they weren't quite real to her. Most of us know better. I remembered my initial annoyance at her naivety, but the fact of the matter is she was right. What she knew, that's what love was supposed to be like. That's the kind of love that she deserved, and it was the kind she was determined to give away. I'm not sure if anyone deserves that kind of love, but we all need it desperately.\n\n***\n\nI had a very hard time getting up the next morning, and Aly and I had to rush through our shower to make up for it. I held Aly to me under the water for a moment.\n\n\"I'm sorry, My Lady. I just don't have time to do a good job.\"\n\n\"It's okay baby, it's not your fault.\" Aly had been extra deferential this morning, and I tried to set her mind at ease as much as I could.\n\nWe decided to splurge a little on the way to the fair, grabbing a half dozen donuts from a local shop on our way. Aly drove, since we might have a few items to take back with us. We pulled into our little parking spot behind the booth at nine thirty, about ten minutes before we were supposed to open for the day.\n\n\"Let's just stay here for a second?\"\n\nI nodded. \"Okay, but we don't have long. What's up?\"\n\nAly pulled out her phone. \"I don't want to go all day without fixing this.\"\n\n\"Are you sure?\"\n\nI could tell by the focused look in her eyes she was. \"I almost lost you yesterday. I almost destroyed everything. I won't ever do that again. And this is the first step.\"\n\nI just nodded, and Aly touched her phone. She set it to speaker and it began to ring.\n\nA woman's voice answered. \"Hi sweetie. You're calling early.\"\n\n\"Yeah, hi mom. Is dad there with you?\"\n\n\"Uh-huh, he's here, drinking his coffee. Something wrong?\"\n\n\"No, I just need to talk to you both. Kelsey?\"\n\n\"Still asleep. What's going on honey? You're on speaker.\"\n\n\"Okay.\" Aly took a deep breath, looking to me for support. I gazed at her steadily and nodded my head. \"So, um, you know the woman you met yesterday? The artist? Ruth?\"\n\nAly's dad answered. \"Sure.\"\n\n\"Umm, okay, I have to tell you something about her. She's, um, oh God.\" Sly closed her eyes. \"Her full name is Ruth Taylor Knox. She's the person I've been seeing since Kelsey's accident.\"\n\nThere was silence on the other end for a moment, and Aly's lip started to tremble. \"Say something. Please?\"\n\nHer mom answered. \"Oh, honey, why didn't you tell us?\"\n\n\"I'm sorry, mom. I should have said something yesterday.\"\n\nHer dad sounded skeptical. \"So, the lifeguard?\"\n\n\"She is the lifeguard, dad. She's the one who rescued Kelsey. She saved her life.\"\n\n\"Wow, okay. But you, you think you're a...\"\n\n\"Yeah, dad. I am. It's the best relationship I've ever been in, the only one that's ever felt right. I love her.\" Aly's voice stayed steady with conviction, even though I could hear the emotion behind it. She was starting to get misty, so she reached out and took my hand for support. \"I'd like to introduce her to you. For real this time.\"\n\nHer mom spoke again. \"Of course, honey. What time do you guys get done today?\"\n\nAly looked at me, eyes questioning.\n\n\"It ends at four. We should be out of here by five at the latest.\"\n\n\"Oh, is she there with you?\" Her mom actually sounded excited.\n\n\"Yeah, mom, she is.\"\n\n\"Would you both like to come over for dinner?\"\n\nI nodded, and Aly responded that we would.\n\n\"Ok, then we'll see you guys tonight.\"\n\n\"Yeah, okay. I'll call you when we leave.\"\n\nBoth of Aly's parents said goodbye. I could tell they were still processing, but there'd been nothing negative in anything I'd heard.\n\nAly pressed the disconnect icon and started breathing heavily.\n\n\"Oh my god. Oh my god I just came out to my parents.\" She started shaking her hands, while the panic in her eyes slowly faded into a dazzling smile. \"I did it.\" She almost whispered the words.\n\nI nodded, giving her a little half. \"You're the bravest woman I know.\"\n\nMy comment brought tears to her eyes, and I pulled her into a hug.\n\nShe pulled away and looked at me very seriously. \"You know I'm not ashamed of you, right? I'm so proud to be yours?\"\n\nI nodded and kissed her, and we got out of the car.\n\nFor the rest of the morning Aly was back to her old self, with maybe just a little more bounce in her step. She even gave Mr. Beville a hug when he came by to offer me a show in the spring before taking my two unsold pieces off my hands, stating that he would put them up in his gallery to whet people's appetite.\n\n\"I'd likely have room for a couple more, if you have any.\" I nodded dumbly. \"Regarding the show, would April be too soon? I don't want to rush. We'd want at least a dozen pieces, preferably closer to two, including one or two larger, more central pieces.\"\n\n\"Yeah, sure, Mr. Beville, no problem.\" Oh, shit! How the hell was I supposed to do that? Plus I'd taken three commissions over the last two days. I had to get on those right away. Damn, there were going to be a lot of late nights in my immediate future.\n\nPeople kept coming, and I received an additional commission that morning for another copy of Pacifica, which made two. Without the creative process involved I was hoping I could bang them out pretty quickly. And I wouldn't have to be as exacting with the face. But the others were for larger backyard pieces that were going to take time to design and sculpt.\n\nAs I talked to customers and received congratulations I kept wondering how I was going to get it all done, especially if I kept spending Tuesdays with Aly. The thought of giving those up made me vaguely sick to my stomach. Shit, I really was in love.\n\nThe bright spot in all of this was that I had something to think about all afternoon, other than the looming meeting with Aly's parents. Some part of me said that I should be feeling a significant amount of terror about meeting my girlfriend's parents, but after what we got through yesterday, we'd survive this. I hoped.\n\nAly\n\nAs we got closer to the end of the fair things seemed to get busier. Quite a few of our purchasers showed up, and I gave them instructions on how to drive back to the areas behind the booths so we could load up their pieces. Taylor's work tended to be heavy, after all.\n\nTaylor was being chatted up constantly, and she gave away the last of her business cards a little after three.\n\n\"I've handed out more of these things this year than I had the previous three combined.\"\n\n\"Sometimes it takes a while for people to start appreciating real genius.\"\n\nTaylor shook her head and the smarminess of my comment, which made me giggle. Another buyer pulled up behind the booth and I headed out.\n\nThe last of the sculptures were gone a little after four, and as the final buyer drove away I flopped down in my folding chair and looked over at Taylor, who'd already done the same. We just grinned at each other.\n\n\"That was amazing.\" Katrina was finishing packing up her goods. She'd already told us that just the increase in traffic at the booth had almost doubled her sales from last year. Taylor stood and accepted a big hug and a kiss on the cheek from the older. \"And you two are adorable together. Aly, I've never seen Taylor smile this much. Keep it up.\"\n\nShe disappeared out the back of the booth, and it was just Taylor and I.\n\n\"I'm so proud of you.\"\n\nTaylor's cheeks reddened. \"This, I just can't even describe this. And I'm getting a show. Did I tell you?\"\n\nI giggled. \"I know. I was there.\"\n\n\"He said he wants two dozen pieces, including some big ones, in six months.\"\n\nI grimaced. \"Is that a lot?\"\n\nTaylor's mouth hung open and she nodded. \"Oh, yeah. I've got no idea how I'm going to get that done.\"\n\nI stood up and carried my chair over next to hers, sitting back down and holding her hand. \"Well, you're not going to start tonight. We have an appointment.\"\n\n\"Oh, crap. I know\"\n\n\"Are you ready? I could just go alone and talk to them. I mean, I don't want to make you if you're not ready.\"\n\n\"No, no. Meeting the parents. I can do this.\" Taylor took a deep breath.\n\nI reached over and took her hand. \"Don't be nervous. They're going to love you. Besides, you saved my sister's life. That'll at least earn civility, if nothing else.\"\n\nTaylor's looked at me steadily, her voice serious. \"Aly, look at me. I'm a starving artist, a college dropout with a dead end job. Even if I were a guy, I'm not the person your father would want you bringing home. I'm not in your class, Aly.\"\n\n\"Oh, sweetheart. That's not true.\"\n\n\"You might not see it, or maybe you can look past it, but your family won't. Trust me.\"\n\nThere was real fear and hurt in her eyes. I wasn't used to that. I realized that I didn't know much about how she'd grown up, other than them not supporting her coming out. She didn't like to talk about her family much. Had they really been that poor?\n\n\"Taylor, my mom grew up on a farm in Kansas. Wheat fields as far as the eye can see. She doesn't judge people by how much money they have.\"\n\n\"And your dad?\"\n\nI grimaced. Dad came from money. Not stupid rich money, but my grandfather had been a successful developer in his own right, and dad had followed him into the business. Grandma and Grandpa had a very nice house just outside Malibu. But that didn't mean he was classist.\n\n\"Look, Taylor, let me tell you something about my dad. On his first project, he had a day laborer named Carlos Juarez. He was undocumented, but he was bright and a hard worker. Carlos is now one of dad's chief foremen. Dad helped him get his citizenship, and he's one of my dad's closest friends. He won't care that you don't have a lot of money. I promise.\" Taylor nodded, but she didn't look convinced, so I continued. \"Besides, this is not 1954 and I do not plan on being the little woman, barefoot and pregnant. You won't have to support me. Financially, I mean. And...,\" I couldn't help looking down and blushing at the all too fresh memory, \"despite the way I acted yesterday, I am proud to be with you.\"\n\nI pulled out my phone and pressed mom's icon from my favorites.\n\n\"Hi, honey.\" She sounded chipper, at least.\n\n\"Hi mom, Taylor and I are done here, so we're going to head over. That okay?\"\n\n\"Sure, sweetie. We'll see you soon.\"\n\nI disconnected.\n\nTaylor grimaced. \"Did she sound just a little too happy to you?\"\n\nI shrugged my shoulders. \"Maybe. I guess we should go find out.\" I started my car and pulled away.\n\nI'll admit my heart was beating a little faster as we pulled into my neighborhood. The gate opened automatically as I approached, reading the transmitter on my dashboard.\n\nTaylor was wide-eyed. \"Jeez. How much does something like this cost?\"\n\n\"You mean the gate? I have no idea. Why? What was your house like growing up?\"\n\n\"It wasn't like this, I can tell you that. We had three bedrooms, but one was built by my father, uncle, and grandpa. It was just a single level ranch, with a weird, extra room sticking out of it.\" She looked up at the fa\u00e7ade of my childhood home. \"It wasn't a mansion.\"",
        "I looked at my house. It wasn't a mansion. It had three full floors, only two of which were visible from the driveway. The property itself sloped away going front to back, so the bottom level opened out onto the back patio and pool area. Compared to a lot of the homes just within five minutes drive it was quite modest. I'd never thought anything of it. To me it was just home.\n\n\"Doesn't matter what it looks like, Taylor. The people inside are going to love you, just like I do.\" I grinned at her. \"Well, maybe not exactly the same.\"\n\nMy Lady shook her head, and I turned off the car, hopping out and coming around to her. I opened her door. \"C'mon, let's go.\"\n\nIt was odd. I'd never seen Taylor scared like this. She climbed out, and I took her hand. \"You've been here once before, you know.\"\n\n\"Yeah, but then I was coming to defile their rich, spoiled daughter. Didn't much care if they liked me.\" She grinned at me.\n\nI smiled back, giving her my best innocent eyes before putting my other hand on hers. \"Is that so? You know, if you want, I'd love some defiling later tonight.\"\n\n\"You can count on it, baby.\"\n\nOh, there she was again, My Lady looking down at me, that fire that lived inside her flashing in her eyes for a moment. I couldn't help lifting my chin towards her, and she covered my lips with hers. And for a moment everything was perfect. When we broke apart the fear seemed to creep back into her eyes, so I put my hand on her cheek. \"I love you. No matter what.\"\n\nHer eyes misted over for a moment and she nodded.\n\n\"You ready, My Lady?\"\n\nHer hand tightened in mine. \"Yeah. Let's meet the family.\"\n\n***\n\n\"That was an amazing meal, Mrs. Winterberg.\" Taylor dabbed up a bit more of the mushroom gravy with a dinner roll.\n\n\"Thank you, Taylor. And please, call me Jessica.\"\n\n\"Yes, ma'am.\"\n\nMy mom chuckled. \"You're not like most California girls. I don't think any of them know that word.\" Taylor looked confused for a second. \"Ma'am. I don't get called that much. Where're you from, Taylor?\"\n\n\"Boise, Idaho, ma'am.\"\n\nIt was really odd watching Taylor be so formal. I kept thinking of a parent warning their normally willful daughter to be on their best behavior. And she was trying so hard. I was going to have to reward her tonight. That'd be fun.\n\nKelsey was being really quiet, only stealing short glances at the woman who'd saved her life.\n\nMom smiled at her younger daughter. \"You know, Aly, you're not the only one doing well with romance these days. You tell your sister about your date on Friday?\"\n\n\"Mom!\"\n\n\"Really? Was this with the infamous Devin? So it worked, huh?\"\n\nHer nervous scowl cracked into a wide smile as her cheeks turned a deeper shade of red. \"He sat by me at lunch on Monday. He was just as nervous as I was. He said so anyway. He took me to a movie on Friday.\" All of a sudden she looked at Taylor, and snapped her mouth shut, remembering suddenly that we weren't alone.\n\nI was still pushing around the lima beans from the mixed veggies my mom had made. Yuck. At least she didn't make me eat them anymore. My dad wiped his mouth with his napkin and set it on his clean plate.\n\n\"So Taylor, how long have you been a lifeguard?\n\n\"Four years full time, but I worked summers before that while I was in school.\"\n\n\"What did you study?\"\n\n\"Art.\"\n\nI felt like Taylor's nightmares about coming over here were starting to come true, so I decided to butt in.\n\n\"Taylor's an amazing artist, dad. You saw her at work at the fair, it's incredible. She won the top prize, and she sold all but two of her pieces, and even those were picked up by a studio. And she's going to have a show this spring, at Beville Studios. It's a big deal.\"\n\nNow it was Taylor's time to be embarrassed. I had spoken way too fast and it was obvious that I was being overly defensive. My dad shot me a look that told me I wasn't the one he'd been talking to. It was the same thing he'd been doing to me since I was five, and it still made me swallow and look down.\n\n\"So you're in lifeguarding. Not doing anything with your degree?\"\n\nI wanted the floor to open up and swallow me. This was exactly what I'd promised her wouldn't happen. I was terrified to look at her. She'd be staring at me, accusation written all over her face for dragging her into this hell. Instead I heard a strong voice answer.\n\n\"I don't actually have a degree Mr. Winterberg. I had some personal issues at the end of my junior year. I didn't go back. It's, um, not a decision I'm proud of.\"\n\nShe started to get emotional toward the end, but she got through it, and never dropped her gaze.\n\n\"Have you thought about going back?\"\n\n\"Pepperdine is very expensive. I was only able to go because of a swimming scholarship. Without that, it'd be a lot of debt for something that isn't terribly practical.\"\n\n\"That sounds like something someone else has beaten into you. Dad or mom?\"\n\nTaylor smiled. \"Neither, actually. Guidance counselor. He thought me wasting a D-I scholarship on a BA in art was a crime. My parents were only interested in me getting my 'Mrs.' degree. Art was as good as English as far as that went.\" She grinned. \"Of course, they imagined me demurely painting in a sundress. You know, something with oils, or watercolors, like Amy Marsh from 'Little Women'. Coveralls and power tools were not what my parents had in mind.\"\n\nThat made my mom and dad both laugh, and the mood lightened significantly.\n\nMy mom reached over and put a hand on hers. \"I know exactly what you mean. The argument my parents and I had when I told them I was moving to LA...\" She shook her head and sipped her wine.\n\nTaylor sipped hers as well before setting her glass down. \"There are two things I've loved for as long as I can remember, swimming and art. I love the way the water supports you, and carries you. It inspires me. I like being close to it. It's why I lifeguard.\"\n\n\"Sometimes it carries you a little too far, though, doesn't it?\" Mom gave Kelsey a stern look. My sister's face turned sheepish, and she looked down at her plate and ran her fork through what was left of her meal.\n\n\"Yeah.\" Taylor turned a mischievous eye at Kelsey. \"What were you doing out that far, anyway?\"\n\n\"She was trying to impress a boy, of course.\"\n\n\"No I wasn't! Not really. They were arguing about who could swim out to one of the buoys. I said I could do it. I thought I could.\"\n\nTaylor shook her head. \"Swimming in the ocean is harder than doing laps in a pool. You're fighting the current, and things can look closer than they are when there's no frame of reference.\"\n\n\"Yeah, I, um, found that out.\"\n\nTaylor helped Kelsey clear the table, while my mom fussed at her that she was a guest and shouldn't have to help. Mom and I set to the dishes. After a moment I realized that the table was clear and that Taylor had disappeared into the living room with my father. That realization sent a shiver of panic up my spine. I couldn't hear anything over the running water from the sink. Mom wasn't as bad as my grandma in Kansas, who didn't trust dishwashers at all, but she still insisted on prewashing the worst of it. Not being able to hear anything the only thing I was sure about was that dad and Taylor hadn't come to blows yet.\n\n\"You okay, sweetie?\"\n\nI turned back. \"Yeah, I'm just worried about Taylor with dad.\"\n\nMom chuckled. \"What do you think your father's going to do to her?\"\n\n\"Disapprove. She was really nervous about coming here. And after what happened yesterday. What I did. I think she wonders what I would do if he doesn't like her.\"\n\n\"What would you do?\"\n\nMy eyes suddenly burned with tears, and I looked down at the platter I was holding.\n\n\"Honey, where did this come from? I mean, this just really feels like it's coming out of left field, sweetheart. How long have you felt like this?\"\n\n\"For two months. Since high school. I'm not really sure, mom.\"\n\n\"Aly, this is a big thing not to be sure about. I mean when did you even start thinking about this?\"\n\n\"Mom.\" I whined a little and she turned a hard gaze on me.\n\n\"No, you don't get to get out of this one, Alyssa. You come in and announce you're a lesbian, after, what? Two months of dating this woman? And she is not a kid, that is a grown adult in there. I mean, how do you know this isn't just a phase? That's not fair to her, or to us. I mean, if we hadn't stumbled on you yesterday, would you ever have told us about this?\"\n\nI was almost in tears now. \"I was trying. I even talked to daddy about scheduling a dinner like this at Kelsey's party. I was scared mom.\"\n\n\"About what? When have your father and I not supported you? But what I said is still relevant. How sure are you about all this?\"\n\nI looked out toward the living room. \"She's the most incredible person I've ever met. When I'm with her I feel so alive. When she's h-holding me, I know I'm safe, cherished. She has a beautiful mind, the things she makes...\" I sighed heavily. \"I've never been close to this, not with any boy I ever dated. I hope it lasts forever. I want forever, mom, like you and daddy, and I want it with her. I love her, so much it scares me sometimes.\"\n\nMy mother's face twisted with emotion, and she held her arms out to me. And as I went into them, all the distance I'd been feeling since August disappeared.\n\nTaylor\n\nI eased down at one end of their sofa as Aly's father sat in his easy chair. I ran my hand over the couch cushions, feeling the high-end material. I looked at the carved wooden side tables, recessed overhead lighting, beautiful hardwood floors complete with huge, expensive looking rug. There was a huge flat screen on the wall with built in cherry wood shelves and cabinets on each side. I bet the cheapest thing in this room was more expensive than anything in my little apartment.\n\nKelsey had disappeared off somewhere, probably to her room if she was anything like me at that age. Which left just me and Mr. Winterberg. Pay him a compliment. That might help.\n\n\"Your wife is a wonderful cook, sir.\"\n\nHe smiled at me. \"Thank you. Do you cook at all?\"\n\nI returned his grin. \"More than Aly does, I know that.\"\n\nThat earned a chuckle. \"Yeah. She never really seemed interested.\" He heaved a sigh. \"So, you're dating my daughter. To be honest I'm at a loss here. If you were a man, I'd know exactly what to ask, but for some reason the standard fatherly intimidation line just doesn't feel appropriate. Or is that just being sexist of me?\"\n\nHonestly just seeing him sit there was intimidating enough. Growing up, my father's chair had been where he ruled the home. He dominated the TV, mom served him his evening coffee there. My siblings and I had all been turned over his knee in that spot more than once.\n\nSeeing Aly's dad in that same position, accounting for the obvious differences of a strange home, it instilled a bone deep respect that made me feel like a child again.\n\n\"It's okay, sir. I was raised very conservatively. I remember listening at the door as my father dressed down a young man for bringing my older sister home late one night. I can take it.\"\n\n\"So the conservatism didn't stick, huh?\"\n\nI chuckled. \"In some ways it did. Aly still teases me about it from time to time.\" My bumbling idiocy in the adult toy store sprung to mind, making me blush.\n\n\"So, do you see yourself doing lifeguarding long term?\"\n\nHis gaze had turned from friendly to appraising. I recognized that face from when my professors would look over my work back at Pepperdine. It was critical, but not disapproving. At least, not yet.\n\n\"It's something I think about. It's a physically demanding thing, so no, probably not. And for your next question, no, I'm not sure what I'll do after.\"\n\n\"Do you mind if I ask how old you are, Taylor?\"\n\n\"Twenty-five, sir.\"\n\n\"And what would be the dream?\"\n\n\"Making a career out of my art. I never really thought it possible, but after this weekend, maybe. I just, I don't know.\"\n\n\"So you did well, then?\"\n\n\"I made more this weekend than maybe the whole rest of my art career put together. And with the show at Mr. Beville's, it's just a lot closer to being a reality than I've ever felt before. And it's all your daughter's fault.\"\n\nHe chuckled. \"How's that?\"\n\n\"She inspires me, sir.\" I felt my cheeks heat up as I said it, and hearing it out loud sounded corny, but it was the truth. \"She's giving and supportive. My biggest fan. And she takes in the world with this wide-eyed innocence, like all she can see is the beauty. I didn't know there were still people like that. And she's fearless, most of the time. I'm always afraid. I don't think I realized how unhappy I was until I met her.\"\n\nMr. Winterberg leaned forward. \"Taylor, this family owes you an unpayable debt.\" I opened my mouth to protest, but held up his hand. \"But that does not mean that I can blindly approve of you dating my daughter. Firstly, I worry about my daughter being with someone who has no set career goal.\" I dropped my head some.\n\nMy mother had actually been happy at my choice of major when I'd told her. \"You won't be able to support yourself with that, you know. But God will provide you a man who will, if you let Him. You'll see.\"\n\nI tried to respond confidently. \"I understand. I can only say that I'm not the kind of person to sit around. I won't let myself be a burden, even if that means waiting tables or teaching swim lessons at the Y.\"\n\n\"I appreciate that, and I'll admit it would bother me a lot more if you were thirty five instead of twenty five. Plenty of people are still figuring themselves out at your age. The second is more delicate.\" He hesitated for a moment.\n\n\"Is it about me being a lesbian?\"\n\n\"Not you, so much.\"\n\n\"But her. You don't want her to be gay.\" There was a touch of accusation in my voice, but I tried to temper it.\n\n\"You said she was innocent. I agree. I don't think she has any idea what a life as a lesbian would entail.\"\n\nI wanted to ask him if he thought that he did, but ignorant as he may or may not be, he wasn't wrong. I'd been feeling the same things, the same fears, the ones I'd been telling myself didn't apply to Aly. She was different.\n\n\"Sir, one thing I know about your daughter, is that she can and will do anything she sets her mind to. Realizing you're gay is one of the most stressful things that can happen to a person. But she'll survive. She's the most determined person I know. Like this morning. I told her that she didn't have to call you, that she didn't have to do this if she wasn't ready. But here we are.\"\n\nMr. Winterburg shook his head. \"And I think she doesn't know what she wants. She's never shown any interest along these lines. And suddenly now she thinks she's gay. And...\" He shook his head, and I felt about three inches tall. He was right, after all. I was a nobody. I didn't deserve Aly. I tried to push the thought back, but one glance around their palatial living room told me the truth. Aly was slumming, even if she didn't realize it, and I'd drag her down. She deserved better than that. Man or woman, she deserved better than me.\n\nThe others came back into the room. Aly moved towards me, and I looked up at her. She'd been crying, that was obvious, but she didn't look upset. Instead her face furrowed into a look of concern.\n\n\"Sweetheart? Are you okay?\"\n\nI tried to smile at her, but she didn't buy it. She slid in next to me, leaning against my shoulder. Almost by instinct my arm went around her, and she put her hand on my knee. I felt better immediately. Better, but not perfect.\n\nAly's mom was all smiles. She sat on the far end of the sectional, nearest to her husband. With her there, the tone of the conversation shifted. She wanted a recap on how we met, what our first date was like, things of that nature. I let Aly take the lead with that. She just leaned into me like it was the most natural thing in the world. She'd be talking, and she'd just look up at me with those doe eyes and that devastating smile, and every time it'd make my heart twist inside my chest.\n\nGod, I loved her. But I had never in my life felt so out of place as I did on that couch. I can't explain how much I wanted to be back in my apartment holding my baby, cuddling with her under the covers as she snuggled into me. That was us, not here, in the palace.\n\n\"Hey, sweetie, want me to give you the tour?\"\n\nNo, I really didn't. \"Sure.\"\n\n***\n\n\"And finally, my bedroom.\" Aly had a wicked little grin on her face, which made me shiver inside a little. It was the best feeling I'd had in the last twenty minutes as Aly had taken me through her house. We'd gone downstairs first, which was smaller than their upstairs, but sported a huge recreation room, complete with a huge pool table, foosball game, even a couple of cabinet style video games on the wall at one end and a huge three sided sectional across from a massive 3D television.\n\nIt was a big enough room that it had to have two weight bearing pillars in the middle. The whole thing opened directly onto a sculpted stone patio and an in-ground pool. The house I grew up in might have fit in that one single room. Probably not, but it sure felt that way.\n\nAnd now walking into Aly's bedroom was just the final kick.\n\n\"Damn. This was just your room?\"\n\n\"Yeah. Don't you like it?\" Her voice was coquettish, her bottom lips pouted out just a little, foot twisting on the floor. I shook my head and laughed. I walked into the middle and looked around.\n\n\"It's huge. The whole place is huge.\"\n\n\"Yeah, I guess so.\" Aly sat down on the edge of her bed, patting the space next to her. \"Close the door and come sit with me.\" I obeyed, and when I was next to her she took my hand.\n\nShe didn't say anything for a few seconds, just letting me breath. She put a second hand on mine. \"Taylor, do you want to go home?\"\n\nI tried to laugh, but it came out as a weird half sob chuckle thing. I don't know don't know why I thought I could hide how I was feeling from Aly. Two months, and she knew me better than anyone.\n\n\"What's got you upset?\"\n\n\"I, God, Aly, I just can't compete with this.\"\n\nAly's face twisted into confusion. \"Taylor? Compete with what?\"\n\n\"This.\" I waved my hands around at her huge, king size bed, dressing table, walk-in closet, even out the door to the massive homestead beyond. \"I can't give you this. I'm just ...\" my emotions choked me up and I couldn't finish.\n\nAnger flashed across Aly's face. \"You're what?\" She reached up and took my chin, turning my averted eyes towards hers. I'd never seen that look in them before. \"You are My Lady, and I love you. You, the woman who works so hard to protect people, who sees such beautiful things in the world, and shares it through the things she creates.\"\n\nHer words were running off me like water. Nothing she could say would penetrate in this place, with the reality of the gulf between Aly's life experience and mine all around me. I could feel Aly's critical gaze on me, and I couldn't look at her.\n\n\"Alright, let's go home.\"\n\n\"Aly, you are home.\"\n\n\"No I'm not.\" I started to respond, but Aly cut me off flat. \"Are you going to stay with me here tonight?\"\n\nThat came out of left field, at least to my slightly overwhelmed mind, so I answered truthfully. \"I can't, Aly, I have to work in the morning and...\"\n\n\"Then I'm not home. C'mon, let's go.\" She pulled me to my feet and we walked back into the living room, where her mom was sitting with her laptop open and her father was reading a book.\n\n\"Mom, dad, we're going to head out.\"\n\nMrs. Winterberg closed her computer and looked at her daughter. \"Okay, sweetie. You sure?\"\n\n\"Yeah, Taylor has to work in the morning and we've had a long weekend.\"\n\n\"Taylor, it was wonderful to meet you.\" She gave me a warm hug. I thanked her for a wonderful dinner, told her she had a lovely home, stuff like that. Mr. Winterberg stood up and shook my hand. My heart was thumping, but I didn't look away. His gaze was sincere.",
        "\"Miss Knox, I meant what I said about that unpayable debt. If you ever need anything, don't be afraid to ask.\"\n\nI was a little stunned. I wish I'd had the presence of mind to ask for his blessing in dating Aly, but if wishes were horses...\n\nKelsey appeared and gave me a shy embrace, saying thank you. I told her that she was very welcome, and gave her a playful admonition to be more careful in the ocean from now on. She blushingly promised that she would, and Aly and I went out into the night.\n\nAs Aly drove home I felt the fatigue of the weekend settle over me. I laid my head back, and as my eyes closed, I felt Aly's hand slip into mine. It felt so good, and the next thing I knew we were in my driveway. I sleepily opened the car door.\n\nAly came around to my side, and handed me out of the car.\n\n\"Are you going to stay?\" There was some real pain and insecurity in my voice that I hadn't intended. Dammit I was supposed to be the strong one.\n\n\"Does My Lady wish me to stay?\"\n\nI felt an exhausted tear slip free. I wondered how long I'd been holding that.\n\n\"Yeah, please. But I don't feel much like Your Lady tonight.\"\n\n\"You are always My Lady, always. Even when, no, especially when you're hurting.\" She was looking up at me with those incredible brown eyes, and they were filled with love and devotion, like they always are. Her hand slid around to the back of my neck and pulled me into a kiss. Her lips were so soft, her tongue so gentle against mine, and she tasted amazing. Eventually she pulled away. \"C'mon.\"\n\nShe led me up the stairs, opening the door with her key and pulling me inside. I followed her, and she walked directly away from me, shedding clothes as she made her way to our bed. By the time she climbed onto the mattress she was completely nude, turning and looking at me. I was still standing by the doorway like a statue.\n\n\"My Lady, would you like to come to bed?\"\n\nI started to unbutton my shirt as I walked. Unfortunately I was wearing a pretty tight pair of jeans, and I completely failed in taking them off smoothly. But eventually I managed the feat, joining Aly with only my underwear bottoms still on. She met my kiss with a gentle hunger and I reveled in the feel of her skin on mine.\n\nShe moved her lips to my neck, whispering into my ear. \"Would you like me to service you, My Lady? Please?\"\n\nI ran my fingers through my baby's soft brown hair, my eyes closing at both the surrender and desire in her soprano voice. \"I'd love that baby.\" Aly's lips went back to my neck, and a shudder ran through my body as I gave myself over to my baby, shutting my mind off and letting her take care of me.\n\nAly gently laid me back, working her mouth slowly down my body. She peeled off my panties, gently spreading my legs. Her gentle lips and tongue settled on my sex, and I let myself slip away into the pleasure. I'm not sure how long it took, but eventually my orgasm rolled over me, my baby's tongue wrapped around my clit. I moaned my bliss out into the night, lifting my hips into that wonderful mouth before collapsing back onto the bed.\n\nAly kissed her way back up my body, pulling the covers around us and climbing into my embrace.\n\n\"Taylor?\"\n\n\"Hmm?\"\n\n\"Tell me about the house you grew up in.\"\n\n\"It wasn't anything like yours.\"\n\nShe turned in my arms, and her eyes were soft, but insistent. \"I didn't ask if it was like mine. Don't compare them, sweetheart. I just want to know, and I can't know unless you tell me.\"\n\n\"It, um, it's just embarrassing.\"\n\n\"Why? Because you had a smaller home?\"\n\nI took a deep breath. This was all me, and I knew it. Aly had never once made a big deal about how much money she had, or I didn't have, for that matter. So my trepidation was all mine.\n\n\"My father started working at a food distribution warehouse straight out of high school. My Grandpa was a supervisor there, and if it was good enough for Grandpa, it was good enough for dad. At least that was my grandfather's attitude. And dad's been there for almost forty years. He's the warehouse manager now, but for the longest time he was just a worker.\n\n\"He got married, and they bought a small, two bedroom house. It had a small dining room and family room and a decent sized kitchen. Eventually my dad, Uncle Jim, and my grandpa built a third bedroom off the side. It was sturdy, but didn't look good. It didn't really go with the rest of the house. They raised five kids in that tiny little house. I shared the new bedroom with my sisters. A set of bunk beds for Martha and I, and Esther had her own twin on the opposite wall. No closet, just a second hand clothes rack on one side, like one you'd see at a thrift store, and one used dresser for the three of us.\n\n\"Mom never worked outside the home. They were both extremely frugal. She made all our food from scratch, even sewed our clothes when we were little. I remember going to middle school, first day, in a homemade dress. I already hated it, just 'cause it was a dress. And the other kids laughed at me, and I was so embarrassed.\" A tear slipped free, and suddenly I was that eleven year old again. Somehow I managed to continue. \"I already knew I was different, I wasn't sure exactly how yet, but I'd never felt so out of place as in that moment. I hated being poor, and I hated my dad for not making more money, and I hated my mom for never letting me buy the things the other kids had.\"\n\nI stopped to wipe the tears from my eyes, and Aly took the opportunity to wrap her arms around me, holding me as tightly as possible. Her closeness brought down the last of my emotional defenses and I wept openly in her arms. She held my head as I cried, her fingers running gently through my hair. She didn't try to shush me, or stop me, she just let me get it out. And I clung to her, my soft, smaller girlfriend, who had the strongest spirit I knew. I let myself really feel safe in her arms.\n\nWhen I'd settled down, she whispered gently to me. \"There's no shame in being poor, Taylor.\"\n\nI laughed softly, shaking my head. \"That's easy for you to say.\"\n\nAly smiled. \"Yeah, I guess so. But that doesn't make it not true.\"\n\n\"Yeah. I mean, we never went hungry, we always had clothes to wear. We were always clean and tended to. They both worked hard to make sure of that.\"\n\n\"See, they were good parents, and you should be proud of your family. I mean, until, um...\"\n\n\"Until they threw me out for being gay?\"\n\nAly gave a cute little grimace. \"Sorry.\"\n\nI laughed. \"It's okay. Lots of issues there too. I'm just a mess.\"\n\n\"Unfortunately, that's all the time we have for this week. Would you like to make another appointment?\"\n\nI pulled her close to me. \"Oh, yeah.\"\n\n\"I'll warn you, additional counseling services will require payment.\"\n\n\"They do, huh?\" Aly bit her lip and nodded. I threw my leg over her and covered her with my body. \"I guess I'll have to make a deposit.\" I pulled her head to the side and began kissing that little spot behind her ear that drives her crazy. Aly laughed and squealed, but I kept her pinned to the sheets until she was moaning into the night. Then I really went to work.\n\nAly\n\nWhen I woke up the clock said it was a quarter till six. Taylor's arm was still around me, and I could feel her soft even breathing against the back of my head. I was a little chilly, so I pulled the cover over my shoulder and snuggled back against the comfy warmth of my lover.\n\nI really wasn't sleepy, so I just lay there and thought about yesterday. Despite all the times Taylor had called me a rich girl, I'd never really seen myself that way. Where I'd gone to high school I'd been solidly average. I didn't have hordes of clothes or shoes compared to some, but I certainly never had to buy second hand if I didn't want to. I did, occasionally, 'cause thrift stores have great stuff sometimes, but it wasn't a requirement.\n\nI'd seen girls teased and belittled for having shabby or knock-off items, and to my shame I'm pretty sure I'd laughed along with the rest. That had been so wrong, and I felt the shame bubbles rise up inside my head from a few particular instances. I remember Sadie telling me that empathy isn't fully developed in the human brain until a person's mid twenties, which meant the shame was only going to get worse.\n\nWhat would I have thought of Taylor in middle or high school, with her homemade, hand-me-down clothes? I'd have probably felt forced to ignore her by my friends, and I doubt I'd had the strength, then, at least, to do anything different.\n\nWe discriminated against people at the house, too. I'd heard the other girls making fun of non EKT students for a fake Gucci bag or rip-off jeans or shoes, or belittling a TA for their shabby dress. I thought about the girls I knew well in the house. All of them were upper middle class at the very least. Sadie's father owned multiple businesses in the Dallas Ft. Worth area. Evelyn's father was a powerful attorney, her mother a federal judge. Macie's dad was a cardiovascular surgeon.\n\nThinking about it now I couldn't think of a single sister who had come from more humble origins. Was that just a matter of birds of a feather? Or were we unconsciously pushing away others? I wasn't sure. But I was sure about one thing. Our bylaws had a nondiscrimination statement, saying that we did not consider race or religion when we selected new members. That wasn't good enough though.\n\nI was going to change that if I could. My dad always told me that you can't fix the past, all you can do is learn and make better choices in the future.\n\nI wanted to add sexual orientation and socio-economic status to that short list. How many incredible women, like Taylor, had we turned away, intentionally or not, because of our own bigotry and shortsightedness?\n\nI wasn't even sure what the process was to change by-laws, so that would be the first thing. I guarantee Evelyn would know. I was going to do it though.\n\nI thought about it all the way back to school, and I had difficulty keeping my mind on what my professors were saying in my three classes. During lunch I pulled up the EKT bylaws on my tablet and tried to figure out what it would take to amend them. The instructions actually were surprisingly straightforward. As an officer I would have to propose the change to the current leadership committee, which consisted of seven women, including myself. If approved, it would then go to the Alumnae Board to be ratified (or not.)\n\nOur next meeting was on Thursday night. The primary focus, apart from a few housekeeping issues, would be to start the planning for our annual formal Christmas Ball. It would just be the initial stages, though, so this really would be a good time. I wanted to talk it through with Sadie, though. Hopefully I would have at least one vote in my corner.\n\nI spent a couple hours studying at the library before heading back to the house for dinner. Just as I was packing up to leave I got a text from Sadie\n\nSadie -- You ever coming home?\n\nMe -- Heading that way now.  15 min.  I need to talk to you tonight.\n\nSadie -- Me too.  See you soon.\n\nI dropped my phone in my bag and headed back, feeling good that I didn't have anything else I couldn't blow off tonight. The house was a little louder than normal when I got back, everyone catching up from break I guess. I headed into the dinning room and grabbed a plate, watching Sadie wave at me from across the room.\n\nAs I sat down Sadie put a little extra twang in her normal Texas drawl. \"So what is on your mind, girlfriend?\n\nI swallowed a forkful of green beans and shook my head. Not here, later in the room. There were plenty of people sitting nearby, and I didn't want to be overheard. \"So how did it go up north?\"\n\n\"Darling, I had them eating out of my hand.\"\n\n\"Stop that.\"\n\n\"What?\"\n\n\"The accent. You sound like you're auditioning for a role on 'Dallas'.\"\n\n\"I admit it, I kind of weaponized the accent a little.\"\n\n\"Did it work?\"\n\nSadie nodded as she chewed a piece of her pork cutlet. \"I think so, yeah. His mom and I got along great. We even spent, like, a whole afternoon shopping. I just said a lot of nice things about her boy, and she lapped it right up. Especially with me calling her ma'am, and all.\"\n\n\"Buttered her bread a little, huh?\"\n\n\"Maybe, but it was all pretty true. Course, I left out how good he is in the sack.\"\n\nThat made me almost squirt Diet Coke out of my nose. \"You're terrible.\"\n\nSadie shrugged. \"But it was nice. We got to sleep in the same bed the whole time, which was really nice. The boy knows how to cuddle.\"\n\n\"Did you, y'know, in his parents house?\"\n\n\"He was nervous about it, but one thing I learned growing up in Texas is that stallions are made to be ridden.\"\n\nI couldn't help but laugh at that. \"Please, you've never been on a horse in your life.\"\n\n\"Who said anything about horses? But how about you? How'd the thing go?\"\n\n\"Oh my God. My parents showed up.\"\n\nSadie almost choked. \"Seriously?\"\n\n\"Yeah. I'd told them about the art fair, and they thought it'd be fun.\"\n\n\"Oh, man. Then what?\"\n\nI gave a surreptitious glance around. \"Later.\"\n\n\"Yup.\"\n\nEventually we did make it back to our room.\n\n\"Ok, so what happened with your parents and Taylor?\"\n\nI gave her the recap of the stupid thing I had done, and how I'd fallen asleep on Taylor's couch trying to leave her that note, and the dinner at my parent's following.\n\n\"So your parents were okay with it?\"\n\n\"My mom was mostly mad because I'd hid it from her. Something happened with my dad and Taylor, though.\"\n\nSadie grimaced. \"Like what?\"\n\n\"I'm not a hundred percent sure. But it was something. She was already really intimidated by my house.\"\n\n\"Just by the house?\"\n\n\"She grew up poorer than I realized. Not destitute or anything, but enough that she was always aware that a lot of people had more than she did. I was able to get her to talk about that some, and I figured that was enough for one night.\" I shrugged.\n\n\"Yeah, I get that. Your house does have an automatic gate, and a manicured yard and back patio with a custom in-ground pool. I was a little intimidated the first time I saw it. And I wasn't sleeping with you.\"\n\n\"I'm going to talk to my dad about it first. I'm going to get to the bottom of it. But that isn't what I needed to talk to you about.\"\n\n\"Really? I'm all ears.\"\n\nShe was quiet and thoughtful as I laid out my idea for changing the bylaws. It was weird. I'd never seen Sadie in full professional mode before, but she was now.\n\n\"Alright, Aly, let me ask you a question. First, I'm totally with you on the socio-economic side. But on the other, are you ready to come out over this?\" Her voice was low and steady.\n\n\"I shouldn't have to. This is the right thing to do. It shouldn't matter who proposes it.\"\n\n\"You're right, and in a perfect world that'd be all there is to it. But this is real life. Are you ready to come out over this?\"\n\nI hadn't considered that. Like I'd said, it shouldn't be an issue. But after my dazzling display of cowardice on Saturday, I was determined that I wouldn't fail Taylor or myself, or my people again. Was that the moment it really hit me? It might have been. I wasn't just a girl in a same-sex relationship, I was a gay woman. A lesbian, and it was my responsibility to stand up for other LGBTQ+ people whenever necessary.\n\n\"Yeah. If that's what it takes.\"\n\n\"Okay, girl. I've got your back. Let's do it.\"\n\n***\n\nI didn't bring either her conversation with my father or my impending attempt to bring my sorority into the twenty-first century when I saw Taylor on Tuesday. I wanted normalcy above all, to remind her that no matter what I was still her baby, and that I loved her. I hadn't forgotten, of course, even though it was so easy to let it go while wrapped up in Taylor's arms. But I knew getting out the details of the conversation would be easier with my dad. If he had reservations regarding Taylor he'd be honest about them. I think, anyway.\n\nAnd it needed to happen soon, since it was obvious just from Taylor's energy that everything was not okay. There was a touch of fear in the way she was talking, almost from the minute I got there. I know she didn't feel differently about me, as she still gave me that special smile when I walked into her apartment. But the guardedness that came later, she was just waiting for me to hurt her.\n\nI basically dragged her back to bed as soon as I arrived, and was doubly cuddly afterwards.\n\n\"It's only two o'clock, baby. What are we going to do the rest of the day?\"\n\n\"Anything you want, My Lady.\" I sighed and moved against her. \"But it would be a shame to spend it all inside.\" I ran a finger between her breasts and around underneath. \"Y'know, we've never gone swimming. You always tell me how much you love the ocean.\"\n\n\"Do you even have a suit?\"\n\n\"Actually, I do. It's in my car. With a towel. And sunblock.\"\n\nShe smiled at me. \"So you had this all planned, huh?\"\n\nI tried to look shocked. \"Of course not, My Lady. I'd never presume...\"\n\nTaylor laughed out loud and pulled me to her. I closed my eyes and reveled in the touch of her skin and the strength of her embrace.\n\n\"So this suit, is it that blue bikini I first saw you in?\"\n\n\"Yes, My Lady, I believe it is.\"\n\n\"Excellent.\" She kissed me, and an hour later we were at the beach. We went to Tagalong, her beach, and she showed me the best spots to throw out a towel. It was Tuesday afternoon, so it wasn't packed, but there were plenty of people around. We took a long walk down the water's edge, and I held her hand the entire way.\n\nI was very aware of my body language, trying to send the message that I was totally committed and absolutely unashamed. Every time we walked past a guard tower Taylor would wave up at the occupant, and several times she was asked if I was the famous Aly. She also got some good-natured ribbing, mostly from the guys, about not working today and wondering how she'd gotten such a beautiful girlfriend. I held her tight, burrowing into her side, letting everyone she introduced me to know that I was hers.\n\nIn the water, Taylor was amazing. She was so fast and strong, constantly picking me up, or dunking me under. I was never a great swimmer, even with my backyard pool, but I'd never had so much fun in the water.\n\nWe dried off and watched the sun slowly sink toward the ocean, and we ended up at a little Indian restaurant where I had Tikka Masala for the first time.\n\nBy the time we made it back to the apartment Taylor was back to her old self. All through dinner I'd been giving her my best bedroom eyes, with a little footsie thrown in. I couldn't help myself.\n\nTaylor had been her normal stoic self, but as soon as she had me inside the apartment she scooped me into her arms. I nuzzled into her neck as she carried me back towards the bed, feeling how wonderful it felt to be held by her.\n\nShe laid me down on the mattress, pulling the skirt of my yellow sundress over my hips and unzipping the back. Up over my head it went, and her hands were behind my back releasing my bra.\n\nShe caressed my breast as her mouth covered mine, and I let myself just dissolve into the deliciousness of her kiss. My arms went around her, moaning as she moved her lips from my mouth to my neck and lower. I gasped as she sucked one of my nipples into her mouth. Her fingers slid under my panties, stroking my rapidly dampening sex. The combination of sensations had me swimming in pleasure as I surrendered control to My Lady, knowing that she would take such good care of me.\n\nShe scissored her fingers around my small nub, making me shake. My nipple popped out of her mouth and she looked me in my eyes.\n\n\"I'm going to get you revved up, now, but no orgasms, understood?\"\n\n\"Yes, My Lady.\" She started to move down my body, and I took a few deep breaths, steeling myself for the sweet torture to come. She took a moment to strip off her top and bra, making my eyes go wide at the definition of her muscles and the beauty of her form.",
        "My panties ended up on the floor in short order, and My Lady's mouth descended on my most intimate place, sending waves of joy echoing and rebounding through my body. I didn't ask to come. My Lady had given me an order and I intended to follow it if I possibly could. Inside five minutes I had the sheets in a death grip as I shook under her ministrations.\n\n\"Oh, My Lady!\" My voice quavered, begging and pleading, and she let up, kissing back up until her face was level with mine.\n\n\"You did really well, baby. I'm going to give you your reward now.\" The devilish glint in her eye told me my reward was going to be to service her, but I was completely okay with that, as my suddenly watering mouth would attest.\n\nI watched as she stood by the bed and stripped off her jeans and underwear. She climbed back onto the mattress, walking on her knees until she straddled my face. She didn't have to say anything. I breathed in her aroma as she positioned herself over me, and I wrapped my arms around her thighs as she lowered herself, eyes closing while my lips enveloped her.\n\nI licked and suckled, holding her to me as I took her higher and higher. She pulled her fingers through my hair, and I looked up the length of her body, her gentle, loving gaze shining down. That familiar warmth of adoration and worship filled me, and I redoubled my efforts, and soon enough I was rewarded with My Lady's powerful orgasm as she ground herself against my face.\n\nI was more than ready to keep going, as I almost never was satisfied with giving her only one, but she pulled away.\n\n\"Mmm, that was wonderful, baby. I want you to keep going, but we're going to change it up a little.\" She caressed my cheek. \"And I'm lifting your restrictions on orgasms. I want you to come as much as you can. Okay?\"\n\nI nodded.\n\n\"And I expect it to be a lot, understood?\"\n\n\"Yes, My Lady.\"\n\n\"Good.\" She swung her leg back over my head, but this time she was facing the other direction. Given the view, I definitely preferred the other way. \"Oh!\" Then again this way has its advantages, as My Lady leaned forward and pushed two fingers deep inside me. Her tongue flicked across my clit and I jumped and moaned.\n\n\"Baby.\" Her voice carried a hint of remonstrance, and I realized I wasn't keeping up my end of the bargain, so to speak. I lifted my face and continued to work on her, which took all of my concentration, as the sensations from what she was doing made me almost insane with pleasure.\n\nMy Lady pulled my clit into her mouth, and it was a very good thing I didn't need to ask for permission, because the orgasm crashing into me was an unstoppable force.\n\nFor the next two hours Taylor made love to me, and I gave myself over to her. Any way she wanted me, for as long as she wished, and the more I surrendered, the better everything felt. It was like I was floating, completely at the whim of My Lady, where I was safe and loved. It was a stunning paradox, one I still didn't understand completely, but there was no question, the more Taylor used me for her pleasure, the more pleasure I received, and the stronger my accompanying orgasms were. And I kept my word, I couldn't tell you how many times she had me screaming out into the evening.\n\nFinally she pulled me up into her arms and settled the covers around us. I was exhausted, but relentlessly and blissfully happy as she cuddled me. It'd been so intense that it was several minutes before I could even speak.\n\n\"I had a really nice time, today, Taylor.\"\n\n\"Me too, baby.\"\n\n\"I love being here with you, y'know.\"\n\nShe smiled at me, but it wasn't quite her real smile. \"I do, too.\"\n\n\"That's good, cause you're never getting rid of me.\"\n\nThat pushed a button, as a momentary spasm of pain crossed Taylor's handsome features. I don't think anyone else would have even noticed, but I did. She was having those thoughts again, like I was going to leave her. What the hell did she and my dad talk about? The thought crossed my mind that this could have something to do with my screw up at the fair, but we'd talked about that. That's a lot of what today was all about, after all.\n\nI leaned back against Taylor, and she pulled me tighter to her. She'd finally started to relax as we'd made love, and pushing her as to what was wrong would be a bad move. I'd definitely been right in what I'd said to Sadie. This was going to require a call to my dad.\n\n***\n\nI'd managed to pile two huge things on my plate, on top of my senior project and trying to graduate and find a job.\n\n\"Baby? Are you okay?\"\n\n\"Hmm? Of course I am. Why?\"\n\n\"You seem tense. Didn't I relax you enough?\"\n\nI giggled as she pulled me tight and kissed my neck. \"No, you were wonderful, My Lady.\" I sighed. \"It's stuff about school, and life.\"\n\n\"Are you worried about, um ...\"\n\n\"About us?\" I turned in Taylor's arms, and I could immediately see the uncertainty in her face. I kissed her neck and snuggled into her embrace. \"No sweetheart, not at all. You are the one thing in this world I'm absolutely sure about.\"\n\nI felt Taylor relax, which made me smile. I still had a hard time falling asleep, but, safe in her arms, eventually I managed it.\n\nTaylor\n\n\"I'm not good enough for her. It was very clear.\"\n\nJen sighed and set down her coffee mug. \"Do you think Aly agrees with that?\"\n\n\"Maybe not. Or not yet. But eventually she will.\"\n\n\"Why?\"\n\nI didn't say anything. I took a sip of my coffee. I wish Aly were here. Damn, that's a weird thought. This whole thing was because of her, but still, when she was here, close, it all seemed easier. Even though she was going to leave.\n\n\"Because she actually loves and admires her father. And because he's probably right.\"\n\nJen gave me a stern look. \"That's crap and you know it.\"\n\n\"Is it? Just look at it from his perspective.\"\n\n\"Taylor...\"\n\n\"No, seriously. I make crap money at a dead end job. A college drop out who couldn't possibly afford to go back. I was getting a useless degree anyway. I'm nothing to him. And I don't even think it's about me being a woman.\"\n\n\"Taylor, you're twenty-five years old. You don't have to have everything figured out yet.\"\n\n\"Aly does. She knows exactly what she wants to do, who she wants to be.\"\n\n\"And who she wants to be with.\"\n\n\"She doesn't see it yet. But she will. I worry about her. She's really naive. Very trusting.\"\n\n\"Have you talked to her about this?\"\n\n\"She knows.\"\n\n\"And what does she say?\"\n\n\"She doesn't see the issue. She doesn't care. For now.\"\n\nJen sat back. \"Does Aly lie often?\"\n\nMy brow crinkled. \"No, not at all. She tends to be brutally honest, usually.\"\n\n\"Then why do you think she's lying now?\"\n\n\"Well, I don't, really.\"\n\n\"She's just young and na\u00efve, right.\" Jen was smirking at me now, after trapping me in my own words.\n\nI started to open my mouth, but she cut me off.\n\n\"Taylor, this is in your head, and it's only as real as you make it. Look, when I got hurt and had to retire from volleyball I was devastated. I went from being a popular, marketable athlete to a spectacular nobody. And then when Vickie's modeling career took off, I almost broke up with her.\"\n\nI was confused. \"Why?\"\n\n\"To keep her from doing it to me. I wasn't sure I could handle that.\" Jen's gaze was far away. \"How could this gorgeous, exotic model want to be with a washed up loser of a girlfriend? I was terrified, and really depressed. I wouldn't have blamed her for leaving. Finally, one day she came home from a meeting with her agent extremely upset. She wouldn't tell me what was wrong, but I knew. She was leaving me. We made love that night like it was the last time, and I was sure it was. But she didn't leave. And I decided to be better for us. Got a job, worked hard. And it wasn't really for her. She'd proven herself so many times, if I'd just paid attention. I needed to prove to myself I was worthy of her.\"\n\nJen chuckled and shook her head. \"Do you have any idea how much more money Vicky makes in a year than I do? It's not a small amount, I promise. But it doesn't matter. The work I do matters, both to you and your coworkers, and to the girls I coach. I'm proud of my life. And I trust my partner. Vicky does a lot to try to put me at ease regarding that. Little things, like holding my hand at the fancy parties I go to with her. She doesn't think I know she does them on purpose, but I do. They mean a lot, but it doesn't matter. I love her, and she loves me. That's all that matters.\n\n\"So there's only one question. Are you worthy of her? But the salient thing is, her father doesn't get to answer that question. Only you and Aly do. And we already know what her answer is. So it's up to you. Are you worthy of her?\"\n\nThat question rang through my head as I rode out to the warehouse, and as I worked it became clear. This was my passion. Maybe it would never be more than a side-hustle, but I was proud of what I made, the things I did. And I was a good lifeguard. A life spent protecting people was no waste. Maybe I wouldn't be doing it forever, but it was fine for now. Assuming Mr. Beville was true to his word, I had the show coming up. I'd work hard for that, maybe it could be a stepping off point for something. But even if it didn't, I'd keep going. I'd do it for Aly, so I could be the woman, the partner, she deserved.\n\nI thought about last night, how intense it had been for me. I'd always assumed dominant/submissive relationships were for the benefit of the dom, and that felt selfish, at least to me. But last night I'd had a revelation. Aly had gone to some other place, so given over to the experience of our lovemaking that she'd stopped speaking. And in that moment, holding her in my arms, I knew that I'd been completely wrong. It wasn't about me at all. It was about her. She'd willingly placed herself in my hands, and it was up to me to bring her as much pleasure as I possibly could, to care for her as she reached new heights of bliss. It was my job to keep her safe, and to be a loving place for her to come back to Earth.\n\nOnce I'd realized that, everything had changed. The hesitation and shame I'd felt in my dominant role had evaporated, and I'd been filled with, well, I guess, a sense of purpose. It's funny, but I think it's always been there, somewhere. The girls I'd been with before, so many curious little femmes, even in my anger and hurt I'd wanted to take care of them too, but I didn't know how, or they never let me. Or more likely a combination of both. They weren't Aly. Aly was special, the way she gave of herself, the absolute trust in her eyes when made love. And that is exactly what it was, for both of us.\n\nWhat I'd felt just a few nights before was still valid, I was terrified of what might happen if Aly broke up with me, how her next partner might take advantage of her, especially now that she was realizing what she wanted.\n\nI looked down at what I was sketching. There was Aly, laughing in the ocean spray. I knew what was happening off the page. I was splashing her, a wide smile on my face as we played in the water, laughing like children. I gently touched her face on the page. She'd given me my innocence back, in a way, and I'd protect hers with everything I had. God, maybe I was worthy of her, or at least maybe I could be.\n\nAly\n\n\"Is there any new business?\"\n\nMy heart was thumping in my chest, but I raised my hand. Evelyn looked at me, her expression confused.\n\n\"Aly?\"\n\n\"I have something, madam president.\" That really got people looking at me. We only kept things semi-formal at these things, and almost never called each other by our titles. It was a calculated move that had been Sadie's idea. Apparently, and as usual, she'd been right, as suddenly every eye was on me.\n\n\"I was looking through our by-laws and I saw something that disturbed me. It says that we do not discriminate by religion, race, or disability. I don't think that's a very exhaustive list for today.\"\n\n\"What would you recommend adding?\"\n\nI glanced at Sadie, who nodded in support. I pulled in a deep breath and pulled the trigger. \"Socio-economic status and sexual orientation.\"\n\nThe second one brought a murmur from the seven women around the table. It was quiet, but noticeable. I pressed on.\n\n\"We're supposed to be an inclusive sisterhood, and in some ways we do a good job. But when was the last time we had someone from, let's say, humble origins in a pledge class? I've heard the women here laughing after someone leaves who was wearing less than designer clothes. Were any one of you not asked about your parents' occupations when you were rushing? I know I was.\n\n\"And secondly, how many sisters do we have active right now?\"\n\nEvelyn had that number memorized, just like I knew she would. \"Fifty-three, including the pledges.\"\n\n\"How many of them identify as lesbian, bisexual, or something else besides straight? Openly, that is?\"\n\nI looked around the table, trying to make eye contact with each member in turn. A couple wouldn't look at me. Macie was staring me down a bit. I hadn't really been counting on her support, given what happened on the beach a few months ago.\n\n\"This is 2020, and we need to be better than that.\"\n\nKirsten, the Junior class representative chimed in. \"I'm game, it should be more inclusive. I don't think we need the first one, but I'm not opposed to it, and we should definitely have sexual orientation on that list.\"\n\n\"No, we shouldn't.\" Macie closed her eyes and took an exasperated breath. \"Look, there's a reason we don't have that on there.\"\n\nSadie piped in. \"Yeah, because it was written in 1975.\"\n\n\"No. Look, we don't want lesbians in our sorority. I wouldn't let one in, and it's not because I hate them, or anything like that. Yeah, we all have a good time, but the reason we all joined this sorority is to make connections, to give us opportunities when we leave school. We become known as a lesbian friendly sorority, and we all get painted with that brush. Those opportunities will dry up fast. And whether or not you know that, the Alumnae Council certainly does, and they won't allow it. All we can do is make recommendations about the bylaws anyway, and if we send this to them we will be shunned. It won't be obvious, but it'll happen.\"\n\nShe was staring at me now, so I held her gaze. \"So we discriminate, do the wrong thing to maybe make our lives easier sometime down the road?\"\n\n\"You're damn right we do.\" Macie sat forward in her chair. \"Look, you're going to be an architect, Evelyn a Lawyer, Sadie a doctor, Leah an engineer, you all have solid careers. I'm studying journalism, which is a vanishing profession, and I am going to need every connection I can get. I can't afford to play social justice warrior.\"\n\n\"Ok, stop.\" Evelyn sat forward and raised her voice slightly. \"I, personally, am with Aly on this. It's time we added this. It needs to be normalized, and I would prefer to be on the right side of history.\" Macie opened her mouth, but Evelyn held up her hand. \"However, I understand Macie's misgivings. I move that we table this discussion, and revisit it next month. I will reach out to Heather and see what she has to say. Second?\"\n\nLeah, a junior and our treasurer, seconded the motion, and it passed quickly. I trusted Evelyn to keep her word. Heather was our alumna advisor. I'd met her a few times and liked her okay, but Evelyn was the one who worked closely with her. I'd started the ball rolling, and I was happy with that for now. And I'd keep at it, as long as it takes.\n\nWe dove into the Christmas Ball, and the meeting lasted a good while still. Eventually I made it back to my room, flopping down on the bed.\n\nSadie slid into the room. \"Macie's still in there bitching about you. Evelyn's got your back, though.\"\n\n\"Remind me to thank her.\"\n\n\"Ok.\" Sadie sat down at her desk. \"Hey, Aly?\"\n\n\"Yeah.\"\n\n\"Thank Evelyn.\"\n\n\"Shut up, Sadie.\"\n\nWe both laughed, and I rolled over onto my back and stared at the ceiling. There was a knock at the door.\n\n\"Come in!\"\n\nEvelyn, Kirsten, and Leah entered. I sat up, and Evelyn sat at the end of my bed.\n\n\"Well, that was interesting. Why didn't you tell me you were going to do that?\"\n\nI shrugged my shoulders. \"I told Sadie. I just think it's time.\"\n\nLeah crossed her arms over her breasts. \"Macie's gonna fight it, all the way.\"\n\nKirsten nodded. \"What is her problem? Like Aly said, it's supposed to be 2020, for God's sake. Her attitude's just...\" Kirsten just shook her head.\n\nEvelyn looked at me. \"I've known her since we were freshmen. She's not going to give up on this. Is it really worth it?\"\n\n\"Yeah, it is.\"\n\n\"Okay. Watch yourself.\"\n\n***\n\n\"Hi, dad.\"\n\n\"Hi sweetheart. So what do you want to talk about?\"\n\nI took a deep breath. I'd rehearsed this conversation probably twenty times since I'd called my dad and asked him to meet me for lunch Saturday. But of course, now that it was here, I was totally tongue tied.\n\nLuckily our waitress arrived at that moment, and I took the extra few seconds it took for me to ask for a Diet Coke to gather my nerves. I was supposed to be an adult, right? And adults are capable of talking to their parents like people. I was always worried that some part of Taylor saw me as a silly kid. Well, I was about to graduate college, and I wasn't a kid any more.\n\n\"Dad, I need to know what you said to Taylor on Sunday.\"\n\nMy father's eyes narrowed and he looked at me seriously.\n\n\"Why, what did she tell you I said to her?\"\n\n\"She didn't tell me anything. But she's upset about something, or worried at least. So, spill.\"\n\n\"Our conversation was between me and her, Alyssa. Why don't you ask her?\"\n\n\"Because she's as stubborn as you are. She was intimidated by just the house, and after I finally got what that was about out of her, I'm not going to push too hard.\"\n\n\"Sounds to me like there are already problems, if she won't talk to you.\"\n\n\"She talks to me. But she also loves me, dad, and she won't intentionally drive a wedge between me and my family. She'd put herself through emotional hell first, just to protect me. So, instead, you're going to tell me, so I can fix this, before she does something stupid and leaves me for my own good.\"\n\nA flash of guilt crossed his face as he took a sip of his iced tea. Oh my God, I finally understood.\n\n\"Is that what you want? Is that what you told her to do?\"\n\n\"No, of course not.\"\n\nHe may not have been lying, but he wasn't telling the absolute truth. What would Sadie do? She wheedled stuff out of me all the time. She'd change tactics, get me to talk about the same subject, only with a different focus.\n\n\"Fine. What do you think of her then, dad?\"\n\nHe shrugged. \"She's respectful, well spoken, I liked her fine.\"\n\n\"That's not the whole story. Since when do you lie to me, dad?\"\n\nNow it was his turn to look uncomfortable. \"Honestly, sweetheart, it's not, god, how do I put this, it's not an even relationship. I want more for you than a lifeguard, no degree, no real future. That worries me, Aly.\"\n\nI could feel my face hardening as he talked, mostly because I knew exactly how much that would hurt Taylor. \"Did you say that to her?\"\n\n\"I was honest with her, sweetheart.\"\n\nIt took everything I had to keep from crying. That explained everything.\n\n\"Look, I know you don't understand this now, and I'm sorry, but you have to look and see from my perspective, sweetheart. She's just not right for you.\"\n\n\"And this doesn't have anything to do with the fact that she's a woman, that I'm a lesbian?\"\n\nHe winced a little as I said it, which took me back some.\n\n\"Daddy, do you have a problem with that?\" Part of me was amazed I was talking to him like this. Throughout my life my dad had been a paragon, a man I was proud to call my father. He was generous but strong, firm but loving, but now he just seemed small. It was the first time I'd ever been disappointed in him.\n\n\"Honey...\"\n\n\"No, seriously, dad. I. Am. Gay. I've always been that way, and I always will be. It isn't a phase or a choice. My only 'choice' is whether to be honest about it or hide it.\"",
        "Dad's voice got stern. \"Alyssa, you know I don't have any problems with gay people. I don't condone any sort of discrimination against anyone.\" I opened my mouth, but he cut me off. \"But still, you have to understand what you're doing, it will cause you problems all your life. You'll face prejudice at work, in social circles. Even if it's quiet, it'll be there.\"\n\n\"So your solution is for me to never have a fulfilling relationship? You'd rather me be miserable and alone and respectable and spend the rest of my life hiding than face a little trouble?\"\n\n\"You don't have to be miserable and alone. And where is this coming from? You've never shown any interest in being with women before.\"\n\n\"Yeah, the operative word there being 'shown,' dad.\" I took a breath, trying to figure out how to attack this. \"Dad, I've dated guys, plenty of them, but there's never been any real spark. I mean I like them okay, but I don't dream about them, I don't get all tingly when I think about them, or when they kiss me.\"\n\nThat made him a little uncomfortable, thinking about his little girl kissing boys. Maybe a different attack. \"Dad, you remember the day you met mom? What was it like?\"\n\nA reminiscent smile crept across his face. \"It felt like all the air had been sucked out of the room. She was the most beautiful woman I'd ever seen.\"\n\n\"Yeah. That's the way I feel with Taylor. And I remember feeling that way around certain girls in high school. You never wondered why I always wanted to be involved with the girl's soccer team? Even when I wasn't good enough to play? It's because of how those girls made me feel. Excited, nervous, one of them would smile at me and I'd float around for days. I didn't understand it until Taylor kissed me. But when she did, dad, everything made sense, and I knew what I wanted.\"\n\n\"But what if....\"\n\n\"It's just a phase?\"\n\nDad looked embarrassed, but unconvinced.\n\n\"Then I'll deal with the consequences. But it's not, and I plan on being with Taylor for a very long time. I hope you can understand and accept that. But I need to tell you something. What you said to her hurt her very deeply. You think she hasn't thought about that? I've spent a lot of the last months convincing her that I wasn't going to leave her for that very reason, dad. And then instead of supporting her, you reinforce everything she's afraid of.\"\n\nI sat back in my chair. \"Dad, Taylor comes from a conservative family. When she came out to them her parents disowned her. They told her she wasn't worthy of their love because of who she was. And you just did it again, and for a different reason.\"\n\nDad nodded thoughtfully. \"Does that have to do with why she didn't finish school?\"\n\n\"Not directly, but yeah. She came out for a girlfriend. One she thought loved her, and after she did, the girlfriend left her for exactly the reasons you just laid out. Everyone Taylor's ever loved has left her. It terrifies her, daddy. Can't we be different? Can't we be the family that finally accepts her and loves her for who she is? The woman who saved Kelsey's life? The woman who loves me, and makes me so happy? And she does, daddy.\"\n\nMy father reached out and took my hand. There were tears in both of our eyes, and he nodded. \"I'll try sweetheart. For you.\"\n\nWe recovered, and spent the rest of our lunch talking, some about my senior project, some about what I was trying to do with the sorority. I talked up Taylor's prospects, especially with her show upcoming at Mr. Beville's studio and her various commissions from the fair.\n\n\"Is she going to be ready, doing all that and working full time?\"\n\n\"I'm not sure. I worry about that, but she works so hard, daddy. Too hard, sometimes. She'll find a way.\"\n\nDad fiddled with what was left of his sweet potato fries. \"So, she's estranged from her family? Doesn't go home for the holidays?\"\n\nI shook my head. \"I don't think so. Why?\"\n\n\"Tell her we want her for Thanksgiving. We won't accept 'No' for an answer.\"\n\n\"Thank you, daddy.\" Tears suddenly stung my eyes. We both stood, and my father pulled me into his arms.\n\n\"I love you, sweetheart. No matter what.\"\n\n***\n\nI felt good heading back to the sorority, like an adult. I'd just had a very grown up conversation with my father, and I'd survived. I doubt I'd ever give the details to Taylor, but I'd stood up for her. And I'd initiated change at the house. Unfortunately I wouldn't be around during the next rush to actually try to put it into practice, but I could stay active as an alumna.\n\nAs I walked in, there were several girls in the common area, talking and laughing. But as soon as they saw me the conversation stopped abruptly, and they tried not to look at me as I crossed the room.\n\nThe pattern repeated itself probably half a dozen times over the next few minutes. Girls would look at me sideways, but never make eye contact, or stop talking when I went by. The times they would speak to me seemed unnatural and forced. Eventually I retreated to my room, my previous good mood very shaken.\n\nI pulled up my senior project and tried to put what was going on out of my mind. Maybe it was just in my head. I finally was able to concentrate, feeling almost normal before Sadie slipped into the room a little after five.\n\n\"You wanna head down and get some dinner?\"\n\nI saved my work and closed my laptop. \"Yeah, sure.\" I smiled up at her, which immediately made her face turn thoughtful. \"What's going on?\"\n\nI shook my head. \"Nothing, let's go.\" As soon as we made our way into the dining area, I knew I hadn't been imagining things. Somehow the normal murmur had taken on a sinister undertone, punctuated with the little looks from multiple directions. I wanted to shrink into myself, and I almost carried my tray upstairs to my room. But I wasn't a coward. Usually, anyway. I shot a hard look at the next person who glanced at me.\n\nSadie sat down across from me. \"What is going on?\"\n\n\"I don't know.\"\n\n\"I do.\" Leah sat down next to me while Kirstin slid in next to Sadie. \"It's Macie.\"\n\n\"Macie?\"\n\n\"Yeah. She's been spreading it around that you want to bring lesbians into the sorority.\"\n\n\"What?\" Sadie sounded incredulous, but I stayed quiet. \"Those meetings are supposed to be private!\"\n\nKristin harrumphed. \"Macie's a journalist. She doesn't believe in privacy. Unless it's her own.\"\n\n\"Funny how that works.\" Sadie crossed her arms. \"Damn that girl.\"\n\nLeah nodded. \"I guess she wasn't kidding about being against it.\"\n\n\"No, but this is going too far.\"\n\nSadie and I had made plans to head out to a party tonight with a bunch of the other girls, but I really wasn't in the mood. It was at Noah's frat, so Sadie wasn't going to be spending time with me, anyway.\n\nBy seven thirty the house was almost empty, as my sisters had nearly all headed out to their Saturday night activities. I tried to get some work done, but that only lasted about fifteen minutes before I realized it was hopeless. I flopped down on my bed and stared at the ceiling. I wish Taylor were here. Or maybe that I was there. I pulled out my phone and hit Taylor's icon.\n\n\"Hey, baby. How are you?\"\n\n\"Hi. I didn't think you'd answer. Where are you?\"\n\n\"I'm at the warehouse, just sketching up some ideas right now. What's going on?\"\n\n\"Everybody here hates me.\"\n\n\"What?\"\n\nI gave her a rundown of what was going on, from the meeting on Thursday to what was going on now growing steadily.\n\n\"Do you want me to come home? Or come get you?\"\n\nI smiled, a tear forming in my eye at the love in her voice. She would, too. She'd leave whatever she was doing and come to me if I needed her. God, I wanted to say yes. \"No, Sweetheart, thanks, but you need to work. I'll be fine. I'll see you Tuesday?\"\n\n\"Yeah, of course. You sure you're okay?\"\n\nI fought to control my voice. \"Yeah. Work hard. I love you.\"\n\n\"I love you, too.\"\n\nI hung up quickly. I could tell she didn't quite believe me, likely for good reason, and if she pushed anymore I might let her come rescue me. I looked around my empty room. If Sadie made it back before breakfast I'd be stunned, and without her here it just felt empty, and I was out of place. Suddenly I knew where I wanted to be. I grabbed a bag and threw a change of clothes together.\n\nI headed out into the hall and down the stairs. Several people were watching a movie in the common area. One of them looked over her shoulder. Seeing me she nudged her friend, and they both laughed.\n\nI squared my shoulders. \"So, what are you guys watching?\" I tried to keep my tone nonchalant.\n\n\"Oh you wouldn't like it. It's not 'Carol' or 'The L-Word.'\" Her friend erupted in giggles, and I felt my ears burn.\n\n\"What exactly is that supposed to mean?\" I walked around the couch and grabbed the remote, hitting mute. I stood in front of the TV with my hands on my hips. \"What the hell is going on?\"\n\nNone of the girls would meet my eye.\n\n\"I thought we were past this. That we were better than this. Shame on you.\"\n\nI stomped off and out the door, and the laughter behind me spoke volumes about the fact I hadn't gotten anywhere. My vision was a little blurry as I started my car, and my mind reeled with the things my father had said about prejudice. Damn it, if I wasn't able to deal with a little teasing from a few schoolmates, then he was right. I should just go back into hiding.\n\nI pulled into my normal spot at Jen and Vicky's house. I could see the light on in their living room, but I didn't want to disturb their evening, so I just headed up the outside stairs and let myself in with my key.\n\nIt was dark, but I didn't turn on the lights. There was plenty of illumination from the street. I walked over to the couch and sat down, pulling the blanket around me as I did. I took a deep breath in through my nose, letting the smells of the apartment fill me. Not that it smelled, it was just the place was as comforting as the blanket. I pulled up Netflix on Taylor's TV, putting something on about ancient buildings and construction techniques. I smiled, because I knew Taylor would give me a hard time for messing up her suggestions. I really should make my own profile on her account. But what would be the fun in that?\n\nI pulled the blanket close, and imagined what Taylor would say if she were here. It smelled like her, and I could feel her arms around me, holding me, loving me. I was safe here, and I let myself relax.\n\nI don't remember anything else until fingers were running through my hair, and a lovely alto voice was whispering to me.\n\n\"Hey, baby.\"\n\nI looked up, seeing two blue eyes gazing back at me. My Lady's eyes, and her gentle smile. \"Hi. I fell asleep.\"\n\n\"Why didn't you tell me you were coming over? I'd've come home.\"\n\n\"I know. I liked just being here.\"\n\nShe kept stroking my hair, and I just lost myself in those perfect eyes.\n\n\"I'm glad, baby. But it's late, let's go to bed.\"\n\nI nodded and reached up. Her arms went around my back and under my knees as I wrapped my own around her neck, laying my head on her shoulder. She lifted me into the air and I floated back toward the bed.\n\n\"You know, baby, this is the second time in a week I've carried you to bed.\"\n\n\"I can walk. Do you want to put me down?\"\n\n\"No, baby, no I don't\"\n\n***\n\nI woke up in Taylor's arms after sleeping well and deep. Her fingers were running gently through my hair. I was naked, which was good. It wouldn't feel right lying next to Taylor if I weren't.\n\nShe wasn't wearing anything either, which made me smile contentedly, just loving the feel of her skin against mine. I snuggled in closer, kissing her shoulder. She chuckled and returned the kiss on my forehead. Have I ever mentioned how wonderful it feels to be kissed on the forehead? I don't know why, but it makes me feel all warm inside. As she did I sighed happily.\n\n\"Was it okay I came over?\"\n\nTaylor chuckled. \"Of course. It's why I gave you the key. And I loved coming home and finding you here.\"\n\nI took a deep breath. The attitude of my sisters at the house came rushing back, and I felt a tear form in my eye.\n\n\"Aly, what was wrong? Why'd you come?\"\n\nThe tear forming in my eye slipped free and a sob shook my chest.\n\n\"Hey, hey, shh,\" Taylor pulled me close, rocking me in her arms for a few moments until I quieted down. \"Aly, please tell me.\"\n\nI looked up into her beautiful blue eyes, shining with concern and love, and started the story. I told her about what I'd put into motion and Macie's reaction, and what she'd done following. I told her about the sideways looks and the snide comments, including the exchange in the common room before I'd left.\n\n\"I hate that it's like this. Between my dad and everyone at the sorority. I told you about Sadie, right? Her and Noah? She's so in love, they both are. She has him over all the time, just sitting with him at dinner or curled up together on one of the sofas. Every girl in the house tells her how lucky she is, how much they envy her.\n\n\"And then there's us.\" I looked her in the eye. \"Falling in love with you has been the most wonderful thing that's ever happened to me, Taylor. But we can't do that. I have to hide, and walk on eggshells. I can't just walk through the common room holding your hand, or if someone says something that reminds me of a story about you I can't just tell it without hesitating over every word.\"\n\nTaylor didn't say anything, just looking at me tenderly before pulling me close. A tear slipped free as I pressed my cheek against her shoulder. Something I'd said felt wrong. But I was so tired, so emotionally wrung out. I didn't want to think about it any more, so I let my mind shut off, falling back asleep in My Lady's arms.\n\n***\n\nI woke up to the feeling of Taylor's lips on my temple while her hand ran up and down my bare side.\n\n\"Baby, hey, you up?\"\n\nI cooed and let my voice slip back into childhood. \"Nope. Never waking up. Live here now.\"\n\nTaylor laughed and kissed my shoulder. \"I'm going to get up and do one of my Tai-Chi videos. Have my shower ready when I finish.\"\n\nA shiver ran through my body at her command, and I rolled over and looked at her. \"Yes, My Lady.\" There was just the barest hint of a smile playing at the corner of her mouth, but her eyes were, God, what were they? Stern but kind, demanding but filled with love. I couldn't have said no if I'd wanted to. And I really didn't want to. She lowered her lips to mine, and I felt myself dissolve into her kiss.\n\nShe pulled her mouth away and rested her forehead against mine for a moment. \"I love you, baby.\" She pecked my lips one more time before sliding out of the bed. She stretched, my mouth going dry as her long, lean, swimmer's body extended in front of me. She pulled on a pair of black yoga pants and a sports bra before taking her position in front of the TV and launching her video.\n\nI let myself get swept away for a few moments in the way she moved. Tai Chi was the perfect expression of Taylor's soul, just like the ocean, always in motion, beautiful, powerful. To be respected, and maybe a little feared. Just a little. That made me grin.\n\nTaylor started to move into her cool down, and my eyes went wide as I realized I'd let the time get away from me. I dashed into the shower and started the water, washing myself in the cold while it slowly heated up. As I heard the TV turn off steam was starting to rise. What would My Lady have done if she'd had to get into a cold shower? I might just have to find out some day.\n\nI bowed my head a little as Taylor entered. \"My Lady's shower is prepared.\"\n\nTaylor stripped off her top before bending over and pulling off her bottoms. She walked towards me, her hard gaze locked on mine. I sucked in a breath, my whole body trembling as she came close. Her hand slid behind my neck and her mouth covered mine, making me whimper in joy. She pulled away, then kissing me gently on my forehead as she held my hand. She stepped into the shower, pulling me in after her.\n\nI put my hand on her body, reverently running my fingers over her soft skin. Taylor pulled me to her, rocking me gently in her embrace for a moment. She lifted my chin and we kissed deeply under the water's spray, and I rested in her strength.\n\nEventually she broke away, stroking my wet hair.\n\n\"You may begin, baby.\"\n\nI was so lost in her that it took me a moment to realize what she was saying, but I did and I began my work. I floated in that special place, where nothing existed but My Lady as I worshipped and served her. I finished kneeling in front of her, her left leg over my shoulder as I pleasured her and reveled in her flavor. Her hand rested on my head, holding me gently to her. My Lady's orgasm claimed her and she shook in bliss, filling my soul.\n\nGently, I was pulled to my feet and kissed. I could feel how happy I'd made Taylor, and it was joy. She turned me around and pulled me to her. Her hands began to caress my body as her mouth suckled my neck for a moment before she began whispering in my ear.\n\n\"Did you enjoy watching me this morning, baby?\"\n\nI couldn't help but smile. \"Yes, My Lady. I couldn't help it.\"\n\nHer arms wrapped around my middle and she kissed me behind my ear. God, how was I still standing up?\n\n\"I'm glad, baby. I loved that you were watching me, even if it meant my shower was almost cold.\" A smile stretched my face and I giggled as she nuzzled into my neck. Her hand rested flat on my stomach for a moment before sliding down between my legs, making me gasp.\n\nI threw my arm up and around her neck as she stroked my most intimate places. \"Oh, my!\"\n\n\"You like that?\"\n\nI drew a shaky breath as her fingers dipped into me. \"Oh, yes, My Lady.\"\n\n\"Good, 'cause I want you to know how happy you make me. How amazing it feels waking up with you in my arms. I love you baby, and I'm so proud of what you did, what you're doing, at your sorority, with your family.\"\n\nI clung to her, and she held me close, stroking and teasing, pulling me higher and higher, her words filled my soul, tears streaming down my face.\n\n\"Do you want to cum, baby?\"\n\nMy whole body was shaking. \"Yes, please, My Lady.\"\n\n\"I want that, too. I want you to feel so good. I love you. Come for me, baby.\"\n\nHer words opened something inside me, and the pleasure began to pulse as I dissolved against the woman I loved.\n\nTaylor held me close as I came, completely safe in her arms, where there was no judgmental sorority, or disapproving parents, or scary outside world. There was only her and I, and the world we made together.\n\nWhen the pleasure finally subsided I turned in her arms, kissing her desperately. I'm not sure how long we stayed like that, but it was awhile, long enough that Taylor eventually had to break the kiss.\n\n\"Aly?\"\n\n\"Hmm?\"\n\n\"The water's getting cold.\"\n\n\"Oh my goodness.\" I giggled. \"We ran the water out.\"\n\n\"We did.\"\n\n\"It was fun, though. Ooh, and it is cold. I'm getting out.\"\n\n\"Yeah.\" We both jumped out laughing. Taylor wrapped me in a towel before slipping on her own terry cloth robe. She took such good care of me. I hugged her close. \"I don't wanna leave.\"\n\n\"You don't have to, you know. You could just stay here. Hide away for a day.\"\n\n\"Really?\"\n\n\"Of course. It's why I gave you the key.\"\n\nTaylor\n\nJen's yellow beach truck was parked beside my tower as I waded through the shallows. I kept one hand on my victim's arm, which was draped around my shoulders. He probably weighed twice as much as I did, and he was really unsteady on his feet.\n\n\"Come on sir, just a little further.\"\n\n\"Okay.\" He was breathing heavily, and leaning a little more on me with each step. We made it past the water line, and I helped him sit down. His face screwed up in pain and he extended his leg. I slid down and cupped his heel, pushing the ball of his foot back towards his body. His painful grimace faded into some heavy breathing as the cramp receded.\n\n\"Better?\"\n\nHe nodded. \"Yeah, thanks.\"",
        "\"Remember when your mom told you not to swim for an hour after you eat?\"\n\nHe smiled weekly. \"I thought that was an old wives' tale.\"\n\n\"Now you know better.\"\n\nJen appeared at my side. \"You okay sir?\"\n\n\"Yeah, just cramps. Thanks.\"\n\n\"You need medical services?\"\n\n\"No, I don't think so.\"\n\nHe took a deep breath and flopped back onto the sand. I followed Jen back to the truck. I was going to have to head in and do an incident report. No injury, so nothing like the time I rescued Kelsey, but still.\n\nWe had it written up in half an hour, and Jen sent me off for my lunch break.\n\nThere was a vendor selling Trinidadian Doubles on the boardwalk, and I picked up a couple and went to sit down. I imagined Aly, covered up in our blanket watching TV on my couch. I'd planned on heading out to the warehouse, but I could take a night off. What really struck me was how disappointed I was going to be if I got home and Aly wasn't there. She'd still been there when I'd left, and not fully dressed. She'd still been a little non-committal about staying, but I could see the attraction the idea had for her.\n\nThe thing with her sorority had shaken her. Adversity wasn't something she'd ever had to deal with. I think the concept that anyone could hate her was so foreign to her worldview that it was almost impossible for her to comprehend. But she was trying, and not just to endure, but to strike a blow for people like her. Like us. I hadn't been kidding, I really was proud of her.\n\nBut what I really wanted to understand was how I could increase her pleasure when we were together. I'd observed her closely this morning, how even during our brief interlude in the shower, something we'd done multiple times, a change had come over her. It had been there each time, and it was getting stronger.\n\nResearch and study wasn't generally my first thought when presented with something I didn't understand, but this time, it was worth it.\n\nThe most interesting thing was the concept of subspace. When I'd first looked into it, several articles said that it was a physiological reaction to pain, and that it was for people who enjoyed whipping and spanking and things like that. Aly and I had specifically rejected those things as something neither of us wanted.\n\nBut then I'd seen the idea of psychological subspace, something that some natural submissives often sought out and could enter without pain triggers while they served their dominant, a sort of altered consciousness which involved a sense of floating euphoria and decreased sensitivity to pain. As I read both clinical and personal descriptions there was no question in my mind that this is what was happening to Aly when we made love. She was seeking it, even if she didn't know it. For her it was pure instinct.\n\nAnd I wanted it for her. I knew, maybe an instinct of my own, how intensely pleasurable this would be for her, and how happy it could make her, if I could do it right.\n\nAfter all, above everything else, it was my job to take care of her. And all the articles also said that subspace could be damaging, both physically and mentally, if the dominant partner wasn't paying attention. So I read up on signs and signals, what was happening in a sub's body during these times, and especially on aftercare, how to bring someone safely back up.\n\nI'd spent at least an hour looking at things each of the last four nights, excluding last night, and to be honest I was having trouble holding everything in my head, particularly since I was more than a little nervous about getting it wrong.\n\nI'll admit I had a hard time keeping my mind on the water all afternoon. But when six o'clock finally rolled around my heart was beating fast as I grabbed my phone.\n\nA light green window was evident as soon as I held it up.\n\nAly -- Come straight home.  I hope you're hungry.\n\nShe finished with a heart and a kissy face emoji. I couldn't help but laugh. She was such a girl, and I loved her. I would have found almost anything cute with the knowledge that she was going to be waiting for me when I got back.\n\nSure enough, Aly's Mini Cooper was still in the driveway. I headed up the stairs with an admittedly uncharacteristic grin on my face, taking them two at a time. However my wide smile dropped into a look of shock when the smoke began rolling out the door after I opened it.\n\n\"What's going on?\"\n\n\"I'm sorry!\"\n\nI ran in and opened a window across the apartment before heading into the kitchenette where Aly was frantically trying to do something on the stove.\n\n\"Oh, Aly.\" She had some meat on a plate, slightly overcooked, maybe. \"Turn down the burner.\" She did, a little too much. I corrected it. \"You're trying to make gravy for something?\"\n\nAly nodded. \"I put the chicken in to brown, and I was cutting the potatoes, and I think I left them in too long. Even when I took them out they the pan was still smoking.\"\n\nAt that moment the pot she had on the back bubbled over, spilling a yellowish, starchy liquid out onto the stove, sending more steam into the air. Aly let out a little scream and tried to grab the lid, but it was too hot and she dropped it with a yelp.\n\n\"Aly!\" I grabbed a dish towel and lifted the lid safely, blowing the froth off the liquid and turning down the burner. She'd put way too much water in. \"Are these the potatoes?\"\n\nI probably said it in too clipped a tone, and Aly nodded, almost in tears. \"I'm sorry. I messed everything up.\"\n\n\"No you didn't. It's fine.\"\n\n\"I destroyed the chicken. I don't know what I was thinking.\" I pulled her to me and gave her a hug, her laying her head on my shoulder. \"I just wanted to make you something.\"\n\n\"I love that you tried. And we can still save it.\" I nodded toward the stove. \"C'mon.\" We set to it. I carefully scooped out some of the potato water, reducing the chance of further boil overs while I gave Aly instructions on how to prep the mushroom gravy. Eventually we had an edible version of chicken in mushroom gravy with mashed potatoes and green beans.\n\n\"What a mess.\"\n\n\"Baby, it's fine. It's sweet that you tried. And look, it turned out great.\"\n\n\"I think I just bit off more than I can chew.\"\n\n\"Maybe. It's like anything else. You think I was entering swimming meets two weeks after my first lesson?\"\n\nAly shook her head.\n\n\"I love that you tried.\" I heaved a big sigh. \"But you did make a mess in the kitchen.\" I didn't try too hard to bury my smile. Aly hung her head, looking up at me through her lashes, and I could see her grin as well. \"So you've got to clean it up, right?\"\n\n\"Yes, My Lady.\"\n\n\"So get to it.\" Aly stood up turned toward the kitchen when I stopped her. \"Baby? Do you need to be dressed to clean up the kitchen?\"\n\n\"No, My Lady.\"\n\n\"That's right. Go ahead and fold up your clothes and leave them on the chair before you start.\"\n\n\"Yes, My Lady.\" Aly immediately began to undo the buttons on her white jeans, and she slowly undressed. Her eyes were a little wide as she watched me enjoy her show. Once nude I told her to go on, and I took a moment to watch her impossibly cute backside standing at the sink before I went in to help.\n\nAly smiled up at me as I started to dry dishes, and I enjoyed the little touches and kisses I peppered her with every time I walked behind her. When she finally got to the stove I really got to just stand back and watch as she wiggled around wiping it down.\n\nWhen she was finished she stepped away, hands folded behind her back. \"Is everything clean enough, My Lady?\" I tried to look stern as I 'inspected' the kitchen. I stepped up to Aly, looking down at her as she bit her lip and twirled her foot. That was the last straw, and I scooped her into my arms, cutting off her squeal with a kiss.\n\nI carried her over to the couch, her arms around my neck, and I could feel her relax as I did. When I sat down I just held her in my lap for a moment. She cried a little bit, and I just let her do it, rocking and gently touching her.\n\nAfter a few minutes she quieted, kissing me gently on my neck.\n\n\"You're not still upset about dinner, are you?\"\n\nAly sniffled and shook her head. \"No. It's just everything. And how unfair it is. How if you were a guy we wouldn't be having any of these problems.\"\n\n\"You wish I were a guy?\"\n\n\"That's not what I meant. I went back to the house after you left this morning, and I couldn't get out of there fast enough. It doesn't feel like a safe place anymore. Even my parent's house feels different. This is the only place I feel like me.\"\n\nI stroked her head. \"I understand, baby. After Gillian left I didn't have any family, I left school because I couldn't stand to be there. I was totally adrift. Who I was had destroyed my whole life. And that's not fair.\"\n\n\"I'm not totally adrift. I'm lucky, 'cause I have you.\"\n\nI kissed her on the forehead, which caused her to make a little happy noise. \"I have you, too. I don't think you have to be afraid of your family. Your dad will come around. Especially once I prove to him that I'm not going to drag you into the poor house. When he sees that we're happy together. But no more worries tonight. Now it's just me and you. I love you.\"\n\n\"I love you, too.\" It came out just a whisper.\n\n\"I know. Do you trust me, baby, y'know, to take care of you?\"\n\n\"Yes, My Lady.\"\n\n\"Good. Close your eyes.\" She did, and I caressed her slowly. \"There's just you and me, no one else. You belong to me, you are my most precious. Tell me what you wish, baby.\"\n\n\"To give you pleasure, My Lady.\"\n\nI kissed her on the temple, and she purred against me. God, she's adorable. Focus, Taylor. I pulled away far enough to look her in the eye, letting my eyes be firm and commanding. Aly's were just filled with awe. I could never get over how she could look at me like that, how it filled me at once with both strength and tenderness. No breaking character tonight, though. I had her right where I wanted her, and she needed this, if I could pull it off.\n\n\"That's good. Now I'm going to take you back to our bed, where you are going to give yourself to me. No thinking about the outside, no worries. Just you and me. Understand?\"\n\nAly was literally shaking in my arms as she nodded. I scooped her up and carried her back to bed. I smiled inwardly. This was starting to become a habit, and I loved it.\n\nI set Aly gently down on the mattress. \"Get on your knees and close your eyes, hands behind your back.\"\n\nAly immediately took the requested position, while I reached into my bed stand and pulled out the blindfold and the padded cuffs.\n\n\"Close your eyes baby.\" She did, whimpering a bit as I caressed her cheek while pulling on the blindfold. \"Are you okay?\"\n\nAly nodded quickly.\n\n\"Good, turn around.\" Aly spun in place and I fastened her wrists together. I pulled her back to me, running a hand down her side and over her bottom. She gasped as I slipped two fingers between her legs. She was dripping wet, her body responding to my every touch. Her head fell back against me as her breathing began to quicken, and she let out a cry of pleasure as I slipped a finger inside.\n\n\"That's right, baby. I've got you. You are absolutely safe. You belong to me, and I love you.\" My fingers continued to work, and I kept the string of soft words in her ear. My other arm held her tight, massaging a breast.\n\n\"Are you ready to come, baby?\" Her only answer was a whimper, but I knew it meant yes. \"Good, come for me, my love.\" I wondered if she'd been waiting, wordlessly, for my permission, as she immediately cried out and began to spasm in my arms.\n\nShe leaned against me and I fully supported her as she rode my hand in her bliss. \"Oh, yes, baby.\" I kissed her shoulder. \"You're such a good girl. You make Your Lady so happy.\" A great sob of emotion shook free from her chest, and I turned her face and covered her lips with mine. Her kiss was deep and primal, full of desperate need. I guided her ardor to my neck, and I tried to keep my wits while I unbuttoned my shirt.\n\nI managed to get it off, climbing up onto the mattress and shimmying out of my jeans and underwear. I pulled my unseeing girl onto me, enjoying the warmth of her body as she shifted to continue her work on my neck, which made my eyes roll back into my head, and Aly was going after it with gusto.\n\nSlowly, as I stroked her hair, she began to work her way down. With her hands bound it was difficult for her, and she had to feel her way with her mouth and tongue, which was unbelievably sexy. She reached my breasts and pulled as much of the flesh there into her mouth as she was able. \"Oh, damn!\" That was good, like really good, and now it was my turn to be breathing heavily. Aly switched her attention to the other side as I held her to me. My skin was on fire as she continued, and my body blazed with need.\n\n\"My sex, baby. It's time.\"\n\nShe didn't say a word, letting my nipple fall free and using her tongue to snake a path down over my belly. I was soaked from the foreplay, and from pleasuring her, but nothing on Earth was a breathtakingly erotic as watching Aly settle between my legs, and mentally preparing for the heaven that was to come.\n\nAnd even with her hands bound and her eyes covered my baby did not disappoint. She buried her face into me, almost scaring me with her intensity. My clit was still going to be super sensitive for a few minutes. But I shouldn't have worried, my baby knew me, or maybe she just sensed it, but either way she eased up. Oh, God this was exquisite, and at the perfect moment she moved north, wrapping her beautiful tongue around my clit and I exploded into orbit.\n\nI floated back to Earth, Aly giving me the most gentle of caresses. \"Keep going, baby. Such a good girl.\" Aly made the most adorable little noise, somewhere between a happy little whimper and a lustful moan. Three times I let her take me over the rainbow, and even after that she seemed a little disappointed as I pulled her up to me. We kissed for a long moment, and I could tell Aly was fully engrossed in her experience, as she was seemingly trying to melt into me, pressing herself as close as she could.\n\nAfter a few wonderful moments I decided it was time. I was going to take this beautiful young woman, and hopefully where we were going would be unlike anything she'd ever experienced.\n\n\"Roll onto your stomach, baby.\"\n\nAly complied with alacrity, and I quickly unlocked the cuffs. \"On your hands and knees, baby.\" I kept my voice firm, but I always wanted to use my pet name for her at the end of a command. I hoped it would remind her that I was doing this because I loved her.\n\nShe obeyed instantly, and I took a moment to take in how profoundly gorgeous Aly's backside was, her swollen labia pouting out from between her creamy, smooth thighs, flowing into perfectly round hips. I shook my head and pulled her arms up. \"Hold on here, baby.\"\n\nAly grabbed the lower of the two cross bars at the top of the head board, and I snaked the cuffs between them. This would keep Aly's hands on a significantly higher plane than her head. I let her crawl closer, so that she could let her elbows bend at a more natural angle. \"Stay like that, baby.\"\n\nI slid off the bed, and reached into my nightstand, pulling out the Captain and strapping it in place. On the bed Aly started to fidget. I went to her, placing a hand on her hip.\n\nI wasn't going to use our double ender, because I wanted to stay in complete control. This was about Aly, after all, and I needed to concentrate on her. I took a long moment to admire my lover, running my finger through her cleft. I'd never felt her so wet. Two fingers slipped easily inside, and her body shuddered around them as I stroked in and out. I settled in behind her, using her copious nectar to coat the phallus. I could feel her trembling as I positioned the head.\n\nHer throaty moan was almost a growl as I pushed into her. Two more strokes and I was fully seated, again amazed at the depths Aly could take. I pulled back and thrust again, and Aly pushed back against it. In and out I went, long, slow and deep. Aly clung desperately to the metal headboard, pressing against me with every thrust.\n\nWe went for a long time, and I kept waiting for Aly to come. I snaked my hand around over her belly, letting my index finger slide through her short, soft curls and over her small nub. I could hear Aly's guttural, almost primal moans, and I couldn't believe she hadn't orgasmed. Then it hit me. I was so stupid.\n\n\"Come for me, baby. Come hard for Your Lady.\"\n\nThe effect was almost instantaneous, Aly began to vibrate deep in her core, all sound stopping for the space of a single thrust, and then the floodgates opened. She screamed into the wall, the timber of her voice rising and falling as she convulsed around my phallus. It went on forever, and when it finally stopped, she hesitated only a moment before she began to push herself against me again.\n\nThat had been one of the most amazing things I'd ever witnessed, and I was still a little in shock, but the rhythm Aly was setting got me back into the swing of things after only a few moments. I bent low over her, and softly gave her permission to come as much as she wished for the rest of the evening.\n\nThe pitch of her moan changed a little, and I thought it might have been in thanks. It wasn't three minutes later that Aly was shaking in bliss again.\n\nWhen she calmed I slipped out of her, and she collapsed down, hanging at an odd angle from her wrists. I quickly unlocked them, laying her down gently onto her back, head soft in a pillow. I caressed her face, and she leaned into the contact. My fingers traced down over her body, and she cooed in happiness. I pulled her hands up, locking them in place, wrists crossed over her head.\n\nI was surprised to hear it, but when they locked into position there was a definite sigh of contented happiness from my lover. She was fully relaxed, and she moaned in joy as I kissed her. Slowly I worked my way down over her body. As I spent time suckling her breast, I accidentally gave one a little nip. Aly gasped and pushed her chest up into my mouth. I continued to nibble, amazed at how much it seemed to affect her. Eventually I let go, moving further down, and situating myself between Aly's legs.\n\nI put the palms of my hands on the inside of her thighs, and she spread easily before me, her perfect little pussy blossoming as she did. I breathed in her scent. It always struck me how wonderful she smelled and tasted, rich and sweet, so feminine and perfect. I pushed my tongue into her core and licked up and over her small nub.\n\nHer hips lifted off the bed as I did, and I smiled at the effect I know I was having on her. After a moment I reached up and massaged her breasts, pinching and rolling her nipples between my fingers. As hard as I was pressing, I knew it had to hurt, at least a little. But the harder I went the more Aly moaned and pressed against me. Out of nowhere she began to pulse in orgasm, my mouth flooded with a fresh flow of her essence.\n\nI took her there again, continuously rolling her nipples before she came against me again. I let them go, deciding this was something that I was going to have to ask her about. I rolled off the bed and stripped of the strap-on I was still wearing. Aly began to fuss and whimper, moving around on the bed, her face screwed up in misery. I grabbed Tenille, the smaller, missionary style phallus, and jumped back on the mattress, laying my hand on Aly's leg.\n\nAs soon as I touched her she relaxed again. That was the second time that had happened, and this time I caught on. I was never going to stop touching her during our lovemaking again.\n\nI strapped the new phallus in place, keeping sure my leg was still touching hers. I pushed Aly's legs up and apart, to which she gave no resistance. I kissed my way up her body, hearing little coos and sighs with each press of my lips. When I was in position I slipped a couple of fingers into and through Aly's sex, which had by no means run out of moisture. Soon I was lubed up and the phallus slid inside my lover. My face was only inches from hers as she gasped with pleasure. Her mouth was open, but the blindfold still covered her perfect eyes. Suddenly I needed to see them, so I pulled it off. Her eyes were closed, and she wrapped her legs around my waist as I began to move gently inside her.",
        "Aly's face was total peace and joy with sighing breaths at my every move.\n\n\"Aly, baby, look at me.\" I needed to see her so badly. Her eyes opened, beyond beautiful. There was a slightly glazed look in them. She was in some other place, and I had taken her there. Or maybe she'd done it herself, and I'd been her guide. Or maybe I hadn't done anything at all but be here. Regardless, one thing I was sure of, I was her protector. My baby had never been more vulnerable or innocent than she was at this moment. It was literally plain as the look on her face. She'd placed her mind, body, heart and soul completely in my care, with absolute trust.\n\nI ran my hand up and over her arms, capturing her mouth with mine. I moved my kiss to her cheek and whispered gently in her ear. \"I love you, baby.\"\n\nAly's body immediately seized underneath me, the throws of orgasm taking her strong and deep. A tear slipped free from my eye at the sheer beauty of her.\n\nI continued to work in her, reveling in the depth of her ecstasy. We went on forever, until I started to get shaky. I had no idea how tired I was. I brought her to her full one last time, and I slipped out of her, managing to get Tenille off and dropping it onto the floor. I went to her wrists, unlocking the cuffs and slowly pulling her arms down to her sides. As soon as I'd removed them completely I rolled her towards me, pulling covers around us and holding her to me.\n\nAnd then she began to cry, and I went through the longest fifteen minutes of my life.\n\n**********\n\nThanks for reading, only three to go! If you're wondering about CoViD in my story, it doesn't exist in my little worlds. They're fantasies, after all. In the real world it does. Be safe, wear masks, stay socially distant. Love you all!"
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian romance",
        "romance",
        "drama",
        "lesbian drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hero-worship-pt-05"
}