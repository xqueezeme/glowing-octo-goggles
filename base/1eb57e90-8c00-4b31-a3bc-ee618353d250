{
    "title": "David and Jess Ch. 05",
    "pages": [
        "This story is entirely fictitious. All names and likenesses are fabricated, and all characters depicted are over the age of 18.\n\nThis story is multiple pages / chapters, and involves elements of romance and erotica.\n\n----------------\n\nChapter Five:\n\nDavid and my sister stared at me in a mixture of skepticism and disbelief. Fair enough. It was the reaction I had been expecting. Being stuck in my room all day had given me plenty of time for introspection, and I had been thinking about the bonfire for weeks. The more progress I made, the harder it was to maintain the facade I had held for so long. The masculine clothes, pronouns, and mannerisms that I had perpetuated for countless years now felt constricting. I longed to be myself, to be free.\n\nThe bonfire was the perfect excuse. Even though the tradition was carried out in levity, it was a chance for me to exist and breathe out in the open. Thinking about being exposed to countless people scared me to death, but I could not pass it up. David waited in the foyer while we headed back to my sister's room. She dug around for a while, tossing clothes about as she rummaged through her sizeable collection.\n\nMy sister laid out a grey off the shoulder crop top , as well as a short flared white skirt. She also set aside a white strapless bra and panty set. The big surprise was when she pulled out a set of black kitten heels in my size. Apparently she had gone shopping over the past few weeks, slowly amassing a collection of clothes to pass down to me. I felt tears collect at the brim of my eyes as I thanked her profusely.\n\nI changed into the outfit she had selected, taking a moment to appraise myself in the mirror. It felt strange to say the least. The hem of the top fell just below my ribs, leaving my abs and stomach partially uncovered. I didn't hate it, but I felt so exposed. My slim and toned abdomen was on full display. I voiced my concerns to my sister, who assured me I would have a sweater to cover up. I was grateful, as the weather had become more brisk as of late.\n\nThe skirt was fairly short as well, situated just above my knees. I had shaved my legs in preparation, not that there was much to remove. The sheer semi-translucent stockings my sister picked out made my legs look sleek and slim. I slipped on my shoes and began walking uncertainly, testing my balance. I was a little wobbly, but managed to get the hang of it fairly quickly. My sister handed me a black pullover sweater before getting to work on my makeup.\n\nEver the precise artisan, she spent nearly an hour applying makeup. She applied light grey shades of eyeshadow, giving my eyes a smokey appearence. My eyeliner ended in small wings, and I had a light coat of mascara, giving my eyelashes a more full look. She took the time to contour my face, placing emphasis on my defined cheek bones and drawing it away from my chin and jawline. A bit of faint blush and subtle pink lipstick rounded out the job.\n\nOnce again I found myself looking at a nearly unrecognizable reflection in the mirror. I hugged my sister in gratitude and excitement. David lounged patiently in the living room, idly flipping through channels as he waited. I peaked nervously from the hallway, my sister ushering me around the corner. David's mouth hung agape as he took in my new image. He sat gawking for a moment before scrambling to his feet. \n\n\"Don't fuck up her makeup right away,\" my sister warned him. \"I gave her some emergency supplies, but I won't be around to fix it.\"\n\nShe had provided me a small white over the shoulder purse to complete the outfit. I peaked inside to find lipstick, a few other cosmetics, as well as condoms and lube. My face burned as I quickly closed the bag. She gave me a knowing wink. David came over to me, placing his hands at my waist as he marveled down at me. \"You're really fucking good at this,\" he observed, eyes glued to me.\n\n\"Shut up baby, I know it,\" she gloated in return. \"Sun's going down kiddos, better hop to.\"\n\nWith preparations complete, we headed back to his car. It was a brief drive to school, so I did not have much time to settle my nerves. David pulled into the school lot, parked, and hopped out. He came around to my side, opening my door for me and helped me out. Even such a small gesture made me smile, he truly was a gentleman.\n\nAs we headed around the side of the school I noticed countless other seniors in drag. Some took the extra time, opting for a tasteful approach, while other guys threw on a dress and called it a night. I had a new found appreciation for the girls and boys who took the time to cultivate a proper image. Though less common, a few girls had crossdressed as well, wearing blazers and suits with their hair neatly cropped or pinned up.\n\nWe waiting in a short line to get into the courtyard as chaperones performed haphazard searches for paraphernalia. David received a pat-down, but I was let through without issue. I was grateful that they did not search my bag, given the extra supplies my sister slipped in. The bonfire had just begun, the cultivating embers illuminating the surroundings in a soft orange glow.\n\nWe worked our way through the crowd, receiving a few curious glances as we made our way to the back of the court. I wondered if it was because people recognized me. Nick, Viv, and Daniel sat in a circle of cheap foldout chairs, along with a few others. I was not the only one crossdressing. Will wore a cocktail dress that fit comically on his broad frame, and another boy had a skirt and blouse on. I noticed a few other jock types, causing a sense of dread to rise within me.\n\nNick appraised me lecherous eyes as we approached, causing David to grimace. Viv noted my existence, but nothing more. Daniel was the most surprised of all, gawking at me as we approached. As I suspected, he was the only one to recognize me at first glance.\n\nNick sprang to his feet, heading over to greet us. \"David! Holy shit man, where'd you sneak this leggy brunette in from?\" He paused, ogling me for a moment. \"Is she the girl from the party,\" he asked brazenly.\n\n\"Cut it,\" David growled with a surprising.\n\n\"If she's not does that mean she's up for grabs?\"\n\nDaniel nearly choked on his drink. His violent coughs descended into laughter. \"You're fucking clueless man.\"\n\nI brushed my hair over one ear, revealing a set of piercings that I wore on a regular basis. Nick's eyes went wide as he slowly came to a realization. \"No way,\" he mumbled in a bewildered manner. \"No. Fucking. Way.\" I flashed a nervous smile.\n\n\"Hey Jessie,\" Daniel greeted me, still surpressing his laughter. The cat was out of the bag. The other's heads swiveled, performing a double take.\n\nNick stumbled back to his seat, dumbfounded. He grumbled, seeming dissatisfied with his own initial attraction to me. \"I need another drink.\" Viv handed him a flask, regarding me with an incredulous look. David and I took a seat next to the others, a silence hanging over the small group as we settled. I shifted anxiously in my seat, my skin crawling from all the eyes on me.\n\nThankfully, Vivienne's voice broke the tension in the air. \"Holy shit dude. You're hot.\" I managed a nervous giggle and the others erupted into laughter as well. So far things were going better than expected.\n\n\"T-thanks,\" I stammered. \"My sister lent me a hand.\"\n\n\"Holy shit,\" she echoed once more. \"Are you sure you're a guy?\"\n\nI shrugged, unsure of how to respond. Viv's brow arched curiously, though she didn't follow up. Various conversations resumed amongst the crowd, though I still received numerous stares. Of course the hedonist couple had provided multiple libations, passing flasks, joints, and lighters around the circle. \n\nAs the night continued a few more people joined the group, each responding or staring in utter shock as they realized my identity. Pretty soon the circle was packed. A couple of girls came over, I recognized them as the ones who sat next to David at Nick's party. They asked if we could make some room, to which Daniel replied. \"Sure, why not?\"\n\nMy brow furrowed and I grimaced in his direction. Daniel had a sly look on his face. What was he up to? Viv relinquished her seat at my side, opting to sit in Nick's lap. \"Jess, why don't you sit in David's lap?\" Now that was unexpected. The thought of being in such a position made me hesitant, as such a display felt uncomfortably intimate in front of so many people. \n\nI gave Daniel a stern frown, but succumbed to peer pressure as a few others chimed in as well, agreeing with his suggestion. \"If David doesn't mind,\" I replied cautiously. He nodded his consent. I moved over and situated myself in his lap, smoothing my skirt nervously. His large body blocked the wind and radiated heat, providing a nice respite from the cruel autumn winds. \n\nPressed so close together, I could feel his racing heart and the warmth of his breath on my ear as he leaned in to whisper, \"sorry.\"\n\nThough I had not planned on drinking initially, I felt more inclined in my current position. I eagerly accepted a flask from Daniel who sat to our left, taking a long swig. The liquid burned as it went down, causing a sputtering cough as I imbibed what felt like paint thinner. I took another draw, glaring at him for the lack of warning. The heat from the alcohol lingered pleasantly in my throat and core.\n\nDrinking and smoking helped take the edge off, and made me feel less self-conscious. I had taken a few more drinks as the night progressed, though David cut me off after a while, growling a warning at Daniel. He probably didn't mean any harm, but had a knack for being a troublemaker. I leaned back, enjoying the comforts of David's lap as him and Daniel chatted amiably. \n\nSomeone got it in their heads that we should play truth or dare, to which David replied, \"what are we, middle schoolers?\" His opinion was met with booing across the circle.\n\n\"Buzzkill,\" Nick jeered.\n\n\"If people start fucking I'm outta here,\" David warned.\n\n\"No promises. Spin to start,\" Nick announced, downing the last of a bottle of New Glarus before placing it at the center. He flicked the tip, sending it on its journey.\n\nA few rounds went past. Most people chose truth, finding themselves at the end of a salacious inquisition. The few that chose dare were coaxed into the usual nonsense such as excessive drinking, and acts of general stupidity. David felt tense the whole time, clearly dreading that it might turn to us. Eventually it did so on Viv's spin, the corners of her mouth twitching upwards impishly. \n\n\"Jess, your turn,\" she announced.\n\nFuck. I felt my heart skip a beat. There was no good answer. I had plenty of secrets to keep hidden, and I'm sure she had numerous dares in mind for me to perform. Or course I could withdraw and turn tail if the dare was bad enough, but I would be subject to the other's discontent. I withered beneath the stares of the group. \"D-dare,\" I mumbled.\n\n\"Shotgun a hit with me.\"\n\nThat caught me off guard. I was definitely expecting it to be something with David. I wondered at her motives, but hesitantly accepted. At least it wasn't with some other guy or a stranger. \"Fine,\" I responded, my voice quivering slightly.\n\n\"You stay right there,\" she ordered, crawling over to where I sat in David's lap. Viv took a long pull on a joint, filling her lungs with the aromatic smoke. She leaned forward, caressing my neck. A shiver went up my arm, leaving a trail of goosebumps. She flashed a pointed look up at David before pressing her lips to mine. She exhaled, passing the smoke to me in a sensual embrace. As she did I felt something twitch against my backside.\n\nDavid shifted uncomfortably, though his body betrayed his excitement. I was feeling loose enough to give him a bit of a show, so I teased my tongue forward, enticing her mouth open. Vivienne eyes opened in shock, but she quickly followed my lead. She leaned in further, one hand running through my hair and the other brushing my thigh. She sucked on my tongue, pulling it deeper into her mouth. The rest of the group stared in slack-jawed shock as we swapped spit, our tongues entwined in an obscene display.\n\nViv pulled back, but not before giving my tongue a gentle bite. I moaned in an exaggeratedly lewd fashion. A few of the other guys in the group stared openly, as if suddenly questioning their sexualities. Viv flashed me an approving look before returning to her seat. There was a pause as everyone remained dumbfounded. \"That was... Holy shit...\" Nick marveled. He seemed a little conflicted as he enjoyed watching, but held some reservations over his feelings towards me.\n\nDavid's hand crept to my thigh just out of view of the others, giving it a tight squeeze. I could feel his now full erect manhood pressing against my ass. \"Jesus Christ,\" he mumbled, seeming more pleased than upset. I was glad he enjoyed the show. I realized that the fabric of my skirt had begun to tent ever so slightly, and I hastily covered it with a squeak. Fortunately it seemed as though no one besides David noticed.\n\nThe game continued as the others came to their senses, but David and I were in our one world. As if returning the favor, he began to tease me. His fingers traced along my thighs, causing me to quiver in anticipation. He repositioned me, placing his caged member along the middle of my ass, and began gyrating subtly against me. Daniel definitely noticed, averting his gaze sheepishly when I caught him staring.\n\nEmboldened by my choice, more dares passed around the circle. Of course, despite David's insistence, the acts became increasingly more obscene. The bottle landed on one of the girls at my side. She chose dare, leading to the biggest surprise at all. \"Kaitlyn, I dare you to suck David's cock,\" the jock who spun announced. I felt my heart drop. She agreed, leaping from her seat a little too eagerly.\n\n\"Not happening,\" David asserted, calming my fears.\n\n\"C'mon. Don't be such a pussy.\"\n\n\"I told you it's not happening,\" he shot back, his gaze fiercely locked with the other boy's.\n\n\"It's fine, he'll just take a penalty drink,\" Daniel stepped in, attempting to diffuse the situation.\n\n\"Fuck that. It's not even his turn, all he's gotta do is man up and get blown.\"\n\n\"Did I fucking stutter before or are you just too dense?\" David hissed, surprising even me with the ferocity of his tone. His hand clenched into a fist. David was a massive guy, though generally mild mannered. When he got agitated he manifested quite the imposing visage.\n\nKaitlyn sat back down, not wanting to exacerbate the situation. \"I-It's fine, let it go.\"\n\n\"Fine. Have the tranny do it then.\"\n\nA hush fell over the circle. I turned away in chagrin, wishing I could be anywhere else. I felt like I was on the verge of tears, I hated and feared that word. That's when David's arm possessively slipped around my waist. \"Shut your mouth before I do it for you,\" David snarled viciously. \"I'll break your jaw if you talk about her like that again.\" I appreciated him sticking up for me, but he immediately regretted his choice in pronouns. There was no going back.\n\n\"Her?\" Nick asked quizzically.\n\nDavid bit his lip, clutching me tight against him. \"Take a walk Aaron,\" Daniel commanded firmly. The boy grumbled, kicking his chair back as he walked off. He was gone, but I knew it was far from over. I doubted it would be long before news spread through the school. The other's in the group averted their eyes, distancing themselves from the tense situation.\n\n\"Is there something you wanna tell us man?\" Nick asked.\n\nI opened my mouth, but my words failed me. I could feel the dread rising inside me, making me nauseous. \"Jess and I are dating,\" David announced in my stead. I winced. I was grateful for his intervention, and it was nice to hear the words from his lips, but I worried for his sake. It was too late for me, but he didn't have to be dragged down too.\n\n\"Seriously?\" Nick laughed nervously. \"Jessie, he's kidding right? You look good in drag but you're still a dude.\"\n\nDiscomfort was apparent on everyone's faces. A few of the others quickly dismissed themselves from the disaster unfolding, walking off in hushed whispers. \"H-he's not... I'm not...\" I began, stammering nervously.\n\n\"Forget it,\" David interjected. \"We can talk about this later, just leave her alone.\"\n\nNick scoffed. I didn't expect him to understand, but I didn't think he would take it so hard. For such a renowned degenerate, he appeared very critical of our relationship and my new found identity. The look of disgust in his eye cut me to the core. Viv grabbed his arm. \"Nick, let's go.\" She mouthed 'sorry' as they headed off.\n\nFeeling defeated, I meandered away from the last remnants of the group. David followed close behind, trailing in my wake. I made it around the corner, finally away from prying eyes. I leaned against the wall dejectedly, tears flowing openly down my cheeks. David stood in front of me, his hand sitting at my waist. He rested his head against the wall over my shoulder. \"I'm so sorry,\" he whispered. \"I didn't mean to-\"\n\n\"You didn't do anything wrong,\" I assured him, though my voice wavered.\n\n\"Nick's an ass but he'll come around once he sobers up.\"\n\n\"You didn't have to do that to yourself. People are gonna talk.\"\n\n\"I don't give a shit.\"\n\n\"You really wanna be lumped in with me?\"\n\n\"Absolutely. I mean did you see yourself back there with Viv? Men have killed for less,\" David joked, trying to ease the tension. He seemed suddenly taken aback with himself. \"Err, sorry. Probably not the time.\"\n\nI reached up, grabbing him by the collar of his shirt and pulling his face back down towards mine. Our lips locked, our tongues wrestling against one another. His hand slipped up my waist, raising the hem of my sweater. He traced his fingers across my smooth but gently defined abs, causing me to whimper in response. I needed a distraction. Anything to stop me from thinking about my deteriorating highschool social life. \"Please take me,\" I begged. \n\nHe looked at me skeptically. \"I don't think that's a good idea.\"\n\n\"I'm full of bad ideas.\" I turned around, placing my hands against the wall. I arched my back, pressing my ass against him. His body was certainly willing, judging by the sizeable bulge in his pants. \"I'd rather be full of something else.\"\n\nDavid managed a nervous laugh, his hands tentatively exploring beneath my skirt. He took a firm hold of my ass, giving it a slap with one hand. I squealed in response, biting my lip excitedly. \"You are incorrigible,\" he whispered in my ear.\n\n\"Hurry up,\" I urged him along. \"There's condom and lube in my purse.\"\n\nHe dug through my purse briefly before tossing it to the side. I let out a slight gasp as he pulled aside my panties and began to work the lubricating gel inside of me with two fingers. I heard the zipper of his pants, and soon felt the warmth of his tip press against my hole. I shuddered expectantly. \"I'll take it slow,\" he assured me.\n\n\"Don't you fucking dare,\" I shot back impatiently.\n\n\"Fine, but you had better keep it quiet,\" he warned. Without hesitation he worked the tip into me. I let out a high pitched mewl, to which he responded with a satisfied chuckle. I slammed my hips back, taking him to the hilt in one swift motion. I bit into my lip, surpressing a scream as he prodded at my sweet spot. David groaned pleasurably.\n\nAs David had predicted, I could not contain my voice. I panted and moaned heavily as he plunged deep inside, using my tight hole for his pleasure. My small cock strained against my satin panties, saturating them with dripping fluid as he thrust into me over and over. David reached his hand around, gripping me by the throat, and I felt my legs grow weak. He squeezed lightly, restraining blood flow just enough to send my head spinning without restricting my breathing.\n\n\"What did I say about that voice of yours?\" He teased as he ravaged me, his sadistic tone driving me wild. His other arm held me at the waist, supporting me as I quivered helplessly in his dominant constraint. Cum flooded my panties, dripping down my legs as I reached orgasm without even touching myself. Even so, he showed no signs of stopping. Waves of pleasure continued to flood through my body, overwhelming all my senses. He released his clutch on my throat, moving his other hand to my hips as he picked up speed.",
        "I gasped as he relentlessly hammered me from behind. His fingers tightened, digging into my hips. \"P-please,\" I pleaded between thrusts, \"finish inside me.\"\n\n\"Anything for you, my love,\" he whispered breathlessly in response. A few moments later I felt my insides swell as he released inside of me, emptying cascading waves of cum deep into my ass. I would have collapsed without the help of his arm supporting me, as I felt the last shred of strength leave my body.\n\nI barely recalled David carrying me to the car. Fortunately his apartment was not far from my home, as I desperately needed a shower after our exchange. My makeup was utterly ruined from tears and sweat, and my clothes were thoroughly stained with a mixture of both our fluids. After making myself somewhat presentable I called my sister for a favor.\n\n\"It's late, and if you're not home soon dad is gonna lose his shit,\" she answered sharply.\n\nWithout delving too much into the details I asked her to bring some spare clothes and provide me with a ride. She came through, as she always did, though insisted I owed her a favor. Fair enough. I owed her a few favors at this point. I kissed David goodbye, and we headed out. My dad was upset that I had not responded to his texts, but I got home just in time for curfew so he didn't exact any further punishment.\n\nI collapsed into bed, sparing a moment to send a final goodnight text to David. 'I love you.'\n\n'I love you too. Rest well.'\n\nI knew I would soon have to deal with the consequences of that evening, but in my exhausted state I could not bring myself to care. I drifted off, embraced by a peaceful sleep which would prove to preface a particularly tumultuous morning."
    ],
    "authorname": "TGDIB",
    "tags": [
        "crossdresser",
        "crossdressing",
        "transgender",
        "romance",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/david-and-jess-ch-05"
}