{
    "title": "Neighbor Girl",
    "pages": [
        "I had never paid much attention to Jessica, my next-door neighbor, during high school. First, she was three years younger than me, so growing up we never really hung out, and then in school we never had class together. Second, we just ran in very different circles anyway. Jessica had always been an athlete, swimming and track, while I had been focused on school. And at just over six foot and naturally trim, it wasn't unheard of for me to have a girlfriend.\n\nIn my own defense, I wasn't completely devoid of athletic skill, though I would never have been a star. But I had always been above average in the classroom, so that's where I devoted my time and energy. \n\nIt all paid off three years ago, when I started school at Stanford. I was pre-law with everything going for me. Including a summer internship with my uncle's law firm, which is what brought me back home to begin with.\n\nThe first few weeks went by fine, nothing exciting happening. I still had some high school friends in town, so whenever I had free time I hung out with them. I don't think I even saw Jessica in those first few weeks, but then again, she was still in school. My mom at one point did say something about her growing up, but I didn't really pay attention.\n\nThe first time I really saw Jessica was on her graduation day. She was taking pictures with her family, dressed in her cap and gown. I certainly couldn't see much, but I saw that her face had become even prettier. When we were in high school, she had been pretty enough, but like I said, I had been focused on school.\n\nIt looked like she had lost her baby fat, as her face had slimmed somewhat. She still had that All-American, \"girl next door\" look to her, but what guy didn't like that? She was blonder than I remembered, but I hadn't seen her in two years or so. I really didn't think much of it all, except that she had grown into a pretty young woman.\n\nA week later, my parents left for the weekend. They were both semi-retired, with the emphasis on the retired. They were gone constantly, with was fine with me. Not that I had anything exciting to do, but I had become used to living on my own. They left Friday morning, before I even got up.\n\nI finished up work and was on my way home when I got a message from one of my friends that \"everyone\" was going out tonight. What I really wanted was just to sit by the pool and drink, whether or not anyone else was with me. The bars had never really been my thing, but that didn't always stop me from going anyway.\n\nReluctantly I went out, and did manage to have a decent time. A few people I hadn't seen in a while were out too, so my friend hadn't been completely full of shit. And as always, there were beautiful girls out, making me wish I had the guts to just take one of them home. It had been months since the last time I'd been with anyone.\n\nBy the time I got home, I was looking forward to having another beer and a relaxing dip in the pool. My head was just barely buzzing, making me feel relaxed and happy. I pulled into the garage and went straight to my room to change into my trunks.\n\nI grabbed a towel and my precious beer and walked onto our back patio. I didn't' bother to turn on any lights as I walked out. I was drinking my beer as I walked, and what I saw, once I processed it, almost made me spit it out. There was someone already in my pool, and it was female. It took me another full second to realize that this mystery swimmer was also naked!\n\nWhoever it was had an easy stroke and was clearly a strong swimmer. She was blond, her hair probably just below her shoulders. She still had not noticed me standing there, watching her. The water glided over her shapely body and I felt a stirring in my shorts. I took another sip of beer and thanked God my parents had put in the pool.\n\nThis swimmer then finished her lap and stopped, wiping the water from her eyes. Still not noticing me, she pushed away from the edge and back into the pool, but this time swimming on her back. I was just about to search for her bathing suit, but immediately forgot about it when her spectacular body came into view.\n\nThere wasn't much light, and her face was hidden in shadows, but there was enough to make out the clear mounds of flesh on her chest. They were ample, but not big. Perfectly proportioned to her long slender body, the water flowed over and around them erotically. I looked farther down her body, to where her legs were leisurely kicking, but couldn't make out any details.\n\nJust then, she pulled even with me and saw me. She yelped out in shock and instantly moved to cover herself. It was then that I got a good look at her face and saw that it was my neighbor Jessica!\n\n\"Jesus Mark, you scared the shit out of me,\" she said, out of breath.\n\n\"Sorry, I didn't mean to scare you in my pool,\" I said, stressing where she was playfully. \"Do you often break into people's pools in the middle of the night?\" It was well past midnight by now, which had made the surprise of finding someone in my pool all the more complete.\n\n\"I thought you went with your parents,\" was all she said. She was still not making any move to get out of the pool.\n\n\"You know, it's silly to sit here talking in the dark like this\u2026\" I trailed off. I was pretty sure she didn't know I had seen her nakedness.\n\n\"No!\" she almost yelled, stifling herself in case she woke up her own parents.\n\n\"No? Why not?\" \n\n\"Because I'm\u2026I'm skinny dipping,\" she said, the first hint of embarrassment creeping into her voice.\n\n\"Whoa, whoa whoa,\" I started, faking outrage and shock. \"I come home to find my hot neighbor naked in my pool, and she expects me to leave the lights off?!\"\n\n\"Oh shut up Mark, and just look the other way while I put my suit back on.\" She started swimming to the edge and I reluctantly did as I was told. When I heard her get out of the pool, I tried to steal a peek, but couldn't really see much. Still too dark.\n\n\"I'm sorry, I should really be going home anyway,\" she said, and I turned, hoping she wasn't clothed yet. Damn, she was.\n\n\"Jessica, I really don't care. You can stay longer if you want.\" I was desperately hoping she would, the alcohol only heightening my arousal.\n\n\"I bet you'd like that,\" she said, moving her head down to indicate my crotch. I looked down to see a very noticeable bulge, one that I hadn't even been aware of. \"See you later tiger,\" she said over her shoulder, walking towards her own house. I watched the silhouette of her hips as she walked and felt myself get harder. Damn, she had turned into a drop-dead gorgeous woman!\n\nI didn't even bother with the pool after that, going straight inside and jerking off. Her tone of voice as she walked away left me intrigued. It had been quite playful, even flirty. Whatever it was, it left me sure that it wouldn't be too awkward the next time we saw each other.\n\nAs it turns out, the next time we saw each other was the very next day. Except we didn't talk, so I'm not sure how awkward it was for her. It was sure as hell awkward for me though.\n\nI was cutting the grass right after lunch, waiting to see if Jessica was going to come over or anything. By the time I got to the backyard, I was sweating through my T-shirt and ready for a cold drink. I was a little disappointed that Jessica had not come over to chat or anything, as our front yards are open to each other.\n\nOur back yards are much more secluded, though by no means impenetrable. A row of short hedges and some trees give some privacy. In reality, it's more illusion than anything else. But right as I started the back, I saw Jessica walk out onto their patio, dressed in what was probably the same bikini from the night before. She had a towel draped over a shoulder and was holding a glass of cola in one hand.\n\nFrom that distance I could make out her body and face pretty well. I had been right last night \u2013 Jessica had grown up into a full-blown knockout! She waved at me as I rode the mower by, and I managed to wave back. Before the trees blocked my view, I saw that she was about to catch some sun.\n\nFor the next half hour, I fought to mow in straight lines, as my head was constantly swiveling and bobbing for the best view of her already-tanned body. By the time I was done, I had caught enough split-second glimpses that I knew I would need a quick dip in the pool. As I already figured I'd be hot, I had on my trunks.\n\nI parked the mower in the back shed and started walking back to the house. Of course I looked over again, expecting to see Jessica just as she had been. My eyes nearly bugged out of my head when I saw that she had taken off her top! I stopped dead in my tracks, unsure of what to do. I desperately wanted a better look, but it was broad daylight. There was no sneaking up on her.\n\nFinally, I decided that even just a few feet closer would be enough. I slunk my way through the trees until I was in the middle of the tree line. There were trees closer, but I figured I'd stay in the shadows.\n\nJust as I settled into a half-crouch behind a thick elm, Jessica lifted her head and I thought for sure she saw me. Instead, she reached over and grabbed her bottle of tanning lotion. I took a deep breath and said a quick prayer.\n\nThank you!\n\nShe started rubbing the lotion over her smooth skin, the lotion only adding to the effect. She started at her legs and worked her way up. Goddamn did she have a great body. Her legs were perfectly toned from hours of training, and the lotion only heightened my awareness.\n\nBy the time she got past her toned and flat stomach, my dick was already growing rapidly. Jessica next squirted some of her lotion directly onto her chest, and my jaw literally dropped. I don't think I'd ever seen anything sexier. I couldn't help but equate the lotion to my own hot liquid I would love to spray all over her chest. \n\nAs she rubbed the lotion over her perfect breasts she looked around the yard, checking for perverts like me. For a second, my heart stopped and I thought she saw me again, but her head just kept moving past me. I couldn't help but rub myself through my trunks as she leaned back in her chair and continued to knead the lotion onto her wonderful mounds, her tits glistening in the sun.\n\nI could have easily jerked myself off right there, but remembered it was in the middle of the afternoon. Tragically, I tore myself away from my hiding place and snuck back into my house. I was just about to relieve my aching member when the phone rang. Turned out it was my parents just checking in, but it was enough to let my tension ease away on its own.\n\nA quick dip in the pool to cool the rest of the way down and I was much calmer. The rest of the afternoon was spent lazing about the house, doing some light chores in between a nap and some light reading. I ate supper in front of the TV and did some work since I was kind of bored. Calling to my friends revealed they had more of the same planned, so I told them I'd skip the bars that night.\n\nI had no idea what I'd do instead and got ready to watch a movie. I headed to my bedroom to pick out a movie. I just happened to glance out my second-story window and got an even better show. Turns out Jessica must have moved to a different bedroom in their house, as my window now looked directly into hers, through a very large patio door.\n\nAnd there in her room was Jessica, standing stark naked. Her back was to me, and she was looking at herself in the mirror, probably examining the day's tanning. I immediately felt a surge of electricity shoot through my groin, fixing me in place. I knew that if I kept my light on, she could spot me even easier. After a few seconds, I sprinted across my room and shut the light off.\n\nI got back to the window and let out a sigh of relief as Jessica was still standing there. Now both of us could examine her body. Discounting the night before in my pool on account of bad lighting, this was my best view of her yet. As it was, I could only see her back since she was standing directly in front of the mirror.\n\nBut that was more than enough. Every muscle on her body looked to be stretched tight. Her calves were perfectly shaped from miles of running and her thighs were slim but powerful looking. All leading up to the most perfect heart-shaped ass I'd ever seen. Her back was smooth and flawless, like all of her skin, and shone with a healthy tan. \n\nI reached down, gripped my hardening shaft, and started stroking myself through my shorts. This was absolutely too much for me to take. Jessica started moving around, getting different views of herself in the mirror. This gave me a perfect profile of her perky tits, sitting proud and high on her chest. Then she ran her hands up to heft each of them and I almost lost it. \n\nI frantically grabbed a sock from the floor, not wanting to paint my wall. I looked back up to see that Jessica was walking to the far side of her bed. Just a little longer, I thought to myself, my hand starting to stroke up and down my length with purpose. But if I was afraid of her leaving or putting clothes on, I was way off.\n\nShe bent over at the waist and reached into her bedside table, giving me more fuel for my fantasies. She pulled something out, exactly what I couldn't see, and tiptoed to her door. Listening for a second, she returned to her bed and laid down on her back. I wondered for a second just what the hell this was all about and then was shocked when I realized what she was about to do.\n\nTo confirm my guess, I saw what she was holding in her hand \u2013 a light blue vibrator. My cock twitched and I fought down my climax. I watched, enthralled, as Jessica spread her legs and ran her free hand down to her box. I had a perfect profile view of her, but that meant unfortunately I couldn't see the real action. But this was more than anything I'd ever expected!\n\nJessica gently sucked the vibrator into her mouth, her lips looking amazingly soft even from 60 feet away. I groaned my appreciation involuntarily, and my heart stopped, thinking she would hear me. The window's closed stupid, I thought. Then I noticed that Jessica's patio door was opened considerably and decided to take a chance. Opening my own window, I told myself to keep quiet no matter what I saw.\n\nI finished opening it just as Jessica started moving her toy down her stomach. Her head was lying on a pillow and her eyes were closed, her face the picture of relaxed pleasure. I was beyond fascinated when I watched her slip the vibrator between her legs, wishing I could see her pussy. \n\nI listened intently, trying to pick up the sound of the vibrator but couldn't. Instead, I heard Jessica moan longingly and watched her hand make rhythmic motions between her legs. Her thighs blocked my view, but they weren't bad to look at anyway. I wondered what they'd feel like clamped around my waist if my dick ever replaced that enviable vibrator. \n\nHer hand sped up considerably and I felt myself about to lose it. Her moaning became more obvious, and when her free hand moved up to play with her tit, I felt my orgasm start. I watched her hand gently tweak her nipple, just before I unloaded myself into my measly sock. \n\nStill, I came hard enough that I inadvertently grunted, just a little too loud. This time, my head wasn't the only one to whip up in alarm. Jessica immediately stopped and grabbed a robe that must have been hanging nearby. I dropped my head below my window when she raced to her patio door.\n\nI'm sure she stared out for a few minutes, before I heard her door shut. I waited a little longer before peaking my head up again. This time, there was nothing to see except Jessica's drapes drawn across the window. Fuck, I thought to myself. I flipped my light back on and cleaned up my mess.\n\nFor the rest of the night, I half expected Jessica to storm over and bitch me out, or maybe just call to do it. But nothing of the sort happened. I watched my movie and generally wasted my night away before going to bed. \n\nI woke up the next day with that same sense of dread though. She might not have known what to say, or too embarrassed, the night before, but after sleeping on it, she might have something to say. It was almost lunch when I woke up, so I head straight downstairs to the kitchen for something to eat.\n\nI looked out the big window while I made a sandwich and saw Jessica, my heart stopping. But I saw that she was running down the street, not stalking up my front walk. Her blond hair was pulled back into a long ponytail that swished back and forth to the tempo of her stride. \n\nSince she was focused on running, I took a moment to admire her. And since she was wearing one of those small portable radios, I figured she was too intent to notice. She was wearing just a white sports bra on top, which did a decent job of holding her cleavage under control. Her sexy midriff was left bare, and a pair of those tiny red running shorts was the only other article of clothing besides shoes. \n\nI watched her run until she was out of view, wondering just when the hell she had developed into such a stunner. Shaking my head, I went back to my sandwich. After I ate it, I found myself hanging out near the front of the house, hoping to spot Jessica on her return circuit, but to no avail. In fact, I didn't see her the rest of the day, and believe me I was looking. \n\nAfter I had eaten dinner, I had given up on seeing her in something skimpy. On the plus side, I figured either she wasn't going to say anything to me about last night, or she didn't know I had seen her. But when she called just after sunset, my breath caught in my throat all the same.\n\n\"Hey Mark, what're you up to?\" she asked casually.\n\n\"Nothing, really,\" I said, hoping she couldn't hear my heart hammering through the phone. \"Why, what's up?\"\n\n\"Nothing, I'm just bored.\" \n\nI blew a quiet sigh of relief. My guess was she didn't know I'd seen her.\n\n\"Yeah, I am too. I already did some work, so I'm actually ahead.\"\n\n\"Great. Maybe I can come over and use your pool,\" she joked.\n\n\"Just as long as you use it naked, and I have time to hide the camera.\" Hey, now there was an idea! I thought to my perverted self.\n\n\"Great, I'll be over in a few,\" she said perkily before hanging up. I didn't think anything of it, but I was still hoping\u2026.\n\nA few minutes later I was sitting in the living room when I heard the back patio door open and then close. I wasn't even hoping she'd be naked already, but maybe at least a swimsuit. \n\nInstead, she was wearing an outfit very similar to the one she had gone running in. This time, the sports bra was replaced by a very tight, white tank top, and the red shorts were now orange. And instead of running shoes, she had on a pair of thong sandals. If she would just turn around, I could find out if she had on any other thong apparel.\n\n\"Hey there,\" she said lightly, as if we hung out all the time. Honestly, I wouldn't mind that at all. \n\n\"Hey,\" I said, feigning nonchalance and staring at the TV. \"You didn't even bother with a towel? Nice.\"\n\n\"What?\" she started. \"Oh yeah. Eh, I decided against it for now. Maybe some other night.\" God I hoped so.\n\nFor the next hour or so we just hung and chatted, leaving the TV on as background and a conversation starter. It turns out that Jessica was much more intelligent than I had thought, forcing me to scold myself on my shallow judgment. She easily kept up with me through most of our talking, which was impressive for her age. Most high school seniors could care less about what was happening outside their social lives.\n\nIt was getting close to ten o'clock, and I knew I should start thinking about bed. But I didn't want to send Jessica home either. She was fun to talk to, and fun to look at too. So far, I had managed to hold back any impulses, avoiding any awkward \"swelling.\" \n\nI was flipping through the channels, looking for anything remotely interesting to prolong the night, when I flipped right past the adult station. There was only a quick flash of a bare breast, and I suddenly grew very aware of Jessica next to me and what I had seen the night before.",
        "\"Ooh, wait wait, go back,\" she said, waving her arm excitedly. \n\n\"This?\" I asked, more than a little surprised.\n\n\"Yeah,\" she said, leaning slightly forward.\n\nNow plastered across our 48\" plasma TV was an extremely buxom woman riding a very muscular man on top of a table. At first I thought I was relatively safe, and that the movie was only soft core, since it was still relatively early. Then the screen snapped to a close-up of the man's penis impaling a very wet pussy. These two were of course not at all quiet, and I felt the first significant stirring in my shorts.\n\n\"You watch porn?\" I asked incredulously.\n\n\"Not really. I've only seen a couple; mostly when guys at a party will put it on to gross out the girls. Mostly, I think it's kind of funny.\"\n\nI could certainly see that. From the woman's screams, you'd think she was riding a Louisville Slugger, when really the guy was not that well endowed. We watched for a few moments, and I tried to shift as subtly as I could to hide my slightly bulging shorts.\n\n\"Her tits are so not real,\" she said matter-of-factly.\n\n\"Oh really, I hadn't noticed,\" I said, trying to break the tension. She gave me a sarcastic look and went back to watching. My eyes were on the TV, but my mind was clawing for anything else to think about.\n\n\"Do guys like fake ones?\" she suddenly asked.\n\n\"Fake breasts?\" I kind of stuttered. \"I guess so. Enough do.\" I wasn't really sure of how to answer that one.\n\n\"Do you?\" She only glanced over at me, and I saw that she was blushing ever so slightly.\n\n\"Me? Not really. Just so long as they aren't too obvious though.\" I swallowed thickly, wondering what the hell I was supposed to do.\n\n\"So you wouldn't nail her?\" she said, nodding her head to the TV.\n\n\"Her? No, I'd nail her. I'd just bend her over so I didn't have to worry about her fake tits.\" We laughed a little, and I felt the tension ease a little more. Maybe it was just me though, as Jessica seemed perfectly at ease. Which helped my dick deflate some, as I figured this was a young girl just being curious, at the most.\n\n\"You like doggy?\" she asked, sounding like she was asking about my taste in music.\n\n\"Um,\" I started, really unsure of my footing. \"I guess I like whatever position I'm in while I'm having sex.\" Which was totally true. But I wasn't sure of where this was going, or how much detail was appropriate.\n\n\"I kind of like it,\" she said surreptitiously. And just like that my dick was back on the rise. Only for an instant, I pictured fucking her doggystyle. But that was enough to send a very familiar tingle to my crotch.\n\n\"Really? I would have figured you for an on-top kind of gal.\" Thank god my voice was miraculously steady, because my heart sure as hell wasn't.\n\n\"Well, I like that too. Basically, I just like sex.\" I could not fucking believe what this girl was saying. She was driving me nuts! \n\n\"Ooh, now her tits are real,\" she said, her attention still on the porn. It was a new scene; a brunette with very nice breasts about to seduce what seemed to be her boss.\n\n\"Mine are real,\" she suddenly blurted out.\n\n\"Well, I guess I never really questioned that,\" again amazed at how off-balance I felt. I was no ladies man, but I wasn't some sixteen-year-old first timer either.\n\n\"I've gotten a lot of compliments on them actually,\" she said, glancing over at me again. \n\n\"I'm sure you have,\" I said, not wanting to go overboard and have her think me a sleaze. \n\nThe silence extended itself as the porno moved on. The brunette was now kneeling in front of her standing boss, sucking his dick earnestly. There were plenty of close ups, and I fought a losing battle against biology.\n\n\"I guess it would just be silly to ask if you like blowjobs,\" Jessica said.\n\n\"Very silly,\" I said, shifting again. But just as I did, Jessica looked over at me and saw my hand moving the unmistakable outline of my shaft.\n\n\"Is all this getting you excited Mark?\" Her voice was full of mischievousness as she taunted me. It didn't help that she was looking me dead in the eyes, her face matching her voice.\n\n\"My hot neighbor asking me sex questions while we watch porn? Why would you think that?\" I decided that humor was the best defense.\n\n\"That's the second time you've called me hot. You really mean it?\"\n\n\"Of course,\" I told her. \"Every guy over the age of twelve, and this side of six feet under thinks you're hot.\"\n\n\"So you liked watching me sunbathe yesterday?\" she asked bluntly.\n\nShit.\n\n\"Um\u2026well, I uh\u2026.\" \n\n\"It's ok, it's not a big deal. I figured you'd already seen me skinny dipping in your pool anyway.\"\n\n\"Actually, I didn't see much that time. The lighting was bad.\" She thought that was pretty funny.\n\n\"Well, the lighting certainly wasn't bad yesterday,\" she joked. Whew, I thought I was in trouble there for a second. \"Did you see when I splashed my chest with the tanning lotion?\"\n\n\"See it? My jaw hit the ground,\" I told her, feeling like this was all just some innocent flirting. \n\n\"Yeah, I thought you might like that.\" I looked over at her and saw that same mischievous look on her face. \"I saw you watching me before that, and thought I'd put on a little show for you,\" she said, smiling almost sheepishly.\n\n\"Well thank you, I certainly enjoyed it.\" This all felt more like a normal conversation now, and less and less something sexual. I was just happy she wasn't pissed, frankly.\n\n\"Did you enjoy the show last night?\" she asked in the same tone of voice.\n\nI almost choked when I heard her, and knew I had to come up with something fast. She was still watching me, and my initial reaction was pretty incriminating. The problem was, my mind was frozen solid.\n\n\"Um, Jessica, look, I'm sorry\u2026\" I started, but ran out mid-sentence. She turned to me then, and I had to keep my eyes from looking down her shirt. Her breasts truly were spectacular, and her tight shirt only pushed them up and together even more.\n\n\"You know, I should be pissed as hell at you Mark,\" she said, heat rising in her voice.\n\n\"Jessica, I'm really sorry,\" I tried again.\n\n\"How much did you see?\"\n\n\"Well, I saw you when you were, uh, looking at yourself in the mirror,\" I started, hesitating then, unsure of how or what to say next.\n\n\"And?\" Jessica asked, sensing there was more.\n\n\"And then I saw you, um, get your, uh, vibrator and, um, use it.\" I could feel my face burning with embarrassment. \n\n\"So you watched me masturbate.\" There was no shame in her voice, and surprisingly, not a lot of anger. \"How long did you watch?\"\n\n\"Not long, just until I\u2026um, just until you closed the drapes.\" Shit. She should've known there was only so much I could have seen anyway, and now\u2026.\n\n\"Until you what?\" she pressed.\n\n\"Nothing. Until you closed the drapes.\" This was suddenly so much worse than I had imagined.\n\n\"No, you were definitely going to say something\u2026.\" She trailed off then, and then I saw a look of clarity come over her face. \"Were you jerking off watching me?\" I really thought there would have been anger, or at least disgust in her voice, but there wasn't any.\n\n\"Well, Jessica, it was pretty hard not to,\" I tried, not a little pathetic even to myself..\n\n\"So what was that noise I heard? The one that made me close my drapes?\" I couldn't help but notice a slight tone of playfulness mixing with her anger now. Maybe she wasn't as mad as she was making out to be.\n\n\"That was uh, that was me, um\u2026.\"\n\n\"You came?\" she asked, surprise genuine in her voice.\n\nI could only shrug my response, my face staying beat red. I had never been so embarrassed, but oddly my erection wasn't falling faster than a WWII dive-bomber. And Jessica seemed now totally amused by everything, any pretense of anger gone.\n\n\"Well, I guess fair is fair, right?\" she said. That impish look was on her face again, and I looked at her, genuinely confused. She only nodded towards the TV, where there was a new porno on.\n\n\"What? You mean\u2026.\" I couldn't believe it.\n\n\"You watched me, I think it's only fair that I get to watch you.\"\n\nI struggled for an argument, looking from Jessica's sweet and innocent face to the porn and back again.\n\n\"You want to watch me jerk off?\" I still could not fucking believe this was happening.\n\n\"Why not? It's not like it looks like you have anything to be embarrassed about,\" she said, looking deliberately at my still semi-tented shorts. \n\n\"Jessica, I don't know\u2026\" I had never done anything like this before, but I had to admit the thought did kind of turn me on. Especially with her sitting right there.\n\n\"What, you don't like the porn?\"\n\n\"No, it's not that.\"\n\n\"Well then, strip down and get to it,\" she said, laughing lightly.\n\nWhat the hell. I stood up and quickly stripped my shirt over my head, watching Jessica's eyes roam over my chest and stomach. Just because I spent a lot of time in a library doesn't mean I don't know where a gym is. Jessica turned on the couch, bringing one leg up so she could face me when I sat back down.\n\n\"You're sure,\" I said, now half-teasing myself, as I hooked my thumbs on the elastic to my shorts and boxers.\n\n\"Quit stalling and let's see it,\" she said, her eyes glued to my crotch.\n\nWith one quick motion I pulled everything to the floor, my semi-hard dick bobbing free. I stood up straight, just standing in front of her for a moment. My heart was racing, and I was sure this was some kind of joke. But with the porno still going, and the look on Jessica's face, my prick just kept filling with blood.\n\nI kept watching Jessica's face as I sat down, letting my stiffening cock slapping against my stomach. The air felt cool against my cleanly shaven scrotum, and it was strangely thrilling to be naked like this in front of Jessica. \n\n\"You're big,\" she said quietly. I noticed she licked her lips when her eyes moved from my package to meet my gaze.\n\n\"Do you like big?\" I had gotten this reaction before, but not from an 18 year old in quite some time.\n\n\"I don't know\u2026I guess so. I've never been with anyone that big.\" I was almost 8 inches, but it was my girth that had caused me problems. Most girls had a hard time fitting me in their mouths without hitting teeth.\n\n\"And you're shaved,\" she said, looking once again to my smooth sack.\n\n\"I had a girlfriend who told me women like that, so I just kept doing it,\" I said, taking my swollen shaft in my hand. Her eyes dropped back down to watch my hand, so I turned back to watch the porn a little.\n\n\"Have you ever been with a guy who shaves?\" I asked. I wasn't at all sure how much experience Jessica had, but I guessed at least some for her to be this bold.\n\n\"No, guys my age are just happy to get into my pants,\" she said calmly.\n\n\"I'm sure they are,\" looking back over at her. She met my gaze steadily before resuming her watch. Now I watched her face more, using just the sound from the porno even though I didn't really need it. Jessica's sweet face was more than enough.\n\n\"Actually, I've only had sex with one guy, Justin. We dated for most of last year, but he cheated on me last summer.\"\n\n\"Moron,\" I said, meaning it. I was sure Jessica would give her man every reason to stay and none to leave.\n\n\"Thanks,\" she said, smiling at me momentarily. \"I still don't know why he did it. I mean, we had sex all the time, and I'd blow him just about whenever he wanted.\"\n\nInstead of giving her another answer, I moaned softly and dropped my head back onto the couch. I was picturing her sucking and fucking me instead of that Justin twerp, and my hand started moving a little faster. Honestly, I didn't want to cum too fast as I found this whole scenario incredibly erotic.\n\nBut when Jessica gave out a small sigh herself, and I opened my eyes to see her hand down the front of her shorts, I almost lost it. Her own head had dropped back and there was no mistaking what her hand was doing.\n\n\"No fair,\" I said, her eyes opening to look at me curiously. \"I think it's only fair that we're both naked for this.\" It was my turn to smile devilishly. \n\nWithout saying a word, Jessica stood up, mirroring my smile. She gracefully slid her tight tank top over her head, arching her back as she did. Her tits shook slightly as she did, and I couldn't help but stare. They were even better close up. She had large, surprisingly dark areolas, and prominent nipples that were standing straight out.\n\n\"I told you they were real,\" she said coyly.\n\nShe kicked off her sandals, turning around. She slowly slid her shorts over her gloriously tight ass and down her taut legs, bending at the waist. Her ass was prominently displayed, and I could see the clear shape of her young cunt. \n\nShe sat back down on the couch, slouching back and giving herself more room to work. We watched each other's hands work methodically, neither one of us in any obvious hurry. Soon enough, our hands were working in unison without us even realizing it.\n\nJessica then draped her right leg over my left one, opening her pussy even more for my viewing pleasure. The touch of her silky smooth skin, hot to the touch, sent bolts of electricity through my body. She was also moaning loudly now, enough so that I had forgotten all about the TV.\n\n\"Trade ya,\" I said instinctively, hoping I wouldn't ruin the moment.\n\nJessica just looked up at me, her right hand moving from between her legs over to mine. I let go with my hand, and moved to replace hers. She scooted closer so she'd have an easier reach, and I felt her hand grasp the base of my shaft.\n\n\"Jessica,\" I breathed out. Her hand was still hot and wet with her juices, and she ran it up and down my shaft, easily lubricating me. She rubbed the palm of her hand over my head, mixing my own pre-cum with her juices before slowly jacking me off.\n\nI slid my hand up her smooth, firm thigh, watching her hips already moving to meet me. My fingers lightly played with her lips, and Jessica took in a sharp breath, momentarily squeezing my shaft. God she was wet. I applied more pressure, using my index and middle fingers to spread her lips, and my thumb to lightly run over her emerged clit. \n\n\"Oh fuck Mark,\" she said, a tiny shudder going through her body.\n\nI pushed my middle finger into her sopping wet hole, curling it inside her. She arched her back and had a hard time stroking me as I started to finger her. As I pushed my finger in all the way and started curling it forward, Jessica was mostly squeezing my cock, only stroking it when she would catch her breath.\n\n\"Don't stop Mark,\" she said urgently.\n\nI used my finger faster and more firmly now, and Jessica was grinding her hips up against my hand in rhythm. Shit, she would be incredible in bed! I started rubbing my thumb against her clit again and Jessica arched her back dramatically and stopped breathing for a second.\n\n\"Maaarrrrk!!\" she cried out and I felt her pussy contract around my finger as her body exploded. Her hips pushed up against my hand as my fingers kept working. Finally, her body began to descend, and I let my fingers lightly play against her dripping wet sex. \n\n\"Oh my God Mark, that was so amazing,\" she said, catching her breath and looking up at my face. Her hand had moved away from my manhood in all of her excitement, but just watching her cum was more than enough to keep me hard. \"I normally don't get off like that from just fingering.\"\n\n\"Glad I could be of service,\" I said, reluctantly taking my hand away from her opening. \n\n\"You were great,\" she said softly. Jessica shifted on the couch and leaned up to kiss me. The kiss was light and soft, like her lips, barely more than brushing against mine. She pulled away just enough to ask, \"Do you want me to get you off now?\" Her hot breath whispered against my lips, reenergizing my body.\n\n\"Yes,\" I said, my eyes still closed.\n\nI felt her hand slide down my chest and grab hold of my shaft again. As she slowly started running her delicate hand up and down my pole, I reached up and pulled her head back down to mine. Her mouth eagerly met mine, opening wide to let my tongue find hers. \n\nOur kissing matched the tempo of her hand, growing more and more intense. Hungrily we fucked each other with our tongues, while her hand pistoned along my throbbing cock. I felt my balls tightening and knew it was only a matter of seconds. I moaned into Jessica's mouth and she pulled away.\n\n\"Jessica, I'm going to cum,\" I told her, my voice tight with need.\n\n\"Cum for me Mark, I've never seen a man cum before,\" she told me, her curiosity mixing with a tone of authority.\n\nI thrust my hips up against Jessica's hand to meet her stroke and soon felt my dick swell in her hand and my balls tighten. I grunted wordlessly as my cock loosed lob after lob of liquid hot cum up, and then down onto my stomach. My hips stopped bucking, but Jessica's hand never did, not until I was completely spent. I watched her face as she watched every long arc, turned on even now by her fascination.\n\nI slumped back into the couch, exhausted. Jessica's hand continued to milk my prick, making sure I was truly empty. I felt my own hot seed covering my stomach with its thick mass, but not caring in the least. That was easily the best handjob I've ever had, and worth whatever cleanup there was.\n\nJessica must have noticed the same thing, looking down at me and saying, \"That's quite a mess you made big boy.\" \n\n\"I think you're the one who actually made it,\" I said.\n\n\"Then I guess I better clean it up,\" she said sensually. I thought she meant get a towel, but her voice and eyes told me that had never occurred to her.\n\nI watched as Jessica slowly leaned down over my stomach and began to lick up every drop of cum on my body. My dick had since gone soft, so she caressed my thighs instead. She stuck her tongue out dramatically, making sure I could feel and see every lick. She worked her way top to bottom, until she lightly kissed just the tip of my head, getting the last of my cream.\n\n\"Where the hell did you learn that?\" I asked, totally dumbfounded by this sexual being in front of me.\n\n\"I told you I've seen porn before. And I wanted to see what you tasted like,\" she said calmly, although her cheeks did color slightly at that last bit.\n\n\"And?\"\n\n\"You taste good.\""
    ],
    "authorname": "bigfoot12",
    "tags": [
        "neighbor",
        "teen",
        "voyeur"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/neighbor-girl-1"
}