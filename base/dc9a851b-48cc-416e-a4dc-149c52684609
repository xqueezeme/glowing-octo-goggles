{
    "title": "Efrain and Cory Ch. 29",
    "pages": [
        "Aaaaaaaaaaand now the penultimate chapter! Epilogue to follow soon...erm...eventually. One would think quitting your job would allow for more writing. \n\nChapter 29 - In Which We Have Breeders for Dinner \n\nThe curving lines of Preston's back emerged as he propped himself up on his elbows and the sheets slid down to his hips. \n\n\"So, you only get a few days after Christmas before you have to be back,\" I said. \n\n\"Uh huh, they want us back on the 28<sup>th</sup>.\" His arms folded down and he rested his chin on them. \"Can't trust a bunch of college kids to not miss a flight.\" \n\nHe still wore the afterglow from earlier and that silly green bow tie with nerdy glasses on them. He'd said it was unusual to buy a bow for your own Christmas present when he tied it on. I hadn't meant for him to actually wear it, which probably made it no different than the bracelet he'd given me. \n\n\"And then, you'll fly back on New Year's.\" \n\n\"Oh my, you've memorized my itinerary,\" he purred. \"Admit it\u2014you're going to miss me.\" \n\nI traced my fingertips up his arms and over his shoulders. \n\n\"Somewhat,\" I said. \n\nHis full mouth drew into an artful pout. I ignored it, and instead followed the valley his muscled back formed at his spine to where it terminated at the two dimples above his butt. His hips arched up as my fingers traced lower, skimming over his back and peeling the sheets off his ass. \n\n\"You won't last a week before you're desperate to hear the sound of my voice,\" he said, aforementioned voice low and breathy. \n\n\"I'll manage,\" I shrugged, listening to him starting to pant as I traced circles over the twin mounds. \"What about you?\" \n\n\"I'll be absolutely inconsolable,\" he sighed dramatically. \n\n\"Guess we'll have to make do without,\" I said. My fingertips slipped between his cheeks to tease his tight little hole with each pass. Preston lifted his hips against my hand. \n\n\"Or make excuses,\" he gasped. \n\nI grunted in agreement and closed the distance between us, taking his mouth as I slid a fingertip past in outer-ring, and found him still wet from our last session. He arched his back, inviting further intrusion, and sucked my tongue into his warm mouth. I invaded him\u2014fingers and mouth prepping my little present for another taking. Whimpers and sighs filled the room, growing in volume against my lips. \n\nI broke away from him to roll on a condom and watched him quiver with need while I slicked lube over my cock. He'd still not moved from his position, only stretching out his arms to lie fully on his stomach, and I decided I wanted to take him just like that. I slid the towel and a pillow under his hips before I stretched my body out on top of his, settling most of my weight on my elbows and knees, while leaving enough to press him into the mattress. My cock nudged between his pert cheeks, and I rained kisses along his neck and shoulders as I ground my hips into his. \n\nJameson had always told me that I was too weird for most guys to find attractive, that the only thing going for me was my cock. I could definitely get a guy on my dick if he knew what I was packing, but good luck if I wanted more. I'd resigned myself to monkhood after he left since I knew that no one would be interested in me. \n\nThen along came Preston. \n\nTechnically, Cory came first, but he was drunk, so that didn't count. \n\nPreston was beautiful\u2014masculine, but still beautiful. I had no idea what he was even doing with me. Perhaps my ex was right, and it was my dick, or my ability to use it. Or maybe I was convenient. All I knew was that I couldn't get enough of his back. I shifted my weight to my left and freed my right hand to wander over his skin\u2014skimming over from flank to hip. \n\n\"Goddamn, Indie,\" he panted. \"Just fuck me.\" \n\nI suppose I could question my luck, or I could enjoy it while it lasted. \n\nI reached between us and nudged my head down. He hissed as it popped into him, whether in pain or pleasure, I wasn't sure, but he didn't ask me to stop. If anything, his writhing hips urged me to press deeper. I worked my hips in slow, shallow thrusts, listening to him moan and babble beneath me. \n\nMore. Please. God. Oh. Fuck. \n\nThese words, over and over, whined out, as if every one of my thrusts forced another string of syllables from him. His back arched higher, almost painfully, until my hips smacked into those perfect globes when I bore down into him. I slammed into him faster, sweat creating a frictionless glide between our bodies, bringing his voice up to a wail that he quickly moved to bury in a pillow. Pillow-muffled cries mingled with my harsh breaths. In all this, my left hand found his and, fingers interlacing, made another point of contact between us. \n\nMy climax neared, spurred on by his eager movements under me, and I shifted so that I could reach under him with my free hand. I wrapped my fingers around his cock and used the force of my hips to fuck him into my hand. I varied angles until I fell upon one that produced an endless stream of oh fuck. \n\nArrhythmic pulses along his inner walls, swelling twitches against my fingers, his fingers gripping mine, the wild abandon with which he flexed his hips pointed the way to his orgasm. I gave myself over, mindlessly fucking the wailing man as I brought him off. \n\nA few more thrusts, and I followed, breathless and sweaty. \n\nWe tangled up together after we'd cleaned up. Strange that I'd always found it hard to sleep comfortably with a man I'd been in love with for years, but had no issues sharing a bed with a casual partner I'd known for a couple months, at best. But, it felt right, as if Preston had been made specifically for touch and warmth. He only stayed over a few nights a week, but for some reason, those were the best nights of sleep ever. \n\nI pulled Preston close, tucking his body against my chest and wrapping my arm over his stomach. He grabbed my hand, snuggled it to his chest, and, with a contented sigh, fell asleep. \n\nFor someone who'd gone without physical intimacy for nearly two years, you'd think I would be better prepared to handle less than two weeks without a certain pretty boy warming my bed. \n\n~*~*~*~ \n\nEfrain and Cory's teammates, three men of substantial size, stood in the doorway. \n\nI'd invited my new friend JJ myself, but the other two, who reintroduced themselves as \"Whit-uh-Denholm\" and \"Bak-erm-Paul\", were recent additions who were actually quite welcome in my home because, unlike Laurel and Mike's friends, they actually brought decent beer. I could even forgive the fact that they were nearly half an hour early. Efrain had several things going on in ovens and pans, but dinner wouldn't be ready for a while, and the rest of us were still setting up. \n\n\"Indie, my man.\" JJ, bigass blond teddy bear, held up his fist to pound. I pounded the offered fist and stepped aside to allow them entry. I was even nice enough to relieve them of their six-packs so they could get out of their coats and shoes. \"Long time, no\u2014\" \n\n\"INDIE!\" \n\nThe guests froze in various stages of entry and removal of outerwear as Efrain bellowed from the kitchen. \n\n\"COME RECLAIM YOUR FUCK TOY BEFORE I PUNT IT!\" \n\nPreston's puppy yips and Cory's kitty meows flowed in the wake of his roaring, and the guys exchanged puzzled looks. JJ just shrugged and continued kicking off his shoes. \n\n\"But you aren't on any special teams,\" Cory said. \n\n\"I FUCKIN' MEAN IT, INDIE! RIGHT OVER THE\u2014God, your nose is fucking cold.\" \n\n\"Oh, you're right, he does smell good,\" I heard Preston snickering. \n\nI caught Laurel, Mike, and Gio silently laughing their asses off in the living room, where Laurel had been directing us to put the various pieces of furniture we'd collected from the rest of the house. \n\n\"RIGHT OVER THE GODDAMN COUCHES! Would you fucking stop that?\" \n\nThis was met with more laughing yips and meows. Another song from Cory's chimera of a playlist started up\u2014fuckin' Closet Freak by CeeLo Green. Fitting, almost as if he'd planned it. \n\n\"ALREADY GOT MY OWN TRYIN' TO DRILL A HOLE IN MY LEG\u2014\" A sharp slap, followed by Cory's incensed squawk. \"Quit trying to put your hand in my pants.\" \n\n\"Yeah, Cory. No handjobs in the food prep area.\" \n\n\"I wasn't...\" \n\n\"You were!\" \n\nDenholm shot his teammates a puzzled look. \"They wouldn't really...\" \n\nI shook my head at the formidable brunette, but didn't clarify that, as far as I knew, I'd been the only one fucking around in the kitchen. \n\n\"I DON'T NEED YOUR\u2014why the fuck are you licking me?\" \n\n\"Never complained about it before.\" \n\n\"Does he taste as good as he smells?\" \n\n\"No! Do not li\u2014\" \n\n\"Quick! Grab his hands!\" Preston's maniacal giggles filtered out over the sounds of a minor scuffle. Sounded like Wolfie was being subdued by two very determined bottoms, both of whom had been trained to take down guys bigger than him. \n\n\"INDIE!\" \n\nI pinched the bridge of my nose and started forward, aiming to rescue Efrain if only to shut him the fuck up, but half a dozen hands shot out to yank me back. The trio in the living room also made similar gestures that I was to stay right where I was. \n\n\"Are they always like this?\" Paul whispered. \n\n\"Loud and obnoxious?\" I whispered back. They nodded in understanding. \n\n\"Seriously, why do you have to lick me, too? I'M SERIOUS, INDIE! OUT THE BACK FUCKIN' DOOR\u2014\" \n\n\"He said back door,\" Cory tittered. \n\n\"INTO THE YARD\u2014\" \n\n\"Oh,\" Preston cooed. \"In the good ol' outdoors.\" \n\n\"RIGHT OVER THE FENCE! What the fuck! Now you're biting me?\" \n\nPreston said something indecipherably muffled by what I assumed to be a mouthful of Efrain. \n\n\"THE NEIGHBORS ARE GONNA CALL ANIMAL CONTROL ON HIM!\" \n\nPaul's lip quivered in poorly suppress laughter. \n\n\"THEY'LL PUT HIM DOWN IF HE'S BITING PEOPLE!\" \n\n\"Chill, vato.\" \n\n\"Yeah, chill, vato.\" Or, at least, that's what I thought Preston had said. From the muffled speech, he still hadn't stopped biting Efrain. \n\n\"God, Ima kill Laurel for teaching you about mojitos.\" I noticed Laurel giggling in mad glee. \n\n\"But, you like me when I'm drunk.\" \n\nDenholm's eyebrow lifted. \n\n\"I'm still cutting you off\u2014fuck, just how long are you going to bite me?\" He sighed heavily. \"INDIE!\" Preston's muffled giggles filtered out of the kitchen. \"I'M ABOUT TWO SECONDS FROM CALLING THE DOG CATCHER!\" Cory's chuckles followed. \"Give me that fucking glass.\" \n\n\"But, vato...\" Cory mewled over the thunk of a glass slamming on the counter. \n\n\"Dry humping me ain't gonna get you\u2014would you get off my fucking arm? Swear to fucking God\u2014INDIE!\" \n\nI sighed and moved toward the kitchen, hoping to shut my roommate up, and the new arrivals followed. \n\nThe tableau that awaited us was all the overheard conversation had promised and then some. \n\n\"Well, ain't that cute,\" JJ snickered and I heard a click from my other side, as if someone had snatched a photo. \n\nThree sets of eyes tracked to our location, frozen in differing expressions of \"caught in the act\", all while CeeLo's backup singers called out \"Freak!\" in the background. Cory had himself wrapped around Efrain, subtly restraining him, with his lips stuck in the middle of pressing little kisses to Efrain's neck. My pretty little bedmate stood on Efrain's other side, both arms holding Efrain's arm captive while he gnawed on the bicep. For his part, Efrain played the \"unwilling victim\" part well, but was having a hard time hiding that he enjoyed Cory's affections. \n\nHis displeasure at Preston's attentions probably helped. \n\nI'd spent so much time the last couple days trolling Efrain with videos and pics of yorkies and cats play-fighting that it overlapped with my mental image of our respective toys. Preston's body language had excited puppy written all over it, complete with a wildly wagging tail, but his eyes and the grinning edges of his bite looked downright vulpine. Cory, on the other hand, appeared to be doing the human equivalent of rubbing himself against Efrain's legs. My imagination supplied a contently curled phantom tail and a trill of pleased kitten purrs. \n\nBoth men appeared to be impeding progress on the spread of ingredients Efrain had been prepping, and he looked severely displeased by this. Cory lifted his head and greeted their friends because Wolfie still seemed too outraged for words at the moment. \n\n\"Sup,\" Cory said, seemingly unaffected by being caught. \n\nEfrain used the distraction to extricate himself from their clutches. He stabbed a finger at Preston and tersely mouthed, \"Get him.\" Paul snorted. \n\n\"Oh em gee, guys, the breeders now out-number us,\" Preston said. \"Guess we gotta butch up.\" He then pulled his face into an exaggerated tight-lipped scowl, made all the more hilarious by how closely it resembled Efrain's expression. \n\nJJ and his friends chuckled, which made Efrain scowl harder. \n\n\"Oh, relax,\" Preston said, and lightly slapped his arm. \"Have a drink.\" He then turned to the football players who'd followed me in. \"We made mojitos. What some?\" I used that as my cue to stick their beers in the fridge, and offer them some we'd already chilled. \n\n\"They're really tasty,\" Cory said, pulling back to face us. \"I've already had two.\" \n\n\"And now I'm cutting you off,\" Efrain said, frankly. \n\n\"Like hell you are.\" The phantom tail twitched in annoyance behind him. \n\n\"Watch me.\" \n\n\"Gar-uhm-Rain's bitchfits aside,\" Denholm said. \n\n\"For one, I ain't no goddamn precipitation, so quit putting my name in your mouth like it's a fucking weather report\u2014\" \n\n\"It's pronounced kinda like Ryan, but, you know, with, like, an e sound,\" Cory offered. Somehow, I was sure his boyfriend would be dealing with Whit-uh-Denholm and Bak-erm-Paul calling him Gar-uhm-Ryan in the near future. \n\n\"\u2014And two, I am not having a fuckin' bitchfit.\" \n\n\"Whatever you say,\" Denholm laughed, and pulled up a barstool at the island. \"I was just going to say it smells awesome in here.\" \n\n\"Yeah, you've been holding out on us, Wolfie,\" JJ added. \n\n\"And you never told us what we were eating,\" Paul said. He and JJ joined their teammates at the counter with their beers. I figured I might as well grab a seat and look like I was doing something before Laurel put me back on furniture duty. \n\n\"I didn't tell you because you weren't invited,\" Efrain shot back. \n\n\"I needed a wingman,\" JJ said. \"Berta's bringing her friend, Luz. Apparently, Kitten invited her.\" \n\nCory gave an innocent shrug. \n\n\"Still doesn't explain him,\" Efrain said, pointing at Denholm. \n\n\"I wanted to come,\" Denholm said, as if that was supposed to settle the argument. \"So what's cooking?\" \n\n\"We're having Cuban,\" I told them. \n\nEfrain heaved a dramatic and beleaguered sigh. \"Mojo roast pork, saffron rice with pigeon peas and chorizo, roast yucca...\" he listed. \n\nAs he spoke, Cory's hand crept closer to his confiscated mojito. \n\n\"...Fried plantains, chimichurri sauce to go on whatever.\" \n\nEfrain's hand shot out and delivered a sharp smack to Cory's creeping hand. \n\n\"There's salad, too, although I doubt anyone will eat it.\" \n\nCory's eyes widened in shock, before narrowing. I decided to add some phantom cat ears, folded back, 'cause why the fuck not. \n\n\"Wow,\" JJ said, which I think had more to do with the smack than the menu. Paul and Denholm seemed too shocked to comment themselves. Instead, we watched as Cory's arm slowly extended behind an oblivious Efrain. \n\n\"Oh, and Laurel made mojito cupcakes,\" Efrain added. \n\n\"She just finished frosting them a little while ago,\" I said. \n\n\"We helped,\" Preston said. I was pretty sure, however, that \"ourselves to the alcohol\" should have followed as I distinctly recall the three of them spooning as much of the rum-laden mojito syrup into each other's mouths as they did over the cupcakes. And that was in addition to doing shots of the rum as Laurel baked. \n\n\"You got in the way,\" Efrain growled before turning to me. \"Now, if you want din\u2014\" He jumped, his eyes widening slightly, with a small squeakish hiccup. Cory had struck, pinching the ass cheek on his opposite side. \n\nPreston threw up his hands as Efrain rounded on him. \"I did nothing!\" \n\nCory capitalized on the distraction to grab his mojito and move to the bar stools on the other side of the island before he took a sip. \"Mission Accomplished.\" Denholm nearly choked, and Paul cocked his head, as if confused. \"Thanks, Preston.\" \n\n\"My pleasure.\" \n\nEfrain glared at Cory. \"Yo no te golpeo lo suficiente.\" \n\n\"No, you don't,\" Cory told him with a grin. \"But, we could fix that later.\" \n\nEfrain's eyes narrowed, but he eventually sighed and went back to his tasks, moving between the prep top, stove, and ovens, while casually sipping a beer, as if planning and preparing a meal for eighteen during finals week was a normal occurrence. This, of course, seemed pretty likely, if even half of the stories he'd told me about working for his mother were true. \"At least eat something other than those nasty ass bloodworms.\" \n\n\"Bloodworms?\" Paul asked. I pointed to the strange concoction inhabiting a plastic container on the island. \n\n\"Fuck, Ri-uh-Adrian was eating these the other day,\" JJ said. He pulled the container to him and Cory handed him a short bamboo skewer. \"No idea what he puts in it, aside from gummy worms, but it tastes so goddamn good.\" \n\n\"Just lucas and chamoy,\" Cory shrugged. \n\n\"Chili-lime salt and a sauce made from pickled plum brine,\" I clarified. While I wasn't exactly a fan of the bloodworms, I'd been discovering other uses for my new favorite condiments. Cory and I had demolished a bottle of each on fresh fruit cups alone. \n\n\"Good to know,\" JJ said and speared a worm. Denholm and Paul grabbed their own skewers to try out Cory's Mexican candy monstrosity. However, when Cory went to get some for himself, Efrain paused in the middle of tossing yucca with olive oil and spices to bark at him. \n\n\"Real food, acho. I'm not dealing with your drunk ass all night.\" \n\n\"But, it'll be awhile before dinner's ready,\" Cory complained. \n\n\"Oh, I know!\" Preston said and went to the freezer. He pulled out the plastic freezer bag of the apple cinnamon pancakes left over from last Sunday and tossed one into each of the four toaster slots. \n\n\"Are those what I think they are?\" Paul asked. \n\n\"I don't know what you're talking about,\" Preston said. The toaster popped up, and he pulled out one to hand over to Cory, and another for himself. Both men bit into their respective snack, and Cory made a contented noise around his mouthful of pancake. Preston came to stand between my knees and lean back against my chest. He held up his pancake so I could take a bite. \n\n\"Hm, not bad.\" \n\n\"I told you they'd freeze well,\" he told me. \n\nI put my head over Preston's shoulder for another bite as a series of inarticulate and insulted words fell out of Paul in rapid succession before he finally settled on, \"That's not fair!\" \n\n\"Hey,\" Denholm shrugged, \"they put out.\" \n\n\"Yup. Blow 'Rain, get pancakes,\" JJ added. \n\n\"Paul's not getting anywhere near my junk!\" Efrain glared at Preston and Cory, who didn't have the decency to look ashamed of their baiting. \n\n\"What?\" Preston said, nibbling on his treat. \"It's not my fault he can't do simple subtraction.\" \n\n\"Four-slot toaster, bro,\" Cory said and pointed to where two other pancakes sat for the taking. \n\n\"Shit yeah!\" Paul scrambled off his stool and sped to the toaster, nabbing both remaining pancakes. He was nice enough to pass one to JJ, who split it with Denholm. While the other two munched on their halves, Paul held his pancake in his mouth, pulled a thuggish face, and snapped a selfie. I'd later find out that #pancaketimemuthafucka had been tweeted along with the pic. \"Should send Mart-uh-Greg this. Fucker messin' with me about getting pancakes.\" ",
        "\"You know,\" JJ said, ignoring Paul's bitch/pancake selfie fest. \"I'm just gunna say this: y'all listen to some weird shit.\" \n\nI nodded in agreement. \n\nWhile I'd enjoyed some of the songs Cory'd put in that playlist (like a metal cover of \"Let it go\" that actually made the damn song palatable), some of them had me scratching my head. Cory was a bit of a sponge with music, absorbing sounds from everything he encountered. He had music his brothers listened to in their teens, and music he danced to with his friends. Even some of the EDM and hip hop that Efrain favored, and the indie(ish) music that Preston liked. My music ended up in there somehow, as well as Gio's. \n\nBut, like a sponge, some of his music stank. \n\n\"I still wasn't convinced that y'all swing that way,\" Paul said over Yelle's Ba$$in, a French electropop tune about shaking one's ass to get a guy's attention. \"I mean, none'y'all have limp wrists or talk with a lisp\u2014\" \n\n\"I did lisp for the first few weeks I had braces,\" Cory laughed. \n\n\"And there was that one time I fell off my skateboard and sprained my wrist,\" I said. \n\n\"You don't walk funny, either...\" Paul continued. \n\n\"I guess he's never seen Cory after Wolfie's had his way with him,\" Preston whispered to me. \n\n\"...But, damn, Cory,\" Paul said, \"your music is gay as fuck.\" \n\n\"My nuts are about shrivel up and fall off just listening to it,\" Denholm said. \n\n\"Hey, just because your masculinity is weak enough to be threatened by something as silly as music,\" Cory said, \"doesn't mean mine is, too.\" \n\nPreston giggled. \n\n\"You should see some of the Japanese bands he listens to,\" Efrain said. \"It's like someone put an entire boy band in goth drag and gave them instruments.\" \n\n\"To be fair,\" I said, \"most of them know how to use those instruments.\" \n\n\"But, still,\" Efrain said. \"Some of those guys could pass for women. It's...unsettling.\" \n\n\"What the...\" JJ suddenly said. He pointed to Efrain's screen, where the playlist switched to the next song, providing the straight football bros with a new distraction. It was one of those plaintive slow songs about the loneliness of being with a lover who wants more than the other can give. But, that was hardly the interesting part. The singer, dressed in simple flesh-toned bra and panties, sang in her airy whistle-high voice, all while contorted in the strangest poses in some kind of elaborate Japanese rope bondage that utilized her own hair. \n\n\"Is she...?\" Denholm said in confusion. \n\n\"I found her while looking for stuff from Pendulum,\" Cory said. \"Other than the name, it was odd to find trip hop mixed in with drum and bass, but she's awesome.\" \n\n\"And her music videos are weird as fuck,\" Preston added. \"There's one where it's just some big black guy shoving his fingers in her mouth.\" Efrain smirked. \n\n\"Speaking of her mouth,\" Paul remarked. \"Damn, those are some DSLs.\" JJ and Denholm grunted in agreement. \n\nAnd then, the three of them sat, pancake in one hand and beer in the other, both mostly forgotten, transfixed by a chick in her underwear suspended in a half-split by hair shibari. \n\n~*~*~*~ \n\nThe way Lacey and her boyfriend acted put me in mind of a skittish animal being coaxed into an unfamiliar and frightening situation. \n\nIt didn't not help matters that my best friend's boyfriend had demanded that they either be here on time or starve. \n\nI don't give a fuck if he gets a speeding ticket\u2014I am not reheating this roast. And, why the fuck does he have a fuckin' sports car if he doesn't have the balls to speed? Tell him to man the fuck up and get here. \n\nOf course, Efrain had been loud enough to be heard over the phone. And, of course, Clint's \"fuckin' sports car\" was new enough that they had Bluetooth calls enabled. So, of course, Efrain's message went directly to the intended recipient. \n\nLacey and Clint were fifteen minutes late, but still considerably early by party standards. They did manage to arrive just as Efrain and Cory were putting the last dishes into the serving dishes that Consumer Whore Claire had so graciously donated to chez Indie, and had plenty of time to settle into the group. Laurel sent me to grab drinks for them, which was probably the only reason I'd been let back into the kitchen after Efrain had kicked Indie and me out of it (okay, so his pissy mood may have had more to do with Indie trolling him with kitten vs. puppy videos, and me being, well, me). Clint entered the house willingly enough, but seemed to have issues with moving farther that the foyer. \n\nChef Boyardiva yelling at him to grow a pair may not have helped matters. \n\nOr that he'd very helpfully cued up \"Man Up\" from The Book of Mormon in time for their entry. \n\n\"Wait,\" Indie said, \"is that Olaf singing about 'manning up all over himself'?\" \n\n\"Not helping,\" Laurel said. \n\n\"Come on, Clint,\" Lacey said in her creaky vocal fry and patted the seat next to her. \"Everyone's in the living room.\" \n\n\"Come in,\" Mike said. \"It not like we're going to bite.\" \n\n\"Don't know about that, man,\" Clint said. \"Last time I was here, the blond one threw the Puerto Rican one against the wall and started dry humping him.\" \n\nCory's outrage was audible even over his friends' laughter. \"I did not!\" \n\n\"You so did,\" Meggie giggled from the couch. \"Almost knocked poor Wolfie out.\" \n\n\"Y'all might wanna turn the volume up,\" Lacey mimicked, her fry mixing with his Texas drawl. \"I get pretty loud.\" Laurel and Meggie had joined her mid-mimic, then all three fell into mad giggles. Poor Cory turned red. \n\n\"And this guy,\" Indie, seated in the recliner we'd been sharing, pointed at Clint, \"looked like he'd just witnessed all the world's most unspeakable atrocities rolled into one horrible moment.\" \n\n\"Dude, he lives in a frat house,\" Meggie's boyfriend, Drew, said. \"I'm sure he's seen worse than two guys making out.\" \n\n\"Bro, not cool,\" Clint groused. \n\nHe was still baulking by the time I returned, so I waved the beer past his nose and whistled. \"Come on, boy, you can do it,\" I said, as if talking to a potty training puppy and not some rich kid frat bro. He glowered at me. \"What? Is it the whole entering-a-pit-of-gay-vipers thing? You know, they're more afraid of you than you are of them.\" I walked over to hand Lacey a glass of wine. \"Besides, it's not like you're outnumbered. The other breeders will keep you safe.\" I pointed at the seat next to her. \"Now, sit.\" \n\nClint begrudgingly took a seat, and I handed him the beer, but it seemed the puppy play wasn't over as Lacey started ruffling his hair. \n\n\"Who's a good boy?\" she cooed. \"You're a good boy!\" \n\n\"I like her,\" I told Indie as I settled in the chair with him. \n\n\"You would,\" he sighed. \n\n\"So, when did it happen?\" Berta asked. \n\n\"When did what happen?\" Lacey said. \n\n\"Kitten mauling Wolfie in front of a live audience,\" Luz said, who'd made herself comfortable in Paul Baker's lap as soon as she'd walked in. Bitch was bold. Just sat down and said, \"A little birdie told me you're the wingman.\" She'd then demanded that he distract her so her friend could get laid, a situation that Paul seemed more than happy to comply with. \n\nI'd called her out on being a slut, and she was all like, \"Says the guy riding the Asswrecker.\" I had decided then that if I suddenly turned straight, I'd marry that damn skank. Of course, when I told her that, she said that if she suddenly turned desperate, she'd marry me, too. \n\nSeriously. Fucking marriage material right there. \n\n\"Sometime in October,\" Mike answered. \n\n\"Oh yeah, that night we got Cory drunk,\" JJ said. \n\n\"We were tryin' to get him thoroughly shit-faced,\" Paul said. \"But, 'Rain had to ruin our fun and take him home.\" \n\n\"You almost had them throwing down in Lith-fuck-Mitch's hallway.\" \n\n\"Cory can be a handful when he's drunk,\" I said. \n\n\"Like you're any better,\" Berta said. \n\n\"Remember when he and Preston decided to hook Marina up with Delia Reid?\" Luz laughed. \n\n\"Oh my God,\" Berta laughed. \"That.\" \n\n\"Do I want to know?\" JJ asked. \n\n\"From what I hear,\" Gio said, \"Cory started a four-way make out for 'research purposes'.\" \n\n\"When the rest of GSA found out about that, some of them insisted they get a smooch in on him, too,\" I said. \"I think he kissed half the people at that party before we had to leave.\" I paused. \"Come to think of it, he was drunk for that, too.\" \n\n\"You called him LipService for days,\" Gio said. \n\n\"Our boy does seem to lose all sense of shame when he's drunk,\" Berta said. \n\n\"That...is not entirely inaccurate,\" Efrain said, grinning as he and Cory walked in. \n\n\"That is completely inaccurate!\" Cory argued. Efrain ducked the pot holder Cory tossed at his head and patted his cheek before calling us to dinner. \n\nCory's eyes narrowed at his retreating boyfriend's back. \n\n\"You could cut him off until he behaves,\" Lacey suggested to him as we made up our plates. \"Do it to Clint all the time.\" \n\n\"Only when she can't think of a decent comeback,\" Laurel whispered to me. \n\n\"I could,\" Cory said. \n\n\"You could,\" Efrain said. \"But, a couple beers on an empty stomach, and I'd have to pry you off with a crowbar.\" \n\nI cut in over Cory's retort. \"As entertaining as this little show is, I understand Drew has something else planned.\" \n\n\"Oh, yes, gimme a moment.\" Drew set aside his plate and began connecting his laptop to the TV. \n\n\"What is it?\" Laurel asked. \n\n\"He's been kinda secretive about it,\" Meggie said. \"Anytime I asked, he'd just say you'll see and start giggling.\" \n\nIndie grinned, seemed he was in on the secret, too. \"Twilight.\" Everyone turned to him in surprise. \"He's got the entire Twilight saga.\" \n\n\"You can't be serious,\" Paul said. \n\n\"Completely serious,\" JJ said\u2014apparently the three of them had colluded on this little venture. \n\n\"So, guys, are you 'Team Edward' or 'Team Jacob'?\" Drew chuckled. \n\n\"I dunno, man,\" Indie said. \n\n\"Haven't quite decided who I'm rooting for, either,\" JJ added. \n\n\"I know, right? Such a hard choice,\" Drew said. \n\n\"I think it's a little like chicks who cheer for their boyfriend's favorite teams because they don't know shit about sports,\" JJ mused. \n\n\"Good point,\" Indie said and turned to me. \"Hey, Preston, are we 'Team Edward' or 'Team Jacob'?\" \n\n\"'Team Real Man',\" I said. The other guys chuckled, more at the sounds of female outrage than the comment itself. \n\n\"This better not be one of those parodies,\" Lacey said. \n\n\"Not at all,\" Indie answered as Drew pulled some DVDs out of his bag. He'd brought all five movies, and flashed the discs at us, just to prove that he hadn't switch out the DVDs as a prank. \n\nGio's eyebrow climbed up his forehead. \"You're really going to make us watch Twilight?\" \n\nDrew, Indie, and JJ smiled, the only people with penises in the whole room who were excited about watching the chosen movie, and I got a strange feeling about the whole thing. Indie and Drew fiddled with the remotes and HDMI cables until his desktop appeared on the screen. \n\n\"Oh my God,\" Meggie groaned. \"I should have known.\" \n\n\"What?\" Drew said, all innocence-made-flesh. \n\nShe pointed at an open window on the screen. \n\n\"What the hell is Rifftrax?\" I said. \n\n\"You'll find out soon enough,\" Indie told me. \n\nIt took a little bit to get the timing on the DVD and the Rifftrax track just right. And when he did... \n\n\"This is ruining the movie,\" Lacey whined after less than five minutes. The movie commentary was loud enough that you could just barely hear the dialogue over (which by itself had vastly improved the quality of the film). She huffed about turning the damn thing off, but she had been out-voted by every guy in the room, and even some of the girls got into the fun. \n\n\"That look is from the 'guy-you-alert-the-flight-attendant-about' collection,\" Cory laughed. \n\nLacey continued to complain until she finally got into it enough to propose the Line game. Anytime the actors stared at each other for no apparent reason and one of the Rifftrax guys said \"line\", we'd take a shot. This soon expanded to include other repeated phrases, like \"Whoa! Two dogs doing it!\" and \"I'm Harpo\". We did double shots whenever they said \"L-l-l-l-l-l-l-l-l-l-ladies\". I wasn't pleased that Efrain and Indie made Cory and me take sips of our drinks instead of shots, but we were still decently buzzed by the middle of the second movie. \n\nI was glad, however, for the liquid courage that helped Efrain and Cory get comfortable. They'd been a little stiff when their teammates showed up, and seemed a little awkward just sitting next to each other on their side of the couch. But, at some point after we'd eaten dinner and had demolished Laurel's cupcakes, Cory hugged his knees up to his chest, and a little while after that, Efrain hooked his arm around said legs, which gradually fell over into his lap. By the time Drew started up New Moon, Cory had curled himself around Efrain with his chin resting on his shoulder, and Efrain had his fingers under Cory's pants leg idly stroking his ankles. When he thought no one was looking, Cory kissed Efrain's shoulder, and Efrain returned the favor against Cory's temple. \n\nOf course, none of this went unnoticed, least of all by their teammates. I caught Denholm discretely tapping Paul's shoulder and jerking his head over at Wolfie and Kitten. Paul's eyebrows lifted at the sight, but then he got JJ's attention. A discreet picture was shot, most likely to be distributed to the rest of their little group. \n\n\"I still don't see why chicks like this so much,\" Gio said, as the credits rolled. \"Bella and Edward are boring as fuck.\" \n\n\"Can't believe they dated,\" Laurel said, slight note of disgust in her voice. \n\n\"He could do so much better,\" Lacey responded. She was killing me with that vocal fry. \n\n\"He's now married to that one chick,\" I said. \"DSL hairbondage, or whatever her name is.\" Paul giggled when he realized who I was talking about. \n\n\"FKA twigs,\" Cory corrected. \n\n\"FKA whogivesafuck,\" I said. Their football bros got who I'd meant. Besides, I think we all liked my version much better. \n\n\"Please tell me you have more of them,\" Denholm said to Drew. I think a few had been planning to eat then head out, but became too captivated by the movie marathon to leave. Cheers went up when Drew pulled out three more DVDs in answer. \n\n\"We cool for one more?\" He directed the question to the room, but waited for Indie's affirmative to continue, it being his living room and all. \n\nI caught Luz whispering in Paul's ear before he spoke up. \"I think I'm going to call it a night,\" he said, and then oh-so-casually added, \"Berta, would you be cool giving JJ a ride home?\" As soon as she nodded, Paul and Luz were off the couch and out the door. \n\n\"Man,\" I said. \"That wasn't obvious at all.\" \n\n\"I wonder how long it will take them to figure out that Cory set them up,\" JJ mused. \n\n\"That was a set-up?\" Denholm said. \n\n\"Yup, he called me up the other night and said 'Tell Paul you need a wingman, and make sure he drives.'\" \n\n\"Luz said that if I was going to score booty for Marina and Berta, I needed to get her laid, too,\" Cory stated. The innocent shrug and matter-of-fact tone simply highlighted that this hadn't been a simple favor for a gal pal. \n\n\"Oh my god, Cory.\" I narrowed my eyes at him. \n\n\"What?\" \n\n\"You shady, shady bitch.\" \n\n\"She gave me a shopping list, which had Paul, Mitch, and Adrian right up at the top,\" Cory protested. \"I just happened to pick Paul.\" \n\n\"You used that poor, misguided ho-bag to take out your rival!\" \n\n\"I did no such thing!\" \n\n\"That is disgustingly adorable,\" Denholm muttered. \n\n\"Holy fuck,\" Efrain laughed. \"Did 'Butthurt Baker' really pose that much of a threat?\" \n\n\"I wonder if they're still doing the 'line' bit in this one,\" Cory said, attempting to change the subject rather than try maintaining his innocence. Efrain reached over and affectionately mussed his hair. \"What?\" \n\nGod, Efrain's pancakes were good, but they weren't that good. \n\nHis roast, on the other hand. I'd shank a man for that roast. \n\nOf course, I knew to keep this on the down-low. Who knows what guy Cory would hook me up with to get my ass out of the way if he thought I was a threat. \n\n~*~*~*~ \n\nEfrain's fingers brushed along my jaw, back to thread into my hair. The small lamp on the nightstand provided enough ambient light to make his hazel eyes gleam. \n\nHe pulled me to him, to his lips, tongue sweeping my bottom lip, sliding into my mouth. I melted into his body, my hands at his hips, and gave into the urge to rub myself all over him. The length of his gorgeous cock strained against his black boxer briefs. I wasn't able to see it, but I could still feel it press into my own straining member. The jury was still out on whether the two layers of cotton between us heightened my arousal, or merely impeded my satisfaction. \n\n\"You really are like a cat sometimes.\" He caught my bottom lip between his teeth and gave it a delicious tug. I nearly purred when he pulled my head to the side and trailed little licks and nips along my neck. He hadn't bothered to shave at all this week, and the sensation of stubble rubbing on my skin was a reminder of his attentions. A bite landed at just the right spot along the juncture between my neck and shoulder, sending shivers up and down my spine. My knees buckled, and I figured I'd fare better on them. \n\nI slid down his body, working my tongue over any bit he'd let me at. Along the collarbone, between just barely furred pecs, around the nipples, over his ripped lats\u2014down I went, hooking my fingers over his waistband and taking his boxer briefs with me. His dick snapped back up and nearly slapped his stomach once freed. His ripped as fuck abs, obscenely defined Adonis belt, and tidy little happy trail all pointed to that one magical spot, but I took my time getting there. He growled impatiently, flexing his fingers in my hair and trying to move my head where he wanted it, but I was still stronger than him and able to proceed how I wanted. \n\nIf he was going to call me gatito, I might as well give him a little kitty tongue bath. \n\nI rubbed my cheek against his thigh, watching his dick twitch practically in time with the background music. I looked up long enough to make sure he was watching before I stuck out the tip of my tongue and stole a little taste of his balls. Efrain growled my name, a note of warning in his voice. As much as he liked to tease, he hated to be teased. Any more of my nonsense and I was going to get it later. \n\nSo, I lapped at his nuts a few more times, and got a shuddering breath on each pass. \n\nI really wanted to get it later. \n\nEfrain tightened his grip and pulled my head back. He smiled. Granted, it was that I'm making a list sort of smile, but a smile nonetheless. With our eyes locked, I licked up the underside of his cock, from the root up, and wrapped my lips around his head. \"Fuck,\" he moaned while my tongue ran circles around his cock. The corners of my mouth pulled up in the closest approximation of a smile I could get at while still working my lips and tongue further along his shaft. \n\n\"Goddamn, I love watching you suck my dick.\" \n\nHe had loosened his fingers in my hair, and simply palmed the back of my head. His eyes darkened, panting breaths parted his lips, as his hips rocked his dick closer to the back of my throat with each thrust. Pre-cum mixed with the taste of his skin, and I moaned. I wrapped my fingers around his base, but he pulled back before I could milk out another drop. \n\n\"I was having fun with that,\" I protested. \n\n\"You still have to pay for the fun you had earlier,\" he said, pulling me to my feet and backing me toward our bed. \"I fully intend to take it out on your ass.\" ",
        "My underwear hit the floor, and my back hit the mattress. Only a few moments had been spared to shove some pillows under my hips. His tongue took over my mouth once more, while his fingers made their way down, gripping and stroking my cock, opening my ass, effectively cutting off the chit chat. I wasn't quite sure how I went from playfully looking up at him while tonguing his \"meatstick\" to writhing in a whimpering mess of please-fuck-me, but it wasn't like I had the presence of mind to think of anything beyond getting my legs around him. Efrain's fingers thrust deeper, taking every last secret he'd mastered in our time together and lording it over me. Our heated kisses saved me the embarrassment of the incoherent begging I'd be doing if my mouth hadn't been otherwise occupied. \n\nPlaintive whimpers became my only means of communicating my needs. I needed his cock in my ass. I needed his hands all over my body. I needed more\u2014deeper, harder, faster. I needed him, but not even thrusting my hips was getting the point across. Either he didn't understand or was ignoring me, which made me even more desperate. I whined louder as he drove me on, and I didn't need to open my eyes to know he was smiling. \n\nEfrain broke the kiss and whispered in my ear, \"Think you can be quiet, gatito?\" I nodded. \"Good boy,\" he said and positioned his cockhead against me. His hips moved just enough to put pressure on my hole until his head popped in. \n\n\"Oh God,\" I moaned. \n\n\"Quiet,\" he said, \"or I'll have to stop.\" \n\n\"Bullshit,\" I said. It drove him wild when I got loud; why would he want me to be silent? \n\nHe lifted his head and cocked his eyebrow. His hips shifted back and his dick slipped out. I whined at the loss. Efrain's lips were once more at my ear. \"Hush, gatito.\" He pressed forward again, pushing his head past my inner ring, and my back arched off the bed. I clamped my mouth shut and let him move deeper. For whatever reason, listening to him alternate between shushing me, whispering \"good boy\", and moaning about my tight ass made it more difficult to keep silent. My fingers dug into his arms as I shook from the effort. By the time he bottomed out, I was panting hard. It was strange\u2014before Efrain, I seldom did more than grunt and occasionally moan. Now, only concentrated effort kept me from waking up our roommates. \n\nAmazing how quickly he'd retrained my body. \n\nEfrain's hips circled, and I gasped every time he ground against my rim. The whispers continued at my ear\u2014hushing me and backing off when I moaned, and praising me and building up when I whimpered\u2014developing into a torturous positive feedback loop as the combined effect of his circling hips and tantalizing murmurs drove me further. The more he talked, the more I quivered from the effort required to not vocalize\u2014which led to more talking, and more quivering. \n\n\"'Rain, please,\" I panted. \"I need...\" I trailed off in a moan, unable to even finish\u2014the sensations having amplified to the point that it was all I could do to wrap my legs around him. This was almost as bad as holding back an orgasm. \n\n\"Don't want to keep quiet for me?\" he asked. \n\nI shook my head. \"Can't.\" \n\n\"You can't?\" A wicked grin crossed his face. \"Then, I guess this would be a bad idea,\" he said, and before I could react, pulled back his hips and thrust into me hard and fast, clapping his hand over my mouth just as I cried out. He pulled back and thrust into me again, this time hitting the fuck out of my prostate and my back came up off the bed. \n\n\"Oh shit!\" I cried out into his hand, my body so keyed up that I had no control over pitch or volume, both of which went high and wild as he repeatedly hammered my ass. He'd joked about not beating me enough, and seemed to be correcting the situation by pounding me into submission via my prostate while all I could do was lay back and take it. \"Oh fuck!\" \n\nMy nuts hugged up tight at the base of my dick; I was on the verge of cumming, but couldn't quite get the friction I needed. I tried arching my back to grind into his stomach, yet even that wasn't enough. However, when I reached between our bodies to grab my dick, he slapped my hand away. \n\n\"You'll cum when I say you can,\" Efrain said, slowing back to that maddening circling that left me twitching under him. \"Lo entiendes, gatito?\" \n\n\"I understand,\" I panted. His mouth slanted over mine, and his tongue forcefully dug into my mouth. I whimpered under the onslaught until he pulled back. \n\n\"Hands above your head,\" he said, and I complied. \"Good, now keep them there.\" \n\nHe sat back on his heels and moved in long, rolling thrusts. Every muscle in his body engaged in those strokes, from his hard thighs, to his abdomen and chest, and into the defined arms hooked under my legs. I stared at the rippling play of his lats and six-pack. One of the more lucid parts of my brain wished for the mirrors Preston had told me about. He'd included an almost play-by-play of his and Indie's adventures in the bathtub, and those mirrors sounded like the only way I'd be able to watch 'Rain's spine, and the full array of his back muscles, articulate under his smooth olive skin. \n\nAnd, God help me, I wanted to know what his ass looked like as he fucked mine. \n\n\"Hey!\" Efrain snapped. He grabbed my dick and slapped it against my stomach a couple times. I groaned; he'd pulled me closer to the edge between his thrusts and those slaps, but not quite enough to push me over. My fists clenched, driving my nails into my palms. \"Eyes up here.\" \n\nHe found his stride, a pace that could keep us both on the cusp of cumming, right there on the brink, then let his hands roam. He pinched my nipples, manhandled my sack, slapped my dick on my abs some more. When Efrain grew bored with watching me quiver and whimper from those attentions, he shoved my thighs to my chest and as far apart as they'd spread, then braced himself on them and drilled into me from another angle. The toe-curling grind against my prostate increased, right along with my need to get loud. I broke his order to keep my heads above my head long enough to grab a throw pillow and shove it in my mouth. \n\n\"Oh, so that's the spot?\" He sped up, and I let loose. I bit down on the throw pillow and cried out for all that I was worth. \"Goddamn,\" he moaned, and his rhythm intensified. I needed to cum so bad my dick hurt, and him pounding me harder and faster made it worse. I met his gaze and did my best to plead with my eyes. \"Fuck, man.\" A shiver slid up his spine, and I soon felt his fist around my cock. \"Holy fuck!\" A few rough jerks of his hand, and I came hard enough to send cum flying at my face. I was too caught up in my orgasm to notice that he'd stopped fucking me until his grip on my sensitive dick tightened and his finger dug into the back of my thigh hard enough to bruise. \"Oh my fucking God.\" His hips ground into me, and his whole body shook. \"Fuck!\" His dick swelled inside of me and, with a low growl, his climax hit us both. He cursed and I whined as we rode it out, his hips working until we were both able to stop shaking. \n\n\"Damn, that was intense,\" I said. \n\n\"Yeah,\" he said with a small laugh. \"Trying to edge you wasn't the best idea.\" \n\n~*~*~*~ \n\nI looked down at the head resting on my chest, the body flung across mine, the leg hooked over my leg. I'd rode his ass until he couldn't see straight, then rode his dick until I couldn't, and despite doing most of the work myself, he was the one who got worn out. I ran my fingers through Cory's sandy blond hair and listened to his deep, even breathing. At some point in the night, he'd roll off of me, or I'd roll out from under him, and we'd take up on our respective sides of the bed, only to return to this position the following morning as we woke up. \n\nTo think that I'd be here, holding someone I cared about, when only a few months ago the mere suggestion of cuddling would send me running. Don't bring them home. Don't spend the night. \n\nAnd then, Cory happened, and things just changed without me realizing it. \n\nMy fingers trailed over his neck and shoulders, eliciting a sleepy purr. His hand twitched slightly on my chest when I stroked over his arm with my other hand. My eyes had adjusted to the dark enough that I could make out the basic shapes around us; my mind filled in the rest of the details in our bedroom. Our computers sitting on the desk, his brightly striped Mexican blanket at the foot of the bed, his Stetson hanging on the bedpost, the wood tray in which he laid out his accessories. I looked at the shapes now dotting the wall. \n\nI'd never bothered with pictures or posters in the time I'd lived with Indie, but Cory changed that, too. He'd brought pictures of his family and friends back in Texas, and had added to the collection since he'd been in Virginia. Some sat on the various furniture surfaces, and some hung on the walls. Preston made him put the posters in frames because he felt it looked less \"tawdry\". I couldn't care less either way. \n\nInstead, my eyes tracked to Cory's Christmas presents. Apparently, we'd both lied about \"no presents\". He fucking loved his tokidoki Tigers, and I was quite pleased with myself that he loved them more than the Chucks with the Pusheens on them. (Take that, you pizza-eating fuck!) He put them on as soon as he opened the box, and made me put on mine. Then, he started doing cute shit, and I was fucking lost. \n\nWhich was the sole reason I got all weird and fuckin' melty when he gave me my presents. \n\nThe bracelet was fucking cool\u2014these dark-brown braided leather cords that wrapped around my wrist set with a long flat band of jet carved with stylized wolves. Indie had snagged my arm the other day to give it a once over, but he and Mike agreed that it was inspired by Native American designs and thus wasn't cultural appropriation. Not that I gave a fuck. All that mattered was that I could make Cory do cute shit when I wore it. I liked it. He liked that I liked it. I liked that he liked that I... \n\nFuck. \n\nThinking about his good boy grin and those goddamn dimples made my dick too hard and my head too stupid to function, and trying to refocus on his other gifts just made it worse. The dark shapes that I could just barely make out on the walls and whatnot. In the beginning, they were all his pictures, but now I had some of my own mixed in. He'd gotten ahold of them somehow (I think my mom was involved), so there was now a small framed picture of Juaquin, Zoe, and me wearing parts of our father's Navy uniform, next to the one with Connor Jr., Cameron, Caiden, and him in a field of bluebells that matched their eyes. Pictures of me and my friends joined his. He'd even ordered a print of a picture of us with the Brain Trust that had appeared in the newspaper ages ago. Preston had helpfully informed me that Cory had the newspaper clipping up in his room before we'd even started seeing each other. \n\nBut, the best part was the pictures of just me and him. \n\nSelfies we'd taken over the last few months, the one I'd shown the guys when we came out to them, this picture of the two of us asleep on the couch that Preston had most likely snagged. Cory said that since we couldn't really post the real \"us\" out there, he wanted us to be real here. We'd put everything here, on these walls, since we weren't able to show them on our Facebook walls. \n\nI thought about those pictures, and thought about the man asleep on my chest. I kissed the top of his head and enjoyed the feel of him snuggling closer under the covers. \n\nI had all these plans for myself and my life, none of which included relationships or coming out to my friends and family. And then, Cory happened and my plans went out the window. \n\nI still wasn't quite sure where this put me, but I think I could be okay with that. \n\n~*~*~*~ \n\nTracklist (for the curious) \n\nCee-lo Green - Closet Freak \n\nLeo Moracchioli - Let it Go (check out his metal covers of Hello and Feel Good, Inc, or just all of them because he's amazing. Also, dude is like a Bizzaro World middle-aged Norwegian breeder version of Indie.) \n\nYelle - Ba$$in \n\nD'espairs Ray - Garnet (Efrain doesn't reference it directly, but it's a decent example of visual kei) \n\nFKA twiggs - Pendulum \n\nFKA twiggs - Papi Pacify (the weird video Preston mentions) \n\nJosh Gad - Man Up (Although, I much prefered AJ Holmes' version)"
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "twink",
        "interacial couple",
        "comedy",
        "anal sex",
        "fingering",
        "bdsm",
        "ssc"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/efrain-and-cory-ch-29"
}