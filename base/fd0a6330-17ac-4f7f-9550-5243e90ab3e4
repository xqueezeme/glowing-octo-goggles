{
    "title": "Work The Problem Ch. 05",
    "pages": [
        "Author's Note: No smut in this chapter, but there is plenty of violence and a bit of gore.\n\n_____________________________\n\nFirst-Paw Glenn Fletcher was beginning to despair. His line of militia were doing what they could against the horrors beyond the ridge, but it wasn't enough. Anyone that stuck their head up too far got cut apart by the red beams of the invaders. Those large feathered creatures had taken apart the barn of Hadley's farm. Every time Fletcher poked his head above the ridge he saw more of them lining up. They were clearly getting ready to make a push up to the ridge, and when they did Fletcher had no illusions that his little force would be able to keep them back.\n\nAnd then the second portal had formed behind their position. Whoever these invaders were, it was clear that they were going for an envelopment. But so far nothing had come through this new portal except for a couple of small wheeled tractors. The first tractor had been shot, but then was quickly followed by a second with a truce-flag attached to it.\n\nMaybe it was a trick. Whatever it was, he decided to ignore it for now. Fletcher's big blue eyes shifted back to the ridge. He wriggled forward again and just barely stuck his eyes over the ridge, careful to keep his long ears tucked flat against the back of his head.\n\nThere was now a line of the big feathered bipeds, and they were busy moving a bunch of metal crates out of the glowing-edged hole where Hadley's barn had once stood. The crates were being stacked in neat patterns around the portal. Fletcher figured this was as good a time as any to take a shot, and he edged his rifle just over the ridge. He took careful aim at one of the invaders near the portal, breathed out, and squeezed the trigger. He saw his bullet spark off of the thing's armored head, and he ducked back down as several red beams fired right through the space where he'd been.\n\nAs he slid back down, his radio crackled. A deep and unfamiliar voice came from it. \"To all friendly forces, all friendly forces, this is Brigadier General Darren Gossett transmitting in the blind, repeat transmitting in the blind. Please respond, over.\"\n\nFletcher snatched up his radio and held it to his head. \"Who is this? Clear this channel!\"\n\nThe voice continued. \"Sir, we stand ready to assist. This transmission is from the portal behind your position. The portal with the robot. Over.\"\n\nHe looked back at the little vehicle with its blue flag. Fletcher felt a little bit of hope mixed with fear. \"How do I know your intentions?\"\n\nA new voice, higher in pitch and feminine, came on the radio. \"This is Holly Arnbock. I'm one of you. I think I recognize some of the terrain there. Are you near Sullivan City?\"\n\nBy now Fletcher was totally bewildered. The name Arnbock was familiar for some reason. At first he thought about denying his location, but then realized that, whoever this was, they could punch a hole through reality and reach his world. If this new group was hostile there was nothing he could really do. \"Yes. We're at Hadley's Farm.\"\n\n\"I know where that is!\" said Holly's voice. \"I'm from Sullivan. I went missing over a year ago.\"\n\nHe suddenly realized where he'd heard the name. \"Yes, I remember the report. Are you with those firing at us? Can you call them off?\"\n\nGossett's voice came back on. \"Unfortunately not, sir. As I said, we stand ready to assist you in fighting them. We're sending Ms. Arnbock through the portal, so please tell your men to hold their fire.\"\n\nFletcher decided that he'd at least risk that. \"All right. But just her to start with.\"\n\nHe stared at the distant portal in astonishment as a gray furred shape stepped through it. Her ears rose up and she gave him a wave. She had a little box in her paw, and held it up to her mouth.\n\n\"Do you believe me now?\" said her voice through his radio. \"Seriously, we're here to help. Please let them come through. And don't worry. They're big, but they're friendly.\"\n\nFletcher shook his head in amazement. \"They? All right, Ms. Arnbock. I'll trust you for now.\"\n\nHe was astonished again as pair of huge forms emerged from the new portal. They were easily half-again as tall as Holly and much broader. The pair wore strange patterned clothing and had many implements strapped to their bodies. One of them carried what he recognized as a rifle, but it looked more complicated than any gun that he was familiar with.\n\nHis radio crackled again. \"We're going to come up there, is that okay?\"\n\nWell, at least they didn't have feathers. \"Yes, come on up.\"\n\nHolly began sprinting towards him as the two big creatures followed more slowly. As they got nearer, he realized they looked a little familiar, like apes he'd seen in the zoo. But they had almost no fur and sported oddly bulging foreheads.\n\nThe first of the creatures to reach him was the one carrying the rifle. He slid to a prone position next to Fletcher, and made an odd gesture where he touched his forehead with the edge of his hand. \"Lieutenant Keith Jenkins, United States Army, 3rd Battalion, 75th Ranger Regiment.\"\n\nFletcher was in informational overload, so he just let the words wash over him. It was clearly a greeting of some sort. \"First-Paw Glenn Fletcher, Sullivan City militia.\" He stuck out a paw and was happy to see the ape-being take it and give a polite shake. At least that gesture seemed to be a common one.\n\n\"What's the situation, sir?\" asked Jenkins.\n\nFletcher shrugged. \"Really fucking bad? We received a call from Farmer Hadley that something was taking apart his barn. The first responders were shot at with some kind of beam weapon. Whoever they are, they're making a stockpile on this side of their portal. And they look like they're getting ready to advance over this ridge and towards the city.\"\n\nBy now the other ape-human had reached them. \"Ned Chiang,\" he said with a little nod of his head. He pointed up to the ridge. \"Who are these guys?\"\n\n\"Your guess is as good as mine,\" said Fletcher. \"They're big, even bigger than you. They have two legs with clawed feet and lots of feathers all over 'em. They're wearing some sort of body armor. That's as much as we're able to see. If we poke our heads up for too long we get shot at.\"\n\n\"We need eyes up top,\" said Jenkins. \"Sir, with your permission we have quite a bit of materiel on the other side of our portal, including recon drones and heavier weapons.\"\n\nFletcher stared in surprise at the ape-human. \"Why do you need my permission?\"\n\n\"This is your world, sir. Us monkey-boys wouldn't take kindly to someone just showing up and moving in before asking 'Mother May I'.\"\n\nHolly put her paw on Fletcher's arm. \"They can help, Glenn. I've been in their dimension or timeline or whatever for seven months. They've done nothing but try to help me, and they've got some pretty advanced technology.\"\n\nFletcher felt a little despair at having to make this big of a decision. He was a militia leader, not a politician. But he was the man on the spot, and he knew that this is what he'd signed up for when he'd taken the job. \"Okay. Bring whatever and whoever you can.\" He gave another peek up to the ridge. \"I figure you have about thirty minutes before they move.\"\n\n_____________________________\n\nSergeant Cal Forrester was in full-on 'Get 'er done' mode. \"Right, people,\" he said. \"I want a bucket-brigade line set up through the portal. The goal is to get as much shit through that hole as fast as we can, ya got it?\"\n\nThere was a chorus of 'yessirs' and the platoon shuffled itself into a long line. The first of them through the portal was Corporal Leslie Nowak, and as she stepped through she looked back and saw Grace's pale face among the onlookers. She gave the doctor a smile and a wink, then turned away. Going through the portal felt oddly normal, just like stepping through a doorway. Leslie half expected to feel some kind of vibration or electric shock, but there was no strange feeling at all. One moment she was standing on metal flooring, and the next she was standing in a grassy field with a bright sun overhead.\n\nLeslie and the others took up their positions and the next few minutes was a scene of controlled chaos as a great many hard-shell plastic cases were shuttled through the hole and stacked neatly. As she worked, Leslie looked up to the ridge and saw that Holly and Ned were up there along with the L.T. and a good number of the rabbit-people. The latter were all dressed in some sort of black-and-red outfit that she supposed was their militia's uniform. They all hugged the slope to keep out of sight of the ridge.\n\nLeslie felt a sudden pang of fear at seeing her friends up there. She wasn't afraid for the L.T., he was one of God's own soldiers who could walk through an inferno without getting so much as singed. But Ned and Holly were civvies, and moreover they were her friends. She should be up there in the front lines, not them.\n\nSergeant Forrester bounded through the portal with a big plastic clamshell case in both hands and ran up to Leslie. \"Corporal, you're qualified on a Raven?\"\n\n\"Sure thing, Sarge,\"\n\n\"Then gear up and follow me. Morillo, you and Rockatansky get one of the mortars unpacked and get up there ASAP. We have a couple more mortar teams coming through as well.\"\n\nShe slung her rifle and followed the big man as he went at a dead run towards the ridge. Once they were also hugging the slope leading up to the ridge, she gave the civvies and the rabbit-dude they were talking to a friendly wave. \"Hey guys,\" she said casually.\n\n\"Hey Leslie,\" said Holly, and gave her a quick smile. The sergeant set down his case and gave both the rabbit-dude in charge and the L.T. a quick nod, then opened the case.\n\n\"You want me to fly or throw, Sarge?\" asked Leslie.\n\n\"Fly. I'm no good at video games.\" The case contained the crucifix-form of a Raven reconnaissance drone along with its controller. Leslie plucked the boxy controller out of the case and with practiced ease turned it on and ran through the drone's startup procedure.\n\nThe screen on its front lit up, and the rabbit-dude started back a bit. \"Whoa,\" he said.\n\nHolly gave a little smile. \"I told you. They've got stuff we haven't even thought of yet.\"\n\nMeanwhile, the sarge had moved back away from the ridge with the Raven. He looked over at Leslie, and upon her nod he heaved the drone into the air.\n\nLeslie didn't even look up as he did so. All of her attention was on the screen in front of her, and her hands moved over the small joysticks as she flew the small drone parallel to the ridge.\n\n\"I'll bring it around from the side,\" she said. \"Less chance of them spotting it.\"\n\nThe sarge had now rejoined them. \"Good. Your feed is going straight to the eggheads on the other side, so hopefully they can make something of it.\"\n\nShe felt the rabbit-dude edge in closer to her as he watched her screen with fascination. Leslie had to resist the urge to reach over and give his furry head a good fondling. These guys were just too damn cute and fuzzy for their own good.\n\n\"This vision is from a camera on the flying machine?\" he asked her.\n\n\"Yep,\" replied Leslie. \"Sorry, can't talk too much. Gotta fly 'er.\"\n\nThe fuzzy dude nodded and kept his eyes glued on the controller's screen.\n\nLeslie flew the UAV around and over the ridge, and they saw their opposition clearly for the first time.\n\nThe attackers were big, at least a head higher than any human and much longer. They looked a little like the 'raptors' that Leslie had seen in certain movies about badly-designed theme parks. But these particular dinosaurs were covered in feathers and body armor. Their clawed wing-arms were busy stacking crates and unpacking various unfamiliar but nasty-looking weapons.\n\n_____________________________\n\nOn the other side of the portal, there was a collective gasp as the video feed from Leslie's controller was displayed on the big screen.\n\n\"Those look like velociraptors,\" mused John Dengar.\n\nArnold shook his head. \"Dinosaurs have jaws and teeth. These guys have beaks and their tails are just feathers. My best guess is that they're descendants of one of the species of South American terror-bird. They're extinct in our timeline, but maybe they didn't die out in their home dimension.\"\n\nJohn nodded. \"I'll take your word for it.\" He looked up at their own portal, where more soldiers were piling through. \"If they have portable beam weapons, then their power storage tech is a lot better than ours.\"\n\n\"Yeah.\" Arnold sounded as upset as John felt, and Daisy gave a little whine upon sensing her human's stress. The dark-skinned man leaned forward and his eyes narrowed. \"Did you just see a pulse in the primary power feed?\"\n\n\"A little,\" admitted John. \"But it's still within safe limits.\"\n\nArnold didn't respond, and his eyes went unfocused. By now John knew not to speak to him; that expression meant that Arnold was 'in the zone'. After a bit of rumination, Arnold finally spoke. \"We might be getting a resonance from their portal. Let me know if you see any more fluctuations.\"\n\n\"I'm going to start charging up our capacitor bank again,\" replied John. \"Just in case.\"\n\nOn the screen, one of the feathered nightmares looked up at the camera. It raised a complicated-looking metal tube, and then the drone's video feed suddenly cut out. Just before the screen went dark, John saw one of the enemy also moving up towards the ridge.\n\n_____________________________\n\nHolly filled in First-Paw Fletcher on the basics of what had happened to her. Beside her Ned and Leslie used one of his maps to mark the location of the enemy's portal as well as take notes of how many of the enemy terror-birds were on this side of it. Leslie cursed as her drone's feed went dark.\n\n\"Bogey on the ridge!\" she called out. \"Eyes up!\"\n\nAll of them looked up towards the crest and saw a cruelly-curved beak protrude over the ridge line. It was quickly followed by a helmeted head out of which glared two yellow eyes. A metal tube came up into view...\n\nAny mischief the thing was planning was quickly and literally shot down as Leslie, Jenkins, and Forrester began shooting in quick three-round bursts. Holly pressed herself down against the ground and noted that Ned was also hitting the dirt. Fletcher, on the other paw, was also firing at the shape with single aimed shots. In a few seconds the thing had ducked back out of sight to dodge the hail of metal.\n\nHolly then saw Fletcher's eyes light up as several groups of ape-humans set up behind them. Each group was clustered around a metal tube that tilted towards the ridge.\n\n\"Please tell me those are mortars,\" Fletcher said to Lt. Jenkins.\n\nThe lieutenant gave a rare smile. \"Yep.\"\n\nFletcher sagged a little in relief. \"Thank Kas for that. We can't get any decent line-of-sight fire on those bastards.\"\n\nJenkins' radio crackled. \"All set up, sir,\" said a tinny voice. The lieutenant made another quick scan of everyone's position, then held up the radio.\n\n\"Fire for effect. HE rounds to start with.\"\n\nHolly flinched a little at hearing a series of loud foomps behind her, That was quickly followed by a bone-chilling series of descending-pitch whistles which were followed by a louder group of explosions sounding past the ridge. Her fur stood on end as the loud crashing noises were followed by multiple high-pitched shrieks that could not have come from any normal throat.\n\nSergeant Forrester grinned, and it was the humorless expression of a giant ape getting ready to pull off someone's limbs. \"Sounds like we done pissed 'em off, L.T.\"\n\nJenkins' face was serene, and his voice was now almost drawling. \"Yeeeep. Let's keep up the skeer, as they say.\" He raised his radio to his mouth as the foomps and explosions continued. \"Switch to Willy Pete for two rounds each team, then back to HE.\"\n\nSeveral bright flashes now came from beyond the ridge, and the inhuman screaming seemed to go up an octave.\n\n\"What's the plan, then?\" asked Fletcher.\n\n\"We let 'em burn and explode for a bit,\" replied Jenkins. \"In the meantime, we get some heavy machine gun teams up to the ridge while they're keeping their heads down and then we shoot up everything moving. I want anything coming out of that portal to be walking into a stream of bullets.\"\n\nHis radio crackled again. \"Uh, sir? We have a situation at our portal. Unauthorized visitor.\"\n\nJenkins looked back, and Holly followed suit. She was surprised to see a familiar bear-like shape step through the portal.\n\nThe lieutenant sounded pissed for the first time that Holly could remember. \"What the shit? Okay. Sergeant, you keep those bastards' beaks down. Holly, you're with me. You're the closest thing we have to an ambassador.\"\n\n\"If that's the case, then I need a pay raise,\" replied Holly.\n\nJenkins laughed. \"Welcome to the club.\"\n\nShe sprinted back towards the portal, and realized quickly that she was fast enough that she had to slow down to let Jenkins keep up with her. Sure enough, as they arrived they saw Yuri Vassili Sergeyevich looking around in bemusement at the uncertain soldiers facing him. Somehow he'd found an armored vest big enough to fit over his bulk.\n\n\"Ah, Miss Arnbock!\" he called out jovially as she skidded to a stop. \"Requested posting to this side of portal. Request was granted.\"\n\nJenkins ran up behind her, looking pissed. \"Dammit, Yuri, this area is hot! I can't guarantee your safety.\"\n\n\"Not here as ambassador. Here to help, even if help is mostly symbolic.\" Yuri tapped a thick finger against his armor vest. \"Besides, have plenty of protection. Just need weapon.\"\n\n\"All we have are some spare M4's,\" replied Jenkins. \"We don't have any Russian gear...\"\n\nHe trailed off as Yuri stepped over to a nearby open crate and plucked out a carbine. The Russian's fingers danced over the gun, checking it then pulling out the magazine to check that as well. He slammed the magazine back in and cocked the rifle in a practiced manner. \"Should work okay,\" he grunted. \"Not as robust as Kalashnikov, but suitable.\"\n\nJenkins' eyes narrowed. \"Let me guess...former Spetsnatz?\"\n\nYuri shrugged and gave a cheeky grin. \"Mmmmmaybe. Anyway, we now go kill some big nasty birds, da?\"\n\n\"Oh fuck yes.\" Jenkins turned to the other soldiers. \"How many Ma Deuces we got on this side of the portal?\"\n\n\"Four, plus six of the M240s,\" replied one of them.\n\n\"Okay, I need three of the M2s up on the ridge. Keep one in reserve. Support with the M240s. We gotta move while the mortars keep the terror-birds busy.\"\n\nMore crates kept getting handed through the portal during all of this discussion. There was suddenly a 'ripple' in the vision through the portal, as if Holly was looking at the army base through water.\n\n\"Get clear of the portal!\" yelled Jenkins, and everybody managed to do so just before it irised shut and winked out of existence. A crate that had been halfway through the portal fell to the ground, cut cleanly in half as if by an impossibly sharp knife.\n\n_____________________________\n\nThe other half of the crate clattered to the metal floor as many gasps of surprise sounded out. Those gasps were followed by a welter of shouting. John Dengar let out an uncharacteristic curse and lunged for the control board. \"What happened?\"\n\nArnold reached down with one hand to scratch Daisy's big square head. The pittie was leaning against his leg and whining at the distress of the humans around her. \"A resonance, I think. Having the other portal in close proximity made ours less stable. We should be able to turn it back on, though.\"\n\nBut they both knew that reestablishing the portal would require a fully charged capacitor bank...which they didn't have right now.\n\nGeneral Gossett came bounding over. \"Was that a deliberate attack? Did they close it on us?\"\n\nArnold shook his head. \"I think it was just a natural phenomenon. Now that I know what to look for we can keep it from happening again.\"",
        "\"Can we re-establish the gate?\" asked the general. His voice was tight but controlled.\n\nJohn pointed at one of his monitor screens. \"The capacitors are charging. About...ninety minutes.\"\n\nThe general's voice finally betrayed his inner fear. \"Ninety? Our people are gonna get the shit kicked out of them by those feathered assholes in ninety minutes!\"\n\n\"We can't charge any faster,\" said Arnold. \"Not without risking a burnout of the main power cables.\"\n\n_____________________________\n\n\"Fuck fuckity fuck!\" yelled Leslie.\n\n\"Well put, Corporal,\" replied Jenkins. Corporal Nowak and Ned had joined them soon after the portal had gone down, and the safety engineer was once again amazed at the lieutenant's utter calm in a stressful situation. \"Now. As to plans.\" Jenkins clicked on the radio. \"First-Paw Fletcher, can you join us? We have a bit of a problem.\"\n\nNow that he was seeing more of her people besides Holly, Ned realized that the average lagomorph could give Usain Bolt a literal run for his money. Within a few seconds the rabbit-folk militia leader had joined the impromptu council near where the portal used to be.\n\nFletcher stared at the now-empty space where the portal had been with something close to panic. \"What happened?\"\n\n\"No idea,\" replied Jenkins. \"Hang on, one moment.\" He clicked on his radio. \"I want the Javelin up on the ridge. Our feathered friends might try something. Any armored vehicle that pokes itself out of that portal needs a faceful of missile.\" He clicked off the radio. \"Our people are probably trying to re-connect at the other end. In the meantime we're on our own. Our mortars don't have unlimited ammunition, and once they've run out those bird-bastards are going to regroup. Plus who knows what they'll pull out of the other side of their portal. We've only got the one Javelin team and two missiles against anything big.\"\n\n\"We need to shut down that portal, then,\" said Fletcher. His big blue eyes were set in determination. \"Or at least give those on the other side of it something nasty to chew on.\"\n\n\"I like your thinking, dude,\" said Leslie. The rabbit gave her wiry body a very blatant up-and-down appraisal and winked one big blue eye at her. The corporal actually blushed a bit, then got back to business. \"Explosives are always a nice party favor.\"\n\n\"We do have some remote detonators and C4,\" replied Jenkins. The lieutenant looked over their relatively paltry cache of supplies. \"But only a few pounds of it. That's not gonna do much, even if we get it through the portal.\"\n\nNed finally decided to speak up. He was surprised that these 'elite troops' hadn't figured out the obvious solution by now. \"We are in farming country, though.\"\n\nThey all looked at him. clearly nonplussed.\n\nThe engineer spread his hands with an exasperated air. These guys were supposed to be the professionals in wrecking shit, why did he have to be the one to think of these things? \"Helloooo? Nitrates? Fertilizer? Diesel fuel?\"\n\nJenkins' eyes widened. \"Homemade ANFO. Hell yeah. How'd you think of that? I thought you were a safety engineer.\"\n\nNed shrugged. \"Part of that is knowing how to make things, well, unsafe.\"\n\n\"Got it. Can you mix it up?\" asked Jenkins.\n\nNed took a deep breath and nodded. \"If I know where to go.\"\n\nFletcher spoke up. \"I don't know this 'ANFO' you speak of, but one of my people is local to this area. They must know of a nearby farm that has what you need.\"\n\n\"Okay, so after it's mixed we gotta get the boom-stuff over that ridge and into the portal,\" said Leslie. \"But anything that's in line of sight of that portal gets shredded pretty quick.\"\n\n\"We'll have to make a push up over the ridge and clear a path,\" said Jenkins. The lieutenant looked grim but also focused now that he had a set mission. \"And we'll have to do it before our mortars run out. Fletcher, you get Ned where he needs to go. Holly, you need to scrounge up any vehicles we can use to ferry the ANFO into the portal. The rest of us will get ready for the assault.\"\n\n_____________________________\n\nNed wondered in a distant fashion how he'd wound up in such a strange place. Fourteen months ago he'd had a normal job and a normal life until the unexpected had literally broken into his garage. And now here he was, stranded in a dimension full of rabbit-people and standing in the middle of a barn of theirs while stirring a big wooden stick through a devil's brew of diesel fuel and fertilizer pellets. He was just grateful that they'd found a tub big enough to hold a goodly amount of the improvised explosive. \"That should do it,\" he said. He and the other two Rangers beside him hefted the big metal tub and began dumping his mix into a row of steel drums.\n\nThis particular farm belonged to a lagomorph named Pederson. Pederson was in the process of having a good old-fashioned freak-out over his place being taken over by both the lagomorph militia as well as by huge ape-guys from another dimension. Pederson now stared around the corner of the barn door in a mild panic. \"What are you doing?\"\n\n\"Making something to shove through the attacker's portal,\" replied Ned. \"This should give 'em something to ponder. If all goes well, it should wreck the portal equipment on the other side.\"\n\nFletcher patted the farmer on the shoulder. \"It's okay, they're here to help.\"\n\n\"How much bang is this?\" asked one of the Rangers, a fresh-faced guy named Wilson. The other Ranger, Corporal Morillo, began placing little packets of C4 and detonators into each drum.\n\nNed did a quick mental calculation. \"About nine hundred kilos, adding in this last batch. Plenty enough to level a small building.\"\n\nMorillo gave a nasty grin that stood out against his olive complexion. \"And they've probably got a lot of weapons stored on the other side. Yeah, the secondary explosions should make things nice and hot on their end.\"\n\nThere was the beep of a horn from behind Pederson, and Holly came careening into view driving a large flat-bed truck. Ned blinked in surprise as he saw that somebody had put one of the Ranger's machine guns onto the vehicle. The ugly-looking weapon stuck up from a swivel mount welded onto the truck bed.\n\nHolly braked the truck to a stop and climbed out of the cab. \"Just in case,\" she said, pointing one furry thumb at the improvised weapon-mounting.\n\n\"So the US Army is now resorting to using technicals, eh?\" asked Corporal Morillo. He shook his head while smiling. \"I just wish we had an Abrams or two for this shit.\" He made to get into the truck's cab, then stopped when he realized it was sized for four-foot-tall rabbit-people and not him.\n\nFletcher pushed past the Ranger. \"I've got it,\" he said, hopping into the driver's seat. Morillo shrugged and helped Ned and Wilson start loading the drums onto the truck bed. By now Pederson was over his freak-out and he also began to help with strapping everything down.\n\nHolly jumped up on the bed as they finished and grabbed the machine gun's handles. Ned felt a little lump of ice form in his gut as she checked the weapon over. \"Holly? What are you doing?\"\n\nWilson spoke up. \"Yeah, Ms. Arnbock, I can operate that.\"\n\n\"So can I,\" she said fiercely. She looked at Wilson. \"You're the professional warrior. We need you to in front clearing a path. I'm just here as backup.\"\n\n\"But still-\" began Ned.\n\n\"This is my world, okay?\" she snapped, then shook her head. \"Sorry,\" she continued but more softly. She let go of the weapon and walked to the edge of the truck bed, then took Ned's face in both her paws. \"You and your kind have already done so much. Now it's our turn to step up.\" She kissed him and smiled. \"I'm gonna jump off in plenty of time, okay?\"\n\nNed felt that icy feeling grow, but he nodded. \"Okay. Just no heroics, okay? And that goes for you too, Fletcher.\"\n\n_____________________________\n\nHolly gripped the handles of the 'Ma Deuce' and waited for Jenkins to kick the whole thing off. The lieutenant wasn't happy about her operating the gun, but she pointed out that she was a lot lighter. The truck was already about maxed out in weight, seeing as how it was now loaded with hundreds of pounds of high explosive. She tried her best to ignore the barrels strapped down around her. The only consolation was the fact that if they did go off she'd be dead before she knew it.\n\nThe mortars were now silent, and had been for about ten minutes. A thick haze hung over the distant berm, and there was no sound from the terror-birds. In front of the truck, the Rangers were spread out in a wedge-like formation. They were spaced further apart than Holly expected. Both the lieutenant and the sergeant were stationed right in front of the truck cab.\n\nNed and Yuri were behind the truck, each armed with weapons and guarding the ape-humans' little cache of remaining materials. Such guarding was probably symbolic. If this attack failed, the terror-birds would roll over them sooner rather than later. Ned looked very uncertain at the prospect of being armed; it was clear this was pretty close to his first time holding a gun. Holly still managed to catch him staring at her ass, though. She gave him a little wiggle of her hips and tail, then caught his eye and winked as he blushed.\n\n\"We've got five rounds left for each mortar, L.T.,\" said Sergeant Forrester. \"Our spotters are seein' movement down by the portal.\"\n\nThe lieutenant nodded. \"Give 'em another five minutes and make 'em think it's over, then hit 'em with the final volley. Fletcher, you ready?\"\n\nThe militia leader nodded. \"I'll be right on your rear.\"\n\nJenkins looked up over the cab and into the truck bed. \"Holly?\"\n\nShe gave a smile and a thumbs-up, which the lieutenant returned.\n\nThere was a long, interminable wait. Sergeant Forrester touched a hand to his ear.\n\n\"Somethin' big and metallic is nosing out of the portal,\" he said.\n\nJenkins' voice was back into that eerie calm he'd shown before. \"Javelin team, hit it. Mortars open fire, strike team move forward.\"\n\nHolly saw one of the ape-humans up at the berm stand with a metal tube on his shoulder. The tube spat out a smaller cylinder which then very quickly let out long string of flame and streaked down behind the ridge and out of her sight. There was a huge thump that seemed to shake the ground which was quickly drowned out by the foomps and whistles of the mortars firing and falling once more.\n\nShe had time for one last glance back and a mutual thumbs-up between her and Ned.\n\nYuri smiled at her. \"Do not worry, Ms. Arnbock. I keep good eye on him for you. Do svidaniya.\"\n\nAnd then everything started.\n\nThe Rangers began jogging towards the ridge. For ape-humans, they could move pretty fast. Fletcher kept the truck right in the middle of the protective 'wedge' formation. Up on the ridge, there was more chattering of machine guns and a whoosh-thump as their last missile shot at the portal.\n\nThat horrible screeching started again as the mortar rounds landed. She saw more flashes from the carnage near the portal, and her foot began to jitter ever faster. She was doing it, actually driving right into the middle of that hell.\n\n\"Mortar teams, cease fire!\" barked Jenkins as they began running up the slope of the ridge. As each Ranger reached the top, they first went prone and then picked themselves up and ran forward. Holly braced herself as Fletcher began driving the truck up the slope. Her paws were almost numb from gripping her machine gun so hard.\n\nThe machine gun teams on either side of them waved them forward as the truck now reached the top. Fletcher nosed the vehicle up and over the ridge...and Holly finally laid eyes directly on the scene beyond.\n\nIt was utter destruction and chaos. The Rangers were moving forward more slowly, their rifles sweeping to either side of the formation and picking off anything that moved. There were a lot of feathered bodies spread around, and some were still smoking.\n\nThe terror-birds had made a shelter out of their cases next to the portal. In front of the portal itself was a large metallic spindle-like shape. It didn't have any wheels that Holly could see; maybe it was a flying machine? Whatever it was, it was wrecked now. The ape-humans' missiles had torn a huge flaming hole in its side.\n\nAnd now she could see several terror-birds were using the wreck as cover. As the feathered shapes popped up and fired the occasional red beam at the Rangers, they were just as quickly driven back into cover by a hail of bullets from both the Rangers and the machine-guns up on the ridge.\n\nThe air was filled with haze and enough smoke to make Holly cough. She could also smell a horrible stench in the air, a mixture of cordite and cooking meat.\n\nShe could see one of the Rangers was already down, a crumpled form that she couldn't identify. A lump rose in her throat at the sight, then she braced herself as the truck tilted forward and moved down the ridge and towards that mouth-like portal.\n\n_____________________________\n\nNed looked over at Yuri as the distant truck made its way up towards the ridge. He couldn't watch the attack; the thought of his sweetheart in harm's way made him sick to his stomach. Yuri was in the middle of rummaging through the crates that they were nominally watching over.\n\n\"Do you really need to do that?\" Ned asked.\n\nThe Russian nodded. \"Just looking for...ah! Here is little friend.\" He picked out a short, nasty-looking tubular weapon and with sure fingers attached it to the underside of his carbine.\n\nNed had played enough first-person shooters to have a good idea of what that weapon was. \"Yuri...is that a grenade launcher?\"\n\nYuri laughed at Ned's uncertain expression. \"Da. Never hurts to have more firepower. 'Be prepared' is motto of your Boy Scouts, after all.\" His mitt-like hands reached into the same crate and began making a pile on the ground of objects that looked like comically oversized pistol rounds.\n\nNed shook his head. \"If we need those, we're already in a world of hurt.\" He looked back towards the battle. There was a lot of rattling gunfire going on, and the truck was just now cresting over the ridge. \"Fuck,\" he whispered. \"You stay safe, ya stubborn bunny.\"\n\nSome tingle in the air or sixth sense made him turn to look in the other direction. Fifty meters away, a small bright spark hung in the air and began to expand. He slapped Yuri in the shoulder and pointed, and the two men took cover behind the crates.\n\n\"Is our people?\" asked Yuri.\n\n\"Probably not,\" replied Ned. \"If John and Arnold can reestablish, they'd put the portal right back where it appeared.\" He pointed at the nearby location that had once led to home.\n\n\"Hmm.\" The Russian took the bad news in stride. Ned glanced over the crate and saw the now-familiar hole in the air. From this angle, he could see directly into the portal and also see a line of the armored and feathered bipeds getting ready to come running out.\n\n\"Flanking maneuver,\" mused Yuri. \"Let us show them that we are not quite so silly as to leave our rear unguarded, eh?\" He stood, and as the first terror-bird stepped out of the portal he fired a few three-round bursts at the thing's head. In spite of the Russian's mitt-like hands, his aim was certain.\n\nNed saw sparks off of the terror-bird's armor as he also brought his own carbine up and over the edge of the crate. He'd fired a gun maybe five times in his life, and three of those had been during the summary 'training' that the Rangers had given him in Nevada. For now, he was staying with single shot. He aimed lower, at one of the thing's relatively un-armored 'knees', and fired. Ned felt a brief moment of satisfaction as the creature toppled over with a piercing shriek...\n\nAnd then more came piling out of the portal, firing those horribly slicing beam weapons. Both Ned and Yuri ducked down behind the crates as the Russian slotted one of the large 'pistol rounds' into his grenade launcher.\n\nNed was about to pop back up and look when Yuri's hand touched his shoulder. \"Wait,\" commanded the Russian. His voice had lost its usual jovial tone. \"Let them come out. Makes for a better pile of bodies in front of gate. You just hand me grenades when I hold out hand, da?\"\n\nNed nodded, and Yuri stood with shocking speed for somebody his size and fired his launcher with an oddly muted thunk. Then Yuri dropped back down and held out a hand. Ned was on autopilot by this point, so he just slapped another grenade into Yuri's hand as the Russian ejected his previous round.\n\nThen there was a much louder boom from the direction of the portal, followed by more of that horrific shrieking that Ned had heard earlier. Yuri stood again and fired. The next few minutes became a confusing welter of the same repetitive actions. Ned would slap a grenade into Yuri's outstretched palm, the Russian would stand and fire, and all the while that inhuman shrieking grew louder...\n\n_____________________________\n\nFletcher couldn't drive directly at the portal, since the wrecked terror-birds' machine was in the way. Jenkins turned to the truck and yelled something Holly couldn't make out. He swept an arm to one side of the spindle-shape and Fletcher nodded. The truck rocked over the churned and cratered earth as he began to drive in the indicated direction.\n\nHolly felt a little better at seeing Leslie taking up a flanking position on one side of her. \"Helluva mess, eh?\" yelled the corporal cheerfully up at Holly as the truck bounced forward. The ape-human sounded like she was taking a leisurely stroll on the beach.\n\n\"Apes,\" muttered Holly as she shook her head. Then what she'd taken to be a random pile of twisted metal moved. A terror-bird popped up with shocking speed and aimed its weapon at Leslie. The corporal spun and fired a three-round burst at its head. The bullets just sparked off of the thing's helmet but did throw off its aim. The red beam sliced out and struck Leslie in the knee, and the corporal toppled over with scream of pain as the beam lopped off her left leg below the joint.\n\nHolly didn't even take the time to get scared. In the grips of a quite unexpected rage the small rabbit-human spun, aimed the M2 right at the creature's center-mass, and then nearly broke her thumbs as she mashed down the trigger plate.\n\n\"DIE, MOTHERFUCKER, DIE!\" she screamed.\n\nThe terror-bird's armor was proof against the smaller bullets fired by the Rangers' M4 carbines. But against the monstrously powerful fifty-cal bullets from Holly's gun its armor might as well have been tissue paper. The thing's keeled chest nearly evaporated with the impact.\n\nHolly kept screaming her mantra, firing each time she screamed until the terror-bird was a pulped mess.\n\nShe did see one of the other Rangers sprinting over towards Leslie, who by some miracle was still moving. Holly turned her weapon back to the front and saw another armored and feathered shape move out from behind the wreck to intercept the truck. Her rage kept rising as she aimed and screamed once more.\n\n\"YOU CAME TO THE WRONG DIMENSION, MOTHERFUCKERS! DIE!\"\n\nThere was a confused period where she kept firing at anything feathered while screaming horrible obscenities. Suddenly a big ape-human hand grabbed the gun's handles away from her, and she almost kicked out in a counterattack before she realized it was Sergeant Forrester.\n\nThe sergeant bodily picked her up, slung her under one arm, and leaped off of the truck. From her now-upside-down viewpoint she saw Fletcher give them one last sober look before stomping on the gas. The truck rolled forward and bounced gently into the portal.\n\n\"Fletcher!\" she screamed.\n\nLieutenant Jenkins voice bawled out. \"FIRE IN THE HOLE!\"\n\nHolly felt the air get driven from her lungs as she was thrown to the ground. Before she could gasp the sergeant's considerable bulk landed on top of her.",
        "She could only see out of a little gap between the ground and Forrester, and in the middle of that gap was the portal. After a long, horrible moment of waiting a huge gout of flame shot from the portal, and amidst that flame was a welter of charred wings and armor. There was a noise that sounded like the world was caving in.\n\nAnd then the portal irised shut and winked out of existence. The silence rolled back in like a wave.\n\nThe sergeant rolled off of Holly. \"Sorry, ma'am, but I'm better armored than you.\"\n\nHolly wheezed and tried to sit up. She nearly succeeded.\n\nKeith Jenkins stumbled up towards the two of them. He looked a little dazed, but otherwise okay. There was a long bloody mark all down one side of his leg. \"Sarge! You okay?\"\n\nThe sergeant stood. \"I'm okay. Nowak got hit in the leg, Wilson is...down.\"\n\nThe lieutenant nodded, his face dazed. \"What happened with Fletcher? I though he was going to jam the accelerator and get clear.\"\n\n\"No time. That close to the portal, we could see a whole bunch of those fuckers getting ready to come storming through.\"\n\n\"Shit. You okay. Holly?\"\n\nShe finally got enough breath back to respond in more than a croak. \"My chest hurts, but just from getting jumped on. This guy weighs a lot.\" She pointed at Forrester.\n\nForrester grinned. \"Would you rather have some shrapnel in your backside?\" His grin died as he looked back up at Jenkins. \"L.T.? You don't look good.\"\n\nThe lieutenant swayed. \"Shrapnel, yeah. Think I caught some in my thigh when the portal got blown. Feelin' kinda dizzy.\" He fell to his knees then forward onto his face.\n\nHolly scrambled to her feet as the sergeant cursed and lunged towards his commander.\n\n_____________________________\n\n\"I'm not putting you down ever again,\" said Ned into one of Holly's long ears. He held her as if they were in a strong gale, as if she'd blow away at the slightest loosening of his embrace. Behind them was a huge pile of burned and shredded terror-bird corpses, the remnants of Yuri's defense of their rear. The terror-birds' other portal had winked out just as suddenly as the main one; both portals were clearly both generated from the same location.\n\nShe hugged him back just as fiercely, using both her arms and legs. \"Oh, really?\" she asked. \"Even when I gotta pee?\" She kissed his cheek.\n\n\"Even then.\"\n\nThe survivors had regrouped at their cache of supplies. Leslie was unconscious, but still alive thanks to a quick tourniquet. Jenkins hadn't been so lucky. Even with a desperate bandage to try and stop the bleeding from his artery, they hadn't been able to save him.\n\nSergeant Forrester looked like he was ready to cry, rip something in half, or just do both. But instead the big man was keeping the Rangers busy sorting and cleaning their gear. All the while, more and more curious rabbit-people began to gather around them.\n\nOne of them pushed their way through the throng of gray-furred bodies and drew himself up. \"Are you Arnbock?\" he demanded.\n\nShe nodded and climbed down off of Ned. \"That's me.\"\n\n\"I'm Lambert Bilberry, the deputy assistant to the Mayor of Sullivan City. Where's the First-Paw?\"\n\nHolly looked away. \"Fletcher is dead.\"\n\nBilberry's officious manner crumbled a little. \"Oh. We received some confusing radio transmissions from him saying that some different creatures had opened another portal and that you stepped through it.\"\n\nHolly gripped Ned's arm. \"Yes. It's a long story.\"\n\nBilberry rubbed his forehead. \"I'm sure. Right now I just need to know if the situation's contained.\"\n\n\"It is for now,\" said Ned. \"We've got guys up on the ridge keeping watch just in case they open another portal.\"\n\nBilberry gave Ned a sidelong glance. \"I see. And you are one of these...other creatures?\" He pronounced the last two words as if describing a piece of leftover gum.\n\nNed figured that punting one of the local politicians into orbit would not give a good first impression. So instead he smiled and stuck out a hand. \"Ned Chiang, pleased to meet you.\"\n\nThe assistant gave the hand a tentative look but didn't take it. \"Um, and where is your portal?\"\n\nNed turned to look at the space where it had been. \"It was there. My people are probably trying to reestablish it, but I honestly don't know how long that will take. Maybe an hour or two?\"\n\n\"Okay.\" Bilberry sighed. \"Do you have any wounded?\"\n\nThe rabbit-guy's stock suddenly went up quite a few points in Ned's eyes. \"Just one. You should talk to Sergeant Forrester. He's the big fella over there.\"\n\nOnce Bilberry walked off to do so, the other onlookers crowded in on Holly and Ned. He felt hesitant paws touching and poking at him, and Holly was kept busy trying to explain to her fellow lagomorphs what had happened.\n\nSuddenly there was a shriek of delight and one of the female rabbit-people lunged forward out of the crowd. Holly gave an answering happy cry, and then the two hugged and promptly began crying and nuzzling each other.\n\nFinally Holly broke away long enough to grab Ned's hand. \"Ned! This is Emma, one of my best friends!\"\n\n\"You're the one who saved her?\" asked Emma. She had a white streak of fur next to each ear and violet eyes in place of Holly's blue.\n\nNed shrugged and blushed a little. \"Well, not really, I mean all I did was hurk...\"\n\nHe was cut off as Emma leaped up and wrapped her arms around Ned's neck. \"Thank you so much!\" she cried.\n\n\"Urk...you're welcome,\" gasped Ned.\n\n_____________________________\n\nAfter a few more hours, it became clear that the Earth portal wasn't re-opening anytime soon. By now the space where Hadley's farm had been was surrounded with a mass of berms and earthworks which were positively bristling with weapons both human and lagomorph in construction. The lagomorphs set up a round-the-clock watch in case the terror-birds tried to reopen any portals.\n\nIn the meantime, the humans had been offered a place to stay in the city. Unfortunately it was in a warehouse since none of the 'normal' buildings were sized large enough for them. The rabbit-people definitely pulled out all of the stops in setting the place up, however. There were plenty of mattresses and blankets to go around, and for now Ned and Holly were relaxing as the other humans bunked down around the pair. Most of the other soldiers were there except for Sergeant Forrester and Corporal Morillo. The former was off helping organize the defenses at Hadley's farm and the latter was off donating blood for Corporal Nowak. Yuri had insisted on staying right at the portal's location just in case they opened it up again.\n\nNed and Holly were both too exhausted for 'gettin' nekkid and foolin' around', as she put it. She did curl up next to him with her head on his shoulder, which was still nice.\n\n\"What do you think happened on your Earth?\" asked Holly as she nuzzled against Ned's chest. \"They should have been able to reopen your portal by now.\"\n\nNed shrugged and stroked her head. \"The first time we opened ours, the terror-bird's portal was already established. Now that their portal is gone, it might be that our people need to apply more power since we're not 'piggybacking' on theirs anymore. Don't worry. John and Arnold are on the case, and they're pretty smart guys.\"\n\nMorillo came strolling into the warehouse. One of the sleeves of his shirt was pushed up and he had a bandage taped to the crook of his elbow. \"Leslie's awake,\" he said.\n\nInstantly everybody in the place was up and crowding around him. Morillo held up his hands against the welter of questions. \"She's fine, she's fine! She told me to tell you all to stop dickin' around and to get the damn portal back open. She's got a nerdy doctor back home that needs some serious sexing-up. If you fuck around too much, she'll come down here and kick all your asses. And yes, she said she can still do that even with only the one leg.\"\n\n\"That sure sounds like Nowak,\" said one of the others with a laugh.\n\nHolly looked a little uncertain. \"Does Leslie know we can't open the portal on our side?\"\n\nMorillo nodded and smiled. \"Yeah. She's just keeping these bozos in line, is all.\" He motioned with his chin at the other Rangers.\n\nEmma peeked in around the doorway that Morillo had just come through. Her long ears were tucked behind her head. \"Er, hello?\" she said, tentatively. \"May we come in?\"\n\nMorillo looked a question at the others, who looked just as confused as he did. Ned noticed that Holly didn't look confused. Her expression was more one of surprise mixed with dread.\n\nBefore Ned could ask Holly what was up Corporal Morillo shrugged, smiled, and said, \"Sure! Come on in!\" Emma smiled in return and her ears went back up as she stepped in and then to the side.\n\nWhat followed was not the throng of curious rabbit-folk that Ned expected. Instead, about twenty of them, both male and female, filed in an orderly manner through the doorway and gathered in a group in front of the humans.\n\nEmma came forward to stand in front of them. She'd been wearing something like a tracksuit the first time Ned had met her, but now she wore a simple green dress with a floral print. \"My friends and I wanted to formally welcome you to our city.\"\n\nMorillo nodded. \"That's mightly neighborly of you. Thanks.\"\n\nNed looked down and noticed that Holly was waving subtly with her paws, apparently trying to catch Emma's attention. There were a few 'shushing' type gestures in there as well. Holly's ears were tucked behind her head, a sure sign she was stressed.\n\n\"Holly?\" he muttered. \"What's wrong?\"\n\nEmma smiled brightly at them all. \"No thanks are necessary! It's been a long stressful day for you all, and you're such a long way from home. Yes, you definitely all need a nice relaxing orgy.\"\n\nShe reached down and gripped the front of her dress, then pulled it up and off in one smooth motion. She wasn't wearing anything underneath it. Her gray-furred form was more curvy and padded than Holly's but still just as breathtaking. Emma put one hand on her hip and stood grinning in all her naked loveliness while the others behind her also disrobed just as quickly. Within moments the lagomorphs were all stark naked and smiling happily at their human guests with a complete lack of embarassment. Ned couldn't help but note that a few of the males were already 'raring to go', so to speak.\n\nThe humans just stared in shock and silence. The stunned silence was finally broken by Corporal Morillo's voice.\n\n\"What.\" "
    ],
    "authorname": "Mr_Shoggoth",
    "tags": [
        "furry",
        "furry novella",
        "anthro",
        "violence",
        "gore",
        "action",
        "battle"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/work-the-problem-ch-05"
}