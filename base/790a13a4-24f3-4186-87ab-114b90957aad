{
    "title": "My Queer Cousins: A novella",
    "pages": [
        "This is a consolidated, and improved version of the novella originally posted as separate chapters between from March to May 2018.\n\nAuthors note: All Characters are over eighteen years of age.\n\nA straight teenager shares a mysterious lake house with a couple of very queer, sex-mad cousins.\n\n*****\n\nMy Queer Cousins\n\nChapter One: Morons\n\nThunder Bay Ontario: 1990\n\n\"What're you staring at?\" I asked, although the answer was pretty obvious.\n\n\"Your penis. It's exceptionally large. What are you staring at?\" Andie asked in reply.\n\n\"Your penis.\"\n\n\"I know. It's very small isn't it?\" Andie sighed.\n\n\"Small? Andie, you have a penis!\" I exclaimed.\n\nI'd been surprised and excited when Andie, short for Andromeda, had suggested that we get naked and share the shower. Now, I was just surprised.\n\n\"I'm aware of that,\" Andie replied with a shrug, still staring at my crotch.\n\n\"Does it work?\" I asked.\n\n\"Yes. Does yours?\"\n\n\"Yeah, of course,\" I replied. And just like that, we were talking about our penises. I couldn't help but add \"You really think mine's big?\"\n\n\"Yes indeed, the average Caucasian penis is fourteen centimeters long when fully erect. I can easily estimate that yours would be larger than that.\" Andie used one finger to push her heavy glasses back up her nose.\n\n\"Jesus, Andie...\"\n\n\"Perhaps, if it becomes engorged, we could measure it and make a determination,\" she suggested eagerly.\n\nThe way it was stirring to life, the question wasn't if, the question was why? After all, Andie had a penis, which meant Andie was a guy, which meant that I shouldn't be getting a hard on.\n\nOf course, I didn't know she was a guy until she'd turned around. With her back to me, she'd shaken her luxurious red hair out of its ponytail and let it tumble down over his snowy white shoulders. Then she'd stepped out of her panties, yes her panties, and I saw here cute, hairless bum. What the hell was I supposed to think?\n\n\"What's the matter?\" she asked.\n\n\"Uhh, nothing. I just thought you were a girl is all.\"\n\n\"Oh, that. Well, legally I'm female. Biologically, I'm... somewhat ambiguous.\" Andie made a 'what're-you-gonna-do' kinda face. \"But my current sexual identity is female.\"\n\nI'd never heard the term 'sexual identity' before in my life. But maybe it meant that somehow Andie wasn't a guy after all. For one thing, she sure wasn't hairy. In fact, she had no pubes at all, which was kind of strange in itself for a twenty year old. She took a couple of steps towards me until she was close enough that I could feel the heat coming off her body. Without being too obvious, I tried to see if she had a pussy, too. \n\nShe caught me looking. \"Nope, nothing there,\" she laughed, lifting her balls, and boldly spreading her legs. \n\nI could hear my dad's voice in my head. \"Your cousins are all Morons.\"\n\n####\n\nSyracuse NY: Three days earlier.\n\n\"Your cousins are all morons,\" my dad said.\n\n\"They're not morons,\" I replied, but looking at the pictures on the coffee table, I wasn't so sure.\n\nThere were two pictures, the only ones we had of my cousins. In one, a girl wearing baggy hip waders and a lumberjack shirt held up a fish almost as big as she was. Her thick red hair was short and ragged, looking like someone had put a bowl over her head and cut around the edges with garden shears. She had a very proud, nearly toothless grin on her freckled face. On the back of the picture, someone had written 'Billie Jack '79.' She would have been nine years old.\n\nIn the other picture, a grinning girl held up some kind of medal on a long ribbon while an important-looking older guy beamed down at her. Her red hair was pulled severely back from her broad forehead into a thick ponytail. Her teeth looked okay, but her heavy, dark-rimmed glasses, complete with a taped arm, were askew on her face. On the back of that picture, someone had printed, 'Andromeda Athena Mackenzie '81' which would've made her twelve at the time.\n\nMy cousins: Billie Jack Morgan and Andromeda Athena Mackenzie.\n\n\"How can they be morons?\" My mom objected. \"Andie has two PhD's and she's only just turned twenty-one. Billie makes a living off of wolf bounties. No moron ever made a living hunting wolves, at least not for long.\" \n\n\"Morons,\" Dad said to me. \"They're all over the place on your mother's side of the family.\"\n\n\"Well, if they're morons, then all the more reason for me to go up there and check the place out with them. Keep them from getting hurt,\" I suggested.\n\n\"You're just trying to get out of work,\" Dad replied.\n\nI worked for my dad building custom houses in the new, upscale suburbs of Syracuse on weekends during the school year, and full time in the summer.\n\n\"It's his inheritance, Jim. Of course, he has to go and see that it's taken care of,\" Mom said.\n\nIn a move that had surprised everyone, my childless Great-Uncle Monty had left his estate to the three of us, the only grandchildren of his beloved sister. According to the lawyers, the estate consisted of his big Victorian country house on the north shore of Lake Superior, and whatever it contained. \n\n\"The place probably needs bulldozing. It'll cost you as much to tear it down as the land's worth,\" my dad said.\n\nI tried flattery. \"That's what I need to find out. I know what to look for, you taught me that. Those girls can't do that by themselves.\" \n\nMy dad couldn't order me not to go, I was eighteen now and a free man, but he was paying my college tuition.\n\n\"Oh, so that's what this is all about! You think you're gonna get into your cousin's pants. Look at them, boy. You call that getting lucky?!\" my dad exclaimed.\n\n\"Jim, don't be crude,\" Mom admonished him. \"It'll be nice for them to have a reunion. It was a very thoughtful thing that Uncle Monty did.\"\n\nI'd met them only once, when I was five or six years old. That was before Billie's family moved up to the Yukon and Andie's went off to Borneo, or some other god-forsaken place where her parents did scientific stuff. The thought of getting one, or even both of them, in the sack had crossed my mind. I was hoping they'd changed in the ten years or so since those pictures were taken. I mean, I looked pretty goofy at that age, too.\n\n\"Monty was a nut job and a pornographer,\" Dad scoffed. \"And he died broke.\"\n\n\"He was not a pornographer! He was a very successful and highly-respected portrait photographer,\" Mom shot back.\n\n\"Ha! How the hell can you be a successful anything when you live in Thunder Bay?\"\n\n\"Come on, Dad. It's only for a couple of weeks, and I'll work twice as hard when I get back.\" I pleaded.\n\n\"Go on, then. Go running off to Canada, chasing some bankrupt legacy with a couple of dog-faced cousins. Go ahead, see where it gets you,\" he grumbled.\n\n\"Thanks, Dad.\"\n\n\"Moron.\" \n\n####\n\n\"I turned the water main on this morning, but I didn't have time to check the upstairs pipes,\" I explained to Andie as I leaned over the edge of the narrow, high-sided tub. \n\n\"So, we might have... fuck!\" I exclaimed as a deluge of cold rusty water burst from the showerhead. I jumped backwards and discovered just how close behind me Andie was standing.\n\n\"Ouch! Oh my!\" she exclaimed as I stepped on her foot. \n\nA second later, I felt her arms around my neck, her legs wrapped around my thighs, and her package against my ass.\n\n\"Sorry! Are you okay?\" \n\nI couldn't really speak, or even stand up straight given the awkward piggy back Andie had on me. The shower continued to spurt and spit foul water into the tub.\n\nAndie made a kind of chortling, snorting sound which was how she laughed. \"I think you broke my foot.\" She didn't sound in pain or unhappy about it. \n\nAndie's hands shifted from my neck to my chest, but she didn't let go. Her breath tickled my ear, and I could feel her soft breasts and hard nipples pressing against my back.\n\nI waited for her to climb down, and when she didn't, it became awkward. And then, even more awkward. \n\n\"Andie, are you humping me?\" I asked.\n\n\"Sorry.\" She sounded surprised, but she didn't let go, or stop thrusting her hips.\n\n\"Andie?\"\n\n\"Oh, sorry! I didn't...it just feels so good.\"\n\nI could tell by her thoughtful tone that she'd never humped anyone's butt before.\n\n\"Andie!\" \n\nSlowly, she slid off my back. I felt my face turn red, and worse, I felt my cock growing hard. I tried to keep the beast tucked in front of me as I leaned over and turned off the tap. I fiddled with the levers and turned it on again. Water shot from the faucet instead of the showerhead. It spit, too, but it quickly ran clean. \n\nI realized that I couldn't stall forever. Andie hadn't said a word since she'd slid off me, and suddenly, I had the suspicion that she was eyeing my bare, bent-over ass. I whirled around to find her a few feet away, backed-up against the sink, looking guilty. I decided Andie had been checking me out. Automatically, we eyed each other's dicks.\n\nMine was a swinging, lead-weighted semi, and hers was four whole inches of serious boner, poking straight out from her crotch. For some reason, her hands covered her tits instead of her balls. Andie's face and cock were flushed, and her glasses were tilted so far to one side, they looked like they might fall off.\n\nI focused on them. \"You should take your glasses off before you break them,\" I said.\n\nAndie hands moved from her pert tits to her face. \"Good thinking cousin. I only have the one pair.\" She took them off and folded them up in her hand.\n\nI figured without her coke-bottle eye-glasses, she'd be practically blind, and that would make all of this a little less freaky. Bending over, Andie fumbled about with her hand as she tried to find a level spot on the round top of the toilet tank. \n\nAndie had grown up the only child of a couple of nomad scientists. She was tutored by them and their brilliant colleagues as they travelled from one isolated site to another. Andie got a first-rate education although she never spent a day in school. She rarely even saw kids her own age, and so ended up with the brain of a rocket scientist, and the social skills of a twelve year old. But she did have instincts, and they must have told her to offer her tempting butt to me and let nature take its course.\n\nI couldn't help myself, it looked so sweet that I had to touch it. I reached forward and ran my hand lightly over the slight swell of her hip, over her butt cheek and then downward. I ran my thumb along the bottom crease of her ass.\n\n\"Mmmm. That feels nice,\" Andie said.\n\nMy cock sprang to life and curved upwards in front of me. I took a deep breath and positioned myself behind her, not quite touching her with my dick. I stroked along her flanks.\n\n\"Ohhh!\" Andie exclaimed. \n\nI felt her belly twitch when my hand ran over her cheek and along the crease. I watched her back ripple with the deep breaths she was taking. I wasn't a virgin. I'd gone all the way with three different girls, since I was sixteen. My last girlfriend, Frieda, liked to bend over like this when we 'did it'. I liked it, too... a lot.\n\nIf Andie had a pussy, I would've rubbed the head of my cock along her slit, but Andie didn't have a pussy. I knew gay guys fucked each other's bums, but I had no idea how. You needed lube or something, right? Even if I knew how, I wasn't sure I wanted to do that.\n\nThat would be homo, and I wasn't a homo. But I was confused. I mean, I wasn't ruling it out, but I needed time to think about it. I was pretty sure that Andie had never done it before, so she probably had no idea of what it would be like either.\n\nI cleared my throat. \"The water should be good by now, but you better hurry, I don't know how long it'll last,\" I said.\n\nI turned around quickly. Too quickly, because my cock brushed against her smooth skin and my knees nearly buckled.\n\n\"Mike?\" \n\nI didn't wait for Andie to turn around, I hustled over to the tub, climbed in, and turned my tattle-tale boner towards the wall.\n\nAs soon as I stepped under the spray, I thought, \"fuck\". \"Andie, did you bring any soap?\" I asked.\n\n\"Sure, I brought everything,\" she replied. \n\nI looked over my shoulder to see that Andie frozen with one foot in the tub. Unlike mine, which curves up fiercely, her cock stuck straight out in front of her, and it was pointed right at me. Her balls were high and tight. \n\n\"Do you want me to get it?\" she asked.\n\n\"Sure, I don't have any,\" I replied. Andie stared at my butt while I stared at her cock.\n\n\"Okie dokie,\" she said.\n\nI tore my eyes off her bouncy bum and looked back at the wall. \"Down boy, down,\" I muttered at my cock, but it never listens to me.\n\nOne of the things about Andie was, that with all the travelling around she'd done, living in tents and huts, she had all kinds of neat stuff. She had this long bag, like a garment bag that hung all the way down the bathroom door. It had lots of pouches with useful things in them.\n\n\"I have shampoo, too,\" Andie called from across the room.\n\n\"Sure, bring that,\" I replied without taking my eyes off the wall.\n\nMy mind was racing. It occurred to me that standing the way I was, probably wasn't a good idea. Then and there I made one firm decision. If there was going to be any bum-fucking, it wasn't going to be my bum that got fucked. I carefully turned around on the slippery ceramic. \n\nAndie was geeky, but she wasn't clumsy like you'd expect; she actually moved fast and quiet. When I turned around, she was at the side of the tub with a bottle in one hand and a plastic soap container in the other. Her cock was as hard as ever.\n\nShe handed me the shampoo bottle, then put a hand on my chest for balance as she stepped into the tub. It was very narrow, so there was no way around it, we wound up in a full body press. The top of Andie's head was level with my nose, her taut red nipples stabbed me just below my pecs, and her cock slid between my legs under my balls. My cock was trapped up against her slightly rounded belly.\n\n\"Whoops!\" she snorted and chortled into the side of my neck where she'd buried her head.\n\nNone of this was helping my boner relax. We shuffle-danced our way to a length-wise position in the tub. Andie took a step back as the hot water streamed down my back. \n\n\"Cousin, that is definitely an above-average, engorged Caucasian penis!\" she exclaimed, and boldly crouched down in front of me and took my cock in her hands. She started measuring it, using her fingers and her forearm. \n\n\"From my initial estimate, it must be at least twenty, or twenty-one centimeters long and...\" Andie clamped her fingers tightly around my shaft and gave it a firm stroke from bottom to top. \"Fifteen centimeters in diameter, very impressive!\"\n\nMy legs started to tremble, and I let out a groan, but Andie didn't seem to notice. She squinted up at me. \n\n\"Nicely-formed head, and I see you are circumcised like me. There's some debate in medical circles about the usefulness of that procedure, but I think it looks cute. Of course, that's a purely subjective judgement.\" \n\n\"Fuck, Andie...\"\n\n\"A luxurious pubic patch,\" Andie said brushing her nose in my bush for a moment. \"And, those are exceptional testicles, too.\" She cupped my balls and worked them over with her long fingers. \n\n\"Ahhh... Jesus, Andie...\"\n\n\"Just as I surmised, you're definitely above average.\" Andie gave me a satisfied smile, still squatting in front of me with my balls in one hand, and my shaft gripped tightly in the other. \n\nI didn't know what to say, it was all I could do to keep from humping her hand.\n\n\"Can I wash it for you?\" Andie asked.\n\nFun as it was, everything was going way too fast for me. Andie was a girl, then Andie was a guy, then Andie was a girl with a dick. I needed more time to think. \n\n\"No time for that, Andie. We're losing the hot water. Better be quick, or it'll be like ice,\" I warned. It was true, the water was already little more than lukewarm.\n\nThe thing was, once I began thinking about bum-fucking, I couldn't get it out of my mind. And it occurred to me, without really knowing the details that it probably would be best if the bum you were going to fuck was nice and clean.\n\n\"Okay, ship shower,\" she said brightly.\n\n\"What's that?\"\n\nStanding up, Andie took the soap and worked up a lather over her tits. \"We take turns getting soaped up, then we get under the water to rinse off. I'll go first.\"\n\nAndie stepped back and went to town on herself. She'd obviously done this before. Fuck, it was something to watch how quickly she lathered her whole body, including her hair. \n\n\"No time for shampoo,\" she declared merrily.\n\nI was glad to see that Andie gave her private parts a good scrub, especially her bum. She did a quick number on both her legs, then slithered against me and guided me from under the water.\n\n\"Better hurry, cousin,\" Andie said as she handed me the soap.\n\nShe rinsed off, then stepped out of the tub to make room for me. By the time I started, the water was cold, by the time I was done, it was icy. That shriveled my dick and tightened my balls considerably.\n\nAndie had dried her body and was now furiously toweling her hair. As she moved, her cock bounced. The fucking thing was still rock hard.\n\n###### \n\nWhat do you think about when you masturbate,\" Andie asked me with a look of earnest curiosity. \n\nAfter she'd dried off, Andie had put on a loose, knee length, khaki dress, white knee socks and slip-on shoes. She left her hair down. I wouldn't say she was foxy, but she definitely looked like a girl, a cute girl.\n\n\"Uh well, I don't do it very often,\" I lied. \n\n\"Really? I do it frequently, \" she replied with a grin.\n\n\"What do you call 'frequently?\" I wondered out loud.\n\n\"Every chance I get. Camp life is crowded, and growing up I didn't get a lot of opportunities. Sure, you love everybody on the expedition, but it's always such close quarters. And when you do get alone for a few minutes, it's always; \"Andie, come look at the Aurora Borealis\", or \"quick, we just spotted a Kakapo, come out of the trailer or you'll miss it.\"\n\n\"And I want to scream, \"I've seen it before, mom, I'm trying to masturbate in here!\" but that would be rude. They used to practically drag me out of the tent in the morning, they thought I was lazy.\"\n\nThere was a little tent in Andie's dress at the moment, but I was trying hard not to look at it.\n\n\"Or I would be in the latrine trying to masturbate, and I'd open my eyes and see a line of bullet ants coming down the wall! And I'm sitting there with an engorged penis in my hand!\" Chortling, Andie slapped me on the shoulder. \"You know what that's like!\"\n\n\"Ah sure...\"I smiled, and nodded, she thought it was hilarious and had to wipe the tears from her eyes with the back of her hands. I didn't know what a bullet ant was, but I got the picture.\n\nAndie went on, leaning forward, ginning. \"But where we are now, I have my own room. It's great! I can masturbate on my lunch break, and a couple of times each night, and every morning.\" Andie rolled her eyes waving one hand around while the other slipped down to her crotch.\n\n\"Sounds great,\" I replied. Son of a bitch, Andie was getting me hot.\n\n\"So, how often do you do it?\" she asked.\n\n\"Well, uh, you know, a couple of times a week maybe.\" More lies.\n\nAfter the shower we'd gone outside to look at the stars, but the mosquitoes drove us right back in. I had a deck of cards, but it turned out that we didn't know any of the same games. Anyways, Andie was eager to talk. I'd bought a case of Canadian beer and a bottle of Jack at the liquor store in town. It was great, they didn't even ask me for ID.\n\nThe electrical was connected, but half of the old sixty amp fuses were blown, and most of the light bulbs were burnt out, leaving the house dim and shadowy. I didn't want to tell Andie, but the place gave me the creeps, especially the upper floors, so I'd suggested we camp out in the parlor with our sleeping bags in front of the fireplace. Andie was cool with that, Andie was cool with everything. ",
        "\"So, what do you think about?\" she insisted.\n\n\"Girls of course,\" I replied defensively.\n\n\"Which girls?\"\n\nWe were sitting on the sofa, turned towards each other with our knees tucked up under us. We had started at either end, but Andie kept inching towards me until we were almost touching. \n\n\"Girlfriends I've had, you know, and girls at school that turn me on\", I replied. That was true.\n\n\"You mean girls you want to have coitus with?\"\n\n\"What?\"\n\n\"Sexual Intercourse.\"\n\n\"Fuck? You should say 'fuck', Andie, or everybody's gonna to laugh at you.\"\n\n\"Fuck...fffuk...phuuuk, phhhuuk.\" Andie said it slowly, almost like she was tasting it on her tongue. She leaned forward, hunching her shoulders. \"Onomatopoeia,\" she said nodding slyly.\n\n\"Yeah, sure,\" I figured it was another nerdy way to say fuck. \"...but you should say 'fuck - fucking', or maybe, you know, 'have sex with.'\"\n\nAndie scooched her bum closer so that our knees were touching. I swallowed some beer and went on. \"Yeah, I imagine fucking girls that I want to fuck. Also remembering the ones that I have fucked, you know, playing it all back in my head.\"\n\n\"You've fucked girls?!\" Andie exclaimed her eyes growing wide.\n\n\"Sure, lots of times,\" I bragged.\n\n\"Lots of times, oh my. You have to tell me about it!\" she exclaimed.\n\nWe'd each had a shot of Jack to celebrate our reunion, and then a couple of beers after that. I was feeling buzzed, and although it was hard to tell with Andie, she had to be feeling pretty good too.\n\n\"You've ever fuck a guy?\" I asked.\n\n\"Nope.\"\n\n\"A girl?\"\n\n\"Nope. I've read about it, but that's not the same as hearing about it first-hand.\" \n\nAndie pushed her glasses up her nose. She had a little button nose, and big glasses, I guess that's why they kept slipping down all the time.\n\n\"Well...\" We were back to awkward again, but I sure didn't feel like turning out the lights and going to bed.\n\n\"How do you get started? Come on cousin, walk me through the basic protocols,\" Andie prompted.\n\n\"Okay, first you get her alone, in a bedroom if you can, on a couch or even in the back seat of a car.\"\n\nAndie nodded eagerly. One of her hands was on the back of the sofa, almost at my shoulder, and the other one was still buried in her crotch.\n\n\"Do you just ask her, if she wants to ...fuck?\" \n\n\"No, no, you don't do that. You have to build up to it.\"\n\n\"Prepare them,\" she nodded sagely. \n\n\"Right. You start by saying nice things about them.\"\n\n\"Like what?\" Andie asked looking at me intently, her chin thrust forward and her eyes narrowed.\n\n\"You know, like; 'You have such nice hair.'\" I reached out and lightly brushed the strands of fine red hair at the side of Andie's face. She chortled and nodded. I slipped her glasses off and put them on the coffee table. \n\n\"And beautiful, green eyes, I've never seen eyes anything like them,\" I went on, brushing Andie's her soft white cheek. \n\nAndie stopped chortling and started panting. Her pink tongue shot out of her mouth and ran around her lips. \"Then what?\"\n\n\"Then you kiss them.\"\n\n\"How?\"\n\n\"It's not something you can explain...\"\n\n\"Then show me, oh please show me, cousin.\" Andie leaned towards me with her eyes closed and her lips puckered.\n\n\"Uh, the best way to do it really, is laying down,\" I said.\n\n\"Okay,\" her eyes popped open and she flopped back on the couch with her slim white arms extended towards me. The tent pole in her dress was sticking straight up. \"\"Kiss me cousin,\" she said.\n\n\"I think we'd be better off on the floor, we'll have more room,\" I replied. \n\nPart of me didn't like where this was going, the rest of me knew just where it was going, and approved.\n\n\"Whatever you say, you're the pedagogue,\" Andie replied swinging her legs off the couch.\n\n\"The fuck I am!\" I snapped angrily.\n\nAndie was already sitting down on the sleeping bags. She squinted up at me. \"What?\" \n\n\"I'm no fucking child molester, why the hell would you even say a thing like that for Christ's sake?\"\n\nAndie bit her lip in confusion, then suddenly brightened. \"Not pedophile, pedagogue. It means teacher, tutor, master,\" she explained.\n\n\"Oh. No wonder you've never been laid. If you mean teacher, then you should say teacher, okay. You gotta start talking like normal people Andie, or someone's going to knock your block off.\"\n\n\"See how much there is for you to teach me cousin,\" Andie replied patting the sleeping bag next to her. \"My life depends on it!\" she added with one of her little happy snorting sounds.\n\nFor some weird reason that got my cock all the way hard. I'd been having some doubts about what the hell I was doing, but Andie's voice was so eager, and the look on her face was so horny, that it made me forget about everything else. She was my cousin. She had a dick. What the hell, it was just the two of us here alone, we were both fucking horny, and no one else would ever know.\n\nThe fireplace was kicking out a lot of heat, warming up the flannel of the sleeping bags. \"We're gonna to get pretty hot,\" I said slyly and started to pull my jersey over my head.\n\nBy the time my face popped out, Andie was up on her knees, buck naked.\n\n\"Oh,\" I said. Well I'm definitely gonna to get laid tonight, I thought to myself. \"Whatever the hell that means.\"\n\nAndie stayed up on her knees licking her lips as I got out of my jeans. \"Shouldn't these come off too?\" she asked, boldly rubbing the front of my white briefs. \n\nShe'd told me that she had a condition called Alexandria's Genesis which was why she had no body hair, which was really kind of cool, for a girl. She had a farmers tan but, only slightly darker than the rest of her. \"I've got fair skin, but I don't burn. It's extremely rare,\" Andie explained.\n\nLooking down, her tits were big enough, and her belly rounded enough, that I could hardly even see her cock in the shadowy light. So that was cool. \n\n\"Okay,\" I whipped my underwear down and then tackled her onto the sleeping bags.\n\nAndie wasn't much of a wrestler, or at least she wasn't fighting very hard, because I quickly had her on her back with me on top. Since I was taller than her, there was some awkward shifting about as our hard cocks kept bumping into each other. I stiff armed myself above her and kept inching up until I couldn't feel her hot little prick any more. \n\n\"Kiss me cousin, kiss me, kiss me,\" Andie pleaded, throwing her arms around my neck. She lay there staring at me with her intense green eyes as wide as saucers, puckering her lips.\n\n\"Close your eyes,\" I said.\n\n\"Okay,\" Andie replied and clamped them shut, eager to do whatever I said.\n\nI started in for an easy, soft kiss, but she shoved her face up against mine. Pulling herself up on my neck with surprising strength, she started grinding her lips against mine. \"Mmmm, mmmm, mm,\" she moaned, her tongue all over the place.\n\n\"Whoa, whoa, take it easy cousin,\" I objected, snapping my head back in surprise.\n\n\"Was that incorrect?\" she asked as we both wiped our mouths with the back of our hands.\n\n\"You gotta go slowly at first Andie. You just settle down and let me lead okay?\"\n\n\"Absolument, mon capitaine,\" she replied giddily. \n\nAndie gave me a quick salute and then lay back with her arms over her head. She winked at me, then closed her eyes and puckered her lips. I chuckled and wiped a drop of sweat from the tip of my nose. Andie was so adorable that I almost felt she was too innocent to fuck, then I felt the tip of her cock rubbing against my balls as she started thrusting her hips upwards. I'd almost forgotten about Andie's dick, and I still wasn't quite ready to deal with it. \n\n\"And maybe not so much humping right away,\" I suggested. \"You do that to a girl, or even a guy too soon, and you'll scare them off.\"\n\n\"Oh,\" Andie replied like she'd just realized what she was doing. Her hips froze. \"Come on cousin, show me how it's done,\" she pleaded.\n\n\"Alright. You always got to start out slow, just brushing the lips, chicks love that,\" I said and lowered my head cautiously to her pale pink lips.\n\nI felt a wicked buzz all the way down my spine as I gave them a gentle brush, teasing us both. Her top lip was thin, but her lower one was nicely plump.\n\n\"Mmmmmmm,\" Andie said, eyes firmly closed, smiling. She thrust her hips a few times and stopped suddenly, catching herself.\n\n\"Fuck yeah,\" I sighed as I brushed her lips a little harder. \"Now you can give a bit of tongue, just a bit.\" I slipped my tongue between Andie's slightly parted lips. \n\nIt was the greatest kiss ever. The tip of her tongue was right there, and it shied away in surprise. I forced myself in harder, not rough at all, just steady, and she softened and gave way. Andie surrendered to me like no one ever had before. She surrendered and moaned, her hands coming up to cup my face. \n\nAndie learned fast, I didn't have to say anything. We kissed with our lips pressing harder, and her tongue came darting back to explore mine. I got lost in the warmth of her mouth, in the sweet taste of her, in her sighing, dreamy moan. I forgot all about our bodies, I forgot about everything in the whole wide world except Andie's tongue and her murmuring voice. \n\nI started to kiss harder, moving my tongue faster, I started to crush down on her but caught myself. This was way too good to rush. \n\n\"Oh, that was extraordinary,\" Andie breathed out in a long sigh when our lips parted. She opened her eyes and looked up at me. \"My word cousin, you must be a master of kissing. You must be a PhD d'amour.\" \n\nI shook my head. There she was making me think in the middle of all this. I grinned. \"Yeah, sure, I'm Doctor Love, baby.\" \n\nI'd always figured myself as a good kisser, but it sure didn't hurt to be told. Anyway, Andie was making it so easy. \"Now, so when I invite you, you can follow my tongue into my mouth.\"\n\n\"Clarify?\"\n\nI kissed her, tangled up with her tongue; teased it out of her mouth and into mine. Andie had left her arms around my neck again, and now started pulling me down. My arms gave way and I settled on top of her.\n\n\"Oh,\" Andie said. \"I can reciprocate, that's marvelous.\" She was back to humping her hips upwards, not bothered at all by my weight on top of her. \"Mmmmmmm,\" she said. \n\nHolding on tightly to the back of my head, she slowly pushed her little dick into my bush. Our cocks were side by side now, with Andie's little one rubbing up and down my shaft. It felt great.\n\nI could feel my balls tightening up dangerously, and I sure as hell didn't want to be the first one to come, so I tried to get my mind out of my crotch. \n\n\"After the lips,\" I croaked, \"you can go down to the neck, necks are fun.\"\n\nI gave Andie a few light kisses and then got serious. As soon as I started sucking, she stopped humping and went wild, kicking and squealing. Then Andie went after my neck like a vampire, and I had a real struggle pulling us apart. While she panted and grinned, I explained hickies to her.\n\n\"...if you have a big bruise mark, everybody will know you've been...\"\n\n\"Fucking!\" Andie exclaimed thrusting her hips against mine.\n\n\"Well, fooling around.\"\n\n\"I think I'll like fucking,\" Andie said.\n\n\"I bet you will. But, maybe if you're with girls, you shouldn't say 'fuck' so much. I may have given you the wrong idea there. Say 'doing it' or 'doing the dirty deed.'\"\n\n\"Dirty deed, I like that,\" Andie chortled, wiping sweat from her forehead and cute freckled nose. Even in the dark I could see how flushed she was. \"Are we going to do the dirty deed, cousin?\" she asked boldly running her hands down my back and giving my butt a squeeze.\n\n\"Hey, cool your jets,\" I exclaimed.\n\n\"Ha, because I'm overheating, I get it.\"\n\nI took a deep breath. \"Tits, tits are next. You...a guy...will want to have a go at your tits.\" I forcefully pushed Andie back down and started licking her tits.\n\n\"Mine are small, like my penis...I guess I'm a compact model,\" Andie giggled. \"Oh...Mike...Oh, that feels good. Oh, mmmmmum.\"\n\nAndie had a decent rack, you know, considering the cock and all. They sat high and firm on her small frame, each a good handful. They were so creamy white, they were like two bowls of ice cream with pink cherries on top. I naturally kept going down from her tits onto her snowy upper belly, but I knew that if I kept going, pretty soon I was going to run into a very hard cock. And I wasn't ready for that, even if it was a small one.\n\n\"You have beautiful lips Andie,\" I said returning to her face. \"Everything about you is beautiful.\" It wasn't just a line. \n\nI slid off to the side and started kissing her. Andie quickly got a leg over, and I could feel her cock going at my thigh just like a dog in heat.\n\nI couldn't say exactly how things went after that...\n\nWe kissed some more, and I wound up back on top of her, with our mouths locked on each other. Andie's boobs were crushing my chest and her hard nipples scratching at me, while our hips ground together. I could feel her throbbing cock rubbing against mine as I humped the hard, smooth part of her crotch. The head of my dick was feeling like it was shooting sparks right into my brain.\n\n\"Mmmmmmm, mmmmmum, mmmmmum,\" Andie moaned into my mouth, the muffled sounds getting louder, vibrating against my lips. \"Oh my Lord, oh yes. Ohhhhhhhhhh, Ohhhhh Mike!\" Andie shouted, lifting her head back and humping away like crazy. She sounded happy and kinda surprised, awed maybe is the word.\n\n\"Ahhhh, fuck!\" I exclaimed.\n\n\"Oh Mike, Ahhhh, no, no, no. Ahhhhhhhhhhhhhhhhhh!\" Andie shouted and froze. I could feel cum gushing out of her and go shooting up my belly.\n\n\"Ahhhhhhh Fuuuuuuuk!\" I let fly with a heavy load of my own.\n\nIt seemed like we were suspended in time, kinda hung out there amongst the stars forever, before I finally rolled over onto my back, panting and sweating, feeling an unbelievable warmth hugging me inside and out.\n\nAndie came up on an elbow examining the handful of cum she'd scooped off of her belly. \n\nCousin; that was the most remarkable orgasm on my life. But we didn't...I mean...it felt great but, we didn't actually...fuck... did we?\" Andie asked.\n\n\"No, not really, but don't worry, we've got all night to figure it out,\" I replied.\n\nAndie fell on top of me, both of us laughing like fucking morons.\n\nChapter Two: Andromeda Athena\n\nThunder Bay Ontario: 1990\n\n\"Kissing sure was fun, what's next Mike?\" Andie asked.\n\nI was confused and embarrassed after our little, whatever it was. I got up and poked the fire, trying not to look at Andie's girlie body with its now limp dick.\n\nAndie got up and headed for the door. \"Wait, where are you going?\" I asked.\n\n\"To the bathroom, I have an urgent need to urinate.\"\n\n\"Well hang on, me too,\" I said.\n\nI didn't like the thought of us being separated in that house. Just silly thoughts from watching too many movies like 'Creeps' and 'Nightmare on Elm Street.' There was something spooky about Victorian houses, even when they weren't half blacked out. \n\nAndie peed sitting down which somehow made me feel better about the whole \"sexual orientation\" thing. Not so much when she stared at me as I stood over the toilet suddenly unable to go. Even though I'd had sex a few times, I'd never shared a bathroom with a girl, so this was really weird. Especially when I glanced over and saw Andie wiping the end for cock with toilet paper. \n\n\"What's the matter Mike, do you have some kind of urinary problem?\" Andie asked.\n\n\"Nooo, I just can't pee with someone watching, that's not weird Andie.\"\n\n\"Okay, Okay, no offense intended,\" Andie replied and turned away to wash her hands.\n\nBack in the living room we settled down on our sleeping bags. The fire was doing fine and the room was toasty without being too hot.\n\n\"So, what's next, cousin? I'm ready for another lesson,\" Andie said, pushing her glasses up her nose.\n\nI sighed. Andie wasn't going to let up on me, and the worst of it was, I was starting to feel horny again already. \"Well, normally while we're kissing, we'd start feeling each other up,\" I said.\n\n\"That sounds exciting, can we do that?\"\n\n\"Well, usually we'd both still be dressed, and kinda slowly undress each other.\"\n\n\"Oh, that sounds titillating, shall we get dressed again and try it?\" Andie suggested eagerly.\n\n\"No, uh let's do some more kissing and see what happens,\" I replied. I took off Andie's glasses and putg them on the coffee table.\n\n\"Okie dokie,\" Andie agreed with a goofy smile.\n\nLaying on our sides, it took us a little while to get sorted out, but soon I was lost in Andie's mouth, slowly humping her thigh, not really feeling her cock doing the same to mine. \n\nI guess Andie was more aware of the whole cock thing than me, because when we paused she said, \"Can I perform fellatio on you?\"\n\n\"What the hell is that?\" I asked. It sounded pretty gay.\n\n\"According to Webster's, it is the oral stimulation of the male penis. Haven't you heard of that?\" Andie replied licking her lips.\n\n\"Oh, you want to suck my cock! Have you ever done that before?\"\n\n\"No, but I am very eager to try, especially with that exceptional Caucasian penis of yours. Do you mind, Cousin?\"\n\n\"Uh no. Great. Yeah, that's kind of the next thing we would do anyway.\" I assured her. \"You go right ahead.\" \n\nI spread my legs in invitation, and Andie got up on her knees between them and bent forward. She took the shaft of my cock in both hands and pulled it up straight. \n\n\"Tell me what to do cousin,\" Andie said grinning.\n\n\"How should I know? God damn it Andie, I don't know how to suck a cock!\" I replied angrily.\n\n\"Easy, easy, Mike, I didn't mean to offend you,\" Andie replied. \n\nShe had one hand at the base of my shaft and was firmly stroking me with the other. Long strokes from my balls right to the top of the head. It felt really good. \n\n\"What, do you think I'm going to do, give you directions?\" I asked, less angrily.\n\n\"Pardon me, but it is very difficult to find good source material on the subject. Descriptions are very vague when you can find them at all.\"\n\n\"You've got a cock of your own,\" I pointed out.\n\n\"That's true, but I can't auto orally stimulate. Believe me, I've tried.\"\n\n\"Wait, what?\" I had to think about that for a second. \"You mean you've tried to suck your own cock?\" I exclaimed.\n\n\"Unsuccessfully, yes,\" Andie replied.\n\n\"Hunh.\" Now that would be an interesting sight, I thought. \"We'll come back to that later,\" I said temporarily filing away that vision. \"Anyways, you can't learn how to suck a cock from reading a book!\"\n\n\"Really? Well maybe if there were books on the subject, then people could,\" Andie replied in a bit of a huff. \"You don't have to instruct me, just provide me with feedback,\" Andie said bending down, getting her face so close to my cock that I could feel her breath.\n\n\"Feedback?\" I croaked.\n\n\"Feedback; you know...tell me how you feel. What gives you pleasure, what causes you discomfort, how else will I know?\"\n\n\"Oh, sure. Well, okay, just follow your instincts and I'll let you know,\" I replied and settled myself back on my elbows.\n\nI didn't want to lay all the way back. I wanted to keep an eye on her just in case her instincts took her somewhere that might be painful to me.\n\n\"Excellent,\" Andie replied.\n\n\"No biting. That's one thing, no biting, okay?\"\n\nAndie's head was right over top of my cock, she looked up at me, squinting in the dim light. \"No biting,\" she said. \"Don't worry, I'll be very careful. The last thing I want to do is put this beautiful muscle out of commission.\"\n\nWith a sigh I lay back and closed my eyes. I could feel her rubbing the head of my dick against her soft cheek. \n\n\"It's so, potent, so...primal. I feel practically compelled to address it orally...\" Andie said as she started planting kisses on my cock.\n\n\"...the glans is remarkable. So...assertive... and such a lovely purple.\" she started kissing it faster, and then she was licking it.",
        "\"Mmmmmmm,\" I said.\n\n\"Ah, positive feedback!\" Andie giggled. She was a nerd, but she had a sense of humor.\n\nI could feel the tip of her tongue running firmly all around the head, getting right in there under the helmet, sending sparks of pleasure shooting down into my balls.\n\n\"Mmmmmmm,\" I said.\n\n\"Mmmmmmm,\" Andie replied. \"For me, the Corona is very sensitive, I always imagined it would feel good if someone licked it.\"\n\n\"Yeah, that feels good Andie, always do some of that.\"\n\n\"What about the perineal raphe?\" she asked flicking away with her tongue.\n\n\"So that's what that's called; ehhh,\" I replied unenthusiastically.\n\n\"Negative feedback noted. And at the summit...\" Andie started playing around with the little holes on the top which were sensitive, but mostly it just felt weird.\n\n\"Put it in your mouth Andie, suck it,\" I said impatiently.\n\nWithout another word Andie drew the head of my cock into her mouth and started sucking hard.\n\n\"Mmmmmmm, oh yeah, Andie, now that's good,\" I sighed feeling the wet warmth engulfing my dick. \"Oh yeah, keep doing that, cousin.\"\n\n\"Noted,\" Andie said pulling it out with a pop. \"But I have not completed my exterior exploration.\" By that, she meant licking her way down the shaft using just the tip of her tongue.\n\n\"Oh fuck, don't tease me,\" I pleaded.\n\n\"Does it feel good?\" Andie asked earnestly. At least I'm pretty sure that she wasn't fucking with me.\n\n\"Yes, but ahhh, hold my cock tighter, and uh, put your other hand on my sack.\"\n\nAndie knew how to use her hands. While she continued to lick up and down my straining shaft she worked over the head, squeezing hard, rubbing her thumb back and forth over the silky top. Her other hand rested very lightly on my balls. Andie did a thorough job, like she wanted to wet every inch of it with her humid mouth. She kissed it too, and then licked it some more.\n\n\"You are magnificently engorged, Mike, you're like column of granite,\" Andie observed.\n\n\"Uhhhh, thank you, what you're doing with your thumb there, that's really good.\"\n\n\"I enjoy doing that to myself, it's so incredibly silky to the touch. And you taste, you taste...acrid...smoky. Mmmmmmm, and the application of saliva is releasing pheromones that are wonderfully arousing.\"\n\nAndie's hand left my balls, and I didn't have to open my eyes to know that she was stroking herself. \n\n\"This isn't an optimal position for addressing you testicles and rectum, we'll have to come back to that later,\" she said casually.\n\nMy rectum? Andie was going to \"orally address\" my rectum? The thought was exciting, but also, well, gay.\n\n\"In any event, at the moment I have an uncontrollable desire to get you back into my mouth,\" she said.\n\n\"Sounds good to me.\"\n\nAndie rubbed my overheated head against her soft, slick lips, pressing it against them, rubbing it back and forth. \n\n\"Anticipation,\" she sighed. She kept doing it, pressing the tip of the head in just a little, not quite putting it in her mouth. \n\nShe flicked it with her tongue. \"I finally understand the true meaning of tantalizing,\" she said.\n\n\"Fuck,\" I groaned.\n\n\"But who is Tantalus, you or I?\" she mused.\n\n\"God damn it, Andie, are you going to suck my cock or talk to it!?\" I snapped giving my hips and upwards shove. \n\nMy cock went right into Andie's mouth, dangerously grazing her teeth. As soon as it got past her lips she stopped talking and started sucking.\n\nShe sucked hard, lowering her mouth down over the shaft, lips tight until I could feel the head of my cock pressed up against the base of her tongue. She pulled back and went down again. I closed my eyes, overwhelmed by the pleasure. I became my cock, and the whole world became Andie's steaming mouth. My hips started to work upwards, thrusting hard and fast, getting ready to come. \n\nSuddenly Andie let up on the pressure and took my cock right out of her mouth. \"This is much more enjoyable than I had imagined,\" she declared happily. \"How is it for you?\"\n\n\"Great, great,\" I replied hauling a ragged breath in through my nostrils. \"You're a natural cock sucker Andie, but don't stop, Jesus, don't stop now.\"\n\nAndie made a slurpy chortle, and went back to sucking. She drew the head through her tightened lips, just to the base of the helmet, and then popped it back out.\n\n\"Oh fuck,\" I said.\n\nShe did it again. \n\n\"Argh,\" I said.\n\n\"Hmmmm, the stimulation of the corona with the lips seems very effective.\" \n\nI think Andie was talking to herself. She did it again, more slowly this time, drawing the head back out through the vise of her lips.\n\n\"Fuck yeah,\" I said.\n\n\"More effective than with my fingers?\" she asked.\n\nI came up on my elbows looking down at her. \"Yes, Andie, it feels fucking fantastic. Don't stop!\" I pleaded.\n\n\"I sensed that you were on the verge of ejaculation,\" Andie said.\n\n\"Uh, yeah, you sensed right.\" I humped her hand, trying to get my dick back into her mouth.\n\n\"Oh, we don't want that,\" Andie said.\n\n\"We don't?\"\n\n\"Not yet, oh no, not yet, there's so much more for me to learn.\"\n\nI closed my eyes and flopped back with a groan. I felt Andie's lips on mine kissing softly. She had come from between my legs and was stretched out beside me, one hand slowly stroking my cock while her hot dick rubbed slowly against my calf.\n\nI pushed her mouth away from mine and sighed. \"You know what you are Andie?\" \n\n\"What?\"\n\n\"A cock tease, a fucking cock tease,\" I replied, pouting, but not really angry.\n\n\"That sounds...delightful. A teaser...like Rumple Teaser.\"\n\nI had no idea what she was talking about. \"But you are going to finish me off right?\"\n\n\"Of course, cousin. I'm eager to see you ejaculate, I assure you. But not just yet, please. Just relax for a moment.\" Andie's started stoking more slowly, matching the rhythm of her cock against my leg.\n\nI sensed that Andie might be a natural fuck as well as a born cocksucker. I lay back, caught my breath and wiped the sweat from my forehead.\n\n\"Yes so much more to do,\" she soothed. \"In particular, I was wondering if I could get the entire length of your penis in my mouth.\"\n\nMy eyes popped open and I came back up on my elbows. \"Oh yeah, that's something all the girls try to do,\" I assured her. \"It's called deep throat.\" Like I'd ever gotten deep throat, or even heard of anyone getting it besides in porno movies, but Andie didn't need to know that.\n\n\"Ah, because the penis goes down the throat,\" Andie replied. She thought about that for a minute. \"Yes, I see how that could be done,\" she said.\n\n\"Now would be a great time to find out,\" I prompted. \"It really is something that you should know how to do.\"\n\nAndie didn't need any further encouragement. She got up on her knees and swung her ass around so that her knee was pressing against the side of my face. Resting a hand on my thigh for support, she started stroking my cock again, this time in a slow measured manner, going all the way to the root, and pressing down so that it stood out to its full length. \n\nShe let go of my cock and let it sit at its natural angle. \"Certainly, there are several ways it could be done. Your curvature seems optimal. Hmmmm, the simplest would be for me to just...pardon me cousin,\" she said as she threw a leg over and straddled my chest.\n\n\"Hey!\" I started to protest, but Andie was too engrossed in studying my dick to notice. \n\nI could feel Andie's cock brushing very lightly against my chest, and her bum, her wonderful, rounded white bum was right there in front of me. I swallowed, confused by the different desires running through me. What the hell, I thought. It's all good. I closed my eyes and lay back.\n\nAndie's hard lips went over the head, her hungry mouth took me in again. She sucked her way down, drawing her mouth onto my cock with short little jerks, my hips moving up to meet her. I felt the head of my cock hit the back of hers throat.\n\nAndie pulled her head back. \"Oh my, oh no. Careful cousin, careful!\" she exclaimed. \n\nI looked, but all I could see was the crevice of Andie's ass and her disturbing ball sack. I felt a wave of disappointment. \n\n\"Sorry, sorry,\" I said. \"I didn't mean to do that. Don't give up.\"\n\n\"Who said anything about giving up? It was working, but you have to remain still...at least until your penis is lodged, at least until then. Surely that's how its done?\"\n\nI leaned out to the side. Andie looked back at me over her shoulder at me.\n\n\"Yeah, right. Normally I stay very still and let the girl do the driving, sorry, I just got carried away.\"\n\nAndie nodded. \"Fellatio trial number two,\" she said and went back to work. She went more slowly this time, smoothly descending down my shaft while I kept very still.\n\n\"Ughhhh,\" Andie said when the head of my cock bumped the back of her throat again. She paused. \"Stuuahh shhhiiillll,\"she said.\n\n\"I'm still, I'm still, go for it Andie.\"\n\nAndie shifted her head lower, and with one hand on the base of my cock, started taking me down her throat. It was like nothing I'd ever experienced before. Pressure, tightness, heat, and a voice in my head shouting. \"Hey, you're getting deep throat, man!\"\n\nAndie kept going until her mouth reached her fist wrapped around the base of my shaft, then she let go and took the rest in. Andie took it all; right to where her nose was practically in my balls. Then she swallowed.\n\n\"Oh fuck!\" I exclaimed and couldn't help but twitch my hips.\n\nAndie kept her cool and waited. She swallowed again, and then quickly came back up and right off my cock. She looked over her shoulder at me, wiping her smiling mouth with the back of her hand.\n\n\"That was incredible!\" I exclaimed. \"The best I've ever had,\" I added quickly.\n\nAndie wiped tears from her eyes. \"Honestly?\"\n\n\"Oh yeah, you...uh, that was a great first effort.\"\n\n\"It felt good...strangely good, being impaled like that. Curious experience, all-encompassing, almost Zen like,\" Andie mused.\n\n\"Do it again, you should do it again,\" I urged.\n\nAfter a few deep breaths Andie did it again, smoothly taking me down, her lips clamped even tighter this time. When she was about three quarters of the way down my shaft, she stopped. She took my cock out of her mouth. \n\n\"Suck mine,\" she said without turning around.\n\n\"What?\"\n\n\"Give me oral stimulation, cousin, I think it's only fair.\"\n\n\"What?\" I pretended not understand, but by now Andie had shifted her hips back and was dangling her cock over my mouth. She took my cock back into her mouth and slid down until it bumped deliciously against the back of her throat.\n\n\"Mnph mphhh mphhh,\" she urged, rubbing her balls all over my face.\n\nI grabbed the head of her dick and bent it down into my mouth. Truth was, by then I wanted to suck her dick.\n\nEyes shut tight, I dropped into a dark cavern exploding with wild new sensations. Small as it was, Andie's cock felt like it filled my whole mouth. It was hard, but her skin was soft on my tongue as I explored. It was like having a big sucker in there, and when I found the silky head I just kept rubbing my tongue over it. It felt great. My instinct was automatically to suck on it. I sucked hard like it was a wiener I could swallow. \n\nI was vaguely aware of moans vibrating up through Andie's body, as she humped my face. She started out driving her cock in and out of my lips a couple of inches each way, but soon she started getting closer and going deeper. She was grinding her hips so hard against my face, that her balls were crushing my nose. I thought she was going to suffocate me. \n\nI reached up, grabbed Andie's buns and squeezed them with all my might.\n\n\"Mmmmhhhhhhhhhhhhhhhhhh,\" Andie moaned. She tried to keep humping, but I had a firm grip on her, and forced her up onto her knees. \n\nThat was better, now I had control. Andie could only shove a couple of inches of her randy little cock into my mouth, and I could concentrate on the puffed up little head of her dick. I sucked hard on it as it went up and down, going not quite out of my mouth with each up stroke.\n\nHer cock tasted like nothing I'd ever tasted before. It was salty, but that was about all. It wasn't so much the taste, which occupied me, as the feel. Andie's cock wasn't like a pussy at all, not nearly as messy and complicated. I'm not saying I hate the smell of pussy, but it's something that grabs your attention. With Andie the smell wasn't that big a deal, just wet skin and a hint of Noxzema. \n\n\"Ohhhhhhh my, Oh my, Ohhhhhhh Mike, oh, oh, oh,\" Andie moaned. \n\nI realized that I'd been concentrating so much on sucking her off, that I hadn't even noticed that Andie had taken my cock out of her mouth. Then I felt the most fantastic new sensation in my crotch. Incredible pleasure grabbing me between my balls and my ass. \n\n\"Holy fuck!\" I exclaimed taking Andie's cock out of my mouth. \"Holy fuck.\"\n\nThis was something I'd never done before, I mean even with a girl. I pushed Andie's butt forward and raised my head, but all I could see was her incredibly exciting ass with her balls hanging down.\n\nI had an uncontrollable desire to get my face right in there, so I pulled Andie back and started licking the spot where I figured she was licking me. It was all wet and messy, but I loved it even though my nose was practically up her butt. Sure I smelled some of that too, but it wasn't gross at all, in fact it made me a little crazy.\n\nAndie was licking away at me down there, and she wasn't being shy. Her sharp little chin was digging into me right at the root of my cock, and her mouth was all over the place, all over my balls and my ass, and it all felt wonderful. \n\nWe went into a frenzy, both humping away at each other's faces like crazy, no idea what the fuck we were doing. There was no rhythm. We just licked and humped and slobbered all over the place. We rolled over onto our sides, and licked each other out, wrapped up in a nasty little ball. \n\nI smelled more ass now, and more sweat. It was hot and soaking wet, and amazing. Andie had her thighs clamped tightly around my head, and I was doing the same to her. I figured this must be sixty-nine, something I'd seen in porn movies, but had never been able to nudge a girl into doing. I guess they thought it was too dirty. And they were right!\n\n\"Oh Mike, oh Mike, oh, oh!\" I could hear Andie's muffled cry coming from deep in my crotch.\n\n\"Fuck Andie, fuck, fuck, fuck, fuck!\" I wailed into her ass.\n\nAndie came first. I felt her balls tighten up and her whole body freeze, then a load of hot cum spurted onto my chest. That put me over the edge, and I came a gusher that felt like it was drawn not just from my balls but from somewhere deep in my ass! \n\nWe flopped onto our backs, sweating and panting, feeling the rush slowly subsiding to be replaced by a warm flood of pure sighing ecstasy.\n\n\"Oh Mike,\" Andie panted. \"What the hell was that?!!\"\n\nI started laughing. It was the first time I'd heard Andie swear without me telling her how. I heard her giggling too. \"This sure has been a fun night, cousin,\" she said.\n\n\"You can say that again, sweetheart,\" I replied, still giddy. Sweetheart? I didn't know where that came from. \"And I bet it ain't even midnight.\" I knew where that came from. It came from my horny mind that was nowhere near finished having fun with Andie, cock or no cock.\n\nAfter a while we staggered groaning to our feet, drained the dregs from our beer bottles and finished catching our breath.\n\n\"I didn't read anything about that in Webster's, what was that we did?\" Andie asked again.\n\n\"It's called sixty-nine,\" I replied.\n\n\"Soixante neuf. That's what that was? I'd heard the term, but didn't know what it was.\"\n\n\"You live in France for a while?\" I asked \n\n\"French Polynesia, and French Guiana, oh, and also Cote d'Ivoire, for three months. Plus, there were often some French personnel on our expeditions,\" Andie replied.\n\n\"And no one ever hit on you, girls or boys?\" I asked.\n\n\"You mean...\"\n\n\"Tried to fuck you, or even kiss you?\"\n\n\"Hmmm, a few times.\"\n\n\"Well then why didn't you do it, you said you were so horny?\"\n\n\"I felt somewhat inclined, but then, you know, they were French. Andie shrugged and made a face like she was smelling something nasty.\n\nI nodded, of course the only French person I knew of was Pepe Le Pew.\n\n\"So what carnal adventure are we going to embark on next, cousin?\" Andie asked.\n\nI was starting to come down from my orgasm high, and starting to feel uneasy. \n\n\"Maybe we should, you know, get cleaned up a bit. Come on let's hit the washroom.\" I felt pretty soiled. \n\nWe got cleaned up, and by the time we came back downstairs, I was feeling more tired than horny. Also a little ashamed, like I'd let the whole homo thing go a bit too far. As we lay down on the sleeping bags on our backs, I wasn't sure how I wanted things to go from here on.\n\n\"\"Soixante neuf! Ahhhh, I get it, because when we were on our sides it was like ...\" Andie said suddenly.\n\n\"Let's not talk about it, kind of spoils the...romance,\" I interrupted her, lamely, struggling for words.\n\nI definitely did not want to talk about it, or now that I'd calmed down, even think about it.\n\n\"Okay cousin,\" Andie replied and snuggled up against me.\n\nWell, Andromeda Athena Mackenzie sure was a surprise. I'd expected a shy, and probably boring nerd, but realized there was a lot more to Andie right from the first time I saw her.\n\nI'd gone to meet Andie at the municipal airport outside Thunder Bay, expecting her to come in on a bush plane. Instead, one of those big, two prop helicopters came beating in from the north, and set down. Andie came out the back, apparently the only passenger, casually carrying her big duffel bag, moving through the whipping propeller wash like she did it all the time. \n\nAll I knew was that she was working on some government project north of a town called Moonbeam. \n\n\"What are you guys doing up there anyways?\" I'd asked, and Andie had said a whole bunch of scientific stuff, that I wouldn't have understood even if I'd really been listening. I was just being polite.\n\nI told her that in the fall I'd be going to Syracuse Community College to get my Electricians license. Andie said that sounded like an interesting occupation. I guess she was just being polite too.\n\nThat chopper had been battleship grey, and unmarked. When Andie gave the pilot a wave, it lifted off and headed south. I didn't give it any thought until later when Billie started going on about it. \n\nBillie! How the hell is she going to fit into all of this? I wondered.\n\nAndie's soft body felt pretty nice, there in the dark. Before I knew it, I'd forgotten about Billie, and was fast asleep.\n\n####\n\n\"Moron! My son was not only a moron, he was a queer!\" my dad lamented.\n\nLooking out from the high window of the lake house I could see him in the yard, surrounded by early morning fog, leaning on a tombstone. Somehow I knew it was my tombstone.\n\n\"No!\" I shouted, but I didn't make a sound.\n\n\"An incestuous one as well, how divine.\"\n\nI whipped around and looked down the long dark hallway at the thing that had spoken. I knew it was Great Uncle Monty even though he was wearing a long white dress that billowed out behind him in an unseen wind.\n\n\"No!\" I shouted again.\n\nHe laughed, a deep throated, yet womanly laugh, and started floating towards me.\n\nI turned and caught a glimpse of myself in a shadowy mirror. I was dressed like an old time stripper with a garter belt, see through bra, and a G string. \n\n\"Ahhhh!\" I shouted. \n\nAs I turned to run away, my feet got tangled in my high heels, and the next thing I knew I was falling backwards, falling, falling. And there above me was a blurry apparition in white, reaching down for me, reaching for my throat!\n\n\"No!\" I shouted again and came up swinging. I felt my fist make contact with solid flesh.\n\n\"Owwwwwww! You struck me,\" Andie's cried.\n\nTrying to shake the cobwebs out of my head, I stumbled to my feet. ",
        "\"Jesus Christ Andie!\" I exclaimed. \"You scared the shit out of me!\" It was pitch dark in the room, and Andie's naked body was just a blob of white.\n\n\"You were having a nightmare,\" she said.\n\n\"Oh fuck, I'm sorry, did I hurt you.\" \n\nI took her in my arms and made her lower her hand from her face. I peered closely at her cheek, but I couldn't really see anything. I felt it with my fingers. \n\n\"I'm not badly injured,\" she replied. \"Just startled.\"\n\n\"Man, I was having a nightmare. I thought I saw Great Uncle Monty's ghost.\" My heart was still hammering in my chest, and thinking about it made me shiver. \"This place gives me the creeps, doesn't it give you the creeps?\" I asked.\n\nAndie took me by the shoulders and stuck her face so close to mine that our noses touched. \"You know that ghosts aren't real, don't you Mike?\" she said, sounding very concerned.\n\nI took a deep breath, \"Well...\"\n\n\"They are not real. Some of the best researchers in science have studied them exhaustively, and concluded that there is no such thing as ghosts.\" She kept staring at me, like she could burn the knowledge into my head with her eyes.\n\nI took another deep breath. I did believe in ghosts, kinda, and I wasn't sure what the hell science had to do with it. \n\n\"Sure, sure,\" I replied pulling back my shoulders. \"I'm not a sissy or anything, I just had a nightmare. Everybody has nightmares.\"\n\n\"There is no shame in fear of the supernatural, Mike. The supernatural is frightening, until you understand that it is not real, and it can't hurt you,\" she said in a soothing voice.\n\n\"Sure, sure, I get it,\" I said impatiently, and took her hands off my shoulders.\n\n\"I think I need to lie down, you struck me with considerable force,\" Andie said, her hand going back to her cheek.\n\n\"Oh shit, ya, come on, let me help you. I'm really sorry, Andie.\"\n\nI had my breathing back to normal by the time we were stretched out on the sleeping bags. I lay on my back, she was on her side, a leg thrown over my thigh and a hand on my chest. I wasn't really happy about that, but I couldn't push her away, not after punching her in the face.\n\nThe dream was still bothering me. Not so much the ghost, but hearing my dad call me a queer. \"I'm not a queer!\" I said to myself. \"You just sucked a cock, homo,\" a nasty voice in the back of my head replied. \n\n\"Come on, Andie's not at all like a guy, she's a girl,\" the front of my head complained. \n\n\"Buddy, you sucked a cock, and you liked it,\"the voice taunted me.\n\n\"Mike, are you still distressed?\" Andie asked, pressing her naked boobs against me as she leaned close to my face again.\n\n\"What?\"\n\n\"You were mumbling something.\"\n\n\"Oh...ah...\" I started squirming. I could feel her cock, her hard cock, moving up my thigh and starting to get close to my crotch where my, possibly homo, dick was stirring.\n\nIt was impossible to be mean to Andie, she was so sweet and goofy. There was no way I could call her a queer, or tell her that I felt bad about what we'd done. So I came up with something else.\n\n\"I was just thinking, you know, about what we did,\" I said tentatively.\n\n\"Soixante neuf?\" she said in a funny throaty voice.\n\n\"Ah, yeah, and you know, sex in general...\"\n\n\"What's is it that concerns you, cousin?\"\n\n\"Well that, you know, cousin. Isn't this incest? Isn't it wrong?\"\n\nShe backed off a little, but kept stroking my chest.\n\n\"Hmmmm, I can't say that I'm familiar with the local laws. It is quite possible that fellatio is illegal here. As for incest...that presents a complicated issue. At any rate, simply because something is illegal, it doesn't follow that it is necessarily immoral,\" she said thoughtfully.\n\nIllegal, great. I hadn't even thought of that. \"I'm pretty confused...\"\n\n\"Do you understand why there are taboos against incest?\" she asked. \n\nI could tell by the gentle, school-teachery, tone of her voice that she was beginning to think that I wasn't the sharpest tool in the shed.\n\n\"Sure, inbreeding,\" I replied. '\"It makes you retarded.\" Yeah, it makes morons. Shit!\n\n\"Well,\" she leaned forward and kissed me. I could feel her hot nipples dragging across my chest. \"Nothing we've done, or might do, could ever possibly lead to any kind of breeding, in or otherwise.\"\n\nFuck, my dad was right, I was a moron. \"Right, right,\" I said. I needed to calm down. Loosen up. \n\nShe let me lay still for a while, very softly stoking my chest, wandering down a little, but staying above the belt. She was still humping my calf, but very slowly and lightly.\n\n\"Jesus, you're hard again?\" I said.\n\n\"It appears so, cousin,\" she replied. \"I've been thinking of scenarios, imagining fantasies...\"\n\nMy chest tightened, and I realized that I now had a giant boner, even without her touching it. I stayed still, not wanting to encourage her - us.\n\n\"I was wondering what it would be like to be a catamite,\" she said in a gentle, dreamy voice.\n\n\"Jesus, Andie, speak English,\" I replied.\n\n\"I was wondering if you would like to sodomize me.\"\n\n\"What?\"\n\n\"Would you like to put your penis in my rectum and fornicate?\"\n\n\"Bum fuck you?\"\n\nI could feel her chuckling. \"That sounds a little imprecise, but yes, would you like to bum fuck me, cousin?\"\n\nOh fuck. Talk about an offer you can't refuse! I'd almost stopped thinking about bum fucking, but there it was again. Anal sex was the coolest, nastiest, thing you could do to a girl. And all of a sudden Andie was all girl to me once again.\n\nEverybody knew anal was the ultimate score. A lot of porn stars wouldn't even do it, and it was usually left to the climax of the movie before they gave in to that. I thought about that girl in 'Debbie Does Dallas' moaning; \"Oh, Mr Hardwick, you are fucking me in the ass, oh, oh!\" Jesus, and the mother in 'Deep Throat', God she was such a dirty slut. And the way Lilly Marlene always groaned and gritted her teeth when she took it from behind. That was so hot!\n\nI sat up, bringing Andie with me. It took me a couple of tries to get the words out. \n\n\"Ah, sure. Ah, I've never done it before, but if you want to try it, I know it'll be fun for both of us.\"\n\n\"I've never done it either, but I have fantasized about it for a long time. It might be time consuming, and somewhat difficult at first,\" she warned.\n\n\"Oh, I don't mind. Wait, I'm going to fuck your bum, right?\" I said.\n\n\"Yes, I'm going to be your catamite,\" she chortled.\n\n\"Well then, why shouldn't you get to have your fantasies come true? We can go slowly, hey, whatever you like,\" I replied, trying hard to stay calm.\n\nWe were close enough that I could see her biting her lower lip. \n\n\"Sodomy may well be illegal,\" she cautioned. \"It is in many jurisdictions around the world.\" Like she was trying to keep me out of trouble!\n\n\"Hey, Andie. I won't call the cops if you don't,\" I replied, wiping the drool from my chin.\n\n####\n\nThe fire had collapsed to embers. The light of dawn was seeping around the edges of the curtains illuminating the heart stopping sight in front of me; Andie's on all fours with her shiny white ass in the air like some kind of nasty china puppy. One broad beam of dust-filled light came through a tear in the curtain and shone directly on her flawless rump like a magical spotlight.\n\n\"Go slow man, take you time,\" I told myself. \"This is something you're going to want to remember, in every little detail, for the rest of your life.\"\n\nI knelt behind her off to one side, and stroked her bum with my fingertips. Her cheeks were gently rounded, her crack was not sharp and deep, but gentle and inviting. \n\n\"Ohhhhh cousin,\" Andie shivered.\n\nStill with a dry hand I followed the contours of her bottom, my face close to her skin, watching the goosebumps rise. I traced the underside creases, and then lightly examined the fascinating bulge between her asshole and her hairless, slightly wrinkled sack. The place that I'd licked so wildly when we were doing sixty-nine. Irresistibly tempted, I leaned down and gave it a quick lick with the tip of my tongue, then pressed my nose against it, feeling it give.\n\n\"Ahhh, that feels very stimulating cousin, but don't tease me. Come on cousin, you are supposed to be lubricating me,\" she urged me, giving her tail a wag.\n\nWith the flat of my wet tongue I licked up the faint line that lead directly from her sack to her butthole, which was as cute and clean as everything else about her. It was a pink that was only a little bit darker than her butt cheeks. \n\nThere was no \"hole\" in sight, and the rim itself was almost completely smooth with only a few wrinkles. She was like a Barbie Doll back there, her asshole little more of an indentation. I licked around the pink area, around and around, making it glisten.\n\n\"Analingus!\" Andie exclaimed.\n\nI teased the very center with the tip of my tongue, trying to find the opening. \n\n\"Ahhh, Oh my, oh my, Cousin. Analingus, Analingus!\" Andie cried. Her thighs started shaking. She dropped flat and started humping the floor.\n\n\"Fuck, don't make it gay, Andie. \"Calm down,\" I complained.\n\nI rose back up on my knees and gave my mouth and nose a good wiping. My cock was hard as rock, and even the voice in the back of my head laughing \"homo, homo,\" couldn't make it go down.\n\nI took a deep breath and picked up the long thin bottle with the strange writing on it. Andie said it was massage oil she'd bought in Malaysia. I poured a little of it on my right hand. The smell was unmistakable - green tea.\n\nI placed my oily fingers on the bulge below her asshole, and pressing firmly went upwards, bringing her back up onto her knees.\n\n\"Ahhhhhh, Ohhhhh,\" she said.\n\nOh course I'd never done this before, but I didn't have to think about it. I started making firm circles in the valley of her butt cheeks with four fingers, circling around and around. Then over to one side, rubbing up and down, pulling back the cheek, pushing my fingertips harder against her sphincter. I rubbed below her reluctant opening, pushing, working over the bulge, while she moaned and humped backwards against my hand. \n\nI went back to the darker area, and after a few strokes it gave way like softened putty. My middle finger slipped right in.\n\n\"Oh my, Oh my!\" Andie arched her back like a cat doing a stretch.\n\nIt felt good, and she wasn't actually complaining, so I kept going, sliding my finger into her hot tunnel as far as it would go.\n\n\"Ahhhhhh,\" she moaned.\n\n\"Okay?\" I asked.\n\n\"Okie... dokie,\" she replied slowly, her voice a mixture of horniness and fear, her whole body tense.\n\nThe oil was really something, I hadn't put that much on my hand, but the whole area, especially her butthole, inside and out, was all slippery. I started slowly fucking her with my middle finger, pushing it all the way in, and bringing it almost all the way out. \n\nAfter about five or six strokes her body relaxed, and she lay down on her forearms with her back arched and her butt sticking up. I started working my finger more quickly, kind of crooking it, hooking the inside of her sphincter as I felt it loosen up.\n\n\"Oh Mike, that feels soooo good. Oh I never imagined, mmmmmum,\" she sighed.\n\nI switched from my middle finger to my forefinger and started going faster. It wasn't like fingering a pussy, there was the tight clamp of her sphincter, and beyond that really nothing I could feel. I made really small strokes, just working her ring piece. Soon my forefinger was in all the way in to my last knuckle.\n\nShe was loose enough for me to get my middle finger back in alongside my forefinger, and I worked her like that. I started to feel around in there, and found that reaching down inside her towards her balls I did feel something mushy, and a when I started to rub against that she collapsed on her belly again.\n\n\"Oh cousin, stop, stop,\" she panted.\n\nI took my fingers out.\n\n\"You okay. Did you come again?\" I asked.\n\n\"Little bit,\" she replied without rolling over. \"That was great,\" she sighed. \"I just need a pause, mmmmmum, for a moment.\"\n\n\"You still want to do this?\" I asked.\n\n\"More than ever, cousin, but if it is going to work, we need to lube you up as well.\" \n\nShe rolled over and sat up. I could see beads of sweat lined up along her scalp, as she tossed her hair over her shoulder and pulled it back.\n\n\"It would probably be best if you stood,\" she suggested.\n\nI sure as hell wasn't going to argue with that.\n\n\"Oh my, this presents some interesting new vistas,\" Andie exclaimed happily, rubbing my dick against her cheek. She cupped my balls, and hefted them. \"These feel like they have a very substantial load. I can't wait to see how that will feel when it spurts up inside me?\"\n\nThere she went, making things gay again.\n\n\"And just look at your rampant curvature, It's magnificent, cousin. Your penis makes mine look positively comical.\"\n\n\"You should say cock,\" I said, but I don't think she was listening.\n\nShe stroked my dick lovingly. \"This convinces me that I have chosen the correct sexual orientation. There is no disputing my decisive attraction to ...cock.\" Well, maybe she was.\n\nShe didn't try to throat me this time. Cupping my balls tightly in both hands, she took my cock in her mouth and bobbed up and down just past the head letting a lot of slobber dripple down the shaft. Using the massage oil, she lovingly worked over my cock and balls with both hands. One slippery hand started to stray past my root towards my ass.\n\n\"Hey,\" I objected. \"One butt at a time.\"\n\nChortle snort. \"You are so humorous cousin, I love that trait in you.\"\n\n\"You have some very nice qualities yourself,\" I replied. \n\n\"I know that this is unquestionably physically possible, none the less, it seems amazing to me that we will be able to get your above average Caucasian ...cock... into what I am sure is my smaller than average, Caucasian anus,\" she said as she continued to stroke.\n\n\"I was wondering about that, you have a really cute little hole, Andie,\" I replied. Sure I wanted to fuck her up the ass, but I didn't want to hurt her.\n\n\"Never fear, it will expand...in theory at least. Well, that has to be about as fully engorged as any penis could ever possibly be,\" she stated, squeezing my shaft as hard as she could.\n\n\"It feels that way to me,\" I agreed.\n\n\"And as lubricated as possible. No reason why we can't proceed,\" she declared taking a deep breath.\n\nAndie figured that the easiest way to do it, would be if she were on her side with her legs drawn up and I was behind her. But she wanted to be able to look me in the eye as I penetrated her, even if it made it harder. The way she explained it sure made me harder.\n\nHer green eyes blazed with hungry excitement, and her whole body vibrated with sweaty anticipation. I had never seen anyone so horny in all my life, and that included me at that moment, kneeling there with my aching cock in my hand, eyeing her vulnerable little butthole. \n\nShe lay way back, and pulled her legs up, grabbing them behind the knees, pulling on them so that her bum lifted up. It was such a sexy thing to do that I didn't even think about how gay it was. All that rounded white flesh, the cute line that ran up from her asshole, up over her exciting bulge to her swollen pink bag, so nicely hairless and only lightly wrinkled, was beautiful. \n\nAndie's nuts stood out as two distinct, individual little darlings, each falling away from the center, the way a big pair of boobs fall off to the side. Her cock was hard, swollen and dark like her balls, and because her hips were so tilted, her cock actually pointed more towards her face than mine.\n\nHer little bum looked so vulnerable that I took some more lube and worked it all around her hole, just to make sure. I worked two, and then three fingers inside her fairly easily, and I could feel that she was much looser.\n\n\"Mmmmmmm, come on cousin,\" she moaned impatiently.\n\nThe angle was different than with a girl, so I had to take my cock firmly in hand and bend it down a little towards the glistening target.\n\n\"You ready?\" I asked.\n\n\"Proceed, cousin. Please penetrate my anus,\" Andie replied, and then started laughing so hard that she let go of her knees and her feet whacked me on the shoulders. I had to chuckle too.\n\n\"You okay?\" I asked again when her laughing subsided.\n\n\"Okie dokie.\" She tossed up her hips and grabbed her legs behind the knees.\n\n\"There's no way it's going to fit in there,\" I thought to myself as I rubbed the tip of my wide head against her tiny indentation. I moved it around. The wet surface gave. I pushed a little harder.\n\n\"Hang on cousin. If I say stop, you stop, agreed?\" Andie said looking me in the eye.\n\n\"Yes, of course,\" I replied earnestly.\n\n\"If I scream...\"\n\n\"There's going to be screaming?\" \n\n\"Possibly. If I scream, stop.\"\n\n\"Of course.\"\n\n\"But don't withdraw. Remain in place unless I ask you to withdraw.\" Andie's eyes widened looking for confirmation.\n\n\"Sure, okay,\" I agreed.\n\nI ran the head of my cock round and round her small darker patch, all slippery and slimy. It was much tighter than any pussy I'd fucked. It gave a little, but I didn't want to shove it in too hard. She was panting with anticipation.\n\n\"Rock, rock a bit,\" Andie suggested. She slid her hands down from her knees, and keeping her legs high, grabbed her ass cheeks and spread them.\n\nI rocked my hips, nudging her mushy area. \n\n\"Harder cousin. Go ahead, push it all the way in,\" she said, rockin her hips in rhythm with my little nudges. \n\nSuddenly the head popped through. It felt like I was shoving my dick through a half -inch rubber clutch washer. 'I'm in, I'm in!\" I shouted. Of course she knew that.\n\n\"Owwww, ahhhhhh!\" Andie screamed.\n\nI froze, feeling her sphincter convulse like it was giving me a fucking blow job. \"Oh fuck!\" I moaned, my whole body trembling from the pleasure, fighting the urge to ram it all the way in.\n\n\"Please...remove... your... penis...cousin,\" she panted, her watery eyes as wide as saucers.\n\nI pulled back slowly, watching her asshole bulge out, gripping my dick like it didn't want to let it go.\n\n\"Ahhhhhhh,\" Andie moaned, biting her lower lip. It was an odd sound, part pain, but a lot more than that.\n\n\"\"Agghhhhhhh,\" I groaned as I popped out. My sound was pretty much pure pleasure mixed with a little disappointment.\n\nAndie let go of her ass cheeks and lowered her legs so that her ankles rested on my shoulders. \n\n\"That was...astonishing. Very...demanding.\" She had a bewildered half-smile on her face, finding herself at a loss for words.\n\n\"Painful?\" I suggested.\n\n\"Well...yes. It burned a little, but the feeling of stretching, of being forced open...well if that was pain, it was an...intriguing...sort of pain.\" \n\nAs Andie spoke, one hand was gingerly feeling her asshole while the other stroked away at her cock. However it felt, it hadn't made her the least bit limp. \n\nI was stroking my cock too. \"Soooo?\" I asked.\n\nIn reply Andie tossed up her hips and grabbed her ass cheeks. \"Now insert it again, the same way. Make it one strong, smooth thrust,\" she said.\n\nIt was softer down there, and the whole area looked like it had widened. I set the head of my cock carefully, adjusted my hips and pushed. Leaning back, I watched as the head of my dick got swallowed up by Andie's bum. I was bum fucking!\n\n\"Oh yess, yesss. Just wait. Wait...a moment. Ahhhhhhhhhhhh,\" Andie sighed, her sphincter spasming and her stomach muscles rippling.\n\n\"You okay?\"\n\n\"It...uh...still...burns. But...the...pressure...ohhh...ahhh...the feeling...\"\n\nI was rock still, looking down at the beautiful vulnerability of her slim body. She was almost bent double, her legs making a V going back from her bum. \"If it's too much, we don't have...\"\n\n\"Oh... stop talking cousin. Hold your penis in readiness,\" Andie commanded, closing her eyes.\n\nI did as I was told, leaning forward and bracing myself with my hands on her thighs. ",
        "She took another deep breath. \"Now... proceed...slowly, slowly...ahhhhhh...keep going.\"\n\nSteadily, my hard shaft was squeezed through the hose clamp of her butt and into the hot cavern beyond.\n\n\"Yes, yess cousin, like that. Penetrate me, penetrate me!\"\n\n\"Ahhhhhh,\" I groaned. \"That feels soooo fucking good, Andie.\"\n\nShe was chewing on her lip, her eyes gone crossed. She nodded and lay back, shifting her hands back behind her knees. Trying to get up high enough so she could see the action. I started fucking her ass, pretty much like I would a pussy. Instinctively giving her short steady strokes, back and forth an inch or two, steadily going in deeper and deeper.\n\n\"Ahhh...ahhh...ahhh...ahhh,\" Andie sighed in time with my thrusts, watching my face.\n\nI kept going deeper, and her ass opened up and took me in, until her butt cheeks rested on my thighs. Andie let go of her knees, lowered her legs and started stroking her cock.\n\n\"It feels good cousin, oh yes, I like it. I like being a catamite. Yes, oh yes.\" she giggled. \"Is it good for you?\"\n\n\"Fucking fantastic!' I replied. I didn't have trouble finding words, probably because I didn't have as many to choose from. I watched with fascination the way her little balls bounced as she stroked her dick. \"Oh ya, cousin. I like having a catamite!\" I laughed. \n\n\"Yes, yess, that's what I am, your catamite, your sexual slave boy, oh, ah, ah, ah.\" Andie was really getting into it. Now she was fucking me with her ass as I leaned back.\n\nAndie was really checking me out, her tongue darting around her mouth. \"Ahhh. I feel the urgent need to ejaculate, cousin. Are you on the cusp as well?\" she asked.\n\n\"Ahh, yeah pretty much,\" I replied.\"\n\nShe took her hand off of her cock and pulled back on her knees again.\n\n\"Please stroke my cock, Mike, oh please,\" she begged driving her hips harder and faster.\n\nI grabbed her cock, the whole shaft fitting into the palm of my hand, and jerked it straight up and down, crushing the head with my thumb. I pounded it so hard that her balls bounced around like they were in one of those Lotto machines. She threw her head back, her mouth a moaning 'O'. \n\nI wanted to grab her tits too, but I needed one hand for balance, so I just watched them ripple, feeling myself building steadily to the point of no return. There was no question about it, bum fucking was fun. As we pounded away we got tilted to the side, she lost her grip on her ass cheeks, and threw her hands over her head.\n\n\"Grab your tit, grab your tit,\" I begged her. \"Squeeze it for me.\"\n\nShe did it. \"Ohhhhhhhhhh...\"Andie moaned.\n\n\"Agghhhhhhh...\" I groaned.\n\nI ran my hand hard over her balls and up her shaft a couple of times.\n\n\"Ahhhhhhhhh, Oh my lord...Oh Fuck!\" Andie cried and a big rope of cum spurted out of her cock, arching all the way up to her tits, some of it making it as far as her neck.\n\n\"Ahhhhhhh fuck!\" I exclaimed, coming right after her, feeling like I tore the load right from the root of my dick. It was my best orgasm ever. Of course, I don't know how much came out because it was all swallowed up by her ass.\n\nI collapsed onto her, and after a long panting pause, rolled off. After a while I opened my eyes. Andie was lying beside me up on one elbow examining a pool of her cum in her hand. \n\n\"Man, you come a lot,\" I said, I impressed.\n\n\"Yes, but not motile I'm afraid...I cannot impregnate a woman.\"\n\n\"Oh.\"\n\nShe tasted it. \"Mmmmmmm\" she said. \"Do you want to taste it?\"\n\n\"No thank you.\"\n\n\"I want to taste yours. I want to taste a whole mouthful. I want to suck it out of you like taking a drink from a garden hose.\"\n\nIt seemed like a strange idea to me, and she must have seen that on my face.\n\n\"For scientific purposes, to see if it tastes different,\" she grinned.\n\n\"Fine with me. That's probably because your sexual orientation is a girl. But you see, I'm not... I don't... want any cum in my mouth. That would be homo - for me - not for you. For you its great.\"\n\nWe staggered up to the washroom, and it wasn't until we got back that we realized how late it was. We would have to be heading out to meet Billie Jack soon. Billie Jack who had been driving for a week down from the Yukon.\n\n\"I'm just gonna put my head down for a couple of minutes, then I'll make us some coffee,\" I said as I lay down on the damp sleeping bag.\n\n\"Just rest my eyes, then I'll clean up the camp,\" Andie replied looking around the room as she sagged to her knees and then lay down beside me.\n\nThe harsh ringing of the phone woke me up. I crashed about until I got to the little table in the hallway. \n\n\"Hello?\" I managed to grind out of my dusty mouth.\n\n\"Mike?\"\n\n\"Yeah.\"\n\n\"Where the fuck are you guys. I've been waiting here for an hour.\" It was Billie.\n\n\"Oh shit... fuck I'm...\n\n\"Give me directions, and I'll get out there myself.\"\n\n\"No it's too tricky, sorry... just hang on, okay, we'll be there in twenty minutes.\"\n\n\"You sound hung over, cousin, you guys have a party last night?\" Billie asked.\n\n\"No, well... we had a few, stayed up late.\"\n\n\"I drove all night to be here on time. While you were partying.\"\n\n\"Sorry.\"\n\n\"Don't be, just get your lazy butts out here, I've been dying to meet you guys.\"\n\nTime to meet Billie Jack. I knew she had red hair, fair skin and freckles. But does she have a dick? I wondered, not for the first time. And if she does, what is she going to want to do with it?\n\nChapter Three: Billie Jack\n\nThe first thing I thought when Billie stepped up to the urinal next to me was, shit did she leave Andie in the bar all alone?\n\nMy second thought was interrupted before I could put it into words. The guy at the pisser on the other side of Billie said, \"Hey lady, you can't... What the... Hell!\"\n\n\"Mind your own business,\" Billie said.\n\nOh fuck.\n\n\"I don't know what kind of freaks they have where you come from buddy...\"\n\nThen there was the smack of Billie's fist hitting the guy's face, and the thud of the guy's body hitting the floor.\n\n\"Son of a bitch!\" I exclaimed, swinging around and accidentally dribbling the last bit of my business down the back of Billie's pant leg. \n\nThe guy was slumped on the floor up against the wall beside her. Billie hadn't even turned away from the wall, hadn't even taken both hands off her dick. Billie could throw a punch.\n\n\"My dad told me there were a lot of assholes down south,\" Billie said, shaking off her cock, ignoring the guy groaning on the floor. Then she glanced over at me standing there, literally with my dick in my hand.\n\n\"Better zip up, cousin,\" she said. \"Seems like people got a thing about dicks around here.\" \n\nMe and Andie had arrived at the Maple Leaf Hotel a half an hour earlier. Billie, who'd already had a few, gave us big, crushing bear hugs, and insisted that we all have one for the road. Even after the incident in the can, she wasn't in a hurry to leave, but I grabbed Andie away from some bristly-faced older guy who was hitting on her, and hustled us all out the door. I figured it was best to get on the road before the guy in the washroom, or some of his buddies decided to get some payback.\n\nBillie wasn't worried at all, or even excited. Out in the parking lot, next to her Range Rover she flicked away her cigarette and squared off against me>/I?. I'd been in enough construction site punch-ups to know a fighting stance when I saw one. What I didn't understand was why. Andie was standing next to Billie, cleaning her glasses, oblivious.\n\n\"What the fuck Billie?\" I asked. \n\nFor Christ's sake we'd just met, what the hell could she have against me already?\n\n\"I don't like to air family laundry in public, but I gotta ask,\" Billie nodded towards Andie. \"What the fuck's with the black eye? Andie said you hit her.\"\n\nAndie had a dark, purple, unmistakable shiner. I hadn't hit her that hard, but with her white, almost transparent skin, every little mark looked livid.\n\n\"I didn't hit her,\" I objected.\n\n\"She said you stomped on her foot too. I don't like it when guys rough up girls. I won't stand for it, even if you are my cousin.\"\n\n\"Jesus, Billie, that was an accident,\" I protested. \n\n\"Yeah, sure. You gonna tell me Andie walked it a door?\" \n\nBillie had unbuttoned the cuffs of her plaid shirt and was rolling up her sleeves. She was a couple of inches shorter than me, but probably twenty pounds heavier, although a lot of that looked like it was packed into her outstanding rack. I wasn't looking at Billie's boobs now, I was watching her red knuckled fists. I'd just seen what they could do. \n\n\"Wait, it was an accident,\" Andie said, glasses back on, finally clueing in to what was going on.\n\n\"How'd it happen?\" Billie wanted to know.\n\n\"It doesn't matter,\" I interrupted hastily. \"And I'm not crazy about you saying...\"\n\n\"Mike was having a nightmare,\" Andie chimed in. \n\nGreat. \"I thought I saw a ghost,\" I clarified.\n\nBillie nodded, but her stance didn't soften at all. \"I figured the place might be haunted. But what's this about you being a child molester.\"\n\n\"Whoa, whoa, whoa, Jesus, Andie!\" I exclaimed. Christ, I'd only left them alone for about five minutes. \n\n\"I didn't say he was a child molester. I said he was a pedagogue, not a pedophile,\" Andie explained shaking her head. \"Really, doesn't anyone use that word?\" \n\n\"It means teacher,\" I said.\n\n\"Well God damn it, if you mean teacher, you should say teacher,\" Billie growled, but I could see her easing up a little.\n\n\"I can explain everything,\" Andie said, taking hold of Billie's arm and coaxing it to her side.\n\nBillie looked down at Andie, and then over at me. She relaxed. \"Okay, but Andie comes with me, so we can have a good talk alone,\" Billie said, casting me a suspicious look. \"You lead the way, we'll follow.\"\n\nI was pretty pissed off, and got into it a little, heading back to the house. I climbed into my pickup and sped off down the Trans Canada, easily leaving Billie behind. I had begged Dad to let me take one of the company trucks because I might have to do some heavy-duty renovations. He gave me one of our beasts. The Ram 450 with \"Pence Construction Syracuse NY\" on the doors, had a 360 V8. \n\nBillie's Range Rover was kitted out with a serious roof rack, grill guard and winch, so she didn't have a chance keeping up with me on the straightaway. I waited for them at the turnoff, then tore down the narrow, lane-and-a half blacktop leading to Lake Superior. \n\nThe road was humped, winding and full of steep inclines and sudden drops. Billie pretty much stayed just out of sight behind me, and I had to pause at each of the unmarked turnings. When we hit the dirt road for the last few miles, Billie caught up and stayed right on my ass the whole way. It was a good thing there was no traffic, because if we'd met somebody coming the other way, there was nowhere to go except straight into solid bush, or over the edge into the lake.\n\nI was a little shaky when I stepped down from the cab in front of our house. The Rover didn't crowd me, but when the doors popped open I was ready to go at it, if necessary. It wasn't. \n\nThe girls leapt out of the Rover, Billie put her back to the grill, and Andie leaped into her arms, wrapping her legs around her and giving her a long, hot kiss. Fuck, Billie moved fast. And Andie, well Andie sure had a thing for cousins.\n\nI stood there dumbstruck listening to them smooching and the hot engines pinging, not knowing what the fuck to do. Andie tore her mouth away, climbed down off Billie, and they both turned and headed towards me, grinning.\n\n\"Fuck me, Mike, I'm sorry. I was way out of line... it's just I hate that shit, you know. But I should have cut you some slack. Really, I'm sorry, man,\" Billie said.\n\nI heaved a sigh of relief. \"No sweat, Billie,\" I replied, extending my hand to shake.\n\nBillie wasn't interested in shaking hands. She let go of Andie and bear hugged me, crushing her big boobs into my chest, finding my lips with hers. Billie tasted like ashes and beer, but her lips were surprisingly soft, even if a bit chapped, and her kiss wasn't as rough as I'd expected. Our tongues sparred playfully on neutral ground, nobody taking the lead.\n\nBillie broke the kiss, turned and gave Andie a peck. \"Okay, now we got that settled, let's get me unloaded and we can get this party started! I'm dying to get my nuts cracked, and Andie says she's dying to do it for me.\"\n\nOut of her Range Rover came two rifles, ammo, a bunch of fishing gear, couple of large ice-packed coolers filled with venison steaks, bear cutlets, moose roasts, as well as cleaned whole pike and Muskie. Not to mention three cases of beer, a box of booze, and about a fucking pound of weed.\n\nThere was going to be a party alright. I thought about mentioning that I hadn't gotten the place functional yet, let alone even started on a proper survey, but what the hell, we had a couple of weeks. Might as well kick back and enjoy it all, because it was going to happen whether I liked it or not.\n\n####\n\n\"Ain't we a pair?!\" Billie exclaimed. \n\nBillie didn't chortle like Andie, her laugh came right from her lean white belly. They were stripped down naked, standing side by side, arm in arm, facing me while I sat on top of the toilet seat.\n\nJust for the record; I have blue eyes, blonde hair and I'm as hairy as the next guy. I'm in good shape from doing construction all year round, as well as playing football and hockey. I'm lean, not at all soft and girly. My skin is fair, but not pale, and I tan well in the summer. I don't have any freckles. Also, according to Andie, I have an \"above average Caucasian penis,\" and as far as I know, fully functioning balls. My point is, I was dipped in a very different end of the family gene pool than my cousins.\n\nThey didn't look exactly the same, but their special qualities overwhelmed everything else. Billie had the Aurora Genesis thing like Andie; not a hair on her entire porcelain body below her eyebrows. She had the same striking, light green eyes, and thick red hair as Andie, although Billie's was cropped raggedly at shoulder length. She was taller than Andie, heavier, and not as curvy. She was pretty much square from the shoulders down. Her low slung butt stuck out some, and her tits were all in front. \n\nAnd Billie had a dick. A hard, undeniable dick that was much bigger than Andie's, probably average sized for a guy, maybe six and a half, seven inches long. Like Andie's, it had hardly any curve to it, sticking more or less straight out in front of her. Unlike Andie's, it had a big head, bigger than mine, which was darker than the rest of her white cock, but almost matched the color of her balls which were in a high, tight package.\n\nBillie was more weather beaten, although it showed only in the red scuffed skin on her elbows, knees and knuckles. And although she had a much more butch vibe, it was mostly because of her clothes and posture. \n\nNaked, Billie didn't look girly like Andie, she looked womanly. Billie's face was not as delicate featured as Andie's. Billie's nose was bigger, her eyes were bigger, but they were all proportionate. Billie had apple cheeks, luscious lips, and straight white teeth. Even her ragged hair was feminine in a punk rock, Pat Bennatar kind of way. \n\nBillie also had a broad, four inch long, puckered scar on the inside of her left bicep. \"Chain saw,\" she said when she saw me looking. \"Thing kicked back on me, almost cut my tits off.\" Billie thought that was funny. \n\nI was glad it hadn't, because she had very nice tits. Very full and round, hanging low on her narrow chest. I guess that's why the chainsaw missed them.\n\n\"Yeah, you guys are really something,\" I replied, shaking my head. \n\nBillie was filthy from her week-long drive, and we all agreed that before we did anything else, she should get a good scrubbing. Andie had volunteered to do it.\n\nAndie pointed at my crotch. \"Wait till you see Mike's penis, well above the Caucasian average,\" she said to Billie. \"I haven't made a proper measurement, but approximately twenty one centimeters, by fifteen circumference, - I'd say he has you beat by five or six centimeters, Billie. Of course mine,\" Andie gave her cock a downward slap making it wobble like a diving board. \"Doesn't even enter into the conversation.\"\n\nLooking me over, Billie licked her lips. \"Does he know how to use it?\" she asked.\n\n\"In my limited experience, yes,\" Andie replied solemnly.\n\n\"Okayyyyyy, let's get you guys in the shower,\" I said, suddenly aware of how uncomfortable I was with a full strength boner crammed into my jeans. \"You probably got five minutes, max,\" I said once I got the water going.\n\n\"Okie dokie,\" Andie said. \n\nBillie helped Andie into the tub, then leaned on me for support to get herself in, giving my shoulders a squeeze. \"Not bad, cousin, not bad at all,\" she said.\n\nI retreated to the can. There was no need for me to be in the washroom, really, but there was no way I was going to miss this show. There was no shower curtain, so water was getting all over the floor, I'd have to do something about that later, but not today.\n\n\"Oh yeah, that's good,\" Billie said, standing under the spray, scrubbing her scalp. \"Ohhh, fuck, that's even better,\" Billie exclaimed when Andie, squatting behind her, started soaping up her ass. \n\nThe steam from the shower quickly heated the place up, so I pulled my jersey over my head and dropped it to the floor. Siting in the tub, Andie cleaned Billie's legs with both hands, working up from her ankles to right up under her balls. My belt was digging into me, so I unbuckled it and pulled down my zipper for good measure. \n\nAndie had one hand on Billie's cock and the other on Billie's balls. \"Initial estimate, sixteen centimeters,\" Andie said. \n\nI could barely hear her over the drumming of the water and Billie's ecstatic groans.\n\n\"Do her ass, make sure you do a good job on her ass!\" I advised.\n\n\"Why don't you... \" Billie started to say just as Andie got her soapy hands into Billie's butthole. \"Come Ooooooohhhvvvvver here?\" she moaned. \n\nBillie reached up and grabbed the shower rod with both hands, bracing herself as Andie vigorously washed her ass with one hand polished the fat nob of Billie's cock with the other. \n\nBillie sighed, and closed her drooping eyes. \"Why don't come over and help out cousin?\" she said.\n\n\"I could do you tits,\" I replied. They looked great the way they were stretched out as Billie hung from the bar, her ass back towards Andie.\n\n\"Fill your boots Mike, but be careful you don't get your jeans all wet,\" Billie chuckled without opening her eyes. \n\nI was way ahead of her. I had my jeans and underwear off and was busy losing my socks.\n\n\"Got to work fast,\" Andie panted. \n\nLooking down I could see Andie's long red hair plastered dark against her white shoulders. Her face was out of sight up Billie's butt while her hands worked Billie's cock.\n\nGrabbing Billie's hips for balance, Andie pulled her head out, slid her tits up over Billie's rump, and handed me the soap. While Andie worked over Billie's back I started lathering up her boobs. They were slick, smooth and firm, her nipples large and tight.\n\n\"Fuck, I love you guys already!\" Billie exclaimed. Andie had slid back down until she was under Billie's narrowly parted legs. \n\nOne hand squeezing a slippery tit, I used the other to turn her Billie's face to mine and kissed her wet lips. Our tongues sparred, still feeling each other out.\n\n\"Yikes!\" Andie exclaimed as the water started to run cold. Whatever she was doing down there, she started doing it faster, because I could feel Billie's whole body start to bounce and tremble.\n\n\"Come on cousin, let's see you ejaculate,\" Andie said. Not trying to get Billie clean anymore, but trying to get her off. \n\n\"Ahhhhhhh,\" Billie groaned humping back against Andie's face at one end, and against my mouth at the other. \n\nBillie's entire body was shivering from the cold water, but she wasn't making a move to get out.",
        "Then snap! The bar came loose from the wall. \n\n\"Fuck!\" Billie shouted and collapsed against me. \n\nThe bar flew over my head and clattered loudly onto the floor. My feet slid out from under me and I wound up on my back, helpless on the cold linoleum floor. Billie was bent double, half way in, half way out of the tub, hammering her dick against the side, holding onto my cock for support. Neither Andie nor Billie stopped. \n\n\"Jesus, you guys are going to rip the tub right outa the floor,\" I shouted. \n\nGrabbing Billie by the shoulders I pulled her over the edge of the tub and down on top of me. Wild shivers wracked me as her cold slippery body slithered along mine, our cocks getting roughly tangled up. I held Billie tight for warmth, and we both started humping. \n\nAndie came right out of the tub after Billie, arms wrapped around Billie's hips and face still up her butt. Andie thumped onto the floor, and rolled to the side, but never let go. \n\n\"We have ejaculation!\" I heard Andie's muffled cry.\n\n\"Oh, fuck!\" Billie exclaimed and I felt her massive, steaming load splash up my chest, giving me goosebumps and getting me off at the same time. Meanwhile, Andie's steaming cum sprayed my side.\n\nWe all came together like that, a crazy pile of slick humping bodies on the wet bathroom floor.\n\n####\n\nThere was a long, screened-in sun room at the back of the house. From there you could look out over an acre of overgrown lawn, and down a steep rocky drop to the clear blue waters of Lake Superior. It was a great view, but none of us were looking at it. Andie, dried off, but still naked, was on her hands and knees up on a kind of padded bench, offering her butt for our amusement. Me and Billie were looking at that. Andie had her eyes closed.\n\nSheets of thick plastic covered all of the furniture out in the sun room. It squeaked as Andie shifted her weight. \n\n\"We could take that off,\" I offered.\n\n\"Oh no cousin, the tactile experience is surprisingly arousing,\" Andie mused, scrunching it with her fingers. \n\nDried off and naked, Billie and I stood on either side of the bench, stroking Andie's bum which came conveniently up to our stomachs.\n\n\"Man, you are gorgeous,\" Billie said, breathing deeply, stroking gently.\n\n\"You really are something, sweetheart\" I agreed, my words not doing Andie justice. Of course, I'd had a good look at her already, and I was distracted by Billie's gently swaying tits, which I hadn't had nearly enough time to get used to.\n\nAndie chortled and sighed. I ran my hand down to the bulge below her asshole. \"I love this,\" I said, stroking it. \"But what the hell is it?\"\n\n\"Perineum,\" Andie sighed.\n\n\"Taint,\" Billie said.\n\n\"Taint?\"\n\n\"Yeah, it t'ain't pussy and it t'ain't ass; Taint. I guess, in this situation, it ain't balls and ain't ass,\" Billie said.\n\n\"Perineuuuuummmmm,\" Andie sighed as Billie joined me in gently massaging it. \n\nBillie had long fingers, and it looked like she knew how to use them. Andie had produced nail clippers while I was mopping up the bathroom floor. Billie had taken the hint.\n\n\"I think I'll go with taint,\" I said. My other hand was stroking Andie's thick pony tail that hung down past the edge of the bench on my side.\n\n\"Ohhhhkeee dohhhhhkeee,\" Andie agreed in a dreamy voice.\n\nBillie's tits bounced nicely when she laughed. Her nipples were very hard and very dark. I couldn't see it, but I knew Billie's cock was hard, over there on the other side of Andie. Mine was up again too, even though it couldn't have been more than an hour since our crazy cum fest in the bathroom. \n\nThe girls agreed that one of the effects of Aurora Genesis was that it made them hard and horny almost all the time. Well, maybe I'd gotten a bit of that gene, because so far, at least, I was keeping up with them.\n\nWhile I kept playing with Andie's taint, Billie reached between Andie's legs and pulled on her cock.\n\n\"Ohhhhh, encore, encore,\" Andie whispered.\n\n\"It means she likes it,\" I said in response to Billie's what-the-fuck look. \n\nI winked at Billie, and she leaned over top of our overly articulate cousin, and gave me a kiss. \n\nBillie's lips were soft and wet, her tongue was quick. I had a bit of a fat lip from when Billie came crashing down on me in the bathroom, hitting me with her forehead. Billie had big welts on her thighs from where she'd been banging against the side of the tub, and Andie had picked up a new bruise on her shoulder. It was a good think we didn't have any more cousins coming to visit.\n\n\"Ahh, ahh, ahhhhhh,\" Andie moaned. I realized that me and Billie had both been increasing our pressure on Andie's taint while we kissed. \n\n\"Do you think you could postpone whatever activity you are engaged in up there, cousins, and proceed to the sodomy?\" Andie asked.\n\nBillie was grinning at me, uncomprehending. \"She wants you to get on with it,\" I said.\n\n\"With all deliberate speed,\" Andie confirmed.\n\n''Seriously, she looks good enough to eat,\" Billie said giving me a big, white toothed grin. \"I don't mean just lick. Her ass looks so nice, I want to tear a chunk right out of it.\"\n\n\"Ohh, oh,oh, please don't eat me!\" Andie exclaimed as Billie bit her bum.\n\n\"I guess I can settle for giving you a good licking,\" Billie replied flicking her tongue over Andie's twitching cheeks, quickly working right down into Andie's anus.\n\n\"Analingus, ohhh, Analingus!\" Andie exclaimed and suddenly flattened herself on the plastic. It squeaked like a nest full of frightened mice as she humped it with her little wet prick.\n\nBillie was left hanging, bent over with her tongue wiggling in thin air. \"What the fuck?!\" she exclaimed.\n\n\"I guess I should have warned you about that,\" I said. \"It's a thing with her.\"\n\nBillie wasn't fazed. She went right down after Andie, moving to the end of the bench, and spreading Andie's cheeks so she could get her face right in there again. I took a step back, grabbed my cock and watched as Billie licked and lubricated Andie with her tongue. When Billie came up, I dribbled some massage oil into Andie's shallow indentation and down her taint.\n\n\"Oh this is going to be fun,\" Billie said as she started working the oil around Andie's butt hole with her thumbs. \n\n\"You ever do this before?\" I asked.\n\n\"Corn hole?\"\n\n\"Yeah.\"\n\n\"No, thought about it a few times.\"\n\n\"Have you ever been...?\"\n\n\"Fuck no. Not because I don't think I'd like it, but where I'm from, you don't ever want people thinking of you as a girl, or worse, a punk.\"\n\nI set down the oil and stepped back, boldly stroking my cock with my oily fingers. It sure looked like Billie knew what she was doing, or maybe I'd loosened Andie up for her, because in no time at all, Billie had her thumb up Andie's ass.\n\n\"You ever done anything?\" I asked. The whole situation seemed friendly enough to ask personal questions.\n\n\"When I was younger I had this good friend, Danny Longhouse, we used to suck each other off, never did anything else though.\"\n\n\"Girls?\"\n\n\"Only when I went down south for a break. And not often; it's just too much shit to explain all of this. Billie reached down and grabbed her balls for emphasis. \"That's why it's kinda neat that Andie's already ...introduced...you to it, you know us having cocks. Andie said it didn't bother you at all, that's really cool, Mike.\"\n\nReally, that's how it seemed to Andie. Well there was no point in setting them straight. \"Hey, I think you guys are beautiful,\" I replied. There was a lot of truth to that.\n\nAndie moaned as Billie replaced her thumb with two fingers and started working them in and out while her thumb played with her taint.\n\n\"There were a couple of girls in Calgary, not whores, university chicks, broad minded gals. And there was this one news lady from Seattle who used to come up for the Iditarod. She was older, she taught me a few things. But it was all pussy, we never even talked about corn holing.\"\n\n\"Yeah, I guess it's kind of special,\" I conceded. \n\nThere I was, beating my meat, talking about sex with one cousin while she finger fucked the other one. Great Uncle Monty's house sure was a magical place.\n\nBillie looked down at my cock. \"How the hell did you get that big dick into that tiny little hole?\" she asked. \n\n\"It was like fucking magic. Andie just opened up and sucked me in,\" I replied, still surprised myself.\n\n\"Fuck. Well mine should be a piece of cake.\" Billie was working her cock, lubing it up, getting it ready.\n\n\"Well, you know what, I think your head is bigger than mine, you got a kind of mushroom thing going on there, cousin.\"\n\nAndie chortled nervously. \"Can we please proceed? I'm ready, mushroom head or not.\" \n\nAndie had her legs tight together so that her taint and balls were pushed out the back on full display, her cock pointed straight down. Andie reached back with one hand and spread a cheek.\n\nBillie took a firm grip on her cock and played the mushroom head up and down, rubbing it firmly into all that glistening mush. \n\n\"Proceed, a good hard... ahhhhhh!\"\n\nBillie just shoved that big fat head in, and it disappeared. \"Ohhhhh Fuuuuuuuk!\" Billie exclaimed.\n\n\"Stop, stop, just wait!\" Andie warned. \n\nThey were both frozen with the head of Billie's cock up Andie's ass, both panting like crazy. Billie gave a little shove.\n\n\"Wait, wait. Ahhh okay, now penetrate...penetrate... yesss, yes like that. Ahhhhhh, stop!\" Billie was already buried up to the balls. She sucked a huge breath through her nostrils, teeth gritted, eyes closed.\n\n\"I can feel your...exceptional... glans deep inside me,\" Andie reported between panted breaths. \"Now slowly withdraw, but not all the way out.\"\n\nAnd just like that they were bum fucking right in front of me. Billie started making short strokes and Andie responded in rhythm grunting \"ah, ah, ah, ah.\" \n\nBillie looked over at me, her eyes wide with awe. \"Oh fuck, that does feel good,\" she said.\n\nAndie reached around and started stroking her cock up and down. \n\n\"Oh my, yes. Your penis feels so good in my anus. Oh my,\" she moaned. \"I am such a catamite.\"\n\nOnce they got a steady rhythm going, I decided it was time to get involved. I stood behind Billie, kissed the back of her neck, and reached around to grope her tits. My cock slid easily up and down her sweaty crack.\n\n\"Careful Mike,\" Billie warned. \"One butt at a time.\"\n\n\"Hey, that's what I said,\" I exclaimed.\n\n\"Mike, if you are not gainfully occupied, perhaps you could come around here and let me...suck your cock,\" slutty Andie suggested.\n\nI hustled around to the front of the bench. Billie was making long slow strokes now, head thrown back, hands spreading Andie's cheeks. The sight of Andie taking it like that, of Billie's boobs bouncing as she fucked, pushed me to a point of sexual craziness that I had never imagined before. Without thinking I grabbed the base of Andie's pony tail and lifted her head.\n\nBending my knees I grabbed my cock and played the slimy head against her lips. Andie extended her tongue to lick the head of my cock. I shoved it into her mouth. She took it eagerly and started sucking.\n\n\"Mmorrrmoh,\" Andie said and I shoved it in further. \"Formmnicatehh mah moufff.\"\n\nGrinning, I started doing just that. First jabbing the tight clamp of her lips, and then going deeper and faster until I was knocking at her throat. Billie had stooped fucking to watch, and now she resumed, going very slowly as we tried to coordinate the penetrations of our sweet, nasty, cousin.\n\nFor a while we all moaned and sighed and swore. I opened my eyes to see Billie, licking her lips, staring at me hungrily. We both leaned forward, resting our hands on Andie, our cocks driven as far inside her as they would go. \n\nWith Andie impaled between us, we kissed. Soft at first and then hard, rough, stabbing wildly with our hot tongues. We each had one hand up and locked around the back of the others head, crushing us together. Andie began to rock driving herself forward and back with our cocks deep in her mouth and ass.\n\n\"Man, where have you guys been all my life!\" Billie exclaimed, breaking off the kiss.\n\n\"Hold it, Andie,\" I commanded, and Andie became still as I carefully started trying to work my cock down her throat.\n\n\"You ever been throated before, Billie?\" I asked.\n\n\"Fuck no, looks like fun. What you say we switch around for a bit?\"\n\n\"Sure. How about you Andie, you mind if we take turns?\" I asked pulling my dripping cock out of her mouth.\n\nAndie rested on one elbow and wiped her face. \"That... sounds... equitable,\" she panted. \"But please, less talking and more sodomy and...whatever this is. Face fucking?\"\n\nI went easily up Andie's ass this time, but it felt just as hot and tight and incredible as before. It didn't bother me at all that Billie had messed it up already. I watched with an odd sense of pride as Andie took Billie's cock down her throat.\n\nWe didn't last long. I gave Andie really short strokes working her ring piece, holding her steady by the hips so she could concentrate on throating Billie. \n\nPretty soon Billie grunted. \"Switch back, switch back. Hurry, I want to come in her ass!\"\n\nWe did a quick switcheroo, Andie taking us like a trooper at both ends. We quickly got into a rhythm, all three of us, like we'd been doing this for years. We all seemed to have a natural feel for each other.\n\nI fucked Andie's mouth with just the vibrating head of my cock while Billie pounded her from behind. I took out my cock so I could reach forward to yank on Andie's. Two, three stokes, and Andie splattered onto the plastic cover. \n\nHardly had Andie stopped shooting when she said, \"Come on Mike, I want to swallow that load you promised me.\"\n\n\"You like the taste of cum too?\" Billie asked.\n\n\"Oh yes. I...\"\n\n\"Talking!\" I objected.\n\nBillie and I came pretty much simultaneously. Billie slapping Andie's ass with both hands, and howling like a wolf at the ceiling. I groaned and stood still as Andie sucked me dry.\n\n####\n\nAndie was sitting in a big Adirondack chair, the tip of her pink tongue stuck out between her cute overbite, her glasses threatening to slip right off the end of her sweaty nose as she attempted to roll a joint. Her feet in their white knee socks were tucked up under her, and her Khaki dress was stretched between her knees like a tarp to catch the grains of pot that kept falling from the cigarette paper. Completely engrossed in what she was doing, Andie didn't notice Billie and me staring at her. \n\nBillie swore and fussed with the broad strap of her bra. I smiled at her. \n\n\"Fuck off,\" Billie said congenially. \"I never wear a bra, except now I think I fucking sprained a tit when I fell out of the tub. Or maybe it was you, damn near tugging them off.\" \n\nI was far too mellow from the beer and all the sex to do more than smile.\n\nThe bra was the only clean piece of clothing that Billie had, probably because she rarely wore it. The rest of Billie's clothe - boxers, jeans, T-shirts and lumberjack shirts were hanging on the long clothes line, along with most of mine. For some reason Great Uncle Monty had a huge washing machine in the basement, but no dryer.\n\n\"You look cute,\" I said and dodged Billie's slow swing of the BBQ tongs. \n\nBillie had been forced to cram herself into one of Andie's thin-strapped T-shirt dresses. It was khaki, like just about everything Andie owned, and it hugged Billie's body tightly, leaving the bra straps, up top, and most of her legs below, exposed. Under the high, taut hemline, I knew Billie had on a pair of Andie's white cotton panties, also straining to the busting point. On Billie's feet were little white ankle sock inside her heavy work boots.\n\nIt was mid-afternoon, and the plan was to have venison steaks, so we were demolishing several beer while waiting for the charcoal to burn down. I was definitely getting over my embarrassment and confusion. A day ago, that whole freaky circus in the sun room would have left me stunned. Instead, I was just a little sore, curious, and just a little apprehensive about what we were going to do next.\n\nIt was obvious now that Billie and me both loved bum fucking, and I couldn't help thinking that there were still two virgin bums out of three. I could tell that Billie was thinking about it too by the way she made a point of talking about manly things. Billie didn't follow sports, but we talked a lot about hunting and fishing, and beer. We were drinking Molson Brador, a beer even stronger than the usual Canadian stuff.\n\n\"Back home we get Labatt's Blue sometimes,\" I said.\n\n\"I don't drink Blue, it gives me a sore ass,\" Billie replied.\n\n\"What?\"\n\nBillie gave me a shove that nearly knocked me over. \"It's a joke, I'll tell you later*.\" She looked past me, her longing gaze returning to Andie. \"Andie's really something isn't she? Fucking beautiful and doesn't even know it,\" she said taking a swig from the stubby brown bottle.\n\n\"I know, Andie's a fucking doll. But hey, you're really hot too, Billie,\" I said.\n\n\"Fuck off, I look like a guy.\"\n\n\"No you don't...\"\n\nBillie gave me an odd look and it occurred to me that I was on thin ice, but I pressed on. It was easier because I was telling the truth. \"Sure when you are all covered up in hunting clothes, but well, like this...\" I grinned leering at her body. \n\nBillie stabbed with the tongs and snagged my nipple. I jumped back, \"Owww, hey that's going to leave mark,\" I complained. \n\nThat made Billie laugh so hard I felt it was save to come back within range.\n\n\"Billie, you got great hair, beautiful eyes. And man, honestly, those lips, the over bite, the freckles, a lot of stuff just like Andie, but not so, you know, cutesy, not so...vulnerable. And if you don't mind me saying, you have a fantastic rack.\"\n\nBillie chuckled uneasily. \"I noticed you kinda liked it.\"\n\n\"Yeah, sorry if I got a bit rough with it. That whole scene was fucking wild.\"\n\n'Phhhh, you call that rough?\" Billie grabbed her tits and shoved them around a bit, trying to get comfortable.\n\n\"If you, both of you, tried to doll yourselves up, you'd be dynamite,\" I went on.\n\n\"I don't like dressing like a girl,\" Billie said.\n\n\"Hey look, if I'm out of line here, tell me to shut up, but I think you're very sexy.\"\n\nAndie was walking over to us, barefoot, like a little woodland elf, grinning, holding up the joint. \n\n\"You think she's walking funny?\" Billie asked.\n\n\"Wouldn't be surprised,\" I replied. \"Mushroom man.\" One minute I was calling her hot, the next I was complimenting the size of her dick. I was learning to be flexible.\n\n\"Yeah, about that. It doesn't seem right,\" Billie said, sounding serious now.\n\n\"What's not right?\" I asked.\n\n\"Andie taking it up the butt all the time, you know, us taking turns on her. Almost like we're using her,\" Billie said, a challenging tone now in her voce. \n\nBillie was serious. Serious like when she almost went after me in the parking lot.\n\n\"What're you saying?\" I asked, trying to match her tone.\n\n\"I'm saying we ought to give Andie a break, put our own asses on the line.\"\n\n\"Oh... you want to do that? Take it up the ass?\" I asked.\n\n\"Sure, Andie likes it. I guess it can't be too bad. I figure, what the fuck, if it's just the three of us, and we keep it to ourselves. But we all got to do it.\"\n\n\"Ahhhh, sure okay. You know, for Andie's sake...\" My heart had suddenly started pounding, and I had trouble keeping my voice steady. \"So, you wanna to bum fuck me?\" I asked, looking away, squinting in a manly manner into the sun.\n\n\"Sure, and you can corn hole me, fair's fair. Andie can have a go at both of us. I don't know if she could do it, but we ought to let her try.\"\n\n\"I suppose I could...\" \n\nThis was really disturbing ground. I wanted to have a go at Billie, and I definitely wanted to do it again with Andie. But taking it? Fuck, now that was gay. No fudging that. It was hard not be curious, and part of me wanted to do it. Still I hesitated. If you let yourself get fucked up that ass even one time. Was there any coming back from that?"
    ],
    "authorname": "RoryOmore",
    "tags": [
        "analingus",
        "first time anal",
        "cock sucking",
        "masturbation",
        "threesome",
        "incest",
        "romance",
        "mystery",
        "18 year old",
        "cum swallowing"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/my-queer-cousins-a-novella"
}