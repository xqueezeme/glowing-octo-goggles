{
    "title": "Spell, Crook and Handle Pt. 08",
    "pages": [
        "All characters are 18 years or older. Welcome to the eight installment of this series. I hope you enjoy. This will hopefully fill in some of the gaps I have been hinting at in previous stories. Please feel free to vote, comment or offer suggestions. This is a long one, it took a while to weave it all together. \n\n*****\n\nHIPS: Hiding In Plain Sight [a franchise of clubs for nonhumans]\n\nThere were work crews everywhere. The tsunami had done billions in damage to Tokyo bay and the surrounding areas. Today was the grand reopening of National Route 409 bridge and tunnel system. It connected the cities of Kawasaki and Kisarazu. The cities were on opposite sides of the bay and had both sustained horrific damage when the fifty foot wave struck the coast. Those that had been using the tunnel had been evacuated in time only to drown minutes later in the streets. The death toll was in the tens of thousands and if not for the early warning system it would have been much worse. Even with the twenty minute warning they were little they could do. The people were in the midst of an evacuation when the wave hit. People were packed in traffic and many drowned in their cars or swept out to sea. \n\nI had avoided seeing my handiwork for as long as I could but it was inevitable that I return and see what I had done. It didn't matter than anyone in our team could have been the harbinger of such destruction. It had been me that had entered and triggered the device. I could only imagine the families standing on this beach and wondering as the water receded a hundred feet or so. Did they even imagine what was happening? The sea side communities took the brunt of the wave but once it entered the bay there was no escaping the calamity. The houses are so tightly packed together they went down like dominos and left a hundred thousand homeless. But it wasn't just residences it was schools, businesses and places of worship. Was it unavoidable? We went there looking for answers and by god we found them.\n\n\"Are you still beating yourself up over the tsunami,\" Surisa asked. \"For heaven's sake it could just as easily have been me that went in there. It should have been me actually, but somebody took matters into his own hands, remember.\"\n\n\"I remember, I was trying to save you from the responsibility.\" I told her. \"New Guinea, the Philippines, Taiwan and of course Japan, over two hundred thousand lives lost.\"\n\n\"I don't need anyone to rescue me Louis, not now and sure as hell not then.\" She growled. \"We are friends but you are a fucking martyr. I have been my own person for a long time now. If you value our friendship there will never be a repeat of your fucking Don Quixote complex. You want to joust windmills do it the hell away from me. Let's get some lunch, a sushi place just opened down by the pier.\"\n\nI smiled despite the mental anguish. She was right of course. I had stolen that moment from her and she had been pissed, still was a little sore by the sound of it. I like sushi. She was wearing that ugly bright yellow sun dress that showed off her legs. Gods my brain was on random now. She did have nice legs! I laughed and Surisa looked over her shoulder and smiled. How would she have reacted to triggering the tsunami? She would have accepted it as an unforeseen tragedy and moved on. She was strong like that. We sat down and I saw something that I had missed on the shore. There was a kind of heartbeat all around me. Sure there were construction crews everywhere, but there were also tons of people rebuilding their lives as well. Was it any different than a wild fire? Sure the trees are gone but new trees are born out of the blaze. Certain seeds can only germinate after a forest fire. It was the same here.\n\n\"A clean slate,\" I said.\n\n\"Ah, you are seeing the other side of the coin,\" Surisa replied. \"About god damn time... I love you Louis but you have this tendency to carry the entire world on your shoulders. Despite what you and others might believe, the world can survive without you. Now eat up we have shopping to do.\"\n\n\"Shopping... I don't remember anything about...\" I began and decided a piece of fish was calling my name from my plate.\n\nThe blue eyed Thai just smiled and attacked her own food with great enthusiasm. We finished our meal and caught up with Feng and Yuki, our not so subtle bodyguards. We headed for the town car and I pondered what she really had in mind. If I had learned anything it was this, Surisa was always at least two steps ahead of most everyone. In this case it was the billboards announcing an entire neighborhood being built by none other than Me Chang and Psi4 Industries. I gawked at the signs and looked at her for an explanation. She smiled as she collected her thoughts.\n\n\"I need a face man that people will like. The Japanese can be a little down on other Asians moving in on their territory. So there is you, the very likable and enigmatic archaeologist turned entrepreneur. So what do you say partner?\"\n\n\"When you say partner,\" I began and she winced. \"Sixty-Forty... I mean I can put money on the table.\"\n\n\"How much are we talking about,\" Surisa asked her eyebrow raised in curiosity.\n\n\"How much do you need,\" I asked, that surprised Surisa and she told me. \"When do you need it?\" I asked and she stared at me as if she didn't know who I was.\n\n\"A week will do,\" Surisa fired back and then smiled.\n\n\"I will begin selling off product sir,\" Feng said. \"We should have that amount in time.\"\n\n\"Oh I knew I liked you Louis,\" Surisa purred. \"So tell me what have you been holding onto?\"\n\n\"Rare coins, a lot of unique museum pieces I acquired a few years back.\"\n\nFeng displayed what she called the top twenty for the Blue Eyed Thai to drool over. Surisa cried out and excitedly pointed to one of the coins. Her eyes got huge and for a moment she couldn't speak. I looked at Feng and she shrugged.\n\n\"Does that coin mean something to you,\" Feng asked before I could.\n\n\"Where did you get THAT coin,\" Surisa asked finding her voice once more.\n\n\"An unregistered site,\" I said and left it at that. \"Why?\"\n\n\"Is that the only one of that coin you have,\" she asked. \"Please tell me you have at least two of them!\"\n\n\"Feng?\"\n\n\"You have twenty of them,\" Feng replied. \"Not all are the same year but all are in good condition and cover a ten year span.\"\n\n\"TWENTY... that is all I need,\" she said. \"With twenty of those I can cover costs and have money to spare. I can offload them in a few days.\"\n\n\"Feng, which bank are they in?\" I asked.\n\n\"Zurich Switzerland,\" Feng replied. \"I will make arrangements then.\"\n\n\"Looks like we are in business,\" Surisa said with a smile. \n\nSurisa squirmed in her seat and she looked uncomfortable. I wonder if it was the fact that she was doing legitimate business that bothered her. She had always lived in the shadows and enjoyed the adrenalin rush of facing the authorities in a cat and mouse game of catch me if you can. We finished the tour of the building sites and returned to the estate. I liked her kind of shopping. It was quick and fairly painless. I didn't really care about the money. I was more into it for helping a friend in need. The compound was strangely quiet and I quickly learned why. The news of the destruction of the Archimedes had just hit. I had learned about it directly from Nick. He had been watching the entire thing via a live feed from the aircraft. He had seen the strange energy surge and then the plane fell off radar. What could do that kind of damage? I suspected but kept my mouth shut.\n\nBecca was out in the garden when I arrived and waved to me as the car passed. She looked like she had a lot on her mind. I wondered how long the separation between her and Charlie would take before she would leave. I was happy for them both. They were good people and deserved each other. Hell, I might just throw her a going away party and congratulate her on her reunion. We piled out and I told Surisa I was going to talk to Becca. The Thai smiled and walked off whistling. I stopped and glanced at the diminutive figure as she winked at me. What the hell was that all about? That little witch knew something and I was about to get ambushed. When she was happy she was in the know and I was left out in the dark, again.\n\n\"Hello Louis,\" Becca said as she came up and kissed my cheek. \"How was the beach?\"\n\n\"The rebuild is going well,\" I said. \"The bridge across the bay just reopened today.\"\n\n\"Fantastic,\" she said and blushed.\n\n\"Okay, what is going one? First Surisa and now you, something is up and I am hanging in the breeze here.\"\n\n\"I am staying,\" Becca said as she slipped her arms around my neck and kissed me.\n\nI closed my eyes and just enjoyed the moment. She pressed her body against mine and my arms went around her waist. Becca broke the kiss and I slowly opened my eyes. Her cheeks were flushed and my heart was pounding. She bit her lip and was staring over my shoulder. I turned my head and half the estate's staff was watching.\n\n\"What,\" I asked and they just smiled and returned to their duties. \"I guess it is over between you and Charlie.\"\n\n\"For now,\" she said. \"Things have just changed so much so fast. I still care about him, hell I still love the old fool. But he wants to bury himself in work while you seem to like to travel a lot. I like travelling.\"\n\n\"Well, with all the trouble I land in having a doctor around could be handy.\"\n\n\"Oh I see, you just want me for my scalpel... wait that didn't come out right. It sounded better in my head, you know.\"\n\n\"I am the king of 'it sounded better in my head',\" I told her and we laughed. \n\n\"I need to find a room I guess,\" Becca said and I just shook my head. \"...Or I could just keep sharing your futon.\"\n\n\"I think that is a great idea,\" I told her. \"Why change things now?\"\n\n\"Why indeed,\" she purred.\n\n\"I am leaving for Switzerland in a day or two,\" I told her and her eyes went wide.\n\n\"Ooh, I've never been there before,\" Becca cooed. \"Can I come?\"\n\nI just nodded and returned her kiss on the cheek. I told her I had a few things I needed to do but I would be around. She nodded and began humming a little tune as she went inside. She was up to something and I couldn't wait to see what Becca had planned. I went to the dojo that was on the eastern side of the property. I would change into a ghi and prepare for some real time training and then delve into the series of programs Feng had created for me. I had no idea if the interface would function properly or even safely but I had little choice. That damn Watcher was going to pick the third host to possess and this time I felt would be the last. I just needed to keep its attention on me, that way it would at least leave my family alone. \n\nI began working on my hand to hand combat first. It was a great warm up and it would help push out the doubt. I moved from one Kata to the next until I had performed them all. I was covered in sweat and ready for the next phase. I grabbed a shinai, a bamboo sword and began driving myself faster now. Speed might save me I thought as I pushed my limits. The world seemed to slow down as adrenalin coursed through my system. I dove into the movements as my mind went blank and yet my body continued on knowing the next move and the one after that. I was lost in the maelstrom that existed between breaths and beyond consciousness. Was this Enlightenment? Was this what monks sought after with so much devotion? Reality came to a crashing halt as brand new sensory input flooded my perception. There was a pulsing in my ears, like the beating of a heart.\n\nBehind all the static and distraction of everyday existence there was that heartbeat. I began to believe that it was the universe making itself manifest to me. I was so wrong. I was a mote in the eye of a god. I was standing in the heart of darkness. I stood on a hunk of black rock orbiting something so vile and so inhuman I feared to move or even blink. It was the size of a red giant. It was a million more times as massive as the star that warmed my world. I had seen the glyph above my head on numerous occasions but now I saw it with my own eyes. It was none other than Azathoth, the daemonic sultan and a power beyond comprehension. It was evil the way no other being could compare to. It put the Christian devil to shame. Why the hell was I even here? Had the sultan called me here? Oh god I hope not! I tore my gaze from the thing that dominated my horizon and stared at the star sized entities that orbited Azathoth. A dozen mad gods sang and piped and entertained their lord and master. \n\n\"When the universe was dark and before the first star was kindled, it was already old.\" Nyarlathotep purred in my ear.\n\n\"Why am I here dark pharaoh?\" I asked.\n\n\"You pose that question like I had an answer,\" it chuckled. \"I am only the manifestation of the will of the dark gods, not their keepers. I am a flea in their perception of things as you are to me. I have a secret Louis... I love playing with insects.\"\n\n\"I hope I have amused,\" I said holding up my wrist and he removed the bracelet.\n\n\"You have sired more than your fair share of offspring. I am a being of my word.\"\n\n\"What happens now,\" I asked.\n\n\"For you, I cannot answer. I have entered into an accord to not interfere in your life path. For what it is worth, I hope you kick his ass. I have always found Watchers to be pompous ass pricks.\"\n\nI felt his hand on my shoulder and a heartbeat later I was back in the dojo. I raced outside and hurled. I was shaking and curled in a fetal position. My mind screamed at the overwhelming horror I had witnessed. I wept and tried to push the memory out of my thoughts. The grass was gone and I was kneeling on a large hexagonal platform. The floor was mirror bright steel and on each corner of the platform was a door. Each door was a color of the spectrum, red, yellow, orange, green, blue and violet.\n\n\"Get up,\" Feng barked. \"Get the fuck up!\"\n\nI was so stunned by the words and her tone I was on my feet automatically.\n\n\"Have you lost your fucking mind?\"\n\n\"No, have you,\" she growled. \"You had me going into all this work and tie into the six stones. Now get off your ass and get to work.\"\n\n\"You cunning bitch you,\" I said smiling. \"Thank you.\"\n\nI suddenly realized what she was doing. It was an emotional shot to the head. Something I desperately needed at that moment. I looked at each door in turn and settled on the blue one. Feng followed me in and helped me interpret each interface. Six doors later and an amazing three hours for the outside world I emerged from my time with Jon's gift. I opened my eyes and there was Yuki standing watch over me. She smiled and I could see a look of relief on her lovely features. \n\n\"I couldn't wake you,\" Yuki said as I sat up. \"Becca-san asked that I keep an eye on you.\"\n\n\"Where is she?\" I asked as I tried to stand and failed. \"Oh crap... dizzy...\"\n\n\"Sit while I have someone bring you some food,\" Yuki said and called for help. \"Becca has been monitoring your vital signs. You have been tied to your neural implant a dangerously long time. She will want to run some tests to make sure there is no permanent damage.\"\n\nI looked at the watch on my left wrist and saw how much time had passed. Oh shit, the longest I had ever been 'gone' was ten minutes but three hours I can see why they were worried. The strain I had placed on my nervous system could prove permanent. The food arrived and I ate there sitting on the lawn. Becca arrived with her A.I. Nyx by her side. She looked worried but forced a smile.\n\n\"I hope you don't mind,\" Becca said as she sat opposite of me. \"I borrowed Feng's portable projector. It has a wider array of sensors available to it.\"\n\n\"Borrow away,\" I said. \"So how bad is it?\"\n\n\"We don't know that it is bad yet,\" she said maintaining her bedside manner. \"I am going to have Nyx scan you as I ask you to repeat certain words. Then I am going to show you some images and you tell me what you see.\"\n\n\"Sounds like a plan,\" I told her.\n\nSo while Nyx observed my brain activity I repeated her words and then told her what I saw in the pictures. I could tell something was wrong by her expression. Becca had a puzzled look on her face and she consulted with Nyx and the vast medical data base she represented. So while she did her thing I fired up my play list and began listening to some music via my implant. Nyx alerted Becca and they stared at her display of my brain activity. Becca snatched up a fistful of grass and held it up for me to smell. I leaned forward and sniffed the grass. It reminded me of all the times I had cut grass at my parent's rental properties. Then I had a flash of shoveling snow and how cold it had been. I could see my breath and the falling snowflakes in my mind's eye. The smell of Christmas dinner and hearing carols playing on the stereo. \n\n\"I don't understand these readings at all,\" Becca said. \"They make no sense at all.\"\n\n\"Show me,\" I ask and Nyx created a holographic display of my brain activity. \"The activity is all over the place. Is it supposed to be like that?\"\n\n\"NO,\" Becca snapped. \"When you read a certain part of your brain lights up. The same is true of other activities; the brain is a very specialized organ. There is a certain synergy with parts of the brain but your activity seems completely delocalized. Okay, let's go live and I'll show you what I mean.\"\n\nI watched as the image flickered for a moment and then I was looking at my mind at work. It was like a storm cloud and the lightning was everywhere. Suddenly I remembered a time when I was caught out in a spring shower. I could smell the rain, hear the thunder and actually feel the soaked clothes clinging to my skin. The display went wild with activity and it was my entire brain at work. I glanced at Becca and told her about the memory. She shrugged and I asked if this was a bad thing or not. There was no sign of damage per se but she wanted to have Feng monitor me and alert her if there were any abnormalities. What did it all mean? Was this an effect of my shape shifting? \n\n\"Is this a symptom of my shifting ability?\" I asked but she shook her head. \"This change is very recent. The previous records of your activity look nothing like this. It has to be whatever you did very recently. Oh I know that expression, tell me.\"\n\n\"My dad gave me something,\" I said. \"He called it a kind of legacy. It took Feng a few days of nonstop work to be able to access them. They are a kind of crystalline archive. I opened their interface and went through a kind of training regimen with them. I guess I kind of lost track of time.\"\n\n\"Three hours you were out,\" Becca said with a scowl. \"Your longest access prior to that was nine and a half minutes. What is the conversion? I know it is all subjective but it is important.\"\n\n\"I have recorded his time working with the neural implant. His digital experience varies depending on how long he is tied into the interface. I have noticed that the longer he is tied in the greater the difference between objective and subjective time.\" Feng explained.\n\n\"How long was it for him Feng,\" Becca asked. \"Feng, how much time passed for Louis?\"\n\n\"More than a year,\" Feng said softly.\n\nBecca looked at me and I smiled. I watched her lips as she repeated my own words, I kind of lost track of time. Her thoughts were suddenly in my head and I wasn't surprised at all. What had been so enticing that he was gone for an entire year? Then there were memories of an old musty library, sunlight falling in diagonal shafts as motes of dust hung in the air. There were row upon row of book shelves and it seemed to go on forever. Then she was imagining what the Library of Alexandria might look like. I felt her emotions rise at the desire to wander that ancient place. I smiled and she caught me looking at her and I actually blushed. It was as if she had found me in her closet while she was changing clothes.",
        "\"Why are you blushing Louis,\" she asked and I hesitated but I remembered my promise to the Weaver.\n\n\"Library at Alexandria,\" I said and her expression of shock made me feel even worse. \"I didn't mean to.\"\n\n\"You said there were multiple crystals,\" she said and I nodded. \"Can you tell me about them?\"\n\n\"Yeah, but they are just libraries,\" I told her. \"I can't do all the things I played at with the interface.\"\n\nI told her about the six doors and what was behind each of them. Becca sat in rapt attention as I described the A.I. watchdogs that I had to deal with. I credited my father with one hell of an imagination and a creative genius. I could see it in her eyes that she wished she could learn how to do the things the simulation allowed. She really was a daydreamer and I think I loved that part of her the most. I finished my meal and guzzled down the last of the soda. I successfully reached my feet this time and retrieved Feng's remote sphere for her. I took it with me and placed it on its cradle to recharge. Running all those scans had drained the battery in no time at all. Speaking of drained, I stripped down and crawled under the sheets and fell asleep. \n\nI dreamt of all the places and times I would love to visit if I could actually time travel. I imagined I was able to bend the fundamental forces of the world to my will and reshape reality as I saw fit. It was the most fun I had in a dream outside of fucking I could recall. It felt so damn real and intense. I was a kid again and there were no limitations because life hadn't taught me any yet. Every tree was an evil fortress and a pile of leaves was a feather mattress. It sucked growing up! I opened my eyes and found two naked bodies near my own. Becca was on my right side with an arm over my chest. Yuki was spooning my left side with her leg slung over my own. Yuki's face was buried between the pillow and my shoulder. Okay, so getting old didn't suck that much.\n\nYuki began to moan in her sleep and her hips began to grind against my leg. I could feel her secret heat as it grew warmer and wetter. I wondered if she were dreaming about me. If there was any doubt she called out my name. I reached out and stroked her hair and she purred. I was taken by surprise when Becca's hand wrapped around my erection and began stroking it.\n\n\"He's awake,\" Becca whispered.\n\n\"I know,\" Yuki giggled.\n\n\"You played me,\" I said as Becca's lips wrapped around the head of my cock.\n\nBecca reached up, grabbed my wrist and placed my hand on her head. Her meaning was clear. I grabbed her by the hair and began to push her head down. She was moaning now as I shoved her head further and further down. Yuki was watching intently as I fucked Becca's throat. She pinched her nipples and her pussy was soaked by now. I turned my head and Yuki fed me one of her snow white nipples. I suckled it and her cries grew louder and more insistent. I pushed Becca's head down now as I got close to climaxing. I was rough with her but I couldn't cross the line to brutal. I cried out as I came and the dutiful Becca eagerly swallowed it all or so I thought.\n\n\"I thought you were going to share,\" Yuki said pouting.\n\nBecca leaned up and the pair kissed. I watched as the embrace deepened and then I realized what was going on. Both of them swallowed at the same time and I had to smile. They broke the kiss and licked their lips in satisfaction. I began to sit up and Becca shook her head. Yuki took her turn and straddled my lap. She ground her soaked slit against my semi hard cock while Becca planted her wet cunt over my face. I grabbed her ass cheeks and buried my face between her legs. My tongue slithered between her labia and Becca was cursing in no time. Yuki took advantage of this and slowly impaled her tight little pussy on my growing erection. \n\n\"Is he bigger tonight,\" Yuki asked as her hips moved slowly downward. \"He is going to split me in two!\"\n\n\"His tongue is invading my poor little pussy,\" Becca whimpered. \"I need to study this... for medical reasons you understand.\"\n\n\"Uh huh,\" Yuki replied in a dreamy little voice.\n\nMy tongue swelled inside of Becca as my cock grew thicker and harder inside of Yuki. It was a win-win situation. The girl's did all the real work now as the rocked their hips and let me pleasure them. I flexed my dick and heard the muffled cry from Yuki as she squeezed me right back. Not to let Becca feel left out I began undulating my tongue and felt her body begin to shake. She was so damn sensitive and easy to push over the edge. Becca cried out and I tasted her juices as her pussy clamped down around my tongue. The dark magic rose up and I fed lightly from them both. The two took turns for a little while as one climax followed the other. I was able to take charge after twenty minutes or so. I placed Becca on bottom and the slightly more petite Yuki on top. I was sorely tempted to call on the dark miracle but I chose not to. I took turns thrusting into one woman and then the other. They liked sharing and it proved as satisfying in the end. Yuki was the lucky one that managed to spin around just in time and take my load down her talented throat. \n\nI tucked them in bed and filled with their healing energy I took a shower and decided to walk the grounds. I was always restless after sex now. It was like drinking a few cups of coffee too many. I called home and spoke with Gabrielle. She was beginning to show now and by the end of this year or the beginning of the next I would be a father. She had that glow about her that expectant mothers radiate. \n\n\"I didn't think it was possible, but you are more beautiful now than ever,\" I said.\n\n\"I forgot how charming you can be. When are you coming home?\"\n\n\"Soon, I am almost done here in Japan. Apparently I am going into business with Little Moriarty. I am going to get some coins in Switzerland and once those are sold I will be a partner in a construction company working here in Japan.\"\n\n\"Do you need the money,\" she asked and I shook my head. \"Then why... oh she sprung this on you didn't she?\"\n\n\"Yep, speaking of I wonder where the little minx slipped off to?\" \n\n\"I am glad you are putting the past behind you. I worry about you.\" Gabrielle said and her eyes glittered with tears. \"Damn hormones, just take care of yourself and come back to me.\"\n\n\"If it is within my power I will be there,\" I said and she nodded.\n\n\"I would be at your side if Rome hadn't ordered me to stand down. They want to see this child born and raised in the Order. He will be a formidable Inquisitor!\"\n\n\"She will be, just like her mother,\" I added smiling. \"I love you!\"\n\n\"I love you too,\" she said sniffling and cursing.\n\nI hung up since I knew she wouldn't. Gabrielle was an amazing woman. She understood my strengths and weaknesses like no other woman alive. She understood the danger I posed to her and still she loved me. Feeling caged I leapt to the top of the outer wall, a distance of over twenty feet. I hopped down and left the estate to prowl the streets of Tokyo. The restlessness had only been agitated by the situation back home. I paused and took my father's gift and willed it into a new shape, a torc. I slipped the crescent shaped necklace around my neck. The gleaming black metal was adorned on the 'horns' of the sickle shape with twin wolf heads. The traditional Celtic jewelry had been all the rage around the time of the Vikings. You might call it old fashioned, I called it a fashion statement. Besides I was paranoid about someone getting their hands on the damn thing. \n\nI stalked the streets and felt that psychic tug of a woman in heat. It grew stronger and I realized it was multiple women which could mean only one thing, a nightclub. I got within line of sight and saw what everyone was wearing and adjusted my attire appropriately. I strolled down and was intercepted by the man behind the red velvet rope. He was decidedly tall, thick of limb and easily a head taller than I was. He looked at me and his face scrunched up in confusion.\n\n\"What are you,\" he asked in broken English.\n\n\"I am a paying customer,\" I replied in flawless Sidhe.\n\n\"Let him in Diego,\" a sultry voice called from the open door. \"His money is as good as anyone's.\"\n\n\"Thank you,\" I said as I approached the tall leggy fae.\n\n\"Welcome to HIPS, let me show you around,\" she offered. \"You are that archaeologist fellow. You do manage to get into the news. First China and then that terrible tsunami business, no one is blaming you dear. It was an act of god after all. Where are my manners? My name is Titania and this is my club.\"\n\n\"You have quite the diverse clientele Titania,\" I told her seeing more nonhumans in one spot than I had ever experienced before.\n\n\"We are here to serve and protect all of our customers. Everyone needs a place to unwind, even you... although I am stumped on what species you are.\"\n\n\"Is there a classification for magical accident, if so please feel free to place a check next to that box.\"\n\nShe laughed and it was as sensuous as the rest of her. Titania was utter perfection as was all of her race. They were tall, long limbed and formed flawlessly. It was said they were immortal and only died by violence or a broken heart. Breaking the heart of a fae was a herculean task and not the wisest course of action. The Sidhe, Titania's particular bloodline, were cold, aloof and lethal when angered. Of course make them happy and they were friends for life, a very long life. As we made the rounds and I was introduced to her court and supplicants I thought of an actress and her fawning fans. She was the rock star here and I was arm candy for now. We reached the main bar and I failed to hide my surprise when I saw Surisa sitting there chatting up a well hung satyr. \n\n\"You really do know people everywhere,\" I said in greeting.\n\n\"Louishhh,\" Surisa said slurring my name horribly. \"You musht try the ambrosia, it is to die for!\"\n\n\"You know her,\" Titania asked equally surprised.\n\n\"Of coursh he does,\" Surisa replied. \"He is my kid brother after all. Oopsh... forget I said that.\"\n\n\"You are one of HIS,\" Titania blurted out as her mask of indifference shattered. \"That explains everything! He drinks for free, give him whatever he wants.\" \n\nTitania left me standing there and the ogre behind the bar smiled and I ordered ambrosia. I sat down next to Surisa and she leaned her head on my shoulder. She was shit faced and on the prowl. She propositioned the satyr about a three-way and for a moment there I thought he might take her up on that offer. A finely cut crystal goblet was set down in front of me and I was warned to sip it. I took that advice and took my first sip of the honey colored drink. It was sweet at first but then there was a slight burning sensation followed by an extreme feeling of wellbeing. I could see how this could be addictive.\n\n\"Brother huh,\" I said after my second sip.\n\n\"Nah,\" Surisa giggled. \"I just wanted to see blondie lose her freaking mind.\"\n\n\"So who is your dad,\" I asked.\n\n\"Remember when we first met at the University? Everything I told you about me was true. My dad was a smuggler and a damn good one at that. I spent my childhood travelling the entire world. We went everywhere and met some amazing people, not all of them human. He had laid the groundwork for what I built upon.\"\n\n\"I remember, okay so who is your mother,\" I asked and she smiled.\n\n\"You are like a dog with a freaking bone,\" she replied giggling again. \"My mother was as human as anyone outside these walls. I on the other hand am not. You might call it a recessive gene. The way I figure it, it was on both sides of my family tree. It skips generations and is very unpredictable. But I got the double whammy when my parents hooked up, both sides created a genetic cocktail and I was born.\"\n\n\"What sort of recessive gene are we talking about,\" I inquired as I took a third sip of ambrosia.\n\n\"Immortal,\" she said. \"As far as I can tell I come from the same stock that brought about the Akhkharu, well before they became what they are now. The Christian bible calls them Nephilim or the children of angels and humans. The truth is much stranger than that. How about a hand job?\"\n\n\"When is the last time you got laid,\" I asked and she had to think about it.\n\n\"Dear god what the hell is that around your neck,\" Surisa asked leaning close. \"Is that a torc? Why on god's green earth would you be wearing one of those things? Got ya...\"\n\nThe little shit had masked her movements and had me unzipped, freed and in her hand. She winked as she stroked me. My mind went blank as I wondered what the other patrons would do or say if they saw what Surisa was doing. She continued the conversation as if nothing was wrong. Of course she had steered it away from mythical blood lines to our business venture. Damn her hand felt amazing as she prattled on about zoning and labor costs and whatever the hell else. I think the ambrosia was making things better. I took a healthy swig and yes it made her hand feel like velvet wrapped around the shaft of my dick. \n\n\"Are you enjoying yourself,\" Surisa purred in my ear. \"It's not every day I give someone a hand job in a place like this.\"\n\n\"Yes I am enjoying it, damn you,\" I replied biting back a moan of pleasure. \"You have a very delicate yet firm grip on the situation.\"\n\n\"I get that a lot,\" she said as her hand picked up speed. \"Don't worry about a thing, I have everything in hand.\"\n\n\"I... I know,\" I whimpered.\n\n\"Don't I know you,\" a scantily clad wood nymph asked. \"Sure, you're the guy that bound that storm demon in China.\" She noticed the movement and smiled as she shifted closer. \"How are you enjoying that?\" I felt her hand take up position on the upper part of my cock while Surisa continued working the lower end. \"Just go ahead and blow whenever you are ready.\"\n\n\"I uh...\" I began and I stopped as the dual action was overwhelming me.\n\n\"He's close,\" Surisa murmured.\n\n\"Yes, very close,\" the nymph agreed.\n\nI felt my cheeks burn and I lowered my head as I began to shake in my seat. I warned them and they both just smiled. A moment before I blew the wood nymph ducked her head down and wrapped her soft supple lips around the head of my cock. I grunted as I fired the first half of my load down her throat. Surisa tightened her grip on me stopping the flow. She and the nymph swapped positions and the Blue Eyed Thai drank the second half enthusiastically. The ogre saw my face and laughed. He poured me a proper pint of Guinness and set it in front of me.\n\n\"It's on the house,\" the bartender said smiling.\n\n\"I guess that answers my question,\" I said. \n\n\"Yeah, it's that kind of place,\" the wood nymph replied her arm gripping my own. \"There are rooms upstairs for rent if you'd like to slide that python into my cave.\"\n\n\"Listen sister, if anyone's cave is getting violated here it's going to be mine.\" Surisa said staking her claim.\n\n\"Ladies, I know this little trick and trust me you are going to love it,\" I said still feeling the full effects of the ambrosia. \"So what do you say?\"\n\nSurisa deftly tucked me in and zipped me up. The ogre handed me a room key and just smiled. Surisa clung to my right arm while Periwinkle Jasmine De Rose clung to my left. We reached room five and I unlocked it. Feng chirped in my ear that the place was wired for audio and video. With a wave of her talented digital hands she put a stop to that instantly. I closed the door and by the time I turned around Peri was naked, she didn't really have that much on and Surisa was stripped down to panties, stockings and a smile. I tugged off my shirt and I had it half off by the time my belt was unbuckled, pants unzipped and my shoes tugged off. My shirt hit the floor about the same time my boxers did. The girls weren't just eager but quite dexterous.\n\n\"I wonder what a nymph tastes like,\" I asked as I bent her over and began licking her cunt from behind.\n\nSurisa knelt between the nymph's legs and began sucking me off. I was painfully hard by the time Peri was shaking and moaning. Her pussy tasted like honey and smelled like her name sake. I positioned Peri with her ass hanging off the edge of the bed. I slid into her while I directed Surisa to lay next to her. The Asian had a frown on her small pouty lips but not for long. I conjured a spectral cock to entertain her until I made the nymph climax a few times. After that I was going to punish both of them for their little stunt in the bar. The gleaming phantasm matched my movements exactly which created a nice little melody between Surisa and Peri. The Thai pulled her knees to her chest so I could see her pussy get ravaged. Peri on the other hand had her long legs wrapped around my waist and was squeezing her pussy muscles around me.\n\n\"You are quite gifted for a mortal,\" the nymph moaned. \"Your cock could put a few satyrs to shame.\"\n\n\"I have never been with a wood nymph before,\" I admitted as I fondled her tits and pounded her pussy.\n\n\"You know what they say... Once you've had Fae you'll never stray...\" she giggled.\n\nI hammered her harder now and she climaxed so violently I thought she was having a seizure. Her back arched and she was cursing like a sailor. I paused and glanced over at Surisa. She was covered in sweat and looked like she had just had her own orgasm. I let them catch their breath while I pondered how I was going to take full advantage of this little duo. \n\n\"I am ready for your little trick,\" Peri said.\n\n\"Yeah, me too,\" Surisa added eagerly.\n\nI eased out of Periwinkle and canceled the spell on Surisa. I directed them to lie on the bed, on their sides and back to back. That put both their pussies in perfect position. I performed the dark miracle and eased a cock into each of them. Periwinkle was the most surprised of the pair. She gasped and then her eyes closed half way as I began to thrust. Surisa took it all in stride and ground against me as we fucked. The dark magic rose up and that's when Peri really reacted. I had no idea nymphs were so susceptible to it. She had a triple climax the moment the power enveloped her. I actually had to slow down to allow her to catch her breath. I took my time and moved very slowly but even this pace was overwhelming to Peri. \n\n\"Coming... again,\" she cried out her eyes clenched shut now. \"I've never been fucked like this!\"\n\n\"Faster... harder...\" Surisa demanded.\n\n\"Sorry Periwinkle,\" I apologized as I began ramming my hips forward again.\n\nI placed a hand on each of their hips and hammered away for all I was worth. I fed lightly from them both and that was a good thing. The life stuff of nymphs is very potent and addictive. I performed another shift and split the upper half of my cocks in two. I watched as Surisa's eyes widened in pleasant shock while Periwinkle held on like a kid on a roller coaster. When I was close I yanked my cocks free and pasted them both with cum. I withdrew the dark magic and shifted back to normal. Periwinkle rolled onto her back and just laid there. Surisa was sitting up and praising me and my little trick.\n\n\"If I knew you could do that I would never let another woman touch you ever again,\" Surisa gasped. \"I have never been fucked like that in all my long years.\"\n\n\"Periwinkle, are you alright,\" I asked and she just smiled weakly.\n\n\"I agree with her,\" the wood nymph moaned. \"I have never had that many climaxes in a week of love play. I am wrecked. My poor pussy is devastated. I think I am in lust.\"\n\nI stood there enjoying the scene when I felt it. There was a change in the air and I spun around fearing the Watcher had chosen to strike now. The atmosphere was heavily charged and I threw up a hand instinctively in defense. The outer door left its mooring and flew towards me. To everyone's utter amazement, including me, the door appeared to hit an invisible wall and dropped to the floor. Titania bristled in the open doorway and man she looked pissed. Her entire demeanor screamed murder.",
        "\"How dare you break one of my toys,\" she roared.\n\n\"I can explain,\" I began and felt the air thicken with mana. If she struck now one or both of the girls could be hurt or worse. \"NO!\"\n\nI had only used the dark magic once before as a weapon. I kept it focused and my intent was to immobilize Titania. I lashed out first; she folded and dropped like a rock. Periwinkle raced to her mistress' side and checked her. The look of relief was clearly evident on the nymph's features. \n\n\"I think she fainted,\" Peri said. \"What did you do to her?\"\n\n\"Massive overload of the pleasure centers of her brain,\" I said.\n\n\"Knock out by orgasm,\" Surisa giggled. \"That is why I adore you.\"\n\n\"She does look rather flushed,\" Peri observed. \"Her legs are twitching... I fear she is correct. Titania passed out from a massive orgasm, lucky girl.\"\n\n\"I think I should leave,\" I said as I called my clothing to me. It melted into a kind of crystalline ooze and slithered over my body and returned to its former appearance.\n\n\"Body armor,\" Surisa asked and I nodded. \"Why are you wearing body armor?\"\n\n\"I have an insane Watcher hunting me,\" I replied and headed for the doorway.\n\n\"Wait, I will come with you,\" Surisa cried out. \"I will meet you out front. I'll try and clear the air between Rhiannon and you.\"\n\n\"Rhiannon, I thought her name was Titania?\"\n\n\"It is an honorific title,\" she explained. \"The female Hold Leader carries the title of Titania while her partner earns that of Oberon.\"\n\n\"I'll meet you outside,\" I said and left.\n\nIt was well after midnight by the time Surisa left HIPS. She wasn't alone. Rhiannon was with her and she appeared shaken but intact. I took a step back and the Fae frowned like a scolded child. What the hell was going on? I was out of my depths concerning the customs of this culture. I was about to apologize when she beat me to it. She flung her arms around my neck and pressed her body close. She whispered apology after regret in my ear. Rhiannon ni Titania begged me for the opportunity to repair the damage she had created with her outburst.\n\n\"I understand you want to make amends,\" I whispered back. \"But how could I possibly trust you after that little show of power? I thought you were something else and I am not sure going back inside is my best course of action.\"\n\n\"How can I earn your trust,\" she purred. \"It is very important to me.\"\n\n\"Well, there is one way you could prove it to me,\" I said smiling. \"We need a private room.\"\n\nI told her what I needed from her and she willingly, hell eagerly agreed. It took an hour to make all the preparations. Surisa and I sat in the bar eating a light meal and switched to coffee. I have to say this. I have had the pleasure of tasting the fruit of the bean all over the planet but this was by far the very best coffee to pass my lips. By the time I had enjoyed my third cup Titania had reappeared. She had put on a different dress and her hair and makeup were done to perfection. It was a pity that was all going to be unrecognizable when I was done with her. There were whistles and cat calls as she made her entrance. \n\nShe walked up to me and took me by the hand. We made a quick circle around the club and took the stairs to the second floor.\n\n\"What do you think,\" she asked once we were at the top of the stairs.\n\n\"It's a real shame,\" I told her. \"When I am done you are going to be as wrecked as that poor wood nymph.\"\n\n\"Promises... promises...\" she purred.\n\nTitania led me to her personal play room. I looked at the dimensions and it would do. I told her to take off her shoes and she just smiled genially. I led her to one corner of the room and told her to wait. I walked to the far side opposite of her and placed a chair there. I sat down and cast a spell that the Weaver herself had taught me. The floor between us shimmered and glistened with what appeared to be some sort of pale liquid. Titania looked at the rectangle of fluid and then at me.\n\n\"What am I expected to do,\" she asked raising an imperious eyebrow.\n\n\"Walk over to me,\" I said smiling. \"If you can that is.\"\n\n\"It looks sticky,\" she said as she bent down and touched the substance.\n\n\"That's the point,\" I told her. \"Now you can either open the door or walk over to me.\"\n\nShe stood upright and pushed back her shoulders. Titania smiled and set her stockinged foot into the liquid. It clung to the material of the stocking but not her skin. Her second step was less sure as she was stuck fast by her leggings. The next step tugged the stocking right off her leg. She nearly stumbled and fell but the thought of that kept her upright. Her fourth step robbed her of the other stocking. Freed of those she was more confident. The next step showed the insidiousness of the spell. Her foot dropped and the fluid splashed upwards leaving thin strong strands from the floor to the lower hem of her dress. She gasped when she witnessed this.\n\n\"Oh no my dress,\" Titania cried out.\n\nYet she continued and each step splashed more and more of the fluid onto her dress. The filaments formed webbing that tugged at the material of her garment. The further she went the slower she moved. Fae despite their thin build and willow like appearance are far stronger than humans. Titania looked up at me and she knew what my endgame was now. She smiled and took another step even as a ripping sound filled the air. A large chunk of her lovely gown was torn from her. \n\nShe hadn't reached the midpoint yet when she lost her balance and fell. Titania cried out as a huge splash of the fluid covered her from head to foot. But the uncanny nature of the substance left skin and hair unmolested. Not so her finely crafted dress that was once her favorite. She had to crawl now and the sounds of tearing and ripping were only drowned out by her sobbing. The Fae ruler was naked by the time she forced her way out of her dress and undergarments. Tear stained and pride shattered she sat at my feet.\n\n\"I hate you,\" she whimpered. \"That was my favorite dress!\"\n\n\"You can always have a finer dress made. You can't always earn a man's trust however.\"\n\n\"You trust me,\" she asked wiping tears from her eyes.\n\n\"Almost,\" I said offering her my hand.\n\nI stood up and helped her to her feet. I looked her over and smiled. Her body was even lovelier than her face. She bore no outward scar, flaw or imperfection. I kissed her cheek and tasted her tears. I cancelled the first spell and then stripped off my clothes. She managed a smile now. \n\n\"Do the Fae fear anything,\" I asked as I posed her arms over her head.\n\n\"Yes, but they are few and I will not share that,\" she wisely replied.\n\n\"I want to test a theory,\" I told her as I invoked the first part of my next spell.\n\n\"My hands, what have you done to my hands?\"\n\n\"It is the next incantation I have chosen to test your trust. Do you trust me Titania?\" I asked and she nodded slowly. \"Good, I will reward that trust.\"\n\nThe spell had created a field of solid force in the shape of manacles. I could direct their placement with a thought. My next thought brought her arms in front of her. I told her to bend over at the waist and we would begin. She hesitated for a moment and then complied. I invoked the second half of the spell. The force holding her hands was released. Now a larger force held her immobile around her waist. She cried out in surprise as she was stuck once more.\n\n\"I see a theme in your spell craft,\" she moaned. \"Are you going to rape me now?\"\n\n\"Yes, after you suck me off, I am going to fuck you senseless.\"\n\nI walked in front of her and let her use her hands, lips and tongue. She had me erect in no time at all. I grabbed her by her hair on either side of the head. Titania opened her mouth and prepared to have her throat fucked. I wondered if she had a gag reflex. I was about to find out. I began slowly letting her work over the first few inches. Then I fed her inch by inch until the base was brushing against her lips. I warned her and began thrusting in and out of her throat as if it were her cunt. She closed her eyes and I saw tears fall as I took my pleasure from her. I made tight fists with my fingers and felt her body stiffen.\n\n\"Oh you filthy little liar,\" I said as I fucked her face harder now. \"You naughty masochist you...\"\n\nHer tongue began to work me now when I pulled backward. She had been playing me the entire time. Immortality must breed some serious boredom. I wonder how many of her lovers were this brazen. I thrust faster now and warned her that I was close to shooting my load. Her eyes snapped open and she looked up at me. I cried out and felt as she swallowed every drop. Panting I withdrew from her mouth.\n\n\"That was a glorious beginning,\" she praised me. \"I can't wait to feel you inside of me.\"\n\n\"I don't plan on disappointing,\" I said as I moved behind her. \"Damn, you are dripping honey back here precious. I must have a taste before I fuck you.\"\n\nI knelt down and used my tongue to trace every inch of the coin slot she called a pussy. I grabbed her ass cheeks and gently pulled them apart as I buried my tongue inside of her. It slithered deep and she squealed like a school girl when the tip touched her deepest recesses. Her pussy tasted like nectar. I swelled the thickness of my tongue and began moving it in and out of her. She tried to thrust her hips backward but the spell prevented that. The more I moved the better she tasted. It took less time than I would have thought to get her off. Her screams echoed off the walls and I half expected bodyguards to come rushing in. \n\nI withdrew my tongue and stood up. Titania was covered in a thin sheen of sweat and eager for more. The quiet gentile woman was gone and in her place a sex starved force of nature. I teased her with the tip of my cock for just a minute or so before I eased the entire length into her soaked slot. I began moving now and she cried, cursed and cajoled me to fuck her harder. I slammed my hips into her as hard as I could and feared to hear a bone crack but she was as sturdy as she was beautiful. I dug my nails into her ass flesh and pistoned in and out of her now. The dark magic ensnared us both and she didn't fight its affect. If anyone could have it would have been her. \n\n\"Dirty pool,\" Titania cried out. \"Oh fuck I'm coming!!\"\n\nThat was her first but hardly her last climax of the night. I fed from her and she gave willingly. Her life force was the strongest next to the Weaver I had ever experienced. I let her rest after my second orgasm. I released her from the binding spell and she collapsed to the floor. Fully in the grip of the dark power within me I took her again. I grabbed her by the hair and yanked her head back to kiss her. Even as our lips touched the dark miracle manifested and I violated her without mercy. She moaned into my mouth but never fought back or denied me in any way. I rolled her onto her back, raised her hips into the air and slammed into her holes again. She watched as my cocks pierced her to the core. I thought I would see fear or anger but all I witnessed was adoration and submission.\n\nIt hit me between the eyes as I thrust downward and into her. I was Michael triumphant and she was Lucifer submissive. I smiled as I fed from her and rewarded her body with mind breaking passion and pleasure. Her voice was hoarse from crying out when I finally at long last was utterly and completely sated. My body screamed with her energy. I left her a broken woman on the floor as I stood up shaking and quivering. I had taken enough life to slay a hundred humans but she was still alive.\n\n\"Louis... LOUIS...\" Feng shouted through the interface. \"You need to stop Louis.\"\n\n\"I know, I don't want to hurt her,\" I replied.\n\n\"No Louis, if you continue you could take too much,\" she warned. \"Let me help you. Release control of the interface to me. Let me bleed off the excess power, please!\"\n\n\"Alright, I trust you,\" I said as I fell back into the padded chair behind me.\n\nI closed my eyes and brought up the interface's display. I willed it to allow Feng complete access. I felt her enter my mind and body. There was a moment of fear, it felt like I was falling but she would catch me I knew. My body tingled as she performed a series of shifts both subtle and obvious. Some of the shifts were temporary to simply get rid of the excess energy while others were more profound and permanent. I think I dreamed. I was floating on a current of light. For a moment I thought I was back at Wind Sword Manor and asleep on my father's bed. It was the one that had no mattress but used some form of repulsion to keep a body floating in the air. The light began to fade and drifted on a cloud above an ocean of dark water. I was at the demarcation point between heaven and earth.\n\nI fell but Feng was there to catch me. I opened my eyes and was once again myself and no other. I held up my hand and my skin was dark olive and I looked around to see the sleeping form of Rhiannon ni Titania on her bed. I stood up and felt surprisingly well for how close I had come to burning out. I did as I so often did, I hit the shower. I regarded my reflection in the mirror and stopped cold. I ran my hand over my face but it was a true and honest image I saw. Oh Feng what have you done? It was me and yet it was the face of a stranger. I liked the short spiky hair though. I felt that it suited the new me quite well. But the eyes were so alien to me. They were the color of ice with a vertical slit like a cat's. My features were familiar and yet it was as if I had undergone complete reconstructive surgery. I wiggled my fingers and my toes to make sure I wasn't dreaming still.\n\n\"Do you like,\" Feng said as she slipped her arms around my waist from behind.\n\n\"It feels like when you move into a new house or apartment. There are all of your things and yet...\"\n\n\"And yet it is a strange place,\" she finished. \"I dumped a lot of that energy into enhancing some very fundamental aspects of your biology.\"\n\n\"So this is the new me,\" I said and she nodded as she kissed my neck. \"You've been talking to Sterling haven't you?\"\n\n\"Me speak with a rogue A.I.? I would never betray your trust that way. However, I did manage to get a good look at what she did to Jon. I didn't go that far but I did tweak a few things.\"\n\n\"You can tell me all about it while I shower.\"\n\nAs I washed off the funk and fluids from my romp with Titania, Feng told me what she had improved upon. She had been true to her word and kept it to some very basic things. Oh that clever girl of mine. When she was done I rinsed off and reached for a towel. Titania was there to hand it to me. As I dried off she took over the shower and I watched her wash up. I wrapped the towel around my waist to hide my member from her. She looked like she could go another round or three. I had never met a woman that could take me at my worst and survive. \n\n\"You were a very naughty boy,\" she purred. \"You did things no self-respecting man would do to an innocent like me.\"\n\n\"Innocent,\" I repeated. \"We have two different definitions of innocent... what do I call you now?\"\n\n\"Call... me...\" she said as she shivered and turned to face me. \"You can call me whatever makes you happy. I have a long list I have responded to in the past but I will let you decide.\"\n\n\"I really broke you didn't I?\" I asked and she nodded as new color came to her cheeks. \"Oh hell...\"\n\n\"I am starved; I know a little place not far from here that serves great fish and chips.\"\n\nShe fell silent and the loofa fell from her fingers. She looked over her shoulder and I could see it in her eyes. It was the fear I had been hiding so very carefully. Titania had somehow plucked it from my thoughts. She saw the blazing image of the Watcher and knew I was heading home and most likely to my death. She smiled when she saw why I was willing to sacrifice myself for family. She wept for me and threw herself into my arms and kissed me. It wasn't a kiss to inspire passion; it was a kiss to inspire hope.\n\n\"I am going with you. I can't help you fight or defend you. But I will sing your song if you fall so that people know what happened. I will be your bard if you let me. Please don't cast me aside, not now, not so close to the end.\"\n\n\"You can come; I never expected to win this fight. I have been lucky so far or this has all been leading up to something horrific. Either way, I have to face this head on and see how it all plays itself out.\"\n\nShe kissed me one last time and finished up her shower. We dressed and the two of us went out for a very late meal. She had been right; it was a great fish and chips diner. I decided to walk back to the estate when a familiar town car pulled up. Yuki was driving and she looked worried to death. I opened the back door and Titania climbed in first and I followed. Yuki pulled away from the curb with a soft comment about another stray I had picked up. Apparently Surisa had returned to the estate and found the entire place up in arms over my sudden disappearance. Yuki was dispatched to collect me so that Becca could beat the crap out of me for worrying them. \n\n\"We are leaving for Switzerland today and then whoever wants to come with me can come back to the states. I have something to finish.\" I said and watched their faces fall.\n\n\"What's going on Louis,\" Becca asked.\n\n\"It's a very long story,\" I said.\n\nTokyo: Before the Tsunami\n\nI stared at the invitation for the tenth time and I had already read it three times all the way through. A surprisingly vague offer of a dig in Japan, I would accept of course. I would be a fool to decline the invitation from so prestigious a university. I had wanted to study paleo-archaeology after I graduated. I had even looked at the University of Tokyo, mainly because of one Professor Takakura. He was the leading expert in the field and had recently retired to teach the subject. I had heard it was poor health that had led to his leaving the back breaking labor to the young. \n\nI confirmed my flight and began packing. I had book first class on a commercial flight. I didn't want to raise any suspicions by taking a private flight into the country. I closed my luggage and sat on my bed. I glanced up and there in the doorway were Megan and Milena. Milena was smiling where the dour princess was all frowns. \n\n\"Where are you off to,\" Megan asked.\n\n\"Japan, there is a dig,\" I said and Milena smiled even more brilliantly.\n\n\"It will be good to work again eh?\" Milena said with a wink. \"Call me you've got my number.\"\n\n\"I can't promise anything, but yeah, I'll call,\" I told her smiling myself.\n\n\"You'll be back,\" Megan scoffed. \"But for what it's worth, I hope you make it.\"\n\nMilena's mouth dropped open and I think in the year I had been there, that was the first time something selfish hadn't come out of that woman's mouth. I smiled, grabbed my bags and headed downstairs. Milena offered to buy me a coffee before my ride arrived and I took her up on the offer. I was eager to be out of there but it had some fond memories attached to them. Milena, an adult model from the Ukraine, was definitely one of them. She was a good listener, a dear friend and my favorite fuck buddy in the place. Though she was pushing thirty she looked nineteen. I don't know if it was just great genetics or what. \n\nShe promised to visit and we chatted, as we often did, about the trivial leaving the important things for group therapy or the dark hours between sleep and dawn. She kissed my cheek and headed back upstairs after things got quiet and a little awkward. I watched her go and then it hit me, damn that is one fine ass! I finished off my coffee and turned to look outside when Megan reappeared without any warning. We hadn't been intimate and I think that still irked the shit out of her. I was afraid I would feed off her and kill her. I think she believed I thought she wasn't worth my time.\n\n\"You are going to regret not fucking me mister,\" she whispered in my ear.",
        "\"Probably,\" I replied. \n\n\"Probably? Do you know how many guys I offered to let ass fuck me? Do you?\"\n\n\"I have no idea,\" I said feeling the awkward growing by the second. \"A dozen?\"\n\n\"Fuck you Louis, there have only been eight,\" she snarled and I couldn't help but smile. \"What the fuck are you smiling about?\"\n\n\"I would have been number nine,\" I said and smiled wider. \"My lucky number is nine.\"\n\n\"No shit,\" she said and actually cracked a grin. \"I love a big fat cock up my ass, did you know that?\"\n\n\"Are you on your meds Megan,\" I asked seeing how dilated her pupils were. \"That explains your open frankness about your anal fixation.\"\n\nShe hissed and stalked off with a flourish of curses and rude gestures. I laughed and stood up as my ride arrived. I was smiling as I stepped out of the private psych ward. It had been home for a while but I missed the outside world way too much. The back door of the limo opened but I didn't recognize the leggy redhead inside. That is the moment I first laid eyes on Kat Shaw. Oh I had seen her on television with her famous brother Nick. Now here she was beckoning me into her limousine. The driver, a cute Asian gal, took my bags and put them into the trunk. I climbed in back with Kat and she smiled as the door closed behind me.\n\n\"Hello Louis,\" she said in greeting. \"I am Kat Shaw and I have a job offer for you.\"\n\n\"Job offer,\" I said and she opened her left hand.\n\nThere hovering in the air above the palm of her hand was a strange device. It took me a few seconds to recognize it. I was about to comment when she made as if to throw the hologram at me. Instinctively I put my hand up and there was the device that Richard Sterling had dug up in Egypt. Kat smiled as I held up the image and examined it more carefully. \n\n\"What is going on?\" I asked as I noticed the markings on the device. \n\n\"Nick wants you to try and translate the markings on the device.\" Kat said choosing her words carefully.\n\n\"Why me,\" I replied as I enlarged the hologram and recognized the markings now. I frowned when I looked back at the beautiful woman.\n\n\"He wants you as his resident expert,\" she said holding up an image she shouldn't even know existed.\n\n\"Stop the car, stop the FUCKING car,\" I roared seeing the image of the Black Cathedral I had created over the last year. The black dome in all its dark glory hung suspended in the air between us.\n\n\"Calm down Louis,\" Kat flinched as I lost my temper.\n\n\"Fuck you lady, stop the goddamn car or I will jump out.\" I growled as the vehicle came to a halt. I reached for the door handle when her hand gently touched mine.\n\n\"I know you're angry and you have every right to be. What Nick did was wrong, I won't argue that. He needs your help Louis. I am here to make a very generous offer. If you can decipher the artifact you can earn a twenty percent cut in all technologies that arise from that discovery.\"\n\n\"Twenty huh,\" I said sitting back and trying to let go of the sense of violation. \"In writing...\"\n\n\"Of course, I have all documents for you to sign and a nice signing bonus.\" Kat said a tentative smile on her lips.\n\n\"How the hell did your brother hack my A.I.?\" I asked but it was Feng that replied.\n\n\"There is a backdoor access in all of the artificial personalities,\" Feng replied.\n\n\"I will have to decline,\" I said. \"I can't have him waltzing in whenever it suits him.\"\n\n\"Wait, I can seal the breach,\" Kat offered. \"Give me a second and I will fix it.\"\n\nShe called up her own A.I. and used it to close the hole in Feng's security. I had her run a diagnostic just to make sure. When I was assured that Feng couldn't be hacked I had her read over the documents Kat had sent to me for my signature. When they proved acceptable I signed them digitally and Kat forwarded them to her attorneys. The signing bonus ended up being eye drops that contained nanites allowing me to access Feng through an optical interface. It was the first of my improvements provided by Kat and Numenor Technology.\n\nKat drove me to the airport but instead of flying commercial there was a private jet parked outside. She must have been pretty damn confident that I would sign on. The limo was retrieved as Kat, her bodyguard Sora and I boarded the jet. I was climbing on board when I saw one of the engines. I stopped and stared at it in alarm.\n\n\"What's wrong Louis,\" Kat asked from within the jet.\n\n\"There is no turbine in that engine. Hell, there is nothing inside it at all. Are you sure this thing can fly?\"\n\n\"Oh, that is Nick's latest addition to aviation,\" she said. \"I don't know the details but it uses some form of induction to propel the plane forward. It removes the dangers of birds flying into moving parts.\"\n\n\"Brilliant,\" I said as I climbed aboard. \"Are you going to Tokyo as well?\"\n\n\"Of course, who do you think is funding this little dig of yours?\" Kat replied with a genuine smile.\n\n\"I am sorry about screaming at you,\" I said breaking eye contact. \"I lost my temper.\"\n\nThe door was closed once our luggage had been loaded aboard. A vibration could be felt as the engines fired up but there was little noise and that surprised me. After a short while I felt the force of acceleration as I was pushed back into my seat. The jet took the air without any difficulties and we were on our way to Japan. Kat, Sora and I chatted, napped and snacked during the long flight half way across the world. Conversations ran the gambit from the technology being used on the dig to brief snippets of life stories. While my life up until that fucking book had been discovered had been pretty damn mundane, Kat's had not. She had been on the run for as long as she could remember. That was until her mom met Nick's dad and a sense of security had descended. Nick had ensured that safety and they had at long last could quit looking over their shoulders. \n\nI on the other hand had seen the embodiment of nightmares and somehow managed to keep my sanity. Well as far as I could tell, I felt relatively sane. Sure I still had nocturnal horrors visit me when I dreamed. Sure I had the memories of men eaten alive by Serpent Demons. But I kept it all to myself. Kat had asked where I had come up with the design for the dome and its intricate architecture and I dodged the complete truth with a partial one. I was hired to acquire something and I had run into the dome during that particular adventure. Vague, yes, but it also wasn't a lie, not really. I told her the location was a matter of customer discretion and I doubted they would even want to discuss the matter ever again. That seemed to placate her for now.\n\nSeven hours later we landed on a private tarmac in Tokyo and I settled into a year of decryption and linguistics analysis. Five days a week I looked at images sent back by Numenor's deep sea drone, V.A.L.I.N. It was the world's only unmanned drone that had its own A.I. and was mostly autonomous. The reason for Valin and this dig was a small underwater earthquake that had struck the area a few months earlier. It hadn't done any real harm but when they sent down Valin it had found something. It was a structure that was built by some sort of intelligence and it was five miles down. Valin had only been on loan at that point. Now however, it was the work beast that dove every other day and bit by bit pieced together the series of structures surrounding the original discovered on that first day. \n\nAfter three months Valin had found and scanned over thirty massive buildings that could just as easily fit in the New York skyline. The shortest structure was over ten stories tall while the tallest and most impressive was ten times that in height. The central pyramid was massive on anyone's scale and was still intact after god knows how long it had been down there. The bas reliefs and inscriptions were epic in design and mystery. I knew them as the builder runes while the others, including Richard Sterling, were stunned by their appearance. There was argument that this city was of non-human manufacture and it would remain a secret until such time as the 'Powers that Be' decide otherwise. \n\nThe pyramid was dedicated to a being known as Dagon. He was the eldest child of the Dreamer in the Depths, Great Cthulhu. It was by his will that the city had been constructed after the Great War with the First Ones. While his father had been imprisoned Dagon had been instructed to withdraw and create a citadel worthy of his father's eventual return. So at the northern edge of the Marianas Trench sat the sunken city of Dagon. In the crushing black depths sat an ever expanding series of buildings, tunnels and domes. All of which were not just intact but in near pristine condition. Valin was unable to detect anything other than marine life so far but I feared that sooner or later Dagon would show himself. When that happened everything would change. \n\nIt was during this time that I met and made long lasting friendships. The one person that surprised me most was Surisa Mee Chang. She was an outside contractor for any and all supplies that the group might need. Surisa earned a few nicknames over that year. My favorite was Little Moriarty, but there was also the Blue Eyed Thai and the Elegant Egotist. The last one I never told her to her face for fear of angering her. While she was a gorgeous woman with an amazing personality she was also very self-assured and not a little narcissistic. What do I mean by that? She always managed to make any conversation, situation or sexual act about her. Even when she was sucking me off it was all about her needs. Normally that would put me off but because it was her I let it slide. \n\nSince we are talking about sex acts, Surisa is by far the most limber, bendable and flexible woman I have ever had the pleasure of fucking. She could fit under a desk, in the back seat of any car and lacked any hint of a gag reflex. Hell she put Chinese contortionists to shame. She was built like a gymnast, cursed like a sailor and fucked like the devil herself. I could also add that she could and did drink anyone under the table and if you were lucky she'd blow you while you were down there. I suspected that she wasn't entirely human after one of our all-nighters and she walked away unscathed. While the dark magic worked on her and I could feed from her. The next morning was as if she had only had a great time and was without hang over or impact from my diabolical hunger. She was a keeper.\n\nKat on the other hand was as subtle as Surisa was a force of nature. She seduced me in increments that only scientists use. I didn't realize how passionately I had fallen for her until she wanted me to know. The first time we made love was while we were walking in one of the many parks in Tokyo. I suspected something was up when Sora and Yuki, our bodyguards, fell back to within line of sight range. Kat led me to a nice quiet spot free of close circuit cameras, grabbed me and kissed me. What followed was volcanic and burned both of us. The sexual tension had been so high and so intense that a single kiss ignited a frenzy of undressing, fondling and body pounding volatility that left bite marks, scratches and a few claw marks on my back. I marked her in other ways that were deeper and not so easily seen. We did leave enough biological evidence for a crime scene though and that always made us giggle.\n\nThe third month was a turning point for me. I was putting in sixty hour work weeks and needed a break. I began taking my weekends and visiting monasteries and shrines all over the Tokyo area and those close enough to drive to. It was during one of my road trips that I met and made friends with Master Kenji. The mountain shrine that he maintained was small and out of the way but perfect for my needs. We struck up an understanding almost instantly. He was very accommodating about what he called my misfortune and I was equally accepting of the fact that he was a Tengu, a mountain spirit. There were tons of stories and myths describing the Tengu and most of them were dead wrong. While a few stories touch on the immortality and great power the Tengu possess they don't know why. \n\nTengu are beings native to the earth that arose prior to the birth of multicellular life. They are entities tied to certain areas and Kenji was born when the Japanese archipelago rose from the ocean floor. He had been here long before any plant or animal life arrived here and likely he would be here long after it was gone. Of all the life forms that have migrated to the islands he found man the most interesting and most destructive. He had chosen me as one of his students simply for the fact that he felt I really wasn't human. When I argued about that he explained his stance on that particular subject.\n\n\"Louis-san I don't want my words to hurt your feelings but I must explain myself. I have seen many gifted individuals over the years. Let us take your most remarkable talent, shape shifting, of all the beings I have seen that were gifted with that ability you are quite easily the most sublime master of that difficult art. I don't mean to cast a bad light on you in any way. You my friend are a very rare individual. While I have met a few souls more powerful in spell craft I firmly believe that you could overcome them in an all-out duel. You are a very resourceful mage and that is saying something.\"\n\n\"How am I doing as a martial art student,\" I asked and he smiled.\n\n\"Well, you have only been training for a short time. But you are showing a remarkable knack for picking up on the more difficult aspects of the art. I think in the end you will prove a formidable student.\"\n\n\"Thank you sensei,\" I replied bowing. \"I will work hard to make you proud.\"\n\nIt was a few weeks later that I made my first big breakthrough in my translation work. I could read the characters easily enough thanks to my visit to the Dark Cathedral. But the runes on the relic made no sense and perhaps it had been because of the layout of the characters was different than what I had experienced before. It was Richard that had given me the clue I required. We had both been working on the runes from the underwater dig as well as the Egyptian artifact. The characters were obviously linked but the artifact was different.\n\n\"Louis, have you noticed that the characters from the structures are all linear in their layout? While those on the artifact are more like a hexagonal chemistry format, do you think the layout designates meaning?\"\n\n\"So the linear layout is more mundane, everyday sort of use, while the artifact is more complex and requires a different design.\" I said and he nodded vigorously.\n\n\"Exactly, it is the same way we do it. If you dedicate a city anyone can read the inscription, your basic citizen if you will. But a device that produces power is dedicated knowledge and requires more education like a chemist or engineer. Function dictates form I guess, what do you think?\"\n\n\"That is freaking brilliant,\" I said. \"It makes sense. So we have to look at the characters as two different languages basically.\"\n\n\"I just wish we could break the code on these simpler characters,\" he said frowning.\n\n\"I think I might have one of them,\" I said. \"It is a name. Now don't quote me on this but I think this character might translate as Dagon.\"\n\nI pointed to the most common and recurring symbol in the city. I watched his reaction and he stared at the character and his eyes went wide. He squealed like a little girl and clapped his hands together. He touched the rune to isolate it and dragged the hologram to its own display. He traced a part of the character and dragged it to the side. Richard traced a second part of the original rune and dragged that to the other side and we were left with three characters now. He reordered the characters and I could read them but didn't know their origin. Richard was ranting now and stopped and caught his breath and his thoughts.\n\n\"This first character is Sumerian and is the sound Dah pronounced like the word day. The second is also Sumerian and is a hard G and the last is Etruscan and yes you guessed it, the 'on' sound. You were right. It is the name for the god Dagon. He shows up in a few different ancient cultures. Some he is tied to the earth while the older myths link him to fertility and the sea.\" \n\nHe began talking to his A.I. and ordering a new look at the characters by scanning for simpler characters hidden within the runes. Richard got up and headed for the break room. I followed him as he started a new pot of coffee. He was bouncing off the walls. This got some attention mainly Surisa and Magnus. They were just coming out of one of the restrooms. Magnus looked fine but Surisa looked a little ruffled around the edges. I smiled and kept my silence. Richard was too excited to notice and I let it lie.\n\n\"Richard,\" Magnus called out. \"You look like you're in a good mood.\"\n\n\"He did it,\" Richard replied hopping in place. \"Louis did it. We have a name.\"\n\n\"Well don't keep us in the dark,\" Surisa purred as she ran a hand through her long dark mane.\n\n\"Dagon, the city has to be dedicated to the sea god Dagon.\" Richard blurted out.\n\n\"But who built it I wonder,\" Magnus, the engineer, pondered as he stroked his beard. \"How the hell did it end up here?\"\n\n\"Maybe it was built here,\" Surisa said speaking my own thoughts.\n\n\"Nonsense, you are talking about a simplistic people constructing an entire city five miles down. It is not possible.\" Magnus grumbled.\n\n\"How do you explain the spatial anomalies,\" Richard asked. \"The photos show one thing and yet the scans show a completely different ... geometry.\"\n\nMagnus stalked off and I glanced at Surisa and she smiled. I wondered how difficult their love play must have been since she barely broke five feet and Magnus was a full head taller than I was. I was about to ask her about Magnus when her phone rang and she walked off as she answered it. Richard poured two cups of coffee and he went straight back to his desk to work on his new theory, correction our new theory. \n\n\"LOUIS,\" Richard hollered from his desk as I took my first sip of coffee.\n\nI managed to keep from spilling my drink as I hurriedly walked over and looked at his display. The words were in the incorrect order but their meaning was perfectly clear.\n\n'City... declaration... Da-g-on... Son... Dreamer... Kuh-Thool-Hu...'\n\n\"See, you were right,\" he said bouncing in his chair.\n\n\"No, you figured this out Richard. This is all yours and you deserve it.\" I told him.\n\n\"What the hell is all the commotion,\" Tetsuo asked as he walked in and saw the display and Richard's smiling face. \"You cracked it?\"\n\n\"We cracked it,\" Richard said as he began explaining the break through. \n\nTetsuo smiled and raced upstairs to tell the higher ups. Soon computer resources were reallocated for the translation process. Before the hour was up we had five A.I.'s working full time on that exclusively. They began by scanning the text and inserting words they had already completed and then worked on the rest. When they deciphered a word it was added to the pool and the others would add it to the ever growing body of understanding. It would take a few hours so I decided to take a break and get some fresh air. They would have the full text and they would discover the truth. Whether they accepted it or not was another matter entirely.\n\nIt was midafternoon and the sun was nearing the horizon. I had just sat down on the front steps of the university when I spotted a familiar face. She waved as she approached. There was another woman with her and it was either her sister or another female relative. The family resemblance was very strong between the two of them.\n\n\"Hello Midori,\" I said in greeting.\n\n\"Louis-san,\" she replied. \"Oh, this is my sister Nao. I told her all about you.\"\n\n\"Not everything I hope,\" I said and we all laughed. I shook hands with her sister and she blushed. Maybe she had told her everything. \"Your husband is going to be late tonight. We made a major breakthrough.\"",
        "\"I am happy to hear that,\" Midori said. \"I am glad you are making progress. Is that Surisa woman still working here?\"\n\n\"I never should have told you about that,\" I replied and she shook her head.\n\n\"I needed to know,\" she replied.\n\n\"Midori told me that you 'helped' her out when she discovered that cheating bastard of a husband was sleeping with that Mee Chang woman.\" Nao snarled.\n\n\"I have to give Tetsuo his dinner, I will be back,\" Midori said as she went into the university.\n\n\"I don't know why she hasn't divorced that pig,\" Nao said as she sat down next to me. \"I hate arranged marriages. It is barbaric.\"\n\n\"So Midori and Tetsuo aren't in love,\" I asked.\n\n\"She tries her best but no,\" Nao replied grimacing. \"His family owns quite a bit of property but is cash poor while our family is quite wealthy from business investments and the like. So a marriage seemed a good fit for both. If she divorces she will leave the marriage with what she entered into it with and of course the same is true of Tetsuo.\"\n\n\"I wonder why he never told me he was married until I actually came to Tokyo.\"\n\n\"I take it there was another woman?\" Nao asked and I nodded. \"He really deserves what he gets.\"\n\n\"That's why I won't get married,\" I said and she smiled. \"What?\"\n\n\"Midori told me all about how well you two fit together,\" Nao giggled. \"You must be quite something, even for a round eye.\"\n\n\"I will only say this, I have had few complaints.\"\n\nNao raised an eyebrow and smiled brilliantly. She scooted closer and giggled even as Midori reappeared. Midori appeared quite upset and my heart went out to her. Midori plopped down on the other side and wiped tears from her eyes. Without any prompting, Midori began to puke out all the things that have been bothering her for years. Nao and I sat there and listened. She cursed, shouted and cried as the words tumbled out. Nao held her sister close and rocked her as her narrative ended. I wanted to help but I had to return to work.\n\n\"This is out of my control,\" I said. \"I have to return but I get off of work at nine.\"\n\n\"Come by for dinner,\" Midori asked. \"I could use some company.\"\n\n\"Alright,\" I agreed and smiled. \"If I am going to be late I'll call. This discovery could change things.\"\n\n\"I understand. I am glad you took the time to explain. I appreciate that Louis-san.\"\n\nI left her with her sister on the steps and returned to work. Richard met me on the steps and he was more bouncy than ever. I didn't have to prompt him he was telling me about the translation. There were tons of things yet to work on but the main inscriptions had been completed. He practically dragged me over to the holographic display which half the team was staring at. The A.I.'s had color coded the inscriptions so that we could track their progress. The green icons were completed texts, the blue were ones that were partially finished and the red ones were untouched and possessing words uncommon with the rest. There were a surprising number of red icons.\n\nHell, even the engineers were over staring at the writing with excitement. Normally, they are far too busy tweaking the instrument packages and software on the drone. The aggravating malfunctions with the scanners were driving them crazy. Richard walked over and began touching the display bringing up blocks of text and reading them off. Once he had shared his portion Magnus, the chief engineer, took over and he grumbled about the disparity between the visual data and the ultrasound scans. He did an overlay of the visual scan in blue and the ultrasound in yellow. They conflicted in every way possible where any angle was involved. I pointed that out and Magnus stared at the display with a fresh perspective. He was so surprised that he reverted to Norwegian. \n\nMagnus presented a close up of one of the walk ways and stared at the queer geometry involved. It wasn't simply an optical illusion there was something more profound going on. He ranted about what he was seeing and no one but me could understand what he was saying. Magnus shook his head and his eyes widened as the realization set in.\n\n\"Gauss was right,\" he said at last in English.\n\n\"Who or what is Gauss,\" I asked and fielded other questions from those gathered around the projector.\n\n\"Carl Friedrich Gauss, he was a nineteenth century mathematician. He was brilliant and advanced not just math but astronomy and several other fields. He was one of the first to take steps in our understanding of Hyperbolic Geometry or better known as Non-Euclidean Geometry.\"\n\n\"So are you telling me that these angles are Non-Euclidean?\" I asked before anyone else could voice that thought.\n\n\"That is exactly what I am saying. The work is mostly theoretical but here we have a concrete example of something that shouldn't exist. We need to proceed with great caution and keep this to ourselves for now at least.\" Magnus said his eyes never leaving the holographic display. \n\nHe left us all standing there as he cried out in Norwegian and headed off to the engineering lab. That was the beginning of the end. Things began to accelerate from there. Magnus and his team began work on a new generation of sensor package for the drone. He tore Valin apart and rebuilt it from the bottom up. The crew from Numenor watched as the crazy Norwegian worked three days without sleep, little food and only left the lab to use the restroom. On day four Magnus fell asleep standing up and four of his people carried him to the lounge. He slept twelve hours straight and the on call physician warned him to pace himself for a man in his condition. It was only then that his heart murmur was mentioned to everyone involved in the project. \n\nIt took them two full months to calibrate the new scanner. It was sheer genius and a lot of people didn't think they could do it. It was a hybrid technology that blended the principals of sonar and laser. It still had to be fine-tuned but it should be able to see these crazy angles, the key word was should. Magnus handed over rebuilding Valin to the Numenor team. A few days later, the drone was back up and running. It was running a series of diagnostics to integrate the new technology with the old. If you could call a cutting edge drone old. While Magnus had fallen back into more healthy habits he had a couch brought into the lab so he could nap while work was being done. I had to hand it to him. He was a beast when it came to getting the drone back in shape. \n\n\"It's done,\" one of the techs cried out. \"We have telemetry and all the hardware is talking to us. We are water tight and green for a launch.\"\n\n\"Let's let this bitch run,\" Magnus said yawning and sitting up from his latest nap.\n\nWe all went this time. It took me a day to get my sea legs back but others were not so lucky. Our science vessel, the Kobayashi Maru, was a converted coast guard cutter. It was a sturdy old girl if you were to listen to her captain, Horace Van Der Loot and a thirty year veteran of six campaigns, three wars and a dozen other hostile encounters. If you think of a man that has lived a majority of his life at sea Horace fits the image perfectly. He was of average height with dark skin that had been exposed to sun, wind and water for decades. If there was a louder crasser individual I had never met them. He had even more stories than Surisa. I never saw that coming. The first night out we learned he had sailed just about every body of water that was worth navigating. \n\nIt was during our jaunt to the northern edge of the Marianas Trench that Magnus came up with the next step in our investigation of the ruins. He wanted to launch a manned expedition to the sunken city. I argued against it until we learned how safe it was. I suspected the city only slumbered and that something might still dwell in that stygian darkness and crushing depths. Let the probe do its work and see what we are facing. Tetsuo agreed to let Valin do its job and see what we came up with. That didn't stop Magnus from brain storming and sketching out a submersible. \n\nThe ship's night crew came on and we celebrated what would, in a few days' time, could be a history making find. I didn't care about history I was concerned about surviving our encounter with what could easily be an inhabited city. How would they react if their territory was continually violated? I remembered what happened to my friends when we entered the Black Cathedral. Would history repeat itself? \n\n\"You look a million miles away,\" Kat Shaw said as she joined me at the rail looking out over the ocean.\n\n\"Just about, I have a bad feeling about this,\" I said.\n\n\"Is it because this is like that site you visited,\" she asked and I nodded. \"But that place was empty for centuries.\"\n\n\"Where did you get that idea,\" I asked and she looked at me first puzzled and then alarmed.\n\n\"It was empty right,\" she asked her voice shrilling in fear. I looked at her and she could see it in my eyes. \"What really happened Louis?\"\n\n\"If I tell you, you will never have another good night's sleep ever again. It is better that we drop the subject.\"\n\nKat gazed down at the water and shivered. She suddenly slipped her arms around my waist and clung to me. I held her close and prayed the drone would be able to perform its mission without incident. Kat kissed my cheek and went below decks. I fired off an email to her brother Nick. I asked him if he was aware of what was going on. I got a reply a few minutes later and he told me he was in the loop. I sent a second message telling him about my fears of what might be lurking in Dagon's city. He felt the pressure alone would limit the chance for anything living at that depth. Even if there was life down there it couldn't possibly survive the change of pressure. I told him I hoped he was right since his sister was on board this ship.\n\nI went to my cabin, okay it was our cabin. I shared it with Magnus, Richard and Jacob one of the junior engineers. Getting laid was going to be a challenge but if anyone could pull it off it would be Surisa. I stripped down to my boxers and plopped down in my bunk. The gentle rocking of the ship lulled me to sleep. It didn't last long though. There was a sound and it didn't belong. I opened my eyes and looked around but there was nothing out of sorts. I sat up and looked at the door. There was a light illuminating the bottom of the door but there was something else also. There was a puddle of water forming under the door. There was that sound again.\n\n\"Leeeewwwwiiiisssss,\" it came again. \n\nI got up, pulled on my jeans and went to the door. I heard a soft wet slapping sound moving away as I opened the door. There on the deck were wet footprints. Was this some kind of joke? That's when I noticed the scratches on the side of the wall. Etched into the metal were builder runes. The message was clear, turn back or there will be repercussions. The light from the full moon illuminated the path the intruder took. It had climbed on board and walked to my room and then reversed its course and returned to the ocean from where it had come. I rushed to the edge and looked down. I could see marks where the things claws had penetrated the ships armored shell. It had climbed up with ease and delivered it message.\n\nI returned to my room and woke the others; they had to see the evidence for themselves. Soon most of the crew was awake and gawking at the runes carved into the wall as well as the holes in the ship's hull. It was Shauna, our resident marine biologist that raced away and returned with a cotton swab and a zip lock bag. She swabbed the runes for DNA and intended on debunking what she felt was a prank. It was Magnus that did the math and worked out how strong the thing had to be to be able to puncture the ship's armor. Feng displayed the ship's security footage to me and I went pale when I saw the invader.\n\nFeng took the footage and created a detailed holographic representation of our visitor. When she was done I got everyone's attention and held up my watch. There hovering in the air was the thing from the depths that had left such a dire warning. It was tall, possessing a bloated body perfect for surviving the crushing depths of the ocean. Its head was octopoid like the Dreamer in the Depths. We watched as the thing's facial tentacles moved and twitched. It reminded me of a cat's tail except there were eight of them. It was roughly humanoid with arms and legs but the dorsal fin, gills and clawed hands were distinctly inhuman. It was the watery unblinking blue eyes that were most disturbing. There was a malicious intelligence there and no one denied it. The city we had discovered was occupied.\n\n\"Just because this thing showed up doesn't infer a large population,\" Magnus argued. \"If there was, someone would have noticed them before now.\"\n\n\"Just like the sunken city,\" Kat offered with a frown. \"Who's to say that this is the only one?\" The last part was said as she looked at me.\n\n\"Louis-san is there something you'd like to add,\" Tetsuo asked.\n\n\"We should turn around and leave now,\" I said and walked away.\n\nThe others began to argue and I didn't want any part of it. In the end they would contact Nick and he would give the go ahead to continue. They would finish Valin's last mission and only then decide on whether a manned mission was advisable. My thought on the matter, they were insane. It was as if the warning meant nothing to them and the appearance of this... this Deep One was completely disregarded. I would continue my work on translating the artifact but I was done with the dig. I knew when to quit. \n\nI stood on the bow and watched our inexorable forward movement and fought down the urge to scream. This is why wars start because people have no respect for other individual's desires to be left the fuck alone. Oh god what more could go wrong?\n\n\"Oh hey,\" Kat said as she slid her arms around my waist. \"I got great news.\"\n\n\"Fantastic, I could use some good news right about now,\" I told her.\n\n\"My mother is going to visit, she wants to meet you,\" she said giggling. \"Is that great or what?\"\n\n\"Doomed... I'm doomed,\" I said as I laughed.\n\n\"I got a naughty idea,\" she purred in my ear. \"Would you like to 'Titanic' me?\"\n\n\"Are you suggesting that we...?\" I asked looking over my shoulder at her and she smiled. \"Don't you need a little encouragement?\"\n\n\"Nope, I've been thinking about this since I climbed on board. I am fucking soaked. Now I am going to move in front of you. You are going to unzip, take that monster out and plunge it into my dripping pussy. Then we are going to let the ship do all the work, got it?\"\n\n\"How can I say no to something like that?\"\n\nKat was wearing a bright light blue blouse and a short skirt. I suspected she was going commando since she never mentioned anything about removing her panties. I watched as she ducked under my arms and gripped the V-shaped railing. I moved closer and had to one hand the rest. I followed her directions to the letter. I unzipped my jeans, took out the erection she had inspired, I flipped her skirt over that delicious ass of hers and eased inside of her. The wind off the ocean buffeted her skirt back into place while I buried my cock to her core. I grabbed the railing with my free hand and held on. She was right; the movement of the ship did all the work.\n\n\"Oh shit, you are huge tonight,\" Kat gasped as the front of the ship dipped. \"Oh fuck... you are going to break me, again!\"\n\n\"Damn, you are squeezing me like crazy,\" I howled but my words were lost beneath the crashing of the waves against the ship.\n\nIt was maddening being at the mercy of the ocean but it didn't disappoint. The rolling motion of the ship drove me in and out of her with an unrelenting ferocity and I loved it. Kat's voice faded as she realized the futility of crying out any longer. The dark magic rose up in answer to the fury of the waves. It enveloped us and it dipped and crested as our pleasure did. I was still learning the mercurial nature of this power of mine. It grew as I did and it adapted as much as my shape shifting allowed me to change with any given situation. Kat's body bucked as she climaxed and my cock impaled her keeping her from falling.\n\n\"Can they see us,\" she whimpered. \"Do you think the crew on the bridge can see us?\"\n\n\"I am sure they can,\" I told her. \"But I do not know if they suspect what is going on.\"\n\n\"MMMMMMM I love your cock Louis,\" she growled. \"And I love you too.\"\n\n\"I will never hurt you Kat,\" I said as my own climax drew near. \"I am close...\"\n\n\"I know... your prick is getting bigger inside of me. I want to feel you shoot into my womb.\"\n\nThe bow rose now as a large wave lifted us up. We both cried out as the ship plunged downward and I was slammed against her. I screamed as my load poured inside of her. We stood there was a little longer before I withdrew the dark magic and I pulled out of her. I tucked it in and zipped up as Kat frowned.\n\n\"I hate that part the most,\" she whimpered. \"I love being filled up.\"\n\nWe were both soaked to the bone from the sea spray. I led her back to the girl's cabin. Kat opened the door and Surisa, Sora and Shauna awaited her return. They had that look of expectation on their faces. Kat smiled and began to go into graphic detail about our little encounter at the front of the ship. I bid them a good night and left them giggling as the busty redhead continued her story. I returned to my own room, stripped down and toweled off. I sat on the edge of my bed wrapped in my towel and thought about alternate strategies. There were plenty of spells I could use to influence everyone on this ship. The problem with ordering the ship back is that I had no way of influencing Nick Shaw in any way, shape or form. I was powerless.\n\nNo matter how I thought about it, we were going to launch Valin. Two sides of every coin that was the only viable option. I had to speak with Dagon. I shuddered at the thought of facing another of the Nameless. I had to appeal to that antediluvian race that was madness incarnate in order to avoid a disaster. I didn't much find this course of action very attractive but if I didn't try there would be a world of regret. I slipped under the sheets and closed my eyes. I drifted free of my body and sought out the sunken city and its demonic master.\n\n\"Dagon,\" I called out in the language of the builders. \"I request an audience.\"\n\n\"You are Yog-Sothoth's pet,\" a voice called from the perfect darkness below me. \"What do you want?\"\n\n\"A human ship is approaching your city,\" I said and chose my words very carefully. \"They are curious and are planning on mapping your glorious handiwork.\"\n\n\"I see. They wish to see and stand in awe of the Dreamer's city. How are they going to do this?\"\n\n\"They have built a metal device which can measure and send images to the surface.\" I told him. \"They mean no disrespect. They do not understand as I do.\"\n\n\"I sent them a warning and yet their burning curiosity drives them on.\" Dagon laughed. \"I love humans, they never change. I will grant your boon pawn of Yog-Sothoth. If they only want to map the city I will stay my hand but impress upon them the dire consequences of attempting to set foot upon its sacred grounds. If they trespass I will lash out and many will perish. Do not test me on this!\"\n\nHe was gone and I was grateful that my interaction was limited to his voice only. Perhaps Dagon felt I was unworthy of a face to face. I was fine with that. I opened my eyes and made the decision to speak with Kat and tell her not to visit the city no matter what they found. I had to get her promise on that, I just had to. That was my last thought before I fell asleep. I awoke with the others the next morning. I got dressed and had breakfast with Kat, Sora and Surisa. Kat looked at me and made that face of hers, the one that screamed just say it already.\n\n\"I need a promise from you,\" I said and she placed her hand on mine.",
        "\"If I can I will,\" she replied and smiled.\n\n\"I want you to talk to Nick and make sure there is no attempt for a manned mission to the city.\" \n\n\"Why,\" Kat asked seeing how upset I was.\n\n\"If we send someone down there will be reprisals. I don't want to be responsible for that many deaths.\" I said and fell silent.\n\n\"I will talk to Nick for you Louis,\" she said. \"This is really bothering you isn't it?\"\n\nI let my silence speak of how serious I was taking this. What followed was the longest two days of my life. I kept to myself until we dropped anchor over the sunken city and then like the rest of the crew I got caught up in the excitement of launching the drone. I stared up as the crane lifted the gleaming bulk of Valin up and deposited it safely over the side of the ship. The onboard systems were all in the green as it sank from sight and the few of us allowed to enter the control room and watched the live feed. It took hours for the drone to drop down the five miles to the top of the city. Valin powered up the untested technology, the sonic-light and waited for the data to come streaming in. \n\n\"It is working,\" Magnus proudly said as the child of his thought began scanning key structures. \"I can't believe it but there we are. The last secrets of the pyramid are going to be revealed.\"\n\n\"I will be thrilled when this is over with,\" I said earning a contemptuous glare from the chief engineer.\n\n\"You are still spooked by a couple of silly characters,\" he shot back.\n\n\"Those runes were a warning. A warning given by an intelligent species,\" I reminded him.\n\n\"How do I know that you didn't carve them yourself?\" He argued.\n\n\"Did he leave the strange DNA too,\" Shauna stepped up in my defense.\n\n\"You are still processing those samples,\" Magnus warned. \"Don't open your mouth until you have all the facts.\"\n\n\"The same could be said for you Magnus,\" she snapped. \"You are assuming Louis somehow managed to carve those characters with some sort of tool even you can't identify.\"\n\nThat shut him up, or it could have been the ever growing image of the pyramid in a level of detail we had never seen before. The previous scans gave us a certain level of resolution but the water had impeded the sensors. The sonic-light cut through that interference and gave us gorgeous high definition holograms of not just the statues but every aspect of the pyramid. Sadly, one of those details was what could only be an airlock. The perfectly circular door screamed a way into the pyramid. I felt my argument for leaving this place in peace fading as Valin took a second pass at that area of the monument. It was flanked on either side by stooped gargoyle like statues. The hologram didn't do them justice since each statue was over two hundred feet in height. That made the portal into the pyramid's interior at least a hundred feet in diameter. \n\n\"There is a way in,\" Magnus cried out. \"We have to go in now!\"\n\n\"No we don't,\" I argued. \"If we ignore that warning people could die. Hell this ship and its crew could be placed in jeopardy!\"\n\n\"You have been against a manned mission since the beginning, why? Give me one good reason why I shouldn't demand for an expedition to the city.\"\n\n\"It is inhabited,\" I growled. \"It isn't a ruin. It is a fully functional and occupied complex.\"\n\n\"How the hell could you know that?\" Magnus argued.\n\n\"This...\" Kat replied as the holographic display changed. The mile high dome of the Black Cathedral hung there for all to see. \"There are other sites and they are populated.\"\n\nMagnus stared at the image and watched as the image shifted showing the entirety of the inner surface and it's star map. It revealed the dais and Great Cthulhu sitting upon his throne. Kat had added a person to give a hint of the scale involved. The others gawked at the hologram and Magnus shook his head. His expression of shock was mirrored on every face except mine and Kat's.\n\n\"You knew,\" Magnus whispered. \"How old is it?\"\n\n\"I had artifacts carbon dated to three thousand millennia. Some are younger and a few quite a bit older.\" I spat out still upset that Kat had revealed so much.\n\n\"Impossible,\" Magnus argued but he knew I had the data to support the claim. \"Why keep this secret?\"\n\n\"Really, do you think any nation on Earth would let me reveal such a discovery? It would destroy every major religion and crush humanities belief that we are the masters of this planet. Think of the panic. Richard's little discovery is still being argued and that is just a single artifact. I have hundreds in my possession far older that would cause a worldwide meltdown.\"\n\n\"What is Numenor's slant on things here?\" Magnus asked Kat.\n\n\"Nick wanted to test his new technology while aiding the Japanese people. He wanted to see a tsunami warning system put into place. I agree with Louis though, a manned mission is a bad idea. We are talking about beings that are far older than humanity. We should respect their desire for isolation.\"\n\n\"I see and what does Nick want now that we may have a way in?\" Magnus prompted.\n\n\"I don't know. I will have to contact him.\" Kat said. She took over the holographic display again and sent a message to her brother.\n\nNick's bleary eyed image appeared and he looked around at everyone. He waved and listened as Kat and Magnus informed him of their discovery. He looked at the streaming images coming from Valin. He was keenly interested in the circular door as a possible way into the pyramid. I told him about the warning and my fear about a manned mission. He nodded but I could see the hunger in his eyes. He wasn't listening to me. He saw only that he could go where no human had ever set foot before. Nick didn't give an answer right away but I feared he would side with Magnus. \n\n\"Finish the scan of the pyramid, retrieve Valin and return to port. We have done enough for today.\" Nick ordered.\n\nWe were parked over the city for two days while the drone worked uninterrupted for over forty hours. Once the full scale and scope of the pyramid had been revealed even Magnus had to admit the structure was something humans couldn't possible reproduce. Valin was on its way back up when the sonar picked up an object rising from the depths. Magnus watched in horror as the massive sonar signature grew and grew. He ordered Valin to switch on the sonic-light to get a clear picture of the thing rising from the lightless abyss. I knew it by sight but the others cried out as the hologram took shape. It was a mass of tentacles, mouths and eyes. It was Dagon. \n\nIt moved impossibly fast in the water and snatched Valin the way a child grabs a toy train engine. The tentacles made short work of the drone. Once the outer armor was compromised the pressure of the depths did the rest of the work. Valin was crushed and compacted to the size of a baseball in seconds flat. The feed died and the captain called for the raising of the anchor and firing up the engines. We were leaving. I had to admit that the crew kept it together as we fled the area in a near panic. I looked at Magnus and he was ashen and shaking.\n\n\"What the FUCK was that,\" he cried out in Norwegian.\n\n\"That was Dagon,\" I said. \"You still want to go down there?\"\n\n\"How do you know what it was... oh right... let's just get the hell out of here.\" He growled shaken to his core.\n\nI don't know if he was angrier that Valin and his prototype sonic-light was destroyed or that he had seen the big baddy that lorded over the city below us. I was actually thankful to Dagon for his appearance. He had argued for my point better than I ever could have. I felt that a disaster had been averted and I could relax. Many people commented that I was back to my old self on the jaunt back to Tokyo. The Kobayashi Maru dropped anchor in Tokyo bay and we returned to the university to look over all of our data. I focused my full attention on deciphering the artifact that Richard had uncovered. \n\nThe months ticked by and my weekends were spent at the mountain shrine so that I could continue my training. The Tengu seemed quite pleased with my improvement as well as my mood. By midwinter I was splitting my time between the shrine and the university. I was reaching a crucial stage in my training and the fewer distractions the better. It was during this time that I learned lessons that would change my life forever for good and for ill. I was introduced to the Japanese magic known as Ofuda. It involves prayers, sacred paper and the creation of powerful seals. The seals work on certain types of beings. I was to discover that I was one such entity.\n\nI had noticed the construction of the small shack and took little attention to its completion and how it would impact my life. I arrived at the shrine and my teacher was there with one of his younger students. I had great news for him and he had news of his own for me. I was so excited it was hard to keep my focus.\n\n\"I did it,\" I told him as I greeted him.\n\n\"It is good to see you too Louis-san,\" the Tengu replied smiling. \"Tell me all about it as we make our way to the waterfall.\"\n\n\"I cracked the code on the relic. I know how to open it.\" I told him.\n\n\"Your hard work appears to have paid off twice fold,\" he said as cryptic as always.\n\n\"Twice over, I don't understand,\" I said as we reached the meditation pool.\n\n\"You will in a short while,\" he said. \"I want you to clear your mind of your worldly accomplishment. I have a test for you and it will require you full attention.\"\n\n\"Yes Sensei,\" I replied as I stripped down and moved to sit beneath the ice cold torrent.\n\nIt was very difficult to clear my mind. I had spent months working on this solution to the exclusion of little else. My only diversion had been my training here. It was here that I was able to forget about my work and focus on more immediate concerns. I pushed aside the relic and all that it represented and focused on my breath. I inhaled for a count of four, held my breath for four seconds; I exhaled for a count of four and finally allowed my lungs to be empty for four seconds. I repeated that until I felt the Tengu's presence once more. When I opened my eyes the sky was darkening. The sun had set and its light was fading from the world. I left my place and followed my teacher to a spot that overlooked the valley below. \n\n\"What do you know of Ofuda,\" he asked as we enjoyed the view.\n\n\"Not much,\" I admitted. \"It involves rectangles of paper and calligraphy but beyond that nothing at all.\"\n\n\"Shinto priests use Ofuda to seal away evil spirits,\" the Tengu said. \"But it works on many different types of beings and not just Oni.\" He said and gestured for his disciple to bring out a rose wood box. \"Open it but do not touch what is inside.\"\n\n\"Yes Sensei,\" I said taking the box. \n\nIt was a shallow box about two inches deep. It was wide and long and the lid was recessed into it so that I had to push down and slide the lid down to open it. There was a dazzling object inside that made my eyes water. I had to blink profusely to see the single sheet of paper inside. I closed the box and wiped my eyes clear.\n\n\"It is as I feared. You, like myself, as under the sway of such things. I am going to teach you how to defeat this kind of magic.\"\n\n\"Thank you Sensei,\" I said. \"How do I do it?\"\n\n\"First I need you to go into the shack that has been built. Once inside I will reveal the secret.\"\n\nI did as I was told. I walked over to the shack, opened the door and went inside. The interior was very simple and its only luxury was a single wooden chair. I heard the door close behind me and a moment later my feet felt like they were on fire. I hopped onto the chair and sat cross legged on its seat. I called out to the Tengu and he replied.\n\n\"Do you remember your calligraphy lessons,\" he asked from beyond the door.\n\n\"Yes Sensei,\" I replied.\n\n\"Good,\" the Tengu replied. \"Remember, you must be like water.\"\n\nHe was gone. I knew he had walked away but he had promised to give me the secret of defeating Ofuda. I wanted to curse but I found myself smiling instead. He had done it to me again. I closed my eyes and cleared my thoughts. I remembered my calligraphy lessons and how I had learned the basic Kanji characters first. Those characters allowed me to build other more complex ones. Changing one part of a character changed the entire meaning of the message. It was obvious. I had to somehow pierce the magic and change one of the characters. This was a test. \n\nI extended my perception to the astral and there blazing all around me a mystical cage. The lock was the spell written on the paper. It was hard to stare at the Kanji for too long but I managed to read the spell. I withdrew back to the mundane and brought each character to mind until I found the one that would be easiest to change and at the same time free me. Two steps down and only one left to accomplish, but how? How the hell was I supposed to change that character?\n\nOnce again I peered into the astral and made several attempts and each failed but with each failure I learned something. In the end of my first series I was sure that the character I had chosen was the correct target of my efforts. I knew that I could eventually free myself but it was going to take time. It came down to trial and error. I looked at it as dealing with high voltage wires. I didn't dare touch them directly but I could coerce the flow of power. \n\nAgain it was Hiro's words that saved me. You must be like water. Water conducts electricity very well and it was that principal that was my lock pick. I imagined droplets of water falling on one of the characters adding a single angled line to it. Change the character change the meaning altogether and thus dismantling the spell. My first attempts failed but not without some results. The droplets evaporated before they even contacted the character I had chosen. But the sizzle and sparks told me that I was on the right track. \n\nI changed tactics and instead of drops I thought about a water laser. I would carve that line with an unstoppable stream. The contact was intense but almost immediately I could see the line begin to form. I failed. I didn't have the mental stamina to finish the line. I rested and tried again and again. It might have been a hundred times or a thousand, I don't know. It took a long time, a very long time until my will was diamond hard. It blazed in the darkness of the astral plane and formed that damn line. The fiery white thing faded and died. I passed out. I slept. I dreamt.\n\nI was floating. I was on some nameless sea. The night sky above me was filled with billions of stars. I could see forever and it looked amazing. I tried to lift my head but I was too weak. I drifted on a nameless current. I could feel the movement and I let it take me where it wanted. I hit a shore and crawled to my knees. The black sand beach stank of rotted fish and worse. I found the strength to stand and looked around. There was a pinnacle of rock not too far away. Drawn to the spike of stone I stumbled forward. Naked, as always it seemed, I walked to the monument. I looked up and stopped cold. There at the center of the sky was a queer configuration of stars. There were thirteen of them, one at the center and twelve circling it. I was looking at the sultan and his court. I lowered my gaze and stared at the stone and shivered. Where was I? Oh dear god where am I?\n\nI was dragged forward then. I knew what a paper clip felt like when it came into the sphere of influence of a magnet. I was suddenly next to the obelisk. I screamed as I tried to step back. \n\n\"No... no... no... NOOOOOO!\"\n\nThe thing rose up behind the thousand foot pinnacle and dwarfed it utterly. It was the same monstrosity from my other dream. But now there was only the obelisk between it and me. The eyes, all of them, focused on me and the mouths opened and shut as we stood there motionless. The sound of crashing waves snatched my attention from the beast. I turned and looked at the titanic wave looming over me. I threw up my hands as it fell. \n\nIt was Hiro that was shaking me awake. I opened my eyes and looked around. I was in a fetal position outside. I was outside! I sat up slowly and Hiro and his other student gave me room. The Tengu was all smiles as he offered me his hand up. I stood and leaned heavily against him. I was so weak. They caught me under my arms and helped me to the kitchen table. They prepared fish, rice and tea. I ate and drank as if I hadn't done so in a week. I slowed my pace and returned to my mindfulness. \n\n\"How long,\" I asked.\n\n\"You should rest,\" Hiro offered.\n\n\"Hiro, how long has it been?\"\n\n\"Six weeks,\" he said. \"You did very well.\"\n\n\"Six... six weeks,\" I said. \"You call that good.\"\n\n\"It took me six months,\" he said. \"You are a very clever man.\"\n\n\"My family must be crazy worried,\" I said as I rushed to my feet and was felled by a wall of dizziness.\n\n\"Patience, I have been in contact with them. They know you were facing an ordeal and it would take time. I have also contacted the University.\"\n\nI sat until my strength returned. I felt my face and my goatee was now a full-fledged beard. My hair was passed my shoulders. It might be a good look. I stripped out of my clothes. I walked slowly to the waterfall so that I could cleanse my body and spirit. Hiro left me alone. I sat beneath the pounding water and let it drive away my fatigue, my pain and the last remnants of the nightmare. After an hour or so beneath the hammering force of the waterfall I stood up. It was time to leave. I walked to the shrine. Hiro had my things packed. God, I hated when he did that! I couldn't help but smile and give him a very unmanly hug. He endured it as the mountain does the rain.\n\n\"You always have a place here,\" he said.\n\n\"I know. This is just a break. I need to focus on why I am here in Japan. Thank you for everything.\"\n\n\"Don't be a stranger,\" he said and laughed.\n\nI picked up my backpack and slid it over one shoulder. I began the long walk down the mountain. It wasn't until I was near the edge of the village before that I got any kind of cell signal. I fired off an email and waited at the local watering hole for my ride back to Tokyo. I dug out cash from my pack and set it on the bar. I had polished off the first bottle of Sake and had bought drinks all around three times when my lift arrived. I left the remainder of money behind and told them to drink my health for however long the money lasted. I made a few friends that day.\n\nI stepped outside and walked towards the helicopter. The door closest opened and a flash of red hair told me my love interest was in full panic mode. She raced over and flung her arms around me. Her body molded to mine and her kiss was fierce and intoxicating. I scooped her into my arms and carried her to the waiting aircraft. \n\n\"I missed you,\" she said after breaking our kiss.\n\n\"I know. I missed you like hell too.\"\n\n\"Are you okay,\" she asked as I put her back on her feet.\n\n\"I am okay,\" I said watching her climb into the helicopter. \"I have missed that ass of yours.\"\n\n\"Just wait until I get you home,\" she said over the sound of the rotors.\n\n\"It will be torture until then.\"\n\nI climbed into the helicopter and sat in the back with her. I guess I shouldn't have been shocked to see Yuki at the controls. We buckled up as the copter left the ground. I kissed my little redhead over and over again until we had to stop of try fucking in the tiny space allowed to us.\n\n\"I was so damned worried,\" Kat said.\n\n\"I would've warned you if I could have.\" I told her giving her hand a reassuring squeeze. \"Am I still a part of the project?\"\n\n\"Of course you are, when they learned you were at a shrine they understood.\"\n\n\"I hate to ask but I needed to know,\" I said and she just nodded.\n\n\"I kind of like the beard,\" she said.\n\n\"Forty five days without sex,\" Yuki chimed in. \"Somebody is in for a pounding.\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "asian",
        "anal",
        "ffm",
        "threesome",
        "group sex",
        "magic",
        "nonhumans"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/spell-crook-and-handle-pt-08"
}