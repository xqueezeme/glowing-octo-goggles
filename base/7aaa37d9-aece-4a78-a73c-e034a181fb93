{
    "title": "Loopholes Ch. 03",
    "pages": [
        "Author's note: This is a work of fiction. All characters are eighteen years or older. Don't expect realism and you won't be disappointed when you don't find it! Enjoy!\n\n***** \n\nClear and bright over the deliciously sloppy symphony of nursing, suckling noises centered around his spittle-coated boner, a voice emerged to snap Nick out of his blissful haze.\n\n\"So, are you coming? Please say you're coming!\"\n\nThe mischievous glint in Sharon's blue eyes, the glossy sheen of pre-cum and spittle coating her gorgeous lips and, most of all, the mix of lust and need that permeated her purring pleas made Nick smile goofily, his massive schlong meanwhile flexing with increased arousal inside Sally's relentlessly sucking mouth. The wet, warm feel of Sally's throat enveloping his shaft and the steady, hungry rhythm at which her soft dick-caressing lips slid up and down along the top half of his monstercock prevented Nick from replying to Sharon, only allowing him to utter a few moaning, barely coherent words.\n\n\"I... Uuuhhh, fuck! Ahhh...\"\n\nToo horny to wait for an actual answer, Sharon just shrugged her slim shoulders and dipped her head down again, quickly wrapping her talented lips around Nick's veiny shaft to cover the lower half of his thick length with nursing smooches and languid tongue swipes, while her twin sister continued sucking him off with gusto. Grunting in delight, unable to stop grinning as he drank in the sensational sight of the pastor's youngest daughters treating him to one of their signature double blowjobs, Nick leaned back against the pillows and philosophically resigned himself to enjoying the present moment for the unexpected, unrequested sliver of awesomeness that it was.\n\nA couple of minutes later, while Sally and Sharon pressed their pouty mouths on either side of Nick's huge purple cockhead in a conjoined glans-nursing and precum-slurping kiss, the door of the en-suite bathroom opened, and Tessa, voluptuous as ever and wearing nothing but a cute grin of anticipation, stepped back into her room. \n\nThe sight of her ex boyfriend lying naked in her bed and groaning in pleasure while both of her younger sisters shared his massive dick like the eager little blowjob queens that they were soured Tessa's smirk a little bit, but not too much. Mainly, that not-entirely-unexpected image just made her sigh and arch her eyebrows in surprise, so that there was more resignation than irritation in her expression as she crossed her arms under her huge round boobs. Meeting Nick's bespectacled pleasure-foggy gaze and getting a sheepish yet genuine smile in response to her silent questioning stare, Tessa finally exhaled and spoke loud enough to be heard over Sally's and Sharon's dick-muffled moans and over the sexy knob-lapping sounds they were producing as they devotedly kept up their dual cock-slurping assault.\n\n\"Really, girls? Really?\" Tessa said flatly, tilting her head to the side as both Sally and Sharon turned her way. Their identical blue eyes went big and had a vaguely guilty expression to them, but still the twins' dick-hungry lips remained cozily smushed against the pulsating tip of Nick's raging horsecock nonetheless. \"I go to the bathroom for a minute, just one minute, just the time to pee and lube up my butthole, and when I come back I find you in my bed sucking my ex's dick? Jeez, girls... Well, at least you kept your clothes on, I see... And by the way, weren't you two supposed to be out shopping with Mom? And keeping her out so Nick and I could have some time alone, maybe?\" \n\n\"We were doing that, yeah,\" Sharon said swiftly, removing her lips from Nick's boner so she could speak, but still treating his veiny shaft to intermittent flicking tongue swipes as she talked. \"Mom forgot her phone, so we had to come back.\" \n\n\"We offered to get it for her. She's waiting in the car,\" Sally chimed in, running her tongue all over her precum-glossy lips and looking at her big sister from behind the towering pillar of throbbing dickmeat that was Nick's erection, a half playful and half apologetic look painted on her cute face. \"Don't be mad at us, Tessie, please. We just wanted to... Uhm... To say hi to you guys, yeah!\" \n\n\"And,\" Sharon continued, casting Nick a meaningful glance, \"we wanted to ask Nick if he had finally decided to come with us to camp.\"\n\n\"Yeah, that too. But then we saw him lying here, all naked and stuff, with this big fat cock all hard and ready...\" Sally continued dreamily, her voice getting huskier with every word. \"We kinda couldn't resist, Tessie.\" \n\nAs Nick smiled and quietly enjoyed the combined caresses that Sharon and Sally's delicate hands were treating his aching boner to while they justified their sudden impulse to suck him off, Tessa sighed and rolled her eyes at the twins, somehow managing to look even more authoritative than usual in her big-sisterly role now that she was confronting the girls in all her curvy, naked glory. Exhaling yet grinning with naughty sympathy, indeed understanding very well how irresistible Nick's massive horsecock could be, the pastor's eldest daughter finally said: \"It's okay girls, I get it. But now you should go before Mom comes in looking for you. You're supposed to let me and Nick fuck in peace, not get us caught, remember?\"\n\n\"Yeah, right, sure...\" Sharon nodded, visibly unconvinced. \"But while we're at it, maybe we could just finish sucking him off, maybe? Please, Tessie? Pretty pleeease?\"\n\n\"Yeah, Tessie, can we?\" Sally reiterated, her blue eyes shining with desire as both hers and her twin sister's hand accelerated the tempo of their shaft-massaging strokes in instinctive sync, making Nick grunt appreciatively in turn. \n\n\"That doesn't sound like a bad idea, Tess. I'm actually getting pretty close to cumming...\" Nick said, eliciting husky coos from the twins and making the imploring albeit naughtily eager glances they were casting at Tessa even more intense. \n\nFar from impressed by her sisters' doe-eyed stares, Tessa scoffed before she met Nick's pleasure-foggy, bespectacled gaze and said: \"Hey, what side are you on? And to think that I wanted to milk your big hard dick dry with my tight little asshole...\" she murmured in a slow sexy tone, her hazel eyes never leaving Nick's even as she turned to the side to offer him a better view of her round plump rump, cocking her hip and arching her back slightly to make her big meaty asscheeks protrude even more. As Tessa expected, the sight of her fabulous bubble-butt in all its bootylicious glory was more than enough to break Nick out of the spell that her sisters' double blowjob had put on him, making him blink and shake his head even as his fat boner pulsated with anticipation in Sharon's and Sally's hands.\n\n\"Oh! Yeah, right! Absolutely, Tess!\" Nick exclaimed, the prospect of burying his throbbing erection deep into the soft, snug heat of Tessa's exquisite little asshole dispelling any notion of getting sucked off by the twins. \"Sorry, girls, but your sister is right. I blew my first load all over her tits, and I promised her that the next one was going up her ass. But you had me waver there for a moment, I'll admit,\" he added with a grin as he adjusted his glasses on his nose. \"You two really can suck dick like pros.\"\n\n\"Aw, thanks Nick!\" Sally purred, blushing adorably at his unusual yet quite flattering compliment.\n\nSharon on the other hand scrunched her pretty face in a stubborn expression as she looked back at her voluptuous big sister in a last ditch effort to get in on the naughty fun that Nick's humongous dickmeat never failed to grant. \"Ow come on, Tessie, just let us have this load! I'm sure he fucked your ass already anyways, right?\"\n\n\"Nope, so far I only titty-fucked him,\" Tessa replied, strutting her way to the bed as she winked at a grinning Nick, whose gaze was mesmerized by the juicy wobbling of her huge tits and the hypnotic sway of her round, bouncy booty. \"That's why I really need him up my ass right now. So get out, you two! You'll have your turn later today, like we decided.\"\n\nWhile Tessa stood at the bedside with her hands on her curvy hips and her big beautiful tits jutting proudly out toward them, the twins sighed in defeat, let go of Nick's boner and then grudgingly climbed off the bed, groaning and pouting in discontent. As they shuffled out of the room, Sharon and Sally grumbled audibly, bemoaning the fact that it was super unfair that they didn't get to have even a little taste of Nick's creamy cum after blowing him almost to completion. On top of that, they both quickly agreed that it was kinda mean of Tessa to mention titty-fucking specifically, since she was blessed with such huge, luscious melons while their own boobs were so much smaller than hers and not exactly fit for tit-fucking. \n\nOnce the twins and their grumpy murmurs were gone and the door had been shut closed behind them, Tessa cracked a victorious grin and cast Nick a scorching hot look. Immediately, her eyes zeroed in on his thick saliva-slick boner, whose mere sight made her tingly all over and spurred her into action.\n\nWasting no time, she jumped in bed and straddled her ex boyfriend in a cowgirl position, settling herself on his lap so that her smooth virgin pussy was pressing against his groin and his throbbing horsecock was resting between her plump asscheeks. Reaching back as she thrust her ample rack forward, causing her swinging jugs to brush all over Nick's face, Tessa grabbed his fat dong in her dainty hand and guided it right between her soft jiggly buttcheeks, cozily hotdogging his cockmeat deep between her big, luscious buns. As she started to gently rock in place, thus tit-fucking Nick's saliva-slick schlong within her juicy ass-cleavage, Tessa sighed contentedly and giggled as she spoke. \n\n\"Mmh, nice and lubed already!\" the petite brunette purred, \"I guess that's the bright side of my darling cumslut sisters trying to steal my favorite cock from right under my nose! Jeez, until last week they had never even seen your dick, and now they're, like, totally addicted to it!\" \n\n\"Maybe, buy they couldn't steal any part of me from you, Tess. Not really,\" Nick stated in his calm, matter-of-fact tone. The deeper implications of that observation weren't lost on the pastor's eldest daughter though, and Nick's feelings for her were made even clearer by his broad, guileless smile and by the way he stared raptly at her. On top of that, the possessive touch of his hands on her jiggly booty and the barely contained passion he expressed as he pawed and caressed and kneaded her gloriously round buttcheeks did the rest, making Tessa forget all about Sharon and Sally's intrusion. Well, almost.\n\n\"So, what did you tell them?\" Tessa asked, genuinely curious, even as her pristine pussy got wetter and wetter and her hot, dutifully prepped asshole winked with horniness in time with the throbbing pulsations of Nick's snugly hotdogged boner. \"Are you coming to camp with us?\"\n\nGrinning as he enjoyed the soft fleshy feel of Tessa's fantastic buttcheeks smothering his dong with their round jiggling plumpness, Nick shrugged and said: \"And here I was thinking that what you really, really wanted right now was a big load of my cum up your ass...\"\n\n\"Oh, I want that! I want it so bad!\" Tessa giggled, glad to temporarily put her question aside until later, preferring instead to play along with Nick's teasing. \"This big fat cock is going up my ass right now, and I want it to fuck me hard and fill me with cum!\" \n\nWiggling her bouncy bubble-butt and pressing her nectar-drooling slit against Nick's crotch, Tessa arched her back and reached behind with her hand to better align his gigantic pole with her needy little hineyhole. Intoxicating mewls of excitement escaped her parted lips as she expertly guided Nick's cockhead to its target, her vocalizations culminating in a long sigh when his bloated glans was pressed firmly against her tiny, twitching sphincter. Tessa loved how warm and huge his precum-leaking knob felt against her winking bootyhole, how lewdly it pulsated as it prodded at her forbidden orifice, obscenely eager to be allowed into her ass. \n\nRocking her majestic rump down and backward, Tessa closed her eyes and smiled in rapturous joy while her gummy little butt-ring eagerly relax and gave in to the ass-poking pressure of Nick's large spongy tip. As soon as she felt her horny rosebud open up and widen meekly around his fat cockhead, Tessa threw her head back and planted both hands on Nick's chest, her palms flattening on his toned pecs as her chocolate brown hair was tossed across her arched spine. Within moments, the pastor's daughter was panting raggedly while her docile pink asshole stretched out to its very limit to accept Nick's monstercock inside her anus, his whole glans swiftly easing its way into her snug chute only to be followed by the veiny hardness of his massive shaft.\n\n\"Ooowhhh yeesss! Oooh God, Nick... Uuuhhh fuck yes, yeeess!\" Tessa whimpered deliriously, her mouth hanging open in an O-shaped smile of anal bliss as she let her epic booty fall slowly but surely down on her lover's butt-stuffing erection. \n\nWatching her in awestruck adoration, Nick just held still as Tessa took his huge rod up her ass at her own pace, his hands glued to her round juicy booty to hold her plump asscheeks parted, his eyes mesmerized by her unassuming, undeniable beauty. Her huge bulging tits were wobbling right before his face, jiggling in time with the calm yet relentless pace of her self-impaling descent on his stiff schlong. Nick only had to crane his neck a little bit before he could start licking and smooching and sucking away on Tessa's fabulous melons, his oral attentions focusing mostly on her puffed out, irresistible pink nipples. \n\nOverexcited as she already was, Tessa felt her cock-crammed asshole ripple with delight and her needy pussy get even wetter as Nick went to town on her tits, inch after meaty inch of his monstercock all the while sliding deeper and deeper into her narrow chute. Based on her extensive practice of buttsex with Nick, Tessa didn't need to actually see his huge truncheon disappearing into her overdilated butt-ring to know that she had taken more or less half of his monstercock up her ass at that point, yet she could already feel the first rumbling waves of a powerful climax shaking her to the very core.\n\nLight-headed with sinful joy, the pastor's eldest daughter kept relentlessly forcing her bouncing booty down on Nick's fat dong, gobbling more and more of his throbbing ass-stretching hardness into her narrow tunnel, until her tautly distended sphincter finally wrapped itself around the very root of his truncheon and nothing but his huge, cum-laden balls remained outside her butthole. A quick, toe-curling mini-orgasm hit Tessa right there and then, making her squeal out as he pussy gushed her liquid pleasure on Nick's groin and her nails dug into his chest.\n\n\"Uuhh fuck yessss! That's sooo good!\" Tessa moaned, her eyes barely open and her rapturous smile broadening even more as she began gently rocking in place, stirring her snug rectum with Nick's massive, fully-embedded slab of dickmeat. \"Uuuhh god! So much cock, so fucking deep in my ass! Oooh Niiick... Holy fuck!\" \n\nGrinning through a mouthful of her juicy tit-flesh Nick grunted himself as he enjoyed the rippling, cock-suctioning warmth of Tessa's climaxing anal walls tugging away at his deeply buried schlong. Nibbling on her delicious nipples and slurping on the overflowing softness of her bulging jugs, Nick willed himself to keep his simmering buttlust in check for a little bit longer, limiting his actions to a slow, controlled bucking of his hips which caused his boner to thrust up into Tessa's buttery bowels in short and very shallow strokes, matching her unhurried rocking rhythm on his lap.\n\nFor long moaning minutes, Tessa kept up her lazy self-impaling tempo, bouncing her bubble-butt slowly and sensuously on Nick's enormous truncheon and rubbing her girlcum-slick clit on his pubic bone without ever letting more than a couple of girthy inches of his shaft slide out of her greedy, lewdly squeezing asshole. Having so much dick crammed deep into her anal tunnel and savoring the butt-stretching pressure and sheer throbbing hugeness of Nick's horsecock gently pumping back and forth inside her deepest anal depths was the most deliciously mind-melting experience ever for Tessa, one she would never get tired of enjoying. On top of that, she was also getting her sensitive tits royally serviced by Nick's boob-slurping tongue and nipple-suctioning lips, which made her even crazier with pleasure, amplifying the intensity of the unbroken string of sizzling assgasms she was going through while her overstretched little anus twitched incessantly around her lover's dong.\n\nUnsurprisingly, Nick was having the time of his life as he gloried in the cozy heat and heavenly tightness of Tessa's velvety smooth rectum rippling away around his overswollen boner, squeezing and releasing and massaging him non-stop in sync with the ebb and flow of her ass-centered climaxes. A flow of runny precum kept oozing from his butt-delving glans, further lubing up the warm, snug depths of Tessa's cock-engulfing bowels and making the slippery friction of their unhurried sodomy even more pleasurable. Indeed, the intimacy and sensuousness of the slow undulating rhythm she was imposing on her booty-skewering ride felt amazing to Nick, satisfying him emotionally as it did physically. \n\nAnd yet, as he lazily humped his enormous schlong up inside Tessa's rectum and grunted into her huge bulging tits at her every ass-stuffing rocking bounce, Nick could still perceive that, in the back of his mind, not too far from the surface, the frothing rump-riding anal addict part of him was chomping at the bit, raging to be unleashed and savagely plunder Tessa's incredible booty. As always though, Nick held back. In truth, there was no need to fight his simmering buttlust, not really: at some point, the moment would come when Tessa herself would give him the green light, either allowing or, more likely, actually demanding to be assfucked hard and deep, the way they both liked. \n\nAs it turned out, that moment came sooner than Nick expected, right after Tessa succumbed to a particularly potent assgasm that made her pussy juices gush all over his crotch and sent her warm, silky soft anal walls spasming like crazy around his deeply engulfed schlong. Blissfully undone by that crushing blast of butt-centric pleasure, Tessa weakly bounced up and then slammed her plump booty all the way down for the last time, forcing Nick's humongous pole balls-deep into her ass and thus letting her quivering rectum massage him amazingly from tip to root. While she sat there on his lap, fully impaled on his monstercock, and rode out her toe-curling orgasm, Tessa let her limp body collapse forward, pressing her massive tits on Nick's chest and resting her head in the hollow of his shoulder, her mouth slack and caught in a big rapturous smile as long mewling gasps of release tumbled from her lips.\n\nHolding her soft curvy body tightly in his arms, his hands possessively placed on the big round globes of her epic bubble-butt, Nick waited until Tessa descended from her peak and the fantastic cock-wringing squeezes coursing through her buttery bowels relented a bit before he turned toward her adorable climax-flushed face and locked his bespectacled gaze with her barely open, lust-foggy eyes. He didn't have to say a word nor do anything more than raise his eyebrows in question. Immediately, through her blissful haze and with a beautiful inviting smile shining on her gorgeous lips, Tessa replied, nodding her head eagerly and mouthing in a barely audible murmur. \n\n\"Yes... More, Nick... Please give me more... I need more, Nick... More!\"\n\nNick didn't need to be told twice. As soon as those trembling words were out of Tessa's mouth, he wrapped her closer in his embrace and swiftly rolled the both of them over, until a she was lying on her back with him on top. Squealing and giggling and moaning as a good half of Nick's fat dong slid out of her clutching anus due to their sudden movement, as soon as she found herself in a missionary position Tessa drew her legs back to her ample chest and spread her creamy thighs wide open, allowing Nick the best possible access to her bootyhole. Unsurprisingly, he took full and immediate advantage of her wanton willingness.",
        "Tessa barely had the time to reach her right hand to her clit and pinch one of her engorged nipples with the left when Nick vigorously rammed his half-slotted boner all the way back into her clingy orifice, stuffing her ass to bursting once again and eliciting a loud gasp from her O-shaped mouth. The depth and force and delicious brain-frying intensity of that rectum-cramming thrust made Tessa see stars, causing yet more girlcum to drool from her nectar-soaked slit, but it was merely the start, and she knew it. A quick, long out-stroke leading into another powerful in-stroke followed, and then another and another, each butt-stretching thrust slamming into her snug tunnel harder and faster than the one before, each one sending bigger and more pleasurable waves of anal bliss radiating from her cock-jammed chute to envelop her whole surrendered body. \n\nWithin moments, Nick was plowing away at his amazing ex girlfriend's ass like a man possessed, drilling his huge truncheon as deep into the heavenly tightness of her slick little bootyhole as he could. Now that his buttlust was finally unleashed, Nick channeled all of his passionate, undiluted ass-worshiping devotion for Tessa in his every rectum-reaming thrust, slamming his overswollen schlong balls-deep into her asshole again and again and again, recklessly sodomizing that most exquisite of rosebuds, his dearest among all the sweet little anuses he had had the pleasure of fucking in his young life. \n\nAs he pounded his fat dickmeat into Tessa's receptive and ever-hungry rectum with unrestrained gusto, glorying in the steamy warmth and slippery shaft-massaging snugness of her narrow anal passage, Nick stared in lust-addled awe at her beaming, flustered face. Tessa's hazel eyes seemed to be rolling back into her skull from the insane rush of pleasure she was experiencing, she could barely even keep her eyelids from closing all the way. Her gorgeous mouth was slackly open, emitting a husky chorus of intermingled moans, sighs and squeals of indecent appreciation for the furious butt-splitting rhythm at which he was claiming her tiny forbidden hole. \n\nMost of all, Nick was floored by the broad, bright smile that adorned Tessa's rapturous expression of unadulterated joy. Her happiness, as evident and tangible as the constant stream of girlcum trickling from her well-fingered pussy down to her gummy, lewdly dick-stretched sphincter, was just as arousing to Nick as the squeezing, cock-sucking tightness of her buttery rectum rippling away around his pistoning boner, if not even more. Nick had always loved the way Tessa genuinely and openly enjoyed being buttfuck, how well she took him up her ass and how beautiful she became when his fat dick was pounding away at her sweet little bootyhole, how her face seemed transfigured by that experience and how much she came when his massive horsecock was ramming in and out of that adorable pink rosebud of hers, her virgin little pussy gushing freely and lubing her widened orifice even more, further aiding their anal coupling.\n\nOverwhelmed by a surge of love and affection, already impossibly aroused both by the twins' double blowjob and by the sensuous undulating ride that Tessa's plump bubble-butt had just taken on his thick cock, Nick knew that he wouldn't be able to keep up his ass-wrecking rampage for long. Not that he cared, though. He was having too great a time to slow down at that point, even if he had wanted to. \n\nTessa's sexy moans were music to Nick's ears and the frantic motions of her arm as her fingers went crazy on her nectar-squishy clit reinforced his awareness of how much pleasure the pastor's daughter was getting from their intense sodomy. Her beaming smile was even more mesmerizing than the jiggly sway of her big juicy tits wobbling away in time with his powerful booty-slamming thrusts, and that visual stimulation on top of the incomparable feel of her velvety smooth anal walls tugging and sucking and caressing his achingly hard schlong as he pounded away at her ass created a combination of pleasures that felt almost too good to bear all at the same time.\n\nEven as he felt his long-delayed ejaculation surge along his pulsating shaft, Nick kept drilling his huge truncheon into the soft, caressing warmth of Tessa's anal chute, savoring to the fullest the oily grip that her clingy, tautly dilated butt-ring had on his boner. As if the tender suckling pressure that her stretched out sphincter exerted all along his massive shaft as he kept sliding his full length back and forth into her anus wasn't awesome enough, Tessa's steamy rectum was rippling non stop, treating him to a fabulous series of shaft-massaging spasms. Indeed, what made those dick-engulfing squeezes even more satisfying to Nick was the knowledge that they were caused by the back-to-back string of anal climaxes that Tessa was experiencing thanks to his animalistic booty-plundering frenzy. \n\nCaught in that self-feeding loop of anal bliss, too horny to even announce his impending ejaculation, Nick pressed his mouth onto Tessa's moaning lips right before plunging his horsecock balls-deep into her asshole one last time and stopping there, with his entire fleshy pole crammed in the deepest, warmest depths of her cozy rectum. The lovers barely had the time to kiss before Nick's orgasm exploded spectacularly, inundating Tessa's anal tunnel with a geyser-like deluge of creamy cum. The feel of her ex boyfriend's massive dickmeat filling her anus to the limit while spurt after huge splashing spurt of seed was pumped way deep into her asshole made Tessa cum harder than she had until that point, causing a kiss-muffled scream of pure ecstasy to erupt straight from her smooching lips into Nick's grunting mouth.\n\nWith their lips locked together and his fat cum-spewing truncheon sheathed to the root into her steamy rectum, Nick and Tessa rode out their intertwined orgasms together in a breathless, passionate haze of shared anal pleasure. The pastor's daughter felt tingly all over and almost faint with delight by the time Nick's enormous dick stopped throbbing in climax and blasting ropes of warm cum deep inside her ass, his prodigious ejaculation finally petering out to a few gooey dribbles on top of the bucketload of potent sperm he had just pumped into her snug rectum. Pulling back from their intense soulkiss, Nick took a much needed breath of air as he collapsed on top of Tessa's soft curvy body and hugged her tightly, making her purr with joy. \n\nThrough the daze of her afterglow, Tessa merely cooed and giggled as she felt Nick shifting and maneuvering to get them into a cuddly spooning position while trying to keep his unyielding hardness sheathed into her sperm-sloppy butthole in the process. Despite his best efforts, Nick's fat dong slipped out of Tessa's cum-lubed anus, escaping the tender clutching hold of her distended orifice with a lewd squishy sound that was immediately followed by Tessa's displeased groan. That moment of dissatisfaction was forgotten as quickly as it had emerged though, as Nick guided his meaty horsecock back into her seed-slick sphincter right away, preventing his creamy ejaculate to escape her gummy asshole and avoiding the intolerable sense of emptiness that Tessa so hated to feel, especially after she had been properly buttfuck and pumped full of cum. \n\nMuch to the petite brunette's delight, Nick didn't just slide his veiny pole balls-deep up her ass again as he spooned her closely, but he also wrapped his arms around her voluptuous frame and held her snuggled tight to his lean body, cupping her huge tits in his palms and lightly massaging their juicy fullness, just the way she liked. Purring like a kitten in Nick's embrace, smiling beatifically as she enjoyed his hands pawing her boobs and tweaking her nipples, his delicate kisses on her neck and, most of all, the pussy-wetting fullness of his enormous cock slotted to the hilt inside her cum-filled asshole, Tessa floated away in the sweet peacefulness of her afterglow for long delicious minutes, aware of nothing but the perfect joy she always felt whenever she and Nick were joined like they were right there and then. \n\nAt some point, once even the last aftershocks of her climax had stopped echoing through her gorgeous body, Tessa was brought back from her peaceful daze by the first tentative, shallow back and forth motions of Nick's ever-ready boner stirring into action within her seed-slippery rectum. With a playful giggle and a long sensuous sigh, Tessa replied to Nick's gentle humping by clenching her warm buttery chute around his monstercock, treating him to a few deep suctioning squeezes of her well-trained anal muscles that signified her eager albeit silent assent to his desire to start another round of assfucking. Within moments, still kissing her smooth neck and shoulders but now grunting with renewed buttlust, Nick was bucking his hips against Tessa's plump pillowy asscheeks in a lazy yet firm sodomizing rhythm that allowed them to share their post-orgasmic intimacy while already setting the stage for yet more anal delight to come.\n\nAs her lover's rigid length slid fluidly in and out of her sensitive little asshole, aided in its steady tempo by the ungodly amount of cum plastered on her velvety soft anal walls, Tessa could feel her body already surrendering to the all-encompassing pleasure of having Nick's enormous dong plunging deep into her rectum and then gliding almost all the way out, leaving just his spongy sphincter-stretching cockhead embedded in her backdoor before he drilled his entire massive dickmeat back into her anus once again, only to then repeat the whole delicious ass-jamming cycle from the start, again again and again. Still, even as Nick picked up his booty-jamming pace and held her even more possessively in his spooning embrace, a sliver of rational consciousness manifested itself in Tessa's blissed-out mind, forcing her eyes to blink fully open and bringing her previous question back to her moaning lips. \n\n\"Mmmh Nick... Wait a second, baby...\" the pastor's daughter murmured between lustful sighs of delight as she felt her seed-slippery, dick-stuffed anal chute sizzle and quiver with that unique brand of toe-curling, incapacitating pleasure that only Nick's butt-plowing thrusts could incite in her. With a supreme effort to steady her thoughts and delay her ass-centered gratification for a little while longer, Tessa managed to say: \"Before we get round two started, you need to tell me. Just tell me, Nick. And no joking this time.\"\n\n\"Tell you what, my anal princess?\" Nick whispered playfully into Tessa's ear without stopping his long booty-cramming strokes, already guessing what she was alluding to. \n\n\"Uuhh god... You know what I mean, Nick. Are you coming with us or not? Oohhh fuck!\" Tessa finally asked, her words degenerating into mewls of anal bliss and her thoughts blurring out more and more while stronger and more breathtaking jolts of pleasure radiated out of her creamy, cock-packed rectum. \n\nHearing Tessa ask that question explicitly made Nick grin. It was the same question that Sharon and Sally had been throwing at him incessantly for the last few days, a question that Tessa always seemed careful not to pose herself, one that now, finally, she couldn't help but ask. At that point, Nick had his answer more than ready.\n\nSpooning her tighter, wrapping her soft curvy body in his embrace, Nick teasingly pinched Tessa's puffy pink nipples at the same time as he incremented his butt-plowing pace right at the same time as he said: \"Yes, Tess. I'm coming too this year.\" \n\n\"Ooh Nick! Uuugh yeeess!\" Tessa mewled, her head spinning and her whole body shivering from the potent mixture of pleasurable stimuli coursing through her. In truth, she couldn't even tell if it was Nick's answer or his tit-tweaking digits or his mighty booty-slamming horsecock that was making her feel so insanely good.\n\nEgged on by her appreciative reaction, Nick drilled his massive truncheon even more forcefully into Tessa's lovely asshole, filling the warm welcoming depths of her buttery rectum to bursting with each powerful thrust. Meanwhile, intent on making their intimate sodomy as pleasure for her as he possible could, Nick let go of one of Tessa's huge melons and caressed his way down her cute tummy until he reached her juice-leaking little pussy instead. Starting to frig away on her engorged clit, Nick decided to elaborate on his response to the question that the twins first and now Tessa herself so craved to have him answer, letting a stream of dirty talk pour straight into the brunette's ear with low, husky murmurs that he timed to match his ever harder and faster butt-pounding strokes.\n\n\"Oh yes, Tess... I'll come to camp, alright. The twins said I can stay at your aunt's cabin, so you three can sneak out at night and come get your tight little assholes stretched out, just the way you all like... That's what you wanted, right? You wanted to get buttfucked hard and deep even at church camp, every night and any time you can. You love it, all three of you. The pastor's sweet daughters, all hooked on buttsex... So hot, so fucking dirty. Camp councilors by day and anal sluts by night, that's the plan, right, Tess? That's what you want. What you need. Say it, Tess. Say it!\"\n\n\"Yeeeesss! Uuhhh fuck yeeeees!\" Tessa squealed deliriously, maddened with lust by Nick's calm, deep voice and the sexy, naughty truths he was whispering in her ear. Her clit was on fire under his nectar-slick rubbing manipulations, her pussy overflowing with girlcum as her obscenely eager butthole pulsated and suckled avidly all around his giant schlong, her snug rectum rippling non stop with orgasmic spasms that matched his relentless ass-reaming thrusts and made her see stars as she kept cumming incessantly, begging for more. \"Oooh Niiiiick! Your cock... In my aaaass! I love it! Uunghh... I want it... I need it! Ooowhh... All the time! Sooo good, sooo deep in my ass! Oh my god yeeeeaahhh... I love iiiiiit!\"\n\nSmiling and kissing her transfixed face, humping her fabulous booty so hard that her bed creaked in time with the furious meaty beat of his groin clapping non stop against the epic plumpness of her bubble-butt, Nick kept murmuring into Tessa's ear as he lovingly fucked her ass, glorying in her broken moans and in the exquisite warmth and tightness of her forbidden passage all the while.\n\n\"Yes, Niiiick! Fuck... My... Ass! Don't stop... Ooowhh fuuuck! Don't ever stop, babyyyyy! Uuhhh yes, yes, yeeaahhh!\"\n\nPlowing her cum-lubed anus with a smile on his face, Nick lost himself in the hard balls-deep thrusting rhythm he was imposing on Tessa's fabulous bubble-butt. Letting the insanely erotic background sound of her incessant whimpers of anal delight accompany the booty-wrecking plunges of his raging horsecock, Nick closed his eyes, spooned Tessa closer and nuzzled her hair and neck and cheeks while the languid harmony of their umpteenth sodomy enveloped them both, bringing them to that special place they shared whenever his huge dick was immersed deeply in her tight little asshole. \n\nFar from cumming just yet, sure he could last for a long time and gift Tessa with a bunch of brain-melting anal climaxes before he flooded her rectum with another bucketload of cum, Nick found himself chuckling as a weird and unprecedented thought filtered into his blissful buttfucking trance state. For the first time ever, Nick realized, he just couldn't wait to go to bible camp! \n\n***** \n\nUnlike her sisters, who had been pestering Nick non stop for the last few days about it, Tessa had only hinted in passing at the possibility that he might join them at the summer camp that their church organized each year in the nearby mountains. The pastor's eldest daughter did imply that she would love having Nick there, but she had been careful not to pressure him to tag along. Indeed, Tessa had never forced Nick to participate in any of the activities of her father's congregation before, not even when they were a couple. \n\nIn and of itself, the fact that Nick was the least outdoorsy guy she knew had always been a valid enough reason for Tessa to rule out his participation in the church's summer camp. For herself and her sisters though, going to camp was a fun tradition that they had kept alive every year, as participants at first when they were kids and more recently as councilors, always enjoying the experience. Normally, Nick's potential involvement wouldn't even have been an issue at all, as it had never had been one before, but Sharon and Sally's recent introduction to anal sex and the way they got instantly and deeply hooked on Nick's big ass-stretching horsecock turned everything upside down in no time. \n\nLess than a week had passed since the Sunday when, with Tessa's help and blessing, Sharon and Sally had sneaked out of a big church event to have their butt cherries popped by Nick, and already the twins were showing all signs of become genuine buttsluts, much like their big sister. Thrilled by the discovery of just how much pleasure they could get from anal sex while remaining technically virgins, Sharon and Sally barely waited a day before offering their sweet little buttholes to Nick once again, lamenting how subpar the dildos they borrowed from Tessa were when it came to sate their newly discovered but already prodigious anal hunger. Of course, Nick readily agreed to help the twins out, but not before consulting with Tessa, who magnanimously gave her approval and told him he could sodomize her horny little sisters any time he wanted, as long he promised to always save some assfucking for her too. Grinning from ear to ear, Nick solemnly agreed to those terms, guaranteeing that, as long as Tessa kept offering him her beautiful ass, he'd most definitely keep fucking it to the very best of his ability.\n\nIn truth, Tessa understood perfectly well where the twin's rabid desire to feel Nick's cock plowing away at their buttholes came from, since she herself had experienced a similar state of glorious albeit kinda slutty epiphany after she and Nick had tried anal sex for the first time. Still, weirdly funny as it was to see that her little sisters were as receptive to butt love as she herself was and despite being genuinely happy that their first sexual experiences were with a good, trustworthy and massively hung guy like Nick, Tessa quickly realized that a bit of scheduling would be needed if she was to remain sexually satisfied while also sharing Nick's enormous schlong with Sharon and Sally. \n\nAccepting Tessa's guidance as the de facto High Priestess of their dirty little Church of Bootyism, as Nick jokingly called it, the pastor's three daughters managed to make things work pretty well, much to their own and Nick's pleasure. The core stipulation was that Tessa would always have first dibs on Nick's cock any time she wanted as long as she agreed to make sure that the twins also got at least one assfuck each every day. Despite having secured a lot of control over the situation, Tessa usually displayed a fair degree of generosity when it came to letting Sharon and Sally sneak in a bit more buttfucking time with Nick, even if that meant sacrificing some of her own backdoor fun. \n\nIn truth though, despite or maybe because of the fact that he was also boning Sharon and Sally's asses on a daily basis, Nick seemed to be putting even more effort than usual into making love to Tessa's epic booty. Maybe, Tessa considered, the devoted rimjobs he treated her tiny pink rosebud to and the genuine passion that animated every single one of the lustful butt-poundings he unleashed on her plump rump had to do with the fact that he was super horny to have not just one but now three willing little bootyholes to plow all the time. Or, which Tessa found to be more likely and was in fact repeatedly confirmed by all the affections he lavished on her every time they had buttsex, Nick was just telling her through sensuous actions rather than sappy words that she was still his number one girl, his favorite buttslut and his true, original anal princess. That was one hundred percent consistent with Nick's style, Tessa thought, and she loved it.",
        "Meanwhile, despite being thrilled about their newly discovered passion for buttsex and their daily climax-ridden anal romps with Nick, the twins were getting worried. In a matter of days they would be going to camp, and that meant not having Nick around to give them those precious, anally administered doses of dickmeat that they had already come to crave so much. Unlike Tessa, who could at least conceive of going without assfucking for some time, even though she hated to do so now that she had finally been reacquainted with Nick's awesome booty-drilling schlong, the twins were panicked about having to quit their anal addiction cold turkey. Spending two weeks at camp and relying only on Tessa's assorted buttplugs and dildos to keep their needy buttholes satisfied was simply not an option for either Sharon or Sally: the way the saw it, it was obvious that, if they were leaving for camp, then Nick would have to tag along too.\n\nUnsurprisingly, when Tessa informed them that Nick had finally agreed to come too, Sharon and Sally were so overjoyed that they didn't even contemplate the possibility that it might be the deep emotional connection that Nick shared with Tessa that eventually convinced him, rather than their own relentless pestering. Of course, the twins had already noticed how quickly and strongly the ties of love and friendship that bound their big sister and her ex were reasserting themselves; it was something Sharon and Sally had expected somehow, and they were glad to see it happening, given how fond they had always been of Nick. Still, they did like to think that a huge part of the reason why he had come to the decision to join them on their church-themed retreat in the mountains had to do with the sexy roundness of their toned heart-shaped butts, not to mention the complete access to their backdoors they were always eager to grant him. \n\nCallipygian vainglory aside though, Sharon and Sally, didn't fail to notice how distracted Tessa was in the rare occasions when she video-chatted or texted with her boyfriend, Toby. At the same time, they saw Tessa getting more cheerful every day, with her most happy moments always occurring when Nick was around. The realization that they had never really seen their big sister so joyful with any other boyfriend apart from Nick led Sharon and Sally to wonder if, maybe, their recent involvement with him might be detrimental to the possible rekindling of a closer intimate relationship between Tessa and Nick. \n\nThat thought threw the slim blondes off a bit, but not too much. After a rather cursory but still well-meaning bout of soul-searching, during which they agreed that it would be much better for Tessa to get back together with Nick and dump Toby's lame ass as soon as possible, Sharon and Sally came to the conclusion that no, they shouldn't feel bad about their desire to offer their horny little buttholes for Nick to plow. After all, it had been Tessa's idea in the first place to have him pop their anal cherries, kinda, and it didn't really seem like Nick's obvious preference for Tessa and her spectacularly plump booty had changed in the least. \n\nIn fact, he seemed to be more turned on than ever by Tessa and her epic bubble-butt these days, regardless of how often he fucked their smaller but still gorgeous asses. As far as the twins were concerned, it could even be said that their involvement with Nick was actually helping rebuild his relationship with Tessa, sorta, at least in the sense that their cute heart-shaped butts served as appetizers for the main course: Tessa's big juicy rump. So yes, Sharon and Sally finally decided, it was okay for them to give in to their overpowering need to feel Nick's fat ass-stretching dickmeat sliding in and out of their bootyholes all the time, and it was even more okay for them to enjoy orgasm after gushing orgasm and bask in the feel of his abundant cum flooding their anal depths, filling their royally pounded anuses and soothing their snug anal walls with rope after rope of his creamy seed. \n\nFor her part, Tessa was not at all surprised when, as soon as she brought the twins up to speed about Nick's decision, they instantly replied that they had already figured out a perfect way to make it all work out. Without wasting a second, Sharon and Sally reined in their giggles and yelps of triumph and unveiled the carefully laid plan that they had been concocting for days now, a plan so well thought through that Tessa only had to put a few finishing touches to it. \n\nIn essence, the idea was to let Nick stay at their family's hunting cabin, which was near the camp grounds and could be reached via a trail through the woods. That way the three of them could sneak out and go there to have buttsex whenever they weren't busy with their jobs as councilors, the twins explained to Tessa with matching beaming smiles on their faces, making her chuckle and nod in ready agreement. To make sure that their plan would work, Sharon and Sally added that they had already contacted their aunt Jackie, their father's sister and the most frequent occupant of the cabin, and learned that she didn't plan to go up there any time soon. \n\nOne issue the twins had left unresolved but hoped that Tessa might smooth over was the possibility for all three of them to actually be exempted from having to sleep at camp and instead go to their family cabin at night once the daily activities were done. At that time of summer the camp was always at its most crowded, with people coming from various local churches, so, Sharon and Sally reasoned with Tessa, if they were to offer the director a small yet viable solution to alleviate the issue of bunking arrangements a bit, he might agree to it. That is, the twins pointed out, as long as it was Tessa who brought up the issue with him. After all, they insisted, Tessa was a veteran there, a trusted councilor, beloved by campers and staff alike, not to mention the fact that she was the sweet and perfect eldest daughter of the pastor whose great-grandfather had donated the land where the camp was built to begin with. If she was to make the right moves with the director, Sharon and Sally pressed on, she could easily pull it off.\n\nSmiling knowingly at them, admiring both the fact that they had planned it all out and that they had done so while having absolute faith that Nick would eventually accept their call to come and sate their anal needs, Tessa answered her little sisters' expectant stares with a shrug that made her big boobs wobble under her top, an impish grin declaring her eager participation even before she spoke. \n\n\"Okay,\" Tessa said with confidence, \"when we get there, I'll deal with the director. I got this, girls.\" \n\n*****\n\nAs expected, convincing the director to let her and her sisters leave the camp grounds at night so that they could sleep at their family cabin turned out to be a fairly simple mission for Tessa to accomplish. All it took her was a day and a half of flattery and subtle manipulation, combined with a strategic usage of her generous and well-exposed cleavage. \n\nA jolly old bear of a man with a bushy white beard and a big round belly, camp director Branson had been a good friend of the family for ages. Having being the girls' paternal grandpa's best friend, he almost naturally took on a grandfatherly role for Tessa and the twins after their grandfather's death. His preference for Tessa had never been a mystery: he always spoke very highly of her involvement in her dad's church, going as far as to suggest that one day she would be a great successor to pastor Jay at the lead of his flock. Beside the appreciation for her spiritual virtues though, Tessa never been blind to the fact that director Branson's lively gray eyes unfailingly strayed toward her ample bosom whenever they engaged in conversation. Based on that and on the fact that both his current and his former wife had massive boobs that made even Tessa's fleshy melons look like mosquito bites, the pastor's eldest daughter went out on a limb and guessed that Branson was a devoted tit man, and she used that key factor to her advantage. \n\nChoosing to keep the camp regulation polo shirt unbuttoned and wearing the pushiest among push up bras she had, Tessa made it a point to be around the old director as much as possible from the moment she and the twins arrived at camp. Enticing him with sweet smiles and mesmerizing views of the soft, smooth upper slopes of her bulging tits, Tessa worked her magic on the husky director to the best of her abilities, weaving together biblical quotes and spiritual reflections alongside more mundane and practical observations about camp life and such, always keeping her epic rack as near as possible to Branson's hungry eyes. \n\nUnable to resist the visual treat that were Tessa's young, huge yet gravity-defying jugs exposed to him so often and so readily, Branson couldn't help but give his full approval when the pastor's eldest daughter meekly asked his permission for herself and the twins to leave the camp at night so that they could sleep at their family cabin. The director's voice was thick with longing as he uttered a sighing and dreamy: \"Yeeess!\"\n\nMoments later, Tessa retired to the nearest bathroom, pulled down her shorts and panties and jutted out her plump booty before taking a nice pic to send Nick, along with the good news that he could now leave for the cabin where, that very night, they would be together again.\n\nThat text and the sweet picture of Tessa's epic bubble-butt that came with it spurred Nick into instant action. His bag had been packed since the day the girls had left and he had already repeatedly gone over the directions to reach the dirt road that led to the girls' family cabin in the woods, getting ready to leave as soon as he got the green light. Within minutes of receiving Tessa's text, Nick was in his car, headed out of town with a maniacal smile on his face and a raging boner tenting his pants.  \n\nEven though it had only been a couple of days since the pastor's daughters had left, Nick already felt like he was on the verge of assfucking withdrawal, or something like that. Having complete access to three sweet little assholes had definitely spoiled him, and now the total removal of anal intercourse from his normal routine after the recent days of daily buttfuckfests was hitting him with a vengeance. \n\nIt was both paradoxical and ironic, Nick had thought when he tried to analyze his predicament. On the one hand, he simply couldn't stop reminiscing about all the booty-plowing he had done in the previous days, therefore getting rabidly horny. On the other hand though, jacking off to those vivid lust-inducing memories only served to remind him of how dearly he missed plunging his massive boner balls-deep into the cock-hugging tightness and delicious warmth of Tessa's welcoming rectum, or how gloriously naughty it felt to plow either Sharon or Sally's impossibly snug hineyhole and pump her steamy anal depths full of cum while the other blonde beauty waited for her turn, frigging her wet virgin pussy and masturbating her needy sphincter to get it nice and ready to be stretched out by his unyielding hardness as soon as it popped out of her twin sister's seed-flooded rosebud. \n\nOn top of that, Tessa and the twins had kept sending him a constant flow of sexy ass-centric pictures and videos since the moment they had left for camp. As much as he appreciated those naughty images, and he certainly did make good use of them during his barely satisfactory masturbatory sessions, the visual treats that the girls sent him only made Nick wish even more desperately that he could have those sweet round butts in the flesh right there and then with him, so that he could stuff them full of cock and hose them down with cum. Granted, most of the visual treats that the pastor's daughters sent him were quite tame, but among the many enticing yet relatively innocent shots of their booties, some sluttier and sexier gems did stand out, and those became the core focus of Nick's grim dick-stroking marathons. \n\nSuch favorites included a close up video of Sharon's gummy pink orifice clinging eagerly around her digits as she pushed first one then two then three slender fingers into her snug anus and held them jammed knuckle-deep up her ass while she frigged her clit to a pillow-muffled climax with her free hand. There was also a brief yet instantly cock-hardening clip of Sally sliding a buttplug out of her sweet little sphincter with a pop, leaving her lovely pink orifice to gape widely open and wink invitingly at him as it tightened shut on itself again, at which point, to the sound of her lustful gasps, she once again jammed the tapered toy into her needy hineyhole only to then repeat the whole process from the start. All the while, Sally was also lazily fingering her own pristine pussy, her mewls becoming louder as the video progressed, matching the quicker insertions of the buttplug into her lubed up backdoor and the faster slit-diddling rhythm of her fingers, until she came screaming, with the plastic toy crammed deep up her ass. \n\nStill, Nick's favorite was a video of Tessa on all fours on a bed, her face pressed down on the pillow as she looked back at the camera over her shoulders, her big juicy ass tilted up and swaying gently side to side, just enough to make her gloriously round buttcheeks jiggle away in a hypnotic rhythm that entranced Nick instantly and made a stream of precum ooze freely from the fat tip of his raging erection. After a few seconds of gentle teasing undulations of her protruding booty, Tessa reached back with her hands and ran them all over the curvy plumpness of her soft bouncy globes, massaging her own rump with slow and sensuous caresses, kneading those fabulous asscheeks as she purred and smiled with her eyes half-closed. Then, when Nick's saliva was practically drooling on the screen of his cell phone, Tessa parted her meaty buns and revealed the tiny little pucker of her asshole in all its tight, adorable pinkness. At that point, after letting the camera take in the irresistible vision of her cute hineyhole, Tessa used the very tips of her forefingers to ever so slowly pull the rubbery rim of her butt-ring apart and force her forbidden hole to open up a bit, just enough to let Nick see it wink and pulsate and twitch with horniness. As if that lewd invitation wasn't clear and exciting enough, after a few moments Tessa looked over her shoulder and straight into the camera, smiling languidly as she said: \"All my asshole needs now is your big fat cock, Nick...\" \n\nAnd with that irresistible line, the video shifted to a closer and closer view of Tessa's beautiful bubble-butt and gradually zoomed in tighter and tighter on her winking, delicious rosy asshole, until the clip faded to black on a promising close up of the entrance of Tessa's beckoning, barely revealed anal passage.\n\nNeedless to say, Nick had blown load upon massive load because of that specific clip featuring his bootylicious ex girlfriend, but then again all of the pastor's daughters combined and reiterated efforts to tease him with those digital surrogates of their beautiful asses had coaxed bucketloads of cum out of him. An added layer of eroticism was also implicit in the fact that, obviously, quite a few of those clips weren't selfies; the mere thought that the girls were actively helping each other shoot their videos to make them more enticing for him was enough to send flexing jolts of arousal to Nick's fat dick. Still, the fact remained that all those juicy vids and pics steadily increased his bottled up horniness while never providing him with what he really needed to relieve his simmering buttlust: a tight, willing little asshole to stretch out, pound hard, and bury his huge cock to the hilt into, so that his balls could properly empty of all their ever abundant supply of creamy sperm. \n\nGiven how generally vital to his overall well-being buttsex was and how frequently offered and deeply satisfying it had been since he had returned home for the summer, being deprived completely of anal intercourse led Nick to feel like the previous two days had dragged on with glacial and barely tolerable slowness, and no wonder. Luckily though, that was all over. \n\nNow, Nick thought as he hit the gas and grabbed harder onto the wheel, staring at the mountain road ahead with a glint of crazed desire in his bespectacled eyes, now he was going to get what he so desperately needed and had been envisioning incessantly, either in his butt-focused daydreaming or in the saucy images that Tessa and the twins flooded him with. Now, less than an hour away somewhere in the woods up ahead, Nick was going to get his hands on the real thing and finally plunge his raging boner deep inside a sweet curvy ass. Or three.\n\n*****\n\nHaving meticulously studied the route beforehand and with Tessa's directions indelibly etched into his mind, Nick had very little trouble locating the exact point where he had to exit the main road, travel deeper into the woods along a narrow secondary road and then take the winding dirt road that led up the side of the mountain to finally emerge in the broad, tree-encircled clearing where the pastor's family cabin stood.\n\nEven before he killed the engine, Nick was already texting Tessa to let her know he was there. Within moments of his sending the text, she replied that she was on her way. Buzzing with anticipation and adjusting the tent that his chubby dong was causing inside his pants, Nick decided to make the wait more bearable by taking a look around and familiarizing with what he hoped would become his den of anal delights for the next few days. \n\nDespite his innate aversion for outdoors activities (or, for that matter, any kind of physical exertion that didn't have to do with sex and was therefore, by his laid back standards, just needless discomfort) Nick was very much taken by the beauty of that secluded little spot in the mountains, and he particularly liked the amazing view of the forested valley that the cabin overlooked. The fresh air, the chirping of birds and the late afternoon sun helped Nick savor the situation more, giving him a glimpse into the reasons why someone would want to hike through the woods just for fun. And yet, his appreciation only reached a true peak when he stepped inside the cabin and discovered that there was perfectly functioning wifi and the kitchen cupboards were stacked with plenty of canned foods and other provisions.\n\nThe hunting trophies hanging on the walls and the rough stones of the fire place didn't particularly impress Nick, but the big comfy couch that dominated the living room along with a couple of plush armchairs and a fluffy-looking carpet brought a smile to his face, accompanied by mental images of how the girls might be arranged on the couch cushions or over the armrests to better offer him their sweet round butts. Once Nick went up the creaky wooden stairs and dropped his bag in the hallway, a whole array of positions and acts flashed before his eyes each time he peeked his head into one of the bedrooms, his huge dong hardening even more inside his pants. Grinning, he made his way downstairs again, all the while estimating how long it would take for Tessa to get there. \n\nGiven how horny he was, a mere passing glance at a photo on the mantlepiece featuring Tessa and the twins horsing around in a creek with their voluptuous aunt Jackie, all of them wearing skimpy bikinis, was more than enough to trigger even wilder fantasies in Nick's mind, leading him to include the girls' milfy aunt in his lewd daydreaming. Shaking his head to clear his steamy thoughts at least a little bit, he decided to go out and get some fresh air as he waited for Tessa to arrive. He dearly wished she wouldn't take too long, otherwise he would seriously have to consider taking care of his achingly hard erection himself. ",
        "Nick had just stepped outside and was standing on the front porch, eying an old and distinctly creepy rocking chair out there, when a rustling of branches made him turn to the side. Walking with sure steps in her hiking boots, wearing khaki shorts and a white polo shirt against which her big pillowy tits visibly strained in an attempt to spill past the undone buttons, Tessa emerged from the forest path into the clearing with a big smile on her face, her round juicy hips swaying in time with the side to side swishing of her dark ponytail as she drew nearer.\n\nSuddenly feeling all warm and fuzzy inside while his pants-trapped boner throbbed with anticipation, Nick perked up more and more as he watched the outdoorsy version of his awesome ex girlfriend walk toward him. With a tinge of affectionate irony in his deep voice, Nick greeted Tessa by saying: \"Uh, look at that: a forest elf chick!\"\n\n\"Yeah, right,\" Tessa giggled in return. \"More like a gnome, don't you think?\"\n\n\"Nah, you're not really that tiny, Tess,\" Nick grinned, squinting his bespectacled eyes and slightly tilting his head in a gesture of mock assessment before he teased her some more. \"You're at least as tall as a dwarf, a pretty tall one too.\" \n\n\"Ugh, no way!\" Tessa exclaimed, her hazel eyes widening in shock, further revealing the vibrant light of anticipation shining in them alongside the playfulness instilled by that specific line of bantering. Knowing Nick as well as she did, Tessa smirked as she slowed her progress, scrunched her face in exaggerated disgust, and tauntingly replied: \"I don't wanna be a bearded dwarf chick! No freaking way.\" \n\n\"Oh come on, Tess!\" Nick couldn't help but exclaim in exasperation even as he remembered how strangely often they had had that silly argument back when they were a couple. \"We've been over this already, more than once. In fact, every time we watched The Lord of the Rings. For the thousandth time: dwarf women don't have beards! It's just slanderous elven propaganda, that's all! Jeez,\" he ended with a chuckle, \"what's with all the dwarf hate, really? Almost every fantasy franchise underestimates them and makes fun of their women...\"\n\nA big laugh erupted from Tessa's gorgeous lips, for that comment instantly evoked a host of memories relating to Nick's adorably dorky tendency to always rush to the defense of dwarfs whenever a debate about fantasy stuff arose among the nerds in the church group or at school. She had never actually figured out if Nick acted as a dwarf apologist out of some odd sense of fantasy justice or if he simply enjoyed being goofy by arguing a perfectly silly point with his characteristic determination as if it was the most crucial issue ever. It was so weird, but Tessa actually liked how some of Nick's quirks could instill in her a funny sense of puzzlement, it was one of the many unique traits she had always loved about him. \n\nGiggly and excited, the pastor's eldest daughter took the last few steps that separated from her ex boyfriend and joined him on the porch, standing right in front of his tall, toned figure. Looking up into his inquisitive eyes as he in turn smiled broadly while drinking in once again the unassuming beauty of her petite curvy figure, Tessa let a long moment of silence pass by before she let out a sighing laughter and jumped up on her tip toes while throwing her arms up and around Nick's neck. At the same time, Nick wrapped her in his embrace and leaned down closer, and within moments their mouths were joined in a deep, spontaneous soulkiss. \n\nAs their lips met over and over again in a breathless series of smooches and their tongues danced away to the joy of being together again, Tessa jumped up into Nick's arms and wrapped her shapely legs around his midriff, urgently pressing her shorts-clad crotch against the massive, pussy-wetting bulge in his pants. Holding her in a firm hug, Nick pinned Tessa back against a porch post, rabidly sating his thirst for the wet warmth of her kissing mouth as he planted his hands possessively on the big round buns of her ass and pawed away at her fabulous booty, enjoying the fullness and plumpness of her bubble-butt even through the fabric of her shorts. \n\nWith her arms locked tightly around his neck and her juice-drooling pussy positively on fire with horniness despite being so wet that her panties felt completely soaked through, Tessa finally pulled back from that intense greeting kiss to murmur with a smile: \"Hi, you...\" \n\n\"Hi yourself, my anal princess,\" Nick said, nuzzling Tessa's smooth, beautiful face, pressing his trapped boner harder against her groin. \"I missed you like crazy. Seriously.\"\n\nThe guileless, matter-of-fact directness of Nick's words mixed with the undisguised arousal in his voice made Tessa purr with delight, fueling her already raging lust. After trading another quick tongue-sucking kiss, Tessa deftly wiggled out of Nick's embrace and let herself slide down along his body, until she was kneeling in front of him, a wanton grin on her lips, a lovely flush of arousal reddening her radiant visage.\n\n\"We've got to be quick,\" Tessa said as she fumbled with his belt buckle, her burning desire evident in the way she licked her tumid lips as she spoke. \"I haven't even told the girls that you're here yet, or they'd have tagged along for sure, the little buttsluts... I can't be gone too long, I don't wanna raise suspicions. I guess you'll just have to fuck me real fast and make me cum real hard, baby,\" Tessa concluded, winking up at a grinning Nick as she undid his belt and pulled down his pants and boxers with an urgent yank. \n\nNick's achingly hard erection had barely sprung free in all its huge throbbing meatiness when Tessa wrapped her soft lips around the big precum-slick glans, taking that huge pole into her mouth with a slutty, slurping mewl of appreciation. Eagerly pushing her face down on his veiny shaft, Tessa sucked inch upon thick inch of her ex's monstercock into her mouth, making Nick grunt with pleasure as the liquid heat of her oral cavity gradually spread along his pole, until he was enveloped from tip to root inside the liquid heat of her cock-hugging throat. \n\nSpluttering and gagging yet letting a long wanton coo of satisfaction escape her dick-stretched lips, Tessa paused there with Nick's truncheon clogged balls-deep into her gullet for a few deliciously long seconds, until she felt dizzy from lack of oxygen and had to pull back, finally letting his spittle-coated dong out of her mouth so that she could take a deep gulping breath of air. It was a brief pause, and soon the kneeling brunette was bobbing her head happily on Nick's humongous schlong, sucking him off with reckless deep-throating suctions that testified to the feverish desire for his big cock she had accumulated in their short time apart. \n\nA minute of that sloppy, devastatingly pleasurable blowjob was enough to make Nick's leg tremble and send his head spinning as a powerful ejaculation already threatened to explode down Tessa's dick-caressing, deliciously slippery throat. But Tessa felt it too, and she was determined not to let it happen just yet. No matter how much she would have liked to feel her horse-hung lover flood her mouth with his creamy cum and overload her taste buds with the intoxicating flavor of his sperm, no matter how wet her pussy was getting as she contemplated the temping possibility of swallowing Nick's veiny dong to the hilt down her throat and choke on his throbbing thickness as he pumped rope after tummy-filling rope of seed into her stomach, there was was still something that Tessa wanted much more than anything else.\n\nLetting her deepest, most compelling carnal desire guide her, the pastor's daughter suddenly pulled her pretty face all the way back, making Nick's fat cock slip out of her obscenely widened mouth with a sexy, slurping pop. A slippery mixture of precum and spittle coated the full length of Nick's raging hardness and a thick rope of saliva connected Tessa's talented lips with his huge purple glans, dangling and glinting between them until she noisily sucked it up like a lewd, squishy noodle. Purring with arousal, Tessa was already pulling her shorts down her legs even as she stood up to face her panting and equally overexcited lover. While she looked up into Nick's bespectacled eyes, Tessa's delicate hands went automatically to his obscenely huge boner and her fingers encircled his spit-lathered length in a soft yet needy grip, jacking him off as she urgently said: \"Fuck me Nick! I need you in my ass so fucking bad!\" \n\nThose lust-infused words were barely out of her mouth when Tessa turned around and bent at the waist, leaning forward and resting her forearms on the porch railing while she arched her back to better offer her ass to Nick. With her shorts and panties bunched at her ankles and her big protruding bubble-butt presented to him in the most irresistible way possible, Nick didn't even have time to think of his next move, his anal thirst taking over immediately and completely. \n\nIn the blink of an eye, Nick was kneeling behind Tessa's beautifully plump booty, awestruck in rapt adoration like a true believer in the presence of his deity. The visual treat of staring at the pastor's daughter's curvaceous asscheeks jiggling softly before him in time with her panting breaths only sated Nick's buttlust for a moment though, and Tessa's soft coos of anticipation got louder as he parted her meaty buns, craving more. As soon as Tessa's holes were fully revealed, Nick let out a grunting gasp, his eyes widening at the sight of her dripping pussy and of her adorable little bootyhole, whose gummy pink rim was wrapped snugly around the jeweled base of a buttplug.\n\n\"Fuck, Tess! Holy fuck, you're so awesome!\" Nick mumbled, his heart thumping crazily as a rush of true affection mixed with blazing horniness washed over him, prompted by the realization that Tessa had preemptively lubed up and stretched out her sweet little asshole and stuffed a buttplug inside it in preparation for their reunion. Nick would have liked to praise Tessa even more for being amazing to the point of hiking through the woods with a buttplug up her ass so that she could be better prepared to be sodomized by his monstercock, but that lewd detail had just made him horny to the point that words simply wouldn't come to his mouth. Other ways to pay her homage did manifest themselves instinctively though.\n\nA long moan of sinful delight erupted from Tessa's mouth as Nick dove into her luscious butt-crack and buried his face between her soft round asscheeks, gluing his lips to her virgin, nectar-glossy pussy. While he feasted on her delicious juice-drooling folds, Nick grabbed the buttplug and played with it, teasing Tessa's greedy pucker by pulling the toy out a bit and then slotting it into her anus again. After a few back and forth taunting passes like that, Nick groaned into Tessa's wet slit and withdrew the buttplug all the way out of her forbidden hole, leaving her asshole empty, gaping and pulsating with indecent need. Unsurprisingly, it didn't stay like that for more than a few seconds, just the time needed for Nick to glory in the sight of Tessa's lovely rosebud all stretched out and winking at him, beckoning him irresistibly to fill it somehow, as soon as possible. Of course, Nick answered that call readily.\n\n\"Fuuuck! Ooowww fuck yeeeesss, Niiiick!\" Tessa squealed out, trembling all over as Nick's clit-munching mouth suddenly left her pussy and attacked her bootyhole instead, his tongue plunging easily all the way into her gaping orifice as his lips clamped onto the rubbery rim of her distended butt-ring and started slurping away.\n\nBroken moans of pleasure tumbled from Tessa's O-shaped mouth as she leaned forward more heavily on the railing and stuck her plump ass out with wanton desire, her whole curvy body alight with bliss as the obscenely good sensation of getting her butthole tongue-fucked overwhelmed her. It had only been a couple of days since she had last gotten her ass eaten out by Nick, but still she had missed it so much, she had missed him so much, that even if what she truly, achingly wanted right there and then was to feel his monstercock forcing its way deep, deep into her bootyhole, Tessa just couldn't bring herself to tell Nick to stop his aggressive, orgasm-triggering oral worship of her pink little orifice.\n\nAfter the swift but effective tonguing her clit and pussy had just received, with all her bottled up horniness finally allowed to run as free as her incessantly dripping juices, Tessa found herself panting and screaming out in orgasm in no time at all while Nick's ass-prodding rimjob went relentlessly on. Her hands gripped the railing and her eyes rolled back in her head as a stabbing climax struck her full force, making her asshole clamp around Nick's wiggling, deeply embedded tongue while her girlcum gushed from her pristine slit to bathe his chin in her sweet liquid pleasure.\n\n\"Oohh my god... Uuuhh fuck yeeess! Yeeaahhh Niiiick!\" Tessa yelled out, wishing only she could organize her endorphin-scrambled thoughts enough to beg him to replace his ass-poking tongue with his fat dick and sodomize her with it instead.\n\nNot that she should have really worried about that, of course. Nick needed no prompting at that point. His own and Tessa's anally focused sex drives were synced perfectly, especially right there and then, when they were both at the mercy of their mutually induced buttlust. Sucking and slurping and slobbering away all over her lovely little anus, Nick waited with his tongue pushed deep into her sphincter until the pulsations of Tessa's butt-ring relented, signaling the beginning of her descent from her orgasm. Nick experienced a flickering moment of displeasure as he reluctantly removed his tongue from Tessa's twitching asshole, but he dismissed it by reminding himself of what he was about to cram in there in its place. \n\nGrunting lustfully into Tessa's spectacular buttcheeks, Nick planted a long kiss on each fleshy globe before he pulled his face back and swiftly stood up behind her bent over and climax-ridden frame. Spreading her luscious round asscheeks apart with one kneading, greedily pawing hand, Nick exhaled at the sight of his target: Tessa's pink gaping sphincter. As his other hand grabbed his painfully hard schlong and nestled it in the girlcum-slick groove between her labia, Nick couldn't stop staring at the winking, saliva-glossy opening of Tessa's adorable asshole. \n\n\"So fucking beautiful... Holy fuck, Tess...\" Nick mumbled, barely realizing he was speaking, yet instinctively humping his meaty horsecock back and forth along the soft outer folds of her pussy lips all the while.\n\nHis lust-thick words and the feel of his huge truncheon rubbing against her drooling slit and teasing her engorged clit sent even more delicious sparks of post-orgasmic joy throughout Tessa's body, making her head spin as she ached for more. All the while, the unbearable tingles of horniness that radiated from her maddeningly empty anus were causing her dick-starved butthole to incessantly clench and unclench in desperate need, making it look like her spittle-glossy sphincter was actually mouthing a muted prayer to be fed to full satiation by Nick's veiny cock. Finally, panting and moaning in anticipation, Tessa managed to find the lucidity to steady her voice enough to put her burning desire into words. \n\n\"Nick... Oohhh Nick, p-pleease... Uhhh! Oooowhh Niiiiick!\"\n\nThe curvy brunette's pleading invocation of her lover's name suddenly devolved into a sighing, trembling shriek of anticipation-laced delight as Nick removed his raging monstercock from the juicy cleft of her labia and placed it between her luscious buttcheeks, guiding it into her ass-cleavage until his huge purple glans was pressed against the twitching, not yet fully closed entrance of her bootyhole. As Tessa's urgent vocalizations kept rising in volume and pitch, Nick pushed forward, reading her eagerness correctly and feeling her gummy sphincter react with immediate docility to the pressure of his broad precum-leaking cockhead. Easily, with lust-inspiring willingness, Tessa's butt-ring dilated and relaxed around Nick's prodding glans, letting him pop into her orifice with barely any resistance. \n\n\"Oh fuck, Tess! You're so tight... So good... So fucking good!\" Nick moaned, shaking with bliss as his fat knob plunged slowly but surely deeper into his ex girlfriend's slippery anus, coaxing louder and even sexier mewls from her mouth. \n\nHis hands were grabbing possessively onto her plump booty, kneading and caressing her fabulously round buttcheeks even as he held them apart so as to have a perfect view of his large, juice-coated shaft disappearing into her obscenely dilated sphincter and being greedily gobbled into her asshole, inch after throbbing hard inch. The feel of sliding once again into Tessa's beautiful ass hit Nick more powerfully than he expected, egging him on in his butt-stuffing progress as much as her broken yet clearly appreciative moans did. \n\nAs he felt her anal walls widening around his ass-drilling glans and then engulfing his relentlessly advancing truncheon in the snug, steamy softness of her welcoming chute, Nick marveled yet again at the clear and intense sense of completeness he got from slotting his boner inside Tessa's spectacular bubble-butt. She could take him up her ass so well and so easily despite the beautifully indecent contrast between the massive meaty hugeness of his dick and the cute, delicate smallness of her tiny orifice. As big as her epic booty was on the outside, her anus always felt so amazingly tight, so hot and clingy around his shaft, that a sense of renewed wonder pervaded him at their every new anal coupling. \n\nWhile his bespectacled eyes drank in the ever satisfying sight of the last thick inch of his dong disappearing into the overstretched ring of Tessa's rosy sphincter, with his whole rectum-cramming horsecock immersed inside the warm rippling snugness of her forbidden passage and nothing but his big cum-filled balls left outside her ass, Nick couldn't help but think the same thing he had thought every single time he had buttfucked Tessa, ever since he had popped her anal cherry. 'This is it. This is where my dick belongs. Deep inside this perfect ass. God, I love her.'\n\n\"Uuhhh fuck yyyeess! Uuhh Niiiick... Oh my fucking god, yeaahhhh!\" Tessa wailed deliriously as her fully dick-packed anal tunnel squeezed and released around his gush-inducing thickness, tugging on the ass-delving length of his schlong from tip to root and thus making Nick's fingers sink more greedily into her fleshy booty, his grunts of pleasure meanwhile coming raspier and quicker by the moment. \"Ooohh my god, Niiiick! It's sooo good... You're so deep in meeee... Your cock is sooo big uuuhh fuuuck... I love it! So hard and fucking biiiiig! Uuuhhh fuuuck meee!\"\n\nUnannounced yet very much welcome, a blinding climax crashed into Tessa right there and then, sending her rectum into more potent spasms and smashing her words into scattered yelps of anal bliss. Trickles of girlcum drenched Nick's beefy pussy-bumping scrotum and his knees shook from the rush of pleasure he was getting thanks to the cock-suctioning squeezes that Tessa's smooth, climaxing rectum was treating him to as she rode out that sudden toe-curling assgasm. Dreamily, Nick wondered if Tessa's last semi-coherent sentence before she started wailing in delight was an actual exhortation addressed at him to fuck her or instead a general 'Fuck me!' exclamation of surprise caused by the suddenness and power of her climax. Through the haze of his pleasure and simmering buttlust, Nick found himself grinning about his own propensity to dwell on weird, sexy dilemmas like that one while he was balls-deep inside his awesome ex girlfriend's ass. ",
        "As his smile broadened by the second and his overswollen dick pulsated with butt-stretching horniness deep inside Tessa's narrow rectum, Nick leaned down until his chest was draped over Tessa's arched back and he could kiss her panting O-shaped mouth. A wild smooching frenzy possessed Tessa in turn, fueled by the fact that, after wrapping his arms around her in an affectionate embrace, Nick's hands reached under her shirt and set her big fleshy boobs free from her push-up bra, so that he could paw away at them to his heart's content. With her ass jammed to the limit by his enormous dong while her tits got hungrily massaged and her nipples teasingly tweaked by his long deft fingers, Tessa couldn't seem to stop letting out sexy kiss-muffled moans into Nick's mouth while they made out with sloppy excitement. \n\nHer climax didn't seem to want to abate either, its aftershocks morphing into sizzling ass-centric mini-orgasms that only made her virgin pussy leak more profusely all over his huge balls. Still, the relative quiet of those delicious rolling wavelets of anal bliss only lasted until Nick started actually moving his humongous boner back and forth inside her sensitive, cock-crammed asshole. \n\nHis first motions were cautious and slow, a mere stirring of his horsecock within her warm, slippery anal depths intended to test her readiness and willingness for more with a few shallow in and out strokes. The very fact that Tessa was already too far gone to actually speak and only responded by nursing harder on his tongue and moaning louder into his mouth already gave Nick a clear enough answer. On top of that, the slickness of her chute and the pliant way in which her velvety soft anal walls had widened and molded eagerly around his length to fit him snugly while allowing his dong to move inside her anus did the rest. \n\nReading all those signs and drawing the obvious conclusion that Tessa was absolutely ready to be buttfucked, Nick seamlessly picked up his pace, adding force and length to his thrusts as he accelerated the tempo. Only a few panting and breathlessly smooching moments passed before he was bucking his hips at full speed, pumping his huge butt-stuffing schlong hard and deep into Tessa's overstretched little asshole, plowing her booty with a rabid passion that matched the joyous lust she expressed in her tongue-sucking, intense kisses.\n\nGripping firmly onto the wooden porch railing, relying entirely on it and on Nick's hugging arms to prevent her increasingly limper frame from crumpling down like a pleasure-stricken rag doll, Tessa let herself melt away into the blissful haze of delight caused by the steady, balls-deep thrusts of her lover's monstercock plunging relentlessly into her horny, oversensitive rectum. To that day, the pastor's eldest daughter was yet unable to exactly tell if her all-encompassing, full-body ecstasy in getting assfucked by Nick came just from the delicious mix of oily friction, meaty pressure and insane fullness she felt deep inside her forbidden hole whenever he vigorously sodomized her like he was doing right there and then, or if it was the forbidden kinkiness and sinful naughtiness of being a genuine anal queen that allowed her to enjoy buttsex so much. Or maybe, Tessa often wondered, it was the fact that she was willingly giving up control and surrendering herself completely to someone she truly loved and absolutely trusted that added the special spark to the always intimate and unfailingly intense anal couplings she shared with Nick. Whatever it was, Tessa couldn't get enough of it. \n\nTo signify her appreciation of Nick's energetic ass-pounding, Tessa used what little strength she could muster to push her voluptuous bent over body back to meet at least in part his frenzied booty-slamming thrusts. In truth the petite brunette only managed to gently rock and shake her bouncy bubble-butt, increasing the mesmerizing jiggly ripples that animated her plump asscheeks whenever Nick's furiously pumping hips clapped against them, but he still perceived her willingness to participate in their sodomy, and he reveled in her slutty need to be thoroughly buttfucked. \n\nAs Nick's enormous dong kept flying in and out of Tessa's deliciously tight asshole, drilling balls-deep into her dick-squeezing rectum only to then slide out almost all the way before plunging back in desperately hard and deep and fast, cramming its massive thickness all the way into her twitching anus again, the two lovers stayed locked tightly together, his body covering hers, her petite curvy frame bent over and pinned against the wooden railing in a pose of eager, glad submission. As Nick kept pounding away faster and harder into Tessa's big juicy ass, setting a merciless sodomizing rhythm marked by the fleshy slapping impacts of his groin hammering non stop into her pillowy rump, their torrid make out session didn't cease, but became more and more frequently interspersed with loud moans that resound even brighter in the quiet, fresh mountain air of that balmy summer afternoon. \n\n\"Oohh Niiiick! Yeees, baby, uuhh yesss... Deeper, deeper! Uuuunghh yeeeahh...\" Tessa squealed deliriously whenever a particularly violent anal climax hit her, sending her rippling rectum into a fit of warm, erratic dick-squeezing spasms that in turn fueled Nick's arousal even more, thus causing him to further accelerate his rump-riding pace. \"Uuuh babyyyy, yesss! I love it... Fuck my ass harder! Harder, Niiiick... I fucking love iiiit! Uuhhh fuuuuck yeaahh...\"\n\nFor his part, Nick was so far gone into the realm of total unrestrained buttlust that, whenever he pulled back from Tessa's sweet smooching mouth to take in a big breath of air, he could only obsessively mutter the name of his incredible anal princess, whose heavenly little asshole he felt lucky and blessed to be allowed to fuck, and whose petite curvy body he was ready to hold snuggled in his arms indefinitely.\n\n\"Tess! Oohh Tess... Tess, uuh fuck, Teeess!\" Nick grunted at intervals as he keep wildly kissing her slack, incessantly mewling mouth, all the while savagely thrusting his huge cockmeat as deep as possible into her warm, snug rectum. \"Aahh Tess, fuuuuck!\" \n\nRemoved from the world and joined as viscerally together as only two perfectly matched lovers could ever hope to be, Nick and Tessa lost track of time as they rutted away like animals. Nothing seemed to matter to either of them except for the rigid length of his cock pumping recklessly in and out of her butthole coupled with the warm, soft snugness of her eager anus engulfing his enormous truncheon over and over again, happily accepting his every brutal thrust and welcoming each powerful balls-deep plunge of his ass-cramming tool like the breathtaking, gush-inducing gift that it was. \n\nIn truth, what felt to the lovers like an indefinite lust-clouded span of time was just a mere handful of minutes, which wasn't too surprising given how horny Nick was and how close he had already been to blowing his load down Tessa's constricting throat earlier. Still, neither of them cared. Tessa in particular enjoyed that primal sodomy with complete abandon, surrendering not just her twitching little sphincter and her gorgeous body, but indeed her whole being to her skilled, beloved buttfucker.\n\nThe meaty pressure of Nick's massive, throbbing hard truncheon sliding slickly against the walls of her narrow chute made Tessa's head spin and her toes curl, triggering assgasm after sizzling assgasm in a mercilessly pleasurable cascade of anal bliss. Not for the first time, Tessa realized how intensely and genuinely she loved the mix of butt-cramming fullness and oily friction caused by the relentless balls-deep thrusts that Nick was imparting on her bootyhole; she wasn't even touching her clit and her pussy was gushing non stop nonetheless, and all thanks to Nick's rampaging horsecock furiously assfucking her. Still, even through the haze of her mindblowing back-to-back anal climaxes, Tessa trembled in anticipation when a bigger and immensely more intense rumble of incoming pleasure started to manifest itself through the potent tell-tale pulsations of Nick's pistoning schlong swelling harder and bigger inside her deeply plowed ass. \n\nThe fleshy beat of his hips slamming without pause into her bouncy bubble-butt had reached such a high tempo that Nick felt like his hips couldn't work at any higher speed or force, each impact into the jiggly plumpness of Tessa's epic booty in fact blurring into the next as her fabulously round ass absorbed the rippling echoes of the previous butt-slamming thrust. Nick knew he was about to cum, but it was a vague and distant kind of awareness, one that mattered very little in the face of the present moment, a mental notion that paled in comparison to how indescribably good it felt to savor Tessa's tautly dilated sphincter sliding slickly along his whole length as he immersed himself into the dick-squeezing heat of her divinely tight anal depths over and over and over again.\n\nReduced to a grunting, mindless rump-riding caveman, further incited in his savage ass-wrecking rampage by the symphony of squeals and moans that Tessa let out to signify her manic pleasure in getting her adorable little butthole thoroughly owned by his enormous schlong, Nick howled into the pastor's daughter's wildly smooching mouth all through the last furious thrusts of his final booty-plundering barrage. His huge swinging balls were dripping with the incessant trickles of girlcum that gushed non stop from Tessa's virgin pussy and his raging monstercock was overswollen and throbbing wildly inside the buttery, shaft-enveloping tightness of her quivering rectum as Nick's ejaculation finally rushed forth along his pistoning dong, coaxing from his growling mouth the only word his rational brain was still holding on to, clear and dear as always.\n\n\"Aargghh... Teeeess! Ooohh Tess... Tess, Teeesss, TEESSSSS!\"\n\nAs soon as the first huge, ass-flooding burst of cum exploded inside her deepest anal depths, the gigantic wave of pleasure looming over Tessa crashed into her with the same toe-curling force of the massive blasts of warm seed that were shooting from Nick's booty-jamming dick straight up into her conquered little asshole, painting her sizzling anal walls white with a deluge of his thick, pearly ejaculate. Within moments Tessa was seeing stars and the shrill scream of ultimate pleasure that had started tumbling out of her O-shaped lips died there, her voice squashed into muted ecstasy by the detonation of butt-centered bliss that enveloped her soft curvy body as Nick's monstercock kept inundating her snug chute in an uninterrupted spray of creamy, soothing sperm.\n\nThe intensity of his orgasm was so incredible that Nick almost passed out. His legs buckled and his head spun crazily as his flexing horsecock unloaded his humongous load deep inside Tessa's glorious ass in a torrential, geyser-like surge of semen that surprised even him with its power and volume. Draped over her voluptuous little frame, Nick's tall wiry body shivered in time with the convulsing pulsations that coursed through his swollen rectum-cramming dong, whose meaty thickness was in turn being tugged and squeezed and milked by the steamy, velvety smooth snugness of Tessa's climaxing anal walls. \n\nThrough the dizzying haze of their shared anal bliss, the lovers stayed locked tightly together, their lips brushing and joining for yet more dazed kisses. The amazement they shared in reaching such heights of pleasure together was indescribable, it could only be expressed through the gasping, broken sounds that emerged from their smooching mouths. All the while, despite his general state of incapacitating orgasmic stupor, Nick's hips kept mechanically bucking, albeit slowly and weakly, so that his cum-spewing monstercock kept sliding shallowly in and out of Tessa's dick-nursing asshole while still pumping cum into her rippling, seed-milking chute, until the throbbing of his veiny shaft finally subsided and his rectum-hosing ejaculation petered out to a dribble of dense creamy globs. \n\nAt that point, as the brain-numbing fog of his climax lifted to let the softer buzz of the afterglow settle in, Nick straightened up and unlocked his arms from around Tessa's still trembling frame, letting go of her jutting boobs to rest his hands on her big round asscheeks. Huffing and puffing, Nick lovingly kneaded the dick-impaled brunette's majestic booty as he stared down with a dopey grin at the ego-boosting sight of his fat dick buried to the hilt inside her distended little butthole, framed between the meaty fullness of her fabulously plump buns. Gently, as he waited for Tessa to emerge from the last aftershocks of her mighty assgasm, Nick found himself automatically rocking back and forth against her pillowy bubble-butt, letting barely an inch of his massive length slide in and out of her seed-flooded anus as he savored the way her snug and still erratically rippling anal walls squeezed the very last drops of his humongous load out of his ass-clogging schlong. \n\nWhen Tessa finally found the energy to raise her upper body a bit and steadily plant her hands on the porch railing, she instinctively pushed her bouncy booty back against Nick's groin. Giggling and mewling with languid delight, the pastor's daughter arched her back as she expertly contracted her anal muscles around her lover's deeply sheathed dong, coaxing a throaty groan from him. Still gathering her wits, Tessa finally blinked and shook her head, sending her long ponytail whipping side to side as she let out a long satisfied sigh and turned her head to look over her shoulder at Nick. Her face was radiant with post-orgasmic joy and a broad smile danced on her lips as she spoke with relaxed, sensuous calm.\n\n\"Oh my god, baby, that was awesome! I'll never get over how big you are and how deep inside me you reach... Not to mention how much you cum!\" Tessa said with a silvery laugh, before adding: \"Thanks, Nick, I really needed that!\"\n\n\"No, thank you, Tess. I mean it,\" Nick replied, adjusting his glassed with one hand while the other stayed possessively glued to her plump, juicy rump. \"I had dreams about your ass every night these last couple of days. That's how much I missed it. Well, I mean, how I missed you.\"\n\n\"I missed you too, and especially your big fat dick,\" Tessa purred in response, squeezing her seed-slippery anal chute tighter around his massive pole. Then, exhaling and scrunching her adorable face in a displeased pout, she said without conviction: \"I should probably get going now... Can you put the buttplug back in when you pull out? I wanna feel all that creamy cum of yours deep in my ass until I come back tonight...\"\n\nNodding somewhat resignedly as he let got of her beautiful ass to grab the tapered toy, Nick slowly and reluctantly withdrew inch after veiny inch of his huge dickmeat from Tessa's creamy chute, until her mewling groan mixed with the lewd slurping sound of his large purple glans popping out of her overstretched sphincter filled the air. Despite having just pumped a bucketload of cum inside the pastor's daughter's sweet ass, Nick's schlong was still ragingly hard and he was still more than horny enough for another round, especially now that Tessa's cozy anal depths had been plowed into fitting him perfectly and had also been thoroughly lubed by his overabundant ejaculation. On top of that, the sight of her rosy, obscenely gaping asshole all glossy with the first dense rivulets of his freshly deposited load starting to leak from the steamy depths of her rectum fueled Nick's unquenchable buttlust even more, making him wish she could stay longer. \n\nHis lascivious thoughts of suggesting another quick anal romp were interrupted when he saw Tessa trying to stand up straight only to have her legs give out under her. Catching her in his embrace even as she braced herself against the railing again, Nick held Tessa tightly from behind, his hands going for her huge boobs as his cum-lathered sausage nestled itself snugly between her plump round asscheeks. \n\n\"Whoa! Too soon, I guess... My head is still spinning like crazy!\" Tessa chuckled, looking up into Nick's inquisitive eyes, noticing the spark of desire shining behind his glasses. \n\n\"Sure you can walk?\" Nick asked, half concerned yet half glad that Tessa was clearly still climax-weakened enough to have to delay her departure, at least for a while. \"Maybe we should go inside so you can chill a little,\" he continued, gently caressing her huge tits and trying not be too obvious about his desire to keep fucking her beautiful ass, even though the flexing of his massive erection hotdogged between her jiggly buns made his true intentions more than clear. \"I've got energy drinks and candy bars in my bags. I figured I'd need some extra fuel with all three of you here, but it looks like you could use a little bit of a boost right now too.\"\n\n\"Oh yeah, you're gonna need that stuff tonight, alright! The twins are even hornier for your dick than me! Well, almost...\" Tessa snickered knowingly. \"But sure, I'll have a snack before I go. Something milky and creamy, I think...\" she concluded with a teasing coo, shaking her fabulously bouncy buttcheeks to better snuggle Nick's thick truncheon within their soft, fleshy plumpness. Winking at her horse-hung ex, silently letting him know that she was glad to have an excuse to stay a little longer as much as he was to offer her one, Tessa grinned as she said: \"Now, how about you put that buttplug back where it belongs and take me upstairs? We could relax in bed for a while and eat candy. Or something...\"\n\nThe seductive undertones of her last word were not lost on Nick, who swiftly removed his fat dong from the cozy cleft of Tessa's ass-cleavage, slid the buttplug in place inside her winking, sperm-oozing bootyhole and then easily picked her up in his arms, eliciting a cascade of happy squeals from her smiling lips. Neither of them spoke while Nick walked into the cabin and up the creaky stairs carrying Tessa's petite curvy body while she kept her arms locked around his neck and giggled softly, but they were both thinking about the obvious fact that he was carrying her like a groom would carry his bride across the threshold.\n\nOnce in the bedroom, Tessa didn't even bother to look for treats in Nick's bag and instead instructed him to sit back on the bed as she lay on her tummy between his legs. The pastor's daughter couldn't help but lick her lips in languid anticipation as she crawled closer and closer to the meaty, massive thickness of Nick's pole sticking rigidly up, all shiny with cum. Letting out a hungry mewl, Tessa glanced up into her grinning lover's bespectacled eyes as she grabbed the broad base of his dong in her delicate hands, opened her mouth wide and wrapped her gorgeous lips around his huge seed-slick cockhead. \n\nA sexy mix of wet suckling noises filled the room as Tessa proceeded to give Nick a loving blowjob made of cum-scooping tongue swipes and slurping smooches along the shaft interspersed with long intervals of intense glans-nursing suctions. By the time Tessa had licked up and swallowed down every last bit of seed coating Nick's impressive length, he was achingly hard all over again and the groggy, pleasure-dopey expression on his face was even more eloquent than his delighted moans when it came to clarifying just how amazingly good Tessa's oral skills were.\n\nRabidly horny herself, the pastor's daughter turned the heat up another notch by pushing her big beautiful tits forward, so that the base of Nick's shaft was nestled within her luscious cleavage. At the same time, she shifted from bobbing her face on his dickmeat at a wantonly aggressive pace to a fluid, insanely hot deep-throating cadence that made him clench his fists around the bedspread and throw his head back in howling delight. Grinning with slutty self-congratulatory pride around Nick's mouth-cramming sausage, Tessa reached a hand underneath her curvy body and started rubbing away at her wet virgin slit, while with the other she languidly stroked the saliva-glossy inches of his boner that weren't either snuggled cozily between her fleshy melons or immersed in the liquid heat of her shaft-enveloping oral cavity.",
        "Moaning as she enjoyed the grunting vocalizations that Nick made as he gawked in awe at the priceless picture created by the combination of her cock-stretched lips sliding along his dong, her tiny hand pumping his veiny girth and her pillowy tits wrapped around the lower half of his shaft, Tessa couldn't help but giggle inside as she noticed how her ass-obsessed lover's gaze still kept straying toward her big juicy booty, whose plump roundness lay fully exposed to his stare now that she was lying down on her tummy. Always happy to notice that Nick's passion for her big bubble-butt was burning ever hotter, Tessa decided to further tease Nick by kicking her feet up in the air, attracting his attention to the soft jiggling ripples that her motions instilled in her luscious buns. \n\nGiven how swollen his schlong already was and how close she had already brought him to his climax with her devastating sucking/stroking/tit-fucking combo, Tessa couldn't entirely be sure if it was that little butt-centered show of hers that did it, but within moments Nick's fat sausage started throbbing violently between her boobs, his huge glans pulsating and swelling in her suckling mouth to signify his imminent ejaculation. A thrill of anticipation ran through the pastor's daughter's curvy body as she intensified her deep-throating plunges on Nick's massive pole while also accelerating the clit-frigging motions of her fingers on her drooling pussy.\n\nMuch to Tessa's delight, Nick's growl of release and the spray of dense seed that flooded her oral cavity preceded her own orgasm by a matter of heartbeats. The unique and always intoxicating taste of her lover's potent cum inundating her mouth instantly empowered Tessa's climax, making her digits circle her clit faster with every big warm jet of sperm she felt splashing into her gullet. Her girlcum-slick love button pulsated crazily under her frenzied fingertips as Tessa kept gulping down mouthful after heady mouthful of Nick's huge load, her cock-muffled mewls mingling with his ecstatic grunts while the bedspread underneath her crotch darkened from the widening puddle of her gushing girlcum steadily drenching the fabric. \n\nSucking and swallowing with wanton gusto, Tessa kept Nick's fat horsecock engulfed in the liquid heat of her talented mouth until she had drained his huge balls of every last drop of cum they held, and even then, when she slowly let his veiny shaft slide out of her gorgeous lips, she did so with reluctant slowness, finally planting a long cheek-hollowing parting kiss on his fat purple glans that made Nick writhe in pleasure and sigh his wordless appreciation of her dick-worshiping skills. As he reclined against the headboard, panting and grinning at her as he pushed his glasses back on his nose and blinked his orgasm-clouded eyes at her in disbelieving adoration, Tessa opened her mouth to show Nick how his last mouthful of cum still coated her palate and submerged her tongue, saturating her taste buds with his unique flavor. After gulping down that final creamy treat with and exaggeratedly slutty swallowing sound, Tessa smacked her lips in lewd appreciation and giggled before speaking.\n\n\"Okay, now that I ate my snack I'm ready to go back to camp!\"\n\nTheir mingled chuckles filled the room and their happiness lingered even as Nick rummaged in his bag to get an energy drink, which they shared immediately, and one of Tessa's favorite candy bars, which she took with a nod and an appreciative smile. Once they were fully dressed again, they joked and chatted briefly on the porch, planning ahead for the incoming night's fun and getting excited all over again. Sensing that if she didn't leave right there and then she would be offering Nick her ass to plow hard and deep again within moments, which would make her absence from camp even more blatant than it might already be, Tessa shook her pretty head and stood up on her tip toes to plant a quick smooch on Nick's lips before taking her leave with a silvery laugh that trailed behind her as she scampered across the clearing toward the woods.\n\nWith a tummy full of cum and her favorite chocolate candy bar in her hand, Tessa turned and waved Nick goodbye as she made her way into the tree line and took the path that would lead her back to camp. On the cabin porch, Nick looked at her dreamily as he waved back, his eyes registering how her adorable face seemed to shine in the late afternoon sun, his attention caught by the swishing side to side motions of her ponytail. Most of all though, as Tessa walked away, Nick's stare lingered on the mouthwatering, jiggly undulations of her plump asscheeks straining against the booty-hugging fabric of her shorts while her luscious bubble-butt swayed deliciously with her every step, until she finally disappeared into the dusky forest and he was left with a bunch of afterimages and fresh memories of their latest anal romp.\n\nThose thoughts and the anticipation for the buttfuckfest that would surely ensue once Tessa and the twins returned later that night brought a huge grin to Nick's face, putting a spring in his step as he headed back inside the cabin. All of a sudden though, an unexpected realization hit him, stopping him dead in his tracks and forcing him to blink his eyes and tilt his head in disbelieve as he tried to focus on the abrupt epiphany he was having: Tessa's silver ring was gone. The promise ring her current dumbass boyfriend had given her had not been on Tessa's finger that day, or at least Nick hadn't noticed it, not even once.\n\nFully lucid now that he had let some of his accumulated buttlust loose, stunned by the sharp clarity with which that random thought had hit him, Nick scrutinized his sudden realization with the sharp and methodical rationality of which he was capable, going through key moments of the time he had just spent with Tessa to conjure up any mental image involving her hands that could prove or disprove his initial hypothesis. After carefully examining his recollections, Nick couldn't identify one single moment when he remembered seeing the ring on her finger. It simply hadn't been there: not when she had jacked off his schlong two-handed, not when she had pressed her pillowy boobs around his shaft with her dainty hands, not when she had grabbed hard onto the porch railing to withstand his relentless booty-pounding rampage, not when she had thrown her arms around his neck to be carried inside, and not when she had added the soft touch of her cock-wrapping fingers to her ultimate blowjob and titfuck combo.\n\n\"Tessa isn't wearing her promise ring anymore...\" Nick murmured dreamily to himself, turning to cast a far-away look at the trees bathing in the warm light of the afternoon sun. His smile was broader and goofier than ever, his dick flexing in his pants and his heart beating faster as he felt a rush of joy and anticipation course through him. \n\nNow even more than before, Nick couldn't wait for the night to come and bring Tessa back to him."
    ],
    "authorname": "ZenZerker",
    "tags": [
        "anal",
        "ass to mouth",
        "oral",
        "sisters",
        "group sex",
        "anal creampie"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/loopholes-ch-03"
}