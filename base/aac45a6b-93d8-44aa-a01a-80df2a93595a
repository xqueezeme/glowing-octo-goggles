{
    "title": "Women's Studies Ch. 13",
    "pages": [
        "\"Not this again,\" Abigail sighed. \"What happened to being patient and waiting until the time is right?\"\n\n\"I have waited, and the time is right,\" Kennedy said flatly.\n\n\"I still think we should wait,\" I said. \"Do you know how long something like this takes?\"\n\n\"Yeah, I know exactly how long it takes,\" Kennedy said matter-of-factly. \"I timed it.\"\n\nIt seemed that our divergence of Kennedy's fixation was coming to an end. Ever since I had painted the keypad to the Assistant Dean's office with clear nail varnish, Kennedy had been asking when we could go back in and find her file.\n\nPersonally, I couldn't fathom the full degree of her obsession. I knew both of my own parents, and neither one of them was much to brag about. My dad split when Audrey and I were kids, and I didn't know if I could blame him. Our mother wasn't any great catch, and growing up in that house had been horrible. If I'd had the option to leave earlier, I would have probably taken it. With Kennedy's dad, she didn't have the luxury of knowing.\n\nThe way she described it, there was this whole part of her that was like a black void; a hidden piece of her that she knew nothing about. She'd been searching for her father since she was a preteen, and coming to Mayweather was the closest she had ever gotten. But being this close, and doing nothing, was driving her up the walls.\n\n\"You timed it?\" I asked flatly.\n\n\"Yes. I used some polish on the end of one of my pens and clicked away,\" she smiled victoriously. \"It took just under four hours to notice the difference.\"\n\n\"You clicked a pen for four hours?\" Abigail asked.\n\n\"Yes, and I had the cramped hand to prove it,\" she replied, rubbing at her thumb subconsciously. \"Come on Lexi, it's been months since you painted them. We're good to go!\"\n\nI knew she had put a lot of work into her argument, but I had to disabuse her of her theory.\n\n\"How many times did you click the pen?\" I asked.\n\n\"What?\" Kennedy asked. \"I don't know. I just clicked it. Why?\"\n\n\"How many times do you think he punches in his code a day?\" I asked, her stare flat and uncomprehending. \"Let's go big and say fifteen or twenty,\" I paused to let it settle in. \"That's fifteen or twenty button presses in a single day. It's been almost four months, so let's say a hundred days. He's not in the office on weekends. On the outside, that's two thousand button presses,\" I continued. \"If you clicked that pen once every second for an hour that's...\" I thought for a second, \"thirty-six hundred presses. At four hours, it took you well over ten thousand to make a dent. Now tell me I'm wrong.\"\n\nThe longer I did the math for her, the longer her face grew.\n\n\"You're telling me I'm going to have to wait until next year?\" Kennedy sighed.\n\n\"No,\" I reassured her. \"I wouldn't do that to you. Before school gets out for summer.\"\n\n\"But by your math, that's still not enough time,\" she said, looking defeated.\n\n\"You did it on a fresh coat of paint,\" I explained. \"He's working on polish that is becoming more and more brittle with each passing week. Eventually it will start to flake.\"\n\n\"Where do you come up with this stuff?\" Abigail asked looking at me curiously.\n\n\"I don't know,\" I blushed. \"I just know that the longer I wear nail polish, the faster it chips away.\"\n\n\"You know it sucks when you're all smart and shit,\" Kennedy huffed, plopping back down on the bed. \"I can't stand the waiting. It's going to be all I can think about.\"\n\n\"I wish I could stay and help you get your mind off of it, but I have a class to get to,\" I said as I pulled on a cute white floral sun dress. It was a new addition to my wardrobe since coming back from spring break, and I adored it, especially the way it showed off the swell of my breasts. \"I'm sure if you ask sweetly, Abigail might offer her attentions,\" I mused knowingly.\n\n\"Abigail?\" Kennedy turned to her sweetly. \"Do you want to lick my box?\"\n\n\"Well, when you put it that way!\" Abigail laughed.\n\nI couldn't help but laugh myself as I grabbed my book-bag and headed out.\n\n\"Oh, Lexi!\" Kennedy stopped me with my hand on the door. \"I have a little surprise for you tonight,\" she winked.\n\n\"Can't wait,\" I smiled.\n\nIf I was sure about anything, it involved sex, and most likely something in my ass; I definitely wasn't going to complain though. The last glimpse I saw of them as I closed the door behind me, was of Abigail tugging down Kennedy's panties from under her skirt. I felt a little tingle in my ass and a small surge of blood to my cock. I would've loved to have watched, but I couldn't afford to miss any classes.\n\n*** *** ***\n\nIn the midst of a nice cool winter, I had forgotten what real heat felt like. We had been back from sunny Cancun for over a week now, and in just the ten-minute walk to class, Arizona already felt worse. A huge downside was not being able to walk around all day in a bikini. Also, no easy access to bodies of water to cool off in.\n\nWith the rising desert heat came sweat, and that was how I found myself in the showers in the middle of the busiest time of the day, soaping up in one of the stalls. My anxiety about using the showers when anyone else was there had been waning. It started happening around the time I got my breasts. I didn't know if those fleshy orbs gave me a sense of belonging now, or if the loss of my breast forms had something to do about it. Whichever it was, I had become a lot less inclined to wait and shower at odd hours when nobody was around.\n\nAs I soaped up my body, I could hear laughter and voices just on the other side of my door from the girls using the open showers. This was only the fourth time I'd been in here during the middle of the day, and I could swear it was a party. Over a dozen girls chatting and goofing off under the spray, talking about their own body's, and each other's. Everyone was joking and having a grand ol' time. They all seemed so relaxed, being completely exposed to one another.\n\nIt was something I wished that I could be a part of, but I knew that I couldn't. I would've had no objection to showering with them, but I was still a secret, and I doubted they would have been thrilled to see what I had dangling between my thighs right now.\n\nIt wasn't as depressing as it sounded. I didn't ache to be out there, one of them. It just would have been nice, a refreshing openness; something I had sadly left behind in Cancun.\n\nFully clean once again, I shut off the water and dried myself. Afterward, I slipped on a pair of panties and tucked myself away. With my towel wrapped securely around my breasts, I walked out.\n\nThis was something I loved; my cleavage popping out over the top of my towel and my long smooth legs exposed as I walked back to my room. This bravery, I knew where it came from, and it was my breasts. I passed a few girls on my way, and saw them glancing at me, at my legs and breasts. It wasn't sexual, just an observation of my form. Well, one of those glances might have been a little sexual. I think Kennedy might have turned me into a little bit of an exhibitionist.\n\nBack in our room, I found Kennedy and Abigail still in bed. They were both completely naked on top of the covers and fast asleep. Our room smelled like sex. Well it always smelled like sex, but this was fresh sex. I closed the door quietly, so I didn't wake them, and breathed deep, enjoying their smell.\n\nWhile they dozed, I traded my towel for a tank top and got started on some homework in my panties.\n\n*** *** ***\n\n\"So, are you going to tell us where we're going tonight?\" Abigail asked Kennedy.\n\n\"Not a chance. I told you, it's a surprise,\" Kennedy smiled.\n\n\"How about a hint?\" she pressed as she flipped through the clothing in her closet. \"I need to know how to dress.\"\n\nIt was nearly nine o' clock at night. The girls eventually woke up and went for their own shower, but now that they were back, it was time to get ready. It turned out my surprise didn't involve sex.\n\nKennedy thought for a moment before smiling mischievously. \"Slutty.\"\n\nMaybe I spoke too soon. Sex very well could be involved.\n\n\"You're not taking us to a street corner, are you?\" I asked, actually liking the idea of a slutty night out.\n\n\"Or a strip club?\" Abigail added.\n\n\"No, but that last one does sound like fun,\" Kennedy grinned.\n\n\"So, dress slutty?\" I asked, finally putting my book away. \"That's all you're going to tell us?\"\n\n\"And cute,\" she added with a tilt of her head. \"Slutty and cute.\"\n\nWith only those clues at hand, I thumbed through my wardrobe. Slutty and cute was definitely a look I could pull off. Hell, that was right in my wheelhouse. It took very little time for me to decide what to wear. Once I caught a glimpse of the red pleated flannel, I knew I wanted a slutty schoolgirl look.\n\nThe skirt I borrowed from Kennedy was dangerously short. Once I sat on the bed to slip on my heels, and I felt my bare bottom resting on the mattress, I knew I would have to be exceedingly careful not to bend over tonight. I left my white short sleeved blouse unbuttoned to show off the cleavage in my barely-there black bra. After some smoky makeup and straightening my hair (which now fell well beneath my shoulders), I was ready for Kennedy's night of surprises.\n\nKennedy went bra-less in a tiny black mini-dress, and I wondered if she had forgone underwear all together. The fabric was so thin and tight, and I couldn't see a single line that God hadn't given her.\n\nI thought we would have to press Abigail to go a little sluttier with us, but no, she had been slowly changing over the last few months and had accepted the challenge with gusto. She wore a short emerald green halter top dress that left her back fully exposed and had a dip in the cleavage that exposed a couple of inches below her breasts. There was also a slit up one side that reached the top of her hip bone and showed off a good portion of the side of her ass.\n\n\"Wow!\" Kennedy laughed, holding a hand to her lips in surprise when Abigail finally slipped into her dress.\n\n\"Is it too much?\" Abigail asked, twisting and leaning in front of her mirror. \"I could go with something less.\"\n\n\"Something less?\" I asked jokingly. \"Like your panties?\"\n\n\"Don't listen to her, you look hot!\" Kennedy said excitedly. \"Where did you get that dress?\"\n\n\"I got it about two months ago, but haven't had the nerve to wear it yet.\"\n\n\"What changed your mind?\" Kennedy asked.\n\n\"I don't know,\" she said, admiring herself still. \"Maybe I just want to be looked at.\"\n\n\"You'll get plenty of that,\" I smiled.\n\n\"Now I feel over dressed,\" Kennedy said, looking at her own dress.\n\n\"Trust me, you look good enough to eat,\" I told her.\n\n\"Promise?\" she asked, trailing a finger down her cleavage seductively.\n\n\"Tell us where we're going?\" I bargained, stepping close and letting my hand slide up her thigh teasingly.\n\n\"Not a chance,\" she laughed.\n\n\"Then I guess you'll have to wait and see too,\" I quipped, snatching my hand away.\n\n\"Ouch,\" Abigail laughed. \"This better be a hell of a surprise, or you might be stuck with your hand tonight.\"\n\n\"Oh, I think you guys will like it,\" Kennedy smiled, bending over to grab her clutch from the bed.\n\nKnowing exactly how wasted we might be getting tonight, we called our friendly Uber driver, Todd. Ever since Kennedy turned Abigail gay in his back seat, he came when we called. The ride was a little long, and we were in a part of town I had never been to before, but that didn't really say much, Phoenix was a huge city. It looked like we were in an industrial area, and every place we passed seemed closed except for one.\n\n\"Prism?\" Abigail asked as we got out of the car in front of the club. \"You're taking us to a gay bar?\"\n\n\"Why not?\" Kennedy asked. \"We certainly qualify,\" she said giving my ass a squeeze under my skirt as she leaned over to kiss Abigail on the cheek. \"I thought this might be a nice way to have a night off...for all of us,\" she continued, giving me a significant stare. \"Everyone here, is here for the same reason. I figured this is one place none of us would have to hide anything.\"\n\nWith Kennedy's words, I knew that this was all for me. She was right, we all fit the bill for admission, but Abigail and Kennedy were already well and truly out of the closet. Kennedy found this place for me as a potential get-away. A spring break at home, if you will. I loved her for it.\n\nI'd been so scared of being myself at the beginning of spring break, but by the end I had been dreading going back into hiding. Kennedy must have noticed and taken it upon herself to cheer me up.\n\n\"I love you!\" I smiled, pulling her into a big hug.\n\n\"Does this mean I won't have to service myself tonight?\" she asked.\n\n\"Definitely not.\"\n\nFrom outside to inside, Prism was anything but subtle; neon lights flashed as loud music pumped through the speakers, black lights were everywhere, and there were more glow sticks than you could count. If any of us were worried about being too slutty, we needn't have been. We were downright modest in comparison to most. Men without shirts on, grinding against each other, women in nothing but their underwear, or less for the ones with their clothes literally painted on. Both men and women scantily clad dancing on the bar. It was a rave, just a few miles from the heart of downtown Phoenix.\n\nI had never been to a place like this before in my life, but looking around at all the action surrounding me, I felt at home. Everyone here fell way outside of the spectrum that society tried to push onto us, and no one here cared. If you had a freak flag, this was the place to fly it.\n\n\"This place is insane!\" Abigail laughed as we took it all in. \"Look!\" she pointed to a younger man in women's white lingerie and angel wings doing a sexy stripper dance on a pole.\n\nThe more I saw, the more my heart fluttered. I loved this place.\n\nWe drank and danced together, openly groping each other more than we would have anywhere else. Okay, Kennedy felt fine groping us anywhere, but here I welcomed it, even when she rubbed my cock teasingly. Why not right? This place was filled with sexual energy and freedom. Besides, we weren't the only ones feeling it. With the dim lighting and flashing lights, it was hard to see, but if you focused you could catch many people engaging in far worse depravities.\n\nAs the night stretched on, I lost Kennedy and Abigail for a little while, and was dancing alone in the masses. To be fair, I wasn't really alone. Both guys and girls, and even a few drag queens shared their company with me, but without Kennedy or Abigail, I still felt alone. It wasn't a bad alone though. I felt...safe. Even when I was sandwiched between two sweaty hunks who were making out with each other as their bodies rubbed suggestively against mine.\n\nI wasn't sure how long I had been dancing, but just as I was making my way off the dance floor to check on my friends, I bumped into a guy, nearly sending us both to the floor. If it wasn't for his quick reflexes, I certainly would have faceplanted. While they were pretty, heels were not conducive to sure footing.\n\n\"Are you all right?\" he shouted over the music and merriment, holding onto my hand to help steady my feet.\n\n\"Yeah, thank you!\" I said, still holding onto him. \"And sorry.\"\n\n\"Nothing to be sorry about here,\" he smiled.\n\nHe was cute, in a boyish way. He was tall, and well fit, but his shaggy brown hair and young features made him appear younger than I was.\n\n\"So, what are you?\" he asked casually, bringing my focus back from just his cute looks.\n\n\"What am I?\" I asked, not sure I heard him correctly.\n\n\"Yeah,\" he said, pointing up to the flashing lights spelling out LGBT\n\nAfter a moment of thought, I answered truthfully. \"All of them. And you?\" I smiled.\n\n\"All of them?\" he asked.\n\n\"Yup,\" I said counting off my fingers. \"Lesbian, gay, bisexual...\" I held up the fourth finger, giving him the hint.\n\n\"Wow, really?\" he smiled, leaning back to look me up and down again, this time with more curiosity.\n\n\"I'm Caleb,\" he said sliding his thumb along my hand that he still held in his.\n\n\"I'm Lexi,\" I said blushing a bit. \"So, where do you fall on this rainbow spectrum.\"\n\n\"Is it too cheesy to say, anywhere you want me to?\" he smiled.\n\n\"Yes!\" I laughed. \"But I won't hold it against you.\"\n\n\"Maybe you could hold it against me just a little,\" he smiled smoothly, opening his arms invitingly.\n\nThis guy was one smooth operator. I didn't care that he'd probably done this a hundred times, I stepped into his arms and he pulled me close to him.\n\nWe spent over an hour locked together, our bodies pressing into each other. We only talked briefly as we danced, exchanging bits of conversation, but the bulk of our time was spent with his hard cock throbbing hungrily against me, and I loved it.\n\nBy the time we pulled our sweaty bodies apart, I was aching to be fucked good, but not by him. It was oh so tempting, and he made a great case for taking me back to his place, but getting hot and heavy on a dance floor with a stranger and sleeping with them were miles apart. I knew what he was here for, and I didn't really fancy being one more conquest added to a long list, however charming he might be.\n\nI said my goodbyes and gave him one lingering kiss farewell before I began looking for Kennedy and Abigail. It felt like forever since I'd seen them last, and I felt a little guilty, almost as if I'd ditched them. Just when I began to worry that they might have left without me, I spotted my friends.\n\nThey were hiding in a darker corner of the club. It was pure chance that I noticed them at all. A flash of light from one of the strobes flickered over them, illuminating Kennedy's vibrant red hair and Abigail's slutty green dress.\n\nI did a little double take when I realized what they were up to. At first, I thought they were talking, but the closer I got, and the less people between us, the clearer it was. Abigail had Kennedy pressed up against the wall and they were making out. A few more steps and I noticed something else, Abigail's hand was between Kennedy's thighs. There was a noticeable thin strip of fabric hugging her thigh, just below the hem of her ridiculously short dress, answering my earlier curiosity of if Kennedy was wearing any underwear at all. Abigail's fingers were moving a mile a minute, and Kennedy was gripping onto her for dear life, it seemed.\n\n\"Is this a private party, or can anyone join?\" I asked slipping behind Abigail, letting my hand slide into the slit of her dress to find her own overheated sex.\n\n\"Ohhh!\" she yelped at my voice and touch, before spinning quickly around and realizing that it was only me.\n\n\"You little...!\" she trailed off, her hand reaching for her swelling chest. \"You nearly gave me a heart attack!\"\n\n\"You're killing me here!\" Kennedy interjected, tugging up her thong in obvious frustration. \"I was about to cum!\"\n\n\"Sorry,\" I smiled apologetically. I knew that frustration well as I felt my own thighs rubbing together in a futile effort to sate my own libido. \"Do you guys think we can get out of here? I'm so horny. I need to get fucked...Badly.\"\n\n\"We took you to a gay bar and you couldn't score?\" Kennedy asked. \"I would think you would be prime real estate here?\"\n\n\"I can't do it,\" I replied. \"Not just with some stranger,\" I told her.\n\n\"Trevor wasn't a stranger?\" she asked.\n\n\"Yeah...I guess, but I knew him for more than an hour,\" I said. \"And I liked him.\"\n\nShe nodded her head in understanding before looking to Abigail. \"Abigail?\"\n\n\"Yeah, I'm good to go too,\" she said fanning her flushed skin.\n\nOn our way outside, I texted the number for our Uber driver and got a response that he was on his way. We grabbed our things from the coat check and waited outside, up wind from a bunch of smokers. After only ten minutes of watching drunk couples file out in all combinations imaginable, our driver pulled up and we hopped into the back seat.",
        "\"Hello ladies!\" he chimed, hitting the meter and pulling away. \"Back to campus?\"\n\n\"That would be great, Todd,\" I told him.\n\n\"You guys have a good night?\" he asked, pulling onto the main street.\n\nI waited for the others to reply, but then I noticed that they hadn't wasted any time getting back to where they had been in the club. I was sure, even as dim as it was in the back seat, that Todd could clearly see Abigail fingering Kennedy between us in the mirror, but it wasn't like he hadn't seen this same thing from us before.\n\n\"Oh!\" I exclaimed quietly before answering him. \"Yeah, we had a pretty good night,\"\n\nWhether it was the tone of my voice that indicated an avoidance to conversation, or that he was too consumed with trying to watch the show in the mirror while still keeping us alive, the car became quiet, leaving only the low sounds of the tires on the road and the heavy breathing coming from Kennedy.\n\nWhen we pulled onto the freeway things got interesting. Kennedy's hand slipped between my legs and trailed the short distance to my crotch. My eyes immediately flashed towards the mirror, catching Todd's gaze on me for a moment before his eyes darted away. I held to her wrist tightly, trying to discourage her, but she was having none of it.\n\nShe pressed on as I watched the mirror for his eyes, and I slowly gave in. Her fingers brushed my panties, sending tingles across my skin. She fumbled around as she pulled them to the side and tried to fish out my aching cock. Against my better judgment, I lifted off the seat enough to give her access, and her fingers slipped around my shaft, pulling me out fully.\n\nMy skirt was so short, it barely covered anything as it was. Releasing her wrist, I used both of my hands to tug it as straight as possible to hide myself from view. Free, and horny as hell, my cock became steel in moments. Kennedy began to gently stroke me, full and long, and there was nothing I could do to hide the inch or so of cock that poked out of my skirt bottom.\n\nI had only taken my eyes off the mirror for a moment to check if I was covered, but when my eyes returned, Todd's seemed locked onto my lower half. He never glanced up at my eyes once as he continued to split his attention dangerously between Kennedy stroking me, and the road.\n\nUnder Kennedy's deftly teasing touch, along with my overwhelming desire to cum, I found it hard to focus on anything. I lost my sense of time as she edged me to perfection, getting me so close before stopping to squeeze me tightly until I calmed down just enough to start it all over again.\n\nKennedy came moments before we arrived on campus, strangling my cock with a death grip as she called out, unashamed in her bliss. Panting heavily, she still clung to my exposed shaft as we rolled to a stop and asked the man how much we owed him.\n\n\"This one's on the house,\" he smiled. \"Just remember to call the next time you need a ride.\"\n\n\"Will do, Todd,\" she smiled reaching over Abigail to open the door, ushering our friend out.\n\nI scooted out awkwardly, trying to cover as much of my cock as I could with my sorry excuse for a skirt. Todd was kind enough to wait a few moments while Kennedy fixed her dress, and I tried desperately to hide my throbbing lady parts. It seemed an impossible task. In this state, there was zero hope of putting Pandora back in her box without some form of release. Even tucked to the side in my panties, the bulge was painfully obvious. After fidgeting for too long a time, I just used my left hand to hold the hem of my skirt while pressing my forearm into my bulge to lower its profile.\n\n\"Thanks again, Todd,\" Abigail said, finally shutting the rear door.\n\n\"No ladies, thank you!\" he smiled out his window, giving us a little salute before pulling away.\n\n\"You're such a bitch, Kennedy,\" I said flatly. \"You could at least have let me cum. Now I have the world's most obvious girl boner.\"\n\n\"It's not that obvious,\" Kennedy scoffed.\n\nAbigail looked me over, and then looked to Kennedy with a knowing smirk. \"We better walk in front of her.\"\n\nI could feel my pulse throbbing against my arm through my skirt. Kennedy thought the whole thing was hilarious, naturally. Thankfully, Abigail took it a little more seriously and did a good job blocking anyone's sight lines to my cock.\n\nWith the nice long walk to cool off a little, I no longer felt ready to pop at the slightest provocation, but I was still in need, and it looked like Abigail was as well, to a lesser extent. The only one to cum so far tonight had been Kennedy. Feeling a little passive aggressive, I shouldered past her once we reached our room, and pulled Abigail into a full-on lip lock. My hands were all over her, pulling away at her dress. She immediately returned the favor and we stripped each other quickly. Once we were naked, I pushed Abigail roughly onto the bed.\n\n\"Ahem!\" Kennedy cleared her throat loudly. \"I thought I wasn't going to have to service myself tonight?\"\n\n\"Didn't say anything about servicing you first,\" I mumbled between kisses as I slipped between Abigail's creamy thighs and speared her wet pussy in one thrust.\n\n\"Maybe next time you won't be such a tease!\" Abigail said, squealing out the final words as I thrust deep.\n\nShe made the cutest noises into my mouth as our bodies rocked together. Kennedy seemed a little upset, but I focused all my attention on Abby. I knew I wouldn't let Kennedy down. She still deserved a good fucking, and she was going to get one.\n\nAfter a few minutes, Abigail pressed me away and turned over onto all fours. She adored making love, but a growing part inside of her liked to just be fucked...hard and raw. I had no objections to fulfilling either desire.\n\nAs soon as she was propped up for me, I pressed right back into her in one thrust, and set up a steady rhythm, intent to punish her little pussy. I was at it for a minute or two when Kennedy spooked me, crawling up from behind. Her soft hands caressed my body as I fucked our friend in front of her.\n\n\"I don't like being left out,\" she purred into my ear as she moved closer, pressing her firm breasts into my back. That's when I felt it, something hard and slick sliding down the cleft of my ass to rest near my pucker.\n\n\"You're the one who said they wanted to get fucked tonight,\" she said before pressing her rubber cock into my eager hole.\n\nI thrust hard, burying myself into Abigail as Kennedy slowly slid every inch of her strap on into my ass. A long throaty moan escaped my lips, and I felt my cock grow even harder, if that was possible.\n\n\"Oh fuck!\" I cooed pleasurably.\n\n\"What's going on back there?\" Abigail asked, tossing her long brown hair to the side as she looked over her shoulder.\n\n\"Nothing you need to worry about,\" Kennedy smiled, pulling out sharply only to thrust back in with enough force to ram me roughly into Abigail.\n\n\"Oh!\" we cried out in unison.\n\n\"You know, I've always wished I could fuck Abigail with your dick,\" Kennedy laughed. \"I guess this counts.\" With that, she pulled out again, dragging me back with her as she slid out and slammed back into me, filling me up, the resulting force sending me forward to thrust back into Abigail.\n\nThe slapping of flesh rang out, along with our cries, and Kennedy punished us with all the effort she could muster. I was so far gone in pleasure that if Kennedy wasn't the leading force in our coupling, I wouldn't have had the foresight to thrust into Abigail. Kennedy was hammering hard onto my g-spot with every earth quaking thrust. I was delirious. The pleasure crept slowly towards its peak and past. Just when I thought it was too much, the Gods saw fit to grant me release, and I spewed my load all over Abigail's insides.\n\nAbsolutely spent, I fell forward onto Abigail and Kennedy followed me, giving me a few more punishing thrusts into my trembling body before collapsing as well.\n\n\"I'm sorry, Abby. I couldn't hold it back,\" I apologized.\n\n\"What are you sorry for?\" she asked.\n\n\"You didn't cum,\" I said.\n\n\"I came a long time ago!\" she laughed. \"Why the hell didn't we try this before now? You were hard as steel! I could feel every bump, every vein. God, it was incredible!\n\n\"I think I'm next!\" Kennedy said slipping out of me and working off the straps. \"Abby, batter up!\"\n\n\"Oh, no!\" I whined. \"My poor pussy needs a break,\" I reached back to gently touch my warm, well-fucked hole.\n\n\"That's no fair,\" she pouted on her knees next to mine and Abby's tangle. \"You said I would get mine.\"\n\n\"You will, just give me five minutes to recover from that,\" I said, still trying to catch my breath.\n\n\"Fine, but if you're not ready in five, I'm tying you up and having my way with you.\"\n\n\"I want in on that,\" Abigail laughed underneath me.\n\nTrue to my word, I made sure to thank Kennedy for her night of freedom. I fucked her sore while Abigail made her lick my cum from her pussy. Having already cum recently, Kennedy's reward lasted for some time until she begged me to stop.\n\n*** *** ***\n\n\"Ughhh!\" I moaned, annoyed as I tried to shake off Kennedy's roaming hands.\n\nI was still half asleep and trying to find my way back to the other half. I couldn't see her with my head buried underneath the covers, but I knew it was her just by the way her greedy paws slid over my skin.\n\n\"Stop it!\" I whined groggily.\n\n\"Are you sure?\" Kennedy finally spoke up, her hand tickling as it traced down my spine to my naked ass. \"We got the whole room to ourselves. Abigail's in class, and I'm sure everyone else in the suite is as well. You sure you don't want to play with me?\" her fingers ran further down my crack to rub gentle circles around my sore pucker.\n\n\"I'm too sore,\" I pouted, knowing she was never going to let me go back to sleep.\n\n\"I could be gentle,\" she proposed, kissing me softly on the shoulder.\n\nI moaned in irritation as she kissed slowly down my back. I was annoyed, but I did like what she was doing. I let out a long sigh when she reached the curve of my ass. I felt her body shifting around, and I felt the sheets move as she lifted them off my legs, pulling them up and exposing my ass. Next, she spread my legs a little, and her kisses continued. This time starting from the bottoms of my thighs and working her way up.\n\nIt was almost like a massage with how relaxed I began to feel. The touch of her hands and lips on my skin seduced me out of my irritable state in no time. My heartbeat quickened the closer she got to my hole. She would get so close to it and then switch to a farther point on the other side and work her way back in. When her lips finally touched the edge of it, I moaned in satisfaction, only to gasp when I felt her wet tongue snake out across my delicate knot.\n\nI could hear her giggle behind me before I felt her tongue flick out again. God, it felt divine. Soon, she was licking away sensually just like she was eating a pussy, which she might as well have been. My pussy.\n\nMy breathing quickened, and I could feel her spit slowly trickling down and over my exposed balls. She took her torturous time until she eventually slipped a finger inside, and then another. As rough as she was last night, this was the complete opposite. She was sweet and gentle.\n\n\"How's my girl doing up there?\" she asked as she fingered me.\n\nI could only moan in response.\n\n\"I told you I would be sweet. Look, I even kissed it better,\" she said, flicking her tongue along the cleft of my ass for emphasis.\n\nI could feel her changing position again, she slid my legs back together, so they were laying straight, and straddled them. She inched her way up towards my ass, and grabbing a pillow, stuffed it underneath my hips, propping up my ass and putting a natural arch in my back.\n\n\"Just relax baby. Kennedy's gonna make you feel real good,\" she cooed, just before I felt the tip of her cock pressing gently against my hole.\n\nBy now, I was so worked up and ready for it. My ass willingly accepted the intrusion, and she slid slowly inside. I couldn't stop the humming, purring sound emanating from my throat as she slowly made love to my ass. She had her hands pressing down hard on my lower back for support as she rocked her hips, gently gyrating against me.\n\nWith all my heavy breathing, and the heat Kennedy was building up in me, I began to suffocate under those sheets. Finally moving on my own, I reached up and pulled the covers from over my face.\n\n\"Good morning!\" Kennedy giggled as she continued to sensually fuck me.\n\nShe was hitting all the right spots on her own, and I had nothing to do but wait and enjoy the pleasure she was giving me. As long as she kept it up, I was in for one hell of an orgasm.\n\n\"I think my girl likes this,\" Kennedy cooed back at me.\n\nHugging my pillow tightly, I gasped as her cock brushed harder against my g-spot. I couldn't stop the naughty pleasure sounds I was making, and my ass was now rocking back into her all on its own. In what felt like no time, and entirely too long, I felt it begin.\n\nEach gentle stroke of her cock along my sweet spot added just a bit more pleasure. That blissful warm feeling began to fill my body. My moaning grew louder, no longer a soft purr, but a rising racket that ricocheted off every hard surface. My hips began squirming, desperately trying to thrust back in earnest, anything in an attempt to reach out for my coming climax. It was no use though. With Kennedy mounted so surely, there was literally nothing I could do to drive this pleasure train faster.\n\n\"That's it, baby,\" Kennedy said soothingly. \"Let go and cum for me.\"\n\nI squeezed my pillow tightly to my face, my fingers digging into anything they could as the waves finally crashed down. Unrestrained cries escaped my lips as I came, and my vision went white.\n\nWhen I came back to my senses, my ass was empty, and I could feel the warm puddle beneath me where I had cum all over myself. Even with my orgasm fading, a pleasurable tingle remained. If this wasn't a fluke, I might have just found a new favorite position.\n\n\"How was that for a wakeup call?\" Kennedy asked, stroking my skin and kissing me on my shoulder.\n\n\"Best morning ever!\" I laughed, stretching as I turned to face her.\n\n\"I thought you might enjoy that,\" she smirked. \"What about that thing I did with my tongue?\"\n\n\"I loved it!\" I blushed, pulling my hand up over my mouth a little embarrassed.\n\n\"I could be tempted to do it again for you,\" she said. \"It makes me feel naughty, but I kind of like it.\"\n\n\"You like something that makes you feel naughty?\" I asked amused. \"I would have never guessed.\"\n\n\"Hey, I know what we can do!\" Kennedy said sarcastically. \"How about we not tease the girl that made you cream yourself in such a spectacular fashion!\" she finished with a smirk.\n\nWe laid together, me still on my stomach while Kennedy pet me soothingly.\n\n\"So, I was wondering...\" Kennedy began after a bit. I could tell she was trying to bring up an awkward topic. \"You know how you said we wouldn't be able to get my file until the end of the year?\"\n\n\"Stop,\" I said, feeling my tingly feeling evaporating. \"Did you do all of this to try and butter me up, so I would change my mind?\" I asked, feeling slightly angry at her attempt to manipulate me.\n\n\"No!\" she defended. \"Well, not completely,\" she amended. \"I actually had a lot of fun.\"\n\n\"I did too,\" I said, unable to keep the rising heat out of my voice. \"but no amount of orgasms is going to change the fact that if we try doing it now, it will be all risk and no reward.\"\n\n\"I know,\" she sighed. \"I'm sorry. I'm just... God, I'm so fucking frustrated! It's not like I've been waiting for this my whole life, you know. Mom, why don't I have a daddy? You do, Kennedy. It's just complicated and you can't know who he is,\" Kennedy said in a mimicking tone.\n\n\"Every year for my birthday I would have a party and all of my friends would come. There would be cake, and balloons, and music, and they were the best parties of any of my friends. Did I have a good time?\" she asked. \"No, I spent my whole party glancing to the door, hoping that this year, my father would surprise me. At this point I don't even care about him. He can go to hell for all I care. He never wanted me, and sending money is just a way to make himself feel less guilty for knocking up my mom and creating a kid he never wanted. I just need to know who he is. Maybe then I'll know why he never loved me.\"\n\nTears began streaming down Kennedy's face and I pulled her into my arms and held her as she wept. I stroked her back and soothed her as I rocked her in my arms.\n\n\"How could he not love you?\" I asked. \"Have you met you? I knew I loved you after that first day with you. You're wild and adventurous...You're a powerful woman, and any man would be proud to call you his daughter.\"\n\n\"Then why the secrets?\" she sobbed. \"Why can't I know him?\"\n\n\"I don't know, Baby,\" I told her. \"But if he hasn't said anything, I'm sure he has a good reason. You might not understand it now, but maybe one day you will.\"\n\nI didn't know if that was what she wanted to hear, but it was all I had for her at the moment. I knew finding out the identity of her father was a big deal to her, but I had assumed it was more of an obsession. She never really showed how much she was hurting inside. I held her for a while longer as she cried herself out.\n\n\"I'm sorry about that,\" she said reaching to scrub her eyes. \"I feel like a wreck.\"\n\n\"You have nothing to be sorry about,\" I told her. \"We all need a good cry sometimes. We're not men, we're allowed to do that.\"\n\nShe smiled at me ruefully, \"I love you, you know that?\"\n\n\"Oh, I'm well aware, babe. I love you too,\" I said, giving her a sweet kiss on the lips.\n\n\"I'm just going to get my shit together and-\" Kennedy began rolling off the bed. \"EW!\"\n\nI couldn't stop laughing. While I was holding her, and she was crying, my cum had dried gluing us together, and as she rolled away the sticky mess peeled apart.\n\n\"Come on, that's hardly the first time you got a little cum on you,\" I chided.\n\n\"It's different when you're not expecting it,\" she said.\n\n\"Hello, we just fucked,\" I laughed. \"Cum is a fundamental byproduct.\"\n\n\"You know what...Whatever,\" she smiled, grabbing a towel and scrubbing my spunk from her skin. \"You're lucky I like your cum.\"\n\nRealizing how much of a mess I was, and having a class coming up soon, I needed to get cleaned up myself.\n\n\"Is it okay if I leave you?\" I asked. I didn't want to run out on her if she still needed me. \"I have a class in an hour, and I need a shower before I get ready.\"\n\n\"Can I come with you?\" she asked.\n\n\"Do you even have to ask?\" I replied, holding out my hand.\n\nI slipped on a pair of panties and grabbed a towel, and together we headed down to the showers. I held her hand the whole way. A few girls saw us and some even made looks, but I really didn't care. My friend was hurting, and besides I was getting sick and tired of living life by other peoples' terms.\n\nTogether, we washed my cum and our combined sweat from our bodies. For once, there was nothing overtly sexual about us washing each other. Even when we held each other under the stream and kissed. It was more a symbol of our affection for each other than any sort of lust.\n\n*** *** ***\n\nMy classes for the day were fairly boring. I took copious notes, only to keep myself from drifting off into daydreams. I was thinking about Kennedy. I had shot Abigail a text just before my first class telling her that Kennedy was having a hard time, and to make sure to show her the love when she saw her.\n\nKennedy was a tough cookie. I was sure that this would pass, and she would be back to her usual self, but seeing her hurt like that broke my heart. I tried to think of alternatives, other ways to get what she wanted that I might have overlooked. I was sure I had thought through all the possibilities, and unless we wanted to repel down the side of the building and pray for luck that his window was unlocked, the plan we had was the best. I looked down to realize I was sketching the keypad to Decker's office. So much for taking notes to stay focused.",
        "\"That will be all for today, Ladies,\" Professor Holland called. \"Read chapters 22 and 23 before next class, and if you've finished those papers on The Gender Revolution, you can turn them in to me early.\"\n\nI couldn't believe the class had already ended. It felt like I had just walked in only moments ago. Gathering my things, I began stepping down the aisle towards the teacher's desk.\n\n\"Miss Allen, I have this for you,\" she said holding up a small yellow slip of paper. \"Are you having issues in your other classes again?\" she asked.\n\nCringing, I took the slip. I already knew what it was. Someone in the Admin Building wanted to see me, and from her implication it could only be one of two people.\n\n\"No, I'm not having any problems,\" I told her honestly. After my previous scare with academic probation I had been a machine when it came to my schoolwork. \"I even have this for you,\" I said fishing my paper from my notebook. \"I finished it last night.\"\n\n\"Already?\" she asked. \"I didn't really expect anyone to finish early.\"\n\n\"I kind of got caught up in it once I started. It's a really fascinating subject,\" I said. \"I hope it's not too long. There was so much I wanted to put in there...I tried cutting it down as much as I could.\"\n\n\"Really?\" she said, admiring the thick stack of papers held together by a binder clip. \"If you were this enthusiastic about the subject, this might be the first one of these that I truly enjoy reading,\" she confided with a smile. \"You have a good day, Miss Allen.\"\n\n\"Thank you,\" I said backing away, smiling as well. \"And you too.\"\n\nAs I made my way out into the hall, I glanced at the yellow slip of paper, wondering what this was for. All of my grades were up, and I was off of academic probation. I hadn't gotten into any fights...why could he possibly want to see me? I sincerely doubted it was to tell me how well I was doing in my classes. Maybe the creep just wanted another excuse to stare at my chest or something.\n\nDown the hall and out through the quad, I walked toward the Admin building. For once, I wasn't scared of being summoned to the office of the Assistant Dean. It didn't mean I was looking forward to this though.\n\n\"I got a slip,\" I said to his secretary as I entered the outer office.\n\n\"Go right in,\" she said looking up. \"He's expecting you.\"\n\nThe door to his office was slightly open, and as I approached it, for Kennedy's sake I remembered to take note of the keypad. I had nothing to shine on it though, and all of the buttons still looked the same to my naked eye. I didn't think I would be able to tell, and with this method, it was kind of the point; for no one to notice.\n\nSighing, I pushed open the door to his office and walked in, closing it behind me as he instructed. The Assistant Dean was sitting behind his big wooden desk, lounging back in his chair smiling. I had to suppress a slight shiver seeing him like that. His smile suited his creepy nature, almost too well.\n\n\"Hello Miss Allen,\" Assistant Dean Decker said happily.\n\n\"Hello Mr. Decker,\" I said taking a seat across from him and crossing my legs. \"You wanted to see me?\" I asked, still not sure why I had been summoned.\n\n\"Yes,\" he began, shuffling some papers. \"The last time we spoke it wasn't on the best of terms. I regret that. You've been making great strides now to become a better student and fit in with your peers. That, I can respect,\" he smiled sincerely.\n\nThis was almost too good to be true. He really asked me in here to tell me what a good job I was doing? That and stare at my tits, I thought wryly once I noticed his eyes on my chest.\n\n\"However,\" he continued, \"something about you stuck with me, and I wasn't sure what it was. I thought about it for a while and couldn't quite put my finger on it. Eventually my curiosity got the better of me, so I pulled your file and did a little check on you.\"\n\nAs he spoke, the room seemed to be getting smaller and smaller around me. I thought this was behind me. I still had to hide for the most part, but I was a woman. My friends accepted me, anyone else in my position would have felt like they lived a charmed life. Well that charm seemed to be fading fast, and the walls of my dreams were crumbling around me.\n\nThe whole time I was trying to figure out why I was called in here, and not once had I thought about him finding out. How could I have been so careless? I had wracked my brain for anything that I could have done that would have gotten me into trouble, and having a dick at an all-girls school hadn't even registered.\n\n\"You do look so much like your sister, don't you Alex?\" he asked smiling.\n\nHearing my old name struck like a blow. He really knew. I felt lightheaded, and I was trembling. I didn't know what to say. I couldn't deny it. The way he was looking at me, with such malevolent joy, reminded me of those kids who would burn ants for fun.\n\n\"Nothing to say?\" he asked. \"No matter, the truth of it is all right here,\" he said jabbing his finger down onto a piece of paper. \"You know, I wanted so badly to be able to expel you before,\" he sighed, getting up to walk around to my side of his desk, casually leaning against it. \"Not because you deserved it, you see? Most of the girls I threaten with expulsion don't deserve it. I just wanted you.\"\n\nI was still stunned to silence as he spoke.\n\n\"Here's what's going to happen, Miss Allen,\" he said in a mocking tone. \"If you don't want any trouble, you're going to do some things for me...let's call them extra curriculars.\"\n\nThe way he was speaking and leering at my cleavage made my skin crawl. My mind was swimming, and even though I could hear what he was saying, I was having a hard time getting my mind to comprehend. Was he saying what I thought he was saying?\n\n\"If you say no, I will call the police and tell them that some deranged pervert found a way to weasel their way into our school masquerading as a girl, so that he could undoubtedly see girls in their underwear and naked in the showers. You will not only be expelled, but as someone who is here on scholarship, you will be charged with fraud and go to jail. This school is for women, not little boys playing dress up...no matter how...pretty they are,\" he smiled. \"It's your decision, expulsion and jail, or a little fun with me. I'm sure you'll enjoy some of it...\"\n\nMy whole world was crashing down around me. I tried to scream, tell him that I was a woman, that I belonged here. I wanted to tell him to go to hell, and that I would die before letting him touch me, but no words escaped my lips. I felt tears welling up in my eyes as he looked down at me from his perch against his desk. I didn't know how I missed it before. He had always looked like a creep, eyeing the young girls like he was undressing them, but the truth was written all over his face. He was a predator.\n\n\"You are so very pretty,\" he mused, reaching a hand out to brush my cheek.\n\nI pulled away out of reflex and disgust, but before his hand could touch me the intercom buzzed loudly, causing the both of us to jump. \"I have Mr. Richards here. It's about the faculty mixer tonight and he says it's urgent,\" her voice came through the speaker.\n\n\"We'll have to pick this up another time, Miss Allen,\" Mr. Decker said quickly moving back around to his seat behind the desk. \"I expect to hear from you tomorrow.\"\n\nMy whole body was numb as I stood to leave. I felt scared, ashamed, dirty, but in complete contradiction, I felt like I was floating somewhere outside my body, far away from any emotion at all. I felt broken.\n\nA few tears leaked from my eyes as I walked, and it took me a while to finally get a grip on myself. Drying my tears, I made the only choice I could. I knew who I was, and there was no way I was going to say yes to that creep. If this was my last night at Mayweather, or even as a free woman, I had a lot of work to do.\n\n*** *** ***\n\n\"We're doing it...tonight,\" I said flatly as I closed the door to our room behind me.\n\nKennedy and Abigail were there. Abigail was at her desk studying, and Kennedy was most likely surfing porn on our bed. As soon as I spoke, all sounds of clacking keys fell silent and they both looked up at me.\n\n\"You better not be fucking with me,\" Kennedy said seriously. \"Tell me you're not fucking with me.\"\n\n\"I'm not fucking with you,\" I said solemnly. \"We're doing it tonight.\"\n\nKennedy leapt off the bed, knocking her laptop to the floor as she pulled me into a hug. Her squeals of delight filled the room as she jumped up and down.\n\n\"Thank you thank you thank you thank you!\" she kept chanting.\n\n\"You're not talking about breaking into the Admin building, are you?\" Abigail asked. \"You said it wouldn't be ready for another couple of months.\"\n\n\"Does it matter?\" Kennedy asked excitedly. \"We're finally doing it. Tonight, I'll know who my dad is!\"\n\nAbigail eyed me suspiciously. I knew she would be happy for Kennedy, but I had the feeling that she knew something was up. I quickly put on a smile for her, trying to hide my own inner turmoil.\n\n\"Everything is good, Abby,\" I assured her. \"I've been thinking about it, and I used some really cheap varnish for those buttons. It should fade a lot faster. And I think tonight is going to be our best night,\" I lied.\n\n\"If you say so,\" Abigail said. \"You're the mastermind here.\"\n\n\"Hell yes she is!\" Kennedy said, kissing my cheek noisily. \"God, I don't think I'll be able to wait until midnight.\"\n\n\"You won't have to,\" I said, laying out the plan.\n\nNormally, students wouldn't know a thing about faculty events. They weren't generally advertised, and we really didn't care since we weren't invited. If I hadn't been in Decker's office when his secretary mentioned the faculty mixer, I would have never known. With knowing comes opportunity though.\n\nThe party would probably go on all night, meaning that there would be no good time to sneak in. Waiting for the guard to go on break would be pointless if he knew people would be going in and out at some point during the night. So, how was breaking into a building full of teachers and staff a good idea, you ask? Because we wouldn't be breaking in.\n\n\"This sounds way riskier,\" Abigail said.\n\n\"Not really. The front door will be unlocked because there will be staff there,\" I explained. \"No breaking and entering needed. We waltz right in and-\"\n\n\"Waltz right out?\" Abigail cut in.\n\n\"Pretty much,\" I said. \"Now if you'll let me finish,\" I paused, making sure I wouldn't be interrupted again. \"We go right in the front door. They'll be on the top floor getting wasted and pretending they're teenagers for a night, I'm sure. We just keep an eye out as we make our way upstairs, and if anyone stops us, we say we wanted to talk about summer classes and assumed they were still working because the lights were on.\n\n\"No one should be on the first two floors anyway,\" I continued. \"We go up to Decker's office, figure out the combination, and get in. The keypad shouldn't take more than ten minutes tops, finding the file, less than five. We're talking in and out in twenty minutes.\"\n\n\"What about if the security guard sees you going in?\" Abigail asked.\n\n\"You don't see it?\" Kennedy asked. \"It's genius! They're partying up there. The guard will know it. Seeing a few more people go in will be nothing out of the ordinary.\"\n\n\"I guess it sounds pretty solid,\" Abigail acceded.\n\n\"Damn right it does,\" Kennedy said. \"More solid than our first time going in, checking damn near every window to find one that was unlocked. At least this time we know the way in.\"\n\n\"I guess it's time to get out our B&amp;E gear,\" Abigail suggested.\n\n\"No B&amp;E gear,\" I said. \"Normal clothes. Remember, we're not doing anything wrong. We just wanted to talk about the summer program,\" I reminded her.\n\nThe last thing we wanted to do was skulk around in dark clothing looking suspicious.\n\n*** *** ***\n\nIt was half past nine when we made our way out of Evens Hall and into the night. We looked as natural as could be. I was wearing a pair of faded jeans with a few holes in them and a cute top, Kennedy was dressed similarly, and Abigail was in a fairly modest skirt and blouse. We weren't the only girls out and about, and we didn't look a bit out of place. The only thing that differed between us and them was our destination. They were most likely heading out for a night of drinking and trouble at a local bar, while we were finding our trouble a little closer to home.\n\n\"I still think it's too early,\" Abigail said.\n\n\"That's the whole point,\" Kennedy said. \"It's early enough for us to pretend it was an honest mistake, and late enough that the party is already started.\"\n\n\"All I'm saying is that I'm still not sure about this,\" she said. \"Last time we had more time to prepare.\"\n\nShe wasn't wrong. This wasn't a very well thought out plan, regardless of what I had been spouting earlier. There were so many things that could go wrong and it would only take one of them to end this horribly. I was flying by the seat of my pants, because I knew it was tonight or never. At least for me.\n\nI still hadn't told them about my secret being out, or Decker trying to blackmail me. I knew I should have said something, but I couldn't. They would insist on making the best of our last night together, of my last night with them. We would have partied, danced, drank, and fucked until I was arrested and expelled tomorrow. I just really wanted to do this for Kennedy before it all ended. She was the best friend a girl could ask for. She knew all of my secrets from the first day she met me, and she loved me anyway. I knew how much this meant to her, and I wanted her to have it.\n\nAs we neared the front entrance, everything looked clear. No one else was out on this part of the grounds that we could see, and no one in sight on the ground floor either.\n\n\"All right,\" I said stopping them short of the entrance next to a bench. \"You two wait here and I'll go in. There shouldn't be much to keep an eye out for, but just in case-\"\n\n\"Wait, what?\" Kennedy asked. \"I'm going with you!\"\n\n\"Don't worry, I got this,\" I smiled.\n\nI didn't want her to risk getting caught. I was going to jail either way. If I got caught it was just one more thing to add to my list. This was basically a suicide run.\n\n\"The hell you do!\" she said. \"I'm not letting you go alone, without me. This whole thing is for me. I can't just sit back and watch my friend do all the heavy lifting.\"\n\nI tried to argue, but she was firm on her stance. She was going with. Maybe I sold her too well on how safe this would be. It was frustrating, but also one of the reasons I adored her. She was with you until the wheels fell off.\n\n\"I think I should go too,\" Abigail said a little reluctantly. \"It's for Kennedy.\"\n\n\"Oh no you don't!\" Kennedy said. \"Someone's gotta stay here to watch. Besides, if you got caught, your dad would kill us.\"\n\n\"He would not,\" she scoffed. \"And what exactly am I supposed to be looking for?\" she asked. \"People coming and going? You said that's supposed to be normal.\"\n\n\"I will tie you to the bench with your panties, woman!\" Kennedy said threateningly.\n\n\"Listen, Abby, people going in and out is normal for the security guard, not for us,\" I said. \"If you see people going in while we are getting ready to come out, you can let us know so we don't run headlong into them. Also, you'll be able to tell us if there is some kind of mass exodus because the old people ended the party early. Okay?\"\n\n\"Fine,\" she sighed sitting down.\n\n\"Call Kennedy so you can keep us up to date,\" I said patting her shoulder.\n\n\"Bless that girl,\" Kennedy said, shaking her head as we walked towards the entrance and away from Abigail. \"I love that girl, but a dad with that much money? He would bury us, and no one would know it. Hell, I'm surprised it hasn't happened already. You know, with him finding out that we turned her gay?\"\n\n\"He's actually pretty cool,\" I said, recalling the time I'd met him.\n\n\"Yeah, well...\" Kennedy trailed off as she answered her phone and put her bluetooth in. \"Hello.\"\n\nJust as I thought, the bottom floor was a ghost town. Not a soul in sight. I eased the door closed behind us, making the click of the latch as quiet as possible, after that, I took a deep breath and strolled casually towards the stairs.\n\n\"No, no one is here,\" Kennedy whispered. \"No, I don't know if there is anyone in any of the offices. Abigail...Abigail!\" she said annoyed. \"This isn't going to work if you keep asking questions. Just keep your eyes peeled for us and we can give you the play by play later.\"\n\nI would've had my own bluetooth in, but since we were together, I figured we both didn't need to be in communication with her. At the door to the stairwell, I paused to listen for sounds, but it was quiet as a mouse.\n\n\"I think we're good,\" I nodded to Kennedy as I opened the door slowly.\n\nI peeked up the stairs trying to catch a glimpse of anyone, but the coast was clear. Our footfalls were quiet in our aptly named sneakers as we climbed up to the second floor. Again, I paused and listened before slowly opening the door and strolling out. We were well and truly in it now. I could hear the distant sounds of music playing, and loud muffled voices from somewhere above us.\n\n\"Could you look more suspicious?\" I admonished Kennedy in a whisper. She looked like she was walking on eggshells, tiptoeing as she made her way down the hall, leaning slightly forward, as if that would help.\n\n\"Sorry,\" she blushed.\n\nHer demeanor relaxed, but only slightly. She still looked ridiculous, and if someone spotted her, I just knew she would jump out of her skin and give us away in an instant.\n\nOn the outside I looked as calm and casual as could be, but my heart was definitely thumping away. My days might have been numbered, regardless of how successful we were, but breaking and entering was still a bit of a rush.\n\nAs expected, the door to the Assistant Dean's outer office was unlocked. There was really nothing of importance to safeguard in here. All the private files were behind the next door.\n\nI motioned for Kennedy to close the door behind us while I made a beeline for the keypad. I fished out the flashlight I had in my pocket and held my breath as I shined the black light over the buttons.\n\n\"It worked!\" Kennedy squeaked behind me, causing me to jump.\n\n\"Yes and no...\" I said once I got over my shock. \"I don't think any of the nail polish was even worn down. It just looks like dirt and oils built up over the varnish.\"\n\nI hadn't even thought about that outcome, but sure enough four of the buttons were darker than the others that shined in the light. They were a disgusting brownish green. Shaking my head, I began working on the combination.\n\nSort of like how you figure out a maze by always turning left, I had devised a set of rules to follow so I didn't try the same combination twice. I started with the lowest number first and worked my way up, and when that failed, I switched the last two numbers and then the third, and then the last two again until I tried all of those combinations with the lowest digit in the first position. After that I went to the next highest.\n\nI was mashing away on the buttons as quick as I could with one hand, while using the other to try the handle. I was thinking to myself that it would be just my luck if it was the last combination I tried, or that he pressed one of the buttons twice, making it a five-digit combo, when the handle swung down.\n\n\"All ready?\" Kennedy asked surprised. \"You've barely been at it two minutes! I could have done that.\"\n\nI glared at her as I stood up. Barely waiting for me, she swept right past and into the office.\n\n\"You know, with all your planning, that was pretty anticlimactic,\" she went on in a hushed voice. Then to Abigail on the phone, \"We're in.\"",
        "Kennedy's joking jibes aside, she was crawling out of her skin as we searched the row of filing cabinets for the Endowment section. We looked over every cabinet label twice before finding it.\n\n\"How lazy can you be to go through all the trouble to make a label, and all it says is End?\" Kennedy giggled as she opened the long drawer.\n\nI knew what she was doing, she was cracking. She was just before the finish line, and her mind was near hysterics that she was going to solve her life's biggest mystery. Her mouth just wouldn't stay shut as she babbled, looking through the files.\n\n\"Do you remember the reference number?\" I asked.\n\n\"Please, I dream about that number,\" she scoffed.\n\nThere was only enough room at the cabinet for one of us to flip through the worn looking brown folders, so I watched as she searched through them slowly, making sure she didn't make a mistake. I knew the moment she found it though. If the sharp intake of breath didn't tell me, the way she trembled with her fingertips steady on a file said it all.\n\n\"I'm happy for you babe, but now's not the time to lose it on me,\" I cautioned. \"Grab that bitch and let's go!\"\n\n\"Take the file?\" she asked. \"I thought I would just read it really fast.\"\n\n\"Back at the dorm,\" I said firmly. I didn't want her to find out who her father was and lose her shit, getting us caught in the process. \"We really need to go, like now!\"\n\nKennedy sighed, but she didn't fight me. She closed the cabinet, and holding the file preciously in both hands, followed me out of the office.\n\n\"Tell Abby that we're coming back down,\" I said as Kennedy closed the office door quietly behind me.\n\n\"Oh, she's been listening,\" Kennedy said happily. \"She says it looks clear out there.\"\n\n\"Good,\" I said. \"I-\"\n\nI quickly held up a hand to Kennedy to silence her. My heart thundered in my chest as I strained my ears. I could hear muffled voices, and these sounded much closer than those from upstairs...and they were getting louder...closer.\n\n\"It's just in my office,\" I barely made out. \"...fifteen-year single malt...\"\n\n\"I'll meet you back up there,\" the second voice said.\n\nI had no idea who the owner of the second voice was, but the first voice made me sweat. Mr. Decker, and he was grabbing something from his office. The office we were currently in.\n\nMy eyes filled with fright, I looked back at Kennedy and I could see fear there as well. I looked around for any place to hide. There were some chairs against one wall and a small fake plant in a corner. The only real cover was under his secretaries' desk, but I knew we both wouldn't fit.\n\nMoving quickly, I grabbed Kennedy by the arm and pulled her to the desk. With my other hand I pulled out the rolling chair and shoved my friend to the ground. Understanding, she scooted underneath and looked at me expectantly until I moved the chair back in front of her. Those beautiful eyes now held concern for me. She knew what this would mean for me. She just didn't know that it had been over for me for a few hours now.\n\nKnowing I only had a second or two, I quickly spoke in a hushed voice. \"When you get a chance, get out and back to Abigail...Cold Charlie.\"\n\nWith that, I stepped quickly from behind the desk and stood square in the middle of the room just in time to watch the door open.\n\n\"Miss Allen!\" Mr. Decker exclaimed, shocked, and for just a moment forgetting his condescending tone. \"What are you doing in my office!\" There was that tone again. \"Office hours are over...young lady. You're in deep enough shit as it is,\" he said a bit drunkenly.\n\n\"That..That's what I'm here...to talk about,\" I barely got out.\n\nI didn't think I could ever force myself to do this, but you would be surprised what you will do for the ones you love. As soon as I knew we were about to be caught, all I could think about was not dragging Kennedy down with me. Now...hopefully, she would have a chance. This wasn't going to be pleasant though.\n\n\"I've made my decision,\" I said, steeling my resolve and resigning to my fate. \"I'll do it.\"\n\n\"And what exactly is it that you'll do?\" he asked, his demeanor shifting from angry to excited in the blink of an eye.\n\n\"Whatever you want me to do,\" I said, unable to hold back a small cringe.\n\n\"That's a good girl,\" he smiled, putting an over the top inflection on girl. \"What do you say we start with your first payment?\" he said patting his groin.\n\n\"Can we start tomorrow?\" I asked, already knowing deep down what he would say.\n\n\"No, now I think,\" he smirked. \"I've waited too long for this. You should have been mine months ago. Now, get on your knees and crawl on over here.\"\n\nMy nature demanded that I fight, that I not give in, to resist at every inch, but that wasn't really a choice that I had.\n\n\"Wha...What if someone comes in?\" I asked, trying to think as quickly as possible.\n\nI already knew what was going to happen to me, I just wanted to give Kennedy a clear path, and I was ashamed to admit, more importantly, I didn't want her around for what was about to happen, even if she couldn't see.\n\n\"Hummm,\" he mused. \"Then we'd better take this into my office. But I still want you on your knees...now,\" he added once he saw me turning to walk to his office.\n\nStopping in my tracks, I slowly lowered myself down to my knees, degrading myself for him. As dirty as I felt right now, I knew far worse things were to come. Decker walked past me and quickly punched in his code, opening his door for me to crawl through behind him. As I crawled, I snuck a peek towards the desk. Kennedy couldn't see me, thank God, but I could see part of her shadowed form from my angle.\n\nWhen the latch to the door clicked loudly behind me, I had never felt such dread and relief all at the same time. I was locked alone in a room with this creep, but Kennedy was on her way out with what she came for.\n\n\"Get over here princess, I don't have all night,\" he said condescendingly.\n\nKeeping my eyes on the floor, I crawled to where he was leaning against his desk. He slowly unfastened his pants and pulled out his cock.\n\n\"How about we start things off with an oral exam?\" he said chuckling from his poor pun. \"I promise, it'll be the first of many.\"\n\nKnowing I had to start before this could finish, I finally looked up. He wasn't that large, an inch or so shorter than myself, but surprisingly not grotesque. I sighed inwardly, but before I could move forward on my own, he grabbed a fistful of my hair and pulled my face against him.\n\n\"Get sucking slut,\" he snarled gleefully. \"That's your job now.\"\n\nShutting out his vulgar commentary, I opened my mouth and started.\n\nAs I did what he wanted, I found a little perspective. Not exactly what you think one might find on their knees being blackmailed and forcefully face-fucked. PTSD, a hate and distrust of all men, massive depression and self-esteem problems? Yeah, that's what most people find. I had been beaten up a lot in my life. Mostly because someone didn't like me, or wanted to look cool. I had never taken a beating to protect someone though, and that's what I was doing.\n\nThis wasn't exactly your ordinary beating, but I felt like it still applied. Don't get me wrong, it didn't make it any easier to take, but at least it wasn't for nothing.\n\nI didn't know how long I had been in his office, and he didn't stop at making me suck him off. When he finally finished with me, I pushed myself off his desk and back to my feet. I blocked out his words and his laughing as I pulled up my ripped underwear and jeans and redonned my bra and top.\n\nI didn't even hear what he said to me as I was leaving his office. I was sore and tired. Not even thinking about who might see me, I made my way out to the stairs.\n\nAs soon as I opened the door to the stairwell, I saw Kennedy sitting on the next landing down, staring back up at me. Her eyes were wet from tears. The moment she registered my appearance, she jumped up and ran to me.\n\n\"I'm so sorry!\" she started crying all over again. \"I'm so sorry!\" She wrapped her arms around me. \"I didn't know what to do. We're not supposed to be here...and you told me to go...and...\" her cries turned into sobs. \"I'm so sorry!\"\n\n\"Shhh,\" I soothed her, rubbing her back. \"Everything's okay. I just wanted you to get out,\" I continued in a calming tone.\n\nI held her for a few minutes before she quieted enough, and I was able to ask her, \"Does Abby know?\"\n\n\"No, I didn't say anything, and she couldn't hear what you said when I was under the desk,\" she said, stepping back to try and dry her eyes. \"I told her to keep watch and that I would call her back before I started crying over the phone.\"\n\n\"Thanks,\" I said flatly. \"I just don't want her to know that he...you know.\"\n\n\"How are you not a mess right now?\" Kennedy asked, hugging me again. \"And what did you mean by you've made your decision?\"\n\nSitting down, a little gingerly, I told Kennedy about how he found out about me and tried to blackmail me with jail and expulsion. I even told her the real reason I decided to risk getting her file tonight, that I planned on telling him to go fuck himself. It was to be my last night of freedom. I had nothing to lose.\n\n\"I can't believe you didn't tell us,\" Kennedy said. \"We're your best friends. We're supposed to be there for you for these kinds of things.\"\n\n\"If I said anything, we all would have just been depressed the whole night,\" I said. \"I just wanted to make sure I was able to help you before I was gone.\"\n\n\"You are the best friend I've ever had, you know that right?\" Kennedy smiled sadly. \"So, are you really okay?\" she asked worried.\n\n\"I think so,\" I sighed. \"I'm a little sore. Probably a few bruises, but nothing that won't heal.\"\n\n\"I meant...mentally,\" she clarified. \"I mean you were just...raped,\" she said sadly.\n\n\"I took a beating for a friend,\" I said, wanting to avoid that word right now. \"You're good, so I'll be good too.\"\n\n\"Is it that simple for you?\" she asked.\n\n\"You've never done something you didn't want to because you've had to?\" I asked. \"I made the choice. I could have still said no. It might not have worked out that well for either of us at that point, but it was still a choice,\" I explained. \"I vaguely remember a security guard you had to bribe when you were still in high school,\" I remembered. \"Did you feel completely traumatized?\"\n\n\"No, I guess not,\" she thought for a moment. \"But this isn't the same thing. This is Decker. That guy is a grade A creep.\"\n\n\"Did it suck?\" I asked after a moment, thinking about how to get it through to her. \"Yeah, but I'm not going to cry about helping a friend...and you shouldn't either.\"\n\nShe was quiet for a few moments, trying to process it all.\n\n\"It's time to go,\" I told her, finally climbing back to my feet. \"Call Abigail and tell her we're coming out.\"\n\nKennedy let Abigail know, and we got the all clear. As we were walking through the bottom floor towards the exit, I realized that I had almost forgotten why we were even here.\n\n\"So, who's your dad?\" I asked.\n\n\"Dunno,\" she replied, still dazed. \"I couldn't bring myself to look while you were...you know... Besides, now we can all find out together.\"\n\nI just nodded. I guess that made sense.\n\nWe reunited with Abigail, and Kennedy and I put on brave faces as we walked back to our dorm. Kennedy clutched to two things the whole way back, her folder, and my arm, both tightly and with great care.\n\n*** *** ***\n\n\"So, do you want a drum roll or something?\" Abigail asked once we were back in our room.\n\nKennedy looked to me as I gently took a seat on the edge of the bed. I could tell she didn't want to be insensitive; the best night of her life falling on one of the worst of mine. I gave her a quick subtle nod and a little smile.\n\nShe opened the folder and her eyes quickly scanned the series of papers. She shuffled through them and began to look worried as she slowed down to read each one individually.\n\n\"It's not here,\" she whispered, staring blankly at the pages.\n\nTears began to form in her eyes, and they flicked towards me for a second before she turned away ashamed.\n\n\"It's okay,\" Abigail said, moving to comfort her. \"There's a bunch of papers here. It's not over yet. I bet you there's something in here that will tell us something. There's got to be. We get one small detail and then we can-\"\n\n\"You don't get it!\" Kennedy said. \"It's not okay. I'm so sorry Lexi. I should have never...\"\n\n\"Don't start with that,\" I told her firmly before she could break down completely. \"You were the first person to know about me, and you didn't ask anything of me. You didn't even care. You just wanted to be my friend,\" I said. \"I didn't help you just because it was a sure thing we would find your dad. I would have done it even if it was a long shot. For you, it was worth it,\" I finished with a meaningful look for those last words.\n\n\"I love you!\" Kennedy said fighting back a sob as she squeezed me in her arms yet again.\n\n\"Uh, Kennedy?\" Abigail said, breaking up our little moment. \"Did you see this?\"\n\n\"See what?\" she asked, her attention quickly refocused.\n\n\"There's a second name here...another student's name,\" Abigail said. \"Another student that was admitted as a result of an endowment from your dad.\"\n\n\"Who?\" Kennedy and I asked together, all eyes on Abigail.\n\n\"Skylar Lawson...\""
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "college",
        "dubcon",
        "lesbian",
        "oral",
        "school girl",
        "transgender",
        "transsexual"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/womens-studies-ch-13"
}