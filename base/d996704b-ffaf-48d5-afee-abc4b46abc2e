{
    "title": "The Lowlander Pt. 01",
    "pages": [
        "You know TFW your brain baby isn't as perfect as you imagined it would be yet it's been months and months and nothing's changed? So you're just okay with it and decide to move on? Yes, that's what happened here.\n\nComments and e-mails are always appreciated! Yes, I reply to them all (as long as they make sense -- lol!)\n\nCheck out my bio for more info and artwork for 'The Lowlander'.\n\nPart I\n\n\"Stop it.\"\n\nHanna rattled the chains that bound her to the earthen floor, her knees scratched and bruised from the hours she'd spent on them. She looked longingly at the large windows, knowing full well that given half the chance, she'd throw herself out of it, come what may.\n\nThe coven had a mission to complete -- their final mission before they were dissolved altogether. When Mistress Linette had passed two days ago, no one had expected it, even Linette, who'd been a talented prophet. She hadn't appointed a successor and the High Council had determined there wasn't going to be another in their little town of Caverna.\n\nHer coven sisters had been on their last pilgrimage to Eden Coast to scatter Linette's ashes when they'd trespassed on scared Lowland territory. It had been a stupid plan -- they'd all known the risks but passing through the Lowlands was a significant shortcut.\n\nIt really hadn't been worth getting caught by the native Lowland tribe.\n\nShe watched the tall woman who captured her sit heavily on her bed and work on the sets of ties that held her boots together. She worked meticulously, her long fingers moving quickly over the leather.\n\nJem, they'd called her. No last name. A warrior, and a skilled one from the way she'd deflected Hanna's every attempt to escape. But not quickly enough -- the angry red marks on Jem's cheek and neck gave Hanna a sense of pride... and a little bit of regret for marking a beautiful canvas.\n\nJem's muscles were well-honed from years of training; the way they flexed and relaxed as she worked was intriguing. Her blonde hair was cut short, much to Hanna's envy. It wouldn't get in the way of battle as her own dark tresses had done several times before, despite the fact that she always wore it in a thick braid. But the cutting of hair or altering the body in any way was considered sacrilegious by the coven.\n\n\"Are you done?\" Jem's low voice cut across the room.\n\n\"What?\" Hanna asked, trying not to wince at the scrape of rusty metal against her wrists.\n\n\"Fighting the restraints will only hurt you.\"\n\n\"That doesn't mean I won't try.\"\n\nJem shrugged and stood in her bare feet, her toes digging into the bearskin rug around the bed as she stretched. The pop of her joints could be heard all the way across the room.\n\n\"How long do I have to stay this way?\"\n\n\"Until the Council decides what to do with your coven.\"\n\n\"I would like to see my sisters.\"\n\n\"No. That only spells trouble.\"\n\n\"It was stupid,\" Hanna said, her voice barely a whisper. \"We shouldn't have trespassed. It was just the closest way to the Coast.\"\n\n\"I know.\"\n\nJem tugged her vest over her head and let it fall to the floor. The quick intake of breath across the room was unmistakable.\n\n\"Are you uncomfortable?\" Jem asked over her shoulder.\n\n\"No.\" Hanna's chin tilted defiantly.\n\nJem sluiced chilled water over her overheated body from a pitcher by the bed. It had been a long, tiring day, and the little trespassers from the Highlands had only added to the long list of duties on her schedule.\n\nHanna watched the muscles work on Jem's back, the broad shoulders and their subtle strength mesmerizing in a way she'd not seen before. Never had she known that women could be so... well muscled. Stately. Handsome, even?\n\nShe looked away, feeling her face flush with heat. Then she heard the telltale creak of leather britches and shut her eyes. She shouldn't look. This felt wrong. The splash of water reached ears followed by a hiss of pain. Her eyes snapped back to the lithe form by the bed, eyes narrowing on the nasty gash on Jem's thigh. Rivulets of blood ran down her dark skin and wet the carpet by the bed.\n\nKnife wound. \n\n \n\n\"You need to put a salve on that before it gets infected.\" The words left Hanna's lips before she could stop it.\n\n\"I need to clean it first.\" Jem ran a cloth over the wound.\n\n\"I can help.\" Hanna offered, rattling the chains.\n\nA surprised bark of laughter escaped Jem. \"I'm not that foolish, little girl.\"\n\nHanna sighed heavily. \"I can help you even with my hands in irons. Just lengthen the chains on the floor.\"\n\n\"No.\"\n\nThe words were final. Hanna looked down at her knees. The grit on the floor had torn through the soft material of her britches and the earth showed spots of blood. She bit back a frustrated scream as she tried to find a position that didn't hurt.\n\n\"Could you at least loosen the chains a little so I can sit down?\"\n\nThere was no response. Hanna watched as Jem wrapped a clean cloth around the wound and tucked the edges into the fold as though she'd done countless times before. Then she walked to a small chest and pulled out loose nightclothes, slipping them over her head.\n\nAnd finally, finally, Jem allowed herself to look over at Hanna, her small form crumpled pathetically in a corner of the room. Where was the fiery vixen who'd climbed Jem like a tree and used shackles to try and choke the life out of her?\n\nPerhaps it was time to loosen the shackles after all. As she knelt beside the chains, she noticed the small pools of blood under Hanna's knees.\n\n\"Little fool,\" Jem chastised. \"I told you not to fight the chains.\"\n\nHanna let her head fall forward, tired of fighting. \"Please just let me go.\"\n\nShe felt Jem's fingers on her chin, tilting Hanna's head to meet her eyes. \"You know I can't do that.\"\n\nHanna's eyes filled with tears and she tried to blink them back in vain.\n\n\"Don't do that.\" Jem's voice was soft.\n\n\"You don't understand. This was going to be our last mission. Our Coven mistress passed and we were going to scatter her ashes.\"\n\n\"You still broke a law trying to do that.\"\n\nHanna heaved a frustrated sigh. \"Please release me.\"\n\n\"No.\"\n\nBut the chains loosened a little and Hanna stretched her legs with a sharp cry of pain.\n\nJem cursed when she saw the extent of the damage the little fool had inflicted on herself. With a flick of the lock, she unchained Hanna and lifted her. Too tired to fight, Hanna merely asked, \"What are you doing?\"\n\n\"Your wounds need to be cleaned. Like you said, they'll get infected.\"\n\nShe laid Hanna on the bed and secured her shackles to the iron headboard, watching a flash of heat creep up Hanna's chest and neck.\n\n\"You're flushed,\" Jem commented, laying a hand on Hanna's forehead. \"You're not developing a fever, are you?\"\n\n\"No,\" she said, but Hanna only seemed to redden further.\n\n\"Good. Now lift your hips and I'll slide your britches off.\" When Hanna hesitated, Jem added, \"It's either this or I cut them off you.\"\n\nBalancing on her elbows, Hanna lifted her hips up and felt the cool breeze of the room slide over her bare thighs. A thin piece of cloth still covered her womanhood and the thought of it made her wonder if her face could possibly get any redder.\n\nBut Jem didn't seem to notice her nakedness. Instead, she concentrated on cleaning the cuts on Hanna's knees, her touch gentle and professional, almost indifferent.\n\nHanna shut her eyes, trying to ignore the small snicks of pain as the cool cloth passed over her wounds.\n\nThe next thing she knew, Jem was prodding her awake. She looked down at her knees, now properly salved and bandaged in clean cloth.\n\n\"Thank you,\" she said, her voice thick with sleep.\n\nJem merely gave her a curt nod. \"I suppose it would be cruel to set you back on the floor.\"\n\nHanna raised hopeful eyes to the woman seated on the edge of the bed. The kind woman who'd tended to her wounds despite the fact that Hanna had tried to choke her to death only a few hours ago.\n\n\"I'm sorry,\" Hanna said, her voice soft. \"I'm sorry for hurting you. I shouldn't have done it. You were only doing your job.\"\n\nJem started to turn away but Hanna stopped her by sitting up as far as the chains allowed.\n\n\"I mean what I say,\" she continued, reaching up to trace the angry red marks on Jem's face. \"I can't believe I did this.\"\n\n\"I've had worse.\"\n\nHanna shook her head, her fingers tracing the scars down Jem's neck. Sharp brown eyes watched her as Hanna assessed the damage her nails had caused. The light tan of her fingers contrasted beautifully with the smooth caramel of Jem's skin. She could feel the power under her fingertips, coiled, just waiting to be unleashed if Hanna made one wrong move.\n\nInstead, she chose to cup Jem's cheek as best as she could in her chains. \"Beautiful,\" she said, letting the word linger between them.\n\nJem's lips twisted in a sad smile. \"I still can't let you go.\"\n\n\"No,\" Hanna protested, cupping Jem's cheek a little harder. \"It's not because of that. You truly are beautiful.\"\n\nHanna could feel her cheeks heating again. Do it for your sisters, she reminded herself.\n\n\"I suppose you're beautiful as well, although I can't tell under all that dirt.\"\n\n\"Oh,\" Hanna retracted her hand and lifted it to her cheeks. Crusty bits of mud came away on her palm.\n\n\"I'll get some fresh water.\"\n\nWith a wet cloth and a little soap, Jem slowly washed away the mud on Hanna's face, focusing so intently on each section that she wasn't prepared for what she uncovered when she sat back.\n\nExotic. That's what Hanna was. Her eyes had been arresting from the start -- almond-shaped and black as sin -- but her arched brows and sharp cheekbones were stunning. Her lips were an enticing light pink, the lower lip curved generously, perfect for suckling. Little freckles spread across the bridge of her nose kept her from looking altogether ethereal.\n\n\"What?\" Hanna asked, a wry smile twisting her lips. \"Is there something on my face?\"\n\nJem cleared her throat. \"You have very unusual features.\" You're the most captivating woman I've ever seen. \n\n \n\n\"Um. Thank you?\" Hanna arched a confused brow.\n\nJem didn't clarify.\n\nShe reached over to set the cloth on the bedside table. In one quick move, Hanna flipped the chain link over Jem's head and pulled her close, their faces inches away from one another.\n\nJem only raised an eyebrow, undeterred by Hanna's antics. \"What are you doing?\"\n\n\"Testing the waters,\" Hanna said, moving closer to press a kiss on Jem's cheek.\n\n\"You should stop.\"\n\n\"Why?\"\n\nJem could only stare as Hanna started on the ties that held her modest white ensemble together. Inch by inch, she exposed the skin down to the swell of her breasts.\n\n\"Should I stop now?\" Hanna asked, her fingers lingering on the ties of her shirt.\n\n\"Yes.\" Jem's gaze was fixed on the exposed skin but her wits hadn't left her.\n\nHanna sat up a little further, letting the shirt fall off one shoulder to reveal the top of her left breast. Then she leaned forward and cupped Jem's unscarred cheek, holding her gaze steadily as she placed a soft kiss on Jem's hard lips.\n\nThey were unyielding. Seconds ticked by without a response from Jem. It felt like she was kissing a brick wall.\n\nHanna's face flushed and she pulled away, holding the sides of her shirt closed with her hand.\n\n\"S-sorry. I didn't --\"\n\nRough hands cupped her waist and pushed her back onto the center of the bed. The weight of Jem's body stole her breath before she could say anything else.\n\n\"I told you to stop.\" Jem's voice was low, guttural. The heat in her eyes made Hanna quiver -- she couldn't decide if she liked it. If she should like it.\n\nOne roughened palm clasped her throat, squeezing lightly. The other held her chains taut, preventing any movement.\n\n\"I know exactly what you're up to,\" Jem breathed against Hanna's ear, her teeth lightly nicking the soft flesh.\n\n\"I'm not-\"\n\n\"Shut up.\" The hand on her throat tightened. \"I'm going to enjoy you, little girl. My way, not yours.\"\n\nHanna couldn't mask the tremble that wracked her body. The intensity of Jem's gaze thickened her blood, awakened parts of her she didn't know existed.\n\n\"Please, I-\" she managed to say before Jem's lips covered hers.\n\nThe kiss was hard, punishing; the hand on her throat a reminder of what this was. This wasn't going to be the sweet seduction that Hanna had planned to facilitate her escape; it was going to be a taking, devoid of a gentle touch. And where would that leave her? Did she even care?\n\nHeat blossomed in her belly. Did she like that? Was the possibility of being taken by this woman making her melt? \n\nShe felt a tug on her braid and her hair came undone, scenting the air with the essence of roses.\n\nJem made a sound of approval at the back of her throat.\n\n\"Impractical,\" she said, running her fingers through the tightly wound curls.\n\nJem's fingers wandered over Hanna's soft exposed shoulder, the flesh beautifully pale and freckled against her own darker skin. She was very selective about the women she bedded -- and those instances were usually few and far between. She couldn't recall when she last had a woman. And definitely none as lovely as the fiery little fighter in her arms just then.\n\nHanna trembled as Jem's fingers leisurely followed the swell of her breast, still half-hidden by the fabric of her shirt. When Jem's fingers thumbed a taut peak over the cloth, Hanna's breath caught in an audible gasp. So Jem did it again. And again.\n\nHanna knew Jem was just toying with her but that didn't stop her body from tightening into a knot of need. She hadn't known being with a woman could feel this way. She'd fooled around with men -- boys, really -- before she'd joined the coven, and those experiences had been exciting at first but eventually lackluster. None of those boys had taken their time to explore the crevices of her body; they'd never bothered to learn what she liked, what she craved. They hadn't held her gaze so intensely as they leaned in for a kiss.\n\nHanna's eyes closed on contact, her fingers clenching into fists in the shackles, wishing they could delve into Jem's blonde locks to hold her in place. Instead, she settled for slipping her tongue between Jem's lips, seeking the contact she so craved.\n\nShe felt fingers wander down to her thigh but the heat Jem's mouth created overtook everything else.\n\nJem heard a whimper and opened her eyes. Hanna's eyes were dazed, her lips a beautiful, well-suckled red. As Jem ran her thumb over them, Hanna's thick bottom lip parted on a sigh.\n\n\"You're the most exquisite woman I've ever had in my bed.\" Jem's voice was barely audible, as though she were revealing her darkest secret.\n\nHanna could just make out the words over the frantic drum of her heartbeat. The shackles rattled again as she tried to reach for Jem, only to be waylaid by the thick ropes of metal.\n\n\"I like you in chains,\" Jem murmured against the exposed skin of Hanna's chest. Her teeth scraped against the top of one breast and Hanna squirmed from the sharp unexpected contact. \"You can't deny me anything this way.\"\n\n\"W-what are you going to do to me?\" Hanna's voice was breathy with need.\n\n\"This,\" Jem said a moment before she tugged a nipple with her thumb and forefinger.\n\nHanna's back arched and a loud moan echoed in the room.\n\nJem soon replaced her fingers with her teeth, pushing the light cloth aside to lave, nip and suckle on the beautiful pink offering. Hanna, with her hands bound, could do nothing but watch as Jem's tongue whipped her into heights of frenzied pleasure she'd never known before.\n\nHanna had melted -- her bones had dissolved into lax puddles and her sex was aching and unsatisfied, the wet cloth of her underclothing clinging to the already parted lips.\n\nThen she felt the swipe of Jem's tongue on one breast and the pinch of her fingers on the other. The pleasure spiraled. There were no words -- the dual sensations, each so very good and so very different, coming together like a whirlwind in her body. It was... indescribable.\n\nShe tugged on her chains, needing desperately to hold on to something as she felt a wave crest inside her. Her harsh pants echoed the room as she reached for that elusive release, legs quivering, core melting. And then she felt a lithe hand slide between her palms, seeking a connection, and she held on. Held on as the waves of release crashed over her, pulled her under.\n\nWas it possible to drown in pleasure? It certainly felt possible. She'd only experienced climaxes while playing with herself when she'd been younger. She hadn't even thought of sexual matters in years. And it certainly hadn't felt anything like what she'd just experienced. Maybe she'd been doing it wrong...\n\nHanna blinked. And blinked again. Her vision couldn't seem to focus and her limbs were numb. She couldn't get past the word 'I' when her lips moved. So she lay back and let the languor take over, feeling it ebb and flow like a tide in her core.\n\nWhen she returned to some degree of normalcy, soft brown eyes greeted her.\n\n\"That was... I've never... It was good.\" Hanna winced at her own words.\n\n\"Just good?\" Jem asked, her fingers running over Hanna's jawline. \"Maybe I should try a little harder.\"\n\nHanna groaned. \"I think that'll kill me.\"\n\nA genuine smile curled Jem's lips and Hanna couldn't look away. The woman was captivating; her smile was so mesmerizing that Hanna felt her own lips turn upwards.\n\nHanna leaned forward and placed a kiss on the base of Jem's throat, inhaling the scent of soap and woman. She saw more than felt the goosebumps rise to the surface on Jem's skin. Her tongue came out to play as she licked a trail up to Jem's jawline, where she placed a single kiss.\n\nBut before she could coax a proper kiss from Jem, Hanna's stomach growled loudly. Embarrassingly. She pulled back quickly as her cheeks flushed.\n\n\"Did the guards not feed you?\" Jem asked, already sliding off the bed for the small bowl of fruit in the corner of the room.\n\n\"No. They weren't very charitable.\"\n\n\"They usually aren't when you trespass and then try to choke their commander in the village square.\"\n\n\"I already said I was sorry,\" Hanna grumbled, struggling to sit up in her chains.\n\nJem returned to bed and helped Hanna into an upright position.\n\n\"Here,\" she said, offering Hanna a slice of an apple. Hanna took it gratefully.\n\nShe ate in silence for minutes. Jem simply watched her, saying nothing. Hanna found the silence excruciating. The sound of her chewing seemed to echo through the room.\n\n\"I don't think this is what the Chief expected when he ordered me to keep a close eye on you,\" Jem's words pierced the silence as she lifted another slice of apple to Hanna's lips.\n\n\"You are doing a very good job of keeping an eye on me. It's not like I could go anywhere.\" Hanna rattled the chains.\n\nJem said nothing.\n\n\"So, uh...\" Hanna scrambled for something to say. \"How long have you been Commander?\"\n\n\"A few years.\"\n\nHanna nodded. \"Good answer. Very specific.\"\n\nJem's lips twisted upwards just a tiny bit. \"How long have you been with the coven?\"\n\n\"Ten years now. I joined when I was sixteen.\"\n\n\"A long time,\" Jem commented, raising another slice of apple to Hanna's lips.\n\n\"It is.\" Hanna chewed thoughtfully. \"I was terribly unhappy at first because I didn't really have a choice. My parents passed when I was very young and my grandmother cared for me until she died. After that, I had to fend for myself. The Coven offered food and board in return for my service.\" Hanna shrugged.\n\n\"I'm sorry,\" Jem said, her gaze softening.\n\nHanna shrugged again. \"Don't be. It was a long time ago.\"\n\nMore silence as she ate.\n\nThen Hanna asked, \"Tell me a little about you.\"\n\n\"Why?\"\n\nHanna face flushed. \"We've been intimate... and I would like to know you.\"",
        "\"What would you like to know?\"\n\n\"How old are you?\"\n\n\"34.\"\n\n\"Were you born in the Lowlands?\"\n\n\"Yes.\"\n\n\"Do you... do you have a wife?\"\n\nJem's eyes narrowed. \"No.\"\n\n\"Why?\"\n\n\"What do you mean 'why'?\"\n\n\"Why aren't you married?\" Hanna asked, reaching into the fruit bowl and popping a grape into her mouth. \"You're very attractive, you've got a high-ranking position, decent accommodations... what more could a woman want?\"\n\nJem said nothing. Instead, she asked, \"Are you done?\"\n\n\"Almost,\" Hanna replied, helping herself to more grapes. \"And you didn't answer my question.\"\n\n\"Are you always this invasive?\"\n\n\"Yes.\"\n\nJem set the bowl aside with a sigh of exhaustion. \"I haven't found someone I can trust. What about you?\"\n\n\"What about me?\" Hanna asked, finishing the last of the grapes.\n\n\"Why aren't you married?\"\n\n\"I can't be married. I devoted myself to the Coven for years. Although now that we've been dissolved, I suppose I'm free of that vow.\"\n\nJem didn't meet her eyes. Instead, she busied herself with getting a clean cloth to wipe Hanna's hands.\n\n\"So, what now?\" Hanna asked.\n\n\"Sleep. It's been a long day.\"\n\n\"Oh.\" Hanna didn't have to say more to convey her disappointment. \"Could I maybe have a kiss goodnight?\"\n\nJem stared at Hanna for the longest time before her gaze drifted to her lips. Hanna ran her tongue over them, hoping they were as swollen and enticing as they felt.\n\nWhen Jem didn't move, Hanna simply said, \"Please.\"\n\nJem felt her control unraveling. Goddamn but she wanted this girl, with her smart mouth and quick reflexes. She was a skilled warrior in her own right and that made Jem want her even more. But those lips... people should be warned about them. They glistened in the low lamplight and Jem was powerless to resist them.\n\nShe tasted unbelievably sweet, her lips deliciously thick under Jem's tongue. Her whimpers -- dear God -- Jem was only a woman, how could she resist deepening the kiss, sliding her tongue against Hanna's. Jem's fingers cupped the nape of Hanna's neck, holding her in place as their tongues dueled.\n\nWhen she pulled back, they were both breathless. Hanna's eyes were glazed over, her lips more swollen than before. She was panting, her shoulders trembling.\n\n\"Please,\" she said again, and Jem didn't have the will to deny her.\n\nHanna struggled against the chains, her hands itching to delve into Jem's hair and hold her in place. As she was pushed back on the bed, she felt consumed by Jem, her very being focused on the one person that overruled everything.\n\nJem grasped the curve of Hanna's hips and pulled her closer, sliding a knee between her legs. Hanna whimpered deep in her throat upon the light contact, her hands straining against the chains yet again.\n\nJem took her time, her fingers roving down the exposed vee of Hanna's shirt, stopping just short of her navel before moving back up again. All the while, she got closer and closer to Hanna's breasts but didn't touch them, merely outlined their shape through the cloth.\n\nNot again, Hanna thought. No more teasing. Please!\n\n \n\nHanna raised her free leg and entwined it around Jem's waist, pulling her closer so they were chest to chest.\n\n\"Touch me,\" she begged, her voice low.\n\nJem slid her lips against Hanna's, her fingers tracing the bare leg around her waist and marveling at the soft skin. When she got to the soft swell of Hanna's bottom, she gave it a sharp slap, making Hanna gasp in surprise.\n\n\"What was that for?\" she asked, eyes wide.\n\n\"For trying to rush me. I mean to take my time.\" Jem's voice was low. She dug her fingers into the soft roundness of Hanna's bottom.\n\nHanna took a deep breath, trying to calm the storm of desire swirling inside her. She tugged at the chains again subconsciously, feeling the need to control something, anything about her own pleasure.\n\n\"Everything about you intoxicates me,\" Jem whispered against Hanna's breasts, her fingers now caressing the crease between Hanna's thigh and womanhood. \"Why is that?\"\n\n\"I- I don't know.\" Something in Hanna's brain had lapsed at the contact so close to her needy core. She wiggled under Jem's weight, trying to get those fingers closer to where she needed them most.\n\n\"If you move even a little bit more, you're going back to the floor.\"\n\nHanna stilled under Jem's unwavering gaze, aching with need.\n\n\"That's a good girl,\" Jem praised as she took Hanna's nipple into her mouth.\n\nHanna gasped, pulling on the chains reflexively, as Jem began to suckle. She didn't know how long she laid there, feeling the tug and pull of Jem's lips lighting a fire in her belly. She lost track of time, of how many times she'd said 'please'.\n\nWhen she finally felt fingers at her core, her eyes closed as she shuddered. Jem's fingers traced the shape of her nether lips, dipping into the well of moisture gathered there. With two wet fingers, Jem flicked upward, tracing the outline of Hanna's sensitive pink button.\n\n\"Oh goddess, yes,\" Hanna whimpered, throwing her head back. \"Please, yes.\"\n\nHer words, repeated on a loop, made little sense, but she couldn't stop them as Jem's fingers worked over the same spot repeatedly. Her breath coming out in harsh, quick pants, Hanna spiraled towards the peak.\n\n\"Please, Jem. I want to ride you.\"\n\nShe hadn't even been aware that those words had been queued on the tip of her tongue. But her eyes popped open when she heard the telltale snick of chains unlocking. When she lifted her hands, she found herself free.\n\nHer eyes drifted up to Jem's, their dark, raw intensity shocking her. She reached up and sank her hands into Jem's short locks, sighing in contentment at finally being able to feel the soft blonde hair between her fingers.\n\n\"Kiss me again, Jem,\" she whispered, pulling her lover close.\n\nHanna kissed Jem hungrily, whimpering when Jem's fingers began moving across her wetness.\n\nIn a quick move, she pushed Jem against the headboard and straddled her waist.\n\n\"Now, fuck me.\"\n\nTwo fingers entered her swiftly, making her cry out and shudder. She held on to Jem's shoulders, leaning back to get the full thrust of her fingers.\n\nJem was a very talented woman with exquisite fingers. Hanna could barely breathe with every thrust, every curl, every flick. She rocked her hips in time with Jem's fingers, feeling the edge coming closer.\n\n\"Mark me,\" Hanna breathed. \"Mark me, Jem. Make me yours.\"\n\nShe felt Jem's teeth sink deep into her shoulder, marking her, owning her, drawing blood. The sharp pain pushed Hanna over the edge, and she fell into the waiting pool of release in Jem's arms.\n\nShe was resting on the warmth of Jem's chest when she awoke. Callused fingers slowly threaded through her long curls in an action so soothing that it nearly pulled Hanna back into a sleepy stupor.\n\nInstead, she fought it and looked up at the beautiful face of her lover.\n\n\"Hello,\" she said, her voice a little rusty. \"I believe it's time I gave you pleasure.\"\n\nJem smiled as Hanna pulled her lips down for a thorough kiss.\n\n*\n\nJust before dawn, Hanna stood in front of the open window, her hair once again in a tight braid. Jem's mark on her shoulder stung fiercely, but she wouldn't think about that now. The mark had been key. She knew if Jem claimed her, she'd never be in chains again. It was law, even here in the Lowlands, to respect the ones you claim as your own.\n\nHanna studied the horizon. She would have twenty minutes to free her sisters and head towards the coast before the Lowlanders started their day and realized the captives were missing.\n\nShe turned back to the bed, her heart heavier than she could imagine.\n\nJem. \n\n \n\nHer resting form was beautiful. Her face had lost most of its tension. One hand was stretched out to Hanna's side of the bed, as though her sleeping form still sought Hanna's warmth.\n\nJust as Hanna was about to turn away, Jem stirred. Hanna held her breath as Jem's eyes blinked open, seeking.\n\nMake the jump. Do it now. \n\n \n\nBut Hanna couldn't. Instead, she stood by the window and watched Jem's eyes focus on Hanna's still form. Their eyes caught and held in the dim light. Hanna's throat thickened with words she couldn't -- or wouldn't -- say.\n\nThen, as she watched, Jem turned over, away from Hanna, away from the beauty of what they'd shared mere hours before. An ache like none other settled in her heart as Hanna took in Jem's token of defeat.\n\nI haven't found someone I can trust. Jem's words echoed in Hanna's head. Well, Hanna thought. You really shouldn't have trusted me. \n\nBefore she could waste any more time, Hanna hurled herself through the open window and landed softly on the grass below. She was still on a mission and her sisters depended on her.\n\n*\n\nPart II\n\nThe marauders appeared from nowhere. The woodland patrol had been slaughtered within minutes, leaving the village wide open for attack. Jem mobilized her army but she knew they were already on the losing end. But damn if she'd let these gold-mongering dogs invade the village she'd sworn to protect with her life.\n\nThe Lowland treasure was just a myth -- or the wealth of gold had simply diminished over the centuries. Although the village had a modest treasury, it certainly didn't match up to the tales of opulent gold and diamonds passed from one lowlife to another. If only these monsters could distinguish tall tales from reality.\n\nJem grunted as her sword clanged against a beast of man's. He was strong, well-built, but she'd seen bigger men fall. She wasn't deterred from swinging low, aiming for his legs. He fell backwards, expecting her move and avoiding her sword. A quick whistle from his lips brought others barreling towards her.\n\nShit. \n\n \n\nShe raised her sword, now in a defensive position, ready to ward off the onslaught of blind swings from the troupe of men who were filthy from having gone unwashed for months. The scent of their stench overwhelmed her as she deflected blows, the clang of swords deafening.\n\nShe was being pushed backwards. She knew she needed an offensive strategy. Any minute now, one of these brutes would trip up and she'd seize the opportunity to take at least one of them down.\n\nSo she held her breath, waiting for her moment, her sword arm starting to hurt something fierce. And then the inevitable happened -- one of the brutes fell to the ground with a surprised grunt.\n\nJem took the opportunity to swing forward, catching the biggest brute unawares in his chest. The sword sliced through his chest in half a second, sending him staggering back. The third invader tried to make a run for it but Jem's dagger caught the back of his neck and he fell face first into the earth.\n\nThe battle raged on around her. As she turned, a white arrow whizzed past her ear, just narrowly missing her. She heard a grunt a few feet behind her and watched another body fall to the ground. She instinctively ducked low and searched the trees. Her archers hadn't been mobilized -- it had been too late. She'd needed her army on the ground as the perimeters had already been breached.\n\nShe didn't have time to think about this. Her people were still under attack. She raised her sword again and stood, running for the swarm of men around her second commander, Finn. With one swing, she cut through two men.\n\n\"About fuckin' time,\" Finn grunted, her tan skin already drenched with blood. Not her own, Jem hoped.\n\nThey went through the marauders quicker than expected, the white arrows still whizzing by them every few seconds.\n\nThe village square looked like a battlefield by the time they were done -- the place where the tribe's children played during the day and the villagers held festive dances during feasts. It was all covered in blood and brains.\n\n\"I need to know how many we lost.\" Jem said as they caught their breaths.\n\nFinn sheathed her sword. \"I'll have the numbers to you within the hour, Commander.\"\n\nJem knelt behind a filthy fallen man and pulled an arrow from his back. The body twitched, spewing blood from the point of injury.\n\nShe wracked her brain, trying to recall the colors of tribes in the area. None of them were white with a painted black tip. And most tribes were located too far to have made it in time to protect Goldhurst.\n\n\"I count 42 arrows.\" Finn stood by Jem's side, boots planted widely apart, still poised for danger.\n\n\"Who?\"\n\n\"Don't know the colors, Commander. But I'll find out.\"\n\nThe slight rustle of leaves was their only warning before a figure fell from the trees, landing on her knees in the dirt ten feet away. Finn drew her sword.\n\n\"Ease up, Second Commander. I would've killed you already if I wanted to.\"\n\nJem would've recognized that voice anywhere.\n\nIt was her.\n\nJem's blood boiled; her hand itched to draw her own sword. She felt her hands curl into fists as she watched the woman sling her bow over her body with ease.\n\nShe was covered in mud -- the perfect camouflage for her vantage point in the trees. Jem knew she should be thankful for the help -- god knew they'd been outnumbered. But the cloud of anger wouldn't dissipate.\n\n\"Who are you?\" Finn asked, her sword still drawn and raised.\n\n\"Don't you recognize me, Finn? My sisters and I were your prisoners only a fortnight ago.\"\n\nFinn's eyes flitted briefly to Jem's still form, noting her commander's stoic silence.\n\nAnother figure fell from the trees a few feet away, the form similarly slight and covered in mud.\n\n\"I'm Hanna. That over there is my sister, Bonnie.\"\n\nAn arrow landed at Hanna's feet, making her laugh, her teeth starkly white against the mud.\n\n\"And in those trees,\" she pointed to a cluster ten feet away from where they stood, \"is Kara. I'm guessing she's stuck. Otherwise, she should be down by now.\"\n\n\"I'm not stuck,\" came the faint voice in the trees. \"I'm just... looking out for more marauders.\"\n\nHanna rolled her eyes. She turned to Jem and Finn. \"You're very welcome for the help, by the way. You were in a lot of trouble. Lucky for you, we weren't too far off when we heard swords clashing.\"\n\nJem looked at Finn and nodded towards the trees. The message was clear: \"Help Kara down.\"\n\nThen she turned and walked away. De-briefing for her army would start soon and she needed to prepare.\n\n\"That's it?\"\n\nJem disregarded the voice and kept walking. Yes, she was grateful for the help but she couldn't bring herself to face this woman. Not after what she'd done -- the anger and self-doubt she'd inspired. It was easier without her. Things were stable, sane. No pain, no tears of regret. Wondering how stupid a person could be. How betrayed.\n\nSo Jem walked away and took stock of the fallen, mentally ticking off a list. Some of the trainees -- who had no business being on the field and were expressly forbidden from it -- were facedown on the earth, their blood-drenched colors painful for her to take in. As she walked to the edge of the square, she counted thirty. Thirty fallen soldiers, excluding those on patrol. Thirty souls she would have to account for. Thirty families to visit, thirty apologies to deliver.\n\nShe sighed aloud but made sure her face remained stoic; some of the villagers had come out of hiding, the little ones peeking at her from behind full skirts. They were safe -- that's all that mattered. Not one of them had fallen; Jem took comfort in that.\n\nPaula, a kind woman in her thirties who ran a shelter for the village orphans, handed Jem a bucket of fresh water as she passed her abode. Jem didn't have to look down to know she was covered in a thick mask of blood -- none of them her own, thank god.\n\nShe thanked Paula and bent low to wash her face and hands.\n\n\"Are you hurt, Commander?\" Paula asked, her voice soft.\n\n\"Are you hurt, Commander?\" The second voice came from behind Paula's skirt. A girl, maybe three years old, with an adorable lisp. She probably mimicked everything Paula said. Jem smiled.\n\n\"No, sweetheart, I'm not. Don't you worry.\"\n\n\"But the bloods...\" the young one said, pointing the red rivulets of water flowing into the drain.\n\n\"It's not mine. I'll be here to protect you for a long time.\"\n\nThe girl smiled, revealing uneven teeth and chubby cheeks. Jem felt her heart flutter with longing as she reached out to ruffle her hair.\n\nShe stubbed out the emotion quickly and straightened.\n\n\"You can't ignore me forever.\" The voice came from directly behind her. Jem ignored it and kept walking. The woman simply wasn't worth it.\n\n*\n\nHanna watched Jem walk away from her and blinked back tears. What had she thought? That she could simply return to Goldhurst and Jem would welcome her with open arms? Maybe say, \"Come here, beautiful. I understand why you left\" and kiss her silly?\n\nStupid -- that's what Hanna was. A na\u00efve fool. She'd hurt Jem, probably a lot worse than she'd ever understand. Now the woman wouldn't look at her or even talk to her.\n\nBut Hanna wouldn't be dissuaded. She'd made a decision -- a really terrible decision that had been out of her hands. Her loyalty to the Coven came first, above everything else. Even her own happiness. But she needed to make up for it. Ask for forgiveness; make it right again.\n\nNow that Mistress Linette's ashes were scattered on the Coast, she was free. Free of her vows to the Coven and free to pursue what she wanted. And what she wanted, what she hadn't been able to stop thinking about over the past two weeks, was Jem. Jem, whose touch -- be it a caress or rebuke -- had warmed Hanna's core... and her heart.\n\nEven if she didn't find what she came for, she'd find forgiveness. Of that, Hanna was determined. So she followed Jem, keeping pace with her long, determined strides.\n\nJem was well-loved, of that Hanna was certain. The number of villagers who came forward to ask if she was hurt was heartwarming. Many offered her water and food, and children watched in awe as she sat by the stream and reverently cleaned her sword.\n\nHanna perched on a boulder close by and watched as a little girl made herself at home next to Jem, resting her chubby cheek on Jem's knee as she scrubbed her sword. Jem didn't seem to mind. She answered the kids' curious questions with more patience than Hanna could've mustered.\n\nHanna couldn't help but smile. Who would've thought that the gruff, stoic commander would have a soft spot for children?\n\nWhen she caught the eye of one of the kids, she gestured for him to come over. He dusted earth off his pants and ran over with all the enthusiasm of a five year old.\n\n\"Would you tell your Commander that Hanna says she's sorry and that we need to talk?\"\n\nHis brows furrowed but he nodded anyway, running back to the Commander with his message. He leaned in close to Jem to whisper it to her. But Jem didn't even look in Hanna's direction before she shook her head and thanked the boy for delivering the message.\n\nThe kid looked over at Hanna and shrugged with little sympathy.\n\nHanna sighed. This was going to be more difficult than she expected.\n\n*\n\nWhen Hanna walked back to the village square, the bodies had been cleared. The villagers were helping to restore damaged houses and clean blood off the ground. Hanna learned that they would feast tonight in celebration of their victory and in honor of the fallen -- a tradition she had heard about but never experienced. If her hometown of Caverna was invaded, the people would mourn for weeks, even months, in memory of the dead. Goldhurst seemed to pick the cheerier option.\n\nShe found her sisters on their knees, dressed in clean borrowed clothes, scrubbing the front doors of the church. Blood was spattered on the gold doors and ran down the stone steps. The harsh lowland sun had already congealed the mess.\n\nHanna watched them from the bottom of the steps, her heart filling with gratitude for the only two women who'd volunteered to help her. The other thirteen in her Coven had declined, citing they were too weary for a battle that wasn't their own. But these two, despite having trekked for almost a month through rough foliage, had offered their bows to save a few lives. Hanna was thoroughly grateful.",
        "\"I see they've recruited you in the cleanup,\" Hanna commented, making her way up the stairs.\n\n\"We volunteered,\" Kara corrected her, sitting back to rub the base of her spine. \"They seemed like they needed help.\"\n\nHanna sat on the top step, carefully positioning her bottom so she'd avoid the river of blood. \"Thank you for offering to come with me. I can't tell you how grateful I am.\"\n\n\"You're welcome,\" Bonnie said, flipping her blonde braid behind her back and dipping her cloth into the clean water. \"It's not like we have anyone or anything to return to in Caverna. This is a welcome distraction from that sad fact.\"\n\nKara agreed, slapping her cloth on the stone floor yet again. \"What happened between you and the Commander?\"\n\n\"Nothing. She won't talk to me.\"\n\nHanna picked up a clean cloth and played with the unraveling seam.\n\n\"I don't blame her,\" Bonnie said, in her usual honest way. \"If someone did to me what you did to her...\" She shook her head, unable or unwilling to finish that sentence.\n\n\"I know,\" Hanna said quietly.\n\n\"But, on the bright side,\" Kara chimed in, \"You know it only affected her because she felt something for you. You just need to prove to her how sorry you are to bring those feelings to the surface again.\"\n\n\"Hanna,\" Bonnie said, her voice serious. \"We know why you did it. We understand. All of us would have done the same thing given half the chance -- we were on a mission and that takes priority over everything else. But you're done now, done with your obligations. Show her that she's your priority, if you really want her.\"\n\n\"That's sound advice,\" Kara agreed, reaching back to rub her back again. \"But in the meantime, could you help us get this place clean? My back's on fire.\"\n\nHanna groaned and dipped the cloth in clean water.\n\nBetween the three of them, they managed to clean the small church from top to bottom in just under four hours. At the end of the day, they could barely stand up straight as they lugged the buckets back to the square.\n\nEveryone else had been hard at work as well. If she hadn't seen it with her own eyes, she wouldn't have guessed that a battle had taken place at noon.\n\nA few fires had started and fat hunks of meat roasted over them. Children sat around, awaiting their turn to rotate the dinner so that it cooked evenly. The brewery had broken out its stash of ale; the brewer handed out generous mugfulls to anyone who walked past. He was delighted to see Hanna and shook her hand with enthusiasm she felt in her spine. He'd seen what she'd done for their village and couldn't thank her enough.\n\nShe smiled through his praise and was about to pick up her mug when a large shadow fell on her. Her heart lurched in anticipation as she took in the feathered armor. But her face fell in disappointment when she realized it was only the Second Commander.\n\n\"I've never seen someone so disappointed to see me,\" Finn commented, taking in Hanna's frown.\n\n\"Sorry. I just thought you were-\"\n\n\"The Commander, I know. She's in conference with the Chief.\"\n\n\"I see.\" Hanna sipped her ale, looking down at her feet.\n\n\"But you'll see her later. She's obliged to attend the feast.\"\n\nHanna nodded, looking into the rapidly growing crowd.\n\n\"Your friend is very pretty,\" Finn commented, taking a deep gulp of her ale.\n\nHanna's eyes snapped to her in surprise.\n\n\"Well -- I suppose she is, but Bonnie's got the fiercest tongue of any woman I've ever met.\"\n\n\"Not Bonnie. I'm talking about Kara.\"\n\n\"Kara?\" Hanna's head tilted as she zoned in on the clumsy newest recruit of the Coven who was seated around a fire with Bonnie. She'd only known Kara for two years and she'd never thought her pretty. Perhaps cute, like one would consider a little sister. Adorably clumsy, with a little too much baby fat to go along with it. The girl trained just as hard as the rest of the sisters but found it hard to shed the weight. In spite of it, she was a fierce warrior and an excellent shot with a bow an arrow.\n\n\"Yes. Kara. The red hair is captivating. And those freckles on her cheeks...\"\n\nHanna smiled. Finn seemed to be genuinely mesmerized by Kara; she was unable to look away as Kara laughed and sipped her ale.\n\nThen she shook her head.\n\n\"It would be wrong.\" Finn straightened her shoulders and finished her ale. \"She's half my age.\"\n\nHanna looked up at the warrior, brows furrowed.\n\n\"Why aren't you married?\" she asked, watching Finn closely.\n\nFinn reached up to run her fingers through her hair. \"Uh -- I've been preoccupied with climbing the ranks. Marriage never seemed to be a concern.\"\n\nHanna made an approving noise at the back of her throat. \"Any mistresses?\"\n\n<br >Finn's face flushed. \"No, not anymore.\"\n\nHanna paused for thought.\n\n\"You're right, Second Commander. Kara's very young. And she's the loveliest, most trusting person I know. You could talk to her if you like but if you ever take advantage of her, I'll give my bow a workout. Understood?\"\n\n\"Yes, ma'am.\"\n\n\"Good.\" Hanna handed the brewer her cup for a refill. \"You didn't hear this from me but her back's aching from scrubbing the church all day. Perhaps you could help with that?\"\n\nFinn shared a smile with Hanna.\n\n\"Perhaps I could,\" she called over her shoulder as she walked toward Kara and Bonnie. Hanna watched as Finn sat next to them and joined the conversation with ease. Kara laughed at whatever Finn said, her cheeks flushing a little.\n\nMaybe there was something there after all...\n\n*\n\nA stranger handed her a change of clothes, thanking Hanna profusely for helping the village in a time of need. But it was Hanna who was more grateful than ever as she stripped off her muddy clothing at the stream and sluiced clean water over her overheated body.\n\nShe waded in and wet her hair, wishing she had her scented soaps to scrub herself clean. Instead, she settled for the calming effect of the water, feeling it ebb and settle around her body like a gentle caress, washing away the mud she'd lathered herself in for battle.\n\nHer heart was heavy. But she had to pay for her mistakes -- such was life. As she dragged herself to the bank and scrubbed her muddied clothes, she fought back tears.\n\nThe clothes she was given were just a little too big in the bottom and too short on top. The ensemble played with the conventions of modesty by leaving her midriff bare, but she soon realized it was the way of the lowlanders when she returned to the feast to find similarly dressed women. She just hoped Kara and Bonnie wouldn't be scandalized by it.\n\nDusk had fallen. The roast fires lit the night like beacons, beckoning villagers to the feast. Festive music permeated the village square as fiddlers and drummers broke out their instruments to signal the start of the celebrations. Women carved the roasted meat and handed out lean strips to those seated around the fires.\n\nHanna's eyes searched the crowd but she didn't find the person she was looking for. Sighing, she made her way to her sisters and Finn, and took a seat with them.\n\nFinn winked at her -- at least someone was having a good time.\n\nShe was handed a slice of tender meat, which she accepted gratefully. She hadn't eaten since that morning, when the coven had come across a tree that bore fat fruit. But before she could take a bite, a loud cheer erupted around her -- the loudest of which came from Finn. Startled, Hanna caught her plate just before it hit the floor.\n\nShe followed the direction of the villagers' gaze to find Jem, walking tall and proud with the Chief by her side. Hanna had no fond memories of the old man -- he had a foul demeanor and never seemed the type to crack a smile. It was his edict that had seen her in chains in the first place.\n\nPerhaps I should thank him then... Hanna thought candidly.\n\nAs the Chief took his seat on the raised stone throne in the center of the square, the villagers rushed forward with offerings of food. Each offering was sampled by a guard standing nearby before the Chief accepted it with thanks.\n\nHanna watched Jem, every bit the strong and stoic commander she was during the day as she carried out her duties to her village. But Hanna knew different -- a side of Jem that many wouldn't have seen, wouldn't know existed. She knew how that rough touch could turn gentle with a single 'please', a single kiss. How those lovely brown eyes could soften and glaze over with pleasure under Hanna's fingers.\n\nHanna felt the phantom pressure around her neck, just as she'd recalled countless times over the past two weeks. Goosebumps raised her skin as memories of that night came flooding back...\n\n*\n\nTwo weeks earlier\n\n \n\n\"Hello,\" Hanna said, her voice a little rusty. \"I believe it's time I gave you pleasure.\"\n\nJem smiled as Hanna pulled her lips down for a thorough kiss. Hanna's fingers stole beneath the collar of Jem's loose nightshirt, her small hands clasping the back of Jem's neck. She slipped her tongue between Jem's lips, wanting -- no, needing -- to get closer. To feel Jem all around her like a flame. To feel her fingers and tongue on every inch of skin that yearned for it.\n\nJem reached back and pulled her nightshirt over her head, baring her body to Hanna's gaze once again. Only this time, Hanna was allowed to touch the sculpted dark planes she'd so admired hours before.\n\nBut when her gaze locked with Jem's, her fingers stilled. The soft brown eyes that had been emblazoned with passion only moments before were now uncertain and sheepish.\n\nHanna let her fingers wander down the curve of a shoulder, down the arms that were strong enough to serve and protect. Jem's muscles jumped under her ministrations; Hanna could tell that she was trying her hardest not to flinch.\n\nHanna entwined her fingers with Jem's.\n\n\"What's wrong?\" she asked, scooting closer such that they were only a hair's breadth apart.\n\n\"I...\" Jem hesitated, biting her lip. \"I don't have the curves most women do. I'm not soft like you are.\"\n\n \n\nHanna blinked.\n\n\"And?\" she asked, leaning forward to place a quick kiss on Jem's generous lips.\n\n\"My body's not as pleasing-\"\n\n\"Stop.\" Hanna cut Jem off, her eyes daring Jem to say another word. \"Your body's beautiful. These muscles have protected your people for years. They only speak of your commitment to your beliefs, your loyalty to Goldhurst. These muscles are your badge of honor... and they're beautiful. You're beautiful.\"\n\nJem's eyes searched hers for evidence of falsity. Hanna met her unwavering gaze, the truth of her statement evident in the reverent strokes of her fingers over Jem's hardened stomach.\n\n\"So beautiful,\" Hanna repeated, her fingers dipping low to toy with the curls at the juncture of Jem's thighs. She watched as Jem's breath caught, her lips parting on a silent gasp.\n\nJem raised a leg and placed it on Hanna hips, drawing her even closer in the dimly lit room.\n\nHanna seeking fingers slipped lower into the welcoming warm heat of Jem's core. A powerful surge of desire and satisfaction rushed through Hanna as she watched Jem's throat work, her gaze never wavering from Hanna's.\n\n\"Lower,\" Jem breathed, her pupils dilating with pleasure as Hanna's fingers thrummed the button at her core.\n\nHanna obliged, her fingers slipping into the crevice that needed her attention most. Jem exhaled a deep sigh as Hanna slid her fingers in slowly, pushing past the tightness against her fingertips.\n\nSweat broke on Jem's forehead as Hanna withdrew her fingers and slid them back in, mimicking the rhythm Jem had set earlier.\n\n\"Faster,\" she breathed, her breath catching.\n\nA wicked smile twisted Hanna's lips as she shook her head. Consider this payback, Commander, she thought a second before rough hands clasped her throat. Jem's fingers pressed hard against her pulse points but carefully avoided her airway. Hanna's eyes drifted closed at the surprised spark of pleasure the aggressive move ignited in her belly.\n\n\"You think you're in control, little girl?\" She heard Jem's voice in her ear, her breathing harsh. Hanna was wise not to answer the question.\n\n\"You'll do as you're told. Open your eyes.\"\n\nHanna's eyes were glazed over with pleasure; Jem's words seemed to go straight to her core. The fingers on her neck only heightened the sensation.\n\n\"You're going to fuck me, little girl. And you're going to do it right. Curl your fingers.\"\n\nJem's large frame shuddered as Hanna did as instructed.\n\n\"Thrust.\"\n\nAnd just like that, Hanna felt the need to please Jem overwhelm her. Was it a need if it eclipsed her whole being, all her thought? Hanna's fingers renewed their vigor, thrusting in time to her heartbeat, Jem's moans of pleasure spurring her on.\n\n\"Oh god,\" Jem's breath caught on a moan as she shuddered, her core closing over Hanna's fingers. Hanna watched in fascination as Jem fell apart, her back arched like a bow, lips parted in a silent O.\n\nBeautiful. So beautiful. \n\n \n\n*\n\nJem stood next to the Chief, staring straight ahead, her eyes watchful for potential danger. The woodland guards had been reposted but the ease at which the marauders had infiltrated their defense was worrying. She knew she'd be up half the night re-organizing defense tactics and perimeters to ensure her people would be safe as they slept.\n\nShe caught sight of the woman seated around one of the feast fires with her sisters and Finn. But Hanna's face only held sadness as she stared into the flames, the hunk of meat uneaten on her plate.\n\nShe was wearing traditional feast clothing -- someone must have taken pity on her and lent them to her. If the sight of Hanna in her tribe's colors warmed Jem's heart at all, she ignored it. Instead, she tried hard not to focus on Hanna's bare stomach and the curve of her hips accentuated by the loose-fitting pants.\n\nJem took a deep breath and looked away, but the memory of rose-scented hair pervaded her senses. The feel of soft, pale curves under her fingers was a crippling memory.\n\nShe's yours, a voice whispered inside Jem's head. You claimed her. In the eyes of your people and hers, she belongs to you. \n\n \n\nJem closed her eyes and took a deep breath, fighting the anger, the pain, the deep, debilitating longing those words caused.\n\nThere was no going back. Hanna had made her choice when she'd left in the middle of the night, leaving Jem behind like a used toy, one that had served its purpose and was no longer required.\n\nBut if that was the case, why was Hanna back in Goldhurst? Why had she helped Jem's army against the marauders?\n\nShe felt a hand on her arm. The Chief gave her a nod, indicating that her duties were over. She caught Finn's eye in the crowd and the Second Commander rose in an instant. She bade a quick farewell to the sisters and walked over to take Jem's place.\n\nWalking through the crowd, Jem accepted a plate of meat from Paula and sat with the children, listening to their rendition of the battle earlier that day. She couldn't help but smile at their over-exaggerations but she didn't try to correct them. If these children wanted to remember her as a savior to all mankind, who was she to stop them?\n\nA shadow fell over her as she raised a mug of ale to her lips. She found herself eye-level with the delectable dimple of Hanna's belly button. Jem forced herself to swallow the ale in her mouth.\n\n\"We need to talk.\" Hanna's tone left no room for argument.\n\nJem simply raised a brow and looked away.\n\n\"Stop it. Stop ignoring me, Jem. You won't get rid of me that easily.\"\n\nHanna dropped to her knees, trying to catch Jem's gaze -- a seemingly impossible task.\n\n\"Jem, I'm sorry about how I left. I truly am. I had no choice -- surely you understand that.\"\n\nPaula, perceptive soul that she was, ushered the children away from the couple.\n\n\"Please, just-\"\n\nJem stood and poured the rest of her ale into the fire, not sparing Hanna a glance, sprawled on the earth. Hanna scrambled to stand as Jem walked away from her with long, quick strides.\n\n\"Don't leave!\"\n\nHanna's impassioned plea didn't slow Jem down one bit. So Hanna did what she was trained to do. She took a running leap, locking her legs around Jem's waist and throwing her arms around Jem's neck.\n\n\"You will listen-\"\n\nShe barely got the words out before she was forcibly set on the earth again, her bottom digging into the dirt. She stayed there, watching Jem disappear into a cluster of houses.\n\nKara and Bonnie were by her side in an instant.\n\n\"That was quite a scene,\" Bonnie commented, helping Hanna up.\n\nHanna swiped tears from her cheeks angrily, frustrated beyond comprehension.\n\n\"You know, Hanna, she doesn't seem to want to hear your apology. Perhaps we should just leave Goldhurst.\" Kara's voice was soft and hesitant.\n\n\"I can't.\" Hanna's voice was soft, pained.\n\n\"Oh, Hanna. There are others out there for you -- perhaps someone who'll actually listen to what you have to say? You don't have to put up with the rejection. You're a beautiful woman with a generous heart -- you'll find a mate in minutes.\" Kara's tried to reassure her but Hanna only shook her head.\n\nSlowly, Hanna slid down the sleeve of her top, revealing the claim on her shoulder.\n\nBonnie cursed. \"Of all the stupid things... How could you let her-\"\n\n\"Now's not the time!\"\n\nHanna and Bonnie's eyes snapped to Kara. They'd never heard her raise her voice before tonight. Kara enveloped Hanna in a hug.\n\n\"It's going to be okay, Hanna. Let's all calm down and talk about it. Finn has offered us a bed for the night.\"\n\n\"Are you sure that's for all of us?\" Bonnie snarked, crossing her arms over her chest.\n\nKara flushed. \"Yes, I'm sure. She won't be around for a while so let's use that time to talk. We'll help you fix this, Hanna. At least I will.\"\n\nBonnie rolled her eyes. \"I'll help, too.\" She conceded, expelling a long, loud sigh. \"Now, where's Finn's house?\"\n\n*\n\nThere was no easy solution to her problems -- that's what they agreed on after too much ale and too many tears. The damage had been done and it looked as though there was no turning back.\n\nHanna knew Jem was angry. She probably felt betrayed as well. Hanna didn't blame her. She could work with that anger, slowly chip away at it one day at a time by proving to Jem that she was in Goldhurst to stay. For good.\n\nFinn found Kara and Bonnie asleep on her bed when she returned from the tactical conference. But Hanna sat on the edge of the bed, her face twisted in a mask of determination.\n\n\"Are you well?\" Finn asked, shutting the bedroom door behind her.\n\nHanna shook her head without looking up. \"She won't even talk to me.\"\n\n\"I saw what happened. I think the whole village did.\"\n\nHanna's face flushed at the memory -- at being rejected in front of hundreds of people.\n\n\"Time heals,\" Finn said simply, slipping her armor over her head.\n\nHanna stood and headed for the door.\n\n\"You're not staying? There's still about a square inch of space left on my bed.\"\n\n\"No, but thank you.\"\n\nIn the dark of night, Hanna made her way up the steep hill towards Jem's house. She couldn't help but remember that the first time she'd made that walk had been in irons, with a guard dragging her along. She'd been scared, desperate. The last thing she'd expected to find at the top of that hill had been kindness. Passion. Maybe even...\n\nJem wasn't home -- that much was evident from the darkened rooms. It wouldn't take much to scale the modest house and enter through the large bedroom windows that faced the stream. But she doubted she'd be a welcome houseguest.\n\nHanna raised her hand to the wooden door, her fingertips moving silently over the dark carved wood. On the other side of the door were the vessels of her memories. The bedroom where she'd learned the soul of a person -- the bed where she'd finally come alive. The window that had determined her fate.",
        "She thought she could smell the fresh linen scent of Jem's sheets.\n\nSighing, Hanna moved away and seated herself on the porch with her feet dangling off the edge, listening to the faint sound of the rushing water in the distance. Dawn was fast approaching; the roosters at the base of the hill sent up their salutations as sunlight threatened to break over the horizon.\n\nHanna closed her eyes and leaned against the corner railings of the porch, feeling a welcome breeze waft over the hill.\n\nSleep claimed her almost instantly.\n\n*\n\nHanna had to praise Jem's skills of evasion. She'd somehow managed to successfully avoid Hanna for 2 full days, despite Hanna's attempts to corner her at first chance. <br ><br >But what Jem didn't know was that Hanna was a skilled tracker and she always found her target.\n\nFinally, Hanna thought to herself as she watched Jem trek a path into the woods. Perched on a high, curving branch, Hanna watched in the quickly dimming sunlight as Jem walked up to an old tree with massive buttress roots.\n\nHer posture was ramrod straight, fingers curved on the hilt of her sword as she listened for signs of danger.\n\nHanna froze on the branch, her breath catching in her lungs in case Jem heard her. Her palms dug into the bark of branch as she tried her best to hold still in a crouched position.\n\nThen, at last, Jem crouched at the base of the tree and leaned back against its massive trunk, stretching her legs out in front of her. She slowly ran her hands over its thick roots, her lips moving as she spoke. Hanna dipped her head low to get a hint of what Jem was saying, but she was much too far.\n\nTrying to make as little noise as possible, Hanna switched to a sitting position on the branch, watching Jem's face closely. Her features were relaxed, open, as though she was speaking to someone she cared about.\n\nIt was how she'd spoken to Hanna that night after... after they'd been intimate. It was how she'd looked as she'd held Hanna close in the darkened room, kissing the mark she'd made on Hanna's shoulder.\n\nHanna shivered at the memory, her fingers rising to trace the almost-healed scar. She'd been haunted by Jem's soft touch, her laugh, the little lines that formed around her mouth when she smiled.\n\nUnder the exterior she presented to the world -- the \"Commander\" that everyone knew -- she had a quiet soul and a loving touch that Hanna doubted many knew about. Hanna desperately wanted to feel that person again -- to know that she was the center of someone's world. To know someone wanted to touch her as badly as she wanted to touch them. For someone to take control for a little while.\n\nHanna watched quietly from her vantage point as Jem moved to a kneeling position and bowed her head in prayer. She placed two fingers to her lips and placed it on the leaf-covered woodland ground.\n\nHanna frowned -- was this a lowland tradition she wasn't aware of?\n\nJem stood again, brushing the stray leaves off her britches. Then she turned to leave. Except that she didn't take the route she'd taken into the woods. Instead, she walked towards the large tree Hanna was seated on.\n\nHanna's breath caught as she paused momentarily at the base of the tree before looking up. Their eyes locked for a second and Hanna raised a hand in an awkward wave of greeting.\n\nJem only shook her head and walked away.\n\nHanna didn't need a mirror to tell her that her cheeks had heated to a rich cherry red at getting caught spying. But she'd been so quiet -- how had Jem known?!\n\nSighing, Hanna scaled the branches and landed on the woodland floor with a slight crunch of leaves under her feet. She'd already taken two steps towards the large buttress tree before it occurred to her that she could be intruding on Jem's privacy.\n\nHanna bit my lip, considering. Yes, she wanted to uncover Jem's secrets but she didn't want to cross any lines.\n\nEven so... this was just a tree in the middle of the woods. How private could it be?\n\nHanna hesitantly made her way towards the behemoth of a tree and stood where Jem had. Something glinted in the dim sunlight and she bent low to get a good look at it.\n\nHesitantly, she brushed stray leaves with her fingers and unearthed a gleaming gold plaque that was scratched with age.\n\nTom and Celene Gideo\n\nWarriors of Goldhurst\n\nBeloved Parents\n\n<br >It wasn't a plaque... it was a warrior's gravestone.\n\nHanna's fingers traced the word 'Parents'... were these people Jem's parents? Were they buried here? Had they passed together? How young had Jem been?\n\nTo her surprise, she felt tears at the corners of her eyes. The words, \"I'm sorry\" stuck in her throat. To lose both parents at once must have been an unspeakable blow for Jem, no matter her age.\n\nHanna looked over my shoulder. She wanted to run to Jem and throw her arms around the stoic Commander. But before that, Hanna gathered leaves around the plaque again, hiding it from marauding eyes.\n\nBut by the time she reached the village again, Jem was nowhere to be seen. So she found her sisters instead, who were chatting away with Finn. She sat with them, saying nothing, wondering what she could do to show Jem how much she truly cared.\n\n*\n\nHanna knelt on the bed, her hands bound behind her back in irons. Kara had placed the key to the shackles in the large chest by the bed, well beyond Hanna's reach.\n\nThis was her last chance to prove to Jem that she was here to stay, in whatever way Jem wished her to. She also knew Jem liked control -- not unsurprising of a Commander. Perhaps the shackles would provoke a reaction that her words simply couldn't.\n\nNaked and on her knees in the darkened room, Hanna thought she looked like a sacrifice. The fear of rejection lodged painfully in her heart -- what if Jem took one look at her and walked away? What if Hanna's mistake was so unforgiveable that surrendering everything to the woman she loved wasn't enough?\n\nHer breath caught sharply in her throat as the word replayed itself in her head. Love. She'd known she felt a keen desire and affection for the Commander, but love? Didn't love take time to develop? Or was one intense night sufficient? How does one measure love?\n\nBefore she could dwell on the storm of emotions welling inside her, she heard the front door creak open. She held her breath, waiting for Jem to appear in the doorway of the bedroom. Instead, she heard the telltale clink of a sword being drawn.\n\nHanna grimaced. She obviously hadn't thought this plan through.\n\n\"It's just me,\" she called softly, her voice trembling with uncertainty.\n\nShe heard a curse and a clamor as the sword was re-sheathed. Jem appeared in the doorway of the bedroom, lighting the oil lamp by the bed.\n\nHanna's breath caught as she waited for the verbal tongue-lashing she was sure would follow her intrusion. Instead, as the warm glow from the lamp fell over the bed, she watched Jem freeze as she took in Hanna's state of undress.\n\n\"You said you liked me in chains,\" Hanna offered uncertainly.\n\nShe could see Jem's eyes roving her body, from the braid that was flung over her shoulder to the crux of her thighs. Hanna flushed but didn't look away, letting Jem look her fill.\n\nThen Jem took in the mark of her claim on Hanna's shoulder and her eyes hardened.\n\n\"My biggest mistake,\" she said, her words bitter.\n\nThose words -- the first words Jem had said to her since that night -- ran through Hanna like a sword. She raised pleading eyes to Jem, begging her to take her words back. But it soon became clear that Jem meant every word.\n\nHanna had hoped and wished that offering herself would be enough. But as she stared into hard brown eyes she barely recognized, dread settled low in her stomach. There was nothing she could do to fix this -- the realization was slowly settling in.\n\nAgainst her will, Hanna's eyes overflowed with tears. She looked away and shut her eyes, hating the tears that fell hotly on her bare breasts.\n\n\"I'm so sorry,\" she said once again, her voice breaking as she tried to fight the tears that made her whole body tremble.\n\n*\n\nJem saw the tears fall -- real tears that turned Hanna's chest and neck a vivid red. Her words had meant to hurt and yet, perhaps, they had worked too well.\n\nAs strong as she tried to be, the sound of Hanna's pain broke her heart. Was she enough of a monster to ignore the woman she loved falling apart in front of her?\n\nIt was stupid, she knew. She was thinking with her heart rather than her head -- something she'd been taught not to do her whole life, be it in battle or in love. Sadly, she'd had limited experience with the latter.\n\nBut as she watched Hanna's tears fall onto her breasts and trail down the soft curve of her stomach, she knew she'd made a mistake -- and it wasn't claiming Hanna. She'd made the mistake of not listening to what Hanna was trying to say. Why Hanna had returned to Goldhurst in the first place and stayed on even though Jem treated her like a dog.\n\nIt was one thing to be angry with someone but it was another to deliberately hurt them.\n\nJem sat on the edge of the bed and pulled Hanna close, letting the tears fall on her armor instead. Hanna didn't resist. Instead, she tucked her face into the crook of Jem's neck and cried even harder, barely able to breathe through her tears.\n\n\"I didn't mean that,\" Jem said, her fingers wandering over Hanna's back in what she hoped was a soothing caress. \"I wanted to hurt you the way you hurt me.\"\n\nHanna wiped her nose on the feathered edge of Jem's armor, trying to control the flow of tears. Still, her lips trembled as she tried to take a deep breath.\n\n\"You don't think I'm a mistake?\" she asked, looking into Jem's eyes.\n\nJem shook her head. \"The night we shared -- it was special. More special than I allowed myself to feel. But you left...\"\n\n\"I had to.\" Hanna sniffled. \"I had no choice.\"\n\nJem sighed. \"I suppose I know that.\"\n\n\"I've been trying so hard to make it right,\" Hanna said between sobs.\n\nJem took a deep breath. \"I know.\"\n\n\"Please say you forgive me,\" Hanna pleaded, trying to catch Jem's gaze.\n\nBut Jem couldn't say the words. They stuck in her throat like she was trying to swallow a fucking boulder. How could she tell this woman that the moment she'd jumped out the window had felt like her heart had been torn from its chest? That she hadn't changed her sheets for a week just so she could fall asleep with the scent of roses in the air? That she'd cried herself to sleep every night but not before reliving the moments they'd shared?\n\nThat Hanna's leaving had confirmed what she'd thought about herself for the longest time: that no one could ever love her.\n\n\"I...\"\n\nHanna looked at her expectantly.\n\n\"Where are the keys to the shackles?\"\n\nHanna blinked. Then she blinked again. Her lips parted as though she was about to say something, but she decided against it and sat away from Jem, her shoulders sagging.\n\n\"It's in the chest,\" she said instead.\n\nJem retrieved the key and unshackled Hanna, letting the chains coil on the floor.\n\n\"I should go,\" Hanna said, sliding off the bed and reaching for the clothes that were piled neatly on the writing desk. As she reached for her undergarments, Jem's words stopped her.\n\n\"Stay.\"\n\nHanna looked over her shoulder. \"Why?\"\n\n\"Just...\" Jem paused. \"Just stay.\"\n\nHanna let the garment drop from her fingers. She watched as Jem unstrapped her armor, lifting the heavy leather over her head and setting it on top of the chest. When she sat on the edge of the bed and leaned over to unstrap her boots, Hanna said: \"Let me.\"\n\nShe knelt on the bearskin surrounding the bed and worked on the ties. Jem watched her, her heart filled with such a powerful surge of emotions that she had to remind herself to breathe.\n\nHanna stacked the boots at the foot of the bed and looked up when she felt fingers in her hair. Their eyes locked for what seemed an eternity, a wealth of insecurities, hesitance and longing passing between them. Then Jem tightened her fingers and Hanna stood, stepping between Jem's spread legs.\n\nJem laid her head against Hanna's bare breasts, inhaling the scent of her skin, just as she had that night. Hanna's fingers stole into Jem's blonde locks, holding her there, relishing the familiarity of her touch.\n\n\"Stay the night,\" Jem whispered against Hanna's breasts.\n\nA small smile creased Hanna's lips as she nodded. \"I have nowhere else to go. I came back here for you, Jem.\"\n\nJem sat back, letting the words sink in.\n\nHanna lifted a knee onto the bed and straddled Jem. Jem's broad palms instinctively cupped Hanna's waist, holding her in place.\n\n\"Is this okay?\" Hanna asked, slipping her arms around Jem's neck.\n\n\"Yes,\" Jem said quietly.\n\nHanna leaned forward and pressed a kiss to Jem's generous lips, sighing at the familiar contact. Jem kissed her back, pulling her closer such that Hanna's breasts were plastered against Jem's undershirt. The coarse cotton brushed against her sensitive nipples but Hanna only pushed back harder, wanting -- no needing -- to get closer.\n\nThe next second, her back hit the bed and Jem's form hovered above her. Hanna entwined her legs around Jem's waist and pulled her down.\n\n\"I've been dreaming about this,\" she whispered.\n\n\"You have?\" Jem asked, pressing tiny kisses to Hanna's collarbone.\n\nHanna nodded, tucking stray locks of hair behind Jem's ear. \"Every time I close my eyes, I feel your weight on top of me, your hand on my throat, the taste of your skin on my lips.\n\n\"Every night, I'd fall apart when I thought about the way I left you behind.\"\n\nHanna cupped Jem's cheek.\n\n\"I don't think you understand how much you mean to me.\"\n\nJem swallowed. Yes, she did. But she simply couldn't bring herself to say it. Was it self-preservation? Or ego? She wasn't sure.\n\nInstead of responding, she kissed Hanna, her fingers wandering over a soft thigh and curved hip. When her fingers dug into Hanna's bottom, she pulled back just enough to hear Hanna's low moan echo in the room. That made Jem smile.\n\nHer fingers moved upwards and cupped Hanna's breast, her thumb moving back and forth in rapid succession -- less patient, more demanding than she'd been their first night together. Hanna's body struggled to keep up with the change of pace. Slow and unbearably unhurried was something she was used to. This urgency, this intense need to feel connected in the most primal way, was something else entirely.\n\nHanna's back arched as Jem's fingers plucked a sensitive nipple, rolling it non-too-gently against her callused skin. Hanna felt sweat beading along her hairline as the sensations took over her body. All she could do was hold on to Jem's nape and trust that she wouldn't drown in her own gasps and moans.\n\nWhen Jem's kisses reached the patch of curls between Hanna's legs, a rush of red covered her chest and neck.\n\n\"I don't --\" she started to protest but the look in Jem's eyes silenced her in a second. Hanna's thighs trembled as Jem's fingers parted her nether lips, her eyes holding Hanna's hostage.\n\nThe only light in the room seemed to dim as Jem and those wonderful fingers became the center of Hanna's world. She felt the thrum of Jem's fingers against her button, light and wonderful, and cursed aloud. She thought she heard Jem laugh against her mound but she could've been wrong.\n\nThen she felt the insistent pressure as Jem entered her with two fingers. Her breaths came out in pants as she clasped the cotton sheets, twisting them under in her palms as she held on for dear life.\n\nBut this time was different. Those fingers -- those wonderful, talented fingers -- didn't move. Instead, she felt the cool air of the room caress her button before it was replaced with a wet heat.\n\nHanna's back arched as the foreign sensation shot straight up from her sex and disengaged her rational mind. She knew she was saying something but she couldn't fathom what it could possibly be as Jem laved the pink nub with the flat of her tongue.\n\nShe glanced down. Jem's mouth and nose were buried against Hanna's mound -- the image of that alone, coupled with the constant barrage of sensations, almost drove Hanna over the edge. She reached down and buried her fingers in Jem's hair, whether in encouragement or for the selfish need to reach her peak, she didn't know.\n\nAnd then she felt Jem's fingers move. In and out in a simple rhythm she'd used before... except this time, her tongue flicked insistently against Hanna's core. Jem's fingers hit every sensitive spot in Hanna's sex and she could feel every muscle contracting around the invading fingers.\n\n*\n\nJem wanted to watch Hanna fall apart under her tongue, her whole being ached with need. But she didn't want to lift her head even a fraction, taking her tongue away from the delicious spot she'd found to side of Hanna's pink button. So she relished in the sound of Hanna's strangled moans, the feel of Hanna's fingers pulling tight on her hair, and the thighs that clasped around her head like a vice.\n\nShe felt the rush of wetness against her fingers and the tightening of Hanna's core. She basked in the sense of satisfaction that came over her -- the need to please her woman, to claim her in the basest way, finally sated.\n\nJem licked her lips as she pulled away, needing to catch every drop of Hanna's essence on her tongue. When she withdrew her fingers, Hanna's thigh muscles twitched involuntarily.\n\n\"I can't feel my face,\" Hanna said, her voice low and drowsy.\n\nA pleased smile curled Jem's lips as she wiped her fingers on a towel and pulled Hanna against her side. Hanna's breaths slowly steadied against Jem's skin.\n\n\"How did you do that?\" she asked Jem, her gaze slowly beginning to focus.\n\n\"Do what? Give you pleasure?\"\n\n\"Drown me in it.\" Hanna pressed a kiss to Jem's collarbone.\n\n\"If you have to ask, then you're out of practice.\"\n\nHanna frowned. \"I was never in practice. You're the only woman I've ever been with.\"\n\nJem froze. \"What?\"\n\n\"I was in a coven for ten years, Jem. I don't know why you're surprised.\"\n\n\"I assumed you explored as a youth, as most of us do.\"\n\nJem's frown only got worse as Hanna shook her head.\n\nShe took a deep breath before she asked, \"So, that night, when you tried to seduce me... it didn't matter if I was a man or woman. I could've been anyone and you would've tried it anyway.\"\n\n\"It wasn't like that...\"\n\n\"Answer the question,\" Jem demanded through gritted teeth.\n\nA long silence eclipsed them.\n\n\"Yes,\" Hanna finally said, her voice quiet.\n\nJem was off the bed in a second, taking her warmth with her in the rapidly cooling room. She found Hanna's clothes on the desk and threw the pile across the room. Hanna didn't move to catch them.\n\n\"Get dressed and leave.\"\n\n\"Jem, please just listen. Don't shut me out again.\"\n\n\"Leave!\" The shout shocked Hanna into silence for a second. Jem was truly furious; the veins on her neck stood out prominently. The same neck Hanna had longed to kiss just moments before... still longed to kiss.\n\n\"You claimed me, Jem.\" Hanna's fingers rose to trace the mark on her shoulder. \"Where would I go? My life is bound to yours.\"\n\nJem crossed her arms over her chest. \"You're free to do as you wish. I have no desire to have a deceptive witch for a mate.\"\n\nHanna sputtered. \"A deceptive witch? I've been trying to be honest with you since I returned to Goldhurst yet you seem to want to focus on the one mistake I've ever made my whole life.\"\n\n\"I don't want to hear this. You will not be shunned in Goldhurst; my people claim multiple mates. You're free to do as you wish.\"\n\nHanna felt the first spark of anger blossom in her chest. Her eyes narrowed. \"As are you?\"\n\nA curt nod.\n\nHanna slid off the bed -- her movements slow, graceful, predatory.\n\n\"You will not touch another,\" she said with finality, her face red with anger. \"If you do, I'll run the both of you through with my arrow. You are mine. And mine alone.\"",
        "\"No.\"\n\nHanna halted in front of Jem, staring her down. \"Let's say I do find another mate, someone who makes my soul feel afire. You'll be fine with the knowledge that I'd belong to them? That I'd be moaning loud and long in their bed, night after night?\"\n\n\"Don't.\"\n\n\"You'll be fine with the knowledge that they'd cup these breasts like they owned them?\" Hanna fondled her breasts as an example. \"You'll be fine with them touching, tasting me between my legs, my wetness on their lips, my hands in their hair, holding them there because I simply can't get enough --.\"\n\nJem's hand enclosed Hanna's throat before she could finish the thought. Hanna's back hit the wooden door of the bedroom, pain reverberating through her body.\n\n\"What do you want from me?\" Jem hissed.\n\nHanna didn't struggle against Jem's grip. Instead, she wheezed, \"I want you to see that I'm yours, completely. Just as you're mine.\"\n\nA flash of pain crossed Jem's features. \"How can I ever trust you?\"\n\n\"You can trust that I'm here, in Goldhurst, for you. I'm here because I... love you.\"\n\nJem's hand dropped from Hanna's throat as she backed away quickly. \"Don't.\"\n\nHanna leaned heavily against the door. \"Don't what? Tell you how I feel? I love you, Jem. I love everything you stand for. I love the gruff Commander and the insecure woman you hide. I love the way you touch me -- even when you're angry, you take caution not to hurt me.\"\n\nHanna's voice softened. \"You can't deny you feel the same way.\"\n\nJem simply stared, unable to respond. Words of denial lodged in her throat -- false words, anything to deny the depth of emotion she truly felt for this woman. Anything to ignore how close she teetered at the edge of vulnerability.\n\nShe closed her eyes.\n\n\"I just want some peace,\" Jem said.\n\n\"I'd like that, too. With you.\"\n\nJem felt arms around her waist and took a deep breath. Hanna rested her head on Jem's chest, listening to the steady heartbeat, strong and comforting against the chaotic river of emotions in the room.\n\n\"We could start over.\" The voice was small and muffled against Jem's undershirt. \"No lies, no pretenses. Just us.\"\n\nWhen Jem didn't respond, Hanna tilted her head and said, \"Please.\"\n\nJem swallowed hard. Try as she might, there was nothing she could deny those eyes, that hopeful face. She sighed.\n\n\"I'll consider it.\"\n\nHanna smiled and reached up to cup Jem's cheek. \"Good.\"\n\nJem shut her eyes and leaned into the caress, letting the warmth of that touch seep into her soul. She wanted this -- no, she needed this. Someone to love. Someone to love her.\n\nBut could she open herself up to being hurt again?\n\n*\n\nWhen Hanna awoke the next morning, she found the bed empty. Jem was long gone; there wasn't even a hint of her body heat left on the sheets. Hanna pulled Jem's pillow up to her nose and inhaled the earthy, familiar scent. After their argument last night, Jem had simply held her, occasionally stroking her hair and sighing aloud.\n\nA quick peek at the horizon told Hanna that it was several hours past dawn -- she winced. It wasn't like her to sleep in so late.\n\nShe knew where Jem would be. After days of following the Commander around like a lost puppy, Hanna knew her schedule by heart. Jem and Finn took turns with their duties. Today, Jem would be training the new recruits while Finn took over the seasoned warriors.\n\nThe tribe started recruitment at a young age, Hanna was surprised to find. While in Caverna, she'd only been eligible to join the Coven at sixteen, here in Goldhurst, she'd seen a five-year-old wielding a tiny wooden sword. Although she understood that Goldhurst was relatively small and needed to utilize all its resources, five was a little too young for her tastes. Whatever happened to children enjoying their childhoods?\n\nHanna washed and dressed herself in one of Jem's vests, tucking the ends into a pair of loose pants. Then she reached under the bed for her bow and quiver, slinging both across her shoulders in a practiced move.\n\nJem had left a thick slice of bread and some cheese on the dining table for her. It was a small gesture but it made Hanna smile. Progress, she thought as she stuffed the bread into her mouth on the way out the door.\n\nShe sat on a low branch near the training field, watching as Jem instructed the recruits on the basics of hand-to-hand combat. The kids, probably ranging 12 years and up, watched with awe and fascination as Jem demonstrated the foundational defense moves. Hanna smiled, pulling apart a slice of bread. It was just like Jem to teach caution first instead of offence.\n\nHanna watched the recruits try out the different moves individually under Jem's watchful eye. She stopped every few minutes to correct each one on their stance and technique, speaking directly to them instead of yelling what they were doing wrong across a field like Hanna's instructor used to do.\n\nHanna finished her breakfast and brushed the crumbs off her britches, ready to start her day. If she was going to stay in Goldhurst, she needed to find her place in the community. And the only thing she was truly good at was archery and combat. In the past, she'd often wished she was born book smart like Kara or some of her other sisters but she'd made peace that each person had their own strengths. That's just how the world worked.\n\nShe pushed herself off the branch and landed comfortably on her haunches. She waved to the soldier on guard before he could sound the alarm. After a few seconds of intense squinting, he waved back in recognition.\n\nAs she walked onto the field, Jem said, \"I don't know how things work in the highlands, but here, we wake early for training.\"\n\nHanna tilted her head and pursed her lips. \"Well, if you'd woken me when you left this morning, I would've been here much earlier.\"\n\nA hush fell across the recruits as they waited to see how their Commander would react to those words -- words that were meant to provoke.\n\nA small smile curved Jem's lips. \"Since you're here, perhaps you'd like to perform a simple hand-to-hand combat demonstration for the new recruits?\"\n\n\"I'd love to,\" Hanna said, slipping her bow and quiver over her head and handing it to a recruit.\n\n\"So,\" Jem instructed her audience. \"There is a difference between the techniques you use while fighting a man or a woman. Or fighting as a man or a woman. Men tend to stand their ground more -- I'm not sure if it's their ego that doesn't allow them to fall back as often as they need to. Do not make that mistake. If you need to fall back, take a defensive stance and do so.\n\n\"On the other hand, women tend to be more nimble on their feet. Because of their general shorter stature, they sometimes have a surprising advantage over men. So if you're shorter than your opponent, you'll get the best results if you aim below the belt. We'll demonstrate. Ready?\"\n\nTongue-in-cheek, Hanna asked, \"Just to clarify, who will be reenacting the man here?\"\n\nA snigger ran through the crowd. Jem didn't react.\n\n\"On my command,\" she said instead.\n\n\"Simple\" had nothing to do with the demonstration. It was an all-out genuine combat. Hanna's arms hurt from defending herself against Jem's targeted blows -- and she knew that Jem wasn't even using half her strength.\n\nBut the Coven had drilled into her the motto of perseverance. So she put into practice everything she'd learned but nothing seemed to put the Commander on her ass.\n\nShe groaned aloud when her back hit the ground and Jem's weight pinned her there. Curse the Goddess but Jem wasn't even panting! Surely, there was another way...\n\n\"Do you yield?\" Jem asked.\n\n\"What?\"\n\nJem leaned closer. \"Do you yield?\"\n\nHanna leaned up and kissed her, slanting her lips over Jem's. She slid her tongue between Jem's generous lips, feeling a slight tremble begin in Jem's arms.\n\nThe second she felt the tremble, she took the opportunity to push Jem to the ground and straddled her in one quick move. Hanna might not have brute strength but she sure as hell had the smarts.\n\nWith a sly smile, she asked, \"Do you yield, Commander?\"\n\nJem stared at Hanna intensely, pushing herself up onto her elbows. Hanna swallowed thickly -- she recognized that look. It was the look that had passed across Jem's face the second before she'd claimed Hanna. Lust. Raw passion.\n\n\"Dismissed,\" Jem called without breaking eye contact. The recruits lingered uncertainly for a few moments, but when Jem repeated the order, they dispersed like flies.\n\nHanna sat back on her haunches.\n\n\"Not you,\" Jem said, her voice low.\n\nA sly smile crossed Hanna's lips as she stood and backed away quickly.\n\n\"Want me?\" she taunted, watching Jem get to her feet in one quick move. \"Catch me first.\"\n\nShe tore through the clearing of the woodland, running as quickly as her feet could take her. She heard Jem behind her -- close but not too close. Hanna dodged several low-hanging branches and cursed when she heard the sound of water rushing closer. Swimming hadn't been on the agenda for today.\n\nHer feet skidded into tiny pebbles as she reached the edge of a small waterfall. She turned and watched Jem emerge from the woodland, ducking a branch, a determined look on her face. Her movements were slow, leisurely, as though she knew Hanna had run herself into a corner.\n\nHanna looked over her shoulder. It was a ten-foot drop -- not too far -- but how far did she want to take this little game? She bit her lip.\n\nA triumphant smile crossed Jem's face as she reached up and tugged on the leather straps of her armor, loosening it enough to pull it over her head with ease.\n\nHanna watched Jem strip down with stirrings of anxiety mixed with desire. The sunlight was streaming through the trees, catching the dark perfection of Jem's skin as she slipped her undervest over her head and reached for her leather britches.\n\nHanna felt an undignified amount of saliva pool in her mouth as Jem revealed the sculpted perfection of her thighs, painted gold in the streamers of sunlight. She couldn't get a decent breath and it had nothing to do with her impromptu sprint.\n\nHanna whipped her shirt over her head as Jem strode toward her. She barely had enough time to shuck her britches before she pushed herself off the side of the edge, bracing for the impact of the water.\n\nShe felt the support of Jem's arms around her waist a few seconds later, pulling her to the surface. She breathed hard as she pushed wet hair out of her face.\n\n\"Now that I've caught you,\" Jem said, pulling Hanna close. \"What do I get?\"\n\nHanna slid her arms around Jem's neck as she said, \"Anything.\"\n\nJem's slow smile scared and excited her at the same time. \"That's a very dangerous offer, little girl.\"\n\nHanna threaded her fingers through Jem's wet locks. \"It might be dangerous but I know you'll keep me safe, Commander.\"\n\nJem took Hanna's lips slowly. As though she had all the time in the world. But Hanna could feel the coiled aggression of Jem's desire just under the surface. Hanna liked Jem's gentle side -- it drove her wild. But she felt the need for something a little more intense brewing in her gut.\n\nJem's lips were blissful -- warm and soft against the slight chill of the water. Hanna wrapped her legs around Jem's hips, bringing their bodies closer together. Jem became her only anchor in the water and she was more than happy for her to take the lead.\n\nSlowly, deliberately, the tip of Jem's tongue coaxed Hanna's lips apart. Hanna's made a surprised sound at the back of her throat as her back hit the smooth surface of a warm rock -- she hadn't even been aware that they'd been moving.\n\nJem's feet found purchase on an underwater ledge and the kiss deepened, from soft and gentle to insistent and demanding in a heartbeat.\n\nHanna found her wrists trapped over her head in one of Jem's hands -- unsurprisingly unyielding. She bit her lip as she tried to gauge what Jem intended to do next.\n\n\"I like that look on your face,\" Jem murmured as she placed kisses along the length of Hanna's neck.\n\n\"What look?\" Hanna asked, eyes half-closed from the tingling sensations.\n\n\"Worried about what you've gotten yourself into. But too far gone to really care.\"\n\nHanna's smart retort was replaced by a moan as Jem bit down on a fold of flesh on Hanna's shoulder -- the same spot she'd marked weeks ago. Desire spiraled from the pit of Hanna's stomach and overruled her mind.\n\nI'm yours, she thought. I've been yours since the night you touched me. \n\n \n\nBut she didn't voice those words. Instead, she pressed a kiss to Jem's temple as Jem explored the sensitive length of her collarbone.\n\nJem was beautiful like this, up close with the sun streaming around her like a halo. Her dark skin glistened with little droplets of water, making Hanna ache to catch them with her tongue. But her hands were still caught in Jem's grip. She closed her eyes, choosing instead to experience the burn of desire Jem's lips caused.\n\nWhen Jem lifted Hanna, her legs immediately surrounded Jem's lean waist. Her hands were finally free to hold on to those glistening shoulders, fingers digging into those sculpted muscles. She moaned low in her throat as Jem's fingers found her nipples under the surface of the water.\n\n\"You are my vision of perfection,\" Jem whispered. Hanna's eyes blinked open, taking in the vulnerability in Jem's eyes. She knew it took a lot for Jem to reveal anything she was feeling.\n\n\"And you are mine,\" she whispered, trailing her fingers through Jem's wet locks. \"Every inch of you sets me afire.\"\n\nShe felt Jem's fingers move over her bottom, seeking. Her core clenched as Jem's fingers found the sensitive nub of her sex.\n\n\"Love me, Jem. I need you,\" Hanna breathed, holding Jem's gaze.\n\nHer lips parted as Jem's fingers slipped over her entrance and slipped in slowly. This slickness had nothing to do with the water. Hanna's breath jerked out of her lungs and she felt Jem's fingers probe lightly, trying to fill her without hurting her.\n\nAs Hanna tried to level her breathing, she heard Jem's voice in her ear, soft and low: \"How do you feel like home already?\"\n\n*\n\nThe words had left her lips without Jem even realizing it. With her fingers buried deep in Hanna, her breaths colliding with Hanna's harsh pants, the sweet scent of roses surrounding them, Jem seemed to have no control over herself. All she wanted to do was possess Hanna in the basest way.\n\nShe wanted to mark Hanna again, as stupid as the thought was. Every fiber of Jem's being ached to sink her teeth into Hanna's supple shoulder as her fingers thrust home, again and again. She knew Hanna wanted it; her eyes alone begged for it -- for a deeper connection.\n\nBut the first time had been the biggest mistake of her life.\n\nInstead, she bit down on a fold of skin on Hanna's neck, making her gasp and tighten her legs around Jem's waist. Hitching breaths of pleasure cut through the tranquility of the waterfall as Jem held Hanna's hips steady and curled her fingers deep in Hanna's sex.\n\n\"Oh goddess, Jem...\"\n\nHanna shuddered against Jem's strong form, feeling each stroke of Jem's fingers snap strings of pleasure in her. Her breathing was harsh; her body vibrated as she crested sharply, fingers buried deep in Jem's hair.\n\nHer heart was thudding as Hanna buried her face in Jem's neck, letting the langor take over her limbs. She heard Jem's voice in her ear, a pleasant buzz in the distance, soothing her soul and making her feel safe. Hanna nuzzled closer, placing weak kisses along Jem's sculpted neck.\n\nHanna felt herself floating, being carried in the water, and then her bottom met a mossy bank. She wasted no time leaning back, letting the warmth of the rock spread across her back.\n\nJem lifted herself out of the water, flicking wet hair out of her eyes, biceps straining. Hanna watched through lowered eyelids, caught in an odd trance as she watched Jem's every movement like a hawk. Jem's small breasts lay flat against her chest, nipples thick and hard from the cool morning breeze. Tiny droplets of water dripped off her short locks and trailed down her neck and chest, finding their way back to the waterfall as Jem hefted herself onto the bank.\n\nHanna felt a low murmur of pleasure creeping up her throat as she watched the sun play with Jem's dark skin, casting a golden glow over her profile. The sun was such an oddity to Hanna -- although the Highlands and Lowlands shared the same life source, she'd never felt the sun's rays as keenly in the Highlands as she did in Goldhurst. There was always tall tales about how the people from both places had come from the same stock but the heat of the sun had changed them over generations and created a divide between the Highlands and the Lowlands. Hanna had always thought the tale a myth but after experiencing the sun in all its glory, she wasn't so sure there was some truth in that.\n\nJem stretched her tall form along Hanna, balancing her head on a raised elbow.\n\n\"You're frowning,\" Jem commented. \"What's wrong?\"\n\nHanna turned to face her, placing a hand on the slight curve of Jem's waist, fingers absently stroking the smooth flesh.\n\n\"I'm thinking about the Feud. Why do you think our people have been fighting for centuries?\"\n\nIt was Jem's turn to frown. \"We're not fighting anymore. It's peace time.\"\n\n\"Yes, yes,\" Hanna hastened to correct herself. \"But why is there still such a prominent divide between us? I grew up with tales of Lowland Beasts.\"\n\nA small smile quirked the corner of Jem's lips. \"Did you? Here, we tell the tale of Highland Slayers -- cold-blooded killers who feed on human flesh.\"\n\nHanna gasped, appalled. \"No, we're not! We're mostly farmers who grow fruits and-.\"\n\nJem's laughter stopped her short. \"You're so easy, Hanna,\" she said, eyes alight.\n\nHanna's rebuke died on the tip of her tongue when Jem said her name.\n\n\"You've never said my name before,\" she whispered, as though she was afraid Jem would take it back.\n\nJem raised a hand to Hanna's cheek. \"Haven't I? The Gods know how many times I've thought it -- about you.\"\n\nHanna tilted her head and pressed a kiss to the inside of Jem's palm. \"I like hearing it.\"\n\nShe let her fingers trail down Jem's hard shoulder, feeling the muscles bunch.\n\n\"Say it again,\" she said, and took Jem's lips.\n\n*\n\nIf Hanna had to choose a time in her life to relive for the rest of her days, she'd choose the weeks following her reconciliation with Jem. Each day, she knew things would be just fine when she awoke nestled on Jem's chest, their mingled scent now the new scent of their shared accommodations.\n\nShe finally felt at peace with Jem. The Commander was now free with her smiles around Hanna, as though she had made a conscious decision to allow Hanna into her life with nothing standing between them.\n\nThey spend their days on the training ground -- Hanna having pledged her skills and loyalty to the Chief. She was now in charge of teaching archery to the young recruits, along with Kara.\n\nBonnie had surprised them all by refusing a combat position entirely. She now tended to the children of warriors who trained on the field all day. Hanna had noted with considerable shock that her smart-mouthed sister was much more patient with children than she'd ever been with adults.\n\nTo each their own, she supposed.\n\nThe day had started off unremarkably. Hanna had prepared their first meal while Jem cleaned her sword and armor and arranged everything in the order in which she'd need them. While Hanna appreciated Jem's preparedness, she'd also come to realize Jem was a creature of rigorous habit. She'd once told Hanna that this was how her parents had lived -- with strict rules -- and Jem had adopted their ways after they'd passed.\n\nHanna respected that and tried to keep her mess to a minimum -- but it was hard. The villagers had been busy making clothes, food and even a new bow for the archers who'd helped with the marauders. Hanna now had a trunk that was overflowing with clothes... which sometimes found their way to the floor, chair or bed. Sometimes the kitchen.",
        "She tried to pick up after herself, truly, but it was difficult to balance being a trainer and a homemaker all at once. Jem was very patient with her, though. Sometimes she'd come home late to find her clothes neatly folded next to her trunk and dinner already made.\n\nHanna couldn't be happier.\n\nShe'd gotten used to the routine, the peace... so much so that the sound of the deep winding horn caught her off guard on the field that day.\n\nShe'd just been adjusting the posture of a little girl not more than 10 years old when the sound cut through the training fields, drawing a gasp from the young ones.\n\nKara was quicker than Hanna to react. She whistled sharply, gathering the recruits.\n\n\"All of you take the back route home. Hold hands -- understand? No one goes by the village square until the all-clear horn is blared. Understood?\"\n\nThe other trainers were likewise dispersing their trainees just as Jem burst into the field with her army behind her in perfect formation. Hanna shared a look with Kara -- perhaps they should really work on their response time... it was nothing compared to Jem's.\n\nA messenger streaked across the large field, heading straight for Jem.\n\n<br >\"Dark Army approaching fast from the mountains,\" he yelled. \"200 strong. Five minutes, Commander.\"\n\nJem's voice cut through the field. \"Take your places!\"\n\nWithin a minute, the village square was flooded with Goldhurst warriors in full armor. At the front was Jem with Finn at her side, both ready for battle with their hands poised on their sword handles.\n\nHanna spotted Bonnie in the distance, running for the cluster of trees around the entrance of the village square. Kara had already found her vantage spot to the right of the entrance.\n\nHanna held her breath and scaled the nearest tree, finding a spot just above the entrance. If the Dark Army's Leader rode in first, she'd have a great shot at them.\n\nThe ground shook under the force of the Dark Army's march and Hanna's grip faltered for a second. That definitely felt like more than 200 troops. She held her breath as the army descended the mountain, their copper-plated armor gleaming in the morning sunlight.\n\nThey were getting too close now.\n\nHanna's breath caught.\n\n\"Halt!\"\n\nJem's voice carried across the entrance of the village. The Dark Army's Leader was sat atop a large black horse, their armor a blinding gold. Hanna watched, bow primed, as the Commander nudged their horse to a stop. The army followed suit.\n\n\"State your business.\"\n\nThe stern baritone of Jem's voice gave Hanna shivers.\n\n\"Peace, Commander.\"\n\nThe Leader of the Dark Army was distinctly female. She slid off her horse with regal grace, landing on her booted feet with ease.\n\n\"I've heard tales of a redheaded archer that saved your village -- are they true?\"\n\nHanna frowned. That redheaded archer would be Kara. But why would the Leader of the Dark Army care about a bumbling young girl?\n\n\"They might be,\" Jem acceded.\n\n\"I would like to speak with her.\"\n\n\"Why?\" This time, Finn stepped forward, hand on her sword.\n\n\"I would speak with her now or my army will find her and bring her to me. Your choice.\"\n\nFinn took another step forward but Jem stopped her with only a slight tilt of her head.\n\n\"Don't threaten us -.\"\n\n\"Stop.\" A muffled shout emerged from Hanna's left and the leaves shifted as Kara dropped to the ground.\n\nKara slung her bow around her body, a signal to everyone that she didn't see the army as a threat. But Hanna stayed in position. There was too much at stake.\n\nKara walked towards the Leader and stopped in between the two armies.\n\n\"What is this?\" The wind carried Kara's voice as she addressed the Leader.\n\nThe Leader slid her helmet from her head, revealing a striking woman with braided hair as long as Hanna's. Her skin was dark as night but her eyes were unmistakably wide.\n\n\"You ran from me.\"\n\nHanna frowned. Kara had never mentioned anything about her past with another army, another woman. She'd simply told the Coven that her parents had passed and she needed a place to live. Nothing about Kara even hinted that she'd been a skilled warrior in another life.\n\nKara stood straighter. \"You let me go, Grace. Why are you causing trouble now?\"\n\n\"I still hold your contract.\"\n\nKara's cheeks bloomed with a fierce blush.\n\nHanna knew little about contracts -- they were an archaic way of owning people. Few Highlanders practiced it anymore. But if Grace owned Kara's contract, it was binding for life.\n\n\"So you brought your army after me?\"\n\nGrace's chin tilted slightly. \"You left me no choice. I've searched for you for years.\"\n\nFinn stepped forward again and Jem let her take her place next to Kara.\n\nThe Leader's nostrils flared at Finn's protective stance.\n\n\"I don't know what you expect from me, Grace, but I won't go back to Draken with you.\"\n\n\"I won't let you take her.\" Finn's voice was uncompromising.\n\nGrace's lips thinned as she placed the helmet back on her head with practiced precision.\n\n\"Then prepare for war!\" she yelled and her army awoke with a roar.\n\n*"
    ],
    "authorname": "KillerRomance",
    "tags": [
        "lesbian",
        "gay",
        "novella",
        "fantasy",
        "butch",
        "femme",
        "happyending",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-lowlander-pt-01"
}