{
    "title": "Raw and Broken Ch. 05",
    "pages": [
        "The nightmares started my first night alone in Paris.\n\nI'd been fine the four days I'd spent with Malcolm, Becca, Darryl, and Ginger in London. But that was due in part to the fact that I'd had the girls in the room with me. I was forever in Becca's debt for suggesting the sleeping arrangements be changed so I didn't have to get a room by myself. I knew each couple would have rather stayed in their private rooms. To say they'd been kinky in Europe.\n\nMalcolm had wagered us females would make the best of the situation. We'd probably stay up all night talking kinky, girly things without the men around. He hadn't been far off. We had done quite a bit of story swapping. And giggling.\n\nBecca had revealed during our t\u00eate-\u00e0-t\u00eate with Darryl after Drake's passing that the original plan was for my husband and I to attend the convention with the other two couples. They just hadn't approached us yet for fear that we might not be ready. Especially to have our own room.\n\nIn hindsight, I don't think I would have been comfortable with those arrangements. Even prior to Drake's accident, I hadn't decided how much kink I wanted to embrace again...if at all. And if the first time we would be sleeping in the same bed was in Europe at a BDSM convention? That had disaster written all over it. The temptation would have been too great, probably for both of us. Maybe Drake would have declined the invitation. I wondered if I would have gone without him. But that no longer mattered.\n\nI'd expected to feel left out being the fifth person and without a partner. But Darryl had his booth to man most of the time. And the same went for Becca, who'd been given the booth next to Darryl's to advertise and sell her latest books. I had attended a seminar on switching; viewed a couple of demonstrations with Malcolm and one with Ginger; and walked around the hall with the full group. But despite the allure of the convention as a whole, I'd chosen to spend most of my time by the indoor pool or in the hotel lounge.\n\nIt was hard not to think of Drake. Of what it would have been like if we'd been here together. Especially a year or two ago. Although I met up with the group for meals, it felt more like I was on a private vacation. Seeing all the kinky couples openly embracing their fetishes in the convention hall and the demonstrations rooms had been difficult, to say the least. The time on my own had allowed me to relax, as I knew I'd be on the run the moment I set foot in Paris.\n\nIt would be lying to say I was sad when we said our goodbyes. I was ready for the next chapter. Anxious, even. I knew I'd always have Malcolm and Becca. I no longer felt like I couldn't reach out if I needed them. But I also needed to be on my own for awhile. To become more independent.\n\nI'd chosen to take the Eurostar instead of flying. While it was over an hour longer, I'd known the view would be worth it. Becca had shed quite a few tears when we hugged at the St Pancras International train station. Malcolm had held me extra long but hadn't offered any words of encouragement like he was prone to do. I'd been glad because if he'd tried to talk me into going back to the states with them, I'd feared I might have said yes. And I believe he had known that, too.\n\nDarryl and Ginger had wished me luck and safe travels. There had been the reminder to let someone know when I'd safely reached Paris. Promises to keep in touch with E-mail and Skype, both of which I could do with my early Christmas present from my in-laws: a new laptop. And then I'd walked through the security checkpoint to enter the next phase of my life.\n\nMuriel had met me at the Gare du Nord station in Paris. We'd hugged. We'd cried. After I'd sent a text to Malcolm and Becca, we grabbed a bite to eat and set out to meet the other girls who had arrived the night before.\n\nThere were six of us models from the United States on this excursion. We'd been assigned two to a flat, and each of us had our own bedroom. The flats were all in a building that housed other models, although all of us Americans weren't on the same floor. And while the accommodations last time had been like staying at the Hilton, I couldn't complain about the quaintness of my temporary home. Especially, since my room looked out over a garden area that I imagined would be very welcoming regardless of the season.\n\nWe'd been allowed to get settled before we had a meeting in our flat since we were on the first floor. Of all of the girls, I was the only one who'd been here before. I'd also learned that Scott\u2014the man who had recruited me last time\u2014and Jerome\u2014Muriel's assistant\u2014were also on the team that had come over from the US. The fact that I was familiar with some of the people and the area had erased any remaining doubt that I'd made the wrong choice. \n\nDuring our drive, Muriel had elaborated on the purpose of the trip. She'd entered into a partnership with the Parisian agency that had sponsored the group I'd been with on my previous visit. The building where us six girls were staying was actually owned by Claudette, Muriel's business partner. And some of Claudette's girls were living there as well.\n\nWhile Muriel had been involved with sending girls overseas for several years to get the international modeling experience, she'd merely offered up prospective candidates. And it was usually only for a few weeks at a time. Now, she was one of the two people holding the reins. Getting her hands dirty in the foreign market.\n\nAt our meeting, she'd revealed she had two ulterior motives with this trip. First, in addition to regular photo shoots and attending Fashion Week in March\u2014which the sister agency had arranged for us American girls\u2014we would be in a fashion show for a local up-and-coming designer who was launching her spring/summer collection. And second, a French magazine had contracted Muriel and her partner to use models from both agencies in their spread of hot new winter collections for the next year. The goal was two-fold: to give the six of us the desired experience abroad that Muriel wanted as well as build up the reputation for the two agencies.\n\nAfter dinner, we'd retired as we had to be up at six o'clock in the morning to start the day. I'd been exhausted and assumed I'd clock out right away. But I'd lain there staring at a strange ceiling wondering what my family and friends were doing in Europe. I had known they would stay another night before heading home. Had they been glad they'd gotten a chance to finally sleep with their significant other? Had they missed me?\n\nWhen dreamland had finally come, I'd found myself running down the street from a dark shadow. The shadow had split into two. I'd been in chased into an alley, and then I'd screamed. The brick walls on either side had chains draped and crisscrossed like an intricate spider web. Arranged amongst the chains were floggers and whips, as if caught up in the web. I'd heard someone calling my name. Before I could turn and run the other way, arms had wrapped around me, and I'd screamed again.\n\nI'd woken to find my flatmate, Bridget, shaking me. She'd said I was yelling the word 'red.' That I'd been tossing and turning with the sheets wrapped around me.\n\nSomehow, I'd made it through the rest of the night and gotten up on time to meet the personal trainer Muriel had arranged for me. I'd gotten out of the habit of working out these past few months. Once I'd married, I had worked out at a local gym. But after Drake made me quit my job, I'd lost the will to keep in shape. Even for him.\n\nThe morning session was brutal, to say the least. But I persevered until I was covered in sweat. My stomach had growled several times throughout. It had been too upset from my restless night, so I'd skipped breakfast. Now, I wished I hadn't.\n\nI took a shower at the private gym\u2014which was conveniently located above the sister agency\u2014and made it downstairs in time for the required morning meeting. We broke for lunch, and then a couple of us were off to our first photoshoots. It was a privilege and a relief of being here on a mission. Of having our agent in charge with arrangements already made for where and when we needed to be. The one part of the profession I'd always hated was the casting calls...wondering if I'd get a job each day.\n\nThe evening of my first full day, I crashed and managed to get some sleep before the shadows invaded again. Bridget woke me some time in the night. The next week was exactly the same. Wake up at dawn, breakfast, workout, meeting, lunch, photoshoot, dinner, sleep, nightmare, midnight waking, back to sleep. Wash, rinse, repeat.\n\nThe following Saturday, I was given a respite with nothing on the agenda. But my body was already on the new schedule, so I was up at six with nothing to do and nowhere to go. After I showered at home, I decided to go down to a nearby caf\u00e9 since the weather was nice. I would let the day play itself out.\n\nI'd already eaten my scone and was finishing my cappuccino when Muriel walked up.\n\n\"Bonjour, Daphne!\"\n\n\"Bonjour!\" I rose and kissed each of her cheeks as she kissed mine then sat back down.\n\n\"I see you've settled in quite well.\" Muriel took the seat across from me and loosened the scarf she'd tied around her neck.\n\nI pointed to my cup, and she nodded. A waiter approached, and I said, \"Puissions-nous avoir deux de plus, s'il vous pla\u00eet?\"\n\nHe nodded and turned away.\n\n\"My, my, you do impress. I didn't know you spoke French.\"\n\nI smiled at her over the rim as I took my last sip. \"This isn't my first Paris rodeo. How about you?\"\n\nShe held up her thumb and forefinger about an inch apart. \"Juste un peu. I took it in high school and college, but I've become rusty over the years. I've been blessed with a business partner who speaks fluent English. Although, she's been riding me quite a bit lately that I need to brush up on the language if I plan to spend more time over here.\"\n\n\"I think Paris fits us both well,\" I said with a laugh. \"I'd forgotten how beautiful it is.\"\n\n\"Autumn on the Champs-Elyses is breathtaking. It was summer last time you were here, correct?\"\n\nI nodded. \"I'll have to return in the fall since I'll see winter and spring this time.\"\n\n\"I'm really glad you were able to join us. You've always been on my mind since we parted ways.\"\n\n\"I've thought of you, too. I am so thankful for the opportunities you've given me. For this,\" I said, looking around. The outdoor tables were mostly full in the cool but unseasonably warm air. Holiday decorations were being placed on lampposts and in shop windows, reminding me that Christmas was only a few weeks away. Both locals and tourists walked past us to their destinations, chatting in various languages. Life here\u2014at least near our flat\u2014was unhurried. I took a deep breath. \"I've missed it.\"\n\nMuriel reached across the table and squeezed my hand. \"Bridget spoke to me.\"\n\nI lowered my eyes and nodded, feeling the tears well up as I tried to swallow. I should have seen this coming. Not only had I been set up with a wonderful agent in a gorgeous city, I'd been given a very caring roommate.\n\n\"Daphne, is there anything I can do to help? I'm always here if you need to talk.\"\n\nWhen I raised my head and blinked, a tear rolled down my cheek. I waited until the waiter set our steaming cups in front of us before I unloaded on Muriel. Once I started, I knew it would be hard to stop. And like the professional that she was, she quietly sipped her cappuccino, nodding occasionally as she listened. Waiting for me as I took a breath or a sip myself.\n\nWhile I didn't get into the kinky details, I shared that I'd gotten married and moved to California. That although I'd loved my husband, his behavior had become questionable. I'd felt emotionally abused. I had known he'd cheated on me at some point before our marriage, and there had been times I'd wondered if he was still seeing another woman.\n\nI explained that there had been a row between my husband and his sister prior to our move. It had not ended well, and that had caused a lot of undealt with tension between us. I'd also had a physically abusive boyfriend in the past. He'd gone to prison as a result. And for some reason, the stars had aligned to bring him back into my life by way of friendship with my husband.\n\nAll of that had caused me to run away to my in-laws because I'd recently found out I was pregnant and couldn't handle the stress. While my marriage seemed to be back on track with the help of a psychiatrist, I'd still felt distanced from my husband. I hadn't actually gotten the time I'd hoped to process everything on my own.\n\nThen I'd had a miscarriage. My husband had an accident on his way to meet me at the hospital. As a result, we'd learned that he'd had a cancerous brain tumor. The final blow was just a few weeks ago when complications from the accident and the tumor had resulted in his death.\n\nMuriel was crying with me by the time I finished. She squeezed my hand and handed me a tissue from her purse. \"I'm so sorry, Daphne. You have been through a lot.\"\n\nI was smiling at her now as I wiped away my tears. \"This trip was just what I needed. To get away from the life I knew and go back to what I used to love.\"\n\n\"Jeannette, your most recent agent, said that she'd been quite surprised when you'd quit. You'd seemed so happy modeling. It had panged her to lose you.\"\n\n\"That had been Drake's doing. I hadn't wanted to stop. If I could have\u2014\"\n\n\"Shh. It's alright. You don't need to explain.\" Muriel cupped her other hand on top of our already joined hands. \"I was overjoyed when I got the call from her that you were looking for work. I knew right away that I needed to touch base with you.\"\n\n\"I'm glad you did.\"\n\n\"Listen.\" She was patting my hand now. \"I know you were probably planning to relax tonight. But I'm attending an event, and I wonder if you'd like to be my plus-one?\"\n\nI bit my lower lip and nodded, grinning like a school girl.\n\n\"Lovely. Stop by the agency around five o'clock and pick something out to wear. Georgia will do your hair and makeup. Sound good?\"\n\n\"Yes. And thank you, again, Muriel.\"\n\n\"Of course, my dear.\"\n\nWe both stood, exchanged bises\u2014the cheek kisses\u2014once more, and then said, \"A bient\u00f4t.\"\n\nMuriel's event was a small dinner with a few designers and area modeling agents, including her business partner, Claudette, whom I'd met on my first morning. The meal was delicious, and everyone was quite friendly. Not once had I felt like I didn't belong. But maybe that was because I was speaking their language. When in France... \n\nI slept that night without any nightmares. Without any dreams I could remember, actually. It was wonderful. When I woke in the morning, I felt refreshed.\n\nThe girls had decided we should all have lunch together and watch movies on Sundays. With our hectic schedules, it would give us a chance to unwind and feel like were back in the states. Today, we were watching a marathon of old black-and-white films on TV. Bridget and I made our contribution and rode the antiquated lift to one of the upstairs flats.\n\nWe spent the afternoon kicking back. They had been right. It was just like I would have done with Malcolm and Becca on any given weekend without plans. I excused myself after the third movie, though. It was Skype time, according to my watch. Every other Sunday if possible.\n\nBack in my flat, I curled up on my bed with a blanket around my shoulders as the winter breeze filtered in through the window I'd cracked open. Then I started up the laptop and logged into the program.\n\nMalcolm and Becca's faces flickered on the screen for a brief two minutes, but the audio never worked. I received a text from Becca saying there was a snow storm hitting the east coast, and they were unable to keep a connection. We texted back and forth instead until there was no response for five minutes to my latest message. I took it as a sign that I should call it a night.\n\nI was a grown, independent woman. I should have been satisfied with seeing their faces. But the fact that I hadn't been able to hear their voices bothered me. Made me homesick.\n\nHome. That word still seemed foreign to me. I missed Chicago. And now I missed Delaware. The ocean. My family.\n\nSurprisingly, the one thing I didn't miss was Drake. That may have made me sound like a coldhearted bitch, but to be honest, I felt free. No one judging me\u2014well, except Craig my trainer who said I needed to work on muscle tone\u2014or punishing me when I didn't say or do something they expected. Not that Drake had done that recently, but right now, it's what I remembered most about him.\n\nIt was strange how for the past few years, I'd grown to believe I needed someone else controlling my life. That I really wanted it. I wasn't so sure about that anymore.\n\n###\n\nThe next week was packed full with prepping for the fashion show on the upcoming weekend. We had daily morning meetings with the designer, Pauline, who went through what she wanted. I spent extra hours in the gym toning. And on top of that, I had two back-to-back photo shoots on Friday, so I had been cutting it close to get to the dry run for the catwalk.\n\nClaudette raised an eyebrow at me as I slunk into the group of girls who were waiting for Pauline to determine the final order of the clothes to be shown. I just gave her a smile and waited for my name to be called. Muriel must have noticed because she said something to Claudette, who glanced at me again and gave me a slight nod. As if I was being forgiven for my tardiness. I wasn't the one who had scheduled a photo shoot so close to the rehearsal!\n\nThirty minutes later, we were in line for the first walk down the runway. One of Claudette's girls, Nikkole, was leading the pack, and I'd been chosen to bring up the rear. Both positions were coveted. I wondered if Muriel had any say in the matter. Regardless, I made a mental note to thank her later.\n\nA thrall of people from both agencies were running the show in collaboration with Pauline. From wardrobe managers to the producers and PR representatives, there were more people in charge than actually modeling. Us twelve girls were divided into groups of two, and each group would share a joint hair-and-makeup stylist. I was paired with Nikkole. We were assigned to Georgia whom had come over with Muriel from the Chicago agency. Another blessing for me.\n\nWe'd also been told two specific men would be in charge behind the curtain: Patrick and Stefan. Stage manager and production manager, respectively. We were to listen to them and them alone once the show started Saturday night. So far, we'd not been introduced to either one. But I could have missed that with my late entrance today.\n\nEven without the headset and clipboard, though, it was easy to pick out Patrick. He could have been Stanley Tucci's doppelganger. And like the actor's character in \"The Devil Wears Prada,\" his job was to make sure us models went out to the catwalk in the right order...and in the right outfit.\n\nStefan, now he was a mystery. Especially, since I didn't see anyone fitting the description Muriel had given us at the meeting earlier this morning: tall, dark, and handsome. Laughable, but model qualities. Which was ironic since he'd not chosen that profession. His job was to make sure everyone else did their jobs properly. He should have stuck out in a room full of beautiful women, but all of the men I could see were short and balding.\n\nI didn't have time to wonder who\u2014or where\u2014Stefan could be as we were being ushered one-by-one onto the stage.\n\nFor the next three hours, we ran through the show. They marked the time with costume changes. Then to the music. Made adjustments as necessary. Over and over again until Pauline was happy.\n\nThroughout, I'd noticed Edward, the stagehand who cued each of us to go based on Patrick's directions, flirting with several of the girls. They'd giggled each time until Patrick gave them the evil eye. When the last run was announced and we were on the final costume change, Edward smacked the butt of each of the girls ahead of me when it was her turn to walk out.",
        "Out of the corner of my eye, I saw his hand swing out. I twisted and grabbed his wrist before he made contact. The wide-eyed look on his face told me he hadn't expected resistance.\n\n\"Don't start something you can't finish,\" I hissed at him.\n\n\"Daphne!\"\n\nI turned my head to see Patrick glaring at me as he pointed to the curtain.\n\n\"Nous vous attendons!\"\n\nI stepped past Edward, who was still gaping, and through the parted curtain. When we were done, I went backstage to change into street clothes. I hadn't caught a glimpse of the man described as Stefan. Maybe he'd thought too highly of himself to be here on this practice evening. But I forgot about him as Bridget hugged me, giggling and out of breath.\n\n\"Wasn't that amazing? I can't wait for the real thing tomorrow night!\"\n\n\"Yes, it was.\" I smiled at the younger woman and remembered how I had felt attending my first fashion show here in Paris four years ago. It had always been photo shoots since then, even in California. Now here I was actually walking in a show. On second thought, 'amazing' didn't quite fit the bill. I don't think I had a word that did.\n\nIt was a miracle that I got any sleep that night. Saturday was a whirlwind of models rushing around our building calling out reminders in our respective languages of what we needed to take with us. Then we were traveling across town.\n\nDespite all of the time and effort everyone had put into making things run smoothly, the chaos from the day before had not been ironed out. In fact, it seemed to have gotten worse. Mostly, it was from those in charge. Yelling at people to do something or stop doing something. Trying to find something that someone else just had. But some of the newer models were fidgeting and had that deer-in-the-headlights look, which didn't help matters.\n\nI used the breathing techniques Malcolm had taught me years ago to stay collected while I stripped down to nothing but my thong and donned a silky robe. I had worried about how to strike up a conversation with Nikkole and what we'd talk about since I'd be sitting next to her for the next few hours. But she saved me the trouble as she arrived wearing a set of earbuds. She sat motionless listening to whatever was on her iPhone while Georgia started on her hair.\n\nI passed the time talking with Georgia and thinking about Malcolm and Becca. I'd sent a text last night before going to bed, asking if we could Skype Sunday night. It wasn't our regular week, but we hadn't touched base for two weeks now except for the occasional text at odd hours of the day due to the differing time zones. I wanted to hear their voices. See their faces. Becca had responded this morning that they would let me know and wished me good luck on the show.\n\nGeorgia just gave me a tired smile as she finished Nikkole's makeup. Without even a look at me, the other model vacated her chair and disappeared somewhere in the midst of the madhouse that had become the backstage area. Once I was styled the way Pauline had requested, I moved on to wardrobe where I waited until Greta, the matronly woman near the clothing rack, helped me into my first outfit.\n\nPatrick was lining us up for the show thirty minutes later. I still had yet to see the elusive Stefan. How could a man manage a fashion show if he wasn't in attendance? Once more, the task at hand was put back into focus as we were stepping out onto the stage. Doing the oft practiced strut with straight backs and stoic faces down the runway.\n\nIn my head, I repeated what we had practiced yesterday. I counted each walking step. Every pause. When to pop my hip and turn my opposite foot out. Which hand should be where and when. When to turn, how much, and which direction my body should face as well as which direction my face should be looking. The whole circuit\u2014two full walks down the runway and back to the curtain with pauses and turns\u2014lasted less than sixty seconds. Then I was rushing to change into the next outfit. Four times.\n\nOnce I was back in my robe, I plopped into the same chair I'd started in this morning. I'd completed my first fashion show! I wondered how long the high would last. It wasn't quite the same as when I was in a scene, but it was still pretty good. I couldn't remember the last time I'd had this feeling. I felt buried memories coming back, so I was grateful when Bridget and the other American girls distracted me by gathering around to take some selfies.\n\nPauline did a quick meeting to thank all of us for helping launch her clothing line. Before we were dismissed to attend the celebration dinner, she gifted each of the models with one of the outfits we had modeled. I selected a black, halter-top romper flecked in silver and red with sheer black panels around the arms and legs. It only made sense since it had been my first outfit down the catwalk.\n\nWith the new outfit, retouched makeup, and my hair still up in the high ponytail Georgia had fashioned with a braided section of my hair wrapped around it, I felt stylish. Ready to take on the world. Well, at least another runway. And I no longer second guessed my decision to come abroad. Malcolm, Becca, and Darryl had been right. I'd needed this trip to revitalize myself. Possibly reinvent.\n\nIf I'd thought the intimate dinner with Muriel had been posh, this one was...well...fitting for the designer. She was a combination of modern meets retro. There was a lot of techno-pop music from the hired DJ along with colorful, flashing lights reminiscent of the 80s and 90s. The meal was a buffet of hors d'oeuvres rather a sit-down entr\u00e9e. And there was the incessant chatter that competed with the deep base of the music.\n\nMuriel, Claudette, and Pauline all congratulated me on a job well done while we nibbled on the little appetizers we'd gathered and sipped champagne. I thanked them all for the opportunity and wished Pauline great success. She extended the invitation to stop by her studio sometime in the next week as she'd like to use me for some stills. My bosses said they would make the necessary arrangements, and then our little group disbanded.\n\nI stood by myself for a few minutes, just observing everything around me. I may have been on a different continent, but it felt like I was at a party in Chicago. And that made me smile.\n\nI had just exchanged my glass for my plate that I'd set on the cocktail table behind me. As I was turning back around to do more people watching, I bumped into someone. He caught my plate as it wobbled out of my hand, saving the remaining cracker with its topping.\n\n\"Vous avez de bons r\u00e9flexes,\" I said, laughing. \"Merci.\"\n\n\"You have great reflexes, yourself.\" His voice reminded me of Robert Downey Jr. Not especially deep, but a little smoky. Very pleasant.\n\nI tilted my head back to see the face above the tuxedo-glad chest that was in my direct eye line. My heart sped up for a moment, and my mouth went dry. I was glad there was nothing in my hands I could have dropped.\n\nThe vision rose several inches above me. He had to be six-three or four, and he was as awe-inspiring as my first glimpse at the Eiffel Tower. In fact, I would describe him as a human persona of the famous landmark. I imagined that his tux hid an equally-strong framework. \n\nHis black hair was longer on top and in the back, brushed to the left in a bit of a pompadour so it seemed to fall toward his eye. While shiny, it wasn't slicked back like a lot of men that I'd encountered in Paris thus far seemed to do. Matching dark brows framed a pair of piercing, black eyes that flashed red, blue, and green, as the lights bounced around us.\n\nHis nose was long and not overly wide as it drew my eye down to his lush lips that were neither smiling nor frowning, yet they were quite alluring. I'm sure they would remain as so no matter what his expression. The package was perfected by a five o'clock shadow and an ever-so-slightly prominent chin.\n\nHe had to be Mr. TDH. The mysterious, silent observer behind the scenes. Not exactly the brooding presence I'd imagined him to be. My throat would not cooperate as I tried to swallow. I took a sip of champagne, but it didn't help much.\n\n\"I'm Stefan, by the way. I think I missed you during the introductions yesterday.\"\n\nHeat crept up my neck. Dammit, he knew I'd been late to rehearsal. Had he actually been there, or had someone told him? Regardless, I refused to kowtow to him because of a scheduling issue from my boss. At least in public. My face flushed even more from that thought. Where had it come from?\n\n\"I'm Daphne.\" I offered my hand, which he took and held for a moment. Just when I thought he might raise it to his lips to kiss it, he gave it a firm squeeze and then released it.\n\n\"Yes, I know. One of the Americans.\" His face lit up as a white light lingered momentarily when it flashed toward us. If I hadn't seen the corner of his mouth turn up, I would have thought he was mocking me. \"That was a pretty smooth move with Edward.\"\n\nI was glad it was dark again so he couldn't see my expression. I'm sure it was a mixture of confusion then horror that someone had seen my little stunt. That he had seen it. Of course Edward had witnessed it, but I was certain that Patrick had only noticed my delay to get on the stage. And no one else had been around...that I knew of. I guess I'd been wrong.\n\nI struggled to think of something nonchalant to say. I opened my mouth, but nothing came out. Thankfully, someone stopped to talk to Stefan, saving me from looking like a fool.\n\nAs they both spoke in French, I thought it felt a little strange to talk to a Parisian in my native language. And he hadn't greeted me like a normal Frenchman, even if we were not acquainted. I finished my cracker with a curl of salmon as I considered that something about him was off. It finally occurred to me when the other gentleman left and Stefan turned back to me.\n\nI crossed my right arm across my chest, holding my glass in my left hand. \"You speak English far too well to be French. In fact, I don't detect an accent at all. If I had to wager a guess, I'd say you're just as American as I am.\"\n\n\"A quick observer, as well. Very interesting.\" He took a glass off a passing server's tray and tilted it against mine so they clinked. \"So you are not amused with Edward's ritual?\"\n\n\"That was a smooth transition. Somewhat noncommittal.\"\n\n\"I was merely returning to our previous topic.\"\n\n\"What is\u2014\"\n\n\"Just answer the question, Daphne.\"\n\nI cocked an eyebrow, feeling more confident. \"If you must know, I don't trifle with amateurs. Now can we move on from your fascination with Edward and my ass?\"\n\nStefan paused with his glass at his parted lips.\n\nI suddenly wanted to capture that look. Seductive. Startled. Susceptible. Maybe I should look into doing photography. Be on both sides of the camera.\n\nSomething flashed in his eyes as the white light hit us again, and then it was gone, along with the light. He gave me slight tilt of the chin and took a drink. \"The ensemble you selected. It's very flattering.\"\n\n\"Why thank you. It was my favorite. Pauline has a great eye for fashion. I hope she goes far.\"\n\n\"Speaking of amateurs, you seemed quite in your element this evening for being in your first show. Were you nervous?\"\n\nNot as much as I seemed to be right now. How did he know these things about me? I took a gulp of my own bubbly wine. \"I've been modeling for a few years, but I took a break for several months. It's nice to be involved again.\"\n\n\"Are you?\"\n\n\"Am I what?\"\n\n\"Involved, Daphne?\"\n\nI saw Bridget over his shoulder, and she was gesturing for me to come over. I gave Stefan a returning tilt of my chin and said, \"Avoir une bonne soir\u00e9e, Monsieur.\"\n\nHe blinked at me as I stepped past him and made my way to my flatmate.\n\nEventually, the noise level rose to where it was hard to carry on a conversation. Not to mention, it gave me a headache. I stayed a respectable amount of time and then excused myself.\n\nI was heading toward the door when I noticed Stefan talking to Claudette and Nikkole. His eyes wandered over to me as I stepped past a couple of models . We exchanged silent nods, and then I continued outside into the cool but peaceful air to find the nearest taxi stand.\n\n###\n\nChristmas Eve morning, I woke to see soft, white flakes falling outside my window. The little garden sparkled under the fresh blanket. I'd missed that the year before. Although some parts of California did receive snow, we'd lived where it was too warm. It was inviting now, and I almost rushed out to dance in it. But I didn't want to mar the perfection.\n\nI watched it for a long while until Bridget knocked on my bedroom door, letting me know she was out of the shower. I took my turn cleaning up. While I got dressed and packed a bag, I heard the other girls chattering away in what we would have considered the living room.\n\nRight at eleven o'clock, two black limos showed up to take us to Claudette's house where both agencies were gathering for the holiday. The plan was to stay through weekend, then back to work on Monday. Not surprisingly, the Americans piled into one vehicle while the French girls chose the other.\n\nI stared out the window as we drove through the snow-covered streets. A tear trickled down my cheek. It was Christmas, for crying out loud.\n\nI'd spent it last year sitting in a short skirt and sleeveless top across the table from Drake while we silently shared the smallest turkey he could find as the California breeze fluttered in from the open patio door. He'd gotten a table-top tree and put some garland on it, but I'd not had the heart to put up any other decorations. After dinner, we'd watched TV and played around until we were both exhausted and went to bed. It had felt like any other night of the week.\n\nThroughout the day, I'd still been ruminating about overhearing him tell his mother a few days earlier that we wouldn't be going back east for the holiday. At the time, I'd been brave in telling him being with his family was the one thing I'd looked forward to. That I'd gone along with tricking his sister into going to the collaring ceremony, I'd moved out west without question, and I'd forgiven him for cheating on me before we were married. So why couldn't he have done this one thing for me? He'd backed me up so I was facing the wall, growling that I was not to question his decisions. Then he'd fucked me but left me without release. It had been my worst Christmas ever. I hadn't told Malcolm or Becca that part.\n\nI had expected to be with them this year, with or without Drake. Now here I was, almost four-thousand miles away from them...over a thousand more than I'd been last year! It had helped that we'd spent an hour on Skype last Sunday. I'd cried then, too. As had Becca. Even so, I missed my family more than ever.\n\nI put on a happy face once we reached a gated estate out in the countryside. In all these years, I'd not forgotten my first love: acting. I was better at it than modeling, which I was damn good at given the compliments Pauline had given me two days ago in her studio as we discussed her proposal for another fashion show with Muriel. I could pretend I was happy for the next four days. I was sure I'd be fine once the holiday was past.\n\nClaudette met us at the door and had her servants show us to the rooms we'd be staying in. I was slightly relieved that Bridget and I were rooming together. That I didn't have to share a room with Nikkole. Something about her rubbed me the wrong way. They said that the French weren't really rude, they just looked that way because they rarely smiled. But I begged to differ when it came to her.\n\nOnce we were settled, everyone joined our hostess on the main level. With all of the models lingering around the room that resembled a large den, I tried not to laugh as I thought that this must be what it was like for holidays at the Playboy Mansion. All we needed was Hugh Hefner in a velvet robe, and we'd be set. Then again, the bunnies were more ample in the chest area than most of our lot.\n\nIt was hard to just sit still. To be waited on. I wanted to help make the meal, like I had for Thanksgiving. This was all too formal for me. Even if I couldn't be back at the mansion on the beach, I would have rather celebrated the holiday in my flat with Bridget and the other four girls from overseas. It would have been more...homey.\n\nI compensated by slowly traveling the room. Mentally critiquing the sculptures and artwork. I'd made it halfway around when I heard the hardwood floor creak behind me.\n\n\"Merry Christmas, Daphne.\"\n\nI spun around from studying an Impressionist-style painting consisting of multiple colors and shapes that was mostly shadows due to the lack of light on this side of the room. I pressed my back against the wall as Mr. TDH's eyes focused on mine. I licked my lips and managed a weak, \"Merry Christmas, Stefan.\"\n\nHe leaned in and gave me the customary greeting this time.\n\nMy response was half-hearted, mostly from the shock of seeing him. I guess I should have assumed he'd be here since he was on the team. Thankfully, he stepped back and gave me some room to breathe.\n\nHe nodded at the painting. \"Do you like it?\"\n\n\"What?\" I glanced over my shoulder and then back at him. \"Oh. It's hard to see. I guess it's interesting.\"\n\n\"I found it at an art gallery in Italy a few years back. I'm not sure this is the best place for it, though. It's too modern with the antiquated d\u00e9cor in here. I told my mother it would look better in my den.\"\n\nI just blinked at him.\n\nStefan offered me a white grin. \"Oh, did you not know Claudette was my mother?\"\n\nI shook my head, my mouth dry. \"Isn't she French?\"\n\nThe chuckle that came from him told me that the answer was 'No.'\n\n\"There you are, Stefan,\" Nikkole said in broken English as she joined us. She looked down her nose at me. \"Daphne.\"\n\nI smiled at her, although my instinct was to snub her. She didn't offer her hand for a shake, and she wasn't close enough to do the bises\u2014as if I wanted to do that with her\u2014so I merely said, \"Bonjour.\"\n\nShe ignored me while she gave Stefan bises.\n\n\"Merry Christmas, Nikkole.\" Stefan reciprocated the gesture. \"I was just telling Daphne about my painting. Don't you think it would look better in my den?\"\n\n\"Oui. Over your desk.\"\n\nHer response made me think she was very intimate with this house...and the den. Particularly that desk.\n\n\"I shall have my mother move it.\"\n\n\"She is looking for you.\"\n\nStefan turned to me. \"I must leave you to admire my painting on your own, if you will excuse me.\"\n\nI nodded. \"A plus tard, Stefan.\"\n\n\"Adieu, Daphne,\" Nikkole said, the corner of her mouth lifting in a sneer, telling me she wasn't being sarcastic. She intended the literal meaning of the word...she hoped to never see me again.\n\n\"My mother's real name is Claudia,\" Stefan whispered in my ear with his parting kisses before he walked away with Nikkole on his arm.\n\nNikkole glanced back with that same sneer then flicked her hair as she turned back around.\n\nI rolled my eyes at them both. Adieu to you, too, bitch.\n\nA few minutes later, an elderly man announced with a hand-held gong that dinner was ready, and we all filed into an elaborate dining room. The food was very good, although I felt uncomfortable sitting around such a long table with a bunch of people I'd only known a few weeks. I made the best of it and tried to contribute to the conversation with Bridget and the other American girls.\n\nAfter the meal, I excused myself to go lie down. The second I pulled the sheet up over me, the tears started to fall. They were silent at first. Then wracking sobs, which I tried to smother in the pillow.\n\nNikkole's scathing attitude toward me stung more than I'd let on. I didn't know what I'd done to make her hate me. I just wanted to enjoy my time over here and do the best I could with what I was assigned.",
        "But for the first time, I wished I'd not come on this trip. I wished I could escape to the observation room of Malcolm and Becca's mansion. Most of all, I wished I had someone to comfort me.\n\n###\n\nChristmas Day passed with the same lavish treatment from our host. We exchanged gifts, had another meal, and sat around talking for hours. As the evening approached, a couple of the girls suggested playing charades. When Claudette saw it wasn't go so well with the language barrier, she corralled everyone into a media room to watch classic \"American\" Christmas movies.\n\nDuring \"It's A Wonderful Life,\" I went to use the restroom. But it was just an excuse. I was staring out a window at the end of the hall, considering going upstairs to retire, when I remembered a couple of the French girls had talked about the elaborate gardens behind the mansion. I bet they looked beautiful right now.\n\nI snuck out a back door I'd seen, confident I'd be warm enough in my cowl-neck sweater, jeans, and knee-high boots. Besides, I didn't plan to stay out here too long. I just needed a quick break.\n\nIt had stopped snowing. But the entire back yard\u2014if one called it that over here\u2014was covered for as far as I could see. Trees, bushes, rolling hills. All of it a pristine white. The fresh blanket crushed under my feet as I followed a gravel path in the moonlight.\n\nThis. This is what I had missed last December. What I'd longed for this year.\n\nMy very first Christmas with Drake, we'd gone for a walk to a local park in Wheaton after dinner with his sister and mother. His brother hadn't been able to make it down for the holiday, but we'd coped. It had been very peaceful, just the two of us. No talking as we sat on a bench, holding each other, and watched the snowflakes fall around us.\n\nWe'd celebrated the next year at Becca's condo with the addition of Malcolm, but it had just been four of us again as Beth had been sick, and weather had kept Alexander from driving down. It was easy to imagine myself with the same group every year. I'd tried not to get my hopes up.\n\nThen Drake had proposed. We'd set our wedding to be in November, in autumn, my favorite season. I'd looked forward to a good-old family Christmas the next month. Especially after finally having met Alexander and his girlfriend Cameron at Thanksgiving. Malcolm and Becca had been hosting at Malcolm's house where she'd moved in. But Drake's persistence to force Becca to attend the collaring ceremony had ruined the Christmas plans, leaving me severely disappointed.\n\n\"It's a little cold out for a walk, isn't it?\"\n\nI flinched and glanced back over my shoulder at Stefan. \"I'm from Chicago. I'm used it.\"\n\n\"Ah, the old Windy City. I'm from the coast.\"\n\nI didn't bother asking him to elaborate which one as I followed the path that curved away from the house behind a cropping of trees. \"Does your girlfriend know you're out here alone with me?\"\n\n\"Who?\"\n\n\"Nikkole? The arm candy you've been carrying around for the past two days.\"\n\nHe chuckled.\n\nMy heart did a flip-flop. I cursed silently and tried to stomp the joy right out of it.\n\n\"She's not my girlfriend. Although my mother thinks we'd be a perfect match.\"\n\n\"Well, if the shoe fits.\"\n\nStefan grabbed my arm to stop me from walking and turned me to face him. He wasn't smiling. \"Did I do something to piss you off?\"\n\nI managed to cross my arms even though he still held onto me. He was right, it was chilly out here.\n\nI contemplated coming clean. That since our first encounter, I couldn't stop imagining walking down a runway in nothing but a leash and heels for him. Or him flogging me when I didn't get the steps right. Making me crawl toward him then kneel and suck his cock. Fucking me ten ways from Sunday on the catwalk. All of which scared me.\n\nI'd come to the decision that I wanted a normal relationship, if one at all. Maybe the occasional spanking. But no more collaring and living to serve another man. I had to live for me. Daphne.\n\nA shudder raced up my back that the man actually had me reconsider giving up masochism and slavery, even though I doubted he was into that.\n\n\"I'm a little homesick. This isn't really what I had expected to be doing this Christmas. I'll get over it.\" It wasn't a lie, just not the whole truth.\n\n\"I'm sorry.\"\n\nMy muscles relaxed at his quieter tone. \"Thanks.\"\n\n\"Maybe you haven't figured it out yet, Daphne, but I'm trying to get to know you better. I like you.\"\n\n\"Why?\" I shrugged and looked around at the estate where each of the staggering roofs and awnings of the three stories glimmered under a cap of snow as they stretched out in both directions as well as rose toward the moon. \"Why would you want to know a poor girl from the Midwest with nothing to her name when you've got something like this? You can have your pick of any girl here in France. You're surrounded by models every day. Most men would die for that opportunity.\"\n\nStefan snorted. \"I'm not most men.\"\n\nIt was such an unexpected response, I laughed.\n\nHe put his hands on hips and dropped his jaw. \"Are you making fun of me?\"\n\nI shook my head, pursing my lips to stifle a giggle. Then I shrieked as the wind picked up and snow from a tree branch blew down the back of my neck.\n\n\"Come on. If you won't go inside, there's a gazebo up the way that's out of the elements.\"\n\nPossibly against my better judgement, I said, \"Okay.\"\n\nWe continued away from the house and walked side-by-side as barren bushes and trees sprinkled with snow crystals flanked our way. He took me down a winding path that went past an honest-to-goodness hedge maze with an arched entrance formed from two trees that merged and twisted together at the top. Up ahead, I could see the gazebo nestled under a grouping of willow trees. The long wispy branches were pure white and cut the wind as we entered.\n\nStefan brushed snow off of one of the benches inside then gestured for me to sit down.\n\n\"Thank you.\" I had to admit, he was right. It was warmer in here.\n\nNeither of us spoke for awhile. There actually wasn't any sound at all except for the occasional rustling of the willow branches as the wind blew against them. It was nice. But Stefan had to ruin it by clearing his throat.\n\nI looked up at him\u2014hell, even sitting he was taller than me. \"I'm recently widowed. I\u2014\"\n\n\"I just want to be your friend, Daphne.\" His voice was very soft. Sad, even. \"Is that okay?\"\n\nI closed my mouth and nodded.\n\n\"Do you want to talk about it?\"\n\n\"No, not really.\"\n\n\"Okay.\" He was quiet for a bit, then he said, \"So tell me something else about you?\"\n\n\"Like what?\" What happened to the all-knowledgeable guy who had me curious if he'd done a background check on me? Apparently his source had not been all forthcoming.\n\n\"Well, I know you're from Chicago. And you're a model. Is that what you always wanted to be?\"\n\n\"No. I wanted to be an actress. It's what I went to school for.\"\n\n\"That's cool. So how did you get into modeling?\"\n\nI leaned my head against the upright beam behind me and grinned. \"I saw an ad for Muriel's agency. I thought she sponsored actors. She wouldn't let me leave without promising to do one photo shoot.\"\n\n\"And the rest is history?\" he said, chuckling.\n\nI wished he would stop doing that. It was too inviting. \"Yeah. I guess so.\"\n\n\"You mentioned family back in the states. Do you have any siblings? Are your parents still alive?\"\n\nI turned to face him fully and squinted. \"What is this, twenty questions?\"\n\nStefan grinned. \"It's called getting to know each other. You answer mine, I'll answer yours. Deal?\"\n\nI shrugged and shook his proffered hand. \"No siblings. I never knew my dad. My mom raised me on her own. She died from breast cancer the week after I graduated from high school.\"\n\n\"Geesh, Daphne. I'm sorry.\"\n\n\"She fought hard for months. I didn't want to let her go. But the doctor said he could only make her comfortable at the end. We managed to get her to the auditorium for my ceremony. I think that took the rest of her energy. She didn't get out of bed after that. I was with her every day until she passed away in her sleep.\"\n\n\"Can I give you a hug?\"\n\nStefan wrapped his arms around me as I nodded.\n\nIt's hard to explain what I felt in that brief moment. Almost as if a void I'd had inside me for weeks was slowly starting to fill in. Maybe it purely was human contact. Genuine concern from another person, even if was from a man. Maybe it was more. But I didn't want to put too much weight on it.\n\nThen the moment was gone. We were sitting there apart in silence. Awkward silence.\n\n\"Anyway, I found a smaller apartment closer to school and got a job. Life moved on. So...next question?\"\n\n\"We don't have to do this, Daphne.\"\n\n\"Nonsense. I made a deal. What else do you want to know?\"\n\nHe seemed to think about it for a moment. \"Speed round, then.\"\n\n\"No judging?\"\n\nHe put his right hand over his heart. \"Nope.\"\n\nI raised an eyebrow at him and shook my head. \"Okay, go.\"\n\n\"Favorite color?\"\n\n\"Blue.\"\n\n\"Favorite dessert?\"\n\n\"Anything with Oreos.\"\n\n\"Favorite musical artist?\"\n\n\"Bon Jovi.\"\n\n\"Interesting.\"\n\nI shrugged. \"I grew up in the eighties. Plus, he's easy on the ears and the eyes, and he only gets better with age.\"\n\n\"I wasn't asking, but thanks for the clarification. Favorite actress?\"\n\n\"Meg Ryan.\"\n\n\"Nice. 'When Harry Met Sally?' The fake orgasm in the caf\u00e9?\"\n\nMy cheeks grew warm despite the chill in the air. Of all the scenes in all the movies she was in, he had to pick that one? I struggled to not adjust my position. To scoot away from him a little. \"I prefer 'You've Got Mail.' Or 'Top Gun.' \"\n\n\"She was in 'Top Gun?' \"\n\nI looked up at him, wild-eyed. \"Goose's wife?\"\n\n\"Oh, yeah. Huh.\"\n\n\"My bad, you would have been looking at Kelly McGillis the whole time.\"\n\n\"Well, she was hard to miss. And she got naked.\"\n\n\"My point exactly. Moving on.\"\n\n\"Uh, male celebrity you'd sleep with?\"\n\n\"Where do you come up with these questions?\"\n\n\"Just answer it.\"\n\n\"Fine. Robert Downey, Jr.\"\n\n\"Seriously?\"\n\n\"You promised, no judging.\"\n\nStefan shook his head. \"Favorite vacation spot?\"\n\n\"Paris, so far.\"\n\n\"Beer or wine?\"\n\n\"Wine. Come on, these are too easy. They don't say anything about who I really am.\"\n\n\"Okay, then, why did you stop Edward from smacking your ass?\"\n\nEvery muscle stiffened. \"It's personal.\"\n\n\"Why?\" His voice was a little huskier than it had been.\n\n\"My turn. Why didn't you become a model?\"\n\n\"Because that's what my mom wanted. And I wasn't done with you.\"\n\n\"Have it your way. What's your next question?\"\n\n\"Can I kiss you?\"\n\n\"You've kissed me half a dozen times in the past twenty-four hours. We're in France.\"\n\n\"Not like this.\" He pulled me close suddenly, his lips pressing against mine. His fingers were in my hair. His palms warmed my cheeks.\n\nI was panting when he finally released me. He was right. He'd definitely not kissed me like that before. I was going to make some snide comment about real French kissing\u2014which he had refrained from demonstrating\u2014but all I could do was open and close my mouth.\n\n\"Rendered speechless, eh, Daphne?\"\n\nI swallowed. Heavily. \"Uh, I'm getting cold.\"\n\n\"Do you like me?\"\n\nI stood suddenly, no longer liking this game. \"You know, they're probably wondering where we went. We should go back\u2014\"\n\n\"You're avoiding the question, Daphne. You promised to answer mine.\"\n\nI crossed my arms. \"Why do you care? You said you just wanted to be friends.\"\n\n\"Let's just say I have a vested interest.\"\n\nI snorted and walked out of the gazebo, my heart racing. \"You can freeze out here by yourself.\"\n\nI heard his slow footfalls crunching on the snow behind me as I headed back toward the house. I was in such a hurry, though, that I slipped. Of course, he was right there to catch me. And that brought tears to my eyes. Damn chivalry.\n\n\"Are you hurt?\"\n\nI shook my head, blinking rapidly. My vision blurred further as the cold air hardened the tears on my eyelashes. \"I'm sorry. I'm just not ready. I can't\u2014\"\n\n\"Shh.\" Stefan set me upright. He brushed his thumb under my eyes and then hugged me to his body. His lips grazed my cheek as he whispered, \"I'll wait.\"\n\n###\n\nNew Years in Paris was something I'd never forget. Claudette arranged for all of us to attend the celebration at Moulin Rouge. I'd read up on it after hearing the plans. I didn't know if she got a discount, but for our group of twenty-two, I could have bought a small car for the cost to have an elaborate dinner and show.\n\nWhen all of the partying was done, we were back to work non-stop for the next two months leading up to Fashion Week in March.\n\nTrue to his word, Stefan didn't pressure me. But he made his presence known. He was at every morning meeting now. Attended our group photo shoots with Rene, the head of the magazine we were modeling winter collections for. He even showed up to our Super Bowl Party with Muriel, Georgia, Scott, and Jerome that us American girls held in my flat.\n\nHe asked me out for Valentine's Day, but I politely turned him down. I woke up that morning to find a single red rose and a card that read, \"Je vais attendre pour vous,\" tied to our doorknob. Bridget asked me what it said. When I translated that it meant he'd wait for me, she just stared at me slack-jawed and then smacked me on the arm for being such a dunce.\n\nThe day before Fashion Week began, Claudette announced that Nikkole had left the agency. No explanation was provided, but Stefan whispered to me in passing that he'd heard she'd been offered a job with Christian Dior. I was both relieved and a little jealous. But I didn't have time to dwell on either emotion as the chaos of traveling from show to show occupied my every waking moment.\n\nIn April, I finally relented and let Stefan take me out to dinner for my birthday. We ate at the 58 Tour Eiffel restaurant located in the famous tower. Then we walked down the Champs Elysees where he kissed me under the stars. I couldn't deny that it was all very romantic.\n\nBut I knew that May would be here all too quickly. Then only one more month before my trip would be over. A fact that I'd not discussed with Stefan. It had been one of the reasons I'd not easily given into his desire to pursue a relationship. It wasn't fair to either of us.\n\nI'd expected it when Muriel begged me to let her take me on again at the Chicago office. But to my surprise, Claudette extended the same invitation...for the Paris agency. Then there was Rene who wanted to hire me to work for his magazine. And Pauline who also wanted me to be the top model for her fashion line. I'd not thought of staying in France. But now that I knew it was an option...\n\nThey were all very generous offers. And I told everyone that I would consider each one carefully. I weighed Stefan into the all of the equations, as well. But my decision was made for me when I logged into Skype the first Sunday in May.\n\nBecca was grinning from ear-to-ear. Malcolm stood behind her with the same expression.\n\n\"Okay, it's obvious you two have good news. Spill.\"\n\nThey argued back and forth unintelligibly for a moment, then something white filled the camera view.\n\n\"You're going to have to back up. What is that?\"\n\n\"I told you it was too close,\" Malcolm said. His big hand filled the screen for a moment.\n\n\"Yes, that's very helpful. Could you please\u2014 Oh, shit!\" I stared at the image of a white stick that filled my laptop monitor now. Then Becca's face was there again.\n\n\"Did you see it?\"\n\nAll I could do was nod.\n\n\"We're going to have a baby!\"\n\nMalcolm's face joined hers. \"I'm going to be a daddy!\"\n\nThe tears were falling before I had even realized I was crying. My heart ached. I just wasn't sure if it was joy for them or sorrow for myself.\n\n\"Daphne? Are you okay?\" Becca was crying now, too.\n\n\"We didn't mean to upset you,\" Malcolm said. His grin had turned into a frown.\n\nI shook my head and smiled. \"No, I'm happy for you. Very happy. I can't wait to see you guys next week. I've missed you so much.\"\n\nBecca wiped her face with a tissue. \"We've missed you, too...Aunt Daphne.\"\n\nWe talked for another thirty minutes before I signed off. Instead of going to bed as I usually did after our Internet talks, I went out the garden area in my PJs. I stared up at the stars, thinking about the experiences I'd had this past six months. Hell, the past year.\n\nThey had definitely changed me. Made me stronger. Time would tell if it lasted.\n\n###\n\nThe day before I would fly home, Claudette had everyone out to her estate for a farewell party. There were a lot of tears and hugs. Exchanges of contact information between the Americans and the French girls who had become friends despite international barriers.\n\nAs I was prone to do when I visited this place, I wandered away from the crowd. We were in a different part of the house than the previous times we'd been here, so I went looking for the hallway off the media room to take one last walk in the garden. To sit in the gazebo under the willows that would have blossomed by now.\n\nI found myself down an unfamiliar hall, though...with no windows or external doors. I turned to head back when I saw the door on my right was slightly ajar. Now, I was not a nosy person. But I figured no one would know this time. And if they did, it wasn't like I was coming back here any time soon. I probably wouldn't see these people again in my life.\n\nTo my relief, the door didn't make a sound when I pushed it open. A lamp on pedestal table had been left on, casting most of the room into shadows. It looked like a library or a den. The wall on my left was floor-to-ceiling bookshelves. There was a couch at the far end of the room facing a massive, stone fireplace. A desk with hand-carved figures on the corners was situated on the wall closest to me and faced into the room. In between was a window with dark drapes pulled across. A narrow gap between them let in moonlight. \n\nI was turning to leave when I saw the illuminated painting above the desk. The Impressionist that had been in the main hall at Christmas. I giggled loudly. So this was THE den.\n\nI put my hands on top of the desk and leaned forward. The curved-necked art light above the frame helped me see the design better than last time. It no longer looked like a bunch of wide, sharp brush strokes in a variety of colors. I could make out the outlines of two figures now: a man and a woman. And if my eyes were not deceiving me, he was leaning her back...and kissing her naked breasts.\n\nA desperate moan crept up my throat. How long it had been\u2014\n\n\"I wish you would muse about me as hard as you do about that painting.\"\n\n\"Oh, shit!\" I gasped and spun around, tripping on my own feet. I fell backwards against the desk as I saw Stefan leaning against the back of the couch, his arms crossed. I couldn't see his face, but I knew he must be watching me. Where the hell had he come from? \"I-I'm sorry. I got lost. I didn't mean to\u2014\"\n\n\"It's okay, Daphne.\" He stood upright and took a few steps toward me, further into the light. His eyes slowly lifted from my feet, and he tilted his head to the side. \"I really do like that outfit on you.\"\n\nHeat filled my cheeks. I had on the black romper ensemble I'd modeled on my first runway walk. I'd thought it was a nice touch as I said adieu to this beautiful country. I hope he hadn't thought I'd worn it for him. Or maybe I had, subconsciously. A shiver made my shoulders tremble at that thought.\n\n\"Thank you.\" I regained my balance and distanced myself from the desk once more as I lifted my chin toward the painting. \"I see you had it moved.\"\n\nStefan raised an eyebrow, his gaze shifting slightly. Possibly over my shoulder. \"Oh, yes. The Leonid Afremov. I think it's called 'War of Feelings.' Are you an art lover?\"\n\n\"I'm not sure. I like some pieces by Degas and van Gogh, but I wouldn't say I love them.\"",
        "He seemed to be studying me as I had studied his painting. \"Have you been to the Louvre?\"\n\nI couldn't help myself. I rolled my eyes at him. \"Of course, I've been living in Paris.\"\n\n\"What's your favorite piece?\" He drew closer. Brushed a piece of hair out of my eyes.\n\nI blinked at him. \"I-I don't have a favorite.\"\n\n\"Pity.\" His thumb brushed over my lips. \"Maybe it's the wrong type of art.\"\n\nMy breath came out as a shudder when he pulled his hand away. I licked my lips, unconsciously taking a step toward him as he backed up. \"What other kind of art would there be? The Louvre is the largest museum in the world.\"\n\n\"Ah, but the Louvre doesn't hold all types of art. Just the more...accepted kind.\"\n\n\"Like your 'War of Feelings?',\" I said as we both took another step. Then another. I saw over his shoulder that we were headed toward the wall of bookcases.\n\nHe just shook his head.\n\nI stopped and crossed my arms. Raised an eyebrow at him. There was nowhere for him to go now.\n\nBut Stefan surprised me by pressing on a section of the nearest bookcase. The wall swung inward with a slight creak. He reached inside, and a soft glow suddenly filled the doorway. \"Would you like to see?\"\n\nMy curiosity got the better of me. I only contemplated for a second what could possibly be in that hidden room. Then I was following him.\n\nThe space was larger than I expected. There were two low, upholstered chairs right behind the bookcase-door. They were angled toward each other but facing the opposite wall. Which had another stone fireplace, albeit less than half the size of the one in the den.\n\nBetween the chairs was a low table. A silver tray with two empty brandy snifters and a cut-glass decanter half full of a bronze liquid sat in the middle of the table. I wondered if Stefan had been sitting in here, drinking. But I hadn't heard the wall open and close. Had he been sitting in the den in the darkness the whole time? Maybe lying on the couch? I couldn't remember the last time I'd seen him in the ballroom where everyone else was celebrating all that we'd accomplished these past six months.\n\nThere was a soft click as the hidden door closed. Out of the corner of my eye, I saw Stefan sit in the nearest chair and pour himself a glass of from the decanter. He didn't offer me a drink. I wasn't sure if I was offended or glad. I had a feeling that consuming even the smallest bit of alcohol around him would greatly lower my inhibitions. Best to refrain.\n\nOpposite from where I stood was floor-to-ceiling bookshelves, just like the wall through which we had entered. The ones in the den were stained wood and had been crammed with leather-bound novels and masculine knickknacks. These shelves were painted a pristine white, like the walls, and held statues and framed photos that had been spread out to display them prominently. Some of the pieces were specifically backlit.\n\nI was crossing the room to get a better look when I noticed the other framed artwork arranged over the dark fireplace. These did not appear to be paintings like the Impressionist. Rather, they were photographs. Eight eight-by-ten prints in all, four black-and-white alternated with four full-color ones.\n\nMy heartbeat picked up as I stepped closer. I ran my hands up and down my arms, trying to quell the goosebumps that were prickling my skin. I licked my lips multiple times. My eyes lingered on one photo and then another, arousal heightening with each new image.\n\nThe monotone ones appeared to be of the same man and woman, both with dark hair. He was only fully visible in one, although I assumed it was his hand showing in the others. She appeared to be naked for the most part in the ones that showed her body.\n\nThe first photo showed just the woman's backside. Part of her legs could be seen up to her mid-back. She was wearing a black thong, and her hands were tied behind her with a black strip of fabric. The man was kneeling in front of her, his face hidden as it pressed to her belly while he tugged on the ends of the strip binding her hands.\n\nIn the second, it was just her face, eyes closed as she faced left. She had her mouth open wide, the tip of her tongue extended as a masculine hand held an ice cube slightly above her. As if she were seductively licking the cube or catching the drips.\n\nThen there was the one with her kneeling next to the man who was fully clothed as he sat in a chair. He looked striking with his clean-cut face, neatly trimmed hair, and his contrasting white shirt and dark suit and tie. But the expression on his face was one of indifference. The woman had her head on his knee, and his hand rested on her hair, as if stroking it.\n\nBut I knew better. He was petting her. And not just because there was a black, leather collar around her neck and he held the end of a silver chain in his other hand. I knew because Drake and I had portrayed that same image more times than I could count. That photo made me quickly move on to the next.\n\nThe final black-and-white was just of the woman's face again. This time, she had the simple, black strip tied around her eyes. Her head was tilted back as in the second photo, also with her mouth wide open, but she was facing the opposite way. The masculine hand held her chin with the thumb resting on her lower lip and tongue. Simple, yet it said so much.\n\nIn between these frames were four photos of naked, individual women, all of different skin tone and hair color. They were bound with equally colorful ropes tied in intricate knots and designs, as if they were wearing the ropes as clothing. And each woman was in a different position: standing, sitting, kneeling, hanging from an unseen device above the camera's view.\n\nAs erotic as the black-and-white photos were, the ones with rope-work were more arousing for me. They were\u2014in a word\u2014beautiful. They were more artistic than pictures of naked people, which seemed a bit like porn. Someone had put time and effort into not only the colors of the rope used, but the designs the color would make when completed.\n\n\"I can't read your silence, Daphne. If you're in shock or awe.\"\n\nI smirked and turned to face him. \"So this is what you meant by art that isn't accepted in the Louvre.\"\n\n\"They're not my best.\"\n\nI hoped my soft moan wasn't audible. \"You took all of these?\"\n\n\"It's my...hobby.\"\n\nI suddenly thought of Malcolm and his love of rope bondage. Of Darryl who had briefly mentioned he liked photography, and if this was what he had meant. It would be interesting to see the results if these three men collaborated.\n\n\"So do you like them?\"\n\n\"Yes.\" I barely stopped myself from adding, 'Sir.' I gulped. It was a good thing I was leaving tomorrow. This man had quickly become a bigger temptation than I'd imagined. \"So you don't model but you take photos of models?\"\n\n\"Oh, I'm in some of my photos as well. I just save those for...well, private viewing. This is just a fraction of my collection. And these aren't the kind of models you'd see on the runway.\"\n\n\"Oh, you'd be surprised,\" I whispered. I closed my eyes as I felt the heat of him grow closer.\n\nHe brushed my hair aside so it fell over my left shoulder. Very lightly, he pressed his lips to the back of neck along the curve on my right side. His voice was a low whisper as he continued, although it seemed loud in my ear. \"Would I be surprised to learn why you stopped Edward from smacking you that day of Pauline's show?\"\n\nI turned abruptly to face him, and he took a step back. I clenched my hands at my sides, not because I was mad but because it was the only way I knew how to control myself at the moment. To not throw myself at his feet.\n\n\"Since you insist on knowing, Edward doesn't have the first clue about women or how to treat them. And I only let my partner spank my ass. For the record, I'm a submissive with masochistic tendencies, although I'm trying to quit. I've enjoyed seeing your collection. Thank you for a lovely evening.\"\n\nI was so thankful the door handle wasn't hidden on this side of the wall as I stumbled back, searching for an escape. The wall swung out easily. I expected him to follow me. To stop me. I didn't look back, but I couldn't hear anything except my own footfalls as I hurried through his den and out into the hallway.\n\nThe party was wrapping up as I rejoined the American and French teams in the ballroom. Stefan did not appear as we travelled en masse to the front of the house to say our goodbyes. There were lots of hugs and tears. Promises to stay in touch. Then we were in the limos, riding back to our flat.\n\nI spent the rest of the evening packing. Trying not to think of Stefan. Of how much I'd miss my little garden view. The city. The hustle and bustle to get to photo shoots. I focused instead on seeing Malcolm and Becca. Being a future aunt. Walking on the beach, my toes digging into the sand as the cold water rushed over my feet and legs. On watching the stars from the observation room. Just being home.\n\n###\n\nThe sky was overcast when I woke. I took my time rolling out of bed. Taking a shower. Getting dressed for the last time in Paris.\n\nI did one final inspection to make sure I'd not missed anything as I passed the time before my taxi would arrive. We'd all agreed not to make a big to-do about our departures. That's what last night had been for. Bridget and two of the American girls would be traveling back to the states together while the other two had later, separate flights. Mine was the only one in the morning. I'd been too anxious to sit around all day pining away for Delaware.\n\nBridget was still sleeping as I took my things out into the common hallway near the main door. I had just put my key on the small table in the kitchen when there was knock at the flat's door. I checked my watch. I still had three hours until my flight, but I guessed it didn't hurt to get to the airport early. Besides, I was ready to leave.\n\nI grabbed my purse and jacket and opened the door, expecting to find the taxi driver waiting. I stumbled back when I saw Stefan standing there instead.\n\n\"Bonjour, Daphne.\" He gave me bises. \"I'm sorry. I startled you. Forgive me, mademoiselle.\"\n\n\"Bonjour, Stefan.\" I returned the greeting and stepped out into the hallway, closing the door behind me for the last time. I draped my jacket over my two bags. I'd had to buy a second one to fit all the new clothes I'd bought and been gifted. \"You're forgiven.\"\n\nHe stood with his hands clasped in front of him. Very formal like. \"What is this?\"\n\n\"Suitcases. You know, the things you put your clothes and toiletries in when you're traveling?\"\n\n\"Yes, I know what they are used for. But why are they out here?\"\n\nShit. I'd hoped to have avoided this conversation. To already be in the air before he'd realized I was gone. I sighed. \"My taxi will be here shortly.\"\n\n\"I don't understand. I knew the other girls were going back to America, but I thought you were accepting Pauline's offer. Or was it Rene's? Either way, my mother wanted to extend the invitation to stay in the flat if you didn't have other arrangements. Muriel told her how much you liked it here.\"\n\n\"Thank you, it's a very generous offer, but I can't accept it.\"\n\nHe smirked at me. \"You have a better offer? Another man has made you swoon?\"\n\n\"No, I need to see my family. I have to go home.\"\n\nStefan's face fell as he ran a hand through his hair. \"Don't you see, Daphne? Your home is here now.\"\n\nDamn, could the guy not look so desirable, even upset? \"I'm sorry. I really am.\"\n\nThe taxi driver opened the front door right then, and I pointed to my suitcases. He nodded and disappeared outside again. When I followed, Stefan was right behind me.\n\nSuddenly, he spun me around and hugged me. As I pulled away, unsure of what I was truly feeling, he caught my face in his hands. His eyes were glossy as they searched mine.\n\nHe kissed me then. Hard. Passionately. It left my legs shaky. He pulled back only far enough to separate our lips. \"Please stay.\"\n\n\"My sister-in-law is expecting. She needs me.\"\n\n\"I need you.\"\n\n\"I can't.\" I kissed his cheeks and left him standing on the stoop.\n\nI didn't look back as the car pulled away from the building. My heart said to tell the driver to turn around. That I was making a mistake. But I resisted and listened to my head. Stefan was just a man. I'd get over him.\n\n###\n\nThere had been a lot of hugs when Malcolm and Becca picked me up at the airport in Philadelphia. Even more tears. God, I'd missed them. Skype just couldn't compete with physical contact.\n\nI had been gone six months, but everything seemed the same as soon as I walked back into their mansion on the beach. Well, except for the fact that Becca was pregnant. And the master suite was under construction to partition a section off to be the nursery, so Becca was using the guestroom I'd previously slept in. I'd been relegated to the second guestroom\u2014the one where Drake had stayed on his visits. But other than that...\n\nI'd told Muriel I appreciated her offer to move back to Chicago, but I would rather stay and work on the east coast if possible. She was looking into getting me set up with an agent out here. In the meantime, Malcolm and Becca had insisted I stay with them. I wasn't going to argue.\n\nWe got into our old routine, except now I was the one being overprotective...of Becca. She'd finished her book, so she had a lot of free time on her hands while Sue, her agent/editor, did the final proofreading. We talked about all things baby as we sunbathed on the sand, or walked along the beach, or just sat around the house enjoying the early summer.\n\nI had been back a month when Malcolm approached me one evening after dinner. Becca had gone to lie down. I'd taken a glass of wine out to the expansive porch and curled up in a chair, watching the waves roll in and out under the darkening sky.\n\nHe took a seat in the chair next to me and stared out at the ocean for a few minutes. His deep voice startled me when he finally spoke. \"Tell me about Paris.\"\n\nIt was the first time we'd had alone since I'd returned. As I shared my adventures and he added his own quips, I realized how much I'd missed these chats with him. Once my story was told, we sat in silence.\n\n\"Do you miss it, Daphne?\"\n\nMy mind had wandered to a place I didn't want it to go\u2014to a topic I had intentionally left out\u2014so I was grateful for his distraction. But I blinked at him, unsure what he was talking about. \"Hmm?\"\n\nHis eyes turned to me, bright despite the lack of light. \"Paris. Do you miss it?\"\n\n\"Yes. But this is where I'm needed right now.\"\n\nHe frowned. \"You came back because you thought we needed you?\"\n\nIt was my turn to frown. \"You don't?\"\n\n\"It's not that, Daphne. I\u2014we, Becca and I\u2014want you to do what you feel led to do. Not out of some sense of obligation. To repay us or show your gratitude. We're very glad to have you back. We've missed you tons. But you need to feel free to go and do whatever you want, whenever you want. We appreciate your help around the house, especially in Becca's condition. Our invitation from last year stands: you're always welcome to stay as long as you want...as long as you need. You're still our family. But we never want you to feel you have to stay.\"\n\nI just nodded. He had always been such a good friend. Now my brother-in-law. I had wondered if that would change now that Drake was gone. I guess he didn't think it did.\n\n\"I have a favor to ask of you.\"\n\n\"Anything, Malcolm. You know it.\"\n\nBy the way he took a deep inhale and let it out slowly, I knew it was something he'd not only put a lot of consideration into, but it was also important to him. \"I want to take Becca back to Chicago. A mini vacation now that summer is here. Before she's unable to fly. We still have her condo there. And Sue has been begging to see her.\"\n\n\"That sounds wonderful. I'm sure she'll love it.\"\n\nHe cleared his throat. \"There's just one thing.\"\n\n\"Malcolm, just spit it out.\"\n\n\"It's just going to be the two of us. I didn't want you to get upset that we're not inviting you.\"\n\nI processed his words for a moment. It hadn't even occurred to me that I would go with them. But now that he had mentioned it, I was a bit disappointed. Still, I smiled and took the hand he had rested on the arm of the Adirondack chair. \"I'm fine. Really. I'd be happy to take care of the house while you're gone.\"\n\nHe let out his breath and squeezed my hand. \"Thank you, Daphne. \n\n\"Don't mention it.\" I turned back to the ocean view, telling myself I was going to have some me-time.\n\n\"Please don't say anything to Becca. I want it to be a surprise. It's the anniversary of when we first met.\"\n\n\"When do you leave?\"\n\n\"In a hurry to get rid of us?''\n\nI laughed. \"No. Just curious how long I have to keep my mouth shut.\"\n\n\"Uh huh. We'll leave Saturday morning.\"\n\n\"Are you just winging it, or do you have a set time to come back?\"\n\n\"Just a week probably. We'll see how she's feeling. So far, she hasn't had any morning sickness. Plus, I know she'll worry about you.\"\n\n\"Tell her not to. I took care of myself in Paris. I can handle a week alone at the beach.\"\n\n\"I will. No promises, though. You know her.\"\n\nI nodded. We'd returned to our mutual silence for several minutes when I thought of something. \"I have a favor of my own.\"\n\n\"Whatever you want.\"\n\n\"Can you stock up the fridge before you leave?\"\n\nMalcolm's deep rumble of a laugh made me grin. \"Should we leave the car, too?\"\n\n\"No, I should be fine lounging on the beach while you're fighting traffic in the big city.\"\n\n\"Rub it in, sweetheart. Rub it in.\"\n\n###\n\nMalcolm and Becca had been gone a day before I got up the guts to check out the nursery. They'd chosen not to find out the gender of the baby, and therefore had decided to decorate in a neutral color. The room had been framed and dry-walled for a couple of weeks, but they'd painted it just a couple of days earlier. It was a soft, buttery yellow with white crown molding and a chair rail. Matching white plantation shutters covered the window that had been installed to look out over the Atlantic.\n\nA folding chair half draped in a tarp sat in one corner of the room. I took a seat as tears filled my eyes. While there was no furniture or any other indications that this was a baby's room, the knowledge that its intention would be that had kept me away. I'd imagined having a room just like this...somewhere. With Drake of all people. That dream had not come true. But it was for the best.\n\nI forced myself to get up\u2014to not linger in my misery any longer\u2014and exited the room. It occurred to me that I'd not seen much of the master suite in all the months I'd lived here. It was Malcolm and Becca's sanctuary, of course. I'd always considered it private. And she had always cleaned the room herself. But I didn't think they'd mind me being up here now. At least for a few minutes.\n\nI stared up at a green and gray section of fabric on the ceiling above the bed. Directly across from the foot and a low bench was a wide window overlooking the ocean. I contemplated why one would put fabric on just one section of the ceiling. I found a set of switches on the wall and tried to turn the lights on. I heard a soft, whirring motion instead, and looked up to follow the sound of the noise.\n\nThen I laughed. That fabric section hid a skylight. What ingenuity. Their own private observation room. I bet it was very romantic while having sex.\n\nI closed the panel and looked around the room, noticing three doors down a short hall. The first two opened into a bathroom and a walk-in closet. I was contemplating what the third could be\u2014if it was a room that could have been used as a nursery\u2014when I turned the knob and met complete blackness. There wasn't even a crack of light on any of the walls suggesting a window.\n\nMy hand fumbled along the wall directly inside the door until I found a switch. There was a snapping sound as I flicked it upwards. Soft, yellow light in sconces on the black walls lit up a dungeon that rivaled the private rooms at the erotic club back in Chicago.",
        "A Saint Andrews cross was secured to one wall. There was a padded bench. A wrought-iron kneeler that looked like it belonged in a Catholic church. And some kind of device that appeared to be a sawhorse with padding and leather cuffs.\n\nThere didn't appear to be a bed for play or aftercare. But then again, the bedroom was right there. And their headboard with the lattice-style wood frame would easily accommodate cuffs or ropes.\n\nThe pi\u00e8ce de r\u00e9sistance was a cabinet just inside the door that held more accoutrements for bondage and flogging than I'd ever seen. Drawers full of toys and different kinds of bottles for lube or just pleasure. And a stereo system, of course. While it wasn't something that Drake and I used, I knew music was an important element for Becca.\n\nIt all made my legs weak and my pussy wet. I stumbled over to the bench and sat down, my hand to my chest. Holy, hell, Malcolm and Becca really did have everything I ever wanted.\n\nI was still trying to process it all\u2014to not be jealous\u2014when I heard the doorbell. I quickly secured the door and hurried downstairs, unsure why I felt guilty for discovering their secret room. But I made a mental note to tell them they should get some kind of lock on there before their little one was old enough to find it.\n\nThe bell rang two more times before I got down to the main level. I was panting as I reached for the handle. I had to try twice\u2014and fumbled with the lock\u2014before I could finally pull the door open.\n\n\"I'm sorry, hello?\"\n\nThe tall man with short, dark hair was already down the first two steps of the entry. He stopped but didn't turn around or speak.\n\n\"Can I help you, sir?\"\n\n\"Daphne?\" He slowly looked back over his shoulder, his voice meeting my ears before I saw his face. His bright eyes. The crease in his forehead as his eyebrows came together in consternation.\n\n\"Stefan!\" I barely breathed his name as my legs gave out.\n\nHe was too late as he lurched toward me. I landed hard on the floor of the foyer. He didn't wait to ask me if I was okay. He just gathered me up into his arms and walked to the back of the house, as if he was familiar with it. He set me on the couch, after which I rolled to my left hip to relieve some of the pain.\n\n\"Do you need some ice?\"\n\nI snorted. \"You just want to touch my ass.\"\n\n\"Is that an invitation?\"\n\nA tear trickled down my cheek suddenly. \"What are you doing here? How did you find me?\"\n\n~ H "
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "bdsm drama",
        "bdsm novella",
        "drama",
        "bdsm romance",
        "female submissive",
        "male dominant"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/raw-and-broken-ch-05"
}