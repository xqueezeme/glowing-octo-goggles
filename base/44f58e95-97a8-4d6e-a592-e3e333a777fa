{
    "title": "I Bet You'll Like It",
    "pages": [
        "Author's note: This is a work of fiction. All characters are eighteen years or older. Don't expect realism and you won't be disappointed when you don't find it! Enjoy!\n\n*****\n\n\"So,\" Judy said after gobbling down a huge mouthful of pizza, \"what exactly did you find in her anyway? You could do so much better...\"\n\nI shrugged, taking a sip of coke, keeping my gaze on the TV. I could feel my roommate's piercing stare boring into me as she sat by my side on the couch. \n\n\"Come on, Judy,\" I said, \"do we really have to talk about this? It's over, okay. She's a shallow skinny bitch and I'm happy to be done with her.\"\n\n\"Duh, of course you are. She was mean and selfish and boring, and you're nothing like that. But that's my point. Why, Greg?\" \n\n\"Why what?\"\n\n\"Why are you still bothered? Something about the whole Cindy business is still bugging you, I can see it. It's been three weeks now, and I tried not to pry too much, but...\"\n\nI snorted at that. \"Yeah, you tried. And failed!\" \n\nWe both snickered.\n\nJudy and I were close. When I told her about my breakup with Cindy, Judy's reaction was a mix of surprise and barely concealed relief. She had never liked Cindy one bit, saying she was an evil plastic doll. All things considered, Judy was right. After Cindy unceremoniously dumped me to hook up with a braindead frat boy, Judy was all sympathy and cuddles with me, even more than usual. She showered me with attentions, hugging me and getting on her tiptoes to give me her typical smacking pecks on the cheeks at every chance. It was nice, very nice indeed. And, in truth, Judy had done a fairly good job of keeping her characteristic curiosity in check, respecting my wish not to discuss Cindy anymore. So far, at least.\n\n\"Seriously though,\" Judy went on, unperturbed by my defensive sarcasm, \"I can see that you're still thinking about her. You're not sad like, the-love-of-my-life-left-me kind of sad, of course, because she was definitely not the love of your life. But you do miss her somehow...\"\n\nI chuckled at that, still trying to focus on the rerun of Game of Thrones. Judy could read me, I had to give her that. And I was happy to let her read me. Judy was cheerful, with a relaxed and kind attitude that put even a brooding loner like me at ease. She was also very smart, with a quick ironic wit that I couldn't help but love. Most importantly, she had a talent for making me feel comfortable. \n\nAll things considered, I wasn't really upset that she was asking me about my not so recent breakup. She was right, after all: I was still thinking about Cindy, in a way. I actually wanted to talk about it, but I was embarrassed. Still, if I was ever going to tell anyone, Judy would be the one. Sighing in resignation, I turned to my pizza-munching roommate. \n\nJudy's pale gaze locked on mine instantly. Her eyes were as bright and spellbinding as ever. I lost myself in them for a moment, trying to finally define their color and failing, as always. Pale blue? Light green? Ice gray? Impossible to say. But I was glad I couldn't tell. It gave me a perpetual reason to stare at Judy's sculpted, delicate face and look into her sparkling orbs.\n\n\"Fine,\" I sighed, snapping out of my momentary trance, \"you got me. I do miss Cindy, sort of...\"\n\n\"I knew it! Now, define 'sort of', please.\"\n\nI squirmed at that. \"You really wanna know?\"\n\nShe nodded her head, making her long dark ponytail bob. She had a curious yet sweet smile on her luscious lips as she kept her inquisitive eyes fixed on mine, waiting patiently.\n\n\"I don't really miss Cindy herself. Just, well, parts of her... Things we did, uh, one thing mostly...\"\n\n\"Yeah, 'things'... So we're talking about sex, right?\"\n\n\"Yes. More specifically,\" I said, trying not to blush like a schoolgirl, \"anal. I miss her ass, that's all.\"\n\nJudy raised an eyebrow, grinning. \"She didn't have much of an ass, Greg, come on. Way too scrawny.\"\n\n\"True,\" I chuckled, \"but she let me fuck it! Not that she was eager,\" I added, feeling better now that I could just let this recent obsession of mine out in the open. \"I had to beg her and then she'd complain a lot that she didn't like it and it hurt too much to enjoy it. Still, it got me hooked. That's what I think about when I think about Cindy these days: the two times I got to fuck her ass. In fact, that's pretty much why I stayed with her at all, it's not like I loved her...\"\n\nJudy took a big gulp of coke from my glass and nodded sagely. \"Yeah, well,\" she said, looking at me thoughtfully, \"I guess that makes sense. I mean, now I get why you're still hung up. But you don't need to sulk, Greg. Other girls might give you their asses too. Some wouldn't even make you beg at all. And,\" she concluded with a teasing smirk, \"a few of us might actually beg YOU to buttfuck them and they'd cum like crazy with your cock in their ass, because they like it, a lot.\"\n\nJudy winked as she purred out 'a lot'. I stared at her, my mind reeling. Candid conversations like this weren't exactly unusual for us, but what she was suggesting definitely was. Unless I misunderstood, of course, or she was messing with me, both of which were possibilities worth considering.\n\n\"You mean,\" I mumbled, shifting to sit more comfortably while trying to make the growing bulge in my pants less obvious, \"you like it... In the ass?\"\n\nJudy shrugged and looked away, suddenly bashful. Her pale cheeks reddened slightly. That was a first, I thought, intrigued by her reaction as much as I was by the subject. \n\n\"Yeah, I kind of like it,\" she said, still avoiding eye contact, speaking quickly, an uncharacteristic nervous edge in her soft voice. \"I never tried the real thing, not yet. Just my fingers and my dildo. But if I touch my clit while I play with my butt, I cum like crazy. And I mean, nuclear bomb crazy.\" \n\n\"Oh. Okay,\" I said, my boner now achingly stiff and my mouth suddenly dry. Judy was still looking away, biting her full lips, when I recovered from my brief shock and teased her: \"So that's what you do with your boyfriend during those videochats, uh?\"\n\nJudy laughed as she turned my way, slapping my arm playfully. \"I told you a million times, he's not my boyfriend! He's just a guy I know from back home. We go way back and we're just keeping in touch.\"\n\n\"Yeah,\" I pressed on, \"I'd say 'touch' is the key word...\"\n\n\"Well, yes, I finger myself when we chat,\" Judy pouted, raising her delicate chin in an exaggerated pose of hurt dignity that made her words comical despite their hotness. \"But that's because he lets me watch while he and his girlfriend have sex. It takes me back to the times we used to do it together, the three of us.\"\n\nThat hit me, hard. I knew Judy had some sort of virtual fuck-buddy back home in Oklahoma with whom she got together at least once a week. She had told me about this herself after I heard her scream out in climax one night and then asked her over breakfast if anyone else was going to join us. Giggling and shaking her head no, Judy told me she was just fooling around with a friend in videochat. She hated that I referred to this mysterious guy as 'her boyfriend', so of course I called him that at any given chance. \n\nI blinked my eyes before talking. \"The three of you? You mean you, this guy and his girlfriend... You used to have threesomes?!\"\n\nJudy laughed and nodded. \"Yeah, sometimes. We grew up together, the three of us. She's my best friend and the two of them have been a couple since forever. After they started to have sex, they kind of invited me to join in. It was pretty natural, I guess, at least it was for us. He was the one who took my cherry, and we did some stuff all of us together sometimes, but mostly I just watched the two of them, like I do now. They are really in love though, like, actual soulmates and stuff.\"\n\nI was blown away. \"Wow, Judy,\" I gasped, \"that's... So hot! I had no idea...\"\n\nShe giggled and took another big bite off her slice of pizza. \"You never asked, Greg. I bet you never thought I was into butt stuff either, eh?\"\n\n\"No, not really. Let alone group stuff!\"\n\n\"Well,\" she said, grinning mischievously, \"I had got you figured out for an ass man a long time ago. Of course,\" she smiled, \"the fact that you stare at my booty all the time gave you away easily.\" \n\nIt was my turn to redden now, but I was smiling as I did. \"Yeah, guilty as charged. In my defense though, I'll just say that your ass is absolutely epic, I just can't help myself. And,\" I added with as serious a face as I could muster, \"your tendency to wear boy shorts around the house is another extenuating circumstance I urge you to consider.\"\n\nWe both had a big laugh. After that, there was silence for a while as we looked each other in the eye. Then I chuckled and shook my head. \n\n\"What?\" Judy asked.\n\n\"Nothing, you got tomato sauce on your nose.\"\n\n\"Oh,\" she said, crossing her eyes comically in an attempt to see the tip of her pretty nose. Then she giggled and leaned in, brushing her nose against mine. \"So do you now!\"\n\nJudy lingered just a second with her nose pressed against mine. I could feel her hot breath on my lips. Maybe it was our talk, but even though we were pretty cuddly as a rule, this was the first time I felt a palpable sexual tension between us. It lasted just a second, then Judy gasped. With the corner of her eye she had caught something on the screen.\n\n\"Oh my god, Greg! We were about to miss the scene where Jaime Lannister bones his sister!\"\n\nWe both chuckled and turned to the TV, snuggling closer on the couch, the smears of tomato sauce cooling on our noses. My cock was still painfully hard, and I could feel a new urgency in Judy's clutching hug as she rested her head on my chest. \n\nWe settled in our usual cuddling position and focused on the show, silent all through the episode, except when Judy asked me if she could have the last slice of pizza. And of course she could.\n\n*****\n\nWhen Judy first walked into the apartment at the beginning of the semester, I instinctively liked her. She was a freshman, a year younger than me, and she appeared at our door while looking for a room off campus. It took me all of ten seconds to decide that she was going to be our new roommate. \n\nEven though there were three bedrooms in the apartment, Pete was almost never around. He showed up to hand in his share of the rent regularly, spent two or three days sleeping uninterruptedly in his room and then left again, barely saying a word, leaving me to deal with pretty much everything house-related. I'm not even sure he registered the fact that Luke from last year was gone and had been replaced by a pretty freshman named Judy. I didn't mind Pete's absence at all. With the place all to ourselves most of the time, Judy and I soon got very comfortable around each other. \n\nIt was normal for Judy to walk naked from her room to the bathroom to take a shower, or to stumble into the kitchen in the morning in just her panties and a tank top, shuffling around and groggily mumbling for coffee like a gorgeous little zombie until I handed her a cup, earning a smooch on the nose and a beaming sleepy smile from her. \n\nIt wasn't about exhibitionism or teasing either. From what I gathered, her family was, if not exactly nudist, something pretty close to it. Judy had been brought up not to feel ashamed of her body and of her sexuality. And why should she, I thought the first time I saw her naked, the day she moved in. I'll never forget the moment I saw her there, stepping out of her room, butt naked. She just said \"Hey, Greg,\" while she passed by me, wearing nothing but her bright, warm smile. I couldn't reply as she kept walking down the hall, telling me she was going to take a shower but she wanted to hear all about me when she was done. I barely managed to nod my head as I took in her spectacular body. \n\nSlim and gracefully girlish, blessed with soft curves that made my mouth water, Judy was beautiful. Her tits were round and perky, two perfectly shaped handfuls topped with long, puffy, upturned nipples. Her pussy was smooth and hairless, a pink fleshy flower that beckoned invitingly between her long toned legs. Her ass was definitely her best feature, as far as I was concerned. Heart-shaped, plump yet firm-looking, Judy's bubble-butt protruded roundly from her hips and thighs, jutting out like an invitation to spank it and test its juiciness. I never slapped it, but I did stare at that beautiful curvy ass, a lot. \n\nAfter that first time, I got to admire my roommate's amazing body again and again, in various states of undress. But, sexy and exciting as it was to gaze at Judy's naked beauty on a regular basis, nothing ever happened between us. We did sleep together once, but I mean 'sleep' literally. \n\nJudy had got a nasty cold and she was running a fever. She was so agitated and deliriously scared of being alone that night that she couldn't even get to sleep. I tucked her in and lay down by her side and she immediately hugged me tight, trembling and whimpering. She was so adorable, so vulnerable and cute, I just wanted her to get better as soon as possible. For a long time, while she shivered and coughed, I soothed her and caressed her hair, kissing her burning hot forehead and singing her favorite songs, trying to sound like Kurt Cobain, Bradley Nowell and Jack White, until she finally dozed off. I quickly fell asleep myself, holding Judy's feverish frame in my arms. \n\nThe morning after, her fever broke and mine spiked up. But it was worth it. Judy was deeply moved by the fact that I had got sick trying to make her feel better, she saw it as a noble sacrifice of sorts. Honestly it cost me nothing, it came very natural for me to do something for her. Still, it felt great to see the tender admiration and gratitude in Judy's spellbinding eyes. We spent a couple of nice albeit wheezy days curled up together, sneezing and coughing and watching TV on the couch wrapped up in blankets, until we both recovered. Talk about weird ways to bond. \n\nI know it may sound crazy, but in many ways I saw Judy more as a sister than a friend or a roommate. She was so nice and warm and cuddly, it was so easy for me to get along with her. We synced smoothly on pretty much every level of day to day life. It was kind of a first for me, living in this emotional happy bubble. It was like I always imagined it would be to have siblings, something that I had desperately wanted ever since I was a kid. \n\nAs an only child whose one close relative was a taciturn and stern father, it was a totally new experience for me to live with someone like Judy, who came from a big family with lots of cousins and uncles and aunts always around. She and her relatives were very close, and she often talked about them, telling funny stories from her life back home and sharing her happy memories with me, all of which I drank in avidly. With her kind and open attitude, Judy made me feel part of that world and, even vicariously, it felt great and I loved her for it. Right from the start, the feelings involved in the whole Judy situation were even more rewarding for me than the fact that I got to see her naked pretty much every day. \n\nClose and intimate as Judy and I already were, the conversation we had that night about butt stuff marked a turning point in our relationship. Maybe it was the fact that we almost kissed, or maybe it was the subject of anal sex itself and the discovery that we were both into it. All I know is that, in the couple of days after that pizza dinner, there was a buzzing undercurrent of excitement between me and my beautiful roommate.\n\nNothing out of the ordinary happened, but our daily gestures of affection were charged with a new intensity. Our hugs were longer and tighter, Judy's pecks on my cheeks were much closer to the corners of my mouth and, a couple of times, my usual adoring stares evolved into playful slaps on her fabulous bouncy ass, which made her giggle and purr huskily in turn. \n\nThis new sexual tension lasted until Friday night, when something weird finally happened: Judy decided it was time for me to watch Twilight.\n\nFor some time now, the fact that I had never seen any of the movies in the Twilight Saga had been a favorite teasing argument of Judy's. According to her, even a self-proclaimed disciple of Dostoevsky like me should know one of the defining pop culture references of our generation, at least in light of its social impact and regardless of its artistic merits. It was always more of a joke between us than anything else, but that Friday night Judy made it into so much more.\n\nIt was strange from the very start. Judy had me drink two shots of tequila 'to make the incoming visual agony less excruciating', as she put it with a smirk. After downing three tequilas herself, she led me by the hand to her bedroom to watch the movie on her laptop. \n\n\"Here, let's not take any chances,\" Judy grinned as she lay on her side on the bed, her laptop in front of her, \"we should be prepared in case you fall asleep from the boredom!\"\n\nI was too baffled to argue, plus I was slightly drunk and too intrigued by this turn of events to say anything. Neither me nor Judy usually drank, and her giggles told me that she was feeling the tequila a bit too. She had a mischievous glint in her pale eyes as she looked invitingly at me. I stood by her bed for a second, admiring her. \n\nShe was wearing a tight fitting blue T-shirt that showcased her full perky tits and left her smooth tummy exposed. Her gray boy shorts were straining to contain the plump roundness of her ass. I couldn't help but slowly let my gaze roam from the swell of her hips to her shapely thighs, all the way down her long legs to her pretty little feet. She was wiggling her toes, a tell of hers that I knew to mean she was either nervous or excited. \n\n\"Come on, Greg,\" she murmured, patting the bedspread behind her, \"I bet you'll like it...\"\n\nI just chuckled and joined Judy on her bed, spooning her and looking over her shoulder at the screen as she started the movie. I stifled a moan as Judy wiggled her luscious ass, pressing her juicy bubble-butt right against my tenting groin. Reaching for my hand with hers, she wrapped my arm around her waist, so that I was embracing her while she snuggled back into me.\n\nThe closeness of our bodies and the intimacy of the situation were especially intoxicating after the last couple of sexually charged days. The tequila did the rest. From the very start, I couldn't care less about the film. In a matter of minutes I was rock hard, my pant-clad boner nestled in the crevice of my gorgeous roommate's ass. \n\n\"Mmh, seems like you're enjoying the movie after all,\" Judy purred, turning to look at me over her shoulder. Her full lips were parted and her breath was labored as she asked teasingly: \"Is Bella Swan turning you on?\"\n\nWiggling her perfect ass, Judy trapped my erection deeper between her fleshy buns. \"Someone is definitely turning me on,\" I moaned, locking gazes with her, \"but it's not Bella.\" \n\nI reached my hand to Judy's face, cupping her chin in my palm and brushing her smooth cheek with my fingertips. \"This was never about making me watch Twilight, was it?\"\n\nJudy let out a little laugh, turning her clear gaze away from mine. \"Well, no, but it might be...\" she mumbled, shrugging her shoulders and thus making her tits jiggle deliciously. She was blushing, which didn't happen frequently but I always found it adorable when it did. \"It's just that since we talked about anal sex the other day... Well, I kind of couldn't stop thinking about it.\" \n\n\"I've been thinking about it too,\" I admitted, brushing a stray lock of dark hair behind her ear.\n\n\"Really? Because I actually considered, you know...\" she trailed off, arching a thin eyebrow. She blinked her piercing eyes nervously as she sighed and blurted out: \"Well, I wanted to ask you, if that's okay, and I assumed it would be since you said you think about buttfucking a lot and you always stare at my ass, which I'm okay with completely, because you're great and I feel so comfortable and relaxed with you, and if I'm going to let anyone do me in the ass you are definitely my first choice seeing as... Oh my god...\" she sighed, her cheeks burning red and her whole face flushed with arousal. She looked more beautiful than ever as she ranted away, trying to tell me what we both already knew. \"I'm messing this up so bad! It was so much easier in my head, I should have had more tequilas, or less actually, come to think of it... What I'm trying to say is mmhph!...\" ",
        "I couldn't resist anymore. She was so amazing and the moment was so perfect in its awkward sweetness and I was too lovestruck to do anything else. So I kissed her.\n\nFor an instant, as I pressed my lips against Judy's soft hot mouth, I could see her eyes widen in surprise. Then my eyes were closed and I was kissing her, registering only the feel of her lips opening and welcoming me. As our tongues met, Judy's body relaxed against mine. I embraced her tightly from behind and moaned into her mouth as she kissed me back. \n\nWe made out like we were thirsty for each other, tasting and drinking the other's mouth, slowly at first but getting quickly frantic, our tongues dancing and clashing as our hunger grew the longer and deeper we kissed. It was so natural and yet so intense to be making out with Judy. It felt relieving, as if we were finally doing something we were somehow supposed to do. \n\nWhen we broke our soulkiss, we were breathing hard. Without thinking, spooning her closer to me and nuzzling her smooth cheek, glorying in her soft purrs, I said: \"I love you, Judy.\"\n\nWhen I heard myself, my eyes shot open. Judy's pale bright eyes were big, so big as she stared at me in silence for what seemed like an eternity but was merely a few seconds.\n\nThis is it, I thought, I just went and ruined everything. Too much too soon, you idiot, I told myself. But what else should have I done, it just came out. It was true after all. Well, truth always blows shit up, you moron, I kept berating myself, and you've just blown a perfect thing with the most awesome girl you've ever met, and right after she practically offered you her virgin ass!\n\nThis all went through my head in a flash as I stayed frozen in place, mentally scolding my foolish self as I spooned Judy, who was staring at me with her mouth open, just as motionless as me. It was the most tense, agonizing handful of seconds of my life. Then she spoke and the spell ended.\n\n\"Oh Greg, I love you too! I thought you'd never say it, I thought... Oh who cares now, just kiss me!\"\n\nShe was laughing and I was laughing and then we were both devouring each other's mouth again, giddy and horny and happy as we made out and embraced. Silent except for our moans and laughs and the wet sounds of our long deep kisses, we rolled around on Judy's bed, stopping our face-sucking for a second only when Judy shut down her laptop and put it on her nightstand before pressing her mouth once against against mine. \n\nRunning our hands on each other's body soon wasn't enough. We fumbled with our clothes, taking them off and throwing them around the room in a frenzy until we were both naked, lying on our side facing each other.\n\nThe sight of Judy's tits wasn't new to me, but now I could finally do what I never did before yet dreamed about so often. Dipping my head down, letting her full hot lips out of my hungry mouth, I fell on Judy's splendid boobs. \n\n\"Oooh yes,\" Judy mewled as I took her succulent puffy areolas in my mouth in turn, nursing on her pink pebble-hard buds. \"Lick my titties! Suck my nipples like that, harder, yes, aaahh haaarder!\" \n\nAs I worshiped her round firm boobs with abandon, Judy wrapped her tiny hand around my aching boner. She stroked me slowly, working her fist from my pre-cum leaking glans all the way down my shaft, her jacking motion made somewhat erratic by the shivers of pleasure coursing through her. While I kissed and nibbled her perfect breasts, I reached a hand to Judy's warm moist mound. Squealing, she squeezed my cock harder, making me moan into her soft tit-flesh as I cupped her smooth pussy. Judy shivered and her breath got raspier as my thumb slowly circled her clit and I eased first one then a second finger inside her dripping little slit. \n\nI was light-headed with arousal as I nursed on Judy's long nipples and sawed my digits inside her silky soft folds. If I hadn't known any better, I'd have thought she was a virgin, she was so incredibly tight. Judy gasped and let go of my throbbing cock when I gently slid a third finger inside her. She ran her hands through my hair and pulled me closer, pressing my head harder against her fluttering chest, encouraging me to work her nipples harder with my mouth. \n\n\"Ahhhh yes, Greg, yeeees! Bite my nipples, baby, finger my pussy, harder, faster! Oooh god, I'm so close... I'm gonna cum aaahh!\"\n\nHer snug vaginal channel gushed more and more nectar as I increased my finger-fucking tempo while rubbing her clit faster with my thumb. I was thrilled to hear her whimpers and moans of pleasure getting louder and raspier, until Judy's voice broke and she squealed out in climax. Her hot gushing hole rippled as she came on my fingers, bathing my hand in her girl-cum.\n\n\"Aaaahhh fuck yeeees!\" she yelled as I kept nibbling hard on her gummy nipple, prolonging her pleasure. I slowly pumped Judy's tight creamy cunt and tormented her engorged clit, loving the little cooing squeals she made, until she pushed me to lie on my back and rolled on top of me, resting her head on my chest. \n\n\"Wow, Greg,\" she huskily said, breathing hard, her eyes barely open as she basked in the afterglow, \"I came so hard just with your fingers, I can't imagine what it'll be like when you stuff your cock in me!\"\n\n\"You've got an amazing pussy, Judy, and you taste great,\" I said, licking her slick fluids off my fingers, loving instantly her tangy sweet flavor. I embraced her as she leaned in to kiss me, tasting her own juices from my lips. \"Seriously, you're so wet and soft and so, so tight!\"\n\n\"You sound surprised,\" she giggled as she brushed her lips against mine, her hand again fisting my stiff meat. \"Did you think my pussy would be all loose and floppy from the group fucks with my friends back home?\"\n\n\"What?! No, no way,\" I attempted to lie. Unable to hide a snicker, I added: \"Well, kinda...\"\n\nJudy nibbled playfully at my chin as we both chuckled. \"I told you, I mostly watched. But,\" she said as she slowly traced butterfly kisses on my neck and torso, pressing her perky tits against my skin while she moved lower down my body, \"even just from watching and with limited practice, I picked up a few tricks. Like this one.\"\n\nLooking at me, kneeling between my legs, Judy held my raging cock at the base pointing it straight up as she kissed my precum-shiny glans. Winking at me, she took me in her mouth and gently sucked on me, making me moan. Sealing her soft lips around my girth, sucking and slurping, Judy slowly pushed her face down, engulfing my meat inside the delicious warm wetness of her mouth. \n\nI watched in awe as Judy slid her lips lower and lower along my shaft in one long uninterrupted motion, aligning my pole and working her jaw to accommodate my thick dick in her oral cavity until she had gobbled me down to the root. Never breaking eye contact, slobbering lewdly and squeezing me inside the confines of her throat with constricting swallowing motions, Judy held me deep in her gullet for a few seconds before slowly pulling back, letting my saliva-glossy cock glide out of her talented mouth until only the bloated head was still trapped between her amazing lips.\n\n\"Oooh fuck! Judy, you're so good at this!\" I managed to gasp as shivers of ecstasy ran up my spine, my eyes mesmerized by the sight of my beautiful roommate's face descending down on my stiff spit-slippery dick. \n\n\"Mmgphh! Mmpphggrgh!\" Judy gurgled, her cock-stretched lips curling in a lascivious attempt at a smile. Her eyes were a bit watery, brimming with gag-induced tears, but they glinted with pride. \n\nJudy never broke eye contact with me as she deepthroated my throbbing cock over and over again, treating me to the sloppiest, sexiest, most incredible blowjob I had ever got. When she sensed I was close, she let me slip out of her oral cavity and licked my spittle-slick shaft all over, munching on my bulbous mushroom head and brushing her fantastic lips up and down my shaft, breaking her devastating cocksucking rhythm for a bit before gobbling me balls-deep into her throat again. \n\nEventually, I just couldn't take it anymore. \"Aaaah Judy, this feels great! I'm gonna cum soon!\"\n\nI tensed all over and started pumping my hips up, bucking into Judy's gobbling gullet, pushing my glans as deep down her throat as it would go. Judy took it without flinching, letting me fuck her face wildly. Her wet slurping purrs added an amazing vibrating feel to the already heavenly tightness of her squeezing throat muscles. \n\nI came explosively within seconds, spraying a huge load against the back of Judy's sucking mouth and coating her tonsils in thick jets of cum. She moaned as I growled and blasted a deluge of seed into her esophagus. Judy swallowed in time with my pulsing spurts while keeping her lips clamped around the base of my ejaculating cock, drinking down all the cum I had to give her.\n\nI was dizzy by the time Judy slowly slid her lips up along my length, finally letting me escape the heavenly prison of her mouth with a wet, squishy pop. \n\n\"Mmmh, yummy,\" she cooed, using my still plump dick as a brush to capture the few stray dollops and rivulets of semen that had drooled from the corners of her vacuuming lips and now glazed her chin. \"So creamy, and so much! My tummy feels so full, Greg,\" she said in teasing little voice, licking her seed-glossy lips, \"do you always cum like a geyser like that, or was it just for me?\"\n\n\"Oh my god, Judy, you're so awesome!\" I mumbled, still dazed and ever more charmed by this beautiful, sensuous goddess who was still licking and suckling on my cock, keeping me hard while she cleaned off every last trace of cum in sight. \"I've never been sucked off so good!\" \n\nIncredibly, her cheeks reddened at my compliment. \"Really? You're just the second guy I give head to... So every time my friend said I was a great cocksucker he was sincere, I guess. I thought he was just humoring me, you know, like, saying it to make me feel good about myself.\"\n\nI had to laugh. \"Oh no, he wasn't kidding, believe me. You ARE a great cocksucker! In a good way, of course.\"\n\n\"Of course,\" she snickered. Then, standing on her knees and turning around, Judy presented her round juicy rump to me. Quickly settling herself on top of me in a 69 position, she teased: \"So how about you, Greg, are you a good pussy-licker?\"\n\nBefore I could reply, Judy had lowered her groin on my face. Her dripping wet slit landed square on my mouth, her puffy splayed labia meeting my lips in a lewd kiss. At the same time, I felt again the heavenly warmth of her mouth enveloping my glans, the seal of her luscious lips once again gliding along my deflating pole. Without wasting a second, I started eating her out for all I was worth. \n\nI sucked and slurped on Judy's fleshy flower, drinking her abundant nectar, probing into her leaking slit and then tongue-lashing her clit, making her moan every time I focused on her thick needy button. While I devoured her pussy, I grabbed her plump ass in my hands, sinking my fingers into her firm full buttocks and prying them apart, exposing her buttcrack. After dipping my fingertips in her dribbling cunt-juices, I started teasing her cute little rosebud, massaging that pink pucker and pulling its crinkled edges apart, gaping it slightly. \n\nJudy's taste and the feel of her hot pussy against my mouth were like a drug, the more I licked her the more I wanted to lick her. The joyful response of her quivering body and her cock-muffled groans encouraged me to make my incessant lapping attentions even deeper and longer and more intense. My ass-probing fingers got bolder too. While Judy moaned around my cock from the relentless clit-licking I was treating her to, I eased my nectar-lubed index into her pliant sphincter, entering her virgin ass for the very first time. \n\nThe moment my finger slipped into her asshole, Judy writhed all over, her pussy-juice flowing even more copiously into my clit-lapping mouth. It was as if I had found a secret switch that amplified her pleasure. \n\n\"Oooohh yes! Oooh fuck yeahhh,\" she panted, letting my recuperating cock plop out of her mouth but still jacking me off with her tiny fist. \"Yeees, Greg, finger my asshole like that! Lick my clit while you finger-fuck my ass! Ooohh my fucking god, it's soooo good!\"\n\nAs I unleashed a tongue flurry on her sensitive nub and pumped my finger in and out of her anus, Judy moaned and panted like a stranded fish. Her head was resting on my thigh and she held my cock at the base, slapping it wetly against her cheek. Too overcome with pleasure to actually focus on sucking me, she still nibbled and licked my glans lazily between deep gasping purrs, her body shuddering in anticipation of an incoming climax. \n\nJudy went rigid and held her breath as I pushed a second juice-coated digit inside her butthole, gently sinking to the second knuckle into her tight hot rectum. As soon as I started sawing my fingers in her ass, she began yelping in pleasure, trembling all over. The increased stimulation from the anal fingering and a final assault of whirling licks on her clit pushed her over the edge.\n\n\"Ooooohhh! Oooh Greeeeg!\"\n\nShe came spectacularly. A flood of pussy juices bathed my face as Judy's virgin little asshole clenched and unclenched around my fingers, making me giddy with the preview of what it might feel like to be buried inside that warm constricting passage. When Judy descended from her peak I was still licking her scrumptious girl-cum off my lips and her labia, glorying in the taste of that sweet reward for the pleasure I had just given her. \n\nCooing, Judy rolled off me and came to lie by my side, snuggling into me as she traced soft kisses all over my face, tasting her own run-off nectar. \"Mmmh okay, it's official now,\" she purred as she hugged me, pressing her tits tighter against my chest, smiling impishly, \"you are indeed a great pussy-licker!\" \n\n\"Thanks, but I sort of cheated,\" I replied nuzzling her slender neck, \"if you consider fingering your butthole cheating, that is.\"\n\nJudy chuckled and gave me a long wet kiss. As she sucked my lips into her soft mouth, her fingers reached down to my cock, encircling me and fisting me to full hardness.\n\n\"Yeah, you did exploit my weak spot, but that counts as a plus,\" she said huskily. \"It made me cum so hard to have my pussy licked and my ass fingered at the same time. I loved it, Greg.\"\n\n\"I noticed,\" I snickered, wrapping my arms around her and reaching my hungry hands to her beautiful plump ass. Grabbing those round juicy globes in my palms, I kneaded her curvy booty and sank my fingers in her fleshy buttcheeks. \"You came almost immediately when I started pumping your ass,\" I murmured, \"and your tiny little asshole felt so tight, Judy. So fucking tight...\" \n\nShe grinned and jacked my hard meat faster as my fingers explored her crevice and circled her pliant rosebud, eliciting a contented sigh from her when I poked a fingertip inside her rubbery anal ring. It drove me wild with desire to see how sensitive Judy's asshole was, how she seemed to melt when I teased her forbidden little hole. \n\n\"You like fingering my ass? You like playing with my naughty asshole? Because I do,\" she purred, her lips brushing against mine, her breath labored. \"It drives me crazy to have my butthole fingered... I can't wait to feel your cock deep in my ass, stretching my tight virgin asshole.\"\n\nMy shaft throbbed in Judy's hand and my heart beat faster at her words. I could hardly believe the reality of it, but I was overjoyed that Judy was so willing to let me fuck her amazing ass. The steel hardness of my member pulsing in her tiny fist let her know exactly how I felt about her idea. \n\n\"You want my ass, Greg?\" she whispered in my ear, making me shiver in excitement. She was rubbing her warm slender body against mine, writhing and panting as I slowly masturbated her virgin anus. \"Tell me, baby, aaahh! Tell me how much you like my ass... I want to hear you say how badly you want to fuck me in my tiny little asshole oooh!\"\n\n\"Yes! Fuck yes,\" I grunted as her slender hand flew all along my rock-hard pole, \"I want to fuck your beautiful ass so bad, Judy. You have the roundest, juiciest, most perfect bubble-butt ever and I love it and I wanna fuck it like crazy!\" \n\n\"I want that too, I want you to take my anal cherry and pump my ass full of your creamy cum,\" she panted, grinding her leaking pussy against my thigh. I sank my index deeper into her butthole and eased in a second digit, making Judy mewl into my ear. \"Ooohh fuck yes! Finger me deep, baby, open my ass for your big cock!\" \n\nOur mouths met in a languid soulkiss as Judy rolled on top of me, my fingers still buried in her accepting sphincter. We made out sloppily for a bit while she rocked her hips, grinding her dripping pussy on my hardness. Her butt-ring was clamping erratically around my probing digits, announcing her rushing climax, when Judy suddenly unclasped her mouth from mine and reached her hand to my cock, wrapping her slender fingers around my thick meat. \n\n\"Time to lube you up,\" she smiled, raising her hips and pointing my raging erection to her sopping wet cunt. \n\nI grunted in pleasure as my bloated glans slipped inside Judy's hot little slit. I watched in awe as her splayed pussy lips descended along my pole, our bodies joining and our crotches coming closer and closer. Her slippery vaginal walls opened around my invading thickness and enveloped inch after inch of my dick in her warm velvety snugness, until I was buried to the hilt inside her. \n\n\"Aahhh Judy, your pussy is so tight and wet\" I panted as she sat still on my pole, breathing raggedly. Her slick walls were squeezing me deliciously as her pussy reshaped itself around my embedded cock.\n\n\"Ooooh this feels so good Greg, you're so big inside me,\" Judy mewled. She was biting her full lips as she straddled my lap, impaled on my shaft, her hands resting on my chest for balance as she rotated her hips, stirring her tight honey pot with my length. Her eyes were closed as she enjoyed the feel of my cock filling her pussy and my fingers masturbating her asshole. \n\nAfter a while, gasping and moaning, Judy started riding me cowgirl style. At first she barely let an inch or two of my cock slide out of her gushing clingy pussy as she lifted herself off me, but soon she got into a smooth bouncing motion. \n\nEven when she raised her plump ass up and my nectar-glossy shaft briefly vacated her sweet cunt hole, I kept sawing my ass-probing digits into her tight rubbery butt-ring. I sank them all the way into her virgin anus whenever her puffy dripping labia were pressed against my abdomen and my raging boner was sheathed completely inside her pussy. Judy moaned out loud then, and so did I, crazed by the sensation of touching my own cock with my butt-pumping fingers through the thin membrane separating her tight holes.\n\nThe only thing that beat the amazing feel of Judy's tight gushing slit gliding along my shaft was the sight of her rapt face as we fucked. She was breathtaking, this sweet beautiful girl riding me like there was no tomorrow. I was too overcome with affection and pleasure to do anything but moan and buck my hips up into her pussy, clapping against her descending hips, but the image of Judy with her mouth open in a perfect O, her eyes closed, her head thrown back and her dark ponytail swinging around etched itself in my mind indelibly. She was the one, I knew it without a doubt.\n\nWith her perky tits swaying mouth-wateringly before my eyes in time with her bouncing rhythm, it was impossible for me not to attack those pink hard nipples tracing circles in the air. Sitting up, pushing my cock even deeper inside Judy's snug pussy, I took her erect puffy buds in my mouth in turn, sucking and nibbling and licking them, worshiping her boobs as I fingered her ass faster and she fucked herself ever more wildly on my throbbing erection.",
        "\"Ooooh Greg, yes! Suck my titties, bite my nipples! Aahh harder, bite them hard like that! Uuhh god yes, finger my ass deeper, baby! Harder, faster, oooh yeeees!\" \n\nHer huskier and louder yelps as she slammed herself forcefully down on my pole, the shivers running through her slender frame and the broken urgency in her voice let me know just how close Judy was to her orgasm. Giving a long nibbling kiss on a puffy areola, I spread her round meaty asscheeks further apart and pressed a third finger at the entrance of her pliant sphincter. Judy trembled all over and gasped as her little rosebud stretched even more to accommodate my slowly invading digit.\n\n\"Uuuhh! Ohmygod, ohmygod, ohmygod!\" she panted, slamming herself down one last time and staying perfectly still on my lap, her pussy crammed full of cock while her tight asshole dilated and surrendered to my careful but determined poking. She was shaking like a leaf when the tip of my third ass-delving finger punched through her anus and slipped inside her warm virgin ass. \n\nI unclasped my tit-sucking lips from her abused nipple and sat up straighter, face to face with her ecstatic visage. \"You okay, Judy? Is it too much? Tell me if it's hurting yoummhmph!...\"\n\nThe savage kiss that muted me preceded a burst of pure lust pervading Judy. Sucking my tongue, clamping her lips around it and nursing on it like it was a cock, she wrapped her arms around my neck and pulled me in deeper into her devouring soulkiss. Moaning wetly into my mouth, she raised herself off me and slammed herself down, savagely spearing her little pussy on my cock and her snug asshole on my fingers, impaling both her holes hard and deep once, twice, three times. \n\nAt the third clapping impact of her fleshy bubble-butt on my thighs, Judy came. Her already tight pussy clamped around my meat in a series of silky soft squeezes, gushing a stream of sweet nectar all over my pole while her stretched-out anus convulsed in twitching spasms around my fingers. \n\nJudy's long scream of release was muffled by our rabid soulkiss while she rode out what looked like a massive orgasmic wave. She held me tight to her and we kept making out long after she descended from her peak, my achingly hard cock still stuffed balls-deep in her soaked pussy, my fingers still gaping her little puckered asshole. I was drunk on the notion that I was in all of Judy's orifices at once, and clearly so was she.\n\nUnclasping her vacuuming lips from my mouth, staring at me with sparkling, huge eyes, she finally panted breathlessly. \"Greg, baby, I love you so fucking much! You made me cum like crazy, you feel so good inside me, I was sure you would! I love this and I love you.\"\n\nMy cock flexed inside her vaginal sheath, her heartfelt declaration pleasuring me just as much as her sugar walls hugging my boner. \"I love you too, Judy. And I'm gonna cum like crazy too in no time if you keep squeezing my cock with your tight little pussy like that!\"\n\n\"Oh no you're not! Not just yet and not in that hole!\" \n\nJudy laughed and gave me one quick smooch on the lips, then she unwrapped her slender arms from around my neck and rose off my lap. She cooed as my raging erection plopped out of her soaked slit and slapped back against my abdomen with a wet smack.\n\n\"You look ready now, all nice and wet\" she said, glancing at my nectar-coated cock. Reaching into her nightstand drawer, she grabbed a bottle of lube and passed it to me. \n\nBefore my stupefied eyes, Judy got on all fours, her elbows and upper chest pressed down against the bed, her spectacular ass in the air, submissively offered. A side of her face was resting on the bedspread as she looked back over her shoulder, smiling impishly at me. Arching her back, accentuating the juiciness and roundness of her majestic heart-shaped ass, Judy wiggled her plump rump in my face. I was instantly hypnotized. My cock got harder still, if that was even possible. \n\n\"I need you in my ass now, Greg,\" she murmured, her sweet voice thick with desire and anticipation. \"Grease me up good, baby, get my tiny little asshole ready for your big cock. I want you to pop my anal cherry and then buttfuck me till you cum deep inside me. I want your creamy cum filling my ass. Would you like that? Do you want to stick your fat cock up my ass?\" \n\nI thought I would cum just from hearing her words. \"Fuck yeah, Judy,\" I mumbled, dazed and horny as can be, \"I can't wait to be balls-deep in your tight asshole.\"\n\nJudy purred and kept wiggling her spectacular bubble-butt. Chewing her lips, she reached her tiny hands behind her and pried her fleshy buns wide apart, revealing the little pink starfish of her asshole. At that sight something snapped inside me. I barely heard her murmur: \"Go ahead then, I want you to take my ass. It's yours Greg, all youuuh-uhh-uuhhh!\"\n\nJudy's words broke into a guttural yelp of delight the moment my tongue made contact with her cute tiny pucker and I started licking away at her asshole. For a while, I was lost in a sort of rimming frenzy. Oblivious to all else, I licked and lapped and slobbered over Judy's docile sphincter, munching on it like I couldn't get enough. I french-kissed her butt-ring and poked my tongue into her crinkled anus, sucking and smooching it into relaxation while letting thick strands of saliva dribble into her forbidden little hole. I had never done this before, but I was instantly devoted to this lewd aspect of ass-worship, specially since I had such a marvelous masterpiece to adore.\n\nJudy held her plump asscheeks open as much as she could to give me better access, clearly loving what I was doing. My ears were filled with her panting moans of absolute pleasure, my head pounded with arousal. Her howling reaching a peak when I started sawing the tip of my probing tongue in and out of her relaxed, saliva-coated backdoor. \n\n\"Ooooh, baby, that's soooo good! I love your tongue in my ass aaaahh!\"\n\nAt some point during my enthusiastic analingual ministrations, almost as an afterthought, I reached my hand to Judy's dripping slit. Wetting my fingers in her gushing pussy, I started rubbing her thick protruding clit in fast circles. That was all it took. With a gasp and a series of shivers that almost dislodged me from between her luscious buttocks, Judy came yelling.\n\n\"Fuuuuck yes! Ooooh yes, Greg, lick me! Lick my aaaaass!\" \n\nAnd I did. I'm not sure how long I stayed there with my face buried in her ass, rimming Judy's sphincter and fingering her drooling pussy and throbbing clit as she just kept crying out and cumming, rivulets of sweet nectar drooling along her thighs. The feel of her puckered rosebud pulsating around my tongue when she came was so obscenely erotic that it made my head spin. I only briefly stopped licking her ass to scoop up and drink down some of her sweet girl-cum, then my lips were once again clamped over her anus. \n\nI was so intoxicated by the whole situation and the animalistic unrestrained pleasure dripping from Judy's every ragged breath that I didn't ever want to stop what I was doing. Finally, it was she who interrupted me, managing to speak brokenly between sighs of ecstasy. \"Uuuhh stop, please, stop Greeeeg! Ooooh fuck yes, no, nooohh!... Enough, I love your tongue but oooh!... I need your cock in me now, pleeeease!\" \n\nMewling as she looked back over her arched shoulder, Judy was practically hysterical, she was so overcharged with lust. Unclasping my mouth from her well-rimmed asshole, panting with excitement, I met her burning gaze. It made me somehow proud and rabid with desire to hear Judy's pleading tone as she practically begged me to fuck her ass.\n\n\"You want this cock up your ass?\" I teased, kneeling behind her, nestling my rock-hard shaft between her soft meaty asscheeks and lazily grinding into her buttcrack. \"You want me to fuck your virgin little asshole, Judy?\" I insisted, slapping her plump rump with my boner while I poured a huge amount of lube on her asshole and rubbed it all around her sphincter, pushing it into her ass with my fingers to coat her already glinting, spittle-slick anus.\n\n\"Oooh yes, yeeees, please, I need it!\" she pleaded, rotating her ass in anticipation as I kept lubing her up with my fingers, gaping her little hole to let the gooey fluid dribble straight into her rectum. \"You got me so hot, Greg, so fucking hot! Just put your cock in my ass, I'm ready, baby! I'm all tingly and hot for your cock... My ass needs your big cock now, pleeease, I'm going crazy here!\"\n\nShaking with excitement, my eyes glued on Judy's pink puckered hole, I slipped my raging boner into her dripping pussy in one long, slow thrust. She moaned as I filled her little slit, both in pleasure and frustration at my prolonged teasing, a wanton, almost desperate look in her pale sparkling eyes as she looked over her shoulder at me. I couldn't resisted that look if I wanted to. \n\n\"Open your ass for me,\" I said, sliding out of her pussy and rubbing a huge dollop of lube over my nectar-shiny erection. Holding her plump asscheeks open, Judy pulled apart the crinkled edges of her slick little asshole with her fingertips, gaping it for me. Her sphincter was twitching and pulsating with excitement as I positioned my glans against that cute, pouty pucker. \n\n\"Do it! Take my ass, Greg, ooooohhh!...\" \n\nJudy's eyes closed and her mouth went slack, exhaling a long lusty moan as I pushed firmly, pressing myself into her ass. Almost immediately her oily rubbery butt-ring yielded and dilated around my invading cockhead. I held my breath as I watched my bloated tip get sucked into Judy's pliant greasy anus. The sight of her virgin sphincter stretching out around my girth mixed with the feel of her anal muscles grasping and squeezing me was amazing. I pushed another inch of my length inside Judy's ass then I held still, letting her adjust. \n\n\"Ooohhh nooo, don't stop,\" Judy panted, her voice thick with pleasure, her hands pulling her fabulous round asscheeks further apart. \"I'm okay, baby, uuuuhhh! More, give me moooooore!\"\n\nGently, trying to contain the urge to just ram myself to the hilt into that spectacular and totally surrendered bubble-butt, I kept easing my rock-hard cock inside the hot tight confines of Judy's slippery asshole. I went in easy, enjoying the hugging tightness enveloping more and more of my thick pole as I penetrated deeper in the buttery warmth of Judy's snug rectum. \n\nAs I claimed her virgin asshole, I kept checking Judy's reaction for signs of discomfort or pain, but there were none. Gradually, I packed her ass full of my hard meat while all Judy did was coo and gasp in delight, murmuring her incoherent appreciation of our sodomy. She was so into this, so relaxed and well prepared that soon I managed to cram myself balls-deep inside her beautiful plump ass. I thought I had died and gone to heaven the moment I felt my low-hanging balls bump into the sopping wet folds of Judy's pussy while my groin met her soft curvy asscheeks. \n\n\"Fuck, Judy, oh my fucking god,\" I grunted, my eyes bugging out of my skull as her dilated little sphincter stretched obscenely around the root of my cock, her warm dick-stuffed anal tube squeezing and massaging me wonderfully. \"I'm all the way up your ass! Aahhh, this is amazing! Your ass is so tight, soooo hot and tight!\" \n\nIf I was drunk with anal pleasure, Judy was simply too far gone to even speak properly. As soon as I bottomed out inside her virgin rectum, she let go of her buttcheeks and started frigging herself furiously while clawing at the sheets with her other hand. Her mouth was agape and her closed eyelids were fluttering crazily as her anal walls quivered around my shaft. I grabbed her fleshy buns in my palms, kneading and caressing her ass, trying to steady myself while Judy's asshole clenched and unclenched around me in pre-orgasmic twitches and her fingers became a whirling blur on her clit. \n\n\"Uuuuh soooo good,\" she panted, murmuring brokenly between gasping yelps, \"I can feel you uuhh... So deep in my ass aaaah... Gonna cum, baby... Oooooh fuck, so full of cock ooooh! Your cock in my ass aahhhh! Making me cuuuh-uuhh-uuuhm!\"\n\nI sank my fingers into Judy's plump rump as a massive orgasm crashed over her. I grunted in ecstasy, seeing stars while she yelled out, her anal muscles tugging and milking and sucking on my shaft. The feel of her slippery rectum tightening and releasing while the little ring of her sphincter spasmed crazily around my base was incredible. I stayed perfectly still, willing myself with all I had not to explode inside those amazing anal depths just yet.\n\nMy mind reeled as I realized that I had just seen a girl cum from assfucking for the first time ever: Judy had just orgasmed with my cock up her ass. As I rode out her earth-shattering anal climax, I could hardly believe how lucky I had been to meet Judy. She was incomparable already in my eyes, but this, her anal predilection and the way we synced sexually on top of everything else, this somehow felt like the ultimate proof that we were meant to be together.\n\nOnce her orgasm abated, buzzing with love and berserk with lust, I leaned over Judy's arched back and rested my head on her slim shoulder, kissing her thin neck and nuzzling her flushed face. \n\n\"You're the best girl there is, Judy. I love you,\" I murmured into her mouth between kisses, flexing my buried cock in her ass, making her sigh deep in her throat as we made out messily, munching on each other's wet lips. \n\n\"Uuuhhh! I ahhh... Love you... Too!\" she gasped, almost whimpering. She was so overcharged with the novelty and animalistic intensity of our first anal coupling that she looked high. \"And I love ooooh!... Your cock in my aah-aaahh-ass!\"\n\n\"You're so beautiful right now,\" I went on, stirring my fat pole inside her buttery bowels, making her squirm and pant and breath hard into my mouth. \"You looked so hot, cumming so hard with my dick crammed up your tight virgin asshole. I'm gonna fuck your perfect bubble-butt now, would you like that? Do you want me to pound your beautiful ass, Judy? Do you want to be my little buttslut?\" \n\nHer anal walls contracted once again around me, her persistent clit play and my dirty talk conspiring to evoke a lighting-quick climax to suddenly wash over her surrendered frame. \"Ooooh god, yeaaah! I'm your asswhore, baby, make me cum again with your big cock! Take my ass, fuck my little slutty asshole ooohh!... I love it, Greg, I love how you feel in my ass! So big, stretching me so good uuuhh!... Give it to me hard and deep, baby, I want you so much! Make me your buttfucking toy... Uuuhh yeeees!\"\n\nShe was still rambling while I straightened back on my knees and withdrew my cock halfway and then wedged myself back in all the way until I bumped against her pillowy asscheeks. Carefully, as gently as I could while I kept my anal lust in check, I repeatedly vacated and refilled Judy's tight smooth rectum. At each pass, I let more of my hardness slip out of her anal sheath on the out-strokes and I plunged back in a little faster on the in-strokes, enjoying the warm tugging pressure of Judy's slippery untouched ass and the clamping snugness of her sphincter sliding around my girth. \n\nWhile I methodically stretched out her asshole and let her get used to my throbbing presence deep inside her most delicate and deliciously forbidden orifice, I gloried in the incomparable sight of my erection gliding between the curvy jiggly buns of Judy's fleshy ass and then disappearing inside her oily dilated butt-ring, over and over again. After a while, the snug creamy depths of her rectum surrendered completely to my slow but determined anal assault, accepting me in that slick caressing warmth without resistance. Judy's freshly deflowered rosebud was as relaxed and accepting as it was ever going to be. \n\nMy grunts and her moans became a chorus of lewd anal delight as her pliant well-rimmed anus repeatedly gobbled all of my stiff meat with ease. Thanks to the lube, her willingness and the long preparation, the friction of my pole gliding in and out of Judy's tiny backdoor was reduced only to the sweet natural tightness of her conquered asshole. Unable to restrain myself anymore, sensing it was okay, I picked up my pace and started to really fuck her ass. \n\n\"Aaaahh yes, baby, yeees!\" Judy whimpered contentedly as my cock plowed her docile butthole, a dreamy smile playing on her parted lips. \"Fuck my ass! Go deeper in me, harder uuuuh!\" \n\nRubbing her clit faster, Judy started pushing her juicy rump back to meet my thrusts, matching my buttfucking tempo. My aching boner and her greedy little asshole synced perfectly, our bodies finding a lascivious harmony of their own in the increasingly faster and wilder motions of our passionate anal coupling. \n\nFor long, amazing minutes, I sodomized Judy with gusto, pounding her ass deeply with long fluid strokes. She took it all willingly, moaning as I rode her ass hard and fast, sinking myself all the way into her rectum and then retreating smoothly, feeling her clingy little butt-ring slide along my pole until only my bloated tip was still wrapped in her oily anus, signaling me that it was time to plunge balls-deep in her ass again. \n\nHer pleasure and the fact that she was actively participating in our intense assfuck, pushing her jiggly booty back to impale herself on my butt-drilling tool, made it all so much hotter. Judy's slim body hummed and shuddered, the pleasure from the relentless anal penetration amplified by with her incessant clit-diddling. Nothing but sexy little whimpers escaped her lips. I grunted like an animal as I assfucked her harder and harder, thrilled that she was having a string of back to back mini-climaxes that made her rubbery bowels ripple around my pistoning length in a series of soft massaging squeezes. Needless to say, it was heavenly.\n\nLost in a blissful sodomizing haze, I was reduced to a growling assfucking caveman. All that mattered was that ass, that magnificently round, mouth-wateringly jiggly, beautifully plump ass which I just kept on plundering. All I wanted was to bury my cock as deep as possible into the hot slippery tightness of Judy's rectum. And that's all I did, again and again and again. \n\nI was rock-hard and ready to explode when my buttfucking frenzy reached a new peak. Suddenly, out of nowhere, I pulled out of Judy's ass completely, my fat glans slipping out of her clinging rosebud with a deliciously lewd popping slurp. \n\nJudy's eyes snapped open. A grimace of uncomprehending frustration marred her pretty face as she screamed out all her disappointment, her wanton need for anal satisfaction taking over completely. \"Noooo, put it back in my ass! Don't leave me so empty, please, I need you in my ass!\"\n\n\"You want this cock in your ass?\" I panted, my shaft throbbing and my balls tightening as my eyes zeroed in on Judy's slick gaping asshole winking irresistibly before me. \"You want me to pound your tight ass harder, don't you?\"\n\n\"Yeees, pleeeease! Uuuuuh!\" Judy's desperate yell thickened with renewed lust as I rammed my pole back inside her slowly closing anus, plunging into her rectum fast and deep. \"Oooohh yes, fill my ass! Fuck my ass haaard!\" \n\nI grunted as I bottomed out again, my hips impacting with a fleshy clap against Judy's pillowy bubble-butt. Her anal walls clamped tightly around me, squeezing me desperately, as if trying to keep me there. I was on the brink of a massive climax, and so was Judy based on the rabid urgency in her voice and the blurred speed of her clit-frigging fingers. \n\nStraining to hold back my ejaculation just a little longer, I pulled out again. \"You're my little buttslut, aren't you?\" I grunted, slapping my hands down on that magnificent heart-shaped ass and parting Judy's jiggly buns before penetrating all the way into her twitching, stretched-out sphincter. \n",
        "\"Yes! Uuuhh fuck yeaaahh! I'm your buttslut, babyyyy!\" Judy mewled, trembling from the stinging smacks on her bouncy ass and the swift butt-reaming thrust that drove my cock balls-deep into her little hole again.\n\n\"I'm gonna fuck this fantastic ass all the time now,\" I panted, overpowered by a rush of anal lust, \"I'll just bend you over and pull your panties down and ram my cock up your ass any time I want!\" \n\n\"Uuuuh yeees,\" Judy screamed as I flexed my pole deep in her curvy ass. She was clearly as savagely turned on as I was while she yelled out her total submission to this new, intense pleasure. \"I love your cock in my ass aahhh! I'm your anal fuck toy, baby, you can use my horny little asshole as much as you like! I want your cock deep in my ass all the time! Uuuuuh... It's yours, my ass is all youhh-uuhrs oowwhh fuuuck!\"\n\nAt those words, I went crazy. Unable to restrain myself anymore, past even the dirty talk and rough play, I started slamming Judy's asshole with all I had, desperate to cum. Her yells and my growls and the clapping rapid-fire impacts of my groin against her plump rump filled my ears as I reamed her tight slippery anus with unrestrained, primal abandon. My hips were a blur for a few dazing seconds, then I forced myself as deep as possible inside Judy's perfect ass and I came. \n\n\"Aahhhh, I love your ass Judyyyy!\"\n\n\"Uuuhh yeaahh, baby, cum in meee!\" \n\nMy howl of release and Judy's choked cry fused together as a surge of long thick spurts of cum splashed deep inside her ass, plastering her rippling bowels in a deluge of creamy sperm. I could feel my seed squishing around my pulsing cock as I kept humping into Judy's anus, trying impossibly to sink myself even deeper in her rectum while I flooded her insides with scalding spunk. \n\nMere seconds after I started pumping her ass full of cum, Judy's climax hit her. My balls, pressed hard against her soft hairless pussy, were suddenly drenched in her gushing nectar as she thrashed and screamed out her pleasure. Her warm climaxing rectum contracted around me with unprecedented intensity, becoming impossibly tighter as her clinging sphincter clenched and unclenched around me like a little sucking mouth. \n\nMy eyes rolled back in my head as Judy's ass tugged and squeezed my throbbing cock, empowering my orgasm and milking every single drop of cum from me. Awash in pleasure, feeling suddenly drained of all strength, I crumpled down. Leaning on Judy's arched back, encircling her slim surrendered frame with my arms, I rolled over and crashed on the bed dragging her with me, my vision fading to white in a final orgasmic flash. \n\nI think I passed out for a little bit, because when I opened my eyes again I was lying on my side, spooning Judy's smooth soft body. My arms were around her, our heads close, our cheeks brushing against each other. My cock was deflating but still quite plump and firmly embedded in her cum-sloppy ass, her pliant clingy butthole clamped around my root like the sexiest of cock-rings. \n\nFor a while we just lay there, breathing, resting and basking in an afterglow like no other. Judy's signature scent in my nostrils and the soothing rhythm of her breathing were lulling me away when her sweet little voice made me open my eyes.\n\n\"Greg...\"\n\nShe was staring at me, her head turned back. Her eyes were huge, piercing and glittering and spellbinding as ever. Though her whole face radiating perfect satisfaction, for a second I was assailed by doubt.\n\n\"Uhm, yeah?\" I mumbled, fearing that I might have gone too far and pushed it too much with the dirty talk and the brutal rump riding. After all, this was our first buttfuck, and her first time ever taking it up the ass. I swallowed the lump in my throat and braced myself while Judy took a deep breath. \n\n\"That was the best!\" she said with a beaming smile. \n\nMy eyes bugged out as Judy smashed her luscious lips against mine, muting my sigh of relief in a long deep soulkiss. I tightened my spooning embrace around her and caressed her perky tits while she pressed her fabulous ass back into my groin as we made out. Moaning in my mouth, reaching her hand around my neck to pull me deeper into her devouring lips, Judy started to slowly and gently contract her anal muscles around my buried half-hard cock, making me shiver in delight.\n\n\"You're amazing, Judy,\" I murmured into her mouth, licking her soft wet lips. Light-headed and lovestruck, I just let the words flow, blabbering and not caring, needing to just tell this incredible creature I held in my arms how much I adored her. \"I never thought a girl like you even existed... You're so smart and fun and beautiful, you look so sexy without even trying, and now this, the two of us doing anal, and liking it, I mean... It's not just about the sex, it's like we match perfectly, you know, what we like and what we just did... I love you so much, Judy, would you want to... Uhm, I mean, now that... Will you be my girlfriend, Judy?\"\n\nAll through my clumsy yet heartfelt rant, Judy's impish smile did nothing but grow wider, her cocked eyebrows arching higher and higher in quizzical delight. As soon as I blurted out my weirdly formulated question, Judy let out a theatrical sigh and raised her hand to her forehead in an exaggerated gesture of surprise. \n\nGiving her best rendition of a blushing damsel out of a Jane Austen novel, fluttering her eyelids and gazing raptly into my eyes, she said: \"Yes! Yes, a thousand times yes!\"\n\nI spooned her tighter as she burst out laughing. Then I burst out laughing too and we kissed, happy and in love and horny as can be. \n\nTime lost meaning while we smooched and touched and caressed each other, murmuring sweet nothings sometimes, but mostly just letting our passionate gestures do the talking. After a while my cock regained its full hardness, pulsing deep in Judy's welcoming, seed-coated rectum.\n\n\"Again, baby,\" she purred, grinding her soft plump buttcheeks into my groin, stirring her bowels with my recovered pole. \"I want you to fuck my ass again.\"\n\n\"Oh, okay, but... Aren't you sore? Not that I'm saying no, it's just...\"\n\nJudy laughed and kissed my nose, squeezing my boner hard within her creamy anal depths, making me groan. \"Don't worry baby, I'm fine. It barely hurt, I just felt stuffed to bursting, but in a good way. And even when it did hurt a bit, it hurt soooo good... Ooohhh, yeees!\" \n\nJudy trailed off as I started slowly moving in her, humping my shaft gently into her abused little asshole. Kissing her smooth cheek, pinching her nipples as I spooned her tighter to me, I snickered. \"You really are a horny little buttslut... In a good way, I mean.\"\n\nJudy chuckled and nodded her head, her eyes glazed over as I got in a slow, lazy buttfucking rhythm. \"Ooooh yeah, I am. I told you, my asshole is very sensitive, I love having stuff inside it oohhh... It makes me cum so hard... Aahhh yes, fuck my ass like that!\" \n\n\"So I really can bend you over any time and buttfuck you as much as I want?\"\n\nJudy whimpered and reached her hand to her soaked little pussy, her fingers starting to circle her clit immediately. \"Oooh yes, baby, you can take my ass any time... Oooohh all the time... Now make me cum again, Greg, make my slutty horny asshole cum on your cock uuuuhh!\"\n\nWe stay spooned like that for a while, my cock sawing into Judy's ass in a slow sodomizing rhythm. The layer of frothy cum coating both my pole and her smooth rubbery bowels made it easy for me to glide in and out of her surrendered rectum, yet I still had to force my shaft with a certain determination to plunge all the way inside her warm, slippery tightness.\n\nAt some point, after a couple of swift mini-climaxes had rippled over her docile body, Judy made me stop. \"I want to see it, baby,\" she panted in my mouth between soft nibbling kisses, \"I want to watch your cock stretching my ass.\" \n\nWithout letting me out of her anal sheath, we shifted and readjusted until Judy was on her back and I was kneeling between her splayed open thighs. Resting her back against the pillow and craning her neck to have a better view of our anal coupling, she drew her slender legs back until her knees were pressed against her lovely tits. Judy gasped as I resumed plowing her rectum, her gaze fixed on the obscenely delicious spectacle of my thick cum-glossy pole sliding in and out of her pliant dilated rosebud.\n\nHolding her legs up by the ankles, I smiled at Judy's awestruck, pleasure-distorted expression. \"Pretty hot, right?\" \n\n\"Holy crap, that's so hot! Your cock looks so big, baby, so thick stretching my tiny little asshole... And it feels soooo good! Uuuuh! Kiss me, Greg, kiss me while you fuck my ass!\"\n\nI leaned down, pressing her legs further back and forcing her round hips to raise slightly off the bed to gain better access to her snug oily asshole. While Judy wailed and cooed, I drove my shaft deeply into her willing anus, and we kissed. Judy locked her arms around my neck and wrapped her legs around my back, her tongue dancing with mine and her lips sucking mine into her hot wet mouth. \n\nNever breaking our lip-lock, I made love to Judy's ass for long sweet minutes, keeping a mild tempo. Purged of my anal fever, I enjoyed her warm buttery rectum without hurry, aiming only at making our pleasure last as long as possible. \n\nIt's strange, but that gentle sodomy was the most intimate experience of my life. By all standards, it shouldn't have been so sweet and emotional, anal being forbidden and naughty and, well, unnatural. Yet it was, weirdly enough. All that mattered was that Judy and I were taking such intense pleasure from something that shouldn't even happen, but it did, and it meant so much for us. It brought us even closer than we were and we both loved every minute. \n\nOur mouths never unclasped from each other, except when we needed to take a deep breath or profess our reciprocal love. As I pumped her pliant hugging butthole with fluid thrusts, Judy's pebble-hard nipples brushed against my chest, her tits squashed between our bodies. Now and then during our slow assfuck, she reached a hand to her groin and circled her fingers over her clit, bringing herself off while I relentlessly entered and re-entered her welcoming asshole. Mainly though, she just humped her plump ass up in time with my long deliberate butt-reaming strokes.\n\nHaving already cum twice that night, I thought I could last for a fairly long time, but Judy's amazing ass proved me wrong. After a while, she started panting raggedly in my mouth, her body shivering beneath me, her hand stabbing down to rub her clit with a vengeance. I knew she was about to cum hard, but I thought I could ride out her climax like I did with the sequence of small quick orgasms she had experienced so far. \n\n\"Mmmhph... Mmmhpph... MMMPPHHMH!\"\n\nJudy bit my lips as she hit her peak, her cries of release muffled by our hungry kiss. At the same time, her rippling rectum began spasming around my stiff meat in a powerful sequence of fantastic anal massages. Overcome by the sudden feel of her creamy warmth sucking and squeezing my cock while I was fully buried in her ass, I couldn't hold back my own release.\n\nFuriously kissing her, I let loose another torrent of seed, spraying my cum deep inside Judy's amazingly snug, incomparably hot, insatiable ass, filling her bowels with all the sperm I still had to give. Tightening the hold of her legs around my back, Judy kept me embedded balls-deep in her anus while we came together, moaning in the other's mouth. With each of her anal contractions, another jet of seed splattered against her already spunk-slippery anal walls until, finally, her asshole relaxed and my ejaculation abated.\n\nWiped out, we collapsed on the bed, facing each other, clutching at one another's sweaty, utterly satisfied body. We stirred from our blissful absence and groaned in unison when my spent cock slipped out of Judy's ravaged asshole with a squishy plop.\n\n\"Aww no, I'm leaking out all your sweet cum!\" Judy giggled as rivulets of pearly seed started oozing out of her unplugged, gaping anus. \n\nI laughed at first then stared slack-jawed as Judy's nimble fingers started scooping up my run-off sperm and she began methodically pushing the gooey globs into her conquered sphincter, forcing my ejaculate back inside her rectum. As she did so, Judy circled her fingertips round and round her reddened stretched-out butt-ring, smearing it with my thick semen. If I hadn't been so completely drained, I'd have sprung a massive boner at the lewd sight of my sweet Judy massaging my dripping spunk over her well-fucked, freshly deflowered asshole until it reshaped and closed tight again. \n\n\"Mmmhh so much cum, baby,\" she murmured dreamily, rubbing the last dribbles of seed all over her puffy tender rosebud. I stared in awe at her as she added with a sexy purr: \"No way I'll be sore with all this soothing cream squishing in my ass!\"\n\nWe laughed and shared a sweet soft kiss. With a smile and a contented sigh, Judy rested her head on my chest and closed her eyes, hugging me tight. I wrapped her in my embrace, one arm circling her thin shoulders so I could caress her dark hair, the other holding her to me by the hips, so that my hand could rest on the round mounds of her beautiful plump ass. \n\n\"Should I be jealous, baby?\" Judy murmured sleepily as I kneaded her protruding heart-shaped rump with gentle, adoring caresses. \"You seem to love my ass more than you love me!\" \n\nHer playful tone made me laugh. \"Nope, you're definitely my number one. Although your juicy bubble-butt is a very close second...\"\n\nToo tired to lift her arms and slap me, she just giggled and nipped blindly at my chin. Her question made me think though, so I asked. \"What about you, Judy,\" I said, trying not to sound as suddenly worried as I was, \"should I be, uhm, jealous of your virtual fuck-buddies from back home?\" \n\nWith an almighty effort, Judy opened her heavy-lidded eyes just enough to look at me and train her unfocused gaze on mine. \"No, baby. I'm with you now,\" she mumbled, smiling between yawns. \"They'll be happy to hear about us, though. I told them I had a huge crush on you since I moved in here. So don't worry, I'll stop masturbating while I watch them if it upsets you. Besides, I won't need to diddle myself much from now on, I hope?...\"\n\nGroggy as she was, the sexy expression she tried to conjure while she said that was absolutely hilarious. I chuckled while a warm fuzzy feel of deep, true affection washed over me. Her admission of having had a crush on me from the start made me tingle with joy. \"Yeah,\" I said, squeezing her in my embrace, \"I'll tend to all your orgasmic needs now, with pleasure!\"\n\n\"Mmmh, good,\" Judy purred, smooching me wetly before closing her eyes and snuggling me tighter, her warm smooth body relaxing completely, already on its way to a much needed rest. \n\nThen, as we both started drifting off, almost as an afterthought, Judy giggled. \"You know,\" she slurred, her voice thick and sleepy, \"my friends... They'll probably ask me to return the favor... They said so many times... 'We let you watch us fuck all the time, when are we gonna get to watch you fuck for a change, Judster?'... Yeah, that's what they call me... Judster... Eheheh... Silly name... Mmmh... Nighty night, Greg.\"\n\n\"Uh,\" I said, suddenly alert once again, \"nighty night, Judy.\"\n\nWithin seconds, she was out like a light. Listening to the soft soothing rhythm of her breathing, I lay there, wondering if I had heard her correctly. Did she just suggest that we fuck while her friends watch us in videochat? Was it for real or was it just some sort of joke between Judy and her buddies? Would I be willing to do it if, after all, she was serious about it? I had never been much into voyeurism or exhibitionism, but I was feeling strangely intrigued by the prospect of having sex with my incredible new girlfriend before an audience. \n\nI brooded over this for all of two minutes. Then, irresistibly, sleep claimed me. I barely managed to reach for the bedside lamp to turn it off. \n\nAs my eyes closed and I dozed off, snuggling with the most amazing girl I'd ever known, I felt a smile curl my lips when the thought popped into my head that the evening had started off with Twilight, of all things."
    ],
    "authorname": "ZenZerker",
    "tags": [
        "anal",
        "anal first time",
        "oral",
        "roommate",
        "love"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/i-bet-youll-like-it"
}