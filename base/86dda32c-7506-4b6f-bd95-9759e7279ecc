{
    "title": "Everybody Needs a Hobby Ch. 10",
    "pages": [
        "**Saturday Morning**\n\nI knew when I went to bed last night that I wouldn't be able to sleep in. Today was the first day of our first photo shoot for my new company, Red Brick Photography or RBP for short. I should clarify that in ownership, it is my company; but without the help of Britt, my luscious blonde girlfriend, who was currently sprawled, bare-ass naked across me, it would still be just a hobby. I therefore usually refer to it as our company. \n\nNeither of us had moved during the night, physically drained after some incredible sex. In the short time we have been together, it has all been incredible. And it's not like we're consciously trying to out-do the last round, but between Britt's voracious sexual appetite and spontaneity and my goal to just try and keep up with her, well it just seems to get better and better; and today promised to follow that pattern. \n\nOne of Britt's roommates, Gina, would be joining us today to help with the photo shoot. The subject matter is a classic black Chevy El Camino that will be part of a wall calendar for a local body shop. Britt and Gina will be posing with the car, scantily clad in matching black and white bikinis and high-heel shoes. \n\nI was informed last night that I was to expect, and had permission to help bring Gina's trepidation of the opposite sex to an end, or at least start in that direction. Gina's traumatic experience with an ex had driven her to play for the other team as it were, albeit a small team. She, Britt and the third musketeer, Kate, have lived a Sapphic lifestyle for the past year. That is until Britt and I happened. Since then I've had a tag-team hand job from Gina and Britt in a fancy steak house, and little Kate had her small hand stuffed down my pants while I fondled her little tits in the middle of a mall parking lot. I have also had my cock between the lips of both girls briefly as they were all involved in a m\u00e9nage \u00e0 trois which I was fortunate enough to photograph. Britt and I have basically fucked our brains out since we met. \n\nSo here I lay, counting my lucky stars with a piss hard-on. I gently lifted arms and legs trying to slide out of underneath my lover. Britt grumbled and fought the sheets as I slipped off to the bathroom. Relieved and refreshed, I gargled a little mouthwash and returned to the bedroom, intending to grab a couple more Z's. The sight before me quickly changed my mind. \n\nBritt and I had previously discussed how a little pussy each morning instead of bacon and eggs might bring about some health benefits. So her being spread out, basically offering herself for the taking, I figured I'd go ahead and partake. I proceeded to carefully belly-crawl between her legs until I could reach her smooth shaved flower with my tongue. I licked around the perimeter of her outer lips, her aroma was intoxicating. Britt moaned and shifted a bit, her legs now conveniently spread a little wider. I ran my tongue up her slit, coaxing her inner lips out of hiding. Now a little bolder, I stiffened my tongue and went in search of her clit, slipping in under the little pink hood. This got the reaction I was looking for as she moaned again, her inner lips now peeking out. My tongue went back to work, delving within her center petals, gathering a bit of nectar which I spread over the rest of this lovely blossom. My lover moaned louder and bent one leg at the knee, spreading further yet and exposing her little puckered asshole. Unable to resist, I ran my tongue across it before stabbing at it with the tip of my tongue. \n\nHer hips bucked and she groaned as I felt her hand on the top of my head; I had been discovered. No longer concerned about disturbing her, I dove in for the main course. My tongue slid in and I lapped up her juices as my nose played with her clit. Her hand full of my hair, she pulled me into her, trying to fuck herself with my face. I was only too happy to oblige as I licked and sucked while she squirmed. \n\nI managed to get one hand up under my chin and my index finger slid inside, exploring and gently massaging. Britt's pussy flowed as her juices ran down her ass crack providing the lubrication I needed to slowly introduce my middle finger to her ass. I slowly fucked her pussy and ass with my right hand as my left crawled up in search of a stiff nipple. I found it and squeezed it as I took her equally stiff clit between my lips and suckled, tickling the tip with my tongue. This magical combination of synchronized licking, sucking, tweaking and fucking soon had her writhing on the mattress. \n\nI was in a headlock between her thighs that would make an Olympic wrestling coach proud. Britt cursed through her climax, \"Oh you fucker! Oh fuck, fuck, fuck...\" as one orgasm led to the next. Slowly, her grip on my head lessened as her pussy relinquished control of the rest of her body. I lapped up the leftovers before I moved up beside her and took her in my arms. We kissed and she licked my face like a mother cat. Satisfied that I was clean, she looked at me through heavy eyes; \"So was that breakfast?\"\n\nI smiled back, \"I'm not sure that 'The Pussy Diet' is going to work because I'm hungrier than when I started, but I love it as a first course.\" I pulled a sheet over us and we snuggled, swapping kisses and running our hands over each other, gently massaging.\n\n\"So how did you sleep,\" I inquired as I let my fingers play at the top of her butt crack. Britt purred as relished the attention.\n\n\"I slept like a rock. I don't think I woke up once until you got up.\"\n\n\"Well, I can attest that neither of us moved much. You were lying on top of me this morning just as you were last night. It's a great way to wake up in the morning, but I had to pee, so I'm sorry I woke you.\"\n\n\"Oh you didn't really wake me until you decided to have breakfast; now that is the way to wake up in the morning, \"she smiled.\n\nGlancing at the clock, I asked, \"What time is Gina coming over?\"\n\n\"I don't think we set a specific time. Let me text her and find out.\" Britt rolled over to reach the bedside table, displaying her beautiful backside. I rolled over too, hugging her from behind, nuzzling her neck with my cock nuzzling her ass. I played with her breasts as he giggled and squirmed trying to text while I played.\n\n\"I'm not sure what I finally sent. Between your dick and hands and auto-correct, God knows what it says.\" Britt managed to roll back over until we were face to face again. We kissed and fondled one another until we heard her Blackberry chime. \n\n\"Shit, \"she said when she realized she had put the phone back on the night stand. \"Behave, \"she admonished me as she rolled back over to retrieve the cell. Never a good listener, I grabbed an ass cheek with each hand as she tried to read the message. \n\nBritt laughed as she 'fought' to get away from my butt assault. \"Gina knew it was me, but the message didn't make any sense. She wants me to just call her.\"\n\n\"Okay, so call, \"I said as I had an arm around her waist, my fingers running around her belly button; \"I'll behave.\"\n\n\"Yeah, right, \"she replied as she hit 'G' for Gina. \n\n\"Hi babe, \"she said as Gina answered the phone. \"Yeah, sorry about that; George was poking me in the ass with his dick and tweaking my nipples while I was trying to text.\"\n\n\"No, we're still in bed. We didn't know what time you were coming over this morning...... Oh, okay, that'll be fine....... What?......Oh, sure.....\"\n\nBritt reached down and grabbed my cock and gave it a couple strokes; \"Gina say's Hi.\"\n\nI answered by sliding my hand down her belly to running my fingers over her pussy. Britt moaned into the phone as I said, \"Tell her hello for me,\" as I nibbled on her ear.\n\n\"Unnnh...George says Hi too. What?.....No, he.....We'll talk when you get here.... Okay, see you then....Love you too.\"\n\nMy blonde vixen put her phone back on the table and rolled back into my arms and we made out like a couple high-schoolers. Taking my cock back in her hand, she said, \"We have time to take care of this before Gina gets here.\"\n\nI placed my hand on hers, \"You know I'd like nothing better, but I really need to get set up and I think I'll save my strength for later,\" kissing her again.\n\nBritt laughed as she rolled out of bed and walked, bare ass bouncing, toward the bathroom; \"Pretty sure of yourself, aren't you?\"\n\nI sat up, watching her go through the door, my hard-on pointing at her, \"Well last night you said....Ah hell,\" as I heard her continue to giggle.\n\n**Mid Morning**\n\nI'd grabbed a cup of coffee and a bagel and went to work setting up the lights and gathering up whatever I thought I needed from my upstairs studio. I'd opened the big door earlier, just enough for Gina to get her car through. This time she would at least have to brake before she came blasting into the warehouse; the girl has a bit of a lead foot. \n\nI was wet mopping an area in front of the painted floor which was part of the background I had built for the shoot. I heard a screech and a gnashing of gears as Gina rolled into the warehouse. Seriously, the girl drove like Charlise Theron in her Mini Cooper in the movie 'The Italian Job'. Britt met her at her car as she got out and they hugged and shared a long kiss. Britt had on her satin running shorts and a cropped wife-beater while Gina had on the shortest pair of daisy-dukes I've ever seen. She also had a little shirt with spaghetti straps that was at least two sizes too small. Walking over to where I was mopping, they tittered and giggled the whole way. I stopped long enough to get a long hug and kiss from Gina.\n\n\"So do you do windows too?\" Britt kidded.\n\n\"No, I leave that for the hired help, \"I answered as I swung the mop her way.\n\n\"Hey, \"she yelped as she jumped out of the way. \"No really, what are you doing?\"\n\n\"What I'm doing, \"I explained \"is getting up all the dirt and dust off the floor, so that when we roll the car up onto the set, it won't leave any tracks. We'll have to wipe down the tires as we roll it onto this clean spot.\"\n\n\"Well aren't you the smart one, \"Gina said. \"And the walls here are pretty impressive too. Oh, \"she said as she glanced to far corner of the building, \"There's the car! Oh it's so pretty.\" \n\n\"So, \"said my partner in crime, \"What can we do to help?\"\n\n\"Well, the manual labor is about all done. If you want, go grab the keys to this hot rod and we'll get it in place.\"\n\nAs the girls ran off to the office to get the keys, I yelled after them, \"And Gina is not allowed to drive it!\"\n\nThe brunette stopped long enough to turn and stick her tongue out at me. After a few minutes they came back out with the keys and a couple bags, which I assumed contained the bikinis and the shoes. Britt handed me the keys, \"Do you want to drive it or do you want me to?\"\n\n\"I'll get it, \"I said. \"Would you grab that bucket of water and a couple of those old t-shirts and we'll wipe the treads down. We'll have to be careful too not to get any footprints on the floor either. I can Photoshop them out, but we might as well be try to do it right the first time.\"\n\nI slid into the leather seat of the truck and fired it up. It sounded incredible with a throaty rumble as I idled it into position. I started to get out and help with the cleaning when Britt said, \"Just stay there, we'll each get a side and you can roll it forward as we go.\"\n\n\"Sounds like a plan, \"I said, proud that she was thinking about the most expedient way to get it done. I also enjoyed the view as both girls bent over, their butts pointed my way. They both straightened up and smiled knowingly at me as they had me move forward. It didn't take but a couple minutes to get all four wheels on the clean floor area. I shut it down and started to step out when I heard, \"Get those dirty shoes off before you step on our nice clean floor.\"\n\nI could do nothing but laugh and say, \"Yes Mam.\" I dutifully removed my shoes and walked around the car, looking for flaws and trying to figure out the best angles to shoot it. \"I think we'll just move it in at an angle across the corner with the driver's side facing out. That way we can shoot the nose and side and if we need to shoot the rear end, we'll have to turn it around.\"\n\n\"Okay, \"the girls chimed. I got back in and moved it into place, careful not to twist the wheels when it wasn't moving. I got back out and looked it over again. \"Looks good ladies; I just need to get the lights set and we're ready to rock and roll.\"\n\n\"So, I guess we'll get ready, \"said my lovely assistant. \"Do you care which suits we wear first?\"\n\n\"I guess it doesn't matter because I haven't seen any of them anyway. Did you happen to get any that looked a little retro by chance?\"\n\n\"Yeah, \"said Gina, \"we carry a line that has like boy shorts and the tops have more coverage, almost like a sports bra.\"\n\n\"Well, \"I said, \"the more skin the better as far as I'm concerned, but you never know. Tell you what; let's move from most revealing to least, figuring that if there are any marks left by straps or waist bands, odds are the next suit will cover them.\" \n\n\"Boy, you do think of everything, don't you, \"Gina smiled.\n\n\"Well, not everything, \"I said as I smacked my forehead with the palm of my hand.\" I should have brought the modesty screen downstairs for you to change behind.\"\n\nBoth the girls nearly doubled over in laughter, \"It's a bit late to worry about modesty with us don't you think, \"Britt asked. She glanced at Gina who nodded and they both proceeded to strip down then and there. \n\n'Only in my wildest dreams' I said to myself as they turned to get the bags that held their bikinis and shoes. Two beautiful women, one blonde, one brunette, both with incredible bodies; maybe I should have gotten off this morning; because it looked like I'd have a hard-on all morning. \n\nI got a little reprieve while I set up the lights and got my camera ready. The girls were ready when I was and I don't think I've seen a lovelier sight. Britt, with her long blonde hair wore a black string bikini that tied at the hips and at her back on top. A very small triangular piece served the purpose on the bottom, while two equally small pieces revealed more than less of her ample C-cups. Gina's suit was of the same design but in white to contrast her darker skin tone and dark hair. The little isosceles triangles nearly lost the battle when it came to Gina's D-cups. They had brushed out each other's hair until it shined and did each other's makeup. The makeup was minimal, but it gave them a bit of a glow. \n\nAs before, once I got them started on poses and they had an idea of what I wanted, they quickly took the lead and about all I had to do was focus and shoot. I took over 200 shots of the girls in this first round. They interacted with each other, teasing each other and me. There were a lot of shots that we all knew couldn't be used, but we took them anyway. On one shot, they were both bent over the hood, their butts out and their legs spread. Their gorgeous legs were tight and the little string that ran up their crack stretched taut over their little pink stars. If I wasn't trying to be a professional, I would have stepped up and rimmed them both, just because. The bulge in my shorts was obvious and the girls didn't pretend not to notice. \n\n\"Alright, \"I said, adjusting myself, \"I think that is enough with that style. Are you ready for the next one?\"\n\nBritt walked up and kissed me while she grabbed my package through my shorts. \"We're ready if you are, \"she said.\n\nGina was bent over the bags and I instinctively snapped off a couple shots. Britt still had a hold of me and squeezed a little harder as I showed her the shot in the back of the camera. \"Nice ass, \"she yelled across the set.\n\nGina twisted to look at us and then gave herself a slap on the ass; \"Glad you like it. Do you guys want some water \"she asked as she held up a couple bottles?\n\n\"Sure, \"we replied as we met her half way. \"Show her the picture, \"Britt told me. \n\nGina moved to my side as I tilted the camera toward her. \"Very nice if I do say so myself; so you're an ass man, are you?\" as I felt her hand reaching for the front of my shorts.\n\nPausing to formulate a witty comeback, I found myself sandwiched between Britt's hand on my ass; evidently to block my retreat, and Gina's now on my crotch, palming my stiffness. Gina's stare was intense and her nostrils flared as she awaited my answer. \n\nHell, I'd forgotten the question....focus, focus...oh yeah, ass man. Throwing witty to the wind, I answered; \"Ass, legs, tits....I love the whole package,\"\n\nSqueezing my package, she licked her lips and responded, \"Good answer, here's your water.\" \n\nGina felt my cock throb as I took the water bottle from her. Giving me a parting tug, she stepped back as Britt gave my butt a pinch and turned to follow her girl back to where the clothes were. I dumbly stared after them, trying to twist the top off the water bottle.\n\nI turned away to tweak the light placement a bit and listened as the girls talked and giggled as they changed into the next bikinis. These suits covered a little more territory and could be called one-piece in that they were sort of connected together with a couple crisscrossed strings across their firm midsections. \n\n\"God, you girls are sexy, \"I said as we went through the poses. The girls played off each other, pulling on strings and just teasing each other. I got a couple comical shots of them pulling each other's bottoms out and checking to see what lay within, a look of surprise on their faces. The girls were having a great time and we were getting some great shots. It was going to be difficult to cull though them and just pick out a few. If there is a problem with digital photography, that is it. Before I knew it, we had a couple hundred shots of them in these suits.\n\nI glanced at my watch and saw it was nearly noon. \"Do you girls want to stop for lunch? I'm sure we can scrounge up something.\"\n\n\"I could eat anytime, \"Gina said as she took a drink of water. She then let out a yelp and splashed water down her front as Britt slapped her on the ass as she walked by. I watched in amusement as they chased each other around in a small circle. I also noticed the way Gina's skin glistened where she had spilled; then I glanced at the car and notice how the lacquer paint job also shimmered under the lights.\n\n\"Girls, girls, \"I yelled, \"I have an idea.\" Winded and with no clear winner, they gratefully stopped and looked my way.\n\n\"Do me a favor and go stand by the car.\" They dutifully went over and stood by the car. I walked up to them and took each by the hip and turned them to what I thought would be the optimum position. Then to their surprise, I cupped my hand on each of their stomachs and poured some of my water on them, spreading it around, careful not to get any on the floor. Still looking a bit bewildered, they stood there as I sprinted back to my shooting position and fired off a dozen shots.\n\nI stood there and scrolled back through the shots to see if I got the look I thought I would. The girls quietly walked over and leaned in to see what I was looking at. \"Oh, I get it,\" said Britt. \"Look Gina, we shine just like the car does. That could look good babe, but we'll never stay wet long under these lights.\"\n\nThey both stared at me, trying to read my mind, when in unison we all proclaimed, \"Oil!\" They girls giggled and clapped. \"Ooo, I've always wanted to oil wrestle, \"said Gina.\n\nBritt's eyes shined and with a devilish smile, she replied, \"I was thinking more along the line of those Japanese massages where they use their bodies to massage with.\" Britt glanced down, proud to see that my dick thought that was a hell of an idea.\n\n\"If you girls wouldn't mind, how about changing back into the first suits. I have some baby oil that should work. We could do those shots real quick and then we can take a break?\"\n\n\"And can we ask why you happen to have baby oil, \"Britt inquired as Gina laughed along.",
        "\"Never you mind,\" I answered. \"You girls get changed and I'll go find the oil.\" I slipped on my shoes and went in search of the Johnson & Johnson's. I couldn't remember where I saw it last, so I tried in the bathroom first; no luck there. 'Must be up in the studio' I told myself, so up the stairs I went. \n\nBecause of the odd acoustics of the warehouse, I could clearly hear the girl's conversation clear across the warehouse. \n\nGina -- \"So anyway, Kate was so fuckin' horny after George made her cum just by playing with her nipple and talking dirty to her.\" Britt- \"So she really did cum when we thought she did?\" Gina -- \"Oh yeah, she said she had her hand around his cock and was thinking about how it would feel to fuck him. Then he told her he would have fucked her right there, it was just too much and she came from just having her titties played with.\" Britt- \"Well George can have that effect on a girl. He got me off once by just running his fingers all over me. I was so fucking hot, I just exploded.\" Gina- \"Fuck that is so hot. So are you still okay with this, you know, fooling around with George and all?\" Britt- \"You're as bad as he is; geez! I love both of you and I'm not worried about you taking him away from me. I think you need a real cock really bad and I know he would love that tight little cunt of yours. Besides, I'd love a three-way with you two. I really want you to eat my pussy while he fucks the shit out of you. It'll be fucking hot. Look, see, my pussy is already dripping!\"\n\nI glanced over the wall only to see Gina on her knees, her face buried in Britt's snatch. My favorite sex fiend was soon writhing on her best friend's face, her face red from holding back the scream of release. I stepped back and gave them a couple minutes to get their act together and then yelled out, \"I found it!\"\n\nI walked back; acting like nothing had happened and I hadn't heard a thing. The girls were in the little string numbers once again, acting all nonchalant. Britt gave me a strange, knowing kind of grin and bent over to put on her heels. I love the way she openly teases. I stepped around her, giving her a little love swat and handed the baby oil to Gina. \"Here you go. Let's just try a little on you first and see if it works.\"\n\n\"Thank you, \"she said, plucking the bottle from my hand and giving me a quick kiss on the lips. There was no mistaking the taste of Britt on her lips. I played along and gave her that questioning puppy-dog head tilt. Gina smiled big and then turned toward Britt to apply the oil. \n\nFollowing my suggestion, they rubbed a little oil on each other's belly and assumed the same positions as before. I snapped off a couple shots and looked them over. The girls joined me again and I could smell the arousal. \"That might be worth doing, \"I said. \"Let's go ahead and do it with these suits and then after lunch, we'll throw them on the big monitor and see how they really look.\"\n\n\"Okey, dokey,\" Britt replied, handing me the bottle. \"You pour and we'll rub.\"\n\n\"Aww...\" I pouted to their amusement. In retrospect, I don't think I could have gotten any harder applying the oil than I did watching them do each other.\n\nBritt was on her knees, running her hands up and down Gina's long, muscular legs. \"Damn girl, when was the last time you drug a razor over these things?\"\n\nGina retorted, \"Well if you spent any time at home, you'd be there to do it for me. You know I like your technique.\"\n\n\"Well this may be your lucky day. My boyfriend happens to be the best leg and pussy shaver ever, even better than you, so if you play your cards right, I may lend him to you.\"\n\nBoth girls were staring at me; I swear they could see my cock pulsing in my shorts. Clearing my head and my throat, I barked, \"Okay ladies, are we ready?\"\n\n\"Yes sir,\" came the reply as they took their position once more. Their bodies glistened under the lights, their muscles defined and the shadows enhanced. \n\n\"Fuck, you girls are gorgeous.\" They moved through their routine; somehow their breasts looked even larger and I know my dick couldn't get any harder. For their final pose, they repeated the bent-over-the-hood stance, with legs wide spread. I moved in for a tighter shot and watched through the viewfinder as they each ran a hand over the other's glossy ass. Thankful for 16 GB memory cards, I captured slender, slick middle fingers sliding into tight, pink puckered assholes. I felt the pre-cum drip from my cock.\n\n\"Fuck me,\" I muttered as I finally acknowledged that they had stood up and turned toward me, waiting for direction. \"I think that will do it, \"I stuttered.\n\nThey smiled and walked away, their hands still on each other ass, fingers playing in the crack. After a couple minutes I heard Britt say, \"We got a little oil on these suits. We should wash them right away.\"\n\n\"Okay, I guess, \"Was all I could thing to say as they stripped off the suits, kicked off the high heels and then walked naked, hand-in-hand toward the house. Thankfully I had the wherewithal to reset the camera and get off a couple shots of the bare-assed beauties strolling through the expanse of the open building. It would later turn out to be one of my favorite shots.\n\n**Back in the house**\n\nI shut down the lights and grabbed my camera and headed to the house for something to eat. Stepping through the door, I heard water running, assuming it was the washing machine. What do I know? You don't throw delicate things like string bikinis in the washer? I followed the sound of running water and found them at the bathroom sinks, bare-ass and beautiful, their reflections in the mirror. Camera at the ready, I took a shot, the flash bouncing off the mirror. Both girls jumped at the explosion of light.\n\n\"Shit, you scared me, \"Britt said, glaring at me in the mirror. Gina too looked like her heart had skipped a beat.\n\n\"Sorry, you just look so nice standing there, being all, you know, sexy domestic, washing clothes in the sink. I'd like to do a series of a sexy naked woman doing her domestic duties.\" I knew I'd put my foot in my mouth as Britt spun around.\n\n\"So are you one of those guys that thinks women should just be barefoot and pregnant, taking care of the house and kids and her husband?\" \n\nBritt had me in a quandary once again. I couldn't tell whether she was serious or if she was play-acting. I glanced at Gina and I don't think she knew for sure either as she had a worried look on her face. Taking Gina's hand, they walked across the bathroom toward me, devilish determination in her eyes. Britt reached for my camera as she said, \"Gina and I need to get this oil off us and she needs her legs shaved; Gina, take his clothes off please.\"\n\nTrying to suppress her enthusiasm, Gina stepped up and grabbed the bottom of my shirt, pulling it upward. I heard the shutter release as my assistant decided to chronicle the event. Once my shirt was off, I looked over at Britt. Holding the big Nikon like a pro, I wished I had another camera. A luscious naked blonde, legs spread for stability with her identity hidden behind the camera; it made my cock throb, much to Gina's delight as she pushed my shorts and boxers to the floor. The camera sounded again and I locked eyes with the dark-eyed beauty running her hands down my side as she knelt in front of me. I placed my hand on her shoulder for balance as I lifted a foot to help her move the clothing aside. The silken hair atop her head brushed the underside of my cock as she moved from one side to the other. The undressing complete, Gina looked at the photographer as she grasped my hard-on and brought it to her lips. With pursed lips, she kissed the tip, sucking lightly. She giggled as my cock lurched in her hand. Looking up, she opened her mouth and took me in, her eyes finally closing as she took me into her throat. My trimmed pubes tickled her nose and my balls rested against her chin as her hands on my ass held me tight. I glanced over at Britt as she zoomed in; her nipples visibly pulsed and a fine line of her juices ran down the inside of her thigh.\n\nBefore it was too late, I coaxed Gina to her feet and kissed her, my cock sliding along her wet slit, my hands firmly planted on her ass. She shuddered though a small orgasm as our tongues mated. I reached out to Britt and she sat the camera down and we joined in a vertical three-way, kissing and caressing one another. My blonde love then broke from the group and led us to the shower. I was happy to let Britt take the lead as she turned on the regular shower and reached for the shampoo. \n\nBritt handed me the bottle and said to Gina, \"Prepare to have your hair washed like never before.\" Gina quivered with anticipation as she ducked her head under the spray, soaking her hair. Britt held her hand out flat; \"You get the front, I'll get the back.\"\n\n\"Hmm, tag-team hair washing; I like it,\" as I squeezed a generous amount of shampoo into her hand. I took my share in mine and stepped in front of Gina. Her nipples brushed my chest as I ran my hands through her hair, working up a lather. Britt snuggled up behind her and our hands mingled in the long brunette strands. We alternated, one minute I was massaging her scalp as Brit was running her fingers through her hair, grazing along her back, then we switched. Occasionally I would feel slick hands stray to Gina's breasts, playing with her erect nipples. When my hands were behind her back, I would occasionally wander, teasing Britt's nipples. Gina's moans were constant as she grew anxious, her hands moving constantly from lover to lover.\n\nThe wash cycle complete, Britt grabbed the hand-held shower and tilted our young amazons' head back to keep the soap out of her eyes. Her large breasts stood proud on her chest and I suckled on her as her blonde girlfriend massaged the soap from her long locks. Gina, with her eyes shut tight and biting her lower lip, groaned as she tried to ride the top of my cock.\n\nRinse complete, I kissed Gina before I turned her to face Britt. They kissed long and hard as I was worked in the conditioner by myself. The sound of fingers and pussies coming together could be heard over the sound of the shower. Ready to rinse again, I took the hand-held and leaned back, my dick slipping between her legs as I rinsed down her back. Fingers below surrounded my stiffness and my tip was introduced briefly to Gina's inner lips. Her body quaked at the contact and we both held her tight.\n\nGina actually glowed as we parted. Tears of bliss would have been evident if we hadn't been in the shower and Gina kissed us both; \"I love you both,\" she said.\n\n\"We love you too,\" we replied. Britt leaned in to kiss me, whispering, \"I love you so much.\"\n\nBefore I could respond, Gina asked, \"Can we do her now?\"\n\nBritt jumped up and down as though we had just given her a pony. Handing me the bottle, she turned to face Gina, the she spun to me, then again to Gina. I took matters into my own hands and spun her back to face me. \"Now behave, we still have a long pair of legs to do.\" I looked over her shoulders to see Gina smile at the thought. I reached for her hand and squeezed some shampoo into it. She sighed as she began to lather Britt's long locks. I worked from the front, falling into our routine although occasionally Gina would grasp my hand and we would work in unison. \n\nAnxious to move on to shaving her roommate's long gams, Britt hurried the wash and conditioning cycles. She led Gina to the bench while I stepped out to get a fresh razor. \"Get two,\" Britt said over her shoulder. I'm sure that Gina's mind reeled at the thought; my dick did.\n\nI returned to see Britt's lovely backside, kneeling at Gina's feet. I kicked on the steam generator for a minute to warm the shower back up. I put a couple towels on the floor and took up my post next to Britt. We smiled at each other and kissed as Gina looked on. Following her lead, I ran my hands up and down the dark-haired temptress's legs, stopping short at the top. Grasping an ankle each, Britt looked up at Gina and said, \"Make a wish,\" at which point we each took our respective legs and spread them outward till they rested on our outside shoulders. Gina whooped, trying to steady herself as she found herself spread-eagle, her butt perched on the edge of the tile seat. \n\nSteadied, She chewed on her lower lip as she watched her best friend and lover and her soon-to-be-lover each running their hands up and around her legs, along the inside of her thighs, the blue shave gel now frothy white. Gina could feel her juices escape her perturbed pussy, running down to her puckered star. The feeling of the twin razors and the concentration evident on the faces of her lovers drew her to the edge. Her mind snapped back to the word 'Lovers,'... plural; her body stiffened in climax as they addressed her inner thighs at that same moment. \n\nWe stopped and held her legs as we watched Gina come down from the peak, her juices now verily flowing from within. We kissed each other, as in victory, and then my sexy accomplice asked Gina, \"Are you done now? We'd like to finish, my fucking knees are killing me.\"\n\nGina squinted at her and then she stuck out her tongue and said with a raspy voice, \"Fuck you.\"\n\n\"Oh, that comes later,\" was Britt's quick reply. \"C'mon Lover, let's finish up, these legs aren't going to get any shorter.\"\n\nGina giggled and squirmed as we finished up inside her thighs. Britt would tease her, rubbing a knuckle along her labia as she swiped the razor where the leg intersects the crotch. I stood up and stretched; my half-aroused member parallel to the floor. Britt playfully leaned over and took me into her mouth, biting down gently and then let go. I reprimanded her, shaking my finger at her, like she was a playful puppy. I retrieved the hand-held and I rinsed our customer as Britt held her legs wide. I teased Gina with the pulsing spray, but stopped when we were well rinsed. \n\nGina, thinking we were done began to get up when Britt placed her hand on her belly and sat her back down, \"We're not done yet, \"she smiled an evil smile. Gina's eyes grew large as she looked down at her own pussy and then back up. Britt smiled and nodded in the affirmative; Gina shuddered once more.\n\nStill standing, I reached down and handed Britt the can of gel. She unceremoniously squirted a bit straight onto her roomies distended lips and Gina squealed at the sensation. Matter-of-factly, Britt then rubbed the gel around until it foamed. Gina squirmed and clinched continuously under Britt's hand. There was a short reprieve as Britt stood and stretched, twisting at the waist. I took the opportunity to snag a nipple between my lips when it came my way. My love held my head to her breast for a moment and then released it, her lips now on a bee-line course to mine. \n\nI honestly thought, as I'm sure Gina did, that as soon as our blonde aggressor worked out the kinks, she would settle in and complete the job. Instead, with great flourish, she handed me the razor and said, \"Sir, the mission is yours to complete.\"\n\nWith a smile like I had never seen on her face, Gina, slid further forward on the bench, grabbed both legs behind the knees and spread herself wide. It was about the sexiest and most obscene sight I had seen since, well the first time I shaved Britt's succulent snatch. I dropped back to my knees as Britt sat beside her and latched onto her left leg, always willing to lend a hand. They made out briefly until I cleared my throat, announcing I was ready to proceed. Both stared down intently as I used my left hand to stretch and smooth an area, deftly manipulating the razor around her outer lips and upward onto her lower belly. Running my fingers through her lips, I searched for stray hairs. Her pink clit peaked out, curious as to the goings on and I ran my index finger over it, sending a shiver up her spine. \n\nSatisfied that the pussy region was now completely deforested, I nodded to my blonde accomplice who proceeded to lift and push Gina's leg away until she rested on one butt cheek, leaving her inviting asshole open for inspection. Gina gasped; \"Oh fuck!\" as her mind reeled anticipating the next move. Not one to prolong the agony of anticipation, I showed her the squirt can of gel and her little star winked at me. I smiled as I shook the can and then took aim. At point-blank range, I couldn't miss and the cool gel hit the mark, making her jump. Sitting the can on the floor, I ran my index finger around and around. Her pussy and anus both tightened and relaxed; inviting a visitor. Spying a few stray curlies, I made a couple passes making quick work of the job.  \n\n\"That should do it,\" I announced. \"Just a final rinse and we're done.\" I picked up the shower head and let the pulsing waters rinse away the foam. I turned off the water and started to stand when Britt chimed in.\n\n\"Aren't you forgetting something,\" she asked? I cocked my head in reply and she answered, \"The final inspection, silly.\"\n\n\"Oh yeah,\" I nodded. I looked up over Gina's D-cups and she was again biting on her lower lip. I smiled at her as I ducked down and drew my tongue up across her asshole, over the taint and all the way up her sweet pussy, finishing with a long sucking kiss of her clit. Her body stiffened and she inhaled as her pussy convulsed. I moved back down, sliding my tongue between her inner lips, probing as deep as my tongue was long. Her pussy walls grasped at it, drawing it inward. \n\n\"Oh Fuck Me,\" she cried as my tongue danced inside her. I looked up to see that Britt had leaned over and had one of Gina's nipples in her mouth, trying to give her a tit hickey. Gina's entire body undulated in orgasm. My face in her pussy and Britt's hold on her leg is the only thing that kept Gina off the shower floor. Her climax slowly subsiding, I backed off, cleaning up my mess as I went along, but I couldn't leave without a proper good-bye to her tight little pucker. My tongue found its way and stabbed at her ass, prying my way in. Gina reached down and pushed my head in, making sure I didn't leave before she was ready. \n\nFinally spent and sore from being bent double for the last half hour or so, we all relaxed. I massaged her long legs, rubbing her feet and sucking on each of her toes. She was too tired to try and get away, no matter how much it tickled.\n\nI managed to get back on my feet and pulled Britt to hers, \"Upsy-daisy.\" We kissed for a few moments and then turned our attention to Gina, who looked like she had just run a marathon, but she had a big grin on her face. We each took a hand and hoisted her up. She wrapped her arms around our shoulders and gave us both long, but tired kisses. \"God, I love you guys,\" and a little tear rolled down her cheek. \n\nI pulled them both toward the door and into the bathroom. We slowly dried one another, too tired to do anything but that. I combed the knots out of both of their hair as they hugged one another, whispering and sharing soft kisses. I handed them both towels and said, \"Do that thing you do when you wrap up your hair when it is still wet.\" They laughed at me, and then wrapped their long hair; I was too tired to dry one, much less two heads of hair.\n\nI took their hands and said, \"follow me,\" and led them into the bedroom. Without prompting or explanation, we all three crawled up onto the bed and collapsed, me in the middle with a gorgeous woman in each arm. I don't think you could have counted to three before we were all sawing logs. \n\n**A couple hours later**\n\nI woke a couple hours later. I was cold and all alone. 'What the fuck?' I asked myself. I know I came to bed wrapped in soft voluptuous women. My stomach growled in hunger as my two bedmates came through the door, \"Geez babe, we could hear that down the hall.\" Still gloriously naked, but having lost the towels on their heads, they carried with them plates of fruit and cheese and a bottle of wine. I pushed myself up against the headboard, admiring my servers. ",
        "Gina sat her plates on the bedside table. Her profile is absolute perfection with firm breasts that seem to defy gravity with perky nipples. Her stomach is table flat and she has the perfect little belly button. Her butt fits her perfectly and then there are the legs. Just thinking about them wrapped around me woke up my little buddy. I heard Britt snicker as she caught me checking out her roommate. She sat her plates on the other table, \"See anything you like,\" she kidded. After she safely had the wine bottle sat down, I reached over and grabbed her, pulling her onto the bed. We wrestled a bit, tickling and groping. Britt took a shot at grabbing my dick, an illegal move if there was one, so I rolled away from her. Gina stood at the edge of the bed, laughing and clapping, cheering on her friend. \n\nBefore she knew it, I had her on top of us, my hands tickling her ribs; \"and what do you think is so funny,\" I asked as she laughed, trying to get away. It didn't take but about a minute before they had joined forces and I knew I was out-gunned. \"Uncle, Uncle,\" I proclaimed as twenty fingers tickled me into submission. I leaned back against the headboard and they both snuggled up to me, catching our breath.\n\n\"I woke up first and wanted to serve you guy's lunch in bed, \"Gina said as she ran her hand across my belly, playing with my navel; but I guess I woke up Wonder Woman here,\" pointing at Britt who had her arm draped across my chest, her face buried in my neck, nibbling away.\n\n\"Wonder Woman,\" I asked as I received a little nip on the neck.\n\n\"Yeah, \"Gina continued, \"that's what Kate calls her since she hooked up with you.\"\n\nMy quizzical look led Gina to continue further. \"Well your girlfriend here is the ringleader of our little band. She brought us together here for school and has kept us on the straight and narrow. I was pretty withdrawn and pissed off at guys after high school and Kate was raised like in a nunnery or something. Anyway, Miss Brittany has been our rock and we've all become great friends and would do anything for her and each other.\"\n\n\"Okay,\" I said, \"I get all that and as far as I'm concerned, she is Wonder Woman in more ways than one, but how did our innocent little minx come to call blondie here Wonder Woman?\"\n\n\"I think Kate is just a bit in awe of how Britt is with us and can also be with you and the business; I don't know, it's just like whatever Britt decides to do, she does it and she does it well. I don't know how else to put it; she has done so much for us and we love her and would do absolutely anything for her.\"\n\nI heard a little sniffle and saw a little tear roll done my girl's cheek. I hugged them both tighter; \"I know how you feel Gina. She has changed my life and I would do anything for her,\" kissing the top of her head, \"and her friends,\" as I kissed Gina's.  \n\nNow I had beautiful naked women on both sides of me, sniffling back tears. I gave it another minute and said, \"So, what's to eat?\" That got me a couple finger jabs followed by a three-way French kiss; a little sloppy but a lot of fun.\n\nWe sat up a little straighter and the girls served up the cheese and fruit and poured the wine. There was a little silence as we nibbled and sipped. Gina looked around the room and commented on the big screen on the opposite wall; \"That has to be the biggest T.V. I've ever seen in a bedroom.\"\n\n\"Yeah,\" said Britt, popping grape in her mouth, \"You should see porn on that thing, it's like being there.\"\n\n\"Oh, that's right, the shipwreck scene you told us about; I've gotten off a couple times just thinking about that one,\" Gina said as she played with one of her nipples. \"Maybe we can pretend we're stranded on a desert island?\" \n\nMy dick was now pointing toward the heavens as my two angels took my wine glass from me and sat it and the food back on the tables. The girls then turned back to face one another, me in the middle. They took turns giving me a kiss and then leaned over and kissed each other ravenously. I ran my hands over their bare backs as I felt two hands stroking my cock and balls. \n\nWe gradually slid down the bed until we were again lying flat. I was now the one that was spread-eagle and the girls each straddled a leg, Britt on my right and Gina on the left. The kissing was a random swapping of tongues and lips as pussies rubbed against my legs and two soft hands stroked me. Both my legs were slick with their juices as I felt them both spasm, their kissing intensifying. Slowing, they paused to catch their breath and with both heads on my chest, facing each other, Britt asked her best friend, \"Are you ready?\"\n\nGina nodded in the affirmative and then kissed my chest and looked up to meet my gaze. Britt tilted her head toward me and asked the question again. I answered by squeezing the ass cheeks that my hands seem to naturally gravitate to. Britt scooted up and kissed me, \"I love you.\" and then sat up. Gina followed suit, sliding up my torso until we were face to face; \"I love you too,\" kissing me softly. Sitting up she leaned over and pulled Britt to her, blonde and brunette hair blending and dangling on my chest; \"II love you most of all.\"\n\nBritt moved off to my side and drug Gina up until she was straddling my belly. I ran my hands up her sides and ended up holding two firm breasts, molding them, stroking her nipples. Gina stared at me intently as I felt two lips take my cock between them, slathering me up. Satisfied that I was ready, Britt hugged her best friend, her hand on her taut belly and said, \"Back up baby.\"\n\nEver obedient, the buxom brunette rose slightly on her knees and slid back as her best friend held my cock, guiding us into position. Gina closed her eyes and shivered as Britt ran the tip of my cock through her roomie's wet inner lips, pausing to tease the erect clit. There was a pause as Britt positioned Gina and I. The head of my rigid member nestled at her entrance; Gina opened her eyes and reached her hands out to me. I reached up and our fingers meshed, hands palm to palm. With our eyes locked together, Gina slowly enveloped my cock. \"Oh my god,\" she moaned as her anxious pussy consumed me. Britt coddled my balls as Gina successfully bottomed out; my short pubes tickled her clit as she rocked gently, making sure she was fully seated. Her pussy was tight and almost uncomfortably hot; I could feel her rapid heartbeat along my entire length. \n\nGina stared right through me and her fingers locked tighter as she cautiously pushed up, exposing an inch or two of juice-coated cock. Exhaling she dropped down, our connection complete once more. Judiciously, she developed a cadence with each lift slightly higher than the last until only the crown of my cock rested at her entrance. We both twitched as Britt traced her tongue up my shaft, slipping it in alongside, Gina being licked and fucked at the same time. Britt rode out the descent as long as she could as Gina captured me entirely once more. \n\nGina pushed my arms back as she leaned down, her tits compressed on my chest. Nose to nose, she rocked her hips, my cock stirring her juices. Her eyes spoke her feelings, her lips busy on mine. I could feel Britt's tongue licking whatever bit of my cock that Gina was willing to expose for her. Gina was about to say something when she squealed, \"She's licking my asshole...aww Fuck me!\"\n\nI managed to free my hands from her grasp and worked my way down to her butt cheeks. Grabbing hold, I spread her wide giving our blonde lover better access. Gina grabbed my shoulders for leverage and began fucking me as I fucked her, my hips bucking. \"Oh...your...cock...feels...so...good,' she panted. Britt held on for the ride, her face buried between her childhood friend's ass cheeks, tongue fucking her puckered hole. Gina panted and mumbled to no-one in particular; \"Fuck your cock...Fuck my cunt...Fuck my ass...unh,unh,unh,unh.....Ohhhh FFFUUCCCKKK!!!\" She screamed as her body convulsed, her pussy rippling over my cock. I held her tight as we all caught our collective breaths. I relinquished my hold as I felt Britt kiss my hands before sliding up beside us. \n\nGina's breath was hot on my neck, her body molded to mine, my cock still nesting inside her. I ran my hand up and down the brunette's long torso, sending shivers down her spine. She kissed my neck, \"I love your cock,\" she whispered, her pussy hugging me tight.\n\nIn my other ear I heard, \"I knew she would, and I love you for making her happy.\"\n\n\"My pleasure,\" I replied as I petted them both. \n\nGina lifted up slightly and asked sheepishly, \"You didn't cum, did you.\"\n\n\"I was concentrating on other things,\" I replied, sneaking a kiss.\n\n\"I didn't cum either,\" said our blonde partner.\n\nGina giggled and then pulled Britt across me, kissing her deeply. \"Eww.... ass kiss,\" I joked as they frenched each other. Hearing my comment, they broke free of one another and then attacked me, another three-way french-fest; tongues and lips everywhere.  \n\nKissed out, I reluctantly let Gina roll off me; my cock now at half staff, glistening with her cum. Britt immediately swung around and took me in her mouth, energetically cleaning me up. Gina joined her, kissing and licking my dick and each other. I ran my hands up and down their thighs, my fingers brushing their dripping cunts with each pass. I soon had two fingers buried in each of them, fingering them slowly as they brought me to my maximum length. \n\nWithout warning, Gina sat upright and pulled my lover off my cock. \"Here, lay down on your back here,\" she directed. Britt did as she was told; her eye's now as dark as can be. Gina spread my girlfriend's legs wide and slid a pillow under her butt, her intent quite clear. Taking her spot between Britt's wide-spread limbs, Gina presented her ass to me. Reaching back, she spread her pussy lips apart, her pink insides shiny with her excitement. \n\n\"I'm going to eat our girl's pussy and finger her ass until she begs me to stop.\" Turning, she ran her tongue inside Britt's wet snatch, slurping loudly. \"And,\" turning back to me as she strummed the blonde's clit with her thumb, \"You're going to take your big dick and fuck me till we both cum and I feel your cum fill my pussy until it overflows; think you can do that?\"\n\nI nodded dumbly and stroked my cock as I watched Gina's tongue slide back between the smooth wet lips I have come to love and feast on. Britt's eyes were intense as she stared at me, as though attempting to tell me something telepathically. I winked at her as I turned my attention back to the beautiful butt that was so proudly pointed my way. Grabbing a hemisphere in each hand, I spread her cheeks wide, like splitting a freshly peeled orange in two. Her inner lips were swelled and her little pink star puckered as she worked her magic on Britt, who was moaning, her hands mauling her own breasts. \n\nI reached down and spread Gina's pussy wide, her entry gaping lewdly. Gina paused from her feasting, sensing her pornographic pose. She looked at me with want and disdain at the same time. Without hesitation, I took her in my mouth, my tongue reaching, my chin rubbing her clit. \"Ah Fuck,\" she groaned, returning to her Sapphic task. \n\nFiguring that Britt had a pretty good head start, I ran the head of my restless cock between Gina's lips, generously spreading her essence. I played with her ass, playfully poking as she squirmed to elude the mock attempt at entry. Done teasing, I settled my cock at her vaginal portal, head resting on her pulsing lips. I slid in slowly, just until the tip disappeared, then withdrew. I did this a few times until Gina became anxious, arching her long, muscular back to push backward. I swatted her butt, eliciting a gurgling moan, and then slid in a few more inches, playing the same game some more. \n\nIt was clear that she had had enough play time when she pulled herself from Britt's writhing crotch once more. Her face was wet from Britt's juices and I watched as she was plunging two fingers in and out of her ass while her thumb abused her pussy. Looking back at Gina, I grabbed her ample hips and drove my cock home. An orgasm rolled through her as I picked up the pace and rode her hard. \n\n\"Fuck, Fuck, Fuck,\" she groaned, her head back down between Britt's thighs. With each thrust, I drove the brunette forward, forcing her deeper into Britt, who was now in a state of constant orgasm. \n\n\"Eat me,\" she screamed. \"Eat my cunt baby.....Oh God, Oh Fuck!\" Her body shook as she pushed back at the headboard, her mouth open, taking in gasping breaths. Gina's cunt began to tense, signaling a final crescendo. Sweat dripped from my nose and I watched it land on that inviting asshole. \n\nThey say timing is everything and I don't think ours could have been any better. I ran my thumb around her rim, her ass puckering in and out with each stroke of my cock. Satisfied that we had enough lubrication, I slowly worked my thumb in, in perfect step with my swelling cock. Her pussy grew tighter with each stroke, slower and closer to climax. With my thumb now buried deep inside her steamy ass, I could feel my cock through the thin wall that separated them. I managed a couple more driving thrusts when, like a California earthquake, there was a brief silence and then all hell broke loose. \n\nMy cock erupted, sending volumes of hot seed deep inside her. My body stiffened, her orgasm pulled me in, threatening to dislocate my thumb, stretching my cock taut. \"Oh God, Oh God, Oh God,\" she cried, her body in spasm as she collapsed, sliding on Britt's sweat covered belly until her head rested on her breasts. I could only follow, captured as I was, until we both lay flat, Britt bearing the load, still coming down from her own climax. \n\nConscious of Britt's position, I wrapped an arm around Gina's belly and rolled us onto our side, leaving Gina still firmly pressed against her. My dick was unwilling to leave and I pulled my new lover's leg up over mine. Her pussy clinched as I thrust in slightly, making sure I was still firmly mated. \n\nI must have drifted off because the next sensation I had was that of someone gently sucking my spent cock. Willing my eyes open, I lifted my head to see Gina on all fours, cleaning me with her tongue while Britt was on her back, Gina's pussy planted on her face and Britt happily lapping and sucking our combined juices from Gina's marvelous cunt. Satisfied that she had retrieved it all, she crawled over with her mouth full, pushed Gina on her back, her head on my belly and I watched with fascination as they shared a special cocktail. \n\nFinished with their dessert, they snuggled back up beside me as I wrapped an arm around each and drew them in tight. Britt leaned in and kissed me,\"Sorry babe, I guess we didn't want to share. You and her taste pretty good together though,\" she giggled. \n\nI turned my head to face Gina, who was visibly blushing. I kissed her; \"Thank you,\" I said. \"I don't know what else to say that won't get me in trouble with you-know-who.\" That got me a poke in the ribs from my blonde beauty. \n\n\"C'mon stud, just tell her she's the best fuck you've had all day, \"Britt laughed.\n\nGina smiled and then whispered to me under the cover of Britt's laughter, \"You are the best I have had, ever. Thank you,\" as her eyes teared up. I hugged her tighter and kissed away her tears. My heart ached a little thinking about what this beautiful woman must have gone through with her ex. I hoped that what Britt had set up between us would help Gina get over her past.\n\nGina reached out across my chest and stroked Britt's face, brushing her hair from her eyes. \"Thank you baby; for this and all the time we have been friends. I love you and......I love George. You really have something special here in him,\" she said as she drew circles on my chest with her finger, \"and I hope someday I can find someone like him.\"\n\n\"Oh baby,\" Britt replied, also running her finger around on my chest before holding Gina's hand. \"Someone will come along and you'll know it when he does, just like I knew it when I first found my man here.\" Kissing my side, she continued, \"but until then, you will always have me, and Kate and if he behaves himself, George here,\" poking me in the ribs once more.\n\n\"Oh God, I love you both so much, \"Gina cried as she climbed on top of both of us, kissing and hugging. We kissed and hugged her back and my one free hand found its way to Gina's butt, caressing and running my finger along her crack when I encountered another hand doing the same on the other side. Gina shivered and fell silent as we listened to our blonde lover purr.\n\n**Some time later that afternoon**\n\nI woke from a little snooze, Britt snuggled up to my left and Gina sprawled across us both, sound asleep. Britt sensed I was awake and whispered, \"That was pretty awesome. I could really get used to this threesome routine. Watching you fuck her pussy just made me hotter. And watching your face when you came as she ate me... it just made me cum that much harder.\"\n\n\"Yeah,\" I kidded, \"I could probably do that again.\"\n\n\"Yeah, I'll bet and I don't want to get your hopes up, but I can see the possibility of a foursome sometime soon,\" she snickered.\n\nMy cock stiffened and lurched at the thought. \"That tickles,\" came a voice from under a cover of brunette hair. Gina turned to Britt as she brushed the hair out of her way, \"George's cock tickled me when you mentioned him getting to fuck Kate too.\"\n\nGina slid off me and took her place on my other side again. I found myself in both their hands again, ramrod straight as they fondled me. \"So,\" Britt asked, \"do you think Kate would like to fuck our boy here?\"\n\n\"Are you fuckin' kidding me?\" as her hand played with my balls. \"After she had her hand wrapped around his dick and he made her cum on the hood of that car, we went home and she had me put on the strap-on and bend her over the dining table and pretend I was George. I fucked her so hard that we slid the table all the way into the living room.\"\n\nThe girls laughed as I imagined the petite Kate, bent over a table, her toes not quite touching the floor as I fucked her from behind, a handful of her black hair in each of my hands. I glanced over at the clock on the table, \"Holy shit, it's almost 4 o'clock. Come on girls,\" I said as I broke free and slid off the end of the bed, \"unless you want to come back tomorrow, we have two more suits to shoot and I still haven't looked at the baby-oil version we did.\"\n\nI turned to see if they were getting up, only to find them making out again, their legs intertwined, bare pussy to bare pussy, grinding against each other. I was about to turn back toward the bathroom when I spotted the camera setting where Britt had left it earlier. Being a photographer, I really had no option but to take a few shots of the girls. Anxious to get back to work, I set the camera on the dresser and said, \"Okay, let's get back to work. I'm going to take a quick shower.\"\n\nI half expected the pair to follow close behind, but no such luck. Probably just as well as it would only have prolonged the shower session and my water bill was going to be through the roof as it was. I toweled off and went back into the bedroom. There they were, still a tangle of arms, legs and long hair, soundly sleeping. Any other time I would have left them alone or more likely, joined them, but we really need to get this photo shoot done. While I was in the shower, I remembered that Gina had to work tomorrow, Sunday, so it really needed to get done today so that we could send the car back on Monday.\n\nStanding on Gina's side of the bed, I ran my hand up and down the length of her incredible body, trying to wake her slowly. She stirred as I passed over the inside of her knees so I paused there a minute, running my fingers over the area. Then I moved on up the back of her thigh and then up over her butt cheek, kneading it lightly. She squirmed a bit more, stretching out her legs, pointing her toes. My fingers explored the top of her butt crack, a favorite spot, and then detoured to the dimples on her lower back. As I ran my hand up her spine, she stretched again, this time her arms up over her head. The side of her breast and a bit of nipple shown and I ran my fingers up and pinched it lightly. ",
        "That got her full attention and she rolled onto her back, raising both arms up to me. I leaned in and she hugged me and we kissed; warm, wet passionate kisses. \"You need to get up now,\" I said. \"We need to finish shooting because you have to work at the store tomorrow, right?\"\n\nGina put on a pouty face, \"I don't wanna.\" I tried to straighten back up but she kept her arms around my neck, determined to change my mind.\n\n\"C'mon,\" I said, struggling against her hold, \"Take a quick shower and then we can get the last suits done. I'll make you girls' dinner when we're through.\" It didn't seem like the offer of a home cooked meal was going to persuade her, so I decided to take matters into my own hands. Without warning I leaned in, put one arm under her back and the other under her knees and before she knew it, I had her up and over my shoulder. She squealed, kicking her legs and slapping my back, trying to get away. I gave her a quick swat on the butt, which took her completely by surprise and she was silent. Worried that I had overstepped my bounds, I stalled until I heard Britt laughing and saying, \"No sense fighting him baby, he has you where he wants you now.\"\n\nI was running my hand over the cheek I had spanked, slipping my finger tips inside her ass crack. Trying to disguise her moan of pleasure, she said, \"Okay caveman, I'm yours. Take me to the shower.\"\n\nStill laughing at her friends' predicament, Britt jumped off the bed, taunting Gina as she followed us into the bathroom. I set Gina back on her feet at the entrance of the shower, turned her to face it and with another little slap on the butt, I said, \"Make it quick and don't get your hair wet.\" She turned her head and stuck her tongue out at me. I gave her another little pop on the ass and she jumped and giggled as she stepped through the door. Britt was beside me, laughing at her friend when I gave her a little love-slap on the butt, \"You too blondie.\" She scowled at me, and then laughed and jumped in my arms, her legs wrapped around my waist, kissing me. I walked her to the shower door and tried to pry her loose, \"I've already had my shower. You two get rinsed off and your hair straightened out and I'll meet you upstairs. I'm going to look over what we have so far.\"\n\nRelenting, she unwrapped her legs and I set her down, but not before a good butt massage. She turned to walk in the shower and I reminded them, \"Make it quick and no fooling around.\" Britt's response was to take Gina in her arms and they kissed, hands everywhere, writhing against each other. I looked on for a minute and then shook my head, turned and headed out of the bathroom. Laughing and giggling was all I heard till I made it out the front door.\n\nSurprisingly, in about twenty minutes, the girls came prancing upstairs looking beautiful dressed in only a couple of my t-shirts. Women's bare legs and butts always seem to look better protruding from the bottom of a man's shirt. One of those strange anomalies I guess. I was going through the pictures on the big monitor as Gina pulled up the other office chair and Britt planted herself in my lap. \n\n\"So, how do they look, \"she asked, squirming to make herself comfortable and me uncomfortable? I scrolled through them pretty quick, stopping when one caught my eye. The girls commented on them as we went along, particularly interested in those that we wouldn't be able to publish. \"Oh Gina, you look so hot there!\" \"God, look how big my butt looks!\" \"Your tits are gorgeous in that one!\" \"Look how long your legs look!\" \"I think we should put that one in the calendar!\"\n\nOn and on they went until we came to the shot of them bent over the hood of the car and all you saw was legs, butts, a little bit of swimsuit and most importantly, two puckered stars trying to hide behind a narrow thread. Britt squeezed my arm, causing me to stop on that shot. The girls stared at it in silence until Gina said, \"That is so fucking sexy. You wouldn't know that it's us.\"\n\n\"Yeah, I think I would,\" I interjected\n\nGina slapped my arm, \"Well yeah you would, you ass-man you, but fuck, that is hot. The lighting is perfect and the colors and look at my girl's legs. I could just lick my way from the bottom to the top and then lick that ass all day.\"\n\nBritt giggled as I involuntarily responded to Gina's remark. \"George's dick agrees,\" wiggling in my lap. \"Your legs look incredible too. And your ass; you can't imagine how much I love burying my face in your butt.... Oooo George, behave!\"\n\nAs I was about to move to the next shot, Gina asked, \"Babe, do you think I could get a big print of that? I want to hang it up somewhere where I can see it all the time. Looking at it is making me wet.\"\n\nWe both looked over at our brunette partner and Britt asked, \"Which 'Babe' are you asking?\"\n\nGina blushed a bit, \"God, you can be such a pill. Well let's see, you work for Red Brick Photography, so if I'm nice to you, you could probably get me a print.\"\n\n\"Now, wait a minute, \"I said, \"As the owner of RBP, I have the final word of what happens with my photos. I think that if you want a print, you better be nice to me, \"I said with a big grin.\n\nGina smiled deviously and stood up beside me. Bending down, she took my head in hands and gave me a toe-curling, cock-stiffening kiss. Gina moaned into the kiss, which I later found out was because Britt was palming hers tits while she kissed me.\n\nBreaking from the kiss, she looked at me inquisitively. \"Yeah, \"I said, being kind of cocky, \"That'll get you and 8x10.\"\n\nBritt laughed out loud and Gina said,\"Oh, so that's how it goes; so a blow job will get me what?\"\n\n\"I don't know,\" playing along, \"11x14?\"\n\nBritt was still laughing, and slowed down enough to say, \"Babe, if you want a print as big as I think you want, you might as well offer him your ass right now.\"\n\nGina's eyes grew big as did my cock. Britt smiled at me as she wiggled against it. \"So, you think I should let you put your big cock in that little hole there,\" She asked, touching hers on the picture.\n\n\"Well, I've already had in that hole,\" touching Britt's sweet pucker on the screen, \"so yeah, I think I would like to put my big dick in that hole,\" touching her tight hole on the screen.\n\nGina's body quaked a little as I touched the screen, \"Ah fuck... deal!\" And then she laid another kiss on me that had my cock knocking at Britt's back door. Britt nibbled on my ear as Gina tried to suck the breath out of me. \n\nCatching our breath, Britt asked Gina, whose face was still right in ours,\"Did you cum when he fingered your ass on the monitor?\"\n\n\"Oh, shut up, \"she answered, embarrassed and then kissed Britt hard. I sat there taking it all in, feeling pretty proud of myself; and pretty fucking lucky to boot.\n\nFinally, all the fooling around was done, and we got serious and got the last pairs of bikini's shot. They were all sexy in their own way, and the girls were much better behaved because it was getting late and we were all beginning to feel it. It was almost 7:00 when Gina's cell rang; it was Kate.\n\n\"Hi Katie, are you home? No, we just finished up. Yeah, it went really well. Yeah, I'll tell you all about it when I get home. No, we both have to work tomorrow and I'm beat; George is a real slave driver, and his assistant is a pain in the ass.\" She winked at us, laughing as she listened to Kate and I held Britt back from launching a tickle-attack on her best friend. \n\n\"Okay,\" she continued, \"Should I grab something to eat on the way home? Okay, that'll work. Okay, I love you.\" \n\n\"We love you too,\" Britt shouted from across the set.\n\n\"Okay,\" laughing, \"Okay, I'll do it. I'll see you in a bit. Alright, love you,\" finally hitting 'end'.\n\nGina walked back to us, sipping on a bottle of water. \"Sounds like Kate had a good day at work, she sure sounded wound up.\"\n\n\"Well I'm glad it worked out for you guys to work at John's store. I know he thinks the world of you two. So, I can't make you dinner?\"\n\n\"Thanks, but no,\" Gina answered. \"I should get home and rest up for tomorrow. If I stay here, no telling what kind of trouble I might get into, \"she smiled. \n\nWe started wrapping it up. I took care of the lights and the gear as the girls got dressed back in their shorts and shirts and gathered up the clothes and shoes. Back at the house, we walked Gina out to her car to say goodnight.\n\n\"Are you coming home tonight,\" Gina asked Britt. Britt glanced at me for a second, not having given it a thought.\n\n\"If it's okay with the boss, I think I'll stay here tonight. We have a lot of photos to go through tomorrow and I have some other things I've been putting off doing.\" She looked back at me for approval and I just smiled, squeezing her hand.\n\n\"Okay then, well Kate asked me to give you a good night kiss in case you weren't coming home,\" and proceeded to give Britt a none-too-chaste kiss goodnight.\n\nGina then turned to me and stared at me for a moment and then said, \"She asked me to give you something too.\"\n\nI was prepared for one more dick-straightening kiss when Gina dropped to her knees, pulled my shorts with her and took my cock in her mouth. I sucked in a deep breath, completely taken by surprise and it must have shown in my face as Britt smiled at me, kissing me before dropping down next to her best friend. They took turns sucking my cock, the other taking my balls in her mouth. Thankfully I was able to lean against Gina's car as I got a little dizzy as I held both of the backs of their heads and came with a jerk that drove my cock into the throat of whichever one got in that final stroke. I couldn't open my eyes to see who was sucking the life out of me. Finally, I glanced down and focused on them kissing and sharing my load and then cleaning up after themselves, each licking up and down my cock. \n\nDrained, I coaxed them both up to hug them and kiss them both. Kissing Gina, I said, \"Thank Kate for the kiss and tell her I look forward to kissing her goodnight soon,\" and kissed her once more.\n\nA little teary eyed, the girls kissed goodnight once more and I closed the big door as we watched Gina's tail lights disappear down the street."
    ],
    "authorname": "GeorgeDaBuilder",
    "tags": [
        "photo shoot",
        "ffm",
        "threesome",
        "ffm threesome",
        "lesbian",
        "two women one man",
        "shave",
        "shower"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/everybody-needs-a-hobby-ch-10"
}