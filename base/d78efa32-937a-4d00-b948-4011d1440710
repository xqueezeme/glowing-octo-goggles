{
    "title": "Dark as Daylight Ch. 11",
    "pages": [
        "Note: All persons in this novel are fictitious. If you are looking for a great deal of sexual activity, this story is not for you. The scenes that are included will be evocative, rather than just for the sake of sex itself. \n\nThis story is for your reading pleasure. Its length is undetermined, because I do not know where my mind will take me as I proceed along this journey with you. I hope you will stay with me, and this story, until it reaches its inevitable end. \n\nThis story is copyrighted material, and is owned by Prolonged_Debut10. My information is on file with Literotica.com. Any attempts to reach me should be forwarded through that site. I am definitely over eighteen years old, and a citizen of the United States of America. \n\nChapter 11 \n\n43. Switzerland \n\n\"That bastard gave us up. Now they know who we are, and what we were planning to do. We are going to have to go so deep underground, where no one can find us. Having plastic surgery to change our faces, remove our fingerprints, and having our voices changed will require time, but we must do it. This is a disaster of epic proportions. \n\nFriedrich, what are we supposed to do about the attacks that are scheduled to go off tonight? Do we let them go off as planned, or do we call them off? \n\nThe entire planet now knows we planned to blow up the American Super-rocket and along with it that isolationist President of theirs.\" Germany cannot afford to have 40,000 American soldiers leave the country, with all its military equipment, and their dependents. It's a loss of nearly 150,000 people. The drain on our economy will be disastrous, and our country may never recover.\" \n\n\"Otto, you are being too pessimistic. I agree we are going to have to disappear, but the Senate and the Congress of the States has to approve those troop movements. Where are they going to place all these men and women, when they return home. \n\nThey have shut down so many bases, and their military housing is so poor, due to their budget cuts, they will have them living in the streets, like paupers. Let's wait to see what happens. \n\nTonight we will leave for Berlin, and from there to Helsinki, and finally to Turku. We have friends who will hide us there, indefinitely. They have fine doctors, and for the appropriate amount of money, they will do as we ask.\" \n\n\"How are we supposed to get our money out of Deutsche Bank, without leaving a paper trail, Friedrich?\" \n\n\"Bearer bonds naturally. We will walk into the vault, as always, but this time with a large steamer trunk. We fill it with $10,000 bearer bonds, and when we leave, it should weigh about 230 pounds, more or less. It will give us about $70 billion to work with over the coming years.\" \n\n\"I won't even ask you how you figured that out, but I will take your word for it. That leaves us about $4 billion short of what we have in there. What should we do about that?\" \n\n\"Bring a very large suitcase, Arthur, a very large suitcase.\" \n\n\"I have a bad back; I think I'll bring one with wheels.\" \n\n\"I don't care what you do, just stuff as many bearer bonds in it as you can. We will leave instructions for Steigman to remove the money from our accounts to pay for the bearer bonds that are missing from his secure storage area. That's how you take a large amount of money out of a bank, without a paper trail.\" \n\nOtto said, \"In other words it's stealing, and paying for it later.\" \n\n\"You may look at it that way, but I don't. \n\nGo to your homes, and take just what you need for a one week's travel. Leave everything in order, as if you were going to return. I will have a friend remove a car from a parking area, and change its license plates. He will make sure the owners never complain, while they are alive. Let's meet here, and we will leave for Germany in three hours. \n\n\"What about him?\" \n\n\"We should be very happy Aubrey never knew about him. He would scalp us, like in one of those old-fashioned Westerns he likes. The only difference being, we would still be alive when he does it. I'll call, leave him a message on his dead drop phone line, and tell him what we're going to do. When we get to Turku, I'll call him again, and give him a way to contact us, if need be. He may want to break contacts with us, permanently.\" \n\nArthur said, \"That sounds good.\" \n\n\"Otto don't forget to pack food for yourself. We are not going to stop on the way for you to eat.\" \n\n\"I am a true German. I am not thin like you. I love my food and it shows. If we were stuck on a mountain top, I would survive for a longer time than you. Stop making fun of my girth.\" \n\n\"Otto, you would die climbing the mountain. Go home, pack your clothes, and pack enough food for the trip.\" \n\n\"I will pack enough for all of us, Friedrich. I will even pack one sausage for you. It will be enough to fill you up.\" \n\n\"You are wasting time that we don't have. The world knows of us, and I don't want the police at my door.\" \n\n\"I will be back in two hours.\" \n\n\"So will I, Friedrich. If the police come, they need a warrant to come into the house. Don't let them step inside, or don't answer the door.\" \n\n\"I have the concealment area under the floor in my closet. I can use that in an emergency.\" \n\n\"Very good, I'm leaving.\" \n\n\"Two hours, not more.\" \n\n************** \n\n44. Space + Time + Travel \n\nThe press corps was sitting in the auditorium awaiting the briefing from Doctor Juan Alvarez. The tension in the room was so great, there were arguments between experienced reporters, that nearly turned violent. \n\nDoctor Alvarez finally walked on stage, and up to the podium, at 6 PM on the dot. \n\n\"Ladies and gentlemen, I will take questions after I give my statement, but you'd better give me questions only about the statement I give and nothing more. I will not answer anything that is speculative. I will only answer questions that are factual, and pertain to the message we received from the spacecraft Good Luck 1. Each of you has received a full copy of the message, so you should not have any trouble asking questions about it. My statement will be very brief, and as I said to you, very factual.\" \n\n\"First I want to introduce you to the five luckiest people on this planet. They were the first to hear the message sent by the spacecraft, and received by the VLA. Doctor Steven Wilkerson, Doctor Alessandro Melassa, Doctor Jane Meadow, and postgraduate students Gladys Knightley, and Stella Forster. \n\nShortly after 4 AM this morning, Doctor Steve Wilkerson heard one of the servos for one of the VLA radio antennas move, from its pre-positioned stations. Normally this is an anomaly that has to be fixed manually. \n\nAs he was climbing the ladder to reach the servo controls, the twenty-six other radio antennas moved. Every alarm in the building sounded. A message of unknown origin was being received. It was not background noise from the stars, or left over from the Big Bang. \n\nMy fellow scientists went to their stations and began tracking this anomaly. It was broadcasting a signal in clear voice transmission. Doctor Jane Meadow called, and told me what was happening. \n\nI rushed to the lab, and watched, as our computer digested what was coming in. We both agreed, it was definitely coming from a spacecraft heading on an intercept course for Planet Zero. For those of you who are not familiar with that term, Planet Zero is Earth. All of us were stunned, and each of us was thrilled that our space travelers are still alive, and have reached the destination they aimed for. \n\nGliese 561 is a red dwarf star. The planet, Gliese 561G is a tidally locked planet, which means one half of the planet faces the sun all the time, and the other half doesn't see the sun at all. The important part of all this is Gliese 561G is twenty light years away from Earth. The Good Luck 1 arrived there in a little more than 3 years. This tiny spacecraft moved many times faster than the Speed of Light. \n\nEinstein was wrong. \n\nIt's not the 1<sup>st</sup> time he's been wrong, but this one is a big one. This was his last untested theory. Now it has been tested, and he was wrong. Traveling great distances in space is no longer incomprehensible, because of great scientists and engineers, like Even Luck, Dycke Schneider, Patricia Valentino, Harold Chase, Delicious Luck Thyme, and Gordon Luck. Their names will join those already in our history books, as trailblazers and visionaries, who not only looked up at the stars at night, but did something about it, and got us there. \n\nYou all know about the greetings going out to those they left behind. They are personal, and were intentionally left out of your briefing material. \n\nThere is the statement given by Doctor Lincoln Aubrey, about his attempts to abduct, destroy the messenger rocket, and the spacecraft. The transcript of that information has been forwarded to the FBI to see if it is possible to prosecute these men, here on earth, when they only evidence against them was testimony given, in a spacecraft, nearly 20 light years away. \n\nThe possibility of these men holding his entire family captive has been forwarded to the German authorities for investigation. \n\nThe Swiss authorities have been notified that these people are suspected of living in their country. \n\nAll of this has been done, through the University of New Mexico, not through the United States State Department, or the FBI. We did not want to get into the bureaucratic red tape that sometimes delays action for days, weeks, or months. If what Doctor Aubrey said is true, action had to be taken immediately, not one second later. \n\nThese actions should pave the way for new laws for intergalactic treaties, to be sure men like Doctor Lincoln Aubrey can testify, in absentia, against the likes of his tormentors: Friedrich von Bierman, Otto von Osterhagan, and Arthur Schultheise. \n\nThat is the end of my statement. I will take questions now.\" \n\n\"Doctor Alvarez, you said this new planet, Atwater Luck is 20 light years away. How far is that in miles?\" \n\n\"72 trillion miles.\" \n\n\"Do you really believe they traveled 72 trillion miles in a little more than 3 years? It sounds a little fishy to me.\" \n\n\"Did you ever watch a rocket take off, Mister Alexander? \n\n\"I've been at the Cape several times to watch rockets take off Doctor.\" \n\n\"Did you go to Texas to watch the Good Luck 1 take off?\" \n\n\"No I didn't. NASA said it was a hoax, and it would never fly.\" \n\n\"Do you feel like the biggest ass in the room now, Mister Alexander?\" \n\n\"I don't like your inference Doctor.\" \n\n\"It wasn't an inference; it was a fact.\" \n\n\"Next question. Yes, Miss Perry.\" \n\n\"According to your handout, Doctor Aubrey sounds like an agent provocateur. How did he get through the initial screening process?\" \n\n\"That's not part of this briefing Miss Perry. You will have to go to Charleston to ask that question, and get that answer.\" \n\n\"Next question. Mister Raven, your question...\" \n\nThe briefing went on for more than 45 minutes. How fast, how far, will we get another message? Will this rocket get closer to Earth? Will it get close enough for Satellites to take pictures of it?...\" \n\nWhen Doctor Alvarez had enough, he put an end to it, and went back to the lab to listen to the broadcast again. He sent out a message to all stations on the net, requesting them to get a bearing on this signal. He wanted to know how far the rocket was from Earth. Traveling at a speed of 96,000 mph might sound fast to normal human beings, but to scientists, who deal with distances in trillions of miles every day, it is like a snail crawling the length of a football field. \n\nHis phone rang. \"Doctor Alvarez, this is Wilkerson.\" \n\n\"Yes Steve, what do you have?\" \n\n\"We have the bearings in from Norilsk, Russia, Torneakven, Sweden, and Alice Springs, Australia put together with ours just as you asked. You are not going to believe where this little rocket is, or what Doctor Luck must have put in it to get it to move so fast at the beginning of its' travels' that it got this far so quickly.\" \n\n\"We all know that guy was a genius, and his son was a chip off the old block. Everyone that went on that ship had a specialty; there was no deadwood on it, at all. So tell me where is it?\" \n\n\"Here goes doctor, and remember, 'Don't shoot the messenger.' \n\n\"Celestial Observation: X -1.697. Y -1.357 Z - 3. 838.\" \n\n\"You're out of your damn mind, Steve; it can't be that close. When the hell did they launch that thing?\" \n\n\"I don't know Doctor, but you are the one that said he was a genius.\" \n\n\"I want the Galactic information, and I want it yesterday.\" \n\n\"I knew you would say that, so I already have it. Are you ready?\" \n\n\"What do you think?\" \n\n\"Galactic Observation: X 3.169. Y-3.155. Z -0.8018. Do you believe it now, doctor?\" \n\n\"If it was any closer to that star, it would have burnt up. Who do they have up there that put the navigational coordinates in?\" \n\n\"I don't know, but he's damn good. He missed Alpha Centauri by 6 \u00bd million miles. The radiation would have killed any human, who was that close.\" \n\n\"Have Meadow send out a release on Twitter. You do it on Facebook, and I will set up another news conference. Hopefully that asshole will not be here this time.\" \n\n\"Why don't you do a video conference, Doctor? You can announce it today, and schedule it for tomorrow evening. Whoever is online can ask you questions from around the world.\" \n\n\"Now I know why I keep you around, Steven. I'll call the communications director and set up.\" \n\n\"Doctor, the reason you keep me, and the entire staff around is to keep your job. We make you look so good; they are going to build a statue of your likeness, and place it in front of the laboratory. \n\nWe want you to know that after you retire, and leave for places where there is more green than yellow surroundings, we will be throwing tomatoes at it every day.\" \n\n\"I will keep that picture in my mind. Do you realize how expensive tomatoes are in this area? To think you would spend that amount of money to pay homage to me, is heart rendering.\" \n\n\"Come on Doctor, we have work to do.\" \n\n************************ \n\n\"I'm glad your friend was smart enough to get this large van. You two can sit in the front seat and watch the grass go by. I will gladly sit back here, with my basket of food and wine, and wile away the hour, during this tedious drive\" \n\n\"Otto even in this wonderful German engineered automobile, I had to put the heaviest part of our belongings on the opposite side of you to keep it level. If you get any heavier, you are going to have to sit in the middle of any car, and purchase two seat on an aircraft.\" \n\n\"I always fly first class, and I fit in those seats just fine.\" \n\n\"I've seen you in first class, Otto. Trust me, you're going to need two seats soon. Do you weigh 180 kilos yet?\" (400 lb.) \n\n\"I never weigh myself. I go by the way my clothes fit; and they fit me beautifully, can't you tell?\" \n\n\"I won't answer that question. Don't forget to pace yourself, with your food. It's 1100 km (700mi) to Berlin. I wouldn't want you to run out of anything, before we get there.\" \n\n\"Be nice to me, Friedrich; I'm sitting behind you. A bottle of wine, across the back of your head would hurt.\" \n\n\"I apologize Otto. We have been friends too long to argue like this. It is just the pressure of the day that's getting to me. \n\nI have decided not to call off the attacks for tonight. I want to distract the Americans. I want to keep them busy at home, while we do what we must, and travel north to disappear. I never believed it would come to this. I was sure Aubrey would take care of the spacecraft. His mind was sharp, but his will was weak, when it came to his family. Our threats to wipe his name from the roles of those families living on this planet destroyed him. \n\nWhen I held his youngest in my arms, and told him what a shame it would be if that little boy was to be the end of his family's lineage, there were tears in his eyes. \n\nHe promised me his life in exchange for the lives of his family, but most especially for the baby I was holding. \n\nWhen I agreed to his proposal, he fell to his knees, and kissed my feet. I felt honored at that point.\" \n\n\"I wonder what they going to do, after they land?\" \n\n\"I don't care. I just want to get out of Switzerland and into Germany, before the Swiss start checking cars at their border. Program the computer Arthur, so I know where I'm going.\" \n\n\"Friedrich, all you have to do is remember two roads to get us to Berlin. You take the A6 to the A 9. When you get on the A9, get off at the exit to you Aunt's home in Berlin. It's not that hard to remember.\" \n\n\"Oh God, we are all making fun of one another. We are all nervous. Otto give me something to eat; maybe it will calm me down.\" \n\n\"Bratwurst or sausage?\" \n\n\"Bratwurst please.\" \n\n*********************** \n\n\"Good morning William, any news?\" \n\n\"I spoke with General Marcus, and it was all quiet last night. \n\nI spoke to mom a little earlier, and heard a very funny story, about Lucius and Paul. It was quiet, in Glen Falls last night, also.\" \n\n\"I wonder if the news scared them off.\" \n\n\"I doubt that dad. The tip of the spear is probably on the run. These are the mercenaries who were hired to perform a specific job. As long as they were paid, and we can't contact them to verify it, as we did in New York, they are going to fight.\" \n\n\"I guess it was wishful thinking on my part.\" \n\n\"We can always wish dad, but wishes don't always come true.\" \n\n\"Has your brother, and his little friend surfaced for food?\" \n\n\"If he has, I haven't seen him.\" \n\n\"Well, no one has been known to starve to death, within 72 hours of going on a diet. He may be weak when he finishes, but it will be only in his knees.\" \n\n\"Not necessarily, there are other positions, and from what he said to mom, before we parted company, he's watched enough pornography on the internet to know how many there are.\" \n\n\"I hope I didn't wait too long to introduce him to the wonders of sex. Pornography is not the way to learn how to treat a woman.\" \n\n\"Dad, he's had excellent examples all his life. He watched me as I grew up in China. I never treated any woman unkindly. \n\nHe watched you and mom at home. Although both of you confused the heck out of him, with your verbal interplay, the love you two have for one another was always evident. He sees it in Gwen and I also. He's not going to treat Audra any differently than we treat our wives. \n\nHe may have a rough start, because he's nervous, and cannot control himself. However, once he gets an understanding of the mechanics of sex, he will be able to read what his and her bodies are saying to each other, and feed off those signals. He is brilliant beyond belief, and if he doesn't die of leg cramps, he will have the time of his life.\" \n\n\"Neither of us died of leg cramps, Will.\" \n\n\"Well good morning little brother. I don't believe I'll ever be able to wipe that smile off your face. Did you enjoy dancing?\" \n\n\"We haven't gotten to the dancing part yet. We've been changing beds all night, and most of the morning. Audra and I believe cleanliness is next to godliness.\" \n\n\"And how many beds have you changed so far Miss Audra?\" \n\n\"15 so far Mister Zabo.\" \n\n\"15 in one night?\" \n\n\"Well, it's almost noon, so it's one night and one morning.\" \n\n\"Active mammals aren't you? Are you hungry?\" \n\n\"Yes, that's why we decided to take an hour off. Actually, it's 10 minutes to get here. 10 minutes to order and for the food to get here. 20 minutes to eat. 10 minutes to talk; and 10 minutes to get back to a new bed, and decide where to start again. We don't want to waste any time.\" \n\n\"Should I ask who put you under such strict time constraints, or should I guess?\" \n\n\"It wasn't Patrick, Mister Zabo.\" \n\n\"It sounds like you are enjoying yourself?\" ",
        "\"It was difficult at the beginning; but now it's fun. We know each other a lot better, and there is no animosity left between us. We have an arrangement, which benefits both of us, and may last us a lifetime.\" \n\n\"Patrick would you care to tell me about this arrangement?\" \n\n\"Not particularly dad; but in the intermediate term, there will be another pair of feet under the table for meals at our house. Then, other living arrangements will be determined. \n\n\"William, when we get home make sure your mother does not know where our guns, knives, or silverware, with pointed ends are.\" \n\n\"Dad, leave mom to me. I will take care of her. When I'm finished, everything will be fine.\" \n\n\"Holy cow dad; a boy went to have sex for the first time in his young life, and came back a man.\" \n\n\"It would certainly seem that way William. Why don't you two order breakfast, or lunch, as it were, and join us. I will update you on what happened yesterday. There was some startling news, while you were experiencing carnal knowledge of one another.\" \n\n\"You found out who the tip of the spear was, dad?\" \n\n\"Yes, son, we believe we did, but not in the way you think. The world received a message yesterday from the Good Luck 1. It has reached Gliese 561G and landed on it. It has renamed the planet Atwater Luck. \n\nSometime prior to landing, it launched its last remaining rocket. The rocket had many messages for us. The most startling one was there was a traitor on board. Doctor Lincoln Aubrey tried to destroy the ship three times, using three different methods. He tampered with computer chips, which could have caused fires to break out on board. He tampered with the manuals for the nuclear engine. If that was not found in time, they would have had to eject that engine, and been lost in space for all time. Lastly, he set up an explosive device in the elevator of the landing gear. When they went to extend it, an explosion would have occurred. It would have damaged spaceship so severely, eventually it would have killed all persons on board. \n\nAll these attempts were foiled, because of the stellar work of the crew, and passengers of the Good Luck 1.\" \n\n\"Who's gonna write the book dad? It's a best seller.\" \n\n\"I'm afraid we're going to be busy for a little while Patrick. You have your confirmation hearings coming up next Tuesday.\" \n\n\"What confirmation hearings dad? NASA just went out of business. Rockets are no longer needed. We have a proven system now. Hydrogen and oxygen are no longer needed to put satellites into orbit. The days of expendable rockets are gone. You build a median size bubble, like the Good Luck 1, and you can launch 30 satellites into orbit at one time. The bubble comes back, lands, and takes off a week later to do it again. The cost saving is phenomenal, and the government is out of the space business permanently, except for pure science. I'm out of a job, before I got one.\" \n\n\"I don't believe you should put it that way, before the Senate confirms your appointment. Let's get through today and tomorrow, and talk about it over the weekend. We will define our strategy by Monday, and fly to Washington Tuesday morning. You may be absolutely right Patrick, but I want to speak to the President first.\" \n\n\"As always dad, whatever you say.\" \n\n\"Thank you Patrick; eat your breakfast, you are three minutes into overtime.\" \n\n\"I think we can spare five more minutes; do you mind Audra?\" \n\n\"We can jump into the pool half way down; that will save us time.\" \n\n\"Thank you. William can we borrow or rent one of your townhomes in New York, when they are finished being renovated? We are going to be running around naked most of the time, and I don't want mom screaming at us to put clothes on.\" \n\n\"Do you have references?\" \n\n\"I believe I can scratch up a few.\" \n\n\"What are you going to do if you have to move to Washington, or Houston?\" \n\n\"I guess I'll have to break my lease, and sleep in my airplane.\" \n\n\"I'm a very tough landlord. If there's a mark on the place, my wife will hit you.\" \n\n\"You are going to be in South Carolina in four months. Your wife will never know what's going on in those houses. Parties, parties, parties.\" \n\n\"Patrick, you never learned how to party. You don't have three friends to invite to a party. I know that sounds unkind, but our lives have been, are, and always will be different than any other people on this planet. Our father is not only the richest man in the world, but the most influential man alive. I have just taken over 80% of his businesses, but in name only. I have to learn about each one he has. It could take me a decade to do that. \n\nWhen you come of age, dad wants you to take over 30% of them. We both know you are smart, so much smarter than I am, it scares me. I want you to decide which companies you want. \n\nWe will always be a family business. I don't care which businesses you take. They will always be under one name: Zabo International. We will always be richer, and have more money, then we will ever spend in 100 lifetimes. That is not our goal in life. Our goal in life is to continue dads' dream. It's not only what mom and dad are doing, but with our sister Patty, and her daughter Anna. We are going to attempt to end hunger and disease in the United States, and Africa. \n\nAll Western society has given lip service to that goal. We have started doing something about it. Our work must continue, until everyone is hunger, and disease free. \n\nOur baby sisters will join us in that fight, when they inherit their 10% shares of the company. Even though they will be minority owners, they will be our equals, because they are family. Their husbands will have no say in what happens inside our businesses. They will be given allowances to live on, and they will be very small. They will have to work, like everyone else works, to maintain their standing in our family. \n\nAs I see it, you will wind up as Chairman of the Board before you are 30 years old. I will be the President of our company. Our holdings will be so vast; we will need offices all over the world. The only way to do it is by operating as a corporation, but maintaining it as a wholly owned family enterprise. Only you have the brains in our family to run it properly, Pat, so be prepared.\" \n\n\"Can I go back to China, dad.\" \n\n\"Son, did you just steal your brothers' line?\" \n\n\"I knew I heard it somewhere, but I wasn't sure.\" \n\n\"I'm almost sure I heard it from William, before he met Gwen.\" \n\n\"You are right dad. It had something to do with him never getting married. Now, not only is he married, but he knocked her up. No wonder he wants me to be the chairman of the board. Maybe China is not remote enough anymore. Are they booking passage to Atwater Luck yet?\" \n\nWilliam laughed. \"Little brother, if I have to stay here and suffer, I'm going to make sure you do too. You broke my nose with a sneaky left hand. I will return the favor, but you will see the punch coming.\" \n\n\"I don't know why you are angry about that little thing. You had an ugly nose to start with.\" \n\n\"Dad please, just one leg. It will only hurt him for six weeks, and I will get such pleasure out of it.\" \n\n\"I explained to you yesterday that now is not the proper time.\" \n\n\"Wait a minute, dad. Do you mean to tell me there is going to be a proper time for Will to break my leg?\" \n\n\"When a child taunts his elder, as you have been taunting your brother, since you returned with him, from China, as often as you have been taunting him, I have to give him a little leeway. \n\nHe has been exceedingly kind to you, and has restrained himself admirably. There have been times that I have had to restrain him, for your benefit. There will come a time, that I will remove these restraints, from him. You will have reached the end of the rope. I will not tell you when that time comes, and neither will your brother. Good luck my son, and when the time comes, defend yourself to the best of your ability.\" \n\n\"Oh shit!\" \n\n\"William please.\" \n\n\"With pleasure dad.\" \n\nSmack \n\n\"What the fuck was that for?\" \n\nSmack \n\n\"Stop it William that hurts.\" \n\n\"Why is your brother hitting you, Patrick?\" \n\n\"How the fuck should I know?\" \n\nSmack \n\n\"This could go on for days, Patrick. Why is your brother hitting you?\" \n\nAudra had her hand over her mouth trying to control her giggling. \n\n\"Wait until I get you downstairs Missy, you won't be giggling; I can assure you of that.\" \n\n\"Audra knows why you're getting hit. Maybe you should take lessons from her, instead of sending her to college.\" \n\n\"Dammit, it's mom. She's laid down the law, hasn't she?\" \n\n\"For the first time, since I've known your mother, I used inappropriate language in our house. She scolded me, and it was appropriate for her to do so. I said it was the Patrick effect, and it would not happen to me or any other member of the household, again. The treatment you are receiving now, will happen to you anytime, by any member of our household, who hears you use profane language. You could be downstairs training with Alfonse, when it happens to you. If you use profane language, you will be hit; and the more you use that type language, the harder you will be hit. You will get your mouth under control, my son, and you will do it quickly.\" \n\n\"Yes dad, I apologize for being rude in front of you, and everyone else in our household. When you speak to my mother, would you apologize to her for my behavior.\" \n\n\"I will do it for you this one time. Remember, your actions will speak louder than your words.\" \n\n\"I know. I have a message for the young lady who laughed at me. We have passed the one-hour time limit. We are by-passing the pool, and going straight to bed. Goodbye everyone.\" \n\n\"Goodbye Mister Zabo, William, we will see you tomorrow.\" \n\n\"You're not stopping by for dinner tonight?\" \n\n\"No, we couldn't fit it in to our schedule.\" \n\n\"Did you bring enough clothing with you?\" \n\n\"Well, since I'm not wearing any most of the time, I brought plenty.\" \n\n\"Audra your wasting time.\" \n\n\"My master calls; I must respond, or I will get a spanking.\" \n\n\"I hope you enjoy it.\" \n\n\"I do, especially after I have a vaginal orgasm. I get another orgasm that's bigger, longer lasting, and most often; mind blowing.\" \n\n\"I shouldn't have asked. Now, I miss my wife desperately.\" \n\n****************** \n\n\"Let's start out with that one.\" \n\n\"Why, not only does it look weird, but we can't use our hands to pleasure each other.\" \n\n\"I know what it is, and I'm not talking.\" \n\n\"We are in this together, Pat, talk to me.\" \n\n\"It's the toes. Not only do you get to make love in a totally different position, but you get to suck on and play with your partner's toes and feet. Your feet are supposed to be especially sensitive when you are making love. We are about to find out if it's true.\" \n\n\"Connecting should be interesting.\" \n\n\"We are not going to start out in that position, we are just going to wind up in it. Why don't we start in the reverse integer position? I love how you taste.\" \n\n\"Why can't you just call it 69, like everyone else does?\" \n\n\"I'm not everyone else Audra. You heard what William said about my future. I'm not going to make the mistake of upsetting my father by becoming any less than what my father wants me to be. He is old, and no one can predict how many years he has left. Before he leaves this world, I want him to know that I am his son, and I have lived the life he wants me to live. I want him to know I have upheld our family name. It was never important to me, because William was always ahead of me. \n\nAs in England, if the king and queen have two sons, they used the phrase, 'The Heir and the Spare.' I was always the 'spare.' I thought I was going to live a life of leisure, while William controlled my father's businesses and his money. He would generously dole out money to me, my sisters, and to charities. He would be in the position my father is today, 'THE Man.' He would hold influence over Presidents and Premieres, while I played chess, and enjoyed my life of leisure.\" \n\n\"He change that today, in a very big way. Now my father is going to cast his eye on me to see if I measure up to his standards. I will not fail him Audra. It's much too important to him, and now it has become important to me. I will not allow him to go to his final resting place, knowing I failed him, and everything he built during his lifetime. I could not have that weighing on my soul for the rest of my life. I will work 24 hours a day, every day of the week, month, and year, to make sure that never happens to him.\" \n\nShe kissed him, sweetly, when she didn't have to. \n\n\"You just did Patrick. The way you said you would not let him down, strengthened your resolve in a way no one else could. You will be able to look into your dad's eyes, and they will tell him you have succeeded beyond his expectations, by a full measure. He will close his eyes, for the final time, smiling at what his children accomplished, during his time on earth. Most especially, he will be smiling because of you Patrick. At the beginning, he was unsure of your commitment to him. As he passes from this life to the next, he will have the knowledge you exceeded each of his standards, while helping your brother, William, keep Zabo International; the premier Corporation in the known universe.\" \n\n\"Thank you Audra, I never expected you to give me a pep-talk like that. I feel much more secure in my own skin at this moment. Let's fuck.\" \n\nSmack \n\n\"Okay, I remember, I didn't think it applied, while we were in bed.\" \n\n\"When we were in China, were you ever allowed to use bad language to a Chinese elder?\" \n\n\"No, and if anyone did, you either had your tongue slit, or cut out. The Chinese do not fool around, when it comes to etiquette.\" \n\n\"You must remember to do it here. If you speak properly every day, it will become a habit. Once it becomes habitual, you will speak properly for the rest of your life. Your mother won't hit you. Your father won't berate you, and he won't give your brother permission to break your leg.\" \n\n\"What is your IQ Audra?\" \n\n\"161.\" \n\n\"They tested me when I was 12 years old. They told me my IQ was 213. How is it you are so much smarter than I am?\" \n\n\"You were the smartest boy in all of China, but you were kept under tight wraps, by William. You couldn't play with anyone. You couldn't interact with anyone. You could not invite anyone into your home, or go to their home to see how they acted around their siblings, and their parent, because you had guards watching your every move. \n\nI'm not looking to get you angry with me, Pat, but it gave me such pleasure calling you that name, watching you cry, and running to them for comfort. I felt like a queen every time it happened. \n\nYou were born with a magnificent brain that absorbed everything in sight. I used your brain against you, as I developed street smarts. I used those smarts, and became the biggest bitch around. The best part was you kept coming back for more, and more. Every time I saw you, I dug at you deeper and deeper. You still came back, and I was amazed to see you each time.\" \n\n\"I told you, I had a crush on you back then. I couldn't find a way to stay away from you.\" \n\n\"That's the difference between us Patrick. You were the dreamer, the intellectual with high ideals. \n\nI was down in the gutter, and I used the garbage to blind you. You kept me on a pedestal, and I tore your heart out. I was rich once, and you are still rich. I was angry, no, I was really fucking pissed off at you, and your family, for having what I lost. You were an easy target, and I tormented you every chance I got.\" \n\n\"Before I answer you, I have to do this.\" \n\nSmack \n\n\"Ouch, what was that for?\" \n\n\"Did you hit me for inappropriate language?\" \n\n\"Yes, but that's your family's rule, it has no effect on me, does it?\" \n\n\"Are you going to be living with me, while you go to college?\" \n\n\"I get it. I will watch my mouth. By the way, if you hadn't noticed, you hit harder than I do.\" \n\n\"You orgasm, I don't. Fair is fair.\" \n\n\"Let's dirty these sheets. I'm tired of being in this room; there is too much talk, and too little action.\" \n\n\"As you wish Madame.\" \n\n\"I am a Mademoiselle, not a Madame.\" \n\n\"Now who's talking too much?\" \n\n*********************** \n\n\"Mom, what are you and Dina wearing to the wedding Saturday?\" \n\n\"We are wearing very fancy dresses, thank you very much.\" \n\n\"What are Jeffrey and I wearing?\" \n\n\"Jeffrey is wearing a very expensive suit.\" \n\n\"And what am I wearing?\" \n\n\"I'm not sure? Why don't you take some rag out of your closet, and a pair of jeans, with holes in them, and wear those?\" \n\n\"Mom is something wrong?\" \n\n\"Do you mean besides the phone call I received from the school?\" \n\n\"I have not skipped one class, since you had your date; I swear it.\" \n\n\"I didn't say you did. Your calculus teacher called. She told me you cheated on an exam, and she gave you a zero on it.\" \n\n\"Bullshit, I never took my eyes off my exam paper. I believe I aced that test.\" \n\n\"So did the person to your right. He runs a B in the class. Since you have been running a straight D, she believes you are the one that cheated.\" \n\n\"Call the bitch, and ask her to give me and him the same class level exam. Have her sit us far apart, and let's see which one of us cheated.\" \n\n\"If I make that call Michael, and you fail the exam, when you are 18, I don't want to know you anymore.\" \n\n\"I agree.\" \n\n\"You didn't cheat on that exam, did you?\" \n\n\"I didn't mom. I promised you I would change, and I have. I am studying like I said I would. You can ask all my other teachers, because my grades have improved in every class. Even the girls, I used to take out, are wondering what happened to me.\" \n\n\"I'm going to school with you tomorrow morning. You and the other young man are going to take the test with someone the principal appoints. I will sit there and wait, until it's graded. When you are finished, and get an 'A'; I going to speak with that teacher of yours. When I through with her, she's going to wonder if she has a job next week.\" \n\n\"I won't let you down mom.\" \n\nNancy opened her cell phone, and hit speed dial. \n\n\"If you called to tell me you lost your ring, after I kill you, the insurance company is going to kill me.\" \n\n\"No James, it's nothing that drastic.\" \n\n\"Good, you had me worried. Three days until our wedding, and I would not have had time to buy you another one.\" \n\n\"You are out of your mind. Don't you have anything better to do with your money than to spend it on me?\" \n\n\"No, not that I can think of offhand.\" \n\n\"Remind me to hit you, when I see you tomorrow night.\" \n\n\"We are seeing each other tomorrow night? What are we doing?\" \n\n\"You're taking me to dinner, remember?\" \n\n\"Actually, that's only a half truth. I'm subjecting you to my sister's cooking. I'm not sure if you consider that dinner. Maybe we should have a sandwich before we go to her apartment, and take food poisoning pills with us.\" \n\n\"I'm going to tell Bethany you said that.\" \n\n\"It's okay, I've been telling her that since she was 14, and started to learn how to burn everything, including water.\" \n\n\"You are incorrigible. We need a suit for Michael. He just told me what happened in school, and I believe him.\" \n\n\"Tell me.\" \n\n\"He said he didn't cheat, and believes he aced the exam. He wants his teacher to give him and the student next to him another exam. He sounds innocent James.\" \n\n\"As the head of the foremost investigative agency in the free world, the Federal Bureau of Investigation, I agree. What are you going to do about it?\" \n\n\"I'm going to school with him in the morning, and demand the principal order his teacher to give him, and the other student an exam, and wait until she grades it. If Michael does as well as he said, I'm going make her give him the 'A' he earned Monday, and another 'A', because she accused him of cheating, without proof, and he didn't cheat.\" ",
        "\"Nancy, you can tell her to start acting like a teacher, instead of an instructor. She should not be jumping to conclusions about any particular student. She should have spoken to Michael first, and listened to his side of the story. Then, she should have given him a test question to answer, right in front of her. She should have done the same thing with the other student, also. If both of them got it right, she should give them the grades they earned, instead of what she thought might have happened.\" \n\n\"Thank you James, I'm going to take Michael out for his suit now.\" \n\n\"It will never be ready for Saturday, if you take it locally. Take him to my tailor. I will call, tell them you're coming, and we need it for 6 PM, tomorrow night. He will set you up with the shirts, ties, shoes, socks; everything Michael needs for our wedding. You don't have to worry about anything else, except saying 'I do' Saturday afternoon, at 4 P.M. Do you think you can remember that?\" \n\n\"Would you tell me again how I got wrangled into getting married this Saturday? I still can't remember how you did this to me? Were you worried I would run away from you?\" \n\n\"To answer your last question first, 'No.\" I hypnotized you to make sure you knew where to be Saturday afternoon. I implanted in your memory that Dina had been kidnapped. I paid the ransom and we could pick her up there, if we dressed really fancy.\" \n\n\"If you ever commit a crime James, you will be able to beat the 'Lie Detector machine' every time.\" \n\n\"Thank you dearest; I've worked extremely hard to get that down to a science.\" \n\n\"Now tell me again, how did you get me to agree to marry you seven days after we became engaged?\" \n\n\"I called Janine, and had her tell you to say yes to anything I asked you. No one says no to Janine, especially me.\" \n\n\"The lie detector just fell off the desk it was on. Would you like to answer my question again?\" \n\n\"Nancy will you still marry me Saturday afternoon, when you know the truth?\" \n\n\"My dress is not returnable. I have to use it one day or another, so it may as well be Saturday. I could go to a movie, but people would think I was going to see 'The Rocky Horror Picture Show.\" \n\n\"My dear lady, you are showing your age.\" \n\n\"My dear sir, thou art older than I am by a great deal. The truth, the whole truth, and nothing but the truth; so help you God, or I will beat the crap out of you.\" \n\n\"We have already determined you can't do that, because we both take self-defense lessons. I am also taller than, stronger than, and weigh more than you. How do you anticipate overcoming all my advantages?\" \n\n\"The female genitalia are hidden inside her body. The most painful portion of the male genitalia are outside his body, and dangle uselessly for 99.999999% of the time. One perfectly placed kick, punch, head-butt, body block, or squeeze will put any man, regardless of his size, strength, or physical conditioning, out of action for seconds, minutes, hours, days, weeks, months, or even years, if I don't let them go. The swelling that will occur after I let them go, will cause him to be out of action, for several weeks, and may even render him impotent for the rest of his natural life. So you see James, the weaker, fairer sex, does have a few ways to neutralize a man's height, weight, and strength, when she is angry with him.\" \n\n\"Madame, I have one word for you, 'OUCH!' Several more may come out later, when I can breathe again, but that is the first one that comes to mind.\" \n\n\"James, when someone is squeezing your balls, your mind is the least of your worries. Now let's get back to my original question please, or did you think I forgot what it is?\" \n\n\"Nancy, I can't tell you how much I love you. I tried my best distraction techniques on you, and you still remembered what you wanted to know. Goodbye now.\" \n\n\"James, if you hang up your phone, the next time you reach for it, it's going to be up your ass.\" \n\n\"Would you believe my red phone just rang, and I have an appointment with the president in 10 minutes?\" \n\n\"Since the president is in Prague, I do have a problem with that. Do you realize how deep the hole you're digging for yourself is, and how much apologizing you're going to have to do for me to show up on Saturday?\" \n\n\"Do you realize if you don't leave soon, Michael's suit will not be ready for Friday night?\" \n\n\"Where would he be going in that suit, if the wedding is called off?\" \n\n\"To my funeral more than likely.\" \n\n\"I won't touch you, I won't see you again, and I will return your ring. It will be as if we never met.\" \n\n\"No, I wasn't talking about you killing me, Janine would kill me. It was the first thing she said to me, when I showed interest in you. It will be very convenient for her, because we will be near City Hall. She will kill me, and list her reasons for doing so. \n\nThey will let her go, 'On her own recognizance.' \n\nThey will take me next-door, to the morgue, to do the autopsy. When word gets to the medical examiner, why I was killed, and by whom, he will botch the examination, and it will not be permissible in court. Janine will be found innocent. She will be put back to work, and you can go on your merry way. They will throw my remains into an oven, and reduce me to ash. I will be spread as fertilizer onto a piece of grass or around the tree, because I do not wish to take up any space on the planet. Everyone will forget I ever existed, and the world will go on at its usual pace.\" \n\n\"That is truly a very sad tale. You go from a man, who is attached to his desk, living the life of a monk, while running the premier investigative agency in the world, to fertilizer, because he saw a woman, and before he spoke a word to her, was willing to throw all his responsibilities away, because he fell in love with her. \n\nHe can't fill a stapler, and cannot remember to plug in the coffee maker, but he wants this woman. He surprises the hell out of her by asking her out for that evening. She accepts. He tells her she's going to need new clothes for tonight and a truck is coming to her home to deliver them. \n\nHe's taking her to his sister's wedding, but he has an ulterior motive, which he explains, and she is happy to help him. It goes over better than expected, and they become friends. They go out a few times, and surprisingly enough he doesn't kill himself, while he's driving, because he has a chauffeur, and makes it through dinner, without removing a finger while using his knife. \n\nThe conversation is nice, even sweet at times. He invites her to Bermuda for a four-day weekend. She says yes, but promises him nothing. The weekend is nice, very nice, and they spend plenty of time on the beach, while talking, reading, and just being with one another. \n\nThe evening before they are supposed to leave, he shocks her by popping the question. He insists she not answer it, until she has spoken to her priest, children, but most of all to herself to make sure she is prepared to change her life around to live with him, a total klutz. He promises her the world, not only for her, but for her children. \n\nHe wants her to wait to make this momentous decision. She will go from a struggling mother of three children, to the wife of an extremely wealthy multimillionaire. He gives her all the time in the world, and sends her to take a bath. \n\nShe spends an inordinate amount of time in the bath, attempting to alleviate the sensations low in her belly. Regardless of how fast her fingers fly over her sex; she is unable to produce the orgasm she needs desperately. She is left with only one escape route. He is lying on the oversize bed, on the other side of the bathroom door. She knows she loves him, but does not want to lose him, as she did her husband, and one of the boyfriends she had during the ensuing years of her celibacy. \n\nShe removes her nightgown, and panties, and goes into the other room to confront him. It turns out not to be a confrontation, but a very joyous occasion. The dummy has a ring worth more than $1 million sitting in his luggage for four days and nights. She wonders if he's actually trainable, or if she actually wants to train him, because his antics were so cute. \n\nFor the next six hours, he explores her body like an anthropologist explores a rare find. She has so many orgasms from his touch alone, she fell asleep many times. When she returns to consciousness, he is still worshiping her body. \n\nIt's well after 2 AM, when she takes control. She informs him that the time to have sex has arrived. During all the preceding hours, he never entered her, and she was not complaining. Now, she had to do something for him. He had been hard for the entire evening, which gave her great hope for their future encounters. However, at this particular moment, the future was now. She pushed him on his back, and had oral intercourse with him. Technically, it was a first for both of them, but she did not let that memory push back into her mind. When the act was completed, he did not lose his erection. \n\nShe mounted him, and with his help, their bodies were joined. She began to move, and her insides became liquid and alive. \n\nHe lay there, looking up at her, like a frog breathing its last breath. His eyes were open wide, his mouth tightly shut, his body rigid, his arms not moving. I wasn't sure if he was breathing. \n\nI began asking him questions, and realized he was still with us. It was good to know I was not a necrophiliac. \n\nAfter going through another set of questions, I had enough. I asked him one final question. I was shocked to the core, by his answer. \n\nActually, I wasn't sure if I was shocked, pissed off, or angry as hell. \n\nHis said, \"You didn't come with a book of instructions.\" \n\nThis was his problem all his life. Everything he knew he got from books. If it was annotated, he studied that as well. If you asked him about a word in a dictionary, he would ask you which dictionary definition you wanted the definition from. He was infuriating, but it did not mean I loved you less. \n\n\"Do you see my breasts James?\" \n\n\"Yes.\" \n\n\"Wouldn't you like to suckle on them?\" \n\n\"Yes.\" \n\n(Oh no, I'm not going to go through this again.) \n\n\"Then do something about it. Don't just lie there. Making love is just not going in and out until you have an orgasm, let's have fun...\" \n\nDo you remember that conversation James?\" \n\n\"Does it have to do with a wheel of cheese?\" \n\n\"Yes James, you had me stuck on your cock with my legs in the air...\" \n\n\"He did what mom?\" \n\n\"Jeffrey, go to your room.\" \n\n\"Why, what did I do?\" \n\n\"Do it, before the spanking I have in mind for James, I give to you instead.\" \n\n\"I'm going to tell Michael what you said.\" \n\n\"If you do young man, I will be calling the police in the morning and have them take you away as an unknown child.\" \n\n\"I know where my birth certificate is. Michael and Dina will tell them I am your son.\" \n\n\"Do you see what you started James? I'm going to have to kill my children, because of this conversation.\" \n\n\"James, James are you still there?\" \n\n\"That damn son of a bitch put me on hold. I'll kill him.\" \n\nThe bell on the front door rang. \n\n\"Michael, see who is at the front door please.\" \n\n\"Sure mom, I have it.\" \n\nOne child never answers the door, when you have three in the house. They all charged to answer the door. \n\nMichael opened the door and was surprised to see James Comey standing there, with his index finger across his lips. He wanted them to keep quiet so he could sneak up on their mother, who was waiting for him to get back on the telephone with her. \n\n\"Kids, get dressed, will be leaving soon. Michael will be getting a suit, and we will be going for dinner, and ice cream afterwards. Do it quietly please, I have to talk to your mother first. \n\nMichael, when your mother starts asking who was at the door, don't answer, I'll take care of everything.\" \n\n\"Okay, Mister Comey, please remember I'm in enough trouble right now, and I don't need to be in anymore.\" \n\n\"Are you going to pass that calculus test tomorrow?\" \n\n\"Hell yes!\" \n\n\"In that case you're in no trouble at all. Go get changed, we are out of here in five minutes.\" \n\n******************* \n\n\"Who was at the front door, Michael?\" \n\nLouder, she yelled, \"Who was at the front door, Michael?\" \n\n\"I'm going to kill one of them, he has me on hold, and my son won't answer me.\" \n\n\"Michael, who was at the front door?\" \n\n\"That's it, two can play this game.\" \n\nShe put her phone on hold, threw it on the bed and stormed towards her bedroom door. \n\nShe started screaming, \"Mic..., when his lips closed over hers, and took her breath away. Her arms were flailing in the air, while her brain was attempting to figure out what the hell he was doing in her home. Her fists pounded on his shoulders. He had not let her go since his initial attack, and showed no signs of stopping anytime soon. \n\nShe felt his erection against her stomach, and pressed against it. When she realized they were standing in the hallway of her home, she panicked, and pushed herself away from him. The first thing she did was take a deep, soothing breath. \n\nAfter collecting her thoughts, she took a swing at him. \n\n\"You bastard, you put me on hold.\" \n\n\"I had to, your neighbors were all over the limousine. You may have recognized their voices. That might have ruined the surprise I had in store for you. You are surprised I'm here, aren't you?\" \n\n\"Yes I am. I'm also thrilled that you're here. Why are you here?\" \n\n\"One of us has to take Michael for a suit. I know how fast you move when you are trying to organize three wonderful, intelligent children. I have no problem organizing people. \n\nUnlike you, I don't micromanage. In two minutes or less, three children will walk down this hallway completely dressed. The only one that will be late is you. Even though I enjoy looking at you, in your current state of ummm...undress. I believe you should be slightly more covered, when we go to dinner, especially with your children in tow.\" \n\nMichael turned the corner, stopped, and his mouth fell open. \n\n\"Mom!\" \n\nNancy screamed, dove back into her room and slammed the door. \n\nJames said, \"Come with me Michael, I think we better talk.\" \n\n\"About what Mister Comey?\" \n\n\"I think we better talk about that first.\" \n\nBefore a word could be said, two more children ran into the living room to join them. \n\nJeffrey asked, \"Where are we having dinner?\" \n\nDina asked the more important question. \n\n\"Where are we having ice cream?\" \n\n\"I'm happy that you are all together; this way I can ask this question only once, instead of three times. \n\nSaturday afternoon I'm going to marry your mother. I will become your step-father. Unlike the movies, stepfathers do not have sharp pointed teeth. They don't carry axes around to behead little children, and they don't kidnap them for ransom. They are good people, just like daddies are. So you guys have these option: you can call me James, Jim, or dad; whichever you decide. If you're angry with me, I don't want you to go running to your mother and tell her you're angry with me. Tell me what you think I did wrong, and we will discuss it. Okay?\" \n\nDina jumped up onto his lap, grabbed him around his neck, and kissed him. \n\n\"Finally, I have a daddy I can bring to school. Everyone else has a daddy except me. Now I have one too.\" \n\nNancy walked into the room and saw Dina sitting on James lap. \n\n\"Another female is taking my place?\" \n\n\"No mommy, he's going to be my daddy. I can take him to school with me to prove it.\" \n\n\"Oh really, I've lost you to a man already, and you are only seven. I am crushed.\" \n\n\"Let's go James, we have to get Michael a suit. I'll drive.\" \n\n\"Like hell you will.\" \n\n\"Why, what's wrong with my driving?\" \n\n\"The limousine is 21 feet long. You need a chauffeur's license to drive it. You are in the back with the rest of us lady, whether you like it, or not.\" \n\nMichael said, \"Mom, you don't know how many years, I've waited for a man to talk to you like that.\" \n\n\"Just remember this Michael, I still cook. What you think is cheese on your spaghetti could be soap flakes.\" \n\n\"Michael get past tomorrow morning, before you start a war.\" \n\n\"I like him mom, he knows how to handle things, and especially, how he handles you.\" \n\n\"I know, and it's worrying me.\" \n\n\"I don't want you getting frown lines. You have nothing to worry about from me, not ever.\" He leaned over and kissed her. \n\nThe kids yelled, \"Yuck!\" \n\n(Saturday Afternoon 3:50 PM. Wedding Day) \n\nJames, Arnold; James' best man, Beth, Peter, and 10 other friends of his were in the judge's chambers, as everyone from Nancy's group walked in. Everyone that is, except Nancy. \n\nMichael handed James an envelope. Beth tore it from his hands and read it aloud. \n\nIt said, \"I'm waiting.\" \n\n\"What is she waiting for James?\" \n\n\"I have no idea. Michael did she say anything to you?\" \n\n\"Yes, she did. If you haven't realized what she is waiting for by 3:59 PM, she's leaving, and there will be no wedding.\" \n\nBeth screamed, \"What did you do? What is she waiting for?\" \n\n\"I don't know. We went out Thursday night to get Michael a suit. We had dinner afterwards, and ice cream for the children. We went back to her house, and the kids went to bed, because they had school the next day. \n\nThen we sat down, had coffee and talked. It was a very pleasant evening. \n\nI worked all day Friday, and we were at your house last night. Did you see anything wrong?\" \n\n\"No, you both look very happy.\" \n\n\"I swear Beth; I don't know what it is.\" \n\nThe judge walked in, smiled at his friend, the Director, and shook his hand. \n\n\"You're only supposed to have that look on your face after you are married for 40 years Jim. What seems to be the problem?\" \n\n\"This is the problem.\" \n\n\"What the hell is she waiting for? What did you forget to tell her?\" \n\nHe rewound the previous week in his mind to try to think of some error he made. He paced the judges chamber, as the clock moved inexorably towards the proscribe time limit. Then, it hit him. \n\n\"Oh God no, not that, not today.\" \n\nBeth smacked his arm. \n\n\"What did you forget to tell her, you idiot?\" \n\n\"I didn't tell her how I got her to marry me, one week after our engagement.\" \n\n\"Very good dummy; you thought I would forget about it, didn't you? You show up at my house, on a night you told me you had to work late, because you were closing down your affairs. \n\nYou take us to your tailor, then for a sumptuous meal, ice cream for my children, and we sit down at my home, for over two hours, for coffee, and a wide ranging conversation. If we were anywhere else, we would have been in bed, making love. \n\nIt was the conversation that gave you away James. I knew something was fishy. You said you were so busy clean up your affairs, but you stayed late to be with me. \n\nWhen you left, I thought about what we did from the time I first called you, and it didn't take me long to realize what conversation we didn't finish. Are you going to tell me or not?\" \n\n\"Can we get married first? That way we can have our first argument after we are married? It's a great story, but very graphic tail, including violence, and sex. We have three children here, who are not allowed to see an 'R' rated movie, unless they are accompanied by an adult.\" \n\n\"Your Honor, what's the penalty for lying to your wife, 30 seconds after marriage?\" \n\n\"Castration.\" \n\n\"No that's not good enough your honor; he wouldn't mind that.\" \n\nEveryone in the room began laughing at Jim, and Janine was the one who came up with the answer. \n\n\"Your honor, I have the perfect penalty for the former head of the Federal Bureau of Investigation. He has to spend one year at a local fix-it shop, repairing everything that comes in. He must do it, without referring to diagrams, notes, or reading the fine print. ",
        "If he does not complete this task, during the first year, he has to repeat the year, until he gets it right.\" \n\n\"Do you agree Miss Wells?\" \n\n\"No Your Honor, I love him too much to do that to him. Besides, Dina has her heart set on taking him to school to prove she has a daddy. I wouldn't want to disappoint her.\" \n\n\"What did you call him before, Miss Wells?\" \n\n\"Dummy, your honor.\" \n\n\"Dummy get over here, and be quiet, until I tell you to speak.\" \n\n\"Miss Wells if you would. That will be fine, we don't want you catching anything from him.\" \n\n\"You're going to get it later Nancy.\" \n\n\"That's funny, I was hoping something might happen between us tonight.\" \n\n\"I can't slip anything by you?\" \n\n\"The next time you try that entrance, maybe you should lubricate it. I'm waiting for you to teach me to fly that airplane of yours.\" \n\n\"How did you know I knew how to fly it?\" \n\n\"Airplanes come with books. Shall I continue?\" \n\n\"No, that will do.\" \n\n\"Are you two finished now?\" \n\n\"No Your Honor, I think we are just getting started.\" \n\n***************** \n\n44. Time - Travel - Space \n\n\"Hey big guy, what aircraft do we have flying today?\" \n\n\"Little Bird is this a trick question?\" \n\n\"No, it's an honest question. I thought there were only two of us up here taking pictures, and looking for signs of enemy movement. I am at 12,500 feet, and about 1000 feet below me is a drone circling right over our base. He's taking pictures as sure as I'm smoking cigars.\" \n\n\"Which way is he heading?\" \n\n\"I would say he's heading south by southwest at about 100 mph.\" \n\n\"Very funny Little Bird; I'd like to catch that little shit. Do you remember that James Bond movie, where this huge ship, ate up an American submarine?\" \n\n\"Of course, it was that terrible movie, with Roger Moore. What about it?\" \n\n\"I'm going to let you guide me right over the top of that thing and have him fly in my back door.\" \n\n\"You're out of your mind. Your rotor wash will knock him out of the sky before he gets close to you.\" \n\n\"I'm going to come down over him, at a 40\u00b0 angle, nice and slow. He won't feel my rotor wash, because the body of my helicopter will be protecting him. You get me real close to that little thing, and I'll let him fly right through the open ramp. As soon as it clears the door, my guys will throw a net over it. That will kill the engine, and a blanket will make it blind. I will land this big bird, and give it to the general as a present.\" \n\n\"Kiss'n the brass's ass again, are you?\" \n\n\"I only do that when the Colonels around. Everyone else can go fuck themselves.\" \n\n\"Jasper, you can tell me to go fuck myself, when you bring me my drone, in the one piece. I need to know how much fuel it used to see how much telemetry it sent back to our new friends. If one drop of gasoline gets out of that thing, think about push-ups for the rest of your life. Did you hear me; you fuck up?\" \n\n\"Yes sir, general sir, on my way sir, sorry about that sir, didn't know you were in the communication shed, sir.\" \n\n\"I'm not in the shed, you asshole; I'm in my Jimmy listen to all you overpaid sky boys complain. I've got a good mind to uncover one of these missiles, and shove it up your ass.\" \n\n\"You would regret not having us up here tonight sir.\" \n\n\"I would still have Little Bird, the 'Huey', and the Apache, wouldn't I?\" \n\n\"Yes, but you would miss my handsome face, in the morning.\" \n\n\"Tomorrow is guaranteed to no one young man.\" \n\n\"Roger that sir.\" \n\n\"Where is my drone?\" \n\n\"3 miles dead ahead, 2500 feet below me sir.\" \n\n\"Well, what are you waiting for, an invitation to Prince Charming's balls.\" \n\n\"I'd prefer Cinderella's pussy, and I'll hop right on it sir.\" \n\n\"Crew chief open loading ramp.\" \n\n\"Loading ramp coming down sir. Sir, how big is the drone are we talking about?\" \n\n\"Little bird, you're closer, what you think?\" \n\n\"Wingspan is approximately 7 feet, body length six maybe 8 feet. Tricycle landing gear, cameras mounted underneath each wing, and one under the fuselage. This is not a child's toy.\" \n\n\"It certainly doesn't sound like one from here.\" \n\n\"Sir, you are aware that the opening to the fuselage is only 9 \u00be feet wide.\" \n\n\"What's your point Sergeant?\" \n\n\"Just thought I'd mention it sir. That, and push-ups, and all.\" \n\n\"It was mighty nice of you to think of me in those terms. Just a word of caution chief, once that drone passes the rear bulkhead, that bird belongs to you. If anything happens to it after that, you are not going to be doing push-ups from this side of the ground. You are going to be pushing up daisies, from the other side. Do you get my drift chief?\" \n\n\"Loud and clear sir, loud and clear.\" \n\n\"Little bird, you're my eyes now, I can't see him anymore. \u00bd mile out I am starting my descent, slowing to 70 knots.\" \n\n\"Did you just say 70 knots?\" \n\n\"Yes I did; do you have a problem with that?\" \n\n\"Isn't that is your stall speed?\" \n\n\"No it is not my stall speed. 69 knots is my stall speed. I'm, also, going to be descending, so don't worry about me, keep your eyes on the prize.\" \n\n\"Okay Jasper, he's at 12 o'clock, a little less than half a mile, 1800 feet or less.\" \n\n\"Chief make sure everyone is belted in back there, I don't want anyone flying out the back end.\" \n\n\"You got that right Captain. We have a net strung across the back, and one across the top. As soon as it passes the bulkhead, we pull a string, and the net will fall on it. That will kill the engine.\" \n\n\"Okay, keep yourselves up high, we don't know how tall that tricycle gear is.\" \n\n\"Roger that. \n\n\"1/4 mile, 1200 feet.\" \n\n\"Dipping over to 50\u00b0 down angle; slowing to 60 knots.\" \n\n\"You're going to overshoot him; you are coming in too high.\" \n\n\"Slowing to 50 knots, 80\u00b0 down angle; how far are we from him?\" \n\n\"600 feet high, 400 feet back, 300 feet back. Left 5 degrees; 300 feet high, 200 feet back. Left 3 degrees, you are directly over the top of him. Start leveling off, 100 feet high; you're right over the top of him. It is buffeting in your rotor wash.\" \n\n\"Chief do you see anything back there?\" \n\n\"I see it captain. Wiggle your ass to the left, and he'll fly right in. A little more, more, more; 70 feet high. He is rocking. 50 feet, dead center, 30 feet high, dead center. Here he comes. He's in the door; Capture; he's in the house, captain, great job.\" \n\n\"If nobody minds, I think I'll pick up speed now so we can fly, instead of falling out of the sky.\" \n\n\"Jasper, you are one crazy son of a bitch.\" \n\n\"You heard the general, he wanted that drone. I have to follow the legitimate orders of the superior officer.\" \n\n\"That was probably the first order you have ever listen to in your entire military life. In a Court Marshall, they would find you guilty, because it was not a legitimate order. You could have killed everyone in that helicopter, by flying it in a configuration it was never intended to fly. So whatever General Marcus ordered you to do, you shouldn't have done it. He doesn't know how to fly a helicopter, you do. \"Not his fault six people died, it's your fault. \n\nYou go to jail, you do not pass go, you do not collect $200. You stay for 25 years to life. He retires as a 3-star general, lives on his yacht on France's Mediterranean coast for the next 30 years, and never thinks about you once.\" \n\n\"When I get on the ground, I'm going to punch you.\" \n\n\"I'd really like to see you try.\" \n\n\"Why, you don't think I do it?\" \n\n\"No I'm sure you would, but I have 2 hours left in my patrol time. I'll be up here, and you'll be down there. I know your arms are long, but I don't think you'll reach me.\" \n\n\"Very funny, I'll see you on the flip-flop.\" \n\n\"You certainly will.\" \n\n************* \n\nDressed like your average English tourist, with tan sandals, black socks, striped shorts that come past the knees, a plaid shirt, a straw hat, and the obligatory, ceaselessly talking wife, Tom Wolfe walked into a huge truck stop in Orangeburg South Carolina. The place was nearly filled to capacity, while the parking area seemed to be generally quiet. It could have held up to 50 trucks, but there were only 23 spaces filled. He made note of it. \n\nHe spoke loudly. \"Felicity, before you use the toilet, place your order so it will be here before you return.\" \n\n\"What if it's cold, when I get back, Steven?\" \n\n\"That's the point dear. If you order now, you won't spend all day sitting on the toilet.\" \n\n\"I do not spend all day in there, I just take my time.\" \n\n\"Yes you take your time, and everyone else's time. Place your order, and then hurry along.\" \n\n\"You weren't this way when we got married.\" \n\n\"You learn a lot in 37 years. I learned this in the first month.\" \n\n\"I knew this vacation was a mistake.\" \n\n\"Why didn't you say that seven weeks ago. Look at all the money I could have saved.\" \n\n\"Money, money, money, that's all you ever think of; you never think of me anymore.\" \n\n\"How can you possibly say that. All I've thought about is you, since we came in here. I told you to order, before you went to the toilet, so your food would be here when you return. Isn't that thinking of you my dear?\" \n\n\"Order for me, I'll be right back.\" \n\n\"You old hag.\" \n\n\"Hello sir, my name is Shirley. How can I help you? \n\n\"You seem to be very busy today, but there are very few trucks outside? Is there a tournament or festival in the area that my wife and I can visit?\" \n\n\"It's been very busy in here the last several weeks, and nobody seems to know why. There's nothing scheduled for our area according to the town council. Many men have been coming in here, with fishing gear, so I think there may be something going on in Lake Marion, which is not too far away.\" \n\n\"What can I get you and your wife to eat?\" \n\n\"Do you have alligator tail?\" \n\n\"Yes we do.\" \n\n\"Do you promise to tell my wife it's chicken? I'll give you an extra $20 tip, if you do.\" \n\n******************* \n\n\"And what would you like with your chicken sir?\" \n\n\"Those bathrooms were as clean as my own.\" \n\n\"The inspectors are always around ma'am. That's the first place they check. If the bathrooms are not clean, they know the kitchens aren't clean. The management has the bathrooms cleaned every two hours whether they need it or not.\" \n\n\"That's very nice. What did you order for me?\" \n\n\"He ordered the boneless southern fried chicken, would you like to change that?\" \n\n\"No that sounds fine.\" \n\n\"I'll have the same as my wife please.\" \n\n***************** \n\n\"The alligator tail was delicious. The waitress couldn't help laugh, while I was eating it, and marveling how well the chicken was done.\" \n\n\"We couldn't take a chance just in case she was on their payroll. Very quiet in there for truck stop, and they weren't speaking Spanish, French, or Creole either. We sat there for an hour, and no one got up to leave. No one came in either. Very unusual don't you think.\" \n\n\"We've done this for three days now, in different accents, make up, and clothing. It's a cinch they can get 1000 men and arms in here. There were 300 guys in that restaurant, and that was for lunch. They must be taking them on short hops, with the guys in the back to a dispersal point. \n\nI hope the kid is right, and they are going to come in through the front door. If they come in from the south, it is going to be a bloodbath; the south is our weakest point. They can get into mortar range if they can push us back a click.\" \n\n\"You're right, but we do have an answer for it. As far as we know they don't have any air support, and we do. The Apache should chew them up with no problem, unless of course, they have surface-to-air missiles. Isn't war fun?\" \n\n\"The first caveman said, \"I have a fist.\" The second caveman said, \"I have a stick.\" The third caveman said, \"I have a stick with a...\" \n\n\"Oh, for the good old days.\" \n\n\"Let's call it in. They will think were fucking again, if we don't.\" \n\n\"Well should we; then we can call them later than we were supposed to, because we were fucking.\" \n\n\"What would your wife say?\" \n\n\"Probably the same thing your husband would say.\" \n\n\"I can't wait for this to be over, so we can go home, and fuck like regular people.\" \n\n\"Regular people don't get paid as much money as we do, but then again, they don't do the same work we do.\" \n\n\"Do you mean they don't believe we work for the Bureau of Mind's?\" \n\n\"It was hysterical, when Mindy Forsyth looked at the certificates in your home office, and saw the D, instead of the E, in the Bureau of Mind's. She was absolutely outrageous for the rest of the party. 'I knew the Government was doing this, I knew it. I just knew it.' \n\nJohn was not helping her at all. He kept egging her on.\" \n\n\"Here come the trucks. It took them long enough.\" \n\n\"There were 23 in the parking lot; lets' see how many of them go by.\" \n\n\"I guarantee you it's gonna be all 23. Then the make the left on U.S. 61 and then we are in trouble.\" \n\n\"Dollar says wrong.\" \n\n\"Is that wishful thinking, or do you know something I don't know?\" \n\n\"No, I just have a feeling they going to turn left at Branchville and take US 78 towards Ridgeville there are more places there, and get lost among the weeds in the small towns; then there is anyplace else. If they pre-positioned small trucks for an attack through the front door that's where they'll be.\" \n\n\"Let's hope you are right. We will know in a few moments.\" \n\n*********** \n\n\"You owe me a dollar; there are only 16 trucks, and they are slowing down. Slide over to the right, one wheel on the pavement one wheel off, like you're in a hurry to pass them. It will make you look less obvious, and we can be sure they are making the turn and not slowing to rendezvous with someone.\" \n\n\"What happens if there are police in the area?\" \n\n\"Now wouldn't that be a shame? We would have to sit here and watch them all make the turn; and verify what they were doing.\" \n\n\"Do you want to take the wheel and put the points on your license?\" \n\n\"I thought I had the pussy in the family?\" \n\n\"You do, and I take full advantage of it.\" \n\n\"Would you please do as I ask then, and stop being an asshole.\" \n\n\"I take full advantage of that also.\" \n\n\"Not if you don't make a move on it sometime soon.\" \n\n\"Lady you drive a hard bargain.\" \n\n\"That's funny, I thought that was your job.\" \n\n\"Why don't you go up on tac three, and see if we have a helo in the area?\" \n\n\"A man with brains; what a concept?\" \n\n\"Airborne flotilla this is scout two, airborne flotilla this is scout two.\" \n\n\"Scout 2 this his Little Bird, scout 2 this his Little Bird go ahead.\" \n\n\"Little Bird, this is scout 2; we just broke contact with the snake heading south east from Branchville, US 78 your direction. Might be interesting to know what they do when they reach Saint George, over.\" \n\n\"I'd like to accommodate you, but I am at minimum fuel, and at the end of my run. I'll see if the Apache or the Huey is ready to go and have them check out your sighting.\" \n\n\"Roger Little Bird, let us know what's happening.\" \n\n***************** \n\n\"I think we should check in now; they know were not screwing around.\" \n\n\"Central comm, this is scout 2; Central comm, this is scout 2.\" \n\n\"Scout 2, this is central communications go ahead.\" \n\n\"Scout 2, from Orangeburg, 1 hour ago, 16 trucks, approximately 200 men. Current, southbound US 21, left at Branchville US 78, heading southeast towards St. George. Broke contact, requested air support, not available. Over\" \n\n\"Scout 2, roger; head East intercept Interstate 95 northbound. Verify trucks not heading southbound.\" \n\n\"Scout 2, 61 to Interstate 95 North. roger, out.\" \n\n\"That would have been a smart move by the Op-Force. A feint to the north, I 95 to the south, and sneak in that way. They can still do it, with US 15, but we already have that covered with sensors, and probably cars at both ends.\" \n\n\"They're supposed to be building the tire factory on the west side of our property. Holy shit! What a smooth move that would be. Everyone's looking at the fence line, and the construction they are doing there, while in the bushes and reeds away from the construction is where they are hiding their attack vehicles. Call that in please, and have them check it out. I'll bet you I am right.\" \n\n\"If you are right, and we live through tonight, you are in for a night of pleasure you have never had before.\" \n\n\"I wish you hadn't said that. I'm going to be walking around shooting people, with a hard-on.\" \n\n\"I'll be doing the same thing, but I'll be dripping.\" \n\n\"Call it in, and concentrate on what we are doing. Maybe we can knock one or two off, before this starts.\" \n\n\"Central communications, this is scout...\" \n\n******************* \n\nKathy and Sabrina were walking up and down the aisles of 'Toys ' Us, looking for a radio controller Quadracopter. It was an idea floated by Sergeant Harry Chase to the Colonel, for use as a nighttime field support tool. \n\n\"Sergeant, the lenses on those copters are for daylight vision only. They are useless at night.\" \n\n\"Yes sir, I know. However, if you change the lenses with the one that's in the driving helmet, it gives you both infrared and twilight vision. It will cut your battery life from 18 minutes to 12, but by that time, the enemy should be eviscerated, and the battle, either over, or the enemy in retreat, at least.\" \n\n\"Where do you propose we get one of these things at such a late date?\" \n\n\"At a hobby store, Toys \"R\" Us, Walmart, or couple of other stores I'm sure they have in this town.\" \n\nLucius yelled, \"Andy bring Kathy up here please.\" \n\n\"Sabrina would you join us in the living room please?\" \n\n\"Absolutely Lucius, would you like another one of my famous sandwiches?\" \n\n\"If I eat another one of those sandwiches, I won't fit into any of my clothes. You are disciple of the food devils, but on my next time around, I'm going to marry you and weigh 700 pounds.\" \n\n\"You'd be surprised Lucius; most of my meals are calorie, carbohydrate, and sugar friendly.\" \n\n\"How can they possibly taste so good and be that healthy?\" \n\n\"You use nature's own ingredients, and not man-made. It keeps you looking as you are now, and you feel great too.\" \n\n\"I am definitely marrying you.\" \n\n\"I'll be on the lookout for you Lucius. You are my type of man.\" \n\n\"Reporting as ordered Colonel.\" \n\n\"I don't see two feet standing behind you Andy; where is she hiding?\" \n\nAndy turned around, and there was Kathy, hooked to his belt facing the rear. \n\n\"We practice this Colonel. If anyone ever get the drop on me, and tells me to drop my weapon, raise my hands, and turn around; they are in for a big surprise, when Kathy hits them with 2- 9 mm Beretta's.\" \n\n\"I must admit, I pictured many things for you two, but this wasn't one of them. How do you get down Kathy?\" \n\n\"He unbuckles his belt Colonel.\" \n\n\"Now why didn't I think of that.\" \n\n\"Kathy get into your play clothes; you are going shopping with Sabrina. You are going to act like a typical teenager, and throw a temper tantrum when she says 'No.' \n\nYou want the most expensive Quadracopter you...\" \n\n\"I'll be ready to go in 15 minutes, colonel.\" \n\nAndy asked, \"Who is going to protect them?\" \n\n\"No one.\" \n\n\"Colonel, Kathy is my life. If anything happens to her, I'll go crazy.\" \n\n\"That's why no one's going to protect her Andy. If it's just two women out shopping, no one is going to suspect they are part of any protective team working out of this house. She has been seen playing outside, and Sabrina is the only woman they've seen. All our men have been undercover, during daylight hours, and there has been minimal movement during the evening hours. They will be safe Andy, trust me.\" \n\n\"Yes sir, but I'll be happier when she's back in my arms.\" \n\n\"Andy, in your hand is a better metaphor.\" \n\n\"You are right, as usual, sir.\" \n\n*************** \n\n\"Here it is grandma; this is the one I want. It comes with an extra battery, the charging unit, and all the extras I need.\" ",
        "\"They want $2400 for that thing, Katherine. You should be saving that money for college. That's one year of books, fees, food program, and part of your room expenses. You're throwing that money away, on something that flies and takes pictures?\" \n\n\"Yes, but this is what I wanted. I told my parents I wanted it for Christmas, and would keep my old computer. They ignored me, and bought me a new laptop instead. Now I have two computers that work, and I can only use one at a time. I'm spending my money on something I wanted 10 months ago.\" \n\n\"Absolutely not, I will not let you buy that THING!\" \n\nKathy shouted. \"Grandma, you are not buying me that THING, I am. It is my money, and I am paying for it myself. All you are doing is writing a check for it. I am giving you the money in cash, when we get home. If you don't want to do it that way, take me home. I will get on my bicycle and get down here that way. I will purchase this myself, and ride home with it attached to my back. One way or the other this 'THING' is going to be in our house tonight, and I will be flying it in the morning.\" \n\n\"Why did you have to be just like your mother; headstrong, and unyielding. If you weren't so damn smart, I would put you up for adoption.\" \n\n\"In two years, I will be 16 years old. I can apply to the courts to be ruled as an adult. I can get a job, with any computer firm, and live on my own. I can cook for myself, and clean my own apartment. I don't need any of you berating me anymore.\" \n\nSabrina looked around and saw they drew the looks of everyone around them. \n\nShe said, \"I'm sorry to have disrupted your day. We are having a little family disagreement, as you've heard. I apologize for making it public. I will try to control my granddaughter's mouth, as well as my own. Please forgive us.\" \n\nThe crowd dispersed, and Kathy noticed two men, who stayed a little longer than the rest of the crowd, and watch them more intently. \n\n\"Grandma, I am buying that Quadracopter. Are you going to help me or not?\" \n\n\"Yes, I will put it on my credit card, and you can pay me, when the bill comes due.\" \n\nKathy jumped up and down, and squealed in delight. She grabbed Sabrina, and yelled, \"Thank you, grandma, thank you so much. I love you, even though I'm a pain in the behind.\" \n\n\"Thank you for not saying the other word. Maybe my moving in with you was not the worst decision in my life. Maybe it was only the second worst decision in my life.\" \n\n\"If moving in with us was only the second worst decision in your life, what was the first?\" \n\n\"Having children.\" \n\n\"That's mean grandma. If you didn't have children, you wouldn't have enjoyed raising my mother. My mother would not have had the joy of raising me. That's how God gets even for having children. You tormented your parents. Your children torment you. Your children's children torment them. I'm going to end that cycle, by not having children. I'm going to have my tubes tied, as soon as I become of legal age. No man is going to touch me, until that happens.\" \n\n\"Katherine have you ever heard of the saying 'The best laid plans of mice and men...\" \n\n\"Yes.\" \n\n\"When we get home, I want you to write in your diary today's date, and what you said to me just now. Put some sort of a marker on that page for easy reference. When you have your second, third, or fourth child, I want you to refer to that page, and think of me laughing at you, from beyond the stars.\" \n\n\"Can I buy my copter now?\" \n\n\"Yes you may.\" \n\nApparently, the last conversation, between the two of them, convinced the men they were truly related, and not part of some scheme to throw them off the trail of something bigger. \n\nHad they truly caught Stephano and Patricia Valentino off guard? Was there no force here to protect them? There were only two cars in the driveway, but there was that five car garage they couldn't see into, and was never open. They knew Robert was in Maryland, Anna was in South Carolina, and Laura was on the Good Luck 1 spacecraft. That left these two women in the household, alone, as far as they knew. They could get to the computers in the basement, and download all the information they needed, without any problems, or loss of life. \n\nIf they did have some support, it really didn't matter. How many men, and how much armament could they put into five cars? Tonight should be very quick and painless, if everyone stuck to the plan. They had to report back to the base, and advise them of what they saw the two women doing. The video they took of the encounter would backup their report. \n\n***************** \n\nAs Sabrina pulled the car into her parking place, a limousine pulled up into the driveway behind them. \n\n\"Colonel, we have company.\" \n\n\"Stations everyone; women to the safe room now.\" \n\nEveryone scattered to the four corners of the house, without a word being said. \n\nLucius thought, \"Why can't women do this, every time you talk to them?\" \n\nAs he peered through the front windows, he shook his head in disbelief. \n\n\"This cannot be happening to me. William will tear my toenails out through my mouth if anything happens now. What the hell are they doing here? They are supposed to be in Lithuania.\" \n\nPatty and Stephano exited the limousine, and were immediately hugged by Sabrina and Kathy. \n\nAs Kathy was holding on to Stephano, she said to him, \"Pick me up and make believe I am the apple of your eye. We are being watched, make it look good.\" \n\nSabrina was giving the same message to Patty as they were hugging. \n\nPatty asked, \"What is a baby doing here?\" \n\n\"Dynamite comes in small packages. She's 22 years old and looks 14. You should see the guy she's married to; you won't believe it. Let's switch, her name is Kathy.\" \n\n\"Hello Aunt Patty, did you enjoy your adventure?\" \n\n\"Come here you little imp, where is my kiss?\" \n\nThe limousine driver brought all the luggage to the front door, but he found it locked. He returned to Stephano and asked him to unlock it. \n\nSabrina said, \"Please leave the bags outside. I'm not sure if the floors are completely dry. We will bring them in ourselves.\" \n\n\"That will be fine ma'am.\" \n\nStephano reached into his pocket, removed his billfold and gave the driver $1000.00. \n\nThe driver was speechless, because the limousine was paid for in advance. He kept saying thank you all the way back to the limousine. \n\nKathy said, \"Aunt Patty would you like to see what I bought with my confirmation money?\" \n\nPatty said, \"What would you do if I said no?\" \n\n\"I would show it to you anyhow.\" \n\n\"Well, let me see it.\" \n\nKathy took it out of the backseat of the car, and presented it to Patty. \n\n\"Oh, is the exact model Stephano has in his closet. Of course, it's gathering dust, because he never uses it. He wanted it, so he went out and bought it. It made him happy for 30 seconds, and he put it away. Men are still boys at heart.\" \n\n\"Aunt Patty, I don't think I'm a boy; I don't have the external equipment.\" \n\n\"I used to change your diapers. I would've noticed if you did. Let's go inside, I want to get this traveled dust off me, and eat a wonderful meal made by the best cook in the Western Hemisphere. I want to see the news, so I know what's been happening, while I was away.\" \n\nSabrina said, \"So you are finally admitting that I am the best cook in the Western Hemisphere?\" \n\n\"No, I am making dinner, because I am the best cook in the Western Hemisphere.\" \n\n\"You bitch; I'll get you for that one.\" \n\n\"I knew you would fall for it. I've been away from my kitchen too long, and none of these so-called expert chefs could put a candle to you or me.\" \n\n\"Thank you for putting me first.\" \n\n\"Inside everyone, let's check the floors first, the hell with the luggage.\" \n\nStephano said, \"Why do I have a feeling I'm going to bring all the luggage inside?\" \n\n\"Because you are a man, and men are good for one thing, and one thing only.\" \n\n\"Pray tell, what is that one thing?\" \n\n\"Obeying their wives.\" \n\n\"Boy did I walk into that one.\" \n\n**************** \n\nAs soon as the door closed, and the all clear was given, the Colonel walked out of the kitchen with a full head of steam behind him. He was about to scream, when Patty cut him off. \n\n\"Hello Lucius, happy to see me?\" \n\n\"If William wasn't your father, I'd have you over my knee, and I'd be tanning your hide right now. What the hell are you doing home Patricia?\" \n\n\"Listen to me old man, I was here the last time someone invaded my home. 12 of your men and women died, because of me that night. I was not going to be any place else but here, if that was going to happen again. If they want me so badly, let them come and get me. I'll stand out front and shine a light on my face, if that's what they need. No one is getting killed defending me, and my friends, while I'm hiding somewhere else.\" \n\nLucius didn't have a quick reply, as he usually did, so he thought for a moment. The he heard his conscious speaking. \n\n\"Go ahead Lucius, I want to hear your answer to that one.\" \n\n\"Shut up Jemma, its' just what I need right now, to be surrounded by women.\" \n\nJemma snuggled up behind him, and bit his ear. \n\n\"Not just women Lucius, very strong women. Women who can stand up to a very strong man like you, Stephano, and that little guy I'm married to. What was his name again, oh yes, William.\" \n\n\"That's right mom, absence does make the heart grow fonder.\" \n\n\"Be nice to us older people, Patricia; we've been known to lose our temper's.\" \n\n\"That's right, I forgot, you are seven months older than I am, mom.\" \n\n\"Let's not confuse Gwen, she might have the baby too soon.\" \n\n\"Don't worry about it you two. After being around Patrick, and my husband, I am immuned to being confused.\" \n\n\"Stephano, how did you let her convince you to let her to come back here?\" \n\n\"Lucius, the last time I won the argument with her was the day I had her say 'I do.' After that, it's been all downhill.\" \n\n\"I understand. Patricia, here are the rules, you will either abide by them willingly, or you will abide by them with my men throwing you into the safe room. You have no other choices. \n\nRule number 1. When I say something, you will do it without question. \n\nRule number 2. Rule number 1 supersedes all other rules. Therefore, there are no other rules. Do we understand each other Patricia?\" \n\n\"Yes I think I understand those two rules.\" \n\n\"Good, let me introduce you to the enforcer of rule number 1. Andy come here please.\" \n\nAndy ducked under the entry way of the kitchen, with a foot-long sandwich in his hand. \n\nPatty shuddered. \"Did your mother survive your birth?\" \n\n\"Yes, I was a very small baby.\" \n\n\"Whatever she had in her breast milk, sure made up for it.\" \n\n\"Andy, you now have three priority women. Jemma is 1, Gwen is 2, and Patricia is 3. We want all of them to survive, but if it can't happen, those are your priorities.\" \n\n\"Don't worry about us Andy. There is something downstairs that no one knows about but me, my husband, two of my children, the builder, and one other person. If they did drop a nuclear bomb, and got by the radiation to get inside to us, we would still be just fine.\" \n\n\"Lucius looked at her, with wonder in his eyes. \"What did you invent now, Patty?\" \n\n\"I haven't patented it yet, because it's not fully tested. When I'm ready, the world will know about it.\" \n\nLucius looked up to the heavens and asked, \"William, what did you do to this world?\" \n\n\"Only good things Lucius, I promise you, only good things.\" \n\n\"Kathy is the Quadracopter ready to go?\" \n\n\"Yes Colonel, the battery is half charged, so I have about 6 or 7 minutes of flight time. The other battery is being charged now.\" \n\n\"Stephano, go outside with Kathy and make a big show of telling her how to fly that thing around. Then back off and let her do it by herself. Bring the bags in, and put them just inside the door. We will put them into your bedroom. Stay outside with Kathy, and supervise, until she runs out of battery power.\" \n\n\"Kathy, when you run out of battery power make a scene. Yell that this is such a gyp that you paid so much money, and you get only a few minutes of flight time for it. It's just not fair. If the Op-Force is using a parabolic microphone, we want them to hear it.\" \n\n\"You have it colonel.\" \n\n************************ \n\nIn the pristine 7000-acre woodland preserve that bordered the East side of the street where the Valentino residence was, the trees not only had a parabolic microphone, but long-range video lenses that picked up every movement on the property during daylight hours. They had 'Starlight Lenses' that were able to pick up movement as dusk approached. However, as with most video equipment, it did not have infrared capability, so they became useless at night. \n\nAs they watched the interplay between Stephano and Kathy, and listened to the instructions issued by the older man to the young child, it all sounded authentic. \n\nAs they backed away from the copter, he could be heard saying, \"Lift it off the ground slowly, and get the feel of the controls first. They won't take it back if it's broken.\" \n\n\"I got it uncle Steph. Let me do it, let me do it myself.\" \n\nPurposely, Kathy lifted off the ground a little more than 4 feet, flipped it over onto its back, and crashed it. \n\nStephano said, \"That was great Kathy, you handled the controls just fine.\" \n\n\"Okay, would you help me this time?\" \n\n\"Only if you say please.\" \n\n\"Uncle Steph would you please help me.\" \n\n\"I think I can help you. Let's both keep our hands on the controls, and once I think you have it, I'll just move my hands off yours, and let you fly it. Make sure the camera lens is covered, we don't want it to get it scratched up if it crashes again. We are not going to be recording anything anyhow, so that doesn't matter.\" \n\n\"I never took the lens cover off.\" \n\n\"Okay, let's fly. We have to get it above the telephone and electrical wires, before we let it leave the property. We are never going to lose sight of it. I am not traipsing all over the woods to find it.\" \n\n\"I paid $2500 of my money for this Quadracopter. I'll look through the woods for the next month to find it.\" \n\n\"Your grandmother allowed you to spend $2500 on a toy?\" \n\n\"Can I play with my toy, before it gets dark. We will discuss the money later?\" \n\n\"You're damn right we'll talk about the money later. We'll talk about the money you spent, a lot later.\" \n\nIt flew straight up into the air, and then started doing small circles, and turns to the left and right. \n\nStephano said, \"Climb another 100 feet, and you will be above all the wires. Then, you can take it for a ride. Keep it in sight, because we don't have any video, or a lot of time.\" \n\nAlthough Stephano was disregarding the VGA screen that came with the Quadracopter, the Bluetooth feed was being sent inside the house, and relayed to the laptop on the dining room table. \n\nThe Colonel, Paul, Kelly, Jack, and Heath were watching intently, as Kathy controlled the Quadracopter, with the jerky motions. \n\nWith constant input from Stephano, the listening devices used by the opposition force were certain that this was just a toy being used by a teenage girl, who used her money frivolously. They didn't realize how good the camera was, as it peered down through the trees, picking up their campsites, and counting their numbers. \n\nStephano said, \"Okay Kathy, you have three minutes of battery life remaining. Why don't you take it out as far as you can see it? Then race it back here as fast as it can go. We will see on the meter how many feet per second it covers.\" \n\nThe speed run took them just to the north of the encampment, with the lens pointed at a position they had not seen before. There were more than 25 different vehicles in the staging area. They had everything: the front end of a Peterbilt truck, to a front loader, several dump trucks, a concrete mixer, GMC Yukon's, and assorted smaller vehicles. \n\nThe Colonel joked, \"Several companies will open up tomorrow morning missing some very valuable equipment. How the hell did they get them in there, and how the hell are you going to get it out?\" \n\n\"Here's your answer Sir. There's a fire road through the preserve. You can see it on the video, if you watch it in slow motion.\" \n\n\"Show me.\" \n\n\"Here it is Sir. It runs north to south through the preserve. It lets out 7 miles south of Dix Hills Road. They won't come out on the north side, because it's right by the fire station. It would be a little unseemly for all those trucks to come out there, and not draw attention to themselves. That is unless, of course, they start a fire on the other side of town.\" \n\n\"They wouldn't dare do that, would they Heath?\" \n\n\"No sir, they don't get paid to think.\" \n\n\"Kelly smack him.\" \n\n\"Yes sir.\" \n\nSmack. \n\nHe said, \"Hey, you really hit me.\" \n\n\"Did you hear the Colonel give me an order?\" \n\n\"Yes, but I didn't think you'd hit me.\" \n\n\"I guess you are wrong.\" \n\n\"Are you two finished now?\" \n\nIn duet they said, \"Yes sir.\" \n\n\"They are going to bring men in dump trucks, to the front of the house, with RPG's and 50 caliber machine guns. We don't have anything that will pierce that steel. So this is what we are going to do. When it gets pitch black outside, put our anti-tank mines in the street, in an S formation. We're not going to count on them running over them. We are going to wire them to proximity fuses. The heat from the engines will set them off. They'll be out of the fight, before they get started. It will block whatever they had coming in after them, including the front loader, and the concrete truck. An RPG will take out the Peterbuilt. \n\nThe remaining force, including all the small vehicles, will have to go onto the grass: so let's meet them with some Claymore's, and contact mines. It will knock their wheels off whatever they are coming with, and whoever is in them, is out of the fight. After that, our front should be secure. Only an idiot would try another frontal assault, after that carnage. \n\nHowever, keep your 50s ready in the garage, and the windows in the front. There will make one more charge, because these are not soldiers, they are idiots. Someone is using them as cannon fodder. They wanted us to split our forces, and they have succeeded again. I am out of position one more time. I belong in South Carolina, leading the defense. Get some rest everyone, the attack will come after 2 AM.\" \n\n\"What about our flanks sir?\" \n\n\"They will attack our flanks just as we predicted. They will run into our juggernaut, and if anyone survives, it will be a miracle. They wanted the front assault to work, because it worked the first time. I want their leader taken alive, not if possible, I want him alive. I have to know if the money that sent me to Antarctica, and separated me from my men, came from the 3 people in Switzerland. If it did, those people are mine. They just made it personal.\" \n\n\"Sabrina can I have one of your wonderful sandwiches please?\" \n\n\"Are we still getting married?\" \n\n\"You can count on it next time around.\" \n\nJemma screamed, \"What is this bullshit? I thought you only wanted to marry me.\" \n\n\"I do, but the loves of my life always seem to be married to men I like and admire. Sabrina is not taken; so I've decided to marry her. Not only is she free of male entanglements, but she is also the best cook it has ever been my privilege to share a meal with.\" \n\nPatty yelled, \"Are you saying Sabrina is a better cook than I am?\" \n\n\"I have never tasted your cooking, and in all honesty I want to keep it that way. It cannot cause an argument if I don't eat your cooking. I'm going to steal Sabrina from you, and she can live happily ever after with me.\" \n\n\"Colonel, we don't even know each other.\" \n\n\"I meant on the next time around Sabrina.\" ",
        "\"I may not how to cook next time around.\" \n\n\"In that case, I'll have Patricia teach you.\" \n\n\"My what a tangled web we weave...\" \n\n\"I've got a call William, and tell him what's happening here. Do you want to talk to him, when I'm done Jemma?\" \n\n\"Who is William?\" \n\n\"I'm not talking to you, until tomorrow. This day has been confusing enough as it is. It happens, whenever there are more women around me, than there are men. Zachary, where the...\" \n\n\"Right behind you, sir.\" \n\n\"I really do hate you, when you do that to me.\" \n\n\"Do you want me to get all the women downstairs sir?\" \n\n\"All the women except Sabrina, she's making my sandwich.\" \n\n\"Ladies, by the Colonel's order, we are going downstairs.\" \n\nNearly as one they said, \"Like hell we are.\" \n\n\"Ladies, do you remember rule number one?\" \n\nPatty yelled, \"Here's rule number three. When a woman says something, all rules prior to number three can go fuck themselves.\" \n\n\"Andy will you come up here please.\" \n\n\"Yes Paul.\" \n\n\"The Colonel wants all the women downstairs. The women seem reluctant to do so. Would you instruct them on the means of getting downstairs please? You can start with Mrs. Valentino\" \n\nPatty's eyes opened wide, as the mountain that is Andy closed in on her. \n\n\"Andy, I'll go peacefully. I'll walk, and I'll cause no trouble.\" \n\n\"I'm sorry Mrs. Valentino. The time for you going peacefully has passed. You should have done it, when Paul first asked you to go.\" \n\nWith no effort at all, he lifted all of 5' 1\" 105 lbs. of Patty Valentino off her chair, and threw her over his shoulder. \n\nShe began screaming. \"Stephano help me. Make this big lug put me down.\" \n\n\"Patty, how many bruises do I wind up with, when you hit me? Can you imagine how many bruises I would wind up, if Andy hit me? Go peacefully, I'll see you whenever he releases you.\" \n\n\"I'm going to beat the crap out of you, when I am released.\" \n\n\"Rather you then him.\" \n\nAs Andy was passing Gwen, he gave her a stern look. She stood up and began walking towards the stairwell that would bring her down to the safe room. \n\nPaul looked around the living room. \"Do any of you have any other questions about going to the safe room peacefully?\" \n\nJemma stood up, and looked at Lucius with flames firing out of her eyes. \"I'm going to tell William about this.\" \n\n\"May I quote you Jemma?\" \n\n\"Certainly.\" \n\n\"Who is William?\" \n\n\"You no good dirty bastard.\" \n\n\"I would still marry you in a minute Jemma.\" \n\n\"I have moved you down one slot. You're now down to a 'Maybe!' One more insult like this and you will be an also-ran.\" \n\n\"As long as I get you back to William, as beautiful as you are, I'll accept an also-ran.\" \n\n\"Flattery will get you everywhere with me, and you know it.\" \n\n\"Downstairs Jemma, now.\" \n\n\"Yes Colonel.\" \n\n********************** \n\n\"Hello William, this is Lucius. We are up against idiots here. The main force will be the real test, in South Carolina. All they wanted to do was split us up, and they have been successful, again. I am in the wrong place at the right time.\" \n\n\"What do you mean Lucius, what is going on up there?\" \n\n\"One of our new soldiers, a Sergeant Harry Chase came up with an idea. We bought a Quadracopter, and flew it directly over their encampment, and their vehicle staging area. They didn't realize we were taking pictures of it, because they thought a little girl was flying it just for pleasure. The pictures that came back told us exactly what we needed to know. They aren't soldiers, they are fools. They are going to come at us using dump trucks, and other commercial vehicles. It might have worked in the short run, but eventually, we would've killed them all. Now that we know what were up against, it won't be a fair fight. \n\nJust so you are aware of it, Patricia and Stephano showed up this afternoon. I wanted to kill her, but her reasoning was the same as mine. I still wanted to kill her for being here, and putting herself in danger, when your darling wife stuck her foot so far down my throat I couldn't talk. How did you wind up marrying such a strong woman, William? She put me in my place so easily, it was like you did it yourself.\" \n\n\"When have I ever had the gumption to put you in your place, Lucius?\" \n\n\"I can think of about 1000 times, and in all of them you wound up being correct. We are friends, and we always will be. I had to have Andy put Patricia in the holding cell downstairs for her own protection. She would not go of her own free will, so Andy had to convince her it was in her own best interest to do so.\" \n\n\"Who is Andy, I've never met him?\" \n\n\"Andy is 7'1\" tall, and weighs 360 pounds or more. He has about 8% body fat, and moves with the grace of a ballet dancer. I call him 'The Mountain That Moves.' He is gentle, and kind, until you put him in battle, then he is as mean as a grizzly bear.\" \n\n\"He must be some sight, Lucius.\" \n\n\"When he went to pick up Patty, her eyes nearly popped out of her head. She begged him to let her walk downstairs. He wouldn't let her, because she acted up in front of the others, and he wanted to give them an object lesson. He looked around and the rest of them went peacefully. He's a great guy, William.\" \n\n\"What do you want me to do about South Carolina?\" \n\n\"If it happens the way I think it will, they should go on full alert at midnight, and expect an attack at their strongest points by 2 AM. It will not be there main attack. It will be just as the boys predicted. They will come in by the main road, with everything they have. Turn off all the lights for the entryway into the Good Luck 2. Build a berm in front of it, 6 to 8 feet tall, tapering down on both sides, with \"Bear Pits' 15 feet in front of it. Put bright lights as a false entry 20 to 30 yards on either side of the berm with Bear Pits in front of them. It will be just as the English did in World War II. They fooled the Germans into thinking that the Suez Canal was 15 miles further east than it actually was, and managed to kept the canal open, during all of World War II.\" \n\n\"I will pass that along Lucius. If my daughter causes any more problems, give her the telephone, and I will speak to her.\" \n\n\"I don't think she'll cause any more problems, William. Andy will be standing by the door, and Stephano doesn't want any part of him.\" \n\n\"My son-in-law is a very smart man. Why he married my daughter is beyond me.\" \n\n\"Why did you marry a woman, with an accent that could cut through lead?\" \n\n\"Thank you very much for that memory Lucius. I will shoot you when I see you.\" \n\n\"As long as we are both alive when this is over, I'll look forward to it William.\" \n\n\"Goodbye my friend.\" \n\n\"I will see you in two days William.\" \n\n**************** \n\n\"Sabrina call Rita. Tell her I want her and Paul to take the helicopter anyplace but here. I want them at least 10 miles away from ground a zero. We will call them, when it is time to return.\" \n\n\"I'll call them, as soon as I see you lying down in bed.\" \n\n\"I still have work to do.\" \n\n\"Shadow.\" \n\n\"At your service ma'am.\" \n\n\"Would you escort the Colonel to one of the bedrooms and make sure he's lying down with his shoes off and his uniform neatly lying down on a chair. Post a guard outside his door. He's not allowed out of that room until 1 AM. Is that clear?\" \n\n\"Yes ma'am, very clear.\" \n\n\"Sir, we can do this the easy way, we can do this the hard way, or we can do this my way. Is totally up to you.\" \n\n\"Anyway I look at this I'm going to lose. Sabrina when did you become a General Officer?\" \n\n\"When you started loving my sandwiches.\" \n\n\"It figures. The way to a man's heart is through his stomach. The oldest adage ever recorded by George Washington was, 'An army marches on its stomach.' Let's go Zachary, find me an empty bedroom, and I'll go to sleep.\" \n\n\"This way sir. I have your bed turned down.\" \n\n\"Is there anything you don't know about in advance Paul?\" \n\n\"I told you dad, when it comes to you I know everything.\" \n\n\"What did you just call me?\" \n\n\"You are the only father I have ever known. My mother didn't know who my father was, so I just called you dad. If you don't like it will call you sir.\" \n\n\"Only in private Paul, I'd be proud to call you my son.\" \n\n\"Thank you, sir. Go to sleep, and that is an order, dad. We need you rested when the time comes.\" \n\n\"I'll be where I always was Paul, out front.\" \n\n********************* \n\n\"I remember that William. The guy who managed to pull that off was a magician. Not an architect or an engineer or someone special, he was an ordinary, British stage magician. It wasn't until after the war that he received 'The Knight's Cross' for saving the canal. It was a marvelous idea on his part. All he used were smoke pots, cardboard cut-outs, a few lights, and dynamite to make the Luftwaffe think they made a hit on the ships transiting the canal.\" \n\n\"Lucius says it's going to happen tonight. Can you do all of it in the few hours that you have?\" \n\n\"I have the engineers, I have the manpower, I have the equipment, and I have the will to do it. It will be done William, I guarantee it. It's a marvelous idea. I'll get everyone together in a few moments, and lay out the plan.\" \n\n\"Make sure the boys are included. I don't want them to feel slighted.\" \n\n\"Okay, I'll take care of it.\" \n\n\"Good luck General, you have the hard part.\" \n\n\"We knew that from the beginning William. We are ready.\" \n\n******************* \n\n\"Vinny, we are getting calls from all of them. They don't want to go to court to solve this case. They are offering us more money than we were asking for to drop the civil suit. Elizabeth is going to be a billionaire when this is over.\" \n\n\"What the hell happened Rod, what change their minds?\" \n\n\"I'm really not sure, but I'll bet you it had to do with those three guys in Switzerland. When their names hit the press, these corporations had to scramble to cover their asses. The government is going to start looking at contracts all the way back to the inception of this rocket. People are going to jail over this, and the trials are not going to be pretty. Elizabeth may be testifying for the government, for more than ten years.\" \n\n\"Five will get you 10 people start to disappear.\" \n\n\"What do you mean Vinny?\" \n\n\"Anything with numbers as large as this has to have some connections through the mob. I know it personally, because my family is involved. You know I'm not, but I grew up surrounded by it. I know how they work. \n\nIf a plumbing fitting is going into the rocket and it cost $10.00; $1.00 goes to the mob. It may not sound like a lot, but those dollars add up. \n\nIf it's concrete, and it's a million-dollar contract, one hundred thousand dollars goes to the mob. No concrete contract is not mob connected. Why do you think the unions are against shipping jobs overseas? The more jobs they lose here; the less union dues they collect. The less union dues they collect, the less contracts they have to fill, the less trucks they use. It works up and down the line. They lose money, not just a little bit, but billions of dollars a year. It does not make them happy. They are out of the killing business. They are in the business of business now. It is much more profitable, and they stay out of the headlines. That's the way they like it.\" \n\n\"Now all the companies we are suing in a minor case of an employee being dismissed unfairly, are going to be in the headlines for months, maybe years. They are going to want to keep this settlement under wraps, because if it gets to other employers, involved with this rocket, they are going to shit their pants. The heads of these companies are the people who made the deals with the mobs' lawyers. The mob cannot let this go public, so some people are going on an extended vacation.\" \n\n\"How extended?\" \n\n\"Permanent, forever and always, Rod.\" \n\n\"Oh well, we might as well call Elizabeth in for conference.\" \n\n\"What do you mean call her in for conference, she's downstairs typing on your computer making $98 an hour plus benefits.\" \n\n\"I'm going to fire her.\" \n\n\"Do you want to become part of this disaster? Why are you going to fire her?\" \n\n\"Because in a couple of months she's going to be richer than I am.\" \n\n\"Don't be an ass, we get 30% of what she gets, because we are not going to court.\" \n\n\"What are you going to do with your money?\" \n\n\"I'm going to rebuild my block in Brooklyn just the way it used to be. I love those people, I love that area, and if God wills I will die there. How about you?\" \n\n\"We have to stay with the boys until they are 21, but after that I want to move back to Idaho Springs. I have a lovely home there, and I want to be close to Even. Intellectually, I know he is not there, but I miss that bastard every day.\" \n\n\"That's very understandable, Rod. You two bastards, and bastards belong together.\" \n\n\"Thanks Vinny, I really needed that.\" \n\n\"Elizabeth, would you come up here for a minute please?\" \n\n\"Yes Mister Caruso, how can I help you?\" \n\n\"Elizabeth, exactly how rich do you want to be?\" \n\n\"They're willing to settle after all this time?\" \n\n\"They're not only willing to settle; they are begging us to settle. They are offering us more money than we were demanding.\" \n\n\"Who made the initial offer?\" \n\n\"Your old company.\" \n\n\"Squeeze them dry. I don't care if they go bankrupt. I want my pound of flesh.\" \n\n\"I won't do that. The other employees will suffer, and they have families to support. They didn't hurt you. I will make demands that will get rid of the top brass, and the people in your department that screwed you, but I will not put them out of business.\" \n\n\"Why do I have to have lawyers with consciences?\" \n\n\"Because these two lawyers are going to make you a billionaire.\" \n\n\"Say that word again?\" \n\n\"Billionaire, the word begins with a B. We have 11 companies on the hook, and they are willing to settle, starting with 8 figures, and above. Your company is offering $250 million to settle this. I believe we should take it. The other companies will fall in line behind them.\" \n\n\"My thoughts go along with your thoughts.\" \n\n\"I'll call them, and give the 90 days to pay. I'll also give them the other instructions in reference to their hierarchy, and your department. You can go downstairs now continue typing, for $98 an hour plus benefits.\" \n\n\"Thank you Mister Caruso, I will do that. Thank you Mister Laver for taking my case. I never thought anyone would help me.\" \n\n\"Elizabeth, you never met anyone like Delicious Luck Thyme before in your life. You probably never will in your life. She had a way of convincing people to do things that you could not, and would not say no to. You were very lucky to meet her at a time when you needed to meet her.\" \n\n\"I was nasty to her that day; I even lied to her. I don't know why she took me aside and help me.\" \n\n\"I won't bore you with the details, but she had a horrible childhood, and as she grew up and met people that truly loved her, she was able to love other people. One of them was you, and you benefited from it.\" \n\n\"I hope she's happy wherever she is.\" \n\nRod laughed. \"I can guarantee you, Delicious is causing havoc wherever she is.\" \n\n******************** \n\n45. Atwater Luck \n\nEveryone was in the auditorium, or watching what was happening on the televisions close to their stations, as the discussions were going on whether to land, or continuing to orbit the planet indefinitely, while another search of the ship went on.  \n\nMonty said, \"Under normal circumstances, a vote of 50% plus one would be enough for me to make a decision of such great magnitude. However, this time I am taking the lives of everyone on this ship into my hands. I am changing that rule under provisions granted to me as Senior Captain. A vote of 66% of the voting membership will be needed for me to commit this spacecraft to land on Atwater Luck or not. \n\nWe all know the risks, and the rewards. Whether we land here, or in some far off planet, they are the same. We have been in orbit for seven days. The ship has been searched from top to bottom by all of us, and we cannot find anything resembling an explosive device. Landing Gear number 3 has been searched by every engineer, and technician on board and it has come up clean. \n\nWe will do this vote in two ways to verify its outcome. We will first do it electronically, and then by paper ballot. We now have 73 voting members. Gordon Luck will not be voting due to illness. I wish you all to take a moment to reflect on your choice, and when you have made your decision, press your button, and your vote will show up on the board. Please begin.\" \n\nGordon was not among those voting. He was in the infirmary suffering from severe debilitating headaches, and was sedated. \n\nSandy and Doctor Joe Finch were looking through the computer files, for answers on Gordon's headaches. They were coming up empty. \n\nGordon had been sitting in the Captain's chair, while they were in orbit. Suddenly, he grabbed his head, and fell to the floor, screaming in pain. \n\nGray didn't wait for the doctors to come to see what was happening to him. He picked Gordon up, ran to the elevator, and brought him down to the infirmary. \n\nGordon could not open his eyes, because of the lights; so they put blinders on him. They ran a CAT scan, and the results were negative. There were no tumors, or broken blood vessels. His brain was not pressing against his skull, and his brain stem was not enlarged. Everything seemed normal. They checked his spine using an MRI, and again everything came back normal. \n\nDoctor Finch was at his wits end trying to figure out what was going on. With no other option available to him, they sedated Gordon, to give him a respite from his pain. \n\nHis body fought the pain medication, so vehemently, they had to give him triple the dosage to finally put him at rest. \n\nZoey asked, \"What is wrong with him? I've never seen him like this. He's never had a headache before. Could it be his exposure to the radiation when he's outside the ship?\" \n\n\"Oh Zoey, how smart you are. I never thought about that. Jodi get me the Geiger counter.\" \n\nAs Finch ran the Geiger counter from Gordon's head to his toes. It registered normal for a person living on Earth. This was abnormal for everyone on the ship. It should have read slightly higher, because everyone had been exposed to slightly higher radiation levels that penetrated the water, while they were in space. Why was he immune to it? \n\n\"Zoey come here please.\" \n\nFinch ran the Geiger counter over Zoey, and she registered slightly higher levels of radiation, just as everyone on the ship should. \n\nHe did the same to Sandy, and she came out slightly higher also. \n\nWhat was going on inside Gordon's body that his radiation level was dropping? \n\n\"Zoey, you are normal for us. Would you do me a favor and bring Payne down here.\" \n\n\"What's going on doc? What's wrong with my husband?\" \n\n\"I don't know, but his radiation levels are lower than everyone else on the ship, when they should be higher, because of his times outside. Everyone knows he's crazy, but his body should be just like ours.\" \n\n\"What does that have to do with Payne?\" \n\n\"Probably nothing, but I just want to check.\" \n\n\"Okay, I'll bring her down.\" \n\nA few moments later, Zoey and Payne appeared in the infirmary. \n\n\"Look at the size of her, and she's only 3 \u00bd months old.\" \n\n\"That's true, and if Gordon would leave the other breast alone, while she's feeding, she would be chubbier that she is.\" \n\n\"Well, let me test her, and see what's happening.\" \n\nDoctor Finch ran the Geiger counter over the little cherub, and shook his head. \n\n\"We are going to have to test all the other babies. She has the same radioactive signature as any baby who was born on Earth. If I wrote a paper on this, I would get the Nobel Prize.\" "
    ],
    "authorname": "Prolonged_Debut10",
    "tags": [
        "home",
        "conflict",
        "old enemies",
        "tied up"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/dark-as-daylight-ch-11"
}