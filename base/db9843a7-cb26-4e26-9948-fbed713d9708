{
    "title": "A Big Shiny Blue Marble Ch. 32",
    "pages": [
        "***There was a reason why Xunafae ran so far all alone. \n\nIt came to me as I wrote the lead-up to this chapter that a girl like Cha'Khah ought to come with a warning sticker with just one rule.\n\nNever, ever piss her off.\n\n0_o\n\n--------------\n\nBook of the Mountain Clan Part 9\n\nVadren stood watching the little scene for a moment longer and then he wandered away a little in thought. Of them all, he was the only one who knew much of anything of the background here and it troubled him a little.\n\nXunafae had been no ordinary girl. He remembered her features, and while she'd been no great beauty, she was a pretty thing. He brushed the pleasant memory aside to think on what he felt a little more. As wild elves go, Xunafae had been a bit of a slightly spoiled good-time girl whose exploits had brought her a bit of trouble occasionally. That in itself was nothing really out of the ordinary. \n\nSo what if a girl sought a little pleasure for herself now and then? It was where she'd been placed in the hierarchy of her family that was the trouble, to his mind.\n\nOne might say that it had been quite a feat to have come this far, seeking the Drow mage in the hopes of making a life for herself if he'd accepted her and agreed to take her and the daughter which must have been born to her along the way, but he knew Xunafae well enough.\n\nShe'd come running here in desperation, certainly, using her sense of him to guide her. The Wild Ones were famous for it. But the distance, he thought, the distance was the thing here. She could have found someone to stand for her with a little luck. She had the looks for it. This sort of thing happened every day in a thousand places; a girl who found herself in a bit of need and deciding to look for a male to settle down with.\n\nBut she hadn't walked into a manor or an inn, swiveling her pretty hips, and casting those eyes of hers around. That would have been easy enough for her to manage. She'd come hundreds of leagues, seeking Vadren and no other.\n\nHe wasn't stupid. There was a reason for that, and he doubted that it had anything much to do with the way that he could make her gasp out his name in the darkness.\n\nXunafae had been driven here in her fear for some reason, and she must have wanted his ability to protect her from someone or something, if she'd run this far.\n\nHe knew that he'd likely have helped her and done what she'd needed, accepting her offer of herself. He also knew that it would have been about the worst thing that he could possibly do to himself.\n\nBut again, that wasn't the issue now. Xunafae was dead. What about whatever it was that had driven her? What was it that she'd feared so much? Enough to have done something like this?\n\nVadren walked down the long corridor to open the outer gates and stand just inside the portal overhang. He looked out and in a minute, he wasn't seeing anything nearby \u2013 he was seeing much of the lands around, nowhere and everywhere at once.\n\nTwo minutes later, he'd closed those doors again and was running back to warn the others.\n\n------------------------------\n\nThe afternoon light was fading as she wandered over the forested mountainside, staying very near to a trail. Something was very wrong.\n\nIt made her smirk to herself a little bitterly. When in the past year had anything gone right for her? She thought farther back than that and decided not to think about it too much. \n\nBorn the daughter of a woman who could still trace her lineage far back to the other side of the fall of mankind; all the way back past the oppressive days of Communism \u2013 beyond the bloody days of the Bolsheviks and into the even darker past of some of the lesser Russian nobility in the Middle Ages, Ksyusha was an anomaly if there ever was one. \n\nHer mother was a rare beauty and she was both wise and powerful in her craft. Not the crafts of healing and midwifery, which she'd always made her living at, oh no; Ksyusha's mother stemmed from an unbroken and easily traceable line of witches, sorcerers and others of that ilk. At the age of twenty, Ksyusha's mother had decided that it was time for her kind to step out of the shadows and dark corners to get away from the deals and conjurings made only in the darkest of basement and at the backs of old barns to take what she saw as their rightful place in the world.\n\nWith the thought in her mind, she'd begun to look to see what sort of being there was for her to pair with. She sought a mate for herself \u2013 not in any immediate sense, but for the long term. She wanted to find a male out of antiquity if need be, someone who could appreciate her and what she had to offer in exchange for more power and protection for her as they rose together.\n\nShe scoured all the old texts and any of the surviving scrolls which there still were in the possession of any of her relatives. She made a very long and careful list and then began to pare it down. What she was left with was a choice of two, but that turned into only one when it was time to find the invocation by which to summon the one \u2013 if he still lived somewhere.\n\nThe one that she decided on was known to as many as seven of the ancient civilizations. They all had different names for the one, but it was clear to a properly-trained student of the history of the dark arts who was being referred to in every single one of the translations which she'd either purchased or worked out for herself. She was after one who was as a god to some and a demon to others, one who had never taken a bride in any of the accounts that she'd found. She hoped that he still lived and that by proving to him that he was still wanted, well, ... it is one of the oldest sorts of witches' tales.\n\nOn the night which she'd chosen for this, she prepared everything and began her summoning. She was very clear in the wording of it, that if he chose to manifest himself, it was not by her will or command, it was by her desire to seek his love and begin what should have happened for him long before with one who could appreciate him.\n\nAs it happened, and as in more than a few of these things, the personality in question had not been what he'd been seen as at all. Where the fearful and superstitious humans had heaped all manner of titles on someone not of their plane, they'd been mistaken - completely and utterly incorrect in their assumptions.\n\nHe still lived, but not here. \n\nHe'd been here for a time long ago, but not as a god or a deity. That was the reaction of the local populace. They'd seen him work some of his power and taken it to be the sign that he was a god, when really, he'd been a traveler and nothing more. Their prayers to him had gone unanswered because he'd been more interested in repairing his means to get home than pay attention to the rag-covered creatures around him who often got in his way without meaning to or knowing any better to test his patience. \n\nThat had gone on until one of them had broken something rather important to him and he'd fried that one where he stood as a warning to the rest.\n\nThey'd called him a god to be feared and worshiped after that.\n\nHe thought they were idiots and he was gone as fast as he could effect the repairs that were needed.\n\nBut on the night that Ksyusha's mother had begun to call him to her, he heard it in his mind and sent questioning feelings to the one who called.\n\nKsyusha's mother answered truthfully, and he replied that he was on his way, wanting to meet the one who called him and hoping that the fools what he'd known had finally grown brains.\n\nIt took him half a year to come because of the distance and when he arrived, the house blew down along with most of the village. The most beautiful woman for miles around waited in the face of that terrible wind, and as he came, she was surprised to find that she was no longer in that village. She was moving at incredible speed and she looked up from the broad chest which she suddenly found herself against, and he looked down at her.\n\nTheir romance was very short, and they consummated it minutes after he'd brought her to his craft. The rest was a very long and still-spinning love story and in that sense, it was still very much a romance.\n\nBut it hadn't worked out the way that Ksyusha'a mother had planned it. She found herself on a very different plane of existence altogether. It wasn't bad at all, once she'd gotten used to it, and they lived in happiness there, but she'd wanted for this to happen where she was from, not where they'd gone to live. \n\nBut she knew the way that this worked; she'd called, he'd answered and that was that. She wasn't stupid; he was wonderful to her, so she'd settled.\n\nKsyusha was the only product of their love. She had a lot of her father's features and abilities \u2013 even a few of his physical traits, all wrapped up in a lovely package similar to her mother in stature. But there were differences \u2013 enough to make living among ignorant and superstitious humans an impossibility. \n\nKsyusha was something known as plane-touched, the product of a spawning between a human and one from another plane. It happened sometimes, and what was passed to the offspring depended on the parents. \n\nIn Ksyusha's case, her father came from somewhere that the Merren and the Xer had never heard of, just as she knew nothing of them.\n\nHer outward appearance was similar to her father's in her coloring. She wore dusky skin which leaned toward being dark with soft thin lips the color of dull, but almost golden dusty sand.\n\nAnd though it was nice to touch and good to look at if one had the eyes to appreciate her unusual type of beauty, her long hair was just the perfect color of dirt which matched her skin, since it carried no highlights. She often wore it as a long braid with a few beads woven into it to offset the dullness of it. Her eyes were red \u2013 deep red, and they were always that way, holding little flecks of orange in their irises which moved subtly so that if one looked into those eyes for long enough, they'd begin to get the impression that there was a slowly burning bonfire behind her pretty face.\n\nBut most would never see those highlights. They were put off by a few of her other features. The demon patterns on her skin \u2013 birthmarks which came from her father were mostly hidden under her scalp, but some could be seen just below her hairline on the sides of her head and down the sides of her neck if her hair was tied back. \n\nEven if her hair wasn't tied back, the marks were there just below her hairline on her forehead as well \u2013 and right below those two small, thin, and rather sharp horns which protruded from her hair above the corners of her forehead . \n\nKsyusha was actually quite beautiful, but few if any ever got close enough to really appreciate it.\n\nShe didn't know it, but she had a really nice smile until it widened enough to allow her sharp teeth to show. Back home, she was an uncommon beauty.\n\nHere well, ...\n\nWhere her father was from, and where she'd grown up, it was the custom to add markings to the skin of young ones who had proven themselves as they came of age. Ksyusha had been on her spirit journey, and she'd found a band of twenty-eight marauders in the blazing hot wastes of her homeworld abusing a young female spark demon and there was only one ending to how it was to have gone. When they'd tired of tormenting her they would have sated another type of hunger, cooking their meal while the victim still lived. \n\nKsyusha saw their shamaness in a moment and laid her low after a quick exchange of attacks. Then she'd waded in and after cutting the bonds which held the spark demon, they dealt with all the rest of them together. \n\nThe markings hadn't been her personal choice, since that was the father's right, traditionally, but Ksyusha had long ago gotten used to the long and thin pale silver fangs which she wore from her forehead to her cheeks that ran down right over her closed eyelids as they went. They were always there, but how plainly they showed on her face depended in large part on her mood at the moment. If she was asleep, or feeling subdued, they were almost not to be seen at all, but when she was roused, well, they almost glowed in their intensity.\n\nDuring her childhood, she'd learned several languages from her mother as well as the demonic speech of her father's tribe. English was in there somewhere mostly from her mother, but since there were no other English-speaking persons to use as her models, Ksyusha's English carried both the accent of her father and the soft, but definite presence of her mother's Russian accent in hers.\n\nMost humans wouldn't come near her on a bet, and that was at first sight.\n\nIt wouldn't have ever become an issue but for her mother's reminiscences of her home world; the way that it looked and smelled so nicely \u2013 outside of the towns and cities, of course.\n\nThat was the way that Ksyusha put it down as. She'd never explain the true reason - though her father might have sympathized. He'd always been a romantic. Ksyusha had shared dreams with the spark demon - which was not supposed to be possible. Their vividness were the true impetus.\n\nIt took a few years, but eventually Ksyusha decided that she wanted to go there, and with her father's help, once she'd demonstrated her prowess at the sort of magic that her father's kind had always relied on and then gone on to choose her specialty, she found herself here. \n\nIt was not without a cost to her. There had been a young male who she loved enough to sleep with often enough, but though he'd said that he wanted to go with her, when the moment came to leave, he'd balked and decided to remain. \n\nKsyusha had shown no emotion. She'd only wished him luck as she'd hugged her parents and boarded.\n\nThe male didn't catch her turn of phrase, but that was alright, she'd thought. She'd settled in for the long trip, and knew that she had six months to get over the way that she felt. She wasn't completely alone; she had Nika, the spark demon whom she'd befriended.\n\nHer ex-boyfriend hadn't known it at the time, but he had less than ten minutes to live \u2013 judging by what Ksyusha saw in her father's eyes.\n\nKsyusha was a tiefling, first and foremost. She knew that she was different, and she knew that most people looked at her with fear and mistrust. Her defense mechanism for that was to laugh. She was much more than that. Among her people she was widely known as a rather young and powerful warlock, proficient and deadly in her ability.\n\nBut once she'd arrived and hidden the craft which had brought her here, she'd found that she loved the world that she was now on. But by their actions in most of her interactions with them, she wasn't all that fussy about the inhabitants.\n\nIt had been only the start of her troubles.\n\nFinding herself seeming to be unable to make any friends here- or even a single person who even wanted to know her a little, she'd turned away then and gone to a dark tower, all that remained of the fortress of a once-mighty king who had lived the same arts as she now did. He caused some trouble in the area now and then, and on meeting the red-eyed beauty, he thought that his dreams had come true until, with the introductions made, she'd taken all of his power and dissolved the last of his mean little spirit. Everyone for leagues around rejoiced.\n\nBut they still wouldn't come near her.\n\nKsyusha didn't care. She summoned his confused followers and set them to work, cleaning the place out before she set all of the spirits of the condemned free and lived there quietly, gathering old tomes to study. That had ended roughly a year ago now.\n\nAll day, she'd been following the trail of the one that she'd been coerced to track. She knew that she couldn't be more than a day behind her quarry, and likely, she was a lot closer than that. As she'd followed, she'd come to ridges which gave her the occasional overview of the land. She knew roughly where she was and where she was headed, though she'd never been this far west herself \u2013 until now, she'd never had the need.\n\nShe cursed these heavily-wooded mountains a little for the way that they never allowed one to travel in a straight line on the ground. And if you were tracking, then on the ground was where you were, though that was a poor name for the way that she had to follow the one that she sought. \n\nHer quarry seldom if ever left any tracks which were visible, but that meant little to Ksyusha. She followed the fading presence of the one that she hunted. She needed no tracks. \n\nAt the same time, the nature of the terrain gave her more time to think of her own problem and how to be rid of it, not that she'd thought of any solution thus far. She only knew that once she'd found the one that she was looking for, her real trouble would begin. \n\nKsyusha had been within sight of her quarry several times. Each time, she'd been unobserved and she'd turned away then to give the one she hunted time to escape. There was no joy for her in a hunt like this. She felt for the girl, and to catch her would only end this part of her troubles unless she had a solution in hand \u2013 and she didn't.\n\nShe was supposed to drop a marker for her employer to find near to the end of each day. Sometimes that brought him to her and it was never a pleasant meeting. As far as elves go, the one who used her for his own ends was an ogre, a cruel wild elf king who had murdered his father to claim the right to lead. He was hunting his own sister to assure that there would never be any challenges to his questionable right. He usually only threatened Ksyusha to make more progress, but sometimes it was all that she could do to defend herself.\n\nShe could summon allies which would cause the bravest man to tremble. She could steal someone's life force from them to leave them an inch away from death, and she could rip a warrior's flesh and muscle away to have him serve her as one of the walking dead, but as long as the cruel king held the single shred of her soul away from her, she was very limited in what she could do. \n\nHe held a piece of her life in an enchanted amulet around his neck. As long as it was in his possession, she would never be free, and at some point, she'd become his half-dead slave. More and more, she was toying with ideas of ways to end her own life.\n\nOften, the bastard couldn't be bothered to come at all, and those nights were the best for her. If she'd found something important or significant, She was supposed to drop a different kind of marker, one which would bring him to her very quickly.\n\nSometimes, if she'd made only some difficult progress over very hard terrain and had found nothing but more trail to follow, she didn't drop a marker at all. That usually got her a lot more abuse, but sometimes it was worth it to her.\n\nJust like the one that she hunted so half-heartedly, she'd never felt so alone in her life. She had only Nika, and even then, they couldn't often spend a lot of time together since one never knew when her captor might arrive and she was determined that, no matter what Nika said, he wouldn't have two prizes to abuse.\n\nAt one point, hours ago, she'd seen smoke in the distance and wondered about it, but then it was to the north of her and she was headed west at the time. Now she was growing concerned, since her quarry had found her way out of one valley and had turned north. She'd sent Nika ahead to see and when the little demon had come back to her as fast as she could fly, keening out her distressed calls, Ksyusha had picked up her pace then.\n\nBut when she'd seen the tracks of a pack of dogs converging with signs of the fugitive's passing, Ksyusha began to run, cursing herself out loud for allowing this much space between them. She was very weak in terms of her natural ability, but if she'd known of this, she'd have stepped in and killed the dogs herself and let the chips fall where they may afterward since there was a child involved. ",
        "She felt her hot tears to think of an ending like this.\n\nIt was nearly dark when she stood at the place where Xunafae had made her desperate stand. The corpses of wild dogs lay everywhere, but there was no sign of the fugitive princess, only something which told the warlock that she wouldn't be dropping a marker that night \u2013 not until she had some answers to her own questions beforehand. She sent Nika to see what else there might be to know of this. In the fading light, Nika ranged in widening circles, straining to see through the darkening forest from above.\n\nKsyusha needed to know what had happened here. It was obvious that the princess had died, but how did a fugitive running for her life manage to kill the pack which had been at her heels for a good distance and then end up as the tiny bits of windblown ash which floated around her in this little clearing? Why? The dogs were dead, the threat to her removed.\n\nShe looked at the snow and decided that not all of the blood had come from the animals. There were entrails here which had plainly not come from any of the canines. The way that the blood had spread told her that Xunafae had been dying. How had she killed the animals when there were no weapons left behind? The wounds on most of the dogs indicated that bladed weapons had been used. That was fine, she thought, but knives don't turn to ash, so where had they walked off to, now that they were unemployed?\n\nKsyusha had to ask these questions, because she knew that they would be asked of her. As well, doing the investigative work allowed her to take her mind away from the obvious. The reason that she'd been hunting now was no more. The hunt was over, unless she could prove otherwise and then what? What would the tyrant prick have her do for him then?\n\nThere wasn't enough light for even her eyes to see the many tiny details which she knew had to be here. Frustrated, she threw out her hands and a brilliant ball of Witchfire blazed above her so that she could see. It hung there low in the air, floating along wherever she went as she looked. \n\nKsyusha was getting a clue here. Xunafae had not been alone when she'd died. There had been another here, by the slight marks in the snow, invisible to any but one of the Elder races, and a good tracker at that, to be able to piece together a little story such as this. For her to see them was as nothing.\n\nThere had been someone else here at the time, and by what she saw, it could only have been an elf. Ksyusha began to run down the list of them all, trying to determine what sort it might have been. All that she could come up with were a few of the lower kinds who might be out here working at menial jobs in the towns, as stablehands and assistants to the cooks and waiters. Some of the High Elves passed through once in a while, but they were on their way to leave, not hang around.\n\nShe walked forward looking at where the trail led off to. There had been someone else here and they'd gone in this direction, she thought as her ball of Witchfire nodded along before her until it stopped, and she almost walked into it. \n\nJust at lower edge of the brilliantly lit blaze, she saw a pair of boots, and it reminded her that there was one sort which she'd left out of her list. The one kind which weren't here, as far as anyone knew. The one sort who wouldn't have been here anyway, even if they were in the area, since this had happened during the daytime, and that sort only came out on the surface at night.\n\nWhich, she noted, it was now - almost. She'd never met one of that kind.\n\nShe looked up just as the Witchfire was knocked aside and flickered crazily from the snow where it had landed. In that thin sliver of time, she saw the Drow who had been watching her with his red eyes while she'd been too preoccupied to sense his presence. \n\nHe was tall and large for one of the Elder races, she noted. Most elves were shorter than she was, but not this one. As she raised her hand to erect the defensive circle around her, he stepped inside of it with what looked to Ksyusha to be a really handsome smile. \n\nBefore she could react, he blew a gentle puff of air in her face and she fell into darkness.\n\nWhen Nika returned to tell that she could find nothing, she saw only the Witchfire, sputtering faintly and going out.\n\nFinding the trail of the Drow wasn't a hard thing to do for her, once she saw a little movement far ahead as he carried Ksyusha across a clearing near the mountain, but though she raced to follow, she was too late as he entered and closed the doors behind him. \n\nNika flew around the entire mountain for hours, seeking a way to follow.\n\n--------------------------\n\nCha'Khah stood on the one of the maintenance balconies, holding her new daughter and thanking her goddess before asking for her help and guidance so that she could become the mother that the little one needed so much.\n\nThe day had been an incredible one for her and she now honestly couldn't decide whether to laugh or cry her joyous tears, though she was always mindful of the terrible way that this gift had come to her and the price that Xunafae had paid. She kept this foremost in her mind and asked that the Wild Elf be welcomed wherever she was to go in her whatever afterlife there was for her. \n\nShe'd been busy all day and hadn't seen her cousin in hours, so she hadn't heard his warning. No one else told her, since they'd all heard that Vadren had captured the threat that he'd detected and no one knew that there was another small detail which had been overlooked. \n\nThat was why Cha'Khah didn't notice the inky blur which came rocketing out of the night sky to pass her by as it shot through the opening of the blast valve into the mountain.\n\nA few minutes later, her observances complete, Cha'Khah went back inside and closed the valve before walking down to see if Barrett had found a suitable bed for Mo-Wenn. She doubted that he would find a crib or anything like that. She didn't mind so much, if they had to sleep together with the little girl between them, then so be it.\n\nWhen she met Barrett, he told her that Vadren had captured the hunter, and Cha'Khah handed Mo-Wenn to him as she walked quickly to where Vadren would be.\n\nShe was unaware of the spot of darkness which followed her high above the lights, watching from above.\n\n---------------------------\n\nWhen Ksyusha awoke, she was naked and suspended in an upright position in the air somehow with her arms and legs out. There were no restraints on her \u2013 she just couldn't move and she could see a little of her hair at the edges of her vision. A quick shake of her head told her that her braid had been undone.\n\nIt also gave her an instant headache.\n\nThe Drow sat at a table, a little far down in a chair with his long legs stretched out before him. He wasn't looking at her. \n\nHe appeared to be lost in thought looking at what she knew was a chess board. She knew it because she'd found a large stone board and carved gamepieces in her tower when she'd taken up residence and she'd wondered about it for a while before she found any information out. She looked around and saw a huge animal, roughly like a dog, sitting on its haunches looking at her through glowing red eyes. She noted that it didn't have to look up all that far, either. The thing was massive.\n\nShe'd never seen anything like this one. Besides its incredible size, the thing looked to be made of some sort of sandstone or something. They looked at each other for a long minute before Ksyusha tried to turn its mind. \n\nThe reaction to her attempt brought an intense shock to her mind as though she'd been hit in the back of the head with a plank. When she'd recovered a little, she looked again. The creature only continued to look at her with the same disinterested expression, though it did blink once.\n\nKsyusha found it a little disconcerting when the creature began to speak to the Drow, all the while never taking its eyes off her.\n\n\"There is no enjoyment to me if you are only going to consider the pieces on the board all evening, \"the creature said to the Drow, \"I have taught you the game. Mastery takes some time, even for one such as you. Look all you like, it is still checkmate. Now concede and we will begin again. \n\nOh, and your captive is awake.\"\n\n\"Has she attempted anything?\" the Drow asked, still preoccupied, and not even looking over.\n\n\"Yes,\" Arrax replied, \"She tried to force my mind to do her bidding so that I would kill you.\"\n\n\"Mmm,\" Vadren said, as though it wasn't really noteworthy, \"Well if she was a little more patient, she'd see that you are accomplishing it very slowly. A few more matches with you and I will cut my own throat.\" Vadren chuckled.\n\nKsyusha was a little surprised to find a Drow speaking English, since it was something that almost never happened for all that she knew of them, the race were widely known to be snobbish \u2013 unless there was gain in it for them, of course.\n\nShe was upset at finding herself like this, and if she could have, she'd have killed him, though she did like the way that he looked and his accent was intriguing and more than a little endearing and quite charmi-. \n\nShe shook her head to get rid of the thought.\n\nWhich made her head throb even worse.\n\n\"Where am I?\" Ksyusha demanded, \"Where are my clothes?\"\n\nThe Drow sighed and spoke without looking at her, \"A little quieter, if you please. I am trying to learn this infuriating game.\"\n\nHe sat up and leaned forward, pushing his very long white hair over his ear. \n\n\"Your clothing was rather dirty and the hems were splashed with mud. You fell into, - well, it might be better not to say it, and so I have washed them carefully. The cloak is dry and hangs behind you, but the other garment is made of a thick and soft velvet and it takes a lot longer to dry unless you wish for a fine thing like that to be damaged. I have also untied and washed your hair.\"\n\n\"Why? \"she asked, not thinking things through uncharacteristically, \"And why aren't you even looking at me? It is rude.\"\n\n\"Fine, I'll tell you then,\" he sighed, turning his head to face her, \"I washed your lovely hair to get the entrails which you landed in out of it. And I did that because I thought that it was only right, since I caused you to fall where you did. It is the same story with your clothing.\n\nI was not looking at you because, while I grant you that it is a little rude to speak to someone and not face them, I thought it would be a lot more rude to speak facing you while you are there wearing nothing. I thought that you deserved some respect and your dignity, but I guess that you see things a little differently.\n\nOh, and I washed you as well,\" he said, \"While it may not get me the answers which I seek, at least my nose will not be offended.\"\n\nKsyusha was furious, but she couldn't summon much in the way of her abilities at the moment and it perplexed her. \"Did you enjoy it?\" she sneered.\n\n\"No,\" he said, looking a little put-out that she'd not at least thank him for it, \"I didn't. \n\nI don't know if you've ever tried to bathe an unconscious person, but it's not easily done. It's even less appealing if they're wearing someone's innards at the time. It was a lot of work to keep you from drowning at my hands while trying not to cause you any more harm. Even harder to do because you're quite lovely, but I need to speak with you, and I had to do it this way. \n\nOne look at you and I knew that you wouldn't just stand there and pass the time of day with me. Most people see me and run. The ones who do not only try to kill me. You were putting up your wall. So this was how it had to be, but you were standing in gore, so that's what you landed in.\n\nIf this all bothers you, or if you feel shame at how you are,\" he said, \"I can cover you with your cloak. I had really wanted to have your clothing dry by now and put back on you. You'd wake up, notice that everything was clean and wonder how I'd done it, but the velvet takes so long.\"\n\nVadren sighed to himself. She didn't deserve the frustration that he felt rising up within himself, but it was there nonetheless. He was still trying to get over losing Cha'Khah \u2013 though he was very happy for her and Barrett \u2013 especially since they now had a little one to raise.\n\nBut try as he might, he was saddened for himself. He thought it was a rather selfish way to feel, and so he kept it hidden, but that didn't make him feel any better. To find that he might have seen Xunafae once more and that the opportunity had been missed by mere minutes only added to how he felt. They might have had something once again or not, but to have her torn apart by a pack of curs while she was so close to safety was hard for him to bear. He found that he'd been looking at the floor as he'd had these thoughts and so he looked up at the rather mysterious and beautiful stranger.\n\n\"Instead, here you are, a little angrier, and here I am, frustrated and annoyed that my efforts don't even merit a half-hearted word of thanks. To say the truth of it, I feel a little tempted to drag you out by the hair and throw you onto a cow flop. Perhaps you'd notice the difference if I began to act in the manner which seems to be expected of me. Doing the right thing buys me nothing.\"\n\n\"I would have expected you to kill me,\" she said in her accented speech, \"and what is cow - ...\"?\n\n\"I'd never do that,\" he said, turning back to the chess board, \"at least not until after I'd thrown you into the cowshit. It's a lot easier dragging a living person by the hair than a dead one.\"\n\n\"That is not what I meant,\" Ksyusha said, \"I meant \u2013 \"\n\n\"I know what you meant,\" he said a little angrily, \"I'm not stupid. You're about to tell me that you would have expected me to kill you out of hand \u2013 for nothing. Why would I do that? More to the point, why is that your expectation of me? You don't know a thing about me, so I must want to murder you on sight. Just tell me whose books you read, so I'll know the name of the idiot author who needs to be killed.\"\n\nHe looked off straight ahead for a moment and realized that Dahlgren had a conversation something like this once with Selena. It made him wonder.\n\nHe turned to her then, \"I found someone stumbling around a place where something which upsets me very much happened. Not that you'd likely care, but I found you captivating in spite of the strong sense that I get from you that your specialty involves playing with some rather dark powers. If it weren't for your skin and your size, I'd almost think that you are a High Elf somehow, still burdened with the main difficulty of being a High Elf, for that is their trouble. They all walk around with a pickle up their assholes and think they're above every other form of life on the planet.\n\nWell they're not and you aren't either, you just can't see straight for all of the shit backed up inside you. It causes you to have these stupid and dangerous prejudices.\" \n\n\"I am not any sort of elf,\" Ksyusha said, \"You are hardly being fair, and you show your own prejudice to me when I am not even what you hate.\"\n\nHe wound down then, \"I know that you're not a High Elf by your skin. You're right and I'm sorry.\" \n\n\"Even so, \" he leaned toward her, \"If I was like what you seem to think, you'd have already told me the things which I have not even asked you yet and a lot more, begging me to keep removing your pretty skin and feeding it to you. And in case you're wondering, \"he glowered at her evilly, \"I know the way to make you want to eat it desperately while I do that.\n\nBut I haven't done that, have I? I thought that I might try to do the unexpected and simply ask you. And before you ask, and I have to hear even more absurd things from you, you're there because I am aware of your abilities. It's because I've already sensed what you would do in your mind. You'd do it before I even asked one thing.\n\nOne of us suffers from prejudices, and the other one is dragged along reluctantly.\"\n\n\"I agree,\" she said, \"though it seems to depend upon which one of us is speaking.\" \n\nHe sighed, \"I should have just left you out there in the shit.\"\n\nHe fell silent then and began to set up the chessboard for another game while Ksyusha considered that he was probably right, even though he was being pig-headed and absurd in what he said to her. She could sense that he was upset and trying not to show it. \n\nIt came to her right after she'd considered that he was really very attractive to her and, other than the shade of his skin, he didn't look anything like the way that Drow were supposed to look, by what she'd been told, never having met one before. \n\n\"What is the matter with my skin?\" she asked quietly.\n\n\"Not a thing,\" he said in a half-sigh to himself, looking at the chessboard again, and trying to resume his puzzling, \"I don't really know what you are, but I am certain that I've never seen someone so captivatingly beautiful.\"\n\n\"Thank you,\" the warlock said quietly, \"for what you did if I was so dirty. It is bad to wake up like this. It would be worse if you were not so kind. Thank you for what you said as well. It was unexpected.\"\n\nHe still managed to keep his gaze on the chessboard.\n\n\"I'm sorry,\" Ksyusha said, \"I was being an ass. It is a bit much to be indignant when you wake up as I just have. I mean, it can be done, you just can't do it for long. Nobody will take you seriously.\"\n\n\"That's what I'd have thought,\" he said, still looking at the board, but she noticed that he was at least smiling a little now, \"and I was being an ass myself. I don't know where my comparison between you and a High Elf came from. It's not like me and it certainly wasn't fair \u2013 as you said quite correctly.\n\nWhat was your purpose in following the one who was killed?\" he asked, \"You couldn't have just stumbled upon the scene \u2013 not the way that you were looking at things in such an \u2013 analytical sort of way.\"\n\n\"Why don't you take off those clothes and come kiss me?\" she smiled. She wondered where the sarcasm had come from, though deep down, she really knew exactly where it had come from. Ksyusha was rather chaotic now and then, and well, he was attractive to her. But the way that this was going told her that he was holding back some of his emotion bordering on being upset, and she really regretted saying what she's said, thinking about it like this, but there it was.\n\nHe shrugged, \"A pleasant thought,\" he smiled back, \"but from what I can tell of you, there is a hint about you of the , ... specialization that you favor, shall we say. A touch from you and I lose while you gain. Worse, it would be an insult to you for me to do it, just as you insult me here with the asking. I find you beautiful. I have no desire to be laughed at by a beautiful female who thinks me stupid.\n\nI have questions. You may try to lie, or you may speak the truth, but do not insult me, not after I have tried to do the right thing by cleaning the filth that you fell into off. I have more pleasant things which I would rather be doing than standing naked in a shower, holding a lovely and unclothed stranger, and cursing under my breath over what I did and how I knew that it would buy only more of your hatred.\" He sighed, \"I knew it even then.\"\n\nKsyusha blinked, \"What you say does not sound too unpleasant.\"\n\n\"No?\" he asked, \"You reeked of offal. Offal which to my mind ought to still be inside of the one who died, so washing it from your body was rather unpleasant, since she was my friend once. The rest? You cannot know how it is to be a male, so leave it at that.\"\n\n\"You will not believe me,\" she said in her soft accent, \"but I do not hate you. I do not think that you are stupid. I am only upset, and sometimes I say my thoughts then. If you prefer, then think that it might have been my wish, though I see even now that you think that I lie when I do not.\"\n\nHe nodded to Arrax who changed before her eyes into a tall and powerful fur-covered beast.",
        "\"The one who died was a friend of mine from far away,\" he began, \"She came here to seek my protection, but her cries were heard too late. With just a little thought, I think that you might see that I am in no mood to be insulted or toyed with, though I can see that you try to be at least a little earnest. You are not the only one here with a little power.\n\nNow, I will find out who she ran from. It might be you, but I have a feeling that you act as an agent here for another. You will either tell me what I wish to know, or my large friend here will lengthen your neck for you.\" He looked down, \"though it would make me sad. But I must know what happened and why.\n\nNow, we begin once again, necromancer, you were hunting Xunafae. Why?\"\n\n\"You have made a few errors,\" she said, looking away at the rest of the room, \"I am not what you think. You would lose nothing if you kissed me. And I know how to work the arts that you speak of. It does not mean that I am what you said, any more than my saying that you are nothing but a poor player of that game. I sense your ability, so I know that the statement would be wrong. I also sense that you are upset, as you have said, but not only for that reason. You feel alone now because you have a want that someone might love you, when you think that no one ever will again. I try to say it softly, but that is the real reason that I see.\"\n\nVadren looked up and his face showed a bit of anger, but that faded and turned into a look which told Ksyusha that she'd been right. She was not cold in her heart, and unless he gave her reason to, she would not mention it again. She liked his face much more when he was only looking annoyed with her.\n\nHe showed her far more than he meant to, and though she had little reason for it, she decided to leave the wound alone.\n\nThe door opened and Selena walked in with a plate of food and some ale for Vadren. \"I can take over for you, Arrax,\" she smiled, \"go and eat.\"\n\nThe large Xer nodded and walked out. Ksyusha saw only a lovely woman for a moment, but then she saw something else as Selena changed and sat down, \"I can do this for you,\" she smiled, \"a lot neater, too. If she says one thing that's a lie, I'll show her what I'll do to her, and I won't even have to touch her to do it.\"\n\nShe looked at the way that Ksyusha was being held immobile and naked in the air for a minute. Intrigued, she rose and walked around the tiefling for a moment, staring. \n\n\"You're not doing that 'Parted Flanks of the Maiden' thing, are you?\"\n\n\"What?\" Vadren asked, \"No, that is a different thing, why?\"\n\n\"Nothing,\" Selena chuckled, \"I've only heard about it from Rachel. None of us know what it is and we're all a little curious. Go on and do what you need to do.\"\n\nKsyusha was stuck. She wanted to know a little more herself, but had no idea how to ask under the circumstances. She was surprised that he knew the girl's name. That she's been a friend of his took this far from what she'd been threatened into.\n\n\"Look,\" she said, \"I am in a bad place in this. I had nothing against the girl. I have been hunting her, it's true, but not of my own will. I've even stretched this out a little, here and there. I was careful not to hound her at all. I did it for her and for me. Her brother has seized the throne by killing their father. He wants Xunafae found so that he can kill her. She was the next in line to rule, not him.\n\nI was doing this because, ... he wears an amulet. There is a piece of me in it. If he destroys that, I will die. Now that I have found out that Xunafae is dead, I am not far from it myself. I will have to call him and tell him when he comes. After that, I will either be dead, or I will want to be.\"\n\nVadren looked at Selena. \n\n\"It's the truth,\" she said, \"at least it's her knowledge of things.\"\n\n\"But I've met Garrend,\" Vadren said, \"He's a power-hungry idiot. What you say makes sense, but how can he come here so quickly? And how could he make an unwilling servant of someone like you? He is no mage.\"\n\n\"No he's not,\" Ksyusha agreed, \"but he employs one \u2013 other than me. That is how he found out about me. He tricked me by offering me some work to find an article for him for high gold. Really, it was a ruse to get me into a room at a certain time, not knowing that the mage would be there. When I felt it, it was too late. I lost a part of my soul and it is around Garrend's neck.\"\n\n\"What does the mage get from this, gold?\" Vadren asked.\n\n\"I don't know,\" Ksyusha said, \"I'd guess so, but he has what he wanted. With me doing what Garrend wants, hunting for his sister, the mage has my tower and all of my books.\"\n\nThe door opened quickly and Ksyusha saw another Drow in the room as Cha'Khah walked in, her dagger already flashing in her hand. \n\n\"This is the one?\" she asked, \"I will get the story of this and her life as well from her in only a minute.\" She turned to Vadren and finished her thought in their speech, \"And then I will gut her, and I will do it hard for what was done.\"\n\nVadren shook his head, and Cha'Khah could see that there was more to this than she'd thought. She waited, looking at Ksyusha while he began to tell her that this was not that simple. \n\nHe had just covered it in the barest of terms when a black streak flew in through the open door shrieking as it flew around the room once to stop in front of Ksyusha, forcing Cha'Khah to step back in surprise. A moment later, the blur turned into a small horned demon, who placed herself in such a way as to guard Ksyusha with her intent clear in her stance. She bared her teeth and the small clawed hands that she raised glittered with barely restrained electrical energy.\n\n\"Please,\" Ksyusha said, \"she only seeks to protect me. Do not harm her.\"\n\nCha'Khah took one step, but the demon raised her hand higher and the room was lit with what she held as it snapped and flickered.\n\n\"Step back please Drow, until I have had a chance to calm her,\" the warlock said.\n\nThey waited as Ksyusha spoke to her small, would-be rescuer, and in a moment, the demon changed to a small female with no wings, no horns, and only a thin tail. The long black hair turned short and the color became a fiery red as did her eyebrows. The pinched and glowering visage changed to one of worry and concern. She looked lighter now, a little lighter than Ksyusha, though her pretty face showed the same silver-looking fangs down her cheeks, though they were fading now. She turned to the warlock and in a moment, she stood next to her, holding on to her hip, looking lost and a little nervous. She spoke a few words back to Ksyusha who sighed and smiled in relief.\n\n\"That is good to hear,\" she said as she looked at Cha'Khah, \"The child lives. Thank you for what you have done.\"\n\nCha'Khah was confused and the warlock smiled a little hopefully, \"I had no wish to see harm come to either of them. I only hunted because I was forced to hunt and never in a threatening way. If Xunafae even knew that she was hunted at all, I am sure that is was from what she might have felt \u2013 I am sure that she never saw me once. My friend saw you as you stood outside with the babe.\"\n\nThe Drow shook her head, but Vadren said that he'd explain it all and Cha'Khah could accept that at least as she looked at the pair, \"She is beautiful, \"Cha'Khah began as she stared, \"Is this, ... your child?\"\n\n\"She is no child,\" the warlock said, \"look closer. She is a year older than I am. Where I am from, we call these ones sparks \u2013 as near as I can find the word for it. They are often caught when they are children and sold as pets in the market to the lower ones of what I am, partly. \n\nThe higher classes buy them as playmates for their children and they are discarded when their children grow larger and lose interest. Those ones end up wandering, mostly dying after a time from starvation and their broken hearts. They are not as stupid as the ones who buy them. They are no less than we are, they are only smaller and a little weaker than us, and my kind does them only harm.\n\nNika is one that I saved when I was a maiden and she is not my pet; she is my friend. She is not one of the ones which are usually caught, being less able to be tamed, and so after she was caught and taken from her family, she remained unsold for a time, and eventually someone bought her. But the child of the family who bought her was a cruel little bastard who loved to torment her. When she saw her chance, she burned him and the house down. She lived in the wild lands after that, looking for others. \n\nPlease do not harm her; she is only afraid for me. Since I was trapped into working for Garrend, she has had to stay as near as she could while not being seen by him and his mage.\"\n\n\"Tell her that I wish to approach and that I mean no harm,\" Vadren said before he turned to Cha'Khah, \"There is no gain to be had in anything that we thought to do in vengeance, cousin. These are only others who are used.\"\n\nCha'Khah nodded and her dagger was out of sight in the space of an eyeblink as she nodded, \"I see it, Vadren. Learn what you can. I am sorry for frightening ... Nika. She is lovely, now that she has stopped and stands still for the moment, as lovely as her larger friend. I hope that this goes well,\" she said as she looked at the pair, \"so tell my cousin all that he asks, all that you know which might be of help, yes?\"\n\nKsyusha spoke to Nika in a language that the others didn't understand and the demon nodded slowly, never taking her eyes from Vadren \u2013 and the food there behind him on the table.\n\nVadren walked over slowly and stood very close to Ksyusha for a long moment. He said nothing; he only looked into her red eyes. Then he got to one knee and looked into Nika's eyes, but for a shorter time, since it was obvious to him that what he sought would have been less in evidence in her than in her companion. In both cases, however, he found it a little difficult to break the gaze.\n\nNika looked up at Ksysusha for a moment and spoke in one of the common languages of their world, \"This \u2013 this is him.\"\n\nKsyusha nodded once, \"I think so, but that was a long time ago that we saw him. Perhaps he is only like the one.\"\n\n\"I do not think so,\" Nika said softly as she looked, \"I think it is him.\"\n\n\"Then be patient,\" Ksyusha said, ending the conversation which Vadren didn't understand.\n\nHe nodded to Ksyusha as he stood up, \"When you are ready, make sure that you are relaxed. You will need to trust me a little, but I bathed you and washed your hair and I did nothing to you then and I will do nothing to you now. This is Selena. She was there. Ask her if you wish.\"\n\nSelena nodded, \"No one touched you, other than him when he washed you. You were a smelly mess when he brought you in.\"\n\nKsyusha nodded, and she found herself in Vadren's arms as he carried her to the table. \"I will share my meal with you and Nika, and we will plan how this will go, if I have a chance to see Garrend. He must answer for this.\" \n\nAfter setting her down on her feet and helping her to sit, he lifted Ksyusha's pack and he handed it to her, \"You may wish to put some of your other clothes on. If we wait for the velvet garment to dry, it may take a week.\"\n\n\"Thank you, \"the tiefling said, after a brief conversation with the spark. She set her pack down next to her, \"We are comfortable for the moment. Neither of us feels anything bad about you and, ... where we are from, people do not feel shame over their bodies so, ... we are not shy. I think that while you may have the ability to do as you said to me, I know that you lack the will, not being angry with me anymore. I am sorry for what passed between us earlier.\"\n\n\"As am I,\" he nodded, \"Why were you wearing the velvet robe at all?\" Vadren asked, \"There are other clothes in the pack.\"\n\nKsyusha sighed, \"It was given to me to be worn by Garrend. He said that it would keep me warmer as I hunted.\" \n\nShe rolled her eyes, \"Of course the heavy velvet would have kept me warm \u2013 if it were not slit to my hip on each side and if there was more to it beyond leaving me bare at the neck and shoulders and only covering my bosom in the smallest way.\n\nHe liked it on me, that was all, and he ordered me to wear it. If I find my way out from under his hand, I would be happy to burn it. It is a rich and expensive thing, but I hardly found any joy to wear what I was commanded to wear \u2013 hunting through mountains in winter with only a cloak.\"\n\nHe nodded looking at them. Vadren was tall for any sort of elf and he stood at about five feet ten inches tall. The tiefling was only a little shorter than he was by perhaps an inch or so. Her build was not as lithe as any Drow; she was heavy by that standard, though compared to a human, she was not heavy at all. Her legs were not sticks, being just a little thick and he wouldn't have known, but the feature came from her mother. \n\nShe didn't have the sort of figure that would normally be attractive to Vadren in the strictest sense \u2013 if he was asked the question in a barroom, for example, and if she was across the room and was a normal human woman. What she was however, was enchantingly lovely to him anyway, and all things considered, he thought that she was a stunning beauty and if she moved, he could see that she was very fit and he wondered about that for a moment. \n\nNika was something of a mystery to him. Her eyes were a dull yellow with a wide horizontal pupil in each one. She was short, it was true, but it was the damndest thing to him. Nika only stood about four feet tall or maybe a little more, yet she had all of the same sort of features that any other grown female could be expected to have \u2013 they were just smaller on her, that was all. \n\nIt came to him that if he asked her to stand near him as he sat in a chair and then asked Ksyusha to stand in the same pose a little distance away, they'd have looked remarkably alike. Her breasts were small, yet in the overall view of things, they were perfect in proportion to the rest of her. Everything about her was about perfect \u2013 in a rather small package.\n\nShe was a lovely as her larger friend, she was just a somewhat miniature version, but no less lovely for it.\n\n\"Why do you both wear those markings on your faces?\" he asked, \"I like them, but if there is any significance to them, I see none of it.\"\n\n\"When a young one comes into their own where we are from,\" Ksyusha said, \"they must prove themselves. If they fail at it, there is no shame, but there is also no recognition either. One can be proven in many ways with different talents. Proven ones are marked. I was to be marked in the way that my father chose \u2013 like this. It is the father's right, to mark the time of the child's passage into adulthood. It is the father's last official act for his child, though of course, being a parent is a role which is unending.\n\nSince I proved myself in battle, I wear the marks to show it. Nika fought well together with me, once she was free, and, having no family other than mine, since we accepted her, she was marked as well in the same way on my father's word even though it caused a stir because she is not one of our kind. \n\nTo my family, she is no less than me, and from my parent's view, they gained a daughter and she loves them for it. Her name is Nika, from what she remembers of her childhood. My mother always called her 'Veronika', because it is a name from where she was born.\n\nThere are some who say that her marks mean nothing \u2013 since she is not what I am, but they never say that in her presence \u2013 or mine.\" Ksyusha smiled.\n\n\"What are you doing with the chessboard?\" Selena asked.\n\n\"Arrax was teaching me,\" Vadren replied, \"but he is too much like a soldier in everything. I cannot learn when he crushes my plan every time.\"\n\n\"I can teach you,\" Ksyusha said, \"the key is to learn simple strategies at first. You have the right idea about learning. What were you looking for in my eyes, to see if I was lying?\"\n\nVadren shook his head, \"No. Selena would have told me if you were. I was looking for death. What you can do \u2013 the part that I can see - means that the practitioner walks a fine line. I saw the nature of it around you, but I saw none in you. \n\nPlease, both of you, sit and eat with me. After all of this, the least that I can do to show that I am sorry for it is to share my meal, and Nika can only keep her eyes from the meal for so long. By her glances, I can see that she has not eaten for a time.\" \n\nCha'Khah looked at her cousin for a brief moment and she turned to Selena and motioned with her chin, \"Come, my friend. Vadren is in no danger and he seeks to see what may be made from this, rather than what may be destroyed.\" \n\nSelena nodded and they walked to the door.\n\n\"I am sorry for threatening you,\" Cha'Khah said as they walked to the door. Ksyusha smiled and thanked her. \n\nSelena raised her hand and softly slapped Vadren's cheek with a little grin as she passed, \"You're being an idiot here,\" she whispered a little musically to him as she went, \"Don't you think that you ought to ask her name?\" She smiled at the newcomers and walked out with a chuckle.\n\n\"I have been rude, even still,\" Vadren said, \"I do not know your name. I am Vadren, as I am sure that you've heard.\"\n\n\"I am Ksyusha,\" the warlock grinned, \"It is usually a different form of another name, where my mother came from, but Ksyusha is all that she ever called me and so I am Ksyusha.\"\n\nShe looked at Nika, \"His name is Vadren,\" she said in their speech.\n\nNika nodded and smiled at the Drow, \"Vadren,\" she said softly, and followed it with another sentence. \n\nKsyusha grinned a little, \"Nika wishes to say that she is happy to know your name.\"\n\nWhen he looked at her and nodded, he was a little surprised to see the intent way that she looked back.\n\nThere were only two chairs at the table, but Nika quickly got up to sit on Ksyusha's leg. Vadren asked to know what they were and where they'd come from in a gentle way. \n\n\"So you call yourself a warlock?\" he asked after hearing her brief explanation, \"I know little of it as an art, only what I feel.\"\n\n\"The word is a bad one,\" she smiled, \"It stems from a few languages, 'Waerloghe' as a literal translation means oathbreaker or liar \u2013 one who has broken the truth, but I have never broken my word and I do not lie. I prefer to think of myself as a waerlock, meaning 'truth' in a dismissive form, from the Scottish, much like 'hillock' as an example.\"\n\nAs they ate together, it became a lot clearer to him. \"I have heard of the gnomes here, and I've seen a few in my time, but they are nothing like Nika, and in comparison, they are quite ugly to my eyes. She seems childlike in a way.\"\n\n\"She is nothing like any being here,\" Ksyusha said, \"What she seems and what she is, are two very different things,\" she smiled, \"When I found her, I thought that I was doing the right thing to help her \u2013 and I was, of course. But I was on my spirit quest and once she was free and her captors dead, I thought to go on alone, but she would not leave me after that. I was eighteen and we became friends in an instant and then we did what I now know to be a foolish thing. \n\nWe cut our arms and held the cuts against each other to mix the blood, as a symbol of our friendship and sisterhood in the battle. But we are not the same kind.\"\n\nShe shook her head with a sad smile, \"It nearly killed us both and we were sick from it for days. Both of us had visions from the edges of our deaths. But we survived it and we did form our bond from it, so in that respect it was right to do. I suppose.\n\nWe became the same from it. We often know what the other one is thinking \u2013 not because of any ability in that way, though we both have some of that. We know because it is what each one would be thinking. As I hung in the air there where you put me, I knew that Nika was seeking for me. I knew it when she had gained her entry into this place, though she was still far away. From her, I have learned even before she was here that this is a mountain of some kind and that we are inside of it. Twin children born of the same parents could not be closer than Nika and I as we live in each other. I know it when she breathes.",
        "I took her home when I returned there, thinking that I had failed in my quest. My father told me that I had succeeded in greater measure than he had hoped, for I found my spirit in a living one and not in the land around.\n\nIt is true,\" she smiled, \"though it took me a long time to learn to see what he meant. Ones like her are chosen as playmates for young nobles when they are young, but the mistake that everyone makes is that they think of them as playthings.\n\nNika is no child, though she can sometimes see things in a childlike way. Her interpretation is always good to hear when I consider a path or a choice, because her view will always be the purest one. But she is no child. We were first lovers as I continued my quest and before I brought her home, but that was long ago. We belong together and share everything,\"\n\nNika giggled a little as she looked up for a moment. Ksyusha nodded then with a little smirk, \"especially males, she reminds me, but that has not happened for a time either. She does not understand what I say in the words of it, but she knows what I am saying from my thought to say it.\"\n\nAs he considered, Nika became more interested in Vadren, peeking at him when she dared more and more, until her fascination overcame her and she stood before him with a questioning look on her face as she asked the warlock something.\n\n\"He is very good to look at,\" Nika said, \"Do you think it would upset him if I sat with him? I want to touch him at least a little.\"\n\n\"I will see,\" Ksyusha said, \"only be careful and do not rush. We do not know him from more than what we saw and we do not know his personality yet. But I agree with you.\"\n\nVadren understood nothing, he only knew that he liked the two of them and that he wasn't being made to in any magical way that he was aware of.\n\n\"She asks if it would be wrong to eat with you now,\" Ksyusha said with a little grin, \"You fascinate her. She wishes to touch your skin and your hair and wonders if it might be allowed.\"\n\nVadren smiled and nodded, and then Nika was on his lap. She'd eaten her fill, but she pretended to still want a little, and before long, he found that she sat looking at him and reaching for his hair tentatively with a small smile.\n\n\"Are there none where you are from who look as I do?\" he asked them both.\n\n\"No,\" Ksyusha replied, \"Sparks are most often lighter in this form and all of them are as moving night air when they are in their natural shape. My kind is darker still \u2013 most of us \u2013 but there are none of my kind anywhere whose skin looks like yours and none of us has white hair. My friend and I are spellbound when we see you move and, ...\n\nNika likes you very much already. She is a little impetuous.\"\n\nVadren smiled in a bit of shock as he felt Nika hug him, her small but perfect breasts crushed against his side, \"Really?\" He chuckled, \"How would I ever know?\"\n\n\"Oh yes, I see it already,\" the warlock laughed, \"She is only shy to begin. She likes you. She had not even met you as she flew everywhere in the mountain looking for me, yet she already liked you then. She knew that it was safe to like you.\"\n\nHe looked up, tilting his head, \"How could she know all of that?\"\n\nKsyusha looked down with a little smile for a moment, and then she looked up, \"Because I like you, Vadren.\"\n\nKsyusha laughed a little, \"You should be careful. From what I see, Nika has the beginnings of her quiet little thoughts \u2013 the dangerous ones. You may find yourself with a smallish lover very soon if you would allow it, and if that happens ...\"\n\nShe looked away, \"We should speak of dealing with Garrend. He will likely come to seek me if I do not drop the marker that calls him to where I am. If he comes and I am not ready ...\"\n\nVadren nodded as he put his arm around Nika to steady her, not really thinking about it, \"Yes,\" he said, \"What are your thoughts? I can help. All of us can. How can we help to free you both?\"\n\nShe outlined as much as she knew of it all, aided here and there by Nika, who interjected occasionally when she saw that Ksyusha might overlook something, and in a little while, Vadren knew all that he had to and he offered his ideas.\n\n\"Do you think that he will allow us to remain with him?\" Nika asked quietly in their speech.\n\n\"I think that it is very likely now,\" Ksyusha said, \"Why, Nika?\"\n\nVadren wasn't looking at the moment as he considered everything, so Nika looked at him before turning her head to Ksysuha and for the briefest instant, she showed parts of her third form in her eyes and slight snout, \"I just, ... Ksyusha, it is him. I am certain, and I want him as much as you. After finally seeing him like this, ... if this does not work for us, ...\"\n\nKsyusha shook her head and Nika hid the features which she'd shown as she listened.\n\n\"No,\" the tiefling said flatly though in a quiet and even way so as not to draw Vadren's attention, \"I am not buying another goat, Nika. They never stay and I have no more gold anymore. This will work, it must. You are always telling me to trust in what we saw. Now I say the same to you. Try to be patient.\"\n\nNika looked down, \"I know. How will you do it?\"\n\nKsyusha didn't even blink. \"I do not lie, Nika. I will not hide anything from him. If he is what you have always seen, then there is more need for truth than there is for deception. Try to be a little brave and have patience,\" she nodded in a barely perceptible way, \"I will find a way, and when I do, I will tell him everything and then both of us will need to trust your dreams. If we are wrong, we will seek farther. I do not know yet, but I cannot buy another goat.\"\n\nVadren looked at them, and Ksyusha smiled, \"Nika is a little nervous over some things.\"\n\n\"Our plan places her a little far from things,\" Vadren said, \"and I do not know what she can do. Will she be in any danger?\"\n\n\"I do not think so,\" Ksyusha smiled, \"The way that she sits there with you, I think that she just needs to keep you in her mind - as I have been telling her,\" she looked at the spark a little pointedly.\n\nNika ignored the look and leaned against Vadren with a smile.\n\nKsyusha grinned, \"Perhaps we should also give a thought to after, if we may be so bold as to assume our success. My dear friend likes you very much, I see and, ... well, ... Nika and I share everything.\"\n\nVadren found himself laughing a little, since though he thought that maybe he could understand this, he was also quite taken with the pair of them. Some people can set your teeth on edge just to meet them. Getting to know Ksyusha and Nika was like finding something which might be valuable in a mysterious way, and upon closer inspection, seems even more so, and the closer one looks, ....\n\nThey got down to business then and it wasn't long before a few of the others became involved in the discussions.\n\n--------------------\n\nAfter the meal, Ksyusha opened her pack and began to remove clothing for her and Nika and the pair began to dress themselves in front of Vadren as though it was nothing. More and more, little Nika became a smallish traveler before his eyes, pulling on breeches and boots, a short-sleeved singlet and then donning a close-fitting leather hauberk. \n\nShe smiled at him as she fitted her breasts into the places for them in the garment and then began to tie it closed, carefully flexing her arms as she did to make certain that she had freedom of movement before she tied the belts and stood before him looking vaguely like a small rogue, though a rather well-armored one.\n\n\"I begin to think that you have come to the right place,\" Vadren laughed a little, \"if Nika has the skills to match what she now wears.\"\n\n\"She does,\" he heard Ksyusha say, \"When she wishes it, there are few who can detect her. Of course, when she wishes to shed those clothes because there is a different sort of fight in the wind, she shows what sparks show then. She can leave all of what she wears there in a heap in an instant. \n\nShe flies like a small whirlwind, much faster than she was when she came in here, but also, she throws her sparks then, the blue ones which flicker and knock everyone down and the red ones which look like bits of burning wood, only tiny sparks from a fire which fall to the ground slowly, but when they land, it is best not to be there.\n\nIt is said where I am from that sparks have many shapes. but really, the most that any can have is three, but they can shift in any one and appear differently - as she did when she flew, for example. This is one that she likes, and there is another, but if you know her, then one look in her eyes tells you that it is her. The third shape has horns like the first and I believe that this is where the saying comes from about her kind.\"\n\nVadren found it remarkable and he noticed that Nika was listening closely to what was said. \"She seeks to learn this speech,\" Ksyusha said, \"and it will not take her long. She learns everything very quickly and I see that she wishes to be able to speak with you. My mother was born here on this world. She knows several languages and she taught them to me but, well, she has always liked to speak Russian to me. It is her mother tongue and she was happy to have me to speak with. Nika learned enough in a day to be able to make a little small talk \u2013 and it is not an easy language to learn, but that is Nika.\"\n\nVadren looked at Ksyusha and he had to stare. She stood in heavy boots and wore a garment over her hips which was fastened with a bit of bone over a piece of mail which protected her groin. From her hips up, she was still naked and just as comfortable with it as before while she quickly re-braided her hair. When she reached the end of the braid, Nika jumped onto a chair and tied the finishing touches for her.\n\nKsyusha pulled on a long sleeveless leather coat which left her pretty navel and some of her stomach in view and she settled her breasts into the top which went with the other things, but her breasts were now encased in what looked like bony and somewhat skeletal fingers over the leather. Her legs were bare above the boots, but the coat covered them.\n\n\"Is \u2013 is that real bone?\" he asked and she chuckled as she shook her head and said only \"No.\"\n\nHe watched as she pulled on leather bracers and gauntlets before she tied the coat as closed as it was supposed to go and Vadren asked if she wouldn't be cold like that. Ksyusha smiled at him a little softly. \"You washed me and in here, carried me to my chair,\" she said, \"Was I cold to your touch then?\"\n\nHe shook his head, \"No, you felt very warm to me,\" he said with a smile. \n\n\"I can stand the cold here,\" she smiled, \"but it becomes a little difficult when one has no home month after month.\"\n\nHis eyes settled on the top of a skull of some sort which was fastened over the light spalder on her right shoulder. \"That is what it looks like, is it not?\"\n\nShe nodded, \"One of the ones who were going to eat my Nika when I first found her. This one was their shamaness and she was my first kill. She and I have made our peace with each other long ago.\" As Ksyusha turned to remove a pair of articles from her pack, Vadren was startled to see that the empty eyesockets of the skull glowed a little faintly and he felt that there was a presence there.\n\n\"How was that done?\" he asked as he looked at the eyes which regarded him from her shoulder.\n\nKsyusha shrugged, \"I told her that she was young to be dead, but that she could remain with me if she would help until she wished to pass and I promised to release her then, so she chose this over the peace of being dead, for a time.\"\n\nNika glared at the skull with barely-concealed hatred and when she raised her glittering hand, covered in thin lines of static discharge toward the skull, the eyes went out.\n\nKsyusha frowned a little, \"Nika has heard or felt no apology for her cruel treatment from this one, so there is nothing but hate from her for the dead one.\"\n\nWhen Ksyusha stood straight once more the small things in her hands disappeared in a swirl of black mist and an instant later, she stood with a pair of swords over her back, covered by a shield. The muscles that he'd seen on her body made more sense now.\n\n\"Why did you not wear all of this when I found you?\" He asked, a little amazed.\n\nKsyusha shrugged, \"Because I was forbidden to wear these things by Garrend. I think that it makes his mage Verrick nervous, but I do not know this for certain. Now, I no longer care what Garrend says. We have met you and together, Nika and I wish to end this mess this night. It has gone on more than a year now \u2013 more than long enough.\"\n\n------------------------\n\nGarrend strode into his mage's tent. He was immediately sorry for the glimpse at what the ambitious old fool was doing to an imprisoned spirit.\n\n\"Get up, Verrick. The witch calls and she uses the stone for us to go quickly. Hurry and dress yourself.\"\n\n\"The mage nodded, \"If she has summoned us in this way, allow me to bring my pupils along. We may be walking into a trap.\"\n\n\"Bring an army, for all that I care,\" Garrend growled, \"I begin to think that you fear the huntress. Get up and summon another one to fuck when we return, though why you choose to lie with these things is beyond me \u2013 unless no living ones will lie with you of their own will.\"\n\n------------------\n\nThey arrived in a clearing in the darkened forest and the thirty-one acolytes fanned out, thinking to form a protective perimeter around Verrick until they knew what the situation was. There was nothing to be seen but the glow of a small fire up ahead in the trees as though someone camped there. Setting off as quietly as they could, Garrend and Verrick followed the tracks in the snow toward the flickering light. \n\nTheir guards lost sight of them and the small fire almost instantly as a thin fog rolled in among them and they began to call out nervously, but neither of the pair heard a thing.\n\n\"I have seen those ones before,\" Nika whispered, \"He sends those ones to take what he wants, most often robbing people where they can and killing them when they have their gold.\"\n\n\"Then remove them,\" Ksyusha said, \"Verrick will not need them anymore very soon.\"\n\nNika looked up at Vadren and smiled, though to Ksyusha she gave a little smirk, \"I being to think that this is a little unfair.\" She began to undo her belts and the hauberk, \"He will see me unclothed twice and as yet I have seen little.\"\n\nVadren blinked a few moments later as Nika stood for a moment in the dark forest as he'd seen her earlier. She bent to retrieve her blades from her clothing and Vadren began to stare as Nika showed him the shape of a spark demon at rest.\n\nShe was a little taller like this, standing on her small cloven feet, and he was more than a little thankful for the way that Drow can see in darkness. Her hair was long and black and her teeth shone a little as she still smiled at him.\n\n\"Nika,\" he said as he stared, \"Nika, can I \u2013\"\n\nHe turned to Ksyusha, \"She wears fur like this!\"\n\nKsyusha grinned, \"The other form is one that she assumes sometimes. This is her truest shape. Wait a moment, Vadren.\"\n\nShe spoke to Nika then, \"He likes you like this as well.\"\n\nNika sighed in a bit of relief, \"That is good to hear,\" she said, \"I was afraid that he wouldn't.\"\n\n\"He seems to be taken with your fur,\" Ksyusha smiled, \"Can I tell him that you would permit him to touch you?\"\n\n\"I would like nothing more,\" the spark smiled, \"but if he takes too long about it, we will lose the prey. They stand clustered in fear now, but in a moment, the braver ones will begin to wander.\"\n\n\"Especially if you enjoy his touch, no?\" Ksyusha chuckled.\n\n\"Especially, yes.\" Nika giggled.\n\n\"Nika would permit it if you touched her fur,\" Ksyusha smiled to Vadren, \"She was worried that you might not have liked her like this.\"\n\nHe stepped forward and ran his fingers over her sleek, short inky fur and when his hand reached for the goat-like horns, Nika managed to keep her pleasured purr to a very quiet one.\n\n\"We must deal with Garrend,\" Ksyusha reminded Vadren and he nodded as he turned to walk away with her. \"Will she be alright?\" He asked.\n\nThe warlock nodded, \"After your touch, I think that she will have no trouble with them. If anything, she may be a little hasty.\"\n\nNika watched them walk away for a moment before she turned and spread her wings. Her outline became less definite for a second, and then the dark smear shot into the air in the opposite direction.\n\n----------------------\n\nWalking into the small space there, Garrend saw a hooded figure sitting on a log by the fire. \n\n\"Well? What have you found, witch?\"\n\nThere was no reply, so Garrend repeated the question, leaning down a little to give the seated form a rude shake. In that instant, Vadren reached and sliced through the thongs around Garrend's neck and his invisible hand came away with all of the amulets which the elf king wore and he found Ksyusha waiting for him in the darkness a little way off inside the forest.\n\n\"That one,\" she whispered to Vadren, \"the rest are charms to cure his bad breath and hammer toes.\"\n\nHe held it out to her but she hesitated, placing her hand against his chest. \"You are very brave, Vadren. You knew me for what I am from the first and you give me this, knowing what I can do once I have it,\" she whispered, \"You were not completely correct, but you were a little right about me anyway.\n\nYou could have killed me, but you did not. You heard me out and offer me a chance. You are someone who has earned my trust. I have not wanted to trust anyone other than Nika in so long, but I find that I want to trust you.\" \n\nShe indicated the amulet with a nod, \"Would you do this for me?\"\n\nBehind them, Garrend was still trying to get answers from the figure on the log. He knew that for her to have dropped the marker which signalled urgency, there must have been something significant. He knew that she certainly wouldn't have done that lightly. He wanted this hunt over with. He had other plans for the witch, most of which involved keeping her in his bed. He knew that she hated him but that didn't matter, he thought, most people hated him.\n\n\"What must I do?\" Vadren asked.\n\n\"Nothing much,\" she said, \"Only hold it against my heart,\" she said, looking up at him as she opened her outer cloak and pulled the cups of her leather coat away from her breasts a little to give him the room. \n\n\"Only hold it against your heart,\" he smiled, \"such a sweet task you set me.\" \n\nHe nodded and pressed it against her, turning back to see where Garrend was in this as he held the pendant there. He knew the swine had a short temper. It was what he was counting on. When he heard Ksyusha's sigh, he looked at her.\n\nIn the darkness, most likely wouldn't have noticed a thing, but Vadren wasn't most. \n\nHe gazed at her, and she seemed to glow a little and shift in the way that his eyes focused on her, as though part of her was already on the way to where she'd be in the next instant. His hand was still on her very warm breast, and it would have fallen away for the way that he was surprised, but she held it there with one hand as she slipped the other one around his neck.\n\nShe leaned in and he felt her bare body, warm against his own somehow as she whispered against his cheek, \"We are all in peril from each other, Vadren. You, Nika, and I, but you have shown us your trust as well. We will never break it. Think on this and know that there are two hearts who come to care for your own so easily.\"\n\nShe looked into his eyes and looked down again with a little smile, \"I feel so lost when I look there. I wish to say that you should try to think clearly before it is too late for all of us. I will tell of it later, if you ask, but, ... Nika and I cannot help ourselves. I see that you are drawn to us, but Vadren, I am being honest here. \n\nWe are being drawn too. Nika hides it the best because she is also so obvious with her flirting. I have no defense like her. So be careful and think - before I lose my ability to.\"",
        "She pulled back and he saw her teeth then as she opened her mouth a little and she kissed him. They had only a moment, but it was exquisite for them both, and they parted, fully clothed again to walk toward Garrend, her arm around his waist.\n\nThe figure on the log ignored Garrend's questions and demands, until he placed his hand on the top of the hood and shook a little. There was no response, but he noted that the hood was not empty. He got down on one knee and offered one last chance, demanding answers to several questions, such as just what kind of game Ksyusha was playing here, but he felt himself being ignored, so he grasped just below the hood and hauled up as he stood so that he could see her face while he threatened her with his knife against her belly. \n\nWe'd see then, he thought.\n\n\"Idiot,\" he heard Ksyusha's laugh from behind him, \"How did you think to get home? I will not help you back.\"\n\nGarrend snapped his head around and saw Ksyusha there, laughing at him. He turned back and saw Verrick's face in agony, clutching at the knife in his guts, the one that Garrend held in his hand. He remembered having the thought, but he didn't remember doing this.\n\nHe'd always hated this when it happened.\n\n\"Do not worry, little man,\" Ksyusha's voice rang sweetly as she held up the amulet and regarded Verrick with a grin, \"I'll keep you alive. Right here. Come.\" \n\nVerrick watched in horror as her fingers danced in the air between them. He felt the draw on him, and she hadn't said a word of a single incantation.\n\nHe'd needed to hit her over the head to lay her out cold so that he had the time to say the words and use the motions. Her magic were different, and she needed no words. He quailed in terror, suddenly knowing the power of the one that he'd helped to imprison for a year.\n\nVerrick shook his head, but half of his soul left him anyway and sifted into the amulet. He drew out the knife and held it in a threatening manner to Garrend as he backed away into the darkness. He struggled against it, but his will would be leaving him soon and he knew it.\n\n\"Run if you like,\" Ksyusha said, \"I can easily make it so that no matter where you seek to run, you run only to me. But satisfy your need to escape, Verrick. I can wait.\" \n\nShe smiled to Vadren, \"Think of us and watch with your mind if you would learn of Nika and me,\" she said as she faded from sight.\n\n-----------------------------\n\n\"This is one of the reasons why you should never rule anyone,\" Garrend heard a male voice say and when he looked, he saw a dark figure with long white hair and red eyes. \"You cannot even rule yourself.\"\n\nGerrand gasped. \"Drow,\" was all that he said.\n\n\"You wished for Xunafae's death,\" Vadren said quietly, \"well you have caused it, though not by your hand. She perished not far from here as she tried to keep a pack of dogs from her and her child. The child lives still.\"\n\nVadren saw the look on Garrend's face and nodded, \"Oh yes, there is still a rightful heir, Garrend. But three things must happen before your tribe has a ruler again. The little one must grow up, the people must want her rule, and of course,\" he grinned with a little shrug, \"you must die.\"\n\nVadren stepped forward and regarded Garrend, \"Xunafae was my friend and so was Aldred, the love you took from your sister and the father that you took from the child before she was born. It would drive me to do all sorts of things to you, Garrend, but I will do only two in my vengeance.\n\nThe last thing that I will do is to cause the same things to happen to you as happened to your sister to cause her passing, and I leave that as what is to come. The first thing that I will do is turn you over to the best one to teach you something, so that you might learn the danger which comes from the sort of wrath that a vengeful mother is capable of.\"\n\nGarrend blinked as his clothing and the rest of his weapons left him. He looked at himself in amazement for a moment. There was no one there with him now but the Drow and he was fading, but Garrend's head snapped up as he heard the war cry of a voice from a fair way off who approached through the forest. It sounded a little like Xunafae to him.\n\n\"You \u2013 you said that my sister is dead,\" Garrend stammered, \"Who is that?\n\nVadren's red eyes were all that could be seen of him then as they hung there in space before Garrend and nodded, \"She has passed, but her rage lives on in another.\"\n\nThe red eyes winked out and he was all alone in the clearing, but he heard someone coming. The dialect of his tribe was not far off from the speech of the Drow, and his blood ran a little cold to hear it.\n\nThe voice in the forest was singing death songs in a clear voice as it grew slowly louder.\n\n------------------------\n\nVerrick took his hand away and noticed that, while it was bloody, no more blood seemed to be coming, and so he made his hopeful and incorrect assumption and began to run away into the forest. The pain was fading from him and he tried to work his best healing spells as he ran. In a moment, he saw a glare in the trees up ahead and ran in that direction to be welcomed with relief by his acolytes.\n\n\"What is this light?\" he asked, \"And where does it come from?\"\n\n\"We know not,\" one of his pupils said, \"They come from above and each light lasts for a time, but always there are more, one after another.\"\n\nIt was true, Verrick saw as another ball of the yellow fire ignited above them with a soft sound. All of them stood in the flickering light and looked around. Gradually, it became a very long lit area in the forest, about a half mile in length and no wider than perhaps a hundred feet at any point.\n\nAbove them in the sky, Nika smiled as she thought that there were enough lights now. She folded her wings a little and plummeted out of the night sky.\n\nThe largest of the men held his hand over his brow as he looked into the woods. \"There is something out there, \"he said, \"I can hear it.\" He picked up a fallen branch and using what he'd learned, the end of it became a torch as he walked away from the others.\n\n\"There!\" he called out, \"There is a \u2013 \"\n\nAnd then there was silence. \n\nThey called out to him, but there was no reply; only the flame of the branch and that died with the caster. Several of his friends began to walk in the direction that he went, but Verrick told them they were fools to think of it. \"Remain together,\" he called out to them, \"Stay here.\"\n\nAt the other end of the group, a man looked into the shadows and blinked. \"Tommy? Tommy is that you?\"\n\nSeveral of the others nearby looked at each other, seeing nothing. \"Who's Tommy?\" one said to another, and saw the shrug which was returned. When they looked back, their companion had run into the darkness and their calls brought no answer.\n\nWithin five minutes, three more men had wandered off, and Verrick bellowed that they were being tricked and to remain together near him.\n\nThat was when they heard the snarls all around them and began to run with Verrick leading them from the middle of the group and calling out repeatedly to them not to look into the forest and to stay together in a group.\n\nWhen they were all out of breath, the shadows began to come for them.\n\nOne at a time, a dark blur would flash out of the darkness to grab a full-grown man and carry him off screaming into the night before any of the rest had even seen very much of it. The men huddled together and by their sounds, more and more of the snarling beasts growled at them from just beyond the edges of the light. They had no idea of the size of the pack, but it sounded like whatever these were, everyone in the neighborhood was being drawn to them for a hopeful meal.\n\nAnd then there was silence.\n\nThey looked around and there was only one thing visible at all. At the far end of the line of light, one being stood alone. Verrick know who was there, and he took a step to run in the opposite direction, but all that he saw at the other end was a large dark moving mass composed of many shadows \u2013 all of them running toward them all and baying for blood.\n\nHis acolytes ran toward the individual, and Verrick saw that he had no choice.\n\nAs he began to run back in the same direction as his students, he saw Ksyusha there up ahead as she adjusted one strap which held her coat closed. As her hand came down, a dark shadow swirled around it and it took shape as her sword as she began to stride forward.\n\nMost of the men didn't know her, and even those who did knew that their only chance lay in getting past her. Some of them bolted to run into the woods, but the sounds which rose as they approached changed their minds and they turned to run toward the shadows which approached them.\n\nNika flew above, headed toward the group which ran and she squinted at them a little. She wanted most of them near the frightened mage and it wasn't time yet for the ones which Ksyusha had called to her aid, these shadows which ran like dogs and howled for blood, and yet for all of that, ate nothing and took only the soul of those that they were turned loose on. \n\nShe opened her hands and a bright shower of glowing sparks fell slowly down from above the floating lights.\n\nThey looked beautiful in an eerie way until the first of them touched the ground and the explosions began. The three men farthest from the rest disappeared as they were obliterated, and the rest turned back to run toward Ksyusha.\n\nThe warlock began to run toward them all, gaining speed all the while . Each time that any pf them blinked, she was closer, moving faster and faster. Some of the acolytes turned to Verrick, waiting for the mage that they'd devoted themselves to and followed to smite this threat down, but he only stood whimpering for a moment before he drew his dagger and lowered his staff to point it toward the running warlock.\n\nShe appeared before him in the middle of them all and his blast hit her in the chest, but after the brief flash, she was still there, grinning at him. Her upswing broke the staff and tore it from his grasp at the same time. Several of the men swung at her, but their blades bit nothing and an instant later the bounding shadows overran the rest.\n\nShe held Verrick by the throat as the slaughter began all around them. The sounds were terrible, but he heard her clearly as she calmly told him that he was to travel to her tower, and she didn't care how he did it, but he was to return to her with a small specific group of her tomes intact and unharmed.\n\n\"You are listening, aren't you?\" she asked through her teeth, and he nodded, trying to ignore the carnage around him. She thought of the best way to instruct him in what Azrael and Dahlgren had decided.\n\n\"As you go,\" she said, \"you will find the tribe who now has no king and you will not harm one of them, not the smallest child among them. You task is to tell them that Garrend is dead, for he will be soon. Tell of what happened to Xunafae and tell that there is a princess still, and that they are to come to her if it is their wish for a homeland for themselves at last \u2013 wild lands are offered to the Wild Ones. If you stray too far from these tasks of mine, the same shadows which you have seen here this night will find you.\n\nYou are dead, Verrick, dead to this world, but not to me. Do as I say, and it will take some time \u2013 a few years, even. By then, you will ache for the release of peace which only I can grant you. Be a good boy, and I may grant it. Now go.\"\n\n---------------------------\n\nGarrend stood in the clearing, shaking his head and wondering what was happening. One minute, he had everything in his hand and the next, he stood naked as he listened to the voice as it came to him.\n\nAs she neared the clearing, Cha'Khah threw off her cloak and dropped her daggers with it in one motion. She walked the rest of the way wearing only her boots.\n\n--------------------------\n\nA naked Drow female strode quickly into the open space around the little fire. She was fine, he thought, and she was fit, but he didn't see all that much of a threat to him there.\n\nHer eyes almost glowed in her fury and she said only two quiet words as she came for him. \n\n\"For Xunafae.\" \n\nHis dull mind barely registered what she'd said and then she was on him.\n\nHer actions forced him to revise his appraisal in the next instant as she became more of a very fast blur to his eyes. He was an elf, but he was like tar compared to the way that she moved.\n\nGarrend was a bully and a brawler. It was his way, and it had always worked for him, but her punches and her kicks drove him to his knees in an instant. He was astounded.\n\nHe looked up with one eye beginning to swell closed from the four strikes that she'd left there before he could blink twice and his knee felt like glowing agony from the kicks to it \u2013 one that had buckled it and the other which came on the way down. \n\nHis scalp hurt from the way that she'd held him by the hair for the instant that she drove her fist into his eye over and over so fast that it felt like one blow. \n\nHe noticed the taste of his blood in his mouth. He hadn't even seen her hit him there. He looked at her in disbelief as she stood still a little way off with the beginnings of a pleased smile on her lovely face.\n\n\"Get ... up,\" she said.\n\n\"Who - who are you?\" Garrend asked in painful amazement as she wound her long hair up out of the way of this. She was keenly aware of what the motions did to cause her breasts to stand out to him. Her eyes told him the story from her side of it.\n\nShe couldn't have cared less what he looked at.\n\n\"Who is she?\" Ksyusha whispered as she stood next to Vadren with her arm around his waist again, \"I mean, I know that she is Cha'Khah, but she is like another person like this.\"\n\n\"My cousin and I grew up in a place where there was no justice,\" Vadren smiled, \"She wishes to settle with Garrend for what was done \u2013 even though she barely knew the elf. She feels that she has a score to settle on the mother's behalf, and also for what was taken from the child. \n\nShe is only playing here. She has a temper and when the mood is on her ...\"\n\n\"Perhaps I ought to look to my defense from her after this,\" the warlock said quietly as she watched, \"She is so beautiful. I have never seen \u2013\"\n\n\"I have spoken to Cha'Khah,\" Vadren said, \"She may have words for you, but she understands. You might find a friend in her; she has a large heart, easily large enough to fuel her fury at what was done to a mother and child,\" Vadren chuckled then and she looked up at him. \n\n\"Ksyusha, are there no looking glasses in this tower of yours? I stayed in the chair as we spoke. I had to. You do not hear me when I speak of it, but you and Nika hold your own and more. I can say it,\" he smirked, \"I live with many beauties, so I know what I speak of.\"\n\nKsyusha's eye was caught by a slight motion in the darkness and she stared. Vadren saw it and smiled, \"The one that you saw earlier? That was Arrax, and this is his mate, Shaevre. She has a part to play here, but she stands to watch Cha'Khah fight. The two are friends and both have fought as soldiers, so they admire each other's skill.\"\n\n\"Get up,\" Cha'Khah said out in the clearing, \"I was last-friend to Xunafae, and I am first-friend to Mo- Wenn. There is nothing more for you to know. \n\nGet up, slug,\" she grinned as she stepped closer, \"I am in the mood now.\"\n\n\"I want your name,\" he grunted as he lunged for her. She wasn't there when his hands closed on air. She'd danced back and was on her way back in with bloodlust in her eyes, but she waited until his hands were on her throat, and the reaction that he saw unnerved him a little. There was no fear there in those red eyes.\n\nCha'Khah reached up and her hands found the backs of his upper arms and she pinched them hard. The reaction was instant as it would be in anyone, and he released her without meaning to. \n\nShe tilted her head playfully before she snorted with derision, \"You want my name?\"\n\nHer first three strikes caused him to begin to double over, but before he really toppled, she had his hair again and her right fist flashed out and took two of his teeth with a spray of his blood glittering as an arc in the firelight. She finished closing his left eye with her left fist and her left back-fist behind his ear as it passed by rocked him for the dark pain that he felt all through him.\n\n\"I want your life,\" she hissed at him through her teeth and she drove her right fist, middle knuckle-first into his left temple. Garrend's head snapped around from the impact as he reeled. He was headed for his face-landing in the snow, but she was gone again and back directly in front of him like a swarm angry hornets.\n\nHe saw those superb breasts and thought that he might land there with his face, but she reminded him that she controlled this when she clapped her hand on his shoulder to hold him and drilled his jaw with a cruel uppercut that she helped with her legs.\n\nHis teeth slammed against each other hard enough for him to hear at least one of them crack. As the pain from it shot up to his brain through his jaw, she drove him in the stomach hard enough to almost lift him from the ground onto his toes.\n\nShe skipped back for a moment to watch him totter on the edge of his balance, waiting for just an instant. As he wavered backwards a little, she leapt into the air and her kick to his face sent him on his way.\n\nHe landed on his back with a groan and she walked to where she'd stood earlier. She examined her knuckles and healed the damage with a wave and a softly spoken phrase.\n\n\"Get ... up,\" she said in the same tone of voice as the last time.\n\nKsyusha stared, \"She still has her breath. She barely pants.\"\n\nVadren nodded, \"My cousin and I teach each other, so I know what I watch. She calls this riding a fight's anger. She uses it to keep the fire hot.\"\n\nGarrend wheezed up at the stars as his tongue found a tooth to spit out. The whole left side of his vision was a mess of sparks and throbbing red flashes. He'd never faced anything like this one before. It came to him slowly, but it did finally get through. \n\nNo matter what he did here, he was going to lose.\n\n\"I \u2013 I yield,\" he gasped from the pain as he raised his head, \"Please, ... I yield. I think I am blind in one eye. I cannot go on.\"\n\nAll that it bought him was her scorn and her curses in a language that they both understood.\n\n\"You are no Elven king,\" she spat in the snow in disgust, \"Go on from what? You have done nothing yet. What did you think that we do here, enemy? You think that we dance here, uh?\" She began to walk toward him, out of the field of his view on his damaged left side. \n\nHer thoughts went to Sariel, the sweet young boy-demon who she loved so fiercely as her nephew and taught whenever she could. This was too rough for him to see, as young as he was, but it illustrated something that she'd always said in her lessons.\n\nTurn anything that you can to your advantage. \n\nIf you cause damage, exploit it for all that it's worth. \n\nNever stop.\n\n\"You do not fight like a Drow,\" she said, \"You do not even fight like any Wild Elf that I have seen. Those ones can fight. \n\nAnd you do not fight like a king. No king yields - not among all of the Elder races.\n\nYou fight like a brawling drunkard.\"\n\nShe came at him from behind, winding her fingers into his hair again to give him an incentive to stand.\n\n\"Get up, or I pull out your hair,\" she said venomously, \"There is a lot, so I can pull all night if I wish, but you will stand.\"\n\nShe wasn't kind at all as she yanked and he began to get up.\n\n\"No one fights like the Drow,\" she said murderously, \"No one. \n\nYou, ... you fight like a goblin,\" she said, \"a stinking half-slug goblin.\" Her fist nailed his left eye again and he screamed in pain.\n\n\"You even squeal like a goblin, one of the nasty little ones who wiggle so well on my sword.\"",
        "He heard her low growl in his face from very close up, \"Do not tell me that you think you are blind in one eye, enemy. I can grant your wish with joy. Tell me next that you think your leg is broken and I will make it so.\n\nI am not here to brawl with you. I struggle here, trying to remind myself that I am only here to weaken you so that you are just as feeble as your sister was when her end came to her.\n\nThere is no yielding here, as there was none for Xunafae. This is your death which comes to you, nothing less. Be glad that it is not my part to finish it, for by now I would have flayed your skin from you.\n\nIt is what Drow girls do to worthless males such as you where I am from. Kneel.\"\n\nHe was slow about it, trying to fathom what she'd said. She cursed and kicked him behind one knee and he went to his knees anyway as she walked behind him.\n\n\"Raise your arms and bring your hands back behind your head,\" she said quietly. \n\nWhen he took too long with it, she wrapped her left hand around his throat from behind and the punch that she laid between his shoulder blades caused his spine to crack so that he heard it in his head as he gasped for air.\n\nShe took him by the wrists and in that instant; he knew a lot more about her. She was every bit as strong as she was blindingly fast. She could hold his arms here easily, though he struggled feebly once. Her knee in his kidney solved the issue and he held still, on his knees being bent over backwards.\n\n\"Cousin,\" she called out, \"Bring your lovely friend, the taller one. No one has told me her name yet.\"\n\nVadren looked at Ksyusha, \"Cha'Khah holds him for you.\"\n\nKsyusha walked into the clearing. Cha'Khah's face was fixed in concentration, but she did manage a smile, \"How are you called?\"\n\n\"My name is Ksyusha,\" she said.\n\nCha'Khah nodded, \"My cousin has told me the tale \u2013 at least some, and I wish to hear it all later. I wanted to kill you at first and I am still a little angry, but I understand how you spun the chase out, never hounding much. It was for your own reasons and for Xunafae as well. \n\nWhat would you have done if you have found her today and she still had a chance?\"\n\n\"I would have slain the dogs,\" Ksyusha said and Cha'Khah smiled, knowing the truth when she heard it. \n\n\"And if you had gotten there as she passed? What then?\"\n\n\"I would have slain the dogs and tried to find someone for her child, since I had to call this one to come every night. It was what I wanted to do, once I knew and I ran, but I was much too late. You had been there and gone by then.\"\n\n\"Then I have heard what I needed to hear from you,\" Cha'Khah nodded, \"I am told that you wish to weaken him further to make it even with his sister's run. I have seen your teeth. You are no blood drinker?\"\n\nKsyusha shook her head, \"My teeth are like all of my kind. I have no blood thirst. I am closer to the one called Selena, but ... I draw from darkness.\" she shrugged.\n\nCha'Khah smiled \u2013 in spite of everything, \"There is a very uncommon kind of beauty to you, and ...\" she dropped her voice and leaned a little, \"He would kill me to hear it, but I can say that Vadren looks to be badly hit, if you like him as well as it seems to me. Now,\" she indicated Garrend with a nod, \"we are here to do something other than behave like a pair of hens.\"\n\nKsyusha stepped in front of the beaten brute and considered carefully for a moment. He stared at her with cold beads of sweat standing out on his forehead. Her hands began to move a little. It held the eyes of everyone present so much that it came as a complete surprise to them all when she kicked him in the bag solidly.\n\nHe twisted in Cha'Khah's grasp and retched, but she held him fast as she laughed, \"I was not ready for that, \"she chuckled, \"What was that for?\"\n\nKsyusha shrugged, \"A year of having to listen to his threats with his spittle flying into my face almost every night.\"\n\nShe reached for his chest with one hand and laid her fingertips over his heart very lightly. It was done a few seconds later, Ksyusha shuddering a few times in the process and Garrend looking to have aged a bit, besides being a bloody ruin.\n\n\"He has, ... little strength, \"Cha'Khah said, amazed,\" I feel it.\"\n\nKsyusha nodded, \"He has enough to stand up and run. I think that Vadren knows.\"\n\nCha'Khah released Garrend and he collapsed onto the snow.\n\n\"I would hate it if he got away,\" the Drowess said, \"I would not stop myself if I hunted him and found him.\"\n\n\"There is nowhere for him to go,\" Ksyusha said, \"He killed Verrick and that one hangs in my power now. Garrend has no way to go home from here, other than walk, and it's a long, long way.\"\n\nNika was back and she'd gotten dressed again while Garrend was being humiliated. She walked up to Vadren and Ksyusha with a pleased little grin and asked Ksyusha something.\n\n\"Can she ride on your shoulders?\" She asked Vadren, \"Nika has spent much of the day in the air flying and she is a little weary now \u2013 but she still has enough of her boldness for this.\"\n\nVadren couldn't help his grin and he nodded. Ksyusha stood behind him to move his long hair forward, and he felt Nika climb up onto him easily. As she settled herself, she moved back just far enough to bend a little so she leaned over and kissed his forehead with a little smile before moving up again.\n\n\"Thank you and mind the tree branches, Nika,\" Vadren said as they began to walk.\n\n\"Nika was not there when it was said, but she often hears my thoughts as I hear hers. We wish to know of something that was said earlier,\" Ksyusha began, \"Nika and I think that we know, but please, tell us of the Parted Flanks of the Maiden.\"\n\nVadren began to chuckle, and in a moment it had turned into a laugh as they walked.\n\n---------------------------\n\nGarrend got to his knees several minutes later. He found himself alone again and he was \u2013 he was amazed to find that he was clothed and had his long knives.\n\nAll the same, he thought as he spit a half-mouthful of bloody drool onto the snow, he was in bad shape.\n\nHe looked around and saw only one being. It hadn't been there only a moment before, a huge canine with flinty-looking fur. As their eyes met and the ones that he looked into began to glow hotly, the growling snarls began.\n\nHe stood up and drew one of his blades. \n\nThe huge shape came nearer. \n\nWhen he was close enough for it, he thrust at the throat and the dagger was turned as though it had hit a boulder, and he felt the teeth as they sunk in through his coat. \n\nOnly one bite, and his guts were blazing agony and the thing hadn't even broken his flesh yet.\n\nGarrend backed away and turned, starting to run.\n\nShaevre stood there watching to give him a little time and a head start before she began to lope after him. He was large and hefty - especially for an elf after all, but he could still move at a good clip. When she judged the time to be right for it, since he was running uphill at the time, she broke into a run and it drove him over the rise to the shallow valley where one or two of Nika's lights still burned.\n\nGarrend didn't see them, but Shaevre did; the dark shapes which watched him run almost into the middle of them as they sat watching in the forest outside of the light.\n\nShevre didn't know what these beings were, and she'd ask when she got a chance, but as the last lights flickered out, the growls began in the valley.\n\nSheavre turned and trotted back when his screams began."
    ],
    "authorname": "TaLtos6",
    "tags": [
        "demon",
        "drow",
        "wild elf",
        "shadows",
        "mage",
        "warlock",
        "acolytes",
        "supernatural"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-32"
}