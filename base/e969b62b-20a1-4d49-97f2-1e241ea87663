{
    "title": "Right Kind Of Medicine",
    "pages": [
        "Mary's foot tapped rapidly on the floor as she sat impatiently in the waiting room. Abruptly she launched herself up off her chair toward the receptionist window. \"I have been waiting for 10 minutes now, what is taking so long?\" she hissed at the young receptionist Jill.\n\n\"I, I am not sure\" Jill said nervously \"I will go back and check how much longer it would be\" she said to try to calm Mary's obvious anger.\n\n\"Hurry up\" yelled Mary.\n\nJill rushed to the back while Mary returned to her seat. She leaned forward to the table in front of her and started restlessly shifting through the magazines. Cover after cover of happy people. \"How annoying\" she thought, \"such fake people pretending to be happy.\"\n\nJill found Dr. Martin as he just stepped out of an exam room. \"Dr. Martin, Mary is in the waiting room and she is already angry. What should I tell her?\"\n\nOver the course of the last few months, this occurrence with Mary has become routine. It is normal to not be seen right away, but as Mary attitude has grown more irritable and with her attitude she has also grown a sense of entitlement.\n\nDr. Martin exhales in frustration \"Tell her I am just finishing up and I will see her soon.\"\n\n\"Yes Dr. Martin\" Jill said as she turned back to the front desk.\n\nAs she approached the receptionist window, Jill calmly informed Mary that it won't be much longer.\n\nMary dismissed Jill's offer of comfort \"I would not be waiting if you were any good at your job\".\n\nJill felt horrible hearing Mary's insult and fought the urge to tell her off. Instead she calmly took some deep breaths and calmed herself down.\n\nMoments later, a patient exited the door back into the waiting room and the nurse followed keeping the door open and calling Mary's name.\n\n\"Finally\" Mary yelled.\n\nThe nurse led Mary to the open exam room and instructed her to sit. As the nurse went through the normal questions, Mary got angry \"I have already been waiting, where is Dr. Martin?\"\n\nThe nurse took it in stride and finished her questions and vitals checkup not acknowledging Mary's frustration or questions. Leaving the room she said the scripted \"Dr. Martin will be in soon\" before shutting the door behind.\n\nDr. Martin exited the other exam room and meet with the nurse by pure coincidence as she was about to add Mary's file to the shelf. The nurse turned to hand the file to the Dr. \"I see you finally met Mary. What is our chronic complainer here for now?\" he asked looking at her file.\n\n\"I don't know what she thinks is wrong but that woman needs to get laid.\" The nurse noted.\n\n\"What?\" Dr. Martin asked.\n\n\"Sorry, I know it is not appropriate, but when my friend got divorced she had that same attitude. I got her a vibrator and not long after she was back to her old self. Turns out she was sexually frustrated. That woman has it written all over her face.\" the nurse explained, then turned and walked back to the front reception area.\n\nDr. Martin looked at Mary's file \"huh, could it really be that easy\" he asked himself. After months of therapy referrals, MRIs, depression pills and the works, could she just need a good orgasm to solve her issues?\n\nThe doctor closed the file and opened the door to the room. \"Hello Mary, how are you since our last visit?\"\n\n\"Shitty, I still can't sleep. My mind is full on thoughts, I can't relax, I am stressed out. I need something to help me sleep. Those pills you prescribed are not doing shit.\"\n\n\"I see, has anything changing at work?\"\n\n\"No\" she hissed.\n\nCurious, Dr. Martin decided to probe a bit deeper. \"Mary, are you married\"?\"\n\n\"No, I got divorced 5 months ago from my cheating husband.\"\n\n\"Are you seeing anyone?\"\n\n\"No, men are dirty, cheating pigs.\"\n\n\"When was the last time you had sex?\"\n\nShocked, Mary was hesitant to answer but Dr. Martin looked at her again for an answer. \"A month before my divorce, about 6 months ago\" she disclosed.\n\n\"Do you masturbate?\"\n\n\"No\" she protested, \"What does this have to do with my symptoms anyway?\"\n\nDr. Martin came to a conclusion and wanted to test his new theory. \"I want to test some vitals a bit more in-depth. Get fully undressed and put this exam robe on. I will be back in a couple minutes.\" Dr. Martin said as he handed her the robe and exited the door.\n\nThe doctor walked to the front reception area. No one was in the waiting room at the moment and the nurse and Jill had been talking before looking up to acknowledge the Doctor. \"I think you are right about Mary\" he said to the nurse.\n\n\"What's that\" asked Jill.\n\n\"Sexually frustrated\" the nurse said.\n\n\"No way\" Jill said in surprise, \"she is a bitch but she is pretty hot, how is she not getting laid?\"\n\nDr. Martin pondered that thought to him-self for a moment. Mary was in her late 30's and had a nice figure and a pretty face. Her short black hair framed her face quite well, the only issue was her resting bitch face.\n\n\"Well doctor it sounds like you need to help her cum\" the nurse said jokingly.\n\nThe Dr. snapped back to reality hearing that thought.\n\n\"Lucky\" Jill said under her breath is a jealous way.\n\n\"What was that\" Dr. Martin asked.\n\n\"Sorry, she is cute. It would be fun to literarily fuck the bitchyness out of her with my strapon.\"\n\nDr. Martin never heard his young administrative assistant talk this way before. He barely talked to Jill except discussing tasks around the office. He imagined his 24 year old assistant fucking Mary with a strapon. \"So what are you going to do doctor\" the nurse asked.\n\n\"I am not sure yet\" he admitted. That realization settled in as he turned to head back to the exam room.\n\nKnock, Knock, the doctor tapped on the door before slowly opening it. Mary sat on the examine table with her arms crossed like she had been waiting long. The doctor closed the door quickly behind him and started to explain his makeshift plan. \"I want to check some of your vitals and your nerves to see how your body reacts.\" Mary exhales and consents to get started as she did hope to finally feel better\n\nThe doctor stood to the side of the exam table and instructed Mary to lay on her back. He extended the foot rest and washed his hands before grabbing his stethoscope. Turning back around to face Mary, he went through the normal routine. \"I need you to take some deep breaths for me.\" He placed the stethoscope below her shoulder blade, \"take a deep breath, and let it out\". He moved stethoscope to the opposite shoulder \"again\", and then moved slightly lower. His repositioned the stethoscope over the usual spots before settling on her breast which cause Mary's breathing to change. Not hearing any objections so far, Dr. Martin decided to continue and he slid the cool metal till he hit her clearly erect nipple.\n\nA slight moan was heard and Mary's breathing changed as her eyes closed. After some swift maneuvering around her tits, the Dr. clearly could tell Mary had been turned on from her breathing. He finished up and removed his stethoscope while patting her thigh and asked her to sit up. He raised her arm over her head and cupped under her breast and massaged it pretending to feel for something. Switching to the other breast, the Dr. admired the feel and size which was somewhere in the c-cup range and still perky. Dr. Martin turned to grab a pair of latex gloves.\n\n\"Have you ever lactated before?\" he asked.\n\n\"No, I never had kids\" she said in a more calm voice.\n\n\"I need to test the nerves in you nipples, this might feel a bit uncomfortable but also pleasurable. I will need you to tell me what you feel as I do this' he said.\n\nMary nodded in agreement. The doctor then undid the exam rob to expose her breasts and erect nipples. He was surprised Mary was calm, her body language and manor had changed to a much more pleasant patient. Dr. Martin started with gently rubbing his latex covered glove over her nipple. \"How does that feel.\"\n\nThe instant moan surely gave away how it felt to Mary, but from her closed eyes she managed to stop biting her lip enough to answer \"it feels good\". Internally her body is remembering how great things used to feel when she was sexually active. Her pussy started getting wet as it craved attention as well.\n\nThe Doctor alternated to her other nipple. Same result. \"good\" he reassured her, how about now\" he asked as he lightly pinched her nipple between his fingers.\n\n\"Aahhhh, yyyeesssss\" she caught herself \"I mean, yeah I feel it and it feels good.\" The doctor pinched harder. Mary bit her lip harder trying to hold in her pleasure and diluting her moans into a mild humming in her closed mouth. This caused the doctor to pinch harder and that feeling overwhelmed Mary as she softly screamed \"of fuck\" as she opened her eyes widely and breathed heavily. She looked devilishly seductive into the doctor's eyes as she recalled all the times she had enjoyed her nipples being used hard from clamps, pinching and biting. She was more than happy when the doctor did the same to her other nipple.\n\nFinishing up, it was clear how excited Mary was. He pulled the exam robe from her and instructed her to lie on her stomach. She obliged with haste almost eager to experience what other nerve testing was to come. She felt a cool liquid pour over her asshole. Shocked she let out a gasp. \"I need to check your temperature, taking it anally helps determine if your temperature is level throughout your whole body.\"\n\nHe rubbed the lube over her hole as Mary let out a soft \"ok\" through her breathing. In her previous sex life, Mary really liked having her asshole licked and having a finger inside, but was always nervous about being fucked in her ass.\n\nDr. Martin was amazed she believed his nonsense reasons and how fast she went from \"bitch\", into this accepting horny woman. Just slightly the doctor pushed his finger against her tight hole. Mary braced herself but did not object. Finally the tip slide into her hole and Mary simply melted in hoped to accept more inside. Instead the doctor withdrew his finger tip and replaced it with the thermometer. \"Please remain still\" he asked as he held the thermometer inside her. After a moment, it beeped and the doctor withdrew it slowly before pretending to look at it. \"So far, so good\" he reassured her. \"Do you mind rolling over on your back now? Mary lifted he body up to turn over on the exam table. \"Slide up higher please\" the doctor asked as he slid the leg extension back into the table. Rolling his chair closer to the end of the table, \"Please spread your legs open for me.\"\n\nMary instantly complied. Holding his gloved and index and middle finger up, the doctor started to pour lube on them. I am going to check your nerves down near your privates. Just like before, it might feel uncomfortable but also pleasant. Please share exactly what you are feeling to me.\"\n\nMary let out a soft \"ok\" and did her best to look down at what was transpiring. At this point she only hoped her pussy would be touched. She had been dealing with the burning desire to address the itch that had been growing within. Right as the doctor touched Mary's skin around her pussy, her eyes rolled to the back of her head and she arched he back, gasping air deep into her open mouth. As his touch moved to her clit, she moaned loudly. The doctor asked \"how does that feel?\"\n\nMary trying to contain herself moaned \"good\" as her body wanted more.\n\nThe doctor kept his contact on her clit and started to rub circles over it. Mary's legs and pelvis moved in response to meet the doctor's motions. It only took a brief moment before Mary grabbed the back of her legs preparing for her orgasm before exploding in pleasure. This familiar feeling that she deprived herself from as a punishment for failing to keep a happy marriage, brought happiness once again. Even through her mental fog as her body recovered she felt free from the looming darkness she carried for so long. The only reaction she could provide as she regained her senses was a huge smile painted on her face and a pleasant laugh escaping her mouth between her deep breaths.\n\nDr. Martin inspected his patient's response. \"I am happy to say that the nerves seem to be in good condition. How are you feeling?\"\n\n\"I feel better, is there any other treatment or testing you need to do\" she asked coyly.\n\n\"I am thinking there might be something we can assist with to help transition you back to a normal ongoing happiness. It is not standard procedure, so we need to prepare and have you sign a disclosure prior to treatment.\"\n\n\"Sounds good to me, when can we start?\"\n\n\"Possibly tomorrow, but it will need to be late in the day right before our closing time. Would that work for you?\"\n\n\"Yes.\"\n\n\"Ok, get dressed and see Jill before you leave to book it.\"\n\n\"Thank you Doctor\".\n\n\"You're welcome. We will see you tomorrow.\"\n\nExiting the room, the doctor headed to the front desk. \"Mary will be booking time tomorrow before we close. Fit her in as the last appointment please. Let's talk later as I will need your help.\" Jill was full of curiosity at what had happened and what the doctor meant by needing her help.\n\nAs Mary came back into the waiting room and approached the reception window, Jill clearly saw her tone and demeanor had changed. Mary had a smile and brightness to her aura. Jill did her best to hide her knowledge of what most likely transpired during Mary's exam. \"So we are seeing you again tomorrow\" she asked in the routine manner.\n\n\"Yes, Dr. Martin figured out what the issue is and said there is a treatment that will help.\"\n\n\"That's great\" Jill said trying not to sound as excited to hear the details as she really was. \"You are booked for 430 tomorrow, we will see you then.\"\n\n\"Bye\" Mary said as she left.\n\nAn hour later the doctor stopped by the front desk. \"What happened\" Jill asked in excitement.\n\n\"Listen, for purely medical reasons, I helped her get relief. She asked for other treatments, but ethically I can't do anything more with a patient. I let her know we would need a consent form signed which should cover any potential liability but even still, my medical license could be lost if I am involved anymore. If you really want to help, I think what you wanted earlier would be a huge medical benefit to Mary. She needs to feel the feeling of getting fucked again to break her out of this slump.\"\n\nSmiling ear to ear \"are you really serious\" Jill asked in disbelief.\n\n\"If you were earlier, than yes I am\"\n\n\"Oh god, I am going to fuck her back to normal doctor.\"\n\n\"What do you need from me?\"\n\n\"Nothing, I already have all I will need, I will make sure to bring it tomorrow.\"\n\n\"Sounds good.\"\n\nAs the doctor walked away Jill smirked, thinking about her task. At 24 Jill seemed like the quiet type. She hid her petite body very well by wearing oversized sweaters or jackets around the office. Her strawberry blonde hair was always pulled back in a bun or ponytail and she wore glasses which perfected her \"innocent\" look. Outside her work life, Jill was the opposite of innocent. She enjoyed men and woman, and regularly attends swinger parties. At 5'6\" and 110 lbs, she is usually the center of attention and gets \"man handled\" by most participants. While Jill enjoys it, she found a balance when she is able to take control and fuck woman with her strapon.\n\nJill continued to go about her day, but she kept imagining what was to come. She caught herself reaching her hand under her desk a few times to only be rejected by her own fault of wearing jeans. \"I need to start wearing something looser\" she thought.\n\nThe urge did get too much as she excused herself to the bathroom. She closed the stall door and wiggled down her tight jeans and panties which already had a large wet spot as they fell down to her feet. Sitting down and she started rubbing her pussy. Her fingers slide easily from her juices as she closed her eyes and focused on the pleasure.\n\nHer free hand slipped up her sweater and bra, pinching her nipple lightly. Jill fought the urge to moan as her orgasm built, but when it hit, she could not help letting out a faint squeak as she hunched over breathing hard from her open mouth. She pulled her soaked fingers from between her clenched thighs and sucks her juices off with her mouth.\n\nShe quickly got dressed and exited back to her desk, hoping her quick relief will allow her to focus the rest of the day.\n\n......\n\nThe next day, Jill entered the office wearing a tight grey tunic that reached just above her knees and black leggings. She left her glasses at home, opting for her contacts and her hair flowed freely down to her shoulder. This new outfit showed of her figure and petite frame, which caught Dr. Martin's eye as she looked unrecognizable from her normal look. Luckily for him, today was a day he needed to coordinate with Jill more often than usual. They reviewed the consent agreement for Mary, how Jill would administer the treatment. Jill was more than happy to go into details with the doctor.\n\n\"I brought a few items to help with her treatment. Of course my strapon, but I also brought my magic wand massager. This thing can vibrate the bitch out of her for a long time.\" Jill explained like it was normal. Dr. Martin was dumbfounded at this side of Jill. She never dressed to show off her body, yet today her perfect body was wrapped tightly in an outfit highlighting and clinging to every curve except for her waist which to the doctor's disappointment was hidden under the dress part of the tunic. The doctor glanced as Jill bounced around in her seat explaining the detail of her plan. He hoped to get a glimpse of her thighs. \"Want to see it?\" she said, interrupting his gaze.\n\n\"See what?\"\n\n\"The strapon.\"\n\n\"Where?\"\n\n\"We can go to an examine room real quick.\"\n\n\"Ok\" the doctor mustered, unsure of really what was to follow.\n\nJill grabbed her bag and walked to the nearest room, the doctor followed closely behind watching her ass the whole time. As Jill entered the room, she swung around in excitement to close the door and saw the doctor's eyes glaring down at her before quickly rising up to meet her eyes. \"Like what you see doctor?\"\n\nDr. Martin stumbled for words.\n\nJill seductively teased him \"do you want me to start dressing like this every day?\"\n\nStill the doctor started blankly lost for words.\n\n\"You know I am not going to get you in trouble. You are doing me a favor today so I will dress however you want and you can stare all you want. I actually like it. I only dressed that way before because I did not want to get fired or cause office issues by dressing slutty\".\n\n\"Nonsense\" the doctor chimed in, \"dress however you want\".\n\n\"Good, I always wanted to wear my fishnet body stockings to work.\"\n\nThe doctor nearly choked.\n\n\"I am just kidding Dr. Martin\" she said with a smirk \"although I could wear a small skirt and short halter top to make it more appropriate\" she joked again.\n\nThe doctor remained silent just nodding his head. Jill reached into her bag and pulled out the strap-on. \"Her it is. I kept my thick one at home, I am sure that prude never had her pussy stretched before.\"\n\n\"I...I think that is a good observation and probably the right call.\"\n\n\"Would you mind if I put it on now to show you?\"\n\n\"Umm...guupp...ummhm no, not all\" he said unsure of how to respond.\n\nJill lifted her tunic skirt and gave the doctor his prized view of her waist wrapped in her tight leggings. As she started to feed through one of the straps, her head snapped up at the doctor. \"How about giving me a hand?\"\n\nThe doctor wasted no time walking over and grabbing a strap. He tried not to touch Jill but she moved around on purpose to provoke some \"accidental contact\". Jill was really enjoying making the doctor uncomfortable. He was always nice to her, but somehow making this rich, smart, good-looking boss of hers blush felt empowering and turned her on. As the doctor tightened the strap, Jill turned sharply into him and his hand wedged between her thighs which she closed them around it. Unable to pull it free, the doctor let in linger for moment. Jill let out a soft moan, which caused Dr. Martin to panic and pull it free. The friction rubbed against her pussy and he clearly felt wetness as he pulled free. Jill let out another moan and lost her balance for a second as he pulled free.",
        "\"Mmmm Dr. Martin, now I know why Mary left with a smile\" she said teasingly.\n\n\"We should get back before someone notices us in here together.\"\n\n\"Relax, it's only Barb, the nurse from yesterday and she is out to lunch. Besides, based on our talks, she would welcome being in here with either one of us.\" Jill said as she approached the door.\n\n\"Aren't you going to take that off?\"\n\n\"Nah, it hides pretty well under my skirt. Besides I want to show Barb and I am pretty horny, maybe I will stroke it under the desk while the old people fill out paperwork. Wonder if any will catch on\" she grinned as she walked out.\n\nThe doctor lingered behind, \"what the hell is happening\" he said to himself.\n\nThe rest of the day was uneventful. Dr. Martin tried to avoid the front reception area and any other potential mishaps that can get him sued for sexual harassment. As he walked to one exam room, he heard Barb giggle loudly in excitement. He wondered to himself if it was because of Jill showing her the strapon.\n\nAs the last patient wrapped up their visit, Barb headed out. Mary was set to come in for her appointment in just a bit, but Dr. Martin asked Jill to keep it a secret between them.\n\nMary entered the office, this time with a smile. She approached Jill to check in. \"How are you today Mary?\"\n\n\"Great she answered. I am looking forward to this appointment\" She replied pleasantly\n\n\"Since this treatment is unconventional, I need you to fill out this consent form.\" Jill hands her the paper and Mary signs without even looking it over.\n\n\"Anything to keep feeling happy\" she said.\n\nJill turned to file the paper in a drawer. Looked over her should and said she would get the doctor in the back.\n\n\"Dr. Martin, Mary is here for her visit.\"\n\n\"Ok, I will get her situated, you lock the lobby door. I will come grab you in soon.\"\n\nThey both exited into the waiting room. \"Mary, come on back with me\" Dr. Martin said. As they entered the exam room, the doctor motioned for Mary to take a seat. He starts the normal procedure of checking her blood pressure and oxygen level. \"So how are we feeling today?\"\n\n\"Great, I have been in a better mood since my visit yesterday. If there is anything more you can do, I would appreciate it\" Mary seductively said.\n\n\"Well, I think we can offer another treatment, but it is unconventional. My goal is to help stimulate other nerves to help your body react and start getting back to normal again\"\n\nMary perked up excited and smiled ear to ear \"That sounds like a great solution doctor\".\n\nThe doctor stood up. \"Go ahead and get undressed. My assistant Jill will be in shortly.\"\n\nMary quickly undressed and leaned back with her arms braced against the exam table. A minute later Jill opened the door with a bag around her shoulder. She smiled and glanced over Mary's exposed body then turned to place the bag on one of the chairs.\n\n\"Hi Mary, I am going to help administer your treatment today. The doctor has instructed me to simulate some activities as well. I don't want you to feel nervous, but I will need you to tell me what you are feeling so we can measure the effectiveness of this treating and adjust any future treatments.\" Jill snuck that last part in as they never discussed any continuation, but they never discussed that this was a one-off so Jill planned to take full advantage of possibly continuing outside the office if Mary agreed.\n\n\"Why don't you hop on the exam table and lay on your back for me. Great, scoot down to the edge and spread your legs. Are you comfortable?\"\n\n\"Yes\" Mary answered. She was unsure of how her body would react to a woman's touch, but as she displayed her privates to this younger woman, Mary saw Jill glaring with a smile. \"Is she enjoying the view, she is really cute.\" At that moment Mary felt her pussy get wet and Jill noticed as well.\n\n\"Looks like you are ready too\" Jill teased as she turned to her bag. She reached in a pulled out a bottle of lube and her Magic Wand Massager. Turning to face Mary, she held up the device as to provide some insight. \"This is a personal massager, very powerful and great at relaxing sore muscles. It is also great at providing orgasms.\" She plugged the cord in and turned it on. The buzz from the vibration only grew in volume as Jill demonstrated the power settings.\n\nMary looked in awe as the large white head of the massager buzzed in a blur. She was no prude, she loved her sex toys when she was married, but turned her desires off in shame once she found out her husband cheated. This new device was something new to her, but it sounded like it was going to be fun.\n\nJill ran the massager over Mary's arm, eliciting a moan and a giggle from Mary. That was proof enough to Jill that Mary was ready and she was going to enjoy what Jill had planned. Jill continued the massager's path up Mary's arm and down over her nipple.\n\nMary's eyes closed as she let a more audible moan escape her mouth. Her arms extended over her spread legs and her hands ran up and down as she tried desperately to adapt to the pleasure without directly toughing herself. After all, this was a session from the doctors, why should she do any of the work.\n\nJill switched to Mary's other nipple and just as she did, Mary felt a cold liquid drip onto her numb nipple. She opened her eyes just as Jill had pinched her lubed nipple and began to rub it between her fingers. She tilted her head forward to observe Jill's methods, grabbing the back of her thighs to pull her head up for a proper view. Mary's mouth remained opened, holding her breath and moans as Jill once again switched and squirted lube on her other nipple. This time Jill turned the massager on high and the feeling was too much for Mary as she finally let out a scream of delight.\n\nJill took the moment to poor some lube over Mary's clit and lips before sliding the massager down between Mary's legs. Mary turned her head and closed her eyes as she let out a constant stream of moans. Jill slowly slid the massager up and down between her lips. The size of the massager head was able to keep contact over her clit as well as push her lips open. Mary's instincts gave in and started to massage her own nipples.\n\nJill kept up her onslaught but had moved her body between Mary's legs. Jill loved the sight of Mary's juices splashing off the massager head and notice and increase as more and more became visible just before Mary buckled her hips up causing Jill to refocus on her task.\n\nShe turned the massager to low and as Mary seemed to settle down, Jill would lightly push the massager against her sensitive lips again and again causing Mary to keep jolting and prolonging her orgasm.\n\nAs Mary finally started to settle down, she heard Jill turn the massager off. Mary laid with a smile and a state of bliss, oblivious of what Jill was now doing. Jill had pulled her tunic over her head removing it and exposing her sports bra and the strapon that Jill was now applying lube to.\n\nIt was not until Mary felt the familiar liquid pouring over her lips again did she realize this treatment session might not be over. Just as she tried to look down at what was transpiring, Jill pushed the dildo head easily into her lubed hole. Mary arched her hips to welcome the object entering her. The familiar feeling jolted Mary's senses as Jill pushed slowly inside then withdrew almost fully out and pushed slowing back in.\n\nJill kept her process up, slightly picking up the pace before squeezing more lube over her clit. Mary looked in lust as this pretty little girl pumped her pussy. Jill met Mary's gaze as they stared into each other's eyes.\n\nMary was stunned to realize Jill was enjoying this as much as she was, but that realization turned her on even more.\n\nJill broke off their mutual gaze for a moment, reaching for something without breaking the rhythm of her fucking. \"bbbbbzzzzzzzzzzzzz\" Mary heard before feeling the massager pressed again onto her clit. Already sensitive and from the dual pleasure, Mary squirmed and howled in a mixture or moans and screams. Jill switched the massager to high and Mary jolted off her back, her body and face scrunched up as she tried her best to not cause any interference in Jill's treatment.\n\nJill grabbed Mary by the hair causing Mary to look Jill in the eye again. As they once again met each other's gaze Mary's lust took control and she reached and pulled Jill in for a kiss. Jill returned her passion as their lips fought to gain position as their tongues plunged and wrestled in each other's mouths.\n\nMary reluctantly broke free and pulled Jill closer as she tried to bury her head into Jill's chest. Her orgasm hit hard which caused her to wrap her legs around Jill and pull her tighter. Jill mercifully removed the massager but the dildo was buried deep inside Mary as her muscles tried their best to milk it and push it out.\n\nOnce again Mary slowly regained herself; she pulled Jill in for another embrace and the two were lost in the moment of passionately kissing and running their hands through each other's hair. This time it was Jill who broke from their embrace as she withdrew the dildo out slowly, leaving Mary to lay back on the table in bliss. \"That was amazing. Do you offer ongoing treatments\" she half joked.\n\n\"What makes you think your treatment is done\" Jill snapped back.\n\n\"Oh really, is this extra covered by my insurance?\"\n\n\"No, but this is a gift from me\" Jill said.\n\nShe had lied to Dr. Martin. While it was true she wanted to fuck Mary because she found her sexy, she also wanted to hate fuck her for being a bitch over the last few months. It was not the agreed treatment Dr. Martin had limited Jill to, but he also said no kissing or exchange of bodily fluids but Mary broke that rule. \"Stand up please\" Jill instructed.\n\n\"What's next\" Mary asked.\n\nJill did not respond, but simply spun Mary around and bent her over, with her ass pointing back at Jill. Jill started to slowly run her fingers through Mary's soaked pussy lips. \"Since this is an additional part of this treatment. I will need verbal consent. Well, technically, you already consented to it in the agreement, but I just want to hear you say it for my own pleasure. Almost like an apology.\" Jill explained as her fingers started to slide inside Mary's soaked hole.\n\n\"Mmmmmm, whatever you want, I agree\" Mary said.\n\nJill slid her fingers out and lifted her hand from between her legs. She grabbed Mary by the hair and pushed her face into the table before striking her hand across Mary's ass check, the wetness from her own juices adding to the sting.\n\nThe shock caused Mary to jolt back but having her hair grabbed only caused more pain. \"Hey\" she pleaded. SMACK as Jill slapped her again. Mary could only wiggle her ass in protest. At first it was unpleasant, but as the sting subsided, Mary noticed her pussy was getting wetter and she was getting turned on. SMACK. This time Mary moaned instead of screamed.\n\n\"Good girl\" Jill said, \"now are you ready to apologize for being a bitch to me?\"\n\nSMACK, Mary moaned and mumbled a soft \"yes\".\n\nSMACK, \"what was that?\"\n\n\"Yes\" Mary cried \"I am sorry, I was a bitch and I am sorry\".\n\nSMACK. This time Jill left her hand on Mary's red ass check and started to rub it.\n\n\"That's a good start\" she said. Still grabbing Mary's hair, Jill positioned herself behind Mary and pointed the dildo toward her pussy and pushed forward. The lube around her lips help the head slide into its destination and as soon Jill felt no resistance she thrust quick and deep inside causing Mary to arch back in shock.\n\nJill continued to pump as hard and as fast as she good, pulling Mary's hair back to keep her body as close as possible for the onslaught. Jill reached around and pinched Mary's nipple hard causing her to squeal before Jill let go. Moments later, SMACK, Mary screamed in pleasure as Jill slapped her ass again. Mary could only take so much as her orgasm hit. Pain or not, her body tried to escape for relief by lunging forward onto the exam table and causing Jill to fall on top of her with the dildo still buried deep inside Mary.\n\nJill spent a lot of energy and frustration fucking Mary and now that she stopped, her own exhaustion set in. After a few minutes, Jill peeled herself of Mary as she remained splayed over the table.\n\nJill began to pack up and Mary lifted herself up in time to see Jill slip the strapon down her legs to step out of it. Jill looked over at Mary and sucked the dildo into her mouth, cleaning of Mary's juices. Mary looked in amazement \"God I wish I could taste her too\", Mary thought to herself.\n\nWhen Jill withdrew the dildo from her mouth she smiled at Mary \"Mmmmm, tastes like you really enjoyed the treatment\".\n\n\"You have no idea, I am a changed woman. No more bitch\" Mary praised.\n\nWell get dressed, we can't have you leaving looking like this\" Jill said as she turned to put her strapon away. While Mary slowly got dressed and composed herself, Jill put her tunic back on and wrote on a sheet of paper. Mary pulled up her pants as Jill extended the paper.\n\n\"That's my number; call me when you want your next treatment. I can see you after hours, so we don't have to be restricted to office rules\" she said.\n\nMary accepted the paper and looked at the number before Jill interrupted her with another passionate kiss. As Jill broke away once again, she smiled at Mary \"I will see you in the lobby when you are ready.\"\n\nJill opened the door and exited the room and walked into the lobby, she saw Dr. Martin doing paperwork at the reception desk. He looked up with an intrigued look to learn what had transpired. Jill seductively leaned over the counter. \"Are you going to share any details\" he asked.\n\n\"Sorry Dr. Martin. Doctor patient confidentiality\" she cooed. \"Just kidding, she will be out soon. I will give you the details tomorrow at lunch. Oh and Dr. Martin.... That desk hides things well. I stroked my strapon most of the day without anyone noticing. But the stain on your shirt is pretty visible.\" She smiled and then whispered \"You should have just joined us\". Jill then stood back up, just as Mary was opening the door back into the lobby.\n\nJill turned to greet her and politely offered to walk her out. Mary accepted as they walked to the exit.\n\n\"See you tomorrow Dr. Martin\" Jill shouted over her shoulder."
    ],
    "authorname": "MAwriter",
    "tags": [
        "doctor",
        "toy",
        "strapon",
        "vibrator",
        "patient",
        "workplace",
        "orgasm",
        "lesbian",
        "masturbation",
        "nurse"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/right-kind-of-medicine"
}