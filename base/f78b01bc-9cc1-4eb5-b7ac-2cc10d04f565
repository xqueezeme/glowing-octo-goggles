{
    "title": "Uncovering Jamie Ch. 02: A Sunday Treat",
    "pages": [
        "Uncovering Jamie Ch. 02: A Sunday treat\n\nSunday morning.\n\nI woke up in my bed, still in my makeup and red panties, cock hanging out and dried cum all over my chest and tummy. I had fallen asleep after masturbating, dreaming of all the crazy things yesterday had brought. I smiled. I had gone out dressed as a woman and no one had pointed or laughed or screamed or worse. I had passed as a woman. I had a head spinning moment of awe and fear and satisfaction.\n\nI knew in my heart it had been a lifechanging moment. I could do it again if I wanted. When I wanted. I could put on makeup and a dress and go out for a walk if I felt like it. My feminine self was no longer walled in by my apartment and my fears.\n\nI was still terrified of being noticed or recognized. But I had done it. I had really done it. And now I knew I could do it, that somehow made the fear a part of the exhilaration. I had been stiff with fear walking to the caf\u00e9 yesterday, terrified of all the people once I got there. But Diana's reaction and the fact that no one had seemed to notice anything out of the ordinary had twisted that knot of fear into something else. An appetite for more. It had been like being stuck on a really scary but exiting rollercoaster.\n\nAnd then walking home, a used slut in a borrowed coat, still scared but a little more confident. I laughed a little to myself thinking about it. Or a giggle?\n\nI dragged myself out of bed and into the shower and cleaned myself up. Made coffee. Teleported out of the stone age and into a modern, delicious, caffine-fueled life. Found some breakfast. It was 11 in the morning.\n\nMy phone rang. It was Diana. I felt myself tense up, my insecurities taking over. And excitement.\n\n\"Hello?\" I offered slowly.\n\n\"Good morning James. How are you today?\" She couldn't quite hide her playful tone behind the formal greeting.\n\n\"Uhm... I'm fine. How are you?\"\n\n\"'Oh I'm fine, fine. Although my pussy is a little sore, I met this cute girl yesterday that sucked on my clit for like hours.\"\n\nI nearly spilled my coffee laughing and smiled. She really knew how to break the awkwardness.\n\n\"Well, well, good for you. And who might this lucky girl be then?\"\n\n\"Oh just a girl I met at a caf\u00e9 uptown. Hot blonde, a little shy but great tongue. Cute little nose. A real slut when you get her going. Actually you know her quite well, she's your roommate.\"\n\nI blushed listening to this. \"Really?\"\n\n\"Yes really. Don't be jealous James, it doesn't suit you. Now, would you be a dear and put Jamie on? We girls need to chat.\"\n\nI stared at my coffee. Didn't know what to do. But I liked this game. I loved that she was talking about me as two different people. Talking about me as a girl. I moved the phone to my other ear and spoke a little more softly.\n\n\"Hi this is Jamie. Who's this?\"\n\nI could hear her smile widening. \"Hi Jamie baby. I just wanted to call to thank you for a wonderful day yesterday.\"\n\nI blushed even harder. \"It's...no...thank you...I...\"\n\n\"Yeah yeah, so go check my coat pocket now.\" What? Coat? What? I walked into the bedroom, found the coat on the floor and fished a lavender lace thong out of the right hand side pocket.\n\n\"Did you find my panties?\"\n\n\"Erm yes?\"\n\n\"Put them on slut. Send me a picture.\" My heart started pounding. I put down the phone and pulled the panties up my ankles. Her panties. Diana's panties. I shuddered as I pulled them tight in between my cheeks, fitting the front snugly around my still soft but stirring cock. We wore a similar size it seemed, despite the height difference.\n\nI was wearing her panties. Wearing Diana's panties. My cock was in her panties. Her dirty panties from yesterday. Oh god.\n\nI ran my hand over the lace front, cupped my package, squeezed a little. Rubbed her dried essence into my balls. Oh so fucking hot.\n\nA distant sound caught my attention. ...Jamie?!\"\n\n\"Uh, yes?\"\n\nI heard her laugh.\n\n\"So I guess this means you like them?\"\n\n\"Oh god yes\"\n\n\"Goooood\" she purred. \"Show me!\"\n\nA picture of myself in panties had never left my phone. But now I didn't even think about it. I posed for a picture down the length of my body, the lavender lace prominent at the center of it. I sent it to her without hesitation.\n\n\"Oh dear Jamie, you are such a slut. Sending people lewd pictures of yourself like this. You dirty girl.\"\n\nMy face burned. My cock strained against the soiled lace.\n\n\"I think I can see a cute little girlcock through the material. Is that a girlcock Jamie?\"\n\n\"Yes\" I breathed heavily.\n\n\"Who's girlcock is that Jamie? Who owns that pretty little ladycock you've got there? Tell me baby. I want to hear you say it.\"\n\nI couldn't breathe. I closed my eyes. I felt my lips move. Heard my words uttered in complete submission.\n\n\"It's yours Diana. It's your girlcock.\" I heard her heavy breath. She was obviously enjoying this.\n\n\"Yes it is Jamie, oh yes it is. My little girlcock, on my beautiful slut, wearing my dirty panties. Do you like that baby?\"\n\n\"Yes\" I wanted to scream. It came out a whisper.\n\n\"Are you going to wear them all day for me?\"\n\n\"Yes.\"\n\n\"Good. You look hot in them baby.\" She seemed to switch gears.\n\n\"Are you free today?\"\n\n\"Yes?\" I said. It was like I had been turned into a one syllable doll by her words. She did things to my brain that I didn't know could be done. And I loved it.\n\n\"OK great!. Now then, put the phone down, put on your makeup and a dress and meet me at Rusty's for lunch. See you there baby!\"\n\nShe hung up.\n\nWhat. What? No. No! Rusty's? James went there. I mean I went there. Fuck! I mean... Fuck!\n\nMy brain simultaneously tried to grasp the fact that I had in a split second thought of myself as another person, that Diana wanted me to meet her in public again, and that she wanted to meet me at a diner in my own neighbourhood... as a girl. As Jamie. As a girl. With makeup. And a dress. As a girl. Jamie. Not James. Shit.\n\nThis is what being a horny bastard will get you into James. I couldn't do this.\n\nMy phone chimed.\n\n\"Yes you can. It will be OK.\"\n\nDamn. That was impressive. I stared at the phone. Fuck. I'll just put on some makeup then. She'll come to her senses. She can't make me go.\n\nBathroom. Makeup. Eyeliner perhaps a bit too exaggerated. Dark red shade of lipstick. Hair transformed from James's idiotic bedhair sticking out all over the place to a feminine chic pixie. Hell, I wasn't too bad at this really.\n\nI stepped back. Jamie studied me from the mirror. All that dark around her eyes made her a bit more fierce. Not the innocent girl who left the apartment yesterday.\n\nOh damn. I guessed I could at least put on a dress and see how I looked.\n\nBedroom. I found my sundress in the closet and slipped it on. Navy blue with a delicate flowery pattern, it worked well with the makeup. You knew it would you ass - Jamie stared at me with a gentle sneer. It's not like you haven't tried this out before in here.\n\nExactly. In here. Fuck. I stared at the girl in the mirror.\n\nI walked quickly to my bedroom, grabbed my phone, my grey cardigan and Diana's coat, got my keys and black flats at the door and suddenly I was standing on the landing, door slamming behind me.\n\nI stood there forever. Or a second. My blood raced. My mouth was dry with fear. My heart sang with joy.\n\nI ran down the stairs, the hem of my dress swishing about just above my knees.\n\n---\n\nRusty's was full of people. I could see it from a distance as my feet navigated on their own, my brain completely occupied with this potent mix of fear and excitement.\n\nOf course it was full. It was noon on a Sunday. Fuck.\n\nWhen I got closer I saw her sitting at a table outside. She looked up and saw me, and beamed with the most beautiful smile I had ever seen.\n\nI forgot all my fears. Well, not all of them, there were too many. I was just a bit lower-grade terrified but it was OK since she was there. It would be OK. She said so. Yeah. It would be OK.\n\nMaking a beeline for my source of confidence I nearly walked straight into a man leaving his table.\n\n\"Oh sorry. Sorry\" I mumbled flustered.\n\n\"That's OK miss. No harm done.\" he smiled and turned away.\n\nI sat down blushing like a wildfire. Diana seemed to be trying to perfect her Cheshire Cat impression.\n\n\"What?\" I said, sounding a little annoyed.\n\n\"You look so cute when you blush like that\" she grinned at me, her red hair burning in the sun, eyes sparkling, a hand under her perfect chin.\n\nI melted. How could I not?\n\n\"Well I'm glad you like it, it doesn't take much to set it off.\" I cracked half a smile. \"So you like your girls with faces like firetrucks then?\"\n\nShe laughed. I lost it and joined in.\n\n\"Love'em\" she laughed, the tension broken.\n\n\"Thank you\" she said when we had attained a more ladylike state.\n\n\"What fo...\"\n\n\"For coming\" she said looking straight into my eyes. \"I wasn't sure you would.\"\n\n\"Neither was I.\" I looked away.\n\n\"I'm so glad you did.\"\n\n\"Me too\" I said. And as I said it I realized I really was. I was glad. I was out. Free.\n\nShe smiled. That smile just wasn't going away. I wasn't complaining.\n\n\"The best way to wash away your fears is to face them.\"\n\nI looked at her. I had needed a push and she had given me one. I loved how she seemed able to read me.\n\n\"So, are you wearing them?\" she suddenly asked.\n\nI looked down \"Not so loud, please!\"\n\n\"What?\" She asked innocently.\n\n\"People will hear.\"\n\n\"Hear what baby? Hear about how you are wearing panties?\" Teasing. Poking lovingly at my insecurities with a stick.\n\n\"You know what. I... I can't...I'm not ready for...\" My face could have lit up a certain disreputable district in Amsterdam.\n\n\"Yes you can. And yes you are. You know why? Look at me baby.\" I looked up.\n\n\"Because girls wear panties all the time. I'm wearing panties. So what if my cute friend is wearing panties too? She's a girl isn't she?\"\n\nI squirmed a little. \"Well...\"\n\n\"Jamie?\"\n\n\"Yes?\"\n\n\"You are a beautiful woman. Own it.\"\n\nI sat there stunned. She had called me cute, beautiful and pretty before. But never a woman. Never a beautiful woman. There was nothing but loving sincerity in her eyes.\n\n\"Is this who you really want to be Jamie?\"\n\nI felt my throat tighten.\n\n\"So much. I want it so much.\" Whispers. \"I don't know why, I just need it. I can't go back to not having Jamie in my life. I need her.\" Tears were threatening to well. \"It's like I'm two people and I need them both. I mean am them both. Oh fuck. I don't know who I am.\"\n\nShe reached over and took my hand, her face sweet with emotion.\n\n\"I know. You're both. And they are both sweet and kind and beautiful each in their own way. We won't let anyone take that away baby. It's going to be OK.\"\n\nI was falling hard for her. Was already fallen. Dead flat at the bottom of the stairs, looking up at her like a puppy that just wants to follow her master everywhere she goes. I was hers. Completely.\n\nShe squeezed my hand. I gazed into her mesmerizing eyes and swallowed my tears. It was going to be OK. I was going to be OK. With her.\n\nAnd then we ordered, chatted about everything and nothing and ate. Just enjoying the moment and each other's company. Just two friends having lunch. It was heaven.\n\n\"Now drink up baby girl, we are going shopping.\" She winked lovingly at me.\n\nShopping?\n\n\"Where are we going?\"\n\n\"Just trust me\" she smiled.\n\nI did.\n\n---\n\nWe walked over to Gardner Avenue, busy as always even on a Sunday. Lined with mostly shops, restaurants and caf\u00e9's it was the perfect place to find whatever you needed. Diana was easy to chat with, interesting and funny, her joyful nature shining through. My insecurities had taken a back seat and I was finally properly enjoying myself. I had dreamed of something like this but my imagination had never extended to it feeling normal. Just walking and talking. Like proper girlfriends.\n\nSuddenly Diana took my arm and guided me towards the doors of a department store. Fear came rushing back. Walking down the street was comfortably anonymous. Navigating a store and potentially talking to staff was up close and personal. Potential embarrassment material. I knew I would probably blush like a nervous tomato.\n\n\"Relax, we just need to find you a handbag. You can't keep carrying your phone in your hand like that.\"\n\nOkay. I could do that. I could buy a handbag without dying of embarrassment. Probably.\n\nThe bags and accessories department was right at the door. We looked through it and Diana picked out a nice little brown leather shoulder bag that she said would \"go well with nearly everything.\"\n\nI started to walk towards the cash register but she grabbed my arm.\n\n\"You know, since we are in here, lets browse around a little.\" She had a mischievous twinkle in her eye. \"You know the store rules right?\"\n\n\"Uh, what? You break it you buy it?\" I was confused.\n\n\"No silly, any time we get on an escalator you have to kiss me.\" She smiled at me. And pulled me toward the escalator.\n\nShe got on first and turned to me, the escalator stairs elevating her head up to mine.\n\n\"See? Perfect place for a kiss.\"\n\nI leaned in to give her a light kiss on the lips, but she pulled me in and planted a real one on my mouth. And held it.\n\nI melted into her kiss, forgetting everything and everyone around us.\n\n\"There you go baby\" she said when she let me go again. \"Mmmmm you taste so good. Everywhere.\" Her breath caressing my neck as she whispered.\n\nThere was a reaction in my panties. \"Ooommffff\" I said, eloquently expressing the feelings of a girl in a department store who feels blood rush to her cock after a particularly sexy kiss from her girlfriend.\n\n\"You liked that baby?\" her eyes suddenly hungry with lust. \"There's more when we go down.\"\n\nShe turned and we stepped off, straight into the lingerie section.\n\nOf course.\n\n\"Erm...\" She took my hand and pulled me into the jungle of lace and bras.\n\n\"Uh, Diana? Please?\"\n\n\"Don't worry baby, just going to check something.\" My head swam in the sea of pretty lace and silk. Oh how I had wished for the courage to walk into a store and buy lingerie for myself. An now I was here. Could I pass up the opportunity?\n\nThe decision was made for me. Diana approached a sales lady and asked if they had any lingerie sets that catered to AA cups. I blushed furiously as the woman gave us a quick glance and came to the obvious conclusion that it was my small bosom that was in need of said support.\n\nI almost started to make excuses to get away, but she just smiled and said \"Of course, right over here\" and led us to another section.\n\n\"These are our matching sets, both lace and satin. You can also get more floral patterns and silk over to your right. Many of these come in AA cups, you will see the sizes on the hangers.\"\n\nShe looked at me. \"As you see many of the sets have matching garter belts, and we do carry stockings if you are interested in finishing the look?\" She smiled at me expectantly.\n\n\"Uhm...\"\n\n\"Yes please\" Diana took charge. \"Some black holdups and fishnets would be nice, if you have them.\"\n\n\"Certainly.\"\n\nAs she whisked away to find the stockings Diana rummaged in the racks and brought out two sets of amazing looking sets of lacy things, one deep red and the other green. I had never owned or tried a bra but these looked really pretty with the rest.\n\n\"What do you think?\" she asked, \"Red or green? Or do you like some other color better?\"\n\n\"Jesus\" I blurted. \"They are beautiful.\" I ran my hand over the lace.\n\n\"Wait until you see yourself in them baby. You are going to look so fucking hot.\"\n\nI was feeling hot already. Just being there in this lacy heaven was such a thrill. Discussing what lingerie I should wear, how I would look in it.\n\n\"Have we decided?\" Our helpful lady was back with some stockings.\n\n\"We'll take these two\" Diana said, \"and the stockings.\"\n\n\"Excellent, very well chosen if I may say so\" the woman smiled at me and led us to the register.\n\nMy face burned as Diana declared \"my treat baby\" as the sales lady tallied up the items.\n\n\"Thank you and I hope you will be very happy with your purchase\" she said smiling at me as we finished and turned away.\n\nI was still flushed red and I could see Diana smirking to herself as she took me towards the changing rooms. I stiffened.\n\n\"Don't worry, I'm not going to make you try them on here. We'll do that at home.\"\n\nWe slipped behind one of the curtains. I could hear women shuffling in and out of clothes around us.\n\nDiana leaned in and whispered in my ear. \"Show me my panties.\"\n\nMy cock raged. My breath shallowed. I put everything down and my fingers found the hem of my dress and started to lift it.\n\n\"No, not like this. Take it off.\" I must have looked incredulous. There were people just on the other side of that thin curtain. What if someone opened it?\n\n\"Take. It. Off.\" Her face was serious. The lust burned in her eyes. Lust for me. Making me take off my dress was making her horny. I loved that.\n\n\"Yes Diana\" I said. Her stare was intense.\n\nI pulled off my cardigan and let it drop. My eyes held steady on her face. I reached up to my neck and unfastened the button that held the back together. I pulled the dress over my shoulders, then let it fall to the floor around my ankles.\n\nI stood there naked except for my flats and her lavender lace thong. I had loved all our \"showing\" sessions, but this was way beyond those. A thousand times better. I ached with excitement. I was so horny I thought I would explode. She just stood still, her eyes roaming my body, a little smile playing on her lips. Lust colouring her face.\n\n\"Turn around\" she said. I did. And stood face to face with a full length mirror. And myself.\n\nJamie stood there, pretty in her accented makeup, her little nipples perked up, her pale smooth body carrying the lavender lace well, her girlcock trying to burst from it's prison. Behind her Diana stood fully dressed, obviously admiring the view.\n\n\"Turn\" she said again and as I turned she stepped closer, her lips finding mine and her fingers tracing the outline of my cock through the thin material. I groaned as she touched me.\n\n\"Quiet\" she whispered, and squeezed me with her fingers. It felt so good. But I held my moan.\n\n\"You are such a slut Jamie. I love how much of a slut you are. Walking around in public with a hard cock under your dress? And wearing someone elses dirty panties? Tsk tsk. You should be ashamed.\n\nShe fell to her knees and pulled down the front of the panties. My cock sprang free, rock hard in front of her face. She stroked it slowly. I was in heaven.\n\n\"Would you like me to suck it Jamie? Do you want me to suck that cute little girlcock?\" Her teasing eyes looking up at me. I could only nod and hope.\n\n\"Well you are going to have to wait. You've got to earn it baby.\"Then she gave it a quick kiss on the head and stood up.\n\n\"Put on your clothes and meet me out front. Be quick baby. I'm taking you home.\" She turned quickly, swept open the curtain and left, drawing it again.\n\nI just stood there pulsating, rock hard, sweating. I wanted to scream. I wanted to cum so bad. The brief touch of her lips still burning on my cock. I tried to get it to fit back into the panties but there was no chance. At last I drew it up towards my stomach and tried to make the panties hold it up against my body. It didn't really work. I put the dress back on and nearly panicked over the obvious bulge in the front. I threw on my cardigan again and grabbed my shopping bag. It would have to do. Holding it strategically in front of me I exited the curtain and walked down the corridor. It felt horrible and awesome.\n\nDiana was waiting at the escalators.\n\nShe took my hand smiling.\n\nWhen she pulled me in for the obligatory kiss her lips stopped close to mine and her eyes met mine, her face a combination of playfulness and lust.\n\n\"So that wasn't so bad, was it?\" she whispered.",
        "\"No, it was fucking hot\" I whispered back.\n\n\"You're welcome. I'm so proud of you baby.\" My heart warmed. \"You know she made you, right?\"\n\n\"What?\"\n\n\"I mean she knew. The sales lady.\" My head span.\n\n\"What?!\"\n\n\"Oh you look good, so good baby, but even you can't fool a woman who sells lingerie for a living.\" She laughed. I burned with embarrassment. My cock found that a source of extreme excitement and made no attempt to settle down.\n\n\"Don't be embarrassed baby. She obviously liked you. I think she may have found herself regular customers.\" And then she kissed me. Happiness took over my brain. I didn't care that I had been found out. Just being there, being kissed by her, was bliss.\n\n---\n\nAll the way to her place she talked about how sexy I would look in the new lingerie, how excited she was to see me in them. How she wanted to fuck me in them. She told me she would make me wear them to work and show her. How our coworkers might catch a glimpse of lacy panties or see a bra line under my shirt. Slowly winding me up, driving me crazy with lust.\n\nAs soon as her door closed behind us her tongue found my mouth. Her fingers ran up under my dress and up to my ass cheeks, cupping them. Her touch was electrifying. My cock strained the lace. She grabbed the string of the thong in her fingers and pulled. I groaned as the panties tightened around my hardness.\n\n\"Did you like going out in my dirty panties?\"\n\n\"Yes.\"\n\n\"You are such a hot slut Jamie.\"\n\nWe kissed. Fondled each other. Moaned each other's names.\n\nHer hand found my cock. My hand found her pussy. Stroking each other. Working each other up. So good. So hot. Then she stopped and pushed me away.\n\n\"Take the bag. Put on the green ones and the fishnets. Come to the bedroom and show me.\"\n\nI went into the bathroom and took off all my clothes. Brought the green lace out of the bag and admired it. I fastened the garter belt around my waist and instantly loved how the colour contrasted my pale skin. Then I drew the fishnet stockings slowly up my legs, one by one, and attached the straps to them. Standing up, I fastened the bra around my chest and adjusted the straps. Even though the cups were small I didn't have the assets to fill them. Wearing a bra felt a bit weird at first, but the lace was sexy and it fit me nicely. I studied myself in the mirror. The set made me look a lot more feminine than just panties. I absolutely loved it.\n\nI had to think hard about some work projects to get my cock to cooperate but I finally drew the panties up my stockinged legs and fitted it inside. I borrowed a bright red lipstick and a mascara for a little touch up. Then I put on my most sultry face and walked back to the bedroom.\n\nCandles were lit, slow music was playing. Diana lay on her bed in a light blue bra and matching garter belt, lace top nylon stockings. But no panties. Where her thighs met The only decoration to be seen was the fiery red tuft of hair at the top of her slit that had tickled my nose yesterday afternoon. She looked like a ton of sex.\n\nShe opened her mouth in awe. \"Wow. You look so fucking hot!\"\n\n\"Thank you\" I said softly. \"You too. You are so beautiful.\"\n\nShe scooted to the end of the bed and sat there.\n\n\"Turn around for me.\" I did. Enjoying what had become our thing. Me on display and her watching. I turned in a full circle. She stood up.\n\n\"Get on the bed.\" I crawled on to the bed, feeling her looking at my ass. Then I lay down.\n\nAs I did I saw she had her phone up and was taking pictures of me. It felt so hot. I posed as best I could, lying in her bed. My hands finding my bra, pulling on my panties, turning to show her my ass and legs in better positions. Having fun with it.\n\nShe suddenly threw the phone away and jumped on the bed, straddling my legs. On her hands and knees she bent her face down to my panties and ran the tip of her tongue up the bulge of my cock, over my garter belt and all the way to my mouth, never losing contact with my body.\n\nIt was a passionate kiss. Wet. Hot. Deep.\n\nThen she raised herself and moved further up, and I knew what was coming.\n\n\"Eat me Jamie\" she said as she lowered her pussy to my mouth.\n\n\"Eat my pussy slut.\"\n\nI dove into her. I loved this so much. I sucked her labia into my mouth, plunged my tongue into her opening and licked and sucked and rubbed her clit. I savored the taste of her flowing juices. I had never been with a girl that got so incredibly wet. I bathed my face in it, drank it in.\n\nHer hands held my head while she ground her pussy into my face. Moaning, breath quickening, muscles tensing and relaxing around my head as she rode me towards her edge.\n\nSuddenly she broke contact to switch positions, and I felt her mouth on my panties as her pussy settled on my face again. I licked her furiously as I felt her hands roam over my thighs and spreading my legs, her fingers pulling my thong out of the way and her tongue bathing my cock with long licks up and down the shaft.\n\nShe sucked my balls in her mouth, making a little popping sound when she released each one, and then plunged my cock deep into her mouth. I pushed as far into her pussy as I could reach, tongue fucking her while she sucked me. Her moans grew louder on my cock as I held her down to my face with my hands around her waist, never giving her a rest from my tongue and lips on her most sensitive spots.\n\nI felt her muscles tense, her mouth releasing my cock and then her moans became a wail as her whole body shuddered in orgasm, clenching my head between her thighs.\n\nComing down from her high, she rolled off to face me. A kiss. Tender and slow. Deep. Loving.\n\n\"Mmmmm....\" she purred, \"you are very, very good at this.\" I smiled.\n\n\"I might just make you do that all the time.\"\n\n\"Whenever you want to, I will. My tongue is yours\" I said, smiling.\n\nShe smiled back. \"Slut.\" Her hand found my cock. I groaned as she stroked me.\n\n\"My cock. My tongue. What else is mine Jamie?\"\n\n\"Everything. All of me. I'm yours. Please.\" My eyes closed, I gave myself to her as her hand slowly caressed my hardness.\n\n\"Yes\" she breathed in my ear, \"You are mine. All of you. Your cock is mine, your tongue, your mouth, your pretty green eyes, your legs, your tits. Your sexy ass is mine Jamie. You are mine.\"\n\n\"Yes!\" I exhaled.\n\n\"Who owns you Jamie?\"\n\n\"You do Diana. You own me.\"\n\nHer grip on my cock hardened and her stroking grew faster. She kissed me with a furious urgency.\n\nThen suddenly her lips were gone and I felt her straddle me. I opened my eyes watching as her hand guided my cock to her wet entrace. Our eyes locked as she sank down on my hardness, engulfing me slowly. She felt sizzling hot inside as I filled her. She pulled her bra down over her breasts and pinched her rosy pink nipples, her eyes closing and her mouth opening in perfect pleasure.\n\nI looked at her in awe as she rode my cock slowly, the beauty of her curves undulating on top of me, building in rhythm. I knew the picture of our first fuck would stay with me forever, her red hair and rosy nipples bouncing and swaying in my mind, our stockings rubbing together as her feet hooked over mine, our bodies and the lingerie glowing faintly in the candlelight.\n\nShe fell down on my chest and my hands found her ass. Her eyes stared wide open into mine as I pounded her furiously, the deep sound of bodies slamming together again and again filling her bedroom.\n\nI was so close. She could see it in my face.\n\n\"Yes Jamie, yes! Cum in my pussy! Do it! I want to feel it inside me! Give me your girlcum Jamie!\"\n\nIt started in my cock and then washed over my whole body like a bomb. I shuddered and screamed, thrusting my cum into her again and again until I had no more to give. All the while listening to her pleading for me to fill her with it. It was by far the most intense orgasm of my life.\n\nShe lay on top of me as I came down, my breathing slowing, just holding me tight, kissing my face, stroking my tousled hair. My cock softening inside her.\n\n\"Good girl.\" She said, smiling at me. I smiled back.\n\n\"I love feeling your girlcum in my pussy baby\" she whispered, \"do you want to taste it?\"\n\nI probably looked a little hesitant. She smiled.\n\n\"I'm going to use my cute little slut mouth to clean up you mess baby. OK?\"\n\n\"OK\" I mouthed.\n\nShe drew herself up from my soft cock and I felt my cum leak down on me as she moved up my body. Her pussy was glistening with the mix of cum and her own juices, a large drop forming at her entrance waiting to fall on my face. She lowered herself down on my mouth and I reached out my tounge and plunged into her.\n\nCum came rushing out of her into my mouth as my tongue opened her up. It pooled at the back of my throat mixed with her juices. It was a bit strange at first but the combination of our tastes and her pussy rubbing on my face excited me. I started licking her all over using my tongue and lips to both clean her up and eat her out. Her fingers wove into my hair, grabbing and pushing me into her pussy.\n\n\"That's it slut. Oh yes... oh yeeees... eat me Jamie, suck my clit baby, eat your cum you slut.\"\n\nHer dirty talk intensified quickly and I would feel her tensing up, the familiar signs of her orgasm showing. I went crazy, rubbing my whole mouth on her, shaking my face, licking and sucking every inch of her pussy, then flattening my tounge on her clit I sent her over the edge.\n\nThere was no wails, no screaming. She held her breath for the longest time and then it suddenly exploded out of her as her body crunched up. I kept on licking her until she was pushed off me and fell on the bed, her leg still draped over my neck, shaking. I watched her lying there, little jerks and shakes in her body for a while before her breathing relaxed and she looked at me.\n\nThat smile.\n\nShe shifted and brought her lips to mine.\n\nHer kiss signified both an end and a beginning.\n\n \n"
    ],
    "authorname": "redgarters",
    "tags": [
        "crossdress",
        "trans",
        "voyeur",
        "erotic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/uncovering-jamie-ch-02-a-sunday-treat"
}