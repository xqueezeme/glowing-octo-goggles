{
    "title": "A Daring Reporter Ch. 06",
    "pages": [
        "Lisa Marvell, star reporter and popular anchor for Channel 4's weekday news broadcasts, was exhausted. She had just slept for ten hours, not waking until almost noon on Saturday. Things were getting out of control, she thought. Lisa loved her work, and the Friday Night Special Edition series featuring the \"Women Who Dare to Bare\" reports had driven ratings through the ceiling and made her the most widely recognized TV personality in their broadcasting region. Job offers from other stations continued to pour in, as well as requests to endorse products, make live appearances, and appear in men's magazines. A cable network had already approached her three times about developing her own show with an emphasis on adult-oriented topics and a promise of the greater freedom that cable could provide. In addition, they offered the option to syndicate her reports online and in local markets. And each time, the offer had risen another $10,000 dollars.\n\nShe couldn't believe it had all worked out so well. Yes, she had appeared on camera in some very revealing outfits and been called upon to strip naked in front of strangers. The whole world had now seen her bare butt on more than one occasion, in reports that she herself had edited and then allowed to be posted to the internet. There were things she had done over the last two months that were somewhat humiliating, but there were many more moments that were thrilling and empowering. She only had to think back to last night's broadcast and the feature story on nude modeling. The photo session with her colleague and Channel 4 weather reporter Natalie Johnson had been fantastic, and the text message she had just received from the station manager said the ratings had been the highest ever.\n\nBut things were getting out of hand. The pace of the work was exhausting. In addition to her normal ten-hour days during the week preparing for the 6:00 and 11:00 news reports, she spent many extra hours in the editing room getting her \"Dare to Bare\" stories ready for broadcast. And the raw footage for that was now routinely shot on weekends, meaning that she had to maintain this pace seven days a week. Furthermore, she had now run through all of the ideas initially agreed upon by the team, and the producer kept pressuring her to settle on new subjects for her reports. And each report pushed her limits further while opening her up to riskier and potentially more embarrassing situations.\n\nEver since the writers had gone to work on the series of reports on Women Who Dare to Bare, their favorite topic seemed to be strippers. Lisa had done her best to put forward other ideas and to film those reports firsts -- an artist's model, a nudist camp, and last week's photo session. But the simple truth was that the remaining options all seemed pretty lame -- naked house cleaners or stripping telegrams -- and a stripper seemed an undeniably appropriate choice for the series.\n\nSo, reluctantly Lisa had agreed that that would be the next report and that, in keeping with the format they had now established, she would combine interviews with actual strippers and shots of them at work, culminating with Lisa performing a striptease herself. The team had identified a local \"gentleman's club,\" the Starlight Lounge and Theater, that they described as \"the least seedy\" establishment of its kind in the area. Bill Reinhart, the producer, had worked out a deal allowing them to film on the premises on Saturday while Lisa went on as part of the last show. She was to be billed as a \"new face in the world gentleman's club, appearing for the first time midnight only on our stage.\" And Bill had even helped her choose her stripper stage name, Velvet Fantasy.\n\nThen, just three days ago, Lisa and Bill had spent several hours at the club getting a tour from Scott Dorbin, the manager. The Starlight was really just one large room, with tables set up where customers could sit and drink while they watched the show, with additional standing room near the bar at the back of the club. At the front of the room was a small stage with two poles, one at each side (\"so we can have two girls dancing all the time,\" Scott explained) and a narrow runway projecting about 15 feet out from the center of the stage. \"When a girl does a solo number,\" Scott went on, \"she's got the stage to herself and that's when she'll use the runway.\" \n\nLisa had been allowed to spend a couple of hours meeting some of the girls, checking out the stage and the dressing rooms, and getting some pointers from two of the strippers. Under the pretext of \"I might want to do something special for my boyfriend,\" Lisa even got them to show her some basic moves as well as help her pick out an outfit for her supposed \"private\" performance. Meanwhile, Bill and Scott worked out the details for Saturday night. That would be the only time a camera crew would be allowed in the club, so Lisa would have to get there early to prep some of the girls for an interview before things got too busy. Bill would have the crew at the station and ready to go. But they wouldn't know their destination until they left the studio. That would keep the whole project completely secret. \n\nLisa had to acknowledge that everything had been thoroughly planned for tonight's shoot. And yet, somehow she didn't feel mentally prepared for the challenge in front of her. Looking at the clock in her bedroom, she realized that in about twelve hours, she would be taking the \"dare to bare\" reports to a whole other level. So far, she had stripped down to nothing in very controlled settings -- a dozen students in an art class or with nudists at a camp. She tried to convince herself that the fact that she'd be wearing a g-string and wouldn't even have to remove her bra until the very end should make her feel more relaxed. But somehow she knew that tonight she'd be stepping onto a public stage, where anyone could pay the cover charge and order a drink, where cellphones could be snapping away, and where a crowd of drunken men would be inspecting every inch of her body. It made her feel cheap and degraded yet somehow wildly excited. She was certain it would make for a memorable report, and she knew she couldn't resist it.\n\nThe afternoon seemed to pass slowly. Finally about three o'clock she decided to go to the gym for a workout and by the time she showered, dressed and ate a light supper, it was almost time to head over the club. She was scheduled to meet Bill and the crew there at 7 so they could get some shots of the dressing rooms and the other strippers arriving. Lisa had decided she would conduct the actual interviews backstage during the show, where the background noise would provide a better sense of what the work place was like. Although she already had her outfit carefully selected and packed in her bag, she wanted to get some shots of her supposedly selecting it from a rack of costumes.\n\nLisa arrived at the Starlight just as Bill was driving up in the van and noticed that George and Clayton, her usual crew, had drawn tonight's assignment. \"Glad to see you're here already,\" Bill remarked. \"Always the professional.\"\n\n\"Professional what?\" she replied to Bill. \"You know, I've never been this nervous before.\"\n\n\"We can call it off if you want, it's not too late,\" Bill assured his star reporter. \n\n\"I know that,\" Lisa replied. \"But no, I'm not going to chicken out. This is the perfect topic for our series, and our viewers want to know about it.\"\n\n\"You mean our viewers want to see you strip,\" George blurted out. Bill glared at him and Clayton pulled him away before he could say anything else.\n\n\"Sorry about that,\" Bill said. \"He should keep his big mouth shut.\"\n\n\"It's okay. I mean I know that's the truth. And that's part of what I have to report about -- how it feels for these girls to stand in front of a screaming crowd of men who want to see them naked. It will be great TV.\"\n\n\"Can't argue with you there,\" Bill agreed. \"And don't worry. Nobody knows who Velvet Fantasy really is. The manager and a few of the girls who gave you some tips the other day are going to be there. But everyone else thinks Velvet will be arriving later tonight and that the club owner is showcasing her as a favor to a friend. And absolutely no one at the station knows about this. I told the writers we were going with the nude housecleaners for next week, and I've even scheduled a meeting with them Monday morning to go over some ideas. Art's anchoring the Saturday night broadcasts, and Tim and Natalie are doing the late show as well. And none of them have any idea this is being planned.\"\n\nWell, Lisa thought to herself, that's not quite true. She had accidentally run into Tim and Natalie as they were arriving for work on Wednesday just as Lisa was heading out to the theater, and she had casually mentioned she was going to pick out a stripper outfit. They had looked baffled, and she tried to treat it like a joke and dropped the topic. No harm done, she had thought at the time. Now she was just hoping that was true.\n\n\"Okay,\" Bill said, \"the equipment is unloaded and the guys are getting ready, so I'll head out. Call me tonight when it's over, okay?\"\n\n\"Thanks, you're the best. And I promise I won't let you down.\"\n\n****\n\nWhen Bill returned to the studio, he found Tim in the make-up room holding a slip of paper. \"Hey, Bill,\" look what I found on the floor. Somebody's been writing out a list of names -- they all look like stripper names. Amber Delight, Velvet Fantasy, Scarlett Cream. Looks like Lisa's handwriting, too. Funny stuff.\"\n\nBill abruptly grabbed the sheet of paper and crumpled it. \"Nothing funny about it, Tim. And do me a favor, forget you ever saw this. At least until tomorrow. \"\n\nTim gave him a strange look. \"Sure thing, Bill. Sorry about that, I just had no idea what it meant. I'll keep it to myself.\" But as Bill stepped out of the make-up room, he was almost certain he could hear the sound of footsteps turning the corner at the end of the hall.\n\n****\n\nBack at the Starlight Lounge and Theater, the first dancers had gone on and Lisa was conducting an interview. She was still in her street clothes and wearing no make-up, hoping to keep her real reason for being there tonight a secret for as long as possible. One of the dancers, Crystal Vixen, was leaving the stage, wearing just a g-string with a feather boa wrapped around her neck. She passed by Lisa in the corridor, then realized she recognized her and turned to face her. \"Hey you're that reporter that was in here the other day for some pointers. Guess you decided to come back.\"\n\n\"Yep, here I am,\" Lisa said, gesturing with outstretched arms, palms up. \"I'm here to get some footage for my report.\"\n\n\"And to go on stage?\" Crystal asked. \n\n\"Can you keep a secret? I'm the surprise headliner tonight, Velvet Fantasy.\"\n\n\"Well I'll say one thing; you got a lot of guts doing that.\" She paused, noticing Lisa's look of surprise, and then continued. \"You know what you're getting into, don't you? The audience always expects a bit more from the star so it can get a little wild out there. The boss kind of expects an 'anything goes' attitude from his headliners.\"\n\n\"Anything?\" Lisa asked in alarm. \"Will I be safe?\"\n\n\"Oh sure honey, that's not what I mean. We have the best bouncers in the business. Any monkey business and the guy's out of here. No touching, no getting up on stage. And the tips are usually great. It's just...\" she hesitated. \"Well, it's not just topless. Not if you're the headliner.\"\n\n\"Oh,\" Lisa audibly gulped. \"I guess I hadn't really realized that. I thought it would be my choice.\"\n\n\"Well sure, it's your choice, if you don't mind a lot of booing and guys asking for their money back. But don't even think about it. All you have to do is take off your g-string and stand there for a few seconds and it's finished.\" Crystal could still see traces of panic in Lisa's eyes, so she reached out and held her hand. \"Honestly, hon, with this cold weather and everything, it's kind of a slow night out there. And a headliner for the midnight show that no one knows ... we'll be lucky if there's ten guys in the place.\" \n\n****\n\nBack at the Channel 4 studios, the 11:00 broadcast was about to begin. Natalie came out of her dressing room and went up to the floor manager. \"Hey, can you log me onto the teleprompter program? I have to make a few last minute changes in my forecast and I want to get it on the prompter so I don't forget to say it on air.\"\n\n\"Sure, no problem, but hurry up. We'll be going live in just a few minutes.\"\n\n****\n\nLisa could feel the knot in her stomach growing. She was in a dressing room and had laid out her costume for her performance \u2014 the classic schoolgirl outfit with glasses and pigtails, a white top tied off in the middle to show a generous amount of belly, and a very short plaid skirt with matching knee high stockings. Under that, she wore only a low cut white bra and white thong. And of course four-inch heels and a big lollipop! She had to laugh; it would be so embarrassing to be seen in that outfit, she'd probably be glad to take it off. Chuckling to herself, she thought, \"that's the spirit, Lisa. Just stay in control of the situation. No one in the audience knows you and it will be over before you know it.\" \n\nThere was some scuffling noises outside in the hallway, and a couple of girls said, \"Hey no guys in here.\" \n\n\"That's okay,\" chimed in another girl, \"Scott said they're okay.\" And in came George and Clayton dragging their equipment and accompanied by another stripper, Golden Judy. As a blonde, Judy had been selected to help Lisa with her make-up since their hair color and skin tones were almost identical. \"Come on, Velvet,\" said the girl, \"time to make you beautiful.\"\n\nAt the mention of the name Velvet, a number of the girls standing the hallway turned sharply and stared into the dressing room. \"Oh so our little reporter is actually the headliner, eh? Think you can play with the big girls tonight?\"\n\nLisa stood up and faced the group. \"No, actually I don't. I'm here to learn from you and to share your experiences with my audience. I've already seen enough tonight to realize you must be an incredible group of girls. I'm proud to be one of you, even though it's just for tonight.\"\n\n\"Very pretty words,\" one of them muttered. \"Let's see how you do on stage.\"\n\n****\n\nThe broadcast was nearing its halfway mark, and Art introduced the night's entertainment headlines. He seemed on autopilot, mindlessly reading a series of short items off the teleprompters: an actor arrested for drunk driving; a celebrity couple divorcing; and an actress expecting a baby. \"And closer to home, Channel 4 has learned that the headliner performing under the name of Velvet Fantasy at tonight's midnight show at the Starlight Gentlemen's Club is none other than our own Lisa Marvell. Tune in next Friday to hear her report. And now here's Tim with the sports.\"\n\nThe camera switched to Tim, who seemed stunned by what he just heard. He quickly regained his composure but at the commercial break, he noticed Bill storming onto the set and literally grabbing Art by the collar. \"Why the hell did you say that?\" he demanded.\n\nArt looked confused; he really hadn't paid attention to the words even as he read them. \"Said what?\" he pleaded. \"I just followed the teleprompter.\"\n\nBill ran over to the floor manager. \"Is that true? He read what was on the fucking teleprompter.\" \n\n\"Yeah, that's all. What's the big deal?\" \n\nAnd with that, Bill stormed off the set and back to his office. He grabbed his phone and texted Clayton. \"Not sure how this happened but Lisa's midnight performance just got announced by Art on the broadcast. With her name. Don't say anything to her yet but let me know if anyone shows up.\"\n\n****\n\nIt was shortly around 11:30 when Crystal came into the dressing room. \"Hey, it's kinda funny but I was just out in the parking lot freezing my ass off and having a cigarette, and I bet fifteen cars pulled up while I was there. Looks like we might be getting some customers for the late show.\"\n\nAnother fifteen people didn't seem like a big deal to Lisa, so she continued to put the finishing touches on her make up. She was sitting in her thong and bra and applying body make-up to every visible inch of skin. Then she pulled up the plaid skirt and spun around, looking in the mirror. Just as she had practiced, a quick spin caused the loose fitting skirt to rise and provide an unobstructed view of her thong. \"Nice move, Velvet,\" Lisa said to herself. And she started putting on her top and experimenting with just how to tie it off in the middle.\n\n****\n\nBill watched the end of the broadcast from his office, waiting to see if Clayton replied. At about 11:40, he stepped into the hallway and was amazed to find the place almost completely empty and most lights turned off. One light shone from Tim's dressing room, so Bill stuck his head in. \"Where is everyone?\" he asked.\n\n\"On their way to the Starlight,\" said Tim. \"Seems like everyone wants to see if she's really going through with this big striptease. Even Art.\"\n\nBill just shook his head; could things get any worse?\n\n****\n\nBack at the Starlight Lounge and Theater, the parking lot had filled to overflowing in the last thirty minutes, and cars were now starting to park on the main road and side streets. A group of a dozen people including several women had just arrived, all saying that they worked with Velvet and demanding front row seats to see the show. The bartenders and waitresses were busy serving drinks and the girls on stage kept dancing.\n\nThe manager paid a quick visit back stage to let the strippers know there was a last minute change of plans. \"Okay girls, listen up. We're holding off on our headliner for a few more minutes so I want two of you back out on stage and three more of you circulating among the tables to help the waitresses. Looks like you're drawing a big crowd after all,\" he said to Lisa.\n\nClayton saw the look of concern on Lisa's face and figured he better speak up. \"Um, Lisa, I heard from Bill a few minutes ago. It seems like Art screwed up and announced the show on the 11:00 news. Said you were going to be performing. So maybe it's a few guys who heard the news and came over.\"\n\n\"A few?\" the manager chuckled. \"Our bouncers have counted one hundred and fifty in the last forty minutes and more still arriving. We're probably going to max out at our legal limit.\"\n\nWhat's that limit?\" Lisa asked, her reporter's instincts taking over. \n\n\"Three hundred and fifty, doll. And I hear some of the latest arrivals said they work with you.\" With that, he turned and left the dressing room, saying \"best fucking crowd we've had in years. Who knew...?\"\n\nAs the girls filed out, Crystal was the only one left. She looked at Clayton and George, and said, \"Hey guys, why don't you watch the show from the wings? Give us girls some time to talk.\"\n\n\"Sure,\" Clayton said, and dragged George from the room.\n\n\"Everything okay, Velvet?\" she asked.\n\n\"I don't know,\" said Lisa. \"I'm kind of in shock. I knew this was starting to get out of control and now it's a nightmare. Everyone I work with...all these viewers who watch me on TV. They're all going to see me...and I mean every inch of me.\"\n\n\"Well,\" Crystal said, \"do you want a little bit of practical advice, one stripper gal to another?\" she smiled.\n\n\"I could sure use some,\" Lisa replied.\n\n\"Here's something the other girls don't know. My real name is Mavis.\" She saw Lisa grin. \"Yeah, I know, what a name, huh? But you know, that's who I am, not Crystal. She's like a character that I made up. I get to play her every night but that's not who I am. So maybe you should be thinking it's not Lisa going out on that stage, it's Velvet. It can be a lot of fun. \"\n\n\"I'm not sure I see the fun part right now...\"\n\n\"You don't? Well, just think about it. When you step out on that stage, you're not Lisa the big shot reporter. You're Velvet Fantasy, and for those guys out there you are gonna be the hottest woman in their world. They could be at home with their wives or girlfriends. Or they could be watching a movie or sleeping. But they hauled their sorry asses out in a cold winter night and they're paying for the Starlight's overpriced and watered-down drinks for one reason. To see you. And you're gonna show them Velvet Fantasy and she's so unlike anybody they ever saw on that silly newscast. She is gonna be every dream they have of sex and beauty come to life. They're gonna get all hot and bothered, and a bunch of them are gonna jerk off thinking about you when they get home. And you're gonna show them things that Lisa would never show them. But Velvet will give them a night they'll remember for a long, long time.\"",
        "\"Wow,\" said Lisa, \"That was amazing. You just scripted my whole report and here I am without a recorder or even a pen. Just a lollipop,\" she added, holding up her prop. And with that, both girls laughed and hugged.\n\n\"Thank you, Crystal. Just give me a few minutes to get better acquainted with this Velvet girl.\"\n\n****\n\nAt 12:20, club capacity had been reached. The last two to squeeze in were Bill and Tim, who decided they better be there after all. Trancelike, Lisa had walked from the dressing room to the stage wings, glancing out at the overflowing crowd. She noticed that they had packed in so many extra tables that guys were literally resting their elbows on the runway. She stepped back, took a deep breath, and closed her eyes.\n\n\"And now, the Starlight Lounge and Theater is proud to present the club debut of a hot new star. You may know her as Lisa Marvell (a roar went up from the crowd), but here she is tonight, Velvet Destiny.\"\n\nA bright spotlight came on and \"Girls Just Wanna Have Fun\" started blaring through the theater's speakers. The music seemed to send a wave of energy through Lisa that she hadn't felt all night. She literally bounded onto the stage, with loud applause and whistles greeting her. When she got to center stage, she turned to face the audience and slowly, teasingly licked her lollipop. Sticking her tongue out as far as it could go, she slowly licked up and down the pop's stick, then swirled her tongue around the candy as she skipped down the runway. She knew the guys sitting next to the stage could already see under her skirt, but she now twirled about several times ensuring that almost everyone in the house got a clear view of her thong and exposed butt cheeks.\n\nThe audience went wild, and she heard several voices shouting, \"go Lisa go.\" She stopped her twirling and stood still, a stern look on her face, and started wagging her finger at the crowd. \"Who's Lisa? I'm Velvet.\" An even louder cheer erupted and someone in the back yelled out \"I love you, Velvet.\"\n\nShe skipped back to the main part of the stage and untied the ends of her shirt. Several buttons remained fastened in the middle of her chest, so she pulled hard on the two shirt tails. The buttons flew off in every direction, and her white bra sprung into sight. More cheers from the audience, as Lisa turned her back to the crowd, shrugged the shirt off of one shoulder, then the other. Pulling it off, she twirled it in an ever-widening circle over her head, then let it go and watched the shirt fly into the crowd.\n\nSeveral guys made a grab for it, and it was then that she noticed that some of the Channel 4 crew was sitting at a table very near the stage. A little further away she noticed Art leaning back in his chair, beaming and sipping on a drink. \"Look at that dirty old man,\" she thought. \"I'll have to make sure he gets his money's worth.\"\n\nThe song had ended and another started -- a loud raucous version of \"Man, I Feel Like A Woman.\" Lisa pulled a chair to the front of the stage and spinning it around, straddled the chair and sat down. As she did, her skirt rose up to her hips, plainly revealing her white thong. She stepped out of her right shoe, then slowly pushed her knee-high stocking down to her ankle and pulled it off. Holding each end of the stocking in her hands, she repeatedly dragged it across her chest, almost wrapping it around the front of her bra. Then, she pulled one end back to stretch the elastic in the stocking and let it snap, shooting it like a rubber band into the crowd. \n\nCheers greeted the action, followed by chants of \"more, more.\" She then removed the other stocking and slipped back into her shoes. Still holding the second stocking, she stood up and straddled the stocking, rubbing it across the front of her thong and between her legs. She could feel it slip between her butt crack, causing her skirt to rise up with every back and forth motion of the stocking. She leaned her head back and seemed to moan as her hips rocked in time to the movement of the piece of clothing. Finally she clamped her legs together tightly, let one end of the stocking drop, and slowly pulled it out and up from between thighs. She then held it up to her cheek, cuddling it as if it were a blanket. With a devilish grin, she looked up and feigned surprise that there was anyone watching. She pranced down the runway, dangling the stocking just beyond the reach of the increasingly raucous crowd, using it as a whip to strike at the hands that were reaching out to grab her. Finally, she rolled it up into a little ball and threw it far to the back of the room.\n\nThere was the sound of scuffling as several grown men made a grab for the stocking. She noticed that one of them was the older man from the art class, the same person who had set aside his easel his easel and stopped drawing when she was modeling. Abandoning the runway once again and returning to center stage, she approached the chair from one side, took off her glasses, and undid the elastics holding her pigtails. Bending forward to lean across the chair, she ran her fingers through her hair, combing out her long tresses and throwing her hair back over her shoulders. Then, she straightened up again and moved in front of the chair, arching her back to accentuate the thrust of her breasts straining against her bra. \n\nThe music grew louder, the drum beat building to a climax. Standing in the middle of the stage in the full glare of the spotlight, she lifted her skirt to reveal her thong. Chants began of \"take it off, take it off,\" and Lisa turned her back to the crowd, sliding the sides of the thong down her hips and allowing the garment to fall to her ankles. She then began to slowly bend from the waist, reaching down to pick up her panties. As she did, those in the audience closest to her were able to catch a fleeting glimpse of her pussy lips visible between her ass cheeks as she reached down to floor. \n\nWith a loud blast of drums, the song ended and the crowd erupted in roars. Lisa stood up straight, turning again to face the audience, her skirt now back in place. For a moment it seemed like her performance might be over. Instead, another song, a sultry version of Night Train began. The white spot turned to deep blue. Once again she ventured to the front of the stage, taking one step onto the runway. With a tantalizingly slow motion, she reached behind and unsnapped her bra as the crowd roared its approval. Then, holding on to both shoulder straps, she moved the garment back and forth across her breasts. An occasional flash of nipple could be seen, then covered again. Finally, with one swift motion, she pulled her bra off and flung it into the audience . \n\nStill standing just at the start of the runway, Lisa slowly knelt down, just inches away from a crowd of men who were pushing closer to the stage. Leaning back on her heels, she began to massage her breasts with both hands, her fingers pinching her nipples and outlining circles around her areolas. She continued fondling her breasts, first squeezing them, then lifting them, while she looked first to one side of the audience then the other as if making sure that everyone could see her wanton display. Then, she began to slide one hand downward across her stomach, while she extended two finger on her other hand and raised them to her mouth. Slowly, she began to suck her fingers, sliding them in and out of her mouth in an unmistakable rhythm. Removing her fingers and holding them to her lips, she then began licking them, first with an up and down motion, then with swirling flicks of her tongue. \n\nDuring all of this, her other hand had come to rest against the folds of her skirt below her tummy. As she kissed her fingers and let that hand drift to her side, she began rubbing across the front of her skirt with her other hand, her hips rocking in time. Her hand dropped even lower, then disappeared beneath the folds of the plaid material. She arched her back, rocking up and down at an ever increasing speed. The low moaning sound of the music seemed to match the look on Lisa's face, as she closed her eyes and appeared to gasp, her hand busy beneath her skirt.\n\nThe music abruptly grew louder as her eyes opened and Lisa sprang to her feet. With both hands now in view, she once again walked out on the runway until she came to the very end. It no longer mattered to her that her breasts were fully exposed and that anyone sitting near the runway could look up under her skirt and see her bald pussy. That was what she wanted, to have all eyes and thoughts focused on her, feeling the lust directed toward her, and knowing that right now she was the only thing on their minds. Hands reached up to touch her legs; she waved off the bouncers and moved closer to the side of the runway. \n\nThe crowd detected her willingness to break the rules, and more surged forward. Sensing the strength of the crowd, she yelled out at the crowd, \"More? More?\" \n\n\"Jump,\" she heard a voice call from nearby. With a shock of recognition, she looked out and saw Natalie, pushing forward in the crowd as she shouted out the command. Others picked up the chant, and with that, Lisa leaned over and dove into the waiting hands of the mob. Now the theater went totally wild as she crowd-surfed across the room. Cellphones were held high over heads, snapping madly without any clear sense of what they'd be able to capture. As she moved from hand to hand, Lisa was able to roll onto her back. She felt the grip of hands on her legs and arms, while others pulled at her breasts and reached under her skirt. Fingers probed her ass; others sampled her wet pussy. She heard the rip of fabric and saw shreds of her plaid skirt thrown high overhead. The bouncers tried to regain control, joining in the crowd and directing Lisa's movement back to the stage.\n\nSome in the crowd were gently caressing her, while others slapped and grabbed at her exposed body. Every inch of her skin felt on fire, and Lisa submitted to the mix of sensations by closing her eyes and moaning aloud in pain and pleasure. She was completely disoriented, with no sense of where she was or how this would all end. Suddenly, she felt someone take hold of one of her hands and then the other. A bouncer had jumped up on stage, reached out to her, and began pulling her up. Some in the audience continued grabbing at her ass and legs, until finally the crowd was pushed back from the runway and Lisa regained her feet. \n\nShe was now in a haze of total sexual stimulation. She stood before them totally nude, her hair disheveled and only a fragment of her plaid skirt that she had managed to keep clutched in one hand. She held it up triumphantly and, with perfect timing, the music ended and the crowd roared its approval. The entire audience was on its feet, with prolonged applause as she slowly step by step backed down the runway. She continued to raise her arms in the air like a triumphant fighter, turning from side to side so everyone in the audience could admire her completely naked body. Finally back at center stage, she blew a kiss to the crowd, turned and walked off. \n\nTwo strippers came out and started working the poles at either side of the stage. Music starting playing again, the applause died out, and much of the crowd started to drift out. Backstage, no one from Channel 4 appeared, but a few of the other girls came by. \"Didn't think you had it in you, Velvet.\" \"Good job.\" \"Just don't come back on my night and take my tips.\" \n\n\"That,\" explained Crystal, \"is the highest compliment you can get from a stripper.\"\n\n****\n\nLisa sat alone in the dressing room. There was no outfit left to pack up so she found her jeans and top and pulled them on, not even bothering with her bra and panties. Then she just sat there for almost a half hour, waiting for her heart to calm down and for her strength to return. Already Velvet was beginning to seem like someone else, a total stranger, but Lisa's body still tingled from the experience.\n\nEventually she stood to walk out of the room and was astonished to see that Natalie had been waiting for her, standing silently in the hallway. \"Want a ride home?\" she asked.\n\n\"I'm not sure I should accept anything from you,\" Lisa replied. \"You know, I got a text from Bill just before I went on. He figured out that you overheard Tim reading the name Velvet Fantasy. You put that together with my earlier slip about a stripper outfit. So you must have been responsible for letting the secret get out.\"\n\n\"Hey, I always said I'd make a good reporter. It didn't take much to check online to see where Velvet was appearing tonight. And while I pretended to edit my own forecast on the teleprompter, I simply changed Art's script. He never knows what he's reading anyway. You know, I really enjoyed it.\"\n\n\"You little bitch,\" Lisa snapped. \"You enjoyed setting me up for complete humiliation?\"\n\n\"No, I enjoyed making sure you were in the perfect situation to realize your own fantasy.\" She purred softly, \"Miss Velvet.\"\n\n\"What do you mean?\"\n\n\"Well, if you must know, I first suggested the idea of the \"dare to bare\" series to the writers; they probably don't even remember that they got from me. I watched how you worked on those first couple of reports and then I made sure I got in on the trip to the photographer's studio. That really confirmed my sense of how you think and react in, shall we say, a sexually charged situation. I could see that you wanted to be pushed or almost tricked into doing things that you wouldn't normally allow yourself to think of doing. And admit it, you loved everything that happened on stage tonight, didn't you. You're a bad girl.\"\n\nLisa was forced to smile, but she was still angry. \"But why, why did you do this to me?\"\n\n\"Why, silly?\" Natalie asked. \"Because I admire you and look up to you and...\" She hesitated and then reached into her bag, pulling out the envelope containing the photos that she had posed for. \"Remember? These are for that special person in my life. They're for you.\" With that, she handed the envelope to Lisa, moved closer, and kissed her softly on the lips. Stepping back, she took her hand and started to lead her down the corridor. \"Come on, let's get in the car and go home. It's been a long night, and frankly, you look beat.\"\n\n(To be continued)"
    ],
    "authorname": "rd75000",
    "tags": [
        "reporter",
        "naked on television",
        "strip club",
        "public nudity",
        "striptease"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-daring-reporter-ch-06"
}