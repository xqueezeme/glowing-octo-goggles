{
    "title": "Miniature Golf",
    "pages": [
        "August, 2019. Quantico, Virginia\n\nKeith Monroe hadn't worn his uniform once since retiring from active duty almost five years to the day, but this was an occasion that called for it, so he'd gotten a regulation haircut and put on the uniform he'd worn for 30 years.\n\nAs he walked toward the reviewing stand by himself, he was saluted numerous times.\n\n\"Good afternoon, sir!\" one Marine after the other said as they snapped a salute at the colonel they didn't know was no longer on active duty.\n\nHe returned each one of them and asked how the Marine or junior officer was doing knowing every answer would be, \"Outstanding, sir!\"\n\nPerhaps if his wife, Beth, was still alive, it might be an even more enjoyable occasion than it was. But since her passing three years ago, nothing gave him any real joy anymore. He wasn't depressed, he just couldn't get excited about anything without the love of his life by his side.\n\nBut today, his son, Neil, was graduating from Officer's Candidate School, and the 57-year old retired Marine colonel felt pretty good. He felt even better when the commanding officer of OCS, an officer he'd know many years ago when he was a major and the younger colonel was a lieutenant.\n\n\"Colonel Monroe, it's good to see you,\" the younger officer said as he shook hands with the man who was now his peer in terms of rank.\n\n\"You, too, Dave,\" his former boss said.\n\n\"You've gotta be awfully proud, right, Dad?\" Colonel David Duncan said, knowing the answer.\n\n\"I am. I just wish his mom could be here to see this.\"\n\n\"I, uh, I'm really sorry about Beth.\"\n\n\"Thanks. Me, too,\" the older man said.\n\n\"Come on. The parade won't start until I'm in place so we should probably get seated.\"\n\nKeith Monroe understand completely, and as they moved toward the reviewing stand where he'd be joining the OCS commander as the graduating class passed in review in front of them, he recalled the many times he'd either been in a parade like this one or standing as the reviewing officer himself. The last time, of course, was at his retirement ceremony with Beth dutifully by his side looking as beautiful as he could ever remember.\n\nNeil had been there, too, happy to take a day off of school to attend his father's retirement. He'd had no interest in the Marine Corps at that time, and his dad had never pushed him in any direction other than attending college. That wasn't optional. The only question had ever been 'where', and when Neil agreed to attend Western Washington University in Bellingham, Washington, his father's alma matter, the elder Monroe was secretly thrilled.\n\nNeil was a sophomore in high school when the family relocated to the city where his parents had met and fallen in love when Keith was a junior in college. The lure of flying had attracted him to the military, and when Keith learned about a program called PLC which stood for Platoon Leader's Course, the Marine Corps had won his business.\n\nThe PLC program allowed those enrolled in it to attend class with no obligations whatsoever. No classes, no meetings, no uniforms, no haircut or grooming requirements. No nothing other than maintaining a minimum 2.0 GPA and attending a 10-week OCS stint in Quantico, Virginia, after one's junior year. The other option was attending a six-week course twice following one's freshman and junior years. Even then, those who successfully completed the course had no military obligations whatsoever, and could refuse a commission right up until the day they graduated from college without penalty.\n\nThe elder Monroe had flown CH-53 helicopters his entire career, less those years he was attending some professional school like Command and Staff College, also located in Quantico. In fact, it was 'just down the street' from OCS.\n\n\"Have you found your son yet?\" Dave asked after being introduced as the reviewing officer and commanding officer of Officer Candidate's School.\n\nKeith laughed as they looked out at the sea of green where nearly every graduating officer candidate looked the same.\n\n\"He's in third platoon,\" Dave said.\n\nThat was enough of a clue for Keith to find his son's platoon where a young captain was standing at attention in front of it as the parade got ready to start. As much as they all looked alike, Keith's still-20/20 eyes spotted his son in the second squad of third platoon, and the salty veteran of two wars briefly felt a lump in his throat.\n\n\"Got him,\" he said as a very young candidate marched out and called, \"Sound, attention!\"\n\nLess than thirty minutes later, the roughly 250 graduating candidates marched passed the reviewing stand, executing a movement known as 'eyes, right' as they did.\n\nKeith stood next to Dave, and returned the salute of each passing platoon, until the emcee told everyone that was the end of the ceremony and that family and friends were now free to find their loved ones.\n\nRather than walk toward Neil and end up having to salute a hundred candidates, Keith waited knowing his son had already seen him. He had another unusual emotion. Keith felt a knot in his stomach as his son ran toward him, stopped, saluted smartly, and said, \"GOOD AFTERNOON, SIR!\" as he tried not to smile.\n\nHis father returned the salute, then grabbed his son and hugged him.\n\n\"You look good, son,\" he told his boy as he held him close for a few extra seconds.\n\n\"You, too, Colonel,\" his said, now better able to appreciate the silver eagles on his father's collar.\n\n\"Your mom would be really proud of you, you know,\" he told Neil. \"And so am I.\"\n\n\"Thanks, Dad. Come on. I want to introduce you to a couple of my friends.\"\n\nOne of them was a prior-enlisted Marine who'd been a staff sergeant who'd served two tours in Afghanistan. Keith asked him how his son had done, and the former Marine answered him honestly.\n\n\"Sir, he didn't know his ass from his elbow when we got here, but I'd be honored to serve alongside him anywhere in the Corps now.\"\n\nUnlike Neil, who wanted to fly, this young man wanted to be an infantry officer more than anything else on earth. Keith wished him luck, then returned a second salute before asking his son what was next.\n\n\"I change out of this monkey suit into some civvies, and we fly home,\" Neil told him.\n\nTwo weeks later, Neil Monroe was back at school for his first day of class just like nothing had happened that summer. Well, other than the white sidewalls on his head that were nearly already covered with dark hair.\n\n\"How was your first day of class?\" his father asked when his 21-year old got home that afternoon.\n\n\"Fine, Dad. How about you?\"\n\nHis father had no interest in working, and as much as his son wished he'd find something to fill his days, the older man instead he enjoyed staying home and hanging out with the dog.\n\n\"Good. Things were...good,\" his father said the way he always did no matter how things actually were. \"So, what? Nine months and counting, right?\"\n\nNeil laughed and said that was pretty close, as graduation\u2014and commissioning\u2014were now just a tad under nine months away. He was a liberal arts major, and had breezed through his first three years, maintaining a 3.72 GPA while working about 20 hours a week at a miniature golf course in town. \n\nIt was the only mini-golf course in Bellingham, and in spite of the often-cold, often-rainy weather, it managed to turn a profit year after year. Neil didn't know exactly how much the owner made, but the man who ran it had dropped a few hints here and there. The only thing he did know was that he was grateful to have a steady, part-time job.\n\nIt wasn't like he needed the money. His dad had a ton of it, and rarely spent a dime. That wasn't exactly true, as he'd recently dropped over $50,000 on a new Jeep Cherokee with all the bells and whistles, but he typically spent less than $50 a month on himself.\n\nSo the issue wasn't money, it was more an opportunity to get out of the house where his father left the television on all day long as a way of keeping him company. It drove Neil crazy, so any opportunity to have some time away from the quiet madness was a blessing. \n\n\"So, you workin' at the golf course tonight?\" he asked Neil, more rhetorically than anything else.\n\n\"Oh, yeah. Just like old times,\" his son said. \"Can I get you anything before I head out, Dad?\"\n\n\"That's a pretty sweet gig,\" his dad reminded him without answering his son's question. \"Getting paid to sit in a warm booth passing out putters every now and then while studying the rest of the time.\"\n\n\"Ha! Why do you think I've stuck with it all this time?\" his son asked almost as rhetorically. \"It's not like I'm getting rich on minimum wage. Oh, that reminds me, I'm makin' the big bucks this year. Yep, I'll be pullin' down a cool $8.50 an hour.\"\n\nHis father laughed and said he agreed about the money then told him to have a good night.\n\n\"I'll be home by ten,\" Neil said, as though his dad might have forgotten. The course stayed open until midnight on Fridays and Saturdays, but closed at 9pm every other day of the week.\n\n\"You did good, Colonel,\" Keith said to himself as he watched his son walk away. \n\nThen, as he almost always did, he told his wife what he was thinking. In this case, he let her know how well she'd done raising their son. After all, it had been her doing most of the raising while he was either at work or deployed for up to a year at a time in which the occasional phone call home was about all the contact he and his son had. Even so, Neil couldn't wait to have the same kind of career for himself, and Keith told his late wife he hoped he'd be home a little more often, especially if he ever got married and had kids.\n\n\"Maybe the last of these wars will be over by then, and he'll 'only' be gone for a few months at a time here and there,\" he told Beth out loud, not really believing she could hear him. But it made him feel better thinking she could, so whenever Neil was out of the house, he pretended she was still there with him. The exception to the rule was when he went to bed alone, and in that case, there wasn't enough imagination in the known universe to make him think she was still by his side.\n\n\"Well, well, well. Look what the cat drug in,\" the owner of the course said as he shook his employee's hand for the first time since the younger man's departure for his 10-week, paid 'vacation' in Quantico, Virginia.\n\n\"How was basic?\" the man asked, pronouncing the word basic 'bay-seek', and proving that nothing Neil had told him about Marine Corps OCS had sunk in. Even enlisted Marines didn't go through 'basic'. It was called recruit training or affectionately, boot camp, but never 'basic training'.\n\n\"It was...interesting,\" was all the younger man said, knowing his boss didn't really care.\n\n\"Good. Okay. So...nothing's really changed here. You know the drill, so unless you've got questions, I'll leave you to it.\"\n\n\"No. No questions. As long as the security code on the alarm hasn't changed.\"\n\n\"Oh, hell!\" the balding, overweight man said. \"Good thing you reminded me.\"\n\nHe gave Neil the new code then reminded him of closing time, even though there was a huge sign over their heads with the hours posted on it; the same sign that had been there since long before Neil's first day years earlier.\n\n\"Let's just hope the weather holds out,\" Neil said, knowing it could turn cold any day now.\n\n\"Maybe we'll have an Indian summer. Haven't had one for a few years, so we're due.\"\n\n\"An extra two weeks of sunshine and warmth would be nice,\" Neil agreed before 'taking the helm' again.\n\nThere were only three people on the course, all of them from the local high school. And as long as they didn't get too rowdy, Neil was content to let them whoop it up and smack the ball around like the putters they were holding were drivers.\n\nThe early-September sun was still bright, as was the blue sky, when around 7pm, a car pulled up. Neil glanced over and saw a boy who was maybe eight or nine get out followed by a woman he assumed was his mother.\n\nThe boy waited for his mom then took her hand, something that surprised him because the boy wasn't all that young. For a brief moment, he recalled the days when he'd held his mother's hand, and for that brief moment wanted nothing more than to able to hold it again.\n\n\"Come on, Mom!\" the boy said, as he began pulling her hand.\n\n\"Kenny! Stop!\" she said after he nearly pulled her over.\n\nAs they got a little closer, Neil noticed the boy had a lazy eye, and immediately his heart went out to him. Blessed with both perfect health and good looks, Neil had never experienced any real teasing growing up. And thanks to his late mother, he'd never tolerated anyone who teased or bullied anyone\u2014especially for something beyond their control.\n\nMaking sure to look into the boy's other eye, Neil smiled and welcomed him.\n\n\"It's my birthday today!\" the boy happily blurted out.\n\n\"Oh. Well, congratulations, my man! How old are you? Sixteen? Seventeen?\"\n\nHis mother walked up and smiled when she heard Neil's comments.\n\n\"What? No! I'm nine!\" the boy replied, not sure if Neil was kidding.\n\n\"Oh. Okay. I thought maybe you'd be driving the car home, but...okay,\" Neil said very seriously.\n\n\"Hi,\" the woman said. \"Thankfully, that's still years away.\"\n\nShe smiled then said, \"We uh...we've never done putt-putt before so...what do we do?\"\n\nNeil had seen her get out of the car, but he hadn't actually seen her until just then. Being a good-looking guy, he wasn't overly impressed with attractive women, but this woman was different. She was clearly beautiful, but there was something about her that he found immensely appealing, and he instinctively smiled back.\n\n\"Um...sure. Well, it's pretty simple,\" he began as the boy said rather loudly, \"Can I have that one?\" pointing to one of the putters.\n\n\"Kenny,\" his embarrassed mom said. \"Let the man explain, okay?\"\n\n\"But I already know how to play putt-putt,\" he said. \"You just get the club and hit the ball in the hole.\"\n\n\"I'm sorry. He's pretty wound up. We just had cake and ice cream so the sugar's not helping.\"\n\n\"Oh, no. He's fine,\" Neil said as he winked at the boy who's name had to be Kenny.\n\n\"And he's right. You really do just take a putter and a ball and try and knock it in the hole.\"\n\n\"Oh, okay,\" the woman said, now feel silly for not realizing it was that easy. \"I...I've never golfed, either, so I honestly don't know anything about it. Now tennis is a very different story, but that's for another day.\"\n\nHer smile was infectious, and as beautiful as she was, Neil found himself smiling back again as he handed Kenny the putter he'd asked for.\n\n\"Which one would you like...Mom?\" he asked, still smiling.\n\nThe gorgeous mother laughed then told him any one of them would be fine.\n\n\"And it's Madison,\" she added.\n\n\"And I'm Neil,\" he told her just as she saw him looking at the name tag on his shirt.\n\nNow it was Neil feeling foolish.\n\n\"Um...gee. Duh, right?\" he said as Madison laughed again.\n\nKenny grabbed a ball and headed for the course.\n\n\"I better run,\" she said. \"He's just so excited.\"\n\nShe took one step then stopped.\n\n\"I just feel so bad for him.\"\n\nNeil was curious but didn't ask her to continue. He didn't have to as she explained.\n\n\"He invited his entire class from school, but no one showed up for his party.\"\n\nHe saw the expression on her face change, and thought she was on the verge of tearing up.\n\n\"Kids can be...so mean,\" she said just before a forced smile returned. \"Sorry. I don't know why I said that.\"\n\n\"No, you're right,\" Neil told her. \"But he seems like a great kid to me.\"\n\n\"Thank you. He is. But...\"\n\nMadison stopped in mid-sentence, and Neil turned to look where she was looking.\n\nThe three high-school boys were already standing around Kenny, and before Madison could go through the turnstile to get in, Neil headed directly inside and then their way.\n\n\"No, not over there. I'm right here,\" one of them was saying to Kenny as Neil walked up.\n\nHe'd lost a few pounds that summer from all of the running and hiking, but at 6'1\" and 170 pounds, he was taller and larger than any of the boys.\n\n\"I am looking at you!\" Neil heard Kenny say which clued him into what was going on.\n\nMadison was on her way and heard Neil say in a calm voice, \"There's the exit.\"\n\nHis voice had deepened, and the look on his face was intimidating.\n\n\"We're just havin' some fun with the kid,\" one of them said.\n\n\"No. You're done. Get out,\" Neil said in a way that scared the hell out of all three of them.\n\n\"Okay, okay. Jeez,\" the boy said.\n\nAs the one who told Kenny to look at him when he had been looking at him started to walk by, Neil said, \"Uh-uh. You stay.\"\n\n\"What? What the hell?\" the boy said as his friends kept walking.\n\nNeil held his hand up, towered over the boy then said in that same voice, \"Apologize.\"\n\nThe boy's eyes were flying back and forth as he looked up at the man with the square jaw and the short hair.\n\n\"Now,\" Neil said quietly but in an even more intimating way. \"And you better hope I believe you're sincere.\"\n\nScared...witless, the boy turned to Kenny and said, \"I...I'm sorry.\"\n\n\"I have a problem with my eye. But when I'm older, my mom's gonna get an operation for me and fix it,\" Kenny said as though he'd said that more than once before.\n\nNeil lowered his hand then nodded to the exit then kept watching to make sure all three putters and balls were returned. They'd already paid so once the clubs were returned, Neil stopped watching.\n\n\"You okay, buddy?\" Neil asked as he bent down to talk to Kenny at eye level.\n\n\"I'm fine,\" he said, but not as enthusiastically as before.\n\n\"Hey. I'll tell you what. If it's okay with your mom, would you like me to play with you?\"\n\n\"Really?\" Kenny said, his smile and excitement back.\n\nHe looked up at Madison who was wiping a tear from her eye hoping her son didn't see.\n\n\"Sure. Yes. That's fine,\" she told him as she smiled at her boy.\n\n\"Awesome!\" Kenny said as he held up a hand for a high five.\n\nNeil slapped it then lowered his hand and said, \"Now, down low!\"\n\nKenny whacked it then Neil went to get a putter.\n\n\"I'll be right back, okay?\" he promised.\n\n\"I'll go first, okay?\" Kenny hollered, and Neil gave him a thumbs up.\n\nMadison didn't say anything until the second hole. Once Kenny was near the cup and she was alone with Neil at the other end she thanked him.\n\n\"That was unbelievably kind of you,\" she quietly said. \"And brave.\"\n\n\"No, it was my pleasure. I can't stand guys\u2014or girls\u2014who do that.\"\n\n\"Well, it was very sweet of you,\" she said before leaning over and almost whispering. \"That's the reason no one showed up. It's...it's so cruel, but as I said, kids can be cruel, so...\"\n\n\"Let's just make sure he has a great time here tonight, shall we?\" Neil suggested, knowing Madison was on the verge of tearing up again.\n\n\"Yes. Let's do that,\" she agreed, her own smile now back.\n\n\"Mom! Did you see me? I just knocked it in!\" Kenny hollered from 20 feet away.\n\n\"Woo-hoo, buddy! Nice job!\" she said, not mentioning it had taken him seven shots to sink the putt.\n\n\"Go ahead,\" Neil said when she looked at him as to who should go next.\n\n\"I'm...terrible at this,\" she said just before hitting the ball which traveled less than three feet before caroming off the wooden sideboard and jumping over it.\n\n\"See! I told you!\" she said as Neil tried not to laugh.\n\n\"But you're good at tennis, though, right?\" he said with a raised eyebrow.\n\n\"I am. I swear!\" she told him with a laugh just as Kenny retrieved her ball.\n\n\"It's okay, Mom. Not everyone can be as good as me at golf,\" he assured her.\n\nNeil managed not to laugh, but Madison noticed and said, \"Hey! I have feelings, too, you know,\" pretending to be hurt.\n\n\"Sorry?\" Neil replied, his hands held up in an 'I surrender' manner while Kenny just shrugged having no idea what was going on.\n\nAs they played, Neil continually looked up front for other customers, but being a Tuesday night after Labor Day, no one else came. So while they walked the two adults talked and laughed and cheered on Kenny who seemed to be a quick learner as Neil offered him a pointer here or there.",
        "\"I haven't seen him this happy in a long time,\" Madison said at the 8th hole.\n\nShe looked right at Neil then said, \"Thank you.\"\n\nThe comment was so sincere it moved him.\n\n\"My pleasure,\" he said back just as sincerely.\n\nFor a second, he was almost certain she'd been 'looking' at him. Not just looking, but...looking. But just as he became away of it, she looked away and called out to her son to make his next putt.\n\n\"Are you from Bellingham?\" Madison asked.\n\n\"No. I'm from pretty much all over,\" he told her without any explanation. \"You?\"\n\n\"No. I grew up in Portland, and Kenny and I moved here last year.\"\n\nMadison wasn't wearing a wedding ring, but that didn't mean she wasn't married or living with someone, and Neil wasn't going to ask, but he sensed she wanted to say something so he waited patiently until she spoke.\n\n\"I moved here after Kenny's father walked away,\" she said.\n\nThat answered one question, but raised another. Why? Why did he walk away?\n\n\"There's a new surgical technique for amblyopia\u2014a lazy eye\u2014and I wanted us to start saving for it, but my husband felt it was a waste of money. He said Kenny just needed to toughen up and learn to deal with it the way other kids dealt with other physical issues. I was so shocked by that I didn't know what to say. I mean, when he was little it didn't matter. But the last three years have been really hard on him. The teachers try and stop it, but you know how many times a day kids have the opportunity to say or do something when no one's looking. Anyway, that just kills me. He pretends like it doesn't matter, but I know it hurts him when he gets teased. And the older he gets, the worse the teasing will get. So, long story short, it became such an issue my husband just packed up one day and walked out.\"\n\nWith that question now answered, too, Neil wanted to ask a question about the surgery, but Madison kept him from talking.\n\n\"I'm sorry. I don't even know you, and here I am going on and on about my personal problems. I should have just answered your question and stopped talking.\"\n\n\"I'm glad you didn't,\" Neil told her. \"I've always tried to put myself in someone else's shoes whenever they get teased or bullied. It's hard enough for an adult to deal with some major change in their appearance, but a child? I honestly can't imagine. So, for what it's worth, I agree with you completely about doing anything you can to make life better for your son.\"\n\n\"You're very kind, Neil,\" she said very sincerely. \"I would love to meet someone as kind and compassionate as you, but I haven't had much luck in that department lately. Well...ever.\"\n\nWhen he tried to respond, Madison said, \"See? There I go again. I'm not normally like this, I promise you.\"\n\n\"I like you...like this,\" Neil told her with a smile.\n\nFeeling emboldened he said, \"And why keep looking for someone like me now that you've met the real thing?\"\n\nHe made sure to keep smiling so she wouldn't think he was conceited.\n\nMadison laughed, but it wasn't a happy laugh as she said, \"If you were a few years older, I'd...\"\n\nShe stopped speaking, looked away, then said, \"Where's that boy of mine?\"\n\nKenny'd wandered off the course and was looking up at something.\n\n\"Kenny! What are you doing?\" his mother asked once she found him.\n\n\"Look, Mom. There's a bird's nest. See?\" he said, pointing up above.\n\nNeil was right beside Madison and said, \"I'll be. It sure is.\"\n\n\"It's probably a finch. Finches are very popular here in Washington,\" Kenny announced.\n\n\"Once he gets something in his head that becomes the truth,\" Madison said as she leaned toward Neil.\n\n\"He might be right,\" Neil replied as he watched a bird fly into the nest.\n\n\"Come on, buddy. We've got one more hole to go,\" Madison told her son.\n\n\"Okay. I'm gonna make a hole-in-one this time, Neil! Do you wanna watch me?\"\n\n\"I do,\" Neil told him as he put his arm around the boy's shoulder.\n\nMadison stayed a step behind and allowed herself to enjoy watching her son have a good time. She tried not to feel sorry for herself, but it really was hard meet a decent guy. The truth was that even many decent guys wouldn't want to raise another man's child especially one who needed a very expensive procedure. \n\nShe nearly laughed when she told herself that she'd actually just met a decent guy, but he was much too young to even think about in that way. But as she watched him walk with her son, she had to admit he was an awfully handsome man, albeit a very young one.\n\nKenny made his hole-in-one in just six shots, but no one mentioned that when the putt finally went in. Both Neil and his mom cheered for him and said, \"Great job, honey!\" and \"Nice work, dude!\"\n\nKenny hammed it up and bowed, and both adults laughed which only made Kenny act up even more.\n\n\"Thank you. Thank you, very much, ladies and gentlemen,\" he said as though he were playing to a much larger audience.\n\n\"Okay, kiddo. You ready to go home?\" his mom asked.\n\nHis smile disappeared, and Madison felt terrible.\n\n\"Do we have to?\" he asked. \"Can't we play again?\"\n\n\"No, sorry. We only paid for nine holes, so that's it.\"\n\n\"Not even one more?\" the boy pleaded.\n\n\"It's okay with me if you don't mind,\" Neal said quietly, his head turned so Kenny couldn't hear. \"No one else is here, and I'll be closing up soon anyway.\"\n\n\"Are you sure?\" Madison asked.\n\n\"Positive. Besides, I kinda like hanging out with the two of you,\" he told her, only this time he smiled.\n\nHis reply surprised her and caused Madison to tilt her head a little before saying, \"Well, okay. Maybe one more?\"\n\nThat was the only thing Kenny heard, and he immediately called out, \"Yes!\" before running off to find his favorite hole with the windmill.\n\nAs Neil was putting the putters away a few minutes later, he again told Madison how much he'd enjoyed spending time with her and Kenny.\n\nShe gave a different kind of look but didn't respond. Instead, she smiled and asked how much they owed.\n\n\"Nothing,\" Neil told her.\n\n\"No. That's not right. We didn't come here expecting something for free,\" Madison said as she pulled her wallet out of her purse.\n\n\"It's Kenny's birthday, so this is my present,\" Neil told her with a slight bow of his own and a smile.\n\nKenny's face lit up then, without warning, he stepped toward Neil and put his arms around his waist.\n\n\"This was the best birthday ever!\" he said as he hugged the tall, older man.\n\n\"Yeah?\" Neil replied. \"So maybe you'll come back and see me then.\"\n\nAs Kenny spun around to ask his mom if they could, she shook her head and said, \"Oh...I...I don't think so, honey.\"\n\nMoney was a huge issue, and even a few dollars was a big deal to her.\n\nNeil opened the cash register then pulled out two tickets for a free round and asked, \"Will this get you to come back?\"\n\nKenny went to take them then looked at his mom who wanted to say 'no', but the look on her son's face forced to say, \"Okay. But please tell Neil thank you.\"\n\nKenny not only thanked him he hugged his favorite new friend again. This time, Neil bent down a little and hugged the boy back.\n\nAs Kenny let go he said, \"Neil? Will you be my friend?\"\n\nMadison thought about saying that wasn't a polite thing to ask, but before she could Neil was telling him, \"Are you kidding? I'd love to be your friend!\"\n\nThe nine-year's face lit up again as Neil handed him the tickets.\n\n\"Make sure your mom brings you back here soon, okay, new friend of mine,\" Neil told him.\n\n\"I will. I promise!\" Kenny told him.\n\nNot surprisingly, no one had shown up, so Neil walked Madison over to her car. Kenny opened his own door and got in, and once he did, Madison finally said something that was on her mind.\n\n\"Neil? You...you were wonderful with Kenny this evening, but...well, I...if we come back, I'm just concerned that he's going to get attached to you, and...\"\n\n\"I understand. Your fear is he'll enjoy being around me, but I won't want to take the time to be around him,\" he said, supplying the missing words to complete her thought.\n\n\"I'm not implying you're a bad person. You're obviously not. But Kenny will kind of...glom on...to any man who shows him any kind of attention.\"\n\n\"Then the obvious solution is for us to spend even more time together,\" Neil said, causing Madison to laugh just a bit.\n\n\"Right. You and me spending time together. Okay. Sure,\" she said, in a playful-yet-serious kind of way.\n\nNeil stopped smiling then said, \"I wasn't joking, Madison. I'd actually like spending more time with you, and I'd love to spend even more time together\u2014with you.\"\n\nHe paused, looked inside the vehicle where Kenny waved at him, then said, \"And with Kenny.\"\n\nMadison stood there and looked at him for a couple of seconds then said, \"You...you're not...are you...are you serious?\"\n\n\"You sound surprised. Maybe even shocked.\"\n\n\"I...I kind of am,\" Madison told him. \n\nNeil smiled again then said, \"Okay. I get it. You can't see yourself with a guy who hands out putters. That makes sense. I mean, a beautiful woman like you could do a whole lot better than a guy who works at a place like this.\"\n\nHe knew that was likely a part of it, but most importantly, he was clearly a lot younger than her, and although she looked young and beautiful, Madison didn't look 21 or even 25. \n\n\"I don't know you at all, but I can tell you're a very intelligent young man, Neil. So I'm quite sure this isn't your final destination in the world of work. But that's not the issue.\"\n\n\"Okay. I understand,\" he said, waiting for her to relax.\n\n\"Thank you,\" she replied. \"I didn't want to have to spell it out for you.\"\n\nNeil kind of hung his head then scuffed his shoe on the pavement before saying, \"I get it. You're an incredibly beautiful woman, and I'm just your average Joe, so...\"\n\n\"What? Hold on. What did you just say?\" Madison asked, his little ruse working perfectly.\n\n\"The issue. The one you don't want to have to spell out. I...I get it. I broke the code. You're out of my league, and I can't argue with you. But I really do have higher aspirations for my career, and that spills over into my search for a future partner to travel life's road with. Obviously, I've set my sights a little too high, so...I get it.\"\n\nBeginning to understand what was going on, Madison smiled then laughed. It wasn't a loud laugh nor was it long, but it was a laugh.\n\n\"Okay. I see what you're doing here,\" she said, now smiling herself. \"That was actually very convincing acting for a moment there. You trying to play the poor, innocent 'I'm not handsome enough' thing to avoid talking about the, um...the elephant in the room.\"\n\nNeil stood up very straight, opened his eyes widely, then said, \"So I...am...handsome enough?\"\n\nMadison tried not to laugh, but this time, his charm was too much.\n\n\"You're...quite handsome, Neil. And I'm sure there are all kinds of girls your age who'd love to spend time with you,\" she told him.\n\n\"But I'd prefer to spend my time with you,\" he replied, the smile now gone.\n\nAgain, she stood there just looking at him and wondered why he was doing this.\n\n\"You do know I have a nine-year old son, right?\" she said, hoping that would help him understand her point of view.\n\nHe looked back into the car, and again, Kenny waved at him, a big old smile on his face.\n\n\"Yep. I figured that one out all by myself, too. And for the record, I enjoy spending time with him, as well,\" Neil told her, still smiling at her.\n\n\"No. That's...that's not it,\" Madison said, now getting frustrated that he was being so stubborn.\n\n\"No?\" Neil replied as though he had no idea what she was talking about.\n\n\"Neil, please,\" she pleaded. \"Just add it all up. A boy who's nine means I'm...old\u2014er.\"\n\n\"Old..er...than what?\" \n\nHis reply was exasperating, and she let out a loud, \"Ugh!\" then said, \"What is wrong with you?\"\n\n\"Nothing?\" he said with a shrug of his shoulders. \"At least nothing that I'm aware of anyway.\"\n\n\"Maybe I was wrong. Maybe you're not nearly as smart as I thought you were.\"\n\n\"Or maybe I'm right and you're just afraid to admit it?\" he asked with another, smaller shrug of the shoulders.\n\n\"You're not going to stop, are you?\" she said, a new kind of look on her face.\n\n\"I will once you agree to go out with me,\" Neil told her as he moved a step closer.\n\nMadison was so completely taken aback, all she could do was stare at him.\n\n\"One date,\" Neil said, his smile back in full force. \"After that, if you ask me to leave you alone, I will.\"\n\nWhen Madison neither spoke nor changed the expression on her face, Neil said, \"Scout's honor,\" as he held up three fingers in the Scout salute.\n\n\"Wait. You're not seeing someone, are you?\" he asked as the human statue continued to stare at him.\n\n\"No. I'm...I'm not seeing anyone,\" she told him, her words quiet and almost monotone.\n\n\"So that means there's no reason we can't go out, right. And it's just one date.\"\n\nNeil moved a bit closer, smiled again, then said again, \"Right?\"\n\n\"Does putt-putt count?\" she managed to ask, as her eyes began moving quickly between his.\n\nNeil kind of closed one eye, scratched his head, then looked up at her and said, \"Um...no. I'm not seein' that. Don't get me wrong. I'm hoping you'll use the tickets I gave you, but no. That definitely wouldn't count.\"\n\n\"Are you...are you even old enough to...to go to a bar?\" she asked, her voice still small, and her throat now very dry.\n\n\"I am,\" he told her as though it was obvious. \"Why? Is that where you'd like to go on our first date?\"\n\n\"First date?\" Madison asked, the emphasis on the word 'first' being very strong.\n\nBefore Neil could reply, Kenny opened the door and called out, \"Mom! What's taking you so long?\"\n\n\"I'll...I'll be right there, honey,\" she called back.\n\nKenny was looking at them between the crack of the door and the frame of the car and said something that shocked his mother even more than Neil's attempts to ask her out.\n\n\"Are you guys gonna kiss or something?\" Kenny said rather loudly.\n\n\"What? Oh, my...goodness!\" Madison said as she shook her head. \"This...this is completely out of control!\"\n\nNeil moved close enough that he was now just inches in front of Madison then said, \"If you'll say 'yes', I promise I won't kiss you until after our first date.\"\n\nWhen her jaw dropped, and her eyes bugged out, Neil managed not to laugh.\n\n\"That offer won't last long, Madison. I suggest you say 'yes' and end the torture.\"\n\nShe made a kind of scoffing or snorting noise then said, \"Torture. That's exactly what this is. This...this is just...torture!\"\n\n\"So was that a 'yes'?\" Neil asked, as he looked down into her eyes and smiled.\n\nMadison was so shaken up, she looked away and tried to back up, but there was nowhere to go.\n\n\"Okay. Yes,\" she said without looking at him.\n\n\"Yes? Really?\" Neil replied, as he bent his head sideways to get her to look up at him.\n\n\"I...I must be losing my mind,\" she said quietly as she looked into his eyes. \"But, okay. I'll go out with you. Once.\"\n\nAgain, there was a very strong emphasis on one word at that word was 'once.'\n\n\"Well, that was easy,\" Neil said, only adding to her exasperation.\n\n\"May I please leave now?\" she asked, as she really looked into his eyes which made her heart flutter.\n\n\"With or without the kiss?\" he said, pretending to be very serious.\n\n\"Without. Definitely without,\" she said, not just pretending to be serious.\n\n\"May I at least get your phone number?\" Neil asked, adding insult to injury.\n\n\"Will that let me get away from you?\" she replied, her heart beating faster as he stood close enough to her that she could almost feel his warm breath on her face.\n\n\"Uh-huh. Yes, it will,\" he assured her.\n\nMadison said each digit then asked if Neil was going to write it down.\n\n\"No need. I won't forget,\" he told her before stepping aside and opening the door for her.\n\nAs she stepped around him and got in, he leaned in and said goodbye to Kenny.\n\n\"Bye, Neil!\" the boy said excitedly.\n\n\"Remember. Come back and see me soon, okay?\"\n\n\"I will!\" he told him.\n\nNot sure what to do next, Madison just sat there until Neil smiled at her and said,\"Drive carefully.\"\n\nHe closed her door, waved goodbye to Kenny, then just smiled at his now very-rattled mother who couldn't believe she'd just agreed to go out with...a kid. But as she drove away, she smiled when she thought to herself, \"A very handsome kid, though.\"\n\nThe truth was, Madison did have trouble with men. Meeting them was hard enough, but the real issue was Kenny. He not only had the issue with his eye, he was more than a little socially awkward, something she knew he'd outgrow in time. She knew that if they could align his eyes, he was actually a very cute boy who would one day be as handsome as his father, a very attractive man himself, but hopefully not as shallow.\n\nMadison's confidence had returned by the time she got home, but it took another big hit when she saw a text from none other than Neil when she got inside.\n\n\"Hi, Madison. I wanted to apologize for the rather...odd conversation...but I knew the only way a woman like you would ever agree to go out with a guy like, well...a guy my age...was with a little...cajoling. If that came across the wrong way, it wasn't meant to at all. And the truth is I do recognize the difference in our ages. I understand that might be a 'bridge too far' for you, but it doesn't matter to me in the least. So my hope is you'll give me an opportunity to prove to you I'm not just some 'college boy' hoping to swoop in then run away, but a thoughtful, caring guy; one who, by the way, happens to find you incredibly attractive. I had a whole lot of fun tonight playing putt-putt with you and Kenny, and I really am looking forward to going out with you. And if you'd feel better by bringing Kenny with you, that would be fine by me. In fact, I'd actually prefer it if it was all three of us. So if I haven't scared you off, I'd love to know what kinds of things you enjoy. I'm happy to decide, but I think decisions made together are usually better. I look forward to hearing from you and to seeing you again\u2014soon.\"\n\n\"Mom? Are you listening?\" she heard Kenny say, knowing she hadn't been.\n\n\"Oh. Sure. I'm listening,\" she replied before asking, \"What did you just say?\" proving she hadn't been.\n\nAs her son looked at her, his left eye, as always, was about 30 degrees to the side. And, as always, it nearly broke her heart. He was far more than this one issue, but the reality of life was that other boys\u2014and girls\u2014wouldn't see anything else unless that was corrected. And as of right then she had a grand total of a $157 in her savings account and no insurance that would cover that kind of procedure.\n\n\"Sorry, honey. I...I was just distracted. Can you please tell me one more time?\"\n\n\"When can we play putt-putt again?\" he asked.\n\n\"Oh. Right. That,\" she said as she recalled the events of what was perhaps the most unusual evening of her entire life. \"Um...soon, okay?\"\n\n\"Okay!\" he said, satisfied with the answer before running off having no idea the confusion meeting Neil Monroe was causing his mother.\n\nWhen Neil got home he sought out his father as soon as he set his keys down.\n\n\"Did Tiger Woods stop by tonight?\" his dad asked as soon as Neil walked into the living room where he was watching TV or at least had it on to keep him company.\n\n\"No. Not tonight, Dad. But I'm not givin' up hope,\" his son replied.\n\n\"It's really amazing how his whole life unraveled after his wife found about his...philandering,\" Keith said about the world's one-time greatest golfer.\n\n\"Yeah. He lost his marriage and hasn't won much of anything since.\"\n\n\"I have to assume playing under the pressure of keeping things secret might have been some kind of powerful motivator that helped keep his mind sharply focused.\"\n\n\"Geez, I don't know, Dad. Seems like it might be the opposite, but what do I know?\"",
        "\"Don't ask me. Since your mom passed away, I haven't even been on a date, and the truth is, I have no interest. Anyway...\"\n\n\"It's funny you brought up dating. I say that because although Tiger Woods didn't drop by, I did kind of meet someone tonight.\"\n\n\"At the damn putt-putt place?\" his father said, suddenly perking up. \"Is there anywhere you can't pick up women?\"\n\nNeil had more opportunities than one could shake the proverbial stick at, but he was extremely selective about the women he dated. So this announcement really caught his father's attention and also reminded him of his own days back in college before meeting Beth when he'd been able to find a girl to 'hook up' with almost anytime he wanted.\n\n\"Yeah. This...this freaking gorgeous woman came in with her son because today was his birthday.\"\n\n\"You don't say. How old is the kid, and how old is she?\" his father asked now that he knew this gorgeous woman wasn't a coed.\n\n\"He's nine, and I don't know about her. All I can tell you is she's incredibly nice, and...hot as hell. She has to be over 30, but there's no way she's over 40.\"\n\n\"You're interested in a woman over 30?\" his dad asked, but not in an accusatory way.\n\nNeil turned and looked right at his father then said, \"Yeah. I kinda am.\"\n\n\"Ten years is a lot of years, son,\" his dad replied. \n\n\"It might even be more than ten, Dad. But the funny thing is, I felt something; something I've never felt before.\"\n\nHe saw his dad smile and knew why immediately.\n\n\"Okay, okay. I know I don't exactly have a wealth of experience when it comes to women, but that doesn't mean there wasn't some kind of connection.\"\n\nHis dad didn't laugh. In fact, he surprised Neil by saying, \"Maybe you should ask her out then.\"\n\nHe surprised his dad even more by telling him that he'd done that, and that did cause his father to chuckle before saying, \"I don't know whether to congratulate you or counsel you on your lack of judgment.\"\n\n\"When you meet her, you'll know what I mean about being beautiful. She's maybe 5'7\" or so, thin but not skinny, and she's got long, dark hair and these amazing blue eyes. And that smile of hers is...it's a killer, Dad. And did I mention how nice she is?\"\n\n\"You might have let that slip out, but let's be honest here. The one thing you can be sure of is she doesn't like you for your money.\"\n\nNeil gave his dad a look, but when the older man started laughing, his son laughed, too.\n\n\"Am I crazy?\" he asked his father.\n\n\"Again, don't ask me. All I can say is love is a strange animal, Neil my boy. Sometimes it lurks in the background and takes months or even years to make its presence known. Then at other times it just...pounces on us and makes us do things we never dreamed of. All in all, the main thing is finding someone who supports you and who's completely committed to staying together. You gotta have a few things in common, of course, but if she's not committed to commitment\u2014run like hell.\"\n\n\"It's too early to say anything more than I'm kind of crushin' on her, but she seems like an amazing woman, and I...I really enjoyed the time I spent with her son whose name is Kenny.\"\n\n\"After saying I don't have any advice, I've already offered some, so let me offer a little more while I'm at it,\" his dad said without waiting for approval. \"Just take things slow and see where they go. It's unlikely any given relationship is going to be the one, and with such a big difference in age, this one seems unlikely in the extreme. But if you like her and she wants to spend some time with you then take some time and see how you really feel about her. What I will tell you is that there are a lot of things more important than age, and obviously there's no guarantee a marriage will last a lifetime no matter how much you have in common. That may not be all that helpful as I'm just kind of restating the obvious, but love isn't subject to any formula. You kind of play it by ear, and if it's meant to be it just sort of unfolds all by itself.\"\n\nIn an unusual moment of seriousness, Neil said, \"Thanks, Dad.\"\n\n\"Sure thing. Just remember my advice is free, and that you get what you pay for,\" his dad replied with a wink. \"You want a beer?\"\n\n\"No, thanks. I'm gonna go do a little reading for class then hit the rack.\"\n\nThe retired colonel smiled but didn't mention how good it was to almost have another Marine around the house who spoke his language. Best of all, his son had had a first taste of the life his father had lived and loved, and so far he seemed to want more of it. Whether he did or not, Keith Monroe was damn proud of his son and planned to let his mother know that yet again once he was alone.\n\nThat same night while Neil was talking with his father, Madison was tucking Kenny in when he surprised her and gave her a huge hug and told her he loved her.\n\n\"I love you, too, buddy,\" she said back.\n\nCurious, she asked if everything was okay.\n\n\"Uh-huh,\" he said with a happy smile. \"Everything is just...fine! Today was my birthday and I made a new best friend.\"\n\nThe confusion had waned again, but Madison knew that was only because she'd forced herself to stop trying to make sense of what she'd been feeling. But now that Kenny had reminded her of the source of the confusion, and also having just announced that the source was his new best friend made her realize this wasn't going to go away until she dealt with it. \n\nThe solution seemed simple. The bigger problem, of course, was how to go about dealing it without anyone getting hurt\u2014especially her nine-year old son.\n\nShe wasn't about to pass on any of her own anxiety to her son, so she only smiled and told him she was glad he had a good day.\n\n\"Mom?\" he said.\n\n\"Yes?\"\n\n\"I really like Neil.\"\n\nNot sure what else to say, she settled on, \"Oh, okay. That's really wonderful. Good night, honey. I love you.\"\n\n\"I love you, too!\" he said before turning over on his side and pulling the covers up over his neck.\n\nUnable to think of a way to get herself out of the mess she'd gotten into, Madison decided to go lay down herself and see if she could make it all go away by falling asleep. But when midnight came and went, she was still wide awake and staring at the ceiling fan above her bed as she tried to understand why she was so wrapped around the axle about...\n\n\"About what?\" she asked herself for the umpteenth time before turning on her side to see if that might help.\n\nWhen she continued recalling the events of the evening from the way Neil had come to Kenny's defense to his very sweet text, she was ready to give up trying. She had to go to work in seven more hours, and she needed at least six of those to be spent sleeping.\n\nBut it took another hour to finally fall asleep after reminding herself she barely even knew this...man. But that thought only caused her to remind herself that she could change that by getting to know him, which made her ask herself why she would ever want to do something that made so little sense.\n\nMercifully, this endless loop eventually gave way to fatigue and Madison was able to get five full hours of rest before getting up and starting another day in which she'd make just enough money to pay her bills. If she were lucky, there might be a few dollars left over a day after payday with the key words being 'if' and 'might'.\n\nKenny was almost always in a good mood in the morning, but he was exceptionally bubbly at breakfast as his very-tired mother sipped coffee while he crunched cereal.\n\n\"I had the best time ever playing putt-putt with Neil,\" were his first words after 'good morning'.\n\nHis mom smiled but didn't say anything.\n\n\"Can we use our free tickets today?\" was the next thing he said.\n\n\"Today? Don't you think we should save them?\"\n\n\"Why?\" Kenny asked.\n\n\"So we'll have something to look forward to,\" his mother said, hoping to use this as a so-called teachable moment.\n\n\"How about Friday?\" Kenny suggested in between big bites.\n\n\"How about\u2014we'll see?\" his mother countered.\n\n\"Okay,\" Kenny replied, his mouth stuffed with soggy cereal.\n\nAs she stood in the shower, Madison tried to clear her head, but she found it impossible when she told herself she needed to at least answer Neil's text. But how? What would she say? What should she say?\n\nHer very long hair wrapped in a towel drying enough so she could blow dry it, Madison sat on the bed and reread Neil's text. She drew in a deep breathe then exhaled slowly before replying.\n\n\"Hi, Neil. First of all, there's nothing to apologize for. I didn't feel 'cajoled'. But I do feel...confused. I have to admit Kenny thinks the world of you, and I can't thank you enough for standing up for him. As you can imagine, he has a hard time making friends, and he definitely bonded with you. As much as that means to me, you know I'm also worried he'll get his hopes up only to have them dashed. I'm not implying you'd do that intentionally. On the contrary, I think you're a very nice young man. But the welfare of my son has to come first. So while you also made quite an impression on me, as well, I'm not sure it would be a good idea to see you again even though I said I would. Please don't take that as a rejection. Were you a few years older, I'm sure my current 'fence-sitting position' as to whether or not to spend more time with you would tilt in the 'yes' direction. But, as much as I hate to say it, I'm 36 years old, Neil, and you're not even out of college. Anyway, I hope you understand. You're a very attractive guy, and again, were you even say...30...that would make a world of difference. But you're not, and I'm rambling and I apologize, but the short amount of time we spent together has caused me all kinds of mental angst. My life is complicated enough without having to constantly wonder why I'm even attracted at all to someone your age, so it really would be best if we left things right where they are. Again, thank you for your kindness and your friendship as well as the sweet things you said. I hope we can at least be friends.\"\n\nMadison read what she wrote and knew she could edit it forever and still not say things the right way so she hit 'send' and went to blow dry her hair and get ready for work.\n\nNeil was just starting his first morning class when he got her text. He would have ignored it had it been from anyone else, but when he saw Madison's name, he tuned out the TA teaching who was droning on and read the text.\n\nRather than be discouraged, Neil saw hope in what she'd written and planned to address her concerns in his reply once he had some free time to collect his thoughts and plan his response.\n\nHe had a three-hour break between classes that day following his first lecture, and he normally spent that time in the library studying then grabbing a bite to eat before going to his next class.\n\nToday, Madison was his first priority, so after rereading her text and absorbing what she said, and even more importantly, what she implied, he gave some thought to how to answer her.\n\n\"I'm really glad you replied. I was thinking perhaps I'd offended you to the point that you wanted nothing to do with me. Well, you kind of implied that was the case but not exactly.\"\n\nHe put in a smiley face emoji then continued.\n\n\"What I'm feeling is very different than what you wrote. Your words alone say you don't want to see me again because of concerns you have. But underneath all that is where the something different can be found. I know I don't know much about you, but I 'hear' you telling me you really would like to see me again, IF you knew you wouldn't have to worry about Kenny or what you may perceive as my lack of maturity.\n\nLet me start by saying age and maturity aren't synonymous. Some men are 40 or 50 and still make the same mistakes year in and year out. They lack initiative or sticktoitness (if that's even a word.) Perhaps perseverance is the better choice. They can't commit or stay committed. They have wandering eyes and unfaithful hearts. I'm none of those things, Madison. I'm not looking for a 'hook up' or anything close to that. I'm young, but I'm family oriented and I'm ready to commit to the right person. And once I commit to something I never quit. Ever.\n\nAs to Kenny, I understand completely how you feel. All I can tell you is that I enjoyed 'golfing' with him as much as he did with me. I have no way of knowing if you and I would ever become permanent fixtures in each other's lives, but I can promise you I will never intentionally hurt you or Kenny.\n\nI really did enjoy spending time with both of you, Madison. And nothing would make me happier than to be able to spend more of it with you\u2014with both of you\u2014better. Again, I can't promise I can overcome all of your concerns, but unless we do spend some more time together, we'll never find out. And I, for one, would very much like to know. And my gut tells me you would, too. \n\nSo please don't dismiss the possibility of 'us' out of hand. Give me the opportunity to show you I'm not the typical 21-year old guy. I'm confident enough to say that if you will, you'll be pleasantly surprised. And from there...who knows?\n\nWow. I just realized that what I wrote sounds pretty intense. But as I said, I'm being forced to break down some pretty heavy walls here to even have a chance with someone like yourself.\"\n\nHe added another smiley face then wrapped it up. \n\n\"Please give this some careful though, and have a wonderful day. And please give my best to Kenny, okay?\"\n\nHe thought about adding some hearts, but he wasn't sure that was okay and left it at that.\n\nMadison worked at a beauty salon, and she was with a customer when her phone buzzed. She was cutting the woman's hair and nearly lopped off the entire handful she was snipping when she saw who it was from.\n\n\"Sorry,\" she told the woman. \"I'm a little distracted today.\"\n\n\"Ahh. Must be love,\" the older woman said with a warm smile. \"Care to talk about it?\"\n\n\"Is it that obvious?\" Madison asked.\n\n\"It is now,\" the woman said as she laughed.\n\n\"I don't want you to think I'm a basket case,\" Madison said.\n\n\"You've been cutting my hair for what? Nine months now? I won't think that because love makes all of us do some crazy things.\"\n\nMadison's best friend also worked at the salon, a woman a little younger than her named Gabby. She overheard the conversation and decided not to say anything about this mysterious new man in her best friend's life who was clearly causing her so much trouble. \n\nThat lasted until lunchtime when Gabby grabbed her friend and said, \"Come on. Lunch is on me today.\"\n\nAs they looked over the menu at a little diner just down the street, Gabby said, \"I'm expecting something in return for buying you lunch, Madison.\"\n\n\"Uh-oh. Please don't tell me you have another uncle you want to set me up with.\"\n\nGabby laughed and assured her she didn't.\n\n\"No, no more uncles, and I do apologize about the disaster my only uncle turned out to be. That said, I did kind of overhear you talking about someone who's making you crazy.\"\n\n\"Oh. Now I see,\" Madison teased. \"So you were eavesdropping?\"\n\n\"Not intentionally. I just happened to hear. That's all,\" Gabby said before adding, \"So?\"\n\n\"Oh, my gosh! Gabby, this is so...embarrassing!\"\n\n\"Hmmm. Sounds like this could be juicy!\"\n\n\"No. It's definitely not juicy. It's just...weird.\"\n\n\"Oh, okay. Whew. Glad we settled that!\"\n\n\"Gabby! Stop,\" Madison told her as their server came to take their orders.\n\n\"Fine. I'll stop if you'll start.\"\n\nMadison sighed another long sigh then dove in headfirst and told her friend everything that had happened from the time the walked up the counter at the miniature golf course through Neil's last text. She even let Gabby read their text exchanges, and to Madison's surprise, her friend got serious.\n\n\"Honey? This guy likes you. A lot. And he likes Kenny. And Kenny likes him. You said he's super nice and that he stuck up for your son when he was being bullied, and that was before he even knew you. Then we have the part where a guy actually tells you upfront he's not just looking for a hook-up and that he thinks you're beautiful. Come on, Maddy, that's all ANY guy is ever looking for, right? And last but not least you said, and I quote, 'He's freaking gorgeous'! So what am I missing?\"\n\nMadison's jaw dropped as she shook her head in disbelief.\n\n\"Did you miss the very important little detail about him being twenty...\"\n\nShe realized how loudly she was speaking and stopped then finished in a whisper.\n\n\"Twenty-one? Twenty-one for crying out loud. How am I even thinking about seeing him again?\"\n\nGabby reached across the table and put her hand on her friend's arm then said, \"I can't answer that for you. But having been cheated on twice before, I can tell you that good men are hard to find. Sure, maybe I've been looking in the wrong places all my life, but I'd give anything to have a man that committed to me and our marriage.\"\n\nGabby could see how tortured Madison was by this and tried to stay supportive.\n\n\"But he's...21, Gabby. Not...31. Twenty-one!\" Madison reemphasized.\n\n\"Sweetie? I heard you when you said that the first two times. I'm not dismissing it, but just looking at the way he writes, he sounds more like my father than...than someone who's, you know...\"\n\n\"Twenty-one?\" Madison said, that tortured look still there until Gabby raised an eyebrow and cocked her head to the side causing Madison to finally laugh. \n\n\"So maybe give this Neil guy a chance.\"\n\n\"But what if Kenny ends up getting hurt?\"\n\n\"Good point,\" Gabby said, drawing her friend into her web.\n\n\"See? You understand!\"\n\n\"What I meant, and what I understand is, that he could be 31 or even 41, and Kenny could still get hurt. So...do you understand that?\"\n\n\"I kind of hate you right now,\" Madison replied quietly, the hint of a little smile forming visible at the corners of her mouth.\n\n\"Because you hate being wrong,\" Gabby told her. \"But what if, and I know this is a big 'if'. But what if he's the perfect guy for you? What if he is and you never find out because you're so hung up his age rather than his...what did he say? Maturity?\"\n\n\"Yes. Maturity. And he really is incredibly mature. I honesty felt like he was the older person when we were together. But once I really started thinking about his age, I...I panicked.\"\n\n\"That's what friends are for, Maddy. We listen. We offer advice. We provide support. So now that you've aired this all out, what are you going to do?\"\n\n\"Cry?\" Madison suggested, unable to keep from laughing once Gabby started.\n\n\"No, you're not going to cry. You're going to text him back and tell him you'd love to see him again.\"\n\n\"Love to? You mean 'like to' or...'be willing to', right?\n\n\"You can choose whatever word you like, hon. Just let him know you're interested. And while I'm talking...how about letting me do something with your hair?\"\n\n\"What kind of something?\" Madison asked even though Gabby was by far the best stylist in the salon. \n\n\"You're beautiful, sweetie. God knows I'd kill to have your looks. I'm 32 and I look five years older than you, for cryin' out loud.\"\n\n\"You do not!\" Madison told her even though what Gabby'd just said was true.\n\n\"Well, thank you. I'll take the compliment. But you really need to cut your hair. And style it.\"\n\n\"What? No way. I'm not cutting my hair. Uh-uh!\"\n\n\"Relax. I'm not talking about something above your ears even though you'd be too-die-for cute in what I'm picturing,\" Gabby said as she imagined her friend with something sassier.\n\nMadison gave her the 'death stare' so Gabby got serious.\n\n\"You've worn your hair to the middle of your back for years, right? And while it really does look amazing on you, we need to bring it up a little.\"\n\nMadison flinched so Gabby quickly assured her it would still touch her shoulders.\n\n\"And no offense, hon, but parting your hair in the middle like that went out in the early 70's.\"",
        "\"I...I like my hair parted down the middle,\" Madison said defensively while knowing Gabby was right.\n\n\"Fine but you'll look absolutely stunning with a side part with maybe some wispy bangs. And I say we put in a soft, gentle wave and maybe a little inward curl at the bottom.\"\n\nGabby was 'checking her out' to the point of making Madison uncomfortable when she said, \"I'm totally straight, but just thinking about you with that hairstyle in something sexy could almost make me switch teams!\"\n\nMadison's jaw dropped again, but as before, as soon as Gabby started laughing, Madison joined in. This time the laughter was more cathartic than anything else, and by the time they'd finished their lunch, Madison agreed. To both suggestions.\n\nSo just before they left, she got out her phone and typed, \"You should consider a future in sales, Neil. I've gone from thinking 'no-way, no-how, not ever' to really looking forward to seeing you again. Just let me know when, okay?\"\n\nShe showed it to Gabby who gave her a very disapproving look.\n\n\"What? What's wrong with what I wrote?\"\n\n\"I don't see the word 'love' anywhere in there,\" he friend told her as she raised her eyebrows in mock disapproval.\n\n\"Wench!\" Madison said as though she was upset. \"I'm sending this.\"\n\n\"I actually love it,\" Gabby told her as Madison hit 'send'.\n\n\"Come on. Let's back to the salt mines so I can do your new 'do' at the end of the shift, comrade!\"\n\nMadison laughed and thanked her friend sincerely for both the advice and her support.\n\n\"Hey, that's what friends are for. And if Neil has a brother...\"\n\n\"An older brother?\" Madison asked as she tried not to laugh.\n\n\"Either/or,\" Gabby told her. \"If this goes well for you, I may start cruising high schools for anyone over 18 interested in someone my age.\"\n\n\"Hah! Yeah, right,\" Madison replied as she realized her friend was almost crazy enough to possibly do something like that.\n\nWhen Gabby finished with her hair late that afternoon, Madison was well beyond pleasantly surprised.\n\n\"Oh...my...God!\" she said as she looked at herself once Gabby spun her around.\n\n\"See? Did I call it or did I call it?\"\n\nMadison tilted her head then turned it left and right as her soft, shiny hair moved with her.\n\n\"You totally called it. It...it looks amazing, Gabby.\"\n\n\"Yeah, I know,\" her friend said as she blew on her curled fingers then rubbed across the top of her smock. \n\nWhen Madison stood up, the new style looked even more amazing, and once she finally stopped staring at herself she checked her phone and realized Neil had responded to her text.\n\n\"Let me see!\" Gabby said when she saw Madison turn away after picking up her phone.\n\n\"Shhh! Hush already!\" she told the gawking Gabby who kept trying to sneak a peek.\n\n\"What'd he say? Tell me!\"\n\nMadison turned around and handed her friend the phone. Gabby smiled, took it, then read the reply.\n\n\"Oh, my. This...this is...great!\" she said as she hugged her friend.\n\nWhen Madison let go, she got serious.\n\n\"Gabby? Thank you. For everything.\"\n\n\"Hey, you shared your budding romance with me, and that's the closest I've gotten to anything remotely connected to intimacy in, let's see here...\"\n\nShe started counting on her fingers, and Madison felt terrible knowing it had been several months since the last guy who cheated on her broke her heart. She felt even worse knowing he'd been the last guy...period.\n\n\"Come on. Let's get out of here,\" Madison said as she took her friend's arm and walked outside with her where they hugged again.\n\n\"Keep me posted?\" Gabby asked, a hopeful look on her face.\n\n\"I will,\" Madison promised.\n\n\"Okay. Then...good luck!\"\n\n\"Thank you!\" Madison said as she got in her old car and headed to the school where Kenny stayed in 'aftercare' each day until she could get there.\n\n\"Mom!\" he said as soon as he saw her. \"What happened to your hair?\"\n\nCrestfallen, she told him Gabby had just cut it.\n\nBut her mood changed immediately when her son shyly said, \"You look like a movie star, Mom.\"\n\n\"Ah! You sweet boy! Come here!\" she said as she grabbed him to give him a hug, forgetting a couple of other boys were still there.\n\nWhen he pulled away she realized why and said, \"Sorry! I...I know better than to do that.\"\n\nKenny smiled so his mom leaned down and said, \"In public, anyway.\"\n\nAs soon as they got outside, Kenny took her hand and asked about Neil again.\n\n\"Funny you should ask, Augie my son, my son,\" she told him using a line from a very old cartoon called Augie Doggie, before letting him know what they were doing.\n\n\"For reals?\" he asked, almost too excited to speak.\n\n\"For reals. Tonight. So we'll have to go home and get ready quick like bunny rabbits, okay?\"\n\n\"Yes!\" Kenny said as he dipped down and did some kind of celebration thing with his free arm that made his mother laugh. \n\nWhen they got to the car Kenny said, \"You can hug me now if you want to.\"\n\n\"Oh, really?\" she said, pretending like she might not still be interested. \"What if one of your buddies is still watching?\"\n\n\"I don't care. I'm so happy, I'd let you hug me inside!\" he told her, causing her to laugh for reasons her son didn't understand as she bent down and hugged him.\n\n\"You look really pretty, Mom,\" he told her again.\n\n\"Thank you, honey. When my best guy tells me that, it makes me very happy.\"\n\nKenny ignored the kind reply and said, \"Can we go now?\" causing his mom to laugh yet again.\n\n\"Yes, we can go now,\" she told him as she chuckled and continued doing so off and on the whole way home.\n\nNeil was taking them to a place called the Boundary Bay Brewery and Bistro, a restaurant that advertised itself as an 'expansive, unfussy brewpub serving locally sourced pub grub and craft beer'.\n\nAfter that, they were going to the Spark Museum of Electrical Invention, an educational place that covered the the dawn of the electrical age from the 1600s through the golden days of radio and up to the present. It was both educational and fun, and Kenny couldn't wait to go there. Not because he was overly interested in electricity, but because Neil would be there with him.\n\nAnd after talking to Gabby, Madison was no longer fretting and hand wringing about going out with someone...Neil's age. Or more to the point, with Neil Monroe himself. \n\nIt would be whatever it might be, and she would do her best to think of it as a kind of springboard for maybe taking more of an interest in dating. She had to look at it that way, because were she to think of it as anything more, it had the potential to be a setup for huge disappointment somewhere down the line. \n\nSo for now, anyway, she'd have fun, not take things too seriously, and talk with Kenny about keeping his own expectations realistic.\n\nAs she got ready, Madison was well aware it was September, and so far at least, the weather hadn't yet turned cold. It wasn't exactly warm outside, but it also wasn't cold, and for this time of year, that was a very unexpected treat.\n\nShe had a blue print dress with cap sleeves she hadn't worn in at least a year. It was nice enough to be dressy but still casual enough to wear nearly anywhere. The print pattern consisted of white stars on the dark-blue material, and once she saw herself in it again, she remembered why she liked it so much.\n\nThe hem fell to maybe two inches above her knee, and still able to wear a size 6, it looked perfect on her. But as much as she liked the dress, she couldn't stop looking at her new 'do'. \n\n\"Gabby? You're a genius,\" she said as she looked at her shiny, silky mane. \n\n\"Wow, Mom! You look even prettier than before,\" Kenny told her when she came out wearing the dress.\n\n\"Do you really like it?\" she asked.\n\n\"Uh-huh. And Neil's gonna like it, too!\" her son assured her just as the doorbell rang, startling Madison.\n\n\"I'll get it!\" Kenny yelled as he ran for the door.\n\nKenny flung the door open and before Neil could speak or move, Kenny threw his arms around him.\n\n\"Hey, dude! How are you?\"\n\n\"I'm good. How are you?\"\n\nMadison was at the door by then and mouthed, \"Sorry!\" but Neil just smiled and shook his head.\n\n\"Do you know where we're going?\" Kenny asked, as though Neil wasn't the one who'd decided.\n\n\"I don't know. You tell me,\" Neil said as Madison gently moved her son out of the doorway.\n\nAs Kenny rattled off the two places, Madison smiled at him and said, \"Hi.\"\n\nHe said it back then gave her a quick once-over and shook his head.\n\n\"Just...wow!\"\n\n\"Really?\" she asked, hoping he meant it.\n\n\"Uh...yeah. Are you kidding? And your hair is...gorgeous. No, you're gorgeous.\"\n\n\"Isn't my mom pretty?\" Kenny said, not caring that Neil hadn't really heard him explain where they were going. \n\nThen, just as quickly, he changed subjects again and asked, \"Can we go now?\"\n\n\"Kenny!\" his mom said but not too sternly.\n\n\"Sorry,\" he said bashfully. \"I'm just so excited!\"\n\n\"Me, too, buddy,\" Neil told him. \"But if you are ready...\"\n\n\"Yes. Let me just get my purse and a sweater, and I will be,\" Madison told him.\n\n\"Love the dress!\" Neil said as she walked away.\n\nSmiling happily, her back to him, she said, \"Thank you!\" as she grabbed her things.\n\n\"Here. Let me help you,\" Neil said as he took the thin cardigan and held it out for her. \"It's not bad outside right now, but it'll be a little chilly very soon.\"\n\nMadison thanked him again and then once more at the car, a ten-year old Toyota Camry he'd recently bought from his dad when he bought the Cherokee which had less than a thousand miles on it. \n\nNeil knew his dad was 'loaded', but money wasn't something his parents ever discussed. They bought a fairly nice, brand-new home when they moved back to Bellingham, and Neil knew his parents had paid cash for it just like his dad had done for the SUV. Keith didn't bother trading his car in. He offered it to his son at well below Blue Book value, and like most Toyotas, it was still going strong with over 100,000 miles on it.\n\n\"I like your car,\" Madison said as Neil held the door open for her.\n\nThe car was older but had been extremely well cared for, and the inside looked very nice for a car with much wear and tear on it\u2014especially the leather seats.\n\n\"Oh, thanks. I bought if from my dad a few months ago. I think driving it around made him miss my mom too much,\" he said. \"He almost never mentions it, but when she passed away, my dad just kind of fell apart.\"\n\nNeal's comment caused Madison to stop getting in, and out of nowhere she hugged him.\n\n\"I am so sorry. I had no idea you'd lost your mom,\" she said as the warm, sincere hug ended.\n\n\"Thank you. It was hard on both of us.\"\n\n\"I can only imagine,\" she said as she stood there just looking at him and genuinely feeling sorry for him. \"Both of my parents are still alive, so no, actually...I can't.\"\n\n\"Let's get going, shall we?\" Neil said in an upbeat way.\n\n\"Oh. Yes. Of course,\" Madison replied as she smoothed her dress and got in.\n\nShe wanted to ask so many questions, but Kenny seemed to have even more. And when he wasn't asking a question he was making a comment.\n\n\"I guess it's obvious my son really likes you,\" Madison said during a rare moment of quiet, so quietly Kenny couldn't hear her.\n\n\"Well, I like him, too. And his mom,\" Neil told her.\n\nMadison smiled but didn't say anything so Neil added, \"So that means everyone likes everyone in this car with one possible exception.\"\n\n\"Hey! That's not fair,\" Madison told Neil. \"I never said I didn't like you.\"\n\n\"And I never said you said you didn't like me,\" Neil came back with.\n\n\"Wait. What?\" Madison asked, thoroughly confused until it came to her. \n\nOnce it did, she said, \"Well, maybe I do like you then.\"\n\n\"I'll take a maybe,\" Neil told her with a smile. \"For now.\"\n\nDuring dinner, Kenny continued peppering Neil with questions even after his mom asked him to give Neil a chance to eat. He barely slowed down, but what touched her heart was the way Neil answered every question, and not just with 'yes' or 'no' answers. He took the time to explain something when needed, and asked Kenny questions about the topic in return. At one point, Madison was so caught up in it, she realized she hadn't touched her food. And then she realized she was on the verge of tearing up.\n\nAs they walked back to the car Neil said, \"You've been awfully quiet tonight.\"\n\n\"I haven't said a lot, but I've definitely been paying attention.\"\n\n\"Yeah?\"\n\n\"Uh-huh. And based on what I've seen and heard, I suppose it's at least possible that I maybe...do like you,\" she said rather coyly.\n\n\"Oh, really?\" Neil asked.\n\n\"Yes, really,\" she told him with a smile.\n\nSomehow, Kenny was paying attention just then and heard what Neil and his mom had just said. He'd been walking in between them holding both of their hands when he looked up at them, smiled, then moved a step back and put their hands together. His mother gave him a funny look, but when she let Neil take it, he let out a very happy, \"Yes!\"\n\nThey still had over an hour before the Spark Museum closed, and that was more than enough time to see everything. \n\n\"Kenny? Do you like science?\" Neil asked as they headed to their next destination.\n\n\"Uh-huh. I love science. Do you?\"\n\nNeil made a face Kenny couldn't see, but Madison saw it and laughed.\n\n\"I'm more of a social sciences kind of guy,\" he replied.\n\n\"What's that?\"\n\nNeil explained what kinds of things were included in the social sciences and that he wasn't all that great in math or science.\n\n\"At least not after the 8th grade. I could never figure out what the 'X' stood for in algebra, so I've only taken as much math as I had to to graduate.\"\n\nKenny had no idea what any of that meant, but his mom did ask a question.\n\n\"So will you be graduating at the end of this year?\"\n\n\"I will,\" Neil told her.\n\n\"Any idea what you'll be doing once you finish college?\"\n\n\"Actually, yes,\" he said as he turned her way and smiled.\n\n\"And?\" Madison asked as she smiled back.\n\nNeil went to answer, but before he could, Madison said, \"Wait. Let me guess.\"\n\nShe sat there and looked at him for a few seconds then said, \"Got it. High school psychology teacher.\"\n\nNeil laughed but quietly so then told her, \"Not quite.\"\n\n\"PE teacher?\"\n\n\"No again. No teaching.\"\n\n\"Oh. I really thought I had this,\" she replied as she pretended to study him a little more before saying, \"I give up.\"\n\n\"I'm going to be an officer in the Marine Corps. Just like my dad.\"\n\nThe way Madison looked at him made him wonder if she was possibly anti-military. The entire western half of Washington and Oregon were largely politically liberal and many of them weren't overly fond of the military. That didn't mean they were anti-military, of course. Many liberals supported the troops but opposed the wars and massive spending that went to the Pentagon. True or not that was Neil's first thought.\n\n\"You don't approve?\" he asked after Madison didn't say anything.\n\n\"No. It's...it's not that,\" she replied.\n\nShe'd been looking at him and smiling, but she'd turned away and seemed suddenly distant the moment he revealed his future plans.\n\n\"Then I'm confused. Your body language tells me you're not very happy with what I just said.\"\n\n\"I'm sorry, Neil. I guess I just assumed you'd be staying here. In Bellingham. Or maybe going as far away as Seattle or something.\"\n\nJust as suddenly it all made sense to Neil. He'd been gradually winning her over in spite of his youth, but now she was thinking there was no real use in getting any more involved with him when he was only going to go away a few months down the road. And not just to Seattle or even Portland.\n\n\"My dad graduated from Western, too,\" Neil told her.\n\n\"Oh. I see,\" Madison quietly replied, still not looking at him.\n\n\"Yeah, he and my mom met here. Locally. And they fell in love and...moved away. Together.\"\n\nNeil knew he was up against another formidable mental obstacle in Madison's mind and tried planting a seed that might help her see there at least was a path to a future with him were she so inclined to seek one.\n\n\"And I'll still be here for the next nine months or so,\" he added. \"Which is quite a bit of time to get to know someone.\"\n\nKenny was mostly zoning out in the backseat, but he noticed the change in his mom and asked her if she was upset.\n\n\"No. Not at all, honey. I guess I just didn't really think things through.\"\n\nNeil knew that was directed at him, and it hit home pretty hard.\n\n\"Did you want me to take you, you know...\" he said very quietly.\n\n\"No. I don't want to upset...\"\n\nShe pointed toward the back seat and that was all that needed to be said.\n\n\"Are you guys talking about me?\" Kenny asked.\n\n\"No, honey,\" his mom said, hoping a white lie wouldn't be as bad as the truth.\n\n\"Hey! There it is!\" her son said as the sign came into view.\n\nMadison barely said two words again as they walked around, and this time Neil knew it wasn't because she was looking to see how well he and her son were getting along. \n\nOne of the most popular exhibits demonstrated the effects of static electricity, and Kenny couldn't wait to put his hands on the metal ball so his hair would stick out like everyone else's who'd touched it.\n\nHe waited his turn then asked if everyone was ready. When he got two nods, he slowly moved his hands toward the sphere, and his hair began to rise. He moved his hands away and it fell back in place. He did that three more times before suddenly slapping his palms on it which caused his hair to stick straight out.\n\nMadison finally laughed, and Kenny asked Neil to try.\n\n\"I don't have much hair, but okay,\" he said.\n\nBecause it was so short, there wasn't any noticeable difference so Kenny asked him mom to try.\n\n\"Oh, no. No way,\" she said. \"I'd look like Medusa!\"\n\n\"Huh?\" Kenny asked.\n\nNeil grabbed his phone and found an image of the Greek Gorgon with snakes for hair and showed it to the boy who cracked up laughing then started begging.\n\n\"Please, Mom???\"\n\n\"Nothing ventured, nothing gained,\" Neil said, hoping she might at least smile at him again.\n\n\"Easy for you to say, Mr. Short Hair,\" she said, a little smile appearing at the edges of her mouth.\n\n\"Mom! Come on. Just do it, okay?\" Kenny begged.\n\n\"It'll ruin my hair, honey,\" she protested.\n\n\"But you can comb it back tomorrow, and Neil will still like you!\" he said.\n\n\"He's right, you know,\" Neil told her very authoritatively. \"I'll like you no matter what your hair looks like.\"\n\nMadison knew her reaction to Neil's choice of career of was selfish, but she'd been justifying it because of the effect it would have on her son even though she had no way of knowing whether the effect would be positive or negative, let alone whether there'd ever even be an effect.\n\n\"Okay, okay!\" she said as she moved a little closer to the ball.\n\n\"Will it shock me?\" she asked, stalling for time.\n\n\"No. It doesn't shock you, Mom. It just makes your hair stand out,\" her son informed her.\n\n\"Oh. Well, okay then. I guess,\" she said as she gritted her teeth and raised her hands.\n\nHer long, silky hair began slowly coming up all at once and all around her head as she mimicked what Kenny had initially done.\n\n\"Cool!\" Kenny said as the hair settled back down.\n\nMadison then moved her hands in and out several times real fast until Kenny was laughing. Neil was standing behind him with his hands on Kenny's shoulders, and he was laughing, too.\n\n\"You guys ready?\" she asked.\n\n\"Yes!\" both of them replied just as she stuck her hands on the silver globe and her hair shot out in all directions to its full length.\n\n\"Get a picture!\" Kenny said, barely able to breathe.\n\n\"Don't you dare!\" his mom said as she dropped her hands. \"Don't even think about it!\n\nMadison stepped away in spite of Kenny's second request for a picture, and when she got closer to Neil he said, \"You're still just as beautiful, Madison.\"\n\nShe couldn't explain it, but some kind of...switch...or something had just been thrown, and it no longer mattered that Neil wasn't planning on living in the local area. She had nothing but respect for the military, and although she didn't know a single person who'd served, she knew that what they did required great sacrifice and courage. ",
        "And although she was also unaware of thinking it, her brain had clearly heard and understood Neil's comments about his parents. So while that still seemed very unlikely, she was okay with knowing that was always an option were the unlikely to somehow become more likely.\n\n\"I have 80's hair, don't I?\" she asked rather than acknowledge the compliment.\n\n\"Um...not really,\" Neil told her. \"You kind of had 80's hair when it was, you know...\"\n\nHe held his hands way out to the side of his head to indicate how big her hair got, and she found herself laughing again and feeling like nothing had changed. That wasn't exactly true as she realized things had changed. They'd just changed for the better. \n\nAs they walked around the last few exhibits, Madison waited until Neil looked at her then glanced down as she held out her hand. Neil smiled and took it immediately and held it until the got back out to the car.\n\n\"That place was awesome!\" Kenny said once they were outside.\n\n\"I'm glad you liked it,\" Neil told him.\n\n\"I had fun, too,\" Madison let him know.\n\n\"Enough to maybe get together again with me in the not-too-distant future?\"\n\n\"Maybe,\" she said in a playful way.\n\n\"I now know you well enough to know that that meant 'yes',\" Neil told her as he opened her door.\n\n\"Oh, really?\" she replied as though he had no actual idea.\n\n\"Yep. And I also know you kinda like me now.\"\n\n\"Well, well. Someone is awfully sure of himself,\" she teased as she slid in.\n\n\"That's me. Confident but not cocky,\" Neil told her before closing the door just as she smiled at him in the sweetest way she had so far.\n\n\"Can Neil come inside?\" Kenny asked when they pulled into their place.\n\n\"You have school tomorrow, my friend,\" his mom reminded him.\n\n\"Ahhh!\"\n\n\"Hey, I let you stay up over an hour past your bedtime so we could go out tonight, so no more 'ahhs', okay?\"\n\n\"Okay,\" he said without enthusiasm.\n\nNeil insisted on walking her to the door even when she told him that wasn't necessary.\n\n\"By 'not necessary' you really mean you want me to, but you don't want to make me feel like I have to,\" Neil told her.\n\n\"Wow. Your ESP is really working tonight, huh?\" she replied, a warm, happy smile on her beautiful face.\n\n\"I don't know about that, but I do know I want to walk you to the door,\" he told her as Kenny got out.\n\n\"Okay,\" she replied just as sweetly as she'd smiled at him.\n\nKenny asked for the key, so his mom gave it to him. What she didn't know was he was planning on going inside so his mom could be alone with Neil. And with any luck\u2014maybe kiss him goodnight.\n\n\"Where did my son go?\" Madison asked when he unlocked the door and disappeared right after telling Neil 'thank you' and that he had a great time as he ran ahead of them.\n\n\"Me, too, bud...\" he tried saying as the boy zipped inside.\n\n\"I had a very nice time tonight, Neil,\" Madison admitted with another smile.\n\n\"Same here. And I really would like to see you again.\"\n\n\"I have the putt-putt tickets,\" she reminded him.\n\n\"Right. And I'll be working there tomorrow night.\"\n\n\"Well, maybe we'll see you there then.\"\n\n\"I'd like that.\"\n\n\"Yeah. I think I would, too,\" Madison told him, the same sweet smile still directed at him.\n\nThere was an awkward moment after their eyes locked and just before Neil slowly leaned her way. He made sure to stay on the side so she wouldn't pull away then kissed her on the cheek. Madison continued smiling and told him goodnight after thanking him again. \n\nWhat she didn't tell him was that she wished he'd have actually kissed her, another thought that brought on a different-but-equally frustrating kind of confusion as she walked inside.\n\nAs she did, she saw Kenny pulling away from the window as the curtain fell back into place.\n\n\"Oh, my. Were we spying on our mother?\" she asked.\n\n\"Kind of,\" Kenny said, a big smile on his face, and as always, one eye pointed away from her.\n\n\"Come here,\" his mom said.\n\nShe hugged her son and told him she loved him then said, \"Go brush your teeth and get ready for bed, okay?\"\n\n\"Mom? You don't have to tuck me in anymore,\" he informed her.\n\n\"What? Where's that coming from?\"\n\n\"Well, I'm gonna be ten in next year, and isn't that too old to be tucked in?\"\n\n\"Hmmm. Maybe,\" his mom said. \"But as long as none of the guys know, it won't matter, right?\"\n\nKenny thought about for a second then smiled.\n\n\"Right!\" he said as he hugged his mom again before skipping away, happier than she'd seen him in years.\n\nThe reason for his good mood was so obvious it didn't need to be said. The only question needing to be asked was whether or not she was making a huge mistake. For now, at least, it didn't feel that way, Neil's age aside; an age she couldn't even allow herself to say out loud or to herself because it might tarnish the shine of her own amazingly good mood.\n\nNeil's post-date reception was also positive as Keith Monroe asked his son how things and went. Neil told him 'great' and that he really liked her and her son.\n\n\"Fantastic. You seeing her again?\"\n\n\"Yeah. They're coming back to the putt-putt course tomorrow evening.\"\n\n\"Good deal,\" his father said, and with that, their 'discussion' was over before adding, \"Oh. The weather guy said summer's over tomorrow. Things are turning to shit in the next 24 hours, so keep that in mind.\"\n\n\"Great,\" Neil muttered before going upstairs to finish the reading he had to get done before the following day's classes.\n\nThe only problem was he couldn't concentrate. He read the first paragraph of the first page three times and realized if it wasn't about Madison he wasn't interested. He looked at his phone then pulled it out and decided to send her a text.\n\n\"Medusa, are you still up?\"\n\nHe added a bunch of silly emojis then continued.\n\n\"I'm having a very hard time concentrating because all I can think of is this beautiful woman I just went out with. Any advice?\"\n\nHe didn't get a reply right away, so he tried going back to his reading and managed to get through a few pages before his phone buzzed. He dropped the book immediately and grabbed his phone.\n\n\"Medusa, huh? Gee, thanks\u2014buddy!\"\n\nShe added some smiley faces, too, then continued.\n\n\"That's so weird because I'm experiencing the same thing. I did manage to get my son in bed which is why I didn't answer you right away, but other than that I've got a one-track mind. So I wish I could help, but whatever you have seems to be going around.\"\n\nShe added some smiley faces then sent it.\n\n\"Is it okay if I call you?\" Neil wrote in reply. \"If it's too late, I understand. I guess I'm just thinking that if I'm gonna lay here thinking about you, it might be nice to actually talk to you.\"\n\nMadison smiled at his text then responded.\n\n\"If you think that might help, I'm game.\"\n\nHer phone rang seconds later, and before she knew it, it was nearly midnight. She didn't want to hang up, but she had to get some sleep.\n\n\"That's okay. I really need to get this reading done, and now I'll at least be able to concentrate,\" Neil replied.\n\n\"Again, thank you for a lovely evening, Neil. And I think I learned more about you on the phone the last couple of hours than I did during the other times we spent together. I really appreciate your being so open and honest with me.\"\n\nShe hesitated then said, \"Oh, and after all this I can honestly say that I definitely like you.\"\n\nNeil was mostly unaware he'd been hard the entire time they were talking as he visualized her pretty face and her new hairstyle. And her body and her...\n\n\"You just made my day. And night,\" he told her. \"And in case you forgot, I like you, too, Madison. I...really like you.\"\n\nMadison smiled happily then said, \"Goodnight, Neil. I'll see you at the mini-golf place tomorrow.\"\n\n\"Goodnight, Madison, and I'm already looking forward to seeing you again. Sweet dreams.\"\n\nMadison no sooner stepped through the door at work the next morning when Gabby nearly jumped her.\n\n\"So? How did it go? Tell me everything!\"\n\nWhat could have been a very short description of events took nearly ten minutes as Gabby stopped her friend at every turn asking what this or that meant or how it made Madison feel.\n\n\"I had a really nice time, Gabby, and as long as I don't let myself think about our age difference, I think I really like him.\"\n\n\"And Kenny loves the guy, right?\"\n\n\"Oh, my goodness! Every single thing he says involves Neil.\"\n\n\"So this is a good thing, right\" Gabby asked, hoping to hear a very strong 'yes'.\n\n\"Like I said, he has no plans of staying in Bellingham or even the local area, so along with our ages that concerns me. Then again, we've only gone out once, so it's not like I'm planning a wedding or anything. But I have to say our phone call was pretty wonderful.\"\n\nGabby's face was filled with expectation as she said, \"But who knows, right? You could be planning a wedding. I mean, it's at least possible, isn't it?\"\n\nRather than laugh her off, Madison got serious.\n\n\"I honestly don't know, Gabby, but we're using our free tickets for miniature golf tonight, and I guess we'll see how it goes from there.\"\n\n\"Maddy? I am so happy for you!\" Gabby told her BFF even though Madison had made it clear things were still tentative because of her two, very-big concerns.\n\n\"You know, my brother was a Marine about 15 years ago. I'm gonna ask him some questions, because like you, I really don't know anything about the military other than they march around and shoot guns and stuff.\"\n\nGabby had no idea how little she really knew, but then, there was no need for her to know. As long as she could enjoy the freedoms people like her brother and Neil's father had provided, she was content to leave the details to those who had some reason to know. But she did want to see if her brother could possibly tell her anything that might be of help to her friend.\n\nThe only person not exhausted the following morning was Kenny, who talked non-stop starting with breakfast and ending only when he got to school. He went back and forth between the 'electricity place' and their return to the miniature golf course; the golf course where Neil worked. Neil. His new best friend. \n\nToo tired to say much more than, \"Yeah,\" or \"Uh-uh,\" the entire time, his mom was content to let her son talk as she sat there thinking about how her feelings about her own new friend, who also happened to be named Neil, had somehow changed so rapidly and so dramatically.\n\nAs she expected, her son was all-Neil, all of the time from the time she picked him up from school until they finally got home. And the time the spent at the putt-putt course was the 'best' as Kenny almost never took a breath except when he was hitting the ball, and even then he usually kept on jabbering away.\n\n\"He really doesn't talk like that,\" Madison told Neil during a rare moment of silence.\n\n\"But you did say he's pretty much happy all of the time, right?\"\n\n\"Yes. Almost always. The only exception being when someone teases him about...\"\n\n\"Tell me more about this new procedure,\" Neil said as they walked around by themselves. There was a younger couple that stopped by around 8pm, but otherwise they had the place all to themselves again.\n\n\"It's done while the patient is awake. The ophthalmologist puts sutures into the eye muscle needing correction. The patient then gets up so the doctor can see whether or not the muscle needs to pulled a little more or less. Once the eye is aligned it's over.\"\n\n\"Wow. That seems a lot smarter than having to have several surgeries hoping to get it right,\" Neil observed.\n\n\"Exactly. But it's very expensive and the salon doesn't offer anything more than basic healthcare, so a procedure covering strabismus\u2014a lazy eye\u2014is something that's going to take a very long time for me to save up enough money.\"\n\nNeil started to say something supportive when Madison apologized for bringing up her problems again.\n\n\"Why?\" Neil asked in a very gentle way. \"I really like you, Madison, so anything you think is a problem is something I want to hear about.\"\n\n\"I'm going to apologize again, because this time I'm about to bring up my ex, so please understand,\" she said, setting the stage. \n\n\"No, that's fine, too. You were married before, and that won't ever change. I'm not the jealous type, and he's still Kenny's father, so please feel free to mention him anytime the situation dictates.\"\n\nMadison loved the way Neil talked. It was one more thing that made her feel younger whenever she was around him.\n\n\"I was just going to say that I would have given anything to hear him say what you just said about something that concerns me being a concern to you or however you put it.\"\n\n\"Well, that's true, and it always will be,\" Neil said.\n\n\"Always?\" Madison said very sweetly with a little smile.\n\nNeil smiled back then said, \"Do you have any idea how much I want to k...\"\n\n\"Mom! Neil! Did you see?\" Kenny hollered out and catching them both by surprise.\n\n\"Uh-oh,\" Madison said, smiling happily as she knew exactly what Neil almost said.\n\n\"I did it! I made a hole-in-one for real this time!\"\n\n\"Wow. Nice shot, buddy!\" Neil told him as they high fived. \n\n\"Neil? Do they have putt-putt golf on TV?\" Kenny asked.\n\n\"Oh, wow. You know, I don't think so. But if you were really, really good, who knows?\"\n\nKenny beamed from ear to ear and said, \"Awesome!\" as he happily moved on to the next hole.\n\nMadison came up alongside of Neil and took his hand.\n\n\"Oh, hello there,\" he said.\n\n\"Hi,\" she replied, still smiling. \"For the record I really wanted you to kiss then, too.\"\n\n\"Oh?\" Neil said, his right eyebrow way up high.\n\nMadison laughed then told him, \"Uh-huh.\"\n\n\"Do you...still want me to kiss you?\"\n\n\"Uh-huh,\" she replied as she moved to face him.\n\n\"Well, then be it far from me to disappoint a beautiful woman.\"\n\nNeil smiled at her, put his hands on her upper arms then kissed her softly for the first time.\n\nMadison had no idea she was so hungry for human contact and especially from a very handsome, male human being like Neil Monroe. She wanted to put her arms around him and not only kiss him more passionately but maybe even a little more.\n\nBut being a good girl she settled for a very nice, very sweet first kiss.\n\n\"Was it worth waiting for?\" Neil asked hopefully.\n\n\"Oh, yes. Very much so,\" she told him as he took her hand to go follow Kenny.\n\nThe boy wasn't putting, though. He'd stopped to watch, and when they turned his way, he was all smiles.\n\n\"I do believe my son just saw us kissing,\" Madison said as they walked toward him.\n\n\"Do you think he's okay with that?\" Neil asked just as Kenny told them it was about time.\n\nMadison laughed a happy laugh then said, \"I believe he is,\" as Neil squeezed her hand then put his arm around her.\n\nKenny's next question, however, threw them both for a loop.\n\n\"Are you guys in love?\" he naively asked with a shy smile.\n\n\"What?\" his shocked mother asked as she watched Neil trying not to smile.\n\n\"Don't look at me,\" Neil told her.\n\n\"Well, no. I mean, we really just met, so we can't be in love yet,\" his mom tried to explain.\n\n\"You guys met a long time ago,\" Kenny countered. \"It's already been like a week ago or so.\"\n\n\"He has a point,\" Neil told her, unable not to smile.\n\n\"Don't feed the beast,\" Madison told him as she looked up into his eyes.\n\n\"I'm not a beast!\" Kenny told her, assuming that's what she'd meant.\n\n\"No. Honey, that's not what that means. It's just a saying.\"\n\n\"Well, Kenny IS a beast on the putt-putt course,\" Neil said, saving the day. \"You did see his hole-in-one, right?\"\n\nKenny was beaming again and all was well. And as Madison looked up at this handsome younger man, she felt like all was well for the first time in ages.\n\n\"My son is pretty amazing, isn't he?\" she told her...boyfriend?\n\nSince no one was there Madison stayed with Neil until closing time. Kenny surprised her by being able to sit quietly with them and talk without needing to interrupt or get up and do something every other minute.\n\n\"So...what will you be doing in the Marines?\" Madison asked.\n\nNeil didn't tell her that Marines never said 'in the Marines'. They used both words almost every time they spoke of the Corps or just referred to it as 'the Corps'.\n\n\"I want to fly. Helicopters. I'll take jets but I really want helos. Almost everyone wants jets, but my dad loved being a rotary wing pilot, and that's what I want, too.\"\n\nMadison had question after question as each new topic came up.\n\n\"So where is that? Where would you go if that happened? How often are you gone? Will you have to go to war?\"\n\nShe didn't realize until later she was doing the same thing her son had been doing only on an adult level. And just like before, Neil fielded each question and provided thoughtful responses. In the rare case where he didn't know he didn't try and blow smoke up her skirt, he just told her he'd have to find out.\n\nLike many civilians, Madison assumed all servicemen and women lived on a shoestring budget, supplemented by food stamps and other government programs. She didn't know a general from a private or a major from a sergeant major, so Neil did his best to explain the rank structure in a simple, easy-to-understand way. Even so, Madison still didn't 'get it', but she was extremely surprised to find out that officers made a whole lot more money than she'd ever imagined. In fact, it was more money than she'd ever seen in her life.\n\n\"So in five years or so, I'll be a captain, and with flight pay, a family could live very comfortably on just what I make.\"\n\n\"A family, huh?\" Madison said with that beautiful smile of hers.\n\n\"Uh-huh. Even a ready-made family,\" Neil told her as he smiled back.\n\n\"I wanna fly planes, too!\" Kenny said out of the blue, interrupting a very tender moment.\n\n\"Well, just keep working hard in school, get good grades, then graduate from college and OCS and you can fly, too,\" Neil told him.\n\nThat prompted a question about what OCS was, and as Neil tried to explain, Madison sat there and realized this young man was so much more than just a 'pretty' face. He had character, goals, high moral standards, good values, and commitment. And by the time she got ready to take Kenny home, she had a huge amount of respect for him even though she really had no idea what he'd be doing day to day other than flying.\n\nAs Neil opened her door, he asked if he'd scared her off with all of his Marine Corps talk as he put his arms around her.\n\n\"No. Just the opposite, in fact,\" she told him, a warm smile on her pretty face. \n\n\"Yeah?\"\n\n\"Uh-huh.\"\n\n\"So you DO like me, don't you?\" he teased.\n\n\"I guess I do,\" she teased back. \"And who knows, maybe I might possibly...more than just like you.\"\n\nImitating Kenny, but not in a mean way, Neil did a fist pump and said, \"Yes!\"\n\nMadison laughed a happy laugh then pulled herself close to Neil and stood there with him unaware her son was watching and smiling the entire time.\n\n\"I kind of more than just like you, too, Madison,\" Neil told her quietly as he stroked her long, silky hair.\n\n\"Yeah?\" she said, just as he had moments ago.\n\n\"Uh-huh,\" he replied, using her response.\n\n\"Enough to kiss me again?\" she asked, her eyes bright and alive.\n\n\"Way more than that,\" he told her.\n\nJust as their lips met, the first plops of rain began falling, and Neil remembered what his dad had about the weather turning bad.\n\n\"No! Not now!\" Madison said as Neil pulled back.\n\n\"I'll make it up to you soon,\" he told her.\n\n\"You promise?\" she asked as the rain picked up.\n\n\"Yes. I promise. Now get in before your beautiful hair gets all wet.\"\n\n\"I don't care if it gets wet,\" Madison told him, wanting him to kiss her again more than she wanted anything else.\n\n\"Yeah?\"\n\n\"Uh-huh,\" she replied as the skies opened up and it began to pour.\n\nNeil kissed her and Madison hungrily kissed him back, immediately offering her tongue, and as the two of them got soaked to the bone in less than a minute, they never stopped kissing. Or wanting each other.",
        "\"You gonna be okay?\" Neil asked the beautiful woman who was totally drenched.\n\n\"I've never been better in my entire life,\" she told him in a way that said to Neil that she meant those words. And that's because Madison did mean them.\n\n\"Same here,\" Neil told her before saying she really did need to get in the car.\n\n\"Will you text me?\" she asked before getting in.\n\n\"I will,\" he promised.\n\nShe kissed him again, smiled happily, then said, \"Goodnight, Neil.\"\n\n\"Goodnight...sweetheart,\" he told her over the noise of the rain.\n\nHe couldn't possibly have seen the tears of joy welling up in her eyes once she got in and drenched the cloth driver's seat, but they were there, hidden by the water rolling down her cheeks.\n\nNeil tapped on the glass and waved to Kenny who smiled and waved back. He never moved until they were completely out of sight, and that's when Neil Monroe realized he was in love with Madison Hall.\n\nHe closed up the course, set the alarm, then laid a huge towel down on his seat before climbing in and heading home.\n\n\"You looked like a drowned rat,\" his dad said when Neil came in. He'd stripped down to nothing and had the towel wrapped around his waist.\n\n\"Yeah, I suppose I do,\" his son replied. \"But it was so worth it.\"\n\n\"Oh?\"\n\n\"Yes. Totally,\" Neil said before giving his dad the 'nickel version' of events.\n\n\"Invite them over for dinner,\" the elder Monroe suggested. \"I'd love to meet her and that boy of hers.\"\n\nNeil said he would and did so a little later once he was dried off and alone with his thoughts and his phone.\n\n\"I'd love to,\" Madison texted back in reply.\n\nNeil assured her he'd explained the age difference as well as how his father had responded, and that reassured her enough that she was looking forward to meeting him.\n\n\"Is Saturday evening okay?\" Neil asked.\n\n\"Yes. Any night would be okay,\" she told him along with several pink hearts.\n\n\"You said I didn't scare you off tonight with all my 'shop talk', but if I scare you off now, please forgive me, but I want you to know I'm really falling for you, Madison.\"\n\nThe sudden change in the conversation's direction surprised her, but the surprise was the best kind. Her heart fluttered when she read his words, and in return she told him she was also falling for him.\n\nThey texted for a few more minutes when Neil told her he absolutely had to study for a test, and Madison assured him she understood.\n\nThis time, when Neil said 'goodnight' to her, she texted back, \"Goodnight, honey,\" adding an entire row of hearts, as her own beat faster.\n\n\"I love that you wrote that,\" he told her.\n\n\"I loved writing it,\" she replied, unable to stop smiling.\n\nNeil forced himself to focus, and got all of his studying done while Madison lay in bed wide awake, too excited to sleep. She knew all of this was happening very fast, and she even laughed when she thought, \"But it has been a week or so,\" just as Kenny had said.\n\nFast or not, she already trusted Neil, and she allowed herself to finally believe she might just have found that special someone; someone who would not only love her but her son, too. And with those thoughts and feelings swirling around in her head, her left hand somehow made its way to a place it hadn't been in a very long time.\n\nKenny was sound asleep, and Madison allowed her mind, and her heart, to roam freely as she just made gentle circles somewhere that was now very swollen and tender. It didn't take long for her body to tense as hard as it ever had before releasing and tensing again several more times as a flood of chemicals flowed through her brain bathing it in a warm glow of loving feelings and creating even more desire for the handsome young man she now knew she loved, too.\n\nMadison wore a light-gray sweater and a dark-gray skirt to the Monroe's home that Saturday evening, along with a pair of 2 1/2 inch matching heels she felt were appropriate but still attractive.\n\nFrom the moment she walked in, Keith made her feel like she was part of the family, and Madison loved his dry sense of humor and his genuine kindness and concern. Like his son, Keith Monroe was wonderful with Kenny, and he found himself having as much fun with Neil's dad as he had with Neil himself.\n\nKeith showed the boy his 'I love me' wall, the one room in the house that was a tribute to his 30 years of service to the nation. There were photos of CH-53s picking up huge loads of cargo or filled with Marines as well as his original commission, his promotion to colonel, and his retirement certificate signed by the Commandant of the Marine Corps.\n\n\"This is SO cool!\" Kenny said before asking if he could see the older man's uniforms.\n\n\"I haven't seen my dad like this since my mom was alive,\" Neil said as they headed to a back room to look in the closet where the uniforms were hung and neatly spaced exactly three inches apart.\n\n\"Why is there a chicken on your uniform?\" Kenny asked, causing Keith to laugh heartily.\n\n\"That, my young friend, is an American eagle,\" Keith gently corrected.\n\n\"Sorry. I thought it was a chicken,\" the boy said, looking up at him with just one eye making contact. Keith smiled back at him, clapped him on the shoulders then said it was time to go eat.\n\nThe conversation was happy and lively until Keith mentioned his late wife during the course of the evening. Madison got very quiet then told him how sorry she was. She still had no idea how Beth had died, and when Keith explained, it brought tears to her eyes. Neil wasn't sure, but it almost looked like his father, who was 'hard as woodpecker lips', might have glassy eyes, too.\n\n\"So...how about a glass of wine?\" Keith suddenly suggested to lighten the mood.\n\nBy the time she left, Madison herself felt like she really was a part of this family. It was amazing to her how completely comfortable she felt after spending just three hours with Keith\u2014and Neal.\n\nAs she was driving home, she had no idea Keith told his son he'd be happy to watch that young man of Madison's if they ever wanted some alone time.\n\n\"Wait. You...babysit?\" Neil said.\n\n\"Don't look so surprised there\u2014Candidate,\" his father said, pretending to address him like Neil was back at OCS. \"I watched you more than a few times, and I'd say you turned out...reasonably okay.\"\n\n\"If you're serious,\" Neil replied.\n\n\"He's a great kid,\" Keith said. \"It's a damn shame about that eye.\"\n\nNeil explained the new procedure for correcting strabismus, a term he'd never heard before Madison mentioned it, and his dad said, \"You know the Marine Corps will pay for that, right?\"\n\nNeil understood immediately. Were he to marry Madison, they would have first-rate healthcare, and access to anything Kenny needed.\n\n\"Right. Yes it would,\" Neil said, wondering why that thought hadn't crossed his mind before. Then it hit him that he'd been too busy falling in love with Kenny's mother to think about such things, but his father was correct.\n\n\"Dad? How long would you be willing to watch Kenny?\" his son asked, knowing his father would 'break the code' immediately.\n\n\"Long enough,\" came the reply with a little 'you rascal, you' kind of smile.\n\nWhen Neil pitched the idea to Madison, her heart did more than flutter.\n\n\"Are you sure he's really okay with that?\" she asked even after Neil had assured her he was.\n\n\"Yep. One-hundred percent.\"\n\n\"And you and I can...have some alone time?\" she asked, her smile now even more beautiful than Neil could ever remember.\n\n\"Uh-huh. Just you and me. Alone. Together.\"\n\nMadison purred and told him, \"In that case, I accept. And please tell you father 'thank you'.\"\n\n\"You uh, you know he knows why, right?\"\n\nMadison stopped smiling briefly then said, \"Oh. Oh, my.\"\n\n\"He likes you, honey. A lot. And he remembers what it was like to be in love, so...\"\n\nShe smiled again then said, \"So does that mean...you're in love?\" as she put her arms around him before quickly apologizing for saying it.\n\n\"There's nothing to apologize for because I am,\" he told her. \"In love. With you.\"\n\nHer eyes were moving quickly between his, and as she once again felt the deep sincerity in his words, she quietly said, \"I...I love you, too, Neil.\"\n\nThat next Friday, Keith did watch Kenny. In fact, he went out and bought a video game console called XBox and had it set up by Geek Squad so that he and his favorite young man could play video games, watch sports, and do what guys do.\n\nSo while he and Kenny played one kind of games, Neil and Madison played another; one in which they explored every inch of the other's body in every way two people in love possibly can.\n\n\"You are...amazing!\" Neil told her as she lay curled up beside him.\n\n\"Me? Oh, no. That would be you, Mr. Stamina!\" she replied with a little laugh. \n\nShe looked down at him and laughed.\n\n\"Oh, look! Someone is ready to go again already!\"\n\nNeil looked down and saw Mr. Happy smiling at him and said, \"I believe you may be correct,\" as he pulled Madison on top of him while she effortlessly lowered herself onto his waiting shaft, moaning softly as he re-entered her.\n\nThe following morning, the 'boys' were up early and went to IHOP for breakfast. They were back and playing video games again by the time Neil and Madison got there, and Kenny was having so much fun he barely said 'hello' when his mom walked in.\n\n\"Keith? Thank you so much for watching him,\" Madison said, hoping he wouldn't look at her 'like that'.\n\nHe not only didn't, he playfully buried Kenny with his elbow and upper body as he tried to get his video guy to kill Kenny's and said, \"It was my pleasure. I mean, who doesn't like getting beat every damn...darned...time by a ten-year old kid!\"\n\n\"I'm only nine!\" Kenny said as he laughed so hard it nearly made his mom tear up again.\n\nShe let him play for another 15 minutes before taking him home, knowing he would talk non-stop the entire way. But his mom couldn't have been happier as she listened to him tell her what a great time he'd had. She, of course, couldn't explain anything she'd done with Neil beyond going to dinner and having a 'great time', too. Kenny didn't ask for details, and Madison breathed a sigh of relief when he went back to telling her how cool Mr. Keith was and how much he liked being there.\n\nWhen Madison walked into the beauty parlor on Monday morning, Gabby knew something was up.\n\n\"Okay. Spill!\" she said.\n\n\"Spill what?\" Madison asked, pretending there was nothing to spill.\n\n\"Someone is positively glowing, and even though it's been forever since the last time I glowed, I know what that look means. So...spill!\"\n\nMadison not only spilled, she gushed. She let it all out, and even admitted she'd fallen in love with Neil.\n\nAnd then she asked, \"Can this even be real? Can anyone fall in love this fast?\"\n\nGabby saw the concern in her friend's eyes and told her, \"All I know is that love is a big mystery. It seems to have a mind of its own, you know? It does its thing in its own way, and when it taps you on the shoulder it doesn't want to know how long you've known someone.\"\n\n\"Do you really believe that?\" Madison asked, more for her own benefit.\n\n\"I do. And your eyes tell me this is real, sweetie. So it doesn't matter how long it's been or what age you guys are. All that matters is how you feel about each other.\"\n\n\"Really?\" Madison asked just as hopefully.\n\n\"Yes. Really,\" Gabby replied as she reached out and hugged her best friend. \"And I better be the Maid of Honor at your wedding!\"\n\n\"Wedding? What wedding?\" Madison asked, now able to accept there might actually be one.\n\n\"What wedding. Listen to you! You and I both know it's now just a matter of time now.\"\n\n\"You think?\" \n\n\"Uh-uh. I know,\" Gabby told her. \"Now let's get to work before we get in trouble. Unlike you, I don't have a handsome, younger man to provide for me if I lose this job!\"\n\nBoth of them laughed and hugged again before getting ready for their first customer of the day.\n\n*****\n\nJune 8th, 2020\n\n\"Candidate Monroe. Raise your right hand and repeat after me,\" the retired Marine colonel in dress blues ordered. \n\nHis son raised his right hand and waited.\n\nColonel Monroe paused after every few words to allow his son to repeat the oath of office for commissioned officers as he said, \n\n\"I, state your full name, do solemnly swear that I will support and defend the Constitution of the United States against all enemies, foreign and domestic; that I will bear true faith and allegiance to the same; that I take this obligation freely, without any mental reservation or purpose of evasion; and that I will well and faithfully discharge the duties of the office on which I am about to enter. So help me God.\"\n\nHis father smiled and said, \"Congratulations, Lieutenant Monroe. Who would you like to pin on your gold bars?\"\n\n\"You and my wife, sir,\" he told his father as Madison stepped forward holding one of the large bars her husband of two weeks had handed her before the commissioning ceremony.\n\nGabby, her Maid of Honor, and her parents, who now loved Neil like a son, were there, too, filled with hope for their friend, daughter, and grandson.\n\n\"Madison?\" Keith said as they each stood at one side of the new Marine. \n\nNeil helped hold Kenny so he could help his mom, and as usual, the boy was beaming with happiness as he helped his mom put the bar in place on the man he now happily called 'dad'.\n\nThe one Keith put in place was exactly where it was supposed to be while the one Madison and Kenny put on was too far in and a little bit crooked, but the newly-minted lieutenant didn't notice or care as he then saluted his father then kissed his wife and hugged his son.\n\n\"Lieutenant Monroe? The floor is now yours,\" his pride-filled father said.\n\n\"Thanks, Dad,\" he said as he let Kenny down. \n\n\"Wow. This has been quite a year,\" Neil began.\n\nHe pulled Madison close and put his arm around her in spite of being in uniform and said, \"I had no way of knowing that the day this beautiful woman and her amazing son pulled into the parking lot of the miniature golf course I worked at while going to college would change my life. But today, that beautiful woman is my gorgeous wife, and with any luck, this handsome young man here will legally be my adopted son in another couple of months or so.\"\n\nAs Madison listened to her handsome husband, she too reflected on that day when her son turned nine and no one came to his birthday party. She'd been as sad as she could ever remember for him and for herself as she lived alone with very little hope of things every turning around.\n\nAnd then they went to play a round of miniature golf, and her entire world was turned upside down. She heard very little of what Neil said but all that mattered was that Madison Monroe was now his wife and deeply in love with him. That he also loved her and her...their...son, the same way, was enough to make her feel like her heart might burst from the happiness that had filled it over the course of the last nine months; a happiness that had replaced the emptiness and loneliness she'd felt so strongly she couldn't imagine it would ever go away.\n\nBut as she looked up and the amazing man in the dress-blue uniform of the United States Marine Corps, Madison realized it had, and that she was happier than she'd ever been before.\n\nA year later, Neil was in flight school, and had just learned that he'd gotten helicopters. As wonderful as that news was, the Monroes had just received approval for their son, Kenneth R. Monroe, to have the procedure done that would straighten his lazy eye and again change his life for the better.\n\nBy the time his dad finished learning to fly the Sikorsky CH-53K King Stallion, Kenny's eye was perfectly straight and his 37-year old mother was four months pregnant with a baby girl that Kenny would love and dote on almost as much as her parents and grandparents.\n\nAnd all because of a single round of miniature golf one warm September evening."
    ],
    "authorname": "komrad1156",
    "tags": [
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/miniature-golf"
}