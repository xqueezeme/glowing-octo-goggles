{
    "title": "The Maid Ch. 07",
    "pages": [
        "This is the final chapter. I am very aware that I drifted away from nonconsent/reluctance a while back. I didn't mean for this to be as long as it has turned out to be and the focus has definitely changed from what it was initially. I considered moving it into a different, more suitable category, but after asking for feedback I decided against it, for continuity reasons. So sorry about that, but at least this will be the final time.\n\nA final thank you to misternik and to vmc312 for all their hard work editing. And thank you for those of you who have voted, faved, left feedback, I've really appreciated it. The next few stories I have planned are going to be in romance (I should probably get it out of my system!) I think, in case you would like to keep following my work and don't follow that category. \n\n*****\n\nJoe stepped over the threshold and into the hallway, casting a proprietal glance around.\n\n\"Nice.\"\n\nShe nodded mutely while an internal stream of questions buzzed around her mind. What was he doing here? What did he want? Why was he turning up now, after all this time?\n\nHe wasn't talking loudly exactly, but he was standing right outside Sophia's bedroom door and she was worried he was going to wake her up. That would be a disaster. She had no idea how she would explain Joe's unexpected presence to Sophia; strange men didn't normally arrive at her house unannounced. She shuddered at the thought.\n\n\"Come into the kitchen.\" She tried to fix what she hoped would look like a polite smile on her face, but it felt more like a grimace. \"I'll put the kettle on.\" \n\nShe went in, not giving him a chance to reply or suggest the more intimate setting of the her tiny sofa on the front room. She wanted the kitchen table between them.\n\nAs he sat down she tried to shoo the unwelcome image of Stephano sitting in the same place a few weeks ago after the fire as she moved nervously around, putting the kettle on, wiping the already clean table. She was starting to unravel, like a wool cardigan that had snagged on something.\n\nFinally the hot drinks were made and she sat down opposite him. Perched uncomfortably on the edge of her seat, she wrapped her fingers round her mug, deriving comfort from the heat of her chamomile tea. She watched him, taking him in, waiting for him to speak. He looked well, much better than he had last time she had seen him; which, to be honest, wasn't a great achievement, considering what he looked like. He was clean-shaven, his hair had recently been cut, his clothes were clean and new. They were clearly not as expensive and dashing as the things that Stephano wore but he looked good, great in fact. He still had his charm and his boyish good looks, but she couldn't help compare it to Stephano's more sophisticated beauty in her mind.\n\nA choppy conversation followed, in which everything was familiar and yet not familiar at all.\n\n\"You look well.\"\n\n\"I've been in rehab.\"\n\n\"Eleanor and John didn't say.\"\n\n\"They didn't want to get your hopes up.\"\n\nShe frowned, cross with them for not warning her of his imminent reentry into her life.\n\n\"Did they know you were planning to...\"\n\n\"No, I didn't tell them I was planning to come here, but when they told me about the fire, I... I just needed to see you, I had to make sure you were both okay.\"\n\nShe nodded. \"Yes, we're fine, we were very lucky. Sophia was off school for a few days. But they checked her out again a few weeks ago, there is no lasting damage to her lungs.\" She didn't elaborate, she wasn't sure if Joe knew about Stephano. She wasn't sure how to broach the subject.\n\n\"Shall we go for a drink? Lets go out to the pub .\"\n\n\"I can't, Joe. Sophia, she's asleep, I can't leave her.\"\n\nHe looked at her blankly for a minute. \"Oh yeah, of course. I wasn't thinking, sorry.\"\n\nThere was an awkward silence until he spoke again. \"So, what have you been up to?\"\n\nAndrea visibly balked at his question, and Joe looked uncomfortable. Seeming to realise his faux pas, he concentrated very hard on the table.\n\nShe struggled to control the emotions that reared up in her as a thousand possible responses passed through her mind. She thought of the number of times over the years she had imagined how she might answer this if Joe asked it. If Joe had been there to ask it, if Joe had ever deigned to contact her at any point in the last six years. In the end, her voice tight with suppressed rage she settled for noncommittal.\n\n\"Oh you know, this and that.\"\n\nSilence stretched uncomfortably between them, until eventually she felt compelled to fill it.\n\n\"I'm a chambermaid. I work in one of those big hotels up west.\"\n\n\"Do you like it?\"\n\n\"It pays the bills.\"\n\n\"Sounds, umm, posh. You must meet loads of rich people.\" She bristled at his dismissive language.\n\n\"We don't see that much of the guests.\" She felt herself colour as another uncomfortable silence transpired while he watched her quizzically. She worried that he was going to ask why she was blushing, but much to her relief, he didn't. \n\n\"You didn't go to dance school?\"\n\n\"No.\" She felt a pang of regret. It had been her dream, before she got pregnant. But despite being offered a place on one of London's most prestigious performing arts schools, despite the potential that everyone told her they could see, she hadn't. She couldn't. Didn't he realise there had been a baby to take care of? An unwelcome surge of anger began to rise up. She swallowed it back down; she didn't want to start an argument and risk waking Sophia.\n\n\"I'm starting teacher training in September.\"\n\nHis face lit up. \"You're really making something of yourself Andi, I always knew you would.\"\n\nShe had forgotten how captivating Joe's smile could be, how charming he was with his boyish good looks. She could see why she had been so smitten him. Memories started to come flooding back all at once, filling her mind like the commuters she watched clambering onto the bus every morning. She shook her head, trying to chase the memories away. It didn't work, and she couldn't help but compare him to Stephano with his more sophisticated, masculine appeal. But there was something else about his reaction too, something that she couldn't quite put her finger on; there was an implication in his words, that some how she was managing something he could never achieve and she didn't like it.\n\n\"How are Tracey and Paul?\" He asked.\n\n\"They're alright, but they broke up in March. He slept with Joanne.\"\n\n\"What! Tracey's sister Joanne?\"\n\n\"Yeah.\"\n\n\"He didn't!\"\n\n\"He did.\"\n\n\"I bet that went down well.\"\n\nThey both laughed and she was relieved to be on more neutral territory but he became serious again.\n\n\"Andi, look, I've been thinking a lot about us recently.\"\n\nHe explained that he wanted to try again. He reached over to her hand, which was resting on the kitchen table and covered it with his, she pulled it out from under his, so quickly it was as though she had been burned. Immediately she felt guilty, but she was reeling already from him being here, she couldn't cope with physical contact as well.\n\nJoe seemed to realise that he was expecting too much too quickly.\n\n\"Sorry, I shouldn't have turned up unannounced.\"\n\n\"I think you should go now. It's late, I have work tomorrow and this is all so unexpected. I need time to think, I'm sorry.\"\n\n\"We could go out, at the weekend, to Marine Ices? Do you ever take Sophia there?\"\n\nThey used to go there all the time after school, everyone did. She wondered again what he was doing here, what his motives were.\n\nShe forced herself to laugh. \"Of course I do, all the time.\"\n\n\"Good, lets go on Saturday and I'll buy us all an ice cream, I can meet her then.\"\n\nWithout waiting for an answer he stood up, brushed down his jeans with the palms of his hands and strolled out of the kitchen. At the door, he pecked her on the cheek, and she was startled by the pungent aroma of his unfamiliar cologne. And then he was gone, as suddenly as he arrived. She stood, leaning against her front door in a wrung out stupor.\n\n~\n\nThe following morning was a bit of a blur. She'd hardly slept at all after Joe had left. She'd lain in bed working through a whole mixture of emotions; anger, fear, confusion, guilt. She'd turned the situation over and over in her mind. She wasn't sure about introducing him to Sophia yet; the situation didn't seem permanent enough, and he might just disappear again. She didn't want Joe to hurt Sophia, but he was her father. She couldn't keep them apart. Finally she'd been so wound up she'd got out of bed and wandered into the front room to find something mindless to watch on TV. She'd fallen asleep pretty quickly on the sofa and woken up again just before dawn. Feeling cold, with a crick in her neck, the TV still on, she stumbled drowsily into bed and managed to oversleep.\n\nOf course after Andrea's exciting weekend away in Milan and the promise she'd made at bedtime, Sophia was disappointed by the rushed, disorganized morning. Breakfast wasn't a relaxed chat at the table; it was a slice of marmite on toast as they dashed through the park to school. Andrea felt guilty at how distracted and irritable she was being, but Sophia's new AC Milan football kit helped soften the blow.\n\n-\n\nShe finally arrived at work, twenty minutes late and a complete wreck. Connie kept shooting her quizzical looks, but she avoided getting into a conversation with her. Stephano would be arriving today and they were meant to be meeting for dinner later. Her Mum was supposed to be babysitting again. She had been looking forward to seeing him but now after last night she felt differently. She was still very unclear about Joe and the role he would have in her and Sophia's life. She needed more time to think, to get things straight in her head before she saw Stephano again.\n\nHer morning was a nightmare. Her supervisor shouted at her over how long everything was taking and she burst into floods of tears. Connie demanded to know what was wrong but she didn't want to talk about it. She couldn't talk about it, she was scared of what might happen if she started to talk and she just needed to get through the day.\n\nShe texted Stephano and arranged to meet him for coffee in her break. His reply was brief and he didn't ask why she needed to see him so suddenly. They planned to meet in a caf\u00e9 near the hotel. She spotted him as soon as she arrived, sitting at a table in the corner. Despite having been with him so recently, she felt her breath catch upon seeing him. He spotted her immediately and stood and started towards her. He took her hand as she sat at the table.\n\n\"I haven't got much time, I have a meeting at eleven... \" He looked at her face and frowned \"You are okay?\"\n\n\"I...\" She couldn't speak. She hadn't thought this through, she hadn't thought about what she was going to say to him. Her head was starting to swim, and she thought she might be about to burst into tears. Why did everything have to be so complicated?\n\n\"Something has happened?\" he whispered as he stroked her hand with his thumb. \"It will be okay, I will fix it.\"\n\nShe had an inappropriate urge to climb into his lap and bury her face in his chest so she could just forget about everything. Instead she started to explain. \"Joe, he's back, he came last night he wants us to try again. He wants us to be a family, for Sophia.\"\n\nAs she spoke the words they seemed to drop between them like stones into a lake, hard and swift and impossible to retrieve.\n\nHis whole countenance seemed to change before her eyes, the concern disappeared and he seemed to become more distant.\n\n\"Of course, I understand completely.\" He said, standing abruptly. She stood too, unsure of how interpret his reaction.\n\nTaking a step towards her, he pulled her into his embrace pressed his lips against her forehead. Her eyes fell closed and she took comfort in the contact as relief washed over her, at least Stephano was being understanding and not making unreasonable demands of her. He held her jaw in his hands lifting it to face him as he stared at her. She was struggling to read him, to understand the significance of his gaze. He looked lost in thought looking at her as though she was a stranger, or perhaps as though like they were never going to see each other again, as if he was committing her face to memory. She realized he was speaking.\n\n\"I will go now.\"\n\nHe was pulling away, withdrawing. A feeling of nausea was rising up inside her as she had a horrible insight into what he was thinking, what assumptions he was making but before she could speak again, before she could tell him he was wrong he was gone.\n\nAs she watched him walk away she felt a numb sort of despair/terror wash over her. At one point he seemed to falter and she thought he was going to turn and look at her, but he didn't. She took a step towards him, she wanted to go after him but before she could he was out of the door. She hadn't meant to finish it; she had just meant to tell him what was happening, to explain how she felt, to tell him that she needed some time to figure out what she wanted to do. He seemed to have jumped to the conclusion that she wanted to end it. She hadn't been sure what she wanted but now that she was confronted with the possibility of never seeing him again she realised this was definitely not something she wanted. She was lost as how to set it right. She sank back down into the chair, noticing what must have been Stephano's espresso sitting on the table in front of her.\n\nShe really should give Joe another chance. He was Sophia's father and he deserved to get to know his daughter. Sophia deserved a father. Perhaps this was for the best. Perhaps it would be easier to work things out without Stephano distracting her, making it harder for her to think straight, to decide what her priorities should be. But why did she feel like she was making a terrible mistake? Her heart constricted painfully and she buried head in hands as the tears began to fall. She couldn't afford to languish in self-pity; she needed to get back to work.\n\nShe left the caf\u00e9 and immediately felt the need to pull her coat closer around her. The weather was mild, but she could feel a chill settling in that she thought might never leave her.\n\nWhen she arrived back at hotel, she didn't have to look in the mirror to know that her eyes must be red from crying. She could no longer avoid giving Connie and Maria an explanation.\n\nShe had never seen Connie so angry before. She was pacing around the room, vibrating with rage. Maria less so, but she was still frowning and nodding in agreement at everything Connie said.\n\n\"The guy is an arsehole, Andi.\"\n\nThere was emphatic nodding from Maria.\n\n\"You've never met him.\" Andrea mumbled, her eyes downcast.\n\n\"I don't have to have met him! He ran out on you when you were eighteen and pregnant. He's an arsehole.\"\n\nDistractedly she noticed that Connie was swearing. Connie never swore.\n\n\"He wasn't thinking straight, he was on drugs. He's cleaned himself up now.\"\n\nShe found herself wondering why she was defending him, who was she trying to convince?\n\nConnie was standing, a hand on her hip, eyebrows raised waiting expectantly for Andrea to expand.\n\n\"Things might be different this time, he's changed.\" Andrea said in response to the unspoken question, but she didn't look at either of them as she spoke.\n\nConnie picked up the statement and held it out, as though it was a discarded sock she'd found underneath one of the beds and handed back to Andrea with a distasteful expression on her face. \"Things might be different this time?\" The incredulity in her voice was hard to ignore. \"He's changed?\"\n\nFolding her arms and narrowing her eyes, Connie fixed Andrea with one of her stares.\n\nShe slumped into to a chair and sighed, burying her face in her hands. \"I know, I know but he's Sophia's father, Connie. I can't deny him his daughter.\"\n\n\"Of course you can't deny him his daughter,\" Connie's gaze softened. \"But that doesn't mean you have to start playing happy families. What about Stephano? What about you?\"\n\n\"And isn't it funny how you don't hear a peep from Joe until you meet someone else?\" Andrea had almost forgotten that Maria was there until she spoke.\n\n\"He doesn't know anything about Stephano\" she replied, but as she turned it over in her mind and she wondered why it hadn't occurred to her to think about this sooner. Did he know about Stephano? She hadn't mentioned him to Joe. She had assumed he didn't know about Stephano but what if he did?\n\nShe was twisting the hem of her skirt round and round in a parody of anguish.\n\n\"Andi,\" Connie sat down on the arm of Andrea's chair and rested her hand gently on Andrea's shoulder. \"Don't let him treat you like a doormat. You don't have to take him back for him to be Sophia's daddy. Don't make the same mistakes your Mama did.\"\n\nBut at the mere mention of Stephano and Andrea felt like she might break. All the apprehension and fear she had been feeling, all the insecurities began to pour out of her, like the relentless surge of a broken dam.\n\n\"Stephano lives in Italy; he wants me to move there. I can't be who he wants me to be.\" Her eyes pricked with tears as she spoke. \"I want to be a teacher, Connie. All those nights I spent studying, I can't just throw them away to swan off to Italy. I'm used to working, to supporting myself.\"\n\nShe could feel herself starting to unravel again.\n\n\"He's too good to be true; stuff like this doesn't happen to people like me.\"\n\n\"Lord above, you're infuriating Andi.\"\n\nShe frowned at Connie. \"What?\"\n\n\"You're sabotaging yourself.\" It was Maria that spoke this time \"it's almost like you don't want to be happy.\"\n\n\"But he's so... so rich, so handsome, so successful. I'm just a maid, I don't understand what he sees in me, just look at me.\"\n\nWhy would anyone want her? Even Joe had walked out on her, she fought the urge to cry.\n\n\"Andi, you are a beautiful young woman who was dealt some tough cards and you have worked hard to pull yourself out of the rut you were in. You deserve this. You deserve to be happy, don't let that slimeball mess this up for you.\"\n\nClosing her eyes she shook her head and pressed her lips together. She didn't believe them, she couldn't believe them.\n\n\"You don't have to go to Italy with him tomorrow. You need to get to know each other, take your time. You need to reach a compromise. He's all about instant gratification that man, no self control.\"\n\nAndi squeezed her eyes closed as unwelcome emotions swept over her; they didn't know the half of it.\n\nShe thought she might start crying again.\n\n\"He is so dominating, so driven. He knows exactly what he wants. I'm scared I'm going to lose myself when I am with him. I feel like he might swallow me whole.\"\n\nIn the end she left work early. Connie spoke to their boss, she told him Andrea wasn't feeling well and he agreed that she should go home. She rang her mum to explain that dinner was cancelled and she didn't need to babysit.\n\nLater, after she had put Sophia to bed, she was just sitting down with a cup of chamomile tea the phone rang. Anxiety spiked through her. She considered letting it go, so she could screen it and call back if need be, but just as it was about to go to voicemail she snatched it up. It was John, Joe's dad.\n\nAt first he said her name and then there was an awkward silence. It took a while before he could begin trying to say what he needed to say. \n\nShe sat, holding the phone to her ear, trying to recall if there was ever a time John had cause to ring her, not Eleanor. She spoke to Eleanor quite frequently, but John was taciturn. He didn't ring people unless it was important.\n\n\"Andi, there's something I need to talk to you about.\"\n\n\"He was here yesterday John.\"\n\n\"Yes, I know. I'm sorry, we should have warned you before he turned up, we wanted to warn you. He said he wanted to ask you to marry him.\"",
        "She balked, spluttering a mouthful of her tea across the table. \"He didn't say anything about marriage!\"\n\nBut now in retrospect it made sense, that's where he was going with that whole spiel about wanting to be a family again, clearly she hadn't reacted to the news in the way Joe was hoping. She was reeling. She could feel Johns discomfort coming out of him in waves down the phone line.\n\nJohn was talking again. \"Look, Joe is my son. My only son. It pains me to say this Andi, but I don't want him to mess you around. I love Joe but he has no right to make this demand of you. Not now, not after all this time.\"\n\n\"What does Eleanor think?\"\n\n\"She thinks the same but she feels dreadful for it. We told him what happened, about the fire, about Eleanor's diabetes. We told him about Stephano rescuing Sophia from the fire. We didn't realize he still had feelings for you Andi, we thought he'd be happy for you. As soon as he found out you had someone else we could tell it was having an effect on him. He got agitated, we tried to tell him it wasn't fair and he should leave it, we thought he would.\"\n\n\"Oh, I see.\" And she did see, she saw completely. Maria had been right. He'd known about Stephano all along. He'd almost had her convinced for a minute there this was about them; about her and Sophia, but it was all about him and his stupid macho ego. She couldn't believe she'd fallen for it. She realized John was talking again. She closed her eyes and squeezed the bridge of her nose and focused on the words she could hear down the phone line.\n\n\"...She's in a right state Andi, that's why I'm ringing and saying this, not her. You don't know what she's been like this last week; migraines, panic attacks and then he was round ours earlier for his tea and he told us he'd asked you to try again and that you were thinking about it. Well she told me I had to ring. We want you and Sophia to be happy Andi, you should be happy; it's been hard for you. She doesn't want you to go through any more, but the guilt, she can't bear to tell you herself.\"\n\nThere was so much emotion in his voice. She'd never known John like this, not even after the fire. He was usually so stoic, like a rock. And poor Eleanor after everything that had happened, this was the last thing she needed. She imagined herself in Eleanor and Johns shoes and fleetingly she understood, imagined sabotaging Sophia in this way. Fat tears rolled incessantly down her face and it was a while before she trusted herself to speak.\n\n\"Do you think he'll stick around John? I don't want to introduce him to Sophia unless he's going to be committed.\"\n\nHe was silent for a while, and she held her breath as she waited for his reply.\n\n\"I don't know, love. I don't know. I'd like to think so, but I don't want to get your hopes up.\"\n\n\"Thank you for calling. And please tell Eleanor I love her, I love you both. \" She said with a catch in her voice. \"I'm just so overwhelmed and confused. \"\n\n\"I'll tell her. Good night, Andi. \"\n\n\"Good night, John. \"\n\nShe hung up and almost immediately there was a quiet knock on the door. Her heart sank, she just wanted it to stop, she wanted everything to stop for five minutes. She felt like she hadn't had a moment to herself all day. What if it was Joe at the door, she couldn't deal with Joe right now. For a moment she considered not answering it, but maybe it was Stephano. She crept along the hallway, wondering if she could possibly take a peep through the letter box without whoever it was knowing. Suddenly the door bell rang, startling her, and without a second thought she opened the door.\n\n\"Mum!\" The last person she was expecting it to be; Delores never turned up unannounced.\n\n\"You sounded really upset over the phone, I wanted to make sure you were okay. When I tried to call back it was engaged.\" She bustled past Andrea, she was already walking into the kitchen putting the kettle on.\n\nThey sat down at the table and Andrea explained about Joe turning up. She told her about how he wanted to get back together so he could be involved in Sophia's life and how confused she felt about everything and guilty and scared.\n\nShe explained that she'd told Stephano about him and how he had left the caf\u00e9 so suddenly without giving her the chance to finish. She told her about the house on the beach and about him wanting her and Sophia to move to Italy\n\n\"But do you want to get back together with Joe?\" Her mum asked gently.\n\n\"No,\" She shook her head. \"No I don't, but he's Sophia's father. I don't know, I felt like I should at least consider it, everyone deserves a second chance. And this thing with Stephano, I like him but I don't know if it's going anywhere. He wants me to move to Italy with him and I can't do that.\"\n\n\"Andi, don't make the same mistake I did. Don't sacrifice your happiness for what Joe wants. I wasted years hoping that your father was going to change, when it was obvious to everyone else he was never going to stop drinking.\"\n\n\"I thought you blamed me for what happened with Joe, for him leaving. That it was my fault for not looking after him properly; for not being a better girlfriend.\"\n\nDelores frowned. \"I'm sorry I made you feel that way Andi. I didn't mean to, I just felt so guilty. I didn't want you to follow in my footsteps. You were so young when you had Sophia, I wanted you to make something of yourself, do something with your life. And you have, Andi! I'm so proud of you.\"\n\n\"Oh mum.\" Andrea had a lump in her throat.\n\n\"I know I haven't met him yet but Stephano seems like a good man. Don't sacrifice your own happiness for Sophia's sake. For what you think you should do. What do you want?\"\n\n\"I don't know what to do.\" She said sadly.\n\n\"Go to him.\"\n\n\"It's too late.\"\n\n\"It's not too late.\"\n\nShe looked at her watch. \"It's 9:30, and it will take me nearly an hour to get there.\"\n\n\"Oh! You mean that kind of too late. That's not so late, I'm sure he'll be over the moon to see you whatever time it is. Stop making excuses and go. Andi wasn't sure, she was worried he wouldn't want to see her. Delores was riffling through the old blue leather handbag she carried everywhere and pulling her purse out of it. \n\n\"Mama, what are you doing?\"\n\n\"Here. Take this, catch a taxi.\"\n\n\"You don't need to do that.\"\n\n\"Take it. I know you'll catch the bus if you don't take the money. It's too late to travel all the way across town on your own on the bus. I can stay here. I can take Sophia in to school in the morning, just go.\"\n\nIt was more like half an hour at that time of night. Which was lucky, she felt like she was coming apart in the back of the cab as it hurtled through the city. The driver talked at an alarming rate about an incident with a television presenter that had dominated the headlines in the last few days. She hadn't really been following the story closely but his banter was a welcome distraction from the anxiety eating away at her insides. She was so nervous, what if he didn't want to see her? She realized the driver had asked a question, she hadn't heard it, she was sure how to reply.\n\n\"Sorry, I didn't quite catch that, what did you say?\"\n\nHe didn't seem to mind repeating himself at all as he launched gleefully back into his diatribe.\n\n\"I mean I ask you, why is it anyone else's business what 'e does with his spare time?\"\n\nBut she was only half listening to him. She made the occasional noncommittal sound and he seemed to be happy with that. She thought about Stephano as she stared out of the window watching the city at night hurtle by. Somehow, the conversation with her mum and with Joe's dad had finally given her permission to admit her feelings to herself. She didn't want to do what she thought she should do; she didn't want to be with Joe, she wanted to be Stephano. When she considered the possibility that she might never see him again she felt almost as though someone had plunged a hard cold blade into her stomach. She needed to talk to him, to tell him how she felt; to explain that even though she couldn't just drop everything and move to Italy with him she still wanted to be with him, she wanted to somehow try to make it work.\n\nUpon arriving at the hotel, she realised she hadn't given any thought to how she was going to get past reception and to his room. She was assuming he was staying in the same room he usually stayed in but he might not be. The trip had been unexpected and last minute. There were two staff members at reception but they hadn't seen her yet. She wasn't a guest. She couldn't just waltz in. she needed to get past them without seeming like she didn't belong. One of them left and went out the back. She let out a breath, one was better than two, then the phone rang the remaining receptionist picked it up, who ever was on the other end immediately grabbed her full attention.\n\nThis was it, this was her moment, she took another steadying breath, straightened her shoulders and strolled past the front desk with all the confidence she could muster, trying very hard to look like she belonged there. As she reached the lifts a pair of doors slid open as she walked a little faster. She reached them just as an older couple left, allowing her to slide right in. She almost forgot herself and slumped in relief, but the porter seemed to be scrutinising her with more interest than necessary. She squirmed uncomfortably wondering if perhaps he recognised her from previous visits. Deciding it was probably her imagination she stared straight ahead as the doors to the lift closed.\n\nShe paused outside the room. Was he even staying in this room? He could be anywhere, he might not even be staying in this hotel. She was starting to feel like this whole scheme had been stupid and na\u00efve. She should have just picked up the phone like any normal person would have done. It was getting later and if he wasn't behind this door she would have lost valuable time that she could have spent with him. She could hear talking. She was relieved when she recognized his voice on the other side of the door. Who is he talking to? When confronted with the idea that he might not be alone she nearly turned around and walked right back into the lift. But she didn't, she couldn't just run away, not now, after everything. She listened harder, she could only hear his voice. it occurred to her that he was on the phone. She knocked quietly on his door. She waited, she was beginning to think she had knocked too quietly, that he hadn't heard. She was plucking up the courage to do it again more forcefully when the door swung open and there he was.\n\nAt first neither of them spoke they both just stared at each other, he was only wearing trousers and as her eyes roamed appreciatively over his bare torso she was hit by the smell of his shower gel, he must have just showered. A predictable surge of attraction swept through her and she took a shuddering breath as she tried to suppress it and focus on the matter at hand.\n\nFinally he spoke. \"Andrea.\"\n\nShe smiled nervously. \"Hi.\"\n\nHe stepped out of the way and she wandered into the room and looked around, his laptop was open on the desk, there was a spreadsheet of some sort up on the screen, papers scattered around, an empty cup. She turned to find him watching her with a vulnerable expression. He quickly finished the conversation and put the phone down on a near by surface. He looked almost hungry but frightened. More vulnerable than she had ever seen him.\n\n\"You are here.\"\n\n\"Yes.\" She was only speaking in one syllable words. Her mind had cleared of everything she had planned to say when she arrived. All she knew was that she wanted to be closer to him, to touch him, to press her lips against the bare skin on his chest, to feel the heat of him against her mouth, to lose herself in his intoxicating scent.\n\n\"How did you get here? Did you take the bus? You should have called me, I would have come to you.\" She shook her head, but smiled despite herself. This was so of typical Stephano, to be so overprotective, dominating.\n\n\"Who is looking after Sophia?\"\n\n\"My Mum. Stephano, we need to talk.\"\n\n\"Yes.\" Taking big strides, he moved towards her and stopped in front of her. He started to unbutton her coat. Taking it off he draped it over the edge of a nearby chair, and grabbed the hem of her jumper.\n\n\"Lift your arms.\"\n\nWithout thinking she obeyed and he pulled it over her head.\n\n\"You're taking my clothes off,\" she said, belatedly realizing she was stating the obvious. What was wrong with her?\n\n\"Yes.\" He said, again, as he undid the buttons on her blouse.\n\nOnce he'd dispensed with her top he slid his arm around her waist moving her backwards so they were both moving towards the sofa. She wanted to stop, to talk, to tell him what she had come here to say but she was hit so hard with a wave of lust that she was nearly on her knees. The backs of her legs bumped against the sofa and she fell back and immediately he was on top of her, pushing her down.\n\n\"We're not going to talk now?\"\n\n\"No.\"\n\nHe reached behind her and with practiced efficiency he unhooked the clasp on her bra. He ducked down to her feet and started untying her shoes.\n\n\"Stephano, we need to talk.\"\n\n\"We will.\"\n\nShe was struggling to focus as he gripped her jeans and yanked them down, pulling them off her.\n\nShe frowned, he stopped what he was doing and looking up at her he answered her unspoken question.\n\n\"I need to be inside you.\"\n\nShe was baffled again, by this urgent desire he seemed to perpetually have for her, but it didn't last long, she was only in her underwear now and he was trailing his lips along her torso sending a elicit frisson of desire coursing through her, lighting up every cell in her body. All thoughts of talking had left her and she was entirely in the moment as he removed the last of her clothes and started to unbuckle his belt.\n\nHe groaned as he thrust into her, after almost no foreplay. As she clung to him all of her anxiety was forgotten. This was where she belonged, with this man, how could she have even considered being anywhere else, doing anything else. Their eyes locked, and she matched his thrusts move for move, as the intensity of their rhythm grew.\n\nAlthough he was looking at her he seemed detached, as if he couldn't really see her, as if he wasn't really there. She frowned, trying to fathom why that was. He stilled and met her quizzical stare and just like that, he was back in the moment. Cupping her jaw in his hands holding her face he looked at her. She rested her hands on his torso, exploring the contours of his chest with her fingers. Suddenly he snatched both her wrists and pinned them over her head. When he spoke, his voice was filled with a fearsome intent.\n\n\"You are mine,\" His eyes were burning. \"You belong to me.\" She nodded slowly as she gazed back at him.\n\n\"Say it.\" He growled, gripping her hands even tighter.\n\n\"I'm yours.\"\n\n\"Again.\"\n\n\"I am yours Stephano, I belong to you.\" she replied, never breaking eye contact.\n\nA deep primal sound erupted from his chest and he was moving again and her mind emptied as she was swept along by this engulfing consuming need he seemed to have for her. He rode her like a man possessed, gripping her tightly, holding her to him, kissing her everywhere.\n\nHe stood up, taking her with him. She wrapped her arms around his shoulders and clung to him, as his hands dug beneath her cupping her arse, pulling her towards him so he could bury himself deeper. He strolled across the room and kicked the door to the bedroom with his foot. It swung open, hitting the wall with a bang. They entered the relative darkness of the room and it contrasted with the harsh lighting they'd left behind. He dropped her onto the bed and she landed with a thump. She whimpered in frustration at being separated from him, at no longer being able to feel him penetrating her. Scrambling upright, he started to take his own clothes off. She watched impatiently, desperate to have him inside her again as he unknotted his tie and started to unbutton his shirt, never taking his eyes off hers. Keen to speed the process up, she tugged at his trousers, pulling them down and doing the same for his boxer shorts.\n\nHer face was level with his erection and suddenly she wanted to know how it would feel to have him in her mouth. She wanted to taste him, to give him pleasure. Wrapping her hand around his girth, she opened her mouth and closed her lips over him. She drew him into her mouth and sucked, hard. He filled her, and she reveled in the sharp musky taste of him. She moved up and down his length, dragging her teeth over the head. Her stomach clenched as she heard his sharp intake of breath, and with renewed confidence she sped her movements up, reveling in the opportunity to be the one in control. She stole a glance upwards, hoping to see his expression. She was disappointed; his head was thrown back and all she could see was his throat and the cut of his jaw. She lowered her eyes and directed her full attention to giving him pleasure. As she moved up and down the column of his shaft, exploring it with her tongue, his hands snaked up and his fingers threaded through her hair gripping her head. She moved more ferociously; his breathing had changed and she knew if carried on she could bring him to climax and she wanted to do that. She wanted to make him lose control. He made a strangled sort of sound and tried to pull away but she clamped her hands around his hips, clutching at his buttocks and held him to her, refusing to let him withdraw.\n\n\"Andrea,\" He said urgently, his voice thick with his arousal. \"I don't want to...\" but he didn't finish the sentence and she felt a wave of triumph as her mouth filled with warm salty liquid. He gripped her hair with his fists, holding her to him, trapping her. \n\n\"Santo cazzo Madre di Cristo!\"\n\nHe released her and she pulled away, falling back on to the bed, wiping the remainder of his seed from her lips with her fingers, she looked up and met his gaze, failing to suppress her triumphant smile. Stephano was so dominating, so controlling in bed that she often felt like their lovemaking was something that happened to her, and she was pleased to have played a more active role. His eyes seemed to be alight with a playful expression that she hadn't seen before. \n\nHe crawled onto the bed and kissed her, his mouth pressing against hers. Rolling onto his back he pulled her with him, onto his chest and wrapped her up in his arms. He was holding her as though he might never let her go, she waited for him to loosen his grip or to move but he didn't do either. His playful mood seemed to have dissipated as suddenly as it had arrived and he seemed pensive and serious again.\n\n\"I thought you were going to leave me. I thought you were going to go back to him.\"\n\nHe was looking not at her, but straight up at the ceiling as he spoke. \"I thought it was the right thing for you, I didn't want to interfere.\" He paused and his jaw clenched, she waited for him to continue.\n\n\"I was afraid. I was going to beg you not to leave me, in front of all those people.\" He was speaking the words in a rush.\n\nShe gasped and he looked at her finally.\n\n\"I didn't want to influence your decision. I didn't want to make it any harder than it had to be for you.\"\n\nShe was still reeling from the admission that he would even consider begging her not to leave him when he started speaking again.\n\n\"But he cannot have you.\"\n\n\"Stephano I was never seriously considering going back to him, I just...\"\n\n\"I would not have let you, maybe it is the right thing, for the three of you to be a family again, but I can't allow it. You are mine,\" his voice hardened. \"He needs to understand that.\"\n\nA vein pulsed in his neck. Tentatively she ran her fingers across his chest, she needed him to understand that although he might become an unavoidable part of their lives, Joe wasn't any kind threat to them.",
        "\"I don't want to be with him Stephano, I want to be with you.\"\n\nHe watched her through narrowed eyes without speaking.\n\nShe continued. \"I just needed some space, some time to think things through. He just turned up out of the blue, it was such a shock.\"\n\nHe still didn't speak. She worried about what was going through his mind. He moved, turning to her so they were lying face to face. He was scowling as he cupped her face in his hands.\n\n\"I can look after you. I will take care of you, both of you. You don't need him.\"\n\nThere was a possessive undercurrent to the words and she felt herself bristle.\n\n\"I don't need anyone to look after us, it's lovely that you want to, but I can do that myself and we were doing okay before you came a long and I'm sure we'll be fine when you've gone.\"\n\nHis face darkened, she realized as soon as the words left her mouth that they were a mistake.\n\n\"I am not going anywhere.\"\n\n\"I'm sorry, I just, I'm used to doing things on my own, I'm used to being independent, I'm frightened, I don't want to lose myself and I...\" She frowned, and bit her lip. \"I don't have a good track record with people sticking around.\"\n\n\"I will never leave you.\"\n\n\"You can't know that Stephano.\"\n\n\"I do\" there was a fervent undercurrent running through the two words. \n\nShe frowned, wishing she didn't find it so hard to believe him.\n\nHe sighed \"I'm sorry, these last few days must have been hard for you. I am not helping. I don't want to make things more complicated.\"\n\n\"I love you, Stephano.\" The words had crept out before she had a chance to think them through, to decide whether it was the right thing to say but as she spoke them she realised that she wanted him to know.\n\nHe grinned, and it transformed his face. He looked younger, like a little boy who'd just woken up and remembered it was Christmas day and soon she was smiling too, she couldn't help herself, the grin was contagious.\n\n\"I love you too. I have never felt this before, not for anyone.\"\n\n\"Neither have I.\" She replied, not quite believing that his feelings matched the intensity of hers, despite all the signs. All sorts of emotions welled up inside her, making her giddy.\n\nSuddenly she wasn't draped over his chest anymore, he was on top of her. He started to frantically push her disordered hair away from her face and cover her in kisses. It tickled, and she was laughing, squirming, begging him to stop. He gripped her waist with both his hands pinning her in place and the tempo of the kisses changed. They were slower, deeper, summoning the hunger in her that had been hovering just below the surface. His lips began to drift down her throat tantalising her already too sensitive flesh. She was finding his touch almost too much to bear and her fists bunched as she gripped the duvet beneath her.\n\nHe pulled her thighs apart, draping her legs over his shoulders and settled between them. He looked up at her, and she felt trapped by his gaze as a lazy grin spread across his face.\n\n\"I will give you pleasure you now.\"\n\nHe lowered his face and caught her clitoris in his mouth and dragged his teeth across it. She bucked, crying out, first grinding her pelvis into his face and then arching her back.\n\nAt first his touch felt too sensitive after so much build up that she wasn't sure she could bear it and he was so unrelenting. She clutched his hair with both her hands and tried to pull his face away, not sure she could withstand the onslaught, but he had slid his hands underneath her and she could not budge him. Somehow it wasn't too much, the intensity had lessened. His exploration of her was just the right side of glorious. She could feel the telltale heat start to build in her loins and her eyes drifted closed as she started to let herself go, to lose herself to the sensations of her impending climax. \n\nHe pulled away and looked up at her, his lips wet with the evidence of her arousal, his eyes glittering with wicked intent. She whimpered in frustration at the sudden halt in his activity.\n\n\"I want to be inside you when I make you climax.\"\n\nHe climbed on top of her and entered her so slowly she felt that she might die of frustration. She ground her pelvis against his, trying vainly to bring herself back to the place that she was before he had stopped, but he pinned her to the mattress with his hips and he laughed.\n\n\"No!\" She cried, it wasn't fair. She dragged her fingers down his chest.\n\nHe raised an eyebrow \"You want to draw my blood?\" But still he wouldn't allow her to move.\n\nShe gripped his head in both her hands and pulled him down to her face so she could kiss him, frantically. When she could feel that he was losing himself in the moment she grabbed the opportunity and swung herself over, catching him by surprise so he was on his back and she was on top of him. They were both breathless and laughing again as she straddled him.\n\nHe put his hands behind his head and gazed up at her. \"You are so beautiful, I will never tire of looking at you.\"\n\nShe smiled, self-consciously throwing her arm over her chest. She rolled her hips forward, reveling in the sensation of him filling her. She sucked her bottom lip into her mouth and grinned shyly as her hand slid down her stomach and slipped between the folds of her pussy. When she found her clitoris her eyes fell closed. She moved against him again, faster now, He moaned and her eyes flew back to his. As he ate up the sight of her they were molten with arousal. His hands moved up, gripping her waist as he started to meet her thrusts and she realised what an illusion that had been; she was never in control of this, he was just letting her think she was. He brushed her hand out the way and started to rub her clitoris with his thumb. Touching herself had felt nice, she would have made herself come. The idea of doing it in front of him while she was riding his erection thrilled her, but filled her with trepidation all at once. But his touch, his touch was a whole other thing, soon she was finally tumbling into an intense orgasm. \n\nIt was like a tsunami, as a myriad of unexpected emotions washed over her. Falling forward she clung to his chest as though he was her anchor as she weathered the storm. But she didn't have time to really acknowledge her feelings or try to understand them, because he was lifting her off of him, turning her over on to her front and pulling her hips up so he could fill her again. He grabbed her hair and pulled her head back, burying his face in her neck, his hand traveling round to her front so he could slide his fingers into those damp folds and stroke her clitoris as he was slammed into her.\n\nSoon she was coming again. Her orgasm was less intense but it was more sustained. He wasn't far behind her. It was his turn to fall forward and she collapsed under the weight of him and they both just lay, as their breathing returned to normal. \n\nShe sat up, full of that warm fuzzy post coital feeling as she noticed a small blue coat on hanger, hanging on the door. She hadn't seen it before, she got up and wandered over to it and lifted it down. it was the coat from the shop; the one she was going to buy for Sophia before they found the football kit. She spun round and faced him.\n\n\"Stephano?\"\n\nHe grinned.\n\n-\n\nIt was a few weeks later, a sunny Sunday autumn afternoon. Stephano had driven from the airport directly and was collecting Andrea so they could go down to Eleanor and John's house for dinner. With everything that had happened the promised meal had taken longer than expected to arrange, the invitation had been months ago, after the fire. She thought back to that time, he had still seemed like a stranger then, mysterious and intimidating. \n\nThey hadn't seen Stephano since that day, and although they always asked about him and she was feeling apprehensive. She hadn't seen them much since the awkward telephone conversation with John. They had collected Sophia the night before but they hadn't stayed for long.\n\nHe wrapped his arms around her and she was back in the present.\n\n\"You are okay?\" He asked.\n\nShe nodded and he kissed her. A slow lingering kiss that had her wishing for more, wishing she had time to pull him into her room and into her bed.\n\n\"Where is Sophia?\" He asked.\n\n\"She's there already. She stayed with them last night. I just spoke to her on the phone. She is baking you a cake, she's very excited about it.\"\n\nShe watched as a smile slowly spread across Stephano's face, that warm, indulgent smile that seemed to be associated with Sophia alone. They had spent some time together and they got on well. He was patient and gentle with her.\n\nThey were getting in the car when she noticed a large box on the back seat. A closer inspection informed her it was an electric chip fryer on the back seat. She looked at him questioningly, raising her eyebrows at him.\n\n\"A gift.\"\n\n\"So you do have a sense of humour?\" She asked him, teasingly.\n\n\"It's safer.\" But there was a smile tugging at the edges of his mouth.\n\nDuring the journey she reflected on what had happened with Joe when they had met last Saturday. He had wanted to meet Sophia, but she wasn't ready for that. At the last minute she had decided to leave Sophia with her mum. And they hadn't met in Marine Ices either, that would have been too emotionally loaded. She had surprised herself, with how resolute she had been, how assertive. She was honest with him about her concerns about his commitment to being in Sophia's life, clear that there would be nothing more between the two of them than sharing the parenting of Sophia. He had been shocked, and it dawned on her how much she had changed since she had been with him. She was more confident. \"Think about it Joe, call me when you're ready.\" She hadn't heard from him.\n\nThey were outside the house and for a fleeting moment he looked worried. \"Is it too much? Do you think I will offend them?\" He gestured to the gift in his hand.\n\n\"Stephano, I think you could dance naked around the dining room table and you wouldn't offend them.\"\n\nHe looked at her blankly for a moment but then he threw his head back and laughed. She realised it was the first time she's heard him laugh, really laugh. The sound was rich, and unexpectedly her insides clenched. She shook her head, surprised by how this attraction to him manifested itself physically.\n\nSuddenly he was serious again. \"I have a something to tell you.\"\n\n\"Oh?\"\n\n\"I was going wait to tell you later, but I can't wait, I must tell you now.\" He looked uncomfortable.\n\nApprehension mixed with excitement skittered down her spine. \"What? What is it?\"\n\nHis brow formed a quizzical line and he still didn't speak, he just looked at her.\n\n\"You're scaring me now, just tell me.\"\n\n\"I bought the house.\"\n\n\"You did what?\"\n\nBut she had heard him right, Her head began to swim as conflicting thoughts and emotions piled up, scrambling for release. He bought the house, what did this mean?\n\nAs if reading her mind he stepped towards her and took her face in his hands. She struggled with the urge to pull away, while she was still trying to process what this meant, did he expect them to move there? She thought she had made her feelings about that clear.\n\n\"Andrea. I didn't buy it so we could live there all the time. I know you want stay in this country and be a teacher, and I want to support that. We will spend our summers there.\"\n\nHer mouth fell open. The idea of spending summer in a Mediterranean idyll with Stephano filled her with a warm fuzzy feeling. He was so full of surprises. Some times he seemed like such a chauvinistic dominating arse and sometimes he could be so sensitive, so perceptive.\n\n\"I know you want to take this slowly and I can hardly blame you. You don't know me. You have your daughter to consider. I want to be with you, I don't want to mess this up. I nearly lost you.\"\n\n\"You didn't...\"\n\nHe placed a finger on her lips, cutting her response short.\n\n\"It made me realise how much you mean to me, I'm not used to this. I come from a very powerful, traditional Italian family, I am rich, in my world women do not deny me, they do not contradict me. They are usually happy to be with me, to do what I want, to go where I want. You're so strong Andrea, so independent. It fascinates me, it excites me; I don't want to change you.\"\n\nShe frowned. She didn't feel strong or independent when she was with him. She felt like he just had to say the word and she would do anything for him, anything at all, and it frightened her, it terrified her.\n\n\"We can make this work. I can come to live here in this country.\"\n\nAndrea didn't know what to say. She was still learning to trust again, still finding it hard to let go of the past. She took his hand in hers and lifting it to her face she brushed her lips across his knuckles. Their eyes met and she could see that her unspoken communication had hit the mark."
    ],
    "authorname": "karaline",
    "tags": [
        "romance",
        "noncon",
        "drama",
        "non-con"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-maid-ch-07"
}