{
    "title": "Going Rogue Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\n Feedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\n This story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n\n\n Part 1 - Prologue \n\n (Author's note: this story is a lot of laying groundwork for the future, something like an Interlude. Thanks in advance for bearing with it, and be assured that cluuuuues are being inserted.)\n\n Monday morning, October 5th. Having spent the weekend with Laura and the kids at The Cabin, I was leaving in my Police SUV. The driveway to the road went north, and as I looked forward I saw a strange, new set of lights on the northern end of the University's property. I stopped to peer at the lights, and saw that construction was starting up.\n\n *BRING!* *BRING!* *BRING!*\n\n My cellphone was ringing and I answered it. It was my wife.\n\n \"Is everything okay up there?\" she asked. She and the kids were in her Mercedes behind me. My sudden stop, which blocked her behind me in the driveway, necessitated her call.\n\n \"Uh, yeah, sure.\" I said. \"Do you know what that new construction is?\"\n\n \"No.\" Laura replied. \"I'll check on it when I get to my office.\"\n\n I drove on down to the road, then north along it until it turned downhill to meet the main roads. Seeing the construction to my right (and the University football stadium to my left), I decided to pull over and see what it was about.\n\n No sooner was I stopping near the trailer that housed the site office, when a man in construction attire practically flew out of the trailer and walked rapidly towards my Police SUV.\n\n \"Hey!\" he barked, \"This is a closed site! What are you doing here?\"\n\n \"I'm the Police Commander in this Town.\" I said in a friendly voice. \"What's this construction about?\"\n\n \"This is State property!\" the man barked again. \"You have no jurisdiction here. If you don't have a State warrant, get out of here!\"\n\n I was taken aback at the man's vehemence as much as his confrontational attitude. And though I was an SBI Reserve Agent, I knew he was technically right.\n\n \"What's your name?\" I asked, in a more authoritative voice.\n\n \"That's none of your god-damn business!\" the man snarled. \"Now get out of here. Jeb! Round up our guys, tell 'em to bring the shotguns!\"\n\n \"Coming right up!\" a lanky man at the door of the trailer said before ducking back inside.\n\n \"All right, I'll go.\" I said. \"But the Sheriff does have jurisdiction here. Expect a visit from him soon.\" With that, I backed out and headed down the road and through Town to Police Headquarters.\n\n Part 2 - Dogs In the Night-Time \n\n \"This is Betting Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am. \"Channel Two News is following the developing news of a series of dog killings in several neighborhoods around Town. This weekend the crimes occurred in neighborhoods in the southwest of Town. Channel Two News reached out to Precinct Two Captain Damien Thompson for comment, but we've received no response.\"\n\n \"Typical news media.\" said Theo Washington as we drank coffee in MCD and watched. \"They call at 5:00am when no one is home, then say we're not getting back to them.\"\n\n \"I thought Bettina was getting better about that, Don---- er, Commander.\" said Lt. Tanya Perlman.\n\n \"She was.\" I replied, not chastising Tanya for her slip, at least not in front of the others. \"So for her to do that is a cluuuuue that something is going on here. In addition, if a perp is killing dogs, I want to find that perp and... well, let's just say I don't carry that crowbar around just to look good.\" There was mild laughter.\n\n \"In other news,\" Bettina said, \"the groundbreaking ceremony for the new State Crime Lab took place at the University on Saturday. University President Sidney P. Wellman and SBI Director Jack Lewis, who is running for Governor, participated in the ceremony. The new State Crime Lab is a joint venture between State law enforcement authorities and the University's Criminal Justice Department. Students and Campus Police Cadets will learn Crime Lab techniques in a first-class facility, and Director Lewis says the region will be served much more efficiently by the Crime Lab in their local area.\"\n\n I glanced around, wondering why all pairs of eyes were on me. \"What?\" I asked. It was Tanya Perlman who had the nerve to say something.\n\n \"They're building a State Crime Lab in our backyard, Commander.\" she said. \"When our own Crime Lab is the best in the State by far, and we have contracts with all the counties in this region.\"\n\n \"Well,\" I said, \"it's not like I have some kind of magic wand and can stop it.\"\n\n \"Sir,\" said Martin Nash, \"I think we're all wondering why they're doing this, and what your reaction is going to be.\"\n\n \"My reaction,\" I said as I poured coffee into my 'U.S. Army Airborne School' mug, \"is going to be to have another cup of coffee, then go get the Precinct Two duty logs and see if I can get more about these dog killings from Precinct Captain Thompson than Bettina did.\" Fortified by the caffeinated product, I took leave of the MCD room.\n\n * * * * * * * * * * * * * * * *\n\n The morning meeting of \"Crowbar's Angels\" was cut short by a call from the Sheriff. I asked Cindy, Tanya, and Teresa to step out of my office so that I could talk to Sheriff Daniel Allgood in privacy.\n\n \"Hello, Sheriff.\" I said. \"How was your weekend?\"\n\n \"Good!\" Daniel said. \"The woods around Lake Amengi-Nunagen have turned Fall colors, and Melina harvested a deer. Paper-plate center shot at 300 yards.\" By that, he meant that a deer's vitals (and a human's for that matter) are in a circle about 8\" in diameter, the size of a paper plate, and Melina of course put her shot dead in the middle at 300 yards. No big deal... for her.\n\n \"Cool beans.\" I said. \"I called you this morning because I stopped by that construction site on the north side of the University this morning, and I got a rather rude reception.\" I explained what had happened. \"I was wondering if you might want to stop by there. And maybe take a couple cars of very well-armed reinforcements.\"\n\n \"I'll check into it.\" said Daniel. \"My chance to channel my inner Crowbar.\"\n\n * * * * * * * * * * * * * * * *\n\n The Old Mill Building had a much more comfortable feel to it now that it had been a Police Precinct Headquarters for several months. The Officers there were a bit surprised when I showed up with Detective Theo Washington in tow, but they seemed to be doing their jobs efficiently and everything looked good.\n\n Precinct Captain Damien Thompson met us at the Duty Desk and escorted us to the Conference Room. It was about the size of a classroom at my Headquarters, and the exposed brick back wall and polished floor planking gave it a certain charm.\n\n \"Yes sir,\" said PCpt. Thompson, his gold Captain's bars reflecting the overhead lights, \"I was reading the logs about it. Four calls came in on Saturday. All of them in one area, in adjoining neighborhoods. Two calls came in Saturday morning, when families got up and found their dogs dead in their backyards.\"\n\n \"How were they killed?\" I quickly asked before Thompson could move on.\n\n \"Shot, both dogs. All four dogs, actually.\" said Thompson. \"Officers went door-to-door, but no one claimed to have heard anything. I might add that the neighborhood is relatively quiet, but once you get onto main roads, it starts touching the area we call the 'Southwestern Ghetto'. Gunfire and cars backfiring can be heard frequently, and kids will set off fireworks sometimes.\"\n\n I did not have to be told that these neighborhoods were predominately black, lower middle income homes. I also did not need to be told that people in these neighborhoods made a point to not see or hear anything.\n\n \"What breed of dogs were they?\" I asked as I took notes.\n\n \"Mutts.\" said Thompson. \"Patrolman Culver made some good observations and notes. He said one looked like a terrier, not very big, and the other looked like a boxer, but not as big as a normal boxer.\"\n\n \"I see. Okay, what about the other two?\" I asked.\n\n \"Those were called in later that afternoon, and one of those was witnessed.\" said Thompson, looking at notes as he talked. \"Twelve-year-old kid named Jerome -----. It's not clear if the dog was his or not. He said...\" He paused, and I noted a look of tension on Thompson's face.\n\n \"What?\" I asked, peering hard at him. \"What is it?\"\n\n \"Commander,\" said PCpt. Thompson, \"the kid said that the man who shot the dog was a police officer.\"\n\n * * * * * * * * * * * * * * * *\n\n Theo and I followed in my Police SUV as Precinct Captain Thompson drove in his Police Cruiser through the neighborhoods where the crimes had occurred. We stopped in front of a house that was old but in decent repair. Tricycles and toys were in the front yard.\n\n \"Hi, Jerome.\" said Thompson to a twelve year old black boy sitting on the front porch. \"Can I talk to you for a minute?\"\n\n \"I already told the other cops everything.\" said Jerome.\n\n \"You know who the Iron Crowbar is, don't you?\" asked Thompson.\n\n \"Yeah.\" said Jerome, his eyes widening just a little.\n\n \"Good.\" I said, coming around the back of my vehicle. \"Will you talk to me for a minute?\"\n\n \"Oh wow....\" Jerome said, his eyes widening a lot more and his voice almost a whisper as he saw me walk up with the red crowbar in hand, Tilley hat on my head. \"You are real!\"\n\n \"Yes I am.\" I said. I went up and sat down beside Jerome, who was too stunned to move. \"Tell me what happened with the dog, Jerome.\"\n\n \"I was riding my bike up and down the street.\" said Jerome. \"Dog was on the porch. A police car came up and stopped right in front of me. Cop got out and asked me what my name was. I told him 'Jerome', and he said 'Is that your dog?'. I said he just hung out here sometimes. So the cop went in the yard up to the dog, pulled out his gun and shot the dog.\" Jerome looked disturbed at the memory.\n\n \"Was the dog barking, was he going after the cop?\"\n\n \"Naw, man, Dog didn't make a sound. Just sittin' there.\" Jerome said.\n\n \"What happened then?\" I asked.\n\n \"I yelled out 'Whatcha doin', man?' and the cop pointed his gun at me.\" said Jerome. \"I thought I was dead, but he just said 'Say anything to anybody, and I'll kill you.' Then he got back in his cop car and drove off.\"\n\n \"Anybody else see it?\" I asked.\n\n \"People started coming up after the cop left.\" Jerome said. \"I don't know what they saw.\"\n\n \"Jerome,\" I asked, \"was he wearing a uniform like mine, or like Captain Thompson's here?\" We were both wearing light blue shirts with dark pants.\n\n \"Naw, he was wearing a dark blue cop shirt, like the street cops.\" Jerome said. \"And a dark blue cop hat.\" By that he meant the standard police officer's highwall cap.\n\n \"Was he tall? Short? Skinny? Fat?\" I asked. \"White? Black?\"\n\n \"He was a crack---- uh, white.\" said Jerome. \"Not as tall as you, I.C., but tall. I couldn't see much of his face and he was wearing shades. Kind of a mean looking face.\"\n\n For some reason beyond my kith or kin, I had an insight as I looked at the police cars. \"Jerome,\" I asked, \"what did his police car look like? Did they look like those?\" I was pointing at my silver SUV and Thompson's all-bluish-gray police cruiser.\"\n\n \"Naw, his car was black and white. Black front and back, white doors. Police badge on the sides.\"\n\n \"Like my badge?\" I asked, letting him look at the 5-pointed gold Star with an encircling wreath.\n\n \"Not on the car. The badge on the car was like the cops on TV wear, big and silver.\"\n\n \"I see.\" I said. \"What about the badge on his shirt?\"\n\n \"Yeah, it was sort of like yours,\" Jerome said, \"but it wasn't gold, more between gold and silver, like faded gold.\"\n\n After a few more minutes with Jerome, I told him I'd do what I could to find the guy and kick his ass for killing the dog, then we walked back to the cars.\n\n \"Damien,\" I said, \"let's go to the neighborhood where the first killing was called in.\"\n\n * * * * * * * * * * * * * * * *\n\n I looked around the site. The dog had been in a fenced-in backyard. The owners said they'd heard no barking out of him the night before, and had found him dead on the back porch that morning. The dog had been shot near the fence line, and had made it to the porch before collapsing and dying, so I could see from the blood trail.\n\n It was not the owners I really wanted to talk to, but the occupant of the house to their right. Knocking on the door, I was admitted by Mrs. Campbell, the owner, an elderly black woman.\n\n \"I don't know about this.\" she said. \"The Iron Crowbar in my house is an omen. You know I shouldn't be talking to you. My people and the cops don't have a good history. But the big man around here, T-Square, he says you are the real deal, so I'll help you if I can.\"\n\n \"I appreciate that.\" I said. \"So you were a teacher at Booker T. Washington High School, were you not?\"\n\n She looked at me as if incredulous that I would know that. \"We-el, that is right. Thirty-seven and a half years. I had to retire three years ago, when I had to have hip surgery. It hasn't been right since, and I can't get around like I used to.\"\n\n \"I understand.\" I said. \"And your nephew is T-Mac, who is a friend of T-Square, I believe?\"\n\n \"Yes, that's true.\" she said. \"That boy is in and out of trouble. And that's how you know about me, I guess... checking up on my nephew.\"\n\n \"Don't worry, he's definitely not my biggest problem in this Town.\" I replied. \"But what I wanted to ask you about was what happened last night. Sure you didn't see or hear anything?\"\n\n \"I told those other police that I didn't hear or see anything.\" said Old Mrs. Campbell, \"because that is what we tell the police. We don't want to get involved, it just brings trouble. But I will tell you, Mr. I.C. Yes, I heard the shot. Not really loud, kind of muffled. But I heard it, and looked out the window. The moon was out, so I could see a man in a police uniform. He was walking out of the yard to his police car.\"\n\n \"Could you see any badges or patches on it?\" I asked.\n\n \"No sir.\" she said. \"But he had a cop hat on, just like all the cops wear. And he had a big belt with a gun and handcuffs and a radio. I could see the shadows of those.\"\n\n \"What did the police car look like?\" I asked. \"By that I mean the colors, if it had a lightbar on top, and such.\"\n\n \"Well,\" said the old woman, \"it was all black, or looked black in the darkness. There were lights on the top but they weren't turned on.\"\n\n \"Okay.\" I said. \"I appreciate you telling me this. If you see what you think might be that car or that man again, give me a call. Call 9-1-1 and when the Duty Desk answers, tell them you need to speak to Commander Troy personally about the dog killing, and they'll transfer you to me or my message inbox. And if you hear of any more dog shootings, let me know. I really want to catch this guy.\"\n\n \"I'll do that.\" said the old lady. \"You are the real deal in this Town, just like my nephew and T-Square said...\"\n\n * * * * * * * * * * * * * * * *\n\n \"What do you make of it, sir?\" asked PCpt. Thompson. We were in the Precinct Two Conference room again. I had called Captain Cindy Ross to come down, and she was present with us.\n\n \"I don't know.\" I said. \"The TCPD doesn't have any black-and-white police vehicles. They're all blue-gray, with some silver and some all-black SUVs. And they don't have any badge emblems on the sides, though they used to.\"\n\n \"Think Jerome was lying?\" PCpt Thompson, who was black himself, asked.\n\n \"I don't know.\" I said. \"From your other reports, anyone who actually did comment said that they only saw the back end of a black car. I don't know why Jerome would make up something like that, though.\"\n\n Cindy asked \"What about the badge on his shirt?\"\n\n I replied \"Jerome said the man's badge was what he called 'faded gold'. Sounds like that material they make high school class rings out of.\"\n\n \"Didn't we have someone impersonating an officer a few years ago?\" Cindy asked, \"Had a badge like that?\" She meant the perp we caught in the Evidence Rooms, who'd committed suicide by cyanide... and was wearing a fake badge with my number on it.\n\n \"Yes, I remember that.\" I said. \"And that is causing me to wonder if we have someone impersonating a police officer, going around and killing dogs.\"\n\n \"Why would anyone do that?\" Theo Washington asked.\n\n \"That is what you are going to find out, Detective Washington.\" I said. \"You are the lead investigator of this case, as of now. Captain Ross, inform Lt. Perlman of my egregious pulling of rank and interference with her Department.\"\n\n \"With pleasure, sir.\" Cindy said, totally deadpan. PCpt. Thompson laughed heartily, then his humor vanished.\n\n \"Sir,\" Thompson said, \"we have to consider that this is a real police officer doing this. Do I need to call Internal Affairs?\"\n\n \"Yes.\" I said. \"That's good thinking. Yes, go ahead and call Internal Affairs, inform them of the situation. Theo, you also contact I.A. and tell them separately.\"\n\n Part 3 - The Sheriff is in Town \n\n At 10:00am six cars belonging to the Sheriff's Department pulled up at the construction site just north of University Stadium. They happened to be all six cars that the Sheriff Department owned. Eleven Deputies got out of the cars, followed by Sheriff Daniel Allgood, who made it a compliment of twelve men. Their duties at the Courthouse were being temporarily filled by TCPD Police Officers.\n\n The foreman came out of the trailer, the same guy who had been a bit \"touchy\" with the Police Commander earlier in the day. He saw that the Deputies were very well armed, had their armor vests on, and were very ready for trouble.\n\n \"Good morning.\" said Sheriff Allgood, wearing a Sheriff's uniform and his Stetson hat, his armor underneath his shirt. \"Are you the foreman here?\"\n\n \"Who wants to know?\" the man said.\n\n \"I do. I am Sheriff Daniel Allgood----\"\n\n \"You got a warrant to be here?\" the man snarled.\n\n \"I don't need one.\" said Daniel. \"As Sheriff, I have full jurisdiction over State property within this County. That includes the University and this piece of property here, and I don't need a warrant to be here. What is your name?\"\n\n \"I think you have to have a warrant to be here.\" snarled the man. \"If you don't have one, get the hell out of here.\"\n\n \"And who are you going to call to enforce that?\" Allgood asked. \"*I* am the Law here. Now show me your I.D.\"\n\n \"You can go to hell.\"\n\n \"Deputy, place this son of a bitch under arrest. Take him to County Jail. No calls to a lawyer. He can sit and rot in there until he identifies himself.\" Deputies moved to enforce the Sheriff's orders.\n\n \"All right, all right.\" the man said, reaching for his back pocket. Twelve guns were drawn and aimed at him.\n\n \"What the fuck is going on with you people?\" the man gasped. \"I'm getting out my wallet.\"\n\n \"Do it slowly, buddy, or you might end up shot dead.\" said Allgood, his own gun inches from the man's head. \"My Deputies are just looking for an excuse to blow you away for being a fucking asshole with me; and quite frankly, I'd be very happy if they did just kill you now and save me any further trouble.\"\n\n The man was in shock as he produced his I.D., which Allgood examined. He also noticed that several of the construction crew had gathered around, and some were trying to conceal the fact they had weapons.",
        "\"Deputies, watch those guys.\" said Daniel. \"They're armed. If any one of them draws a weapon, shoot to kill all of them. Every last one of them.\"\n\n \"Geez, you mother fuckers are high-strung.\" said the foreman.\n\n \"Call me that again,\" said Daniel, \"and you'll go to jail right now... and you won't survive it.\"\n\n \"Are you fucking kidding me?----\" the man started, but Allgood cut him off.\n\n \"No I'm not kidding.\" said Daniel, channeling his inner Iron Crowbar. \"You told us to go to hell, you've been uncooperative... and you say we're high strung?\"\n\n After a pause, the Sheriff said \"So your name is Bert Jones?\"\n\n \"Yeah, what about it?\"\n\n \"Okay, Deputies, we're going to do this the hard way.\" Daniel said. \"Mr. Jones, I want to see every one of your required permits. Every last fucking one, from the State and the County. If even one word is misspelled, I'm going to shut this operation down so hard it'll make your head spin.\"\n\n Daniel took copious amounts of time going through the books, looking at every permit, even calling the Town & County Permits Office to make sure some of them were legit. Two Deputies were inside with Daniel and the foreman, hands on guns, while outside the rest of the Deputies had acquired shotguns and were essentially holding the construction workers in place.\n\n Finally, Daniel and the Deputies came out. \"I'd suggest, Mr. Jones, that you become more cooperative, especially with the Police in this County. I can take you to jail, fuck with you and your crew... but the man you flipped off early this morning... you do not want to find yourself on the business end of his crowbar.\"\n\n \"The Iron Crowbar, huh?\" snarled the man. \"I don't give a shit about him. Let him come here again. We'll gang rape his ass and then kill him. And you can tell the mother fucker I said that.\"\n\n \"Oh, I'll be sure to.\" the Sheriff said, then turned to his Deputies. \"Okay, let's go!\" They got in their cars and rolled out, leaving behind a very angry foreman and a disgruntled crew. The TCSD cars got out of there just in time; a KSTD News van was rolling up to the construction site...\n\n Part 4 - Media Relations \n\n Still Monday, October 5th. At 10:30am I agreed to a sit-down interview with Bettina Wurtzburg in the \"Press Interview Room\" at Police Headquarters. It was simply a well-lighted room next to the office of the Press Relations Officer, Lt. Scott Peterson, and the Press Interview Room had some plaques and photos of previous Chiefs of Police and such.\n\n In agreeing to the interview, I told Bettina that I wanted to get some information out about the dog-killer, and in exchange she would get to ask me some questions about the Town & County Council's 'Study Group' that was looking into changing the rank structure and status of the Detectives. Bettina was pretty good and fair about things like this; I would never trust KSTD and Priya Ajmani with an interview of this nature.\n\n \"Okay, let's start off.\" said Bettina, who then turned to her cameraman, Scott Turnbull. \"This is Bettina Wurtzburg with Town & County Police Commander Donald Troy. Commander, thank you for sitting down with me today to discuss these issues.\" I knew Bettina had a show script prepared; ergo, the nature of her comments.\n\n \"Glad to be with you, Bettina.\" I replied, knowing that mentioning Bettina's name a lot would make her very happy... and maybe get me a hot redheaded reporterette piece of ass sometime in the future.\n\n \"What have you discovered about these dogs that were killed, Commander?\" Betting asked, throwing me an open line. I took advantage of it.\n\n \"Bettina, our investigation has discovered that someone may possibly be impersonating a police officer in the commission of these crimes. My real police officers will be attired in proper uniforms, or will show their identification if they are in plain clothes. I also urge citizens to keep an eye out for their pets, and to not let their pets roam freely outside their homes or yards. I would urge owners to keep their dogs inside or in garages overnight until we find out who has been killing these dogs.\"\n\n \"Commander,\" said Bettina, \"nationally there have been problems with police officers killing dogs indiscriminately, even if the dogs are not attacking police nor are a threat to police. What is your Department's position on this?\"\n\n \"My position, which is my Department's position,\" I said, \"is that dogs should not be harmed in any way unless the dog is actually attacking someone and the only way to stop the attack is to kill the dog. I would add that any time an Officer draws and fires his weapon, no matter what he or she is shooting at, creates what is called a 'serious incident' and triggers a Board of Inquiry investigation. The Town & County Police Department takes any such situation seriously.\"\n\n \"Thank you, Commander Troy.\" Bettina said. She looked over at Turnbull and said \"Cut.\" Turnbull turned off the camera, though I did not trust the mike to really be off.\n\n \"Okay, Commander,\" said Bettina, \"I'm going to lead in with a comment, then turn to you and ask about the Study Group.\"\n\n \"Okay,\" I said, \"but you do realize I'm not part of it and really can't speak for it.\"\n\n \"Of course.\" said Bettina. I started getting concerned. She turned to her cameraman and nodded her head, and he began recording.\n\n \"I'm talking with Town & County Police Commander Donald Troy. He was Acting Chief for several months after Chief Griswold retired, and he currently supervises the overall Operations of the Police Force. Any action by the Study Group will surely affect his Unit's operations.\" She turned to me. \"Commander, the Study Group is looking into streamlining the Police Department's operations, as well as those of the Fire Department. Are they communicating with you on their plans?\"\n\n \"My boss, the Police Chief, is part of the Study Group.\" I said. \"And of course I have frequent conversations with him about the Police Department's operations at all times. That's our job, of course.\"\n\n \"Certainly,\" said Bettina, \"but are you aware of the Study Group's ideas?\"\n\n \"I'm not part of the Study Group,\" I said, \"but I've had some talks with some of its members. What was said in those discussions is private, of course, but I have some idea of what they're looking at, at least as far as the Police Force is concerned.\"\n\n Bettina said \"There has been some talk of your Detectives being divided among the Precincts. How would that affect your Department's operations?\"\n\n \"First of all, Bettina,\" I said, \"it is way premature to talk of such things. I would also add that Police Departments all over the Nation, and indeed the World, operate in generally the same way. The Council may take some actions for accountability and streamlining, but I don't expect our overall actions to be impacted. Our Police Force, and especially my Detectives, have done and are doing an excellent job, and I will do everything in my power to make sure they continue to have everything they need to solve crimes and serve the Citizens of our Town & County.\"\n\n I realized that Betting was asking for others beside herself when she asked \"Commander, you were not yet with the Police Force when the Town and County's units were merged. The Study Group is considering that the rank structure was good at the time of the merger, in order to facilitate a smooth transition, but that changes are needed now. Do you believe changes are needed? And what would you recommend?\"\n\n \"Do not edit this reply.\" I said, then continued: \"I think what we have now works very well. Of course I am an employee of the Town & County Police Department, and I will do what the Council and my superiors tell me to do regarding any changes.\" I had said that about editing so that Bettina wouldn't cut it up to make me sound rebellious of the Council. She knew that TCPD cameras were also recording this, and that for her to attempt to edit that line after I told her not to would be most very bad for KXTC vis-a-vis Police Force relations.\n\n Just then, there was a knock on the door. \"May I come in?\" asked Sheriff Daniel Allgood.\n\n \"Certainly, Sheriff!\" Bettina said, beaming at the potential opportunity. \"Can I get a few words with you about the Study Group?\"\n\n \"Sure!\" said Daniel. I moved over so that he could sit next to Bettina, noting that Daniel was treating this situation easily, handling it like a practiced Sheriff... and politician. I'd done right to have him run for the position, I thought to myself with a pat on my own back.\n\n Bettina got Turnbull ready, then started \"Sheriff, you are part of the Study Group, are you not?\"\n\n \"Yes, I am.\" said Sheriff Allgood.\n\n \"Can you elaborate on any of the changes the Group will be recommending, and how they will affect the Commander's operations with the Police Force?\"\n\n \"As you know, Bettina,\" Daniel said, \"you've had many opportunities to report upon the tremendous successes of Commander Troy and his Detective Teams in solving some difficult crimes. The TCPD is the best Police Force in the State, and I'm sure the Council would not do anything to diminish nor make more difficult the job that Commander Troy and his Team are doing...\"\n\n Part 4 - Dogs in the Daytime \n\n After Bettina wrapped up her interview with Daniel and me, the Sheriff turned to me and said \"Let's go to your office.\" I would now find out why he was here, and why he actually barged in on the Media interview.\n\n Once in my office, he sat down in a \"hot seat\" chair while I sat behind my desk. He refused my offer of coffee, which did not prevent me from pouring a cup for myself.\n\n \"Thanks for rescuing me from the clutches of Ms. Wurtzburg.\" I said.\n\n \"I'd like to think I've learned a little bit from you.\" Daniel said. \"So when I see you agreeing to be interviewed, I know you're at work steering things your own way.\" I chuckled and Daniel grinned.\n\n \"That's what you get for hanging around Melina. After eight years, you'll be solving all the crimes and I'll be obsolete.\" I said, referring to my former wife of eight years and Daniel's current wife. That got a chuckle from Daniel, and then I said \"So what brings you to my humble office?\"\n\n \"I went by that construction site,\" said Daniel, \"and I'm glad I took your advice to treat it as a hostile situation. Those guys were really belligerent, and the foreman pretended to be shocked when we stood up to them. So I took the time and effort to go through every bit of their paperwork and permits.\"\n\n \"And what did you find?\" I asked.\n\n \"They're pretty much on the up and up.\" Daniel said. \"After I got back to my office, I began checking on who'd hired them and who was behind the construction. KXTC had it right: the State is building a new State Crime Lab, on State property adjoining the University.\"\n\n \"Right here in our backyard.\" I said, understanding. \"So did you find out anything about the construction company?\"\n\n \"Sure did.\" said Daniel. \"They're based in Southport, which means they're Mob-controlled. The company belonged to State Senator Jimmy 'Coffin' Cerone before he sold it when he ran for State Senate. This company has a number of contracts with the State, and I doubt the Open Bidding process was conducted with total honesty and transparency.\"\n\n \"And this guy... Bert Jones, you said he was?\" I asked. \"You know, I've heard that name before.\"\n\n \"He was the Security Coordinator at Crown Chemicals when they had that bad situation with Proactive Citizens of Greenworld.\" said Daniel. That caused me to remember the cold case my mother and Cindy had investigated, which they jokingly would say was part of their 'Phyllis Files'.\n\n Daniel went on. \"After that debacle, he left the County. Lived in Midtown a while, then Southport. I still don't understand his hostility, especially to you when you stopped by this morning.\"\n\n \"I'll just say,\" I said, \"that a cynical, even paranoid mind like mine can see threads running all the way from failed Security at Crown Chemicals to Jimmy 'Coffin' Cerone, if you get my drift.\"\n\n \"Not really.\" Daniel said, who wasn't as informed of the Crown/PCGW case as I was. \"Anyway, I can look further into the building of the Crime Lab, or pass it on to you----\"\n\n *BRING!* *BRING!* *BRING!*\n\n It was my personal cellphone, and it was my wife calling.\n\n \"Hello, Beautiful.\" I said.\n\n \"Hello yourself, Darling.\" she replied. \"Busy?\"\n\n \"I'm just talking to your brother-in-law about that construction.\" I said.\n\n \"That's what I was calling about.\" Laura said. \"Can you take me to lunch? I don't want to talk on the phone.\"\n\n \"Sure.\" I said. \"Can Daniel come along?\"\n\n \"Yes, if he wants to.\" said Laura. I asked Daniel if he'd like to join us for lunch and he said he would.\n\n I should note... that my wife Dr. Laura Fredricson is one of the highest-level officers of the Central Intelligence Agency. And if she doesn't want to discuss something on a cell phone, it has to make you wonder why... and if your own cellphone communications are safe and private. Just sayin', is all....\n\n * * * * * * * * * * * * * * * *\n\n Cindy also accepted my invitation to lunch, so it was her, Daniel, myself and Laura at Laura's favorite Soup & Sandwich restaurant. The restaurant was north of the construction site and the Town on a little man-made lake nestled under the rising hills towards Daniel and Melina's house. It was chilly outside, so we sat inside at a table with a good window view of the lake.\n\n \"I asked Dr. Wellman about the construction this morning.\" Laura said. \"He expressed surprise that I didn't know what it was about, and said he figured that you, Don, knew and had told me. He also had a look on his face that I've come to know that he'd not wanted us to know what it was about.\"\n\n \"And I can understand why.\" I said.\n\n \"Why a State Crime Lab here?\" Cindy asked. \"When we have already have a better one and the University has a fully operational one, as well?\"\n\n \"I'll answer that in a second, but let me tell you this first.\" Laura said. \"Once I got to my office, I started checking into it. Guess what bill authorized the construction of this project?\" We all looked blankly at Laura, so she said \"The SBI Authorization bill from last Winter.\" \n\n At that point all eyes were on me... as the author of the compromise bill that was passed. I said \"There was nothing in the draft I put forth, and I don't remember hearing anything about it when it got to the floor. I'm sure the Governor or Billy Williams would've told me if it was.\" Williams was the County's State Representative.\n\n \"It must've been added later on,\" Laura said, \"but it apparently wasn't as an amendment. It was in the main body of the bill the Governor signed.\"\n\n \"Oh... wait a minute.\" I said as it struck me. \"Well, I'll check on something then tell y'all if I'm right. So the funding is in that bill?\"\n\n \"Yes.\" said Laura. \"There were three locations authorized, with the Governor and SBI to determine which one. One was the property here that it's being built on. Another is Madison County, near the Women's Prison. And the third was next to State Tech.\"\n\n \"That would make far more sense.\" Cindy said. \"State Tech doesn't have a School Crime Lab, and could use one.\"\n\n \"And to answer your questions from a moment ago,\" said Laura, \"Dr. Wellman told me a few things. He said the University's Crime Lab was going to suffer budget cuts. As bad as we know he really was, the late Henry R. Wargrave gave tremendous funding to the University Crime Lab, as part of the University Hospital grants he'd endowed us with. He also made sure that equipment that was being replaced would go to the Town & County Crime and Arson Labs, which gave you guys some great equipment at no taxpayer expense.\"\n\n \"That's true.\" I said. \"And I've heard rumblings that Brownlee wants to start squeezing our Crime Lab's budget. What do you think of coincidences, Captain Ross?\"\n\n \"People in my family think very little of them.\" Cindy replied adroitly.\n\n \"Well, just between us, and don't let this get out,\" said Daniel, \"the Council has asked me about it, too. They know the School and Wargrave were pretty generous to our Crime Lab, and they know you and Dr. Woodrow run it very efficiently. But they are concerned about the cost of upkeep.\"\n\n \"And if I only get one guess who on the Council is asking those questions,\" I said, \"I'll still be right.\"\n\n \"That's nothing.\" said Daniel with a grin. \"You're always right anyway. So let me ask: do you think this is coordinated between Brownlee suggesting to cut the Crime Lab budget and the State wanting to build a Lab here?\"\n\n \"And a certain SBI Director running for Governor on top of it all.\" I replied. \"But I don't understand Governor Jared agreeing to it, and certainly not without telling me... or others who would then tell me. Well... I'm not going to make any judgments until I get some facts----\"\n\n *BRING!* *BRING!* *BRING!*\n\n *BRING!* *BRING!* *BRING!*\n\n Both my and Cindy's Police cellphones were going off at the same time. As we answered, both our eyes widened in surprise in a manner that would make one think we were blood-related...\n\n * * * * * * * * * * * * * * * *\n\n \"North of Town. River Valley district.\" Cindy said as we sped to the scene in my Police SUV, with Laura having agreed to give the Sheriff a ride back to Headquarters.\n\n \"Third Precinct.\" I said. \"Well, this whole thing is about to piss me off.\" I said as I drove with blue lights flashing and siren wailing.\n\n The call from the Duty Desk had informed me that there had been a report of two more dogs being shot dead in their backyards by a police officer.\n\n \"Theo is on the way, and will meet us there.\" Cindy said. \"I've already called Myron. He's securing camera footage from the area. Lt. Masters had the Duty Desk to put out the word to all Precincts and patrols to be on the lookout for an odd looking police car.\"\n\n \"Oh, was one spotted?\" I asked.\n\n \"I don't know.\" said Cindy. \"Lt. Masters and I were being proactive, based upon this morning's shootings.\"\n\n \"That's good thinking.\" I said. We were arriving at the scene, which was in the neighborhood adjacent to the River Valley Country Club. There were three patrol cars present and a blue-gray Police cruiser, belonging to Third Precinct Captain Susan Weston.\n\n \"Hello, Captain Weston.\" I said as we got out of my SUV and she fell in with us as we walked. \"What happened here?\"\n\n \"I'm just getting here myself, sir.\" Weston said.\n\n \"Hello Sergeant Irwin.\" I said as we came up to the officers. There was also a small crowd of citizens from the neighborhood that were being interviewed by Uniformed officers. \"What's going on?\"\n\n \"Good afternoon, Commander, Captains,\" said Sergeant Irwin. \"Two dogs were shot in this neighborhood. One up the street where those officers are, and this house here. The house up there has nobody at home, and the house here has a Mrs. Beverly White inside. Mr. George White, her husband, is at work. His occupation is Regional Manager for Kroger in the Tri-County area.\"\n\n \"What information do you have?\"\n\n \"Only one witness, so far.\" said Sergeant Irwin. \"Older lady, named Mrs. Veasley. She lives across the street and two doors down. She's an invalid, pretty much wheelchair-bound, and she was sitting by the front window, reading a book. She said she saw a TCPD Patrol cruiser drive down the street and around the curve.\"\n\n I looked to where Irwin was pointing, where the road curved to the right... just past the other house where a dog shooting had occurred as he continued: \"She said she saw a police officer in a standard dark blue uniform and hat walk up the road. He stopped at the other house then he came up to this one and peered over the fence. Mrs. Veasley said she did not hear anything like a gunshot, but the officer then walked quickly away back toward his car. She said the car did not return this way. That's possible, as the road loops around.\"",
        "I went to the backyard through the now open gate. Theo Washington was looking around. I saw a pool of blood in the middle of the backyard, with a couple of Crime Lab people taking samples. Another crime lab technician had a metal detector, looking for a bullet that might have lodged into the ground.\n\n The dog, which looked like a King Charles Spaniel, was lying at the steps to the back door, being examined by an Animal Control Officer.\n\n \"Two bullets, sir, in the chest and side.\" said the man. He fell there in the yard and bled, then managed to get up and make it to here.\"\n\n \"Oh geez.\" I said, feeling sadness and anger as I looked upon what had once been someone's family member, and a good looking dog. I thought of my own Bowser, and what Bryan Thatcher had done to him and other dogs. Your Iron Crowbar loves dogs, and I was a very upset Police Commander right now.\n\n \"Theo, have you talked to the owner yet?\"\n\n \"Just said hello.\" Theo said. \"She's pretty upset, so I came out here to look around and wait for you.\n\n \"Okay.\" I said, not really happy with Theo's lack of initiative. \"Let's see what Beverly White has to say.\" I said, leading the way.\n\n \"I'll go talk with Mrs. Veasley.\" said Precinct Captain Weston.\n\n \"No!\" Cindy said, her voice almost a shout, causing both Weston and myself to look over at her. \"Come with us. We'll talk to Mrs. Veasley together after we're finished here.\"\n\n \"I... I thought we might save time...\" started PCpt. Weston, but Cindy interrupted her.\n\n \"You need to be watching and learning from the Iron Crowbar, Ms. Weston.\" Cindy said authoritatively.\n\n \"Captain Weston, come on with us, then we'll go talk to Mrs. Veasley.\" I said, trying to make my voice nice. Susan Weston looked very miffed, but came inside with us, as did Theo.\n\n A woman in her upper 20s was sitting on the sofa with Officer Lydia Green. She had been crying. As I came up, both women looked up at me.\n\n \"Hello.\" I said. \"I'm Commander Troy. I'm very sorry about your dog. Do you know what happened?\"\n\n \"No sir.\" said the woman. \"Charlie was inside and went out through the trapdoor to the garage. I thought he needed to use the bathroom. I needed to go myself and went in there...\" she pointed to a small half-bath.\n\n \"Did you hear anything?\" I asked, \"any noises at all?\"\n\n \"I thought...\" said Mrs. White, \"I thought I heard Charlie yelp, and I heard... well, I thought I heard something like a door closing, like a garage door in the neighborhood hitting the ground when it stops dropping. I didn't think much of it, but when I came out of the bathroom I looked outside in the backyard and saw Charlie...\" She began sobbing. I couldn't blame her; I felt very bad myself.\n\n \"Ma'am,\" I said, \"I am going to find whoever did this, and it will not be a good day for him. Again, I am very sorry about Charlie. Detective Washington will be wrapping up the scene here. Okay, Captains, let's go.\" Cindy and Susan followed me out the front door of the somber house, with Theo staying behind. \n\n Sgt. Irwin came up. \"Sir, the other house is unoccupied. Empty.\" he said. \"Neighbors said there was no dog living in the backyard, but there is a dead dog in that backyard now.\"\n\n \"Keep it in place until I get there.\" I said. \"Captain, let's go talk to Mrs. Veasley, then we'll go down there.\"\n\n \"Yes sir.\" Cindy said. We went to Mrs. Veasley's house, where an elderly lady admitted us.\n\n \"Why, hello Mrs. Williams.\" I said. \"I believe I saw you at the Park a few weeks ago.\"\n\n \"Oh yes, Commander!\" Mrs. Williams gushed, happy I'd remembered. \"And you had your lovely little daughter with you. And I believe Captain Ross was there, also.\"\n\n \"Yes, ma'am.\" said Cindy. \"Is Mrs. Veasley able to see us?\"\n\n \"Oh, of course.\" said Mrs. Williams. \"I was just here helping her with some housecleaning and lunch. Please, come this way.\"\n\n We were escorted into the living room, which had a very large front window. Mrs. Veasley was sitting in her motorized wheelchair in front of it.\n\n I had to be very careful about name usage. Many years before, my sister Elizabeth had had a \"Mrs. Beasley\" doll, which had glasses and short hair drawn down the sides of her head. Mrs. Veasley looked almost exactly like that doll... octagonal glasses and short blondish-gray hair down the sides.\n\n \"Hello, ma'am.\" I said. \"I am Commander Troy, and this is Captain Ross and Captain Weston. Can we talk to you for a moment?\"\n\n \"Of course, Commander.\" said Mrs. Veasley, whose voice carried authority and control despite her physical shortcomings. \"You will be wanting to ask me about that other police officer I saw.\"\n\n \"Yes, ma'am,\" I said, realizing for the first time that a great deal of mental energy was pouring out of this woman... an energy that I had felt in only a few people, a few times before. \"Before I ask about him, what did the police car look like?\"\n\n \"It was grayish-blue, like that car out there behind the SUV.\" Mrs. Veasley said, referring to PCpt. Weston's cruiser. \"It had 'Town & County Police' on the side, like the other vehicles.\"\n\n \"I see.\" I said. \"And the Officer, can you describe him?\"\n\n \"It was a bit distant,\" said Mrs. Veasley, \"and I could tell he was making an effort to hide his face under the bill of his hat, and he kept his face turned, almost unnaturally, from the houses on this side of the road. He was a white man, he had sunglasses on, and from what I could tell, which isn't much, his jawline looked like what I would call... chiseled, if you know what I mean. Angular lines along the jaw and cheekbones.\"\n\n \"I understand.\" I said. \"Was he tall? short? fat? skinny? in between?\"\n\n \"He was tall.\" said Mrs. Veasley. \"Not as tall as you, Commander, but tall, about six feet. He was slender. 'Lanky', we would call him in our day.\"\n\n \"The same as we would call him in our day.\" I replied with a smile. \"Would you be able to recognize him if you saw him again?\"\n\n \"Maybe, but I can't be sure.\" said Mrs. Veasley.\n\n \"Did you happen to see the badge on his uniform?\" I asked.\n\n \"Yes, it was like all of yours.\" the old lady said. \"Maybe not a pure yellow gold as yours, though.\"\n\n \"A bit pinkish, or just dull?\" I asked.\n\n \"Kind of dull.\" she said.\n\n \"What about the rest of his uniform?\" I asked. \"Anything out of place?\"\n\n \"No, Commander, I don't think so.\" said Mrs. Veasley. \"He had a gun belt on, holster on the side, handcuff pouch in back like the other officers have. But I see that most of you, even you, Commander, have a radio on your belt, and he did not have that.\"\n\n \"Ah, interesting.\" I said. \"Did he have a nameplate over his right pocket, like I'm wearing?\"\n\n \"Yes, I think so.\" said Mrs. Veasley. \"But of course I couldn't read such small print from here.\"\n\n \"Of course not.\" I said. \"Any rectangles above the nameplate? Like the red and purple ones Captain Ross and I are wearing?\"\n\n \"No, no sir. I don't believe so.\" she said. \"By the way, what do those rectangles stand for? And why are some of the metal frames around them silver, and some gold?\"\n\n \"Well, ma'am,\" I said, \"the purple ribbons are for the Purple Order, which is awarded to Officers who are wounded or killed in the line of duty. Blue ones are for the Distinguished Service Award, and red ones for the Medal of Valor. The silver frame is for the first award, and the gold frame for multiple awards. Some Officers have more than one Purple Order, but I doubt you'll ever see a gold-framed red ribbon.\"\n\n \"We shall see.\" Mrs. Veasley said, somewhat strongly, her eyes boring into me. She then turned to peer at Cindy. \"You, Child... so you are the daughter of Doctor P. Harvey Eckhart. A wonderful man, he is.\"\n\n Cindy was not the only one stunned by that one. \"Er, yes ma'am, but how did you know that?\" my partner and cousin asked.\n\n \"I keep my eyes and ears open, Child, and I learn things.\" she said. \"And if you use those ears of yours to listen to your father's teachings, you will learn a great many things, also....\"\n\n To be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/going-rogue-ch-01"
}