{
    "title": "Lucy and John",
    "pages": [
        "John and Anita lived next door to Lucy and Mark in a quiet suburban cul-de-sac.\n\nThe four of them had a great relationship and considered each other good friends. John and Mark helped each other if there was something heavy to move, and Anita loved babysitting Lucy and Mark's two children. Most Friday nights, John and Anita would pop over, bottle of wine in hand, and the four would unwind and have weekend drinks. They would discuss everything together - world events, parents, kids, work. After several years, they knew each other very well.\n\nJohn thought that Lucy was hot. She was 10 years his junior, and being a part-time yoga teacher, had a trim physique with petite breasts. Petite breasts were fine for John - he wasn't a man that needed big boobs on a woman. Big, small, he didn't care - but he loved how it made women feel when they were touched and sucked just right. In his experience, the smaller they are, the more sensitive - so if he had to give a preference, smaller breasts came out on top. Most importantly, John thought that Lucy was one of the prettiest women he'd ever met. Occasionally she'd be working in the garden and John would watch Lucy when she didn't know that he was there. It didn't matter if she was wearing her baggiest clothes - she looked fantastic in everything, and her body made him think naughty thoughts. But John was devoted to Anita, so he had definitely relegated his lusty feelings for Lucy into the fantasy realm.\n\nOne day, both Anita and Mark were out at work. John worked from home, and it was Lucy's day off. John walked next door, empty egg carton in hand, to ask Lucy for some eggs for his lunch time omelette. Knowing that he was out of eggs, he'd normally just choose another meal for lunch, but Lucy had asked to \"borrow\" so many pantry items from them in the past, fair's fair he thought.\n\nJohn knocked on the door. No answer, but Lucy's car was in the car port. That wasn't unusual. Lucy & Mark had a fairly large house. She could be anywhere in it and not hear him.\n\nHe cracked open the front door (which no one in the street ever locked during the day) and called out \"Lucy?\".\n\n\"John? Is that you?\" Lucy called back a little hesitantly. From the direction of her voice, John could tell that Lucy must have been in the living room - a little way off to the side and not visible from the entrance hall.\n\n\"Hi! Yeah. I just wanted to ask for a couple of eggs please,\" asked John. He let himself in and took a few steps into the hallway.\n\n\"Oh phew. Yeah, of course! Come grab some, but I have to warn you that I'm naked.\" Lucy let the last bit trail off.\n\n\"Oh damn. Sorry. I'll come back later. Actually, it's OK - I can do without the eggs. Sorry again!\" said John, turning around and aiming to let himself out. But the thought of Lucy naked immediately stirred something in him. He conjured the images of her in the garden - minus the clothes. Lucy's kitchen opened up onto the living room, so retrieving eggs would mean encroaching on her... well... nakedness.\n\nBefore John reached the front door, Lucy called \"It's OK! I'm just doing my yoga, and I like to do it naked sometimes. Come in! It's fine. Really!\".\n\n'Oh my god,' thought John. His lusty feelings for Lucy immediately kicked in. She was actually inviting him to be in the same space as her while she was naked. He wanted to say yes. Actually, YES. But this was his next door neighbour. \"But... what would the neighbourhood think?\" he said as way of a joke to try to dispel his own anxiousness.\n\n\"Oh screw the neighbours! Come in, it's fine!\"\n\nJohn paused, then against better judgement, let his lust win out, but with a compromise. \"OK, thanks, but I promise not to look. Straight to the fridge for me!\". John immediately started the short distance down the hallway to the kitchen area.\n\n\"You can look,\" said Lucy simply.\n\n'Shit,' thought John to himself. 'She's actually given me permission.'\n\nLucy had secretly wanted John to see her naked for a while. It all started on one of their Friday night drinking sessions: Both John & Lucy were lamenting the fact that both of their houses had huge windows that overlook the street. John complained that he liked to be able to walk around the house naked, but couldn't if they'd forgotten to close the blinds (which was most of the time). Lucy had said she felt exactly the same, but occasionally forgot about it anyway, and then realised that she was in full view of anyone on the street who happened to be passing by. Luckily there was very little traffic on the street. John had piped up and said that too many people in the world worry about being naked, and that the human body was beautiful and nothing to be ashamed of. Lucy had agreed completely. They'd never talked about it since, but Lucy remembered the conversation vividly. So did John.\n\nBut John stuck to his promise, and made a bee line to the fridge, eyes focused straight ahead.\n\n\"I SAID ... you can look!\" said Lucy. It was almost a command. \"Remember? 'People worry about being naked too much'?\"\n\n'Shit,' thought John again. 'Did she actually quote me word for word in that conversation we had?' The implications were not lost on John. Lucy had been thinking about being seen naked by others. By him? Had she thought about seeing him naked? Surely not - although not overweight - he wasn't exactly Fabio. And he was 10 years older than her.\n\nJohn realised he had been defeated by his own argument. A body is a body after all. He felt his cock growing as he thought about his next action.\n\nHe turned and faced Lucy.\n\nShe was holding a yoga pose. He had no idea which one - he knew nothing about yoga. He didn't care. He could see her cleanly shaven pussy, her perky breasts with erect nipples, her beautiful muscle tone, her cleanly shaven pussy (longer look this time). She was exquisite. Far more, in truth, than he'd ever fantasised about. His erection grew bigger and made a noticeable bulge in his pants. Lucy saw the direction of his gaze and smiled.\n\n\"I'm ... sorry!\" John stammered, when he realised that Lucy saw that he'd taken her permission a little too far.\n\nThen Lucy's gaze lowered and she fixed it on his ever growing bulge. She smiled appreciatively.\n\nJohn tried to act normally. \"Do you do this a lot?\" 'Stupid question,' he thought. 'Why did I ask that?' A pang of guilt hit him as he thought how Anita would feel about him looking at Lucy that way.\n\n\"Only sometimes when I'm alone,\" said Lucy. She paused. \"You wanna try it?\"\n\n\"Me?\" John laughed. \"You don't want to see me naked.\"\n\n\"Why not? Come on, it's really freeing.\" Lucy saw John's reluctance. \"I promise not to judge.\" She came out of her position and sat cross-legged on the floor facing John. It caused the lips of her pussy to separate a little, which drove John wild. He imagined the taste of her, of feeling the slipperiness of her wet cunt against his cock, of fucking her hard until they both came.\n\nJohn was simultaneously embarrassed and excited. Seriously excited. His erection maxed out, even causing a bit of pain as his cock pushed hard against his jeans. \"We can't! I mean, what would Anita and Mark have to say about this?\"\n\n\"They'll never know. I promise not to tell if you don't?\". \n\nJohn was torn. Guilt mixed with lust. In the end, the hormone surge won out. \"Alright, what the hell?\". To stop himself from changing his mind, he undressed so fast that he practically ripped his clothes off. Removing the pants over his huge erection took a bit of doing. Lucy grinned mischievously when she saw his hard cock, but said nothing. Lucy felt a little guilt too. Mark would definitely NOT understand the situation unfolding here, and she had to admit to herself that she was getting pretty aroused by the sight of John's stiff cock. But she loved Mark dearly, and wasn't thinking of actually doing anything with John. She knew that she was betraying him, if only a little bit, and only mentally.\n\nJohn walked towards where she was sitting in the living room and started to sit down a respectable distance from Lucy.\n\n\"Looking is fine, but no touching. Agreed?\" said Lucy. And she meant it. It's not that she was wasn't attracted to John, but she had always been faithful to Mark.\n\n\"Of course!\" exclaimed John defensively. And he meant it too. He was still feeling occasional waves of guilt for even doing this.\n\n\"Right, do what I do.\"\n\nFor about a quarter of an hour, Lucy led John through different yoga positions. He was pretty bad at some of them, but gave them his best shot. All the time, he kept his gaze fixed on Lucy. Often her face, and looking into her beautiful eyes, but inevitably he would get distracted by the sheer sex emanating from Lucy's pussy, and he couldn't help his gaze shift there. Lucy was loving John's unabashed attention, and likewise mostly watched his rock hard cock, which hadn't shown any sign of going down the entire time. She was wet. She knew it. John knew it too - he could see her wetness in some positions where he was looking directly into her cunt. They were both feeling guilt again, but the hormone rush was obliterating all but the remnants of it.\n\nThe space they were in was not huge, and in some positions, her cunt was close enough that he got a nose full of her enticing aromas. That drove him even more wild. He fantasised about plunging his tongue directly into her crack and licking up every last drop of her juices.\n\nIt was in one of those moments that Lucy, gaze still fixed on his cock, gave a wicked smile. John, puzzled, looked down at his cock, and saw a large amount of pre-cum on the tip. So much that it was about to drip onto the carpet.\n\n\"Oops,\" he said, and deftly captured it all with his index finger. Without thinking, he put his finger straight into his mouth, and sucked it clean. Knowing that there would be more to arrive soon, he then squeezed his cock from the base to the tip, and ate the remaining pre-cum.\n\nLucy had a quizzical look on her face.\n\n\"I love the taste of my pre-cum,\" John explained. He didn't think there was anything wrong with that. It was sweet and slightly salty. Except for people's own mental issues with it, he'd be surprised if anyone didn't like it.\n\nLucy's loins felt like they were about to explode with heat. \"And... have you ever tried your cum?\" she ventured.\n\nJohn paused, but only for a short while. Spending so much time naked in front of each other, he was starting to feel that he had nothing to hide - physically or mentally - from Lucy. Far more so than in his relationship with Anita.\n\n\"A few times when I've masturbated, and there was this one time when I was a teenager. My girlfriend at the time was going down on me, and before I came, I asked her to save me some. I meant for her to swallow most of it, which she loved to do. Instead, when I was finished cumming, she laid me on my back and gave me a huge passionate kiss. All of my cum came flooding into my mouth and straight down my throat. That was pretty sexy, but I haven't done it since.\"\n\n\"Did you like it?\" asked Lucy. The thought of John eating his own cum was a huge turn on for her - not that she really needed any more turning on at the moment.\n\n\"Yes. Very different to pre-cum, but good. I kind of feel a bit dirty doing it - but good dirty, if you know what I mean.\"\n\n\"I didn't have you pegged for being kinky, John!\". John wasn't sure if that was good or bad in Lucy's books. She saw his worried look. \"Oh, don't worry, I like a bit of kinkiness, too!\"\n\n\"How about you? Do you like the taste of cum?\" he asked.\n\n\"I do. It's kinda different for different guys. Maybe it's their diet? I dunno, but I always love it.\"\n\n\"And do you like the taste of yourself?\" asked John, feeling bolder and not wanting the momentum of their conversation to subside.\n\n\"Yes!\" said Lucy. With that, she quickly inserted two of her fingers into her soaking cunt, withdrew them and sucked on them immediately.\n\nJohn let out an audible grunt. Lucy was suitably impressed that her performance had the desired effect. She smiled coyly, and John thought, maybe seductively?\n\nClearly the intimacy of their conversation had escalated quickly.\n\n\"So... any other kinky thoughts or practices you'd care to share?\" Lucy asked, with a devilish grin.\n\n\"Well...,\" John started, then paused. Of course there was more he COULD say. And their sudden no-holds-barred intimacy made him confident. But he wasn't sure that he could share this with Lucy.\n\n\"Remember, I told you I wouldn't judge,\" coaxed Lucy.\n\n\"That was about me getting naked.\"\n\n\"I would never judge your body OR your mind. I promise I'll never tell anyone anything we've discussed.\"\n\nJohn summoned the courage to tell Lucy what he'd never told anyone. \"I sometimes drink my own pee, and would love a little pee play,\" he confessed. He immediately regretted saying it.\n\nLucy paused, but not for the reason that John thought. \"Hmmm. I've often wanted to do it myself. And I've even started but chickened out at the last moment.\"\n\nJohn couldn't believe it. Not only was Lucy OK with it, but she felt at least partially the same. It only made him hornier, and he reached down and ate some more of his pre-cum to stop it spilling on the carpet. That drove Lucy wild, and she did likewise by inserting her fingers in her cunt again - this time moving them around inside a little longer. She then sucked her fingers with relish. John heard the squelch when her fingers entered, and knew that she was dripping wet. Her pungent smell was clouding all rational thought for him.\n\n\"Do you like the taste? Of your pee?\" she asked.\n\nJohn nodded. \"But you need to drink lots of water so that it's not really strong-tasting\".\n\nAfter a short moment, Lucy asked: \"Will you teach me how much? Make me not chicken out?\" The thrill of what she'd just asked heated both of their groins yet again.\n\n\"You want me to force you to drink your own pee?\" asked John incredulously.\n\n\"Not force. I want to! I've started so many times. I just need some guidance and encouragement! Do it with me? You drink your pee, and I'll drink mine? It's still not touching each other, right?\"\n\nThe thought aroused both of them further. John thought for a few seconds.\n\n\"OK,\" he said finally. \"When?\"\n\n\"Now!\" she cried. If they let this moment go, she knew she'd think too much about it and never let the situation happen again. It was now or never.\n\nJohn threw caution to the wind. His guilt now gone completely - replaced by pure carnal thoughts.\n\n\"OK,\" he said, and Lucy beamed a huge smile. \"God you have a beautiful smile, Lucy.\" She rewarded him with an even bigger one.\n\n\"It's your first time, so we have to make sure it doesn't turn you off doing it again. We're going to drink lots of water. Pee that into the toilet but don't drink it. Then drink lots more water, and enjoy the second lot,\" he instructed.\n\n\"How much?\" asked Lucy.\n\n\"We'll keep drinking water until we're busting. At least three glasses,\" said John. They had now switched roles - John the instructor, Lucy his very willing student.\n\nThey set to it, drinking a big glass and letting it settle, then more. The yoga was completely forgotten. In between they sat on the floor facing each other's naked bodies, sharing their own sex encounters in vivid detail. They got hornier and hornier. They both instinctively avoided talking about their current relationships with Anita or Mark - lest they feel a resurgence of guilt. By this stage, sitting naked with each other, openly staring at each other's sex, began to feel completely normal for them. It must have been a good hour now since John first arrived. He glanced at the clock on the wall to make sure that there was no danger of their partners coming home soon. Plenty of time, he thought.\n\nEventually, Lucy declared \"OK, I'm busting now!\". She got up and walked, fairly quickly, down to the bathroom. He watched her perfect ass wiggle down the hallway. She didn't bother closing the door. They had nothing to hide from each other now.\n\nJohn could hear Lucy pissing into the toilet. It started quickly. She must have been busting to go, he thought. He was also feeling an urgency to pee - they had drank glass-for-glass. After a few seconds, Lucy called out with some urgency \"John, come here!\".\n\nThe way she said it, it sounded like something was wrong, so he bolted up and ran to the bathroom to see a heavy stream of piss coming from Lucy's beautiful pussy and into the toilet. He wanted to fuck her right then and there. He wanted her piss all over his body, and in his mouth. He wanted to do everything with her. But he composed himself. \"What's up?\"\n\n\"Is that the right colour?\" she asked. \"Have we drunk enough?\"\n\n\"Yeah - it's good! Almost clear. You still want to go through with this?\"\n\n\"More than ever!\" breathed Lucy. A surge of electricity went through her cunt as she made the commitment out-loud. With that, she'd finished. The torrent of pee had subsided, and she openly wiped her pussy with toilet paper in front of John.\n\n\"OK, move off. I've gotta pee too,\" he said. The sound of the peeing had given his bladder a mind of its own.\n\nShe jumped out the way, and he aimed his penis over the bowl. It was still too hard to let any out, but he knew from experience that thinking about peeing would soften him enough.\n\n\"Can I watch you?\" asked Lucy. The desire in her eyes was obvious.\n\n\"Of course! I just watched you didn't I?\"\n\n\"Did you enjoy it?\" she ventured.\n\n\"Oh my god, did I? I'm sorry, but I'm so bloody horny right now!\". The memory of watching her counteracted all of his concentration to soften his erection. It stood bolt upright again. \"Let me get this under control...,\" he said.\n\n\"OK, I'll be quiet and just watch.\"\n\nAfter a few seconds, his cock went down enough to allow a trickle. Then a gush of pee came pouring out of him. After he finished, he tapped a few times and, with a sneaky grin, used his finger to wipe a dot of pee from the tip of his cock. He put it in his mouth and sucked. He couldn't really taste it, there was so little of it. But it had the desired effect, judging by the look on Lucy's face. He could see the desire in her eyes. He couldn't believe the turn of events today that led to this. He was in bliss, but he knew it was going to get better.\n\nLucy was understanding the intimacy of John's desires. Especially the part where he mentioned \"pee play\" briefly. Although she'd only ever fantasised about drinking her own pee, she could now see that the whole experience was evoking strong feelings in her. She wondered what it would feel like to put her hand under John's stream of piss, maybe even taste his pee. The wetness started in her cunt again.\n\n\"Act 2?\" asked John.\n\n\"Yes, please!\"\n\nThey walked quickly back to the living room, and repeated their water drinking and sex story telling. After more glasses of water, Lucy almost whispered to John \"OK. I think I'm ready.\"\n\n\"OK, let's take our glasses to the bathroom in case some spills,\" said John. He was also feeling that his bladder was about to overflow. \"...and ... the rule is that we must empty our bladders completely and drink all of it. Right? No chickening out,\" he said.\n\nLucy loved that he had basically commanded her. \"OK. I promise\"\n\nThey wasted no time. Once in the bathroom, Lucy placed her glass on the tiled floor and squatted over it. John held his glass under his cock, and willed his erection to subside enough. Lucy was struggling for her stream to start, suffering the same problem as John. Eventually she started first. The first trickle was timid and slid down her pussy and then her inner thigh. John noticed and thought how delectable it looked. She ignored the dribble and a second later had a strong stream filling her glass. John started too and he quickly flooded the glass with the only slightly yellow urine. Lucy's was the same colour. Good, he thought. This is Lucy's best shot at a first time. Even then, he was worried. He remembered his first time, and was slightly put off by the foreign taste. But he'd grown to love it since. What if Lucy hated it? But he resigned himself that it was out of his hands.",
        "\"No wasting!\" John commanded. Lucy grinned. They both used their pelvic floor muscles to stop the flow as the pee reached the top of the glass. Lucy thought she could easily fill another glass, and John, from experience, knew that he could.\n\nLucy stood up, and said \"Well...Bottom's up?\"\n\n\"Cheers,\" laughed John. He paused to watch her first attempt.\n\nLucy gingerly smelt her pee first and gave a little approving nod. \"Not too bad!\" She placed the glass to her lips and took a little sip. \"Oh! It's not bad at all. Nice, really!\" she exclaimed, quite surprising herself. John gave a huge grin. Then she said, \"Are you going to drink yours?\"\n\nAs an answer, John put his glass to his lips and downed the entire contents in a few seconds.\n\nLucy's jaw dropped. Not to be outdone, she did the same. Now it was John's turn to be surprised. The fact that they had done this together felt so intimate to him. Almost like watching each other masturbate, but somehow even more intimate, because it was more in the \"fetish\" category. He felt his erection returning, but quickly concentrated to bring it down.\n\n\"How was it?\" he asked.\n\n\"So much better than I could imagine!\" she said, showing absolute relief. \"I loved it, actually\". She said this somewhat more sensually. Apart from fulfilling one of her own fantasies, she also felt much closer to John.\n\nThey weren't finished yet. \"Next glass!\" he commanded.\n\n\"Yes, sir!\" Lucy half-shouted, making the sign of a mock salute. John giggled. It was nice to have some comedy to break up the sexual tension between them.\n\nDutifully, Lucy resumed her squat position, and John returned his glass under his penis. Again Lucy's first part of the flow dribbled down her pussy and inner thigh. Again she ignored it. Again, it drove John wild. They both quickly completely filled their glasses and stopped the flow. John could tell that he had a bit left in his bladder, but not a whole glass. Lucy used the rim of the glass to rub against her pussy to catch some of the drops - inevitably collecting some of the wetness exuding from her puffy cunt. John opened his eyes wide at her actions. She smiled.\n\n\"Ready?\" he said, and placed the glass to his lips.\n\n\"Wait!\" Lucy cried. John gave her a puzzled look. Surely she can't be chickening out now after saying that she loved the first glass? Lucy let all abandon go. \"Let's swap!\" she offered. \"It's not touching is it? Just... sharing\". Lucy couldn't believe that she was letting herself lose control like this.\n\nJohn had always dreamed of drinking piss from a woman, and here it was about to come true. \"OK...,\" John began, but he was cut short by Lucy thrusting her glass directly at him. He instinctively held out a hand to receive the proffered glass. She used such force that some of it splashed out and onto John's waiting hand. He looked her directly in the eyes, and without removing his gaze, leant forward and licked her piss from his hand. Lucy felt a shiver enter her cunt. John pushed the glass containing his pee towards her - not so hard that it spilled. She gladly accepted it.\n\nWordlessly they raised their glasses to each other, and both took a sip. Normally John would drink his own pee quickly, but he wanted to savour her taste. \"Mmm,\" he said.\n\n\"You like it?\" she asked.\n\n\"It's amazing. Different to mine ... maybe because it has some of your pussy juices in it!\". The thought that he was tasting a little of her cunt sent them both wild. His erection returned in full force. Then he downed the glass. \"What about you? How's mine?\"\n\n\"I love it too,\" she declared, and downed the glass, smacking her lips. John was in heaven.\n\n\"Last glass?\" he asked.\n\n\"You betya\".\n\nAnd they both got to emptying the rest of their bladders. John was right - a bit under a half glass. Lucy had about the same.\n\n\"Swap again?\" she asked. \"No, wait! Let's mix them and share the last glass\".\n\nWithout thinking, John willingly agreed and poured his pee into her glass. Almost another full glass for them to share. But now it occurred to John that they had crossed that line. To any sane person watching them, that line had already been crossed a long time ago. But he was trying to justify his actions with the \"no touch\" get-out-of-jail-free clause.\n\nThis time, though, their pee WAS touching. It had mixed completely and was fused as one - a metaphor for their bodies intertwined in an act of pure passion. And that was something he'd fantasised about before this day, and perhaps a thousand times in the last two hours.\n\n\"Do you think we should?\" he asked, and Lucy detected the reservations in his tone.\n\n\"Of course - it's the same as we just did, right?\" she explained. Lucy didn't have the same reservations as John.\n\n\"Kind of, more... I dunno,\" said John. But he reasoned, the mixing act was already done. Too late. More justifications, he told himself. To signal his resolution, he grabbed the glass from Lucy, and drank half of it, somewhat slower than before, watching Lucy's appreciative expression. He handed it back to her. She greedily finished the contents.\n\n\"My god, that was divine,\" she said and started reaching for the toilet paper to mop up the remnants of the pee on her pussy and legs.\n\n\"Wait!\". It was John's turn. For him, the last act had broken his resolve. He didn't care about the agreement anymore. \"Can I clean you up?\" he asked bravely.\n\nLucy shivered again as electricity passed through her still very wet cunt. For her, this was the crossing of the line. But with what they had shared already, and her again rising levels of lust, she made a decision quickly.\n\n\"What the hell. Clean me up, and I'll clean you up too!\" she said. Thoughts of Mark entered her mind, but she quickly pushed them aside. The thought of a tongue on her cunt sent her wild. Hours of rising sexual tension and delectable sharing of their thoughts, desires, and pee - and without a single orgasm - had made her super frustrated for release. She knew if he \"cleaned her up,\" she'd cum in seconds. John was pretty sure that's what would happen too.\n\n\"But not here,\" she said. She took John tenderly by the hand - their first touch since he'd arrived - to the living room. \"Lay down on your back,\" she instructed.\n\nJohn quickly complied. 'Was this really happening?' he thought. There was no time to think on it any further. Lucy stepped so that a foot was on either side of his head, facing his already hard cock. She squatted and pushed her cunt hard into his face, while leaning forward and taking his dick in her mouth. She sucked greedily on his cock, the slight tang of remnant piss, but quickly replaced with pre-cum. She massaged his balls and he moaned loudly from under her cunt. His tongue was all over her. And in her, entering as far as he could go to retrieve her juices. She was so unbelievably wet. Because she had sat on his face with such force, his entire face was covered in her juices. A small amount likely pee, but he was pretty sure that most of it was her desire.\n\nHe flicked his tongue against her clit a few times. That did it for her. She bucked and quivered as an almighty orgasm rocked her body. \"Aaaarrggh!\" she screamed. She ground her cunt into his face - almost to the point of bringing pain for him. But he would not stop it for the world. His tongue continued to lick her furiously and more juices emerged from her cunt. Pushing his tongue inside her he could feel her contractions around his tongue.\n\nHe quickly pushed her gently to motion for her to stop sucking him. He didn't want to cum yet. She understood and sat directly upright, letting go of his cock, and continuing her long orgasm. Her rocking motion back and forth occasionally brought his tongue to her anus. He didn't hold back and happily licked it, noticing the metallic taste. She obviously loved that too, because she positioned her ass directly over him. He complied with her unspoken words and slipped his tongue into her anus as far as it could go. She moaned and moved her ass in a small circular motion as he probed it with his tongue. Her orgasm had subsided now. He continued to lick her. Her supply of juices seemed endless.\n\n\"Fuck me,\" he said simply from under her. It WAS a command.\n\nLucy wanted his cock in her so badly. But as often happened after she came, she had to pee.\n\n\"With all the pee we drank, I have to pee again. Then we fuck, OK?\" she said. She started lifting her weight off his face, but he pulled her down.\n\n\"Do it here,\" he demanded.\n\n\"I can't! How am I going to explain pee all over the carpet?\" she asked.\n\n\"Don't worry. I've got this. Into my mouth. Now.\"\n\nShe loved that he was controlling her.\n\n\"You can't spill a drop, OK?\"\n\n\"Give it to me!\" he insisted.\n\nWith that, she positioned her urethra over his mouth. John surrounded the area with his lips to make a tight seal. She let her bladder empty with full force. She loved the feeling of peeing directly into his mouth. More unexpected intimacy, she thought. John dutifully gulped and swallowed her piss as fast as she could deliver it. His throat was working overtime, and his stomach filling with her delectable piss mixed with her wetness.\n\nWhen she was done, she rotated and without warning, skewered her cunt with his super hard cock. She rocked back and forwards, grinding hard, and he could feel her cervix with the tip of his cock. He knew he couldn't last long, but that was OK - Lucy was ready again too.\n\nJohn let out a low guttural noise. Lucy felt his cock stiffen more and it pushed even harder against her cervix. She felt the familiar tingle start in her feet and travel up to her groin before she came again. He cunt clamped down on his cock as he pumped his cum deep into her pussy.\n\nThey looked into each other's eyes - while both their bodies shook uncontrollably. Oh God, I want to do this again and again, thought John. He knew he was in trouble. It felt so good that he'd filled Lucy with cum, and not just physically. Their long session of sharing and sex had brought them together emotionally, too.\n\nTheir orgasm subsided. Lucy continued to rock gently back and forth. She loved the feel of his slick cum inside her surrounding his cock. She could do this all day.\n\n\"You're still hard,\" she whispered.\n\n\"Mmm, hmm!\" John declared. \"It happens to me if I have an erection for a long time before cumming. Use me. Make yourself cum again. As many times as you want.\"\n\nLucy didn't have to be told twice. She knew she definitely could cum again. She sped up her rhythm, and pushed harder down onto his cock. She leaned forward and gave him a deep kiss as she rode his cock hungrily. She started to stiffen and released their lip lock to sit straight up above him as her orgasm mounted. John reached up and caressed her hard nipples. He flicked them lightly and saw the change in her expression.\n\nShe erupted into another orgasm. Her violent grinding actions of her cunt against his pelvis caused loud squelching sounds as her juices and his cum surrounded the area.\n\nWhen she was spent, she leaned down and they again kissed. Tenderly this time. She tasted so good to John.\n\n\"Clean me up again,\" she breathed.\n\nIt had been a while since John had cum now, and her continued riding had made the ebb in his libido disappear. He was super horny again. He nodded.\n\nShe lifted up and extracted his still hard cock from her cunt. Both of their juices dripped down freely onto his stomach. She rotated quickly again and lowered her cum-filled pussy close to his face. This time she didn't press down. She wanted him to see her well used cunt and to get all of the mess in his mouth.\n\nJohn paused momentarily, and then eagerly started licking the sticky evidence of their fucking. Lucy first licked up the cum that had landed on his stomach, and then hungrily swallowed his cock into her mouth.\n\nAfter cleaning up the outside of her pussy, he pushed his tongue deep inside her. He could taste the familiar taste of his own cum, but mixed with Lucy's juices. It was a taste to die for. He eagerly went back for more.\n\nLucy felt his abandon and it made her excited all over again. She dutifully cleaned his entire cock so that there was no cum left on it. Or in it. She made sure by sucking it hard in case a small amount was left inside. The luscious feel of his tongue on her clit and in her cunt were bringing her to climax again. And John too felt a surge in his loins. He normally couldn't cum again so soon, but the long foreplay session had done its magic. His tongue played gently at first and then more aggressively, exploring her anus as well. And then he felt the surge. Lucy felt his cock stiffen and start contracting, and the thought brought her to another sweeping orgasm. The taste of his pre-cum changed to cum as his cock started pumping its load into her mouth. Only a small amount, but she loved the salty flavour and savoured it, then swallowed it so that it could be part of her.\n\nExhausted, she collapsed and lay down next to him, snuggling her head into his chest.\n\nJohn gave Lucy some gentle kisses on top of her head as she gently stroked his now-flaccid cock. Words were unnecessary.\n\nAfter some time, John said \"I'm sorry to say it, but we need to think about our partners coming home soon.\"\n\n\"I know. I just...,\" she said.\n\n\"Interested in exploring more some other time?\"\n\n\"YES!\" she cried, and gave him a long kiss.\n\n \n"
    ],
    "authorname": "riderofdragons",
    "tags": [
        "creampie eating",
        "fucking",
        "neighbour",
        "piss drinking"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lucy-and-john"
}