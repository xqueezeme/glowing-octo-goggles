{
    "title": "You Never Know Who Reads Your Stories Pt. 03",
    "pages": [
        "This part again follows straight on from part 2, so you might need to read that before starting this part of the story.\n\n*****\n\nWhile finishing work one evening a message from Emily came through on my phone.\n\n'Matt please ring me as soon as you get home. I NEED to speak to you.'\n\nThe message seemed a bit serious. I rang her and finally reached her.\n\nEmily came onto the line and she sounded upset. \"Are you ok Em?\" I asked.\n\n\"Matt I have to fly out on Monday. They have brought forward some of the promotional activities for 'Warrior Within' and I have to go to LA on Monday for a photo shoot and articles for a few magazines, then to New York for more work before going back to London to start filming my next movie... I won't get to say goodbye to you...\" Emily said, sounding like she was tearing up.\n\n\"Oh Em that is terrible news. I was really looking forward to coming down to see you... I don't want you to go.\"\n\n\"I don't want to go either, but I have to.\"\n\n\"I know you have to, but I still don't want you to go.\"\n\n\"What are we going to do?\"\n\n************\n\nEmily and I consoled each other over the phone, lamenting the fact that she had to fly out to LA on Monday and we wouldn't get a chance to spend more time together, or even say goodbye properly. I then had an idea. I went to my computer and asked Emily \"What time does your flight leave?\"\n\n\"It leaves at 12:15pm Matty. Why?\"\n\n\"So you have to get there 3 hours before, so you will be at the airport from about 9 o'clock right?\"\n\n\"Yes Matt. What are you doing?\"\n\n\"I'm booking a flight down to see you at the airport before you leave... Right all done. I arrive in Melbourne at 8 am and I can get the shuttle across to the International Terminal to see you before you go.\"\n\n\"Really Matt. You did that just to see me?\"\n\n\"Of course. I couldn't let you leave without saying goodbye.\"\n\n\"I can't wait to see you.\"\n\n\"I can't wait to see you either.\"\n\n***********\n\nThe next day at work I spoke to my boss and told her how Emily was leaving earlier than initially planned, and that I wanted to go have the day off to say goodbye. My boss was initially unhappy that I wanted the day off, but when I told her why she agreed that I could do it.\n\nMy brother in law David also called in to see me at work and dropped off the present I had asked Jenny to make for Emily. He wished me luck for my trip to Melbourne.\n\nI was so nervous heading to Melbourne and so sad. I didn't want to say goodbye to Emily. I had fallen for her and was pretty sure she felt the same way. In my backpack I had her present wrapped up and a card to give her.\n\nMy flight was a little late and once at Melbourne Airport I made my way over to the International terminal, messaging Emily to let her know that I had arrived. Once at the International Terminal I waited near the Qantas check in. Only 5 minutes later I saw Emily come in through the doors. She had her sunglasses on, jeans and a long coat. I could see her looking around the area. When she saw me her face absolutely beamed, and she started to walk quicker, almost running to meet me. She almost leapt into my arms as we hugged and kissed. \n\nEmily held me really tight as she sniffled in my ear. \"Oh Matt I've missed you.\"\n\n\"I've missed you too Em.\" I whispered back.\n\nWe were then interrupted by Emily's sister who had come up to join us. Emily and I disentangled from each other and she then introduced me properly to Sophie.\n\nSophie and I began to chat as Emily went and checked into her flight. I had spoken to Sophie previously on the phone so it wasn't awkward between us. \n\nWe talked about a few things before she said how good it was that I had come down to see Emily off and how much she was going to miss Emily. I agreed saying I was going to miss Emily too. Sophie then started to sound serious.\n\n\"Matt, I don't think you are, but I really hope you are not just leading Emily on. She likes you very much and I DON'T want to see her hurt again.\"\n\n\"Sophie, I definitely do not want to hurt Emily. She is amazing and I really like her a lot too.\"\n\n\"Good. It has taken her a long time to get over Derek.\" Sophie paused and continued \"I haven't seen Emily this happy in years. I just want her to be happy.\"\n\n\"She makes me so happy too. I can't imagine being without her now to tell you the truth.\"\n\n\"Please look after Emily. Or else you will have me to answer to.\" Sophie replied with a little smirk, but she was serious about looking after her sister.\n\n\"I definitely will.\" I said\n\nEmily then walked back to us. She had arranged for all of us to go into the Qantas Club lounge before she had to go through to her flight. Sophie declined though, saying that we should spend a little time together. She and Emily had a big hug, saying their goodbyes. They had done this many times over the years, but it still wasn't easy.\n\nSophie then gave me a hug. \"Look after Emily.\" She said.\n\nSophie then left and Emily and I were guided by someone from Qantas into the lounge. Emily seemed to attract a bit of attention as we walked through to a more secluded area of the club. We sat down and cuddled together.\n\nWe held hands as we talked and snuggled together. Emily was telling me how her production company loved my story and definitely wanted to make it into a movie. They just needed a screenplay written. She suggested that I should do it and that I'd be a great writer. I sort of scoffed at the idea, but Emily was insistent that I should give it a go. I told her I would think about.\n\nOur conversation was a little awkward, as we both didn't want to acknowledge that we had to say goodbye shortly. The looks we exchanged were full of longing and some sadness. Emily told me that I could come over to London and see her whenever I wanted. I told her I would arrange something as soon as I could.\n\nTime flew as we were there together. A member of the Qantas team came over and interrupted us, saying it was time for 'Miss Windsor' to go through to her flight. \n\nI remembered that I had a present for her. I reached into my bag and retrieved the small present and card. \n\n\"Em, I just wanted to give you a little present... Just a little something to remember me by.\"\n\n\"Ohhh thank you Matt... You didn't have to get me anything. I won't EVER forget you.\" She replied.\n\n\"Don't open it now. Do it later... Maybe when you are on the plane?\"\n\nEmily slipped the present into her handbag. Standing there facing Emily, even though the lounge was busy with people, it felt like we were the only people on the planet.\n\nThe look on Emily's face was so sad. I didn't know what else to say. I put my hand up and moved some hair away from her face, before leaning across and kissing her. The kiss started quietly before turning passionate very quickly. \n\nWe moved apart and I said \"I'm going to miss you so much Emily.\"\n\nEmily had tears in her eyes. \"I'm going to miss you too Matt.\" She said before wrapping her arms around me and holding me really tight. The tears in her eyes started to become bigger.\n\nWe were still holding each other but time was ticking away. It was time for her to get to her plane. I kissed Emily and slowly slid my hands down her arms until we were just holding hands.\n\n\"Bye 'my Emily'... I'll miss you.\" I said.\n\n\"Goodbye 'my Matt'. I lo ... I'll miss you too.\" A very teary Emily replied.\n\nWe kissed again before slowly moving apart. We kept one hand together even when moving in our different directions, slowly pulling apart until the tips of our fingers finally lost contact.\n\nI got to the escalator to head out and I looked across the lounge. Emily had just gotten to the doorway through to Customs. She turned and looked across towards me. I blew her a kiss and she smiled through her tear stained eyes and blew me a kiss too, before heading through.\n\n**************\n\nI got onto the shuttle back to the Domestic terminal. I was feeling absolutely heartbroken. I had never felt this bad ever. Other breakups had been bad, but this one hurt so much more. I had never left anyone because I loved them and they loved me (or I think she loved me.)\n\nI put my earphones on to isolate myself from the outside world. I hit shuffle and music started. It was Chris Isaak crooning 'Wicked Game'. Damn you Chris Isaak. \n\n'I'd never dreamed that I'd meet somebody like you, \n\nAnd I'd never dreamed that I'd lose somebody like you'\n\nListening to this song my heart completely broke and the tears I had been struggling to hold back started to flow. \n\nI eventually checked in for my flight back to Sydney and went through to the gate feeling absolutely empty inside. Out through the windows in the terminal I looked across to the International terminal and I could see Emily's plane sitting at the gate. I felt really sad that she was going, and to make it worse, I didn't get to tell her that I was in love with her. \n\nIt was then that I thought about the gift I had given to Emily. The gift was a bracelet that Jenny had made. It was gold and it had three charms on it. The first was a star, just like Em's tattoo. The second was a heart, and the final one was a kangaroo, styled like my tattoo. I really hoped she liked it.\n\nMy thoughts turned to what I wrote on the card.\n\n'My Dearest Emily,\n\nI hope you like this little present. I wanted to give you something that would hopefully remind you of me. I don't want you to forget me, because I will never, ever forget you.\n\nI can't believe how far we have come together over such a short time. Thinking back now about travelling to Melbourne for that first meeting with 'Isabelle', I never expected to be here now feeling like I do. \n\nI have fallen for you Emily.\n\nYou are such a beautiful, gorgeous person. Your gorgeous smile, particularly when it is directed at me, stunning hair, amazingly sexy body. And your eyes, Ooh your eyes Emily. Do you know how many times I have gotten lost just looking into your eyes? I think they are completely mesmerising.\n\nNot only are you physically gorgeous, you are an amazingly beautiful person. You are fun, funny, so intelligent, caring, sweet, kind, so honest and open, and you listen to other people. Most of all you make me feel so good all of the times we have been together, whether in hotels, my house or just out walking together. I have never felt happier than when I have had you on my arm.\n\nEmily, when we say goodbye at the airport I will probably muck it up and will be feeling so sad to tell you what I truly feel, so I will write it down now.\n\nI love you Emily. I love you so much.\n\nI hope I have told you this in person, but it hurts so much just thinking about saying goodbye, let alone telling you that I love you.\n\nI promise I will call you as soon as you get to LA to tell you how I feel in person.\n\nMy love always.\n\nYour Matt xxxx'\n\nI was sitting there daydreaming about Emily, feeling sad. Looking out through the window I could see her plane was being taxied out when my phoned 'binged' with a message.\n\nOn my phone I could see a picture of Emily wearing the bracelet, looking a little teary but smiling at the same time. The message below said 'I love the bracelet Matt. Thank You'\n\nThen a second message came through 'I love you my Matt. Very much.'\n\nI replied 'I love you too.'\n\nEm sent back. 'Have to go now. Will ring you when I get to LA tomorrow. I Love you Matt.'\n\n'Can't wait to hear your voice. I Love you Em' I sent back, feeling happier that Emily loves me, but still down as she was leaving.\n\nMy flight home was difficult as I was struggling to keep my emotions in check. The girl I was so in love with had left and my heart was broken. Once back in Sydney I headed straight to my sister's shop. As I entered the store, David was with a customer. He took one look at me and seeing the look on my face he just signalled me through to the back of the shop where Jenny was working.\n\nJenny saw me come in and she stood up. The tears I had been struggling to hold back now flowed as she took me in her arms. I cried like a child, unable to get the words out as to how much I missed Emily. \n\nAfter a little while I calmed down and Jenny sat me down and got me some water. I began telling her all about what happened at the airport, giving Emily the present. I even showed her the messages Emily sent me on the phone. After I said all this I asked her \"What am I going do Jen?\"\n\nJen looked me in the eyes and smiled and said with all of the wisdom that an older sister should have \"Why aren't you on that plane with Emily? Why didn't you go too?\"\n\n\"Because Jen... I have work ... And you and Dave and the kids here... And my friends.\" I babbled, not really making sense.\n\nJenny remained calm. \"Ok let's start at the beginning. Work. Do you love your work? Is it your 'dream job'? Is it what you have wanted to do since you were a kid?\"\n\nI thought for a second \"No Jen, it's not my dream job. You know that. But I do have commitments.\"\n\nJenny then kept presenting reasons why I should go and be with Emily. I could not refute any of her arguments. She then came up with the best reason ever.\n\n\"Matty you love Emily and from seeing you two together I just knew she loves you, even before she said so in the message. You have to do everything you can to get to her and to be with her. Since you started to see Emily I... haven't seen you this happy in ages. You deserve to be this happy. You two are great together.\"\n\nJenny and I then sat there and planned how I could be with Emily. With a little internet research we worked out what I needed to do. I felt so happy that I was actually doing something to be with the woman I love.\n\nAfter about an hour I left Jenny's shop. I was a man with a plan. My first stop was to my work. I went in and saw my boss in her office. I told her all about Emily and I, my plan to head overseas and I resigned from my position. She arranged all the details to ensure I was paid out correctly and wished me all the best in my pursuit of love. She did say that I would be welcome back to work if I needed to. I thanked her again and went and said goodbye to my colleagues. Many were shocked but pleased for me. I didn't tell them I was seeing Emily Windsor, just my girlfriend Emily.\n\nAt home I began the process of getting ready to leave for the trip of a lifetime.\n\nThe next day Emily rang me. It was 9am in the morning in Sydney, 2pm in LA and she had just arrived in her hotel room.\n\n\"Hi Matty.\" She said sounding a little sad.\n\n\"Hi Emily. I miss you and I love you so much.\"\n\nEmily started to cry \"Oh Matt I love you too.\"\n\n\"Shhh, Shhh don't cry Em. I need to talk to you.\"\n\n\"What do you want to talk about?\" Emily sniffled.\n\n\"Well I remember the wonderful, beautiful woman that I love wanted me to write a screenplay for a movie she wanted to make and I have decided to do it. I'd love to write the screenplay. But Emily, I have never written a screenplay.\"\n\n\"I know that Matt. But you will do a great job. You are such a good writer.\"\n\n\"I hope so. But I was thinking... I think I should be closer to the movie industry to write it. So I also remember the girl I love with all my heart offered for me to come over to London whenever I wanted.\" Emily had stopped sniffling and I could hear her breathing on the phone. \"I was wondering if that offer was still available.\"\n\n\"Are you serious Matt?\"\n\n\"Very serious Em. I have quit my job. I'm organising to lease my house and I am going to the British High Commission today to organise my visa. I want to be with you Emily. I can't stand being apart from you and I hope you still want me to be with you.\"\n\nEmily started to cry again. \"Yes, yes, yes Matt. I want you to come to London and live with me. You really want to move to England to be with me?\"\n\n\"Yes Em. I never want to be without you. I love you. I love you so much.\"\n\n\"Matt I love you so much. Oh you have made me so happy.\"\n\nWe talked for more than an hour, as Emily told me how sad she had been on the flight to LA. The flight attendants were concerned for her and she told them all about us and how much she loved me and how she was missing me already. \n\nI told her all about my plans, how I could get an Ancestry Visa for England due to my late English grandfather, how I was going to support myself over there and most of all how much I loved her. She told me she was in America for the next 2 weeks and I had about 3 weeks left in Australia until I could come to London.\n\nWhen we finished the call Emily and I were both so happy. I couldn't wait to see her and she was ecstatic that I wanted to be with her.\n\n*************\n\nIt was the end of June when the day finally arrived for me to travel to London. Jenny took me to the airport. I was excited and a little nervous as well. This was the biggest 'leap of love' I had ever taken. Jenny was a little teary as we said our goodbyes, but she reassured me I was doing the right thing.\n\nMy flight to London was long but thankfully on time. I was excited, and anxious as to how it would be with Emily again. We had spoken nearly every day since she left Australia. She told me all about her work, the magazine interviews and photo shoots. She even sent me some of the pictures that were taken. Emily looked so glamorous in the designer clothes she wore for the photo shoots. I did notice that in the pictures she was always wearing the bracelet that I had given her.\n\nArriving at Heathrow, I made my way through Customs and Immigration; I caught the train into Kings Cross and switched to the tube, and following Emily's instructions I disembarked at Old Church Street station. Emily lived in the highly fashionable Chelsea area of London in an apartment. \n\nHer instructions were great and in no time I found my way to the Emily's address. 'Cromley Towers' was an older looking five storey building, but had very modern glass doors. As I got to the doors, they opened automatically. I was then greeted in the foyer by an imposing gentleman, very tall and well built in a very nice suit.\n\n\"Good morning Mr Thompson and welcome to 'Cromley Towers'. I am Terrance, the head doorman. Miss Windsor told us to expect you this morning.\"\n\nI held out my hand and shook Terrance's. \"Nice to meet you Terrance. Please call me Matt.\" This seemed to surprise Terrance. \n\n\"Ok ... Matt. Here is the key to Miss Windsor's apartment. She is on the fourth floor, apartment ...\"\n\n\"4B\" we both said together, with a smile. \n\n\"Mr Thompson, Matt. I... Miss Windsor must like you very much to invite you here. She is a very private person.\" Terrance seemed to gather himself up to his full height (probably 6'4\"). \"I wouldn't like to see Miss Windsor ... Messed around.\"\n\nI smiled. Everyone always wanted the best for Emily. \"Terrance, I haven't moved half way around the world to mess Emily around. She is the most amazing girl I have ever met.\"\n\nTerrance seemed pleased with my response. He shook my hand again and said \"Anything you need Mr Thom... Matt, please come and see Me.\" as he directed me to the lift.\n\nI got out on the fourth floor and went to the door 4B. Using my key I opened the door.\n\nInside the door there was a hallway going straight ahead and one off to my right. Just ahead on my left was a hall table and on this was a big bunch of flowers and balloons. Pinned to this was a note \"Welcome Home Matt!!\" \n\n'Hi Matt, Welcome home. I can't believe that you are finally here in London. Please make yourself at home. I have labelled everything so you can find your way around. I will be home tonight about 5:30pm and I can't wait to see you.\n\nI love you Matt.\n\nEmily xxxxx'\n\nI had a huge grin on my face reading this note. I continued down the hall to a large lounge dining room, with the kitchen off to the right hand side. The apartment was very new, bright and airy with all modern appliances. Emily had a large lounge suite, very up to date flat screen TV and beautiful pictures on the walls.",
        "Returning back down the hall I went down the other hallway. Emily had been working hard with the Post-It notes, labelling all the rooms. The first was the spare bedroom, then the second bathroom. Next the label said 'Our Office'. In here there were two desks, one which was labelled 'Your desk'. This one had the view out of the window. I put my backpack which had my laptop and hard drive in here.\n\nThe next room had a Post It note on the door with hearts drawn on it. It just said 'Our Room'. In here was a king size bed, large built in wardrobe and door off to the ensuite. On the pillows Emily had even stuck notes 'My Side' and 'Your Side'. She had cleaned out half of the wardrobe for my clothes and even labelled a couple of drawers for me to use. I noticed on her bedside table was a selfie of the two of us together that she had put in to a frame. This made me smile.\n\nI unpacked my bags and had a shower to wash off the plane grime. I then had a bite to eat and acclimatised myself a little with my new abode. Looking in the fridge I decided to go out and get some groceries and cook some dinner for my Emily after her hard day at work.\n\nI went downstairs and after getting some directions from Terrance I went out and bought some supplies. I returned home and set about preparing and cooking dinner.\n\nI was starting to feel really tired now as jet lag was taking hold. I hadn't slept a lot on the plane and noticed that it was 3pm. After I finished cooking, I set the table and then sat down on the lounge and turned on the TV. \n\nSuddenly I heard keys rattling in the door. Looking at the clock it was 5:40. I stood up off the lounge as the door opened. \n\n\"Matt are you here?\" Emily called as I could hear her coming down the hallway.\n\n\"Hi Em. I'm in the lounge.\" I replied standing up and moving towards the hall.\n\nThe footsteps down the hall were moving faster. I moved around the corner and a whirlwind grabbed me and squeezed me tight. Kisses rained down on me and I returned as many as I could.\n\n\"Oh Matt, you're here... Kiss... I love you...kiss... I missed you... kiss kiss kiss\" all happened in the blink of an eye. I had never felt so happy to see someone as I did then.\n\nI finally moved my face back and could see Emily's beautiful smiling face looking back at me. There were a few small tears running down her face. I kissed these off and squeezed her tight.\n\n\"I have missed you so much Emily. I love you so much.\" I said, before kissing her and cuddling her tight.\n\n\"I have missed you my Matt.\" Emily said as she ran her hand down my cheek. \"I can't believe you are finally here with me.\"\n\n\"I'm here with you because I never want to be without you Emily.\"\n\nWe kissed again.\n\n\"Mmmm Matt. I never want to be without you either. I love you so much.\"\n\nOur initial excitement had calmed and we were now just cuddling wanting to be close together. Emily asked how I had found everything and I told her I was glad for all the labels everywhere. And I thanked her for the flowers and balloons as I thought they were wonderful. We kissed again, this time a little longer, with a bit more passion.\n\n\"So Matt, do you like my flat?\" Emily said before kissing me again.\n\n\"It is beautiful Emily. Just like its owner.\"\n\n\"Thank you Matt... Do you like our room?\" Emily said with a cheeky giggle.\n\n\"It is really nice Em.\" I said before kissing her again. \"There is one thing I'm not sure about though.\"\n\n\"What's that?\" Emily asked looking concerned.\n\n\"I'm just wondering how... Comfortable the bed is.\" I replied grinning.\n\nEmily giggled. \"Well why don't we try it out... Just to make sure.\"\n\nI was holding Emily tight and replied \"Just to make sure.\"\n\nEmily took hold of my hand and led me towards our bedroom. We were kissing and cuddling together falling down onto the bed.\n\nI was kissing Em's neck when she said \"Do you know how many times ... oooh Matt... That I have dreamt of you being here with me.\"\n\n\"It couldn't be as many as I have dreamt about being here with you.\"\n\nOur clothes were shed as we reunited physically. It felt so good to have Emily in my arms again. I had missed her so much. As we kissed and cuddled together, remembering all the little things the other liked, I savoured everything about Emily.\n\nHer fragrance was wonderful. The mixture of her shampoo, the perfume she wore, her natural scent and the scent of her arousal filled my senses. The taste of her saliva as we kissed; the softness of her skin against my lips, the friction as our bodies moved together were wonderful. Kissing and caressing her gorgeous breasts, their softness contrasting with her rock hard, crinkled up, strawberry pink nipples all filled my head. I wanted to imprint Emily into my brain, my heart and my soul so we would never be apart.\n\nI kissed my way down her tummy, reacquainting myself with her tattoos and how ticklish Emily was, before eventually tasting her from the source. The looks Emily gave me, the encouragement she murmured, the groans of pleasure she shared all showed me that I was doing the right things for her.\n\nWe continued to cuddle, kiss, caress. We took care of each other's needs. It was slow, sensual and most of all loving. Emily and I made love.\n\nEmily was astride me when she climaxed, which set me off as well. She collapsed down onto me panting and groaning in my ear as she came, squealing a little as I filled her with my love. We stayed like this, cuddling close together, not really wanting to let go. \n\nEmily popped her head up and looked me in the eyes. \"I love you Matt Thompson.\"\n\n\"I love you Emily Windsor. I will always love you.\"\n\n***********\n\nOver the next couple of days, Emily gave me a great introduction to her life. She took me to meet her manager Margaret, and then to her Production company, meeting the key people there. The following day she took me on the set of the movie she was currently shooting. This was great being able to see how Emily worked and the efforts that went in to making a movie. \n\nI couldn't believe how much sitting around the actors did in between takes or scenes. Emily always kept herself busy though, doing work for her production company, answering emails and rehearsing. I got to meet her co-stars and the male lead actor Jason Stoneman. He was a really nice guy, so down to Earth for a big star and very charming man.\n\nThe next evening we went out with Emily's circle of friends. Her friends were all lovely and treated me well. I had been the subject of conversation for a while apparently and they all wanted to get to know me. Emily's best friend Sarah and her husband Martin were especially nice and I became good friends with them quite quickly. Martin and I became good mates as we shared plenty of common interests in the sports we liked.\n\nOn my first Sunday there Emily took me to meet her parents. She wanted to get this done quickly as they had been asking a lot about me and wanted to meet me.\n\nEmily and I travelled down to Surrey to her parent's house for Sunday lunch. It was a beautiful large house on acreage with the classic crushed stone gravel driveway. Her parents Thomas and Anne greeted me warmly and seemed pleased that I had brought flowers for Anne. Thomas is about my height, with slicked back grey hair which is thinning on top. He looks very distinguished. Anne looks more like Emily's sister than Emily, but her nature and mannerisms are very similar to Emily's.\n\nWe went into the house and went into the sitting room, where we got to talking, getting to know each other. After chatting pleasantly for a while, Thomas asked if I liked cars and I replied of course. He offered to show me his latest purchase. Emily smiled and nudged me to go. I knew I was about to get the 'third degree' from my girlfriends father and realised this next few minutes could be crucial in my relationship with her parents.\n\nThomas showed me his new Aston Martin in the garage, and then as we were moving around looking at the car he spoke. \n\n\"Matthew I just want to ask you something... I have my concerns about you moving over here to be with Emily. Not concerned about you and Emily being together, but more worried about how you are going to support yourself while you are over here. Emily has worked very hard to get where she has and has made herself into a successful business woman as well as an actress. I would hate to think that you are coming over here and ... well ... 'Sponging' off Emily while you are writing.\"\n\nI wasn't upset with what he said. I could see that Thomas was genuinely concerned for his daughter's welfare.\n\n\"Thank you Thomas for being completely honest with your concerns about my living with Emily. I am supporting myself and hopefully contributing to our life together. I am currently earning about \u00a39,000 per month after tax from my investment properties that my parents left to me when they passed away a few years ago. I own 2 blocks of town houses back in Australia and have rental income from all of these. If I needed to liquidate any of these it wouldn't be too difficult, with the smallest one being valued at about \u00a3600,000 give or take with the exchange rate. If my writing doesn't work out, I am university educated and have connections with a couple of sporting goods manufacturers over here so I do feel I could get work if I needed too.\"\n\nI paused before continuing \"I only moved here to be with Emily. Your daughter is amazing Thomas and I love her so much... I wouldn't even be writing if it weren't for her. Emily liked my writing and wanted to make it into a movie.\"\n\nThomas looked surprised as I said this. I don't know what he thought I would be like.\n\n\"Thank you Matthew for being so honest with me. I didn't realise that you ... were so financially savvy... Emily hasn't had the best track record with her choices of boyfriends. You my boy sound like a genuine, intelligent, caring fellow who does have my daughter's best interests in heart. That is all any father could want for his daughter.\"\n\nAfter that the rest of our visit went splendidly. I could see Emily looking with interest when Thomas and I returned to the house. He and I were chatting together like old friends and this seemed to ease Emily's mind. I could see the relieved and pleased look on her face. She came across, moved her hair back behind her right ear and wrapped her arm around me and kissed me on the cheek.\n\nEmily showed me around her parent's house and even her old room. It was still decorated from when she last lived there after finishing school, before heading overseas. I had a good giggle with her about the choices of boy bands she followed. Emily wrapped her arms around me again and gave me a long passionate kiss. When we moved apart she said with a giggle \"This is the first time I have ever had a 'boy' in my room.\"\n\nI quickly jumped onto her bed. \"Well let's make the most of this then.\" I said as I patted the bed encouraging her to join me.\n\nEmily laughed \"Matty, you have made a great impression on my parents. Don't ruin it by having them come up to see why their 'lovely innocent' daughter is screaming your name at the top of her lungs.\" She came across and kissed me. \"Like you make me do every time we are together... I do love screaming your name Matt. I love how you make me feel.\"\n\n\"I love how you make me feel Em. I just love you.\"\n\n\"I love you too.\"\n\nOur visit was very nice, and after Emily took me on our tour of the house I could tell that Thomas had been talking to Anne, as she was even nicer to me than before. After an exceptional lunch Emily and I said our goodbyes and headed back to London, both of us very happy that the visit went well.\n\n**************\n\nMany of my friends from Australia wondered what living with a movie star was like. All the glamorous parties and events, film premieres and A- list friends. Well my life with Emily wasn't like that. We shared a very normal life together. She went to work every day and I did my work. The only difference was that her work was at a movie set.\n\nWe did see her co-stars and their partners occasionally, going out with them a couple of times during the filming. We had them and the director over for dinner one night too and that was great fun. \n\nHowever most of the time we lived like any other couple did, both working, looking forward to the weekend so we could spend lots of time together. We went out with Emily's friends and enjoyed their company. Emily didn't seem to attract the attention of the paparazzi, probably because when we went out it was with her close friends and we chose locations that were a little more secluded.\n\nI went about writing my screenplay and after some initial difficulty, it began to flow. I tried to be one of those writers who took their laptop to coffee shops and wrote while out. I found that I didn't concentrate and what I did write was rubbish. I set up our office at home and went about my writing in a more disciplined manner and it worked for me.\n\n****************\n\nIt was now the last Friday in September. Emily was away on location in the North of England finishing the movie. I was going out with our friends for Sarah's birthday. Emily rang me before I met them, lamenting that she wasn't there to celebrate with her best friend and how much she missed me. She was coming home the next afternoon and couldn't wait to be home so we could spend time together. She had seen the finished draft of my screenplay and loved it. Emily had sent it to her Production Company for final approval.\n\n\"I miss you so much my Matt. I can't wait to get home tomorrow afternoon.\"\n\n\"Me either Em. The flat is so lonely without you. I wish you were coming out with us tonight too. What are you doing tonight?\"\n\n\"I'm going out tonight too. The cast and crew are all going out for dinner to celebrate the end of shooting. It should be a good night, but I really wish I was there with you though. Give Sarah my love and tell her I will see her next week.\"\n\n\"I will. I hope you have a good night gorgeous. See you tomorrow. I love you Em.\"\n\n\"I love you Matt.\"\n\nThat night I had a great time out with our friends. We went out for dinner, before heading out to a nightclub in Soho. The place was pumping and we all had fun celebrating with Sarah.\n\nOur night went late into the wee small hours and I had more than enough party spirit. I eventually got home at around 4:30am, falling asleep on the bed still fully dressed.\n\nI was awoken by the shrill ring of the telephone. Looking at the clock it was 7:30am. My mouth was dry and my head was pounding. Reaching across to Em's side of the bed I picked up the phone.\n\n\"Hello.\" I croaked, barely getting the words out.\n\n\"Oh Matt, you sound terrible. I'm so sorry for what has happened. You must feel terrible.\" My sister Jenny babbled down the phone line.\n\n\"Yes Jen I do feel terrible, particularly being woken up so early on a Saturday morning with the mother of all hangovers.\"\n\n\"Did you go out to drown your sorrows last night?\"\n\n\"No Jen I was out with friends celebrating a birthday. What sorrows, I'm not sad. What are you talking about?\"\n\n\"Haven't you seen about Emily on the internet?\"\n\n\"What about Emily on the internet? I have only had about three hours sleep.\" \n\nJenny convinced me to go to the computer and look up what she was talking about. I found the article from the Daily Mail, while still talking to Jenny on the phone.\n\nThe article was titled 'Is this Emily Windsor's new Love?' There was a picture of her kissing Jason Stoneman and then giving him a hug. The article said 'Emily Windsor was spotted kissing her co-star Jason Stoneman as the cast and crew of their movie \"Last Winter\" celebrated the end of shooting last night. Sources from the set have reported that Emily has been speaking of how happy she is at the moment, how wonderful her boyfriend is, how much she loves him and how much he loves her.\n\nCould Jason Stoneman be the new man in her life? The pair was spotted having a kiss and hug before leaving the restaurant.'\n\nI began to laugh reading the article. \n\n\"Are you alright Matt? I'm sorry to have to show you this.\"\n\n\"I'm fine Jen. In fact I'm really happy.\"\n\n\"But Emily is ... Cheating on you with a movie star.\"\n\n\"No Jen she isn't.\"\n\n\"But she is kissing him.\"\n\n\"Firstly Jen, Jason is gay. Can you see in the picture the man standing next to them? That is his long term partner Bryan. I have met them both on the set and even had them over here for dinner a couple of times. They are a lovely couple. I don't believe Jason has 'come out of the closet', but he is very happy with Bryan. I think they have been together for nearly 5 years now.\n\nSecondly, if you look at Emily's wrist she is wearing the bracelet you made for her. Em only wears jewellery that means a lot to her, and she only takes this off when she is working. Emily loves me Jen. And I love her.\"\n\n\"Oh Matt, I'm sorry to have brought your day down. And very sorry I jumped to conclusions.\"\n\n\"That's ok Jen. I know you were only looking out for me, just like you always do. That is why you are the perfect big sister.\"\n\nWe spoke for a few more minutes about what was happening back in Australia and how my niece and nephew were going.\n\nWhen I finished talking with Jenny, I switched my cell phone on. Up came 8 messages from friends both in Australia and my English friends I had been out with last night, sharing their sorrow with me about Emily 'cheating' on me. I decided that I should ring Emily.\n\nWhen I reached Emily, she sounded so happy I had called her and wanted to know all about the party the previous night and I told her all I could remember. She then asked why I was ringing her at such an early time. I told her to get her computer and guided her to the article.\n\nEmily was shocked. \"Matt it's not true. I love you, not Jason. He's gay. You're the one I love.\"\n\n\"I know Emily, I know. And I love you too and I trust you. But Jenny saw this and she rang to let me know about it. And I have messages on my cell phone from our friends about this.\"\n\n\"I know. I have just turned on my phone and I'm getting messages come up from our friends as well. They aren't very happy with me by the look of it... Oh Matt, what if Mother and Father see this?\"\n\n\"Em, I think you should send messages to our friends and I will too. Then ring your parents and let them know. Possibly speak to Margaret as I'm sure she will have seen this by now and will know what to do.\"\n\n\"Matt, have you read the article?\"\n\n\"Yes of course I have.\" I replied with a smile in my voice.\n\n\"You know I was talking about you don't you?\" she asked sounding a little worried.\n\n\"Yes I know you were talking about me. And I'm so flattered you want to tell people about how much you love me because I love you so much Em.\"\n\n\"I do love you so much Matt.\"\n\nWe talked for a little while more before Emily went and started 'damage control'. I too messaged and rang our friends and let them know that things were good between Emily and me.\n\n************\n\nAfter this little incident I quickly began to learn how the movie industry and the paparazzi were intertwined. After the story in the papers, Emily's manager Margaret 'arranged' for Emily and I to be 'papped' while walking through our local park together. The pictures were quite good as Em and I were holding hands. We even stopped and had a kiss and a cuddle. These pictures were then splashed across the pages of the newspapers and the entertainment gossip websites. \n\nThis was a double edged sword though, because this meant Emily and I now became the target of the paparazzi in our everyday lives. Thankfully I wasn't a great target as I am just a normal person, but Emily was very popular.\n\nWhile all of this was happening, I received a package from my sister back in Australia. I had asked her to send me a few of my favourite things from back home, as I wanted to bring some of my things to my new home. She took it upon herself to send some extra things over as well.",
        "Seeing some of these things, including a picture Jenny had included of her and I and our parents, and the letter my sister sent me had me very teary. Emily came home as I was looking at these things and she saw that I was a little emotional. She held me close and really looked after me. Emily cared for me so much. \n\n**********\n\nIt was now late November and Emily was about to go on her promotional tour for 'The Warrior Within'. Her parents were away and they invited us to go and stay at their house for the weekend, to escape the attention we were attracting in London.\n\nEmily and I left very early Saturday morning to head down to the house. We arrived and after unpacking we had a swim in their heated indoor pool. Looking outside it was a very frosty morning with the grass all white.\n\nOnce dried and dressed, Emily insisted we get rugged up and head outside as she wanted to show me something. Coats, scarves and hats were all used as we headed into the back garden. Walking down on the grass, it crackled under our feet from being so well frosted, our breath hung visibly in the air.\n\nWe went through the small grove of trees at the bottom end of the area behind the house and came out in the corner of the property. In this secluded corner was a bench seat, a table and the ground was paved with bricks. From here the view looked down over the nearby village. It was a stunning place. Looking back I could see a sign on the tree which read 'Emily's Corner'.\n\nEmily had the biggest smile on her face. \"I have wanted to show you this for so long. This is where I used to come and sit, read, do my homework... Dream... particularly when the weather was warmer.\" Emily giggled.\n\nShe continued \"My father made this for me as my place... I loved coming down here, especially after Sophie had left home... It was my own little world.\"\n\nI could see Emily's eyes sparkling even in the weak sunlight. I went up and wrapped my arms around her from behind, cuddling her tight. I could feel Emily relax in my embrace. She seemed so happy in this corner. \"What did you used to dream about Em?\"\n\n\"Everything... What I wanted to do when I grew up, the life I would have.\"\n\n\"What did you want to be back then?\"\n\nEmily cuddled into me a little closer. \"I initially wanted to be a nurse, but after having stitches once, I decided that wasn't for me... I then wanted to be a teacher and this seemed good until I went in the school play in 4th form... I was hooked on drama and acting then.\"\n\nThe look of contentment on Emily's face was beautiful. I just had to ask \"You must have dreamt about 'boys' when you were down here?\"\n\nEmily blushed a little. \"Yes of course Matt. All those boys from the boy bands who would want to sweep me off my feet Ha ha ha... You know I met the band last year. Al, who I fancied was a complete ass.\" We both laughed at this.\n\nSeeing Emily so happy and in a place that was so special to her, I just knew now was the right time. I reached into my pocket and confirmed I had what I wanted in my pocket. It was something that I had carried around for a few weeks just waiting for the right opportunity.\n\n\"Emily, can I ask you something?\" I said.\n\n\"Of course my darling, anything.\"\n\nI let go of Emily and began to pace a little. \"Em I have wanted to ask you something for a while now, but I never found the right time or the right words... You'd think with my writing and all that I could be quite eloquent, but I struggle sometimes...\" I looked at Emily and could see a bit of a concerned look on her face. She looked so beautiful. Her cheeks a little 'blushed' from the cold weather, green eyes sparkling, little wisps of her stunning red hair escaping from under her black woolly hat.\n\nI had slipped my gloves off and took hold of her hand. \n\n\"Emily I love you so much. You make me so happy. I have never been with anyone who is so supportive and encouraging, stunningly beautiful and yet so down to Earth, happy and considerate, and amazingly talented as you.\" Looking at Emily I could see a quizzical smile forming on her face. \n\n\"These last 8 months together have been amazing and I never want this to end. So...\" I dropped down on one knee and looked up at Emily. She looked surprised and a little excited as well. She began giggling nervously, and tears starting to form.\n\n\"So Emily Isabelle Windsor will you marry me?\" I said, with my heart pounding in my chest.\n\nThe tears had now started to roll down Emily's face as her smile filled her face. \n\n\"Yes, yes, yes Matt. I would love to marry you!!\" she said. She pulled my hand and I stood up. Her arms flew around me and she kissed me really hard. Moving our faces apart, I wiped the tears off her face.\n\n\"I love you so much Matt. And I definitely want to spend the rest of my life with you. You mean everything to me.\" she said before we kissed again.\n\nI reached into my pocket and lifted out the ring box I had been carrying around for the past couple of weeks. Emily giggled excitedly as I opened the box. The ring had an Emerald in the centre, to match her beautiful eyes, and this was surrounded by diamonds.\n\n\"Ohhh Matt it is so beautiful.\" She said as I slipped it onto her finger. It fitted perfectly and Emily gazed at it. \"It's stunning Matt. I love it and I love you.\" She kissed me again. \"Jenny made this didn't she? Oh she's so talented. I love it. Oh Matt I can't wait to be married with you.\" Emily babbled. Cuddling together we weren't feeling the cold, only warm glow of the love between us. \n\nWe did eventually head back inside. Once there we telephoned her parents and I asked her father for his blessing and he couldn't have been happier for us. After Emily spoke to both her parents, she wanted me to ring Jenny and tell her the good news. I quickly went to my bag and picked up the letter Jenny had sent to me in the parcel I received the previous month.\n\n\"Emily before I ring Jenny I want you to have a close look at your ring. Can you see the two diamonds on either side of the Emerald near the band are different to the others?\"\n\n\"Yes they are aren't they? Why is that Matt?\"\n\nI smiled, handing over the letter to Emily. \"I think I will let Jenny tell you herself.\"\n\nThe passage in the letter read 'Matt, the diamonds at the side of Emily's ring came from Mum's favourite earrings. You know the ones Dad gave her on their 25th anniversary. She is wearing them in the picture of us all that I sent to you. I really wish Mum and Dad were here to meet Emily and to see you two together. They would have loved Emily so much. \n\nI set the diamonds in the ring so that Mum would be with you both and still share in this with you. I hope you don't mind...'\n\nEmily was crying as she read this, and I was tearing up again. \"Ohhh Matt, this means the world to me... I can't believe Jenny would do this. This ring was so special already, now it is even more so.\"\n\nI rang Jenny and let her know the good news and then Emily spoke to her. Tears flowed freely and I could hear Jenny crying on the phone as well. After calming down we also rang Emily's sister and she was so excited for us, and I could hear her say to Emily \"I told you an Aussie man would be good to you.\"\n\n*****************\n\nEmily went on her promotional tour for the 'Warrior' movie. She travelled through Europe, America, Asia, back to London for the World Premiere, and then we both went on the final leg to Australia. After speaking with Margaret and the movie people it was decided that Emily wouldn't publicly announce our engagement until the end of the tour. They didn't want her engagement to dominate conversations about the movie.\n\nOur friends all knew we were engaged, but Emily kept it quiet from the media. She didn't wear her ring in public, but kept it on a long necklace she wore all the time.\n\nI travelled with her to Australia, where we organised a week there after all of Emily's media commitments had been taken care of. We caught up with her sister and family in Melbourne and I really enjoyed finally meeting them all. They were so happy we were getting married.\n\nEmily's last interview of the tour was on the biggest current affairs/entertainment program in Australia. I didn't go into Melbourne with her for this but stayed with her sister's family. We watched the program and Emily was on for two segments, with an ad break in between. During the ads Emily messaged me to make sure I was watching after the break.\n\nThe show came back on and they all talked some more about the movie. One of the hosts then asked Emily about enjoying Australia and how she had spent time here before. Emily replied that her sister and family lived here and she had been here many times. She also said hello to her niece and nephew.\n\n\"And we also believe that your boyfriend is from Australia?\" The female host asked.\n\nEmily grinned and pushed her hair behind her right ear as she always did. \"Well he used to be my boyfriend. Actually he is now my fianc\u00e9.\" She lifted her left hand up and showed everyone her ring.\n\n\"We got engaged about a month ago and kept it quiet... until now.\" A picture of the two of us came up on the screen, cuddling together with Em showing off her ring. Everyone congratulated her and they finished off the interview.\n\nAfter that big surprise we stayed in Melbourne for a couple more days, before heading to Sydney to catch up with my family. My sister had arranged a surprise engagement party for us and most of my old friends attended, and Emily's sister and family made the trek up as well. Emily got to finally meet my best friend Cameron and his wife Kirsten. It was a great night, being able to share more of my life with Emily.\n\n***************\n\nThe next six months of our life were really hectic. We had Christmas back in London, before Emily jetted off to begin filming the final Warrior movie 'The One True Warrior'. She was away on location for 6 weeks before coming back to London and filming for another 8 weeks. She then filmed a smaller movie in England for the next 6 weeks. Then it was off to LA for post-production work on the 'Warrior' film and then doing voice work for an animated movie.\n\nI stayed home and wrote, finishing 2 more screenplays. My first screenplay had been accepted and was approved for production. We were to film it in Australia in November for about 6 to 8 weeks.\n\nIt was now late June and I had managed to fly out and join Emily for the last couple of weeks in LA. The studio had organised a very nice beach side Malibu house for Emily to use while she was there. I joined her, managing to do some work while there.\n\nOne evening Emily came 'home' from work really down. She had a tough day on the set. She had also spoken to her mother and had heard that our plans to be married in the church in the village near her parent's house were in jeopardy. Apparently the press had caught wind of our plans and they were all over the village, planning ways to get pictures of us getting married.\n\nAfter cuddling together and calming down Emily, I went to go to the kitchen to get a drink when I said flippantly \"Why don't we just go and get married in Vegas? Ha ha ha\"\n\nI was in the kitchen for a few minutes and when I came out Emily had a big grin on her face. \"Why don't we get married in Vegas?\" she asked.\n\nWe talked for a few minutes and both realised that this would be a great solution. We were never having a big wedding, with only close friends and family in attendance. As many were coming from Australia, it wouldn't matter where they were flying too. We rang parents, siblings and friends and organised for them to come to Vegas. Our Australian family and friends just changed their tickets, and Emily helped organise tickets for our English family and friends and Margaret organised all the details (thank God for managers!!) \n\nTwo weeks later Emily and I were married at the 'Bellagio' in Vegas. My best mate Cameron was my best man and Sarah was Emily's maid of honour. \n\nEmily looked so beautiful. I had to keep pinching myself that I was marrying this stunning, beautiful, gorgeous, talented woman. I still kept wondering what she saw in me, but the way she looked at me when we were standing together in front of our family and friends put all of those fears to rest.\n\nWe honeymooned in Hawaii for 10 days before heading back to regular life in England.\n\n**************\n\nIt was now the middle of November and we had been filming 'our movie' for just over a week. Emily and I had been in Australia for three weeks finalising details of the shoot, meeting the cast and crew and rehearsing the film. Emily had been a bit under the weather since we had arrived and we put this down to stress in organising her directorial debut.\n\nWe were at our 'home' for the shoot and were watching the 'rushes' of the days filming. We both had been a bit tense and I hadn't always agreed with some of Emily's choices she made when filming, but kept my opinions to myself. Watching a scene however I made a comment, and then Emily snapped back. I made a stupid retort and Emily growled back. \n\nIt was on.\n\nVerbal barbs were flying. Emily and I didn't argue very often; we did have our differences but we were always respectful and mindful of the other person, taking their opinions and working out the best solution.\n\nBut this time was different. This was an old fashioned shouting match.\n\nWe argued about everything on the movie. They were all petty little things we argued about, but we were both heated up about this. We nit-picked each other about everything. It was all about the movie. The argument went on for half an hour and I remember shouting at Emily \"It is MY Story.\"\n\n\"Well it's MY MOVIE!!\" Emily shouted back.\n\nOur argument was then interrupted by my phone ringing. I looked and saw it was my best friend's wife Kirsten ringing me. That seemed very strange as Kirsten never rang me. I answered and Kirsten was in tears. Cameron had been in an accident at work and was in hospital, unconscious in a critical condition. It didn't sound good.\n\nI collapsed down onto the floor, still talking to Kirsten. Emily looked towards me and the anger that had been on her face had been replaced by a look of real concern. I told Kirsten I would be there as soon as I could.\n\nImmediately I told Emily what had happened and she insisted that I go and see Cameron and Kirsten. I got my keys and organised myself. Emily came over and gave me a big hug and I left.\n\nThe hospital was an hour and a half away and when I did finally arrive I was taken into ICU where Cameron was hooked up to all sorts of monitors and drips. Kirsten was there and I immediately gave her a hug, comforting her as best I could. I went and talked to Cameron, encouraging him to pull through.\n\nThrough the night sitting there beside Cameron, all I could think of was how stupid it was that Emily and I fought. I hated that we had our fight. I hoped that this fight was only due to the tension about the movie, and not about us in general. I loved Emily so much and I didn't want to hurt her. I didn't want to let her go.\n\nI ended up staying the whole night at his bedside. Kirsten went home for a couple of hours and came back just after 6 in the morning. She came back and woke me up, insisting that I go to their house and freshen up. I was giving her a hug when we heard a noise from Cameron bed.\n\n\"Hey let go of my wife. You have your own.\" Cameron croaked.\n\nKirsten and I were both so pleased to see him wake up and be in relatively good spirits. The doctors came and examined him and determined that he had some internal injuries and a few broken bones, but was going to pull through. After staying a little while longer I decided to head back to Sydney. \n\nTravelling home I thought about how lucky it was that Cameron was going to be alright, and how stupid it had been to fight with Emily about something as trivial in the long run as a how something should be shot for a movie. I rang Emily's mobile and it went straight to voicemail. No surprise there as she was probably filming.\n\nI then decided to ring the production manager and ask him how everything was going. When he answered he immediately asked me how Emily was. \n\n\"I was going to ask you the same thing. Isn't she there?\" I replied.\n\n\"No she called a day off today saying she was going to the doctors as she still wasn't feeling well.\"\n\nI told him I had been away all night, and I would let him know when I got home and saw Emily. I was now worried as I hoped Em wasn't sick. I missed her and felt so bad about our fight.\n\nI arrived home and called out \"Emily, are you here?\"\n\n\"Yes Matt I'm in the lounge. How's Cameron?\"\n\nI had gotten to the lounge room by this stage. \"He is going to be fine. He has some internal injuries and broken bones but will be ok.\" \n\nEmily was hugging me by this stage, and I held her close, really close. She did have a strange look on her face, but she seemed happy to see me.\n\n\"I'm so sorry for last night Matt. I don't know what came over me.\" Emily said. \n\n\"I'm sorry too Em. I never should have said the things I said. It is your movie, you know what you are doing and you can do whatever you want.\"\n\n\"You were right Matt about some things. I should have taken your ideas seriously... I'm going to re-shoot a couple of scenes the way you said.\"\n\nI kissed her and asked \"How are you feeling Em? What did the doctor say?\"\n\nEmily held me tight and kissed me again. She took a deep breath.\n\n\"We are pregnant Matt.\" She said smiling apprehensively at me.\n\n\"Really?? Oh Emily that is great. Really? We are going to be parents? Oh Emily that is amazing.\"\n\n\"You are really happy Matt?\" \n\n\"Of course I'm happy Em. We are going to have a family. I love you Emily.\"\n\n\"I love you too Matt. Father of our child.\"\n\n***************\n\nLooking back now at how all of this happened over 12 years ago, I still can't really believe it. Emily mentioned the other day about taking the kids to see an Australian football game the next time we were in Australia and it got me thinking about the first time we went to a game, our first dates and how we met. So I decided to write it all down to keep so we would never forget.\n\nWe now have 2 children. Alex, our son and first born, is now 11 years old. He looks a lot like me, but has his mother's green eyes and her wonderful nature. Our daughter, Isabelle, is now 8 and she has her mother's looks, but has my laid back temperament. She is such a 'Daddy's girl' though and can wrap me around her little finger. With Emily away for work a lot I became the 'work from home' Dad and I thoroughly enjoyed doing this.\n\nEmily is now 39 and in the prime of her acting and directing career. Having the children when we did allowed Emily to escape from the shadow of her 'action' character 'Aru' and be able to expand and do many other roles. I look across the office to her side of the room and can see numerous awards for her acting and directing. BAFTA's, AACTA's, a Golden Globe, and standing tall on her shelf that very coveted 'golden man' statue. She won that for Best Supporting Actress in 'Saving Susan' where she played the best friend of a terminally ill woman. Emily was magnificent in the role and thoroughly deserved the award.\n\nLooking out of the window and into our garden I could hear the kids playing together. We moved out of London after Isabelle was born and bought a house in Surrey, feeling more like we were in the country rather than a relatively short distance to London. We both loved the house and the kids loved the area and were both in school nearby.\n\nI looked across at my bookshelf and I could see a few awards that I had won and I could see my own golden man looking back at me. I won him the year after Emily for Best Screenplay for 'What Goes Around' a dramatic love story I wrote. I thanked Emily in my speech, crediting her for being my discoverer, my muse and my best friend, and the woman I love. I have had 4 screenplays made into movies and still write today. ",
        "So far we have only done the one movie together and it was reasonably successful at the box office. Once the movie hit Netflix though, it became really popular. Emily has become enamoured with another screenplay of mine and is trying to get this produced, this time so she can direct and star in the film.\n\nAs I look out of the window, I can see Emily outside with the kids. Her red hair is shorter now, just near her shoulders and she is still so beautiful. She sees me looking out the window and smiles at me. She motions for me to come outside and play. I signal back that I will be out there in 5 minutes and she smiles back at me. Her smile still melts my heart.\n\nI move up to the window and mouth to her 'I Love You.'\n\nShe smiles again and moves her hair back behind her right ear, just like she always does when she is feeling happy and loving. 'I love you too.' She mouths back.\n\nI hear the kids playing close by and Emily moves away from the window to play with them.\n\nSmiling to myself I still can't believe this all happened because I wrote an 'erotic story' about Emily all those years ago. It just goes to show that you never know who reads your stories."
    ],
    "authorname": "demon160",
    "tags": [
        "romance",
        "romantic",
        "love",
        "celebrity",
        "celebrities"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/you-never-know-who-reads-your-stories-pt-03"
}