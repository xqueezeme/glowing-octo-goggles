{
    "title": "A Summer in the Flesh Ch. 14-15",
    "pages": [
        "This is the last two chapters of a fifteen-chapter novella. I posted the first 11 chapters individually, but Chapters 11 through 15 relate to one event and ought to be read in one sitting. In any event, the story is about co-ed housemates and is set in the summer of 1979.\n\n*****\n\nChapter 14\n\nIt was about 1:00 in the morning, and I had a good, mellow buzz going. An old jazz tune came on, and I took it as a sign. I excused myself and told Charlie I\u2019d be back a bit later.\n\nI found them at the bar. When she saw me she touched her husband\u2019s shoulder. He stood up.\n\n\u201cHello, Annie.\u201d He stuck out his hand. \u201cMy name is Alan.\u201d\n\n\u201cHello Alan.\u201d\n\n\u201cI am glad you found us Annie. Come, follow me.\u201d Victoria led the way. They both carried their drinks. I could tell they were tipsy by their walk. She stopped to talk briefly to a bouncer. She handed him a couple bills, and he motioned for us to follow him down the hallway. I was nervous again.\n\n\u201cVicki worked here once. It was a long time ago.\u201d Alan whispered this to me as we entered the room, but Victoria could hear him. \n\n\u201cIt was a different place then, just a strip joint,\u201d Victoria replied. She looked at me and said, \u201cPasties, you know?\u201d and tweaked her tits and laughed.\n\n\u201cThat was twenty-five years ago,\u201d Alan said laughing. \n\n\u201cHa ha ha,\u201d chided Victoria. \n\nThe room was the size of a small bedroom and almost antiseptically clean. There was a long couch against one wall, an over stuffed chair, a few bar stools that looked out of place, a full-length mirror on the back of the door, and a coat rack in the corner. The music was piped in through a speaker in the ceiling. \n\nVicki started to unzip her dress. \u201cOh, you don\u2019t have a drink, Annie. That won\u2019t do. Another vodka?\u201d\n\n\u201cNo thank you.\u201d I fidgeted. What was I getting myself into now? Relax, I said to myself. It is just a little dance. I had only agreed because I found Victoria so inexplicably fascinating.\n\n\u201cNonsense.\u201d She opened the door and called down to the bouncer. She asked for someone to bring another double vodka. She closed the door and let her cocktail dress drop to the floor. I thought of the movie The Graduate.\n\n\u201cAre you trying to seduce me, Mrs. Robinson?\u201d I said.\n\nShe laughed at my comment. \u201cGod that I looked as good as Anne Bancroft.\u201d \n\nShe looked better. Her breasts were buxom, with large, pale areolas and only a bit of sag to show for the years. She was wearing only her garter belt, stockings, and heels \u2013 no panties. There was a knock at the door. Victoria paid for my drink without covering herself and handed it to me.\n\n\u201cThere you go, Annie.\u201d\n\nAlan was also undressing. I wondered what I should do. I decided to be patient. They certainly seemed like a harmless, rich, inebriated old couple. They hung their clothes on the coat rack. \n\n\u201cI am taking this god-awful belt off.\u201d She winked at me. \u201cDamn thing has been pinching at me all night. I\u2019ve gotten fat, dear. You watch yourself.\u201d \n\nShe wasn\u2019t fat. We were the same height, and I would be surprised if she had ten pounds on me. She had faint traces of stretch marks on her sides, and the pooch of her tummy was more pronounced, but still in a sexy sort of way. Her hips were expansive, but smooth. Her bottom was full and soft and jiggly, but it was shapely. She looked fantastic to me. \n\n\u201cI\u2019m taking these damn shoes off, too.\u201d\n\nAlan took a seat on the couch and picked up his drink. His flesh had softened over the years, but I could see the remnants of a tanned, muscular young man. He looked silly in just his socks with a drink in his hand. He looked drunk, too, but he was attractive in a gentlemanly, almost regal sort of way.\n\n\u201cDo you guys have kids?\u201d I felt like I had to know.\n\n\u201cOh, good lord.\u201d She put her hands on her hips and faced me in nothing but her stockings now. \u201cLook at me. Of course we have kids.\u201d \n\nAlan laughed loudly. \u201cHoney, you\u2019re a goddess!\u201d She laughed. Alan continued. \u201cWe have three kids. I can\u2019t remember their names.\u201d They both laughed. \u201cThey\u2019ve all moved away.\u201d\n\nVictoria sat next to Alan on the couch. They kissed. Victoria looked at me.\n\n\u201cWhat do you do, Annie?\u201d\n\n\u201cI\u2019m in college.\u201d\n\nAlan raised his glass to me. \u201cGood thing, college. Good for you. I didn\u2019t think many of you girls go to college.\u201d He must be confusing me, I thought, with those other girls. \u201cAll of our kids went to college. Some are still there, I think.\u201d Alan was enjoying himself. \u201cCost me a fortune. Nothing to show for it.\u201d\n\n\u201cYou\u2019re a putz, Alan.\u201d \n\nThere was a brief pause. The song was \u201cLet\u2019s Groove Tonight\u201d by Earth Wind and Fire. I closed my eyes and listened. I set down my drink and started to dance. \n\nI let my robe fall open. I ran my hands over the chiffon of my baby doll. I pressed up against the undersides of my breasts. \n\nIt was good to be young and beautiful, I thought. I liked this couple. I wanted to dance for the both of them. Strangely, I was feeling like I had done this before. I felt naughty and cheap and slutty and sexy and young and gorgeous. I turned my back to them and let my robe drop to the floor. I kept my legs straight and bent at the waist to pick it up.\n\n\u201cOh my!\u201d I heard Alan exclaim.\n\nVictoria took my robe, folded it for me, and set it aside. I decide to do away with the strip tease part. I didn\u2019t know what I was doing, anyway, and I suspected they wanted to get to the naked part. I took off my baby doll and my panties. I stood before them naked in my white stockings. Alan applauded politely. Victoria was watching me. She crossed her legs. She looked in Alan\u2019s lap. His penis was flaccid. She looked back at me. I danced.\n\nI twisted and moved with the music. I caressed myself all over. I walked up to Alan and spread his legs, and standing right in front of him I massaged my pussy with both hands. I put one foot up on the couch, on Alan\u2019s left side, away from Victoria. She reached over with her right hand and took hold Alan\u2019s swelling penis. Good, I thought. I hoped it was working as she had planned. \n\nThe music changed, another disco classic. \u201cShake Your Groove Thing.\u201d I turned around between Alan\u2019s legs and shook my bum in his face. He squeezed my cheeks. I turned around again and looked at where she was stroking him. He was erect. Brazenly, and feeling erotically charged, I took one of his hands pushed it between my legs. He strummed my pussy with his fingers. He pressed against my clit. Victoria let go of him and stood up. I froze. Was I doing something wrong?\n\n\u201cGo on dear, go on.\u201d She walked around behind me. She slithered up against me. I could feel her breasts brush softly against my back. She put her mouth next to my ear. \n\n\u201cYou\u2019re doing great,\u201d she whispered, and the heat of her breath and the sexiness of her voice excited me. \n\nAlan kept diddling my clit. He knew what he was doing. I was wet and hot. Victoria fondled my breasts and stroked my tummy. She pressed against me firmly, pulling at my hips. \n\nShe whispered next to my ear. \u201cIsn\u2019t she beautiful, Alan?\u201d\n\n\u201cAnother goddess, just like you.\u201d \n\nI put my hand up to the side of her face and pushed our cheeks together. I turned my head to give her the opportunity if she wanted. She kissed my mouth. I turned to face her. I kicked of my heels. We embraced. We kissed passionately. I planted my hands into the fleshiness of her voluptuous bottom. She did the same to me. I could feel our pubic mounds pressing together.\n\n\u201cOh, my this is interesting,\u201d I heard Alan say. His hands joined hers on my bum. Victoria whispered to me again.\n\n\u201cDance for him the way you danced for your friend.\u201d She let me go.\n\nI backed up and he guided me down to his lap with his hands on my hips. I felt his penis between my cheeks. I squeezed. He was too small for that to have the desired effect, I thought, and so I rocked and twisted in his lap, and I could feel his penis rolling around underneath me. I turned and straddled him, knees by his hips. He kissed my breasts. His hands felt strong and demanding against the softness of my ass. I squatted down on him so that his dickhead pressed against my pubic mound. I looked in his eyes.\n\n\u201cOh god Vicki,\u201d he said, closing his eyes. \n\nI swayed and bounced in his lap, tickling his penis. He fondled my ass and breasts, running his hands gently all over my thighs, my hips, my back, my arms, my sides. \n\n\u201cOh god Vicki,\u201d he said again. \u201cYou feel so good.\u201d I let the tip of his penis trace my vagina. \u201cI want you so badly, Vicki. I want you now.\u201d He kept his eyes closed.\n\nVicki touched my shoulder. She motioned me away from Alan with her eyes. I stood up. She took my place. \n\n\u201cI\u2019m here, baby.\u201d She straddled him. She teased him. I watched. She guided his penis into her. \n\n\u201cLike that, baby? Is that good?\u201d \n\nShe started slowly. They kissed. His hands wandered over her body like they had mine. \n\nThey fucked right there in front of me, and I watched them, and as strange as it was I couldn\u2019t help but think how romantic it was. \n\nAlan was right. She was most definitely still a goddess. I hoped I was as beautiful and sexy as she was when I was her age. She picked up her pace. Alan started to groan. Now she was bucking on him. Alan was a lucky man. I now felt uninvited. I put on my robe and gathered my things. I left them alone, carefully opening and closing the door. \n\n\u201cThey\u2019ll be a few more minutes,\u201d I said as I winked at the bouncer and walked back into the party.\n\nI went to the ladies lounge and put my panties and baby doll in our locker. It was late, I thought, and I decided I would get by with just my robe for the rest of the night. No more dancing. \n\nAmy came in while I was freshening up. She had taken off her body stocking and was wearing her snap off shorts and a flimsy, black camisole. With her bare legs in those boots and the tight shorts showing off her firm ass, she was definitely hot. I thought she looked better than she had in her stocking. We walked back to our table together.\n\nMike and Charlie were there. I ordered a soda. We talked about the scene.\n\nVictoria came by a few moments later. She asked me to follow her to the ladies lounge. I walked behind her, and I caught myself paying attention to her gait. I wanted to be able to imitate it. \n\nShe stopped in front of a full-length locker and slipped out of her dress. She kicked off her heels. She opened her locker and set her things inside. She was naked except for her stockings. I was gazing with delight at her mature flesh. \n\n\u201cThank you. You were wonderful,\u201d she said as she fumbled for something in her locker. She handed me a one hundred-dollar bill. I clenched it in my hand. \u201cAlan and I appreciate it.\u201d She sat down and began to roll down her stockings.\n\n\u201cIt was nothing.\u201d I turned to leave.\n\n\u201cWait, dear.\u201d She motioned me back to her. She hung up her stockings. \u201cI want to ask you something. Just a second. Are you in need of a shower?\u201d\n\nI wondered what she wanted. I actually could have used a shower. \u201cI suppose I do, now that you mention it.\u201d\n\n\u201cGood, meet me in the shower and we can talk.\u201d\n\nI nodded. I went to my locker and took off my robe, stockings, pearls and heels. I slipped the hundred into my jeans pocket in the bag. \n\nShe had a full layer of lather on her torso when I joined her. I took the showerhead next to hers. We were both careful not to wet our hair. \n\nI couldn\u2019t help but to compare our bodies. There was a striking potential for resemblance. Her skin was slightly weathered and damaged here and there from the sun, and it wasn\u2019t as tight as mine, but not distractingly so. As she rinsed off, she spoke.\n\n\u201cIs Charlie your boyfriend?\u201d\n\n\u201cNot really.\u201d\n\n\u201cSo, in a way he is your boyfriend?\u201d\n\n\u201cWe are good fiends.\u201d\n\n\u201cThis may seem silly. I\u2019m not sure how best to say this, so I will just say it. Do you think I could dance for him?\u201d She sighed and rolled her eyes. \u201cAll right, what I really mean is, do you think you could persuade him to ask me to dance for him?\u201d \n\nShe stood very still and looked at me with what I thought was a hint of sorrow in her eyes. \n\n\u201cThat seems like it would be up to Charlie.\u201d\n\n\u201cBut do you think he would, if you asked him? I want to dance for both of you, together. I want him to ask me to do that, to ask me with you, in front of Alan, and then for us to leave him. I would give you another hundred, and a twenty for Charlie to give to me, plus I will pay for the room, of course.\u201d\n\nWe were standing naked within a foot of each other. I felt a strange affinity for Victoria at that moment. I wanted her to be happy. I wanted her to have her little fantasy. \n\n\u201cI think he might be persuaded.\u201d\n\n\u201cOh thank you, Annie. I am so glad we met.\u201d She put her hand to my cheek and traced her thumb under my eye. She was looking intently at my face. \n\n\u201cYou are so beautiful, Annie. Look at you. I so much want to be you, dear. I want to feel the way I know you feel tonight. Thank you, even if it is just for a moment.\u201d\n\nI smiled at her. I was staring into her eyes. She had small crow\u2019s feet, but her eyes were otherwise very much like mine. I thought she looked stunning. She pulled my head toward hers with the slightest movement of her fingers. I didn\u2019t resist. I stepped towards her. We embraced and kissed, like we had in front of Alan, but this was different. It wasn\u2019t a show. She held my head in her hands as she kissed me. I pulled her against me from the small of her back. \n\nShe whispered into my mouth, \u201cWait about a half an hour. If he is willing, come by our table. It will be less crowded then. I\u2019ll be looking for you.\u201d\n\n\u201cCan I ask you something, Victoria?\u201d\n\n\u201cCall me Vicki, dear. Were friends now.\u201d\n\n\u201cHow old are you?\u201d\n\n\u201cI shouldn\u2019t say.\u201d\n\n\u201cI feel like I need to know.\u201d\n\n\u201cI\u2019m forty-six.\u201d\n\n\u201cYou look great, Vicki.\u201d\n\n\u201cIn my heart, I am still young, Annie. When I look in the mirror, it\u2019s someone like you I expect to see, but then I see me and I can\u2019t believe my eyes. It is hard, this getting-old thing.\u201d\n\nWe kissed again, less passionately but somehow more intimately. \n\nAs we were drying off at our lockers, she gave me another one hundred-dollar bill and two twenties. She was taking her time applying her makeup when I left.\n\nA slender woman was standing beside our table when I returned. She was striking. Her hair was long and thick and wavy, the color of dark mahogany with subtle amber highlights. She had apparently stopped to say hello to Amy. \n\nHer voice was raspy and very quiet. I noticed how carefully and expertly she had applied her makeup. She brushed her hair out of her face with slender fingers. Her nails were the color of blood, deep and shiny. Her pert breasts strained against a red satin bra trimmed in black lace. Her panties matched her bra. She wasn\u2019t wearing any stockings. Her legs were long and thin and her skin was so smooth it appeared to shine in the colored lights. \n\nI sat down just as she said good-bye to Amy. Her hips were svelte, and she swayed them elegantly as she walked. Charlie leaned out from the table to watch her walk away.\n\n\u201cWho was that?\u201d Mike asked looking bewitched. Amy laughed.\n\n\u201cShe is gorgeous, isn\u2019t she?\u201d Amy said through her giggling.\n\n\u201cWhat\u2019s so funny?\u2019 I was curious.\n\n\u201cNothing, nothing.\u201d Amy composed herself. \u201cHer name is Vanessa. She\u2019s a lot of fun.\u201d Amy looked around. \u201cWhere\u2019s Tom?\u201d\n\n\u201cHe\u2019s at the far platform, over there.\u201d Mike pointed him out.\n\nAmy leaned over the table as if she was going to share a secret with us. \u201cVanessa is a regular. She has, well, how should I put this? She has a special talent.\u201d Amy looked around the room again. \u201cHere, I\u2019ll show you. Let\u2019s have some fun.\u201d \n\nAmy got up and went over to where Vanessa was standing. I watched Amy hand Vanessa a couple bills. Amy pointed out Tom for her. They chatted for a few moments, and then they hugged. Vanessa started for Tom. Amy hurried back to our table.\n\n\u201cCome on, let\u2019s watch.\u201d Amy was beaming.\n\n\u201cWhat\u2019s her special talent, Amy?\u201d I asked as I watched Vanessa tap Tom on the shoulder.\n\n\u201cYou\u2019ll see. She\u2019s good.\u201d\n\nVanessa led Tom to a couch in the center of a less crowded area. We followed. Amy took a place behind where Tom was seated, near a table where we could set our drinks. I could tell others were positioning themselves so that they could see Vanessa. The Cars were playing. \u201cLife\u2019s a dream, I\u2019m moving in stereo\u2026.\u201d \n\nShe was slinky and sinewy in the way she moved. I thought of a harem girl, gyrating her hips methodically. She was hypnotizing. She let Tom undo the front clasp of her bra, and it fell away. Her breasts were perfectly molded, like sculpted museum pieces. I wondered whether they were real, and decide they were too beautiful to be fake. Amy leaned against me.\n\n\u201cBest boob-job you\u2019ll ever see.\u201d\n\n\u201cYou\u2019re kidding?\u201d I was truly surprised. \n\n\u201cBeverly Hills doctor. Cost her a fortune.\u201d\n\nHer breasts were full and nicely rounded below the nipple, and her nipples angled slightly upward. I always thought a boob job resulted in balloon-like tits, but hers weren\u2019t big. They were womanly soft and delicately shaped. I was impressed. Her dancing was enchanting.\n\nShe stood between Tom\u2019s legs. She turned away from him. Tom pulled at her panties, and she slapped at his hand playfully. As she slowly rolled down her panties, Tom leaned forward, putting his face close to her bum cheeks. She was nicely tanned, with no tan lines. Her skin was radiant. I could tell Tom was struggling to restrain himself. \n\nWhen her panties reached the lower portion of her bottom, Tom placed his hands on her hips and kissed her cheeks. She squirmed about, and looked over her shoulder at him smiling and then laughing as he nuzzled up to her bum. She let him press his face into her bottom. Then she turned around and backed ever so slightly away from him, just out of his reach. \n\nShe held on to the crotch of her panties with both hands, her legs held tightly together. Slowly she pushed then down. She revealed the crest of her pubic hair, and it was neatly cropped and dark and nappy. She stopped. There was a charge in the small crowd that had gathered behind Tom. I saw one of the professional girls looking on, excitedly telling the man with her to watch.\n\nVanessa bent towards Tom and tore away her panties. Then she spread her feet and legs and stood up straight. \n\nI couldn\u2019t register what my eyes were seeing at first. A penis seemed to spring forth from between her legs. There was a gasp from the onlookers, and then calls of encouragement. \n\nHer surprising genitalia transfixed me. It WAS a penis. It was a very real, very normal looking penis. It was ever so slightly engorged. The skin was smooth and dramatically white against her otherwise olive, whole-body tan. I had no idea what to think. Some of the onlookers were laughing. People walking by stopped to stare. I couldn\u2019t see Tom\u2019s face. He was sitting absolutely still. Vanessa swayed at the hips and waggled her penis. She had an enormous smile on her face.\n\n\u201cShe\u2019s spectacular, isn\u2019t she?\u201d Amy was beside herself. She had to put her hand on my shoulder to steady herself as she laughed. I didn\u2019t know what to do or say. \n\n\u201cDoes she have balls?\u201d Despite the evidence, I was turning skeptical. Amy had tears in her eyes now.\n\n\u201cOh god, Annie. She\u2019s had a little plastic surgery down there. I don\u2019t know what you\u2019d call it. A snip and tuck? But yes, she definitely has balls.\u201d\n\n\u201cI can\u2019t believe it.\u201d \n\nCharlie and Mike were talking excitedly. Charlie turned to Amy and me.\n\n\u201cOh Amy, now that is a funny. Oh, Tom was kissing his ass. Oh god\u2026\u201d\n\n\u201cHer ass,\u201d Amy scolded Charlie, but he ignored her\n\n. \n\nI kept watching. Vanessa sat down in Tom\u2019s lap and put an arm around his shoulders. She whispered something in his ear. She kissed him on the forehead and stood back up. She tucked her cock between her legs and straightened up. She looked so much like a woman. Her hips were narrow, but they spread out from her even narrower waist.",
        "\u201cHow does he, excuse me, she get her waist so thin?\u201d I wondered aloud.\n\nThere was nothing \u201cguy-like\u201d about her body \u2013 nothing except for her cock. She let her unit spring forward again. It was more engorged. She took hold of it and squeezed it, and it grew. She reached down and took Tom\u2019s hand with her free hand. She tried to get him to touch her penis. He hesitated, and then he took it in his hand.\n\n\u201cGood boy, Tom,\u201d Amy whispered to herself proudly.\n\nVanessa put her hand behind her head and swayed as Tom fondled her cock. Tom took his hand away. She turned around and backed into him, and again Tom was kissing and petting her cheeks.\n\nVanessa turned and offered her hand to Tom. He took it and stood up, but resisted going with her. She looked at him pleadingly, and then she smiled. She stepped close to him and I could tell she was purring like a cat in his ear. \n\nMike and Charlie were merciless. Tom must have heard us. He looked over his shoulder at us. I expected to see a confused and hurt look on his face. Instead he smiled, as if to say, \u201cWhat the hell.\u201d He followed where she led. There was a smattering of applause from well-wishers.\n\nI was reminded of my dream, the one where I had a penis. I was reminded of my time with Amy\u2019s strap-on. I was stimulated to the point of distraction. I wanted to know what it would be like to touch her penis. She was so beautiful, so sexy. Her genital are was so immaculate. There was a part of me that envied Tom.\n\n\u201cI knew he\u2019d go with her.\u201d Amy seemed pleased with herself.\n\n\u201cWhat is she?\u201d I was still a bit out of sorts. We started back to our table.\n\n\u201cYou mean\u2026 she\u2019s not pre-operative or anything. If you ask her, she will tell you that she is very fond of her dick. She is what she is.\u201d\n\n\u201cA fucking freak,\u201d said Mike.\n\n\u201cThat\u2019s nice, Mike. Maybe she thinks you\u2019re a fucking freak, too.\u201d Amy was pissed.\n\n\u201cCome on, guys,\u201d Charlie said quietly. \u201cShut up, Mike.\u201d\n\n\u201cThat freak makes more money than you may ever see, Mike.\u201d Amy regained her good spirits. \n\n\u201cI don\u2019t get it,\u201d said Mike.\n\n\u201cI\u2019m a bit overwhelmed,\u201d said Charlie.\n\n\u201cI think she\u2019s sexy,\u201d I said, hoping to end the discussion. We sat down at our table.\n\n\u201cI\u2019m worried about Tom.\u201d Mike said this very earnestly. There was a pause, and then the rest of us howled with laughter. \n\n\u201cI\u2019d worry about yourself, Mike,\u201d Amy offered as politely as she could.\n\nCharlie said, \u201cI am not worried about Tom in the slightest.\u201d\n\nCharlie and I started to talk quietly to each other. Amy left the table, apparently no longer wishing to talk to Mike. Mike got up and followed her, apologizing. After a calculated interval, I asked Charlie what he thought of Vicki.\n\n\u201cShe was hot, for an older babe.\u201d\n\n\u201cYeah, you said that, but would you ever\u2026 I don\u2019t know, fantasize about a woman like that?\u201d\n\n\u201cYeah, sure. She looked good, but she must be like forty years old. I mean, I would have a hard time fantasizing about her in a place like this.\u201d\n\n\u201cWhat if I paid for her to dance for you? Would you like that?\u201d\n\nCharlie nodded towards a large breasted, very young blond woman who ambled by in nothing more than her underwear. \u201cHow about you pay for her to dance with me?\u201d\n\n\u201cI don\u2019t want to pay for HER to dance with you. I want to see Vicki dance for you. Come on, Charlie, it\u2019ll be fun.\u201d I thought about telling him about the hundred dollars, and then I thought I didn\u2019t need to \u2013 not yet anyway.\n\n\u201cYou know, she kind of looks like you.\u201d He smiled at me. \u201cOnly older, I mean.\u201d\n\n\u201cIt\u2019s okay. That\u2019s what I want. I want you to think of her as me in twenty years\u2026\u201d or twenty-five to be exact, I thought to myself, \u201cand I want to know if you would find me attractive and sexy.\u201d\n\n\u201cShe won\u2019t dance for us.\u201d\n\n\u201cWant to bet?\u201d I was coy.\n\n\u201cTen bucks, the cost of the dance.\u201d\n\n\u201cMake it twenty. I\u2019ll bet she\u2019ll even dance for us in a private room.\u201d\n\n\u201cThat\u2019d be like fifty bucks with the room: too much.\u201d\n\n\u201cI\u2019ll get the room, you get the dance if she comes with us. I\u2019ll give you twenty if she doesn\u2019t.\u201d\n\n\u201cOkay, you\u2019re on.\u201d\n\nCharlie asked me to set it up. I told him no, he had to ask her for himself. As far as I was concerned, it had to be his idea. I told him to be gracious and flattering. I pointed out where Vicki and Alan were sitting. Charlie led the way. \n\nI stayed behind Charlie as he approached their table. He stopped in front of Vicki and cleared his throat.\n\n\u201cUm, excuse me, ma\u2019am\u2026\u201d\n\nI kicked him in the shin. \n\n\u201cErr, excuse me, Victoria. I was very glad to meet you earlier, and I just wanted you to know that I think you are an enormously attractive and sexy woman.\u201d\n\nEnormously!? Good lord, what an idiot, I thought. \n\n\u201cPlease, join us.\u201d Alan partially stood up and motioned to the place across from Vicki at the table. Charlie started to waive his hand to say no, but Vicki scooted over to make enough room for both of us and patted the place next to her.\n\n\u201cSit down, you two,\u201d She said. \n\nI pushed Charlie down and I sat on the end. \n\n\u201cNow what did you want to say, sweetheart.\u201d \n\n\u201cLet us order you kids round of drinks, eh?\u201d Alan offered loudly over the music. \n\n\u201cNo, really, thank you sir,\u201d Charlie replied. I kicked Charlie under the table again. \u201cYou are a very lucky man, to have such a beautiful and\u2026\u201d Charlie paused as he looked into Vicki\u2019s eyes, \u201calluring woman as a companion.\u201d \n\nBetter, I thought.\n\n\u201cLucky is the operative word, son.\u201d Alan was again too loud. He was obviously even drunker than before.\n\n\u201cI would like to ask if Victoria\u2026\u201d \n\nI kicked him yet again. \u201cAsk her, you idiot,\u201d I said under my breath.\n\n\u201c\u2026I would like to ask you, Victoria, to dance for us, for Annie and me.\u201d\n\nAlan looked dumbfounded.\n\n\u201cA private dance,\u201d Charlie added, looking humbly at Alan.\n\n\u201cI would like that, Charlie. Yes, I would. I would be happy to dance for you. Is that alright with you, Alan?\u201d\n\nAlan looked at a loss for words. \n\n\u201cGood!\u201d Vicki said gaily. \u201cShall we go?\u201d\n\nI got up with Charlie. I led the way as Charlie and Vicki followed me. I looked back and saw Vicki take his hand. I decided to spring for the bigger room. I gave the bouncer in the hallway fifty dollars and told him I wanted the room with the bed and the couch and the mirrors. Vicki looked at me appreciatively. I wanted to watch her dance for Charlie. I was so anxious I shivered.\n\n*********\n\nChapter 15\n\nThe bed was freshly made. The mirrors sparkled. I turned the lights down at the dimmer switch. I walked up behind Charlie and whispered in his ear.\n\n\u201cGet undressed.\u201d\n\nHe looked at me as if he were confused. I nodded it was all right. Charlie took off his clothes and hung them behind the door. Vicki straightened her dress in the mirror. I motioned for Charlie to sit on the big couch. Vicki watched him in the mirror as he walked by.\n\nA slow song came over the speaker system. \u201cLady Blue\u201d by Leon Russell. I thought it was perfect.\n\nI sat down on the edge of the bed to watch.\n\nShe stood with her back to Charlie. She closed her eyes and swayed with her hands on her hips. I could see her back in the mirror behind Charlie. Her dress plunged down to the small of her back. She lifted he hands up her sides, and her dress rode up, revealing the lacy bands at the top of her black, silk stockings. She pushed her legs tightly together and arched her back and bent at the waist, showing Charlie the little creases where her bum cheeks overlapped her legs. She let the dress regain its normal fit and turned to face Charlie. \n\nNow she spread her legs out. Her dress inched up. Again she rubbed her hips in such a fashion that her dress hiked up, and Charlie could see wisps of her pubic hair. She walked towards Charlie, and her dress fell back in place. She put her hands on Charlie\u2019s knees. Charlie stared down her cleavage. She leaned forward and kissed his forehead.\n\nShe sat on his legs. The straps of her cocktail dress had fallen over her shoulders. She shook out her hair, and it relaxed and fell about her neck. She seemed to be working on something in Charlie\u2019s lap, and I knew it was his cock. \n\nCharlie took the liberty to place his hands on her breasts. Then he pulled down on the straps and the front of he dress fell and her breasts spilled out for him. \n\n\u201cYour so big and hard, Charlie,\u201d Vicki said throatily. \u201cDo you like my big breasts Charlie?\u201d\n\n\u201cYes.\u201d\n\n\u201cTell me you like my breasts, Charlie.\u201d\n\nHe squeezed and kneaded her breasts. \u201cYour breasts are beautiful.\u201d\n\n\u201cI\u2019m all hot for you, Charlie. Your dick is beautiful.\u201d \n\nShe put her arms back through the straps of her dress and stood up. She stepped between his legs. I could see Charlie\u2019s penis now, and it was huge and swollen and red, sticking straight up from his lap. She kicked off a shoe and put her foot on the couch between Charlie\u2019s legs. Her toes slid under his crotch. The skirt part of her dress was caught on her legs in such a fashion that I am sure Charlie could see her pussy.\n\n\u201cHelp me take off my stockings Charlie.\u201d \n\nShe hiked her dress up higher on her thighs. Charlie began to studiously unhooking the clasps for the garter straps. He started to pull down on her stocking. She showed him how to roll the stocking down, and he rolled it slowly all the way down to her ankle, rubbing her thighs and calves with the flats of his hands as he did. She pulled her foot out of his crotch and the stocking came off in Charlie\u2019s hands. \n\nShe switched legs, and Charlie did it again. This time, as he was unhooking her clasps, she took one of his hands and pressed it under her dress, against her flesh. I could barely hear her, but she whispered, \u201cDo you feel how hot I am, Charlie?\u201d\n\nCharlie\u2019s face was red and looked a bit hot, too. He went slower this time, clasping her meaty thigh with the palms of his hands and pulling down, rolling the stocking along till it fell off her foot. She turned around and backed up to Charlie, holding her hands provocatively behind her head.\n\n\u201cUnzip me.\u201d\n\nI was sitting on my heels on the bed now. I was totally caught up in the scene before me. I caught Vicki\u2019s eye and she smiled and winked. Charlie unzipped her dress from the small of her back to the middle of her bottom. She dropped her arms, and the dress slipped to the floor. \n\n\u201cThe garter belt, Charlie?\u201d \n\nIt was all that was left. She put her hands to the back of her head. Charlie unfastened the belt and tossed it to the end off the couch. She was naked now. She backed even closer to him and with her legs straight she bent over to pick up her dress. Charlie squeezed her bum cheeks one at a time. She stood in front of him folding her dress carefully, taking her time, and then she tossed the dress aside casually. I giggled. She smiled at me.\n\nIf the lights had been bright, and my focus perfectly clear, I might have thought that her flesh was a little loose and worn. Instead, with warm lights and a soft focus, she cut the figure of an ample breasted, curvaceous, young maiden. Naked and barefoot, she looked like a woman with milky skin preparing for a bath. My loins started to ache with desire. Not with desire for her, but for the idea of her standing there with a vital young stud fixated and vulnerable in the web of her sexuality. \n\nThe song changed: Gloria Gaynor\u2019s \u201cI Will Survive.\u201d It made me want to dance. Charlie clung to Vicki\u2019s hips. His dick was long and twitching about, and I assumed he ached for her, or the idea of her, too. \n\nShe turned to face him and took his hands and pulled him up from the couch. She pulled his arms around her, and then she put her arms under his and pulled him against her. \n\nThey kissed, and the strangest emotion came over me. I was jealous, but I couldn\u2019t tell of whom. They squeezed each other tightly and swayed to the music. With his hands sunk firmly into her soft bottom, they moved in a circle, and Vicki intentional rubbing against Charlie, all that flesh on flesh, the friction and heat between them. Then she shuffled him over to the couch and pushed him back till he was sitting again. She kneeled on the carpeting in front of him.\n\n\u201cI want to suck your cock, Charlie. Do you want me to suck your cock?\u201d she asked.\n\nI hadn\u2019t expected this.\n\n\u201cHmmmm, baby, is that what you want?\u201d\n\nShe was stroking his rock hard shaft with both hands, breathing the words against its head like it was a microphone. Charlie looked lost. He groaned as she licked him, and then he looked at me as she went down on him. My eyes must have been wide, but I mouthed, \u201cIt\u2019s okay,\u201d to him.\n\nShe sat on her heels and nodded away on Charlie. His head fell back against the couch. I had to adjust my seat. I couldn\u2019t believe my eyes. \n\nShe was able to plunge her lips all the way to the base of his penis, and when she pulled her head up she did so very slowly and she pulled on his penis and it seemed to stretch like taffy. It was remarkable in that Charlie\u2019s dick looked an inch or two longer than it already was as her lips came up to the head of his penis. Then she plunged her head down again, taking all of him in her mouth. It didn\u2019t seem possible. Again and again, up slowly, pulling, stretching, and then down hard. \n\nCharlie was writhing under her. I couldn\u2019t imagine being so rough on a penis, any man\u2019s penis, let alone Charlie\u2019s biggun. Charlie made sounds I had never heard before, half pain, half ecstasy, otherworldly. It was if she was sucking the life out of him. I felt like I should come to his rescue. \n\nMy curiosity got the best of me. I had to see her technique. I got up off the bed and sat down on the end of the couch. Vicki came up off of Charlie and smiled at me. It seemed she was reading my mind. She went back to work on Charlie slowly and instructionally. I watched intently. \n\nI realized that my earlier breakthrough (my \u201ccocksucking epiphany\u201d as I had thought of it) was a sham. What Vicki was doing made my efforts seem like a tease. Like I have told you before, I was never a big fan of giving head, but watching Vicki seemingly eviscerate Charlie through his quivering erection fascinated me. \n\nCharlie\u2019s penis would submerge into her mouth quickly. When she came up, she seemed to take the skin with her. Charlie\u2019s pubic hair would rise up his shaft with the tug on his skin, and then descend in a kind of optical illusion as Vicki\u2019s head was still coming up. As she kept repeating this procedure, Charlie carried on like a madman strapped to a gurney. He clenched and unclenched his fists. The veins in his neck stood up. Gurgles and grunts escaped his lips uncontrollably. Occasionally he would slap the seat cushion or the back of the couch. I half expected him to yell uncle. \n\n\u201cCharlie should have to pay a lot more than forty bucks for this,\u201d I couldn\u2019t help but speak my mind.\n\n\u201cForty?\u201d Charlie looked at me incredulously, but only for an instant, and then he succumbed to his pleasure. \n\nVicki came up for air. \u201cCome here and watch.\u201d She pushed Charlie\u2019s legs farther apart, shifted her weight to the side, and patted the floor next to her. \u201cThis is just stage one.\u201d\n\nStage one? I wanted to be closer to her. I stood up.\n\n\u201cTake off your robe. We\u2019re all friends now, remember?\u201d Vicki said as she smiled at me as she gave Charlie\u2019s penis a few friendly tugs. \n\nI took off my robe. I was naked and barefoot, like her, like Charlie. I joined her between Charlie\u2019s legs. \n\nShe whispered to me, \u201cI bet you don\u2019t like giving head.\u201d\n\n\u201cNot really,\u201d I responded. She winked at me.\n\n\u201cI didn\u2019t, either, but then you fall in love, and things change. It\u2019s a good thing to know how to do well. Trust me. And this! This is a handsome specimen, dear. You need to keep it happy.\u201d We laughed. \u201cWatch.\u201d\n\nI watched. She proceeded as before. Charlie squirmed. Then she took the base of Charlie\u2019s shaft in her hand. With her lips over the center of the penis, she appeared to suck in, creating a vacuum. As she brought her head up and down, his skin moved over the shaft. She did the same with her hand, but alternated, moving her hand in the same direction as her lips, and then in the opposite direction. Her pace quickened. Charlie was gripping the seat cushion, and his knuckles were white. I could tell Charlie was just about to come from experience, and just as I was about to say something, she released him. \n\n\u201cThe real trick,\u201d she said to me quietly, and as I leaned forward I realized that we were essentially huddled around Charlie\u2019s cock like we were inspecting a fascinating piece of jewelry, \u201cis to roll and squeeze with your tongue as you go. It\u2019s like a hand job and a blow job all in one.\u201d\n\nCharlie made a sound like he needed medical attention. Vicki rolled her eyes and we giggled. \n\nShe put her lips next to my ear. \u201cWhen you\u2019re my age, dear, you need to know how to keep a man happy.\u201d Her comment obviously amused her.\n\nI tried to memorize her features. I wanted to remember her. I wanted to know what she knew. As I stared at her, she kissed me. Her mouth was wet and hot. She withdrew, and her smile was contagious. I looked away at Charlie\u2019s cock. It was glistening wet and enticingly thick. \n\n\u201cGo on, give it a try.\u201d\n\nI tried to go all the way down on Charlie, but I felt like I was going to choke.\n\n\u201cDon\u2019t be so gentle with it, Annie. It\u2019ll give.\u201d\n\nI tried again, more aggressively, and she was right. When I came up, I pulled Charlie\u2019s skin into my mouth. I think I had it. I tried the hand-job/blowjob technique, and while I can\u2019t say I mastered it, I got the hang of that too. \n\n\u201cLet\u2019s do this right, give him the full treatment,\u201d Vicki whispered to me. She told me to get on the couch next to Charlie. I crawled up on the couch and sat on my heels and bent forward so I could take Charlie\u2019s cock in my mouth. \n\nVicki stayed between his legs and took his balls in her mouth and lolled them around. I watched her as I worked on Charlie\u2019s shaft with my newfound prowess. She tugged at his sack, pulling it away from him. She licked and suckled him. And then she started to hum and moan, and I could feel the vibrations resonate up Charlie\u2019s penis and into my mouth. Our faces were close, and with all the slurping and moans of pleasure, I thought of us working a big banana split from different ends \u2013 she got the cherries and I got the banana. \n\nVicki disengaged. \u201cTry making some noise, sweetie,\u201d she whispered to me. \u201cIt will drive him crazy. Follow my lead. And Charlie, scoot down just I bit, honey.\u201d\n\nCharlie adjusted himself and I came up for a little air. I watched Vicki moisten her fingers and slip them between Charlie\u2019s pinched up bum cheeks and I assumed she was aiming to massage Charlie\u2019s bumhole while we worked. This really was the full treatment, I thought. \n\nI took his cock back in my mouth; Vick went back to suckling his balls. Vicki\u2019s hums and moans turned to more guttural groans and after a while I was thinking she sounded like a frenzied porn queen (though \u201cDeep Throat\u201d is the only porn movie I have ever seen \u2013 a field assignment for a psychology class, if you would believe \u2013 so consider the source.)\n\nI got to humming and figured out that I could get the most vibration by making a sound like cow moaning. It was like Charlie was enjoying an inverted vibrator, with the added advantage that my mouth was wet and slippery, and it sported a tongue.\n\nCharlie was tensing all his muscles, and his face was so clenched up I thought is might disappear. He started making noises, gurgling and sputtering at first, and then he started groaning along with us. We sounded like a heard of agitated cows.\n\nI was working him faster now. Charlie\u2019s cock was drenched, and it slipped in and out of my mouth with no resistance. Charlie was alternating between petting my back and bum with his hand, and slapping it on the couch like he was in pain. I heard Vicki\u2019s voice.\n\n\u201cTell me when you think he is close.\u201d \n\nI was actually starting to work up a sweat on my brow, and I was hopping he was getting close. Then a felt the telltale twitter in his loins. I sat up.",
        "\u201cHe\u2019s close,\u201d I said.\n\nVicki released Charlie\u2019s balls and worked her mouth until she was able to drizzle her hand with spittle. Then she grabbed Charlie\u2019s cock and stroked him with incredible speed. I could now see that with her other hand she working his bumhole vigorously. Charlie was now straight as a board with his head tilted all the way back. I watched, and I was turned on, and I moistened.\n\n\u201cC\u2019mon, honey,\u201d Vicki cooed, \u201ccome for mama, baby.\u201d My eyes went wide. \u201cThat\u2019s it,\u201d she continued, \u201cthat\u2019s a good boy, come as hard as you can, baby. Come for mama now.\u201d She was stroking him furiously, twisting her wrist with each beat. My eyes went wider. My pussy ached.\n\nAnd then a sound came out of Charlie like he had swallowed a gaggle of honking geese. I didn\u2019t think my eyes could get wider after the incestuous imagery, but they did. Charlie\u2019s hips jerked, and a rope of cum shot up in the air with such force I thought it was headed for the ceiling. And then another eruption burst forth before the first had started its descent. By the time Charlie was through, it looked like a madman with a squirt gun full of hand lotion had attacked him. \n\nI was hot. Vicki and I looked at each other. I wondered what now? Vicki took my hand and we stood up. And then I attack-kissed her. I was anxious with desire. I pulled Vicki into me aggressively \u2013 an abundance of soft, hot naked flesh, my youthful flesh, her womanly flesh, seemingly fused in our embrace. I was kissing her so strongly and passionately I was lightheaded. \n\nCharlie was irrelevant. Vicki maneuvered us to the bed and we fell on it. We pawed at each other. I couldn\u2019t wait to get my hand between her legs.\n\nWe lay side by side, each with a hand buried in the other\u2019s crouch, groping wildly. We kept kissing.\n\n\u201cWhy am I so hot?\u201d I panted into her mouth.\n\n\u201cMe too,\u201d she replied.\n\nShe rolled on top of me and buried her face in my breasts. I lost contact with her fleecy-soft pussy. She sent two fingers into me and explored my heat and wetness. She nuzzled and kissed my breasts. I felt it again; she was working her fingers into the front of my vaginal wall, like Amy had, my G-spot (how glorious!). Within moments I was coming.\n\nThen she ascended and kissed me, and I rolled on top of her and returned the favor.\n\nWe had been lying side by side for a spell, petting and caressing and kissing and cuddling, when I finally wondered about Charlie. I leaned up and looked. He was sitting on the couch, apparently all cleaned up, watching us. I smiled and lay back down. I supposed it was time to leave. I was wrong.\n\n\u201cDo you want Charlie to make love to us,\u201d Vicki said. \n\n\u201cUs? How?\u201d I whispered quizzically.\n\n\u201cI\u2019ll show you,\u201d Vicki replied.\n\n\u201cHe may not be\u2026\u201d\n\n\u201cHe\u2019s twenty, dear; he\u2019s fine.\u201d\n\nI looked again at Charlie. He was gently petting a near-full erection in his lap.\n\n\u201cHere,\u201d Vicki offered, and she pulled me on top of her again. I was straddling her hips, and she pressed the tops of her thighs against the backs of mine and spread her legs out, which spread mine. We kissed. She kneaded my bum, and then adjusted herself so that she could get the tips of her fingers on my labia. And then she spread them, exposing my pinkness. \n\n\u201cCharlie dear,\u201d Vicki called out, \u201cwould you be so kind.\n\nOur breast were warm fluffy pillows between us. We kissed. Charlie crawled on the bed and situated himself between our legs. From the corner of my eye I could see that he was steadying himself with his hands on Vicki\u2019s wide-spread knees. \n\nVicki spread me wider. I closed my eyes. Charlie entered me. When he began to buck, he was coming up into me, like he was bouncing up off his heels as opposed to moving in and out from directly behind me. His cockhead would push against the back of my vaginal wall, at the opening of my vagina, and then run against it until he was fully in me, pressed against my cervix. It was a new and astounding sensation.\n\n\u201cDoes that feel good, Annie?\u201d Vicki asked breathily. I put my face next hers and braced myself. She breathed into my ear. \u201cDo you like that Charlie is fucking us?\u201d \n\nVicki is a talker, I thought.\n\nAnd yes, I liked that Charlie was fucking us.\n\nCharlie thrust harder with each stroke, and with each bump up into me he lifted my hips up. Again and again he bumped into me, and I could feel the swelling inside, the heat building, the focus of my consciousness narrowing.\n\n\u201cAre you going to come, Annie,\u201d Vicki said kissing my earlobe.\n\n\u201cUh huh,\u201d I grunted.\n\n\u201cLet me hear you come.\u201d\n\n\u201cOh god!\u201d I exclaimed. \n\nNow she held me tightly, immobile, and Charlie fucked me \u2013 us! \n\n\u201cI\u2019m gonna come,\u201d I said too loudly.\n\n\u201cThat\u2019s it, sweetie, let it all go. Come with me,\u201d Vicki moaned and then she started to coo and moan like she was coming. I did as she suggested. I let go. And I came, and I screamed out girlishly, and I truly felt like Vicki was coming with me. \n\n\u201cGood girl,\u201d Vicki said. I was glad she hadn\u2019t conjured the incestuous imagery again. We were just two women of the world, enjoying a healthy, good ol\u2019 fucking.\n\nAnd then I could tell Charlie was going to come, and I didn\u2019t want him to.\n\n\u201cNo, wait Charlie. I want you to fuck Vicki.\u201d I was momentarily disoriented hearing that come out of my mouth. It was true, however.\n\nI crawled off of Vicki and I rolled on to my side against her and stroked her breasts. We kissed. Her skin smelled faintly of rainwater. As we kissed, a strange sensation came over me. I realized at that moment how much older than me she was. We had been drawn to each other because we thought we looked alike, but we were nothing alike. I couldn\u2019t possibly have known what she knew. I tried to see the evening through her eyes. It both excited me and depressed me. I couldn\u2019t figure out why.\n\n\u201cAre you sure?\u201d Vicki whispered to me.\n\n\u201cIs that what you want?\u201d\n\n\u201cYes, very much, but I want to be you when he does it.\n\nI don\u2019t care, I thought. I nodded at Charlie, letting him know I wanted him to do it. I wanted Charlie to fuck her. I wanted him to fuck us both simultaneously, if he could. All right, I don\u2019t know what I wanted; I suppose I just wanted the fucking to continue. And I wanted Vicki to be happy.\n\nHe held himself above her with his arms straight out, his hands outside her shoulders. She pulled her knees up. Charlie pressed into her. I rested on my side and watched. Vicki pulled Charlie down against her. She wrapped his waist with her legs, very much like I would have done, I thought. \n\n\u201cDo you want me, Charlie?\u201d she said in a raspy voice.\n\n\u201cYes.\u201d\n\n\u201cTell me.\u201d\n\nCharlie was easing into her. \n\n\u201cI want you, Vic\u2026\u201d\n\n\u201cShh, Charlie. It\u2019s Annie, Charlie. Go ahead, it\u2019s okay\u201d\n\nI thought Charlie would be confused. He didn\u2019t miss a beat.\n\n\u201cI want you, Annie.\u201d\n\n\u201cDo you want to fuck me, Charlie?\u201d\n\n\u201cYes.\u201d\n\n\u201cThen fuck me, Charlie. Fuck me hard. And call out my name, Charlie.\u201d\n\n\u201cOh, Annie.\u201d\n\n\u201cYou feel so good, Charlie. You feel so big and hot.\u201d Charlie was bucking into her, and she continued to pull him into her. She kept talking in a low, raspy voice. \u201cYou are so beautiful, Charlie. You are every woman\u2019s dream. Oh, I feel you so deep and hot inside of me. Do I feel good, Charlie?\u201d\n\n\u201cYes.\u201d\n\n\u201cTell me.\u201d\n\n\u201cYou feel so hot.\u201d\n\n\u201cUse my name.\u201d\n\n\u201cYou fell so hot, Annie.\u201d\n\n\u201cAm I sexy Charlie?\u201d\n\n\u201cYou are sexy, Annie. I want you so badly.\u201d\n\n\u201cThat\u2019s good. That\u2019s good, Charlie.\u201d\n\nVicki writhed and twisted under Charlie. She set down her legs and grabbed his ass in both hands. \n\nVicki shot her head back. \u201cOh Charlie. Oh, oh\u2026\u201d She shuddered \u2013 a vaginal orgasm. Just like that \u2013 easy as could be. I was jealous. \n\nCharlie sat up and grabbed her by the thighs and fucked her hard, pulling her into him and pushing her away with each thrust. Vicki\u2019s breasts shook with the thrusting. The bed rocked with the force of their fucking. I was happy for Vicki. For whatever reason, I wanted her to know it was Vicki now, not me, who was being fucked.\n\n\u201cDo you like Vicki, Charlie?\u201d I asked.\n\n\u201cYes.\u201d\n\n\u201cDo you think Vicki is sexy?\u201d\n\n\u201cGod yes!\u201d\n\n\u201cDo you want Vicki, Charlie?\u201d\n\n\u201cYes.\u201d\n\n\u201cThen tell her.\u201d\n\nCharlie leaned over her. \u201cI want you Vicki.\u201d\n\nVicki eyes closed tensely. I motioned for Charlie to get back on top of her, chest to chest, close in, the way I like it.\n\n\u201cWrap your legs around him like before,\u201d I said, and she did. \u201cWrap your arms around him,\u201d and she did. \u201cIs that the way you like it?\u201d She looked at me pleadingly and nodded her head. \u201cDo you want more, Vicki?\u201d She nodded her head yes again. Charlie kept rocking his hips, strong eager thrusting, faster and faster, and I could feel the friction building inside of her, between them, between us. \n\n\u201cFeel him, Vicki. This is what you like.\u201d My voice was oddly stern. \u201cThis is what you really wanted, isn\u2019t it?\u201d\n\n\u201cGod yes,\u201d she screamed out.\n\nI leaned even closer to her and I whispered, \u201cYou are gorgeous, Vicki. You are the most beautiful woman here tonight.\u201d\n\n\u201cThank you,\u201d she said, and she smiled at me. And I could see she was headed for another orgasm.\n\nI winked at Charlie. \n\nAnd then I got up, gathered my stuff, and left.\n\n\u201cAre you okay?\u201d Charlie asked. It took him a while to find me. He sat next to me in a booth. \n\n\u201cYes, absolutely,\u201d I replied softly.\n\n\u201cWhat was that about?\u201d\n\n\u201cWhat?\u201d\n\n\u201cC\u2019mon.\u201d\n\n\u201cI don\u2019t know, Charlie. I can\u2019t say.\u201d\n\n\u201cThat was weird.\u201d\n\n\u201cDid you like making love to Vicki?\u201d\n\n\u201cYes.\u201d\n\n\u201cDoes she remind you of me?\u201d\n\n\u201cNo.\u201d\n\n\u201cGood.\u201d That was the right answer, I thought.\n\n\u201cShe tastes like smoke and chewing gum; you don\u2019t.\u201d\n\nI laughed. Quit while you\u2019re ahead, I wanted to say to Charlie. \n\n\u201cYour not mad at me, are you?\u201d\n\n\u201cWhy would I be mad?\u201d\n\n\u201cI don\u2019t know. Were you mad at Vicki?\u201d\n\nHe had sensed it. I had been angry with her. \u201cYes, for a moment.\u201d\n\n\u201cWhy?\u201d\n\n\u201cBecause.\u201d\n\n\u201cYou know, I\u2019m not the smartest guy in the world, but you could at least talk to me. Why were you mad at Vicki?\u201d\n\nI paused and thought of what to say. I wanted to explain it to myself. \n\n\u201cI was mad at her because she didn\u2019t want to be who she was. Did you think she was beautiful and sexy?\u201d\n\n\u201cYes.\u201d\n\n\u201cWhat if she were ten years older still.\u201d\n\n\u201cShe\u2019d probably still be beautiful.\u201d\n\n\u201cBut would you find her sexy?\u201d\n\n\u201cI don\u2019t know, probably not.\u201d\n\nI looked down at the ground. I didn\u2019t feel well all of a sudden. \u201cMaybe I was mad at her because she wanted something I have, when all I have is youth and sex, and I know she has so much more than that.\u201d\n\n\u201cOkay, I\u2019m not following you now. I\u2019ll tell you what I think. I think she\u2019s scared of getting old, and I think you\u2019re being a little too damn judgmental. She ought to be scared of getting old. She just wanted to be young for a few moments.\u201d\n\nHe was right. \u201cI\u2019m over-thinking this, aren\u2019t I?\u201d\n\n\u201cSheesh. Women?\u201d\n\n\u201cSo did YOU have fun?\u201d I asked coyly. \n\n\u201cYeah, sure,\u201d Charlie said, nonchalantly, and then he sighed and laughed and said, \u201cI might not ever be the same.\u201d\n\nI was over-thinking. The music was quiet for a moment. A song started. It sounded familiar. Charlie started laughing. It was Sammy Davis Jr.\u2019s \u201cCandy Man.\u201d I laughed. Charlie pointed to a corner of the room. It was Tom with Vanessa was sitting on his lap. They were sipping drinks and kissing. \n\n\u201cWeird, weird stuff going on in here tonight,\u201d Charlie whispered in my ear. \n\nCharlie and I talked for a while. Again I was thinking it was time to go home. I was finally getting tired, I thought. \n\nI spotted Vicki coming out of the ladies\u2019 lounge, which reminded me.\n\n\u201cYou owe Vicki forty bucks.\u201d I took Charlie by the hand over to their table. Charlie pulled out his wallet.\n\n\u201cOh for god\u2019s sake put that away and sit down,\u201d Vicki said matter-of-factly.\n\nWe joined them. We ordered drinks, and Alan insisted on paying for them. I was enjoying the vodka rocks. Charlie had a gin and tonic. Vicki asked questions. The subject of grad school came up. \n\n\u201cSo when do you leave for California?\u201d Vicki asked.\n\nAnd then it hit me. Today was the answer, but I couldn\u2019t say it. Today? This very afternoon? Was that true? \n\n\u201cVery soon,\u201d I replied meekly.\n\nVicki was genuinely taken aback.\n\n\u201cYou can\u2019t be.\u201d\n\nAlan seemed just as distressed. \u201cAren\u2019t you two a couple?\u201d he asked.\n\nThere was silence.\n\n\u201cI may go out for a visit,\u201d Charlie said. \n\nI hadn\u2019t really that about it, but as I did I realized that the Blues House and Amy and Mike and Tom seemed to be fading in my memory already. But Charlie was another story. I would miss him, I thought. I would miss him more than I cared to admit, and more than I wanted to think about. He was my \u201cWizard of Oz\u201d scarecrow: \u201cI am going to miss you most of all, Charlie.\u201d \n\nAt that moment, I knew that Charlie would visit me, and I liked the idea.\n\nI looked at Charlie and smiled. \u201cYeah, he\u2019ll come out for a visit, for sure, eh?\u201d Charlie laughed at my poor effort at a Canadian accent. \n\n\u201cGood;\u201d said Charlie, \u201cthat\u2019s settled.\u201d\n\nAmy showed up at the table. I asked her if it was time to go. It was 3:00 in the morning. The crowd had thinned markedly around 2:00, but it seemed that no one had left since. She said, \u201cNo way.\u201d \n\nThere were introductions. Alan kissed her hand. Nancy Sinatra\u2019s \u201cThese Boots were Made for Walking\u201d came on. We all laughed. Amy grabbed my hand and said, \u201cCome on.\u201d\n\nShe dragged me to an open platform.\n\n\u201cNo way,\u201d I said. I was only wearing my robe and heels now.\n\n\u201cPlease. It\u2019ll be fun.\u201d\n\nI remembered my pledge. What the hell, I thought. This will be it though, I promised myself. I followed her up the steps and on to the platform. \n\nNo one was sitting at the platform when we arrived, but by the time we stood together on on top of it the ten or so seats had filled. Amy was still wearing her snap off shorts, a lacy camisole, and her spiked heel granny boots. We faced each other. \n\n\u201cNow what?\u201d I asked over the silly song. She put her hands on her thighs and swiveled her hips to the music. I mirrored her movements. We were laughing. There was clapping. Someone shouted, \u201cYeah baby, it\u2019s a go go.\u201d \n\nAmy jumped and turned 90 degrees. I swiveled in sync with her. Nancy sang, \u201c\u2026made for walking, and that\u2019s just what they\u2019ll do\u2026.\u201d I followed Amy as she took steps to the music around the platform. People were lined up behind the people in the seats now. \n\nI saw Tom and Vanessa, then Charlie and Vicki and Alan. I was embarrassed and I knew I was blushing. Amy turned and faced me again. Her smile was bright, but devious. She pulled her shorts up tight against her crotch and took a step towards me. She put her hands on my shoulders. She started to gyrate her hips in a big, slow circle. I put my hands on her hips and followed her lead: one foot out, back in, the other foot out, back in.\n\nThe song started winding down. An audible \u201caaw\u201d came up from the gathering around the platform. I could see the DJ watching us, grinning ear-to-ear. He was waiving enthusiastically, like he wanted us to wait. A new song started. Amy recognized it first, and grabbed my hand to prevent me from leaving. It was Donna Summer\u2019s \u201cBad Girls.\u201d \n\n\u201cToo cool!\u201d Amy blurted out. \n\nWe turned to face the crowd side-by-side, same step, big circular motion with the hips. I was getting the feel of it I thought. Amy pulled off her camisole and threw it on the floor to hoots and hollers from our audience. She turned to face me again. I turned away from her and pretended to by trying to get away. She grabbed my robe at the back of my neck and pulled. I let my arms down to my side and my robe fell off my shoulders and hung from the belt around my waist. More hoots and hollers. Amy came up behind me and cupped my bouncing tits. \n\n\u201cToot toot, yeah, beep beep\u2026\u201d and on the \u201cbeep beep\u201d she squeezed my tits. The audience roared their approval. Dollar bills were raining on the platform. \n\n\u201cTurn and face me,\u201d I heard Amy say, and I did. She was standing wide-legged with her hands on her hips, thumbs under the snap flaps of her shorts. I mimicked her with my hands on my hips.\n\n\u201cOn the count of three,\u201d then Amy mouthed the words. One, two\u2026. \n\nShe ripped of her shorts in perfect timing to a crescendo beat in the song. I froze. And then I was laughing.\n\n\u201cC\u2019mon!!!\u201d Amy yelled, and first she and then the crowd counted, \u201cOne, two\u2026\n\nI pulled the tie with one hand and ripped my robe away from me with the other. I would guess there were only thirty or forty people watching, but I momentarily felt like I was on the stage at Woodstock. \n\nSo there we were in all our glory, Amy buck-naked in boots, me buck-naked in heels, facing each other, feet apart, hands on our hips, triumphant. \n\n\u201cHey mister, have you got the time\u2026.\u201d \n\nI loved the way it felt. Amy started shaking her tits, and I mimicked her again, except my tits were so big they didn\u2019t get the same effect. They seemed to slosh around in front of me. How ridiculous I thought. The crowd started to clap. \n\nShe stepped up to me, reached around me, slapped her hand against my ass and pulled me against her. I was a head taller than she was. I wasn\u2019t sure what she wanted me to do. She pushed out one of my feet with one of hers. I kicked off my heels and spread out my legs. She stood up straight and leaned back a little and pressed her pubic mound against mine. I grabbed her ass, she grabbed mine, and we did a grind. \n\nCheers went up. Amy\u2019s pubic mound was coming up into me, and her patch of pubic hair was rubbing up against my clit. I tossed back my head, dangling my hair, and swayed to the music. Amy slid down, out of my grasp. I looked, and she was doing a forward split between my legs. She grabbed on to my thighs on the way down and buried her face into my pussy. She latched onto my clit, and the sensation shot through me. I put my hands behind my head. My hips undulated with the music against Amy\u2019s mouth. \n\nI looked around the room. They seemed like familiar faces: the four frat boys; Rita and Melissa (with some hunky looking guys); Ted (I hadn\u2019t notice he was still there); Bobby and Andy and Wayne (all former lap dance partners \u2013 I always asked for their names); The Big Guy; the torpedo-breasted, bleach blondes; Mike (who was arm and arm with a pretty, heavy-set girl wearing too much makeup); Tom and Vanessa; and Vicki and Alan and my Charlie. That\u2019s what I thought when I saw him anyway. \u201cMY Charlie.\u201d I closed my eyes.\n\nI rocked my hips. I kicked out one leg and swung it over Amy\u2019s head, pulling away from her. I grabbed the bar at the center of the platform. I closed my eyes and swayed. I pulled my self up to the bar, and then I squatted, legs splayed, till my pussy pressed against the cool brass (I had seen the other girls do it, and it just seemed like the thing to do at the time). The thought that came to me just then caught me by surprise. I couldn\u2019t wait to get home and sleep, really sleep with Charlie? \n\nAmy was collecting the money from the floor. She winked at me. I heard a strange agitation from the crowd. A new song was starting. I didn\u2019t recognize it. It had a furious beat and deep, melodic bass notes. Applause, then more applause. I didn\u2019t understand. I turned and saw Dare ascending the steps. \n\nHe was in his beach pants only, barefoot and bare-chested, and I stood up and backed up against the bar. All of a sudden, I was nervous as hell. I held on to the bar behind my back with my ass against my hands. Dare strode over to me. He leaned against me. He put his face next to mine.\n\n\u201cRelax,\u201d Dare said. \u201cAmy put me up to this. We can just dance, make a little money.\u201d\n\nHe backed up and looked into my eyes. \u201cYou look great.\u201d \n\nI looked down at myself. I was naked on a stage in a room full with people milling about and a man with a cock the size of a Kosher salami was staring me down. Another song broke, like the first had been an intro, and I recognized it. \u201cThat\u2019s the Way (uh huh uh huh) I Like it\u201d by K.C. and the Sunshine Band. Dare spun away from me and started to bucking his hips and moving about the stage. I felt awkward and silly. Amy came up behind me.",
        "\u201cCome on Annie. Shake it baby!\u201d\n\nThen Dare came up behind me and patted my ass. I was startled. I stepped forward. He stepped around the bar and put his hands on my hips. He pressed up against me from behind, slithering and swaying to the music. I closed my eyes and reached behind me and put a hand behind his head. His hair was free and long, and it tickled my shoulders. I swayed with him. He put a hand on my tummy and pulled us together. I could feel his massive cock begin to stiffen against my ass. \n\nThe song filled my head and made me laugh. He kissed my neck. I kept my eyes closed. His hand slipped down to my pubic mound. The other hand followed. He pressed his hands into my mound. I wiggled my ass against his stiffening cock. \n\nI turned to face him. Now his hands were on my ass. I grabbed his ass and pulled. His buns were rock hard. He turned around on me. I ran my hands over his chest and stomach. I grabbed his oblique muscles and squeezed. His muscles were taught, his flesh was smooth and hard and rippled. He undid the drawstring to his pants, and just as the music hit \u201cahhhh\u2026that\u2019s the way\u2026,\u201d his pants slipped down to his ankles. \n\nThe crowd cheered. Holy shit! He was not wearing his thong. \n\nHe put his hands behind him and pressed them on my hips and gripped me firmly, making my hips move with his. I ran my hands over his stomach. I couldn\u2019t help myself. I had to feel his cock. I was just going to feel his cock, and then I was going to get off the stage. I figured this was a once in a lifetime deal, right?\n\nI took the base of his cock in one hand. It was marvelously thick and warm. It grew harder in my hand. I rested the side of my face against his shoulder blade and squeezed the massive wonder. We swayed, I stroked him, and the crowd hummed with excitement. \n\nHe turned and moved behind me this time. I felt his dick begin to slide up against the crack of my ass, hot and hard and huge. He pulled me against him with his hands over my stomach. His cock covered the entire length of my ass. It was heavy against me. I couldn\u2019t get away. \n\nWe swayed a few times, and then with the beat of the music he pushed up against me. He pulled back, and the next time he pushed against me, his cock shot between my legs like a ramrod. I looked down, and his penis was visible in front of me now. It was like I had sprouted a thick, stubby penis head. He rocked back and forth and the flaming heat spread up from my twat and engulfed me. \n\n\u201cAwww, that\u2019s the way, uh huh uh huh, I like it, uh huh, uh huh\u2026.\u201d The music blared.\n\nThen Amy was on stage in front of me, naked in her granny boots. I wondered where she had been. She knelt down in front of me. She took the head of Dare\u2019s cock into her mouth. She sucked on it, and as she did her nose and lips pressed into my swollen twat, against my clit. I watched her. Dare reached around from behind me and took Amy\u2019s head in his hands. He pulled her into us. I held onto his arms. I closed my eyes. There was more applause and now rhythmic clapping.\n\n\u201cGrab hold of the pole,\u201d Dare said, and then I noticed the pole in front of me, a few feet behind Amy. And I knew what was going to happen if I bent forward and grabbed that pole.\n\nDare pulled back. Time stopped for a moment.\n\nNow I have tried to imagine, on occasion and just for the fun of it, what might have happened if I taken a hold of that pole just then. In my imagination, where I am invulnerable to the raw emotions wrought by reality, it goes something like this:\n\n*****\n\nI bend over and grab the pole. Amy\u2019s mouth lets go of me. The tip of his cock starts into me. It is a slow entry. I close my eyes and grit my teeth in anticipation. Cheers swirl in the air. Amy nuzzles and sucks at my tits while the giant organ presses on deep inside of me. My vagina feels tight and small against the encroaching member. It keeps coming into me until I feel like I can\u2019t give anymore, and then it withdraws slowly. \n\nBig hands grip my hips. Small hands hold my waist. I open my eyes, and I can see our reflection in a mirror across the room, fleshy hues bleeding into one amorphous, androgynous form. I see Charlie and Alan and Vicki watching me. She smiles at me. Then Dare begins bucking into me with more force and energy. More applause.\n\nI look around the room. At various booths I see naked women sitting on men\u2019s laps, or naked women kneeling with their heads\u2019 in men\u2019s laps, and all the men are watching me leeringly. \n\nHe plunges into me fully; I feel the head of his penis well up inside of me, pressing against the limits of my sanctum. Yet more cheers, more applause. Amy feasts on my swinging breasts. Dare pumps into me. I quiver and shudder and a white-hot light seems to fill me. I grip the pole with all my might. I hear my cry wring out. \n\nI close my eyes and throw back my head. More white-hot light rips through me. I am drowning in the energy of the crowd. I can see all there faces all at once. They are watching me, and now they are feeding me their energy, it is inside of me now, welling, bursting, until I become the energy \u2013 white-hot light. Was this it \u2013 the fifth dimension? A warm fluid down my legs: a gusher? I am moaning, bellowing. Howls from the crowd now.\n\nHe pulls out of me. His giant penis slides up against my ass. He grips it with both hands, and yet I feel a long portion of his steamy hot prick rubbing against my ass. People in the seats are coming to their feet, peering at me and around me. I hear him groaning, and then like a fire hose, he lets loose on me. I feel his sticky liquid gush onto my back and into the crack of my ass and all over me. \n\nThe crowed cheers wildly. Hollers fill the room. He keeps coming in spurts, oozing more and more cum onto me. I finally stand up, and Amy, like a mother cat, begins to lick my sopping pussy clean with her tongue. I am splattered with fertile seed. I am defiled and fouled and utterly corrupted. Amy stands up and hugs me. She rubs my ass and smears my back with his cum. We kiss to seal my fate, and her mouth is burning with the flood of my feminine ejaculate. She works his cum into my ass. She spreads it all around. We keep kissing to a standing ovation. I am accepted.\n\n*****\n\nOr so that\u2019s how I have sometimes imagined it. There are other scenarios, but there is always one part that remains the same. In my imagination, at the moment of my climax, with Dare\u2019s enormous cock savagely stabbed into my cervix, I am beset by visions that remind me a the scene in \u201cRosemary\u2019s Baby\u201d: It is the one where Mia Farrow finally recalls being raped by the Demon during what otherwise appears to be a pleasant cocktail party. Remember? Her husband and her kindly old neighbors and the rest of their unassuming satanic coven are there, sipping away politely, encouraging the demonic violation. \n\nI know, it is kind of creepy, but it always comes to me when I imagine it, and it is the best way to describe exactly what I felt when I decided to get off that stage. \n\nI felt like I had one moment to make a decision that would affect me for the rest of my life. I suppose the allusion to a satanic ritual is a little dramatic; I didn\u2019t think there was anything \u201cevil\u201d about what was happening. But I disagree with Amy\u2019s insistence that there was no line I could cross, nowhere I could go that I couldn\u2019t come back from. I truly felt that I had been about to cross that line, to go to that place. If I had let Dare enter me on that stage, if I had experienced the white-hot orgasm I now only imagine, I am quite certain that my life would have changed; I would have ceased to be the person I know I am in my heart.\n\nWhich is all to say that I simply decided at that precise moment that this whole crazy underground sex scene wasn\u2019t my thing.\n\nSo what really happened is this: I said, \u201cI can\u2019t do this Amy,\u201d and I swung my leg over her head and stepped away from Dare.\n\n\u201cYou two will have to finish without me,\u201d I said as cheerily as I could. There were a few boos from the crowd, but I certainly didn\u2019t care. \n\nI picked up my robe and shoes and put it on the robe as I descended the steps. I walked by the table where Charlie and Alan and Vicki were seated, all looking a little dumbfounded. I told Charlie I would be right back. I went to the ladies lounge and got into the shower as quickly as I could. \n\nAnd then I took a deep breath and thought about my future and my life.\n\n\u201cAnnie?\u201d There was a whisper from the entryway behind me, and I turned. It was Charlie. \u201cI didn\u2019t see anyone, so I\u2026 just wanted to make sure you were all right.\u201d\n\nI stood there naked, dripping wet, and I didn\u2019t know what to say.\n\n\u201cThank you Charlie. I\u2019m fine,\u201d I said finally. \u201cIn fact I feel great.\u201d\n\nI had made some decisions.\n\nCharlie looked so sweet, furtively peeking around the wall at me, like he didn\u2019t want to embarrass me. \u201cOkay, I\u2019ll just wait... I\u2019ll be outside then.\u201d he said quietly.\n\n\u201cI will be right out, Charlie.\u201d\n\n\u201cI knew you were fine, but I was just making sure, you know?\u201d\n\nAnd he was gone before I could thank him again.\n\nWhen I came out of the lounge I was wearing my jeans and a white blouse. Charlie was still sitting with Alan and Vicki. It looked like the show was over. I didn\u2019t want to talk to anyone but Charlie. I took Charlie by the hand and asked him to follow me. I apologized to Alan and Vicki.\n\n\u201cWhere are we going?\u201d Charlie asked a little confused.\n\nI found a quiet corner and I motioned for him to sit down.\n\n\u201cI want to give you a different kind of lap dance,\u201d I said softly.\n\nI sat in his lap sideways and I put my arm around the back of his neck. I put my head on his shoulder, and I asked him to hold me. He brought his arms up around me, in the same way he had carried me off that one night, the night I suppose I first felt what I was now feeling again for Charlie.\n\n\u201cI just want to be with you from now on,\u201d I whispered in his ear.\n\n\u201cGood,\u201d he said, and then he kissed me.\n\nWe sat there, cuddled like that, and as Charlie held me and petted my head I realized something important.\n\nI needed to make a major revision to Annie\u2019s Four-dimensional Theory of the Orgasm. Yes, there was most certainly a fifth orgasmic condition, a fifth dimension \u2013 an absolute perfect ten. I knew that because I was experiencing it at that very moment.\n\nIt is called love.\n\n*******\n\nEpilogue One: That Night\n\nThe music ended and it was quiet. Gradually the lights came up.\n\n\u201cIt\u2019s four o\u2019clock,\u201d Charlie said looking at his watch.\n\nI purred out a whine and snuggled closer to him. He kept holding me and petting my head.\n\n\u201cExcuse me lovebirds.\u201d \n\nIt was Vicki\u2019s voice. I looked up at her with sleepy eyes. Alan was standing behind her and he nodded at me. Vicki handed Charlie a sheet of paper.\n\n\u201cAlan and I want to do this for you two.\u201d\n\n\u201cWhat is it?\u201d I asked.\n\n\u201cIt is directions to our summer home.\u201d\n\nI was confused. At first I thought she was trying to invite us to there place for something like a date, and I definitely didn\u2019t want that. I meant what I had said to Charlie. \n\n\u201cAlan and I are off to Montreal for a week. We leave later today. The place will just be sitting there, empty and lonely. So we thought maybe you two would be interested in getting away for awhile.\u201d She waited for a reply.\n\n\u201cYou know, before you run off to California,\u201d Alan added.\n\n\u201cI don\u2019t know,\u201d I said startled. \n\n\u201cOh, for heavens sake, don\u2019t say no,\u201d Vicki pleaded.\n\nI looked at Charlie in confusion.\n\n\u201cHow would we get in, I mean if we were to go,\u201d Charlie asked.\n\n\u201cThere\u2019s a gate on the road going into the lake,\u201d Alan said as he stepped closer to us. \u201cYou just tell the gatekeeper that you are Annie and Charlie. Someone from security will escort you to the house and let you in. They\u2019ll be expecting you at anytime; I\u2019ll see to it. It\u2019s in your directions.\u201d\n\nThere was nothing from Charlie and me but blank looks.\n\n\u201cOh now, don\u2019t let all the security stuff scare you. It is nothing more than a glorified cottage on a secluded little lake. There are only a few homes on the lake, so it is very private, and very\u2026\u201d\n\nI wanted to do this. It was perfect I decided. I had four weeks before classes started. I could afford a week. \n\n\u201c\u2026romantic,\u201d Vicki concluded. She waited.\n\n\u201cThank you,\u201d I said finally. \n\n\u201cCome on Vicki,\u201d Alan said.\n\n\u201cThank you,\u201d Vicki said slowly and earnestly to me.\n\nAlan took Vicki\u2019s arm. \u201cOh, and I\u2019ll leave a number to call if you have any trouble with the boat,\u201d Alan said as they walked away.\n\n\u201cBoat?\u201d Charlie and I said in unison. \n\nI got off Charlie\u2019s lap and stretched. \u201cHow interesting,\u201d I said coyly.\n\n\u201cYou mean you want to go?\u201d Charlie asked as he stood up.\n\n\u201cYes, if you do.\u201d\n\n\u201cIt is such short notice,\u201d Charlie said somewhat desperately, and, ridiculously, my heart dropped. He smiled. \u201cOf course I\u2019ll go. How could I refuse an adventure with you?\u201d\n\n\u201cA quiet adventure this time,\u201d I replied.\n\nAmy came over two us. She had changed into her street clothes and she was carrying our beach bag.\n\nShe was excited as she told us about how Tom was going home with Vanessa. \u201cShe\u2019s the perfect girl for him, really.\u201d We laughed. She said that Mike had fallen for some \u201cblondie bimbo\u201d that was tagging along with Amy\u2019s circle of friends from the club.\n\n\u201cDavid has this huge suite atop the Ren Cen for tonight,\u201d Amy started, \u201cand a bunch of us are going back there to party, so you guys can have the car. I will watch out for Mike and make sure we get back to the Blues House.\u201d \n\nThen Amy got a mischievous look on her face. \u201cYou guys want to come party with us.\u201d\n\n\u201cNah,\u201d we both replied. The Ren Cen, or Renaissance Center, was a swanky seventy-story hotel right where the bridge would deposit one back into the U.S. I am sure it was an amazing suite, but I couldn\u2019t help to think that was trying way too hard to party.\n\n\n\u201cI knew you wouldn\u2019t, but you are absolutely invited. David was very disappointed,\u201d she said accusatorily, pointing her finger at me, \u201cand he was definitely hoping to see you again.\u201d\n\n\u201cWhat,\u201d Charlie sputtered.\n\n\u201cNot going to happen,\u201d I said smiling. I would explain that David was Dare to Charlie later, if he asked.\n\n\u201cYeah, I know. I know,\u201d Amy sighed, smiling and giving me a knowing look. There was a pause.\n\n\u201cI guess I won\u2019t see you before you\u2019re off for California,\u201d Amy said, and now she was pouting.\n\n\u201cI don\u2019t know what my plans are anymore,\u201d I said to Amy with my own knowing look. She smiled.\n\n\u201cWell, just in case,\u201d Amy said coming towards me.\n\nWe hugged and I didn\u2019t know what to say, so I said, \u201cI\u2019ll never forget you,\u201d and I knew that was an understatement. \n\nAnd then Amy did the strangest thing. She hugged me like we were brothers, firm and strong, and leaned up and whispered in my ear. \n\n\u201cI am proud of you.\u201d And then more loudly, so Charlie could hear: \u201cI like a girl who knows what she wants.\u201d\n\nAnd what she doesn\u2019t want, I thought. \n\nAmy asked if we would take the beach bag home. \u201cOh, I almost forgot,\u201d she said suddenly, and she reached into the bag and handed me a huge roll of bills to me. \n\n\u201cYour share,\u201d she said, and then she whispered to me. \u201cIt could have been a lot more.\u201d\n\nThat was the last time I ever saw Amy.\n\nI fell asleep leaning against Charlie on the ride home. I woke up and the world was glowing amber in the sunrise. \n\n\u201cCharlie?\u201d\n\n\u201cYeah.\u201d\n\n\u201cDid I embarrass you?\u201d\n\n\u201cNo.\u201d\n\nThere was a long pause. I tried to remember Amy\u2019s words, and then I asked my question. \n\n\u201cDo you think I\u2019m a dick-loving fuck slut?\u201d I asked meekly.\n\n\u201cDepends.\u201d\n\nI shot up and slugged his shoulder. \u201cIt depends? On what?\u201d\n\n\u201cDo you want to be a dick-loving fuck slut?\u201d\n\nIt was quiet for a moment. \u201cIt was fun,\u201d I said. \u201cFun, but really weird sometimes, too.\u201d \n\n\u201cAnnie?\u201d\n\n\u201cYes Charlie.\u201d\n\n\u201cYou can be MY dick-loving fuck slut, if you want.\u201d\n\nWe both laughed. He put his arm around me and I kissed him on the cheek. \n\n\u201cOkay. I\u2019d like that,\u201d I said.\n\n*******\n\nEpilogue Two: And Then The Rest of My Life\n\nVicki and Alan\u2019s \u201ccottage\u201d was spectacular. It was like a movie set. There were big moss rock fireplaces in seemingly every room in the house, and Charlie and I made love in front of each one of them. We slept in every morning, luxuriating in the giant canopy bed. We took rides around the lake in the vintage wooden Cris-Craft motorboat we found in the boathouse (yes, boathouse). Mostly, though, we talked. I never wanted it to end.\n\nIt rained in torrents one night. The deck off the living room was covered, and it was warm even in the rain, so we left the sliding glass door open. We made love in front of a roaring fire with only the rain for our music. It was a languorous session, and afterwards I got a craving for hot chocolate. \n\nI had loved hot chocolate as a little girl, and I hadn\u2019t had any in years, and with the rain and the fire it just seemed mandatory. I searched the shelves for hot chocolate in a frenzy. I made quite a production out of it, and Charlie got to laughing. I finally found some in the pantry, and I went through the trouble of making sure the water was the perfect temperature and the cups had just the right amount of cocoa. \n\nI finally sat down with Charlie in front of the fire. We were sitting cross-legged, facing each other in big terry cloth robes, and I was fussing over how much Charlie liked his hot chocolate.\n\n\u201cNo, but do you really like it?\u201d I asked for the third time. \u201cI could heat it up.\u201d\n\nHe wouldn\u2019t answer me. He just stared at me bemusedly. \n\n\u201cWhat,\u201d I finally said.\n\n\u201cI love you, Annie Malone.\u201d\n\nMy heart soared. I had wanted to say it a hundred times, but I had wanted to hear him say it first. Not because I was stubborn. It was because, after all we had been through, I needed to believe it, to know it was true.\n\nI started to cry (of course). It was hard for me to talk through all my blubbering. \n\n\u201cWell, fine;\u201d I managed, \u201cto hell with the goddamn hot chocolate then!\u201d And then I moved our cups to the side and attacked him. \n\nCharlie transferred to the University I was attending a semester later. We drove back to California together after Christmas, and he lived with me in a cozy little apartment on the top of a hill near campus. We got married in the spring of 1982. We are still married, and we are still very much in love. \n\nWhen our daughter went off to college last year, I worried for her. It is what made me write this down. I tried to think of what lesson I had learned from my experiences. \n\nI told her this \u2013 inthe end, it\u2019s always about love. Love for life, love for friends, love for yourself, and the true love of another human being. Have as much fun as you possibly can, I said, but know that sooner or latter you are going to find something missing and want something more. When the time comes, don\u2019t search for more sex or drugs, or for another party -- search for love. Love is the only thing in life that can fulfill you, and satiate the hunger in your soul. Search for love, and from then on whatever happens will be for the best. \n\nI will tell our son the same thing when he leaves for college. My heart aches to think of them leaving us. Whatever they experience, I hope they experience it with love in their hearts. \n\nAnd I hope to God they never find out about my summer as a naughty, sex-crazed, dick-loving fuck slut. \n\nYou CAN keep a secret, can\u2019t you? "
    ],
    "authorname": "C.C. Rider",
    "tags": [
        "annie charlie",
        "walked charlie",
        "good charlie",
        "god vicki",
        "charlie alan",
        "nodded charlie",
        "charlie penis",
        "stage felt",
        "pay dance",
        "breasts charlie"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/a-summer-in-the-flesh-ch-14-15"
}