{
    "title": "I Won't Hurry You",
    "pages": [
        "Chapter 1\n\nSome Years Ago\n\n..........\n\n\"I won't hurry you,\" she said nervously.\n\nShe had stepped in front of me on the street, which forced me to stop walking. She was about five-foot-six, slender with medium breasts. Her hair was blonde\u2014almost white\u2014and her eyes were deep blue. Her skirt and blouse were blue and had seen better days. The top three buttons of her blouse were open showing a good amount of naked chest.\n\nHer complexion, where I could see skin, was flawless and her teeth were a brilliant white. If she smiled, she would be a beauty,\n\nHowever, there was no smile. She was nervous, almost scared, as she continued, \"You can take as much time as you want, Captain.\"\n\n\"I'm a Lieutenant,\" I answered abruptly.\n\nI was pissed and had been in that state of mind for almost three weeks\u2014and now some hooker calls me a captain and wants some action.\n\nThe events leading up to me staring at a German hooker speaking English with a slight accent had taken five years. My asshole father had left my mom and me years ago never to return. My mom struggled to put me through high school and we both knew there was no money for college.\n\nWhen I was a senior in high school they had a vocation day that I attended. A US Army recruiter occupied one of the booths. We talked and he explained how the Army would put me through college\u2014at least tuition, board and books\u2014with the \"only\" requirement that I take some required military courses during college, give the army a month of my time each summer, and then serve a four-year enlistment. And to sweeten the proposition, they would make me an officer.\n\nIt wasn't the greatest proposition in the world\u2014the war was on and thousands were being killed, although it now looked as if we would be the eventual victors\u2014but it was the only deal that I could get. I thought \"The guy is probably lying through his teeth, but going to college is better than being the last guy shot in the war.\"\n\nI signed on the bottom line.\n\nCollege was acceptable\u2014booze, broads, books, and the Army in about that order, although if I were lucky, at times the broads edged out the booze.  The four years passed quickly, my grades were pretty good, and I was anxious to leave the academic environment that had become boring. \n\nI had no complaints during those four years with the single, serious exception that my mom never saw me graduate\u2014she died in my last year; other than some distant relatives on my mother's side of the family, I was now completely on my own.\n\nLanguages came easily to me. I had taken German during high school and then four years of French in college. My army counselor at college\u2014Major J. C. Jackson, USAR (retired)\u2014had periodic review meetings with me. At one session he said, \"Dave, after graduation you're going to Officer's Basic School and then you'll receive your commission as a second lieutenant. With your facility with foreign languages I'm going to recommend that the Army use that talent in the intelligence field.\"\n\n\"Why intelligence, Major?\"\n\n\"As I said, your ease with learning new languages is a definite plus in the intelligence field. But second, when the war ended the OSS, which was our foreign intelligence branch, was immediately disbanded. It didn't take long for our government to realize that they had made a mistake, so they created the CIA two years ago.\n\n\"The CIA has been slow to organize and train their agents. Army Intelligence stepped into the void, since it is now apparent that our need for foreign intelligence is a very high priority.\n\n\"So does that sound like a good career field for you?\"\n\nI said the obvious, \"It's a whole lot better than being a grunt officer in the field with people shooting at you.\n\n\"Can I ask a question, Major?\"\n\n\"Fire away, Dave.\"\n\n\"The war is over. The army is having a huge reduction in force, and yet guys like me are going into the army while many others are being forced out. Something doesn't make sense?\"\n\n\"Dave, you're both right and wrong. During the war promotions came quickly in the officer ranks. At the end of the war the army released eighty percent of their enlisted personnel. When they looked at the officers they found a large imbalance. There were way too many field-grade officers\u2014majors through Colonels\u2014to command a vastly reduced military. However, it was the opposite for the company-grade officers\u2014lieutenants and captains\u2014their ranks had been depleted in the fighting and as soon as the war ended, those that survived rushed to return to civilian life. The result was that the army had too many field-grade officers and too few company-grade officers. That's why you're in the program.\"\n\n\"Why don't they just make the majors do the job of the lieutenants?\" I asked.\n\nHe chuckled at my naivet\u00e9. \"Dave, after a couple of years in the real world, you'll be able to answer that question yourself. Until then, get ready to have a gold bar pinned on your shoulder.\"\n\nOfficer's Basic School was easy\u2014a repeat of my monthly sessions during each summer at college. The Army agreed with my counselor that I should be in Intelligence, so they sent me to a six-month Army language school located in California. Unfortunately, the language was Korean.\n\nI politely pointed out to the army that I was pretty good in German and French to which I was not very politely told that \"We aren't at fucking war with Germany any more, and the French don't know what war is.\"\n\nSix months of intense language training in California had me pretty competent in speaking and reading Korean. I waited for my orders during the last two weeks of language school. The orders arrived and the army showed me what a wonderful sense of humor it had\u2014I was posted to Germany!\n\nI politely pointed out that I just had spent the last six months learning Korean. It was somewhat harshly pointed out that our German unit was short bodies and that Eastern Europe and Russia were now considered our biggest threat\u2014the Berlin Airlift had just ended and our government now viewed Eastern Europe both as a political battle, and also as a military threat.\n\n\"What changed in the last six months?\" I asked.\n\nMy argument fell on deaf ears and ended with the sarcastic comment that the single gold bar on my shoulder meant that a lowly second lieutenant should salute and say, \"Yes Sir\" to orders when they are received.\n\nThree weeks later I was in Germany. I walked into the commander's outer office and found a staff sergeant reading the newspaper and sipping coffee. I explained that I was reporting in and asked if I should report now or come back later.\n\nThe Sergeant looked me over, chuckled and said, \"Hang tight, Lieutenant. I think they want to meet you now and get it over with.\"\n\nHe walked into the next room and came out a minute later. He shook his head sadly and pointed to the open door. I marched in and saw a captain and a first sergeant sitting at a conference table on either side of a lieutenant colonel. \n\nI took a position of attention, saluted since I was reporting for my new duty, even though we were indoors, and did the military thing, \"Lieutenant Wheeler, reporting for duty, Sir.\" \n\nMy new boss was the Battalion Commander named Weldon. I remained at attention as he read my file. As he read, his face turned redder and redder. Finally, he looked up at me and asked, \"How much Russian do you speak?\"\n\n\"None, Sir.\"\n\n\"Then what the fuck are you doing here?\"\n\n\"Following orders, Sir?\" I suggested.\n\nBarely keeping his temper in check he said, \"We are a Russian intelligence battalion stationed in Germany. You have high school German that you haven't used in years and speak no Russian. The French hate us, but they don't fight, and Korea is down the road a piece. Do I have that right, Lieutenant? In other words, what fucking good are you to me?\"\n\nSince there was no good answer to that question, I remained silent.\n\nFinally, realizing that I was a second lieutenant who probably could find his ass only after two or three attempts, he introduced me to my immediate boss, whose name was Captain Myer, and told the three of us to get out and get me squared away. He would try to get me transferred to anywhere outside his command, but he told me that the odds were that he was stuck with me.\n\nAs we stood outside the office, Captain Myer winced and said, \"You caught him at a particularly bad time, Lieutenant. In the last month we lost our three most valuable intelligence officers to civilian life, and you're their replacement.\n\n\"This is First Sergeant Franklin. I've asked him to advise you how to take care of all the little stuff. When you're done, take the rest of the day off. I will see you in my office tomorrow morning at 0800.\" \n\nAs the Captain walked away I turned to Franklin. It was obvious he had been in the army for many years; I guessed him to be in his mid-forties. He looked like he just stepped out of a recruitment picture with his uniform perfect in every detail. His body posture gave the impression that he was tough as nails. \n\nA master sergeant and a first sergeant have the same enlisted rank, but the difference is that the first sergeant is the life-blood of the company. First sergeants provide discipline and counsel to the enlisted men in the company; instructs other sergeants on their duties; advises the commander; and assists young company-grade officers, like me, how not to be an asshole or fuck up on the job.\n\nA master sergeant you call \"Sergeant,\" but a first sergeant is addressed as \"First Sergeant.\" Once an unspoken agreement is reached you can also call him \"Top,\" which signifies he's the top enlisted man in the company.\n\nConcluding that the unspoken agreement was months away I asked, \"First Sergeant, if you were a green second lieutenant who was on his first assignment, and who didn't know shit, what would you do to get squared away?\"\n\nI could tell he liked my approach\u2014we both knew I didn't know shit and I was honest enough not to fake it.\n\nHe suggested in his very polite, sarcastic way\u2014after all I was an officer and he was a lowly enlisted soldier\u2014all the things that I should do.\n\nFour hours later I'd signed my name fifty times, been assigned my room on the base, and received my new ID for this posting. \n\nI reported back to Franklin. I know, officers don't report to enlisted men, but I wasn't the dumbest lieutenant in the world and I knew who really ran the operation, so I gratefully and with overwhelming humbleness, profusely thanked him for his help and advice. It was a sarcastic contest to see who could be more polite. It ended a draw, which got another chuckle from him.\n\nHe then gave me the security briefing. I was in one of two intelligence companies that made up the battalion, which was part of a brigade, which was part of the 2nd Armored Division that was stationed in Germany. However, if asked what I did, I was to say I was a supply officer with the armored division. I was to keep my mouth shut regarding the job, and any contact with a foreigner was to be reported to the office by using the Army form created for that purpose. \n\n\"Was I sufficiently clear so that you understood me, Lieutenant?\"\n\nI replied that his briefing was truly a work of art, and that I understood every word he said\u2014even the three syllable and bigger words.\n\nHe chuckled again and suggested that I follow Captain Myer's advice and take the rest of the day off. We would meet at 0800 the following morning and see what work the Captain had found for me to do.\n\nThirty minutes later I left the base and found myself meeting my first German\u2014a blond hooker who \"wouldn't hurry me.\" \n\nThe recruiter who persuaded me to sign on the bottom line never told me the army had such a great sense of humor, which seemed to take particular pleasure in frustrating second lieutenants.\n\nI looked at her again. She was absolutely terrified and did not look at all like a street-smart hooker. She looked like a twenty-something-year old who was desperate.\n\nI paused and thought that it wasn't her fault my life was in the shits. I gently said, \"I'm sorry; I'm not interested.\"\n\nThe despair on her face was frightening. On an impulse I said, \"How much?\"\n\nShe looked at me surprised. \"Twenty dollars American and I won't hurry...\"\n\nI interrupted her. After four years at a party college I liked sex as much as anyone, but even I would feel bad taking advantage of this woman. \n\n\"Go put on a dress and meet me here in an hour. I'll take you to dinner and pay you $30. Is that acceptable?\"\n\nShe stared at me and then gave a quick, nervous smile. \"That is very acceptable, Lieutenant.\"\n\nShe turned to go and I said, \"My name is Dave. What's yours?\"\n\n\"Elke.\"\n\nAn hour later, after changing into civilian clothes, I returned to the same place on the street and found Elke waiting for me. She was wearing a blue dress that was presentable, but certainly not new. It showed her body better than the clothes she was wearing earlier. Her slim figure and blonde hair made her quite attractive...or maybe I was just horny. She gave me another quick, nervous grin when she saw me.\n\n\"Good evening, Elke,\" I said in German.\n\nShe replied, \"Good evening, Lieutenant.\"\n\n\"Call me Dave.\"\n\n\"Yes, Dave.\"\n\nWe walked down the street for several blocks until we reached a small restaurant that I had spotted earlier. I asked for a table for two in German, and apparently I was understood since we were given a table in a private corner of the room.\n\n\"Elke,\" I said in German, \"I've just arrived and my German is poor since the last time I spoke it was in high school. If you hear me pronounce a word wrong, or if I don't know the word I'm trying to say, I want you to help me.\"\n\n\"I will help the Lieutenant.\"\n\n\"Dave.\"\n\n\"I will help you, Dave.\"\n\n\"Elke,\" I continued in German, \"Do Germans ever smile?\"\n\n\"Yes, Dave. Why do you ask?\"\n\n\"Because I have yet to see you smile.\"\n\nMy reward was a quick smile that, nevertheless, brightened her face and highlighted her blue eyes and high cheekbones.\n\nI explained to her that my first military assignment was in an armored division and that my boss had told me to practice my German since we would have training operations in the future with the newly formed military of the Federal Republic.\n\n\"That's one of the reasons we're having dinner tonight\u2014to help me speak German better.\"\n\nShe stammered, \"Any other reason?\"\n\n\"You're pretty,\" I replied.\n\nShe blushed. The red on her face contrasted with her creamy complexion and almost white hair. \n\nThe waiter came over and after asking what she wanted, I ordered the meal for both of us. Twice she corrected my accent and three times she had to tell me the right word that I was trying to say.\n\nAfter the waiter left I asked, \"Please tell me about yourself, Elke.\"\n\n\"Dave, my life is a very simple story. I grew up in a small town called Choiden near the border of the Russian Sector. My mother died when I was only ten years old. My father was a teacher of languages at a small university near where we lived. I married young a German soldier, but he was killed in a military accident. A year later my father died of a heart attack.\n\n\"There were no jobs in my town, so I came to the city to find work. Jobs are very difficult to find even in this populous area. I finally managed to find a job working in a local pharmacy four hours per day.\"\n\nElke was getting increasingly nervous now. She stammered, \"I'm behind in my rent. He gave me two days to pay or I would have to leave my apartment.\"\n\nHer face turned red and I could see tears on her cheeks as she looked down at the table. \"I'm not a whore, but I've run out of choices.\"\n\nI was embarrassed for her and also for me. I didn't know what to say, but was saved as the waiter brought our food. We ate quietly. It was obvious she was hungry as her food disappeared quickly.\n\nWe finished the dinner and the waiter came to take our dessert order. I completely botched many of the words and pronunciations. Elke gently corrected each mistake.\n\nI saw the waiter look at her scornfully. \n\n\"Do you have a problem?\" I asked sharply.\n\nHe assured me there was no problem and left to get our dessert order.\n\nWe were silent when he left until I asked, \"You said your father was a teacher of languages. What languages do you speak and read?\"\n\n\"Only four,\" she replied. \"German, French, Russian, and English.\"\n\nMy interest perked up immediately. \"How good is your Russian?\"\n\n\"It is very good, Dave. My father's expertise was Russian since the university insisted the language be emphasized because of the proximity and the politics of the two countries.\"\n\n\"Can you write in Russian?\"\n\n\"Of course\u2014my father insisted.\"\n\nOur waiter came with the dessert; we ate it and I paid the bill. I told Elke I would walk her to her apartment. As we walked down the street I asked, \"Elke, how much money do you need to pay what you owe on your apartment?\"\n\n\"About $40 American.\"\n\n\"How much do you need per month to keep your apartment, counting what the pharmacy pays you?\"\n\n\"I think maybe $50 American.\"\n\nI stopped walking and looked at her. \"I will pay you $40 tonight and then pay you $50 per month if you would help me with my German and teach me how to speak and read Russian. \n\n\"The Russian would help my military career,\" I explained.\n\nShe stared at me in astonishment. \"You would do this for me?\"\n\n\"Yes, for you, and also for me.\"\n\nShe looked down. \"I'm embarrassed. Was I begging that badly during dinner?\"\n\nI touched her arm. \"Elke, I need help with my German and my career would be better if I spoke Russian. It's a business proposition.\"\n\nShe looked at me shyly. \"I'm in a corner and have no choice, and I'm embarrassed at your generosity. I have to accept with thanks.\"\n\nWe started walking again and finally we reached a three-story building that was very old and in need of many repairs.\n\nWe stopped at the bottom of the stairs and I gave her $40. She looked at me.\n\n\"Thank you for the dinner, Elke. I will meet you at the same place tomorrow night at eighteen hundred\u2014that's six o'clock Elke\u2014for my first Russian lesson.\"\n\nShe stared at me and I could tell she was mad. \n\n\"I made a deal with you and you must come into my apartment so that I honor my agreement. I'm not a virgin and I will make sure that you receive pleasure.\"\n\nI was surprised at her anger. \"Elke, we made a deal for you to teach me languages. Our earlier deal was for you to have dinner with me\u2014nothing more.\n\n\"You are a beautiful woman and I am physically attracted to you or I wouldn't be a man. I don't take a woman to bed for money, but because I like or love her. You owe me nothing.\"\n\nShe looked at me in surprise, \"Really?\"\n\n\"Yes, Elke, really.\"\n\nChapter 2\n\nThe next morning I found my way to Captain Myer's section in the building and arrived at 0745. First Sergeant Franklin was already sitting at his desk in the office sipping coffee.\n\nHe looked at me and asked, \"Would the Lieutenant like some coffee?\"\n\n\"Yes, First Sergeant.\"\n\nHe pointed to a pot on a corner table, \"Help yourself.\"\n\nAfter pouring myself a cup of coffee I walked back to Franklin and asked, \"Can you tell me where to find the form that I have to fill out when I have a foreign contact?\"\n\nWithout speaking he opened a drawer and pulled out a sheet of paper. As he handed it to me he asked, \"Does the Lieutenant mind if I ask what her name is?\n\nI blushed. \"Elke...she agreed to help me with my German and to teach me to speak and read Russian.\"\n\nFranklin grunted, \"I assume she's pretty.\"\n\n\"Very.\"\n\nCaptain Myer walked in, and I was saved from any further, embarrassing questions.\n\nMyer took me into the main room that contained about 30 desks, of which maybe 5 of them were already occupied by enlisted personnel. He said, \"Most of us are at work by 0830.\n\n\"Dave, here is the short, big picture. When the war ended, Germany was divided into four sectors\u2014the British, French, American, and Russian areas of influence. At first we were a super police force to keep the peace and eliminate any remnants of the bad influences that started the war. We were accepted by the Germans quicker than we expected, and soon their states organized themselves under our guidance.",
        "\"The three western powers quickly became one bloc against the Russian sector. It became the West versus the East. Under our guidance the western sectors became known as the Federal Republic of Germany. The Russians immediately created a twin political organization called the German Democratic Republic. Both the Federal Republic and the GDR claim they want to unite all Germany, but each wants to be the controlling influence.\n\n\"Until now, it has been a political battle, but the Berlin Airlift shifted it a little into a military confrontation. Our battalion specializes in analyzing Russian military capability. The other battalion is more into the political aspects of the situation; in addition they analyze the military potential of the eastern countries bordering Germany.\n\n\"I'm going to give you the basic manuals of how an armored division is organized, and in particular, how our division is organized. Later I'll give you the equivalent manuals of a typical Russian armored division. Eventually, you'll be one of many here who studies how the specific Russian divisions in the Soviet sector are organized. However, first you have to learn about our own units.\n\n\"Once you get the feel of the job, I will give you specific assignments based upon signal intelligence that we intercept along with information that is received in other ways.\n\n\"For now, get comfortable with the job, meet your fellow officers and enlisted men, and stay out of trouble.\"\n\n\"Yes, Sir.\"\n\nHe pointed out my desk that was covered with thick manuals and walked away. It appeared I had some reading to do.\n\n------\n\nThat night I met Elke at our agreed upon meeting place. We walked for an hour speaking nothing but German and then stopped at a small restaurant and we ate a sandwich. After dinner she started to teach me how to speak Russian.\n\nTwo hours later I walked her back to her apartment and watched her as she walked up the steps.\n\nFor the next three weeks we did the same thing. Finally Elke said, \"It's not practical that you buy me dinner every night and we walk the streets. You must come to my apartment\u2014I'm going to be embarrassed because the room is so poor\u2014but I'll cook our meal and we can spend more time practicing Russian.\"\n\nThe next day we met at our spot and walked to her apartment. When she opened the door I had to force myself not to wince. The main room had an old couch, a small table with two cheap chairs, and against the wall, a two-burner cook top and small oven. The only window in the room looked at the wall of the next building. She showed me the second room\u2014a painfully small room almost completely taken up with her bed, an inexpensive wardrobe cabinet, and a cheap end table holding a tiny lamp. A curtain separated the bedroom from a tiny bathroom with a shower, basin and toilet. What I did see was that everything was very clean.\n\nWe walked back into the main room and I noticed an old phone on a small table by the door. She saw my look and explained, \"The telephone comes with the apartment, but I never use it since it costs so much money to make calls.\"\n\n\"Write down the number for me, Elke, so I can call you if plans that we make are disrupted because of my job.\"\n\n\"Yes, Dave.\"\n\nOnce I got over the initial impression of her tiny apartment, I realized that the aroma of something very good permeated the rooms. She had cooked dinner for us\u2014sauerbraten, potatoes, and cabbage. She had prepared a typical German dinner.\n\nThe meal was excellent and Elke beamed when I complimented her. German was coming back easily to me, and Elke and I spoke only German unless it was our Russian time. \n\nAfter dinner we spent the next three hours on my Russian. \n\nWe quickly decided it would be easier if I just came to her apartment after work instead of forcing her to meet me on the street. I increased the money I gave Elke so she could buy food for our dinners. It actually was better for me; the restaurants were costing me most of my monthly pay.\n\nAnother three weeks went by. We went to inexpensive restaurants two nights a week, but the rest of the time Elke made dinner for us and we ate at her apartment. She was an excellent cook.\n\nShe also was starting to relax with me. The first time she giggled and then laughed I was shocked\u2014she was so beautiful when she laughed I couldn't believe it was the same desperate woman I had met on the street.\n\nOne night we had finished dinner and she was washing the dishes. I brought over a dish just as she turned and our bodies met. I could feel her breasts and she knew it. She blushed.\n\n\"I'm sorry,\" she apologized.\n\n\"Elke, it was my fault...and I enjoyed our encounter,\" I teased.\n\nShe blushed again and nothing more was said.\n\nThe next night we had another great dinner and then spent three hours in an intense Russian lesson. Their language is very difficult to speak, read, or write. Elke wanted me to be perfect in all three!\n\nAt the end of the lesson I said, \"I have to go.\"\n\nShe walked me to the apartment door and looked at me. It wasn't her normal look\u2014it was a look of expectation. And then I realized that every night I went home and dreamed about how beautiful she was. I had never tried to make a move on her since I didn't want to take a chance that it would spoil our relationship. Her look said I was wrong to be so careful.\n\nI put my arms around her waist waiting for any resistance. There was none.\n\nI pulled her to me, and she quickly came into my arms.\n\nShe looked up at me and I kissed her. Her lips were soft and moist and my erection was immediate. I knew she felt me. We broke our kiss and she leaned her head against my chest. I could feel her soft hair and smell her fragrance. My hands moved from her waist to her back; I could feel the straps of her bra as I lightly caressed her. We stood that way for several minutes.\n\nFinally I backed away and said, \"Thank you, Elke, for a wonderful night.\"\n\nShe smiled shyly at me, as if she were embarrassed by her emotion.\n\nI walked back to the base that night in confusion. I thought, \"In college I met girls, bought them three beers and fucked them. If I knew a girl had broken up with her boyfriend, I was there for the rebound, which usually meant sex. \n\n\"Yet here I have a woman absolutely defenseless\u2014at my complete mercy\u2014and I do nothing for weeks and then hesitate to even kiss her. What is causing me to act like this?\n\n\"Love,\" I answered myself.\n\nDuring the next month I saw Elke at least five times a week. I always spent the weekend days with her so that we could spend more time on my language training and, I have to admit, because I was becoming more and more attracted to her.\n\nI was lucky to have met Elke for another reason. The military had a huge reduction immediately after the war and terminated over eighty percent of its officer base. The lifers clung to their jobs if they could, but most of the younger officers were released\u2014both voluntarily and involuntary. Consequently, the other officers who had made the cut were much older than me. \n\nThe program that paid my way through college was now suspended and my class was the last one that had to perform their military obligation. Others were not permitted to enter active duty, but rather were ordered to serve in the reserves. The end result was that I was the youngest officer in the company, and had few friends.  \n\nMy job was better than boring, but not something that made one meet each new day, anxious to get back to work. My section's job was to profile the typical Russian armored division, including number of men, types of fighting equipment and weapons used, and the tactics and strategy when engaged in battle. \n\nEach scrap of information came to the section. It might be from a newspaper article, intercepted signal communications, defectors who had served in their military, and in some cases, spies who worked for us. Each piece of the puzzle was added to prepare a picture of what was assumed to be our next enemy. However, I was under no delusion that my unit was anything but a very tiny cog in the military intelligence community.\n\nThe German military in the Russian sector, which was sometimes described as an independent force, mimicked the Russians; so to know one was to know the other.\n\nCaptain Myer had learned about my Russian lessons. One day he stopped by my desk and gave me three books written in Russian. One was written just after World War I and the other two more recently. All three of them focused on the role of Russian armor in the military. \"Dave, take a swing at these books and see if there is any useful tactical information.\"\n\n\"Yes, Sir. Can you tell me if these books are classified? Can my teacher help me if I run into translation problems?\"\n\nMyer answered, \"They are public documents, so there is no military classification to them.\"\n\nElke and I spent many nights together as I struggled with her help to translate those books. It was tough, but Elke pushed me.\n\nI would whine, \"Elke, we need to take a break. Let's go for a walk or something?\"\n\nShe would look at me with that stubborn German look and reply, \"Dave, it's good for your career; you must work harder.\"\n\nA month later I wrote a fairly lengthy report on the philosophy and psychology of the Russian armored division for the period between the two great wars. One point I emphasized was the apparent lack of creative decision-making just prior to and during battle\u2014the Russians had a battle plan and gave it to the armor. Armor was expected to execute the plan without deviation, even if the battlefield situation they expected to find had significantly changed. \n\nCaptain Myer came up to me a couple weeks later. He grinned, \"You did a good job with the report. I liked it, but better for you, Colonel Weldon liked it too. He told me to tell you, 'Well done.' \"\n\nElke beamed with pleasure and hugged me when I repeated Myer's words to her.\n\nOur relationship was slowly changing. The good night kiss at the door had become more intense, and then there was more than one kiss. Lately we had kissed passionately and pressed our bodies against each other\u2014her breasts pushed into my chest and my hard cock pushed into her pelvis as we continued those good night hugs.\n\nI looked forward to the weekends. I would come to her apartment early and she prepared breakfast for us. Then we would start out on our weekend plan. Sometimes it would be a day at the park where Elke and I would spread a blanket and enjoy the lunch that she had prepared. Other weekends we would take a commuter train to nearby cities and explore them.\n\nOne Saturday in the late afternoon Elke took me to a beer garden on the other side of the city. The music was happy and lively, and the teenage kids danced and raced through the tables as they played their games. \n\nAfter a few beers Elke giggled, \"Dave, you must dance to the happy music.\"\n\n\"But Elke, I'm not a good dancer and I've never seen this type of dance before.\"\n\nShe reached out her hand, \"I will show you.\"\n\nThe band was on break so I took the opportunity to buy another pitcher of beer for Elke and me. Just as I arrived at our table I heard a familiar voice say, \"Good evening, Lieutenant.\"\n\nI turned and answered, \"Good evening to you too, Top.\"\n\nHe said, \"My friends and I are at a nearby table and I spotted you. I don't want to interrupt anything, but decided to say hello.\"\n\n\"You're not interrupting anything; I would like to introduce you to my Russian teacher.\"\n\nI held out my hand for Elke to stand and said, \"Elke, this is First Sergeant Franklin; Top, this is my teacher, Elke.\"\n\nFranklin grinned and said, \"Good evening, Elke.\"\n\nElke held out her hand and said, \"Dave speaks of you often. I am honored to meet you.\"\n\nFranklin was taken aback and tried to make a joke, \"Does he say anything good about me?\"\n\n\"It is all good, First Sergeant. He says you are a soldier's soldier.\"\n\nElke immediately saw we were both embarrassed by her statement.\n\nElke blushed, \"I apologize First Sergeant Franklin; I meant no embarrassment.\"\n\nFranklin grinned at her to ease her discomfort and answered, \"How can I be upset when I receive such a compliment? Obviously, the Lieutenant is getting smarter the longer you teach him.\"\n\nWe spoke a few minutes longer and he returned to his table.\n\nAn hour later we left the beer garden and took a bus back to Elke's apartment.\n\nWe stood at the bottom of the stairs. Elke said, \"Please come up for a few minutes. It's early and we can talk.\"\n\nI sat in the couch while Elke opened a bottle of inexpensive German wine. She sat next to me as we sipped the wine.\n\n\"Dave, I like the First Sergeant. I'm sorry if I spoke incorrectly.\"\n\n\"You were fine Elke. He likes you\u2014even though you caught him by surprise with your praise, he clearly appreciated what you said. I could see him looking at you when we danced.\"\n\nWe sat there quietly and each of us had a second glass of wine. It was starting to get late, so I stood and held her hand as we walked to the door.\n\nThe kiss that night was different. It started slowly and then grew in passion. For the first time our tongues met\u2014I could taste the wine on her tongue.\n\nThe kiss finally ended and she put her head on my chest. I could feel her soft hair and smell her fragrance.\n\n\"Elke,\" I whispered, \"I don't want to leave.\"\n\nShe pulled away from me and our eyes met. Seconds passed; finally she said, \"Then stay.\"\n\nI took her hand and we walked into her bedroom. The single light in the room cast a soft glow as she stood in front of me, waiting to see what I would do.\n\nMy hand lightly caressed her cheek. As soon as she felt my touch, she closed her eyes. My hands held her face as I leaned over, and we kissed again. Her mouth opened and once again our tongues touched and teased each other. The feel of her soft hair and her fragrance overwhelmed my senses as we kissed.\n\nMy mouth continued to kiss her face and then her neck and earlobes. My tongue flicked into her ear and she flinched and then groaned with excitement. As I kissed her, my hands roamed over her back and then sank lower as I cupped her ass and pulled her into me. She gasped, but there was no resistance.\n\nWe pulled apart for a moment and she looked at me. \"You are beautiful, Elke\u2014the most beautiful woman I have ever touched.\"\n\nHer answer was another passionate kiss.\n\nMy hands went to her waist and then slipped under her sweater so that I could feel her skin. I moved my hands up the sides of her stomach until they touched the strap of her bra. I continued up so that my hands were under her arms and embraced her bare shoulders.\n\nThe feel of her skin was extraordinary; I could not believe how much my body wanted this woman.\n\nAfter five minutes of hugging her and feeling her bare back and shoulders, I brought my hands down to the bottom of her sweater and gently pulled it up over her head. I looked for resistance or fear, but there was none.\n\nShe stood upright before me with only a bra covering the upper part of her body. She didn't wait for me as she put her hands behind her back and reached for the clasp. Moments later her bra fell to the floor; she stood proudly before me.\n\nHer skin was flawless. I saw her perfectly formed breasts for the first time. Her areolae were small; they highlighted nipples that were hard and pointy. I could see the tiny bumps on her areolae and my tongue teased each one. She groaned and encouraged my teasing.\n\nI finally led her to the bed. I found the buttons on her skirt and released it. The skirt fell to the floor and she lay down on the center of the bed. My hands went to her panties, and she lifted so that I could slide them down her legs and drop them to the floor.\n\nI lay next to her and my fingers went to her slit; it was wet with her moisture. Her pubic hair was wild and untrimmed, but the thin, white strands of hair did little to conceal the soft curve of her mound. Her musky smell was an aphrodisiac to my body. I touched her inside thighs and she spread her legs wide, permitting me access to her most sensitive area.\n\nI played and teased her for ten minutes or so when she whimpered, \"Take off your clothes and make love to me.\"\n\nMinutes later my cock pushed into her. The smooth, wet walls of her vagina captured my cock and I could feel her muscles squeezing it\u2014the feel of those muscles clutching me was extraordinarily erotic. Quickly we started the rhythm of love and it escalated faster and faster until just before I emptied myself, she suddenly arched her pelvis into me and her violent spasms started. It was a perfect first time.\n\nWhen we were done, I pulled her to me. Her fragrance blended with the tinge of sweat that our lovemaking had started. As I caressed her back, I felt her tongue lightly lick my nipples. We fell asleep clutching each other.\n\nI woke up that morning with her face on my chest and my knee lightly touching her pubic hairs. When she was sleeping, her face was one of beauty, and I didn't move since I didn't want to wake her and ruin this picture.\n\nFinally she woke and looked at me. \"I hope my Lieutenant was not disappointed?\"\n\nMoments later I was bringing her to another orgasm as my cock aggressively penetrated her. I could feel her vaginal walls squeezing me and again we climaxed at the same time.\n\nShe put her head on my chest as we recovered from our sexual joust. I stroked her back and felt the thin sheen of perspiration created by our physical activity. My face rested on her hair and we enjoyed the glow that comes when everything happens just right.  \n\nAfter a while it was time to get up. With some care, we washed each other in the tiny shower. Afterward, I dried her and touched every part of her body that I now knew was the best thing that ever happened to me.\n\nWe spent the rest of Sunday walking in the city. It was a Russian day, which meant the entire day we talked to each other in Russian. Each time I tried to switch to German, Elke got upset.\n\n\"You have to learn Russian for your career, Dave. Don't cheat and speak German.\"\n\n\"But I can't tell you how much the weekend has meant to me speaking in Russian.\"\n\n\"Try, my Lieutenant.\" \n\nChapter 3\n\nThe weekend that we first made love was perfect\u2014it was as good as any dream I ever had about Elke and me. The following Monday I couldn't wait for work to be over so that I could rush to Elke's apartment.\n\nI walked into the room and Elke was putting our dinner into the oven. She had heard me open the door and turned to me as I hurried over to her. I put my arms around her and kissed her. She returned my kiss, but there was a hesitation\u2014a lack of passion. \n\n\"What's wrong?\" \n\n\"Nothing, Dave.\"\n\n\"Elke, something's wrong. What is it?\"\n\nShe looked at me shyly, \"I enjoyed our weekend, but maybe our situation is going too fast. You're not always going to be posted here and...\"\n\n\"But Elke, I love you.\" \n\nShe smiled sadly at me and then touched my face as she stood on her toes to kiss me\u2014this time with a little more enthusiasm. \n\nAfter the kiss she whispered in my ear, \"When there is no good ending in sight, why rush?\"\n\nSo much to my dismay, our relationship went forward in slow motion. I wanted to move into her apartment; she said it was too soon.\n\nI wanted to make passionate love with her nightly; she resisted in her quiet way.\n\n\"You must learn Russian, Dave. We will maybe have fun in bed next weekend.\"\n\nI was frustrated.\n\nThe next weekend I spent Friday and Saturday night at her apartment. We made love, but I soon found out that Elke was shy in bed. She was able to come every time I entered her, but any experimentation was frightening to her.\n\nOn that Saturday night I was kissing and licking her breasts waiting for those groans of pleasure to start when I started kissing her stomach and then her pelvis as my fingers combed her thin, pubic hairs.\n\nI spread her labia and my tongue licked her clit.",
        "\"Dave, what are you...\" and she gasped as I sucked her tender, little point of pleasure.\n\nQuickly her groans became louder and she started to spasm violently as my tongue brought her to climax.\n\nShe cuddled next me later and said, \"No one has ever done that to me before.\"\n\n\"Did you enjoy it?\"\n\n\"But should we be doing it, Dave?\"\n\n\"Answer me, Elke. Did you enjoy it?\"\n\n\"Yes, you drove me crazy with pleasure\u2014I lost control of my body.\"\n\n\"Then we should be doing it. Anything that I can do to give you pleasure, we should be doing.\"\n\nWith a breakthrough in her sexual shyness, I thought it was a wonderful weekend for both of us. I wanted to sleep with her Sunday night too, but she sent me back to my base housing.\n\nEarly the following day I joined Top for our ritual cup of coffee. He was always first in the office and I, being an early riser, was always the second one in.\n\nTop said, \"Captain Myer tried to reach you Saturday night to see if you were free for a meeting Sunday morning. I called you, but the duty officer said you weren't in.\"\n\n\"I was at Elke's.\"\n\nHe looked at me and asked, \"When you filled out the foreign contact sheet for Elke, did you write down her address and phone number?'\n\n\"I didn't know it then, Top.\"\n\n\"How about now?\"\n\nI blushed, \"I'll update the sheet today.\"\n\nThere was a pause and then he said, \"Lieutenant, can I ask you a question?\"\n\n\"Sure, Top, fire away.\"\n\n\"What are the odds that you'll be wearing four stars when you retire from the Army?\"\n\nI looked at him in surprise\u2014what a strange question.\n\n\"Well, Lieutenant?\"\n\nI chuckled, \"Maybe a million to one and that's wildly optimistic.\"\n\nHe looked at me with concern on his face and quietly said, \"That's about the same odds that this military command will give you permission to marry a foreign national while posted here.\"\n\nHe stared at me.\n\n\"You know, First Sergeant, that policy really sucks.\" \n\nThere was nothing he could say other than a little nod to acknowledge that he understood. What Top had just told me wasn't a shock\u2014I'd already quietly checked to see if any exceptions had ever been made; the answer was no.\n\nI finished my coffee and went to my desk to begin work. \n\nMy job actually had become much more interesting. Captain Myer and I got along well and he had assigned me to a specific Russian armored brigade that was stationed in East Germany. My team consisted of five enlisted soldiers and myself. As opposed to studying the ideal Table of Organization and Equipment for a Russian armored brigade, I now had the responsibility of tracking an actual one with real officers and men.\n\nIt was like a jigsaw puzzle where each scrap of information added to the overall picture of the Russian unit. In some units of the brigade we had learned the names and ranks of the officers commanding them.\n\nLater that afternoon Captain Myer walked up to my desk with a smile on his face.\n\n\"How did you do it, Dave?\"\n\n\"Do what?\" Captain.\n\nHe handed me twenty sheets of papers, each one identical\u2014it was my orders promoting me from second lieutenant to first lieutenant. I was pleased, but not surprised.\n\nThe army constantly changes their rules for promotion. After the war the regulations for promoting second lieutenants were fairly simple\u2014after two years in grade with no adverse efficiency reports, the promotion to first lieutenant was automatic. However, each year in college taking military courses and summer camp counted for one-eighth of a year, so I had picked up six months through that rule. In addition, proven proficiency in foreign languages also counted. At language school I had breezed through the French test and had remembered enough German to just make a passing mark. Korean was an automatic, and two weeks ago I had passed the Russian verbal test. The combined languages advanced my promotion another six months.\n\n\"I guess it was summer camps and foreign languages, Captain.\"\n\n\"Whatever it was, congratulations, First Lieutenant Wheeler. You better trade in your gold bar for a silver one.\"\n\nHe grinned again and walked away.\n\nI thought, \"At least something good happened today.\n\n--------------\n\nMy relationship with Elke progressed slowly with no realistic outcome in sight. She was getting less shy in bed and our sex life was getting better as many of her inhibitions disappeared. Weeks went by and one night Elke and I were in the early stages of making love when she suddenly grabbed my cock and put it in her mouth for the first time. Her warm, wet mouth massaged my cock as I got more and more excited. I said, \"Elke, I'm going to come.\"\n\nShe pulled back and looked at me as the first spurt caught her on the chin and then over her chest and breasts. She was stunned at first, and then giggled, \"I'm not very good at this.\"\n\n\"I think you did fine, Elke, and with a little practice, you will be perfect.\"\n\nI got up and went to the bathroom to wet a cloth; she lay quietly as I cleaned the mess we had created. By then she was ready and I made her come with my mouth and then pushed my cock into her and waited for her to catch up with me.\n\nWhen she smiled, I started a slow rhythm of penetration and withdrawal and soon our bodies were in a frenzy of love making as our bodies sought release. We climaxed together and fell asleep in each other's arms.\n\nThe next morning\u2014somewhat typical to our relationship\u2014she was withdrawn and sad. I thought I knew females, but Elke had me perplexed.\n\n\"Elke,\" I pleaded in frustration, \"why do I think you are the happiest woman in Germany and hours later you seem to be the saddest?\"\n\n\"It's the way it is. Please understand.\"\n\nI shrugged in confusion and changed the subject.\n\nSeveral weeks later Elke told me that the pharmacy, by German law, had to give her a week's vacation and that the following week she would not be working.\n\n\"Isn't it your choice when you take vacation?\"\n\n\"No,\" replied Elke. \"They have to give me a week off, but they have the right to tell me which week.\"\n\nI had a thought. \"Elke, if I can take a couple days off, would you go with me on a little holiday?\"\n\n\"Where?\"\n\nI was getting a little excited. \"We can take the train into the mountain area and stay at a place on the lake. I've heard people at work talk about it and they all say it's a very nice resort.\"\n\nElke grinned at me shyly. \"I would like to go there with you.\"\n\nI talked to Captain Myer. I had been working a lot of extra hours and I knew he thought my work was good. When I told him I wanted the following Monday and Tuesday off, he agreed. In a very nice gesture he said he would keep me on duty so that the two days off would not be counted against my leave time.\n\nThat Friday in the late afternoon, Elke and I boarded a train to the mountain region. We arrived three hours later and easily found the resort cabin that I had reserved in advance. The two-room cabin was both primitive and wonderful. The living room and kitchen were in one room and the single bedroom in the other. Off the kitchen was a porch with a table and two chairs that faced the lake. Our sunset view was spectacular.\n\nWe sat on the porch, sharing an inexpensive bottle of German wine, and watched the sun sink into the distant water. \n\nWe were tired from the trip and we went into the bedroom. We were going to have sex, but after cuddling, we both fell asleep.\n\nI woke up first and watched Elke sleeping. The sheet had pulled down during the night and I could see her naked chest and breasts move as she slept. Her face was so peaceful and beautiful; I was in no hurry for her to wake up\u2014I wanted to enjoy the sight of her body. \n\nEventually she stirred and then her eyes opened and saw me looking at her.\n\n\"Coffee?\" I asked.\n\n\"Yes, please, my Lieutenant,\" she answered.\n\nWe had coffee on the porch.\n\nThe resort owner had a map of the walking trails and, after buying some sandwiches for lunch, we explored the nearby hills. We stopped at a camp site that had a table and ate our lunch and sipped from a small bottle of wine that I had carried in our lunch bag.\n\nWe arrived back about four o'clock and took a shower and then made slow, gentle love with each other. When Elke came she squeezed me as hard as she could. I was happy.\n\nSunday was more of the same. After a late coffee we rented a row boat and I took us out into the lake with our lunch sandwiches. After two hours of going almost nowhere, I steered us into the shore and we ate on the stone beach. As I rowed back I saw the warm sun reflect off of Elke's chest. She seemed so happy.\n\n\"Take off your blouse, Elke,\" I asked.\n\n\"But, Dave, people will see.\"\n\n\"There is no one on the lake but us, Elke...for me?\"\n\nShe blushed, but her fingers went to her buttons and the blouse came off. Her small bra still hid her breasts from me.\n\n\"Elke?\"\n\n\"You want me to take off my bra.\"\n\n\"Yes.\"\n\n\"What will you think of me?\"\n\n\"That you are beautiful.\"\n\nShe was blushing furiously, but her hands went behind her back and her bra dropped to the bottom of the boat.\n\n\"Is that what you want?\"\n\n\"What I want, Elke, is to say that you are beautiful and I love you.\"\n\nShe gave me a sheepish smile and leaned back against the bow of the boat. She made no attempt to hide her breasts from me.\n\nAn hour later we came close to shore and she put on her blouse. She put her bra into the lunch bag.\n\nIt was another night of slow, loving sex. When we were done I said, \"I love you.\"\n\nShe didn't answer; she was asleep.\n\nOur last day at the resort we hiked the hills again and then tried to swim in the lake. The water was ice cold and it was impossible to stay in it for more than thirty seconds. We gave up and dressed and walked to the small town two miles away and shopped for trinkets.\n\nIn the early evening we were still in the town and decided to eat at a small restaurant off the main street. The fish just caught from our lake tasted great and the sweet German wine complemented the meal. Our table had a single candle burning and the light reflected off Elke's face and chest. She seemed happy.\n\nWe walked back to our cabin and took our shower together to get the day's dirt off. We opened a bottle of wine and sat on the porch watching the last light of day disappear into the water.\n\nI pulled Elke into the bedroom. The previous two nights had been gentle sex, but I knew in my heart that Elke wanted more. I took off her clothes and then mine and started to tease her with my tongue. Each time she reached for me, I stopped her.\n\nThe more I teased her nipples the more she asked for relief. I spread her legs and licked her inner thighs repeatedly, but refused to lick her clit. She was screaming at me now\u2014she wanted relief and I wasn't giving it to her. Finally I pushed her legs back against her chest and sank into her with one thrust. She screamed with pleasure and started coming\u2014violently arching her pelvis into me to gain more penetration. At the apex of her arousal she wailed, \"I love you!\"\n\nAs our bodies subsided I thought, \"That's the first time she ever said that she loved me.\"\n\nI looked at her and she started crying. I didn't know if it was tears of joy or something else. All I knew was she was sobbing and clutching me. I just held her. When I tried to talk, her finger went to my lips as a signal to say nothing.\n\nLong minutes went by as she cuddled into my chest sobbing; I went to sleep.\n\nIn the middle of the night I woke up and she wasn't in bed; I found her on the porch staring at the lake.\n\n\"Come back to bed, Elke.\"\n\nShe followed me as I pulled her arm and led her into the bedroom.\n\nWhen I woke up the next morning I found her on the porch drinking coffee. We sat there in silence.\n\nFinally, she said, \"It was a wonderful holiday. I'll never forget it.\"\n\nShe stood up and went into the bedroom to pack for our trip back.\n\nThe train ride back was mostly in silence\u2014Elke was in another one of her quiet moods. We got back to the apartment and had a dinner at a local restaurant.\n\nIt was driving me crazy; Elke wouldn't talk to me!\n\nWe went back to the apartment and I insisted that I stay for the night. I clutched her naked body next to mine and we fell asleep.\n\nWhen I woke up she was already awake drinking her coffee. I poured my coffee and sat next to her. She wouldn't speak to me. Finally, I showered and put on my uniform.\n\n\"Elke, I have to leave.\"\n\nShe walked over to me, her face drawn and sad, and silently hugged me. When I tried to kiss her, she turned her head and I kissed her cheek.\n\nIt was a twenty minute walk to the front gate of the post. As I stood in line to have my identification checked, I thought back about the weekend. She was so happy...she said she loved me for the first time...and so sad\u2014like death.\n\nJust as I reached the MP guard station I thought, \"Fuck this! Elke has to tell me what's going on.\" \n\nI turned away from the gate and hurried back to the apartment.\n\nI walked into the apartment expecting to confront Elke, but she wasn't there. I spotted a piece of paper on the kitchen table and picked it up.\n\nMy darling Dave,\n\nYou have to believe that I loved you with all my heart.\n\nI lied to you and deceived you, but I never betrayed you. You must believe me; I never betrayed you.\n\nIt is true that I was married, and my husband died in a military accident. But we lived in the Russian sector. And I hid from you that I have a daughter, Sophie, who is now almost three.\n\nWhen my husband died the Russians told me to go into American sector and spy. I refused. But there was no money and they took my Sophie and said they would take care of her, but I had to spy for them. They are forcing other women to do the same thing. If I refused, they would harm my Sophie.\n\nI met you and told the Russians your name. They encouraged me to be friends with you...and more.\n\nFor months they were patient, but after a while they demanded that I get information from you.\n\nI stalled, but then they threatened Sophie last week.\n\nI cannot betray you; I cannot sacrifice my daughter.\n\nYou must promise me that you will take my body to Choiden and display it to the deputy mayor so they know I am dead...\n\nI froze\u2014\"my body\"\u2014and looked at the closed bedroom door. I dropped the note and ran to the door and crashed it open. Elke was in her blue dress that she wore on our first dinner date. The bed was neatly made and she lay on top of it. Her face was ashen. Two empty vials lay on the tiny end table.\n\n\"Elke,\" I cried as I ran to the bed.\n\nShe didn't move. I shook her violently and saw no signs that she was alive. I moved my lips to hers and felt a faint wisp of air escape from her mouth.\n\nI completely lost it; no rational thought came to my mind as I saw the woman I loved, dead or almost dead.\n\nI had one thought\u2014I need help.\n\nI ran to the phone and called the staff room where Top and I had coffee every morning.\n\n\"First Sergeant Franklin.\"\n\n\"First Sergeant, it's Wheeler. I have a medical emergency and a security...\"\n\n\"What's the medical emergency, Lieutenant?\"\n\n\"It's Elke; I came back and she...\"\n\n\"Lieutenant, what did she do?\"\n\n\"She took pills and I can't...\"\n\n\"Lieutenant, wait there. I'll be there in 10 minutes with a doctor. Just wait.\"\n\nI cracked the door and ran back to Elke. She wasn't moving and I couldn't see her breathing.\n\nMinutes later I heard people coming into the room. A major and Top rushed into the bedroom. The major picked up the empty vial of pills and read the prescription.\n\n\"Fuck,\" he said.\n\n\"Get him out of the room, First Sergeant.\"\n\nTop pulled me from the room. Minutes later we heard a terrible retching sound coming from the bedroom\u2014it seemed to last forever. Then there was silence; twenty seconds passed and the retching started again.\n\nTen minutes later the Major came out of the bedroom and looked at Top, \"We have to get her to the hospital, now.\"\n\nTop looked at me. \"You said a security problem, too?\"\n\n\"Yes, I found...\"\n\nHe interrupted me. \"Is there a back way out?\"\n\n\"Yes, the alley.\"\n\nTop looked at the Major and said, \"Major, go down to the car and tell the driver to bring it around to the alley. I'll bring the girl down.\"\n\nHe turned to me, \"I'll get Elke; you lead the way.\"\n\nHe came out carrying Elke. She was unconscious and looked terrible. I led him down the back stairs and he put her in the staff car. I tried to get in with her, but Top stopped me.\n\n\"You can't do any good, Lieutenant, and we have to talk.\"\n\n\"But Top...\"\n\n\"Lieutenant, I have to know what's going on. You can't help her\u2014the doctor is doing all he can. Let's go back to the apartment and you can tell me what happened.\"\n\nI knew Top was right\u2014there was nothing I could do for Elke\u2014and reluctantly climbed the stairs back to the apartment. \n\nI handed Top Elke's note.\n\nHe read it and looked at asked, \"Did you read the whole thing?\"\n\n\"No, when I read about her body...\"\n\n\"Lieutenant, read the rest of it.\"\n\nI took the note:\n\nYou must promise me that you will take my body to Choiden and display it to the deputy mayor so they know I am dead. The deputy mayor will tell them.\n\nWith my death Sophie should be safe; she will be in an orphanage, but they should not harm her.\n\nI could not see any other ending. I've always loved you, but when I told you that I loved you last weekend, I knew that you would become more and more demanding with our relationship, but we can never have a happy conclusion.\n\nI could not betray the man I loved.\n\nGood-bye darling.\n\nElke\n\nThe First Sergeant took the note from my shaking hands.\n\nHe said, \"Sit down, Lieutenant. We need to talk.\n\n\"Did Elke ever ask you about your job?\"\n\n\"It was just the opposite, Top. She told me she didn't want to know what I did. She said her job was to teach me German and Russian, so that I would have a good career...that's all she talked about; my career in the future, not my job.\"\n\n\"Lieutenant, did she act strange at all since you've known her?\"\n\n\"Yes. She was nervous at times and I found her crying when she thought I was asleep.\"\n\n\"Start at the beginning, Lieutenant\u2014from the day you met her until this morning.\"\n\nI talked for about thirty minutes. I told him everything that I could remember from our day-to-day Russian lessons to our dates. I explained that she told me that Choiden was her home town, and that about two months earlier she had taken a train there by herself to \"see her old friends\" she had explained. When she came back from that trip she was quiet and depressed, which at the time I thought was strange.\n\nFinally, I couldn't take it any more. \"Top, I have to go to the hospital.\" \n\nHe stood up and went to the phone and dialed a number. \"Corporal, I need a staff car. We're going to drop the Lieutenant at the hospital and then I need to talk to the boss.\"\n\nThere was a pause while the corporal said something.\n\n\"Corporal, tell him that I said I need to see him immediately\u2014that it's much more fucking important than his weekly staff meeting.\"\n\nAnother pause.\n\n\"Just say what I just said. Get off your ass and send the car. Have it waiting for us a block east of the apartment, and we'll meet it there.\"\n\nWe didn't say much while we waited for the car. Finally he said, \"Lieutenant, for now, you worry about Elke. Once we know her situation, we'll figure out what has to be done.\n\n\"Don't talk to anybody about this note\u2014even the doctor or Captain Myer. After I brief the Colonel, we'll make a decision on who should be made aware of the situation. Until then, assume nobody has the need to know.\"\n\nHe dropped me off at the hospital. I hurried into the reception area and asked who I should talk to about Elke. The head nurse pointed at a chair and said she would try to get some information. She came back ten minutes later and told me that the doctor would be out to talk to me shortly.\n\nFifteen minutes later the Major who came with Top walked up to me. \"Lieutenant, she is one very lucky woman\u2014she'll live, but another thirty minutes and she would have died. We pumped out her stomach twice and now have her on fluids that will mitigate the pills that she took.",
        "\"She won't be really conscious for quite a while\u2014probably until tomorrow morning.\n\n\"Lieutenant, this appears to be a suicide attempt. At a minimum we have to notify the German authorities, and I would guess she'll need some psychological counseling. I'll take care...\"\n\n\"Major,\" I interrupted, \"there are some things that you aren't aware of, and before you do anything I suggest you talk to Colonel Weldon or First Sergeant Franklin.\"\n\nHe looked at me in surprise. \"Isn't Colonel Weldon the Commander of the intelligence battalion?\"\n\n\"Sir, please talk to the Colonel or First Sergeant.\n\n\"Can I see Elke now?\"\n\nHe considered my request and then said, \"Follow me.\"\n\nWe walked down the hall until we reached a door. He opened it and said, \"Just look.\"\n\nElke looked terrible. Fluids were going into her through an intravenous line, her hair was wet and plastered against her face, and an oxygen mask was over her nose and mouth.\n\n\"Major, she looks awful.\"\n\n\"Lieutenant, we saved her life; she looks worse than she is. Come back tomorrow.\"\n\nI thanked him and left. As I walked through the front doors of the hospital, an MP jeep was waiting. A corporal jumped out of it when he saw me and saluted. \"Lieutenant, my orders are to take you to Colonel Weldon.\"\n\nI returned the salute and sat in the front next to him as he started the engine and headed to battalion headquarters.\n\nI walked into the outer office. Top was sitting at a desk. \"Lieutenant, the Colonel and I just talked to the doctor. I'm glad you followed my advice\u2014the Major won't talk to anyone about Elke.\n\n\"We know she's going to live, which is good news. The problem is that the corner she was in is still there\u2014either she betrays you or she sacrifices her kid. The Colonel is waiting to talk to you.\n\nTop knocked on the door and we entered the room. I went to attention and reported in. The colonel immediately told me to sit down at the conference table with him and Top.\n\n\"Lieutenant, I know your girlfriend is going to make it\u2014the doctor was confident there would be no long-term bad effects. From what First Sergeant Franklin has told me, you've done nothing wrong. Our problem is what are we going to do now?\n\n\"We'll question your girlfriend when she wakes up tomorrow. I want to talk to her before you see her, so don't go to the hospital until Top calls you. Don't go to work tomorrow either\u2014wait in your quarters. Understand?\"\n\n\"Yes, Sir.\"\n\n\"There are quite a few problems here, Lieutenant. First, your girlfriend is being squeezed by the Russians to spy on us using her kid as leverage. Second, her note implied other women are being forced to do the same thing\u2014not all of them would refuse to cooperate\u2014we need to identify those women.\n\n\"First Sergeant Franklin suggested a short-term solution\u2014that we give her information that will keep the Russians happy. Of course, that doesn't solve her long-term problem.\n\n\"Will she be missed at her job?\"\n\n\"No, Sir, she's on a week's vacation.\"\n\n\"Did anyone see her being carried out of her apartment?\"\n\nI thought for a moment. \"I don't think so, Sir. Most of the occupants work. There was no one in the hallway or the back stairs. It's not a very busy apartment.\"\n\nTop asked, \"Does she have any friends?\"\n\n\"Just me.\"\n\nWeldon stood up. \"Until we see her, there's no sense talking this thing to death. Lieutenant, you're not in trouble as far as I can tell, but you're restricted to your quarters until we talk to your girlfriend and Top calls you. Understand?\"\n\n\"Yes, Sir.\"\n\n\"You're dismissed.\"\n\nI went back to my room confused and frustrated. The only good thought I held was that Elke was still alive. However, it was clear that she was in a terrible situation, and I couldn't think of any way she could get out of the trap.  My helplessness sent me back into a depression. I didn't sleep very well that night\u2014pictures of Elke in her apartment bedroom and in the hospital would not leave my mind.\n\nI had desperate thoughts\u2014resign my commission and bring Elke to the US with me, or hide in Europe\u2014but I knew none of them were realistic. I finally fell into a troubled sleep in the early hours of the morning. I awoke about 1000 and drank some coffee, and then went back to my room to wait for the phone call.\n\nInstead, at about 1300, there was a knock on my door.\n\n\"Come in.\"\n\nIt was the First Sergeant. \"Good afternoon, Lieutenant.\"\n\n\"How's Elke?\"\n\n\"She's fine, Lieutenant. All the drugs are gone and there are few apparent after effects. She is logical and physically looks a hell of a lot better than when we saw her yesterday. She wants to see you.\"\n\nI stood up, but he held out his hand and said, \"We'd better discuss the situation; Colonel Weldon asked me to bring you up to speed.\"\n\nHe chuckled, \"The Colonel thinks that Elke, you, and I have bonded a little, so I get to do the talking.\"\n\nI sat back in the chair and waited.\n\n\"Lieutenant, from now on what you hear is considered top secret. You can't talk about it to other officers, enlisted personnel or civilians under penalty of military court martial. Do you understand?\"\n\n\"Yes, Top.\"\n\n\"We talked to Elke for five hours. You were the first soldier she approached. Everything she wrote in the letter seems to be true\u2014you did not reveal any military information, and other than giving the Russians your name and rank, she told them nothing.\n\n\"But the game was coming to an end. They demanded that she get more aggressive in getting information from you or her daughter would suffer. Apparently there are five women working out of this network\u2014three of them have their young children being leveraged against them; the other two seem to be spying without any overt coercion. \n\n\"She's agreed to work with us\u2014we will give her information, and she'll feed that information to the Russians. The information will be good stuff, but nothing that can hurt us.\n\n\"We need to identify the other four women who are spying. She's agreed to help us find the women, but she had a condition.\"\n\n\"What?\" I asked.\n\nHe looked at me. \"You know that girl is a lot tougher than she looks. The Colonel started yelling at her, but she stood her ground\u2014actually she told him off...The Colonel hasn't been told off for a while; it was interesting to watch.\"\n\n\"What's Elke demanding?\"\n\n\"She wants us to get her kid out.\"\n\n\"But Top, that's impossible. Her daughter's in the Russian sector of Germany.\"\n\n\"That's what the Colonel told her, but she's one stubborn kraut.\"\n\n\"So how did it end?\"\n\n\"The Colonel said he would kick it upstairs. Here's the argument. The kid is only ten miles across the border in a farm house with the other two kids. There are never more than five soldiers there and a woman to watch the kids. It's some type of regional spy center since they have a communications room and a fairly high-ranking officer in charge.\n\n\"A quick snatch isn't that impossible and who knows the information we'll find. If nothing else, we'll have Elke identify the other four women. If we snatch the one kid, we might as well get all three and take the other women into custody at the same time. We have special teams that practice that shit all the time.\"\n\n\"You would really go after Sophie?\"\n\n\"Lieutenant, that decision is even over the Colonel's head\u2014the division commander, his S2, and Military Intelligence at Ft. Meade all have to sign off on it. I can't tell you what they'll decide.\n\n\"Now you know as much as anyone. Go see your girlfriend.\"\n\nI got up to leave but stopped and asked, \"Top, I'm glad you're the one talking to me, but I'm surprised an officer isn't butting into the middle of this.\"\n\nHe chuckled, \"The Colonel and I go back a long way. We had some situations together as grunts. In fact, he insulted me and offered me a field commission. I turned it down to stay with my men, but he kind of feels I fucked up when I said no. He gives me a lot of space.\n\n\"Go, Lieutenant.\"\n\nI practically ran to the hospital. There was an MP at Elke's door, but he nodded permission to go in.\n\nShe was dozing when I walked up to her bed. She looked beautiful as she lay there, but I noticed that her complexion was even whiter than normal and she looked drawn. I touched her shoulder and she opened her eyes. She cried with surprise and then I leaned over and hugged her.\n\nShe was sobbing, \"I'm sorry, Dave, I'm so sorry. Can you ever forgive me for lying to you?\"\n\nI stroked her hair and shushed her as we hugged. Finally I forced her to lie back down. I pulled up a chair to the bed and held her hand.\n\n\"How do you feel, honey?\"\n\n\"I'm fine, Dave, but I'm so sorry...\"\n\n\"Elke, I love you; there is nothing to be sorry about.\"\n\nTears were filling her eyes again. She stammered, \"Did the First Sergeant tell you everything? I am so ashamed.\"\n\n\"Yes, Elke, but don't be ashamed. You never betrayed me and you were protecting Sophie. It's the Russians who should be ashamed for using little children to blackmail their parents.\"\n\n\"I promised your Colonel I would cooperate with him and give the Russians special information to mislead them, but I insisted that he bring Sophie to me.\"\n\n\"Elke, the First Sergeant told me that the Colonel would ask permission to see if they can rescue Sophie.\"\n\nI could see the stubborn look on her face. \n\n\"Dave, I want my Sophie.\"\n\nChapter 4\n\nThe next morning Elke was released from the hospital. However, before she physically left the building she sat down with the First Sergeant, an intelligence officer from the 2nd Armored Division's S2 office and a sketch artist. I was politely, but firmly, told that they would be more productive if I weren't with Elke when they talked. \n\nIt was obvious to me that they were trying to identify the other four women whom the Russians had either coerced or talked into spying in our regional sector.\n\nWhen the meeting was over Top walked over to me and said, \"She's trying, Lieutenant. It's just going to take time to learn everything that she knows.\n\n\"When does she go back to work?\n\n\"Monday,\" I replied. \"Why do you ask?\"\n\n\"Lieutenant, that's how she passes any information to the Russians\u2014a customer comes in and buys something and the exchange is made then. I'll talk to the Colonel and make sure we have something for Elke to give them.\"\n\nThe following Monday Elke passed on the news that in four weeks there would be joint maneuvers with our armored division and a newly formed Federal Republic armored brigade. The information was harmless since there would be a public announcement revealing the same news within the next ten days. However, it was the first information that Elke had passed to them.\n\nThe theory was to start with some small stuff and string it along to better and better information. The pressure would be less on Elke and Sophie, and it would give Division time to decide whether to go for the kids or not. \n\nThe next information she gave was that the West German armored brigade Commander was retiring and named the new commander. Then Top told her to pass along to them that ordnance for our tanks was being upgraded and the new ammunition would be arriving in three months. \n\nElke was given an identification card so she was now allowed to enter the outer perimeter of the base, if she was accompanied by an American soldier. The Officer's Club was in that area, so I could take Elke to dinner at the Club. The real purpose was to allow the First Sergeant and others to meet with Elke to continue their questioning. I would walk into the club with Elke and she would disappear for an hour or two while I sipped at the bar. She would come out of the meeting and we would have dinner together.\n\nThe short-term situation was fine\u2014Top told me that three of the other four women had already been located and were being watched, and that they were close to finding the fourth. Elke was more relaxed because the Russians were now happy with her and the threats to Sophie had disappeared. And, of course, she thought it was only a little while longer until permission was given to bring Sophie out.\n\nWhile Elke was more relaxed, I was more nervous\u2014everything I had experienced with the Army bureaucracy was that you never got what you expected. So I assumed that the decision would be not to go for the kids\u2014I couldn't believe that we would risk an international incident to grab three kids just because their mothers were spies, or to reward Elke.\n\nElke was scheduled to go to Choiden in three weeks for her quarterly visit with Sophie. Our activity picked up since this would be an opportunity for Elke to really concentrate on the layout of the building, the men involved, and the routine they performed. She met with Top every third day now to prepare her for her visit. \n\nTo make her visit easier with the Russians, she was given critical information to pass along\u2014the specification manual on the new ordnance for the tanks. Since I was, in theory, a supply officer in armor, it would be consistent that I would have access to the manual. \n\n\"But, First Sergeant,\" I asked, \"won't this information hurt us?\"\n\n\"Yes it would, Lieutenant, but they already have the manual; don't ask me how we know.\"\n\nShe told them on Tuesday that I was leaving the manual in the apartment when I went to work. On Thursday she took it to the pharmacy and gave it to her contact; two hours later it was returned to her.\n\nIt was a week before her visit to Sophie. Elke reverted back to her depressed mood as she worried whether she could fool them during the visit. Our sex life was zero; all I did was hold her during the night hoping that she would have a good night's sleep.\n\n\"Dave, I'm scared. If they catch me in a lie, they will hurt Sophie. One of these times I will make a mistake and they will know.\"\n\nI lied to ease her fears, \"I think the permission to go for Sophie will be made right after you return. That's why they want you to be watchful when you're there.\"\n\nOn Thursday night we had our last meal at the club. The First Sergeant and others met with Elke to go over again what they wanted her to observe when she was seeing Sophie. There were two buildings. The farmhouse contained the soldiers' quarters and the communications room. The small barn behind the house was where the children and the woman slept.\n\nAs accurately as possible they wanted Elke to be able to sketch the layout of the rooms, the access ways and any other physical things with the buildings that could either help or harm the team that we would possibly send in.\n\nI took her to the train station the next day and we hugged. \"Elke, don't be brave and don't do anything that you haven't done in the past. If they find you in a room where you have no business, it will be very bad.\"\n\n\"I understand, Dave. I'll be careful. If I make a mistake, Sophie will suffer.\"\n\n-------\n\nI spent a nervous weekend and met her train that Sunday night. She rushed into my arms and we kissed.\n\n\"Dave...\"\n\n\"Wait until we get to the apartment, Elke.\"\n\nShe nodded her understanding and kissed me again.\n\nWhen we entered the apartment Elke said, \"They are very happy with me. The Commander took me into his office to congratulate me on the information I have given them, and the manual that they copied. He said that now that I have your trust, I should be able to get more and better information.\"\n\n\"How is Sophie?\"\n\n\"Dave, she is getting so big. She was so happy to see me\u2014we played all day until she fell asleep exhausted. I miss her so much.\"\n\nI could tell that she was happy and excited\u2014the visit had gone well, and she had accomplished what we asked her to do.\n\nWe went to bed and for the first time in weeks the sex was uninhibited and not constrained by stress or worry.\n\nWe went to the club the next night. The First Sergeant met us inside the door. \n\n\"Lieutenant, you might as well have dinner by yourself\u2014this will be a long meeting. We have food for Elke.\"\n\nThree hours later Colonel Weldon walked up to me. \n\n\"Lieutenant, follow me.\"\n\nWe walked into a small office. As soon as I closed the door he said, \"I never thought we'd go after your girlfriend's kid\u2014too much political risk whether the grab was successful or not. \n\n\"The situation just changed. When the Commander of the unit invited her into the house to compliment her on the information and encourage her to get more, he received a phone call. She heard him discuss in Russian a matter that is known to only three people in the Federal Republic. It appears that the Russians have a spy at the highest level of the new government. \n\n\"The decision is being made as we speak. We have to find out the identity of the spy; we think that information might be where they are holding the kid.\n\n\"If the Federal Republic is compromised and embarrassed, it will be a huge setback for us.\n\n\"This will take a while. Be patient, Lieutenant.\"\n\n\"Yes, Sir.\" \n\nTwo hours later I was told to come to the meeting room. Top was there along with Colonel Weldon and two other officers I hadn't met before. Elke was beaming.\n\n\"Dave, they are going in to get Sophie.\"\n\nI looked at Top. His nod confirmed that Elke was right.\n\nI met Top for coffee early the next morning. He said, \"Lieutenant, we've had a team getting ready for the last three weeks in case the answer came down to go in. We already know the rough location of the buildings and some pictures of the outside. With Elke's help we have the last details of what we need. You don't have the need to know any details about the operation, but the night they go in for the grab, Elke will leave her apartment and never return; she should be ready to leave any time in the next three weeks. She'll live on the base until decisions are made about what to do with her and the girl.\n\n\"We've located the other four women and they'll all be taken into our custody the night of the operation. It's going to be a little messy since two of them have a relationship with a major and a light colonel.\n\n\"Until then, continue your normal routine, both at work and with Elke. I'll continue to give her information that she can pass on.\"\n\n\"Top, what are the chances this is going to work?\"\n\n\"Lieutenant, I know these soldiers. They are the best there is for this type of operation. If what Elke told us holds up, there's a good chance the team will bring the kids back.\"\n\n------\n\nOne week later Captain Myer stopped in front of my desk, \"Dave, Colonel Weldon wants to see you immediately. Be prepared; he really sounded pissed off.\n\n\"What did I do now?\" I thought.\n\nI walked into the outer office and the Sergeant said, \"Go right in, Lieutenant; they're waiting for you.\"\n\nI entered the office and spotted the First Sergeant and Colonel Weldon sitting at the conference table. I stopped in front of the Colonel and went to attention. \"Lieutenant Wheeler, reporting as ordered, Sir.\"\n\nHe pointed at a chair and said, \"Sit down, Lieutenant.\"\n\nHe paused to collect his thoughts and then continued, \"We have a four man grab team that has been training for weeks to pull this off and get the kids out. These enlisted men are experts at this type of thing\u2014they train for it all the time.\n\n\"I've just received orders from the Division's S2 that we have to have an intelligence officer included in the grab team. I violently disagreed with that decision and went to the Division Commander; he backed his S2.\n\n\"So now we have to pull one of the four experts and replace him with an officer. Of course, you would have to volunteer.\"\n\nI was surprised...no shocked, \"Me, why do you want me...Sir?\"\n\n\"Top thinks that you have common sense, that you know what you don't know, and that you won't try to be a hero. Most of our officers would want or insist that they take charge of the team. That's not going to work\u2014it's bad enough to pull a man from the team, but to put an outsider in charge of them would be a disaster.\n\n\"You would nominally be in charge of the team, but in fact, Sergeant Waters would be in charge. You would have to instantly obey any \"suggestion\" he gives you.",
        "\"Well, Lieutenant?\"\n\nI really had no choice. The operation was for Elke, and Elke was my responsibility.\n\n\"Yes, Sir, I volunteer.\"\n\nThe Colonel nodded as if this was expected and said, \"You're relieved from all duties. I'll speak with Captain Myer. Go with the First Sergeant, and he'll explain how it's going to happen.\"\n\nWe drove to a building some distance from the office.\n\nSomething had bothered me ever since Elke came back from Choiden. \"Top, they never were going after Sophie, were they?\"\n\n\"Lieutenant, you and I don't know the answer to that question. War and spying is nasty business, and sometimes bad things happen. No good can come to you and Elke if you let that question fester in you. \n\n\"You should focus on the mission.\n\n\"Right now you're going to meet the team. You're going to face a great deal of hostility from these men. They train as a team and you're breaking up the team. They know you didn't make the decision, but you're an officer. Their attitude against you doesn't make sense, but it's the real world.\"\n\nAs usual, the First Sergeant was right. I walked into a small room and three pairs of hostile eyes stared through me as he made the introductions. There was no hand shaking, smiles, or even an attempt at politeness. The three were all infantry sergeants, obviously in great shape, and they looked mean. The head of the team was a soldier named Waters.\n\nTop took me over to a wall where a large cardboard was nailed up. The room layout of the farmhouse and barn was sketched on the cardboard. He started pointing out the various rooms when I heard one of the men mutter, \"Candy ass Lieutenant. Probably hasn't fired a gun in...\"\n\nTop whirled around; it was a person I hadn't seen before\u2014his face was hard and I could see a vein throb in his forehead. \n\n\"Waters, you're a god damn, fucking moron. The Lieutenant volunteered for this; you know he wasn't part of the decision, and you don't know him. You're making an assumption\u2014an assumption that can get your team killed.\n\n\"The Lieutenant will do his job, which is anything you tell him to do.\n\n\"Are you going to do your job, Waters?\"\n\n\"Jeez, Top, take it easy. I was just...\"\n\n\"It ain't 'Top,'Sergeant; it's First Sergeant.\"\n\nThe room was deadly quiet. Finally, Waters said, \"I'll do my job, First Sergeant.\"\n\nI'd never seen this side of Franklin and was surprised, if not a bit scared. The gentle sarcasm and chiding which was the personality that I had seen was gone; in place was one tough soldier who wouldn't back down to anyone.\n\nHis face relaxed and the tension in the room dissipated.\n\nThe plan was meant to be simple. The two other sergeants would go over two nights before the grab, hunker down, and observe the buildings to make sure that nothing that Elke had described had changed. Waters and I would go over on the night of the operation and meet up with the first two. Assuming no surprises, we would overpower the staff and take over the building at 0300\u2014that time of night everyone should be asleep or wishing they were.\n\n\"We\" was not quite correct. The three sergeants would overpower the staff. When the buildings were secure, Waters would signal me to approach the buildings. My job was to gather any information in the house such as codebooks, signal communication and records. Elke had spotted two safes that were open when the communication room was staffed, and a filing cabinet in the Commander's office. We were hopeful to get some useful information.\n\nWaters asked when I had last fired a rifle. Somewhat embarrassed, I told him at Officer's Basic School, which was over a year ago. He made the decision that I would only carry a sidearm with three loaded magazines.\n\nWe would go over and come back in a liquor truck that was used for smuggling\u2014the Russian border guards got a case to let the truck go over the border, the mayor and army garrison commander of the city got two cases each for allowing the smuggling, and the restaurants paid an enormous price to obtain the scotch for their customers. Everyone was in on the take\u2014the truck had been crossing twice a week for months. The truck had a false compartment in the front; it looked like the liquor was stacked against the wall, but the wall hid a two-foot concealed space right behind the cab of the truck.\n\nWe would stay at the farm house until our truck came back at about 0600. The four soldiers and three kids would squeeze into the hidden compartment and cross back into West Germany. It would be a very tight fit with seven of us in such a tiny space, and it was obvious why the team was limited to four members.\n\nThere was also a \"Plan B.\" Everyone but me winced when \"Plan Bravo\" was described. Our normal helicopter was \"the bubble\" that could be used for observation, or medical evacuation with two stretchers lashed to the outside struts. It was called the OH-13H Sioux.\n\nOur division had recently received the Sikorsky model S-55, which the army designated as the H-19C. It was designed as a utility troop carrier with a crew of two and a top speed of 75 mph. It was the first helicopter that could carry soldiers or wounded inside the hull, and the payload was about 1000 pounds. The helicopter was still being tested; the jury was out whether this new concept was viable.\n\nIn any case, an H-19C would be flying just inside the American sector border starting at 0300. If something went wrong with the truck, we would call it in and exit through the air. The calculation was that it would take 12 to 14 minutes from the time we called until the helicopter arrived at the landing zone.\n\nTo make Plan Bravo even dicier, the radio we would use\u2014a modified PRC-10\u2014had a limited range and we were at its limit.\n\nNobody liked Plan B. It was risky, the helicopter was still experimental, and infantry troops wanted their feet on the ground. The payload of 1000 pounds was pushing the limit for four soldiers with their equipment and three kids. To better the payload odds, it would be flying with only one pilot instead of its normal two.\n\nAfter hearing about the helicopter, I winced also\u2014this was not the way I wanted to come back.\n\nAs Top drove me back from the planning meeting he asked, \"How many times have you fired your sidearm?\"\n\n\"One hundred times, Top\u2014twenty-five times at each of the summer camps, and once as a requirement for passing the Officer's Basic Course.\"\n\n\"So you haven't fired in over a year?\"\n\n\"Yea.\"\n\nHe turned the jeep around and we headed for the armory. \n\nHe looked at me, \"Check out a sidearm and bring three magazines and 500 rounds with you.\"\n\nWe drove to the firing range and as we arrived, a sergeant ran over and spotted the First Sergeant.\n\n'Hi, Top. What do you need?\"\n\n\"A place on the short range, and keep the officer-in-charge away from me.\"\n\nThe sergeant grinned, \"No problem.\"\n\nWe stood in front of the target thirty feet away. \"Lock and load, Lieutenant. Three magazines.\"\n\nI fired away and when I was finished, we walked up to the target. Top looked at it for a few seconds and finally said, \"Lieutenant, there is bad and god awful. What do you think?\"\n\n\"I'm a little bit south of god awful.\"\n\nHis plan over the next two hours was to make me an expert. He quickly abandoned that idea and tried to make me adequate with the sidearm. Finally he came to the conclusion that he should teach me how not to shoot my fellow soldiers.\n\nWe were driving back from the firing range when Top said, \"Lieutenant, I strongly suggest you don't chamber a round unless Waters tells you.\"\n\nThe answer was obvious; I agreed.\n\nThat night I told Elke about the change of plans. Already stressed to the limit with fears about Sophie, when she learned I was going with the grab team, she lost it\u2014crying for hours. All I could do was hold her.\n\nThe two sergeants went over the next night. They used the radio to send a single, pre-arranged number each night that said the insertion was successful, they were observing, and nothing had changed from what Elke had told us.\n\nTwo nights later Waters and I slipped under the liquor truck and pulled ourselves into the hidden compartment and resealed the floor hatch that we had come through. It was a tight fit and coming home would be much worse.\n\nThe First Sergeant had assured me that he would meet Elke at her apartment and take her back to the base as soon as he knew we had crossed the border.\n\nWaters and I had an uneasy truce. Nothing was said until we felt the truck braking. \"We're at the border,\" he whispered.\n\nWe heard some laughing, the back door of the truck was opened and then shut, and the truck slipped into gear as it lurched forward. Thirty minutes later the truck stopped again and we heard two knocks on the panel. We unlashed the floor plate and dropped out. The truck left and continued its journey. \n\nIt was pitch dark and I could hardly see Waters standing next to me. He whispered, \"Don't move; they'll find us.\"\n\nMinutes later I heard two fingers click\u2014the two sergeants were there and quickly led us to their observation post in a clump of trees next to an open field about 200 yards from the farmhouse. They had dug a shallow depression between two bushes, lined it with a blanket and then covered themselves with brush. During the day they were invisible, but had a clear look at the farm house and barn. At night they carefully explored the farm field locating the landing zone if Plan Bravo were executed, and deciding the best approach to the buildings without being seen.\n\nThere was one hitch\u2014we were expecting two guards, two communications soldiers, the woman who cared for the kids, and the Commander. They told us that the Commander had left the farm house in the late afternoon and had not returned.\n\nWe hunkered down to observe, waiting for 0300. Waters whispered, \"Lieutenant, nothing is going to happen for a while; just try to sleep.\"\n\nHe had become a comedian\u2014there was no way I could sleep.\n\nOur hiding place was next to a large farm field. I could smell the fertilizer\u2014probably cow or horse manure or both\u2014permeating our area. I thought, \"I'm in a world of shit.\"\n\nI nervously giggled to myself\u2014I had exactly described my situation.\n\nThe time came and the three disappeared into the darkness. Before they left they gave me the binoculars, radio, and the marking lights in case Plan Bravo took place.\n\nOne sergeant would take care of the woman first, and then join the other two. Waters would take out the outside guard, and then the three would enter the house. I was watching through the binoculars\u2014twenty minutes later I spotted a shadow appear behind the outside guard who was smoking. The cigarette fell to the ground. There was no sound.\n\nAnother fifteen minutes went by, and then I saw a single beam of light flash in my direction\u2014the signal that the house was secure.\n\nI ran to the house and entered the main room. Four men and a heavy-set woman were lying on the floor handcuffed to one another. They were all unconscious\u2014each had been given a shot that would knock them out for at least five hours; we would be long gone by then. The truck was expected at 0630.\n\nWaters immediately posted an outside guard and sent the other sergeant to watch the kids. When it was time to leave we would wake them and give them candy that was treated with a drug that would keep them drowsy and quiet.\n\nHe turned to me, \"Do your thing, Lieutenant.\"\n\nI walked into the communications room and found both safes open. I opened a duffel bag that I had brought and dumped the contents of both safes into it. There would be plenty of time to see what we got later.\n\nI searched the rest of the room and found nothing else.\n\nNext was the Commander's office. It had a desk with a phone, a bed, filing cabinet, and a bookcase\u2014it was exactly as Elke had described it. \n\nI searched the filing cabinet first. It was unlocked, which made me suspicious. There were some folders in it that I put in the duffel bag, but I didn't believe any sensitive information would be left in an unlocked filing cabinet.\n\nI searched the bookcase next, but other than some pornographic picture books there was nothing else. I spotted a door to the closet and opened it. Much to my surprise I found a heavy, very large safe.\n\nI yelled, \"Waters. Come here.\"\n\nWaters stared at the safe and said, \"No one told us about this.\"\n\n\"Can you blow it open?\" I asked.\n\n\"No way, Lieutenant. We didn't bring that kind of stuff with us.\"\n\nHe tried the handle to confirm it was locked, cursed, and walked away.\n\nI was frustrated\u2014there had to be something good in the safe, and I couldn't get to it.\n\nFor minutes I stared at the safe in dismay, but then I remembered something. A month earlier the security section of the battalion had come into our office during the weekend. After five hours they had found the combinations of over fifty percent of the safes in the room. Both enlisted men and officers had written the combination to their personal safes and hid them in their desks or underneath things on their desks. It was assumed they wrote the combination down when they first got it, but then, when they were sure that they had it memorized, they forgot to destroy the paper with the combination. \n\nColonel Weldon was embarrassed and chewed ass from the top down\u2014no one was spared his anger at such a stupid, lazy action.\n\nWith nothing to do I went back to the commander's desk and searched every drawer, checking to make sure nothing was taped to the underside\u2014nothing. I searched each item on his desk and still didn't see anything until I pulled a picture frame apart\u2014the picture was of him receiving a medal from a general. On the backside of the picture was taped the combination.\n\nI was excited and hurried over to the safe. Seconds later I twisted the handle and the door swung open.\n\n\"Waters,\" I yelled.\n\nWaters walked in and stared, \"Shit, Lieutenant, you did it. Take everything.\"\n\nThe safe contained about 50 audiotapes. On each of the tapes was attached a piece of paper that had a name on it. Three large manuals were in the safe. I opened one of them and it appeared to be a diary or log of activity. There were about 30 folders\u2014some very thick and others with only had three or four pages. In some of the folders there were pictures\u2014of naked men and women. The women were all extremely pretty, but the men ranged from muscular bodies with military type haircuts to old men with protruding stomachs and white hair. Finally, I found a thin notebook\u2014each line had a day of the year and a six-digit number after the day. I couldn't make sense out of it.\n\nI emptied the safe and put the contents into the duffel bag, which by now was quite full. I walked into the communications room to find Waters. He sat at the desk calmly smoking a cigarette.\n\nHe looked at me, glanced at his watch, and said, \"A little more than two hours and we're gone.\"\n\nI replied, \"I think I found some good...\"\n\nAt that instant, the phone rang.\n\nWaters and I stared at the phone. He said what I had just thought, \"Fuck!\"\n\nIt rang a second time. \"We have to answer it,\" I said.\n\n\"We're fucked,\" he repeated.\n\nI picked up the phone and altered my voice to a higher pitch and said in German, \"Do you know what time it is?\"\n\nA voice responded, \"Who is this?\"\n\nI replied, \"I worked 12 hours today and finally got to sleep, and I get an imbecile who asks me do I know who I am.\n\n\"What number did you dial, idiot?\"\n\n\"68-66543.\"\n\n\"You dummy. You dialed the wrong number.\"\n\nI slammed the phone down.\n\nI looked at Waters. \"He's going to call back. I'll answer in Russian and try to fake it, but I think we're in the shits.\"\n\nThe phone rang again. The Russians are uncomfortable talking on the phone and tend to take an aggressive posture. I answered with a typical Russian response, \"So talk.\"\n\n\"Who is this?\" the same voice demanded.\n\nI ignored the question. \"Me? I'm on my duty station.\"\n\nThere was a two second pause and then I heard the click as he hung up.\n\nI looked at Waters, \"I think it's the boss and he's on to us.\"\n\nI didn't like Waters, but I have to admit that in a second he made a decision. He yelled to the outside guard, \"We're going to Plan Bravo, get the kids and set up a landing zone.\"\n\nHe reached for his radio and yelled, \"Eagle, Farmer. Plan Bravo. I repeat, Plan Bravo.\"\n\nI heard the response, \"Roger, Farmer, 14 minutes.\"\n\nWaters replied, \"It might be hot.\"\n\n\"Roger.\"\n\nWaters looked at me. \"The town is five miles away. It will take him some time to get troops. My guys will take care of the kids and set up the landing zone. Your job is to get the duffel bag to headquarters.  Any questions?\"\n\n\"No, Sergeant.\"\n\nI heard the screams of little children as they woke up to soldiers pulling them from their beds.\n\nWaters left me to make sure his men knew where to set up the landing zone\u2014deep in the farmer's field with no obstructions for a helicopter coming in.\n\nHe came back to the house and we stood there watching the road. Waters was smoking another cigarette.\n\nThe radio came alive, \"Three minutes.\"\n\nWe both saw three sets of headlights coming into view about 1500 yards down the road.\n\n\"Fuck! Let's go, Lieutenant\u2014the train's leaving with or without us.\"\n\nWe started running just as we heard the distant sound of the helicopter. The other sergeants with the kids were at the landing zone. We were maybe 200 yards away.\n\nI had just thought, \"The irrigation ditches will stop the trucks from coming into the field\u2014we're going to make it,\" when I heard the sound of automatic weapons start firing.\n\nThe helicopter swooped in and landed. The sergeants with the kids climbed aboard. We were only 40 yards from the helicopter when I heard a thud, and grunt. I heard Waters gasp, \"Shit.\"\n\nI looked back and saw he was down, writhing in pain.\n\n\"Fuck,\" I thought.\n\nI ran back to him and yelled, \"You've got to stand up so I can carry you.\"\n\nI reached and grabbed his arm and I pulled as he braced himself on his good leg. As soon as he was standing, I put my shoulder into him\u2014Waters on my left shoulder and the duffel back hanging from my right.\n\nThose 40 yards seemed to take forever. I heard bullets hitting the ground near me, but the distance was still great enough to prevent accurate fire.\n\nThe helicopter's engine started racing even before I got to the door; Waters was yanked from me and pulled into the helicopter. I threw the duffel bag on the helicopter's floor just as I heard the engine go to full power and start to lift.\n\nI reached for the edge of the door and caught it; the helicopter lifted and half my body was dangling out the door. Hands grabbed me and violently pulled me into the helicopter\u2014I banged my leg really hard, but it didn't matter\u2014we were at 20 feet and moving.\n\nSomeone pulled the door shut and the noise abated a little. I lay on the floor of the helicopter as it picked up speed and altitude. The kids were in the corner held by a sergeant. I spotted Sophie\u2014a miniature version of Elke.\n\nThe other sergeant was cutting the pants leg of Waters to expose the wound. It was obvious he was in great pain.\n\n\"Do you want some happy juice?\" he asked Waters.\n\nHe gasped, \"Once we cross the border.\"\n\nTen minutes later the sergeant yelled, \"We're across.\"\n\nAs the sergeant took the needle out to put him out of pain, Waters looked at me and said, \"You ain't so bad after all, Lieutenant.\"\n\nTen seconds later Waters closed his eyes. I had crawled over to Sophie and hugged her as she slept in her drugged state. I assumed that everyone could see how scared I was; my body was shaking and I felt I could lose it at any time.\n\n\"Lieutenant.\"\n\nI looked up. The other sergeant looked at me and pointed, \"Lieutenant, you got dinged.\"\n\nI glanced down and saw that blood had stained my entire right leg; I felt the first spasm of pain.\n\n\"Ten minutes out, Lieutenant,\" yelled the sergeant.",
        "We landed ten minutes later. The First Sergeant was running the show\u2014two ambulances were there to load up Waters and me. A staff car with two nurses, a driver and a guard took the children away, and two MP jeeps were there to take the duffel bag.\n\nThey cut away my pants leg in the ambulance. As soon as we reached the hospital I was wheeled into an X-ray room and then the gurney was pushed into a brightly lit room and I could feel them cut away the rest of my uniform. It was no longer a spasm of pain; my leg now hurt like hell. \n\nMinutes later I looked up at doctor holding a mask over my face. As he pushed it against my mouth and nose he said, \"Take a deep breath, Lieutenant. You got something in there so we're going to dig around and get it out of you.\"\n\nI took a breath and then everything disappeared.\n\nChapter  5\n\nSomeone was lightly shaking my shoulder; I woke up. A voice said, \"It was a ricochet. The round went in three inches; hit an artery and then some muscle tissue, but no bone. You'll be almost back to normal in two weeks. \n\nLater I felt someone kiss me; I could feel tears...Elke? I went back to sleep.\n\nI woke up again in late afternoon; I was hungry and thirsty. The nurse said she would get something for me.\n\nTen minutes later, Top came into the room. \"Lieutenant, Elke and Sophie are fine. Waters has a long recovery since the round broke the femur, but he'll be back. And the Colonel is ecstatic; since it appears that you hit the jackpot.\n\n\"A team of ten intelligence officers is flying in from Ft. Meade to help analyze what you found.\n\n\"For a puke Lieutenant, you appear to be a hero.\"\n\n\"Elke?\"\n\n\"She's with Sophie in the hospital. The drugs we gave the kids were strong, and they are under observation. She'll see you tomorrow.\"\n\nThe next morning at about 0730 the door opened and the First Sergeant came into the room with two cups of coffee.\n\n\"Good morning, Lieutenant.\n\n\"Good morning, First Sergeant.\"\n\nHe grinned as he handed me the coffee. \"Sir, I broke a rule and I trust to your discretion\u2014this is the first time in my military career I ever got a cup of coffee for a lieutenant.\"\n\nFeigning seriousness, I replied, \"Trust me, Top. Your secret will never be forced from me.\"\n\nWe talked a while and then he left. There was an initial meeting of the ten intelligence officers over from Ft. Meade along with the Division's intelligence section to decide how they would attack the information we had brought back...Top was invited to attend the meeting.\n\nElke came into the room at about 1100. She kissed me hard and thanked me for saving Sophie, and then she started to cry\u2014overwhelmed by everything. I just held her and when she stopped crying, we kissed again.\n\nThree hours later I was discharged with a pair of crutches and an order that the bandage had to be changed every other day.\n\nElke and I sat on a bench overlooking the parade grounds. I saw that we were loosely surrounded by four guards, but didn't mention it to Elke. We held hands and for long periods of time nothing was said. At one point Elke whispered, \"I owe you everything.\"\n\nI just squeezed her hand.\n\nAfter dinner that night with Elke and Sophie (Sophie was very shy, and I felt terrible that she was so scared of me), they went to the Visitor's Housing and I went to my room.\n\nI took a pain pill and quickly fell asleep.\n\n\"Lieutenant, wake up.\" I felt someone shaking my shoulder.\n\nI looked up and saw the clock showed 0400. The Sergeant said, \"Colonel Weldon wants to see you in 10 minutes.\"\n\n\"I need to shower and shave.\"\n\n\"No time, Lieutenant. The jeep is outside.\"\n\nI walked with my crutches into the Colonel's office\u2014I had passed Elke who looked at me bewildered and scared. Sophie was in her lap sleeping.\n\nWeldon grinned at me and said, \"Lieutenant, we hit the mother lode on what you got out of the safe. Our people in the field tell us the Russians are outraged and humiliated. To regain some face, the word is that they're going after Elke and the kid to show us they can't be treated that way.\n\n\"They're going to try to kill them. \n\n\"We've made the decision to get all of you out of here.\n\n\"A plane will take you to Frankfurt, then Manchester and Washington.\"\n\n\"When?\" I asked.\n\n\"Now.\"\n\nMinutes later we walked into the courtyard. Two jeeps and a staff car were waiting for us. Top was in charge and ordered four armed soldiers into the lead car, four into the third car, and then told Elke, Sophie and me to get into the back seat of the staff car. He carried a shotgun with him as he got into the passenger's side of our car.\n\nWe raced to the nearby military airport. A ten-passenger military plane was sitting on the tarmac with its propellers turning over as we pulled up.\n\nWe stopped in front of the plane as a staff sergeant came running up. \"First Sergeant, this plane is full.\"\n\n\"Bullshit.\"\n\nThe sergeant whined, \"First Sergeant, please get off the tarmac.\"\n\nTop turned to his men and handed the shotgun to one of them. He said, \"This plane doesn't leave.\"\n\nTen minutes later two majors and a captain walked down the plane's stairs giving us dirty looks. We boarded.\n\nThat was the end of the screw-ups. We were met at Frankfurt, then at Manchester, and finally at Andrews outside of D.C. Two staff cars met us at Andrews, and an hour later we were escorted into an estate, fed a meal, showered, and Elke and Sophie went to sleep. Before they let me crash, a doctor inspected my wound and put a new bandage on it.\n\nThe next morning Elke and I met with a colonel who explained that we were going to stay at the safe house while they debriefed Elke. He thought it would take two or three weeks.\n\nI asked, \"Can I be with Elke when you talk to her?\"\n\n\"No, Lieutenant.\"\n\nI was pissed, but Elke touched my arm and said, \"Stay with Sophie. Make her comfortable with you.\"\n\nWe started a routine. Elke would go to be debriefed and Sophie and I would go to play. Sophie quickly became my best buddy. She laughed and giggled, and squealed with pleasure every time I gave her a new stuffed toy, which was about every other day\u2014I was spoiling the hell out of her and loving every minute of it. \n\nOne morning they debriefed me with Sophie on my lap, but it was only about the grab\u2014from the time I went in to the time we returned to base with the kids.\n\n\"When Waters got hit, why did you go back?\"\n\nI thought what a dumb ass question that was...\"He's one of us.\"\n\n\"But Lieutenant, you must have known that you had important information that Waters told you to protect.\"\n\nI was pissed and repeated, \"He's one of us.\"\n\n\"Lieutenant, did you see Water's weapon when you went back for him?\"\n\nAnother dumb question I thought. \"No.\"\n\n\"So you would agree the weapon was lost under fire?\"\n\n\"I guess so...yes.\"\n\nOne of the officers took pity on me. \"Waters signed out the weapon and he lost it. The bureaucracy says we have to file a report relieving him of responsibility for the weapon.\"\n\nI grunted. I asked, \"Can you tell me about the stuff we brought out?\"\n\nThe same officer chuckled and replied, \"Well the good news, Lieutenant, is that your security level has been raised to 'Top Secret.' The bad news is that you don't have the need to know what you brought out; we can't tell you a thing about it.\"\n\nSophie started to squirm and I thought, \"Typical Army bullshit.\"\n\nAfter a few more questions they ended the meeting. Sophie and I went out to play.\n\nWe were in adjoining rooms\u2014Elke and Sophie in one room, me in the other. On the second night at the safe house I heard a light tapping on the connecting door that separated our two rooms. It was Elke.\n\nShe had an impish grin on her face. \"You played with Sophie all day; now will you play with me?\"\n\nLater, as she gasped with anticipation, she begged me to enter her. She was sopping wet and I slid in fully with the first thrust. It was not the night for slow love making, but rather a rough, violent rhythm that tried to erase all the stress and troubles we had endured over the past months. When she came, she screamed my name. I let myself go and pushed into her one more time as far as I could go and then felt my cum filling her\u2014I never remember coming so long or so hard.\n\nWhen we were through she looked at me and simply said, \"I love you, Dave.\" \n\n------\n\nAt the beginning of the third week, Sophie and I were playing in the field behind the mansion when a staff car pulled up. A brigadier general got out and walked towards me.\n\n\"Lieutenant?' he asked.\n\nEven though I was not in uniform, I went to rigid attention\u2014I'd never met a general before.\n\n\"Sir, Lieutenant Wheeler.\"\n\n\"We need to talk,\" he said genially.\n\n\"Sir, I have Sophie...\"\n\n\"Lieutenant, my aide has three young kids. He also has a four-month-old Labrador puppy that he brought with us. She'll be entertained.\"\n\nI heard Sophie squeal with laughter as a black puppy started chasing her.\n\n\"Yes, Sir.\"\n\nWe started walking. \"Lieutenant, here's the situation. I got my star two months ago. Your German intelligence command has dual reporting\u2014one goes to the Division Commander and the other goes to the Washington Army Intelligence Agency, which happens to be the duty that I just assumed.\n\n\"You had a tremendous achievement and both Colonel Weldon and I seem to be getting most of the credit for it\u2014I just gave the okay based on lower recommendations. Bullshit, of course, but you take it when you can.\n\n\"Since you just made me a hero, so to speak, I thought I should at least get the real story.\"\n\nI was telling him about the operation when he interrupted and asked, \"Were you scared, Lieutenant?\"\n\n\"Sir, I was scared shitless from the time I got into the truck until we landed back at the base.\"\n\nHe grinned at me, \"I agree with the others, Lieutenant. You do have some common sense.\"\n\nWe talked for two hours. We ended up in the field where we started. Sophie was asleep on a blanket and the black Labrador puppy was sleeping with his tiny head resting on her stomach\u2014they were both exhausted.\n\nI turned to the General and asked, \"What happens to Elke?\"\n\nHe paused, \"I'm told she'll be moved to a German neighborhood in Milwaukee and be assimilated into the area.\"\n\n\"Can you guarantee me that the Russians can't find her there?\"\n\n\"Of course I can't guarantee that. Do you have a better idea?\"\n\n\"Yes, Sir.\"\n\nAfter I was through talking he looked at me. \"Lieutenant, you're asking for the world.\"\n\nHe paused and then said almost to himself, \"But if ever a young lieutenant is going to ask for the world, this would be the time to try.\n\n\"No promises, Lieutenant. Let me work on it.\"\n\nFive days later I was in my Class A uniform and escorted into an office in the Pentagon.\n\nThe General was there, along with a major from the Adjutant General Corps and a corporal holding a camera.\n\nThe General said, \"Let's get it on, Major.\"\n\nThe Major said, \"Attention to Orders:\" They gave me a medal for the ding, and another with a \"V\" for valor for helping Waters and the overall mission. \n\nI thought it was over, and relaxed. The general smiled and said, \"Not yet.\"\n\nThe major repeated, \"Attention to Orders:\" I received an early promotion to Captain and the general put on the two silver stripes\u2014railroad tracks\u2014when we were done.\n\nAfter the pictures were taken, the General dismissed the Major and said, \"Follow me, Captain, Corporal.\"\n\nWe went down a corridor and came to another door. I opened it and saw Elke in a simple yellow dress with Sophie in front of her holding a bouquet of flowers. Next to Elke was First Sergeant Franklin in his Class A uniform. I saw on his chest three purple hearts, a bronze star with two \"V's\" for valor and a silver star.\n\nBehind Elke and Top I saw the army chaplain. Ten minutes later we were married. The Corporal took pictures and then was dismissed.\n\nWe had a wedding luncheon\u2014the General, Top, Sophie, Elke, and me.\n\nThe general looked at Top and said, \"First Sergeant, it was nice of you to take leave to be at the wedding to give away the bride.\"\n\nNot in the least intimidated Top replied, \"Actually, General, the courier at our base got sick, and I volunteered to make the courier run.\n\n\"And,\" he said with a big smile, \"when I got here, there had been a screw up and I'm stuck in Washington for at least five days waiting for the return courier flight.\"\n\nThe General grinned back and said, \"I admire your mastery with the army system, Top.\"\n\nTop grinned, \"I take that as a compliment...Sir.\"\n\nThe next day a military transport took us to the West Coast and from there to the Big Island in Hawaii. We were met at the airport by a military sedan and were escorted, under guard, to a private military resort\u2014it was provided to field-grade and general-grade officers for taking leave with their families\n\nThe Major-in-charge ignored the fact that I wasn't a field-grade officer and gave me a brief orientation\u2014uniforms were strongly discouraged, all food and drinks were complimentary, and there was no tipping. He advised me that if Elke and I wanted time by ourselves, there was a waiting-list of enlisted personnel who would baby-sit for a few dollars.\n\nWe were taken to a two-bedroom cottage that was decorated very nicely. The small porch had two rocking chairs that faced the distant ocean where we could see the white breakers coming towards shore.\n\nIt was a fantastic place to have a honeymoon. Elke and Sophie were excited to be so near the ocean and were anxious to go to the beach and play in the ocean for the first time in their lives.\n\nThey went into Sophie's bedroom to change into their swimming suits, while I changed in our bedroom. They came out of the bedroom, giggling and laughing and stood at attention for me to inspect their suits\u2014they had matching two-piece, red swimming suits. My heart melted when I saw Elke and her tiny clone standing before me. I got hard and Elke giggled.\n\nLater that night when Sophie fell into an exhausted sleep, I stripped Elke and teased her until she begged me to come into her. I entered her and slipped through her wet walls until I had penetrated her completely. Moments later we climaxed together. We fell into a comfortable sleep in each other's arms. For the first time in months we felt no pressure or stress\u2014just love.\n\nI had ten days at the resort before going to my next duty station. We quickly fell into a routine of early morning breakfast, playing on the beach, a light lunch, then a nap for Sophie, and wonderful sex for Elke and me.\n\nThe afternoon was always different\u2014a picnic, or trying to teach tennis to Elke and Sophie, or flying kites\u2014we did anything that we thought would be fun.\n\nWe usually had an early dinner together and then we played with Sophie for a while until she was tired and put her to bed. The rest of the waking night was for talking to each other and more sex.\n\nOn the eighth day we hired an enlisted soldier to watch Sophie while Elke and I went to the main dining room for a dinner just for us. They gave us a table for two on the outside porch facing the ocean. She sat across from me in her low-cut dress. The candlelight sent streams of light bouncing off her naked shoulders and upper chest. The minimum makeup she wore highlighted her high cheekbones.\n\nIt was a wonderful meal\u2014Elke was laughing, teasing, and giggling the entire meal. Once Sophie had been rescued I had found another side of Elke's personality that had been repressed by the stress of her situation\u2014she had an impish sense of humor and loved to tease\u2014especially me.\n\nHer most common tease was to use my new rank to address me...\"Would the Captain like another drink?\"\n\nI would say, \"Elke, stop that.\"\n\nShe would just giggle harder.\n\nAfter dessert I said, \"Elke, we only have two more days and then we go to my posting. It's not the best assignment that the Army could give us; it could be hard for you and Sophie.\"\n\nElke turned serious, \"Dave, you still don't understand. Sophie and I have no family, and now we have no country. All we have is you\u2014you saved our lives and made me feel safe. Wherever you take us, we will not complain, for our entire world is only you.\"\n\nThat absolute look of love and surrender shocked me.  I realized, once again, how deep her love was for me. \n\nWe went back to the room, and paid the enlisted soldier for babysitting, I checked that Sophie was sleeping and then returned to our room.\n\nElke stood there naked. She grinned impishly, \"Would the Captain like a second dessert?\"\n\nI took off my clothes and joined Elke on the bed. After a deep kiss I attacked her breasts with my tongue\u2014licking, sucking, and lightly biting her hard nipples.\n\nElke giggled and said, \"I hope the Captain isn't going to tease me.\"\n\nI refused to answer and continued to tease her body with my tongue. Eventually I reached her vagina. I spread her legs wider and began to kiss her inner thighs and then spread her vaginal lips and licked her inner walls. \n\nBy now Elke was aroused and her groans were getting louder. She finally gasped, \"Dave, quit teasing; put it into me.\"\n\nI resisted, but then she wailed, \"Please!\"\n\nSeconds later I slipped into her.\n\nAfterward, we lay facing each other. We quietly talked as our bodies recovered from their sexual release. I kissed her forehead and then her nose. My hands cupped each breast while my thumbs gently rubbed her nipples.\n\n\"My Captain wants an encore?\" suggested Elke with a smile.\n\n\"No, Elke. It's just that I had to put my hands somewhere.\"\n\nSeconds later I felt two hands gently cup my balls and start to lightly squeeze them as her thumbs teased my cock.\n\nI looked at her. She gave me that innocent, impish look.\n\n\"But Dave, I have to put my hands somewhere.\"\n\nI was hard again. Elke grinned and said, \"On your back, Captain.\"\n\nShe straddled me and guided my cock into her as she lowered herself. She looked at me and grinned as my hands once more held her breasts. But then she took my hands and put them on the bed\u2014all I could do was look at her.\n\nMoments later she started a rhythmic motion as she pulled up and thrust down. The movements were gentle at first and she never took her eyes off me\u2014a loving smile always on her face. Each time she thrust down, her clitoris rubbed against me as she increased the pace. Her breasts, that I longed to touch, were bouncing up and down with her movements. I felt her vaginal walls squeeze me and knew she was coming. I felt myself release a few feeble spurts into her just before she fell forward to hug and kiss me.\n\n\"Thank you, my Captain.\"\n\nSeconds later she rolled off me and fell asleep. \n\nWhile she slept I thought, \"What she said at dinner was so emotional\u2014I was her world. And yet, I failed to tell her that she is everything to me. Other than my mom, I never felt this way about anyone in my life. When she wakes up tomorrow, I have to make sure she knows how I feel.\"\n\nShe moaned as if in a bad dream. I pulled her to me and she slept. Moments later, so did I.\n\nThe next morning as we walked on the beach I made sure Elke knew how I felt about her. When I was done, she hugged me and whispered, \"Thank you, my darling, but you didn't have to tell me\u2014every time you look at me I know how much you love me.\"\n\nThe last two days passed very quickly and once again the three of us were on a military transport plane to my new duty assignment.\n\nWe landed at an intermediate stop. When the time came to board the plane, a major stood in front of me and said, \"Captain, we have a little problem. Will you and your wife follow me, please?\"\n\nThe four of us were in a small office. I could hear our plane rev up its engines and then take off. \n\nThe major said, \"The problem is the following: You have one set of somewhat unusual orders from Washington. Your orders absolutely violate the standing orders of the Regional Commander. So until the two contradicting orders are resolved, I'm afraid you're stuck here.\"",
        "I was pissed; we checked into the Visitor's Quarters. I told Elke we were staying for a few days\u2014I didn't know how many. \n\nWe had a light dinner at the Officer's Club, and went to sleep.\n\nThe next morning we were sitting around. Actually, Elke and Sophie were playing and I was still sulking about the delay.\n\nI heard Sophie giggle and then Elke whispered loudly, \"Go, go.\"\n\nA moment later I felt a tug on my leg and looked down at Sophie. She had a serious look on her face and said, \"Daddy, please take Mommy and me on a pic...\" She lost her concentration and looked back at Elke who mouthed the word.\n\n\"Picnic, Daddy?\"\n\nShe was beaming at me; she had just said her first words of English, and had called me \"Daddy!\"\n\nI picked her up and hugged her as she giggled. I looked at Elke; she grinned at me\u2014proud of her daughter and my reaction to her words.\n\nI bought some sandwiches at the PX, got directions to the parade field, and the three of us walked out to enjoy our day\u2014my depression had completely disappeared as I realized the delay just gave me more time with my family.\n\nWe were finished playing and were sitting on the blanket starting to eat our sandwiches when Elke pointed at the road\u2014two MP jeeps led a staff car. They stopped close to us and the Major got out of the staff car and walked up to me.\n\nI wasn't in uniform, so no salute was required, but I stood as he approached.\n\n\"Can I talk to you for a moment, Captain?\"\n\n\"Yes, Sir.\"\n\nWe walked a few feet away and he turned to me. \"Captain, if you make the military your career, there is a lesson you need to learn\u2014when you're right, your superiors are around you with congratulations. If you are a messenger of bad news, your superiors smell it early and ghost.\"\n\n\"I take it that the messenger wasn't appreciated, Sir?\"\n\nWith a wry grin he said, \"My ass hurts so much I won't sit for a month, and the scars from the ass chewing that Washington gave me will last forever.\n\n\"The MP's will watch over you. The staff car will pick you up at 1400 and take you to your quarters. At 1500 the staff car will drive you to the airport, and I will be there to make sure the three of you are the first passengers on the plane.\n\n\"Any questions?\"\n\n\"No, Sir.\"\n\nThe staff car drove on the tarmac up to our plane. Elke and Sophie walked up the stairs to pick out our seats. I was in uniform and saluted the Major.\n\n\"Thank you, Sir.\"\n\n\"Captain, you're probably not a bad guy, and your wife and child are beautiful, but I hope I never see you again.\"\n\nI nodded and walked up the stairs of the plane.\n\n-------\n\nI knocked on the door and the sergeant told me that the Colonel was waiting, and to report. I spotted a sergeant major and a full colonel sitting at the conference table. Standing at attention in front of the table, I gave my best salute and stated, \"Captain Wheeler, reporting for duty, Sir.\"\n\nThe Colonel returned my salute and pointed to a chair. \"At ease, Captain, and take a seat.\"\n\nHe paused and then continued, \"Normally you would report in to your immediate superior, but we have unusual circumstances here, so the Sergeant Major and I wanted to meet you first.\n\n\"I've read your efficiency report. It's quite an unusual document. Rarely have I read such superlatives about a young lieutenant, and then to have it endorsed by the battalion commander with some additional comments to kick it up a notch. But what makes it extraordinary is that I don't have 'the need to know,' whatever wonderful thing you accomplished, nor which medals you earned\u2014that part of your record is sealed for five years.\"\n\nHe paused as if he expected me to answer.\n\n\"Yes, Sir,\" I replied.\n\nHe continued, \"Just as a coincidence, Captain, when I was at the Point my roommate for the last two years was a fast mover\u2014we all knew he would be first up the promotion ladder. I'm on the list for my first star and will get it in a year or two. He received his first star two months ago.\n\n\"He called me the other day for an informal chat and mentioned how a lowly company-grade officer made him look smarter than he really was. Of course, he didn't tell me anything I shouldn't know.\"\n\nI remained silent.\n\n\"I assume your wife and child arrived safely?\"\n\n\"Yes sir. They're at the visitor's quarters for now.\"\n\n\"I'm told she is going to have another child?\"\n\nI grinned briefly\u2014it had to be the second night at the safe house\u2014 \"Children, Sir. They told us to expect twins.\"\n\n\"Congratulations, Captain.\"\n\nHe paused and changed subjects, \"We are the largest military base in South Korea and are roughly 40 miles south of Seoul. It's considered a hardship tour and it's an absolute rule that enlisted personnel and company-grade officers are not allowed to have their family with them for this duty.\n\n\"But then, you're not a normal case. Housing for you and your family might be a problem...\"\n\n\"Begging the Colonel's pardon?\" interrupted the Sergeant Major. His voice was gravelly, but reeked of self-confidence.\n\nNot offended at all the Colonel turned and said, \"Of course, please jump in, Sergeant Major.\"\n\nThe Colonel stared at the Sergeant Major, ignoring me as if I weren't in the room.\n\n\"Colonel, I received an informal phone call from a first sergeant that I know very well\u2014we were grunts together. Of course he told me nothing that I shouldn't know.\n\n\"He seems to know the Captain and said that the Captain could watch out for himself, but called in a favor and asked me as a personal favor to make sure the Captain's wife and child were comfortable.\"\n\nThe Sergeant Major paused, and the Colonel said, \"Please go on Sergeant Major.\n\n\"Sir, at the end of the field-grade officer's housing street there was the skeleton of a house. It's not on our inventory and the only designation is that the land is part of your command. I asked for volunteers to see if we could fix it up and was absolutely amazed that I had more volunteers than I needed. We've managed to make it a presentable place for the Captain and his family.\"\n\n\"And the materials and furniture for this volunteer effort?\" asked the Colonel.\n\n\"You don't want to go down that road, Colonel.\"\n\nThe colonel grunted and continued, \"We still have the problem of a company-grade officer living in a designated field-grade housing area.\"\n\n\"No, Sir. Yesterday the Colonel signed papers taking the new house into our inventory and stating that the house was the beginning of company-grade housing.\"\n\nNot at all upset, the Colonel asked, \"Didn't we have a talk a month ago that you had to stop forging my name, Sergeant Major?\"\n\n\"I believe the words you used, Sir, were 'Don't go overboard on forging your name.' \"\n\nA sliver of a grin appeared and quickly disappeared on the Colonel's face. \"And am I to assume that the Captain's house is nicer than mine?\"\n\nThe Sergeant Major deadpanned, \"Of course not, Sir...not quite.\"\n\nThe Colonel continued, \"I suppose that someone should take the Captain's wife to their house.\"\n\nThe Sergeant Major replied, \"The Captain's wife and daughter were taken to the hospital where she met the medical staff that will assist her during her pregnancy. A senior nurse 'volunteered' to take them to their house\u2014they are there now.\n\n\"The Captain has an appointment at the hospital at 1300 so they can check out the bullet wound that, of course, we don't know anything about.\"\n\nThe one-act play appeared to be over. The Colonel and Sergeant Major had told me everything and \"nothing\" about the favors that had been done for Elke and me. I was overwhelmed with gratitude.\n\nThe Colonel turned to me as if I had just come into the room.\n\n\"Captain, Korea is a tough posting. The action is in Europe against the Russians, and that's where the promotions are, but we received our orders, and we'll carry them out. You may...no, probably will be...bored over the next two years, but you have your family, and the people serving with you here are your extended family. The Army is your family too, Captain. If you make the Army your career, you will learn how true that is. In either case, if you make the effort, with the right attitude, you will never forget this assignment.\"\n\n------\n\nThe Colonel was wrong about the assignment being boring\u2014Elke and I loved our new assignment, but for different reasons. Field-grade officers were allowed to have their families with them. Most of them chose not to because of their children's education and lack of conveniences in South Korea. A few of the older field-grade officers' wives did stay with their husbands. A new, very young wife of a company-grade officer who was shy, cute, and lost was an emotional appeal that these wives couldn't resist\u2014they adopted Elke. They were determined to teach Elke what the role of an officer's wife should be.\n\nThen we had Sophie\u2014the only three-year-old on the base. Everyone fell in love with her; she could do no wrong whether it was the MP guards, or the wives of the field-grade officers. She would have been spoiled rotten if Elke hadn't played the \"tough guy\" when Sophie pushed the limit.\n\nI loved my job. The Korean language came back to me quickly and I was fluent in reading and writing it within weeks. My new boss, Major Depner, was the perfect boss. He was a career officer and knew that, at the very most, he would make Lieutenant Colonel before his retirement. He was an academic, and intelligence is an exercise in logic and persistence.\n\nHe was very Socratic\u2014any argument that I made, whether he agreed with it or not, was countered by his questions that challenged my assumptions. He constantly pushed me.\n\n\"Dave,\" he would say, \"Most Army officers are action people. They don't want reason or logic; they want to blow the bugle and charge. Our job is to make sure that when they charge, there is a good reason for it.\n\n\"If we don't do our job, our people will die.\"  \n\nAs opposed to Germany, we were overwhelmed with Signet intelligence\u2014signal intercepts\u2014and it was our job to interpret what they meant.\n\nDuring my first month on the job I would go to Major Depner with an interpretation of an intercepted signal message. He would chuckle and say, \"You interpret it as an American; pretend you're a Korean.\" \n\nThe job was fascinating and between my time with Elke and Sophie and my work, I couldn't wish for anything more.\n\nElke and I were in heaven. Sophie was an angel and Elke's pregnancy was an easy one so far. Our love was so strong we would have been happy if we were stationed on the moon.\n\nDuring my second month on the job, I went to Major Depner several times and told him that the signals we were intercepting didn't make sense.\n\n\"When it makes sense, Captain, let me know.\"\n\nAt the end of the second month in Korea I went to Major Depner and said, \"My intercepts tell me that there is only one conclusion that is logical.\"\n\nWe argued for hours and finally he picked up the phone and called the Colonel's aide. \n\n\"We want to brief the Colonel on what we think is happening.\"\n\nThe meeting was scheduled for Friday afternoon. Major Depner told me that I would give the briefing.\n\nI was nervous that morning. \"Elke, I'm talking to the Colonel and many senior officers\u2014what if I'm wrong?\"\n\n\"Dave,\" she said, \"Your duty is to your country. You must say what you think. I don't care if they believe you or make fun of you; you must do your duty.\"\n\n\"And if I'm wrong.\"\n\n\"You are my world, Dave, wrong or right we are next to you.\"\n\nThat simple statement of faith gave me courage. I stood before twenty senior officers including the Colonel.\n\n\"Gentlemen,\" I began, \"Signal intelligence tells us that the maintenance companies of two different armored brigades are within ten miles of the South Korean border. That only makes sense if their armor is there with them.\"\n\nLieutenant Colonel Wesley, who I had disagreed with in the past, immediately said, \"Oh bullshit, Captain. They move their units around all the time. If you don't have anything else, we're wasting our time.\"\n\nHe really pissed me off. \"Colonel Wesley, if that were the only thing to worry about, we wouldn't be here. The problem is that the actual armored brigades have stopped all communications. They could be anywhere. We have never lost signal communication with the armored brigades. It's different and worrisome.\"\n\nHe countered sarcastically, \"Captain, you're a little young. I don't know where you were stationed before this, but you've been here less than two months. Korea is very different than other parts of the world, and you're telling us that everyone is wrong and you're right. Is this an ego problem?\"\n\nI tried to hold back, but the North Korean armor was supplied by the Russians and therefore I was completely comfortable talking about it. So not necessarily using a great deal of common sense I answered the Colonel.\n\n\"No, Sir. It's not an ego problem. The problem is that the North Koreans have between 150 and 200 Russian T34/85 tanks. These tanks were designed and built in the Kharkiv Tractor Factory in the Ukraine early in 1939. This model is almost obsolete compared to the newer models, but it is a superior tank\u2014much better than the German Panzers and superior to anything the South Koreans have.\n\n\"Our current artillery ordnance is not powerful enough the stop these tanks, nor will our 75-mm recoilless rifle fired at 700 yards according to our tests in Germany. Bazookas fired at 15 yards into the rear of the tank, where we assume it is most vulnerable, does nothing. The few 105-mm howitzers that we have using HEAT ordnance is effective against the T34, but HE ordnance, which is our prevailing ordnance, bounces off the tank at 150 yards.\n\n\"Tank mines are effective against the T34, but there are none in country.\n\n\"A lucky strike might disable a single tank, but when attacking in force, 20 or 30 T34 tanks will walk through us all the way to Pusan.\n\n\"That's why we have to find out where they are.\"\n\nWe argued for two hours; a majority, but not all, of the officers in the room sided with Colonel Wesley that we were getting too excited over nothing. Finally, the Colonel called for the meeting to end. \n\n\"Captain, take your last shot.\"\n\nI said, \"Sir, something isn't right. Their armor should be close to their maintenance companies, but if they are, we can't locate them. They ceased signal communication, which leads to the conclusion that they don't want to be found. The situation is abnormal and we should aggressively investigate.\"\n\n\"Colonel Wesley?\"\n\n\"The Captain has some interesting fantasies, but no evidence. It's bullshit.\"\n\nThe room was quiet. The Colonel asked, \"Any other comments?\"\n\nMajor Depner said, \"Colonel, I wouldn't have asked for this meeting if I didn't agree with Captain Wheeler. The mission of intelligence is to investigate anomalies. We have one here.\"\n\n\"Anyone else?\" the Colonel asked.\n\nThe Sergeant Major, who had remained silent through the entire meeting, said, \"Sir, I respectfully suggest that we urgently forward a request to Headquarters that we find out where the fuck their armor is.\"\n\nThe Colonel looked sharply at the Sergeant Major and he glared back at him.\n\nThe room turned quiet. Finally, the Colonel turned to Major Depner and said, \"On Monday morning I want a specific request in writing to the Command asking for resources to locate the North Korean armored brigades.\"\n\n\"Yes, Sir,\" replied the Major.\n\nWe walked out of the building together. Depner said, \"Dave, you really stuck it to them, but I have to admit that they argued more out of ego than logic. We're probably both in the shits, but what the hell\".\n\n--------------------\n\nTwo days after the meeting with the Colonel, very early on Sunday morning, the 25th of June, the North Korean People's Army of 90,000 men and 150 T-34 tanks attacked a South Korean Army of 38,000 men. \n\nEpilogue\n\nThere is a knock on my office door.\n\n\"Come in.\"\n\nShe enters the room quickly, stands at attention with her eyes looking six inches over my head, and salutes with her chest jutting out. I can see her nipples pointing through her light sweater\u2014the little minx has obviously taken off her bra.\n\n\"Wife reporting to give family status report...SIR!\"\n\n\"At ease, wife.\"\n\nShe gives me an impish grin as she quickly sits on my lap wiggling her taut, little butt into me that causes an instant erection.\n\nShe teasingly says with light sarcasm, \"Thank you Brigadier General, Sir, for putting me at ease. Would you like the family report now?\"\n\nShe is really teasing me now, since I only received my first star a month earlier.\n\n\"Yes, Elke.\"\n\n\"Sophie called. He's going to propose to her this weekend. She will accept, and they will have a big June wedding when he graduates from the Point.\"\n\n\"She's too young,\" I grunt.\n\n\"The same age when you married me, my General.\"\n\n\"Military life is tough on a family.\"\n\nShe teases, \"I think we have a very nice life, my General.\"\n\nI know I can't win, so I change the subject. \"And the twins?\"\n\n\"The General knows that Friday is date night. They are double dating tonight and are going to a movie with two very pretty girls. They will be home by midnight.\"\n\n\"Have you warned them to keep it in their pants?\"\n\nShe leans into me so that her breasts are only inches from my mouth as she lightly kisses my forehead. I smell the special perfume that she knows drives me wild. \n\n\"A very smart general told me to never give an order that will be almost impossible to enforce. Rather he suggested heavy counseling.\"\n\n\"And?\" I ask.\n\n\"They will do nothing stupid.\"\n\nI am rapidly losing this little game as my tongue licks her nipples through her sweater.\n\n\"Is our tomboy home tonight?\"\n\n\"No, General. She's at a slumber party with her three girlfriends. \n\n\"However, she did report a small skirmish today.\"\n\n\"Skirmish?\"\n\n\"A junior teased her. He asked her name and when she said 'Virginia,' he said 'Virgin for short, but not for long.' \"\n\n\"Did he touch her?\"\n\n\"Actually, she told me that she executed a perfect side kick to the stomach and followed with a chop to the neck, but pulled it so that she wouldn't break his collarbone.\n\n\"She said that her execution was flawless, and that you would be proud that she followed her lessons exactly.\"\n\n\"Will she get in trouble with her school?\"\n\n\"No, the high school boy is a junior and is too embarrassed to pursue anything; he has denied she took him down\u2014he merely 'slipped' is his story.\"\n\n\"Should I talk to her?\" \n\nElke answers by rubbing her breasts back and forth across my face, and then kisses me with her mouth open.\n\nFinally the kiss is over and she stands up and pulls my hand to follow her.\n\n\"What now?\"\n\nShe has a big grin on her face and lewdly winks as she says, \"I think the general should take me to our bedroom and I really promise...\"\n\n\"Promise? Promise what, Elke?\"\n\n\"I won't hurry you.\" "
    ],
    "authorname": "Cat5",
    "tags": [
        "hooker",
        "soldier",
        "spy",
        "historical",
        "blond",
        "action"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/i-wont-hurry-you"
}