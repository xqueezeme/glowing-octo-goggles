{
    "title": "The Fool Ch. 11",
    "pages": [
        "Authors Note: Thank you once again to everyone who leaves comments and feedback on my writing, it is much appreciated. Thank you very much to Paul who continues to be my second set of eyes, he is a great friend to help me out so much. I hope you enjoy it. ~ellie\n\n*****\n\nThe Fool Ch. 11\n\nFlying from her fate.\n\nWith just over a month before the exhibition opened, Carrie returned to her life and her work with a renewed sense of purpose after spending the day with her grandmother and father. Sinclair had been curious about the day she spent with her father, and she'd been vague telling him about meeting a grandmother, but she had also told him of her misgivings given that any search on her father's history stated that he was an orphan. By the woman's age, she could have been her great-grandmother, Carrie admitted.\n\nFor his safety, she had said little else. Carrie trusted him, but if the information her grandmother had given her, along with the tools to ruin Edith plan was to be believed, Sinclair was better off not knowing the danger she and, by default, he, would be in should the Bonnet's discover what she was doing. If her grandmother proved herself trustworthy, there was no real danger, as the Windsor's would step in rather than see her or her love harmed in any way, and Carrie was banking on that. First, there was the exhibition to complete in order to make the claims of Edith and Jordan inconsequential.\n\nShe worked long hours in the final weeks leading up to the exhibition, and her team worked alongside her, determined to prove to the museum faculty that, although they were each untried and tested in their current positions, they could be successful at bringing money, as well as notoriety to the museum. When Carrie had suggested a preview opening for specifically targeted philanthropists as a fundraiser for the museum, the board of directors had approved the idea almost immediately, and her team had all jumped on the idea and came together with ideas for a spectacular interactive night.\n\nAs small pieces of the puzzle began to come together, her confidence in CC's plans rose, along with her enthusiasm for opening night. Sinclair often had to come to the museum and take her home to ensure she ate properly and got a good night's sleep. He enjoyed using her so hard that it robbed her all of the extraneous energy that bubbled forth and found her equally as exuberant about their relationship as she was about her work and she would sleep for at least a few hours. It seemed as if his gift of submission to her on Valentine's Day had opened a whole new world to her, and she met him equally now instead of always fighting him for control in the bedroom. She was still aggressive, on occasion, but he had felt the shift in the way she responded to the nights where he asserted his dominant side, and, despite himself, he reciprocated, on occasion, when she pushed to take the top.\n\n\"The next two weeks are going to be hectic,\" she said as they lay regaining their breath after a particularly torrid scene.\n\n\"I know. Whatever you need me to do just ask,\" Sinclair said, his breath still ragged.\n\n\"I need you,\" she paused and tilted her face up to his. \"I need you to trust me and love me no matter how the exhibition goes.\"\n\n\"That goes without saying,\" he peered at her through the darkness surrounding them, trying to make out an expression on her face. \"Is something going on that I should know about?\" he asked. \"Something to do with that space that's been curtained off? Or all of the new friends you have made recently?\"\n\n\"Maybe, maybe not,\" she leant up and kissed him. \"I'd like you to be as surprised as everyone else at the preview.\"\n\n\"You're not taking unnecessary risks, are you?\" he pulled her close, worrying about her role as the fool as the day got closer. As usual, his parents were playing shell games with the Heart of the Heartless, but he knew when the time came they would honour the agreement to allow her to add it to the exhibition.\n\n\"Would you stop me or help me if I said I was?\" she asked with a playfulness in her voice.\n\n\"As if I could stop you doing anything you've set your mind to,\" he chuckled. \"Of course I would help you.\"\n\n\"And that is why I love you,\" she leant up and kissed him, worming her arms around his neck and holding him tightly as she kissed him deeply again.\n\n\"It seems I didn't wear you out quite as much as I did myself,\" he murmured against her neck.\n\n\"We're on the final countdown to opening night, I doubt I will sleep much between now and then,\" she admitted honestly. \"I will, however, lie here and try to think quietly while I watch you sleep,\" she laughed.\n\n\"Or maybe I will wear you out properly, so you do sleep,\" he rolled her onto her back and pulled her arms above her head.\n\n\"You could try,\" she challenged him with a small giggle that turned into a sigh as his lips and teeth grazed down her neck and over her shoulder. \"You're like a boy scout, always prepared,\" she laughed, feeling his cock begin to harden again against her thigh.\n\n\"Dib, dib, dob, dob,\" he mumbled, pulling one nipple into his mouth. He kissed down her body, feeling her respond immediately with the remnants of their earlier lovemaking. He scraped his teeth and lips over her flesh as his head lowered, with his hands massaging her along the same pathway.\n\nSinclair knew her so well and could hit every hot point on her body without even trying. When she felt his hands spread her thighs, she willingly complied and cooed softly as she felt the first tentative touch of his lips kiss her most sensitive of spots in a teasing manner. He kissed her thighs and down each leg, knowing that avoiding the apex between her legs would make her even hotter when he finally touched her.\n\nSinclair climbed back up her body, leaning over her and kissing her deeply, letting her taste her climax on his tongue as she purred like a satisfied kitten. His fingers tightened around the back of her neck and he pulled her body closer to his, deepening the kiss, leaving no doubt about his intentions to fuck her again. He wrapped his arms tightly around her; one across her shoulders and the other under the curve of her bottom, then he rolled to his back, taking her with him in one fluid movement. Her eyes widened in surprise at finding herself neatly planted atop him, her thighs splayed on either side of his hips. Rolling her hips, she could feel the hard ridge of him pressed into the soft flesh of her pussy.\n\nBracing her hands on either side of his head, she pushed herself up. Her tousled hair fell in a curtain across her face to tickle on his chest and a wicked grin spread across her lips as she lifted her hips a fraction of an inch and arched her back, rolling her hips again and pressing down onto his hard cock to tease him. She heard his breath hiss in through his clenched teeth, and she peeked at him through her lashes and wiggled a little more, setting him more firmly into her moist folds.\n\nGrinning at his muffled groan and feeling his hands reach for her hips to still her movements, Carrie smiled and became still momentarily. Having kept her still for several moments, Sinclair relaxed back and gazed up at her, a sinful smile on his face as one hand quickly left her hip and smacked her ass. As she yelped in surprise, he quickly pulled her back down on top of him and kissed her deeply.\n\nHis dark eyes were bright with undisguised lust as she began to rotate her hips, pressing down onto him again. Her eyes closed and small white teeth glinted behind warm pink lips as she bent to nibble his neck, paying particular attention to the tender spot just below his ear. She distantly registered his hands gliding lower to cup her bottom. He lifted her slightly away from him so that she could feel his cock glide between the hot wet folds of her pussy. Sinking her teeth into his neck to distract him slightly, she reached back and took his hands, pulling them up over his head, trying to pin him to the bed. She knew she couldn't restrain him if he wanted to be loose, but it excited her to tease him into fighting her for the dominance he desired. Her defiance was only ever a token effort now, but it still excited her non-the-less.\n\nSinclair raised his eyebrow at her and smirked, and she leant forward to lick over the bite mark she had left on his neck. She heard his soft moan and grinned to herself as she licked her way down his throat to his chest, nibbling here and there. Her tongue flicked out and gently teased his nipple, knowing this would excite him, his hips insistently pushing up into her, and a thrill ran through her when he finally broke free of her grasp, his hands moving to her rotating hips once more.\n\nEnjoying being the tease, she wriggled free of his hands once more and slid down the length of his body, pausing to nip the flat belly with her teeth. She was on her knees between his legs, running her hands up his thighs. Looking up at him, she lowered her head, taking his hardness into her mouth.\n\nHis legs tensed and his fingers twined into her hair, she smiled around his cock, running her tongue up the underside of his shaft. She felt his little shiver and slid her mouth back down on him, taking all of him and feeling him press into the back of her throat.\n\nHer left hand curved under his balls and cupped him, stroking with soft, gentle fingers. She felt him pulsing on her lips and she moved down onto him. His fingers twined further into her hair, his hips thrusting up gently into her mouth, making her gag slightly. She distantly heard him moan, and she gave a small whimper in response. She felt herself clench and knew she wanted him inside her again. She lifted her head and looked up to see his lust filled gaze on her.\n\nSinclair decided that she'd had her way long enough, and, pulling slightly at her hair wrapped around his fingers, he led her back up his body. With the grace of an athlete, he changed their positions, pushing her down onto the bed and rearing up over her.\n\nIt was his turn to taste the sweetness of her skin, his tongue running down a similar path to one Carrie had travelled down his body. He loved her breasts, the small pale pink nipples that were short and puckered sweetly between his lips making her breasts rise into pointed mounds of flesh. His hands rested on her breasts as he kissed his way down her body, nipping the soft skin below her navel and rolling over her flat belly.\n\nHis hands spread her thighs wide and he nipped at the soft flesh, listening to her sigh in pleasure. He placed extra pressure on her thighs, watching as the lips of her pussy parted, and leant forward to flick his tongue over the centre of her being then. A grin curled his lips again as he felt the shock of pleasure ripple through her, making her thighs tremble and his cock harden impossibly more so.\n\nHis lips closed over the tiny bud and he began to whip it gently with his tongue. Her fingers threaded into his hair, pulling his mouth closer to her as her hips came off the bed to meet him. Her lips parted with soft whimpering gasps. He ran his hand up her thigh and slowly entered her, first one, then two fingers, marvelling at how hot and wet she was. She moaned, thrusting her hips upward once again onto the fingers and into his mouth. His tongue began to work at her faster, and he could feel her wetness begin to coat his hand. Her muscles tightened around his fingers, and he knew she was close to the edge of that abyss of pleasure that would wrack her body and leave her weak and trembling in his arms.\n\nPulling free of her grappling hands, Sinclair rose above Carrie again, guiding his throbbing cock into her. He slid in only a frustrating fraction at a time, and the excruciating slowness of his movements nearly sent them both over the edge.\n\nFinally, embedded in her to the hilt, he felt her muscles grip him, and a groan of pleasure rumbled from his throat as he began to fuck her. He guided her legs up the length of his body from where they had wrapped around his hips, essentially doubling her in half and watching her breath shorten even more as she cried out her need.\n\nCarrie dragged her fingernails down Sinclair's back, enjoying the added grunts of pleasure he issued. He stiffened, moaning, and, unable to hold back the tide, began thrusting harder into her, wanting her to come with him. He looked at the glazed eyes and wide panting mouth of the incredible girl who had captured his heart so completely and groaned loudly as he came. She matched him, and he felt the muscles around his cock pulse with her climax, milking the cum from him to mix with her own.\n\nSinclair collapsed beside her, allowing Carrie to unfurl her legs, and they both lay breathing raggedly for long minutes. He pulled her close, the wave of exhaustion he felt moving over him and hoping she now felt the same way.\n\n\"You win, I'll sleep for a few a few hours, at least,\" she breathed heavily into his neck. Satisfied with her words, Sinclair let sleep take him.\n\n*****\n\nCarrie smiled at the woman she'd gotten to know over the last three weeks as she entered the exhibition rooms where the Mansvelt collection was getting its last minute fine tuning. She spread her arms as if to indicate the chaos of people hurrying around the space and calling out to each other and laughed happily.\n\n\"Marina, it's bedlam here, but it's so good to see you,\" Carrie embraced the woman, kissing her cheek. \"Tell me the good news.\"\n\n\"The good news is that my voice has been well rested and my troupe and I are more than ready to entertain your guests tomorrow night,\" Marina laughed with her. \"Now your turn, tell me the good news.\"\n\n\"It's still a shell game,\" Carrie said quietly. \"I'm not sure what they will do, yet.\"\n\nWhile the Windsor's original rules for the privateers they recruited held the addendum about the collection of artefacts, it had been Robyn's plan and training that had put her on this path, and it was she who deserved the credit for pulling it off. The only credit Carrie wanted was for stealing Sinclair's heart, not the coveted jewels his family protected so well.\n\nShe had needed to believe CC's assertion that it was possible to do this and still have a normal life after it was all said and done with the man she loved. She knew that she could be putting her faith in the wrong people, but for the chance of a happily ever after she would dance with the devil himself if she needed to, and pray that if things went pear-shaped Sinclair would forgive her.\n\n\"Hey, where did you go?\" Marina linked arms with Carrie and walked slightly away from the chaos of the team who hurried around the space. \"Now is not the time to be zoning out, my friend.\"\n\n\"Sorry. You're right. There is just so much to remember and do,\" Carrie apologised. \"I'm keeping a lot of balls in the air right now, and juggling was never my forte,\" she admitted. Edith and Jordan had become more aggressive in their demands on her as the exhibition drew closer because she had less time to meet with them and update them on the plans of the Fool. She often made the flimsiest of excuses to avoid one of the meetings they frequently planned with her. William had stayed in London, and she suddenly had new friends, like Marina, who had come on board as entertainment for the preview night of the exhibition, as well as to keep an eye on her for CC. Sinclair and his family had been very generous in their permissions and willingness to share their treasures for the exhibition. She smiled, thinking of Sinclair, and jolted as Marina poked her again.\n\n\"Being sorry is one thing, keeping your head in the game is another matter entirely,\" Marina admonished. \"The opening is twenty-four hours away, and you will need to have your wits about you.\"\n\n\"I know, but you need to trust me, not put more pressure on me,\" Carrie said, taking a deep breath. For better or worse it would be over after tomorrow night, and she had to let the cards fall where they may, because she couldn't continue to live like this. She was lying to everyone, even the man she loved.\n\n\"Carrie, can you come and check the hologram again? I've tweaked it a little more,\" Brandie called out from a few meters away, giving Carrie the chance to excuse herself from the uncomfortable presence of Marina, who seemed to be there every time she turned around at the museum.\n\nShe worked tirelessly during the day, not stopping for more than a quick cup of coffee before moving onto the next task. It was well after the museum's closing time when Sinclair arrived, making all movement stop as each of her team members turned to look at him as he stood in the entrance surveying the entrance of the exhibition.\n\nThe wide spaces all interconnected, but moving panels could be used to open up the space or create maze-like corridors to funnel the visitors along a chronologically set out display of the infamous Edvard Mansvelt and his descendants. Most of these panels, however, were open at that time, as the team worked on the various displays making last minute adjustments.\n\n\"Mr. Mansvelt, I'd very much like you to see the holograms I have been working on, if you have a few minutes,\" Brandie approached him before Carrie even realised why everyone had suddenly stopped working.\n\n\"I think Carrington was planning to surprise me with the visual effects, but I would very much like to see them without having to peer around people in a crowded room,\" he said thoughtfully. \"Why don't you be my guide and show me around. That way I won't be disturbing the boss,\" he winked at the purple haired young woman.\n\n\"It's all looking fabulous,\" Sinclair said, not hiding how impressed he was with his expression or voice once Brandie had released him from his small tour. \"It's time to send your team home and come have dinner with me,\" he said in a voice that held a commanding tone that she knew she shouldn't argue with. \"I have a surprise for you at home that won't wait much longer,\" he added, seeing her about to make an excuse to stay longer.\n\n\"The surprise I've been patiently waiting for?\" she asked hopefully.\n\n\"Perhaps, but you won't know until you leave this place, will you?\" he asked, baiting her with the only thing he knew would get her out of the museum tonight.\n\n\"Okay, let's call it a night!\" she said loudly, and Sinclair was surprised to hear her team making excuses to stay just a little longer. He waited somewhat impatiently as the team gradually gave up the arguments and went home, promising to begin early in the morning. The fact that, with all her absences, Carrie had managed to instill such loyalty and dedication in her team, made him wonder at just how amazing she was.\n\nThey stopped for dinner on the way home at a little restaurant in the suburbs, and Carrie picked at her meal as she bubbled with anxiety over the final preparations for the preview. Sinclair had to threaten to keep her there until she had eaten at least half of her meal before she started to eat properly, and he chuckled at how quickly she devoured the whole plate of food once she had begun to eat and realised just how hungry she was. He doubted she had eaten at all that day.\n\n\"Feel better?\" he asked as she put her knife and fork together across her empty plate.\n\n\"I'll feel better when I have the final and most important piece of the Mansvelt collection on display,\" she said in a too sweet voice, which made him chuckle.\n\n\"We better go home before mother goes to bed then,\" he let the wide smile spread over his face and reach his eyes.\n\n\"I didn't think they were coming until tomorrow!\" Carrie exclaimed.\n\n\"Surprise,\" Sinclair let his chuckle develop into a full blown laugh as she berated him for taking his time at the museum and then stopping for dinner when his parents were waiting for them at home.\n\nThey left the restaurant and drove home with Carrie urging him to speed all the way. When they finally arrived and she made it inside, she was met by Frazer and Georgia who were relaxing in the living room.",
        "\"Oh, thank goodness,\" Georgia got to her feet and embraced them both. \"You took so long I thought there had been an accident!\"\n\n\"She worries too much,\" Frazer grumbled good-naturedly, also embracing Carrie and leading her into the living room. \"Can I get you both a drink?\"\n\n\"Sure, I'll have a scotch,\" Sinclair agreed, knowing that the time it took to get him the drink would only frustrate Carrie all the more. \"Carrie?\" he asked. \"A nightcap might help you relax,\" he suggested.\n\nCarrie narrowed her eyes at him, a pinched look coming to her face briefly before nodding, \"I'll have the same.\" She drew a breath and tried to relax her features as they got the drink and all had a seat. In her preoccupation, she hadn't noticed that Georgia sat beside a small table that bore five velvet boxes. Her eyes widened as she recognised them. \"The hearts,\" she whispered, taken aback by the sight of the five boxes where she had assumed there would be one they would tell her was the real heart.\n\n\"All except the one we gave you for your engagement,\" Georgia confirmed.\n\n\"It took a while to round them all up; we move them around so much it's hard to keep track of where the original is,\" Frazer mused. \"If you ask me, the third of the replicas far outshines the original, but it's hard to know for sure.\"\n\n\"You don't know which is the original?\" Carrie gasped.\n\n\"They are all real rubies and gold, all worth a king's ransom individually, of course, we know where each one is, but they are difficult to tell apart after so many years without seeing them all together,\" he admitted. \"We tend to say they are all replicas unless we are sure,\" he chuckled.\n\n\"Why don't you go and fetch yours, Carrie dear, so we can have a good look together. It's about time you and Sinclair learned the secret of the hearts,\" Georgia suggested.\n\nCarrie immediately came to her feet and practically ran from the room to gather her necklace. When she returned with the velvet box, they all looked at her as if she had walked in on a conversation she shouldn't have heard, and she smiled, having taken her usual precautions before entering a room and had overheard enough to know their concerns. Ignoring the looks as if she hadn't noticed, she handed the box she held to Georgia, who placed it beside the other five on the table that had been pulled in front of the settee she and Carrie sat on.\n\nFrazer ceremoniously opened each one and stood back, letting his wife lecture her son and his fianc\u00e9 on the merits of each one.\n\n\"This,\" she pointed to one of the hearts, \"Is the third, and Frazer's favourite. You can see it's slightly larger than the others, but it has two flaws deep within if you look carefully.\" She picked up the necklace and held it to the light. She began to talk through the others, pointing out slight differences in the quality of the gold or the setting the heart lay in, as well as small defects in the stones themselves.\n\n\"It's difficult now,\" she peered at the two remaining hearts. \"The last of the replicas was so well crafted, I doubt if Queen Isabella herself could have told them apart.\"\n\n\"May I try?\" Carrie asked politely, not wanting to step on her soon to be mother-in-law's toes.\n\nCarrie talked her way through a comparison of the stones; the cut the gold of the settings before noting the slight differences. She smiled; sure of her decision but holding back the final piece of evidence, she had to see how Sinclair's parents would react when she told them of her choice.\n\n\"Each of them would be suitable for the exhibition,\" she said. \"I believe, however, that the original is neither of these. As you said, the one you labelled as the third replica is probably the best. I understand, given the timing, why you wouldn't want me to display the original, but I wish you could have trusted me enough to tell me why.\"\n\n\"How did you come to that conclusion?\" Frazer was the first to speak into the startled silence.\n\n\"I have spent the last year working on your collection and this exhibition. I possibly know more about the Heart than anyone outside of your immediate family,\" she reached for the third box, but Georgia put her hand over it to stop her.\n\n\"If you'll allow me, I will show you how I know this to be the only one that could pass for the real heart of the Heartless,\" Carrie looked into Georgia's eyes, \"Please, Georgia, I mean no harm.\" Georgia looked at Frazer, who nodded, and withdrew her hand.\n\n\"It's not well documented, but the Heart has a major flaw line that can look like two flaws, but is, in fact, one. The gold is old and pure, and, because of that, the small but deep mark made by Edvard Mansvelt to test the gold, it can still be seen because it is rarely handled or worn.\" She turned it over in her hands and pointed out the mark that had been carefully added to the replica. \"This may not look like an M now, but the original held one once when he claimed it as his treasure in front of Lord Windsor.\"\n\n\"I don't think you understand,\" Georgia stated, a little wariness creeping into her voice as Carrie had seen through their subterfuge.\n\n\"I'm well aware of the Fool's agenda, and I have taken precautions and will even sleep beside the safe on the first night of the exhibition, if that will help you to trust me,\" she said sincerely. \"Sinclair will have access to all areas of the museum, and I believe between the two of us we can keep it safe.\" She wasn't lying, she had no intention of stealing even a replica for Edith, and, if everything went to plan, she wouldn't need to deal with being the Fool ever again.\n\n\"There is a way that I would allow it,\" Frazer gave his wife a sharp look as she opened her mouth to argue. \"Use a replica in the display and Georgia will wear the original for the entire twenty-four hours of April Fool's Day, including your preview night opening.\" He had expected Sinclair to argue with the idea. It would put his mother directly in the line of danger. His son surprised him, however, by sitting back and considering his parents silently.\n\n\"Could I place a card saying that it is a replica on the display?\" Carrie negotiated, not liking the terms but trying to make the best of it. She had known for the last month that she would have to display a replica, but she negotiated as if she didn't. \"We would guard Georgia better than Mona Lisa.\"\n\n\"No!\" Frazer was firm in his denial of her request.\n\n\"If you think the Fool won't pick it as a replica, you are kidding yourself, Dad,\" Sinclair finally weighed into the conversation. \"Are you honestly prepared to put mother at risk?\"\n\n\"There is less risk if no one but we four know it is a replica on display and the real one around her neck,\" Frazer dug his heels in. \"She wants the real one there; those are the conditions. She can wear her own, and we can get your sisters to wear the others if you want to lessen the risk. We are known for smoke and mirrors where the Heart is concerned.\"\n\n\"Choose the best replica then, and I will take it to work in the morning,\" Carrie gave in with a sigh. \"I understand your reticence, but I honestly believe the heart would be better protected at the museum than here. If you think the Fool isn't aware of the shell game you play with that jewel, you're sadly mistaken, and if they don't find it at the museum they will find it wherever you hide it, the fool has always been one step ahead. None of your associates were able to outsmart the Fool; maybe you'll be more fortunate.\" Carrie sighed. \"May I have the one you gave me as an engagement present back, please?\" she asked, not hiding her disappointment as she came to her feet. She was suddenly very tired and wanted to go to bed; this scene was hard for her, even though she had been rehearsing for it all week.\n\nSinclair followed her up to their room a little later and found her already in bed with the lights turned out. He quietly got undressed and slid into bed beside her, pulling her into his arms.\n\n\"I know you're disappointed, but they are trying to do what they think is best. They don't know that you're the Fool and that the Heart is safe with you,\" Sinclair said softly as he nuzzled her neck.\n\nCarrie remained silent. She knew now that CC had been correct and the Mansvelt's were no longer in possession of the real Heart. She was simultaneously overjoyed that the Windor's would make sure that she wouldn't have to deal with Edith and Jordan and their plan again, and disappointed in Sinclair.\n\n\"When you said you would give me the Heart if I confessed to being the Fool, you didn't mean it, did you?\" she asked. \"I have always believed you and trusted you, Sinclair; I wouldn't have confessed if I didn't. You lied to me about the Heart though. If I had have kept you to that bargain you would have given me a replica instead of the real Heart of the Heartless, wouldn't you?\"\n\n\"I'm sorry. If it were up to me it would be in your hands right now,\" Sinclair tried to explain. He wasn't happy about his parent's games. \"I tried to tell them that they couldn't fool the experts with a replica.\"\n\n\"It's not that, Sin,\" she rolled in his arms to look at him. \"I understand their rules around displaying a replica. It's you and the fact that I have to question if you ever planned to tell me that your family no longer had the real Heart.\" She closed her eyes, even though darkness surrounded her. \"Is that why you promised it to me if I confessed? You knew you couldn't deliver? I don't want to, but my mind keeps travelling over those early days and months when we were still building that trust and what you may or may not have said just to sway my opinion of you. Have you told your father that I was the Fool?\"\n\n\"No! How could you ask that? I'm the same man you have always known,\" he protested, stung deeply by her words. \"Why wouldn't we have the real Heart? Had you needed it as proof of my words I would have found it and given it to you, but you never asked that of me, and I knew in time that it would be yours once we were married, so I never lied, not really.\" He spoke quietly, upset that this had made her question her trust in him. \"I'll make sure you get the original tomorrow,\" he promised.\n\n\"Don't make promises you can't keep, Sinclair,\" she opened her eyes, trying to peer at his face, wondering if he honestly didn't know that the Real heart had not been in his family's possession for some time. \"It doesn't matter. A replica will suffice, as Frazer said, they all are worth a small fortune, and losing any one of them would be almost as bad as losing the original must have been,\" the disappointment she still felt carried in her voice.\n\n\"You're not making sense, Carrie. Will the Heart be stolen if they bring it to the museum tomorrow?\" Sinclair asked carefully.\n\n\"No,\" she sighed and rolled over, turning her back to him. She felt bad that he didn't know everything that was planned for opening night, but to accuse her of planning to steal the last artefact the Fool needed without asking for his help just hurt. She felt Sinclair reach for her and try to turn her back toward him. She couldn't face him, either he didn't know the truth himself, or he was still lying to her. Either way, she couldn't look at him and not tell him everything she now knew and what would happen at the preview night.\n\n\"Carrie, I...\" Sinclair started to apologise again, but she cut him off.\n\n\"Sinclair, I would hardly plan to steal the Heart without talking to you about it and making sure the best replica was in its place. Can we just go to sleep now before you say anything else to prove that you are as stupid as every other man I've ever met,\" Carrie's voice wavered as she felt the tension of what she was about to do weigh down on her.\n\n\"Sleep,\" he said softly, moving closer and wrapped an arm around her, needing to feel the closeness between them physically as she pushed him away emotionally.\n\n*****\n\nCarrie had been suitably grateful and sweet to Frazer and Georgia before leaving for work, apologising for her behaviour the night before, excusing it as stress and lack of sleep. She offered to use the necklace given to her at the engagement party rather than risk any of the other replicas. She'd been cool to Sinclair, their conversation of the night before making her feel unsettled, not only about what he said, but the fact that she had been keeping secrets from him as well. It was too late to change any of what had been put in place, and all she could do was hope that it all worked out in her favour and that he loved her enough to trust and understand why she had done it this way.\n\nShe made her way into work knowing Jordan would be waiting for her. She was lying to him as well; she had been since his attempt on Sinclair's life. Not that he didn't deserve it, but she was tired of trying to keep everyone happy with secrets and lies.\n\n\"Can we make this quick?\" she asked, taking a seat and seeing that he had already ordered coffee and cinnamon toast for her.\n\n\"I know it's a big day for you,\" Jordan smiled and reached out to take her hand. \"I ordered for you so you wouldn't have to stay any longer than what it takes you to eat something and tell me that you have it.\"\n\n\"I have the replica, the real one is supposed to arrive today with its own guards,\" she sighed. \"They aren't taking any chances with the Fool, this year.\"\n\n\"We expected that and have everything in place we need, including the replica. It will be an easy switch for you, you've done it enough times to make it work, and who would suspect you?\" Jordan said in a soothing voice.\n\n\"Rackham,\" she blurted nervously.\n\n\"All the better, you don't have to make the switch until the preview is over and you are putting everything back into the safe. I imagine the Mansvelt's security will be guarding the vault overnight?\"\n\n\"Yes, as far as I know, they will swap over at five thirty before the exhibition opens and again at eleven after the museum has closed for the night,\" she confirmed. \"They will change over again at six the next morning.\"\n\n\"That will make it a little trickier if you don't cheat on the time, maybe coming in tomorrow morning early rather than try to get it done tonight might be better,\" Jordan frowned. He hated that this plan had been made so much looser by being unable to pin down the exact location of the real Heart. \"Shit, we knew this would be the hardest one, but it's bordering on the ridiculous now.\"\n\n\"It'll all be over after tonight, and we can just disappear for a while, or, at least, I can. I imagine Edith and Grant have bigger plans for you,\" Carrie said, trying to keep the rancour out of her voice.\n\n\"That won't happen straight away, so we will have some time together to get back to where we were as partners in crime, only this time it will be as true partners,\" he said, almost leering at her.\n\nCarrie tried not to choke on her coffee and held the cup to her mouth a moment longer than necessary, taking a big gulp of the hot liquid rather than respond to his remark and then regretting it.\n\n\"I'm sorry, Jordan, I have to run, but I guess we'll have plenty of time to talk soon,\" she gave a lop-sided smile and gathered up her briefcase, leaving quickly before he could find a reason to stop her.\n\nShe could feel his eyes on her as she walked away and, careful of the charade she was playing, she turned and waved, giving him a small smile before disappearing into the heart of the museum.\n\nTime flew by as Carrie battled small but necessary last-minute adjustments to her plans and dealt with all of the people she'd made promises to. An hour before the preview opened to the guests, Carrie changed into her evening gown in the employee bathroom and freshened up her makeup. Sighing at her reflection, she went back to her desk looking for a different shade of lipstick when she discovered Sinclair waiting for her with his parents.\n\n\"Oh, you're wearing your hair down,\" Georgia said, as if she didn't quite understand Carrie's appearance. \"Would you mind terribly if I gave you a quick up-do? I'm quite good with hair, and the necklace...\" she trailed off as Frazer patted her arm.\n\n\"She looks lovely the way she is, just like always,\" Frazer said.\n\n\"I don't mind,\" Carrie said quickly. \"I was just wondering how I thought I could be ready for tonight without all of the primpings that we women have to do for events like these. I would appreciate your help, Georgia, please,\" Carrie said and pulled a comb from her bag. \"I'm not sure I have any pins or ties though,\" she frowned, beginning to go through the drawers on her desk.\n\n\"We'll make do,\" Georgia said, accepting the comb.\n\n\"The guards arrived about three, they're near the vault if you want to check in with them,\" Carrie suggested to the two men who looked astonished that Carrie had welcomed Georgia's criticism and help.\n\n\"I also brought you a tube of lipstick I have made for me that matches the rubies. I hope you don't mind, but I had guessed you wouldn't have thought about how jarring the wrong red can be with such large rubies,\" Georgia fished a lipstick out of her clutch purse.\n\n\"Thank you, you are very thoughtful,\" Carrie said sincerely. \"My mother would have just berated me for not having thought about it, but you come equipped with solutions.\" Twenty minutes later Carrie sat marvelling at what Georgia had done for her, armed with little more than paperclips that she had stretched and bent to her needs.\n\n\"The guards are going to go in and take over from your men so they can keep a close eye on you tonight. I know the Fool isn't supposed to strike until tomorrow, but it's better to be safe than sorry,\" Frazer gave her a guilty look. \"We are protective of this piece, so I apologise if we came across as if we didn't trust you last night.\"\n\n\"As I said, I was stressed and tired. I let a few things get to me last night that normally wouldn't have bothered me so much. It's me who should be apologising, to all of you,\" she looked past Frazer to Sinclair, who seemed to relax his stance a little. \"I'm just not used to... well, it was always just Mum and me, so I don't always understand how typical families work.\"\n\n\"Let's just chalk it all up to experience and move on, shall we?\" Georgia said, and moved back to survey her work with the necklace Frazer had just fastened around Carrie's neck. \"You look lovely, Carrington. Shall we go and greet the guests?\"\n\nThey moved through the museum to the external doors leading to the special evening preview of the collection. Carrington took a deep breath as she wandered through the small crowd waiting outside. She counted the now familiar faces of the men of the Hats stopping to greet Freddy Avery and his wife, as well as making an effort to be pleasant to Christopher and Stella Davis, acknowledging that Christopher was one of Sinclair's closest friends.\n\nGiven the timing she had known they would all come, each wanting to capture the Fool, or at least see the last of their number deprived of their family artefact. They were in for a large surprise toward the end of the night if all went to plan. She saw Marina arrive with the elderly woman, CC, who was her newly found grandmother, and raised her eyebrows. This was unexpected and not entirely welcome. She suddenly felt surrounded and regretted not having taken Sinclair fully into her confidence. The old woman walked toward her and Carrie painted a smile on her face.\n\n\"This is a surprise,\" she said in a voice made high by anxiety.\n\n\"Is it?\" the old woman cackled. \"I came to enjoy the fun and, of course, speak to your other grandmother. Has she arrived yet?\"\n\n\"I'm afraid she sent her regrets,\" Carrie said sadly.\n\n\"That's disappointing, perhaps she will change her mind and come after all,\" the old woman looked like she would say more, but Sinclair came up beside her, curious about who the cackling woman might be.\n\n\"Sinclair, this is my grandmother, Carrington Wordsworth. Grandmother, my fianc\u00e9, Sinclair Mansvelt, it's his family's collection we are showing tonight,\" Carrie over explained nervously.",
        "\"I don't have dementia, dear. I came because you told me how much this collection meant to you,\" she cackled again. \"Sinclair, it's nice to meet you face to face finally.\"\n\n\"I am pleased to meet you too,\" he said smoothly. \"May I introduce you to my parents?\"\n\n\"Of course, dear boy, I am sure Carrington has far more important things to do than babysitting an old woman like me,\" she grinned.\n\n\"I should do one more quick walkthrough before the doors finally open. If you'll excuse me,\" Carrie smiled at them both and moved toward the entrance. Jordan's hand reached out and grabbed her as she moved past him.\n\n\"I just got a text from Edith, she and Grant are coming. They are on their way here from the airport,\" Jordan's expression said something was wrong, very wrong.\n\n\"We'll let it go until tomorrow and regroup in the morning, just go with the flow and, whatever happens, find out why they changed their minds about coming,\" Carrie whispered urgently. Her mind racing with how the old woman had managed to organise Edith's attendance tonight. She walked through the exhibits, reaching the curtained area, and took a shaky breath. She felt sick and suddenly felt the need to tell Sinclair everything. She pulled her phone from her pocket, wondering if it was too late, and pursed her lips.\n\nMax and Daley guarded the curtained off area, and she saw them watching her with concern. She put her phone away and smiled the same fake smile she had been using for days. It was too late now; she had to just let it all ride on one final gamble and pray that everything worked out as CC had promised.\n\nCarrie made her way back to the entrance and signalled the museum director that all was ready. The distinguish gentleman cleared his throat and came to a small podium before the doorway where Carrie stood, her team passing by her to enter the exhibit and take up their positions. Once the speech was over, and Carrie opened the doors wide, she felt the strong, comforting arm of Sinclair settle around her waist as he walked with her into the exhibition.\n\nThey walked through the maze-like spaces where people inched past the displays that circled the large space, ending up at the large deep red curtain hiding the final large space before the exit could be reached. Those present had been carefully handpicked for invitations. She smiled up at Sinclair as they walked through without stopping at the cases. Sinclair knew every piece and had been at the museum often enough over the last few weeks to have seen the majority of the displays and studied them in depth for accuracy.\n\n\"Sin,\" Carrie said in an almost whisper once they found a quiet corner before the rest of the patrons caught up to them. \"Whatever happens tonight, I do love you, more than I could have believed possible.\"\n\n\"What do you mean, whatever happens tonight?\" He asked, his voice lowering to the same volume. \"What's going to happen?\"\n\n\"I don't know what will happen, but Edith is on her way, and Jordan looks like a disaster is about to occur. I just wanted you to know I love you, I know I don't say it much at all, and I wanted to say it tonight surrounded by the friends, career and the new life you have given me.\"\n\n\"Edith can't hurt me, not surrounded by so much security,\" Sinclair said, \"You have to stop thinking like that.\"\n\n\"I know, but I wanted to say it tonight, anyway,\" she took his hand in hers and squeezed it, letting her anxiety show in the shiver that ran down her spine.\n\nThe large space at the end of the displays began to fill with those who had already viewed the exhibition as it was, and the Director of the museum once again took to a small podium as more champagne flowed and canapes were circulated amongst the guests.\n\n\"The curator of this exhibition has saved the best for last,\" he announced. \"We stand now before the treasure room,\" he paused as a small ripple went through the crowd and indicated the security men who stood nearby.\n\n\"I would like to invite the family who made this exhibition possible to come and open this final room,\" he invited, and began a round of applause as Georgia, Frazer, and Sinclair looked at her in surprise.\n\n\"Go,\" she urged him. \"I'm the curator tonight, not your fianc\u00e9, I'm working,\" she whispered.\n\n\"No, come with me,\" he hadn't moved, and his grip on her hand tightened as she tried to release it.\n\n\"Please, Sinclair, this may be the only time I get to be a curator in my own right, let me enjoy it without tainting by nepotism,\" she said reasonably, making him frown.\n\n\"Come on up, Sinclair. It was you who made all of this possible,\" the director called into the microphone.\n\n\"Come with me,\" Sinclair refused to let go of her hand and dragged her toward the front of the crowd who had surged forward eager to see the treasure room.\n\nCarrie went reluctantly and stood on the edge of the platform. Sinclair stepped up, ungrateful that there wasn't enough room for him to drag her up there with him.\n\n\"I feel honoured to see so many familiar faces in the room and would like to thank you all for coming to the preview of the Mansvelt collection. I hope you have enjoyed the journey through time beautifully designed by Carrington Wordsworth-Ward and her team here at the museum,\" he paused and indicated Carrie, who blushed at his praise. \"I could not have trusted such valuable family treasures to anyone else.\"\n\n\"I couldn't have said it better,\" Frazer agreed, when Sinclair offered him the microphone and waved it away.\n\n\"Gentlemen, if you'd like to do the honours and lead the way,\" the director indicated a lever that would raise the curtain that hid the entrance to the treasure room.\n\n\"I think the woman who put all of this together should do the honours,\" Sinclair indicated Carrie, and began a round of applause encouraging her onto the small platform. She stepped up and smiled widely at the crowd.\n\n\"Thank you all for coming, please help yourselves to the refreshments in the treasure room,\" she said in a small voice barely amplified by the microphone and pulled the lever. The curtain fell away revealing the cleverly built stern of an old galley ship, the leadlight decorated doors leading into its belly open for people to walk through.\n\nSinclair took her hand again, preparing for her to berate him for putting her in the spotlight, when Brandie and Lee approached looking worried.\n\n\"Someone has tampered with the final hologram,\" Brandie whispered urgently.\n\n\"I need to get into the mechanism below it to see what's going on,\" Lee added.\n\n\"We can't get to it in there now,\" Carrie said, her eyes wide and her voice shaky with anxiety. \"Can we get to it through the other one?\" They had placed two holograms back to back with a wall between them. If they could access this side through the other one, it wouldn't be a huge problem, but trying to fix it in here with all of the guests looking on, as well as the museum director, would be mortifying for her.\n\n\"Maybe, but we'll need your master key,\" Lee considered her words.\n\n\"Brandie, stay here and call if any happens while we're in there,\" Carrie said. \"Sinclair, make sure Brandie can get near enough to the hologram without the director realising there is a problem. Get him a drink or distract him somehow, please!\" she instructed, her voice rising in panic before hurrying away with Lee.\n\nSinclair immediately looked around for the director, who was standing near the display housing the Heart of the Heartless, and, while keeping Brandie within sight, he moved toward the man. It seemed like only a few minutes, but was, in reality, more like fifteen when the hologram sprang to life startling the room.\n\n\"Who dares disturb me treasure!\" the holographic image of Edvard Mansvelt shouted into the room, making everyone turn to look at the spectacle. Sinclair saw Brandie walk away from the hologram looking at her phone and excused himself from the director and followed the purple haired girl.\n\n\"Everything good?\" he asked.\n\n\"I think so, I've let them know, but they aren't answering my text,\" she frowned. \"I need to get back to the control room and ensure the program is running...\" her voice petered out, and her mouth gaped open as the hologram flickered and seemed to morph into something completely different. Sinclair followed her gaze and saw what she saw. A rumble of disquiet ran through the room.\n\n\"Good evening Fools,\" the jester-like figure greeted the gathering. \"It seems that the Mansvelt's have tried to trick me with a fake tonight, so, rather than the Heart of the Heartless, I have taken the Heart of Sinclair Mansvelt! If you want it back, you will bring each of your Hats to Port Royale.\" The hologram exploded then, showering the crowd with cards depicting the Fool.\n\nSinclair was already moving in the direction Carrie had gone to check on the hologram's mechanics. He found Lee unconscious and bleeding from a large gash on his head. Several Fool cards lay on the floor around him.\n\n\"Call an ambulance and the police. Now!\" Sinclair yelled, looking at the people around him, seeking out one face in the crowd. Not finding it, he pushed past the people and ran back toward the Treasure Room. Finding his target, he grabbed Jordan by the lapels and lifted him from his feet. \"What did you do!\" Sinclair roared in his face.\n\n\"Me? What did you do?\" Jordan spat, \"This whole thing was your idea, not mine!\" he honestly wasn't sure what was going on. Carrie had been so reticent to fill him in on her plans, and he held to the hope that this was her plan and she would make contact with him as soon as she could. The alternative was too painful for him to think about. If Sinclair had discovered her motives and had stepped in to stop her from fulfilling his family's legacy by harming her in some way, he would kill the man himself.\n\n\"Where is she?\" Sinclair demanded through clenched teeth.\n\n\"I was about to ask you the same thing!\" Jordan snarled, pushing his arms up between Sinclair's and fighting his way free of the grip the larger man had on him.\n\n\"If you've harmed one hair on her head, there isn't a hole on this earth that you could crawl into where I won't find you and end you!\" Sinclair threatened, and, as he saw Jordan about to spit back another accusation, he lost any reserve he was clinging to and hit Jordan, knocking him to the ground where he sat dazed as Sinclair stalked off. He knew she'd been gone from his sight long enough for whoever took her to be far enough away that running around the museum looking for her was a waste of time. He wanted to go back and hit Jordan again, just to make his point crystal clear, but, instead, he went back to where Lee lay unconscious, ignoring his parents and sisters as they tried to talk to him.\n\n\"Sin, it's war party time,\" It was Christopher voice that finally cut through the angry red mist surrounding Sinclair.\n\n\"What?\" he shook his head.\n\n\"We're going to war in Port Royale. You want her back, don't you?\" Christopher said, sounding just as angry as Sinclair felt.\n\n\"Yes!\" he hissed and came to his feet. \"Brandie, you tell me the moment he wakes up. Go to the hospital with him and tell me everything he says about what happened,\" he ordered in a threatening way, making her nod at him with wide open eyes.\n\n\"I'll go with them,\" Max said, and Sinclair realised the two men who had been charged with guarding Carrie looked sick with the gravity of what had just happened. \"Daley can stay with you, and we'll keep an open line between the hospital and here.\"\n\n\"Fine!\" Sinclair snapped and stalked off, following Christopher, who had begun to walk to where an animated group of men all stood talking in low tones and watching Sinclair. Several of the men held one of the cards that had flown out of the exploding hologram.\n\nSinclair approached the men warily. None of them knew that what had just happened was impossible. Carrie was the Fool, yet the fool had kidnapped her. His anger fogged his thinking, and he couldn't make sense of anything that had just happened. The one thing he knew for sure was that the woman he loved was missing, and someone inside this museum had done it. He said nothing as the men stood talking around him. He was handed one of the cards.\n\n\"These are the cards left near where the boy was found,\" the gentle voice of Ben Morgan spoke. \"We got them all. I expect the police would have tried to detain us if we didn't. It lists the nine of us, plus Joseph Nau, Gerard Myngs and Jordan Bonnet. It seems like they're getting the band back together.\"\n\n\"They? They who?\" Sinclair growled, still feeling like he needed to punch someone.\n\n\"The Windsor's, I assume,\" Ben said without thought.\n\nThe idea that the Windsor's had taken Carrie gave Sinclair some hope. Surely her family wouldn't harm her, and they could know about her connection to the Fool. From what Carrie had told him they knew a lot about her life. He decided not to divulge what he knew about Carrington's heritage and her role in the thefts to his colleagues until he had more information about who had her and why. For now, they had to get through tonight and make it to Port Royal by the deadline. It was only then that he realised that he didn't know when that deadline was.\n\n*****\n\nCarrie took a deep breath and steeled herself against going up on deck to greet the man she loved. She knew the love she felt for him was real, and beyond a shadow of a doubt now. She hoped he understood why she had not told him what she had agreed to and forgave her. She looked at the two Amazon-like women who sat with her in the private lounge of her suite on the huge yacht. It was more like a cruise ship, she acknowledged, and she turned her head toward the porthole as she heard the engine of the smaller yacht get louder as it approached carrying twelve men who had come to face their nemesis. One, though, had come for her, and she allowed herself a small smile of hope that he came because he still loved her, not because he wanted retribution for her betrayal.\n\nShe knew that, as they arrived, law enforcement agencies were moving to arrest Grant, Edith and the other men and women involved in the trafficking of drugs, arms and young women. The evidence of the organisation's crimes and the powerful people behind it having been handed over by the Windsor's, who had been gathering information since the thefts of the Fool had begun. Carrie had lamented that the organisation had been allowed to prosper for so long, when the Windsor's must have discovered their crimes long ago, must have, but found out that knowing and gathering irrefutable evidence on powerful people who covered their dealings by using middlemen was difficult.\n\nJordan would find himself without family or friends when it was all over, and she felt for him, despite the fact that he had tried to force her into a relationship with him that she didn't want, she still cared what happened to him. He was manipulated, just as much as she was; it was just that he seemed happy with what they wanted for him and he went along with it. He'd had nothing to do with the criminal activity and would be a free man. CC offered to have him contained once he boarded the ship, but Carrie doubted he would pose a threat to her, especially after hearing what she had to say today.\n\nHer biggest threat now was retribution from the other men she was about to face. Once again, she clenched her hands into fists, digging her nails into her palms in an effort to stop her brain from twirling around all of the possibilities from today. She looked up as the door to her suite opened.\n\n\"How are you feeling?\" Marina said, closing the door behind her.\n\n\"I'm okay,\" Carrie said, clenching her fists again.\n\n\"You need to be better than okay; you need to be strong and committed. If they see you waver they will doubt your words,\" Marina lectured. \"Be an actress; you are not Carrie Ward for the next few hours, you are Lady Carrington Windsor, one of the richest and most powerful women in the world. These men are beneath you, and you owe them no explanations or apologies for your actions. You are merely delivering information and instructions from their betters.\"\n\n\"Are they onboard?\" Carrie asked.\n\n\"Yes, and before you ask, they all came,\" Marina said. \"They are putting their belongings into lock boxes. No phones or any sort of technology will be allowed in the room with you.\" Although she didn't say it, Carrie knew the men would be searched for weapons as well. Her uncle would be handling the welcome for the men, and she would be called to make her speech. It seemed everyone she met in the Windsor clan was an uncle or aunt or cousin of some description. The only people she was sure she was related to were her father and grandmother. She stood and walked to the window, pouring herself a glass of water from the small bar.\n\n\"If it's all the same to you, Marina, I'd like a little time alone before I face them. I think I've had enough pep talks this week,\" she smiled. \"I will be fine, honestly. I have been acting my whole life; today will be no different.\"\n\n\"I'm afraid not,\" Marina shook her head. \"You and the twins can go straight down. The Hats are putting up no resistance, and Sinclair is making demands about seeing you before he agrees to anything further.\"\n\n\"Showtime then,\" she let out a long breath and placed her glass of water back on the bar. The Amazonian women flanked her as she walked as if she were a prisoner being escorted to a trial, and she shook her head at the analogy. When she entered the well-appointed conference room, the occupants fell silent, and all eyes turned to her.\n\n\"Carrie,\" Sinclair breathed, his relief at seeing her unharmed evident in his voice as he came to his feet. One of her many cousins stepped forward and put a hand on Sinclair's shoulder, and the two women moved closer to her until he resumed his seat.\n\n\"As I was saying,\" her uncle continued. \"If you will hold your questions until after Carrington has delivered her information and the instructions you require for when you return to your lives, this will go a lot faster. As you can see, she is unharmed and quite well, so I will let her begin if you are ready to listen, Mr. Mansvelt?\"\n\nSinclair nodded, but glared at the man as he moved away, and Carrie took his place sitting at the head of the conference table. Carrie watched Sinclair carefully, seeing the bunched muscles and obvious tension that radiated from him as the two women who escorted her took their places beside her chair as if she was a forced participant here as the men were.\n\n\"Firstly,\" she began formally. \"I have been asked to inform Jordan, William, Henry and Edward that the organisation known as the Leather Barrows has been raided and the people who arranged and profited from its illegal activities have been arrested. These include Edith Ward and Grant Roberts, as well as a long list of people known to each of you.\"\n\n\"No!\" Jordan shouted. \"You can't be serious!\"\n\n\"I'm afraid so,\" she said, genuinely sad for Jordan who had become an orphan for the second time in his life. The other men that she had named had the good sense to stay silent as the unnamed men looked at them dubiously.\n\n\"Because of the demise of Edith Ward, my grandmother, and a good deal of her cronies, I am free to tell you all some truths about thefts that have plagued your association, not just in the last decade, but centuries,\" she said, her voice strong and steady, albeit unemotional.\n\n\"No!\" Jordan's voice ran through the room a second time, and he came to his feet only to have one of the big men move to place a hand on his shoulder, and the women beside her closed rank around her again.\n\n\"It would be in your best interests to sit down and listen, Jordan,\" Carrie said coldly.\n\n\"Why are you doing this?\" Jordan asked miserably.\n\n\"Because I want my freedom,\" she admitted, stealing a glance at Sinclair, willing him to understand why she had done this. \"In two thousand nine, when I was just sixteen,\" she nodded at the man standing behind Henry, \"I stole a cutlass from the Teach family.\" The man laid a box on the table in front of him and stepped back. \"In two thousand and ten, I stole an etching from the Vane family.\" Carrie went on to admit all of the thefts she had performed, returning what was stolen to its owner. The men said nothing, silently inspecting the boxes they had been given.",
        "\"In the last year, I fell in love, and for the first time in my life questioned what I was doing and why,\" she admitted. \"It is for that reason I took, rather than stole from the Mansvelts.\" The rubies she had been given were placed in front of Sinclair. \"I stole nothing from you, Jack, and Gerard, or you, Jordan,\" she said, before looking at Sinclair as he received the box.\n\n\"It wasn't until this year that I questioned why some of you reported the thefts and some didn't, replacing what I had stolen with a fake. A good fake, but a fake non-the-less. I realised why when the Mansvelt's tried to tell me that the rubies they gave me for the exhibition were the original Heart of the Heartless when I could tell they weren't,\" she paused to let the information sink in.\n\n\"So, in the interests of full disclosure, here are the facts as I know them,\" she began. \"The Mansvelt's could not have given the real Heart to me for the exhibition because it was stolen in nineteen sixteen by Jack Myngs, who had taken the name of his uncle, who died in the great war, and started working on fulfilling the addendum in the Windsor contract to buy his way into the association.\" Behind her, a panel of the wall opened to reveal the real Heart of the Heartless. She went through six of the other artefacts, naming the year they were stolen and the name of the thief. Some were stolen by the Nau family, some by the Myngs, a few by herself, and others, like her family artefact, had been handed over as they were ostracised from the association.\n\n\"All I stole were replicas, for the most part, which is disappointing, to say the least. Should Jordan have tried to use them to buy his way onto the table, he would have been sadly disappointed, because not only were they fake, but the Windsor's knew that he did not steal them himself, and therefore the addendum trial was not true,\" she folded her hands before her. \"The Windsor's currently hold all of the artefacts, and you will each need to negotiate their release in your own way, unless you are willing to listen to the terms they are willing to offer to renew your contract to the Brethren of Coast, the association you now know as the Hats,\" she paused and looked at each of them.\n\n\"Well, I've got nothing left to lose,\" Jordan said sullenly.\n\n\"Want to bet,\" Sinclair growled threateningly, surprising Carrie, who watched the venomous looks they gave each other.\n\n\"I had no idea,\" Rackham said, lifting the fake pistol from the box before him. \"My father never said anything, though going by the dates you just gave he mightn't have known either,\" he mused, not doubting her words after her confession to being the Fool. He would rub Sinclair's nose in the fact that he was right all along when the man wasn't so touchy and, therefore, aggressive.\n\n\"Is what you stole from me up for negotiation, or will I be getting terms for that too?\" Sinclair asked her with an unreadable expression on his face.\n\n\"That would depend on whether you are willing to consider either,\" she replied as unemotionally as he had asked the question. Worry about the tone of his voice ran through her. He wasn't cold, as such, but the distinct lack of any of the warmth she had become used to from him made her believe he was not as interested in those negotiations as she was.\n\n\"I'd like to hear the terms,\" William shrugged. \"I am betting they are far less onerous than any negotiations I might have to enter into on my own merit. I have nothing to lose at this point.\" He looked meaningfully at Vane and Teach. Each of them had dealings with Edith's organisation and knew they had little choice but to acquiesce to any demands made today or face the same consequences as the Bonnets.\n\n\"You will all need to be in agreement,\" Carrie said. \"For that purpose, I will leave you to talk amongst yourselves during lunch. Be aware that the terms will not be the same for all of you, the Windsor's have been quite specific about that, but you will all be included, regardless of your current standing within the association and your dealings with the Leather Barrow.\" Carrie stood, and the two women closed ranks around her.\n\nSinclair looked around at the men lining the walls and didn't move. He could quite work out if she was a prisoner here or if she had taken her place amongst the Windsor's. He desperately needed to talk to her, alone preferably, but if he had to, he would do it in front of his colleagues. He felt impotent as he watched her leave the room followed a minute later by the twelve men who had stood behind each of his colleagues. His gaze fell on Jordan, and a sneer crossed his face. \"Got what you wanted after all,\" he stated.\n\n\"Did I?\" Jordan retorted. \"I've just lost every reason I had for doing this, including her.\"\n\n\"You never had her,\" Sinclair snarled maliciously. \"She grew to despise you.\" He said, knowing it would wound the younger man.\n\n\"Alright, gentlemen, let's look at what is happening here logically,\" John Brassilano spoke for the first time. \"The way I see it, six of you have nothing to lose and everything to gain, whether by terms or negotiations, while the rest of us have nothing to lose by listening to their terms before deciding if we will negotiate the return of our stolen artefacts or not.\"\n\n\"I don't think it's going to be as easy as that, but you make a good point,\" Ben Morgan chimed in. \"The rifts within our small brotherhood are deep, and perhaps it is time to walk away and reap the rewards or consequences of how we chose to use our power and influence in this world.\"\n\n\"It can't hurt to hear their terms,\" Rackham mused. \"We may be greatly benefitted by a restructuring and injection of new life at the table,\" he looked across at Joseph Nau, who smiled and nodded his head toward Rackham.\n\n\"I'll go with whatever you and Freddy want to do,\" Sinclair murmured to Christopher, and stood from his place to walk toward the door. Two large men stood on the other side of it, and he looked at them a moment before opening his mouth. \"I would like to see Carrington Windsor, please.\"\n\n\"Certainly, Sir, she is expecting you,\" One of the men said easily. \"If you will follow me, please.\" Stunned, Sinclair followed the man through the ship to a comfortable lounge area on an upper floor with spectacular views of the water and distant islands.\n\n\"I'm afraid I didn't make myself clear, I had wanted to see Carrington Wordsworth-Ward, but she had been introduced as Windsor here, so I used that name not thinking to find you,\" Sinclair explained as CC turned to greet him when he entered the lounge.\n\n\"I know, dear, but I wished to speak to you first,\" CC replied, offering him a seat with the sweep of a hand. \"Can I get you a drink?\"\n\n\"Will I need one?\" Sinclair countered.\n\n\"Perhaps, it will at least help you relax a little,\" CC cackled, lightening the mood a little. \"Scotch, is it?\" she inquired.\n\n\"That will be fine,\" he said cautiously.\n\n\"They planned to kill you anyway, you know? They would have used you as a bargaining chip until Carrington married that silly boy, and then they would have removed you and taken their chances with your cousin taking your place in the association.\" CC said without preamble, stunning him.\n\n\"She wouldn't have married him,\" Sinclair spluttered.\n\n\"She would have done it to save your life,\" CC argued, and was pleased when he fell silent. \"That's why she is here; I gave her an alternative to a life with you in hiding or a life with that boy.\"\n\n\"What are you saying exactly?\" Sinclair asked, feeling an icy hand wrap around his heart. \"What alternative?\" he asked, thinking she had already married a Windsor because of her name change.\n\n\"She loves you, she is terrified that you won't forgive her for what happened at the museum without warning you, but it had to be that way. Your reactions to her disappearance had to be real for Edith to drop her guard,\" CC explained. \"Carrington has made herself ill thinking about your reaction to seeing her again and finding out what she did. I won't let you near her if you feel anything other than the same love she feels for you.\" She allowed herself a small smile as she saw the man visibly relax in front of her.\n\n\"She's my world,\" he admitted. He had suffered just as much over the last few days. \"I would have given it all up for her and gone into hiding, if that was the only way to keep her from the Bonnets.\"\n\n\"She said as much when I approached her about our plans,\" CC admitted. \"Would you like to hear that story now that you have relaxed a little?\" she inquired, tilting her head at him.\n\n\"Will listening to it allow me a few minutes alone with her when you are done?\" Sinclair negotiated.\n\n\"Perhaps, but that is up to her now. What it will give you is a greater understanding of her circumstance and why she took a chance on gaining the freedom to make her own choices for the first time in her life,\" CC offered.\n\n\"I will listen,\" Sinclair said grudgingly, knowing he needed to play this old woman's game if he had any hope of seeing Carrie anytime soon.\n\n\"Firstly, you must understand that her mother was a master manipulator. Very few people manage to out manoeuvre us, but Robyn was a professional at it. Had we known the mental duress Carrington endured as she grew up we would have stepped in, but we were unaware. She chose those close to her well and, not knowing any different, Carrie always seemed happy and healthy to the world outside of her home. I do not want you to think we were uncaring as we watched her grow up from afar.\" CC made her apologies for her absence from Carrie's early life in a tone that said she would not discuss this any further.\n\nSinclair listened to CC's version of events leading up to the last few months and agreed that he knew that the intelligence that helped himself and Christopher interrupt the flow of human-trafficking from time to time had come from the Windsor's. Now he knew why.\n\n\"Be very sure before you see Carrington of what you want, Sinclair, because she is very fragile, despite her hard, outer shell. I will not endanger her peace of mind for choosing what she believed was the right path to get to this point. Especially not for your bruised ego,\" she said in a mildly threatening way. \"I would like you to rejoin your friends and enter into the negotiations and find out about your future before you speak to her properly,\" she instructed.\n\n\"I just need to see her, without all of the others in the same room. I just need to know she is alright.\" Sinclair said, knowing he sounded like he was begging, but needing to hear from Carrie that she chose to do this to win her freedom, and if that freedom included freedom from him.\n\n\"Bring her in,\" CC said to the waiter who had brought in a tray of gourmet sandwiches for their lunch as they had been talking and had not left the room.\n\nSinclair looked up as, minutes later, Carrie walked through the door flanked by the two large women who were with her earlier. For a brief moment, he saw the fear and vulnerability she felt in her features before the unemotional mask she had worn in the conference room returned.\n\n\"You called for me, Grandmother?\" she asked formally, ignoring Sinclair's presence.\n\n\"I did. Sinclair understands why you chose to put your faith in us and wanted to see that you were here of your own free will,\" CC spoke in an affectionate tone. \"That will be all, for now, ladies,\" she dismissed the guards who had accompanied Carrie into the room.\n\n\"It's true,\" Carrie said softly. \"I chose to end all of the lies and secrets once and for all so I could be free to choose the life I wanted without having to worry about who I was putting in danger,\" she explained.\n\n\"So, you just disappeared,\" Sinclair stated, his eyes taking in her beautiful face. \"We'd argued less than twenty-four hours before you disappeared. You told me you were questioning everything I had said and done, and then you disappeared?\"\n\n\"I also told you that I loved you,\" she said, not hiding the sadness in her voice that he was mad at her and obviously didn't understand that she had done this for him, to save his life. Still, she could live with the consequences of that choice if she had to. \"You wouldn't have let me take the risk alone if you knew, and we needed time to deal with Edith and her cronies to make sure you were safe before I revealed myself. I had to give you one small seed of doubt, or you may have killed Jordan looking for answers.\"\n\n\"I knocked him on his ass anyway,\" Sinclair let a small smirk touch his lips at the memory and watched her eyes widen. \"He deserved it, and you know it.\"\n\n\"Did he?\" she asked tentatively. \"He was only doing what he had been brainwashed into believing was the best for his family. He didn't have someone like you in his life to show him a different way to live. Now he's an orphan for the second time in his life, and I feel sorry for him.\"\n\n\"Is that why you didn't let the police round him up with Edith and her cronies?\" Sinclair asked, stunned by her words and hoping that she hadn't realised that she loved Jordan after all. Nothing CC had said had given him that impression, in fact, quite the opposite. Still, worry gnawed at his insides and an icy grip settled around his heart again.\n\n\"He and I,\" she emphasised the I, making sure he realised she was part of that family too. \"We never had any part in the criminal activities of the Leather Barrow. Why would he have been rounded up any more than me?\" She asked, once again stunning him. \"I surely perpetrated more criminal acts than he did over my lifetime.\"\n\n\"Because he tried to steal you from me,\" he sighed. \"I'd quite happily lock him up for that.\" Carrie laughed lightly, letting the first real emotion through her fa\u00e7ade, and Sinclair advanced on her quickly, pulling her into his arms and kissing her deeply before she regained her sense of place and fought her way free from his arms.\n\n\"Sinclair, we need to conclude the association business before we talk about what happens next. I don't want to influence your decision or those of your friends,\" she said breathlessly.\n\n\"If you promise not to disappear again. After the association business is concluded, we will negotiate whether you leave with me or I stay here with you, because I am not spending another night alone,\" he said authoritatively.\n\n\"It's time to go back, Sinclair. Send word when your associates have gained an agreement, and I will return,\" she said in the same commanding voice she had used when addressing the men in the conference room, but her face had softened as she looked at him, and he knew things would work out for them eventually.\n\nWhen he entered the conference room again, his eyes fell on Jordan, and he felt an easing of the fury he had felt towards the younger man. After what Carrie had said he felt more charitable toward him now, though they would never be close friends, he didn't feel the overwhelming need to punch him again. He schooled his features and took a seat, not needing to divulge what had happened except that her grandmother had assured him that she would meet him after the negotiations were done.\n\n\"So, bring me up to speed,\" he murmured to Christopher and listened carefully to the summary of events.\n\n\"Terms,\" he said, \"Rackham is siding with the new members and those named as associates of Edith's, so it's seven to four.\"\n\n\"That's eleven. Who's the holdout?\" Sinclair surveyed the group. \"John?\"\n\n\"Sitting on the fence and hedging his bets, as always. He and Rackham have always been the same, but Rackham made a choice, I think he's more invested in the Hats than he wants to let on,\" Christopher said thoughtfully. \"Maybe we should rattle his cage a little.\"\n\n\"I imagine he thinks he won't have to part with anything if he takes the terms. I wouldn't mind seeing what they are myself, to tell you the truth,\" he admitted.\n\n\"Did you see her?\" Jordan abruptly asked Sinclair directly, the question that had been stuck in his throat until be blurted it out loudly.\n\n\"Briefly, I met with the old woman, and she produced Carrie at the end of our conversation to prove she wasn't being held against her will,\" Sinclair said without the usual snarl he used when addressing Jordan. \"She's here by choice, and the Windsor's are her family now, and that is something we both must accept.\" The men at the table all turned to look at him as one, and he realised he had said that a little louder than he possibly should have. \"Personally, I can't hold it against her. She lived a harsh and lonely life at the hands of her mother, and I can understand the appeal of a new family.\" He saw the crushing blow his words had on Jordan and heard the words of Carrie in his mind.\n\n\"I guess that makes you an orphan for the second time, with Edith gone indefinitely,\" Sinclair said in a quieter tone. \"I imagine, if the association holds together, the men, here, will become like family, once you prove you can be trusted.\"\n\n\"Shit,\" Ben said, looking at Jordan. \"That's a tough blow. I wouldn't bank on Sin lining up to be your brother, but if you need a place to stay and get your head around everything that's happened, you can stay with me for a while.\"\n\n\"It wouldn't hurt for the new associates to each have mentors for a while,\" John said in his neutral way. \"Maybe spend time with each of us over the next year or two.\"\n\n\"Makes sense,\" Rackham murmured to a general nodding of agreement. \"So, we're happy to look at terms then?\"\n\n\"Yeah, alright,\" Christopher agreed, followed by Ben and a reluctant Freddy.\n\n\"I wouldn't mind knowing what they entail,\" Sinclair mused out loud this time. \"Better send word to Lady Windsor that we are in agreement.\"\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "kidnap",
        "pirates",
        "exhibition",
        "secrets and lies"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-fool-ch-11"
}