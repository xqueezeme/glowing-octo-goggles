{
    "title": "PADI Cake, PADI Cake",
    "pages": [
        "\"So is this something else on your bucket list, Spencer?\"\n\n\"I've never been a fan of that term, but yes, it is something I've wanted to do for a very long time. When Jeff was alive we talked about it several times, but with both of us working and him deploying so often, it just never happened, you know?\"\n\n\"I understand. And sorry about my insensitive choice of words. But yes, after we went to war in Iraq, all of our husbands were gone all the time. It seemed like they'd just get home then turn around and leave again. Iraq, then Afghanistan, then back to Iraq.\"\n\nSpencer looked down then said quietly, \"Not everyone came...home...from all of those deployments.\"\n\n\"Oh, Spencer, I am so sorry! I didn't mean to imply that...\"\n\nSpencer smiled and said, \"It's been eight years, Millie. No offense taken. How is Brian, by the way?\"\n\nSpencer Monroe didn't want her friend's sympathy. She was simply stating a fact. A fact she'd lived with ever since that fateful day so many years ago. \n\nShe changed subjects as soon as the conversation began heading down Sympathy Lane. She and Millie Thomas hadn't seen each other since her late husband, Marine 1stLt Jeff Monroe, was laid to rest in Arlington National Cemetery three months after his memorial service at Camp Lejeune, North Carolina, which took place exactly one week after his death in Afghanistan. She had no idea it took three months, even for someone like the late Senator John Glenn, himself a retired Marine Corps officer and national hero, to be buried in Arlington.\n\nSpencer loved Millie and was thrilled to see her even if it was just for a few hours on her way across country for what might well be her husband's last tour of duty at Camp Pendleton in southern California. Spencer knew that she and Jeff would have been stationed there at least once had he lived as he'd fully intended to make the Marine Corps his career, but God or the universe or...something...had had other plans.\n\nShe'd nearly fallen apart when the white staff car pulled into her driveway that hot August day back in 2009. The events were still vivid in her mind'd eye even now. \n\nShe held out hope against all odds even after a Marine captain and a staff sergeant, both in dress blues, got out of the vehicle. But when she saw the Navy chaplain dressed in white, she knew. \n\nHer knees had buckled and she'd fallen to the floor and began sobbing. The three men could see her as they looked inside, and the captain, who was from Jeff's battalion, knew her and Jeff personally. \n\nHe'd had to break a window to open the door in order to let them in. The window got fixed that same day, but her heart had been shattered. Over the years, she'd learned to hide it well, but Millie knew how badly Spencer had missed him. Perhaps one day she would find someone else, but for now she had her hobbies, and, okay, her...bucket list.\n\n\"If I could stay, I'd take the class with you, Spencer,\" Millie told her. \"It sounds like a lot of fun.\"\n\n\"I'm really excited about it. I'm just glad it's summer, you know? The water will still be cold in Puget Sound, but with a wet suit, I think it'll be bearable. Besides, all the early stuff is done in a heated pool so...\"\n\n\"Oh, I see. You really are roughing it then, huh?\" Millie teased.\n\nShe and Spencer laughed, and for a moment it seemed just like old times. Except that, unlike Millie, Spencer no longer had a husband, and although they'd aged well, they didn't look quite the same anymore, either. Spencer had been 22 while Millie was just 21 the last time they'd seen one another. Both women had been distance runners, and Spencer had since done so many incredibly challenging physical things over the years that she was in far better condition now than she'd been even when Jeff was still alive. Even so, she knew she no longer looked the same. She also knew that considering the alternative, the inevitability of aging was not only unavoidable, but fine by her. \n\nShe'd rarely dated over the intervening years, but that wasn't due to any lack of opportunity. She just hadn't been ready\u2014at all\u2014the first three years, and her still heart wasn't in it the next three even as she began to try and reach out. But these last two years, she'd discovered she could still love again, and to her great satisfaction, her body had also learned the same lesson. Spencer smiled when she thought how making love really was a lot like riding a bike after her first time in nearly seven years. \n\nFor now, getting her open-water diving certification was the next 'great thang' on her to-do list, and she was signed up for the class that began on Monday of the following week.\n\nSpencer had a degree in interior design but had never worked. She'd met and married Jeff during her senior year of college, fell crazy in love with him, and had thoroughly enjoyed being a housewife. There'd been no need to work. They both agreed to wait to have children and Jeff made more than enough for them to get by on and even put a little away each month. Life had so simple, easy, and sweet.\n\nAfter the death of her ruggedly-handsome Marine husband, she'd had no interest in working as she knew she'd be incapable of focusing on mundane things like home decor, something she'd once dearly loved. And thanks to Jeff's planning and the government's willingness to care for the families of its fallen, she hadn't been forced to work from a financial standpoint.\n\nThe day after she learned of her husband's death, she'd been handed a check for $100,000 for what was ironically called a 'death gratuity' payment. Four weeks later, after filing for his insurance benefits, she'd received another check in the amount of $400,000. \n\nSpencer had spent a fair amount of the money from Jeff's SGLI (short for Serviceman's Group Life Insurance) to fund the trips and things she'd done to keep from losing her mind. At the time, she couldn't even think about other men so she'd learned to skydive and ski. She'd also learned how to race cars and climb mountains. In fact, she'd ended up in Seattle, Washington, because her last climb had been Mount Rainier, a 14,000-foot snowcapped peak she could see on clear, summer days, from her modest home in the small town of Sumner, Washington, located about 35 miles due south of Seattle.\n\nShe was now seriously thinking about either starting her own business or perhaps taking a job as an interior designer to get her feet wet, so to speak. For now, learning to dive was priority number one while seeing underwater treasures like shipwrecks was a close second.\n\n\"It's been so good seeing you again, Spence! I'd love to stay, but I've gotta get to the airport or I'll miss my flight,\" Millie finally said. \"I've gotta turn this rental car in first, so I really do need to run.\"\n\n\"I'm so glad you stopped by,\" Spencer told her sincerely.\n\nJust as she was leaving, Millie stopped and asked her dear friend a question.\n\n\"Is there anyone in your life, Spencer?\"\n\n\"No. Not really,\" she replied noncommittally. Spencer had no desire to get into a lengthy discussion about the men she'd dated or the one with whom she'd made love for the first time since Jeff. She especially didn't want to have to try and explain how it had been with a guy she'd met while preparing for her Rainier climb just several months ago.\n\nHe'd let her know early on he was interested and although he was very good looking, she'd never taken him seriously because he was only 20 years old. And yet after she'd summited Rainier, she still couldn't think of a reason other than the age difference, not to at least go out with him. After all, a date wasn't a marriage proposal and she was more than a little bit interested in finally seeing how her body would react to someone she found attractive.\n\nShe stopped by the store where he worked selling gear to climbers and campers to ostensibly thank him for all his help and to let him know she'd completed the grueling climb. The following evening she was having dinner with him and several hours later she was having...him...for dessert. \n\nSpencer was thrilled with the way her body had responded. So much so that she had a rather torrid affair with this tall, gorgeous, much-younger man. She only called things off because he made it clear his only real interest in her was physical. \n\nThat had been fine until, one day, it wasn't. There was no shame in what she'd done, and Spencer felt none. It had been consensual and honestly, a whole lot of fun. But it also made her painfully aware of just how much she missed being married and how much she wanted to have children before that ship sailed. So with that, her first and only real fling had ended as quickly as it had begun.\n\n\"Sorry. That's really none of my business,\" Millie replied before Spencer could answer.\n\n\"No, it's fine, Millie. The answer to your question is no, there's no one currently in my life, but I am definitely ready for a serious relationship. I just have to meet the right guy and that's no easy task\u2014especially after having already met and married him.\"\n\nMillie was getting very close to pitying Spencer again so the latter said very cheerfully, \"Give me a big hug before you go, okay?\"\n\nThe two old friends held one another tightly for several seconds before Millie finally said goodbye.\n\nShe turned around again when she got to her car and said, \"He's out there, Spencer. Just be willing to look anywhere and everywhere. Sometimes the right guy is well, right in front of us, while we're looking all around and...right passed him.\"\n\n\"I'll remember that, Millie,\" Spencer said as her friend got in the Dodge Challenger rental and drove off.\n\nSpencer was grateful for the visit, but it was so different and so strained that she was almost relieved when Millie finally left.\n\nTo avoid thinking about all of the memories her visit had stirred up, Spencer sat down and started reading (or rather re-reading) the materials she'd been given when she up for the course. \n\n\"The Professional Association of Diving Instructors (PADI) is the world's largest recreational diving membership and diver training organization founded in 1966 by John Cronin and Ralph Erickson,\" is how the booklet began. She devoured every word until she felt ready to tackle this latest new challenge in just two more days.\n\nShe'd purchased, rather than rented her equipment, as she tended to go \"all in\" on anything she did and diving would be no exception. As far as she was concerned Monday couldn't come soon enough, and although the weekend took its sweet time ending, Monday did finally roll around.\n\nSpencer showed up fifteen minutes early and signed in up front. The man who checked her in smiled and let her to know to ask if there was anything he could help with. She asked where the women's changing area was, and he pointed down the hall. \n\n\"Men on the right. Ladies on the left,\" he told her. \"Then just go out to the pool and Gray will take it from there.\"\n\n\"Gray?\" Spencer asked.\n\nThe older man she guessed was somewhere around 50 or so smiled again then explained.\n\n\"Gray is short for Grayson. Grayson Clark. He's my nephew and the best diver I've ever worked with. Well, except for his dad, my brother Ernie.\"\n\n\"Oh, okay. Are you the owner then?\" she asked as that seemed reasonable.\n\n\"Oh, no. I'm Ted Clark, and this is Gray's shop. It belonged to Ernie, until he passed away 14 months ago last week. Gray couldn't legally own it or become a certified PADI instructor until he turned 18, but as a year ago last week, both of those things happened on the same day.\" \n\nSpencer's brain made a tentative connection between the events then let it go.\n\nThe man leaned toward her and said as though he was sharing a state secret, \"He's the youngest certified instructor in the state and by far the best. He's been diving with me or his dad since he was five years old. There's nothing he hasn't done when it comes to the water. Oh, and he's got a pretty good head for business, too, and the shop's done great with him in charge. I enjoy being here and well, when a woman as pretty as you comes in, that's just an added bonus.\"\n\nSpencer could see he was still a very attractive man for his age, and it was also obvious he was in excellent shape. She smiled back and thanked him for the compliment and the information. \n\n\"Had you not told me that, I think I'd have been a little concerned when I found out how old he is,\" she told him. She smiled then said, \"Or...isn't.\"\n\n\"You'd probably guess him for 25 or so rather than 19, but I understand even 25 might seem a little young when you're putting your life in that person's hands. I've put mine in Gray's many times on some very tough cave dives and exploring old shipwrecks. I can assure you, he's as good as they come, Mrs. Monroe.\"\n\nShe had signed in and yet he seemed to remember her by face. \n\nHe saw her puzzled look then said, \"I may be old-er, but I'm not blind. Men tend to remember the really beautiful women they meet.\"\n\n\"Ah! One of the perks of the job, right?\" she said playfully, secretly flattered at the compliment. \n\n\"I only look. Especially when I see a wedding ring,\" he said nodding toward hers.\n\nSpencer still couldn't bring herself to take hers off even after all these years. She was always upfront about it if asked, she just never volunteered information.\n\n\"I appreciate you respecting something so important,\" she said with a kind smile.\n\nThe man smiled back and said, \"Marriage is a sacred covenant so even if I was a little younger, I still wouldn't even try to make a move,\" he said in a non-threatening way.\n\n\"Thank you, but because you're such a nice guy I might not mind if you made a move,\" she said pleasantly but not in a way that said she actually was interested.\n\n\"Honestly? I'm not that old, but I know when a woman is out of my league,\" he said with a pleasant smile. \"And since Ernie's death, this just isn't as fun as it used to be. I'm seriously thinking about calling it quits, but not until Gray's got everything firmly under control.\"\n\nTed looked up and smiled then said, \"Knowing that boy, it won't take much longer. In fact, I could probably disappear tomorrow and no one would notice.\"\n\nHe smiled again then told Spencer, \"Enjoy the class,\" before addressing another young woman who had also signed up for the same class.\n\nSpencer set her things down in front of an empty locker and began undressing when the woman who'd come in just behind her set her things down next to Spencer's. \n\n\"Are you taking the beginner's open-water class, too?\" the other woman asked. She was younger than Spencer and also very good looking.\n\n\"I am,\" Spencer replied pleasantly. \"I understand our instructor is a bit on the young side, but he's supposed to be very good.\"\n\n\"Um...have you seen him yet?\" the girl asked.\n\n\"No. Why? The man out front said he looks older than 19. Do you think he looks even younger?\"\n\n\"No, he definitely doesn't look younger,\" she said with a devilish grin. \"He looks...hot. I'm talkin'...radioactive hot.\"\n\n\"Oh, okay. I guess that can't hurt, right?\" Spencer said agreeably.\n\n\"That's the only reason I'm taking the class. I don't really even like to swim, but when my friend told me Grayson Clark was teaching it...\" the younger woman said as she stripped down to her birthday suit. \"He graduated from Sumner high two years after me, but even back in high school he was to-die-for cute. Now, he's just flat out freakin' gorgeous!\"\n\nHer body was firm and tight and...young. Spencer's was every bit as hard and firm, but she had to have somewhere close to ten years on the attractive blonde standing next to her.\n\n\"He's supposed to be really good and very experienced in spite of his age,\" Spencer said again trying to keep things professional.\n\n\"Oh, honey, I don't care how much experience he does or doesn't have. I'll be happy to let him practice on me\u2014all day long!\"\n\nSpencer smiled weakly as she pulled on her one-piece bathing suit.\n\n\"I hope I still look that good when I'm your age,\" the girl said completely unaware that her comment was as much of a slam as a compliment.\n\nSpencer grabbed her mask, snorkel, and fins, and excused herself without further comment.\n\n\"I'm Tonia, by the way,\" the girl said as Spencer stepped around her.\n\n\"Hi. I'm Spencer,\" came the reply as she tried to hurry and get away from the younger woman was already very close to getting under her skin, something that rarely happened.\n\nWhen she glanced back, Spencer was stunned to see Tonia removing her wedding ring and drop it into her purse.\n\nTonia saw her looking her and said, \"What? The rock makes it harder to get a really cute guy's attention,\" Tonia said shamelessly. \"If you wanna ditch yours, too, it'll be our little secret. Don't get me wrong, you haven't got a chance with a guy like Grayson, but you're still kinda cute in that...mature sort of way. As long as we're clear Grayson is gonna be taking me home with him before this class is over, we shouldn't have any problems.\" \n\nTonia set her purse inside the locker, snapped her lock shut then said, \"And trust me, honey, I plan to get my money's worth. But hey, there could be another hot, young guy in the class, so...\"\n\nSpencer didn't respond. She didn't even react. She just turned away and fought off the urge to call her what she was. To her chagrin, Tonia followed close behind and kept on talking as though this kind of conversation was the most normal thing in the world.\n\n\"I mean, monogamy is so overrated, don't you think? I love my husband and everything, but we've been married for four years and together for six. Four years! That's like...all of high school, you know? Speaking of high school, we were high school sweethearts, for God's sake. He's great and all, but as they say, variety is the spice of...\"\n\nTonia grabbed Spencer's arm and stopped talking but only briefly.\n\n\"There he is! Oh...my...God! He is so hot!\" she bubbled.\n\nSpencer turned to look and she did a double take when she saw him. If that was Grayson Clark, she understood what all the fuss was about. This guy, this...Grayson...was as good-looking a guy as she'd ever seen. Jeff had been incredibly handsome, but Grayson really was...on fire. Spencer had to admit, 'radioactive' seemed like the perfect word.\n\nHer first thought was he was too perfect making him seem contrived or too good to be true. Her second thought was how her first thought couldn't have been more wrong, as he gave her the impression he was a kind of conglomeration of a lifeguard, a bodybuilder, and a male model all rolled into one. And...he was at least six-feet tall, another um...added bonus.\n\nWarning bells went off in Spencer's head as her next thought was, \"This kid has be full of himself.\" \n\nIt wasn't fair to assume that before meeting him, but were he a nice guy, too, it...it just wouldn't be fair. The 'good' thing was he was way to young for a serious relationship with someone her age, but then again, after having spent some romantic evenings with a hot 20-year old, she decided she wouldn't throw him out of bed for eating crackers; not that she had any intention of ever inviting into her bed. \n\nSpencer laughed out loud at the old saw about 'eating crackers' she hadn't heard in years.\n\n\"What's so funny?\" Tonia asked.\n\nBefore Spencer could answer, her new 'friend' went to get up and said, \"I am so gonna hit that. Be right back so save my spot, okay?\"\n\nJust seconds later a balding, overweight man of about 45 asked if he could sit next to her and Spencer patted the spot beside her, smiled, and enthusiastically said, \"Absolutely!\"\n\nSpencer thought she heard the man ask how she was doing and may have even replied. Her attention was focused on Tonia who had already touched their young instructor twice in a matter of seconds. The flirting was direct and shameless yet Grayson seemed unfazed by it as he smiled and joked around. His smile, she couldn't help but notice, was as perfect as his very dark hair which was as perfect as his physique which was, well...perfect.",
        "She saw him grab a clipboard and nod toward the group indicating he was ready to get started. Tonia tilted her head and smiled much too big as she said rather loudly, \"Nice talking to you, Grayson!\"\n\nShe headed toward Spencer then noticed the man in 'her' spot and shot Spencer a nasty look.\n\n\"Sorry?\" she mouthed to Tonia who flipped her hair, grabbed her things and said, \"I'd rather sit upfront anyway\u2014bitch.\"\n\n\"What's her problem?\" the man asked.\n\n\"We just met, but I can already list several for you if you'd like,\" Spencer said quietly.\n\n\"Okay, folks. If we can get started,\" Grayson said to get everyone's attention. He already had the attention of the four women, and the seven men also stopped talking.\n\n\"I'm Grayson Clark and I'll be your instructor for basic open-water certification. Before we begin, let me just confirm the rumors. Yes, I am all of 19 years old, and yes, I am the owner of this dive shop.\"\n\nThere was some laughter which could have been either nervous or genuine.\n\n\"So to set your minds at ease, I've put together a short video of some of the things I've done so you will hopefully care less about my age and more about my experience and ability in the water.\"\n\nFor the next five minutes Spencer sat spellbound as everything Grayson's uncle had said about his nephew was true. There were clips from his first time snorkeling at the age of three, his first dive at the age of five, each of his PADI certifications, and much, much more. Just as she'd been told there were scenes from cave dives, dives into shipwrecks, and finally a short clip of Grayson and his late father on the summit of Mount Rainier taken about 24 months before Spencer had summited the snow-capped peak in the Cascade Mountains herself.\n\n\"God bless you, Grayson!\" someone said.\n\n\"And your father! Ernie was a great man,\" another called out.\n\n\"Thank you. And yes, he was,\" Grayson said sincerely. \"I do sorely miss him. He taught me pretty much everything I know.\" \n\n\"Okay, with that out of the way, could I possibly get a volunteer to come up here with me?\" he said flashing that incredible smile.\n\nTonia was up and nearly to the front when Grayson said, \"Ma'am? How about you?\"\n\nSpencer felt ill for a brief moment when every eye turned to see the woman he was pointing to.\n\n\"Yes, the very attractive lady sitting next to Mel in the back,\" he said asking for a round of applause before she'd even stood up.\n\nEvidently, the balding man's name was Mel.\n\n\"Go on now. Grayson won't bite!\" Mel said as he leaned over and offered her a hand so she could stand up.\n\nTonia was shooting daggers at her as Spencer stood up to make her way upfront. Spencer was grateful she could no longer make eye contact once she got close enough to Grayson so he could reach for her hand to help her through the small group of people.\n\n\"Thank you so much for agreeing to help out,\" he said to her knowing she'd hadn't volunteered as they returned to where he'd been standing. \"May I ask your name?\"\n\n\"Oh, yes. It's Spencer,\" she told him.\n\n\"I've never met a Spencer before. Pleased to make your acquaintance,\" he told her with a smile that revealed two gorgeous dimples, as though he didn't have enough going for him already.\n\n\"Okay, folks. This pretty lady is Spencer, and this evening at least, she is going to be my dive buddy. I cannot emphasize strongly enough that you never, ever, ever dive without a buddy. Diving is a very safe sport when you follow the rules. All of them. Let me point out right now that more people die scuba diving than sky diving each year, and diving alone is one very good way to become a casualty\u2014or a fatality. Don't be one of them.\"\n\nSpencer wasn't wild about being in front of everyone, but she found the class to be extremely interesting and exactly what she was hoping for. She knew she wouldn't be doing any deep sea diving hunting for buried treasure anytime soon, but she couldn't wait to be able to get started and make her first real open-water dive.\n\nWhen the class ended, Grayson thanked her again then asked everyone to give his capable assistant and dive buddy another hand. Spencer couldn't help but notice the one person who not only didn't clap but who was still boring holes through her. \n\nSpencer wasn't afraid of confrontation but she never sought it out. Her sixth sense told her it was about to come looking for her shortly.\n\nShe'd barely stepped inside the locker room when Tonia let her have it.\n\n\"I told you he's mine, bitch!\" she hissed while pointing a finger in Spencer's face.\n\nWithout blinking or cowering, Spencer calmly replied, \"I'm pretty sure that's up to him, but have at it. I'm not interested.\"\n\n\"Oh, like you've even got a shot. How old are you anyway? You've gotta be at least...what? Thirty? Maybe even older than that. There's no way a guy like Grayson is ever gonna be interested in some dried-up skank like you! I'm warning you. Stay the hell away from him. Got it?\"\n\nTonia poked her in the chest, something else she didn't let bother her. In fact, since Jeff's death, virtually nothing bothered her. Having lived through the horror and the grief of losing the man she loved more than anyone or anything on earth put everything else in perspective for her. Even so, she did have limits and Tonia was pushing her to right to the edge.\n\nSpencer just smiled and said, \"You're right. I'm clearly too old for him. He's undoubtedly looking for a married woman with anger issues. Yeah, I'm sure that's what a guy like Grayson wants so...go for it, okay?\"\n\nTonia was shaking with rage as Spencer calmly turned around and walked away. \n\nThey'd spent a fair amount of time in the chlorinated pool so she stripped off her bathing suit and took a quick shower before changing, all the while doing her best to avoid her new psycho friend showering just two stalls down.\n\nWhen Spencer finally walked out of the locker room, Grayson was still there talking to his Uncle Ted.\n\n\"That's her,\" she heard Grayson say. \"My dive buddy.\"\n\nHe smiled and waved to her and thanked her again. Spencer returned both the smile and the wave and continued on.\n\n\"Mrs. Monroe?\" Grayson's uncle called out.\n\nSpencer turned and replied, \"Yes?\" then began walking toward him.\n\nWhen she got close enough for him to speak in a normal tone he said, \"I forgot to mention we offer discounts for couples. If your husband is interested in taking the class we'll take 30% off your combined costs. Something to think about anyway, right?\" \n\nSpencer decided it was time to say something so she quickly explained.\n\n\"I lost my husband several years ago, but I still can't take off my wedding ring. So thank you for the very generous offer, but unfortunately there isn't anyone for me to bring.\"\n\nShe saw the look on the man's face as he said, \"I can't tell you how sorry I am or how foolish I feel. Please accept my condolences and my apology.\"\n\n\"It's fine. Really. You couldn't have known and you have a business to run. New customers are your life blood so asking is essential to staying open. No offense taken at all,\" Spencer explained.\n\n\"My condolences, too, Spencer,\" Grayson said with genuine sincerity. \n\n\"That's very kind of you, Grayson,\" she said. \"Um...anyway, I really enjoyed the class and I'm very much looking forward to the next one. I've been so excited about getting certified I can't believe it's actually happening.\"\n\n\"I love diving,\" Grayson told her. \"I can't even imagine my life without it.\"\n\nHe smiled then said, \"Or skydiving or mountain climbing or...\"\n\n\"I saw that you summited Rainier. That's an amazing experience, isn't it?\" she said in a way that made him ask a question.\n\n\"Have you summited Rainier?\" \n\n\"I have, as a matter of fact,\" she said without boasting.\n\n\"Do you also skydive by any chance?\"\n\n\"I do,\" she told him. \"If it's something physical, I've probably done it or tried it or want to try it.\"\n\n\"I knew there was something special about her,\" Grayson said to his uncle while looking at Spencer with a hearty smile. \n\nJust as he spoke those words Tonia passed by.\n\nGrayson waved to her but couldn't help notice Spencer's reaction and asked, \"Is everything okay with you two?\"\n\n\"Oh, sure,\" Spencer told him. \"Just know that she's um...extremely interested in you, Grayson.\" She paused then said, \"Unlike me, she actually has a husb...\"\n\nShe stopped talking then said, \"Please just be very careful. That's all.\"\n\n\"Um...she's still staring at you,\" Grayson said as Tonia continued walking. She'd smiled and waved at their instructor, but her countenance completely changed when she saw Spencer with 'her' man.\n\n\"Would you like me to walk outside with you?\" Grayson asked. \"You're probably a 5th-degree blackbelt in Jiu-Jitsu or something, but I'd feel better knowing you got to your car safely.\"\n\n\"Marital arts is one thing I haven't tried, but who knows, right?\" she said pleasantly. \"And thank you for the offer, but I don't want to take you away from whatever you were discussing. I feel like I butted in and I can...\"\n\n\"Nonsense!\" Ted scoffed. \"You didn't butt in. We called you over.\"\n\n\"My Uncle Ted is right. You didn't interrupt anything and although I never rush to judgment, something's just not right where that woman is concerned. She didn't by any chance threaten you, did she?\" Grayson asked.\n\n\"It's fine, Grayson. She just has a...thing for you. A very serious thing. I'm sure she's not the first, right?\" Spencer said trying to change the tone from dark to light.\n\n\"This one has more girls\u2014and women\u2014chasing after him than I can count,\" his Uncle Ted chimed in.\n\n\"Don't let my uncle fool you. He's got quite a following of groupies of his own,\" Grayson told her. \"Rich, single, and some might even say decent looking.\" \n\nGrayson punched his uncle in the arm and got a playful shot in the chest back.\n\n\"I'm not surprised,\" Spencer said. \"In either case.\"\n\n\"Gray? Why don't you walk out with Mrs. Monroe. Just in case.\"\n\n\"Do you mind?\" he asked, his eyebrows raised letting her know he was asking permission.\n\n\"It's not necessary, but I wouldn't mind the company,\" Spencer told him. \"Maybe you can tell me about what it's like looking around an old galleon or a warship several hundred feet down.\"\n\n\"Don't get him started, Mrs. Monroe! He's normally pretty quiet, but if you get him going about a dive or a climb, you're gonna need a lot more time than it takes to walk out to your car.\"\n\n\"I see,\" she said with a smile to Ted. \"Well, unfortunately, time is something I seem to have plenty of these days once I get back home.\"\n\n\"Come on. I'll walk you out,\" Grayson said. \n\n\"Oh, and will you please call me Spencer?\" she said politely to Ted who winked and assured her he would.\n\nAfter just a few steps, Grayson glanced over at her and said, \"So...I've done quite a few shipwreck dives. Anything in particular you're interested in?\"\n\n\"Ha! 'Is there anything I'm not interested in' would be the easier question,\" she told him truthfully. \"Have you dived for buried treasure?\"\n\n\"As a matter fact, I have,\" he said as he opened the door into the shop for her. \"Quite a few times, at that. But that was my late father's forte.\"\n\n\"Okay. I'm hooked. Share away!\" Spencer said.\n\nGrayson had just gotten started when they both saw Tonia standing outside.\n\n\"May I help you with something?\" Grayson asked as they approached her.\n\n\"I just thought you should know that...ho' who's hitting on you is married. That's all,\" Tonia said to Grayson while still boring holes into Spencer.\n\nHe looked down at Tonia's bare left hand and said, \"But you're single and available?\"\n\nHer face brightened as flashed her bare left hand and said, \"I'm very single and very available!\"\n\n\"I see,\" Grayson replied. \"And are you enjoying my class?\"\n\n\"Oh, enormously!\" she said all smiles and glitter. She gave his hard body a once over and said wickedly, \"What's not to like, if you catch my drift.\"\n\n\"Good. I'm glad to hear that. You should know that whoever you're diving with has to be able to trust you completely and honesty is an integral part of being able to be trusted,\" he told her. \"I'd never dive with anyone I couldn't trust.\"\n\nTonia laughed nervously then said, \"Oh, right. Of course. Neither would I!\"\n\n\"Well, have a nice night,\" he said as he gently touched Spencer's elbow to let her know they could move on.\n\n\"I'm right over there,\" she said as she hit a button on her fob that caused her taillights to blink and the horn to beep. \"Oh, nice job with you know who.\"\n\n\"Speaking of nice...\" Grayson said ignoring her compliment. \"You drive a Land Rover?\"\n\n\"It's my only indulgence that doesn't involve lessons or trips,\" she told him. \"I prefer spending my money on things I can do rather than on things I can look at. But a really nice all-terrain kind of vehicle? Now that's a horse of a different color!\"\n\nHe took a look around and said, \"Oh, yeah. I could see myself in one of these.\"\n\n\"I suppose I could have settled for a Jeep, but I drive the heck out of it going places I want to make sure I can get out of so I splurged a little.\"\n\nGrayson laughed then said, \"A woman after my own heart.\"\n\n\"Um...that would be the other woman you just shot down in flames who's after your heart and um...every other part of you, if you get my drift. And very nicely done, by the way,\" Spencer told him again.\n\n\"Do you think she knows I know?\" he asked as he opened her car door.\n\n\"Oh, she knows. Trust me. And I'm sure she blames me. If you read about my untimely demise...\" she said. Spencer laughed but Grayson didn't.\n\n\"Please don't talk that way, okay?\" he said rather seriously.\n\n\"I was totally kidding,\" she told him before realizing he'd lost his father that all that long ago.\n\n\"Grayson. Oh, my goodness.Your uncle told me about your father and I...I can't believe I forgot. Me of all people. I hope I didn't offend you or...or hurt you.\"\n\n\"No. Not at all,\" he told her. \"It's just that after losing Dad, I find it hard to think about losing anyone I care about. That's all. You certainly didn't offend me.\"\n\n\"Losing someone you dearly love is awful, isn't it?\" she told him not really noticing the line that seemed to imply he cared for her.\n\n\"It is,\" he agreed. \"I honestly had no idea what it was like before my father died. I mean, I'd always tell people something like, 'Sorry for your loss' but I couldn't understand what the big deal was, you know? People die all the time, right?\"\n\n\"Unfortunately, I do know. Once it happens to you personally, you develop a sense of empathy. You don't just sympathize with them, you can feel with them.\"\n\n\"You're absolutely right, Spencer. I couldn't agree with you more.\"\n\nHe helped her in then said, \"Sorry I didn't get a chance to tell you about my treasure hunting experiences, but there's always next time, right?\"\n\nSpencer laughed and said, \"We got so sidetracked with your...stalker...and with our losses that we forgot all about your treasure hunting adventures.\"\n\n\"I suppose it's a good thing. My Uncle Ted is right. I don't normally have much to say, but if you get me going on a dive or a trip...watch out.\"\n\n\"As I said, time is the one thing I have plenty of so if you ever do feel like sharing your stories, I'd love to hear them.\"\n\n\"Okay, I could do that. But...would you be willing to share yours with me?\" he asked again with raised eyebrows.\n\n\"You know what? I would. I'm still kinda-sorta new to the area and I haven't made a lot of friends yet. If you ever want to get together and swap 'war stories', I'm game.\"\n\n\"Same here. Sunday is normally the only day I have off, but I know a place that serves a pretty mean brunch,\" he said. \n\nHe noticed the look on her face then quickly said, \"I wasn't...I didn't mean...that wasn't an invitation for you know, a...a date or anything. I just didn't know where else...\"\n\nSpencer laughed as he stumbled around trying to explain. \n\n\"No. No problem. And that sounds...nice. Okay. Sure. What time and where?\" she asked.\n\n\"Gee, I haven't been there for a couple of years, but my dad had a membership. It's...it's a country club,\" Grayson said wincing a little bit. \n\nGrayson stopped then said sarcastically, \"Gee, that didn't sound pretentious, did it?\"\n\nSpencer laughed a genuine laugh and said, \"You don't strike me as the country-club type, Grayson.\"\n\n\"I'm not. Trust me. I...I guess I just wanted to make a good first impression on you. Now that I've blown it right out my a...\"\n\nSpencer laughed again when he realized he was about to something he thought was too crass for her delicate ears and stopped.\n\n\"I was married to a Marine and I've pretty much heard it all, Grayson, so there's no need to worry about saying something that might offend me.\"\n\nBeing summer, the sun was still out and it was shining right into Grayson's eyes so he was squinting and scrunching up his face. He put his right hand up to use as a visor and when Spencer's face came into view he said without thinking, \"Wow. You're really pretty.\" \n\nJust as quickly, he added in an effort to cover it up, \"Amazing. You're pretty...amazing, Spencer.\"\n\nFor the briefest of moments she felt some sort of odd, inexplicable connection with this boy\u2014this...young man\u2014who had experienced so much in such a short time.\n\nShe shook off the feeling and dismissed it by saying, \"I'm hardly amazing. I just want to experience as much as I can, you know? Life really is short and it can be over in the blink of an eye. Experiences stay with us wherever we go or whatever we do and in my opinion, they enrich us. Stuff doesn't. So I'll take a climb or a dive over new furniture or a fancy dress any day.\"\n\n\"I agree and I disagree,\" Grayson said as she closed the door then rolled down the window before starting the Land Rover.\n\n\"Oh? How so?\" she asked.\n\n\"I agree on the value of life experiences over material things,\" he said.\n\n\"But?\" she asked with a smile knowing one was coming.\n\n\"But I disagree\u2014completely\u2014that you aren't amazing.\"\n\nHe smiled at her as he squinted and there was that feeling again. That...sense of connection.\n\n\"Did you want to say something else?\" she heard him ask as she realized she'd been sitting there staring at him.\n\n\"Oh. Um...no. I was just thinking, that's all.\"\n\n\"Hey, before you get away,\" Grayson said. \"Can I possibly get your phone number so I can send you the time and place?\"\n\n\"To the...Country Club?\" she said in her best snooty British accent.\n\n\"It's clear up in Seattle so I'm thinking pretty seriously about maybe just going to the Waffle House,\" he told her as he handed her his phone.\n\nSpencer laughed and as she entered her number, she said, \"The last time I gave a guy my number he had to write it down on a piece of paper. It's been a while.\"\n\nShe handed him back his phone and Grayson asked with a straight face, \"How long did it take for the guy to chisel out the numbers in his stone tablet back then?\"\n\nSpencer narrowed her eyes and made a 'grrrr' noise and said, \"Ohhh! Watch it, buster.\"\n\nGrayson put his hands up and said, \"I'm not gonna mess with a Jiu-Jitsu expert.\"\n\nHe made some karate moves causing Spencer to laugh and say, \"You know that's not Jiu-Jitsu, right?\"\n\n\"I do,\" he said quietly as he shaded his eyes again. He wasn't going to tell her he was getting close to testing for his 2nd degree blackbelt in TaeKwonDo.\n\nShe dropped the Rover into gear and said, \"I really enjoyed talking with you, Grayson. Oh, and the lesson, too.\"\n\n\"Same here,\" he told her. \"So...I'll text you.\"\n\n\"Okay. And I'm just fine with the Waffle House,\" she said with a smile.\n\n\"I believe you,\" he told her.\n\n\"I'm honest if nothing else,\" she quipped.\n\nGrayson smiled and told her, \"I know we just met, but I can already tell you're a whole lot more than just honest. I'd say...amazing.\"\n\nShe laughed playfully in a way that was more a giggle than a laugh without realizing she'd done it then said, \"Bye, Grayson!\" before driving off.",
        "He waved to her then stood there and watched her until she left the parking lot then waved again when she drove passed from his left to his right.\n\n\"Wow. That woman is amazing,\" Grayson said to himself as he turned around and headed back inside. \"And hot as hell.\"\n\n\"Uncle Ted? Do we still have that country club membership up in Seattle?\" he asked as they closed up for the night.\n\n\"Sure do. The owner was downright grateful after what your dad did for him. It's a lifetime membership. Why?\"\n\n\"Just thinking,\" he told him. \"Hey, you're not really gonna pack it in are you?\"\n\n\"I honestly don't know, Gray. This just isn't fun for me anymore, you know?\"\n\n\"Yes, I do. It's not the same without Dad around here. But I really wish you'd stay on.\"\n\n\"No worries, son. I won't leave you in the lurch. I'll stick around until you feel comfortable running this place without me. Heck, I'll even stay and train my replacement. How's that?\"\n\n\"Can't ask for more than that,\" Grayson said sullenly. \"You know, with you and Dad gone, though, what'd be the sense of keeping this place open?\"\n\nTed put his arm around his nephew's shoulder and said, \"This was your father's dream, Gray. This shop epitomizes his life, and diving was his life. Well, a big part of it anyway. You and your mom were the most important things, but adventure was his drug of choice. You're an addict, too, you know. It's in your blood. By keeping this place open, your dad's memory lives on. Besides, what in the world would you do without the shop? We make a pretty decent living here and and even more importantly, you get paid for doing what you love. A lot of men would give their right arm to have a job they loved going to each morning. Think about it. Can you imagine wearing a shirt and tie to work five days a week or haulin' around a bunch of tools from house to house? I'm almost 60 and it's different for me. But you've got your whole life ahead of you and this place is the springboard for everything from money to job satisfaction to making diving connections to finding the future Mrs. Clark. That's the sense.\"\n\nGrayson turned to his uncle and said, \"For some strange reason, you always remind me of Dad.\"\n\nTed laughed and said, \"Huh. Funny how that works, isn't it?\"\n\n\"Do you have the number to the club on you?\" Grayson asked before heading toward his own car.\n\n\"Yep. Haven't called it in quite a while, but it's the owner's personal number. Just tell him your Ernie's son and you'll have a table anytime, day or night.\"\n\nGrayson put the number is his phone then smiled when he saw Spencer's.\n\n\"Thanks, Uncle Ted. For everything.\"\n\n\"Anytime. That's what family is for, Gray. You take care and I'll see you tomorrow,\" Ted said as he got into his Chevy Silverado and fired it up.\n\nGrayson fired up the Bluetooth in his car then said, \"Dial 360-825-4091.\"\n\n\"Martin Weston speaking,\" he heard.\n\n\"Mr. Weston. This is Ernie Clark's son, Grayson. I was wondering if I could get a table for two Sunday morning for brunch.\"\n\nAfter an immediate 'yes' Mr. Weston spent a few minutes letting Grayson know how much his father\u2014and his generous gift\u2014had meant to him and let the younger Clark know he could call him anytime, just as his Uncle Ted had assured him.\n\nGrayson wasn't really much of a spiritual person, but he smiled and looked up to the heavens as he thought, \"That's Dad. Still looking out for me even when he's no longer here.\"\n\nHe hadn't even set his phone down when he typed out:\n\n\"The Country Club (I can't do the British accent thing so yes, I will keep my day job) is all set. So unless your heart is set on the Waffle House, we can have a champagne brunch while I bore you to death with my adventures. Okay, you can have champagne. I don't think they'd serve me. Hey, I heard that. No age jokes! You're more than welcome to meet me there, but since it's quite a drive, I want to at least offer to take you. Besides, that'll give me more time to talk and you more time to catch up on your sleep once you hear me droning on and on! Just let me know. And I have to admit, I'm really looking forward to this, Spencer. Gray.\"\n\nSpencer was a little surprised to hear from him so soon, but she smiled and even laughed when she read his text then replied:\n\n\"You made me laugh, but yes, do keep your day job! Normally I'd never agree to ride with someone I just met, but you don't strike me as a serial killer or a stalker so...I think I'll take you up on your offer. I have to ask, though, what does one wear to a country club? I'm not afraid to dress up, I just prefer shorts and a tee-shirt. What can I say? I'm not the glamorous type. I'm a 'what you see is what you get' kind of girl. Anyway, yes, you can pick me up, and I'll also admit I'm really looking forward to this, too. Spencer.\"\n\nShe added her address then hit 'send.'\n\nMinutes later she was smiling again when she got a quick reply.\n\n\"Remember, honesty is the key to trustworthiness! I've seen you in a bathing suit so don't try and tell me you're not glamorous. I'm not blind, you know. :-) Oh, and thanks for the high praise. It's good to know I've risen all the way to 'not a serial killer or a stalker' in your eyes. (I'd say something about how glamorous your eyes are, but then you might start thinking I am a stalker.) It takes about an hour to get there because of traffic in the city so if 9 o'clock is okay, I'll pick you up then. And while I like shorts and tee-shirts, they do have a 'no shorts/no jeans/no tee-shirts' policy. Snooty, right? Pretty much anything else is okay so wear whatever you like. Other than that it really is a nice place, and you'll love the owner. See you then. Gray.\"\n\nMore smiles from Spencer and a quick follow-up reply:\n\n\"You've earned the high praise, so you're welcome! No jeans, huh? Gee, I do have a nice dress but haven't worn it yet (or any dress for that matter) in...never mind. I do have a pair of decent pants so...we'll see. And yes, 9 o'clock is fine. And as to my 'glamorous' eyes, maybe you should get yours checked or wear your glasses on Sunday. ;-) See you then, Grayson. Or do you prefer Gray? Spencer.\"\n\nGrayson also smiled then wrote:\n\n\"Everyone but my mom calls me Gray, but I kind of like it when you call me Grayson so I'll leave that up to you. And I see quite well, thank you. In fact, I have 20/15 vision, and I stand by my comments. Gray(son?)\"\n\nSpencer knew he was being friendly rather than flirting, but even so, it felt nice to have someone to talk to. She had such a difficult time making friends with other women because, unless they enjoyed sports and outdoor activities, she had very little in common with them. Men were easier to talk to and a lot more fun to be around even if it was just hiking or rock climbing or anything else she enjoyed doing. \n\nGrayson wasn't a potential boyfriend, but she enjoyed his company enough that she felt comfortable thinking of him as boy who was her friend. Then again, she'd never seen a boy who looked or talked or who'd done all the things this boy had done. Regardless, it was a moot point. This was nothing more than an opportunity to learn more about diving in general and hear about the kinds of things she could look forward to doing once she got her open-water certification. \n\nThere were more levels after that, but she had to go through the process one step at a time. This introductory course combined two certifications into one (PADI scuba diver and open-water diver). She could then work on becoming a Divemaster who could lead groups of other divers and eventually learn to dive using mixed gasses later on down the road\u2014all things on her diving 'to-do' list. \n\n\"My bucket list,\" she said out loud with a laugh.\n\nSpencer was up at 6:30 Sunday morning and had a cup of coffee while she watched the morning news. She rarely turned it on anymore because everything depressed her from the Middle East to North Korea to the national debt of TWENTY TRILLION DOLLARS to the way jobs had been flowing overseas for decades. And when she saw military flying squadrons scrounging for spare parts in museums just to keep their planes flying she wanted to scream! \n\nAnd then there were gangs like MS-13, a heroin-addiction epidemic, endless murders in cities like Chicago, and ISIS had grown and spread its tentacles across the Middle East, and yes, there were those champions of justice for women\u2014the Taliban. \n\nShe turned of the TV and decided to shower and get ready. Showering was the easy part. Deciding what to wear wasn't. Country club or not, she ruled out a dress immediately then started leafing through hangers of stuff. Seattle didn't really ever get hot other than maybe a week or two in August and even then the mornings were almost always very comfortable or even cool.\n\nShe finally settled on a pair of khaki-colored Capri pants and a pale yellow, sleeveless knit top. After drying her hair, Spencer pulled it back into a ponytail then decided she could stand to wear a pair of earrings and maybe even a thin necklace. Gold was the obvious choice with the colors she was wearing, and a quick look seemed to indicate everything was just fine.\n\nThen again, a second look told her that because it was a nicer place, maybe a tiny bit eye shadow and some mascara wouldn't hurt, but there was no way she was wearing blush or lipstick. A third look said she still looked a bit pale so maybe a touch of color on the apples of her cheeks would be okay and she did have a tube of wet lip gloss that was a kind of 'sand' shade that wouldn't be as obtrusive as say, a deep red, so...why not?\n\n\"Much better!\" she said out loud when she was finished. \n\nNo, she wasn't 21 anymore, but she had to admit she still looked pretty good when she tried. She laid a cardigan on top of her purse and sat down to go over the materials for the next class before Gray(son?) arrived. \n\nSpencer was so into the handout she lost track of time, and when the doorbell rang, it startled her. She sat the packet down, got up, smoothed the front of her top and pants, and went to the door.\n\nShe was smiling brightly when she opened it then stopped smiling when she saw him. It wasn't just what he was wearing, although that was very nice. It was more...everything.\n\n\"Um...good morning?\" Grayson said as Spencer stood there speechless.\n\n\"Oh. Sorry. Yes, good morning, and please come in,\" she said still unable to process the difference in the way he looked.\n\nHe'd looked...very nice in his swimming trunks and flip flops with his dry hair sort of combed, but Spencer wasn't ready for...this. Grayson was wearing a pair of black pants, a dark-gray, long-sleeved, button-down shirt, and a very nice pair of black shoes that matched an equally nice black, leather belt. His hair was...wow! It had some product in it, but it was the way it was so very nicely styled that said, 'mature, sophisticated, and...wow.'\n\n\"Normally, a woman would say something like 'thank-you',\" she heard Grayson saying. She'd been staring to the point of gawking and hadn't heard him tell how nice she looked.\n\n\"Oh. Sorry! Um...thank you, Gray\u2014son?\" she said with a smile. \"I see you didn't wear your glasses like I suggested.\"\n\nHe smiled back and said, \"I really don't need glasses and you really do look amazing, Spencer.\"\n\n\"I uh...I was going to say something similar about you. I can't believe the difference. I mean...\" \n\nShe gave him another 'once over' then said, \"Wow!\"\n\n\"Maybe I should have worn a dress,\" she said suddenly feeling a little self-conscious.\n\n\"No way. Trust me on this. You look...did I already use the word 'amazing'?\" he said his dimples showing as he smiled.\n\n\"Maybe, but at my age, it's kind of nice to hear it once in a while so...feel free to say it as often as you like,\" she said only partly teasing. \"No offense, but your uncle said you looked more like 25 than 19, and I have to agree. Did I say 'wow' already?\"\n\nGrayson laughed then told her they should probably get going.\n\n\"As much as I'm enjoying our little mutual admiration society, traffic can be awful even on Sunday morning.\"\n\nSpencer grabbed her purse and sweater then said, \"I thought Southern California was the worst traffic I'd ever seen, but Seattle is just as insane. Is it ever not wall-to-wall and bumper-to-bumper?\"\n\n\"Um, sure. From around 10pm until 5am. Oh, and until around 9am on Sundays so...\"\n\nSpencer sat enthralled and oblivious to the heavy traffic as Grayson just scratched the surface of his first shipwreck diving trip to Hawaii before they arrived. \n\nHe began by telling her, \"There are several sunken ships around Oahu so you can hit quite a few in a week. We started with a submarine\u2014the USS YO-257 because it's entry and exits are all nice and clean. It's an easy first dive and I gotta tell you, I was hooked after that.\"\n\n\"I bet!\" Spencer said feeling a bit envious.\n\n\"There's also an F4U-Corsair near the island that's in amazingly pristine condition for the amount of time it's been underwater. We saved the Carthaginian II for last. That was just incredible!\"\n\nHe'd barely had time to get into the details of the submarine dive when they pulled up to the country club. A valet opened Spencer's door, took Grayson's keys, and handed him a ticket.\n\n\"Wow! This place is...swanky!\" Spencer said. \"Now I'm wishing I had worn a dress.\"\n\n\"You'll be just fine. I promise,\" he assured her as they headed in. \n\nHe offered her his arm and said, \"Shall we?\"\n\n\"Oh. Yes. Thank you,\" she said hooking her arm in his.\n\nShe felt sick to her stomach when an older couple passed them on their way out. He was in a dark suit and blue tie while she was in a semi-formal dress.\n\n\"I can't go in there looking like this, Grayson. I'm not big on formality, but this is...crazy!\"\n\n\"Oh, really?\" he said as a younger couple came out dressed more like them.\n\n\"Whew. Okay. Maybe I should learn to trust you, huh?\" she said now feeling much more comfortable.\n\n\"Hey, if we're gonna dive together you'll have to trust me, right?\"\n\n\"Are you saying we're going to be diving together?\" she asked playfully.\n\n\"Well, in class for sure, and if I'm lucky, then maybe after that, too. Who knows what the future might bring, right?\" he said smiling as he looked over at her.\n\n\"Mr. Clark!\" a man of about 70 said as soon as they stepped inside. \"It's so good to see you and at the risk of embarrassing you, the last time that happened you were\u2014well, not such a fully-grown, dashing young man.\"\n\nGrayson shook the man's hand heartily and said, \"Mr. Weston, it's good to see you again, sir.\"\n\n\"Oh, stop with the 'sir' business, Grayson. Please call me Martin. And please introduce me to this beautiful young woman on your arm.\"\n\nMartin Weston was tall and thin with thinning gray hair and a pencil mustache that was also very thin and not at all flattering. Spencer couldn't help but notice he was impeccably dressed and very friendly.\n\n\"This is Spencer Monroe. Spencer, this is Mr. Martin Weston, one of my father's closest friends.\"\n\nHe bowed slightly then said, \"It is such a pleasure to meet you, Ms. Monroe. We are honored to have you.\"\n\n\"Thank you, and it's an honor to be here,\" she said with conviction. \"This place is...gorgeous!\"\n\n\"It's been a fixture in this area for nearly 75 years. We take great pride in it and I do hope you'll enjoy your visit with us.\"\n\nHe turned to Grayson then said, \"I'll personally show you to your table. If you'll follow me, please?\"\n\n\"So what's the connection?\" Spencer asked quietly. Evidently, it wasn't quiet enough.\n\n\"This young man's father saved my business five years ago,\" Martin, who'd heard her question, explained, which really explained nothing.\n\nAs they sat down, Grayson said, \"Ten years ago, my father was a rather...um...avid treasure hunter. He'd spent pretty much every dollar we had looking for the fortune he just knew was at the bottom of the next dive. My mom told him, 'Not another dime or I'm taking our son and you can spend whatever you want of your half.' Which would have been right around nothing. In desperate need of financial support, Dad began a crusade to find donors. Martin believed in him. He fronted my dad over $50,000 with the caveat he pay him back with interest should he ever find any gold or silver or...\"\n\n\"And just as I suspected, Ernest did indeed strike gold,\" Martin said as he took over. \"Gold and silver and a lot of it.\"\n\n\"So...he paid you back?\" Spencer asked not sure how paying back a loan was cause for great loyalty or how it saved the country club.\n\n\"Yes, but then when the club fell on desperately hard times and was on the verge of bankruptcy, I was the one going hat in hand, as it were, looking for financial backing. Grayson's father provided it in a way I can only describe as life saving. We survived the economic downturn and are doing as well as we ever have. Without Ernest's help, well, I have no idea where I might be and this place might well be a WalMart or a Home Depot\u2014God forbid.\"\n\n\"Sounds storybook, but it's the gospel truth. You do trust me, right?\" Grayson said with a smile.\n\nSpencer looked at Martin then back at Grayson before saying, \"It's too incredible not to be true. Besides, if we are going to dive together, I'd better trust you, right?\"\n\n\"She's warming up to me, Martin. I can feel it!\" he said without taking his eyes off the beautiful woman sitting next to him.\n\nMartin smiled politely then asked what he could get them.\n\n\"They say real men don't eat quiche and other than here, I don't. But their's is so unbelievably good, it's a mortal sin not to try it,\" Grayson told Spencer.\n\n\"Okay. I...trust you,\" she said with a smile. \"Quiche it is.\"\n\n\"Excellent choice, Ms. Monroe. As is the company you keep,\" Martin said before bowing slightly again and leaving them alone.\n\n\"That was fascinating,\" Spencer said. \"You know I want to hear all about this dive and the treasure, right?\"\n\n\"It was one of the dives I didn't make. I was too young to dive that deep and there was school, so I didn't even get to tag along. But I heard my dad tell it enough times I can recite it by heart. Or you could come over and watch him tell it on DVD\u2014complete with actual footage of the dive, the discovery, and the salvage operation.\"\n\n\"You're kidding!\" Spencer said now too excited to eat. \"Just say when and I am so there!\"\n\n\"How about this evening? I'd invite you for dinner, but you're probably getting sick of me by now,\" Grayson said flashing that smile at her.\n\n\"Um, I could possibly stand being around you a few more hours. Just don't push it, okay?\" she said trying to sound tough but unable to avoid smiling.\n\nGrayson shared as many of his own stories as he could during brunch and on the way back. Spencer had to admit he'd been so right about the food. It was by far the best she'd ever had, but it paled in comparison with the tales of adventure this...this very unique and interesting young man shared with her. If she could see just 10% of the things he'd seen underwater, she'd be a very happy camper or...diver.\n\nSpencer had insisted on driving herself and showed up right at 7 o'clock for dinner.\n\nGrayson's mother, Elizabeth, was expecting her, and Spencer wasn't surprised to see she was still a very attractive woman herself. She guessed her to be about 50, and between Elizabeth and his Uncle Ted, understood why Grayson was so attractive.\n\n\"Come in, dear!\" she said. \"It's such a pleasure to meet you. Grayson hasn't stopped talking about you since he got home and if you knew my son, that would shock you. He rarely says two words all day.\"\n\n\"Speak of the devil,\" Elizabeth said as Grayson came downstairs to meet them.\n\n\"And he shall appear, right?\" he said. \"And may I say you still look...amazing?\"\n\n\"Thank you\u2014again. And yes, you may,\" Spencer told him with a pretty smile.\n\n\"Grayson told me you were a beautiful girl, but his description didn't do you justice,\" Elizabeth told her.",
        "\"Well, since we're being honest, I can tell where your son gets his good looks,\" Spencer told her.\n\nElizabeth smiled and said, \"Well, thank you, dear, but most of the credit goes to his father. That man was a little on the crazy side, but he was the most gorgeous man I ever knew.\"\n\n\"In fact...\" she said.\n\nThere was a family picture close by and Spencer immediately understood. \n\n\"I used to call Ernest my Robert Redford,\" she said comparing him to the well-known actor and former Hollywood hunk many older women still found attractive.\n\nShe leaned over and said, \"But honestly? Ernest was the better looking of the two.\"\n\nSpencer laughed along with her then said as she looked at her late husband in the photo, \"I won't argue with you. He was a very handsome man.\"\n\n\"How's dinner coming, Mom? Can I give you a hand?\" Grayson said trying to move them along.\n\n\"No, thank you, Grayson. And it'll be ready shortly. Perhaps you could offer Spencer a glass of wine or a cocktail or maybe some iced tea?\"\n\n\"Spencer?\" he asked as he led her into the kitchen.\n\nShe heard him, but she couldn't stop looking at their home, as it was truly incredible and so out of place for a such a small town. Spencer still had an eye for details even though things no longer impressed her. Everywhere she turned, there was some very expensive, high-end furnishing. It wasn't lavishly ornate, but it was a very tastefully done home where no expense had been spared.\n\n\"Just iced tea, please,\" she finally told him. \"I don't much care for alcohol. I'll take jumping out of a perfectly good airplane as my kind of high anytime.\"\n\nGrayson stopped and stared at her and said, \"Okay, okay. I already like you. You don't have to keep sucking up.\"\n\nSpencer realized after the fact she'd done the giggling thing again and didn't care as she also realized she was enjoying herself more than she could remember since Jeff was alive.\n\nHe handed her the iced tea and said, \"I don't drink, either, and not just because I'm under 21.\" \n\nHe smiled and told her, \"I don't like anything that dulls the senses when life has so many incredible things to offer to stimulate them. And then there are the things that are truly beautiful and...amazing.\"\n\n\"Okay, enough with the 'amazing' comments, okay,\" she said pretending to be put out. \"Besides, I already like you, too, so...quit sucking up.\"\n\nBoth of them laughed and when Elizabeth heard it she came into the kitchen and said, \"My, my. I haven't heard Grayson laugh like that in, well, let me see...\"\n\n\"It's okay, Mom. You can say it was back before Dad died. And I laugh. And smile. And joke around. Occasionally.\"\n\n\"Yes, I know, dear. But it's not the same. This is the first time I've seen you...having fun...since your father passed away. It's just so nice to see and hear. I am allowed to worry about you, you know,\" Elizabeth said.\n\nGrayson winced for Spencer's benefit who said, \"I understand. I'm thirty-um...over thirty and my mom still reminds me I'm her baby girl.\"\n\n\"Ah! You see, Grayson. This charming young woman 'gets it'!\"\n\nShe turned to Spencer and said, \"Thank you, dear.\"\n\n\"Yes, thank you...dear,\" Grayson said to Spencer with a heavy, sarcastic edge to the word 'dear'.\n\n\"I think someone is trying to make an impression on someone else,\" Elizabeth said as she kind of leaned over toward Spencer.\n\nGrayson then leaned toward Spencer and while looking at his mother said, \"It's not easy when your own mother keeps sabotaging you at every turn.\"\n\n\"I'm doing no such thing!\" she said in a faux haughty voice. \"I guess I'll get dinner ready since I'm clearly not wanted here.\"\n\n\"My mother the martyr!\" Grayson said as she walked away.\n\n\"I like her,\" Spencer said in her defense.\n\n\"Yeah, I'm kinda fond of her, too. Just don't tell her I said that.\"\n\n\"No need, dear. I hear quite well. And I love you, too.\"\n\nSpencer laughed before Grayson continued sharing Clark-family adventures during dinner, and the more Spencer heard, the more she looked forward to diving in something deeper than a pool.\n\nAgainst Elizabeth's strong protestations, Spencer helped her clear the table while Grayson loaded the dishwasher.\n\n\"He's always been such a good boy,\" his mother said further embarrassing him. \"I suppose that's why he's constantly surrounded by beautiful women. Smart, handsome, polite and...\"\n\n\"Mom? Could you please stop...helping so much?\" he said as though this wasn't some new thing.\n\n\"I'm only being honest, Grayson. Honesty is the key to trust, you know.\"\n\n\"Hmmm. Where have I been hearing that the last few days?\" Spencer asked as Grayson turned on the dishwasher.\n\n\"His father beat that into his head for as long as I can remember,\" Elizabeth said. \"It's just as true today as it ever was. Perhaps if our elected officials learned that valuable lesson, we wouldn't be in the mess we're in today.\"\n\n\"Now I like her even more,\" Spencer said cheerfully to Grayson.\n\n\"Come on. I'll show you my office which was my dad's and from there we can watch the DVD. Mom? Are you gonna join us?\"\n\n\"No, I don't think so. You know I get emotional every time I see your father. I love hearing his voice, but it just reminds me of how much I miss him.\"\n\nShe turned to Spencer and said, \"I understand you know all too well what I'm talking about, dear.\"\n\n\"Unfortunately, I do,\" Spencer told her. \"I understand completely, although I would very much enjoy your company.\"\n\nShe glanced at Grayson, smiled, then said, \"Not that I don't trust him, of course.\"\n\n\"We'll be in the den if you change your mind, Mom,\" Grayson let her know to which she again reiterated her reasons for not wanting to watch.\n\n\"Your mom really misses your dad,\" Spencer said.\n\n\"Yes, she does. In spite of all of his eccentricities, she was very much in love with him and he was crazy about her. I thought she might die when he did,\" Grayson told her as he led her back to the large, cozy den.\n\n\"I know a little something about that, too,\" Spencer said in a way that didn't evoke pity. \u2028\"I really don't know which is worse. Losing your spouse before you have a lot of time together leaving you to wonder what might have been or after you've had some relatively long amount of time with each other knowing it's over.\"\n\n\"It seems to me what matters most is how much you loved them. If my parents had drifted apart and lost that 'spark' maybe it wouldn't have been as traumatic. Or if, God forbid, one of them had cheated. But they stayed together and were still very much in love.\"\n\n\"Your Uncle Ted said you looked more 25 than 19. The way you view the world says you're closer to well...let's just say...older than that.\"\n\n\"Like love, age can matter or not matter. Two people can be the same age and have nothing in common or be separated by some relatively large number of years and have nearly everything in common. Love can be fresh and new every day or grow stale and have little impact on a relationship. It just depends.\"\n\n\"That would be tragic,\" Spencer said. \"My husband and I loved each other with a white-hot passion. I can't even imagine just co-existing with someone I claim to love. I'd rather live alone than live like that.\"\n\n\"For what it's worth, I couldn't agree more. When I finally settle down, I don't just want a wife. I want a dive buddy, a climbing companion, someone who'll hold my hand on the way out of an airplane, and most importantly a best friend.\"\n\nGrayson smiled then laughed as he said, \"Okay, I want a lover, too, but you know what I mean.\"\n\nSpencer unashamedly 'giggled' again then told him she knew exactly what he meant and also said, \"And I couldn't agree more with everything you just said.\"\n\n\"I forgot to mention what may be the most important thing.\"\n\n\"Oh?\" Spencer said wondering what he might say to cause her to disagree with him.\n\n\"I want to have children with her, too.\"\n\nSpencer was touched to the point of choking up but managed to hold it together.\n\n\"In spite of knowing how hard it would be to grow up without a father, the only thing I regret is not having a baby with Jeff. But we were young and had our entire lives ahead of us, you know?\" \n\nShe paused then said, \"But how could we know, right?\"\n\n\"My dad used to say, 'There's never a right time to have kids so if you want them just have them.' Otherwise you'll never have enough money or a nice enough home or whatever. In other words, you'll always find an excuse to wait. And to me, I see no reason to get married unless you want to have kids. I mean, maybe a year or two, but why get married when you could just live together unless you want children? Tax breaks? Come on!\"\n\n\"What about the religious aspect?\" Spencer asked.\n\n\"Oh, sure. If someone believes sex outside of marriage is sinful or morally wrong, then yes, that makes sense. I hope I don't offend you, but I think that's a very outdated way to look at something so purely natural and important to human survival.\"\n\n\"Me? Offended by that? No, not at all. I'm not one to think there's a 'Scorekeeper' somewhere taking notes on whether we've been good or bad with certain kinds of sex going in the 'bad' category.\"\n\n\"As in...naughty or nice?\" he said as he found the DVD.\n\n\"Right! So be good for goodness sake or you'll get a lump of coal!\" Spencer said as they both laughed.\n\nGrayson grabbed the DVD, popped it into the Blu-Ray player, then invited Spencer to join him on a very rich-looking leather couch.\n\nShe sat on the opposite side leaving a good three feet of space between them and waited for it to start.\n\n\"Just remember I told you my dad was a bit eccentric, okay?\" Grayson warned.\n\nBefore Spencer could even say, \"Okay,\" something startled her to the point where she screamed and quite literally jumped out of her seat.\n\n\"Oh, my God!!\" she said after screaming and coming to rest in the middle of the couch.\n\nGrayson's dad's face was filling the entire camera frame and his left eye was covered with a patch. The first thing she'd seen was a hook lashing out and 'coming right at her' before Ernest said, \"Aye, matey! We're a goin' treasure hunting!\"\n\nGrayson was laughing so hard he couldn't stop\n\n\"NOT funny!\" Spencer said pushing his muscular frame over the arm of the sofa.\n\n\"Sorry! If you could've seen yourself! You flew out of your seat while you were...\"\n\n\"Is everything...\" they heard Elizabeth say. She looked up and saw her husband in his pirate garb and said, \"Okay, that explains it. What a ham!\"\n\nShe slid around the back and took the place where Spencer had been setting. \n\n\"Do you mind?\" she asked.\n\n\"No, of course not,\" Spencer said. \"I just wasn't ready for a slasher movie.\"\n\n\"I told you my dad was eccentric,\" Grayson reminded her.\n\n\"You didn't warn her about the hook? Grayson! That was just...mean!\"\n\n\"Sorry, Mom,\" he said.\n\n\"Don't apologize to me!\" she said looking passed Spencer.\n\n\"I really am sorry, Spencer,\" he said seriously before adding, \"NOT!\" and laughing again so hard his mom started laughing and after another shove that didn't even budge him, Spencer found herself unable not to join in.\n\n\"My mascara is gonna be a mess!\" she said as she tried to use her finger. \"I haven't laughed like that in forever!\"\n\n\"Me, either,\" Elizabeth said. \"But when Grayson gets going, I can't help it. It's...infectious! And it's been...forever since I heard him laugh like that.\"\n\nSpencer was still chuckling and gave Grayson another shove with her shoulder and said, \"Jerk!\"\n\n\"Jerk? What do you mean, 'jerk'? It was all part of my master plan!\" he said very seriously.\n\n\"Oh, brother. I'm afraid to even ask, but I'll bite. What master plan?\"\n\n\"Well, you are sitting next to me now, right?\" he said very innocently. \"So...I'd say it worked pretty well.\"\n\nSpencer looked over at him and saw him start laughing again so she gave him one more shot and said again, \"Jerk!\"\n\n\"Give him one for me, too, dear. That was pretty 'jerky' of him.\"\n\n\"Ha! Even your mother agrees with me\u2014jerk!\" she said as she gave him one more.\n\n\"Okay, okay! Stop ganging up on me already!\"\n\nHe'd paused the DVD and Elizabeth said, \"On second thought\u2014or would this be on third thought? Either way, I don't think I can watch. It felt so good to laugh I don't want to end up feeling sad, and if I stay that's a given. So...do you mind if I change my mind yet again?\"\n\n\"It's a woman's prerogative, right?\" Spencer said supportively.\n\n\"I believe it is, dear!\" she said as she excused herself after taking one more look at her very handsome late husband.\n\nAfter she left, Grayson explained this home movie was made right after Martin agreed to back his father's latest get-rich-quick scheme. \n\nThe DVD no sooner started playing than Ernest held up a certified check for $50,000.\n\n\"This right here folks, is the ticket to an untold fortune, because this time, we're going to strike it rich! I can feel it in me bones!\" he said making more pirate noises.\n\nFor the next hour, she watched as his crew prepared the boat then made it's way to a location about five miles off of a Caribbean Island the captain was sure was the place his lifelong dream would finally come true.\n\nMany crews had searched for a Spanish ship filled with gold and silver, which sank in 1714, but no one had yet found it. Until the crew of the Elizabeth Clark found the items of pottery located together on their third day of diving. It wasn't proof of anything, but finding any manmade artifact was a positive sign.\n\nTwo days and a lot of digging later Spencer watched as the underwater filming revealed what looked like a stereotypical treasure chest which was indeed filled with gold and silver coins. This one chest was less than 10% of the known treasure that had been lost, and was worth just over $7.5 million US.\n\nThey spent two more weeks combing the area for the rest of the treasure but came up empty and returned home hoping to keep their find private.\n\n\"Turns out that's not easy once you try and cash in,\" Grayson said just as she saw a CNN interviewer talking to his late father. There were three other interviews which Grayson assured her were indistinguishable from the first as he turned it off.\n\n\"I can't believe I never heard of this,\" Spencer said once it got quiet again. \"That had to be unbelievably exciting, Grayson!\"\n\n\"My dad was over the moon. He felt vindicated after nearly bankrupting our family and he was in hog heaven making the rounds on the interview circuit. He was able to pay Martin back with interest and then turned the treasure into cold, hard cash. After taxes and paying the crew plus supplies for the boat, he had a little over $2 million left. He and Uncle Ted split that money, paid off the dive shop, and invested the rest. \n\n\"Is it too personal to ask how he...passed away?\" Spencer asked almost sheepishly.\n\n\"No, not at all,\" Grayson told her.\n\n\"He'd just awarded me with my Level 2 Instructor Certification and we were closing up the shop to go celebrate. Uncle Ted offered me a ride after Dad said he'd stay and lock up and be right behind us. We got home and changed and waited for Dad, but he didn't show up. Uncle Ted called the shop then called Dad's phone, but there was no answer.\"\n\n\"Oh, my goodness,\" Spencer said as she waited to hear the worst news anyone can ever hear.\n\n\"We drove back to the shop and Uncle Ted found him. He'd had a brain aneurysm. The doctor who did the autopsy said he died instantly, but how do they really know, right? Anyway, that was it.\"\n\n\"Oh, Grayson. I am so, so sorry,\" Spencer said having turned toward him on the couch. She then remembered what Ted had told her and the connection she'd made finally made sense.\n\n\"Thank you,\" he said soberly. \"Is it okay to ask about your husband?\"\n\n\"Oh. Um...yes. Of course. I did say I'd share my experiences, too, didn't I?\" she said trying to remain upbeat.\n\n\"Yes, but this isn't what you had in mind. If it's too hard then...\"\n\n\"No. I can tell you,\" she said. \"They were passing through a small village when the Taliban ambushed Jeff's platoon. Two of his Marines were injured by an RPG blast and got pinned down under fire in the street. I don't understand it all, but he had his men do some kind of 'cover fire' thing then led three Marines into the street to grab those two wounded guys. They all made it back to the building where they were before they ran out...except for Jeff. He...he was shot here...\"\n\nSpencer pointed to the back of her neck just below where his helmet was and just above what used to be called a flak jacket he was wearing.\n\n\"They told me he died instantly, too,\" she said her words trailing off as she fought back tears.\n\nShe hated that she still got emotional, but she couldn't help it. She managed not to cry, but felt hot tears welling up in her eyes.\n\n\"Sorry. I shouldn't still be crying this many years later,\" she said as she looked down and once again tried to dry her eyes.\n\nGrayson grabbed a tissue from the desk nearby and said, \"May I?\" as he held it out.\n\n\"Am I a mess?\" she asked as she looked up to allow him to get underneath her eyes.\n\n\"No. You're...beautiful,\" Grayson said quietly as he gently wiped away any mascara that had run. \"Okay. All done,\" he said after getting the last bit.\n\nSpencer stood there in front of him looking up into his handsome face feeling very...strange.\n\n\"Thank you,\" she said weakly. \"Next time I'll try and be stronger, when I...\"\n\nHer brain told her Grayson was moving closer and that he was about to kiss her, but her body wouldn't move. Her body not only wouldn't move, it froze. Even when his lips touched hers she still couldn't move. She knew she should, but nothing worked. Nothing except for her lips which softly pressed back against his for perhaps two or maybe three seconds.\n\nWhen Grayson slowly pulled back, he looked into her eyes again and said, \"You really are beautiful and amazing, Spencer.\"\n\nA feeling of panic welled up inside her and her first instinct was to run. But why did she need to run when she realized she could have moved but didn't? In fact, she found herself wanting to kiss him and yet she couldn't. So she stood there staring at him trying to make sense of what had just happened and how she felt about it.\n\n\"Grayson?\" she finally said. \"What just happened?\"\n\n\"All jokes aside, I am rather young, so suppose I could be wrong, but I believe that's called a kiss,\" he said as he gently touched her face.\n\n\"But...why? Why did you...kiss me?\" she said as her eyes searched his for answers.\n\n\"You told me my eyes need to be checked, but I believe it's you who has the problem. Is your hearing okay?\" he said with a smile.\n\n\"I hear just fine,\" she said quietly.\n\n\"I told you twice I think you're beautiful. And after getting to know you a little better, I can tell your beauty goes far beyond skin deep.\"\n\n\"But...well, okay, first of all, thank you, but more importantly, why would you kiss...me? It's not like you don't have girls your age swarming all around you, I'm sure. I mean, you've even got a stalker, for goodness sake. So...why me?\"\n\n\"That's easy,\" he told her still smiling. \"Of all the girls and women I've ever met, I've never met anyone I had so much in common or felt such a connection with.\"\n\nHe ran the back of his fingers along her cheek then said, \"Or been so attracted to.\"\n\nSpencer was aware that her heart was racing. It was pounding in her chest so hard it seemed like she could hear her own blood crashing into her head. Her palms were moist, her mouth was dry, and she was also very aware of a warm kind of wetness in another place.\n\n\"Grayson, I'm almost 31 years old,\" she heard herself saying even though she didn't think she could speak.\n\n\"Congratulations,\" he said with a smile.\n\nWhen his words finally registered and she realized he was telling her he didn't care, she instinctively put on a pouty face and said playfully, \"Jerk!\" \n\nShe went to faux punch him again when he grabbed her tiny wrist and in one smooth movement had it behind her back as her body moved tightly up against his.",
        "\"You should be nicer to me,\" he said politely. \n\n\"Or what?\" she said pretending to be upset with him.\n\n\"Or what? Or...I may not kiss you again. That's what!\" he told her authoritatively.\n\n\"So if I'm nicer to you then you'll...\"\n\n\"Then I'll do this,\" he said as he leaned down and kissed her again.\n\nGrayson let go of her wrist and when he did Spencer pulled it back around to her front then up and around his neck as she kissed him back. His strong, powerful arms held her close as they kissed for several seconds.\n\nWhen it ended Spencer said, \"I've never been teacher's pet before,\" her heart still hammering like never before.\n\n\"There's a first time for everything, right?\" he said.\n\n\"Your...other female student is going to be very unhappy,\" Spencer teased sweetly.\n\n\"I'll risk it,\" Grayson told her.\n\n\"So...now what?\" she asked her arms around his neck.\n\n\"I think you really mean where do we go from here, but...right now...I just want to kiss you again,\" he told her before doing so.\n\n\"I can live with that answer,\" she said just as their lips met again.\n\nAfter this kiss, though, her brain re-engaged.\n\n\"Grayson? I...I really should probably be going,\" she said unable to look at him.\n\n\"I may not be the world's best kisser, but was I that bad?\" he asked.\n\n\"No. In fact, you were well, to use your word...amazing.\"\n\n\"Then what's going on, Spencer?\"\n\n\"You see. That's the problem. I don't know what's going on, and that scares me,\" she told him finally looking into his eyes again. \"I just need to some time to think things through. Is that okay?\" she asked hopefully.\n\n\"Of course it's okay,\" he told her. \"If you need another day or even two...\"\n\n\"Jerk!\" she said unable to keep from smiling. \"Just give me some time, okay? Please?\"\n\n\"Take as much as you need, Spencer. I won't be going anywhere.\"\n\n\"But you should. That's the thing, Grayson. You're so young and so handsome. I know you really do have an endless line of girls to choose from. Why would you throw that all away on...on me?\"\n\nHer voice was imploring; her eyes were probing.\n\n\"If you've ever been out to sea you can't help but notice how you're surrounded by water.\"\n\n\"Um...o-kaaay,\" Spencer said not getting the point.\n\n\"But you soon realize you could die of thirst for want of water even though there's water all around you.\"\n\nSpencer now understood but let him explain.\n\n\"All of those girls you're talking about. They're like the ocean. It's beautiful and alluring but it can't slake your thirst. It can never satisfy you. You drink it at your own peril. But when you go below and see a bottle of cold, fresh, drinkable water, it's more valuable than anything else on earth.\"\n\n\"Are you saying I'm...a bottle of water?\" she asked sweetly knowing the answer.\n\n\"Sometimes two people are brought together for a purpose,\" he said quietly.\n\n\"But doesn't that imply a kind of cosmic 'Matchmaker'?\" she asked.\n\n\"Call it whatever you like, Spencer. All I know is I've never met anyone like you before. I've never felt like this about anyone before. And before you go telling me that's because I haven't had enough time to feel like that, please know that I've had a lifetime of living in just these 19 years. And please don't dismiss me or...us...because of my age.\"\n\nSpencer was now so thoroughly confused she not only couldn't speak, she couldn't think.\n\n\"I...I need to go now,\" she said her stomach churning and her head spinning. \"Thank you for...everything, Grayson.\"\n\n\"Will you be in class tomorrow?\" he asked how feeling panicked himself.\n\n\"Yes. Definitely. But only as your student, okay?\" she said trying to sound strong and firm.\n\n\"Okay. Sure. But will you let me know if you change your mind?\" Grayson asked needing to know at least that much.\n\n\"Yes. I will,\" she told him. \n\n\"I...I can see myself out, okay?\" she said hurriedly before she lost her will.\n\nShe found Elizabeth and thanked her sincerely for dinner and her hospitality before leaving.\n\n\"I do hope you'll be back, Spencer,\" the older woman told her. \"I enjoyed your company very much and well, I've never seen my son so...\"\n\nShe didn't finish her sentence, she just walked her guest to the door.\n\n\"Thank you again, Elizabeth,\" Spencer said.\n\n\"My pleasure, dear. And Spencer? I'm not sure I should say this but...well, sometimes two people are brought together for a reason even if they don't see it right away.\"\n\nSpencer understood that must be something this family believed, and although she wasn't sure if she believed it, she knew she couldn't disprove it. Instead she thanked her hostess one more time then headed home.\n\nThe following week was as difficult as she could ever remember, barring the loss of her husband, of course. Things were very strained at the pool as they worked on each new phase of the certification process. She was pleasant and cordial but kept her distance even though she could tell Grayson was dying to talk to her.\n\nThe tension was palpable when she said goodbye on Friday without talking to him, but she just wasn't ready yet. That night, she sat at home mulling things over for the thousandth time before picking up her phone and calling the only person she knew she could trust completely hoping he might have some advice or insight for her.\n\n\"Dad?\" she said when he answered.\n\n\"Spencer! Hi, honey. What a pleasant surprise! Is everything okay?\"\n\nShe sighed then said, \"The fact that you have to ask me that reminds I don't call often enough. I'm sorry, Dad. I'm...I'm just not good at that, you know?\"\n\n\"I do and it's okay, Spence. Is there anything in particular you wanted to talk about?\" her father asked.\n\n\"Actually, there is,\" she said before launching into a lengthy explanation about her current situation and going all the way back to Jeff. The only thing she didn't mention was Grayson's age.\n\n\"I don't understand the problem, honey. You've been alone all these years. You spend all your time running, shooting, bicycling, climbing mountains, and God only knows what and now you find a man who loves those same things and you tell me you don't know what to do. Oh, and you said he's as attractive as anyone you've ever met and he owns his own business. What am I missing, Spence?\" he said almost exasperated.\n\n\"Please don't laugh at me, okay, Dad?\" she said her voice sounding very tentative.\n\n\"Why would I laugh, honey? Unless the guy is married or...is he...married?\" her father asked the concern in his voice nearly palpable.\n\n\"Dad! No! How could you even think that?\" his daughter said on the verge of crying.\n\n\"Then what is it, sweetheart? What's keeping you from spending time with someone you share pretty much everything in common?\"\n\n\"Oh, my God,\" Spencer said her voice trembling with emotion.\n\n\"I'm listening, honey. No judgment. Just talk to me, okay?\" he said as supportively as he could.\n\nThere was a very long pause before Spencer finally got up the nerve to speak.\n\n\"He's...19.\"\n\nThere was another long pause before she could tell her father was smiling. Moments later he was laughing.\n\n\"Daddy! This is not funny!\" she said, hurt that he was laughing.\n\n\"Spencer, I'm not laughing at you, I'm laughing with relief. That's all. I promise.\"\n\n\"Relief?\" she said now completely confused.\n\n\"Yes. I was convinced it had to be something as bad as him being married. You know, a convicted felon or...a child molester or...\"\n\n\"Dad! You're making this worse!\" she said feeling ten years old again.\n\nThere was silence before her father said, \"Do you like this guy?\"\n\n\"Yes,\" she said quietly. \"A lot.\"\n\n\"Does he act 19? Does he have a wandering eye? Is he a liar or...\"\n\n\"No. No. And...no,\" she said cutting him off. \"He's...he seems more focused and mature than me, Dad, and he's the most honest person I've ever known. Well, you and Jeff aside,\" she said now feeling better. She told him what Grayson said about sea water vs fresh water then waited.\n\n\"I can't make your decisions for you, honey. But I would strongly recommend you give this guy a chance. Age isn't the big deal it was when I was his age. But if everything you told me is true, and if age is the only issue, only you can decide how important that is.\"\n\n\"Would you, you know, get involved with someone who was say...my age?\" she asked still looking for help.\n\n\"I wouldn't rule it out, that's for sure,\" he told her. \"Then again, you're a grown woman with a lot of life experience whereas he's only 19 and what? Still...wet behind the ears?\"\n\nSpencer laughed at the obvious reference to the water and diving then sat there thinking until her dad asked if she was okay.\n\n\"Um...I think so,\" she told him. \"In fact, I'm sure I'm okay. You may have just helped me clear this all up, Dad.\"\n\n\"Well, glad to help,\" he said having no idea what he might have said that 'cleared everything up'. \"Once your children are grown, one of a parent's greatest joys is knowing their child still values your opinion, so just knowing you cared enough to ask me is all the reward I need.\"\n\n\"I love you, Daddy,\" she told him on the verge of crying.\n\n\"I love you too, Spender,\" he said using her childhood name that came from her first attempts to pronounce it.\n\n\"And Dad? Thank you for...everything.\"\n\n\"Anytime, honey,\" he assured her.\n\nAnd with that she hung up.\n\nSpencer barely slept that night as she found herself unable to stop thinking about him or wondering whether some 'seawater-nymph' might have caught his eye during the 'whole week' she was paralyzed with fear. That thought only made her ask how much she really trusted him if she could even imagine such a thing. Or maybe it was even worse. Was she actually becoming the jealous type? One thought viciously led to another which reminded her of another, all of which was driving her insane.\n\nThe last time she looked at her digital alarm clock, the red numbers said it was 3:45am.\n\nIt was a little after 8 o'clock when she awoke with a start having no idea how long she'd been asleep. By the time she got a pot of coffee going, the cascade of conflicting thoughts was back running through her mind.\n\nIt was 10am before she checked her phone and when she did, she was surprised to see one from a number she didn't recognize. She opened it and realized it was from Elizabeth.\n\n\"Hi, Spencer. I wanted to let you know how much I enjoyed meeting you last weekend. Okay, there's one other thing. I'm about to do something I swore I'd never do, because I hate when mothers do this, but...I'm sticking my nose in where it doesn't belong. Grayson may hate me for it, and you may, too, but... The hardest thing I've had to endure was watching my son suffer through the death of his father who was also his best friend. It hurt me greatly, too, but it devastated Grayson. He does a very good job of hiding it, but mothers just know these kinds of things. I also know that my son has never been happier than since he met you. He not only talked about you constantly, I could tell how he felt about you. This week, he's been sullen and removed again and while he'd never tell me the reason why, again, mothers just know. Spencer, brace yourself, but I am quite certain my son is in love with you. No, he hasn't said those words out loud, and he would likely kill me for telling you this, but I'm certain that he does, and I couldn't go another day without telling you. Perhaps you've already made it clear you don't feel that way about him and if so, I will gladly beg for your forgiveness after the fact. In spite of this text, I am not a meddling mother. So if you hate me for this, I will have to live with that. If I've destroyed any chance Grayson may have had with you, I will hate myself for the rest of my life. But he loves you, my dear, and although I barely know you, I feel that way, too. I should also say I've addressed the age difference with Grayson after you left, and I can assure you he not only doesn't care, he thinks you are the most perfect, most amazing woman he's ever met. Anyway, if you would like to be there, Grayson is testing for his 2nd-degree blackbelt in TaeKwonDo this morning at 11:00 o'clock. I don't normally attend such things, but since Ernest no longer can, I plan to be there. If you care to join me, I would be so very grateful and I can't help but believe Grayson would, too. Thank you and take care whatever you decide. Elizabeth. Oh, this is the address...\"\n\nSpencer re-read the text two more times and each time her heart beat faster and harder than before. Yes, Elizabeth was meddling and normally it would have angered her, but this time, it not only didn't upset her, it put everything into a sharp, clear focus. She knew she was in love with this...amazing and unique young man, too. It was just too hard to admit it to herself until she read those words.\n\nShe looked at the time stamp of the text and saw that it said 7:26am.\n\n\"Oh, my gosh! What time is it?\" she said, suddenly feeling panicked.\n\nIt was 10:35. \n\nHer mind was spinning. \n\n\"I can't possibly get ready that fast! What should I wear? Does he really want me to be there or is this just the wishful thinking of a meddling mother?\" were just a few of the new rush of thoughts sweeping through her brain as she headed for the shower.\n\nShe was in and out ten minutes later blow drying her hair and frantically willing the hair dryer to work faster. She knew exactly what she wanted to wear on this beautiful summer morning; something she thought she'd probably never actually wear when she bought it. \n\nIt had just looked so cute at the time, but now it seemed almost...risqu\u00e9. The white sundress had a very low-cut neckline with a crocheted bodice which made wearing a bra unnecessary which would save a few more seconds. It was also very short, and although Spencer knew she had the legs to wear it, she couldn't help but wonder if it was too much.\n\nThe good news was it slipped on in two seconds and all she needed was to step into a pair of white sandals and she'd be ready to go. Then again, it was sleeveless with spaghetti straps so she grabbed a white cardigan and threw it on knowing Elizabeth was there as she stepped into the sandals. She could put on some mascara during the drive which she knew was dangerous, but she had to get on the road. \n\nShe was in the car by 10:52 and knew it took about 10 minutes to get across town. She was going to be late, but she wanted to look her best in spite of having run around like a wild woman getting ready. She pulled in at 11:04, took a quick look in the mirror and thought she looked dead. She had a tube of very dark red, very wet lipstick she carried for emergencies, and this seemed like an emergency, so she pulled it out, removed the wand, and painted her lips before heading inside.\n\nIt was eerily quiet as she stepped through the glass front door. The silence only lasted a few seconds before she heard what sounding like clothes drying outside snapping in the wind on a breezy day followed by some kind of loud, guttural noises. More snapping. More silence. More noises.\n\nShe walked around the large room to an area that was closed off with partitions, and the first thing she saw was Elizabeth sitting near the wall. The older woman smiled the happiest of smiles when they made eye contact and with the slightest movement of her hand motioned for her to come join her. A second folding chair was sitting next to her and Spencer knew the reason why.\n\nAs she slowly and silently made her way toward Elizabeth, a guttural noise startled her as Grayson performed some kind of very complicated, very graceful, and very violent movement. She knew he saw her but she could tell he was focused like the proverbial laser beam on what he was doing. \n\nThe moment she sat down, Elizabeth reached over for her hand and oh-so quietly said, \"Thank you, Spencer. Thank you so much.\"\n\nFor the next 20 minutes she stood there watching what could only be described as choreographed fury as Grayson repeatedly kicked, spun, punched, and moved around the hardwood floor with the most...amazing gray...grace. \n\nHe stopped periodically and bowed to someone with a dark beard in a white uniform with a black belt like Grayson's, but this man's had other things on it Grayson's did not. The other man would say something loudly, Grayson would repeat it, bow, and then go into his next movement.\n\nWhen it was over, Grayson bowed to the man again, who smiled, reached out and shook his head.\n\nThere was a moment of silence before the bearded man said loudly, \"Congratulations, Grayson. You have earned your ee dan,\" which Spencer later learned was Korean for 2nd-degree.\n\n\"It is my honor to present you with your new belt. Is there anyone you would like to ask to come and help you tie it on?\"\n\n\"There is,\" he said. \"The two women I care about the most are both here. I would like them to assist me.\"\n\nGrayson turned around and said, \"Would you mind?\"\n\nSpencer started to nearly run toward him when Grayson made a face and pointed to her shoes.\n\n\"Oh! Sorry!\" she said as she stepped out of the sandals and set then back by her chair.\n\nElizabeth was out of hers and offered her a hand as they walked toward Grayson.\n\n\"Hi,\" Spencer said shyly as she looked down for a moment, unable to meet his stare. \n\nShe slowly looked up into his eyes and said apologetically, \"I didn't know about this until less than an hour ago. I...I didn't even know you took karate.\"\n\nTaeKwonDo wasn't technically karate, but it was a form of martial arts. Grayson didn't correct her. He just smiled as she talked.\n\n\"I invited her, Grayson,\" his mother interjected. \"If you're going to be upset at anyone...\"\n\nHe didn't even hear his mother talking.\n\n\"Hi,\" he said back to Spencer. \"Wow. You look...amazing.\"\n\n\"Thank you,\" she said sweetly her heart once again pounding out of her chest. \"You were incredible.\"\n\n\"I was really struggling at first,\" he told her quietly. \"I've known about this for three months, but I was having a horrible time focusing.\"\n\n\"You were?\" Spencer said quietly as he reached for her hands.\n\n\"I was. Until I saw you walk in. I knew I couldn't look at you because you have this way of distracting me completely.\"\n\n\"I do?\" she said still barely able to talk.\n\n\"Yes, you do,\" he told her. \"In fact, I can't think about anything but you, Spencer. I wake up thinking about you and I fall asleep thinking about you. I even dream about you.\"\n\nShe looked right at him when she said, \"I needed time to think things through, Grayson. I know I've been awful this week, I just...\"\n\n\"No. Don't apologize,\" he said kindly. \"I know you needed time. I'm just so glad you're here, Spencer. Thank you for coming.\"\n\n\"Your mom invited me and, well, I...I wanted to be here...for you. I...I missed you so much this week, and if you're still interested, if you still want me around, I'd...\"\n\nGrayson smiled and leaned down and kissed her, cutting her off in mid-sentence.\n\n\"Oh, my!\" Elizabeth said with a smile.\n\n\"I think ee dan can wait,\" the bearded man said smiling at Elizabeth.\n\n\"So you're not mad at me?\" Spencer said as she wiped glossy lipstick from his mouth.\n\n\"Mad at you? How could I ever be mad at you when I'm mad about you?\" he said with a smile.\n\n\"I'm kind of crazy about you, too,\" she said happily.\n\n\"Do I have my mom to thank for any of that?\" Grayson asked looking over at his mother.\n\n\"Maybe,\" she said sweetly as she looked at Elizabeth. \"My dad helped me put things in perspective, and your mom helped bring everything into focus.\"\n\nHe smiled at his mom and said, \"Thank you, Mom. You know I love you, right?\"\n\n\"It was my pleasure, dear, and I love you, too.\"\n\n\"I remember you telling me not to push it once,\" Grayson said to Spencer.\n\n\"Oh, right. When you asked me to spend some more time with you. I remember that. Why are you bringing that up?\" she asked.\n\n\"Because while I'm not an impulsive person I'm about to really push it,\" he told her.",
        "Spencer's eyes were rapidly moving back and forth between his as he held her hands. Her heart was still beating like crazy as she waited for him to speak.\n\nHe put his hand on her face and with that gorgeous smile of his, Grayson told her, \"I love you, Spencer. You don't have to love me back, I just needed to...\"\n\n\"I love you, too, Grayson,\" she said her eyes again filled with tears. \"I really do love you.\"\n\nShe stood on her toes and pulled him close for a kiss and all four of them laughed when they heard Elizabeth say, \"Yes!\" and fist pump the way someone much younger might.\n\nShe went to high-five the instructor then said, \"Oh, what the hell!\" and threw her arms around him. \n\nNot to be outdone, he smiled at her, dipped her, and kissed her, too.\n\n\"Oh. Oh, my!\" Elizabeth said when he raised her up. \"I should come to TaeKwonDo class more often!\"\n\nShe and Spencer placed Grayson's new belt around his waist and helped him tie it on. His instructor shook his hand then bowed slightly before Elizabeth hugged him and kissed him on the cheek.\n\n\"I'm impressed,\" Spencer said as he turned to her. \"Again.\"\n\n\"Thank you, but I'm...amazed,\" he said as he put his arms around her.\n\nShe kissed him softly then whispered, \"You ain't seen nothin' yet, Mr. Blackbelt/PADI instructor/hunky man that I love.\"\n\n\"Oh, wow. Am I blushing?\" he asked quietly. \n\n\"No, but you might before I get through with you,\" she teased as she kissed him again.\n\nAfter another round of handshakes and hugs, Elizabeth excused herself and said with a smile, \"Have fun, you two!\"\n\nGrayson put his arm around Spencer and said, \"I always do what my mother tells me to do.\"\n\n\"I see,\" she said with mock seriousness. \"So...do you intend to have fun...with me?\"\n\n\"Oh, yes,\" he said authoritatively.\n\n\"I see,\" Spencer said again. \"Would you maybe like to have fun with me at my place later today?\"\n\n\"Oh, yes,\" Grayson replied keeping it going.\n\n\"I see,\" she said yet again. \"Do you need to take a shower first?\"\n\n\"Oh, yes,\" he told her. \"But I could take one at your place. If you don't mind, of course.\"\n\n\"I see,\" she said unable to keep from laughing any longer.\n\n\"I think that would be okay,\" she said with a kind of wicked smile. \"I just took one myself, but I can think of something we could do together once you're all nice and squeaky clean.\"\n\n\"I see,\" he said trying not to laugh. \"Would it something...fun?\"\n\n\"I guess you'll just have to want and...see,\" she told him.\n\nThere was only one shower in her modest apartment and one had to go through the master bedroom to get there.\n\n\"You go take a shower and I'll try and get presentable,\" she told him as they stood next to her bed.\n\n\"You're already light years beyond presentable,\" he told her. \"You are without doubt the most beautiful woman I've even seen.\"\n\n\"Are you sure your eyes are okay?\" she teased yet with some insecurity about being 30 years old. Well, nearly 31, but she didn't want to push it. \"What if you're disappointed when you see me without anything on?\"\n\n\"That would be impossible,\" he assured her. \"Absolutely impossible.\"\n\nHe kissed her deeply and passionately for several seconds before she pushed him away.\n\n\"If you don't take a shower now, it's not gonna happen,\" she told him with a bright, happy smile.\n\n\"Don't go away,\" he said pointing a finger at her.\n\n\"Never,\" she said in a way that told him she meant it.\n\nLike the dress, Spencer also had a nightie she'd bought but never worn back when she was having her brief fling with a much-younger man. She smiled when she realized he'd been a year older than Grayson. The white, see-through, lacy piece of lingerie was still in the bag from when she'd bought it. She picked it up by its tiny straps and smiled as she remembered how very sexy it was and she hoped her new love would appreciate it as much as her.\n\nShe slipped out of the short, white, sundress and stepped into the even shorter white, off-the-shoulder nightie then decided the white panties she was wearing could go, too. The water was still running so she slid on a pair of white, thigh-high stockings then caught herself giggling again when she pulled out a pair of white stiletto heels. \n\nShe fastened the ankle strap, stood up, and took a look at herself in the mirror, then touched up her lipstick just as the water shut off.\n\nShe went around and pulled the covers down, fluffed the pillows, then laid down striking the sexiest pose she could and hoped he wouldn't laugh.\n\nMoments later, the bathroom door opened and Grayson walked out with just a towel wrapped around his waist. His thick hair was wet and unbelievably sexy as Spencer realized she was also extremely wet in a different place.\n\nHe clearly hadn't expected to see her on the bed let alone looking like that. \n\nHe stopped in his tracks and said, \"Spencer, I was so wrong.\"\n\nHis tone of voice was such that it scared her and she instinctively covered her breasts.\n\n\"You were?\" she asked fearing he'd changed his mind.\n\nHe dropped the towel revealing the largest cock she'd ever seen and sat beside her.\n\n\"I was,\" he said sincerely. He reached and brushed back her hair, smiled, and told her, \"There really is a God.\"\n\n\"You...you scared me death!\" she said playfully hitting him. \"I thought you saw me and changed your mind.\"\n\n\"I will never change my mind,\" he told her before kissing her softly. \"Ever.\"\n\nAn hour later, Spencer was catching her breath and said, \"Oh, my God! Is there anything you don't excel at?\"\n\nShe'd cum four times and the last one happened without any stimulation other then the 'baseball bat' between his legs.\n\nHe rolled on top of her and said very seriously, \"Math. I suck at math.\"\n\nSpencer shamelessly giggled this time then said, \"Then we have something in common.\"\n\n\"You're bad at math, too?\" he asked.\n\nShe pushed him over, pulled her hair behind her ear then took reached for his still-slippery wet cock and said, \"No, I'm actually pretty good at math. I just...suck.\"\n\nGrayson laughed loudly then groaned with pleasure as she brought him back to life for an even more amazing, slower round two.\n\n\"Didn't you say you have Sundays off?\" she asked later that evening as they lay in bed together.\n\n\"I did,\" he told her. \"Why do you ask?\"\n\n\"Well, other than food and water, I see no reason to get out of bed until Monday morning,\" she announced.\n\nGrayson smiled, pushed her on her back and said, \"See! You really are amazing!\"\n\nSpencer screamed a happy scream as he rolled her over and said, \"You want to know what amazing is?\"\n\nShe reached for his thick, growing member and said, \"Now that is amazing! So...amaze me again, would you?\"\n\nAfter breakfast on Monday morning, Spencer reluctantly said goodbye to her handsome young lover.\n\n\"I'll see you tonight for class, okay?\" he said as he held her before leaving.\n\n\"You better believe it. And I'd better see you back here after class, young man,\" she teased.\n\n\"Yes, ma'am. I will be reporting for duty. That's a given.\"\n\n\"Mmmm. I like when you...give it to me,\" she said biting his lip.\n\nSpencer saw Tonia again that evening and when she began openly flirting with Grayson the way she had every day, Spencer walked right up to him and said, \"Hi, honey. I missed you today.\"\n\nGrayson smiled, grabbed her, and kissed her as Tonia stood there slack jawed.\n\n\"You've got to be kidding me! You chose this...this...hag over me?\"\n\n\"No, I chose the woman of my dreams over an adulterous liar,\" Grayson said calmly. \"I'll be happy to refund your money, but you can leave now.\"\n\nShe narrowed her eyes and while looking at Spencer said to Grayson, \"You could have this hot, young ass. If you want...that...over...this...then you can kiss my hot ass goodbye!\"\n\nShe paused then hissed, \"Bitch!\" to Spencer before storming out to a round of applause and whistles. \n\nTonia flipped them all off and Mel said, \"Hell, even I wouldn't hit that!\" which was met with raucous laughter.\n\n\"Was that too much?\" Grayson asked.\n\n\"Yes, but she earned it,\" Spencer told him with a smile.\n\n\"Like she'd have a chance,\" Grayson said as he held his beautiful girlfriend before kissing her again.\n\nThis time the crowd made 'ooh!' and 'ahh!' sounds and a couple of congratulations were shouted out along with another one-liner from Mel: \"Get a room already, you two!\" causing everyone to laugh.\n\nSpencer decided she liked being 'teacher's pet' even though she worked harder than anyone else in the class. She graduated at the top of their group, and no one thought it was because she hadn't earned it.\n\nShe and Grayson began diving together the very next day, and day trips soon turned into weekend trips which became more and more frequent.\n\nThree months later, Spencer completed the Divemaster class and in celebration, Grayson took her to the Cayman islands for a week of the most spectacular diving Spencer had ever seen along with the most spectacular love making she'd ever experienced.\n\nOn their last night, they were having dinner at their favorite restaurant when Grayson got down on one knee and proposed. Spencer was crying and shaking as she said 'yes'. She held out her hand, but Grayson didn't move.\n\n\"Oh. Oh, my goodness,\" she said looking at the ring Jeff had given her that was 'in the way'.\n\n\"It's okay. I will never be jealous of Jeff. I only wish I could have known him,\" he told her sincerely.\n\n\"In fact, I bought you this just in case you want to wear his ring around your neck.\"\n\nGrayson handed her a beautiful gold chain as Spencer removed the ring she'd promised to wear until death do us part. It had been nearly nine years and she was finally ready to take it off. She threaded it threw the chain and let Grayson hook it for her. She touched it once as it settled into its new resting place before extending her bare hand.\n\n\"I love you with all my heart, Spencer,\" he said as he slipped the ring on her finger. \"I've found not only a wife, but an incredible diving partner and a best friend.\"\n\n\"I often wondered if I could ever love again,\" she said trying not to cry. \"Once I realized I could, I never dreamed it would be with someone so...\"\n\n\"So much younger?\" Grayson said with a smile as he sat next to her with his arm around her shoulders.\n\nSpencer laughed and said, \"Well, there is that, but I was thinking more about finding someone who shared so much in common with me. For the longest time I honestly couldn't even imagine ever being this happy with anyone.\"\n\nShe paused, smiled, then kissed her fiancee before saying, \"I love you, too, Grayson. With all my heart. And I can't wait to see the world with you. Diving and climbing and...\"\n\nShe saw him nod to the woman who ran the place, then watched her smile and nod back. \n\nMoments later, Spencer sat there and listened as the words to one of her favorite songs of all time rang out:\n\n\"I want to stand with you on a mountain. I want to bathe with you in the sea. I want to lay like this forever, until the sky falls down on me.\"\n\nSpencer lost it, but her tears were tears of pure joy as Grayson whispered, \"That's exactly how I feel about you, Spencer. I want to spend my life living every day with you, the most amazing woman on earth.\"\n\nThe one part neither of them mentioned was children and that was fine as Spencer wanted to spend time with her the man who would become her husband three months later. \n\nThey waited two years wherein Uncle Ted trained her to take his place so he could retire while Spencer pursued her Enriched Air Diver certification then became an Assistant Instructor, an Open-Water Instructor, and finally, just like her gorgeous husband, a Recreational Dive Center Instructor.\n\nThe shop continued to do very well even during the worst of the winter months by attracting people from the greater Seattle-Tacoma area to their dive shop. They not only continued diving together but trained for and climbed Mount Meru, scaling the infamous Shark's Fin.\n\nOn their second anniversary they were ready to start a family and the following year, Spencer quit working and for a while, diving, as their first child was born.\n\nSpencer didn't think she could love this beautiful man any more than she already did until he selflessly suggested naming their son Jeffrey Ernest Clark in honor of his late father and the only other man she'd ever loved the way she loved her amazing husband, Grayson Clark."
    ],
    "authorname": "komrad1156",
    "tags": [
        "older woman",
        "younger man",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/padi-cake-padi-cake"
}