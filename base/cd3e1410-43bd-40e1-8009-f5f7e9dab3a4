{
    "title": "The Monster under The Bed",
    "pages": [
        "Author's Note: this story involves non-consensual sex. \n\nThe car trundled into the driveway and parked.\n\nLaura got out, grabbing her backpack and purse from the other passenger seat. \n\nHer brother had stayed behind while their parents had picked her up from campus, and when she opened the front door, she saw why.\n\n\"Welcome home!\" he yelled, along with a few members of their extended family and some of her friends who had already returned home.\n\n\"Aww, you guys,\" she said, setting her bags by the door and going over to them, \"you didn't have to do this.\"\n\n\"We know,\" her brother said, \"but we wanted to.\"\n\nHer family and friends hugged her one by one.\n\nA thump over by the door caught her attention after the last hug. She looked over to see her dad walking back out to the car to grab more of her stuff.\n\n\"Wait, Daddy,\" she called, starting after him.\n\n\"Don't worry, hon,\" he answered over his shoulder, \"there're only a couple bags left. I got it.\"\n\nShe turned back to the group, and then glanced around the living room.\n\n\"Where's Rufus?\"\n\n\"The backyard,\" her brother answered.\n\nShe padded through the rest of the house, the group just behind her, and slid open the screen door leading into the backyard.\n\n\"Oh, Rufus!\" she yelled out. \"I'm home!\"\n\nA bark came from the corner of the backyard, just outside of her range of vision.\n\nA second bark was followed by a golden blur as Rufus raced towards her.\n\nShe crouched, and the golden retriever jumped into her outstretched arms, the impact knocking her onto her butt. As she giggled, Rufus wriggled and barked excitedly, a manic ball of loving energy, his nose knocking against her face as he sniffed and licked her. \n\nWhen he finally calmed down enough to just look adoringly at her, the group went back inside.\n\n\"We ordered from Paisan's, by the way,\" her brother told her.\n\n\"Yes!\" she exclaimed, pumping her fist. \"I missed Paisan's. Couldn't find any good pizza by campus.\"\n\n\"Welcome back,\" he said, hugging her again.\n\n\"Did you grow more?\" she asked incredulously, pulling back to get a better look. \"You weren't taller than me last time I saw you.\"\n\n\"Yeah, a little bit,\" he answered proudly. \"Now you're my little sister.\"\n\nShe laughed and ruffled his hair.\n\n\"Like hell I am, smartass.\" \n\n\"You just got home,\" her mom playfully admonished, \"and you're already calling each other names?\"\n\n\"Hey, I didn't do anything,\" her brother said quickly, \"she started it.\"\n\nLaura stuck out her tongue at him, fighting back a giggle at the dramatically scandalized look that was his answer.\n\n++++++++++++++++++\n\nThe welcome home party was over, and Laura was tired.\n\nHer friends, and those extended family members, had left, and her parents had gone to bed. Now, it was just her brother and her in the den, her on the couch, him on the recliner, Rufus on the floor next to the couch.\n\n\"I'm going to bed,\" her brother announced, following his announcement with a yawn.\n\n\"Yeah, I should probably go too,\" she answered, following that with her own yawn.\n\nHe nodded absentmindedly, heaved himself from the recliner, and trudged from the den.\n\n\"Night, love you,\" he called over his shoulder. \"Night, Rufus.\"\n\n\"Love you too, night,\" was her half-yawned reply.\n\nShe stretched out on the couch.\n\n\"Time for bed,\" she murmured down to Rufus, who was already dozing. \n\nWhen she got up, he stirred, and when he saw her leaving the room, he followed.\n\nHer bedroom was just as she had left it the last time she had been home, which had been the last day of winter break.\n\nShe realized, as she changed into sleepwear, that she had not actually slept in her bed since leaving home for her freshman year of college late last August.\n\nDuring a weekend back here in October, she had slept one night at a friend's house when a reunion had become an impromptu sleepover, and then had slept on the couch the next night because she had been too lazy to go upstairs to her room. Thanksgiving and Thanksgiving weekend had been spent at her maternal grandparents' house across the country, so she had not had a night at home, as she had flown out by herself from an airport closer to campus and flown back also by herself to the same airport. Her winter break, except for the last two nights, had been spent in London, with her flying there right after finals alongside her British roommate, and her parents and brother flying over a few days later to spend some of the break with her. The second-to-last night had been spent at another reunion-turned-sleepover at a friend's house, and the last night she had slept on the couch, again too lazy to schlep herself upstairs. Spring break had been spent down in Miami with her college's Habitat for Humanity chapter. \n\nRufus leapt on the bed and settled to the side.\n\nNow wearing a tank top, and boxer shorts with nothing underneath, she slid into bed, giving Rufus an affectionate pat before lying down and closing her eyes.\n\n++++++++++++++++++\n\nLaura woke up.\n\nA growl came from next to her. She squinted over to see Rufus standing on the bed, his attention fixed on the floor, another growl coming out.\n\n\"What's wrong?\" she asked blearily, surprised at his demeanor, none of his customary goofy playfulness apparent.\n\nA third growl followed.\n\nShe leaned over and turned on her bedside lamp. A check of her phone showed her that she had only been asleep for a few minutes.\n\nA fourth growl came, and she hesitated before peering over the edge of the bed.\n\nThere was nothing there besides floor.\n\n\"What is it?\" she asked Rufus, but he only stared down at the floor, lips drawn back to reveal his teeth.\n\nWhen she eased herself off the bed, he leapt down onto the floor and poked his nose underneath the bed.\n\nShe knelt and followed his lead.\n\nThere was nothing there besides more floor.\n\n\"What is it?\" she asked Rufus again, rubbing at his back, glancing over to the space under her bed one more time.\n\nThere was, again, nothing there besides more floor.\n\nOver the next few minutes, Rufus kept growling at the space under the bed. Her soothing comments and affectionate pats did nothing to calm his strange, newfound ferocity. \n\nShe had been perplexed at first, but that quickly gave way to annoyance in the face of her need for sleep. \n\n\"Alright,\" she grumbled, \"let's get you out of here.\"\n\nShe stood and headed to the door. After one last growl, Rufus followed her.\n\nThe hallway was dark and quiet, as everyone else was asleep. \n\nAs soon as Rufus slipped past her, she jumped back into her bedroom, closed the door, and locked it. \n\n\"Sorry, buddy,\" she murmured through the door, \"but I'm tired, and there's nothing under the bed.\"\n\nHis desperate whines made her hesitate, but she finally went back to her bed, turned off the lamp, and burrowed under the blanket.\n\nA scratching came at the door.\n\n\"I'm fine,\" she muttered, turning onto her side.\n\nShe closed her eyes, trying to ignore the pitiful noises coming from outside her door.\n\nAnd then something wrapped around her mouth, muffling the subsequent squeal of surprise.\n\nHer eyes flew open, but before she could turn to see what was happening, the blanket flew off her, and two more somethings wrapped around her, one pinning her arms to her sides, the other bringing her legs together at the knees. She tried to peer over her shoulder but was restrained by the strength of that something around her mouth.\n\nTo her horror, the somethings pulled, and easily dragged her back towards the edge of the bed. She squirmed helplessly, more muffled squeals coming, Rufus now barking frantically.\n\nIn seconds, she was over the edge of the bed, suspended in mid-air. Her eyes were adjusted enough to the dark that she could see there was no one in the room but her and nothing out of the ordinary but these strange somethings so easily restraining her. She struggled to no avail, her panic giving way to fear.\n\nThe somethings lowered her, and then she was pulled to the side.\n\nThrough the fear, she realized that she was being dragged under the bed. That realization made her think of how ferociously Rufus had been growling at that space.\n\nOnce she was entirely under the bed, her field of vision restricted to the underside of her bedframe, the somethings pulled her down. \n\nThere should have only been a few inches in between her and the floor, but to her surprise and confusion, she did not meet that hard surface, nor any hard surface. It felt like she was sinking; she noticed dimly that darkness was creeping in from the edges of her field of vision, the underside of her bedframe receding further than should have been physically possible. \n\nDarkness soon completely surrounded her. Her brain could not quite interpret where she was, physically speaking. It felt as if she were somehow suspended in mid-air, but there was no tactile reference point.\n\nThe somethings loosened, and then slipped from her. She yelped, expecting to fall, but she instead stayed somehow secure on some sort of surface in this space of amorphous darkness. Despite the brief instinct to stand, she stayed lying down, unsure of what might happen were she to try, instead just supporting herself on her elbows so she could at least look around.\n\n\"Hello!\" she cried out, not expecting an answer.\n\n\"Hello there,\" a voice answered, right next to her.\n\nShe shrieked in terrified surprise and glanced over to see nothing but darkness.\n\n\"Don't worry,\" the voice continued, \"I won't hurt you. At least, I don't want to hurt you.\"\n\nShe mewled, fear throbbing through her.\n\n\"Thank you for getting rid of that mongrel. I'm sure I could've taken you anyway, but it would have put up a fight.\"\n\nThe fear made it hard to think. She just squirmed wildly, glancing around for the source of the voice that was somehow so close.\n\n\"You probably have a lot of questions.\"\n\nShe mewled again.\n\n\"You also probably don't remember me.\"\n\nThat comment confused her, overriding the fear just enough for her to reply.\n\n\"What's going on?\"\n\n\"Ah, question number one.\"\n\n\"Where am I?\"\n\n\"Another question so soon. I haven't even answered the first.\"\n\n\"What the fuck is going on!?\"\n\n\"You already asked me that.\"\n\nHer fear came back, the confusion receding as she squirmed, tears brimming at her eyes.\n\n\"Please,\" she whimpered, \"whatever is going on, whoever you are, just let me go, please!\"\n\n\"Oh no,\" the voice crooned, closer now, \"no, no, no, that's...that's not going to happen.\"\n\nTears fell now, dribbling down her cheeks. \n\nSomething nudged against her side. She looked down, and then screamed through the tears as a shadowy, tentacle-like shape slithered over her hip and up her stomach. It continued in between her breasts and then hovered over her face. She turned away frantically, but it reached her cheek easily, its bizarre, off-putting coolness throbbing against her skin. To her confusion, all it did was wipe a few tears away before receding into the darkness.\n\n\"Now, now, don't cry.\"\n\n\"Please,\" she bawled, \"let me go, let me go, please!\"\n\n\"I already said that won't happen.\"\n\nShe moaned in despair.\n\n\"Aren't you at least wondering who I am or where you are?\"\n\nShe shook her head.\n\n\"I don't care, please, just let me go!\"\n\n\"You should care. I want you to care. Ask me who I am.\"\n\n\"No,\" she mewled, shaking her head.\n\nThe tentacle returned, hovering menacingly over her face, and she squeaked in terror.\n\n\"Please don't hurt me! Please, just let me go...\"\n\nThe tentacle wiped away a few more of her tears.\n\n\"You need to realize that I'm not letting you go anytime soon.\"\n\nShe squeaked again, but through the despair came an understanding of her predicament, that she was helpless, that she knew nothing about what was going on, that she should do whatever this mysterious, seemingly disembodied voice wanted.\n\n\"Who are you?\" she asked, her voice uneven and choked with fear.\n\n\"There we are,\" the voice purred, \"was that so hard?\"\n\nShe bit back a sob.\n\n\"Think about where you are, then think about your childhood, then think about how those two topics would connect...and you shall have your answer.\"\n\nConfusion again bubbled up, but she had already resolved to do what the voice said.\n\n\"I'm under my bed,\" she said numbly.\n\n\"Correct.\"\n\nHer thoughts went back to her childhood, and almost immediately, she knew.\n\n\"No,\" she whispered, \"that's...that's...no...you can't be...how could you be?\"\n\n\"How could I be what?\" the voice asked teasingly.\n\n\"This is a nightmare,\" she said, closing her eyes tight and willing herself to wake up. \"Just a nightmare.\"\n\nThat bizarre coolness rubbed over her cheek and then the tentacle slapped her lightly.\n\nHer eyes snapped open reflexively, despite the slap not hurting much.\n\nThe tentacle withdrew, again just hovering over her.\n\n\"Did that feel like 'just a nightmare'?\" the voice asked.\n\n\"No,\" she mewled, more tears spilling forth. \"But...you can't be, you don't exist, you never existed! I was just a little kid...every little kid thinks there's a monster under their bed!\"\n\n\"But you happened to be right.\"\n\nShe thought back to her childhood.\n\nThis house, and this bedroom, had seen her come home from the hospital soon after birth, had seen her grow from an inquisitive toddler into a precocious child, and then into an industrious teenager, and finally into the ambitious young woman she was today.\n\nFrom the age of six, until around the age of nine, she had been convinced that there was a monster under her bed. It went as it would for any child, with her asking whichever parent was tucking her in to check under the bed, and them dutifully doing so and informing her that the coast was clear, sometimes even showing her that in fact there was nothing there. She could not remember, and neither could her parents, if there had been a singular event or experience that had triggered the fear. All she could remember was that fear, and one single event after it had already been established.\n\nHer father had been tucking her in, when she had asked him to check under the bed.\n\nAs always, he had obliged, even reaching his hand into that space, demonstrating to her that there was nothing there. And then he had gone a step further.\n\nHer parents usually did not indulge the fear, or speak of any possible monster, only ever showing or telling her that there was nothing there, which she had always accepted, trusting her parents as any little kid would.\n\nThis time, however, her father had done something different.\n\n\"There's nothing there,\" he had said, \"and even if there was, I'd protect you. Your daddy is strong, and if there's a monster under your bed, it's weak. Okay? You could probably beat it up too. It's weak and afraid.\" \n\nHer eyes had widened in awe at his casual proclamation, and then she had giggled as he had given her a good-night forehead kiss, her worries suddenly gone.\n\nHe had left the room, closing the door behind him, leaving her in darkness but for the gentle glow of the nearby nightlight.\n\nAnd then a voice had spoken up.\n\nIt had been low enough that she would later convince herself that it had been a dream and that she had fallen asleep right after her dad had closed the door.\n\n\"Am not.\"\n\nThe fear of the monster under her bed had diminished as she had gotten older, and then had disappeared completely. By the time the family had gotten Rufus around her twelfth birthday, any thoughts of the monster under her bed were about how silly it had been to be afraid of such a thing.\n\n\"This can't be real,\" she murmured.\n\nThe tentacle nudged closer to her face. She stared at it, noticing numbly how it seemed to come from the darkness and be made up of darkness, like an appendage of the shadows. It rubbed over her cheek, and then the tip curled back.\n\n\"Shall I slap you again to show you how real it is?\"\n\n\"No!\" she yelped quickly. \"Please, I just...this is a lot to take in...\"\n\nThe voice chuckled softly.\n\n\"True. Finding out the monster under your bed exists must be a doozy.\"\n\nA few seconds passed, and she asked another question, her desire to clarify her situation briefly overwhelming her fear.\n\n\"Where am I?\"\n\n\"Under your bed,\" the voice answered matter-of-factly.\n\n\"We can't be under my bed. That's impossible. There's...there's only darkness here.\"\n\n\"This is where I live.\"\n\n\"Okay,\" she began, doing her best to ignore the fear so she could ask more questions, \"and why am I here? What do you want with me?\"\n\n\"A-ha! Now, we get to the million-dollar question.\"\n\nThe tentacle had stayed still after the threat of another slap, but now, it moved, landing on her stomach. She jerked instinctively, feeling that strange, solid coolness through her tank top. It slid down and paused on the strip of skin in between the bottom of her tank top and the waistband of her boxers. She whimpered, frightened by the sensation of that coolness directly on her.\n\n\"You've grown up so much,\" the voice crooned, its tone low, hushed, almost seductive.\n\nShe whimpered again, trying to squirm away from the tentacle.\n\nTo her horror and despair, four more came into her field of vision, shadowy and supple just like the first. \n\nEach chose a hand or foot and wrapped around her ankles and wrists. As she struggled, the tentacles around her ankles forced her legs apart, while those around her wrists yanked her arms above her head. The fear multiplied, panic returning, a squeal spilling from her as she squirmed, bucking her hips, arching her back. \n\n\"You were gone for such a long time. I thought you might've left me forever.\"\n\nThe tentacles around her wrists and ankles stayed still, but the one on her midriff moved very subtly, tracing over her skin in little circles. She shuddered, feeling that solid, strange, unsettling coolness at five places now.\n\n\"And then you came back...and I saw just how much you'd grown. Of course, I'm not an idiot, you were growing while you were still here. I just never realized how beautiful you are, until I saw you that night. It was back in the winter, I think...\"\n\nShe whimpered, struggling against the tentacles. \n\n\"But then you left me again. You didn't stay long, didn't even sleep in your own bed.\"\n\nThe tentacle on her midriff slipped an inch or so further down, teasing at the waistband of her boxers. The implications of such a brazen act terrified her, notwithstanding the already off-putting affection in the way it had been tracing over her skin.\n\n\"What are you going to do to me?\" she asked, her voice coming out shrill.\n\n\"And now you're back again,\" the voice continued, ignoring her question. \"I was so happy when you came in earlier, even if it was just to drop off your bags...\"\n\n\"What are you going to do to me?\" she asked again, trying, and failing, to keep her voice level and calm.\n\n\"You're not an idiot, either, Laura,\" the voice chided. \"I didn't bring you down here for tea.\"\n\nShe felt movement then and looked down to see the tentacle slide back from the waistband of her boxers. Whatever relief she felt was brief, as it then slid further up, in between her tank-top covered breasts. The tip curled around the low cut of the tank top.\n\nAnd then it yanked.\n\nHer tank top tore down the middle, making her yelp in surprised terror. The remnants fell off her chest, exposing her breasts, the lush globes bouncing slightly from the sudden liberation. The tentacle whipped those remnants out from underneath her and cast them aside.\n\n\"It was my mistake not noticing just how beautiful you are,\" the voice purred. \"After all, I've been watching you for so long...\"\n\nThe tentacle stroked along a breast, making her jerk, that solid coolness so strange against her bare skin, a difficult sensation to adjust to.\n\nThe voice groaned in delight, the tentacle wrapping around her breast, squeezing curiously. She whimpered, closing her eyes to block out the sight.",
        "\"Open your eyes.\"\n\nShe shook her head, a small spark of defiance bubbling up inside her.\n\nThe defiance died as she felt the tentacles around her wrists and ankles tighten for a few seconds, reminding her of her helplessness. \n\nShe opened her eyes and peeked down at the horrifying sight of the tentacle on her.\n\nIt slithered over a nipple, sending a shudder down her spine.\n\n\"Now...ask me again what I'm going to do to you.\"\n\n\"What're you going to do to me?\" she asked between hitched sobs.\n\n\"Whatever I want.\"\n\nShe mewled weakly, despair overwhelming her.\n\n\"I can keep you here as long as I like...\"\n\nThe despair was all-encompassing, almost to the point of apathy, her instinctive struggles, fruitless anyway against the strength of the tentacles, diminishing.\n\n\"Don't worry, I won't actually keep you here forever. I'll send you back above soon. Your family won't even know you were down here. Even if they come into the room, they'll just assume you went outside or something. Only the mongrel will know where you went, but he can't do anything about it anyway, and he can't tell your family where you are.\"\n\nDespite the encroaching apathy, she felt a surge of desperation.\n\n\"Please don't do this, please let me go, I won't tell anyone, please...\"\n\nThe voice tsked her.\n\n\"I thought we were getting somewhere. I thought you realized I'm not letting you go anytime soon. Not until I've sampled...every little inch...of your gorgeous body.\"\n\nTo her horror, another tentacle came from the shadows and landed on her stomach. It slid down and curled into the waistband of her boxers. She tried to jerk away from it, but could not move, only able to watch as it flexed, and tore her boxers in half, revealing the tender pink of her sex. The boxers were cast aside like her tank top, and the tentacle eased further down, its coolness meeting her sex.\n\nShe whimpered, trying to struggle away from it, trying as well to ignore the strange sensation of that coolness rubbing over her warm folds.\n\n\"I caught a glimpse of your body that night, when you were changing clothes.\" \n\nShe whimpered again.\n\n\"I had to get a closer look. Seeing it again tonight, when you were changing, only made me want to more.\"\n\nShe thought back to earlier in the night, when she had so innocently changed into her sleepwear, not thinking twice about being naked in her own bedroom.\n\nThe tentacles wriggled on her, the one on her breast moving to the other one to coil around its ripe swell, the one at her sex caressing gently over her folds.\n\n\"So young...so lovely...so luscious...\"\n\nShe jerked, a bit more fight coming up inside her.\n\n\"So, you're going to rape me?\" she asked. \"Is that what you're going to do? You've known me since I was a child, watched me grow up. Don't you care for me at all?\"\n\nThe voice fell silent for a few seconds, giving her some hope that she had perhaps gotten through.\n\n\"You have no idea how much I care for you, Laura. You're right. I've known you for a long time, watched you grow up, and I always cared for you, even when you were scared of me. But it wasn't until I saw you that night, and saw the beautiful woman you had become, that I knew I had to have you. I did tell you earlier that I have no intentions of hurting you.\"\n\n\"Then why are you going to rape me? If you cared about me, you would let me go.\"\n\nThe voice fell silent for a few seconds again, another slight hope bubbling up inside her.\n\n\"Then I would never have you, Laura. And I want you. Oh, how I want you...\"\n\nShe groaned in despair.\n\n\"Besides,\" the voice continued, \"this time will be rape, but if this goes as well as I hope it does, I will not be forced to do this to you again...you will give yourself to me.\"\n\nShe shook her head.\n\n\"I would never-\"\n\n\"Just accept it,\" the voice interrupted. \"Perhaps if you just accept it, you will enjoy it. As I have said, I do not want to hurt you. I just want...you.\"\n\nShe wept, the despair returning in full force, all the fight leaving her.\n\n\"There we go. Now, just lie back. I'll do all the work.\"\n\nThe tentacle at her sex nudged at her slit, making her shudder in revulsion. \n\nMore tears fell from her as it rubbed up and down at the entrance to her womanhood.\n\n\"Please,\" she begged through halting sobs, \"be gentle...I've never...I've never...\"\n\nThe tentacle stopped.\n\n\"Ohhh...\" the voice crooned in understanding.\n\nThe tentacle at her breast moved to her cheek and wiped away a few tears.\n\n\"I am...truly honored to be your first. I promise you; I will be gentle.\"\n\nThe tentacle nudged again at her slit, and as she mewled in fright, eased carefully through, the strange coolness of the shadowy appendage meeting the warmth of her tender channel. Another shudder of revulsion washed over her at the intrusion, at the way the tentacle wriggled slightly, at the lewd sigh the voice let out as it slipped a bit deeper.\n\n\"So warm...so tight...so soft...\"\n\nShe sobbed weakly.\n\nThe tentacle curled and crooked, testing out her channel, drawing another sob from her. Although she was not willing to watch, it was impossible to ignore the presence there. She had touched herself often enough to be comfortable with having her fingers inside her, but the tentacle was thicker, and cooler in temperature. That it belonged to the monster under her bed and that said monster was currently raping her, were two more crucial differences.\n\nAs she sniffled, the tentacle that had wiped away a few tears returned to her breasts, slithering all over the heaving flesh, curling around the nipples, dipping down into the valley of her cleavage. She looked away, keeping her gaze aimed up at the vast darkness surrounding her.\n\nThe tentacle inside her slipped deeper. A whimper fell from her, followed by another sigh from the voice.\n\n\"Is this feeling as good for you as it is for me?\" the voice asked breathlessly.\n\nShe shook her head.\n\n\"Hmm...what can I do to make it feel good for you?\"\n\n\"Stop,\" she answered meekly. \"You could stop.\"\n\n\"Oh, Laura,\" the voice purred, \"every time I think we've taken a step forward, we take two back. I thought you understood...I'm not going to stop...\"\n\nAnother tentacle appeared from the shadows and dipped under her. As she squirmed, it found her ass and rubbed against the cheeks.\n\n\"Not until I've savored...every...single...inch of you...\"\n\nShe sniffled in fright.\n\n\"But I do want to make it feel good for you. So that we can share this pleasure. Tell me how I can make it feel good for you.\"\n\n\"You can't,\" she sobbed, shaking her head, \"you can't make it feel good, you can't make me feel good while you're raping me...\"\n\nThe tentacle inside her nudged a bit deeper.\n\n\"I will take that as a challenge.\"\n\nShe groaned in despair, more tears dribbling down her cheeks.\n\nThe tentacle slid back suddenly, and then pushed forward, not moving quickly, but its movements enough nevertheless to make her whine in discomfort.\n\nAnother appeared, and joined its compatriot at her breasts, her instinctive struggle unable to stop it.\n\n\"Such a lovely figure you have...\"\n\nShe whimpered, her back arching as the tentacle inside her slid back, and then pushed forward.\n\nSo far, the voice had kept its promise of gentleness, and the tentacles' movements had been careful, so she felt no pain, just the intrusion into her body and the coolness of the appendages inside and on her. But the lack of pain did not translate into pleasure. Fear still gripped her, as did the utter horror of the situation.\n\nThe tentacle inside her moved steadily, back and forth, back and forth, rubbing at the walls of her channel as it went. \n\n\"Ohhh...I should have done this sooner...we could have been together sooner...\"\n\nShe let out a little sob.\n\nThe tentacle pushed deeper, opening her up just a bit more. She groaned, feeling that penetration acutely, the cold appendage curling curiously in her womanhood, its presence a bizarre sensation. \n\nShe forced her eyes to stay fixed on the empty space above her, despite the temptation to watch the tentacles, to watch for what they might do before they did it. \n\nAnother push opened her up more. Her channel twitched around the intruder.\n\nAnd then the tentacle curled, swiping suddenly over a sensitive spot inside her.\n\nShe moaned, the sound not an expression of miserable fear, but rather soft satisfaction.\n\nImmediately, revulsion swept over her, that she had found even the slightest of pleasure in this situation.\n\n\"Did that feel good, Laura?\"\n\nShe shook her head, letting out a disbelieving sob, a few more tears coming out.\n\n\"Please, Laura, I need you to be honest with me. Did that feel good?\"\n\nShe shook her head again.\n\nThe tentacles at her breasts coordinated in rubbing over her nipples, and at the same time, their counterpart inside her swiped over the same sensitive spot.\n\nShe moaned again, her back arching, a quiver of delight running up her figure.\n\n\"Sounds like it felt good,\" the voice crooned.\n\nAnother disbelieving sob came out, and she shook her head a third time, steeling herself against another swipe at that sensitive spot.\n\nWhen it came, she could not stop herself from moaning.\n\nThe voice chuckled.\n\n\"I know it feels good. But I want to hear you say it.\"\n\nShe did not reply but failed to hold back another moan when the next swipe followed.\n\n\"Laura, I need you to be honest with me.\"\n\n\"It feels good,\" she whimpered, more tears falling. \"But it doesn't mean anything.\"\n\n\"Come on now, that's just hurtful,\" the voice teased. \n\nShe whimpered again.\n\n\"Do you want me to do it again? Be honest.\"\n\nShe bit her tongue in expectation of another swipe.\n\nIt came, and she again failed to hold back a moan, her back arching, her hips bucking.\n\n\"You can lie,\" the voice told her, \"but your body can't. I can feel you getting wet.\"\n\n\"It doesn't mean anything...\"\n\n\"On the contrary. It means everything. At least to me.\"\n\nAnother swipe came, sending a shudder down her spine, yet another moan spilling from her.\n\n\"Shall I do it again?\"\n\nShe sniffled, and then nodded in defeat.\n\nThe tentacle swiped over that spot inside her, but then she felt it nudge deeper. A second later, another swipe came, and as the tentacle pushed further through her channel, she realized that it had somehow divided itself in two, to give her pleasure, and continue the exploration of her womanhood.\n\nThe voice sighed contentedly as the tentacle set a calm pace violating her. There was still a surprising amount of care and gentleness, and the constant swiping over that sensitive spot added pleasure to the bizarre mix of sensations. She shuddered again, trying to repress more moans, and failing, unable to adjust to the physical delight even as her revulsion did not dissipate. Accompanying the revulsion was shame at how her body was reacting. The shame was strong; telling herself that the pleasure meant nothing, that it was only an instinctive reaction to stimulation, did nothing to diminish it. \n\n\"This feels good, now, Laura, doesn't it?\"\n\nShe nodded again, refusing to answer verbally, keeping her eyes fixed above her.\n\n\"How about this?\"\n\nTwo more tentacles formed from the shadows. She watched nervously as they approached her breasts. More of that strange coolness landed on her heated flesh. They rubbed at her nipples, their brethren already there busy coiling around the lush swells surrounding those stiff buds.\n\nAnd then the newcomers latched onto her nipples, their ends opening like little mouths and sucking at them. \n\nShe jerked, crying out, that off-putting coolness centering on her nipples, a stronger shudder running over her. With the pleasure came more shame.\n\n\"And this?\"\n\nAnother tentacle approached, ignoring her desperate whimpers, and landed on her belly. As the new arrivals suckled at her nipples, forcing more humiliating delight into her nerves, it delved past her midriff, and slithered atop her folds, rubbing over them in conjunction with its predecessor moving steadily inside her. She whined miserably, and then moaned when it dragged over her clit, a rush of pleasure bursting through her.\n\n\"Ooh, what is that?\" the voice asked curiously, dragging it back over her clit.\n\nShe bucked at another rush of pleasure.\n\nThe combination of the tentacle inside her swiping over that sensitive spot and the newcomers sucking at her nipples was potent, but it was greatly strengthened by the newest of their number now focusing on her clit. She bucked again, feeling a definite pleasure bubble up inside her.\n\n\"Mm, there we go...\"\n\nThe tentacles had their way with her, sliding back and forth slightly faster now inside her, swiping over that sensitive spot, caressing her breasts, suckling at her nipples, squeezing her ass, rubbing her clit. She tried to will away the pleasure but found herself failing terribly. Her body struggled to process the steady stream of positive sensations, the shame inside her growing as well.\n\nInside her, that divided tentacle shoved deeper, reaching a place that had not felt intrusion before, that awkwardness quickly dissipating thanks to the building pleasure. \n\nAs the monster under her bed raped and defiled her, she fought fruitlessly against the pleasure. It was one thing to give in to despair at her predicament but another entirely to find any enjoyment from this violation. \n\nHowever, the tentacles were insistent, and her body was steadily betraying her. She could feel her juices starting to leak from her slit, and her channel clutching at the surging tentacle there as it drove deeper still. The part of it working at that sensitive spot kept up the same rhythm, pausing for a few seconds in between swipes. The pleasure built, shudders running all over her, more moans spilling out unbidden. Tears still spilled out with them, but they were of shame and disgust, not fear and horror. \n\n\"You feel so good,\" the voice groaned lecherously, \"just so good...why did it take you leaving and coming back for me to realize how beautiful you are? I could have had you so much sooner. We could have spent so many nights together...\"\n\nThe obvious delight that the monster took from her, from violating her, sickened her, a stronger sob coming out amid the uncontrollable moans. The shudders that continued to cascade over her were mostly from the building pleasure, but a few were from revulsion. She shut her eyes, trying again to will away the pleasure.\n\n\"Open your eyes, Laura. Right now.\"\n\nShe whimpered, but as she was still helpless, she reluctantly opened her eyes.\n\n\"Good girl. Keep your eyes open. Don't close them. In fact...\"\n\nAnother tentacle appeared and snaked behind her head. She whimpered again, struggling as it gathered up the loose tresses of her hair, coiling around them like a nightmarish hair-tie. \n\nAnd then it yanked, pulling her hair up, tugging her head along with it, forcibly craning her neck. She whined from the discomfort, and then at the horrifying, obscene sight before her. \n\n\"I want you to watch everything I do to you...so, make sure to keep your eyes open.\"\n\nThe tentacles wriggled on her pale figure, the inky black appendages standing out starkly. Her breasts were mostly covered by the four of them stationed there, the two roiling around aimlessly, the other two sucking at each nipple. Further down, the tentacle at her clit rubbed over it, lounging on her midriff, while she could see part of its nearby compatriot, the length still left outside her waiting patiently. The last tentacle squeezed and kneaded at her ass, impossible to ignore even if she could not see it. \n\nShe sobbed, tears thankfully blurring her vision.\n\n\"Such a lovely body...\"\n\nThe pleasure in that soft purr made her sob harder, shame burning inside her, the understanding of her helplessness not making that shame any easier to stomach. \n\nThe tentacle inside her sped up, sliding back and forth in her slick channel. The portion swiping at that sensitive spot had slowed, taking more time in between swipes, occasionally inching deeper or shallower to try out another spot, returning to that one spot once a similar reaction was not observed. \n\n\"So good...you feel so good, Laura...so amazing...\"\n\nShe felt the physical pleasure build. There was nothing she could do to stop it, and she found herself dreading its natural endpoint. Almost worse than feeling it build was watching her own degradation, and knowing that it was greatly satisfying this perverted, sadistic monster.\n\n\"I never thought I could feel something like this...so wonderful...so delightful...\"\n\nThe barrage of bizarre sensations continued, intrusions and liberties taken, appendages pumping, the monster purring lewdly.\n\nAnd then the tentacle at her clit latched onto the sensitive nub, sucking with the mouth-like aperture at its tip.\n\nShe jerked wildly, squealing at the sharper pleasure.\n\nThe tentacle slurped all over her clit, forcing more harsh stimulation into her already overwhelmed body. More squeals spilled from her as well. \n\nThe shame receded somewhat, making room for the sharper, harsher sensations, the pleasure rising quicker.\n\nEvery tentacle sped up or strengthened their efforts.\n\nThe appendage inside her divided itself between fucking deep into her channel and rubbing at that sensitive spot further back inside her. The two at her nipples suckled harder, pulling slightly at the stiff buds, while the two caressing over her breasts squeezed possessively at them. The tentacle at her ass kneaded roughly at the cheeks, coiling, squirming, wriggling. The last addition to the proceedings slurped thirstily at her clit, provoking an almost painfully fierce delight.\n\nThe pleasure roared higher, surging towards climax.\n\nThe overpowering sensations robbed her of any logical thought beyond an understanding of the oncoming orgasm.\n\n\"Oh god, I'm gonna cum...\" she mewled, feeling an instinctive rush of shame dissipate immediately in the face of that approaching climax.\n\n\"Yes, Laura, yes! Cum for me...don't be afraid, don't be ashamed...just cum for me...\"\n\nShe strained mindlessly against the tentacles binding her, her back arching, her legs kicking, her hips jumping. Higher and higher rose the pleasure, her squeals growing louder and louder, the tentacles speeding up and strengthening their efforts further. \n\n\"Oh god...\" she whimpered, at the precipice of ecstasy.\n\nThe orgasm struck, strong and vicious, her back arching harder, her muscles clenching, her channel spasming. Through the haze of ecstasy, she heard the voice moan lasciviously. She herself could only grunt weakly as the euphoria washed over her. The shame disappeared, replaced by bliss, leaving her unable to think straight.\n\nEcstasy bled into afterglow slowly, the last vestiges of the orgasm making her shudder. As the harsh euphoria became soft satisfaction, she felt some of the tentacles leave her body, her channel clutching as that intruder retreated, her flesh feeling cooler where the appendages had grabbed and squeezed. Those around her wrists and ankles, and the one forcing her head up, remained.\n\nThe afterglow soon dissipated, and in its place returned shame and disgust.\n\nThe seven tentacles that had violated her were hovering lazily above her.\n\n\"That was wonderful, Laura. I enjoyed it so much. I know you did too.\"\n\n\"No...\" she sniffled, shame swelling to a strong throb, tears brimming. \"No, I didn't...\"\n\n\"Don't deny yourself this pleasure.\"\n\nShe sobbed, hating that seductiveness, that self-assurance, that sadistic desire that had led the monster to capture and rape her. \n\n\"I want to do that again. You should too.\"\n\n\"I don't,\" she whined, \"please, I don't...\"\n\nThe tentacles moved, and she jerked fearfully as they took their places.\n\nOne slid inside her womanhood, quickly filling the tender channel, pushing deep, making her buck. Another went to her clit, rubbing there, drawing a yelp from her. Two latched onto her nipples, sucking at them, while two more coiled around the swells of her breasts, squeezing and stroking. The last did not go to her ass, but rather roamed, slithering over her tensing belly, along her slim thighs, down her toned calves, in between her painted toes. ",
        "The voice sighed happily as she sobbed, the pleasure building despite the shame and disgust.\n\nShe was once again forced to watch her own degradation, the shadowy appendages defiling her young, nubile figure. Her tears obscured her vision somewhat, but the inky black of the tentacles was hard to miss.\n\n\"So lovely...and you taste so good, too...your juices, mm, they're delicious...\"\n\nThe monster now knew how to provoke orgasm, so the tentacles worked in easy concert. Shudders broke over her from the stimulation her body interpreted as positive, while she unconsciously let out moans that added to her shame.\n\nWith her previous orgasm so recent, her body was primed for another, so it took less time for one to approach. She tried to will the ecstasy away, clenching her muscles to provide some sort of defiance. \n\nThe attempt was a failure, and quickly, the orgasm struck her, just as strong and fierce as its predecessor. Again, she was unable to do much more than grunt feebly and tremble uncontrollably, and once again, the shame disappeared as euphoria overwhelmed her.\n\nThe tentacles left her again to let her enjoy the afterglow.\n\nThe afterglow did not last long however, and she whimpered weakly, the shame surging back to full strength. \n\n\"Ahh,\" the voice sighed, \"just wonderful...\"\n\nTears brimmed at her eyes from the potent mix of shame and revulsion.\n\n\"Are you finished with me?\" she asked pitifully. \"Can I...can I go home now?\"\n\n\"No, Laura, no...I'm not even close to done with you.\"\n\nAs she sobbed, one of the tentacles moved, dipping underneath her. She jerked as it landed on her back. \n\n\"I told you already. I'm going to savor you.\"\n\nIt crept down over her lower back.\n\n\"Every...\"\n\nIt reached her ass, and squeezed at a cheek, drawing another sob from her.\n\n\"Single...\"\n\nIt squeezed at the other cheek.\n\n\"Inch...\"\n\nIt nudged in between the cheeks and found her asshole.\n\nShe jerked in terror.\n\n\"Please!\" she shrieked. \"Please, no, not there!\"\n\nOne of the other tentacles stroked over her cheek. She tried to whip her head to the side, but the tentacle around her hair yanked her back.\n\n\"Relax, Laura...\"\n\n\"No, please, I don't want that, it's disgusting, please, not there, please...\"\n\n\"I will be gentle, I promise. I will do my absolute best to make it feel good...but I will have you, every single inch of you.\" \n\n\"Please...\" she begged, crying harder now, frightened and disgusted and horrified by the sexual appetite the monster was displaying.\n\nTwo tentacles landed on her breasts and sucked at the nipples. As she bucked, a little moan escaping through her sniffles, another caressed at her clit, a spark of pleasure bringing out another moan.\n\n\"Just relax...I made it feel good for you before...I can do the same now.\"\n\nThe tip of the appendage brushed over her asshole, and then pushed gently.\n\nShe whined, trying to jerk away, but the binding around her ankles kept her in place.\n\nThe tip eased through, wriggling into her insides, the strange sensation making her sob.\n\n\"Oh Laura...and I thought your cunt was tight...\"\n\nThe tentacle pushed gently again, sending another inch or so into her. Her belly clenched, unaccustomed to any sort of penetration there. \n\n\"Oh, this is incredible...\"\n\nShe whimpered, trying to jerk away again but unable to overcome the strength of the binding around her ankles. \n\nThe tentacle slid deeper, drawing a groan from her, the voice sighing in delight.\n\nThe pleasure from the attention paid to her nipples and clit was strong and distracted somewhat from the sensation of anal penetration, but the discomfort of that intruder wriggling inside her could not be entirely ignored.\n\n\"How does it feel?\" the voice asked. \"Does it feel good? Does it hurt?\"\n\n\"It hurts,\" she said meekly.\n\nThere was, in fact, no pain, although there was plenty of discomfort and awkwardness, along with the fear and terror she had been feeling almost the entire time. But she found herself hoping that such a pathetic admittance would gain her some sympathy, and the monster would stop.\n\n\"Oh Laura,\" the voice purred instead, \"don't lie. Be honest now. I need to know how it feels.\"\n\nShe sniffled softly, that spark of hope quashed like all the others had been.\n\n\"Tell me how it feels.\"\n\n\"Weird,\" she admitted through more tears. \"Uncomfortable.\"\n\n\"Hmmm...I can work with that.\"\n\nShe sniffled again, and the tentacle near her cheek wiped away a few of her tears.\n\nThe tentacle inside her pushed deeper. Its brethren at her nipples and clit carried on, sucking at the former and slurping at the latter, funneling more pleasure into her overwhelmed nerves, helping to distract somewhat from the anal penetration.\n\nThe discomfort and awkwardness of that penetration were ultimately no match for that building pleasure. Another orgasm washed over her soon, the shame again disappearing briefly. But the presence of that intruder, even as it stopped to let her enjoy the orgasm, shortened the afterglow, bringing back the shame quicker. \n\nThe tentacles at her nipples and clit, which had also stopped, picked right back up where they had left off. As the tentacle in her belly slid deeper, very gently forcing her innards to make way, the pleasure built back up. She squirmed and writhed, hating that pleasure, hating the way her body reacted to it, hating the weak shudders and unbidden moans that showed her mindless enjoyment of what the monster was doing to her. \n\nAnother orgasm washed over her, and again, the afterglow was short.\n\nBut when the afterglow dissipated fully, she realized that the discomfort and awkwardness were now gone.\n\nInstead, there was a sensation almost like a slight ache in her belly, but it was not entirely unpleasant. When the tentacle nudged deeper, squishing through her insides, she moaned, her abs clenching fitfully.\n\nThe shame came rushing back, and she despaired at her body hitting a new low finding enjoyment in this anal violation.\n\n\"How does it feel now?\" the voice asked breathlessly. \"Because it feels incredible for me.\"\n\n\"Weird,\" she whimpered.\n\n\"Bad weird or good weird?\"\n\n\"Just...weird...\"\n\n\"Hmm.\"\n\nThe pleasure built back up as the tentacles at her nipples and clit resumed their sucking. She sobbed, unable to prevent the rise to orgasm no matter how hard she tried to force her body to ignore it.\n\nThe next orgasm came quickly. \n\nJust as it began to bleed into afterglow, the tentacles inside her and on her, which had stopped during her previous orgasms, snapped back into action.\n\nShe cried out as they moved together, the one in her belly sliding back and pushing forward, the two on her nipples suckling hard, and the one on her clit slurping eagerly. All four defiled her as they sent her towards another orgasm.\n\nIt struck, the intense ecstasy cascading over her trembling figure.\n\nAnd again, as it became afterglow, the tentacles started moving again, fucking through her insides, suckling at her nipples, sucking at her clit. The pleasure ratcheted back up, a mindless cry falling from her.\n\nThis time, the tentacles did not stop moving at all, wriggling and pumping and slurping through her orgasm, sending her into another right after it, and then another.\n\nThe shame fell away, as did the revulsion and the fear, replaced entirely by a decadent delight. She moaned, her asshole clutching tight to the tentacle invading it, her back arching sharply. The haze of constant ecstasy made it difficult to think or do much beyond simply take in the stimulation.\n\n\"Every inch of you,\" the voice crooned. \"Every...single...inch of you...\"\n\nThe tentacle near her cheek snuck closer to her face and poked at her lips.\n\nAs she moaned again, it slipped into her mouth. She jerked in surprise but did not struggle, only watching dimly as more of it slid past her lips, slithering over her tongue, a faint muskiness hitting her taste buds. The tip met the back of her mouth and the start of her throat, that intrusion making her gurgle lamely. The ecstasy tearing through her was more than enough of a counterbalance to the odd sensation of having her throat penetrated, the appendage worming into her gullet. She gagged around it, feeling that familiar coolness in another place unaccustomed to invasion. It shoved further down, a lewd quiver running over her from how the monster so casually violated another part of her.\n\n\"Mm,\" the voice purred, \"another tight little hole...your body truly is a treasure...and it's all mine...\"\n\nThe tentacle in her stomach moved faster, pumping into her belly, the slight ache there translating into more pleasure. \n\nAnother orgasm struck, her eyes rolling back in their sockets. The squeal she let out was muffled by the tentacle now pushing even further down her throat, a soft retching replacing the squeal. It registered dimly through the storm of ecstasy that although the tentacle was definitely solid, she was somehow able to breathe around it.\n\nShe shuddered weakly, utterly helpless, but feeling a strong and relentless pleasure, no shame, no fear, no revulsion, her brain overwhelmed by the steady stream of bliss. Inside her, the two tentacles forced their way deeper. There was no escaping the sensations of that dual intrusion, her body violated from two directions, the cool appendages wriggling enthusiastically, inching closer to each other, as if trying to meet in the middle of her. The ache at her belly increased, but it only swirled into the pleasure. Her throat was forced to stretch, but there was no discomfort. She stared down at her own degradation, the tentacles at her breasts sucking hungrily, the one at her clit slurping happily. Her stomach clenched, and she squinted, thinking she could see a bulge from the squiggling of the tentacle buried there. Movement drew her eyes away, to the tentacle that had lodged itself in her throat, specifically the portion still outside her; she noticed idly that she could not tell where it began, its length an endless stretch of shadows. \n\nMore movement drew her eyes to her right, where three more tentacles appeared.\n\nTheir presence did not provoke fear or disgust. Instead, she stared, too disoriented by the unrelenting pleasure to struggle as two landed on her breasts, coiling around them and squeezing possessively. \n\nThe third landed on her belly, squirming energetically, mirroring its brethren inside her. As she watched, it crept down.\n\n\"Why don't we make it three for three?\"\n\nThe tentacle slid through her slit.\n\nShe jerked wildly, moaning as it rubbed at her walls, driving deep, stretching her channel again. There was little carefulness this time, as her juices provided a slick lubrication, letting the tentacle spear into her, joining its compatriots in a triple violation. The others sped up as well, spurred on by the new arrivals.\n\nAn orgasm slammed into her, more intense than any of the previous, the harsh rapture erupting out over her. She shrieked, the outburst muffled, her body spasming, her head trying to snap back but held in place by the tentacle around her hair. \n\n\"Yes, Laura, give in to me, just like this, yes!\"\n\nThe tentacles sped up. There was no ache now and no discomfort, only ruthless delight, an onslaught of euphoria that scrambled her brain further, muddling any thoughts besides those of pleasure. An obscenely wet sound issued from nearby, and she realized numbly that it was her channel squelching around the tentacle pumping through it, her juices flowing copiously from the boundless bliss.\n\nThe monster threw aside any lingering caution and set the tentacles inside her to a frantic pace. The four at her chest likewise grew more assertive, the two at her nipples sucking harder, almost to the point of pain, the other two squeezing tighter around her breasts, more almost-but-not-quite pain roiling through her nerves. The tentacle at her clit slurped harder at the sensitive nub, still more exquisite agony bursting out over her. \n\nShe came again and again and again, crying out around the tentacle in her gullet. Every little sensation added more delight, from the way the bindings at her wrists and ankles tightened, to the strange but far-from-off-putting taste of the tentacle on her tongue, to the new addition to the proceedings kneading at her ass.\n\nThe voice moaned, and she moaned back in mindless gratitude, perfectly aware that this state of constant bliss was thanks to the monster, that its handling of her had led to this empty-headed ecstasy, that her rape and ruination had somehow ended up very enjoyable.\n\nSeveral orgasms later, she felt the tentacles slow, and then start to draw back. She groaned from the acute sensations of those three appendages sliding through her, wriggling against her tender insides. A sudden desperation gripped her as they came closer and closer to leaving, the pleasure receding as a result of that concerted exit.\n\nThe tentacle that had ravaged her throat retreated over her tongue, its slight muskiness making her shudder, and past her lips, exiting her seconds before the other two did, leaving an aching emptiness inside her. The other tentacles left her body as well, swiftly and unceremoniously, adding to that ache.\n\nThe sudden desperation ignited a fervent desire as she felt her insides struggling to adjust to the emptiness.\n\n\"Please,\" she gasped, \"don't stop...\"\n\nA rush of shame swelled inside her. \n\nA thought accompanied it, fighting for prominence in her hazy, lust-addled mind. It told her she should reject the pleasure the monster gave her, that it was disgusting and just plain wrong to ask for more, that she should feel anger at the monster for violating her so eagerly.\n\nBut the shame could not stand against the need to feel that intense pleasure, so it disappeared, bringing that pesky thought back into oblivion with it.\n\n\"Don't stop...\"\n\nThe voice growled low, making her whimper, expressing need instead of fear. There was none of that, none of the shame, revulsion, disgust, horror. Only that need gripped her.\n\n\"Please...\"\n\nAnother growl came, and she looked up, her eyes focusing enough to see the nine tentacles hovering over her. The sight made her buck, the bindings around her wrists and ankles letting her move somewhat.\n\n\"Please...\"\n\n\"You're so beautiful,\" the voice murmured, all nine tentacles jumping forward and running all over her.\n\nShe moaned, watching them roam, their darkness so wonderfully obscene against her pale skin. \n\n\"And you're all mine...\"\n\nSeven headed to her breasts, blanketing the heaving mounds, rubbing, squirming, blocking them from view with their energetic movements. The pleasure built back up at the exquisite feeling of that coolness seeping into her heated flesh, providing comfort as well as delight.\n\nThe other two slid over her belly. One claimed her womanhood, the other her asshole, both put to use again. She cried out joyfully, loving how they forced her body to accommodate them.\n\nThe double penetration carried on, the tentacles pumping hard, the pleasure spiking higher.\n\nWith her mouth left empty, her lewd squeals, ecstatic shrieks, husky moans, and weak grunts all rang loud.\n\n\"The sounds you make,\" the voice groaned, \"they're so amazing...I don't think I'll ever get enough of them, of you...\"\n\nShe moaned in response, not to please the monster, but merely responding to its voice, that velvety crooning once terrifying her but now only reminding her who had given her such boundless pleasure.\n\nFrom the darkness surrounding her, more tentacles came, separating from the shadows one by one until there were too many to count, the inky army hovering over her. She moaned again, her eyes widening at the sight.\n\nThe tentacles approached her, and she bucked impatiently.\n\n\"Every inch of you, Laura...is so exquisite...\"\n\nThey landed on her, wriggling eagerly all over, thoroughly blanketing her, their weight light, their combined coolness delightful. She cooed, watching them cover the rest of her body.\n\nThe mass of tendrils stretched over her lower half, rubbing over her thighs, creeping along her calves, oozing up her feet, sneaking in between her toes. Her upper half was similarly overwhelmed, the tentacles lounging on her belly and breasts, curling around her sides to cover her back, running up her neck.\n\nThe mass snuck over her chin. A few thinner tentacles broke off to slither over her cheeks, up the bridge of her nose, over her forehead, a few worming over her left eye and obscuring her vision with squiggling darkness. \n\nShe looked down with only one eye, and moaned at the view, at the fact that she could not see her own body, as covered as she was in the tentacles. Even if she could not see it, she could feel that mass all over her, rubbing against her skin.\n\nThe bindings around her wrists and ankles loosened, and finally slipped off her. They split into smaller tentacles, and joined their brethren, those at her ankles quickly blending into the mass, those at her wrists streaming down her arms. She purred, and reached out to touch them, stroking affectionately, feeling them twitch at her caresses. As they coiled, she reached down, and let her fingers run over the mass atop her. A few tentacles broke off from the mass to rub against her palms, fingers, and wrists. \n\nShe realized then that the tentacles inside her had stopped.\n\n\"Just think,\" the voice crooned. \"We could have this every night...I could make you feel like this every night...\"\n\nShe moaned.\n\n\"What do you say?\"\n\nThe thought was enticing, but she was more concerned with the pleasure that he could give her. It was strong enough now, with just the tentacles squirming all over her, but she knew it could be even stronger. \n\n\"Please,\" she whimpered, \"don't stop...\"\n\nThe tentacles inside her started back up, shoving deep, ravaging her tender insides.\n\n\"Oh god, yes, please, don't stop!\"\n\n\"Don't worry, my lovely little Laura,\" the voice murmured, \"I have no plans of stopping anytime soon...\"\n\nShe moaned, bucking at the building pleasure, feeling an orgasm approach.\n\nAnother tentacle landed on her cheek and slithered towards her lips.\n\nShe opened them wide, letting it slide over her tongue and down her throat.\n\n++++++++++++++++++\n\nLaura woke up.\n\nAs the haze of sleep began to lift, she stretched, and then winced from the aches and pangs that popped up here and there. \n\nStill blinking away her slumber, she flung the blanket off herself.\n\nThe memory of last night came rushing back as she saw her body.\n\nHer smooth skin was dotted with bruises and red marks. She let her fingers run over them and bit her lip at that memory. Her breasts had suffered the most, their swells marred with spots of discoloration, light purple, yellow, and blue, her nipples very sensitive, a soft hiss spilling from her as she teased at them. \n\nShe ran her fingers down over her belly and found her sex. It was also sensitive, but a shudder ran over her as she eased a finger inside. It was a poor substitute for the tentacle that had fucked her channel raw, so she removed it and sent it further south.\n\nHer asshole was stretched slightly, thoroughly broken-in, and it twitched as she traced over it. The ache there made her quiver as she thought about how the monster had claimed it.\n\nShame bloomed inside her, as she remembered how she had submitted, giving in to the monster who had kidnapped and raped her, begging it for more.\n\nShe understood as she thought about last night that shame would be an appropriate response. \n\nBut the pleasure had been incredible, so much better than anything she had ever felt, and the monster had not actually hurt her. \n\nSo, the shame was fleeting.\n\nWincing a bit more, she slid off her bed, and peeked underneath it, not quite sure what she was expecting to see.\n\nThe tank top and boxers she had been wearing when the monster had abducted her were crumpled there, both ruined from the tentacles' enthusiastic baring of her body. She tossed them into the garbage next to her bed, and stood, stretching gingerly.",
        "Her mind went back to last night, remembering how the monster had used her ruthlessly, ravaging her nubile figure for a very long time, ignoring her occasional and always very brief lapses into unconsciousness towards the end, those lapses interrupted by the next orgasm washing over her. Exhaustion had dominated her by then, but she had not thought for a second about asking the monster to stop, obsessed with the pleasure she could still get and perfectly happy to let it use her to its heart's content. When it had finally shown mercy, its tentacles carefully slipping out from and off of her, she had barely reacted, at that point existing basically as an insensate, trembling wreck, barely able to do more than breathe, her body coated in sweat, the aches she felt now not cropping up quite yet. Her eyes had drifted shut again, and this time, there had been no next orgasm to disrupt her sleep.\n\n\"I need a shower,\" she murmured, grabbing a towel from her dresser, and wrapping it around herself, still wincing.\n\nHer door only opened a few inches before it hit something solid.\n\nShe heard a whine, and then Rufus stuck his head around the door.\n\n\"Oh, I'm sorry,\" she told him, \"I didn't know you were there.\"\n\nHe darted past her, headed straight for the bed, and stuck his nose underneath it.\n\nShe turned away, rolling her eyes in bemusement, and padded to the bathroom.\n\nThe door opened as she approached, and her mother came out.\n\n\"Oh, hey, honey, you're up! How'd you sleep?\"\n\n\"Alright,\" Laura answered, suddenly self-conscious, hoping that no bruises or red marks were visible.\n\nRufus came out from the bedroom, and barked at her, his tail wagging as he hurried towards her.\n\n\"He was barking and growling like crazy outside your door last night,\" her mom said. \"I had to put him in the basement. I've never seen him act like that. Was everything okay?\"\n\nShe nodded.\n\n\"Yeah. I fell off the bed, and I think he thought I was really hurt. I had to lock him out because he wouldn't stop checking on me and I was tired.\"\n\n\"Oh, are you okay?\"\n\n\"Yeah, I'm fine, just some bruises here and there. Guess I need to get used to my bed.\"\n\nHer mother chuckled.\n\n\"Well, hopefully you don't fall off again.\"\n\n\"I'll try not to.\"\n\nHer mother padded off, leaving Laura and Rufus in front of the bathroom.\n\nHe looked expectantly at her.\n\n\"Are you going to come into the bathroom with me?\" she asked.\n\nHe chuffed at her.\n\n\"Alrighty then.\"\n\nShe slipped inside, Rufus following dutifully, and turned on the shower.\n\nThe water, as usual, took a few seconds to get warm, but once it did, she dropped the towel, and stepped under the soothing spray, Rufus standing guard by the toilet.\n\nHer fingers crept over her belly to her sex. Another thought of last night made her shudder, and she eased two fingers into her tender channel.\n\n++++++++++++++++++\n\n\"God, I'm tired,\" her brother yawned, stretching on the couch.\n\n\"You didn't do anything today,\" Laura snarked.\n\n\"I know. And it was exhausting.\"\n\nShe laughed as he dragged himself to his feet.\n\n\"Good night,\" he mumbled over his shoulder on the way out of the room.\n\n\"Good night,\" she murmured back.\n\nRufus was on the floor next to her, but he was staring at her, surprisingly alert.\n\n\"Time for bed, Rufus,\" she said, heaving herself from the recliner and leaving the room, the protective dog following along beside her.\n\nShe bit her lip as she padded up the stairs. \n\nThe day had been spent lounging around, watching television, playing with Rufus, catching up with her brother and parents. But foremost in her mind throughout the day, unbeknownst to them, had been thoughts of the monster under her bed.\n\nThose thoughts had provoked no shame, no fear, no disgust, nothing besides anticipation, and increasingly, appreciation. \n\nAfter all, besides the bruises and aches, which she had accepted as happy little reminders of the pleasure she had felt last night, the monster had not hurt her, and in fact had done its best to please her, succeeding greatly in that endeavor. \n\nSo, when she stopped outside her bedroom, the quivers that ran over her were from excitement, not fear.\n\nShe turned to Rufus, who was right next to her, waiting for her to open the door.\n\n\"Stay,\" she said firmly.\n\nHis face drooped, but he did not move as she opened the door and slipped inside.\n\nThe second she closed and locked the door, he whined, and she winced as she heard him scratch at the door, desperate to reach her. The pity she felt for him did not stop her from turning away and padding carefully to her bed.\n\nShe took off her clothes in the dark, biting her lip as she imagined the monster eagerly ogling her. \n\nOnce she was naked, she stood next to her bed, waiting expectantly.\n\nBut ten, twenty, thirty seconds passed without anything happening.\n\nAfter ten more seconds, she spoke up, making sure to keep her voice low enough so no one could hear her in the hallway.\n\n\"Well? Aren't you going to take me?\"\n\nNothing happened for another ten seconds.\n\n\"I'm standing here naked. Isn't that enough of an invitation?\"\n\nHer eyes had adjusted enough to the darkness; she still did not see any signs of the monster.\n\nAnother ten seconds passed, and then she understood.\n\n\"Take me,\" she said softly. \n\nAn excited shudder ran over her.\n\n\"Not just tonight...but every night. Every single night. I'll have to go back to school in a few months, but until then...I'm all yours.\"\n\nShe heard a lewd purr, the sound sending another shudder over her.\n\nTentacles darted from under the bed, wrapping tightly around her ankles, making her moan. More followed, embracing her and then lifting her off her feet. She cooed at the sensation of that familiar coolness meeting her skin, squirming restlessly as the tentacles dragged her underneath the bed, her room disappearing as she sunk down through the floor.\n\nThe underside of her bed gradually receded, until that shadowy, featureless space yawned around her.\n\nThe tentacles set her down gently, and immediately began to caress at her figure. She spread her legs, letting one slide over her slit.\n\n\"Hello, Laura,\" the voice crooned.\n\n\"Hi,\" she chirped.\n\n\"I'm so glad you've decided to give yourself to me. And how are you feeling? I'm concerned I might have overdone it last night...\"\n\nOne of the tentacles nuzzled at her cheek, and she giggled, giving it a kiss.\n\n\"I'm fine,\" she assured the voice. \"A little sore, but it's totally worth it.\"\n\n\"Should I go easy on you tonight?\"\n\nShe shook her head firmly and stroked at the tentacles wriggling all over her.\n\n\"Please don't.\"\n\nThe tentacle at her slit eased into her channel.\n\n\"I was thinking about you all day,\" she murmured breathlessly. \"About what you were going to do to me.\"\n\n\"And what am I going to do to you?\"\n\nA lazy smile crept over her lips as the tentacle inside her shoved deeper and a second nudged in between her ass cheeks.\n\n\"Whatever you want.\""
    ],
    "authorname": "majicman21",
    "tags": [
        "double penetration",
        "first time",
        "first time anal",
        "mindbreak",
        "monster",
        "non-consent",
        "tentacles",
        "triple penetration"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-monster-under-the-bed-3"
}