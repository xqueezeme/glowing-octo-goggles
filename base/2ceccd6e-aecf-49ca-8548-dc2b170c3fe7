{
    "title": "Life is a Soap Opera Act 01",
    "pages": [
        "This is the first of three parts in this series. If you are looking for a stroke story or quickie sex, hit the \"back\" button on your browser now because this is the wrong story for you. If you enjoy this part, please stick around for the next two chapters. Special thanks to my editor, michchick98. Enjoy!\n\n***************** \n\n\"Sir, may I see your driver's license please?\" the bartender nervously flashed the back of the debit card, showing \"Ask for ID\" written in bright red Sharpie. He had seen her working here several times before, but this was his first visit where she waited on him.\n\n\"I would be delighted.\" Gabriel's face broke into a wide smile. \"Thank you for asking; so few people do.\"\n\nWith a sigh of relief the bartender checked his license against the name on the front of the card. \"I always ask. After my purse was stolen last year, I know what a pain in the butt it is to have to deal with identity theft, so I have that on the back of my credit cards, too. You'd be surprised though, how many people get ticked off when you ask for their IDs.\"\n\n\"Yeah,\" Gabe agreed. \"If only they understood it's for their own protection.\"\n\nShe nodded. \"Let me go run this and I'll be right back.\"\n\n\"Thank you,\" he flashed her another appreciative smile. \"Oh, and could you please have the manager come by?\"\n\n\"Right away, sir.\"\n\nShe went down to the other end of the bar to run his card and leaned over the bar to talk to one of the servers. \n\nGabriel stared up at the big screen plasma TV above the bar. A baseball game was on but he only stared at it idly. The bartender returned and placed his card along with a pen and two slips on the bar in front of him. \"The bottom copy is for you; please sign the top one for me.\"\n\nHe smiled as she picked up the plates that held the remnants of his steak, potato and Bloomin' Onion, then carted them off. Not a minute later, a man in a shirt and tie came over behind Gabriel.\n\n\"Was your visit to the Outback tonight a good one, sir?\" he asked. Gabe could tell he was hesitant to ask; after all, people who ask for the manager in a restaurant usually have something to bitch about.\n\n\"It was excellent,\" Gabe replied. He was a regular and knew a fair number of the servers and bartenders on a first name basis. This manager was new, though. \"Shawna was great and even asked for my ID like my card says.\"\n\nThe manager smiled.\n\n\"I'd like to make an unusual request, though,\" Gabriel continued.\n\n\"I'll see what I can do.\"\n\n\"Look over my shoulder. . . . Do you see those four girls there in the prom dresses? Don't stare. Two in blue, one in pink and the fourth in the purple? I'd like you to bring me their check. Oh, and don't tell them who's picking up their tab.\"\n\nThe manager looked surprised for an instant, but that passed quickly. \"I'll find out who their server is.\"\n\n\"Thank you,\" Gabe said as he left.\n\nOf course, they probably weren't paying for their own dinner; their parents were likely springing for the meal, but in his mind that didn't make up for them not having dates. He thought back to his own prom, when he had gone with a girl he knew, but wasn't crazy about. By the time he had even thought about the dance, all of the girls he wanted to ask already had dates. Julie was really his fourth or fifth choice, and in all likelihood, he was probably her sixth or seventh choice.\n\nHe glanced over at the girls one more time. They were almost through with their meal and were talking and laughing, but with all the promgoers there, they were conspicuously the only group of girls.\n\nJust then, the thought crossed his mind that they were four lesbians attending the prom, but that didn't seem likely. The way they giggled and laughed and teased each other made them seem more like childhood friends on one of their last big nights together before they became adults.\n\nThe manager returned a couple of minutes later. Gabe looked over the bill, added a generous gratuity then signed both their bill and his own. He quickly gathered up his things and wanted to be out the door before they realised that their dinner was already paid.\n\nGabe took one last swig from his water and then headed towards the exit. He glanced over his shoulder and saw one of the girls talking to their server. He picked up his pace.\n\nIt was a warm night outside. The sun was just beginning to set. There was a soft breeze. A fair number of people were waiting for their tables on the benches by the parking lot. Gabriel headed for his car. He had just hit the button on his keyless entry and was reaching for the handle when he heard a voice coming his direction.\n\n\"Sir? . . . Sir?\" There was no mistaking the tone of a teenage girl. \"Excuse me, sir!\"\n\nGabe turned and saw one of the girls headed his way. It was one of the two in blue. She ran across the parking lot as fast as her high-heeled feet would take her, her shoes clacking! along on the pavement. He thought for an instant to ignore her and just get in his car and drive away, but decided that would be rude.\n\nShe was holding the hem of her dress up so she wouldn't trip over it and soon was standing in front of Gabriel. \"Excuse me, are you the man who paid for our dinner?\"\n\nHe looked her over, up close for the first time. She was pretty, but then again, everyone was pretty on prom night. She had cute dimpled cheeks and her hair was pulled up with flowers woven into the tight braids. Her face was round, but then again so was the rest of her body. The elegant dress flattered her generous curves. \n\nGabriel had to remind himself to look her in the eyes.\n\nAt first he thought to deny her question, but then he saw the other three girls emerge from the restaurant.\n\n\"Bailey!\" the other one in the blue dress called out, looking frantically around the parking lot.\n\nThe first girl was staring intently at him. Her big brown eyes bored into him.\n\n\"Did you pay our check?\" she asked again. Her tone wasn't accusatory. Just curious.\n\n\"Well,\" Gabe stammered. His face flushed. He hadn't meant to get caught. \"Um . . . yeah.\"\n\n\"Why?\" she asked softly. The other girls were hurrying over to where they stood in the parking lot.\n\n\"I . . .\" he started, but his voice trailed off. He put on a kind smile. \"No pretty girls should have to pay for their own dinner on prom night.\"\n\nGabe thought he saw her blush and smile slightly when he said \"pretty girls\". The other three had joined them.\n\n\"Thank you,\" she said.\n\n\"You're very welcome . . .\"\n\nShe blushed. \"Oh, sorry. I'm Bailey.\"\n\nHe reached out and gently shook her hand. \"Gabe.\"\n\n\"This is my twin sister, April,\" she pointed to the other girl in blue. \"These are our friends Kimmy and Morgan.\"\n\nGabe glanced over at the other three. Kimmy was wearing pink and Morgan was in purple. Both were slender and fit. All four were made up for the big dance. \n\nWhen he looked at April, Gabe never would have guessed she and Bailey were twins. Where Bailey was plump and round in all the right places, April was tall and slim. Her skin was darker and perfectly-toned. She wore a fashionable pair of glasses and had a million dollar smile.\n\nGabe made a point of looking back at the shorter sister and not gawking at her friends. He knew how hard it was to keep up with a sibling who was more popular in high school.\n\n\"It's nice to meet you all,\" he said politely. \n\n\"Did he pick up the bill?\" Morgan asked.\n\n\"Yes,\" Bailey replied. \n\n\"Thank you,\" they each said.\n\n\"Yes, thank you again, Gabe,\" Bailey said appreciatively.\n\n\"Gabe?\" Kimmy said, a flash of familiarity in her eyes. Where she had just seen a guy in his mid-thirties before, now she was trying to place his face. Gabe could see the gears turning in her head. Then the light came on. As it always did. \"Gabriel MacKenzie?\"\n\nHe smiled, trying not to appear self-conscious. \"Yup.\"\n\n\"Oh, my god!\"\n\nGabe watched as the younger girl's eyes grew starstruck.\n\n\"My mom is in love with you!\" She reached into her purse for her cell phone. Morgan and April began to giggle.\n\n\"Listen . . . I'm sorry about my friends.\" Only Bailey seemed like she was trying to carry on a normal conversation. \"They're usually not like this.\"\n\n\"It's okay,\" Gabe smiled gently. \"I guess it's better than not being recognised at all.\"\n\nBailey only shrugged. She seemed quiet and shy. Maybe she was one of those kids who never quite fit in and was \"invisible\" around school. Gabe knew exactly how she felt.\n\n\"You'll never guess who we ran in to at the Outback!\" Kimmy was saying into her phone. \"That guy you like from The Sun Also Sets! . . . Yes! Oh, my god! He is so much cuter in person . . . Yes . . . Yes! YES! Here, you tell him . . . Mr. MacKenzie . . . it's my mom . . . She thinks I'm making this up.\"\n\nThe teenager handed him the phone. He took it politely. \"Hello?\"\n\n\"Hi, Mr. MacKenzie,\" the mother sounded nervous. \"I'm such a fan . . . You have no idea how heartbroken I was when you left the show . . .\"\n\nThe fawning went on for a couple of minutes. Gabe was polite to the adoring fan and promised that he would let the girls take their picture with him.\n\nWhile Kimmy and Morgan tried to find some random stranger in the parking lot, the twins stood by and made some small talk.\n\n\"We're sorry for holding you up like this,\" April said. \"You don't have anyplace to go, do you?\"\n\n\"Not really,\" Gabe replied. In truth, he was thankful for even a little bit of company on a Saturday night. \"You're saving me from some work around the house.\"\n\n\"We're also sorry about our friends,\" Bailey apologised again. \n\n\"Nah, don't worry about it.\"\n\nOne of those awkward silences fell over the three of them. Gabe could tell they wanted to ask a million questions, but were worried about intruding on his privacy. It was actually very considerate of them.\n\nFinally, the other two reappeared with a friend from school. He was dressed in his tuxedo and found three digital cameras pushed into his hands.\n\nGabe stood in the middle of all four girls as the flash went off the first time. A small crowd had gathered around to see what the fuss was all about. He set his smile and turned on his public persona. Gabe generally hated paparazzi, but this was different. He hadn't been followed around for a while and it was refreshing to be recognised in public; a little boost to the ego was always welcome.\n\n\"One . . . One group picture . . . Hah, hah, hah!\" he said, doing his best imitation of the Count from Sesame Street. Everyone laughed. Some other folks were snapping pictures with their camera phones.\n\n\"You realise that we're going to spend the rest of our lives telling everyone we went to prom with a TV star, don't you?\" April asked him.\n\n\"That's okay,\" he replied with a smirk. \"I'm going to spend the rest of my life telling everyone I had four dates on prom night.\"\n\nThe second flash went off. \n\n\"Two . . . two group pictures . . . Hah, hah, hah!\" the crowd chanted.\n\n\"You also realise that these pictures are going to be all over MySpace and Facebook before dawn,\" Bailey said softly. He had his arm around her shoulder, the other around April. Her breath in his ear made the hairs on the back of his neck stand up. Impure thoughts raced through his mind. It had been so long . . . \n\n\"I was expecting before midnight.\" Gabe turned and smiled at the shy girl. \n\nThe boy taking the pictures motioned for the five of them to squeeze together. \"One more!\"\n\nThe four girls closed in around him.\n\n\"Goofy smiles! One . . . two . . .\" \n\nThe flash went off.\n\n\"Three! . . . Three group pictures! . . . Hah, hah, hah!\"\n\nThe crowd began to disperse. The four girls each thanked him again for dinner. He found that he was disappointed that the brief encounter was ending.\n\nKimmy, Morgan and April were headed towards their car, but Bailey lingered for a second. He looked into her pretty blue eyes. She started to say something, but stopped. After a false start or two, she finally spoke. \"I . . . um . . . don't suppose you'd actually like to go to the prom, would you?\"\n\nGabe met her gaze and could tell how hard it was for her to ask. There was a hopefulness to her. He almost said, \"No.\"\n\n\"Would they let me in like this?\" he motioned to his shorts, sandals and polo shirt. \"I'm a little underdressed.\" \n\nA disappointed look flashed across her face. Gabe sighed.\n\n\"But I can't let a pretty girl down on prom night.\" Her face lit up immediately. \"Would you slum with a date like me, or should I change?\"\n\n\"Oh . . . I don't know,\" she stammered. Then she started waving frantically to her sister. \"April! . . . April! Come here!\"\n\nThe other three girls came back to see what Bailey was shouting about. They huddled up. There was some giggling and a chorus of \"Oh, my gods!\" and \"This is sooooo cools!\"\n\n\"I'll tell you what,\" Gabe said. \"I only live a little ways away. I'll go home and change then meet you at the dance. Where is it?\"\n\n\"At school,\" Bailey replied. \"We go to Washington County High.\"\n\n\"That's quite a drive.\"\n\nThe girl shrugged. \"There aren't that many good places to eat out in the middle of nowhere.\"\n\nWashington County was a rural district well away from town. It was a small school and close to an hour away. \n\n\"I don't suppose you've ever been there?\" A disappointed look flashed across Bailey's face. \"Listen . . . we can't ask you to go all the way out there for us.\"\n\nGabe's heart leapt into his throat for a second. No young girl deserved this kind of heartbreak. Not on her prom night. Besides, it wasn't like he already had plans or couldn't afford a little country drive. \"Why don't you girls follow me home; I'll change and then we'll go to the dance.\"\n\nHer eyes lit up.\n\n\"I can't stay too long, though,\" he warned. \"And I probably don't want to know what kinds of things you girls have planned for afterwards.\"\n\nThe pair of them laughed nervously.\n\nBailey went back to her friends and Gabe got in his car. He led them back to his house. Actually it was the house he had built for his mother before she died. It was in an upscale neighbourhood with a gorgeous lakeside view. One of the perks of having a reasonably successful television career was being able to do nice things for his family.\n\nPulling into his driveway, Gabe got out and led the girls into the house. They waited in the living room while he went to the guest suite. He still couldn't bring himself to move into his mother's room, even a year later.\n\nHe kept a tux in the closet for fancy events and even though it fit a little tighter than it had the last time he put it on, Gabe slipped into it easily. \n\n\"My mom says we have to stop by the house,\" Bailey said, holding her hand over the mouthpiece of her cellphone. \"Kimmy and Morgan's parents are going to meet us there.\"\n\nGabe smiled. What had started out as a whim was becoming a big production. He almost regretted it, but the company of the four girls brought a little bit of light to an otherwise boring weekend. He noticed that the girls didn't wander around or touch anything. He only hoped that once he had kids, they'd be as well-mannered and polite as this crew.\n\nThe girls gathered up their things and they went to leave. Gabe reached for a pen and his pocket camera then joined the girls in his garage.\n\nApril started to give him directions to their house, but Gabe waved her off. \"You guys lead and I'll follow you. Write your address down and I'll let my GPS find the place if I get lost.\"\n\n\"Do you want one of us to ride with you?\" The hopeful look in Bailey's eyes made his heart skip a beat.\n\n\"Um . . . sure,\" he replied.\n\nThe drive out to the school started out awkwardly. Bailey was quiet and still a little starstruck. Gabe didn't want to come off as the creepy guy in his mid-30s hitting on an 18 year-old. He turned on the satellite radio and made a little bit of meaningless small talk.\n\nBailey and her sister were graduating the next weekend. Both were attending the local community college with plans to transfer to a 4 year university once they had earned their associates degrees. Their family was middle class, but not swimming in money. They couldn't afford to get apartments and would be living at home while going to school.\n\nAs they drove, the girl opened up and began to chatter on like a little girl. Gabe thought it was cute and sweet. She wanted to be a nurse. He watched her out of the corner of his eye, careful to watch the road, not the bosom that was surely taped with great care inside her strapless dress.\n\nShe didn't ask much about him, and he didn't feel like talking about himself. Both had a natural introversion that he tried to overcome with friendly conversation.\n\nThe drive took about forty-five minutes and soon they were pulling into her driveway. The house was on a good-sized lot with neighbours that were neither too close nor too far. The grounds were well-maintained with a garden that helped subsidise the family's food supply. \n\nGabe looked over at Bailey, but she wouldn't make eye contact with him. It seemed that she was a little embarrassed after being in the large McMansion he lived in. He sensed that the young girl was afraid he would think that she was a little too country bumpkin or white trash.\n\n\"Do you folks raise animals, too?\" he asked conversationally.\n\n\"Um-hmm,\" she stammered. \"We've got chickens and pigs and a couple of cows.\"\n\n\"Any horses?\"\n\n\"Not anymore,\" she replied and a sad look crossed her eyes. \"We had to sell them . . . feed's getting expensive and they cost so much to keep up.\"\n\n\"I'm sorry to hear that,\" Gabe said quietly. On impulse, he reached over and gave her hand a sympathetic squeeze, which made her smile.\n\nThe car rolled to a stop on the gravel and he found that there was a small crowd of family and friends gathered. Taking a deep breath, he put his smile back on and opened the door. \n\nA few cameras flashed and people rushed out to meet him. He shook hands and was sure to say all the right things.\n\n\"I can't believe this!\" April and Bailey's mother kept saying over and over. She made it very clear to him that she was his biggest fan. Gabriel posed for pictures with all of his \"dates\" in various combinations. He made sure that at least one of the four girls was in every picture along with him.\n\n\"You have a lovely house, Mrs. Crawford,\" he said with one arm around her and the other around Bailey. \"And two lovely daughters. I'm sure you're very proud.\"\n\n\"I sure am,\" she beamed. \"They're going to BCC in the fall . . . and call me Joanne.\"\n\n\"That's what Bailey told me on the drive out here,\" Gabe replied. \"Time sure flies, doesn't it?\"\n\n\"That it does, Mr. MacKenzie.\"\n\n\"Now don't you start with that 'mister' stuff, Joanne,\" he scolded her playfully. \n\nThey shared a hearty laugh which was interrupted by a wistful look on the other woman's face. \"It seems like just yesterday that they were born . . . right here in this house. We didn't know what to name them so Doc Caudill put a bracelet on each. One was marked 'A' and the other 'B', so we named them April and Bailey.\"\n\n\"Oh, mother,\" the teenager rolled her eyes with embarrassment.\n\n\"Well, they have become beautiful young women,\" Gabe said and squeezed Bailey's waist gently. He didn't mean to, but the motion pulled her breasts against him. A shiver ran through his body.\n\n\"That they have,\" Joanne said with a sigh. The rest of the crowd was still vying for his attention, but he knew he had to get the girls moving or they'd spend all night in the driveway.\n\n\"Come on, girls,\" he called to the other three. Bailey seemed like she was fixed to his hip. \"Let's get going. We don't want to miss the big dance.\"\n\nThe four girls all piled into his car. Bailey elbowed her way into the shotgun seat and the other three slid into the back of his Lexus. Joanne and her husband were tagging along, he in their truck and she in the family car so the girls would have a way home from the dance.",
        "Their eyes were wide and they played with all of the gadgets. This was certainly their first ride in an $85,000 car.\n\nGabe made the same polite conversation with the other three girls that he did with Bailey on the drive down and soon enough they arrived at the school. The dance was being held in the gym and it seemed that most of the county had turned out for the prom. After all, there wasn't anything else going on in Washington County that night.\n\nWhen they got out of his car, they made their way to the promenade area. Students were already lined up and were being introduced. The girls had initially planned to be there from the beginning, but the earlier stop for pictures made them late.\n\nAt first, Gabe got a few quizzical looks from folks that seemed to say, \"Who's that old guy with the Crawford girls and their friends?\" but thanks to the Soap Opera network, a few people recognised him and the whispers&mdash;and text messages&mdash;soon spread throughout the crowd.\n\nThe next hour was a whirlwind of pictures and fawning. His appearance seemed to be the biggest thing to hit Washington County since the new high school opened three years ago. Gabe smiled a lot and made sure that at least one of the four girls was always on his arm. The local paper interviewed the fivesome and he made sure to sound like he was just trying to make sure the girls had a good night, not like a weird 35 year-old guy who was going out with teenagers.\n\nThey took a formal set of pictures. Gabe paid for a set for each of them plus one for himself. He was sure to buy his ticket to the prom; no doubt that the school PTA could use every penny they could get. He chatted with the principal for a few minutes and was accosted by the drama teacher who asked him to speak to his class the next year. He gave non-committal responses, but everyone was so nice, he made a mental note to find a way to work the school into his schedule.\n\nA few of the other kids tried to elbow the four girls out of the way for a picture alone with him, but his dates&mdash;especially Bailey&mdash;would have none of that. They pushed and shoved right back and often made sure Gabe was between two of them.\n\nHe made a point to dance with each of the girls, fully aware of everyone's eyes upon them. About halfway through the dance, Gabriel excused himself and told the girls it was past his bedtime. The kids were all discussing their plans for after the prom, and he didn't want to know any details, lest his presence be implicated.\n\nShowing up or being placed at a post-prom party was the last thing he needed. He was toying with the idea of getting back into the business, and being around teenagers doing what teenagers do on prom night was no way to get noticed in a positive way.\n\nKimmy, Morgan and April all gave him a hug. Bailey latched on to his arm and offered to walk him out to his car on the pretense that she didn't want anyone to steal a solo picture of her \"date\". Neither said a word and he reached into his pocket. The doors unlocked themselves when they sensed his key fob get close.\n\n\"Thanks for coming out here with us, Gabe,\" the girl said shyly. \"I . . . I know going to a prom was probably the last thing you wanted to do tonight.\"\n\n\"I had a great time,\" he said softly. In his mind, all sorts of lurid thoughts raced around, fueled by his lust for the young girl's voluptuous curves. He pushed them aside and made sure not to shift out of gentleman mode.\n\n\"Me, too,\" Bailey blushed. He saw where this was going and let his good sense take over. She looked away. \"Listen . . . um . . . do you think we could . . . you know . . .\"\n\n\"I'm old enough to be your father, Bailey,\" he said when her voice trailed off. \"You've got your whole life ahead of you. I'm just a washed up soap opera actor.\"\n\nShe could barely hide the disappointment in her eyes. \"I just thought . . . that maybe . . . you'd see something for . . . you know . . . us.\"\n\n\"Young lady,\" he lifted her chin, so she was looking in his eyes. \"You are a very pretty girl and if I were eighteen again, your dad would have to lock you up to keep me away from you . . .\"\n\nThat made her smile. \n\n\"But you don't want me,\" he continued, fully aware that she only knew his public persona and TV personality. He had seen the same starstruck look in many of the show's fans. \"You don't realise what a boring person I am. Or how much baggage I come with. There's so much more out there.\"\n\n\"I guess so,\" she said dejectedly. \"Can I call you when we're in town for school? We could go out for lunch or something.\"\n\nHe thought real hard before replying. Against his better judgment, Gabe scribbled one of his phone numbers on a scrap of paper. When she reached to take the slip, he pulled it back. \"You have to promise that you will never share this number with anyone. Not even your sister. Do not put my name on it and do not program it into your phone. Promise?\"\n\n\"I promise,\" she replied eagerly, the palmed his number.\n\n\"Good night, Bailey,\" he said softly. He had to look away, lest her big, brown eyes draw him into a kiss he knew wasn't a good idea. Before she could steal that kiss, Gabe slipped into his car. He didn't roll the window down and waved as he drove away.\n\nIn his rearview mirror, he saw Bailey standing there. Alone in the parking lot, the lights shining down and making her look like an angel. With big round hips and full, luscious tits.\n\nGabe sped home, suddenly finding his cock wanting to burst out of his pants.\n\n**************** \n\nBailey lay back on her bed. Her breasts, though heavy, still sat upright on her chest.\n\nShe cried out, despite trying not to wake her sister in the bed next to hers. Her fingers worked between her legs.\n\nAs she had every night for the past week, Bailey imagined that Gabriel MacKenzie was making love to her. Her body shuddered with pleasure as thoughts of her prom \"date\" raced through her mind.\n\nImagining him mounting her in her bed . . . bending her over the couch . . . eating her out in the back of his car . . .\n\nEvery scenario played over and over in her head. She cupped one of her breasts while playing with herself. The thought of him suckling on her nipples made her spine tingle.\n\nWhimpering as she approached her climax, Bailey squeezed her eyes shut. Her hand moved faster.\n\nShe imagined that she was his wife. Accompanying him to the Emmy Awards. Visiting him on the set of his latest movie or TV show. Laying out on the back of their yacht.\n\nHer fingers pressed on the nub of her clit. Her pussy was slick.\n\nFrom head to toe, her body began to shake. She imagined him taking her from behind, impaling her on his cock.\n\nWith a gasp, her pussy seemed to explode. Her toes tingled. She curled up into the fetal position, waves of pleasure radiating out from between her legs.\n\nBailey shivered for a few minutes, then fell into a fitful sleep, dreaming of red carpets and babies and her handsome lover.\n\n**************** \n\nA little over an hour's drive away, Gabe lay in his bed. \n\nHis hand stroked up and down on his cock. \n\nTry as he might, he could not get the image of Bailey Crawford out of her mind. Her wide, firm hips. Her soft, round tits. \n\nAnd her eyes. Those big brown orbs. They were hypnotic. They pulled him in and held him, like a moth drawn to a candle.\n\nGabe imagined her mounting him and riding his cock. She would lean forward, pressing her breasts into the palms of his hands. Her hips would rock back and forth.\n\nHe would thrust up into her soaking wet pussy. \n\nThey would cum together and then she would collapse on top of him, spent. They would fall asleep in each others' arms, then wake up and make love over and over.\n\nShe was half his age, but Gabe found that he could not escape the thoughts of her. He didn't want to.\n\nFor the second time that night, Gabe orgasmed to the lurid fruits of his imagination. He remembered how soft her skin was. How her breasts pressed against him when he pulled her close.\n\nHe fell asleep, tormented by the thought that he might never see her again.\n\n**************** \n\n\"Hey, Sis!\" April called. \"You got something from your boyfriend!\"\n\n\"What are you babbling about?\" Bailey walked through the kitchen door, fresh from feeding the family's animals.\n\n\"There's a letter for each of us from Mr. MacKenzie.\"\n\nBailey snatched the envelope out of her sister's hand, despite the other girl's attempt to pull it back. She tore into it, finding a sappy/inspirational congratulatory graduation card from Hallmark and a gift certificate to the local shopping mall.\n\nShe had hoped that he would show up at graduation and ask her to run away with him, but he didn't. Still, she knew this was more than she should have expected. \n\n\"Get the same thing?\" April asked, holding up her card. Bailey shrugged. On one level, she was happy to have heard from Gabe, but on another she was disappointed that it was just a nice, if a little impersonal, gift card.\n\nA few moments later, the phone rang. It was Morgan. And a few minutes after that, Kimmy called the twins. All four girls had received different cards but the same gift. If she would have allowed herself to be upset with her sister and her best friends, Bailey was disappointed that Gabe hadn't singled her out for something special. She thought they had connected on some deeper level than the other three girls. Still, the young woman couldn't look a gift horse in the mouth, especially one that gave so generously after only knowing her for four or five hours.\n\nA couple of weeks later, Bailey finally drummed up the courage to call Gabe. She hemmed and hawed for a while, wondering if she could actually do it.\n\nSo many thoughts ran through her mind. They ranged from the hopeful (He really likes me!) to the self-doubting (Does he really like me and not my super-hot twin sister?) to the scared (What if he's some sort of sexual predator) to outright lust (I'm going to jump his bones when we meet!).\n\nGraduation was passed. The girls were of school for the next two and a half months before starting at the community college in the fall. In addition to helping around the farm, both had jobs. Every night, Bailey stared at the slip of paper Gabe had given her. She mentally kicked herself for not giving him her phone number. She would have to be the one to make the first move.\n\nOne afternoon, after her folks and sister had gone off to work, Bailey dialed the number. Her heart pounded in her chest. The palms of her hands were covered in sweat. \n\nThe phone rang. \n\nTwo . . . three times. \n\nShe cringed at the fourth ring, anticipating it rolling into Gabe's voicemail.\n\nHer stomach churned when someone picked up. \"Hello?\"\n\nFor a moment, she couldn't speak.\n\n\"Hello?\" the familiar voice said again.\n\n\"Hi . . . Mr. MacKenzie?\" she knew she had to say something lest he think she was a telemarketer and hang up. \"It's me . . . um, Bailey Crawford.\"\n\n\"Bai&mdash;Oh, hi!\" She could \"hear\" the smile in his voice and she let out a sigh of relief. \"How are you? How was graduation?\"\n\n\"Graduation was fine, Mr. Mac&mdash;\"\n\n\"Don't start that with me, Bailey,\" he said, his voice becoming playfully stern. \"Call me Gabe or I'm going to hang up on you.\"\n\n\"Okay, Gabe.\" The butterflies in her stomach calmed down a little. But not much. \"Graduation was good . . . a little long. We wanted to thank you for the cards and the gifts.\"\n\n\"Anything for my prom dates,\" he said.\n\nThere was a brief awkward silence. She had to steel up her courage. \"Gabe . . . I don't suppose you'd want to meet for lunch or something . . . April and I are going to be in town on Wednesday for orientation . . .\"\n\n\"I'd love to&mdash;\" \n\nAs soon as the words started, she knew there would be a \"but\" coming.\n\n\"&mdash;but I'm out of town right now. . . .\"\n\nIf he had been there, Gabriel would have seen the disappointment on the girl's face.\n\n\". . . I'm in New York through the twenty-second. . .\"\n\nThat was almost three weeks away.\n\n\". . . But I'd really like to get together with you . . .\"<br/>\n\nHer face brightened.\n\n\". . . And the other girls . . .\"\n\nDisappointment. Again.\n\n\". . . When I get back.\" He paused for a second. \"Is this a good number to reach you? I've got a meeting in a few minutes . . . Can I call you back in about an hour?\"\n\nIt took her a second to process what he had just said. \"Um . . . sure.\"\n\n\"Okay, I'll talk to you in a few.\"\n\nShe sat on the couch, holding the phone to her ear, its connection long since dropped. Her hands were shaking. She felt excited and afraid and confused all at the same time. All the while she wondered what had just happened.\n\n**************** \n\nGabriel walked out of the office humming a tune. He smiled at everyone, which was strange in New York. He caught a cab back to his apartment on the upper west side. When he walked through the door, he realised just how much he missed the city. Not that small town life was bad, but there was always an excitement about New York.\n\nOf course, in about six months he'd remember why he left, but for now, everything seemed to be going his way. Not only was he once again going to be gainfully employed, but the pretty young woman who had only crossed his path for one night had called him back.\n\nThe timing of everything was good. The person who was sub-letting his apartment had moved out the month before. He didn't have another tenant lined up and wasn't about to give up his rent subsidy. Gabe was smart with his money and had enough that he could live for several years without substantially altering his lifestyle. Still, it would be good to be drawing a paycheck again. Not to mention being out of his mother's house once more.\n\nHe picked up his phone, scrolled through the incoming calls and dialed Bailey's number. On one level, he was surprised she called. On another, he was ticked off at himself for not asking for her number so he could call her.\n\nThe phone only rang once.\n\n\"Hello?\"\n\n\"Hello, Bailey?\" he said, not sure if the number she had called him from was her house or a cell phone. He wasn't worried about his number being caller ID'd; he had call block on all of his lines. \"It's Gabe.\"\n\n\"Hey.\" There seemed to be relief in her voice.\n\n\"Listen, I'm sorry for blowing you off this afternoon, but I was on my way to a meeting with my agent,\" he said.\n\n\"How'd it go?\"\n\n\"Very well,\" Gabe beamed. \"They want me back on the show and called to make me an offer last week.\"\n\n\"That's great,\" she said softly. If he didn't know any better, Gabe would have sworn that she sounded a little let down by his news. Still he pressed on, unable to contain his own excitement. \n\n\"I'm flying back in a couple of weeks, and then I'd like for you guys to come up to the house with your families.\" He scribbled some notes on a pad at his desk. \n\n\"Everyone?\" Bailey asked. \"If you say all our families, half of Washington County will find some relation to us and show up on your doorstep. TV stars are few and far between out in the country.\"\n\nGabe laughed. \"How about immediate family? I owe you girls big time.\"\n\n\"How much is 'big time'?\" Bailey asked, then paused for a second. He thought he detected a sultry undertone when she spoke again. \"Enough for dinner?\"\n\nImpure thoughts raced through his mind at her suggestion. The tone of her voice hinted at something a little more . . . private . . . than he had anticipated. Still, the thought of having a date with the young woman was very enticing. He took a deep breath. \"And then some.\"\n\n\"I'll hold you to that,\" the girl replied, her flirtatiousness suddenly a little hesitant.\n\n\"Let me call you in a few days,\" Gabe said, not really wanting to wait that long to speak to her again. He looked over at the calendar hanging on the wall. \"Unless your families are busy on the twenty-fifth&mdash;that's a Saturday&mdash;why don't you all plan to come over for dinner.\"\n\n\"That sounds good.\" It seemed to Gabe that she wanted to say something else, but stopped herself. \n\n\"I'll look forward to it, Bailey.\"\n\n\"Me, too, Gabe.\"\n\nThere was another awkward silence, then both hung up. He spent the next three weeks both elated and nervous at the same time.\n\nAnd none of it had to do with going back to work.\n\n************** \n\nAfter wrangling around everyone's schedules, Gabriel invited the girls and their families to a cookout at his mother's house. It was more of a catered event&mdash;since Gabe really didn't cook&mdash;but the girls's parents insisted on bringing something so he told them to bring a salad or dessert. In truth, he had everything covered, but if it made them feel better, they could bring anything they wanted.\n\nDeep down, as long as Bailey was there, he didn't care what else showed up.\n\nA couple of his friends were in from New York. He thought it would be a good idea to have some other \"stars\" there to run interference for him. After all, being social for an entire night wasn't really his thing, but he had friends who reveled in it.\n\nPlus, he invited a few of his neighbours since he figured they would be making enough noise to keep everyone up, so Gabe pre-emptively wanted to stave off any complaints. Not that they weren't used to the noise. Before his mother died, the backyard was usually full on most weekends if the weather was good.\n\nHe was anticipating forty or fifty people over the course of the night, so well in advance he arranged for a local barbeque restaurant to supply a steady stream of food from pulled pork to beef brisket to rib tips along with potato salad, coleslaw, corn on the cob and just about everything else that people might want.\n\nThe back patio had an outdoor cooking area and a bar. A stone fountain and fake stream ran through the composite deck and down the hill into a goldfish pond. His mother loved to entertain people and she was quick to show off the house her son had built for her. As the servers from the restaurant set up, Gabe smiled inwardly, knowing that if she were there, Libby MacKenzie would spend the night in the thick of the action, her hearty laughter turning strangers into her best friends and bringing a sparkle to everyone's eyes.\n\nChairs were set up around the patio. Citronella torches warded off the mosquitoes. The sun was still above the horizon, but through a stroke of pure luck, it wasn't too hot or humid outside. Gabe even had the hot tub cleaned out and simmering, knowing that some of his friends would undoubtedly end up in it by nightfall.\n\nTeri and Chuck were already into the wine. They were two of his dearest friends. Also actors, they took Gabe under their wings when he arrived in New York, fresh out of college. He was the godfather to their children and they handled all of the arrangements when Gabe's mother died. Gabe didn't have many close friends, but those who were in his inner circle would have fought, died and moved Heaven and Earth for one another.\n\n\"I think everything's all set up,\" Teri walked up and put her arm around Gabe. \"It's good to have you back, Lo.\"\n\nHe looked into his friend's eyes and smiled. He started to say something but then heard cars pulling into his driveway. Teri kissed him on the cheek then went to make sure that her husband wasn't too far into the bottle of zinfandel before any of the other guests arrived.\n\nKimmy and her parents were the first ones to walk around the house. Their eyes were wide at the size and luxury of the place. Gabe greeted them warmly and introduced them to his friends. In addition to Teri and Chuck, his agent Tom and his wife were there, as well as two of the younger actors from the show who he knew from his time on Broadway.\n\nApril, Bailey and Morgan's families showed up soon after and then the party got started. Trays of snacks were about and the bar was stocked with wine, beer, soft drinks and bottled water. There was no band, but music played over outdoor speakers hidden throughout the patio. The neighbours began coming over and once it seemed that everyone was there, Gabe got up on one of the stone benches.",
        "\"Thanks to everyone for coming out tonight,\" he said once everyone quieted down. \"I'll trust that you guys can introduce yourselves, but the reason for this party is the four young women over there. Thanks to them, I have staged my triumphant return to The Sun Also Sets!\"\n\nThere was some rowdy applause from his friends and shocked looks from the locals who were out of the New York loop. Teri handed Gabe a handful of the daily rags that were all over newsstands in the city, but didn't circulate much elsewhere. He held up the first, which showed a picture of Gabe and the four girls from prom on the front page. Not bad for a guy who had been out of the business for the past two years.\n\n\"It seems that thanks to April, Bailey, Kimmy and Morgan . . . and with a little assistance from Facebook and MySpace . . . news of my senior prom got me noticed by the publicity hounds at the studio and they came begging me to take my old job back&mdash;\"\n\n\"God only knows why!\" Chuck taunted playfully and Gabriel rolled his eyes.\n\n\"&mdash;And I have decided that I've been a worthless bum long enough&mdash;\"\n\nThere were some snorts and giggles.\n\n\"&mdash;So I'm going back to drawing a paycheck again.\"\n\n\"Notice that he didn't say he was going back to work.\" Chuck elbowed Bailey's father and laughed.\n\nGabe raised his glass. \"So here's to you girls . . . Thank you for getting me back in the news for something that doesn't involve a Bolivian midget and a donkey, and thank you for helping me to once again become a contributing member of the American workforce.\"\n\n\"Here, here!\" everyone chorused.\n\n\"And thank you all for being eighteen.\" Of course Chuck had to get in one last snarky remark.\n\n\"The food is ready, help yourselves.\" Gabe hopped down and watched his guests go through the line. Once everyone was served, he fixed himself a plate and sat down&mdash;coincidentally enough&mdash;with Bailey and Joanne.\n\nAcross the patio, the gregarious Chuck had drawn the largest crowd. Between bites he told stories (read: lies) to his audience of adoring fans. The rest of the crowd either talked shop or about things of mutual interest. At first the \"locals\" seemed to be a little enamoured with the folks who they only knew through the television, but soon enough, they realised that they were people like everyone else.\n\n\"How did you get into acting?\" Joanne asked conversationally.\n\nGabe smiled, wondering which of his two responses to give. He glanced over at Bailey, who shyly looked away. He decided on the answer he usually didn't give to the television cameras.\n\n\"Some actors are the class clowns and attention hogs who live to be on stage. That's Chuck. He always wants everyone's eyes on him. If I said I didn't like that, I'd be lying. But that's not the real reason,\" Gabe said. \"I have an older brother, Michael. He's bigger and stronger and faster than I ever was. Little League all-star, football player and all that. That wasn't me, though. I was never going to be him, even though I tried. I really wanted to some days . . .\"\n\nBailey looked up at him, her eyes wide. He smiled, getting the sense that she felt the same way when around her twin sister.\n\n\"I joined the drama club at school because acting lets me be someone else,\" he said wistfully. \"I can be a king or a soldier or a homeless man or anyone I want to be. I bring a character to life . . . and just for a moment . . . I'm not Michael's little brother.\"\n\n\"I'll bet he wishes he could be you now,\" Joanne smiled.\n\nGabe shrugged. \"He does well enough.\"\n\n\"But he's not on TV every day,\" Bailey said quietly.\n\n\"No . . . no, he's not. And he only had one prom date,\" Gabe chuckled.\n\nBailey opened her mouth as if to say something else, but someone called for Gabriel.\n\n\"Hey, Lo! You need a beer.\" His agent Tom said, pushing an opened bottle into his hands, then sat down next to him. He surveyed the group, mentally matching names and faces. \"You must be Bailey . . . and is this your sister, Joanne?\"\n\nThe young woman blushed. Her mother was taken instantly, Tom's charm overpowering her meager defenses.\n\n\"Old Lo here ought to be paying you a commission on this one, not me,\" he continued with a smile. \"When pictures of you guys at prom hit the papers, my phone never stopped ringing. The network has been wanting him back for the last year and after this story, they really sweetened the pot!\"\n\nIn Washington County, the story of the TV star at the prom made the front page of the single newspaper, but none of them had any idea that it was such a big deal. Bailey and her mom looked at each other bewilderedly, then at Gabe. He only shrugged, embarrassed.\n\n\"If it were any other guy, I'd have said he staged the photo op on purpose,\" Tom said, showing his unashamed inner publicist. \"But you guys don't know Lo like I do . . . he doesn't think like that . . . never did . . . but then again, he's known that they've been trying to get him back since the day he left.\"\n\nGabriel shifted uncomfortably. That was something he wasn't ready to talk about with his other guests.\n\nBailey saw this and came to his rescue. \"Why do you they call you 'Lo'?\"\n\n\"My parents named me and my brother after angels in the Bible,\" he resigned himself to the direction this conversation was taking. The same place it always went when his friends were around. \"In the New Testament, only two angels are mentioned by name: the archangels Gabriel and Michael. Gabriel is God's messenger. He tells of the births of John the Baptist and Jesus, and the Muslims believe he recited the Koran to Muhammad.\"\n\n\"But he also goes by another name,\" Tom said, his eyes twinkling mischievously.\n\n\"What other name?\" Joanne asked quizzically.\n\n\"Hey, Chuck,\" Tom called. \"What's Gabriel's other name in the Bible?\"\n\nGabe's best friend, who never turned down an opportunity to show off, stood up and put on his most theatrical voice to quote the Gospel of Luke. \"And Lo, the angel of the Lord came upon them . . .\"\n\nEveryone laughed, including Gabriel. And he couldn't help but smile when his eyes met Bailey's. Something inexplicable passed between them. In the fading light of the setting sun, she looked so beautiful. He wanted to reach out and caress her round, dimpled cheeks. He wanted to run his hands through the soft folds of her hair. He wanted to pull her close to him and feel the press of her body against his. But he didn't dare.\n\nNot with his career back on track. Not with her ready to take on the world.\n\nAnd yet, it seemed so right. So enticing. As if she were his for the taking.\n\nGabe pulled himself away from Bailey and her mother. He mingled with his other guests as any polite host does, but out of the corner of his eye, he watched Bailey. She was quiet and shy. She talked only to her friends and her folks unless someone engaged her first. She seemed uncomfortable around Gabe's neighbours and friends.\n\nHe got the sense that she was hovering a little bit. And in truth, he never wandered far from her. Once, he zoned out and when Teri pinched him, he realised that his eyes had followed Bailey around his yard. She shot him a conspiratorial grin, then went to talk to the young woman before he could stop her.\n\nWith a sigh, Gabe went back to the party. He chatted with Kimmy and Morgan and their parents. Kimmy's mom, the self-professed number one fan of his show, had latched on to Trey and Nick. They were more than accommodating&mdash;if a little tipsy&mdash;and the three of them were bonding. They got her singing and she told them what a shame it was that they were gay, much to the amusement of her daughter and the chagrin of her husband.\n\nWhen the wine refrigerator was running low, Gabe ducked inside his house. Several of his guests had gone inside to watch the basketball playoffs or play pool in the basement recreation room. He had a bottle of merlot in one hand, a Riesling in the other when he literally bumped into Bailey. \n\nReflexively, he reached out to catch her and soon found her in his arms. \n\n\"Oh, I'm sorry,\" Bailey said softly. She didn't back away.\n\nThey stood there awkwardly for a moment. No one else was around. Hesitantly, she ran her hands over his arms. \n\nGabe's first thought was to back away. But there was no way to do so gracefully, much less with a bottle of wine in each hand. He also found that he didn't want to.\n\nBoth seemed frozen with indecision. Her eyes were down, as if she were afraid to meet his gaze.\n\nFinally, she glanced up. He saw an inner resolve there. He knew what was coming.\n\nBailey lifted her chin and licked her lips. She took a deep breath. Her big brown eyes froze Gabe for just a second. Her hands went to his shoulders and she pulled herself to him.\n\nHe stood there spellbound and almost gave in. \n\n\"No . . . no, Bailey,\" he mumbled and fell back a step. The hurt in her eyes made him want to shrivel up and die. \"Not like this.\"\n\n\"Gabe . . .\" There were tears in her eyes as her voice trailed off.\n\nHe set the wine bottles down on the counter and took her hands in his.\n\n\"Bailey . . . oh, I'm so sorry,\" he said, wishing he could take back what just happened. \"It's not that . . . I'm leaving town on Tuesday and going back to New York . . . I can't . . .\"\n\nA silence fell over the both of them.\n\n\"You can't what?\" she finally whispered.\n\nHe said the words, but didn't quite believe they came out of his mouth. \"I can't stand the thought of leaving you like that.\" \n\n\"Don't you . . . don't you like me?\"\n\nGabe squeezed her hands gently. \"I don't know, Bailey . . . I don't know. I could be your father . . .\"\n\nA million excuses raced through his mind. And yet he found that he didn't give a damn about any of them. Sure there was part of him that was thinking naughty thoughts of what he could do with this sweet, young girl. But there was another part that saw a kindred spirit. It saw past their age difference. It didn't care what the tabloids might say. It only wanted to be with her.\n\nHe found that he didn't want to let go of her hands, but he knew he had to. \n\n\"I'll tell you what. I'll be back in a month. That's when my initial run back on the show will be over. Then we'll . . .\" Gabe paused for a moment to gather his thoughts. \"Then may I take you out?\"\n\nShe inhaled sharply, suddenly flustered. Her earlier disappointment gave way to excitement. \"Like on a date?\"\n\n\"If you are willing, my lady,\" he said in his most chivalrous tone.\n\nBailey pushed aside her hurt and giggled like a schoolgirl. \"Okay, my dashing prince.\"\n\nThe two shared a secret smile and he once again had to resist the urge to kiss her. They both went back to the party, unaware that just about everyone there was watching them.\n\n**************** \n\nThe ride in the car back was long. Joanne couldn't stop chattering about how great it was to actually meet real-life television stars. Even the girls's father Andy seemed to be impressed by how down to earth and friendly Gabe and his friends were.\n\nBailey didn't know it, but she glowed for the rest of the night. She couldn't stop smiling and her eyes would light up at the mere mention of Gabriel MacKenzie.\n\nWhen they got home, April and Bailey went to the room they shared. Ordinarily they might have gone out on a Saturday night, but after the party at Gabe's and then the hour-long drive home, neither was inclined to go visit with any of their small-town friends.\n\nThey each crawled into their beds. April turned the television on while Bailey changed and brushed her teeth in the bathroom.\n\n\"So what were you and your boyfriend talking about all night?\"\n\nBailey blushed. Neither of the girls could hide any secrets from the other. In addition to being twins, they had been too close for too long.\n\n\"He asked me out!\" she said excitedly.\n\nApril scoffed, but there was clear envy in her eyes. She was used to drawing the admiring stares and flirting with the boys. This time, though, it wasn't so bad. Bailey deserved a good guy, especially after her last boyfriend. And she sensed that Gabe wasn't just looking to cop a quick feel, or get off with a fuck and suck.\n\nHe was good-looking, reasonably well-known and obviously didn't want for money. If he wanted to get laid, there was certain to be a legion of pretty young girls at his beck and call.\n\n\"When?\" April asked.\n\n\"He said he's going to be in New York for a month,\" her sister replied. \"They're going to write him back into the show for twenty episodes. To see if there's interest in him returning or something like that. Then if things work out, he might go back permanently.\"\n\n\"But then he'll be moving to New York for good,\" April pointed out.\n\nBailey started to say something, but stopped, the realisation of her sister's words sinking in.\n\n\"Look, Sis, I don't want you to fall for this guy only to have him leave you at the end of the summer,\" April said.\n\nThe other girl chewed on her lip for a minute. She pulled her covers up. \"But it would be one helluva summer . . .\"\n\n\"Yes, it would, Sis,\" April sighed. April didn't want to see her sister get hurt. They looked out for each other. That's what twins do. And April and Bailey, for all their differences, were closer than most. Part of it was growing up in a small town. Part of it was being together in a small house in a tight-knit family. And part of it was that neither would know what to do without the other.\n\nThe two fell silent for a long time, absently watching the television.\n\n\"So how many of his babies are you going to have?\" April asked suddenly. She was rewarded with a volley of pillows being thrown from the other bed. Both giggled and laughed, knowing that each had the other's best interests at heart.\n\nA little while later, Bailey reached for the remote control and the television flickered out. \n\nApril had dozed off, but was awakened by the soft sounds of moaning. She heard shuffling under the covers in Bailey's bed. She smiled to herself&mdash;partly amused, partly jealous&mdash;as Bailey masturbated to fantasies of her dream lover. As she did every night. She gasped and cried out.\n\nWhen her orgasm finally subsided, Bailey rolled over in her bed and after a few moments she was breathing rhythmically. April closed her eyes and fell into her own slumber, wondering what Gabe's brother was like.\n\n**************** \n\nOnce all the neighbours had left, Gabe sat around the deck with his Chuck, Teri and Tom. Tom's wife had gone to bed, as had Trey and Nick. They talked about the business. They caught up with one another. Gabe had been gone from the show for a little over two years. He was one of the more popular supporting characters and the producers had tried everything they could think of to bring him back.\n\nHis heart just wasn't in it, though. Not with his mother's failing health. Even though she scolded him for dropping everything to care for her, he stayed by her side. And after her death, he coasted on for another year.\n\n\"You've got to strike while the iron is hot,\" Tom had told him when he was back in New York.\n\n\"Get off your ass, stop feeling sorry for yourself and get the fuck back to work,\" was Chuck's way of saying the same thing.\n\nAfter the publicity surrounding his prom date, it didn't take much coaxing to get back into the swing of things. His encounter with the girls and fresh exposure in the press seemed to put that spring back in his step.\n\nThe citronella torches were flickering with their last light. Tom and Chuck went inside. The catering crew had long since departed. The leftovers were packed in foil containers and deposited in the fridge. Empty beer bottles and the disposable paper plates were stuffed into trash cans.\n\nGabe and Teri sat underneath the stars for a few more minutes. The neighbourhood was quiet. \n\n\"Your mom would have had a great time tonight,\" his friend said. \n\nHe smiled ruefully. \"Yeah . . . she would have.\"\n\n\"She always loved having people around,\" Teri divided the last bit of wine between their two glasses. \"Do you remember the time we took her to that party out in the Hamptons?\"\n\n\"You mean the time we crashed the wedding?\"\n\nBoth of them laughed at the memory.\n\n\"Hey, we had an invitation,\" she replied, feigning defensiveness. \n\n\"That you stole!\"\n\n\"It was sent to me. Well . . . to my house, anyway.\" They laughed again. \"Your mom was a firecracker, Gabe.\"\n\nHe smiled wistfully. Libby had always like Teri. The two were like sisters.\n\n\"She would have liked Bailey, too,\" Teri said quietly.\n\n\"Mom liked everybody,\" Gabe replied absently. That wasn't quite true. His mom never liked his ex-wife, even before the divorce.\n\n\"Not like that, Lo. Libby would have liked Bailey because you like Bailey,\" she continued. \"Don't give me that look, mister. You two were making puppy dog eyes at each other all night long.\"\n\n\"She's young enough&mdash;\"\n\n\"Oh, horseshit,\" Teri snorted. \"You're what? . . . Thirty-five? You're not an old man, Lo. She's hot for you, too . . . and not just because you're a looker who's on TV. She really likes you.\"\n\n\"How do you know that?\"\n\n\"I know these things, Lo. Girl secrets,\" she reached out to take her friend's hand. \"I know you're still pissed off at Jeannie and you're missing your mom. But you've got to stop feeling sorry for yourself. Life's too short to spend it moping around like you got the shaft.\"\n\nEvery now and then, people need a verbal smacking around. Gabe knew he was due. And he knew whenever it was Teri doing the talking, she was always right.\n\n\"She's a good kid,\" he said softly. \"What if she wants more out of life than . . . dammit, Teri, I graduated from high school before she was even born!\"\n\n\"You need to get over that, bucko,\" she replied. \"She's not a girl! She's a beautiful young woman.\"\n\n\"I feel like some dirty old man when I look at her,\" Gabe confessed. \"Bailey's got her whole life ahead&mdash;\"\n\n\"Jesus-fucking-Christ, Lo,\" his friend sounded flustered. \"If anything, I should be warning you that she's only after you for your money or because she wants to fuck a guy on TV. But she doesn't. I talked to her, her sister and her folks. Not a one of them has a manipulative bone in their bodies. They're all good people. I should know; I used to be like them before I moved to New York and got old and cynical. I'll tell you this: That girl is head over heels in love with you. I don't know what you've done to her, but you are the center of her world. If you'd open your eyes, you'd see that. And if you don't . . . and soon . . . she'll find someone else to settle down and spend the rest of her life with.\"\n\nGabe closed his eyes and took a deep breath. \"What if she finds out that I don't live the life of a TV star? What if she leaves me like Jeannie did?\"\n\n\"Then it will be her loss, not yours,\" Teri said, her voice hardening at the mention of his ex-wife. \"Let her in, Gabriel. Show her who you really are. You get to know her. Then you can both make a decision with your eyes open. Living not to get hurt is like dying without knowing that you're already dead.\"\n\nHe started to say something, but found that she was going to shoot down any argument he might make. They sat together in silence for a little while longer. The torches burned themselves out and the motion detector-activated lights shut themselves off.\n\nTeri squeezed his hand one more time, then got up and went inside without saying a word.\n\nGabe sat in the chair, his eyes unfixed and staring off into the darkness. Finally, he went inside his mother's house. He flipped out all the lights and went to his bedroom. He lay in bed for a long time, wanting to dial Bailey's number. Needing to know that all the time he spent thinking about her wasn't wasted.\n\n************* \n\nThe next month was the longest four weeks of Bailey Crawford's young life.\n\nAlong with her sister, she went to work and got ready for school. They attended orientation, registered for classes, applied for financial aid and tried to get work-study jobs on campus. The girls had chores around the house and each took on more hours at their part-time jobs to save some money for when school would start.",
        "In their small community, some of the kids went straight into a full-time job after high school. Most of them were from working families&mdash;if they weren't downright poor&mdash;and they needed every dollar they could get from every able-bodied person in the household. Some went to the service, seeing it as the only ticket out of their small rural town, even knowing that a trip to Iraq or Afghanistan was probably in their immediate future. A few were planning on going to college. And a handful were just taking up space and milking the welfare system. Like their parents and grandparents before them.\n\nBailey and April had no delusions about their circumstances. They weren't destitute, but they weren't rich, either. Their parents worked hard and tried to give the girls every opportunity they could, but the fact of the matter was that if April and Bailey wanted to go to college, they were going to have to get scholarships and loans and jobs to pay for it. So they scrimped and saved and applied for every kind of financial aid they could find.\n\nThat didn't mean they couldn't have any fun, though. They spent some afternoons sunning themselves in the backyard, going horseback riding or swimming at the wave pool. They flirted with the boys and gossiped with the girls. Normal, kid stuff.\n\nAt the same time, like many newly-minted high school graduates, Bailey felt like this was her last summer before life caught up with her. She knew that reality was going to set in soon. Their parents had offered the girls a place to live while they went to school, but were told in no uncertain terms that once they either decided to get a job or graduated from college, they were \"off the payroll\", so to speak. Andy and Joanne had raised their daughters to be independent and they weren't going to spend their lives with grown kids still in the house.\n\nThe fun times seemed to fly by, but the rest of Bailey's summer dragged. And it was all because of Gabriel MacKenzie.\n\nHe was back in New York working. It seemed that after the prom, just about everyone in Washington County stopped what they were doing from 1 to 2 PM to watch The Sun Also Sets. When his portrait graced the issue of Soap Opera Digest announcing his return to the show, there was not a copy to be found in any store within twenty miles. He was officially the biggest thing to hit the county since Dane Beck got a full scholarship to play football for Virginia Tech back in '02.\n\nIf they were home, April and Bailey watched the show in their living room. If they weren't, they taped it and watched it with their mom after dinner and before Jeopardy!\n\nAll the while, Bailey counted down the days until he returned to take her out on the date he had promised at the party.\n\nThey talked a couple of times, but never for very long. He was working during the day and couldn't answer his phone or return calls. She didn't like talking in the evening because there really wasn't any privacy in her small house. He seemed to be busy with the show and all of the other things that go on in a TV star's life, but he did try to call on a consistent basis, and sometimes it seemed he just wanted to hear the sound of her voice.\n\nAfter each call, Bailey got some good-natured ribbing from her sister, but it was worth it. Even her parents joked about it a couple of times, and her dad wasn't nearly as intimidating towards Gabe as he was with some of the other boys who called the house.\n\nMentally, she had circled the first of August as the day he was coming back, although she knew it might be a week to either side of that. His character on the show had returned from a long sabbatical in Tibet or something and was immediately drawn back into the usual soap opera drama. They had written a story arc for him that spanned four weeks and several loose threads were left dangling for his inevitable (permanent) return.\n\nKnowing that Gabe's run was coming to the end, Bailey grew more excited with each passing day. She wondered where he was going to take her and what they would do.\n\nOne night after dinner, right about the time that Gabe usually called, the phone rang. Bailey was in the bathroom and couldn't answer, but she came running as quick as she could.\n\n\"&mdash;We're doing fine, Gabriel,\" her mother was saying. \"The girls got registered and start their classes on the twenty second. . . . Yes, both got the freshman scholarship and the Pell Grant . . . That, too. . . . On campus . . . Bailey's working for Admissions and April will be in the math department . . . Okay . . . Okay . . . I will . . . It was good talking to you.\"\n\nBailey reached for the phone, but her mother swatted her hands away. She covered the mouthpiece. \"He wants to talk to your father. . . . Andy! Telephone!\"\n\nDumbfounded, Bailey stared as her mother waited for the other phone to pick up, then she hung up the receiver. She was even more shocked when her dad didn't come and get her when he finished his conversation with Gabe. \n\nShe thought to call him back, but a little part of her grew angry. \n\nWhat the hell does he think he's doing? Why doesn't he want to talk to me? the young girl thought. \n\nMaking up some excuse, Bailey went to bed early. Gabe didn't call the next night or the day after that. She began to panic. \n\n\"I'm sure he's fine,\" April tried to comfort her before bed.\n\n\"What if he's found some other woman?\" Bailey asked, rattling off the most negative things she could think of. \"What if he was just using us to get back on the show? What if he's never coming back?\"\n\n\"I'm sure he'll be back,\" her sister said. \"He promised, didn't he?\"\n\nBy Friday, Bailey still had not spoken to Gabriel. She called him once and left a voice mail. A couple other times, she was in the middle of dialing his number but stopped before the call went through. She didn't want to come off as desperate, or even worse, psycho.\n\nApril was making plans to go out with some of their friends, but she didn't invite Bailey along. \"Mom said you were going to help out with the spaghetti dinner at church.\"\n\nThat was news to Bailey. But at least it gave her something to do. In her broken-hearted teenage mind, she stumbled blindly through the day, going through her daily routine by rote.\n\nShe and her dad were watching TV and waiting for her mom to get ready when the door bell rang. She was dressed up for church but otherwise pretty casual. No sense in putting on nice clothes only to get them covered in spaghetti sauce. Bailey was so spaced out, she didn't hear a car drive up.\n\nUncharacteristically, her father sprung out of his chair to answer the door, something he never did. Bailey blinked a couple of times and wondered what was taking her mother so long.\n\n\"Good evening, young man,\" she heard her father say.\n\n\"Hello, Mr. Crawford. I was wondering if your daughter was available for me to call on her.\" Bailey's heart jumped into her throat when she heard Gabe's voice. He was speaking a lot more formally than she had ever heard him, but his tenor was unmistakable.\n\n\"Why, yes, she is,\" her father replied, something between vague amusement and outright laughter in his voice. \"Please come in.\"\n\n\"Thank you,\" Gabe said, stepping into their living room. Bailey stood immediately, unsure of what was going on. Her date was wearing a blazer and a nice shirt with jeans. He had a bouquet of flowers in his hands and a wrapped package under his arm. All of the anger and disappointment Bailey had felt earlier evaporated at the sight of Gabriel. He held out the flowers for her. \"I was hoping you'd allow me to take you out for dinner.\"\n\nFlustered, Bailey only blushed. She wanted to run over and throw her arms around him, but her feet wouldn't move.\n\n\"Who's here&mdash;\" her mom came out of the bedroom. \"Oh, hello, Gabriel. Are you here to take Bailey out?\"\n\n\"Yes, ma'am,\" he replied politely.\n\n\"I trust your intentions toward my daughter are honourable,\" the corners of Andy's mouth turned up.\n\n\"Entirely,\" Gabe smiled. \n\n\"And that you'll have her home at a reasonable hour,\" Andy continued.\n\n\"Is eleven too late, Mr. Crawford?\"\n\n\"That would be fine, young man.\" \n\nThe absurdity of the situation struck Bailey just then. Her dad was maybe three years older than Gabriel, although years of work in the auto shop made him look like he was closer to fifty than forty.\n\n\"I have something for you, Mrs. Crawford.\" Joanne blushed as Gabe addressed her. He held out the package, which looked like a framed picture. Bailey's mom opened the neat wrapping. Her smile spread from ear to ear when she saw a publicity photo of the cast from The Sun Also Sets that was autographed by each of the show's stars.\n\nBailey knew that if things didn't work out between she and Gabriel, and by some chance her dad were out of the picture, Joanne would run away with the soap opera star and not even think twice. Bailey smiled to herself; if he really was interested in pursuing her, Gabe knew exactly who to suck up to first.\n\n\"You kids have a good time,\" Andy said and then sat back down in his chair.\n\nJoanne winked at Gabe, then gave Bailey a warm hug before whispering in her ear, \"Use a condom, honey.\"\n\n\"Mom!\" She turned only a deeper shade of red.\n\n\"My lady,\" Gabe motioned theatrically towards the door. \"Your chariot awaits.\"\n\nBailey slipped her hand into the crook of Gabe's arm. He led her out to his car, opened her door then got in on the driver's side. She was only vaguely aware of her parents and sister watching them from the window at the front of her house. It was very surreal.\n\nThings happened so fast, they were well on their way before she felt underdressed. She still clutched the flowers Gabe had given her. Bailey glanced up in the mirror on the backside of the sunshade and saw that she had a goofy smile on her face.\n\nGabe's eyes twinkled.\n\n\"What was that all about?\" she asked when she found her voice.\n\n\"What was what all about?\" her date asked innocently.\n\n\"That whole 'may I call on your daughter' stuff? Isn't that a bit old-fashioned?\"\n\n\"Bailey, I am old,\" Gabe laughed. \"And old-fashioned.\"\n\n\"Where are we going?\"\n\n\"I thought we'd go somewhere for dinner. Do you like Italian, seafood or steak?\"\n\n\"Um . . . you pick.\"\n\n\"We could always go to your church for the spaghetti dinner.\"\n\n\"No, thanks,\" Bailey giggled. Showing up with a date who was twice her age&mdash;and famous, too&mdash;would cause quite a stir since her sister and friends wouldn't be with them. \"How about steak? We could go to the Outback and you could really buy my dinner.\"\n\n\"Outback is nice, but it's always crowded and noisy. I know a nice place over in Shelbyville,\" Gabe suggested. \"It's a little bit out of the way, but it's worth it.\"\n\n\"I'll go where ever you take me,\" Bailey smiled.\n\nThe drive took about an hour. The first part was awkward. Neither seemed like they wanted to start the conversation, even though both had a lot they wanted to say to the other.\n\nBailey asked about New York and the show. He seemed excited to be back working. He shared a couple of stories about the three main stars: Celeste, Jeffrey and Lori. Gabe asked about school. She was sad her summer was coming to an end, but was ready to get on to the next stage of her life.\n\nThey went to an old farmhouse that had been converted into a restaurant. They specialised in steaks, although they also had a wide variety of chicken, seafood and pork on the menu. \n\nEven though there was a considerable wait, as soon as they walked through the door, the hostess escorted them to an open table. It seemed that Gabe wasn't above using his celebrity for a few perks, like getting a table in advance at a place that usually didn't accept reservations. The booths were private and the lighting low. It was very romantic.\n\nNeither ate much and both picked at their food. A couple of times during dinner, an uncomfortable silence fell over their small talk. Bailey's shyness returned. She was afraid that she was blowing the one chance she might have to get Gabe to truly like her and ask for that second date.\n\nThe server asked if they wanted dessert. Both declined. She noticed that he left a generous tip and said nice things to the manager on the way out, even signing a few autographs for the staff and posing for pictures with some of the patrons.\n\n\"Did you have anything you wanted to do tonight?\" Gabe asked.\n\n\"Not really,\" she shrugged. \n\nThey walked out to his car and he opened the door for her again. \"Do you like ice cream?\"\n\nShe nodded. He only smiled as she got in the car, then closed the door before getting in on his side. The drive back to his house took about half an hour. Bailey mentally took note of some landmarks and tried to remember the way, in case he ever invited her up to see him, of course.\n\nAs she had been during her previous two visits, she was awestruck by the scope of his home. It wasn't a Beverly Hills mansion, but compared to where she lived, his house was palatial. He led her to the kitchen, where he took off his jacket. She noticed that his butt was extra cute in his fitted jeans, and found that her nipples were crinkled up, and not because it was cold.\n\nGabe gathered some things in a basket then held out his hand. Bailey thought she had died and gone to Heaven as her fingers wrapped around his.\n\nHe led her out the back door and down the hill to the lake behind his mother's house. A small boat dock extended out from the shore. The sun had fallen below the horizon, but the sky was lit up with a gorgeous red and orange sunset.\n\nSetting the basket down, Gabe unfolded a blanket and the two were seated. They kicked off their shoes and let their legs hang over the edge of the dock. He set out two containers of ice cream&mdash;one chocolate, one vanilla&mdash;and a nice buffet of condiments ranging from sprinkles to Magic Shell to maraschino cherries to gummi bears to whipped cream.\n\nAt Bailey's direction, he gave her a scoop of each ice cream and she indulged in her favourite toppings. They sat for a few minutes in silence, each lost to their own thoughts. The only sound was the water lapping along the shore. Off in the distance, some boaters were catching the last of the sun's rays.\n\n\"I hope I didn't bore you tonight,\" Gabe said, sounding apologetic. They set their bowls aside.\n\n\"No, of course not,\" she replied quickly. She wanted to say more, but stopped herself.\n\n\"Bailey . . . what do you know about me? Besides what's on Wikipedia?\"\n\nShe paused for a moment. \"You like your steak medium rare and enough cholesterol on your baked potato to choke a horse.\"\n\nThe two laughed, the nervous tension breaking.\n\n\"What do you know about me?\" she asked. \"And I'm not on Wikipedia.\"\n\nBailey watched as Gabe's mouth fell open, unsure of what to say. In truth, he really didn't know much about her. Aside from a dozen phone calls and two evenings, they had never had any sort of deep conversation. Yet there he was, watching the sun set with her.\n\n\"Here's something I bet you didn't know,\" she said softly while batting her eyes. She reached out and took his hand. \"I want you to kiss me.\"\n\nHe started to continue, but couldn't. His eyes locked on to hers. She saw the indecision within him. Bailey knew now was her chance.\n\nBefore he could react, she leaned in and brought her lips up to his. His eyes widened at her boldness, but was quick to kiss her back. His hand caressed her arms, sending an electric chill throughout her body.\n\nShe nibbled on his lip. He pulled back. Bailey drew in a deep breath.\n\nGabe's eyes blazed with desire. His strong hands gently cupped her face and he brought her to him again.\n\nThis time, Bailey closed her eyes and lost herself to Gabe's able touch.\n\nHe planted a series of soft kisses on her lips. She sucked on his tongue.\n\nUnable to move, she reveled in the intimacy of their kiss.\n\nNeither spoke for a long time. They neither embraced nor stopped. Instead, they explored each other with their lips.\n\nTheir noses brushed together. Their breaths came faster. Bailey felt a tingle start between her legs and spread throughout her body.\n\nWith the last rays of the sun faded from the sky, Gabe let out a sigh and sat back. Bailey held her breath, unsure of what he might say.\n\nWithout a word, Gabe gathered up the toppings and containers of melted ice cream as Bailey folded the blanket.\n\nShe extended her hand, but was surprised when he didn't take it. Instead, he grasped her around the waist and pulled her close to him. They shared one more brief kiss before he led her back up the hill to his house.\n\nHe set the basket down on the counter.\n\n\"I think you're making a huge mistake, Bailey.\"\n\n\"Why, Gabe?\" she asked, a little taken back.\n\n\"Because you should be dating guys your own age,\" he replied softly.\n\n\"I don't like boys my age,\" she said. \"They're so immature. You're not. You're&mdash;\"\n\n\"I'm thirty-five years old, Bailey,\" he said, sounding exasperated. As if two warring parts of him had already had this conversation. She knew she had to change his mind. \"I graduated from college before you started kindergarten. I&mdash;\"\n\n\"I don't care,\" she stopped him. \"It's not like I want a lifetime commitment from you.\"\n\n\"Then what do you want?\" he shot back. \"A fling? A roll in the sack with&mdash;\"\n\n\"That's not fair,\" she said quietly.\n\n\"You're right. I'm sorry,\" he said, knowing he had crossed the line. \"That was uncalled for.\"\n\nThey stood there in his kitchen for a long time, neither speaking.\n\n\"What do you know about my ex-wife?\" he asked.\n\nBailey shrugged. The official biography on his personal website didn't mention Jeannie, nor did his Wikipedia entry. \n\n\"We got married right out of college.\" Gabe motioned for her to sit at the table. He took the chair across from her. \"I was active in the school's theater department and already had a job lined up after graduation. We moved to New York and had the big wedding. I was working on Broadway and everything was going fine.\"\n\nHe paused for a second and she saw a flash of hurt in his eyes.\n\n\"When that show ended, I got a little bit of work, but nothing steady. I did some commercials. There were a couple of guest spots on soap operas. I got killed on Law &amp; Order. The usual character actor stuff.\" He took a deep breath. \"It seems that Jeannie had latched on to me for the stardom. All she wanted to do was spend the money and live the life of an actor's wife. And when jobs got scarce and the money got tight, things got bad between us. She left me because I wasn't glamourous enough for her.\"\n\nBailey reached out and took Gabe's shaking hands.\n\n\"I'm not fabulously wealthy. I'm not really famous. And I'm not even that great of an actor.\" He paused to clear his throat. \"If that's what you want, you've got the wrong guy.\"\n\n\"Is that what you think?\" she asked after a minute. \"That I'm just after you because you're on TV?\"\n\nThe question hung in the air.\n\n\"Do you know how many girls I dated in high school?\" Gabe asked. Bailey shook her head. \"One. Girls like you didn't talk to guys like me. I wasn't one of the cool kids. I didn't play sports and I wasn't smart enough that anyone wanted to copy answers off me. I was Michael MacKenzie's little brother. I was everyone's friend who would never treat them like their boyfriends did.\"\n\n\"What do you mean, 'girls like me'?\" Bailey asked, her voice a little angry.\n\n\"Girls who are smart and pretty.\"\n\nShe snorted. This was apparently going to be a little free therapy for both of them. \"I'm flattered you think that about me, Gabe. But I'm just April's fat twin. The only reason guys will talk to me is because their best friend is trying to bag my sister or they're trying to get a couple of drinks in me and hope I'll let them play with my tits.\"\n\n\"You're not fat,\" Gabe said softly. \"You're beautiful.\"",
        "\"Do you know why the four of us were together at the Outback before prom?\"\n\nGabe shook his head, but she could tell that he knew the answer.\n\n\"Because no one would ask me to go to the dance.\" Tears leaked out of the corners of her eyes. Her voice shook. \"April and Kimmy and Morgan passed up dates because they felt sorry for me!\"\n\nIt was Gabe's turn to squeeze Bailey's hands. She looked up at him and choked back sobs. \"And there you were. A handsome guy who picked up our dinner. Who was nice to us all and called me 'pretty'. I didn't know who you were until Kimmy recognised you. And even then, I didn't care. I just hoped you liked me. I wanted&mdash;\"\n\n\"Oh, God, Bailey,\" Gabe breathed. In an instant, he was around the table and took her in his arms. She buried her face in his shoulder and held on.\n\nShe felt so safe in his strong arms. He stroked her hair and whispered soothing things in her ear.\n\n\"Do you know how many dates I've been on?\" she asked, gasping for breath. He shook his head. \"One. And that includes tonight. I'm not a gold digger who's after your money and I'm not infatuated with my mom's TV boyfriend. I want you to like me, too.\"\n\nHe pulled back. She expected to see pity in his eyes, but he smiled instead. She sensed that they were more alike that either had suspected.\n\n\"I do like you, Bailey,\" Gabe said, not letting go. \"And that scares me.\"\n\n\"Why?\"\n\n\"Because despite all the reasons for you and I to not work,\" he paused to take a deep breath. \"I could fall in love with you.\"\n\nHer heart skipped a beat and she could only smile.\n\n\"Oh, Gabe . . . I&mdash;\" Whatever else she had to say was stopped by his lips pressing against hers.\n\nThey held on to each other desperately. \n\nShe ran her hands through his hair. He pulled her tight, his hands around her waist.\n\nI'm going to jump him right here, she thought to herself. She was about to make her move when Gabe stopped.\n\n\"Come on, Bailey.\" A shiver ran through her body at the sound of her name. \"Let's get you home.\"\n\n\"I could stay,\" she said quickly. He smiled and she could see a flash on indecision on his face.\n\n\"No . . . not tonight.\" Gabe brushed the hair out of her eyes before answering her unspoken question. \"I promised your dad I'd have you home by eleven and we're just barely going to make it. Besides, I've got to give you a reason to go out with me again. I don't want you to think I'm easy.\"\n\nThrough the tears, laughter danced in both their eyes.\n\nHe took her hand and led her to the garage. They got in his car and he drove her home. Neither spoke much. \n\nBailey curled up in the seat, their fingers intertwined. Her other hand gently caressed his arm. She noticed him eyeing her as he drove. She smiled to herself and blushed, suddenly feeling sexy.\n\nGabe pulled into her driveway and the motion sensor activated the porch light. He led her to the door. She could tell by the light coming through the blinds that the television in the living room was on. \n\n\"I had a wonderful time tonight,\" she said quietly, maneuvering Gabe so that they couldn't be seen by anyone inside the house.\n\n\"Me, too,\" he replied. \"May I call on you again?\"\n\n\"Of course,\" she said wrapping her arms around his neck. \"You can call me any time.\"\n\n\"Good night, Bailey Crawford,\" he whispered and then leaned in for one last kiss.\n\nShe didn't want to let go, but knew she couldn't spend all night with a boy on her front porch. Her parents and sister were going to give her a hard enough time as it was. \"Good night, Gabe MacKenzie. Miss me.\"\n\nIt might have been her imagination, but she heard him whisper, \"I already do.\"\n\nHe turned and went back to his car. She waited until he was backing out of the driveway before opening the front door and stepping in to her house. \n\nBoth her parents and April were up. It was three minutes past eleven.\n\n\"Did you have a good time tonight, Pumpkin?\" her dad asked.\n\n\"Yes, I had a wonderful time,\" she said dreamily. Her mom and sister giggled, but that didn't bother Bailey.\n\nShe gave each of her parents a kiss then seemed to float into her room along with the flowers Gabe had given her.\n\nBailey was lost on Cloud Nine with no signs of coming down any time soon.\n\n********************* \n\nGabe woke up the next morning feeling different. He hummed a tune and sang along with his iPod as he did half an hour on the Bowflex and another half hour on the elliptical. At about nine o'clock, he dialed Bailey's cell phone. It rolled into her voice mail. He left a short message, then went outside to do some work out in the yard.\n\nAt about noon, he was pulling weeds out in the flower garden. He was sweating under the August sun and didn't hear the girls until they had walked around the house.\n\n\"Hey, there!\" Bailey called.\n\nHe blushed, realising that he was wearing only a ratty pair of shorts and some sunglasses. Bailey and April stood there along with Morgan. The girls giggled and stared admiringly at him.\n\n\"What are you doing here?\" he asked, wiping his brow.\n\n\"We came in to town to do some shopping. Our prom date sent us some money for graduation and we thought we'd look for some back to school clothes,\" Bailey said, for once taking the lead from April. \"We were wondering if we could buy you lunch.\"\n\n\"That won't be necessary,\" Gabe said, knowing that taking him out for a meal, however inexpensive, would be a burden on the girls. Still, it was a nice gesture. \"Why don't I get cleaned up and we'll go to the mall together.\"\n\nHe went in and showered leaving the three girls parked on his living room sofa watching television. He scrubbed himself clean and resisted the urge to masturbate in the shower.\n\nAll three girls were dressed for summer. It was August, after all. However, it was Bailey who caught his eye. She was wearing a pair of tight&mdash;but not too tight&mdash;jean shorts and a fitted top that hugged her curves in all the right places. It covered the parts that needed to be covered and drew his eyes to the places he knew his vision shouldn't linger.\n\nApril and Morgan were similarly dressed, but his attention was fixed solely on Bailey and her dimpled smile. And her big, round breasts. And her slender waist. And her soft, wide rear end.\n\nHaving changed his odor, he threw on a pair of cargo shorts, some sandals and a casual polo shirt. He went back to the living room and the girls gathered up their things. At his insistence, they piled into his car and drove the short distance to the mall.\n\nThe place was crawling with people. Despite the faltering economy, the combination of back to school sales and necessity for new clothes had the crowds out in force. The three girls hit many of the vast array of stores that stocked trendy fashions, although a couple of times one of them&mdash;usually Bailey&mdash;would follow him into a store he wanted to visit just to make conversation.\n\nThey stopped for lunch a short time later in the food court. The girls insisted on buying his meal and he eventually relented, making sure to get nothing more than a basic combo meal so not to tax their budget.\n\nHaving filled up with carbs, the foursome hit the mall's second level for more shopping. The girls did a number on the bargain and clearance racks. He admired their proficiency in finding the best deals on high quality stuff at low prices. It seemed that despite their youth, all three had good sense when it came to money, and that impressed him.\n\nBy late afternoon, the girls's gift cards were all but tapped out. Their arms were full of bags and they were a little worn out from fighting the crowds at the mall.\n\nThe four of them drove back to Gabriel's house. The girls were debating what to do next. They weren't going to make it home in time for supper. One of their friends was apparently having a bonfire later that evening.\n\nGabe invited the girls in as they were trying to plan for the evening. \n\n\"Why don't you stay for dinner?\" he asked. \"I'm not much of a cook, but we could order pizza or Chinese or something.\"\n\nApril and Bailey exchanged a worried glance. They had mentioned stopping somewhere for a quick drive-thru combo meal.\n\n\"My treat,\" Gabe sensed the source of their apprehension.\n\nThey reluctantly shrugged. He had a local pizzeria on speed dial and they knew him as a generous tipper, so a short time later, two extra large pizzas showed up laden with toppings. The manager had even thrown in a couple of bags of chips and a two-litre of Pepsi for one of their special customers.\n\nThe delivery driver, who was one of the three or four who always fought for Gabe's ticket, got a little extra for his trouble when April answered the door. At first the thought he had the wrong house since he had expected a middle-aged guy to greet him. She tried to flirt with him, but he couldn't keep his eyes off her chest. \n\nGabe got to know April and Morgan a little better. Like the twins, Morgan was attending community college in the fall. She had aspirations of being a network administrator and had completed the A+, Network+ and a couple of CCNA certifications at the Washington County Vo-Tech Center. April had no idea what she wanted to do, so she was going to get her AA and then transfer to a four-year university to finish her bachelor's degree.\n\nHe and Bailey tried to maintain their distance in front of her sister and her friend, but several times throughout the night, he found himself wanting to reach out and take her hand or pull her close to him. The three girls kept making excuses to stay \"just a little bit longer\". After finishing off the pizza, they went downstairs to the basement and played billiards for a while.\n\nThe four of them decided to watch a movie on HBO. He fixed some popcorn in the microwave and settled down on the couch next to Bailey, but not obviously close. \n\n\"I don't mean to sound like I'm kicking you out,\" Gabe said as the movie's opening credits started. \"But don't you think your parents might be worried about where you are?\"\n\n\"Are you kicking us out?\" Bailey asked, once again batting her eyes at him.\n\n\"Yeah,\" April chimed in. \"Couldn't we stay here for the night?\"\n\n\"What would your parents say?\" Gabe asked. \"And wouldn't you rather be hanging out with your friends? A bonfire sounds a lot more exciting than me.\"\n\n\"You don't know our friends,\" Bailey said, and there was something odd in her tone. \"On a Saturday night most of them are probably drinking too much and having sex they're going to regret on Monday.\"\n\n\"That's all there is to do out in the boonies,\" Morgan said with a resigned sigh.\n\n\"And that kind of leaves us out since we don't really drink and we're all virgins,\" April said.\n\n\"Sis!\" Bailey shot her the I'm-about-to-smack-you look.\n\n\"What?\" her sister said sounding mildly annoyed. \"What's wrong with saving yourself for the right guy? It's not like you think the world of Tiffany Sias or any of those other girls who will jump in the sack with any guy who gives her a beer.\"\n\n\"There's nothing wrong with saving yourself for the right person,\" Gabe said, not daring to look Bailey in the eyes.\n\n\"Did you save yourself for the right person, Gabe?\" Morgan chimed in.\n\n\"I thought so at the time,\" he replied. \n\n\"Who was she?\" April asked curiously.\n\nGabe saw Bailey blush. \"That's none of your business. Now are you going to call your folks or what? You're welcome to stay here, but this is about all the excitement I'm good for.\"\n\n\"Any TV with ten HBO's on it is good for us,\" April smiled and reached for her phone.\n\n\"If we get bored, we could always play Dance Dance Revolution on your Playstation,\" Bailey giggled.\n\n\"What's so funny?\" Gabe asked.\n\n\"You just don't strike me as the DDR type.\" Her eyes twinkled.\n\n\"It's a great cardio workout,\" he replied, feigning defensiveness. \"Even though I suck at anything past expert level.\"\n\nBailey started to say something more, but was interrupted by April. \"Hi, Mom? . . . No, we're fine . . . We're at Mr. MacKenzie's . . . Yeah, he took us to the mall . . . No . . . No . . . Morgan is still with us . . . Listen, can we spend the night here? . . . No . . . Mom! No! . . . Okay . . . Okay . . . She wants to talk to you.\"\n\nGabe took the cell phone from the girl. \"Hello, Joanne?\"\n\n\"Are you going to be okay with the three girls?\" she asked.\n\n\"I think so,\" he replied gently, trying to sound like a friendly neighbour, not a creepy old man. \"We just sat down to watch a movie.\"\n\n\"And there won't be anything going on that the girls shouldn't be in to?\" she asked in her parental voice.\n\n\"No,\" he said, trying to sound reassuring. \"They're stuck with boring old me.\"\n\n\"I'm sure one of the girls will be especially happy tonight,\" Joanne said and he could sense the wink in her voice.\n\n\"I think so,\" Gabe glanced over at Bailey, who was fidgeting nervously.\n\nJoanne paused for a second. \"I guess it will be fine tonight. I'll call Morgan's folks. It would probably be best if they heard this from me. Let me talk to April again.\"\n\n\"Okay, thanks, Joanne,\" Gabe said before handing the phone back to Bailey's sister.\n\nHe broke into a wide smile and the other two girls breathed a sigh of relief. \n\n\"Um-hmm . . . Yes . . . Okay . . . Okay . . . Yes, Mom! I heard you the first time . . . No . . . Okay . . . Yeah, right! . . . Thanks, Mom . . . Love you, too.\" She closed the flip phone and smiled triumphantly. \"Mom says no drinking and no drugs. Morgan, she's gonna call your parents.\"\n\nThe movie started and a few minutes later, Morgan's phone rang. She had pretty much the same conversation with her parents and Gabe talked to them, too. With that business out of the way, the four of them got into the movie.\n\nGabe turned on his home theater with the surround sound and flipped out the lights. About halfway through, he jumped slightly at Bailey's touch. Her hand brushed against his leg. He looked over at the other two girls who were paying more attention to the big screen than they were to him.\n\nBailey's fingers wrapped around his and they spent the rest of the movie holding hands. He felt giddy, like he was fourteen again.\n\nWhen the movie ended, the girls flipped over to one of the other HBOs and started a second one. He got up from the couch and went looking for some blankets. \n\nHunting through the closet, he didn't hear April approach.\n\n\"Gabe?\" she said tentatively. \n\n\"Holy crap, April! You scared me!\"\n\n\"Sorry,\" she blushed. \"Listen . . . I shouldn't be saying anything to you about this but . . . Bailey really likes you.\"\n\n\"I like her, too.\"\n\n\"Good. I just don't want to see her get hurt.\"\n\n\"Me, neither,\" he said.\n\n\"And it's okay if you put your arm around her in front of us,\" she said with a smirk. \"She told us about your date.\"\n\nGabe's mouth fell open. He was speechless.\n\nApril smiled and then disappeared to go back downstairs. Gabe gathered up a few blankets and pillows. He picked up some soda out of the fridge and a couple of bags of chips.\n\nMorgan and April threw the pillows down on the floor and got comfortable. Gabe sat on the couch, and Bailey moved in next to him. A little closer this time.\n\nThe movie had already begun, and the four binged on junk food and soda. Not waiting for Bailey to make the first move, Gabe reached over and took her hand. \n\nShe beamed and cuddled up to him, resting her head on his shoulder.\n\nWhen the second movie ended, Morgan was out like a light. April lazily flipped channels, finally settling on a re-run of Saturday Night Live. Neither Gabe nor Bailey had moved.\n\nBy the time SNL was over, April was also asleep and Bailey was nodding off. Gabe's eyelids were heavy, too. \n\nHe tapped Bailey on the shoulder and excused himself to use the bathroom. When he returned, she was laying across the couch, snoring softly. He pulled a blanket over each of the girls.\n\nGabe smiled to himself and turned the volume down, but left the TV on in case the girls woke up later and wanted to watch something else. His eyes fixed on Bailey. She seemed so sweet and innocent. And young. \n\nHe brushed the hair out of her face. He caressed the soft skin of her cheek and bent over to kiss her softly. \"Good night, sweetheart.\"\n\nMoving as quietly as he could, Gabe went back up stairs and set the alarm, which would rouse the whole block if anyone tried to leave or enter the house. He brushed his teeth and splashed some water on his face.\n\nThen he went into the guest suite&mdash;his room&mdash;and changed into a t-shirt and a pair of workout shorts, then crawled into bed.\n\nHe fell asleep, the memory of Bailey's gentle touch leaving a smile on his lips.\n\nIt was still dark when Gabe felt someone stirring against him. He sat up quickly, blinking the sleep out of his eyes.\n\n\"Shhhhh,\" Bailey whispered. She slipped under the sheets into his bed.\n\n\"What are you doing?\" Gabe asked, reaching for the light on the nightstand.\n\nBailey tugged at his arm, staying his hand. The room remained dark. He started to say something else, but she silenced him with a kiss. She gently pushed him back into the pillows.\n\nShe leaned over and pressed her body against him. It took a second for his body to respond to the commands his mind sent it.\n\nHis arms wrapped around her. He was very conscious of her breasts pushing against him. \n\n\"Go back to sleep,\" Bailey said softly and a part of him wondered if this was just a dream. She pulled back and rolled over on her side. Her hand took Gabe's and she draped his arm around her waist. \n\nStill dazed, he spooned up behind her and the two held each other until dawn.\n\nGabe was dreaming of a wife and baby when Bailey woke herself, kissed him gently on the lips and then went back downstairs, lest her sister and best friend realise where she had really spent the night.\n\n************** \n\nEveryone woke the next morning right where they were supposed to be. Of the girls, Bailey was up first. She heard the shower upstairs running. She took a quick drink of flat Pepsi to wash away the stale taste of Doritos and pizza.\n\nBailey smiled at the memory of the previous night. Holding hands with her beau. Falling asleep in his bed with his arms wrapped around her. Everything felt so . . . so . . . right.\n\nMorgan and April stirred few minutes later. The girls trudged up the steps wearing the same clothes from the day before. Their hair was a mess. Their make-up had long since rubbed off. They hadn't brushed their teeth in over twenty-four hours.\n\nThey found Gabe in the kitchen. He was reading the directions on a box of hashed brown potatoes. A carton of eggs, some milk and a package of bacon sat on the counter. He was obviously lost.\n\n\"Good morning, girls,\" he said with a broad smile that Bailey sensed was meant especially for her. \"Are you guys hungry?\"\n\nHe was trying to be a good host, but it seemed that the kitchen was not his element. As politely as possible, Bailey and April pushed him aside and took over. Growing up on a farm, they knew how to cook; their mother and grandmothers had seen to that. \n\nWhat amazed them was how nice Gabe's kitchen was. He had high-end fixtures, marble countertops and enough space to feed an army. It was a far cry from the cramped quarters and often-broken appliances they were used to. The girls cooked up a hearty country breakfast with fresh home-fried potatoes, eggs and bacon. Gabe busied himself slicing up some fruit and appearing to be helpful.\n\nThey sat at his kitchen table and enjoyed the meal together. He cleaned up the mess while the girls freshened up in the bathrooms. Bailey wanted to stay a little longer, and it seemed to her that Gabe wanted them to stay, too, but they knew they had to be getting home. April had to work that afternoon and both girls had weekend chores that needed to be done.\n\nGabe helped them load up the clothes and things they bought at the mall the day before. ",
        "She and Gabriel stood awkwardly in the driveway.\n\n\"Thanks for having us over last night,\" she said quietly. Out of the corner of her eye, she saw Morgan and April watching them from the car.\n\n\"It was my pleasure,\" he returned. There was a brief pause. \"Would you like to go out again sometime this week?\"\n\n\"I would love to,\" she replied. \"I don't know when I work this week, but I usually don't work more than one or two nights.\"\n\n\"Will you know later today?\" Gabe asked. \"Why don't you call me when you find out your schedule?\"\n\n\"I will,\" she promised. \n\nHe stood there for a moment, unsure of what to do next. Bailey decided she needed to take the initiative.\n\nHer hand reached for his and she tugged gently. She tilted her head back and closed her eyes. After a first quick peck, Gabe pulled back as if he didn't want to make a scene in front of April and Morgan, but her hand went to his neck and she pulled him close.\n\nGabe's lips were soft and warm. She felt deliciously light-headed as she planted a series of soft kisses on him, resisting the urge to stick her tongue down his throat.\n\nFinally she let go, a devilish smile on her face. He stood there, bewildered, for a moment. She thrust out her chest just to tease him and winked.\n\n\"Thanks again, Gabe,\" she said and got in the car. April and Morgan were both grinning like Cheshire cats.\n\n\"Ummmm, sure thing,\" he stammered. \n\nShe closed the door, put on her seatbelt, started the car and backed out of his driveway. As they drove away, she honked the horn. He waved and in her rearview mirror, she saw that he hadn't moved.\n\nThe drive home was full of teasing from Morgan and her sister, but Bailey didn't care. \n\n*************** \n\nGabe hit the pause button for the DVR and reached for the ringing phone.\n\nOver the past two weeks, he hadn't seen as much of Bailey as he would have liked. She was working a lot and then classes started at the community college. They went out on a couple more dates, each ending with him dropping her off at home. He spent a little bit of time with her parents, and it seems that they had accepted&mdash;and welcomed&mdash;him as a fact in Bailey's life.\n\nIf he would admit it to himself, he really wanted her to stay over with him, this time without her sister or friends there. But neither of them seemed to have any inclination to rush things, and for that, he was happy. Gabe found that once Bailey began to open up to him, he was more and more interested in her, and not because she got his heart pounding. \n\nShe was a smart girl who simply had the misfortune of growing up in a poor, rural town. Her graduating class was all of 126 kids and she was third; April was twenty-fourth. The small high school wasn't big enough to offer a lot of AP classes and electives, but in the classes she took, she excelled.\n\nMany of the people in the area were \"provincial\". That is, they didn't see much beyond their small community. The small towns were good enough for everyone's parents, grandparents and great-grandparents, so folks tended to stay in one place. Even the people who went away to college or the service often returned, sometimes from higher-paying jobs, just to be close to their families and \"home\". In many cases streets like Napier Road were named that because everyone who lived there was a Napier.\n\nGabriel sensed that Bailey was destined for something more, and she knew it. But she just didn't know how she was going to get there. Her family was proud and well-to-do by the standards of their community, but a college education was going to be a stretch. On top of the expense, he knew that coming from a small, rural high school didn't prepare her for college in the same way that one of the larger high schools in the city would have. They simply didn't have the resources, technology and staff.  \n\nBut she was smart and determined, and while it might mean that she would have to study a little harder than some of the other kids, she would certainly succeed at anything she set her mind to.\n\nHe wondered who would be calling him on a Wednesday night. \"Hello?\"\n\n\"Gabe? It's Bailey.\" Immediately, he knew something was wrong. He reached for the remote control and flipped the TV off.\n\n\"What's wrong?\"\n\n\"We were in a car accident&mdash;\"\n\nGabe was on his feet and already hunting for his keys. \"Are you okay? Where are you?\"\n\nThere were tremors in her voice. \"We're okay, I think. We're at the corner of Call and Phillips Highway.\"\n\n\"I'll be right there,\" Gabe said as he bounded up the steps. \"Have you called 911?\"\n\n\"Yes,\" she breathed.\n\n\"Hang on, honey,\" he said. \"I'm on my way.\"\n\nGabe drove like a mad man. When he got to the accident scene, he wondered how either of the girls could be unhurt. \n\nThe back half of their car was a mangled mess. The passenger's side was collapsed in from the B-pillar back. Another car sat along the side of the road, its front bumper almost in the driver's seat. Both of that car's airbags were deployed. An engine block sat in the middle of the road. Coolant, oil and other engine fluids leaked out all over the pavement.\n\nTwo police cars, an ambulance and a fire truck lit up the night sky with their lights. An EMT crew was securing someone on to a gurney. Gabe desperately hoped it wasn't one of the girls.\n\nHe let out a sigh of relief when he saw April and Bailey standing over on the side of the road. April's eyes were wide and she looked like she had been crying. Bailey was talking to a police officer.\n\n\"Excuse me, sir, can I help you?\" a second officer asked him briskly.\n\n\"I'm with them,\" he pointed to the girls. \"What happened?\"\n\n\"They got hit by a drunk driver,\" the officer replied. \"He ran the red light. The tall one's lucky; if they were going five miles an hour slower or the other guy's going five miles an hour faster, we'd be life-flighting her to a hospital.\"\n\nGabe ran over to the girls. He wrapped them both in his arms. Everyone began to talk at once.\n\n\"Are you okay?\" he asked as the girls chattered on. Both nodded. \"Have you called your folks?\"\n\nBailey shook her head. \n\nApril burst into tears. \"No. Daddy's going to kill us.\"\n\n\"No, he's not, miss,\" the police officer said in a firm but compassionate voice. \"That other guy was drunk out of his mind. We just ran his tags; he's driving on a suspended license after two other DUI's. He'll be going to jail for a long time.\"  \n\n\"But we wrecked our car,\" April wailed. \"We don't have&mdash;\"\n\n\"I'll take care of that,\" Gabe said as Bailey tried to comfort her sister. He scrolled through the numbers on his phone and dialed Bailey's house. Her mom picked up the phone. \"Hi, Joanne?\"\n\n\"Hello, Gabriel,\" she said. \"Bailey's not here; the girls had class tonight.\"\n\n\"I know, they're with me,\" he paused for a second. \"Joanne, the girls were in a car accident tonight.\"\n\n\"What!?!?!\"\n\n\"They're both okay,\" Gabe said calmly. \"A drunk driver ran through a red light and hit them. Neither was hurt, but the car is going to be totaled.\"\n\n\"I . . . Is?\" she stammered. \n\n\"I think we're about done here,\" Gabe said, glancing over at the officer who was writing the report. \"I'm going to take the girls home with me. If you'd like to meet me at my house, you're welcome to come over tonight or I can bring them home tomorrow.\"\n\n\"We'll come to you,\" she said. \"They're both okay?\"\n\n\"Yes, they're going to be fine,\" he said confidently.\n\n\"We'll be there in an hour,\" she said and Gabe closed up his phone.\n\nHe went over to one of the police officers. \"Do you mind if I take some pictures?\"\n\n\"Be my guest,\" the policeman said absently.\n\nWith his pocket camera, Gabe took some pictures of both cars where they had stopped. He breathed a sigh of relief, knowing that the girls were only a fraction of a second from either being dead or seriously injured.\n\nWhen the wreckers arrived, Gabe gave them the name of a body shop where he had some work done in the past. The other car was going to be impounded as evidence; it was apparently loaded with empty bottles of beer and tequila.\n\nApril and Bailey retrieved their purses and bookbags out of their car then climbed into the backseat of Gabe's Lexus. He drove them back to his house. No one spoke.\n\nHe led them inside and gave them each a glass of water. A few minutes later, Andy and Joanne arrived. The girls rushed into their parents's arms. This was the first accident for any of them.\n\nGabe mostly stayed out of the way as the girls recounted what happened.\n\nAndy was upset, mostly because his daughters's lives had been endangered. The girls had thought that he would be mad that the car was destroyed, but when he saw the pictures Gabe had taken, he was singularly thankful that the girls were okay.\n\n\"Cars can be replaced,\" Andy said firmly. \"My little girls cannot.\"\n\n\"Thank you for everything tonight, Gabe,\" Joanne gave him a warm hug.\n\n\"You're very welcome,\" he said with a smile. \"Listen . . . it's late. Why don't you guys stay over here tonight? We can take care of everything in the morning.\"\n\n\"We don't want to impose,\" Andy said.\n\nGabe waved him off. \"I've got lots of extra bedrooms. If you leave now, you won't get home until after midnight anyway.\"\n\n\"We've got work tomorrow&mdash;\"\n\n\"Andy, you own the garage,\" Joanne interrupted. \"I'll call off tomorrow and you just let the guys know that they have to open without you. We can spare a day to take care of our kids.\"\n\nThe girls's father knew she had a point.\n\n\"Are you sure?\" Joanne asked Gabe.\n\n\"I insist,\" he replied. And that was that.\n\nHe showed everyone the extra rooms that he had. Upstairs, there were three bedrooms, plus a fourth room he had converted into a home office and place to store his show business mementoes. \n\nGabe found a stack of clothes for everyone to sleep in, then he retreated into his bedroom. All night, he had wanted to take Bailey in his arms, thankful that she was okay. Like her parents, he knew how close he had come to losing her. One of the officers had estimated that the drunk driver was going between sixty and seventy miles per hour. The speed limit on Call Street is thirty-five.\n\nHe had brushed his teeth and changed in to a pair of workout shorts when there was a knock on the door. Gabe hurriedly pulled a nightshirt over his head.\n\n\"Come in,\" he called.\n\nThe door opened and Bailey tentatively stuck her head in. She smiled shyly.\n\n\"Thanks for coming to get us,\" she said softly. Bailey stepped into his room, leaving the door open.\n\nWithout any prompting, she seemed to instinctively step into his arms. Gabe reflexively pulled her close, thankful to feel her close to him.\n\n\"You're welcome,\" he replied. There was so much more he wanted to say, but instead he simply held her.\n\nThe events of the night now passed, Gabe savoured the smell of her hair and the softness of her skin against him. He wanted to lead her to his bed and hold her until morning, but he knew that it wouldn't happen. Not tonight. Not with her parents in one of his bedrooms.\n\nShe reluctantly withdrew from their embrace, but she didn't let go. Her hands went to the back of his neck and she lifted up on her tiptoes. Their lips met in a desperate kiss.\n\nGabe's hands went to the small of her back. Through the haze of the kiss, he realised that she wasn't wearing a bra; her breasts were pressed against him through the thin material of two t-shirts. He wanted to tear her clothes off and ravage her body. He wanted to be as close to her as possible.\n\nInstead, he settled for a deep, wet, passionate, sloppy kiss.\n\nThey pressed their foreheads together. The tips of their noses brushed.\n\n\"Good night, Gabe MacKenzie,\" she said quietly.\n\nHis hands framed her face and he gave her one more gentle kiss. \"Good night, Bailey Crawford.\"\n\nAgainst everything he wanted that night, Gabe let go and watched the sway of Bailey's hips as she walked out of his room. As she closed the door, she turned and winked seductively at him.\n\nIt was then that Gabe realized just how hard his cock was. And that he had spent the last few moments poking a girl half his age with it.\n\nHe climbed into bed and fell into a fitful sleep, dreaming of Bailey's soft body.\n\n*************** \n\nThe next morning, Gabe woke to the most wonderful smell. He recognised it instantly: biscuits, sausage gravy and eggs. He stumbled out of bed and into the bathroom. Once refreshed, he went out to his kitchen and found Joanne and Bailey in his kitchen, skillfully preparing breakfast.\n\n\"Where did you find all this food?\" he asked.\n\n\"We're used to waking up early,\" Joanne explained. \"Andy and I ran out to the store while the rest of you were sleeping.\"\n\n\"Where is he?\"\n\n\"Outside,\" Bailey flashed him a secret smile. \"Talking to the insurance company.\"\n\nGabe glanced over at the clock. It was almost nine.\n\n\"You have a wonderful kitchen,\" Joanne said. \"You should use it more often.\"\n\n\"Is it that obvious?\" Gabe said sheepishly.\n\n\"Yes,\" Bailey and her mom said in unison. The three of them laughed.\n\n\"I'm a single guy,\" he shrugged. \"And I never was much of a cook. Mom always did that for me. Besides, it's kind of pointless to make a whole meal when it's just me.\"\n\n\"Excuses, excuses,\" Joanne chided him. \"Honey, can you get our host something to drink?\"\n\n\"What would you like?\" Bailey asked.\n\n\"Um, orange juice?\"\n\n\"Coming right up.\" As she dug into the fridge, Gabe had to consciously avert his eyes to avoid lingering on the young woman's rear end. Once she had poured him a glass, she surprised him by walking around the counter and giving him a good morning kiss on the cheek. Joanne winked but didn't say anything.\n\nA few minutes later, Andy came in from the patio.\n\n\"Bailey, breakfast is almost ready,\" Joanne said. \"Why don't you go get your sister up?\"\n\nThe girl nodded and bounded up the steps.\n\n\"How did it go?\" Gabe asked.\n\n\"They're going to total the car,\" Andy said with a sigh. \"They're going to send an adjuster out to look at it today, but it's too old to bother fixin'. I don't know what we're gonna do . . . the girls have got to get to school somehow. And we don't have the money to buy them a new car. I guess I'll see if Brad still has that Oldsmobile he's trying to get rid of.\"\n\n\"We'll work something out.\" Joanne looked like she wanted to chide her husband for worrying out loud, but she didn't go there. Not in front of Gabe.\n\nIt didn't take him more than half a second to make a decision. Gabe knew the Crawfords were good parents who tried to look out for their kids. They worked hard but didn't have the means. He did.\n\n\"The girls could stay here,\" Gabe blurted out. \"I mean . . . I've got five empty bedrooms. And an extra car.\"\n\nAndy and Joanne exchanged glances.\n\n\"We couldn't&mdash;\"\n\n\"It's no problem at all,\" Gabe said, thinking quickly. \"Look, this house is way too big for me. I haven't gone upstairs in months. It would save the girls two hours in the car every day. Heck, even Morgan and Kimmy could move in, too.\"\n\nHe saw the gears turning in their heads. He knew what Andy was thinking.\n\n\"Besides, I'm going back to New York next week after Labor Day.\" Translation: I won't be around to prey upon your teenage daughter. No matter how much Andy liked him, a boy&mdash;no matter what his age&mdash;was a threat to his little girls. And they would always be his little girls. \"They're bringing me back to the show full-time. Plus my agent is lining up some publicity junkets for me. Conventions, guest spots and such. The girls are all welcome to live here and keep an eye on the place.\"\n\n\"Are you sure you're willing to turn your house over to four teenage girls?\" Joanne asked with a smile.\n\n\"I have a feeling that they'll take care of the place.\" Gabe replied. That much was true. He sensed that the girls were prone to making good decisions and their families seemed nice enough. \"Also, do you really want them driving home at night five days a week? And what about when winter gets here? If it's snowing or icy out, the roads out to Washington County aren't exactly kept up very well.\"\n\nGabe could see that there was something else eating at Andy. He didn't want to seem like a freeloader. \n\n\"Let's do the math,\" Gabe said. \"It's, what . . . thirty-five miles each way? That's seventy miles a day. At three-fifty, four bucks a gallon. Even in a high mileage car, that's eight, nine bucks a day in gas. For twenty days a month. And that doesn't count wear and tear on the car. . . . I'll tell you what: The four girls can move in here for four hundred dollars a month. That includes the utilities. They will be responsible for keeping the place up. It will save me from having to pay someone come by and check on things and mow the lawn.\"\n\nAndy started to reply, but the girls coming down the steps put their conversation on hold. The five of them sat around the kitchen table and ate while the food was hot. The girls asked about the car and wondered what they were going to do.\n\nWhen they were done, Joanne told the girls that they had to get ready for class; car accidents didn't mean that they could cut school. They started to protest, but were told by all three of the adults that missing classes at the beginning of the semester wasn't an option.\n\n\"Are you sure?\" Andy asked quietly once the twins were out of earshot.\n\n\"Positive,\" Gabe replied, trying not to sound too eager. Whatever lecherous thoughts he had were back-burnered by his honest desire to help out some people who deserved it. \"And they have to be doing well in school or it's back home they go.\"\n\nJoanne only smiled at her husband.\n\n\"I guess it will be okay,\" Andy said, reason prevailing over all of his other misgivings. \"If the girls want to.\"\n\n\"Should we tell them now or when they get back from class?\" Joanne asked.\n\nBoth Andy and Gabe chuckled. \n\n\"How are they going to get home tonight?\" she asked, this time all serious.\n\n\"They can take my car,\" Gabe offered. \"I'll drive Mom's old car. If it's okay with Morgan and Kimmy, they can all move up this weekend.\"\n\nThe other two exchanged a knowing look. The girls came back downstairs a few minutes later. \n\n\"Who's taking us to school?\" Bailey asked.\n\n\"Take my car.\" Gabe tossed her the key and she almost didn't catch it. Her eyes were wide. \n\n\"We'll talk when you get home tonight,\" Andy said. Although he was smiling, there was a sadness in his voice, as if he knew that his little girls suddenly weren't so little any more.\n\n************** \n\nThe next night, Gabe was on the elliptical and watching TV when the doorbell rang. He went upstairs and found his four prom dates at the door. \n\n\"What are you doing here?\" he asked, opening the door. Only Bailey stepped inside. She was carrying a duffel bag.\n\nGabe noticed that his car and two others were in his driveway. \n\n\"We just wanted to thank you for giving us a place to live for the next semester,\" Morgan said. \"We couldn't afford anything else.\"\n\n\"It's my pleasure,\" Gabe said with a smile. \"Where are you guys off to?\"\n\n\"We're staying over at Morgan's house,\" Bailey said sheepishly. \"At least that's what Daddy thinks.\"\n\n\"I don't want to get you guys in trouble,\" Gabe frowned. The last thing he wanted to do was piss off Bailey's father.\n\n\"It's okay. Mom says you can call her if you want. We'll see you in the morning.\" April winked at her sister. Bailey blushed.\n\nWith that, the other three girls piled into one of the cars and drove off leaving Gabe and Bailey standing in the foyer of his house.\n\n\"What was that about?\" Gabe asked.\n\nBailey smiled innocently and walked towards his living room. Gabe hurriedly shut the front door and followed her. She dropped her bag on the floor next to the island then turned and stepped into Gabriel's arms.\n\n\"Why are you here?\" he whispered.\n\n\"Because Mama said we needed some time to talk.\" Before he could reply, she gave him a gentle kiss. She nibbled on his lips as he wrapped his arms around her.",
        "Gabe lost himself to the young woman in his arms. She felt so comfortable. He pressed a little harder, but she pulled away.\n\nShe took his hand and led him to the living room. They fell on to the couch. He sat back. Bailey half-turned to face him.\n\n\"Mama says you're going back to New York on Wednesday,\" she started.\n\n\"That's right,\" Gabe said, a twinge of regret in his voice.\n\n\"So you won't be around much this fall?\"\n\n\"I'm afraid not,\" he winced. \"They're writing several story arcs involving me. Rose said she had all sorts of ideas while I was out and they've been simmering for the last two years.\"\n\n\"Do you want to go back?\" Bailey asked softly.\n\n\"Yes,\" he admitted after a second. \"It felt good to be working again. I've basically been taking up space for the last year . . . since Mom died.\"\n\nBailey reached out to take his hand at the mention of his mother. \"Where does that leave us?\"\n\nGabriel looked away and shook his head. \"I don't know. I wish . . . Every day, I wake up and pinch myself. I don't know why you seem interested in me.\"\n\n\"And I don't know what you see in me,\" Bailey said. She reached out and turned his face so he was looking at her.\n\n\"I see the most beautiful woman in the world,\" Gabe whispered. \n\nAll she could do was blush.\n\n\"So where does that leave us?\" she asked again. Neither spoke for a long time. It was as if neither wanted to think about what would happen after the next Wednesday.\n\n\"What do you want out of us?\" Gabe finally said.\n\nBailey took a deep breath. \"Here's what I don't want: I don't want to jump into bed. I don't want to rush into anything. I don't want to get attached to you if you're going to move away or find someone else. What do you want out of us?\"<br/>\n\n\"I really don't know, Bailey,\" he said. \"This has all been kind of sudden for me. I can't believe that you find me interesting. I don't understand what you see in some guy who's thirty-five. But I don't think . . . I don't want to walk away from you . . . from us. Mom used to say that opportunity doesn't come around twice. And I don't want to think that I won't get another chance to have you in my life after I leave on Wednesday.\"\n\nHer gaze softened and she smiled. She scooted over, so she was sitting right next to him. He leaned over and gave her a kiss. \n\nGabriel and Bailey sat on the couch well into the evening. They talked about themselves and asked about each other. They shared some of the hopes and dreams and fears.\n\nHe told her about his mother's sudden stroke and how he dropped everything to care for her. She talked about growing up in a small town with little hope of getting out. \n\nThey both realised that they had spent their entire lives through high school in the shadow of their older, more popular siblings. And they realised that they had more in common than they had thought.\n\nIn short, they had \"the night\". Losing track of time, Gabe and Bailey stayed up investing in each other and in their relationship. And not too much later, when they looked back, both realised that was when they fell in love.\n\n*************** \n\nWith a yawn, Bailey stretched, unconsciously pushing her chest out. She blushed when she saw the flash of desire in Gabe's eyes.\n\nThey had been up all night talking and both were getting tired. Left unspoken were the sleeping arrangements.\n\nWith a little bit of conspiratorial assistance from her mother, Bailey had managed to sneak away to spend the night with her \"boyfriend\". She and April had told their dad that they were going to Morgan's house&mdash;with the implication that they would be staying there all night&mdash;which was a fairly common occurrence. They did go to Morgan's; they just didn't stay there.\n\nMorgan's mother was in on the scheme and Joanne had sworn her to secrecy. The other girl's father was working a double shift and wouldn't have noticed whether there were two or three or twelve extra girls staying over.\n\nTruly, Bailey didn't know what she was doing there. Despite several dates, for all she knew, Gabe MacKenzie was a homicidal maniac or possessive psycho guy. She was relying purely on her instincts.\n\nAny fears she may have had were washed away as they talked.\n\nShe realised that he was just a perplexed at her interest in him as she was about his interest in her. Bailey liked that he wasn't in a hurry to touch or paw at her. His hands didn't roam, even if his eyes did. He was the perfect gentleman. For someone who could have had anyone he desired&mdash;certainly anyone in their town&mdash;when Bailey was near him, she was the center of his attention.\n\nWhen she was around Gabe, Bailey felt sexy. She felt desired. From the time when they were little, she always knew April was prettier. She was thin and athletic. As they got older, Bailey thought of herself as short and dumpy; April got all the good curves, she got the leftovers. Her parents loved them both, but she knew it would always be her sister who drew everyone's attention.\n\nSo it was to her great surprise that it was she, not April, whom the soap opera actor had noticed. It gave her fragile teenage ego a healthy boost. Here was a guy who was successful, famous and wealthy who seemed to see past her meek smile, tubby belly and wide hips. He was interested in her, not her boobs and definitely not her sister.\n\nIt only bothered her a little that there was seventeen years between them. It didn't seem to be an issue with her mom and even her dad seemed okay with the way her budding romance with Gabriel was progressing. \n\nHe just didn't need to know that she was spending the night alone with Gabe.\n\nThey got up from the couch and went back into the kitchen. She picked up her duffel bag.\n\n\"Do you want to pick out which room you want now?\" he asked. \"You'll get first dibs.\"\n\nBailey grinned. \"April and I will probably share the big bedroom upstairs. After eighteen years, we'd feel funny without one another there. Besides, tonight I'm sleeping in your room.\"\n\n\"What?!?!? I thought you said&mdash;\"\n\n\"I didn't say I was ready to give you my virginity yet,\" Bailey said with a wink. She wrapped her arms around Gabriel and nuzzled up against his neck. \"But that night . . . when you were holding me . . . I miss that. I liked feeling you close to me. And I want that. Tonight.\"\n\n\"Okay.\" Gabe's voice was so low she almost didn't hear him. \n\nHe led her to his room. She took her bag into the bathroom and changed into a pair of boxer shorts and a t-shirt she had swiped the last time she stayed at Gabe's. Then she brushed her teeth and pulled her hair up with a scrunchy.\n\nShe went out into the bedroom and Gabriel was nowhere to be found. The television was on; so was a light on one of the nightstands. She climbed into the queen-sized bed, pulled the top sheet over her and waited.\n\nA few minutes later, Gabe returned. He had changed into a t-shirt and a pair of workout shorts. Taking his turn in the bathroom, he climbed into bed next to Bailey and turned out the light.\n\nHe leaned over to kiss her goodnight and chuckled.\n\n\"What are you laughing about?\" she asked, feigning innocence.\n\n\"Where did you get that shirt?\"\n\n\"It was in the stack you brought us the other night. What's so funny?\" She thrust out her chest behind the words \"Huge Tracts of Land\" written in a medieval script. Gabe snorted and politely ignored the nipples which were sticking out from behind the thin cotton. \"I'm sure there's a boob joke in there somewhere.\"\n\n\"Oh, there is,\" Gabe stifled a laugh. \"It's a Monty Python joke.\"\n\n\"A who joke?\"\n\n\"Monty Python,\" he said, suddenly realising that she probably didn't know who they were. \"British comedy group. Life of Brian. Holy Grail. Meaning of Life.\"\n\nShe only stared at him blankly.\n\n\"Remind me to take you to see Spamalot in New York sometime,\" he said.\n\n\"I'd love to,\" she said, a sultry look flashing across her face. \"Where did you get the shirt?\"\n\n\"It was in a gift bag at a science fiction/fantasy convention a few years ago,\" he said. \"I was one of the featured guests. I had a recurring part on Babylon 5 and I got killed on Deep Space Nine and Xena. That makes me a somewhat regular on the sci-fi circuit.\"\n\n\"You get killed a lot,\" Bailey laughed. \"I hope your life insurance is paid up.\"\n\n\"That's what character actors do,\" he reached over to tickle her. The two collapsed in a heap. His hands inadvertently brushed her breasts, sending a shiver throughout her body.\n\nShe cupped his face with her hands and pulled him to her. His strong arms enveloped her. Bailey pulled him on top of her, his weight pressing down.\n\nThey seemed to fall into the soft mattress. She felt light-headed at the intensity of their kiss. \n\nHe let up just long enough to hunt for the remote control and flip the TV off.\n\nShe could barely contain the delirious bliss she felt in Gabriel's arms. His hands brushed the hair out of her face. A little bit of moonlight shone through the blinds. Gabe's angular features seemed to have a soft blue glow. \n\nBailey felt so safe there with Gabriel. She truly felt like he was her guardian angel.\n\n\"What do you want me to do?\" he asked quietly, seeking her permission before going any further. \n\nEven before she said the words, she already knew the answer. \"If I said, 'Hold me', what would you do?\"\n\n\"I'd pull you close and never let you go.\"\n\n\"And if I said, 'Anything you want', what would you do?\"\n\nHis answer made her heart race. \"I'd undress you . . . kiss every inch of your body . . . And then make love to you until neither of us could move.\"\n\n\"I like the sound of that,\" Bailey purred. For just a second, she wondered if she would give in to her desires. It took every ounce of willpower she could muster not to beg Gabriel to take her right there. \"Sit back.\"\n\nObediently, Gabe rolled on to his back. Bailey pushed the sheets out of the way and straddled him. She could feel the length of Gabe's cock beneath her. It was as hard as a rock. An electric jolt started from between her legs and ran down her toes and up her spine.\n\nShe leaned over and kissed him. Forcefully this time. She surrendered to his grasp, allowing herself to fall into his embrace.\n\nUnlike their earlier gentle kisses, this time their teeth knocked together. He sucked on her tongue. She bit his lip hungrily.\n\nTheir breathing became rapid. She could feel the heart pounding in his chest.\n\nGabe's hands ran through her hair. Her fingertips ran the length of his neck and shoulders.\n\nBailey sat back and in the dim light she could see his eyes seething with lust.\n\nShe sat back, feeling Gabe's hard cock so close to her virgin pussy. She closed her eyes and imagined herself sitting there with nothing between them. She thought about impaling herself on him. Taking him inside her. Riding him until he made her cum, then feeling his semen shooting off inside her.\n\nWithout opening her eyes, she took Gabe's hands in hers. She stuck out her bra-less chest and whispered, \"Touch them.\"\n\nA squeal of delight escaped her lips as Gabriel gently cupped her breasts. He felt so gentle&mdash;grateful even&mdash;holding them in his hands. \n\nSo unlike the drunken gropes of teenage boys who thought they could cop a quick feel off the fat girl.\n\nAll she could do was moan as he squeezed her gently. The space between her legs instantly became slick. Her nipples crinkled up and she cried out when he rolled them between his fingers.\n\n\"That feels so good,\" she gasped.\n\n\"Oh, god, Bailey&mdash;\"\n\n\"That's it, Gabe . . . Pinch them . . . Oh, yes!\"\n\nBailey had to bite her lip to keep herself from screaming with pleasure.\n\nGabriel's touch was firm, yet gentle. His hands were strong. His movements smooth.\n\nHe kneaded her breasts. With each pass a wave of bliss rushed through her body. She looked down at him. \n\nHis eyes were hooded over with a desire that surely matched her own. Almost instinctively, she began to grind her hips in time with the rhythm of his hands.\n\nThey both moaned, a little louder this time. She leaned over and their lips met.\n\nA dizzy spell came over her and a jolt of pleasure shot through her body. \n\nBailey collapsed to the side, her legs twitching a little bit. The mini-orgasm left her shaking . . . in the good way.\n\nGabe's hands never left her breasts. He cupped them as he kissed her.\n\nShe gave him a loving smile, which he eagerly returned.\n\n\"I want you to do something for me,\" she said, her voice sultry.\n\n\"Anything,\" Gabe breathed.\n\n\"Take off your shorts,\" Bailey whispered. \"I want to see you.\"\n\nLaying back in the pillows, she watched Gabe lift his hips and push his shorts and boxer briefs down. She stared admiringly at his body. While he wasn't chiseled beefcake, he was a very handsome man who spent an ample amount of time working out. He was built more like a distance runner or soccer player than a body builder. She guessed it was all part of staying in shape to be on TV.\n\nAt the sight of his erect cock, Bailey's mouth began to water. Her pussy flooded with anticipation. \n\n\"Touch yourself,\" she said softly. Without question, Gabe began to stroke the length of his cock, slowly at first.\n\nI need to cum before I rape him, Bailey thought to herself. And from the looks of it, he probably needed a release himself or she was going to wake up the next morning and not be a virgin any more.\n\nUnconsciously, her hand went inside the elastic band of her shorts and between her legs. Sure enough, she was soaked. The cotton of her boxers was wet, as were her labia.\n\n\"Gabe . . . I want you to see this,\" she closed her eyes and began to tease her swollen clit. \"I've done this every night since prom.\"\n\n\"Oh my god, Bailey,\" his moan matched hers. \n\nHer eyes went to his hand, which was drawn into a tight fist around his cock. The head of his cock stuck out as he stroked up and down.\n\n\"I think about you making love to me,\" she continued, her hand moving a little faster. \"I want you to . . . sometimes, I want you to have me long and slow . . .\"\n\nGabe's eyes met hers.\n\n\". . . And sometimes . . . I want you to fuck the shit out of me,\" she gasped. \"Would you do that, Gabe?\"\n\n\"Yes, Bailey,\" he groaned. \"I'll do anything you want. I just need to be with you.\"\n\n\"Do you do this? Do you touch yourself and think about me?\"\n\n\"I do,\" he admitted. \"I think things about you I shouldn't.\"\n\n\"Like what?\" she asked. Her toes began to tingle again.\n\n\"You're going to think less of me if I tell you,\" he said softly.\n\n\"No, I won't,\" Bailey said, knowing that her thoughts about him were probably equally impure.\n\n\"I want you to take my cock in your mouth,\" Gabe said, unable to contain his libidinous fantasies any more. \"I want to fuck you on my kitchen table and in the hot tub. I want to bend you over the side of the bed fuck your brains out . . . I want to eat your pussy all night long . . . Oh, Bailey!\"\n\nHer free hand went to one of her breasts. She entered herself with two fingers, imagining it was Gabe's beautiful cock.\n\n\"Gabe . . . don't . . . don't cum yet,\" she said desperately. She reached out for his free hand and brought it to her other covered tit.\n\nWith one hand rubbing her pussy, the other on her breast and Gabe pinching her nipple, Bailey was close.\n\nShe cried out. Her heart pounded. She bucked her hips against her hand. Out of the corner of her eye, she saw Gabe's hand moving a little faster, stroking his tumescent sex.\n\nOh, how she wanted that cock! In her mouth. Between her tits. In her pussy.\n\nBut now wasn't the time. Now was her time.\n\n\"Harder,\" she gasped.\n\nStarting between her legs, Bailey's body seemed to explode with pleasure. Her pussy flooded around her fingers. \n\nHer clit tingled. Her scream was stifled only by Gabe's lips pressing against hers.\n\nThe pair rode out her orgasm. She sobbed with pleasure, her entire body shaking. He was so close, yet he didn't force himself on her. In that instant, she knew she could trust Gabriel MacKenzie with her life. That he would never abuse or take advantage of her.\n\nShe cuddled up to him, her hand still massaging her pussy, coming down slowly.\n\nGabe pulled her close. Her breasts were mashed flat against his chest. Her nipples were hard enough to cut glass.\n\nHis hand still stroked his cock. Her eyes were half-closed, but in her tunnel vision, all she saw was Gabe touching himself.\n\nThe rhythm of his strokes was hypnotic.\n\n\"Cum for me,\" she whispered and he seemed eager to comply.\n\nHer fingernails raked his chest. She wanted to reach down and touch him. To feel his erect sex, but she was too timid. This time.\n\nGabriel continued without her.\n\n\"Do you do this every night?\" she asked. He nodded enthusiastically. \"Do you think about me? Like I think about you?\"\n\nHe needed no coaxing. Gabe seemed to be holding his breath. As his orgasm approached, he began thrusting upwards with his hips. \n\nHis jaw was set, his teeth gritted.\n\n\"Oh, god, Bailey . . . I'm going to . . . I'm cum . . . I'm cumming!\"\n\nSurprising herself as well as her lover, Bailey reached down and cupped his balls. She felt them contract. The head of his cock flared and shot out several jets of warm semen. \n\nThe first drops landed on his stomach and hips. He milked out a few more. His breathing was erratic.\n\nBailey stared in amazement at Gabriel laying there, his hand still wrapped around his cock.\n\nSome of his cum was on her wrist. Impulsively, she sucked it into her mouth. Her first taste of her lover. It wasn't anything like she expected and she found herself wishing there was more for her.\n\nGabe moaned, unable to speak, but knowing full well what she was doing.\n\nThe two lay there for a long time. Bailey devoured Gabriel with her eyes. His cock, even as it softened, seemed so magnificent. Gradually, their breathing became regular. \n\nHe pulled his shorts on. It was probably a safe thing to do else Bailey might have been tempted to take him right then.\n\nShe pulled the sheet and comforter over them, then fell into the crook of his arm. She rested her head against his shoulder. The sound of his heartbeat was comforting.\n\nWith their bodies intertwined, Bailey and Gabriel fell asleep. Wanting nothing. The edge was taken off their desire. Their lust temporarily sated. \n\nSafe and secure in her lover's embrace, Bailey dozed off, unsure if life could possibly get any better. "
    ],
    "authorname": "HLD",
    "tags": [
        "soap opera",
        "slow romance",
        "may-december"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/life-is-a-soap-opera-act-01"
}