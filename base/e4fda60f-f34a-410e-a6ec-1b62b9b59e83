{
    "title": "Mine...Yours Pt. 11",
    "pages": [
        "Author's Note: I thank all of you for your kind words and emails. I love, absolutely love getting all of the comments and reading them. Keeps me going. It is hard to write since I am working so much, real life does get in the way. Kind of sucks doesn't it? :-)\n\nA big thank you to my substitute editor bearslady. Also a thank you to someone who helped me a great deal to understand some of the characters I had to portray in here.\n\nEnjoy...\n\n*****\n\nChapter 32: Law\n\nI waited for Mr. Brooks to tell me more but he said nothing else. A Paladin? I had never heard of one. It must be a human thing, it sounded important though the way he said it. He had told me I wouldn't believe what he was, but how was I to believe or not believe when I didn't know what it was?\n\n\"What is a Paladin?\" I asked. Mr. Brooks sighed, glanced at me to give me a smile, then continued focusing on the road.\n\n\"Know what a samurai is?\" He asked. I knew that one. One of the first movies I had seen with Greg was the Seven Samurai. I had been curious if the world had been black and white long ago. Then it was explained to me that humans didn't always have color pictures. I had asked Greg why humans didn't just share thoughts since they are in color, then found out they couldn't. Which made sense to me, because I had wondered for a while why Greg just didn't explain things to me by linking his mind to mine. I had wanted to ask him about it, because with our bond we could but he had never opened up that part of himself...\n\nSeneca had explained to me what could be done with a link, how she and her master could experience all sorts of fantasies both fun and hideous. I realized during the binding process that Greg's mind is broken, and he wasn't able to...\n\nMr. Brooks is waiting for an answer!\n\n\"It's a warrior who uses a sword and kills people for a purpose other than food or energy.\" I told him. He chuckled and engaged his turn signal to get on the fast road. I liked it because even though I am sitting still we are moving very quickly! I hoped I could roll down the glass so I could smell the world as it passed by! Then I wouldn't be able to hear Mr. Brooks though, so I paid attention to him.\n\n\"That's right, in a way. A samurai is a servant, someone who has sworn an oath to his lord and will serve him in whatever he asks. Even if his lord should ask for his life a samurai will give it.\" He told me.\n\nI thought on that, and how foolish the samurai were! What if he knew better than his lord what should be done? And to just throw away his life? Hmmm...I thought back to the movie. \n\n\"Can...ummm...samurai have a cause instead of a lord?\" I asked. Mr. Brooks nodded his head approvingly.\n\n\"Yes they can, and the reason I brought up samurai is that a Paladin is something similar.\" He paused and seemed to be trying to organize his thoughts.\n\n\"A Paladin is a servant to a lord. He is that lord's emissary, servant, voice, hands and feet. His job is to go where his lord wants him to go and be ready. Do you understand?\" He asked, sparing me another glance.\n\n\"Not really.\" I replied. Then remembered that sometimes Greg would have me say back to him what I heard him say and then he would fix what he had said originally so it made sense!\n\n\"A Paladin is a servant and goes and does what his lord wants and is just...available? Ready? Is that it?\" I said. He nodded and then turned on his blinking signal showing he was getting off of the fast road.\n\n\"That is right.\" He told me.\n\n\"That's just stupid!\" I told him hotly. Those eyes of his glared at me for a moment and it felt like I was being pushed back into the seat! Then he focused on his driving again and sighed.\n\n\"I am sorry Lucretia, I forget sometimes that you are not human and don't know our ways.\" He reached out his hand to me and patted my knee. I placed my hand on his, accepting his apology. Inside though, my emotions were roiling! What had I felt? What had pushed against me? And what the hell was a Paladin?\n\n\"How is being a Paladin going to help us talk to the Alpha?\" I asked quietly. Mr. Brooks chuckled.\n\n\"That is a very good question. The answer is because it is needed and I feel compelled to do it. My Lord will back me on this.\" He replied.\n\nHis Lord? I felt the difference in the way he said it. Mr. Brooks has a lo...no. It has to be said the way he did. \n\nMr. Brooks has a Lord.\n\n\"Who is this Lord that makes you, a human, go into a home of werewolves? IS he trying to get you killed, that does not seem to be a very good Lord!\" I told him, and then Regretted saying that since it could be taken as being disrespectful.\n\nFocusing on the road, and the signs on the side of it, Mr. Brooks took a small gravel path that was barely wide enough for his truck. There were many tall trees around us, and before we couldn't see the sky I saw storm clouds on the horizon, coming from the direction where the sun raises...I mean sun rises.\n\n\"My Lord is the Ruler of this Plane...\" Mr. Brooks said quietly. His voice was resonant and strong. \"My Lord is both a part and separate from this realm which he made from nothing. He is so powerful that he could gather all of this world up into his hand and drop it right into his eye without blinking.\" Then he smiled and squeezed my knee.\n\n\"He also cares for all of us. I am his Paladin, a human sworn into his service.\" He stopped the truck and stepped out of it, buckling on his belt that held his handgun. When he looked back in at me as I was undoing the seatbelt his eyes were intense and the smile he had was quiet and deadly serious.\n\n\"With my Lord on my side, no one can stand against me!\" he declared in a soft voice.\n\nI have decided that I like Greg's father!\n\nI climbed out and walked next to him as we came closer to the mansion where the Alpha and his main pack lived. I could hear him speaking quietly under his breath as we approached the gate. I was looking back and forth between him and our destination. We were walking...WALKING right up to the entrance of the enemy! I could have changed and flown us both inside, or maybe he as a Paladin could turn us invisible. All he was doing was talking to himself! He wasn't telling me anything! How was I supposed to...\n\nMr. Brooks took my hand in his and then I heard his voice as he spoke a little louder for me to hear, \"...not what I want to have happen Lord, but what You want to have happen. Please watch over Lucretia, she is precious to my son and also to me. Guide our steps and our actions; show us the correct path to take. Amen.\"\n\nI stopped walking and it stopped Mr. Brooks who looked back at me.\n\n\"What was all that?\" I asked incredulously.\n\n\"I was praying...\" he replied.\n\n\"But we weren't going to eat or sleep, we are going to...to...\" I sputtered out words. I was so confused! \n\nI was confused so often that at least...I was getting familiar with the feeling.\n\nMr. Brooks turned back to face me, his back to the gate that was still a good hundred feet off or so. I could see two men standing guard in front of it. They had the smell of Were on them.\n\n\"When we as humans pray, we are speaking to the Lord of this Plane. Tradition tells us to pray before meals and before we go to sleep, but what our Lord tells us...\" he sighed and his thumb caressed my hand he held. \"...Our Lord tells us to pray continually.\" He looked over his shoulder at the gate.\n\n\"Especially when we might be going to war.\" His Sardonic tone made me grin. We WERE going to a fight after all! My skin began to ripple and shift as my height increased and I felt the familiar weight of my horns grow on my head. The hair that would fall in front of my eyes to block my vision slowly vanished. My muscles expanded, hardening and stretching. The bit of energy I had taken from the weres that attacked my Greg burned in me wanting to be used! Mr. Brooks took my clawed hand in his and continued our sedate walk to the gate.\n\n\"Shouldn't we...\" I began before he shushed me.\n\n\"Trust me, Lucretia.\" He said quietly. \"Don't let go of my hand.\"\n\nI fought down a scream of Frustration, but something inside of me told me that I should listen to him. The guards moved to stand in our path.\n\n\"Sir, I will have to ask...\" his voice trailed off as Mr. Brooks walked right by him and placed his hand on the locked gate. Something clicked and the gate swung open easily on oiled hinges.\n\n\"Everything is fine.\" Mr. Brooks said over his shoulder to the startled guard. \"The Alpha is expecting me.\"\n\nThe guard nodded and closed the gate behind us. I arched an eyebrow at the guard and he just waved us on and turned his back on us to dutifully scan the surrounding forest for anyone who might be coming into the compound without authorization. What was going on?\n\nThat werewolf had let an armed human and succubae enter without stopping us? Either the security here was really bad or...\n\nI let my senses extend towards Mr. Brooks and felt nothing. No magic, no power, just him. He did feel different than other humans, but then again...all humans are different!\n\nWe came to the front doors of the mansion and Mr. Brooks opened the door and walked in with me through the opening side by side. A man in a nice suit came up to us, his eyes opening wide upon seeing me. I grinned at him, showing my sharp teeth and he gulped once.\n\n\"Uhhh...Sir? How can I help you?\" He said as perspiration broke out on his forehead. I could feel his heart beating faster. Like when I caught a butterfly and felt it's wings beat inside of my cupped hands. I really liked that feeling! I let the tip of my tongue caress my lips and I began to take a step towards him when Mr. Brooks, who was still holding my hand, began walking to the side. He called out to the man who greeted us.\n\n\"Let the Alpha know we are coming to see him.\"\n\nI walked along side of Mr. Brooks and saw he was smiling to himself. We passed many doors, some open, some closed. I saw a small arena set up where some werewolves were fighting back and forth while other's looked on. The two who were in the between states of transition stopped fighting to look at us. Mr. Brooks waved and said, \"Hello. Nice to meet you all. I am Greg Brook's Dad, which way is Alpha Roberts?\"\n\nOne of the wolves pointed and Mr. Brooks nodded once, \"Thank you. Sorry to interrupt.\" Then he pulled my hand and I waved as well before allowing myself to be pulled out of sight. \n\n\"You didn't need to ask for directions, I have the Alpha's scent. I could find him easily!\" I whispered harshly.\n\nHe took another turn walking by more doors, waving to some, greeting others and always asking for directions to the Alpha. Then he took a corner turn leading us away from where our enemy was and I stopped, holding tight to his hand to turn him around and found that I couldn't! I tried pulling harder and planting my feet but I didn't have the strength! I am stronger than any human, even when Greg is using his power I can hold my own, but this! I still couldn't feel any power or magic or anything from Mr. Brooks.\n\nFear began to close up my throat making it difficult to breathe. I don't like Fear at all, Anger usually follows quickly on it's heels!\n\nMr. Brooks looked back at me and grinned...he grinned!\n\n\"Don't be scared Lucretia, everything is going to my Lord's plans.\"\n\nOn one of the turns we ran into a young man who had skin darker than mine. I remembered his scent and began to growl. He was one of those that were there when my Greg was attacked and hurt! HE froze upon seeing me and then did a double take at seeing Mr. Brooks. He bowed his head as Greg's father stopped in front of him.\n\n\"You're Greg's daddy aren't you?\" The man asked Sadly. I still wanted to rip his head off after draining him dry!\n\n\"Yes...\" Mr. Brooks answered quietly. The black man shuffled his feet a little then looked up into Mr. Brook's face. I saw tears glinting at the corner's of his eyes. Was it Sadness or Shame he was feeling I wondered. It made my own rage back down as I examined his face. I think it was a bit of both.\n\n\"I didn't know it was him we were hunting, man, if I knew I wouldn't' have gone. Greg seemed pretty chill and all that. I just did what the Alpha Roberts told me man. I didn't...I didn't know...okay?\" The black wolf looked down at his feet, his shoulder's slumped.\n\nI waited for Mr. Brooks to do something, instead I heard him start speaking softly to himself. Then he put a large hand on the werewolf's shoulder, it made him flinch at the contact.\n\n\"Your name?\" Mr. Brooks asked.\n\n\"Tyson...Tyson Westcott.\" The man said quietly.\n\n\"Thank you for not attacking my boy, Tyson. In the future I would recommend you think first before you act. It may be hard to do sometimes, given what you are. Try though, and you will be a better person for it. I forgive you for your thoughtless actions. You will need to ask my son for his forgiveness later. Now go.\" \n\nTyson stepped back, his eyes wide and then took off jogging the opposite direction we were going. I heard him whisper, \"Damn, that is one scary motherfucker!\" \n\nI was Angry as well! How dare Mr. Brooks forgive that...that Tyson Westcott THING! Didn't he know that he was part of the group that attacked my Greg!? Didn't he want to hurt them? To make them suffer for what they had done?\n\n\"Lucretia...\" Mr. Brooks said.\n\n\"What?\" I retorted sharply.\n\nI looked into Mr. Brook's eyes and what I saw there made me cringe inside. It was like...like...\n\n\"Greg is my son, when he bleeds I hurt, when his heart is broken I weep his tears. However, my son spared Tyson's life for a reason. Is it better to kill him when he will learn from this and become a better man?\" His hand tightened on mine, to the point where it was almost painful! Where does his strength come from?\n\n\"Do not question my resolve, I will do what must be done. It must be what is right though. I follow the Law, the spirit of it. Many times Justice and Vengeance follow the same course. However...\" Mr. Brooks looked down the corridor where Tyson had fled. \n\n\"...sometimes Mercy takes the place of Justice.\" He finished.\n\n\"How can Vengeance and Mercy work together?\" I asked, now more confused than ever. Mr. Brooks just pulled me along with him, laughing softly and said,\n\n\"When we meet the Alpha...you will see.\" Mr. Brooks told me.\n\nHe looked past my shoulder and smiled predatorily, \"I love it when a plan comes together!\" He said quietly. I turned and saw eyes, many eyes in both furry and human faces. I felt surprise, caution, fear, and anger from the werewolves watching us. Then my nose caught the familiar acrid scent of the Alpha! Well...maybe he doesn't smell bad, but I could feel my heart harden and my crop tightened on the few gold coins and the gift stone my Papa gave me. The actual scent was of cedar and spices and then of warm soft fur. If I had not known who the scent came from I would have assumed it to be from a nice person.\n\nKnowing he was a chjorzit, made me want to sneeze then hold my breath!\n\nMr. Brooks walked along with me back to the play room...the place where the weres play-fight together. We were paced by many of the wolves, some in animal form, others in that hybrid shape. Many didn't change and just watched as Greg's father let go of my hand half way to the center of the room. He smiled at me and I stayed put. He stepped out into the center of the floor and put his hands in his pockets, then bowed his head and held still.\n\nI thought about Mr. Brook's Lord...the one who was supposed to be protecting him...? Where was this Lord now? I can hear the wolves getting restless behind me, their scent heavy on the air. I can smell their leader, the Judge Michael Roberts getting closer. I scan the room, it's just a large two story square room with a balcony about twice my body's length above the ground that circles all four walls. I see more figures appearing there as well. If Mr. Brooks had wanted to get everyone's attention with walking around...he had succeeded!\n\nI turned to face the wolves creeping up behind us and crouched, flexing my claws and rattling my wings. One of them snarled and I answered with a piercing shriek that made him clap his paws to his ears and back up. \n\nNo wolf pup can intimidate me! \n\nI saw Hildy appear on the walkway above me, she looked down at me and I couldn't read her expression. She looked upset...Angry, Hurt, Afraid, and...Sorry? What was she sorry for?\n\n\"Peace...\" a soft baritone rolled through the room and the wolves all settled down. Judge Roberts walked in through the double doors with a little dramatic flourish. He pushed both doors open at the same time and sauntered in filled with the power of knowing who he was and that he was on his own land. That he was king of his own little corner of the world...\n\n...I was fully prepared to correct his thinking!\n\nHe looked at me and his lip curled up like he had tasted something terrible; I knew how he felt. Just seeing him I remembered licking his mug to get his scent and I almost gagged myself a little bit. I settled for hissing at him and baring teeth in a snarl.\n\nMr. Brooks was standing there, his hands in his pockets in the center of the room softly speaking to himself when his head came up and he turned his back on the Alpha to look up near the ceiling. He pointed his finger right at someone and said, \"Don't do it! It's not worth it!\" The wolves parted and there stood a young man with a gun. It was different than the gun that Mr. Brooks left in the truck, his \"shotgun.\" It had a very long tube on it with a telescope on it. \n\nI like telescopes! I thought it was smart to put one on a gun.\n\n\"Do not obey your Alpha on this...set the rifle down and just watch, this is between him and I.\" Then Mr. Brooks turned his back on the wolf and smiled pleasantly at the Judge Michael Roberts. I saw a small glint of light and a red dot appeared on the back of Mr. Brook's head. I thought this was a curious thing when suddenly many things happened all at once. \n\nA gun shot rang out and Mr. Brooks turned. He drew his handgun from his waist and pointed in the direction the red light had come from and pulled the trigger twice. The hand gun didn't move, but from my angle I could see a blast of flame and white smoke billow from the tube. A loud howl was heard and that long tubed gun clattered down to the floor. I walked over to it, ignoring all of the wolves watching me and picked it up. It smelled of...brimstone, or sulfur is the closest I can come up with. I decided it would not be good to leave this weapon lying around where it might be used against us. I bent it at where the tube came out from the heavy plastic part so the two ends touched. Then looked over at Mr. Brooks who had holstered his handgun and put his hands back into his pockets and was regarding the Alpha quizzically.\n\n\"What is it you want?\" The Alpha asked. I opened my mouth to speak when I got a feeling in my belly that told me to wait. Mr. Brooks must have also got that same feeling because he was silent, just watching the leader of the werewolves with a measuring gaze.\n\n\"What do you want here, in my home?\" The large man said even more loudly. Again Mr. Brooks was silent, seeming like he was waiting for something.\n\n\"Is it revenge? Is that what you want? You want justice for your son?\" He chuckled. \"Well here I am...take me on then!\" The Judge growled. Mr. Brooks smiled quietly and shook his head. \n\n\"You break into my home...\" The Judge began speaking when Mr. Brooks raised his hand. The Judge went silent and it seemed to bother him that he did.\n\n\"I wanted to know why you do what you do, and now I know.\" Mr. Brooks said softly. He scratched his chin for a moment and seemed to come to a decision.\n\n\"If you attack my son again I will take everything away from you. Your people will leave you and they will hunt you down. This is your only warning, Alpha Roberts.\" Mr. Brooks said to him.",
        "\"What can you do to me?\" The Alpha said with an unkind smile. \"You have a weapon, but it isn't loaded with silver. The wolf you shot, one of my soldiers, is already back on his feet. There are only two of you and even with a succubus on your side you don't think I would let you walk out of here alive do you?\" He smiled and chuckled darkly. I saw Hildy move from the corner of my eye. She vaulted the rail and landed on her feet on the ground then ran up to her Papa.\n\n\"Dad...please! Do you have to...?\" He cut her off with his voice and a gesture.\n\n\"Hilda! He is a human with an outsider that has come into our home! Our laws are clear. He has to be...removed.\" \n\nI saw Hildy pause, then nod her head and step aside. I stepped closer to Mr. Brooks, I saw the Alpha track my movements, his eyes gleaming suddenly. When I was standing with my shoulder next to Mr. Brooks I felt his hand touch my arm.\n\n\"Wait until after I deal with the Alpha, don't interfere.\" He told me. I felt my mouth open in Surprise! Though honestly I shouldn't have been, this entire trip has been one of Surprises! The Alpha heard him speak and laughed.\n\n\"Deal with me? You are going to \"deal\" with me?\" He laughed a little harder and several other wolves echoed it, though most were quiet and watching. Mr. Brooks nodded and took off his belt that held his gun and handed it to me.\n\n\"Take care of this, and don't interfere.\" He told me sternly. Then his face softened and his kissed my forehead! Greg always had to have me lean down since I was taller than him when I was like this, but Mr. Brooks was a little taller than me so he had to bend down to kiss me.\n\nImpulsively I threw my arms around his chest and hugged him! \"Don't get hurt! My Greg is already hurt, I don't want anyone else I care about to be hurt!\" I realized suddenly that everyone had gone quiet as I spoke. I looked around and saw the werewolves all looking at me as if I had...well...done something strange! I heard Mr. Brooks laugh quietly and his large warm hand gently rubbed the back of my neck.\n\n\"Don't worry Lucretia, this will be over soon. Remember that you have a big part to play in this still.\" He told me. I stepped back, holding his belt with his handgun. Mr. Brooks turned to face the Alpha.\n\n\"I understand you Alpha!\" Mr. Brooks said quietly, though his voice filled the area. \"You have made many choices as a judge that have been for the benefit of the pack, and to the detriment of others...why?\"\n\nThe Alpha looked surprised as his mouth opened, seemingly without his wanting it to. \"The pack comes first, above all else!\"\n\n\"Even in front of Justice?\" Mr. Brooks asked.\n\nThe large werewolf began to turn in front of me, and soon a hulking brown wolf nine feet tall at the head stood there in front of Mr. Brooks!\n\n\"Did you purposely change to make it more difficult to answer my questions...?\" Mr. Brooks asked quietly, \"Or did you do it so that you wouldn't answer my questions in front of those you lead? What are you ashamed of?\"\n\nWith a loud howl the Alpha lunged at Mr. Brooks! He in turn only held out one hand and slapped the Alpha across the muzzle, and stepped to the side quickly. The Alpha tumbled in the air and then landed on his feet snarling at his enemy!\n\nI wish I had some popcorn! This was getting good! I could feel my body responding to the fight, my lower lips were getting damp and I had to bite my upper lip to keep from moaning. I can't tell you how many times I almost jumped Greg when we were training! This though, this was...Oh! Mr. Brooks is soooo HOT! \n\n\"Change back...\" Mr. Brooks said quietly. \n\nThe Alpha charge again, looking to overwhelm the small human, then cut low, as if to knock his legs out from under him. Mr. Brooks stepped back and to the side and then snapped his foot out quickly to kick the Alpha on the nose! I bit my lip harder and a small squeal still sqeaked out, and the leather bun belt in my hands was getting twisted as my hands clenched it. I was now more than damp! This was AWESOME!\n\n\"Change, or I will make you change and you will not like it!\" Mr. Brooks said more loudly.\n\nThe large were was circling him, sneezing every now and then. He growled low in his throat. Mr. Brooks shrugged and then sat down on the ground, his legs in that \"criss-cross-applesauce\" pose that I see kids sit in every now and then when they play games. Everyone was holding their breath, I know I was. Though for me I would probably be panting if I wasn't holding it. This was hotter than that porn I found on the internet when Greg wasn't around!\n\nThe wolf circled, looking upset since it wasn't sure how to attack. It felt like this was a trap, but with all of the other wolves watching, his pack, it was easy to feel his anger at getting shown up...and by a human! Oh I was Liking this! The Alpha lunged with both paws, claws first...right into Mr. Brooks hands who was now standing. He checked the werewolf's momentum and held it, stopping him cold. Suddenly the wolf began to scream and yelp as if he was being burned! Hildy started to step forward when suddenly she slapped both hands to her head and moaned in shock. Then her eyes came up and she stared uncomprehendingly at Mr. Brooks, tears streaming down her face!\n\nEveryone was moaning, and then staring at Mr. Brooks. Meanwhile he kept holding the Alpha's hands which were now changing back to human, and the yelping changed to screams and shout of, \"No! You can't do that! It's not...it's not...POSSIBLE!\" Then he crumpled and sagged as the only thing holding him up was the hold Mr. Brooks had on his wrists. He let go, and Judge Michael Roberts slumped to the floor as a human. \n\nIn the silence that followed I couldn't help it, my lips opened and I screamed! \"YAAAAH!\" My call echoed around the room, but no one looked at me, except Mr. Brooks who gave a small smile in my directions before looking back at the Alpha...wait...\n\nI took a sniff, and then another longer sniff scenting the air. Maybe it was because I was so far away, and surrounded by other were wolves...\n\nI moved closer until I was only a few feet away from the Alpha, crouched, and scented again. I gasped and looked at Mr. Brooks.\n\n\"How...theres...not...I know of no magic that could...\" I stuttered at him. My mind was full of the possibilities and excitement as Judge Michael Roberts looked up at me with human eyes, no trace of werewolf in them or in his scent any longer.\n\nThe Alpha, was now human!\n\n\"Kill Him!\" Judge Roberts shouted, pointing at Mr. Brooks. I turned to face the assembled pack and braced myself for an attack. My wings folded into my spears and my armor covered me, cool and comforting. I felt my blood pulse through me as I waited for the wolves.\n\n\"Sit down...\" said Mr. Brooks, though it wasn't directed at me. \n\nAll the Weres sat. \n\n\"Stay where you are.\" The wolves all looked at each but stayed still other than that.\n\nI heard Judge Roberts crying behind me, and I turned to face him. My armor sank back into me and my wings unfurled as I looked him over. As just a man, I could see the worry lines that a human gets by their eyes as time passes. His skin had lost a little of that luster one gets from their power. He also felt...frail. Not weak, just...how do I say it?\n\nHe felt breakable.\n\nMr. Brooks said quietly, \"I warned you...Now you are just a man, and I hold the lines of power that bind your pack to you. They feel me now, and you are alone. Will you answer my questions now? Will you tell me why you do what you do?\"\n\nMr. Brooks crouched down next to me, I was still staring at the Alph...well, no longer the Alpha, but I wasn't sure what to call him.\n\n\"Will you tell me about your mate?\" Mr. Brooks said softly. My ears pricked up as I heard Judge Roberts heart speed up. His eyes flicked to Mr. Brook's face then back down to the ground. I was very Curious as to what Mr. Brooks was talking about and I guess Judge Roberts was too.\n\n\"How do you know about that...who the hell ARE you?\" He whispered brokenly.\n\n\"I am a Servant, a Father, a Mate, a Husband, and I am Balance. I serve my Lord and I do the best I can with what I have. Now, tell me how you let yourself get corrupted.\" It was said in a tone of command. \n\n\"What do you wish to know?\" The Judge asked.\n\n\"Start at the beginning, and when you reach the end...stop.\" Mr. Brooks replied. The Judge sighed and tears began to fall.\n\n\"My Mate, Astrid, was one of the most beautiful wolves I had ever seen. She married me, joined with me back home in Norway. We came to the United States and moved out here over two hundred years ago. She...well. A few decades back she killed someone for trying to mug her. At that time there was...they put her in jail...the judge...tried for murder...!\" The Judge's voice was beginning to break, and the tears were getting in the way of his talking.\n\nI forgot suddenly that this person had attacked my Greg, I am ashamed to admit it. I understand better now why I did what I did, but at the time I was very upset with my actions. I put my hand over his and said, \"Just take a breath...we are listening.\"\n\nI heard Hilda gasp a little as I touched her Papa, and Mr. Brooks put his hand on my shoulder. I felt him give me a squeeze that made my insides grow warm. The Judge looked at me in startlement, and then turned his hand over and held it in wonder.\n\n\"How can you...I don't understand!\" He said in Shock. His eyes staring into mine.\n\n\"You are sad, I may not like you and may kill you in the future if you attack me or Mine ever again...but I wanted to give you comfort.\" I told him. A quiet voice inside me said that what I was doing was correct, the loud voice was yelling at me telling me I was wrong, wrong, wrong!\n\n\"Out of the night that covers me...\" I softly intoned. The loud voice went silent and I smiled.\n\nThe Judge shook his head and looked down at me holding his hand. He gave it a squeeze and then let it go and cleared his throat.\n\n\"My Mate was tried for murder, and we couldn't tell the Judge at the time that she had done because she felt threatened. All he saw was a woman who had killed a 17 year old street kid who tried to steal her purse!\" He wiped some fresh tears from his eyes and then said in a stronger voice. \n\n\"She died in jail, not sure how. All my efforts to find out were stymied. It was at that point I decided to become a judge to protect my people if that ever happened to them again.\" He glanced over at Hildy and gave a small smile.\n\n\"I was a single father, raising a cub. Became a lawyer, and then a Judge. I was able to use my influence to guide the Court's decisions and soon became a prominent member in the community.\" He looked down at his feet for a moment.\n\n\"I had to make some hard decisions because of public opinion, and...and I honestly felt a rush from knowing that I held people's lives in my hands!\" He said harshly.\n\nHe looked up into Mr. Brook's face again, \"I remember your son. I remember reading the police reports, how he told the police officer's everything before he had been arrested. I remember being surprised he was that honest. In a case of her word against his, he even admitted to having sex with her when there was no evidence to show that he had done so. His victim had waited a week before calling the police. I remember reading through over 300 letters of character reference in favor of Greg. It all came down to me.\"\n\nHe scrubbed his hands over his face, \"The fastest way to gain public approval was to convict sex offenders. I had already used my influence to help a couple of members of the pack, I couldn't afford to be any more lenient if I wanted to maintain my approval rating, so I convicted your son.\" \n\nAlmost as an afterthought he added quietly, \"Besides, it's almost certain political suicide to support any leniency towards sex offenders or those accused of a sexual crime.\"\n\nHe stared at Mr. Brooks and then me. \"It never occurred to me what your son would be going through as a sex offender. We tell the jury each time they listen to a case to never think about the punishment someone will go through if they are found guilty. Maybe...\" He stared off past us, his eyes lost in thought.\n\n\"...maybe I should have thought of that when I sentence an innocent.\" His eyes came back to Mr. Brooks and he narrowed them as he asked. \"If you felt so strongly about it, then why didn't you act all those years ago...why wait until now?\"\n\nMr. Brooks shrugged and replied, \"I do not interfere in the laws of men. They are flawed, but outside of my jurisdiction. However, you went outside of the law and attacked my son without provocation, just to get what you wanted. Outside of Man's law...you are subject to a higher law, the Law of my Lord.\"\n\nHildy stepped forward, looking at her Papa in horror, her face white. She was probably still getting over the fact he was human now, with no trace of Were inside of him. \"Is it true, Daddy? Why did you attack Greg?\"\n\nJudge Roberts looked back and forth between us and his daughter and sighed. \"I didn't want him near you, Hilda. He was a bad influence. He was a felon, and had an outsider...\" He waved his hand at her as she began to bluster.\n\n\"I know! I was the one that made him a felon, I know that!\" He growled at her. \"But his actions since then have not been those of a regular citizen! He has put several people in the hospital needing stitches and broken bones among other things. He also has an outsider, a succubae living with him next door to the Gatewatch...my daughter! I tried to get him to sell me the house he lives in for twice what it was worth, but he wouldn't sell to me. I sent some of my wolves to rough him up a little, to let him know...\" His voice trailed off as his daughter, Hildy stared at him. Her eyes were hot.\n\n\"Is that why...is that why we have nine of our soldiers not reporting back in?\" She asked him quietly. \n\nNine? I thought I had only killed six...oh. Greg had killed three of them. I went back to watching Hildy, and wishing I had popcorn. This type of fighting was almost as good as watching Mr. Brooks in action!\n\nJudge Roberts stood tall and put his hands behind his back and firmly looked his daughter in the eye. \"At the time I thought it was a sound idea. From what both Trevor and Suzanne told me a few of our troops would be more than enough to put a little fear in him.\"\n\nHildy gaped at her Papa! I really wish I had something to nibble...Mr. Brooks put his arm around my shoulders and I felt my desire begin to wane.\n\n\"You mean both Jemima's and Gwen's parents were in on this? Well...Fuck you dad!\" Hildy shouted. I clapped a hand over my mouth so I wouldn't laugh and Mr. Brooks coughed into his fist.\n\n\"First you find him guilty when he wasn't so his life is hell...then you try to beat him out of his own house? WHY? I don't want some bullshit excuse like he is a bad influence on me...tell me why!\" Hildy was shouting at her Papa.\n\n\"Child...you don't understand what it means...\" He began but Hildy cut him off.\n\n\"I don't understand what it means? Really Dad? Because from where it stands it looks more like I know more about right and wrong than you do!\"\n\nShe began to pace in front of her...no, not Papa...she doesn't call him that. Dad is what she calls him. She began to pace in front of her Dad shaking her head and breathing hard.\n\n\"You do realize that he doesn't act normal because of YOU right?\" She tossed at him as she paced. The Judge stiffened but said nothing. \n\n\"I have been to his training room and I have smelled him. He gets attacked by people because of what he is called. Then he defends himself! Guess how he got the title he has now? Because of YOU!\" \n\nShe ran her fingers through her hair and brushed it out of her face. She kept a scrunchie in her pocket and wound it around her hair to put it in a ponytail. Then rolled her neck from side to side.\n\n\"So...Dad. We have an innocent man put in a situation where random people will attack him, and he can't turn to the police for help since they don't care. For what, to help a few of our pack who have difficulty controlling themselves? Then, this \"criminal\" helps out your daughter and saves the Gatewatch from being destroyed by something that is now in this room.\"\n\nShe points at me and I regard her steadily. Her eyes meet mine without flinching, I start to feel a twinge of Jealousy in my belly. I remember that she had kissed my Greg, and bared her feelings for him to see. I was a little upset at the time watching from one of our trees. Greg handled it well and it let me know that I could trust him around other females. I have to admit I felt threatened by Hildy when I first met her. Not so much when she was a werewolf, but when she was human. She had nicer hair than me, and wider hips, bigger breasts and she looked beautiful. I remember looking in the mirror sometimes while my music played while Greg was at work. I would stare at my reflection and try to find a way to make myself look more beautiful.\n\nGreg would laugh at the bodies I would be wearing when he came home. Then he would ask me to go back to the way I was, either as the human shape we chose together, or as my succubus shape. He had told me he liked how I was now, and he didn't need me to change. \n\nBe that as it may...I was still Envious of Hildy's looks! Even if Greg had chosen me over her.\n\n\"Greg saved our lives, and Gwen and Jemima and I got to see just how law enforcement treats people who are called sex offenders.\" She took a few steps closer to her Dad. \"HE saved us and now he is unconscious in a hospital at your hands!\" Her voice was carrying loudly now, and Mr. Brooks and I along with Judge Roberts could see the shifting of the wolves around us. Greg's Dad coughed again and he made a gesture behind my back making them all quiet down. Judge Roberts noticed that and grimaced.\n\n\"So...\" Hildy said, bringing our attention back to her. \"We have an Alpha who uses his influence to punish the innocent to secure his position of power to take care of his pack.\" She ticked that off on one finger and moved to the next.\n\n\"Who then punishes that innocent because he can't get his way even though said person saved the lives of his daughter and her friends.\" She held up a third finger and paused over it, her voice shaking.\n\n\"Finally, my father is no longer a werewolf. We have to decide if we should let a human live that knows all of our pack secrets.\"\n\nThe Judge's head came up at that! He turned to look at Mr. Brooks who just stared back coldly. He swiveled his head to stare at his daughter. \n\n\"You can't mean that!\" He shouted at her. She just grinned back at him.\n\n\"You always told me that the law was there for a reason Dad...or is the law just there to suit your purpose?\"\n\n\"Of course not! The law is to protect us! It is there to guide us to keep us safe from Chaos!\" He shouted back at his daughter.\n\n\"How did you protect the nine soldiers who went to help Gregory understand the error of crossing you? In the years since you have been a judge how many times have you actually had to interfere for our, the packs, benefit?\" Hildy waited for a response, but her Dad just looked down at the ground.\n\nMr. Brooks stepped forward, his hand sliding on my shoulders as he walked forward. \"I have an answer...\" he said softly, but for some reason the room carried the sound to every ear.\n\n\"Let Lucretia decide...\"\n\nThere was an instant of perfect silence where I am sure everyone heard the nervous click of my toenail against the floor. Then everyone began yelling and speaking at once! I could see Judge Roberts staring at me with wide eyes, Hildy as well. My mouth was hanging open as I turned to look at Mr. Brooks who was surveying the wolves.\n\n\"SILENCE!\" Mr. Brooks roared lazily. They all were silent and unmoving. Mr. Brooks is soooo HOT! I hope Gregory is just like him when he gets better! That thought reminded me that my Greg was hurt, which made me Angry and I glared at the Judge. I could see beads of sweat pop out on his forehead and I could smell the fear scent thick and heavy on the air.",
        "\"Lucretia has been closer to my son than anyone for the past few months. I say let her decide his fate.\" Mr. Brooks said smoothly. Hildy seemed to mull the idea over and then nodded. Soon the rest of the wolves were howling their assent. I sized up the old Alpha, now a human, and thought about my options.\n\nI had warned him not to harm us, that I had his scent...he attacked anyway. I listened as he spoke his side of the story. I heard about his mate, and about his actions. It was still no excuse for what he had done, but it helped to understand him. I took a few steps closer, and tucked my wings around my body while I studied him. He was scared, of that there was no doubt. What was he scared of? Well his security was taken away. He was no longer the Alpha, and no longer a werewolf...I REALLY wanted to learn that spell! \n\nI looked over at Mr. Brooks who was casually watching the situation with his arms crossed. I wondered why he wanted me to make the decision. I was not human, and had no ties to anyone except Greg, if anything Greg should be making this decision, not me! Then I thought some more about it and my face must have changed because I saw Mr. Brooks smile slightly and give a barely perceptible nod.\n\nI was bound to Greg, in a very real sense I was a part of him and he was a part of me. With Greg...hurt, I needed to step up and make the decision that he would if he was here.\n\nSo what would Greg do?\n\nI looked over at Hildy, I could see all of the emotions running across her face. I also could see she still cared for her Dad, even if she hated what he had become. I turned my back on them all and stared across all of the werewolves. I could feel their Fear and their confusion. They were pawns in a larger game, and I felt...sorry for them!\n\nThat loud voice began clamoring for my attention! I listened to it, and agreed with it. These things wanted to hurt my Greg, they did it once and they could do it again! The quiet voice was speaking now, but I ignored it. I pushed down to where Greg was inside of me. It had always been silent, I think because my Greg is still broken, but every now and then I could taste thoughts and feelings from that part of me where I kept him close. I felt nothing, well...almost nothing. It's like when he is asleep, well, almost. There was that one time when he woke up and his eyes were giving off blue light and I couldn't dodge fast enough and he broke my jaw! He didn't remember it and felt awful afterwards, but normally I can feel him better when he is asleep.\n\nEmotions slowly filtered out of that area, and I breathed them in. It felt good, very good to touch even that small part of my Master. My eyes flew open as my thoughts coalesced and I turned to face Judge Roberts. I walked quickly towards him and grabbed his head, holding his face firmly framed in my clawed fingers. I heard him give a yell before my lips found his and I kissed him, hard! He squirmed but I held him firm and I heard him moan in panic as I slowly began to pull his energy from him! I slowly began to feed, his life smoothly trickling down my throat to pool in my well. I could taste the flavors of Fear, Pride and a deep and dark Sadness. A light sprinkling of Regret seasoned the whole meal. I was very tempted to take all he had...\n\n...but I stopped and pulled my mouth from his. He was shaking as I licked my lips.\n\n\"Know this...\" I said softly.\n\n\"Know that your life could have ended right now. Know that I have decided to show you mercy.\" I blinked suddenly and looked over at Mr. Brooks with my mouth open wide in Surprise!\n\n\"This is what you meant! Where Vengeance and Mercy work together instead of Justice and Vengeance!\" I crowed happily as I finally figured it out. I looked back down at the Judge who was shaking and sweating in my hands. \n\n\"I show you Mercy instead of taking your life because you will be a better Alpha now! You will learn from your mistakes and do what is right, because you know, you know absolutely, that if you attack us again we will end you!\" I gave him another kiss and took a little more of his life from him and I savored it, rolling the taste of Terror now in my mouth before swallowing. I purred at feeling it sink into my well.\n\n\"Alpha...?\" I asked him coyly, I was feeling a little frisky.\n\n\"Ye...Ye...Yes?\" He stuttered.\n\nI got down into his face, so close his nose was touching mine.\n\n\"I have your scent!\" I growled. Then shoved him over on the ground. I spat once on him then walked over to Hildy, who almost took a step back from me, but then squared her shoulders and looked me in the eye. I thought that maybe I should change back to my human form, but decided she needed to see me like this.\n\n\"Thank you for trying to stand up for my Greg. Thank you for not trying to pursue him. I like having you for a neighbor...and I hope...hope that in time, I can be friends with you like I am with Jemima and Gwen.\"\n\nHildy didn't seem to know what to say, then she gave me an incredulous smile...at least I think that is what you call it and hugged me! I tentatively hugged her back, and felt another strong twinge of jealousy as I felt her shape! I wish my body was shaped more like hers!\n\nThen I stepped back and saw Mr. Brooks looking down at the Judge. \"Will you go after my boy again?\" The Judge shook his head. Mr. Brooks nodded once, then bowed his head. I could hear him speaking, but I could not make out his words. Then he held his hand out to me, and I walked over to take it in mine.\n\n\"...thank you Lord for Your aid, may Your will be done, and let things go back to the way they were. Amen.\"\n\nI heard a collective groan from everyone in the room and suddenly the Judge rose to his feet and his eyes blazed with amber light. I could see he was furious, but afraid. Mr. Brooks gazed at him steadily, and since it seemed to work so well for him I did the same, just regarding the large Alpha calmly. He seemed to wither under our gaze and settle back down.\n\nThen Greg's father and I walked out of the room, out of the mansion, through the gate and back to his truck. He opened the door to his truck, helping me in, then reached for the seatbelt and belted it on me. I had changed back to my human appearance, makes it easier to sit in seats without my wings getting in the way. He leaned back a little and then hugged me, gently cradling my head against his shoulder.\n\n\"I am so PROUD of you Lucretia!\" Mr. Brooks said to me. \n\n\"Mmmy mis mmatt?\" I mumbled against his shoulder. He pulled back and I repeated myself.\n\n\"Why is that?\" I asked again.. He ruffled my hair and kissed my forehead. \n\n\"Because you are growing, a lot!\"\n\nI didn't understand, I was still the same size as I always was, but...if he was happy that was a good thing. He got into the driver's side and we started backing down the drive to a turnaround, then he started driving, bringing us back to the hospital.\n\n\"Why did you choose to show mercy?\" Mr. Brooks asked me. I had been wondering when he was going to ask me that. I had been wondering that myself.\n\n\"Greg would have shown mercy, at least I think he would have...\" I said quietly. Mr. Brooks was waiting, either that or he was thinking, or maybe both.\n\n\"Gregory seems to think life, all life is valuable. He would not approve of me killing the Alpha like that.\" I said quietly while looking out the window.\n\n\"In the middle of a fight if I was to do it, it would make sense, and I would have his complete approval. While the Judge was...weakened like that...?\" I sighed and looked down at my hands.\n\n\"While he was weak one side of me said that there was never going to be a better chance to take him out, the other said that if I did, there would be more problems created. I felt down to where your son, my Master is inside of me. I made my choice upon that.\" I looked over at Mr. Brooks who glanced at me every now and then while he drove.\n\n\"What does Gregory feel like? It's your bond that you're telling me about right?\" He asked. I nodded. \"What is it like...this bond? What does it feel like?\"\n\nI sighed and thought about it. \"You ever watch that movie called Lord of the Rings?\" I asked. Mr. Brooks chuckled and nodded. \n\n\"Remember that big fiery eye thing on top of that tower? It was called the...I don't remember what it was called but it could see everything.\" I rubbed my lower stomach, feeling my bond to Greg.\n\n\"It's a lot like that, but with Greg, his eye is shut. There have been several times it has cracked open and I feel him, just like I am sure sometimes he feels me...but most of the time it is closed.\"\n\nMr. Brooks was nodding his head, but didn't ask for me to continue so I didn't. Besides, it made me feel uncomfortable to talk about. I understood that my Greg was broken inside...somewhere things didn't connect. I had seen his Door inside of his mind. I'd heard the voices of his two parts of himself as he spoke to them, and it frightened me.\n\nTerrible things had been done to me by my last master, but it seemed that humans were able to hurt themselves more than what anyone could do them. The very idea that Greg would do what he had done to himself, to keep...I wonder...?\n\n\"Mr. Brooks?\"\n\n\"Yes Lucretia?\"\n\n\"What happened that made Greg lock himself away? He never told me more than a little, but I want to understand...he is sleeping right now and I don't know when he is going to wake up. Could you tell me, please?\"\n\nMr. Brooks was quiet, obviously thinking about what he should say, or maybe how to phrase it. Or maybe not...his knuckles were white on the steering wheel.\n\n\"That is for him to tell you. It is something that he knows from first hand experience...it would be best if he tells you.\" Then he paused, considering. I saw a tear come to the corner of his eye and I reached out to touch it. It was small and felt wet, like regular water. Warm though since it came from a body. Not hot or cold like it comes from the sink in the kitchen. I licked it and tasted salt. I had wondered if human tears were the same as my own.\n\n\"If Gregory does...not...wake up. Then I will tell you everything you want to know about my son. Both my wife, his mother, and I will tell you...everything.\" His voice broke and he coughed and sniffed. Then held my hand in his as we drove back to the hospital.\n\nI hope Greg is like his Papa when he gets older.\n\nChapter 33: Portals\n\nThe sun had fully woken up by now and the alarm clock on Mr. Brook's truck told me it was 10 o'clock in the morning. \n\n\"Where are we going now?\" I asked.\n\n\"We are going back to see Gregory.\" He told me as we got off of the highway. \n\n\"Unless you want to go back home?\" He asked. I shook my head, my place was by my Master. He was hurt and we had been gone long enough. The enemy was now...well, was Judge Roberts still an enemy? I understood him better now. He had originally done...\n\n\"RaaaAAaah!\" I shrieked! My fist hit the window of the truck and strangely it didn't break it. Mr. Brooks swerved slightly and glanced over at me.\n\n\"Lucretia! Settle down right now!\" He said sharply. I hissed at him, though since I was in human form it didn't seem to sound all that threatening to me.\n\n\"Don't make me pull over, I will and you will not like it if I have to!\" Mr. Brooks said in admonishing tone.\n\n\"I let him LIVE! Why did I let him LIVE?\" I shouted and then slumped in the seat. I pulled my hood over my face to hide my expression. I was so confused, not so much about everything around me. I really was getting a better understanding on that. Little things tripped me up, but...inside of me. That was different, I didn't understand what I was feeling...everything was different. It felt like something was changing, a lot.\n\nMr. Brooks kept driving and put his hand on mine in my leg. I was looking down and could see a thick and battered gold ring on the third finger of his right hand.\n\n\"Talk to me...\" he said quietly. His voice was gentle. It's warmth soothed me, but...inside I was snarling! \n\nDo you know how many times Greg overrode me? Hardly ever...well, sometimes. But he always explained it. I may not agree with him and sometimes I wanted to hit him, or bite him. I made a decision, without Greg, that went completely against who I was. I see it, it bothers me or threatens me then I kill it. Sometimes I eat it too, depends on how I feel at that time or if I am hungry. This time though, this time I let an enemy live. I had the choice in my hands, the Alpha's energy on my tongue and I let that miserable dog live!\n\nThat loud voice inside of me was talking fast and I listened to it. The small voice was there but hard to hear in all of the noise inside of my mind. I looked over at Mr. Brooks and his face blanched at seeing mine.\n\n\"Please take me to Greg, now!\" I whispered. He pushed harder with his foot and the truck made more noise and went faster.\n\nAt the hospital I quickly climbed out of the truck and hurriedly jogged into the hospital. I followed Greg's scent past an older woman looking at paper. She was talking and Greg's name was spoken, I listened with only half an ear and caught the words, \"Incredible\" and \"Amazing...Recovery\" whatever that meant. I opened the door that had Greg's scent the strongest. \n\nMy Master!\n\nI moved to the side of the bed and saw Gwen slumped over in a chair, sleeping. The smell of her magic, like lavender and this funny tea called chamomile lingered faintly about her hands. I carefully sniffed Greg and smelled cleansers of some kind that made my nose wrinkle, but under that was his scent. I lowered my head and breathed in the scent of my friend. Everyone has smells of their own, a unique flavor. Greg blushed as he told me how I smelled like vanilla and tangerines. I found each one of these things and while tasty I did not think they smelled good together.\n\nMy Greg smells of denim, mint and a smell like old books. It makes my belly grow warm and I salivate sometimes when I smell him. I told the truth to Mr. Brooks, many times in the early morning when Greg was sleeping and I was laying next to him, I had been tempted to drain him.\n\nThe few times I had tasted of his energy, his life...I don't know how to describe it to someone who is not one of us. It is like food, and yet it also is like blood. When you don't have enough blood you feel weak, sluggish and dizzy. Your body aches in all of your joints and its hard to move. Its the same with being hungry. You get sleepy and sluggish, you have no energy to do anything. I have been doing much just under my own strength. \n\nWhen I am fully fed I can do so much more!\n\nI climbed over the rails of the bed he was in. The beds here are funny. They bend in the middle so it is like a giant chair, and they have those rails. Normal beds don't have them. I wonder if they are to keep someone inside...like a cage? I snuggled next to my Master and he turned a little in his sleep. There was a tube attactched to his arm, my eyes followed it up to a bag that was hanging by the bed. I started to play a little with the tube, running it through my fingers, and felt a cold liquid inside. Are they putting water into Greg or taking it out? I carefully watched the bag while my head lay on his chest. It was emptying. Makes sense in a way. You cannot drink when you are asleep, so they make it so his body can still drink.\n\nThough I had a small wonder if Greg got thirsty enough, would he wake up?\n\nI closed my eyes and felt the warmth of Gregory's body. Even asleep like this, the touch and feel of him began to soothe the turmoil I felt inside of me. The clamor of emotions began to fade and a sense of peace and comfort began to cover me. The earlier questions I had and the decisions I had to make began to make sense. This was the problem that I'd had earlier...\n\nI had needed my anchor.\n\nI smelled Mrs. Brooks come in and heard her whisper to Gwen. I ignored it, though I did hear Gwen murmur a thank you. Then Gwen laid out across the chairs by the window and went to sleep again.\n\n\"Lucretia?\" I heard Mrs. Brooks ask softly. I turned my head enough to see Greg's Mom looking down at me, with a touch of Concern on her features. \"Where is my husband?\" she asked me.\n\n\"He is parking his truck.\" I answered. The backs of her fingers brushed my cheek. \n\n\"Is it done...did you get them?\" she asked me again...quietly.\n\nMy eyes began to tear up, but I smiled. \"He lives, but he has paid for what he did.\" Mrs. Brooks nodded and then moved her fingers to Greg's face. Running her fingers through his brush of short hair.\n\n\"You care for him a lot don't you? Is that unusual for a succubae?\" Greg's mother asked me. I continued watching her, not saying anything. Her eyes stayed on Gregory's face, her hands straightening the funny clothes he was wearing.\n\n\"Do you care for him because he is food, why do you care for him so much?\" She asked again, quietly.\n\n\"The same reasons I told Mr. Brooks, he is kind and a good Master. He seldom limits me and he gives me choices.\" I replied back softly. I didn't want to talk anymore. I was comfortable, and ready for rest. I was holding my master, he was healed! Even if he was still sleeping and not waking up, then I would sleep as well.\n\nMy breathing slowed and I could feel myself starting to nod off. I held Greg closer, needed to be closer to him! Then I felt his arm shift and come around my back and heard him give a groaning sigh as he rolled slightly. I could hear his mom gasp a little and whisper, \"Baby?\" He settled and seemed to grumble a little to himself. I heard the words, \"Grow.\" And \"Surpass.\" Muttered in a tone of voice I didn't recognize. Then he squeezed me tight against him like he did sometimes when he had bad dreams. I had only seen the blue light appear from his eyes a few times after the first time after he had struck me. It didn't bother me any more, though I had been cautious.\n\nWhen I had destroyed those werewolves who had attacked him by the road, I had seen that light flicker in his eyes before they had closed. I could see it now as well, around the bottoms of his closed eyelids, a glimmer that was a little brighter than the light of the room. I kissed his cheek and said softly, \"I am waiting for you to get up Master, I will be here.' Then I fell asleep holding onto my anchor, and his arm holding me as well.\n\nI was woken up by an annoying chirping ring! Gwen sat bolt upright in her chair, her wavy hair looking like Jemima's from how she had slept on it! She was rummaging in her large cloth bag and pulled out a cell phone which was making that annoying noise. \n\n\"Hello? There is? But...where's Hildy? She didn't come home? We can't...no...Jemima NO! How big did you say this was? No, call her again, have someone go to the Alpha's house and pick her up. If it's as big as...Oh...shit!\" I heard her groan, but kept my eyes closed. I could feel my Greg's chest rise and fall with every breath. Every now and then he would take an especially deep one and it would raise my chin up higher and would almost always make me giggle.\n\nHow could Seneca, or Astar or Rulli want to destroy their masters if they were like this? How could...\n\n\"What's the matter Gwen?\" I heard Mr. Brooks ask.\n\n\"Gatewatch stuff...I'm sorry I can't tell you.\" She said with a tremble in her voice. I moved my head slightly and tested the room for smells. I picked out Gwen's scent and tasted a tang of Fear in the back of my throat. This was different than her fear of spiders. It always amused me to hear her give a small yell when she spotted one. Then I found out that many of them have poison that could kill you or hurt badly. \n\nI became more wary of them.\n\nI heard Mr. Brooks chuckle, \"I know more than you think, young witch. Hildy is busy dealing with the aftermath of what happened with her Dad. She won't be coming for a while. It's almost evening so I am sure if she hasn't contacted you now you won't hear from her for another day or two.\"",
        "\"You never told me what happened when you met with Alpha Roberts...?\" Gwen ventured tentatively. I could hear the smile in Mr. Brook's voice as he replied.\n\n\"No, I don't think I did...\" There was silence and I heard the shift of Gwen's skirts. Then I heard her cough delicately. I slit one eye open and saw Mr. Brooks with a thick book in his hands with gold lettering on it. I couldn't make out the words on the cover, they seemed to shift in front of my eyes and not stay still.\n\n\"Well...?\" Gwen asked.\n\n\"Brook's family stuff...sorry but I can't tell you!\" Mr. Brooks chuckled, then opened his book and continued reading.\n\nGwen huffed softly and blew air out of the corner of her mouth. She fidgeted with her cell phone and said softly, \"I don't know what to do!\"\n\nMr. Brooks marked his page with a finger and closed the book. \"Tell me what you can, maybe I can help...or at least offer another viewpoint.\"\n\nGwen glanced at the book he was holding, I guess she could read the title since she seemed Surprised, at what I have no idea. \n\n\"We need the three of us to do...our jobs. Right now Hildy isn't here, and there is a problem that needs three of us to...I...\" Gwen's voice trailed off. I saw Mr. Brooks lean back and clasp his hands on his chest.\n\nHe began to think out loud while staring up at the ceiling. \"Traditionally the Gatewatch is made up of the three main branches of the supernatural. A vampire to represent the relationship between life and death. A werewolf to represent the essence of the physical of this Plane. A witch that is the representation of what is unseen.\" He looked down into the startled eyes of Gwen.\n\n\"These three forces coming together is a way to show those from other Planes we do not tolerate them meddling in our world...am I correct?\" Gwen nodded her mouth agape.\n\n\"The thing is, that the tradition has gone by the wayside. Now you are the Binder, who holds the outsider in place. Jemima is the Sniffer, who senses where the gates or portals are going to appear. Hilda is your Heavy, who is your brute strength and your shield to defend you.\" \n\nGwen looked Stunned now and my head up as I was listening to this. This was very similar to the information that the wizard had given me those months ago when I first came here to kill the Gatewatch. I know William had been looking into who the wizard was, but hadn't been making any headway. He had asked me as well, but I didn't know his name, and his features had been disguised from me during the summoning. I had his scent, but during a ritual to call someone like me up, with all of the magic charging the air? It would have been difficult to get a good read on his scent.\n\nMr. Brooks continued speaking, ignoring the look on Gwen's face. \"You all can do some of your fellow Watcher's jobs...your cards can attack as well as immobilize. Jemima is still a young vampire but her strength and especially her speed would be an asset in any fight. Hilda is the strongest of you and can take the most damage, but she is intelligent.\" He rubbed his chin in thought.\n\n\"Take Lucretia with you...\" Mrs. Brooks said as she stepped into the doorway. \"...if she wants to go.\" Greg's mom added with a nod in my direction. \"I think you should ask her to go with you. She is very strong, and she is fast. I don't know how she would feel fighting against others who are like her, but you can always ask.\"\n\nGwen shook her head, \"She is not from here, she is not of this Plane...the Gatewatch is made up of representatives of here. She is...\"\n\n\"...Awake!\" I growled. I was getting tired of people talking about me as if I wasn't there. Also, I was kind of liking this idea of getting into a fight! I had already killed several werewolves, but this whole mercy thing of Mr. Brooks and Greg...? I could see the use of it, but this seemed like a situation where I would not have to hold back.\n\nGwen shook her head at me. \"No, as much as I like you Lucretia, you are not of this world...this is not your home...\"\n\nMy head came up at that! Not my home? Not MY home? I rolled over the railing and landed in a crouch by the bed. I changed and allowed my battle form to come out. I stood tall and unfurled my wings. The left one shading the bed from the lights and the right extending and pressing against the window.\n\n\"My home? My home is HIM! My Master is my home!\" I rasped out. I was pointing a claw tip at Greg as I said this. \n\nOf course at that point one of those people who look at the papers on the end of the hospital beds came in, took one look at me and turned pale. I snarled at them and saw their eyes roll up and they fainted, crumpling on the floor. I sighed, and then changed back to human form. Mr. Brooks picked up the...nurse? A nice looking woman, I assume she was nice. Then he set her in a chair and carefully patted her cheeks until she woke up. \n\n\"Oh! I am so sorry I thought I saw...something...\" She said in alarm. Her voice trailed off as she looked around the room looking for me. Gwen said nothing, but gave the nurse a smile. She apologized again, which I didn't understand why she was doing so. I was scary to humans in my battle form, unless you were used to it. No reason to apologize for that.\n\nAfter she left Gwen turned to me and said, \"See...you are not off this world, that woman was scared to death! As much as I like you Lucretia, you can't join us.\" She frowned and then looked down at her hands. \"Besides, what if we were fighting someone you know? I couldn't ask you to do that.\"\n\nI could hear the conflict in her voice. It made me wonder if she felt the same things I felt inside of my chest and stomach when I had a decision to make. Most humans I ran into seemed so sure about the path they should take. \n\nHmmm...I would have to think on this later.\n\n\"Do you know where the portal comes from? Which Plane it is connected to?\" I asked slowly. \n\n\"Jemima said it was opening up from the 5th Plane, and it felt like a minor noble was...Lucretia? Are you alright?\"\n\nThe Fifth! Where my old master lived! A lesser noble? Could only have been a handful of them! Oh this was wonderful! This was...oh YES! I suddenly realized I was breathing hard and clutching myself with a hand on my shoulder and another on my hip in the old gesture and I moved my hands away with a force of will.\n\n\"Oh I am coming with you!\" I declared and couldn't stop a little crow of triumph and need from my voice. Gwen took a step back from me. \n\n\"Do you know what is coming?\" She asked. \n\nI nodded. \"Most likely a servant from my old master! I am just about sure of it. The 5th Plane? The realm of hunters and their prey? Oh yes...I know it VERY well!\" I chuckled and rubbed my hands together. I looked out to where the sun was just beginning to dip down behind the buildings in the city. \n\n\"I guess we could use you. Do you...\" Gwen started to ask, but I cut her off.\n\n\"No more questions Gwendolyn Malfour of the Gatewatch! We do not have time. When the sun sets the portal will most likely open. Sunset, Midnight, Noon, and at Sunrise are the best times for summoning. I want to be ready for this Chjorzit!\"\n\nGwen nodded her head and picked up her big cloth bag putting the straps over her shoulders. \"I will see you near Bagley Park. I will call Jemima to let her know you are coming.\" Then she took off running out of the room. I turned towards the window in the room, preparing to leave when Mr. Brooks hugged me, and I almost pushed him away my nerves were still twitching. A chance for revenge! A small piece of it, but still a piece! I was going to stain the ground with blood this night...\n\n\"Be strong Lucretia...\" Mrs. Brooks whispered as she hugged me from behind as well. I was now trapped between two people and I felt that old Fear begin to build, then Mr. Brooks spoke.\n\n\"Come back to us, we almost lost Gregory...we don't want to lose you too. We are only just now getting to know you, and so far I like what I see.\" Mrs. Brooks hug tightened on me as I heard her quietly agree with her husband.\n\nI felt the warmth from their bodies, such a change from my own people who can range from being very cold or very hot. Humans are warm, comforting...is that why my kind first sought them out as prey? Because we lack...what? Hmmm...another thing to think about.\n\nThey let go of me and I walked back to Greg's side. His face looked a little twisted, uncomfortable. I readjusted his blankets, uncovering his feet. He always likes to have his feet uncovered while he sleeps. Otherwise he gets too warm he told me. He still looked uncomfortable, but it was the best that I could do under the circumstances.\n\n\"You will stay with Master?\" I asked quietly while looking at his parents. They both nodded yes. I changed and opened the window to fly out to the park. I remembered going there once with Greg, it was a warm day and he had bought a cone of ice that was colored dark purple for me to eat. I hadn't liked the flavor all that much so he had traded his red one for my purple one. I had been surprised that he had eaten it after I had already taken a few bites and licks. Most humans seemed able to kiss one another with open mouths but would refuse to share food that one another had taken a bite of.\n\nI don't know why that memory came to me just now...but it was a good one and I liked it.\n\nI carefully looked out the window and then crouched on the edge. I counted six windows below me, and nobody was looking up. I pushed off and spread my wings. I saw startled faces from some of the windows of people looking out. They may have caught a glimpse at my passing...but I was fast! Soon I was winging my way above the buildings and moving at full speed, my wings pushing the air as I gained altitude. A few minutes later, mainly because I didn't have to stop for street lights...no not streetlights. The lights that change into three different colors that tell you when you may drive or not to drive...what are those called? Stop lights? But they tell you to \"Go\" as well so they should be...?\n\nWell...those things.\n\nI didn't have to bother with them so I chose a straight course and hid in one of the trees. I watched children playing on a structure of tubes and bars and wood. They would sit on these seats on chains and then push themselves back and forth on them and laugh. My favorite was the tire swing. Greg would put me in the center and I would hold on to the chains and rubber wheel. Then he would spin me in a circle faster and faster! I could hold on easily enough but it was fun to try to walk around afterwards.\n\nI saw a bimotorcycle rider...no...a motorcycle rider drive up to the park and then step off of the machine as the sun fully set behind the buildings. It was a woman but I couldn't get her scent. Then I saw Gwen slowly pedaling her bicycle over the sidewalk through the park to the rider. Then the rider took off her full helmet and I could see it was Jemima. I always wondered how she could get around during the day. I guess that stuff she was wearing covered all of her skin. She and Gwen spoke softly to each other and then Gwen went up on tiptoe and softly kissed Jemima's lips.\n\nI wondered if Mr. Brooks knew that about Gwen when he thought she would be good for his son? As I understood it if a woman kisses a woman she does not like men...but some women like both women and men. And some men like only women and some men like both. Then when I started being introduced to the internet I found that men and women like plastic and glass things that are round and make noises. They do the most strange things with shoes as well!\n\nI looked down at my own feet as they gripped the branch under me. I wondered if I could find shoes that would fit me in this form? I saw a small sparrow land on the branch next to me and give me an inquiring look. I never really talk with birds, I have but they are not very good at conversations. They talk too fast anyway.\n\n\"Leave, danger tonight.\" I said softly. That should be short enough for him to understand and remember. Immedietely he flew away.\n\nI saw the park was emptying, so I changed back into my human form and dropped down from branch to branch to land on the ground. I walked over to Jemima and Gwen who were talking quietly, Jemima looked up as I approached. She gave me a half smile and rubbed her chin.\n\n\"You know, this is the start of a really bad joke or a saucy erotic story. A witch and a vampire and a succubus walk into a park...\" She chuckled throatily, I could see her teeth starting to show as she smiled.\n\n\"So what's the plan Gwen? If you surprise it you can trap and banish it without us, if you can't...then Lucky and I get to hold it in place...\" Jemima began but I interrupted. \n\n\"Him, we are going to hold him in place.\" I told them. Gwen gave me a puzzled look.\n\n\"How do you know it's a him?\" \n\n\"All nobles in the 5th Plane are male. Women are used for breeding and domestic chores. Also they are used as...trophies.\" My voice shook and I gritted my teeth, but the words came out.\n\nGwen looked puzzled as she pulled a small book out of her back pack. \"There is no mention of that in our readings, are you sure...\"\n\n\"YES! Sorry...yes Gwen, I am sure.\" I moderated my tone. Gwen was my buddy, there was no reason to get angry with her. Even if she was questioning something which I had over 45 human years of experience with! She didn't know that, she didn't need to know that.\n\nJemima's head came up. \"It's coming. Should be here soon. Ready to do some damage Lucky?\" She grinned at me, her teeth showing full in the streetlights. I matched her with my own grin and changed back into my battle form. I flapped once, indicating the top of one of the picnic shelters and got a nod from Gwen. She picked up her bag and set her equipment out on the picnic table. The only thing she took was her large deck of cards. \n\nWe waited, quietly. Almost...my claw was beginning to click on the fake stone at our feet. The city was strangely quiet, normally you can hear car horns or people shouting, or at least the sounds of tires turning on the roads. There was none of that.\n\nIt was like the world felt something was going to happen and was waiting for it...\n\nThen it did!\n\nA line of bright fire appeared thirty feet off to our left and seemed to turn in on itself. It flexed and bowed, then after another moment had passed it tore open to make a rough circle. I had to snicker at that. Seneca could make a better portal than that and she was the least magically inclined out of all of us! Jemima stood to the side, and I could see she had pushed herself to fully show her vampiric nature. Her eyes were all the different colors of a rainbow, which I have now seen and sat in the rain for a long time to watch it. Her claws while not big as mine, looked deadly. She didn't snarl, just waited patiently for who ever it was to step through. \n\nI was calm, cool headed, ready to do my part. Then I saw the cloven hoof step through and recognized the band around his leg...\n\n\"TARFAL!\" I screamed as he stepped all the way through. He was a full head taller than me and wide and powerfully built. He had hair all over his body, and a thick beard around his face to match the dark curls all over his head. He had no wings, but didn't need them as he had powerful legs that he used to make huge leaps. He had thick curved horns on the side of his head and I had seen him smash the face of more than one servant back in my old master's home with them! Seeing him, I felt the chains again, and felt the spittle, I smelled the stench, I felt...I felt...\n\n\"RAAAH!\"\n\nHe had turned to look when I screamed his name, and he had turned into my charge as I attacked. I sank my talons deep into his shoulders. I went up and over him, diving straight behind him tucking my body into a ball. The momentum, added with my weight, yanked him off of his hoofs and launched him into the trees. I heard a sickening crack and a bray of pain that made me smile. I stood and furled my wings, making my spears.\n\n\"Oh Tarfal! What a happy night this is! You are JUST what I needed!\" I crowed. I saw him stand, black blood dripping from the side of his head under his horns.\n\n\"Lucretia...Lord Balmont's Little Bird?\" He spoke in a deep voice that brayed a little at the end. I could see his confusion mixing with his pain. My pussy grew moist seeing him standing there dazed. I licked my lips and bit the tip of my tongue with my teeth. My eyelids fluttered as I tasted my own blood! \n\nThis was going to be good!\n\nI sped into him, running on foot, didn't even call up my armor, not for the likes of him! He braced himself and rammed his head hard into my chest making me blow out all of my air. It hurt, but that pain, in a very real way felt so good! I cried out in bliss at finally fighting after such a frustrating day. \n\nMercy? Phfft! \n\nThis one deserved no mercy! I was not going to let the Gatewatch banish him! I was going to send him home in pieces!\n\nThe best part about getting hit like this is that I was now close to him, and I used that. His hard and rough hands grabbed my waist and he slammed me onto the ground hard making me cry out in rapture again.\n\n\"Yes! Tarfal, is that really all you can do? It feels wonderful but really? Is that all you've got?\" I slammed the tips of my wings into his chest and stomach, I didn't need them sharp, just needed to let him know I could have penetrated him. The way he wishes he could have penetrated me, the way Balmont wanted to penetrate me! I grabbed his ankles with my feet as he staggered back and yanked them out from under him. He landed hard and I could hear the clack of his horns hit a rock in the grass. One quick roll forward and I had him pinned, I was straddling his belly feeling his coarse hair along my thighs.\n\nMy wing spears slammed down hard, impaling his hands in the dirt. I reached in memory for the spell...that damned spell that got me into this mess with Balmont in the first place! With a sigh and a gesture black chains of stone erupted from around us and lashed Tarfal to the earth. I stood, and carefully plucked the tips of my wings from his hands as he brayed out his frustration. I cocked my head, staring at one of my tormentors. The chains grew cruel thorns which dipped into his skin, anchoring him down.\n\n\"Oh...my lord Tarfal...you are held down and can't move, you can't get away. Seems so familiar to me somehow...\" I said as I walked slowly around my prey. I brought a wing tip to my lips and cleaned it with my tongue, savoring the flavor of my enemy, then rolled it around to mix with my saliva. Instead of swallowing, I spat and it hit Tarfal on his nose.\n\n\"Isn't this familiar to you as well...?\" I crooned to him as I placed my foot on his chest. I could feel my insides quivering, and I let it build. I was enjoying this and I haven't had a chance to let my need for revenge out in a long time.\n\n\"Don't you remember me? Chained down on a pedestal...?\" I asked sweetly. My right hand moving down my left shoulder and my left sliding over my right hip. \"Unable to move, you threw food at me, and stones, and spit upon me...ME! The daughter of the queen of the 6th Plane!\" \n\nI stomped hard on the center of his chest and felt something break. It felt so incredibly good to do that!\n\nI saw Gwen and Jemima fast approaching and I held a hand up for them to stay where they were. Tarfal chose that moment to speak, well, he didn't speak...he laughed!\n\n\"Oh! Little Bird! Lord Balmont was furious with you! To have you at his beck and call? Then to be tricked out of his contract on the hour when he was going to prove his mastery over his realm? Oh he loathes you...you cheated him out of his prize. He will be coming for you now Little Bird...He will...uhhhk!\"\n\nI slowly began closing my fingers and the chains twisted, and began to tighten.\n\n\"Go back to your master you piece of filth! You coward! You can strike and beat me when I am chained but here and now you are nothing! You are less than nothing...begone!\"",
        "I clenched my hand into a fist and felt the prick of my nails in my palms. The chains sawed down and my enemy lay in pieces at my feet. I reached down to pick up his head by a curling horn and kissed his lips once, and drained the little bit of life that he had left. Then I dropped the piece of meat on the ground as Tarfal turned to ash! He would go back to the 5th Plane and bring word of me to Balmont. \n\nI hoped so...\n\nBeing bound the way I am, I am more powerful than I was before...I would be ready for that Chjorzit to come here and when he did...\n\nI would destroy him!\n\nChapter 34: Past \n\n\"Holy...shit...\" I heard Jemima breathe softly behind me. My wings flexed, then unfurled themselves, and then folded around my body, the little claws holding onto my shoulders. The quivering in my belly was spent, and the loud voice inside of me purred with satisfaction. I began to smile, and had to cover my mouth with one hand, but noise still escaped. Gwen must have misread it, because I felt her hand slide up and down my back between the edges of my wings.\n\n\"Are you alright Lucretia?\" Gwen asked. Jemima snorted. \"Lucky dropped that guy like a bad habit. A little viscious for my taste but she got the job done.\"\n\nGwen stepped around in front of me and her eyes widened. \"You aren't...crying. You're laughing?\" She took a step back from me, I could see she was bothered by this, but I didn't care. One of the many who had hurt me was even now slowly reforming back in Balmont's chambers. He was probably trying to hurriedly come up with an excuse for why he was back so quickly and also trying to explain how such a mighty noble was beaten so quickly.\n\nOh I would love to watch that conversation! \n\nI slid a hand down between my legs and gentle cradled my lips. I purred as I gently gave them a tender stroke with my finger tip and relished the sensation of my sharp claw sliding along my soft inner folds. Jemima scented the air and her eyes soon matched Gwen's own in surprise.\n\n\"You are turned on?\" I nodded.\n\n\"Fighting is an aphrodisiac for you?\" I nodded again, my smile widening.\n\nGwen looked at me in puzzlement, her hand dipping into her back pack and riffling through it before coming out with another book.\n\n\"Is it pain you like?\" She asked me. I chuckled and shook my head.\n\n\"No, it's the fight! I love to fight, to hunt, to kill...its what I do!\" I exclaimed softly. I paused as a thought occurred to me, and I corrected myself.\n\n\"Mostly that's true, Greg...\" The ache came back as I thought of him. \"Greg has been changing me, I think. Or maybe I am changing myself.\" As quick as that, my lips dried and I groaned in frustration as I brought my finger away. I licked it, tasting my own arousal. Something I hadn't felt since, well, since my time with Balmont.\n\n\"How has Greg been changing you?\" Jemima asked. She had crossed her arms and was glancing over Gwen's shoulder at the book she was leafing through. \n\nGwen shook her head in annoyance, \"There is nothing here about a succubae who is turned on by battle. Theres one turned on by pain, others by fear and...nothing like you.\" \n\nI shrugged, \"You can't learn everything from books. Things change, I never thought they would, but I have...in some ways.\" I looked back at the ash on the grass and the furrows where my chains had dug into the ground cutting through Tarfal's body. \"In some ways I am still very much me.\"\n\nI looked back at my friends who were both looking at me strangely, \"As to how Greg has changed me, I don't know exactly. I know I have emotions but you have been there for that. I am coming to understand them more. Greg is...maybe...or I am...I just know that I am growing, that I am becoming more than what I was because of what I am learning from not only him...but from all of you. I am hoping to surpass what I am now and be more...\" \n\nMy voice trailed off as I realized what I had just said. Those were all words that my Mother had spoken to me in the kitchen with Greg after we had been bound! What was going on? My thoughts were interrupted by Jemima kicking some of the ash on the grass. She grinned, watching it dissipate down into the ground.\n\n\"So, I take it you knew this guy, he called you a name...Little B...?\" She stopped speaking as she saw my expression, then held up her hands in I think it was a soothing gesture. \"Didn't mean any offense by it. Just curious is all.\"\n\nI looked at both of these people, and decided it was no great secret. If they did enough digging in the other realms they could find out if they wanted to. \"I just don't like to talk about it...\" I growled more to myself but they both nodded as if they understood.\n\n\"I was fascinated by magic at a young age, my Papa told me...\" I began but Gwen interrupted. \n\n\"Your Papa? Your Father? How could he still be alive? Succubae kill their partners after mating with them.\" I glowered at her and then realized I was still in my battle form. If someone came by they would see me like this. I allowed myself to look human again, and then pulled up my hood to my sweatshirt.\n\n\"Usually yes, my Papa was a special case though. For some reason Mother did not kill him. He told me how magic was important for a fight. You can hit your enemy at a distance, or at least distract them so you can land in the killing blow.\" I smiled, remembering sitting in Papa's lap as he explained to me the intricacies of combat and how to manipulate your opponents into making mistakes.\n\n\"I had heard that Balmont, Lord of the 5th Plane, and leader of all hunters had several rare and strong spells at his disposal. When I came of age I wanted to learn them. Mother was a little surprised, but she set up a meeting between him and myself.\"\n\nI smiled wryly at my two neighbors. \n\n\"He was handsome. Four wings of feathers as brown as chocolate, and smooth hard skin and muscle. His horns were long and bent forward...aggressive. He was, to my young eyes, gorgeous and desirable. The contract was a simple written one. He would teach me magic in return for my service. There was a sharing of power between us with him keeping control unless certain provisions were met.\"\n\nI clenched my teeth in frustration at the memory.\n\n\"I should have had Mother double check the contract, but I was young and foolish and signed it after reading it once. I was then his slave!\"\n\nJemima raised her head at that and her eyes starting shifting through colors, \"Say again Lucky?\" Gwen's hands went to her mouth and she almost dropped her book.\n\n\"I had to do anything and everything he ordered me to do.\" I said, and I could feel my eyes grow hot with those troublesome tears. \"As the daughter of the Queen of the 6th Plane I was a rare trophy. I spent most of my time chained on top of a pedestal. His soldiers and visiting nobles would spit on me, and sometimes throw rocks, and weapons at me. I would get hungry but by the orders of my master I could not move or even ask for food.\" I grinned and spat suddenly at the area where Tarfal had been destroyed. \n\n\"That chjorzit Tarfal used to hold food in my open mouth and pull it away before I could eat it. Sometimes he would spit in my mouth when I was allowed to speak and beg for something to drink.\" Gwen looked she was going to gag, for some reason Jemima looked as if she had heard of this kind of thing before. She was the one who asked, \"How did you get away since you're here now?\"\n\nI smiled as I remembered how it all happened. \"I have a good memory and went over and over the contract in my head as my sisters had taught me, looking for the loophole. I finally found it after 45 of your years had passed. He was going to have a...ceremony I guess you would call it.\" I looked away, not wanting them to see what I was feeling, what I was hiding. Gwen appeared to want to question me about it, but Jemima put her hand on Gwen's arm and shook her head. I guess she understood. She motioned me to continue.\n\n\"This ceremony was supposed to shore up his power base and prove to everyone in his realm that he was lord, and none could oppose him. It was after I saw those he considered his enemies walk by me in the hall that I realized the loophole.\" I started to smile with pleasure as I remembered the events.\n\n\"In the event he was surrounded by enemies I was given permission to do as I saw fit to destroy all enemies in the area.\" I smiled at them. Jemima frowned, but Gwen began to grow a large smile as well and she asked, \"Was that the extent, no provisos or addendums?\" I shook my head and Gwen giggled.\n\n\"Did I miss something?\" Jemima asked looking back and forth between us. \"Once the enemies were dead, then Lucky here should have gone back to the pedestal or waited for further orders from her...lord!\" Jemima spat this last word as well.\n\n\"I was allowed to do as I saw fit. I saw fit to attack as hard and as fast as I could, and I saw fit to leave. So I used every spell he taught me, and some my Papa had taught me as well.\" I smiled proudly. \"Balmont was always so proud of his wings! As I drained every being there in the court that I could to get the energy to open a portal back home, I hit him with every piece of magic I knew, until he was broken and bleeding. Once I had enough energy I saw he was getting back up, but his glorious wings were torn and burned and broken. I hit him with one last spell knocking him onto the stage where he had set up...set up...the ritual... And I went home.\" I hoped they didn't catch on to what I was leaving out.\n\nI hoped in vain!\n\nGwen pounced on it like a hungry puppy! I myself don't like dogs, but I do like puppies.\n\n\"What was the ritual? The one that proved his mastery of the realm and over the other lords?\" She had pulled out one of her books and was skipping through the pages. I remained silent. I had only told this story to Mother, and mentioned it to Papa once. I heard that a place in Greece, wherever that is, was almost wiped out.\n\n\"I...I don't want to tell you.\" I said firmly. The memory of it, the fear I felt, and the anger at my helplessness to stop it from happening came back to me. Gwen looked up from her book studying me with curiosity. \"There aren't that many rituals for magical use with a succubus except for summoning. I haven't heard of any that...\" She stopped speaking as Jemima stepped forward, an understanding look in her eyes.\n\n\"It wasn't a magical ritual was it?\" She asked softly.\n\n\"No...\" I replied.\n\n\"It wasn't a true ritual at all was it?\"\n\n\"No...\"\n\n\"He was going to prove his mastery through you, the daughter of a Queen...wasn't he?\"\n\nI didn't answer. Gwen looked sick, and then whispered something softly that I didn't quite catch. My ears don't hear as well when I am human. I looked directly at her and she cleared her throat before asking me a question I didn't want to answer.\n\n\"Lucretia...are you a virgin?\"\n\nTo be continued..."
    ],
    "authorname": "payenbrant",
    "tags": [
        "sex offender",
        "judge",
        "vampire",
        "werewolf",
        "witch",
        "succubus",
        "lesbian",
        "outsiders",
        "fight",
        "virgin"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/mine-yours-pt-11"
}