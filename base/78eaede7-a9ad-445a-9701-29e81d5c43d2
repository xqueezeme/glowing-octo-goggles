{
    "title": "Office Mistake Turns to Home Fun",
    "pages": [
        "I'm a project manager for a large company and had just started a new project. Right now, I was trying to bring all the costing estimates together so that we could get the proposal out to the company. Even though I was a 'manager' I was still working out of a cubicle, although it was bigger than most and away from the rest of the employees.\n\nI'd just gotten back from a progress meeting with my manager when I noticed that some of the files on my desk weren't in the same place and then I saw the note to the side. It was from Maggie - she was the one in charge of the proposal itself and it said she was hoping I could stay for a few minutes after work to help her out with a few things.\n\nMaggie had been hired about 6 months ago and she was certainly a good looking lady. I knew she'd just turned 35 (a couple of years younger than me), had nice long brown hair, a great smile and very well proportioned - I'd guess 36c chest, nice waist and a very round, firm ass. It had only taken the single guys in the office a few days to find out she was married and wasn't interested in flirting with any of them. I was married as well so it really didn't matter to me and even if I wasn't, I'd seldom seen an office romance end well.\n\nI'd met with her a few other times, often it was easier to stay for a bit after work when there wasn't anyone else to interrupt or phone calls to take so I msg'd her back that I'd be fine talking with her after work.\n\nAs people were leaving, we grabbed one of the small meeting rooms and I pulled up the info I thought we'd need on the big screen. When Maggie got there, I could tell there was something bothering her but figured I'd find out soon enough and I certainly did.\n\nOnce we'd closed the door, she looked at me for a few seconds before saying, \"I really don't need any help with the proposal, I wanted to let you know you'd left your browser open when you went into the meeting.\"\n\nOh fuck...I'd been taking a few 'me' minutes before the meeting looking at some porn. I knew right away this could go really bad so I started with, \"I'm sorry, I hope you weren't offended. I just needed to...\"\n\nMaggie cut me off there saying, \"No, I'm not offended and before you ask, no I'm not going to tell your boss what I saw - at least not if you answer a few questions for me.\"\n\nI knew I had two choices - agree and maybe not be in deep shit or disagree and maybe end up looking for work so I smiled and said, \"Well, not like I have a lot of choice so go ahead.\"\n\n\"Well,\" and she hesitated for a few seconds, \"have you ever eaten out a woman after you've cum in her or is it just something you enjoy watching?\"\n\nDouble fuck, now I remembered what I'd been watching before the meeting. \"Umm, well no and yes - I haven't done it but yes I enjoy watching it.\"\n\n\"Ok, next question - is it something you would do?\"\n\nWow, I wasn't sure where all the questions were headed but it was certainly getting interesting. \"Yes - I'd love to try it but even though I've asked my wife, she won't even let me cum in her mouth and thinks a guy eating his own cum is disgusting. I've wanted to try it for years but I love her enough that I wouldn't have sex with another woman to find out what it's like so watching it on the internet is the closest I'm likely to get. If I can ask....why do you want to know?\"\n\n\"Well,\" and she hesitated again, \"I've never told this to anyone else so if you want your viewing habits to stay private, you won't tell anyone but it's something I've always wanted to try and my husband thinks its gross and won't even consider it. Like you, I can't bring myself to having sex with someone else just to find out.\"\n\nI chuckled a bit at that before saying, \"so I'd love to taste my cum from my wife's pussy, she's not into it and I won't fuck anyone else who is willing and now I find out that you'd love to have your cummy pussy eaten but haven't because your husband won't and you won't have sex with anyone else either. Guess we're both out of luck.\"\n\n\"Unless....\" and she kind of tapered off.\n\n\"Unless what?\"\n\n\"Well, to be honest, once I saw the video you'd left open, I looked at your history and found some others you'd watched.\"\n\nUh oh, guess I need to remember to clear my history more regularly. \"And what did you see?\"\n\n\"Oh I saw quite a bit - and some of them were a guy licking another guy's cum from a woman's pussy. Is that something you'd try?\"\n\nI could feel the blood rushing to my face but figured I might as well answer her. \"When I first looked at those ones I didn't think so but I've thought about it more and more and it's definitely a turn on.\"\n\n\"So that's a yes?\" she asked excitedly.\n\nI could feel myself getting hard just thinking about it, \"yup, that's a yes.\"\n\n\"I was hoping you'd say that!\"\n\n\"Why?\"\n\n\"Well, I hadn't thought about it until I saw your other vids either but when I did I got really wet. Maybe that's our answer - if I had a load of my husbands cum in me, would you lick it out?\"\n\nAll of a sudden things clicked and I was picturing Maggie laying back with his cum oozing from her pussy as I licked and sucked on her until it was all gone. I'd been getting hard, but now my cock was like a bar in my pants.\n\n\"As long as we could figure out a way to do it so no one else would know then yes....I'd love to do that.\"\n\n\"Mmmm, ok - let's see what we can figure out and maybe we can both find out what it's really like really soon!\"\n\nI'm not sure about Maggie but I know I was so horny that when I got home, my wife got one hell of a fucking before we even had supper and then again afterwards.\n\nIn the next couple of weeks, Maggie and I chatted when we had a chance and now had each others private email address so we'd occasionally send each other links to a particularly hot video that we'd found. Once or twice she'd caught me alone and whispered, \"He fucked me this morning - I'm still full of cum, just think of what it would be like to lick me right now.\"\n\nOf course that would leave me hard as a rock for a while but thankfully no one other than Maggie ever noticed. Our first real chance came a couple of months after our first chat. I caught Maggie in the hall and told her my wife was going to be at her sisters for the upcoming Thursday and Friday and I'd taken them off to catch up on some repairs and stuff around the house. I suggested that if she were to get a quickie before she left for work, maybe she could swing by my place to 'drop some papers off' and she could be my breakfast.\n\nShe thought that was a great idea and we decided on the Thursday. I couldn't believe how slowly the Mon/Tues/Wed went and Wed evening my wife left for her sisters. I slept well until the alarm went off at 7am so I got up, showered, shaved and as arranged I left the side door unlocked and was laying naked on the bed with a blindfold on when Maggie came in. The blindfold was her idea - she said she wasn't really comfortable with me seeing her naked the first time and me laying on the bed was my idea - my favourite videos were when the woman straddled the guys face to get eaten.\n\nI stayed semi-hard the whole time I was waiting and as soon as I heard the door open and footsteps coming down the hall I totally stiffened. This was it - I'd finally find out if I really enjoyed eating a creampie or if it was only in my mind and that got me a little nervous. I heard Maggie come into the bedroom and her soft, \"wow...you're really hard!\"\n\nNext I felt the movement on the bed and could suddenly smell the scent of sex as she got closer. I had my arms out to the side and I felt her legs pinning them to the bed and as she brought her pussy over my face I could feel fabric on my arms and chest so she was likely wearing a skirt to make things easier.\n\nFrom above me I heard, \"He was really excited that I wanted a quickie this morning. As soon as I could afterwards, I put a butt plug in my pussy to keep the cum from coming out. I hope you're ready because he came a lot and I'm not sure how fast it'll come out when I pull out the toy.\"\n\nI opened my mouth and waited for the feeling of her wet pussy against my tongue but right after I heard a soft 'plop' that must have been the toy coming out, I felt a huge glob of cum fall into my mouth. It was either choke or swallow so I swallowed and right after I did, I felt her pussy on my face for the first time. She was wet both from excitement and his cum and after a few tentative licks I found I enjoyed the taste as much as I thought and I was soon licking and sucking every bit I could get and every so often she'd shift so instead of her pussy, I was able to lick and suck on her clit.\n\nHer breathing was getting louder and so was her moaning until I was pretty sure she was close to cumming. At one point she stopped for a few seconds and I heard a soft, \"I hope you don't mind, I've always wanted to try this too.\"\n\nI was just trying to figure out what 'this' she was referring to and then I felt her move even further forward until instead of my tongue against her pussy, it was against her anal pucker. It wasn't something I'd spent a lot of time looking at in porn but I'd certainly seen a few and was fine trying it out. After a few licks and thrusting my tongue into her ass a few times she knew I was fine with it so now when she moved it was so I could lick all the way from her clit to her asshole and everything in between. After a few minutes of that, I felt her whole body stiffen and she let out a long, low moan as she came. I thought I'd gotten all the cum from her but when she spasmed, a couple more spurts dribbled out into my mouth.\n\nWhen she moved off of my face, I reached for the blindfold but she stopped me saying, \"No, not yet\" and then I felt her lips on my cock. It didn't take me long to realize she was very good at giving head and all the anticipation/kink of eating her cummy pussy caught up to me all at once and I started shooting spurt after spurt of cum in her mouth. I'd only cum in my wife's mouth once and she promptly spat it out, gave me hell for doing it and went to sleep in the spare bedroom for the rest of the night.\n\nSo when I came in Maggie's mouth and I felt her move on the bed, I half expected her to either spit it out right there or go into the bathroom and spit it out. I quickly realized she had other plans when she pulled the blindfold off, brought her lips to my lips and as her tongue parted them I felt the first bit of my cum trickle from her mouth to mine. We'd talked about cum swapping a few times but hadn't made any real plans to try it and I quickly found the unexpectedness of it was a huge turn on. As we kissed, more and more of my cum slid into my mouth. When I was pretty sure I had it all, it was my turn to surprise her by rolling her over onto her back and returning the kiss, letting my cum slide back into her mouth. At first I think she was a bit surprised but her tongue exploring mine told me she wasn't upset and eventually we ended up laying on our sides, kissing and swapping my cum until there wasn't any left.\n\nWhen she finally pulled back and looked at me she had a huge smile on her face saying, \"I really hope you enjoyed that enough to want to do it again because it was the best orgasm I've had in years.\"\n\n\"Most definitely...I loved the feel and taste of everything and would love to do it all again.\"\n\n\"And you were ok with me moving so you could lick my ass?\"\n\n\"It was a bit of a surprise but I'm fine with it and would happily do it again - and happily swap my cum from your mouth to mine again too.\"\n\nWith that she gave me a really sexy smile and said, \"Well, I'm sure my hubby wouldn't mind a quickie tomorrow morning too - if you're interested?\"\n\n\"Mmmm, most definitely - I'll be waiting for you.\"\n\n\"I'll see you tomorrow then..but for now if you don't mind I'd best grab a quick shower and head to the office. Oh...and after what we just did, I'm fine with you being able to see all of me so you won't need the mask.\n\nI got done what I had to that day and the next morning I was up and getting ready for Maggie when I got a text message. When I looked, it was a selfie of her pussy - red, swollen and oozing cum with the msg 'on my way'.\n\nWhen she got there, I was naked and ready but this time I greeted her when she came in and closed the door. Seeing as she'd kissed me with a mouthful of cum yesterday I figured kissing wasn't out of bounds so I gave her a hug and a quick kiss and we headed for the bedroom. Today she was wearing a dress instead of a skirt and I was quite pleasantly surprised when she turned around and said, \"can you unzip me?\"\n\nI certainly could and I did - when the dress dropped to the floor she turned around and I'm glad I she was ok with me not wearing a mask. The bra she was wearing did nothing to hide her hard nipples and I could see a bulge in the front of her panties that I guessed was the same plug she'd used yesterday.\n\nWatching my face with a bit of a smile, she reached behind her and undid the bra and age or gravity certainly hadn't had much effect on her tits, they were firm with very little sag. When she saw me looking she suggested, \"maybe sometime you could cum on them and then lick it off?\"\n\n\"That's certainly a possibility but right now I'm really looking forward to seeing the rest of your body.\" so she pulled her panties down and off and I was right, she had the same plug in holding back the cum.\n\nShe was standing with the bed behind her so I gently guided her back until she was laying down and rather than going right for her pussy, I started kissing and nibbling up the inside of her legs, working from one to the other as I went higher. When I got close enough, I reached out and started gently twisting and moving the plug in her pussy until I could get there with my tongue.\n\nEventually my mouth was right there so I cleaned up the few remnants of cum that had managed to find a way out and then gently pulled out the plug. As soon as it came out, I put my mouth right over her pussy so nothing would get missed and it was a good thing I did because as soon as her pussy tried to close, a fair bit of cum oozed out. Knowing from yesterday that the taste was ok, I dove in with my tongue but also worked a couple of fingers into her so I could scoop out a bit more cum and rub her g-spot at the same time. It didn't take long for her to be thrusting up against my fingers and tongue so as soon as I had a nice mouthful of mixed juices I stopped and moved up to give her a kiss with a big taste of what was in my mouth.\n\nSome things just happen without any planning and that's what happened next. She'd already been close to cumming and when I kissed her and let some of the cum into her mouth she arched up a little and that caused the head of my cock to hit her clit. Apparently that was enough for her to orgasm and when she did, her whole body arched up and the next thing I knew I was balls deep in her pussy while we were still kissing and swapping cum.\n\nWe both froze for a few seconds before I started to pull back with a \"sorry, I didn't mean to\"\n\nI could see a bit of uncertainty in her face before she reached down and held my hips, stopping me from pulling all the way out. \"I didn't mean to either. So if you didn't mean to and I didn't mean to then we really weren't planning on having sex right?\"\n\nI could tell she was trying to convince herself as much as me but having the head of my cock just far enough inside her pussy that I could feel the little contractions she was having certainly convinced me.\n\n\"No, I guess not\" as I slid back in a couple of inches, \"It does feel good\" another inch or so, \"I guess now that I've already been in you\" as I slid the rest in.\n\n\"Oh fuck yes, I wasn't planning on letting you fuck me but it feels so damn good....you're definitely thicker than my husband\"\n\nThat explained why she still felt so tight even though she was already pre-lubed with cum! As I slid in and out of her a bit faster, I could see some of the cum start to push out between the walls of her pussy and my cock. As I sped up, her pussy quickly became decorated with white foamy cum. After about 10 minutes of fucking, I was really glad to hear her moan, \"I'm cummmming!\" as her body started to clench and quiver. I'd been trying to hold off cumming but now that she'd cum, I let go and was soon adding my cum to the mix that was already in her pussy. When I softened and pulled out, a whole fresh ooze of cum started to trickle out and quite happily I moved lower, lifted her legs up over my shoulders and began tonguing her messy pussy. I quickly found that while my cum tasted similar to what I'd licked up earlier, it seemed a bit thicker - maybe because it was fresh.\n\nOnce I'd cleaned up what was oozing out, I looked down and could see that quite a bit had run down between her legs, over her pucker and further back. Knowing she'd enjoyed it yesterday, I lifted her legs a bit higher and began working my way down - first the little bit of skin between her pussy and ass, then running my tongue over, around and inside her ass before finishing by running my tongue along her crack until she was as clean as I could get her. I followed the same path back up, spending a little time tonguing her rosebud and feeling it quiver and pulse with each touch before going back to her pussy. She was already nice and clean but I love the taste of pussy so I happily went back to licking and kissing her lips and running my tongue around and inside her. This time though, I made sure my finger was nice and slick and as I tongued her pussy, I slowly slid my finger into her ass. I heard a quick intake of breath when the tip of my finger slid inside and then back out - going a bit deeper each time and by the time I had in in past the second knuckle she was happily groaning with each thrust.\n\nIt didn't take long for her to peak again and suddenly I felt her ass clench my finger, her pussy try to squeeze my tongue and her whole body quivered as she came. At first I thought her orgasm was pushing out a bit more cum but quickly realized that as she came she was actually squirting with each contraction. That turned me on even more and I did my best to catch as much of her squirting juices as I could.\n\nEventually she relaxed and I felt one of her hands gently pushing my face away from her pussy with a soft \"too sensitive after all that.\"\n\nI was fine to move up and we quickly had our arms around each other and were kissing like a couple of teenagers.\n\n\"Oh my God...that's only the second time in my life I've ever squirted!\"\n\n\"Cumming in you felt absolutely amazing\" I offered.\n\n\"It most certainly did, but it can never happen again.\"\n\nShe must have seen the quick flash of disappointment on my face as she smiled and continued, \"unless of course it's accidental!\"\n\nYou'd be amazed how many 'accidental' things can happen when two people are fooling around - but that's another story!"
    ],
    "authorname": "Tepin",
    "tags": [
        "creampie",
        "oral",
        "sex"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/office-mistake-turns-to-home-fun"
}