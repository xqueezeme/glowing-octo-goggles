{
    "title": "Plotting a Course Ch. 17",
    "pages": [
        "Chapter 17: Memory Lane \n\nPlotting a Course\n\nBy: VaRiverWriter\n\n*I am truly sorry for the extended delay.\n\nYour comments are most appreciated. \n\nPlease keep the feedback coming. \n\nThanks so much! *\n\n*****\n\nMy legs were cramped, I was tired and beyond ready to get off of the charter bus. The first few of the almost eighteen hours went quickly. The students were rowdy and excited about the team making it to the National Championship game for only the second time in school history. I sat up straight when a sudden outburst rumbled through the bus. We had taken the exit for the city of Frisco, which was part of the Dallas/Fort Worth metroplex in Texas. \n\nThe sun had long ago set and the city lights sparkled as the line of three buses weaved their way through the city streets. I stretched as best as I could in my sardine can of a bus seat before pressing the palms of my hands into my eyes to rub away my lethargy. The team made the trip three days ago, and the cheerleaders, some of the football staff who couldn't travel early, some faculty, and students were on these three buses. \n\n\"Bobby!\" A heavy hand thudded on my head and I flinched before turning around and looking over the seat behind me.\n\n\"We're going to check-in, drop off our bags and head to the hotel bar.\" \n\n\"I dunno Colbs. I think I am going to take a shower and go to bed. We're going to tailgate all day tomorrow. \n\n\"Nope you're coming out.\" Colby, one of the football managers, smirked and I turned around in my seat and pulled my backpack out from under it. \n\n\"Maybe.\" I mumbled, as he snickered behind me. There was no drinking technically allowed on the bus, but it was clear that many people had spiked their drinks by the way they stumbled off the bus a little too clumsily. Six of us crammed into a room with two double beds and a cot. I set my backpack down on a bed and went to pee. I heard the guys shouting and when I came out of the bathroom they all looked at me. \n\n\"What?\" I checked my zipper wondering if I had left my fly down.\n\n\"Not bitch.\" They all shouted in unison, clearly staged. \n\n\"What the fuck.\" I groaned realizing I would be sleeping in the middle of one of the beds. \n\n\"You're the skinniest anyway, don't worry, we'll drink enough you'll pass right out.\" Colby wrapped his arm around my shoulders and led me grudgingly out the door.\n\n*The next morning*\n\nI blinked the grit out of my eyes and immediately regretted that I let the guys talk me into the shots of cinnamon whiskey before we left the bar last night. The room sounded like a factory where they produced only snores. I squirmed out of the bed and noticed Colby was drooling and chuckled. I checked the red LED clock by the bed and saw that the Student Duke Club tailgate started in less than an hour. I owed my buddies a little revenge for making me sleep three deep in a double bed. I turned the volume on my phone all the way up, pulled up a folksy, loud song that had become an unofficial theme song for the JMU Dukes, Gogol Bordello's 'Start Wearing Purple.' Our school colors are purple and gold, and the pep band, and later the JMU Royal Marching Dukes, had started playing it to great fanfare. \n\nI hit play as I opened the curtains and then turned on the overhead lights. The slow beat was quickly followed with rough vocals before the tempo kicked up.\n\n\"Start wearing purple for me now.\" I screamed as I jumped on the other bed and woke everyone up laughing. \n\n\"Okay, okay, we're up.\" They groaned before pillows started to be thrown. I laughed and jumped down from the bed and we headed to fill up on hotel breakfast. \n\n*\n\nWe didn't have to look hard for the JMU fans. The purple tents and flags drew us in the right direction. Not only was I not surprised that this many people had turned out this early in the morning, but I was equally not surprised to see everyone was bright-eyed and bushy tailed, with purple and gold plastic cups in their hands. Some smokers and grills had been fired up and fragrant wood chips and cooking meat teased my nostrils while we lazily drifted from spot to spot, laughing, catching up with friends and playing corn hole, beer pong, flip cup, among other games to pass the time and get properly primed for the game. \n\n\"Alright guys, I gotta go. See you after the game.\" Colby fished a Gatorade out of the cooler and headed off for his managerial duties. He made his way around the circle, giving out fist bumps before jogging off in the direction of the stadium. I felt my phone buzzing and found a message from my William & Mary Tribe buddies, Clint and Matt, wishing us luck and they said they'd be watching from Matt's house in Virginia. That's good sportsmanship, I thought and sent a quick reply. \n\nI ate entirely too much, it seemed every tailgate group had something that \"I just had to try!\" Not wanting to be rude, I tried them all. Some were better than others, but I pretended I loved them all. I'm not sure if it was mixing the beer or liquor last night, or the beer and food today, but I needed something to settle my stomach. I looked around the tailgate and thankfully saw one of my friend's dad with a bottle of antacid in his hand. I made my way over and he smiled and handed me the bottle as I tried unsuccessfully to hold in a belch.\n\n\"How'd you know?\" I questioned laughing and he shook his head. \n\n\"I know the signs.\" He replied. I thanked him and handed the bottle back to him.\n\n\"Nice jersey, did you get it at the bookstore?\" Mr. Martin asked.\n\n\"Not exactly.\" I stalled, and I'm sure I looked a little daft. The truth is that it was one of Rob's actual jerseys and not a replica. I looked him in the eye and put on my brave face, bracing myself for the worst. \"It's actually a real jersey.\"\n\n\"Oh I see. One of your buddies on the team?\" He continued.\n\n\"No sir. My husband.\" I clearly answered at the wrong time and the beer he was sipping on spewed out of his mouth and I barely avoided getting showered in it. \n\n\"Oh, I'm sorry.\" He wiped his mouth and tried to hide the shock, or was it embarrassment from his face. \"You must be Bobby. I think we've met before.\" He held out his hand in a gesture of kindness. \n\n\"Yes sir. \" I gave him a firm handshake, maybe squeezing a little stronger than necessary. \n\n\"Rob's a good player.\" He added before scratching his belly. \n\n\"Yeah. Well thanks for the antacid.\" I smiled and started to turn away.\n\n\"Anytime Bobby.\" He had a sincere smile and I headed back to the group. Game time was quickly approaching and people were beginning to pack up and head to the stadium. We weaved our way through the vendors as we made our way to the entrance. \n\n*\n\nOur purple and gold student sections was clearly visible and the border between the purple shirts of JMU fans and the green shirts of the reigning, four time, back-to-back, favorited to win, North Dakota State University Bison. They were overconfident and jeered as we walked by them to get to our seats. The JMU fans were fun loving, nice, we didn't sneer and jeer the NDSU fans. It was easy to find someone who had smuggled in a flask, a mason jar of moonshine, or even cans of beer. Our section was in good spirits and the bleachers slowly filled to capacity while the national anthem played. \n\nThe sea of purple JMU fans may have been smaller than the mass of green, but when the teams were announced we definitely let out a louder roar. Unfortunately, we were silenced when the Bison's kick returner returned the opening kickoff for a touchdown and an early 0-7 lead. The vendors were selling hotdogs and drinks, the cheerleaders were leading spirited cheers, the announcers were giving inspired play-by-play and butchering the pronunciation of the players' names, but the rest of the first quarter passed without further scoring. \n\nDuring the TV timeout before the second quarter started, I saw Rob and a couple of the other seniors on the team walking down the bench slapping helmets, talking, and trying to pump up the rest of the team. The second quarter started and NDSU still had the ball. Rob was in at inside linebacker. I knew how much Rob and the rest of the team had prepared for this game. Rob watched every game from their past four winning seasons and I had even watched many of them with him, looking for any hints that might give him an advantage. The Bison's quarterback called an audible, trying to exploit a weakness in our defense. As if in unison I could tell Rob noticed the same formation that I had. Rob quickly called an audible of his own and realigned the defense. He crowded the line to feign rushing the passer. The quarterback was prepared and tried to lob a screen pass over Rob's head, but at the last second Rob retreated, expecting the play. The quarterback didn't account for Rob in coverage and he jumped the route, intercepting the ball. Rob returned it for a 27 yard touchdown which tied the score 7-7, giving the JMU fans a reason to erupt in applause, and silencing the fans in green. After I finished jumping up and down and high-fiving everyone around me I felt my phone buzzing again in my pocket. I quickly checked the message and swelled with pride as I read Clint's message: 'That's our boy.'\n\nAt halftime the teams ran into their locker rooms, the score was still tied at 7. We were in good spirts as we watched a famous country and rap star sing mashups of their songs accompanied by the marching bands, cheerleaders, dancers, and flag teams. It was entertaining to say the least. Halftime ended and the teams streamed back onto the field, each wanting to be the national champions. \n\nThe third quarter was a punt fest, neither team could make a dent and the score remained level. All of that changed in an instant. One of our cornerbacks blitzed NDSU's quarterback from his blindside, he wasn't picked up in protection and the quarterback didn't stand a chance. The ball bounced free and both teams tried to pounce on the loose ball as it bounced awkwardly and erratically on the field. Our section turned raucous when somehow Rob emerged running down the field with the ball cradled, both of his arms protecting it. One of their receivers was faster and cut him off, diving between his legs at the exact same time their running back chased him and pulled him down from behind. The roaring crowd turned into thudding as my pounding heart echoed in my ears, slowly drowning out the crowd which quickly silenced as they realized something was wrong. The players on the field took to a knee around Rob creating a circle revealing Rob curled up in agony. \n\n\"Rob!\" The word was drawn out and muffled, as if it were being screamed from miles away, and not from my own mouth. The medical staff rushed and quickly surrounded Rob and an unnerving hush fell upon the stadium. I was on my feet and rushing down the steps toward the field. A man in a bright yellow jacket reached out his arms to block my way, I ducked under his reach and sprinted onto the field.\n\n\"Bobby no!\" Colby grabbed me and turned me around. I shook free and only stopped when I heard the loud beep of an ambulance backing onto the field. Colby caught up to me and stood by my side. He was no longer trying to restrain me, but seemed paralyzed by the scene. Rob's left leg was bent at an ungodly angle. I tasted bile and fought the urge to vomit on the field. The EMTs were pulling a board out that I could only assume they were going to use to brace Rob. I steeled my jittery nerves and walked into the circle of people that was surrounding Rob. \n\n\"Rob.\" I whispered, determined to keep the fear out of my voice as I kneeled just inches from his contorted face.\n\n\"Hey Bobby.\" Rob smiled before gritting his teeth in pain. \n\n\"Hey kid you can't be out here.\" Yellow jacket guy started tugging on my arm. \n\n\"He can stay.\" Came a gruff voice beside me. I looked up and Rob's linebacker's coach nodded solemnly at me and I focused back on Rob. His face was pale and ghastly and my heart and stomach were tangled and twisted in knots. \n\n\"His knee is dislocated and then there's the break.\" The EMTs were attending Rob and I noticed that there was an expanding bloody stain on his football pants near his shin. \n\n\"You're going to be okay Rob.\" I reached for his hand and I saw him reach for mine, but at that moment the medics stood and raised the gurney before they lifted Rob into the ambulance. I followed around to the back of the vehicle ready to climb in after Rob. The driver and one of the medics were already in the ambulance.\n\n\"Family only.\" The remaining medic yelled at me before closing one of the doors. \n\n\"He's my husband!\" I screamed, fighting the tears that threatened to fall.\n\n\"He's your husband?\" The medic repeated, not quite believing his ears. He turned to face the medic inside and I saw her whispering to Rob, but couldn't hear what she said.\n\n\"Let him in.\" She yelled down and the man shrugged his shoulders before letting me in the ambulance.\n\n***Five Years Later***\n\nThe bright morning sun had filtered through my eyelids and I awoke squinting. Rob's robust arm was draped over my chest and I could feel his rhythmic breathing on the side of my neck. The faint, but distinct smells from last night wafted into my nose and I felt my hardness growing from the memories. Glancing right I was greeted by my husband's sleeping face. His face was darkened by a thick, dark stubble and I leaned over and kissed his forehead. Rob snuggled deeper into the pillow, but didn't wake up. I finally drew my gaze away from Rob and let my eyes find the blue LED lights on the alarm clock.\n\n\"Rob!\" I gasped. \"Get up, you cannot be late for your first day.\" Rob scrunched his face and blinked several times before his eyes focused on me. \"You have to be at school in thirty minutes.\" I squeezed his hearty bicep that was draped over my chest. Rob mumbled something unintelligible before leaning in for a quick kiss and rolling out of the bed. I crawled out of bed and felt Rob's seed caked and dry around my hole and unconsciously shook my butt, like a dog shaking the water off. I heard Rob chuckle at me before he disappeared into the bathroom. I slid back into my briefs from last night before I ran into the kitchen and put a few eggs in a skillet to scramble. \n\nI didn't have to be at work for another hour or so, but Rob needed to be at school at or before 7:15. After years of being an assistant football coach, and substitute teaching at our high school, he was hired full time as a PE coach and head football coach after our old coach retired. The hiring caused quite a debate and several of Rob's college coaches came to his defense and spoke of Rob's professionalism and qualifications. Rob had a degree in Kinesiology and was MVP on a National Championship winning football team. Sadly his football career ended early after a severe leg injury, which healed fairly well, but no NFL team took a chance in drafting him because of his injury. Several of the parents demonstrated that they did not want an openly gay man to coach their children, or be in the locker room with their sons. It was a very long and stressful time, but after much debate, and a few concessions Rob was hired. \n\n\"You're going to be late.\" I poked my head into the bathroom and Rob had a towel wrapped around his waist. Water particles still clung to his burly body. His chest hair was matted down and I wanted to drop to my knees right then and there, but he was late as it was. Rob smiled at me around his toothbrush before winking at me and rinsing the toothpaste from his mouth. I headed back to the kitchen and slammed two pieces of toast into the toaster and poured two glasses of orange juice. I had just finished buttering the toast when Rob came into the kitchen. He was dressed in fitted khaki pants and a short sleeve blue polo with the schools crab logo on the breast. \n\n\"Don't have time for eggs.\" Rob hadn't shaved and I felt the sensuous graze of his whiskers as he kissed my cheek and then my lips. He took a sip or orange juice and grimaced as the orange juice collided with the minty fresh toothpaste. He grabbed a piece of toast and held it in his mouth as he hurried out the door. I smiled watching his plump butt walk out the door, turned the burner off before fixing a plate of eggs. \n\n***\n\nMy life had turned out better than I had ever imagined. I never thought all of those years ago that this is how my life would have unfolded, and I couldn't be happier. Thinking about my old life in the hustle and bustle of northern Virginia seems like a foggy memory. My life turned upside down the day I first saw Rob in the convenience store all those years ago. He was still as handsome, kind, and caring as he had ever been. We are renting a small two bedroom farmhouse about 10 minutes outside of town. Last year I was offered, and gladly accepted the branch manager position at our local bank. \n\n\"Mr. Thompson.\" I was brought out of my reminiscing when I heard Tara, one of our tellers knock on my door and I looked up and smiled. \"This was just dropped off at the window, it has your name on it.\"\n\n\"That's weird.\" I stood up and walked to take the envelope from Tara. \"Who was it?\" I asked.\n\n\"Not sure they used the pneumatic tube didn't get a good look.\" She answered.\n\n\"Thanks.\" I shrugged and walked back to my desk as she walked back to the window. One glance at the envelope and I knew exactly who it was from, Rob. I could tell he tried to write neatly and carefully, but it was clearly his penmanship. I smiled and leaned forward over my desk and unsealed the envelope and unfolded the note.\n\n'Happy homecoming Bobby. I figured I shouldn't be the only one with game tonight, so I've arranged a little one for you. It all starts at the place we first met. See you soon -Rob.' \n\nI grinned broadly and folded the note up and put it back in the envelope. I had literally just been thinking of the first time I had seen Rob, I was buying a Dr. Pepper and spotted him through the glass door. The memory sent chills shuddering through my body. I checked my email and voicemail to make sure I didn't have any pending transactions that needed to be finished before the weekend, I didn't. It was only 3:30 and we didn't close until 6:00 tonight, but I had already put in more than my 40 hours for the week. I turned off my computer and light and closed my door.\n\n\"Tara.\" Text me if you need me, I'm heading out.\n\n\"Yes sir Mr. Thompson.\" She smiled and nodded. \n\n\"Have a good weekend.\" I called over my shoulder as I made my way out to my Jeep. I made the quick drive down the road to the gas station and it wasn't until I entered the door that I realized I didn't know what I was supposed to do there. \n\n\"Good afternoon Bobby.\" The lady behind the counter said with a friendly smiled. I had seen her before, but was surprised that she had known my name. \n\n\"Afternoon.\" I repeated and walked over to the drink coolers. I walked over to the one that held Dr. Pepper and I let my eyes explore up and down the case. I'm not sure what I expected to find, a note stuck to the glass, maybe on a bottle. I didn't see anything that called out my name, but I pulled out a cold Dr. Pepper bottle and let the door slam shut with a thud. I took a cursory glance at the other coolers, just to make sure I wasn't missing anything. I started thinking of a way to ask the cashier if someone had left me something, but when I placed the drink on the counter she took it, and instead of ringing it up placed it under the counter.\n\n\"I think you'd rather have this one.\" She said with a grin and handed me another bottle that had a piece of twine tied around the cap and a small rolled up note. \n\n\"Thank you very much.\" I said reaching for my wallet. \n\n\"It's been paid for Bobby.\" Rob had planned this out well.\n\n\"Thanks.\" I smiled and headed out the door and climbed back in my Jeep. The October day was mild and sunny and I noted that the drink was still cold as I untwisted the cap, to take a sip, but as soon as I twisted the cap, a geyser of soda shot out, covering my face, my dress shirt and tie. Thankfully I didn't have on a jacket today. I grumbled some profanities under my breath and took off my tie and wiped my face off with some napkins I had in the center console. I would have taken my dress shirt off, but unfortunately, today I wasn't wearing a T-shirt. I simply couldn't find one this morning, which was bizarre, but I hadn't had time to search. I unbuttoned the collar and tried unsuccessfully to wipe up the drink. I took a sip of the remaining soda before unrolling and reading the note. ",
        "'Well that one was an easy one. You need to stop letting the door slam shut though, it shakes up the drinks. Your next clue is waiting where we had our first kiss.' \n\nIt was in that moment that I realized that Rob had hidden my shirts and either had shaken the drink himself or asked the cashier to do it for him. Rob really thinks he's funny sometimes. I'm not sure how that fit into his plan, but I smiled as I thought about our first kiss. We had been sitting on my parents dock talking when Rob shyly at first, and then hungrily pressed me down into the dock and kissed me. The next thing I knew I was pulling into my parent's driveway. Mom's car was the only one there, dad hadn't gotten home from work, and Emily was away at med school. \n\n\"Back here Bobby!\" I had been walking up to the house to let mom know I was there, but I heard her call from around back. I walked around and gave her a hug. She was sitting at the picnic table, seemingly waiting for me to show up.\n\n\"Guess you're in on this?\" I laughed. \n\n\"I have no idea what you're talking about.\" She winked and I saw her send a message on her phone before she stood up. \"Have fun tonight Bobby.\" She grinned and headed around the house and I walked down to the dock. The water was still as a mirror and reflected a tangerine colored sun. The dock was a little more weathered, a little grayer in color than it was almost ten years ago, but it looked basically the same as it ever had. I glanced what at first I thought was an orange basketball, but as I got closer realized it was a pumpkin sitting near the edge of the dock. He had taken the time to carve out triangle eyes, a nose, and even a familiar goofy grin. I'm sure my grin matched the pumpkins as I remembered the first time we carved a similar pumpkin. Sticking out from under the bottom of the pumpkin was a sliver of paper. \n\n'Sorry I couldn't be there to kiss you this time, but I figured this pumpkin might do. I know a special little place, it's perfect for watching the fireworks.'\n\nI couldn't help but laugh when I read the note. No way was I going to kiss that goofy pumpkin. Rob was going to make me work for this so I headed back to my Jeep and drove to the beach. There was a group of high school kids being loud on the beach. I took off my dress shoes and socks and left them in my car and walked by the teenagers who got quiet as I walked closer. I walked around them and down the beach, trying to find the hidden cove in the dunes and grasses. Finally I spotted it and ducked into the secret spot and squeezed through the undergrowth before I came out in a small clearing. Sticking up out of the sand was a scroll of paper tied with a string of twine. Carefully, I plucked the paper out of the sand and made my way back onto the beach and walked towards the parking lot. The group of kids stared at me suspiciously, I'm sure I did look strange going into the dunes and coming back with a scroll of paper, wearing rolled up slacks and a soda stained dress shirt. I chuckled to myself and climbed barefoot back into my Jeep to read the note. \n\n'Brush off the sand, your journey is almost over. All these years later I still regret not sticking up for you to Eric. Why don't you come now and I can show you how much I love you.'\n\nI had long ago forgiven Rob for that and we had even befriended Eric. We had been in high school. Rob was a football stud. I had foolishly gotten caught staring at him as he changed in the locker room. Eric, who turned out to be gay, had caused a scene, and at the time Rob hadn't defended me, but he has more than made up for it since. Well, it looked like my little scavenger hunt was coming to an end. I started my Jeep and quickly drove to our old high school, where Rob was the PE teacher and football coach. It was a little strange every time I walked back into the school, everything looked a little different. After opening the front door I stopped and I poked my head in the office.\n\n\"Just go on back sugar.\" The secretary smiled. \"When you leave make sure you go out the gym exit, I'm about to lock up here.\"\n\n\"Thanks.\" I called after her, already heading down the hall towards the gym. The students had gone home and the empty halls were decorated for homecoming. The doors to the gym were propped open and I looked through the glass of Rob's office, he wasn't in there so I made my way around to the guy's locker room. It was open and my nose was immediately tickled with the wet, musty, sweaty, men's locker room smell. Rob was in workout clothes sitting on a bench in the back.\n\n\"Hey babe!\" He called. \"Lock the door.\" He winked. I turned around and twisted the latch on the door.\n\nHe was so fucking hot. He was as muscular as ever, his green eyes flickered to life and his grin lit up the dim fluorescent lit locker room. He wrapped me in a hug and lifted me off my feet before he placed me on the ground and gave me a sweet kiss. \n\n\"Hey Robbie.\" I smiled and he patted the stains on my shirt.\n\n\"Looks like I shook it a little too well.\" Rob laughed and started unbuttoning my shirt. \"Come on, you need a shower.\" I shuddered as I felt his gentle, but rough fingers slide across newly exposed stomach. \"No T-shirt?\" Rob's eyebrows lifted and as he watched me, I could tell he was trying not to laugh.\n\n\"You hid them!\" I broke out into a laugh at his smile and unbuttoned and kicked out of my slacks leaving me standing in just a pair of black boxer briefs. \n\n\"Where are your shoes?\"\n\n\"I took them off before I went to the beach, they're in my Jeep.\"\n\n\"Fair enough.\" Rob grinned and pulled his Crabbers Athletic Dept. T-shirt over his head. \n\n\"Fuck.\" I moaned. His body got sexier every day. His round shoulders and toned hairy pecs were joined by a firm stomach that was coasted with a soft brown hair. Then he pulled down his shorts and I don't know what kind of noises I made, but my admiration was broken when Rob laughed at me and I hesitantly drew my attention away from his bulging black jockstrap and gazed into his lusty eyes. \n\n\"Sorry.\" I mumbled, slightly embarrassed.\n\n\"Don't ever get embarrassed Bobby. I think it's so sexy, you're sexy, and when you go into that little lust filled zone-out.\" Rob picked up my hand and kissed the wedding band on my finger. Then he placed my hand on the pouch of his bulging jockstrap, it was straining to contain his long, thick member. \"This is what you do to me babe.\" There was heat radiating off of his bulge and I involuntarily swallowed the saliva that was forming in my mouth. He pulled his jock down and stepped out of it, his cock was standing proudly, engorged and beautiful. I pulled off my underwear and Rob retook my hand before guiding me into the showers. \n\nThe tiled floor felt cool on my feet and I felt first cool, and then warm water rain down on me as Rob guided me under a shower head. He squirted some shampoo in his hands and I felt his warm, firm body press against my back. I felt his rigid member flat against the small of my back, pointing straight up. \n\n\"Robbie.\" I groaned.\n\n\"Close your eyes.\" He whispered in my ear, his lips barely brushing against my skin. I closed my eyes and felt his strong hand massaging shampoo into my scalp. Slowly his hands drifted as he massaged suds into my upper body. \n\n\"Hey watch it buster!\" I squirmed when he started tickling my armpits. He held me still and I felt his cock harden further as he pressed his body even closer to mine. I felt him give three or four slow thrusts with his manhood slowly sliding up and down the small of my back. I leaned my head back on his shoulder and he met me with a kiss. His strong fingers shocked me when he grabbed my own raging erection and give it a slow, soapy pull. He broke the kiss and released my cock. His magic fingers began kneading the muscles in my back before he started to massage my firm ass cheeks. A soapy finger traced a delightful line up and down my trench before gently outlining the circle of my puckered hole. \n\nThe attention was short lived as he made compulsory work out of washing my legs and my feet. He made a weak attempt at tickling my feet, but thankfully he relented. I turned around, pulled him to his feet and kissed him deeply. Our tongues had danced this dance before, but it was always to a different beat, and this one was heady and full of love. He wrapped his arms around me and pulled me closer. Our slick cocks rubbed sensuously together, they were raging hard and trapped between our bodies. I reached back and got a handful of soap with one hand that I rubbed into Rob's back as we performed our erotic shower dance under the small shower head. \n\n\"Let's go to my office.\" Rob whispered before playfully biting my earlobe.\n\n\"Okay coach.\" I answered, grinning. \n\n\"Bobby, may I see you in my office, we need to talk about your performance.\" Rob joked as he turned off the shower and grabbed fresh towels from the bin. \n\n\"My performance.\" I drawled, \"I thought I was eager and excelled at pleasing you.\" Rob tousled my hair with the towel before giving me a quick rub down.\n\n\"That's the problem. You're too good, you distract me and I cannot focus on anything else.\" Rob grinned before drying himself off and tossing the towels in the dirty laundry. \"Come on babe.\" He led me back through the locker-room and we quickly scooped up our discarded clothes and headed into his office.\n\n\"The windows.\" I panicked and held my clothes in front of me. \n\n\"No one will be here for at least another hour.\" Rob laughed and pulled the shades on the windows before locking both of his doors. I sat in his chair and felt the cool leather against my bare ass. Rob jumped onto his desk and cleared a spot before sitting right in front of me on it. \n\n\"Fuck Robbie.\" I cried, his proud cock was inches in front of me and I immediately leaned forward and gobbled it up. Rob moaned and his head fell back while I savored the flavor of his dick in my mouth. It was warm and weighty. Everything about his manhood was perfect. The shape, size, taste, smell, even the veins were sexy. I swallowed until I felt his bush around my lips and sucked hard. I slowly pulled off and licked the underside of his engorged shaft until just his swollen glans was between my lips. \n\n\"Bobby.\" Rob's hands were gripping the desk and I pulled off and licked the sweet pool of pre from his slit. He pushed me back and leaned in for a soul-searing pre filled kiss. His weight pushed my chair back against the wall and he fell between my legs, mouth open he started lapping at my balls, they were tight under my shaft. The heat and wetness of his mouth and tongue had me leaking copious amounts of pre. He greedily licked it up before going back to tonguing my balls. The feel of his lips as they wrapped tightly around my cockhead was glorious. He eagerly began bobbing up and down on my rigid shaft. \n\n\"Robbie.\" I panted as I twisted my fingers in his short hair. \"Fuck me!\" I moaned and felt the rumble, almost a growl, in his throat at the mention. Instantly, he had us both on our feet and turned me around to face his desk. He pushed me against it and my hard bone was trapped, pressed almost achingly down against the desk and his paws were spreading my ass cheeks apart. The next thing I knew his face was buried in my ass and my torso collapsed onto the desk when I felt his magnificent tongue prodding at my wanton hole. Electricity jolted from my muscled ring as his tongue first lapped, and then prodded, working its way deeper into my needy heat.\n\n\"Robbie please.\" I begged, my cock was straining desperately against the desk and I felt a string of pre dangling down that had hit the inside of my leg. One of Rob's hands wrapped tightly around my cock and maneuvered it so he could lick the pre and suck on my blood-filled mushroom tip. I heard something unzip and then a cap pop before liquid coolness was dribbled down my crack. I couldn't help but sigh as a slippery, thick finger primed my desperate hole. \"Rob.\" I gasped. \"Give it to me.\"\n\n\"Fuck Bobby!\" Rob whispered and I felt his swollen mushroom pressed tightly against my tight entrance. I tried to push back to meet him, but he held me down and entered me in one smooth thrust.\n\n\"FUCK!\" I moaned as my body went limp and rigid all at once. My cock lurched against the desk and my lungs emptied of air. My body was tantric as his long, thick manhood slid in and out, deeper and deeper, brushing my p-spot with every thrust. \"Harder, faster.\" I pleaded I was so close and my swollen dick was leaking, leaving a trail of pre against the desk. His arms pushed me down into the desk and he grabbed my hips and began thrusting, pumping his heavenly member into my needy cavern. \"Robbie I'm close.\" I encouraged, but to my dismay he slid out, leaving me feeling hollow, empty. \"Robbie?!\" I begged, pleaded, questioned.\n\n\"Flip over Bobby.\" He ordered and I scrambled to position my back against his desk, I accidently sent his calendar and a cup of pens tumbling to the floor. My dick felt liberated no longer trapped by the desk and stood like a mast in the air, swollen and red. Rob put my legs over his shoulders and held my hips as he reentered me. This was it. This was the best position. I loved seeing my sweaty, handsome husband horny and needy. I needed him just as badly. His genuine, gentle green eyes locked on mine, they were filled with nothing but love as he slowly slid back in. I felt his bush brush against my hole and he leaned down to claim my mouth, just as he had claimed my hole. I wrapped my arms around him and pulled him closer. My swollen shaft was pressed tightly to his washboard stomach. Out mouths were locked and I whimpered when he began to thrust into me, each thrust sending jolts of pleasure inside me, my sensitive shaft begged for just a little more friction between our bodies. \n\n\"You are so sexy Bobby.\" Rob rasped, his voice was heavy, lusty. He pulled back and let my legs fall before sandwiching our bodies together. Rob's engorged glans pegged my prostate in this new position and I urged him on. Pulling him closer, reclaiming his mouth and kissing frantically while he continued to piston his rod into me. The sensations were overwhelming. Rob's mouth sealed against mine, tongues frantically frolicking, his warm, strong, slick, furry buddy rubbing against my sensitive, swollen, slippery cock, his thick, long dick pounding and pleasuring my swollen prostate. \n\n\"Robbie.\" I gasped as my toes curled and eyes closed. My balls tightened, my glans swelled even further and my slit fired a geyser of moist heat between our bodies. Rob leaned back, still thrusting and I felt his lips wrap around my cockhead, sending my overly sensitive dick into overload while he continued pumping my ass, my body shook and tremored with each blast of seed and Rob somehow managed to swallow it while his cock was still buried deep inside of me. I gasped and collapsed back onto the desk and Rob took frantic, erratic, deep thrusts, burying his member completely inside my steamy hole. His lips met mine and I tasted my flavor in his mouth as he made his final jagged thrusts deep inside my gut.\n\n\"Bobby!\" Rob broke the kiss and I felt his body tense, his cock swell, and then blasts of molten heat as volley after volley of seed painted my guts. I'm not sure how long we stayed like that, but our breaths finally calmed. His spent dick reluctantly slid out of my used hole. The scent in the room was thick of sweat and sex. I slowly opened my eyes and saw Rob smiling down at me. His lips met mine and we shared 6 or 7 sweet, short kisses. \n\n\"I need to shower before the game.\" I laughed and Rob picked up his jockstrap and wiped my jizz and our sweat off of my stomach and his. \n\n\"No time, the team will be here in 10 minutes.\" Rob said checking his watch.\n\n\"Rob!\" I gasped, I couldn't sit in the bleachers in the shape I was in.\n\n\"Here I'll get you some fresh clothes.\" Rob said, he was sexy as hell as he walked naked over to a file cabinet and pulled out a new Crabbers Athletic department T-shirt and threw it to me. \n\n\"Have any underwear in there?\" I laughed and Rob got a sneaky glint in his eye. \n\n\"Nope, you're wearing these.\" Rob grinned holding up his black jockstrap that was covered in our sweat and my glistening white jizz.\n\n\"No way buster. I'll just wear my boxer briefs. \n\n\"Nope.\" He grinned and pulled on my underwear. \"These are my lucky underwear, need 'em for the big game.\" \n\n\"Lucky? You've never worn them before.\" \n\n\"Well they worked for you, you got lucky.\" Rob grinned and I couldn't help but laugh. \n\n\"Rob.\" I sighed and he threw me the jockstrap. \"What the hell.\" I shrugged. I held the jockstrap to my nose and an inhaled deeply. \"Fuck.\" I sighed, I could smell our mingled sweat and jizz and I felt my cock twitch. I slid them on.\n\n\"Come here Bobby, you're going to have another adventure tonight.\" Rob said as he rifled through his bag on the floor. I walked over and he turned me around so he was standing behind me and I was again facing the desk. \"Bend over babe.\"\n\n\"We don't have time Robbie.\" I started but I felt his hand on my back as he gently guided me down. \"Fuck.\" He whispered and I felt his tongue exploring my hole, licking out his seed. I moaned before I felt something against my hole. He quickly pushed it into my opened and slick hole. \n\n\"Robbie.\" I felt a shockwave that went through my body and exited my sensitive dick. I reached around and felt base of a butt plug in my ass. \"I cannot sit here for three hours in a sweaty, jizzy jockstrap and a buttplug in my seeded hole.\n\n\"Why not?\" Rob shrugged and grinned. \"Here I'll get you some shorts.\" He went back into his cabinet and threw me a matching pair of gym shorts. \n\n\"You're bad.\" I answered, sliding on the shorts. \n\n\"Love you Bobby.\" Rob said swatting my ass and pulling me in for a kiss, I groaned when I tasted his spunk in my mouth. \n\n\"I love you Rob.\" I answered kissing my husband with everything I had. I knew that his knowing how I was a dressed, and plugged would have him just as eager for me as I was for him. It was certainly going to be an interesting homecoming, and it wouldn't be the last. \n\n*The End*\n\n*****\n\n*Thank you for reading.\n\nI hope you have enjoyed Bait a Hook and Plotting a Course. \n\nPlease let me know your thoughts and comments.\n\nMore stories are on the way. \n\nThanks for your support, it means the world to me!*"
    ],
    "authorname": "VaRiverWriter",
    "tags": [
        "gay",
        "male",
        "plotting a course",
        "bait a hook"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/plotting-a-course-ch-17"
}