{
    "title": "A Family Torn",
    "pages": [
        "Copyright \u00a9 2017\n\n***WARNING***\n\nThis story deals with a very real problem in our society\u2014the sexual abuse of a minor. It in no way glorifies or condones but treats it as the heinous crime that it is. Before even writing this story, I checked with Laurel and made sure I followed the guidelines she provided so please don't go reporting it. If this subject is offensive to you, please take a pass. Thank you. \n\n***\n\n\"Ahhh, son-of-a-b...\" Tom cursed out loud from frustration. Between three days of solid rain and the melting snow, half the streets in Chicago were closed because of flooding. It was like driving through a watery maze just to find his way onto the expressway only to discover his exit was now closed as well. He had no choice but to keep going and hope the next one was passable. \n\nInwardly he told himself to relax. Hell, it wasn't as if he had someone at home waiting for him. So it took him an extra half hour to get home\u2014big deal. It wasn't like his wife had dinner waiting or his daughter was waiting for help with her homework. That life ended almost a year ago for him. Still, he was relieved with the absence of a 'Road Closed' sign as he came up on the next exit. \n\nHe was still choreographing his car through the suburban streets when he heard his phone ringing from his pocket. \"Sorry, you're going to have to wait until I can find my way home through his mess,\" he said. \"Damn, I've got to stop talking to myself,\" he continued. \"People are going to think I'm going bonkers.\" \n\nFinally, he thought, as he pulled into the parking lot of his apartment complex. It had taken him an hour and twenty minutes to make a thirty-five minute drive. He pulled the collar of his coat over his head as he made a mad dash between rain drops, splashing his way to the front door. \n\nHe took off his coat and hung it up. He was tired and exasperated, but most of all depressed. He just wasn't himself these days. Since his divorce things seemed to be drifting slowing down hill. Even his photography business wasn't living up to its potential...not to mention his daughter was getting more and more moody on her bi-weekly visits...almost like she didn't want to be with him anymore. She had a new daddy now and evidently the bastard was winning her over. Out of all the things that had happened over the past year, that was by far the hardest to deal with.\n\nTom was in the middle of eating dinner when he remembered his phone ringing earlier. He pulled it from his pocket and checked the display. It was Angela, his ex. He wasn't about to eat cold fish so he put off calling her back until he was done.\n\nHe rinsed his plate, stuck it in the dishwasher, and poured himself a cup of coffee before getting comfortable in his recliner. He really didn't feel like talking to his ex but she only called on issues concerning their daughter so he knew he had to do it. \n\nShe sounded friendly enough when she answered. \"Hi Tom, thanks for calling back.\"\n\n\"Yeah, no problem. What's the matter?\"\n\nHe heard a small sigh into the phone. He guessed, from the flat tone of his voice, she knew he wasn't interested in small talk and he sure as hell didn't want to talk about the weather. \n\n\"I was wondering if Lana has said anything to you about something troubling her.\"\n\n\"To me? No. She hardly speaks to me at all these days. Whatever you're filling her head with seems to be working, congratulations.\"\n\n\"Tom, what are you talking about? Filling her head with what?\"\n\n\"How should I know with what?\"\n\n\"Tom, okay we've had our differences but you can't believe I'd try to poison our daughter against you.\"\n\n\"Oh come on, Angie, you've got a new husband, she's got a new daddy, I'm just the inconvenient ex-husband; get her to reject me and you can all live as one big happy family with me out of the way.\"\n\n\"Tom, Dayton is not my husband, at least not yet. And you're the only daddy Lana has.\"\n\n\"He's living in the same house, isn't he...sharing your bed?\"\n\nIn the two or three second delay from the other end of the phone he could almost hear her blood-pressure going up. \"Fuck you!\" she yelled before the line went dead. \n\nTom took a sip of coffee and stretched back. About the only fun in life he had anymore was making his ex-wife mad. Did he really think she was trying to poison his little girl against him...maybe. He wasn't sure what she'd do these days. He sure didn't expect her to move someone into the house so soon after he moved out. Nobody falls in love that quickly\u2014unless they had been seeing each other before he even filed for divorce. That would sure explain the lack of sex, her short temper and her always picking fights with him when they were still married. He had absolutely no proof that she was cheating on him, with this guy or anyone else, but it sure seemed logical and it galled him something terrible. \n\nHis mind was churning. I suppose I'll never know the truth, he thought. Oh well, what difference does it make now. She and shithead will soon be happily married and she's moving on with her life...which is what I need to do! \n\nTom closed his eyes and went over the events of the last year in his mind. In the beginning he felt liberated when they split up; no more constant fighting. Of course it would be hard on Lana but he was confident they'd both work hard to make sure she knew they both still loved her very much. \n\nAt first he wasn't too crazy about the divorce settlement, but after he thought about it, he knew it was for the best. She got the bulk of the savings and the house in trade for giving up any claim on the business. What the hell, that way Lana would still be able to go to the same school, have the same friends, and live in the same house she'd lived in all her life. Child support was reasonable... \n\nThings actually didn't seem to be that bad until she moved her boyfriend in. It was hard enough to think of the guy sleeping with his wife in his bed, but becoming a father figure to HIS daughter...that was the kicker that started it all. That's when he started to feel that his whole life was nothing but a waste. That's when he started feeling depressed all the time. \n\nWhat's happened to me? He asked his inner-self. I used to be a confident, take charge kind of guy. I've got to stop laying around feeling sorry for myself. I've got to prove to Lana that I'm still her dad and always will be. \n\nHe thought more of the short conversation he'd just had with Angela. It starts this weekend, he promised himself. If something is bothering Lana it's my job as her dad to find out what it is. \n\nHe had tried a few times over the past several months to raise himself out of his funk but it didn't last. He'd sink right back down every time he wondered what was going on in his former house...with his former family. Okay...maybe his marriage was dead but by God he was still a dad and he made a vow then and there that he was going to start acting like it. Time for mourning was over.\n\nNow...if he could only get the bloody rain to stop!\n\nThat Saturday morning he pulled into his former driveway right on time. At least it had finally stopped raining. Lana looked unenthused as she exited the house and started for the car. \n\nHe rolled the driver's window down. \"Honey, would you ask your mother to come outside for a minute, please. I want to talk to her.\"\n\nShe turned around, opened the front door wide enough to stick her head inside and yelled. \"Mom, dad wants to talk to you.\" With no more fan-fair, Lana walked around the front of the car to the passenger's side and slipped in.\n\n\"How you doing, pumpkin?\" Tom asked with a kiss on her cheek.\n\nA flat, \"Okay,\" was her only response.\n\nThey sat and waited in silence for another minute or so until he saw Angela step outside wearing a coat. He got out of the car and approached her on the porch. \"Listen, I wanted to say I'm sorry for the other night. You caught me in a bad mood.\"\n\nShe acknowledged his apology with nothing more than a slight nod of her head. She was letting him know she was still pissed. \n\n\"So, it sounds like she's acting the same way here as she's been acting with me. Over the last few weekends she's hardly said twenty words to me.\"\n\n\"She seems really depressed lately,\" said Angela, breaking her short-term silent treatment. \"She won't talk, she hardly eats anything. I know she's losing weight, I can see it. I've tried just talking to her about school, friends, just stuff in general, but she refuses to carry on any kind of conversation. After dinner she goes up to her room and stays there. I'm really getting worried, Tom. I haven't seen her smile in weeks.\"\n\n\"She's probably still pissed at us for breaking up. That has to be traumatic for her.\"\n\n\"I don't know. Yeah, she was upset with both of us after you left but she seemed to be dealing with it. All this other stuff started a few months ago.\"\n\n\"Do you think she's getting bullied or something at school?\"\n\n\"I don't know, Tom, but it's not getting any better. If anything she's getting worse.\"\n\n\"Okay, I thought she was just acting that way around me. Let me see if I can find out anything over the weekend. Maybe she'll talk to me.\"\n\n\"I'd appreciate it, thank you. If it continues, I...I don't know; maybe we should take her to counseling or a psychiatrist or something.\"\n\n\"Well, let me see what I can find out first,\" he said. \n\nShe agreed and Tom went back to the car wondering about his little girl. She was only fifteen and she had gone through a lot; first her folks get divorced, then her mom moves her boyfriend in and all of a sudden she has a new dad...yeah, that's a lot for a fifteen year old to handle. \n\n\"Okay, pumpkin,\" he said as he climbed into the driver's seat, \"where do you want to go for breakfast?\" \n\nAll weekend long Tom pumped his daughter, trying to find out what was bothering her, but it was no use. He asked her about school, her girlfriends, a possible boyfriend, her new dad, her mom...she just kept saying everything was alright. \n\nTom dropped her off at the house on Sunday night then called Angela later to inform her of his lack of progress. The concern in her voice was palpable.\n\n\"What do you think? Should we look into counseling for her? I talked to Dayton but...\"\n\n\"You talked to Dayton about our daughter before talking to me?\" \n\nHer fianc\u00e9 was a real sore spot with her ex, she knew it and didn't mean to let her comment slip. \"No, I didn't talk to him before you but he lives here now, Tom. You've got to accept that. He's obviously going to have some influence over what goes on in the house.\" \n\nThere was a pause before Tom spoke again. \"Let me think about the counseling. I'll let you know. And just so you understand--Lana's welfare is our responsibility, yours and mine, not Dayton's.\" With that he severed the call. \n\nHer fianc\u00e9 was sitting in the living room. \"What's his problem now?\" \n\n\"Nothing. I asked him to see if he could talk to Lana this weekend; see if he could find out what's been bothering her, but...\"\n\n\"I told you, she's going through a phase, that's all. Leave the kid alone. She'll snap out of it when she's ready.\"\n\n\"Dayton, she's my daughter. I can't help but worry about her. This is more than some phase.\"\n\n\"Hey, I love her like a daughter too, you know. You don't think I want what's best for her? She's a teenager. They're always going from one crisis to another. Have you forgotten what it was like being that age? I'm telling you, she doesn't need some shrink screwing with her head. She's a good kid. Give her some space. She'll work it out for herself.\"\n\nMaybe he was right, she thought. Angela recalled some of her own rebellious antics at that age. Still...she knew Dayton loved Lana but he wasn't her real dad. It wasn't like he was in the delivery room holding her hand during labor like Tom was. It wasn't his eyes that showed an overwhelming pride when he held his little girl in his arms for the first time. She certainly didn't want to belittle Dayton's love for Lana in anyway, but Tom was right about them being responsible for her well-being. It didn't matter that Dayton was now first in her own life; Tom would always be first when it came to their daughter.\n\nWhen Tom and Angela were married Tom had everyone's health care covered under his photography studio's insurance. When they divorced, Angela had to get her own insurance through her employer but Tom kept Lana on his. On Monday morning Tom checked to see if she'd be covered for psychiatric counseling. The co-pay was $50 a visit but the balance was covered. That was good news. It had been a long, hard winter. Between several jobs being either cancelled or postponed because of weather, the enormous heating bill for the studio, and his child support payments, Tom wasn't exactly living high on the hog. Later that night he called Angela again.\n\nShe and Dayton were in the living room watching TV. Lana was in her room doing homework when the phone rang. She had to get up from the couch and walked over to where the phone was charging on the table. \n\n\"Hi Tom,\" she answered. \n\n\"Hi, Angie. I've been giving some thought to counseling for Lana and I think it's probably a good idea. Did you have anyone in mind?\"\n\n\"Ah, no, not really,\" she said, glancing in Dayton's direction. \"Do...ah...do you think she could just be going through a stage?\"\n\n\"Angie, I have no idea. You're with her a lot more than I am but there's no doubt something is wrong. When I tried talking to her last weekend she wouldn't even look me in the eye. You know yourself, that's not like her. \n\n\"Just a few days ago you were all gun-ho for getting her into counseling. Are you changing your mind?\"\n\n\"No, it's just\u2014well Dayton is pretty sure she's just going through a stage and...\"\n\n\"Screw what Dayton thinks. Is he there? Let me talk to him.\"\n\n\"He is but I don't think that'd be a good idea. No, no I think we should make her see someone.\"\n\nDayton decided to join in the conversation. \"What if she doesn't want to see a shrink? Then what'll you do? You can't force her to go.\"\n\n\"What'd he say?\" Tom asked. He heard Dayton say something but couldn't hear clear enough to tell what it was.\n\n\"He asked what if she won't go,\" replied Angela. \"He has a point, Tom; what if she refuses to go, then what?\"\n\n\"I guess we'll cross that bridge when we come to it. Don't say anything to her yet. Let me do some research, first. I don't want to just pick somebody out of the yellow pages. This is our baby we're talking about. I want to find someone I have confidence in.\"\n\n\"Okay, but don't take too long, will you. I really think the sooner we can get her to see somebody the better it'll be.\"\n\n\"Yeah, okay. Give me two or three days. I'll give you a call back Wednesday night if not sooner, okay?\"\n\n\"Okay. Thanks, Tom.\"\n\nDayton just gave a little sigh and put his arm around her as she reclaimed her seat next to him. He finally spoke when a commercial interrupted the show they were watching. \"I'm telling you, you're making too big a deal over this stuff with Lana. You keep pushing her and it's only going to make things worse. She's a teenager, she's rebelling; the more you push the more she's going to rebel.\" \n\n\"Maybe you're right, Dayton, I don't know. All I know is she's my daughter and I'm going to try and help her as much as I can.\"\n\n\"Okay,\" he cautioned, \"don't say I didn't warn you.\"\n\nNo more was said and Angela left it that way. \n\nTom was doing some research into child psychologists in the Chicago land area. There were quite a few resources on line with helpful information. He narrowed it down to four then called them to ask several question regarding insurance and possible time schedules. \n\nBy the time he called Angela back on Wednesday evening he had two potentials. The next order of business was how to approach their daughter. They decided she would bring Lana over to his condo Saturday morning where they could talk in private. \n\nAngela didn't bother to inform Dayton of their plans. He usually slept in until nine-thirty or ten on Saturdays so she was hoping she and Lana could slip out of the house before he even got up. \n\nThat Friday afternoon their plans became irrelevant. Tom was setting up to photograph a shoe display for one of his clients when his phone rang. He was surprised to see it was Angela calling. She never called him from work. Before he even had a chance to say hello he heard her crying.\n\n\"Angela, what's the matter?\" \n\nShe sniffled a couple times and had to catch her breath. \"Tom, the...the school just called. Th...they found marijuana in Lana's locker.\" \n\nTom felt like someone had hit him with a sledgehammer. From what he'd heard and read about teenagers and drugs, it all made sense now. His wife's voice broke through the fog in his brain.\n\n\"I've got to go over there and pick her up. They want to see both of us on Monday.\" Her voice was breaking from stress as she talked. \"Would...would you be able to make it?\"\n\n\"Of course; just let me know what time to meet you.\"\n\n\"O...okay, thanks. I'll find out when I pick her up. They said she'd be in the principal's office. They're suspending her for three days but they said if they catch her again they'll automatically expel her. Oh God, Tom, I'm so scared,\" she wept. \n\nHe was scared, too...and feeling guilty. Was all this because of the divorce? Maybe if he hadn't filed none of this would be happening. He was also feeling sorry for his ex for the first time in years. The heart-wrenching anguish in her voice was stirring up feelings he though were long gone. He had always been the strong one. He knew her. Emotionally she was a wreck and he found himself wanting to hold her and assure her things would work out. \n\n\"Tom, what is it? Are you okay?\" Cayla, his assistant, saw the concern in his face as he disconnected. \n\n\"That was Angela. They found marijuana in Lana's locker at school. They're suspending her. Angela has to go down to the school and pick her up.\"\n\nIt was easy to see how badly the news of his daughter had shaken him. Cayla offered to do the shoot but if he didn't continue working he'd go insane. \n\nHe and Angela talked a couple times over the weekend. He asked her if Dayton was getting on Lana's case because of the drugs but she said no. In fact, he's pretty much sluffed it off just saying kids will be kids. \n\nThey decided to forget about talking with her on Saturday until after meeting with the school principle. The appointment was arranged for three o'clock Monday afternoon. They both arrived on time and were shown into an office by one of the secretaries who shut the door behind her. A nice looking man, probably in his early fifties, stood up to greet them. A younger, heavy set woman sitting beside him stood as well.\n\n\"Mr. Hayden, Ms. Hayden, thank you for coming,\" he said as he shook both their hands. \"I'm Peter Colfax, the principle here. This is Terry Donahue, the school's social worker. Please, have a seat.\"\n\nAs everyone took their places Mr. Colfax looked at Angela. \"I'm sorry, I know you're divorced. Is it still proper to call you Ms. Hayden?\"\n\n\"Yes, that's fine,\" she replied. \n\n\"Okay,\" he said with a smile. \n\nTom could see the man really didn't like this part of his job. \n\n\"As you know, Lana was found with marijuana in her locker. One of the teachers just happened to be walking by when she was getting her books. These days we're all trained to spot that kind of thing at a glance.\"\n\n\"Did you call the cops?\" Tom asked. \n\n\"No, we didn't. There wasn't enough. In Illinois, it's not a criminal offense unless you're caught with more than ten grams. The little bit that Lana had fell short of that so we didn't have to call in the authorities; however, an automatic suspension of three days is school policy no matter how little the amount.\"\n\nBoth Tom and Angela nodded, showing they understood. \n\n\"Schools don't like to pry into anyone's home life but you have to understand, the welfare of our students is our top priority. Your divorce was hard on Lana as Miss Donahue can attest. Lana spent many hours with her during that time.\"",
        "\"She did?\" questioned a surprised Angela. \"I didn't know that. She never said anything to me.\"\n\n\"Nor to me,\" Tom interjected. \n\n\"It's true,\" said the young social worker. \"Lana blames herself for your divorce. She said when you guys fought it was always about her.\"\n\n\"That's not true,\" Tom said. \"Toward the end there we fought all the time about everything, but I don't remember ever fighting about Lana...\"\n\n\"I do,\" said Angela, cutting him off, \"several times. Remember when I took her shopping and you had a fit over the length of the skirts I bought her?\"\n\nHe was remembering; she could see it in his face. \"There was another time when she wanted to go to some party I didn't want her to go to. I thought you'd back me up but you said she could go.\"\n\n\"Yeah, I remember,\" he shamefully admitted, \"but like I said, we were constantly fighting.\"\n\nMiss Donahue interrupted their conversation. \"Maybe so, but Lana only remembers the fights about her.\"\n\nBoth parents looked uncomfortable. \"There seems to be more though. When your divorce became final we were making headway, but just as she seemed to be accepting the situation she stopped coming to see me. Now the marijuana is a whole new wrinkle.\"\n\n\"There's something else, too,\" said the principle, re-joining the conversation. \n\nMiss Donahue looked at him and Tom got the feeling she knew what he was going to say before he said it. \n\nPrinciple Colfax cleared his throat. \"Lana is exhibiting classic signs of sexual abuse.\"\n\nThat caught them both by surprise. Angela gasped with shock.\n\nColfax continued. \"Unfortunately, we're pretty familiar with this kind of behavior. It happens more than any of us would like to think. We usually find that the abuser is someone who is well-known to the victim, usually someone of authority; a close friend, family member, or even a member of the immediate family,\" he said, glancing in Tom's direction. \n\nTom caught the look and immediately took offense. \"Are you accusing me? You're accusing me of sexually abusing my little girl?\" he yelled. \n\n\"No, no; please, Mr. Hayden, no one is accusing you of anything. I didn't mean to infer anything of the kind. From the way Lana talks about you we've already ruled you out.\" \n\n\"Well who then?\" Tom asked, his voice filled with anger.\n\n\"We don't know,\" said Miss Donahue. \"Over the last couple of months Lana's become unresponsive. She won't talk to me or anyone else. Even her friends are starting to desert her because she just won't talk.\"\n\nTom could think about only one person. \"Dayton,\" he said turning in Angela's direction.\n\n\"Tom, stop it. I know you hate him but Dayton loves Lana. He'd never do anything to hurt her,\" she responded.\n\n\"Who's Dayton?\" queried the principle.\n\n\"He's my fianc\u00e9.\" \n\n\"I see. Has Lana mentioned him?\" he asked Miss Donahue.\n\n\"No, this is the first I've heard of him,\" she answered. \n\n\"He's living there with them,\" Tom volunteered. \"So help me, if he's touched my daughter I'll...\"\n\n\"Please, Mr. Hayden. At this point we have no idea who it is. We're not even one-hundred percent sure it's happening. I said she's displaying the signs but he have no real proof. This Dayton guy could be completely innocent. If she is being molested, heaven forbid, it could even be one of our teachers or someone from the school, we just don't know.\"\n\nAngela tried desperately to hold back unspent tears. \"So what do we do?\" she asked while taking a tissue from her purse. \n\n\"Ms. Hayden, I'm trained in child development but I'm not a psychologist. Lana needs more professional help than I can give her.\"\n\n\"Actually, Angela and I have been talking about sending her to a child psychologist. I did some research and had settled on a Dr. Marietta something...\"\n\n\"Zarkowski?\"\n\n\"Yeah, that's it. Is she good?\"\n\n\"Very,\" Miss Donahue confirmed. \n\nThat made both Angela and Tom happy to hear. What she said next didn't. \n\n\"Mr. and Ms. Hayden, I'm afraid you're looking at some very rough times coming up. There is a fine line between disciplining a child and persecuting them. I know how high your anger and frustration level is about now, but try to not let it determine how you deal with Lana. Try to stay calm and in control of the situation. \n\n\"And one more thing\u2014keep an eye on her. Since she'll be home for the next three school days, is there anyone who can stay with her? Someone you trust. If she is being sexually abused this is a perfect storm for Lana. These are all the factors that can drive a young girl to run away, or...or even worse.\" \n\nAngela and Tom turned to face one another. Angie wiped more tears from her eyes. \"Oh, Tom, what are we going to do? I'm so scared.\" \n\n\"Yeah,\" acknowledged Tom, \"me too. Is anyone with her now?\"\n\n\"Yes, I dropped her off with my folks on the way here.\" \n\nTom took a breath of relief and looked back to Miss Donahue. \"I'll make an appointment with that psychologist as soon as possible. In the meantime, other than keeping an eye on her, any advice, anything we can say or do to let her know we're both there for her?\"\n\n\"Don't tell her, show her. I don't know how amicable your divorce was or how well you two get along but don't let any animosity between you spill over on her.\"\n\nBoth divorced parties agreed they wouldn't allow that to happen and said they would show Lana all the love they possibly could. Angela had a couple of questions on the way out to their cars.\n\n\"Has she ever said anything to you about thinking the divorce being her fault?\"\n\n\"Never,\" he answered.\n\n\"You don't really think I would talk you down to her do you? I would never do that, Tom. After seventeen years as husband and wife I would hope you'd know me better than that.\"\n\nHe gave a little sigh. \"I don't know, Angela. Let's just forget it for now and concentrate on Lana. If you can't stay home with her I'll move some things around in the schedule.\" \n\n\"No,\" she said, shaking her head, \"no, I'll take time off and stay with her. You're so angry over the thought of someone molesting her I'm afraid she'll feel that anger and think it's against her.\"\n\n\"You're not angry?\" \n\n\"Yes, of course I am, but I can control it better than you can.\" \n\nTom thought about it. \"You're probably right. Okay, but if you need me for anything, call me. Don't leave her alone, Angie...and since we don't know for sure, please don't leave her alone with Dayton. In fact, don't say anything to him. Just in case\u2014we wouldn't want to tip him off.\"\n\nShe sighed at the thought of Tom still suspecting Dayton but relinquished, \"Okay, I promise, but you're wrong about him, Tom.\" \n\nOn the way home, Tom thought about the meeting and what was said. Yeah, it was only marijuana, but as a parent it was still very troubling. He'd heard horror stories about out of control and troubled teens. Lana was always such a good child, he never thought she would be one of them. She'd always been like her mother. The woman he married, not the woman he divorced. \n\nHe thought back to those young, carefree days of dating Angela. His heart started to pump harder as he remembered how much he loved her back then. From the moment he saw her...no, actually it was from the moment he heard her, it was her laugh that caught his attention. She laughed so easily. There was nothing phony or pretentious or forced about it. It was genuine and came from her soul. \n\nAt the time he was working as an assistant for Raphael, a very successful commercial photographer. Tom was learning more in a week with Raphael than he did in a semester at college. The only problem was Raphael was a jackass! Personally, he didn't like the man at all, so two or three times a week he'd stop by Plato's after work to let out his frustrations over a beer. \n\nTom smiled as he thought about the forces of fate. Angela was working for a firm in the area and it just so happened, she and some of her co-workers stopped in one night for an impromptu party. Tom hadn't paid much attention to the rowdy crowd until he heard that laugh. \n\nJust think, he contemplated, if I hadn't stopped in that night I probably would never have met her. That was almost eighteen years in the past and yet it was as fresh in his mind as if it had been yesterday. \n\nWhy do people have to change? He wondered. I did everything I could to make her happy but it never seemed to be enough. As the years wore on, Angela's metamorphosis took her from the happy, loving wife he married to the discontented shrew he divorced. What did I do wrong? He questioned.\n\nAngela pulled into her parent's drive more worried now than when she left just a couple of hours before. She took a tissue from her purse and wiped the tears from her eyes before going in. \n\nHer dad was sitting in his recliner watching TV. She looked around and didn't see or hear Lana anywhere. Panic started to set in. \n\n\"Dad, where's Lana?\" she anxiously asked.\n\nHer dad recognized the concern in her voice and looked up to see the same concern in her face. \"She's helping your mother with dinner,\" he replied. \"What's going on?\" Not knowing the entire situation, he was confused with his daughter's fear. \n\nAngela looked in through the kitchen doorway just in time to see her daughter cross by on the way to the refrigerator and gave a sigh of relief. \n\n\"Angela, what's the matter?\" queried her dad as he turned the volume down on the boob-tube. \n\nShe sat down on a chair beside him and checked to make sure they wouldn't be overheard. \"Dad, Lana's been seeing a social worker at the school. Evidently the divorce has been bothering her a lot more than she's been letting on. I know you guys are wondering why she's not in school today. She was suspended for three days for having marijuana in her locker...\"\n\n\"Marijuana...\"\n\n\"Shhhhh, dad, don't say anything. I think she's embarrassed enough as it is. It was a very small amount. The school's not even calling the cops, thank God; but she can't go back to school until Thursday.\"\n\n\"Oh honey,\" he said, putting his arm around her, \"you must be sick with worry. Is there anything me or your mother can do?\"\n\nAngela wiped another tear from her eye. \"Just show her all the love you can when she's here, I guess. For now that seems to be all that any of us can do. At the school they told us to keep an eye on her so she doesn't run away or hurt herself. That's why I got scared when I didn't see her right away. She doesn't know it yet but Tom found a child psychologist for her.\"\n\n\"Yeah,\" he said, nodding his head. \"That's probably a good idea.\" \n\n\"There's...there's something else, too, Dad. Don't tell mom, and whatever you do, don't say anything to Lana but the social worker thinks she's being sexually abused.\" \n\nThis time his voice was full of anger. \"What? By who?\"\n\n\"We don't know. They're not even one hundred percent sure but they said she's showing all the classic signs.\"\n\n\"Does Tom know this?\"\n\n\"Yeah, he was at the school with me, just now. Of course the first person he suspects is Dayton but he'd never touch Lana, not that way.\"\n\n\"Are you sure, Angela? Look, your mother and I are in your corner, you know that. You're our daughter and we will always support you, but I have to tell you, honey, I never cared for him.\"\n\n\"Dad, he was there when I needed him. When Tom filed for divorce it almost killed me. I know we had our problems and were fighting a lot but I didn't realize Tom was ready to just call it quits. Dayton saw how much I was hurting and gave me a shoulder to cry on. He took me out places and got my mind off the divorce for a while. He was sweet and kind and made me laugh. He understood what I was going through. All of a sudden I was a single mom. I was terrified but it seemed like every time I'd hit rock bottom he was there to pick me up again.\"\n\nHer dad took a deep breath and let it out slowly. \"Well, you know him a lot better than I do, honey, and I trust your judgement.\"\n\n\"Thanks, Dad,\" she said. \n\nAfter the conversation with her dad, Angela wandered into the kitchen to see if she could help with anything. It was understood she and Lana would stay for dinner so she started setting the dining room table. As she was getting the silverware she overheard a humorous exchange between her mother and Lana. She looked over and saw a broad grin stretching across her daughter's pretty face. It was the first time she'd seen her smile in ages.\n\nLater that night, on the way home, Angela had hoped her daughter's good mood would continue. Maybe she could get a conversation going with her, but it wasn't to be. As soon as they got in the car Lana clammed up again. \n\nFor about the millionth time in the last year, Angela wished Tom was there. Over the years she had learned to depend on him; to lean on his wisdom and character. As many times as she looked back at everything that had happened in their marriage, she still couldn't believe it was over. \n\nEven in the wake of all the fighting, I still loved him, she silently admitted to herself. Why, why couldn't he still love me? For the fourth time since that afternoon, Angela wiped tears from her eyes. \n\nLana didn't stick around and took off upstairs to her room as soon as they walked in the house.\n\nDayton was on the couch watching TV when they walked in. \"How'd it go?\"\n\nAngela remembered her promise to Tom. She reminded herself not to say anything about her possibly being molested. She wanted to make sure Lana couldn't hear her so she waited while hanging her coat up in the closet before walking into the living room to answer. \"They're concerned. A social worker was there. Lana's been talking to her about the divorce.\"\n\n\"A social worker...what did she tell her?\"\n\n\"Lana blames herself for the divorce.\"\n\n\"From what I've heard that's normal. Kids always blame themselves when their parents get divorced. Was Tom there?\"\n\n\"Yes, of course. He's her father. The school requested he be there as well.\"\n\n\"What did he say?\"\n\n\"He sat there and listened, the same as me. You seem to be the only one who's not concerned, Dayton.\"\n\n\"Honey, it's not that I'm not concerned, I just think you're all blowing this out of proportion. Lana's a smart kid. She's got a head on her shoulders. She's manipulating you. She maybe blaming herself but she's doing this to punish you and Tom and you guys are playing right into her hands.\"\n\n\"I thought you said it was a phase.\"\n\n\"It is a phase, a self-induced phase. She's pissed, Honey, and the more you guys pressure her, the more pissed she's going to get,\" he told her.\n\n\"I don't believe that, Dayton, but if it's true then fine. Sooner or later, just like you say, she'll get tired of the game and go back to normal, but in the meantime we're going to err of the side caution. We're taking her to therapy.\"\n\nHe was alone in his quest to save Lana from a shrink. It was a losing battle and he knew it. He decided to yield. He gave her the smile that she always found so irresistible. \"Come on over here,\" he said, patting his hand on the couch next to him.\n\nAngela sat down and snuggled up as he put his arm around her. \"I'm sorry, honey,\" she told him. \"I'm just worried about her.\"\n\n\"I know you are,\" he said, supportively. \n\n\"Did you have anything to eat? Lana and I eat at my mother's but I'll fix you something if you're hungry.\"\n\n\"Nah, I'm fine,\" he replied. \"I figured you wouldn't be home right away so I stopped at that little bar around the corner and had some hot wings with a beer.\" Dayton reached over and lightly pulled her chin around to face him. The worry behind her blue, watery eyes was intense. \"Hey, everything is going to be alright,\" he told her. \n\nAngela smiled. He was always so comforting. What would she do without him, she wondered as she laid her head on his shoulder? \n\n***\n\nTry as he did, Tom didn't get a wink of sleep that night. First thing the following morning he would call the psychologist's office and book the earliest appointment possible, but this was his daughter, his little girl; it was his job to protect her and he wasn't about to stand around while some pedophile molested her. \n\nIf he could only get her to talk. Why...why wouldn't she talk to him? Why would she keep this kind of a secret? Why wouldn't she turn the guy in immediately...embarrassment; guilt; fear? He was certainly no expert but he knew that, ludicrous as it sounded, some people who were raped felt it was their own fault somehow. Whatever her reasons were, Tom was going to get to the bottom of it. He was going to find out who was hurting his little girl, and then...\n\nAt nine-o-one the following morning Tom was in the back office of his studio and already on the phone with Cathy, Dr. Zarkowski's secretary. After explaining the situation, she told him the doctor would most likely want to see the two parents before seeing Lana. Tom wasn't too please with that because it meant delaying the appointment for the person who really need it, but when she explained it would help Dr. Zarkowski understand the situation better, he agreed and gave her his ex's phone number so they could coordinate the date and time of the appointment. As they finished their conversation, Cathy said she'd call him back as soon as she talked to Angela. \n\nHe felt so helpless...so damned helpless, and it was tearing him up inside. His child, his only child was being tortured in a most horrific way and he was powerless to defend her. \n\nTom's mind took him back to when Lana was just three years old and clung to him for protection during a bad thunderstorm. He could still feel her little body tremble with fear as lightening lit up the night sky with the roar of canon fire. He couldn't imagine a greater feeling than he had that night as she found comfort and courage in her daddy's arms. She had always looked to him as her champion\u2014why not now?\n\n\"Damn, damn, DAMN!\" he screamed at the top of his lungs. Tears flowed from his eyes as he pounded on the desk in gut-wrenching torment. \"Why can't she come to me now, why? I'm still her father, damn it.\"\n\nCayla was in the front of the studio and came rushing into the back office after hearing the commotion. \"Tom, what's the matter? Are you okay?\" \n\nCayla had been with him for a little over three years. She was his girl-Friday. She helped with wardrobe, set design, setting up lights, first draft editing, and more. She watched him suffer through a troubled marriage and an even more troubling divorce. She was probably the only person he could trust with the terrible secret.\n\n\"The social worker at my daughter's school thinks someone's molesting her, Cayla,\" he cried. \n\n\"Oh my God,\" she spoke with genuine concern. \"Who? Do they know who?\"\n\n\"No,\" he replied, shaking his head. \"She won't talk to anyone, not even me. I don't know if she's scared or feels ashamed...\" he let his words hang.\n\n\"Oh, Tom, I'm so sorry; My God.\" She put her hand gently on the back of his shoulder to comfort him. \"I could try talking to her. Do you think she'd talk to me?\"\n\n\"I doubt it,\" he replied, shaking his head. \n\n\"What about a police woman? Maybe if she talked to someone like that,\" offered Cayla.\n\n\"I don't know. A cop might be more intimating than anything; besides, if it's true I don't want to scare him off. I want to make sure she's protected but I also want the son-of-a-bitch. I want him caught and prosecuted. I want him to spend the rest of his miserable, fucking life behind bars being raped himself every fucking day,\" he wailed. \n\n\"We're going to send her to a child psychologist. That's what the school recommends. I'm hoping she'll be able to talk Lana into giving up the guy's name; then she can report him to the cops. I...I don't know what else to do,\" he told her. I feel so helpless. It's so damned hard to just sit here doing nothing.\"\n\n\"You're not doing nothing, Tom. You're getting Lana the help she needs. That's not nothing.\"\n\n\"I know, but she's my little girl, Cayla. It just doesn't seem like enough.\"",
        "Cayla remembered something she thought might help. \"Ah...a couple years ago my girlfriend caught her boyfriend cheating on her by cloning his phone. What about doing something like that. Does she have her own phone?\"\n\n\"Yes, of course she does. What do mean cloning...like being able to listen in on her calls and seeing her text messages?\"\n\n\"Yeah, I'm not sure how you feel about spying on your daughter but it sure worked for my friend, Amy.\"\n\nYeah, I'm not crazy about spying on her, that's for sure, but if it works it'd be worth it. How did she learn to clone his phone?\"\n\n\"She looked it up on the internet. I'm not sure how you do it but I think you need another phone or something. I could ask her to call you. I'm sure she could tell you how to do it.\"\n\n\"That's not a bad idea, Cayla. Yeah\u2014even if she won't talk to us maybe she talks to a friend or maybe even the son-of-a-bitch himself keeps in touch with her...yeah, I like that. Would you have your friend call me?\"\n\n\"Sure thing, Tom, I'll give her a call right now.\"\n\nWhile waiting to talk to Cayla's friend, the doctor's office called back. He confirmed an appointment for the following Wednesday afternoon. He was blocking the time out in his calendar when Cayla came back into the office and handed her phone to him.\n\n\"You'll have to take it off of mute,\" she said. \"I didn't tell her the circumstances, only that you needed to clone someone's phone.\"\n\nHe thanked her as he tapped the mute button and spoke. \"Hi, Amy.\"\n\n\"Hi, Tom. Cayla says you need to clone somebody's phone. You do know it's illegal, right?\"\n\n\"Well, in this case it's my own phone so I think I'm okay in that respect.\"\n\n\"Oh,\" she said, thinking for a second, \"I honestly don't know for sure but I don't see how they could get you for cloning your own phone. Okay, the hardest thing for me was figuring out how to get a hold of my boyfriend's phone but it doesn't sound like that's a problem for you.\" \n\nHe didn't say anything but, yeah, that was going to be a definite problem. Like most girls her age, Lana always had her phone with her. Hell, she never let it out of her sight. He listened to Amy intently. He took notes and wrote down the name of the software she told him about. After hanging up, his biggest problem was how to get his daughter's phone without her knowing about it...impossible, he thought. \n\nThe rest of the day was spent getting ready for an advertising shoot he had coming up on Tuesday but his dilemma was never completely free from his mind. He still hadn't figured anything out as he crawled into bed that night. He remembered what his dad used to tell him, \"Don't overthink a problem. Break it down to the basics. Usually the best answer is the simplest answer.\"\n\nAfter a couple hours of tossing and turning, Tom finally decided he needed some sleep. He closed his eyes, cleared his mind, and started to drift off. Just as he was about to slip into unconsciousness, it hit him. He opened his eyes and smiled. It was so simple, \"Thanks, dad.\" \n\nThe next morning, after three attempts and almost two hours of aggravation, Tom finally reached an actual person in the customer service department of his cell provider. It took a little persuading but after threatening to change companies, he eventually got them to comply with his request. \n\nEven though nothing had come to pass yet, Tom felt that he was at least doing something; something he hoped would ultimately help his daughter. With only an hour left before his client showed up, he could now at least concentrate on his work.\n\nThe following day both Tom and Angela were a little nervous meeting Dr. Zarkowski. Her assistant, Cathy, met them in the outer office, took them inside, and introduced them all before offering coffee. It was all done friendly but very professionally. Once Tom and Angela were seated with coffee in hand, Dr. Zarkowski started things off.\n\n\"Thank you for coming in. I always like to talk to the parents before starting therapy with a child. It helps me get some perspective. I know you're divorced from one another so is it okay to call you mister and Ms. Hayden?\"\n\n\"Yes, of course,\" Angela answered. \n\n\"Okay, thank you. I've been in touch with Ms. Donahue from the school and she informed me of the problems with which Lana is struggling. You know, of course, that they suspect she is also being sexually molested. Under Illinois law, in the case of a minor, I can report a crime to the authorities. Believe it or not, that's not the case with all states, although it certainly should be.\n\n\"Ms. Hayden, I understand your fianc\u00e9 lives with you and Lana. How does he interact with her?\"\n\nAngela wasn't ready to be put on the spot. She had to be careful how to phrase things with Tom in the room. \"Well, he understands Tom is her dad and he respects that relationship, but he also understands that he will be the head of the household.\"\n\nThe doctor gave a small sigh. The school counselor had already clued her in as far as the problems they had with each other and knew exactly why Angela answered like she did. \"Mr. and Ms. Hayden, if I am going to help your daughter I need both of you to act like adults. Mr. Hayden, I know how hard it is to think of another man being an authority figure in your daughter's life, believe me. But not accepting the situation is not going to help Lana. It will be a detriment. She knows how stressed out you are. Believe me, kids pick up on that kind of thing real quick and it only adds to her own stress.\"\n\n\"I don't like him living there,\" he told her. \"She had no right moving someone into the house so quickly. I don't believe anyone can fall in love that fast unless...\"\n\n\"Unless, what, Mr. Hayden?\"\n\n\"I've got no proof but unless she was already sleeping with him when we were still married.\"\n\nThat brought a gasp from his ex. \"Jesus, Tom, what's wrong with you? First you accuse me of poisoning our daughters mind against you and now you're accusing me of having an affair?\"\n\n\"Angela, living with you the last couple of years was like living with a stranger. I honestly have no idea if you're capable of those things or not, anymore. How could you possibly fall in love with somebody that quickly and move him in the house like that?\"\n\n\"Tom,\" she responded with tears welling up, \"you have no idea how devastated I was when you moved out. I cried continually, at home and at work. Dayton helped me forget my troubles for a while. He took me out for lunch and a couple of times for dinner but he was always a gentleman. He supported me and helped me. When he told me he was going to look around for a new apartment I thought how nice it would be to have a man around the house...as a border, nothing else. He moved into the spare room. He helped with the housework and the lawn AND paid me room and board...\"\n\n\"Then how did he wind up your fianc\u00e9?\" Tom asked. \n\n\"He...he...it had been several months...I have needs like any other woman. At first we'd make sure Lana was asleep then he'd sneak into my bed. After a while... \" She stopped talking and looked toward the doctor, \"I thought we were here to talk about Lana, not air out our dirty laundry,\" she said, a little aggravated. \n\n\"Yes, that true, but I wanted to get a sense of what Lana's been dealing with,\" responded Dr. Zarkowski as she wrote a few notes on a yellow pad lying on her desk.\n\n\"Now, without being afraid of making Mr. Hayden angry, tell me again how Lana and Dayton get alone.\"\n\n\"Okay, I guess. She pretty much avoids him when she can. At first he tried hard to make her like him but lately I think he's just decided to let nature take its course.\"\n\n\"I see. Does she ever talk about him; have any complaints...anything?\"\n\n\"No, not really. Lately she hasn't done much talking about anything,\" answered Angela.\n\n\"What about you, Mr. Hayden, has your daughter expressed any dislikes or concerns about Dayton to you?\"\n\n\"Ah-well, I got the impression she didn't like him very much when he first moved in. I didn't know he was sleeping in the guest room,\" he mentioned, glancing at his ex then back to the doctor. \"I just figured they were sleeping together from the start. Lana didn't say anything and I wasn't about to ask her.\"\n\nFor the next forty-five minutes the doctor asked a lot of questions and took a lot of notes. She had some advice for the couple as the session closed. \"Mr. and Ms. Hayden, thank you for coming. From listen to the two of you it's not hard to see and feel the great amount of animosity you both have toward each other. You both seem like good, loving parents and yet you've been totally unaware of how your constant fighting has affected your daughter. I would like to suggest couples counseling...\"\n\n\"coup... isn't it a little late for that, doctor? I mean, don't people usually do that before the divorce?\"\n\n\"Yes, that's true, Mr. Hayden; however, this would not be for your benefit but for Lana's. There were times during our discussion when the tension was so thick in this room you could cut it with a knife. If I, a complete stranger could feel it, imagine the atmosphere it creates for your daughter.\"\n\nTom looked over to his ex. She was visibly shaken from the frank discussions of the past hour concerning both their daughter AND their marriage. She was wiping her eyes again. \"I don't know. What do you think?\" he asked.\n\nSecretly Angela welcomed the doctor's idea. Even if they were divorced she'd never stop loving him and knowing the way he felt about her now was very hurtful. Maybe with some therapy they could at least become friends again. She didn't want to sound too enthusiastic for fear of scaring him off. \"If it helps Lana I think we should do it,\" she countered.\n\nTom turned back to Dr. Zarkowski. \"I guess we could do that,\" he said. \"Maybe it would help if we just cleared the air about a few things. Do you have any recommendations for somebody?\" \n\nShe grabbed a small note pad from the corner of her desk and wrote down three names. \"Here, give this to Cathy on the way out and ask her for their business cards,\" she said, handing the paper to Tom. She stood up and walked around the front of her desk to shake their hands and thank them again for coming in. \"I hope I wasn't too hard on you but it's imperative that I have as much information as possible if I'm going to help Lana,\" she told them. \n\nThey both said they understood. On the way out they got the cards from Cathy and confirmed Lana's first appointment at three-thirty the following Friday. \n\n\"How do we approach Lana about coming here,\" Angela asked as they reached the parking lot.\n\n\"Yeah, I was wondering the same thing.\" He glanced at his watch. \"School's letting out right now; you got someone picking her up? Please don't tell me Dayton's getting her.\"\n\n\"No, Tom, he's at work. Mom's picking her up for me.\" \n\n\"Okay, good,\" he said, thinking for a minute. \"I haven't seen your mom in a while. I suppose she's pissed at me. Do you think she'd mind if I went over there with you. I won't stay. I just thought it might be a good opportunity for you and me to talk to Lana together.\"\n\n\"I think mom would be happy to see you,\" she answered with a smile. \n\nThey got in their cars and drove over. Angela was right. Her mother, Eileen, treated Tom like a long lost son-in-law. Even Lana cracked a small smile when she saw her parents walk in together. \n\nIn spite of the warm reception, Tom was uneasy at first. He had always felt so at-home at his in-law's but now it was all different. Before he was considered family, he belonged. Now he was just a guest. It was a lonely sensation. \n\nHe accepted his ex-mother-in-law's offer for coffee and the three of them sat at the kitchen table while Lana worked on her homework in the living room. The conversation was kept light with no mention of anything having to do with marital problems. After a few minutes, Tom lowered his voice and told Eileen why they were both there, then looked at Angela. \"What do you say? Shall we go talk to her?\"\n\nNeither one of them were looking forward to it and neither had figured out what they'd do or say if she flat out refused to go but they couldn't put it off any longer. Eileen stayed in the kitchen as they walked out and took a seat on the sofa on opposite sides of their daughter. Tom started...\n\n\"History huh? That was always one of my favorite subjects.\"\n\n\"I know, dad. You've told me that before,\" she said, not even looking up from her book.\n\n\"Honey, can you put that down for a minute. You're mother and I have something we want to discuss with you.\"\n\nLana bent the corner of the page then closed the book with a small sigh and laid it down on the coffee table. Without saying a word she looked at her dad.\n\n\"Honey, your mom and I are very concerned for you. We know how devastating our divorce must be for you and...\"\n\n\"How would know?\" she asked, cutting him off in mid-sentence. \"Your parents are still together. So are yours,\" she said, turning and looking at her mother. \n\nAngela took her daughter's hand and squeezed it with affection. \"We can see the pain in your eyes, honey. We can hear the hurt and anger in your voice.\"\n\nTom picked up the conversation again. \"Honey, we can't stand to see you hurting like this. Unfortunately, since we're the cause of your pain, we're the last ones capable of helping you. We know that you've been talking to Ms. Donahue at the school. She thought your conversations were helping but suggested we take you to see someone with more experience\u2014a regular therapist.\"\n\n\"What--like a psychiatrist? I'm not crazy,\" she exclaimed. \n\n\"Honey,\" said Angela, taking over. \"No one is saying you're crazy. She's not a psychiatrist, she's a psychologist, there's a difference. Your dad and I just came from talking to her and she's really nice.\"\n\n\"Honey, you know yourself from discussions with your social worker, sometimes just talking to someone can make you feel better. You obviously can't talk to either of us and Ms. Donahue really thinks someone who is better trained could help you more than she can,\" added Tom. \"Honey, you can pour out your feelings, your anger, and your frustrations to her and not be afraid of being judged in any way. You said we can't understand how you feel and you're right, but she's trained to understand, honey. \"\n\nLana didn't say anything but just stared down at her shoes. She had actually been forewarned that her folks might do this. Inwardly she welcomed the help but she was scared. She'd have to be so guarded to make sure she didn't slip up. Would this psychologist pry her darkest secrets from her? She couldn't let that happen. She worked hard to keep the tears away as she wondered what to do. \"I don't want to go,\" she said. \n\n\"Honey, listen to me,\" pleaded Tom. \"Just because your mom and I are no longer married doesn't mean we're not still family. She will always be your mom. I will always be your dad and we will always be connected through you. It's been tough on all of us but your mother and I are going to go to couples counseling so...\"\n\n\"You are? Does that mean you're going to get back together?\" \n\n\"No, honey, I'm sorry but we can't go back to the way things were. Your mother has someone else in her life now and I've got to move on as well, but with help I think we can make things better than they are now...for all of us.\"\n\n\"Lana, your dad and I want to make our situation better. We don't like always being mad at each other and...\"\n\n\"Could have fooled me,\" mumbled Lana.\n\nAngela ignored the sarcasm and went on. \"...and going to a professional therapist will help us deal with our feelings, but the only way it will help is if we're all willing to put in extra effort. Please, honey, we need you with us on this or it won't work.\"\n\nShe felt trapped. What could she say? If she refused to go it was like telling her parents she didn't care--and she did care; but it was dangerous. He wasn't going to like it. He'd be mad. She couldn't hold them back any longer. Her fear brought tears to her eyes, tears that Tom and Angela misconstrued as sadness. They both wrapped their arms around her. \n\n\"Honey, I'm so sorry this is hurting you so badly,\" Tom said. \"Please, honey, her name is Dr. Zarkowski. I think you'll like her. Will you give it a shot, honey...please?\"\n\nLana had nowhere to go. If she said no they'd probably start fighting about it and wind up making her go anyway. She would just have to assure him that she won't say anything. \"Okay,\" she said with a faint voice, \"but only as long as you guys go to therapy too.\"\n\n\"Deal,\" Tom agreed with a smile. \n\nLater that night Lana was alone in her room when her phone buzzed with a text message. Her heart started to pound with fear as she answered.\n\nUnknown caller: What happened?\n\nLana: They are making me go.\n\nUnknown caller: You should have said no. Remember what I told you.\n\nLana: I couldn't. They were going to make me go no matter what I said. I won't say anything, I promise.\n\nUnknown caller: You better not.\n\n***\n\nAngela was downstairs trying to determine just how she was going to tell Dayton about the therapy sessions with her ex. He thought they were a waste of time for Lana, she could just imagine what he was going to think about her going with Tom. She was pretty sure he wasn't going to like it. \"Honey, got few minutes to talk?\"\n\n\"Of course, what's up?\" He took off his reading glasses and laid them on the coffee table along with paperback he was reading. \n\nAngela sat next to him on the couch. \"Ah, well, you know I went to see Lana's psychologist today.\"\n\n\"Yeah, I'm sorry. I meant to ask how that went but it slipped my mind. Did Tom behave himself?\"\n\n\"Somewhat,\" she replied with a small chuckle. \"Her name is Zarkowski. She asked a lot of questions about Lana and about the divorce and things. Tom is still pretty mad and he let it show a few times during the interview.\"\n\n\"Good old Tom. You'd think he'd be over it by now, wouldn't you,\" Dayton commented. \n\n\"Yeah, I'm hoping he'll lose some of that anger now. I think what made him so mad is that he thought I was cheating on him when we were still married.\"\n\n\"Cheating...with whom?\"\n\nShe poked him in the chest with her finger.\n\n\"With me? He thought you and I were sleeping together when you were still married? Why? What'd you do to give him that impression?\"\n\n\"I didn't do anything, but think about it, honey, you moved in only about a month after he moved out. He had no idea you were sleeping in the guest room.\"\n\n\"Certainly Lana told him.\"\n\n\"Evidently not,\" countered Angela, \"and I doubt he would ask her. I mean, how do you ask your daughter if her mother is sleeping with the guy who just moved in?\"\n\n\"Yeah,\" he snickered. \"I see your point.\"\n\n\"Anyway,\" she said, getting back to her main topic, \"the psychologist suggested that Tom and I go for couple's counseling.\"\n\nThat caught Dayton's attention. He twisted around so he could look Angela straight in the eye. \"I hope you said no.\"\n\n\"Dayton, it's not actually for us, it's more for Lana. Dr. Zarkowski said the animosity that Tom and I have for each other is hurting her. If we can learn to get a long a little better it'll take some of the strain away from her.\"\n\nDayton jumped up and started pacing back and forth in front of the couch. \"This is ridiculous, Angie. We're getting married soon and you're going to go to couple's therapy with your ex-husband. This whole thing stinks. I'm telling you, kids do things for attention and the more attention you give them the worse they get.\" \n\n\"Dayton, what she says makes sense. We're not going to reconcile, only\n\nclear the air so we can at least be civil to each other...for Lana's sake.\"\n\n\"Yeah; and what if, after all the counseling sessions, Tom wants to get back together, what then?\"\n\n\"Dayton, I love you,\" she assured him. \"First of all I can't picture Tom ever wanting me back. Jesus, just getting him to say hi to me without including the word, 'bitch' would be a major breakthrough. And even if, by some miracle he did want to get back together, it's too late, honey. I have you now, and there's no way I'm giving you up,\" she told him with a big smile. ",
        "Angela stood and put both arms around Dayton's neck. She looked into his eyes and closed in so their lips could touch. Their tongues danced in harmony. She felt his growing erection pressing against her stomach and reached down to undo his belt. She slid her hand down the inside of his underwear and felt the steel-like phallus with her fingers. \n\n\"What do we have here?\" she teased. \n\n\"It's a present. You wear it right down...HERE.\"\n\nAngela shrieked as he grabbed her pussy to demonstrate. \n\nWithin moments they were both naked. Dayton never was the gentle lover that her ex was. He was much more aggressive but he had great stamina and he never failed to get her off at least once and sometimes more.\n\n\"I'm not sure Lana's asleep yet so we have to be quiet,\" warned Angela.\n\nHe turned her away and leaned her over the back of the couch. Angela closed her eyes and leaned her head back as her fianc\u00e9 worked a finger inside her warm, moist opening. \n\n\"Oh yeeeaah,\" she moaned.\n\nWhen she was ready, Dayton replaced his finger with his cock. Slowly he stroked in and out of his woman. Angela's nails dug into the fabric of the sofa and tried to stifle her cries of ecstasy. \n\nDayton slowed just long enough for her to resume a rhythm then started again, this time with more force. Angela felt her breasts being pushed against the rough material as Dayton pounded her pussy. \n\n\"Oh, oh, oh God,\" she cried again and again with every thrust. She could feel him picking up speed and knew he was getting close. In sync, they each reached their climax with a synchronization of grunts, shrieks, and moans. \n\nDayton collapsed across her back, pushing her boobs harder into the back of couch while they both fought to regain some normalcy to their ragged breathing. \n\n\"Do you think she heard us,\" Angela asked. \n\nDayton just smiled. \"Come on, let's go to bed,\" he replied. \"I'll make sure the door is closed.\" \n\nThe next day Angela called the school and made arrangements to pick Lana up half an hour early every Friday so they could make her therapy sessions on time. Friday afternoon she was surprised when they pulled into the doctor's parking lot and saw Tom waiting for them. Lana was scared about talking to a therapist. Her dad was a comforting sight. She wrapped her arms around his waist and squeezed. It was the first real hug she'd given him in months and he took it as the initial step in what was going to be a long healing process. \n\nWhen they walked into Dr. Zarkowski's office she was delighted to see the support of both parents. They briefly greeted each other but this was Lana's time so Tom left for the studio while Angela crossed the street to have coffee in a little diner. As soon as the office door closed Lana sat and folded her arms in front of her. \n\nIt was classic combative body posture designed to put the good doctor on notice from the start. Before she could help this young lady she had to break through that wall, or at least get her to participate. \"Don't want to be here, do you?\" she asked the stoic fifteen year old.\n\n\"Not particularly,\" Lana replied.\n\n\"Your folks tell me you're hurt and angry over their divorce, is that true?\"\n\n\"Duh, wouldn't you be?\" \n\n\"Oh yes, you're darn right I'd be. But I wouldn't enjoy feeling like that. Do you enjoy the pain and anger?\"\n\nLana looked the doctor in the eye. \"What kind of stupid question is that?\" \n\n\"Well, it's just that I'm pretty sure I can help you alleviate some of those emotions...help relieve some of those anger issues and reduce some of the pain; yet you tell me you don't want to be here so I'm just trying to understand why.\"\n\n\"Can you make my parents go back together again?\"\n\n\"No,\" answered Dr. Zarkowski.\n\n\"Then how are you going to help? You can't do anything. Nothing you say is going to change things. This is all just a big waste of time and you know it.\"\n\n\"I see...so it's not so much that you enjoy the pain you just like to wallow in self-pity; is that it?\"\n\nLana didn't say anything. She just shot the doctor a look that would kill most mortals.\n\n\"No? Well, what if there was a chance,\" responded the doctor, \"the smallest chance that I could help? Would you take that chance? Do you really want to rid yourself of some of those hard feelings? You know there are some who would say your feelings aren't real\u2014that you're just putting on an act to punish your parents for breaking up, but I don't believe that. I believe your pain is as real as it gets and that it's very deeply rooted. I can help if you'll give me a chance.\"\n\nLana didn't respond. She just sat, staring at the floor. She really kind of liked this woman. I suppose I could share some things with her, she thought, just not...\n\n\"So if I do talk to you, what happens? I mean do you go blabbing everything I say to my mom and dad?\"\n\nBoth personal and professional ethics dictated that she be completely honest and transparent with a client. \"Everything we discuss during a session is protected under doctor -- patient confidentiality. Since you are a minor I will give your parents progress reports\u2014tell them how I think you're doing, but I will not divulge what you tell me during a session, not to them, not to anyone. There are a couple of exceptions.\"\n\nHere we go, thought Lana.\n\n\"If I feel you are a threat to yourself or someone else I am bound by law to tell the authorities. The same goes for reporting a crime. Other than that, everything you say will be held in the strictest confidence.\"\n\nLana remained silent for a minute or two while she thought things over. She really did welcome someone to talk to. If she didn't get some things off her chest she felt she'd explode. Unfortunately, the thing that bothered her...no, not bothered...the thing she was most frightened of, would have to remain her secret. \n\nLana gave a small sigh. \"So\u2014how do we start?\"\n\n\"I simply want you to tell me how you feel. Don't hold anything back.\"\n\n\"I'm mad,\" she said emphatically, \"mad at my dad, mad at my mom. She was always bitching at him, constantly. As far as she was concerned he couldn't do anything right...and him, sometimes I wished he could just let it go, let her yell until she got tired, but no, he had to yell back. God it was like a war zone half the time.\n\nHer emotions were already starting to get the better of her. She leaned forward and pulled a tissue from the box on the doctor's desk and wiped her eyes before continuing.\n\n\"I don't know what's wrong with them. They weren't always like that. They both say they still love the other but they sure don't act like it. I think they just say it because they think it'll somehow make me feel better. \n\n\"Now they say they're going to counseling. I guess you had something to do with that, didn't you. I just wish they would have done it before getting divorced, that's all.\"\n\nDr. Zarkowski referred to her notes. \"How is your home life now? I understand your mother will be getting remarried. How do you feel about it?\"\n\nShe wiped some more moisture from both eyes and sighed. \"I just want things back the way they were,\" she sniffled. \"I want dad back and I want mom to stop ragging at him all the time.\"\n\nOf course the doctor recognized immediately that Lana had ducked her question. Obviously she was not ready to answer it so she would move on and come back to it, if not this session, another in the future.\n\n\"What did your mother rag on him about?\" she asked, steering the conversation where she wanted it to go.\n\n\"Everything...anything and everything. He works a lot. Sometimes when he gets home he goes into his office and edits pictures. She hates it when he does that. They also fight about me\u2014the way I dress, my grades, my friends, how late I should be able to stay out...\" She stopped to wipe away another tear. \n\nShe was going to try one more time. \"What about Dayton? Does your mother fight with him?\"\n\n\"No...I don't want to talk about him,\" she stated emphatically. \n\n\"Okay,\" the doctor conceded. \"We're about done for the day anyway.\"\n\nLana was surprised when Dr. Zarkowski told her time was up. The hour had passed very quickly. She was also disappointed and couldn't wait for the next session. She actually felt better and would be more confident the following week. Her mother was waiting for her in the outer office and could already see a difference. It was extremely encouraging. \n\nThe following morning Tom picked Lana up for the weekend. He gave her a kiss on the cheek as she strapped herself in the passenger seat. \"So how do you like Dr. Zarkowski?\" he asked while backing out of the drive.\n\n\"She's okay I guess.\"\n\n\"Yeah, your mom and I really liked her. I found another therapist for your mother and me. I'm hoping he's as good. I know I haven't been the easiest person to get along with these days. I'm sorry for that. It's just that your mom...well...\"\n\n\"I know,\" said Lana, picking up on what he was trying to say. \"Mom makes you mad.\"\n\n\"Yeah, I guess that's pretty obvious, huh. Well maybe if we can iron out some things we won't make each other so mad anymore. I know it'll be a lot better for you if we're not always fighting.\"\n\n\"Things would be a lot better if you and mom would just get back together.\"\n\n\"Honey, I'm sorry. I wish I could wave a magic wand and make it happen for you but I can't. Even if I wanted to it's too late anyway. Your mom's getting married to someone else.\"\n\nLana said no more and just turned to look out the passenger side window until they reached the restaurant. Tom tried picking up the conversation again once they'd ordered.\n\n\"What would you like to do this weekend, any ideas?\"\n\n\"I don't care,\" she replied with a shrug of her shoulders. \"We haven't been to the history museum in a long time.\"\n\n\"Great idea, honey. You're right, the history museum it is.\" \n\nFrom there the conversation was mostly one sided with Tom more than keeping up his end, but he did notice an improvement. She wasn't talking a lot but she was talking, be-it one or two words at a time. Later that night they both sat on the couch and watched a Netflix comedy with a big bowl of popcorn between them. How good Tom felt to hear her laugh again. \n\nSunday mornings had developed into a tradition. The Cook's Nook served the best breakfast in the world as far as Lana was concerned, so no matter how long they had to wait in line for a table, it was their restaurant of choice. Lana ordered her favorite then pulled out her phone for a little texting with a friend...another tradition.\n\n\"Dad, my phone says 'no connection.' I don't understand, I always text Jennifer from here.\"\n\n\"Hmm, let me check mine,\" responded Tom as he innocently pulled his own phone from his pocket. \"Mine's working. Let's see it,\" he said, holding out his hand. \n\nReluctantly, she handed her phone over. Tom made a show of removing the battery then replacing it and turning the phone back on. It still showed no connection. \n\n\"Maybe it's just something jamming the signal in here,\" he said, handing it back to her. \"Try it again when we get home.\" \n\nLike with most young ladies that age, her phone was like an extension of her being. Sadly, she put it back in pocket. With nothing else to do she was forced to converse with her dad. He wanted so much to ask her if someone was being inappropriate with her but he was warned by Dr. Zarkowski to not engage in that dialogue. She told him Lana could withdraw even more. She asked for his confidence and to let her work with his daughter. He agreed but it was killing him. \n\nWhen they got home, Lana immediately pulled her phone out and tried again but got the same results. \"Dad, something's wrong with my phone. I still can't get a signal,\" she told him. \n\nHe took it from her and compared it to his own again. \"I'm sorry, honey. Something is definitely wrong. My phone's working fine. Leave it here and I'll take it in tomorrow. I'm sure it can be fixed.\"\n\n\"But, dad, what I'm supposed to do in the mean time?\"\n\n\"Honey, when I was a kid we didn't have cell phones at all. I'm sure one or two days...\"\n\n\"No, dad, you don't understand.\" She was almost in tears. \n\n\"What, honey. I'll take it in tomorrow. If they can't fix it right away I'll get you a new one. I'm sorry, honey, that's the best I can do.\"\n\nWhat else could she do but to let her dad take the phone. She had no choice. \n\n\"I promise, I'll take it in first thing in the morning, honey. I'm sure it's nothing that can't be fixed,\" he assured her. \n\nWhen she returned home later that day, Angela and Dayton were sitting on the couch watching TV. Her mom turned to face her as she walked in.\n\n\"How was your weekend, honey?\"\n\n\"Okay, but my phone is broke,\" she announced. \"I couldn't get a signal. Dad's going to take it in to see if it can be fixed,\" she told them both. \n\nAs soon as Tom returned home from dropping off his daughter he went to work on her phone. He followed the instructions he'd gotten from Amy and made a copy of the SIM card, then activated the program he'd download to the burner phone he bought. At midnight, when the service to Lana's phone was reactivated, he checked. Perfect! There, on the phone he'd bought for spying purposes only, was all his daughter's info. He flashed through some of her text messages but only saw a couple of her friends listed. He had no interest in them. He was only interested in something from the bastard who was hurting his little girl. He checked her call log but again found nothing. \n\nA sense of guilt and relief came over him; guilt because he hated spying on his daughter and relief because he hadn't found anything. Maybe the school was wrong; hopefully. \n\nMonday, after closing the studio, he drove over to his former home and rung the bell. Thankfully it was Angela who came to the door and not Dayton. He didn't want to talk to him if he could help it.\n\n\"Hi,\" she greeted, \"this is a surprise. Come on in,\" she said, stepping aside.\n\nHe glanced over her shoulder and saw Dayton standing in entrance to the kitchen. \"No, that's alright. I just stopped by to drop this off for Lana,\" he said, holding up the phone. \"It was having a problem getting a signal over the weekend.\"\n\nLana heard the doorbell and had come down, hoping it was her dad with her phone.\n\n\"Hi pumpkin,\" he greeted her. \"It was something in the receiver. They replaced a couple parts and voila, here's your phone back good as new.\"\n\n\"Thanks, dad,\" she said, taking her phone and giving him a peck on the cheek. She turned it on and ran back upstairs. \n\n\"Are you sure you won't come in for a cup of coffee?\" offered Angela.\n\n\"No thanks. I was going to call you though.\" He reached for his wallet and took out a business card. \"Here's the guy I'd like to use as a counselor for us if it's okay with you. I called and talked to all three that Dr. Zarkowski recommended and I like this guy the best. Give him a call and see what you think.\"\n\n\"Okay, I will,\" she replied. \n\nWith that, Tom left for home. All he could do now was wait\u2014wait and pray that the school was wrong about his little girl being sexually molested. Every time he just thought about it his heart pounded and his eyes would well up. \n\nThat Wednesday afternoon Tom was cleaning his equipment and getting ready for a shoot while Cayla was working on the books in the office when his cell rang. The display showed it was Angela.\n\n\"Hello, Angie, what's up?\"\n\n\"I won't keep you, Tom; I just wanted to let you know that, that counselor is okay with me. They have Saturday hours. Would that be okay with you?\"\n\n\"Yeah, that's fine,\" he said before thinking, then hesitated. \"Wait a minute, what about Lana? Can you take her to your parents again?\"\n\n\"Tom, I can't do that every Saturday. My folks have a life too you know. You've got to stop this attitude toward Dayton. He lives here, Tom. There are going to be times when he's alone with Lana. You're going to have to accept that.\" \n\n\"I don't want him alone with her until we find out for sure that he's not the one molesting her,\" he said very emphatically. \n\n\"God, is this ever going to end,\" she mumbled with a sigh. \"Okay, let me call mom and see if they can take her on Saturdays.\"\n\n\"Okay, thanks; if they can't then let's make it during the week when she's at school.\"\n\n\"Tom, I can't just take off from work every week. I'm already taking off early on Fridays for Lana's therapy. I don't make my own hours like you do.\"\n\n\"Angela, we both agreed to this counseling for Lana's sake but I'd rather not do it than leave her alone with Dayton, at least until...\"\n\n\"Yes, yes, I know,\" she said, cutting him off in mid-sentence. \"Okay, let me see what I can do.\"\n\nShe called Tom back about an hour later and told him her parents agreed to take Lana on Saturdays. He thanked her and felt much better. She went ahead and made their first appointment for nine o'clock Saturday morning. \n\nNow that the harsh Chicago winter was about over, business was picking up again. Tom was sitting in the office of his studio Friday afternoon, going over some photos he'd shot earlier in the week. Both his cell and burner phones were lying on the desk behind him. He was concentrating so hard on what he was doing he almost didn't hear one of them buzz with an incoming text. He looked back to see which screen was lit. It was Lana's. \n\nAll week he had been monitoring her phone only to see the usual female adolescent jibber-jabber with her friends. He almost let it go without looking at it but a little voice told him to check. He reached behind and swiped the text icon...\n\nUnknown caller: Remember, not a word to that busybody therapist today. You know what will happen if you talk.\n\nIt had to be him. Tom felt the anger building. It was the first evidence to substantiate the school's suspicions. \"MOTHER FUCKER,\" he growled.\n\nCayla, who was just outside the door, wasn't used to her boss using that kind of language. She peeked her head around the jam. \"What's the mat...\" She stopped in mid-sentence when she saw the look on his face. \n\n\"It's true,\" he said, holding up the phone. \"Some mother fucker is molesting my daughter. I'd hoped that the school was wrong but here's the proof.\"\n\nCayla looked at the screen. \"Tom, I'm so sorry. What are you going to do? There's no name. It just says unknown caller. How are you going to find out who it is?\"\n\n\"I'll take this to the cops. I'm sure they can trace it back to the caller.\"\n\nJust then the screen lit up again. She was texting him back.\n\nLana: I promise I won't say anything.\n\n\"There,\" Tom said. \"He's got to be threatening her. That's why she's won't turn the bastard in. He's got her scared to death.\"\n\nNever in his entire life had he felt so helpless. The thought of his little girl's fear brought tears to his eyes. \"I swear, Cayla, the cops better get this guy before I do.\"\n\n\"You let them take care of him, Tom. Please, don't do anything stupid. It won't help Lana if you get locked up.\"\n\nTom silently nodded his head. He knew she was right but just the thought of coming face to face with this guy had him wondering if he could stop himself from killing the bastard. Hopefully the cops would track the call, arrest him and he'd never have a chance to find out. Unfortunately, he discovered it wasn't as easy as he thought it would be.\n\nTom immediately called the Chicago police and explained the situation. When they asked where he lived he told them Arlington Hills, in the Northwest suburbs. They directed him to call their police dept. Of course, he thought. He was so angry he wasn't thinking. When he explained the situation for the second time they told him he'd have to come to the station and ask for detective Lebowski in the special victim's division. \n\nIt was almost four in the afternoon before he got a break. He told Cayla to lock up and took off for the Arlington Hills police department. After waiting for twenty minutes in an outer office, a short but good looking man in his forties came out from the back and introduced himself.",
        "\"I'm detective Lebowski; you're waiting to see me about her daughter?\"\n\n\"Yes, she's being sexually molested,\" he said, standing up to shake the detective's hand.\n\n\"Come with me where we can talk in private,\" responded Lebowski. \n\nTom followed him to an interview room in the back of the station. They sat down at a large table opposite one another. The detective started off the conversation.\n\n\"Do you have any proof that you daughter is being molested? Has she confided in you?\" He was an expert in cases of sexual abuse of minors and knew they rarely talked to anyone about it. Talking to a parent would be even more rare.\n\n\"No, this guy has her to terrified to talk to anyone. Her school brought it to our attention...\"\n\n\"Our?\" questioned the cop.\n\n\"Yeah, her mother and me. They said she was exhibiting the classic signs. We're sending her to a therapist. Today she got this text,\" he said, holding the phone up so Lebowski could read it.\n\n\"This is your daughter's phone?\" he asked.\n\n\"Kind of,\" Tom replied. \n\nLebowski looked at him, not sure what he meant by his comment.\n\nTom explained. \"I cloned her phone.\"\n\nThe cop gave a small sigh. \"You know that's illegal, right? It's a federal offense.\"\n\n\"It's my phone. I bought it. I pay for the cell service.\"\n\n\"Yeah, but when you give a phone to someone, that person has a right to privacy under the law.\" He looked at the pain of a father whose child was in trouble and decided to drop the technicality of the phone issue. \"Never mind, just don't make a habit of going around cloning phones. Let's see,\" he said, reaching for the phone. \n\nHe read the short correspondence and swiped to find more. \"Is this it; just these two texts?\" \n\n\"Yeah. I know it's not much but it proves that someone is molesting her.\"\n\n\"Mr. Hayden, I understand your concern. I have children too, but this really isn't proof. It does appear that somebody's threatening her but there's no mention of anything sexual.\"\n\n\"Okay, isn't the fact that she's being threatened, enough? At least trace it and find out who's making the threats.\"\n\n\"Mr. Hayden, I wish it was that easy. We need a warrant to trace a call and I'm afraid there's just not enough here to get one.\"\n\nTom was now getting angry and frustrated. He stood and took his phone from the cop's hands. \"That's it? You're not going to do anything...nothing?\"\n\n\"There's just not much we can do at this point. I'm sorry. Keep monitoring her calls and texts. If they get sexually explicit then come back. If you can get enough for a warrant I'd be happy to try and trace it. But I have to tell you, unless the guy is a complete idiot, he's probably using a burner phone. If so there's no way to trace it. The best way to get these guys is to trap them, but we'd need your daughter's co-operation for that. We can lure him in but without her testimony it's almost impossible to make any charges stick. Do you think she'd work with us?\"\n\n\"I don't know,\" said a disheartened Tom. \"The school advised us not to confront her. They said to let the psychologist work with her so I'm not even sure how I'd approach her.\" He thought for a second. \"Maybe I can talk to the therapist...see what she says.\"\n\n\"I'm sorry,\" the detective said with true empathy. \"Like I said, I have kids of my own and I can't imagine the pain you're going through. Here's my card,\" he said, handing it to Tom, \"if you get anything more, let me know.\"\n\nHe walked Tom out the way they came in. \"Again, I'm sorry I can't do more right now but these guys always make mistakes. We'll get him,\" he said, trying to give the distraught father a parting word of encouragement. \n\nTo say Tom was discouraged as he left the police station is an understatement. In his own mind he was now positive the school was right. He needed to find a way to stop this guy but he had no idea how. \n\nThe following day was his first couples counseling session with his ex. He had already decided he was not going to share Lana's text messages with her. He just didn't trust her anymore, and besides, he sure didn't want her to know he was spying on their daughter. \n\nEver since talking to the detective his mind had been going two-forty, trying to come up with a plan to get Lana's abuser, but kept coming up with nothing. After a very troubled night's sleep he was up early and had breakfast at a Denny's before meeting Angela for their first therapy session. \n\nThe doctor they had agreed on was Dr. Theo Raddick, a prematurely gray haired man in his early fifties with a baritone voice. After the introductions the doctor asked them to be seated and offered them something to drink. When it appeared everyone was settled the doctor began. \n\n\"Ms. Hayden, during my phone interview with Mr. Hayden he told me you were divorced from each other but still had some anger issues. You both feel these issues are hurting your daughter and you'd like to resolve them if possible. Is that your take on the situation as well?\" \n\n\"Yes, doctor,\" answered Angela. \n\n\"So neither of you are looking for a reconciliation through therapy?\"\n\n\"No, no,\" Tom said, rather emphatically. \"She's already got a new boyfriend. They're getting married in a few months. There's no way we're ever getting back together.\"\n\nEven though Angela knew he was right, she didn't feel he had to sound so happy about it. \n\nTom went on. \"No, it just seems like we can't stop fighting. It was like that the last two years of our marriage and it's never stopped...even now.\" \n\n\"I see,\" said the doctor. \"And why do you think that is? What is it that you fight about?\"\n\n\"Doc, if I knew that we wouldn't be here,\" he snapped, but with a smile. \n\nDoctor Raddick turned toward Angela. \"How about you, Ms. Hayden, any ideas as to why you're always fighting?\" \n\n\"Well, the fact that he doesn't think much of me might have something to do with it,\" she said.\n\nThat surprised Tom. He turned to face her. \"What do mean I don't think much you?\"\n\n\"You don't. You think I'm incompetent.\"\n\n\"When have I EVER said you were incompetent?\" he asked, emphasizing the word ever.\n\n\"Ms. Hayden, obviously you've just revealed something you never expressed before. Why do you feel your ex-husband thinks you're incompetent?\" \n\nShe now gave the doctor her full attention. \"He has a photography studio in Chicago. A few years ago his assistant quit and he had to hire another one. I asked him to hire me. Huh, you should have heard how insulting he was.\"\n\nTom remembered the situation back then and remembered Angela wanted him to hire her but he didn't remember being insulting. She'd never even mentioned it before that moment. \"Angela, we needed your income. We couldn't afford you quitting you job.\"\n\n\"Really? How much do you pay Cayla?\"\n\n\"Ah, five hundred a week.\"\n\n\"Right, a lousy twenty five dollars a week less than I make. If I had quit my job, instead of paying her you'd be paying me. It's a wash, except for twenty-five dollars.\"\n\nHe had never even stopped to think about it. She was right\u2014but there were other concerns. \"You're right; the money would be a wash.\"\n\nAngela got a smug look on her face but it was quickly to fade.\n\nTom continued, \"But tell me, who takes care of Lana when my assistant and I have to go out on a two or three day shoot or work until midnight to meet a deadline?\"\n\nThat brought her up short. \"If those were your concerns why didn't you say that before?\"\n\n\"Hell, we've never even discussed this before. Why didn't you ask me why I wouldn't hire you at the time?\"\n\n\"Because you were so dismissive about it; in fact you were downright derisive. You didn't even consider me\u2014not for a second. I was hurt. Remember how we used to go out taking pictures before we were married? You'd give me one of your cameras and teach me how to adjust the little thingy inside so the exposure would be right. That was so much fun for me. When you said you needed another assistant I could just see us going out on shoots and working together.\"\n\nShe opened her purse and took out a tissue to wipe her nose. \"I'm proud of what you do. I'm proud of your work. Every time I go by that billboard on the Kennedy I smile and think, 'my ex-husband shot that ad.' I wanted to be a part of it, Tom, that's all.\"\n\nHe thought back. If he was honest with himself he had to admit she was right. If he had given it any consideration at all maybe they could have worked something out. \"I'm sorry. I wish you would have said something. I...I mean\u2014everyone in my business hires a photography major from one of the local colleges. Almost everybody in the business starts like that...I started out like that. It's the way things are done. I guess I just never thought about doing it any other way.\"\n\nAngela's emotions were catching up with her. By now she was wiping tears from her eyes. \"Someday Cayla will open her own studio and take half of your clients, then you'll wish you had hired me,\" she joked with a sniffle. \n\nTom smiled and looked at the doctor. \"She's right,\" he said. \"It's how ninety percent of the photographers in my business get their start.\" He faced his ex again. \"Is that what's been sticking in your craw all this time?\"\n\n\"It's one of the things,\" she responded.\n\nTom thought he already knew another. \"I know you were angry about the number of hours I was putting in but...\"\n\n\"Tom, it had nothing to do with the hours. I understood that you had to put in the hours and that you were doing it for us, Lana and me. I know that. It was the way you treated me. All the time we were going together and even for the first few years we were married, you not only loved me but you respected me. You're a smart man, Tom, and I think in the beginning you thought that I was smart too. You used to talk to me as an equal, you used to ask for my advice, my opinion meant something to you; but somewhere down the line I lost that respect. I don't know how I lost it but I did. When you blew me off about working for you so nonchalantly... I...I guess it was just the straw that broke camel's back...and our marriage.\"\n\nTom thought about what she said. \"So all that time\u2014all the snide remarks, all the fights...it was because you thought I'd lost respect for you?\"\n\n\"Pretty much,\" she said while slowly nodding her head. \"That and the fact that I wasn't sure if you were cheating on me or not.\"\n\nTom almost fell off his chair. \"Cheating! I NEVER cheated on you...not once. I never even thought of cheating on you. What did I ever do to make you think I was cheating on you?\"\n\n\"I just told you, you lost respect. Think about it, Tom. It's not the lack of love that leads people to cheat on their spouses, it's the lack of respect. You can cheat on someone you still love but you can't cheat on someone you respect. Isn't that right, doctor?\" she asked looking in his direction.\n\n\"Yes,\" he confirmed. \"That's very true.\" \n\n\"Cayla's a very pretty girl,\" she continued. \"How do I know what you do with her. Sometimes you two would be at the studio till one or two in the morning. You went down to Peoria for three days together.\"\n\nTom sighed. \"We went down there on a job; you know that. We had separate motel rooms. I can prove it. I paid for them with my American express corporate card.\"\n\n\"That doesn't mean you two didn't spend the night in the same room,\" she replied. \"Am I just supposed to take your word for it?\"\n\nNow he was starting to get angry and his voice went up about three decibels. \"Fine, as long as we're talking about cheating, how about you and Dayton. Am I just supposed to take your word about that?\"\n\nAngela's face was turning bright red and the volume of the discussion was increasing dramatically. \"I told you...\"\n\n\"Alright, alright,\" Dr. Raddick broke in. \"Why don't we end right here, today.\"\n\nBoth Tom and Angela looked at the clock on his desk and were surprised the hour was up already. \n\n\"I want to thank you both for being so forthcoming. So many couples come and sit like a stone but I think you're off to a good start. You've both gotten some things off your chests that have been bothering you for a long time. I've made some notes and there're a few things I want you to discuss next week. Also, you both obviously have suspicions of infidelity. We will also explore those but for now, let's call it a day.\"\n\nThey all stood and shook hands. Tom and Angela said goodbye to each other before getting in their cars and driving off in different directions. It was Angela's weekend with Lana so Tom headed for the studio. There really wasn't much to do there but when he was troubled, the studio was more of a sanctuary than his apartment. He always felt safe and secure surrounded by the profession he loved. \n\nHe put on a pot of coffee and sat back in his leather office chair. He couldn't get over some of the things his ex brought up during their therapy session. He kept going over them in his mind, trying to remember what was going on at the time. \n\nSuddenly he had an epiphany; at some point while building his business, the studio became more important than his wife. Again and again he went over things in his mind. At the time he wasn't even aware of it but looking back now, he could see the slow progression of his priorities shifting. For the first time since all the trouble started, he had to face the fact that he played a role in his wife's change in attitude; for the first time he felt guilt. \n\nWhy the hell couldn't he see that before divorcing her? If she had only talked to me, he thought. Maybe we could have worked things out. Maybe we'd still be happily married. A year ago he just wanted to get rid of her. Now, for the first time since the divorce, he was feeling the loss of his wife. He hadn't shed a single tear up till that point but as he thought back to the woman he married, his eyes welled up with regret. \n\nThere was nothing he could do now but suck it up and go on with his life. He would continue to be the best father he could and if he ever did find someone to love again, he would make damn sure she would not suffer the same fate as Angela.\n\nThe next two or three weeks were going to be busy. In addition to his other work, his largest client wanted to collaborate on three new magazine ads. That meant hours going over different concepts with the ad exec, searching for inspiration and creating three different story boards, building sets, selecting models and putting together a team of wardrobe, hair, and make-up artists. \n\nTom smiled as he thought back to a conversation he'd had with Cayla when she first started working there. She had no idea and was astonished with all the time, work, and preparation that went into creating a single advertising photograph. \n\nBy the time Thursday evening rolled around Tom was exhausted. It looked like another fourteen hour day, the third one in a row. He was sketching a set diagram when he heard a text coming in on his daughter's clone. He looked at the time. It was almost eleven o'clock, awful late for a text from one of her friends. He picked it up to see what it said. \n\nUnknown caller: I'm sure I don't have to remind you about Friday again. When U R in the car with your mom tell her you want to stay home Saturday instead of going to your grandparents. That will give us some quality time together.\n\nTom read it but couldn't believe it. He didn't like Dayton but he didn't really believe he was Lana's abuser. He said most of that stuff to get a rise out of his ex. \n\nIt was a minute or so before Lana wrote back.\n\nLana: What am I supposed to say? What excuse do I give her for not wanting to go to grandma's?\n\nUnknown caller: I don't care what you tell her. Just make sure you stay home.\n\nBy the time the last text was sent, Tom had locked up the studio and was on his way. He made the thirty-five minute trip in twenty minutes. The lights were still on when he pulled into the driveway. He sat in the car for a moment and took a series of deep breaths, trying to calm down. He didn't really want to spend the rest of his life in prison for killing the bastard\u2014even if he did deserve it. When he thought he was ready he went up and knocked on the door. Angela opened it with a surprised look. \n\n\"Tom.\"\n\n\"Hi, Angie. Can I come in?\"\n\n\"Well, we were just getting ready for bed. It's late...\"\n\n\"I know. I won't keep you. I just have to talk to Dayton for a minute.\"\n\n\"Dayton?\" Now she was more surprised than ever. In the past he had always refused to talk to Dayton at all. Now he shows up at eleven-thirty and wants to talk? \"Tom, what's this all about?\"\n\n\"Angela, this is important. Please let me in.\"\n\n\"Ah, yeah, I guess. Come on in,\" she said, opening the door and stepping aside. \n\nDayton was in the kitchen when he heard Tom's voice and apprehensively stepped just inside the living room where they could see each other. Something was up, he could feel it. Cautiously, he spoke.\n\n\"Tom, what's going on? It's pretty late for a social call.\"\n\nTom had no doubt as to the identity of his daughter's abuser but he had an idea. If it worked it would be the final nail in Dayton's coffin. \"Excuse me for one second,\" he said as he reached for his burner phone. \n\nBoth Dayton and Angela watched as he hit the speed dial. \n\n\"Tom, what is this all abo...\"\n\nHe cut her off in midsentence by raising his index finger, silently asking for one second.\n\nA moment later they all heard a phone ring. Angela's phone was plugged into the charger in the bedroom. The ringing sounded like it was coming from the hall so it definitely wasn't hers. Lana was upstairs in bed and always had her phone close at hand so it wasn't hers. \n\nDayton knew his personal phone was in his pocket. His burner phone was in his jacket in the hall closet but the only person he talked to on that was Lana--unless... He was suddenly struck with fear as he looked into the knowing face of Lana's father. \n\n\"Why don't you answer that, Dayton,\" Tom sneered. \n\nAngela saw the expression on the two men's faces. Her fianc\u00e9 looked scared. She knew something was terribly wrong but hadn't a clue as to what it could be. \"What's going on? Dayton...?\" Her voice trembled with concern.\n\n\"Here,\" said Tom, handing her the phone with the text messages, \"read it yourself.\"\n\nDayton looked at Tom as he put it together. He remembered what Lana said about having trouble with her cell phone. \"You cloned her phone,\" he mumbled. \n\n\"That's right you piece of shit, and now I've got you.\"\n\nDayton tried to think of something to say, anything to get him out of his mess but it was hopeless; he'd been caught. \n\nSuddenly both men heard a tremendous wail as Angela read the text and now knew her betrothed was responsible for her daughter's suffering. She felt as if someone had punched in the stomach. As her legs collapsed from under her she fell against the wall and slipped down to the floor, screaming in hysterics, \"No, it can't be, it can't be.\"\n\nTom wanted to go to her aid but Dayton saw his chance and turned to make a break through the kitchen and out the back door. \n\nAngela would have to wait. Tom wasn't about to let the asshole get away and took off after him. Quickly, he closed the gap between them and jumped, wrapping his arm around Dayton's neck and dragging him down like a lion on a gazelle, but on the way down, Dayton grabbed for a kitchen chair. As the two men tumbled to the floor the chair came crashing down and caught Tom just above the eye. It stunned him enough that Dayton was able to kick himself free and again dashed for the door.\n\nHe had just reached the bottom step of the back deck when Tom leaped from the landing. This time Tom landed with force as they fell to the grass. Tom was on his feet first and landed a hard right uppercut before Dayton could get his feet fully under him. Still trying to escape, Dayton scrambled for the back gate but a swift kick to the ribs sent him sprawling to the dirt. Tom leaned over his prone body, lifted his head with a handful of hair, and hit him two more times for good measure. ",
        "Tom had been in a few fights when he was younger but never did he enjoy hitting someone until that moment. \n\nDayton was through. He lay on his back with both arms spread. His breathing was labored as he stared at the sky wondering what his future held for him now. \n\nTom took his phone from his pocket and dialed nine-one-one then pulled the pedophile up by his shirt and forced him back into the house. The scene that awaited them broke Tom's heart. \n\nHis ex was curled in a fetal position with her head lying in their daughter's lap. Lana had been awakened by Angela's cries and came down to see her mother sitting on the floor with her face buried in her hands. \n\n\"I'm sorry, God, I'm so sorry, my baby, my baby, I'm so sorry.\" Angela was repeating it over and over. \n\nLana looked up at her dad. She was terrified. \"Dad, you're bleeding.\" \n\nTom reached up and felt his forehead. The chair left a deep gash just above his eye. He wanted to reassure her. \"I'm okay, honey. It's just a little cut. I'll be fine. And you won't ever have to worry about Dayton again. He'll never bother you again.\"\n\nTears streamed down her young cheeks, \"No, dad, you don't understand. He said he has friends. If he goes to jail they're going to bomb your studio. You have to let him go, please. I don't want anything to happen to you,\" she cried. \n\n\"You better listen to her,\" Dayton sneered. \"She's telling the truth.\"\n\n\"In that case maybe I should just get my gun and take you for a one way ride, huh?\" he growled into Dayton's ear. \n\nDayton had no comeback but an evil grin left his battered face. \n\n\"Honey,\" Tom directed his attention back to his daughter, \"I doubt very much if Dayton has any friends at all, let-alone the kind that would take a chance like that. Please don't be scared. We're not letting him go. When the police come I want you to be brave and tell them everything. Okay? Please, honey, don't worry.\"\n\nLana nodded her head but he knew she was still scared. Taking Dayton for a one way ride was almost becoming a viable option. \n\nAngela was finally starting to pull herself together a little. She sat up and put her arms around her daughter. \"Oh my baby, I'm so sorry,\" she repeated.\"\n\n\"It's okay, mom. You didn't know,\" she whimpered. \n\nThey were still sitting on the floor, holding each other when they all heard the doorbell. Tom looked up and could see a red flashing light reflecting off the window. \"Judgement day,\" he snarled as he pushed Dayton ahead of him. He opened the door to three uniformed officers, two males and one female.\n\n\"We got a report of a disturbance at this address,\" announced the lead man in blue.\n\n\"Yeah, I'm the one who called. This is Dayton Cooper,\" he said, holding the man up by the back of the collar. \"He's a pedophile and he's been sexually molesting my daughter.\"\n\nTom obliged the officer's request to enter the house. Once inside, all three had to try and process the scene and ascertain just what was going on. Based on their preliminary questioning, they cuffed Dayton's hands behind his back then separated everyone to get their statements. The officer in charge took both Tom and Dayton into the kitchen for questioning while the other two cops questioned Lana and her mother in the living room.\n\nTom told the first officer about the school's suspicions, about getting Lana into therapy and about talking to detective Lobowski. Several times during the interview the cop spoke into the radio attached to his shoulder and reported back to the station. They were there over an hour.\n\n\"Okay, Mr. Hayden, you understand this is just a preliminary report. We're going to need all of you to come down to the station for a formal statement and to sign the complaint.\"\n\n\"Yes, of course. When do you need us?\"\n\n\"Well, believe me, I understand the trauma for your daughter and ex-wife but we want to get everything on paper while it's all still fresh in your minds. I'd like you to be at the station at nine tomorrow morning. Detective Lobowski will be there as well as a female officer who's trained for cases of child sexual assault.\"\n\n\"We'll be there,\" Tom stated emphatically. \"I want to make sure this asshole gets what's coming to him.\" \n\nIt was well after one in the morning by the time the cops left, taking Dayton with them. Everyone's nerves were on edge including Tom's, although he tried not to show it. He felt as though the situation had thrown him back into the role as head of the family again...even if it was for a short time. \"Lana, I am so proud of you. I know you're still scared and that's what makes what you're doing even more brave.\"\n\n\"Dad, I'm so sorry I didn't tell you. That lady officer said I should have told you but I was so scared. He...he said if I ever told anybody he would send his friends to throw a bomb in your studio when you were there. He said he'd also have them kidnap mom and that they'd take her someplace to gang rape her.\"\n\nHis heart was being torn to shreds by his daughter's words. Tom knew Dayton had to threaten her with something but he didn't realize the true heinous nature of his lies. Now he wished he had taken him in the woods and put one right between the bastard's eyes for putting his daughter through so much torment. \n\nAngela was sitting next to her, still crying. \"How could I have been so blind?\" she cried. \"How could I not see what a horrible monster he was?\" \n\nTom had to agree with her but now was not the time to pile on more guilt than what she was already feeling. Her whole body was shaking and he was afraid she was headed for a nervous breakdown. \"Angela, he had us all fooled,\" said Tom, trying to ease her mind a little.\n\n\"Not you. You had him pegged from the start,\" she replied. \"If I had only listened to you.\"\n\nLana put her arms around her mother again and hugged her tightly. \"Mom, it's okay...really, I'm fine,\" she bravely asserted. \n\nAngela looked up at Tom, her eyes pleading. \"Tom, can you stay here tonight? Please, I...I...\"\n\n\"Yeah, I'll stay,\" he told her. \"We have to be at the police station tomorrow at nine. We can all go in my car\u2014in fact, how about if we go out for breakfast tomorrow?\"\n\nThat brought the only smiles he'd seen all night. \"You ladies run up and try and get some sleep,\" he told them. \"I'll stretch out here on the couch.\"\n\nThere were hugs all around. Angela thanked him for staying the night and gave him a peck on the cheek in gratitude. He gave them a few minutes then checked the doors. God, he thought, he hadn't performed that little ritual in a long time. His ex had come down with a pillow and a blanket for him so he curled up on the couch for what would be a very restless nap. As he tossed and turned on the narrow couch his subconscious alerted him to a presence in the room. The feeling was so strong it woke him up. He peered from half open eyes to see a figure silhouetted against the street lamp shining through the front picture window. \n\nIn his present state of mind he sensed danger and sat up with a start before recognizing the ominous form as his ex.\n\n\"I'm sorry, Tom, I didn't mean to wake you. I...I couldn't sleep so I just came down to check on you and make sure you were covered,\" she told him, then turned to go back upstairs. \n\nTom sat there for a moment wondering what the hell that was all about. He glanced at the time\u2014it was three in the morning. He lay back down but it was no use trying to get back to sleep. He wondered how his daughter was going to cope with what she'd gone through. He wondered how his ex-wife was going to cope with her guilt. After another hour he gave up on trying to grab more rest. He slipped his pants and shirt back on and wandered into the kitchen to make coffee. That's where Angela found him at five o'clock, sitting at the kitchen table sipping his third cup.\n\nHe had to smile ever-so-slightly at the familiar sight of her draped in her robe. Damn, he thought, that old blue rag had to be fourteen or fifteen years old. \n\n\"I guess you couldn't sleep either, huh. How long have you been up?\" she asked.\n\n\"Since about four.\"\n\nAngela made her way to the coffee pot and poured herself a cup, then sat down across the table. \"You don't have a shoot today?\"\n\n\"Actually I do. I'll have to call Cayla in about an hour and tell her she'll have to do it on her own. It's a small job; just some watches and rings and things for Anderson's. It's all done in the studio and she's pretty good at lighting jewelry so she'll be fine.\"\n\n\"Anderson Jewelers has been with you a long time,\" she commented, making small talk.\n\n\"Yeah, they were one of my first clients.\"\n\nThey sat there silently thinking for a couple more minutes. Angela broke the silence. \"Do you think I should take Lana to Dr. Zarkowski's today, or should we skip it till next week?\"\n\n\"Oh no, don't skip it. She needs all the help she can get right now.\"\n\n\"Okay. What about us? Do you still want to go for counseling?\"\n\n\"Yeah, why not? Just because Dayton's not going to be here doesn't mean we shouldn't come to some kind of truce for Lana's sake. Why--do you want to stop going?\"\n\n\"No, no. I just thought...well, I thought the reason you were always so mad was because of Dayton. No, I'm more than happy to keep going.\"\n\n\"Angela, the reason I'm so angry...ah, never mind. Let's wait till Saturday,\" he said while shaking his head. \"No sense in getting into it now. We'll just wind up getting into another argument.\"\n\nAngela also thought it was a good idea to drop it. She needed his strength, not his anger. She agreed then changed the subject by asking where he was taking them for breakfast. \n\nJust about the time they ran out of small talk they heard the alarm on his cell phone go off. It was still sitting on the coffee table next to his make-shift bed. \"Six thirty,\" he told her. Why don't you get Lana up and going while I take a shower down here?\"\n\nShe smiled and nodded, silently remembering how they used to take showers together. \n\nAn hour later they were all sitting at I-hop having breakfast. \"Are you nervous, honey?\" he asked Lana.\n\n\"A little,\" she replied. \"Will I have to testify in court? I mean...I...I've seen things like this on TV. His lawyer will try and make it look like it was my fault.\"\n\n\"I don't know, honey. I suppose you might have to testify. But if you do there's nothing to be ashamed of, you know that\u2014right? No matter what his lawyer says or asked you simply tell the truth.\"\n\n\"I guess,\" she mumbled. \n\nAngela put her arm around her daughter and pulled her close. \"I know your dad has told you several times already but I too want to tell you how proud we are.\"\n\nAs soon as they were done they headed for the station. They arrived at nine on the dot. Tom had Lana and Angela stay back while he approached the front desk. He gave the sergeant his name and told him why they were there. The sergeant made a quick call and a moment later detective Lobowski came out to greet them with a woman at his side.\n\n\"Mr. Hayden,\" he address Tom with his hand held out, \"right on time, that's appreciated. This is Audrey James, the Assistant District Attorney. She's going to be prosecuting your case. And this must be Lana,\" he said, turning his attention to the young lady standing a few feet away. \"I read the report from last night. Officer Jenkins, she's the officer who took your statement, was very impressed with you. And you're Ms. Hayden, nice to meet you; I wish it was under better circumstances. Come on back with me,\" he said, leading everyone to an interview room in the back of the station. \n\nAs they all took their seats, the detective explained that Ms. James would be leading the interview and that everything was being recorded. \n\nEverything was becoming overwhelming for Lana. \"Will...will I have to talk about things he did to me? I...I mean, you know\u2014specific things?\"\n\n\"I'm afraid so,\" Ms. James replied. \"Lana, believe me I know what you're going through. I went through the same thing myself. It is without a doubt the most humiliating and embarrassing thing I ever went through, but you know what?\"\n\nLana shook her head.\n\n\"The guy who molested me is still in prison and hasn't been able to hurt any other girls. To this day I can puff out my chest and be proud of that and it makes all the embarrassment I went through, worth it.\"\n\nLana took a deep breath and looked into the eyes of the prosecutor. \"I'm ready,\" she said with a slight nod, her voice breaking with emotion. \n\nDetective Lobowski turned the recorder on and introduced everyone in the room.\n\n\"Okay, Lana, in your own words I want you to tell me what happened between you and Dayton Cooper. Start at the beginning.\"\n\nBy the time Lana completed her statement, Angela had gone through a half-dozen tissues and had her head leaning into Tom's chest while the tears ran free. Emotions were running high for everyone in the room and Tom now wished he had taken Dayton for that walk.\n\nIt was almost eleven-thirty by the time they left. Tom stayed with them until it was time to take Lana for her therapy then took off for the studio. There was still work to do and he couldn't afford to fall behind.\n\nSo far, through the whole ordeal, Lana had been able to maintain the brave facade of someone much older than her fifteen years. Her mother walked her into Dr. Zarkowski's outer office, gave her a big hug and told her she would stay right there and wait for her.\n\nOnce Lana was alone with the doctor the flood gates opened and that fa\u00e7ade came tumbling down. For a solid hour, Lana let it all out; the shame she felt, the humiliation, the fear, the anger, and the feeling of helplessness. She admitted to thoughts of suicide, something she hadn't mentioned during the police interview or told anyone else about. She told the doctor it was Dayton who gave her the marijuana and that she thought she left it in her locker secretly hoping that someone would see it. It was a subconscious cry for help. \n\nDr. Zarkowski guided her through the process. That's what it was, the process of healing, and this was a good start. When the session was over she accompanied Lana to the outer office and briefly met with Angela for some words of encouragement. \n\nLater that night, mother and daughter sat on the couch and talked for the first time in months. They covered a variety of subjects and Angela knew she was getting her daughter back. As they were about to get ready for bed, Lana became pensive. \n\n\"I'm glad dad stayed last night. I felt safe with him here. I really miss him, mom. The house feels so lonely without him. Do you think, now that Dayton is gone, that maybe he'll come back?\"\n\nAngela didn't hold any hope of her ex coming back, not after the way she treated him, but she hated to dash the hopes of her daughter. \"I don't know, honey. Your father's pretty mad at me and I can't say I blame him. I...ah...I got mad at him and stayed mad for a long time. I still love him very much but some of the things I said\u2014some of the things I did\u2014I think I killed his love for me, honey. I'm so sorry.\" \n\nLana wiped away a couple unspent tears from her eyes and quietly went upstairs. \n\nAngela stayed on the couch for a little while, wiping away her own tears. \n\nThe following morning Tom met Angela outside the office of Dr. Raddick's. After everything that had transpired he was very concerned for Angela as well as his daughter. \"How are you? Get any sleep?\"\n\nAngela forced a small smile. \"Not much but I'm okay.\"\n\n\"And Lana?\"\n\n\"She seems better after her therapy session. We actually sat and talked last night. Dr. Zarkowski said she'll being going through an emotional roller coaster for a long time and that we'll need to be patient with her but she also said Lana was a very strong person and made a good start toward recovery.\"\n\n\"That's good to hear,\" Tom said with a little sigh. \n\n\"Tom, Angela, are you ready?\" Dr. Raddick was standing in the doorway to his office. Once everyone was settled, Angela kept quiet while Tom explained the events of the last forty-eight hours. The doctor looked at Angela who was sitting with her hands in her lap and just staring at the floor in front of her. \"Angela, how do you feel?\" he asked. \n\nShe brought her head up and looked him in the face. \"How do you think I feel? I feel guilty. I feel like a complete failure as a parent, a wife, huh,\" she scoffed at her own words, \"even as a person. I've failed my husband and my daughter. Tom is a good man and a man who loved me. I...I was thinking last night that\u2014oh God\u2014that maybe Tom should have custody of Lana and...and I should just go away.\" With that her shoulders slumped as she began to cry. \n\nTom was completely taken by surprise. He knew she felt guilty but he didn't realize the depth of it. \"Angie...\"\n\n\"Excuse me, Tom,\" interrupted the doc. \"Why do you feel you failed as a wife?\"\n\nAgain she looked at him. \"What do you mean...I drove him away didn't I. I drove him out of the house...away from his daughter. He's a good man. A man who loved his family, a man who love me and I destroyed that love. Does that sound like I was a successful wife to you?\" she cried. \n\nShe turned toward her ex. \"Tom, I'm sorry; I'm so sorry I turned into such a bitch. I just wanted to be a bigger part of your world. In the beginning, when you would come home and tell me about what you did that day, I hung on every word, but after you dismissed me like that when I asked about the job, your stories were like rubbing salt into the wounds. I got frustrated, jealous, hell I got to hate your world. I resented the studio and you. I think I started picking fights so I wouldn't have to listen to what a great assistant Cayla was. I talked myself into suspecting you of having an affair, if not with her, with one of your models. I knew I was wrong but I couldn't help myself.\"\n\n\"Angie...\"\n\nHe was interrupted again by the good doctor. \"Tom, please, she needs to get this out...and you need to listen to her. Please, go on, Angela.\"\n\n\"I knew things were getting out of hand\u2014I was getting out of hand. I thought about sitting down and talking to you but I thought, if I initiated it you'd just think I was whining and dismiss me again like you did about the job. I thought if I pushed hard enough you'd be the one who wanted to sit down and talk. I thought I'd have a better chance of you listening to me that way. \n\n\"I...I never thought you'd actually stop loving me and just throw in the towel. God, you have no idea what I went through when you moved out. I don't think anyone could know how I felt. I was so lost, so lonely. I hated myself, literally hated myself. I could see how the break up was affecting Lana and knew I was the blame. That's why I had Dayton move in. That's why I'm such a failure as a mother. I did it for me, without giving any thought to him being a possible threat to her. He had a way of making me feel better. I needed that so badly I even convinced myself that I loved him after a while. \n\n\"As I look back now, I know it wasn't love, it was need. I needed his praise to offset my own self-loathing. I convinced myself it was love to justify having sex with him. Oh God,\" she cried out, \"now I feel so dirty that I let him touch me. I...I just cringe every time I think about it. I wish I could crawl out of my skin like a snake and just leave it behind.\"\n\nShe wiped her teary eyes with a tissue, then went on. \"Till my dying day I will never forgive myself for the two biggest mistakes of my life, driving away the man I love and bringing a pedophile into my house to molest my daughter.\"\n\nThis time Tom didn't care if the doctor stopped him or not. \"Angie, you had no idea he was a pedophile. You can't blame yourself for that.\"\n\n\"No?\" I'm her mother, Tom. You're not the only one who is supposed to protect her; it's my job to protect her, too. I should have waited. I should have tried to get to know him better before moving him into the house. You knew, or at least you had a feeling. You said it several times, I just didn't listen.\" ",
        "Tom looked at Dr. Riddick. \"Okay, doctor, how do we get her to see this wasn't her fault?\"\n\n\"We're not going to be able to convince her of that, Tom, because in reality it is partially her fault. She knows that and nothing you or I say will convince her otherwise. As you mentioned already, you're not totally without blame either so it's also partially your faulty as well. \n\n\"The good news is you both acknowledge it and are willing to share in the responsibility. That's a giant step forward. You need to accept and understand your roles before you can forgive yourself and each other. \n\n\"Tom,\" he said, giving Angela a chance to recuperate a little, \"last week, when Angela asked why you so readily dismissed her as a possible assistant, you gave two excuses, money and childcare for your daughter, only one of which was even relevant; I want to know the real reasons.\" \n\nTom could feel the guilt rising up from his gut. He knew what the doctor was asking. It was the same thing he thought about after the last session. It took a minute for him to think before answering. \n\n\"Yeah, you're right, I have a stake in this too, and I owe Angela an apology. I get very passionate about my work. So much so that evidently I can lose sight of my priorities. I didn't even realize that until last week.\" He turned to look at Angela. \"I thought about what you said...how I acted about the job and I realized you were right. Somehow while I was building the business, it actually became more important than you. I'm ashamed of myself. That never should have happened and I am truly sorry.\"\n\nThe apology was nice but knowing she took a back seat to the studio wasn't a comforting thought for Angela. It just added to her feelings of inadequacy and she cried that much harder. \n\nIt was almost time for the session to end but the doctor didn't want to leave it like that. He knew how bad Angela felt and she needed something to cheer her up.\n\n\"Tom, Angela, I sometimes give out homework assignments at the end of a session...\"\n\nOnce again, both Tom and Angela were astonished to find their hour was up.\n\n\"...and I have one for you two. It also includes Lana. Angela, I want you to come up with an idea for a special family portrait.\"\n\n\"What?\" asked Tom.\n\nAngela's comment was, \"huh?\"\n\n\"A family portrait...of all three of you. Tom, I assume your camera has a self-timer.\"\n\n\"Ah, yeah, I mean, well I have remote triggers. I can shoot from anywhere, but...\"\n\n\"Good,\" said Dr. Raddick, interrupting Tom. \"Do you work tomorrow?\"\n\n\"Sunday?\" No.\"\n\n\"Excellent, then I want the three of you to go down to your studio tomorrow and take a family portrait. Angela, I don't want to see the three of you sitting on the couch, looking into the camera. I want to see something spectacular, something unique. Can you do that?\"\n\nShe actually had a smile on her face. \"Yeah, I can do that.\" She turned toward Tom. \"What about it? Can we do it?\"\n\n\"Yeah,\" he said, getting excited about the idea himself. \"Yeah, you're damn right we can do it.\"\n\n\"Okay then it's settled. Next week when you come in I want to see the best family portrait I've ever seen,\" announced the doctor. \"Tom, you of course are responsible for actually taking the pictures but I want it to be Angela's idea...okay?\"\n\n\"Yup,\" he answered with a smile.\n\nRarely were people all smiles when leaving his office but it did happen once in a while. This was one of those times. \n\n\"Are you going to follow me to mom and dad's to pick up Lana?\" she asked on the way out to the parking lot. \n\nIt was his weekend with his daughter. \"Yeah, I'll be right behind you.\" \n\nThis time Harry Eurbanic, his ex-father-in-law, was home as well as Lana's grandmother. They had a nice visit and told everyone about the doctor's photo challenge before Tom and Lana left. \n\nAngela stayed behind to visit with her folks a little longer then drove home to start on her homework. Without Dayton it was the first time the house had been empty in a while but she was so preoccupied she didn't even notice. She grabbed several sheets of paper and a pencil and starting writing down ideas and making sketches. \n\nIt was still early spring in Chicago but the temperatures had been unseasonably warm. The water would still be cold, very cold, but she was feeling better than she had in a long time--maybe even a little crazy; at least that's what Tom and Lana were going to think when she told them of her idea. \n\nShe opened her laptop to 'Google Earth' and searched the lakefront until she found what she was looking for. Angela couldn't keep from grinning as she made out a list of what they would need. \n\nIt was almost nine o'clock by the time she called to tell Tom what to wear and to bring a change of clothes; she would bring extra clothes for Lana. \n\nEverything sounded intriguing to Tom but he had second thoughts when she told him what time they had to meet. He made sure he ran it past Lana before agreeing. She was sitting next to him while he was talking. \"Honey, your mom says we have to meet her at North Avenue Beach at five o'clock in the morning for that family portrait. I have no idea what she has in mind. Are you okay with that?\"\n\nShe didn't even hesitate. \"Yeah, dad, it'll be fun.\"\n\nHe wasn't too sure about that. Getting up at three-thirty on a Sunday morning wasn't exactly his idea of fun but what the hell. Try as he did to waggle it out of her, Angela would not divulge her idea. She only told him what she thought he'd need in the way of camera gear. \n\nThe following day it was still pitch dark when they met at the lakefront. Angela had done her research and knew the facilities had already been opened by the park service for the season. She had Lana change into the clothes and an old pair of sneakers she'd brought, then explained her idea for the shot. \n\n\"Let me get this straight. I set the camera up on the pier looking back toward the shoreline and the rocks. We climb up on the rocks and jump into the water?\"\n\n\"Yeah,\" she enthusiastically confirmed. \"I did all the research just like you would. The sun will come up right over there in just about an hour. I figured that'll give you enough time to set up the camera and the lights and everything. The water's only about three feet deep right there.\"\n\n\"Yeah, but it's cold, Angie.\"\n\n\"Aw, come on, dad, where's your sense of adventure?\" \n\nHe looked at his smiling daughter. \"You want to do this?\"\n\n\"Yeah, I think it'll be a blast.\"\n\n\"Yeah, if we don't all end up with pneumonia,\" he mumbled. He looked at his ex. \"Who's going to pay for my wireless camera trigger when it gets all wet and shorts out?\" \n\n\"Oh, here,\" she said, pulling a plastic zip-lock bag from her purse.\n\nHe had to laugh. She'd thought of everything. \n\n\"Tom, if you can get the camera on kind of a low angle where it's shooting up a little bit, we can have the skyline behind us,\" Angela added. \"I think it'll really look pretty with the sun shining off all the buildings.\"\n\nTom sighed. \"Okay,\" he said with a shake of his head. \"I think you're both nuts but if you're game I'm game.\" He went to work setting up for the shot. The timing was perfect. He was just finishing up as the sun came peeking through the skyline. \n\nWhen they were all ready they climbed onto the large rocks and held hands with Lana in the middle. Tom held the plastic enclosed trigger to the camera in his other hand. \"Okay, you guys. We have to get this right on the first take. I want everyone looking excited and pull your legs up as high as you can when you're in the air. I'm going to shoot when we're at the top of the jump. Everybody ready? On the count of three; one...two...THREE...\n\nEveryone was still laughing and drying themselves off when Lana came up with an idea. \"Hey dad, we still have to get breakfast, maybe mom can come with us. Then do you think we could go to your studio and see the picture on your computer?\"\n\nHe glanced at his ex who had a hopeful look on her face. \"Yeah, I guess we could do that. I really don't want to leave my gear in the car anyway. Why don't you meet us at the studio, Angela. I'll drop my stuff off and we can go to the restaurant in one car from there. This early on a Sunday morning, you'll be able to park right in front. When we get back I'll do a quick edit on the shot and make a couple of prints for you.\"\n\nAngela was thrilled. The whole episode had been cathartic for her. She was happier than she'd been in years. Of course the guilt and sadness would return as soon as it was all over, but for now she just wanted to enjoy herself.\n\nAfter breakfast they were all excited to see their family portrait. Back at the studio, Tom had already downloaded the file into the software when his cell phone rang. He looked at the display and saw it was detective Lobowski. Not knowing the reason for the call, he walked to the front of the building where he'd have some privacy in case it was bad news.\n\n\"Hello, detective, is something wrong?\" he asked in a hush tone. \n\n\"No, no, Mr. Hayden. I just wanted to bring you up to date on the case, that's all.\"\n\n\"Whew,\" he sighed. \"When I saw it was you, all kinds of things popped into my head. You hear about guys all the time getting out on some technicality.\"\n\n\"I'm sorry; I didn't mean to scare you. Cooper will be arraigned at ten o'clock tomorrow morning. There's no reason for you to be there but I thought you'd like to know. He'll have a bail hearing at two...\"\n\n\"You think he'll get out on bail?\" Tom interrupted.\n\n\"No, I doubt it. He's going to appear before judge Wesson. She hates anything that deals with kids. Ms. James, she's the ADA you met, thinks Wesson will set bail at a quarter-mill. He'd have to come up with twenty five grand in cash to get out. Since he doesn't own a home or have any real assets I think he'll be in there for the duration.\"\n\nThat was great news for Tom.\n\n\"He still hasn't requested an attorney so she'll appoint one for him but so far I've been able to question him alone. I'm trying to get him to cop to it so Lana won't have to testify.\"\n\n\"O God, that would be wonderful,\" responded Tom.\n\n\"Well, don't get your hopes up too high but he does seem like he wants to confess. Sometimes guys just need to be prodded, you know. He's been talking, he just hasn't come out and admitted to molesting her yet. He did tell me he saw her two years ago at some company picnic you guys were at. He never forgot her and when he found out you and your ex were splitting up, he saw his chance. He's pretty smooth. He knows how to sweet talk a woman but he wasn't interested in your wife. He wanted Lana and knew the way to her was through Mrs. Hayden.\"\n\n\"Two years ago? Shit, she was only thirteen. He's one sick mother fucker,\" growled Tom. \"Excuse my French.\"\n\nThat brought a chuckle from the seasoned cop. \"That's okay, I've heard words like that before,\" he joked. \n\n\"So what's your gut feeling? You think he'll confess?\"\n\n\"Yeah, I do. If I can get one more interview without some bleeding heart lawyer sitting next to him, I think I can get his statement on paper. He's such an arrogant bastard I think he wants to brag. I just have to push the right buttons.\"\n\n\"Well, if you can make that happen, detective, my whole family will be in your debt.\"\n\n\"Only doing my job, Mr. Hayden. Sometimes we get lucky and actually get the bad guys. It's what makes the job worth doing. I'll let you know if there are any more developments.\" They both said their goodbyes and hung up. \n\nTom didn't want to get Lana's hopes up but both she and her mother were curious so he did tell them there was a chance that Lana wouldn't have to testify. \n\nHe returned to his computer and made a few adjustments to the photo. He enhanced the colors in the sky a little and did just a little retouching to their faces. \"There we go, how's that?\" he asked, backing up his chair so Lana and Angela could get a closer look.\n\n\"Oh dad, that is soooo neat.\"\n\n\"Tom, that's amazing,\" replied his impressed ex.\n\n\"Hey, it was your idea,\" he said with a smile. \"I'll make a few prints,\" he said, rolling his chair closer again so he could hit the print button. \n\n\"This was a really great idea,\" he told Angela as he handed her a half a dozen, eight by tens. \"Next week I'll make a few sixteen by twenties and have them framed. I want one for in here, one for my apartment and I'll give you one for the house.\"\n\nShe thanked him profusely with a hug then said goodbye to Lana before getting in her car and making the drive back home. Angela was able to control herself until she reached the house, then burst out in tears. It had been such a wonderful morning. They had been a family again\u2014if for only a few hours. Now she had to face reality again and reality was loneliness and regret. \n\nThe following week was pretty mundane for everyone but Tom. Cayla answered the phone shortly after opening on Wednesday and committed to a meeting later that afternoon. \n\n\"Who did he say he was?\"\n\n\"He said his name was Carl Winslow. That's all he said,\" explained Cayla.\n\n\"He didn't say what it was about?\"\n\n\"No\u2014just that he and a couple of associates wanted to meet you here this afternoon.\"\n\nIt was two-o'clock on the dot when three men walked into Tom's studio and introduced themselves. Carl was definitely the lead man in the delegation. Tom escorted them back to his office. \n\n\"So, gentlemen, what can I do for you?\"\n\n\"Tom, have you heard of Rhicter and Wright?\"\n\nSilly question, thought Tom. You couldn't be in his business for long and not know the name. \"Yes, of course. It's an ad agency in New York\"\n\n\"That's us,\" Carl quickly confirmed. \"We've kept it pretty much under wraps before now but we're opening a branch here, in Chicago and we're interviewing photographers.\"\n\n\"I see,\" replied Tom. Rhicter and Wright was a big agency but if they were just interviewing photographers he wasn't getting too excited yet.\n\nCarl continued. \"Would it be possible for you to give us a tour of your studio, here?\"\n\n\"Yeah, sure,\" he said, standing up. \"Come with me.\" He showed them the two dressing rooms and shower before taking them into the shooting area. \"I know it's not all that big but it's very well equipped. Everything I have is quality so I get consistent results,\" he told the three visitors. \n\nAfter the twenty-five cent tour they congregated back in the office where Carl picked up the conversation again. \n\n\"Tom, I'll be honest with you. You've got a great reputation in the business. We've seen some of your work and it's top-notch. We're going to be dealing with three photographers in the area and we'd like you to be one of them.\"\n\nOkay, this was starting to sound interesting. Tom's heart started beating just a little faster. \n\n\"We already have a pretty impressive local clientele waiting for us to open, which will be in about six months. My only concern is that it's just you and one assistant. Will you be able to handle the additional work?\" Carl asked.\n\n\"Carl, Cayla is capable to handling the work of three,\" he praised, \"but if I need more help I'll hire them.\"\n\n\"Excellent,\" said Carl as he and the others rose from their chairs. \n\nTom guessed the meeting was over as they all stretched out their hands to shake. They all exchanged business cards and one of the others gave Cayla more information they would need for billing and tax purposes. \n\nWhen they were gone Tom and Cayla looked at each other. Jesus, Cayla, Rhicter and Wright is on a whole different playing field than the agencies we've been dealing with. They handle some of the biggest brands in the world.\"\n\n\"I know,\" she excitedly replied. \"We'll have to drop some of our other clients...just keep the cream of the crop.\"\n\n\"No, we're not dropping anyone, Cayla. Some of those guys have been with me since I opened my doors; they've stayed loyal to me, I'm going to stay loyal to them. No, when the time comes I'll hire more help, that's all. We won't see much work from them until next year anyway. If it gets to where we can't handle things from here I'll find a place with more space but I won't drop anybody.\" \n\nThat following Friday Lana had another therapy session with Dr. Zarkowski. After a whole week of not having to be afraid, she was starting to relax a little, and once again, poured her heart out. She was embarrassed but was still able to go into some of the specifics and explain how dirty Dayton's touch made her feel. \n\nDr. Zarkowski admired the young lady for her strength. The horrific experience would obviously stay with her the rest of her life, but where it might literally destroy some, she was confident that Lana could handle it. \n\nThe following day Angela had a wrapped package in her hand when Tom met her in Dr. Raddick's outer office.\n\n\"Is that what I think it is?\"\n\nShe nodded and smiled. \"I bought a frame for it.\" \n\nBefore starting their therapy session, Angela made the presentation. \"Dr. Raddick, this is for you,\" she said as she laid the gift on his desk.\n\n\"What's this?\" he unwrapped it and held it up. \"Wow, now this is a great family portrait,\" he said with a big smile. He brought the photo a little nearer to his face and studied it closer. \"This really is amazing. How did you do this?\" he asked, looking at Tom.\n\nTom looked at his proud ex. \"You tell him,\" he said. \"The whole thing was your idea.\" Tom sat back and listened to an excited Angela as she told the doctor just how everything was done. He was stunned at how well she described the way he set his lights and camera angle. She even explained how he fixed a rear light with a yellow filter and aimed it at their backs to enhance the glow from the sunrise. \n\nAt that point it wasn't clear who was more impressed, Tom or the doctor.\n\n\"Tom is a true professional,\" bragged Angela. \"I knew he'd get a great shot. My biggest worry was whether I could convince him to jump into Lake Michigan. That water was cold.\"\n\nThe doctor looked at Tom who simply raised an eyebrow and cocked his head to one side with a silly grin. \"Hey, anything for the shot,\" he said. \n\nThe doctor thanked them both for the gift and praised them for their ingenuity before delving into their regular session. \"Tom, last week Angela was very candid about her feelings. I'd like to get that same candor from you. You said,\" he picked up his tablet and reviewed his notes, \"the business actually became more important than your wife. I know it will be difficult for Angela but I want you to elaborate on that. How did that happen?\"\n\n\"I don't really know,\" he said. \"It...I don't know, it was a slow process. Angela used to show an interest in the studio. She used to ask questions and make comments and suggestions when I was still struggling to build it up. I really appreciated that. It was like we were partners\u2014both sharing the same dream. Then she stopped asking questions. I'd still come home and tell her about things that happened but she stopped being interested. Then we started fighting. I didn't know it was because of Cayla. \n\n\"I should have paid more attention when she asked about the job. I don't know why I didn't. I'd already had a preconceived idea of the person I was going to hire. I just...I don't know...she was my wife, I never thought of us working together.\"\n\nAngela was sniffling again as she listened. \"I guess that's understandable,\" she whimpered. \"I just wish you hadn't been callus about it. It was like you were mocking me for even suggesting it. It made me feel irrelevant, like I wasn't even worthy of consideration.\"\n\n\"I'm sorry,\" he said. \"I never ever meant to make you feel like that. I loved you with all my heart. I don't know why I dismissed you like that.\"\n\nThey continued to express their feelings through the hour long session. Before they left, Raddick thanked them both again for the picture and said he would hang it on the wall in the outer office. \n\nThings seemed like they settling down a little for everyone when Tom got a call from Audrey James, the Assistant District Attorney. She asked if he and Angela could come to her office. He checked with his ex and made an appointment. ",
        "After the greetings, Ms. James got right to the point. \"Mr. and Ms. Hayden, we have two ways we can go on your case. I wanted to talk to you before making a decision. With your daughter's testimony I have no doubt I can get a conviction for statutory rape. The judge really doesn't have any discretion on sentencing. Mr. Cooper will be sentenced to three to five years. He will be eligible for parole as soon as he has served his three years. If he kept his nose clean, most likely he'd get out. \n\n\"Detective Lobowski has been trying to get Mr. Cooper to confess. Just about the time we thought he would, his lawyer got involved. Cooper will plead guilty to aggravated criminal sexual abuse. It is a class B felony and carries a mandatory one year sentence with no parole. He will also be put on the Illinois Sex Offender Registry. \n\n\"Now I know you'd like to see him go away for as long as possible but I'm thinking of Lana. If I accept his plea he spends a full year behind bars and she doesn't have to testify. I asked you to come because I wanted your input before I make the decision.\"\n\nTom and Angela looked at each other. Everyone knew what Tom was thinking. He wanted to see the guy spend the rest of his life behind bars with a cell mate named Bubba, but that of course wasn't an option. \"What do you think?\" he asked Angela.\n\nShe looked back to the ADA. \"Do we have to give you an answer this minute?\"\n\n\"No, but I would need an answer pretty soon--within a day or two?\" she replied. \n\nThe concerned mother addressed Tom. \"I think we should talk to Lana, see what she says. She's the victim. She's the one who'd have to testify.\"\n\nTom nodded with a sigh. \"Yeah, you're probably right.\" He looked back at Ms. James. \"Would that be okay? We'll talk to her tonight and let you know tomorrow.\"\n\n\"That would fine,\" responded the lady lawyer. \"I'll wait for your call.\"\n\nThat night they sat down with Lana and explained the situation. \n\n\"How long would it take if we go to trial?\" she asked. \"I mean would I have to take time off from school and all that?\"\n\n\"Ah, well I'm not sure, honey,\" replied her dad. \"I know trials take time. I would assume it would take two or three months to get trial started, then\u2014I don't maybe a three or four days, maybe more.\"\n\n\"But if she takes his plea he goes away immediately...right?\"\n\n\"I would think so, yes,\" answered Tom.\n\nLana sat, just staring at into space while she thought of her options. \n\n\"I want to go to trial,\" she said decisively.\n\n\"Are you sure, honey?\" Angela wasn't so sure. She hated the thought of her daughter having to go through a trial.\n\n\"Yes, mom, I'm sure. I want to get up on the stand and look him in the eye,\" she replied. I want to look at him straight in the face when I send him to jail.\"\n\nTom couldn't have been more proud of his little girl. As promised, the next day he called Ms. James and told her of Lana's decision. She complimented him and Ms. Hayden on raising such a courageous young lady and immediately started the wheels rolling for a trial. \n\nIt turned out to be a little easier than Lana and her parents expected. Her testimony was so compelling she didn't leave much for the defending attorney to go after. The jury took only five hours to convict Dayton Cooper on all counts. \n\nIt was over! \n\nWell, at least that part of it was over. Lana would still live with the memories, her mother would still live with the guilt, and her father would live with the anger and sense of injustice. With time and the help of therapy, those things would eventually get easier to live with but they would never go away completely. \n\nTom and Angela continued with their therapy sessions for another four months. With the help of Dr. Raddick they discovered things about each other that they hadn't known previously and they were getting alone great\u2014no fights. He even stayed for coffee sometimes when picking up Lana on weekends. \n\nLana's problems were a little deeper rooted. On the outside she appeared to be fine, but her torment left feelings of mistrust and shame in its wake. She would be seeing Dr. Zarkowski for a while. \n\nWhen the Rhicter and Wright agency opened their Chicago branch they asked Tom to come in and meet the ad executives. Two days later he was working on his first shoot for them. It wasn't anything spectacular. He knew they would test him for a while but he and Cayla started putting in longer hours almost immediately. \n\nThey really seemed to love his work, but there were no guaranties, no contracts between commercial photographers and ad agencies. They could drop him on a whim if they desired so Tom would wait until he felt more secure with their business relationship before hiring more people. \n\nIt was a few months before both parties felt completely confident with the other. Tom was finally called in on a campaign for one of their major clients. This was more than a single ad shot. It was a series of shots that would be used in high-profile ads over a period of time. It was Rhicter and Wright's way of saying, 'you're in.'\n\nCayla had been putting in some long hours. It was time to sit down and talk to her boss. \"Tom, can I talk to you for a few minutes?\"\n\n\"Yeah, sure, what's up?\"\n\n\"Tom, don't get me wrong. I really appreciate all the overtime pay and all those impromptu bonuses you've been given me but I've had two dates in the last three months. I love my work but I need some time for myself. Have you given any serious thought to hiring more people; at least one more.\"\n\nActually he had. \"I do have someone in mind, as a matter of fact,\" he told her. \n\nThat Saturday morning he was all smiles when he stopped by to pick up Lana. As Angela welcomed him inside, Lana heard his voice and yelled down from her bedroom. \"I'll be down in a couple minutes, dad.\"\n\n\"Okay, pumpkin,\" he yelled back. \"Hey, bring something nice with you, a nice dress or something.\"\n\n\"Okay.\" \n\n\"Would you like some coffee while you're waiting?\" asked Angela.\n\n\"Yeah, that would be great.\"\n\nAs Tom sat at the kitchen table, Angela poured him a cup of black gold then took a seat with a cup of her own. \"So, have special plans?\" she asked.\n\n\"Yeah, I landed a new client and I thought we'd celebrate by going to a nice place for dinner tonight--want to go?\"\n\n\"Me?\" she asked, surprise. \n\n\"Yeah, I figure you could use a night out.\"\n\nThe truth was she hadn't been out for dinner since Dayton had taken her out shortly after the divorce was final. \"Oh, Tom, I would love to go.\" \n\n\"Where are we going,\" asked Lana as she rounded the staircase and heard them talking.\n\n\"I'm taking you and your mother out to a nice restaurant to celebrate tonight. Is that okay with you?\"\n\n\"Yeah, of course.\"\n\n\"Good, I'll pick you up at seven,\" he told his ex before he and Lana left for a fun day together.\n\nAngela tried to keep herself busy but she was on cloud nine all day in anticipation of her evening out. She was as nervous and excited as she remembered being on her very first date. Every hour she checked the clock as it slowly crept forward. At five-thirty she decided to start getting ready; after-all, she wanted to look her best. She primped, preened, fixed, and spiffed-up until she was finally satisfied. She knew she had done good when she opened the door and saw her ex-husband's jaw drop to the 'welcome' mat he was standing on. \n\n\"Wow, you look stunning, Angie.\"\n\n\"Thank you, kind sir, you look pretty handsome yourself,\" she replied with a smile.\n\nBoth mother and daughter were impressed as he pulled into the valet area of Plato's Place. \n\n\"Wow, dad, this is cool,\" uttered an excited Lana as the valet opened her door for her to step out. Angela waited for the good looking, young man to do the same for her. \n\nAfter all the troubles over the past year and a half, it felt good for everyone to enjoy a night out as a family...even if it was an illusion. Tom ordered appetizers that they all could munch on while waiting for the main course then initiated some small talk.\n\n\"How's work, Angie?\"\n\n\"Ugh, I wish I could say it was stimulating but it's still the same work I've been doing for years,\" she replied with a chuckle. \"Tell me about this new client of yours. It must be a pretty good one.\"\n\nHe had to smile as she unknowingly led him with the perfect segue. \"That it is,\" he confirmed. \"One of the largest and most prestigious ad agencies in New York just opened a branch here in Chicago and I've been working with them. So far they haven't had any complaints and I'm pretty confident that by this time next year I'll be doing double of what I am right now.\"\n\nBoth she and Lana looked at him in minor shock. \"Wow, dad, that's great.\"\n\n\"Yes, Tom, congratulations; that's so exciting.\"\n\n\"Yeah, it is. I'll be working on national and world-wide campaigns. We're in the middle of one right now for Rolli watches.\"\n\n\"Oh, Tom, that's wonderful.\"\n\n\"Thanks; it poses some problems though. I'm going to have to hire some more help. It's already gotten too big for just Cayla and me and if it keeps going the way it has been I'll be looking for bigger space next year.\"\n\n\"I'm happy for you, Tom.\"\n\n\"Yeah, me too, dad.\"\n\n\"Thank you, ladies. Cayla's threatening to quit if I don't get some help so I've got to find someone pretty quick. What I'm really looking for is someone who can think outside the box; someone who can come up with fresh, new ideas.\"\n\nTom had to keep from laughing. While he was talking, Lana kept pointing to her mother. Angela, of course, was looking at him as he spoke and didn't see her daughter's, not too subtle, signals. Tom smiled and winked. That brought a giant grin to the pretty young lady's face.\n\nTom continued. \"You wouldn't know anyone like that, would you?\" he asked his ex. \n\n\"Me? I don't really know anyone in your business except you and Cayla,\" she replied.\n\n\"Really? I just thought you might know someone\u2014you know, maybe someone with auburn hair and green eyes. Someone who looks fantastic in black cocktail dress.\" \n\nIt was finally starting to dawn on her. Her eyes widened. \"Tom, are...are you asking me to...\" she stopped for a second to study his face. She quickly went over what he said in her mind before making a fool of herself. \"Are you asking me to come work for you?\"\n\n\"Well dah, mom. Do you know anyone else with red hair and green eyes?\" chimed her smartass daughter.\n\n\"I'm not rich but I can give you twenty-five dollars a week more than you're making now. I'm also upping your child support by a hundred a month so that should help as well.\"\n\n\"Are...are you sure? I'm mean, you're not just doing this because of what I said in therapy are you? How much help can I really be?\"\n\n\"Angie, when I finally decided to hire more help I thought back to our family portrait. Rarely does someone come into the studio and not mention what a great shot that is. I remember how you pushed me, challenged me. Right now I need that, someone who will push me beyond my limits. You'll work from eight till three. That way you can get home about the same time as Lana.\"\n\nAngela almost knocked over the waiter who was coming with their entrees as she jumped up to hug Tom around the neck. \"When do you want me to start?\" she asked with excitement.\n\n\"Well, when can you start?\"\n\n\"I should give two weeks notice, Tom. Would that be okay?\"\n\nHe smiled and nodded.\n\n\"Okay, I'll hand my notice in Monday morning.\" Angela was so excited she could hardly eat. \n\nThat Monday Cayla wasn't very enthused when Tom told her who he hired but the more she thought about it, the more she liked the idea and welcomed Angela with open arms on her first day. \n\nTom needed one more hire. A young, twenty-two year old college graduate by the name of Roger filled the bill to round out his team. It turned out to be a team that Rhicter and Wright would count on more and more in the upcoming months. \n\nIt had been over two years since his divorce was final. They all had gone through more hardships and trauma than any one family deserved, but things finally seemed to be working out...except for one of them... \n\nDayton Cooper was having a hard time in prison. He found the other inmates hated pedophiles almost as much as fathers did. He was shanked the first month he was there and wound up in solitary for his own protection. \n\nTom's prediction that his business would double in size came to fruition. \n\nLana was in her junior year of high school and growing into a beautiful, well-adjusted young lady. \n\nNow it was time for Tom to get on with his personal life. Instead of renewing the lease on his apartment he put a down payment down on a wonderful little colonial, three bedroom house surround by a tree laden, one acre lot. Even better was the fact that it was in Lana's school district and not all that far from the other house and her friends. She would be the first to learn of his purchase.\n\n\"So what do you think?\"\n\nThey stood just inside the front door, looking into the empty living room.\n\n\"Dad\u2014you bought a house?\"\n\n\"Yeah, I can't keep living in an apartment all my life. I know it doesn't look like much without furniture but I have five weeks until my lease runs out so I've got time to shop around.\"\n\n\"Dad, it's wonderful,\" she said while roaming around. \"A nice size kitchen, too. How many bedrooms?\"\n\n\"Three. It also has a full basement. I'm going to finish it and put my office down there. That way you can have your own bedroom and I can keep the other as a guest room.\"\n\nTom took his daughter for a tour of the place and let her select which of the two available bedrooms she wanted. She of course picked the one with the two large windows. \n\n\"Can I tell mom?\"\n\n\"I don't see why not.\"\n\nLana pulled out her cell phone and took several pictures inside and out. \n\nWhen Tom dropped Lana off later that night, she couldn't wait to show her mom the pictures. Angela tried to share in her daughter's exuberance but the news of her ex buying a house was like another nail in her coffin. Obviously he entertained no thoughts of ever moving back home or reconciling. \n\nThe following Monday, Angela and Cayla were already collaborating on a new concept for one of their smaller clients when Tom walked through the door of the studio. \n\nAngela looked up and smiled. \"Congratulations, Tom. Lana showed me pictures of the house you bought.\"\n\n\"You bought a house?\" parroted Cayla. \"Why didn't you say something? Where?\"\n\n\"Arlington Hills,\" he confirmed. \"I've always liked that area. I got the place for a steal and couldn't pass it up.\" \n\n\"Why didn't you say something?\" asked Cayla for the second time.\n\n\"It just didn't come up. I'm still in the apartment until the end of next month so I haven't moved in yet. I want to do some painting and I have a ton of furniture to buy. I'm going to put my bed in the guest room and buy a new one for Lana and another new one for me. It'll take a while before I get it the way I want.\" \n\n\"Got any pictures?\" asked Cayla.\n\nHe chuckled. \"You'd think I would, wouldn't you. No, I don't. I promise I'll take a few shots next time I'm out there. Now, come on, ladies, we have work to do.\"\n\nOver the next few weeks, Tom went out shopping almost every night. He took Lana out over his weekend with her and let her pick out her own bedroom set. With only three days left on his lease, Tom was moving the last of his stuff from his apartment to the house. The night was still young so he picked up his phone.\n\n\"Hello, Tom. Is something wrong?\"\n\n\"No, why do you think something's wrong?\"\n\n\"Well, you never call during the week unless you're retuning my call for something. I just wondered.\"\n\n\"Nothing's wrong. I just wondered if you'd like to come over and see the house? I'm taking a few things over there and I if you wanted to meet me I'd give you the twenty-five cent tour. Bring Lana.\"\n\n\"I'd love to see it, Tom, but Lana's at a school function tonight. I have to pick her up at nine o'clock. How far is it?\"\n\n\"It's ten minutes from you. Got a pen and paper?\"\n\nAngela quickly got something to write on and took down the address. He explained how to get there and told her he'd meet her there in half an hour. She beat him by two minutes. \n\nAs Tom walked her through the house she did all the right things. She smiled and told him how much she liked this and that, she fawned over a couple pieces of furniture, raved about the fireplace, and tried to be happy for him, but it wasn't working. \n\nThe enthusiasm in his voice as he talked about things that still needed to be done, was breaking her heart. They had been getting along so well. They hadn't had a single fight since stopping the therapy sessions. She was so praying that eventually they'd get back together. The last ounce of hope died when he took upstairs to show her the bedrooms.\n\n\"A king size bed?\" she didn't mean to utter it out loud but she had. \"That's a lot of bed for just you, isn't it?\" This time she did mean to say it out loud. Unfortunately, she didn't disguise the jealously in her voice very well.\n\n\"Well, hopefully it's not just me forever,\" he replied. \n\nAgain, she had to fight back tears. She wanted to just run out of the house and cry her eyes out but she couldn't do that. Not only did she have her dignity to think about but her job as well. She loved it and didn't want to jeopardize it by complicating things. \n\nTom showed her Lana's bedroom and the furniture their daughter had picked out, then asked her to join him for a cup of coffee in the kitchen. They sat down opposite each other at the little table he had brought over from his apartment. Tom looked a little pensive, like he wanted to say something but wasn't sure if he should. But he had to ask...\n\n\"Angela, something's been bothering me for a long time and if we learned anything from Dr. Raddick, it's to bring things out in the open and not assume or let our suspicions fester...right?\"\n\nThis sounded like bad news. Angela wasn't sure how much more she could take. Apprehensively she answered. \"Yeah, I guess.\"\n\n\"Okay, then I have to ask, I know you said in therapy that you weren't sleeping with Dayton or anyone else before our divorce, was that true? Because I have to tell you, I really thought that's what all the fights were about.\"\n\n\"So help me, Tom. With all the problems we were having, I never even thought of cheating on you. It just never even occurred to me. I...\" she stopped for a moment to gather her thoughts. \"I think I was probably so mad at you all the time that I projected that anger to men in general. I know the men at work kept away from me for a long time while we were having our troubles. It wasn't until you left...it...left such a hole. That's when Dayton saw his chance. Hell, I'd never even so much as had coffee with him before that...honest.\"\n\nAngela was getting nervous as Tom quietly sat, thinking over what she said. What seemed to her like an hour of silence was actually only a few seconds. \n\n\"I believe you,\" he told her. \"I really wish we had gone to therapy before getting divorced. We probably wouldn't be where we are today\u2014two years down the drain; two years of hurt and anger, what a waste.\"\n\nThis was the first time, at least in her presence, that Tom had shown any remorse. Could she dare pray for a smidgen of hope, or would she just open herself up for another downfall? A million things ran through her mind. What should she say?\n\nTom put her out of her misery. \"Want to try again?\"\n\nSuddenly her heart felt as if it would leap from her chest. \"Did I hear you right? Did you just ask...what...to get married again?\"\n\n\"Over the last few months you've turned back into the woman I first fell in love with. Almost nightly I've gone home after working with you and gone over things in my mind. I've recognized the same traits in your personality as you had when we were younger, the same traits that made you so enduring. This is not a decision I've made lightly. I've given it a lot of thought,\" he told her, emphasizing the word, lot. ",
        "\"I thought of just asking you and Lana to move in but I'm not going to have my daughter's parents living in sin,\" he responded with a smile. \"Yes, Angela Hayden, will you marry me?\"\n\nShe was so overwhelmed she almost forgot to answer. \"Tom, I am so sorry for everything I put us through. I will spend the rest of my life trying to make it up to you and Lana. I...\"\n\nHe couldn't wait any longer. \"So is that a yes?\"\n\n\"Oh\u2014yes, of course it's a yes! Oh my God, yes, yes, yes!\" Angela jumped from her chair and almost tackled her new fianc\u00e9. \n\nHe stood, took her in his arms, and for the first time in over two years, they shared a passionate kiss. \n\nAngela wanted to consummate things before he changed his mind. She looked into his eyes and saw the love she thought she had lost forever. \"You know that big bed of yours really needs to be broken in,\" she said in a seductive voice. \n\nTom glanced at his watch. \"You have to pick up Lana at nine o'clock, hon. That barely gives us time to get our clothes off.\"\n\n\"Don't move,\" she told him, placing a peck on his lips. Angela hurried to her purse in the living room and took out her phone. \"Hey mom, can you pick Lana up at the school in forty-five minutes? Yeah, she'll be coming out by the gym door. Yeah\u2014hey, would I be pushing it by asking if she could stay the night? I'll tell you later but it's good news and it involves Tom...yeah,\" she said with a chuckle. \"Thanks, mom. I'll talk to you later...yeah, bye...love you too, mom.\"\n\nAngela threw her phone back into her purse and looked at her fianc\u00e9 with a big grin. \"Now, as you were saying...\"\n\nThey both took off upstairs. She was in front of him as they neared the doorway to the master bedroom. \"Hold it,\" Tom demanded.\n\nAngela stopped and turned around to look at him warily. Tom approached, put his right arm around her back, his left arm behind her knees, and scooped her up. Without a word, he carried her over the threshold and set her down on the bed. His gallantry brought her back to their wedding night. She remembered how her heart pounded and swelled with love...just like it was at that moment. \n\nHer eyes glistened with tears of joy. Tom reached down with a finger and gently wiped them away. \n\n\"I've never stopped loving you, Tom; not from the moment I first saw you stick up for Mary Ellen Hunter when they called her fat in high school. That's when you became my knight in shining armor.\" \n\n\"Mmmm, Lady Guinevere,\" he whispered as he nuzzled her neck.\n\n\"Yes, my Lord,\" she answered with a breathy voice.\n\n\"Shut up.\"\n\n\"Yes, my Lord.\"\n\nTom hadn't been a monk over the last couple of years. He'd had several dates that ended with erotic pleasures of the flesh but he'd never found anyone that was more than simply companionship or a good roll in the hey.\n\nAngela gasped as she felt his touch. She closed her eyes and let the erogenous sensations carry her away to her own personal euphoria. Until that moment she hadn't realized how much she longed for the passion of this man's soul. Every touch, every little kiss, every sensual contact was charged with devotion. \n\nThe anger and pain that had plagued their relationship simply melted away with every stroke of his love. With her eyes closed tight, her head thrown back, and her body arched to meet each penetration, Angela gripped the surrounding sheets with all her might and screamed with rapture. \n\nStill hard and not having come himself yet, Tom pulled out and waited before using his tongue to tease and manipulate her engorged clit. \n\n\"Oh my God,\" rung out again and again, until he slipped his love tool into her again. This time they came together.\n\nIt was several minutes before either could speak. Angela broke the erratic respiratory tempo of her breathing long enough to ask a question between gasps for air. \"Tom, obviously we're going to live here. What'll we do with the other house?\"\n\n\"Sell it. There's too many bad memories in that place for everyone. I want to start fresh...all of us. Lana will still go to the same school but she won't have to go home and be reminded of being molested every day and you won't have to be reminded of living with the man who did it\u2014besides, my bed would never fit in the bedroom over there and I'll never sleep in that other bed again.\"\n\nAngela realized that he didn't buy the house for himself, he bought it for them, all of them\u2014his family. \"I love you, my knight in shining armor.\" \n\nTom's grin was so wide it hurt his cheeks. \"I love you too, Lady Guinevere.\"\n\nThe next morning they drove over in the same car to pick up Lana. Angela's mom waited all night to hear the news. Something good pertaining to Tom was all she got from her daughter the night before. Angela's parents and Lana were all sitting down for breakfast when she and Tom walked in wearing two very big smiles.\n\nThey were a little surprised to see Tom. \"Hi, kids,\" Eileen greeted them. \"Are you guys hungry? There's plenty, I'll make you some,\" she said, starting to get up.\n\nTom quickly spoke up. \"You sit and enjoy your breakfast, mom. Honey, have a seat,\" he said, pulling a chair out for Angela. \"I'll make us some eggs.\"\n\nAngela's parents, along with Lana sat in stunned silence. Angela smiled as she looked at everyone's astonished faces. \"Oh, didn't I tell you, we're getting married again.\" \n\nPandemonium broke out with yells and screams of happiness. Lana jumped up from her seat and hugged her mom with all her might then ran to her dad and did the same to him. \n\nAngela's father broke out in a laugh. \"I knew you guys couldn't stay mad forever, I just knew it!\"\n\n\"Where are we going to live?\" Lana asked.\n\n\"In your dad's house,\" her mother responded.\n\nLana replied with an enthusiastic, \"Good.\"\n\n*\n\nIt was a small wedding. Angela's father walked her down the aisle. Lana was her maid of honor. \n\nLana continued with therapy until she graduated high school. The new environment of college acted as continued therapy as she met new friends and found a guy she would eventually fall in love with and marry.\n\nAlthough she never talked about it again, Angela would never fully forgive herself for not recognizing Dayton for what he really was, but thank God, Tom did. Their love only grew deeper. \n\nThe End."
    ],
    "authorname": "laptopwriter",
    "tags": [
        "photography",
        "drama",
        "psychologist",
        "marijuana",
        "cops",
        "family portrait"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-family-torn"
}