{
    "title": "Two Couples, One Cabin: A Seduction",
    "pages": [
        "A gradually evolving tale of trading lovers, submitted for your pleasure as part of the Literotica Valentine's Day 2018 contest. Enjoy!\n\n***\n\nThe first time I saw Selena I found myself totally, helplessly, unable to look away. It was a snowy January morning. My girlfriend, Rachel, wanted to take advantage of the weather for a quiet weekend brunch at a restaurant that would normally be packed. We strolled in and made our way to the hostess station, but no one was there.\n\n\"Sorry! Hi!\" said a young woman, rushing back to her station.\n\nShe quickly grabbed some menus and then looked up at me. When our eyes met, I was hooked instantaneously. Selena was a gorgeous, young Latina, with a lithe body and bright, expressive eyes. She had long, dark brown, curly hair. Her face lit up upon seeing me, as if she was recognizing an old friend, despite the fact that we'd never met. I almost expected her to throw her arms around me and squeeze me with excitement.\n\n\"Two for brunch?\" she asked, cheerfully.\n\n\"Yes,\" said Rachel, who fidgeted with the buttons on her coat while I tried to recover from my stupor. She was oblivious to my instant attraction. Selena showed us to a table, but it was crammed between two other couples so Rachel asked for a different one. Like a dancer, Selena waltzed us away to another table in a more private setting.\n\n\"Have a great brunch!\" Selena said, turning to face me with a beaming smile.\n\nWhile Rachel mumbled about the snow on her boots and continued to fumble with her coat, I quickly sat down and started observing Selena. She did everything with the greatest possible enthusiasm. Every server that passed by she greeted with a wide smile and her equally smiling eyes. When patrons arrived, she greeted them with a cheerful welcome and ushered them to their seat as if she'd been waiting all morning for that single opportunity. I was fascinated.\n\nI glanced over at Rachel. She was already on her phone, silently scanning Twitter, so I resumed watching Selena. I could tell that she knew she was beautiful. Her arms were always finding their way into the air for a cat-like stretch, or to run her fingers through her dark, kinky curls. She wore a long, sleeveless, white lacy top over tight black jeans, which only accentuated her slim and toned arms. From the look of her chest, I imagined her breasts were larger than one would expect from her thin frame, and nicely shaped. I examined her from every angle, in every sort of light, until she finally caught me sneaking peeks.\n\nMy heart was racing, I hadn't looked at the menu yet, and Rachel was already asking me which drink I wanted. I made a quick decision, and began to curse the fact that my seat wasn't facing away from the hostess station. On the one hand, I badly wanted to watch Selena all morning long. On the other hand, I didn't know how I was going to get through the meal.\n\nGranted, Selena wasn't the kind of woman you'd see on a runway or in a fashion magazine. She had a more natural, girl-next-door beauty. But I found myself obsessed with her every movement, from the theatrical way she rolled her hands over one another to present an empty table to a hungry family, to the way she occasionally added a skip to her steps as she returned to her station.\n\nPerhaps it was just where I was with Rachel, someone who, to my disappointment, had long since lost her zest for life. I found watching Selena refreshing and uplifting; a beautiful young woman with a life full of possibilities and excitement stretched out before her. I found myself craving a return to such a feeling. I wanted to share it with her.\n\nI got through the meal and waited for the mysterious hostess to return from someplace beyond the bar that she had briefly drifted off to. I knew where the bathroom was, but it didn't matter. I wanted her to tell me. When she appeared, I quickly excused myself. Rachel never looked up from her phone.\n\n\"Excuse me, where's the restroom?\" I asked, as I quickly approached Selena.\n\nHer eyes lit up again as she saw me approach. \"Come, I'll show you!\" she exclaimed, leading me back in the direction she had just come from. We reached a set of large, iron doors. Selena threw her arms up into the air again, showing the door to me as if she were presenting a prize package on the Price Is Right.\n\n\"Right through here!\" she explained, cheerfully. \"Just take a right and go to the end of the hall.\"\n\n\"Thanks!\" I said.\n\n\"You're welcome!\"\n\nI savored every bit of enthusiasm she offered in this brief exchange. It was like a warm hug. All the way to the bathroom and all the way back I couldn't get her out of my head. I badly wanted to believe she thought I was as good looking as I thought she was, but who could tell, given the positive energy she offered everyone.\n\nWhen I returned to my seat, I was already trying to convince myself that it was just her style as a host; that every guy that came in for a meal looked at her the same way. That she liked the attention, but saw it as an opportunity to be picky with her suitors, and ultimately would only express interest in taller, richer, handsomer guys than me.\n\n\"Have a wonderful day!\" she said, as we passed each other on my way to my seat.\n\nHowever, her smile lasted a good while, turning her head as she passed, as if observing me curiously. I shook it off, but she smiled and emphatically wished me well a second time as Rachel and I left the restaurant. She hesitated, her eyes intently searching mine, but I just couldn't read her, and anyway, there I was stuck with Rachel.\n\nI let it go, only briefly recalling the encounter now and then. More than a month passed, and I moved on from Rachel to April, who wasn't lacking in her sense of joy or adventure. Little things constantly reminded me of how much more exciting our relationship was. For example, if I walked in on Rachel when she was in the shower, she shrieked and told me to get out, despite the fact that we'd previously been intimate. April, on the other hand, would peek around the corner of the curtain and ask if I wanted to join her.\n\nBefore long, I'd be climbing into the steam-filled shower, aroused by the sight of her glistening wet body. She'd make room for me, and begin to lather her hands with soap while I relaxed under the warm flow of water. Then we'd take turns soaping each other's bodies. Her eyes would light up upon witnessing my enjoyment while soaping her breasts. She'd excitedly reach down and wrap her slippery fingers around my shaft, then move them back and forth with the smooth lubrication of the suds enhancing my enjoyment. We'd gaze at each other, amused by the thrill we both received from wanting to pleasure each other. Nothing could make me more satisfied, or at least I thought.\n\n\"Oh, hey, Alex!\" April said, before running out the door, one morning. \"I forgot to mention-- I'm meeting up with a new coworker and her boyfriend after work. Do you want to join us for drinks, and possibly dinner?\"\n\n\"Sure,\" I said.\n\n\"Great! I'll text you,\" replied April, and she was out the door before I could get any more details.\n\nI forgot all about the matter until I received a text late that afternoon with a time and location, so I made my way there. I wouldn't have thought much of the matter -- I often hung out with April's coworkers, and she with mine -- but this time I was caught off guard with a welcome surprise. No sooner had I entered the bar, did I spot April in a nearby booth, sitting next to a man I didn't know, and a woman who's back was facing me. My heart stopped. Somehow, I instantly recognized her long, curly hair. She turned and our eyes met. It was the beautiful hostess from the restaurant.\n\nHer eyes lit up upon seeing me, but I knew from experience that she welcomed everyone this way. April waved at me as I approached, but all I could do was stare at the mysterious hostess I had obsessively watched some time ago.\n\n\"Hi!\" Selena exclaimed as I reached the booth.\n\n\"Hi,\" I replied, bewildered.\n\n\"This is Matt, and my coworker Selena,\" April said. I could finally put a name to the enchantment that had me so shaken up.\n\n\"Hi there,\" said Matt, briefly standing to shake my hand. I shook it and turned my attention to Selena.\n\n\"Nice to meet you!\" she said, with great enthusiasm.\n\n\"Hi, I'm Alex.\" I felt myself staring for a moment, and something seemed to register with her.\n\nShe cocked her head. \"You've been to Osteria Luca a couple times, haven't you?\"\n\n\"Oh! Y-yeah, I have,\" I said, surprised she recognized me after all this time. In truth, I had only seen her there once, and couldn't bring myself to go back again after that.\n\n\"Cool. Yeah, I used to be the hostess there!\"\n\n\"Yeah... I remember!\" I said, smiling. There was a brief moment of awkward silence, and I worried that I was revealing my feelings to her.\n\n\"Here's the menu,\" said April, interrupting.\n\nI ordered a beer and settled into the flow of conversation, leaving the awkward moment behind me. Still, I struggled to avoid taking constant looks at Selena next to me, just as I had done at the restaurant. As the conversion ensued, I clung to Selena's every word. Her boyfriend was a somewhat muscular guy, with a full beard and a plaid shirt. He looked like he'd be the mascot for something. I dismissively pegged him as the type of guy who brewed his own beer in a shed he custom built himself, but he seemed perfectly cool as I got to know him... even if I was a little jealous.\n\nI leaned that Selena had left the restaurant a while ago, and started working with April a week earlier. While we talked, I couldn't help but notice that April seemed as absorbed in her conversation with Matt as I was with Selena.\n\nIt remained this way over the weeks ahead, as we quickly became fast friends; meeting for drinks or dinner, and going out together on the weekends a couple times. Neither April nor I seemed to mind how much enthusiasm we each had toward seeing them both.\n\n***\n\nApril and I finally had the conversation, soon thereafter.\n\nShe'd just returned from the bathroom, after we'd shared an enthusiastic quickie before bed. She'd somehow seemed both absent and kinky at the same time; as if she was enjoying the fuck, but only because something else was on her mind. April's pale, nude form moved smoothly through the room toward the bed, like a ghost. She reached up and removed the tie in her hair, letting it fall down over her shoulders. I watched her soft breasts gently sway back and forth as she climbed back under the covers with me to snuggle.\n\nI'd had the conversion sooner or later with every single girlfriend I'd ever had. It always started innocently, with her asking out of the blue, \"Which friend of mine do you find most attractive?\" Sometimes it was further qualified, with a \"you know, if you weren't with me\" or some other simple extension. That never made it less daunting. I knew the trick. I was being tested and had to give the right answer so as to not trigger the jealous response that no boyfriend ever wanted to face.\n\nEach and every time the question came up, I responded in clever ways that impressed even myself. Despite that, this time was different. For some reason, everything I'd ever learned went straight out of the window.\n\n\"Oh, that's an easy one!\" I blurted out, before realizing what I'd done. I immediately feared that it couldn't possibly end well for me. I worried that if I was forced to elaborate, it would be the end of hanging out with Selena.\n\nStrangely, April just laughed at my response. \"Who?\" she asked, full of curiosity.\n\nI tried to think of some clever way to get out of what I'd done. Maybe I could frame it as just a joke? Maybe I could reply, \"You! Silly!\" But I knew April. She'd never buy that. I sucked it up and prepared to take the punishment.\n\n\"Who?\" she repeated, propping herself up on her side and smirking at me.\n\n\"Um... Selena,\" I said quietly.\n\n\"Mmm hmm,\" she said, nodding knowingly. \"That's funny.\"\n\n\"Why?\"\n\n\"Because I'd choose Matt.\"\n\n\"Wow, really?\" I couldn't believe she was so eager to give her answer. But, also, I felt that I knew what her answer would be, just as she seemed to know what I'd say. \"I guess that's not surprising,\" I said, trying to steal her thunder.\n\nApril laughed again. \"Yeah, yeah, yeah. Well, I basically knew who you'd pick already, too. How funny is that, that we picked the same couple?\"\n\n\"Yeah.\" I couldn't believe what was happening. There wasn't a shred of anger or jealousy in April's responses, or her body language. In fact, she seemed excited. \"Do you think they'd choose us?\" I found myself saying in jest.\n\n\"Oh man, if they did, we might have to become swingers!\" she said, chuckling.\n\nI laughed. April lay back down on the bed and stared at the ceiling. I started to wonder if she was serious. Was she thinking about Matt earlier, when we were going at it? There was a long bout of awkward silence. I wondered if she was daydreaming about such an idea, as if it could really happen.\n\nFinally, April said, \"Anyway...\" and changed the subject. The topic didn't come up again until the following week.\n\n\"Do you want to go up to the cabin for Valentine's Day?\" she had asked.\n\n\"Oh, sure. That'd be fun,\" I said. We sometimes rented a small Airbnb cabin by a lake in the Catskills for romantic getaways.\n\n\"We can take the Friday off and make a long weekend out of it.\"\n\n\"Okay!\" I said, enthusiastic about her idea. I didn't realize more was coming, but a few moments later, she proposed a modification to the plan.\n\n\"Do you think we should invite them?\" she asked, hesitantly.\n\n\"Who?\"\n\n\"Sorry, Matt and Selena, I mean,\" she explained, \"There's more than one bedroom...\"\n\n\"Oh. Sure, why not?\" I was suddenly excited at the idea of sharing a cabin in the woods with Selena, but surprised that April had suggested it, given the recent conversation we had about them.\n\nApril laughed, \"Maybe we can finally get moving on that swinger business!\" She gave me a gentle jab with her elbow, to emphasize that it was a joke, but I wondered...\n\n\"Yeah right...\" I said, smirking and rolling my eyes. She gave me a twisted smile.\n\n\"I see the way you look at her. Don't tell me you wouldn't go for it if I gave you the chance.\" I snickered. \"Tell me,\" she added. I still couldn't make sense of her attempt to press me on it.\n\n\"Are you saying that to test me, or gauging my interest so you can see if there's a chance you can get with Matt?\" I teased.\n\nShe laughed and shrugged innocently. \"Ohhh, I dunno...\"\n\nWe both laughed. I felt a weight lift off my shoulders. I couldn't believe we were both being so open about sexual tension we felt toward our friends.\n\nAfter a few minutes she added, \"In all seriousness though-- if I asked you, and you had to tell me the absolute truth... and don't think I can't tell if you're lying or not... would you have meaningless sex with Selena if you could, and she was into it? And if I wouldn't hold it against you?\" I detected a note of seriousness in her voice.\n\nNot knowing how to react, I sputtered, \"I-- um...\"\n\nShe laughed. \"Okay! If you don't have an immediate 'no' then I know what that means...\"\n\n\"Wait, I mean...\"\n\n\"Save it. I got my answer. It's fine!\"\n\n\"You didn't let me finish.\"\n\nShe crossed her arms and said, \"Okay. Finish. Tell me the truth. But I already know the answer now, and if you lie to me...\"\n\nI sighed. Was this all a very elaborate ploy in the end to trap me? It didn't matter anymore. She was right. She knew the answer. \"Fine, I guess... if you really, truly didn't care, then yes, I could have meaningless sex with her.\" She smirked at me. I quickly added, \"Obviously you know I'm attracted to Selena. But I also would never risk ruining anything with us.\"\n\nApril grinned. \"There we go. The truth comes out.\"\n\n\"And what about you? Are you telling me you wouldn't also take that opportunity to get with Matt?\" I asked, defensively.\n\n\"Nope.\"\n\nI was startled by her quick, brief, and unexpected response. \"No?\" I asked.\n\n\"Nope,\" she said confidently. \"Given the chance, I'd fuck him so fast he wouldn't be able to get himself out of bed for a week.\"\n\nI stared at her blankly. \"Seriously? Are you shitting me... or?\"\n\n\"No, I'm serious,\" she laughed.\n\n\"So you put me through all that guilt, only to tell me point blank that of course you'd fuck Matt?\"\n\n\"Gosh. When you put it that way, it almost sounds like you should have just been as straight with me from the get-go!\"\n\n\"Okay, I deserved that,\" I groaned.\n\n\"So... now what do we do?\" she asked, exhibiting mild nervousness for the first time.\n\n\"I dunno. What do you think?\" I said, turning it back on her.\n\nShe thought for a moment. \"Well, we could make a plan to find out what their deal is, at the cabin. Like, should we... um... try to seduce them individually?\"\n\nMy mind was now fully blown. \"Yeah, let's compare notes and coordinate,\" I said, half-joking.\n\n\"Haha, are we swingers or spies?\" she laughed.\n\nAll of a sudden, there was an unmistakable giddiness visible in each of us, as it began to fully register that we not only had granted each other permission to attempt a fling with one of our friends, but we were actively planning and supporting each other in the process. I didn't know how to cope with either the sudden freedom that came with the prospect of a more open relationship, nor did I know how to cope with the immense possibility that I might be able to fool around with Selena, for whom I held such a strange fascination.\n\n***\n\nI heard through April that Selena and Matt were excited about the idea. Soon, I found myself in a rental car sitting next to Selena as April drove the four of us up to the Catskills. We stopped at a farm-to-table restaurant, tried some craft beer at a local brewery, and then made our way far into the woods to the cabin by the lake. Along the way, I found myself still pondering how on Earth I'd try to seduce Selena. I could tell the same sort of questions were on April's mind.\n\nAfter arriving, April began to give Matt and Selena a tour.\n\n\"Wow, I wasn't sure what to expect, but this place is the real deal!\" Matt exclaimed, upon seeing how nice it was.\n\n\"Yeah, now I feel stupid for wondering if there'd be hot water,\" added Selena.\n\nApril showed them the lodge style main room, with the kitchen area set off to one side. Then she presented the two bedrooms, across the hall from each other, along with a full bathroom.\n\n\"Just be warned that if things get a little steamy with your valentine; we all might end up treating each other to some interesting sound effects,\" April laughed, knocking on the wall to demonstrate the lack of sound proofing.\n\nSelena and Matt both gave an embarrassed laugh. It occurred to me that April was already starting to test the waters with them. April finished the tour by pointing out the small hallway off the living room, leading to a half bath, and the sauna.\n\n\"Wow, a sauna, too!\" exclaimed Matt, who was thoroughly impressed by the cabin.\n\nSoon we'd all settled into the comforts of our cozy cabin in the woods and April made her next move.\n\n\"Matt, do you think you can help me run to the market in town quickly? We can load up on some groceries to carry back for the weekend.\" As I watched Selena, I wondered if she would be suspicious that April asked Matt and not me. Cleverly, April added, \"I trust your beer selection. You're the expect, after all.\" It was true. He was.\n\nMatt quickly agreed and they hopped into the rental car, so I took the opportunity to spend some time with Selena alone, for the first time.\n\n\"Wanna check out the lake?\" I asked, casually.\n\n\"Yes!\" she said, leaping excitedly off the couch.\n\nWe threw our jackets on and headed outside, walking onto a small wooden pier to look out across the water. I stood there watching the air blowing her hair about, as she smiled and took in the surroundings.",
        "\"It's beautiful!\" she commented.\n\n\"Yeah. You should see it in the summer. Unfortunately it's too cold to swim in or anything, so no skinny dipping this weekend,\" I joked.\n\nShe laughed. \"Oh my god, that would be hilarious. ... Can't people see you though?\" Clearly she took me seriously, even though April and I hadn't ever actually skinny dipped there. I made a mental note to fill April in on this information, just in case our stories needed to align at any point.\n\n\"Nope, we've never seen anyone come by. So unless someone across the lake has a telescope...\"\n\nShe laughed again. \"That's awesome.\"\n\nI decided the skinny dipping was a fun idea, but a dead end, given the chilly weather. Still, her reaction was promising. We went back inside and Selena curled up on the couch with a wool blanket. She offered me a seat beside her. We got under the covers together.\n\n\"We can make a fire this weekend if we chop some wood,\" I mentioned, noting that it was indeed a little chilly inside as well.\n\n\"Oh, great! That would be so romantic!\" she exclaimed, cheerfully. We smiled at each other, as if we were talking about sharing a romantic moment between us.\n\nIt wasn't long before April and Matt returned, and the day went on. When evening began to settle in, we played several rounds of cards and went through plenty of beer. After a while, it seemed the right time to head to our bedrooms, and we wished each other a good night.\n\n***\n\n\"Hey, check out this cat video,\" April whispered to me, as we curled up in bed together. She stuck the brightly lit screen in front of my face, and I laughed. After a few moments, she appeared thoughtful and abruptly switched topics, asking, \"Do you think they're having sex?\"\n\n\"Ha, I dunno,\" I replied. \"I don't hear anything.\"\n\n\"They're probably trying to be reaaaally quiet, after what I said earlier,\" she snickered.\n\n\"Seriously. Speaking of which...\" I said. I could see April perking up. I proceeded to tell her about the skinny dipping conversation, making sure to bring her in line with everything I'd said, clearly illustrating my own nervousness about our plans and getting caught in a lie.\n\nApril listened with rapt attention, then proceeded to tell me about her own conversation with Matt on the way to the market. She had continued her train of thought from earlier, saying, \"Sorry about the joke earlier about... um... making noise in the bedroom.\"\n\n\"Oh, no problem!\" he responded, reassuringly. \"I'll keep it in mind...\" He grinned.\n\n\"Well... if you need some privacy, let us know. But... we're not exactly the type to keep anything a secret so.. you know... you've been warned,\" April added with a smile.\n\n\"Ha! That's fine by me,\" he replied. \"Go for it!\" There was more, too. Matt had asked, \"How much beer should we get?\"\n\nApril had replied, \"Um... enough to keep us drunk through the whole weekend, but not enough for our clothes to come off. Actually, fuck it. It's Valentine's Day weekend. Enough for anything-goes!\" They both burst out laughing.\n\n\"Okay, enough for drunken debauchery. That, I can handle,\" he had said.\n\nApril confessed that, like me, his apparent openness about the mention of something naughty only fueled her desire to proceed with the plan. We agreed to find ways to spend more time alone with them, to continue this investigation, and then she fell asleep.\n\n***\n\nThat night I tossed and turned for a while, until I finally just accepted the bout of insomnia that had taken hold. A mixture of nervousness and excitement kept me up, thinking about Selena in the next room, and wondering what would come of the secret plans that April and I were devising. I decided to get up and wander into the kitchen, quietly crossing the darkened room in my t-shirt and boxers. I opened the fridge, briefly disturbing the darkness with a painful glow, then removed some snacks and carried them to the kitchen island.\n\nAfter a few minutes, Selena wandered in. At first she didn't see me, stumbling through the shadows while rubbing her eyes. As she grew close, I discovered that she wore no bra beneath her t-shirt. For the first time, I could make out the distinct shape of her breasts, though the fabric was not sheer enough to see anything in detail. Her t-shirt was not long enough to cover her panties. At times, her bellybutton appeared momentarily. I looked down, anxious to sneak a peek, and was thrilled by the sight of the plain white fabric stretching against her soft pubic mound.\n\n\"Hey,\" I said, softly.\n\n\"Oh!\" she replied, startled and embarrassed by her state of limited dress. \"Sorry, I didn't realize you were up.\"\n\n\"No problem. I couldn't sleep.\"\n\n\"Me neither!\"\n\nI welcomed her and offered a snack, shifting slightly behind the island, afraid that my growing excitement might not be sufficiently obscured by my boxers. She quickly ducked behind the other side.\n\n\"I can never sleep the first night in a new place, no matter where it is,\" she explained. We talked for a while until we finished our snacks, then we both admitted that we were still not sleepy.\n\n\"What do you do when you're up late?\" she asked.\n\nI thought strategically for a moment. Selena was still in a bit of a sleepy daze, so I decided to use that to my advantage. \"Well, when I'm here I usually use the sauna for a bit. It's so relaxing that it helps me sleep... but I'm not really sure what you and I could do.\"\n\n\"Oh! Well, actually, I wouldn't mind trying that. It sounds perfect. Can we use it?\" she asked, excitedly. I was about to open my mouth when she added, \"Oh, crap. I don't have a bathing suit with me though. Wait-- can I borrow April's? Will you end up waking her if you went and got it?\"\n\nAs usual, I wasn't sure if her sudden enthusiasm was just Selena being Selena, or if she was as excited as I was at the thought of using the sauna together. I blinked at her for a moment, then said, \"Um... well, we don't have our bathing suits either. We... don't really use them.\"\n\nShe gave me a blank stare. \"You mean... what? You...\"\n\n\"Yeah, we're purists when it comes to the sauna. No clothing allowed.\" I fidgeted nervously, not sure how she would react.\n\nHer face lit up with amusement and she started to laugh. \"You mean... you go in there completely naked?!\" she exclaimed, lowering her volume for the last two words.\n\n\"Yeah. That's how you're supposed to use the sauna, anyway.\"\n\n\"Darn! I was really excited to try it out. You ought to leave some spare swimsuits here for when you have friends visit.\"\n\nI smirked. \"Wow, you really don't get out into the wilderness much, do you?\"\n\nShe giggled. \"What do you mean?\"\n\n\"Well, we're used to using the sauna with some of our friends that live out here, but they sure as heck don't use bathing suits either.\"\n\nSelena's jaw dropped wide open and then slowly turned into a large smile. \"Wait, what? You mean you and April use the sauna naked... with your friends?!\"\n\n\"Of course. I mean, only with the mature ones, obviously. Most people don't really care around here.\" More white lies were quickly added to my list to things to tell April.\n\nSelena stared at me, her jaw quivering with the desire to say something that wouldn't come out. It seemed as if she was trying to determine if I was joking or not, but ultimately she could see that I was serious. At least, I was plenty serious in my delivery. Finally she burst out laughing again, and then quickly quieted herself down, realizing she might wake someone.\n\n\"Are you serious?\" she asked, \"You really do that? I'm surprised April never told me that! Aren't you embarrassed... being naked in front of them?\"\n\nI noticed her eyes glance up and down my body briefly, as she registered what that might be like. I did my best to guide her toward some possibility that she might take me up on the sauna idea, but in the back of my mind I was telling myself it would never happen.\n\n\"Naw, neither of us get embarrassed about stuff like that. It's just the human body. But if you're feeling embarrassed we don't have to use it at all. Or else I can get you set up in there, so you can use it yourself, and we can just take turns.\"\n\n\"Oh... no... I don't want to be a hassle...\" she said, still smirking, but appearing to ponder the issue.\n\nI started to put away the snacks in the fridge, purposefully letting her think about what I just said, and allow it to sink in how carefree I was about the matter. Inside my heart was racing, though. Would she buy it? Would she actually ever remove her clothing and enter the sauna with me? When I finished, she still hadn't said anything. She just watched me with a slight smirk, as if she were trying not to reveal what she was daydreaming about.\n\n\"Here, I'll switch it on so it can heat up, and if you-- or we-- decide to use it, we can, or else the timer will just shut it off after an hour.\" She glanced up at me and nodded, anxiously.\n\nTaking my time, I went to set the temperature, then turned the knob for the timer to sixty minutes and headed back to the kitchen. She took a deep breath upon seeing me return. I turned to look at her and she let out a sudden laugh that she was trying to hold back. She turned red and cast her face away from me, clearly embarrassed.\n\n\"What?\" I chuckled.\n\n\"Nothing... just... I dunno.\"\n\n\"What? You can tell me,\" I said.\n\n\"Nothing. I was just thinking... what if I woke up tomorrow morning and Matt asked me how I slept, I was like, 'Oh, I stayed up all night naked with Alex in the sauna.'\"\n\nI smirked. \"What would he say?\"\n\n\"I dunno! Either he'd be pissed, or he'd ask when he and April can join us.\" We both laughed.\n\n\"Really? Do you think he'd be brave enough to join us?\" I made sure to say this as if she had already demonstrated the bravery to agree to doing it. She took the bait.\n\n\"Ha! I have no idea if he'd join us. I think he'd chicken out, but who knows?\"\n\nI grinned. \"Man, he doesn't know what he's missing then.\"\n\n\"Yeah, seriously.\"\n\nThere was a pause in the conversation as I watched it dawn on Selena that she was acting as if she'd already agreed to join me. I saw what appeared to be a flash of panic, which for someone like Selena only triggered subsequent amusement. She put her hand over her face, turning red again.\n\n\"Oh man, am I seriously, really considering this?\"\n\n\"Haha, look at how shy and innocent you are,\" I teased.\n\nShe laughed and rolled her eyes. \"So... like, what? We just... how would this work?\" she asked, still skeptical.\n\n\"Well, there's a little landing between the hallway door and the sauna entrance where we can undress and leave our things in a cubby or on the bench. Then you just go inside and sit down. That's about all there is to it!\"\n\nSelena started laughing again, covering her mouth, no doubt imagining getting undressed in front of each other. I could see her breasts swaying loosely back and forth under her t-shirt as her hand muffled her laughter, and for the first time saw evidence of her now-hardened nipples brushing back and forth against the fabric. I felt my cock begin to swell in my boxers, but exerted control over myself as quickly as I could.\n\n\"Oh man... why am I doing this... I shouldn't do this...\" she chanted to herself, swelling with disbelief and amusement.\n\nI decided to make a joke, in an effort to continue to diffuse the tension. \"I mean, isn't it obvious why?\"\n\n\"Huh?\"\n\nI turned and cheekily waved my butt back and forth. \"With an ass like this, you couldn't possibly turn down an opportunity to check out my naked rear end!\"\n\nSelena threw her head back and began to laugh uncontrollably. \"Yeah right, you wanna see a nice ass? You got nothin' on me, my friend!\" She stuck it out to the side and smacked it with her hand jokingly. I watched as her soft, smooth butt cheek quivered in her panties with the sudden force of her hand. We both snickered. There was more awkward silence.\n\n\"So, are we doing this... or what?\" I asked.\n\nI saw her take a hard swallow. \"... okay... but if you tell Matt, I'll kill you!\"\n\nI laughed. \"No worries,\" I said, but I couldn't believe she had finally relented and agreed to use the sauna in the nude. Now what? I was starting to become as nervous as she was.\n\nI started to walk across the kitchen toward the hallway leading to the sauna. I could hear Selena hesitantly follow, breathing deeply. She let out another soft laugh, then I heard her mumble, \"Oh god...\" again. Her embarrassment was incredibly arousing. I focused on that, instead of on my own panic, not having fully believed that I'd actually be facing the task of getting naked in front of her.\n\nWe reached the door and I held it open for her. She stepped inside and glanced around the small changing area, as if she was suspicious of her surroundings. I stepped inside and closed the door. She seemed immediately taken aback by the close quarters we now found ourselves in, with the prospect of taking off our clothes in front of each other, and having our bodies standing so close together.\n\nI opened the sauna door and put my hand inside. \"Yep, nice and hot. It's ready to go.\"\n\n\"Oh good, so it's not like... broken or anything.\"\n\nI laughed. \"Trying to get out of it?\"\n\n\"Who, me?\" she giggled.\n\nI quickly pulled off my t-shirt and Selena's eyes immediately grew in size. She looked down at my bare chest, then glanced quickly up and down my body as I stood there before her with only a pair of boxers separating her from a state of full nudity.\n\n\"Wow, okay... um... here we go then,\" she mumbled to herself.\n\nI watched out of the corner of my eyes as Selena grabbed hold of her own t-shirt and made as if she was about to pull it off. She knew that I was aware she had nothing on underneath. I could see her fight herself, stall, and then panic. She let go of her shirt and started breathing quickly.\n\n\"Oh my god this is so embarrassing!\" she exclaimed.\n\n\"It's not so bad once you take the plunge,\" I said, reassuringly.\n\nI knew I had to get us started. Unless I led the way, I feared she'd chicken out. I took a deep breath, tried not to think about what I was about to do, and yanked down my boxers-- just like that. My cock, which was decently fluffed out of sheer arousal, given the situation, popped out and swung between my legs, still flaccid but thick and lengthened. Selena's eyes almost popped out of her head. A huge smile formed on her face and she quickly looked away.\n\n\"Oh my god, Alex!\"\n\n\"What?\"\n\n\"You could have warned me!\" She was turning bright red again, trying to suppress a laugh. I could see her eyes briefly darting over at me, between my legs, despite the fact that she had turned away with embarrassment.\n\n\"Warn you?\"\n\n\"Yes! You could have just...\" She glanced up at me again, then quickly turned away, giggling. \"... I can't believe I'm looking at your penis!\" We both started laughing.\n\n\"Okay. Um... hey Selena?\"\n\n\"What?\"\n\n\"Heads up! My penis is visible!\" I exclaimed, jokingly. I joked as much to relieve my own nervousness, as I did to relieve hers. I looked down at it, and her eyes followed.\n\nShe burst out laughing. \"Yeah... It's a bit late for that, but thanks!\"\n\nSlowly, her absolute embarrassment at the sight of my swinging cock began to turn to a curious amusement. Then, as I stood there waiting, it dawned on her that she was next.\n\n\"Okay, so... um... I guess you're waiting on me now.\" I chuckled. She scratched her head. \"You want me to just, like... go full-on, boobs out, just like that?\"\n\n\"Hmm. I can't say I'd mind that at all, no,\" I said sarcastically.\n\nShe gave me a playful swat, then sighed. She grabbed her t-shirt again, then paused. She stared at me. I smirked. She stuck her tongue out and then chuckled. Finally, at long last, she began to pull it off. I watched it travel up her stomach, past her bellybutton, toward her breasts.\n\nFinally her t-shirt pressed against her chest as she pulled it over her head. Her boobs clung to the fabric as it passed over them, until it cleared the top. I gawked as two large, perfect boobs popped out and bounced in place in front of her body. They sloped slightly outward, smooth and gorgeously rounded at the bottom, and tipped with dark pink, erect nipples. As soon as the fabric moved past her eyes, I noticed that she was frantically examining mine, trying to gauge my reaction to to sudden appearance of her breasts. I made no secret about gazing at them in awe and wonder.\n\nShe threw her top down on the bench and then covered her face with both hands, laughing with embarrassment. This caused her boobs to dance and wiggle about as her body shook. I was mesmerized at their playful movement, and the beautiful dance of her taut nipples.\n\n\"I can't believe I just did that!\" she said, throwing her hands by her side.\n\n\"Oh no, I can see your naked boobs! What a scandal!\" I exclaimed. I turned and bumped my hip teasingly against hers.\n\nShe grinned. \"That's nothing, I can see your naked penis!\" she shot back, pointing down at it. I felt myself growing but managed to get it under control again. After a few moments she stopped laughing, swallowed her amusement, and then exhaled deeply. \"Okay, shall we go in?\"\n\n\"You're not nude yet,\" I said.\n\nShe turned red again. \"Can't I keep my panties on?\"\n\n\"Where's the fun in that?\" I joked.\n\n\"Yeah, yeah,\" she replied. \"Fine.\" She sighed again and stalled.\n\n\"Well?\"\n\n\"I'm working on it!\" she laughed. \"It's no small thing to take off my panties and just... like... show you my vagina!\"\n\n\"Just make sure to give me a heads up first. You know, so I don't lose my shit.\"\n\n\"Ha-ha, very funny,\" she replied. After a moment she mumbled, \"Man, I haven't even... shaved or anything.\"\n\nI shrugged. \"Whatever, neither has April.\" This seemed to reassure her, but she was still stalling. I watched her grab the elastic waistband of her panties. Despite the sheer degree of excitement I was feeling, I felt a sudden pang of sympathy seeing how truly terrified she was, no matter how much she tried to hide it.\n\nThe moment seemed to linger for much longer than it really lasted. My eyes remained glued to her hands, and to the little puffy mound of her mons pressing back against the cotton tucked between her legs. I realized that at any moment, everything would change. We'd no longer just be friends. Things changed when you saw each other naked. You grew closer. At least, that's what I wanted to happen. There we would stand, together, trusting each other enough to make our most intimate parts visible, baring ourselves completely from head to toe, enjoying the sight of each other's privates without shame.\n\nAs her panties began to slide down, with excruciating slowness, I observed her hands shaking almost violently. I felt bad, but at the same time I knew that she'd relax as soon as she bit the bullet and went for it. Slowly the elastic band traveled south until I saw my first glimpse of pubic hair emerge. Little by little more appeared, until all of a sudden the fabric slipped away and I found myself staring at the two rosy lips of her pussy tucked neatly into a triangular patch of soft, dark brown pubic hair.\n\nI felt myself quivering with an overwhelming surge of erotic excitement, seeing Selena's sweet, delicate labia come into view. She watched me trembling with excitement and arousal, but I didn't care. Her body was the loveliest thing I'd ever seen, and I couldn't tear my eyes away.\n\nI could tell she immediately tensed up with insecurity, saying \"Okay... so... um... we're both completely naked together. Now what?\" She wiped her palms on her thighs nervously, and stared at me with a faint smile. She was shaking all over.\n\nI pointed to the door. \"Sauna?\"\n\n\"Oh! Right!\" she laughed.\n\nI chuckled and opened the door for her. She walked inside, briefly reacting with surprise to the blast of heat. I looked down and found myself absorbed in the sight of her beautiful butt. She had the softest, roundest looking butt cheeks I'd ever seen, and they gently shifted and wobbled as she took the next few steps inside.",
        "\"Jesus, now I see what you mean,\" I commented.\n\n\"Huh?\"\n\n\"About your ass. It's true! I DO have nothing on you!\"\n\nSelena started cracking up and then stopped for a moment to lean forward and stick her butt in the air, waving it back and forth with a show of sass. She was clearly more confident about it, than any other part of her body. For a moment, I caught a brief glimpse of her pussy sandwiched between her legs. She must have realized what she was revealing, and quickly stood back up with a look of embarrassment. I wanted to scream, not having had enough time to have it sink in what I was seeing.\n\n\"Here, take a seat,\" I said quickly, pointing to a wooden bench inside. After she sat down, I took the seat beside her, then regretted not sitting across from her to ensure that we had a full view of each other's body, but it was too late.\n\n\"So...\" she started. \"It gets really hot!\"\n\nI pointed up and down her naked body. \"Yeah, in a bit your body will be beaded with sweat.\"\n\nWe sat there for several minutes. Selena's eyes wandered the room, taking in the surroundings, watching the heater, taking stock of all the seats. In other words, doing anything she could to avoid looking at me. When she ran out of things to turn her attention to, she slowly gave in to her curiosity, first glancing down at her own body, observing the sweat forming on her long legs, and the stark, v-shaped patch of hair where her thighs met. She then began to move her head a little to the right, clearly sneaking peeks at the penis resting between my legs.\n\nMy cock moved through various states of arousal as I ventured my own exploratory peeks at her body, something that was impossible to avoid with the corner of my eye constantly being treated to the sight of two large boobs jutting out just inches to my left. One minute I was maintaining control, and the next I was in full on panic that I'd pop a boner in front of her any second.\n\nFeeling the sweat begin to drip down my body, I shifted my weight and adjusted my legs. Drawn to the movement, Selena glanced down at my body, briefly glancing at my flopping penis. I spotted her taking a look, and she suddenly realized what she was doing. A wide grin formed on her face and she quickly looked away.\n\n\"Sorry...\" she said, letting out a nervous laugh.\n\nI chuckled and said, \"You don't have to be so afraid to look at it.\" She still seemed embarrassed. \"Here, look-- get it over with.\" I stood up, walked in front of her, and raised my arms to the side. She looked up at my body with surprise and amusement. I turned completely around, until I was facing her again.\n\n\"Okay? ... Still embarrassed?\"\n\nShe smiled and said, \"Hmmmm. I'm not sure yet. Why don't you just stay like that and I'll keep you posted.\" She leaned back and sarcastically made a show of examining my body from top to bottom.\n\nI rolled my eyes and then took a seat. \"Okay, go ahead.\"\n\n\"What?\"\n\n\"Your turn.\"\n\n\"No way!\" she laughed.\n\n\"Scaredy cat,\" I said, briefly tickling her just above the thigh. She jumped and slapped my hand away.\n\n\"I'm ticklish!\" she wailed.\n\n\"I know!\" I said, smirking. My fingers danced across her side again.\n\nSelena doubled over with laughter. \"Ahh!\" she cried out, laughing. I could see that she was excitedly grinning at me, so I ventured to tickle her some more. \"Nooo!\" she squealed as she collapsed onto the wooden bench. Selena continued to howl with laughter as I leaned over her, wiggling my fingers across her body, but avoiding contact with anything private.\n\nShe made no serious effort to fend me off, quite the contrary, making it clear to me that in a way, she was enjoying it. I gazed down at her big, bright eyes, and her long, curly hair raining down over her body as she squirmed this way and that. Her large boobs bounced and jostled about her chest with the force of her laughter, and I took great joy in observing their spirited movement.\n\nWhen I stopped tickling her, I sat back and grinned, watching her catching her breath and brush the hair out of her eyes. She glared back at me with an impish grin.\n\n\"Oh, you're gonna get it now, buddy,\" she snickered.\n\n\"Now wait...\" I said, putting my hand up in the air. She quickly sat up and prepared to tickle me back.\n\n\"Think about what you're doing... it's not the same--\"\n\nSelena dove in after me, reaching out with both hands to tickle me on the stomach and the sides of my body. I was just as ticklish as her, and starting laughing.\n\n\"Wait! Stop! It's different if you're gonna tickle a guy!\" I managed to exclaim.\n\n\"Yeah, right. Why's that?\" she giggled, tickling me even harder.\n\n\"D-- don't say I didn't warn you!\" I shouted, falling back on the bench and squirming just like she had.\n\nShe towered over me, her eyes sparkling with excitement at the sight of my writhing, helpless body, as her naked, sweaty body bore down upon mine. I felt her soft hair falling against my chest, and the sensation was wonderful. Her large breasts swung back and forth above my face and she didn't seem to care anymore. As I fought in vain to deflect her advances, I found myself also gazing at her perky nipples as they danced in front of my eyes, wanting nothing more than to pop them in my mouth.\n\nThen it happened. I felt a surge of excitement and arousal wash through my body, as my cock sprang to life. It began to quickly pulse and grow rapidly until fully erect. My heart felt like it was going to beat out of my chest the moment I felt it comically slap twice against her stomach. Selena's eyes were suddenly as wide as I'd ever seen them. She stopped tickling me and looked down.\n\nThere she found herself staring straight at my massive erection. It stuck straight up from my body; thickly engorged and veiny, so long and hard that it swung stiffly about, still threatening to slap against her body until it finally settled in place and remained there, pointing straight at her face, throbbing with wild arousal.\n\nIt took Selena several moments to process what she was gazing at, and the fact that she just made contact with it. Her jaw hung open and she looked stunned. Suddenly she sat straight up, covered her mouth, and continued to stare down at it.\n\n\"Oh my god, oh my god!\" she repeated. \"You have an erection!\" She started laughing uncontrollably, but made no effort to free me from my pinned state that kept it dramatically on display.\n\n\"I warned you!\"\n\n\"I thought you were just making excuses so that I wouldn't tickle you!\" She kept staring at my swollen cock, which wagged softly between our bodies as she giggled nervously. Finally she realized she was still staring at it, and climbed off of me. I sat up and returned to the seat by her side.\n\n\"Well. That's what happens...\" I laughed.\n\n\"Yes... that happened. No mistaking it!\" she giggled, turning beet red again.\n\nWe sat awkwardly side by side again, both acutely aware of the fact that my cock was still standing upright in my lap. She glanced back down at it, and then away.\n\n\"Geez... it's so...\" she mumbled to herself, trailing off, and swapping the rest of her sentence for a wide smile. She turned back to look at it again. \"Okay, I can't believe I'm looking at your erect penis!\" I felt myself continue to throb, excited by the fact that she was boldly confronting it now, with a look of utter fascination.\n\n\"Yeah... thanks for doing that...\" I said, smirking.\n\nShe grinned at me. \"Yeah, well... you started it. You looked quite pleased to see my boobs bouncing everywhere when you were tickling me. So we're even.\"\n\n\"Touch\u00e9.\"\n\nWe continued to grin at each other, as we formed a mutual understanding that it was an erotic thrill for both of us to see each other naked. Her chest heaved in and out, as did mine, as we reveled in the excitement of our nakedness, and the shocking display of shared arousal.\n\nSelena started fanning herself. \"Whew, that made me really hot, I think it's time to get out.\"\n\n\"Yeah,\" I said, in complete agreement.\n\nWe got up and laughed at the sweat stains we'd left on the benches and then exited the sauna. The wide grin never left Selena's face as she took her time slipping her t-shirt back on, and then pulling up her panties. My cock remained erect, wagging in front of my body the whole time until I managed to cram it back into my boxers. We finished getting dressed and walked back out into the living room.\n\n\"Well, I guess it's time to get some sleep,\" she said abruptly, smiling at me.\n\n\"Yeah, I guess so,\" I sighed. \"Sweet dreams!\"\n\nShe laughed. \"Yeah... they're certainly going to be interesting, aren't they...\" She waved and hurried off toward the bedroom, adding a skip to her step just like I observed the day I first laid eyes upon her.\n\n***\n\nThe next morning I woke up beside April and couldn't help but start chuckling the moment I opened my eyes and recalled what happened the night before.\n\n\"... What?\" she asked.\n\n\"I had an... interesting evening last night,\" I replied.\n\n\"Huh?\"\n\n\"With Selena.\"\n\nApril suddenly shot up in bed with a smirk. \"Seriously? Do tell,\" she demanded.\n\nI filled her in on what happened. She stared at me with her jaw dropped open as I narrated the whole incident from start to finish. I still had some sinking feeling that she'd flip out and berate me angrily for doing such a thing behind her back, but the only negative part of her reaction was her jealousy about trailing significantly behind me with her own attempts at seducing Matt.\n\n\"Okay, now I've really got to step it up,\" she said, biting her lip and appearing lost in thought at the apparent competition between us. I could see the gears turning. I thought I should feel jealous too, given that she was surely imagining how to have a similar experience with him, but in fact I found myself eagerly waiting to see what she'd do before reporting back to me.\n\nBefore long we had a new plan for the day. I was to persuade Selena to go for a little hike around the lake, a task that would give April an hour and a half to two hours with Matt; just enough time for some aggressive courtship if she acted quickly enough. She would need his help chopping wood so that we could get a fire going. We worried that it would become apparent to Selena and Matt how often we each vied for attention from the object of our sexual curiosity, but figured we could get it done without arousing too much suspicion.\n\nThe plan was executed beautifully. Selena had her jacket and boots on, and was rearing to go see the rest of the lake, while Matt was more than flattered by the idea of showing off his wood-chopping skills with what April sarcastically called his \"lumberjack muscles.\"\n\nThirty minutes into our hike, Selena and I stopped for a rest on the far side of the lake. I whipped out some granola bars and we found a log to sit on for a snack. To my surprise, neither of us had mentioned anything about what happened the night before. On the other hand, just as I had imagined, things were undoubtably different between us, having now been in the presence of each other fully nude.\n\nWe joked more openly, spoke with plenty of innuendo, and made casual physical contact with regularity. It suddenly felt like we were well into the dating process. She felt as familiar to me as April did, literally overnight. The only time things got strange was when Selena had briefly made a revealing comment. We sat there on the log, staring out across the lake. Our cabin appeared as a small brown speck in the distance. I saw her focusing on it, and then she suddenly started grinning wildly.\n\n\"What?\" I said, smiling at her.\n\n\"Nothing,\" she said. I pressed her to share. \"It's just... funny how we're all here for Valentine's Day with our boyfriend and girlfriend, and so far we've each been spending far more time with each other's.\"\n\nI laughed, acting as if it hadn't occurred to me. \"Yeah, I guess you're right.\" I didn't know what else to say. Several thoughts raced through my head in regards to how I might ward off any real concern on her part, but I couldn't settle on any actions to take. Fortunately, she kept grinning and didn't seem to be seriously concerned. The moment passed, and we started off for the rest of the hike.\n\nWhen we returned to the cabin, I knocked on the door without thinking. It was my intention to give April a head's up, but I realized that that might clue Selena into what was going on. So after pausing for a moment, I opened the door and went inside. April and Matt looked up suddenly from the couch.\n\n\"Oh! Hi!\" said April.\n\nMatt quickly got up, as if he was nervous. He rushed to Selena's side and gave her a hug and kiss. I could smell the guilt all over him and knew something had happened. Then I realized he'd changed his clothes. Selena smiled and followed him to the couch. As I walked over to April, I could see a slight smile forming on her face. I started to look for clues. Then I noticed that the fire was going strong, and Matt's previous outfit was laid out in front of the flames to dry.\n\nI badly wanted to hear what had happened, but I knew I'd have to wait until I had a moment alone with April again, which sadly didn't happen until that evening when we all went to bed.\n\n***\n\n\"Okay, I think it's time to turn in,\" April said later that night, yawning.\n\n\"Yeah,\" the rest of us concluded.\n\nAs the four of us made our way to the bedrooms, Selena found her way to my side and whispered, \"Good luck tonight.\"\n\n\"What do you mean?\" I asked.\n\n\"Trying to sleep...\" she said, smirking.\n\n\"Oh! Yeah... I dunno if I'll be any more successful tonight than I was last night, but we'll see.\" We exchanged smirks and then slipped into our respective bedrooms. I felt my heart racing again. Was she implying that she'd show up in the kitchen again, claiming insomnia? There was one way to find out...\n\n\"Okay, tell me!\" I demanded, the moment the door closed. April laughed.\n\n\"Lemme brush my teeth first,\" she said, grinning.\n\n\"Don't you dare, I've been waiting all day,\" I snapped.\n\n\"Just kidding! Okay, so...\" she began, as we sat on the edge of the bed. \"I got him to start chopping wood. I made a few comments about it being sexy. Yada yada. I could tell he was enjoying it. It didn't take long though, so I took him over to the lake. Long story short, we fell in the water. I mean, I just got my leg wet, but he--\"\n\n\"Huh? How did that happen?\"\n\n\"He-- we-- look, it doesn't matter. The point is, he was soaking wet.\" She suddenly started laughing. \"And, well, so was I, but in a very different way.\" I chuckled. \"Anyway, he was worried about the fact that he didn't have an extra change of clothes because he only brought enough for the days we're here.\"\n\nApril got increasingly animated. I knew how she got when she was aroused, and she was definitely aroused. Talking rapidly, she filled me in on what happened next.\n\n\"So I explained that we could get the fire going and dry his clothes in front of it. He'd have to wear tomorrow's clothes for just a couple hours.\" I nodded, listening with absolute fascination. \"So we go inside and he's about to head to the bedroom-- but I stop him. 'Wait, you'll track the mud everywhere!' I say. And he looks at me confused.\"\n\nI smirked and said, \"Nice move.\" April grinned at me.\n\n\"So I tell him to just strip down there and then he can go get dressed. He gets real nervous, but eventually starts taking off his clothes, until he's in his underwear. Now, his boxers aren't that wet, really. But I groaned, then said, 'Don't be a prude, man. I've seen plenty of them in my life.' Then I motioned at him to drop his drawers. He looks at me like he's just seen a ghost.\"\n\nWe both burst out laughing, so loudly that I feared they'd hear us in the other room, and Matt would know what she was telling me.\n\nApril continued, \"So it took some convincing, that it was no big deal, that Selena wouldn't care, and that she wouldn't even know. Then finally, he complies. Poor Matt drops his boxers and steps out of them, then stands there trembling.\"\n\nI stared at April, wondering why she just paused and smiled at me. \"And...??\" I begged.\n\nApril started fanning herself and looked away, blushing. I laughed. \"Well...\" she said, \"Once I remembered to start breathing again, I realized that I was just standing there staring straight down at his cock. And-- Jesus! It was-- I mean, he had nothing on you of course...\"\n\n\"Of course...\" I said, smirking.\n\n\"But... daaamn.\" She held up her hands and moved them apart to indicate his length. We both started laughing again. \"Poor thing was just standing there for probably two minutes while I checked out his junk. Finally he said, 'Um... had enough? Can I get my clothes?' and I started laughing. I apologized and let him go.\"\n\n\"And then what?\" I asked.\n\n\"That's it,\" she said, sighing.\n\n\"That's it? So he didn't see you naked too?\"\n\n\"No, I mean... I didn't have that part figured out yet. I totally should have made sure I fell in the water as badly as he did.\" She held her hand over her face with disappointment. \"But, I did make sure to let him see how I enjoyed all this.\"\n\n\"Oh?\"\n\n\"Yeah. When he carried in some of the wood later to build the fire I was like, 'Wow, that's a big log...' and he laughed. And then I was like, 'Sorry, I'm still thinking about earlier...' You should have seen him blushing!\"\n\nI gave April a high five and let her get ready for bed. Before hitting the sack, she said, \"Any fun plans for tonight?\"\n\n\"We'll see,\" I said, chuckling. She winked and soon fell asleep, leaving me laying there to wonder if anything more would occur with Selena that night.\n\n***\n\nLater I ventured out into the living room, finding it empty and feeling slightly disappointed. I debated in my head whether I waited too long feigning insomnia, or if I hadn't waited long enough. I grabbed a snack like I had the night before and waited; eating, playing on my phone, and finding any other way to pass the time. Thirty minutes passed before I heard a voice.\n\n\"Oh, I wondered if you were up! Can't sleep again?\"\n\nI looked up, it was Selena. I grinned. \"Nope, you?\"\n\n\"Nah,\" she said, waltzing over to the kitchen island where she'd found me the previous night. She was dressed the same way she had been then: a t-shirt, no bra, a pair of white panties, and some fuzzy socks. I marveled at the fact that she exhibited not one bit of the shyness that she'd displayed previously. \"Got some for me?\" she asked, eyeing my snack. I offered her some, and we started playing cards together.\n\nAfter some time, we grew tired of cards and sat there glancing around the room, neither one knowing what to say to the next. I felt something was on her mind though. I tried to think of what to say, to avoid letting her just go back to bed without upping the ante from the night before. However, she was the first to take the next step.\n\n\"So... what should we do? Same solution as last night? That helped, actually...\" She smiled at me.\n\n\"You mean the sauna? Sure!\" I exclaimed, excited to hear her suggestion.\n\nShe leapt from the kitchen island faster than I did, and started toward the hallway. I was surprised to see her so enthusiastic about something that made her so terrified before. Before long I had the heat and timer cranked up, and we found ourselves on the landing faced with the task of undressing once again.\n\nI quickly removed my t-shirt and stood before her in my boxers. She grinned and grabbed her own t-shirt, yanking it over her head without hesitation. I smiled at the lively spring of her boobs as they popped free. She acknowledged my interest and seemed to stick her chest out ever so slightly, as if to encourage my attention.\n\nI laughed. \"Wow, you've come so far from last night!\" I exclaimed.\n\n\"Yeah, well...\" she said, \"It's not so bad once you take the plunge,\" she joked, repeating what I had said to her the first time. I grinned. I grabbed my boxers, but before I could pull them down, she added. \"Hey Alex...\"",
        "\"What?\"\n\n\"Head's up! You're about to see my va-gi-na!\" she blurted out.\n\nWe both started laughing about the incident from the previous night. Then she yanked down her panties and stood back up, bolding putting her hairy pussy on display. I could see how swollen her lips were, and knew she was heavily aroused. She looked down at my boxers expectantly, as I pulled off the last of my clothes, being sure to casually let my cock bounce and flop about.\n\nWe shared a brief, mutual smile and then headed into the sauna. The usual spring in Selena's step, which had briefly vanished last night, came roaring back. She showed no embarrassment at the fact that her boobs bounced this way and that while she ran to take the same seat on the bench as she before. I felt as if she enjoyed our erotic encounter so much that she was desperate to repeat it again.\n\nIt wasn't long before the sauna started heating up, and we found ourselves excitedly pointing out the different parts of our bodies, and commenting on how shiny they were with the perspiration building on our skin. I had the sense that this was an innocent way that Selena could tease me, without being overly sexual about it.\n\nFor example, she laughed and pointed to the small pool of sweat forming in her bellybutton as the droplets ran down between her breasts and collected there. She leaned back and advanced her pelvis, causing her bellybutton to stick out. \"Look at that!\" she exclaimed, pointing to it. However, she was well aware that in sticking out her pelvis, she also dared to thrust her crotch forward.\n\nI gazed down past her bellybutton, and settled my eyes upon the smooth layer of hair that covered her vulva. The slightly rounded lips of her pussy were glistening and wet, and just barely separating, offering the slightest glimpse of the satiny pink flesh within. I gave a hard swallow. I knew that she knew what I was really looking at. I felt myself starting to tingle and knew that sooner or later there would be no avoiding what had occurred the night before, which caused her so much shock.\n\nSelena sat back upright and smiled wordlessly at me. We shared so much silent, erotic tension that I couldn't imagine how we'd possibly get through the night without something happening. But what?\n\n\"So... it looks like you're not quite as happy to see me as you were last night...\" she finally joked, braving the topic on both our minds.\n\n\"Believe me, I'm struggling to avoid a repeat of history!\" I laughed.\n\nShe chuckled. \"Well... it's okay. I don't mind if it happens. Just relax, okay?\" She smiled at me reassuringly. I couldn't help but wonder if she was actually excited to see me become erect again.\n\n\"Are you sure?\" I asked, amazed and how quickly the tables had turned.\n\n\"Yep! Don't fight it on my accord,\" she replied, chuckling.\n\nI took a deep breath and let go, finally allowing myself to enjoy the erotic excitement of observing her naked body next to mine. Within moments I could feel my cock begin to grow and lengthen, sliding down the damp crack between my thighs as it thickened, and then start to rise into the air bit by bit. I noticed Selena shifting her hips awkwardly as we both watched it reaching higher and higher into the air until it was fully erect. I could feel her discomfort. An exciting discomfort, situated squarely between her legs.\n\n\"Well, that was fast!\" she laughed.\n\n\"It's all about having the right motivation,\" I joked.\n\nShe appeared to relish my answer. We spent a while in the sauna together, finding it exciting to be so free and open with our naked bodies in front of each other, in contrast to the previous time. I made no effort to hide my intense arousal, and she made no effort to avoid looking at it. After some time goofing off together in the heat, we finally reached our limit.\n\n\"Let's take a break to cool off, and then maybe we can go back in,\" I suggested.\n\n\"Okay!\" she said cheerfully. We exited the sauna, and then she stopped short, suddenly, as I reached for the door to the hallway. \"Wait-- can we... is it safe to go out into the living room without putting our clothes back on?\"\n\n\"Well you could put them back on, but you'd just get them all sweaty,\" I replied.\n\nA huge grin formed on her face. \"But what if someone wakes up and catches us?\"\n\nI rolled my eyes. \"No one's gonna wake up.\" I then reached out as if I were going to tickle her and she reacted quickly, throwing her arms around her midsection to block me. She bent in half and shrieked.\n\n\"Don't you dare!\" she laughed, as I watched her breasts jiggling beneath her chest.\n\n\"Well then, let's go!\" I said, strolling boldly out into the hallway in my birthday suit.\n\nThe rush of cool air against my body was a thrill, and I immediately reveled in the freedom of being able to walk about in the open, without any clothing on, despite the fact that April and I were sharing the cabin with visiting friends. It felt risky and daring. I could tell Selena was experiencing the same sudden erotic thrill as she skipped happily along behind me, giggling nervously and using my body as a shield just in case.\n\nWe strolled out through the kitchen into the living room, my cock still stiff and bobbing in front of my body. I glanced over at the hallway leading to the bedroom doors, feeling my heart beating quickly due to the proximity of April and Matt, both unaware of our nakedness in the next room.\n\n\"I can't believe we're doing this!\" exclaimed Selena, daring to venture out from behind me, yet still visibly trembling with nervousness. She turned and looked at me, beaming with an equal amount of excitement.\n\nI turned and cast a sudden look of surprise toward the bedrooms. \"Oh my god-- Matt!\" I exclaimed.\n\nSelena's grin quickly twisted into a look of absolute horror. She threw her hands over her chest, suddenly clutching her boobs, her legs buckled and she bent forward in a fit of panic, as she spun to look toward the bedrooms.\n\nBut no one was there. I burst out laughing.\n\n\"You... fucking... bastard!\" she squealed, letting go of her body and standing back up. She had the devilish grin I'd ever seen. \"I can't believe you did that!\"\n\nI kept laughing. \"You should have seen the look of horror on your face!\"\n\nSelena was still breathing quickly, as if she had been hyperventilating. \"You - bastard!\" she kept repeating, lunging at me with laughter and smacking at me playfully. We descended into a long laughing fit as I blocked her smacks, which then turned to tickles, which had quickly become our preferred means of offering innocent affection. Soon her body was up against mine as she struggled to take control of my arm in order to stop me from blocking her wiggling fingers.\n\nAs we laughed and tumbled across the living room floor, we made more physical contact than ever before. Her boobs jiggled back and forth and bumped against my chest. I felt her hardened nipples poking against my skin. Our thighs brushed together, and then when our bodies pressed I felt my steely cock pressing firmly against her soft skin. Her expression changed, and her giggles turned to soft sighs of pleasure.\n\nAs we gazed into each other's eyes with a wicked amusement, her lips came close to mine, and as if with a mysterious force of magnetism that drew us together at the same time, we suddenly connected in a frantic kiss. I felt the surprise and shock she was feeling in her body language, and she no doubt felt the same from me, but neither of us stopped. One kiss became a series of frantic, hungry kisses, as we continued to press close together, letting each other feel the sensation of our naked bodies rubbing together in their state of intense arousal.\n\n\"Mmm...\" I hear her cooing as we stumbled back toward the couch. We allowed ourselves to fall together onto the soft cushions. She gazed up at me through the parting in her long hair that had fallen all over her face and bit her lip with tension. Then she ran her hand suddenly across my chest, first feeling the beat of my heart, and then then tension in my muscles.\n\nI glanced down at her soft breasts resting upon her chest, enamored by the pale, sensitive skin in contrast to the rest of her body and the swelling, pink nubs of her nipples. I felt myself falling forward, suddenly drowning in the deep crevice between them. Selena's breasts felt like two warm pillows, and I lingered there for a moment, detecting the faint trace of a spicy perfume that still remained after the day ran its course.\n\n\"Mmmm....\" she continued to moan, as I lifted my head and made my way to her nipples, quickly taking them in my mouth and suckling hungrily. She squirmed beneath my body, moaning louder. Then I felt her hand slipping down beneath my body, searching, until it connected with my cock. She seemed desperate to touch it at long last, frantically grasping it firmly and feeling the pulse of my body against her palm, then stroking it up and down as she arched her back with passion.\n\nI sat back up and gazed down at her. She continued to stroke me as her chest heaved up and down. Selena offered me a look of pure, wordless desperation. Then her eyes shot down at my cock, staring at it with fascination as it moved back and forth through her fingers. She squeezed it firmly again and then looked up at me, her jaw quivering.\n\n\"Alex...\" she whispered, breathlessly.\n\n\"Y-yes...?\" I asked, feeling my own voice tremble.\n\n\"I...\" she said, before pausing to take a deep breath, \"I want to feel you... please... inside me...\" she softly whimpered. Selena let go of my cock and grabbed my hand. I could feel her whole body shaking beneath mine.\n\nShe flinched as I carefully reached down, lifted her knees, and moved them to either side. Selena stared up at me with wide eyes as she observed my expression. There, through the thin layer of dark pubic hair, Selena's pussy gently parted for me. I ran my fingers across her soft outer labia. She gasped and briefly closed her eyes, then opened them again and looked down between her legs. I spread my fingers apart and found myself quivering at the sight of her glistening pink flesh as her pussy spread wide at my touch.\n\nMoving my fingers back and forth through her delicate folds, I felt my fingers quickly become coated. I brought them close to my nose and inhaled deeply, intoxicated by her deep, feminine aroma. The wide grin returned to her face, as it lit up with excitement at my enjoyment. I tasted her, one finger at a time, observing her growing arousal at the sight of my expressions.\n\n\"Good?\" she giggled.\n\n\"Wonderful,\" I said, observing that this delight seemed to counter her nervousness. However, she tensed up again as I grabbed my cock and began to position it between her legs. We gazed deep into each other's eyes as I eased my hips forward and felt my swollen member begin to sink deep into her tight canal.\n\nSelena gasped at the sensation of my throbbing manhood penetrating deep into her body. She looked down at our bodies as they connected so intimately, and suddenly exhaled all the tension she'd built up. I heard her begin breathing deeply and gently move her hips against mine as I began slowly thrusting inside her.\n\n\"Ngh, Selena...\" I groaned, \"Your pussy... is so wet...\" as I glided smoothing in and out of her body, finding myself immediately coated in a thin film of her feminine juices.\n\nShe laughed excitedly, hearing me refer to her body with so much sexual hunger for the first time. Her hips immediately began moving against mine with more urgency, as I saw her entire body come alive with a fierce, fiery thirst for mine. I began thrusting faster, which caused her to start moaning again.\n\n\"Mgh! -- Alex!\" she groaned. \"Oh god, I wanted your p-penis inside me so badly! I.. love your cock!\" I was delighted to hear her finally breaking free from her shyness as we continued to fuck with the excitement of two lovers enjoying each other's body for the first time.\n\nThe force of our thrusts made her big boobs dance happily about her chest and I helplessly grasped at them, feeling them softly compress under my fingers and then spring back to life as I released the pressure. My excitement grew as our hips jerked together faster and faster, until finally she began to scream out, \"Fuuuck -- Alex!\" I quickly covered her mouth, laughing at the fact that she had forgotten to stay quiet. She was too overcome with pleasure to realize what she was doing, as her body quaked with pleasure.\n\n\"Holy shit...\" she laughed moments later, having recovered from an intense orgasm. I saw her expression grow even wilder, as she quickly sat up and pushed me back onto the couch. Selena excitedly climbed on top of my body, squatting low and spreading herself open, then lowering down onto my swollen, aching cock.\n\n\"Ngggh...\" she groaned as it sunk back into her body. She rested her hands on my chest with mild pressure and began to rock her hips back and forth, urging me deeper and deeper inside. A wicked grin persisted on her face as she began to ride me with a ferocious determination, eager to make me feel the intense pleasure I had just given her.\n\nI writhed helplessly beneath her body, overwhelmed by the sensation of her gaping, wet canal devouring me whole, massaging the full length of my shaft with a warm, slick tightness. She watched me gaze up at her bouncing boobs, and then put her arms up in the air, running them through her long hair and sticking her chest out, accentuating their wild, circular dance.\n\n\"Jesus... Selena...\" I moaned, starting to lose control.\n\n\"Tell me,\" she said excitedly, \"Share what you're feeling!\"\n\nI reached up and cupped her perfect boobs as they wiggled about and then stared in awe at my cock moving through her body like a piston. \"Fuck... Selena... it feels so good...\" She laughed with excitement and pleasure. \"You're so wet and tight...\"\n\n\"Yes...\" she exclaimed breathlessly. \"Feel my wet pussy take your big cock deep inside.... ngh!\" She began bouncing up and down rapidly, furiously aroused and full of passion. \"Tell me if you're going to come!\" she blurted out.\n\n\"I-- I think I'm there!\" I groaned, letting myself go, desperate to finally experience the release.\n\nSelena leaped off me, and before I could ask her where I should come, she opened her mouth, extending her tongue slightly. I quickly sat up and began pumping my cock ferociously, aiming it toward her mouth. She kept fighting off a smile as she watched me stroking myself urgently. Her eyes flittered as she prepared herself for what was about to happen.\n\nI groaned suddenly, slowing my strokes as a fierce, tingling wave of pleasure surged through my cock. Thick spurts of cum sprayed forth and splashed across her mouth, chin, and tongue. She briefly moved her mouth to laugh, only causing herself to become increasingly messy, then frantically opened it wider in an attempt to catch every wild squirt of my ejaculations.\n\nWhen I finished, I collapsed backward onto the couch in exhaustion, watching her laugh with excitement and shock at the force and quantity of my output. She licked her lips and wiped her mouth and chin in a feeble attempt to clean up. I apologized and quickly searched the table next to the couch for a tissue, then offered it to her.\n\n\"Thanks,\" she giggled, using it to finish cleaning herself up. \"That was amazing!\" she added, moments later.\n\n\"Yeah!\" I laughed. We stared at each other in amazement, barely able to register what we'd just done together, behind our partner's backs. We felt so wicked and naughty, that despite both enjoying a momentous release of pent-up sexual energy, we found ourselves still left in a state of giddy, aroused excitement after-the-fact.\n\n\"Do you think anyone heard?\" she said with mild panic, finally realizing how vocal she'd become.\n\n\"Nah, if they did, we'd surely know by now,\" I said, smirking. For a while, we lingered together on the couch, enjoying each other's company and warm body, having forgotten all about the sauna.\n\nAfter a while, Selena said, \"Well after that workout, I don't think I'll have any trouble sleeping!\"\n\nI grinned at her and agreed. Just like that, we scrambled to retrieve our clothes, and hurried back to bed.\n\n***\n\n\"You - whaat?!\" exclaimed April the following morning, when I revealed what happened overnight.\n\n\"It's true, we did,\" I said, reaching my arms behind my head and gazing up at the ceiling with a satisfied look. I felt a pillow come down hard upon my chest. \"Hey!\" I exclaimed.\n\n\"That's not fair!\" she wined.\n\n\"Well, what can I say, it was just meant to happen,\" I teased, pushing her pillow away. April appeared to be fuming. I could see her mind racing rapidly through the various ideas she would have to concoct to catch up to me. \"You'd better hurry with Matt,\" I added, \"We're only here one more day.\"\n\nA few moments later, I saw something snap in April. She suddenly leapt out of bed and circled around to my side. \"Get up,\" she said, yanking the sheets off me.\n\nI laughed. \"What?\" She pulled me out of bed, peeked into the hallway, then dragged me into the bathroom. She began to turn the knob that supplied water to the tank, then tried to flush, demonstrating that the bowl failed to refill.\n\n\"There. Now the toilet is broken,\" she said, emphasizing the last word with air quotes. \"When Matt comes out, ask him if he'd be willing to take a look and see what's up. Then come get me immediately.\"\n\n\"Okay...\" I said, not quite sure what she was up to. I watched April storm back into the bedroom and close the door. After some time passed, the door to the other bedroom opened and Selena walked out. She gave me a smirk as she passed by on her way to the kitchen. Matt emerged moments later, and I did as April asked.\n\n\"I dunno what happened, it just won't flush,\" I said, demonstrating.\n\n\"Hmm, okay...\" said Matt, staring at it thoughtfully.\n\n\"I'll be back,\" I said, leaving the bathroom and slipping back into the bedroom. April was there, waiting impatiently with a towel wrapped around her body, and clearly nothing else.\n\n\"Finally! ... Showtime,\" she said, smiling at me as I entered. She pushed me out of the way and went into the hallway, then closed the door. Several minutes later, April returned with an excited look on her face, to tell me what happened.\n\nApril had gone into the bathroom, turned around the close the door, then removed her towel and hung it on the door, knowing full well that Matt was in the room. When she turned around, Matt was gasping. April yelped and threw one hand across her exposed breasts, cupping her vagina with the other. Matt began profusely apologizing, explaining that he was in there trying to fix the toilet. She laughed and apologized also, accepting fault.\n\n\"Whatever, who cares anyway. We're all friends here,\" she said, slowly removing her hands and standing naked before him. Matt remained frozen, gawking at her body. He couldn't take his eyes off her large breasts, perfectly shaped like tear drops, and the stark v-shaped patch of pubic hair cleanly divided by April's luscious slit. April approached him, asking what was wrong.\n\n\"It-- um, it won't flush...\" he stammered.\n\nApril looked down at the toilet thoughtfully, then said, \"This happened once before to me. Hang on.\" She got down on the floor, moved onto her back, and reached behind the toilet for the knob. In the process, she put her body boldly on display, from her large, undulating breasts to her pussy, inadvertently spread before his eyes as she wiggled left and right, struggling to get a grip on the knob. She snuck a peek at his bewildered expression and then noticed a bulge forming in his pants.\n\n\"Can you spot me?\" she asked. He hesitantly bent down to secure her legs, and she could feel his hands trembling. \"Okay, got it,\" she said, finally. \"Help me back up?\" Before he could process her request, April quickly reached out, as if for his hand, being sure to make contact with his crotch instead. She looked down suddenly, realizing what she's done. \"Oh my god!\" she shrieked, as Matt's bulge instantly began to grow, indicating the massive erection emerging inside. \"I'm so sorry! Was that... did I just grab your penis?\"",
        "\"Um... yeah...\" he laughed, covering himself in embarrassment.\n\nApril laughed. \"I'm sorry, I was reaching for your hand.\"\n\n\"That's okay,\" he replied, still laughing nervously.\n\nShe looked down at his crotch, smirking. \"Wow, um... did I give you an erection?\"\n\n\"Um... I... uh...\"\n\n\"That's okay, don't be embarrassed.\" She rolled her eyes and moved his hand away, revealing his large boner straining against his boxers. \"I'm flattered.\" She giggled.\n\n\"D-don't tell Selena,\" he said with a nervous smile.\n\n\"You don't know what girls talk about, do you?\" April said, cocking her head curiously at him.\n\n\"What do you mean?\"\n\n\"You think that Selena and I haven't often talked about your and Alex's bodies?\" She snickered. \"She once said, 'I wish you could see how big his cock gets, but he'd die if I tried to show you.' We were laughing about it for like, an hour.\"\n\n\"Really?\" he laughed.\n\n\"Yeah. You should have seen her trying to describe it in detail, until she finally just gave up and said she'd sneak me a photo some time.\"\n\nMatt looked surprised. \"Really?!\" he exclaimed.\n\nApril shrugged. \"Whatever. You can get it over with and show me now if you want, I won't tell her. I promise.\"\n\n\"Um... seriously?\"\n\n\"Yeah, why? Are you too shy?\" she teased. \"I'm obviously not, it's no big deal.\" She threw her arms out to the side, as if to remind him that she was standing in front of him without a stitch of clothes on.\n\n\"Um... she really said she'd show you a photo of...\"\n\n\"Yup.\"\n\nApril suddenly realized that there was no way she could get Selena to corroborate her story if he ever asked her, which he surely would. She started to panic. The only way she could get away with what was too late to undo was if she and Alex successfully seduced their friends and were able to laugh off their sneaky tactics after the fact. She had to be successful, one way or another.\n\nFortunately, Matt said, \"Okay...\" He hesitantly began to lower his boxers, the thick head of his cock pressing firmly against the soft cotton fabric as it slid over him. When it got low enough, she saw his massive, erect penis spring free from the constriction of the waistband and bounce up and down in the air a couple times before it settled into place at an upward forty-five degree angle.\n\n\"Wow! Very nice!\" April exclaimed. She looked up at him, grinning, and then down at his cock again. She smiled sweetly, adding, \"You have a really, really beautiful penis, Matt. Selena's a lucky girl... I'd be all over that in a second if I had the chance.\"\n\nHe laughed nervously, still flushed and embarrassed, but revealing a clear indication of the high he had received from the unexpected attention and compliment he was receiving from a beautiful, nude woman.\n\n\"You'd better not let Alex hear you say that...\" he chuckled.\n\n\"Alex? Seriously? You don't... you've never talked about... um... stuff with him, I guess.\"\n\n\"Huh?\"\n\n\"Let me put it this way. We've both long since opened up to the idea of having a little fling on the side here and there. He's the last one to care if I check out one of our friend's cock.\" Matt stared at her as if he'd believed the Earth was flat his whole life, and she had just revealed it to be round.\n\n\"And then what happened?\" I asked, wanting to hear the rest of April's shocking story.\n\n\"Nothing. Not yet, anyway...\" she said, grinning. \"I'll think of something.\"\n\n***\n\nAs the morning progressed, everyone finished their showers, had a big breakfast, and then decided to go for a long hike in the woods together. We made our way out to a local waterfall where we lingered for an hour before having a small lunch by the basin as the water crashed down beside us. As we made the trek home a cold front began to move in, just as predicted, leaving our last day chillier than the previous two. We discussed using the last of the chopped wood to build a fire.\n\nBack at the cabin, we all got drunk and celebrated our last day together before we'd drive back later that afternoon. However, I could hear the clock ticking down in April's mind. Finally, she pulled me aside, and whispered, \"Let's try your idea.\"\n\n\"Huh?\"\n\n\"Follow my lead,\" she simply said. Turning to Selena and Matt, she asked, \"Hey, why don't we use the sauna?\"\n\n\"Yeah! We haven't used it yet!\" said Matt. Selena's eyes opened wide. She knew what that meant. Alex smirked at her.\n\nTurning to face Matt, Selena said, \"Um... are you sure you want to do that? You--\"\n\n\"Yes! I can't believe I forgot about it. Totally, let's go.\"\n\n\"You know that you... um... don't have a bathing suit, right?\"\n\nHe stared at her blankly. \"Right, but we... hmm. I guess-- do you wear towels or something?\" He looked at me, expecting an answer.\n\nApril interjected, \"Well, no. Not exactly.\"\n\nSelena covered her face in embarrassment. \"Matt...\"\n\n\"What? What did I miss?\" Everyone except him laughed.\n\nSelena calmly explained, \"They... uh... don't wear anything in there...\"\n\n\"House rules,\" added April.\n\n\"Oh!\" exclaimed Matt, turning bright red. After a moment's pause, he added, \"Wait, how did you know that?\" Selena's eyes opened wide, realizing her faux pas.\n\nApril asked, \"Yeah, how DID you know that?\"\n\nI could see Selena panicking. She mumbled, \"Um... I think one of you mentioned it at some point.\"\n\nApril laughed and said, \"Oh... okay... Anyway, Matt will cope and learn to not be such a wimp.\" She stood up and I followed suit. \"Selena, I'm gonna get another beer to take in there. You want some?\" she added.\n\n\"Sure,\" said Selena, following her to the fridge. Matt watched them in a state of shock and silent bewilderment, having trouble believing that this was happening.\n\n\"Wait, you're not... Are we--?\" he asked, finally, quickly following his girlfriend.\n\n\"What?\"\n\nHe pulled Selena aside, whispering, \"Are you really gonna go in there, like, naked? -- With them?\"\n\n\"Sure, why not?\" she replied. He was stunned.\n\n\"Really? In front of Alex too? I never would have thought you'd--\"\n\nSelena rolled her eyes. \"Seriously? It's not like we don't know them well enough by now. Are you ashamed?\" She grinned and began to tease him. \"Are you afraid they'll see your you-know-what?\" Selena tickled him, just as I had done to her. He laughed and shooed her off. She smirked and walked away, leaving him alone with his lingering shock.\n\nThe next few minutes must have been like a strange dream for Matt. The three of us hurried into the sauna to undress, giddy with excitement, while he quietly followed. His eyes became the size of saucers as he stood there watching the girls pulling off their clothes, freeing their breasts with glee and then yanking down their panties. When I was naked, Matt quickly glanced back and forth between Selena and I, as if he was trying to gauge her reaction to seeing me naked, but wisely, she had none.\n\nNone of us waited for Matt, who was left shaking in his boxers. We ran into the sauna with our beer and sat down. Selena took her usual seat, so I took mine next to her. April sat across from us. Moments later, Matt hurried in, shyly covering his crotch with both hands. April patted the spot next to her, across from his girlfriend, and he quickly took a seat there. I found it amusing that we'd ended up sitting next to each other's partner.\n\nNo sooner had Matt finally ventured to slide his hands away from his groin, setting them off to the side of his body while no one was watching, did April take notice. A grin quickly formed on her face, and she said, \"Isn't it funny how similar their dicks are? Look,\" she said, pointing down between Matt's legs. He quickly became anxious as April and Selena laughed and began to gossip about our genitals.\n\nI leaned back and let out a satisfied sigh. \"Mmm. That's good. Now talk about your boobs next,\" I said, sarcastically. Everyone laughed.\n\n\"Well, they're a different shape, but we're about the same size,\" Selena said, playing along as she cupped hers with both hands.\n\n\"Yeah, similar movement too,\" said April, as she teasingly rocked her chest back and forth, causing her breasts to wiggle. They certainly got Matt's immediate attention. I imagined he was squirming in his seat, wanting to reach out and grasp my girlfriend's tits.\n\nI could clearly see how aroused Selena was by the sight of her boyfriend being so bashful. It occurred to me that it was the same arousal that I had felt when I saw how embarrassed she had been initially. The girls continued to crack jokes, designed to enhance our excitement, eventually suggesting that they go get some pillows and have a pillow fight in front of us.\n\n\"Yeah, that's great, keep going...\" I joked. However, my arousal was no joke, and growing rapidly. Before long, I realized I had taken it too far and lost control. I felt my cock beginning to swell. Selena looked down suddenly and grinned.\n\n\"Keep going, keep going!\" she exclaimed to April. \"Almost theere!\"\n\n\"... The beds are nice and springy, we should have the pillow fight there!\" exclaimed April, as she bounced up and down on the wooden bench to simulate what that would be like. I took one final look at my girlfriend's heaving breasts before I realized there was no hope, I had crossed the point of no return. Within seconds my cock had sprung into the air, painfully erect as a result of their comical banter.\n\nApril and Selena cheered simultaneously as it reached high into the air. Matt's eyes widened with surprise and a small smirk formed at the edges of his mouth. \"Good job, babe,\" joked April, gazing at my cock with pride.\n\n\"Look, he gave you a standing ovation,\" added Selena, pointing down at my erection. Everyone was beside themselves with laughter, except for Matt who still glanced from person to person with his jaw hanging open.\n\n\"What's up?\" said April, finally prodding him.\n\nMatt turned to Selena. \"Are you... he's... are you all really not--\" Everyone continued to laugh, this time at Matt's inability to form a coherent thought.\n\nSelena sighed. \"Ah, my boyfriend is so adventurous,\" she said with a cocky sarcasm. I could sense her arousal continue to grow tremendously the more shocked he became at her relative freedom and kinkiness in contrast to his shyness and embarrassment.\n\n\"Here, just relax,\" said April, gently taking hold of Matt's shoulders and turning him toward the wall. She began to rub them in a sensual way.\n\nMatt tensed up and said, \"Uh, I'm a guy, and I'm naked right now. I'm not sure you should be...\"\n\n\"Yeah, we know. None of us were born yesterday. But who cares? Look at Alex,\" she said. I noticed Matt sneak a peek downward, checking himself. April continued to rub his back, then peeked around herself to look down at his crotch.\n\n\"Nope, nothing yet,\" said Selena, eying her boyfriend's cock. Matt cracked a smile at her.\n\nApril realized that now was her chance. The way Selena was playing along, she could get her to corroborate her story right in front of him. She said, \"You know... Selena has gone on and on about how big you get when you guys are fooling around. But I dunno, man. I'm not seeing much going on down there yet. Right Selena?\"\n\nSelena laughed. \"Yeah! You're making me look like a liar, Matt!\"\n\nIt was a brilliant move on April's part. He laughed, then gasped suddenly as his penis began to grow in front of them. They watched with excitement as it swelled quickly and began to rise into the air from his lap. I enjoyed the horror on his face as he helplessly looked down at it, watching it twitch and rise a little further into the air with each pulse, as if it were the second hand on a clock reapproaching twelve.\n\n\"Theeeere we go!\" exclaimed April, staring down into his lap at his thick, upright cock.\n\n\"See? I told you I wasn't exaggerating!\" mused Selena.\n\nA huge grin formed on Matt's face, having now given in to the fact that two beautiful, naked girls were expressing excitement about his body. I knew exactly how he felt. He couldn't believe what was happening; that our girlfriends were delighted at the sight of his erect penis.\n\n\"Hey, don't forget about me,\" I said, pretending to be jealous.\n\nI tickled Selena, taking the risk that all guards had finally come down between the four of us. She giggled and smacked me away, but I persisted, sending her into another silly laughing fit that made her boobs bounce all over the place. She tried to stop my advances, but finally collapsed against my naked body in a desperate attempt to pin down my hands.\n\n\"Stop, or I'll put your balls in a vice grip, I swear! And I have nails!\" she snapped, while her boobs swayed back and forth with unsteady movement as she bore down on me. We both laughed. Matt was still smiling, despite the fact that Selena and I were touching each other's body in a playful way.\n\n\"You guys,\" April said, interrupting, \"I need to get out for a few minutes here...\"\n\n\"Yeah, me too,\" added Selena.\n\nMoments later we all got up, our naked bodies covered in a brilliant, wet sheen and beaded with sweat. We exited the sauna and headed into the living room. Matt's state of bewilderment returned as he looked around, watching the three of us strolling around confidently without any clothes on. Selena casually wiped her boob in a circle and observed the amount of perspiration on her fingers with astonishment.\n\nHaving witnessed this, April chimed in, saying, \"I know, right? I'm soaking wet...\" She shifted her thighs uncomfortably from side to side. \"But I can't tell if it's our boyfriends that did this to me, or if it was just the heat.\" Our girlfriends burst out laughing. Matt seemed thoroughly amused by their camaraderie and bold display of sexual thoughts together.\n\nWe carried on like this for a while until April made her move. A move that would set in motion a chain of events that would forever change the relationship we enjoyed with Selena and Matt.\n\nApril casually lowered her eyes and began checking out Matt's cock again, which was still hard as a rock and clearing the room in front of him as he walked. She mused, \"Size and shape aside, do you suppose they also both taste similar?\"\n\nSelena snorted. \"Ha! That's possible.\"\n\nApril grinned at her, asking, \"You wanna find out?\"\n\nSelena dropped her jaw, briefly glanced down at my cock, and then back at her. \"Yeah, as if Matt would actually let me--\"\n\nApril interrupted her with a shrug. \"I'd try it.\"\n\nSelena looked surprised, still glancing back and forth between us. Finally, she giggled, \"Yeah right. I DARE you to go down on Matt.\"\n\n\"Do you really? I'd do it.\"\n\nSelena crossed her arms under her breasts and shifted all her weight to one foot. \"Let's see. I don't believe you.\"\n\n\"Okaaay...\" said April, as she kneeled down in front of Matt. It looked like he had stopped breathing. The three of us stared down at April with bated breath. The moment my girlfriend reached out and touched Matt's penis, I saw Selena's jaw drop open again, out of the corner of my eye. No one said a word, as April leaned forward and accepted Matt's swollen cock into her mouth.\n\nUp to that point, April had been all sarcasm and mischievousness. However, for the first time, I saw her expression change to a seriousness. I knew how badly she wanted Matt, how aroused she was by his body. She appeared to be trembling as the success of our plan suddenly, shocking, bore fruit. Her body went weak as she began to suck Matt's long, aching cock.\n\nSelena squealed, \"Oh my god-- April! Do you realize you have my boyfriend's penis in your mouth right now! I can't believe this!\" She covered her face with her hands. I saw April crack a smile and then regain control.\n\nMatt was visibly trembling too as he gazed down at April with disbelieving eyes, watching her lovingly caress his balls as she moved her head back and forth, hungrily devouring his swollen manhood with increasing enthusiasm. Selena's eyes grew and grew as she observed April's desire mount; her nostrils flaring as they inhaled Matt's musky scent and her lips smacking against his steely member. She listened to her boyfriend beginning to moan at the unexpected pleasure he was receiving from another woman.\n\nApril pulled away for a second, breathing rapidly as if trying to catch her breath. \"Go ahead... give Alex a try,\" she managed to get out, before opening her mouth and swallowing Matt's cock once again.\n\nHaving registered what was indeed happening, Selena turned to me with the same serious look that April had given Matt. I touched her hand and felt it quivering. \"Do you... want to try it?\" I asked her, hesitantly.\n\nShe looked into my eyes, desperate to say something, but unable to speak. Instead, she nodded quickly and slowly lowered herself in front of my body, briefly checking on the status of April and Matt, as if to confirm that what she was about to do was truly justifiable. I saw her eyes connect with Matt's briefly, but he made no sign of disapproval. I couldn't think why she would need any approval anymore, given what he was currently engaged in.\n\nI offered Selena a warm smile. She smiled back up at me, exhaling any tension that had built up from the shock of what had just happened. I saw her begin to switch gears to a more welcoming attitude toward the sexual freedom we were now beginning to share as a group. The Selena from the night before began to emerge. The same wicked grin slowly developed on her face. Her big brown eyes were shining and her long, curly hair whipped back and forth as she readied herself for something that we both wanted to share together.\n\nAs if in slow motion, I watched Selena touch my penis, adjusting its angle toward her mouth. Her soft lips parted and I felt the tip of my cock make contact with her warm tongue. Then, all at once, I felt a bliss wash over my body as it slid into the wet cavity of her mouth. She inhaled with a sudden excitement as she got her first taste of my cock and a surge of adrenaline took hold. She was so aroused by the opportunity that she skipped all initial teasing and went straight to a brisk sucking motion.\n\nThis went on for a few minutes, as April and Selena filled the air with the sounds of hungry, wet sucking until Selena finally pulled away to take a breath. My stiff member sprang from her mouth, briefly bopping her on the nose as it bounced in the air. We laughed. She gazed down at my long shaft, glistening with her fresh saliva. Overcome with emotion, she began to cover it with loving kisses.\n\nFeeling my competitive side return, I decided to up the ante in front of April. \"Okay, it's on now,\" I groaned. \"Matt, let's return the favor.\" I grinned at him. He blinked at me, as if still unsure if this was all a dream.\n\nApril stepped in. She slowly rose in front of his body, then wrapped her arms around him and pressed her chest against his, until he could feel the pressure of her soft breasts against his bare skin. I saw his cock begin to rub up against her body as she leaned in close to his ear. It pressed firmly into her soft flesh, gently pulsing with raw arousal.\n\n\"Do you want to eat my pussy?\" she asked him, innocently. Matt turned red again. \"It's so creamy, and wet...\" she cooed. He took a hard swallow.\n\n\"Y-yeah...\"\n\n\"Yeah, what?\"\n\n\"Yeah... I... want to eat your pussy...\" he mumbled, staring straight at her with a shell-shocked expression.\n\nI quickly pulled Selena to the couch and she dropped onto her bum with a soft thud, then flung her legs apart. Matt and April quickly joined us, and she took the same position along side Selena. Before I had a chance to do anything myself, Matt had dropped to his knees and thrown himself between April's legs. She laughed with delight as he desperately dove in for a taste. I watched as he finally let go, giving in to his wildest urges. He seemed frantic to taste my girlfriend's pussy, licking and sucking with a fierce urgency as his reddish cock surged painfully between his legs.\n\nI squatted down in front of Selena and surveyed the goods. Her own sweet, fragrant pussy was spread before me, silky and pink within, and encircled by the soft layer of pubic hair she had expressed initial embarrassment about. I dragged my nose up over her labia, inhaling the deep, feminine odor emanating from her body. Then I ran my tongue through her soft, wet folds, getting my own taste of her juices once again. She moaned instantly and melted into the cushion.",
        "Within moments, Matt and I were squatting side by side, helping ourselves to the intimate parts of each other's girlfriend as they moaned and shuddered with pleasure. \"Oh fuck! Matt...\" April groaned breathlessly, \"Yes... put your tongue in my pussy! Ngh!\" Her hands moved over his head in circles, leaving his hair a mess while she desperately held his face against her sopping wet vulva.\n\nI could feel Selena squirming wildly, occasionally shaking with violent fits of pleasure. She screamed, \"Yes-- Alex! That feels so good! Mhhgh!!\" Her hips began to buck as I sucked at her loose, slippery flesh, then began to tease the swollen knob of her clit as it blossomed beneath my playful tongue.\n\nI plunged my finger deep into her tight canal, moving it smoothly inside and out as I flicked my tongue over her clitoris. \"Ugh! Alex! Alex! Yes! I'm gonna come!\" she hollered, suddenly sitting up erect and moving her hips frantically. I continued to finger fuck her until I felt her body suddenly tense up. She let out a long moan as she began to squirt; waves upon waves of pleasure surging through her body and emerging through a joyful torrent of fluids.\n\nSelena continued to scream and collapse over me as her body quaked, while I heard April gasp and reach her own climax. I heard the familiar moan that my girlfriend always made as she suffered an explosion of pleasure. Matt, messy with April's own urgent gushes, continued to lick and suck hungrily as he drenched him, coating his mouth and chin.\n\nSelena and April collapsed backward, side by side. Their heads fell to the side, toward one another, as their rapid, heavy breathing continued. Upon seeing each other's pleasure, they began to laugh with mutual delight.\n\n\"Oh - my - god! That was amazing!\" April exclaimed.\n\n\"I know!\" replied Selena.\n\n\"I'm so fucking horny right now...\" April whimpered. \"Please... let me fuck your boyfriend. I promise I'll return him in one piece. I need to feel that cock inside me...\" Selena laughed and nodded excitedly, reaching down to grasp my own cock and stroke it with equal enthusiasm. April added, \"Come! Let's go to our bed, it's much more comfy.\" She got up excitedly, and dragged Matt across the room toward the bedrooms. Selena sprang to her feet and yanked me up to follow them.\n\nIt was an exhilarating experience to have the four of us climb into the same bed, the same bed that April and I slept in together every night. The fact that it was our private place, suddenly invaded by our new lovers, made our encounter increasingly erotic, and excitingly taboo. The girls laid down in bed, side by side. Selena took my usual spot, sprawling out on the sheets I'd occupied the night before, and purring like a cat.\n\nMatt needed no further convincing about what was happening. As if he'd been secretly fantasizing about it for some time, he urgently positioned his body in front of April's, who offered herself in missionary position. Without hesitation, he shimmied quickly forward, knees shaking with nervous excitement, and his cock massively engorged at the sight of this naked woman so desperate for him to fuck her.\n\nI saw the look on my girlfriend's face; one of wonder, victory, and pure satisfaction as he ran his fingers over the soft layer of pubic hair, parted her labia, and plunged his swollen member inside. Matt's eyes remained fixed upon April's gaping, pink pussy as it stretched wider to accept his girth and fill her completely from the inside. He groaned as it began to move smoothly back and forth, quickly becoming coated in a slick, wet film. Within moments they were excitedly fucking, his expression still one of amused disbelief.\n\nI was caught off guard by Selena's impatience. She grabbed my hand and guided it to her breast, leading me to experience their soft compression as I cupped them. As I caressed them happily, feeling her nipples pressing against my skin with wild arousal, she reached down and grasped my cock, giving it a slight squeeze to enjoy its intense hardness, then she guided it between her legs, staring up at me with a joyful anticipation.\n\nI urged my hips forward and felt myself sink deep inside her wet canal. Selena instantly began quivering with emotion as our eyes connected and she wrapped her legs around me. Our bodies clung together, moving rhythmically and in unison. My hands traveled along her soft skin, toward her magnificent breasts as they slowly bobbed up and down on her chest in response to our movement together.\n\nSelena briefly glanced over at April and Matt. She gazed in amazement at the sight of her boyfriend, fucking her with wild abandon. This seemed to fill her with an electric, voyeuristic charge. She turned back to face me, suddenly fueled with excitement, hungrily whipping her pelvis toward me. I ran my fingers through her beautiful hair and gazed down at her bouncing boobs. Her soft body moved in waves, like a winding serpent, taking my cock deeper and deeper inside, softly squeaking with a liquid suction.\n\nWe fucked with increasing speed as she became lost in a haze of desperate arousal. She began to moan loudly, grasping my arm tightly. After a few minutes, she reached around and grabbed my butt, clenching it tight and drawing me closer to her body. Her head fell back and she arched her body, pressing her breasts up toward me. I leaned down and took her nipples in my mouth as we continued to rock our hips against each other, driving my cock through her satiny depths.\n\n\"Ohhhhh god, Alex...\" she groaned, shaking in my arms. She fell limp, breathing rapidly, gazing up at me as if shocked by her own body's response to mine. \"Fuck me from behind...\" she begged, as she regained control and a grin returned to her face.\n\nI quickly flipped Selena over. She rocked back and forth as she moved one knee to the side and then the other. Her butt wobbled loosely and I ran my palms over her soft cheeks, then gave them a playful smack, sending them rippling. She giggled and arched it upward, extending the slit of her aching pussy toward me. Her hairy lips were a sloppy mess and puffed up with arousal. I spread her labia apart and drove my cock back into the bright pink tunnel that emerged.\n\nSelena's innermost muscles squeezed and massaged my throbbing cock as it moved inside her like a piston. My pelvis thundered against her ass over and over, causing her cheeks to undulate. The repeated slapping of our bodies almost masked her muffled moans, which she cried into the sheets in a state of ecstasy. I reached under her body and cupped her swinging tits, feeling them bounce playfully against my palms.\n\n\"Mmmh! Alex!\" she cried out. She glanced back at me, devastated with pleasure. She peeked through her falling hair with a blissful smile. \"Yes! Fuck me! Fuck me!\" she begged, clutching the sheets.\n\nAs I continued to pound frantically against Selena, I looked over at my girlfriend. Her tits were jostling about as she fired a fierce look of determination and angry lust at Matt. They fucked aggressively, desperate to unleash a long bottled up desire for one another in an explosion of pleasure that was nothing short of ferocious. April begged Matt to fuck her harder and faster, as her lips quivered with an unquenchable desire. I saw her reach the ultimate summit of pleasure, almost equal to pain, as if her body were taken to the farthest limits of what she could endure. And I felt happier and closer to her than I ever had before.\n\nI realized that what turned me on most about her, what made her so different than the other girls I'd dated, is her supreme honesty and lack of fear. She wasn't afraid to reveal what she wanted, who she wanted it from, where, and when. Being open and transparent about her sexual desires simply wasn't as taboo as it was for other girls. She was confident, brave, and unapologetic. Such things as jealousy couldn't have been further from my mind, knowing that she wasn't using Matt against me, or us. In fact, she wanted to badly to share her desires with me, support and encourage my own, knowing that I'd long desired Selena, and expressing excitement at my opportunity to experience an incredible intimacy with her. Despite trading partners, we were closer than ever. Partners in crime, as they say.\n\nSoon both Matt and I were nearly worn down, having exerted ourselves with such unrelenting hunger. April and Selena began laughing together as they climbed atop our exhausted bodies, exchanging giddy looks with each other as they each grabbed a cock, guided it between their legs, and sunk down onto our bodies. I watched our girlfriends begin bouncing up and down with excitement, then I exchanged a knowing look with April, wordlessly celebrating the realization of our goals together.\n\nMatt and I gazed up happily at our lovers as they feverishly bounced and rocked their hips against us. Two pairs of big boobs swung and danced about wildly, as if reflecting their mutual joy. They looked as if they were out of their minds, having conquered us men. We laid there helplessly as they drove us to an intense pleasure in an attempt to match the bliss we had just given them.\n\nI reached up and grasped Selena's soft, bouncing breasts as she threw her head back and laughed with joy. Her beautiful hair draped down her back and swung about as she urgently milked my aching cock with her tight pussy. I knew I couldn't take much more. My body tensed up, frantically trying to maintain control over the tingling waves of pleasure moving through my entire body.\n\nAs desperately as I tried to last, I could see that Selena could not. She began to cry out, her eyes rolling back into her head as another orgasm took hold of her entire body. Selena submitted to me fully, putting herself entirely in my loving care as her body shook with violent pleasure. She collapsed forward, trembling in my arms, vulnerable and entirely at the mercy of my thick cock, penetrating her body as it seethed with an uncanny desire for indulgence.\n\nSeeing her pleasure put me over the top, I knew I wouldn't last another minute. We frantically kissed each other as she resumed grinding against me. \"Selena... I'm gonna come,\" I groaned into her ear.\n\nShe sat back up excitedly, and withdrew from my cock. I glanced over at April and Matt. They, too, had reached their limit, as Matt's long cock slid out of April's pussy. She leaned forward and spit on it, then began to quickly pump it with her hand. Selena knelt before me, breathing rapidly, and eying my cock with excited anticipation.\n\n\"Come for me, Alex!\" she begged, between breaths. \"I want to feel your cum all over my body!\"\n\nShe arched her back slightly, offering her breasts to me. I quickly moved onto my knees, angling my throbbing cock toward her chest, jerking at it with desperation. Her breasts wobbled about in response to her heavy breaths, then suddenly stopped as she saw the look on my face and she held her breath. I felt the surge of intense pleasure well up inside me, and continued to give myself long, smooth strokes as I began to groan. Long, thick spurts of cum soared from my cock and landed upon Selena's tits. She exhaled a sudden laugh as she looked down excitedly at my repeated ejaculations, feeling the warm splash of cum upon her body.\n\nMatt, too, soon felt the sweet release of pleasure. April furiously went at his cock with determination, until he moaned loudly and shot a load of cum into the air. Like a geyser, it splashed down on her fist as her tight grip moved swiftly up and down his hard shaft. Soon they were both covered in thick gobs of semen; spent and consumed by a serene bliss.\n\nWe collapsed beside one another, frantically trying to catch our breath, and trying to make sense of what this all meant. For several minutes, all four of us lay there in bed, in a messy, exhausted heap, our bodies still slowly burning with a lingering shiver of lust. But the silence was inevitably broken by Selena's spirited laugh.\n\n\"Wow, I love Valentine's Day!\" she exclaimed, still casually caressing my body.\n\n\"Seriously!\" replied April. We all laughed. April turned and looked across the bed at me. \"Thanks babe, that was sooo much better than a box of chocolates...\" she added.\n\n\"No problem,\" I said, smiling back at her. We exchanged a deep look of gratitude for allowing each other to pursue our desires together.\n\nSelena grinned and said, \"You say that as if Matt and I are your Valentine's Day gifts!\"\n\nApril and I exchanged smirks, each knowing what the other was thinking.\n\nSelena observed this, and her mouth slowly opened until a smile began to form at the edges. She fell silent for a moment, lost in a private amusement. Then, with a mischievous look, she spoke up, saying, \"Anyway... it's kind of funny...\" She briefly glanced at Matt, as if wordlessly asking permission for something.\n\n\"What is?\" I asked.\n\n\"Well... we had this conversation a couple days before you guys invited us here...\" Selena began. She turned her head and looked at April. \"I asked Matt which one of my friends he finds most attractive and... um... he said you.\" April was suddenly beaming.\n\n\"Hey, wait a sec. To be fair, you picked Alex too!\" Matt said, sitting upright. Selena turned to face me, blushing, then nodded in affirmation.\n\nApril and I couldn't help but start laughing. This was, after all, how she and I had found ourselves in this situation to begin with.\n\n\"I'm just gonna throw it out there that maybe this was fate,\" added Matt, with a wry grin.\n\n\"Actually... since you mentioned having that conversation...\" April began.\n\nI knew what she was about to say. There was no reason to hide the truth anymore.\n\nSo I sat, and I watched the familiar, devilish grin begin to stretch across Selena's face as she listened to our erotic confession, and the whole, salacious truth began to emerge...\n\n***\n\n-- Happy Valentine's Day to all! --\n\nIf you enjoyed this story, please don't forget to vote, and tell me what you thought! "
    ],
    "authorname": "SolarRay",
    "tags": [
        "couples",
        "seduction",
        "swingers",
        "swinging",
        "cheating",
        "sharing",
        "sauna",
        "exhibitionism",
        "reluctance",
        "romantic"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/two-couples-one-cabin-a-seduction"
}