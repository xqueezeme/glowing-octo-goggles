{
    "title": "A Boiled Frog Pt. 04",
    "pages": [
        "Ok, after the last couple of comments I didn't think I could wait any longer, so here is Part 4, a little shorter and sooner than I was planning, but hopefully it will allay some concerns while I work on the next section. I apologize for the brief amount of sex in this one, but I hope you still enjoy it. Thanks to everyone who commented and have favorited me or given me good rankings, you are what keep me writing more. \n\n***** \n\nChapter 1 \n\nIs it possible to literally die from embarrassment? I know it's a common saying, and people say it all the time. But is it physically possible? Cause if it isn't, I think I came close to being the first. Let me recap my situation for you to put it in perspective and maybe you will understand why I thought I was in my last few minutes on Earth. \n\nFirst off, I am a heterosexual GUY who just happens to have had my chest blown up this morning so that I have a pair of jiggling, saline-filled breasts wobbling everywhere. I'm also barely able to breathe because I have a corset that's making me suck in five inches of waistline. Then I can't hold onto crap due to claws attached to my fingernails that make my hands practically useless. And let's not forget about the dildo shoved up my ass, which is rocking back and forth in me causing me not to think straight. Plus, I just had to do the 100-yard dash to my truck in 5'inch heels that are locked onto my feet so I can't remove them. \n\nA pretty terrible situation, right? Can it get any worse? Why yes, it can! I had to do that 100-yard dash to avoid a woman who knows I am a guy and who knows all my friends. And where am I headed? To deal with my wife who has brought a man into our bedroom. I was so concerned my marriage as I know it was over. I didn't want to go home and face the music, but what else can I do? \n\nI made it to my car gasping for breath and my heart racing in overdrive, only to not be able to get my keys into the ignition before her car pulled up behind me effectively blocking me in. I sat there hyperventilating and praying to my creator, something I hadn't done in a long time, for a miracle to get me out of here before I died of over embarrassment. As a last-ditch effort, I shook my hair so that it hung down covering most of my face. \n\nDeidre, my huntress, got out of her car and strolled towards me. She was all grins as she motioned for me to roll down the window. I reluctantly did and she reached in and softly caressed my cheek, then slowly swept the hair back off my face. Her voice then dropped to a whisper and what she said next sent panic through my bones and caused the hairs on the back of my neck to rise. \n\n\"Well, well, well,\" she said. \"Hello, Chris.\" \n\nAs a Hail Mary, I squeaked out, \"Who's Chris?\" \n\nShe chuckled. \"If I hadn't seen the video, I never would've guessed. But I've been drooling over your cute butt when you swing a bat for over two years. That gave it away. Then, when I saw your truck, it sealed the deal. \n\nI groaned. \"Please don't tell anyone. Can you pretend you never saw me?\" \n\n\"Oh, honey,\" she smiled. \"Of course, I can,\" after a pause, \"for the right price. At least on the first part, the second part is impossible. You look so good right now. That's forever burned into my brain.\" \n\nI cringed. \"Ok, I hate to ask. What's the price? What do you want?\" \n\n\"Well, Chrissie baby, I want four things.\" I visibly sagged at this news. \"The first is a given. We need your bat in our lineup. You're the Diva's new right fielder. The girls will be so psyched.\" \n\nI did miss playing ball. But on an all-girls team? Could I do that? \n\n\"Will you tell them it's me?\" I questioned. \n\n\"Not if you meet my other demands.\" \n\n\"Which are?\" \n\n\"Well, I gave you my number seven weeks ago and you never called. I admit, I've been hurt. I'm not used to being turned down. I put myself out there ...\" \n\n\"But I'm married,\" I complained. \"I can't cheat on my wife.\" \n\n\"So, who were the two Amazon chicks?\" she said, arching one eyebrow. \"I watched you kiss the one and say you were a couple with the other? Don't deny it.\" \n\n\"Lisa is my wife's best friend,\" I stated. \"My wife set us up to help Lisa out of a tough time. It's a long story.\" \n\n'Well, I want a minimum of seven dates with you,\" she firmly stated. \"The Amazon queen was drop dead though, if you bring her along I will count that as a double.\" \n\nI gazed into Deidre's rich green eyes to see if she was serious. She really was a beautiful woman. While older than me, she had kept herself in ridiculous shape. She was what I would call a \"hard body.\" She wore her hair chin length in an afro with several of her curly locks dyed shades of blonde, bronze, brown, and black. Although an inch shorter than me, she probably had me by thirty pounds, all of it muscle. Her light chocolate skin rippled lean with muscles and despite that, her tank top revealed a generous amount of cleavage. \n\n\"Just dates?\" I asked. \"Traditional dates where I take you out to movies and dinner?\" \n\n\"Something like that,\" she said. \"I do get lonely. But I choose the time and place.\" \n\n\"Okay, that's two. What else?\" \n\n\"One of those dates is my office's Halloween party. That one you must pretend to be my steady girlfriend. Totally into me, if you know what I mean.\" \n\nGrrrrr. I hate parties. I just had to do this with Lisa in Vegas. Does lightning strike twice? What did I do to deserve this? \n\n\"And?\" I demanded, annoyed now. \n\nShe looked me dead in the eye and stated slowly but firmly. \"I want to see you naked.\" \n\n\"Naked?\" I gasped. \"Why? When do you want that?\" \n\n\"Right fucking now. Get in the car and we will go back to my place. Then you will strip completely and let me check you out.\" \n\n\"I can't,\" I whispered, starting to blush in humiliation. \n\n\"I got Dennis's number in my phone. Should I give him a holler?\" \n\n\"No, it's not that,\" I said, turning further red. \n\n\"What is it then?\" \n\n\"This is so embarrassing,\" I muttered. \"I can't strip naked. My heels are locked on my feet and I don't have the key.\" \n\n\"Oooooh, kinky. Do you have stockings on?\" \n\nI put my head down in shame. \n\n\"Yes.\" \n\n\"That'll work then. Let's go.\" \n\n\"I can't go. I need to go home. I have to go see Julie ...\" \n\nI lost it right there and started bawling. \n\nShe looked at me in surprise to see if I was faking and when she realized I wasn't, she opened the truck door and pulled me out into a hug. \n\n\"There, there, sugar bear,\" she cooed, patting me on the back. \"It's going to be ok. Tell Mama Dee what's wrong and I will help out.\" \n\nI lost it even more. I was turning into an emotional wreck. The tears were flowing and I could feel the makeup that Andre had so expertly applied start to run. I cried into her shoulder for a good few minutes before I finally got control and could speak. \n\nAmidst a few sobs, I got out the story of Mick and the fact that Julie was pressuring me to sleep with him and was at home now probably boinking the crap out of him since I was here with Deidre. I had to go home to save my marriage if that was at all possible. \n\nShe said, \"I got this. Don't you worry, Mama Dee is going to make it all better. Give me your phone.\" \n\nI did and she scrolled through my favorites and hit Julie. \n\nJulie answered on the second ring and I heard her loudly despite the phone being at Deidre's ear. \"Tina, where the hell are you? You are ruining this day. I had it planned out perfectly. I wanted it to be special for you.\" \n\nDeidre looked at me and mouthed, \"Tina?\" \n\nI blushed even more and nodded. \n\nDeidre then spoke in a rough voice. \"I'm sorry, Tina can't come to the phone right now. She is in the middle of being kidnapped.\" \n\nMy mouth dropped open. That was not what I was expecting to hear at all. \n\nI think it took a few seconds for it to register with Julie as well. She stopped talking for at least ten seconds then she blurted out, \"What did you say?\" \n\n\"Do you ever want to see Tina again?\" Deidre said, again in the harsh voice. \n\nI heard Julie gasp as it finally clicked what she was hearing. \n\n\"Yes, yes, please don't hurt her,\" spilled out of the phone. \"I love her. I will do anything you need me to do, just please, please, don't hurt her.\" \n\n\"First off, ditch the Mick. And don't think about calling the police or anyone else for that matter. We are monitoring you. Then get in your car and drive to Mel's Coffee Shop on 17<sup>th</sup>. Grab a booth and wait to be contacted. Do you understand?\" \n\n\"Uh, sure,\" Julie squeaked out. \"Promise me you won't hurt her? I can pay.\" \n\n\"No harm will come to her if you follow the instructions exactly,\" and then Deidre hung up. \n\nMy mouth still hung open in shock. \n\n\"What the hell,\" I said. \"I thought you said you were making it better, you just made it 1000 times worse.\" \n\n\"No I didn't,\" she replied. \"It's actually not that bad. I got a lot out of that conversation. The biggest thing is that she still loves you. Trust me. Everything is going to be okay.\" \n\n\"But what if she calls the cops?\" I asked. \n\n\"Then YOU will tell them it was a big joke to get her to a surprise party or something. Don't worry about it.\" \n\n\"You are crazy.\" \n\n\"You're right. I am. So now that you know that, are you going to meet my demands?\" she asked, wiggling her eyebrows. \n\n\"I never said I would sleep with you. You didn't ask for that!\" \n\n\"I would never force someone to have sex with me,\" Deidre smirked. \"But I won't turn you down once you fall for me. It's an inevitable slope.\" \n\nI sighed. \"Yeah, yeah right, we'll see. Let's go.\" \n\nI climbed into the passenger seat of the Lexus and put myself in Deidre's hands. \n\nChapter 2 \n\nDeidre's car was immaculately clean so I was a little surprised to hear her say, \"Sorry about the mess, I wasn't expecting company,\" as we walked into a small house in one of the seedier neighborhoods of our suburb. I was a little surprised since Deidre's late model Lexus and her wardrobe projected an affluence that this house didn't fit in with. \n\nAs we walked in the living room, which wasn't THAT dirty, I looked around. It just had some toys on the floor and a playpen in the corner. There was a spit rag on top of the couch that had been used but honestly it was pretty clean for someone who obviously had a baby living there. \n\n\"You have a kid?\" I asked, knowing nothing about her life except she played softball and was a knockout. \n\n\"That's my grandkid's stuff actually,\" she said. \"I know, I know. I look pretty good for a grandma. Let's go up to my room.\" \n\nI followed her up the stairs stating again, \"I am not doing anything sexual with you. I love my wife and she's going to be at Mel's waiting for us any second. \n\n\"I understand,\" she said. \"It's just I've always been fascinated by the T in the LGBT lifestyle. You are my first chance to see one.\" \n\n\"I'm just a guy,\" I pronounced. \"There's no T. I don't know what the heck I am. I just know I make my wife happy.\" \n\nWe reached the top of the stairs and entered a bedroom with a large bed and next to the bed was a vanity with a large mirror. She directed me in front of the mirror and said, \"So you're just a guy in high heels and a cute dress. Is that it?\" \n\nI blushed at that. \n\n\"Dressing like this makes my wife happy.\" \n\n\"So, you said,\" she said, easing herself down on the bed. I turned to face her. \"But what about you, does it make you happy?\" \n\n\"I don't know,\" I honestly replied. \"At times it does, sure, sometimes I feel so amazing, but other times I feel like I'm not in my own body. The only thing I really know is that most of the time I think I will be seen as a freak and that just scares the shit out of me.\" \n\nShe laughed at that. \"My, you are cute. I don't care if you are just a guy in a dress. You're a beautiful one. Go ahead, take it off. Let me see you.\" \n\nTrying not to blush too much, I reached up and pulled the spaghetti straps off my shoulders and let the dress slip down off my body. Stepping out of it, I slowly twirled in all white: bra, corset, panties, thigh highs and heels. \n\n\"Is that what you wanted to see?\" I asked. \"Happy now?\" \n\n\"Is that real cleavage?\" Deidre questioned. \"What have they done to you?\" \n\nRather than reply, I turned my back to her, looked into the mirror, reached back and undid the bra, and slowly pulled it off to expose myself. I pulled it down while looking in the mirror so both of us could see without me having to face Deidre. It somehow seemed more private. \n\nMy milky white breasts, emphasized by my new tan, jiggled and jumped as they came out of the bra, swaying this way and that as I pulled the bra off my arms. Now it was Deidre's turn to have her jaw drop open. \n\n\"Oh my,\" she breathed. \"You are heavenly.\" \n\nNot waiting for her to demand more, I reached down and untucked myself from the gaffe, and pulled the panties down to my knees, where they dropped the rest of the way down. My cock rose a little in relief from the gaff, but remained flaccid. \n\n\"Well I can see why your wife is happy. You dear, are sex on a stick. I could eat you up.\" \n\nDeidre jumped up from the bed and I backed away by the sudden movement, but she headed for the bedroom door, not to me. She got to the door, closed it and locked it, and then turned to face me. \n\n\"You know where I said I wasn't going to force you to have sex with me?\" she said with a big grin on her face.\" \n\n\"Yeah,\" I said apprehensively. \n\n\"Well, I lied.\" \n\nThat dropped my jaw wide open in shock. I froze there in a panic. \n\nDeidre remained at the door for a second then she took a step towards me. I backed up further and she stopped, bent over, and started chuckling. \n\n\"I'm just messing with you,\" she said. \"Sorry. I couldn't help it. You looked so serious.\" \n\nI held my breath for a second longer, then realized that she was indeed playing with me. \n\n\"Sit on the bed and tell me the story of how you got to being just this guy.\" \n\nI sat on the bed, shyly covering up my penis and my hands covering my breasts and closed my eyes and began to talk. With my eyes closed, and Deidre remaining on the other side of the room, I felt a release as I poured out my story. \n\nI don't know why but I told her everything. She was a good listener and didn't interrupt, but gave me the appropriate noises that seemed to egg more out of me when I thought I couldn't say any more. I told her about the hair removal incident, the first dress-up, the salon trip, the lessons from the Internet as my birthday gift, the Vegas trip with Lisa, the meeting of Mick, the dance with Ted and fleeing home full of jealousy, and onto the events of today. \n\nWhen I mentioned that Julie seemed to be changing and getting more aggressive towards me she asked for an example. \n\n\"Well, it's embarrassing,\" I said. \n\n\"Don't worry honey, Mama Dee has heard it all before,\" Deidre said. \"Tell me what a nasty little cute young vixen Julie is becoming.\" \n\n\"Well a couple of times this past week she has climbed onto my face while I was asleep and made me, you know, lick her before she gets dressed for work. She never did it before and now she likes to grind on my tongue even more than she likes intercourse it seems. She even had me kneel in the shower and lick her while she washed her hair one time.\" \n\n\"Why did you do it?\" \n\n\"Cause I want her happy. What's the big deal? It's not like I don't enjoy it too.\" \n\nShe asked about my breasts and I told her they were injected with saline and temporary. They would go down over the next couple of days. \n\n\"Well that's a shame,\" she said. \"They look terrific.\" \n\nHer next question floored me. \"Does your cock still get hard?\" \n\n\"Ya, of course, I'm not 60, why wouldn't it?\" \n\n\"HRT could affect your performance, at least that's what I've heard.\" \n\n\"What's HRT?\" \n\nShe raised her eyes in disbelief. \"Um, hormone replacement therapy.\" \n\n\"Oh, I am not taking anything like that,\" I replied. \n\n\"Are you sure?\" \n\n\"I don't think I am. How would I know?\" \n\nShe shrugged. \"Any mood swings lately?\" \n\n\"I have been crying all the time. I can't seem to stop.\" \n\nShe hmmed at that. \"Interesting.\" \n\n\"So, you and Julie haven't talked about any of this at all. She just did it and you put up with it. You haven't discussed an end goal or anything?\" \n\n\"Well a couple of times she asked me if I was okay with it, but I want to make her happy so I would always tell her yes.\" \n\n\"Okay, forget Julie, forget the Amazon, forget them all and let's talk about you. Do you miss being a guy?\" \n\n\"I miss my friends and I miss playing softball and playing in the band, so yeah.\" \n\n\"Those are not things about being a guy, those are just things you did as a guy. You could do those things as a girl. I mean do you miss being a guy?\" \n\nI thought about that for a second and couldn't think of anything I missed other than my beard, and the pleasures I got from being a woman far outweighed that. \n\n\"I guess not,\" I said. \n\n\"So, you are comfortable in women's clothes?\" \n\n\"I love some of them. The heels not so much but Julie and Lisa love me in them and if they wear them and I don't, I feel so short. This corset leaves something to be desired, though. I could live without it for sure.\" \n\n\"Being a woman has some sacrifices, that's for sure,\" Deidre said. \"That looks too good on you, you need to leave it on. You look ridiculously good in it.\" \n\nI smiled at the compliment. \n\n\"Thanks. So, you really think I look good as a girl?\" I cocked an arm up to my ear, stuck out my breasts and spread my legs to show off everything. \"I know Julie and Lisa like this look, but what do you think?\" \n\n\"You are such a girl,\" she laughed. \"Fishing for compliments. Is that a butt plug you have in that I noticed?\" \n\nI blushed at that. \"Yes, I want to take it out. Do you have a bag I could put it in?\" \n\n\"Let me do it for you.\" \n\n\"Umm.\" \n\n\"Not sexual,\" Deidre said. \"I just don't want you to get hurt in any way.\" \n\nI thought I would be okay. That was a lousy excuse. but I figured she had been a great listener and what the hell. \n\nI got off the bed and walked over to her and bent over right in front of her. She reached down, caressed my ass, and grabbed the plug. Rather than yanking it out, she slowly rotated it in a corkscrew method. My dick appreciated the effort and quickly rose to the occasion. After a couple of turns, she finally pulled it out. \n\nI turned around and she got her first look at my cock proving it could work still. \n\n\"Very nice,\" Deidre said. \"Your wife is one lucky woman.\" \n\n\"Speaking of my wife, should we go see her?\" \n\n\"Sure, get dressed. And then we will go fix your marriage.\" \n\nChapter 3 \n\nI was quiet on the way to the caf\u00e9, a little nervous. It must have showed because Deidre kept talking in a soothing voice saying that everything would work out and to trust her. She even said that we were becoming friends and I could call her Dee now, instead of Deidre. She only allowed her special friends to do that, and I had become one of them. \n\nWe circled the block first before we pulled into Mel's parking lot - no police - and I immediately saw Julie's car and pointed it out. \n\n\"She's inside,\" I said. \"That's her car.\" \n\n\"Now, sugar bear,\" Deidre said. \"I want you to wait in the car until I call you. Okay?\" \n\nI nodded. Anything that put off my confrontation seemed like a blessing at this point. I didn't want to hurt Julie, but I couldn't share her with Mick. I honestly wasn't into the guy and didn't even think that he was into me when I invited him over. I thought he liked the car. Heck, Billy had been a lot sexier and had given me butterflies. Mick was just another dude. \n\nI sat there and watched Deidre go in. I sat there for a few minutes before I couldn't take it anymore. I had to know what was going on. Just then, I noticed a rear door open and this Mexican guy came out, propped it open with a rock, and start smoking a cigarette. An idea popped into my head and I was out of the car in a flash and headed toward him. ",
        "I walked up and his eyes were glued to my legs. I smiled as sexily as I could and said, \"Ba\u00f1o?\" \n\nHe pointed with a jerk of his head down to the right and I slipped in the back door and headed to where I could hopefully see the girls talking. I felt his eyes on me until I moved out of view. \n\nLuck was with me as I poked out. They were in the booth right next to the bathroom corridor. I couldn't see them, but I could hear them. That was honestly better, cause this way I didn't have to worry about being seen. \n\nIt must have taken me ten minutes to get into position so they had been talking for a while. I tried to tune out the noise of the kitchen behind me and focus on their conversation. \n\n\"Did he tell you his cock got hard just at the thought of Mick sliding his pole up his butt?\" I heard Deidre say. \"Did he say he wanted to choke on Mick's dick while you choked on his? No. Did you even ask him if he wanted to sleep with Mick?\" \n\n\"Geez,\" I thought, \"Pornographic enough. Deidre knows how to lay it on thick.\" \n\n\"Well, no,\" Julie drawled out. \"But the stories all say ...\" \n\n\"Shit, Julie,\" Deidre interrupted. \"That's pornography. That's people's fantasies and crap. That's not real life. Instead of using people's twisted desires, why don't you talk to the man you married and COMMUNICATE with him to find out what he wants?\" \n\nMy wife reads porn? \n\n\"Yeah, but ...\" Julie started but Deidre was on a rant and talked over her. \n\n\"He's not gay, Julie, although I bet he would've slept with Mick just to make you happy, and he would have hated himself for it. And from what he told me, if Mick had so much as touched you, that would've driven him crazy with jealousy. Is that what you want? To drive him to a mental hospital?\" \n\n\"No, absolutely not,\" Julie said firmly. \"I like Chris just the way he is.\" \n\n\"Then quit trying to push him further down the rabbit hole and let him make some decisions for once.\" \n\n\"Okay, okay, I see your point,\" Julie acknowledged. \"When can I see him?\" \n\n\"Call him, and he will come in.\" \n\nAt that point, I turned and headed back to the car since I didn't want them to hear me picking up the phone. It rang just as I got outside. \n\nI picked up on the first ring. \n\n\"Hello.\" \n\nUpon hearing my voice, Julie started sobbing into the phone. \n\n\"I'm so sorry, baby,\" Julie managed to get out. \"I was sitting here so worried about you and all these terrible things kept going through my head. Come inside so I can see you.\" \n\nMy heart broke. I hated to see my baby in pain. I headed straight for the front door. \n\nAs I entered the front door of the diner, I turned to head to the booth where I knew they were. Julie came running up crying and threw her arms around me. Lightning fast pecks were covering my cheeks and lips as her arms squeezed me tight. My lips found hers and I kissed her hard. \n\nA nasty comment cut through our joy, \"Get a room, you lesbos. There are kids here.\" \n\nDeidre walked up behind us and said, \"I paid the bill. You two kids get out of here.\" \n\nI looked over Julie's shoulder and mouthed, \"Thank you\" to Deidre. \n\nShe winked at me. \"Don't worry about it. I got my payment coming.\" \n\nI climbed into Julie's car and once she got on the road I turned off the radio and said to her, \"I'm sorry, Julie. I wasn't strong enough to tell you how I felt. Most of this is my fault.\" \n\n\"No, it's mine,\" she replied. \"Lisa and I have had these big powwow sessions where we plan everything out and we didn't even talk to you about it. I hash it out so much with her that it just seems redundant to bring it up with you, especially when I know you normally would just say whatever. We should have considered you more.\" \n\n\"You mean she knew about Mick and the special day?\" \n\n\"She helped me plan it.\" \n\nNow I was mad at Lisa. She wasn't the innocent bystander I thought she was. And I had told her I didn't like guys. What the hell? \n\n\"So, what else don't I know about?\" \n\nShe blanched. There was obviously more. \n\n\"Actually,\" I interrupted, \"You know what? I don't want to know, at least not right now. All it will do is make me madder than I am right now. And I don't want to be mad at you right now.\" \n\n\"What do you want, baby?\" \n\n\"I am not completely sure. One thing I don't want is to have to share you. I don't think I can handle that.\" \n\n\"Um, dear,\" Julie said. \"I just promised Deidre four 'dates' in order to get you back.\" \n\nThat put me into a hysterical laughing fit. For some reason, I found that funny as hell. \n\nJulie looked at me in puzzlement. \n\nChapter 4 \n\nThe next morning, I was woken by the insistent ringing of my cell phone. I had stayed up late, despite Julie trying to drag me to bed. Every time Julie tried to talk to me, I told her not now, that I needed time to collect my thoughts. I asked for her to give me a night in peace. I said over and over that I loved her but I needed some space. She still looked in anguish to talk to me but I refused to budge. I was feeling a little emboldened and a little childish but I wanted her to stew a little. \n\nOnce she was in bed I slipped into the room and grabbed some clothes, a pair of old boxers I had found a while back, one of my old work polos and a pair of my jeans. I slipped them on as a reminder of me before this all began. I was surprised how uncomfortable I felt in them. I decided I did like the lace, the silk and the satin. I slipped off the clothes, threw them in a trash can, and put back on the corset, a pair of panties and a nightgown and went to bed. \n\nGroggily, I rolled over in bed reaching for the phone. I noticed Julie's side of the bed was empty. I answered it with a hoarse \"Hello?\" \n\n\"About time you wake up, sleepy head!\" a voice pronounced cheerily. \"I have been calling for almost an hour now.\" \n\n\"Who is this?\" \n\n\"It's Ash. Lisa went to work and I'm here all alone and I got some errands I need to run. Come over and drive me around in your new car. Lisa told me you finished it.\" \n\nI wanted to wallow in my circumstances, but maybe a distraction was just what I needed so I told her to give me 45 minutes and I would be over. \n\nI took off the corset I wore to bed and headed for the shower. After showering, I tried to leave in a hurry but couldn't seem to pull myself away from the mirror. I marveled at my breasts. They had receded a little during the night but not much at all. I hefted them and admired them and if I stretched my neck I was even able to get one of my nipples into my mouth. It was naughty and made me feel so feminine and horny. I actually stroked one off while suckling on my own tit. How crazy is that? I also realized that it was the first time I had masturbated in weeks. \n\nAfter I came, I was a little embarrassed by what I had done, looked at the time, and realized I was already late. I threw on clothes, put on a dash of makeup, and pony-tailed my hair in a hurry. As I got dressed in a simple t-shirt and jeans and threw on tennis shoes, I marveled at what it felt like to breathe again. I had been laced up much tighter than I was used to and it was a relief, yet somehow, I felt empty inside, like something was missing. I almost took the clothes off again to put back on the corset, but then I realized that would make me even later so I left the house without it. \n\nAsh was waiting at the curb when I pulled up. She looked amazing in a skimpy red dress, red high heels, and a white fur coat. She got in and immediately gushed about the car. \"It looks so good. You are so talented.\" Then she leaned over and kissed me. I thought she was going for my lips so I turned at the last moment so she got cheek. \n\n\"Where are we off to?\" I asked. \n\n\"The university!\" she said excitedly. \"I got in. I will be here after Christmas with you.\" \n\nWith me. It dawned on me that maybe Ash did have a crush on me after all. I hadn't thought it was serious but this was a little nuts. How to let her down gently? \n\n\"Ash,\" I said, hesitantly. \"You know I am involved with Lisa. Nothing is going to happen between me and you. I'm taken. You should probably find someone your own age.\" \n\n\"I tried, right after you left, but the spark wasn't there. It wasn't the same. It wasn't magical like when you kissed me.\" \n\n\"It will,\" I coaxed. \"You just need to find the right guy and the magic will come. He will make you forget about me completely.\" \n\n\"I'm done with guys,\" Ash said. \"They're so lame. They expect you to go down on them but they complain when you request the same. I want someone like you. I let Gina go down on me and she was amazing. She made me cum and cum and cum.\" \n\n\"Not all guys are like that, Ash, I promise you that. Don't give up on all guys.\" \n\n\"You did.\" \n\n\"That's different.\" \n\n\"No, it's not.\" \n\nCrap. I was potentially ruining this girl's love life, all on misconceived notions. I was going to have to tell her my secret, the problem was, I didn't know if I had the courage to do it. As we drove, I opened my mouth once or twice to tell her but no words came out. I kept waiting for the opportune time but it never came. \n\nAs we pulled into the college parking lot, I chickened out completely and told myself I would have Lisa tell her. I turned off the car and followed her in for her orientation tour. \n\nBeing with Ash was painful. She was gorgeous and clingy and flirtatious, and, in my rush to get out the door, I had thrown on my t-shirt without putting on a bra. My nipples, hard from the chill of the day, were dragging across the material with every turn and sway of my body and it was making me incredibly horny. My dick ached from trying to grow while bent in half and tucked in. It was very uncomfortable. \n\nAnd Ash kept making it worse. She held my hand as we walked around the campus, occasionally grabbing my arm and holding it tight, pushing my bicep into her breasts. I felt a tingling sensation on my skin every time her bare flesh caressed mine, and it left a residue of warmth, like a sunburn. She would lean her head on my shoulder when the tour guide had us stop and pause as he lectured on some details of a certain building. Stray strands would tickle my nose and force me to breathe in her beautiful scent, which felt like pheromones on crack. Any time a boy would look like he wanted to talk to her, she would cuddle into me as if I was her girlfriend. Her perfume was intoxicating and I found myself daydreaming of fucking her as the tour guide droned on. I was going insane. This was Lisa's little sister. I had to stay away. \n\nBy the time the tour was done, my stomach was rumbling and I was ravenous as I hadn't eaten all day. Once we were in the car, I pulled into the first restaurant I saw for food, a Red Robin. \n\nWe were seated and eating and discussing the college when Ash announced, \"I love it. This is our first date.\" \n\n\"Ash, you need to stop,\" I said firmly. \"We can't go there. You are driving me crazy. I can't cheat on Ju-Lisa. You need to find a guy ...\" \n\nShe interrupted with, \"or a girl\" \n\n\"... your own age. I'm taken. Please don't push this anymore.\" \n\n\"But what if I get Lisa's permission?\" \n\n\"No, let's not go there, I can't keep having impure thoughts about my future sister-in-law ...\" \n\nI trailed off. What the hell was I thinking? She would never be my sister-in-law. I can't marry Lisa, I'm married to Julie and I love her. My head was a bundle of emotions and I couldn't separate them apart from each other. How much of my life was real and how much was fiction? I was so confused. Heck, I couldn't even answer the question of what sex I was. How fucked up is that? \n\nAsh interrupted my thoughts with, \"So you do have impure thoughts about me.\" \n\nAt that point, I was saved by my phone ringing. I looked at who was calling and it was Deidre. I grabbed the phone, stood up, and said \"I need to take this. Be right back,\" before walking away. \n\nAt my greeting, Deidre drawled out, \"Hello lover boy, you ready for our first date? I want to go out with you tonight.\" \n\n\"Dee, I can't. I haven't talked to Julie yet. I was planning on taking her out tonight. Can I get a pass?\" \n\n\"Unh-uh. You agreed. Don't break our deal already!\" \n\n\"Please,\" I begged. \"Can't I take a penalty or something? I really need to be with Julie tonight.\" \n\nShe paused for a second. \"Okay, I'm not heartless, I will find someone else for my event. But instead of seven dates, the total is now eight. Deal?\" \n\n\"Deal,\" I said, looking over my shoulder at Ash. \n\nShe was fixated on eating her food but at the angle I was standing I had a perfect look right down her dress. Her full breasts dangled enticingly like coconuts, looking just as firm as the fruit itself. The blessings of youth. I was so, so tempted to be bad. I knew that all I had to do was say yes and Ash could be mine. That power was a rush of adrenaline, something I had never experienced before. I needed to get out of here before I lost control. \n\nI picked up the phone and called Julie and got voicemail. I then called Julie's office. Tiffany told me she was out of the office and not scheduled to be back today. I called home and got the machine. I walked back to Ash, dropped a $50 bill on the table, and said, \"Sorry, we need to cut this short. I have to go.\" \n\nI let Ash babble about the day and her college plans on the way home, barely making the appropriates nods and uh-huhs to keep her talking. Visions of her naked, Julie naked, Lisa naked and even Deidre naked flew through my head. I imagined myself fucking each and every one of them. \n\nI pulled up to the curb at Lisa's to drop Ash off. She leaned in to kiss me goodbye and I surprised her by kissing back hard. I made out with her with reckless abandon, trying to quench the fire inside of me, but only stoking it further. I felt her reach under my t-shirt and squeeze one of my breasts and the fire and desire morphed into molten lava. \n\nMy hands flowed into her body, searching out her crevices and curves. I reached down and squeezed her tight ass. It was heavenly, as hard and tight as Julie's... \n\nThe thought of Julie's ass was like dumping an avalanche of snow on my molten body. I had brain freeze for a second before I withdrew like steam from Ash was scalding me, forcing me to pull away and break off our merging. Ash was panting hard like she had ran a 5k and her eyes beamed. radiating joy. I had to get away. \n\n\"Sorry, I really do need to go,\" I said. \"I will call you later.\" \n\nShe climbed out of the car and watched as I drove off. I looked in the rear-view mirror as I turned the corner. She was still standing there on the curb smiling after me. \n\nChapter 5 \n\nI needed to fuck someone. Julie hadn't returned any of my messages so I headed to Lisa's office. I was pissed at her but hoped I could talk her into letting me take out my anger in her, if you know what I mean. \n\nI got to Lisa's office just as Carrie of the golf clap was coming out the door. She let me in with a smile, saying, \"The last patient of the day just left. She should be free. I think she is back in her office doing paperwork.\" \n\nI said thanks and headed back without announcing myself. It looked like Carrie had been the last of the staff to leave so I would have to Lisa to myself. Perfect. I eased myself down the hallway to where her office was and opened the door without knocking, trying to surprise her. \n\nI was the one to be surprised. Lisa was there all right, but she wasn't alone. Wrapped in her arms in a tight embrace was my wife, and Lisa was kissing my wife on the face. \n\nJealousy ripped through me. As horny as I was, I didn't think I could feel another emotion, let alone have another take control, but rage seemed to move to the forefront anyway. \n\n\"I should have known,\" I yelled at the top of my lungs. \"I can't trust either one of you. Son of a bitch.\" I didn't say it out loud, but thought it to myself, \"I should have fucked Ash.\" \n\nI turned to leave to hear Lisa yell at me. \"Tina, don't go. It's not what you think at all. I'm just comforting her, that's all. She is an emotional wreck.\" \n\nConfusion crept into my emotional state. An emotional wreck, why? I was still horny and pissed off and I didn't need this too. I needed things simple. I drew closer to them and I saw that Julie had indeed been crying. Was it possible that all Lisa had been doing was kissing away her tears? \n\nThe rage fizzled upon seeing the tears. I sighed and said, \"What's going on?\" \n\nJulie turned and looked at me accusingly, her face red from crying. \"You won't talk to me! I'm losing you. You haven't slept with me since I fucked you up the butt SIX days ago. And Deidre told me you didn't like it, although you told me you did. And I said I wouldn't tell your secret to anyone else, but I have to talk to someone. Lisa is all I've got. I told you I wouldn't do anything sexual with her, don't you trust me?\" \n\nI had really stepped in a pile of shit with this one. I wanted to rewind the last few minutes and start over. \n\n\"Baby, I didn't say I didn't like that at all. I just told Deidre I wasn't gay and didn't want to be with just any random dude. I'm not looking to hook up. I'm in love with my wife. I love being with you in every sexual way.\" \n\nJulie rushed into my arms and started kissing me with abandon. As she finally pulled back to breathe, I looked over at Lisa and she was staring at us with puppy dog eyes. She was biting her lip and I could tell she was feeling unloved. I was still pissed off at her that she was part of the whole Mick situation, but I couldn't hold that against her right now. I would deal with that later. She was melting my anger with her needy gaze. \n\nI motioned her over and she came with quick steps. Still holding Julie close against me with my left arm, I reached out around Lisa and pulled her into my grasp as well, kissed her first on her neck and then on her lips. Her mouth opened and her tongue emerged, fighting its way into my mouth hungrily. Julie started nuzzling on my neck as I made out with Lisa. \n\nI was still necking with Lisa when Julie's hand grazed across my breast. She paused for a second, and then grabbed a handful. \n\n\"Oh my gosh, they're huge,\" she said. \"Can I see them please?\" She was already tugging my t-shirt out of my jeans. \n\nI broke off my Lisa and backed up towards the couch in the room and said, \"Here, let me do it.\" I reached down, grabbed the hem of the t-shirt and ripped it off over my head, sending my boobs swaying with the motions. Both girls gasped and their eyes turned predatory. They moved in tandem, mouths opening, eyes focused on my nipples. Julie reached with her hands, grabbing my left boob with both hands and squeezing it, before dipping down and suckling it in her mouth. Lisa, on the other hand, led with her mouth, grabbing my right nipple between her teeth and biting it softly. Her hands focused on unbuckling my jeans. The pleasure from both nipples was so intense and I wrapped a hand around each of their necks to brace myself from collapsing. \n\nOnce Lisa had my pants to my knees, she grabbed for the hem of the panties only to find Julie's hands already within tugging my cock out of the gaff. On its release she shoved me backwards, sprawling me onto the couch. Julie followed my cock, dropping to her knees and kissing it before taking it into her mouth. \n\nLisa stood back and started disrobing. She pulled her scrubs up over her head, undid her bra, then shimmied her pants and panties down at the same time while kicking her tennies off with her toes. Once she was down to just ankle socks, she climbed onto the couch next to me and went back to sucking on my breasts, alternating back and forth between the two, occasionally coming up for a quick kiss. \n\nI was in heaven. The stimulation from two mouths exploring my body was so intense, especially after aching for so much of the day in perpetual horniness. I grunted and groaned with pleasure, trying to hold back. After a couple of minutes, I felt Julie sink down onto my cock. She must have removed her panties and pulled down her skirt while I was busy with Lisa. ",
        "The pleasure was so intense, doubled by Lisa playful bites and sucks on my nipples, that Julie was only able to pump for a couple minutes before I fired my load into her gushing vagina. I knew neither girl had orgasmed yet and I was already wiped. I looked at Lisa's face and her eyes were laser focused on Julie's hot box as she pulled off me, our combined fluids dripping down her inner thighs. \n\nI whispered to her, \"Go ahead, I know you want to.\" \n\nLisa lunged forward burying her head between Julie's legs, her tongue lapping at the juices and trailing them up to her oozing slit. I saw Lisa's pretty pussy lips come into my view, so I reached out and grabbed her legs, adjusting her so that I had access to her while she focused on Julie. \n\nHer nectar was flowing and so I eagerly lapped at it until I brought her to climax. Julie followed a few seconds later. \n\nWe lay there in a heap on the couch and nuzzled, me with both of my girls. I was completely spent sexually and emotionally exhausted. But I had no anger in me. It had been washed away. \n\n\"Ok girls, I need to know,\" I said, feeling relaxed as I could be. \"Tell me one thing that you guys have planned that I don't know about. Just one. I don't think I can handle it all at once. But right now, I think I can handle one thing.\" \n\nThe girls looked at each other, then nodded to one another. \n\nHesitantly, Lisa spoke, \"If it's okay with you, of course, we have you scheduled for breast augmentation surgery on Thursday.\""
    ],
    "authorname": "noobdude",
    "tags": [
        "crossdressing",
        "mff"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-boiled-frog-pt-04"
}