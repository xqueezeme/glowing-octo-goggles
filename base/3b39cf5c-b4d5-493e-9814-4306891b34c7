{
    "title": "Daughter of Ziva Ch. 04",
    "pages": [
        "Hey all! So I'd like to apologize for the wait. I broke up with my boyfriend (whom I lived with) so that sucked, and moved twice in a month. That also sucked. \n\nI adore the criticism that's coming my way. What I would like to say is that, no matter how much any of us wish it, the people who hunt and kidnap woman aren't typically good people. Rorik isn't a good person. Just remember that as you read. \n\nI am now officially looking for an editor. If you are a part of the volunteer editors and wouldn't mind donating a bit of time, please message me and I'll get back to you asap. \n\nThank you for all the comments and your patience!! \n\nxxx \n\nSienna was woken by a hand on her shoulder, gently rocking her back and forth. She blearily opened her puffy, sleep crusted eyes and looked behind her. A man with graying hair was not what she expected. \n\nJerking away, her blanket clutched to her chest, Sienna croaked, \"Get away from me!\" She cleared her throat and repeated herself, as angry as she could, praying to the Mother this man wouldn't try to teach her lessons as well. \n\nHe was crouching, his hands held outwards with empty palms, making no moves toward her. He was big, even crouching, but all the Gavali men she had seen were. \n\n\"I won't hurt you,\" he said, reaching behind him. Sienna let out a vicious noise that was supposed to be a laugh. All she had been was hurt. He slowly turned towards her, a bowl and a cup in his hands. \n\nThe panic and terror that was soaring in her chest at being thrown in front of a new opponent with so little notice blinded her to his gentle movements. \n\n\"I'm not eating out of your hand!\" Sienna was close to yelling. The man, moving just as slow as before, put them near the stake that held her foot in place. He took a step back, still crouching, and then moved to stand by the tent support Rorik had tied her foot to the first night. He wasn't far enough in her opinion. \n\nSienna eyed him, her apprehension high. He was looking at her with keen eyes, his stance erect but still. It took her a couple minutes to see it, but he did not have the aggression Rorik did on his face. His eyes took her in, but it was just that - a gaze. Though she sensed no aggression or even sexual interest, what did she know about Gavali men? The one who had tied her up in his tent was as volatile as a geyser. One minute quiet, the next blasting heat into the air. \n\n\"I will not hurt you, Sienna,\" the man said quietly. Was he attempting to calm her? Was he lying? \"I was instructed to take care of you in Voivode's absence. You may eat your food yourself.\" \n\nHer hunger warred with her apprehension. It took a couple minutes of silence from both Sienna and the older man, but the hunger eventually won out. Keeping her eyes on the man, she hiked the blanket up and grimaced as she reached to snag her food and water. Sienna fought to not wolf down the food, not wanting to throw it up afterwards. She did chug the water though. \n\n\"Do you want more water?\" His voice was even and seemed naturally quiet. \n\nSlowly, Sienna nodded. Taking a breath to ready herself, she leaned forward and placed the wooden dishes by the stake in her foot, pain storming through her torso. He took the dishes when she had pushed herself back again, getting some more water from the bucket in the far corner Rorik had left yesterday. \n\n\"Can I hand it to you?\" \n\n\"No!\" Sienna said vehemently. For a moment it looked like he would insist, but instead put the full cup of water by her foot, no doubt noticing the way Sienna pulled her foot tight in its constraints. \n\nThis time the stretch was more painful, her face tightening and small noises squeezing past her lips as she hauled herself towards the cup of water. This one she sipped, relishing how the liquid soothed her dry mouth. \n\n\"May I speak?\" \n\nThe question stunned Sienna. Was this a trick question? Did she have to say yes sir? She sat silently as she realized she had been here all of two days and was already acclimating to Rorik's rules. Tears of disappointment rose in her eyes and she tilted her chin up to nod at him. \n\nA small tilt of the mouth quieted her anxiety, seeming genuine. \"My name is Sergei. I am the healer and surgeon for this camp. I have been instructed to take care of you, and those instructions included a threat of grave harm if I touched you. I have a wife who would be deeply unhappy with me if I came home with injuries, and I do not intend on seeing her upset.\" Sergei paused, crouching again. \"I have been told you have a wound on your stomach.\" \n\nHe said nothing else, but Sienna pieced it together. Sergei wanted to take a look at her wound. It hurt like hell, but she was incredibly nervous he would use her moment of weakness to take advantage of her, wife or not. \n\nSienna shifted her jaw. The food, water, and moments of independence she had been given in Sergei's presence gave her confidence. \"I need clothes.\" \n\nSergei nodded in an odd way that told her he was saying no. \"If you can arrange the blanket so it covers what you want to be covered and then I can look at the wound without seeing your nakedness.\" \n\nShe blushed for some reason. The word nakedness was so different than hot, desperate body. Sienna averted her eyes, embarrassed at the memory of Rorik's words. Her heart began to race as she recalled his furious, wild expression. The fear she had felt when he closed in on her had been almost as bad as how she felt when she thought he was going to fuck her with his knife. He had looked unhinged. \n\nWith every thrust of his hips, she had grown more and more convinced he was going to shove himself inside her, injuries be damned. Even with fear clogging her throat, the pressure against her sex had thrown her memories back to hours before, when he had his fingers inside her. Her body and mind had warred, and just as his words doused her with the equivalent of freezing water, he had thrown her down. Hard. \n\nMaybe when your cunt shatters around my dick around my dick you'll stop pretending you don't want this. \n\nSienna shuddered and dragged her attention back to Sergei, not wanting to think of the horrible man who played her body and mind against one another. \n\n\"You cannot see my stomach.\" \n\nHe nodded. \"Okay,\" he acquiesced. \n\nSuspicious, Sienna changed the subject. \"Where is Yasim?\" \n\nA small smile spread across his lips, this one not as genuine. \"I cannot tell you that.\" \n\nSienna was undaunted. \"Is she okay?\" \n\n\"I cannot share that with you-\" \n\n\"Where did he go? Did they find my people?\" The questions spewed out now. \"Where are you taking us? You have to tell me, is Yasim okay?\" \n\nSergei stared at her, seeming to contemplate. \"I need to take you for a walk in order for your muscles to stretch as they need to. If you come with me, I will give you clothes and think about answering some questions you have.\" \n\nThat didn't mean truthful answers, or answers at all, but getting out of this tent was imperative. She was suffocating in Rorik's space. \"Okay.\" \n\nSergei moved to the trunk behind her and opened it, giving her a wide berth. Sienna was shaking his head before he even reached in there. \"No.\" Sergei looked at her, mild confusion on his face. Her throat clogged at what felt like admitting a weakness, but her stomach roiled at the thought of being surrounded in anything of his. \"Not his clothes.\" \n\nHe schooled his face to look neutral, something her Grandma did when she didn't want to show negative emotions. \"There is no other clothes to give you.\" \n\n\"Ca- can I have some of your clothes?\" Sienna asked, feeling pathetic. Asking for scraps. Seeing the \"No\" on his face before he even opened his mouth, she tried something else. \"What about spare clothes? Spare fabric, even. J-Just anything else other than that.\" \n\nSergei's lip twitched again. He nodded his head slowly and left the tent, coming back ten minutes later with a burlap potato sack. Sergei held it out to her. Sienna snatched it from his hands. The bottom had been cut, and the other side had three gashes for her head and arms. Putting it over her head without dropping the blanket was hard with her body being so sore, but she managed. \n\nIt was very itchy and only long enough to touch her mid-thigh, but it didn't smell like the man who demanded she give herself to him. Looking down, she might have laughed at herself if she wasn't so miserable. Sergei unwound the rope tied to the stake and held it as he stood. \n\n\"You mean to use that as a leash?\" Sienna asked, the humiliation piling on at the thought of walking through camp with a lead wearing a sack. \n\n\"Yes.\" \n\n\"I won't run, I promise.\" \n\n\"I can't-\" \n\n\"If you put your hand on my shoulder- \n\n\"No.\" \n\nSergei was calm but adamant in his rejection. Sienna looked down, tears in her eyes. She had to use the toilet and desperately didn't want to pee in that bucket beside her bed. She wanted to stretch her legs, and she didn't want to push this man so far that he wouldn't be nice to her anymore. Again, pathetic, but Sienna had decided. She would deal with the leash. \n\nTwisting, she pulled her legs underneath her, grunting. Sergei stepped forward and held out his hand. The hand not holding her leash. She ignored him. He watched her struggle to find a way to stand without using his hand as an anchor for a much longer time than Rorik would have. \n\n\"You will hurt yourself if you continue.\" \n\nGasping, trying desperately to will herself upright, she responded, \"I can do it.\" \n\n\"If you do not take my hand, I will be forced to touch you without your consent.\" \n\n\"Don't.\" She froze and her eyes were on him in, glaring and scared. \n\nSergei looked at his upwards palm pointedly. Scowling, she took his hand. He put his other hand under her armpit and lifted her, holding her far away from his body. Once she was on her feet he let go immediately, taking a step back. Whether or not it was for her benefit or his she didn't know, but she appreciated it all the same. \n\nThe first couple steps were shaky from not having stood in days, but once her muscles steadied her body did feel better. The lead on her foot was annoying and humiliating, but stepping out into fresh air was worth it. Sergei led her left, towards the forest they had camped outside. \n\nHer eyes shot around, taking everything in. There were smaller, one person tents set up all around them, giving the bigger tent she had just left a wide berth. There were a couple larger tents set up sporadically around the camp, and there was already settled paths through camp. Everything was extremely organized, all of the one person tents set up in a grid with nothing laying around. It reminded her of Yasim's house, very minimal, with only the necessities to live. \n\nSienna didn't see her mentor, and that relieved her and didn't at the same time. A dark part of her brain had told her Yasim would be hung from a pole set up in the middle camp for the use of the soldiers, even though Sienna hadn't heard any rutting. \n\nThen she turned her head and saw the boat. \n\n\"Mother,\" she muttered, stopping in her tracks, Sergei stopping before he took her foot from under her. It was the biggest man-made thing Sienna had ever seen, bigger than ten huts put together. It swayed ever so slightly in the waves, the dark wood gleaming. There were two massive poles sticking out of the middle, bunches of fabric tied to them. She shook her head. \"How many people did it take to build that?\" She whispered, looking at Sergei. \n\nThe surgeon shifted. \"A lot.\" \n\nSienna's mouth twisted, annoyed he was keeping information from her, but she didn't argue. She had to pee. \n\nThey passed two men carrying wood on the path to the forest, both of them staring blatantly as they trotted by. Sienna tilted her chin up, very aware of her makeshift dress and the wind on her legs. There weren't many other people at the camp, and all of them were peeking at her while they did their jobs. She saw men casting nets into the water and preparing wood for fires, but that's it. \n\nHer gut sunk. With the number of tents here, there would be at least 80 men here. That was almost as many people that lived in her village. The majority of soldiers that weren't here were out there, hunting everyone she had ever cared about. She sighed, praying her people were running their hearts out. \n\nSergei walked slowly into the shadow of the trees, picking over the forest debris and waiting patiently for her as she timed her steps with the swings of his arms. \"Is Yasim okay?\" She was nervous to bug the man, but she did it anyway. \n\nHe lifted his eyes from her feet as she stepped over a bigger log. \"She is alive, just as you are.\" \n\nA spark of anger grew in her chest. Yasim being treated like she was hurt her. \"So she isn't okay?\" Sienna insisted. \n\nSergei regarded her, his dark brown eyes considering his answer. \"She is being fed twice daily and has not been hurt.\" Sienna's eyes welled as they started moving again. \n\nDamn you, she cursed. \n\nSienna had not been hurt either, really. Not in any way that left her physically harmed in the long term. She had been tossed around, prodded and made to feel like a thing instead of a human. She wasn't sure whether it was any better than the painful torture she had expected. \n\n\"She... she has not been paid the specific attention you have,\" Sergei said finally, stopping by a large tree. \n\nSomething close to relief filled her. Yasim was strong and her body was a prized tool she honed mercilessly. Sienna didn't know how she would handle her body being used as a weapon against her like Sienna's was. \n\nGod, had Yasim...heard me? Had Sergei? \n\nThe thought horrified her. Had the camp heard her orgasm? Had they heard her scream that Rorik had made her wet? \n\nHer cheeks burst into flames and a humiliation so strong she wanted to curl up right on the forest floor threatened to devour her. The space in between Rorik's tent and the smaller, one person tents was significant, but it wasn't enough space to not hear someone yelling. \n\nI will never scream again, Sienna scolded, trying to claw her way through her horror. Never. I might not be able to control my orgasms, but I will never scream like that again. \n\n\"You can use the bathroom here. I will look away.\" \n\nHiding her face, Sienna picked her way around the tree, Sergei giving her almost all the rope in his hand to get out of his eyesight. She checked he was staying where he was and when he didn't budge, finally kneeled. \n\nWould Yasim even respond like Sienna was? Did all the Gavali men have the ability to play women's bodies against them? Would Rorik play with Yasim when he grew bored of how inevitably Sienna gave in? Would her desperate body, as he called it, lead to her proverbial slaughter? \n\nShe shut her eyes tightly, trying to rid herself of all these armed thoughts, knowing they led to a deeper, torrid humiliation. \n\nHer arms reached back and used the tree to balance herself as her legs straightened to stand again. Her knees were scraped up and sore, and she could see the bruises on her thighs from where Rorik had pinned her down with his shin. Her wrists were raw and sore from the rope, her ankle in desperate need to be stretched and worked at any angle other than straight. \n\nI am a mess, she thought, self-pity floating through her. Not wanting to be tugged, Sienna walked back to Sergei. \n\nHe looked calm and honest, if that were a look someone could have. The flood in her cheeks was there still, and she had the thought that she would never have to see Rorik again if this man would cooperate. \n\n\"Let me go.\" Sienna knew her words were a risk. What if Rorik thought that constituted as trying to escape? Sergei turned to her, slight confusion on his face. He stared at her for a couple moments, her heart pounding in her chest. Was he actually considering it? \n\nThen a small smile he seemed to have been fighting off spread across his face. He had nice teeth, for an accomplice to kidnap and murder. \"That's it?\" \n\nSienna's shoulders went back. \"Yes. Let me go.\" \n\n\"No attack? You could have grabbed a rock behind the tree.\" \n\nSienna snorted. She could barely stand up, if she fought a fully grown man in her state she wouldn't get anywhere. \"I wouldn't get very far after our fight.\" \n\nSergei shook his head and his smile slowly faded. \"I'm not letting you go. I'm not a masochist.\" He tugged on the rope gently, telling her to get going. She didn't move. \n\n\"If I hit you in the head with a rock would he still punish you?\" She asked, trying to hide her frustration. All she wanted was to go help her people. \"Please.\" \n\nSergei tugged on the rope, harder this time. \"No. Let's go.\" \n\nSienna shook her head. Sergei tilted his chin down and looked at her like a petulant child. \"If I throw you over my shoulder, it will hurt you and the whole camp will see what the sack is not long enough to cover.\" \n\nShe scowled, her bodies instincts telling her to bolt, leash or not, but she had no doubt this man would catch her in her current state. And flashing the whole camp was not ideal. \n\n\"Where did Rorik go?\" She asked as she started back towards the tent. \n\n\"I would caution you to call him Voivode,\" Sergei told her. \n\n\"What does that mean? Voivode?\" The word felt different in her mouth. \n\nSergei walked a step behind her this time, guiding her back. He was standing in the way of escape. \"It means Warlord. Do you not have one?\" \n\nSienna took her time to regard him this time, now on the other side of the information war she wasn't aware they had been in. \"No, we don't.\" \n\n\"Yasim is not your War Leader?\" Sergei asked. \n\nImmediately uncomfortable, Sienna clamped her mouth shut. Sergei made a small sound in his throat but didn't press, probably pleased he had put her on the spot instead. \n\nThe walk back to the tent was silent, but almost comfortably so. Sienna's mind didn't watch every twitch he made. Sergei's energy was calm, rather than the intense, tyrannical force Rorik carried around him. \n\nShe was tied to the stake with much more slack than she originally had. Sergei left, tying one flap of the tent aside so she could get fresh air. Sitting on her feet in front of the open canvas, Sienna breathed the sea air into her lungs and wondered how long it would be until they found out Yasim didn't bleed. \n\nxxx \n\nSergei came back mid-afternoon to give her food and water, so when he came back with more as the sunset Sienna was surprised. Rorik had only fed her once and extracted a heavy toll in order to receive that food. Not only that, but he had fed her as if she were a child unable to do it herself. Sergei's distant but not unkind behaviour reinforced her bitter resentment toward her original captor. \n\nAs she ate, much slower this time, Sergei stood by the pole and waited. He had done that for all three meals, not once shifting or seeming impatient with her. Swallowing, Sienna considered. \n\n\"You may sit with me if you wish,\" she said, trying to sound both haughty and indifferent. Her years of ingrained politeness wanted the man to be comfortable, but she did not want him to think her invitation was anything but that. \n\nFor a moment it seemed he would ignore her, but then moved to sit cross-legged, his back leaning on the wooden pole. Still, he said nothing. Were all the Gavali this stoic? \n\n\"How was Yasim tonight?\" Sienna ventured. \n\nSergei's lip lifted. \"She is alive, just like you are.\" Her annoyance at the lack of specifics encouraged her. \n\n\"No one has hurt her still?\" \n\n\"No.\" \n\n\"Is she eating?\" \n\n\"Yes.\" \n\n\"By herself?\" \n\nSergei lifted an eyebrow. Sienna flushed, embarrassed he knew she had been hand-fed, but persisted. \n\n\"Is she eating with her own hands?\" ",
        "A slow, measured nod. \n\n\"Is she close enough for her to hear me?\" \n\n\"No.\" \n\nShe paused, looking at him. There was nothing apparent on his face in regards to her question, but something tugged in her stomach. He was lying. \n\nShe sucked in a deep breath and screamed, \"YASIM!\" \n\nThe big hand that slapped over her mouth was too late. \"Shut your mouth girl-\" \n\nSienna slapped a hand over Sergei's mouth, feeling a bit of satisfaction at the loud sound of the connection. In the few moments it took for him to pry her fingers away, the responding scream Sienna was waiting for didn't come. She heard nothing. \n\n\"Don't scream again,\" Sergei demanded, removing his hand from her mouth. He grabbed her chin and swivelled her face as if he were checking for marks. He seemed angry, but her temper was flaring high enough to be impervious to it. He didn't scare her like Rorik did. \n\n\"Why can't I hear her?\" \n\nHe stayed close to her, glaring. \"Because she isn't close enough to hear you.\" \n\nShe leaned forward, unaware she was getting in his face. \"You're lying!\" \n\n\"Don't scream again.\" \n\n\"Why'd you cover my mouth if she can't hear me?\" Sienna demanded. \n\nSergei's jaw shifted, grinding his teeth together. \"Listen to me, I might not be able to touch you, but if Yasim acts out it is my responsibility to restrain her. If she hears you and throws a fit, she could hurt herself.\" \n\n\"You mean you!\" She was furious at the implied threat. \"You would hurt her.\" \n\nFor some reason that shifted his mood away from his anger. \"She almost broke her own arm trying to get away.\" Angry tears welled in Sienna's eyes, her frustration nearly overwhelming. How could this man not see what evil he was committing? \n\n\"From you!\" \n\n\"Are you done?\" He had turned his attention to her food. \n\n\"No!\" They both knew she wasn't referring to the food. Sergei stared at her, seeming almost... confused. He was close enough to touch her, and while it made Sienna a little nervous, she wasn't scared. He stared at her until she finally snapped, \"What?\" \n\nSaying nothing, Sergei nodded his head towards her lap. \"Finish your food.\" He moved back to stand against the pole. \n\nSienna looked down at the stew she had been eating, wanting more than anything to throw it at him. She was hungry still though, so she dug the spoon into the bowl with exaggerated, angry movements. She was happy to see venison in there, not buffalo. They had looked for months for a herd of buffalo and found nothing. She would have been furious if they had found one within days of landing. \n\n\"Do you have a husband?\" \n\nSienna glared at him. \"Yes, and he's going to come and kill every single one of you.\" This time they both knew she was the liar. \n\n\"A father?\" \n\n\"Why?\" She demanded. \n\nSergei shrugged and said nothing. She threw down her empty bowl in front of his feet. \n\n\"Why do your women not give birth?\" He looked away from the bowl. Sergei's face was blank, but she could see the wheels turning in his head. \n\nSienna was surprised when he answered. \"We don't know.\" \n\nBefore she could list off all the reasons the Mother would see fit to take the option of children from these men, he snagged the bowl and left. \n\nxxx \n\nIt took a moment for her to realize what woke her, the air heavy with humidity and darkness. The heart-stopping seconds where she thought Rorik could be back passed and made it easier for her ears to sharpen. \n\nWhimpers and sniffles. \n\nPlease no. \n\nSienna groaned into her teeth as she rolled to her side, her abdomen muscles quivering with effort. It was a slow process, but she eventually got her feet and hands underneath her. She crawled at a snail's pace towards the entrance of the tent, thanking Sergei for leaving her rope longer than Rorik did. Her stupid leash stopped about a foot shorter than she needed to see out of the tent, so she begrudgingly lowered her aching body onto her side, stretching out as far as she could. \n\nHer hands grasped the tent flap and she pulled it back. \n\nOut near the fire 3 small bodies lay quivering, only one of them with their face visible. \n\nMaria. \n\nTears welled in Sienna's eyes and her heart jumped into her throat. Living with about one hundred people her whole life left her no doubt who the other two with their backs to her was. Yana and Bridgette, Maria's daughters. They were 27 and 23, and had always been wild spirits. To see them shaking like they were broke Sienna's heart. She could barely think about why their father wasn't here too. \n\nHe's dead. The thought came unbidden. A gut-wrenching sadness tore through her and more tears gathered, now falling freely down her face. \n\nShe counted five men guarding them, and recognized Sergei handing out food and water. Bile rose in her throat. They would have been free to make their own food and get their own water if these fucking men hadn't come from across the world to ruin their lives. \n\nSergei was not there to stop her from calling out this time. \n\n\"Maria!\" \n\nThe brunette's head shot up and squinted in her direction. Yana and Bridgette whipped around just as Sergei began to storm in her direction. \n\n\"Sienna!\" Maria's face lit like a beam of sunshine. Maria had taught her how to make sandals out of bark and had snuck her roasted bits of game before dinner was ready. \"Oh thank the Mother, Sienna!\" \n\nA man moved to hold her still as Yana and Bridgette shot up. Their hands were tied in front of them. Sergei was closing in as two men put their hands on the girls' shoulders, pushing them back down. \"Run!\" Sienna cried. \"I'll get out-\" \n\nSergei ripped into the tent as Sienna ducked and held her hands over the back of her head, protecting the spot Rorik had held her by. Sergei didn't grab her hair but instead slid his hands under her arms. It left her with little room to flail her arms, but still Sienna fought to get him off of her. \n\n\"I'll get us out!\" She screamed, praying they understood she was there for them in whatever way she had to be. As Sergei dragged her back she kicked until her stomach demanded stillness, screaming as loud as she could. Hate and rage and a staggering anguish overcame her. \"Don't touch them! Don't touch- I'll kill you! I'll fucking kill you!\" \n\nHis hand clamped over her mouth as he set her down on the furs, much gentler than Rorik last had. She screamed into his hand as he leaned on her hip and grabbed her flying hands. She lashed out as much as her body would let her. Sergei's tight grip on her face made sure she couldn't bite him. \n\nThey were kidnapping and slaughtering her people. \n\nSienna saw herself aiming a bow at the back of Rorik's head and hitting his arm instead. That broke her screams into sobs muffled by Sergei's hand, but just barely. She had the shot and had made a shot like it thousands of times. She had missed, and now her people were being enslaved. \n\nSergei was quiet, and as soon as she wrenched herself away from him instead of at him he let go. She felt him standing behind her as she sobbed into her hand. She couldn't quiet herself enough to tell him to get out. \n\n\"I'm sorry,\" Sergei muttered. \n\nAt his words, she curled herself into a tight ball on her side, one arm wrapping around her knees and the other clasping behind her head. She wanted to rock herself, but this position hurt enough, so she settled for nuzzling her head into her cubby she had made with her body. She used her thigh to stifle her sobs, feeling instead of hearing when Sergei left. \n\nThe Gavali had found her people. Where were the rest? She hoped her people had killed the rest of the Gavali and the 5 men standing by the fire were all that was left. \n\nMaria. Yana. Bridgette. Three lives that were full of happiness and arguments and daily tasks that kept them busy, and now those lives were over. Maria's husband wouldn't have let any of them be touched without giving his life first. Sienna knew he was dead. All because she had missed that shot. \n\nSienna promised herself that she would do everything within her power to free her people and stop the incarceration. Sienna would protect the women while she was here. She would draw attention and take punishments. She would be terrified and it would hurt, but any woman who ended up in the Gavali's hands was there because of her failure, and she would give every part of herself to make sure she rectified it. \n\nxxx \n\nThe knot at her stake was intensely complicated and unlike anything she had ever seen. Whenever she pulled one part, it tightened in three others. The rope scratched underneath her fingernails, and in her frustration she ended up making a couple of her fingers bleed. Sienna didn't care. They were escaping while the men slept. And if they didn't sleep, she'd kill them. \n\nSergei walked in on her trying to kick the stake out of the ground as he delivered her breakfast. \n\nHe frowned, his eyes landing her hands. He took a big breath, like he was trying to calm himself like her Mama did when she was angry, and walked in. He put her breakfast beside her and left the tent. \n\nHer heart thundered in her chest. She hadn't expected Sergei for another few hours, and Sienna had planned to be long gone by then. If none of the women were here when Rorik got back, he couldn't kill anyone, could he? Besides, if Yasim had the choice between Sienna and the rest of her people, they both knew she would choose her people and would expect Sienna to choose the same. \n\nShe gritted her teeth. That didn't mean she wanted to see the gruesome promise Rorik had sneered at her. \n\nFuck. \n\nWhen Sergei swept back into the tent moments later Sienna was sitting still, her chin up and her hands fisted in her lap, her feet folded to the side. In his hands, he had some long white strips of cloth and a bottle of clear liquid. He grabbed the water bucket by the tent entrance. She watched his frowning face. Did he know of Rorik's threat? Had he been asked to fulfill his promise in Rorik's absence? Her gut was twisting and she was trying to fight off the shame she felt at trying to escape. \n\nSergei kneeled near the stake and finally looked into her eyes. He looked frustrated. \n\n\"I would like to clean your wounds.\" \n\nThe fact that he was still asking to touch her confused Sienna. She thought she was in trouble, especially after last night, and didn't think prisoners in bad standing got choices. \n\n\"Okay.\" \n\nSergei waved towards him. \"Come here.\" \n\nSlowly Sienna dragged herself towards him, the blanket over her legs impeding progress, but there was no way she was getting rid of it. She stopped in front of him and held her hands out. \n\nHe took them in his hands, inspecting methodically, laying out the items he brought on the fur bed beside her. She watched as he quietly picked the rope fibres out of her raw skin. Sienna had been expecting the infernal awareness Rorik's touch had given her, but there was nothing. Sure, his hands were warm, but that was it. Skin on skin and nothing else, just like every other experience she had with men. \n\nA small part of her had honestly thought it was all Gavali men that had the ability to draw awareness and jolts of lightning from the skin of others, but feeling Sergei's very normal hands left her melancholy. Whatever Rorik did was different, and that was just as terrifying as his volatile ways. \n\n\"I am unsure of whether or not to let you go for your walk today.\" Sergei's voice brought her back to the moment. Sienna remained quiet, unsure of what to say. \"These wounds will leave Voivode unhappy, and that anger won't just be directed at me.\" His brown eyes flicked up to hers, giving her a pointed look. \n\nA sardonic smile twitched on Sienna's lips. \"He's always angry at me.\" \n\nSergei shook his head. \"This will hurt.\" Before Sienna could understand he was talking about the bottle in his hand, he poured a splash on her hand. The burn made her jump. As the burn faded, she began strategizing. \n\n\"I-I will tell Voivode I fell on our walk,\" Sienna said quietly. Sergei started to wrap her hand, which she thought was a little excessive for some raw skin, but the cool cloth felt good against the stinging wounds. \"I will tell him I fell if you don't tell him what you saw me doing.\" She fought the urge to lower her head, years of ingrained honesty panging in her chest. She shook it off, feeling ridiculous. If she had to, Sienna would kill the man in front of her to save her people, and she was unsure about lying? \n\nSergei hadn't looked at her yet, appearing to chew on her words. \"I will forgo giving Voivode the details of you trying to untie your bonds, but if he asks me specifics I will not lie.\" Sienna's breathe released, knowing that was the best she would get. \n\n\"Of course.\" \n\n\"And I will be telling him of your behaviour last night.\" \n\n\"Okay, yes, of course,\" she spit out. Yelling to get the attention of Maria and her daughters wasn't something that would end in slitting Yasim's throat. \n\n\"And you will not hurt yourself again.\" \n\n\"Intentionally, no.\" \n\nSergei nodded, finishing wrapping her hands. He looked at her. \"And you will let me see your stomach.\" Her hopeful mood turned sour. \n\nHe must have seen it on her face. Sergei shifted. \"May I be honest with you?\" She nodded slowly, unsure where this was going. \n\n\"You may be appealing to look at, Sienna, but my wife is the most beautiful person on the planet.\" Sienna blinked. \n\nNot what I was expecting. \n\n\"Thinking about touching you in any way other than medical leaves me soft.\" It took a moment for Sienna to understand what soft meant, and when she finally got it she looked away, her face flaming. She couldn't say she was offended, but she was definitely embarrassed. Common sense told her she had every right to be wary of these men wanting things she was not going to give, but that didn't stop her chagrin. \n\nWithout speaking, she arranged her blanket to wrap tightly around her hips. She didn't look at him as she wiggled to lift the sack she wore up to her rib cage. He didn't ask to touch her this time, but she didn't complain. \n\nHis fingers worked their way from her rib cage to hip, around the giant bruise that had formed on her abdomen. A couple times he asked if it hurt and she answered honestly, still working up the courage to look at him again. Again, she noticed the lack of any sensation other than skin on skin and discomfort when he pressed on a sore spot. \n\nSergei leaned back. \"I appreciate your cooperation.\" Sienna looked at him, her cheeks still warm and nodded. \"You do need to stretch though, it will help. Close your eyes and turn your head.\" She did, feeling small tugs and twists of the rope at her ankle. \n\nHe helped her stand and they began their walk silently. Maria, Yana, and Bridgette had been moved from the fire. \n\nSienna slipped a couple of glances towards Sergei while he guided her through the camp. Him having a wife that he clearly loved very much made it harder to think of him as disposable. Sienna wanted to believe she could get rid of him if needed, and knew she would have to if it was a clear choice between one of her people and Sergei, but the amount of guilt that would follow would be unsettling. \n\nSienna was torn between getting closer to him in hopes that he would help her escape and separating herself so killing him if it became necessary didn't get harder. Spite grew in her chest as they silently picked through the forest. \n\nThree days ago Sienna had never thought that taking a life could be in her future. She might not have gotten along with everyone in her village all the time, but hurting people was not something she considered doing. Ever. Within the first ten minutes of her interactions with the Gavali, she had tried to kill two of them. These people desecrate any goodness put in front of them. \n\nIn those moments in her village, she had resigned herself to take a life or two because it would save her people. But with all these Gavali surrounding her, the ones with wives back home and laughs that annoyed her, the possible death toll was climbing much quicker than what she was comfortable with. \n\n\"When someone takes a life, they give away a piece of their soul they will never get back,\" Grandma had once said. Sienna remembered being little and being horrified that people actually considered destroying what the Mother created for no reason. In her young mind, there were a thousand ways to deal with a problem that didn't end with anyone hurt, forget dead. \n\nAfter her time with the Gavali was done, and it would end one way or another, she wasn't sure she would be able to classify herself as good. If she could help it, Sienna would take the bad choices her people may be forced to make for herself. She would be the villain her people needed in order to escape. What she was sure of was that she would never, ever put anyone in a position to choose between their purity and their lives. \n\nTears gathered in her eyes, pushing away how much she wanted her old life, and her pure thoughts, back. Sienna wanted the thoughts of putting sand in someone's food bowl and hiding their tools to be the vengeance she sought. \n\nA small, pitiful voice told her she could stay herself, continue to be kind and loving even underneath the Gavali warlord. But then who would save them? The Gavali had travelled too far to start letting them leave with anything but their lives. There was the chance that Yasim could save them, sure, but the thought of sitting and waiting for someone to cut her binds and kill their captors so she didn't have to made her physically ill. Looking in Yasim's eyes and seeing the darkness behind them, all because Sienna didn't have the courage to do what needed to be done, would destroy Sienna's sense of self in a way that no amount of killing could. \n\nShe pushed away from the flurry of excuses her brain taunted her with. How easy it would be to sit back and wait for someone else to risk their lives to save hers. How much she didn't want to become like the Gavali. \n\nSienna had missed the shot. She saw all the men she had spent the last six months hunting with, each of them lying dead in the middle of their village. She would never, ever forget Georgy staring at her as he bled out. \n\nRectifying this situation would mean nothing if her people ended up free but with souls as black at the night sea. If it came to it, a soul that was no longer connected to the Mother would be her atonement. \n\nxxx \n\nSienna stared out of the tent flap, breathing the ocean air and watching the camp activity. It had been four days since the Maria and her daughters had been brought to camp, and since then more had been trickling in. Sergei had made sure when more of her people were coming to close the tent flap and tie her much closer to her stake. He had replaced the rope with a chain and shackle, putting thin strips of cloth inside the shackle to save her skin. \n\nWhen Sergei had first walked into the tent with the shackle swinging in his hands, Sienna thought she was going to get the beating of her life. She had never seen a shackle on a chain, or anything crafted of metal besides the weapons the Gavali used. Sergei had sat with her and explained exactly what metal was and how they shaped it until she understood enough to get some colour back into her face. She hadn't remained still for him to attach the shackle, but the big bastard had managed anyways. \n\nIt made her crazy, not knowing who was captured and who was free. How were they? Were there any young ones? Was her Mama and Grandma in the camp, a shout away? Were they being held together? She hoped so. No one should be captive alone. She would know. \n\nThe amount of Gavali in the camp increased as they returned with her people. She heard the men outside speaking sometimes. Mostly it was words about the camp supplies and possible return timelines, but sometimes she heard things about her people.  ",
        "There were words like hiding, valley, and eight that she caught, giving her wisps of hope that some of her people were hidden away. Maybe even that they had only captured eight of her people. \n\nThen there were words like ass, slut, and body that made her skin crawl and an anger that harboured violence to grow in her gut. She knew they were talking about their captives, and the heat of that violent fury was enough to scare her. It made her want to hurt and damage and ruin, things so far outside of the realm of her previous life it brought tears to her eyes. She buried the voice that told her this wasn't what she wanted. It didn't matter. \n\nSienna had stopped doing things that could end in her hurting herself, like she had promised Sergei, and before yesterday had been too weak to act on the plan she had to escape. Throwing that fit with Sergei the night Maria and her daughters arrived had wiped her of all her energy. She had slept for most of three days, Sergei waking her twice a day to feed her and take her on a walk, only for her to pass out within moments of returning to the tent. \n\nThough she was disappointed in herself for wasting three days she could have been gathering information and attempting escape, she had to admit today she felt more alive than she had since she had first been captured. Her stomach only hurt if she moved too quickly and she could take deep breaths without pain. Her bruises were still abundant, but they looked scarier than they felt. Her hands were still unhappy with their previous treatment, but the small cuts had crusted over and were well on their way to healing. \n\nYesterday she had started working on the metal stake that held her foot. She noticed the small dislodging of dirt on the far side of the stake from when she had been kicking it and knew if she tried that again and failed to escape before Rorik returned, he would notice. She wasn't sure he wouldn't notice the dislodging of dirt as it was now, and it scared her enough to pack to the dirt back down. \n\nThe only way she could figure she could escape was pulling the stake straight out of the earth. That way she could work on it, tugging and pulling in the time she was alone, and there would be no way to tell. The day before she had spent most of the day tugging the stake straight up until the pain started cropping up in her back and stomach again. She had done the same today after she had come back from her walk with Sergei. It had shifted only slightly, but streams made rivers made lakes made oceans. She just needed time. \n\nSergei appeared in the space between the two tent flaps. He met her eyes and flicked his fingers towards her furs. She scowled. More people were coming in. \n\n\"Come on,\" Sergei ushered. \"Onto the bed.\" \n\nEvery time this happened the same urge to explode towards him, take his eating knife and stab him with it got stronger. She had stopped talking to him, knowing her humanity wouldn't allow her to hurt a man she could have liked if circumstances had been different. She took a breath and stood, making sure her face showed exactly how she felt about it. \n\nThey walked to the bed and she kneeled on it. Sienna could feel him staring at the side of her face as he locked the chain closer to the stake. He had asked her a couple of questions throughout her self-compelled silence, but given her space for the last few days. Now though, it seemed he wanted to say something. She could feel him trying to work up words to give to her. \n\n\"Your people are safe. They are all being left in peace,\" Sergei said. \n\nSienna turned to look at him. He was trying to make her feel better, but that didn't stop the indignation rising in her chest. \"They were safe. They were being left in peace.\" \n\nShe bit her tongue from threatening him, not wanting to give him anything else to pass to Rorik. If vengeance was coming their way, she didn't want the Gavali to see it. She needed as many freedoms as they would allow her, and running her mouth would only damper that plan. \n\nSergei did the forced neutral face he put on when he didn't like what she was saying and finished securing the chain. He left, dropping the tent flap so she couldn't see anything. \n\nWithin minutes she heard horse hooves and someone crying. Her heart dropped and she let her head fall. She fought the tears that gathered, grasping onto her determination and praying Sergei was telling the truth about them being left in peace. She pictured them in a tent, hugging and holding each other, consoling the ones who needed it. \n\nEnough time passed that Sienna wondered if Sergei had forgotten her dinner. She tried to pretend that she preferred it to his company, but she was hungry. If she were honest, she was always hungry. In her village, she was always snacking on berries and nuts and taking as much of each meal as men twice her size. Sienna loved eating, and though the heavy stews and bread they had started giving her were good, she missed her snacks. \n\nGod, I sound like such an idiot. She snorted and a small smile tipped her lips upwards. She wasn't taking it back though. Sienna missed her fucking snacks. \n\nTwo men were near having a conversation, moving slowly towards her tent. She couldn't hear them quite yet, but she understood the lowered tone and the feeling of agitation that settled in her stomach. The snickers made her gut twist. \n\n\"...sweetest tits, that one.\" \n\n\"Lord Almighty, I know.\" \n\n\"Might steal that one away for a bit once we get back.\" \n\n\"If she's not a Daughter, you'll have to fight me for her.\" \n\nThey paused, close. \n\n\"Think any of these are Daughters, really?\" This one had a higher pitched voice. \"I mean, having more than the ten sloppy pussies we have to choose from now would be fuckin' awesome.\" \n\n\"I hope so,\" the lower register spoke. \"I know having kids is important and shit but you know how hard it is to get it up with them? Fuckin' a dozen kids each don't really help with elasticity if you know what I mean.\" \n\nThey were talking about the Daughters of Ziva they had in Gavali territory. Rage and shock burned inside her. How dare they disrespect the women that kept their people from dying out? \n\n\"I totally call the short busty one while we're here. Blondes get me going.\" \n\n\"She has lips I would kill to see around my cock. Natalya, I think they called her. A slut's name if I've ever heard one.\" \n\nSienna's nails bit into her fists. Natalya was 19, much too young to be defiled by these men. She was the kindest, most nurturing soul Sienna had ever met. Natalya had made it well known that any woman who wanted a day off from mothering could drop their children off with her and she would happily take care of them. Her boyfriend had been Evander. Evander with the knife sticking out of his chest. They probably passed by his dead body on the way back to the camp. \n\nSienna was shaking, breathing deep to try to calm herself down. This type of fury was unknown to her. She had been angry at the injustices Rorik was doing to her, but to hear these men talk about Natalya like she was something to be used had her very close to shaking. \n\nBreathe. Right now is not the time. The stake won't move yet. \n\n\"All I can picture is those big eyes looking up at me, ya know?\" \n\nWhat the fuck are they standing so close for? Fuck off! \n\n\"I bet she'd love it, if you think about the men she's had to deal with her whole life. Those dumb fuckers coming after us with stone weapons was almost painful to watch.\" \n\nSienna barely registered scrambling up to start tugging at her stake with all her strength. \n\nThey're dead. Fucking dead. In her head, she pictured stabbing them with the stake that kept her hostage. Those dumb fuckers were her family. How dare they! \n\nTwo shadows on the tent canvas outlined them vividly. They were right beside her bed. \n\n\"Is it sick I just wanna fuck her on top of my bloody sword? Show her exactly how I feel about making us chase them across the ocean and shit-\" \n\nAs if the disgusting words shifted the very Earth, the stake slid right out of the ground. Sienna was moving, her arms back, and she swung for the head of the shadow with a scream. \n\nThe clang the metal stake made when it connected with the man's skull was muffled by the tent, but rang like the purest bird call Sienna had ever heard. She tore underneath the tightly stretched tent fabric, ignoring the other man's cry, and straddled the groaning human on the ground. \n\nFury tore at her very core. Sienna saw the dazed man beneath her, his hands limply outstretched in a defensive maneuver, and saw a pathetic man who didn't deserve to breathe Natalya's air. Clutching the stake with her right hand, she swung at his face. The crunch and the spray of red the connection of metal and cheek made was beautiful and justified. \n\nSomeone yelled, \"Holy shit,\" as she back-handed the stake across the other side of his face, his head whipping the other way. A hand landed on her shoulder - the other man in the conversation. Her arm swung back, dodging his other hand, and connected with the side of his knee. His knee jerked and he yelled, but he let go of her shoulder and stumbled back. \n\n\"Fucking bitch!\" \n\nThe rage on his face just fueled her ferocity. Sienna repositioned the stake in her hand and turned to the man moaning underneath her. She stabbed the tip of the stake right underneath his jaw, right where she imagined his pulse would beat after a long run. \n\nThe other man, who had taken a step towards them, froze. His face was a perfect mix of anger and confusion, like he was just figuring out Sienna wasn't the type of woman he was used to dealing with. \n\n\"You vile, sick, horrible humans!\" She screamed at the men, her head swivelling in between the two. The man underneath her was barely conscious, but if there was a chance he could take in what she had to say, she would take it. Sienna's voice didn't sound like her own. She had never heard her voice so destructive - so angry. \n\nThe man who stood away from her steeled himself and stood straighter. \"Woman, get off him and kneel!\" He moved to step forwards and Sienna pushed ever so slightly on the stake, enough to make the man underneath her gag. \n\nThe standing man stopped again. \n\n\"BACK!\" Sienna hollered. \"NOW!\" \n\nHis trepidation as his eyes flickered between Sienna and his gagging friend was obvious. When his friend's eyes rolled, he finally stepped back. Sienna only let up a bit of the pressure. The man underneath her needed to know why he was going die, and he wouldn't if he passed out. \n\nA small voice in the back of her head reminded her of the pieces of her soul that she would be throwing away when she took this life, but the faces of Yasim and Natalya and every other female she had grown to love overshadowed that doubt. She had made the decision days ago, and this was a perfect place to start. \n\n\"You DARE talk about Natalya like that! About my people!\" Shrieks tore past her lips, and through her tunnel vision, she saw men gathering around her and the two men she had assaulted. \"You soulless pieces of shit! People are not toys - they are not fucking disposable!\" \n\nThe standing man tried to speak again, this time much tamer. \"Woman, you need to get off him. You've hurt him-\" \n\nSienna hit the moaning man across the head with the stake again, the noise clanging through the semi-circle of men, drawing winces from the onlookers. \"I've hurt him?\" She shoved the tip of the stake back into his neck, his gags echoing in her ears. Or was that just multiple gags? \n\nShe couldn't tell if the tip drew blood - the man was covered in it - but she knew she was damn close. \"I'm going to KILL HIM, you stupid fucking animal, so you know exactly what will come of you if you ever even think about touching one of my people again!\" \n\n\"Sienna.\" \n\nShe looked left, towards the sound of her name. The man with the ponytail, the man who sliced through Georgy like a knife through hot bread. And right beside him, amongst all the men, she saw the tracker. \n\nNikolai. \n\nStanding, breathing, and alive. \n\nThe disgusted, furious look he was giving her barely touched the riot of emotions that exploded through her. He was supposed to be dead. She had watched him take an arrow in the neck. Her arrow! How?! \n\nFine, Sienna snapped to herself, turning to the being whose life she held in her hand. Seeing Nikolai kicked any and all doubt of her next action out of her mind. If an arrow through the neck wasn't enough, a stake should do the trick. \n\nIntending on using her body weight to drive the stake through, she put one hand on the end of the stake closest to her and threw her torso towards the man beneath her. \n\nA whisper of the tent fabric was all she heard before an arm caught her and wrenched her into the air, just as her chest grazed the top of the stake to finish driving it into his throat. She was swung away as the crowd dove in, swarming past her and the arms that enclosed her, to help the gurgling man on the ground. \n\n\"NO!\" She flailed, horrified. She hadn't landed on the stake hard enough. Sienna knew, even without seeing how deep the stake had inched in, that the contact of her chest and the stake had been much too brief to kill the hateful man. If Sergei had been able to heal Nikolai from an arrow through the neck, a small puncture wound wouldn't give him any trouble. \"LET GO! NO!\" \n\n\"Calm down, little wildcat.\" \n\nRorik. The rough voice through her into an even heavier panic. She threw her body in every way she could, haphazardly tossing limbs in hopes he dropped her again. \"HE'S GOING TO HURT HER!\" \n\n\"No one will hurt the woman, Sienna.\" Sienna was honestly surprised he could understand her, with how high and desperate her voice sounded. \n\n\"NO!\" \n\nRorik continued to walk as he fought through her limbs to press her back to his chest. Sienna thrashed, screaming as loudly as she could, trying to get back to the man who said he'd hurt Natalya. Whose disgusting words burned in her stomach. \n\n\"Breathe, Sienna. I will take care of this. You need to relax.\" \n\nShe didn't care how soothing he made his voice. She wasn't stopping until that piece of shit was dead. Her heartbeat pounded in her ears and her breaths came in short puffs. They were moving out of the camp, into the forest. As they reached the tree line, Rorik succeeded in pressing her knees to her chest, and her back to his chest, so she was folded in half. His giant arms crushed hers to her sides, making her immobile. \n\n\"Let me GO!\" \n\n\"No.\" He was stern but still calm. She jerked a couple of times to check the effectiveness of the hold he had on her. No purchase was made. \n\n\"He's fucking dead.\" Her voice was cracking and her face was wet. She was still squirming, trying to get back to the man who dared talk about Natalya that way, but knew deep down her chance was over. \n\nThey were out of sight of the camp now, deep enough into the woods that no one could see them. Rorik chose a tree and sat at its base, holding her in his lap like a child, still folded in half. \"It's okay Sienna.\" \n\nA bubble rose in her throat, telling her she was crying. \"It's not okay!\" She cried. Her people were being kidnapped by savages. They had been at peace not even a week ago, alone and happy to have their stone weapons and simple lifestyle. \"It's not okay, it's not okay.\" She was sobbing again, rocking herself. Or was he rocking her? Sienna spit out small bits of prayers, the emotion in her chest too much to take by herself. \n\nA hand was falling through her hair. \"Breathe, wildcat, breathe.\" \n\nShe couldn't. She couldn't breathe. \n\nSuddenly she was being turned and pressed into a warm chest, her face tucked under a chin, her legs spread around his waist. Sienna shoved and pushed at Rorik, at the comfort he was trying to offer her. \"All of this is your fault! It's your FAULT!\" \n\nHe grabbed her hands and put them at the small of her back, pushing her harder into his chest. \"Breathe with me.\" \n\nA couple tugs at her hands reaffirmed his grip would be immovable. Her potato sack was much too high on her legs, but being pressed against him hid everything. \n\n\"In and out. In. Out.\" \n\nHe was taking deep breaths, following his spoken pattern. She found herself trying to follow in between her sobs. \n\n\"Good girl. In and out.\" She shivered, inhaling harder. \n\nWhen they breathed out her head followed his chest, and when they breathed in every inch of her was swallowed in his warmth. She stopped herself from pressing her face into him. The only reason he was calming her down was because he couldn't fuck her in her madness. \n\nAs they breathed together, Sienna calmed. It didn't matter why he was doing this, the physical touch was what she needed. She was astounded to recognize that, even from a man who touched her solely without her permission, the comfort was incredible. His smell surrounded her. His fingers drew on her wrists and his giant hand pressed gently on her back, keeping their chests connected. \n\nHer breaths evened out, and his hand came up to press her head into his collarbone as she focused on each inhale and exhale. She tried to push away the feeling she got at having him wrapped so efficiently around her. If he had been a man she had allowed into her space, she would have felt safe, protected, and cared for in a way she had never felt before. Bitterness cropped up, knowing he was evoking these feelings from the human part of her that wanted love and affection and protection. Rorik wasn't capable of those things. \n\n\"Tell me what happened, little wildcat.\" His voice was still quiet. He didn't seem angry. \n\nSienna vaguely remembered his assault before he left, and the way he had thrown her down as if she had burned him. She couldn't understand where this calm, understanding version of Rorik had come from. After she told him what happened, would he rub up on her and toss her away again? \n\nShe sniffed. \"Why?\" \n\n\"Because I told you to,\" was his answer. She stiffened, and when she moved to push herself off of him, he held her still against him. Her cheek was on his collarbone and she could feel a couple of his chest hairs tickling her skin. \n\n\"That's not an answer.\" She said to his chest. \n\nThe hand pressed to her back moved to her chin to turn her face to look up at him. His eyes were serious, but they didn't have her brain screaming Run. \"I am being incredibly patient with you right now.\" Sienna knew what demanding, lesson-teaching Rorik looked like, and she wasn't sure she could handle that right now. She tucked her face back down. Looking at him made her much too aware of everywhere they touched, and the sack that barely covered her ass. Meeting his eyes changed the would-be feelings of safety and affection to a fluttering stomach and a nervousness akin to panic. \n\n\"That man said bad things about Natalya.\" \n\nxxx \n\nRorik rested his chin on the top of her head, trying to get as much of him touching her as he could. She was shaking against his chest, but wasn't fighting their closeness. But maybe that was why she was shaking - he couldn't tell. Her legs were wrapped around his waist, her hands held at the small of her back, but she seemed relaxed, which was a big contrast to her behaviour five minutes ago. \n\nGod, little wildcat, you are perfect. \n\n\"And what things did he say?\" He could feel her shift. She sniffed and breathed onto his shirt. She could feel the warms puffs on his chest. She remained quiet for a couple moments, until she responded, her voice shaking along with her body. \n\n\"He called her a slut, and said he was going to... to have sex with her on top of his bloody sword.\" The way she didn't say fuck almost made him smile, especially after she had screamed it as she came on his fingers. His dick twitched against the fabric of his pants. ",
        "\"None of the women here will be subject to that treatment,\" he told her. \n\nShe laughed sardonically. Rorik blinked. She didn't believe him. \n\nHe grabbed her chin again, a little rougher this time. He wanted her attention. Her chestnut eyes looked up at him, glossy and wary of him. In this light, he could see little flecks of black throughout the brown. Her eyes looked like the bottom of a river, clear water running over dirt and stones. \n\n\"When I say something I mean it, do you understand me?\" Those pretty eyes flashed. \n\n\"Then what is the treatment you are giving me?\" She demanded. The little thing demanded. His ego rose to the challenge. \n\n\"Have I fucked you on top of a bloody sword, Sienna? Because I can make that happen.\" He watched as her anger flickered, fear intermingling. Her quietness soothed him. \"No woman who bleeds will be accosted.\" Her eyes became a swirl of things, so much that he couldn't read her. That in itself was telling. He thought about asking her if she bled, but if he was honest with himself he didn't want to know. \n\nShe narrowed her eyes at him. \"What of the women who don't bleed?\" \n\nHe steadied himself for her reaction. \"The women who don't bleed will be available to claim for the duration of our journey. They will not be ringed.\" \n\nHer eyes were slits. \"What the hell is that? Claiming? And ringing?\" \n\nHe jerked her arms back, pulling her back so she was off balance, and loomed over her, making sure she saw how he felt about her tone. She felt godly pressed up against him like this. \"You will show me respect when speaking to me, or I will finish with being gracious and move onto different activities.\" \n\nSienna was scared, her quick breaths and wide eyes told him that, but still that challenge was there, written all over her face. She didn't speak, just gave him attitude with her clenched jaw and frown instead. His erection told him how he really felt about that. \n\nHe wrapped his arm around her waist and pulled her farther into his lap to grind against her. \"Final warning.\" \n\nHer blush as she dropped her eyes was extremely appealing. \n\n\"Good girl.\" This time her shift wasn't as obvious as the shivers she had given him when he spoke those words last time, but it was still something. \n\nShe likes that. That ferocious part of him was rattling it's cage, demanding she would only like being his good girl. \n\nRorik had been away from her for almost a week and had been ready to storm his tent when he got back, excited to take his gorgeous prize at last. Seeing her in a potato sack on top of another man, frenzied and screaming about taking his life had taken his breath away. He knew how fucked it was, but seeing Sienna ready to kill someone called to a deeper part of him he was new to discovering. The juxtaposition between her crazy, wild temper and her eyes as she fell into the space where she could submit to him...it fucking honoured him. \n\nHe was done talking. Rorik leaned over, wiping the forest floor of anything that could stick into her back. \"What are you-\" He cut her off, bringing her to the place he had cleared, her legs still wrapped around him, landing him between her legs. The sack shifted and he could see her glorious pussy. His cock throbbed. Just a couple of minutes. \n\n\"Rorik, no-\" \n\nHe let go of her hands and wrapped a hand around her throat. There was no pressure, only the weight of his hand on her neck. She stopped talking, her eyes wide, understanding his silent demand. Her hands went to the edge of her potato sack, pulling it down to shield herself from him. \n\n\"Good girl.\" \n\nShe exhaled through her nose, and he was willing to bet if her fear wasn't there he would see relief on her face. \n\n\"You like that, Sienna.\" \n\nFor a moment her face was confused, then she was shaking her head. He tightened his grip on her neck enough to get her attention and she stopped, one of her hands going to his wrist. \n\n\"I am telling you, not asking you,\" he told her. \"You like when I call you a good girl.\" Rorik began to grind his shaft on her, lightly, as if he were only shifting his weight side to side. Sienna swallowed. \"I can see you fighting against what you desire, and that isn't going to work for very long.\" \n\nxxx \n\nSienna pulled at the wrist on her throat, terrified at the words coming out of his mouth. She couldn't tell whether or not he was meaning to, but his thick length was rubbing over her folds, making her heart skip in her chest. She had no underwear on and could feel the heat of him through his pants. His eyes had gone from serious but understanding to the Run look the moment he had put her on her back, and she had immediately knew she was in trouble. \n\n\"Hands above your head.\" His tone brokered no argument, but she was too scared to move. She was holding the sack over her crotch and she didn't trust him at all to take her hand off of the fingers at her throat. She knew what was coming, and the emotional turmoil she had just run through head first was making it hard to make intelligent decisions. \n\nIn one fluid movement, he grabbed both of her wrists and slammed them into the ground above her head. It hurt, but she was too busy focusing on how much closer to her the movement put Rorik. His face was hard and angry and close enough that if he wanted to, he could kiss her. \n\nHer heart burst into erratic flutters. This time when he rolled his hips it was intentional, pressing directly into her. She bit her lips together, the pressure and awareness of every part of him affecting her breathing. The hand that was at her throat moved down, drawing a slow line of fire down her side. \n\n\"You like that too,\" he snapped. \"And not just the dick that is about to be deep inside you.\" Air caught in her throat. \"You like when I take control. You like when I show you that you have no choices.\" \n\nYes. \n\nNo! No! Where was he, you idiot? Out killing and taking your people! No, you do NOT like this. \n\nShe shook her head vigorously and he pressed his hips forward. \"Do you want to know what I like Sienna?\" She continued to shake her head as he drew his hips back, then pressed forward again. Swallowing, she realized he was mimicking sex. It was taking all of her attention to keeping her facial reactions negative, even with the tirade going on in her head. The way he moved was languid, not just the up and down, in and out movements she knew from her last experience with sex. Sienna was extremely over her head, and being over her head with a man she hated burned. \"I like that the moment I touch you, you stop speaking.\" \n\nMother, was that true? Here she was, biting her lips together, clenching her face so he couldn't see any of the warmth he was spreading across her skin, but that was to protect herself. The moment she spoke when he touched her he threatened to choke her into submission. Of course she wasn't about to speak. \n\n\"You know there is no need until I ask it of you,\" he said, his voice dropping registers. She could feel his breath on her face. \"You like knowing there is nothing you need to do or say until I say so. Everything I am doing calls to a part of you that fucking loves being controlled. A part of you that wants to be free, where you can worry about nothing but pleasing me. And Gods, Sienna, you do please me.\" \n\nA very, very small part of her wanted to know just how she pleased him, before the much larger part of her squished it. She couldn't deny that there was something about his words that shot right into her channel, bringing a wetness that made her panicked. He was going to feel it on his pants if she couldn't calm down and reacquaint herself how much this man scared her. \n\nSienna forced herself to speak, pushing against the part of her that much preferred his kind touch to the cruelness he gave to her when she talked back. \"You choke me whenever I try to talk.\" \n\nHis free hand slipped under the fabric of the sack, skimming his hands over the skin of her stomach and sides. \"Only when you lie to me about how you don't want this.\" \n\n\"I don't want this!\" She cried. He just smirked. \n\n\"Yes, you do. Remember my fingers fucking an orgasm out of you?\" Rorik said, his fingers continuing their dance over her skin. She shuddered at his crude words. \"You liked the pain I gave you. You liked me bringing you to that place where you only have to feel.\" \n\nHis touch was sent shocks through her body. She fought the awareness and clung to the frustration at his arrogance of what she liked and didn't like. \"My body liked it, not me. I don't want you, Rorik.\" \n\nHe splayed his hands over her stomach, seeming unaffected by her words. His hips continued their mind-boggling twists and thrusts. \n\nThe fight to focus on her thoughts was getting harder as his erection ground against her. She was staring at the mass pressed up against his trousers. Sienna's insides clenched, ignoring what this man had done to her and her people. Her brain forced words past her lips, hoping for the slimmest chance of convincing him to get off of her. \"Doesn't that bother you? That I don't want you?\" \n\nHis smile was feral as his fingers moved to press on her clit, right under his dick. She gasped, the sensation scattering her resistance. \"No.\" She bit her cheek. For some stupid reason, she had thought her rejecting him so poignantly would stop him. So arrogant. \n\nRorik rolled her nub between his fingers and her back came off the ground with a gasp, the energy flowing through her body screaming for an outlet. She bit her lips closed as his hand went back to drawing over her stomach. He truly didn't care? What offence could she use against a man who's ego wasn't bruised by a woman not wanting him? This man seemed like he had no tells, and his tendency to fly off the handle at any given moment was terrifying. The inability to predict what was going to happen had her on the edge of a cliff, and for some reason, that seemed to only increase her arousal. \n\nEven through the haze of her nerves, she could feel herself itching to lean into his calloused fingers, wanting more contact than the light touches he was giving her. The sack was slowly lifting, revealing the place where they were pressed together and the lower half of her stomach. Her face heated and she tugged at her hands so she could pull the sack back down. Rorik held firm. \n\nHis pace was increasing. The way his body rolled into her was intoxicating. He wasn't just flexing his hips anymore, he was rolling his body in a sort of animalistic dance that had her salivating. \n\nThis is Rorik. I do not want this. I do not want this. \n\nShe looked up, trying to get away from the thoughts at what him rolling into her would look like if he had no shirt on. What his muscles would be doing. \n\nRorik was having none of it. \"Look at me!\" \n\nThe bark shot straight to her core and, without thinking, she obeyed. His eyes were pure as sin. \n\nI have to stop this. \n\nShe made herself open her mouth. \"No- Rorik stop.\" \n\nHis smile was predatory, so much so it was barely a smile at all. \"Why?\" \n\n\"I don't want you.\" \n\nThis time he responded directly. \"You're lying.\" \n\nSienna tried again. \"No-\" \n\n\"I can feel how wet you are, Sienna.\" He was looking at her like a morsel he knew he would devour. Like a wolf stared at its hurt prey. \"I can see it in those eyes when you look at me.\" \n\n\"Stop!\" She couldn't feel anything but the rock hard dick rubbing on her and the hand that was pulling her makeshift dress up. \n\n\"Why?\" He asked, his fingers reaching further and further up her shift. \"We both know you want what I can give to you. Why should I stop?\" \n\nCalloused fingers reached her breast and she jerked. She could feel the wind on her stomach and the sack bunched up behind her back. \"Because you're killing my fucking people!\" \n\nThe bastard didn't even pause. \"That's enough,\" he snapped, as if she were bringing up mere semantics. Rorik lifted his hand off her wrists and dragged it down her arm. The hand kneading her mound pulled her dress and the other hand lifted her briefly, tearing the itchy fabric up past her face and off of her arms. \n\nHe must have seen her hand move to cover herself because he snarled, \"You move your hands and I start treating these nipples like I did last time.\" \n\nFear raced through her. The urge to cover herself increased tenfold, warring with the part of her that knew the inevitability of him putting her hands above her head anyways. Slowly she lowered her arms back onto the ground, feeling the cool leaves on her skin. The way his pinches had hurt was scary, but the arousal it had brought on afterwards was terrifying. It had left her brain empty. \n\nOh, my fucking Mother. \n\nRorik was stripping his shirt off. \n\nBefore he could see the look on her face she turned her head into her arm, desperate to escape from that spectacular visual. As she stared at her arm, eyes wide open, he pried open her legs. She was embarrassed to figure out her legs had been clutching onto his waist. \n\nSienna pressed her legs together as she watched in her peripheral vision as he took his pants off. Her heart was pounding and her mouth was dry. This was not her element. Sienna had seen other naked men, mostly by accident, but being naked with someone else was not something she had experience with. Last time she had sex the guy had taken their pants off and lifted her shirt, but that was it. Her inexperience didn't stop the little voices in her head demanding she look at him and soak every bit of it up. \n\n\"Look at me, Sienna.\" He rasped. She swallowed, drawing up every bit of self-control she had, and looked at him. \n\nShe could have conjured self-control for years and it wouldn't have helped. The scars took the word beautiful out of the occasion, but the lines and ripples of his body covered a strength her body craved over hers. His body spoke of hardship, peril, and many, many adversaries. That same part of her that had been moments away from driving a stake through that man's throat appreciated the strength Rorik had to have to survive through the marks he bore and earn the muscles that graced his body. A more rational voice reminded her that this man and his war-like body was responsible for the kidnap and murder of her clan's people. \n\nFinally, the sentiment broke through her arousal. Her legs stopped twisting and her hands stopped gripping the earth above her head. Rorik saw the change, and at the same time, they both realized nothing was keeping her where she was. \n\nHe was standing an arm's length away from her, both of them buck naked. The chain that was at her foot had been removed, supposedly when he had picked her up while she was attacking that bastard. Her stomach was a mix between blue, tinges of green, and yellow on the outside, and she hadn't winced once during this whole excursion. \n\nAll of this information seemed to pass between them. Rorik tilted his head, tense, the look on his face filling her imagination with all the punishments he would inflict on her if she ran. The worst one was Yasim dying, holding her throat as blood spilled through her fingers. The tension that permeated the air could have swallowed her in its wide mouth. \n\n\"Don't move.\" His fingers twitched, moving towards her with excruciating slowness. \n\nIndecision ripped her in half. Did she run and chance it? Or stay and save her people from within? Her feet dug into the dirt below her, her fingers clutching onto the leaves above her head. \n\n\"You execute Yasim if you move one more muscle.\" \n\nWould he do it? It was highly unlikely they knew if Yasim bled or not yet, and if they had travelled as far as they did, they wouldn't go executing their quarry just to prove a point, right? Or would he do it out of desperation for obedience? \n\nShit shit shit shit shit! \n\nRorik was about a foot away, and it was the unpredictability of his dark look that made up her mind for her. \n\nHer leg shot up and she kicked for his crotch. Though his hips twisted just in time, she still got enough of a connection to leave him groaning. \n\nSienna didn't even register getting up. Her feet were suddenly under her and she was flying through the forest. Her soles tore into the dirt and leaves, digging as hard as she could into the Earth to launch herself forward with each step. \n\nAs she ripped through a small space between two tree trunks, a space she knew Rorik would not fit through, the tiniest sliver of hope sprung up in her heaving chest. She might actually be able to get away. \n\nSmall branches whipped her naked skin, the stinging sensations only fueling her adrenaline. Her heart pounded in her ears, so much so she could barely hear the pounding footsteps she knew were behind her. The thought of Rorik nipping at her heels kicked her into a gear she hadn't even known she had as she soared through the forest. \n\nThe smacks and crunches of his feet slapping over rocks and leaves kept Sienna in a near panicked state, her feet moving faster than her head could take in her surroundings. The Mother seemed to be arranging the forest to accommodate Sienna as she fled, keeping anything that could slow her down out of her way. She said a small prayer to the Life Bringer and pushed away from Rorik and towards the people who needed her help. \n\nAs Sienna launched herself over a rock, a calloused hand closed around her calf. \n\nHer heart reached her throat and her breath left her lungs, so when she smacked into the ground all thought of breath left her lungs. The never-ending well of tears she seemed to have slipped out the sides of her eyes as she moaned on the ground, Rorik's hands pushing her body into the dirt as he crawled up her body. \n\nNo! I was so close. I was so CLOSE! \n\nSienna's hands reached around her, scrambling to pull herself out from under him. He ruthlessly pinned her to the forest floor, his body smothering her back, seemingly uncaring she was gasping for breath. \n\nRorik's mouth pressed so close to her ear he practically had her whole ear in his mouth. His hand fisted in her hair, keeping her still, and made her listen as his breathing slowed. She took a small bit of pride that he seemed truly winded. It took her a moment to realize that the quick but rhythmic breaths pulled at a part of her that made her want to calm down and stop fighting. So fucked. \n\nShe jerked her body, just to show both herself and Rorik she wasn't pacified. His whole body tightened over her, pressing her into a Sienna-sized indent in the damp forest floor. The fist in her hair jerked her head and the flat of his tongue ran right up her cheek in what seemed like just another way to claim her as his own. His lips moved back to her ear. \n\n\"That was fun, wasn't it Sienna?\" Rorik snarled, his wet lips moving over her ear cartilage. \"I didn't know how much someone running from me in terror would turn me on, but we're learning many new things together, aren't we?\" \n\nShe was tired. Mother, she was tired. \n\n\"Especially naked. Seeing that beautiful ass bouncing in front of me, mixed with those beautiful panicked noises you made as you ran...\" He groaned and crushed his thick column in between her ass cheeks, grinding himself into her in what almost seemed like a punishment. \n\nShe sniffled. \"Please stop.\" \n\nRorik didn't listen. He pulled her towards him a final time, though she really couldn't have gotten any closer. He flipped her onto her back and wrenched her legs open, using his grip to fold them around his waist. She unwound her feet and placed them on the ground, not wanting to participate any part this. Her hands were up and she was pushing his hands off her thighs frantically. The intensity he was projecting was scaring the breath out of her. \"Stop! Fuck off!\" ",
        "A feral noise tore out of his mouth, and she was being scooped up, her body pressed against his. Her legs wrapped around his hips instinctually, scared he would throw her down like he had the last time he had held her in this position. Even with her legs around his waist she shoved her hands into his chest, in between them, angry and terrified at their proximity. Even through everything, her body felt alive being this close to him. Her ear and cheek were still wet from his spit. \n\nHe killed David, she chanted to herself, fighting to keep her resistance. \n\nHis hand buried in her knotted hair and tugged her head so he could plant his face in her neck. There was a barely contained violence in his touch. Everything about this reminded her of how he had stormed into the tent days ago, to rub himself on her as if he were leaving his scent to scare lesser predators off. \n\nI want you to remind yourself who's fingers made you cum. Who that pussy aches for. She shook her head to rid herself of the words that echoed in her head, seeming clearer now that he was surrounding her so completely. I am going fucking destroy this hot, desperate body of yours. And maybe when your cunt shatters around my dick you'll stop pretending you don't want this. \n\nJust like the first time she heard the shocking and violent words, her pussy gushed. \n\nSienna was gasping, fighting in earnest. She twisted, trying to get her feet on his legs to push herself off, not caring if she fell. She needed to get as far away from this man as possible. His face was buried in her neck, so instead, she took her thumbs and dug it into his neck, right where the pulse was. \n\nRorik outright laugh sent a fresh tumble of trepidation down her spine. \n\nShe was spinning, and then her cheek was pressed against the leaves on the ground. He wasted no time lifting her hips so her knees were on the ground, her ass in the air crudely. Mortification heated her face, his arm hooking under her raised hips to stop her from moving. She heard something happening, and just as she opened her mouth to scream her feelings into the dense forest, what looked like a giant ball of moss was shoved in her mouth. \n\nRorik was pressed up against her raised ass, leaning over her back. She could feel his hardness against her thigh, right below her throbbing lips. He was breathing hard, and Sienna wanted to believe she had put up a good fight, but the way he threw her around so effortlessly told her it was most likely his arousal. \n\n\"Spit that out, wildcat, and I'll fuck your ass dry,\" he spat. \n\nHer heart nearly stopped. \n\nWhat? \n\nSienna had limited experience of sex, and that sort of activity was not a part of it. She had never even heard of something like that. Her ass clenched at the thought. All thoughts of continuing her struggle fled, terrified of the idea of him bringing her to that level of depravity. Mother help her, he wouldn't, would he? \n\nHe spread her legs and put his knees on the inside of hers, so she couldn't close them. She whimpered, the air whispering across all her most intimate parts. Her heart pounded, hating how incredibly exposed she was. \n\nRorik's one hand held her hip with an unshakable grip, and the other landed on her ass with a lewd smack. He gripped it, dragging her cheek with his hand. \n\n\"I fucking love this ass, Sienna,\" he said, his voice deep. \"You sure you don't want to spit your gag out?\" \n\nThe gag was thick and moist in her mouth, completely effective in stopping any words she might want to form. So instead she shook her head and clenched her ass closed. \n\n\"Maybe I should fuck your ass anyways,\" Rorik snapped. The ferocity in his voice made her channel pulse, even as he threatened her. \"Running from me was a very bad idea. You need to learn these fights will always be fruitless. I will win, every single time.\" \n\nBefore she could focus on what could happen to Yasim for her disobedience, a slight pressure touched her there. She cried out, barely able to suck all the air she needed in through her nose. His tight grip on her hip kept her from bucking out of his reach. \n\n\"When your asshole winks at me like that, it makes me think of how it would feel clenching around my cock. I'm thinking from the look on your face you've never done that, and you can fucking bet I'll be your first.\" The pressure on her hole was terrifying. He leaned over her again, his hips increasing the tension his digit laid on her puckered skin. Sienna groaned, shocks running over her skin. \n\nHis voice was at the back of her neck. \"I don't know what brought that little fight on after I caught you, Sienna, but I like it. Subduing you gets me harder than a fucking rock.\" He drew his hips back and slammed them into her backside. They both jerked forward and she yelled into the moss, the barest tip of his finger going just inside her asshole. For a heart-stopping second, Sienna thought he was just going to push his finger in. The stimulation at her asshole was stealing her breath, the shocks running through her body unsure whether to go to her cunt or her head. \n\nShe could hear the smile in his voice when he spoke next. \"But obviously my girl needs to be taught a lesson.\" \n\nSienna whimpered, chanting every curse she knew in her head. Why was punishment needed if he liked it? He sat up, the pressure disappearing from her asshole. Before she could catch her breath and reorient herself, his hand was running down her slit. \n\nHe made a noise in his chest. \"You're fucking soaked Sienna.\" His voice was like rocks rubbing together. She swore she got wetter as he spoke. \"Your rules. You will keep your hands on the ground, beside your head. You will keep your face to the side so I can see you. Lastly, you will not orgasm without permission.\" \n\n\"Uuuuuhhh oooooo!\" Was the best estimation of 'fuck you' she could get with the moss in her mouth. The digit was back on her puckered hole, pushing this time. \n\n\"What was that?\" He asked, his gravelly voice amused. \n\nA high pitched sound left her mouth and she shook her head. The full tip of the finger slipped in and she gasped, more strained noises erupting out of her throat. The amount of sensation it created was painful, but she couldn't tell whether or not it actually hurt. \n\n\"If I see or hear any more disobedience out of you, I'm taking your ass today. My patience is gone.\" Sienna was already nodding her head when he said, \"Do you understand me?\" She didn't understand how he could be so terrifying and still sound so much like sex. \n\nShe could feel his eyes on the side of her face as she nodded vigorously. \n\nAnything but that. Anything. \n\nThe finger popped out and the hand moved back down to her folds. She could feel how hot she was down there. He was right, she was soaked. \n\nAs he drew his fingers around her vulva, slowly moving towards her soaked channel, the hand on her hip dropped to her clit and started to lightly rub. Her asshole was still clenching, trying to return to its untouched state, but as his fingers wandered so did her mind. The shocking vibrations that had ripped through her body when he played with her ass were melting into a low burning fire, licking through her with abandon. She could feel her body sinking. \n\nShe wanted to panic, she really did, but her body was not there with her. She was scared and her nerves were on high alert, but the desire flowing through her was shifting her hypersensitivity from fear to sensation. Also, Sienna really was exhausted. Emotionally and physically exhausted. \n\nIn some kind of sick way, her body was telling her, that's enough. It was clear as day. You have fought and you have lost. Rorik had overpowered and outplayed you. It wasn't a thought necessarily, but a feeling. In the back of her head she knew if he stood and told her she was free she would run again, but right now, all that mattered was his fingers slipping into her aching heat. Her pussy rippled, trying to suck the fingers in. It was telling her, Rorik has won. He deserves this. You deserve this. And fuck if she didn't believe it. \n\nBesides, if she just allowed this to happen, he could reward her with leaving Yasim alone. The possibility had her flying deeper into that space where all that mattered was her body. \n\n\"Such a good fucking girl, Sienna,\" Rorik rasped. Her nerves fluttered. Could he see her sinking? \n\nHe pushed a slippery finger deeper into her core, past her lips, rubbing his fingers over her walls. It took him a minute, but he finally landed on the bundle of nerves inside her. Whether or not he had intended to, the searching finger barely brushing by her favourite spot had been a tease. Sienna just stopped herself from pushing back. \n\nAnd then his digit left the spot she wanted him on. He maneuvered his fingertip around, pressing on different spots, which she couldn't have imagined being very easy. She was clenching her muscles down on his finger as tight as she could, leaving her tight pussy strangling his fingers. \n\n\"Relax, wildcat,\" he said quietly. It took her a moment to understand what he meant, but eventually unclenched her muscles. \"Fuck, your pussy is heaven.\" Again she clenched around him, recognizing she was trying to suck him in deeper. She relaxed. \n\nThe finger on her clit was too high. She angled her hips away, trying to get away from him before he found the right spot. He followed her twisting hips, and the bastard brushed right by the right spot. Before she could stop the reaction, her legs tightened. Sienna didn't even get a moment to hope he didn't notice before he moved back to the spot that her body had reacted to. Rorik made a deep sound in his chest as her body tightened, then sank into his fingers. \"Such a greedy girl.\" \n\nThis is so fucked, she thought as she whined. \n\nHis twisting finger inside her found the bundle again and rubbed it slowly, just as slowly as the finger brushing over her clit was moving. It was infuriatingly slow, with just enough pressure to keep her on edge. The fire building in her needed an outlet, and yet his lazy caresses expressed none of the intensity she needed. \n\nAfter an infuriatingly slow caress of her fluttering pussy, Sienna found her body pushing back onto the fingers. She heard a satisfied humming behind her. \n\nSo fucked. \n\nThis man killed people. He took what wasn't his and put his hands on her when she didn't want it. And here she was, trying to fuck herself on his fingers. \n\nAs if sensing her thoughts took a turn for the worst, another finger started to work its way into her core. Her fingers gripped the dirt above her head as her pussy stretched to accommodate it. It took a couple minutes, but it wasn't long before the slow movements had her walls fluttering again. \n\nHis fingers began to move in earnest. The pressure build-up was in the space right between the two nerve bundles, tightening perfectly, leaving her panting. She shifted her hips again to move his finger to a lower spot on her clit and gasped. \n\nYes! Right there. Oh- Oh please. Oh- \n\nHis finger left her clit and the finger inside he pulled out so just the fingernail sat in between her folds. \n\nSienna moaned, moving her ass, both searching for the pressure and trying to get away from his fingers. She bucked, the strangled sounds in her throat sounding so dirty she could barely believe she made them. \n\nRorik laid his chest over her back, his sparse chest hair feeling marvellous on the skin of her back. \"Did I tell you to cum Sienna?\" \n\nHer head was shaking No, her ass still moving but trying not to hit the staff swinging behind her. He pressed his length up against her lips, hard, sending little shocks Sienna worried was a ruined orgasm through her body. \n\n\"No, I didn't.\" He was running his erection along her slippery folds, making Sienna gasp for breath. He ran his teeth over her back and shoulders, giving her bites that varied in intensity. \"You look like you would beg for my cock right now, Sienna. Would you? If you could speak, would you beg for me to fuck you? To put myself so deep inside you, you could barely breathe?\" \n\nSienna's eyes rolled back, but she stopped moving her head. She could let her body talk for her, but outright admitting she would beg for him to fill her wasn't something she would do. Nor would she say no, because he would view that as a challenge. She didn't doubt he would take the moss out and demand the words from her. She wanted to believe she would bite her tongue off before begging for him to fuck her, but she was having a hard time having any faith in her self-control at that moment. \n\nHe picked himself up and put his fingers back on her clit, going back to the slow rub that drove her nuts. A blunt object placed itself at her entrance, rubbing up and down along her wetness. \n\nFuck that feels good. \n\nThe words she tried to say were muffled by the cloth. \n\nThen the blunt object started to push, and she knew it was his dick. The part of her that recognized this was not ok jerked forward and he caught her by the hip. He kept pressing forward, his fingers holding her with a bruising intensity. \n\nShe was tight, and he wasn't small, so the progress was slow. Each inch he pushed in, he drew back, and then pushed forward some more. The stretch hurt in the most glorious way. She wanted the fingers back at her clit, but it was too busy holding her hip. \n\nA nasty voice in her head said, You shouldn't have moved. \n\nAs Rorik's cock stretched her, she looked back, wondering why he wasn't saying something. She was expecting him to be mocking the pleasure she was feeling. \n\nFuck. \n\nHis eyes were flickering and his teeth were clenched. He looked angry and aggressive, like her pussy was ruining him. A moan slipped out of her mouth as she looked away, but his face stayed in her minds-eye. Looking had been an incredibly stupid idea. \n\nIn her head she chanted, I don't want this. \n\nFinally, he nudged at the end of her channel. She was gasping, and she could feel his balls tickling her clit. He was pulling on her hips, trying to get himself as deep as possible. \n\n\"Holy fucking shit,\" she heard him mutter. \"God damn it.\" \n\nShe squeaked. Her bodies response was different at the end. It was so intense it was painful, and as he nudged it she realized the sensation stole her breath. He had been right. He was so deep inside her she could barely breathe. \n\nHis hand slipped over her stomach to her clit and started stroking. The groan that fell from her mouth was shame-inducing. \n\nRorik pushed on her cervix, elongating her groan. She heard that same feral noise he had made before from behind her. Her pussy gushed. The satisfaction that she could make him make such animalistic noises was wrong, but there. His voice was hoarse when he spoke. \"I can feel you rippling around me. You're fucking perfect, wildcat.\" \n\nHe withdrew and pushed back in slowly, the noises they made together moulding into one. She felt like a wildcat. She was pure instincts right now, and fighting off any human urge to acknowledge how much she hated this man. \n\nRorik picked up the pace and shifted so the angle intensified, leaving her making noises she didn't even recognize. \n\nThis is nothing like before. Nothing. Fuck you Rorik. \n\nHis dick rubbed every part of her, sending pleasure to the very tips of her fingers. She couldn't take a proper breath and didn't really care. He was moving his hips, thrusting into her just like she thought he would. Languid and hitting everything. \n\nHe hit a spot deep inside her, right before her cervix, and she inhaled so desperately she must have sounded like she was dying. A bit of moss flew to the back of her throat. She choked and spit the moss out, out of instinct. Even as she sputtered to swallow the spare moss in her mouth, she kept her eyes on Rorik behind her, waiting for his declaration that her ass was next. \n\nRorik must have thought her dying noise was good, because he repeated his movement, rubbing the head of his dick right over that deep, deep spot. The feeling was so intense it left her leg twitching. In itself, the drag over the spot felt like a mini orgasm. \n\n\"I don't know how I feel about you spitting out your gag, Sienna,\" he mocked her, circling his hips so the crown of his cock ground down on her cervix. He drew back and slammed into the spot. Her legs shook. \"If this pussy wasn't made to milk me, you're damn fucking sure I'd be slamming into your ass right now.\" \n\nShe bit her lips together, the anxiety his words caused stoking her fire in a very, very confusing way. His hips were moving in time now, leaving her to focus on his thrusts as he covered that beautiful spot every time his hips hit hers. Blinding lights hit her eyes every time he thrust forward, the fire burning her so hot it almost scared her. \n\n\"That's my wildcat. That's the spot.\" \n\nPlease- Mother of all- fucking please. \n\nHer orgasm was charging. \n\n\"No, Sienna, don't you dare,\" Rorik said, his hard tone reminding her of the punishment he had promised. \n\nHer noises turned frantic. How the hell was she supposed to fight this off? She was a pebble and this was a fucking tidal wave. She searched elsewhere in her mind, trying to focus on anything but the magnificence happening inside her. \n\nSeconds passed as she squished her face, fighting off the orgasm in her mind with that teenaged size hammer Rorik had. His cock slammed inside of her and she twisted her legs and reached her arms out, panicking. She couldn't do it. It was coming. \n\n\"Cum NOW!\" \n\nHis demanding words set her off. Everything was white hot perfection, every single shock wave that raced through her had her legs shaking. Rorik called out, something that sounded close to a feral snarl, and he shoved his whole length inside of her, driving her orgasm to a new height. His finger just pressed on her clit as he slammed into her, not letting her get away from the raw pleasure in her body. \n\n\"Who owns this cunt!\" His voice was wild with tension and passion. \n\n\"You!\" Her mouth was dry so it was just a gasp, but he heard it. \n\n\"Sir!\" He gnashed. \n\nShe didn't even think. \"You Sir!\" \n\n\"What's my name? Who made you cum on his cock? Who!\" \n\nThe force he was slamming into her with was rocking her forwards, both of his hands on her hips now, their grip bruising. The words slipped out as the orgasm tumbled over her, the aftershocks from his thrusts so powerful she couldn't tell if she was recovering or still coming. \"Fucking shit! You! Rorik!\" \n\nHis yell was raw as he pounded into her twice more, then pulled out. \n\nThe twisted feminine pride she felt at making him cum immediately dissipated at feeling wetness on her ass and lower back. \n\nHe... He came on me. \n\nShame wove through the trembles of pleasure in her body as he thrust against her, his groans filling her with dissatisfaction. Couldn't he have cum on the ground? Everything about his last act had her feeling used and shamefaced. At least he didn't cum inside you, idiot. A bitter snort left her lips. It was almost funny how quickly her brain caught up with her body when she wasn't chasing an orgasm. \n\nHer stomach was sore and her knees hurt. She wanted to drop her ass, but Rorik was holding it up. Her limbs were shaking from the orgasm and all the adrenaline and energy she had expended today caught up with her. She was exhausted. So when she felt him rubbing his cum on her back, as if he were trying to press it into her skin, the anger she felt was just a small buzz. \n\n\"Turn your head back, Sienna. Look at me.\" His voice was stern but deep. That was the sound of a man post-orgasm. \n\nShe was blushing as she turned her face to press back into the leaves and looked at him out of the corner of her eye. If his voice had been sultry, the look of him right after sex was sinful. She wanted to close her eyes, knowing he wanted her to see him looking so satisfied. ",
        "He petted her, one hand rubbing his semen in and one drawing down her back. She shivered. \"I own you, Sienna. Your body is mine to take. My cum on your skin is exactly what you need.\" She didn't respond. His voice deepened, throaty. \"I should carry you back to camp like this, so every man there can see my mark. So they can see your come on your thighs and know you have been taken. Thoroughly. That you are mine.\" \n\nPanic rose in Sienna. She would rather have her ass taken dry than be paraded around like a prize, sweaty from the sex they had obviously both enjoyed. She didn't move, her eyes wide, unsure of how to respond. She was terrified of upsetting him enough that he would do that. \n\nIt seemed her lack of answer pissed him off anyway. His hand closed around the back of her neck roughly. \n\n\"What do you think about that, hmm?\" He pressed his semi-hard dick against her. \"Maybe there isn't enough here. Maybe I should fuck you until I spill everything I've got onto this fucking ass of yours, and then we can go eat dinner near the fire with the men? Mmm?\" \n\nHe was shaking her as he asked each question. Sienna's head flew back in forth in a fervent no. She couldn't believe he was thinking about that. Making her eat naked in front of the men, covered in his drying cum. A whimper slipped out of her mouth as she realized he'd probably make her eat out of his hand again. \n\n\"Please, no,\" she whispered. Her voice shook. Sienna couldn't do it. She could do a lot of things, like forget the man fucking her was a murderer and stealing her life from her, but eating naked in front of the Gavali men smelling like sex - she couldn't do that. \n\nHe bit her ear sharply. She yelped as he threw her down. Waiting a couple of seconds to make sure he wasn't going to follow her onto the ground, she turned onto her butt. She kept an eye on a dressing Rorik, her mind whirling. What had she done? Sure she had run, but she had fucked him, as willing as anything. Why was he treating her like this? He couldn't actually be mad that she had tried to run, right? If he was in her position he would have run. \n\nSienna was exhausted and having trouble keeping her thoughts straight. Her throat pinched as she reached out to try to stand up. Rorik swooped in and picked her up, his arm under her back and her knees. She could feel his orgasm drying on her back. \n\n\"If I ever see you covered in anything that doesn't specifically belong to me, I'll kill the man who gave it to you. The only clothing you wear will be mine.\" It took her a moment to realize he was talking about the sack she had been wearing. \n\n\"Please don't take me to camp like this.\" She was still whispering, shaking as the high of being fucked faded. Asking him for anything was painful enough without raising her voice. \n\n\"Why shouldn't I?\" Rorik demanded. His blue eyes were raging, his face twisted in fury. He was so angry. Why? \n\n\"Why are you so mad at me?\" Tears slipped down her face. She was completely overwhelmed. The waves of emotion and circumstance were raging over her, just like that undertow had, hitting her so hard she couldn't tell which way was up. She didn't understand Rorik at all. Sienna had done all the things he wanted. Couldn't he go back to be cold and cruel? That was better than the anger he directed towards her. \n\nHis jaw was shifting back and forth, his eyes sadistic. \"What if I give you a choice, then,\" he breathed. \"You ran from me, didn't you, wildcat? You know what I said would happen.\" \n\nHer blood went cold. No. \n\n\"You've truly signed Yasim's death warrant, all for a few moments of freedom.\" He seemed to just be soaking up her horror, revelling in the mayhem he was havocking in her chest. \"What would happen if I offered you the choice? Either Yasim's life, or-\" \n\n\"Take me to camp.\" Sienna could barely breathe. What kind of cruel human offered a choice between public humiliation and a life? Besides, she had made her choice days ago. She would take the punishments and cruelty the Gavali had to offer if it was between her and her people. Her voice was shaking, but she spit the words out. \"Okay, take me to camp like this. Leave Yasim be.\" \n\nRorik stared at her face, searching for something, his jaw clenched so hard she was surprised he didn't break any teeth. She stared back, her mind running over all the cruel comments and stares she was going to have to endure. The horror of being forced to eat naked, covered in his orgasm, being fed food out of his hand, would always beat Yasim dying. Always. \n\nHe grunted and started walking - the opposite way of camp."
    ],
    "authorname": "Blovely4you",
    "tags": [
        "noncon",
        "dominance",
        "submission",
        "pursuit and capture",
        "non-con"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/daughter-of-ziva-ch-04"
}