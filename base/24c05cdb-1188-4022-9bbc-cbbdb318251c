{
    "title": "Lost Empire Ch. 35",
    "pages": [
        "Mara's eyes were still wide; it had been exactly like the emperor had said. She'd only been asleep for possibly two hours at the most. Here she was hearing a voice in her head of one of the ships. Looking over at Derrick she asked, \"Uh Sire? Do you want me to go to my ship right now?\" She asked.\n\n\"I'm not all that sure right now Captain,\" Hartwell said with a wry smile on his face. \"As upset as you were, do you really think that you are ready for this?\"\n\nMara snapped to attention as she saluted both Hartwell and Derrick. \"Yes sir, I am more than ready!\" Mara's face a look of consternation as she was staring at Hartwell after what he'd said.\n\nHartwell turned to Derrick still with a wry smile on his lips. \"What do you think sire? Do you feel that she is settled enough emotionally to take on this challenge?\"\n\nDerrick had caught Hartwell's smile and nodded slightly at the man. \"I'm not sure Admiral; I am in need of more primes for the ships. I do have to make sure they are mentally sound though!\"\n\nMara's face had gone from elation to downright anger, \"With all due respect Admiral, sire, let's cut the crap ok?! I am a hell of a lot more stable than Mack Brown! Beside after leaving us for as long as you did, we all deserve this!\"\n\nDerrick started to smile wider as did Hartwell. \"Do you know which ship it is Sire?\" Hartwell asked.\n\n\"Yes,\" Derrick replied, \"They all inform me before anything is done. In this case being second was understandable.\" Derrick nodded looking up and said, \"All right, I agree for those reasons. I want you at one hundred percent before we talk about that.\" Derrick nodded again then looked at Mara. \"I suggest that you rest for a bit, it's going to be a bit before you can finish bonding with your ship's A.I.\"\n\nMara nodded, \"Yes Sire, thank you Sire!\" Then she cocked her head to the side as she was walking out of the door. \"Yes, my god I am so excited to meet you! I just hope...\" she was saying as the door cut off her conversation.\n\nHartwell just shook his head, \"Really Sire that was mean!\"\n\nDerrick laughed, \"True but I already knew she was ready. I have to keep things serious after all!\" Derrick was suddenly quiet as he stared at Hartwell. \"So ... when were you going to tell me?\"\n\n\"Tell you Sire? I'm not sure what you're talking about.\" A confused but wary Hartwell said.\n\nDerrick sighed, \"Mary, Shelby, I need isolation for the following conversation!\"\n\n\"Yes Derrick, all communication if off, all recordings are off, all outer walls now sound proofed. You can proceed.\" Shelby advised him.\n\n\"Again I ask when were you going to tell me. What, you think it could go on as long as it has and I not find out!? Christ Joseph we're best friends what has come over you?\" Derrick almost shouted at Hartwell who was still looking at Derrick with a questioning look. With a frustrated grunt Derrick continued, \"You're really going to make me say it aren't you? About your family, about your sister!\"\n\nHartwell's eyes suddenly narrowed, \"that's none of your damned business!\" He shouted. \"That's my family and I'll take care of it! Now back off!\"\n\n\"Look you stubborn ass! I am already involved had you come to me with this I might...\" Derrick started.\n\n\"You might have stuck you nose where the hell it didn't belong! As I said back the...\" Hartwell shouted.\n\n\"Joseph Johnathon Hartwell! You and the men ARE my family! I cannot and will NOT let anyone hurt my family!\" Here Derrick pointed a finger at Hartwell as he continued. \"You, you stubborn ass are too damn proud to ask for help! Well too bad! You've got it now damn it! Besides as I see it this may be all I need to roast that idiot for all the shit I am hearing he has done.\"\n\nHartwell refused to look up damn it, this was his responsibility, \"It is my responsibility to kill...\"\n\n\"I'm not denying you the right to that. You and the others are my family and I will protect my family to the best and last breath in my body. Remember that you and all of your family are mine also. I know about the disappearance of your sister, the suspicious deaths of several of your family members. I have had Mary gathering every shred of information she could. Mary if you please.\"\n\n\"Yes Sire, I have noticed many, many discrepancies in the Duke's records. I have made detailed investigations of all money that is the Duke's money. I have also noted increases in his financials in the same amount that you sent your family. I am now requesting the source of that money. Under Imperial penalty, I am again making requests. If they are not answered I have sentries in place to take action. That being said, I have also threatened prison time. They have exactly one hour to turn over all records I am inquiring about before they are taken into custody.\"\n\nHartwell could only nod opened mouthed he'd not expected Derrick to have gotten this far. As a matter of fact he thought that it was still well under wraps. \"I'm sorry; I have lost so much, so many of them. I don't mean to sound ungrateful but...\"\n\n\"SIRE!\" Came Mary's sudden shout.\n\n\"What's wrong? Have they refused?\" Derrick asked a little worried.\n\n\"No sire, this is another matter. It seems that the day the Admiral's sister disappeared a new slave was added to the Duke's residence; a slave that more than closely matches the description of the Admiral's sister!\" Mary informed them.\n\n\"WHAT!? I'll kill that bastard with my bare fucking hands!\" Turning Hartwell bowed then left the room.\n\n\"Keep an eye on him Mary; I don't want to lose him now; especially after I just got him and the rest of them back!\" Derrick told both Mary and Shelby.\n\n\"Yes Sire, I'll do what I can.\" Mary said.\n\n\"As will I Derrick,\" Shelby stated.\n\n____________________________________\n\nDuke Risen re-read the message he'd received, good they were on the way. Rubbing his hands together he thought this ought to keep that bastard out of his affairs long enough to get a better plan going. Several of his people had reported that their systems had been breached by a very powerful computer. Ha! He no doubt thought it was that bitch of a computer the bastard had at the palace.\n\nLaughing he knew that it wouldn't get much as he was already expunging everything that might be used against him. Pressing a button on his desk a young male voice answered, \"Yes, your lordship?\"\n\n\"Are the erasures on schedule? I want nothing left that can be linked to me!\" Risen was saying.\n\n\"Yes, your lordship everything is deleting as we speak.\" The young male voice replied.\n\n\"Good, that bastard that claims to be the emperor has garnered enough support now. He could actually bring me to a standstill and put me away. That is not about to happen! Inform me as soon as all incriminating records are gone,\" Risen said, as an evil smile crossed his face. Let the bastard do anything now! Without this proof he had nothing and the Duke would gain control again!\n\nClicking off, the visage of Mary smiled as she started to download every file that the Duke had indicated. That was 'til she came across some information that the Duke had ordered the assassination of the emperor and still had a plan in place. Growling, she immediately informed Derrick. \"Sire!\"\n\nDerrick looked up from the screen he'd been reading at tremendous speed. \"What's wrong Mary?\"\n\n\"Sire, I have quite a lot of information for you. It appears, as you thought, that Duke Risen IS responsible for the attempt on your life. It appears that he paid a considerable sum to the sect to have you removed. I might also add that I am finding several hundred atrocities that are comparable to the old Republic President.\"\n\n\"Finally,\" Derrick yelled. \"I've got all that I need to end that asshole!\"\n\nTrianas was in orbit around Earl Tauntoff's planet when her alert system started to go crazy. Looking over the readings she started to curse, this smelled a little of that ass Duke Risen. Smiling evilly at her joke she sighed, she'd have to wait 'til this crisis was over before she could even get near the man let alone kill him. Veering off she decided she'd have to amuse herself elsewhere. Thinking of Duke Risen she smiled and set course.\n\n__________________________________\n\nDerrick was looking over all of the information sent in. It appeared that this race was the Creagons. They were a particularly nasty race when it came to warfare. Shaking his head Derrick was afraid of this; these bastards wouldn't surrender no matter what. Much as the second time he's gone against them Derrick's mind was working overtime planning strategy.\n\nCalling up his three Captains, Derrick wanted to advise them. All three of the Holograms of the men appeared before him. \"Captain Thomas,\" Derrick started drawing a groan from the man. \"I suggest you get used to it Thomas! You are my senior Captain in this. I have faced this species before twice. They will not surrender and will give no quarter.\"\n\n\"Uh Sire?\" Mack Brown started. \"You mean we have to slaughter them to the last ship?\"\n\n\"Yes, I am afraid so this is one of the two most ruthless races. They have been trying to invade the Empire for over eight hundred years. I stopped them last time with only three ships then they only numbered in the hundreds. This time I am afraid they are in the thousands. So far all but two ships have been upgraded with the new triple power particle cannons. They have also had a power redoubler added to the power core.\" Derrick informed them.\n\n\"So compared to how you were back when you faced them, what are our chances,\" asked Randall Zimmel.\n\n\"With this new equipment you will be far better protected than I was. You will have almost three times the destructive capability. The new weapons should enable you to take out far more at one time than I did.\" Derrick told them. \"I still want you to remember though, even with the increased shield power, you're not invulnerable. If it's one thing I have learned there is always a way around situations. Remember repeated hits on the same spot of the shields can weaken them ok? I was hoping that Captain Callie would be on her ship but it will be another day before that is possible. I estimate that we have another 3 days before the Creagons breach our galaxy. Now then Captains, I must inform Earl Tauntoff that we will be delayed. Thank you that is all.\"\n\nDerrick shook his head this was a hell of a way to really get things started; especially now that they had a fleet of ten or more ships. For some strange reason Derrick felt that someone was behind all of this, shaking his head he'd have to investigate further.\n\n________________________________\n\nGreeson had been thinking of Ensign Callie all day. Not really paying attention Dempsy had smiled when almost everything he threw at the man was blocked. That's when Dempsy started on the second more advance wave of attacks. Again he was pleased when Greeson, a little more aware blocked almost all of those. Taking a deep breath Dempsy started on another different attack throwing in several advanced attacks of other martial arts. Another wide smile crossed Dempsy's face.\n\nEven as he barely watched Dempsy, Greeson saw that Ensign Callie had once again entered the training area. Watching her walk he again almost ignored Dempsy 'til the man landed a blow to his chest. Crumpling Greeson coughed trying to draw a breath. Smiling Dempsy walked away, now he thought let's see if the man had truly listened.\n\nGasping Greeson watched as Dempsy walked away, almost as if on auto-pilot the man hit a point near his sternum. Gasping a hung lung full of air Greeson sat and meditated. Thinking he'd avoided almost all of the Lieutenant's moves and blows. Thinking harder he had to solve this mystery this was the first time he'd reacted like this.\n\nDempsy watched as Greeson went into meditation, good. The man was finally starting to concentrate without thinking. The simple fact that he was now in meditation was another good sign. Sighing Dempsy thought that the man was a hell of a lot faster; his techniques were starting to advance to a high point. The thing Dempsy was afraid of was that they weren't far enough. If he couldn't make it to them, when she went after his student, the man might not make it. He just prayed that all that he'd taught the man would save his life in the end.\n\nMara watched as the man Greeson dodged and blocked a myriad of attacks. Then her eyes opened wider as she walked in and the man turned toward her and was moving so fast she couldn't even see either of them move! Then as incredible as it seemed they went even faster! What in the world was going on? The man was just a sergeant and he was almost as good as the Lieutenant! Why in the world wasn't the man an officer also? That's when she saw the one named Greeson go down choking and the Lieutenant walked away!\n\nDempsy stopped the young woman as she arose to go help Greeson. A smile lit up his face it was as he thought they both were highly attracted to each other. Then he sighed he had to get the commander to change his mind. The fact of what the man had just done against him was proof enough to Dempsy. \"Let me go sir! He'll choke to death!\" The young woman was pleading.\n\nDempsy just shook his head, \"He will be fine, watch.\"\n\nEven as the words came out of his mouth Mara watched in amazement. The man hit a point near his sternum and drew in a huge lung full of air. Almost immediately the man settled to the mat and went into meditation. \"How?\" Mara asked.\n\n\"He is a far better student than I had thought him to be at first. I have to thank you young woman. Your presence has enabled the man to advance where I have been trying to get him to.\" Bowing low Dempsy said, \"I thank you for that as I am sure he will some day. Just never tell him that I have said so.\" This Dempsy said as he waggled a finger at Mara.\n\nMara just stared at the man as he smiled strangely and walked off. Sitting she guessed she have to wait for a bit before she was able to ask the man her question.\n\nDerrick looked up as the door opened allowing Dempsy entrance. \"I really don't have that much time Dempsy.\" Derrick said.\n\n\"Yes Sire. I was wondering, what if any decision you had made about what we talked of earlier?\" Dempsy asked as he sat before Derrick.\n\nDerrick sighed, he'd watched the last exchange that they had and he also had to admit the man was almost as fast as Dempsy. All AFTER Mara Callie had entered the room. \"You're not going to let it drop are you? Just like the last time when I had to bust you to private to get you shut the hell up!\"\n\n\"Ah! Those were good days!\" Dempsy said as Derrick shook his head in disbelief.\n\nSighing again Derrick finally relented. \"Alright, alright! I'll make him a Warrant Officer that's the lowest officer there is. When and if I see he is better officer material, then, we'll talk again. Now then, get the hell out of here!\"\n\nBowing low Dempsy smiled wide, \"But of course your lordship!\" This drew another groan from Derrick. \"Sire it serves you right! Making me an officer! As if!\" With that Dempsy left to tell Greeson the news, as he thought the commander would want him to.\n\nDerrick smiled he'd already thought of Greeson as an officer anyway, after all that the man had been through. Now Greeson had to prove that he was better than Derrick thought he was. Shaking his head he thought he hoped Greeson was better. It was a fact that, that sadistic psychopath would delight in killing him in front of Dempsy!\n\nAs Dempsy walked back to the training room he had to smile more. This actually bode better for the emperor and the men. This crisis would afford him more time to train them and have them ready for the next attack.\n\n________________________________________\n\nAlexander was wringing his hands in anticipation of finally killing Derrick O'Toma. Let his bitch of an ex-wife get in his way. An evil smile crossed his lips as he thought of the life slipping from her body after a fatal blow. There was no one to save her nor would there ever be, as she'd killed them all.\n\nThey had just exited trans-warp when several alarms went off. \"What in the hell is with this racket?\" The leader growled.\n\n\"It appears that an old race that hasn't been seen for a long time is heading this way. If this information is right they are a nasty lot. LEADER sir!\" The young man shouted.\n\n\"What!!?\" Alexander growled.\n\n\"I am detecting another trans-warp reading. It appears to have been a small craft moving away from the planet.\" The young man said on his guard for an attack.\n\n\"Show me!\" The older man growled. Suddenly a smile crossed his face. So she was here as he'd thought, though it appeared that she had also detected the soon to be invading fleet. So the bitch had decided to go elsewhere while the Imperial bastards were busy. Knowing her as he did, she was doing it to keep from getting bored.\n\nDucking a blow from the leader the young man asked, \"Any orders sir?\"\n\nThe leader smiled then nodded as he pointed to a topographical map of the planet. \"I want to land as close to this area as we can. All of you understand the importance of secrecy in this operation? Failure is not an option, but death, now, is! Am I making myself understood?!\"\n\nAll the men present nodded with evil smiles. Good the leader thought they should make this interesting at least when the bastard went down.\n\n_____________________________________\n\nDerrick watched and advised all of his Captains. They were interacting far better together than he'd thought. Plus the fact that Callie's ship was almost ready helped greatly. Though not actually on board yet, the link that she was sharing was helping to make the transition easier. When she was onboard it appeared, she and her ship would be as one much like Shelby and he were.\n\n\"Derrick!\" Came Shelby's urgent voice.\n\nSuddenly snapped out of his ruminations by Shelby's urgency, Derrick asked worriedly, \"what's the matter?\"\n\n\"I can't find him Derrick; he seems to have disabled several of my internal sensors! I am not detecting him onboard at all! It appears that one of the small craft is missing also! I have notified mother but she at present has no lock on him either!\" Shelby was reporting.\n\nShaking his head Derrick knew he should have confined the man. \"Mary! Concentrate all your scans on Duke Risen's planet for any signature that matches the small craft. If you detect any problems I want you to get him out of there. Shelby contact Rayburn and \n\nKimison it appears that I am going to need another micro-shield emitter!\" Sighing Derrick could only shake his head.\n\nJoseph Hartwell's face held a grim determination, soon Risen he thought soon. As soon as I rescue my sister I am coming to end your miserable life! Looking at the micro-shield emitter he shook his head nothing could stop him now, NOTHING! Adjusting course he entered trans-warp heading for Duke Risen's planet.\n\nCaptain Callie was extremely excited; she'd been talking to her ship all day on and off. She was already familiar with the tactical displays and several systems that her ship had been showing her. Sighing she just hated that she had to wait, though she did understand that her ship wanted to be at a hundred percent before she assumed command.\n\n________________________________________\n\nSeveral hours later\n\nJoseph Hartwell moved into the shadows, he'd been moving up for an hour now. He'd almost gained entry into the palace of the Duke. Looking around he found what he'd been for, slipping in he started to scan more now that he was inside the scan screens. Hartwell nodded it appeared the Duke had more going on than anyone thought. Sweeping back and forth Hartwell stopped when a blip came up on the scanner. Nodding Hartwell cursed when he saw that she was deep within the Palace. Sighing he thought yup, about my luck.\n\nCreeping further in he looked at the scan scrambler on his belt, not a lot of time left he thought. A lot deeper than he wished to be, he finally spotted her. Damn it! She was serving that fat pig of a Duke! Growling Hartwell almost drew his weapon when she moved away straight toward him!",
        "The young woman was almost numb years of this had finally almost killed all of her instincts to run. She had at first but was always caught and punished. Rounding a corner a hand went over her mouth and an arm around her body.\n\n\"I want you to remain still, we are leaving here, I can't trust that you won't cry out so we'll stay like this for a bit.\" A voice whispered in her ear, this was a new game she thought, the sick Duke was trying to get her to escape so he could punish her more. For the next few minutes they moved further and further toward the back of the palace.\n\nHartwell breathed a sigh of relief they were almost free. Slipping outside Hartwell was about to activate the IMT when the alarms went off pressing a button on his wrist he watched as the startled girl vanished. Pressing again he heard a voice in his ear, \"unable to transport, micro-shield activated unable to pass matter through.\"\n\nCrap Hartwell thought, gonna have to fight my way out!\n\n_________________________________ \n\nSeveral Alarms were going off onboard Shelby, \"Shelby report!\" Derrick yelled above the noise.\n\n\"The Creagons have accelerated toward the Galactic rim. I estimate they will be there in two days instead of three!\" An excited Shelby told Derrick.\n\nNodding Derrick said, \"All ships this is not a drill, the Creagons have increased speed. I want all ships battle ready immediately! Captain Callie report to me at once! Thomas I want both Roderick and Tara here as soon as you can! I want battle strategy and simulations to start as soon as the information is loaded. This time I want no mistakes, no lost ships. I want these bastards to know they aren't dealing with the same empire any longer!\" Derrick looked over and saw that Mary 1 was waiting. \"Yes Mary?\"\n\n\"I wanted to inform you that I have finished all of the records.\" Mary's face suddenly held an angry look. \"I also wish to inform you that it was Duke Risen who alerted the Creagons and incited them to attack. I have already issued an alert to all sentries to arrest him on sight. I have also sent twenty of them to his planet to facilitate this.\"\n\nDerrick was nodding as he also was getting angry, then he stopped seeing a worried look on Mary's face. \"Is there more Mary?\" Derrick asked getting a little worried his self.\n\n\"Yes Sire. It appears that your second, Admiral Hartwell, is already on the planet. It is being broadcast that he stole a slave and has hidden her. The orders are to kill on sight. I am sorry Sire I am doing all I can but I am afraid that it will be a few hours before the sentries reach the planet.\" A grim faced Mary informed Derrick.\n\n\"Is there anything else?\" Derrick said noticing that Mary didn't quite seem finished.\n\n\"Yes Sire. I picked up a trans-warp signature a few minutes ago then it vanished. I believe it is the same as the ship that Trianas Macley was using. Also if I remember right she has a vendetta against all of your men and you.\" Mary Informed Derrick.\n\nDerrick nodded, \"Try to contact Joseph and let him know.\" Damn it Derrick thought when it rains it pours and it was definitely pouring right now!"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-35"
}