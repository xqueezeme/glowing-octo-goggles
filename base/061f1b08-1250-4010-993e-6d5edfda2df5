{
    "title": "Anderson Family Journals #07",
    "pages": [
        "I do not grant permission to anyone to re-post or archive my stories. If you want to download my story for personal use, be my guest, but that's as far as my permissions go.\n\nOtherwise, have fun and enjoy.\n\n<p align=\"center\">* * * * *</p>\n\n<p align=\"center\">#07 Timmy</p>\n\n<p align=\"center\">Oral Heaven</p>\n\nMonday\n\nAs I stood at the foot of Diana's bed in the early morning hours before school, after Mom had gone to work and while Abbey still slept, Dian's words from the night before echoed through my head: \"If you do a really good job of appreciating me, then maybe I'll do something special for you.\"\n\nMaybe.\n\nMaybe might not be a promise, but the implication of all the unknowns to which maybe could allude to had numbed my brain to all thoughts but one: Make your sister cum until she's begging you to stop, then maybe I'd lose my virginity to her once she had finished wiping away her tears of joy.\n\nI licked my lips as I looked down at my sister. This morning she had slept face up, in the center of her bed, her body covered by a thin satin sheet aligned perfectly crosswise below her big breasts. Those two round jugs lay balanced on her chest like teardrops yet to burst. If I stomped on the ground, would I see them ripple... like vibrations across the surface of calm water? I didn't know, but I did know that I was going to show my appreciation of my sister to my sister by sucking her peach-tinted nipples between my lips and into my mouth with a slow, methodical delight that would leave her nipples sensitive and her areoles wet.\n\nDiana looked at peace under the soft fringe of light falling on her from her bedside lamp. I almost didn't want to disturb her--almost--but the hard-on pushing against my loosest pair of basketball shorts had other ideas. I didn't say her name as I pinched her bedsheets between my fingers and pulled them down her body. They slid down slowly, baring her sun-gold tan in small fractions of length, exposing her naked breasts and their eraser thick, already hard, nipples. My mouth watered as her tits came into view, heavy and perky, upturned and tasty. Lower, I pulled her sheets as the heat within me rose, exposing the dip of my sister's navel. I licked my lips as if I could already taste the soft depression in her smooth stomach. Diana stirred when the blankets cleared her narrow waistline and the cut of her iliac crest; the sexiness of her sculpted body forced a tremor through my chest.\n\n\"You're beautiful,\" I whispered; the sound of my voice was loud in the room.\n\nDid my sister smile? I couldn't be sure; it happened so fast. I pulled the sheet lower, baring her smooth mound to my eyes. No panties. No fucking panties. My sister was a gift from Heaven. She slept with a slight part to her legs so that nothing between her thighs lay hidden. Her pussy lips pouted softly from her mound, twin bulges that folded together to protect her inner lips and the pink opening between them. The line of her clitoral hood stood out, as did the pink gem popping up from underneath that small roll of flesh.\n\nI don't know what came over me, but I pulled off my shirt, letting it fall to the floor, where my shorts and briefs quickly joined it. Would Diana get mad if she saw me naked? I didn't care. The word maybe and my sister's naked body had driven my heartbeat into overdrive and my mind into the stratosphere, but I would do as she said as soon as she opened her mouth, that I knew. Doing whatever Diana wanted me to do was the only thought that could penetrate the rush of energy surging through me. The energy that commanded me to slide my cock into her and fuck her right then, whether she wanted me to or not--that's a thought I would never act on, but it was so easy to think and so easy to believe she wouldn't get mad if I did it.\n\nMy thoughts sent shivers through my spine, the kind I'd rather not have, but it also made me look inward, where I saw Diana holding me in the palm of her hand as I waited for her to speak. I was hers and no one else's. Was this love?\n\nAnother shiver ran through me, compelling me to move onward.\n\nI dropped the blankets at the end of the bed, a cotton undersheet, and a satin oversheet. They pooled at the edge, some of the cloth spilling over in a waterfall of black and white. The mattress gave way when I placed my right knee atop it. Diana moved, her legs opening and her pelvis arching as if moving her pussy closer to me. The mattress springs absorbed my weight as I crawled forward, stopping at my sister's feet. I leaned over her, placing my right hand against her left thigh and my left against her right, and I tried to spread her legs wider.\n\nResistance.\n\nI pushed harder, facing more resistance. I looked up. There was no doubt about it; a smile now graced my sister's lips, one she was trying to straighten out but couldn't. I pushed harder on her thighs, with some real force, spreading her open for me, and that smile turned into a sigh as her muscles lost the battle against my need. She lay with her legs out, her knees slightly bent, and her pussy lips had parted as her legs had opened. A thin line of glistening pink said hello to me, coated by a glistened honey that shone wetly beneath the light of the bedside lamp.\n\nA moan escaped my lips. Hot, hungry, and horny, those three elements infused the sound I had made. My head lowered on its own, though I would have done it myself if I was capable of thinking. I acted on instinct and the desire to taste my sister's cunny upon my tongue. And a moment later, I had my mouth pressed against her pussy.\n\nDiana's hot wetness opened for me, as soft as warm pudding, and I sank right into her pink cove as deeply as my tongue could manage. Diana moaned as I pressed my face into her muff, her right hand grabbing my head, her fingers curling around the strands of my hair.\n\nI licked, and Diana uttered a soft, \"Mmm,\" tightening her fingers, hurting me in a way that made my cock and balls tingle.\n\nI licked my tongue through my sister's pussy crease again, and she moaned \"Timmy\" until my name faded from her lips like a whisper in the wind.\n\nI brought my right hand between her legs, palm skyward with my middle finger extended, the tip brushing her wet asshole. Pussy juice drenched Diana's rosebud, probably there from before I had come to her room to appreciate her. The pressure of my finger against her ass made my sister moan. She wiggled her butt against the bed, but there was nowhere for her to escape. I placed my left hand across her mound with my thumb down, pressing down on her magic button.\n\nDiana jumped as her clit squished beneath my touch. I pushed the tip of my middle finger through the rigid tightness of her anal ring--the short journey slow and agonizing as her muscles struggled and stretched, fighting the tip of my probing digit in a losing battle to protect her ass.\n\n\"Uhhhhh,\" Diana groaned as her asshole opened for me. She lifted her feet from the bed and raised her knees, pulling them back so that her feet were in the air. Her fingertips dug into my skull, but her short, manicured nails helped to keep the pain of her clawing to a minimum.\n\nStrangely, the pain made my rock-hard rod even harder.\n\nWith my thumb pressing down on my sister's clitty, and my middle finger in her ass, my sister's pussy creamed. Honey dripped from her snatch in a thick river of white liquid, lubing my finger and her asshole even more. I circled her pink jewel with my thumb and pushed my finger deeper into her butthole. She clenched her cheeks tightly against my digit, the strength of her rubbery asshole raising goosebumps along my arms and shoulders.\n\n\"Oh, you fucker,\" Diana moaned as my second knuckle slid past her anal ring. \"You fucking bastard. Did a finger in your ass feel this naughty for you too?\" My sister groaned again. \"This fucking sexy?\"\n\nI moaned into my sister's pussy, licking her gushing wet meat. To answer her, I eased the last of my middle finger into her butt, bring a long sigh from her lips. My hands were bigger than hers, my fingers longer, thicker, rougher, the grind against her sphincter nowhere near as soft as her silky fingers against mine--but her fingers probing my asshole had made me come harder than any solo jerk off session in my life ever had.\n\n\"This is already, mmm, better than I had expected it to be,\" Diana murmured, the sound of sleep fading from her voice. \"Timmy, make me come. Make me come hard. Understand?\"\n\nFuck yes, I did.\n\nI wiggled my finger in her butt, touching dark places that held so much heat I thought my finger would melt. And if her asshole could melt me, I couldn't imagine what her pussy could do to me. My sister's body had never burned this hot before. I darted my tongue into her, concentrating on tongue-fucking the pink circle of flesh leading deeper into her cunny tunnel.\n\n\"Mmm, fuck, yeah,\" Diana moaned, holding my head against her muff and grinding my face into her twat as she lifted her ass off the bed. She spun her pussy around my mouth, wetting my upper lip, my cheeks, my chin--my fucking face--doing her best to fuck herself against me while I ate her pink pie with as much skill as I could manage.\n\nThe rubbery jewel above her pussy throbbed against my thumb. I pressed down hard, squishing it against her pubic bone, but not too hard, swishing the nub of flesh side to side while curling my fingertips over her smooth mound. The finger in Diana's ass--my fucking finger up my own sister's butt!--started moving back and forth without needing my mind's consent. Diana moaned, long and low, her cries picking up speed when I rubbed her clit up and down while lapping at the sides of her wet pussyhole with my tongue.\n\n\"Umm, mmm, uh, uh-nuh-uh,\" Diana whimpered, nearly sobbing. Her legs trembled, and her fingers knotted themselves in my hair. She humped her pussy up at my face, rolling her twat against my fingers and tongue like a little whore gone wild.\n\nI loved it.\n\nI needed a third hand to fuck Diana's cunny with. A spark ignited in my head, and I switched the places of my thumb and tongue. Without warning, I fucked two fingers into my sister's steamy snatch and thrust my middle finger all the way up her little butt hole, burying my fingers deep inside of her warm guts.\n\n\"Ohhh--oh fuck!\" Diana whined. She lifted her head and shoulders, straining to look at me as her toes curled. She let go of my hair, pushed her arms between her open legs, and pulled her elbows back behind her knees, pinning her legs to the bed. Her pussy and ass tilted upwards, opening her pubis for a final three-fingered fucking between her two holes.\n\nTalk about flexible, I thought for some reason. I rose to my knees, looking down at my sister as she spread herself wide before me, looking lewd and slutty and dripping with wetness. All this for me, I thought as I pushed my two fingers into her pussy, mesmerized by her soft folds melting around my digits while I finger-fucked her butt with deep pokes. It was all heat and warmth and thick cream between my sister's legs, and I couldn't get enough of her.\n\nMy sister dropped her head. The strained look on her face as she struggled to come made my balls throb. Her pussy walls trembled around my fingers, and my sister tightened her inner cunny muscles around my probing digits--and boy was I probing her deep, getting as far into her hidden pinkness as I could.\n\n\"Fuck, oh fuck!\" Diana shouted, her eyes snapping open. She stared at me, intense, not caring that I was naked in her bed with my dick as hard as iron above her pussy. Her gaze drilled a hole of sexual anger right through me. \"Fuck--fuck Timmy, ooh! I'm going to come, little brother. That's it--oh, god, yeah--do it, make your sister come!\" She nodded her head at me, speaking so loud anyone outside her door could have heard us. A sob left her lips. Her glare turned helpless as a pink flush filled her cheeks, and Diana turned her head to the side, biting her lower lip. Her breasts heaved, her cheeks turned rosy. She swung her eyes back at me, they shimmered, and as I sunk my fingers as far into her ass and pussy as I could, Diana came.\n\nLoud doesn't describe how hard she cried--and she did cry. Tears fell from her eyes as her body trembled beneath me. She let go of her legs. They shot forward, landing sole-first on the bed, her toes digging into the mattress. Her hands clawed at her bottom sheet, rumpling and creasing the fabric. Diana stared at me, her glare a mixture of awe and defiance and so fucking sexy in a hot, \"I'm going to fuck the hell out of you for doing this to me,\" kind of way.\n\nMy cock jumped, spitting a small wad of pre-cum between my sister's legs where her spasming holes gripped my fingers as if they'd never let go.\n\nDiana took a long time to calm down after her orgasms rolled through her. Small tremors shook her body as her pussy, and asshole slowly loosened their grip on me. She dropped her head to the mattress, stretched her limbs outward, breathing in shaky lungfuls of air that made her breasts rise and fall on her chest.\n\nHer tits! I had forgotten all about my sister's tits the moment I had seen her pussy lips part when I had pushed her legs open. How could I have forgotten her tits? I fell forward over her body, my cock leading the way as my wet but clean fingers slid from her openings. I circled her breasts with my fingers, coning them. My mouth followed with open lips. I closed them around her right nipple and sucked. Diana groaned. Her hands dug into my shoulders, pushing against me, but she didn't say 'No,' and I didn't let her push me off her either. And I wouldn't, not until she told me to leave her alone. Until then, I was going to do to her whatever the hell I wanted, and she was going to have to accept that.\n\n\"God, Timmy,\" Diana groaned when I nibbled on her left nipple, not hard but firm. \"Mmm, umm, fuck, bro.\" She strained against me, really pushing against my shoulders. \"God, fuck, oh god, oh god.\"\n\nI hunched my hips upward. My pre-cum dripping knob touched the wet mess of cum between my sister's legs.\n\n\"No!\" Diana cried out, her voice hoarse. \"No, no, no!\"\n\nI stopped, but before I could pull back, she had her hands around my cock, squeezing me hard. I gasped as pleasure shot down into my balls. We shuffled around the bed, locked in a strenuous wrestling match that ended with me on my back and Diana on top of me, her pussy in my face and her mouth over my dick.\n\nDiana's mouth! It took one second for my mind to realize what this meant, what it could mean, what that maybe had meant, and then my sister's lips closed around my knob, and every ounce of air left my lungs. I sighed long enough to decompress my body of all things tangible.\n\n\"Oh god,\" I moaned, crooning the words as I stared up at the wet seam of my sister's freshly-fingered pussy. I wish that I had lifted my head to lick her crease and taste the bulging meat between her legs, but Diana's lips sinking down the length of my shaft froze me solid.\n\nDiana gagged, not even halfway down my pole. I closed my eyes, knowing that my dick was the first dick ever to enter my sister's mouth. I don't know why that was important to me, but it was.\n\nShe did her best. Whether it was a good blowjob or bad, I didn't know because I had never had one before, but I knew one thing for certain: No matter how Diana's cock-sucking skills evolved from that moment onward, no future blow job could top how much this first blowjob meant to me.\n\nAnd then I came so fucking fast I wanted to cry.\n\nFuck! I came so god damn fast, thinking my stupid thoughts, that the blowjob had ended before it had begun. The tingling sensation that pulsated through my shift hit me hard, so hard that I barely felt the light and anxious wetness of my sister's tongue skirting across the tip of my knob. My balls swelled, my sack tightened, and before I knew it, my hips bucked upwards, releasing a whoosh of cum that flooded through me and into my sister's mouth.\n\nDiana gagged at first, then she swallowed, tightening her lips around my glans and bobbing her head a few times before stopping and just swallowing as she jerked my thick cock off. God, it felt so fucking good. So fucking good. My heart hammered within my body. My chest heaved. I lost the chance to lick my sister's snatch for a second time that morning, but I'd make it up to her as soon as I could.\n\nI lay staring upward for an unknown length of time. Diana turned around and fell across my chest, her breasts crushing against my body. She kissed me several times along my jaw before sealing her lips to mine. Her tongue entered my mouth, moving across my tongue with slow licks that built a tender heat between us. I didn't want this kiss to end--I could taste our mixed juices on her tongue--and I wrapped my arms around her back as she cradled my head in her hands.\n\n\"I'm sorry,\" Diana whispered when she pulled her lips from mine. \"I want to fuck you, Timmy, so fucking bad. I do. I mean it, but not here. Not yet. But soon, I promise.\" She kissed me several times, her words coming fast and lost, almost as if she were talking to herself. \"We'll get a hotel room where we can be alone, and then I'll give you every piece of me there is to give for as long as you can take it, I swear. I promise, but not here. I'm sorry.\"\n\nWhy was my sister apologizing to me? This was great! This was better than when I had first discovered Christmas presents.\n\n\"I just want it to be special,\" Diana whispered. \"Soon, little brother, so fucking soon.\"\n\nThat worked for me.\n\nWhen I left her room, I caught Abbey in the hallway. Had she been sneaking away from Diana's door? She jumped and turned around when she knew that I had caught her. \"I just need to use the bathroom,\" she said.\n\nI told her to get ready for school then I went back to my room.\n\nAt school, before getting out of her car, Diana kissed me on the lips right in the fucking parking lot where anyone passing by could see. She had parked between two trucks and had faced a brick wall, but still, the danger was real. After the kiss, she told me that I looked good naked, and even though undressing myself had surprised her--even scared her a little--she had been too excited by what I was doing to say anything.\n\nWhat a great fucking morning.\n\nSunday\n\nSomething had changed. I still did everything Diana wanted me to do--without question, I was happy to do it--but Diana wasn't as forceful with me as she had been. My older sister smiled a lot around me. She stared at me a lot. She found reasons to share the couch with me--she didn't need reasons, but sometimes Abbey or Mom or both were in the living room with us, and then she needed a reason to lay on the couch with me or cuddle with me. Diana spent Thursday night cradled in my arms, showing me naked pictures she had taken of herself on her iPhone while our family watched TV around us. I loved it.\n\nMom noticed our closeness, but I didn't know what to make of that.\n\nAbbey spent a lot of time watching us. A lot of time. More than once, I found her already awake when I went to get her out of bed. Once, I found her standing outside Diana's door before I got there in the morning. Abbey had jumped when she saw me, but she also looked disappointed at finding me walking toward her. I'm not stupid; I knew that she had heard us on Monday, and I knew that she was trying to listen again. At least, I think that's what was going on. I'd have to tell Diana about this.\n\nRoy asked about Diana at wrestling practice. He and I had never talked much, less now that he isn't dating my sister, but he seemed relieved when I said she didn't talk about him. I've never had a girl break up with me, so I can't guess what's going on inside of his head. Diana was his loss, but my gain and I wouldn't have it any other way.",
        "And what a gain my sister was for me. From Monday night to Friday morning, when Diana and I weren't acting too friendly in front of our mother and sister, we spent our time stealing horny moments with each other. We didn't have to--we had the mornings--but there was something about being sneaky and quick with each other that we couldn't get enough of.\n\nIt started Monday night, right before dinner, at the top of the stairs. Diana caught me in the hallway, put her hand on my chest, and pushed me against the hallway wall. I let her as she smiled playfully, then she pressed her tits against my chest and rose onto her tiptoes to kiss me. As our lips met, her hands went down the front of my basketball shorts, and she jerked me off two-handed. When I went to change, she told me to leave my shorts on through dinner, so I did, hoping no one would notice the darker stain on my already dark shorts.\n\nEvery morning in her room, I'd wake her with a kiss between her legs, and sometimes she'd jerk me off, or sometimes she'd tell me to go back to my room and jerk off to her. One time, she even watched me jerk off. God, I wanted her to suck my cock--she must have known, because she'd come close to sucking my cock more than once, usually kissing my thighs or stomach, once licking my shaft from my balls to the underside of my knob, but stopping short of taking my prick into her mouth.\n\nMy older sister could be such a fucking tease.\n\nOn Wednesday, Diana wore the shortest schoolgirl skirt I had ever seen to school, minus her panties, with Abbey in the car with us. There was no way she was bending over in that pink and white checkered skirt. In the morning, after Abbey had left the car as she always did whenever she got a ride from Diana, and before our first classes, my sister made me finger her pussy in the back of the parking lot. She spread her legs, stared straight ahead through her windshield, and as I pushed and pulled my fingers from her soaking wet snatch, she gripped her steering wheel hard, her arms straining as she turned her naked butt in slow circles against the leather of her seat. When she came, she smashed her hand down on the horn, making me jump away from her silky treasure. Outside of the car, she reached into her backpack, pulled out her boyshorts like panties, and handed them to me, making me kneel in front of her and slide them up her legs until the gusset fit snugly against her wet pussy lips. What a slut, but she was my slut--my sister-slut--which made her slutty behavior okay.\n\nOn Thursday, my sister made me eat her out twice at home. The first time was downstairs on the couch. She had changed into a pair of boyshorts before dinner, and while Abbey was in the kitchen with Mom, Diana pulled her legs up, pushed her shorts and panties to her knees, then held her legs together by hugging the backs of her thighs with both arms while pulling her knees against her tits. Her pussy stared up at me, squished between her thighs, and Diana told me to make her come before dinner.\n\n\"You're not allowed to stop until I come,\" she said. \"I don't care who sees us; you can't stop until I come.\"\n\nHoly shit, but I got down there fast and made her come quick. I don't think it was my technique that made her come so quickly as much as it was Abbey and Mom on the other side of the first-floor roundabout that got her juices flowing, but flowed they did. I ate dinner with the taste of my sister's pussy in my mouth.\n\nAt night, before I went to bed, Diana came into my room dressed in a transparent, buttoned-up pajama top and matching pajama pants that rode low on her hips. I could see the outline of her legs and pussy through her pants as the light from above shined down on her. My sister took a step into my room, leaned back against the door, angling her pussy toward me. She undid the buttons on her top, threw her shirt open, showing me her tits. As I stared at her breasts, my sister pushed her pants down past her ass. Her beautifully bald pussy mound sloped toward me, then curved down into her pussy lips.\n\n\"Eat it,\" Diana said, licking her lips once as she watched me leave my bed and walk toward her.\n\nI pulled her shorts down to her ankles. She stepped out of them and spread her legs wide as I knelt between her thighs and lifted my mouth to her pussy. With her ass cheeks in my hands and my fingers in her crack, I ate my sister's pussy as she twirled her hips in a slow, sensual circle, pushing down against my mouth and tongue as I licked her meaty cunny raw. After she came in my mouth, she pulled her pants up to just beneath her pussy. She pulled me up y my hair, made me suck her tits for a little while, then she freed my rock-hard cock. After playing with my dick, Diana made me fuck her between her thighs. With my height advantage, her body weight pressed down on the top length of my dick as her thighs squeezed the rest of my shaft. When I came, my sister held my cock against her pussy lips, letting me spurt my jizz against her muff, the excess dripping into her pajama pants.\n\nDiana kissed me goodnight, saying, \"I'm going to let your cum dry on pussy while I dream of you,\" as she left my room.\n\nOn Friday night, panty-washing night, I had panties to clean, but before I could, Diana put her hands against her closet wall, sticking her butt out at me, and made me eat her out from behind. When I finished, she had me stand behind her and jerk off on her ass, telling me several times to run my knob between her warm cheeks and against her pussy lips. I wanted to slide my spongy tip right into her, but whenever I added pressure to her muff, my sister reached between her legs from the front and pushed my cock upward, teasing me with a mischievous, \"Nuh-uh.\" My legs shook so much when I came that I wrapped my arms around my sister's shoulders and fucked her ass cheeks hard, leaving her back and butt covered in my thick cum and her lungs panting.\n\n\"Reach around me,\" she huffed after, \"and make me come.\"\n\nSo I did, fingering her clit from the front as my cock stayed hard against her body.\n\nLater, while I was washing about a dozen pairs of G-strings and thongs that she had covered in cunny cream during the week, she visited me in the laundry room and dropped to her knees in front of me, sucking me off, really working my dick with an angry hunger and intense love. This blowjob lasted longer than the first one she had given me, thank god, though Diana still gagged when she tried to get to the halfway point, laughing and blushing at her failure, yet the kiss I gave her after the blowjob turned her into a red-faced girl who couldn't look me in the eyes for a few minutes.\n\nI had put a lot of effort into that kiss.\n\nI would call this strange--but only because we had never done it before--but after the blowjob, we talked about things. It was great. We talked about simple things, mostly about school, if I was happy, if she was happy. I told her about finding Abbey in the hallway, and Diana said, \"Hmm, this family needs a second brother,\" then she smiled at me and wished me goodnight.\n\nAnyway, tomorrow starts a brand new week.\n\nTimmy out.\n\n<p align=\"center\">* * * * *</p>\n\nNext time on the Anderson Family Journals, \"Before the Hotel.\"\n\nIf you've read this far, click a 5 star.\n\nComment, email, vote, etc.\n\nThanks for reading."
    ],
    "authorname": "MrHereWriting",
    "tags": [
        "brother",
        "sister",
        "triplets",
        "dick sucking",
        "pussy eating",
        "mr here",
        "short chapter",
        "dom sister",
        "slow-build",
        "mrherewriting"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/anderson-family-journals-07"
}