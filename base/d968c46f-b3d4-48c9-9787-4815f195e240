{
    "title": "Ali's Art Ch. 04",
    "pages": [
        "The summer seemed to last a long, long time and I threw myself into the hard physical labor of landscaping. Slowly July passed one long day after another, and then August arrived and I knew I would be leaving before the end of the month.\n\nReturning home in the spring, I had given $200 to Mom, telling her that I had been sending sketches to Ali and she had sold them. Mom tried to give the money back, but I knew she needed it, and told her if she didn't want it then she should use it to buy something frivolous for herself, of something nice for Sarah. Over the rest of the summer I added a little extra from the balance to my regular contribution until it was all gone, and topped it up with most of the money I had made from the Harris drawings.\n\nAs my departure came closer Mom seemed to change when she was around me, treating me like an adult instead of a teenager, trusting me with the kind of things she had never done before. We even found ourselves sitting up late one evening after Sarah had gone to bed, lazing outside in the small yard with a bottle of beer each, while she told me she didn't think she needed men any more. She said she felt content as she was, and didn't want to risk any more pain or grief. As we spoke she reached her arm out and offered her hand and I took it in mine and we sat there side by side.\n\n\"But Mom,\" I said. \"You're still young, and you're still attractive. There must be any number of men who would want to go out with you.\"\n\n\"But I don't want them, Tom. I've gotten used to it being me, and I'm happy like this.\"\n\n\"But you must have...\" I started, then stopped. I had been feeling grown up, about to fly the nest, but realized I had been about to go too far.\n\n\"Must have what, Tom?\" Mom asked.\n\n\"Nothing,\" I said.\n\n\"No Tom, it's alright, you can say what you want now, you know that.\" She squeezed my hand, still gripped in hers.\n\nI took a deep breath. \"Well, you must have needs, Mom. There's love, there's emotion, and then there's... you know...\" I felt myself redden.\n\n\"You mean sex, Tom?\" Mom said.\n\n\"I guess, yeah.\"\n\n\"That would be nice, yes,\" she said. \"But I don't need a man for that. There are... other ways.\"\n\nI looked across at her. She was staring out over the back yard, maybe deliberately avoiding my eyes, and I recalled the morning I had heard her masturbating in her room.\n\n\"I just don't like to think of you on your own, without someone around to help out,\" I said.\n\n\"I'm fine, Tom.\"\n\n\"You'll tell me if you aren't, won't you Mom?\"\n\nShe turned to look at me and smiled strangely. \"I'll make sure you know, Tom,\" she replied.\n\nThe sky darkened above us and insects began to sound. Eventually we got up, kissed goodnight and went to our rooms. As I lay in bed looking at the shadows on the ceiling I felt as if some seismic change had occurred, some hidden fault had shifted and I had moved from one place to another place, a new place. I just wasn't sure yet where that place was.\n\nAs the first week of August ended Ali called.\n\n\"Tom, can you get up here early?\"\n\n\"Um, I guess, if I need to. Why?\"\n\n\"The apartment's ready and it would be great if you could help move us in. And I want you to choose your own stuff.\"\n\n\"I can't afford much stuff, Al,\" I said.\n\n\"I can help out, you know that.\"\n\n\"I want to pay my own way,\" I said.\n\n\"And you will, Tom. You will. Can you come?\"\n\n\"I'll talk to Mom. She might not want me to leave early. I'll call you in the morning.\"\n\nBut Mom said she didn't mind me leaving before I was due. I had finished working with Dag the previous week, and had planned two weeks at home doing nothing much before I traveled north. I called Ali back and said I'd be arriving late Wednesday evening. \n\nBefore I left Mom took the three of us out for dinner. We didn't go anywhere up market, just a local restaurant, but it felt real nice to be a family for the night and we talked about things we all remembered, the good times we had shared, and didn't mention any of the hardships.\n\nWhen we got home Sarah had fallen asleep in the back of the car and I lifted her out and carried her upstairs then Mom got her into her pj's and tucked her in. I went downstairs and locked up the doors and windows. I was standing looking out at the yard when Mom came down and put her arms around me from behind and hugged me tight. I was conscious of her large breasts pressing into my back, and felt bad when I started to become aroused.\n\n\"Follow your dreams, Tom,\" Mom whispered in my ear. Her breath was warm on my neck, and she smelled good after showering and applying a tiny amount of her good perfume for our evening out.\n\nI turned round and put my arms behind her back, rested my chin on the top of her head.\n\n\"Are you going to be okay, Mom?\"\n\nI felt her nod. \"Of course.\"\n\n\"If you need anything, you know where I am. Call me.\"\n\nShe nodded again. I hugged her tighter. \"I'm going to miss you,\" I said.\n\n\"I'm going to miss you too,\" she answered, and lifted her face for a kiss. It was just the one, but her lips felt warm, and softer than I had ever felt them before, and it went on longer than any that had gone before. I felt Mom's lips part and her mouth open to me and then, before I did something I was going to regret, I pulled away.\n\nShe shivered and stepped back. \"I think I'd better go to bed. G'night, Tom.\"\n\n\"Goodnight, Mom.\"\n\nIn the morning I packed my bag and walked to the bus stop. Mom offered to drive me to the Greyhound station but I told her to stay with Sarah.\n\nSarah cried and didn't want to let me go, and I had to disentangle myself from her and sit her on a chair. I could feel tears in my own eyes as well as I kissed Mom and strode away from the house. It was turning out to be far harder than I imagined, but I closed down my feelings and made myself continue walking away.\n\nThe bus trip was long and dull, and when I arrived in New York the light had faded from the sky but Ali was there again to meet me. She stood under the street lamp in blue jeans and the same blue denim shirt with pop studs, and my heart did all kinds of strange skips and jumps in my chest.\n\nShe hugged me, kissed me and took my arm, leading me away through the night. But only as far as another bus.\n\n\"Aren't we going to your place?\" I asked.\n\n\"We are,\" she said. \"Just not my old place.\"\n\nI grinned. \"When did you move in?\"\n\n\"Now,\" she answered.\n\n\"What?\"\n\nShe lifted her hand and jingled a bunch of keys, then took two of them off and passed them to me. \"Yours,\" she said. \"We're moving in now.\"\n\n\"What about furniture, stuff like that?\"\n\n\"Fuck it,\" she said, \"We can do all that in the morning. I just want us to move in now!\"\n\nThe bus carried us through the night and deposited us half a block from our new front door.\n\nI let Ali unlock the door and we walked in to the large empty space. Ali flicked a switch and lights came on in the high ceiling.\n\nSitting alone in the center of the room, the only furniture, was her old sofa, and I burst out laughing.\n\n\"But where are you going to sleep, Al?\" I said.\n\n\"It's big enough,\" she replied.\n\nShe lifted the phone from the wall and dialled, ordered Chinese and gave our new address.\n\n\"I lied,\" she said. \"I moved the sofa in this afternoon. There's wine in the fridge. The glasses are in that big cupboard beside the window.\"\n\nI walked across the empty room, my boot heels echoing of the floor and walls, and tossed my bag into the empty bedroom we had decided was mine all those months ago. I came back out and opened the chilled bottle of Chablis and poured large measures for each of us.\n\nAli had made up the sofa with pillows at either end and a light blanket. I sat down and joined her there, passed her a glass.\n\n\"This feels so weird,\" I said, looking around at the vast space.\n\nAli smiled. \"Good weird, though, don't you think?\"\n\nI nodded and smiled back. \"Yeah, very good weird.\"\n\nAli jumped up suddenly and said, \"I almost forgot, I bought you a moving in present.\" She went across to the kitchen and pulled something from a drawer.\n\n\"There was no need, Al,\" I said.\n\n\"It's not much, but I thought it was appropriate, for the start of your college life.\" She was grinning as she handed me a square box wrapped in gift paper. \"Open it then,\" she said.\n\nI tore the side off the paper and turned the box, reading the printing on the side, and laughed and also felt myself blushing as I removed the rest of the wrapping.\n\nI held a box of 24 Durex Comfort XL condoms. \"Uh, thanks, Al.\"\n\nShe laughed and lifted on tip toes. \"I hope they're big enough. I seem to recall you're pretty large down there. And I didn't know if you'd have brought any and I thought,\" she shrugged, \"I thought you might want some - if you get lucky.\"\n\n\"Thanks Al, this is very thoughtful,\" I said, reading the rest of what was on the side. I popped the lid and looked inside at the individually wrapped rubbers.\n\nAli sat back on the couch and leant against me, jostling me until I lifted my arm and let her slip underneath.\n\n\"You probably brought your own, anyway,\" she said.\n\n\"No, I didn't. And this is really nice, Al, thanks a lot.\"\n\n\"You have - you know - gotten laid before, haven't you?\"\n\nI didn't say anything.\n\nAli twisted and looked at me. God damn, why did she have to let her breasts press into my side like that, I thought.\n\n\"You've never gotten laid?\" she said.\n\nI nodded. \"Got my bones hauled this summer,\" I said.\n\n\"Only this summer?\" Ali laughed.\n\n\"Never seemed to get the opportunity before.\"\n\n\"But last time - you just seemed so, I don't know, so mature. When Maggie gave you that boob job, we both just thought you were... experienced.\"\n\n\"Afraid not,\" I said.\n\n\"Shit - you should have said. I know plenty girls who go for men. Plenty who'd go for you.\"\n\n\"That's a bit clinical, Al.\"\n\n\"Fuck clinical, Tom. Nothing clinical about getting laid. If I'd only known back then you were a virgin I would have fixed you up.\"\n\n\"Ah well...\" I shrugged again and Al snuggled back down against me and I put my arm on her shoulder. \"It's done now.\"\n\n\"Was it good?\" Ali asked.\n\nI laughed. \"Some things are secret, Al.\"\n\n\"Not between us,\" she said.\n\nI punched her in the side with my free hand and she hit me back and we ended up slapping and hitting each other as we both roared with laughter. Eventually Ali stopped with a strange look on her face and stood up.\n\n\"I'd better get some sleep, Tom, I'm going to have a busy day tomorrow if I'm going to find you a girlfriend.\"\n\nShe stood up and went into the bathroom. When she came out she had on just a bra and panties and she scooted me off and slid under the blanket at her end. I used the bathroom and came back out in my shorts, slid in at the other end. Our legs kept touching and there was no way we were going to avoid that, so I just rolled over so my back was to her and put my head on the pillow.\n\nI lay there for a few minutes, incredibly aware of all the parts of me that were touching Ali, expecting to lie that way all night, but I must have been more tired than I thought because sleep suddenly rolled over me and I was gone.\n\nI woke the next morning to find Ali had turned away from me during the night and I had turned towards her. Now I discovered my cock was rock hard and had slipped up through the elastic waist of my shorts and lay flat against my stomach. Ali's ass was pushed back against my thighs, fortunately separated from me by the thin material of her panties, and too far down for my erection to be sticking into her. For some reason my cock tingled, as though I had been rubbing it.\n\nSlowly I straightened up and rolled over until I was facing the back of the sofa and started to breath slow and deep, practicing a yoga technique to calm myself, hoping it would work on my autonomic system and let my erection fade.\n\n\"Morning Tom,\" Ali murmured.\n\n\"Hi,\" I said. \"Been awake long?\"\n\n\"Only just,\" she said, and I felt her moving, sitting up and dropping her legs to the floor. \"Coffee?\"\n\n\"Love some.\"\n\nI heard her bare feet padding across the wooden floor and rolled over onto my back and stared at the high ceiling. The windows had no drapes yet and sunshine flooded the room, shimmering on the ceiling where it was reflecting off the distant river. I listened as Ali clattered around in the kitchen, heard the coffee start to boil and then smelled toast.\n\nAli brought a plate with slices of buttered toast and two mugs of coffee back and put it all on the floor, then sat down on the blanket, pulling her legs up under her. She was still dressed in the too large tee-shirt and tiny panties she had slept in. The tee had a wide sloppy neck and hung down off one shoulder almost to her elbow.\n\n\"I've got a busy day planned, if that's alright with you Tom?\"\n\nI nodded and mumbled, \"Sure\" around a mouthful of toast.\n\n\"We need to get furniture picked and delivered, drapes for the windows, a table and chairs for the kitchen, a desk and a couple of computers, all kinds of stuff. The rest of the bits from my old place are coming over after lunch. If we get going we can finish the shopping by noon and then get back here and sort it all out.\n\n\"I'm not going to be able to contribute much, I'm afraid, Al,\" I said. \"Money's going to be tight this year.\"\n\nAli laughed. \"No it's not.\" She got up and went across to her coat hanging beside the door, came back with another brown envelope and dropped it on my stomach. \"More sales,\" she said.\n\nI picked the envelope up and looked inside. More bills. I started to leaf through it and Ali said, \"A thousand dollars, Tom. Those drawings I did from out last session sold really well. That's only a small part of what we made. I've set $5,000 aside to get us up and running here. You okay with that?\"\n\nI shook my head in confusion, \"Whatever you say, Al.\"\n\nWe dressed and walked arm in arm to the bus stop, went into the city center and worked the shops. We made our way to JCPenney's in the Newport Center and Ali and I picked beds, mattresses, and bedding. We both chose metal bedframes. Mine was plain and functional, Ali's more feminine. Then we moved floors and chose towels, drapes, a plain timber table and chairs for the kitchen, two more sofas which made up into double beds for the living room. I tried not to look shocked when everything was rung up and I saw what the bill came to. Ali hardly blinked and paid on her credit card.\n\n\"Entertainment,\" she said as we walked away. \"D'you want to pick a TV?\"\n\n\"I don't think I'd watch one,\" I said. \"Would you?\"\n\nShe shook her head. \"Music then. Something small and stylish? And then a couple of laptops.\"\n\n\"Al,\" I said, \"How the hell are you going to afford all this?\"\n\n\"I told you, I sold some of those sketches from our last session. I've got even more I haven't finished yet. Tom, there's a huge market for this material. The money is not going to be an issue.\"\n\n\"As long as you're sure of that,\" I said.\n\nShe smiled. \"Oh, I'm sure. What are your I.T. skills like, Tom?\"\n\n\"Okay, I guess. I got an A in computer science, and I play around a bit.\"\n\n\"Could you create a website for us? What would you need?\"\n\n\"I don't know. Just a computer to start with. I'll research it and find out what else we might want.\"\n\nWe turned left, into electronics.\n\nWe carried two new Mac laptops home with us, unpacking them at the store and buying two bags for them and leaving the boxes there. It had just turned one o'clock so we grabbed burgers from MacDonald's and caught the bus home. It felt strange when I thought of that - going home.\n\nAli left me to set up the laptops while she let in the removal men and directed them where she needed the stuff from her old apartment. Fortunately Ali had ordered broadband as well with the phone connection so I sat cross-legged on the floor and googled until I found a service that would let me create an \"adult\" website. There was a thirty day free trial and then it would cost $495 a year, including payment processing and all the space we would need for our images. I wasn't entirely sure if what we were planning to offer would be classified as adult - I knew Ali considered it as erotic rather than adult, and I agreed that we weren't offering the same type of material as most sites. Ours would offer our own hand-produced drawings only.\n\nAli and I had talked about what she wanted during the morning, and she planned to sell downloadable drawings for between $5 and $25, with an option to purchase the original for anything up to $100. Once an original was bought it would be removed from the site and replaced with another original. We would also offer a service where individuals could purchase drawings that had not been shown on the website or commission work which had been specified by them. With this last option we always reserved the right to veto any requests, and made it clear that only legal material would be accepted.\n\nI signed up for the free trial and began to look at the pre-defined templates on offer. Eventually, I would probably want to create my own, but to begin with I chose a template which presented a subtle pale blue and grey look and feel. We had both decided we did not want to be garish or in your face with our offering, and were willing to sacrifice visitors to attract a more discerning clientele.\n\nAli came over and touched my shoulder and I looked up at her and winced. My back ached from being bent over the screen, and when I looked at the wall clock I realized I had been working for three hours solid.\n\n\"You can move to the desk now, Tom. But take a break first. I've made some food.\"\n\nI became aware of the aroma of fresh cooking. Ali had laid two places at our new dining table, and when I glanced around the space had been transformed without me having noticed. The two new sofas had been placed opposite Ali's old one. A new, enormous desk was pushed up against the wall. Ali had set a printer and her laptop up already, and I rose stiffly and carried mine across and plugged it in to recharge the battery.\n\nThe food was perfect, light and fragrant, and Ali poured a good Sauvignon Blanc for us both. When we had finished and cleared up, Ali took me down to the studio area and turned on the lights. She had laid out over a hundred sketches across the large floor area.\n\n\"Let's go through these and pick which ones we want to upload now, which we want to hold back, and whether there are any we can't use.\"\n\n\"Are these all of them?\" I asked.\n\nAli shook her head, \"Just the first batch. I've got three times this many but there was no room to lay them out.\"\n\nI walked along the floor, looking down at the drawings. They were good. Ali had a special talent that captured the figures - our figures, hers alone, or mine alone, and a few with Maggie and Ali and Maggie and me together - and instilled a real sense of life to them.\n\nI stopped to study a series of over a dozen which showed me during that first session, which seemed a long time ago now. A couple were standard nudes. The remainder showed me in an increasing state of arousal. Next to them were twenty that tracked the progress of my masturbation at the end of that sitting. The last ten captured my moment of release.\n\nI sensed Ali standing beside me and turned to her.\n\n\"What d'you think?\" she asked.\n\n\"Amazing.\" I said. \"But it's weird looking at a drawing of myself, particularly in that state.\"\n\n\"Does it turn you on?\" she asked.\n\nI shook my head. \"I don't know... a bit maybe, yeah. But that's because it's me. Let me see...\" I stepped along the row of drawings, walked around to a second line where Ali was shown. These looked different and I stepped back, compared them and then said, \"I drew these?\"\n\nAli nodded. \"They're the work you did here, and the ones you sent me after you went home.\"\n\nI remembered them. Ali had posted me prints of her photographs and I had hidden them under my bed. When I was alone I copied some to art paper. When I had a dozen I packaged them up and sent them to Ali. I had sent four packages in all, and then brought the original photographs back with me. They were not the kind of thing I would have wanted Mom to find.",
        "\"They're nowhere near as good as yours,\" I said.\n\nAli laughed. \"I've been doing this for way longer than you, Tom. I think they're very good. And what I also like is that they're different to mine. We need variety.\"\n\nI bent to look closely at one of her drawings. In the bottom right hand corner Ali had signed each one. She had written 'aligra' in a tiny elegant script.\n\n\"Is that how you sign them all?\" I asked, looking back up at her. She stood with her ankles and arms crossed, watching me.\n\nShe nodded. \"You should always sign your work. What are you going to put on yours?\"\n\nI laughed. \"I think tomgra sounds clunky, yeah?\"\n\nShe laughed back. \"It does a bit. Think about it. Something short, not too awkward. Even tg would be okay, but take your time.\"\n\nI sat back on my heels and rolled my shoulders. \"So what are we going to do, scan all these in and upload them?\"\n\n\"I think we should start with these and see how it goes. D'you want me to scan them?\"\n\n\"Sure. Let me know when they're ready and I'll upload them to the site. It's more or less live now. We've got credit card processing and an area for thumbnails, and people can view a full screen image if they want. I'll splash a sample watermark over them all once they're scanned.\"\n\nWe both slept in our new beds that night, and I smiled as I pulled open the drawer in my nightstand and dropped my box of condoms in. I thought I was going to lie awake a long time, thinking about what my new life was turning into, but I barely remembered my head hitting the pillows and the next thing I knew it was morning and I could hear music coming through from next door, Chilli Peppers singing about some bridge.\n\nI pulled on my jeans and went through. Ali was sitting at the desk peering at the laptop.\n\n\"What's up, girl?\" I said.\n\n\"Come here Tom, we've made our first sales.\"\n\n\"Hey,\" I said, and pulled a chair up next to her. She had the admin panel of our website open and it showed we had sold fifteen drawings in the last twelve hours. And that was overnight. We have made just over $100 dollars in ten hours. As I watched the screen refreshed and the number went up to seventeen.\n\n\"Fuck,\" Ali whispered, \"it's working, Tom, it's fucking working!\"\n\nShe turned and hugged me, and I realized she was still in her thin robe and her loose breasts flattened against my bare chest in a delightful way.\n\nWe ate breakfast and then Ali said she needed to get some exercise and was going to the local pool. She wanted to know if I was coming.\n\n\"I'm not sure if I packed my trunks, Al, and if I did I think they're pretty old.\"\n\n\"It's not the Olympics, Tom, you'll be fine. I'll race you. And I bet I can beat you as well.\"\n\n\"Yeah? We'll see about that.\" I went in search of my old speedos and discovered I had packed them.\n\nThe pool was full length, and at this time of the day on a midweek morning was quiet. I don't know why it is but guys always manage to get changed way quicker than girls, and so I was already in the pool when Ali came out. She had a one piece costume on that hugged her body tightly, cut high above her hips, and she looked stunning. She walked to the edge of the pool and dived in a single movement, surfacing a few feet away from me.\n\n\"How about that race then, Tom, or have you chickened out?\"\n\n\"No way,\" I said.\n\nWe swam to the top of the pool and turned side by side.\n\n\"Ready?\" Ali said.\n\n\"Ready,\" I nodded.\n\n\"Three - two-\"\n\n\"Hey, not fair!\" I yelled as she pushed off and I followed as quickly as I could.\n\nI hadn't swum for a while, not since leaving school, but I had been pretty good back then, and didn't think Ali had a chance of really beating me, but four lengths in I wasn't so sure. She had an effortless style that moved her rapidly and smoothly through the water, cutting its resistance, and I had to work hard to get even close to her.\n\nAs I drew near enough for her to hear I said, \"How many lengths?\"\n\n\"Ten,\" she said, hardly out of breath.\n\n\"Ten!\"\n\n\"Yeah... only ten.\" And she seemed to step up and gear and pulled away from me.\n\nI did the best I could, but as I drifted and touched the end of the pool for the tenth time Ali was leaning back against the side hardly out of breath. She had beaten me by a quarter length and there had been nothing I could do about it.\n\n\"My God, Al, where did you learn to swim like that?\"\n\n\"I've no idea,\" she laughed. \"It's just something I've always been able to do.\"\n\n\"I'm going to have to practice,\" I said.\n\nShe smiled. \"Suits me. I love swimming, love the way the water feels as it runs over my body, the way it supports me. I think I should have been a dolphin.\"\n\n\"Do dolphins have tits?\" I asked.\n\nShe slapped me on the shoulder and then looked past me as someone else drifted up to the pool side.\n\nI turned to look, trying not to make it obvious, as a slim blonde woman touched the side and stopped. She was breathing gently and smiled at us both.\n\n\"Quiet this morning, huh?\" she said, then pushed off and moved down the pool with a slow crawl.\n\nAfter she had gone far enough Ali leaned over to me, touching my shoulder with hers, and whispered, \"Is she after you or me, d'you think?\"\n\n\"Maybe she's just enjoying a swim.\"\n\n\"Nah, she's after sex,\" Ali said. \"You wouldn't believe how easy it is to get laid here if you want to.\"\n\n\"Really?\" My pool experience was more or less limited to school competitions, and I had definitely not wanted to get laid by any of the guys on my swim team.\n\n\"Let's just stay here, see what happens when she gets back.\" She pushed me away from her. \"Leave about then feet between us, Tom, and see who she ends up closer to.\"\n\nWe watched as she started back up the pool. I could see only the top of her head, short blonde hair, and slim shoulders. What I had seen when she stopped before had looked good. But what if it was me? Did I want this, so soon?\n\nThe woman stretched her arms out in front of her as she came near and drifted the last yards to touch the pool side then dropped her legs and stood up, running her hands back over her hair to squeeze the water out. It also had the effect I guess she desired in showing off her nicely shaped breasts and flat stomach. She wore a small bikini that was cut on the top to show a lot of cleavage, and on the bottom to show a lot of ass.\n\nShe turned and leaned back against the side, two thirds between Ali and I, closer to me than my cousin. I glanced across and saw Ali grinning, safe because the woman was not looking in her direction at all. Ali nodded wildly at me and made rude gripping movements with her hands.\n\n\"You swim pretty well,\" I said.\n\nThe woman looked towards me, as though just noticing me. \"Why thanks. It's really good exercise. I come here two or three times a week. Helps me keep my weight down.\" She smiled.\n\nI deliberately looked down over her body, taking in the full breasts and slim stomach. \"You're doing a pretty good job of that,\" I said.\n\n\"Why thank you.\" She smiled more widely and moved towards me a little. \"You look like you work out a bit yourself.\" Her gaze lingered on my chest, drifted down my stomach and then deliberately found my crotch. My cock had filled a little as we spoke and made my trunks looked pretty packed.\n\nI noticed her left hand and said, \"You're married. Does your husband ever come with you as well?\"\n\nShe sank down into the water, taking the opportunity to move across again. Her shoulder lightly brushed against my side.\n\n\"No - he's always too busy. And he's out of town at the moment anyway. He's often out of town.\"\n\n\"Yeah?\" I said. \"That's a shame.\" I stretched my arms out along the edge of the pool. My inner arm touched the back of her shoulders and I could feel cold wet hair against my inner elbow.\n\n\"Not really,\" she said, and she put her head back against my arm. Her drifting legs brushed against mine, moved away and then came back and stayed touching me.\n\nI saw Ali push off into the water and stroke away down the pool.\n\n\"Your girlfriend?\" The question was deliberately light.\n\n\"My cousin,\" I said. \"We're both at college here and we share an apartment.\"\n\n\"Nice girl,\" she said. \"What are you studying? Oh, I'm Alice by the way. Alice Bolton.\"\n\nI held out my hand and shook her wet one. \"I'm Tom Graham. I'm studying Art.\" I had been about to say I was just going to start studying, but I thought she might be put off if she knew I was only nineteen.\n\n\"Art, wow, great. I'm really into modern art. I've got some nice pieces at home I've built up - nothing special, but I like them.\"\n\n\"Really?\" I said, and then thought 'go for it!' \"I'd like to see them sometime.\"\n\n\"You would?\"\n\n\"Sure. I'm always interested in people's collections.\"\n\n\"Well I'm free all day if you want to come round. Unless you've got anything on.\"\n\nI opened my arms to show her. \"Do I look like I've got anything on?\"\n\nShe laughed, a touch of nervousness in there, and I felt her press against me, her right breast pushing into my side.\n\n\"Tell you what,\" I said, chancing it, \"I'll tell Ali something's come up and meet you outside in, what, ten, fifteen minutes?\"\n\n\"That would be great. I'll even make you some lunch if you want to hang around.\"\n\nI smiled and pushed off from the side, swam down to where Ali was floating at the far end.\n\nShe raised an eyebrow as I pulled up beside her. \"Well?\"\n\n\"I think I could be about to get laid,\" I said.\n\n\"I knew it. They'll be dropping like flies around you. Got your rubbers?\"\n\nI laughed. \"I actually went back before we left and put a couple in my wallet. Talk about wishful thinking, huh?\"\n\n\"Seems to have worked.\" Ali pulled herself over and kissed me on the lips. \"Be good,\" she whispered.\n\nI was standing outside fifteen minutes later when Alice came through the automatic doors dressed in a short sleeved white cotton blouse and russet colored skirt. Her legs were bare and smooth, her hair still damp as though she hadn't taken long enough to dry it.\n\nShe tripped across and kissed me on the cheek. \"Ready?\"\n\n\"Sure.\"\n\nShe led the way across to her car and I walked behind, enjoying the way her ass wiggled inside the dress. She opened the car with her remote. It was one of those small foreign sports cars and I slid down into the low seat and buckled in.\n\nAlice started the engine and entered the quiet traffic going west. She found the on ramp to the freeway and put her foot down until we were doing almost seventy, drove in silence for ten miles and then dropped down into a residential district. Five minutes later she pulled into a garage which opened automatically as we approached and closed behind us as we entered.\n\nI had been watching her legs as she drove, the skirt riding up on her thighs, enjoying the slim tautness of them. I was hard in my pants and made no move to hide the bulge there, and once or twice caught Alice glancing down at it. The inside of the small car was ripe with the scents of both our arousal, and I wondered how long it was going to take.\n\nAs it turned out, it took no time at all.\n\nAs Alice turned off the engine she turned towards me and I leaned over and kissed her mouth. She opened her lips and my tongue entered her mouth and hers came back to meet it. I put a hand over her breast and squeezed and she kissed me harder then pulled away.\n\n\"Come inside,\" she said breathlessly and I climbed out and followed her.\n\nAs we entered her kitchen through the side entrance I came up behind her and slid both hands around to cup her breasts, pressed my hard cock against her firm ass and kissed her on the neck. She wriggled back against me and I dropped one hand and lifted her skirt, pushed in through the side of her tiny panties and found her wet pussy. She was soaking and groaned as my fingers dipped into her.\n\n\"Upstairs,\" she said, \"Let's go upstairs.\"\n\nI kissed her earlobe and said, \"Don't you want to show me your paintings first?\"\n\n\"Fuck the paintings,\" she said.\n\n\"Yeah,\" I said. \"I'd rather fuck you instead.\"\n\n\"Oh God yes, Tom, fuck me!\" She took my hand and led me through to a wide hallway, up the stairs and I took the opportunity to push my hand up inside her skirt and squeeze her ass and she slapped me away and drew me into the bedroom, slamming the door behind us.\n\nShe dropped to her knees in front of me and twisted the button at my waistband and then slid my zipper down, pushed her hands inside my pants and tugged them down. My cock was forming an enormous tent in my shorts and where the head pressed a large damp stain had grown.\n\nAlice ran her hands over it through the cotton, then tugged at my shorts and freed my cock. It jerked upwards above vertical, hard and stiff, the head large and purple. Alice gripped it in her small hand and stroked me from base to tip.\n\n\"God Tom, you're fucking enormous. I've never seen a cock as big as yours.\"\n\nThere wasn't really much I could say to that, so I just kept quiet as she stroke me some more and then dropped her head and licked my glans. When her tongue had wet all around me she popped me into her mouth and started to suck me deep inside. She was not as adept as Jenni had been and could only take a little over half my length, but her mouth was warm and tight and her tongue very willing. I rocked my hips, fucking her mouth, and keeping my magic muscle clamped down hard to stop myself shooting into her immediately.\n\nEventually she popped me out and licked my balls and I took her under the arms and lifted her up and pushed her back onto the bed. Her skirt rode up and I followed it, pushing it up over her hips to reveal her tiny panties which were now completely transparent where she had leaked against them. I grabbed them and tugged them down, slid them off her legs and dropped them, then went back up and pushed my tongue straight inside her pussy. She gasped and opened her legs wide, lifting them onto my shoulders and I pushed deeper with my tongue. Her outer labia was shaved or waxed, above she had left a neatly trimmed triangle. \n\nI let my saliva drip onto her already soaking pussy, pushed my tongue inside her, worked it over her inner and outer lips, sucked on the hard nub of her clitoris and kept working her without mercy until she started to shake and then she cried out and I pushed hard into her with my tongue as she climaxed. She continued jerking against my face for a minute and then relaxed back with a huge sigh.\n\n\"That was amazing, Tom. You really know what you're doing, don't you?\"\n\nI smiled and said nothing. If only she knew.\n\nI pulled my tee shirt over my head and moved up to straddle her chest and let her know I wanted my cock in her mouth again. She opened her lips and I slid myself inside, leant forward on my arms and began to steadily fuck her mouth. I was still on the point of cumming, still on the point of holding it back, enjoying the violation of Alice.\n\nWhen I almost reached the point of not being able to hold back any more I pulled myself out of her mouth and unbuttoned her blouse. She wriggled out of it and unclipped her bra herself and lay back down, now fully naked. She had a good body, high firm breasts with large dark nipples.\n\n\"I'm going to fuck you now, Alice,\" I said.\n\n\"Mm, yes please.\"\n\n\"Tell me how you like being fucked. Tell me what you want me to do.\"\n\nShe smiled.\n\n\"You can tell me anything you want, Alice. I'm here to please you, no-one else. Tell me how you really like to be fucked.\"\n\nHer smile grew wider and she rolled over and got onto her knees.\n\n\"Fuck me like this, Tom,\" she said. \"Stick your cock inside my pussy.\"\n\nI leaned back and pulled my wallet out of my pants and took one of the wrapped condoms out.\n\nAlice looked at it and said, \"I'm on the pill, you don't need that.\"\n\n\"You sure? You trust me to be safe?\"\n\n\"I want your naked cock in my cunt, Tom. Fuck me hard in my cunt.\" She was getting off on talking dirty to me, getting off on letting me know what she wanted.\n\nI dropped the unwrapped condom and positioned myself between her legs. She had a gorgeous ass and before I did any more I leaned down and ran my tongue right up along the valley between her cheeks, right over her asshole and she squealed and jumped.\n\nThen I straightened up and pushed the head of my cock onto her pussy lips and she put her head down and lifted her ass and I pressed again and slid inside her.\n\n\"Fuck me Tom,\" she muttered into the pillow, \"Fuck my tight cunt with that big cock.\"\n\nAnd she was tight. I had to push hard to get inside, but she was so slick with her own juices there was plenty of lubrication and I forced myself deeper, pushed until I could go no further, bumping up inside her. She moaned and lifted her hips higher and I gripped her hard hips bones and began to thrust in and out, working hard and quickly, filling her with my hardness.\n\nAlice began to make harsh grunting noises each time I pushed forward and I sensed she was close to cumming a second time and I speeded my rhythm, pounding into her as she grew louder, filling her completely on each stroke until she shouted \"Fuck!\" once very loudly and spasmed underneath me, shaking and crying out unintelligibly and then slowly collapsing onto her stomach with my cock still buried deep in her pussy.\n\nShe was breathing hard underneath me and I took a little mercy and stopped moving as her back heaved. Sweat had popped out over her back and I licked it off with my tongue.\n\n\"You're a fucking animal,\" she said. \"How the fuck have you not cum yet?\" She tried to roll around to look at me but couldn't move far with my weight still on her ass.\n\n\"D'you want me to cum, Alice?\" I asked.\n\nShe nodded. \"I want you to cum.\"\n\n\"Where, Alice?\"\n\n\"Tell me, Tom. Tell me where you want to cum. Anywhere except my ass.\"\n\nShame, I thought, then said, \"On your face.\"\n\n\"I'd like that,\" she said, and twisted again and this time I slid back out of her and she rolled over. I climbed back along her, knees under her arms, cock against her chin and I let her hold me and pop me just inside her lips.\n\nI leaned against the bedhead and took my weight on my arms and toes and began to fuck her mouth. This time I was ready and released that tiny muscle and instantly felt my balls tighten up. I was almost on the point of no return now and pushed my cock deeper between her lips until she started to gag and pushed against my chest and I drew back and pulled out of her mouth and sat back. Alice put both hands around my cock and began to rub me hard. I looked down and watched, this pretty blonde woman, her tits pressed down under my thighs, her face flushed and streaked with sweat, her hands a blur on my cock, and let myself go.\n\nThe juices pooled and boiled and I shot an enormous rope of semen out as I gave a loud grunt. It soared over Alice, missing her completely, and splashed on the wooden headboard. Alice tried to guide me, opening her mouth and pointing me towards her and my second stream shot directly between her lips and filled her mouth, then more came and it splashed on her face covering her from forehead to chin, more splashed on her nose and ear, another smaller jet that splashed her neck, a final one that dripped down into the valley of her cleavage.\n\nShe continued to rub me more slowly now, squeezing the last drops from me, and then lifted herself and sucked me inside her mouth again, sucking the final drops from my cock.\n\nI sank back on my heels and then rolled away, lay spent on the bed and watched as she spread my cum over her face and neck and breasts with her fingers.\n\nI rolled back and kissed her on the mouth, tasting my own cum on her lips and not being disgusted, in fact getting a little more aroused.\n\n\"That was amazing,\" I said.\n\nShe pushed me back and then rolled on top of me, kissed me back. \"You were amazing,\" she said.\n\n\"We were amazing,\" I said, and we both laughed.\n\nShe was as good as her word, making me lunch, which we ate in the kitchen without getting dressed, and then afterwards we fucked again and this time I let myself cum inside her.",
        "We showered together and got carried away and I fucked her from behind standing up in the shower and then after I was dressed she walked me to the door in her housecoat and kissed me. Outside the day was starting to fade but the pink clouds reflected light down into the streets.\n\nAt the door Alice said, \"Tom, that was truly wonderful. But I don't want you to think I make a habit out of this kind of thing. And I don't want you to think that you owe me anything.\"\n\nI smiled. \"I'm cool,\" I said. \"If you see me at the pool, and you want a repeat, just let me know. Otherwise, I'm cool.\" I repeated.\n\n\"Thanks,\" she said, then for no apparent reason added, \"My husband's not a bad man, and I do love him, but he's not very exciting in bed, and sometimes I just need to - well, you know.\"\n\n\"There's nothing wrong with that,\" I said. \"You're a beautiful woman. You've got needs.\"\n\n\"Hm,\" she said.\n\nI kissed her again and went out through the door, expecting never to meet Alice again, and I was right.\n\nI walked down the road to a bus stop and made my way back to the apartment and went through to the studio and began to sketch out some of the images I had stored away in my head.\n\nAfter a while I heard Ali come in and she was with someone, their voices low. I stayed where I was and continued working. When I finally straightened up and eased my back muscles Ali and whoever she was with had gone to bed. The clock said 2 a.m. and I staggered through to my own room and collapsed on top of the covers.\n\nI was woken some time the following morning by Ali shaking me. I rolled over still fully dressed and stared blearily at her sitting on the side of my bed. She looked like she had only just risen herself and was dressed in her cream robe. A fresh mug of coffee steamed in her hand and another sat on the nightstand.\n\n\"Morning Al,\" I mumbled.\n\n\"Well?\" she said, raising her eyebrows.\n\n\"What?\"\n\nShe put her coffee down and then thumped me on the chest. \"Did you get laid?\"\n\n\"Oh, that. Yeah, of course I did.\"\n\nA big grin formed on her face. \"You dog!\" she said.\n\n\"Yeah, we did doggy too.\"\n\nShe punched me again, this time harder and I slapped her back. She punched he on the shoulder and I grabbed her and rolled her over me. She might be fast in the pool but in a trial of strength I had her beat every time. I held her down and straddled her with my legs, holding her arms tight to her sides with her knees, and then started to slap her on the shoulders.\n\nShe wriggled madly and I gripped her tighter and as she wriggled some more, laughing, her robe got tangled and fell open and I found myself sitting on her naked breasts. I rolled off and sat back against my pillows. Ali stayed where she was, still laughing, and made no sudden move to cover herself up. I guessed she thought I had already seen it all and there was not much point. It still aroused me though and I tugged at my shorts to ease my cock.\n\nAli watched me and grinned. \"Getting you hot there, cousin?\" she laughed.\n\n\"Nothing to do with you, I don't go for dykes, you know that.\"\n\n\"Oh yeah, of course, I was forgetting. So these don't do anything for you then?\" She cupped her stunning boobs in her palms and jiggled them. I stared at her, taking pleasure in the way they shook and danced.\n\n\"Not a thing,\" I said. \"Maybe you ought to go and show them to your girlfriend next door.\"\n\nShe cackled. \"I might just go and do that. At least she'd appreciate them.\" She removed her hands and pulled her robe closed. \"But seriously, Tom, you did get laid, yeah?\"\n\nI nodded.\n\n\"It was good? What was she like?\"\n\n\"You want the details?\"\n\nAli shrugged. \"Curious, that's all. If you don't want to tell me that's fine.\" She made a show of pouting.\n\n\"I did some drawings when I came in. You can see what it was like from them.\"\n\n\"Really? Hang on.\" She bounced up off the bed and ran through. A minute later she came back shuffling she sheets of art paper and plopped down beside me again. That damn robe floated up and exposed most of her thighs as she lay back against my pillows, elbowing me aside to give her space. If it rose much more her pussy would be in clear view.\n\nAli started to work through the ten sketches I had done, nodding, spending a couple of minutes on each one. When she had finished she said, \"Wow, she's hot, isn't she?\"\n\n\"Nice body,\" I said.\n\n\"Nice ass, nice tits,\" Ali said. \"Nice pussy too. Were her pussy lips really as plump as that?\"\n\n\"Slight exaggeration,\" I said. \"But she was really tight.\"\n\nAli laughed. \"She would be. That's some equipment you've got down there, Tom. I don't think you realize what a weapon you've got.\"\n\n\"I'm learning though,\" I said.\n\n\"She liked it from behind, did she?\" Ali asked.\n\n\"Begged me for it,\" I said. \n\n\"And this one,\" Ali showed me my sketch where I straddled Alice's breasts. I had drawn it as I ejaculated directly into her mouth, artistic licence allowing me to show my cum sliding from her lips and falling onto her chest.\n\n\"I made her do that,\" I said, \"She didn't want to but I thought she deserved it.\"\n\n\"Bastard,\" Ali said.\n\n\"I know,\" I said.\n\n\"You going to see her again?\"\n\n\"I doubt it. She was just horny and I was what she used to scratch the itch. Not that I'm complaining.\"\n\n\"Good sketches,\" Ali said. \"I think we'll upload these later on.\"\n\nWe both heard the sound of footsteps in the living room and Ali called out, \"In here, Flis!\"\n\nA tall black girl pushed the door open and looked in, then jumped back when she realized I was in there. She was naked and lifted a hand to her large breasts, dropped another to cover her pussy.\n\n\"It's okay,\" Ali said, \"Tom's an artist, he's seen it all, and anyway he's not into girls.\" She nudged me with her elbow.\n\n\"He might have seen it all, but he ain't seen mine,\" the girl said.\n\nAli sighed and pulled herself up, wriggled the robe back down so it fell to above her knees. \"I'll come through now. Coffee?\"\n\n\"No, I've got to run. Had a call, my boss needs me to pull an extra shift, so I'll see you, yeah?,\" Flis said.\n\nAli walked across to her, put her arm on her shoulder and they went out. I could hear their voices as they went into Ali's bedroom. Five minutes later Flis, fully dressed, passed the door, Ali behind her. More muttered conversation, then our apartment door closing and Ali came back and pushed me across and sat on my bed, ankles crossed, as though that was where she belonged.\n\n\"Everything OK?\" I asked.\n\n\"Don't think I'll be seeing her again,\" Ali said.\n\n\"Shame. She seemed nice.\"\n\nAli looked at me and poked her tongue out. \"Just because she had huge tits, she looked nice?\"\n\nI shrugged. \"It's a start. What was she like?\"\n\nAli laughed. \"Huge tits. Nice ass. Lousy fuck.\"\n\n\"Really?\"\n\n\"Like a plank of wood. Didn't even make me cum.\"\n\n\"What about her?\"\n\nAli turned her head and looked at me. \"No details,\" she said.\n\n\"I was only curious,\" I said.\n\n\"I bet.\" Ali wriggled down the bed a bit, pulled at my sheet and pushed her legs down underneath it. \"I was hoping for a second chance this morning though. God, she's left me fucking horny!\"\n\nI laughed. \"Well, I can't help out there, I'm afraid.\"\n\nAli gave me a funny look. \"Guess not.\" She continued to look at me, studying my chest and shoulders, glancing down at my belly. The sheet had pulled down around my waist as she tried to get underneath it, still hiding my cock which was still heavy from earlier thoughts.\n\n\"What?\" I said, self conscious at her study.\n\n\"I'm just trying to see what these women see in you, Tom.\" She continued looking, looking hard.\n\n\"I've probably got that covered,\" I said, joking.\n\n\"No - I've seen that. Can't be that they like. But...\" she reached her hand out towards me, stopped with her fingers a couple of inches away from my chest. \"Can I touch you? Is that OK?\"\n\n\"If you want,\" I said.\n\nShe extended her reach, put her palm flat against my chest. If I'd been a girl she would be holding my right breast. Her skin felt warm against mine. She left her hand where it was for half a minute, then moved it, gently feeling the muscles under my skin, tracing the lines around my chest and up to my shoulder.\n\n\"I don't think I've ever seen a man with such a great body, Tom. Do you even know what you look like? What you feel like?\"\n\nI shrugged, momentarily dislodging her hand but she immediately put it back against the curve of my shoulder.\n\n\"I was always weedy, Al. All through High School I was the nerdy one, the geek. I guess I've bulked up a bit working last year, that's all it is.\"\n\n\"Genetics,\" she said, continuing to stroke my skin. Her touch was fairly firm and I could feel her pressing and probing, finding the underlying musculature and bones. \"You Mom's got good genes. She's hot. Well, I think she's hot.\"\n\n\"She's OK, I guess.\"\n\nAli shook her head, pushing her fingers in around my collarbone, tracing how it ran. \"No, she's more than OK. She's hot. I'd fuck her, I can tell you that.\"\n\n\"Al!\" I said, shocked, at the same time wondering if I was being hypocritical. I could have probably fucked my mother at the end of summer. I knew I had wanted to.\n\n\"What? Can't a girl fantasize? She's a babe. I'd love to fuck her.\"\n\n\"She's your aunt,\" I said.\n\nAli looked suddenly serious. \"I can tell you anything, can't I, Tom?\"\n\nI looked back at her. \"Of course you can, Al.\"\n\nShe nodded, as though she knew that all along. \"I used to have a real crush on your Mom.\"\n\n\"You did?\" I swallowed, fascinated and turned on.\n\n\"God yeah. How old was I when I went back home? Twelve? I was just coming into puberty, and my hormones were in overdrive, and I thought your Mom was the most gorgeous creature walking the earth.\" Her face had gone dreamy as she relived those times. \"I used to try and cop a look every chance I got. You know your Mom, she's not worried about showing herself too much. I used to see her in the bath. Sometimes we'd talk for ages when she was in the bath, and I always managed to get a good look. She's got great tits, your Mom.\"\n\n\"Really,\" I said.\n\nAli laughed softly. \"You never noticed? Great tits. World class tits. Are they still as good? I've not seen her for... what, four years now?\"\n\nI nodded. \"I guess.\"\n\n\"Still good? Thought so. Then when I went back home I missed her like mad. Used to write her love letters. Never sent them, of course, but for a twelve, thirteen year old they were pretty steamy I can tell you. I used to look forward to the summer when you all came out to visit.\"\n\n\"I thought you looked forward to seeing me,\" I said.\n\n\"Oh I did, Tom, really I did,\" she reached down, took my hand and held it in her, lifting it to her breast. The back of my hand rested against the round curve, and I don't think she realized what she was doing.\n\n\"It's OK, Al, I understand. Sex conquers all, yeah?\"\n\nShe glanced at me and nodded. \"I guess.\"\n\n\"Was that when you knew you were gay?\" I asked.\n\n\"I think so.\"\n\n\"You used to fantasize... about you and Mom?\"\n\nAli nodded.\n\n\"Hot stuff?\"\n\nShe nodded again. \"Pretty hot, yeah.\"\n\n\"You were growing up,\" I said.\n\nShe nodded a third time. \"Oh yeah...\" and sighed, then said, \"But I did look forward to seeing you too, Tom, really I did. We'd been so close, closer than I'd ever been to anyone. We still are, I think, aren't we?\"\n\n\"I like to think so,\" I said.\n\n\"We are,\" Ali said with certainty. \"I used to look forward to you both coming. Used to enjoy seeing how much I could tease you.\"\n\n\"Tease me?\"\n\nShe laughed. \"I knew you were looking at my boobs, Tom. D'you think I didn't know that?\"\n\n\"Me? Looking at your boobs? I don't know what you're talking about.\"\n\nShe laughed harder, rolling up, then suddenly pulled her robe open to reveal her perfect breasts. \"There you go, Tom. Still fascinated?\"\n\n\"Seen 'em already,\" I said, feigning indifference.\n\n\"Oh yeah, of course. Once is enough, I guess,\" and she covered herself up again. Instead of slipping under the covers again she turned on her side and put her palm back on my chest.\n\nI stared at her. She was feeling under the pads of muscles on my chest, finding my ribs underneath and tracing them.\n\n\"You've never touched them though, have you? I know you want to fuck me.\"\n\nMy heart suddenly fluttered, and I wondered if Ali could feel it racing under her palm.\n\n\"But I'm not going to,\" I said. \"I like you too much.\" I almost said love you too much, but something stopped me.\n\n\"I like you to, Tom. I like our relationship, like I can tease you.\"\n\n\"I don't want things to change, Al,\" I said, serious now.\n\n\"I know. And they won't. But a girl can play, can't she?\" And she gave a wicked grin and said. \"Lie down and let me finish studying you, Tom. I'm really enjoying this. I've never touched a man like this before, I'm finding all kind of things out about your anatomy.\"\n\nI stayed where I was, frozen. Ali's fingers had reached the top of my stomach. She moved suddenly, throwing the sheet back and then grabbing my ankles and pulling me hard so I slid down the bed to lie on my back. My shorts rode up around my balls. My almost fully erect cock showing clearly through the thin cotton.\n\nAli looked at the bulge and sighed. \"You do get turned on a lot, don't you, Tom?\"\n\n\"I'm not the only one who's got good genes, Al. What do you expect?\"\n\nShe laughed softly. \"You don't mind my games, do you, Tom?\"\n\n\"Do I look like I mind?\"\n\n\"Does it frustrate you?\"\n\nI nodded. \"But in a good kind of way. I like the... the tension.\"\n\n\"Know what you mean,\" she said, then, \"Can I take these off? I need to study you. Purely scientific.\"\n\n\"You're the doctor,\" I said, and she slipped her fingers into the waistband of my shorts and tugged them down.\n\nI was determined not to help, and lay where I was as she pulled hard, trying to work them down as they caught under my ass.\n\n\"Help me here, Tom,\" she said. My pubic hair was now exposed, a faint arc of the base of my cock, pushed down by my shorts.\n\n\"Why?\"\n\nShe gave me a look that could have burned toast and sighed. She pushed me with her hand, rolling me sideways, tugging my shorts down, then rolled me the other way and they slid down onto my thighs. My cock was bent down and trapped, but my shorts were loose now and she grabbed them and tugged them off my ankles. My cock slapped free onto my belly and Ali laughed and watched it quivering.\n\n\"That always fascinates me,\" she said. \"I've never been turned on by a cock before, but you're something else.\"\n\n\"My cock turns you on?\" I teased.\n\n\"I didn't say that. I said it was fascinating.\"\n\n\"That's OK then.\"\n\nAli sat on her heels on the end of the bed, her robe tugged and pulled, displaying most of one long thigh, the upper curve of her left breast.\n\nShe put her hands around my ankle and lifted my foot, started to probe my toes with her fingers, wiggling them, feeling in between, finding the bones and joints. There was a look of complete concentration on her beautiful face and I lay there watching her, the way her long russet hair curled over her shoulders, the way her full mouth was tweaked to one side as she studied me. \n\nSo clinical was her attention that it became asexual, and as she moved along my foot, tracing the lines of bones there, my cock began to soften. How the hell that happened I have no idea, but I saw it lose its rigidity and ease down onto my belly where it lay, still half engorged, occasionally twitching.\n\nAli reached my ankle bones, then worked up my shin. She wobbled the patella in my knees, felt around underneath and then moved to my thighs.\n\n\"You've got a lot of muscle, Tom, but it's not bulky, is it.\"\n\n\"You tell me, you're doing the examination.\"\n\nShe laughed. \"Trust me, it's not. You're not like a woman, but you're not a jock either. You're more like a dancer.\"\n\n\"Except I'm not gay,\" I said.\n\n\"Oh, letting your preconceptions show now. Not all male dancers are gay.\"\n\n\"OK. Just most of them?\"\n\nShe shrugged. \"Maybe most of them.\"\n\nShe reached my hips, deliberately, it seemed, avoiding what lay between my legs, and kneaded her fingers against the jutting bones, probing in hard to find where muscle joined. I jumped as she dug her fingers in too far and she whispered, \"Sorry.\"\n\nThen she moved over to my belly, lightly traced the blocks of muscle and I saw her move her fingers, counting.\n\n\"Six pack?\" she said.\n\n\"I've never noticed.\"\n\nShe put her fingers on each muscle ridge and counted again. \"Yeah, six pack. I guess it's the way the muscles are made.\"\n\nShe put her fingertip inside my navel and wriggled it around, then continued up, looking at my ribs again. As she moved up she placed one knee in between my thighs, the other against my hip. The silk material of her robe brushed against my skin and I felt my cock stiffen again.\n\nAli spent two minutes on my chest, feeling where the muscle lay, finding its thickness and extent. She touched my nipples and I saw them harden under her fingers and she laughed.\n\n\"Not just girls that happens to, then,\" she said.\n\n\"Seems not.\"\n\nShe traced around them and the feeling was exquisite.\n\nFinally she moved away, followed my neck to my jawline, pushed my head one way then the other, gripped my chin and rocked it from side to side, studying the way my joints moved and muscles stretched. Then she moved back to my hands and worked her way up my arm, lifting each one in turn and studying beneath them. She tugged lightly at the patches of hair growing in my underarms.\n\n\"Why don't men shave under here, but always expect a woman to?\" she asked.\n\n\"Never thought about it. You could let yours grow if you want to.\"\n\n\"Yuck,\" Ali said. \"No way! Would you shave under your arms?\"\n\n\"Don't see why not,\" I said. \"Never occurred to me.\"\n\nShe bent down and parted the sparse hair under there, looking at the skin beneath.\n\n\"It would look good with bare skin,\" she said softly.\n\n\"OK then, I'll do it for you,\" I said.\n\nShe glanced up, grinned. \"No. I'll do it for you. Hang on,\" and she bounced off the bed and went into the bathroom between our rooms, came back in a moment with my razor, shaving bowl and brush and a small scissors.\n\n\"Arms up,\" she said, and I looked at her and lifted both arms so they were exposed.\n\nAli climbed back on the bed, resumed her position, her left knee resting high up on my thigh. She clipped away the bulk of the hair with the scissors, then she lathered up the brush and worked on each armpit in turn, scraping with the razor, wiping the hair away as it gathered. She took almost five minutes on each armpit, and when she was finished she ran the razor one last time over the bare skin and sat back. Her ass lay against my knee her bare skin separated only by the silk.\n\nShe leaned back forward, putting the razor on the nightstand, and ran her fingers over my newly exposed skin.\n\n\"That's nice,\" she said.\n\n\"Glad you approve.\"\n\nShe nodded, sat back and looked at me. \"You're not very hairy, really, are you?\" she said, putting a hand on my chest where the skin was smooth. A few hairs curled around my nipples, but my belly was clear. My pubic hair formed a thinning line towards my navel and then stopped. Ali traced it, running her fingers down but stopping before she reached my cock. I could see her thinking, and thought I knew what about, but then she jumped up and pushed me hard.\n\n\"Haven't done your back yet,\" she said, and rolled me over.\n\nShe started at my feet again, working up, reached my ass and traced the muscle there, digging her fingers deep, moved to my waist, my spine, my shoulders. As she reached the back on my neck she was straddling me, leaning forward and I could feel the loose peaks of her breasts pressing and dancing on my back. She rocked my head again, two fingers on my spine, feeling the way it moved.\n\nThen she moved back down, slid a hand inside my thigh and pulled my leg aside, tugged it again, parting my thighs and opening the crack of my ass.",
        "\"I thought I'd save the best for last,\" Ali said.\n\n\"What?\"\n\n\"You didn't think I was going to avoid down here, did you?\" she said.\n\n\"I was wondering,\" I said. Then, \"Al, can I do this to you afterwards?\"\n\n\"Sure,\" she said, casually.\n\nShe sat on my ankles and I felt her fingertips on my ass cheeks. She pulled them apart and air brushed against my asshole and I felt myself pucker.\n\n\"Nice clean ass,\" Ali said.\n\n\"Oh good.\"\n\n\"You're hairy along here though,\" she said, and ran her finger directly down along the crack of my ass, letting her finger brush over my asshole and then drift to the back of my balls. She reached up and retrieved the razor and I felt her sliding it against the inner crack of my ass. A couple of minutes later she said, \"Better.\"\n\nThen she put her finger directly on my asshole, not pressing, just letting it lie there. She wriggled it, let it lay. A minute passed.\n\n\"What's it like when I touch you there, Tom?\"\n\nI shrugged.\n\nShe leaned over, pressing her breasts to my back again so her head was close to mine. \"Truth, Tom, I want to know.\" She sat back, put her fingertip back on my asshole.\n\nI lay for a while, thinking about it, then said, \"Feels good, Al.\"\n\n\"Yeah?\"\n\nI nodded.\n\n\"I know I like having my ass touched. It's incredibly sensitive, one of my major erogenous zones. Maybe you're the same. We are related, after all.\"\n\n\"You hadn't forgotten then?\" I said.\n\n\"Forgotten?\" Ali said, then realized what I meant and laughed. \"D'you think this is inappropriate behaviour for first cousins, Tom?\"\n\n\"Probably.\"\n\n\"Shall we stop?\"\n\n\"D'you want to stop?\"\n\n\"No.\"\n\n\"Then let's not.\"\n\nAli finally moved her finger off my asshole, but the exquisite torture continued as she slid it down to my balls.\n\n\"Kneel, Tom,\" she said, and I obeyed, lifting myself up, resting my head on my arms on the bed. My balls hung down in front of her, completely exposed, and I felt her hand wrap around them, weigh them, then her fingers start to trace where they merged into my thighs, the sensitive area between their base and my asshole. I twitched and jerked as she found a couple of particularly sensitive spots and heard her laugh.\n\n\"OK, all done here. Turn over and lie down.\"\n\nI obeyed and she put her hand around my cock. I was rock hard again. She pushed me to one side, back the other, pushed me down against my thigh and looked at the base, brushed my pubic hair back to see where my cock merged into my belly. Then she lifted it up, pulled the foreskin hard back to expose my glans and studied that. She put her fingertip against my urethra, pushed it inside, seeing how far it would go and when she pulled back a string of pre-cum joined her fingertip to my cock.\n\n\"Getting a little excited?\" she murmured.\n\n\"What do you expect?\"\n\nShe laughed. \"God, I do love teasing you, Tom. I know it's not fair, but I love it!\"\n\n\"Carry on,\" I said. \"I'm getting used to it myself.\"\n\nShe laughed again. \"I'll make you cum afterwards, promise.\"\n\n\"If you keep playing around like this Al, it might be sooner than that.\"\n\nShe traced down the underside of my cock, fascinated by the prominent ridge running its full length, examined where my cock merged into my balls.\n\n\"You still shave your balls,\" she said.\n\n\"Not for a few days,\" I said.\n\nShe looked more closely. \"Yeah, it's starting to grow out again a bit. Want me to tidy it up?\"\n\n\"Sure.\"\n\nShe looked up at me and said, \"The rest as well?\"\n\nI looked back, then nodded. \"If you want to.\"\n\nShe grinned. \"I want.\"\n\nShe rolled off the bed again, went into the bathroom and came back with fresh water and a damp flannel. She climbed back on, grabbed the scissors and pulled up a tuft of pubic hair, glanced up at me once and then snipped it off. She worked slowly, removing as much hair as she could with the scissors, then she shook the shaving brush and soaped it up and began to work it in. It felt good as she rubbed the slick foam into me, over my lower belly, around the base of my cock, over my balls.\n\nThen she took the razor and started stroking away the remains of my pubic hair. Again she worked slowly, carefully, pushing my cock aside to get at the base, lifting it to reach my balls, parting my thighs to get the last pieces of hair, pulling at my ball sac to tighten it and running the razor over me.\n\nIt took almost twenty exquisite minutes, then she went back to the bathroom, wrung out the flannel and wiped me clean.\n\nShe stared hard, ran the razor over a couple of places she had missed.\n\n\"What d'you think, Tom?\" she asked.\n\nI looked down, not used to the sight of my cock nakedly jutting from a smooth belly.\n\n\"Like it?\" she asked.\n\n\"Might take some getting used to,\" I said.\n\n\"I like it,\" she said. \"I can see you completely now. Why should it only be us girls have to shave down there? Not fair.\"\n\n\"I'm all for fairness,\" I said.\n\n\"Me too. Your turn.\" Ali stepped off the bed and tugged at the tie of her robe, opened it and let it drop off her shoulders, came back onto the bed and lay on her back beside me.\n\n\"All yours,\" she said.\n\n\"Careful what you say,\" I said.\n\nShe slapped me lightly on the chest. \"You know what I meant.\"\n\nI sighed. \"I guess.\"\n\nShe grinned and lifted her arms above her head, deliberately displaying herself.\n\nI followed her example and started on her toes, kneeling over her feet, my face close, my fingers probing and exploring, and before long I began to appreciate the wonder of what she was offering. She had given her body to me completely, to explore and examine, and I was captivated at the openness, at the level of intimacy offered. Even her toes, studying them in details, were wonderful. Her smallest toes was slightly plump, tiny and mobile, and I worked my way along them. Once of twice Ali twitched her foot as I tickled, but then I moved away from them, traced the bones in her feet, rolled her ankles, followed her slim calves to her knees.\n\n\"Woman are made much better than men, Al,\" I said.\n\n\"I don't know about that.\" She was leaning on a pile of pillows, watching me work along her legs.\n\n\"You like women better though, don't you?\"\n\n\"Sure. Apart from you, that is.\"\n\n\"Yeah, I know, I'm an honorary dyke. You told me.\"\n\nShe laughed. \"I think I've changed my mind on that. You're my honorary sexy straight guy now. My forbidden secret. Just don't tell any of my girlfriends we've done this.\"\n\n\"We're only studying each other,\" I said.\n\n\"Even so - no telling.\"\n\n\"Promise,\" I said.\n\nI studied her thighs, digging my fingers hard in to her muscle and she jerked and I said sorry and she said \"It's OK, I don't mind. Just a shock.\"\n\nI slid my hand down inside her thigh, half way between knee and pussy, and pulled her legs slightly wider. The upper inside of her thighs were hollowed, and I ran my fingertips along them, feeling the dip and then rise. Ali had a ledge between her thighs, a definite gap which cradled her pussy, and I looked at that, drawing in the shape and texture of her skin there. I could see, very faintly, the light tracing of her pubic hair growing back and lifted my hand and slid a finger above her pussy, feeling the small resistance.\n\n\"How often d'you shave, Al,\" I asked.\n\n\"Every time I shower. So every morning.\"\n\n\"It grows back like this every day?\" I said, running my fingers along her flat belly again.\n\n\"It's easy to trim off if I do it every day though. If I could afford it, I'd go for laser treatment, have it blasted for good.\"\n\n\"So you never want it to grow back?\"\n\n\"Why would I want that?\"\n\n\"You like it hairless down here?\"\n\n\"Of course.\"\n\n\"Why?\"\n\n\"Don't you like it?\" she asked.\n\n\"I think it's incredible.\"\n\n\"Turns you on?\"\n\nI nodded. \"Even though you don't like men, doesn't mean this one can't get turned on by you.\"\n\n\"Good. It turns me on, too. Turns on my girlfriends. And it feels good.\"\n\nI nodded again, moved to her hips, so differently shaped to mine, wider and more covered. I moved to her belly, pushed my finger into her navel as she had done to me. Hers was far more elegant than mine, deep, forming a vertical valley on her belly. She was so slim, so well muscled under her skin. \n\nI felt her ribs, running my fingers along them.\n\nI hesitated at the sides of her breasts, glanced up.\n\n\"Go ahead,\" Ali said, and smiled as my fingers slid onto her breasts. I measured them, weighing them in my hands, fascinated at their firmness and texture. I circled her nipples, then touched them and saw them spring out and respond. I rolled one then the other between my fingers, making them hard, and Ali said, \"Not fair.\"\n\n\"You made mine hard too,\" I said.\n\n\"They're smaller though.\"\n\n\"Same thing,\" I said. \n\nI traced the upper swell of her breasts, fascinated at how they flowed into her upper chest, moved to her collar bone, her neck, moved her head to one side and pushed her thick hair back and examined her ears, felt up into her hairline, feeling the bones beneath my hands, feeling her eye sockets and nose and jaw and lips.\n\n\"Sit up, Al,\" I said, and applied pressure to her back and leaned her forwards.\n\nI wanted to see what her breasts looked like as gravity pulled at them.\n\nAli crossed her legs and leaned forwards. Her breasts hung from her body, swaying gently. Her stomach folded, forming tiny ridges in her skin.\n\nI put the back of my finger underneath her breast. Even leaning forward like this, the lower curve of her breasts did not touch her skin. I laid my finger against the pendulous globe and ran it lightly up until it reached her nipple.\n\nAli shivered. \"God Tom, that feels good!\"\n\nHer nipple was now rigid, and I traced it with my fingertip and Ali hissed gently between her teeth.\n\nAs if a lightning bolt had struck, I stopped, stunned. A sense of complete unreality rolled through me and I slumped down onto the bed beside her, watching my fingers lightly touch her beneath her nipple.\n\n\"Are you OK, Tom?\" Ali turned to look at me.\n\nI nodded. \"I think so... fuck...\"\n\n\"What is it?\" She turned, kneeling beside me, leaning over me now.\n\nI shook my head and laughed. \"It's just... I had such a weird feeling then.\" I laughed again. \"Kind of deja vu but not deja vu. Looking at your boobs, touching them, and I remembered all the times I used to fantasize over them when I was growing up, and it seemed unreal to actually be here with you. Both of us naked. I used to dream about something like this.\"\n\n\"You did?\" Ali said softly.\n\n\"You know I did.\"\n\n\"I thought so, but I wasn't sure.\"\n\nI took a deep breath, shook my head to clear it.\n\n\"Roll over,\" I said.\n\n\"You gonna come back to down there, Tom?\" Ali asked.\n\n\"Sure. Back first though. And when I do, can I shave you this morning, Al?\"\n\n\"That'd be fun,\" she said, and rolled onto her front.\n\nI moved back down, worked the soles of her feet, her ankles, the back of her legs. Her ass was wonderful. The separation between ass and thigh was difficult to find, there was no line, no overhang, just a smooth taper from rounded globes into slim thigh. I placed my palms on her ass and felt them, felt their firmness, briefly tugged to open her crack and gazed at her tiny budded asshole, then moved up to her waist, her spine, her back, her shoulders. I looked at her fingers and arms, at the smoothness and warmth of her skin. As I reached her neck I was leaning over and my cock bumped into the side of her ass and she laughed softly and said, \"Careful where you put that.\"\n\nI felt the back of her skull, burying my fingers deep inside her massed curls, enjoying the feel of her bones under my hands and her hair on my skin.\n\nThen I went back, pulled at her leg and she moved, opening her thighs and displaying her ass and pussy to me, one leg lifted, the other straight, her foot hanging off the side of the bed.\n\nI slid my palm down her back, onto the rise of her ass, my fingers tracing down the center of her crack and I touched her asshole and she jumped, like I had.\n\nI left my fingertip there, resting on her. Slowly, gently, I began to stroke it away and back, feeling the rougher skin around her opening, the dip into her asshole.\n\n\"Tom,\" she said softly.\n\n\"What, Al?\"\n\n\"That thing your doing now?\"\n\n\"This?\" I lightly touched her again.\n\n\"Yeah, that.\"\n\n\"What about it?\" I moved my fingers away, tracing down between her thighs, feeling the area just behind her pussy.\n\n\"That's probably my favorite thing of all time.\"\n\nI hesitated, moved my finger back to her asshole.\n\n\"Having your ass touched?\"\n\nShe nodded. \"Is that kinky, or what?\"\n\n\"Depends how far it goes, I guess. And who's doing the touching. I don't suppose you've had a guy touch you there before.\"\n\nShe shook her head.\n\n\"I watched you and Maggie, when I first came here,\" I said. \"You like a finger inside as well? A tongue?\"\n\n\"Am I hopeless case?\" she said.\n\n\"Not hopeless. Not at all. Just unbelievably gorgeous.\"\n\nShe laughed. \"For a girl.\"\n\n\"You forget, I'm into girls. I can recognize first class ass when I see it.\"\n\n\"We can tell each other anything, can't we, Tom?\"\n\n\"Of course we can,\" I said, feeling a slight guilt because I had never said anything to her about what I had nearly done with Mom.\n\n\"Sometimes I wonder what it would be like to be fucked in my ass,\" Ali said.\n\n\"Really? I thought you weren't into cocks.\"\n\n\"Not,\" she said into the pillows. \"But I wonder all the same.\"\n\n\"Probably hurt like hell,\" I said.\n\n\"Yeah. Probably. You ever done that, Tom?\"\n\n\"Done what?\"\n\n\"Fucked someone in the ass?\"\n\n\"Never,\" I said.\n\n\"Wanted to?\" Ali asked.\n\nI nodded, then realized she couldn't see me and said, \"Sure.\"\n\nAli nodded into her pillows. \"Tell you what, Tom, we'll make a pact, yeah?\"\n\n\"A pact?\"\n\n\"Sure. If I ever wanna try being fucked in the ass I'll ask you to do it. Fair?\"\n\nI laughed. \"Sounds like I get the best side of that bargain,\" I said.\n\nAli shook her head. \"No, don't think so. Sometimes I fantasize about being fucked in the ass. When a girlfriend is licking me, when they've got their finger all the way inside my ass, I fantasize about it being a cock instead.\" She half rolled over and looked at me, her face flushed, whether from being on the pillows or something else I couldn't tell. \"Is that fucked up, or what?\"\n\nI put my hand on her back, stroked her skin.\n\n\"Not fucked up, Al. Just... stuff. There's things we're all into, some more than others. You told me, nothing's fucked up if you enjoy it.\"\n\n\"You'll do it for me, if I ask?\" Ali said, still looking at me.\n\n\"Fuck you in the ass?\"\n\nShe nodded.\n\n\"Sure. Of course.\"\n\n\"Whoo,\" Ali said, and rolled onto her back. \"You'd better go ahead and shave me, Tom, before I get carried away.\"\n\nMy cock was throbbing, aching, but I reached for the razor and drew it across Ali's pussy, removing the tiny trace of stubble. She opened her legs, allowing me to shave her pussy lips. I pulled the skin, drawing it tight, and shaved her clean.\n\n\"Wow, that's really nice,\" she said. \"And a lot less hassle than doing it myself.\"\n\nI laughed, tossed the razor back on the beside table. \"Any time you want me to shave your pussy you've only got to ask, Al.\"\n\n\"I'll remember that,\" she said, putting her arms above her head and stretching. \"You gonna touch my pussy now, Tom?\"\n\n\"Is that allowed?\"\n\n\"Of course it is.\"\n\n\"Inside too?\"\n\nShe nodded. \"As far inside as you want.\"\n\n\"Make you cum, too?\" I asked.\n\n\"Please,\" she said. \"I really need to cum now.\"\n\n\"You do?\"\n\nShe laughed. \"You don't think this is turning me on as well? I've seen your cock, Tom. You think I'm not turned on too?\"\n\nShe lay back and I let my finger drift down until I touched the large nub of her clitoris. It was incredible, being given permission to explore, to examine, to really discover her body. Her clitoris was large and engorged. It sat proud of the small hood above of her pussy, and I rolled it from side to side, bent over and looked closely at it, at the tiny opening at its tip. It looked like a very tiny cock, and I wondered if she ejaculated from it when she came.\n\nI moved down, tracing her outer pussy lips, parting them and finding her inner labia nestled within. Ali had a plump outer pussy that formed a tight slit. Without pulling her lips apart her inner folds would remain hidden. I pushed two fingers in either side, opening her, seeing the pink inner folds, let a finger touch her there and she hissed softly.\n\n\"Don't like?\" I asked.\n\n\"Like,\" she said. \"Like a lot.\"\n\n\"You're pretty wet down here, Al,\" I said.\n\n\"Too fucking right I am.\"\n\nI pushed my finger further in, feeling her oiled dampness.\n\n\"All the way, Tom,\" she said.\n\nI probed, extending my index finger deep inside her, finding ridges and nodules and places I had never imagined. I pressed hard, found the entrance to her womb buried deep inside.\n\nAli was breathing hard now and I looked up at her face, eyes closed, mouth open. I slid a second finger inside her.\n\n\"Do me, Tom,\" she gasped. \"Just fucking do me!\"\n\nI pushed a third finger inside, deep inside, and started to work them in and out. With my other hand I put pressure on her clitoris and she grunted.\n\nI pushed inside her, watching her pussy, watching her face, and then she moved, rolling onto her side, lifting her right leg high.\n\n\"Touch my ass, Tom, please?\"\n\nI moved, slid my wet fingers out of her pussy, ran them up her thigh and inserted them again, put my other hand on her ass and placed the tip of my finger on her asshole.\n\n\"Inside,\" she gasped.\n\nI lifted my finger to my mouth, wetted it and put it back, pressing. I saw her tight bud open, saw my fingertip enter her ass.\n\n\"Fuck yeah,\" she moaned. \"Don't wanna cum yet, Tom. Play with my ass, tease me Tommy.\"\n\nI slowed the movement of my fingers in her pussy, increased the movement of my finger in her ass, pushing it further, pushing it deep.\n\n\"Oh God yes,\" she said.\n\nMy palm was flat on her ass, my index finger buried to the top joint, my other hand had three fingers in her pussy and her chest was flushed pink, her eyes alight.\n\nMy cock was on fire. I needed to cum soon, and moved around so I was behind her, moved so the head of my cock bumped against the cheek of her ass.\n\n\"Oh God,\" she said again. \"That's so fucking hot. Put your cock on my asshole, Tommy?\"\n\nI gently withdrew my fingers, moved closer and guided my cock so the head just rested on her ass.\n\n\"Oh wow,\" she sighed.\n\n\"Like that?\"\n\n\"Fuck yeah! I half want you to push, Tom, half want you not to.\" She rocked her head quickly. \"Fuck, I'm gonna cum soon. Just keep your cock where it is, Tom, it's like you're gonna do it...\"\n\n\"Just here?\" I said, applying just a little pressure. There was no danger. Ali's asshole was so tight, my cock so thick, it would be a struggle to push inside her\n\nBut she squirmed against me and said, \"Fuck, I want it inside me, Tommy. Fuck no.\"\n\nI made no move to push. Instead, I gripped my cock in my hand and started to rub myself hard. I leaned over, kissed Ali on the side of her mouth and said, \"I'm not gonna fuck you, Al. But I am gonna cum on your asshole.\"\n\n\"Oh Tommy, yeah, do it. Cum on my ass!\"\n\nI increased my pace, knowing I wasn't going to last long, working my fingers into Ali's pussy, watching as my cock rested and bumped against her asshole. I was desperate to push, to bury myself inside her, but I held myself back.\n\n\"Cumming now, Tommy,\" Ali gasped. \"Cum on my ass now.\"\n\nAli started to shake and jerk under me. I rubbed hard, letting myself go. As she gasped and curled up, her hands came down and gripped mine, pulling my fingers deep inside her, and as she curled her ass opened even more and the sight was too much and I exploded, semen jetting hard from my cock. I was pressed onto her ass, and it splashed directly onto her asshole, sprayed out from the side, but some of it, the pressure, forced it inside and the lubrication opened Ali's ass a little and I didn't want to fuck her but I couldn't help it and as I jetted a second time just the head of my cock opened her ass and slipped inside, only a quarter inch, but my cum now jetted inside her ass and I rubbed and came again, then pulled back, guilty, and emptied the rest of my seed over her ass.",
        "My knees were weak and shaking, and I sat back on my heels, slid a hand along Ali's thigh and spread the slippery cum over her ass. She still clutched my other hand to her pussy, and I breathed hard and watched as a trail of my cum slid out from her now closed asshole and trailed down her thigh.\n\n\"Fuck, Tom,\" she gasped.\n\n\"Nearly got carried away there, Al. Sorry.\"\n\n\"I wanted you to. I think I wanted you to do it, Tom.\"\n\n\"I think we'd better stop messing around like this, Al. Before we go too far.\"\n\nShe burst out laughing. \"This wasn't going too far?\"\n\nShe rolled onto her back, pulled my hand and my fingers slid out of her with a squelch. She lifted my hand to her mouth and kissed my fingers.\n\n\"It's so much fun, though, Tom.\"\n\nI nodded. \"But dangerous.\"\n\n\"I guess.\" She pulled a face and laughed. \"Oh yuck, Tom, I can feel your cum dripping out of my asshole.\" And still laughing she rolled off the bed and waddled through to the bathroom. "
    ],
    "authorname": "harding",
    "tags": [
        "incest novella",
        "masturbation",
        "rimming",
        "anal play"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/alis-art-ch-04"
}