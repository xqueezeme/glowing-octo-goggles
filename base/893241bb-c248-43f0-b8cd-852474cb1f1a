{
    "title": "Just When I Thought It Was Over Ch. 02",
    "pages": [
        "Just When I Thought it was Over, Part 2\n\nHaving taken a short break from writing, I decided to make my return by continuing this story. This is partly because quite a lot of people requested a sequel and partly because I really liked Beth's character. I've covered a lot of ground in this story and I accept that to some it might feel a bit rushed but there were reasons for this before anyone decides to complain. I don't particularly care for stories with multiple chapters so I wanted to conclude this one in a way that I wouldn't feel a particular need to return to it again. That's not to say I won't write a third instalment but I think it's unlikely. When I reflected on the story, I also felt that Diane's influence would be greater than I originally imagined and Beth was clearly changing as a character, compared to her younger self, far more profoundly than anyone but Diane expected and that includes me. In essence, I hope my readers can simply enjoy it for what it is -- a sexy and erotic story that is a celebration of older women.\n\n___________________________________________\n\nAfter my evening with Andy, I returned home a very happy and satisfied woman. I slept well that night as I was utterly exhausted but as soon as I woke the next morning, my first thoughts were of Andy and the remarkable evening I'd experienced with a man young enough to be my son. The feeling of remorse I'd half expected thankfully didn't materialise and as I lay there, I kept remembering the sensation of having such a large and hard cock inside me again. Every time the memory came back to me, I couldn't help smiling and hoping it wouldn't be too long before he was able to take me again.\n\nRelaxing in bed as the morning sun fought its way through the gaps in the curtains allowed me to reflect on how significantly my life had changed since that fateful night walking Max past Diane's house. It seemed fair to conclude that had I not seen Diane with her young man that night, I never would have enjoyed sex again for the rest of my life so it was a momentous moment and I would always be immensely grateful to Diane for her role in pushing me to make this happen. It was tragic enough that I'd gone 15 years without enjoying a man but at least now I could make up for lost time and enjoy myself while I still could, with a man who seemed to have plenty of stamina and enthusiasm.\n\nWho knows what else I may discover in my new sexual life. I found myself open to the idea that what I enjoyed sexually now may be different to 15 years ago because I was surprised at how the dynamics of sex had changed with Andy. When George had made love to me, it was always tender, loving and an experience of equals but with Andy, I'd wanted him to take me and almost use me for his pleasure. I'd enjoyed begging him to give me his cock and cum in me but I was unsure why such a transformation had taken place. Perhaps I was trying to over-analyse the whole thing. I decided I owed it to my good friend Diane to go and talk to her about last night's experience and thank her for making it possible so as soon as I was showered and dressed, I headed over to her house.\n\nAs soon as Diane opened the door, she knew what had happened!\n\n'You look like a woman who has had a good seeing to very recently,' she smirked. 'You'd better come in and tell me all about it.'\n\nIt was a surreal experience sitting in Diane's living room, sipping tea like a couple of stereotypical old ladies while talking about having sex with young men in graphic terms that I would have thought impossible not so long ago. Life is full of surprises!\n\n'So!' she began; 'From the look of you I take it things went better this time.'\n\n'Yes,' I replied, with a grin like the Cheshire Cat, 'things went a lot better.'\n\n'And no feelings of guilt consuming you now the deed is done?' she asked.\n\n'I'll never stop loving George,' I replied, 'but I realise now that you were right. It's been long enough and I have to move on with my life. I've been 15 years without sex and if I stay in good health, it's perfectly possible I could enjoy sex for another 10 years. I can't go a quarter of a century without that pleasure and I don't think George would want me to. I want to make the most of the time I have left and I hope Andy will stay around and keep me happy.'\n\n'And was his cock as good as you thought it might be?' she pressed.\n\n'Even better!' I smiled. 'He was bigger than I've ever had before and harder than I ever remember a cock being. It felt truly incredible when he put it inside me.'\n\n'I think that now we're older, we appreciate a man's cock a lot more than we did when we were younger,' Diane reflected.\n\n'As much as I loved the experience,' I ventured, 'it was also different to how I expected it because I was different and you seemed to anticipate this.'\n\nDiane shrugged, 'Only because I noticed that I enjoy sex in a different way with my young lover, Neil, and I've heard it's the same for a number of women like us. How was it different for you?'\n\nI hesitated, not entirely sure I wanted to admit to behaving like such a slut in front of my friend. 'There's no need to be embarrassed Beth, it was the same for me. I'd always been a very conservative partner with my husband but with Neil I'm far more proactive and vocal. I'll try anything at least once and do you know what, I've ended up loving pretty much all of it.'\n\n'I think I was pretty vocal too but I couldn't stop myself it was so good. What surprised me more was how submissive I became. I just wanted to give myself to him and let him take his pleasure from me. I was begging for his cock like a slut and loved him being more dominant,' I confessed. 'I've never been that way before yet you seemed to know something like that would happen.'\n\nDiane thought for a moment. 'It's only my own theory but I think that women of our generation grew up with all kinds of constraints on them in terms of sex and society's expectations but when you get to our age, I think you care less about what anyone else thinks and you're more prepared to just be yourself and let yourself go. I'd bet that the lover you became last night felt more like the real you than at any other point in your life.'\n\n'Yes, it did,' I mused, 'but why did I want to become so submissive and behave in such a slutty way?'\n\n'I don't think it's so surprising Beth,' she replied. 'The number one female fantasy is to be taken assertively by a man and dominated by him. I realise we live in a world of equality between the sexes and I wouldn't want it any other way but I think that genetically we're predisposed to be attracted to a strong male figure and part of this means that we tend to like the man to be more dominant. I may be wrong but that's how I see it and if you both enjoyed it, why not? Do you regret behaving that way?'\n\n'How can I when I enjoyed sex more last night than at any other time in my life?' I concluded.\n\n'So did you do anything new last night that you haven't tried before?' Diane asked.\n\n'Not really as I don't think of myself as being particularly conservative in bed.' I hesitated: 'It was more that I just enjoyed different things in different ways.'\n\n'Such as?' she insisted.\n\n'Well, I've enjoyed sucking cock before and I sometimes let George cum in my mouth but I never swallowed. Last night I was happy to do so and loved it,' I confessed. 'I also loved being taken from behind far more, though I was a bit surprised when he started rubbing my bum hole with his thumb,' I finally admitted.\n\nDiane simply shrugged and commented, 'It feels surprisingly good doesn't it.'\n\nI was shocked by her response and just sat there open-mouthed.\n\n'I'd guess that he'd like to fuck that lovely bum of yours at some point and was testing the water, so to speak, to see if you might be receptive to the idea,' she continued as if it was the most normal thing in the world.\n\n'He can't do that!' I almost shouted in surprise before it finally dawned on me that Diane wasn't anything like as shocked as I'd expected by this revelation. I wasn't entirely sure I should ask the obvious question but I was certainly sure I wanted to know the answer so I decided to throw caution to the wind. 'Have you done that?' I asked in disbelief.\n\n'I told you I'd tried a lot of new things with Neil,' she smiled. 'He introduced me to anal sex a while ago. It started out in a similar way to what you described and gradually built to full anal sex.'\n\n'I couldn't even imagine doing that,' I asserted. 'Doesn't it hurt?'\n\n'I'd say my first time was more uncomfortable than painful but I soon discovered that if it's done properly and you use lots of lube, it can feel incredible and really intense. Generally I prefer him in my pussy but I love giving him my bum from time to time and I certainly enjoy the experience. I'm starting to clench a bit now just thinking of his lovely cock in there,' she grinned, winking at me.\n\nHer endorsement of anal sex didn't really convince me at all. 'I don't think I'd like that,' I maintained.\n\n'But that's the point Beth,' she insisted. 'You think you won't like it but you don't know and you can't possibly know until you try. All I'd say is if he tries that again, just see where it goes and for as long as it feels good, just carry on. That should surely be the case with any new experience Beth; just keep an open mind, try it and see what it's like.'\n\nI didn't reply as I was lost in thought, mulling over everything Diane had said.\n\n'Are you open to new experiences?' she persisted.\n\nI'm still not sure I could do that,' I replied, 'but I can't deny the logic of what you say and let's face it, you've been right and guided me well so far.'\n\n'I'll tell you what Beth, why don't you come over here one night with Andy and I'll get Neil over?' she suddenly asked.\n\n'What on earth are you suggesting now?' I gasped.\n\n'Possibly nothing more than drinks with some like-minded people Beth; there's no need to panic,' she shrugged.\n\n'Possibly?' I repeated, knowing she'd included that word for a reason.\n\n'Yes, possibly,' she insisted. 'At the very least we can enjoy a pleasant evening together and then he can take you home and fuck your brains out, and if the evening develops in a slightly different direction, you might end up enjoying more new experiences with new people. What have you got to lose?'\n\n'But......' I stammered.\n\n'We'd all be friends, we all know that the ultimate reason we're together is to enjoy sex and although Andy is definitely your lover, he's not your husband and it's not like you have a serious relationship in the conventional sense. Maybe you'll just enjoy a nice evening out before sex with him at your place, maybe you'll stay over and enjoy sex with him here in my spare bedroom and maybe you'll enjoy even more. I'm not saying anything will happen or should happen, I'm just saying life has presented us with possibilities and we should at least give them a chance, or do you want to spend another 10 years denying yourself pleasure?'\n\nDiane's ability to always be completely logical was both irritating and persuasive. I only meant to talk to her about the wonderful night I'd had with Andy and now both anal sex and apparently even some sort of orgy was on the table! My gut instinct was to immediately say a resounding 'No!' to both possibilities yet she had guided me well so far and every part of her argument was correct, no matter how much I might prefer her to be wrong. I eventually said that I would ask Andy about it next time I saw him but I went home still far from convinced.\n\nI enjoyed sex and after 15 years of celibacy, I simply wanted to enjoy a sex life again and didn't have any great desire to suddenly start trying new things. Would Diane's suggestion to experiment with new things bring new pleasures or ruin what we already had? Conversely, I'd already enjoyed new experiences thanks to Diane and Andy so why couldn't Diane's new suggestions be the same?\n\nTo say that I was confused would be an understatement so I decided to research things a little more online. This involved reading various accounts of different women's experiences of anal sex and group sex as well as watching some porn. To be honest, I didn't spend long watching the porn because it quickly occurred to me that although these women looked like they were enjoying the experience, I couldn't ignore the fact that they were being paid to show enjoyment. Instead, I went to a few women's forums where I received some very mixed feedback. Some women simply wouldn't entertain the idea of anal sex or group sex, others said that they'd tried it but it wasn't really for them and finally there were the women who openly said they loved these new experiences. What the majority had in common was that at the very least, they didn't regret trying.\n\nBy the time I went to bed that night I felt I'd reached some reasonable conclusions. Firstly, it was certainly possible to enjoy these experiences as my own friend seemed to enjoy anal sex, though I was less clear about her previous experience of group sex. Secondly, a lot seemed to depend on the man as all of the positive experiences for women involved a man who was patient, considerate and loving. I felt fairly confident Andy would fall into that category so I should be in safe hands. Of course, all of this was speculation as I didn't know for sure that Andy was interested in having anal sex with me and I had no idea what his attitude would be towards Diane's other suggestion.\n\nThe more I thought about it, the more I started to find Diane's suggestions intriguing, yet it did raise another serious question that I only thought of while doing my research. Almost all of the experiences of group sex that I'd researched involved some sort of sexual contact between the women, largely while the men recuperated, so was Diane also suggesting that she could be another new sexual partner for me? I'd never had any form of sexual desire for another woman before and I couldn't imagine doing that sort of thing, especially with Diane. Years ago I had a friend who told me she'd experimented with a little 'lady love' as she called it but said that although it was enjoyable, it generally just left her desperate for cock and on the rare occasions she'd been with another woman, there were no men around so she ended up quite frustrated.\n\nI was doing a little housework the next day when the phone went and it was Andy. His voice made me as giddy as a schoolgirl as I immediately started to think of the pleasure he had given me.\n\n'Hi Beth,' he began, 'I've been thinking a great deal about our evening together and how wonderful it was. Do you still think you'd like to see me again or have you had a change of heart?'\n\n'No change of heart,' I laughed, 'I had a wonderful time with you and I hope I'll be able to see you again soon.'\n\n'How does Friday suit you?' he asked quickly, clearly as keen as me to get back into bed.\n\n'That's perfect,' I replied, my heart pounding with the anticipation of enjoying another incredible sexual encounter with my new lover. 'Can you be at my place for about 7.30pm?'\n\n'Herds of wild horses couldn't keep me away,' he asserted and with that, our next meeting was arranged.\n\nThe rest of the week dragged by at a laborious pace as my sexual desire gradually built to boiling point. I pleasured myself most evenings as I thought of Andy's hands all over me and his beautiful cock buried deep inside me. Once or twice I even thought of him pushing against my backdoor and was surprised to find that the idea no longer completely horrified me. I couldn't deny that his thumb had felt good as he rubbed my puckered opening and that part of me had felt the need to push back onto him but I was still extremely unsure about going too far. His thumb or fingers were one thing but his big cock was an entirely different proposition.\n\nAfter having dinner at about 5.00pm on Friday, I took a leisurely soak in the tub, shaved my legs and made sure that my pubic region was tidy and inviting. Having already broken the ice with Andy, I made sure I was wearing some sexy underwear with stockings but other than that, my main focus was simply wearing things that could be removed with the minimal amount of fuss so a low cut blouse with push-button fasteners and a skirt with a simple zip fastening. It wasn't that I wanted him to simply have sex with me the moment he came through the door but I did want things to progress smoothly and swiftly when the time came, as I was absolutely sure it would. To be doubly sure there would be no mishaps this time, I also cleared away all of the pictures of George that I had around the living room and bedroom. George would always be a part of me but this evening was about my life now - the alternative Beth if you like; the Beth who had been sexually reborn.\n\nBy the time all that was done it was 7.15pm so I poured myself a glass of wine and had no sooner sat down than the doorbell rang. I was like a schoolgirl answering the door as my heart was fluttering all over the place with anticipation. Andy stepped into the house with a beaming smile to match my own, along with a bottle of wine and a beautiful bunch of flowers. I wasn't sure what I had been expecting but it wasn't flowers and I was touched by his thoughtful gesture. Yes, we had a relationship that was almost entirely based on sex but I was clearly more to him than simply a piece of meat and for me, that made all the difference. As I took his gifts he held me in his arms and kissed me passionately. My mouth opened to receive his tongue and in that moment I think there was very little I wouldn't do for him if he asked.\n\n'I've missed you so much Beth,' he said, 'the week has dragged by waiting for tonight.'\n\n'It has for me too,' I agreed, 'but we have all evening together now. Why don't you come through and have a glass of wine so we can chat and cuddle for a while; there's no rush is there?'\n\n'Not at all Beth, that would be perfect,' he replied.\n\nWe sat on the sofa together with our wine and he put his arm around me while we talked so the whole thing felt very homely rather than merely sexual. I think it's fair to say that we were entirely comfortable in each other's company as our conversation drifted through such topics as family, work, politics, music, religion and our hopes for the future. At his age, Andy obviously had more dreams of the future than I did but it was lovely to hear about his enthusiastic plans for things he might do and places he might visit. It sounds like our conversation was a little one-sided but that wasn't the case. I may not have the same number of years ahead of me but it meant that I could offer him an insightful opinion based on my greater experience.\n\nThe whole time we were talking, he held me close and kept giving me kisses that felt full of affection. In many ways the whole thing felt at odds with the dominant man I'd given myself to when we last met but I reasoned that the man he was in bed didn't have to be the same as the man he was in normal conversation. I certainly wasn't the same woman in bed as I had transformed from a respectable pensioner to some sort of cock hungry slut. When he wasn't holding his glass of wine, he rested his hand on my thigh, occasionally giving it a squeeze but never venturing too high.\n\nGlancing at the clock I was surprised to see that it was already 9.30pm yet it felt like we'd only been talking for a short time. The panic I'd suffered the last time he was sat in my living room seemed a long, long time ago and as I looked into his eyes, I felt a very powerful need to get a lot more physical with him and bring our conversation to a close. He was still talking when I suddenly kissed him passionately and put my own hand on his thigh, very close to his cock but not yet touching it. It was a minute or two before we parted.",
        "'Thank you Andy,' I said softly.\n\n'What for?' he asked, a little surprised by my sudden and unexpected move.\n\n'For everything,' I smiled. 'For being patient with me when you didn't have to be; for making me feel special and loved again; for showing me that you respect and value me as a person and for being the best lover an old woman could possibly hope to find.'\n\nHe kissed me tenderly on the lips. 'I think I'm the lucky one Beth. You're a very special woman and I'm looking forward to both the friendship that will develop between us and the sexual adventure we'll have together.'\n\nHis last words made me momentarily think of Diane's wild suggestions and I wondered how Andy might respond to them but now wasn't the time. Right now I was already starting to become very wet so I had more pressing needs. He seemed to sense this as he kissed me again and brought his hand up to fondle my left breast. I moaned softly into his mouth as I felt my breast being squeezed and fondled in his strong hand and I knew I wanted his hand replaced by his mouth very soon. Breaking our kiss, I stood up, took his hand and said: 'I think it's time for you to see my bedroom,' as I led him upstairs.\n\nStanding by the bed, he soon had my blouse and skirt removed, just as I had planned. I kissed down his chest as I removed his shirt and unfastened his trousers. Kneeling in front of him, I slowly pulled them down and was faced with the proud outline of his hard cock in his tight fitting boxers. I gently ran my fingers over its outline and kissed it, feeling him twitch and jerk under my touch. Slowly I eased his boxers down, to be faced with the large cock I remembered so well. My memory hadn't been playing tricks on me; he had an incredible cock that was every bit as long and thick as I remembered. Just looking at it made my mouth water with anticipation and that feeling only grew when I wrapped my hand around the hard shaft and slowly started to pump his manhood with my fist.\n\nI noticed a little bit of precum on the tip of the large mushroom head and immediately licked it off as he moaned with pleasure. I swirled my tongue around the head, teasing him before kissing the tip and relaxing my lips, allowing him to push his cock into my welcoming mouth. We both let out deep moans of satisfaction as I started to suck him with a relish I'd never experienced before when giving oral sex. I absolutely loved sucking this man's cock and judging by his inability to stop moving, he was enjoying my warm, wet mouth too. It felt heavy on my tongue and I could feel the blood pumping through its length as it completely filled my mouth. His fingers entwined themselves in my hair as he took hold of my head and started to thrust into my mouth. He was fucking my face and I was loving every second of what he was giving me. One of my hands held the base of his cock to stop him going too deep and the other cradled his heavy balls and caressed them, encouraging him to give me a large load of his young cum. It wasn't long before he was searching for his relief.\n\n'You are so good at sucking my cock Beth!' he grunted as he felt the cum boiling up in his balls and getting ready to shoot. 'Get ready to take it baby.'\n\nI loved the thought of feeling him cum in my mouth again but this time I wanted another new experience. While I'd been online researching anal and group sex, I came across something called a 'bukkake' and I was desperate to feel his hot load splashing onto my skin. Feeling his cock start to swell and stiffen even more, I begrudgingly released him from my mouth, looked up at him and held my tits up for him like I was offering him a gift.\n\n'Cum on me Andy,' I begged, 'cover me in your lovely young sperm.'\n\nHe seemed to be more than happy to agree to my request as he started to furiously masturbate, staring at me with unadulterated lust. I opened my mouth and through half-closed eyes I saw thick ropes of cum shoot from his cock. Jet after jet splashed all over me and I was pleased I was with a man who could cum so much. I could feel his warm essence as it hit my face, some going into my waiting mouth for me to devour before he pointed his cock further down and started to spray my waiting tits. It felt surprisingly erotic to feel a man cumming all over me and I was left wondering why I'd never done this before. I felt completely slutty and I realised that this was increasingly what I wanted. As his orgasm started to subside, I rubbed his semen into my tits as he rubbed his cock over my face. I took his cock back into my mouth and proceeded to suck him dry. Gradually he started to wilt in my mouth and I reluctantly let him slip from my lips.\n\n'That was incredible Andy,' I gasped. 'It was so hot having you cum on me and boy, can you cum a lot!'\n\n'Nobody has ever given me a blow job that good before,' he panted. 'I could hardly fail to cum a lot with you pleasuring my cock, besides which, I've been saving my cum for you over the last few days. I'm pleased you enjoyed it.'\n\n'I did,' I agreed. 'I love everything we do together and I'm sure I always will. Now I need some of your gorgeous cock in my pussy.'\n\nHe helped me up onto the bed, pushed me down onto my back, raised my legs up and dove at my soaked hole. I screamed with delight as he ate my pussy like a rabid dog. His tongue probed my depths and lashed my swollen clitoris, creating waves of pleasure throughout my body. Sometimes he'd lick me hard, bringing me to the point of release before relaxing his efforts slightly so that he kept me bubbling on the edge of an orgasm without actually allowing me release. I held the back of his head as firmly as I could and ground my pussy into his face as he explored the full length of my soaked slit.\n\n'Oh God, Andy, please let me cum,' I begged as I yearned for release.\n\nSuddenly he pushed my knees all the way up to my shoulders and his tongue went lower this time so that I could feel it lapping at my tight bum hole. I was stunned that he'd do such a thing but I was even more amazed that it felt so good. The pleasure was indescribable and when I felt him start to push the tip of his tongue into my tight, puckered hole I could contain myself no longer. My orgasm came like a flood and I could feel the warm liquid erupting from my pussy like it was some sort of volcano. There was certainly a volcanic heat being generated down there! I screamed so loud I was surprised the neighbours didn't call the police and it took a good five minutes before I was able to speak again. I pulled Andy up the bed to me and bathed him in kisses.\n\n'That was so good Andy!' I gasped. 'Nobody has ever done that to me before and although you shocked me, it was absolutely incredible!'\n\n'Sometimes to experience the most pleasure we need to try new things,' he replied rather enigmatically.\n\nThis made me feel more confident about mentioning a possible meeting with Diane and Neil but at the same time it made me very nervous as for the first time it seemed more than possible that he would actually agree to such a meeting. Up to this point I'd been able to ignore my own misgivings as I was sure he'd reject the idea anyway but did I really want to stop now when everything I'd experienced so far had given me more pleasure than I ever thought possible? Still, that was a conversation for a little later as right now I had more pressing needs. I reached for Andy's cock and was pleased to find it hard again already -- something that I certainly wouldn't have enjoyed from a lover closer to my own age.\n\nAs I wrapped my fingers around his length, I could feel it throbbing in my hand and my heart pounded with the anticipation of what was to come. Not letting go of his powerful manhood, I moved him between my legs and guided his cock to my desperate opening. I looked him straight in the eyes as I placed the large head of his cock just inside me and whispered: 'Fuck me Andy; make me cum on you again and again.'\n\nReleasing his cock from my hand, he drove his entire length inside me, balls deep in one steady stroke. I gasped in satisfaction at the sudden feeling of fullness that overwhelmed me and the pleasure of feeling my pussy stretching to accommodate him. There is surely little else that can be better for a woman than feeling completely full of a man and having to feel yourself stretch to take him all and I was enjoying both of those sensations. I clenched my muscles tight to feel every centimetre of the hard meat he had inside me. Slowly but surely he withdrew all the way to the tip and I clung to him as tightly as I could, reluctant to let him go but then I could relax to allow him to smoothly and powerfully drive back into me. He soon established a steady rhythm of long, deep thrusts and every time he pounded into me I moaned in satisfaction as the pleasure began to radiate out from my core.\n\nI couldn't remember the last time I'd been fucked in my own bed it was so long ago and now I was relishing every second. We looked into each other's eyes the whole time, each wanting to give the other the most pleasure possible. Deep inside me I could feel the tell-tale signs of an orgasm beginning to build and I started to push my hips up to meet his every thrust, my fingers digging into his back in desperation to keep this wonderful young man inside me. Wrapping my legs around him I pulled him into me and when I finally came, I held him so tight that it was difficult for him to move. My pussy went into spasm around his thick cock, clenching his rod so tightly I could feel each ridge and vein as it continued to plough into me. My climax washed over him as the pleasure radiated out from my core and I was continually crying out and fighting for breath.\n\n'Oh God, oh God, I'm cumming so hard!' I screamed, 'Your cock feels incredible; please, keep fucking me!'\n\n'Turn around and bend over for me,' he demanded, 'I want to cum deep inside your sweet pussy.'\n\n'Oh, yes please!' I sighed as I turned around as quickly as I could and presented my already well fucked pussy to him. I just wanted to give myself to him and it was exquisite waiting for him to mount me and take his release.\n\nHe took a firm hold of my hips and pulled me onto his incredible length. I was immediately completely impaled on him and I was thrilled by the sound of his young body slapping into my upturned backside with every deep thrust of his big cock as he drove repeatedly into my soaked pussy. I was curious if this time he would give any attention to my back door, experiencing a strange mixture of nervous trepidation and excited anticipation. After five minutes of him fucking me like this, hard and deep, I felt him start to ease my cheeks apart to expose my forbidden hole. He was almost massaging my bum while he fucked me, gradually working his thumbs closer to my hole until I gasped as he touched it for the first time. Once again, it felt wicked and depraved to have a man playing with me there but once again, it felt surprisingly good and I was having to resist the very strong temptation to push back onto him and experience some sort of penetration. This time he started to rub my opening with his thumbs a little more firmly until his thumb came to rest on the hole and he applied just a little extra pressure.\n\nI couldn't stop myself at this point, such was my overwhelming instinct to push back towards him. It didn't take much on my part and I felt the tip of his thumb enter my arse. I'd never tried anything like this before and it felt so good that I started to cum again, both holes involuntarily clenching onto their respective intruders. It was all too much for Andy and with a final, almighty thrust he drove his huge cock all the way into my depths and started to flood my warm passage with his precious sperm. I could feel his cock throbbing and pulsating as each jet of cum entered me and I felt the warmth of his semen as he filled me up. Totally spent, we collapsed onto the bed in a sweaty heap. He slipped out of me, followed by a flood of cum that flowed down my thighs and into the crack of my bum.\n\n'That was incredible Andy!' I gasped. 'I've never experienced sex like that before; it was so incredibly good.'\n\n'I agree entirely,' he panted. 'It's incredible that you've been so long without sex because this is the best sex I've ever had in my life. You were made to be fucked Beth.'\n\n'I think I was made to be fucked by you Andy,' I replied kissing him tenderly.\n\n'I think there's more we can experience together yet if that's what you want,' he said, mysteriously.\n\nI wondered if he was making a subtle reference to the possibility of anal sex or perhaps I was reading too much into what he'd done with his thumb. Either way, it seemed like a convenient opening to raise the idea of seeing Diane and Neil.\n\n'Do you remember me telling you about my friend Diane who also has a young lover?' I asked.\n\n'Yes,' he replied, 'she encouraged you to enjoy a younger lover yourself if I remember correctly.'\n\n'She did indeed,' I smiled, 'so I guess we have a lot to thank her for.' I hesitated for a moment, unsure of both my own feelings about her proposal as well as how Andy might respond. 'Well, she asked if we'd like to join her and Neil at her place one evening and I said I'd mention it to you,' I eventually said.\n\n'For a social visit,' he said after some thought, 'or is this for some sort of foursome?'\n\n'I'm not entirely sure,' I confessed. 'It might just be for drinks and if we stay over, we could have our own room but I know that she's also certainly open to a more.....' I hesitated, searching for the right words, '......relaxed arrangement,' I eventually concluded.\n\n'And how do you feel about this?' he asked.\n\n'I'm not sure,' I confessed. 'My natural instinct is to keep things private between us but on the other hand, I'm aware that we have a lot to thank her for so I don't want to disappoint her and if I'm honest, I'm enjoying all these new experiences so much that I confess I'm curious if the new me might find this another great new experience.'\n\nAndy said nothing for a while so I felt obliged to fill the silence.\n\n'The important thing is that I don't want to do anything that might threaten what we have already so if you're not keen, I'll simply decline.'\n\nAs you say Beth, we have a lot to thank her for and you are enjoying your new sex life a lot, as am I, so why don't we just go with an open mind and see where it takes us?' he eventually said.\n\n'I think that's an excellent idea,' I beamed, 'I'll let her know tomorrow and text you the date.'\n\nThe next morning I returned to Diane's house to make the arrangements and although I was very nervous about the whole thing, I was also feeling more excited than I had anticipated. I wasn't sure what to expect but I was fairly sure that whatever happened, I would find it a very pleasurable experience, even if Andy just ended up fucking me in Diane's spare room.\n\n'Good morning Beth,' she smiled, answering the door. 'Have you seen him again already?'\n\nYes I have, last night,' I replied, stepping inside the house and making my way to the living room.\n\n'And was it as good as the first time?' she asked.\n\n'Possibly even better,' I giggled. 'If I concentrate, I swear I can still feel him inside me.'\n\n'It sounds like he's a very special man with a very special cock,' she laughed, offering me a cup of tea.\n\n'Yes, he is and yes, he has,' I smiled, feeling as happy as I could remember.\n\n'So did you ask him about coming around to see Neil and me?'\n\n'Yes, I did,' I confirmed. 'I wasn't entirely sure what to tell him about the evening when he asked as it was all a bit vague.'\n\n'It's just an evening with like-minded friends Beth and we can just see where things go,' she shrugged. 'Maybe nothing will happen and maybe we'll try each other's partners; who knows?'\n\nI was shocked as I hadn't actually thought of Andy fucking Diane or of letting Neil fuck me, which sounds a bit na\u00efve given the nature of Diane's proposal but that particular detail just hadn't crossed my mind until that moment.\n\n'Don't look so shocked!' Diane laughed out loud. 'I'm perfectly happy with Neil and I wouldn't dream of trying to take Andy from you but I wouldn't mind at least trying this wonderful cock you keep going on about and I'd like you to try Neil. He has a lovely cock too and he certainly knows how to use it. It's just sex Beth, not a marriage proposal.'\n\nThere was that 'Diane logic' again that had a habit of getting directly to the point. Obviously she was right; my relationship with Andy was ultimately about sex even if I did feel we were becoming good friends but given slightly different circumstances, my lover could just as easily have been Neil. We finally agreed on the following Saturday and with Andy informed, all I could do was settle down for the painfully slow wait. As usual I spent a lot of the week going to bed to pleasure myself while thinking of Andy but some of my fantasies started to wonder what Neil might be like and what it would be like to experience another new cock. Despite my nerves, there was something very exciting about the whole thing and I wondered how he might fuck me. Strangely, even though I was curious about Neil fucking me, I only ever thought of Andy cumming in me and I concluded that this must be because accepting a man's cum is the ultimate intimacy and I undoubtedly felt close to Andy in a way I couldn't possibly feel about Neil.\n\nSaturday night eventually arrived and I went through my normal routine of getting ready and selecting clothes that could easily and seductively be removed. I knew that at some stage in the evening my clothing would be removed and I was really looking forward to that moment, it was just a question of when, where and by whom? Andy called for me as arranged and as Diane's house isn't far from mine, we decided to walk over rather than drive.\n\n'How are you feeling about this evening now?' he asked after we'd gone a couple of long minutes without speaking.\n\n'Very nervous but also very excited,' I replied.\n\n'Me too,' he smiled.\n\nCan I ask you a question before we get there and I promise you that your answer won't upset me?' I asked.\n\n'Of course,' he replied, suddenly looking very serious.\n\n'Depending on how this evening goes, how would you react if you were able to fuck Diane?' I asked directly.\n\n'Well, that is direct!' he laughed nervously. 'I don't want to dodge the question but I think that largely depends on you.'\n\n'How do you mean?' I asked.\n\n'We're agreed that Diane is a good friend of yours and we have a lot to thank her for. She also sounds like a lovely woman who can be very sexy so in that respect, I'd have no objection to having sex with her, assuming she'd like to have sex with me. It's the least I can do to thank her for giving me the most wonderful lover in the world,' he added, giving me a loving kiss.\n\n'Oh, I know she'd like you to fuck her!' I said.\n\n'Then my real concern would be how you'd react Beth because there's no way I'd want to jeopardise what I have with you and I certainly wouldn't ever want to upset you. If it happened, it would just be sex but what we have is more than that. For me, it's not just sex with you, it's something special.'\n\n'I agree,' I said, touched by the loving nature of his response. 'I don't think I mind you having sex with her given who she is and that I'll be there but could you please promise that you'll only cum in me?'\n\nHe smiled back at me and I was sure he must think me very foolish for making such a request but I was wrong.\n\n'If that's what you want Beth, of course I'll only cum in you,' he said softly, stroking my hair. 'I can't think of anywhere else I'd rather cum anyway.'\n\n'And what if Neil wants to have sex with me?' I asked.\n\n'I think it's only fair that the same rules apply, assuming you want to have sex with him,' he replied.",
        "'I've never actually met him so I don't know what he's like but Diane says he's a good looking guy and she generally has good taste so I suppose it's a possibility that I might fancy him,' I shrugged, 'just not as much as you.'\n\nFeeling a lot happier about things now, we picked up our pace towards Diane's house for what I was sure would be a memorable evening and when we arrived I saw Neil's car in the driveway. I wondered if they were already getting warmed up inside and realised that my conversation with Andy had already made me wetter than I had anticipated.\n\nNervous introductions were made and we all gratefully took a drink to help steady our nerves, though Diane seemed surprisingly relaxed. It seemed reasonable to suppose that this wasn't the first time she'd done something like this and I could barely believe that this friend was the same person I knew just a few short months ago. In actual fact, after the first fifteen minutes that initial nervousness seemed to disappear and we all started to get on very well. The conversation was easy and relaxed with lots of laughter so in many respects it felt like an evening any two couples might enjoy together. I was pleased to see that Andy and Neil seemed to get on well together so while they were busy talking about football, I went to help Diane get some more drinks.\n\n'I think this could be a very successful evening,' Diane beamed as soon as we were out of earshot.\n\n'Yes,' I agreed, 'it's going far more smoothly than I anticipated.'\n\n'Andy seems like a really nice guy,' she went on, 'and good looking too.'\n\n'He certainly is,' I smiled back at her, feeling pleased that my friend appreciated the merits of my young lover.\n\n'Now that I've met him, I certainly wouldn't mind having him give me a good seeing to,' she smirked, 'especially if his cock is as nice as you claim.'\n\n'It is,' I confirmed, 'but let's just wait and see how things go as it's early yet.'\n\nI'd known almost immediately that Diane wanted to try Andy, judging by the twinkle in her eye as soon as she saw him, so her revelation was no real surprise. For my part, I'd been looking over Neil very carefully and I was impressed with what I saw. He looked like he took care of himself so for a man knocking 50, he had quite a well-toned body. His hair had a little grey starting to come through at the temples but unlike Andy, he had a full head of hair. He had quite broad shoulders and a friendly face that seemed to have a constant smile on it so he invited confidence and warmth. Had I met him instead of Andy on that fateful day, I had no doubt I would have been quite happy to have him as a lover but it didn't make me want to lose Andy. He was too good! Nevertheless, as nervous as it made me feel, the idea of having sex with Neil wasn't an unappealing prospect and Diane seemed to be reading my mind.\n\n'So what do you think of Neil?' she asked.\n\n'He seems a nice man and certainly good looking so I can see why you're very happy with him,' I replied quite honestly.\n\n'Would you like him to fuck you tonight?' she asked, far more directly than I'd anticipated.\n\n'Well, let's see what happens Diane,' I said, blushing. 'Though I don't think it's the worst thing that could happen to me,' I added mischievously.\n\n'Good!' she beamed. 'I think we're all going to have a great evening together so let's get back to the men and move things along,' and with that she marched back into the living room, clearly with a plan in mind.\n\nAs soon as she'd handed out the drinks, Diane put some music on and dragged Neil up for a dance. The music was slow and seductive, encouraging a closeness that I felt sure was key to Diane's scheme. Andy and I cuddled on the sofa while we watched them dance and it wasn't long before their tongues were exploring each other's mouths and their hands were beginning to roam. Even in the dimmed lighting I could clearly see Neil squeezing Diane's breasts and letting his hands wander down to grab her bum and hold her close. Diane certainly wasn't objecting to his attentions and even over the soft music we could hear her moans of approval. Suddenly breaking their embrace, Neil came over to where we were sitting.\n\n'Might I have the honour of a dance?' he asked, offering me his hand.\n\n'Certainly kind sir,' I replied, getting up to join him.\n\n'Well, in that case I hope Andy will dance with me then,' pouted Diane, looking a little put out, even though I had no doubt at all that this was her idea.\n\n'Of course Diane,' he replied, 'I wouldn't see a lady abandoned.'\n\nThe music stayed slow and sensual so Neil was soon holding me close and looking out of the corner of my eye, I noticed Andy doing the same with Diane.\n\n'You're a beautiful woman Beth,' Neil whispered into my ear. 'Andy's a lucky guy.'\n\n'I think I'm the lucky one given what an old woman I am,' I replied.\n\n'He seems a very decent man, I like him a lot. You make a good couple,' he said.\n\n'So do you and Diane. A couple of months ago I'd have laughed at the idea of such an age difference and I never would have believed such good looking young men would be interested in old women like us,' I confessed. 'I know it's primarily based on sex but it does seem to work very well for us all.'\n\n'There's nothing wrong with enjoying sex and you're both very sexy women,' he replied, kissing my neck softly.\n\nI love having my neck kissed and I wondered if Diane had primed him with this bit of information. Shivers of excitement ran through my body at the thought of what was going on here. I was still far from convinced I'd go through with this but for now it all felt quite comfortable and natural so I decided to let things continue as they were. I looked up at Neil and kissed him. He responded immediately and I was happy to relax my lips and allow his tongue access to my mouth. Almost immediately his hands dropped to my bum and he squeezed it as he drew me towards him. I could feel the outline of his cock against my stomach and I wondered if this was still from his dance with Diane or if he was responding to me. It seemed reasonable to conclude it was a bit of both. Just as he did with Diane, one of his hands soon slowly moved up my body and cupped one of my breasts, massaging it gently. I surprised myself by feeling remarkably comfortable with this development and I pushed my chest towards him to indicate my approval.\n\nI sneaked a glance over towards Andy and Diane and I was pleased to see something similar happening over there except that Diane, being more forward than me, had her hand on the front of Andy's trousers. As they moved around she looked at me and mouthed 'Wow!' so she evidently approved of the package she found there. I felt a tinge of jealousy but decided I was being silly as he had already promised that whatever happened he would mostly be with me tonight and he would only cum in me. I would always have something special.\n\nAllowing my attention to move back to Neil, I noticed that he'd undone a couple of buttons on my blouse so that he was now able to touch the bare flesh of my breasts. He lowered his head and kissed the exposed top of my mounds and a good part of me hoped he'd go further as my nipples were aching for attention. Sure enough, he continued to unfasten my blouse and before long it had been discarded to the floor. My skirt soon followed and not to be outdone, I quickly removed his shirt to discover a strong, smooth chest that did seem very manly and I couldn't help imagining my breasts pressed into his chest as he fucked me. Perhaps I was more ready for tonight than I had allowed myself to imagine. We kissed passionately and as we did so, he expertly flicked my bra open with one hand. I stepped back a little bit and looked into his eyes as I removed it and threw it on the floor to join my redundant blouse.\n\n'You have beautiful tits Beth; they're perfect,' he said as he squeezed one of my nipples between his thumb and fingers.\n\n'Thank you,' I gasped, enjoying his touch, 'they do enjoy a bit of attention.'\n\nWith that, he lowered his head and took a desperate nipple into his mouth and started to suck. I held his head there, not wanting to lose the delicious contact and I sighed as he flicked his tongue over the end of my very erect nipple. Diane was in a similar state of undress by now but she had already unfastened Andy's trousers and had her hand inside. Something told me it was time for me to find out what sort of equipment Neil was packing and I allowed my hand to roam to the front of his trousers. There was a very hard cock there that felt like it was a good size and I was aware that I was becoming very wet at the prospect that tonight it was perfectly possible for me to enjoy two fine specimens of manhood if I chose to do so.\n\nAndy and Diane had 'danced' their way quite close to us now and Diane was kissing her way down Andy's body to her knees. I immediately knew what her intention was and as nervous as I was, I decided to follow suit. Neil's trousers came down with me and I found myself kneeling in front of him, the large bulge in his briefs right in front of me. By this point I was madly curious to see Neil's cock but as I was new to all of this, I decided to just kiss around the area while I stole furtive glances at what Diane was doing with Andy. Rather predictably, Diane was suffering from no such inhibitions and had already pulled Andy's cock out and was busy stroking it in her hand.\n\n'You're right Beth, he has a fantastic cock,' she said, looking over at me and winking. 'I think I'm going to enjoy sucking this monster,' and with that she engulfed the head of his rod and started to suck it enthusiastically. Andy's eyes closed in pleasure and he was clearly enjoying the sensation of having Diane's mouth around him. To her credit, she was taking an awful lot of him and almost certainly more than I'd been able to manage so once again there was a tinge of jealousy but at this stage it wasn't enough to make me stop. Andy had always complimented me on my ability to give head so I decided to do my best with Neil instead of worrying about what Diane was doing with Andy.\n\nPulling down Neil's briefs, a very impressive cock sprang into view. I'd guess he was a little smaller than Andy but still at least 7 inches and with a slight upward curve to it. The most important thing was that he was very hard and had good girth so I had no doubt that I would enjoy what he could offer. I kissed and licked his balls before licking all the way up the underside of his cock and then swirling my tongue around the swollen head. Finally, I kissed the tip before slowly sliding my mouth over him and starting to suck. I moaned on his cock with the pleasure of having another new male member in my mouth and the vibrations in my throat made him moan in turn and start to slowly thrust into my willing mouth.\n\nAs much as I was enjoying sucking Neil, before long I wanted to feel Andy in my mouth again. Perhaps it was a little jealousy, perhaps it was because I preferred Andy's equipment and perhaps I just needed to be reassured that he still needed me but letting Neil slip from my mouth, I indicated to Diane that I wanted to swap. She made no objection so we quickly changed positions and finally I could feel Andy pushing his beautiful cock into my very wet mouth. It was like welcoming an old friend home and I was determined to show Andy that nobody could suck his cock better than me. I went to town on him, taking more of him into my throat than I had ever previously managed and he responded by grabbing my hair and starting to fuck my face.\n\n'Oh Beth, your mouth is incredible!' he gasped as he continued to thrust into my mouth and the knowledge that he loved what I was doing so much brought on an immediate orgasm out of nowhere. I'm not sure if it was due to the relief of knowing I could still satisfy him after Diane's clearly expert skills or his sexy words but whatever it was, it induced an orgasm that ripped through my body and soaked my already very wet pussy.\n\nAs my orgasm started to subside, Diane pulled me off him and proudly announced that: 'I think we've both done an excellent job getting these young men good and hard so I think it's time they fucked us with these things; what do you think?'\n\n'Absolutely!' I hastily agreed. My pussy was soaked and aching to be filled by Andy's big cock. I could feel it clenching in its desperation to hold a man in its grip and I knew that at this stage, there was only one thing that could truly satisfy me. We lay down, side by side on the floor holding hands and opened our legs, inviting these men to take us. Andy knelt in front of me and Neil in front of Diane and ran the heads of their cocks between the sensitive lips of our womanhood. It was more than I could stand and I was reasonably sure that Diane would be feeling much the same.\n\n'Please, don't tease us!' I begged. 'Just push those big cocks in us and fuck us.'\n\n'Yes,' Diane screamed out, 'give us the hard, deep fucking we need and make us cum on your incredible cocks.'\n\nWithout another word, both men immediately rammed their entire lengths into us, balls deep and we grunted and moaned in satisfaction at finally being properly filled by them. They settled into a steady rhythm and my pussy was on fire thanks to Andy's thick meat driving in and out of me. I felt Diane's hand gently stroking my face and I looked over at her. There was real love and happiness in her eyes and for the first time, I felt comfortable with what we were doing. She was a great friend and without her I'd still be living a very unfulfilling life so I realised I was sharing her happiness and I yearned to show her what she meant to me.\n\n'Can I try Andy's cock for a while as I helped to get him ready for you and you could try Neil if you'd like?' she asked.\n\n'Of course,' I replied lovingly, 'Andy has a wonderful big cock for you and I'd love to try Neil fucking me.'\n\nOur men didn't need to be asked directly and immediately changed positions, settling themselves between the other woman's welcoming legs. Neil drove his cock into me, just as Andy entered Diane. Being slightly smaller, he didn't quite fill me up as much as Andy but that slightly upward curve of his cock was helping him to massage a totally new spot deep inside me and he felt incredible.\n\n'Oh God, Diane,' I cried out, 'his cock feels incredible and he's fucking me so well.'\n\nDiane's eyes were half closed with pleasure but still locked on mine.\n\n'You were right Beth,' she gasped, 'Andy's got a huge dick and he's fucking me inside out! I'm going to cum on him.'\n\n'Me too!' I gasped and we both cried out simultaneously as Diane came all over Andy's beautiful cock and I came over Neil's. The air was filled with a mixture of our orgasmic release and the squelching sound of big cocks fucking soaked pussies. It was depraved and shameless but also somehow perfect. As I started to come down from my high I began to be worried that Neil might cum inside me and even worse, that Andy might cum inside Diane. I was now far more comfortable with what we were doing but I still wanted a part of Andy all to myself. Andy must have been thinking much the same because as soon as our orgasms began to subside, he indicated to Neil that he wanted to swap again.\n\nIt was a feeling of unparalleled satisfaction to have Andy pushing back inside me again. This was where he was meant to be and I only hoped he felt the same. He did. As he started to fuck me again, he kissed me passionately and whispered in my ear: 'You're gorgeous Beth and my cum is only for you.'\n\nIt was exactly what I wanted to hear and only made my lust for him grow. 'Make me cum on you now Andy and fill me up with all your lovely hot sperm,' I sighed and with that, Andy started to fuck me hard and deep. He rammed his huge cock in and out of me like some sort of piston engine and my pussy involuntarily started to clutch his hardness in a vice-like grip as another earth shattering orgasm ripped through my body. The pleasure was so intense that I couldn't even focus on what was going on around me and as I started to regain my senses I realised that Diane was sucking my left breast and Neil's semi-hard cock was dangling above my head.\n\nMy initial instinct was to push Diane away as I'd never felt any attraction to another woman but once that initial response subsided, I had to admit that I was really enjoying Diane's mouth on my hard and erect nipple. She was sucking me lovingly and I knew that I loved her as a friend in a way I'd never loved another female friend. Diane was a very special friend and a very sexy female friend regardless of age and in that moment, having her suck my tits seemed perfectly natural. I was not only happy for her to continue, I longed for it. The small amount of semen on the end of Neil's cock confirmed my suspicion that he had already shot his load in Diane so I took hold of his wilting member and pulled him into my mouth so that I could suck him clean. He tasted different to Andy but certainly not unpleasant and it was strangely satisfying to be sucking Neil's cock while Diane sucked my breasts and Andy fucked me to heaven and back.\n\nHaving already had some incredible orgasms, I wasn't sure I could take another one but I did desperately want to feel Andy cumming inside me. I briefly relinquished Neil's tasty cock from my mouth to let Andy know it was OK for him to finally find his own release.\n\n'I'm ready for your cum now Andy,' I said softly. 'Cum in me now baby, I need it so badly.'\n\nHe thrust hard and deep inside me, his big cock filling me up completely and then I experienced that wonderful sensation of feeling him releasing his seed into me. Floods of his warm liquid coated my walls and I moaned deeply in satisfaction on Neil's cock as I accepted Andy's sperm into my womb. The combination of oral sex and then full sex with two different women must have really excited him as he came and came in multiple powerful bursts. I could feel the power as each jet shot into me, coupled with the manly throbbing of his cock inside me.\n\nIn the afterglow of our incredible sex session I let Neil slip from my mouth and the men collapsed, in need of recuperation as Andy's seed leaked from my very well fucked pussy, down the crack of my bum. Releasing my nipple from her mouth, Diane moved up to look at me.\n\n'So, was that as bad as you thought it might be?' she asked, smiling.\n\n'No,' I admitted, smiling back at her, 'it was another wonderful experience. I don't think Andy has ever cum as much; it's pouring out of me. You were right about Neil too, he really does know how to use his cock. I enjoyed him fucking me and I loved sucking him hard for you.'\n\n'You did a great job and Andy certainly stretched my poor old pussy to its limit,' Diane replied.\n\n'I owe it all to you Diane,' I smiled. 'If you hadn't pushed me into this, my life wouldn't be half as good as it is now. I love you, you know that don't you?'\n\n'Yes, of course I do,' said Diane. 'Would you mind if I kissed you?'\n\n'I've been lying here hoping you would,' I replied, blushing slightly.\n\nDiane leaned in and we kissed properly for the first time and it didn't feel strange or wrong at all. Our tongues danced together and almost without thinking, my hand wandered to Diane's breasts and I played with her nipples. Breaking our kiss, I moved to take one of Diane's nipples into my mouth and she immediately moaned her satisfaction at the contact. As I might have expected, she wasn't content to let things stop there and by this stage, I was more than ready to try anything and just see where it took me.\n\n'Will you do something really naughty for me Beth if I tell you it's something I'd really like to do?' she asked, more tentatively than I'd ever heard her be before.\n\n'I think at this stage I'm willing to try most things,' I smiled back, kissing her again.",
        "'Will you let me lick your pussy? I'd love to pleasure you that way and I'd also love to taste Andy's cum in you.'\n\nA wicked thought suddenly crossed my mind.\n\n'Only if I can do the same to you,' I replied and with that I moved on top of her in a 69 position. Her pussy was almost entirely shaved, similar to mine and for the first time in my life, I saw beauty in a woman. Diane's wonderful pussy had given pleasure to both Neil and Andy tonight and I suddenly needed to feel what they had felt. I slipped a finger inside and marvelled at its smoothness. The lubrication from her own orgasms and Neil's cum helped of course and I quickly added a second finger and started to plunge them in and out of her. She moaned with pleasure and I suddenly felt her kissing the lips of my pussy. It was tender, soft and loving. Her touch was neither better nor worse than a man, just different and I was thrilled by the differences she brought. She licked along the length of my slit a couple of times before starting to push her tongue inside me. A shudder ran through me at the contact and I almost squealed with delight.\n\nI desperately wanted to give her some of the pleasure she was giving me so I pulled her pussy open and licked hard along her opening. My tongue swirled around her hole before settling on her clitoris and sucking it into my mouth. It was clear that we were both enjoying this new experience and we were grinding our crotches into each other's faces, searching for our release. It came in a slow but intense orgasm that was again, different to those I'd experienced with a man but certainly not worse.\n\nAs I slowly came down from my high, I noticed that Neil was kneeling in front of me, stroking his rapidly hardening cock. As much as we were enjoying our 'girl time' I knew that Diane and I would always primarily enjoy a nice hard cock so I willingly took Neil's pole into my mouth to finish getting him ready for Diane. It was so intense to feel his cock growing in my mouth and a part of me didn't want to release him, instead almost hoping I could adapt my agreement with Andy and let Neil cum in my mouth. Instead, I reluctantly released him from my mouth and guided his cock to Diane's beautiful pussy. I rubbed the head of his cock along her slit and she groaned her approval as she realised what she was about to receive. It was all the signal that Neil needed and he steadily sank his cock deep inside her. It was so erotic to see my friend's pussy being stretched open by this invading monster and watch it driving in and out of her. I loved feeling Diane using her expert mouth on my own pussy but seeing this made me realise I needed Andy's glorious cock in me again.\n\nAndy and Diane must have been having similar thoughts because just at that moment I felt Andy's hands on my hips and then that wonderful feeling of a big cock sliding effortlessly into my depths, opening me up and caressing the walls of my womanhood with its wonderful ridges and veins. It's a feeling any woman could relate to and is surely the essence of the wonder that is a man. Having witnessed how erotic it was to see a cock filling a pussy at close quarters, I almost envied Diane the view she must be getting of mine being filled by Andy's even bigger cock. It felt positively animalistic to have my head down, licking another woman's pussy while she was being fucked and my bum in the air, giving my pussy to my own man for him to use for his pleasure. I was more than ready for him having cum so much already and I gratefully accepted him into my body and moaned loudly while I licked both Diane's clit and Neil's cock at the point they joined. Andy wasted no time in ramming his big cock into me all the way and my pussy quivered with the pleasure of his long, deep strokes.\n\nBelow me, Neil pulled out of Diane and offered his glistening tool to my waiting mouth and I eagerly sucked on him, relishing their combined taste and then, all too soon, he was pushing his lovely cock back into Diane's grateful hole. At first I thought that Andy was going to do the same when he suddenly withdrew from me but instead, Diane clamped her mouth to my dripping hole while Andy pulled the cheeks of my bum apart and started to lick my rear hole, probing it with his tongue. As his magical tongue swirled around my anus, I couldn't deny the fact that this felt incredibly good. Once again I experienced that same strong urge to push back.\n\n'Oh God, Andy!' I whimpered as I couldn't stop myself pushing back to meet his tongue. The sensations flooding over me were indescribable and I was soon building to orgasm. As Diane probed my pussy with her tongue and sucked on my sensitive clitoris, Andy's tongue lashed my anus. I'd love to say that I was still giving Neil's cock and Diane's pussy loads of attention but such was the pleasure and desire coursing through my body, it was all I could do to vaguely hold on to reality. 'Fuck me; please, fuck me!' I whimpered and at this stage I was rapidly becoming indifferent to which of my holes he decided to take.\n\nIn the next moment his cock was effortlessly sliding back into my pussy, so deep that I could feel him hitting my cervix and the experience of being taken so completely overwhelmed me. Another huge orgasm consumed me and I started to lose focus on my surroundings. I was brought back to reality by the feeling of a cool liquid being rubbed into my anus by Andy and almost immediately he pushed his thumb into me but this time, not just to the knuckle. To my delight it went further.\n\n'Yessss!' was all I could say. He'd teased me with his thumb so many times and I'd learned to love the experience to the extent that I'd started to long to experience him penetrating me there. Having his thumb buried in my rear hole felt odd but also just as pleasurable as I'd come to expect from his previous explorations there. It felt strangely satisfying to finally feel something inside me there.\n\nRealising I wasn't objecting in any way, Andy started to fuck my soaked pussy again and soon afterwards, began to slowly move his thumb in and out of my very inexperienced bum. I gradually started to get some sort of grip on reality so through the fog of pleasure that had washed over me, I reverted my attention, as best I could, to servicing Diane and Neil. I pulled him out of Diane and sucked him hard. He seemed to be extremely hard and I could feel his cock start to swell in my mouth so I knew he was close. I didn't want to break my word to Andy and I felt that after all she'd done for me, Diane deserved to feel another load of his cum flooding her insides. I made the decision just in time because as soon as his cock re-entered her, I could see it start to throb and pulsate. He grunted and drove his cock as deep as he could into her as he started to coat her insides with his semen.\n\nNo sooner had Neil finished cumming in Diane, he plunged his cock into my waiting mouth. Tasting the thick sperm that he had just given to my friend, combined with her orgasmic juices induced yet another orgasm in me. I had no idea how many times I could cum like this but I knew I had very little left in me.\n\nAs I came down from my high, I could barely lift my head but I was aware that Andy had removed his thumb from my bum and was applying lots more lube while continuing to fuck me with a steady and satisfying rhythm.\n\n'She's ready,' was all I heard Diane say.\n\nSlowly his thick cock was removed from my thoroughly fucked pussy and Diane's mouth once again worked its magic on my sensitive clitoris. I waited for Andy's cock to return but for a moment nothing seemed to happen as he was apparently busy applying lots of lube to his cock. I felt him repositioning himself on the bed and I shivered with delight as I felt the swollen head of his cock touch my virgin arse. To a degree I was torn between the safe and comfortable pleasure of him fucking my pussy some more and wanting to explore more of these new sensations of having his cock rubbing my backdoor.\n\nFeeling him rub his slippery cock head over my sensitive puckered opening was more thrilling than I ever thought possible and even with something as large as his cock there, I still experienced a powerful urge to push back towards the contact. Instinctively, what he was doing felt wrong because I surely couldn't take his cock there but it also felt tantalisingly good to feel him touching such a forbidden location.\n\n'Do you like that?' he teased.\n\n'Yessss' I sighed, knowing he surely wanted to take my virgin hole now and feeling perfectly content for him to have his way with me.\n\nThe swollen head of his cock gradually centred on my tight virgin hole and he applied a little pressure to the opening. I gasped with delight at the wicked sensation and started to wonder if his large cock could actually fit in my virgin bum but I was getting beyond desperate for him now and all I knew was that I needed to feel him shooting his young sperm into my body. The pressure on my opening became more sustained and that powerful urge to push back onto his weapon returned. He seemed to sense my building desire and curiosity. The pressure increased so that my bum just started to open for the tip of his cock.\n\n'Are you wanting me to go further right now when you feel my cock against your beautiful arse?'\n\n'Yes!' I cried as I reached back to spread my cheeks and pushed back towards him.\n\nAndy pushed forward and my tight anus resisted, protested and then gave way as the fat head of his cock popped inside me. There was a sharp pain as he entered me but it wasn't as bad as I expected. Diane's attention to my highly sensitive clitoris helped to distract me and with Neil's cock having disappeared while I was focusing on what Andy was doing, I started to eat Diane's pussy feverishly. He paused for a minute, allowing me to adjust to the new experience and after a while he must have felt me relax a bit as he pushed further forward, forcing more of his cock into my virgin ass and it was already starting to feel very good indeed. His advance was slow, steady and relentless as inch after beautiful inch of his incredible cock was forced into my grateful arse.\n\nI finally released the cheeks of my bum when I felt him reach his full depth and the feeling of fullness was intense. Just a few short weeks ago I'd never even considered anal sex and I certainly wouldn't have believed it was something I'd ever try myself yet here I was with a big hard cock buried deep in my ass and I was loving it there. I felt completely full of cock and my tight puckered hole was stretched to its limit but it felt oh so good to be stretched around this hard, thick flesh. Diane continued to play with my clitoris and I had little doubt that I would be cumming again before Andy was finished. In that moment I realised that I wanted nothing more than to feel Andy ploughing his wonderful cock in and out of my old virgin hole. I wanted to be the slut I'd never been before, I wanted to be more submissive than I'd ever been before and I wanted all of my holes used like they'd never been used before. I started to grind my backside onto his cock, letting him know that I was ready for the fucking he wanted to give me.\n\n'Fuck me!' I cried. 'Fuck me with that fantastic hard cock of yours and take my 68 year old cherry.'\n\nSlowly and steadily he withdrew his cock almost all the way and then firmly pushed it all back into my bowels. He kept repeating that glorious sensation, gradually increasing the urgency of his thrusts as my anus adjusted to the assault it was getting from his thick rod. I found myself pushing back to meet his thrusts as my orgasm again began to build. The illicit nature of our anal sex was thrilling in itself but feeling my anal ring stretched so tightly around his shaft was incredibly satisfying. He'd filled my pussy completely with both his cock and then his semen and now my rear felt completely stuffed with his large cock. God it felt good! I'd loved feeling him cum inside me before and I was sure it would feel just as good when he came in my ass.\n\nIt wasn't long before he was fucking me as hard as if he'd been in my pussy and I pushed back hard to meet every thrust he gave me. The tightness meant I could feel my ring ripple over every vein on his thick shaft and it was the most exquisite feeling imaginable, especially with Diane eating my pussy. I now yearned for him to cum in my ass as much as I had previously needed him to cum in my mouth and in my pussy. I was taking the full length of his cock and he was fucking me hard and deep but my forbidden hole wouldn't truly be his until he had cum inside me.\n\n'Cum for me Andy,' I screamed. 'I need to feel you cumming in my virgin arse and making it yours. I'm almost there!'\n\nHe started to really pound me hard now as he sought his release and the harder and faster he fucked me, the better his incredible cock felt. I had no idea that having a big cock in my arse could feel this good but I was taken to heaven every time he pushed his length all the way into me. Suddenly he rammed into me as far as he could go and held it there. I could feel every inch of his cock as it throbbed and pulsated, shooting jet after jet of his hot cum into my bowels. I could feel the warm liquid coating my insides and this new sensation pushed me over the edge. My ass gripped his cock like a vice as I came hard, gushing my juices all over his balls and Diane's face as he unloaded into me.\n\nWe were both panting hard as our joint climax subsided and as Diane climbed out from underneath us, we collapsed onto the floor, exhausted but very satisfied. His cock stayed in my arse but I could feel it gradually shrinking inside me. Finally he slipped out of me and I could feel his essence leaking out of my well used, very contented and no-longer virgin hole.\n\nI reflected that something must have changed in me in the 15 years my sex life had been on hold because this night had been one of a few unexpected firsts and they'd all been incredible. I'd certainly never needed to feel a man cum in me before in the way that I yearned to feel Andy's young and potent sperm shooting inside me. I'd felt every jet of cum in both holes and relished every last drop he could give me. He'd fucked me better than I could ever remember and it meant more to me at 68 years old than it had when I was in my twenties. I was more eager to please at this age, more willing to experiment and I appreciated the special pleasure of sex more, perhaps because at my age I was more aware that I had less time to enjoy it.\n\nOne thing was sure as I lay there in Andy's arms with Diane and Neil close by; there was no going back for me now. I was already looking forward to the next time that Andy would fuck me hard and give me his cum in all of my holes but it was also more than that. I looked over at Diane and Neil and felt a very special bond with them both. I knew I'd never be able to repay Diane for what she'd done for me but I would give her as much pleasure as I could in order to try. Experimenting with sex with her would surely be a lot of fun and providing Andy had no objections, I was also looking forward to trying Neil's cock again as well.\n\nIn a peculiar way, this strange evening with the four of us hadn't threatened what I had with Andy at all; it had made our bond stronger. I'd seen him fuck Diane and I'd let him see Neil fucking me yet I was now more sure of my bond with Andy than I ever had previously. I was confident that what we had was very special and just because he might sometimes fuck Diane while I was there and I fucked with Neil, it didn't mean we weren't utterly devoted to each other's happiness and pleasure. Andy was MY partner and I was his and whatever else we did, that would never change.\n\nI've been seeing Andy for more than a year now and we meet regularly, including in my own home and in my own bed. We still see Diane and Neil too, getting together with them a couple of times a month for some really sexy fun. There have been a few momentous milestones along the way, such as the first time I spent an afternoon in Diane's bed while our studs were at work. I still have no particular attraction to other women in general but my bond with Diane has become very special and I just love to explore her body and make her cum. There was also the first time I allowed Andy to cum inside Diane. He'd fucked her many times but he'd always had to withdraw and finish up in me and although that was what we both liked best, I loved the look of satisfaction on his face when he was finally able to unload deep inside Diane, who had come to mean almost as much to him as she did to me. I could relate to how he felt because I knew the deep sense of satisfaction I felt when I finally felt Neil's semen shooting deep inside me. Since then, Neil has also had my arse, just as Andy has enjoyed Diane's so all in all, we're deliriously happy. Andy is one of my best friends but more than anything, he's my young stud lover and now that I'm approaching 70, I'm enjoying having a man fuck me more than any other time in my life. Men seem to lose their sexual ability as they get older but I feel that mine is stronger than it has ever been. An older woman with a younger man is a magical combination. "
    ],
    "authorname": "Pussymad42",
    "tags": [
        "older woman",
        "couples",
        "foursome",
        "anal"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/just-when-i-thought-it-was-over-ch-02"
}