{
    "title": "Webslut Madison Ch. 25",
    "pages": [
        "Within a couple days, Madison's life seemed to return to normal. Or, at least, normal for her. She continued wearing revealing clothes, but she didn't post anything on social media. Everything was normal until a couple days later, when Alyssa sent her a text and invited her to join a fetish networking site.\n\n\"What's this?\" Madison asked.\n\n\"It's a website. You can connect with other people like you. Into humiliation and degradation and exhibitionism.\"\n\n\"Oh, that would be awesome!\" Madison didn't even know anything like that existed.\n\nWithin twenty minutes, Madison had created a profile. She uploaded a few pictures - mostly the same ones she had uploaded to the porn site, a couple of bikini pictures and a couple in slutty outfits and then some nudes.\n\n\"Hi. I'm Madison,\" she began on her main page. \"For a while I've had fantasies about being totally exposed and ruined forever. I've don't a decent amount already but always looking to do more. My biggest fantasy is to do things that are really risky and get my name out there and become famous for being a slut.\"\n\n\"I'm also into degradation and humiliation. I love being called slut, cunt, whore, bitch or any other names that reflect who I really am. Talk nasty to me, I love it! And I like anal, having my face slapped, occasionally having sex with people I'm not supposed to want (think: old, fat, other girls, strangers) and trying to wreck my throat permanently. LOVE exposing my body for all to see and being told what a stupid whore I am for liking it so much!\"\n\nI have lots of filthy fantasies, too many to list here! Come on by and talk about them with me! Or just stop by and slut shame me if that's your thing, the nastier the better! I get off on it! Basically, the more humiliated I feel the harder I cum. Or if you really want to get my attention, let's talk about exposing me everywhere and everyone I know finding out what a slut I am! They'll never look at me the same!\"\n\nMadison saved it and just sat there at her computer, wondering what would happen next. She started browsing profiles, looking at pictures. Some of the things she saw shocked even her - pictures of guys dressed up as sissy maids, videos people drinking piss, a girl who called herself a free use slut and put in her profile that she would have sex with anyone that wanted her, no questions asked. She saw sluts, slaves, masters and mistresses, and more.\n\nIt didn't take long for the first messages and comments to come rolling in. Some were a little more innocent or even complimentary, others were not.\n\n\"Mmmmm your pussy looks delicious, can I bury my face in there?\" One guy said. \"Meet me in an hour!\" Madison wrote back. She reached her hand into her jeans, the thought of fantasizing with the guy starting to arouse her.\n\n\"Wow. You have a perfect body!\" One said.\n\n\"That ass looks like it's begging to be abused,\" she read. \"Abuse me, sir!\" She wrote back.\n\n\"Such a dirty little fuck toy slut,\" the next one said.\n\n\"I know it! Thanks babe, love hearing how slutty I am!\"\n\nMadison kept scrolling through the comments. It was a good mix of compliments and guys telling her she was a slut, with a few others mixed in. Then the DMs started coming too. This was a little different, mostly guys asking if she was available to fuck and if she wanted to meet, or writing a two-page elevator speech (which was probably canned, she thought) telling her how they wanted to own her body and that they could give her something nobody else could. Probably mostly fakes, she thought.\n\nOne of the comments suggested that she set up a FAQ page where people could ask her questions and she would answer them. Another asked if she was open to receiving tasks, dares, or suggestions for things she could do - for example, ways she could tease her nipples or ways she could expose herself in a daring way. These ideas she liked, she'd save them for later, she thought. But she had to go to class, so she closed the computer and left.\n\nThat day, Madison wore a level 1 top - nothing too revealing, it was basically a short cropped hoodie and a pair of leggings. She did let her thong hang out in the back, though. Nothing out of the ordinary happened in class, either - of course, guys and girls were staring, but at this point, in early February, she was a month into dressing like a slut 24/7 and stares were part of the norm.\n\nSitting in class, she couldn't wait to get back to her apartment and jump back on the website. But when she did, she was shocked. She had a few more photo comments, a few dozen messages, and even more likes. Unbelievable!\n\nMadison barely read the comments, she just didn't have time. She responded to one or two that really got her attention, that was all. Same with the messages. And then she went to work on her FAQ.\n\n\"Someone suggested I set up a leg where I will answer questions about myself. I'm just trying to keep all the Q&A in one place and not have to answer the same questions over and over. Ask me anything'! I'll answer everything within reason!\" She posted it and waited for comments.\n\nMadison also posted a task/dare page. \"College slut looking for tasks and dares. Make me feel like a nasty little slut for you! If I like it, I'll do it. And nothing boring! I've already worn my butt plug to class, \"forgotten\" to wear panties under my skirt, and written humiliating things on my body, so please make it interesting!\"\n\nSoon, the questions started rolling in on the Q&A, and she started to reply.\n\nQ: \"How many guys have you slept with?\"\n\nA: \"Depends. Full anal/vaginal with just guys? I'm guessing 20 to 25. But at least 11 or 12 in the past year alone. And I've blown a few more and had sex with a few girls.\"\n\nQ: \"When did you first realize you were a slut?\"\n\nA: \"Probably my third year of college when I started posting risqu\u00e9 photos on the internet\"\n\nQ: \"what's the sluttiest thing you've ever done?\"\n\nA: \"depends, but probably getting fucked by 7 guys in the same night. 6 guy gangbang followed by one more after\n\nQ: \"What to you find attractive in a guy?\"\n\nA: \"Assertive, takes what he wants, humiliates me, calls me nasty names. Uses me. That matters more than looks or age or even cock size.\"\n\nQ: \"How many girls have you slept with?\"\n\nA: \"at least 2 or 3 that I can think of at the moment\n\nQ: \"What's your favorite way to masturbate?\"\n\nA: \"Plug in my ass, clamps on my nipples, dildo in my throat in front of an audience.\"\n\nQ: \"How many people have seen you naked?\"\n\nA: \"In person? Probably 200-300. Probably as many as 400 have seen just my tits. Online? God, who knows, could be as much as a million. Wow, I sound like an exhibitionist freak!\"\n\nQ: \"I read your profile. Have you ever been exposed to a friend or family member?\"\n\nA: \"Just a couple friends. They both fucked me after, different occasions.\"\n\nQ: \"What toys do you have?\"\n\nA: \"three dildos, nipple clamps, plug. Maybe I should get more?\"\n\nQ: \"What are you wearing now?\"\n\nA: \"cropped hoodie, about four inches of my stomach exposed. leggings with my thong sticking out so everyone can see. Wore that to class today.\"\n\nQ: \"Do you consider yourself a sub, slave, slut, or something else?\"\n\nA: \"I'm not owned and don't consider myself a slave, but might consider it someday. I'm definitely more sub than not and tend to submit to whoever I'm sleeping with. But mainly I consider myself a slut.\"\n\nQ: \"When was the last time you had sex, and what happened?\"\n\nA: \"like 3 days ago, with a girl after class. I ate her ass and she ate my pussy, it was amazing!\"\n\nQ: \"Have you ever tried watersports? Been peed on, peed on someone, wet yourself? Tasted/drank piss?\"\n\nA: \"Nope. Ewww to the drinking part too. That's too much for a sweet girl like me ;)\"\n\nQ: \"Do you enjoy pain?\"\n\nA: \"Sort of, not for the pain itself but more for the humiliation and degradation aspect of it. Love having my face slapped. Don't mind being spanked. But I don't want to be beaten or anything.\"\n\nQ: \"What's your biggest fantasy?\"\n\nA: \"being completely and permanently exposed as a webslut and having everyone I know or ever will know find out about it.\"\n\nQ: \"what state do you live in?\"\n\nA: \"Illinois\"\n\nMadison was rubbing her pussy at this point, aroused by revealing so much about herself to complete strangers she would never meet. However, she decided she had enough of the questions for a while and switched over to her dares. Reading them, most of them seemed pretty boring despite her caution against boring her. They wanted her to wear nipple clamps to class, to spank herself ten times. Some wanted her to flash her tots at her window, some wanted her to blow a random guy.\n\n\"I've done basically all of these in one form or another. I wore clamps under my graduation gown (bachelors degree, I'm a masters student now). Flashed at windows. Flashed in auditorium. Blown multiple strangers. Any others?\" She was starting to see the problem - they had no idea what she had been up to for the last couple years and were either treating her like a total newbie, or going too easy on her, or, in the case of the guy that wanted her to shove her head in a public toilet to humiliate herself or put a bowling pin in her pussy, gross or weird. She decided to add some more to her profile.\n\nFirst, she went to her main profile and updated it. It was time, she decided, to embrace her Webslut Madison identity here.\n\n\"I'm already fairly exposed. I have lots of amateur porn videos and pictures on the net. I'm known as Webslut Madison. Find my videos and photos. It's not hard. Send me a message and let me know you've seen me online. It makes me super excited! Or tell me what your favorite video was! Also - for people trying to dare me, you might want to check that out to get an idea of what I'm into and what I've already done.\"\n\nThen, she navigated over to her dares page.\n\n\"Update: I'm getting basically two kinds of dares here - some are boring (no offense). I've already done a lot, really. Just look up Webslut Madison (that's me!) and you'll see what I mean. Just trying not to have a bunch of people daring me to do things when there's already a video online of me doing basically the same thing.\n\nThe other kind of dares are the weird/gross kind. I'm not drinking piss, licking toilets or eating anything that has been in my ass. Sorry to disappoint, but ewww! And I'm not putting bowling pins or other unusually large objects in any of my holes. They wouldn't fit anyway! Just because I'm a slut and I like being used doesn't mean I'm loose and worn out, and I'd like to stay tight so I can please cock! ;)\n\nI suggest looking over the Webslut Madison material, I really want dares on how to humiliate myself, degrade myself, and expose myself. So I can get off to it! Not hurt myself, stretch myself, permanently disfigure myself, end up in the hospital, or bore myself to death!\n\nThanks! Best dare today gets a video of me doing it uploaded here!\"\n\nMadison then navigated back to her Q&A. She started to touch herself as she again exposed herself - in writing - to strangers.\n\nQ: \"what are you studying?\"\n\nA: \"I'm getting my masters in education.\"\n\nQ: \"Where do you like a guy to cum?\"\n\nA: \"In me, on me, in my mouth. Or while he's looking at a picture or watching a video of me online! I don't care, just cum! I do like to swallow it though.\"\n\nQ: \"Have you ever worn adult diapers?\"\n\nA: \"nope. Not my thing really\"\n\nQ: \"Can you reply to this and degrade/insult yourself?\"\n\nA: \"not really what this is for! But while I'm typing...I'm a slut. A filthy, dirty slut who is begging to be exposed and objectified. I'm a nasty little whore and I'm begging for more!\"\n\nQ: \"Where do you go to school?\"\n\nA: \"This is a little creepy. Although if you really want to know the answer, I think it's in one of the Webslut Madison videos...\"\n\nQ: \"How exposed have you been in the past? Do you genuinely want to be exposed or is it just a fantasy?\"\n\nA: \"I'm presently very exposed, but it can get much worse (better?). Just do an internet search for Webslut Madison. And I used to think it was just a fantasy but now I realize I crave it and I can't live without taking it as far as it can go...\"\n\nMadison started to rub her pussy more forcefully after typing that. \"Ohhhh,\" she moaned. \"Won't you help me take it as far as I can?\"\n\nShe got up and made a sandwich for dinner, ate, and showered, before coming back to the computer wearing just a bra and a pair of panties.\n\n\"You say you always dress like a slut. How about taking daily photos showing us what you're wearing to class?\" A darer suggested.\n\n\"Definitely can do this!\" Madison wrote back.\n\n\"I dare you to strip down in an empty classroom at your school and make a little intro video for us.\"\n\n\"Wow, not bad. I'll think about this!\" Truthfully, Madison was already aroused at the thought of doing it. She knew she would need some help, but she thought maybe Alyssa would help her with it.\n\n\"I like the idea of you writing Webslut Madison on your stomach and wearing it to class so the whole class finds out about you. So I'm daring you to do it!\"\n\n\"I have thought about this for the past three days nonstop! And I want to do this soooo bad before school is over in a couple months! Probably have to have a few drinks to get my courage up first, but I know I need this! :)\"\n\n\"Get a tattoo that says 'slut' so you are permanently marked as what you are.\"\n\n\"This is such a hot idea! Probably will remain a fantasy at least for now. You know, just in case I grow out of the phase I'm in and stop being a slut!\"\n\n\"I dare you to post nude pictures to your social media accounts.\"\n\n\"Ummm no, not trying to get banned.\"\n\nThis time, the person submitting the dare posted again just moments later.\n\n\"Ok, you want exposed, right? How about you just post something like 'I'm a slut, come use me' or 'I'm Webslut Madison, please expose me everywhere' and leave it up for 15 minutes and then take it down?\"\n\n\"I did something similar a couple times already. That's how 2 of my friends found out about me and then they both fucked me.\"\n\n\"Ok, then how about you leave it up longer? Or permanently? Or give someone on here links to your social media so they can post it and tag you when you least expect it?\"\n\n\"God, that's fucking hot. Maybe. I don't want to do it myself though. I really just want someone to take over and give me no way out and no chance at a normal life anymore.\"\n\n\"Ok well if you're interested let me know.\"\n\n\"I'm stroking my clit right now thinking about it. Makes me sooooo horny! So risky! Not sure if I could actually bring myself to do it but I want it so bad!\"\n\nThen another dare came in. \"I dare you to post pictures of your ID (drivers license and school IDs) to your account here so anyone can see.\"\n\n\"Wow. Sounds a little risky and probably really stupid to do that. I'm in!\"\n\nMadison stood up and located her wallet inside her purse. She pulled out her drivers license and quickly snapped a photo of the front. She used the camera app to put a black mark through the day and month of her birthdate, and through her address and license number as well. But her picture, full name, and birth year were all clearly visible, as well as her state of residence. She then grabbed her campus ID and snapped a picture of that as well, blocking out her student ID number but leaving the rest intact.\n\n\"God, this is probably really stupid,\" she thought. \"Someone gets a hold of this and - fuck! I don't even know! But I guess not knowing is the best part!\"\n\nMadison stroked her pussy as she logged in to the website on her phone. Moments later, both photos were uploaded and viewable by all members of the site. Madison sat back and smiled, stroking her pussy through her panties. \"Ohhhhh God, what if someone sees me and recognizes me? God, that would be so hot!\" She decided then to go back and add captions to the photos: \"expose me for real?\" She put on her drivers license photo. And on her college ID photo, she wrote \"if you recognize me from real life, please let me know! I find the idea of that so hot and I'd probably have to do some crazy things to keep your big mouth shut ;)\"\n\nMadison looked and she was up to 300 followers already. She decided to make another post. \"Expose me?\" It was titled.\n\n\"Anybody want to find my personal social media accounts, you could have a lot of fun with me there...\"\n\nA moment later, she navigated back to her dare page. \"How about a picture of your thong sticking out while you sit in class with a plug in your ass?\" One dare suggested. She replied that she would try, and went over to her Q&A again.\n\nQ: \"Have you ever slept with a professor?\"\n\nA: \"No, but I would if one of them tried.\"\n\nQ: \"Have you ever tried a tack bra or binder clips on your nipples?\"\n\nA: \"nope. Might try the binder clips though, ouch! :)\"\n\nQ: \"Do you think you'll get exposed to the degree you crave? Like all your friends, family and classmates finding out you are a huge Webslut?\"\n\nA: \"Yes!!! I've accepted that it's going to happen eventually. I don't know exactly when and I don't want to. Part of the fun for me is the anticipation, or else I'd just go ruin myself now!\"\n\nShe stroked her pussy as she picked up her phone again and texted Alyssa.\n\n\"Hey babe, loving this website!\"\n\n\"Awesome! I can see you're getting quite a bit of attention!\" Madison smiled. She almost forgot Alyssa was on the site, but she was glad Alyssa seemed to understand.\n\n\"Yeah - you might have seen a couple dares I sort of accepted, just wondering if you could help me with those?\"\n\n\"Maybe, depends. What do you need me to do?\"\n\n\"The easy one is just take a picture of my thong coming out of my jeans in class tomorrow and send it to me so I can post it.\"\n\n\"Sure, will do! What's the other one?\"\n\n\"To film me stripping down in an empty classroom and giving a little intro speech.\"\n\n\"Wow, Madison! Ummm...\"\n\n\"Please? I don't want to disappoint but I need someone to film!\"\n\n\"Maybe, if you do something for me.\"\n\n\"What?\"\n\n\"For now, I just want you to go on the site and post asking folks to expose you and repost your pictures on the web. Ask them to post the links to where they posted it so you can see. And I can see. And I'll film your nasty little strip tease.\"\n\n\"Yes, Miss ;)\" Madison wrote back. She hopped back on the computer and started to post. \"Expose me everywhere,\" she titled it.\n\n\"Please post me anywhere you want, like other websites, and send links to my exposure in this post so I can see myself getting more and more fucked and ruined!\"\n\nMadison's phone went off. She picked it up, it was Alyssa. \"What are you wearing tomorrow, slut?\"\n\n\"Tight low-rise jeans, thong. A level 3 shirt.\"\n\n\"Good. See you in class!\"\n\nMadison put her phone down and went back to her computer.\n\n\"I dare you to post links to your social media on your page,\" one poster said.\n\n\"No thanks. If you look hard enough I'm sure you can find it anyway. I do want to be exposed but I want someone to have to work for it, to really want to ruin me.\"\n\n\"Here's a task for you,\" the next one said. \"Print out a photo of your body with Webslut Madison written on it and hang it up in the men's room at your school library!\"\n\n\"Ummmm hot? But I'd rather have someone do this for me. And I'd never know because I'm not going to go in the men's room, right? Any takers?\"\n\nMadison flipped over to her Q&A:\n\nQ: \"ever had sex in public?\"\n\nA: \"yes. Backseat of car, at the park...good times!\"\n\nQ: Do you like having sex with strangers?\n\nA: \"Yes!!! It's risky but so exciting and definitely makes me feel like a slut! Like it when they slap and degrade me too! I've been kinda bad about this lately actually...\"\n\nMadison decided she'd had enough for one day and soon went to bed. She didn't even masturbate. God, she was so excited and she tossed and turned but did not sleep well. She was too excited about being exposed even more, about interacting with the people who were fantasizing about her in a whole new way.",
        "The next day, as promised, Madison wore a tight pair of low-rise jeans. Her flat stomach was fully exposed between the hem of her jeans, a good four inches below her bellybutton, and between her bellybutton and her v-neck sleeveless crop top, at least another six or seven inches were exposed. She had an much stomach exposed as possible. And she wore a red thong, which she intentionally pulled out of her jeans in the back, exposing it for all. She didn't even bother wearing a jacket. Madison knew she would look crazy, but she was too turned on to care.\n\nShe snapped a photo of herself and posted it to the site. \"Wearing this to class today. Is it too slutty?\" She smiled and stuffed her phone in her bag and headed out the door.\n\nIf the looks she had received before were objectifying, Madison really felt it now. She saw guys and girls alike staring at her exposed midriff the instant she walked in the door. Part of her even wished she had written \"slut\" on her stomach - shit! She thought. She had been so caught up with the website, she had forgotten to write on herself! Being a slut was starting to take up too much of her brain capacity!\n\n\"Fuck! What was the rule?\" She thought. \"I have to punish myself, and if I remember, they weren't fun!\"\n\nThe thought of it was turning her on. She remembered, though, that she needed Alyssa to take a picture. She turned to her and gave her a knowing look, then pulled her thong farther out of her jeans and leaned forward. She waited for a moment, back arched, her thong a good four inches above her jeans in the back. In a moment, her phone vibrated, and there it was - a picture of her sitting there, surrounded by classmates, her thong visible to all.\n\nMadison smiled a thank you at Alyssa. Now she had to make it through this class so her next adventure could begin! She sat there, wishing she had thought to plug her ass before she left for class. She felt like such an exposed little slut, half her body was on display, and she really deserved it now. It would have been hot for the video too!\n\nMadison eventually got so horny she couldn't help herself. She got up to go to the bathroom, only because she wanted to give everyone an excuse to stare at her body as she walked by. She strutted, her exposed thong grabbing the attention of everyone in the room.\n\nIn the bathroom, she checked her fetish site account on her phone.\n\n\"Put a bunch of condoms, a dildo, a butt plug and a cucumber in your bag. Go to class and let them all spill out onto the floor.\"\n\n\"I'll try this soon,\" she wrote.\n\nMadison looked in the mirror. \"God, I look like a slut!\" She thought. \"I actually wore this to class! How did I turn into this!\" She smiled and pulled her phone back out.\n\n\"Hi, it's Madison. I'm in class - well, I was in class, I just left in the middle because I'm starting to not give a shit about school and I care more about being a slut and showing off!\"\n\n\"Plus,\" she went on, \"I needed to do this!\" Madison slapped her face hard. \"Mmmmm, it's been too long since I've been slapped around and used!\" She slapped herself again. \"And this - I'm wearing this to class. Thong hanging out and all! There's a picture of me sitting in class. What kind of slut dresses like this for class? Slutty little Madison!\" She slapped herself again. \"Oh okay, they're going to wonder where I went. I better get back. But stay tuned because I'm going to strip down in a classroom once class is over!\" She slapped herself again and ended the video and walked back to class, relishing the hungry stares of the guys in her class when they got to look at her fully-exposed stomach head on as she entered the room.\n\nMadison half-strutted back to her desk, pausing to watch the eyes on her body. She sat down and let her thong ride up again, looking behind her and checking it, making sure everyone knew she was aware that it was exposed, then she let it hang out and turned her attention back to the professor.\n\nAfter class, Alyssa and Madison quietly went through the building, searching for an empty room. \"I can't believe you're going to do this,\" Alyssa said.\n\n\"I can't believe I haven't already!\" Madison said, laughing.\n\n\"I can't believe your outfits, either. God, it makes me want you!\"\n\n\"I'll lick your ass again. If we do it here and after you shoot my video.\"\n\n\"Oh GOD not here!\" Alyssa shrieked.\n\n\"Besides, if you want me to treat you like a dumb whore again, there's a price to pay,\" Alyssa said as they found an empty room and went inside.\n\n\"Price? What do you mean, are you some kind of -\"\n\n\"I'm not a whore! I'm a professional dominatrix in my off hours.\"\n\n\"What?\"\n\n\"Yeah, I just gave you the first one free, let you get a taste. No pun intended. It's mostly middle aged to older men that stop by, but I've found the women that need me are the raunchiest. They get very, very addicted.\"\n\n\"To eating your ass?!\"\n\n\"Not just that. Usually to being hurt, actually. Too bad you're not a little more into pain.\"\n\n\"Okay,\" Madison said, shaking her head in disbelief. \"What do you think of this room?\"\n\n\"It looks...suitable,\" Alyssa said, smiling at Madison.\n\n\"Shall we get started?\" Madison asked. She placed her bag near the door and walked to the far corner of the room.\n\n\"Sure,\" Alyssa said. She was about to pull out her phone, but Madison handed hers over instead, and prepared to put on a show.\n\n\"Hi guys!\" She said with a wave. \"Umm - it's me, Madison! So, ummm- someone dared me to strip down in a classroom, so here I am. This is like, a real classroom where I'm going to school, so yeah, my heart is pounding. Someone could come in here and find me completely naked!\"\n\n\"So, like - this was my outfit I wore to class today.\" She strutted toward the camera, drawing attention to the exposed part of her stomach with her hands. \"Do you like my outfit? Do I look like such a little slut?\"\n\n\"I always dress like a slut. I love it. I love the attention I get and I love showing off my body. Do you like how low my jeans are? Mmmmm, yes! I like to wear them low like this, it like - it makes me feel like more of a slut!\" She smiled at the camera provocatively. \"And this tiny, tiny little top? It barely covers my tits! I love it! Guys just staring at me, wanting to fuck my nasty little holes - mmmmmhmmm!\"\n\n\"And I even let my thong hang out, like - alllll class! Just so guys - and girls - I like girls too! Just to make them all stare! Do you think they all - like - do they all think I'm a slut?\"\n\n\"And you actually wore that to class, didn't you?\" Alyssa asked.\n\n\"Yes! And took pictures to prove it!\"\n\n\"Tell then what your fantasies are,\" Alyssa egged on.\n\n\"Ummm,\" Madison said with a shy nervousness. She hooked her thumbs in the belt loops of her jeans, causing them to fall even lower on her hips. \"So, like - I fantasize about, ummm - ultimate exposure. Like, everybody - my classmates, my friends - finding out about me. Finding out what a naughty little exhibitionist slut I am! Mmmm!\" Madison sensually rubbed her hands up and down the exposed skin of her sides.\n\n\"And finding out I'm Webslut Madison and that I love to degrade and humiliate myself for their amusement.\"\n\n\"Degrade yourself how?\" Alyssa asked.\n\n\"Ohhh, let's see - by like -stripping, and showing off, calling myself a slut and a whore.\"\n\n\"I know there's more, slut.\"\n\n\"And like - I love to have my face slapped.\" Madison slapped herself hard on the face. \"Like that, except over and over. There's lots of videos online of me slapping my slutty little face. And being slapped. Even by a stranger!\"\n\n\"And?\"\n\n\"And like -\" Madison began. Her face began to turn red. \"I sucked off an old guy, I let some guys gangbang me, I ate a girl's asshole.\"\n\n\"Why?\"\n\n\"To show everyone how much I like - truly crave it - the shame, the humiliation.\"\n\n\"And why do you crave it so much?\"\n\n\"Oh my god!\" She said, embarrassed. \"Because, I - it turns me on, I cum so hard from it!\"\n\n\"Now about that outfit. You look great in it,\" Alyssa teased. \"But you'd look even better if you took it off.\"\n\nMadison nodded. \"Of course!\" She said excitedly. She slowly lifted her top, letting her tits fall out, before pulling it over her head and tossing it aside. She smiled shyly, feigning innocence for the camera. Becoming incredibly aroused, Madison cupped them in her hands before dropping her hands to her sides.\n\n\"Mmmm, such a nice set of slut tits,\" Alyssa said. She moved closer, caressing them, pinching her nipples.\n\n\"Ohhhh!\" Madison moaned.\n\n\"You just love having them grabbed, squeezed, played with, don't you?\"\n\n\"Ohhhh! Yes, I like - I love it, mmmmm!\" She kept going, too aroused to think clearly. \"Like, honestly I would - I mean - if somebody came up to me and like - asked to see them, I'd just get them out.\"\n\n\"Like a complete stranger?\"\n\n\"Strangers, friends...\"\n\n\"And if they wanted to touch? Grab? Squeeze? Pinch and pull?\"\n\n\"Ohhhh definitely!\" Madison said. \"In fact, like - if anybody sees this and - and sees me out and - like - wants to feel or whatever, like- just -\"\n\n\"Madison, are you giving the entire internet permission to just come up unannounced and grope your tits?\"\n\n\"Mmmhmmm,\" she said, her face flushing again. \"And pinch and pull my nipples. Like this.\" Madison squeezed her nipples, twisting them until they stood erect. \"And even make it hurt a little. I like it.\"\n\nAlyssa's breathing was becoming heavier now as she watched her friend give her consent to be groped and teased and even hurt a little. \"Damn, you're turning me on!\" Alyssa announced. She reached out and took her turn twisting Madison's nipples, much to her delight, and Madison offered them to her, smiling at first, then moaning.\n\n\"Good. Now your jeans.\"\n\nMadison's hands went instantly to the button of her jeans, unfastening it, then to her zipper, which she slowly pulled down.\n\n\"You walked around campus the other day like that, didn't you?\"\n\n\"Oh, yeah, I guess I did. Unbuttoned and folded down, like this.\" Madison folded down her jeans to show what she had done a couple of weeks prior.\n\n\"And I had slut written on my stomach too. It was under my shirt but it rode up and everybody saw it.\"\n\n\"You like writing nasty shit on yourself, don't you?\"\n\n\"GOD yes! And showing it off!\"\n\n\"We might have to play around some more with that.\"\n\n\"Definitely!\" Madison said, smiling. She sat on one of the tables and removed her shoes, and slid off the table and pulled down her jeans.\n\n\"Do you like my tiny little thong?\" Madison asked. \"You know, you're not the only one who has seen it. My whole class saw it today, sticking out of my low, low, tight jeans,\" she said seductively. \"My professor was staring at me even.\"\n\n\"Do you always wear thongs?\"\n\n\"With jeans I do. With skirts and dresses I never wear panties at all.\"\n\n\"Wow. You horny little slut!\"\n\n\"I know!\"\n\n\"So if you're wearing a skirt, anyone could just look right up and see your -\"\n\n\"Mmmhmmm. My little whore pussy,\" Madison said, pointing and smiling.\n\n\"So why don't you let us see it?\" Alyssa suggested. But Madison already had her hands wrapped around the sides of her thong, pulling it up into a frontal wedgie, her puffy pussy lips eating the crotch of her thong.\n\n\"Mmmmm, want me to take it off?\"\n\n\"If that's what you want,\" Alyssa said, underselling her desires.\n\nMadison smiled. She pulled down the thong and stepped out of it, completely nude.\n\nJust then, the door opened. \"Oh my GOD!\" Madison shrieked. \"Somebody -\" she looked. It was a guy with a backpack, another student, it had to be.\n\n\"Whoa, what's going on in here?!\" He said excitedly as the door closed behind him.\n\n\"Ummm - nothing to see here,\" Alyssa said, trying to move him along. But he had already seen Madison, and he was very intrigued.\n\n\"Looks like quite a bit to see to me,\" he said, smiling wide. \"Wait, are you - you're filming her!\" He said. He was blown away. \"Are you - are you shooting a porno in here?\"\n\nMadison raced to cover her breasts. \"It's not a porno,\" she said, laughing nervously. She was so embarrassed! She knew it was possible someone would walk in, but didn't actually think it would happen.\n\n\"It's just - she started to explain, but could not think of a reasonable explanation.\n\n\"Hey, are you on onlyfans?\" He asked.\n\n\"I - no - this - I do this for free!\" She said before the more sensible side of her brain kicked in.\"\n\n\"Sit down, you can watch,\" Alyssa said. \"Madison, don't cover your tits up. You know better!\"\n\nMadison gave Alyssa a look of disapproval. \"You're just inviting him to -\"\n\n\"You know how much you like being watched. And he doesn't seem to mind. Why don't you explain to our viewers what just happened?\"\n\n\"Like - oh my god, some random guy just walked in here. And now he's just - sitting there, looking at me!\"\n\n\"Madison, your hands!\"\n\nMadison sighed. \"Do you - um - want to see my tits?\" She asked nervously, crossing her legs awkwardly as she stood.\n\n\"I want to see it all,\" he said eagerly.\n\nMadison slowly moved her hands down, freeing her breasts, smiling a wide, nervous but exhibitionistic smile.\n\n\"Hey, wait a minute - you're the girl from the auditorium! I knew I knew you from somewhere!\"\n\n\"Oh my God! How did you know?\" Madison was shocked.\n\n\"Auditorium?\" Alyssa asked.\n\n\"Watch the videos, I like - ohhhh God - I stripped naked and degraded myself and throatfucked myself with a dildo in front of like - two hundred people.\"\n\n\"In the auditorium?\"\n\n\"I was - my face was covered,\" she explained. \"It was after hours. I had done it before, nobody was there, they were so quiet. I didn't know! But my friend invited a bunch of people to watch, and - apparently this guy - and I was just fantasizing about a bunch of people out there watching me misbehave, but then -\"\n\n\"But then there were actually people watching?\"\n\n\"Yes! God, it was so bad!!! I had things written on me, I had to degrade myself, shit!\"\n\n\"You know,\" Alyssa said, changing the subject. \"Usually when girls do a strip show, they dance.\"\n\n\"Yeah,\" Madison said. She was starting to get shy again. She knew where this was going - Alyssa was going to try to get her to dance naked with this guy watching!\n\n\"Here, I'll put on some music,\" Alyssa said, not even bothering to ask Madison if she was willing. She put on a song on her phone and set it on a desk. \"And Madison - make it hot. Sexy. Slutty.\"\n\nMadison took a deep breath and exhaled, and she started to move. Her arms raised high in the air, she shook her hips slowly and sensually from side to side, pretending her arms were tied up and fixed to the ceiling. She arched her back and displayed her breasts. \"Mmmmm,\" she moaned.\n\nMadison stuck out her breasts some more and ran her left hand down her neck, down her breasts and down her stomach, actually giving herself goosebumps from the sensation as she touched herself. \"Mmmmm, fuck, I love showing off my body like this,\" she whispered. \"Like a little slut.\" She bit her lip abs turned around.\n\nNext, she placed her hands on a desk and started shaking her ass, twerking for the camera. And after that, she grabbed her cheeks, spreading them wide, giving Alyssa - and the camera - an unobstructed, perfect view of her asshole. She ran a finger through her crack, turned around, and licked her finger seductively. Then she sat on the floor, spread her legs, and smiled. Her face flushed and she started mimicking riding a cock cowgirl style, raising her ass off the floor and dropping it down again while spreading her legs wide open.\n\n\"Wow, wow!\" The guy said, staring with an open mouth.\n\n\"You know what woild be the perfect way to finish this off?\" Madison asked.\n\n\"Now you're scaring me,\" Alyssa said. \"What?\"\n\n\"If he came over and shot his load all over me.\"\n\n\"Madison! Oh my god, you filthy little slut!\"\n\nAlyssa turned around to look at the guy, wondering if he was willing.\n\n\"You serious?\" He asked. Madison just nodded shyly as she sat, legs spread, on the floor. \"Oh, you're serious! I mean, sure, I'll - just - don't get my face on the video. I don't know where this is going.\"\n\n\"It's going on a kink networking site. And maybe some free amateur porn sites too.\"\n\n\"Fuck, people would pay good money to see this shit!\" The guy pointed out.\n\n\"I know. But it makes me feel like more of a slut to give it away for free!\"\n\nThe guy had approached and had his jeans undone and his boxers and jeans pulled down to his knees. \"Mmmm, stroke your cock for me, I want to feel your hot, sticky load!\"\n\n\"Ohhhh, fuck, you little slut!\" He said. His cock was already hard and he stood there, furiously stroking it. He was incredibly excited, but wanted to make sure he finished quickly before any other unannounced visitors arrived. \"Ohhhh, beg for it,\" he moaned. \"They gets me every time!\"\n\n\"Ohhh please, please cum all over my slutty body! All over my stomach, my tits - my face - ohhhhh I can't wait to feel you explode all over my little whore body!\"\n\n\"Ohhhh yes you little cum slut!\"\n\n\"I'm such a fucking cum slut!\"\n\n\"You like letting random guys cum all over you?\"\n\n\"Ohhhh yes, please, I beg random guys to cum on me! I love showing off and - ohhhh, and letting random guys just use me!\" Madison had plunged two fingers inside herself.\n\n\"That's it, baby! Ohhhh! Ohhhhh yes!\" He moaned. Suddenly he started to tense up, and in an instant, thick ropes of cum shot out on her. The first shot, always the farthest, hit her face, landing mainly on her forehead. A little got in her hair and some ended up on her chest.\n\n\"Ohhhhhh yes!\" She moaned and smiled as he glazed her. Cum landed on her tots next, then her stomach. \"Mmmm,\" she moaned.\n\n\"Wow, okay, wow what a slut!\" The guy said. \"Madison, right?\"\n\n\"Yeah, Madison.\"\n\n\"Okay, umm - thanks Madison. I came in here to make a phone call, I -\"\n\n\"It's okay. Go if you need to.\"\n\nThe guy pulled up his boxers and then his jeans, buttoning and zipping them. He raced over to his backpack and picked it up.\n\n\"Hey - you! Um- random guy!\" Madison called out. He looked at her, stopping. \"Thank you for cumming on me! And tell your friends!\" He just smiled and waved, shaking his head in disbelief as he left the room.\n\n\"Wow, Madison - did you just let a random guy cum all over you? I thought you were just supposed to strip!\"\n\n\"Yeah, I guess I'm a slut and I can't help myself! Umm, so - yeah.\"\n\n\"Aren't you going to clean up?\"\n\n\"Maybe just my face,\" she said. She touched her face, pulling a gob of cum off of it and putting it in her mouth, swallowing.\n\n\"Mmmmm!\" She said delightfully.\n\n\"Okay. Shouldn't we get out of here? Before someone else walks in?\"\n\n\"Sure,\" Madison said. She stood, slowly putting her clothes back on, as Alyssa stopped the camera. Hey - thanks for filming,\" Madison said. She was just about dressed now, and she adjusted her top and left the room.\n\n\"Hey, film me walking out.\" Alyssa took the phone, shaking her head, but complying. With Alyssa in front of her, Madison walked through the hall, down the stairs, and out the door. She went outside, the cum still on her stomach glistening in the sunlight for all to see. \"See you next time,\" she said, and blew the camera a kiss."
    ],
    "authorname": "Rockwellray0",
    "tags": [
        "slut",
        "webslut",
        "strip",
        "class",
        "college",
        "cum",
        "exposed",
        "exhibitionist",
        "fetish"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/webslut-madison-ch-25"
}