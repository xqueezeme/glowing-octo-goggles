{
    "title": "Captain and Crew",
    "pages": [
        "\"Ease back on her... Now thrust her back end some more... That's it, she's responding...\"\n\nBeads of perspiration rolled down Johnson's face. His breath was short, his heart pounding. Every muscle in his body was tense.\n\n\"...Yeah, that's it. She likes it slow and easy. Don't rush her and she'll be happy. Give her ass end a little more. Don't be afraid to juice her that way...\"\n\n\"...That's it, she's comin' now. Keep thrusting...\"\n\n\"...You feel her? How she moves when you thrust like that? She's pretty responsive for a big girl.\"\n\nJohnson didn't think so. The delayed reactions to his inputs were confusing him. Nudge the throttles forward and the big boat just sat there while the propellers tried to grip the water. Engage a thruster and feel nothing. Oh wait...are we moving, or is it that other boat? It's a crazy mixed up world out there for a landlubber.\n\nMike, the boatyard owner, took the controls. \"You'll get the hang of it Mr. Humphries,\" he said. \"It takes awhile, especially when you jump feet first into an eighty-two footer. Maybe we should take the launch out for a while, to give you some more time on the water in something smaller.\"\n\n\"Okay, Mike,\" Johnson said. He wiped the sweat off his brow with his hand and wiped his hand on his khaki shorts. \n\nMike's hands weren't sweaty at all, and showed the skills learned from a lifetime on the water \u2014 fingers flicking levers, pushing buttons and spinning the gleaming chrome steering wheel, guiding the long, champagne-colored yacht into its berth. Two high-school-age yard boys took the lines and fastened them to the wharf. Johnson was glad to be tied to terra firma again. Eight million dollars had bought him a whole lot of anxiety, so far at least.\n\n\u2014 \n\nJohnson Edmond Humphries was a wealthy young man of leisure. A playboy, to use an old fashioned term. His father, Johnson Davis Humphries, inherited a fortune from his father, built on it a bit and, when he died of cirrhosis of the liver, passed it on to Johnson. The old man had all the resources in the world to get himself a liver transplant, but he'd have no part of it. \"I don't want to eat somebody's already chewed up meat,\" he'd said. He was a stubborn old boy, old-school right to the end.\n\nThe money was free and clear after the old man's death. No business to sell, no property to unload. Just a long list of wise investments, ready to hold onto or cash out. Johnson did a little bit of both. The big yacht was a cash deal thanks to a big stack of Coca-Cola shares. His broker had tried to talk him out selling them \u2014 they'd been trending upward for decades \u2014 but Johnson hated sugary drinks. He was convinced they were ruining the women of the world. \"They'll make every girl fat if we let 'em get away with it,\" he'd said to the broker. \"Sell it! Just fucking sell it!\"\n\nOwning a yacht was something Johnson had dreamt about since he was a boy. His family was never into boating, or even waterfront vacations, but every time Johnson saw a flashy boat on TV or in the movies it excited him. He had toy boats as a child, and a bikini poster on his wall as a teen. The leggy, big-breasted swimsuit model was eye catching, but to Johnson so was the yacht she was sprawled on, with its teak decks and gleaming chrome fittings. He imagined that the boat's name was Blondie, because of the color of the bikini model's hair.\n\nThe poster was really what cemented the dream. The look of luxurious happiness on the young woman's face, the sparkling turquoise water in the distance, the golden sunlight. What he didn't expect was the mind-numbing fear he felt when it was up to him to control the gleaming eight-million-dollar beast. From the vantage point of the helm up on the flying bridge the sleek teak decks seemed to sprawl out a half-a-mile in front of him, and there was nearly as much behind him. The damn thing was huge!\n\n\"I know you didn't like the idea, but hiring crew is nothin' to be ashamed of,\" Mike said. He was sitting in the passenger seat of the boatyard's launch, watching Johnson as he nervously pulled away from the dock. \"Blondie's all set up for it.\"\n\nMike was speaking of the crew quarters tucked in below the aft deck of the big yacht, a comfortable space with two small cabins, a galley with dinette, and two heads.\n\n\"I know. I just thought...\" Johnson's voice trailed off dejectedly. He finally realized what others had told him \u2014 it would take years to gain the experience to handle a eighty-two foot, hundred-and-twenty-five-thousand pound vessel like Blondie with confidence.\n\n\"Most captains are great teachers,\" Mike said. \"You can learn as you go.\"\n\n\u2014\n\nJohnson asked Mike to put the word out that he was looking for a captain and crew. There were more responses than he'd anticipated and he reluctantly agreed to interview a few people even though he still had a hard time wrapping his head around the idea. A big yacht in a quiet harbor with one or more willing women was Johnson's dream, not a date with a sexy girl when there was staff wandering around \u2014 he could do that at a restaurant and save the eight million dollars. But, a big boat is a big boat. It was more than he could handle alone. \n\nInterviewing potential captains didn't make him happy. The men were certainly well qualified, but they all turned him off in one way or another. They all reminded him of the class president at his high school \u2014 clean cut, popular, and oh so proper. The kind of person a sensible man would hire to take care of an eight-million-dollar yacht. Johnson didn't like any of them. Back in high school the class president was a friend of Johnson's, but that kind of guy was the last person on earth he'd want hanging around when things got rolling with a swimsuit model. Well, maybe not the last person, but close.\n\nAfter six of those highly qualified candidates showed up, Carly submitted herself for an interview. Johnson wasn't interested when Mike had told him about her, but after six guys with perfect hair and pressed polo shirts he figured he'd at least talk to her.\n\nCarly showed up on the wharf two minutes early, dressed in gray shorts and a crisp white shirt. She looked a lot like the men to Johnson \u2014 a bit slab-sided, with close cropped hair that was starting to gray. \n\n\"Mr. Humphries? I'm Carly Savara,\" she said, very business like. \n\nThey chatted. Carly presented her resume and her references. Johnson liked her. She was unpretentious, rather quiet, and not at all sexy. That was important to Johnson. The thought of having a woman around when he was with his women was initially a non-starter, but as Johnson got to know Carly he had a feeling she understood that dynamic \u2014 she had a way about her that seemed like she could stay out of the way and not be too concerned about the goings-on.\n\n\"I can cook for you, too, if it doesn't interfere with my piloting duties,\" she said. \"I was a sous chef at Chez Brontue before I got my captain's license. That'd cost extra of course.\"\n\nThat sealed the deal.\n\n\"I'll need one crew,\" Carly said. \"Two would be better, but I get the feeling you'd like to keep things minimal. I've had pretty good luck working with young people, but it's up to you of course. I'll start interviewing and run the promising ones by you.\" \n\nJohnson was glad to have her take the initiative. \"Welcome aboard, Captain,\" he said.\n\nCarly smiled. \"Thank you sir. I'll take good care of your ship.\"\n\n\u2014\n\nCarly began working immediately, going over the specs of the yacht with Mike. She spent days in the engine room with one of the yard's mechanics, getting to know the engines and other systems. Some time on the water with Mike and Johnson convinced the two of them that she could well handle the vessel. In fact, Mike was impressed.\n\n\"How long have you been at this?\" he asked, as she eased the big yacht into its berth.\n\n\"All my life, really,\" she said. \"My dad had a Concordia Yawl when I was a kid. He was a harbor pilot. Worked Baltimore most of his years. Guess it's in my blood. I learned power on an old Huckins. My dad helped me get her ship-shape, best we could anyway. She was pretty rough. A good education, though.\"\n\nCarly had good memories of that boat. Huckleberry was her name. Carly lost her virginity onboard, later than most of her friends, at age twenty-two. She was working in the grimy engine room with the son of a local diesel mechanic, both of them filthy with oil and grease, learning about the boat as they went. Carly smashed a finger one day, between the cast iron engine block and a wrench that slipped. She was nearly in tears when the young man took her hand, gently massaging the throbbing flesh with his slippery, oily fingers. It was an intimate moment. Their lips met, and a half an hour later the deed was done \u2014 Carly was a fully fledged woman, with dirty hand prints covering nearly every inch of her almost naked body. Even the inside of her pussy tingled from the petroleum residue. She loved it.\n\nCarly and Mike chatted about the old Huckins during a short spin around the harbor in the launch with Johnson at the controls. They passed close by Blondie's stern as he brought the much smaller vessel alongside the wharf nice and gently.\n\n\"That's perfect,\" Carly said, smiling brightly. \"See, you're gettin' the hang of it.\"\n\nCarly interviewed two more candidates for crew that afternoon. So far she wasn't crazy about any of the applicants. Johnson had met a few of them and he agreed \u2014 the two that day weren't anything special either.\n\n\"If you wanna up my pay a little and help out when I need you, we can handle this thing on our own,\" Carly said. \"Otherwise we'll have to keep plugging along with the interviews.\"\n\n\"I'd love to help out,\" Johnson said. \"I was kind of hoping I'd get to, once in a while anyway.\"\n\n\"You won't be able to be headstrong about anything just because you're the owner,\" Carly said. \"When the boat's underway what the captain says goes.\"\n\n\"Let's give it a try,\" Johnson said. \"If either of us aren't comfortable with how it's going, we'll interview in another port.\"\n\nCarly was already wondering if what she suggested was a mistake, but Johnson was enthusiastic and seemed like he wanted to learn. With the boat's modern systems she didn't need that much help anyway. She was pretty sure she could single-hand Blondie if she needed to.\n\n\u2014 \n\nCarly gave notice at the rooming house where she lived, and she moved aboard Blondie the next day. It was an easy transition \u2014 the life of a yacht captain meant few possessions. One taxi ride was all it took, and Carly settled into the brand new crew cabin with a contented smile.\n\nShe got along with her new boss right away, working hard at staying professional even though Johnson was a casual guy. A little googling in her cabin the first night gave her an idea of his wealth and his playboy reputation. She'd settled in for the evening after Johnson had gone out on the town. She was up late reading when she heard voices at two o'clock in the morning. A good captain doesn't let that kind of thing go unchecked, so she went up on deck.\n\nCarly had never seen a girl like Ginger. Not in real life anyway. The spectacular redhead walked down the wharf with Johnson, not quite arm-in-arm, but close. The young woman climbed the portable steps and let her long, slim legs come to rest on Blondie's deck. \"Welcome aboard,\" Carly said.\n\n\"Thanks,\" Ginger said. She glanced at Johnson, surprised to see another woman onboard.\n\n\"This is Carly. She takes care of things around here.\"\n\nGinger looked a little confused, but it might have been the flavored martinis she was drinking at the bar where Johnson met her. \"Oh,\" she said, giving Carly a good once over.\n\n\"I was just about to turn in,\" Carly said to Johnson. \"Anything else I can do for you tonight?\"\n\n\"No, thanks Carly. Everything looks great,\" Johnson said. \"Tomorrow's another day.\"\n\n\"All right then. Enjoy the evening.\"\n\nCarly spun on the soft heal of her boat shoes, not gracefully like a dancer, more deliberate and practical. She was a practical woman, with a practical body \u2014 nothing like a dancer.\n\nShe descended the aft companionway to the crew quarters. It was a very agreeable space \u2014 not as elegantly appointed as the rest of the boat, but certainly nice. Carly had claimed the double cabin, leaving the small single for the yet to be hired crew. The galley was small, nothing like the main galley where she'd be preparing meals for Johnson, but it was all she needed. She put a kettle on for some nighttime tea.\n\nUp above, Johnson was showing Ginger around. She was a bit overwhelmed by the tour \u2014 the pale colored satin finished mahogany walls and off-white leather upholstery was more luxurious than anything she'd ever seen. She had a white leather couch at home, but it was nothing like the richly textured, finely sewn hides on Blondie.\n\n\"This is the salon,\" Johnson said, as he led the redhead through the airy space toward the dining area. \"It's a beautiful night. Let's go up on the front deck.\"\n\nThe two of them made their way out to the side deck, Ginger letting her hand slide along the chrome rail that reflected in the moonlight. \n\n\"This is a great place to sunbathe,\" Johnson said when they reached the big daybed built into the cabin top above the forward stateroom. \"Did you bring your suit?\" he asked mischievously.\n\n\"You might have to rub lotion on me so I don't burn,\" Ginger said, her hair glinting in the light of the nearly full moon.\n\n\"I love girls who burn,\" Johnson said. His hand swept around Ginger's waist and their mouth's met. They'd both wanted to kiss ever since the flirting commenced at the bar down the road. Johnson wasn't a very good kisser, but Ginger knew a good thing when she saw it, and the massive yacht gleaming in the moonlight was a very good thing. She'd watched movies, and plenty of porn. She knew how to raise the moment beyond what was actually happening. She knew how to fake it.\n\nThe look in her eyes when the kiss ended was a 'take me I'm yours' look if Johnson had ever seen one. His fingers intertwined with hers and he led her to the master stateroom.\n\n\"Now that's a bed!\" Ginger said, running her hand over the satiny bedspread. \n\nShe looked around, the beautiful finishes and expensive detailing of the space reminding her of the kind of modern luxury hotels she'd seen in the glossy magazines at her gynecologist's office. She turned to Johnson, with a mischievous look in her gray-blue eyes. Her hand cupped his crotch, gently, with just enough pressure and movement to let him know she meant business.\n\nA firm push of her other hand seated him on the edge of the bed. She smiled confidently and began to strip. Ginger was good at it. She'd never stripped professionally, but she and a friend took a pole dance class and she'd entertained quite a few men in their bedrooms \u2014 long relationships weren't her forte, but seducing rich guys was.\n\nWhen she had nothing on but her four-hundred-dollar undies she shifted to slow motion, all the better for Johnson to get an eyeful of her perfect, I-want-to-be-a-trophy-wife body.\n\n\"Looks like you're gonna bust outta those pants,\" she purred. \"Unzip 'em. Let me see how hard I make you.\"\n\nGinger's tongue teased the bottom of her front teeth as she watched Johnson let loose his cock into the soft light of the stateroom. She danced slowly to the music in her head, closer, and closer, exhaling as she dropped to her knees between Johnson's legs, inhaling as her warm mouth engulfed his throbbing shaft. A Broadway choreographer couldn't have staged it any better.\n\nThe blowjob was skilled, but felt somehow detached. Johnson longed for a real connection with a woman, with the heightened feelings that accompany that kind of relationship, but Ginger wasn't that woman. He already sort of knew that, at the bar, but he knew it for certain when he held her head to his cock and felt the stiff gel in her expensively cut hair. Ginger was an impostor. The real girl under her magazine-worthy glitz might make a nice companion, but it was clear Ginger was all-in with the flashy gold-digger thing. Johnson let things play out, the way he always did.\n\nDoggy style was pretty sweet. Ginger's long legs and perfect little ass beckoned like a siren song. Johnson dreamed that she was the perfect girl as he slipped into her tight pussy.\n\n\"Oh, fuck baby!\" she exclaimed as her hand slapped down on the cool bedspread, fingers wide-spread like a tree frog. \"God you're big!\"\n\nJohnson wasn't. Five inches was all of it. Maybe five-and-a-half on a good day, and buried as deep as he could go in Ginger's sweet-as-honey pussy, with his eyes on her swimsuit-model ass, well, it was a pretty good day.\n\n\"Fuck, Johnny honey! You're gonna make me cum!\"\n\nJohnson didn't. It didn't matter, though. Ginger delivered her best fake orgasm and Johnson gushed much sooner than he wanted to, pulling out mid-spurt. It was quite a mess.\n\nDown in the crew quarters, Carly took the last sip of her tea. It had cooled off, but was extra sweet at the bottom where the honey had settled. She put a bookmark in the musty smelling old romance novel she'd found at the local used book store, and thought about Johnson and Ginger. Her normal routine would be to take one last quick walk on deck to check the dock lines and make sure all was shipshape, but she didn't want to interrupt anything Johnson might be in the middle of. She'd captained a sixty-footer the summer before, but the owners were in their seventies. Working for a young playboy would take some getting used to.\n\n\u2014\n\nThe next morning, Carly was up at the crack of dawn. A misty fog had rolled in during the night. The marina was eerily quiet, blanketed in grey as the new day slowly brightened. Carly picked up two cocktail glasses from the front sundeck and was heading to the galley when Johnson and Ginger appeared. \n\n\"Oh, sorry,\" Carly said. \"I was just straightening up a little.\"\n\n\"Thank you, Carly,\" Johnson said, looking a little embarrassed by the situation.\n\n\"I hope you enjoyed your stay,\" Carly said to Ginger, immediately regretting saying anything.\n\nGinger was embarrassed too, standing there in her dance club clothes and her high heels, with her stiff, gelled hair fingered into a bit of a morning mess. \"Yeah. It was nice,\" she said, wishing, like Carly, that she'd kept her mouth shut.\n\n\"I can serve breakfast if you'd like,\" Carly said.\n\n\"Oh, no, that's all right Carly,\" Johnson said. He had his hand on Ginger's back and gave her a little nudge. The two of them headed out into the morning fog.\n\nA few minutes later Johnson returned alone. Carly was in the galley, pouring herself a cup of coffee. \"I could really use some scrambled eggs, if it's not too much trouble,\" he said.\n\n\"Oh, sure,\" Carly said. \"How do you like them, loose or tight?\"\n\nHe face blushed pink as soon as she'd said it. She turned away from Johnson, hoping he hadn't seen. Twice already she'd said something she wished she hadn't. It was going to be an awkward relationship with her new boss if that kind of thing continued.\n\n\"I'm easy,\" Johnson said. \"However you like them is fine.\"\n\nCarly couldn't see his face, so she wasn't sure if he'd seen her embarrassed blush, or even caught her unintended double entendre. \n\nJohnson read the morning news headlines on his phone while Carly put together two plates with scrambled eggs, toast with jelly, and a slice of melon. Johnson tucked into it all with gusto. She had a feeling he'd had quite a workout with Ginger.\n\n\"Do you ever go out at night?\" he asked.\n\n\"No, I can't really. I wouldn't want to leave Blondie unattended.\"\n\n\"Oh, hell, I hadn't thought of that,\" Johnson said. \"Being the only crew sort of ruins your life, doesn't it?\"\n\n\"Hardly!\" Carly said. \"I'm a homebody anyway.\"",
        "\"You should get out at least once a week. It's good for your...physiology. I'll look after Blondie. Everybody needs some playtime.\"\n\nCarly looked bemused. \"My physiology? That's okay, Mr. Humphries. I've gotten pretty used to this kind of life. I enjoy looking after Blondie.\"\n\n\"We gotta can the Mr. Humphries shit, all right? You're Carly, I'm Johnson. I appreciate the way you look after the boat, but just let me know if you want to get out of here some evening. There's almost always some fun clubs around these fancy marinas.\"\n\n\"I'm not really a club kinda girl,\" Carly said. \"A girl like Ginger...I wouldn't even know what to do in her world.\"\n\n\"How old are you Carly, if you don't mind me asking.\"\n\n\"No, I don't mind. I'm thirty-four. You?\"\n\n\"Thirty-three. I'll be too old for Gingers before long.\"\n\n\"Are you kidding? With a boat like this you'll have Gingers hanging around when you're eighty.\"\n\n\"God, I hope not,\" Johnson said. He took a long sip of his coffee. \"Can I confess something to you?\"\n\n\"Sure,\" Carly said. She wasn't sure why he wanted too, but she wasn't going to say no to her new boss.\n\n\"Ginger...and...all of them...leave me feeling like all I've got is money. These mornings, after they leave, I always feel like an adolescent schoolboy who doesn't have a clue.\"\n\nIt was way more of a personal confession than Carly had expected, but she liked it. It was something a friend would say to another friend. She suddenly realized Johnson was lonely. Should I get into this, she wondered? Should I be talking this personally with Blondie's owner?\n\n\"I'm guessing Ginger feels the same way,\" she said.\n\n\"Oh, hell no. She was a dynamo. She could teach the class.\"\n\nCarly tried to hide her shock. Sex! That's what he's talking about! We really really shouldn't go there!\n\n\"I guess we shouldn't be taking about this,\" Johnson said dejectedly. \"I just wish a woman would talk to me about it sometime. They all seem afraid to tell me like it is. I hear nothing but how wonderful I am, and I know it's not true. The money screws up everything. You know, I actually hired a hooker one time to teach me what women like. Sad but true.\"\n\n\"You're right, we shouldn't be talking about this,\" Carly said, but Johnson's sad eyes drew her in. \"What makes you think the women are lying to you?\"\n\n\"Oh, it's easy to tell. If I hear one more fake orgasm I'm just gonna give it all up.\"\n\n\"Whoa!\" Carly said quietly. \"Yeah, we definitely shouldn't be talking about this.\"\n\n\"Sorry, Carly,\" Johnson said dejectedly. \"You're easy to talk to, but I don't want to make you uncomfortable.\"\n\n\"I thought about going to school for psychology,\" Carly said. \"It's funny, captaining other people's boats involves a lot of that kind of thing.\"\n\n\"Want to take me on as a patient? I could really use a woman's perspective on this.\"\n\n\"About sex, you mean? I don't know. I'm not even used to calling you by your first name yet.\"\n\nJohnson smiled. It was a sad smile that melted Carly's heart.\n\n\"Let's start with the basics,\" Johnson said, jumping in before Carly could escape. \"Does size matter?\"\n\n\"Holy shit!\" Carly said. \"We're doing this? I'm talking about sex with my boss?\"\n\n\"Oh, shit. I forgot about all that sexual harassment stuff. Yeah, we'll can it if you don't like it. We'll never mention it again.\"\n\n\"No, I don't care about any of that. This doesn't feel like that, not that I've ever experienced it or anything.\"\n\nJohnson wondered if that was because of Carly's plain looks. She wasn't big, but she wasn't curvy either. Her body looked more like a warship than a yacht.\n\n\"So, do you want to help me figure this out, or...\"\n\n\"Sure, if you want,\" Carly said. \"I mean, I'm no expert or anything.\"\n\n\"You're a woman. That gives you all the expertise in the world.\"\n\nCarly smiled. She liked that a man thought that, even though she knew it wasn't true.\n\n\"So...does size matter?\" Johnson asked, smirking just enough to be cute.\n\n\"No. I mean...it's nice...but, no, a girl can feel plenty good with average.\"\n\nCarly wondered if she'd said the wrong thing. What if Johnson was smaller than average, or really tiny?\n\n\"Well that's good to hear. So, I guess I've just gotta figure out what to do with it.\"\n\nCarly chuckled. \"You're thirty-three years old, I'm pretty sure you know what to do with it.\"\n\n\"Yeah, well, sometimes I wonder,\" Johnson said. \"Why all the fake orgasms? Do all women do that?\"\n\n\"I couldn't say. I'm guilty though, on at least a few occasions.\"\n\nJohnson looked surprised. \"Really? Do you remember why? Was the guy just...lousy?\"\n\n\"Maybe once or twice,\" Carly said. \"You just wanna get it over with, you know? But other times, with a nice guy that you care about, you want him to feel good about all the effort he's putting in, even though he might not be...making it happen.\"\n\n\"Good! This is good!\" Johnson said, his face brightening. \"Tell me more.\"\n\nCarly chuckled. \"I can't believe we're talking about this!\"\n\n\"I want all your knowledge. Everything you've wanted to tell a guy, tell me.\"\n\n\"Wow,\" Carly said. \"That would be...kind of fascinating. It sounds too risky, though. We really need to maintain a professional relationship.\"\n\n\"Okay, well, you already work for me. Let's just expand your duties and I'll give you a raise.\"\n\n\"Whoa, no, I could never...I don't think I'm that kind of girl. Sorry.\"\n\nJohnson looked at her quizzically. \"You don't think I mean...I'm not talking about anything, like, hands-on. Is that what you're worried about? I was thinking maybe you could guide me somehow. Teach me. Like a book-learning class.\"\n\nCarly chuckled again. \"I'm not sure how that would work, but we can try it I guess. I sure as heck don't have a curriculum. Are you just going to ask me questions?\"\n\n\"Would you be okay with that? They may get into some...interesting areas.\"\n\n\"Wow. This is a pretty fascinating first breakfast with the boss! I guess we could. I mean I've always been a go-for-it kind of girl. Let's see what happens.\"\n\nJohnson smiled. Carly was exactly the kind of friend he'd longed for in his adult life.\n\nCarly smiled too. She always loved it when things got a little wacky, and teaching her boss how to give supermodels orgasms was about as wacky as it gets.\n\n\u2014\n\nJohnson didn't waste any time getting started with his master class in sexuality. Carly had windows to clean and chrome to polish, so Johnson rolled up his sleeves and joined her.\n\n\"You don't have to help with this,\" she said. \"The only time I'll need you as crew is when we're underway or docking.\"\n\n\"I'd kind of like to,\" Johnson said. \"It'll help me bond with the big girl.\"\n\nCarly was sure he meant the boat, but it made her wonder what he thought of her own body. She was big boned and sturdy, a result, she always thought, of her mother's Latvian bloodlines.\n\n\"You can work that rail there,\" she said, handing Johnson a rag and some chrome polish. She thought of making a joke about the fist-around-a-pipe motion that he'd be making with his hand, but decided it was too soon for sexual levity.\n\n\"Does it really take half an hour for a woman to orgasm? I read that somewhere.\"\n\n\"Wow!\" Carly said. She looked around at the other yachts nearby, deciding they were too far away to hear the conversation. \"I guess,\" she said, looking a little amazed at the topic. \"It depends, though. Mood, and build-up, and frame of mind all affect things. It can definitely happen really quick, but that's rare. For me at least. Men can just get there real easy, right?\"\n\n\"Yeah. We have to fight it off. It's a fun fight, though,\" he smiled.\n\n\"I'll bet! The half-an-hour thing, though, that seems like a really long time. Most guys can't even go that long.\"\n\n\"I don't mean just...cocks and fucking,\" Johnson said. \"Are we going to use the vernacular?\"\n\nCarly laughed. \"Why not. I guess we're goin' for it.\"\n\n\"So, what I read was, even if it's fingers or cunnilingus, it can take that long.\"\n\n\"Cunnilingus. Yikes, is that right out of a textbook?\" Carly asked. \"Do people really talk like that? 'Hey Mac, where can a guy get a fellatio around here?' \"\n\nJohnson laughed. \"So what do you call it?\"\n\n\"Cunnilingus? I don't know. Oral, I guess. I had a friend who always called it eating. \"Did he eat you?\" she'd ask. I always though that sounded sort of odd.\"\n\n\"You'd be surprised,\" Johnson said, stroking the shiny chrome rail with his rag. \"Lots of girls say that. Eat me. I always though it was kind of hot.\"\n\nJudging by the hot flash coursing through Carly's body, she thought so too. It didn't help that a smooth, slippery shaft was sliding through her fist. She put her rag down and turned away, pretending to look at a passing boat while she cooled down.\n\n\"So, women...talk dirty to you?\" she asked, glancing at Johnson as she got back to work.\n\n\"Sometimes. I like it. It doesn't happen too often, really, now that I think about it.\"\n\n\"Do you reciprocate?\"\n\n\"No. I can't say I'm really comfortable in that area.\"\n\n\"Well there's homework assignment number one,\" Carly said. \"If you want to really get a woman going, do that. Make sure it's in line with her personality though.\"\n\n\"How do I know that?\"\n\n\"Like if it's a one night stand you mean, and you don't have time to get to know her? You're gonna have to start looking for the signals.\"\n\n\"That's part of my problem,\" he said. \"I already feel like I think too much. That's why I feel like I'm stilted. Too much thinking, not enough instinct.\"\n\n\"Yeah, I get it. So, why not try one thing at a time. A little gentle dirty talk and then some oral. Eat her out,\" Carley smiled. \"But do this...when she starts to react, don't stop. Don't change anything. Speed, pressure...hold it steady. If you stop, even for a few seconds, you'll have to start all over. I'm not saying that's not fun, but if you really want a woman to...cum...it's that steady application of what feels just right to her. It won't take a half-an-hour.\"\n\nCarly shifted her rag to another section of rail. She was amazed at what she had just said. She'd never discussed the real, honest details about sex with a man before. It was exhilarating, but it still made her wonder if she was putting her job in jeopardy.\n\nJohnson was happy, too. He'd always thought the best part of sex was giving a woman pleasure. He felt a little closer to being able to do it.\n\n\"You know, you can have a guy back to your cabin any time,\" he said, \"and feel free to use the bar.\"\n\n\"Oh, thanks. That's nice of you say that, but it probably won't happen much.\"\n\n\"Well, just keep it on mind. Life's short, you know?\"\n\n\"Will Ginger be back?\"\n\n\"She's...not...really my type.\"\n\n\"Really? Long legs and perfect bodies aren't your type?\" Carly chided.\n\n\"You'll probably think this is horribly superficial, but...I couldn't get my fingers through her hair. She had about a half a gallon of gel in there.\"\n\n\"Yeah, I noticed that. I guess even perfect girls have flaws.\"\n\n\"Not my Blondie,\" Johnson said. \"I think I'm falling in love with her.\"\n\n\"You're stroking her like you mean it. She may be your first real orgasm.\"\n\n\"Ha ha!\" Johnson laughed. \"If this boats a rockin', don't bother knockin'!\"\n\nCarly laughed. She was starting to realize she'd lucked into a pretty good job.\n\n\u2014\n\nThe sound of footsteps late at night on a seemingly unattended eight-million-dollar yacht wasn't something a good captain could ignore, so Carly put down her romance novel, pulled on her robe and went up on deck. Another pair of impossibly long legs and high heels was clicking along the pristine teak. Carly cringed, making a mental note to suggest shoe removal to Johnson in the morning.\n\n\"Welcome aboard, Sir,\" she said. \"I'll turn in now. Enjoy your evening.\"\n\n\"Thank you, Carly,\" Johnson said.\n\nAs Carly walked away she heard him tell his guest that she was the captain he had hired, and that she lived way in the back, down by the engines. Carly smiled, thinking it sounded a bit like a dungeon, nothing like the beautiful bright crew quarters she inhabited. As she curled up with her book again she marveled at how easy it seemed to be for Johnson to pick up stunningly beautiful young women. His clothes, shoes and wristwatch all telegraphed his wealth, she guessed, and his nice smile probably sealed the deal with ease. It was such a different world than the one Carly lived in.\n\nBrittany was a wealthy girl herself. The high heels clicking on the deck were a cool three-thousand dollars, and far from her most expensive pair. She was a trust fund baby, just like Johnson, and lived the life proudly.\n\nJohnson was unconcerned with her status. His mind was on the elusive female orgasm, and had been all night. He felt like a predator when he first started talking to Brittany at the club, but then he realized it was all about pleasure between consenting adults. It clouded his mind the whole evening, though. His desire to put some of Carly's suggestions into practice bordered on obsession.\n\nBrittany could sense his eagerness. It didn't take long for her to strip out of her trendy boutique clothes, but Johnson had his work cut out for him \u2014 she was a bit numb from two too many apple martinis.\n\nBrittany was a big fan of sixty-nine, and that's where she landed, head to toe on top of Johnson. His arms wrapped around her slender thighs as he went to work, trying to ignore her sweet, suctioning mouth on his throbbing cock.\n\n\"Oh yeah, suck my cock, baby,\" he said, jumping right into the dirty talk.\n\nBrittany loved the words, and she loved the feel of Johnson's warm breath on her pussy when he said them. She sucked him deep when his mouth engulfed her entire pussy.\n\nJohnson's head was spinning with Carly's suggestions. Speed, pressure, hold it steady. When the woman reacts just hold it steady.\n\nJohnson tried to decipher what was going on, but he didn't have a clue. He was in full sensory overload, no different from every other time he was with a sexy woman. He tried to maintain a rhythm with his tongue, and did a pretty good job of it, but Brittany was in a non-orgasmic happy place, content to feel tingly good as she sucked her new boy-toy to completion.\n\n\"Mmmmm,\" she moaned as she sucked the last drops and swallowed.\n\nFifteen minutes later they were fucking, Brittany riding cowgirl. Johnson didn't know how to handle that situation. He always thought a woman would be able to make herself cum when she was in control like that, but Brittany just rode, and rode, and rode until Johnson was nearly numb. He enjoyed it, there was no question about that \u2014 what guy wouldn't with a stunning, willowy blonde bouncing happily in his boner? But she seemed nowhere near an orgasm. Johnson rolled her. Brittany giggled as he spread her knees on the rumpled sheets for some doggy style.\n\n\"I want you to cum for me, baby,\" he said as he slipped his well-fucked cock back inside her. \"Tell me how you like it.\"\n\nBrittany moaned. \"Oh, yeah!\" she sighed. \"You're so deep!\"\n\nJohnson knew he wasn't. He wondered if Carly had fed him a line of bull about size not mattering. The first signs of Brittany faking an orgasm didn't help his confidence.\n\nHe tried to maintain his speed, his body slap slap slapping against Brittany's fine little ass. \"Tell me how you like it,\" he said breathlessly.\n\n\"Just like that!\" she said. \"Just like that!...Oh yeah!...Oh yeah!...Oh yeah!...\"\n\nBrittany's voice swelled to a lovely crescendo, and Johnson finally gave up. He knew it was a pity orgasm. It was nice, and Brittany was nice, but oh how he longed for the real thing.\n\n\u2014\n\n\"Eggs?\" Carly asked.\n\n\"Yes. Thanks, Carly.\"\n\n\"You don't look so good,\" Carly said, as she cracked two more eggs in her bowl and started beating them with a whisk.\n\n\"Oh, thanks a lot!\" Johnson smiled.\n\n\"I didn't see your friend leave.\"\n\n\"No. I think she wanted to get home before daylight.\"\n\nCarly made the breakfast in silence, buttering toast and slicing melon as the eggs cooked. She topped up Johnson's coffee before sitting down with him for the morning meal.\n\n\"I want you to listen to something,\" he said. He took his phone from his pocket, touched the screen a few times and set it on the table. The sound of sex broke the morning silence.\n\n\"You recorded her?\" Carly said, sounding, and looking, surprised.\n\nJohnson didn't say anything. He felt a bit guilty for doing it, but it seemed like a good tool to help him learn. He and Carly sat quietly, listening to the carnal sounds as they forked eggs into their mouths.\n\n\"She faked it,\" Johnson said. \"I know she did.\"\n\nCarly was stunned. She'd just listened to her boss's body slapping fast and loud into a moaning, seemingly orgasmic woman. She didn't know what to think.\n\n\"Maybe not. I mean, she sounds really...happy.\"\n\n\"Well, yeah, I mean...we had fun, but...dammit, why didn't she cum? I mean, I really thought I was onto something, with the things you told me.\"\n\n\"It's probably hardest with...intercourse. Did you try oral?\"\n\n\"Intercourse? It's called fucking Carly. And yeah, she was really into the sixty-nine. I thought for sure that'd be it. I tried to figure out how she was reacting, like you said, and kept really steady. I thought my tongue was gonna fall right out of my mouth.\"\n\n\"And?\"\n\n\"She made me cum! I guess I need more practice.\"\n\n\"At least you're thinking about the right things. That's the first step.\"\n\n\"I wish you could be there to guide me. Maybe I should hire a hooker and you can be there.\"\n\nCarly looked surprised again. \"What? No, I don't think that's a good idea. I mean, this is all crazy enough. And I'm far from the expert you think I am.\"\n\n\"You're a woman, Carly. You're underestimating how much more you know about female orgasms than the average man.\"\n\n\"I guess, but Jesus...this seems nuts.\"\n\n\"So what do I do?\"\n\n\"More of the same. Just be in the moment. Pay attention. You'll get there.\"\n\n\u2014\n\nCarly couldn't get the sound out of her head. She didn't know why. Sex noises were common in the twenty-first century \u2014 on television, in the movies, on the internet. Carly wasn't a big porn watcher, but she did watch the occasional bit of 'art porn', the genre that was supposedly targeted toward women. So she was surprised that the poorly recorded sound of Johnson fucking a rich girl had affected her so much. She just couldn't get it out of her head.\n\nHalfway through the day she found herself in her cabin, shorts around her ankles, panties pushed down a few inches. Her fingers furiously rubbed her clit. It felt otherworldly, but she couldn't make herself cum. She gave up before she hurt herself, smirking disappointedly, wondering if she should have faked it.\n\n\u2014\n\nJohnson went out again that night, feeling like he was on a quest. The woman who latched onto him was older, a real estate lawyer traveling on business.\n\nNicole was the kind of woman who cut loose when she was out of town, away from her husband and kids. It usually involved dinner on the expense account followed by a dance club. Sweaty dirty dancing was her thing, grinding on strange men late into the night. Every once in a while she'd find herself with company in her hotel room. It didn't happen too often, and rarer still were the times she'd gone home with a man.\n\nShe hit it off nicely with Johnson. He was a good dancer, and they both worked up a sweaty lather on each other before one last drink at the bar. That's when Nicole found out about Blondie.\n\n\"You live onboard?\" she asked.\n\n\"I do. I've still got my condo, but it's so much nicer to be on the water.\"\n\n\"Show me,\" she said.\n\n\u2014\n\n\"Ohhhh!...Yeeaahh!...\" Nicole exclaimed, wearing nothing but her bra in the dim light. \"Fuckin' give it to me!\"\n\nShe was bent over the chart table in Blondie's pilothouse with Johnson behind her, her body absorbing his thrusts with ass jiggling happiness.",
        "\"Fuck yeah!\" she gasped.\n\nJohnson loved her mature ways. Her whole attitude seemed different from his usual twenty-something trophy girls. She didn't seem very close to an orgasm, though, so after a good long fucking that they both enjoyed, he guided her onto her back on the table, so he could have a try with his mouth.\n\n\"Oh, God!\" she whimpered, looking out the window at her side as Johnson's mouth ravished her. \"Fuck!\"\n\nJohnson could tell he was onto something. A certain pressure with his swirling tongue seemed to be doing it, so he maintained, inhaling Nicole's rich, womanly scent as he worked.\n\n\"Oh, fuck!\" she gasped. \"You're gonna make me...! You're gonna make me...cum!\"\n\nShe sounded surprised, and delighted. Johnson kept at it, remembering Carly's words \u2014 don't change anything or you'll have to start all over. Less than a minute later Nicole erupted. Johnson was so conditioned for the fake, he didn't know what to think. Did I do it, he wondered? Was that...real?\n\n\"Oh my God!\" Nicole said, breathless and still writhing on the table. \"You win the prize, Honey. You win the prize.\"\n\n\u2014\n\nThe next morning Johnson still wasn't sure. He scolded himself for worrying about it so much. He knew his brief time with Nicole was special, but he couldn't help wondering if she'd really had the beautiful orgasm he hoped she had. He was eager to talk it over with Carly, and show her the new learning resource in his arsenal.\n\n\"I expected you to say hello last night when we came aboard,\" Johnson said, when he walked into the galley for breakfast.\n\n\"I poked my head up to make sure it was you. I didn't want to disturb you.\"\n\n\"Oh. Thanks. You're very thoughtful.\"\n\n\"That's a big part of a captain's job.\"\n\n\"So, I think...it went well last night,\" Johnson said.\n\n\"Really?\" Carly said. Her eyes were big with curiosity.\n\n\"It was exciting. An older woman, in her forties I guess, from out of town, with a wedding ring.\"\n\n\"You dog!\" Carly said, with an excited little smile.\n\n\"I'm pretty sure she had a big, beautiful orgasm. Either that or she's a fabulous actress.\"\n\n\"Wow! Congrats!\" Carly said. She chuckled. \"It feels really odd to say that, but, I'm happy for you. So, how did it happen, if you don't mind me asking?\" \n\n\"We were in the pilothouse...\"\n\n\"With all those windows?\"\n\n\"Yeah. I think she kind of liked that,\" Johnson smiled.\n\n\"That may have had a lot to do with it,\" Carly said.\n\n\"Really?\"\n\n\"It depends on the woman, but yeah. So, what was the magic formula?\"\n\n\"I want to show you,\" Johnson said.\n\nCarly's body flushed with heat and she blushed. Does he want to fuck me, she wondered? I can't let that happen if I want to keep my job! \"Show me?\" she said nervously.\n\n\"I took her to the pilothouse because...there's that security camera. We can watch that, right?\"\n\nCarly was dumbfounded, standing at the counter with a bowl of raw eggs in her hand. There was no way she was going to sit down with her boss and watch him fuck a middle-aged married woman. \"No. We can't.\"\n\n\"What good is the camera then? Doesn't it work?\"\n\n\"I don't know. I assume it works. But there's no way I'm watchin' that with you.\"\n\n\"Oh, come on Carly. I thought you were my teacher. My sexual guru. You need to help me figure this out.\"\n\n\"I think you may be obsessed with this. It's not healthy.\"\n\n\"It's not healthy to want to bring women pleasure? How can you say that? Don't you wish more men were as interested in this as I am?\"\n\n\"Not if they're showing video evidence to their co-workers.\"\n\n\"It's not like we work for a company. We're one-on-one here. I know I'm new at this \u2014 being an owner with a hired captain \u2014 but I feel like we're friends. I'll be honest with you, being stupid rich doesn't help in the friends department. Have you noticed none have stopped by?\"\n\n\"Johnson, I...\" Carly paused, making the mistake of looking into his suddenly sad eyes. \"...I guess we're watching that security video. Just make a mental note that I protested, okay. This is way out of the ordinary.\"\n\nAfter breakfast Carly and Johnson dug into the paperwork for all the systems aboard. Johnson found the envelope with the instruction manual for the security system. Carly knew where the control box was in the engine room. All they had to do was connect a laptop and download the file.\n\nA few minutes later Carly sat in the salon with Johnson next to her, with the laptop on her knees. She'd seen Nicole from a distance when she and Johnson boarded the night before, clothed in tight jeans, spiky high heeled shoes and a tailored, button-up shirt. It didn't prepare Carly for the sight of her in nothing but a bra being pounded by her naked boss.\n\nIt was her first look at Johnson naked. The camera angle was from the side, a wide angle shot that took in the whole front of the pilothouse. He was no muscle man, and didn't have the tone of a guy who goes to the gym, but he was lean, had hair in all the places where Carly liked to see it, and looked remarkably manly. She was more than a little impressed.\n\n\"Are you all right with this?\" she asked sheepishly. \"You don't mind me...seeing you?\"\n\n\"I guess not,\" Johnson said, sounding like he was trying to figure things out, too.\n\n\"She's sexy,\" Carly said. \"Do women like that just fall all over you?\"\n\n\"I seem to be luckier than a lot of guys. I've never understood it.\"\n\n\"Gold watches and two-thousand-dollar shoes, maybe?\" Carly said, smirking as she looked at Johnson's handmade Italian loafers.\n\nJohnson didn't respond. His eyes were glued to the screen, watching sexy Nicole absorb his enthusiastic thrusts.\n\n\"Zoom. Can you zoom?\" he said, sounding like he was in a trance.\n\nCarly hit pause and picked up the manual. \"Yup. Make a box with the cursor and click in it.\"\n\n\"Whoa!\" she said when the screen was filled with two energetic people fucking. \"This is fucked up, Johnson. We shouldn't be...\"\n\nJohnson payed no attention, and Carly chose to ignore her own better judgment. They sat quietly and watched the long session of bent-over-a-table doggy style.\n\n\"So, I did what you said. I tried to keep a steady rhythm that she liked, and just...kept at it.\"\n\n\"Yeah, that's...really good, I must say,\" Carly said. \n\nShe thought back to all the men she'd been with in the past, trying to remember if any of them had Johnson's fortitude, but the action on the screen kept interrupting her thoughts. When the epic fucking slowed and stopped Johnson's voice startled her.\n\n\"This is when I decided she wasn't going to cum and I needed to try something else.\"\n\n\"But she did,\" Carly said. \"Twice I think, maybe.\" Carly hit pause on the computer. \"That's not what you wanted to show me?\"\n\nJohnson looked confused. \"No way! You think...she came already?\"\n\n\"I'm pretty sure. Let me see if I can find it.\"\n\nCarly held the cursor over the video time control, looking for the tell-tale signs she had seen. She went back to a still frame that was near the magic moment and zoomed in some more, as close in as she could get on Nicole's face without it getting too grainy. She backed up a few more frames and hit play.\n\n\"There! She's definitely cumming.\"\n\nJohnson was mesmerized. When he was fucking Nicole he couldn't see her face, but the camera clearly revealed a woman having a quietly burning orgasm, complete with an open mouth, a spastic tongue and rolling eyes.\n\n\"Fuck!\" Johnson said quietly.\n\n\"Keep watching. It happens again in a few minutes.\"\n\nThey sat silently and watched Nicole's grainy, black and white face, ghostly in the dimly lit pilothouse. Sure enough, about three minutes later her eyes rolled again. That time her tongue stuck out the way a person's does when they're choking. Her body was clearly overwhelmed by the big event.\n\n\"Jesus!\" Johnson said quietly. \"Why don't you guys tell us when that's happening? We'd kind of like to know.\"\n\nCarly giggled nervously. \"She was probably trying to be quiet. There's other boats around. You know how quiet the boatyard is at that time of night.\"\n\n\"I guess. So holy shit...she came like three times!\"\n\n\"Should I jump ahead?\" Carly asked, eager to see the big moment Johnson knew about.\n\n\"Yeah,\" he said, sounding a bit confused by all the new revelations. \"Back to where we were.\"\n\nCarly zoomed out and cued up the section where Nicole was on her back on the chart table.\n\n\"That's my work table, you know,\" Carly said, pretending she was unhappy.\n\n\"Yeah. Sorry,\" Johnson said embarrassedly. \"So, it doesn't take too long now.\"\n\n\"I'm not surprised. After orgasms like that a guy's tongue must feel like pure heaven.\"\n\nThe sound on the video was a bit tinny and muffled, but Nicole's voice was clear enough. \"Oh, fuck!...You're gonna make me...! You're gonna make me...cum!\"\n\nCarly and Johnson watched in silence as the sexy woman lost it in a big way, writhing on the table with her bra covered tits arched high toward the ceiling.\n\n\"Oh my God!\" Nicole said, still writhing with electricity in her body, her muffled, tinny voice noticeably breathless. \"You win the prize, Honey. You win the prize.\"\n\n\"Wow!\" Carly said. She was suddenly embarrassed, wishing Johnson hadn't heard her quiet exclamation, and wishing he couldn't see the lusty, turned-on look in her eyes. Teacher face, teacher face, she screamed at herself. Put on your damn teacher face!\n\n\"Why did you want me to see this?\" she asked as she paused the video.\n\n\"I thought maybe she was faking.\"\n\nCarly smiled. \"I think you've got a problem. She was as lost in that moment as most women would love to be. If you think that's faking, I don't know what to...\n\n\"No, I mean I didn't. I've just been around so many opportunistic...girls, I guess I can't even tell what's real anymore. Nicole was great, right? Why aren't there more women like her?\"\n\n\"Maybe you hit on something. Find an older woman who's less superficial. Are you looking for a relationship, or what? What's your goal here?\"\n\n\"My goal? I just want to know if I can make women happy. Sexually, I mean. It's important to me.\"\n\n\"That's a worthy goal. I don't know if I'd go about it the way you are, but...\"\n\n\"This is hot, though, right?\" Johnson said, looking at the freeze frame on the computer screen. \"The watching, I mean. I never realized...\"\n\nCarly hadn't either. It was incredibly exciting, and fascinating, to sit and watch Johnson having sex. She didn't know why. She wasn't attracted to him \u2014 he wasn't her type and there was no spark there. But the voyeur thing was definitely getting to her.\n\n\"What if we install some more cameras?\" Johnson asked.\n\n\"What? No, you shouldn't...\" Carly said. \n\nJohnson had a feeling she was just saying that to be proper, but her look of shock was pretty convincing.\n\n\"Just a thought,\" he said.\n\nCarly's mind spun in ten different directions. More cameras? Isn't that illegal? Would he want me to watch every time? Would he tell the women they were being videotaped?\n\n\"It's your boat,\" Carly said, leaving the door open. \n\nJohnson fought off a smile. \"You should delete that. Can you delete the hard drive in the control box, too?\"\n\n\"I'm pretty sure it goes away after a day or two, or a week or something. I'll read up on it.\"\n\n\"Good. You know, the security of Blondie's important. There should probably be a monitor in your quarters, don't you think? If there was an intruder, you'd be able to see if there was danger.\" Johnson was trying to keep a straight face, but it wasn't easy. He had a feeling Carly enjoyed the voyeur thing as much as he did. He loved knowing there was a camera on him when he was with Nicole. \"It'd be useful at night, too. You know how you've been coming up to check on things when I get back after a night out? You wouldn't have to get dressed or anything. You'd see it was me and not have to disturb yourself. I like the idea. We'll add a few more cameras, too. Look into it, will you?\"\n\n\"I will, if you...really want me to,\" Carly said, looking befuddled. She could hardly believe what she was hearing. The security aspect made sense, but she knew Johnson had more than that in mind. It seemed like he was giving her permission to watch him with his female companions, with the goal of...sex education? Entertainment? Both?\n\n\u2014\n\nCarly called the boatyard where Blondie was built and explained the updates to the security system. She and Johnson moved the boat to their wharf the next day, good practice for Johnson's 'crew' skills. Two days later they arrived back at the marina. After a light supper Johnson wanted to familiarize himself with the new system. They went to Carly's cabin where the permanent monitor was mounted. She showed him what the technician at the boatyard had shown her, using a new iPad as a controller. The two of them read through the paperwork, gleaning more details.\n\n\"The monitor is switchable,\" Carly said, clicking through the different views from all the new cameras. \"These deck views are really nice. The cameras work in really low light. I'll be able to keep an eye on things if there's anybody nosing around the docks.\"\n\n\"Good. Yeah,\" Johnson said. \"Is there sound?\"\n\n\"Yup. All the cameras are miked. This engine room camera is really nice. I can monitor it on the laptop at the helm when we're underway.\"\n\n\"Nice.\"\n\n\"Each camera can be switched off,\" Carly said. \"There's a switch right on the camera itself, and there's lens covers, too, so you're doubly sure. For privacy in the staterooms, you know?\"\n\n\"Oh. Sure,\" Johnson said. He watched the monitor as Carly showed the view of each of the three guest staterooms, ending with a wide view of the big king-sized bed in Johnson's master stateroom. \"We'll just leave those as they are,\" he said.\n\nCarly's eyes didn't leave the monitor. Johnson's didn't either. Both of them had a pretty good idea what the other was thinking, and neither one of them wanted to make eye contact.\n\n\"This'll be good, don't you think?\" Johnson said.\n\nCarly couldn't tell if was talking about the security improvements or the view of his big bed that she could watch while lying on her own. A shot of adrenaline coursed through her. \"Yup. It's good.\"\n\n\u2014\n\nLate that night Carly heard footsteps on deck. Her instinct was to go up and have a look around, but she knew it was probably Johnson. She put down her book, picked up the iPad and brought up a view of the side deck just as Johnson and a petite twenty-something were disappearing from the camera's field of vision.\n\nShe should have left it at that, but it was a good opportunity to familiarize herself with the new system. She switched to the salon camera, and then to the dining area, finding Johnson mixing drinks for himself and the awestruck young girl.\n\n\"This is incredible!\" the cute girl said, looking around at all the satin finished mahogany. \"Do you live here all the time?\"\n\nCarly switched off the sound. It seemed too much like eavesdropping. She was ready to switch off the video, too, but she watched for a minute or two, just to look over the young woman's clothes and her cute hairstyle. That style would never work on my rounder head, Carly thought. She clicked off the iPad and went back to her book. The urge to switch on the bigger wall-mounted monitor and look in on Johnson and the girl never left her, but she managed to get through another chapter of the romance novel before drifting off to sleep.\n\n\u2014\n\nThe petite girl with the cute hair stayed for breakfast. Her name was Lauren. She was more than a little surprised to learn there was crew onboard, and looked embarrassed when Johnson introduced her to Carly in the galley.\n\n\"She's not only the captain, she makes a mean scrambled egg,\" Johnson smiled.\n\n\"Oh,\" Lauren said. \"I guess you need someone who knows what they're doing to drive a boat this big.\"\n\n\"You sure do,\" Johnson said. \"Carly's the best.\"\n\nCarly was uncomfortable too, so she made two breakfast plates and started to leave.\n\n\"You're not eating this morning?\" Johnson asked.\n\n\"I've gotta check the generators,\" she said. \"Nice meeting you, Lauren.\"\n\nAn hour later, after Lauren had gone, Johnson found Carly in the engine room. \"So, what did you think?\" he asked.\n\n\"About what?\" she said.\n\nJohnson smiled a sly smile. \"You know. I think she faked it, but you proved me wrong last time.\"\n\nCarly looked surprised. \"Are we talking about what I think we're talking about?\"\n\n\"Didn't you watch?\"\n\n\"No! I didn't! And I shouldn't! I could get thrown in jail for something like that. I saw you come aboard, and I switched it off.\"\n\n\"Oh,\" Johnson said, sounding disappointed. \"I guess I didn't think about the legality of it, with you being my employee and everything.\" Johnson pondered things for a moment. Carly was silent, unsure of what to say. \"I'll be right back,\" he said.\n\nJohnson returned ten minutes later with a piece of paper in his hand. \"This should ease your mind,\" he said, handing it to Carly. It read...\n\n\"I, Johnson Edmond Humphries, do hereby grant full permission to my ship's captain, Carly Savara, to monitor the ships security video at any time. This includes monitoring areas where I and my guests may be present, including my stateroom. Ms. Savara has my full authorization to watch anything and everything, including the most personal of activities.\"\n\nIt was signed and dated. Carly couldn't believe her eyes when she read it. What kind of a fuckin' crazy job did I get myself into, she silently asked herself.\n\n\"We can still watch it, can't we?\" Johnson asked, snapping Carly out of her confusion. \"You said it's good for like a week, right?\"\n\n\"Oh. Um...if you want to, yeah.\"\n\nThe walk to Carly's cabin felt surreal. Somehow she'd let herself get sucked into Johnson's voyeuristic vortex. What surprised her most was how exciting it all was \u2014 grainy black and white videos of her naked boss with naked women; giving him advice on sexual techniques; listening to his excitement about giving women orgasms. As they made their way down the companionway to her cabin, she could hardly wait to see Lauren being fucked. It was a strange and bizarre feeling.\n\nThere were two single bunks in Carly's cabin, one that she slept on and one arranged with lots of pillows to serve as more of a couch. Johnson took his place there, sitting casually while Carly tried to calm her pounding heart and gather her wits. She glanced at the piece of paper in her hand, shook her head a little in disbelief, put it in her dresser drawer and switched on the wall monitor. She sat with Johnson, well away from him, and used the iPad to bring up the recent video.\n\n\"It's cool that it saves all those cameras for a week,\" Johnson said. \"Nice system.\"\n\n\"Yeah,\" Carly said. She switched to the view of Johnson's stateroom, fast-forwarding through the earlier part of the day. When she saw movement in the room she hit pause. \"Oh, sorry,\" she said embarrassedly. She fast forwarded again, but not before she'd seen Johnson sitting on the edge of the bed, with an open shirt on and no pants, masturbating.\n\n\"Oh. Yeah, that's...part of my...preparation, sometimes,\" he said. \"I think I last longer if I've already...you know.\"\n\n\"Oh,\" Carly said. She was blushing and getting flustered. She wondered if all guys did that. There was movement in the image again, so she hit pause. Lauren was already on her knees. The girl works fast, Carly thought. She hit the play button.\n\n\"Is there sound?\" Johnson asked, already mesmerized by the sight of Lauren giving him a blowjob.\n\nCarly switched it on and turned it up as loud as it would go. Lauren's moans seemed to ooze out of the monitor's tinny-sounding speaker.\n\n\"Can you zoom a little?\" Johnson asked.\n\nNeither he nor Carly said anything else for a while. Carley felt even odder than the first time, when she'd watched Johnson with Nicole. Sitting in her cabin with him, leaning back against her comfortable pillows, seemed more planned, more deliberate. The monitor was bigger, the atmosphere was quiet \u2014 it almost seemed like there should be popcorn, and Carly felt it was very odd indeed.",
        "After a little while Carly needed to break the tension. \"She's so petite. I thought you were a leg man.\"\n\n\"Oh,\" Johnson said. \"You're right, she's...not my usual type, I guess.\"\n\n\"Do you...want me to fast-forward?\" Carly asked. \"Did you want to show me something in particular?\"\n\n\"No, she's almost done I think,\" he said, watching the look of ecstasy on his face as Lauren continued with the nice long blowjob.\n\nCarly thought about her own oral skills, or lack thereof, while she watched the cute girl drive Johnson to the brink. Blowjobs had never been Carly's forte. She was okay at it, she thought, but she'd never drawn it out into a long, sensual event the way Lauren was doing. And she'd never had the confidence that a man could get it up again to take things all the way to completion. And then there was the whole cumming in the mouth thing, and the swallowing thing. Carly had never been comfortable with either.\n\n\"Is she really good at that, or am I just imagining things,\" Carly asked, right after Johnson came in Lauren's mouth.\n\n\"Really good,\" Johnson said.\n\nLauren's giggle rang out through the tinny speaker when Johnson flung her onto the big bed. Her skirt was up and he pulled off her panties with one forceful motion. His mouth went to her pussy and her breathy, staccato moans gave Carly goosebumps.\n\nBased on what she was seeing, Carly wondered why Johnson had any doubts about Lauren. The girl was obviously having a wonderful time, and she seemed plenty sensitive in all the right places. Would a girl like that really fake an orgasm, Carly wondered?\n\nThe answer was yes. Lauren went off against Johnson's tongue, looking and sounding beautifully sexy, but Carly had a pretty good feeling it wasn't a real orgasm.\n\n\"I think I see what you mean,\" Carly said.\n\n\"Right?\" Johnson said. \"I get that all the time.\"\n\n\"Maybe...it's your money,\" Carly said. \"I mean, they all know you're a rich guy, right? They probably think if they please you they can be part of your world.\"\n\n\"Maybe.\"\n\n\"Why are you stopping?\" Carly asked, critiquing Johnson's actions on the screen. \"If you think it's fake you should keep at it. Don't give up. We talked about how it takes time for lots of women.\"\n\n\"Yeah. I guess I wasn't thinking about that. I need to keep that in mind better.\"\n\nCarly and Johnson watched as the oral session transitioned through a quick strip-down of clothing to some full-on fucking.\n\n\"Do you want me to watch this?\" Carly asked. She was feeling warm and flush, and a little embarrassed.\n\n\"Yeah, there's more. She came like three times. I wasn't sure about any of it.\"\n\n\"Do you need to be?\" Carly asked, taking a more psychological approach.\n\n\"What do you mean,\" Johnson asked.\n\n\"I'm just wondering why it matters so much. The other night, with Nicole, would you have enjoyed it any more if you'd known she was having real orgasms?\"\n\n\"Sure. Oh, yeah. Wouldn't you? If you were with a guy and you were doing something to him you thought was really great, something you thought was going to genuinely please him, wouldn't it bother you if he faked a response?\"\n\n\"Yeah, you're right. It would,\" Carly said. Her attention focused on Lauren again. The cute girl was on her back with her legs up on Johnson's shoulders. Her tits were gyrating in circles as a good rhythmic fucking rocked the bed. Lauren's vocalizations rose in intensity.\n\n\"You're makin' me cum!\" she shrieked. \"Oh, fuck yeah!\"\n\nWith that she feigned a meltdown. It was good acting, sexy as hell, but Carly smelled a rat.\n\n\"She's good, but, yeah, I see what you mean,\" Carly said. \"I still think you could just go with it though. I mean, she's really sexy, isn't she?\"\n\n\"Very sexy. But how am I going to have a second date with someone if they're not being truthful with me?\"\n\nCarly was astonished. She'd assumed the women were all sexual conquests. Quick pick-ups. She never dreamed Johnson thought of them as dates.\n\n\"So this is really important to you,\" Carly said, giving away her surprise.\n\nJohnson nodded. He didn't know what to say. Things were getting deeply personal.\n\nCarly watched Lauren position herself on her hands and knees. Johnson wasted no time plunging into her, holding her sexy little ass in his hands. \n\n\"So, you normally don't see the same woman more than once?\" Carly asked.\n\n\"No. If I see them again, out at a club or wherever, all I can think about is how I messed up. I'm the guy who couldn't give them an orgasm.\"\n\n\"Wow,\" Carly said. \"That must be...awful. I think you need to start thinking about all of this differently. Nicole, and even Lauren here, they both had lots of fun with you. Just because a woman doesn't have an orgasm doesn't mean she's not having a great time. I told you the other day, I've faked it once in a while. As far as I can remember I still had a great time.\"\n\n\"I don't want to be that guy. The one you had to fake for.\"\n\n\"So, don't give up. After both of Lauren's fakes you just moved on to something else. Remember what I said about persistence? If something you're doing is getting there, as soon as you stop it you need to start all over from scratch. Well, maybe it's not quite that dramatic, but, do you get what I'm saying?\"\n\n\"Yeah,\" Johnson said. \"I wasn't thinking last night. I dropped the ball.\"\n\n\"You need to get that pressure off of yourself somehow,\" Carly said. \"You're still young, and obviously there's no shortage of women who want to be with you. Relax. You'll get used to the signals women are giving. Don't give up when you see something working. It takes a little time.\"\n\n\"You're awesome, Carly. Thank you so much.\" Another beautifully acted, sexy as hell fake orgasm ripped out of the monitor's speaker. \"I'm surprised you didn't watch this last night. I wouldn't have been able to resist.\"\n\n\"Yeah, well...I thought about it. I'll admit that.\"\n\n\"You know it's okay, right?\"Johnson said. \"I'll admit something, too \u2014 I thought you were watching. I kind of...liked it, that feeling.\"\n\nCarly's body flushed with heat again. \"You did? Is that something you're into?\"\n\n\"Not that I know of. I mean, this is all new.\"\n\n\"Really! You seem so...relaxed about it.\"\n\n\"That's because of you. I could never sit here and watch this with someone else.\"\n\nCarly was wondering where things were going. Did Johnson have feelings for her? Was he angling for something physical to go along with her other duties? Her nerves kicked in again and she felt a need to call an end to things. \n\n\"Are we done with Lauren?\" she asked. \"Sorry. That sounded horrible, didn't it.\"\n\n\"You can switch it off. Do you really think she had fun? I hope she did.\"\n\n\"I'm sure of it,\" Carly said. \"I hope you did, too.\"\n\n\"Yeah. I mean, I gotta get over this problem, but yeah, she was great.\"\n\n\"Have patience,\" Carly said. \"Women aren't as complicated as you think. Just...a little different.\"\n\n\u2014\n\nFor the next two days Johnson didn't go out at night. A nice couple stopped by for drinks one night, and the other night he turned in early. Carly fought the temptation to \"check in\" on him with the security cameras. Her curiosity was powerful, but she knew if she gave in to it she'd have a hard time looking him in the eye the next morning.\n\nThe two day respite from her duties as sexual counselor gave her a chance to think about what was going on. It was an odd situation she found herself in, that was for sure. She was glad she was between boyfriends. Carly didn't want a steady man, but she enjoyed a project. Teaching Johnson how women like to be treated and molding him into a skilled lover was a project that seemed worthy, somehow. She wasn't sure why. She wondered if she was deluding herself because the situation was so titillating, but then she remembered the sad look in Johnson's eyes when he talked so honestly about not being able to satisfy a woman. I could show him, Carly thought to herself. We could strip down and go one-on-one, for as many sessions as it takes, until he feels confident. She smiled and shook her head. Yeah, right! And lose my job afterward! \n\nInstead, she broke out her vibrator. She had to wipe the dust off of it \u2014 sex just hadn't been on her mind much since she broke up with her most recent boyfriend. After all the talk of faked orgasms she wondered if she'd be able to cum, but the first touch of the buzzing silver tip sent such a jolt through her she knew there was nothing to worry about. It took a few pleasurable minutes, with her mind spinning full of visions of Johnson with Nicole and Lauren. \"Damn!\" Carly exclaimed, her voice almost all breath as the lovely warm orgasm coursed through her. She breathed deep a few times, pulled up her pants and went back to the engine room for her weekly hydraulic inspection.\n\nJohnson went out the next night, dressed in his 'handsome rich guy' clothes. Two hours later Carly heard the tell-tale clicking of high heeled shoes on deck. She turned on the monitor just in time to see a long legged woman taking them off. Carly was glad Johnson had remembered \u2014 high heeled shoes aren't kind to teak decks.\n\nThe woman was a stunner. Carly thought she looked similar to Ginger, but with blonde hair and more curves where they counted. Shoes in hand, she took Johnson's arm and he led her into the salon. Carly switched to that camera. It was a first, following Johnson and his guest like a stalker. \n\nShe chose to watch in silence. Listening in seemed even more wrong than what she was doing. She was curious what the woman's name was, but it didn't really matter. She watched as Johnson mixed two drinks, and the blonde sprawled out on the couch. It was like a silent movie, and just like in those, Carly had a pretty good idea of what was being said. \"This leather is so soft,\" as the woman ran her hand over the settee cushion. \"Do you live here?\" as she looked around. \"Where do you go? Do you take it to the islands?\"\n\nThe woman curled her legs against herself and Johnson sat down. He leaned in and kissed her before he handed her a drink. She smiled a pretty smile.\n\nCarly zoomed in. No need to see the whole room, she thought, when she could get a better look at things. The blonde put her drink on the table without taking a sip. It was go time.\n\nAnother kiss. Steamy. Hot. Tongues aplenty. The plunging neckline halter top the woman was wearing had ties down the front to hold it closed. Johnson pulled the strings, one at a time as the kiss burned on. A minuscule bra held healthy, natural looking tits, leaving plenty of flesh showing for Johnson to bury his face in.\n\nShe wiggled out of the halter and unfastened her black shorts. When they were off of her a tiny black thong was left, and Johnson pulled it aside. Carly had a good look at the woman's eyes, flaring with excitement as Johnson's fingers violated her.\n\n\"God I hope she cums,\" Carly said, whispering to herself in the quiet of her cabin. She felt bad about Johnson's struggle, and hoped the sexy blonde would be the charm.\n\nMost of the talking seemed to be over, so Carly turned up the volume. The salon is a big room, and the camera was some distance away from Johnson and the woman, but with the volume up all the way the eerily muffled noises were unmistakable. The blonde was having fun!\n\nShe was a stunning looking creature in her tiny bra and thong. Quickly on her hands and knees next to Johnson, she opened his pants and inhaled his cock. Carly gasped at the technique \u2014 Johnson wasn't big, but still, right down the throat!\n\nAfter a while Johnson pushed her away, his cock still hard and glistening. Carly wondered if he'd masturbated before he went out \u2014 he seemed to have his usual remarkable stamina.\n\nWhen he and the woman were both naked he pushed her down on the soft leather and ate her. Carly was fascinated by her smoothly shaved pussy, with it's big, prominent, darkly pigmented lips. She'd heard a pussy referred to as a flower once before, and the blonde woman's almost looked like one. Johnson seemed to like it \u2014 his face was buried in there deep, moving side to side. Carly decided then and there that she needed to start dating again.\n\nJohnson worked hard, but the woman didn't cum. Carly was getting worried. It was a long oral session, the kind of thing that should have at least got her close, but...no cigar. Johnson gave up. He wiped his juicy mouth on his arm. The woman said something Carly couldn't hear. She fumbled for her little purse and pulled something out. Carly assumed it was a condom.\n\nThe woman arranged Johnson on his back. She squeezed some lube on his rock-hard cock. She mounted him, reverse cowgirl style, lowering herself slowly, her mouth and eyes open wide. It was a slow process. Carly wondered what was happening. When the stunning blonde leaned back and fingered her own pussy it was unmistakable \u2014 Johnson was in her ass! \n\nCarly swallowed hard. She'd heard about anal sex but had never watched that genre of porn. She never watched BDSM, or golden showers, or any of the other things that always seemed so filthy to her, partly because she assumed the participants would be skanky looking degenerates. The blonde riding Johnson was hardly that. She looked incredibly beautiful and sexy, and really happy to have a hard cock way up in her ass.\n\nCarly watched as the ass fucking got underway. The woman's hand was on her wide-spread pussy, working furiously. She wasn't just rubbing one out, her fingers were three knuckles deep in the squish. It was a wild scene \u2014 Johnson's hips thrusting upward, the woman's increasingly orgasmic body bouncing and writhing, her hand moving at the speed of a blur. Johnson's muffled moans joined with the blonde's increasingly loud shrieks. Carly wondered if any of the neighboring yachts were aware. She zoomed the camera out and sure enough, just as she thought, Johnson had left all the windows shades open.\n\nCarly zoomed in on the couple just in time. A devilish shriek emanated from the monitor's speaker as the woman came hard, her body reacting differently to Johnson's insistent thrusts, getting limper and less controlled as the big orgasm scrambled her nervous system.\n\n\"Fuck!\" Carly whispered to herself when it was over. \"That was fuckin' real!\"\n\nShe zoomed in as close as she could on Johnson's face, hoping he knew it too. She was pretty sure he did.\n\nThe blonde was breathless, trying to gather her composure. \"Did you cum in me baby?\" she asked.\n\n\"There was no way not too,\" Johnson said, breathless and happy looking.\n\n\"You like my ass?\" she asked. \"Wanna fuck the rest of me now?\n\n\u2014\n\nJohnson walked into the galley shirtless and barefoot, with wet hair. It was the first time Carly had seen him that casual.\n\n\"That smells good,\" he said, sniffing the peppers and onions Carly was cooking on the stove. \"How was your evening? Anything good on TV?\"\n\nCarly was momentarily embarrassed, but Johnson looked happy and his eyes were twinkling. \"What's her name?\" she asked.\n\n\"Lisha. You watched?\"\n\n\"She's not a faker.\"\n\n\"No, she is not,\" Johnson smiled.\n\n\"How often do girls...want it that way?\"\n\nOh, the anal, you mean? Not too often. It seems to be more popular now than it used to be, but...yeah, she was different, wanting it right off the bat like that. She really likes it.\"\n\n\"I'd say she really loves it.\"\n\n\"So, please tell me I wasn't dreaming,\" Johnson said, \"she came all over the place, didn't she?\"\n\n\"Oh yeah. That girl's orgasmic. That was...quite a show. After her first one it was like there was no stopping her.\"\n\nCarly wanted to comment on how there was no stopping Johnson either. She hadn't watched people fucking all that often, but Johnson's performance with Lisha was truly impressive.\n\nCarly stirred the saut\u00e9ing vegetables one last time and poured in the whisked eggs.\n\n\"I'll get fat eating all your good cooking,\" Johnson said, pouring himself a mug of coffee.\n\n\"You need your stamina,\" Carly said. She blushed, wishing she'd said something different.\n\nJohnson smiled. His quest for the elusive female orgasm had driven him to learn to control his own orgasms. He knew he was pretty good when it came to hanging in there, and he was glad Carly had noticed.\n\nWhen the eggs were cooked she plated them and served them with grapefruit halves and toast. She noticed Johnson's freshly showered scent when she sat down across from him. \"Are you going to see her again?\"\n\n\"Lisha? Oh, I don't know,\" he said, sounding like he hadn't thought of that before.\n\n\"Do you ever?\"\n\nJohnson smiled. \"Am I a slut? Do you disapprove?\"\n\n\"No, it's not that. But you've obviously found a girl who has real orgasms, right down to the molecular level, and she's gorgeous to boot. Why not give her a chance?\"\n\n\"Then I'd never know. Maybe it's just her. Maybe what happened last night had nothing to do with me.\"\n\n\"Oh, that had to do with you. Trust me. You made that girl cum. Eight times if my count was right. That's a new record I think.\"\n\n\"You're good for my confidence, Carly.\"\n\n\"How come you don't use the hot tub with any of your women?\" \n\n\"I don't know. I guess I never think of it.\"\n\n\"I thought maybe it was because of the neighbors.\"\n\n\"Fuck the neighbors,\" Johnson said. \"Hey, speaking of which, have you met Bill? He's three slips over from us I think, in the champagne-colored Nordhaven. Pretty boat.\"\n\n\"Oh, yeah, I spoke with him the other day.\"\n\n\"He was asking about you. You should work on that,\" Johnson smiled. \"Guys are easy, you know.\"\n\n\"What did he say?\" Carly asked, suddenly very interested.\n\n\"I think he was wondering if you and I had anything going on.\"\n\n\"Oh my God, do we? I mean...what's this we're doing?\"\n\n\"You're helping me with my psychological problems,\" Johnson said, smiling.\n\n\"Yeah! Sitting in my dark cabin watching you fuck! That's not normal, Johnson.\"\n\n\"But it's fun, right?\"\n\nJohnson spoke the truth. Watching him fuck Lisha five different ways and twice in the ass was a thrill Carly wouldn't soon forget. But would Johnson brag about the cameras and the voyeurism to other men? Would he tell Bill what she'd been up to? Carly was starting to think she didn't care.\n\n\u2014\n\nJohnson took a break from women the next night, staying home in the quiet of his stateroom. Carly looked in on him for a moment. He seemed to be writing an email or something. She turned the monitor off and felt bad about looking.\n\nCarly liked to check the dock lines one last time before turning in for the night, so she went up on deck for a walk around. Bill was passing by the end of the dock, walking his dog.\n\n\"Hi, Carly. How are you?\" he said.\n\n\"Oh, hi,\" Carly said. \"It's Bill, right?\n\n\"Yes. And this is Charger. Beautiful night, isn't it?\"\n\n\"It is.\" Carly smiled at Bill's kind looking face and the handsome golden retriever on his leash. \"Would you like to come aboard for a drink, Bill? I've got it on pretty good authority that drinks are on the house around here.\"\n\n\"I'd love to. Just let me bring Charger home.\"\n\n\"He's welcome.\"\n\n\"Thanks, but his claws need to be clipped. I'd hate to have him scratch up your nice new deck.\"\n\nCarly watched as Bill walked to his boat. He had a nice ass for a man in his mid-forties. Her whole body tingled a little. She was ready for some excitement.\n\nBill was back in three minutes, walking at a brisk clip. Carly welcomed him aboard and strolled the deck with him, giving him the lay of the land.\n\n\"Beautiful ship,\" Bill said. \"Puts my little boat to shame.\"\n\n\"Are you kidding?\" Carly said. \"I love your boat. I think the 43 is the perfect size.\"\n\nAfter some more chat about the ocean crossing abilities of smaller powerboats, they found themselves at the bar in Blondie's dining area.\n\n\"You sure Johnson won't mind? I'd hate to get you in trouble with him.\"\n\n\"Actually, he's been after me to get a social life, and said to treat Blondie like my own. I got lucky with this job. He's a pretty terrific boss.\"",
        "\"So have you? Gotten a social life?\"\n\n\"No,\" Carly said. \"It's not as easy as it used to be, and it was never easy.\"\n\n\"Same with me. My wife passed away five years ago, and I can count on one hand the number of, ahem, social...engagements since then.\"\n\n\"How long are you here for, Bill?\"\n\n\"I was planning on heading out tomorrow. North, up the Intracoastal.\"\n\n\"Well, we shouldn't waste any time then, should we?\" Carly smiled. She was a little surprised by her go for it attitude, guessing a little bit of Johnson had rubbed off on her. \"Shall we kiss, or go right for the good stuff?\" she asked.\n\nBill seemed pleased with the turn of events, but he didn't know how to answer her question. With his drink in his hand he watched amazed as Carly reached for his crotch, massaging it gently. Her eyes showed her excitement. \"Too much, too soon?\" she asked. \n\n\"Are you kidding?\" Bill said. \"I'm disappointed we waited until it was almost too late.\"\n\nHe moved in and kissed her. Carly's hand was still full of swelling crotch.\n\n\"You'll burst your pants,\" she said, wondering just what he had hidden in there. \"Open them for me.\"\n\nBill set his drink down and unzipped while Carly kissed him again. He pulled out his cock and Carly's hand found it, warm, and hard, and...huge!\n\n\"Bill!...Wow!\"\n\nBill kissed her again. Carly melted into his lips, slowly stroking an appendage that hardened into a solid eight inches.\n\n\"Good Looorrd!\" she purred.\n\nCarly had a feeling Johnson was watching. He had an iPad in his stateroom all set up with the security system. Carly's plan, the one she formulated when she was watching Bill's ass as he walked away with his dog, was to give Johnson a little tease, just for fun, to pay him back for all the fun she'd had watching him. The cock would go back in Bill's pants and she'd giggle in the camera's direction as she led him away, down to her cabin where they could have some privacy. \n\nBut...the plan was going awry. She suddenly wanted to suck the huge dildo-sized cock right there in the salon, with the windows unshaded and the camera pointed at her. It was a powerful urge, overwhelming all her common sense. She dropped to her knees and welcomed her new friend with her tongue.\n\n\"Should we go...to your cabin?\" Bill asked, looking around at the dark marina outside the windows.\n\n\"No. Right here,\" Carly said.\n\nBill thought it was dangerous, and he worried about Carly getting in trouble with her boss, but if a blowjob in the salon was what Carly wanted to do, he wasn't going to say no. He groaned when she took him as deep as her nearly gagging throat would allow.\n\nJohnson was watching. He was in the galley when Bill had come aboard and he ducked down to his stateroom so as not to disturb them.\n\nHe was happy when he switched on the iPad and saw Carly mixing drinks, glad that she was having a little excitement in her life even though he was sure most of it would happen in the privacy of her cabin.\n\nWhen Bill's cock came out it was a holy shit moment for Johnson. He almost spit out the beer that was in his mouth. And then Carly went down on the big thing. It was the kind of cock Johnson had always wished he had in his own pants \u2014 a good three inches longer than his, and girthier, too. Carly literally had her hands full.\n\nThe blowjob was more sensual than what Johnson expected to see. In everyday life Carly didn't come across as a sensual woman, but the old saying came to Johnson's mind as he watched her mouth moving on the big, glistening cock \u2014 you can't judge a book by its cover.\n\n\"Will you get hard again if I make you cum?\" Carly asked, looking up at Bill with lusty eyes.\n\n\"Nothing can stop me tonight,\" Bill said, breathless and close to the edge.\n\nCarly smiled and sucked him in again, more forcefully, working her gagging mouthful like the powerfully horny woman she was. Cum gushed out of Bill and he groaned loudly. Carly took the hot load of cream in her mouth, something she'd only done once before, and she swallowed it. That was a first.\n\n\"Fuck!\" Johnson said, wide eyed in the quiet of his stateroom. \"You go, Carly!\"\n\nCarly unzipped the nice fitting light-gray work pants she wore every day, and pulled her nondescript panties down with them.\n\n\"Eat me,\" she said. She smiled and glanced at the camera. \n\nJohnson noticed. \"Fuck!\" he said quietly. He took another sip of his beer.\n\nCarly's pants were off and she slouched back languidly on the soft leather settee. Bill pushed his jeans down to his ankles so he could kneel. He nestled between her legs and dove in for a juicy feast.\n\nCarly's brain lit up in an astonishing way. Part of it was what a woman feels when her pussy is licked for the first time in nearly a year, but that feeling was energized, turbocharged by Carly's first public performance. Sucking a cock and baring her pussy in front of open windows and a camera, it was a crazy, mixed up thrill that nearly blew her circuits. On top of all that, Bill actually knew what he was doing!\n\n\"Oh my God, Bill!\" she said as her hips started gyrating. \"Oh yeah!...Oh yeah!...Oh yeah!\"\n\nCarly came with an intensity she'd never felt before. She held Bill's head tight to her electrified pussy while the rest of her body lost control. \"Jesus!\" she said in the middle of it, the mumbling exclamation stumbling from her barely working mouth like a drunkard.\n\nThe big orgasm flooded her brain with happy juice. She flung off her shirt and unclasped her bra with a look of bemused excitement on her face.\n\n\"Jesus!\" Bill said, amazed at how quickly things had ramped up, and a little shocked at the powerful orgasm he'd drawn out of Carly.\n\n\"Fuck me, Billy,\" Carly purred. \"Put that big cock in me and fuck me hard.\"\n\nShe got on her knees on the settee, with her elbows on the top of the back cushion. It was an odd feeling for Carly, having her ass right out there with her knees spread wide. She still wasn't particularly attracted to Johnson, but she had a powerful desire to show off for him, the way he'd been showing off for her. When Bill was pressing his big shaft into her she looked over her shoulder, right into the camera, wondering what Johnson thought of her decidedly average body. That thought vanished in a hurry when her insides were stuffed with massive cock.\n\n\"Oh my God!\" she gasped.\n\n\"Fuck, Carly!\" Bill said. \"God you feel good!\"\n\n\"Oh, Billy!...Oh yeah!...Oh yeah...!\"\n\nJohnson took a sip of beer. His mouth was dry. His heart was pounding. His eyes were riveted to the small screen. Carly was at the perfect angle for the camera to see the big shaft violating her. She was angled that way on purpose, and Johnson knew it.\n\nBill fucked her slowly at first. Carly loved it. She couldn't ever remember anyone touching her so deep inside. There was good stuff in there that she didn't even know existed.\n\nThe blowjob had tempered Bill nicely. He felt like he could just go and go, so he did, picking up speed slowly until the tell-tale slap slap slap rang out into the quiet room.\n\n\"Fuck yeah!\" Carly said breathlessly. \"Hold that baby! Just like that!\"\n\nBill maintained the beautiful fucking, reveling in the sweet feeling ricocheting in his overloaded brain.\n\n\"Oh Billy, I'm gonna cum!...Don't stop!...\" Carly sighed.\n\nAbout thirty seconds later she melted down, her normally sensible brain scrambled by her first big-cock fuck. She squeezed the soft leather in her hands and held on for dear life. Bill came again inside her, thrusting spastically at the end, groaning right along with Carly as the big moment swept them both away.\n\n\u2014\n\n\"Morning, Carly,\" Johnson said.\n\n\"Good morning,\" Carly said, a little happier sounding than usual. She poured four whisked eggs into the pan of saut\u00e9ing tomatoes and herbs and let it sit on the heat for a minute. Johnson was filling his mug with coffee. She turned to him and sipped hers, leaning against the counter. A smirk turned up the corner of her mouth. \"So, that woman last night...do you think she's a faker, too?\" she asked.\n\n\"I'd say she's beautifully orgasmic,\" Johnson said.\n\nCarly smiled. It was as nice a compliment as she'd ever received. She thought she'd leave it at that and get on with normal life again, but Johnson was still curious.\n\n\"I thought you said size doesn't matter. Old Bill could make a guy like me feel inadequate.\"\n\nCarly puffed out her cheeks and blew out some air, as if to say, yeah, the guy's fucking huge! She thought it was interesting that the conversation started in the middle, with nothing said about the camera, or the watching, or the knowing that someone was watching. All that just seemed to be taken for granted already.\n\n\"I told you, average size is plenty. But...big's fun now and then.\"\n\n\"I can't believe you took him the way you did, Carly. It was unbelievably hot. Did you watch it?\"\n\nCarly hadn't thought of that. Not only could she watch herself getting fucked by a big cock, she could download it and save it. \"No. Maybe...I will.\"\n\n\"We could use it as a teaching resource,\" Johnson smirked. \"Give me some pointers.\"\n\nCarly was surprised Johnson would suggest such a thing. She tipped her head down and looked at him from the tops of her eyes. \"You wanna watch it? With me?\"\n\n\"Only if you want to,\" Johnson said.\n\nThe funny thing was, now that she'd thought about it, she did kind of want to. It was crazy and perverted, but damn! Her heart was fluttering in a happy way just thinking about it!\n\n\"Bill's leaving today,\" she said, deciding to change the subject.\n\n\"Oh no! Just when you guys got together!\"\n\n\"Yeah. He wants to get in and out of the New York canals before they close for the season, so he's gotta head north. His brother lives up there.\"\n\n\"Oh. Well, maybe we'll run into him again somewhere. You and I need to go on a quest.\"\n\n\"Dare I ask what we're searching for?\" Carly asked playfully.\n\nJohnson just smiled, but Carly wondered if he was serious. A few weeks ago a voyage in search of good sex would have sounded crazy to her, but with the afterglow of Bill's big cock still warming her insides she was starting to think she was ready for anything.\n\nLater that morning, after she'd returned from saying goodbye to Bill, Johnson caught up with her on the flybridge where she was adjusting the chemicals in the hot tub.\n\n\"You'd better start using this or it's a waste of maintenance,\" she said, wiping sweat from her brow in the hot sun.\n\n\"I will. Maybe we'll have a party.\"\n\n\"We? I'm your employee, remember?\"\n\n\"Carly, come on. We must be friends at this point, after what we've seen of each other. I hope we are anyway.\"\n\nCarly smiled. \"I hope so to. It's just odd. It's not what a professional captain's supposed to be up to.\"\n\n\"Fuck the rules, Carly. Speaking of fucking, I'm ready for my lesson. You look like you need a break from the sun.\"\n\n\"You really want to watch that?\" she asked. \"I'm not much to look at. Probably even worse in black and white.\"\n\n\"Let's go, teacher. Every little grain of information is helpful to me.\"\n\nCarly packed up her hot tub chemical kit and followed Johnson to her cabin. It seemed even more surreal than it did before now that Johnson had watched her in her balls-to-the-wall slut session with Bill. Crazy was the word that kept ping-ponging in her head. She was crazy. Johnson was crazy. Sitting down with him to watch herself get fucked was the craziest thing yet.\n\nJohnson switched on the monitor as soon as he walked in the room. He sat on the bunk with all the pillows, picked up the iPad and brought up the security video from the night before.\n\n\"You look like a little kid looking for your cartoons,\" Carly said. She went to the head and washed her hands. By the time she was done she heard her voice coming from the monitor...\n\n\"Bill!...Wow!...Good Looorrd!\"\n\nCarly laughed nervously when she heard what she'd said about Bill's big and still growing cock. \"I guess it took me by surprise,\" she said as she sat down a few feet from Johnson.\n\n\"So, what did Bill do right?\" Johnson asked. His eyes were already riveted to the screen, the way they always were when he watched the footage.\n\n\"What did he do right? Wow, I don't know. I hadn't really thought about it. I think it was more about me coming out of a long dry spell.\"\n\nJohnson fast forwarded past the blowjob, resuming play just as Carly was taking off her pants. \"Try and remember,\" he said. \"It'll be helpful. It's my first opportunity to study another guy's technique.\"\n\nCarly was glad his eyes were glued to the screen. It made talking to him seem a little more detached. More scholarly and less erotic. \"Okay, well...\" she said, \"...seeing as how I'm not even close to one of your supermodels in looks, just the look in his eyes and on his face made me feel like he desired me. That's important to a girl when she takes her clothes off. Some of your girls just take that for granted, I'm guessing, but for a woman who's insecure about her looks, that look on a guys face can take you halfway to an orgasm.\"\n\nShe watched as Bill knelt and dove in for his oral feast, letting out a gasping breath of air that made Johnson smile. \"And he followed it up with a...well...I guess you'd call it a suctiony thing, sort of sucking in my...well, my pussy. Are we using the vernacular?\" She glanced at Johnson and smiled nervously again.\n\n\"Yes, please do,\" he said, his eyes still glued to the screen. \"What's he doing now?\"\n\nCarly watched herself writhing, clutching Bill's head in her hands. \"Oh, God, Johnson, I don't know. He was getting me there fast. I wasn't thinking. He knew where to lick, I'll tell you that.\"\n\n\"Fuck,\" Johnson said as he watched Carly orgasm with feminine ferocity. \"You're selling yourself short if you don't think you're beautiful.\"\n\nCarly was amazed that Johnson would say that. It was a wonderful compliment for a plain looking woman like Carly, coming from a handsome guy who could have most any girl in the world.\n\n\"Wow,\" Carly said, watching herself. It brought back to her how big that dry-spell-busting orgasm really was. \"That was some powerful shit right there.\"\n\n\"You mean in your head, or what he was doing?\"\n\n\"In my head,\" she said, remembering how turned-on she was in front of the camera. \"Did you know I knew you were watching?\"\n\n\"I saw you look at me. But how did you know?\"\n\n\"I don't know. I was just powerful feeling. It was pretty wild. I've never done anything like that, in front of a camera.\"\n\nJohnson smiled a little. He wanted to look at Carly, but he liked how things were going and didn't want to make her uncomfortable.\n\n\"I love how you move, right there,\" he said, watching Carly get on her knees on the settee and stick her ass out toward the camera. \"That's crazy sexy.\"\n\nCarly swallowed hard. She was amazed at what her ass and pussy looked like, all opened up to the camera like a slutty porn star. She hadn't realized it was quite that hardcore. And then Bill's huge cock made its way into her, at a perfect angle for the zoomed-in camera to see.\n\n\"Holy shit, Johnson,\" she said quietly. \"I don't know if we should be watching this. Is that really me?\"\n\n\"That's you, Carly. That's you getting fucked by a really big cock. Wait'll you see this orgasm. It's kind of awesome.\"\n\nJohnson turned up the volume and the two of them sat silently watching. It was hot stuff, that was for sure. Carly could hardly believe any of it. She was absorbing the massive cock like an old pro, looking confident and in control.The slap slap slap noises of two bodies in carnal rhythm took her breath away. It went on for a longer time than she'd realized. Bill was really good!\n\n\"Here!\" Johnson said, snapping Carly out of her trance. He watched intently as the huge orgasm overtook her. \"Oh, fuck yeah! That's good!\" he said.\n\nCarly wanted to giggle, but she sat silently, unsure of what to say. The deed was done. She'd become a private porn star for her boss.\n\n\"So that was maintaining a rhythm for a long time, right?\" Johnson asked.\n\n\"Oh. Yeah,\" she said. \"I'm kinda surprised how long he went.\"\n\n\"You needed all of that time, right?\"\n\n\"I guess. I mean, yeah. What you see is how long it took. It was a really kind of awesome build-up. For quite awhile I just felt like I was melting, like it was molten, you know? Do you guys feel like that? I've often wondered what it feels like for a man.\"\n\n\"Oh, wow. That's a good question. Well, just...entering...is this really intense, all enveloping feeling. You'd think it would be similar to a hand, or a mouth, but it's not. A pussy is totally different. Really amazing. I wish you could experience it.\"\n\n\"That's interesting,\" Carly said. \"I always though it was kind of the same. Hands and mouths, they encircle and squeeze. I wonder why it's so different. Maybe it's psychological.\"\n\n\"Nope. Totally different. A pussy's way more intense.\"\n\n\"So that's why guys wanna fuck all the time, when a girl might like other things. See, I'm learning stuff, too,\" Carly smiled.\n\n\"So you don't like it as much? Feeling a guy inside you?\"\n\n\"Oh, no! I didn't say that!\" she said, watching herself suck the pussy cream off Bill's cock like a proper slut. \"I love...having a cock in me. I think most girls do. But if it's one of those times when an orgasm isn't happening, it can get...a little monotonous.\"\n\n\"So how do I know if I should keep persisting, like you've said, or try something different?\"\n\n\"Signals, Johnson. Pay attention. You'll be able to tell.\"\n\nJohnson turned off the video feed at the point where Carly and Bill were reaching for their clothes, Bill looking a little shell-shocked, naked in front of the big windows overlooking the marina.\n\n\"Thanks, Carly,\" Johnson said as he got up off the bunk. \"You're a gem.\"\n\nCarly smiled quizzically when Johnson walked out. She shook her head at the oddity of it all, picked up the hot tub supplies she needed to put away, and went back to work.\n\n\u2014\n\nJohnson went out that night. He danced with a young woman but eventually figured out she was with a young man. Johnson was surprised Jayla kept coming back to him, but stranger things had happened and her boyfriend Brandon didn't seem to mind. Later in the night another couple joined in the fun, friends of Jayla and Brandon's. Johnson fell in with them like an old friend, dancing up a storm.\n\nWhen last call was announced at the bar, they all decided to head to Jayla's condo for a drink. Johnson didn't need any more to drink and was going to get a cab back to Blondie, but Jayla was insistent. She was tall and lean, with nice curves, beautiful eyes and a big smile \u2014 the kind of girl who could get Johnson to do just about anything.\n\nBack at the condo, an orgy broke out. It wasn't Johnson's first, but it was a rare enough occurrence for him to feel lucky to be there. Jayla and her friend Erica were both stunning, and had an easy sexuality about them that made everything flow naturally. Johnson, Brandon and Emilio gave the two young women everything they asked for and more. It was a wild night that lasted until daybreak.\n\nThe sound of footsteps on deck woke Carly. She switched on the security camera and saw Johnson arriving home. It was the last she saw of him until after noon.\n\n\"Last night two women told me I'm a good lover,\" he said proudly, still a little hungover and looking a bit disheveled. \n\n\"Two? You had quite a night!\"\n\n\"There were two other guys there, too, but I felt really confident, thanks to you.\"\n\n\"Holy shit, there were five of you?\" Carly asked, looking amazed. \"All together?\"\n\n\"Yeah. It was fun.\"\n\n\"I'll bet!\" Carly said. \"Wow, that's like stuff you read about.\"\n\n\"I held my own,\" Johnson said. \"More than that, really. They had more orgasms with me than with the other guys.\"\n\n\"I hope you weren't keeping track! You need to relax and just have fun.\"\n\n\"I know. I did. It was fantastic.\"",
        "\"Wow, look at you! All confident sexually! I'm proud of you!\"\n\n\"Thanks, Carly. So, I need to ask you something. I was thinking of inviting them for a little day trip, just take Blondie out to sea a ways, towards nowhere, you know? I wanted to make sure you'd be okay with it.\"\n\n\"I think you've got things backward. You're the boss, remember? Of course I'm okay with it. Your guests are your business. I drive the boat.\"\n\nJohnson smiled. \"All right, boat driver. I just wanted to give you a heads-up.\"\n\n\"Sounds good,\" Carly said. \"Blondie could use a little exercise.\" \n\nJohnson briefly wondered if Carly realized there might be a whole bunch of sex onboard, but she was smarter than he was in most ways, so he was sure she'd gotten the gist.\n\nCarly was curious how the little cruise would play out, and she didn't have to wait long to find out. Two days later, under a strong southern sun, Johnson welcomed his guests onboard.\n\nCarly kept her distance, as a good captain should. She watched the arrival from the pilothouse while she was refreshing her memory with the nautical charts. She knew her way out of the harbor like the back of her hand but she liked the belt and suspenders approach, especially with an eight-million-dollar yacht. She liked the view out the window, too. Emilio caught her eye immediately \u2014 tall, dark and handsome, he was a dance club stud if she ever saw one. All the guests had that look about them, well put together dance-all-night types. They all had easy smiles and there were hugs all around. Johnson seemed to fit right in with them. It made Carly smile. She was starting to feel like his older sister, and seeing him make friends made her happy.\n\nJohnson gave the guests a tour of the main deck, ending at the door by the helm.\n\n\"Guys, this is my wonderful Captain Carly. Carly, this is Jayla, Brandon, Erica and Emilio.\"\n\n\"It's very nice to meet you all,\" Carly smiled. \"I hope you enjoy the day.\"\n\nUp close, Johnson's friends were even more beautiful. Jayla and Erica were stunning, one tall and one petite. Carly guessed it was leggy Jayla who had caught Johnson's eye at the club. She was every bit his type. \n\nBoth the young women made Carly keenly aware of her advancing age and her plainer, less curvy body, and both the young men made her plain, less curvy body tingle a little. Damn they were good looking! Emilio's dark, piercing eyes seemed to look right into Carly's soul, and Brandon was a hunk of blonde surfer meat worthy of a movie role. She tried not to ogle.\n\nThe wind was dead calm, so Carly was able to handle the dock lines and maneuver Blondie out of the marina on her own while Johnson gave his guests a tour of the rest of the vessel. He left them in the guest staterooms where they changed into their swimsuits for a day of fun in the sun. Johnson went to his cabin and did the same.\n\nIt was a perfect blue-sky day so Carly was piloting from the flybridge, up in the open air where she had the best view for threading her way out of the constricted harbor. She had a good view of Johnson and his guests, too, when they all walked up the side deck to the bow as the big yacht cleaved through smooth water on it's way to open ocean. It was an ass parade worthy of a magazine shoot \u2014 the two girls wiggling like sex kittens in their tiny bikinis, and the men looking wonderful in their board-short swim trunks. Johnson was the only one with a shirt on, but it didn't last long.\n\nAs the city receded from view behind them, the slowly blossoming party moved up to the flybridge deck. An open-air bar, a comfortable sitting area and the hot tub became the center of the universe. Carly was right in the middle of it.\n\nThe thing that struck her the most was the sexy perfection of the two young women. It was clear as day why men would fall all over them, even rich guys like Johnson who could have any girl they wanted. Jayla had light brown skin that seemed to shimmer in the sunlight, and long legs that carried an ass that Carly could barely believe. She looked like a runway model, but one that smiled and had curves in all the right places.\n\nErica was a blonde beach girl, her hair naturally bleached by the southern sun, her skin smooth and perfectly tan. Her bikini was a tiny little miracle. Carly couldn't believe how minuscule the coverage was \u2014 a profusion of cleavage and the lovely round sides of her tits were on full view \u2014 and yet it didn't look like the kind of too small, shrunken bikini you see on a woman who's trying too hard. The bottom was a perfect little thing, too. Not as blatant as a thong, but Erica's stunning little ass was displayed to perfection, the fabric's curving cut drawing the eye through her beautiful buttocks to the promised land below.\n\nWhen they reached open water Carly switched on the auto-pilot and started to head down below to the pilothouse, to give Johnson and his guests some privacy.\n\n\"Where are you going?\" Johnson asked when she passed by the bar.\n\n\"I'll be at the lower helm if you need me,\" she said.\n\n\"Nonsense. It's a beautiful day, Carly. Drive from up here.\"\n\n\"You don't want me hanging around, do you?\"\n\n\"I do,\" Johnson smiled. \"Stay. Enjoy the scenery.\"\n\nCarly couldn't help but smile too. The \"scenery\" Johnson was referring to was Emilio, leading the others toward the bar for a round of tequila shots. He really was a stunning looking young man.\n\nCarly went back to the helm after turning down a shot. When Blondie was safely back in port she'd have one, if they were still offering. There wasn't much for her to do with Blondie steering herself, other than keep a lookout for other vessels and monitor the gauges. She sat back, sort of sideways in the big helm seat, soaking up the sun and keeping a furtive eye on the partiers. \n\nA nice tequila buzz hit the girls after two quick shots, rendering them topless and giggly as they splashed into the hot tub. The three men joined them, Johnson with the bottle in his hand. After another round of shots an orgy was underway. Carly was astonished at how quickly it had happened. Kissing and fondling led to five naked bodies, all in a matter of minutes. The girls guided Emilio and Johnson up onto the edge of the tub so they could suck their hard cocks. Brandon lifted Jayla's hips and started fucking her doggy style. Water splashed. People moaned. Carly tried not to be too obvious with her looking, but she wanted to watch, and nobody seemed to care that she was. Had Johnson said something to them, she wondered? Did he tell them I'm a dirty voyeur? \n\nWatching Jayla's spit roast raised Carly's temperature more than a few degrees. The sun suddenly felt ridiculously hot, but she couldn't do much abut it. She was glad she wore her gray shorts instead of her usual gray slacks, but her crisp white shirt was getting a bit soggy. She tugged at the front of it to draw in some cool air.\n\nAs Jayla's pleasure grew in volume, Carly became more uncomfortable with being there. She turned away and tried to focus on the oncoming sea, but the miles of emptiness seemed to raise her awareness of the rapture just fifteen feet behind her. The sounds were unmistakable \u2014 Brandon was fucking the shit out of Jayla, and she was cumming hard with a cock in her mouth.\n\nBlondie pressed on through the crystal blue water. Carly took another look at the gauges, but Erica's rising moan's were too much to ignore. She sat back in the helm seat, a bit sideways again, and glanced at the action. Jayla had Brandon's cock in her mouth, a nice thank you blowjob for the big orgasm he'd given her. Erica was up with Johnson, riding him on the edge of the tub. She was stunning looking out of the water, her wet skin sparkling in the sun, her tits bouncing as she really got going.\n\nEmilio was the odd man out. Carly wondered if he'd cum in Erica's mouth and was soft for the time being. She got her answer when he stood, his big cock hard and proud. He looked unbelievable to Carly, like she imagined a movie star would look in a Hollywood hot tub. Cary Grant, maybe, or Javier Bardem. Dark chest hair, sparkling eyes. And that cock! \n\nOh, God, he saw me, Carly said to herself. I shouldn't have been staring. Fuck! He's looking right at me!\n\n\"Does your captain party?\" he asked Johnson.\n\nCarly heard him, but her brain couldn't make sense of it. She saw Johnson smile at her.\n\n\"Go for it,\" Johnson said. \"Only if she wants, though.\"\n\nCarly's brain suddenly unscrambled. Of course I want, she said to herself, but I can't. I'm the captain. The vessel's underway. I just work here. It's wrong on so many levels.\n\nEmilio walked toward her with two full shot glasses, a big smile, and a bigger hard-on. It was like a scene straight out of a porn movie, and Carly let out a nervous giggle.\n\n\"Join me?\" Emilio said, holding the tequila shot out for her.\n\n\"I can't drink,\" she said. \"Maybe...later?\"\n\nEmilio's eyes twinkled. He downed both the shots.\n\n\"When I drink tequila, it makes me hunger for the taste of a woman. May I kiss you, Carly?\"\n\nHis soft Latin accent and the fact that he remembered her name were the last two straws that brought Carly down. She was as horny as she could ever remember. Before she knew what was happening, a wet, naked man was in her arms. Their mouths locked in a furious kiss, and his hard cock was in her squeezing hand.\n\nJohnson watched with a smile as Erica rode him.\n\n\"You're naughty,\" Erica said to him. \"Do you fuck her?\"\n\n\"No,\" Johnson said, getting back to some serious thrusting. He thought about telling her how Carly had taught him about female orgasms, but he didn't.\n\n\"Join us in the tub, Carly?\" Emilio said, his lips teasing hers.\n\n\"I need to keep watch,\" she said, stroking the hard cock in her hand.\n\nEmilio started to unbutton her shirt. \"Have you ever driven a boat naked before?\" he asked.\n\nCarly giggled. \"Maybe. I'm not telling.\"\n\nEmilio smiled, opened all the buttons and unfastened her shorts. She was nervous about the unveiling, partly because it was crossing a professional boundary she hadn't crossed before, but mostly because the other girls were stunning and she wasn't. Emilio didn't seem to care, so she went with it, first down to her bra and panties, then topless with a gorgeous man nuzzling her tits. She almost had an orgasm from his teeth on her nipples.\n\nShe was so caught up in Emilio she didn't notice Brandon sneaking up on her. Johnson had quietly sent him. Brandon's big hands pulled down her panties, and he buried his face between her ass cheeks, his long tongue searching for her openings.\n\nCarly was overwhelmed and nearly fainted. She'd never been with two men before, and never even with one that was as beautiful as Brandon or Emilio. She suddenly felt like she was dreaming, and damn it was a good dream!\n\nJohnson was keeping an eye on his favorite sex-ed teacher. He was fucking Jayla from behind, and Jayla was eating Erica's wet pussy. Johnson had them positioned so he could watch Carly. He was hoping she'd get involved, and the look on her face as the boys ravished her was priceless.\n\nSoon she was bent at the waist with Emilio's big, dark cock in her mouth and Brandon's deep in her pussy. Her first spit roast was thrilling to the point of delirium. A big orgasm rose up in her as easy as breathing. There was no stopping it, not that she would have wanted to. It blossomed into a monster, making her convulse and her legs quiver. Her moaning groan was almost as deep as the thrum of the engines.\n\nJohnson had to work harder to get Jayla there, but it was fun work and Jayla came beautifully. Her smile glistened with pussy juice when she turned to kiss Johnson's happy mouth.\n\nHe was happy for many reasons, one of which was the sight of Carly taking on the boy's the other way around \u2014 Emilio was fucking her while she cleaned up Brandon's sticky cock with her mouth.\n\nEmilio was a girthy boy. Carly had noticed it when he was in her mouth, and when he slipped into her pussy she really felt it. The fat cock was the perfect second course after Brandon \u2014 she felt full to the brim and had another eye rolling orgasm. The boys both loved how easy she got there and the way her legs shook when she came.\n\nThings settled down a bit after the first flurry. The boys tried to get Carly to leave the helm and join them in the tub, but she held firm to her duties. She felt delightfully wicked standing naked at the wheel in the warm breeze as the guests settled back into the bubbly water. After a few quiet minutes Johnson's voice startled her with it's nearness.\n\n\"Are we on course for nirvana?\" he asked. Her post-orgasmic brain was low on willpower. Johnson's beautiful smile, and his hard cock, were too much for Carly. She reached for the throbbing thing without even thinking. It was warm and wet from the tub. Carly's hand moved on it. Her mouth was open and Jonson could hear her breathing.\n\n\"I guess we are,\" he said quietly, looking deep into Carly's lusty eyes.\n\nA minute later she was deep in another real-life dream, bent at the waist with her hands on the big ship's wheel and her pussy full of Johnson.\n\n\"You drivin' me? Yeah? I'm drivin' your boat. You drivin' me?\" she grunted. \"Oh fffuck!\"\n\nJohnson's held her hips tight and fucked her with smooth, deep strokes. Carly's insides felt like a wild organism to him, like a hungry mollusk, or a moray eel. Extraordinary constriction. Like the deep dark ocean was swallowing him cock first. It was a magical feeling, almost overwhelming, beyond anything he'd felt with the other girls.\n\n\"You gotta be fuckin' kiddin' me!\" he grunted. The feeling was too much. Johnson's cock unloaded, much to his embarrassment, deep in the ocean of Carly's insides.\n\n\"Ohhh fffuck,\" she moaned, her body hunched and spasming, lost in the moment. The big orgasm swept through her like warm rain in the tropics. Everything she'd learned about acting professional while captaining a ship was gone. She'd fucked it all up. The rules had been swept overboard. No fraternizing? That was history. With the owner's cock inside her, making her cum, 'fraternizing' seemed quaint.\n\nShe could tell Johnson's orgasm was intense, and hers was too. Wildly so. It was almost too much to comprehend. Her head dropped, but she never let go of the wheel.\n\n\"Fffuuckk!\" she said quietly when it was over. Johnson was still in her, thrusting slowly, feeling bigger than the other boys even though he wasn't. Carly didn't know what to think.\n\n\"You got things...under control?\" Johnson asked, breathlessly. \n\nCarly looked over her shoulder and laughed, still overwhelmed by the feel of Johnson's cock moving inside her. \"If this is control, then...I got it.\"\n\nThe big diesel engines thrummed out a subsonic rumble as Blondie cleaved though open ocean, heading for nowhere in particular. Carly wondered if they could just stay out there. Johnson smiled at his captain, and she smiled at him. His dream of operating a big yacht by himself seemed ridiculous. Carly had come into his life for a reason. As he slowly fucked her still twitching pussy and listened to her soft moans, the trophy-girls in the tub and all his anxieties about women seemed a million miles away. Carly was the one. She was Johnson's girl."
    ],
    "authorname": "riverboy",
    "tags": [
        "dance club girls",
        "golddigger",
        "wealthy man",
        "security camera",
        "group sex",
        "employer",
        "employee",
        "rich guy",
        "fake orgasm"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/captain-and-crew"
}