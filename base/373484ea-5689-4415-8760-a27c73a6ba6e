{
    "title": "A Shepherd Afield Pt. 05",
    "pages": [
        "Author's Notes: \n\n'A Shepherd Afield' is a continuation of 'A Shepherd in France' which continued the story of 'The Shepherd of Ashburn Court'. Minimal effort is made in this tale to explain the backstory so please read the other stories first. \n\nAll characters engaging in sexual relationships or activities are 18 years old or older. \n\n******** \n\nChapter 36 \n\nBen yawned and stretched as he left the immigration office in LAX with Gretchen. It had taken four and a half long hours to deal with the bureaucracy and he'd filled out countless forms with her assistance. It would have taken longer but the staff recognized him and for the cost of a few... dozen selfies with the excited office workers he was 'expedited'. He wondered how long he would have still been in there otherwise. He was dismayed to learn that after all of that effort they'd only earned a six month window. He would see if Hannah could do some magic at her end. \n\nThe flight from Sydney to Los Angeles had been uneventful as the presence of Gretchen kept the flight attendants at bay. Their detour through immigration had caused them to miss their connecting flight. \n\nBen got tickets on the next flight home for them and they dozed in the chairs by the gate. The flight finally boarded and they promptly fell asleep in their seats and only woke when they landed. It was the wee hours of the morning when they grabbed a taxi for home. Gretchen fell asleep against his shoulder. \n\nHe felt a familiar happy ache in his heart as they pulled onto Ashburn Court. The taxi pulled into his driveway and he gently nudged Gretchen awake. She glanced out the window then flashed a quick smile at him. \n\nBen paid the driver and they got their bags. He got them inside the front door as quietly as he could but a light went on in the living room and a very sleepy looking Lucy walked around the corner and froze when she came face to face with Gretchen. They blinked at each other. \n\n\"Lucy, Gretchen. Gretchen, Lucy. Formal introduction will wait until a sane hour, probably when you get back from school. Now, give me a kiss and off to bed with you,\" Ben said firmly and Lucy quickly moved to him to press her soft body against his and raised her lips to his. He kissed her sensual mouth and she moaned a little when he pulled back. \n\n\"To bed and no funny business. I'm exhausted,\" he said sternly. With a quick smile at Gretchen Lucy moved quickly down the hall to the master bedroom and slipped inside. \n\n\"Does- does she sleep in your bed?\" Gretchen asked meekly. \n\nBen looked at her and nodded after a pause. \"So does Tina.\" \n\nHe walked down the hall and saw Karen's and Penny's bedroom doors were open. A wave of sadness rushed over him. He was surprised by how strong his reaction was. He'd miss them more than he thought. Empty nest syndrome? He smiled to himself as he turned the overhead light on in Karen's... old room. It was Gretchen's now. He checked the bed but they'd changed the sheets so it was ready to be slept in. \n\n\"This room gets morning sun. Very pretty. I hope you like it. Get some sleep and we'll talk in the morning.\" Ben said turning to her. He saw she was looking up at him with desperation in her eyes and trembling. \"What? You don't like the room?\" \n\nShe shook her head but her expression didn't change. Her trembling seemed to be getting worse much to his dismay. \n\n\"Ben, please kiss the woman,\" a voice said from the master bedroom door. \n\nBen glanced past Gretchen to see Tina looking back at him. \n\n\"Show her she is home,\" Tina continued. \n\nGretchen looked away from Tina back to Ben as he stepped forward and with a final glance at Tina he brushed Gretchen's lips with his then she was crushing her body against his. He was surprised by her need but he kissed her deeply and controlled the kiss until he felt her relax in his grip. He pulled back from the kiss and she struggled to catch her breath as she stared at his mouth. \n\n\"Get some sleep. Relax, Gretchen. Like Tina said, you're home. We'll all talk in the morning.\" \n\nShe nodded and smiled wobbly at him. \n\nHe smiled back and went into the master and closed the door. Tina was already back in bed. He could see her eyes glistening in the room's faint light. Ben undressed and dropped his clothes in the bin in the bathroom, brushed his teeth, then carefully climbed into bed. He kissed Tina tenderly and felt her tremble against him. His kiss suddenly became deep and the passion swept over them both before he got control over himself. He ended the kiss, dazed by its intensity. Tina sighed and tucked herself against his side. His love for her threatened to overwhelm him once more. His emotions were obviously derailing with his exhaustion. He'd ask her how she knew what Gretchen needed in the morning. \n\nHe pulled Lucy against him and felt her happily press her body against him. \n\nContent if still a little shaky Ben closed his eyes and let himself drift off. He was asleep in seconds. \n\nChapter 37 \n\nBen sat at the kitchen table with Christopher on his knee watching Tina and Lucy working together to make breakfast. Tina insisted on making the meal and Lucy now had time to help as she was no longer competing for bathroom time with Karen and Penny. He realized that was one of the drawbacks of his house. It could use additional bathrooms but there wasn't room in the floorplan and he had no desire to alter it. \n\nTina had wanted Ben to sleep in but he needed to be with them so he got up and started his day, promising to take a nap later. \n\nThe two ladies worked in perfect harmony and the meal was quickly prepared. Lucy carried the plates to the table as Tina followed. Lucy moved Christopher to his highchair and he dug in to his scrambled eggs. \n\nTina stopped before Ben who gave her a tender kiss. Lucy got one as well then they sat and ate their breakfast in happy silence. As they were finishing up Ben looked to Tina to ask the question he had from the previous night. \n\n\"How did you know what Gretchen needed last night?\" \n\nTina smiled at him. \"You told me that she had been badly treated by her Dom who was completely controlling. I put myself in her place. You kissed Lucy in front of her?\" \n\n\"He certainly did and it was dreamy!\" Lucy said with a smile. \n\nTina smiled at Lucy then turned back to Ben. \"She is far from anything she knew as 'hers'. You were the only source of security she had and you were kissing another woman. She would feel very insecure and desperate to know she had a place in your life.\" \n\nBen looked at her in wonder as Lucy got up and took the woman's face in her hands to kiss her tenderly. \n\n\"You are amazing!\" Lucy said lovingly to Tina whose cheeks showed her blush. Lucy stopped in front of Ben and got a sweet kiss from him before clearing the dishes and hustling away to get ready for school. \n\n\"It's beautiful to see how much she loves you.\" Ben said gently to her and she smiled showing her love for Lucy as well. \"How went the move?\" \n\n\"Much easier than expected. The home is lovely and the girls are thrilled. We celebrated last night with Chinese food. We invited over a large number of people including Jayden and Frank.\" \n\n\"Their second double date was with the group? How did that go?\" Ben asked in surprise. \n\n\"It went very well! Jayden is very good for Karen and Frank... he is a younger version of you!\" she said with a giggle. \"You cannot tell the girls that though.\" \n\nBen looked at Tina in surprise and grinned at her with a nod. He was happy to hear the girls were happy. He did miss them. \n\n\"Rain is very happy in her new job. She wants to thank you.\" Tina bounced her eyebrows and Ben snorted seeing her attempt the gesture. \n\nTina's expression turned serious. \"There is something that happened yesterday you need to know about. We took care of it but you should know.\" \n\nBen listened as Tina explained about their stalker and his expression became grim. He was somewhat mollified hearing Walter was on the case. \"Thank you for calling Walter. That was excellent thinking. I hope he's successful in going after Holland.\" She nodded in agreement. \n\n\"Now, tell me what happened with Margaux,\" Tina said gently, holding his eyes with hers. \n\nBen opened his mouth but the words wouldn't come. His throat had closed up. He shook his head. It was too soon. \n\n\"When you are ready... we will talk,\" she said sadly. He nodded. \n\n\"I'll take Christopher to the daycare,\" Ben managed. \n\n\"DAYDAY!\" Christopher squealed, making Ben smile. \n\nHe stood and bent down to kiss Tina tenderly. Then he scooped up the boy and flew him to the front door as the boy giggled. They got their boots and jackets on and Lucy joined them leaving the house. She gave Ben a kiss then rushed down the driveway to go over to Ashley's. The woman was standing by her van and waved to Ben. He waved back to her and Savannah. He headed off to Daphne's and saw Madison running for home after dropping Joshua off at the daycare. She stopped and gave Ben a hug and he hugged her in return then she was sprinting for home. Karen and Penny came running out their front door and gave him a quick kiss on the cheek as they rushed by on their way to Ashley's. He shook his head with a smile on his face at their familiar routine. \n\nHe saw Rain leaving the house and locking up and met her on the sidewalk. \n\n\"Good morning!\" he said. \n\n\"Ben! You're back! I thought we'd see you last night!\" She beamed him a smile and went up on her toes to get a kiss. It was quick but sweet. \n\n\"Missed my connecting flight as I was stuck in Immigration with Gretchen.\" \n\n\"Gretchen?\" Rain blinked at him. \n\n\"Ah, yes. You probably didn't hear that story. Maybe tonight,\" Ben said. \"You don't catch a lift with Ashley?\" \n\n\"How many people do you think can fit in that van?\" she asked with a grin. \n\n\"Seven. Ashley, Madison, Savannah, Lucy, Karen and Penny are six.\" \n\n\"Seven fit only if you take the baby seat out which is a pain. It's ok though because I don't really go in the same direction. I take the bus. I like the bus. I've got to run or I'm going to miss it. Talk to you tonight!\" Rain said and rushed away. \n\nBen stood on the sidewalk holding Christopher in his arms watching the woman run down the street towards the main road. He looked at the boy who smiled back at him. \"I think they need a car for the house to run errands in, don't you?\" \n\n\"DayDay!\" Christopher replied pointing to the house they stood in front of. \n\n\"Fine! I was going to let you pick the car but have it your way,\" Ben sighed heavily and the boy giggled as they walked up the driveway. \n\nStepping inside they heard the laughter of the other kids and Christopher began to wriggle in Ben's arms, eager to join them. \n\nLisa came out to see who'd arrived and squealed just a little when she saw him. Ben smiled at her unexpected noise and she blushed. She helped Christopher take off his coat and boots and he was off, charging into the next room. \n\nMoments later Lori slipped out to join her sister. They stood before him smiling up at him happily. \n\n\"I missed you,\" Ben said with a rough voice, realizing how much he meant it. They were trembling now so he opened his arms and they were against him, squeezing him tight in a hug. He wrapped his arms around them and kissed their foreheads before he pulled back. They stepped back as well but he could see they were craving a real kiss as much as he was. Ben looked outside and looked over their shoulders and saw the coast was clear. He dipped forward and kissed Lori then Lisa and they smiled happily at him when he pulled back again. \n\n\"I was wondering if I might impose on you once more to take someone shopping for clothes suitable for the winter. Mostly casual stuff... plus lingerie and sleep wear,\" Ben said awkwardly. \n\n\"Did you bring someone home with you?\" Lisa asked with a grin. \n\nBen smiled self-consciously and nodded. \n\nShe looked at her sister then back to Ben. \"Tomorrow night?\" \n\nLori held up the bank card he'd left them. \"I should hang onto this then?\" \n\n\"Yes, use that for the purchases,\" Ben agreed. \n\n\"What's her name?\" Lisa asked. \n\n\"Gretchen Hahn. She was in a ten year marriage to a psychopathic Dom who died in an accident a couple of days ago. She's sweet but a little lost at the moment. Dr. Granger has offered to see her.\" \n\nThe twins looked at him with wide eyes. \"I'll need your help with her as well. She was isolated by the sadistic bastard so she needs contact with others to rebuild her socializing skills.\" \n\nThey nodded and smiled up at him with love in their eyes. He felt that warmth fill him. \"I love you.\" \n\n\"We love you too,\" they said in unison making Ben grin. \n\n\"See you later,\" Ben said as he headed outside. \n\nHis cell rang as he was halfway home. \"Hello?\" \n\n\"Ben? It's Don! Don Blake.\" \n\n\"Oh! Hi Don, what's up?\" \n\n\"I was wondering if you've had a chance to speak to your lawyer about that contract yet.\" \n\nBen laughed. \"Don! I just got home last night, or rather this morning. I'll be speaking with him in a bit. We should be able to get you the paperwork in the next couple of days. Is there a rush?\" \n\n\"You know I don't sleep much. During my nocturnal busy time I got to thinking about possible uses for that little filter of yours and who might be most interested in them. Due to the nature of my business I know people in important places and I dropped a word or two in a few ears. You know, just to gauge interest. Well, I've generated more than a little attention. They're beating my door down. If I don't present something to them it could get ugly.\" \n\n\"Have your marketing people spoken with Bryan and his team? Have them put together a presentation kit with the test results. Don't release any of the filter's technical specs in the kit. If Bryan has any questions he can call me. Once it's ready send it to me for proofing,\" Ben instructed. \n\n\"Right, right. Geezus, it feels like we're sitting on a goldmine!\" Don exclaimed. \n\n\"Or a fire ant colony,\" Ben returned and Don barked out a laugh. \"Listen, no more words in ears until we get the contract worked out!\" \n\n\"Yeah, sorry about that! Bye.\" Don said in a more serious tone and hung up. \n\nBen dialed Bill Freeny at Sturn Manufacturing to fill him in on the incoming order for the new filters. \n\n\"Bill Freeny.\" \n\n\"Bill, it's Ben Shepherd.\" \n\n\"Ben! How are you! Haven't heard from you for a while!\" \n\n\"Keeping busy! Listen, that's what I need to talk to you about. I have a new filter I've designed which I'd like your company to be the principle manufacturer for. Potentially, the orders for this device may exceed your current capacity. You may need to expand the operation,\" Ben explained. \n\n\"That's good timing then because we've almost completed the construction on the new plant. We had to lose our private airstrip but the new plant will have three times the capacity of the original plant which is still operational as well,\" Bill said happily. \n\n\"Oh? When did this happen?\" Ben asked. \n\n\"Don't you read the statements we send you or are you too busy inventing new things? Never mind I know the answer to that one. We began the new construction the week you left. The orders we are receiving for the pressure valve paid for most of the build. We borrowed for the rest against future sales. What are you going to have us build for you now?\" \n\n\"It's a filter for radioactive particles.\" \n\nBill was silent for a bit and Ben thought the line had disconnected. He was about to speak when Bill came back on the phone. \"Does it work as well as the pressure valve?\" \n\n\"Better,\" Ben said with a smile. \n\n\"Damn... we should have built a larger plant.\" \n\n\"Let's see what the first order will be before we jump to any grandiose conclusions.\" Ben cautioned. \n\n\"Who's marketing these things?\" Bill asked. \n\n\"I originally designed the filter for Blake Uranium in Melbourne, Australia. I went there to test the prototype and it worked better than expected. At my suggestion, their CEO, Don Blake, created a company to market the filters. I selected Sturn Manufacturing to be the manufacturer if you're interested.\" \n\n\"Hell yeah, I'm interested! We're in! Send us the contract and I'll sign it!\" Bill exclaimed. \n\n\"Great! I'll speak with my lawyer to write up the contract and send it off to you as soon as possible.\" \n\n\"As always, a pleasure to talk and do business with you Ben!\" Bill said with a smile in his voice. \n\n\"Same here! Talk to you soon.\" Ben hung up and walked up his driveway. \n\nHe let himself in the front door and kicked off his boots and hung up his jacket. He wondered if Gretchen was up yet. \n\nThen he heard the giggling coming from the kitchen. \n\nBen peeked around the corner and saw Gretchen sitting at the end of the kitchen table with Tina sitting close by. The two ladies looked up at Ben with innocent smiles. He noticed his new guest was wrapped up in his bathrobe. \n\n\"Good morning Gretchen.\" \n\n\"Good morning Ben.\" \n\n\"Gretchen was not aware of what it meant to be a Sub,\" Tina said with a smile. \n\n\"And you explained it for her?\" Ben said carefully. \n\n\"Yes, Tina was extremely helpful. It is so good to know... I'm not perverse or sick for... having these feelings,\" Gretchen said with a strained voice. She beamed a grateful smile at the petite woman. \n\nTina smiled at her then looked at Ben. \"I explained that her husband was not behaving as a good Dom should. I told her how good a Dom you are.\" \n\nBen felt uneasy about where this was going. He brought Gretchen home because she was in distress and Dr. Granger offered to help her out. He hadn't intended to become her Dom but Tina seemed to be volunteering him into the role. He'd been following Tina's lead up to this point but he needed to nip this in the bud. He'd talk with Tina about it later but for now he needed to redirect the conversation. \n\nHe looked to Gretchen. \"I've spoken with Lisa and Lori who have agreed to take you out shopping for clothes tomorrow night.\" \n\n\"Who are Lisa and Lori?\" Gretchen asked timidly. \n\nTina reached over to touch her hand. Gretchen's eyes flashed to her hand and up to Tina's eyes. \n\n\"Lisa and Lori McKellan are twins and Ben's Subs.\" Tina explained. \"They work in the neighborhood daycare with their mother Daphne. Ben renovated their home to add the daycare and it is amazing!\" \n\nGretchen was looking at Ben nervously. \n\n\"What's wrong?\" he asked cautiously. \n\n\"Tina and Lucy are so young and beautiful. Are the twins also young and beautiful? I'm much older and so plain!\" Her panic was resurfacing. \n\n\"What are you talking about? You're only 31 and you're gorgeous! Who told you that you looked pl-\" Ben stopped abruptly when he realized what Rainor had done. \"Was it Rainor?\" he growled. \n\nShe nodded to him with wide desperate eyes. \n\n\"The bastard lied. He belittled and insulted you to make himself feel important and to keep you from realizing your true worth. You're an intelligent and beautiful woman. Never doubt that!\" Ben exclaimed then shook his head in disbelief. \"Plain?!? That's ridiculous!\" \n\nTina grinned at Ben's fierce reaction. Gretchen watched him in shock. She couldn't recall anyone ever saying these words to her. She looked to Tina and the woman was smiling gleefully to her and nodding. \n\nHer look of adoration made Ben uneasy so he needed to leave. \"I need to speak with Walter about the contracts for my latest dealings. I'll be in the living room.\" \n\nBen grabbed his laptop from its case and settled himself in his favorite chair. He flipped the machine open and pulled up the folder with the drafts of the new contracts. Then he dialed Walter. \n\n\"Hello?\" \n\n\"Hi Walter, it's Ben.\" \n\n\"Ben! You're home?\" \n\n\"Yes, I got back in the wee hours of the morning,\" he said. \n\n\"I received a call from Tina regarding some underhanded behavior of Mr. Holland,\" Walter began. ",
        "\"Yes, Tina filled me in on that. I hope you are able to take this bottom feeder down a notch or two,\" Ben replied. \n\n\"Tricky to do but I'm trying,\" Walter agreed. \n\n\"I have some more contract work that needs finalizing and it seems I'm going to need to pay for expediting these. The demand for the device I designed may be larger than I expected,\" he explained. \n\nWalter chuckled. \"Did you invent the proverbial 'better mousetrap'?\" \n\nBen smiled. \"No, just a better filter for radioactive particles.\" \n\nWalter choked a little. \"Geezus...\" There was a pause as Walter's mind spun at the possibilities. \"The military are going to be all over this.\" \n\n\"Yeah, hence the rush. I think the marketing team I picked has already let that cat out of the bag,\" Ben said with a wince. \n\n\"Send me the drafts. I'll get right on it!\" Walter said excitedly. \n\n\"I also have a manufacturing contract for Sturn Manufacturing,\" Ben remarked. \n\n\"Send it through. I'll get both sent off by expedited courier today. I take it Jerry will handle the accounting for this?\" \n\n\"Excellent! Yes, I'll be calling Jerry next. Thanks Walter!\" \n\nWalter chuckled. \"You're my favorite client Ben. Never a dull moment!\" \n\nBen smiled, said his goodbye's then immediately mailed the draft contracts to the lawyer. \n\nHe dialed his financial consultant/accountant. \n\n\"Ben! Good to hear from you!\" \n\n\"Hi Jerry! I have another income stream I'll be sending your way for investing.\" \n\nThere was a pause. \"You invented something else?\" \n\n\"Yeah, it looks like it has the potential to be very lucrative.\" \n\n\"Okay, uh, how lucrative?\" \n\n\"The military are interested.\" \n\n\"Oh! Geezus. Okay... okay. How do you want to handle this?\" \n\n\"I want to set up trusts for a list of people I am going to send you. The income from this stream will be invested in their names equally. Your name and Walter's name are going to be on that list.\" \n\n\"Ben! I- I don't know what to say!\" The man's voice clearly indicated his shock. \n\n\"You've always done right by me. I'm grateful and I believe you and Walter deserve it. Let's hope it's as successful as it seems it might be.\" \n\nBen said goodbye and disconnected. Next he wrote a document outlining his requirements for Jerry and included the list of names, complete with their addresses so they could receive statements. He signed the document digitally, locked it, and sent it to Jerry. \n\nThat done he put his mind towards the idea he'd had earlier about getting a vehicle for Rain and the girls to use for errands. He hoped Rain had a driver's license. The girls he'd arrange lessons for... in the spring. \n\nHe pulled up websites for a couple of different automotive brands but was quickly lost. He knew what he liked but he'd have to let them decide. As long as it was a safe vehicle he was ok with it. \n\nGretchen walked into the living room wearing her second least formal dress. He smiled in appreciation and her responding smile was brilliant. Tina followed on her crutches and Ben had an idea. \n\n\"Why don't we go to the mall? We can pick up a couple of casual outfits for Gretchen and then we can have lunch in the food court. You can get your favorites at that Korean place.\" \n\n\"Yes!\" Tina exclaimed. \"Would it be alright if we had manicures and pedicures at the spa?\" she asked. \n\nBen saw Gretchen's look of surprise and glanced at Tina. She was up to something again. She had that tiny little smile on her lips and he could see the wheels turning but he didn't know what she was up to. Still, the ladies having a little time at the spa being pampered was a good idea. \"Sure! Sounds good. Do you need to make an appointment?\" \n\n\"I will call.\" Tina picked up the phone and dialed a number. Ben realized she'd obviously had this in mind when she entered the room. He'd stepped right into her trap. He snorted to himself. \n\nTina looked up from the phone. \"Could we get there in the next 30 minutes?\" \n\nBen nodded and she said something into the phone and hung up. \n\nHe shut down his laptop and stowed it away in its case. Grabbing their coats and boots they made their way to the garage and got into his truck. \n\nBen drove them to the mall and once more got a wheel chair from customer services to wheel Tina through the mall. Gretchen's eyes were looking everywhere but she clung to Ben's arm and stayed close. \n\n\"You've never been to a mall? Even before you were married?\" he asked her. \n\n\"No. I lived in a series of small towns in Germany with my parents and met Rainor when I applied for a job in a new factory he was touring. He stayed in town for a week and asked my parents for my hand in marriage by the end of the week. I was with him for the next ten years. He kept me at home.\" \n\nBen was disturbed by the picture she was painting of her life of isolation with Rainor. \"What did you do to keep your mind occupied?\" \n\n\"When I was alone I had the books he gave me to read. Sometimes he would let me watch the news with him. That's how I learned about you,\" she said as they arrived at the spa. She looked at the women having their treatments and she clung tighter to his arm. Tina climbed out of her chair and took her crutches back. \n\nBen turned to Gretchen and gently held her face so he could look into her eyes. \"This is a spa where women go to pamper themselves. It would make me happy if you let them treat you well. Follow Tina's lead.\" \n\nGretchen's eyes dropped to his mouth and Tina was nodding when he glanced at her. He leaned forward and tenderly kissed the woman's mouth. Her eyes closed and she swayed slightly when he pulled back. \n\nBen released the woman's face and leaned down to speak into Tina's ear quietly. \"We need to have a private talk about Gretchen when we get home,\" he said gruffly. He kissed her, making her squeak in surprise at his need. When he pulled back she nodded to him as she looked through her bangs at him. His heart made a zing sensation and he shook his head at her with a slight grin. She smiled at him as a woman approached them. \n\n\"Welcome to Transcendence Spa. Are you Tina and Gretchen?\" the woman asked taking in the casts the women were wearing and glancing nervously at Ben's imposing size. He sighed and moved off to sit on the bench by the front door. He wasn't visible to passing mall shoppers so he was left alone. He got the occasional glance from spa customers coming and going but he was able to ignore that. \n\nHe pulled out his cell and reviewed his messages, browsed the web, played some solitaire, then put it away and leaned his head back with his eyes closed. \n\n\"Ben?\" \n\nHe jolted awake to see the two beauties standing before him. Gretchen was fretting nervously and he blinked his eyes as he realized she was wearing makeup. Not a lot but more than he'd seen on her before. Most dramatic was the deep red, almost burgundy, lipstick that drew his attention to her sensuous lips. He couldn't get over what a difference it made to have such a dark and bold color on her mouth when her skin was so fair. Then he noticed she was fidgeting with her hands and saw her manicure was an even deeper shade of red. He glanced down and saw she was wearing disposable flip flops and her toenails had the same dark polish on them. \n\nTina was also wearing red lipstick but not such a dark version. Her nails were painted black and she was grinning at his look of delight. \n\n\"You both look lovely!\" he gushed. \n\nGretchen smiled in nervous relief and looked at her nails as if she couldn't believe they were hers. \n\n\"That is a very good color for you!\" Ben said as he saw her unease. \"What color do you usually wear?\" \n\n\"Rainor never allowed me to paint my nails. He said it would make me look like a cheap whore,\" she said with a strained voice. Tina looked at her in dismay. \n\n\"Nothing could be further from the truth! You look beautiful and sophisticated! Very classy. One more of his vicious lies exposed,\" Ben exclaimed. \"He really was a mean spirited coward and the world is better off without him,\" he grumbled then glanced up at Gretchen. \"I'm sorry. I should keep those opinions to myself.\" He felt bad about speaking ill of the dead before the widow. \n\n\"No, please. It helps to know your honest feelings.\" Gretchen said. \n\n\"OK, then I honestly think you both look delightful! Ready to do a little shopping?\" he asked and they both gave him wide smiles. Ben picked up the bag containing their boots and the purchases they made, makeup, nail polish and lipstick. He looked at Tina. \n\n\"I still have the bank card,\" she explained as she eased herself back onto the wheelchair. \n\n\"Ah,\" he said and they headed out. \n\nTina pointed them to a shop for casual clothes and they picked out some leggings and a few casual tops. Tina whispered in Ben's ear that she'd given Gretchen a pair of Lucy's panties so they could try on the clothes. \n\nThey bought the items and Ben pushed Tina's chair into a lingerie shop so the ladies could select some comfortable underwear for Gretchen. \n\nOnce they left the store Ben pointed them in the direction of the food court. He made sure Tina got her Korean food. Gretchen was almost salivating as she passed the Mexican restaurant so Ben got her some beef tacos, nachos, and salsa. He sat them down at a table while he went to pick up a sub. He placed his order and picked it up after he paid for it. Carrying his tray he was headed back when he found his way blocked by two large men. Two large, vicious looking men. \n\n\"Mr. Shepherd. I think it's time we had another talk.\" \n\nBen glanced to the side and saw Wendy's lawyer standing on the other side of a row of tables. Ben scowled at the man. \"Seriously, goons? You brought goons? You have to stop stalking me or people will get the idea that you're some kind of bottom feeding, parasitic criminal. Oh wait! Too late.\" \n\n\"Very funny, Mr. Shepherd. My associates are merely here for my protection against your violent intentions,\" Holland said. \n\n\"My violent intentions? You're the one who brought the psych ward rejects to a family mall.\" The goons shifted closer as his words seemed to piss them off. \"Careful boys, looks like your happy meds are wearing off.\" \n\nWeapons appeared in hands as their agitation grew. The guy on the left had brass knuckles while the one on the right had a short section of pipe. Ben had a plastic tray, a bottle of water, and a roast beef sub. \n\n\"Put those away!\" Holland barked hoarsely as he tried to regain control of the situation. He just wanted to deliver his ultimatum and leave but the situation was escalating quickly. When the men he'd hired ignored him he caught motion over their shoulders. He turned and walked away quickly. \n\nBen grinned at the two thugs. \"Don't look now losers but it looks like your boss is making a run for it. I hope you got paid in advance.\" \n\n\"You got a pretty big mouth for someone about to lose all his teeth!\" Mr. Brass Knuckles said. \n\n\"Drop it!\" \n\nThe thugs looked back to see police rushing up to the food court. They bolted. Ben watched them trying to navigate through the tables as they ran. Two large mall security officers were waiting on the other side and didn't look intimidated at all. Ben walked over to sit next to Tina. \n\n\"Did you call the police?\" he asked. \n\nTina smiled and nodded. \n\n\"Nicely done! Thank you,\" Ben said and gave her a kiss. \n\nHe opened the wrapping on his sub and took a bite as the ladies went back to their meals. The police had the two men in custody when they walked by. Ben smiled at them with a nod. \n\nHe was finishing his lunch when one of the officers came back to get his statement. Ben made sure to mention Terrance Holland's role in the meeting. The officer took Tina's statement next and she confirmed Holland's presence at the start of the confrontation. When he was done the officer thanked them and turned to leave. Then he stopped and turned back to Tina. \n\n\"You couldn't have known we had a cruiser close by,\" he said. \n\nTina smiled. \"I did not but I was prepared to call for an ambulance for the two men.\" \n\nThe officer blinked at her then looked at Ben who was doing his best to hide his grin. \n\nWith a final smile and nod the officer headed back to his cruiser. \n\nBen pulled his cell out and called Walter. He filled him in on the latest development. \n\n\"Geezus, this man is a menace! I'll get in touch with the police to get their report. Thanks for calling, Ben!\" \n\nBen tucked his cell away and looked at the ladies. \"Ready to go?\" \n\nGretchen smiled and nodded so Ben dumped their trash. Gretchen and Tina put their boots back on then Gretchen got behind Tina's chair to push while Ben carried the bags. They stopped to drop off the chair then made their way outside to the truck.  \n\n\"Mr. Shepherd!\" \n\nBen sighed and looked across the aisle to see Terrance Holland standing between two cars. \n\n\"The police would very much like to speak with you Mr. Holland,\" Ben said. \n\n\"Yes, I'm sure. If you had simply listened this mess could have been avoided,\" the lawyer growled. \n\n\"If you had a shred of integrity you wouldn't be here,\" Ben said opening his door. \n\n\"She's going to do the televised interview! We found a network not afraid of your lawyer's tricks,\" Holland called out before Ben stepped inside the truck. He looked back at the man. \n\n\"Your wife is desperate and she has nothing to lose. You could save yourself a lot of embarrassment and her a lot of pain if you'd stop being so stubborn.\" \n\nBen scowled at the man then got into his truck and closed the door. When he looked back Holland was gone. \n\n\"Ben?\" \n\nHe looked at Tina and saw the concern in her eyes. \n\n\"Let's go home.\" \n\nChapter 38 \n\nTina sat in Catherine's living room with Lucy at her side. She'd got Ben to take some strong pain killers and go to bed for the tension migraine he'd developed over the afternoon after they'd returned from the mall. She'd asked Gretchen to stay with Ben and he'd only put up a token amount of resistance. \n\nCatherine and Chanel were sitting together with worried looks on their faces. Trish was pacing and grumbling under her breath. Hannah was sitting in a chair facing Tina and Lucy. \n\n\"Has Ben's lawyer been updated to know they're going ahead with the TV interview?\" Hannah asked. \n\nTina nodded. \"Yes. I called him after Ben went to bed. He said he would do what he could to find the network and serve them with a notice of our intent to sue if they proceed.\" \n\n\"Did you get the impression that he thinks this will be successful?\" Hannah asked. \n\n\"He sounded angry with the other lawyer. Mr. Holland is not serving Wendy's best interests.\" She sighed then looked around at the others. \"I am more worried about Ben's state of mind. What that bad man said to Ben has really affected him. He said Wendy had nothing to lose and Ben was causing her pain by being stubborn. I could see the doubt and pain in Ben's eyes. It tortured him all afternoon until I finally managed to get him to rest.\" \n\n\"God damn it!\" Trish growled and her pacing sped up. \n\n\"Trish, please! Sit down before you wear a hole in Catherine's carpet!\" Hannah gasped. \n\nThe redhead threw her a frustrated look and dropped down on the ottoman next to Hannah's chair. \"We need to find this crook and make him cough up the name of the network willing to air their crap about Ben. Or cough up blood. Either one works for me.\" \n\nChanel smiled at Trish's passion. \"As fun as that sounds it would just lead to more bad publicity Ben is trying to avoid. Has he thought of giving an interview before Wendy can spill her lies about him? I think most networks would leap at the chance to interview him now.\" \n\n\"Ben does not want to speak to the press. We must avoid that option if possible,\" Tina offered. \n\nCatherine's cell rang and she glanced at the screen. \"It's Gabriella!\" she said in surprise. She answered it as everyone waited. \n\n\"Gabriella! You're up late!\" \n\n\"Hi Catherine! I was trying to reach Ben but his number just goes to voice mail. I heard some news about his ex and I was trying to reach him or Tina to see if they were aware of it,\" Gabriella said in a worried tone. \n\n\"Tina's here with us. We're having another strategy meeting. Can I put you on speaker?\" Cat asked. \n\n\"Sure!\" \n\nCatherine pressed the button and put the cell on the coffee table. \"Can you hear me Gabriella?\" \n\n\"Yes, can you hear me?\" the woman replied. \n\n\"Yes, we hear you fine. I have Chanel with me, Hannah, Trish, Tina, and Lucy,\" Cat said. \n\n\"Hello everybody!\" \n\nA chorus of hellos were returned then Catherine leaned towards the phone. \"We were just talking about Wendy's lawyer telling Ben today that they found a network to broadcast their lies. He told Ben that Wendy had nothing to lose and Ben was hurting her by being stubborn.\" \n\nGabriella gasped. \"That fucking bastard!\" \n\nCatherine leaned back in surprise, hearing the language coming out of Gabriella's mouth but Trish was all grins. \n\n\"We don't know what network it's being broadcast on so Walter has to hunt-\" \n\n\"It's Mediastar here in Italy!\" Gabriella exclaimed excitedly. \n\n\"What?\" Catherine blinked in surprise. \n\n\"That's what I was calling Ben about. I got a call tonight from a friend of mine in the press, Monique Lemoine. She's a reporter and was at a press dinner tonight which included a bunch of television executives. One from Mediastar knew Monique had written a nice piece on Ben and rubbed it in that they'd landed an exclusive with Ben's ex-wife. They're going to run it prime time. Monique told me we can expect them to license the rights to other networks shortly afterwards. They have connections to other major networks in Europe. Once the first network broadcasts it the threat of legal action is probably no longer a consideration for the others so you can expect the American networks to pay anything to get it.\" \n\nTina was already dialing Walter's number. She spoke with him quietly as Catherine let Gabriella know they were passing the information to Ben's lawyer. \n\nOnce Tina hung up she spoke to the group. \n\n\"Walter was surprised that it would be aired in Italy first. His ability to prevent the broadcast is severely limited there. He is advising us to get Ben to speak to the press first to minimize the damage.\" \n\nThere was a disappointed groan from the others. \n\n\"How- how is Ben?\" Gabriella's voice wobbled a little. \n\nLooks were traded back and forth before anyone spoke. \n\n\"That bad,\" Gabriella said, pre-empting their response. \"Tina, what happened with Margaux?\" \n\n\"He won't talk about it but Gretchen told me Margaux became very jealous when Ben went with her to the hospital,\" Tina said sadly then saw the confused faces. \"Oh! I am sorry. I should explain who Gretchen is!\" She proceeded to fill the group in starting with her conversation with Ben at the hospital and with what Gretchen had told her at the breakfast table this morning. While not a complete picture of what had happened with Margaux it painted a clear picture that the visit had gone very bad for Ben. \n\n\"Thank you Tina,\" Gabriella said softly. \n\n\"I do not believe Ben is very happy with taking on another Sub,\" she sighed. \n\n\"Who told him to bring her home?\" Gabriella asked. \n\nHannah cleared her throat. \"Ben was in a catch 22 situation. He didn't want the responsibility but he also couldn't abandon her. Dr. Granger suggested he bring her with him until he could find a solution for her. The doctor said she will work with her to rebuild her sense of self.\" \n\n\"Couldn't she have gone to a hospital in Australia or Germany to seek help with that?\" Gabriella asked. \n\n\"She does not have the capacity yet to be on her own without a Dom... or another Sub to calm her. Her husband was a very bad man who was very abusive,\" Tina explained. \"In Ben she saw a man stronger than her Dom and she knew from TV that he was a protector so she fled her husband for Ben. She risked being beaten to death to do it. She was that desperate.\" ",
        "\"And Margaux turned on him because he couldn't stop himself from helping a woman in need,\" Gabriella said with pain in her voice. \n\nThere was a moment of silence as everyone heard Gabriella's need to be with him. \n\n\"We have some news,\" Chanel blurted and Catherine looked at her in surprise. Chanel blushed. \n\n\"Is it good news?\" Gabriella asked. \n\n\"Yes... Chanel and I are getting married,\" Catherine said, her cheeks burning. \n\nThere was a burst of happy congratulations from the group and hugs were shared. \n\n\"Gabriella, I- I was going to call you tomorrow morning to ask if it would be possible for you to fly back to join us for the wedding,\" Cat asked once the noise settled down. \n\n\"When is it?\" Gabriella asked. \n\n\"We were hoping to have it November seventh. That's not this Saturday but the following one. Everyone is invited,\" Cat said. \n\n\"Definitely I'll be there. I booked a flight home on the sixth and I'll be there the following week as Ben's case is on that Monday. I'm going to be there!\" Gabriella insisted. \n\n\"Wonderful! Mom and Dad are coming for their first visit ever. There was an accident at their house and they will be staying with us for a few weeks. Dad said he'd be here sometime on Thursday.\" \n\n\"Are they ok?\" Gabriella asked. \n\n\"Yes, they're fine but the house needs substantial repairs,\" Catherine confirmed. \n\n\"Do they know about the wedding?\" Hannah asked. \n\nChanel looked nervously at Cat who took her hand in hers. \"Not yet but Dad is going to love Chanel. Mom will too!\" \n\n\"Does Ben know?\" Hannah asked. \n\n\"I'd planned on talking with him tonight but it will have to wait until tomorrow night,\" Catherine said. \n\n\"You don't think he'll be upset do you?\" Chanel blurted looking towards the cell. \n\n\"No!\" The denial came from several mouths including Gabriella's. Trish barked out a laugh at their simultaneous responses. \n\n\"Ben will be delighted!\" Gabriella said. \"Catherine, do you still love Ben?\" \n\n\"Very much! He's always going to be an important part of my life!\" \n\n\"Then Chanel, you have nothing to worry about from Ben,\" Gabriella concluded. \n\nCat smiled at her lover who seemed relieved. \n\nHannah spoke up to bring the meeting back to their original purpose. \"We can't do anything for Ben until tomorrow at the earliest. We should get together with him after dinner to discuss a pre-emptive interview.\" \n\nGabriella broke in. \"That sounds like an excellent idea Hannah! I think we will need to act quickly though. There isn't much time between now and the trial and Wendy will need to do her interview soon.\" \n\nThey agreed to meet again tomorrow at Ben's and Gabriella said her goodbyes. Hannah also said her goodbyes to the others and headed home to make dinner for her son. \n\n\"A wedding! Let's order pizza and you can tell us all the details of your planning!\" Trish grinned as Tina and Lucy leaned forward eagerly. \n\nBen stood on a beach facing a storm coming in over the waves. He couldn't move on the loose sand so there was no escape before the storm reached him. He saw Wendy's eyes glaring down at him from the storm clouds and knew her hate for him was real and complete. He wished he could say something to break through that anger to reach the sweet, gentle heart of the woman he married. \n\nAbove the storm he heard a woman alternating between wailing in despair and screaming with rage. It seemed to be coming from behind him. He struggled to see but his feet kept slipping in the sand. \n\n\"Ben! Please don't leave me! I'm sorry! Help me!\" \n\n\"Margaux?\" he called out. He was sure it was her voice. \n\n\"You betrayed me! You lied and betrayed me!\" she screamed. \n\n\"I didn't! Margaux!\" he yelled. \n\n\"Ben, I'm dying and you do nothing! You help everyone but let me rot away!\" Wendy's voice thundered from above. He turned back to the clouds and saw they were almost upon him. \n\n\"Wendy! Please! Wendy!\" \n\nLightning flashed as Margaux cried for Ben to return to her and he felt a sharp pain stab through his brain. \n\n\"NNNOOOOOOOO!\" Ben yelled as he jolted awake into a sitting position. \n\nHe raised his hands to press on his temples as the pain throbbed dully through his head. \n\nA gentle hand touched his arm. \"Are you ok?\" \n\nHe lowered his arms and blinked into the shadows. The accent gave her away. Gretchen. \n\n\"Would you like some pain killers? You can have some of mine.\" Gretchen said from the darkness. \n\n\"Thanks, no. I'll just get some extra strength headache meds from the bathroom cabinet,\" he said quietly. \n\n\"I'll get them. One or two,\" she asked as she slipped from the bed and rushed around it to the bathroom door. \n\n\"Two, please.\" \n\nThe light went on in the bathroom and Ben was presented with the sight of her naked body once more. She was totally unself-conscious about it. He couldn't look away as she leaned against the counter and reached up to the medicine cabinet, stretching her arm up to take the bottle of pills down. Ben was mesmerized by her smooth skin and toned muscles. \n\nShe tipped out the pills into her hand and poured a glass of water. Then she moved to Ben's side of the bed. \n\nHe held out his hand for the pills and took the glass. He swallowed them and drank until the glass was empty. She returned the glass to the bathroom and shut off the light before returning to her side of the bed. Ben glanced at the clock and saw it was three in the morning. \n\n\"Why aren't you wearing the t-shirt?\" he asked carefully. \n\nThere was silence for a moment. \"I- I'm sorry. I can't sleep wearing clothes,\" she said nervously, almost whispering in her fear of his disapproval. \n\nBen sighed. He was too tired. \"It's ok. I get it.\" He rested back on his pillow, his head thumping gently. He'd have to wait for the meds to ease in. \n\n\"You were calling out in your sleep.\" Gretchen said quietly. \n\n\"Just a nightmare.\" \n\n\"Who is Wendy?\" \n\nHe assumed he called out her name. \"She... she's my wife. My ex... she left me a long time ago.\" \n\n\"Why did she leave?\" \n\nBen lay there looking at the ceiling picking at the same mental scar that had plagued him since that day. \"I'm... not sure because she never told me. We couldn't have kids. I am almost sterile and she was unable to have kids. She took that hard. I don't know if it was my sterility or hers that made her leave. I tried to make it work. Told her I didn't need kids, showed her how much I loved her but... it wasn't enough.\" \n\nThere was quiet from the shadows then she shifted a little closer. \"But Tina is having your baby?\" \n\n\"Almost sterile. It was a huge surprise to discover I had somehow made Tina pregnant. A miracle,\" he sighed. \n\n\"I can't have babies either.\" \n\nBen looked over to his right and saw her eyes picking up the minimal light in the room. She was very close. \"Why?\" \n\n\"Rainor found a doctor to perform a tubal ligation on me. He didn't want children,\" she said wistfully. \n\n\"Oh my god! That's-\" Ben was at a loss for words for how monstrous he thought that was. He wished he could bring Rainor back to life just so he could strangle the bastard until he was dead once more. \"I'm so sorry! You wanted a baby?\" \n\n\"Yes!\" she suddenly sobbed, surprised by her own emotional outburst. \"But... but not with him.\" \n\nBen struggled to control his own emotions. He had to agree. Putting a child's welfare into the hands of Rainor would have been the cruelest act. Still, it wasn't too late for Gretchen. \n\n\"You're still young. You still have a chance to have a child,\" Ben said to ease her mind. \n\n\"What? How?\" she asked incredulously. \n\n\"You said you've had a tubal ligation? You could still have a baby with in vitro fertilization.\" \n\n\"What's that?\" \n\nBen looked at her wide eyes in the dark and wondered at the damage that man did to her, keeping her so isolated. \"A doctor harvests some of your eggs and fertilizes them outside of your body. Then he implants them in your womb to see if they will take. If one does, you're pregnant.\" \n\n\"Ohhhhh, I want that!\" she moaned softly. \n\n\"Well... you should ensure you have a safe and stable home before bringing another life into the world.\" Ben said awkwardly and Gretchen fell silent for a bit. Ben dreaded he'd hurt her once more. \n\n\"I- I keep forgetting,\" she said in a strained whisper. \n\n\"Forgetting?\" \n\n\"That this isn't my home. That you don't want me. That I'll have to go away sometime... soon,\" she finished in a sob. \n\nHe pulled her against him as her tears began. Ben's heart was breaking for her but he knew he had to protect his heart as well. He'd just gone through a painful break with Margaux and was still too shaky to begin another relationship. \n\nIt didn't stop him from feeling her pain deeply and responding to it. He ran his fingers through her hair to calm her as he'd done before on the couch in her condo. This time it felt different as her naked body was pressed to his and he was very conscious of how good that felt. Her hair was so soft and slipped through his fingers like silk. He felt himself responding and cursed his body's weakness. \n\n\"Gretchen... dear, we have to stop. Please.\" \n\nHe could tell she felt his erection pressing against her stomach through his boxers as she was rocking back and forth against it. Which wasn't doing anything to make it go away. \n\nHer tears had stopped and her breathing was becoming ragged. \"Oh god!\" she gasped quietly. \n\n\"Gretchen, stop.\" \n\nHer movements slowed then she pulled away abruptly. \n\n\"I'm sorry. I'm sorry. I'm not worthy,\" she whispered. \n\n\"What?\" \n\nShe moved to the far edge of the mattress and curled into a fetal position. Her whispers continued. \"You should have left me to die. I wasn't worthy of him, how could I have thought I was worthy of you!\" \n\n\"Gretchen!\" he exclaimed, ashamed he'd made her feel that way about herself. He reached out to turn her to face him and she shied away, trying to throw herself from the bed. \n\nBen grabbed her shoulder and pulled her back into the middle of the bed as she twisted and turned struggling to hide her face from him. Her tears were back but she was crying silently. \n\nHe finally settled his body over hers to hold her still against the mattress and free up his hands. He rested on his elbows to hold her face still between his hands so he could look into her eyes. \n\nIn the dim light of the bedroom her dark eyes looked up into his desperately. \n\n\"He was not worthy of you. You are beautiful and desirable and I'm obviously attracted to you. But I'm also a mess from what happened with Margaux. I'm not worthy of you at this moment.\" \n\nHer eyes went wide with shock. \"You are! I mean, I'm not worthy of you!\" \n\n\"Stop that! Of course you are!\" Ben scolded and shifted to relieve the pressure on is cock which was trapped between their bodies and pressing hard against her mound. \n\nGretchen's mouth dropped open and her body trembled under his which just caused him to throb and thicken some more. \"Oh!\" she moaned as she began to rock her pelvis once more. \n\n\"Geezus, Gretchen that feels so good but-\" \n\n\"Please!\" she cried desperately. \n\nBen found his mouth on hers, hungrily caressing her lips, tentatively slipping his tongue inside to touch hers. \n\n\"MMMMPPHH!\" she cried as she clung tenaciously to him, her hips rolling jerkily under his body rubbing his bulge across her clit. \n\nBen's mind was filled with the wonderful sensations of her soft body stroking his but he knew he had to stop. Her mouth was so incredibly soft and she was kissing him so eagerly it was destroying his ability to resist. He pulled back from the kiss with a supreme effort but his mouth just moved to trail kisses down her throat. \n\n\"Oh god! Ben! Please... No, stop... don't...\" she whimpered pitifully as she pushed against his chest weakly. \n\nLike a splash of cold water Gretchen's words and gestures cleared Ben's head. He immediately pulled back and relieved the pressure of his body against hers as he looked down at her in shock. \n\n\"Wha- why did you stop?\" Gretchen gasped. \n\n\"You just told me to. Was I hurting you? I- I'm so sorry-\" \n\n\"NO! No, it felt... I've never felt this good before!\" she gasped in wonder and struggled to get him to rest his body against her once more. \n\nBen's mind spun with confusion. \"But... you said stop and don't.\" \n\nHer eyes looked into his with confusion. \"Isn't that how you know it's good? Rainor needed me to struggle and cry-\" \n\n\"OH MY GOD! THAT'S HORRIBLE! He wanted to pretend he was raping you?!?\" Ben's lust was quickly cooling, replaced by his revulsion at what she'd had to endure. Once more he needed to kill Rainor. \n\nSlowly. Painfully. \n\n\"It was only pretend the first couple of times. Please Ben! I'm sorry! I'll do whatever you want! I- I've never felt like this before! Please!\" She clung to him and tried to lift her face to kiss him once more. \n\nBen took her face between his hands to make sure she was paying attention. \"Listen to me. I never want you to be anything less than completely honest with me. If what I'm doing causes you any discomfort or you don't like it for any reason you will tell me and I'll stop immediately. If you like what I'm doing you will tell me so I can do it some more. Is that understood?\" he said fiercely and she stared up at him in shock. She tried to nod but his grip prevented this. \n\n\"Say it.\" \n\n\"Yes! Yes, Ben!\" \n\n\"Complete honesty!\" he growled. \n\n\"Complete honesty. Please kiss me!\" she begged. \n\nHe did and his kiss was deep and passionate. Gretchen was pressed under his body once more and her mind was threatening to white out from the strength of the pleasure and relief sweeping through her body. \n\nWhen he pulled back from the kiss her lips were tingling and she gasped for breath. His mouth was on her long neck kissing his way down and shocks of sharp pleasure were racing along her nerves, scattering her thoughts. When she became aware his mouth had reached her breasts she only had time to cry out in bliss as her nipple slipped between his lips to be stroked by the tip of his tongue. She waited for his teeth to cruelly bite down but the pain never came as she clung to the back of his head. He squeezed, kissed, and caressed her tits until she thought she might lose her mind. \n\n\"Oh god yes! Oh yes!\" she panted. She pulled at his shoulders but his kisses moved down over her trembling stomach and she lifted her head in surprise. What was he doing? \n\nHer head fell back to the mattress as her feeling of madness exploded when his mouth teased and caressed the soft flesh of her inner thighs. She was in unknown territory, lost in the sensations. Her body stiffened and her back arched when his tongue stroked across her sensitive lower lips. When he took her most sensitive flesh inside his mouth to stroke with his tongue something happened to her body. It was like nothing she'd ever experienced before. It was both exhilarating and terrifying for its unfamiliarity and sheer intensity. There was an explosion of light and ecstasy and she might have screamed before she passed out. \n\n\"Gretchen... Gretchen dear. Are you ok?\" Ben's gentle voice slipped into her consciousness. He was lying on his side, leaning on one elbow next to her on the bed. \n\nShe tried to speak but only managed to move her lips and roll her eyes. She became aware of her body buzzing happily as every nerve tingled. \n\n\"Wha...happened? What d'you do?\" she slurred. \n\n\"Have you never had an orgasm before?\" he asked incredulously. \n\n\"I- never felt... this before,\" she sighed happily as she stretched like a cat, enjoying the ripples of pleasure that surged across her nerves. \"Oooooooooo.\" She opened her eyes and saw Ben smiling down at her. She became embarrassed for her behavior and covered her face with her hands as he chuckled softly. \n\n\"No, I want to see your beautiful face,\" he said as he gently moved her hands. \n\nA warmth flushed through her body once more and she looked up at him happily. She ran her hands down his chest, over his stomach and onto his boxers. Her eyes widened in surprise when her fingers slid down and measured the length and thickness of his cock. \n\n\"Oh! You- you're big!\" she gasped. \n\n\"We don't need to do anything more tonight. I think we should stop and get some rest. There's no need to rush,\" Ben said with a smile. \n\nGretchen pouted. \"But-\" \n\nHe kissed her to silence her argument and when he pulled back she sighed happily then yawned widely. He chuckled softly again and laid back on the bed next to her. \n\nShe tucked herself against his side and purred happily. \n\n\"Goodnight Gretchen dear,\" Ben said to her and she heard the happiness in his voice. She smiled and whispered goodnight to him before sleep took them both. \n\nChapter 39 \n\nBen was up at the crack of dawn and slipped downstairs to do a workout before everyone woke. His muscles moved well and once he warmed up he was powering through his sets. He pushed himself and felt the burn in his muscles as he let the stack settle to the base one last time. He was panting and covered with a sheen of sweat when he made his way upstairs. \n\nAs he passed the washroom in the hall he picked up the sound of someone being sick. He knocked gently. \"You ok in there?\" \n\n\"Yes. Hang on.\" \n\nThere was a sound of water running, gargling, then spitting. The water shut off and the bathroom door opened. Lucy stepped out. \"Stupid spicy pizza!\" she said smiling weakly up at him. \n\nHis eyebrows went up so she explained. \"We had pizza at Catherine's last night. Tina doesn't normally like pizza but discovered she could get really spicy toppings. I ate a slice of hers and I was paying for it all night... from both ends! I have no idea how she deals with the heat! I think the baby is fireproof!\" \n\nBen grinned back at her as she began to ogle his sweaty muscles. \"You look yummy,\" she said with a crooked smile as she tilted her face up for a kiss. The smile quickly slipped away as she reversed her motion to step back into the bathroom and close the door. He heard her throwing up again. \n\n\"Are you sure you're ok?\" he asked and waited for a response which eventually came through the door. \n\n\"Yeah... though I think I'll stay home today. I'll call Ashley to let her know.\" \n\n\"Good idea,\" he said and headed back to the master bedroom. \n\nTina was navigating her way out of the guest room on her crutches. She and Lucy must have slept there since Gretchen was in his bed. \"Good morning Ben! Have you seen Lucy?\" \n\n\"Good morning, Tina.\" He leaned forward to kiss her tenderly and she smiled up at him afterwards. \"Yes, she's in the guest bathroom with an upset stomach and the runs. Apparently the extra spicy pizza slice she had last night didn't sit well with her.\" \n\nTina immediately looked concerned and moved off down the hall. He watched her knock gently then enter the bathroom. \n\nHe'd never get away with barging into a bathroom when someone else was inside. \n\nHe entered the master bedroom and closed the door behind himself. \n\nGretchen was still sound asleep. The sheets were only partially covering her naked form and her lovely tits were on display. Ben felt a tingle and looked away. He grabbed some clean boxers and moved into the bathroom, closing the door gently. \n\nStepping into the shower he got the jets going and let the heat soak into his muscles. He allowed himself two minutes of this pure indulgence then switched the jets off and had a regular shower to clean the sweat away. \n\nHe finished up, dried off, slipped on the boxers, brushed his hair, and shaved. \n\nFeeling human once more he stepped out into the bedroom to see Gretchen sitting on the edge of the bed, the sheet covering only her lap. She smiled at him. \"Good morning!\" \n\n\"Good morning, Gretchen dear,\" he said returning her smile. \n\n\"Why do you call me 'Gretchen dear'?\" she asked curiously. ",
        "Ben blinked at her. \"Do I?\" He hadn't realized he was doing that. \n\n\"I was just wondering. I like it,\" she said looking up at him from under her bangs with a sweet little smile. Ben felt an almost tangible tug towards her and grinned self-consciously as he moved to get some clothes. \n\n\"The bathroom is all yours,\" he said over his shoulder. \n\nThe bathroom door closed behind him and he pulled on a shirt, socks, and slacks. He left the bedroom and made his way to the kitchen. \n\nTina and Lucy were nowhere in sight so he busied himself making breakfast for everyone. \n\n\"Ben?\" \n\nHe looked over to the doorway and Tina was dressed and had her coat on. His eyebrows went up. \n\n\"Could you drive me to the drug store? I need to pick up something for Lucy?\" she asked. \n\nHe immediately turned off the burner and moved the ingredients he was working with back into the fridge. \"Is she sick?\" \n\n\"She will be fine but her stomach is queasy and we do not have any Gravol. I would like to get her some,\" Tina explained. \n\n\"Oh! Sure! Let's go!\" Ben said. He grabbed his jacket, boots, wallet, phone, and keys. Then he wrote a quick note for Gretchen and met Tina in the garage. They got in and Ben drove them out of the neighborhood and over two blocks to a pharmacy. \n\n\"I will just be a minute,\" Tina said as she slipped out the door before Ben could get his belt off. His cell rang so he answered while watching Tina make her way inside the store. \n\n\"Hello?\" \n\n\"Ben! It's Don Blake! It isn't too early to call is it?\" \n\n\"No, it's fine. What's up?\" \n\n\"That presentation kit we put together and you proofed? I sent it along to that contact of mine and he's... well, he's asking to meet with you.\" \n\nBen vaguely recalled looking at the marketing piece the previous day but he was well into a migraine at the time and today he couldn't really recall there being anything about the document that indicated who designed the device. He sighed. \"Did you make any promises, Don?\" \n\n\"No! Not at all. All I've said is that the device is real, we've tested it and gave them the presentation kit. I'm not kidding. These people are fucking excited about the filter!\" Don exclaimed happily. \"Did your lawyer send off the contract by any chance?\" \n\nBen smiled. \"Yes, it went by courier last night. You'll probably get it today.\" \n\n\"Thanks, Ben!\" \n\nHe could hear the relief in Don's voice. \"As you'll be handling the sales and marketing they really should be speaking with you. Did you give them my contact information?\" Ben asked. \n\n\"That's what I'm calling about. I wasn't about to give them that information without your permission. Normally we will be the contact for the customers but this one needs to speak with you directly before we can do business,\" Don explained. \n\n\"Who will I be speaking with?\" \n\n\"Colonel Alexander Hargrave of the US Army.\" \n\n\"A Colonel. I'm going to be speaking with a Colonel?\" Ben asked in surprise. \n\n\"Nice man! A real straight shooter-\" Don stopped suddenly and burst into laughter. When he finally got control of himself once more he came back on the line. \"Ahhh, sorry about that Ben. Sometimes I surprise myself! That was a good one. Seriously though, the Colonel is good to do business with.\" \n\nBen saw Tina making her way back to the truck. \"Ok, let him know he can give me a call.\" \n\n\"He's more of a face to face man,\" Don said. \n\nTina was climbing into the truck and her crutches were getting in the way. Ben moved his cell to his left ear and reached over to help her lift the crutches inside. He accidentally knocked the bag Tina was carrying from her hand into the truck and the contents spilled out over the seat. A pack of gum, the Gravol, and a bottle of Pepto landed next to him but some items fell down by his feet. He winced and mouthed he was sorry to Tina as she froze in the doorway. He went back to his call as he reached between his legs to get the dropped items. \n\n\"Sure, I'll be home for the next few weeks so give him my address.\" Ben picked up a package of cotton swabs and handed it to Tina who was still standing in the doorway. He frowned and motioned for her to get in. As she did he reached down between his legs to lift another box. He glanced at it and everything just stopped. \"I... have to go, Don.\" He hung up. \n\nHe looked at Tina as he held the home pregnancy test in his hand. \"Lucy?\" he asked, his voice wobbling. \n\n\"I do not know. I thought it might be a good idea to check,\" she said quietly. \n\n\"Who?\" he forced out of his tight throat. As he said it he winced as it made him sound jealous when he was more concerned about Lucy keeping secrets. \n\n\"You. Only you.\" Tina insisted sincerely. \n\nHe looked at her wide eyed then nodded. Trying to get a hold of himself he grinned weakly to her. \"She may just have a little food poisoning or it's a reaction to the spicy pizza.\" \n\nTina nodded. \"Perhaps. But it would not explain her missed period.\" \n\nBen's expression froze. \n\n\"We should not leap to conclusions until we have run the test. Let's go home. Lucy is waiting and she is very nervous as well.\" Tina said gently. \n\nBen nodded and carefully drove them back. He pulled into the garage and carried the bag of items inside. Tina stopped him in the kitchen. \n\n\"Ben, please let me do this. I will let you know the moment I know. Please,\" she asked placing her hand on his arm. \n\nHe looked into her eyes and saw her love for him. He nodded and gave her the bag. \n\nShe moved off towards the guest bathroom as Ben stood in the middle of the kitchen. He gave himself a shake and moved to the fridge and began to make breakfast once more. \n\nHe jumped when Gretchen entered the room. She was wearing the white yoga pants and black sweater they picked up at the mall. \n\n\"I'm sorry for startling you... is everything alright?\" she saw his nervous expression and lost her smile. \n\nHe nodded and returned to making breakfast. He whisked the eggs in a bowl while he listened for Tina's return. \n\nWhen Tina and Lucy appeared in the doorway Ben almost dropped the mixing bowl. Tina's eyes were glowing with joy but Lucy's eyes were locked on his, desperate to see his reaction. \n\n\"It's positive?\" he managed. \n\nLucy nodded. \n\n\"How...\" he gasped and she snorted explosively then began to cry. Ben crossed the room and she was in his arms. \n\nGretchen watched in confusion and looked to Tina. \n\n\"We just discovered Lucy's carrying Ben's baby,\" Tina explained quietly as Ben held Lucy to his chest and stroked her hair as she cried from the release of tension. \n\n\"It shouldn't have been possible. The odds are so astronomically high against it happening!\" Ben said incredulously. He pulled Lucy out to look in her eyes. \"What do you want to do?\" \n\n\"Oh god! I want- I want to keep it! Please!\" she gasped. He nodded and kissed her fiercely. \n\n\"We need you to go to Tina's obstetrician to have a full examination. She'll run her own pregnancy test.\" Ben said when he released her from the kiss. Lucy nodded with happy tears in her eyes. \n\nHe glanced over at Gretchen and was shocked to see the despair on the woman's face. She was trying to hide it but her expression triggered his memory. \n\nHe saw Wendy sitting at that very kitchen table the morning after she was told she was sterile. Ben had watched her spirit begin to die that day. Gretchen's face held the very same expression. He couldn't let her follow Wendy's path. \n\n\"Everyone, please take a seat,\" Ben said gesturing to the kitchen table. He took the chair nearest to Gretchen, Lucy took one on Ben's other side as Tina sat at the end. \n\n\"I never expected this. Any of it. When Wendy left me I came to the conclusion that not only would I never have love but children were an impossibility. Then so many loving women came into my life and I couldn't fathom how I'd become so fortunate... I- I still can't to be honest. I never expected that luck to go so far as to actually allow me to have a child!\" He looked at Tina with love in his eyes then turned his gaze upon Lucy, clearly showing his love and awe at the second miracle. \"Much less two! I love that I can share my life surrounded by so much love. Again it's more than I ever thought I deserved.\" \n\nBen turned his attention to Gretchen who was struggling to keep her tears at bay. Her lovely bottom lip was trembling as she tried to stiffen it. He took her hand in his and her control slipped momentarily. Ben looked to Tina and saw her watching him carefully. \"Gretchen told me what that monster she was married to did to her. He had her tubes tied so she'd be unable to have children.\" \n\nTina and Lucy gasped in outrage and sympathy. \n\n\"Gretchen is lost. She is alone in the world and Tina, I believe you've been trying to get me to accept her into our family.\" \n\nTina nodded and smiled at the surprised look on Gretchen's face. \n\n\"Gretchen dear...\" Ben smiled self-consciously with a small shake of his head as he finally heard himself saying it. He wondered if he'd already accepted her in his heart by giving her that name. \"I would be honored if you would join our little family. We have some hurdles ahead of us, the main one being your immigration. I'll get help with that-\" \n\n\"Ben.\" \n\nHe looked to Tina who was smiling sweetly at him. \"Marry her.\" \n\nHe wasn't sure he'd heard her correctly but the words were out there. \"But- but I'm engaged to you!\" he exclaimed, stunned. \n\n\"Ben, I will always be yours. I love you more than I can say. You are the father of our child-\" \n\n\"One of the reasons for getting married was because of our child!\" Ben insisted. \n\n\"Lucy, the woman we both love, is carrying your child as well. How will marrying me help her?\" Tina asked gently. \n\nBen looked between the two of them, at a loss to answer her question. \n\n\"I do not need a piece of paper to prove our love. The issue of our having your children outside of marriage is truly minor as I know you love us and you will love your children. No, what that piece of paper will do best, and should be used for, is to save Gretchen from being sent away,\" Tina explained. \n\nGretchen was crying and moved to Tina. She knelt next to Tina's chair and wrapped her in her arms as she rested her head on Tina's chest. \n\nBen was struggling to control his own tears but Lucy was letting hers flow. He was in awe of Tina's capacity for love! \n\n\"Will you give Gretchen a baby as well?\" Tina asked. \n\nThe woman in question gasped and looked up at Tina's gentle smile. Then she looked back at Ben who was looking at Tina in surprise but finally nodded. Gretchen scrambled to her feet to kiss Tina then rushed back to kiss Ben. \n\nWhen he finally got her to calm down he made her sit in her chair and took her hands in his. \"I wasn't kidding when I said it was a miracle that Tina became pregnant. It was even more incredible that lightning struck twice with Lucy. We will go to a fertility clinic and try in vitro fertilization but before I agree to this you have to accept the very high possibility that it might not work. If it doesn't you have to be able to accept that. To accept that having a baby isn't the only reason for living or being happy! I can't go through again... what I went through with Wendy. I- I just can't!\" Ben's voice was raw by the end. \n\n\"Yes! I accept it's only a chance. That's good enough. I promise!\" Gretchen gasped as she cried. \n\nBen turned to Lucy. \"I don't want any of this to diminish how flattered I am that you want to have my child. I love you so much!\" \n\nLucy moved to Ben's lap and kissed him until they parted to catch their breath. \"I love you too Ben!\" \n\nBen looked at the three happy faces. \"I- I don't know what to do next!\" \n\n\"I will call my obstetrician to make an appointment for Lucy,\" Tina said. \n\n\"I'll help Gretchen research fertility clinics to find a good one nearby,\" Lucy suggested and Gretchen reached over to hold Lucy's hand. \n\n\"Mama!\" Christopher called out from his bedroom. \n\nThey glanced at the clock and saw it was almost 9AM. \n\n\"The morning is getting away from us!\" Tina yelped playfully. \n\nLucy slipped off Ben's lap and rushed over to Tina to give her a kiss then moved off down the hall to get Christopher. \n\nGretchen was wide eyed with excitement as she smiled at Tina. \"I cannot believe how much my life has changed in such a short number of days!\" \n\n\"Life is very exciting around Ben,\" Tina agreed. \n\nBen smirked at Tina and walked over to go down on one knee beside her. \"If there was any legal way to marry you, Lucy, and Gretchen you know I would in a second.\" \n\n\"Yes, I do,\" she said, looking at him impishly. \n\nHe took her hand in his and lifted it to his lips to sensually kiss the pad of each fingertip as she gasped and squirmed, watching his mouth hungrily. \n\nLucy arrived with Christopher and Ben gave him a kiss on the forehead before standing to kiss Lucy passionately. She was swooning as he stepped back and walked over to the counter to finish preparing breakfast. He glanced back and saw three women undressing him with their eyes. A tingle ran down his spine and he stiffened in his pants. He turned back to the counter and adjusted himself discretely. He still heard giggles from the ladies so he supposed he wasn't as discrete as he thought. \n\nHe fried up some bacon and made scrambled eggs as Lucy prepared a pot of coffee. She still looked a little pale so she indicated she would just have some toast. \n\nThey ate their breakfast and listened to Christopher chatter away happily. He was eager to get back to his friends at the daycare. \n\nWhen they were done Lucy told Ben she would clean up the kitchen so he took Christopher over to Daphne's place. Once more the young boy squirmed to get down and go but he had to wait until Lisa came to the front to greet them. She helped him off with his coat and boots then he was off like a shot. Lisa grinned after the boy then turned to Ben. \n\n\"Hi,\" she said with a wide smile. \n\nBen was suddenly struck once more by how incredibly lovely she was. She was the same age as Lucy too. The way she'd smiled at Christopher made him pause and think about what he was getting himself into. \n\nTina, who was only a couple of years older than the twins was having his baby. Lucy was their age and was having his baby. Gretchen was 31 and wanted to have a baby with him as well. That was at least three children of his own. Plus Christopher. His house wasn't big enough. He needed to expand it! \n\nWhile he knew Gabriella, Catherine, Trish, and Hannah were done with having children, he didn't know if the twins wanted them. As he was in a relationship with them he needed to ask. What if they did want children? He began to feel a little light headed. Then very light headed. \n\n\"Ben? Ben! BEN!\" Lisa yelped as he staggered sideways to thump his shoulder against the wall. She grabbed his other arm to stabilize him. Daphne rushed out to see what was happening and saw Ben was taking deep breaths and leaning against the wall. The two women managed to get him moving and brought him into the playroom and had him lie down on the big couch. Lori was there and pulled off his boots to put his feet up on the arm of the couch to raise them above his head. Some of the kids came over to see what was happening but Daphne drew them away to the activity center. \n\nHe looked up into the concerned faces of the twins. \"Sorry about that,\" he said with embarrassment. \n\n\"Are you feeling any pain in your arm?\" Lisa asked. \n\n\"No, it wasn't anything to do with my heart,\" he said with a sigh. \"I've just had a rather... emotional morning. I'm afraid it just suddenly overwhelmed me as I thought about it.\" \n\n\"What happened?\" Lori asked. \n\nBen no longer felt lightheaded so he eased his feet down to the floor and sat up. He didn't re-experience the dizziness so he sighed with relief. He patted the couch beside himself and the twins sat next to each other facing him. He had to smile as they looked so lovely there. He stiffened his resolve. He had to ask them straight out. \n\n\"Lucy may be pregnant with my child,\" Ben said. The twins squealed excitedly and drew looks from the kids and a glare from their mother. Ben gave Daphne an apologetic look and a stern look at the twins. \"This is according to a home pregnancy test which, as impossible as it seems, I believe may be correct.\" \n\nHe took a deep breath and pushed on. \"You know the woman I've asked you to shop for tonight? Gretchen? I've agreed... to be her Dom.\" He paused to see their reaction but they took that news as if it was a given. He felt... a little annoyed that the women in his life always seemed to know the outcome of his decisions before he did. He pushed that aside for now. \n\n\"Her husband had a doctor tie her tubes to sterilize her,\" he said bluntly and they gasped in outrage as Tina and Lucy had. He nodded. \"She wanted a baby but not with him. I- I said I would try to give her a baby with in vitro fertilization.\" Again, the only reaction from Lisa and Lori were loving smiles. \"There's... going to be a lot of babies in my home. I'll need to add some rooms to the house.\" He looked into the eyes of the twins. \"Are you going to want children too?\" \n\n\"No!\" they blurted loudly in unison drawing another glare from their mother. They blushed and apologized to her. \n\n\"We love working with children but neither of us is interested in having our own. We- we were worried how you would take that news but it seems you have no shortage of willing volunteers.\" Lisa said and Lori nodded with a grateful smile. \n\n\"I was amazed to discover I was having one with Tina. I'm very happy to be having one with Lucy too. Gretchen deserves to have a baby after she lived with that monster for so long.\" He looked at the twins. \"I don't think it would be a good idea to have more than that.\" \n\n\"You have our word that we won't ask you for children,\" Lisa said and Lori nodded. \n\nFeeling much better Ben nodded and stood up. \"Sorry about that Daphne. I'm feeling better now. Have a great day!\" \n\n\"Bye Ben!\" she replied with a wave and the kids paying attention waved as well. He waved to everyone and made his way out with the twins following. \n\nHe slipped his boots on and gave the ladies a quick kiss before heading back to the house. He saw a man standing on the top step of Catherine's house ringing the doorbell. As he got closer to his driveway the man was returning to his vehicle which Ben saw was an older model of his truck. The man had grey hair in a flat top military cut and he moved with a precision that said he was military and you'd be smart not to fuck with him. \n\nHe spotted Ben and waved to get his attention. \"Excuse me! Is this Catherine Khaleel's home?\" he called out in a strong voice. \n\n\"It's Catherine's home but she went back to using her maiden name, McGovern,\" Ben called back. He saw the man's face freeze then smile. \n\n\"You wouldn't happen to be Cat's neighbor, Ben Shepherd would you?\" the man said walking towards him. \n\nBen looked at the man suspiciously. \"Do I know you?\" \n\n\"No, but my daughter has spoken of you. I'm Jack McGovern. Cat's father,\" the man said holding his hand out. \n\nBen smiled and shook the man's hand which had a very firm grip. \"The Sergeant?\" \n\n\"Retired!\" Jack smiled. \"I guess I'm a little early. I wasn't scheduled to arrive until tomorrow but the hotel we were booked in last night was hosting a bunch of drunk and noisy yahoos. We couldn't sleep so the missus and I got back in the car and just drove through the night. I was hoping to get here before Cat went to work but we got stuck in traffic.\" \n\n\"I could call her on her cell,\" Ben offered but Jack just raised his hand. \n\n\"No, I don't want to disturb her plans. I wasn't supposed to be here this early,\" Jack said. \n\n\"Okay, why don't you come to my place to wait for Catherine to get home? You're welcome to get some sleep in the guest bedroom.\" Ben suggested. ",
        "\"I wouldn't want to impose!\" the man exclaimed. \n\n\"It's no imposition at all. I work from home so I'm home all day,\" Ben insisted. \n\nJack looked back at his truck. \"That would be very generous of you. I think the missus would prefer sleeping in a bed than in the car.\" \n\n\"Sure. I'm just right here. You can pull into my driveway and I'll meet you out front,\" Ben suggested. \n\n\"Will do,\" Jack said with a nod and headed back to his truck. \n\nBen went up his driveway and slipped inside his front door. Gretchen met him with a brilliant smile. \"Hi, could you ask Lucy to change the sheets and pillow cases on the bed in the guest bedroom. We're about to have guests and they'd been driving all night so they'll need to sleep in there.\" She nodded and rushed off to find Lucy as Ben stepped back outside. \n\nThey were getting out of the truck and Ben got his first look at Catherine's mom. She was petite, maybe 5' 5\", and a smaller version of her daughter. Obviously Catherine got her height from her 6' father. Based on Catherine's age both parents had to have been at least a year or two into their sixties but they both looked like they might only be in their fifties. He smiled at them as Jack carried some luggage with him up to the door. \n\n\"Welcome! I'm Ben. Come inside where it's warm.\" \n\n\"Lynda,\" she said shaking his hand and stepping into the foyer. \n\nBen followed Jack in and noticed Tina, Lucy, and Gretchen had gathered in the hallway to greet their visitors. \"Let me introduce Tina Lee, Lucy Bennett, and Gretchen Hahn. Ladies, this is Jack and Lynda McGovern, Catherine's parents.\" Three beautiful smiles beamed back at the surprised parents. \n\n\"Oh my! Such lovely women and I look like a train wreck from driving all night.\" Lynda fretted. \n\n\"That's silly! You're gorgeous! I can see where Catherine gets her looks,\" Ben said with a smile. \n\n\"Already flirting with my wife?\" Jack said with a fake snarl. Lynda playfully slapped his arm and smiled at Ben. \n\nShe looked closer at the women and noticed the casts. \"Oh! Was there an accident?\" she gasped. \n\nTina shook her head. \"I was pushed over a store display by a nasty reporter almost six weeks ago.\" \n\nGretchen, taking a cue from Tina, answered next. \"My husband broke my arm. He died,\" she blurted and blushed furiously. She looked at Ben nervously. She still wasn't comfortable around people. \n\nJack's eyebrows went way up and he glanced at Ben. \n\n\"He was abusive and was beating her when he slipped and fell off the boat we were on and into Sydney Harbour. Sharks got to him,\" Ben said with a grim but satisfied expression. \n\nLynda then noticed Tina's baby bump. That was a happier topic! \"Ah! When are you due?\" \n\n\"March,\" Tina replied with a happy smile. \n\n\"June,\" Lucy blurted then her mouth dropped open in embarrassment as her face flushed a deep red. \n\nConfused and surprised eyes turned to Ben once more. \"Lucy just discovered this morning that there's a very good chance she's pregnant. It's been an exciting day and it's not even noon,\" he said with a chagrined smile. \"Listen, we can have a more formal introduction later but I think you both should get some rest. The guest room is just down the hall, the first door on the left. The guest bathroom is across the hall. Fresh sheets on the bed and fresh towels,\" he looked at Lucy and she nodded, \"are on the bed for your use as well.\" \n\n\"That's very kind of you. Sleep sounds like a good idea,\" Jack said guiding his dazed wife along towards the bedroom. \"A few hours of shut eye are just what the doctor ordered.\" \n\n\"There are guest robes on the back of the door as well,\" Tina offered. \n\n\"Thank you,\" Lynda replied as she passed. The couple went into the bedroom and closed the door. Ben smiled at the ladies as Lucy walked up to him and leaned her head on his chest. \n\n\"I royally fucked up that introduction. I'm sorry,\" she moaned. \n\nBen chuckled and gave her a hug. \"Don't be silly! They seem like good people. It's fine.\" \n\nGretchen was standing before him, looking anxious. \"Did I ruin the introductions?\" \n\n\"Not at all. You did very well,\" he replied and she smiled timidly at him. \n\n\"Lucy has an appointment with my obstetrician Monday morning at 8:30AM,\" Tina said. \"My appointment to get my cast removed is on the following Friday.\" Ben nodded. \n\nLucy looked up from his chest. \"You and Gretchen have a 10AM appointment next Wednesday at a fertility clinic. I wrote the address down for you on the pad in the kitchen. Did you know Gretchen has never used the Internet?\" \n\n\"It is most wondrous! So much information at your fingertips! So many things to see!\" Gretchen gushed, wide eyed. \n\n\"Not all of it is safe to look at,\" Ben suggested and Lucy grinned at him. \"I suppose I should pick up a tablet for Gretchen... and a cell phone.\" Lucy nodded. \n\n\"I get my own tablet and cell phone?\" Gretchen asked incredulously. \n\nLucy snorted quietly and moved to the living room with Tina as Ben took Gretchen's hand and drew her to stand close before him. \n\n\"Yes... Gretchen, you're part of my family. We're going to be married and we're going to try to have a baby. Buying you some electronics is the least of it.\" \n\nShe blushed then looked at his mouth. \"May I ask for a kiss?\" she asked quietly. \n\nHe smiled and took her face between his hands as he caressed her mouth with his. She caught her breath and he kissed her a little more firmly, nibbling her lips with his. She really did have wonderfully soft lips. He avoided touching the spot that Rainor had split as it was healing nicely. \n\nHer eyes were dreamy when he pulled back and she was breathing hard. She bit her lip as she watched his mouth. \n\n\"We should probably stop now and pick this up later,\" Ben said, adjusting himself in his pants. \n\nShe trembled seeing him do that and dark eyes looked hungrily into his. \"I feel so tingly,\" she whispered. \n\nHe smiled. \"Me too.\" He kissed her nose making her blink then walked into the living room with her following close behind. He picked up his laptop and settled on his chair. Gretchen found a spot on the couch beside Lucy who was using her tablet. Tina was on Lucy's other side using her own tablet. \n\nHe worked for a moment then felt himself being watched. He looked up over the screen and saw Gretchen smiling back at him. Tina and Lucy were lost in their own worlds. Ben snorted softly and shut down his laptop. He stowed it away in the case and stood up. \"Let's go buy you a tablet and phone.\" \n\nGretchen climbed off the couch and rushed to get her jacket and boots. Ben gave Tina and Lucy a kiss and headed over to get his jacket, boots and keys. \"We'll be back shortly.\" They nodded happily. \n\nBen maneuvered his truck around Jack's as he pulled down the driveway and they were off. They drove over to the big box electronics store and parked. Ben held out his left elbow and Gretchen put her right hand through to rest it on his arm. She flashed him one of her brilliant smiles which gleamed against the dark lipstick she'd applied before they left the house. \n\nThey made their way to the tablets and Ben picked out one that matched the ones Tina and Lucy had but in black to make it different from their white and gold ones. Then he brought her over to choose a cell phone. He pointed to a touch screen phone and she nodded happily. She picked the black one to match her tablet. Ben asked her to pick out a protective case for it and told her the make and model of the phone so she would find one that fit. She walked off to find one while Ben sat with the salesman while they set up her cell number and linked her account to his. Gretchen returned with a blinged out case which was encrusted with crystals to make it look like it was covered in diamonds. There was certainly no way her phone would be mistaken for anyone else's at home. She looked at him hopefully and he just chuckled and added it to the purchases. He paid and they left the store. \n\n\"I'll set up the tablet for you when we get home but the cell is ready to use. Ask Tina or Lucy to help you add important numbers into your address book,\" he said handing her the phone and the bling case. They got in the truck and she worked on getting the phone into the stiff case. They made it home and she was still struggling to get it in. She looked at Ben with a pout and handed it to him. He ran his thumbs along the edge and popped it in. She grinned excitedly when he handed it back. They went inside and she immediately rushed off to the living room to show the women her new phone. \n\nHe made his way there and spent the next fifteen minutes running the set up on the device. Soon he had it configured for his network and she was online. The machine restarted and was ready for use. \n\n\"It's ready. Please get instructions from Lucy on safe surfing practices and good sites to use,\" he said handing over her tablet. She looked at him hopefully as he looked up at her expectantly. She tentatively touched her lip and he smiled and nodded. She immediately dipped her face down to kiss him. Then she rushed over to the couch to sit with Lucy. \n\nBen spent the next three hours corresponding with Bill Freeny who had received the contract, signed it and couriered a signed copy back to Walter. When Ben told him about the meeting with the Colonel the next texts from Bill were quite excited. Ben did his best to calm Bill and bring him back to earth. In his opinion he wanted to keep the unit prices of the filters low enough that they would be affordable to a wider market than just the military. This volume method had worked for him in the past when he believed the product had a wide application base. \n\nBen was shutting down his laptop when he heard a rumbling sound. He stood up and looked out the picture window at the circle court. There was a convoy of military vehicles coming around the circle. In the front was one of those bulky personnel carriers like the bigger brother of the truck Don Blake drove. The second vehicle was a black SUV with tinted windows and the last vehicle bringing up the rear was another personnel carrier. Ben's eyebrows rose up as the convoy stopped in front of his driveway with the SUV parked at the end. \n\n\"Who the hell is coming to visit you?\" growled a voice from beside Ben. He turned to see Jack standing beside him, wrapped in the fluffy white robe with white guest slippers on his feet. \n\n\"Did they wake you?\" Ben asked. \n\n\"I'd recognize the sound of those carriers anywhere.\" He looked at Ben. \"You do work for the military?\" \n\n\"No! I mean, I've designed something they're interested in and I was told they wanted to meet me but I wasn't expecting them so soon. My latest device caught the eye of a Colonel Alexander Hargrave.\" Ben said watching the vehicles at the end of his driveway. No movement yet. \n\n\"Crap. That blowhard. I've heard of him. He's apparently more of a salesman than a soldier.\" He tipped his chin up at the display. \"This is one of his shock and awe moves. He wants whatever you're selling. What do you do?\" \n\n\"I'm a Mechanical Engineer. I designed a filter for radioactive particles. A very good filter,\" Ben said. \n\n\"Well, that's going to make the Army stiff in their kilts,\" Jack said with a grin. He gave Ben an appraising look. \"You don't appear very intimidated by the display.\" \n\n\"I'm not. It seems overly dramatic,\" Ben replied. \n\n\"Like I said, Hargrave's a blowhard and I've heard his method is to bully people into getting what he wants. I do know he doesn't have half the authority he pretends to have.\" Jack explained. \n\n\"Good to know. I don't like bullies,\" Ben said with a scowl. \n\n\"You'll do just fine then. If you don't mind I'm going to avail myself of that wonderful looking shower.\" \n\n\"Not at all! Enjoy!\" Ben replied with a smile. \n\nJack moved away as silent as he'd approached. Ben was glad to have him on his side. \n\nHe looked back at the trucks just as someone exited the front passenger door to open the rear door for a man, most likely Colonel Hargrave, to step out. He placed his hat on his head and began walking towards the house. The man who opened the door closed it and fell in step behind the Colonel. \n\nBen turned to see the wide eyed ladies standing in a group behind him. \"Do you think I might have the living room to speak with the Colonel in private?\" he asked. \n\n\"Of course Ben!\" Tina said and led the others to the kitchen as Ben made his way to the front door. The doorbell rang and Ben opened the door. \n\n\"Hello, can I help you?\" Ben said. \n\nThe Colonel's smile slipped just a little. \"Colonel Hargrave. Don Blake mentioned I was coming to see you?\" \n\n\"Ah yes Colonel, please come in,\" Ben said and gestured for the men to enter. \n\nThey saw the boots lined up against the wall by the door and Ben was in socks so they slipped off their shoes and followed Ben into the living room. \n\n\"This is First Lieutenant David Kendricks. He works for me in the Office of the United States Assistant Secretary of the Army for Acquisition, Logistics, and Technology. OASA(ALT) for short.\" \n\nBen shook his hand and gestured for the men to take seats on the couch. He sat in his favorite chair across from them. \n\n\"Are you the person solely responsible for the design of the filter we saw the test results for?\" Hargrave began. \n\n\"Yes.\" \n\n\"Where did you do this work?\" the colonel asked. \n\n\"Right here. My office is in the basement,\" Ben answered. \n\n\"You're an independent contractor?\" Hargrave asked, raising his eyebrows. \n\n\"Yes, I'm semi-retired. I keep an eye on the engineering boards and when I see a puzzle that intrigues me I do what I can to solve it,\" Ben said looking at the intrigued expression on the face of the Colonel's assistant Kendricks who chose that moment to speak. \n\n\"So you've designed other devices?\" the man said in interest. \n\n\"Dozens,\" Ben responded, drawing a smile from the man. \n\nHargrave threw an annoyed glance at his assistant. \"Coming back to the filter, you've filed for a patent. Our people confirmed this. I suppose if we looked further we would have found patents for these other devices?\" \n\n\"Yes, though some which I felt had a limited application I sold,\" he replied. \n\n\"We've seen the test results but we haven't seen the actual device nor seen its specs to prove it does what they claim it can. If it's legit we would be interested in perhaps purchasing the patent from you.\" \n\n\"This one isn't for sale,\" Ben said clearly to ensure the man heard him. \n\n\"Really? The offer would be financially significant,\" Hargrave said with a sly smile. \n\nBen sighed and looked at the men. He stood as they looked up at him. \"Please come with me.\" \n\nThey were a little surprised but they followed him downstairs to the door of his office. He punched in the code and the door unlocked. He went inside and they followed. The lights came on and Ben flipped another switch to light up all of the display cases. Kendricks made an appreciative noise but Hargrave just frowned at his assistant again. \n\nBen guided them over to the first display case. \"In my university years I designed and patented this valve. Far more efficient and safe for use in nuclear power installations. I sold the patent for 4 million dollars and invested it well.\" Ben moved over to the next item in the display. \"This was a new type of insulator which greatly reduces electric current harmonics. I sold the patent for 10 million. I invested that too.\" They moved on. \"I began keeping the patents and just licensing them, earning a good income from the fees and investing that.\" \n\nHe stopped and faced the Colonel. \"Money I have. I'm just now starting to find ways to make that money serve a purpose and that feels really good. Finding solutions to these engineering puzzles makes me happy. Spreading the wealth I'm accumulating to improve the lives of those around me and those I work with makes me happy. I'm finally finding a purpose.\" \n\nHe looked at Kendricks who was looking down the row of cases with something like awe on his face. Ben smiled at his enthusiasm. \n\n\"Have- would you considered designing solutions for engineering issues from the Army?\" Kendricks asked. \n\n\"If a request shows up on the engineering board and it peaks my interest I'll take a look to see if I can solve it. Have you ever submitted a request there?\" Ben asked. \n\n\"We can't post state secrets on a public board!\" Hargrave growled, his annoyance with his assistant finally getting the better of him. \n\n\"The boards are anonymous to the users and are engineering issues actually state secrets? These boards are currently the only place I look so if I can't see them I can't help,\" Ben stated calmly. \n\nKendricks was nodding thoughtfully, ignoring the glare from his superior as his mind worked on this issue. \n\n\"Back to the filter. Do you have a physical sample of the device?\" Hargrave asked bluntly. \n\n\"Maybe. I haven't checked my mail. I may have received a copy of the filter I ordered from the milling shop. I couldn't keep the original prototype after it was used in the test chamber so I sent the shop a request to make me a second one for display.\" Ben said pointing over his shoulder to the glass cases. \"Ah! I do have a picture of me holding the prototype!\" Ben held up his phone and the two men stared at the small picture doubtfully. \"I could also show you the CAD drawings but I'm not giving out the specs to anyone at the moment. You understand.\" \n\n\"Do you understand that this device would give the States a significant military advantage over its foes in the event of a nuclear exchange?\" Hargrave exclaimed boldly. \n\nBen looked at the man incredulously. \"Do you understand that there wouldn't be any advantages left after a... did you really call it a nuclear exchange? Once nuclear weapons are used there won't be a human race to save.\" \n\n\"A limited exchange of nuclear weapons is entirely survivable!\" the Colonel argued. \n\nBen looked at Kendricks who looked embarrassed and angry but wouldn't look at either of them. Ben supposed the man had already stepped as far out on the branch as he was willing to go. Attempting to rein in his boss would be too far. \n\n\"If you truly believe that nuclear weapons could and should be used in a 'limited exchange' then I truly pray you are never promoted to a position which would allow you to try to make your fantasy come true. That's a Pandora's Box best left alone.\" There was an awkward silence as the Colonel scowled at Ben as his jaw muscles clenched. Ben gestured for them to head back upstairs and they did. Once they re-entered the living room Ben addressed them again. \n\n\"After your little disclosure downstairs I'm not sure if there is anything you have to say that I might be interested in listening to,\" Ben stated. \n\n\"Mr. Shepherd, as a US citizen who invented a device the US Army believes would give us a tactical advantage-\" \n\n\"Do they?\" Ben asked, interrupting the man's little speech. \n\n\"...does who?\" Hargrave stumbled, frustrated with the unfamiliar sensation of being questioned so boldly. \n\n\"Does the US Army truly believe a filter, a device I believe is best suited for protection in hazardous environments, would give them a tactical advantage? I mean, outside of your unrealistic expectation of limited mutual annihilation? Or is this just more of your own skewed opinion?\" Ben said with a frown. \n\n\"I AM the US Army!\" Hargrave barked angrily. \n\n\"No, no you're not.\" \n\nThe three men turned to see a grey haired flat top approaching with a grim look on his face. \n\n\"Sorry Ben, I couldn't stand to hear someone bad mouthing an organization I love.\" Jack said and Ben nodded. \n\n\"Who the hell are you?\" Hargrave growled. \n\n\"Master Sergeant Jack McGovern, US Army, retired.\" \n\nKendricks had a surprised expression on his face but he nodded to Jack which drew a scowl from his boss who turned to Ben. ",
        "\"Is this some kind of ambush?\" \n\n\"Absolutely not. Mr. McGovern is only here to visit his daughter who lives next door. He arrived early and she wasn't home so I invited him to wait here. How could it have been an ambush? I had no expectation of you arriving today either,\" Ben asked with a puzzled expression. \n\nScowling furiously Hargrave stepped closer to look up at Ben. \"I'm going to order that the filter remain a secret which means you will not be able to patent the device outside of the United States. I'm going to ensure the device remains in our control. You'll be hearing from me.\" \n\n\"I'll save you some trouble. I'll give you the name of my lawyer, Walter Greyson. You can deal with him. The less I speak with you the happier I'll be.\" \n\nThe Colonel spun on his heel to march towards the front door. \"Come on Kendricks!\" \n\n\"I'll be with you in a moment Colonel,\" the First Lieutenant said, drawing a murderous glare from his boss who stiffly left the room. \n\nWhen the door slammed Kendricks looked apologetically to Ben. \"The filter aside, we do have our own engineering forum and there are some issues that we would greatly welcome your input on. Would you be willing to do this?\" \n\n\"Sure!\" Ben said with a shrug. \n\n\"I'll have to send a tech over to set you up with military grade VPN and a security suite,\" Kendricks said. \n\n\"I, uh, already have that,\" Ben said and the man just looked at him blankly. \"I have a very talented friend who may be ex-military. He set up my laptop.\" \n\n\"Your ride just left,\" Jack said from where he stood looking out the picture window. \"Wait... one of the carriers is coming back around the loop.\" \n\n\"I should go. I'll get in touch with you as soon as I can and I'll try to smooth out the issue with the filter. We are still interested! Thank you, Mr. Shepherd!\" \n\n\"Ben.\" \n\nKendricks nodded with a smile and rushed off to slip his shoes on and left the house quickly. Ben walked over to the window to stand beside Jack as they watched the First Lieutenant climb into the back of the waiting personnel carrier. \n\n\"He's going to get his ass chewed by Hargrave all the way back to Washington,\" Jack sighed. \n\n\"Kendricks seems like a man who actually gets stuff done. He likely has the ear of people who matter,\" Ben suggested. \n\n\"Let's hope,\" Jack nodded. \n\n\"Thanks for the assist.\" \n\nJack looked at Ben with a smirk. \"Like you needed one! What did he tell you downstairs that made you brush him off?\" \n\n\"He claimed my filters would be a strategic advantage during a 'limited exchange of nuclear weapons' which would be survivable.\" \n\n\"Damn,\" Jack grunted with wide eyes. \"The man is unhinged. He probably runs the scenarios through his mind all day depicting himself as the hero in each one.\" \n\n\"You're not talking war games again, are you?\" \n\nThe men turned from the window and saw Lynda walking into the living room. Petite and lovely, Ben was once more amazed at how much Catherine looked like her mother only taller. \n\nJack smiled and shook his head. \"Not at all. We just had a visit from some members of our armed forces who were interested in one of Ben's inventions.\" \n\n\"Oh, is that what you do?\" she asked. \n\n\"I'm a mechanical engineer. I make stuff to solve engineering problems. The Army is interested in a filter I just designed for a uranium mining company in Melbourne, Australia.\" \n\n\"Do you travel a lot in your job?\" she asked as Tina, Lucy and Gretchen returned to the living room as well. \n\n\"No, I'm new to the whole travel thing. I've been to France and Costa Rica on vacation. I visited Milan, Italy to see Gabriella, she's the neighbor on my south side. I made a stopover in Dubai on my way to Australia where I visited the mining company in Melbourne and went to Sydney to... see a friend. I met Gretchen in Sydney and invited her to come stay with me when her husband died.\" \n\n\"Wait! You were in Paris with Cat when she shot that Kirian Rapava fellow?\" Jack suddenly exclaimed. \n\nBen looked at the shocked expression on the man's face. \"Uh, yes.\" \n\n\"And you were with her in Nice when she shot Rachid Shakir?\" Jack said, his agitation growing. \n\nBen nodded wondering where the man was going with this. \n\n\"She called me after each shooting and I talked her down. We spoke for a long time on those calls and she told me about a man she was seeing. You're that Ben aren't you! Geezus, I must be losing my edge if my brain missed that connection!\" \n\nLynda watched the big man nod to her husband then she looked to the women moving to the couch. She could tell, aside from the tall one, they acted like they were home. In Ben's home. She looked at her husband in confusion. \n\n\"The relationship situation is complicated. Please have a seat,\" Ben said with a sigh. \n\nJack and Lynda took the loveseat and focused their attention on Ben who filled them in on their daughter's relationship with him and how his relationship with so many women just... evolved. It wasn't his place to speak on it so he left out Catherine's relationship with Chanel. \n\nJack and Lynda both looked a little shell shocked when he was done. The man cleared his throat and looked to their host. \"Thank you for your honesty. I can't say I understand how this all works but I can see with my own eyes that it seems to quite well. This falls well outside of my own personal experience of falling in love with my high school sweetheart and being with her my whole life.\" \n\n\"That was the plan I originally had for myself too. Wendy, my ex, was a girl I was attracted to in high school and married after college. When she left me, my life... fell apart and lost all meaning. It was the love of Gabriella, Catherine, Trish and Tina that brought me back to living once more.\" \n\nLynda looked at him uncomfortably. \"Ben, I read the article in Peeps magazine. I'm ashamed to say I thought her story was true. I can see now it wasn't. Why is she saying these things about you?\" \n\n\"She needs money. Her lawyer says she is very ill and I believe it may be true. Her mother had a condition Wendy inherited. It's not a pleasant way to end your days.\" \n\n\"We do not know if Wendy is truly ill. Her lawyer is a very bad and dishonest man. He threatened Ben. Ben's lawyer is dealing with him,\" Tina blurted. \n\nBen looked to Tina and slowly nodded. He had to consider that possibility though his heart was telling him that it was true. \n\n\"Catherine's car just pulled into her driveway,\" Lucy said looking out the front window. \n\nBen smiled and dialed her cell number. \n\nShe picked up on the third ring. \"Hi Ben!\" she said happily. \n\n\"Hi Catherine! Your guests arrived early today so I invited them over to my place,\" he said. \n\n\"They're here?\" Cat squealed in Ben's ear. \n\n\"Yes! Come on over!\" Ben replied with a chuckle and heard the phone click as Catherine hung up immediately. \n\nHe looked at his phone in amused surprise. \"I guess she's on her way over.\" \n\nGretchen was looking at Ben nervously. She hadn't met Catherine yet. This was one of the women Ben originally fell in love with so meeting her made Gretchen very anxious. If this woman disapproved of her maybe Ben would send her away? \n\n\"Ben?\" Tina called to him and he looked her way. She directed his eyes to Gretchen who he saw was slipping into a panic once more. With a grateful nod to Tina, Ben stood and gestured for Gretchen to join him at the front door. She was immediately at his side and he put his arm around her as they left the living room. \n\n\"What's wrong?\" he asked quietly as they reached the door. No sign of Catherine yet. \n\n\"What if she doesn't like me?\" Gretchen squeaked out in her anxiety. \n\nBen turned and held Gretchen in his arms as she looked up at him with desperate eyes. \n\n\"Of course she will like you. I know Catherine. She is a wonderful person! Very loving! Why are you worried about that?\" \n\n\"If she doesn't like me maybe you'd send me away?\" Her voice was almost a whisper. \n\n\"No! That's not going to happen. Put that out of your mind right now!\" Ben growled and she clung tighter to him. Ben kissed her and she moaned quietly. \n\nThe doorbell rang, startling them both. Ben chuckled and Gretchen smiled at him feeling a little better. \n\nHe released her and opened the front door. Catherine rushed inside and gave Ben a huge hug and kiss which went on a little longer than expected. She pulled back with a satisfied smile on her lips. \n\n\"Welcome back Ben!\" she purred. \n\n\"It's good to be back, Catherine!\" he grinned. \"May I introduce you,\" he saw Chanel standing on his step and gestured for her to enter. \"Hi Chanel! May I introduce you both to Gretchen Hahn. I brought her home with me from Sydney.\" \n\nCatherine immediately pulled the woman into her arms to give her a warm hug. Gretchen was beginning to look a little overwhelmed and tears pooled in her eyes. Catherine gave her a compassionate look. \"I'm sorry. It's all a little bit too much too soon?\" \n\n\"No, I'm very happy to meet you and very relieved you are so nice!\" Gretchen managed to squeak out of her tight throat. \n\nChanel smiled broadly and gave Ben a quick hug before stepping past to hug Gretchen as well. \"Welcome to America! I'm Chanel, a recent immigrant myself. From France.\" \n\nGretchen smiled at the two women and they saw her begin to relax. \n\n\"My parents are in the living room?\" Catherine asked quietly. \n\n\"Yes, we just finished explaining my relationships to them. They are a little dazed,\" Ben replied equally quiet. \n\nCatherine smiled at Chanel who suddenly looked like she wanted to flee. Cat reached out and took her hand. \"No you don't. Come with me!\" \n\nBen watched this with curiosity. \n\nCatherine walked around the corner into the living room pulling Chanel with her. Ben and Gretchen followed, his arm once more around her to calm her in the room full of new people. \n\n\"DAD! MOM!\" Catherine squealed as she burst into a huge smile and ran into her parent's open arms. \n\nBen smiled at the happiness on the parent's faces. Catherine got hugs and kisses from her parents who also seemed a little overwhelmed. He guided Gretchen over to the couch where Lucy moved so Ben could seat Gretchen between them. Tina and Lucy both took one of Gretchen's hands to help calm her. She smiled at them. Ben went to stand with Chanel who was almost trembling with her own nervousness. \"You ok?\" Ben whispered and got a sharp nod which obviously meant no. He didn't press. \n\nCatherine was holding her parent's hands as she stood back to face them. \"Mom, Dad, I know this is all rather sudden but I'd like to introduce you to Chanel Babineaux, my fianc\u00e9.\" \n\nBen was rocked by the news but then he remembered that kiss she gave him at the door. Catherine still loved him. She wasn't letting him go. He sighed heavily and noticed Chanel watching him anxiously. \n\nHe smiled at her. \"It's wonderful news,\" Ben said gently to Chanel whose entire body seemed to relax. \n\n\"You're fianc\u00e9? What- what about Ben?\" Jack blurted. \n\n\"I love Ben! I just want to get married to Chanel as I love her too! Besides Ben is marrying Tina.\" Cat explained. \n\n\"Actually, I'm marrying Gretchen.\" Ben said awkwardly and felt everyone's eyes turning his way. \n\nJack shook his head to shut out all the noise. \"Getting back to you Cat, Chanel... wait, isn't she the cop from France?\" Jack asked, clearly confused. \n\n\"Why don't we all sit down first?\" Ben suggested and everyone moved to take a seat. Ben and Chanel carried in chairs from the dining room table for her and Cat. \n\nThe tall blonde leaned forward to speak. \"Yes, Chanel was the detective we met in Paris and Nice. I fell in love with her there.\" \n\n\"So... you're gay?\" Jack asked and Lynda slapped his arm. \"What? I'm just trying to understand. She told us she loved someone named Ben. Well here he is! Then she announces she's engaged to a woman... but she still loves Ben. My old brain needs to put a label on this to understand!\" \n\n\"The label is Love,\" Ben said. \n\nCatherine and Chanel looked at Ben with a twinkle in their eyes. Tina, Lucy and Gretchen were also looking at him the same way and he blushed a little under their gaze. \n\n\"Yes, Ben is completely right. It's just love. Wonderful, soul enriching love. I love Chanel with all my heart. I love Ben with all my heart. Gabriella clued me in to the fact that love isn't divided. It's added. I love her too! But I'm marrying Chanel.\" Catherine held her father's eyes. \"You were right about Ashraf. I greatly regret not listening to you about him but then if I had I never would have had three wonderful daughters who mean the world to me! So I had to have the terribly bad to get the incredibly good! Now that Ashraf is gone I was gifted with another chance to open my heart to someone. First Ben then Chanel. I didn't have your blessing for my first marriage and I understand and accept that. I regret your and my stubborn natures that prevented you from getting to know your grandchildren as they grew up. They are anxious to meet you now. They're coming home on the sixth for the wedding on the seventh. I would like very much if you could walk me down the aisle this time.\" \n\nJack was listening to his daughter carefully. Lynda was clinging tightly to his arm. He knew she'd always regretted his vehement refusal to step a foot through Catherine's front door while she was married to Ashraf. He... regretted it too. He still hated Ashraf but that hate had stolen so much from him. Now he could see that. He looked at Chanel and could not deny that the woman was a beauty. She looked back and he saw her strength too. She was a detective and a good one apparently... in France. \n\n\"Don't you live in France?\" he asked. \n\n\"There was nothing for me there once Catherine left,\" Chanel said and Jack heard Lynda sigh happily. So she was sold and he owed her so much. Jack looked at Ben and was surprised to see he looked happy as well. Jacks eyebrows went up as he sighed to himself. \"The world will leave an old fossil like me behind if I don't at least make an effort to keep up. I don't get how all this works but I would be honored to walk you down the aisle.\" \n\nCatherine squealed with joy and leapt across the space to hug her parents who were all smiles and joy. \n\nChanel turned to Ben nervously as he looked at her curiously. \"I have no family so I was hoping you might consider walking me down the aisle?\" \n\n\"Oh! Yes, I would be honored as well,\" Ben said in surprise. \n\n\"Thank you!\" Chanel said as she relaxed once more. \n\nCatherine finally returned to her chair and turned to Ben. \"You're not marrying Tina?\" \n\nBen shook his head and looked at the woman in question. \"No, she surprised me yet again with how strong her love is. When Lucy discovered she was pregnant with my child-\" \n\n\"WHAT?\" Cat gasped. \n\n\"Oh sorry. Yes, it's another miracle pregnancy.\" He glanced at the confusion on Catherine's parent's faces. \"I shouldn't be able to have children due to... an extremely low count,\" he explained. He returned to his story for Catherine. \n\n\"With Lucy also carrying my child, Tina said she didn't need to be married as I couldn't marry Lucy as well. She said the marriage would be better used by Gretchen who would be allowed to stay once we were married. Gretchen wants to have a baby too.\" The woman nodded. \n\n\"Ben, you live a very complicated life,\" Jack said. \n\nBen just nodded as he couldn't argue that point. \"If things could just calm down a little so I could just catch my breath that would be lovely.\" \n\nThe doorbell rang and Lucy jumped to her feet to answer it. She returned with a blush and a happy smile on her face as well as lipstick on her cheeks. Two beautiful redheads followed her into the living room touching up their lipstick. Ben stood and made the introductions. \n\nGretchen was wide eyed with shock at how beautiful the twins were and she was unable to tell them apart. How Ben did it was a complete mystery to her. \n\n\"These lovely ladies are going to take you shopping for some clothes,\" Ben said to her bringing her attention back to him. \n\n\"You aren't going too?\" she said a little anxiously. \n\n\"No, I trust Lisa and Lori implicitly. They'll take good care of you and will make sure you have a good selection of outfits. Casual as well as nicer stuff. Have fun and I'll see you later tonight.\" \n\nAs she still looked a little nervous he walked her to the door with the twins following. When they were out of sight of the others Ben pulled Gretchen close and looked into her eyes. \"Do you trust me?\" \n\nGretchen's eyes went wide as she nodded. \n\n\"Will you... follow my instructions?\" Ben said. \n\nShe nodded again. \n\n\"I will take care of you. Part of that is getting you clothes. Lisa and Lori will help you with that. Tina told you. They are mine. They will make sure you get clothes and will get you back to me.\" \n\n\"Am... am I yours too?\" Gretchen asked timidly. \n\nBen looked into her eyes, seeing the damage Rainor left behind. He really needed to get her in to see Dr. Granger. He was worried he was just making that damage worse but he didn't know how else to calm her. \n\nHe took her face between his hands and pulled her mouth to his and kissed her until her nervous trembling stopped. He pulled back and she rested against him as she caught her breath. \n\n\"I'm tingling so much!\" she whispered. \n\nHe snorted softly. \"Me too.\" He pulled back from Gretchen and she moved to put on her jacket and boots. \n\nBen pulled Lisa against his body with a tight grip on her hair. She gasped and instantly her eyes showed him he was giving her exactly what she wanted. He kissed her hard and she whimpered with need. \n\nHe ended the kiss and she looked at his mouth hungrily. \n\nLori was next and her soft mouth fit his perfectly and his passionate kiss drew quiet moans from her as well. When he pulled back she was gasping with need. \n\n\"Tomorrow night. Are you two available for a date?\" Ben asked, his voice rumbling with his own need. \n\n\"YES!\" they gasped. \n\n\"You'll make the arrangements?\" he asked and Lori nodded vigorously. \n\nBen held Gretchen's eyes. \"Until later.\" She gave him one of her dazzling smiles then stepped outside with the twins. He heard their happy giggles as he closed the door. He stood by the door as he waited for his heart rate to get back to normal. He was so fucking stiff in his pants. He didn't want to walk back into the living room sporting this obvious sign that he was acting like some kind of hormone raging teenager. He felt a gentle hand on his back and turned. Lucy was smiling up at him. \n\nShe reached up with a tissue and wiped the lipstick from his mouth. She eyed the cleanup she did with a critical eye then smiled. \"You're presentable again.\" They walked back into the living room, Ben shielded from view behind Lucy. He noticed everyone, except Tina, was on their feet. \n\n\"We're going out to dinner to celebrate. Would you like to join us?\" Catherine said with a smile. \n\n\"Thanks but I think I'll stay in tonight. I've had enough excitement for one day.\" Ben said, Tina and Lucy nodding in agreement. \n\n\"Thank you again for the use of your guest room and shower,\" Jack said holding his hand out. \n\nBen shook his hand then bent down to kiss Lynda's cheek. \"You are both welcome any time.\" \n\nJack went to get their suitcases then joined his wife, daughter, and future... daughter-in-law? He gave his head a shake. They said their goodbyes then Ben was alone with Tina and Lucy. \n\n\"So... how are you both feeling?\" Ben asked, looking them in the eye. He saw their excited smiles. \n\n\"We are feeling good,\" Tina said with an impish grin. Lucy nodded happily. \n\n\"I was thinking of taking a short nap... in the bedroom,\" Ben said, a small smile slipping onto his lips. \n\n\"That sounds like a good idea! I think we might join you!\" Lucy said with a grin. \n\n\"Get the crutches,\" Ben said to Lucy as he scooped Tina up in his arms and rushed down the hallway. The phone rang as they got into the bedroom. ",
        "Ben glared at the interrupting device. He gently laid Tina down on the mattress as Lucy picked up the phone. \n\n\"Hello?\" \n\nBen watched Lucy's smile slip away into a look of shame. \"I'm so sorry! We'll be right there.\" \n\n\"What happened? Who was that?\" Ben asked in concern. \n\n\"Daphne. We forgot to pick up Christopher!\" Lucy said with a guilty expression. \n\n\"Oh! I am a bad mother!\" Tina wailed. \n\n\"No you're not! We just got carried away and lost track of the time. I'll go get him. We'll have to postpone our 'nap' until later,\" Ben said as Tina looked up at him from the bed, her silky hair fanning out behind her. He paused to drink in that image and her pout turned into a smile as she saw his hungry look. \n\nA thrill ran through her seeing how much Ben wanted her. She still felt guilty but it was eased by Ben's words... and his need for her. \n\nHe suddenly dipped down over her and kissed her. She felt herself being carried away on a wave of his passion and she sighed happily when he pulled back looking at her lips. Ben pulled Lucy into his arms and kissed her deeply as he slowly lowered her to the bed next to Tina. \n\nWhen he released her lips she gasped and strained to keep his mouth on hers. Ben growled deep in his chest as he looked down on the two women making them tremble with delight. Then he spun and stalked out of the room. He got to the front door and pulled on his jacket and boots. He stepped outside and locked the door before running down his driveway and along the sidewalk towards Daphne's. \n\nAs he ran he glanced over at Gabriella's place and could see the lights were on in Daniel's and Miriam's rooms. Finishing up their homework probably. He had to call Daniel to ask about the game console. \n\nHe reached Daphne's and went inside. The woman came out with Christopher on her hip and a frown on her face. \n\n\"Sorry about that! It's been such a crazy day!\" Ben said as he helped the boy get his coat and boots on. \n\n\"Yes, I heard Lucy is pregnant too. And you have a new house guest?\" Daphne asked raising one eyebrow. \n\n\"Yes, I seem to collect them.\" Ben paused as he saw the unhappy expression flit across the woman's face. \"Is... is something wrong?\" \n\n\"No! No, it's fine.\" \n\n\"Daphne, this is your silent partner here. You can talk to me. Tell me what's wrong.\" \n\nShe looked at him with a pout and her bottom lip began to tremble. \"I'm lonely.\" \n\n\"Oh! I-\" \n\n\"No Ben, not for you. That would be too awkward for me. I just... I'm with the kids all day and I love that! I also love working with my daughters. They are a joy these days so keep up what you are doing but please don't tell me what it is. I need to go on a date but I never have the opportunity to meet anyone!\" \n\nChristopher was getting restless and Ben needed both hands to hold onto the wriggling boy. His phone took that moment to start ringing in his back pocket. He turned his butt to Daphne. \"Could you get that?\" \n\nShe frowned and pulled the phone out and showed him the screen. He saw it was Walter... his friend Walter who lost his wife two years ago and needed to move on. Ben smiled. \"Could you answer that for me? It's important.\" \n\nShe gave him an annoyed look but he just moved Christopher in his arms and pretended to eat the boy's ear making him giggle. \n\n\"Hello, Ben's line.\" \n\n\"Oh, uh, this is Walter Greyson, his lawyer. Could I speak with him?\" Walter said. \n\n\"His arms are full of wriggling and giggling child at the moment. I think you'll need to call him back.\" Daphne said and Ben shook his head. \"Hang on.\" \n\n\"Ask him what he needs,\" Ben whispered. \n\nDaphne looked at him with exasperation. \"Oh for Pete's sake Ben, give me the boy and take the phone!\" \n\nBen jumped back and hoisted Christopher up in the air where she couldn't reach him. The boy's shriek of joy forced a smile onto Daphne's face. She put the phone back to her ear. \"I'm sorry but Ben is the proverbial boy who never grew up! He's such an imp! He's asked me to ask you what you need.\" \n\nWalter laughed and Daphne smiled hearing his burst of happiness. \"Ok, if Ben trusts you then that's good enough for me. You can let him know I got a very angry call from a Colonel Hargrave who made a number of vague threats. Then I received a call from a man named Kendricks who assured me no action would be taken on the aforementioned threats. He said he will contact us in a week or so.\" \n\nDaphne delivered the message and Ben smiled at her. \"Tell Walter thanks very much and yes I will go out for coffee with you.\" She looked at Ben with a puzzled expression but he just pretended to poke her with Christopher who was giggling happily. She rolled her eyes. \"Ben says thank you very much...\" she looked back at Ben in exasperation but he was nodding at her to continue. \"...and yes I will go out for coffee with you.\" \n\nDaphne's eyes shot wide as she realized what Ben had just made her say to a complete stranger. Her face went beet red and she started to build up a head of steam. \n\n\"Could- could I get your name first, maybe?\" Walter said haltingly, shocked by her boldness. \n\nShe froze and looked at Ben in a panic. He rolled his hand to indicate she should keep talking. \n\n\"Daphne... Daphne McKellan.\" \n\n\"I'm Walter, oh I already said that.\" \n\n\"Would you like to go out for a coffee?\" Daphne asked, staring at Ben in shock at her own nerve. \n\n\"Yes... I think that would be nice,\" Walter said and she could hear his smile. \"Are- are you busy tonight?\" \n\n\"No, I was just closing up the daycare since my last parent was so late!\" Daphne said, giving Ben a stern look. \n\nWalter laughed again and she realized she liked hearing him do that. She wanted to hear it some more. \"There is a charming little coffee shop not far from here. They have delicious baked goods too!\" \n\n\"Sold! Tell me the address and I'll be there in thirty minutes.\" Walter chuckled. \n\nShe told him the details and they said their goodbyes. \n\n\"OH MY GOD! I said I'd be there in thirty minutes! What was I thinking?!?\" Daphne gasped. \n\nBen had Christopher on his hip and he plucked the phone from Daphne's fingers. \"You look gorgeous! You'll like Walter. He's very smart, well read, likes movies and he's a really nice man. Put on your black and grey knit sweater and some black leggings. Very chic! Showing up with baby spittle on your shoulder probably isn't the look you should go with on a first date,\" Ben teased. \n\n\"OH MY GOD! I'm going on a date!\" Daphne gasped. \n\n\"Not if you don't get moving! Have fun tonight!\" Ben said and headed out. He felt really good about introducing Daphne to Walter. He hoped it worked out. \n\nHe got inside and Tina was there waiting. \n\n\"MAMA!\" Christopher squealed and Tina threw her arms wide as the boy raced into them. She kissed his face as he gave her a kiss and began telling her about his day. He led her into the living room talking a mile a minute as Tina listened with a big smile on her face. \n\nBen felt fingers slip between his and he was being gently guided down the hall to the bedroom by Lucy. \n\nWhen the door closed Lucy looked up at Ben. \"Tina needed a little bonding time alone with her son. She told me to have some one on one time with you. If you're still interested.\" \n\nBen smiled and ran his finger along her jawline. Her eyes closed slightly as she enjoyed his touch. \n\n\"I can't get over how blessed I am,\" Ben said, looking at her in awe. \n\n\"My life is feeling incredibly blessed right now as well,\" she sighed as she stepped closer to wrap her arms around him. \n\nBen hugged her to his chest and kissed the top of her head. \n\n\"I feel so safe in your arms,\" she mumbled into his chest. \n\n\"Could we just snuggle in bed?\" he asked and she looked up at him happily and nodded. \n\nThey took their clothes off and slipped under the covers. Ben rested on his back with Lucy leaning up against his chest. She kissed his nipple and giggled when he gave her a hot look. \n\nThey relaxed for a while, just enjoying the feel of each other's bodies and content to be together. \n\n\"I'm trying to recall the night we made love and you became pregnant,\" Ben said softly as he looked into her loving eyes. \n\n\"I thought about that too and I think I figured it out. It had to be the night after you beat up that thug at the mall who was harassing Miriam's friend's mother. The sex that night was so incredibly hot!\" she sighed. \n\nHe thought back and remembered that was after a period where he couldn't reach an orgasm. He must have somehow increased his count? He wasn't sure but it was a miracle that this beautiful lady in his arms was having his baby. The love he felt for her swelled up in his heart and he had to kiss her. He lifted her up his body until his mouth could reach hers. His lips stroked across hers and she moaned softly. His kiss went from sensual to passionate as her soft mouth flamed his need for her. \n\nShe reached down and stroked his thickening cock until it felt like iron. \n\nHe pulled back from the kiss and she looked at him desperately. \n\n\"Ben, please, I need-\" \n\nShe wasn't able to finish her statement as he rolled her over on her back and pinned her to the bed with his body. He stroked his cock up and down across her pussy. \n\n\"Ohhhhh fuck! Ben! Fuck me!\" she pleaded. \n\nHe slid himself down and felt her hand slip between them to line him up with her pussy. He pressed forward and felt himself spreading her open. \n\n\"OOOH! FUCK! YES!\" Lucy gasped loudly and clung to him. He kissed her again and thrust into her body burying his cock deep within her. \n\nHe rocked side to side as she yelped and moaned from the intense sensations. He pulled back then pounded her pelvis with his, driving himself deep again and again. \n\n\"AAAHHHHH! OH GOD! I'm getting CLOSE!\" \n\nHe needed to accelerate his own orgasm so his hips began to move on their own in fast sharp strokes ending with a slap against Lucy's clit. \n\n\"AAHHH! AAAHHH!! AAAAHHHHHH!!\" Lucy wailed as slapping sounds filled the room. She was lost to the crashing waves of pleasure and Ben erupted inside her. He ground himself against her and she shook silently through her release. \n\nWhen they caught their breath Ben rolled off and she gasped from his withdrawal. \n\nThey lay side by side letting their heart rates return to normal. \n\n\"I like the way you snuggle Ben,\" she said with a wide smile. He grinned self-consciously. \n\nOnce they'd come down from their peaks, they got up to freshen up, brush their teeth and Tina joined them. She smiled impishly at them. \n\n\"Christopher is good?\" Ben asked. \n\n\"He plays so hard at the daycare! He fell asleep eating dinner. So I put him to bed. I am tired too,\" she said with a yawn which Lucy picked up. \n\nBen smiled at the ladies. \"I'll stay up to let Gretchen back in. I want to work on some renovation ideas for the house.\" \n\n\"Good night Ben!\" \n\nHe kissed them then slipped on a sweater and some track pants. He let himself out of the bedroom and went to do a little work in the living room. \n\nHe quickly lost himself in the task. \n\nBen was sitting in his chair working out a new floor plan for extending his house out over the foundation of his basement workshop. When he'd built the large room he'd excavated the back yard to extend the building eastward an additional twenty-eight feet. The foundation had been poured and to eliminate the need for support posts he'd welded in ten cross connected I-beams spanning the width of the room like ribs to support the poured concrete ceiling. The building permit office told him he didn't need so many but Ben felt more comfortable with over engineering for maximum strength and durability. Then he'd covered the entire extension with a waterproof membrane to direct water to the weeping tile and buried it under the back yard once more. \n\nHe was designing the extension for the ground floor that would be built out over his office. The current design had the master bedroom occupying the space at the far end with a new walk-in closet and master ensuite. He was going to have to upgrade the water heater, furnace, and air conditioning. \n\nHe heard the thump of a car door closing and laughter outside. He looked out the window and saw the ladies collecting their bags from the trunk of a taxi. Then the laughter approached his front door. He got up and opened the front door to see three happy ladies carrying a large number of shopping bags. He ushered them inside. \n\n\"So I see you were successful!\" Ben said with a smile. \n\n\"Yes! Gretchen is very easy to find clothes for as everything looks amazing on her!\" Lori gushed. \n\nThe woman in question was absolutely glowing with happiness. She was also exhausted. She tried to hide a massive yawn but this just caused the twins to yawn as well and giggling ensued. \n\n\"Shopping wore you out?\" Ben said with a grin. \n\n\"Power shopping, Ben! Totally different level of effort!\" Lisa scolded him playfully. \n\n\"Ah! Well, I'll let you recharge as you'll need that energy for tomorrow night.\" Ben said with a coy smile. \n\nThe twins grinned widely and squeezed themselves against his chest to get good night kisses. Ben's head was spinning when they finally stepped back and sorted through the bags to ensure they had their own. Lisa and Lori had picked up a few items for themselves as well. \n\n\"Good night Ben! Good night Gretchen! We had so much fun tonight! Thanks!\" \n\nOnce the twins were on their way home Ben locked up and turned to see Gretchen leaning up against the wall with a blissful smile on her face. \"So you had fun?\" \n\n\"Yes, Ben! I love Lisa and Lori! They are so much fun and such good shoppers!\" she gushed then yawned widely once more. \n\n\"Did you eat dinner?\" he asked. \n\n\"We grabbed something light with a drink then we hit the shops. So many clothing stores!\" She yawned again. \n\n\"Come on sleepy head! Let's put you to bed!\" He picked up the bulk of her shopping bags and led her down the hall to her room. He put all the bags on the floor at the end of the bed and turned to see her flopped down across it. He smiled and turned her on the bed until her head was on the pillow. Then he threw the blanket over her and she was out. He kissed her cheek and she smiled in her sleep. He moved the bags she'd dropped beside the bed to the end with the others then shut off the light as he slipped out of the room, closing her door. \n\nBen went back to his laptop, saved his floor plan, and shut the machine down to pack it away. \n\nHe went to his bedroom and heard the gentle breathing of Tina and Lucy. He got undressed and slipped under the covers between his two lovers. \n\nHis two pregnant lovers. \n\nThat thought kept him awake for a while. \n\nChapter 40 \n\nBen got a good workout in first thing and Tina made a wonderful breakfast with Lucy's help. The latter was feeling a little shaky but now they knew what it was and she knew she would feel better later. \n\nGretchen was struggling with her jet lag and Ben sent her back to bed with a kiss and a pat on the bum which earned him a smile and a hot look over her shoulder. \n\nAfter breakfast Ben tidied up and Lucy got prepared for school. Ben gave her a kiss and followed her outside with Christopher in his arms. He waved to Madison and Savannah who were waiting by the open van and met Ashley halfway to the daycare as she rushed back to her house. She stopped to get a hug and a quick kiss. \n\n\"My goodness! Look at that mop of hair!\" she exclaimed with a coy smile. \n\nBen chuckled. \"Yes, I've been meaning to get that looked after.\" \n\nKaren and Penny rushed up and Ben gave them hugs too. Blushing furiously, Ashley mouthed 'Call me' as she hustled off after the girls. Ben nodded and she treated him to a dazzling smile before she turned away. \n\nHe made his way into the daycare and slipped Christopher's coat and boots off. Lisa took them from Ben and the boy raced into the back room. They heard a squeak then Daphne came rushing out to the front. She pulled Ben into a tight hug. \n\nWhen she finally let go Ben smiled at her. \"So you had fun last night?\" \n\nDaphne's smile said it all and Lisa looked at her suspiciously. \n\n\"What were you up to last night?\" she asked her mother. \n\n\"I... was on a date!\" Daphne said with great satisfaction and Lisa's eyebrows went up. \n\n\"A date? With a man?\" Lisa gasped. \n\n\"No, with an iguana. Yes, a man!\" Daphne exclaimed, scowling at her daughter who had the good grace to look embarrassed for her question. The excited mother looked at Ben. \"Walter is such a lovely man! We talked for hours and it felt so good to talk with an adult about adult things!\" \n\n\"That's wonderful!\" Ben said with a grin. \n\n\"He's taking me out to dinner tonight! Oh! What will I wear?!?\" Daphne gasped. \n\n\"Consult with your fashion experts!\" Ben said nodding towards Lisa. \n\n\"Thank you so much Ben!\" Daphne gushed. \n\n\"Hey, I just let you answer my phone. You made the rest happen on your own. Enjoy!\" he said. \n\nDaphne smiled and went back into the playroom. Lori came out to stand next to her sister. \n\n\"Any ideas where you'd like to go tonight?\" he asked. \n\n\"Could we go back to Asylum? Karen and Penny want to join us with their boyfriends this time,\" Lisa asked. \n\n\"Sure! Are we having dinner first?\" \n\nLori pressed herself against Ben's chest and looked up at him. \"Could we go to that Thai-Asian fusion place, Golden Sun once more?\" \n\n\"Of course,\" he smiled and she popped up on her toes to kiss him quickly. She stepped back and Lisa gave him one too. \"What time do I pick you up?\" \n\n\"Eight,\" Lisa said. \n\n\"See you then!\" \n\nBen left the daycare and looked down the street. He saw Dominic's guys parked in front of 11 Ashburn Court and wondered how the bedroom reno was coming along. He walked over to the house and met Hector. \n\n\"Ben! How you doing?\" \n\n\"Good! How's it going with you?\" \n\n\"Really good! We're almost finished with this place. The trim is going in today. You have to see the backsplash we added to the kitchen! It was Jayden's idea and the ladies loved it!\" \n\nBen smiled and followed him inside. He took his boots off and they made their way to the kitchen first. \n\n\"Is that slate tile?\" Ben said checking out the floor. \n\nHector smiled and nodded. \n\n\"Very nice,\" Ben said then noticed the slate inlays in the backsplash. \"Oh that's really nice!\" \n\n\"I know, right? Very classy and like I said it really impressed the clients,\" Hector said with a grin. \n\n\"It was a tricky pain in the ass to do!\" Jayden said as he walked in the kitchen behind them. \n\nBen grinned with a nod and shook his hand. \"Yeah I can imagine but it looks spectacular! Nicely done!\" \n\nReal pride shone in Jayden's eyes as he surveyed his work. \"I had no idea how satisfying it would feel to customize a kitchen. Dominic told me he's going to let me do some more. Build my skills and maybe build a rep for the work. We took a bunch of pictures of this one and he's setting up a portfolio for me.\" \n\nBen smiled at Jayden. \"It's gorgeous!\" \n\n\"Thanks! Hey! I heard we're going to Asylum tonight!\" Jayden said excitedly. \n\n\"Yeah, it's a pretty amazing club!\" Ben agreed. \n\n\"Shit! My lady wants me to take her there but we couldn't get in last time. It's always so busy!\" Hector complained. \n\n\"Why don't you join us? One of the only good things that comes out of my damn fame is the ability to jump a queue,\" Ben grumbled. \n\n\"Really?\" Hector asked with wide eyes. \n\n\"Of course,\" Ben said. \n\n\"Take a cab and meet us there at...\" he looked at Jayden. \n\n\"10PM. I'll text you,\" Jayden said. \n\n\"That's awesome! I'll earn some major points with my lady for this!\" Hector grinned. \n\n\"That's what it's all about,\" Ben said with a serious expression which became a grin when the men nodded thoughtfully. \"I'd like to see the work on the mother-in-law suite.\" \n\nThe room was just down a short hall off the kitchen and Ben grinned widely when he saw the lovely new closet which had replaced the built-ins. The organizer made the space so much more efficient and useful. \"Brilliant! What did Rita think of the room?\" ",
        "\"She was very happy,\" Hector replied with a smile. \n\n\"Good, good!\" Ben said looking around. There was still a little trim work and painting left to do. \"Is Dominic working on his own place?\" he asked. \n\n\"Yeah, the boss-man and his lady are over there now with two of the crew working on the kitchen.\" Jayden answered. \n\n\"Well I just wanted to see how it was going. Excellent work, guys!\" Ben exclaimed. They nodded happily. \n\nBen turned to Hector after he slipped his boots on. \"Listen, we're going to Golden Sun for dinner before we go to the club. You and your significant other are welcome to join us.\" \n\n\"Thanks but Mariana is making my favorite dinner tonight. We'll definitely meet you at the club though!\" \n\n\"Great! See you tonight!\" Ben said stepping outside. He walked over to Dominic's place and rang the bell. A woman answered and smiled widely at Ben. \n\n\"You must be Ben Shepherd! I'm Sophia.\" \n\nDominic's wife was lovely. Dark brown hair falling to her shoulders in waves, she was maybe 5' 6\" with nicely padded curves. Hazel eyes and a naturally smiling mouth were currently expressing how happy she was in her new home. \n\nBen smiled at the woman and followed her into the foyer when she invited him in. She gave him a warm hug. \n\n\"I want to thank you so much for helping my Dominic buy this home! I understand you were in the process of buying it yourself,\" she said. Her voice echoed a little in the empty house. Ben guessed they were waiting until the renovations were done before they'd move in. \n\n\"Yeah but I was far happier with Dominic getting it. More good neighbors!\" Ben said earning him another hug. \n\n\"Come this way. Dominic is working on the kitchen with his team,\" she said leading the way. \n\nBen found the man in question with three of his team installing the new kitchen island. Ben noticed the backsplash was another custom design, this one using glass tile inlays. The glass tiles were also used as a border detail on the ceramic floor tiles. Ben thought the floors looked great as well. \n\n\"Hey there!\" Dominic boomed happily and came over to shake Ben's hand after he helped get the new stone countertop in place. He caught the direction of Ben's gaze and grinned. \"Yeah, Jayden's work! His designs are going to help us expand into the customizing market.\" \n\n\"That's great!\" \n\n\"How did he get started with this?\" Ben asked. \n\n\"He was looking at the new slate floor tiles on 11 Ashburn and out of the blue he just suggested adding slate accents in the backsplash. I had him mock it up and it looked amazing so I made him do all the custom cutting.\" He chuckled recalling how tired Jayden had been. \"He didn't like that part so much but the results speak for themselves. For my place he suggested we use the glass backsplash tiles as a border on the floor and damn if it doesn't make the room look like a million dollars!\" \n\n\"I love it!\" Sophia gushed. \n\n\"Well, I just dropped by to say hello and see how the renovations were coming along,\" Ben said. \n\n\"Did your doctor say it was ok to be poking around home renovations?\" Dominic teased. \n\nBen held up his hand to show he was no longer wearing the brace. \"All better!\" he said with a grin. \"I'll let you get back to it!\" \n\nBen made his way back to his house and found a large number of boxes piled by his garage door. He checked the labels and realized these were the pieces for the new panic room door. They'd finally arrived. He opened the garage door and began moving the boxes inside. \n\nTina opened the inside door and looked out. \"I thought I heard the garage door open. The delivery man did not want to carry the boxes up to the front door so I told him to leave them by the garage door. I was sure you would be back quickly. Was that alright?\" \n\n\"Yes, that's great. I'll take the boxes downstairs after I disassemble the old door and take it out. I have to give the milling shop a call to see if the new door is ready.\" \n\n\"Are you going to visit them?\" Tina asked with a grin. \n\nHe knew she enjoyed the visits there as they made a fuss over her. \"Sorry, not this time. They're going to have to deliver the new door in their truck.\" \n\nTina pouted and Ben grinned at her. She went back inside after giving him a quick smile. \n\nOnce all the parts were stacked neatly against the back wall of the garage Ben closed the garage door and went inside. He called and discovered his new panic room door was scheduled to be milled next week so he still had time. \n\nBen walked into the living room and saw Gretchen and Tina using their tablets. Tina was helping the Internet novice find her way around. He walked over and gave them both a kiss which earned him some happy smiles. \n\nSettling in his chair in the living room he opened his laptop and went back to designing the extension for the house. \n\n\"What are you working on now Ben?\" Tina asked. \n\nHe smiled and carried his laptop over to them. Gretchen moved over so he could sit between them. He showed them the new floorplan and their eyes opened wide in appreciation. \n\n\"The new master bedroom will be beautiful! I love the French doors leading out to the deck!\" Gretchen sighed. \n\n\"I think you will need a larger bed Ben.\" Tina said with a grin. \n\nHe looked over at her questioningly. \n\n\"Your current one only holds three people. There are four of us now,\" she explained. \n\n\"Oh! I thought Gretchen would prefer her own bedroom!\" he exclaimed and turned to look at the woman. \n\nShe was looking back at him with a hopeful look in her eye. \"You don't want a room of your own?\" he asked. She shook her head. \"Oh! Well... I'd- I'd better take another look at my floor plan then.\" \n\nHe stood up and went back to his chair. \n\nGretchen moved back beside Tina and quietly thanked her. Tina just smiled and nodded. \n\n\"Ben? Are you going to be home for dinner tonight?\" Tina asked. \n\n\"Hmm? Oh, no sorry. I'm going out with the twins, Karen, Penny, Jayden, and Frank. I finally get to meet my doppelganger,\" he replied. \n\nTina grinned. \"An overnight date?\" she asked. \n\nBen paused. \"I- I'm not sure.\" \n\nTina looked to her tablet and sent a quick text to the twins. \"Yes, you should bring your overnight bag.\" \n\nBen snorted and shook his head at Tina's smile. \"Once you've had our baby I'm taking you out dancing!\" \n\nTina's smile flashed brilliantly across the room. He looked to Gretchen. \"I'll take you out once your arm heals.\" She gave him a happy smile too. \n\nBen turned back to his laptop. He had designing to do. He was going to need one hell of a large walk-in closet! \n\nAs Ben parked his truck in the lot across the street from Asylum he sighed with contentment. His stomach was pleasantly full from a good meal, he'd enjoyed his dinner with his daughters and their dates (Frank did remind him of a younger version of himself), and the twins looked breathtakingly beautiful tonight. Under their coats Lisa and Lori were wearing body hugging dresses of red and black but Lisa's dress was red with black accents and Lori's was black with red accents. To finish the look, they each had one red and one black four-inch heeled pump. Their manes of red hair were teased up and Ben wanted to nibble his lips down the sides of those long smooth necks. Their eyes twinkled with joy at the hungry looks he was sending their way. \n\nKaren and Penny had their party dresses on making Jayden and Frank grin widely. Reminded of their state at the end of their previous outing the girls were behaving tonight and had only one drink with dinner. Jayden and Frank stuck with a single beer each. \n\nThey left Ben's truck and began walking towards the club. As Ben and the twins had... plans for after the club the others would be taking a cab home. \n\nBen looked up at the windows of the factory conversion. Like the last time they were here the lightshow even from outside was dazzling. \n\nEveryone met in front of the club and they heard someone calling out Ben's name. They turned and spotted Hector and a petite woman with a very large head of hair approaching. \n\n\"Hey Hector- Oh. My. God!\" Ben paused with a wide grin as he took in the man's freshly shaven upper lip. He looked so different. Better! Younger yet more mature at the same time. \n\n\"Yeah yeah, don't rub it in!\" Hector said with a smirk. \n\n\"No, it looks really good!\" Ben grinned then turned to the woman who was staring up at him in awe. \"You must be the reason for Hector's sudden appreciation of class and style.\" \n\nThe woman seemed at a loss for what to say so Hector stepped in. \"This is the love of my life, Mariana Torres.\" \n\nBen took the woman's tiny hand in his gently and shook it. \"Delightful to meet you, Mariana!\" \n\n\"Th-thank you!\" she stuttered. \n\nBen made the introductions and her eyes were wide by the end when she saw Ben was dating twins. \n\n\"It's cold out here. Let's-\" \n\n\"Mr. Shepherd!\" \n\nBen turned to see a man with an earpiece hustling over to their group. He struggled to recall the man's name. Ah! \"Damien! How are you! And please call me Ben.\" \n\nThe man's face lit up with a thousand watt smile when he saw Ben remembered him. \"I'm doing very well! You've come to grace our club once more?\" \n\n\"Indeed I have and I've brought along my friends,\" Ben said with a nod towards Hector and Mariana who looked star struck at Ben's treatment. \n\n\"Right this way then!\" Damien smiled and led them back to the front doors. The two men guarding the door nodded to Damien and held the doors open for the group. \n\nThey made a quick stop at the coat check then Damien handed them off to their personal server, Mandy, who brought the group to their table in the reserved section. Hector and Mariana were delighted and took seats smiling at Ben as the others took theirs. The server handed Ben the menu for the bottle service options. Ben recalled the package they purchased last time and asked the others if that would be satisfactory tonight. They nodded happily. He gestured for Hector to put his wallet away and the man grinned at him. \n\nBen was once more fascinated by how they engineered the sound baffling system to allow the music to be so strong on the dancefloor but muted sufficiently in the seating area for conversation. He could still hear the music but it wasn't overpowering here. \n\nThe server left to get their initial drinks as a tall slim man approached the table. \n\nBen smiled and stood to shake the man's hand. \"Stephane! I said I'd come back!\" \n\n\"Ben! So delighted you did! I hear you just returned from rescuing young women in Australia!\" the man said with a delighted grin. \n\nBen glanced to the others at his table and saw they were all looking at him in surprise. He sighed. \"Uh yeah, I did find one who needed a little help.\" \n\n\"It's wonderful that you are keeping chivalry alive!\" Stephane gushed. \n\n\"Please, I'm just doing what needs to be done because I can,\" Ben said humbly. \n\nThe man's smile couldn't get any wider. \"Well I hope you have a wonderful time tonight at our club! Will you be visiting the Steam Room?\" \n\nBen caught the excited looks on Karen's and Penny's faces and grinned at them. \"Yes, some of my group didn't get a chance to enjoy the experience last time so I believe we will. My treat.\" The girls squealed with joy and the twins looked at Ben with heat in their eyes. He suddenly recalled their activities on their previous visit and his face flushed. \n\n\"Excellent! I'll let them know. Have a wonderful time and welcome back to the Asylum!\" Stephane said as he moved away. Ben gave him a nod and smile. \n\n\"What's this about rescuing a woman in Australia?\" Hector asked as his lady stared at Ben excitedly. \n\nBen just shrugged dismissively. \"I just met a young woman who I discovered later had run away from home and had been pressed into working at a strip club. All I did was bring her with me to Sydney to get her home.\" \n\n\"You met her in a strip club?\" Hector's eyebrows went up as he couldn't see Ben going to one. \n\n\"Yeah, the engineering team I'd gone to Melbourne to work with wanted to celebrate and took me out to dinner. Unfortunately the place turned out to be a seedy strip club. The guy running it was a real sleazebag. The food was good but the place itself was horrible. A number of the women had been forced into the business apparently,\" Ben grumbled. \n\n\"And this sleazebag just let you take this young woman with you?\" Hector asked with a raised eyebrow. \n\n\"Well... I can be very convincing when I need to be,\" Ben said with a small smile and a raised eyebrow as he squeezed his right fist with his left. \n\n\"Yeah baby! That's what I'm talkin' about!\" Hector hooted as he high fived Jayden who was grinning widely as well. Ben just shook his head with a smile. \n\nMandy returned with the drinks and Ben's spring water was there too. A cheer went up when they saw the shots. Everyone raised a toast and slammed back their drinks. Ben smiled and shook his head as Karen and Penny gasped at the burning sensation. Frank and Jayden were trying to look cool but their eyes were watering a little too. \n\n\"Shall we dance?\" Ben asked and got cheers again. \n\nThey made their way out onto the dancefloor and let the beat inside to move their bodies. Frank moved a little awkwardly at first but soon loosened up. \n\nThe music was so good they stayed on the dancefloor for almost an hour before they went back to the table for their second round of shots. \n\n\"Ben, would it be ok for us to throw a Halloween party at our place?\" Penny asked hopefully. \n\n\"A costume party!\" Karen added excitedly. \n\nThe twins picked up that excitement and begged Ben to say yes. He smiled at them then looked back at Penny. \"Who's invited to the party?\" \n\n\"Everyone!\" Karen cheered. \n\nJayden took Karen's hand in his. \"Maybe we should limit the first party to a manageable number to keep the expense down and make the clean-up reasonable.\" \n\nBen was pleased to hear Jayden's level headedness balancing out Karen's enthusiasm. They were a good match. Karen pouted but Jayden just kissed her and she smiled at him. \n\n\"I'm fine if you want to invite the neighbors and Dominic's crew and a few friends from school. We'll have to get decorations, food, and drinks for everyone. Determine how many people are going to be there and we'll order accordingly. Are you planning party games and dancing?\" \n\n\"Party games?\" Jayden snorted. \n\nBen looked at the twins who were smiling back at him. \"Fine! I don't throw many parties! I'll leave the entertainment up to you youngsters!\" \n\n\"Mr. Shepherd-\" Frank began. \n\n\"Frank! Please, call me Ben! I feel old enough as it is!\" he reminded him once more. \n\nThe young man ducked his head and gave him a guilty smile for forgetting once more. \"Sorry... Ben. What's so special about this Steam Room?\" \n\n\"Oh! That's just something you'll have to discover for yourself,\" Ben said shaking his head with a smile. \n\n\"Can we go now?\" Karen asked with wide eyes. \n\nBen looked at the others and saw everyone was pretty excited about going. \"Let's do it!\" Karen and Penny rushed off with Jayden and Frank in hot pursuit. Hector and Mariana rushed after them. Ben grinned and stood to follow with the twins at his sides. They stopped a moment to let Mandy know they'd be back. \n\nThe girls and their dates made their way around the dance floor towards the specialty room and passed another section of tables. They saw four men sitting at one watching them approach. They'd obviously had a few drinks. \n\n\"Would you look at the fuckin' tits on those bitches!\" one brayed to his buddies who were leering at Karen and Penny. A fourth man on the far side of the table was silent. He was much larger than his friends and watched the ladies with cold, hungry eyes. He slammed his drink back and licked his lips as they passed. \n\nThe girls instinctively reacted to the threat and reached for each other's hands. Jayden bristled and Frank watched the men with a scowl. Hector caught up with his friends and kept the group moving. \n\nAfter they passed the big man stood and began to prowl after them. His companions grinned as they fell in behind him. \n\nBen and the twins were bringing up the rear and missed the interchange as he and the twins were watching the lightshow on the dance floor. When they reached the entrance for the Steam Room the others were already inside. Ben paid for the group and waved to the twins as he carried his little bag containing his white swimsuit and wrist band. He found a locker inside and quickly changed into the skimpy swimsuit. Sighing, he stuffed his clothes into the locker, locked it, and put the wrist band on. He pushed the door to step out into the dark and steamy atmosphere of the next room. His band vibrated and as he did last time he looked down at it. \n\nThis motion saved him from the full impact of the punch thrown at his face. The fist struck his forehead and he slammed back against the wall. \n\nHe looked up in time to see his assailant throw a punch with his left fist. Ben took the hit on his arm then grabbed the wrist and yanked him forward to drive his knee into the punk's chest with a deep thump. The man crumpled as the shock knocked the wind from his lungs. Ben stomped on his ankle to keep him down and heard the sharp snap of bones breaking. His assailant tried to scream but had no breath. In his street clothes he was very difficult to see in the dim room. \n\nBen looked around and spotted someone lying on his back on the floor. He rushed over and knelt down and saw it was Jayden. He was breathing but he was out cold. He'd probably been taken out by the man Ben put down. It was too dark to see any injuries. \n\nBen stood to move forward and dimly saw Frank holding his own against another man in the distance. They were in a grapple but Frank managed to land a few heavy punches to the man's torso. Frank looked like he had things in hand until a large man lunged in from the shadows to hammer his jaw. Frank went down hard but the big man just turned and slipped back into the shadows. The man who Frank had almost taken out kicked weakly at Frank until Ben grabbed his hair, yanked him backwards and slammed his head against the floor. He went still. Frank was moaning so he was coming around. Ben moved forward to follow the big man. \n\nIn the dim blue lighting Ben saw Hector trading blows with a third man. Ben knew the large one was just waiting for an opportunity to strike. \n\nThen he heard Lisa scream. \n\nIt wasn't fear. It was rage! \n\nBen rushed towards the sound and saw Lisa and Lori standing between the big thug and his daughters who were huddled together against the wall trying to cover their exposed breasts with their arms. Lisa's lip was split and none of the women were wearing their bikini tops. Several ripped pieces of white fabric were scattered on the floor at their feet. The man was touching his cheek and Ben saw something dark on his fingers when he pulled them away. Roaring in anger the man lunged forward and backhanded Lisa, knocking her down. Lori was immediately on him, clawing at his face. Ben was almost on them when Lori came sailing through the air at him. She slammed into his chest and he carried her down onto the floor protecting her with his body. She was dazed but looked ok. \n\nAgony stabbed through Ben's side as he was kicked in the ribs. He rolled as best he could and scrambled to his feet, blocking another kick with his forearm, catching a punch with his shoulder and taking a glancing blow off his temple. The man was incredibly strong and his fists felt like hammers. The last blow dazed him and he lunged forward to grapple with his attacker. \n\nCrooked white teeth gleamed in the dark as the man stared him in the eye, grinning with a mad hatred. He spat in Ben's face and delivered a heavy blow to Ben's ribs causing him to suck in his breath. \n\nThe stench of whisky poured over Ben. \n\nTwo more punches landed as Ben struggled to clear his head. ",
        "\"The bitch is mine.\" \n\nThe words echoed in Ben's head, getting louder and louder until it was all he heard. He was unaware that the words had come from inside. \n\nDark. Hot. Big fists hitting him again and again. The stench of stale cigarettes and whisky filling his senses. He glanced over the shoulder of the man he fought to see the crumpled body of... \n\n\"MARGARET!! NNNNNOOOOOO!!\" Ben screamed and slammed his right fist against the ribcage of the man before him. Bones cracked. \n\n\"RRRRAAAAAAA!! Ben roared as his left crashed into the other side with a deep pop sound. The man's smile slipped from his face then exploded in a spray of blood and spit as Ben hammered his jaw from the right then the left in quick succession. The bones snapped out of their sockets as his jaw hung loose. \n\n\"BASTARD!\" Ben surged forward as the man stumbled back and Ben's next punch landed directly in the center of his face snapping his head back, destroying his nose and cracking the nearby orbital bones. He began to fall backwards, limp as a rag doll. \n\nBen managed to hit him two more times on the way down in his exploding rage and leapt on him as the heavy body slammed to the floor. He raised his fists clenched together to deliver the final blow. \n\nTwo soft bodies hit him from the side, carrying him off the man he had to kill. He was tangled in the soft limbs of the... he needed... Margaret! Was she holding him? His mind spun and took him down into the dark. \n\nChapter 41 \n\nBen woke up in a hospital bed. \n\nHis ribs hurt. \n\nHis arms hurt. \n\nHis hands hurt. \n\nHis head hurt. \n\nHe tried to lift his hands to his head and discovered he was strapped down to the bed. He flashed back to the previous time he was tied down and his body jolted violently causing the bed's frame to clang in complaint. \n\nThe door opened and a police officer looked inside at him. He looked back at the man in surprise. The door closed and moments later the door opened to admit Dr. Granger. \n\n\"Ben, how are you doing?\" \n\n\"How did I get here?\" he asked. \n\n\"What do you remember?\" she asked and he frowned at her in annoyance. \n\n\"I- I went out to dinner with Lisa and Lori, Karen, Penny and their... dates.\" His memory was playing tricks with him. He saw a flash of Jayden and Frank lying on the floor. \n\n\"Then what did you do?\" she asked. \n\nHe looked at her blankly then he smiled. \"We went to the club! Right! We went danc-\" \n\n\"Ben? Ben!\" \n\n\"Sorry, what? You know, I'm kind of tired. Maybe I should sleep,\" he said uneasily. \n\n\"Sure, in a minute Ben. What happened next?\" \n\nBen looked at Dr. Granger as he tried to put his scrambled memories together. Finally he just shook his head. Nothing made sense. \n\n\"OK Ben you can rest now. I'll speak to you in the morning.\" \n\n\"Why am I tied down? Can you take these off?\" \n\nShe looked at him sympathetically. \"Sorry, not tonight. You're safe. We'll talk in the morning. OK?\" \n\nHe nodded slowly then closed his eyes. He let the fatigue take him away from the painful memories. \n\nDr. Granger walked back out into the hall and up to the officers who followed him to the hospital. \"I'm sorry, Mr. Shepherd can't remember the fight at this moment and has fallen asleep once more.\" \n\n\"From the extensive bruising on his face it looked like he was struck in the head several times. Does he have brain trauma?\" one of the policemen asked. \n\nDr. Granger smiled at the man's amateur diagnosis. \"No, the cat scan showed no swelling or any damage worse than bruising. His ribs are badly bruised, he has a large assortment of other bruises on his body, his knuckles are cut, he aggravated a previous injury to one knuckle, but other than that he has no serious injuries. Is he being charged with anything?\" the doctor asked. \n\n\"Did you see the man he was beating on?\" the first officer asked. \"He's a mess! He was in surgery the last we saw. His face looks like it was disassembled!\" \n\n\"I understand Ben was attacked first and was defending the friends he was with,\" Granger expressed. \n\n\"That's true but there's self-defence then there's what he did to that man,\" the cop insisted. \n\n\"So you're questioning the severity of his response to the danger he and his friends were in due to this man and his gang's unprovoked attack,\" Dr. Granger said looking the men in the eye. \"Do you realize two of Ben's friends are suffering from concussions? Ben himself took far more hits than any of the others and by the strongest of the attackers. These men were attempting to sexually assault the women in the group. Ben and his friends went to the club to dance and ended up fighting for their lives. I think there is plenty of evidence to suggest his response to the threat was not unreasonable.\" \n\n\"Aside from the one whose face was destroyed, a second man is in a coma from a fractured skull. What if he doesn't come out of his coma?\" the second officer pushed. \n\n\"They were the ones responsible for their actions and the repercussions of them are on them as well,\" the doctor insisted. \n\nThe two officers looked at each other and nodded slowly with a shrug. They'd confirmed the four men had previous records, plenty of instances of assault, disorderly conduct, public drunkenness, and a history of violence. The big one with the destroyed face was actually on probation for sexual assault. If the doctor wasn't going to back their charges they had no interest in taking it to court. They thanked her and made their way to the elevators. \n\nOnce they left Dr. Granger let out a breath and leaned against the wall to stop her shaking. Then she pushed off and made her way to the elevator to go down to the ground floor and walked down the hall to a large waiting area. She took a deep breath then entered the crowded room. Faces turned in her direction. So many. \n\n\"He's asleep. Physically, he's fine. Just bruises. A lot of them. His ribs are going to hurt for a while.\" She braced herself for the next part. \"Mentally, the story isn't as good. Ben's childhood trauma has resurfaced. It's blocking his current memories. I'm going to have to admit him for treatment.\" She waited for the protests, the angry comments but the room was largely silent. \n\nThe small Korean woman began to cry and the tattooed brunette held her close with her own tears flowing down her face. A tall, lovely brunette sitting next to them, who might be the woman Ben brought from Australia, looked utterly lost. Ben's daughters were holding each other as they cried. Standing next to them the white blond woman was clinging to a gorgeous brunette who was comforting her. Hannah was sitting with the redhead woman Dr. Granger was most afraid of as she was the one who'd almost attacked her before. Today the redhead was just leaning against Hanna's shoulder, a look of despair on her face. She looked up suddenly. \n\n\"You don't have him in the psyche ward do you?\" \n\n\"No, no. He's upstairs on the sixth floor in a regular ward. Lots of nurses and doctors around.\" Dr. Granger assured her and relaxed when the redhead nodded and looked away. \n\nThe door opened behind the doctor and a young black man with a swollen cheek stepped inside. One of Ben's daughters, the blond one, rushed forward to take the young man in her arms. They hugged as the man whispered how sorry he was for not being there for her. She pushed him back and glared in his open eye. \"You are not to blame for this!\" the girl scolded her boyfriend who smiled at the fierce look on her face. \n\n\"How is Frank?\" the other daughter asked the young man. \n\n\"I think he's ok. He may have a mild concussion and he's definitely got some bruises. Hector and Mariana are with him. Come on, let's go see him.\" The three left the room. \n\nDr. Granger saw the small Korean and the tattooed woman were holding the hands of the pretty brunette who wasn't looking so lost anymore. She was giving them a fragile smile. \n\n\"Hannah, could I speak with you?\" Dr. Granger said and the hospital administrator nodded. She rubbed the redhead's back then stood to follow the doctor out into the hall. \n\n\"I'm going to begin Ben's hypnotherapy sessions tomorrow. Before his memories have a chance to submerge once more. I'm going to keep him in the hospital for the week and I'm going to use an intensive session schedule to free the memories. We have to clear this trauma before it hides away again,\" Dr. Granger said looking her boss in the eye. \n\nHannah understood what the doctor was telling her. Ben was in for a very rough week. She was going to have to keep the others away until the doctor was done. \n\n\"I can't say what I'm going to find in Ben's psyche or what changes may happen to his personality after freeing him of this trauma. I just know he can't continue as he currently is. He's becoming too dangerous.\" She stepped closer to Hannah to speak quietly. \"The man Ben fought tonight isn't going to come out of his coma. Dr. Gillaume let me know the man's brain wave activity is minimal. The police were going to charge Ben but I managed to convince them his response to the threat to himself and his friends made his actions justifiable. I pray no one pushes on this.\" She looked worried. Hannah pulled her into a hug. \n\n\"Thank you!\" she whispered fiercely then released the woman. \n\nWith a tight nod, the doctor left. \n\nSighing, Hannah walked back into the waiting room. Eyes looked up at her. \"Ben's going to have to stay at the hospital for a week. We have to deal with his trauma now while it's resurfaced. It's not going to be easy for Ben to get through this. The best way to help him is by giving the doctor exclusive access to him over that week. You should all go home. I'll keep you in the loop as I get reports from Dr. Granger.\" \n\n\"I have to see the twins!\" Trish said, surging to her feet. \n\nHannah nodded and looked to Catherine's fianc\u00e9 who seemed to be the least traumatized person in the room. \"Can you get everyone heading home?\" she asked and got a nod in return. \n\nHannah took Trish's arm and walked with her to the ER where they found Lisa and Lori speaking to a police officer giving their statement. Lisa had a bruise on the left side of her face and a split lip but Lori looked uninjured. Hannah listened in nervously but the ladies made no mention of Ben's attempt to kill his attacker. They ended the story with Ben knocking him unconscious and them rushing to him as he passed out as well. \n\nApparently, Mariana had managed to escape and called the police. She was in the next room clinging to a bruised but happy Hector who was being interviewed by another officer. He was giving the same story the twins gave from his point of reference, when he'd been standing over the man he'd taken out. \n\nHannah sighed with relief. She left Trish waiting outside the curtain of the twin's cubicle and made her way over to Jayden and Ben's daughters who were standing next to the bed Frank was sitting up in. \n\n\"How are you doing Frank?\" Hannah asked. \n\nThe young man was holding Penny's hand and smiling at her. \"I'm doing ok. My head is ringing a little. The big guy sucker punched me. He hits really hard!\" Penny leaned in and kissed his temple making him smile again. \n\nHannah smiled at him. \"Did you give your statements to the police?\" she asked the group. \n\n\"Yes, we spoke with them at the club. We were the first ones to be interviewed,\" Karen said. \n\n\"I was hit the moment I walked out of the change room so I didn't see anything,\" Jayden said, wincing. \n\n\"I was attacked a short distance from the change room and almost had the guy when I got hit. When I came to the guy I fought was on his back, out like a light. The room was spinning and I threw up,\" Frank said quietly. \n\nPenny picked up the story from there. \"Hector was attacked and managed to get Mariana out the exit to the next room before dealing with his opponent. That's when the big guy showed up and ripped our bikini tops off. He trapped us against the wall and was moving closer when Lisa leapt on his back and clawed his face. He spun and tossed her off but she managed to land on her feet. He lunged forward and ripped her and Lori's tops off and he leered at them as he moved closer. Then he noticed his face was bleeding. He got really scary after that and attacked Lisa. Lori jumped on him then Ben arrived.\" \n\nThey all shared a smile as they remembered the relief they felt when they saw him. Karen's smile fell away as she recalled the beating Ben took. \"The man was so strong and he kept hitting Ben again and again! I thought Ben was going to fall but he suddenly started hitting back. So hard! I swear I could hear bones breaking!\" She shivered with a little thrill. \n\n\"Can we see him?\" Penny asked. \n\n\"Ben's going to be staying in the hospital for a little while so Dr. Granger can work out some things with him. He won't be having any visitors for at least a week,\" Hannah replied gently. Faces fell. \n\n\"Is he ok?\" Jayden asked. \n\nHannah smiled at the young man. \"He will be but we're all going to have to be patient.\" \n\nThey nodded sadly to her and she moved back to the twins. The officer was gone and Trish was speaking quietly with the two young ladies, likely filling them in on Ben's condition. \n\nLori moved closer to speak quietly to Hannah. \"Who is Margaret?\" she asked. \n\nHannah felt a jolt run through her body. So he'd been reliving the experience again. She'd have to inform Dr. Granger about this. She was grateful the twins hadn't shared this with the police. \"Someone Ben knew a long, long time ago. Someone who meant a lot to him. Her death was very traumatic for him,\" she said equally quiet. The twins and Trish stared at her expectantly. \"I'm sorry. I can't say more and I shouldn't have even shared that much.\" She looked around for ears listening in. \n\nTrish suddenly stood and walked to stand directly in front of Hannah. She was trembling with impotent rage. \n\n\"I'm sorry,\" Hannah whispered. \n\nTrish wrapped her arms around her friend and the tears burst forth. Hannah wrapped her own arms around Trish and held her tight as a few tears of her own slid silently down her cheeks. The twins held hands as they watched them sharing their grief. \n\nWhen Trish seemed to be relaxed Lori made a noise to catch their attention. \"Can we go home? We have work in the morning.\" \n\nTrish nodded. \"I'll take you home.\" \n\nHannah squeezed Trish's hand and watched her leave the room with the two lovely women. \n\nShe checked on Ben's daughters and Jayden once more and suggested they head home as well. Frank was staying in overnight for observation. Penny gave him a kiss then the three moved out of the ER to catch a cab home. \n\nHannah checked on the thug with a badly broken ankle. He was shackled to the bed and an officer was guarding him. Two of his buddies were in surgery and the third, the one Hector beat unconscious, had been taken to the precinct. She looked at the cop. \"Did they say what the hell they were thinking trying to rape those women?\" \n\nThe cop just frowned and shook his head in disgust. \n\n\"Hey! I didn't rape no one!\" the man in the bed growled. \n\n\"No? You seemed to be preparing to,\" Hannah retorted. \n\n\"Nah, Pete just wanted to have a little fun with the bitches. You know, feel them up a little! They had huge titties! Pete likes big ones like that! If they liked it maybe they'd do something nice for Pete, ya know what I mean?\" he said with a grin. \n\n\"What if they didn't like it?\" Hannah asked and the man just shrugged. \n\n\"The ladies were with their boyfriends-\" \n\n\"Just some punks! They ain't got nothing on us!\" the man growled. \n\n\"Nothing except girlfriends apparently. Oh, and jobs, respect, and most importantly their freedom,\" Hannah pointed out. \n\n\"We got jobs! Good payin' ones too! Unionized! We're cargo handlers at the airport!\" he bragged. \n\n\"Yet you go to clubs to beat up the patrons and sexually assault their dates?\" Hannah asked in puzzlement. \n\n\"Hey! We was just havin' some fun! Blowin' off a little steam! Besides, bitches who look like that want it! That's why they get their tits all inflated like that!\" he growled. \n\n\"Those two ladies were abducted as young teens overseas and their captor forced them to endure the operations to turn them into what you see today. They had no choice in the matter. That aside you're a fucking moron if you believe anyone wants to be sexually assaulted. I sincerely hope you discover that personally in prison,\" Hannah growled and walked away after nodding to the smiling officer. \n\nHannah walked back to the waiting room but saw everyone had left. She nodded and made her way back to her office. She locked her door, sat at her desk, and pulled a box of tissues from the bottom drawer. \n\nAlone, finally, she released her tight control and her tears burst forth. She sobbed as her heart ached for Ben. \n\nChapter 42 \n\nBen's bed was tilted up so he could easily see Dr. Granger as she sat in the chair next to his bed. She had a folder on her lap. \n\n\"How are you feeling this morning?\" she asked. \n\nHe watched her as he shifted a little to get more comfortable. His restraints, a band across his chest and thighs, wrists and ankles secured to the bed meant he had little freedom to get comfortable in. \"I would feel better if I wasn't strapped to my bed.\" \n\n\"We'll take care of those once we're sure you are safe,\" she said gently. \n\n\"Safe for others or from myself?\" he asked and she just smiled at him. \n\n\"This morning we will begin the hypnotherapy sessions we spoke of earlier. We can no longer wait for a 'good time' to schedule them. Life made other plans but I'm confident we will be able to help you.\" \n\nDread filled Ben's stomach. He recalled their previous attempt and how disturbing the sessions had been. He remembered the horrible nightmares he'd had each night after the sessions. \n\n\"Ben, we will take care of you. You are safe and protected here. There is nothing to fear. No worries. All is calm and good.\" \n\nIn spite of himself he felt his body relaxing automatically at her words, her calm tone and gentle smile. \n\nDr. Granger took him through the exercises to reach a state where he felt himself rising above his mind, aware of his thoughts but disconnected from them. The room appeared a little lighter to him though the light was softer. He could hear the doctor's soothing voice above all else. \n\n\"Ben, how are you feeling right now.\" \n\n\"Good. I- I feel good.\" \n\n\"That's very good. We are going to talk a little and look at pictures, observe what's happening in them but only from the outside. They are merely images and can't touch us. Alright?\" \n\n\"Yes, sure,\" he sighed. \n\n\"When you were twelve you were moved from a foster home you'd only spent three months in to a new home. Do you recall why you were moved?\" Granger asked calmly. \n\nBen's mind could see the red brick house with the white window boxes. \"The Morgans... they were nice. I thought I was going to be happy there but the house mom found out she was sick. Cancer. All the kids had to be moved. There were three of us.\" \n\n\"Yes, that was sad but you didn't have long to wait before you were taken in by another family.\" \n\nBen jolted against his restraints. \n\n\"All is good Ben. We're just floating above everything, nothing can touch us here. We can see the images and we can talk about them but they can't see or touch us in return.\" \n\nBen relaxed once more and Dr. Greyson turned to the next page in Ben's file. \n\n\"When you moved to the new home, was it nice?\" she asked. \n\nBen nodded. \"Yes, the home was lovely.\" \n\n\"Did you have your own bedroom?\" \n\nBen's eyes widened in delight as he remembered the first time he was shown where he would be staying. \"Yes! It was so much room and it was just for me!\" \n\nDr. Granger gradually worked him through the environment he'd found himself in until she felt he was relaxed enough to begin addressing the next element. The foster parents. "
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "mature",
        "harem",
        "romance",
        "oral"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-shepherd-afield-pt-05"
}