{
    "title": "Beyond the Forest",
    "pages": [
        "This is my entry to the 2014 Literotica Halloween Story Contest. It's my first stab at Erotic Horror and (I think) it ended up more gothic horror than modern horror. It also turned out longer than I'd originally intended, so I appreciate the patience of anyone who sticks through to the end. Votes and comments are, of course, also greatly appreciated.\n\n* * *\n\nWelcome to Transylvania! Vampires, Werewolves, Witches and Ghosts -- do you believe?\n\nI still remember the poster with those exact words written on it, printed in ghoulish green letters on an ominous black background. The poster was the first thing I noticed as I exited the plane and set foot on Transylvanian soil for the first time. \n\nDid I believe? Well, I certainly didn't believe in vampires or werewolves. And witches? I guess I wouldn't have flown thirteen hours across the Atlantic on a last-minute flight to the other side of the world if I didn't at least believe in their possibility. But ghosts? I've always believed in ghosts.\n\nI was two years old when my father died. My mother, haunted by the memory of him, decided that she could no longer stay in the home they'd shared, so she took my older sister and me with her to live in an old two-story house that she'd rented on the outskirts of town.\n\nShe'd went there hoping to come to terms with her sorrow, but with two children that she now had to raise on her own she had little time to mourn. She had her hands full getting my sister ready for first grade and, of course, taking care of me.\n\nI was too young to remember, but she told me that I never stopped talking; even after she'd put me to bed I wouldn't shut up. She'd sit downstairs in the living room, drinking her evening tea, and smile as she listened to the baby monitor and heard me babbling away, having long, animated conversations with myself, all alone in the darkness of my upstairs bedroom.\n\nShe never thought anything of it until I started going to playschool. The teacher had told us to draw a picture of our family and I drew my mother, my sister, myself and a boy with bright red hair.\n\nWhen my mother came to pick me up and saw the drawing on the classroom wall, she asked me if that was supposed to be my father, who'd had black hair. I told her no, it was my best friend. Assuming I meant someone in my class, she smiled as she looked around at the other boys and asked me which one he was. But I told her my friend didn't go to school -- he lived in my bedroom.\n\nMy teacher told her not to be worried; it was common for children to have imaginary friends. But my mother told me later the drawing had sent a chill down her spine. She'd always felt an unease about the upstairs room, and didn't like going up there alone, but had tried to convince herself it was only her imagination.\n\nThat evening she let me sleep downstairs in her bed with her, but when she woke up in the dead of night I was gone. And then she heard me in the upstairs bedroom -- laughing as if I was playing with someone.\n\nThe next night she made me sleep in her bed again and told me that I was not, under any circumstances, to go to the upstairs bedroom. When she woke in the middle of the night she was relieved to find me still sleeping beside her. But then she noticed something else -- smoke.\n\nBy the time the fire engines arrived the house was engulfed in flames. My mother, my sister and I had all got out in time and were huddled together across the street in our nightclothes as we watched the firemen throwing out hoses to battle the blaze that was devouring our home. As we watched the hungry flames lick out of the doorway and shattered windows, a fireman came frantically running toward us. \n\nHis eyes wide with alarm, he cried, \"How many more children are in the house?!\"\n\nMy mother blinked in surprise and said none; all of us had safely escaped. \n\nHe glanced back at the dying house, and then said, \"But what about the boy? The boy with the red hair in the upstairs window!\"\n\nWhen the sun rose the next morning there was nothing left of the house but charred timbers, blackened bones of the home that had once been there. We went to live in a small, two-bedroom apartment, but my mother couldn't stop thinking of the house, couldn't stop thinking of that upstairs bedroom.\n\nA family friend told her she should see a psychic and my mother, desperate for peace of mind, finally agreed. And the psychic, who knew nothing of the fire, took one look at my mother's palm and told her that a restless spirit was searching for her -- a spirit in the form of a boy.\n\nMy mother was terrified. She'd never believed in psychics before, but now she was begging this one to tell her what to do. And she told my mother that she had to flee, and that only a large body of water could prevent the ghost from following us. So my mother picked the largest body of water she knew and took us across the Atlantic Ocean to our new home, America. \n\nShe didn't tell me that story until I was a teenager. I don't remember the red-haired boy. I barely even remember the house. But listening to her tell that story, hearing the tremble in her voice and seeing the fear in her eyes...I guess that's why I've always believed in ghosts.\n\nOh, and there's one other reason how I know ghosts are real. I don't want to ruin the end of this story, but let me give you a little hint. By the time this story is over, I will have already died. \n\nBut enough about that, let's go back to the beginning of this story, the beginning of the end. After getting off the plane at Sibiu International Airport in late October, I traveled to the city of Brasov by rail. \n\nThe train was packed with tourists on their annual pilgrimage to Brasov and a site sacred to all horror film fans and Halloween aficionados -- Dracula's castle.\n\nOf course, the castle didn't really belong to Dracula. Its true name is Bran Castle and it's a national monument and landmark in Romania. However, it's marketed as having once been the famous fictional vampire's home. There's no evidence that Bram Stoker knew anything about the castle when he researched his story (without ever having left England), but that hasn't stopped more than half a million fans from around the world from flocking to it every year.\n\nBut I wasn't headed to Brasov to find a vampire; I was going there to find a witch. My problem, though, was that I had no idea where to start looking. The gypsy woman had told me the witch's name, but other than that I had nothing and, honestly, like I said before, I wasn't sure if I even believed in witches. But now, with my wife's very life at stake, I knew I had no choice other than to believe.\n\nI stepped off the train and stared around the station as a flood of tourists washed past me, murmuring with excitement at the realization that they were about to spend Halloween in Transylvania.\n\nAnd the city was ready for them. Romanians had come to rely on tourism for money after the fall of communism, and the people of Brasov were no exception. The station was full of vendors hawking Dracula-related merchandise and sightseeing companies pushing Halloween parties and tours.\n\nI passed by them, ignoring their sales pitches and brochures. I had no interest in Halloween; I needed to find a witch. But as I hurried through the crowded station, a voice rose above the din.\n\n\"Come see the real Transylvania! Journey through the dark woods and across the mystical mountains that have inspired the legends! Starting in the scenic village of Magura -- \"\n\nThe name cut through the clamor like a knife. I pushed my way past a girl carrying a backpack two sizes too large for her and found the man I'd heard.\n\n\"Excuse me,\" I said. \"Did you say your tour starts in Magura?\"\n\n\"Yes,\" he said in thickly accented English, as he eagerly handed me a brochure with a giant brown bear on the cover. \"The tour starts in the beautiful village of Magura. From there we...\"\n\nI didn't hear what he said next. I barely heard anything after the word Magura. I'd never even heard of the town until one day earlier, when the gypsy woman had told me the witch I was seeking would be found there. But now I knew it was the one place in the world I had to be.\n\n\"I'll take it,\" I said, interrupting him. \"I'll take the tour.\"\n\n\"That is wonderful,\" he said, beaming with surprise at my enthusiasm. \"There is a map to Magura on the back of the brochure. The tour starts tomorrow at ten and -- \"\n\n\"No!\" I said, cutting him off a second time. \"I need to get to Magura today. I want to start the tour now.\"\n\nHe smiled and shook his head. \"I'm afraid that is impossible. It is already too late in the day, and there are still three more spots on tomorrow's tour that I need to fill.\"\n\nI pulled out my wallet. \"How much is it?\"\n\n\"The tour? It is 200 lei, but that includes -- \"\n\nI held up my hand, I didn't need his spiel. \"How much is that in dollars?\"\n\nHe did a quick mental calculation. \"About sixty dollars.\"\n\nI pulled three one-hundred-dollar bills out of my wallet and pushed them into his hand. \"There, I'll book the whole tour. Can we leave now?\"\n\nHe blinked in surprise at the money and hesitated for a second, as if he was about to refuse it. But then he quickly nodded and stuffed the bills into his pocket. \"Of course, we can leave immediately. Do you have luggage?\"\n\nI hefted the small carry-on, all that I'd packed for the last minute flight, and showed it to him.\n\nWith a surprised look, he said, \"That is all that you have brought?\" \n\nI nodded. \"It's all I'll need.\"\n\nHe introduced himself as Andrei, and it wasn't long before we were in his small red car, driving through the narrow, cobblestoned streets of Brasov on our way out of the city. As he drove, he said, \"Pardon me for asking, but why are you so anxious to get to Magura?\"\n\n\"I need to find someone there.\"\n\nHe shrugged his shoulders. \"I am not complaining, but three hundred American dollars is a lot of money. You could have taken a taxi there for a fraction of that.\"\n\n\"I don't just need you to get me to Magura. There's something I need you to help me with once we get there.\"\n\nHe glanced over at me. \"Help you? Help you with what?\"\n\nI nervously twisted my wedding ring, wondering how much I could say without sounding completely crazy. Finally, I just said it. \"I need you to help me find a witch.\"\n\nAndrei burst into laughter. \"A witch? That is why you are in such a rush to get to Magura -- to find a witch?\"\n\n\"Please,\" I said, desperate to convince him I wasn't like the others who came to Transylvania, chasing after stories spawned in the imaginations of second-rate writers and wishing they were true. \"This witch is real. You have to believe me!\"\n\nHe put up his hand, fighting to control his laughter. \"Please do not misunderstand me. I simply meant that if you wish to find a witch, you do not have to travel all the way to Magura.\"\n\n\"Then you...you really do believe me? You believe that witches are real?\"\n\n\"Of course,\" he said, pointing out the window. \"There's one right there!\"\n\nI glanced toward the sidewalk, where a small kiosk was loaded with Dracula-themed t-shirts, mugs, key rings and postcards. Walking past it was a laughing, dark-haired girl in a sexy witch costume, complete with short skirt, striped leggings and black, pointy hat. Her boyfriend was walking beside her, and as he caught me gawking at her from the car window he glared back at me.\n\n\"Not her,\" Andrei said with a laugh. \"There!\"\n\nI looked toward where he was pointing and just past the kiosk, below a large billboard offering guided tours of Dracula's castle, there was a yellow door with a red eye painted on it.\n\n\"I don't understand,\" I said. \"What is it?\"\n\n\"That is where the witch is. That is her shop.\"\n\n\"Her shop? Wait -- you're actually telling me there's a real witch inside there?!\"\n\n\"Of course,\" he said, as he parked the car. \"Romania is full of witches. But they are not like the witches in your American movies. They do not fly around on broomsticks. They are more like...fortune tellers. But if you are lucky you might find one who can cast a spell or remove a curse for you,\" he added with a wink.\n\nThe tall, brightly-painted medieval buildings that lined both sides of the narrow cobblestoned street were packed tightly together, blocking out the late afternoon sun and cloaking the sidewalks in shadows. In the distance, a faint peal of bells echoed from a church. I approached the door to the witch's shop and couldn't help noticing the cracked and peeling paint, and the small sign in the velvet-curtained window that let me know she accepted both Visa and MasterCard. \n\nI turned to Andrei, and said, \"But the witch I'm looking for...I was told I'd find her in Magura.\"\n\nAndrei shook his head. \"I have lived there all my life. Trust me -- there are no witches in Magura. But this witch, Alisia, she knows all of the other women who practice her craft. If the witch you are seeking is anywhere in Transylvania, she will know where to find her.\"\n\nWe went inside and a heavy-set woman with dark hair greeted us. She wore a low-cut black gypsy dress that showed off her ample cleavage, barely concealed by a thick golden necklace of moons and stars. Andrei spoke a few words to her in Romanian and she smiled and nodded in understanding.\n\nShe waved her hand toward a table, covered in the accoutrements of her trade, and invited me to sit down. As I did, she clasped both my hands comfortingly in hers and said in heavily-accented English, \"I am sure I will be able to perform any service you require -- and very affordably, might I add -- but tell me, who is this witch that you think you must find?\"\n\nI'd written down the name as soon as the old gypsy woman had told it to me, to make sure I'd remember it. But I hadn't forgotten it; the name was seared into my memory. I took a deep breath, and said, \"Matusa Ildiko.\"\n\nAs soon as I spoke the name, the witch's pleasant visage twisted into a mask of fear. She jerked her hands away from mine as if suddenly realizing I had the plague. Just as quickly she recovered, smoothing her dress down as she forced a smile and said, \"You are mistaken. There is no witch in Transylvania by that name.\"\n\n\"Please,\" I said, digging in my wallet for the piece of paper with her name on it to make sure I'd pronounced it right. \"I was told I'd find her in Magura, and her name is Mat -- \"\n\nShe slammed her palm against the table to silence me. \"Never speak that name again in my house!\" she shrieked.\n\nI looked at Andrei, and saw he was just as bewildered as I was. Reaching into my wallet, I pulled out a hundred-dollar bill and tried to hand it to her. \"Please, you obviously know -- \"\n\n\"Get out!\" she screamed, waving my money away as if it were cursed. \"Get out of my house!\"\n\nAndrei and I stumbled back out onto the sidewalk as she slammed the door in our face and bolted it shut.\n\n\"I am so sorry,\" he said. \"Witches always act strangely, but I have never seen anything like that! Did you want to see if I can find another witch in Brasov? Maybe she will know the woman you seek.\"\n\n\"No,\" I said, shaking my head. \"I think we should continue on to Magura.\"\n\nThe witch hadn't told me anything, but her reaction had. Ever since the moment I'd decided to leave my dying wife's side and fly to Romania I'd been tormented by the fear that I was making a huge mistake. Her mother and my sister had begged me not to go, told me I had to be losing my sanity if I believed the ravings of an old gypsy. They pleaded with me to stay, so I could be with my wife when the end came.\n\nBut I'd refused to just wait helplessly by her side, waiting for her life to be over, because there was something that neither my sister nor my mother-in-law knew, something else that the old gypsy had whispered to me. A secret from my past that told me what she said was true.\n\nAnd now I knew that the witch I was hunting was real. The violent response that just the mention of her name had provoked had confirmed it for me. But as we drove away from the other witch's shop, the closed sign now hanging in her window, I remembered the look of fear on her face and worried, if I found Matusa Ildiko, just how dear the price for her aid would be.\n\n* * *\n\nMagura was less than half an hour away, and as we neared the rustic village I felt as if I was entering a hinterland between folklore and reality. The picturesque landscape was a scattered collection of cottages and tumbledown barns, with haystacks dotting the nearby mountain meadows before they gave way to the dark forests and brooding mountains that surrounded the remote hamlet.\n\nA narrow road wound through the village, and as we followed it a horse-drawn cart rattled past in the opposite direction. Andrei gave the driver a friendly wave and then pointed toward a small two-story cottage in the distance with wood smoke drifting lazily from the chimney.\n\n\"This is my house,\" he said. \"But I am afraid that it is too late in the day to start the tour. Have you made any plans?\"\n\n\"Plans?\" I said, echoing him.\n\n\"Plans for where you will stay while you are...looking for your witch.\"\n\nI shook my head. I didn't have any plans for where I was going to stay. As a matter of fact, I didn't have any plan at all. The gypsy had told me to travel to the village of Magura and that was what I'd done. But she'd also told me to find the witch Matusa Ildiko and, now that I was here, I realized that wasn't going to be as easy as it seemed. \n\nI was still rattled by the frightened reaction to her name in Brasov. And this village was tiny and Andrei, who'd lived here his whole life, had never heard her name before. I had no idea who -- or what -- I was looking for, and the weight of nearly twenty-four hours without sleep was starting to bear down on me. As much as I didn't want to, I knew I would have to wait until tomorrow to continue my hunt for the witch I'd traveled to Transylvania to find. \n\n\"Is there a lodge or some kind of B&B here?\" I asked, turning to look at the cottages that dotted the small village.\n\n\"There are...but the reason I asked whether you had made plans,\" Andrei said, \"is because I do have a small guest room in my house that is available for the night. And of course there will be breakfast in the morning. It is nothing fancy, but -- \"\n\nI held up my hand to cut him off. \"I'll take it. I don't need fancy.\"\n\n\"Wonderful!\" he said, and turned the small car into his dirt driveway. Once we were parked, he grabbed my duffel bag and gestured for me to follow him inside.\n\nI entered the cottage and felt like I'd stepped into a Brothers Grimm fairy tale. Stout oak beams underpinned the ceiling while rough plaster lined the walls, and an ancient wood stove filled the room with comforting warmth. As I ducked through the doorway, I couldn't help noticing a dried bunch of garlic nailed above it.\n\nThere were two women in the room, one young and one old. Both of them happily welcomed Andrei home and, when they noticed me behind him, nodded in greeting.\n\n\"This is my bunica, my grandmother,\" he said. \"She lives with me. And this is my neighbor, Adriana. She has been keeping my bunica company while I have been working on my tour business. It is actually very new and I am afraid that, other than you, I have not had any customers. It seems that tourists are far more interested in seeing the fictional Transylvania than the real one.\"\n\nI said hello to Adriana and she bowed politely. She was dark-haired, in her mid-twenties, and beautiful. Andrei then introduced me to his grandmother and she nodded and said something in Romanian to me.\n\n\"She is glad to meet you and welcomes you to our home,\" Andrei translated. \"I'm afraid she doesn't speak English anymore; she had a stroke a few years ago and completely forgot how to speak the language.\"\n\n\"That's too bad,\" I said. \"It's very nice to meet you Bunica.\"",
        "She smiled a toothless grin and nodded as if she understood, then gestured for Andrei and leaned toward him as he translated for her. \n\nI took a seat at the wooden table, which appeared to have been handmade from planks from an old barn, as Adriana started to prepare dinner and Andrei reached into a cupboard and pulled out a bottle.\n\nHe poured four glasses, and as he handed one to his grandmother her eyes sparkled in anticipation.\n\n\"It is p\u00e1linka,\" Andrei said, \"a traditional Hungarian fruit brandy.\"\n\nHe gave a quick salute in his native tongue, welcoming me to their home, and then the four of us drank. I shot the contents of my glass and grimaced as the fiery liquid scorched my throat. The three of them laughed as I coughed uncontrollably.\n\n\"You are supposed to sip it!\" Andrei said, as I shook my head, trying to regain my senses as the warmth from the powerful concoction rippled through me.\n\nAs he leaned forward to refill my glass, I said, \"Do you think your friend, Adriana, might have ever heard of Matusa Ildiko?\"\n\nAs soon as I said the name, his grandmother glanced up from her brandy and said, \"Ce este sta?\"\n\nAndrei told her what I'd said and her face came alive with excitement. She reached across the table to squeeze my hand and started talking rapidly in Romanian. As she spoke, he translated.\n\n\"She says that Matusa Ildiko is a powerful witch, and a terrible source of retribution. She says that if a woman thinks her husband has been unfaithful, she prays to the witch and tells her to come visit him in his sleep.\n\n\"Of course, if she is wrong the witch will not come. But if the husband has truly been unfaithful, he will never wake again. Matusa Ildiko will ride him in his dreams until he is dead.\"\n\nI suddenly felt dizzy and wasn't sure if it was from her story or the brandy. I wasn't sure what I'd expected to find, but it certainly wasn't anything like what she was describing. \n\n\"Does your grandmother know anything else, like where she can be found?\"\n\nAndrei shook his head. \"You do not understand. Matusa Ildiko is not real. She is a legend...a fable. The story my bunica is telling you is an old wives' tale, designed to keep faithless husbands from straying too far.\"\n\nAdriana, who'd been listening to the conversation as she chopped carrots and turnips on the sideboard, joined in. \"Yes, a fable! Now I remember where I've heard that name.\"\n\nI listened as she explained that she'd read of Matusa Ildiko when she was a young girl, in a book of fairy tales and legends written by Benedek Elek, who apparently was Transylvania's most famous storyteller. But he'd published his book more than a century earlier. The Matusa Ildiko he'd written of had to be long dead.\n\n\"But the gypsy said I'd find her here, right here in Magura. Maybe there's some other witch nearby who has taken her name?\"\n\n\"There is no one else by that name,\" Andrei said. \"I am afraid this gypsy you speak of has sent you on a fool's errand. Perhaps she read the same book that Adriana did and found the name there?\"\n\nMy shoulders slumped as I twisted my wedding ring. Had I been a fool to listen to the gypsy's words? Had I raced halfway around the world only to discover I was chasing a phantom from a storybook? \n\nAndrei's grandmother saw me playing with my ring and smiled a toothless smile, cackling with laughter as she babbled.\n\n\"She sees you are married,\" Adriana said. \"She says she hopes you are a good husband, or Matusa Ildiko will come and visit you.\"\n\nWas I a good husband? My wife was back home in the States on her deathbed and I was in Transylvania clutching at straws, chasing after a fairy tale and foolishly thinking that somehow it could help her.\n\nThe gypsy who'd appeared at her bedside had made it all sound so believable. Travel to the village of Magura and find the witch Matusa Ildiko. Only then will you and your wife be together again.\n\nThat was all I wanted, just to be together with her again. To wake up in the morning in our own bed, sleeping on my side with her curled up in front of me. To press my face into her soft blonde hair and lose myself in it, and hear her giggle when my nose tickles her neck and have her try to move away from me, only to have me wrap my arm around her waist and pull her back. And to feel her wrap her arm around mine as I hold her close, surrendering herself to me as I kiss her softly behind her ear and whisper that she's mine, always to have her whisper back forever.\n\nThe memory of it filled my senses and sadness overwhelmed me. \"I think I'm gonna go to bed.\"\n\n\"You will not eat dinner?\" Andrei said.\n\nI shook my head. \"I'm not hungry. I'm just tired, really tired.\"\n\n\"Yes, of course. Let me show you to your room and you can get some rest. Tomorrow we will get up early and start the tour. The beauty of the Carpathians will make you forget all about your witch.\"\n\nI nodded but I knew there would be no tour. As soon as I was rested I had to get back to Sibiu, back on a plane to the States. I'd been a fool to leave in the first place, a fool to think that there could be any truth in what the gypsy had said. I knew it was desperation that had made me believe, but now I had to make amends. I had to hurry back to my wife's side, even if only to say goodbye.\n\nThe room and bed were small, but they were all I needed. I stripped down to my boxers and t-shirt, crawled under the quilt and closed my eyes as the last rays of the autumn sun faded behind the village's mountain backdrop.\n\n* * *\n\nWhen I opened my eyes again the room was dark and the house was silent. I was lying face down on the bed, and it took me a second to realize the quilt that had been covering me was gone. Thinking it must have fallen off while I was sleeping, I groped blindly toward the darkness beside the bed. \n\nAnd that was when I felt it...a chill, an unnatural cold which sent a shiver through me as soon as I felt its touch. A shiver that unlocked the doors of memory and released a remembrance of the last time I'd felt it: the ominous chill that told me a red-haired boy was crouched in the darkness at the foot of my bed, waiting for me to wake up.\n\nI squeezed my eyes shut, just like I'd done when I was little and thought I could wish myself back to sleep. But this time I was praying, praying that this was just a dream I'd soon wake up from. As if in answer to my prayers, a nightmarish sound whispered through the dark. The sound of the floorboards creaking as something moved toward me from the foot of the bed.\n\nI tried to turn my head to look, though terrified of what I might see, but a nameless fear had paralyzed me like an invisible weight pinning me to the bed, stopping me from seeing who -- or what -- was coming. All I could do was moan, a weak fear-filled moan that pleaded for the thing in the dark to go away and leave me alone.\n\nAnd then I sensed its weight, felt the mattress sink and heard the springs groan as something crawled onto the bed behind me. I felt its hot breath on my neck as an odor like freshly turned earth, tinged with the sweet tang of dead, decaying leaves, filled my nostrils. \n\nTerror filled me as I tried to will myself awake, knowing this had to be a nightmare. And then the thing moved on top of me. I felt its weight press me into the mattress, its skin cold and damp against my fevered flesh as it pinned me down, its long, stringy hair dragging across my shoulder blades as it moved up my body, scraping its long, claw-like fingernails along my side. \n\nI could sense its mouth opening as it hovered above my neck, and then a ghostly voice hissed in my ear, \"Who dreams of me?\"\n\nHer voice sounded like an echo whispered across the centuries, but I couldn't answer. I couldn't move, let alone talk, as the cool weight of her naked body pressed me deeper into the mattress. I tried to turn my head, tried to see her face, but I was helpless as she traced her fingernails back down along my hip. And as she did, I became dimly aware of her firm breasts, crushed against my back, and her soft lips as they brushed against my ear.\n\n\"Who dreams of me?\" she whispered again, as her fingernails snuck under the waistband of my boxers and her hand slipped beneath me.\n\nI tried to answer, but all that escaped me was another moan as her cool hand wrapped around my stiff length. For the first time I realized how hard I was and heard her sigh in my ear as she slowly stroked her hand back and forth, savoring my size.\n\nI groaned as she tightened her grip and started to jack me even faster, and for a third time she whispered, \"Who dreams of me?\"\n\nBut I still couldn't answer, no matter how desperately I wanted to. All I could do was lie there helplessly, pinned beneath her as she pumped her fist up and down my swollen length. I felt her hot breath on my neck, her breath coming quicker as she stroked me faster, pushing me toward the edge.\n\nI moaned, and with one final effort tried to twist my head around, tried to see her face. But she gently bit my ear, stopping me, the tender flesh trapped between her teeth as she finished what she'd started, her hand a blur on my stiff shaft.\n\nIt had been so long since I'd been touched like that, and the only touch I'd ever known had been my wife's. She was the only woman I'd ever been with and as I closed my eyes I imagined it was her caressing me, stroking me, and I remembered how her hair would smell in the morning as she dangled it in my face, brushing it back and forth and tickling my nose as she tried to wake me up...wake me up. \n\n\"Wake up!\"\n\nI sat bolt upright in the bed, my wife's voice still echoing in my ears. I was all alone. There was no one else in the room. It had all been a dream.\n\nI stood up, trying to clear my head as I looked out the window. It was still dark outside, but I could tell it would be dawn soon. And as I stared out into the darkness, I couldn't stop thinking about the dream and how real it had seemed. My cock was still painfully stiff, and when I closed my eyes it seemed as if I could still feel her teeth, biting my ear.\n\nI reached up to touch it and was surprised when it stung. I pulled my hand away and was shocked to see blood. My heart skipped; it hadn't been a dream. \n\nHer haunting voice echoed through my memory. Who dreams of me?\n\nAnd then I remembered Andrei's grandmother, warning me that Matusa Ildiko would visit me in my dreams. Had the witch I'd come here to find found me instead? And if so, where was she now?\n\nThen I heard a noise. A groan, or maybe a moan, faint but growing louder. It was coming from Andrei's room down the hall and I wondered if the creature that had been in my room was there now. \n\nI opened my door and tiptoed down the hall, listening to the noises growing louder. When I reached Andrei's door I pressed my ear against it, and heard a steady stream of moans emanating from within. \n\nI rapped lightly on the door and whispered, \"Andrei? Are you okay?\"\n\nThe room went silent, and then I heard a thump and a bang on the other side. A moment later the door opened and Andrei, obviously naked, peeked out from behind. \"Yes, my friend, is something wrong?\"\n\nI glanced in the room and blushed with embarrassment as I spotted his neighbor, Adriana, bare shouldered as she pulled up the blanket and flashed me an apologetic smile from his bed. \n\n\"No,\" I said, \"nothing's wrong.\"\n\nHe glanced back at Adriana. \"I apologize if we woke you. I know it is early, but it is usually best for all if she is headed back home before my bunica wakes up.\"\n\n\"Of course,\" I whispered. \"I just had this...\" My voice trailed off. How could I tell them what had just happened to me or, should I say, what I thought had just happened to me? I apologized for disturbing them and, as he smiled in thanks and shut the door, headed back to my bedroom. \n\nI lay there awake in my bed, watching the darkness outside slowly lighten as dawn approached. I heard the soft, rhythmic squeaking of bedsprings from Andrei's room as he and Adriana resumed their lovemaking, and the thought of the two of them together made my heart ache even more to be back at my wife's side again. And then I heard a strange sound below, a creaking as the front door downstairs slowly opened.\n\nI crept to the window and looked out. Someone or something was leaving the house. I could barely make it out as the first rays of dawn crawled over the mountains to the east, but I could see the creature was hunched over and draped in a black, funereal shroud.\n\nNow I knew for sure it hadn't been a dream. The witch had found me just as the gypsy had promised. I ran down the hall and banged on Andrei's door again. He hurried to answer it and I saw Adriana over his shoulder, wearing a frustrated look as she hid her naked body once more beneath the blankets.\n\n\"What is it?\" he whispered, his voice tinged with a similar frustration.\n\n\"I should have told you before, but...something was in my room earlier.\"\n\nHe narrowed his eyes in disbelief. \"What are you talking about? You must have had some kind of nightmare.\"\n\n\"No, I swear, something was in my room! And I just saw it going out the front door.\"\n\nHe glanced back at Adriana, concern obvious in her eyes as he hurried to pull his pants on. \"I knew I forgot to lock the door,\" he said, and I moved out of his way as he pushed past me and ran down the hallway.\n\nI chased after him, following as he ran downstairs shirtless and in his bare feet. The door was still ajar and he raced through it, out into the pre-dawn darkness. I hurried after him and as I searched in the direction the creature had gone I spotted it, shuffling toward the forest.\n\n\"There!\" I hissed, and before I could stop Andrei he sprinted toward the cloaked figure. I chased after him, our bare feet crunching the frosted grass beneath our feet, and when he reached her he grabbed her shoulder and spun her around.\n\n\"Bunica!\" he whispered, as the old woman looked between the two of us, blinking in confusion. \n\nShe had a black scarf over her head and a black shawl wrapped around her. There was a bundle in her arms and Andrei took it, opening it to reveal half a loaf of bread and a chunk of sausage inside. Shaking his head, he wrapped it back up and put his arm around her shoulder to steer her back home.\n\n\"I am sorry she woke you,\" he said to me, as he guided his grandmother back toward the cottage where Adriana, now dressed, was waiting by the front door.\n\n\"But where was she going at this time of the morning?\" I asked. \"And what is the food for?\"\n\n\"Who knows? Probably thinks she was going on a picnic. The stroke she had has caused her dementia and she often wanders the hallways at night. She must have wandered into your room and woke you. Again, I am sorry.\"\n\n\"It's fine,\" I said, but I knew there was no way this harmless old woman had been my nighttime visitor.\n\nWhen we neared the door Adriana hurried out to wrap a blanket around Andrei's grandmother's hunched shoulders. Seeing the bundle of food, she asked her in Romanian where she'd been going. Her answer caught them both by surprise.\n\n\"What's wrong?\" I asked.\n\n\"Nothing,\" Andrei said, as he led his grandmother into the house and went to make some coffee. \"It's just...she's confused by what we were talking about yesterday, getting all mixed up.\"\n\n\"What do you mean?\"\n\nHe glanced at me and said, \"You must remember, the dementia makes her mind play tricks on her. She gets very mixed up.\"\n\n\"I don't understand.\"\n\n\"She said that she was taking the food to the woods...to Matusa Ildiko. She said that last night when she was looking out the kitchen window, before she went to bed, she saw a girl that she calls 'the witch's servant', standing at the edge of the woods and watching our house.\"\n\nI sat up in surprise. Could that be who'd visited me?\n\nAndrei saw my reaction and held up a hand to stop me from getting carried away. \"Please understand that all of this is only happening in her mind. For instance, she often thinks she hears music outside and insists the band is back, playing on the bandstand, but the bandstand burned down more than seventy years ago. There was no girl at the edge of the woods and there is no witch called Matusa Ildiko.\"\n\nAs soon as he spoke her name, the old woman turned toward me and started chatting animatedly in Romanian.\n\n\"What is she saying?\" I asked.\n\nThis time Adriana translated. \"She insists that this girl saved her life many years ago and that she still lives in the forest. There is a circle of stones in the woods where she says women leave offerings to Matusa Ildiko. She was taking the food there so this girl wouldn't be hungry.\"\n\nI turned to Andrei. \"Do you know where these stones are?\"\n\n\"Please,\" he said, \"these are old wives' tales. None of this is -- \"\n\n\"Do you know where the stones are?!\" I shouted.\n\nHe took a step back, startled by my outburst. \"Yes....yes, I know where they are.\"\n\n\"Then take me there...please.\" I tried to calm myself down, and apologized for raising my voice, but I knew there had to be a connection between my visit during the night and the old woman's tale. Time was running out for me and I knew that, if what the gypsy woman had said was true, this stone circle might be my only hope of locating the witch I'd come here to find and saving my wife's life.\n\n* * *\n\nAn hour later we were on our way. Adriana was with us and her mother was back at the cottage, taking care of Andrei's grandmother.\n\nAndrei had wanted to proceed with his planned nature tour, but I'd insisted he take me to the circle of stones. He led us across the rolling pastures and down into a valley and, as we headed up out of it toward a stand of beech trees, already dressed in resplendent autumn gold, I realized I was getting the tour anyway.\n\nWe hiked through the old-growth forest, a mixture of beech, spruce and fir trees, with the massive, jagged limestone ridge of Piatra Craiului towering above us. Autumn had a firm grip on the forest, its colors everywhere, but the cold shadows stretching beneath the canopy warned us that winter would soon be there.\n\n\"I wish you could see this place in the spring,\" Andrei said, as we wandered into a high alpine meadow and caught the scent of juniper, \"the wildflowers are a wonder to behold!\"\n\nI listened as he carried on, a sparkle in his eyes and excitement in his voice as he described the lynx, deer and wild boars that still populated the ancient, unspoiled woodlands around us, one of the last remaining wild spaces in Europe, and told me of the great brown bears and packs of wolves that still roamed free in the more isolated corners of the forest. \n\nI listened as he told me of the strange and mysterious beauty of the ancient forests of Transylvania, a beauty that had inspired the myths and stories of supernatural beings and monsters that were now synonymous with the region. He described lonely forest glades, fit only for fairy folk on moonlit nights; isolated lakes where water sprites dwelled; and deep, mysterious caverns, whose depths were said to harbor hordes of evil spirits.\n\nI could tell by the smile on his face he was proud of this place, proud of his home, but I had no time to enjoy the scenery or his stories. \"When will we reach the stones?\" I asked.\n\nThe smile faded from his face. \"I don't know what you think you will find there, my friend, but you will be disappointed if you think you are going to find your witch. I have already told you that my bunica's mind...it plays tricks on her.\n\n\"The girl she swears she saw last night? She told me that the last time she had seen her was nearly seventy years ago. Her mind...it is like a book that has had its pages torn away...she can remember clearly things that happened during the war, but cannot tell you what she had for breakfast. The girl she thinks she saw, even if she ever really did exist, is now nothing more than a memory.\"",
        "I swallowed his words hard. I suspected every single one was true. But I'd traveled all the way to Transylvania on the slimmest of hopes and there was no way I was giving up now, even if it meant chasing after a witch from a book of fairy tales or a figment from a confused old woman's imagination.\n\nThe three of us left the meadow and Andrei led us deeper into the forest. The trees seemed to grow thicker and the forest seemed to grow quieter. And then we reached the stones.\n\nThey were no more than a small, semi-circle of broken boulders, none of them more than three feet high, but it was obvious they were a ruin of something that had once stood there long ago. And we were the only ones there.\n\nAndrei sat on a stone and gave me a sympathetic smile. \"You see? No girl. No witch.\"\n\nI nodded as if I'd never actually expected to find anyone there, but I knew I was meant to find this place. The small, hidden clearing was covered in a shroud of fallen leaves, and the sweet odor of their decay mixed with the earthy aroma of the clearing to create an eerily familiar smell -- the exact same scent that had accompanied my nighttime visitor.\n\nI was sure she'd been real and I was sure that she'd been here. \"What are these stones, some kind of ancient ruins?\"\n\nAndrei nodded. \"There are many of them that can be found in Transylvania, but most are far better preserved than these ones.\"\n\n\"Who made them?\"\n\n\"The Romans most likely, it is from them that Transylvania gets its name. In Latin it means, Beyond the Forest. But there are some scholars who insist the ruins are even older, perhaps Dacian.\"\n\n\"Dacian?\"\n\n\"Yes, the Dacians were the people who once ruled this land. But the Romans came and conquered them, subjugating them for centuries until the Huns arrived and took over.\"\n\nI listened to him talk, outlining the history of his country and people, as I ran my hand over the worn stones, wondering how they were connected to Matusa Ildiko and wondering what to do next.\n\nAs I wondered, Adriana reached into her pack, pulled out some food she'd prepared for the hike, and shared it with Andrei and me. I thanked her and the three of us sat down in the stone circle to eat. Adriana watched me as I ate and noticed how I kept craning my neck around, watching the woods.\n\nShe smiled and said, \"You really think you will find your witch out here, don't you?\"\n\n\"I -- I don't know,\" I said. The idea of finding either her or her servant here had seemed a lot more plausible in the dark before dawn than it did now, in the bright mid-morning sunlight. But after the visit I'd had during the night, which I was still trying to convince myself hadn't been a dream, I was determined to keep hunting.\n\nAdriana's thick, dark hair had tumbled down over her shoulder, and she swept it back as she said, \"I do not mean to be rude, but can you tell me why you are so anxious to find Matusa Ildiko?\"\n\nI leaned back against one of the stones, slowly twisting my wedding ring back and forth. \"It's because of my wife, she's...she's in a hospital back home.\"\n\nAdriana lowered her head in sympathy. \"I am so sorry, is it serious?\"\n\nI nodded. \"She had a stroke a few months ago.\"\n\n\"A stroke?\" Adriana said. \"But she must be so young?\"\n\n\"She is, she's thirty, the same age as I am. But they told me a stroke can strike down people of any age. She's been in a coma ever since, but her condition has been steadily worsening. And now the doctors...they say she doesn't have much longer.\"\n\nAdriana and Andrei both glanced at each other and I could tell they were wondering the same thing: why wasn't I at my wife's side? So I told them.\n\n\"It was only days ago that they gave us the bad news. The doctor met with us in her room and told us to prepare for the worst; there was nothing they could do. My mother-in-law nearly fainted and my sister, who'd been there for both of us the whole time, took her outside the hospital to get some air.\n\n\"I was alone in the room with my wife and for the first time in my life I prayed, prayed that there was something I could do to save her. And then the gypsy appeared. \n\n\"I'd seen her there before. She worked at the hospital and was one of the women who came in regularly to clean the room. She'd always been friendly and was always asking me if there was anything she could get me. But that day...that day was different.\n\n\"She came in just like usual, but as soon as she took one look toward my wife's bed I knew something was wrong. She backed up into the sink, knocking everything over, and the look on her face was pure terror.\n\n\"I jumped up to help her and then she told me what was wrong, told me why she was looking at my wife's bed like she'd seen a ghost.\n\n\"She said there was a man standing beside my wife, cloaked in darkness with no face, and he was waiting to take her away.\"\n\nAdriana gasped and put her hand to her mouth. \"Bau-bau?!\"\n\nI blinked at her in confusion, not sure what she meant, but Andrei shook his head. \"She thinks you are talking about Bau-bau, he is what you might call the bogeyman. He is supposed to come at night and take naughty children away to his cave. But I do not think that is who this gypsy meant.\"\n\nI nodded in agreement; I knew exactly who she meant. I continued: \"The gypsy told me this dark man -- who I couldn't see -- was waiting by my wife's bedside, waiting to take her away. And then she grabbed my hands and her words...the way she spoke them...sent a chill through me. It wasn't like she was talking; it was like someone was talking through her. She told me that there was only one way my wife and I would ever be together again. I had to travel to the village of Magura and find the witch Matusa Ildiko.\"\n\nAdriana shivered as she listened to my tale. \"But Matusa Ildiko...she is only a folktale.\"\n\n\"So people keep telling me, but last night I...I thought I dreamt of her. And then this morning when your grandmother said that she'd seen her servant, and now these stones. It just feels like everything is leading me toward her.\"\n\nAndrei shook his head in disbelief. \"Please, my bunica's mind plays tricks on her. And you are hearing and seeing what you want to believe. But believe me -- Matusa Ildiko does not exist. She never did. Go home and be with your wife, not only for her but for your family. I do not mean to be harsh, but I think it was foolish to leave her side to chase this gypsy's tale.\"\n\nAdriana nodded. \"He is right. You can never trust a gypsy.\"\n\nI shook my head. I knew every word the gypsy had said was true because this wasn't the first time I'd crossed the dark man's path, and this wasn't the first time he'd come to take someone I'd loved away. And as I sat there in that ancient ring of stones, this was the story I told the two of them.\n\nMy mother was a strong woman. It wasn't easy moving across an ocean and building a new home for the three of us but she'd done it, and all on her own. She made every sacrifice that life demanded of her and gave us every ounce of her love. So much that, by the time my sister and I both finally moved out on our own, she was left all alone. For whatever reason she'd never remarried after my father died. She'd loved, but had never fallen in love again.\n\nBut it didn't seem to bother her. She had her friends and, of course, she had us. But in her mid-fifties I started to sense a change. She seemed distracted and sometimes even confused. Favorite dishes that she could cook with her eyes closed now had a different taste, their exact recipe no longer etched in her memory.\n\nBoth my sister and I noticed but none of us said anything. Even when we started to see other little warnings, signs that she was starting to forget how to do even the simplest tasks correctly. We put it down to age and thought we could just help her, but then something happened that I couldn't help her with.\n\nI came over to visit her one day and, not realizing I was there, she came tiptoeing out of the kitchen. But not as if she was trying to be quiet, more like she was worried about setting off a landmine. When she saw me standing in the living room she looked as if she'd seen a ghost, but once I spoke to her and she recognized me she calmed down.\n\nAt first she denied it, but I knew that something was wrong and insisted she tell me why she'd been acting so strangely. And when she did I laughed at first. She said she'd been...seeing things. And when I asked her what type of things, she said: \"Do you see them?\"\n\nI looked around the room in confusion, wondering what she was talking about, and then she told me. She said there were little men running around the room, small men, about six inches tall. Kind of like those troll dolls that used to be popular, naked with fuzzy hair and huge grins on their faces. And that was why she'd been tiptoeing out of the kitchen; she was worried she was going to step on them.\n\nAt first we thought it was funny. My sister would play along, pretending she could see the tiny men too as she tiptoed around the house. We weren't sure what was wrong with our mother. We just thought her mind was playing tricks on her. We had no way of realizing just how unfunny the final trick it had planned for her would be.\n\nOne day I went to visit her and she seemed frightened. Her hair was wild and her clothes looked like she'd been sleeping in them. Wanting her to take a shower, I tried to pull her up from the couch but she refused to budge. I thought she was worried about stepping on the tiny men. Then she whispered: \"Do you see him?\"\n\nThat was the first time she told me about him -- the dark man standing by the bottom of the stairs. She described him as having no face, at least, not one that she could see. But she knew he was watching her, waiting for her.\n\nShe refused to go anywhere near the stairs, including the bathroom right beside them. And when I went to stand where she said he was, hoping to prove it was all in her imagination, she just stiffened and whispered: \"He's standing right beside you...looking at you.\"\n\nThings were getting worse. We knew she couldn't stay in that house. So we moved her to a small apartment in a two-story building near where my wife and I had just moved in. At first she seemed to be doing better, she told us she wasn't seeing things and we hoped things had changed. But they hadn't.\n\nAbout a month later a neighbor I'd given my cell number to in case of emergency called me. She'd smelled smoke from my mother's apartment, but when she'd gone over and knocked on her door my mother had refused to answer. By the time I got there both the firemen and policemen were already there, banging on her door and telling her to open it. But she was on the other side, as smoke poured out of her apartment, screaming for them to go away. They were afraid to smash the door down, knowing she was on the other side, but were getting ready to do just that when I intervened.\n\nIt took a minute before my mother remembered who I was, and when she did she tentatively cracked open the door to let me in. I held her as the firemen rushed in and put out the fire, which luckily turned out to be just a pot burning away on the stove.\n\nThe fire was out, but fear still filled my mother's eyes. As she clung to me she finally admitted why she'd been terrified to open the door. She'd peeked out the spyhole and seen who was standing and waiting behind the crowd banging and screaming for her to unlock the door -- the dark man.\n\nHe'd found her, and now that the door had been opened, my mother refused to ever set foot in that apartment again.\n\nWe'd been taking her to doctors since her problems had begun, and it was soon after the fire that they finally gave us their diagnosis. She had something they called Lewy body dementia. They told us that the hallucinations were a common symptom of the illness, and told us the prognosis wasn't good.\n\nFor her own protection we put her in a facility designed to care for people with her disease. And as it got worse they were forced to put a lock on the door to her room to keep her in. She screamed and cried for them to let her out, and one of the nurses told me it broke her heart not being able to let my mother leave her room. But I knew her terror wasn't because she was trapped in there, it was because she was trapped in there with him. \n\nHer decline was depressingly fast and it was barely a year after we'd been forced to put her in there that she passed away. The staff told me they'd done everything they could to make her comfortable and that she'd died alone during the night. But I knew she hadn't been alone, she'd had one last visitor.\n\nWhen the gypsy told me about the dark man watching and waiting for my wife I knew exactly who she meant, her description was identical to the one my mother had given me. And I knew there was no way I was going to just sit idly by and let him take one more person that I loved away from me. \n\nAs I finished my story I touched my cheek and was surprised to find a tear. I hadn't even realized I'd been crying. With all the tears I'd wept the last three months, I hadn't thought there were any left to shed. I stood up and followed Andrei and Adriana. Both of them were quiet as we headed back to Magura, but there was sympathy in their eyes. Sympathy for my pain, the love I had for my wife obvious, and sympathy for the misguided hope I'd placed in a gypsy's words.\n\n* * *\n\nWhen we reached Andrei's house, Adriana's mother was waiting on the porch. \"I'm sorry,\" she said, \"I tried to stop her but she wouldn't listen.\"\n\nWe went inside and found Andrei's grandmother, on her knees as she searched through old books and photos that were scattered across the floor of the kitchen.\n\n\"Bunica, what are you doing?\" he cried.\n\nThe old woman smiled up at us with her toothless grin and stabbed a gnarled finger at a curled black-and-white photo as she chattered her reply in her native tongue.\n\nAndrei listened with a stunned expression, and then turned to me. \"She says she has found her.\"\n\nHe picked up the photo and Adriana and I gathered close as we peered at it together. The photo was black and white and showed five scared young Romanian girls, all in their teens, flanked by four men in uniform.\n\n\"Are those Nazis?\" I asked.\n\nAndrei shook his head. \"No, they were the Iron Guard, Romania's own Nazis.\"\n\nHis grandmother leaned in and pointed at the girl in the middle, letting us know it was her. And then she pointed at the girl at the far left and told us she was the girl she'd seen at the edge of the forest the night before, the servant of Matusa Ildiko.\n\nI stared at the photo. All of the girls looked so young, so innocent. And the girl she'd pointed to, her face was hidden by her scarf, but her eyes were haunting.\n\nAndrei asked his grandmother where she'd found the photo and she explained that a friend had given it to her after the war. He'd found it in the offices of the Iron Guard after they'd been destroyed and had recognized her.\n\nWhen he asked her how come she'd never shown it to him before, a sadness washed over her face and, as she turned to stare out the window as if it was a portal through time, tears welled in her eyes. As she told her story, Andrei translated.\n\n\"They came to the village one day, the Iron Guard. They told everyone they were looking for collaborators, but when the only people they rounded up were four teen-aged girls, the people knew what they were really looking for.\"\n\n\"Four?\" I interrupted. \"But there are five girls in the photo.\"\n\nShe nodded as if she'd understood my words, and continued as her grandson translated. \n\n\"As they marched the four of us back to their headquarters, a place we all feared, she appeared in our midst. She came out of the forest with a black scarf tightly wrapped around her face and, without a word, stepped into line with us. We had no idea who she was and were amazed the Iron Guard hadn't even seemed to notice her appearance.\n\n\"They took us to the small house they had commandeered and were using as their base and marched us into the cellar. But before they did they forced us to pose for this photo, as a trophy.\n\n\"We had no idea who this strange girl was, as we'd never seen her before. But we were all terrified and had no time to worry about where she'd come from, we were far more afraid of what was about to happen to us at the hands of the Iron Guard.\n\n\"We could hear them upstairs, getting drunk, and she just sat there not saying a word...waiting.\n\n\"And when they finally opened that cellar door, and we knew they were finally coming to get us we all screamed. But not her. She stepped right in front of the four of us, shielding us from them. And when she pulled her scarf aside...the look on the faces of those men...I have never seen a look like that before or since.\"\n\n\"What did she look like?!\" I interrupted, and made Andrei translate.\n\nHis grandmother shook her head wearily. \"I do not know. I only saw her eyes...such beautiful eyes...but when she removed her scarf her back was to us. And they took her -- only her -- and left the rest of us in the darkness of the cellar. At first it was quiet upstairs, deathly quiet. And then we heard the most terrible noises. Oh, the screams we heard.\"\n\n\"You heard her screaming?\" I asked.\n\n\"Not her. When the sounds finally stopped, one of the girls worked up the courage to go check the cellar door. It was unlocked. We went upstairs and it was terrible, so terrible. There was blood everywhere and the Iron Guard...they were all dead, every single one of them. I tell you, I would not wish their fate on anyone, but those men...they deserved it.\"\n\n\"And the girl?\" I asked. \"What happened to the girl?\"\n\nShe didn't need her grandson to translate; she knew what I wanted to know. In a hushed whisper, she told us that by the time they'd gone upstairs she was already gone.\n\n\"But...what happened?\" I asked Andrei. \"Did the girl grab one of their guns? Did she shoot them?\"\n\nHe tried to ask his grandmother, but the sparkle had returned to her eyes. She rambled on in Romanian, telling him how Matusa Ildiko had answered their prayers and come at her servant's call to punish the bad men. And swore she'd seen the girl -- not a day older than when she'd last seen her seventy years earlier -- watching from the edge of the forest the night before.\n\n\"It is impossible,\" Andrei said, more to himself than anyone else, \"she would be an old woman by now.\"\n\nBut his grandmother continued, shaking her head as if she'd read his mind, and insisted that thanks to the magic of Matusa Ildiko the girl was eternally young. And now that she'd seen her again for the first time in more than half a century she had to repay her for what she'd done for her and the other girls. That was why she'd been taking the food to the circle of stones, where she was sure she was waiting for her.\n\nAndrei didn't even bother telling her that we'd been to the stones and hadn't seen any girl. He knew she wouldn't remember if he did. Instead he led her to sit at the table while he prepared dinner and Adriana picked up the memories scattered across the kitchen floor one by one.\n\n* * *\n\nIt felt strange later that night, as I lay in bed, to turn on my tablet and read a message from my mother-in-law. I felt as If I was moving farther and farther away from the world of reality and toward the world of fable -- but I still had wireless.\n\nHer e-mail pleaded with me to come back. She thought I'd done what I'd done because I didn't know how to deal with everything that had happened. I could picture her tears as she wrote that she didn't know how to deal with it either, but that both of us had to. And she told me that now more than ever my wife -- her daughter -- needed me by her side.\n\nI apologized for leaving them alone and told her I'd be back as soon as possible. But I knew I couldn't return until I'd found who I'd come to find, the witch Matusa Ildiko. ",
        "Andrei had pulled me aside after dinner and told me not to put any weight in his grandmother's words. He told me how her stroke had erased parts of her memory, and how her imagination now filled in the blanks. He said there probably had been a girl, and he believed that something terrible had happened in that house. But he did not believe it was anything supernatural, just one more of the many horrors the Second World War had spawned.\n\nHe reminded me that there was no such thing as vampires, werewolves or ghosts. And he insisted there was no such thing as witches either, no matter what I wanted to believe.\n\nBut I knew the next morning I'd be returning to the circle of stones, and I didn't plan on coming back until I'd found the witch or her servant. And as I lay back and closed my eyes I imagined a girl with haunting eyes waiting at the edge of the woods, watching, and a dark man beside my wife's bed, waiting and watching her too.\n\n* * *\n\nWhen I opened my eyes the bedroom was dark. The room was unnaturally cold and, shivering, I turned toward the window to see if it was open. \n\nShe was standing there, the girl from the photo, looking as if she'd stepped directly from it and into my room. Standing in the shadows with her black shawl wrapped around her shoulders and a black scarf wound around her face, watching me with the same haunting eyes.\n\n\"Who dreams of Matusa Ildiko?\" she whispered, and the moonlight shone in her silvery-gray eyes.\n\nI tried to answer but the paralysis of the night before had returned and had me in its grip again. I tried to move and felt hidden hands seize me, pinning me to the bed. And for the first time, I realized I was completely naked.\n\nShe stepped from the shadows, letting the moonlight caress her as she approached the bed. I didn't even need to look, but as I tilted my head forward I saw my cock was embarrassingly erect. Her eyes lingered on it and then she shrugged her shoulders and her shawl slipped to the floor.\n\nShe was completely nude underneath and the full moon highlighted every curve. I couldn't help watching her as she glided forward, her steps a whisper against the floorboards as she kneeled on the bed and it sighed under her weight.\n\nMy gaze slid across the arch of her back and the curve of her breast as she reached out and dragged her fingernail across my pale thigh.\n\nI gasped at the sensation and she turned to stare at me with those haunting eyes, her face still hidden behind the scarf wrapped around her like a shroud. \"Who dreams of Matusa Ildiko?\" she whispered again.\n\nI tried to force out an answer, but only a strangled moan escaped my lips. She turned her attention back to the hardness between my thighs and, as she brushed her soft fingertips delicately along my length, my back arched uncontrollably in desire, my body aching for her touch.\n\nShe glided onto the bed, sensuously sliding her leg across mine as she straddled me. Her hand was between us, caressing me as she watched my eyes. And in the moonlight her pale skin seemed ethereal.\n\nI knew I had to be dreaming, she kept telling me so, but the dream seemed so real. Her scent filled my senses, a mixture of morning dew and wildflowers. And the feel of her soft, silky skin against my thighs as she slowly rocked her hips back and forth, rubbing her velvety mound against me, was like nothing I'd ever dreamed of.\n\nShe leaned forward and pressed her breast against my mouth. My tongue, drawn toward it like a magnet, flicked lightly across her nipple. And as I savored the sweet sensation she leaned close and whispered a third time: \"Who dreams of Matusa Ildiko?\"\n\nI twisted my head away from her breast, fighting to answer her; trying to tell her how desperately I needed to find her mistress.\n\nBut I'd been rendered mute and was powerless as she sat up, still straddling me, and reached behind her as she guided me to her opening. Once I was in position, she lowered herself and sighed as we became one.\n\nThe sensation of being inside her seemed so real, yet at the same time so unreal. I'd never felt anything like it. The way her body caressed me as she bounced up and down, her flesh shimmering in the moonlight as she rode my swollen cock, was the stuff of dreams.\n\nAnd as she increased her pace, working toward a crescendo, she reached up and slowly started to unwind her dark scarf. \n\nHer haunting eyes were locked on mine, and as I watched they slowly started to glow with an eerie green aura. From somewhere deep inside I felt an ancient fear, rising to the surface, warning me to avert my eyes. But I couldn't, her own eyes had already made me their prisoner. I tried to twist my body, tried to turn my face away but she was on top of me, riding me, controlling me.\n\nMesmerized by those bewitching eyes, unable to look away, I watched as something spawned in their depths, something sinister. But as she pulled the scarf away the malevolence in her eyes suddenly faded, and became unexpectedly soft.\n\nThe scarf fell beside the bed and I was gazing into the dark, brown eyes of the woman I loved. The witch's servant was gone and my wife was above me, her hands on my chest and a smile on her lips as she rode me. I went to speak her name but she pressed her finger to my lips to stop me, and then leaned forward and whispered.\n\nWake up!\n\nI sat bolt upright in the bed and reached my arm out as if she was still there, as if I could wrap it around her waist and pull her close to me. But she was gone; she'd never been there. It had all been a dream, a painfully real dream. My still stiff cock throbbed and my heart ached as I looked around the room, and realized I was alone.\n\nThe house was quiet. Outside the window, the first fragments of dawn were piercing the darkness. I sat on the edge of the bed unable to forget the dream. I knew it was my wife's face I'd seen but also knew, before the scarf had fallen away, that there was no way that had been her body. And when she'd been riding me...I'd made love to my wife thousands of times, but never like that.\n\nDon't get me wrong, I'm not saying my dream lover was better, just different. I can honestly say that my wife is the best lover I've ever had, because she's been the only one. We met in high school and, when the time was right, we were both each other's first. We were married within two years and, in nearly ten years of marriage, neither of us has ever had a desire or a reason to stray.\n\nI think when the stroke happened, when she was hospitalized and became comatose and the doctors warned us that there was a significant chance she'd never come out of it, both our family and our friends wondered if I would find someone else. In fact, I think they almost hoped for it, seeing my inconsolable grief.\n\nBut I'd never even considered it. Not counting my sister and my mother-in-law, my wife was the only woman in my life, the only woman I'd ever wanted in my life, until now.\n\nI knew the dream had been a message, Matusa Ildiko had sent her servant to visit me in my sleep. She knew I was looking for her, and I was determined to find her. I knew now more than ever that the gypsy's words were true, and that once I found the witch I was hunting my wife and I would finally be together again. \n\nI went to the window, hoping to see a young girl with haunting eyes watching me from the edge of the woods. No one was there, but I was surprised to see a thin dusting of snow had fallen during the night, the first breath of the winter that was coming. And I was surprised to see a light.\n\nThe front door was ajar downstairs and the glow from inside the cottage spilled out onto the snow, creating a bright quadrangle that stretched into the night and pointed toward the woods like an arrow. And in that light I noticed something else -- footprints.\n\nI threw my pants on and grabbed my socks and shirt. I hurried past Andrei's room, careful not to wake him this time, and tiptoed down the stairs. I pulled on the rest of my clothing, tied my shoes and hurried into the night, following the footprints like a trail of bread crumbs.\n\nIt didn't take long to see who'd made them. Andrei's grandmother was far ahead of me, shuffling through the dark, skeletal beech trees with a bundle under her arm. Seeing her wrapped in her thick black shawl reminded me that I'd forgotten to bring a jacket, but the morning cold didn't bother me; my entire being was aflame with the hope that she might lead me to the servant of Matusa Ildiko.\n\nI caught up with her easily but made sure to keep my distance as she picked her way through the trees. Eventually, she made her way to the circle of stones. She reverentially laid her package in the center, opening it to reveal a loaf of bread and a half-full bottle of brandy. She spoke a few words in Romanian to the stones around her, bowed in thanks and then went back the way she came, a satisfied smile on her wizened face.\n\nShe didn't notice me, hidden behind a tree as she passed, and I waited there, shivering in the early morning gloom as the sun rose over the Carpathians and the first daggers of dawn stabbed through the conifers, casting the forest floor in an iridescent glow. The light dusting of snow soon melted and the sounds of the forest waking were all around me, yet still the package sat unclaimed at the center of the stone circle. I'd waited more than an hour, the cold numbing my feet as I rubbed my arms and rocked back and forth, cursing myself for not bringing my jacket.\n\nBut I stayed there, waiting, watching for the girl, watching for anyone. And then I heard the first gunshot. I started as it echoed through the trees and a flurry of hidden birds burst from the canopy above me, fleeing to safety. Seconds later, two more shots rang out in quick succession.\n\nThey came from my right and I peered in that direction, trying to determine how far away they'd been. I was startled to see something crashing through the trees toward me, and ducked back as a huge brown bear lumbered into the clearing. It roared in pain toward the heavens, blood pouring from its snout, and then collapsed in the center of the stone circle like a sacrifice.\n\nThe bear's eyes were half open and its breath was shallow. I spotted two gaping wounds in its left shoulder and knew it was dying. I came out of hiding and stepped cautiously toward it, ready to run if it tried to make one last fatal lunge before death came. But the beast, resigned to its fate, barely noticed me.\n\nI moved closer, awed by the once mighty beast's size and, as its majestic coat rose and fell for the last time, saddened by its demise. I was stretching my hand out to touch its fur when I heard a faint step behind me.\n\nI wheeled around, expecting to see a young girl with haunting eyes, and was shocked to see a rifle aimed right at my face. \n\nI threw my hands up protectively and tried to duck away from where he was aiming. But he stepped nearer, screaming in Romanian as he pressed the cold barrel of the muzzle against my temple.\n\nI froze with my hands in the air, desperate not to make any movement that might alarm him. \"Please, I -- I don't know what you want!\"\n\nHe ignored me as he kept screaming instructions in Romanian and kept the weapon pressed against my skull. As he forced me to my knees, three more men entered the clearing.\n\n\"Please,\" I said, glancing toward them, \"I don't want to cause any trouble. Does anyone speak English?\"\n\nNo one answered, but one of the men hurried toward the man holding me captive and barked at him angrily as he pushed the rifle away from me.\n\n\"Thank you,\" I said, sighing in relief. I went to stand, but the man who'd helped me turned and placed his hand on my shoulder, letting me know to remain where I was.\n\nHe spoke calmly to me in Romanian while the first man stood behind him, glaring at me.\n\n\"I'm sorry, I don't understand. I'm American.\"\n\nHe nodded, and then pointed to where I was kneeling. \"Stay.\"\n\nI stayed there, on my knees with the first man guarding me while the second man went to check on their companions' progress.\n\nThey were obviously poachers and I watched their grim handiwork as they used an axe, long knives and a rusted saw to dismember the dead bear, removing his head and his paws first before eviscerating him and slashing through his entrails to get at the precious organs hidden inside.\n\nI looked away, unable to watch the senseless carnage, but looked up again as the man who'd told me to stay returned. He spoke to me in Romanian, but his meaning was clear. He and the other two men who'd been butchering the bear would be leaving with their illegal bounty, but the first man would be staying and guarding me while they were gone.\n\n\"Stay,\" he said, pointing at the ground, and then went to help the other two carry their heavy load.\n\nI was still on my knees with my hands in the air, not sure if I was allowed to let them down or not. The man guarding me had a smirk on his face as he watched me while his accomplices disappeared through the trees with their bloody bounty.\n\nI wasn't sure if he was guarding me until they returned or if he was just watching me until they were far enough away, in case I tried to alert the authorities. I just hoped, as I glanced at the mutilated beast in the center of the clearing, that there wasn't a third option.\n\nMy arms were dead tired from holding them up, and I asked if I could put them down. He answered me by raising his rifle. But then I realized he wasn't aiming at me, he was aiming at someone behind me.\n\nI looked back over my shoulder and my heart leapt when I saw her. She looked exactly as she had in the old black and white picture, exactly as she had in my dream -- the servant of Matusa Ildiko.\n\nI had no idea whether it was Andrei's grandmother's offering or the appalling butchery in that sacred place that had summoned her, but she was there. She stepped into the clearing with a black shawl wrapped around her and a loosely wound black scarf hiding her face.\n\nThe poacher barked at her in a low, menacing tone, gesturing with his rifle for her to put her hands up. But she ignored him as she walked toward the carcass of the fallen beast and kneeled beside it, stroking its blood-soaked but still shining coat as if to comfort it.\n\nThe poacher moved around me, keeping his gun leveled as he growled orders at her in Romanian. For the first time she seemed to notice him and she stood up, judging him with those haunting eyes. \n\nHe said something else to her and she shook her head no. He repeated his order again, his gestures making it obvious that he wanted her to remove her scarf, and she shook her head no again.\n\nHe was becoming more and more agitated, yelling at her as she glared at him defiantly from above her scarf. He suddenly raised his rifle to his shoulder, aiming it at her, and I leapt to my feet.\n\n\"Hey! You got what you wanted. Leave her alone!\"\n\nHe pivoted, aiming the rifle at me, and then quickly trained it back on the girl. But not before I'd noticed his eyes. Something had changed in them; the menace I'd seen earlier had been replaced by a hunger.\n\nHe suddenly stepped toward the girl, lowering his rifle as he grabbed her scarf and yanked it down. She shrieked as she turned her face to hide it but she was too late, he'd already seen it.\n\nHis hand had been in the way, blocking my view, but whatever he'd seen had seemed to momentarily stun him. He stared at her, his mouth agape as she spun away and tried to pull her scarf back into place.\n\nThinking this was my chance I lunged at him, hoping to grab his rifle, but he was too fast. He sidestepped me as he pulled the rifle back and then drove it forward, crunching the butt into the side of my jaw and snapping my head sideways.\n\nMy legs buckled beneath me and I crumpled to the ground, and the last thing I heard before darkness overwhelmed me was the servant of Matusa Ildiko, screaming.\n\n* * *\n\nI'm not sure how long I was out, but when I opened my eyes to bright sunlight my head was pounding from the shot I'd taken. The clearing was quiet, except for the sound of the flies buzzing around the bear's remains. I pushed myself to my feet and realized my left hand was sticky with blood, which surprised me because the beast's butchered body was to my right.\n\nI glanced to my left and horror seized me as I realized where the blood had come from. I scrambled backward, overcome with revulsion, and as I tripped and fell back to the floor of the clearing I frantically scrubbed my hand against the grass, trying to wipe the stain away.\n\nMy heart was pounding in my chest as I looked back to where the poacher lay dead, the rifle he'd used to hammer me unconscious lying beside him. His blood was pooled around his lifeless body like a halo and the sheer volume of it sent a second wave of revulsion through me. \n\nI staggered to my feet, trying not to retch, and took a step closer to the body, a feast for the flies that buzzed around it. I half expected to see some sort of gunshot wound but quickly realized where the blood had come from.\n\nThe thick lines of black blood around his mouth, nose, ears and eyes were like a roadmap, showing that was where his life had spilled away, pouring out of him in a torrent and soaking into the earth around him. His eyes were still open and his final horror, as he realized what fate had in store for him, was etched on his face like a funeral mask.\n\nI stared at those lifeless eyes and remembered the last time I'd seen them, as he glared at me just before slamming his rifle into my face. And I remembered the wild, possessed look that had filled them, like I'd stepped between a wolf and his prey.\n\nRemembering the girl I glanced around the clearing, but I'd already known she'd be gone. The scene was the same as Andrei's grandmother had described when the Iron Guard had come for her years earlier. And I knew that the witch had come once again to protect her servant.\n\nI looked around the clearing, hoping for some sign of which direction they'd headed in. And that was when I heard voices, coming back toward the stone circle.\n\nI knew it had to be the other three poachers returning, and I doubted that when they discovered their dead friend they'd believe my story that I hadn't killed him, a witch had. \n\nI ducked down as I headed for the far side of the clearing, hurrying past the bundle left by Andrei's grandmother. The offering was untouched, but blood had soaked through the white cloth and into the bottom of the loaf of bread. \n\nI ran into the woods knowing that the sane course of action was to return to Magura, both for my own safety and to alert the authorities to the slaughter in the forest. But I knew there was another life that needed saving, more important to me than my own. So I fled deeper into the forest, heading in the direction the girl had appeared from and hoping it would lead me to her mistress. \n\nBehind me, I heard a cry of alarm as the poachers discovered their friend's dead body. Then I heard a shout and, looking back through the trees, realized they'd spotted me.\n\nI ran, leaping over deadfalls and slapping branches away from my face as I fled higher up the mountain side. I could hear my pursuers behind me. They knew the forest better than I did and I knew it wouldn't be long before they caught up to me. \n\nThe route I was following appeared to be more of a game trail than an actual path, and as it led me around the base of a large rock outcrop, temporarily taking me out of their line of sight, I looked around desperately for a place to hide. I don't know how I spotted it, maybe it was luck or maybe it was fate, but I saw a small cave, its mouth almost completely concealed by underbrush. \n\nI threw myself down headfirst and scrambled blindly through the opening on my belly, desperately hoping I wasn't crawling into a bear den or viper nest. I was barely inside when a voice hissed: \"Careful!\" Then I felt the floor fall away beneath me.",
        "I felt hands grasping at me, trying to save me, and as I clutched at them I felt a sleeve and locked my fingers around it. I held on, hoping to stop my fall, but only succeeded in pulling her down alongside me. We tumbled together through the darkness, her black shawl enveloping me as we slid down the steep rock face until we launched off its bottom lip, plummeting to the depths below.\n\nA second later we hit the cave floor with a sickening crunch and I was horrified to realize that it was her body, twisting beneath me as we fell, that had broken my fall.\n\n\"Are you okay?!\" I whispered, but she didn't answer me. I put my hand on her breast and leaned close to her mouth to listen; she wasn't breathing. \n\nPanic swept through me. I knew I'd finally found the girl who could lead me to the witch I'd been hunting and somehow, even though it seemed nearly impossible to believe, I'd killed her. Not knowing what else to do, I clenched my fists together like a mallet and raised them above my head, ready to hammer them down on her chest.\n\nAnd then I panicked again. Was that the right thing to do? I had zero first aid training; everything I knew had been gleaned from reruns of CSI. I ran episodes through my head, trying to figure out how to help her as I pressed my ear against her breast, listening for a heartbeat.\n\nA faint thump echoed through her chest and I sat up, having made the decision that she probably needed mouth to mouth. I couldn't make out her face in the close darkness, so I reached my hand toward the soft skin of her cheek, hoping to guide myself as I leaned close and pressed my lips against hers. But just before I touched her she coughed violently, her back arching as she desperately gasped for air. Sensing the nearness of my hand, she threw her arm up and knocked it away.\n\n\"You're okay. You just had a hard fall,\" I said, and reached my hand back to comfort her.\n\nBut she knocked it away again and hissed at me as she pulled her shawl up around her face and scrambled backwards, trying to get away from me.\n\n\"Don't look at me!\" she cried.\n\nI hadn't been able to see her face at all in the gloom that enveloped us, but as my eyes adjusted to the darkness I could just make out her silvery-gray eyes as they watched me from above her dark shawl.\n\n\"Don't look at me!\" she cried again, and turned her face to hide it from me.\n\n\"It's okay. I'm not going to hurt you.\" I moved toward her on my hands and knees, hoping to calm her. Then we heard voices from outside.\n\nWe both looked toward the mouth of the cave far above us, and listened as the poachers who'd been pursuing me passed it. A sense of relief filled me as their voices turned faint and faded into the distance. When they were gone I turned to look back at her, and she pulled her shawl tighter around her face and ducked away again from me.\n\nI could see her more clearly now. She looked to be a girl barely out of her teens, and without her scarf around her head I could see she had thick, dark hair that tumbled down around her shoulders.\n\n\"Please...don't look at me,\" she whispered.\n\nI cast my eyes downward, trying not to alarm her, and said, \"You have to help me. I need you to take me to Matusa Ildiko.\"\n\nShe glanced at me, her eyes flashing. And then she turned away again, staring into darkness as she whispered, \"I know no one by that name.\"\n\n\"Please, I know that you know her,\" I said, as I crawled on my hands and knees toward her. \"You have to take me to her. I need her help.\" Seeing her fallen scarf lying to my right, I picked it up and went to hand it to her.\n\nShe shrunk back from me, pulling her feet toward her as she pressed herself against the cold cave wall. \"There is no Matusa Ildiko. She is only a legend!\"\n\nI tossed the scarf toward her feet, held my hands up to show I meant her no harm and, as she'd requested, kept my eyes turned away. \"Please, I know that you serve the witch and her magic protects you. There's an old woman in the village who told me so. You saved her life more than seventy years ago, yet you haven't aged a day since.\"\n\nA silence answered me, and I cautiously lifted my eyes and saw her watching me over her black scarf as she wound it back around her head.\n\n\"Even if Matusa Ildiko did exist,\" she said, \"I couldn't take you to her. You've trapped both of us at the bottom of this cave.\"\n\nI stood up and turned away from her, staring up the steep rock face toward the mouth of the cave far above. \"No, I'll get us out of here. Don't be afraid. There has to be a way.\"\n\nI moved along the wall, searching the smooth stone for handholds. But there were none and, further complicating things, I discovered the cold of the cavern had turned the tiny rivulets of groundwater trickling down the stone face into icy veins.\n\n\"You are wasting your time,\" she said. \"We will never be able to get back to the top.\"\n\nI shook my head. \"No, there has to be a way...maybe if you stand on my shoulders.\" But I knew as soon as I spoke the words that there was no way she'd be able to reach the top of the rock face. And even if she could, there was little chance she'd be able to climb the rest of the way back up the steep slope toward the cave mouth without sliding back down.\n\nI turned and desperately searched around the cave we were trapped in for another way out, but found none. As panic started to creep in, I screamed toward the opening above for help and waited as my words echoed hopelessly off the walls surrounding us.\n\n\"You fool!\" she hissed. \"No one will hear you unless it is the poachers returning. And you know what they will do if they find us.\"\n\nAn image of their dead friend flashed through my mind. \"But she was there,\" I said, \"back at the camp. He attacked you and Matusa Ildiko came and saved you.\"\n\nShe laughed. \"You do not know what you speak of.\"\n\n\"No! I do know! I saw what happened back there. It was the same thing that happened seventy years ago with the Iron Guard. I know your witch saved you then and she saved you today. So why can't you just summon her to have her save us now?\"\n\nShe laughed again, this time even more bitterly. \"Is that what you really believe? That a witch swooped in and killed those men? And what do you think will happen now, that she will fly down here on her broom and rescue both of us?\"\n\nI blinked in confusion, unsure how to reply. Finally, I said, \"Yes, I do believe that...well, part of it at least. And I believe that she can save my wife too.\"\n\n\"Your wife? What does your wife have to do with this?\"\n\n\"That's why I'm here. That's why I came to Transylvania...to Magura...to find your mistress. My wife is dying, but a gypsy told me that Matusa Ildiko could save her.\"\n\nA silence filled the cold cavern as the girl watched me, her eyes unreadable. When she broke it, she said, \"You are right, the witch you seek does exist. But the gypsy was wrong; Matusa Ildiko cannot save anyone. The only thing she ever brings is death, not life.\"\n\nI refused to believe her; everything else the gypsy had told me had been true. I fell on my knees in front of the girl, my teeth starting to chatter from the cold of the cave as I pleaded with her. \"Please, I need to talk to her. She knows I'm looking for her. She's even visited me in my dreams.\"\n\nShe scoffed. \"You have not dreamt of Matusa Ildiko. Only those who desire her dream of the witch.\"\n\n\"No, it's true. She came to me in my dreams twice!\"\n\n\"Then tell me, what did she look like?\"\n\nI went to answer, but then I remembered. \"No...wait, it was you. You were the one who visited me in my dreams.\"\n\nHer eyes went wide with surprise, and she whispered, \"How could you dream of me when you have never even seen me before today?\"\n\n\"I have seen you, in and old black and white photo.\"\n\n\"Any photograph with me in it is a dangerous thing. You must promise me if you ever see it again that you will destroy it!\"\n\nAs I nodded my agreement, she said, \"You are fortunate to have woken from that dream. Tell me, did you see my face?\"\n\n\"Yes...I mean, no...I saw my wife's face. When you removed your scarf I saw my wife's face.\"\n\nShe turned away from me, staring into the darkness. \"There are few men who have ever seen anything other than their own death when that scarf was removed. Your wife's love for you must be very strong if it is her face that you saw.\"\n\n\"It is, and so is my love for her. That's why I need to find Matusa Ildiko -- to save her.\"\n\nShe eyed me thoughtfully as I kneeled before her, shivering in the icy darkness of that hidden cavern. \"How can I save her,\" she said, \"when I can't even save you?\"\n\nIt took me a moment to register what she was telling me, and when I did it took me even longer to believe it. I'd expected the witch I was seeking to be some powerful, ancient crone, not an innocent young girl with haunting eyes. \"You mean...you're Matusa Ildiko?\"\n\nShe bowed her head and hid her face. \"Do not call me by that name, it haunts me. I am simply Ildiko.\"\n\n\"But if you're really her...I mean, really a witch...isn't there some kind of spell you can cast to get us out of here?\"\n\n\"I am the woman you've been seeking, but I am no witch. And there is no magic I can do to save either you or your wife from your fates.\"\n\n\"But there has to be!\" I said, refusing to accept what she was saying. I grabbed her wrist, determined to make her listen to me, and gasped as a searing sensation fired through my veins like an electric jolt while her eyes flared with an ominous green glow.\n\n\"Do not touch me!\" she cried, with a hiss in her voice like a cauldron boiling over onto hot coals as she tore her wrist free and scrambled away.\n\nThe bone-numbing cold that had taken hold of me in that dark cavern seemed to melt away, consumed by the heat firing through me. All I could think of was that soft shawl and how it seemed to hug her body, her lithe, warm body. And a sudden urge to tear it away, to have her naked and pinned against the cold stone floor as I fucked her hard nearly overcame me. \n\nI shook my head, forcing the disturbing vision from my mind. And I thought of my wife, knowing I couldn't risk losing the only chance I had to be with her again. I turned toward the girl, whose eyes were once again silvery-gray as they watched me fearfully from above her shawl, like she'd read my mind and knew the dark thoughts that lurked there.\n\n\"That you can resist the touch of my skin for even a moment proves how strong your love for your wife truly is,\" she said, with awe in her voice.\n\n\"It is. That's why I need your help. The gypsy who sent me here told me that, if I found you, my wife and I would finally be together again.\"\n\nShe sadly shook her head. \"I would help you if I could, but I can't. It is true what I told you before, I am not a witch. I have no magic.\"\n\n\"But just now...when I touched your skin...\"\n\n\"That is not magic,\" she spat, \"that is the curse.\"\n\n\"I -- I don't understand.\"\n\n\"Long ago a powerful witch put a curse on me to make all men desire me, but any man who acts on that desire will be destroyed.\"\n\n\"You mean like back at the clearing...is that what happened?\" \n\nShe nodded slowly, as if the memory of it still weighed on her.\n\n\"Then maybe this other witch...maybe she's the one the gypsy meant. Maybe you're supposed to take me to her?\"\n\nMatusa Ildiko looked at me sadly. \"The witch who cursed me is thankfully long gone from this world, but even if she wasn't we still wouldn't be able to get to her. You don't seem to understand that we are trapped in this cave. And I fear what will become of you when the cold of the night comes.\"\n\nI was starting to understand what she meant. The eerie warmth from touching her skin had faded and a bone-numbing cold had returned to take its place. I squatted in the center of the cave, hunching myself into a ball as I slipped my arms inside my shirt, hugging myself to keep warm while my teeth chattered uncontrollably. A weak sunlight penetrated the cave, partially dispelling the gloom, but none of its heat reached us.\n\n\"I am sorry I cannot help you,\" Matusa Ildiko whispered.\n\nShivering, I said, \"Maybe we should huddle together, to keep each other warm.\"\n\nShe quickly shook her head. \"You must not come near me. You were lucky to resist the witch's curse the first time. You won't be able to resist it a second time.\"\n\nI understood, but my body ached at the memory of her warmth, and yearned to feel it again. Trying to shake the desire from my mind, I closed my eyes and thought of my wife. I tried to picture her beneath the blankets with me, keeping me warm. But the only image that came to my mind was one of her lying cold and lifeless in a hospital bed. \n\nI opened my eyes and knew I had to do something, anything, to stop that from becoming a reality. I stood and stomped my feet, trying to keep warm. And as I did I tried to remember everything the gypsy had said, worried that I'd somehow left something out.\n\nI said, \"The gypsy told me there's a dark man near my wife, watching her, waiting for her.\"\n\nI couldn't see her mouth, but I could tell by her eyes that Matusa Ildiko smiled. \"I know that dark man well. I cannot tell you how many nights I have longed for him to come for me. Unfortunately, he is the one man who is immune to the witch's curse and its siren call. Do not be afraid for your wife, when he takes her he will be gentle.\"\n\nI shook my head as tears welled in my eyes. I was afraid. Afraid of never hearing my wife whisper her love in my ear again, afraid of not feeling the touch of her lips one more time. In that lonely cavern, the pain of her absence felt a thousand times worse than the cold.\n\nSensing my sorrow, she whispered, \"I wish there was a way I could bring the two of you together again like the gypsy said. Many of her folk have the gift of sight, but I am afraid she was mistaken when she told you it was within my power.\"\n\nShe sat up, took off her shawl, and threw it toward me. \"Wear this. It is not much, but it may help to fight off the cold.\"\n\n\"But you need to keep warm too,\" I said, shivering as I bent to pick it up.\n\nShe shook her head as she leaned back against the walls, her pale arms bare in her short-sleeved black dress. \"The cold of this cave is nothing to one such as I. Put the shawl on.\"\n\nAs I wrapped it around my shoulders I couldn't help wondering at the girl in front of me. She seemed so young, but her voice carried the weight of untold years.\n\n\"How old are you?\" I asked.\n\nShe arched an eyebrow. \"How old do you think I am?\"\n\nI remembered the book Adriana had told me of, stories more than a century old. \"I don't know...one hundred...maybe two hundred?\"\n\n\"A good guess, but my age is measured in centuries, not years. Do you wish to hear my story?\"\n\nI nodded, anxious for anything that could distract me from the cold. \n\nShe looked up toward the shadows at the mouth of the cave, like she was looking back through the shadows of time, and began.\n\n\"I was born when the Roman Empire still ruled, even though it had already started its slow decline. This land was known as Dacia back then and, even though there were still Roman outposts, most of their legions had already retreated to the crumbling ruins of their empire.\n\n\"My father was a powerful lord and history called our people the Ostrogoths. A Roman soldier came one day to visit my family, so long ago that I can no longer remember his name. But he captured my heart and secretly made me his lover, promising me he would take me back to Rome with him.\n\n\"But I did not know he already had another lover. A mysterious woman he'd met while stationed on the Dacian frontier, one that was in truth a Thracian witch. And she really was a witch, nothing like the kind found in children's storybooks. She was one with an ancient magic that no longer walks this earth, except through the curse she burdened me with.\n\n\"She came to me in the night and accused me of stealing her lover away. She called me a temptress and, as punishment, cursed me. She swore that every man who saw my face or touched my skin would desire me, but promised that any man unfortunate enough to act on that desire would soon be dead.\n\n\"Fittingly, the first victim of her curse was the lover who had spurned her, my Roman soldier. I pleaded with him not to touch me; I knew it was dangerous. But he couldn't control himself, her spell was too powerful and I watched his life bleed out in front of me as she took her revenge.\n\n\"Soon I realized that every man wanted me, even ones who had been friends or family. One sight of my face drove them mad with lust, drove them to their doom. I fled to the north with my clothes torn and my body bruised, away from my home, away from my people, staying to the woods and hiding my face.\n\n\"I lived there, far from the hunger that fills the hearts of all men, waiting for old age to come. But then I realized that the witch's curse wasn't done with me, she wouldn't allow me to simply grow old and die. The women who encountered me in the woods started to notice I'd never aged while they had, and whispered that I was a strigoi.\"\n\n\"A what?\" I said.\n\n\"The strigoi are ancient creatures from Dacian mythology, evil spirits whose actions made them unworthy of entering the kingdom of Zalmoxis, the god of my people. Immortal creatures that legend eventually transformed into the bloodthirsty creatures you call vampires.\n\n\"It didn't help my denials when any man unfortunate enough to cross my path was found dead in a pool of his own blood. I was forced to flee even further north to where I wasn't known, always trying to keep myself hidden.\n\n\"But eventually I was discovered. The Romans had left our land by that time but a new master had come to subjugate our people. His soldiers swept me up with a crowd of other young girls and took me to his fortress. They called him Attila.\"\n\n\"Attila the Hun?!\" I exclaimed in disbelief.\n\n\"Yes, it was a Hun patrol that had captured me. They took me to his wooden palace beyond the Danube to be one of his concubines. Luckily, I'd kept my face covered and they didn't even think to try to remove my veil, their fear of their overlord obviously outweighing their curiosity.\n\n\"Unfortunately, the same could not be said for their master. When I was taken to his tent he ordered me to remove my veil, told me I was to be one of his wives. I pleaded with him not to look at me, begged him not to touch me, but he wouldn't listen.\n\n\"When they found him the next morning with his life bled out of him I had already fled back to the hills, just a footnote in history.\n\n\"I cannot tell you how many winters I lied naked in the snow, praying for the cold to steal my life away. And when the wolves would come and circle me, snarling, I would crawl toward them, offering my flesh to satisfy their hunger. But even they feared the witch's curse, and would eventually howl and slink away. \n\n\"I have thrown myself from the highest peaks of the Carpathians, shattering my bones on the rocks below, but even then the dark man turned his back to me and I would awake with my bones knitted together again, my flesh new.\"\n\n\"But why would you want to die?\" I said, as an unbidden image of my wife on her deathbed flashed in front of me. \"To live forever, isn't that what everybody wants?\"\n\nShe shook her head sadly. \"Think of the pain you feel knowing the one you love will soon die. I have felt that pain a thousand fold. And what did the future hold for me? I couldn't go down amongst the people; the men would have fallen on me like a pack of hounds.\n\n\"For more than a millennium I hid in these mountains, watching the world I could never be part of change around me. I saw the Mongols come and then the Turks, and felt the pain they caused my people while I hid in the hills, wishing I could help.\n\n\"So I took my knowledge of herbs, some of it ancient and some of it learned, and tried to share it. The women of the villages came to respect me as a great healer and would come to me when they needed help. During the plague, the knowledge I shared saved many. But when the plague was over the men needed someone to blame, so they blamed the witches. And of course, I had to be a witch. What other explanation could there be?",
        "\"They hunted me through the woods until they caught me. And when they did they burned me, or at least they tried to. The legends surrounding my supposedly supernatural powers convinced them to wisely leave my veil on, but imagine their terror when the flames burned it away. And the men who had condemned me to die a fiery death condemned themselves instead, consumed by desire as they rushed into the fire, desperate to be with me. \n\n\"I can still see the horror in their widows' eyes as they stood around the smoldering remains of the pyre the next morning, weeping for their men, and watched me crawl out naked from beneath that pile of charred sticks and bones, alive and unharmed. That was the day the legend of Matusa Ildiko was born.\n\n\"I retreated back to the safety of my Carpathian home and dwelled there far from the superstitions of men. There was the odd hunter or shepherd who was unlucky enough to cross my path, but most knew enough of my legend that they quickly turned back the way they'd come and fled for their lives. And, of course, there were evil men I encountered too, but I felt no guilt when the curse struck them down. \n\n\"And while I walked the woods women would still seek me out, leaving offerings at the ancient stone circle with notes begging me to lead their wayward husbands home or punish them if necessary. But there were other women too, ones who still recognized my 'witchcraft' as a healing art and would seek me out, hoping I would share my knowledge.\n\n\"I remember one in particular, a handmaid of a countess named Erzs\u00e9bet Bathory. Have you heard this name before?\"\n\nWhen I shook my head no, she continued. \"Her husband, the count, had a mysterious illness that none of his court physicians could cure. Desperate, the countess sent her handmaid, Anna, to seek me out. She'd been warned I was a witch, but she'd also heard of my skill as a healer. \n\n\"I was reluctant at first; it had been many years since I had lived amongst people. But Anna's devotion and a lingering desire to see how the world had changed since I'd turned my back on it finally swayed me. \n\n\"I warned her in advance that any man who dared to lay eyes on me would meet his doom, so she spirited me back to the castle, hiding me inside a coffin that everyone assumed was meant for the dying count. Once inside the walls, I stayed hidden in Anna's private quarters and taught her everything I knew. But even that wasn't enough to save her master.\n\n\"I should have returned to the woods then, but Anna begged me to stay. Tragically, I agreed. What I did not know then was that it was more than my healing powers that had driven the countess to seek me out.\n\n\"She'd heard tales of Matusa Ildiko since she was a child, including ones that said I never grew old. And when she saw me, saw how youthful I was, she knew the tales were true. She came to me after her husband's death and ordered me to share my secret, believing it was witchcraft that kept me young. I tried to deny it but she would not relent.\n\n\"Fearing the lengths Countess Bathory would go to for the secret of my immortality, I decided to return to my mountain home. Anna agreed, and surprised me by asking me to take her along. I knew that she had fallen in love with me, but I was surprised to find that I'd fallen in love with her too.\n\n\"We agreed to leave at first light and spent our last night in that castle together in her bed. I was nervous when she first touched me, but honestly believed that the witch's curse could only harm men. I have never been so wrong.\n\n\"I'd forgotten the witch's vow to destroy anyone I loved, and Anna was no exception. Her tongue had barely touched me when the curse surged through me, dooming her. I'll never forget the sound of her wailing, screaming as her life bled out of her. I was still holding her when the doors to the chamber burst open.\n\n\"The first person through was the countess and she screamed for her guards, ordering them to seize me. Knowing I couldn't risk being captured, I leapt out the window from a height that would have killed anyone. They must have been shocked when they searched for but never found my body.\n\n\"I ran back to the woods determined to hide forever, swearing that my curse would not claim any more victims. But I had no idea that the death toll at the castle had just begun.\n\n\"The countess, after discovering me covered in Anna's virgin blood, was convinced she'd uncovered the secret of my eternal youth. And it horrified me years later when I learned of her sadistic crimes. Heard how she bought young virgins from their peasant families with the promise of a better life, only to make them her victims, bathing in their blood in a misguided attempt to unlock my secret.\n\n\"I heard when they finally discovered the evil things she had done they walled her in alive in a tower in the castle and left her there to rot. But I couldn't take the chance that my curse would claim any more victims. I have stayed hidden in these mountains now for centuries, hoping to simply fade into legend.\"\n\nHer story had mesmerized me, but as I stared at her, huddled against the wall, I found it hard to picture her as the witch known as Matusa Ildiko. All I saw was the innocent girl who'd made the mistake of falling in love with the wrong man. \n\n\"Isn't there some way you can break the curse?\" I asked.\n\nShe nodded. \"It is the nature of a curse that the caster must always give the victim a chance to be free of it. And that was where the witch that cursed me was at her shrewdest, she said the curse could only be broken if a man that made love to me still loved me when his life was ended. But what man could possibly love a woman who would bring about his doom?\"\n\nI thought about the poacher in the woods and the blood-soaked circle around his lifeless corpse. And as I remembered the look of terror on his face I knew she was right -- the curse would never be broken.\n\nI'd been so absorbed in her tale that I'd almost forgotten about the cold. I was glad that I'd stopped shivering, but when I tried to stand I stumbled sideways and ended up sprawled across the cave floor. As I lay on the cold stone, wishing I could just go to sleep and wake up warm, I mumbled, \"It's so cold in here...\"\n\nMatusa Ildiko watched me, concern in her eyes. \"Even in ancient times this cave was known as a dangerous, accursed place. There is an unnatural coldness that pervades it, leading many superstitious villagers to believe it is a passage to the underworld. Others claim it is the lair of Bau-bau, and spin tales to keep their children far from here. Whatever the truth, one thing that is certain is all avoid it. That is why I often use it as one of my hiding places...and how I know it will be a long, long time before anyone discovers us here.\"\n\nThe cold had made my thoughts sluggish, but I glanced up at her as her words sunk in and she saw the slow realization in my eyes.\n\n\"You must have known that was the only reason I felt I could safely share my deepest secrets with you,\" she said. \"We both know you will never leave this cave alive.\"\n\n\"No...you're wrong,\" I mumbled, staggering to my feet. I tried to concentrate, but couldn't seem to make the words come out right. \"Out of here...have to...she needs me...my wife needs me.\"\n\nShe shook her head sadly. \"It is too late. The cold is already weakening you, slowing your breath, squeezing your heart. I have seen many before you succumb to it. I know how swiftly it can take a man's life.\"\n\nI shook my head again, starting to get angry. \"No, I won't give up...I won't!\" Her shawl had been little protection against the bone-numbing, ever-present cold, and I bitterly cast it aside.\n\nShe got down on her hands and knees and started crawling toward me. \"Let me warm you,\" she whispered, and a faint green glow appeared in her eyes.\n\nI stumbled backward, my legs starting to buckle beneath me. \"Please, I just want to be with my wife again.\"\n\n\"Don't you see?\" she said, still crawling toward me as her eyes glowed even brighter. \"I realize now that was why you were sent to find me. The gypsy was right.\"\n\n\"Wh -- what do you mean?\"\n\n\"She said that if you found me you and your wife would finally be together again. Your only mistake was thinking that she meant in the world of the living.\"\n\nMy eyes went wide with fear as the weight of her words sank in. \"No,\" I mumbled, shaking my head as I tried to think straight. \"I won't...not yet.\"\n\n\"Let me help you,\" she whispered. \"Freezing to death is a terrible way to die. Let me take away your pain.\"\n\n\"No,\" I whimpered, trying to back away from her. \n\n\"Let me take you to her. No one has walked the paths of the dead more often than I have. I promise you, journey with me there and you and your wife will finally be together again.\"\n\nI looked up at her, tears flowing across my numb, half-frozen cheeks, and whispered, \"That's all I want...just to be together with her again.\"\n\n\"Then make love to me,\" she said, and brushed her hand against my cheek to wipe away my tears. \n\nThe instant she touched me a supernatural heat surged through my veins, as if her touch had infected me with the same green flame that now blazed in her eyes. I knew it was the witch's curse and the cold that seemed to have frozen my very soul dissipated, replaced by a burning desire. I grabbed her hand and pressed it against my face, intoxicated by her touch.\n\n\"That's it,\" Matusa Ildiko whispered, \"do not fight it.\" As I watched, unable to look away, she used her other hand to slowly unwind the scarf covering her face.\n\nI'd half expected to see something terrible, a vision of death that had claimed innumerable victims. But the visage that greeted me was a tableau of innocence, a young girl just out of her teens with flawless skin and angelic features. Her dark, chestnut hair tumbled down around her shoulders, perfectly framing her heavenly face, while her haunting eyes smoldered with an unholy green fire.\n\nI couldn't help myself as I pulled her against me, crushing her lips against mine as her heat seared through me, burning the memory of her on my soul. And as I squeezed my eyes shut and felt her warm body against me, I couldn't help thinking how much her kiss reminded me of my wife's. And I imagined that it was her hair I was running my hand through, her back I was caressing.\n\nMatusa Ildiko broke the kiss with a gasp and I opened my eyes to her fiery gaze. \"Your love is so strong,\" she whispered, \"it is so beautiful. No one has ever been able to resist the curse like this before. I know you will not be able to hold out for long...and I know you could never love me when your heart so obviously belongs to another...but it has been so long since anyone has held me, has touched me like this. Try to hold on as long as you can.\"\n\nShe quickly stood and slid her dark dress down to the floor. Stepping out of it, she stood before me like a work of art, a statue of Venus come to life. But even that pale comparison couldn't capture her true essence, for she possessed the same wild, untamed beauty as her homeland.\n\nA hunger consumed me as I pulled her back down and she gasped as my mouth devoured her breast, her back arching as I tongued her nipple and roughly squeezed her ass.\n\n\"Please,\" she gasped, \"it has been so long. Try to hold on.\"\n\nAs I fumbled with my belt she tore open my shirt, planting passionate kisses on my chest. I kicked my pants off, the cold of the cave forgotten, and as she pulled me down to the floor I felt as if the most powerful drug in the world had me in its hold. My head swam as I fought to keep control, fought the urge to throw her hard to the cave floor and -- \n\n\"Do not give in!\" she whispered, as she pushed me onto my back and caressed my cheek. \"Think of your wife, her love will keep you strong.\"\n\nI nodded and squeezed my eyes tightly shut as I tried to picture my wife's face, wanting my last thought to be of her. But I was finding it harder and harder to concentrate as Matusa Ildiko slid her leg across mine, straddling me like she had in my dream. She guided me between her legs and sighed as I slid slowly inside her tight opening. \"Hold on,\" she moaned.\n\nA roar filled my ears like an inferno as she rode me, and I could feel the witch's curse hammering at me, trying to break my will. I tried to fight it, painfully biting my lip and keeping my eyes squeezed shut. But it didn't help. I could feel her soft hands on my chest, could feel her warm legs wrapped around me as her ass bounced lightly up and down on my thighs.\n\nAnd in my mind I imagined I was grabbing that shapely ass with both hands, slamming her up and down on my thick cock. Fucking her as hard as I could, hurting her -- \n\n\"Hold on! Please, hold on!\" she cried.\n\nI opened my eyes, the spell temporarily broken. She was still on top of me but my hands had moved, apparently of their own volition, to her ass. She threw her head back in ecstasy as I drove her up and down on my swollen shaft, her perfect breasts pushed forward as she savored the feel of her first true lover in more than a millennium.\n\n\"By the goddesses,\" she cried, \"it's been so long...it feels so good!\"\n\nShe smiled down at me and her eyes were like burning green pools of flame. And as I fell into them I heard a faint voice whispering above the roar, telling me it was time.\n\nHer smile faded. \"Hold on!\" she cried, but it was too late.\n\nI twisted around, and she groaned as I slammed her against the cold stone floor. My movements were beyond my control and I heard her whimper in fear as the curse took hold and the beast inside me took over.\n\nIt was like I was a prisoner in my own body, watching from within, but I can still remember the primal lust that overwhelmed me as I pinned her wrists above her head and hammered my cock in and out of her. She was writhing beneath me, pain and pleasure etched across her face as she bit her lip, trying to stifle a moan. But what I remember most was her eyes. Not how they pleaded with me to try to hang on for just one more delicious moment, but how they'd turned silvery-gray and haunting again. And I knew the witch's curse had won.\n\nIt didn't hurt when it happened. It just felt like there was a rubber band in my head and someone snapped it. And then it was over.\n\nThey say that when you die you're supposed to see a light or loved ones waiting for you, but I didn't see anything like that. For me there was just emptiness, like I was floating in some kind of limbo. And then I felt a familiar hand in mine. Matusa Ildiko was beside me.\n\n\"Are you dead, too?\" I said, but when I spoke it was like a whisper inside our heads. \n\n\"I die every time,\" she said with a sad smile, \"but my curse is that death won't keep me. Where you go I will not be able to follow.\"\n\n\"Then why are you here?\"\n\n\"Because I made you a promise,\" she said, and then moved her hand in front of us as if she was pulling back a curtain.\n\nOn the other side there were shadows, eerily familiar reminders of the world I'd left behind. And as we glided toward them, I realized that we were in a hospital room.\n\n\"I told you I would bring you to her,\" she whispered.\n\nI looked around the room and felt as if I was in a dream. My wife was in the hospital bed and I could see my sister and mother-in-law by her bedside, but they were like shadows and I knew that we were the ghosts there.\n\n\"Is she dead?\" I asked.\n\n\"Not yet, but she soon will be.\"\n\nI tried to move close to her, wanting to see her face, but Matusa Ildiko held me back.\n\n\"Wait, she is coming,\" she whispered.\n\nAs I watched I saw my wife's form start to shimmer and she seemed to change from shadow to solid, from gray to white, as if a veil was being removed. And I saw my mother-in-law stand in alarm, tears streaming down her face as she grasped her daughter's hand and pleaded with her to stay.\n\nAnd I saw my wife's eyes open, saw her turn to stare at me as if she could see me. \n\nI squeezed Matusa Ildiko's hand and she turned to me. \"What's wrong?\" she asked. \"Isn't this what you wanted, to be together again?\"\n\n\"Not like this,\" I cried. \"I don't want my wife to die!\"\n\nBut I knew it was too late. I saw him stepping from the shadows, his long vigil finally over. And as soon as I saw him I knew I'd seen him before. I'd seen him when he'd come to take my father. I'd seen him when he'd come to take my mother. And I'd seen him when he'd tried to take a red-haired little boy who'd refused to go without playing one last time. I knew the dark man well.\n\nI wanted to move. I wanted to stop him. But I didn't know how.\n\nAnd then Matusa Ildiko let go of my hand, brushing past me as she glided toward my wife. She reached her just in time and sprawled her body across her, embracing her as she shielded her from the dark man.\n\nHe hesitated at the sight of her and then slowly backed away, bound to honor the ancient pact he'd made with the witch who'd cursed her more than a millennium ago. And as he retreated I watched my wife's form fade from white to gray, from solid to shadow, and saw her mother's tears of joy as she embraced her daughter, once more in the world of the living, as doctors rushed to her bedside.\n\nAt that moment my heart filled with a love for Matusa Ildiko and what she'd done for my wife, and it was as great as any love I'd ever felt for another.\n\nShe glided back toward me, and when she reached me she cupped my face in her hands and smiled warmly. \"You have to go now. I can go no further. The dark man is waiting for you.\"\n\nAs she smiled at me, she tilted her head, peering into my eyes as if she didn't recognize the love she saw there. And then she felt a hand on her shoulder.\n\nShe spun around and saw him standing right behind her. The faceless man, dressed in black. She blinked at him in shock, amazed to finally feel his touch after seeking it for so many centuries. Then he embraced her and she gasped, realizing that the curse had finally been broken.\n\nMy love for her, even after she'd brought about my death, had unwound the witch's evil spell.\n\nThe dark man turned to go with Matusa Ildiko in his arms, and as they went she smiled back at me over his shoulder and I saw tears of happiness in her eyes. Her long wait was finally over.\n\nThey disappeared into the darkness, and then the shadows of the hospital faded away as if the curtain had fallen back. And I felt a chill, an unnatural bone-numbing chill.\n\n\"Michael!\" Wake up, Michael!\"\n\nI opened my eyes and gasped, the cold air stabbing into my lungs. Andrei was above me and I saw a sense of relief flood through him at the realization that I was alive.\n\n\"We have to get you out of here, Michael! I'm going to climb back up to the top. When I get there I will throw the rope back down, loop it under your arms and I will pull you up. Do you understand?\"\n\nI nodded, but I was finding it hard to concentrate. The cold was so intense that I felt as if even my brain had frozen. I watched numbly as Andrei climbed back up the rope he'd tied to a tree just outside the mouth of the cave. \n\nI couldn't believe I was alive. I felt my face, there was no blood. I looked around the cavern and didn't see Matusa Ildiko anywhere. For a second I wondered if it had been real. Maybe I'd fallen into the cave, hit my head and imagined the whole thing.\n\nBut as Andrei threw down the rope and I got ready for him to pull me up I felt something under my feet -- a black scarf.\n\nWhen I was back in the sunlight Andrei did first aid on me, warming me. He told me how he and others from his village had been searching the mountains all day looking for me, sure that I'd followed his grandmother into the woods. He told me he'd almost given up hope of finding me when something strange happened.\n\nHe said, \"I was heading back to see if the other searchers had found anything when I saw this young girl in a long white dress, like something they used to wear back in Roman times. I called to her but she didn't answer, she just beckoned for me to follow her. She led me here and, honestly, I would have never spotted the cave if she hadn't pointed it out and gone inside. But when I followed, you were the only one I saw. There was no one else in there. I know this sounds crazy, but...do you believe in ghosts?\"",
        "* * *\n\nI know I said at the start of the story that by the time you finished it I would have died, and I did. I just didn't stay dead. I'm not sure if it was because we'd broken the witch's curse that had killed me or because the dark man only had room for one more and, honestly, I didn't care. There was only one thing I wanted.\n\nI was back home by the next day and my wife, finally awake from her coma, cried tears of joy when she saw me.\n\n\"My mom told me where you went, said you swore you were going to find a way to wake me up. The doctors still can't figure out what happened. They say it's a miracle.\"\n\nI nodded my agreement as I held her hand and stroked her face. \"Do you remember anything?\"\n\n\"I remember thinking I saw you...like you were a ghost...and there was this beautiful girl with you. She held me...\"\n\nI smiled and whispered in her ear, \"You're not going to believe the story I've got to tell you.\"\n\nWe returned to Transylvania the next summer, and now every year we return to lend our support to Andrei and Adriana's efforts to preserve the ancient forests that were a lost, lonely girl's home for so many centuries. \n\nShe's gone now, but I know her spirit lives on. Not only in the hopes of young women who go to the forest to seek Matusa Ildiko's aid to send their wayward lovers back to them, or in the tales of a beautiful specter who guides travelers lost in the woods to safety, but forever in my heart.\n\n* * *\n\nThanks for taking the time to read my story. As mentioned it is an entry for the Halloween contest so, if you enjoyed it, please don't forget to vote! ~ Seanathon."
    ],
    "authorname": "Seanathon",
    "tags": [
        "ghost",
        "witch",
        "transylvania",
        "romance",
        "immortality",
        "curse",
        "gothic horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/beyond-the-forest"
}