{
    "title": "A New Way of Seeing Things Ch. 26",
    "pages": [
        "This story takes place in a fictional world with fictional people. Any similarities to people or things in the world we actually live in is coincidental.\n\n*****\n\nKD was on her way back to school well before her father's trucks were ready to depart that Monday morning. Gwen feared her daughter's subdued manner as she said her goodbyes was due to the secrets both exposed and shared during the weekend, and she worried that her newfound openness might left the young woman with a less than favorable view of her mother. Still, Gwen tried to fight down the pride and excitement she felt in being so open, and for not overreacting to the discoveries of her daughter's sexual side. \n\nThe Lady was not silent on the matter, warning that her own deviation from the path of propriety would only amplify the effect on her daughters. The realization that mother and daughters shared an interest in certain weaknesses of the flesh made Gwen wonder if she had somehow passed her long-suppressed depravity on to the next generation. The Slut's suggestion that Natalie's sexual mentoring of all three Nelson women had probably been more instrumental than anything Gwen might have contributed did little to silence the Lady. \n\nThe accusations of perversion also reminded Gwen she now had the house to herself again. The Slut had been busy ever since she had serviced Tim two nights ago, suggesting various activities for the couple to act out once they were alone while the Lady did her best to suppress the scenarios that involved anything outside of husband and wife in a darkened bedroom. \n\nOne of the Slut's ideas had involved giving the package delivery driver an accidental peek, something Gwen needed no help from the Lady rejecting, although her imagination conjured lurid possibilities as the van rumbled up the driveway. Instead, she greeted him in the same professional manner she always had, waiting until the sound of his truck accelerating up the road grew faint before making her way back to the house. \n\nGwen stopped inside the kitchen door and stripped down to bare skin, clothes carefully laid over a nearby chair. Satisfied, she looked out the window, then stepped back on to the deck. \n\nThe morning was overcast and the temperatures cooler than normal this time of year, her nipples almost painfully erect from the chill and the excitement. She knew the pool water was still warm; a quick trip up the hillock to her right would confirm that.  \n\nIt would also take her far away from her clothes, towel or any other form of cover should anyone choose that time to visit. The thought made her hesitate, and she spent some time absentmindedly poking through the flower beds around the house, itself a daring proposition given the distance she would have to cover to get to safety. The urge not to get caught fought with the thrill of it happening. \n\nGwen finally decided that delaying to act upon the dare she had issued herself was not going to make things any safer and hurried up the steps to the pool gate. She knew that if anyone were to pull into the yard now, her only hope would be to stay out of sight up here and hope they went away. \n\nThe swim was more of a completion of her self-challenge than necessity or desire. Although the thought of the rushing pool filter jet nearby briefly made her contemplate its use, the fact that KD had almost certainly done the same thing just hours before made the act seem more perverted than normal. Besides, she had other things waiting in her bedroom. She quickly exited the water and made her way back to the house, the chill air against her wet skin and the fear of being caught hastening her steps. \n\nHer pace slowed after she had made it to her bedroom and dried off. There was no question in her mind what was next. Gwen took two steps towards the closet, towards her toys, and stopped. \n\nNo, she decided. Not now, maybe later. The need to demonstrate that she still had her legendary self-control suddenly filled her. I'll run down to town first and pick up some things, and then maybe when I get back...\n\nDo it now AND do it later, the Slut urged, while the Lady applauded her denial of pleasure. The nude woman returned to the kitchen to collect her clothes and wandered back to the bedroom. \n\nWhat she had removed before her swim was laid on the bed as Gwen decided to select a new outfit for the trip. A pair of loose-legged shorts and a thin blouse, both purchases from her recent shopping excursion two towns over\u2014the image of the man watching her as she pretended to try them on flashed through her mind\u2014were selected. Panties and a bra were given much consideration but rejected, although a tank top was substituted as a compromise. Gwen slipped on a pair of sandals and made her way out of the house and into her truck. \n\nShe made all of her planned stops, ever alert for signs that the other shoppers or employees might be looking at her bare legs and arms with disapproval. Her breasts bounced under her top, but thankfully her remained hidden, and she swore she could feel the air conditioning making its way up to her bare sex. The pace slowed at the mall as she took her time in the lingerie section of Brazil, a store she had not been in since that day Natalie had selected her bikinis. Gwen took delight in discretely showing her interest in the racy selections public before finally settling on the purchase of some underwear that rivaled KD's in their brevity. The young salesperson eyed her as she approached, trying to make up her mind whether the customer in front of her was one of those women who thought she was still twenty-something. No, she decided, she might be older, but she'll look damn good in these. \n\nLong enough, Gwen declared as she took the bag from the smiling clerk. She had proven she could resist the perverted urges.\n\nGwen climbed into the cab of her truck and started the engine. Three spaces up, a slightly-overweight middle-aged man in a shirt and tie was pulling something out of the trunk of his sedan. She looked down at him from her perch, knowing that she had plenty of time to put the vehicle into gear and pull away before he crossed in front of her. Instead, she watched the balding man remove a bag and close the trunk lid. Her hand pushed up the loose leg of her shorts until she made contact with the bare skin at the junction of her thigh. Gwen was mortified to discover just how wet she was as a single finger slid up her cleft and began to circle her clit.\n\nThe man hurried past, unaware of what was happening in the truck. The thrill of touching herself with this stranger so near kept Gwen's finger busy until he was well out of sight. It was with great reluctance that she withdrew her hand and looked about for any other approaching passers-by, taking a moment to steady her breathing and let the air conditioning cool the flush she had developed. With no other shoppers to offer another performance to, Gwen dropped the truck into gear and pulled out. Her speed was watched diligently as she made her way home\u2014she was sure any police officer who stopped her would guess by sight and smell what had been happening in the truck.\n\nThe truck braked to a stop in front of the Nelson Plumbing workshop. Gwen reminded herself not to hurry as she climbed the stairs to her office, attempting to make up for her earlier lapse in self-control. There were several messages waiting; one in particular warned her of the return of one of the apprentices for extra parts. The news agitated the aroused woman; there was no way she could risk any \"alone time\" until after Andrew had returned and headed out again. In fact, it was probably best if he didn't see her in her current dress, either. Gwen grumbled as she made her way back to the house for more traditional wear, adding a bra this time to her jeans and long-sleeve blouse but still omitting panties as a small form of rebellion. \n\nGwen had the part waiting for the young apprentice as he pulled up twenty minutes later. His knowing smile made her feel as though she were being mentally undressed, and she irrationally regretted not having worn underwear. With a wave and that same cocky grin, he was gone again a moment later. The Lady was taken aback by his impudence, wondering if Tim should be told of their employee's surreptitious disrespect, while the Slut bemoaned the fact that Gwen could probably have made herself come and still been out here in time to meet the muscular young apprentice. \n\nWell, I've got plenty of time now, she mused. Between the vibrators and that impossibly large faux penis hiding in the closet, I probably won't last five minutes. She thought back to just how little effort it would have taken with just her finger in the mall parking lot. She probably wouldn't have even needed her toys...\n\nWhy even go back to the house? The thought of doing something so depraved right here in the office excited her, right where her employees had seen her so many times, and Gwen began to unbutton her blouse. It only took a moment to shed everything. Now what? She eyed the couch, but sat back down at her desk instead. Pushing the chair back, she hefted her feet on to the surface in front of her, slumped and gently reclined until she was looking at a spot far up the wall. Legs spread of their own accord as her hand made its way between them and the movie reel that held her fantasies came to life. \n\nThe bald man did not pass by the truck this time, instead reversing direction and coming back to the driver side door. Gwen could hear his voice, muffled by the metal and glass between them. \"I know what you're doing in there.\" She wasn't upset or embarrassed; instead she smiled to tell him he had guessed correctly and scooted over to the passenger side, her back against the opposite side, facing the driver's door he was even now opening. Gwen quickly peeled off her shorts and opened her legs. The man stared intently at the show while unzipping his fly and pulling out his already erect member. \"You got a pretty little cunt, lady,\" he grunted as his hand grasped his shaft. \n\n\"You can look, but you can't touch,\" she reminded him, although she knew she would be powerless to stop him if he wanted more. The man did not answer, his eyes glued to her sex where a finger was dancing on her clit while her other hand was pushing a digit into her opening. \"You have a very nice cock.\"\n\n\"You'd like it even more if it was buried inside ya,\" he muttered, but continued to stroke, not attempting to press his offer on her. Gwen was not ready to go that far, even in her fantasies. \"You're gonna make me come,\" he warned, and true to his word, a pearl-white fountain erupted from the tip of his length. The viscous stream did not land on the driver's seat as even in fantasy Gwen's orderly mind knew that would stain the fabric and be a pain to get out. Instead the jet arced impossibly high before landing on the hot pavement with an improbably audible plop and sizzle. Her world went gray as Gwen's orgasm rushed over her, and she briefly worried that she might pass out and be found here. Her body traded periods of rigidity with small convulsions, ears dimly aware of the squeak of the chair as her body twitched, until at last she was spent. She lay slumped there for some time, finger idly drawing lines from her sex to her breast, until reluctantly she rose and began to dress. The sound of a truck pulling into the driveway came to her over the drone of the air conditioner as she slipped on her sandals. \n\nSee? This is what happens when you become perverted, the Lady scolded. You get caught! What will Tim think? \n\nYou didn't get caught, the Slut laughed. You're dressed, and you've taken the edge off. What could be better? Except maybe getting caught? \n\nGwen ignored them both and moved to the stairs to see who had arrived. She was halfway down when Andrew came back in, the cocky grin replaced with a sheepish smile. \n\n\"Sorry, Mrs. Nelson, but I got halfway back to the job when I remembered that I forgot the bolts for the pump. Walt would have killed me if I came back without them.\" \n\n\"I suspect he would have,\" Gwen replied with a soft smile. \"Do you need help finding them?\"\n\n\"Oh no, I know exactly where they are. Are you alright? You look kinda, well, like hot and sweaty.\"\n\n\"I was moving some boxes, and the air conditioning isn't working so well,\" she lied. \"You sure you can find what you need?\"\n\nThe cocky grin returned. \"Oh, yes ma'am. You, uhh, need help with the boxes?\" \n\nGwen turned and headed back up the stairs, the Slut urging her to put on a show for the young man while the Lady dismissed the idea as dangerous. \"I'm fine, Andrew, thanks. You better get back to the jobsite before Walt does something to you that will require extra paperwork. I'll see you later.\" \n\n\"Yes ma'am.\" The young apprentice stood there, focused on her swaying bottom as she retreated to the second floor. Getting naked would cool you off, he thought as she disappeared. I'd kill to see what's under those jeans. Tim would probably do the killing, but it might be worth it to put my cock in her just one time. The thought of her naked and in incredibly lewd positions occupied him all the way back to town. \n\nThe week passed quickly. Gwen waited until all was quiet in the office before she went back to the house that Friday morning. Natalie would be arriving soon to ride before work; the heat had returned and clothing more appropriate for a sweaty trail ride were necessary. Anything other than jeans and riding boots was out of the question, but the denim shirt in her hand seemed excessive. A little too warm...It wasn't a few months ago, the Lady sneered, but it was not enough to stop Gwen from selecting a white tank-top instead. Not that you'll be wearing it five minutes up the hill, the Slut snickered, and Gwen knew that to be true. Her erect nipples rubbed against the thin fabric. \n\nAnd while I'm here, I might as well just move these to my nightstand, she told herself as she reached into the closet and removed her toys. They were there to stay; it would be easier to have them close to hand rather than having to mess up the closet getting to them. \n\nChange of clothing and nightstand rearrangement completed, Gwen headed out to the barn to begin the process of saddling Dart and Tigger. She momentarily froze halfway across the yard as the sound of a vehicle coming up the driveway reached her\u2014a quick glance down confirmed her top revealed more than she would want\u2014and then relaxed as Natalie came into view. The women excitedly hugged, her sister-in-law's hand rubbing Gwen's nearly naked back in an extremely friendly way, before the two women got the horses ready for their ride. As was usually the case, Natalie removed her shirt even while she was putting the finishing touches on the cinch of Tigger's saddle; her sister-in-law did the same before mounting Dart. \n\n\"So, are you ready for tomorrow night?\" Natalie asked excitedly before they had even reached the tree line. \n\n\"I suppose.\" \n\n\"That doesn't sound very promising. What's the matter?\"\n\n\"I don't know...what if he doesn't like the pictures? What if gets mad that another man saw me like that? And even Tim likes them, and he wants to...get intimate.. I'm sure the owners will guess what we did in our room! I won't be able to face them at breakfast!\"\n\nThe blonde woman laughed. \"You've come so far, but you still have a ways to go...he'll love the pictures, I'd bet my life on it. And it's not like you fucked Barry, you just showed him some tits and ass, maybe a little pussy.\" Gwen blushed at the coarse reminders and stared at the dirt path passing below her. \"As for Norman and Steven, honey, that's what happens at Inns. People get all romantic, sheets get messed up...as long as you're not hanging from the fixtures, they're going to do everything they can to make the magic happen. It goes a long way to getting repeat customers. You won't be the first girl to get laid in that bed. I was there before you, four times\u2014or was it five? Hell, if you're one of the first hundred then it's probably a new mattress!\" \n\n\"I guess...I've just always tried to keep that kind of thing discrete.\" \n\n\"Don't go to breakfast naked and you'll be fine. Speaking of which, what are you wearing for the unveiling?\"\n\n\"I hadn't really thought about it...\"\n\n\"Tim might get a kick out of it if you wear the outfit you did the first part of the shoot in. Bring his work shirt to recreate the second half after you've taken the edge off of him.\" \n\n\"But how will I change into it between dinner and...you know?\"\n\nNatalie rolled her eyes theatrically. \"Wear it under your dress, silly! Just change in the bathroom or something, tell him it's a surprise. Honestly, do I need to chaperone this thing so you two kids can properly get it on?\" \n\nThe idea of her sister-in-law in attendance, directing their lovemaking, struck Gwen as funny. The spell broken, she giggled and shook her head. \"No, we've done it before, remember? Two kids?\" \n\n\"Exactly my point! Only this time, you're not making babies, you're making the couple next door jealous!\"\n\nGwen giggled again despite the reminder their private time might not be so private. She had an image of her legs wrapped around Tim's waist, his body pressing her deep into that luxurious bed while he had is way with her. Maybe it could happen that way...\n\n\"So what were you talking to Barry about?\"\n\nNatalie whirled, her confident smile gone. \"Oh, uhh, well, yeah, that. See, Barry asked me to pose for him again a while back, and I finally made up my mind and told him I would.\" \n\n\"Really? What kind of photos?\" Gwen both guessed and hoped at the answer.\n\n\"Well...see, Barry does commission work, too. Sometimes people ask him for specific ...kinds of pictures...and he does his best to fulfill their request. Like this time, someone commissioned him for...an erotic piece.\" \n\nNatalie was relieved to see Gwen's reaction was one of interest rather than disgust. \"Oh my! So you're going to let a stranger see you...that way? Just how...erotic?\"\n\n\"From what he told me, it sounds like very. Tastefully done, of course,\" Natalie added hurriedly. \n\nI can't believe you said yes!\" Gwen lowered her voice. \"Does Adam know?\" \n\n\"He does,\" her sister-in-law answered just as quietly. \"He's OK with it.\"\n\n\"Well, I think you're very brave to be doing this!\"\n\nNatalie's smile returned. \"Brave, or stupid?\"\n\n\"Brave. It sounds very exciting. When is it going to happen?\"\n\n\"Sometime soon, according to Barry. Not quite sure yet.\"\n\nGwen smiled and looked up to the trail to where the picnic table clearing was just barely visible. \"Will I be able to see them after?\"\n\n\"Actually, I have a favor I'd like to ask you,\" her sister-in law replied as the two riders halted their horses and dismounted to stretch. \"I want you to be there. I think I'll need the support.\"\n\n\"I can't imagine you'd ever need support,\" Gwen laughed, \"especially from me. And besides, wouldn't you rather have Liz there? I mean, she said she's let him take pictures of her before, right? She'd be more used to this kind of thing?\" \n\nNatalie looked down at the ground. \"Liz is, uhhh, already going to be there. We're both going to be posing\u2014together.\" \n\n\"Oh...oh.\"\n\n\"Their eyes finally met. \"You're one of the strongest people I know. Please say you'll be there?\"\n\nGwen could see the plea was from the heart. Still, this was a most unusual request...\"if you want me to be there, of course I'll go with you.\" \n\nA look of relief swept over the blond, and the pair embraced, Gwen conscious of their bare breasts pressed into each other's flesh. \"Thank you so much. I owe you.\" \n\n\"How about letting me stay at your house if Tim throw me out after I give him my pictures?\"\n\nNatalie broke the embrace. \"Not a chance. Tim won't let you leave after he sees them.\" She looked up at the darkening sky. \"We may want to get back down to the house before it opens up.\"",
        "Despite a pace that had both women's chests bouncing wildly as they made their way down the path, they were five minutes too late to avoid getting soaked. Gwen eyed the driveway and yard nervously as they approached, not willing to stop and put on her wet shirt, but also not wanting to be seen topless. \n\n\"No swim today,\" Natalie observed after they had made the safety of the barn and began grooming their mounts. \"Not that we'd get any wetter. I'm not sure the rain takes out the smell of wet horse, though. Mind if I shower here before work?\"\n\n\"Of course not,\" Gwen replied as she hefted a saddle on to a nearby sawhorse. \"I was going to take one too.\" \n\nThe horses were taken care of and Natalie detoured to her SUV to grab a change of clothes as her sister-in-law hustled across the yard and into the kitchen. \"You can go first,\" Gwen called out over her shoulder on the way to the laundry room. \"You'll want to get out of those jeans.\" \n\n\"You should, too. We can share the shower, if you want. There's no reason one of us should have to wait.\" \n\nGwen returned to the kitchen to find Natalie waiting, an innocent smile on her sister-in-law's face. \"Uhh, I can wait...it might be a little tight in there.\"\n\n\"There's plenty of room! Between the size and all the nozzles and gadgets Tim built into that thing, I would have sworn you guys were having orgies in there if I didn't know conservative you were! More than enough room for the two of us\u2014c'mon!\" \n\nGwen blushed at both her mention of orgies and her seemingly long-lost propriety and followed the topless woman down the hall. A short time later two naked bodies were under the warm spray coming from multiple jets. She was unsure where this was heading, or where she hoped it was heading\u2014Natalie seemed more concerned with rinsing off and warming up and less concerned with the nude woman next to her. Instead, she closed her eyes and did her best to enjoy the warm water against her skin. \n\n\"Want me to wash your hair for you?\" Gwen opened her eyes to find Natalie holding the bottle of shampoo.\n\n\"Uh, OK, yeah, I guess...\"\n\n\"Turn around.\" She faced the faucet handles, the command bringing back memories of how Miss Ritter would roughly scrub her, as if trying to remove all traces of filth from a trail-ridden horse, before allowing her in the bedroom. The hands that began to lather and massage the shampoo into her scalp were different, though. They were gentle, sensuous; occasionally scratching gently over every part of her head, other times just fingertips languidly rubbing in concentric circles. Gwen was in heaven and found her knees turning to rubber. Although it lasted quite a long time, all too soon it was over.\n\n\"OK, rinse.\" Gwen shuffled forward until the spray that had been drumming on her breasts was now streaming through her hair. Natalie helped here as well, hands and fingers pushing the water through the strands, the soap leaving sudsy white trails down her sister-in-law's body. \n\n\"A lot easier than washing patients' hair,\" Natalie remarked as she returned to her own cleaning. \n\nGwen half-turned and looked back at her. \"Want me to do yours?\"\n\n\"I thought you'd never ask! Yes, please!\" she turned and handed the shampoo over her shoulder. Gwen squeezed some of the liquid into the palm of her hand and reached up to begin. While for some reason Miss Ritter had never included her own haircare in her student's routine, Gwen had certainly washed her daughter's hair enough when they were younger. But this was different. That had been all business and efficiency; this was...just different. She wanted to return the pleasure she had been given. \n\n\"Oh, yes,\" Natalie groaned. \"I looooove a good shampoo and scalp massage. So sensual.\" Her hand disappeared in front of her body and flattened against her crotch, shamelessly touching herself. \n\nGwen continued to work her fingers through the long blond hair while her sister-in-law pleasured herself, wondering if she would actually give herself an orgasm right where she stood. \n\n\"Whew!\" Natalie exclaimed and ducked forward under the spray, apparently short of the release Gwen had thought she was working up to. \"You give good scalp!\" The rest of the shower passed without incident as the women concentrated on themselves before turning off the water and stepping out of the stall. \n\n\"I shoulda asked while we were in there, but would you like a trim?\" Natalie asked as she toweled her hair. \"You've got a big night coming up tomorrow. You'll want to look your best, unless Tim likes the natural look.\" \n\nGwen glanced down self-consciously. \"Yes, I guess I should. Would you like one, too? It looks like you've been too busy to do yours recently.\"\n\nNatalie rubbed her hand through the thickening thatch and gave an embarrassed laugh. \"No, thanks, letting it grow out some...the guy who commissioned the stuff I'm modeling for likes Barry's subjects to have more of a natural look. It's one of the reasons we're going to wait a bit to do it\u2014Liz and I have to grow it out a little.\" \n\n\"Oh\u2014OK. I've never seen you like that,\" Gwen babbled as she gathered up the things needed for her own grooming. \n\n\"It's not going to be a jungle down there,\" Natalie said as the two women moved to the bedroom, \"just a little more like a...well-kept lawn.\" Gwen surprised herself at how nonchalantly she lay on the bed and spread as her sister-in-law sorted things out and began to work. \n\nIt only took a few moments, Gwen no longer surprised by the finger slowly pushing up her cleft, but startled when a pair of lips lightly made contact with the skin below the remaining patch of hair. As quickly as they touched, they were gone. \n\n\"All better,\" Natalie declared brightly as she rose. \"The big bad man looking for your kitty will have no problem finding it. Would you mind if I rub one out real quick?\"\n\nA confused look crossed Gwen's face. \"Excuse me?\" \n\nNatalie smiled weakly. \"Mind if I cum before work? I'll admit I'm a little nervous about posing for Barry, but to be honest, thinking about it gets me hot and bothered. And your shampoo didn't help.\" \n\nGwen quickly rolled off the bed. \"Sorry, sorry, of course,\" she blurted. \"Would you like some privacy?\" \n\nNatalie laughed. \"Did I need it last time? I'm going to get intimate on camera with another woman for a strange man. Privacy is not one of my greatest concerns. No, you're welcome to stay, or join in...unless last time freaked you out,\" she hurriedly added.\n\n\"No, no, I certainly understand what you mean about the shampoo\u2014it had the same effect on me, too. Did you want to use my, uhh, things?\"\n\n\"We can share,\" Natalie said with knowing smile. \n\nGwen turned and opened her nightstand drawer. \"Like before?\" she said while removing her toys. \n\nShe turned to find her sister-in-law already arranging the pillows. \"Sure, why not.\" Soon the two women were arranged feet to feet, both spread wide to the other's gaze. \n\n\"Mind if I use this first?\" Natalie asked as she picked up the dildo, while her finger casually stroked her puffy lips. \n\n\"No, please do,\" Gwen volunteered, ever the polite hostess, her eyes locked in on the scene before her. \n\n\"Thanks. We need to get you some more stuff so we don't have to share if we're gonna keep doing this,\" She suggested casually, as if she were talking about more wineglasses. The blonde settled back, closed her eyes, and began to work both vibrator and massive black cudgel. \n\nHer climb to orgasm was quick, one hand pushing the vibrator into her furrow while the other retreated to stroke stomach and breasts after planting the rubber cock inside of her. Gwen rose and kneeled between the twitching woman's legs, greedily taking in the scene of utter depravity. The twitching of Natalie's hips threatened to dislodge the mass of rubber forcing her lips apart. Gwen gingerly extended a finger and pushed on the flat base of the pole to imbed it more securely in her sister-in-law. \n\n\"Fuck me with it,\" the masturbating woman grunted through clamped jaws.\n\nGwen hesitated, unsure. Her finger was still extended holding the dildo in place. Natalie's hands were otherwise occupied, one on the rabbit, one on a breast.\n\n\"Fuck me with that thing!\" \n\nShe gently grasped the base with her fingertips and guided it further into her sister-in-law, stopping just short of the junction of her thigh.\n\n\"Harder!\" The urgency in the plea startled Gwen, and she quickly withdrew it until the bulbous head was beginning to slip past the engorged lips. Again she drove it forward, this time with more force, her hand stopping close enough to feel the heat of her sister-in-law's sex. Gwen grew bolder with each stroke as she tried to imitate Tim's thrusts when he was between her legs.\n\nNatalie's hand flew from her breast to capture the one holding the dildo and pushed both hard against her mound and lips. Gwen did not attempt to free herself, just holding still as the body her fingers were pressed against squirmed. Natalie shivered and shuddered and cried out for some time before going limp. \n\n\"Whooo, that was good!\" Her hand left Gwen's to lazily scratch her mons. The woman between her legs retreated, intent on giving her some space. \"Your turn. I wanna see you get off.\"\n\nGwen smiled and reclined, self-conscious over her display while her excitement at showing off fueled her arousal. She spread her legs and reached for her magic wand. The bulbous head had barely made contact with her clitoris when she felt the mattress shift as a body moved, and then the wetness of Natalie's sex was on her knee. She opened her eyes to see the woman astride her leg, dildo in hand. With a smile, she directed it forward until it touched Gwen's opening. \"Gentle, then hard?\" \n\nAgain Gwen looked confused. \"Sorry?\"\n\n\"Do you like to be fucked gently, then harder as you get closer to coming? Or do you like to let it just lie there and fill you up? Or would you rather not use it today?\" \n\nGwen resisted the urge to laugh at the absurdity of the menu choices. \"Uh, gentle, then hard?\" \n\n\"Okey-dokey!\" Her sister-in-law didn't move, looking down at her expectantly. Gwen slowly lowered the vibrator to her slit, looking up at Natalie as if for approval. In response, she felt the head of the faux penis begin to penetrate her. \n\nShe was acutely aware of the soft, hot wetness on her knee, rocking back in forth in time as the massive tool slid in and out of her. \"C'mon honey, show me how you come. Show me how you're gonna come for Tim tomorrow night after he gets his gift and fucks you silly. Are you gonna do it for him more than once? You know he's gonna for you every time he thinks of those pictures.\"\n\nHer focus was the image of she and her husband naked and entwined, his penis mimicking the one in her right now, testicles bumping up against her bum before withdrawing for another stroke. The vibrator's delightful tingling on her clit and mound only amplified the erotic thoughts. \n\nWith long-practiced control she managed to contain her urge to cry out as Natalie slammed the dildo into her sex with enough force to make her breasts jiggle as her orgasm began. She was only dimly aware of her sister-in-law grinding herself into her knee, then stiffening and moaning softly. \n\nGwen opened her eyes to see the same sleepy, contented look on her sister-in-law's face as she imagined on herself. Natalie fell over on her side and next to the recovering woman, leaving the giant cudgel where she had buried it. \"You're so cute when you come,\" she laughed softly. \"Like you're trying not to sneeze.\" \n\n\"I could use a nap,\" she continued without waiting for a response, \"but I really do have to get to work.\" She dressed while her sister-in-law, still nude, cleaned up the evidence of their afternoon together.\n\nNatalie was mildly surprised that a still-naked Gwen saw her off from the deck. \"Promise me you'll tell me every nasty little detail of your night at the inn?\" \n\n\"If you insist. And you'll tell me when you find out more about your modeling?\"\n\n\"You'll be one the first to know.\" The pair hugged as a long roll of thunder announced the imminent return of the rain. It also hid the approach of Ali's car, Gwen spotting the hood as it cleared the trees down by the workshop.\n\n\"Gotta go!\" she squeaked and retreated into the kitchen as Natalie went down to greet her niece. \n\nAlison could swear she saw a bare back and ass disappear into the house as she made the turn into the clearing. No, it couldn't have been. She rolled to a stop next to the scrubs-clad woman. \"Hi Aunt Natalie! Don't tell me you two went riding in this?\"\n\n\"We almost made it all the way without getting wet,\" she laughed. \"What brings you here?\"\n\n\"Oh, I know Mom likes to make sure I know where everything is when we watch the place. I just thought I'd drop in and get my marching orders. Hope I'm not interrupting anything?\" \n\n\"Nope, \"We just spent some time together after we dried off. And now I'm heading to work.\" \n\nAlison looked up at her. \"Hey Aunt Natalie, I wanted to say thanks\u2014Mom really needed someone like you. She seems to have opened up so much since you two started hanging out together.\" \n\nHer aunt smiled. You have no idea... \"No need to thank me. It's been fun opening her up.\" The first big drops of rain splattered on the wet grass. \"Gotta go. Talk you soon\u2014give me a call if you need anything this weekend?\" \n\nAlison smiled and hurried up to the safety of the kitchen. Opening her up? She smiled at her aunt's choice of words. That sounded like something Jason would say before he got all macho and fucked her. Her fully-dressed mother greeted her with a nervous smile."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "masturbation",
        "toys",
        "public",
        "sister-in-law",
        "shower"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-ch-26"
}