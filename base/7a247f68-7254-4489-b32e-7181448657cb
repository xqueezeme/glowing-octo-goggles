{
    "title": "Boss Nanny Ch. 15",
    "pages": [
        "The rain beat brutally against the windows as it fell in sheets from the dark and dreary morning sky. As much as Matt wanted to go back to sleep, curled against his warm and toasty boyfriend, he needed to get up. Seamus always beat him out of bed and Matt was determined to even the playing field.\n\nSliding out of bed like melted butter, Matt carefully grabbed the monitor and left the room. Since they didn't get everything cleaned before bed last night, he finished tidying the house while the coffee brewed.\n\nSocial media wasn't the end all be all. Matt had the usual platforms but wasn't active. He was more of a creeper, occasionally jumping on when he was bored. The last time he posted was when he graduated high school. Kase and Hilary had turned him on to a few interesting pages and now he found himself online more often.\n\nOne of those pages was livingtheloelife. Loe was this insanely hot guy who was capable of everything. He worked on his van, cooked gourmet meals, traveled, worked out, rock climbed, renovated his house, and so much more. He even had a weekly segment called homebody baristo where he made drinks at home.\n\nIt was so popular that Kase and Hilary had talked Denise into incorporating it as their weekly special. Loelife's Drink of the Week was always a hit at the cafe. Turns out that a smoking hot guy in his mid-twenties who did everything had a cult following in the 18-22 college age range. Who knew?\n\nMatt was watching Loe when Brad padded down the hall and straight to the kitchen. When he finished preparing his coffee in silence, he sat next to Matt and peered over his shoulder.\n\n\"What is that?\"\n\n\"Dr. Pepper, coconut creamer, and a splash of lime juice over ice.\"\n\n\"That can't be good.\"\n\n\"He knows what he's doing.\"\n\nBrad looked at Matt unbelievingly. Surely, there was no way that drink was good. Matt simply shrugged. To each their own.\n\nThey sat in silence, enjoying the dark morning and darker coffee.\n\n\"What time are you heading home?\" Matt asked.\n\n\"I'll stick around for lunch and then take off.\"\n\nMatt frowned. \"I have to work at eleven.\"\n\n\"Oh, well then, I can leave whenever.\"\n\nRemembering last night's conversation, Matt decided that lunch didn't have to be a bust. \"You should see if Seamus and Aidan want to have lunch. Maybe Seamus can take you to Cavalier's.\"\n\nBrad thought about it as he sipped his coffee. \"I think I'd enjoy that.\"\n\n\"Yes, definitely,\" Matt said with a little too much excitement. \"You should definitely ask Seamus to lunch.\"\n\nBrad looked at his son from the corner of his eye. \"Okay...\"\n\n\"Good, good.\"\n\nHe wanted to tell his dad everything, that way Brad could act accordingly. If Brad knew all about Seamus's shitty parents, his dad would definitely step up. But more than anything, Matt wanted their relationship to be organic.\n\nThe thought of his dad and his boyfriend bonding had him smiling so wide he couldn't drink his coffee. The sudden good mood didn't escape Brad. He brought the coffee to his lips and smiled. He didn't need to press. His son was happy and that was all he cared about.\n\nIt wasn't long before they saw the monitor light up as Aidan rustled around. Brad set his cup down to go get his grandson, but Matt put his hand out. \"Wait until he's ready.\"\n\nThey listened as Aidan became more and more active and vocal. Then there was grunting. What was Aidan up to?\n\nTurns out he was up to no good.\n\nThere was a weird noise coming from Aidan's room. It took a second for them to realize it was the door knob jiggling...\n\n\"You've got to be kidding me!\" Matt jumped up and went straight for Aidan's room. Knowing there was a chance Aidan was standing behind the door, Matt opened it slowly. Sure enough, there stood a little crazy haired, sleepy face boy with a larger-than-life smile.\n\nMatt picked Aidan up. \"What did you do?!\" Making Brad laugh from the sofa. \"This isn't funny,\" Matt shouted.\n\n\"It's a little funny.\"\n\n\"He just escaped from his crib!\"\n\nBrad laughed again and tried to high-five Aidan but Matt twirled the little guy out of reach. Aidan thought it was funny and started giggling.\n\nMatt glared at his dad. \"Don't encourage him.\"\n\n\"Oh, calm down. You weren't even a year when you crawled out of your crib for the first time. It's a rite of passage.\"\n\nMatt changed Aidan's soggy diaper and lectured him on all the reasons he shouldn't be getting out of his crib. Aidan didn't pay him any mind, which made Grandpa laugh even more. Then Seamus came out of the bedroom, looking like needed another thirty minutes. Too bad, this was Matt's chance. He needed an ally.\n\n\"Aidan crawled out of his crib this morning. Dad thinks it's funny but it's not. Right? Tell them it's not funny.\"\n\nSeamus gave Matt a sleepy smile then stole Aidan on his way to the kitchen. After giving him a couple morning kisses, he started quizzing the little guy. \"Did you get out of your crib this morning? (baby babble) Yeah? Why didn't you ask for help? (baby babble) No, for sure, I get it. You're right, you are a big boy.\"\n\nGrrr. Matt sat at the table and drilled holes in the back of Seamus's head. Aidan continued to talk back like it was the most serious conversation. All the while, Brad hid his smile behind his mug.\n\nOnce he and Aidan were situated at the table, Seamus continued. \"I don't think your dad is thrilled about it but I'll talk to him.\" He looked sympathetically at Matt. \"Aidan said he'll try and wait for us in the mornings, but he can't make any promises. He's eighteen months now and feels he's entitled to a little independence.\"\n\nMatt stood up and pointed his finger at three generations of traitors. \"I will not stand for this.\" He snatched Aidan from the table and marched him back to his room, where he plopped him back in the crib. \"You will sit here and think about what you've done.\"\n\nAidan smiled brightly and his eyes twinkled as Matt tried to punish him.\n\nMatt made sure to leave the door cracked.\n\nA minute later Aidan came walking out of the bedroom with a smile on his face and his hands in the air. Ta da!\n\nBrad and Seamus cheered him on while Matt threw his hands in the air. \"I don't have time for this kind of treason.\"\n\nMatt tickled Aidan's belly to let him know there were no hard feelings. Of course Matt loved him to the moon and back. It was just hard to accept that yesterday Aidan was a tiny baby who didn't have a personality and now he was walking, kind of talking, showing off, laughing, and seeking reactions from the group. He was full of life in a way that took Matt by surprise. He loved it. He loved Aidan.\n\nWhen Matt returned from getting dressed and ready for work, Seamus and Brad were smirking at him. \"I'm not talking to either of you.\" Matt said as he gave them the cold shoulder.\n\nHe heard some whispering, little footfalls, then a tug on his pants. Aidan wanted uppy. Matt could do nothing but caved to those blue eyes. He hefted him up and kissed his cheek. \"Why are you growing up so fast?\"\n\nAidan looked at him with big blue eyes.\n\n\"I know, I just wish you could stay small.\"\n\nAidan smiled and gave Matt a big, sloppy open mouth kiss.\n\n\"You could at least humor me so I'm not so sad.\"\n\nAidan gibbered away, then leaned his head on Matt's shoulder, making him melt right there. Brad and Seamus melted, too. Matt squeezed his lil brother in a big bear hug, then joined the others at the table. With Aidan's big boy grievances forgiven, they drank coffee and talked until Matt had to go to work.\n\nMatt tried to catch his dad's eye. He wanted to remind him about lunch with Seamus. As it was, the two were too busy chatting to notice Matt. Hell, Seamus barely looked up when Matt kissed his head before leaving for work. If he was going to be ignored, this was the best reason why.\n\n* * * * *\n\nKase and Hilary were at the cafe when he got there. He waved as he headed to the back to drop off his stuff. When he came back, Matt was still trying his apron when Kase handed him an iced drink.\n\n\"This week's special.\"\n\nMatt eyed the drink, slowly swirling it. The coconut cream slowly sank into the soda, mixing itself together. He took a sip and let the flavor sit on his tongue. It was surprisingly delicious. \"Wow, that's good. I wasn't sure when I saw it this morning, but yeah, I'd drink this.\"\n\nHilary closed her eyes and inhaled as she enjoyed every drop of hers. \"The man can't mess up. He's literal perfection.\"\n\nKase stared at her with one brow raised. \"He's also gay.\"\n\n\"So?\"\n\n\"So? What? Your perfect man is gay?\"\n\n\"I didn't say he was my perfect man. I said he was the perfect man. Even you have a crush on him.\"\n\n\"It's not a crush,\" Kase denied, sticking his tongue out and glaring at his coworker. \"Haven't you seen him rock climb? He's a beast.\"\n\n\"I've seen him rock climb, clean his house, work on his truck, go shopping, cook full on adulting meals, make cocktails, go swimming, workout\u2014\" Hilary listed.\n\n\"My point exactly.\"\n\nThey spent a good portion of the morning discussing livingtheloelife, his trailer renovation, and a few other notable projects he'd done in the past. When they finished discussing Mr. Perfect, Matt asked what they were planning on doing after graduation. Kase and Hilary were both business majors. Hilary wanted to be a CEO and Kase was using it as a fall back to his architecture degree.\n\n\"It's really sneaking up on us now, are you guys nervous?\"\n\nKase shook his head. \"Nah. I'm going to work with my dad. The plan was always for me to join after college and he has a good thing going.\"\n\nIt was Hilary's turn. \"They offered me a paid internship with Georgia-Pacific. I'm nervous about moving to Atlanta, but I think it will be a good starting point.\"\n\n\"Atlanta?\" Matt asked with a frown. \"That's far away.\"\n\nShe agreed. \"I know. I've never been that far from home and I'd have no friends, but hey, you gotta grow up, you know? At least you'll have a reason to visit.\"\n\n\"What about you?\" Kase asked Matt. \"What are you going to do?\"\n\nHe shrugged as if this wasn't a big deal and he hadn't been thinking about it lately. \"Seamus mentioned he might have a job for me. We haven't talked about it much, but I'm not uninterested.\"\n\nIt took a second but then Kase's eyes widened as something under the surface connected. \"That's who that was!\" He rushed to the dining room and searched the tables, flipping through newspaper after newspaper. When he couldn't find what he was looking for, he ran to the back. A few minutes later he came back holding the coveted newspaper above his head.\n\n\"The police log?\" Hilary asked as she tracked him across the cafe. \"Who looks at those anymore?\"\n\n\"Are you kidding? The police log is gold. You'd be surprised who you see in there.\"\n\nMatt watched as Kase searched the listing until he found what he was looking for. \"Mike Forte, arrested at 7:43am on charges of payroll fraud.\"\n\n\"Mike Forte?\" Hilary tapped her temple. \"Why is that familiar?\"\n\n\"He's the guy we email for paycheck stuff and whatever. He's the HR guy.\"\n\nKase and Hilary stood shoulder to shoulder and stood up at the same time as they looked to Matt for answers.\n\nMatt took a step back. \"Whoa. No, no, no, no.\"\n\n\"What is happening? Did he really steal money? Are you taking his job?\"\n\nMatt's heart raced as his friends stared him down. He didn't want to lie but he wasn't sure what he should say. He didn't think Seamus would care. It was in the police log, which was public record. It wasn't like they needed the gory details.\n\nHilary put her hands on her hips. \"Is this why you were off work for two weeks? What the hell is going on?\"\n\n\"Okay, yeah,\" he said, hushing them. \"Seamus suspected Mike was skimming. He asked me to take a look, so I did. There was definitely some shady stuff. They for sure have him on the payroll fraud, probably more. Seamus has a professional going through everything right now but it could take some time.\"\n\n\"Is Mike in jail?\"\n\nMatt shook his head. \"He was but now he's out on bail. If he serves more time, it won't be until we go to court.\"\n\n\"When will that be?\"\n\n\"No clue, but it could take a while.\"\n\n\"Enough time for him to move all the money he stole? How much are we talking?\"\n\n\"I'm sure once they can prove he had stolen money, they'll be able to track where it went. I don't know. As far as how much, I only went back a year and he easily stole over one-hundred thousand. In one year! We don't know how long he's been stealing. Maybe the whole time Kelly's been gone? My stomach hurts thinking of the damage he might've caused.\"\n\n\"This is crazy,\" Kase said with a little thrill in his voice. \"Do you think you'll take the job?\"\n\n\"I don't know. Like I said, it was brought up in passing and we haven't touched on it again. He has someone filling in for now and I have school until the end of May. He might not want to wait that long.\"\n\nKase and Hilary scoffed back and forth. Before they could put in their two cents as to why Seamus would wait a million years for Matt, a group of students came in. Then a few more. Before they knew it, they had a full on lunch rush that went nonstop for hours. When the dust settled and they caught up on cleaning and dishes, the conversation was all but forgotten.\n\nMatt was in the back working up a sweat as he sprayed the last of dishes. It wasn't his favorite job but he didn't hate it like the others did.\n\n\"Hey.\" Matt turned to see Seamus standing by the door, the correct door, smiling. \"Your dad is out front.\"\n\nSeamus looked damn good in jeans and a black winter jacket. His auburn hair was damp from the drizzle and his cheeks were flushed from the cold. Matt licked his lips, making his boyfriend laugh at his adolescent behavior. Seamus was amused and flattered, but shook his head as if Matt was an idiot and slipped out, leaving Matt alone with his dirty thoughts.\n\nWith a tote of clean dishes in hand, Matt went to the front. Kase was making his dad and Seamus the new special. Brad was still skeptical but patiently waited while Kase added a squirt of lime juice. He swished the drink the same way Matt had. Kase glanced at Matt and laughed. Some of the similarities between Matt and his dad were uncanny.\n\nJust like Matt, Brad's face morphed from apprehension to pleasant surprise. \"That is surprisingly good.\"\n\nSeamus agreed, though he'd drink just about anything without complaint.\n\nKase and Hilary threw their hands. How could everyone doubt their boi, livingtheloelife?\n\nBrad pulled out his phone. \"Who is this guy? I want to follow him.\"\n\nNow it was Matt who rolled his eyes. His dad did not have social media. Holy crap, his dad had social media. And not just Facebook like every other old person. If that weren't enough to knock Matt flat, Seamus pulled out his phone. His dad and boyfriend were friending each other.\n\nMatt stared at Seamus. \"You have Instagram?\"\n\n\"Yeah, I started following you last year, right around your birthday. You never followed back. Then again, your last post was a pair of Nike shoes you wore to your high school graduation.\"\n\nMatt pulled out his phone and searched the app. He didn't have a lot of followers, nor was he following many, but he would not let his friends, boyfriend, and dad be friends on social without him.\n\n\"Bradthedad? Seriously, Dad? That's terrible.\"\n\n\"Oh, and makessy is better?\"\n\n\"Hey, it was my nickname in high school.\"\n\n\"What? How?\"\n\n\"Ma, Matt. Kessy, Kessler. MaKessy\"\n\n\"How is that any different? Am I not Brad who happens to be a dad? AKA Brad the dad?\"\n\nMatt wanted to argue, but it really wasn't that big of a deal.\n\nOnce everyone cemented their relationships by being FBO (facebook official), Kase took it upon himself to make sure they were all following livingtheloelife. Kase also told Matt he had one week to post something new on his feed on or he'd do it for him.\n\nMatt took a second to glance at Seamus's page. The entire feed over the last year was exclusively Aidan plus one gym selfie. Which baffled Matt to no end. When did he have time for the gym?!\n\nHe loved that Seamus was sharing so many pictures of Aidan. It wasn't that he dubbed Seamus's feelings, he truly didn't, but it was just another confirmation and it made Matt feel really good.\n\nThey hung out for a minute longer, then Brad said something to Seamus and suddenly they were both getting ready to leave.\n\n\"Are you taking off now?\"\n\nBrad leaned in for a hug. \"Yeah, I need to head home. Thank you for having me. I had a great Christmas. Best I've had in years.\"\n\nSeamus got Aidan ready to go then said bye to Matt. As they left, Brad held the door open, then guided Seamus out with a hand between his shoulder blade. Matt smiled. There was a clear bond forming between the two.\n\nHe always had a good relationship with his dad, but it was better than ever before. He felt a stronger bond and a deeper connection. After losing his mom and taking on Aidan, he felt a new appreciation for his dad and all he did.\n\n* * * * *\n\nMatt stepped into the loft. Dinner was on the stove and Aidan was playing with toys. He hadn't even taken his jacket off when Seamus appeared out of nowhere and attacked him.\n\n\"Hello to you, too. What's got you so happy?\" Seamus was smiley and giddy as Matt hung his jacket by the door. When he finished, Seamus grabbed his hands and pulled him further into the loft.\n\n\"Your dad and I went to lunch, then took Aidan to the park. After Brad left, Aidan and I went to work for a bit, then came home,\" he said. \"It's been a good day.\"\n\n\"Well, it smells good.\"\n\n\"Pot roast. It's done if you're hungry.\" Seamus sat on the couch and pulled Matt until he was straddling him.\n\nIt was a long day and Matt was happy to relax on Seamus' lap. \"Tell me more about your day.\"\n\n\"It wasn't anything special. Your dad and I hung out after you left, then he invited me to lunch. It was nice. We talked about nothing and everything.\"\n\n\"Did you talk to him about the whole Mike thing?\"\n\nHe nodded and ran his hands under Matt's shirt and up his side. \"He gave me a whole new perspective. I feel less stressed about it. Actually, I feel kind of great.\"\n\n\"What'd he say?\"\n\n\"He told me that stressing over it wasn't going to change anything. The most important part is that Mike is out of my life. From here on out, the worst thing that can happen is that I don't recover a penny from him and none of the charges stick.\"\n\nMatt frowned. \"Yeah, but that's a shitty outcome.\"\n\n\"I agree, but I have you and Aidan. Your dad said to let it go, to move forward, focus on the good, and expect nothing from Mike.\" Seamus's eyes sparkled in a way Matt hadn't noticed before. They'd always been so gorgeously dark eyes he got lost in them, but they were different now. Carefree, joyful. \"Doesn't mean I won't do everything in my power to pin his ass to the wall. Brad just said there's bigger fish to fry, and he's right. I have a business to run and I need to focus on moving forward and building a team I can be proud of. One I trust. I've done what I can do regarding Mike. When the investigators finish, we'll go from there. I have to trust that my lawyer and the justice system will have my back. Until then, I can look ahead.\"\n\n\"I swear I've said some of this to you before.\"\n\n\"Yeah, but your dad presents it better.\"\n\n\"Ouch,\" he laughed.\n\nSeamus smiled with those damn twinkle eyes. \"No offense.\"\n\n\"Absolute offense taken.\"\n\nSeamus leaned up and kissed the wicked burn away.\n\n\"After your dad went home, Aidan and I stopped by the office and talked to Roberta. She recommended some changes. She mentioned that Mike had an insane workload and the whole minus the stealing he was doing a great job considering the workload, but recommended having more than one person moving forward.\"\n\n\"From what I saw, I definitely agree there should be a team.\"\n\nSeamus moved his hands to Matt's thighs. \"I was serious when I said I had a job for you. After you graduate, I'd like the three of us\u2014me, you, and Roberta\u2014to sit down and figure out a plan of action. I want you to be a part of that.\"",
        "\"Sometimes I worry you think too highly of me. I have no degree. What would I contribute to that pow-wow?\"\n\n\"You don't think enough of yourself. You're really fucking smart. I think you'd have a lot to contribute, and if you don't, you'll be there to learn. Whatever the case, I want you there at the inception of whatever changes are to be made. Only if you're interested.\"\n\n\"I'm interested,\" Matt rushed. \"Nervous\u2014but definitely interested. I have six months of school left. You don't think that will negatively affect anything?\"\n\n\"I wouldn't let it. But how would you feel about working part-time until then?\"\n\n\"I'm already working part-time at the cafe\u2014\" Matt leaned away. \"Oh.\" There were only a few months before Kase and Hilary moved away. If he quit now, he'd miss that time with them.\n\n\"You don't have to. It was just a thought. Even one or two half days would make a world of difference for the transition. And honestly, I'd feel so much better knowing you had eyes on everything.\"\n\n\"Even if I have no clue what I'm looking at?\"\n\n\"You know exactly what you're looking at.\"\n\nMatt closed his eyes and thought on it for a moment. He could work a little at the office and at the cafe. It was only six months. It wasn't like he'd be working more. He'd be spreading it out differently. And working for Seamus was long-term thinking. He would like to be involved from the start so he could learn from Roberta. That would give him a leg up.\n\nHe would need to think more on logistics but...\n\nYeah. \"I'm game.\"\n\n\"Yeah?\"\n\nMatt leaned down and kissed Seamus. \"Yeah.\"\n\nSeamus smiled and quickly pulled Matt down for a proper kiss which quickly turned into an improper kiss.\n\nBefore things got too far, a piercing scream cracked through the room. Matt startled so hard he almost fell to the floor. Something was wrong.\n\nAidan stood next to them, red faced and angry. He reached out and hit Matt's leg. He then hoisted himself onto the couch like a sealion and shoved Matt away from Seamus.\n\nRealizing it was just a case of jealousy, Matt laughed and kissed Seamus again.\n\nAidan covered Matt's mouth with both hands and shook his head. \"No.\"\n\nSeamus and Matt looked at each other, then burst into laughter.\n\n\"Excuse me lil man, this is my boyfriend and I can kiss him all I want.\" To prove his point, Matt leaned down and kissed said boyfriend.\n\nThat only stirred the pot. Angry Aidan hit Matt and cried out in frustration.\n\nMatt kissed Seamus again.\n\nKiss. Smack. Sass.\n\nKiss. Smack. Sass.\n\nMatt shouldn't have found so much joy in provoking his brother, but he did. Aidan had favored Seamus but not to the point where Matt couldn't even touch him. The sudden problem with the affection was hilarious.\n\nMatt spent the rest of the evening kissing Seamus just to upset Aidan. Was it mean? Maybe. Did Matt care? Not at all. He might be Aidan's guardian, but he was still a big brother at heart.\n\n* * * * *\n\nKase invited Matt out for New Years, but he declined. He was over feeling the need to 'be twenty-one'. He didn't like alcohol. Plus, their birthdays were coming up and he'd rather save himself for that.\n\nSeeing Kase and Hilary come in completely hungover only solidified Matt's decision. Matt had slept great and had all the energy in the world. He could not say the same for his friends.\n\n\"Yonks' not so terrible, now is he?\" Matt asked as he watched his friends struggle with work and, well, doing life in general.\n\nKase re-wiped the counter since it was one of a few tasks that didn't make him queasy. \"We never said he was terrible. He just has that weird eye thing.\"\n\n\"Weird eye thing or not, he covered your butts this morning.\"\n\nMatt continued to give his friends a hard time, luckily for them, it wasn't a busy day. Most people were still out of town for the holidays.\n\nMatt was about to let Kase go home early when the door chimed.\n\n\"Holy. Shit.\" Hilary and Kase stared at the door, stunned.\n\nJay, Seamus' friend\u2014not Kase's teammate\u2014stood at the door looking every bit the rich professional athlete he was. Designer jeans and jacket molded to his body perfectly, his hair was on point, and his useless-because-it's-winter sunglasses looked hella expensive as he pushed them on top of his head.\n\nJay looked around the cafe until he spotted Matt and then he smiled. \"Matt! Long time no see.\"\n\nMatt was a few beats behind on the bro-shake, but Jay didn't seem to care. When they finished, Matt studied Jay like he couldn't quite place his face. \"James? Jerry? Jim?\" Matt snapped his fingers in recognition. \"Jackson, with the big contract. How could I forget!\"\n\nJay looked downright offended. \"You wound me. You really wound me.\"\n\nMatt smiled proudly. \"I heard you had a game the other day. You guys won?\" Matt asked, then cringed because he really had no clue what he was talking about.\n\nJay laughed. \"C'mon, don't be like that. You can be nice to me, I won't tell Seamus.\"\n\n\"My alliance remains.\" Matt shrugged. There was nothing he could do.\n\n\"I had your back at the bar and this is how you repay me?\"\n\nMatt realized his friends were standing to the side, completely star-struck. \"Hey Jay, these are my friends Kase and Hilary.\" Jay reached a hand out. \"And this is Jay\u2014eh.\"\n\nJay glared at his best friend's shameless boyfriend. \"You don't know my last name?!\"\n\n\"Petermeyer,\" Kase said as he came out of his stupor and finally shook the athlete's hand. \"Jay Petermeyer. Holy shit. Matt, you know Jay Petermeyer?\"\n\n\"He's a friend of Seamus.\"\n\n\"Best friend,\" Jay corrected.\n\n\"Well, I wouldn't go that far.\"\n\nHilary took Jay's hand. \"Hilary. Matt's best friend. Nice to meet you.\"\n\nKase glared, not liking that intro one bit.\n\n\"Nice to meet you, Hilary. A friend of Matt's is a questionable character in my eye.\"\n\n\"Well, we're not best friends,\" she backtracked. \"Just regular friends. More like co-workers really. Kase though, Kase and Matt are super tight. Can hardly separate those two.\"\n\nKase mouthed some choice words to his dearest coworker. How dare she throw him under the bus.\n\nMatt too was about to tell her where she could shove their friendship when Jay continued.\n\n\"Good to know.\" He gave a kind smile for his new friend, Hilary, then turned back to Matt and ever so slightly turned his nose up. \"I actually came here to invite you and Seamus to the playoff game but I'm feeling very under appreciated.\"\n\n\"Oh, in that case, can I get you a drink?\" Matt smiled brightly, as if the threat meant something to him. Which it didn't. But he enjoyed the banter.\n\nJay crossed his arms and pouted. \"I don't know. What's good?\"\n\nMatt pointed to the sign on the counter that had the weekly special. \"This is a big hit.\"\n\n\"Loelife's Drink of the Week: Dr. Pepper, coconut cream, and lime juice?\" he read, then cringed. \"Pass. What else is there?\"\n\nMatt shook his head and started making the drink anyway. When he finished, he handed it over.\n\n\"What part of 'pass' did you not understand?\"\n\n\"Just trust me.\"\n\n\"I have no reason to trust you. You do not have my best interest at heart.\"\n\n\"Fair enough.\" Matt pointed at Kase. \"If you can't trust me, then trust him. He probably knows all your stats or whatever information will make you feel cared for.\"\n\nKase's eyes widened. Jay Petermeyer was looking at him, waiting for confirmation that he could drink what Matt was pushing on him.\n\n\"Yeah, it's really good. Definitely. You should drink it.\"\n\nJay studied Kase. \"How many sacks have I had this season?\"\n\n\"Seven, so far. Though you just celebrated a career one-hundred.\"\n\n\"Touchdowns?\"\n\n\"Two.\"\n\nJay nodded approvingly, then took a sip of the drink. \"Not bad, Kase. Not bad.\"\n\nMatt threw his hands in the air. It had been he who made the drink. But the look of delight on Kase's face was everything. Matt was about to ask what he was doing in town when the door chimed once more. Seamus did a double take. Apparently he didn't know Jay was in town, let alone at the cafe.\n\nJay gave his friend a hug, then stole Aidan.\n\n\"What is up my man?\" He tried to give the little guy a high five, but Aidan went shy and clammed up in Jay's arms. Jay was undeterred by the lack of warm welcome. \"Eh, it's fine. He'll love me in no time.\"\n\nThe only reaction they got from Aidan was when Seamus gave Matt a kiss. Aidan didn't like that.\n\n\"You tell em kiddo!\" Jay laughed. He clearly loved that Aidan was hating on Matt. Him and Seamus were laughing and about to sit at a table when Matt interrupted.\n\n\"You still need to pay for your drink. It's three-fifty.\" Yes, he was Seamus's friend, but that didn't mean he got special treatment.\n\nJay looked at Seamus. Is this for real?\n\nSeamus shrugged.\n\nThe player took his wallet out and grabbed a tenner.\n\nMatt looked at the ten then back at Jay. \"It's really nice that you were going to tip us each twenty big ones, you know, for introducing you to that bomb drink.\"\n\nJay burst out laughing. \"Twenty bones each? I'm not sure it was that good\u2014\" he pulled the bills from his wallet and slid them across the counter. \"Thanks for blowing my mind,\" he deadpanned.\n\nSeamus shot Matt a thumbs up, making Matt smile. His friends on the other hand stared at Matt like he was crazy cakes for sharking Jay Petermeyer the way he did.\n\n\"What?\" he asked as he folded the twenty and stuffed it in his wallet.\n\nHilary laughed. \"I can't believe you just did that.\"\n\nKase looked at his twenty in wonder. \"I'm going to frame this.\"\n\nJay held a still bashful Aidan as he told Seamus all about how Matt had burned him good when he arrived. It was a mixture of pouting and smiling. As hard as Jay tried, he couldn't deny he'd enjoyed their interaction.\n\nSeamus looked at Matt and grinned. Nothing better than hearing that your best friend and boyfriend were getting along.\n\nFuck, after the month they'd had, Matt would do anything to see Seamus smile like that."
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "love story",
        "gay romance",
        "dad",
        "boyfriend",
        "parents"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/boss-nanny-ch-15"
}