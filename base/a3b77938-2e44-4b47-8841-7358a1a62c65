{
    "title": "Pool Boy Ch. 32",
    "pages": [
        "There was a lot of conversation over Thanksgiving dinner at Emma's. There was a lot of news and there were a lot of bare feet and hands in crotches under the table and sultry looks across the table. Emma sat at one end of her long dining room table closest to the kitchen. Her daughters, Dee and Alexis were sitting beside her along each side. Jarrod sat beside Dee and Olivia was at the far end. Emma's seating cards had me in the middle on the other side between Alexis and Sophia and across from Jarrod but Sophia didn't want to let Alexis get that far away from her. So Sophia and I switched seats and Sophia sat across from Jarrod and I sat across from Olivia.\n\nWe hadn't even said \"Grace\" and filled our plates before Olivia had discarded her shoes and pushed her bare foot into my crotch under the table. I was startled and looked down at my lap. She had her heel on the front of my chair and her toes wiggled up and down on the fabric of my pants. I looked over at Olivia who had the most delicious smile on her face as she nonchalantly pushed her food laden fork between her lips. She made a sensuous show out of chewing her food and then licked her ruby-red lips in a most inviting way. I was trying hard to keep my cock in check but it steadily rose against the pressure of her toes. She grinned when she felt my cock push back.\n\nI looked into Sophia's lap to see if she was doing the same thing to Jarrod. She wasn't. She had her free hand up under Alexis' skirt. They were both trying hard to appear absolutely innocent as conversations continued and food was eaten. I continued my visual tour around the table to Emma. She saw me looking at her and she imperceptibly shook her head sending the clear message \"you guys are incorrigible\". I smiled and she smiled back as her fork disappeared between her lips. I continued my tour. Dee was talking non-stop and had barely touched her food. Emma and Alexis were supposedly listening to Dee but it was obvious to me that both were concentrating on other things. Jarrod lurched in his seat and glanced down to his lap. He turned to look at Olivia who was looking straight at me. The position of her free arm told me that she had her hand in Jarrod's crotch. Olivia's face was flushed red, which really showed like a beacon with her platinum blonde hair.\n\nI smiled again at Olivia and pushed a fork full of food into my mouth. Dee prattled on about her honeymoon. Everyone else, including Jarrod, was otherwise engaged and the conversations dwindled to a stop. Besides Dee's voice and the clinking of silverware on plates, the only sounds were those of an increased rate of breathing around the table. The whole scene was surreal. Everyone at the table except Dee was involved in something elicit and sexual. Even Emma, who wasn't physically involved, knew exactly what was going on at each seat and her face was flushed too.\n\nSuddenly, the entire table lurched slightly away from me. I looked to my right to see what happened. Alexis had surged forward and dropped her fork on the table as both hands grabbed the edge bracing herself. Her hips launched forward against the table again. She rocked back and her hips fired again. Her head hovered above her plate as her mouth hung open and a loud \"YYYUNNNNGGGG\" was forced from her throat. Her hips pivoted forward again. Her fingers gripped the table cloth and the next involuntary pulse pulled everyone's place-setting a couple of inches toward her. Everyone at the table lifted their utensils and Dee grabbed her water goblet before it went over. As evidenced by the look on Emma's face, she was not pleased. She didn't say anything though. No one did.\n\nAlexis rode out her orgasm as everyone watched in silence. Her face was flushed bright red from her sexual excitement and her embarrassment. Before Alexis started to recover, Sophia pulled her hand back to her lap like she was an innocent bystander. After more than two minutes, Alexis lifted her head and looked at me grinning at her. She grinned back and picked up her fork and continued eating. She was avoiding the death stare from her mother. \n\nConversations started again. Emma's stare, which had been directed at Alexis, shifted across the table. In my mind I could almost hear the whining of gears and machinery realigning her cross-hairs on Olivia. Olivia got the message and her arm pulled back from Jarrod's crotch to her own lap and her foot slipped out of mine to the floor. I smiled at Jarrod as he looked over at me. He mouthed the words, \"I love this family.\" I grinned and nodded my head. We finished our dinner without further incident.\n\nAlexis hastily requested that she be excused and Emma nodded. She hurried out of the dining room and was gone for five minutes before returning in different clothes. No one seemed to notice except Emma and me. Later Alexis explained that she'd had a mini-squirt along with her orgasm at the table and had soaked her skirt and the chair. She grinned broadly at me and said, \"It was fucking awesome. The whole scene; it was fucking awesome.\" \n\nI laughed and said, \"It was pretty hot. Your mom was definitely not pleased though.\"\n\nAlexis laughed and replied, \"I know. I apologized and went to clean up the chair before she found out about the squirt part but she had already done it.\"\n\nI said, \"You should know by now that there's no putting anything over on your mom.\" She giggled and nodded.\n\nAfter dinner, most of us retreated to the study to continue our visit. I still wanted to know how Olivia and Sophia's house-hunting was going and what about their husbands or ex-husbands. Emma had news from the trial of her ex-husband, Jim. We had to wait for it all as Emma, Olivia and Sophia all went back to the kitchen to clean up from dinner. \n\nAlexis asked Dee about her Honeymoon and Dee had an exasperated look on her face because now she knew that Alexis hadn't heard a word during dinner. Alexis looked confused about Dee's expression and shrugged her shoulders to indicate \"What?\" I explained that Dee had told us about their Honeymoon at dinner. Alexis looked a little sheepish and said, \"Sorry. I guess I was otherwise engaged at the moment.\" Everyone burst out laughing and Alexis' face flushed red again. Dee briefly explained that they had had a wonderful time and she would relate the juicy stuff to her later. Alexis smiled. She definitely wanted to know about the juicy stuff.\n\nAlexis started her long story about our adventures at College. Jarrod and Dee had already seen Alexis' face all over the news and every sports network and they wanted the \"Deets\", as Dee referred to the details. I had lived the story and I got up to see if I could be of any help in the kitchen.\n\nHalfway across the Foyer I heard Emma's trembling voice say, \"Oh fuck you guys. You're killing me here.\" I slowed my approach and stopped at the doorway from the Foyer into the kitchen. Emma had her back to the sink with her hands supporting her against the edge of the counter. Her skirt was pulled up to her waist and her panties were at her feet. Her eyes were closed so she didn't see me standing across the room. Sophia was squatting with her face in Emma's pussy. Emma's left leg was draped across Sophia's right shoulder. Both of them were softly moaning. Olivia had unbuttoned Emma's silk blouse and pushed her bra up above Emma's huge tits and was sucking on her nipples as she mashed them gently in her hands. Emma had one hand on Olivia's bare tits and the other on the back of Sophia's head guiding her face around in her pussy. \n\nMy cock went instant hard. I slowly unzipped my pants and pulled my rigid cock out and began stroking it slowly. The scene at the kitchen sink was incredibly hot. Watching these three hot women, experienced in the ways of lesbian sex, was so unbelievably sensuous and erotic. I had seen porno clips or movies trying to duplicate the eroticism that was on display right then, but none came close to this.\n\nEmma's entire weight was resting against the counter and standing on one leg, which began to tremble. I hadn't realized it at first, but Sophia had her left hand up under Olivia's skirt and her right hand buried in her own pussy. I thought Sophia's squatting position was a bit awkward and she wouldn't be able to sustain that position for very long, but she was wearing very high heels which allowed her to bend her knees to plant her ass comfortably on the back of her heels and ankles and she never moved a muscle except to drill her tongue into Emma's pussy and clitoris and to finger-fuck herself and Olivia.\n\nI was oblivious to anything other than these three gorgeous women so I didn't have any sensation that someone had walked up behind me, witnessed what I had been watching and took my cock from my hand and continued stroking it without breaking the rhythm. I turned to see Deirdre standing beside me with her hand giving me a reverse hand-job with her thumb flicking across my glans as her hand stroked the shaft. She didn't say anything and neither did I. We watched her step-mother with her best friends in the world enjoying each other for several minutes before Emma's hips snapped forward into Sophia's face forcing her back on her heels. Sophia didn't go down and neither did Emma. I had taken two steps further into the room in case Emma might fall. I pulled Dee with me. \n\nEmma groaned hard as her orgasm crashed over her. She was breathing very raggedly and very fast. She curled her fingers into Sophia's hair and pulled her head in further. Sophia was forced to abandon her own pussy to grab Emma's wrist to make her release her hair. She went right back to her pussy. Emma was losing control of her one leg but she couldn't get the other leg off Sophia's shoulder. She started to slide down the cabinet doors under the sink. It was a controlled slide so I didn't move to save her. Olivia and Sophia went right down with her. Sophia maneuvered Emma into a sixty-nine position so she could continue drilling her pussy and clitoris. Sophia's pussy was hovering above Emma's face but she was oblivious to it until she got some control back in her body. \n\nSophia's fingers came out of Olivia's pussy as they all went to the floor and now Olivia was frantic to find something to replace them. Emma was on her back with her tongue now working hard in Sophia's pussy and anus. She had her knees raised and spread wide to accommodate Sophia's face buried in her pussy as her orgasm driven hips continued to pulse. Olivia moved over to straddle Emma's left leg and started dry-humping her leg and knee. \n\nDee looked up at me as she stroked my cock and whispered, \"I think Olivia needs some help. Don't you?\" My heart was pounding so hard in my chest I was sure it would burst out through my ribs like the infant creature in the Alien movies. I wasn't sure how much I was going to be able to help Olivia. I was about to blow. Dee realized my condition and stopped stroking my cock. After a minute of concentrating on the origin of the universe, my orgasm receded. My cock was still bouncing hard. Dee put her hand in the small of my back and pushed me toward the writhing pile of bodies on the kitchen floor.\n\nI unbuckled my pants as I stepped forward. I stopped and let my pants fall to my feet. I pulled my feet free of them and left them there in a heap as I went to my knees straddling Emma's left leg behind Olivia ass. I didn't touch Olivia with my hands and she was unaware of my presence until my cock pushed up between her pussy and Emma's knee. She was startled by the intrusion and snapped her head around to see. \n\nOlivia's lips hung loose but her teeth were clamped shut. She was seething air through them. Her eyes pleaded to be pulled over the crest of her impending orgasm. She was so close. She didn't even slow her grinding motion on Emma's knee. She slowly turned her face back toward Sophia and Emma and raised her hips up like a dog in heat. Her back arched to enhance the invitation. \n\nI was apparently too slow in my response because Olivia's face turned back to me and in a demonic growl said, \"FUCK ME.\" OH GOD, I'M ALMOST THERE.\" I inched forward along Emma's leg and guided my cock into Olivia's soaking wet pussy. She screamed hard, \"AAAIIIIEEEEE,\" as I pushed past the entrance to her vagina. I slowed as the fattest part of my cock stretched her. She didn't want it slow and she slammed her ass back toward me and screamed again.\n\nIn less than a minute the kitchen was full of bodies; either on the floor in front of the sink or standing in the doorway summoned by Olivia's screams. Everyone on the floor except me was oblivious to the audience across the room. I smiled at Alexis as she was fumbling with Jarrod's zipper. Dee was unbuckling his pants. I was driving my cock hard into Olivia's pussy and Emma was just driving Sophia over the crest of her orgasm. The two of them were writhing together. \n\nEmma was trying to maneuver herself into a better angle at Sophia's pussy and anus but she couldn't because Olivia had a grip on her thigh to steady herself against my onslaught from behind. Olivia let out a wail announcing the arrival of her orgasm. She was slamming her ass back against me as hard as I was driving my cock forward. I grabbed her hips and bent forward and let my hands roam up her torso to grab her tits. She released one hand from Emma's thigh and grabbed my arm. She dug her fingernails into my bicep and brought blood as she clenched every muscle in her body and then heaved forward with a release. She loosened her grip but didn't let go. Her pussy clamped hard on my cock many times in quick succession. \n\nThe orgasm that I had successfully delayed when Dee stopped jerking me off was back with a vengeance and it would be delayed no longer. As my balls boiled over, every muscle in my body humped up and everything released as the first rope of cum exploded up my shaft into Olivia's pussy. Her vaginal clenches seemed to be milking my cock of every last drop. Her clenching went on after I was milked dry. My cock was still hard so I left it in Olivia's pussy to give it something to grab onto. Her head had collapsed down beside Sophia's head turned the opposite direction still drilling her tongue into Emma's pussy as Emma was now in another orgasm and had stopped her attack on Sophia's pussy. \n\nSophia was dragging her sex along Emma's face longing for attention. Her orgasm was close but Emma's conscious self had gone somewhere else. Sophia's face came up out of Emma's pussy and looked at Olivia with a pleading look on her face. Olivia was in no shape to help as she continued to ride out her own orgasm. I recognized the dilemma and eased my still hard cock from Olivia's pussy and moved around the pile of bodies behind Sophia's ass lifted in the air above Emma's face. I knew I could probably fuck Sophia all day after cumming only minutes ago. I guided my fatty to Sophia's pussy and eased it in. \n\nSophia didn't know that I was there until my glans touched her labia. She didn't know what it was and she didn't care. She launched her hips back into me embedding my cock to her depths. She screamed hard from the initial pain but that didn't even slow her down. She was driving her hips back at me. She lifted her head out of Emma's sex and looked back at me. She groaned, \"Oh fuck. Yessss. That's just what I needed.\"\n\nI stayed absolutely still and let Sophia fuck herself as hard or as soft as she wanted. It wasn't but a dozen strokes and her muscles seized and her pussy began clamping on my hard cock. I wondered if she would ever stop. Then I felt my balls being manipulated. It was Emma. She had fully recovered from her second or whatever orgasm and she was licking my balls and sucking them into her mouth. I pulled my cock back but not out of Sophia's pussy and looked down.\n\nEmma adjusted her position so she could see my face past my cock. She grinned, kissed my scrotum and said, \"I love your balls.\" She went back to sucking each one into her mouth and mauling it with her tongue. Sophia fell forward toward Emma's right leg beside Olivia, who hadn't moved as she was still recovering from her orgasm. They each had their heads in the other's midsection and they both started sucking on the other's tits. When Sophia slid forward, my cock pulled free and bobbed in the air above Emma's chin. \n\nI looked back across the kitchen to see Dee and Alexis on their knees in front of Jarrod as he was leaning against the counter. He had his hands on each of their heads as Alexis was deep-throating him and then Dee took her turn. They would each turn back to watch the festivities in front of the sink before turning back to Jarrod to take their turn. I had to chuckle. Jarrod was in absolute heaven and the look on his face confirmed that he knew it.\n\nEmma continued stretching up to suck on my balls. She really wanted to suck on my cock but there would need to be some major repositioning of bodies laying on top of her for that to happen. Alexis could clearly see my bouncing hard cock above her mother's face. She abandoned Jarrod's cock leaving it to his wife. She stripped out of her clothes as she traversed the kitchen floor and pushed her sex into my face as I knelt there on the floor behind Emma's head. \n\nI didn't hesitate and pushed my tongue into Alexis' pussy. She threw her head back and grabbed the back of my head to pull me in harder. I was content to drive her to orgasm just like that but she had other plans. She pulled back slightly to disengage from my tongue. Her feet were planted on either side of Emma's head and Alexis started bending her knees and sliding her hips down my torso until her sex was lined up with mine. I smiled at her when we were face to face and I understood what she was doing. Emma reached up to guide Alexis' hips into position and to help hold her there as she slid her pussy onto my cock. \n\nEmma now had two targets; my balls and Alexis' anus. She shared her attentions on both and Alexis was going absolutely nuts as she used her legs to push herself up and down my cock. I had my hands on her thighs to assist. Every time Alexis descended on my cock, Emma drove her tongue hard into Alexis' anus and Alexis yelped. When Alexis was pushing up my shaft, Emma went back to my balls. She was a busy lady.\n\nI glanced back across the kitchen and Jarrod had picked up Dee and set her naked ass on the counter that he had been leaning against. He was driving his cock hard into her pussy. He had her ankles on his shoulders and she was bent like a pretzel as he slammed his cock into her. Her facial muscles had contorted her expression into one of pure lust. Her eyes were wide open as her mouth hung open. If it wasn't for the situation, you'd swear she was in excruciating pain. In her position, she couldn't move at all and she just hung on to the back of her knees as Jarrod pounded her pussy. She noticed me looking at them and she eased the tension in her facial muscles enough to smile at me. Then Jarrod slammed his cock home again and she went back to her grimace.\n\nI turned my full attention back to Alexis who had stopped driving herself up and down my shaft and had settled down. She was gazing into my eyes and she leaned in and kissed me very passionately and then sucked my lower lip between her teeth. Emma apparently chose that moment to shove her tongue into Alexis' anus and she jerked and bit my lip hard enough to bring blood. I pulled my lip back and Alexis had a horrified look on her face as she realized what had happened. She leaned in again and kissed my lower lip and then licked blood off my chin and ran her tongue around her top lip.\n\nAlexis was able to maintain her position with the help of my hands holding her thighs and Emma's hands holding her ass-cheeks. She had her arms around my neck to help too. She grinned at me as she manually clamped her pussy on my shaft and I responded by flexing my cock. We had done this many times. Emma enhanced the action with her lips on my balls and her tongue working Alexis' anus.",
        "Dee had begun a constant moan, \"AAAAAHHHHHHHH,\" with sudden interruptions coinciding with Jarrod's hard thrusts into her. A low pitched groan was coming from Jarrod's throat too. Olivia and Sophia had rolled off Emma's legs and they had positioned themselves sitting on the tile floor beneath the sink leaned against the cabinet doors. Their fingers were strumming the other's pussies as they watched Jarrod fucking Dee on the counter across the kitchen and Emma, Alexis and me doing whatever it was we were doing. Emma was relieved to have circulation back in her legs and she flexed her knees and straightened out her legs and returned to the more comfortable knees raised position.\n\nJarrod let out a loud groan and he humped up and thrust his hips hard repeatedly as Dee emitted a blood-curdling scream that got everyone's attention including Alexis' and mine. Dee was trying hard to rock her hips into Jarrod. Her orgasm was involuntarily forcing her to do that. Alexis and I went back to our own pleasure.\n\nJarrod shrugged Dee's ankles from his shoulder and her legs dropped like wet rags down the front of the cabinets below the counter-top. Jarrod had stopped thrusting his hips as he was apparently drained of his jizz. With Dee's released legs dangling, she was now able to rock her hips to ride out the remainder of her orgasm. \n\nTwo minutes later, Alexis started a low pitched continuous moan that steadily grew louder and higher pitched. She was responding to my hardening cock driven by my approaching orgasm. Her eyes went wide as it grew harder. Emma drove her tongue up into her anus and she screamed as her orgasm crushed her. Neither I nor Emma could hold her anymore as she thrashed around on my cock as I exploded cum into her. Emma and I gently moved Alexis off Emma's face and off my cock. I set her down on her side. Her pussy was grabbing at air and she shoved her fingers inside.\n\nEmma rolled over on her side and saw that cum was still oozing from my cock. She scooched her body over to me and shoved her lips over my glans and let whatever cum remained to fill her mouth. When she was satisfied that I was done, she pulled her lips off and opened her mouth as she pushed cum out on her lips for a moment. Some drooled down her chin the rest was sucked back into her mouth. She swished it around with her tongue and swallowed with a gulp. She looked into my eyes as I smiled down at her and opened her empty mouth again and stuck out her tongue.\n\nAlexis continued to groan as her hips pulsed randomly. She had curled up in a fetal position and I went down to the floor to spoon in behind her. Jarrod had pulled his expended cock from Dee and was leaning back against the counter again with his flagging dick now pointing at the floor. Dee had recovered from her orgasm and pushed herself off the counter and moved across the tiled floor to cuddle with Emma. \n\nOlivia and Sophia were recovering from their pair of mini-orgasms. They had trembled a little and their pussies clenched gently on the other's fingers for a few moments but there were no muscle clamping and other obvious indications that they'd had one. They were now just sitting there side by side licking their own fingers. \n\nI thought, 'This is an odd spot for an orgy to spontaneously erupt. A hard tile floor and granite counter-tops were not very comfortable. I guess the keyword was 'spontaneous' which implied that it happens where it happens.' \n\nWe all got ourselves up off the floor and Emma got her \"Swiffer-Mop\" out of the broom closet and 'swiffered' the floor clean of various bodily fluids. Dee cleaned the counter where Jarrod's jizz had oozed out of her pussy. Emma, Olivia and Sophia had never even made it to the sink full of pots and pans so they went back to the sink to finish the job that they had come out here to do an hour ago. Alexis, Dee, Jarrod and I redressed and returned to the Study.\n\nWhen we were all congregated in the study again Emma wanted Olivia and Sophia to relate the latest news on the sale of their houses and their search for a single replacement for them both. Emma was excited so the rest of us were on the edge of our seats. Olivia looked at Sophia. They both had huge grins on their faces. Sophia nodded at Olivia and she turned back to our expectant faces and started, \"We both have our houses under contract. The selling prices were in between what we hoped to get and what the realtor told us we could get based on \"comps\".\n\nSophia jumped in and said, \"We are very happy with the money because we got more that we need to buy a place in the city.\" Sophia turned to look at Dee's excited face and said, \"We went and looked at the Penthouse in the same building as your apartment. It was incredible. It was......\"\n\nOlivia was about to burst and she stole the floor from Sophia, \"It was everything we had talked about as a dream home for the two of us. It's big enough for us to have privacy if we want. It has five bedrooms, each with its own bathroom. The view of the City is incomparable. It's right in the middle of the city. It's....\"\n\nSophia was waiting for even a hint of a pause from Olivia and she took over the conversation with the punch line, \"And it's ours.\" Olivia frowned a little because she so wanted to drop the bombshell herself. When everyone burst out our seats with excitement to hug and kiss Sophia and Olivia, she was as excited as everyone else. Emma obviously already knew because she sat were she was and beamed a huge smile. \n\nOlivia and Sophia were so happy with this turn in their lives. Sophia's divorce from Paul had been finalized and she was getting a pretty hefty settlement. She was set for life. Olivia's signed divorce papers were in the mail and she had fared even better. The negotiations with Ron were difficult and Olivia paid a toll from the stress, but that was behind her now. I was so happy for them and now I knew just where to find them.\n\nAfter the excitement settled down and before conversations started up again, Emma stood up and said that she had an announcement too. Alexis and I looked at each other to see if either of us had had any inkling of what this may be about. I shrugged my shoulders. She did the same and we turned back to Emma who was now grinning at us. I thought, 'WTF'. Emma turned and looked at Dee who had a huge grin on her face so she obviously knew what this was about. Jarrod's face revealed nothing. Olivia and Sophia had confused looks on their faces to match mine and Alexis'.\n\nEmma looked back at Alexis and said, \"I'm sure you aren't aware of this but the condo apartment that Dee has occupied for several years now in the City isn't hers. Jim bought it years ago as an investment and to have as a place to stay when he had to stay in the City. Well, now that Dee isn't using it anymore, I'm turning it over to you.\"\n\nAlexis' eyes went wide and both hands covered her mouth. She tried to say something but nothing came out. Tears welled in her eyes. She turned to me and threw her arms around my neck and let out a scream that nearly deafened me. The others laughed at Alexis' response and everyone was on their feet again giving out hugs and kisses. I looked over the crowd toward Emma and mouthed the words, \"Thank You.\" She threw me an air-kiss and I sent one back.\n\nDee pushed through the crowd and reached her hand out to Alexis and dropped a set of keys into her hand. Alexis bent slightly and threw her arms around her sister's neck and kissed her. Olivia and Sophia yielded to the sisterly embrace and descended on me. I savored the sensation of their tits pressing against me.\n\nOlivia said, \"Well look at that. We're neighbors.\"\n\nSophia stretched up and kissed me and said, \"We'll expect frequent visits from both of you when you are in town.\"\n\nJarrod stuck his hand through the melee and shook my hand. With a smile on his face, he said, \"We're only fifteen minutes away.\" I smiled and pulled him through for a big man-hug. He reciprocated.\n\nWhen the excitement settled down again and we had all taken our seats, Emma stood up again and said she had another announcement to make. She glanced down at Dee and Jarrod and now both of them were beaming broad smiles. Emma said, \"The past few months have been very depressing for me. Enduring this trial thing with Jim has been hard. At the same time my daughter, Dee gets married and now has a life of her own to live. Then my daughter, Alexis goes off to college with her fianc\u00e9 with whom I have grown very fond. Now to cap it off, my only friends in the world are moving away. I tried to keep my depression to myself but Dee knew something was up and I confided in her about my despondency.\"\n\nJarrod stood up beside Emma and put his arm around her waist and said, \"Mom. Let me tell them.\" Emma nodded and kissed him on the cheek. Jarrod looked at all of our confused faces for a moment and said, \"Since everyone is going to be in the City, Emma is putting this house on the market and moving into our 'Guest House'.\" \n\nWe were stunned for a moment and then we all burst out of our seats again and flooded Emma with hugs and kisses. She was beaming with joy. Tears burst from her eyes and ran down the side of her nose. She was surrounded by her family and friends and we would all be close by in the future. Dee came to stand beside Emma. She was beaming with joy too. Emma was only her step-mother but they had always been as close as Emma and Alexis.\n\nWe had stayed away from the booze tonight but now seemed like the perfect time and occasion for a round of drinks. The ladies made their own mixed drinks and Jarrod and I each had a beer. Emma made a toast about friends and family and we all raised our cans and glasses. Everyone hugged and kissed everyone else. Jarrod and I left out the kisses and got another beer. The ladies had another round of drinks and we were getting well on our way toward another night of inebriation.\n\nJarrod and Olivia were sitting together on a loveseat chatting away. I noticed that Jarrod couldn't take his eyes off her tits. Hell, I never could either. Olivia was flirting hard. The only thing of Jarrod that she'd had so far was her hand in his pants at dinner and apparently she liked what she felt there. Dee was sitting on a long sofa with Sophia who obviously had designs on her. Sophia's hands kept touching Dee on the thigh or shoulder. Dee seemed oblivious to Sophia's advances. She ignored the touching and gabbed away nonstop. Alexis was in my lap observing the others and we were betting on who was going to bed with who. Emma sat in a chair beside us and got in on the betting too. \n\nWe decided that we could only choose one coupling to bet on. We excluded ourselves and included Emma. Emma excluded herself because she said she already knew where she would be sleeping tonight. I bet on Olivia and Jarrod. Alexis bet on Sophia and Dee. Emma bet on Jarrod and Dee. Then we had to wait to see what happened. I grabbed another beer and made a drink for Alexis and Emma. \n\nIt turned out that we were all wrong and we were all right. Jarrod stood and offered his hand to Dee and pulled her out of her seat. It was looking like Emma was going to win. Then Dee took Sophia's hand and pulled her up as Jarrod took Olivia's hand and pulled her up. They all kissed and turned to us and excused themselves and headed hand-in-hand up the stairs. We said \"good night\" and watched them go. I turned to Alexis and Emma and said, \"Well, I guess we all won. What were we betting with anyway?\"\n\nEmma didn't hesitate with her response, \"A night of shared bliss,\" she said. Alexis giggled and said, \"No fair. This was rigged. You said you already knew where you were sleeping before we bet. You set that all up didn't you?\"\n\nEmma laughed and said, \"No. Really. I didn't set it up. I just said I knew where I was sleeping tonight. I didn't elaborate on who I'd be sleeping with. So know we know. We all won the big prize and you both know there is plenty of room in my bed for the three of us. So, what are we waiting for?\" Alexis smiled at me. I was grinning so hard I thought my cheeks would crack. I was all in.\n\nWe carried the empty glasses and beer cans to the kitchen and placed them on the counter to be dealt with tomorrow. As we were going up the stairs we could clearly hear moaning coming from Dee's bedroom. Emma had arranged for Olivia and Sophia to stay the night in separate guest rooms even though she was sure they wouldn't be using them. We stopped at the top of the stairs to see if we could tell who the moaning was coming from. I smiled to myself; the moaning was coming from Jarrod. From my experiences with the three women he was in bed with right now, he was in heaven and it sure sounded like it.\n\nAlexis couldn't stand it and she went to the door and carefully turned the doorknob. She slowly pushed the door into the room. Emma and I couldn't stand it either, so we all looked through the open crack too. Dee was on her back on the floor at the foot of the bed. Olivia was perched above her in a sixty-nine position. Jarrod was driving his cock into Olivia's pussy in a doggy position as Dee drilled her tongue on Olivia's clitoris and flicked it on Jarrod's balls when they came in range. Sophia straddled Olivia's hips facing Jarrod and he was bent forward tongue-fucking her. Sophia used her hands to spread her labia and flick her fingertip on her clit as Jarrod's tongue drilled her pussy. \n\nAlexis eased the door closed and released the doorknob. My cock was insanely hard from the scene we had just witnessed. I would have loved to get in the middle of that pile. Emma reached down and put her hand on the front of my pants and grinned at me. Alexis said to her mother, \"Is he sufficiently aroused?\"\n\nEmma decided to tease me a little and said, \"He'll do, I think. If not, we know where there's another one.\" Alexis giggled and lead us down the hall to Emma's bedroom. Emma had a grip on my buckle pulling me behind her. \n\nIn Emma's bedroom I sat in a chair by the door with my cock in my hand watching them standing in the middle of the room undressing each other. It was a very sensuous scene as they both started slowly and gently caressing the other's naked skin as it became exposed. Emma maintained her patience and took her time. She was driving Alexis absolutely nuts. Alexis' slow, sensuous start morphed into an urgency that was the exact opposite. She wanted desperately to get to the 'Good Stuff'; to the destination. Emma was enjoying the ride. \n\nWhen they were both naked, they embraced each other with such passion that I was certain that I was going to cum just from watching them. They separated and kissed again with less passion. They both turned to look at me sitting in the chair by the door stroking on my granite hard cock. Emma leaned in to Alexis' ear and whispered something. They separated and Emma turned on a lamp by the bed. She pulled out a red silk scarf and draped it over the shade and then walked to the door and flicked off the overhead light. The room was bathed in a dim, blood red light.\n\nAlexis came over to me and pulled me up from the chair. She pressed her naked breast against me and kissed me very hard with open mouth and tongue. As she was doing that, she unbuckled my pants and let them fall to the floor. She pulled back from me and unbuttoned my shirt. I shrugged it off my shoulders and it went to the floor beside my pants. Alexis pushed back into me and dragged her nipples across my bare chest as she lightly bit my lower lip. I pulled away and she giggled. She dragged her tits down my torso and pressed my cock between them as she descended. On her knees, she kissed my bouncing glans as she untied my shoes and I kicked them off. I stepped out of them and let Alexis pull off my socks as she sucked my glans onto her lips. \n\nEmma came over and pushed her huge tits against me as she stretched up to kiss me. She glanced down to see Alexis' lips stretched in a thin white line across the tip of my cock. Emma set her hand on Alexis' shoulder and Alexis disengaged and stood up. Not a word was spoken as they led me by each hand to the bed. Emma had pulled back the covers and top-sheet and Alexis led the way onto the bed. As expected I was in the middle and Emma slid in behind me. My heart was pounding out of my chest with anticipation.\n\nAlexis crawled up under my right arm and pushed her tits against my right side. Emma did the same on my left side. Whatever one of them did the other followed suit. Alexis sucked on one nipple and Emma sucked on the other. Alexis stroked my hard cock from the glans to halfway down my shaft and Emma stroked the other half. \n\nScreams and groans from Dee's room could be clearly heard. Emma dragged her tits down my side as she took up a new position with her head on my left hip. She guided my cock and Alexis' hand to her lips and pushed her lips down the shaft displacing Alexis' hand. Alexis pushed herself down my body so her head rested on my right hip. Emma started with her patented throat-fuck and I groaned out loud, \"AAAHHHHH. AHHHHHHH.\" \n\nEmma pulled back and relinquished possession to Alexis, who did the same as Emma and throat-fucked me for nearly a minute before she had to come up for air. Emma was grinning proudly at Alexis' mastery of this technique. I moaned, \"OH FUCK BABE. INCREDIBLE.\" My hips pushed up in response. Alexis pulled back and handed me back to Emma who started a regular blowjob that dropped her lips all the way to my balls and then back up to the ridge of my glans. I groaned again. Emma made a dozen cycles and passed me back to Alexis, who did the same thing for another dozen cycles. While Alexis was giving a wonderful blowjob, Emma maneuvered lower and sucked my left testicle between her lips. Alexis changed up her attack by jerking me off with her right hand as she vigorously sucked my cock. I couldn't hold back any longer and I launched my hips up to push my cock deep into Alexis' mouth. \n\nShe knew what was happening and she took all of me. Emma giggled as my orgasm's affect on my balls pulled my testicle from her mouth. She was just watching now as Alexis received stream after stream of cum. Alexis motioned for Emma to move in and she did. After four long hard ropes of cum, Alexis pulled off and Emma shoved her mouth on. She figured I was nearly done so she didn't try to swallow it as she received it. I smiled when I saw her eyes go wide and her cheeks bulged. Alexis still had a mouthful so she couldn't help. Suddenly, Emma gagged and pulled her lips over the ridge and pressed them to the 'eye'. She gagged again and a stream of cum blew out of her nose. Alexis exploded in laughter and the cum in her mouth blew all over Emma's face. Emma didn't disengage. She cleared her throat and when she was sure I was done, she pulled off. Cum drooled from her lips and down her chin. Her face was covered and a long thread of cum connected her nose to my glans. \n\nEmma cleared her throat again and started laughing which got Alexis going too. Alexis stretched across my body and started licking Emma's face clean. She shared what she collected with an eager Emma. After a couple minutes, Emma sat up by my left hip and said, \"Okay; now that we have the preliminaries out of the way.\" She was already vigorously jerking me off again. Alexis was up for anything that Emma could conceive of and I was up for anything either of them wanted to do.\n\nEmma rolled off her side of the bed and went to her nightstand. She pulled out her tube of lubrication and climbed back on the bed. She handed the tube to Alexis and then maneuvered herself to her hands and knees with her left shoulder braced against one of the bottom posts of her four poster bed. She looked back at us and waggled her ass with a big smile on her face. Alexis squeezed a glob of lube into Emma's anus and pushed her finger inside. Emma groaned and initially retreated from Alexis' finger as she pressed her shoulder hard into the post. Then she relaxed and pushed back until Alexis' finger was fully imbedded. Alexis twisted her finger as Emma had taught her. She didn't fuck her with it. ",
        "Alexis handed the tube to me and took up her position on the right bottom post. I squeezed a big glob into Alexis' ass and pushed my finger slowly and gently inside her anus. Alexis grimaced and pushed her shoulder into the post just like Emma had done. I stopped and waited for Alexis to make the next move. She finally relaxed and pushed back on my finger.\n\nEmma instructed me to push my other index finger into her ass to keep it open. I was on my knees in the middle of the bed and my cock seemed anxious to get going. It was raging hard and bouncing as my index fingers were fully inserted in Emma's and Alexis' anus. Emma maneuvered her knees toward the middle. Alexis saw what she was doing and did the same. My fingers followed their movements. I got it now. Emma's and Alexis' gorgeous asses were side by side with their bodies angled away from each other toward the posts they clung to. My job was to position myself between them and turn my hips to fuck one and then turn my hips to fuck the other. I got myself in close to their touching thighs.\n\nI turned my hips and removed my index finger from Emma's anus and gently guided my cock into her bowels. She groaned hard, \"OHHHH FUCCCKKKK. YESSSS. GIVE IT TO MEEEE.\" I pushed in until my balls nudged against her pussy. I groaned hard too. I grabbed Emma's hip with my free hand and pulled out to the glans. Emma pushed back immediately and we were fucking. The heat and pressure was amazing. I felt Alexis's hand touch mine as it was still imbedded in her ass. She was fingering her pussy and moaning constantly.\n\nI fucked Emma's ass for one minute or so and then I pulled back slowly and disengaged from her anus. I turned my hips and lined my glistening cock up with Alexis' anus and removed my index finger. I pushed the glans inside and Alexis' torso went down on the bed as a loud groan escaped her lungs. She clung to the post with her hands as her head hung off the end. I pushed gently because Alexis wasn't as experienced with butt-fucking as Emma. \n\nAlexis groaned, \"OHHH MYY GGAAWWDDD. TOOOO BIGGGG. JESSSUUUSSS.\" She pushed back on me before I could decide to pull back. I pushed my cock into her slowly but steadily. Emma's fingers were squishing in her sodden pussy as I fucked Alexis' ass for another minute. Then I pulled out of Alexis and turned and pushed back into Emma. Her anus was gaping and the insertion was immediate. Emma groaned hard as I pushed back in and took up a steady pace. Alexis' fingers went into her pussy as she waited.\n\nI was about to pull out of Emma's ass to return to Alexis when Emma groaned out, \"Oh fuck. Keep going. I'm cumming.\" I could feel her pussy clenching on her fingers through the thin membrane separating her two cavities. Her hips rocked hard on my cock and drove back on my cock until my balls were slapping on her pussy. She reached underneath and grabbed them and was trying to stuff them into her pussy. She looked over her shoulder at me. She had the sultriest look on her face. She was humping my cock but her orgasm was making her moves very spastic. She lurched forward and back and then side to side. \n\nAlexis was getting anxious. She was bringing her own orgasm on and she desperately needed my cock in her. She looked over her shoulder at me with a pleading look. I didn't know which way to go. Then Emma made the decision moot. She rolled into an anal orgasm and she clamped her sphincter so hard on my cock that I wasn't going anywhere without hurting her; and me too, probably. Emma's grip on my cock was intense. I fucked in and out when I could and Emma was screaming so loud that voices from Dee's room yelled out, \"Hey keep it down in there.\" It was Dee's voice. I could hear her giggling through the wall.\n\nAlexis couldn't wait any longer. She quickly rolled toward the edge of the bed and sprang onto the floor. I had no idea where she was going but she threw open the bedroom door and disappeared into the hall. Seconds later I heard Alexis yelling out in Dee's room, \"FUCK. I NEED A COCK RIGHT NOW. MOM'S GOT HUNTER TRAPPED IN HER ASS.\"\n\nI could hear Dee yell out, \"HERE. TAKE MY PLACE. YOU DON\"T MIND; DO YOU SWEETY?\" There wasn't any response. A minute later, as Emma was still spastically grinding her ass on my cock, I heard Alexis scream out, \"OH FUCK YES. CUM IN ME. OH MY GAWWWDDD I'M CUMMING.\" I heard a long series of groans from Jarrod and Alexis and then silence. \n\nEmma's clamping sphincter was pulling my orgasm out of me and seconds later I was humping my cock up into her bowels as her anal clamping slowed and finally stopped. When I finished, I released her hips and she slid forward against the post she had been using to bracing herself and her knees slid back pulling my cock down with her until it slid out and dragged up the crack of her ass as she settled down on the bed. We were both gasping for air. I put my hands down on her hips to hold myself up. \n\nAs my breathing began to recover, I fell off toward the middle of the bed and pulled Emma with me. We just lay there with my spent cock resting on her thigh spooned up together. I cradled one of her huge tits in my hand and kissed her neck and earlobe while she brushed her hand lightly across the side of my face. \n\nWe finally got up and went to the bathroom and took a shower. We weren't engaged in sex when Alexis pushed open the shower door and joined us. She was all smiles, so she got what she needed. We washed each other and rinsed off and I spent a long time toweling off Alexis as she did the same to Emma and she did the same to me. It was an odd 'daisy-chain' of terry-cloth towels and naked bodies.\n\nWe crawled into bed exhausted. The sounds from Dee's room had died down to muted conversation. Alexis and Emma had cuddled up to my shoulders lying on their sides with one leg draped over mine. I kissed Alexis on the forehead and then did the same to Emma. They each kissed my shoulder. I fell asleep with my flaccid cock in their hands.\n\nI was still tired when I came to the next morning. It was early, as evidenced by the amount of pre-dawn light in the room. I put my hand out to check on Alexis but she wasn't there. I put out my other hand to check on Emma and she wasn't there either. I felt the bed give on either side of my hips. I lifted my head off the pillow and looked down. Sophia was getting herself into position to push her pussy down to take advantage of my morning woody.\n\nI said, \"Where is Alexis?\" Just then Emma came in from the bathroom and was startled to see Sophia inching her pussy down my shaft.\n\nEmma giggled and said, \"Well fuck. That's just where I was going.\"\n\nSophia slowly dropped down my shaft and groaned out, \"Sorry. You snooze, you lose.\" Sophia's feet were planted on the bed on either side of my waist. She leaned back and put her hands on my knees and started taking long strokes up and down my cock. She said, \"Alexis is sitting in the chair by the bed in Dee's room with her legs draped over the arms, strummin' the ole banjo.\" She giggled and then let out a long loud groan as she started fucking my granite pole. As the groan ended, she muttered, \"Oh fuck, Hunter. I had forgotten how glorious your cock is. Oh my God.\" Her head twisted from side to side as her mouth hung open. She seethed air in through clenched teeth and ground her hips in rotating circles on my groin. \n\nEmma had taken her spot lying beside me watching Sophia grinding her hips on me. She constantly changed her motion: Up and down; forward and back; side to side and then around and around. Her eyes were open but she was looking right through the wall above me. Emma noticed too and whispered, \"Dee has left the building.\" Her hips slowed to a languid pace as she seemed to disappear further to wherever she had gone. Neither Emma nor I touched Sophia. We just let her do her thing. \n\nEmma smiled at me as we saw Sophia coming back to us. She seemed to realize that she had gone elsewhere and she grinned down at us as she shifted her weight forward and placed her hands on my chest and started another whole set of fucking motions. She was much more vigorous now as it was obvious that an orgasm was about to crush her. She lifted her head and groaned out in a demonic voice, \"Oh fuck. Here it comes. Cum with me.\"\n\nI had been trying desperately to hold off my orgasm until she was ready and now was the time. I hadn't moved since Sophia sat down. I let her do her thing. Now, I drove my hips up hard into her and she screamed from the extra hardness and deeper penetration. I could feel her pussy clenching and her body seize as her orgasm took control. Cum boiled over and blasted up my shaft and Sophia screamed hard as she became a limp rag in my hands. She yelped with each subsequent burst of cum. We rode out our orgasms together as her pussy continued to clench randomly for a couple minutes after I was done.\n\nSophia opened her eyes and looked down at Emma who was grinning up at her. Sophia smiled and said, \"Sorry I took your spot. NOT!\" She broke into a grin and ground her hips around on my groin. She lifted her hips off my cock and Emma suddenly moved down and gently pushed her off to my side. Emma pushed her face into Sophia's sopping wet pussy and drove her tongue inside searching for cum. She got a lot of cum before Sophia rolled into another softer orgasm. Her clenching pussy was now forcing more cum out and Emma slurped it all up. \n\nAs Sophia recovered from the smaller orgasm, Emma crawled up over Sophia's body and planted her lips on sophia's and shared her prize with her. Both of them broke into giggles as some of Emma load drooled down Sophia's face onto her neck. Emma retrieved it and swallowed. Sophia swallowed and then they began a deep, sensuous, passionate kiss. I watched with interest. I loved to watch how passionate women could be with another woman. It was just different. My cock liked the display of their writhing bodies and began to lift off my thigh. They didn't notice and I had to go to the bathroom anyway. By the time I got back, Emma and Sophia were sprawled on their backs gasping for air. I had to smile to myself as their faces were covered with cum. \n\nI grabbed my clothes and went down stairs and put them on in the kitchen while I waited for the coffee maker. I grabbed the local newspaper off the front steps and went to the study. As always, I started with the national and local sports. I had zero interest in the politics of the day plastered all over the front page.\n\nA half hour later, Emma, dressed in a bathrobe stuck her head in the door and threw me an air-kiss. I grinned at her and sent one back. She smiled and disappeared. I could hear her and Sophia talking in the kitchen. Then there was the clatter of pans on the stove. I put down the paper and headed for the kitchen. \n\nJust hitting the bottom stair was Alexis. She was in the process of pulling one of my 'wife-beater' tee shirts over her head. Her hairless pussy was glistening with moisture. As her head popped through the neckline, she saw me and beamed me a broad smile and threw her arms around my neck. She said, \"Good morning Babe. It sounded like you and Mom and Sophia had a romping good time this morning.\" She kissed me on the nose and continued, \"I hope you have something left for me later on.\"\n\nI grinned and said, \"Always. Do you have any particular plans?\"\n\nShe smiled at me, pecked her lips on mine and mumbled, \"Maaaaybeeeee. I'll have to see how it plays out.\" I loved Alexis' mysterious plotting to infuse adventure into our lovemaking.\" She pecked me on the nose and twisted out of my arms and headed toward the kitchen. I watched her go marveling at her incredible ass working under the tee shirt. \n\nCatching me watching Alexis' ass was Olivia coming down the stairs pulling a robe on. She was naked underneath and her enhanced volleyball sized tits were bouncing with each step down the stairs. At the bottom, she pressed those tits into my chest and stretched up and kissed me. She said, \"Good morning. Did you sleep well?\" She grinned and headed for the kitchen too without waiting for my answer. It was a rhetorical question anyway.\n\nI looked up the stairs to see if Dee and Jarrod were close behind but they were nowhere in sight. I wandered toward the kitchen and stood in the doorway from the foyer. The kitchen was a beehive of activity. Most of it was concentrated around the Keurig coffee maker. There was a line there because the coffee maker only made one cup at a time. Emma was busy at the stove. The crowd thinned out and went with their coffee cups to the dining room. I watched Emma as her ass waggled from side to side as she scrambled eggs in a large cast-iron skillet. I walked over behind her and pressed my body lightly against hers with my hands inside her robe cradling her large tits. I bent down and kissed her neck and she rolled her head away to make more room for me. She giggled and pressed her ass back at me. I moved my lips up her neck to her right ear and nibbled on her earlobe. She groaned hard and tipped her head back against my chest. Her nipples hardened under my index fingers and thumbs. My cock hardened and pushed against her ass.\n\nEmma's breathing was ragged as she set the spatula on the counter and braced herself with her hands on the counter. She dropped her head forward and let it hang in front of her. She muttered, \"Jesus Christ Hunter. You drive me crazy.\" I released her tits and let my hands drop down over her flat stomach and through her neatly trimmed pubic hair. She was wet again and her hips rocked back against my hard cock when I touched her clitoris. She groaned, \"Oh my God. You make me so horny. Jesus. I can't do this right now. It's a good thing you don't live here.\" She forced herself to pick up the spatula and drag it through the skillet. \n\nI pulled my hands back to her hips and let her robe fold together covering her again. I kissed her one more time on her neck and she groaned again. With spatula in hand, she turned and threw her arms around my neck and stretched up and kissed me hard and sensuously. She pulled back and whispered, \"I'll take a rain-check.\" She grinned at me and I kissed her again as I pulled back and adjusted the position of my hard cock in my pants. I took my place at the dining room table and listened to the three ladies discussing ladies stuff that were of no interest to me. I sipped my second cup of coffee and watched these three incredibly gorgeous women in various states of dress. I didn't care what they were talking about. I'd stay here like this all day.\n\nEmma appeared in the doorway carrying a platter full of scrambled eggs, sausages, bacon and buttered toast. After yesterday's two Thanksgiving feasts I was sure I'd never want to eat again. When I saw the platter in the middle of the table, I was suddenly famished. We all ate like we hadn't eaten in a week. \n\nI told Alexis that I planned on spending a little time with Noah. He would be home alone. For as long as I could remember, his parents and mine always drove into the City for \"Black Friday\" shopping. If you've ever seen the news broadcasts of huge crowds standing outside some brand name store or another before they open their doors. My folks were probably in that crowd. \n\nAlexis had no interest in visiting with Noah. She loved Noah dearly as he's my best friend but I would be the first to agree that his range of conversation was anything but stimulating. Alexis decided that she would go visit with Thia at my folk's house. She called to make sure Thia hadn't gone with my Mom and Dad and then went to get ready. When she appeared again, I looked at her quizzically. She had applied quite a bit of makeup. Way more than usual. She was wearing a silk spaghetti strap see through camisole like top with no bra and a leather mini-skirt with stilettos. She was expecting the look on my face. She said, \"I just thought I would dress like Thia in case we go out. So she won't feel so self-conscious.\" People here don't dress like they do in the City.\n\nI laughed and said, \"Oh, I get it. So you will look like two hookers instead of one.\" She placed her hands on her hips and cocked them to the side. She frowned at me and then she laughed, grabbed a cardigan off the back of a chair and headed for the car. I grabbed a light jacket and followed.\n\nOn the way to my neighborhood Alexis talked more about Thia. She was certain that Thia was conflicted with her decision to label herself as a Lesbian. I figured that Alexis would delve into her theories with Thia while I was visiting with Noah. Alexis dropped me off at Noah's house and asked me how long I thought I'd be. I told her I wouldn't be longer than a couple hours. I had my limits with Noah's incessant yapping about the latest computer game or phone app. I was sure I was going to hear all about his Pool Cleaning adventures. At least that would be more interesting.\n\n*****\n\nAlexis drove the two blocks back to my folk's house and knocked on the front door. Thia answered immediately and eagerly invited Alexis in. Thia scanned her from head to toe and smiled. Thia seemed thrilled to have Alexis come and visit and offered her a seat on the couch and offered her a drink. Thia thought nothing about what Alexis was wearing. It was almost a uniform in the City. Alexis requested a soda. She took off her sweater while Thia was in the kitchen and laid it over the arm of the sofa.\n\nThia came around the corner with Alexis' soda and a glass and stopped short when she saw Alexis' tits showing through her silk top. Alexis' nipples were rock hard and very sensitive to the material dragging over them. Thia tried to gather herself before handing over the soda and glass. Alexis knew already that Thia was attracted to her but was trying hard to ignore it. Alexis had dressed this way intentionally to make it harder for Thia to ignore it. Alexis was attracted to Thia too and she didn't try to hide it and she wasn't going to ignore it. \n\nIf Thia felt that she needed to identify herself as a Lesbian, Alexis was fine with it. So far Thia had only stated that she liked having sex with women and Alexis could certainly identify with that but Alexis did not identify herself as a Lesbian. She was perfectly satisfied with the term 'Bi-Sexual'. Thia's confession that she had never had a good sexual experience with a man convinced Alexis that if Thia could have just one good sexual experience with a man she might re-evaluate her personal identity. It seemed very likely to Alexis that Thia had just made consistently poor choices in men. She sure hoped so because she was working on her plan to give Thia that good experience with Hunter. \n\nUnder normal circumstances Alexis would have never considered this plan, but Thia's and Hunter's experience that night so long ago, which concluded with unsatisfactory results and then years of wondering, 'what-if', she decided it was not only a good idea but a necessary one.\n\nAlexis felt bad that she hadn't talked this out with Hunter, but she was certain that he wouldn't understand the significance of that night, so long ago and the fact that they were siblings would be a no-go. Alexis had no such problem. After all, she had been having routine sex with her mother and step-sister for a while now.\n\nAlexis poured her soda into the glass and set the can down on a coaster on the coffee-table. Thia was nervous now and sat on the other end of the sofa as far from Alexis as she could get. She popped the top of her soda and poured the contents with shaking hand into her glass. In spite of the heavy makeup Alexis could see her flushed neck and chest. Alexis noticed that Thia couldn't take her eyes from her nipples. \n\nAlexis asked questions about Thia's job and the company she worked for. Thia loosened up as she talked about things familiar to her. She talked about her apartment and the city she lived in. Alexis confessed that she had never been there. Thia's work was in a technical field and Alexis couldn't ask any knowledgeable questions that could keep the conversation going. ",
        "Thia recognized that the conversation was dwindling so she took over with the questions. \"How did she and Hunter meet?\" That was a good question to lie about. Thia's mother had sent a copy of the newspaper article about the Las Vegas adventure and Thia told Alexis that she had framed it. Thia wanted a blow by blow of their visit there; another subject that required a lot of lying. Thia tried questions about college. What was she studying? Now Alexis had something she could talk about for a while. She was wasting time before she launched her plan. Timing was going to be critical.\n\nThia was listening to Alexis talk about football and the \"Smoking Hot Five\". Thia smiled because she had seen Alexis and her friends on the national news channels. Alexis had caused quite a stir. Thia was calming down some but she still stole glances at Alexis' tits through the sheer blouse. Alexis slid across the sofa to sit beside Thia to show her photos of their new apartment. Thia thumbed through each one and was in awe of them. \n\nIt was getting to be time to launch her plan. As Thia continued to thumb through other pictures on Alexis' phone, Alexis put her hand on Thia's knee and slowly moved it up under her skirt. The air in Thia's lungs exploded from her as she lunged forward. She didn't attempt to stop Alexis' hand from moving higher. Thia looked up at Alexis with a 'please don't' look on her face. Alexis ignored the look and pressed on. Thia started to tremble and her leg holding up Alexis' hand started to shake. Alexis leaned forward and pressed her lips to Thia's and kissed her gently. Thia's trembling grew more intense. She didn't pull away from Alexis' lips and when Alexis' tongue flicked across Thia's lips, she kissed back and they were off. \n\nAlexis pulled her lips back and started unbuttoning Thia's blouse. Air was trapped in Thia's throat and she struggled to breathe but she helped Alexis with the buttons. When her blouse came off, Thia reached around behind and unsnapped her bra and let it fall into her lap. Her neck and chest were now clearly flushed from erotic anticipation. Her breasts were large and her nipples were like nails.\n\nAlexis started unbuttoning her blouse and Thia urgently joined in the task. When Alexis' silk blouse slid down her arms Thia leaned down and sucked one of Alexis' nipples between her lips. An erotic groan escaped Alexis' throat and she put her hands on the back of Thia's head to guide her from nipple to nipple. Thia eagerly complied. Thia sucked one nipple gently between her teeth and Alexis' head rolled back and she let out a sigh.\n\nAlexis stood up and Thia, not wanting to lose the tit on her lips stood up with her. Alexis unbuckled her belt and let her skirt fall to the floor. She wasn't wearing anything underneath. When Thia pulled her lips off Alexis' tits and stepped back to look, her hands went to her mouth as if in shock. Thia said, \"Oh my God. You are a vision. You're gorgeous.\" It was a whisper really because Thia's lungs were struggling to breathe. \n\nAlexis moved in on Thia and unbuttoned and unzipped her jeans and squatted in front of Thia and struggled to get the skin tight material down her legs. Thia's legs trembled as her panties came down with the denim. Alexis helped her step out of her pants and then looked up into Thia's sopping wet neatly trimmed pussy. Thia took her own tits in her hands and separated them so she could see clearly down over her flat stomach as Alexis placed her hands on Thia's thighs and leaned in and kissed Thia's sex. Her hips launched forward into Alexis' face. Alexis moved with her and flicked her tongue across Thia's clitoris and her head snapped back on her neck and a demonic, low pitched growl escaped her throat. It was the loudest sound she had made since Alexis started. Alexis leaned back away from Thia's pussy and looked up at her panting face and said, \"What do you want to do now?\"\n\nThia burst out, \"I don't know. I've always just gone with the flow. I'm a willing participant but I've never initiated anything before. Please don't stop. I'm so hot for you right now. You're the most gorgeous woman I've ever seen let alone been with. Please.\"\n\nAlexis said, \"You've never picked up a woman before?\"\n\nThia said, \"Good God no. I've picked up a lot of men over the years and they always turned out to assholes. I'm always nervous about women's advances but I've learned that the sex is sweet and gentle and satisfying. I've had sex with a lot of women, but I've never made the first move.\" She sat back down on the sofa and continued, \"I guess I'm a follower in the bedroom, which is odd because I'm anything but in my business life.\"\n\nAlexis was still bent down with her butt on her heels. She took Thia's hands and said, \"Take me to bed. Right now.\" Air exploded from Thia's lungs and she gasped a breath back in. She stood up and pulled Alexis up as she mashed their bodies together for a moment before Thia pulled back and led Alexis by the hand down the hall. Thia was heading for her room but Alexis applied some resistance as they came to Hunter's bedroom door. \"Let's do this in here,\" as she pushed Hunter's door open. \n\nThia seemed troubled by this development and she said, \"I would feel strange about having sex with my brother's fianc\u00e9 on his bed.\" She tried to pull Alexis away from the open door but Alexis held her ground.\n\nAlexis said, \"I think you have some old unresolved business with Hunter that has had a huge impact on your life since. This might help.\" She pulled Thia into Hunter's bedroom and left the door open behind them. Alexis pulled their bodies together and kissed Thia and she responded with passion. Alexis whispered, \"Make love to me.\" They stood their beside Hunter's bed entwined in each other's arms naked except for their heels.\n\nThia ran her hands down from Alexi's waist over her perfect ass and back up again. She slowly released Alexis' lips from hers and kissed her way down Alexis' body. Thia kissed Alexis' neck and Alexis let out a sigh which evolved into a groan. Alexis' neck was her 'go-button' and Thia had found it first thing. Thia recognized Alexis' reaction. She had a couple of those spots too. She kissed Alexis on the other side of her neck and Alexis groaned again. Thia moved down and kissed both nipples and dragged her tongue around and around them. Alexis groaned hard. Thia continued down her insanely flat and hard stomach and dragged her tongue around in Alexis' navel for a brief moment before moving directly to her goal. She was bent at the knees, resting her butt on her heels as she curled her tongue into a spear and flicked the tip on Alexis' clitoris. \n\nAlexis' hands flew to the back of Thia's head and gently held her in place as her own head snapped back on her shoulders as she groaned out, \"OOOOHHH MY GOD.\" Her hips involuntarily rocked forward. Thia was very lightly feathering Alexis' clitoris with her tongue before dropping an inch lower and driving it into her pussy. Alexis' screamed and launched her hips into Thia's face. Thia pulled back and looked up at Alexis with a huge grin on her face.\n\nAlexis looked down at Thia and said, \"Quit being so satisfied with yourself. Get in there.\" She flexed her hips forward and Thia pushed her face back in. Alexis' legs started to tremble as she felt an intense orgasm coming on fast. She groaned out, \"OH FUCK, THIA. I NEED TO GET DOWN OR I'M GOING TO FALL DOWN.\" She wanted to move into a sixty-nine position on Hunter's bed but she wanted it to be Thia's idea.\n\nThia seemed to be reading Alexis' mind because without pulling her face from Alexis' pussy, she maneuvered Alexis to lie back on the bed. Alexis maneuvered herself so her head was at the foot of the bed near the door. Thia threw a leg over Alexis and settled her face back in Alexis' pussy. Thia let out a blood curdling scream when Alexis drilled her tongue into Thia's pussy. Alexis finger-fucked Thia as she lightly dragged her tongue across her clitoris. This brought Thia's head up in a loud groan and then she went right back down again.\n\n***** At Noah's house, we had talked our way through all the things that interested Noah. I feared for his future. He had little in his life except his computer and video games. His parents were becoming increasingly frustrated with him. He thought they might be about to kick his vagrant ass out of the house. He wasn't sure if maybe that would be a good thing. I was thinking the same thing. I stood up to leave and he stood too. We looked at each other and then hugged. I told him I'd try to get by again before we left. He had been disappointed that Alexis hadn't visited too. Noah had a crush on Alexis. Every guy I knew did and a lot of women too.\n\nI waved at Noah standing in the doorway as I walked up the street toward my folk's house. Two blocks later I was a little surprised to see the Subaru in the driveway. Alexis had mentioned that she and Thia may go shopping or something. I went in the backdoor and could immediately hear moaning and groaning. I stopped dead and listened. I was more than familiar with Alexis' moans and groans and immediately recognized those. The others had to be Thia's. My cock instantly surged in my pants.\n\nI crept silently down the hall toward the moans. They were coming from my room and the door was wide open. I peeked around the door frame. Alexis's head was at the foot of my bed with her tongue drilling Thia's pussy. Thia was on top with her face down in Alexis' pussy. I unzipped my pants and pulled my insanely hard cock from my pants and started slowly jerking off. I was so hard; I could have cum in thirty seconds if I want to. I didn't want to. I wanted to savor this.\n\nI was fixated on Thia's ass as it rose and fell above Alexis' face. I wished that my room was big enough for an overstuffed chair to sit in right now but it wasn't, so I stood leaning against the doorframe stroking my cock. I grinned at Alexis when she opened her eyes and got an upside down view of me standing at the door. Her eyes grinned back. Her mouth was busy. She took her finger off Thia's clitoris and tipped her head back and placed her finger on her lips in the international sign for \"keep quiet\". She went back to work on Thia's pussy. She knew that Thia was very close. Hell, so was Alexis.\n\nIt wasn't two more minutes before Thia's hips spastically drove Alexis' tongue deep. Her head snapped back out of Alexis' pussy and she let out a groan, \"OHHH MMYY GGGAAAWWDDD. ALEXIS, OOOHHH FFUCCKK. I'MM CUMMMINGGG.\" Her statement started out as a low pitched guttural \"OH MY GOD\" and ended with a screeching, \"I'M CUMMING.\" Alexis didn't let up. She flicked Thia's clit again and she screamed again. Thia's vaginal fluids were pouring out of her and down Alexis' face. Alexis was slurping up what she could. I watched my sister's pussy clenching on Alexis' tongue and I swear my cock got harder. I had never seen Thia's pussy before and 'God help me' it made me incredibly horny.\n\nWhen Thia began to recover, she started to pull out and turn over but Alexis thrust her hips up into her face and Thia got the message. She settled back down and tongue-fucked Alexis until she exploded into her own orgasm. The first part of Alexis' plan was complete. This was the easy part. She had no idea how the second part would go.\n\nThia stayed on Alexis' pussy until her pussy stopped quaking and then rolled off on her side. The moment of truth had arrived. Thia looked back at Alexis with a grin on her face. The grin quickly disappeared when she saw me leaning against the wall stroking my cock. I watched her closely to see what would happen next. Thia's eyes went wide as they flashed from me to Alexis and back and forth. She was still breathing hard from her orgasm. She instinctively covered her tits with her arms and her lower lip started trembling. Alexis turned around and looked at me and winked. She turned back to Thia and acted like she was surprised at my appearance.\n\nThia was now concentrating on Alexis as if she were pleading for her to save her. Alexis got off the bed and maneuvered in behind Thia and wrapped her hands around her front and clasped her tits, holding her. Thia muttered, \"Oh fuck. This is wrong.\" Her eyes flitted around the room searching for something to look at other than my fatty. She was unsuccessful and her gaze kept coming back to it. \n\nAlexis leaned forward and said, \"Remember that night so long ago? It went so wrong for you and you confessed that you wished it had been different. Coming home from the airport you jokingly blamed that night for your failed marriage. Was it really a joke? Here is a chance to go back and do it differently.\" Thia turned her head to look back at Alexis. She was nearly hyperventilating. \n\nThia muttered to Alexis, \"Oh fuck, oh fuck. This is wrong. This is wrong. This is wrong.\" She turned back and stared at my cock appearing and disappearing in my hand just like that night. I wasn't eleven like I was then so I didn't try to hide it from her. What happened next was totally up to Thia.\n\nAlexis stood up and came over to me and took my cock from my hand and led me over to the foot of the bed and maneuvered me to sit back. Thia was sitting cross-legged near the head of the bed watching closely to see what Alexis was going to do. Alexis took my cock in her two hands and started jerking me off in a counter-rotating fashion. The sensation was fantastic and I tipped my head back and groaned hard. Thia was watching my reactions as much as she was watching Alexis smiling up at me as her hands became a blur.\n\nI was taking stolen glances at Thia and I noticed that her nipples had gotten hard and she was running her fingertips around one of them. Her other hand was covering her sex. She was still embarrassed about having her brother seeing her naked but her neck and chest was blushing red from increased blood flow indicative of arousal. Alexis slowed her hands and leaned down and kissed my glans. She glanced at Thia to see if she was watching. She was. Alexis opened her mouth wide and wiggled her lips onto the glans. I let out a loud groan, \"Oh fuck Babe, that's amazing.\" Alexis pushed her lips down the shaft to the fattest part and stopped to adjust. She glanced at Thia again and noted that she was watching closely and her breathing had started to ramp back up again.\n\nAlexis pushed my glans all the way into her throat and Thia mumbled, \"Oh fuck. That's a lot of cock to be doing that.\" Alexis pulled back out and off my cock dragging a thread of saliva from my glans to her lip. She flicked the thread with her tongue and looked at Thia with a huge smile. She aimed my cock at Thia to offer it to her. She looked at Alexis and then looked at my cock. She licked her lips and used her legs to pull herself another foot closer to see better but she made no move to do anything else.\n\nAlexis made the motion again for Thia to take my cock and Thia reached out her hand and wrapped her fingers around the top half. She mumbled something about it being bigger than 'that night'. Alexis still had the bottom half and she started slowly jerking on it forcing Thia to do the same. I groaned, \"Fuck. You guys. That's great.\" Thia smiled at Alexis and Alexis picked up the pace. Thia started taking over the pace and Alexis pulled her had away leaving my cock to her. She scooched over closer and wrapped her other hands around the bottom half like she had seen Alexis do. She was clumsy with her two hand counter-rotating hand job, but the circumstances were driving me nuts. Alexis moved out from in between my knees and urged Thia to take her place.\n\nThia moved off the bed to her knees between my legs and reverted to a single hand-job. She looked up at me and I smiled at her. She smiled back. Alexis bent down and whispered in Thia's ear and Thia bent forward and touched her lips to my glans. She immediately pulled back and looked at me expectantly. She leaned forward again without taking her eyes from mine and kissed the head again and again pulled back quickly. \n\nAlexis watched Thia tentatively touch her lips to my glans three times and pull back. She said, \"Thia. Why are you hesitating so? It's not going to bite you.\"\n\nThia kept stroking my cock as she said, \"This is where everything always goes wrong. I know the guy expects a blow-job and if I'm tentative about it, he'll grab my head and force his cock into my mouth. I feel like I'm being raped and I freak-out screaming bloody murder. He'll slap me around and that is the last time he comes around and I'm happy about that. Then it's the next guy and he is the same fucking asshole as the last. I've just given up. Hunter's cock is incredible and it's definitely making me horny but I have a conditioned response, I guess.\"\n\nAlexis said, \"Hunter is a very gentle and considerate lover. I wouldn't be with him if he weren't. Believe me, there are a number or women in this town that would kill to have Hunter in their bed on a regular basis.\" I just sat there watching Thia jerking on my cock. Alexis continued, \"I promise you that you won't be experiencing the brute behavior from Hunter that you've experienced before.\"\n\nThia bent forward again and kissed my glans and stayed there to assess the prospects of her getting her lips around the huge knob. She decided to go for it. I made sure I didn't make any move to give her more than she wanted. She stretched her lips over the glans by wiggling from side to side like she had seen Alexis do. She pulled right back off again. She looked embarrassed at Alexis and Alexis nodded at her. Thia pushed on again and began forcing more cock into her mouth. She got nearly halfway before she gagged and coughed. She pulled back off with a huge quantity of saliva trailing along behind. She caught it in her hands and wrapped it around the shaft and without hesitation pushed her lips on again and started giving me a blow-job. I groaned hard and Thia smiled at my reaction as best she could with a fat cock buried in her mouth.\n\nAlexis leaned in and asked, \"Is this what you wished you had done all those years ago?\" Thia nodded her head as she continued sucking on my cock. Alexis continued, \"Do you want to finish him off or is this good enough? I don't think he'll last much longer.\"\n\nThia pulled her lips off my cock and gulped down a mouthful of saliva and said, \"Back then this would have been enough; but not today.\" She looked up at me and said, \"Cum in my mouth little brother.\" We both smiled at each other at the same time. Alexis moved back and let her plan come to fruition. \n\nThia pushed her lips over my glans again and looked directly into my eyes as she proceeded to give me a wonderful blow-job. I glanced over at Alexis who was kneeling on the floor with her fingers flying in her sex. Her eyes were shut and her mouth hung open. After a few minutes of Thia's blow-job I could feel my orgasm rushing in on me. I involuntarily humped up my hips driving my expanding cock further into Thia's mouth. Her eyes went wide as she freaked and started to pull off. Her old fears were flooding back in as I had unwittingly done what she was afraid I'd do; what every man had done; force my cock into her mouth. \n\nAlexis realized immediately what had happened and said, \"Thia. He is going to cum. His hip movement is beyond his control. It's an automatic reaction.\" My orgasm was coming on fast and either Thia was going to finish this or she was going to get a face full of cum. It was well beyond my control. Thia reacted to Alexis' words and relaxed and continued with the blow-job.\n\nI felt that I should warn Thia so at the exact same time as my hips jumped forward again with the first salvo of cum I said, \"I'm cumming.\" Thia had already guessed that's what was happening and she pulled back to the ridge. She thought she was prepared for what was coming but Alexis knew better. She grinned at me as the initial shot of cum filled her mouth and forced her off my glans, coughing and gagging. Alexis could have jumped in to save her but she let Thia have the experience. Subsequent bolts of cum launched into Thia's face and then down onto her tits as she guided my cock away from her face to escape the onslaught.",
        "When I was done, we waited to see what affect this would have on Thia. Alexis remembered the first time she thought she could handle a load of Hunter's cum without a plan. Thia was sputtering cum from her lips and wiped a glob out of her right eye and it fluttered open. She stuck her cum covered finger into her mouth and tasted it. We were holding our breath hoping that Thia wasn't too freaked out.\n\nWhen Thia pulled her finger from her mouth she said, \"Humm. I've never tasted cum before. I've never got that far before the guy was beating the shit out of me. It's quite tasty. I like it. The best part is that I didn't get the shit beat out of me to get it.\" Alexis and I looked at each other and started laughing. Thia hadn't thought that what she said was funny until she thought about it from our point of view and then she burst out laughing too.\n\nAlexis helped Thia lick and clean cum from Thia's face and body and then Alexis moved her pursed lips to Thia's and shared their collective loads. Thia didn't freak at all. She was getting horny again and their kissing turned passionate for a moment before Alexis pulled back. Thia followed Alexis' lips for a moment before she realized the moment was over. She licked lingering cum off her lower lip and sat back.\n\nI pulled Thia up into my lap and we hugged each other and kissed. Thia started crying as I held her tight to me. With tears streaming down her face she blubbered, \"I'm not sure if things would have gone differently for me if I had done this back then. I'll never know for sure. But one thing is for sure. My choices in men have been atrocious and I never got that until just now. They aren't all the same.\" She pulled her head back off my shoulder and sniffled and kissed me hard on the lips. I kissed her back the same way.\n\nAlexis interjected, \"There are a lot of men out there who are sensitive and gentle and caring. I bet that you can find one if you want to look. Try taking a straight friend out with you to help you find a nice guy because you seem to gravitate toward the nasty ones. If you're satisfied with Lesbian sex, God Bless you. Personally, I think we've found another bi-sexual to have fun with. Thia giggled and nodded her head. \n\nThia said, \"I'm not a virgin. My husband brutally forced himself on me many times. All the other guys never made it that far before they were beating on me or kicking me out because of the blow-job thing. It's not anything you discuss with your friends and co-workers. My shrinks assured me that I've had a very poor sampling.\" She nervously giggled again and then grew quiet for many seconds. \"I was wondering, umm....ummmm...eeerrrrr,..\"\n\nAlexis smiled at me and said, \"I think Hunter would be the perfect man to introduce you to satisfying sexual intercourse. I can't get enough of him.\" Thia nervously laughed and glanced up at me. She was still not sure she should be doing this but she was all in now.\n\nThia looked at me and then at Alexis and said, \"I'm flying back home tomorrow night. We won't have this privacy again. Not here.\"\n\nAlexis thought for a moment and said, \"We'll pick you up for lunch tomorrow at noon.\" Thia broke into an ear to ear grin. She threw her arms around Alexis' neck and hugged her hard. Words weren't exchanged and they weren't necessary. We dressed and hugged and kissed Thia at the front door and jumped into the Subaru.\n\nWe rode in silence for quite some time on the way home. Alexis finally blurted out, \"I'm sorry I didn't work this out with you. I was afraid you'd balk because she's your sister but she needed to resolve this thing between you guys.\" Then she started rambling, \"She loves you. She hates you. She loves herself but hates herself too. She's attracted to women and decided that she's a Lesbian but she's still attracted to men even though she makes atrocious choices. She's a mess.\" She stopped and was silent a moment. She looked over at me and said, \"Sorry. I was going off there. Anyway, I'm sorry.\"\n\nI was quiet for a while longer and then said, \"I admit that Thia being my sister made it weird. I guess I must be a pervert though because I was so incredibly hot when she kissed my cock. My big head was screaming \"NO\" but my little head was in charge by then and it was screaming, \"Fuckin' A Yeah\". I can't wait until tomorrow. I don't know how you will pull this off.\"\n\nAlexis looked over at me and said, \"I'm going to plan another orgy at Mom's house and let Thia decide how she wants to get involved. I doubt she will opt out with all the gorgeous women involved. If she would prefer, you two can go to my room but I want in on it. She needs my support right now; plus she makes me hot.\"\n\nI laughed and said, \"What attractive woman doesn't make you hot.\"\n\nShe glared at me and said, \"Very good point. If you keep your hat on, no one will notice it.\" I laughed along with Alexis. She said, \"Step on it. You never know, we could get lucky and get pulled over for speeding.\" We both roared with laughter."
    ],
    "authorname": "BigZeke13",
    "tags": [],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-32"
}