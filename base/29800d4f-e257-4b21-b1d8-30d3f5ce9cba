{
    "title": "A World for the Taking Ch. 02",
    "pages": [
        "It was a chill early spring day shortly after dawn when the first major change in thirteen years came to Mackey Station.\n\n\"Pa,\" Mike said, interrupting his father in the middle of servicing the spinner.\n\nBob looked up, finding Mike standing a couple of meters away with his hands thrust deep into his overalls' pockets and his eyes fixed uncertainly on the frost covered ground. Bob put aside his tools and straightened, considering the teen.\n\n\"What is it, Mike?\" he asked.\n\n\"Well, sir, I'm seventeen,\" Mike began, finally lifting his eyes. \"In a couple months I'll be able to go out on my own.\"\n\n\"That's right,\" Bob said with half a smile. His boy was looking more like a man every day. Mike was already taller than Bob and filling out, though he suspected the boy would take after Deborah's side of the family more than his own.\n\n\"I was thinking,\" Mike went on. \"My parcel will be my responsibility then.\"\n\n\"Yes, son, it will,\" said Bob.\n\n\"And it's a fair piece away. All the way down by Big Lake.\" Mike pulled his hands from his pockets, squared his shoulders and blurted, \"I need to build a cabin.\"\n\nBob grimaced, considering the issue seriously. Slowly he began to nod and then fixed his son with a firm look.\n\n\"Shipping in prefab is too expensive, Mike,\" he said. \"Your ma and I haven't got the money for it. And you're not a toe-holder like your ma and me, so the company isn't going to give you one. What's your plan?\"\n\n\"Um...\" Mike began self-consciously. \"I... At first I thought about selling a piece of my parcel, but nobody around here would have the money for it.\"\n\n\"Not likely,\" his father agreed. \"I don't think anyone would feel the need to have more than they've already got, anyway.\" \n\nMike bit his lip and nodded.\n\n\"So what else did you come up with?\" Bob pressed his son.\n\n\"Well,\" Mike began and glanced at his father. Bob nodded encouragingly and Mike went on, \"I was thinking I could sign out one of the robots from town utilities and build the cabin from local stuff the way you and Ma built the extension.\"\n\n\"Could be done,\" Bob said. \"You'll need more than one robot and a lone cabin won't be enough. You're going to need stock to ride and a barn to keep them in. A corral and a feed silo. Have you got a space picked out?\"\n\n\"No, sir,\" Mike said, relaxing just a bit now that his father had not flatly refused. \"I think it would be best if I built it near your parcel. There's a lot of good territory there and I would be closer to you if you or Ma needed me. Closer to town, too.\"\n\n\"Son,\" Bob said, tilting his head to the side speculatively. \"This got something to do with Susan Watts?\"\n\nMike's eyes snapped up to his father's in surprise.\n\n\"I thought so,\" Bob said with a grin. \"She's a good one, Mike, but you're both pretty young.\"\n\n\"I know, Pa, but it's just a cabin,\" Mike said in a rush. \"I'd be building it for me. It would be there when I need it, you know.\"\n\n\"And having the cabin already built would be really handy when you go to propose,\" Bob said. His smile turned wry. \"And you're right. Even if you don't propose to Susan it would still be good to have a place to move into right away.\"\n\n\"I don't think it would be all that tough to build,\" Mike said, hoping his father would lend a hand.\n\n\"Not all that easy, either,\" Bob replied in a firmer tone than he had been using. \"But, it wouldn't have to be done all at once.\"\n\nBob leaned on the fan well of the spinner and wiped grease from his hands with a rag.\n\n\"What's your mother say about this? Talked with her yet?\"\n\n\"No,\" Mike said uncomfortably.\n\n\"She's got a say in it, too.\" Bob tossed the rag into a bucket and pushed off the fan well. \"Come on. Let's go talk to her and get it figured out.\"\n\n*****\n\nTammy and Jean crested the last rise and their brother's station came into view. There wasn't much to look at yet. A cleared space for the corral, holes where stumps and boulders had been blasted out and a large pile of branches too small to be used for anything but firewood. It had taken a full year to get clearance from Tyne & Harper to build a new station and to harvest trees rated as 'promising'. And then there were other minor restrictions to be dealt with. Now it was spring again and as soon as the weather had warmed enough Mike had called on his best friend Roy to help clear the land.\n\nA robot was currently constructing a foundation wall. It spit dirt into the hopper of another robot and fixed blocks of cut local stone into the trench with a cementitious grout that would essentially fuse the stones into a single piece. Mike was catching and stacking boards as fast as they came out of the portable sawmill. These boards would be fed into a finisher that would treat them with chemicals to make the wood weather and insect resistant. Across what would become the station yard Roy was working with another robot to layout the frame of the barn.\n\n\"It's a beautiful spot,\" Jean said with a wide smile.\n\n\"Pa helped Mike pick it,\" Tammy said, nodding.\n\n\"How do you ride these things for so long?\" whined Yoshi Takemori, coming up the trail behind the girls. He was grimacing uncomfortably and sweating in spite of the mild temperature. His mother had insisted he wear his winter coat and the boy did not have sense enough to take it off and strap it to his saddle.\n\n\"We're just used to it,\" Jean said, smiling at him. \n\nThe two of them had been seeing more of each other since New Year's Eve. He had faced the fierce regard of Bob Mackey with sincere promises of his good and honorable intentions and finally had been allowed to accompany Jean to Mike's station site.\n\n\"You'll need to do better if you want our pa to take you seriously,\" Tammy warned him. A three day journey on steelie* back had turned into a four day journey thanks to Yoshi and Tammy was a little irritated with him. \"Can you shoot?\"\n\n\"A rifle?\" he asked.\n\n\"Anything,\" she said.\n\n\"I can use a bow pretty good,\" Yoshi said.\n\n\"You do hunt, don't you?\" she asked.\n\n\"Of course he does,\" Jean said, coming to her paramour's defense.\n\n\"I got two deer last year,\" Yoshi put in. He glanced at Jean and smiled gratefully.\n\n\"That helps,\" said Tammy judiciously. \"Probably will help a lot. We can teach you to use a rifle.\"\n\n\"You can start with mine,\" Jean said and pulled her Buller 30 from the boot on her saddle. It was a fairly light weapon firing a 9mm slug powerful enough to bring down deer at long range and bear at closer ranges.\n\n\"Come on you two. Gee up, Boudi,\" Tammy said, thumping her mare in the ribs with her heels. The steelie's proper name was Boudicca because she was big and strong, but Tammy just thought she was too sweet for that name and always shortened it. \"Let's see what we can do to help out.\"\n\nMike laid the last board on his stack and straightened, looking pleased to see his sisters. His smile faltered at sight of Yoshi, but quickly reasserted itself. He had nothing against the younger teen, but like big brothers throughout history, he felt protective of his little sister. Roy came up at a trot, his face split in a grin. Tammy slid off her mare and hugged Mike.\n\n\"Hi, Roy,\" she said with a knowing little smile and a glint in her eyes.\n\n\"Hi, Tammy,\" he said, not as bashful as once he had been, but he still blushed.\n\nTammy took him in at a glance, noting the stubble on his chin and the spread of his shoulders. His thick copper colored hair was mussed and damp with sweat and his hands were dirty and calloused. What was more, Roy now stood at least ten centimeters taller than her brother which was a good twelve centimeters taller than herself. He had grown considerably since their first kiss.\n\n\"Are you growing a beard, Roy?\" she asked, her sly smile spreading.\n\n\"I... Um...\" Roy looked at her uncertainly, his blush deepening. \"I was sort of thinking about it.\"\n\n\"It's coming in pretty good,\" she said and ran her palm over his cheek. The stubble felt prickly and tickled. \"Give it a few more days before you decide.\"\n\n\"I... Um... I will,\" he said, his deep red blush spreading from his cheeks to his ears and down his throat. That hadn't changed.\n\nOnce the steelies were picketed Mike took his sisters on a tour of the new station while Roy took Yoshi down to help with the barn. The younger teen kept casting glances after the Mackeys, but did not try to join them.\n\n\"You really like Jean, don't you?\" said Roy when they got to the level space where the barn would go up.\n\n\"Jean?\" Yoshi said. \"Yeah. I like her. I think she's great.\"\n\n\"Jean's nice,\" agreed Roy. \"Known her since I was a little kid.\"\n\n\"Do you actually like Tammy?\" Yoshi asked.\n\n\"Of course I like her,\" Roy replied, eyeing the younger boy.\n\n\"I mean, like, really like her,\" said Yoshi, missing the look in Roy's eyes.\n\n\"I really like her,\" said Roy, squaring off on the smaller boy. His face had turned red again, but it was not from blushing. \"I like Tammy a lot. And she likes me a lot.\"\n\nYoshi could not mistake the tone of the big teen's voice nor the clenched fists.\n\n\"Okay, okay, man!\" he said, holding up both hands in surrender. \"I just didn't know.\"\n\n\"Something wrong with me liking her?\" Roy growled.\n\n\"No!\" Yoshi backed up a pace. \"I... Look, I used to like a Vespan. Back on the station where my parents worked before we came here. It's not a big deal, Roy. I just... Tammy's a jZav`Etch. That's all.\"\n\nRoy just glared at Yoshi for a minute before he shrugged it off and turned to set a couple of 4X8s at right angles to each other and glued them.\n\n\"Shut up and help with these boards,\" he said after another minute of silence. \"We need to get this barn together by tomorrow night. Rain is coming in and we can't leave the stock out.\"\n\nBy evening the barn was fully framed and the wall planks were going up. The foundation for the main cabin was completed and the robot was working on laying out the plumbing and electrical wires. Thick cables ran from a central point where the power cell would be installed and there were coils at the ends that would rise to the level of the outlets once the walls were framed. Progress was good and Mike was very pleased.\n\n\"Tomorrow,\" he said with a firm nod. \"Tomorrow we'll finish the barn and put up the corral. This place will start looking like a real station.\"\n\n\"I think it already does,\" said Jean.\n\n\"Yeah,\" agreed Yoshi, though no one really paid him any attention.\n\n\"Let's get a fire going and make s'mores,\" suggest Roy.\n\n\"S'mores?\" giggled Jean.\n\n\"I like s'mores,\" Roy said and started stacking kindling in the fire ring he and Mike had been using. \n\nIt didn't take long for a good blaze to get going and soon they were roasting marshmallows on the ends of sticks. Only Tammy refrained, opting for small sausages and undersized stuffed bell peppers.\n\n\"You don't want any s'mores, Tammy?\" Yoshi asked, surprised.\n\n\"No,\" she said with a little shake of her head. \"I can't eat them.\"\n\n\"Can't?\" he asked.\n\n\"Can't,\" she confirmed.\n\n\"Tammy has different anatomy than we do,\" Mike explained for his sister.\n\n\"Right,\" she said. \"Ma says it has something to do with the way my ancestors evolved. I can eat fruits and vegetables with sugars in them, but processed sugar goes right through me and makes me sick to my stomach.\"\n\n\"And when it comes to meat, watch your hands,\" teased Jean. \"Tammy scarfs down a couple pounds of burgers every time we cook out.\"\n\n\"I do not!\" snapped Tammy indignantly.\n\n\"On your twelfth birthday Ma put a plate on the table that was supposed to be for everyone and you dragged it in front of you and started chowing down,\" countered Mike with a laugh. \"Dad has the video!\"\n\n\"He had to cook more so the rest of us could eat,\" Jean added with a laugh.\n\nTammy's ears lay out to the sides and her tail slapped the ground behind her.\n\n\"I like meat, myself,\" said Roy gallantly. He popped a s'more into his mouth and chewed it up quickly, adding, \"Always have.\"\n\nTammy looked at him out of the corner of her eye and smiled softly, her whiskers vibrating and a soft purr rumbling in her chest.\n\nThe five of them sat around the fire drinking beer they weren't supposed to have and singing songs for a few hours. The fire died down and everyone was pretty tired after the long day of work so they turned in, going to their tents. This resulted in a bit of tension.\n\n\"Where do you think you're going?\" growled Mike, grasping Yoshi by the back of his collar and hauling him away from the girls' tent.\n\n\"Bed?\" the smaller boy squeaked.\n\n\"Wrong tent,\" Mike said and shoved him towards the opening of his own. \"Plenty of room in there for both of us.\"\n\nYoshi submitted readily and crawled inside. Jean shot a reproachful look at her older brother but he countered with a scowl that would have made their father proud. Everyone had bedded down and the camp was quiet except for the noises of the forest. Roy was roused by a sharp jab in the shoulder through his tent wall. Bewildered he sat up and opened the flap. There, eyes gleaming bright emerald green in the moonlight, was Tammy.\n\n\"What's up?\" he asked.\n\nQuick as a flash she kissed him on the lips.\n\n\"Good night,\" she whispered and then darted off on silent feet to the tent she shared with her sister.\n\nRoy grinned happily and stared after her, his belly warm and his mind tumbling. It was a good night and this was going to be a great week.\n\n*****\n\nThe following morning Roy and Tammy were finishing the barn walls when Jean called from the wood line where she had been checking the robot boring the well.\n\n\"What is it?\" Tammy called back.\n\n\"Have you been walking around over here?\" asked Jean, pointing at the ground.\n\n\"No,\" Tammy said and glanced at Roy. He shrugged and the two of them climbed down from their ladders and joined Jean.\n\n\"What is it?\" he asked, looking down.\n\n\"Tracks,\" Jean said, brushing a few leaves aside. \"Big ones.\"\n\n\"Puma,\" breathed Roy. He turned and called Mike over.\n\n\"Damn,\" Mike cursed when he saw the large paw prints.\n\n\"What is it?\" Yoshi asked, coming up behind him.\n\n\"A puma was here last night,\" said Tammy.\n\n\"I didn't think we had any in this part of the valley,\" said Mike. \"That's one reason me and Pa picked this place.\"\n\n\"Are you sure these are from last night?\" Jean asked.\n\nTammy nodded. \"Scent is pretty strong. Probably was here a few hours before sunup.\"\n\n\"You don't think it's maybe a young one, do you, Mike?\" Roy asked. \"Maybe got kicked out of another territory and wandered through here?\"\n\n\"The size of these tracks?\" Mike said, shaking his head. \"This is a big male, I'd guess.\"\n\n\"What's a puma?\" asked Yoshi. The other teens stared at him. He said defensively, \"I grew up in cities and on stations.\"\n\n\"A cougar,\" said Jean.\n\n\"Mountain lion,\" Roy added.\n\n\"Catamount, I've heard them called,\" said Tammy.\n\n\"A puma is a big damned cat,\" Mike told the younger boy. \"A serious predator. Some of them get close to a hundred kilos. Could be dangerous to us and might go after the stock.\"\n\n\"I've never seen one except in pictures,\" said Tammy, fascinated by the prints that looked so much like her own. The main difference between her prints and the puma's was hers were deeper and somewhat larger. Regardless, the untrained eye could easily mistake one for the other.\n\n\"Mike,\" said Jean, getting her brother's attention. \"You know these cats have a pretty big range. Two hundred kilometers, sometimes.\"\n\n\"Yeah,\" he acknowledged. \"And it didn't come close enough to the tents to trip the perimeter sensors.\"\n\n\"I don't get it,\" Yoshi said, looking from one to another. \"Why would the company bring in a big predator?\"\n\n\"You have to have predators for a healthy ecosystem,\" Tammy said and knelt to get a better look at the tracks. \"We've got bear, wolves, wolverines and all sorts of other predators. Big ones and small.\"\n\nYoshi suddenly went pale and looked around at the encircling forest.\n\n\"Mostly they don't mess with Humans,\" Mike said, seeing the distress on the boy's face. \"Didn't they tell you any of this when your folks came here?\"\n\n\"I wasn't really paying attention,\" admitted Yoshi.\n\n\"Christ,\" sighed Roy, looking at him in disgust.\n\n\"Yoshi, you can't let my Pa know that,\" Jean said with worried eyes.\n\n\"Do we hunt it down?\" asked Tammy, laying her six fingered hand beside one of the paw prints. It was the size of her palm.\n\n\"And do what with it?\" Mike asked. \"Hasn't attacked stock yet. Hasn't even been seen by us. As long as it keeps its distance we can't kill it or relocate it. Just have to stay alert. Don't go anywhere alone. Keep side arms handy and if you go out in the woods, carry your rifles.\"\n\n\"I don't have one,\" said Yoshi.\n\n\"Take my shotgun, then,\" said Mike. \"You know how to use a shotgun, don't you?\"\n\n\"Not really,\" admitted the younger teen.\n\n\"I'll show him,\" said Jean. \"It's easier than a rifle.\"\n\n\"Not much easier,\" Roy countered. \"What about a pistol? You got one of those?\"\n\n\"In my saddlebag,\" Yoshi confirmed.\n\n\"Not doing you any good there,\" Mike told him. \"Go and get it. Keep it on your belt. Try not to shoot any of us.\"\n\nThe rest of the week went well. The teens saw no further sign of the puma and assumed it had moved on down the valley away from settlers. They finished the barn and got the corral built before the rain rolled in. Fortunately there was no lightning and the robots made short work of putting up the frame of the cabin. When the weather cleared they all pitched in to install the roof sheeting and then separated to work on the interior of the cabin. It surprised everyone when Yoshi demonstrated considerable skill in connecting the wiring for all of the outlets. By Thursday night the walls were up and ready to be sheathed. \n\n\"Damn,\" sighed Mike, dropping into his usual spot by the fire and cracking open a beer. \"I sure do appreciate all the help, everyone.\"\n\n\"You're welcome, man,\" said Roy, opening a beer and passing it to Tammy. \"Glad I could help. Just remember, next year it's my turn.\"\n\n\"Are you going to move your sister in with you?\" Jean asked.\n\n\"No,\" he said. \"Angel gets our parents' parcel in a few years. That's the way the will was broken out.\"\n\n\"So there's already a station on it?\" asked Yoshi, taking a long pull from his own beer.\n\n\"What's left of one,\" said Roy, subdued.\n\n\"It burned,\" supplied Jean quietly. Yoshi had not heard the story of how Roy and Angel had become orphans.\n\n\"The foundations and most of the prefab are still pretty sound,\" Roy said. \"The barn is still good. Keep grazing stock there in the winter. I haven't been back yet this year.\"\n\n\"We're all heading back Saturday, right?\" said Tammy.\n\n\"Yeah,\" Mike confirmed. \"I need to get supplies and sensors and a bunch of other stuff before I can finish things up around here. And I need to arrange for a lifter to pick up the robots.\"\n\n\"In that case, why don't we overnight at your folks' station?\" she said to Roy.\n\n\"It's a little out of the way,\" he replied speculatively.\n\n\"Not all that far, Roy,\" said Mike. \"Maybe two and a half hours. The country there is fairly good for steelies once we cross the ford.\"\n\n\"I'd like to see it,\" said Jean. \"Pa said it was one of the prettiest stations in the valley.\"\n\n\"We could pick flowers and put them on the graves,\" added Tammy.\n\n\"Graves?\" Yoshi asked uncertainly.\n\n\"My folks are buried there,\" said Roy. He had gotten used to the younger teen and didn't mind him as much as he had at first.\n\n\"Come on,\" said Mike, not liking where the conversation seemed to be turning. \"Let's make s'mores again and listen to some music. We've got all day tomorrow to figure out what we'll do on the trip back.\"\n\n*****\n\nSaturday dawned clear and bright with a considerable nip in the air which was not unusual for early spring in the valley. Mike was the first out and got the fire stoked up into a proper blaze. He set up the coffee and a small kettle of water so they could make breakfast before breaking down their tents. While the others went about their morning routine he stepped off to the side and used his data pad to call his parents.",
        "\"Mike, is that you?\" his father's voice asked from the little speaker.\n\n\"It's me, Pa,\" Mike replied instantly. \"Just about to break camp. Wanted to let you know everything went well.\"\n\n\"Walls and roofs are up?\" his mother asked.\n\n\"Yes. And the well is drilled,\" confirmed Mike. \"Even finished the corral. I'll have to fly in the insulation and interior paneling next week.\"\n\n\"And your pump house,\" Bob added.\n\n\"I was thinking it might be easier to send that when the lifter comes to pick up the robots,\" said Mike. \"I mean, the tanker is still about a quarter full and I don't think I'll drink all of that in a week.\"\n\n\"Maybe,\" said Bob.\n\n\"Let's think about it when you get home,\" Deborah put in. \"How is everyone? Not too tired are you?\"\n\n\"We're all fine,\" said Mike with a smile. \"Roy fell off the ladder yesterday, though.\"\n\n\"Fell off the ladder?\" asked Bob, sounding concerned.\n\n\"Tammy sort of helped him fall off,\" Mike snickered, looking over his shoulder at his sister and his best friend. \"Then she helped him up and made sure he was alright.\"\n\n\"That boy is in for a world of bruises and scrapes if she keeps it up,\" said Bob.\n\n\"Somehow, Pa, I don't think he minds.\" Mike's voice was warm and he found himself smiling for both his sister and his friend. \"She's feeding him reconstituted eggs right now. You should see the grin on his face.\"\n\n\"Oh boy,\" groaned his father.\n\n\"Now, Bob,\" warned Deborah. \"We've talked about this.\"\n\n\"Yeah, yeah,\" Bob grumbled. \"Okay. Fine. You need anything, Mike? Need me to make any calls or anything?\"\n\n\"Nah,\" said Mike. \"I'll call again this evening when we make camp. We might be overnighting at the old Dodge place. Roy hasn't been there since they moved the winter stock.\"\n\n\"Hey! Wait a second,\" said Bob before Mike could sign off. \"What about that Takemori boy? How'd he do?\"\n\n\"Bob,\" Deborah warned.\n\n\"I want to know,\" he growled back. \"Boy's sniffing around our daughter. I know what boys can be like.\"\n\n\"He was a little shaky at first, Pa,\" Mike said judiciously. \"Got to admit, though, he surprised me with what he knows about wiring and such. Worked all day yesterday to get the outlets hooked up. Did a good job.\"\n\n\"Stands to reason,\" Deborah said. \"Grew up on stations and his father is the company communications contractor.\"\n\n\"Alright, Mike,\" said Bob, not sounding particularly impressed or satisfied. \"Keep an eye on him. I don't want him getting ideas.\"\n\n\"I'm on it, Pa,\" chuckled Mike. \"Love you both. See you in a few days.\"\n\nAfter breakfast the teens packed up whatever was left to pack, made sure the robots were secured and then mounted and rode out. Mike took the lead and Roy rode drag. Roy was not alone at the back, though. Tammy slowed Boudi whenever the trail was wide enough for the mare to walk next to Gamble, Roy's large stud, and they rode side by side, often chatting but mostly just enjoying each other's company. Mike held the pace slow in order not to tire their mounts. Steelies were known for their endurance and adaptability, and they had been bred for rough country, but there were limits and a three day journey through mostly unbroken forest was not to be rushed if the stock were to get home safe and healthy.\n\nThey made a few stops during the day to relieve themselves and one for a meal at midday, but they did not linger long anywhere. Even so, dusk was coming on hard before they crossed the ford that would take them from Mackey land across the river to the old Dodge parcel now attended to by the Postlethwaites. The ford was wide and deep with winter runoff and the steelies did not much care for the cold water. They tossed their heads, snorted and bugled the whole way across. Yoshi had all he could do to control his mare, Little Gertie, and looked as though he would get dunked. Jean was the closest to him, but she had her hands full with the pack animals. Tammy spurred her mount forward, Boudi's broad chest surging through the water, and caught hold of the boy's reins.\n\n\"Loosen your grip!\" she shouted at him over the noise of the river. \n\nYoshi blinked wide, frightened eyes at her, but he let the reins slip through his fingers. Little Gertie shook her head and bugled. She would have rushed the far bank had Tammy not taken hold of the headstall and drawn the mare close to her own, larger mount. The smaller steelie calmed and pressed her shoulder close to the larger mare.\n\n\"Yoshi, steelies are sensitive animals,\" Tammy said as she led him across the ford. \"They can tell when you're scared. And you have to let them find their own way across obstacles. They know what they're doing. Just point them where you want them to go. Little Gertie here is the mildest steelie I've ever seen. That means she's the most sensitive, too. You have got to show her confidence to keep her calm. Okay?\"\n\n\"Yeah,\" Yoshi gasped. He was shivering from the cold water splashing across his thighs, but he was no longer shaking with fright. \"I'll try.\"\n\n\"Take your reins,\" said Tammy, nodding at the long strap dangling about the animal's neck. \"I'll stay next to you. You'll be alright. Not much farther.\"\n\nYoshi blinked at the river bank ahead and nodded jerkily. He took up the reins and forced himself not to draw them in too tight. Tammy let go of the headstall. Under him Yoshi felt Little Gertie shiver and twitch. She did not bolt, though.\n\n\"That's better,\" said Tammy confidently. \"She's alright. Just let her feel the bottom. If she wants to go one way or another, let her. That just means she's finding foot holds. And remember, steelies can swim. They swim better than horses. If she plunges deep, just slip off the saddle and hang onto the pommel. She'll drag you clear of the water and you can mount again.\"\n\n\"Okay,\" he replied, though he looked doubtfully at the cat girl.\n\n\"Can you swim?\" she asked, frowning with concern.\n\nThe boy looked back to see Jean leading the pack animals. Her expression was one of fear and concern.\n\n\"You can't, can you?\" said Tammy.\n\n\"No,\" he admitted shamefacedly.\n\n\"Why didn't you tell us?\" she demanded.\n\nYoshi looked meaningfully at Jean again and then back to Tammy.\n\n\"You idiot,\" she said. \"We all know you're an off-worlder. Just tell us shit like this. We'll help.\"\n\n\"But your dad...\" Yoshi didn't finish. He just looked miserable.\n\n\"Pa isn't here, is he?\" she asked more gently. \"And he'll warm up to you faster if you show you've got enough sense to learn about the frontier. This is a wild world, Yoshi. We're way beyond outside help. We have only each other to depend on and we have to know we can rely on you. We'll teach you what you need to know, but we can't do that if you don't tell us about things like you not knowing how to swim. Okay?\"\n\nAbashed, Yoshi could not meet her eyes and summoned only enough gumption to nod.\n\n\"Yoshi, it's alright,\" she persisted. \"We'll teach you to swim when it gets warmer. We'll teach you to shoot. Hell, just ask my pa. He likes shooting. And if you tell him about bringing down those deer with your bow he might warm up to you more.\"\n\n\"You think?\" the boy asked hopefully.\n\n\"I think so,\" she said encouragingly. \"We're almost to the bank. Get your feet firm in the stirrups and rise up a bit off the saddle. She's going to rock under you. Just center your weight. Don't over balance.\"\n\nTammy eased her mount away from the smaller mare and Yoshi did as she said. Little Gertie lunged up the bank in forceful hops until she was clear of the water. Soon Jean joined them with the pack animals and Roy followed.\n\n\"You alright, Yoshi?\" asked Mike. He had drawn his stud, Tico, up near an old, overgrown trail that looked as if it led up the slope to the north.\n\n\"I am now,\" Yoshi replied. He was chilled from the water and his teeth were chattering, but the sun was still shining through the trees and he felt warmer than a minute before.\n\n\"Jean, why don't you let Tammy take the stock,\" Mike said. \"Make sure Yoshi is okay until we get to Dodge Station. Trail is wider here. Should be easier going.\"\n\nThey did not make the station before dark, but it was not much after sundown when they led their steelies into the old barn and settled them for the night. Rather than pitching tents they decided to sleep in the loft. Dinner was cooked over the camp stove instead of on a fire and no one was in the mood for s'mores or much else. They just wanted sleep.\n\n*****\n\n\"Mike! Wake up! Wake up, Mike!\"\n\nMike rolled onto his back, blinking bleary eyes into the darkness.\n\n\"Tammy?\" he murmured. \"What's going on?\"\n\n\"Sshh,\" she hissed. \"Listen!\"\n\nMike sat up in his blankets and listened.\n\n\"Is that thunder?\" he asked.\n\n\"I don't think so,\" his sister said in a low voice.\n\nThe noise was long and drawn out. Deep as distant thunder, it lasted far too long.\n\n\"Not wind, either,\" he said.\n\n\"It's almost like a shuttle,\" she said.\n\n\"Too deep for that,\" he said and tossed his blankets off. \"Wake everybody. Get your binoculars.\"\n\nTammy scuttled off and began shaking everyone to consciousness. Mike picked up his lantern and switched it on, illuminating the barn loft and eliciting groans of complaint from his drowsy companions. The air was cool but he ignored it long enough to get his boots on and to find his jacket. Roy was the first out of his bedroll and like Mike he got his boots on before finding warmer clothes.\n\n\"What's going on?\" Jean asked.\n\n\"What's that noise?\" asked Roy.\n\n\"That's a ship coming in for a landing,\" said Yoshi, pulling his winter coat on before finding his boots.\n\n\"Are you sure?\" Mike demanded. Ships did not land on Juniper. Shuttles landed. That's what shuttles were for. Ships remained in orbit because there was no proper port anywhere on the planet. Building one would cost too much and freighters were not built to land on unimproved terrain. That would make them cost too much.\n\n\"I'm sure,\" Yoshi confirmed, finally putting his boots on. \"We lived five klicks from the port on Tamerlane. Damned things flew right over top of us every day. My dad...\"\n\n\"Yoshi!\" snapped Jean, silencing him. She turned to her older brother. \"What do we do?\"\n\n\"I don't know,\" he said, taking the binoculars from Tammy. \"Get the animals saddled. Don't worry about the packs. Just get the emergency gear. Yoshi, come with me.\"\n\n\"Why?\" Roy asked, already heading for the ladder down.\n\n\"If it is a ship coming in for a landing, they might be in trouble.\" Mike strode for the loft door at the south end of the barn, Yoshi scrambling after him, still trying to fasten his boots.\n\nMike slid the door aside and gazed up at the night sky above the trees. He knew these stars well and knew roughly where OS1, the orbital station, should be. He found it and then began scanning.\n\n\"There!\" said Yoshi, pointing.\n\n\"Where?\" asked Mike, dropping the binoculars long enough to see where the younger boy was pointing.\n\nJust above the tree tops was a line of white smoke or a contrail illuminated by the risen moons. Mike couldn't be sure which. The binoculars revealed a dark, streamlined shape like a massive shark cutting through the air. It wobbled drunkenly in its descent and cut a long curve as it lined up with the ridge of hills to the east. Red flame burst from the side and quickly vanished. Mike's jaw dropped and he thrust the binoculars into Yoshi's hands.\n\n\"What do you think?\" he asked almost fearfully.\n\n\"I think it's going to crash!\" Yoshi said in awe. \"Never seen a crash landing.\"\n\n\"Keep an eye on it,\" ordered Mike. He dashed back to his bedroll and found his data pad. A flip of a switch brought it to life and he listened while his parents' transceiver chimed. It was the middle of the night so likely they were both sound asleep, but his father had installed an extension in their bedroom long ago. It took only three chimes before Bob's voice came over the link.\n\n\"Mike?\" Bob said. He did not sound sleepy. \"What's wrong?\"\n\n\"We're alright, Pa,\" Mike assured him. \"I think a ship is about to crash land.\"\n\n\"A ship?\" demanded Bob.\n\n\"Open your window,\" said Mike hurriedly. \"You can probably hear it. Sounds like thunder.\"\n\n\"Hold on. Your mother's doing it now.\"\n\nMike heard the muffled sound of the window sliding open and waited.\n\n\"We can hear it,\" Bob said after a moment. \"You sure it's a ship? Sounds way the hell off.\"\n\n\"I saw it through binoculars, Pa. It's a ship.\"\n\n\"Alright,\" Bob said. In the background Mike could hear movement and the closet door open. \"I'm on my way.\"\n\n\"We're on our way!\" called Deborah insistently.\n\n\"We're on our way,\" grunted Bob.\n\n\"Pa, don't get in too big a hurry,\" Mike said in a rush. \"I'll go and check it out. I'll report back and you can bring whatever is needed. Maybe it only needs parts. It hasn't even set down yet.\"\n\n\"You stay where you are!\" Deborah snapped.\n\n\"No!\" countered Bob. \"Babe, he's right.\"\n\n\"But...\" she began.\n\n\"He's right,\" Bob cut in. \"If the ship is still in the air we won't know where to go. Even in the spinner it will take us an hour to get to Mike and the other kids. Maybe we won't be able to land. That means we'll need mounts. We need emergency gear for sure. And OS1 is probably already tracking it. Mike and the kids are first responders.\"\n\n\"But...\" she began again.\n\n\"It is their duty!\" Bob insisted.\n\n\"They're just kids!\" Deborah objected.\n\n\"They are settlers,\" said Bob more gently. \"Just like Dan and me were back when we rescued Tammy. Mike knows what to do. They all do except maybe that Takemori kid. Keep an eye on him, Mike. Don't let him get hurt.\"\n\n\"I understand, Pa,\" said Mike. \"Don't worry, Ma. We'll be okay. I'll take care of them.\n\nWhen we find the ship, I'll report back, let you know what the terrain is like.\"\n\n\"Good luck, son,\" said Bob. \"We'll get the rescue team up and ready.\"\n\n\"Talk to you soon. Love you both. Out.\"\n\nMike was already heading back to the loft door as he signed off. Yoshi was still looking through the binoculars. The rumbling from the ship was getting louder.\n\n\"What is it doing?\" asked Mike, stopping behind him.\n\n\"It keeps dropping lower,\" Yoshi said. \"Slowing down, too. Still more than two hundred klicks out, but closing fast. It'll be over your station pretty soon. I don't know if it's going to make it this far, though.\"\n\n\"Why?\" asked Mike. He wanted to take the binoculars and have a look for himself, but Yoshi was doing fine and the binoculars would record the location wherever the ship came down anyway.\n\n\"It looks pretty beat up,\" said Yoshi. \"Fires and small explosions keep flashing from the side. Mike, I've never seen a ship like this before.\"\n\n\"Is it not one of ours?\" Mike asked, intrigued. He had not expected that.\n\n\"Not any design I ever saw.\" Yoshi shook his head, though he did not take the binoculars from his eyes. \"Doesn't look CP at all. We don't build them that way. Drive looks weird. It isn't fully enclosed.\"\n\n\"Hull damage, maybe,\" speculated Mike.\n\n\"Don't think it would be that symmetrical.\" Yoshi leaned forward in anticipation. \"It just dropped a hundred meters!\"\n\nMike looked out into the night sky and saw the bright red flashes of more fires explode and die. The ship was definitely lower.\n\n\"It's wobbling!\" reported Yoshi excitedly. \"Now it's steady again! Still dropping. I think it just passed over your station. Coming down! It's hitting the treetops! Wow! That was close!\"\n\n\"Hey! You got the animals saddled?\" Mike called down to the others.\n\n\"They're all ready to go!\" Jean called back.\n\n\"Emergency gear is on the stock,\" added Roy.\n\n\"Rifles are loaded and checked!\" Tammy put in.\n\nA distant boom sounded and the thunder ended.\n\n\"It hit!\" cried Yoshi in awe and wonder. \"Oh man! It just clipped a tree and went down hard! Smoke! Lots of smoke!\"\n\nMike snatched the binoculars from the smaller boy and looked for himself. Yoshi was right. A cloud of smoke showed among the trees and there was a gash in the forest canopy anyone could see. He took the lenses from his eyes and transferred the position from the binoculars to his pad then sent it broadcast over the community net with a flash alert for emergency aid.\n\n\"Come on!\" Mike shouted and stormed down the ladder. Yoshi was right behind him and the whole group was mounted and on the trail seconds later.\n\n\"Shouldn't we be galloping?\" Yoshi asked nobody in particular.\n\n\"It's nighttime,\" Tammy called over her shoulder. She was third in line and leading the stock animals with their small emergency packs full of medical gear and tools.\n\n\"The steelies don't have NVG*, Yoshi,\" explained Jean. She rode next to the boy and gave him a grim smile he could barely see in the dark under the trees. \"Keep low to Little Gertie's neck. Don't want to get knocked off if she goes under a low branch.\"\n\nYoshi obeyed, forgetting his excitement and suddenly fearful of the night shrouded forest.\n\nThough they were not galloping, their mounts were traveling at a good trot. Strong legs and sharp claws made their trek easier than if the teens had been astride horses or any other hooved animals. From time to time Mike checked his data pad to be sure they were still on course. Minutes turned to an hour. The underbrush became thicker and their pace slowed. Finding game trails was less easy than in the daylight, but Roy had thought to bring his NVG goggles and everyone had flashlights. Long before they sighted the ship they could see where it was by the cloud of smoke that hung low around the trunks of the trees.\n\nMike reined in and lifted his binoculars to his eyes, scanning the area.\n\n\"It's a mess up there,\" he declared.\n\n\"Bad?\" Roy asked.\n\n\"Downed trees and branches everywhere,\" said Mike. \"We can get a little closer with the steelies, but I think we'll need to cover the last bit on foot. Have to check the path. Don't want to lame any of the stock.\"\n\n\"It'll be dawn soon,\" Tammy observed.\n\n\"They might not be able to wait for daylight,\" Mike said.\n\nHe was just about to spur his mount forward when Yoshi made a choked sound of disbelief.\n\n\"What is it?\" Jean demanded.\n\n\"The station!\" he cried and pointed up through a break in the trees.\n\nAll eyes scanned the patch of sky and locked on bright sparks, no more than pin pricks. The sparks flared for a few seconds and then stopped.\n\n\"Reckon it's shuttles coming to help?\" Roy said, frowning.\n\nMike lifted his binoculars and looked at OS1. They showed him very little. As powerful as they were, the binoculars were not meant for looking at things in orbit.\n\n\"I don't think so,\" he said after consideration. \"Something going on up there, but it isn't shuttles launching. Jean, call Pa. Tell him what we're doing. Roy, come with me. The rest of you wait here until we've scouted a bit.\"\n\n\"I should go, too,\" said Tammy, handing the stock lead to Yoshi.\n\n\"No,\" Mike said curtly. \"Stay here. You're the next oldest. You're in charge till we get back. We'll call if the way is clear enough.\"\n\nTammy flicked her tail pensively. She didn't like it, but she understood what her brother intended. Still, she didn't like it. She could see better than any of the Humans and her sense of smell was many times greater. She didn't need night vision goggles or even a flashlight, though both would help. She didn't think any predator would have stuck around the area after the crash, but there was a chance and she would know about it before either Jean or Yoshi. Their steelies would likely notice the scent of a bear or puma before she did, but they would not necessarily react in an intelligent manner. They might bolt or circle to defend themselves. She would be able to reason out a defense in such a situation and protect her younger sister and the off-world boy. With that in mind she drew her Johnson Big Bore from the boot strapped along her saddle.\n\n*****\n\n\"Christ,\" Mike swore softly as he tied his reins to a fallen tree. \"Watch your footing.\"\n\n\"Yeah,\" agreed Roy, sliding out of his saddle. \"I've never seen a crash site before.\"",
        "\"Me neither.\" Mike stepped over a thick limb, avoiding its shattered end. Smoke was drifting from the downed ship, but it did not smell like the woods had caught fire. \"I think the extinguishers must have worked. Just smells like scorched metal and plastic.\"\n\n\"Stinks,\" Roy agreed. He adjusted his NVG and followed his friend.\n\nThe ship had not buried itself in the hillside as they had expected. Sure, the soil was plowed up and trees were down everywhere, but the ship remained on the surface and was more or less whole. Landing struts could be seen thrust down into the rocky ground, but they were intact and the ship was stable. At least, it looked stable. But what a ship! It was sleek and the impression of a shark remained in Mike's mind. All along its sides showed scorch marks and large pits from what had to be weapons' fire. Neither teen could think of anything else it could be.\n\n\"I better call, Pa,\" said Mike, stopping several meters from the thing.\n\nHe raised the illuminated screen of his pad and tapped send for his radio link. An out of service alert crossed the screen and Mike frowned.\n\n\"Check your pad, Roy,\" he said, tapping the screen icon for diagnostic mode.\n\n\"What the hell?\" murmured Roy. \"Says out of service. This thing's never been out of service.\"\n\n\"Checking for radiation leakage,\" Mike told him as his fingers danced over his pad.\n\n\"We would have gotten an alert if the levels were dangerous,\" Roy said, not sounding overly sure.\n\n\"Mine says it's clear,\" reported Mike. \"What's yours say?\"\n\n\"Clear,\" the red haired boy confirmed. \"Standard background stuff is all it registers.\"\n\n\"Think this thing is jamming our transmissions?\" wondered Mike.\n\n\"Why would it?\" Roy said. He tapped a few keys on his screen and shook his head. \"I'm not picking up any emissions coming from the ship. And... Wow! This is weird.\"\n\n\"What?\" demanded Mike.\n\n\"OS1 isn't broadcasting.\" Roy's eyes were wide with astonishment. \"Those flashes!\"\n\n\"The communications array?\" Mike asked. He checked his own pad and looked up at his friend in alarm. \"Maybe this ship hit it on its way in. You think?\"\n\n\"You called your dad, though,\" said Roy.\n\n\"Yeah,\" agreed Mike thoughtfully. \"No time for this. We'll have to figure it out later. If there are survivors inside, they probably need help.\"\n\n\"Yeah, but wait a second,\" Roy said and tapped his screen again. Holding the pad close to his mouth he said, \"Tammy, you there?\"\n\n\"Right here, Roy. What's up?\" she responded immediately.\n\n\"You three check your pads,\" he replied. \"See if you can communicate with anyone else.\"\n\n\"Jean couldn't get through to our pa. Let me check again,\" she said. After a brief silence Tammy called back, \"Nothing. We've got no communication with anyone other than you. The main database and central routing hub are both offline. Our screens just report out of service.\"\n\n\"Ours too,\" Roy said. \"We're going to check out the ship. Stand by.\"\n\n\"Be careful, Roy,\" she said. \"I don't like this.\"\n\n\"I'll be fine,\" he assured her.\n\n\"But you're so damned clumsy,\" she complained.\n\n\"I'll be fine, Tammy,\" he said with a small grin.\n\n\"Come on,\" Mike said and waved his friend to follow him.\n\nA hatch on the starboard side of the ship was jammed hard into the soil which prevented it from coming all the way open. A quick inspection showed that it was supposed to slide sideways along the hull but rocks and dirt were piled against it. Between the two of them, Mike and Roy were able to clear away enough debris to let the hatch move far enough to allow them access. The interior of the ship was illuminated with greenish lamps which showed the boys scorched equipment unlike any they had ever seen.\n\n\"Stinks,\" said Roy, covering his mouth with a bandana to filter some of the smoke. His eyes watered at something in the air and he blinked several times to clear away the tears.\n\n\"Wish we had masks,\" Mike said.\n\n\"Yeah,\" agreed Roy. \"Maybe we should suggest that for the emergency packs.\"\n\n\"And goggles,\" said Mike, nodding. He tied his own bandana over his nose and mouth and gave Roy a nod.\n\nWith feelings of dread and uncertainty the two boys entered the strange ship. It was eerily silent. Only the ticking of cooling metal met their straining ears. As they passed into what appeared to be the central cabin they saw a heavy hatch to the rear with what had to be a flashing warning light above it. The sign below was written in a text that looked nothing like any CP language either knew of.\n\n\"Could that be Arabic?\" asked Roy.\n\n\"Don't think so,\" said Mike. \"Maybe it's Thimkein.\"\n\n\"What would a Thimkein ship be doing way the hell out here, Mike? They're on the other side of the Confederacy.\"\n\n\"How should I know?\" Mike shook his head and pointed to the right where the cockpit was likely to be.\n\nThe central cabin was small and it took only a few steps to bring them to a sealed interior door. A panel of buttons was mounted next to it, but again, neither boy could read the text. A large blue button at the top was labeled with bright yellow letters and this Mike pressed. The door slid aside smoothly and a rush of feculent air spilled out on them, blowing away some of the stinging smoke. The boys stood in shock at the sight that greeted them. On the deck, crumpled against the bulkhead was a headless body in an environment suit as if it had been thrown there during the landing. A smear of blood across the deck looked black in the greenish light and Mike felt as if he would vomit. Roy, though, took a tentative step over the smear to reach the seats where the crew obviously would sit to pilot the small vessel. Only one seat was occupied.\n\n\"Mike!\" he called over his shoulder as he reached for the odd catches on the restraining straps. \"Come on! I think we've got a survivor!\"\n\nMike shook off his nausea with a gulp and tore his eyes from the headless body. Like Roy he stepped over the blood and was at his friend's side in a second.\n\n\"It's a woman!\" Roy told him, pulling at one of the buckles. \"I can't get the damned straps to let go.\"\n\n\"Let me have a look!\" Mike reached past Roy and grasped the buckle. He examined it briefly before twisting a small lever down. The buckle popped open, releasing the five point harness. \"Get her shoulders! Be careful of her head.\"\n\n\"Think she's alive?\" Roy asked as he eased the pilot from her seat.\n\n\"Let's get her outside,\" said Mike. \"Don't trip.\"\n\nOnce outside they lay the unconscious pilot on the ground. Mike was going over the suit seals, trying to figure out how to get the helmet off. It was the strangest design he had ever seen. The faceplate was opaque and it looked like there were thin armor plates on the chest and thighs. A pack over her belly contained cylinders, presumably her life support.\n\n\"Tammy,\" Roy called over his pad. \"We've got a survivor, we think. Bring up a stretcher and a med-kit. Make it quick!\"\n\n\"I can't get her helmet off,\" grumbled Mike. \"Give me some light here.\"\n\nRoy switched on his flashlight and shone it down on the unconscious woman. His eyes roamed over her and he realized she was nearly as tall as Mike was. Just as he scanned down to her boots Tammy sprang around the nose of the ship with the med-kit. Jean arrived panting and out of breath a moment later.\n\n\"We left Yoshi with the animals,\" Tammy explained without being asked.\n\n\"Want me to open the stretcher?' asked Jean, holding it ready in her hands.\n\n\"Go ahead,\" said Mike, taking the med-kit from his adopted sister.\n\n\"Tammy, look at this,\" said Roy in an odd tone.\n\n\"What is it?\" she asked.\n\n\"Roy, I need that light!\" snapped Mike.\n\n\"I got you,\" said Jean, shining her flashlight where Mike wanted it.\n\n\"Look at her feet,\" said Roy in a lower voice.\n\n\"Her feet?\" Tammy said and frowned down at the oddly shaped boots. \"What the hell?\"\n\n\"Holly Buda!\" cursed Mike and jerked back in surprise. He turned to look up at his sister with wide eyes.\n\nTammy looked at his face and then down at the unconscious pilot. For an instant, time stopped. She had only ever seen a face like that in a mirror or a news broadcast. The pilot was jZav`Etch!\n\n*****\n\n*Steelies - Stiliosaurs - Named for their discoverer, Anton Stili, are reptile-like animals roughly the size of Earthly horses with a scaly hide, four clawed, grasping feet and prehensile tails split in a V near the end. Another notable feature is the pair of eyes on the back of their heads.\n\n*NVG - Night Vision Goggles. This is actually a misnomer. Properly they should be called Broad Spectrum Goggles because they can be used to enhance normal vision at any time and under any conditions. The label NVG is holdover from ancient times when crude versions of the devices were used for military operations after dark or in lowlight environments."
    ],
    "authorname": "RipperFish",
    "tags": [
        "adventure",
        "cat",
        "furry",
        "future",
        "sci-fi",
        "science fiction",
        "survival"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-world-for-the-taking-ch-02"
}