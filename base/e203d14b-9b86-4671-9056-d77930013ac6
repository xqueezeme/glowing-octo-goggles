{
    "title": "Birthday Girl Ch. 07",
    "pages": [
        "Hey guys, \n\nI've used even more creative license for this one than the previous one so, try not to burn me at the stake or anything. \n\nI apologize if the chapters are getting longer and longer but once I start the story kinda gets away from me. These characters can be really stubborn like that. \n\nI would like to thank Nick for his help with the 'speech', the story wouldn't have been the same without it. I didn't know the first thing about writing a proposal speech. \n\nDisclaimer: No animals were hurt during the imagining or writing of this story. There was a small scare but everything worked out fine in the end. \n\nVote, Comment and Enjoy! \n\n****************************************** \n\nAs I drifted towards wakefulness, the first thing I noticed is that I was hard. Painfully so. This wasn't normal morning wood, this was the mother of all morning woods, I could probably drill an oil well with this thing. The second thing that I noticed as my senses became sharper was that there was something soft gliding over it, up and down in a slow languid motion, caressing and at the same time exploring. I ran an internal diagnostic and found neither of my hands were occupied with anything stiff, so it begged the question, just who the hell was having their way with me? \n\nFurther in-depth diagnostics revealed there was a warm body plastered to my left side and it had my left leg locked between its own, and its soft hand was the one in places where only my hand had had the privilege of visiting in the past. The events of last night came back to me and I twitched as I remembered exactly who I was in bed with. \n\n\"Took you long enough,\" Melissa whispered from where her face was buried in my neck, gently suckling the curve where my neck met my shoulder. \n\nHer grip became a little firmer now, though her pace remained the same, relaxed and unhurried. The speech centre in my brain had not booted up yet so I only managed to groan quietly, once again completely at her mercy. \n\nI opened my eyes to see it was still dark but there was a faint glow outside the window signaling that dawn was approaching. If we were in the city it would have been hard to tell whether it was the light of morn or a streetlight outside the window, but here it was obvious that dawn was about to break. It was chilly in the loft as we had forgotten to close the balcony door completely the previous night, but we were warm and toasty wrapped up under the duvet. \n\nMelissa ran her thumb over the tip of my erection on the upstroke and I jerked my hips up involuntarily, \n\n\"Liss...\" \n\n\"Oh look, he speaks,\" she said, and I could feel her smiling into my neck. \n\nRegaining use of my limbs, I lifted them to try and put them around her but she bit hard into my shoulder and shook her head. I retreated. This was so unfair, she was taking revenge for last night. She released her bite as my hands fell back to the bed and started licking and blowing softly over the spot where she had bit, soothing it. I guess she was taking a page from what I had written yesterday. \n\nI was oozing pre-cum by now and she collected it on every stroke with a swirl of her thumb over the tip. Her grip was just firm enough to heighten the sensation but light enough that I didn't shoot immediately. It was exquisite torture, being shown the finish line but not being allowed to get to it. \n\nTwice more I tried to move and each time she stopped me until I gave up and lay helplessly under her control. She picked up the pace and her grip became increasingly tighter as did her sucking on my neck. That was going to leave a mark, I was sure of it, she was branding me. \n\nThe sensations in my groin were going crazy now and the tingling had begun, signaling the approaching climax. Try as hard as I might, I couldn't stop myself from thrusting my hips up with every down stroke of hers, and with each repetition the pleasure kept mounting and mounting. I couldn't decide whether I wanted to cum or whether I wanted this torture to continue. I was torn between what was going on between my legs and the half pain half pleasure sensation she was giving me on my neck. \n\nI gritted my teeth and clenched my fists, trying to stop the freight train that was approaching at full speed. She let go of my neck and trailed light kisses up to my ear, \n\n\"Let it go,\" she whispered sexily, \"cum for me... baby,\" and licked the outer curve of my ear with the tip of her tongue. \n\nThat did it. It was the first time she had used a term of endearment with me and I couldn't hold back, I erupted into my boxer shorts, and she never broke the pace of her strokes. The movement of my hips became erratic and I threw my arms around her, holding her tightly to me and burying my face in her hair. \n\nShe slowed her hand as I finished and started becoming soft. I had never been an endearment kinda guy, and that baby, honey, sweetie crap always sickened me. I didn't understand how people threw around such words so non-chalantly when they didn't mean them, but when I heard it from Lissy's lips, it seemed so earnest and heart-felt that I couldn't wait for her to utter it again and again. \n\n\"That was for last night,\" she said as I relaxed my hold on her and eased back on my pillow. \n\n\"Mel, if that was your idea of getting back, I think you've got this revenge concept all wrong.\" \n\n\"How so?\" \n\n\"First of all, it's not supposed to feel that good,\" I reached for her again, and maneuvered her on top until she was lying flat on me. \n\n\"I started out wanting to tease you and leave you hanging, but I got carried away.\" She said as she brought her lips closer to mine. \n\n\"I know. I have that effect on girls, can't help it.\" I kissed her, worried that maybe I had dragon breath, but she didn't seem to mind. \n\nShe snorted into my lips. \"Oh, and by the way, I almost forgot,\" she smacked me on my chest. \n\n\"What was that for?\" I asked, perplexed. \n\n\"For calling me Elsa.\" \n\n\"Crap. You heard that? I thought you were asleep.\" \n\n\"I didn't peg you as the type to watch Frozen.\" \n\n\"I didn't watch it of my own free will, Jenna made us watch it on movie night.\" \n\n\"Movie night?\" she questioned. \n\n\"Yeah, we have this tradition where we watch a movie every Sunday afternoon at Nick's place, and we all get a turn to pick a movie every week.\" \n\nShe looked at me curiously, \"How come I've never been invited?\" \n\nI had no answer for that; I had been caught completely offside. For some reason I'd never thought of calling her over. \n\n\"I... uhmm...ahh...didn't think you'd want to...\" \n\nWrong answer. \n\n\"Didn't think I'd want to what?\" she asked indignantly. \n\nI sighed and took a moment to collect myself, \"Melissa, would you like to come over for a movie and popcorn one of these fine days?\" \n\n\"I'll think about it,\" she huffed and turned her face away, blowing up her cheeks. \n\n\"Hey,\" I turned her back to me, poking her cheek with my finger, \"don't be like that. Tell you what, I'll give you three of my turns to pick the movie, how about that?\" \n\n\"Five,\" she negotiated. \n\n\"You greedy little minx,\" I slapped her butt, \"Four is my last offer, take it or leave it.\" \n\n\"Done,\" she smiled, lighting her face up again. \n\nWe went back to kissing and my hands roamed her back until they settled under her pajama bottoms, on her bare ass. I kneaded those firm smooth globes and she started grinding her pelvis on mine, her tongue trying to find my tonsils again. I wonder what she'll do with them once she finds them. \n\nEven though I was fully engrossed in Melissa, I couldn't help but feel my spider-senses starting to tingle. Something wasn't right, I could feel a disturbance in the force. Reluctantly I withdrew my focus from what Melissa was doing to my lips to mentally scan the room. Something just didn't feel right. \n\nThen I heard it. It was faint but unmistakable. There was a light rustle at the base of the stairs followed by the faintest whispering. Instantly I knew what was going on. I broke our kiss to find Melissa with her eyes closed, still searching for my lips. \n\n\"Liss,\" I whispered. \n\n\"Huh?\" she asked, opening her eyes, still dazed. \n\nI reluctantly withdrew my hands from her pants and put one finger on my lips, telling her to be quiet. Rolling her off me to her previous position by my side, I tucked the blanket up to our chins. \n\n\"Pretend to be asleep,\" I whispered to her again and she gave me a confused look. \n\nI couldn't blame her. Here we were having a steamy moment to ourselves and now I was suddenly telling her to go to sleep. I was pushing the limits of weirdness here but I had my reasons which she would undoubtedly discover very soon. \n\n\"Trust me,\" I mouthed and dragged my palm down over her eyes, closing them. \n\nSimilarly I closed my eyes and pretended to be fast asleep, though my ears were straining to pick up anything else. I didn't have to wait long. There it was. The unmistakable swish of cloth moving against cloth, getting closer and closer. About halfway up there was a creak of the stairs, which in the silence of the morning, was like a gunshot. The swishing ceased immediately, followed by quiet hushing and shushing. I risked opening one eye and saw a tiny smile playing on Melissa's lips though her eyes remained closed. She had caught on to what was going on. \n\nAfter about a minute of silence, the approach began again and soon muffled giggling could be heard within the loft. I had to struggle to keep a straight face and remain still. Under the blanket Melissa had taken hold of my hand and she was squeezing it, indicating she was having a hard time keeping still as well. \n\nThere was a loud cry of \"Wake Up Brian!\" and something jumped on the bed with full force, launching me and Melissa almost a foot into the air before landing back on to the bed. Loud giggling followed and Jenna started shouting, \n\n\"I got you! I got you! I sooooooo got you!!\" \n\nWe both pretended to rub our eyes in confusion and looked around as if we'd just woken up. Jen was jumping up and down on the bed gleefully, clapping her hands and laughing at the ceiling. Nick was standing at the foot of the bed trying to smile, looking like something that the cat had dragged in. One look at him and I knew he hadn't slept a wink the entire night. \n\n\"What is this about Jenna?\" Melissa asked groggily, playing her part to the hilt. \n\nI wanted to grab her and kiss the living crap out of her right then. How many women do you know who would humor your friends at five in the morning when they barged into your room and jumped into your bed? \n\nJenna had the decency to look sheepish. I think it finally hit her that there was collateral damage involved. She flopped down on the bed next to Melissa with a guilty look on her face, chewing her lower lip. \n\n\"Oh no, I'm so sorry Melissa, I didn't want to disturb you. I just wanted to get back at Brian. I didn't think this through, I didn't stop and think that maybe you'd mind it.\" \n\nShe was twisting the blanket in her hands now, going over what she'd done. She looked like the puppy you left at home and came back to find had torn up all the pillows and peed on the couch and had left muddy paw prints all over the carpet. \n\n\"I tried to stop her,\" Nick said, lifting his arms, \"but she just wouldn't listen, said she would never get a better chance at getting back at you.\" \n\nWell, what a saint we have here. Nick is just the best, isn't he? Always looking out for my well-being. Yeah right, I knew better. This must have been his master-plan and he must have been the one to plant the seed in Jenna's mind last night, but since then, he'd been too wrapped up about what would happen later today, and he must have lost the enthusiasm for it. Otherwise, he'd have been jumping on the bed as well. \n\n\"Screw you Nick!\" Jenna said angrily, all guilt thrown out the window. \"You're the one who came up with this idea when we went to bed last night. You even set the alarm!\" \n\nWhat'd I tell ya? \n\n\"Ok, Ok, its fine,\" Melissa said, covering a yawn. \"What I want to know is what you're getting back at Brian for.\" \n\n\"It's nothing Mel-\" \n\n\"This asshole,\" Jenna cut me off, pointing a finger at me, and I flopped back down on the bed and covered my face with the blanket. Here we go. \n\n\"This asshole used to do this to us all the time in college. You have no idea how many times I've woken up with almost a panic attack because he would jump on our bed at two in the morning wearing a Freddy Krueger mask. I've almost peed in fright because of him.\" \n\n\"Brian...?\" I heard Melissa's questioning tone. \n\n\"I have never done anything of the sort,\" I said from under the blanket. \n\n\"Why you-,\" Jenna leaped on me and tried to get the covers off me, unsuccessfully. \n\nShe gave up and turned back to Melissa, \"Once, he silently picked me up when I was asleep and dropped me in a tub full of ice cold water.\" \n\n\"Lies!\" I shouted in protest, still under the blanket. \n\n\"No way,\" Melissa said incredulously, \"You didn't wake up when he picked you up?\" \n\n\"I'm a deep sleeper. And besides, I was on the couch and I thought it was Nick picking me up to take me to our bedroom. Melissa I'm so sorry, I really shouldn't have bothered you, think you can forgive me?\" \n\n\"Don't worry about it,\" Melissa calmed her, \"I would have done the same thing in your place.\" \n\nThere were more footsteps coming up the steps then, \"Is everything alright?\" I heard Sally asking from the direction of the stairs, \"we heard shouting.\" \n\n\"Everything is alright, we were just playing a prank on them,\" Nick said. \n\n\"Why is Brian under the covers?\" Bill asked. \n\n\"You don't wanna see me without my make-up dude,\" I said, sticking one hand out to wave at them. \n\n\"Is he drunk?\" I heard him silently asking Nick, as the others giggled. \n\n\"No I'm not drunk,\" I said, finally getting the blanket off me. \n\nBill and Nick pretended to cringe, taking a step backwards and Bill said, \"You were right man, you look terrible without make-up,\" much to the mirth of every else present. \n\n\"Ha-freaking-ha,\" I told him sarcastically, \"By the way, what time is it?\" \n\n\"Five fifteen,\" Sally replied. \n\n\"Shit. The van is going to arrive to pick us up at six, we need to get ready or we'll be late.\" I announced. \n\nI saw Nick's face going pale again as the others agreed, scurrying downstairs to perform their morning rituals, leaving me and Melissa alone again. I turned to her, \n\n\"Hey, I hope you didn't mind, Jenna didn't mean anything bad by it. It's just always been like this between us, we always play pranks on each other, only there's never been a significant other on my side to consider before.\" \n\n\"Of course not, I think it's sweet.\" \n\n\"Really? You're the best,\" I said, kissing her on her cheek. \n\n\"But tell me, did you really do all those things to Jenna?\" she asked, \"I can't believe you could be so mean to her.\" \n\n\"Don't let her innocent visage fool you,\" I defended myself. \"The night I threw her in cold water we had a party at our house and she'd pulled down my pants down in front of everyone. It was just lucky I was wearing boxers. Don't let that little thing deceive you, she's as evil as they get.\" \n\nShe just smiled to herself and shook her head. \n\n\"What?\" I asked. \n\n\"I've never seen a bunch of friends like you guys. You're so close to each other but you treat each other like utter crap.\" \n\nI thought about it and nodded my head in affirmation, \"Best description I've ever heard. But I cannot overstate the fact that ninety percent of the time, I'm the victim.\" \n\n\"Of course you are, you poor little thing,\" she said as she pushed me back on the bed and climbed on top of me, giving me a long hard kiss. Before we could go much further she broke it off, getting off me and going to her suitcase. \n\n\"We're going to pick this up where we left off tonight,\" she said as she got her things from her bag, then headed downstairs to the shower. \n\nIf the mess in my shorts was any indication, I needed one as well. Like badly. \n\n*************************************** \n\nThe park van was already waiting for fifteen minutes before we all assembled outside, ready to depart. Clothing was comfortable and light since the sun was already posed to make an appearance and the temperature was pleasant. Shorts and khaki's dominated, with hiking shoes and light T-shirts or tops. Big straw hats and sunglasses were all around although I refrained from the sunglasses because of my regular glasses. No point being half blind and seeing dark the whole day. \n\nThe van was the Toyota Land Cruisers used in safaris. It was open all round and even on top, with only canvas draped on a metal frame bolted to the body of the car. All the canvas panels were pulled up, though the top was still covered, and the seats were high to give a good view. It was painted green with black stripes, no doubt as camouflage. The odd thing was, even though I could tell the engine was running, it wasn't making as much sound as you would expect from such a big four by four. \n\nMy curiosity was piqued, and I had to get to the bottom of this mystery. I put my Inspector Gadget hat on and pulled out my magnifying glass. Ambling over to the driver, I struck up a conversation with him since I saw Nick kept rushing in and out of the house in a frenzy. I'd get to him in a while. I found out that the engine bay had a special acoustic padding all around it to dampen the noise. Even the exhaust pipe was clad in similar material to reduce the amount of noise it made. It was designed that way to be less disturbing to the animals in the park, and it also let the vehicle get a lot closer to the game than if it made a racket, which would scare the creatures away. At the back of the van, in black letters was written, 'Silent Devil'. \n\nI quietly asked him if he was aware of our arrangement later in the day and he confirmed he was informed and ready. I found out he was our driver as well as our guide for the day. He certainly looked the part with khaki shorts, a completely shaven head and a handlebar mustache. Jack was the name he introduced himself with. The girls and Bill had climbed onboard when I felt myself getting pulled from behind and being led towards the cabin. \n\n\"What the...?\" I turned around to see Nick looking like his dog had just died. \n\n\"Shut up and keep walking,\" he said under his breath as we walked towards the cabin. \n\nJenna shouted from the van, \"Where the hell are you two going?\" \n\n\"Just a minute...\" Nick called back, holding up a finger. \n\n\"What's wrong?\" I asked when we got to the door. \n\nHe put one hand on his hip and started rubbing his temple, \"I lost the ring man,\" he said desolately, once we were inside. \n\n\"What? That's not possible-\" \n\n\"I'm telling you man, it was in my backpack when we left home. Today morning I searched high and low for it, but I can't find it, it's just gone. I emptied my bag three times until I had to stop because Jenna started getting suspicious.\" \n\nHe was pacing the living room floor now, looking like the whole world had crashed down upon him. \n\n\"Uhmm... yeah, if you'd just let me finish-\" \n\nHe snapped to attention, \"What did you do?\" \n\n\"I took it from your bag when we handed over our luggage to the park attendants for transportation. You'd gone to talk to the in-charge, remember? I know it's been in your family for a while now, I couldn't risk leaving it unattended.\" \n\nHis eyes were bulging now and he ran his hand over his face, grinding his teeth as he looked up at the ceiling, \"and you were planning to tell me this when?\" \n\nThis always happened. My intentions were always good but I'd always find some way to mess things up, putting people in awkward situations where they didn't know if they should be grateful or angry. \n\nI backed away subtly, \"I was gonna to tell you yesterday man, but I forgot after Jenna chased me around the car and stuff.\" ",
        "Nick was dangerous when he was wound up, he got violent for the smallest reasons, and right now he was wound up tighter than a crack addict looking for his next fix. \n\n\"Where is it right now?\" \n\nI pointed at my pocket. He sighed and relaxed a little, \n\n\"Dude, sometimes I don't know whether to hit you or to thank you.\" \n\n\"Decide when we're in the van. Let's go before they think we're getting freaky in here,\" I said, stepping out, \"and by the way, try and relax, you look like you're about to have a seizure.\" \n\n\"What do you expect? Rainbows to shoot out of my ass? I'm shitting bricks here thinking about all the possible ways she can say no.\" \n\n\"She won't. Now get it together,\" I said under my breath as we got close to the others. \n\nWe got questioning looks as we settled in, me next to Lissy and Nick with Jenna. \n\n\"He wanted me to check for monsters under his bed,\" I explained. \n\n\"I can't find my camera,\" Nick answered Jenna's pointed look, loud enough for everyone to hear, \"I wanted him to check whether I had accidentally put it in his bag.\" \n\n\"And...?\" Jenna enquired. \n\n\"It's not there,\" I replied for him, \"although I gave him a very good alternative.\" \n\n\"What?\" \n\n\"Use your damn phone. It's not the nineteen nineties, what the hell do you need a separate camera for?\" \n\nEveryone agreed, though Jenna was still looked skeptical. \n\n\"You've been acting weird since last night,\" she told Nick, \"are you alright?\" \n\n\"What? Yeah, yeah of course, I'm fine. A little stomach upset I think, those canned beans didn't agree too well with me,\" Nick lied. \n\n\"Told you we should have gone with hot dogs,\" I muttered, earning a glare from Jenna. \n\nIf the idiot didn't calm down he'd blow our cover. We set off down a trail on the left of the cabin that we hadn't notice before. There was just enough space for the vehicle to pass through, and if we stuck out our hand, it'd probably get snagged on a branch or a bush. The sun had risen by this point but as soon as we entered the undergrowth it was twilight again. The air was decidedly cooler and more humid and from time to time we could hear the rustle of the undergrowth as creatures scurried away from the oncoming vehicle. \n\nThe trees started thinning out after about two miles and allowed the sun to reach down to the forest floor. If I wasn't mistaken, it was as if we had wandered over into a bamboo plantation. Tall stalks of bamboo shot up everywhere, between trees and bushes, and gave the area a unique feel. \n\n\"This here is Panda territory,\" Jack called out from the front. \n\nAh, that explained the bamboo. He slowed down to a crawl and gave us a running commentary on panda's lives, habits and population. We all tried to get a glimpse of one but they were very elusive. Then Sally became excited and started pointing towards a thicket. \n\n\"Look, look, I think I see something there,\" she said. \n\nSure enough, between the stalks we saw a big white form with black splotches on it. There seemed to be two of them, sitting with their legs stretched out before them, chewing on sticks of bamboo. Jack slowly maneuvered the vehicle in their direction and stopped a close distance from them. The pandas didn't seem at all bothered by our presence and continued merrily devouring their bamboo. \n\nAfter sufficient pictures were taken we continued on our journey, leaving the panda territory after a while. Time and again we saw something flitting between the trees and I finally asked Jack, our guide, about it. \n\n\"Ah, those must be the deer. They're very shy and it's almost impossible to catch them standing in one place, although you'll keep seeing them jumping between the trees all the time.\" \n\nThat gave me an idea. Since morning I had been concerned about Nick's behavior and I knew I had to do something about it or else he'd freeze at the last moment, rendering all our careful planning useless. I knew what would loosen him up, but I'd wait until a bit later in the day. \n\n\"You guys interested in rappelling?\" Jack asked. \n\nWe all looked at each other before Bill asked, \"What do you mean?\" \n\n\"We've have a spot here for the more adventurous folks, a little bit of rappelling down the cliff if you're into that kinda thing,\" Jack replied. \n\nAfter a short discussion we agreed it wouldn't hurt to check it out. Jack maneuvered the vehicle expertly through tight spots for another half an hour during which we saw quite a few deer and a few other animals that scurried away before we could identify them properly. The sun was quite high in the sky now, and it had become warm so we decided to unfold the top canvas. \n\nWe came onto a clearing much like the one our cabin was situated in, only that this one was a lot bigger and had a medium sized stream flowing right up to the edge of the cliff, where it disappeared and we could hear the sound of water crashing down somewhere down below. Jack parked on the side and let us know this was the spot. \n\nWe got down to stretch and explore. As we expected, the stream ended in a waterfall that went all the way down to the lake at the bottom. There was a surprising amount of water for what looked a relatively small stream. The water billowed and spread out as it fell, most of it turning to mist right before it hit the lake's surface. It also had a thunderous roar. I realized this was the same cliff as ours, only much further on, on one of the arms that extended outwards. On our side of the waterfall, a few feet from the waterfall, there were a couple of people in safety gear standing around some ropes and other climbing gear. \n\nThey greeted us warmly when we approached and we asked them about the rappelling business. It was simple. We would get strapped into a safety harness which was tied to a rope that was secured up here on the cliff. We would then have to lower ourselves by walking down the cliff face and manipulating the rope that was tied to the harness. I had done rappelling once before and I'd loved it so I was totally up for it, especially in this scenic location. Sally was a bit skeptical but decided to watch us go first then decide if she wanted to try it. \n\nWe spent the next half an hour being vigorously trained on how to use the rope to give slack and hold, and the different approaches when it came to walking down the face. You could walk down one step at a time or you could jump off, release the rope and lower yourself in bursts. They made sure we understood everything, even asking us to repeat the instructions at times. These guys took their safety seriously. Jack let us know he would meet us at the bottom in around half an hour, since he had to drive the long way down, and took off. \n\nNick went first. He looked like he needed the rush and burn off some of that adrenaline that had been keeping him on the edge of his seat since morning. He mistimed his jumps the first two times and hit the cliff face a little hard but after that he got the hang of it and sailed down like a pro, even twirling around once. The landing spot was a huge slab of rock that was naturally elevated from the lake, after which you had to skip on a few smaller rocks to get to dry land. Two more attendants in safety gear were waiting there to receive Nick, who unfastened him and the rope was pulled back up. \n\nJenna went next, squealing and shrieking the whole way down. She walked down carefully until about halfway after which she gathered enough courage to bound the rest of the way. Nick helped her out of her harness at the bottom. \n\nSally was still being convinced by Bill and Melissa so I went next. After strapping up I lowered myself and went right for it. Like Nick, I misjudged the distance the first few times since it had been a while since I had done this, but after that it just came naturally. About halfway down, I started feeling the spray of the water splashing onto me. It was refreshingly cool. I stopped for about a minute, just letting the mist spray onto me and looking around at the scenery. Near the bottom the spray turned into a light drizzle as I landed on the humongous rock. The little rocks we had to skip through to get to the shore were really slippery due to the wetness and moss growing on them. \n\nI joined Nick and Jenna and we watched the next person come down after a considerable time. It was difficult to tell who it was from this far and about halfway is when we recognized Sally's top. They had finally managed to convince her to try it. Awesome. I went back out onto the rock, and helped Sally to lead her back carefully where we were waiting. She was gushing and couldn't stop talking about how amazing and thrilling it was and why she had no idea why she was so scared. \n\nWe recognized the next person as Melissa. She also stopped midway to admire the view before descending the rest of the way. On cue I went out to assist her, once again noticing how sexy she looked with slightly damp hair. The two rappelling guys helped her out of the harness and handed her over to me. I guided her in front of me and let her go first, making sure she didn't slip as I came up behind her. \n\nAt the last stone from the shore she lost her balance and her foot slipped off and submerged into the water as she tilted at an odd angle, almost about to fall into the water. I was just behind her and I caught her immediately, putting my arms around her waist and steadying her. There was a look of pain on her face as she pulled her foot out of the water and sunk back into me. I knew something was wrong. \n\n\"Are you alright?\" I asked. \n\nShe nodded but her face still registered pain, \"It's just my leg...\" \n\nLeaving one arm around her waist, I put one of her arms around my shoulder and slowly supported her the rest of the way as she hopped on one foot. I could have carried her but the rocks were too slippery and if I happened to slip, the results wouldn't be pretty. \n\nShe sat down on the ground and leaned back into a tree as she stretched her feet out in front of her, grimacing as she did so. By this time we had all gathered around her, concerned. \n\n\"Melissa, are you hurt?\" Jenna asked as I sat down next to her, placed her leg gently onto my lap and started removing her shoe. \n\n\"I slipped and I think I twisted my ankle when it went into the water. It kind of got stuck between something, and I twisted it when I lost my balance and fell the other way.\" \n\nBy now I had removed her sock and ran my fingers over her foot, trying to see if anything was out of place. In my mind I was thanking God that I was close by and had caught her before she fell into the lake. It was shallow and there was no possibility of drowning but she might have broken her foot if she had fallen. There were no visible signs of anything broken although I couldn't be too sure as I'm no doctor. \n\n\"Where does it hurt?\" I asked as a gently pressed my thumb in various locations. \n\nShe winced when I got the top of her foot, where it joined with her leg. \n\n\"That's the spot,\" she joked. \n\nBy then Bill had also arrived down and he and the two attendants came over to see what was wrong. One of them was trained in first aid and took over from me, inspecting her foot with a more professional approach. \n\n\"Don't worry, nothings broken,\" he said after a close examination, \"she just hyper-extended her foot. Keep most of your weight off it, don't do any strenuous activities and you'll be fine in a few days.\" \n\nMelissa winked at me when he said the 'strenuous' part. She was just incorrigible. How could she think of something like that at a time like this. I glared at her in the best serious expression I could, which was pathetic to be honest, since I was trying to hide a smile. \n\n\"I'll just wrap this up for you,\" the attendant said as his partner got a first aid box, and he proceeded to tie a bandage around her ankle, securing it so she wouldn't be able to move it around too much. \n\nWe were all relieved that nothing serious had happened, none more so than me. I would have climbed back up that cliff and jumped off if she'd gotten seriously hurt. I would have felt responsible, being the one that brought her here and all that. Illogical I know, but that was my reasoning. \n\nJack arrived with the silent devil once Lissy's foot was wrapped and ready to go. \n\n\"You think you can continue or do you want to go back to the cabin and rest your foot?\" Nick asked her before I got the chance. \n\n\"Are you kidding? You think I'm going to stop because of this little thing?\" she pointed at her foot. \"Gimme a break. Let's do this,\" she said and held out one hand at me to help her up. \n\nI pulled her up and helped her until she was seated in the van. It was a good thing she was a trooper or else our plan would have totally flopped if she'd had to be taken back to the cabin. All our planning and effort would have been in vain. \n\nWe took off again and I placed Melissa's foot on my lap so that she could stretch it out comfortably. She protested but I was having none of it, her foot stayed. Everyone's mood was a little off after the little incident and I realized it was the right time to bring out my secret weapon that I'd brought along to combat Nick's anxiety. When I'd packed it I had had no idea it would come in handy to uplift all our moods. \n\n\"Guys, I have a little surprise,\" I said as I reached beneath my seat and pulled out my stash. \n\nA bottle of Tequila Rose. It was basically just strawberry milkshake with a little Tequila in it for the kick. Girly, I know, but my intention was go get everyone in a jolly mood, not have them throw stones at rhinos and puke over the side of the car. \n\n\"Rose!\" Jenna squeaked. It was her favorite drink. \n\nWe didn't have shot glasses so we used the bottle cap as a substitute and threw back three shots each, toasting to an incident free day from here on out. No one was feeling any pain when we stopped for a little lunch after a while. Jenna was already giggly and extra chatty and even Nicks face seemed to have cleared up some. \n\nThe place we stopped seemed to be a designated spot for lunch since there were a few picnic tables at the edge of a huge grass covered field. There was a little wooden shack adjacent to the tables and there was an incredibly delicious smell wafting from its interiors. \n\n\"Looks like we're a little late,\" Jack said, \"the other vans have already left. Don't worry though, Polly will still serve us nice and good anyway.\" \n\nPolly turned out to be a tiny woman in an apron that was too big for her and it was she who was conjuring up such mouth watering aromas. Jack helped her bring out a big pot of steaming stew and she ushered all of us to the table and told us to wait a few minutes for the bread. Screw the bread, I'd drink the stew by itself, it smelt that good. \n\n\"You sure you're ok?\" I asked Melissa in her ear as I helped her sit next to me on the bench. \n\n\"I'm fine Brian, really,\" she said, smiling at my concern, \"now stop fussing over me, or I'll start calling you Mom.\" \n\nBefore I could answer Jenna spoke up, \"Where's Nick?\" \n\nI looked around and true enough, he was nowhere to be found. This did not bode well. In my concern for Melissa's well-being I had temporarily side-lined Nick. In his condition it was like leaving a fat kid alone with cake, you just knew nothing good would come of it. \n\n\"When did you last see him?\" I asked Jenna. \n\n\"When we got off the van. He went back saying he'd forgotten something and that he'd join us in just a minute. Think he's gone for a crap in the woods?\" \n\nWe all laughed at the image of Nick squatted behind some bush, face scrunched up with the effort of pushing. My laugh stopped abruptly as I realized what I'd left in the van. Horror began to descend upon me as I realized the implications if my hunch proved correct. \n\n\"Let me look for him,\" I said and got up, walking to the van briskly. \n\nPlease please please let it not be what I thought it would be. Getting into the van I checked under my seat and groaned as my suspicions were confirmed. The bottle of Tequila was gone. All hell was going to break loose. Climbing out, I fished out my phone and tried to call Nick. Good news was that there was network coverage. Bad news was that Nick's line kept turning up busy. I looked at the table to check if maybe Jenna had called him but she was busy talking with Lissy and Sally. Who the hell was he calling in the middle of nowhere? \n\nI ran my hand through my hair and desperately looked around, trying to figure out what to do. That's when something caught my eye. I saw the cap of the bottle lying on the ground near the edge of the clearing and I almost jumped for joy. At least I had a lead on what direction he'd gone. Checking to see the rest were still preoccupied - the bread had arrived - I set off behind the idiot who was bent on destroying his day. \n\nThe under growth wasn't that dense and the trees were far apart which made it easy to navigate. After just about a minute into the forest I heard a voice that resembled very closely to his. At least the fool had the sense not to go too far. Following the sound I reached him in less than half a minute and as I got closer the conversation he was having became clearer. \n\n\"... No Bob, Bob just listen to me Bob. Will you listen to me? Bob? I'm not drunk... I've never touched alcohol in my life!\" \n\nThe empty bottle he was waving around in his hand tended to disagree. He was sloshed. There was more than half the bottle remaining after we'd had our shots and it looked like he'd helped himself to all it. Yes, it wasn't that strong, but drinking almost three quarters of the damn bottle was bound to get you more than a little high. I had to get him off that call. \n\nI walked up him, spun him around and whispered, \"Dude, what the hell are you doing?\" \n\nHe held up a finger at me, the universal drunk sign language for 'wait, hold on a sec, I'm fine. No really, I'm fine'. \n\n\"Hey Brian! Bob, Brian says Hi... Brian, Bob say's Hi.\" \n\nI gave myself a face-palm. Seriously? The shit I had to put up with in the name of friendship. Bob was Jenna's father and I could just imagine why this moron was calling him right now. \n\n\"Gimme the phone,\" I said and tried to grab it but he dodged and put up that damn finger again, keeping me at bay. \n\nI knew it was useless so I just stood and watched him, waiting to see what he could possibly have to say to Jenna's father. Nick had already met Jenna's parents a long time ago and they adored him to death. Jenna was an only child so he was like a son they never had. It didn't hurt that Nick could charm the panties off a corpse, and Jenna's dad Robert, or Bob as he liked to be called by his friends, had all but adopted him. Bob knew Nick drank, hell they'd drunk together, so I wasn't worried too much, although Nick could do the dumbest things when under the influence. \n\n\"Bob, I need to have a little talk with you, mano e mano, man to man, me and you, as men.\" \n\nDid he say man enough times? He listened for a while. \n\n\"Ok I'm a little drunk, but it's only so that I could get the courage to ask what I'm about to. Bob, I love your daughter Jenna more than anything else and I'm going to ask her to marry me... yes, today... No I haven't yet... I realized I'd forgotten the most important thing, to ask for her parents blessing so the first thing I did was get on the phone to you. Is Mrs. Howard there?... she is?... can you put the phone on speaker please?\" \n\nHe winked at me. I had to grudgingly agree with what he was doing and couldn't stop him now. We really had forgotten to get her parent's permission, and though we knew they'd already accepted Nick as one of their own, it was still a good gesture to ask them first. Jen was their daughter after all. \n\n\"Mrs. Howard?... Sorry, Pam, I keep forgetting I'm supposed to call you Pam... Bob, Pam, I want your daughter to make me the luckiest and happiest man in the world, and to that effect, I sincerely hope you will give us your blessings as I am going to ask her to be my wife.\" ",
        "Nick listed for a while then gave me a retarded smile and a vigorous thumbs up. Idiot. \n\n\"Yes, yes, of course I know, but I couldn't in good conscience ask her before I'd gotten your permission... Yes, I'm going to do it today... No it's a surprise, you'll just have to wait to hear it from her...Ok I won't drink anymore... I promise... Yes Brian is here to help me...Yes thank you very much. I'll see you soon.\" \n\nHe cut the call and held up his hands in defense, \n\n\"Now before you tear me new one, just know I had to do it and I am scared shitless and I wouldn't have been able to if I'd been sober,\" \n\n\"How drunk are you?\" \n\n\"On a scale of one to ten?\" he thought for a while, \"I'd say five.\" \n\nI could deal with five. Anything higher than seven and I'd have hit him on the head with a block of wood and hid him in the trunk of the van until we got back. \n\n\"You're not going to do anything stupid once we get back to the others, are you?\" \n\nHe sniffed, \"I can't believe my best friend doesn't even have that much trust in me. The Lord should have called me to his humble abode before I had the unfortunate curse to see the light of this painful day...\" \n\nI picked up a rock and chased him all the way back to the others. \n\n\"Where the hell have you guys been?\" Jenna asked as we got to the table. \n\n\"I went into the forest to pee and I got lost,\" Nick fibbed then pointed at me, \"he found me.\" \n\n\"How?\" \n\n\"I used the advanced tracking and feedback method called shouting. It's pretty effective\" I said, sitting back down next to Melissa and digging into the food. \n\nTill today I don't know what was in that stew but whatever it was, it made me want to eat my fingers. It was simply delicious. I'd come back to this park just for this food if nothing else. Nick controlled himself so that no one realized how drunk he was, and after eating, the bread soaked up some of the booze so he sobered down enough to appear normal. \n\nAfter lunch we lounged around under the shade of the trees for a while, just lazing away with our full bellies. The sun was past overhead and lazy air of afternoon was beginning to settle in. We resumed our journey after about twenty minutes, Jack just driving around slowly and aimlessly as if he was waiting for something. It was getting close to time now and any minute we could get the signal. \n\nThe radio at the front cackled and I heard a ranger relaying some co-ordinates to the driver over the static, soon after which, he changed the bearing of the car and headed in a purposeful direction. I looked back at Nick and tipped my head towards the front and nodded once. He nodded back looking like I'd just announced his death sentence. I was tempted to ask him if he had any last wishes but couldn't because of obvious reasons. \n\nThe land was more of a flat plain now and was dominated by more wild brush and grass, rather than trees. I couldn't figure out if it was naturally like this or whether there had been some human involvement because it looked more like the savannah plains. I was almost expecting to see a pride of lions slumbering under a shade somewhere with a stripped carcass of an antelope nearby and hyenas circling in cautiously. Or maybe a baboon holding up a baby lion at the top of a huge rock while all the animals in the jungle were gathered at the bottom in pairs. Yes, I watch too many cartoons. Sue me. \n\nIn the distance, in the direction we were headed, I could make out around five vans similar to ours parked around a central spot. If I wasn't mistaken, that looked like our destination. It wasn't long before the others noticed the gathering, and soon everyone was craning their necks to try and see what was going on. Nick was now positively vibrating in his seat. I just hoped he didn't spontaneously combust and turn into a pile of ashes. \n\nAs we got closer, the source of the commotion became apparent. In the middle of the semi-circle was a herd of elephants standing huddled together. Ok so maybe five elephants don't really constitute a herd, but I could exactly call it a gathering now could I? Even from this far away we could see all the occupants of the vans were out of their vehicles with their phones and cameras, snapping away at the elephants. We hadn't anticipated this much of a crowd but I guess the park was milking it for all it was worth. Nick never had a problem with an audience so it wouldn't be too much of a setback, and anyway, as the saying goes, the more the merrier right? \n\n\"What's the deal with the elephants?\" Sally asked, \"Why is everyone so interested in them?\" \n\nI knew why and Nick knew why. Pretty soon everyone would know why. \n\n\"I think there's something written on one of them,\" Melissa said, squinting her eyes. \n\n\"Maybe it's an identification tag,\" I supplied, \"and they're elephants, who wouldn't be interested in them?\" \n\nA few minutes later we reached them, but we had to stop a little further away since they were already surrounded by people and cars. Our view was limited and we could only see the tops of the elephants. Perfect. Rangers were stationed all around to keep everyone at a safe distance. It was a three thousand pound wild animal after all, you couldn't be too sure it won't charge. \n\n\"You folks might want to check this out,\" Jack called out as he engaged the emergency brake and shut off the engine. \n\nThe girls climbed out of the car first followed by Bill, leaving me and Nick inside. \n\n\"Dude...\" he started but I grabbed his hand and yanked him out of his seat. \n\n\"Save it,\" I told him, shoving him out of the car and following him, shutting the door behind me so he wouldn't climb back in. \n\nI discreetly maneuvered him towards Jenna and left him by her side, slipping the ring discreetly into his palm. Now it was all up to him, I had done all that I could. Thankfully he finally came to his senses, as he always did. It was like when you were in school, you'd always be nervous the night before the exam, but as soon as the paper came in front of you, you'd calm down. For Nick, the waiting was worse than the action itself. He shook his head to clear it, then squaring his shoulders, he took Jenna's hand and turned her towards him. \n\n\"Jenna, there's something I want to show you.\" \n\nAs expected, Jenna was confused. \"What is it?\" \n\n\"Do you trust me?\" He used his serious voice. Everyone always listened when he used his serious voice, it was a gift. \n\n\"Of course, babe,\" Jenna replied, searching his eyes for a clue as to what was going on. \n\nHe took both of Jenna's hands in his as we watched, and turned her so that her back was facing the crowd. Then he slowly walked her backward through an opening in the mass to the centre of the clearing. Surprisingly the noise level went down considerably as everyone focused their attention on them. This is what they'd been waiting for. \n\nMelissa looked at me with an arched eyebrow and I just smiled at her and took her hand as well, following Nick's footsteps. Bill and Sally were in step with us. Let the drum rolls begin. \n\nWe stopped at the edge of the crowd and both Melissa and Sally gasped loudly as they saw what lay in front of them. Even Bill was thrown out of his element. Melissa's head snapped to me and her eyes were slightly wide and a very questioning look on her face. I gave her an assuring smile and blinked to let her know it was ok. Her expression softened and she turned back to watch the scene unfolding in front of us. \n\nJenna was facing us, so when she saw the reactions on everyone's faces she instinctively tried to turn around to see what was behind her but Nick stopped her, taking her face into his hands gently and keeping it facing him. \n\n\"Nick, what's going on?\" she asked, starting to get understandably nervous now. \n\n\"My dear Jenna,\" he started, \"It has been over six years since I first saw you. To date, every first glimpse of you in the morning still makes me skip a beat. The last six years have been like a beautiful dream that I would never want to wake up from, I just hope you give me a chance to make it permanent. \n\n\"Without you I'm an incomplete jigsaw puzzle, half a picture, something like the Mona Lisa without her smile. I will have lost the essence of joy, happiness and everything good in my life if you were not there by my side. You Jenna, are a fine woman, and the most beautiful and kind-hearted person that I have ever had the privilege of knowing. You complete me and make believe in myself.\" \n\nJenna slowly stopped fidgeting as he went on with his speech and slowly became less aware of everyone staring, and focused her attention on him as she tried to make out where Nick was going. It couldn't be, could it? \n\n\"I cannot bear being without you sweetheart,\" Nick continued, \"even for a moment, as every moment without you feels like an eternity. Someone described it perfectly when they said, within you I lose myself, without you I find myself wanting to get lost again.\" \n\nJenna's eyes were steadily growing bigger as the realization slowly dawned on her. \n\n\"Nick ...\" she started but Nick put a finger on her lips and shushed her. \n\n\"Lemme finish babe,\" he said. \"I want to think about the future henceforth, because that is where I will spend my entire life, and there is no one else in this world I would want to spend it with, apart from you. That being said, I cannot wait enough for the rest of my life to start. There's something I want to show you, Jen.\" \n\nHe put his hands on her shoulders and held her at arm's length and slowly they both turned around in a circle to face opposite directions. Jenna looked past Nick and took in the view in front of her. It took her five seconds to process it, after which we could see her eyes starting to grow even wider as her face leaned forward. Her hands shot up to cover her nose and mouth and she went rigid, slowly rocking to and fro on the balls and heels of her feet. Was there some proposal training all women went through in secret? Every girl I've seen proposed to does the same thing. \n\nI don't know if it was coincidence or maybe the universe had just decided to line up in favor of Nick for once, but the circumstances couldn't have been better. There was a big female elephant standing directly in front of us, about three hundred yards away, grazing on a whole bunch of grass that was on the ground in front of it. On its side, in huge white letters was written, \n\n'Jenna, Will You Marry Me...' \n\nThat was not all. It was a mama elephant and under its belly was a tiny new born elephant pup holding its trunk up to its mommy. On its side, painted in small flowing letters was, \n\n'...Please?' \n\nNick went down on one knee and produced the ring from his pocket, \n\n\"Jenna, it is said that an elephant never forgets and it is one of the few animals that understands emotions, so what better witness than an elephant in the wilderness to remember this perfect moment for an entire lifetime?\" \n\nJenna kept looking between Nick at her feet and back up at the elephants. \n\n\"They say, it's your life, make it large! \" Nick spread his arms out. \"Please make my life larger than life itself baby. Accompany me in the journey of life till death do us part.\" \n\nHe held out the ring to her, \n\n\"Jenna Elizabeth Howard, will you make me the happiest man on the face of this planet and marry me...please?\" \n\nThere was pin drop silence as the whole crowd waited with anticipation. All eyes were focused on the guy kneeling down on one knee and the petite girl covering half her face with her hands and staring down at the guy, unmoving. \n\nI realized even I was holding my breath. By the look on Jenna's face, it was difficult to judge which direction this was going to go. Melissa was gripping my arm so tight all circulation had stopped below my elbow but I was too enthralled to do anything about it. I just hoped Jenna didn't snap and run like a madwoman towards the hills. \n\nSlowly, hardly noticeable, her head dipped. Again she nodded, her head moving only an inch up and down. Gradually the nod kept increasing in range of motion and pretty soon tears were rolling down her eyes and she was nodding vigorously and chanting \"Yes, yes, yes, Oh my god yes, yes, of course yes, yessssssssss...you idiot, YES!\" and she jumped on Nick, almost flattening him on the ground. He stood up with her arms around him and twirled her around like in the movies, the relief on his face palpable even from where we were standing. The crowd cheered and clapped and of course, pictures were taken from every perceivable direction. \n\nFinally he put her down and Jenna stuck her hand out to him. He slid the ring up her finger and they locked into a kiss, not caring who was looking. There were hoots and whistles all around. Ok fine, I was the one whistling. Do you blame me? \n\n\"Took you long enough,\" Jenna said, sniffling, \"I thought you'd never get around to it.\" \n\nNick shrugged, \"I wasn't sure if you'd accept.\" \n\nJenna kissed him again to clear any lingering doubts. \n\nThey broke the kiss and hugged tightly, whispering their own stuff into each other's ears. Nick must have said something because Jenna broke the hug and turned her face towards me. Crap, here it comes. It could range from a slap, to a knee in the groin, to pelting with stones. She walked to me, wiping away her tears on the way and picked up her pace on the last few steps and leaped on me, wrapping her arms around my neck and hanging on to me tightly as I put my arms around her. She was so short her feet didn't even reach the ground. \n\n\"Thank you,\" she whispered in my ear, for the first and probably last time ever. \n\n\"You're welcome,\" I said putting her back down. \n\n\"I can't believe you guys did this,\" she said, still holding on to my arms and looking up at me. \n\n\"You didn't think I'd let my Peanut get proposed with a ring in a champagne glass did you?\" \n\nShe laughed, \"It wouldn't have been so bad.\" \n\n\"Jen, we didn't want you to choke to death on the night of your proposal.\" \n\nAnd there was the scowl I was so familiar with. \n\n\"Don't ruin it,\" she said, poking me in the stomach. \n\nNick had also joined us by then and I turned to him, \"By the way, remember I told you you'd adopted one?\" \n\n\"Yeah...?\" Nick said cautiously. \n\n\"That's him,\" I said, pointing at the little guy trying to get his mama's attention. \n\nJen shrieked so loud I heard a ringing in my ear. Someone needed to put a silencer on this woman. Or at least give everyone around her ear muffs. She was an occupational hazard. \n\n\"Oh my god, you're not serious. You adopted him? Can we take him home? He's so cuuuteee...\" Jenna said, bouncing on her feet and making that crinkly scrunched up face women do when they see a baby. \n\nTo me he looked like a ball of wrinkled skin with a hose pipe where a nose ought to be but yeah, why not, let's call him cute. Next we'll be calling a box-file cute. Or a gargoyle. \n\n\"Jen, you can't take him home. He's an elephant, not a Dalmatian,\" I told her. \n\n\"You got that right. And you'll be in a lot of trouble with us if we find you with one of these at home,\" a ranger chuckled as he came over to us. \n\nHe was a little short and his green uniform had started rounding around the middle, the bald patch on his head just beginning to show and a very amiable smile on his face. His scouting days seemed to be long past and something about his smile screamed PR. He was genuinely jolly though, and you couldn't help like him. \n\n\"Congratulations,\" he shook Nicks and Jenna's hands, \"I am very happy for the both of you.\" \n\n\"Thank you,\" Nick told him, \"None of this could have been possible without your co-operation. I can't thank you enough for making this one of the most special days in our lives.\" \n\nThe ranger laughed merrily and slapped Nick on his back, \"Come now, don't put me in an awkward position, we were glad to help, and you did adopt one of our little ones. I wanted to ask a small favor though. Would you mind a picture with them?\" he pointed at the elephants. \n\nYup. Definitely PR. \n\n\"Sure, but it'll be all of us,\" Nick told him, \"none of this would have been possible without everyone present here.\" \n\n\"Of course,\" he said, and started leading the way, \"I'm Officer Jeremy, and just to clear things up, the little one is a she.\" \n\n\"What?\" I asked shocked, \"he's a she?\" \n\nThis wasn't good. I tried to recall if there had been any mention of it but I couldn't remember. I'd blundered. Again. \n\n\"Yup. The first one on be born in this park actually. You're very lucky to have adopted her, she's just two and a half months old. Truth be told, she's the apple of everyone's eye here, and they were thrilled when they heard of this plan. Also, it should help with the naming.\" \n\n\"We can name her?\" It was like angels were showering Jenna with roses. Pretty soon I was going to be showered with blows. \n\n\"Of course! You didn't know that? I thought they would have told you when you were sorting out the paper work.\" \n\n\"Uhmm...\" I scratched my head with my pinky, \"I was the one who handled that stuff, and uhmm... they needed the name for the registration so I already named him... her.\" \n\nJenna stopped mid-stride, causing Nick to run into her from behind and everyone else to scatter around them. We were halfway to the elephants. \n\n\"What did you name her?\" she asked. \n\n\"Ok let's keep in mind all the good things I've done lately. I mean, I get points for some of this stuff right? Let's try to focus on the good things in life.\" \n\n\"What did you name her Brian?\" Sally joined in, and it seemed everyone was waiting for the answer. \n\n\"I... uh...\" \n\n\"What - did - you - name - her?\" Jenna asked again, emphasizing every word. \n\n\"Pit-stop.\" \n\nEveryone stared at me for a few seconds, including Officer Jeremy. It was like they weren't sure they'd heard me right. Nick and Bill looked at each other to confirm what they'd heard. Officer Jeremy was running his hand through his beard. I'd just named the rangers' favorite pet after a scheduled maintenance break in a car race. I wondered whether it would be appropriate to whistle. Probably not. \n\n\"What?\" Sally finally spoke up. \n\n\"I named him...sorry, her, Pit-stop.\" \n\nThey were all stunned and still a little confused. By the look on the Officer's face, if he'd been given a chance to say aloud what was in his mind, it'd be along the lines of, 'What's wrong with kids these days? Back in my day...' \n\nJenna was the first to recover, \"You named my elephant Pit-stop?\" \n\n\"Well, technically she's Nick's-\" \n\nShe held up her hand and pointed at her ring, \"What's this Brian?\" \n\n\"An engagement ring?\" \n\n\"Who gave it to me?\" \n\n\"Nick?\" \n\nWhere was she going with this? \n\n\"And what does it signify?\" \n\n\"That you're engaged to be married?\" \n\nOh, now I see where she was headed. \n\n\"And do you know what that means?\" \n\n\"Nick's life is officially over.\" \n\n\"It means,\" she chose to ignore my jab, \"that whatever is his, is now mine.\" \n\n\"You're screwed dude,\" I told Nick over Jenna's head, \"better hide all that porn.\" \n\n\"What porn?\" Jenna immediately turned on Nick, \"you still watch porn?\" \n\nNick gave me an exasperated look, \"Why dude, why?\" \n\nI shrugged. Distraction complete. I started dusting off my hands. \n\n\"He's fooling you Jenna,\" Melissa exposed me, \"he's leading you away from the topic.\" \n\nI gave her the 'why would you do that?' look. I would have gotten away with it too, if it wasn't for you meddling... \n\nJenna turned back to me, angrier than before, \"Explain.\" \n\nIt was like being questioned by the FBI. I was getting visions of a dark stingy room, an uncomfortable metal chair and a really bright lamp shining in my face. I squinted involuntarily. \n\n\"I'm sorry ok? They put me on the spot. They wanted the name right then and there, what was I supposed to do? You know how I get under pressure,\" I tried appealing to them. ",
        "\"But Brian C'mon, Pit-stop?\" \n\n\"I was watching F1 when I called. Vettel really needed a pit-stop, I was nearly screaming at the screen, so it was the first thing on my mind. When they asked what we would like to name it, I panicked. I blurted out Pit-stop without thinking.\" \n\nI got a sympathetic look from Sally and even Melissa seemed to soften. Jenna turned to Officer Jeremy, \n\n\"Can we change the name?\" \n\nHe shook his head apologetically, \"I'm afraid once the name is registered, that's it. It's final.\" \n\nJenna turned back to me, fists clenched, unsure of what to do with me. Remember when I said I put people in peculiar positions, where they're torn between gratitude and all out hostility? I'd like to present to the court Exhibit B. \n\n\"Couldn't you name it anything else?\" she asked in a defeated voice. \n\n\"What was I supposed to name it? Bambi? Dumbo? Simba?\" \n\n\"Anything is better than Pit-stop!\" she started getting angry again, then took a deep breath and calmed herself, \"You know what? It doesn't matter. Today you've earned a get out of jail free card. You're forgiven. Now let's go meet the little girl.\" \n\nShe smiled and took my hand, and we started walking again. I could not believe my luck. Which side did the sun rise today? \n\n\"Gee thanks, peanut. That was surprisingly mature of you. And you'll see, Pit-stop isn't that bad a name, soon you won't even notice it, and you'll be like, why didn't I think of this, what a terrific name, I should have thought of it. And if you look at it the name fits. When you want a break in life, when you need to recharge, you can take your very own pit-stop and come out here and visit Pit-top. Imagine how-\" \n\nI felt a tap on my shoulder and turned to see Bill shaking his head. \n\n\"Dude, stop talking.\" He wisely advised me. \n\nI looked to see Jenna's hands had turned into fists again and her lips were pursed. Sometimes I was my own worst enemy. I turned to Jenna again and asked quietly, \n\n\"Hey, you got anymore of those get out of jail free cards? I'd sure like to keep a few in stock, you know, for future use.\" \n\nDo you need me to tell you the answer I got? \n\nAs we got closer the Mama elephant started getting agitated and pawing the ground, swinging her head this way and that. Another ranger, her handler probably, soothed her and spoke calmly until she settled down. \n\n\"You need to be quick,\" he told the jolly one who was with us. \n\nWe approached her cautiously and the ranger coaxed the little one out from under its mother whereupon it was smothered in oooh's and aaah's from the girls. They cooed over it and couldn't stop petting and cuddling it. She soaked it all up in stride, even holding her miniature trunk up to Jenna, who nearly melted into a puddle at that. \n\n\"Dude...\" Nick called me as the others were distracted. \n\n\"Yeah?\" \n\nHe gave me a fist bump, \"Cool name.\" \n\nHalleluiah! Finally someone gets it. \n\n\"I know, right?\" I said enthusiastically, \"I mean who wouldn't like Pit-stop?\" \n\nBill joined us, \"Hey man, nice name.\" he said quietly. \n\nI was going to cry. I finally had a reason to live again. \n\n\"You guys could have stuck up for me back there you know?\" \n\nSuddenly they were very interested in petting little Pit-stop. Bloody traitors. \n\n\"What goes around...\" I left it hanging and joined in with everyone else. \n\nFine, I'll admit it. She was cute. \n\n****************************************** \n\nThe moon was back up in the night sky, the crickets were at it again and we had a nice comfortable blaze in front of us. After getting back to the cabin we all got cleaned up and by then it was dark outside. We set up a few blocks of wood and made a nice sized bonfire, placing three logs of wood around it and huddling close to ward off the cold. The weather had turned surprisingly chilly as evening had set in and the fire provided a pleasant source of warmth. \n\nToday almost everyone was too tired to cook so we had skewered hot-dogs on sticks and held them out over the fire to slowly roast them until they were a nice golden brown. Each pair had taken up a log and Melissa was right by my side, insisting on roasting her own 'dog. There was no cloud cover today and the millions of tiny stars overhead were crystal clear because we were far away from any city lights. \n\n\"So now tell us, how did you guys pull it off?\" Jenna asked. \n\nI looked over at Nick, \"You tell them.\" \n\n\"No, you tell them,\" he shot back. \n\n\"Don't start that crap,\" Jenna warned. \n\n\"Fine,\" I relented. \"It started the other night when we went out drinking,\" \n\nJenna rolled her eyes and muttered, \"How predictable.\" \n\n\"Tell me how many of your awesome stories started with you drinking a tall glass of fresh milk.\" \n\n\"That's not the point-\" \n\n\"That's right. None. So shut up and roast your little hot doggie and listen to the story.\" \n\n\"Shut up and listen to the story,\" she mimicked me in an exaggeratedly high pitch voice. \n\nI was going to fire back when Melissa bumped my hot dog with hers. \n\n\"Continue,\" she said when I turned to her. \n\nI let it go and continued, \n\n\"Nick told me he was going to propose so we got liquored up for the brainstorming session ahead of us.\" \n\nI told them about the different ideas we had come up with and Bill actually liked the idea of lining up cars so that they would spell Will You Marry Me? But only if they were Mustangs, Camaros and Challengers. Jenna almost barfed at most of the ideas and even Melissa and Sally were surprised at a few of them. \n\n\"How drunk were you?\" Sally asked at one point. \n\n\"I thought throwing Jenna out of a plane with no parachute was a good idea so, you can get a rough idea of how hammered we were from that.\" \n\n\"Then how did you come up with this idea?\" \n\n\"It started as a joke actually. Nick said we should tranq an elephant and draw graffiti on it.\" \n\n\"Yeah, and it got stuck in his head,\" Nick said. \n\n\"My colleague had told me about this place so I knew the possibilities. After a few days I called and they were more than willing to go along with the idea. They thought it would be great for publicity since it's a new project and funds and donations are limited.\" \n\n\"So you guys just wanted to tranq an elephant?\" Melissa asked with a sideways glance. \n\n\"Well...yeah,\" I said, looking at Nick for support. \"But obviously that wasn't possible so the rangers arranged it with a veterinarian to sedate the elephants, then use a special dermatological dye to paint the question on their skin.\" \n\n\"That's all fine, but all this started just because you wanted to shoot a dart at an elephant?\" Sally asked. \n\n\"Well, that's how it started off, I mean we were piss drunk. But along the line we saw the significance of it being an elephant. As I said, it was for its amazing memory and disposition to emotion that drew us in and made us realize that it would be a great idea, not just shooting an elephant in the ass,\" Nick said. He could always explain better than me. I made even Hi sound like a death threat. \n\n\"I can't believe we adopted little Pit-stop,\" Jenna said, hugging Nick's arm. \n\n\"That was pure luck to be honest,\" I said. \"All the elder ones had been spoken for, Pit-stop was just born so she was the only one available. The park offered the mother-child combo if we agreed to sign a waiver for them to use the pictures on social media and stuff.\" \n\nNick stiffened, \"What? You didn't tell me about this.\" \n\n\"Yeah, because I knew you'd go all ape-shit and refuse.\" \n\n\"I'm not going to sign it.\" \n\n\"Too late dude.\" \n\nHis hot dog almost fell into the fire. \n\n\"What do you mean?\" \n\n\"I already signed it on your behalf. You're going to be all over their website. Their star attraction.\" \n\nI knew he wanted to fling that hot dog at me. Nick hated social media almost as much as I did, and the realization that he would be displayed all over was driving him nuts. I knew retribution was on the way but I didn't really care at this point.  \n\n\"I'll kill you,\" he started, \"I'm going to stab you with a rusted knife, shoot you in both your knees, hack you with a blunt machete, bury you for two months under twelve feet of horse manure then dig you out, revive you and mount you on a stake to die all over again. \n\nNo one would complain of him not being graphic enough. \n\n\"So what you're saying is that you're embarrassed to be seen proposing to Jenna, is that it?\" \n\nJenna lifted her head to look at him. This was going to be good. \n\n\"No, but-\" \n\n\"Then why are you against the pictures being on display? Wouldn't you want the world to know you've proposed to the girl of your dreams, knowing that the publicity might generate funds to support future little Pit-stops?\" \n\nEveryone was looking at him now, waiting for his response. I had cornered him and he knew it, judging from the vein pulsing on his temple. He couldn't risk refusing, knowing Jenna would flip, and he didn't want to let me win either, which put him in a very precarious position. Yup, I was going to get it later. \n\n\"Fine,\" he said curtly and went back to his hot dog, which was completely charred on one side. \n\nJenna was trying to hide a smile and I noticed even the rest were very interested in their hot dogs. The tension was thick in the air until Nick finally spoke, \n\n\"Just laugh and get it over with already,\" he grumbled and we all broke out laughing at his misery. \n\n\"So you're the victim ninety percent of the time huh?\" Melissa asked me. \n\nI nodded vigorously, \"This is one of the ten percent times. Every dog has his day you know.\" \n\n\"Uh-huh,\" she replied, clearly not believing me. \n\nDespite our rather uncouth method of cooking, the hot dogs turned out pretty ok, and we finished nearly all the packets we had brought with us. I've found talking and eating at the same time makes you end up eating more than usual because you're distracted and don't pay attention to the signals your tummy is giving you. I burped as I finished the last hot-dog and Melissa hit me with her stick, calling me a gross Neanderthal. I told her, better to burp and taste it rather than fart and waste it. That got me whacks from all the girls. \n\nI got us blankets from the cabin after we finished our dinner and we snuggled close together, shielding ourselves from the cold that was now really starting to set in. \n\n\"Guys,\" Jen started, \"I want to thank you all for today. It was really one of the most special days in my life and I there is no-one else I would have rather shared it with.\" \n\n\"There is nowhere else we would rather have been Jenna,\" Melissa said. \n\n\"That's right,\" Sally said. \"We are glad we could be there to witness it, it was really something else. You guys really pulled out all the stops huh?\" she said looking between me and Nick. \n\n\"Anything for my fianc\u00e9,\" Nick said, to which Jenna giggled like a school girl and snuggled closer to him. She held up her finger and examined her ring again, something she'd been doing repeatedly since Nick had put it on her finger. \n\nShe looked at Nick and an unspoken message passed between them. Nick gave the fakest yawn in the history of mankind and stood up, picking Jenna up with him. \n\n\"Well guys, it's been a hell of a day and we are exhausted. Time for some well deserved sleep,\" he said as he put his arm around Jenna. \n\nI snorted, \"I didn't know they call it sleep nowadays.\" \n\nJenna almost blushed and Nick gave us a wink as he led Jenna to the cabin. As they walked away I made the sounds of bed springs squeaking and Nick lifted a finger behind him. \n\nWe chatted with Bill and Sally for a while before even they excused themselves to go to bed. The look Sally was giving Bill suggested sleep was the last thing they were going to do. At least for a while. \n\n\"So...\" Lissy said, wrapping her arms around mine and resting her head on my shoulder. \n\n\"So...\" I replied. \n\n\"Quite a day...\" \n\n\"That's one way to put it,\" \n\n\"What you guys did was really sweet, you know that?\" \n\n\"Oh my, is that a compliment I'm hearing? You sure you're ok? I think you might have hurt your head when you slipped.\" \n\n\"You can be tough and gruff all you want Brian, I know you're really just a big teddy bear inside,\" \n\nI growled and attempted to bite her forehead, eliciting a chuckle from her. \n\nWe watched the fire die down until there were only embers left, and the occasional pop of the wood splitting. The forest was silent tonight and even the wind was minimal, though it was much colder as the embers cooled off. \n\n\"Shall we?\" I asked. \n\n\"Hmmm...\" she purred, \"I thought you'd never ask.\" \n\n\"Just give me a sec,\" I said as I went and got a bucket of sand and made sure the fire was completely out, stomping on it a few times just to make sure. \n\n\"Come on,\" I helped her up and we walked slowly to the cabin and up to the loft, arms around each other's waists. \n\n\"So... you sleepy?\" I asked when we got up. \n\nShe turned to me and grabbed my T-shirt, bunching it in her fists, and bringing her face close to mine, \"You playing coy with me, mister?\" \n\nPutting my arms around her I pulled her forward to me and held her tightly against me as I kissed her senseless. \n\n\"Does that answer your question?\" \n\nShe looked at me dreamily, \"You ready to finish what we started in the morning?\" \n\nI most definitely was but I was a little worried about her foot. \n\n\"But Mel, your leg...\" I started. \n\n\"Brian, if you deny me today I will seriously rape you,\" she said, going from dreamy to stern in a fraction of a second. \n\n\"No, it's not that Liss, I just don't want to hurt you. Strenuous activity, remember?\" I tried to explain. \n\nShe took my face in her hands and looked me in the eye, \"You won't hurt me, I promise. I'll even let you be on top for this one time only,\" she teased as she brought her lips to mine. \n\nAs we kissed I put my hands on her ass and pulled her off the floor and she put her arms around my neck and wrapped her legs around my waist without ever breaking contact. We kissed like that for almost a minute before I started walking towards the bed slowly. I tried to look where I was going but Melissa had no intention of letting my lips go so I had so navigate sideways to make sure I didn't run into anything. The last thing I wanted was to fall down with her in my arms. Talk about a turn-off. \n\nFinally my shins hit the bed and I carefully put one knee on the mattress before lowering Melissa onto it, her still refusing to let go of my lips. She pulled me down with her and I let go of her ass to support myself on either side of her. Her arms that were around my neck travelled down and started pulling my T-shirt up. At last she broke our kiss to get the T-shirt over my head, then looked me over admiringly. \n\n\"Someone works out,\" she commented. \n\n\"I try.\" I shrugged. \n\nI'm no Arnold Schwarzenegger or anything, but I go to the gym two to three times a week so I keep reasonably fit. No matter what I try though, I can never gain mass so I basically looked like a swimmer who lifts a few weights here and there. \n\nMelissa scooted back to the pillows then crossed her arms at the hem of her top and pulled it off, throwing it at me. She was wearing a pink bra underneath and it pushed her breasts up until I was just expecting her aureole to peek out over the cups. I was already drooling. She spread her legs and beckoned with a finger for me to come over to her. I would run into a burning building if she beckoned to me like that. \n\nKicking off my flip flops I walked across the bed on my knees, between her legs, and dropped down on all fours in front of her. \n\n\"You summoned, princess?\" \n\nShe raised an eyebrow at the endearment and I wondered if maybe it had been too much, but then she smiled and fell into character. \n\n\"I have need of thy services, my lord,\" she said. \n\n\"Ask, and you shall receive.\" \n\nShe made me straighten up and reached for my shorts. \n\n\"I am unwell my lord, and I have heard lore that you possess a magic sword that may cure what ails me.\" \n\nI held in a laugh and tried to think of something to keep the conversation going. It was then that I thought of protection. Crap, I had forgotten to bring any with me and I doubted there was a pharmacy anywhere within a radius of fifty miles where I could run and fetch some. Loathe as I was to bring it up, I knew I had to. \n\n\"Milady, you would do well to be wary of that sword,\" I played along, trying to warn her in the process, \"to err with it may cause unsightly swelling for nine moons. Shall we not wait for a proper sheath for such a dangerous tool, lest we make a foolhardy mistake?\" \n\nShe stopped tugging my shorts down and looked up to see the concern in my eyes. She knew what I was talking about. \n\n\"Fear not O' noble sir, my physicians have provided me with the necessary herbs to protect myself from such wayward errors. And besides,\" her voice turned sultry, \"you need not worry, I have the perfect sheath for this sword... My lord.\" \n\nShit. I fell back on my haunches at that. I was rock hard and she hadn't even touched me yet. This was not good. I wouldn't last if she kept up with that level of seduction and there was no way I would be one of those guys that would get his rocks off in two minutes then roll over and go to sleep. Two minutes? Who was I kidding? I'd be lucky to last thirty seconds. \n\nI took hold of her hands and spoke, \n\n\"Milady, if you will so permit me, I have heard fables and bards sing of a cure that must precede the ritual of the sword. I would not leave any stone unturned in my quest to relieve you of your ailment, kindly grant me leave to provide you the best remedy I can.\" \n\nI could see in her eyes I had thrown her off balance. She didn't know what I was getting at. \n\n\"Fine,\" she said haughtily, waving her hand with flair, \"you have my permission.\" \n\nI bowed and bent down, taking possession of her lips as I ran my hands up her legs, caressing the undersides of her thighs. I had made big claims but the truth was I had nothing to back them up with. I'd just have to read her body language and go with my gut instinct and hope for the best. \n\nI dragged my hands lower and started drawing circles on the soft skin at the back of her knees. She giggled into my lips and tried to moves her legs away, and I assumed it was a ticklish spot for her. \n\n\"Stop that,\" she murmured, but I could tell it was turning her on as well. \n\nShe pushed me back and came off the pillow, supporting herself with her hands behind her and jutting out her chest at me. \n\n\"Take it off,\" she said, looking down at her bra. \n\nI swallowed and nodded, going back to kissing her and putting my arms around her to find the hook at the back. Finding it was easy enough, releasing it was a whole other ball game. It wasn't rocket science, it was infinitely more complicated than rocket science. She laughed as I tried and fumbled again and again without success. Solving a Rubik's cube was easier than this. \n\n\"You'd think an engineer could figure this out,\" she said against my lips, then reached behind with one hand and guided mine to snap it open. \n\nI wanted to retort but I held my tongue. I'd use it to get back at her in a different way, if you know what I mean. After helping me release the hook she once again left me to my own devices, leaning back on the pillows and waiting for my next move. I pulled the straps off her shoulders and slowly took the garment off her, exposing her to me for the first time. \n\nI was spellbound. Her breasts were magnificent. They were medium sized, capped with small nipples that were already growing hard in the cool air and they fit her frame perfectly. Other adjectives sprang to mind but it'd take too long to list them out here so just be content with uh-freaking-mazing. \n\n\"Are you just going to stare at them all night?\" she asked after a few moments. \n\n\"They're beautiful,\" I said, not realizing what I was saying. ",
        "\"They look even better up close,\" she said shyly, blushing a little. \n\nI got the hint and leaned forward to take one nipple into my mouth. She arched her back, driving more of her breast into my mouth as I used my hand to caress the other one. After a while I shifted to the other one, not wanting to play favorites with either of them. \n\nSlowly I started going lower, kissing and licking the underside of her boobs. Going lower, I placed kisses on her tummy and paused when I reached her navel. I dipped into her belly-button, flicking my tongue as if I was trying to scoop milk out of it and making her squirm under me. Going just a little lower, right above the line of her shorts, I planted my lips on her skin and blew a loud raspberry. \n\nShe giggled uncontrollably and pulled her legs up to her side while putting her hands on my shoulders to push me away. I didn't let up though and blew another monstrous one, causing her to shriek and laugh even more, desperately trying to push me lower. I let her off after that and travelled lower. Snapping open the button to her shorts I tugged them down and she lifted her ass to assist me in getting them off. \n\nUnderneath she was wearing matching pink panties. I had arrived at Pandora's box. Tentatively hooking my fingers at the waistband on either side, I looked up at her for permission to continue. She bit her lip and gave a small nod, lifting her ass once again. Pulling them down her long smooth legs, the first thing that hit me was her unmistakable musky scent. It was unlike anything I had ever encountered before, intoxicating and heady at the same time. As she spread her legs again I got my first view of her pretty pink lips, which were already coated with a layer of moisture. \n\nI looked back up at her to see her watching me, holding her breath in anticipation, waiting for my next move. I couldn't disappoint her now could I? Figuring it was all or nothing, I threw caution to the wind and decided to dive in head first. Quite literally in this case. I stuck out my tongue flat and dragged it agonizingly slowly from the bottom to the top of her slit. That caused her to throw her head back and let out a low groan. I decided the taste wasn't bad at all, tangy and just a hint of sweet. I could get used to this. \n\nAfter her initial reaction giving me a confidence boost, I was like a kid with a new toy, and I set out to take apart what was in front of me and figure out what made it tick. I tried all angles and even shaped my tongue in various ways, poking and probing, watching her reactions to every move I made. The things that made her grip the sheets I filed away as very good, and when I gently inserted one finger while licking the top, making her arch off the bed, I took that as very very good. \n\nAs I slowly rocked two fingers into her I went in search of the elusive pearl under the hood that I'd heard so much about. Discovering it tucked away comfortably under her folds, I gently coaxed it out and the reaction I got when I flicked the tip of my tongue over it was explosive. A jerk and a sudden inrush of breath, and her hands found their way into my hair, grabbing fistfuls of it, though not very tightly. This I was going to file under extremely good. \n\nKnowing her weakness I proceeded to actively avoid it, instead deliberately dancing around it, circling closer and closer but not quite giving her what she wanted. I could see her glorious breasts rise and fall with each deep breath she took, and she left one hand in my hair while moving the other one up to squeeze her breasts. She tried to maneuver my head to where she wanted but I somehow foiled her efforts every time. \n\nI had picked up the pace with my fingers and I could feel her getting wetter and wetter. It was flowing like the Amazon River down there. \n\n\"Brain please...\" She moaned, once again trying to guide me to her centre spot. \n\nI lifted my head and she whimpered at the loss of contact. \n\n\"Oh look, she speaks,\" I said, echoing her sentiments from this morning. \n\nShe locked her pleading eyes with mine and whispered, \"Brian...\" \n\n\"Yes?\" I asked innocently. \n\nPlease, she worded soundlessly. \n\nI had planned on teasing her a bit more for all the times she had made me suffer but the look in her eyes made me forget everything. Not breaking eye contact I latched down onto her little nub like a vacuum cleaner and sucked hard while furiously flicking it with the tip of my tongue and cautiously adding a third finger into her soaking wetness. \n\nIt was like a bomb going off. Her fingers gripped my hair almost painfully and her thighs clamped down around my head like the jaws of death. Her head was thrown back in a silent scream, her hands were pulling me deeper into her and her legs were squeezing the blood out of my head, but boy did I enjoy the sight before me. I could see the muscles in her stomach contract and release as wave after wave hit, her body jerking with each one. I was surprised I didn't cum just by watching her beautiful body orgasming. \n\nAt long last she started coming down, easing her grip on my hair and releasing her death grip on my head. I knew my ears would be glowing like red lights at an intersection. I was so hard and so on edge that if so much as a feather brushed against my erection it would be like the Fourth of July fireworks in here. Removing my fingers from her I was pulled up by her and she gave me a ridiculously hot kiss, not caring that I was basically dripping with her juices. \n\n\"That...\" kiss, \"was...\" kiss, \"amazing...\" She said between kisses. \n\nI couldn't describe how glad I was that she'd enjoyed it. I had just done the best I could with what little I knew, literally learning on the job, and I couldn't be happier that at least I hadn't screwed this up. \n\nAs she refused to let go of my lips, she tugged my shorts down and I kicked them off unceremoniously. My boxers went next and we were finally both in our birthday suits. She ran her hands all over my back, then put one hand on my lower back and pushed down so that my groin was now resting on hers. \n\nI broke the kiss temporarily, trying to gather myself, \n\n\"Mel I...\" \n\n\"I know,\" she said, staring into my eyes. \n\n\"I won't even last a minute,\" I tried again. \n\n\"It's ok. Isn't that why you made sure I came first?\" she asked softly, running her fingers down my cheek. \n\nI stared at her dumbfounded, not believing she'd figured me out so easily. \n\nShe gave me that sexy smile, \"You're not sly as you think,\" she said, tapping my nose with her finger and wriggling under me to position herself, then reaching down to take hold of me and guide me to her entrance. \n\nEven that touch was driving me nuts. I thought of exhaust manifolds, continuous variable transmissions, gearbox oil, fat old grandmas, global warming, duck hunting, even Sylvester Stallone screaming 'Adriaaaaaaaaaaan' to distract myself, but it all vanished as soon as I made contact with her soft warmth. Instinctively I pushed my hips forward and after a few attempts I finally had just the head inside of her. I paused, trying to multiply six fifty four by nine thirty three in my head to take the edge off. \n\nMy body betrayed me though, and I slowly kept sinking into her until I bottomed out, laying pelvis to pelvis. I was propped up on my elbows to avoid crushing her under me but she wrapped her hands around my back and pulled herself up to me so that we were in full contact with each other. Damn, she was not making this any easier. We stayed like that for a while, me still unable to comprehend the silky velvet feeling that was surrounding my hard-on. \n\n\"How's it feel?\" she whispered in my ear, \"think you can find a better sheath?\" \n\nI just shook my head and blew the air out of my lungs in one go, unable to find words to describe it. \n\nSlowly I pulled back a little and pushed back in. The friction was like fire around me and I tried my damnest to stop any sound from escaping from my throat. Men weren't supposed to groan, right? I just know there's a rule about that somewhere. \n\nFive more strokes and I was on the edge, teetering dangerously, unable to decide what to do. Despite what Lissy had said about being safe I tried to pull out so I wouldn't explode in her, but she had already guessed my intentions. As I lifted my hips she immediately wrapped her legs around me and lowered her hands to my butt, pulling me back in her. \n\n\"Liss, I'm going to cum,\" I warned her. \n\n\"I know. Cum in me baby,\" she said huskily, \"fill me up.\" \n\nMount Vesuvius aint got shit on me. I'd have submerged Pompeii twice over with the amount and intensity I erupted with. Melissa kept sucking on my earlobe and whispering God knows what into my ear the entire time as I nuzzled into her neck and unloaded into her. \n\nAfter what seemed like an eternity I finally floated back down to earth, into the loft in the cabin, and into the arms of the most amazing girl I'd ever known. I didn't move for a couple of minutes, then rolled off onto my side of the bed, taking Melissa with me. I had slipped out of her by now and she snuggled into me, both of us reveling in the afterglow of what had just transpired. My mind was completely blank and I had the stupidest smile plastered on my face. \n\n\"Your face will get cramps if you keep smiling like that,\" Melissa said looking up at me. \n\n\"You could probably shoot my face off right now and I wouldn't notice it,\" I replied. \n\nShe smiled, \"That good huh?\" \n\n\"Good? Good would be the understatement of the year, that was fantastic!\" \n\n\"I'm glad you enjoyed your first time,\" she said as she pulled me closer, \"and I'm glad I was the one to pop your cherry,\" she teased. \n\n\"Shut up,\" I replied, for a lack of a better comeback, \"and besides, I remember a certain someone begging me to let her cum.\" \n\n\"Shut up,\" she smacked my chest. \n\n\"But Mel, was it... was it good for you?\" I asked hesitantly. \n\n\"Are you kidding? I can't remember the last time I came that hard. That mouth of yours is good at winding me up in more ways than one.\" \n\nI felt like stepping out onto the balcony and beating my chest with my fists like a gorilla. Yeah, maybe I hadn't made her cum by being inside her, but I'd work on that stamina as we went on. At least I hadn't left her completely high and dry. \n\nAs we lay in companionable silence I heard something. It was toned down and whoever it was was trying mighty hard to keep it down but failing miserably. From downstairs I could hear a distinct female voice moaning 'yes, yes, oohh yesssssss'. I was just wondering if Melissa had heard it when she looked up at me with an amused look. \n\n\"I guess they're officially sealing the deal,\" she said. \n\n\"Yup. She's not going to let him get any sleep tonight, that's for sure.\" \n\nMelissa found her favorite spot on my chest and we gradually started going towards la-la land. Just before I went completely under I heard the squeak of bed springs from the other side of the cabin. I smiled to myself thinking this proposal stuff had put everyone in a bit of an amorous mood. \n\nGood for them, I thought as I tightened my arm around Melissa and drifted off. \n\n****************************************** \n\nComing back towards consciousness, I immediately felt like something was missing. With eyes still closed I tapped the bed beside me, looking for Melissa, but found it empty. It was still slightly warm though, and there was a lingering scent of her so it couldn't have been long since she left. \n\nI opened my eyes and tilted forward to a sight I will never forget. I don't think I will ever wake up to a better sight for the rest of my life. Melissa was standing out on the balcony, supporting herself with her hands on the railing, staring out over the distance, completely naked. Beyond her, the sun was just peeking up over the tree-line and bathing her with a golden light, almost making her glow. \n\nFor a few moments, I was captivated by the portrait she painted, her ruffled morning hair just adding that much more to her appeal. I dragged my gaze downwards, to the sensual curve of her back and the incredibly sexy dimples just above her ass. Her weight was mostly supported on one leg, her injured one slightly bent, only touching the floor with her toes. \n\nI couldn't take it anymore and got out of bed, walking silently over to her. I was already standing at attention from the vision she was presenting. I molded myself to her, putting my arms around her and lowering my head into the crook of her neck. Words were not necessary and she just sighed and tilted her head further to the side, allowing me more access to her neck and shoulder. \n\nThe early morning birds were chirping and the air was crisp, quite evident by the way her nipples were erect and pointing outwards like little bullets. I cupped her breasts and slid my erection between her ass cheeks, slowly grinding up and down while kissing down from her neck to her shoulder. It felt incredibly hot to be doing this out in the open, in full view of the jungle around us, even though I knew there was no one else around who could catch us. There was a danger of the ones downstairs though, they could come out and see us on the balcony at any time. \n\nMelissa lifted her injured leg and wrapped it back around mine, opening herself to me. It couldn't be clearer what she wanted, and for once, I wasn't going to argue. I dipped down a little and lined myself with her, then rose up, sliding into her in one fluid motion. I heard a contented sigh from her, like she had finally found what made her complete. Her head flopped back onto my shoulder and she closed her eyes, reveling in the feeling of being filled up. The feelings were reciprocated on my side as well. I didn't know how I had lived this long without her. \n\nThe sun was about halfway up as I began slow and easy strokes in and out of her and she raised one hand to grasp the back of my head. Keeping one hand on her breasts, I slid the other one down to her leg that was wrapped behind me, holding it in place so she wouldn't get tired. Even though my pace was relaxed I still knew I wasn't going to last long, the feeling of her gripping on me was just too good. I think she sensed that because her other hand travelled down and she started playing with herself, getting herself closer to my level. \n\nShe bit her lip as she strummed her nub, and exhaled sharply every time I pinched her nipple. Her hand moved faster as she got closer and, sensing she needed more physical contact, I forced her to turn her head and locked on to her lips, increasing my pace as well. She reached the point of no return and went over, gentle convulsions going through her as I felt her flutter around me. I was right behind her and I stilled and unloaded into her, not trusting my legs to support us if I continued pumping. \n\nHer head was hanging forward and she was taking deep breaths, the occasional flutter still causing me to twitch inside her. I kissed the back of her neck, down to the sharp pointy bone that protruded out at the base where her neck met her spine. I finally slipped out of her, and she looked back up. \n\nThe sun was fully up now, and the forest was coming alive with the different sounds of everything starting to stir. She put her leg back down and turned around in my arms, looking right into my eyes. We communicated everything we wanted to say without uttering a syllable. It didn't seem necessary to complicate things with words, we each knew what we were feeling and we could read it in the other's eyes. Sometimes the best things are better left unsaid. \n\nShe nodded towards the bed and I blinked in affirmation. Holding her steady with my hand on her waist, I assisted her into the room even though I was aware that if she got to the balcony without help, she could probably get back without it too. During the course of the traverse, my hand slipped a few times down to her butt. She just smiled knowingly and shook her head, opting to ignore it. \n\nYou can't blame me, it was a gorgeous ass. \n\n***************************************** \n\nAn hour later we all met downstairs for a quick breakfast of eggs, toast and some orange juice. Sally had already prepared the food when we got down and she motioned us to our plates after she and Melissa exchanged their morning hug. Call me a conspiracy theorist if you want to but I totally believe women have a secret language that they communicate with that men have no clue about. The two of them exchanged looks, small smiles and a coupe nods and slight raising of eyebrows that I could bet my life on was a fully fledged conversation. Sally flashed me a warm smile after their little Morse code which made me wonder just what had been said. I returned the smile and headed for my place. I was ravenous after last night. \n\nThe table was a relatively quiet affair as no one knew what the other had heard the previous night, so everyone just concentrated on their food. I kept throwing knowing smiles towards Nick and Jenna but they kept avoiding my gaze, completely vesting their interest in their plates in front of them. \n\nI dramatically cleared my throat, \"I hope everyone slept alright.\" \n\nThere were grunts and nods of acknowledgement, then silence again. No one had even looked up. How dare they ignore me? This was simply unacceptable, something had to be done. I turned to Melissa, \n\n\"You know I had a strange dream last night. I dreamt a raccoon had found its way into the cabin and I was waving a sausage at it to lure it away. I kept asking it 'does the little raccoon want a sausage? Do you want a little sausage in you?'\" \n\n\"That was a pretty weird dream,\" Melissa said. \n\n\"I know, but it gets weirder. It turned out it was a talking raccoon. So when I asked if it wanted a sausage, guess what it said?\" \n\nThe clatter of knives and forks stopped as everyone waited for me to continue. I could feel Jenna's eyes boring holes in the back of my head like lasers. \n\n\"What?\" Melissa asked, knowing exactly what I was getting at. \n\n\"It said, 'Yesss, yess, oh yesssssssssss'\" I mimicked Jenna from last night. \n\nI ducked to avoid the flying toast that almost impaled itself in my forehead. Jenna could give Batman a run for his money. Her toast could probably do more damage than his bat-shruikens. Nick was holding his head in his hands, knowing full well I would never let them live this down. \n\nBill and Sally were smiling, indicating that they had heard the noises as well, but what they didn't know was that we had heard what was happening in their room too. Time to wipe the smirk off their faces, \n\n\"Hey Bill,\" I said, \"they're probably gonna have to change the springs in your bed after we leave, if you know what I mean.\" \n\nThey both stopped smiling immediately, Sally giving me a murderous glare. Bill turned to Nick with a questioning look. \n\n\"Get him,\" Nick said and all four of them jumped me before I had the chance to run. \n\nThe next five minutes were a whirlwind of punches and smacks as I was beaten to within an inch of my life as I cowered and tried to get under the table. Man, these guys were ruthless. When they finally stopped I pictured myself with a black eye and covered all over with band-aid and a cast on my leg, walking with a crutch for the next six months. \n\n\"Is that all you got?\" I asked, swaying on the spot like a drunk, my glasses dangling from one ear and my T-shirt all rumpled up. \n\n\"My gramma hits harder than that,\" I said and ran out of the cabin. \n\nThankfully they didn't follow. I'd really have to be hospitalized if they performed an encore. Outside, I straightened out my appearance and found the van had already arrived to pick us up. I would have liked to hike back to the car the way we came, but I didn't want to risk injuring Lissy's leg any further. It was supporting her weight this morning, but I could see her stepping gingerly whenever she put that leg down and a trek through uneven ground was out of the question. ",
        "I groaned as I thought of getting Lissy's bag down from the loft. I creeped back in and saw the table had been cleared. \n\n\"No breakfast for you,\" Sally said from behind me, startling the lights out of me. \n\n\"But I'm so hungry,\" I whined. \n\n\"Deal with it,\" Jenna said, as they walked to their rooms to get their luggage. \n\nI looked pleadingly as Melissa. \n\n\"Don't look at me like that,\" she said, \"you got yourself into that mess.\" \n\nI rubbed my stomach as I continued looking at her beseechingly. \n\n\"Oh alright,\" she relented and pulled out an omelet between two pieces of toast from behind her back. \"I hid this for you, but if you dare tell anyone I'll break an egg on your head.\" \n\nI drew a cross across my chest as I took the sandwich and gave her a kiss on the cheek as we went up to the loft to get our stuff as well. Sometimes the little things count just as much as the big ones. \n\nGetting her bag down the stairs was even worse than getting it up. The narrow passage plus the steep decline made for some death defying acrobatics to get the suitcase down without ending up in a body cast. After handing it over to the attendants I went back up to get my own meager possessions and found Lissy at the landing taking one last look at the loft. \n\n\"Mind if we take one selfie here?\" she asked tentatively as I stood beside her. \n\nNormally I liked selfies as much as I liked a root canal but this time was an exception. This room was special, for more than one reason, and it wouldn't hurt to have a memory of us together here. \n\n\"Fire away,\" I said, smiling. \n\nOne turned to a few, which turned to quite a few, as she insisted on getting various angles plus one out on the balcony as well. I grumbled but in all honesty I didn't mind, these were moments I'd want to remember for a long long time to come. \n\nThere was a hoot from downstairs and I quickly grabbed my bag and we headed down to find the rest already piled up in the van. There wasn't a single person who didn't glance wistfully back at the cabin before we were swallowed by the forest, getting one last look at it before it disappeared from view. Melissa sighed and eased into me, staring out the van without really seeing anything, lost in her own thoughts. \n\nThe driver took the more scenic route, and we took almost an hour to get back to the registration office and the parking lot where the car was waiting for us. I took the first shift driving back, since I hadn't driven on the way over, and Melissa joined me up front. Bill and Sally got the middle and the newly engaged Nick and Jenna settled in the back. We met with the rangers and Officer Jeremy one last time and thanked them for everything before we set off on the journey back home. \n\nIf I thought things were going to naughty in the back seat between the two love-birds, I was dead wrong. They passed out within the first half an hour, Jenna drooling on Nicks shoulder and Nick resting his head on top of hers. I couldn't blame them though. Nick hadn't slept properly for two nights now, the first one because of worrying and second one because of... well, do I really need to explain that one? \n\nSally had curled up with her head on Bills lap and was fast asleep while Bill kept staring out the window as he absently stroked her hair. He nodded off briefly along the way as well. Melissa held my hand as I drove and lasted for about an hour before she too drifted off, resting her head on the window, her hand loosely entwined in mine. \n\nGreat, everyone had left me alone. Not that I minded though, it gave me time to reflect over the weekend, rewinding it back piece by piece and not being able to stop smiling as I thought of some of the highlights. I made sure I drove smoothly and avoided sudden movements so that I wouldn't wake anyone, especially the cute one sitting next to me. I looked over at her frequently, and every time I tried to gently extract my hand from, hers she would tighten her grip subconsciously, not letting me go.  \n\nHave you ever noticed that the return journey somehow always seems longer than when you were going? Or is it just me? You can be going the same route, with the same speed and still I felt the return time was always longer. It was around four in the afternoon when I finally pulled into Nick's driveway. People started stirring after I switched off the engine, looking like zombies. On the contrary, I was feeling as fresh as a daisy. \n\nJenna kissed and hugged everyone and went straight inside, no doubt straight to bed. Nick and I pulled out our bags and I dumped mine unceremoniously in my car. Bill shook hands with us and Sally gave us a hug before they climbed into the front seats. \n\n\"Hey,\" I said as I got to Melissa, \"I can drop home you if you want.\" \n\n\"Thanks for the offer,\" she said as we hugged, \"but Sally lives just down the street from me so Bill's going to drop her anyway.\" \n\n\"I hope you had a good time,\" I said as we broke away. \n\n\"The best,\" she gave me a peck and climbed into the car, \"call me tomorrow, I'm going to sleep like a log today.\" \n\nShe waved as the car pulled away. \n\n\"You've got it bad dude,\" Nick said, when I kept watching the car going down the street. \n\n\"What was your first clue?\" I turned around to him. \n\n\"By the way,\" I held my hand out to him, \"Congratulations, bitch. I don't think I got a chance to say it back there.\" \n\n\"Thanks, ass-wipe,\" he shook my hand, \"but don't think you're done yet. We still have a wedding to get through.\" \n\nI scoffed, \"Yeah. You're on your own for that one man, I'm done. I'm outta the game now, retired. I'm getting too old for this shit.\" \n\nHe just snorted, \"If it helps you sleep at night.\" \n\nHe started walking to the house, \"Sunday?\" \n\n\"You bet. But I'll have to bring a guest, she's kinda picking the movie for me.\" \n\nHe just smiled and shook his head as he entered the house, \"Whipped already.\" \n\n\"Screw you!\" I shouted as he shut the door. Asshole. \n\nI drove home a lot slower than the trip I'd made on Friday morning. For once everything had gone according to plan. It was still getting used to the fact that Nick and Jenna were officially engaged to be married and that we'd pulled off a ridiculously obtuse plan of proposing to her. Add to that me and Melissa were getting closer than I'd ever thought possible and I was one happy camper. \n\nOf course nothing good lasts forever and I had little idea of how grandly I was going to screw up in the near future. Things had been going absolutely perfect until now and I wanted to keep it that way but as they say, Man plans and the Gods laugh. Never in my dreams would I have conjured up a cock up of this proportion where I would drive Melissa... Hold up, I'm getting a little ahead of myself aren't I? \n\nThat folks, is a story for another time, right now I was as happy as a pig in truckloads of shit. I was rolling and wallowing around in it without abandon because, let's face it, why wouldn't I? I gotten laid, twice, my best friends were engaged and the future prospects with the girl of my dreams were looking positively stratospheric. \n\nI don't think I've said it for a while... or perhaps I have, but I'll say it again... \n\nLife is good."
    ],
    "authorname": "Agera_R",
    "tags": [
        "romance",
        "proposing",
        "elephants",
        "first time",
        "park",
        "balcony",
        "cabin"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/birthday-girl-ch-07"
}