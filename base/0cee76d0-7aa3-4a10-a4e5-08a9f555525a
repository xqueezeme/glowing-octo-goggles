{
    "title": "99 First Dates Ch. 02",
    "pages": [
        "The litany of romantic horror continues...\n\n18. Ms. Stuck-Up Bitch - I've had first dates where the woman was rude or snide or otherwise disagreeable, but never to the extent that this woman demonstrated. If she had anything nice or pleasant to say during our brief coffee date than I must have blinked and missed hearing it. She made especially rude comments about Farah and loudly wondered why 'those sort of people' were being allowed in this country. I wondered if this is how she always acted on a first date when the rest of the world tries to put their best foot forward? Or maybe this was her best behavior?\n\nYikes. Either way, no second date.\n\nLater, she griped to all of her friends about what an awful date I was, like I was some sort of player or sleezebag because I didn't call her back, and via a friend of a friend, the word of her displeasure came to be known to me. I'm a bit of an odd sort of fellow and many of my friends are even stranger and odder still. A good wife would need to be able to treat them well, because I'm not certainly going to have you around for a moment if you're going to habitually hurt my friends' feelings.\n\n<p align=\"center\">*************</p>\n\n19. Ms. No Goals - She was pretty enough and she had a bit of intelligence, but otherwise she displayed a complete and utter lack of any meaningful ambition in life. She didn't have a single life-goal past getting married. What a waste. She didn't even seem particularly concerned that I wouldn't be asking her out again.\n\nAll that sort of behavior and attitude tells me is that you can't wait until you can sit at home all day watching soap operas and reality TV, getting fat and leeching off of my income.\n\n<p align=\"center\">*************</p>\n\n20. The Martha Stewart wanna-be - The coffee date went so well that I tagged her for dinner the next night. That went alright too and then she invited me to her house for dinner the following night. Everything in her house was picture perfect... and god help the man who put anything out of place! She could cook like a dream but I could already watch her knuckles turning white whenever I moved or touched anything or didn't keep things exactly as she wanted them. She wanted a curator for her domestic museum, not a helpmate and partner in life.\n\nI had seconds on dessert and started to think of suitable ways to break our association. The quick and simple method was to let her see the pig sty that was my apartment on our next date. Ok, I deliberately didn't do dishes or laundry for a few days and tossed a few things around (I'm not a complete domestic disaster) and let her panic. She nearly immediately created the few small suitable lies that ended our relationship on a mutually satisfactory note.\n\n<p align=\"center\">*************</p>\n\n21. Ms Perfection - A smug condescending woman who let me know in the first minute of our conversation that I wasn't at all up to her normal standards, but that she'd try and stoop down a bit closer to my level and give me a try. She was nearly forty years old herself, never married, but believed that she was the finest piece of ripe fruit still hanging on the tree.\n\nHey ladies, if you're going to have a take-it-or-leave-it attitude, most guys (like me) are going to choose option B.\n\nI predict that she will still be unmarried in another ten or twenty years, but that her standards wouldn't have declined in the slightest. It would never be her fault that no man was capable of being worthy of her.\n\n<p align=\"center\">*************</p>\n\n22. Ms. Bored - This woman confused me to no ends. She acted bored out of her skull with a 'why am I here?' look on her face and yawned all night long when she was with me... then complained bitterly to me when she called me a week later to gripe that I hadn't called her back to ask her out for another date!\n\nI chalked it all up to her living in a slightly different reality than mine and I gave her a gentle letdown.\n\n<p align=\"center\">*************</p>\n\n23. The Ms. was a Mrs. - Being already married is a serious deal-breaker for me, but from the way she was playing footsie with me under the table, I guessed that finding out later on after we had had sex would be an even worse way to find this fact out. I don't do adultery, so yeah, I guess in that way I respected her candor by admitting the truth upfront. I think she would have been fun in bed, but I didn't want any sort of scene with an outraged husband, or his firearm collection.\n\n<p align=\"center\">*************</p>\n\n24. A Dinner for Three - It was supposed to be a quiet intimate dinner for two, but all night long there was another man at the dinner table. Figuratively speaking anyway. She was tall, bright and beautiful, but all dinner long she kept mentioning her ex who now lived in Colorado and how she was looking forward to seeing him again when he returned home here in a few weeks to visit his parents.\n\nNo bets but what she wouldn't run back into his bed the moment he crooked his little finger at her. This also smacked of drama, and I didn't need any in my life.\n\n<p align=\"center\">*************</p>\n\n25. Ms. Secretive -- She was almost the perfect woman; bright, intelligent and hot looking with gorgeous hair, perky breasts I wanted to inspect at close hand, and her smoking little black dress showed off a lot of nice soft and creamy thigh. I also never learned one single thing that was true about her - and her phone number and address were both false. Was she CIA, MI:5, or some other spook? Or just another crazy gal playing mind games? She then disappeared without a trace, with all of her on-line information now gone.\n\nI waited by the phone for her to call me back for several weeks but she never did.\n\n<p align=\"center\">*************</p>\n\n26. The Flirt - I like a perky woman and don't mind it a bit when they get a bit assertive or aggressive, but not with other men while on a date with me. She flirted non-stop with every waiter/busboy/or other male that passed within ten feet of her. I really didn't like the wink she was giving to another male restaurant patron who was trying to ignore her and pay attention to his own date. It didn't work. Outraged, his date upended a mostly full plate of pasta over his head and stomped out. The Flirt just winked at him harder and gave him one hell of a 'come hither' look.\n\nI walked out too and told my old friend the waiter that my date was on her own and I left. Obviously she never noticed my absence and she just cast her net for other fish. Clearly she was not the sort of girl to remain faithful to just one guy at a time.\n\n<p align=\"center\">*************</p>\n\n27. The Commander -- Her Imperial Ladyship tried to give out the orders from the moment we met at the restaurant. She took full charge and ordered everything, even my dinner... quite against my wishes, but she wouldn't take no for an answer. She drove our waiter half-crazy, running him back and forth non-stop for the entire meal and treated the menials with the scorn that she obviously thought they deserved.\n\nBy the time the check comes, I already know if I'm going to ask a woman out again. One of the most important things I look for is how she treats the wait staff. I think that this is a very fair test. I've even given the waiter/waitress a bigger tip if my date was being a bitch to them. I have no time for inconsiderate people. It's more about rudeness, really. It is the same as with the cell phone behavior, an 'I don't think you're important enough to pay you the same consideration you're paying me' kind of thing. Luckily, these types of people are easy to discover as they're also usually the same kind of folks that think it's ok to treat their servers like boot scum. So they're not exactly hard to recognize.\n\nI had to make a fast break from this man-eater the moment dinner was over. Given time, this Hunting Girl would have had me licking her boots with my tongue and polishing her saddle leather while she gleefully sodomized my virgin ass with her riding crop. Kinky, but not the sort of refined acts that get my juicer harder than nun's buns. I did give a rather odd sort of wimpy friend of mine her phone number and they've been an item ever since. The world is full of all sorts of different types of peope.\n\n<p align=\"center\">*************</p>\n\n28. The Mushroom -- She was pretty in a mousy sort of way, but she was even less motivated than Ms. No-Goals. She had no interest in the outdoors or really ever leaving her house to do much of anything. She didn't even like shopping. Fortunately she had a computer programming job where she could work from home most days and never leave the house until she ran out of Haagen-Dazs or Dove bars, and mostly she didn't. I gave her a couple of tries but she never wanted to do much of anything, and we'd always end up watching a Netflix movie at her home. I'm pretty sure she was borderline agoraphobic but she said she was happy with being a homebody.\n\nShe also had a sex drive of almost zero and pulled back hard anytime I tried to go past first base. We sort of stayed friends, but without 'benefits'.\n\n<p align=\"center\">*************</p>\n\n29. Miss 'Thang' -- I didn't believe it was possible but I met a woman even more self-absorbed than Ms. Perfect above! She had the attitude of 'my shit don't stink' permanently carved on her face. It was ME ME ME ME ME ME all night long. Utterly and completely self-absorbed. She also probably never even noticed during our coffee date when I said goodnight and left her blabbing on.\n\nIt's great if you talk about yourself on the first date, cause we're getting to know each other and all that, but if I'm sitting there wondering when you're going to shut up the fuck up, and you're ten minutes in to your diatribe about how much you love watching Desperate Housewives, then the relationship isn't going to go anywhere.\n\n<p align=\"center\">*************</p>\n\n30. BPD #2 -- This one nearly traumatized my entire attitude towards meeting any more strange unfamiliar women. She threw her cup of coffee at me just because I mentioned that I occasionally liked to hang out with a few of my buddies once in a while. She then threw a chair at me when I mentioned that I didn't think we ought to see each other and the police had to be called. She had a long police history of exhibiting bizarre behavior and apparently she had gone off of her medications. They packed her off to a county mental hospital where they kept her in a padded room for about five months. She turned up at the caf\u00e9 again right after her release, once again off her meds and began raving about all of the letters I had sent her, begging for us to get back together again. We called the police again and she's back in the farm once more. She just refuses to take her meds. Absolute insanity!\n\n<p align=\"center\">*************</p>\n\nAt this point, with the thirty date bet mark met and about to be surpassed, our caf\u00e9 staff started into some really serious wagering. The betting now ranged out to at least fifty dates as the new average estimation for how long it would take me to find an actual serviceable girlfriend, and they started to prominently keep track of my failures on the staff bulletin board.\n\n<p align=\"center\">*************</p>\n\n31. Another Religious Nut - She turned out to be a Christian Taliban zealot who was too tightly wrapped up in her very personal relationship with God (capital G) to spare room in her life for any mere mortals. Some of her viewpoints about enacting religious laws as the future legal law of the land were frankly scary. She literally wanted to bring back stoning to death sinners who blasphemed against God... or any of his thousands of other Laws. We politely agreed to disagree and had an interesting discussion about the Old Testament Book of Ruth, and she peaceably parted with me unconverted from my evil heathen ways.\n\nOkay, I didn't expect to end up in bed on the first date, but when you start trying to convert me to your religion, because your religion is the most important thing in your universe, that pretty much eliminates any possibility of a second date.\n\n<p align=\"center\">*************</p>\n\n32. Ms. Oblivious -- I actually liked her quite a lot. She seemed smart, fun loving and had a good job that she enjoyed, but somehow the two of us were always a bit out of synch. She would always pull-back if I leaned too close and she didn't seem to like to be physically touched at all, even when I offered to help her with her coat. After three dates without even a single kiss goodnight I called it quits. She then called me a few weeks later to sincerely ask why I never made any sort of move on her?\n\nIt wasn't due to any lack of trying!\n\n<p align=\"center\">*************</p>\n\n33. Ms. 16 Tons of Emotional Baggage - Thank goodness for it only being a coffee date. She poured out her soul to me as if I were her paid psychologist. Nothing apparently had ever gone right in her entire life and even her issues seemed to have issues all of their own... mostly concerning her bad relationship with both of her parents.\n\nOops, sorry... I have to run to an urgent appointment at my dentist. Elective root canal surgery that suddenly now can't wait. I'm too old to deal with 'daddy' issues... but the very next new date had her issues in spades!\n\n<p align=\"center\">*************</p>\n\n34. Ms. Serious Daddy Issues -- A scary, scary woman. She was really a little too young for me but she was decent fun at dinner, even if she did talk about how important her father was in every other sentence. She wanted to see my place afterwards and her tiny thin dress hit the bedroom floor two minutes later. She wanted me to call her 'my little girl' or 'Angel' while fucking her... while she called me 'Daddy'. Freaky!\n\nThe moment that we were done screwing, she then grabbed her cell phone to call her darling Daddy to tell him that she'd be late getting home, and then proceeded for the next twenty minutes to tell him all about her day. The really creepy part is that she wanted me to fuck her ass right then and there, while she talked on the phone with her father! Ok, she did like it up her butt, but that scene was seriously weird!\n\nI didn't call her for a second date and she apparently found some other more willing daddy surrogate.\n\n<p align=\"center\">*************</p>\n\n35. Ms. Impatient -- During our casual coffee date she talked endlessly about marriage and having babies as soon as possible. She then complained why none of the previous men she had dated lately had ever called her back for a second date. I don't think she quite realized that this sort of talk (especially on a first date) tends to run men off pretty quick. Myself included.\n\n<p align=\"center\">*************</p>\n\n36. Ms. Complainer -- One of the worst dinner dates of my entire life. She complained about my appearance, didn't like the first two tables we were offered to be seated at, demanded that her fork be replaced, and then later her knife. When the dinner came sent her steak back to the kitchen twice, complained about the tomatoes in the salad, and just about everything else as well for no particular reason. I swear she had more gripes than the battleship Arizona! For dessert she whined and complained about the weather.\n\nI have my own problems... I don't want to hear about yours on a first date.\n\n<p align=\"center\">*************</p>\n\n37. On the Rebound -- I rather liked her, but she was just straight from a bad breakup/divorce and she was still in that 'hurt/mistrusting/angry' phase. I've been there myself. In another six months to a year, she'd probably be a bright happy and cheerful woman once again... but not today.\n\n<p align=\"center\">*************</p>\n\n38. The Drama Queen -- From the first five minutes of our coffee date, I could feel the emotions rising. Virtually everything in her life was a disaster; in fact she was the living embodiment of 'management by crisis'. Apparently everyone at her work was an idiot so she had to do the work of five different people single-handedly, and her life at home wasn't any easier. Something was always needing her constant attention or one of her friends absolutely must have her advice or help with a project, since they couldn't do it themselves properly and only she -- Wonder Woman, could do it right. And so forth. The icing was when she openly discussed her prozac and valium dependency.\n\nFortunately, a friend desperately needed her shopping advice and she had to rush off to once again save the day! I was about ready for a valium myself by that point and I needed about three glasses of red wine afterwards before I could chill out.   \n\n<p align=\"center\">*************</p>\n\n39. The Pathological Liar -- I'd never heard so much bullshit before in a single hour. Her father was a famous professional baseball player (who didn't appear for some reason in my current edition of the Baseball Encyclopedia); She also claimed to be a cancer survivor of a rare near incurable variety; had been raped repeatedly back in college but the cops laughed at her because the man who did it was someone famous. She has restraining orders against three different men that have been stalking her for years; and of course her family was wealthy and has houses all over the world. You get the idea.\n\nComplete and total bull shit!\n\nFor paybacks, I told her that I was an escapee from a Mississippi chain gang and that I was hunting for my missing partner in crime who had legged off with seven million dollars in uncut diamonds from our last heist. She sounded intrigued, but I told her I had to hoof it off to Mexico pronto... after fitting my ex-partner into a shallow grave.\n\n<p align=\"center\">*************</p>\n\n40. The Empty Dress -- In my lengthy dating experience, I met several rather hot looking women who had, literally, nothing going on in their lives. They had cruised through life entirely on their looks. They don't read books or a newspaper (except to see if Macy's is having a sale). They don't understand ANY references to current events, politics or even history or literature. Their total sum knowledge of the world is whatever was happening within their circle of friends, going back about six months, and the latest reality TV celebrities.\n\nShe was pretty... and willing, so we banged each other anyway for a few weeks, and then it fizzled-out when we settled into a routine and I realized we had NOTHING whatsoever to talk about once we were out of bed. I've had a fair share of empty hotties over the decades, and to be honest, I'm over it now.\n\nIf we go out and there's no substance there -- see ya later. Be interesting... please. No, I really don't give a crap about the latest hijinks that the latest movie star-du-jour is pulling off, nor do I care about the vast majority of crap that usually qualifies for news in People Magazine. Talk about your hobbies, fun things you've done recently, something... anything. Otherwise you're a vacuous whore, and I'd rather not waste my time.\n\nI took her into work with me a few times to try and get her interested in something that I did, but nothing seemed to interest her. She found an equally mentally empty stud muffin in a suit a month or two after we split and they're quite deliriously happy together now, but I feel sorry for their future children.\n\n<p align=\"center\">*************</p>\n\n41. The Mouth of the South -- She never once shut up and as far as I could tell she didn't even need to stop for air. EVER. I went to use the bathroom and when I came back out she was still telling her incomprehensible story, without a break, to the pained couple that was sitting at the table next to her.",
        "I told her that I had to run to a doctor's appointment, something to do with my growing deafness. She got the hint.\n\n<p align=\"center\">*************</p>\n\n42. One Brown Mouse -- She showed up for coffee dressed up all frumpy and she kept her eyes down and her mouth shut most of the evening. She was vaguely cute and with a bit of effort she could possibly be cleaned up and converted into a sexy librarian sort of gal.\n\nI was willing to give it a try... the quiet ones are always crazy-hot once you get them into bed, but she didn't return any of my three post-date phone calls.\n\n<p align=\"center\">*************</p>\n\n43. The Swinger -- This wild gal in her early thirties alternately fascinated and repulsed me. She was pretty good looking but was showing her mileage a bit. She was an unashamed 'swinger' and admitted that she and her last ex used to go to swapping parties every weekend. He got tired of that scene -- she didn't, so they split. Her favorite way to spend a weekend would be to have ten plus guys all pulling a train on her.\n\nOk, I'm a pig and I must have had temporary insanity. I gave her the second dinner date and we bumped uglies all that Friday night. She was good enough in bed that we stayed there most of Saturday as well. Since all of my blood had flowed out of my brain and into my cock once again, I let her talk me into taking me to a private swinger party being held at a friend of hers that night - but I didn't stay too long.\n\nShe wanted to fuck other people, namely everyone else who was there, both male and female, and I soon found it annoying to watch. Oh, I got my rocks off with a couple of willing swinging wives, while their hubbies happily boned other equally willing swinging wives, but I personally couldn't handle the jealousy. I'm not really cut out to be a happy swinger.\n\nAfter getting my rocks off a few times and watching my date get three-hole penetrated repeatedly until she saw heaven, I became bored, so I put on my clothes and went home. She didn't call me back and I had my family doctor give me a full sexually transmitted disease workup and I fretted for over a week until he said I was clean.\n\nNever again!\n\n<p align=\"center\">*************</p>\n\n44. Ms. Yankee Independence -- I met her entirely by happenstance. Some friends of mine were having a big Friday after work get-together and everyone invited their friends and co-workers. We ended up with a crowd of over twenty people at one long table and six of them were visiting school teachers who had just moved down together from Massachusetts to work contract for our local school system. In the next three fun filled hours they proceeded to drink us guys nearly under the table.   \n\nFiguring we had been hoodwinked, the men were trying to count our money under the table to make sure we could cover the astronomical liquor bill. When the check came one of the women instantly grabbed it and with her calculator, quickly did the math to split the bill equally among everyone, and called out a number... and all the visiting teachers started laying money on the table!\n\nI asked the guy next to me, \"What the heck are they doing?\"\n\nHe said, \"I think they're paying for their own drinks!\"\n\n\"No Way! I've never seen that happen.\"\n\n\"Me neither!\" Said my friend in total awe and amazement. We thought those northern guys must have had it made!\n\nI had a second and third date with one of these teachers but it didn't really work out. Too much culture difference and she knew that she wasn't going to stay down here for good, so she didn't want to get too serious into any relationship and then leave. We became friends with benefits for the next six months until she returned home and she didn't mind that I was continuing my disastrous trend of first dates with other women, and found my updates hilarious.\n\n<p align=\"center\">*************</p>\n\n45. The Professional Dater - She had dated over twenty different men in the past six months, but she 'just couldn't find what she was looking for'. She told me this on the first date. Obviously, much like Ms. Perfect, she was never going to find what she was really looking for... the quote 'Perfect Man', nor was she willing at the moment to settle for something less.\n\nI wished her good luck with her virtually hopeless Diogenian search. As far as I know that old Greek is still looking for an honest man too.\n\n<p align=\"center\">*************</p>\n\n46. The Werewolf -- Honestly, she had more facial hair than I did!\n\n<p align=\"center\">*************</p>\n\n47. Hotty McHot-Rod -- She pulled up in front of the caf\u00e9 driving a fire engine red Porsche Turbo Targa convertible and wore a screaming red leather mini-dress with designer brand sunglasses. She drank her latte and pointedly asked me what kind of car I drove! Since I buy/sell antiques and haul things about for a living, I proudly showed her my eight year old beat-up pickup truck and she soon left to burn rubber somewhere else. What an insufferable egomaniac!\n\nIn my opinion, and I admit that it's a minority one, cars are for transportation and functional utility, rather than status symbols. Sure beemers and BMW's are nice, but for me they're not functional... and I don't want the sort of wife that needs an expensive car as a necessary fashion accessory.\n\n<p align=\"center\">*************</p>\n\n48. Ms. Fitness Zealot -- Ok, her profile said she was athletic and very physically active, but I was a bit surprised when she ran the six miles to meet me for our coffee date. She sneered at my very slight paunch and couldn't drink her energy drink fast enough before she left to finish her 'normal daily ten mile run'. Good riddance.\n\nI have nothing against skinny girls who can fit into a size 4 dress, or even a size 0 dress, but honestly this overly thin gal looked like a bag of antlers. I've seen men and boys with more breasts than she had and her hip bones that were well displayed above her running shorts looked dangerously sharp. She looked much too fragile to indulge in sex, besides; she'd probably always be too tired from her other workouts anyway.\n\n<p align=\"center\">*************</p>\n\n49. A Rebel without a Clue -- There are always some people that just have to do things their own way. She didn't just march to a different drummer... she had her old own alternative band playing inside her head. She arrived on roller skates... and I got the impression she lived in them pretty much all of the time. She admitted she wore them most of the hours of the day that she was vertical and she didn't seem to have a 'real job'. Not as many tats as Lydia, and she really wasn't as interesting as a person either.\n\nShe was angry and mad at the world and probably had been since she turned fifteen. She'd still probably be angry after she turned fifty. She drank her tea and we both mumbled apologies. No harm -- no foul.\n\n<p align=\"center\">*************</p>\n\n50. The Valley Girl -- Ok, she wasn't quite that vapid, but the way she spoke at dinner constantly put my teeth on edge. She was a stereotypical blond ditz and she constantly said 'like', yet not once ever in the correct context. You can tolerate teens that talk like that but by the time you're forty it just makes you sound retarded or drug addled. I'm not a grammar Nazi, but long ago some school English teacher should have tried to shake some sense into her. Fer sure!\n\n<p align=\"center\">*************</p>\n\nMy staff was having much too much fun with my dating disasters by now. They now posted the wagering board openly in the caf\u00e9 so that even our customers could enter into the bidding. The winning jackpot for picking the winning date number was currently at over a thousand dollars!\n\n<p align=\"center\">*************</p>\n\n51. Ye Olde Towne Bicycle -- This amazing woman was a walking and talking advertisement for eugenics or forced sterilization. She had, I kid you not, thirteen kids by nine different daddies... several of the fathers were of course 'unknown'. She couldn't even keep track of all of the guys who had nailed her in just the last two weeks! Apparently every guy in town had already screwed her except for me! Talk about taking someone else's sloppy seconds! She even joked about wanting to push out a few more crotch-fruit. Not with my dick!\n\nI don't know why she was even selected as an option for a first date. I checked her profile later, and she had no kids listed. Why do they always pull that shit? Do they think that men are that stupid that they can just flash some tits and our brains go to mush? Well, sometimes... but not this time.\n\n<p align=\"center\">*************</p>\n\n52. The Sociological Experiment -- In an odd sort of way I was kind of amused with what she did. She set about to intentionally try to find and then push any or all of my emotional buttons, just to see how I ticked and what it took to piss me off. It was all a grand experiment on her part to see how much she could push me around and still get away with it.\n\nTwo can play that game and she left in tears less than forty-five seconds later. I only commented to her that she looked a lot like her sister, with whom I had been having an affair with for nearly ten years and I now wanted to 'complete my collection', preferably with them both chained up in my secure and soundproof cellar dungeon.\n\n<p align=\"center\">*************</p>\n\n53. My Plastic, Non-Fantastic Lover -- This date can be summed up by just two words - Fake titties. Somewhere along the line she had installed some monstrous implants into her chest. She now constantly wore low cut blouses so she could made sure that everyone could admire her new augmented tits properly. She also complained about new lines appearing in her face and she asked me if she should also get butt implants? I sarcastically told her she should wait until after I'd fucked her current ass first to see if it needed more cushioning.\n\nAmazingly, she took that as a compliment and handed me her house keys so I could immediately give it a proper deep probing inspection. I did, and it really wasn't worth what I'd anticipated.\n\nI'd never fucked a woman before with huge breast implants and I just couldn't resist the opportunity to broaden my education. It was so not worth it. She was like a limp dead body in bed and I had to do 99% of the work. Fake tits aren't nearly as delightful to feel, nuzzle, lick, kiss, bite and caress as real (natural smaller) ones are. Live and learn.\n\nTo end the affair, I mentioned that she'd soon need another facelift and she screamed bloody murder and booked the next flight out to Beverly Hills, California.\n\n<p align=\"center\">*************</p>\n\n54. Ms. Un-Domestic -- There is a little bit of Elvis in every man (except for Michael J. Fox who is the Anti-Elvis, but that's someone else's long story) so accordingly, there ought to be a little bit of Julia Child in nearly every woman, except for this one. I soon found out that she could just barely boil water let alone actually cook anything. She seemed to live on Raisin Bran cereal for meals in which she didn't eat out or nuke a frozen dinner in the microwave. I swear, I've seem seen more actually food in a male college dorm room refrigerator than what she had in hers. Oh, and she didn't clean house either.\n\nOk, I'm a decent cook and I didn't actually require a gourmet chef for a wife, but she had enough other minor faults and eccentricities that when they all added up all together they spelled long term trouble. Her finances were also a complete mess and most of her credit cards were close to maxed out.\n\nI'd been in that sort of mess once before, no thanks.\n\n<p align=\"center\">*************</p>\n\n55. The Vegan Zealot -- Just the memory of her brings a shudder. She was way beyond being just a vegetarian and she turned it into a complete lifestyle. She wanted the dinner option, but it was a crime against nature with what the head chef had to do to prepare her a meal that would meet her insanely strict standards. Living that way just makes finding restaurants we could both enjoy way too hard, and agreeing on anything that we could share together became practically impossible.\n\nI dropped her off at her home after our very awkward dinner, but first along the way I stopped at a Wendy's to buy myself a double-Baconator cheeseburger. She was suitably horrified, much to my obviously transparent malicious delight.\n\nIt's weird how many vegetarians hate salads, btw.\n\n<p align=\"center\">*************</p>\n\n56. The Crazy Cat Lady -- Ok, she thought we'd be good together because we both loved cats. I have one, an addled and not very bright but loveable longhair. We went after coffee to go see her cats and I was astonished to find that she currently kept about thirty cats inside her house... peeew! The cat box odor was nearly overpowering and I coughed nonstop the entire five minutes I was there.\n\nI then falsely admitted that I also kept a pair of large voracious Rottweiler dogs and her ardor for me cooled markedly.\n\n<p align=\"center\">*************</p>\n\n57. The Animal Hater -- She was pretty, witty and had a wonderful sense of humor... but she didn't like animals at all, either cats or dogs... or fish, birds or turtles. My cat is really my very best friend. If you can't be around him without flinching or cringing, it'll never work.\n\nShe made an ultimatum after the second date, either the cat or me goes... guess which went?\n\n<p align=\"center\">*************</p>\n\n58. Ms. Workaholic - She postponed our first coffee date on two prior occasions due to having to stay late at work. I understood that -- stuff happens. The day that she finally showed up she brought along her work laptop and tried to multi-task her current marketing sales plan while we talked.\n\nToo bad. She was not bad looking but it was quite obvious where her priorities in life were. I was always going to come at least a very distant second place in her thoughts, let alone her heart.\n\n<p align=\"center\">*************</p>\n\n59. Ms. Priss -- She demanded the dinner date, arrived there nearly forty minutes late, and then decided that my favorite local Italian joint wasn't nearly good enough for her. We compromised on a local up-market bistro where I overpaid for a pair of dinners that each barely looked adequate for being labeled as an appetizer. Then she picked at her food for over an hour. She looked and acted high maintenance - very high maintenance.\n\nSome guys look for that sort of woman. They are looking for a trophy to be seen with rather than a real relationship, but I don't have the temperament or the patience for that sort of thing.\n\n<p align=\"center\">*************</p>\n\n60. The Former Stripper -- Ordinarily a former stripper would be just a great one date dame, but she was so much fun to be around that I asked for seconds. I took her out for a nice dinner and later that night she took me for a trip around the world in bed.\n\nShe had just enough issues and drama surrounding her that I (reluctantly) decided that she wasn't a good long-term fit... so she then hooked me up with her roommate!\n\n<p align=\"center\">*************</p>\n\n61. The Roommate -- Her roommate was still a stripper... and was another great gal when out on a date. I picked her up from her nightclub at 2:30 a.m. and then we chatted like old friends at a local coffee shop until dawn. Then we went back to my place where she also took me all the way around the world in bed... twice.\n\nShe loved her job (stripping) and intended to do it until her tits fell off, or she'd made enough money to retire in comfort for the rest of her life. She wasn't looking for any full time boyfriends and I didn't want everyone looking at my girlfriend's bare tits and smoothly shaved cunt. We decided to stay friends with benefits.\n\nWhen I took her home the next afternoon, she, her roommate and I somehow all ended up back in bed together.\n\n<p align=\"center\">*************</p>\n\n62. The Stripper + Her Roommate Together -- Does this count as a second first date????\n\nI made a note to myself afterwards that having a very bisexual girlfriend or wife would definitely keep things from ever being dull in the bedroom!\n\nThe Stripper soon got a better job offer at a bigger club in another city and both gals then moved out of town, but the going away party (with a few more of their female friends) ending up being legendary. I was exhausted, but I had a stupid happy smile stuck on my face for most of the next week.\n\n<p align=\"center\">*************</p>"
    ],
    "authorname": "Stultus",
    "tags": [
        "humor",
        "dating"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/99-first-dates-ch-02"
}