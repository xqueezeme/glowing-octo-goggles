{
    "title": "There and Back Again Ch. 077-078",
    "pages": [
        "Chapter Seventy-Seven: Making Friends \n\nI had entirely forgotten about Leske and the dwarf commoner being in the Carta's dungeon. I'd played the dwarf origins up to Ostagar, but never past; from what I remembered, Brosca should have been dead from self-imposed starvation, and Leske barely hanging on. And at no point was I aware of a problem that would cause one dwarf to actively want the other dead. I wrinkled my brow. \n\n\"Brosca? That sounds...like a last name. What's your first name? And why do you want to kill Leske, over there?\" \n\n\"Aren't we demanding for someone trapped behind bars?\" \n\nI flushed. \"Sorry! I'm sorry. I don't mean to be nosey. I'm just a little freaked out right now, and talking helps me stay sane. Please, tell me a story, then, or just...please, keep talking to me. I don't care what about.\" \n\nSeemingly appeased, I heard the dwarf chuckle. \"Faren. My name is Faren. And I, well, that's a long story, though I guess we've all got nothing but time, eh? Let's see. I worked for the old leader of the Carta, Beraht. He ordered me to try to fix a Proving. When I got there, Beraht's fighter was passed out drunk, so I put on his armour and won the Proving. Would have gotten away with it, too, except that the drunk bastard stumbled out into the ring. Leske and I were arrested, and Beraht paid the guards to bring us here instead so we couldn't implicate him in it. \n\n\"A while back, there was some sort of kerfuffle; something about the mages not buying Lyrium anymore. I don't know the details, but it had everyone in an uproar...I managed to grab the guard, knock him out, and steal the keys. Leske and I escaped, but on the way out we had to fight Beraht. We killed him, but before we could get away entirely, Jarvia found us. Then Leske here,\" I heard a fist slam against a metal bar in frustration, \"betrayed me and sold his soul to the Carta. Offered to help Jarvia pick up the pieces after Beraht's death. Blamed me for everything, and she fell for it. Dumped me back in here, and Leske got to live the high life as Jarvia's second for a while. 'Til the moron got himself caught skimming or something, and now here he is, back in the dungeon again. They contemplated putting us in the same cell, for a while - I wish they had, so I could have killed the bastard. I don't even know what happened to my sister.\" \n\nI jumped - of course, if he never made it out of the hideout, he wouldn't know. I thought frantically. \"Hey, wait...Brosca...is your sister named Rica, perchance?\" \n\n\"How'd you know that?\" \n\n\"I knew I'd heard the name somewhere. I met her,\" I lied. I didn't want to get into the discussion about my origins. \"She's doing fine.\" \n\n\"How'd you meet my sister?\" \n\n\"Her patron is Bhelen Aeducan. She's pregnant with the heir to House Aeducan.\" \n\nI heard angry grunting from the mysteriously silent Leske, and happy cursing from Faren. \"Well don't that beat all! Rica made good! You hear that, Leske? You always did have a thing for Rica, but now she's practically a Princess!\" \n\nThere was more grunting, and I finally had to ask. \"Faren, why doesn't he talk?\" \n\n\"Ah, that. Jarvia cut out his tongue, I'm guessing. He hasn't been able to talk since, and can barely eat. I don't truly know what he did to get on her bad side, so I assumed stealing.\" \n\nI had a thought. In game, Leske hadn't been a total bastard, and he'd definitely had a thing for Rica. \n\n\"Leske? One grunt for yes, two grunts for no, okay?\" \n\nHe grunted once. \n\n\"Did you steal from Jarvia?\" \n\nTwo grunts. \n\n\"Something more personal, am I right?\" \n\nOne grunt. \n\n\"Let me guess. You broke her heart.\" \n\nOne slightly hesitant grunt. \n\n\"Because she found out you had a thing for Rica?\" \n\nOne grunt. \n\n\"You tried to rescue her from Bhelen?\" \n\nOne very resigned grunt. \n\n\"You wanted her to be with you.\" \n\nTwo grunts. \n\n\"Not...oh. You were trying to protect her from backlash from Jarvia for Beraht's death.\" \n\nOne grunt. \n\nFaren finally spoke softly. \"You tried to protect Rica?\" \n\nA very tired-sounding grunt. \n\n\"I...I need to...lie down, for a bit.\" Faren sounded freaked. I couldn't blame him. \n\nI heard shuffling, and then nothing. It was quiet. \n\nI've never been particularly good at quiet. As much as I'd always had trouble with people - it tends to be off-putting when people realise you don't trust anyone - I didn't like sitting alone in the quiet. At home I always had the television or the radio on, or music from my iPod blaring; I never sat in the quiet. Even at night I had a fan to provide white noise. \n\nAnd since I'd come to Ferelden, I'd never really had much quiet. There were always others around - others who I could trust, because I knew them before having to trust them - and the sounds of talking, or snoring, or whistling, in addition to the sound of nature. I hadn't sat with no noise much, and I wasn't thrilled to be doing so now. \n\nNo sounds conducted through the thick stone walls, and nothing echoed through the thick wooden door. There was no squeaking, fortunately - I was terrified of rats, overall, but figured any that tried to live in Dust Town would just get eaten. I crawled across the tiny cell and used the bucket for its intended purpose, wishing fervently for a cover to decrease the smell. I went back to sitting against the wall near the bars, and tried to relax. \n\nI worried what Jarvia would be asking Solona to do, and whether Solona would do it. And if she did, what then? I'd still be in the dungeon, and they'd still have leverage to manipulate the Wardens even more. I wondered if I wished myself back to Earth whether I'd end up back in this stupid cell when I returned. Knowing my luck, probably. \n\nI eventually fell asleep, and woke again an indeterminate amount of time later with a headache and a sore neck. I was hungry, but mostly thirsty, and there was no sign anyone had come or gone. \n\n\"Faren?\" I whispered. I couldn't have said why, but talking loudly just seemed wrong somehow. \n\n\"How you holding up?\" he replied. \n\n\"I'm thirsty. Will they come by with food or water soon?\" \n\n\"Possibly. Never can tell - it's pretty random. They seemed content to let me starve to death, but now that Leske's back they come by with food more often. I'm guessing he made a couple of friends among the guards.\" \n\n\"How long have you been down here?\" \n\n\"Honestly? I don't know. Lost track after a month, and that's since my unsuccessful escape. I don't know how long I'd been here before that.\" \n\n\"That's just...awful. I'm amazed you haven't weakened entirely.\" \n\n\"I exercise, as much as I can, when they feed me. Walk around my cell, do push-ups, that sort of thing. I don't think I've lost too much muscle. You should do it too, if you want to be able to walk when you get out of here. I just do it out of boredom.\" \n\n\"I would, but...well, I don't fit in here. I can't stand up, I can't lie down...\" \n\n\"Oh, right. That's a problem. Hey, you got friends on the outside, though, yeah?\" \n\n\"Yeah, some. Some have gone into the Deep Roads, though.\" \n\n\"Whatever for?\" \n\n\"Oh, ah...to find the Paragon.\" \n\n\"Branka? I heard she was crazy. She'd have to be, taking her entire house into the Deep Roads...\" \n\n\"Yeah, well, we need her to pick a King.\" I contemplated whether I should explain my unique situation to Faren. \"It's complicated.\" \n\nWe stopped talking at the sound of the door's hinges squealing. A dwarf came through carrying a tray with three bowls on it, and a large water skin. He handed us each a bowl gruffly, without saying a word, and then stood there staring while we ate. There was some sort of stew in the bowl, thick with a few unidentifiable floaty bits that might have been meat. I closed my eyes, steeled my resolve, and tipped it back; as a Warden, I needed to eat when I could, and I didn't think they'd bring me anything else if I asked. \n\nWhen all three of us had emptied our bowls, he went around and filled each one from his water skin before leaving the way he'd come in. I took as small a drink as I could talk myself into, and carefully put the bowl to the side where I wouldn't knock it over. I figured it might be the only water I'd get for a while, and I didn't want to end up desperate enough to lick the water running down the stone wall in my cell. \n\nI was starting to get cold, so I curled around myself in fetal position, pulling my arms into the sweater I wore, trying to conserve heat. I heard shuffling next door, and I guessed Faren was doing the same. \n\n\"Goodnight, Sierra,\" came his voice softly, and I replied the same. \n\n\"Goodnight, Leske,\" he whispered next. \n\nLeske grunted, and I smiled. What Jarvia had done was despicable, and I was happy to see that perhaps the dwarves' friendship would be mended. \n\nThe next day passed the same way; I alternated between sitting with my back to a wall and lying on my side in fetal position. I was getting a sore back from not being able to stretch out, and worried I'd be getting out of shape from too many days cooped up. I chatted a bit with Faren, telling him what little I knew about Rica, and surreptitiously sounding him out about Bhelen. He was surprisingly not opinionated about Bhelen - all he wanted was for Rica to be safe. If she could be safe with Harrowmont on the throne, he didn't care. \n\nAfter a while, we ran out of things to talk about. Faren was a nice guy, but he didn't want to talk about his life, and I wasn't going to risk explaining my bizarre origins in a dungeon cell where others could be listening. I dozed, on and off, when I could get comfortable enough. I was starving and thirsty again; the bowl of water hadn't lasted very long, and no one had come back to feed us or bring more water. The light was dim - only one flickering torch lit the dungeon - and still no sound penetrated the wooden door. After a while I started singing, anything I could think of to keep myself sane. I figured eventually I'd disappear, and then I'd just have to hope that when I reappeared I was somewhere safer. Like the Deep Roads, as an example. \n\nIt occurred to me that if I did disappear, it could get Faren and Leske killed. The Carta would assume I'd escaped, and that Leske and Faren would know where I went or how I got out; when they truthfully claimed to have no idea, they could be tortured or killed. I decided I needed to warn them. Not that it would do them any good, but at least they'd know I didn't do it on purpose or escape while leaving them behind... \n\n\"Faren?\" \n\n\"Yes?\" He sounded bored. Hardly a surprise... \n\n\"So...I have to tell you something. It's going to be confusing. And you completely won't believe me, but I'm going to tell you anyway.\" \n\n\"Um...okay?\" \n\n\"So I have this habit of...disappearing. I can't control it, before you ask, not really. It's some sort of magic that was cast on me at birth, though we don't know how or why, or even what sort of magic. When I do, I reappear sometime later, somewhere else. There's more to it, but it's even less believable than that, so I'll leave that out for now.\" \n\n\"Well, you're cracked, that's for sure.\" \n\n\"I'm aware that you'll think so, and from here there's nothing I can do to convince you.\" \n\n\"Why are you telling me this bat-shit crazy story?\" \n\n\"Because...I'm afraid of what Jarvia will do to you if I disappear. When the guards ask you, you won't be able to tell them where I went or how I got out. And to apologise in advance, if it happens. If I possibly can, I will come back with the Grey Wardens and try to free you. I promise I won't leave you in here if I get out.\" \n\n\"...Yeah, okay, whatever you say.\" The disbelief was clear, and I sighed. At least I tried. \n\nAfter another few hours of quietly, miserably curling up shivering in the cold stone dungeon cell, the massive door opened, revealing the same dwarf from the previous day. He took our old bowls, distributed new bowls of a thin, sort of grey, gruel that held some resemblance to porridge, if you squinted just right. Too hungry to complain too much, I gobbled it down before holding my bowl out for water. \n\nNow parched, I still tried to limit how much I drank to save some for later; I was getting close to giving in and trying to lick up the water from the back wall of the cell. The food kept me from feeling sick with hunger, but my stomach still growled to let me know it wasn't satisfied. Still miserable, I tried to sleep, only to be woken every hour with darkspawn nightmares. I apologised to Faren and Leske each time, but couldn't seem to stop the screaming. \n\nI gave up on sleep, sitting with my knees up, rocking slightly. I was getting paranoid - I'd expected to disappear already, not still be sitting and waiting. Just my luck - the time I'm stuck in Thedas is the time I'm in a dungeon. I was antsy from the stress and worry, and it felt like someone was watching me. Which was entirely impossible; the room was far too small for someone to hide, and Leske and Faren could no more see me than I could them. I put it off as claustrophobia, but it left me irritable. When Faren tried asking me about my nightmares, I snapped at him, and he stopped talking. \n\nWhen the heavy door creaked open again, I looked up, surprised. It wasn't time to be fed again - I hadn't even finished my water - but I saw a pale-faced, fearful dwarf scurry through the door and slam it shut. Faren tried asking what was going on, but the dwarf hissed \"Shut up, you fool!\" and refused to say anything else. When the door started to open again, the startled guard backed up; I saw a muscular, hairy arm reach out from Faren's cell and grab the back of his armour, yanking him back against the bars of the cell; a sickening crack, and the dwarf slumped to the floor. It reminded me rather violently of meeting Riordan, in game, in Howe's dungeon before the Landsmeet. \n\nThe door creaked shut again before it had fully opened, so there was no outcry. I heard shuffling as Faren searched the body, and then jingling; I assumed he'd found the keys. As I waited for him to try each of several keys in the lock to his cell, my paranoia escalated. I almost turned around to see who was staring at me, even though I knew no one would be there. It was giving me a bit of a headache, actually, almost like... \n\n\"Darkspawn?\" I wondered aloud. That doesn't make any sense. How would darkspawn get into the middle of Orzammar? But then I thought about it. \"Grey Wardens! Solona!\" I shouted. \n\nI heard Faren cursing at me to be quiet, but suddenly I knew what was happening that had the guard scared. Solona, and probably Leli and maybe even Morrigan, were coming to get me. \n\n\"My friends are out there. It's okay. We want them to find us!\" \n\n\"Another special power of yours?\" He snorted. \"Even if you're right, if someone in the Carta figures that out and comes in here to hold a blade to your throat, that's not going to help much, now is it?\" \n\nOh. \"Uh, right. Shutting up.\" \n\nFinally Faren got the door to his cell open and then came over to open mine. He was fairly handsome, I supposed, for a dwarf, with curly dark brown hair, what had been a well-groomed beard at some point, and a tattoo that gave him the appearance of a perpetual black eye. He gave me a sly grin, and overall it gave him quite a rakish sort of appearance. I grinned back, before he turned and set Leske free as well. \n\nI stepped out of my little cell, enjoying being able to stretch. The two dwarves shared a brief, awkward man-hug that I pretended not to see, and then Faren proceeded to search the guard's body. He had two swords, a table dagger, a handful of silver, and some armour that almost looked like it would fit Faren. Leske helped him strip the armour off the corpse and put it on; Leske himself was a little bit broader through the chest and shoulders, and would never have fit. \n\n\"Know how to fight, girl?\" Faren asked, holding a sword out in my direction. \n\n\"Sort of. I'm useless with a sword. I'll take the knife, though, if you don't need it, and you guys keep the swords.\" \n\nHe nodded; I felt immeasurably better with a weapon in my hand, even if it was a dirty table knife. \n\n\"Now what?\" I asked. \"Do we go out there?\" \n\nFaren thought about it. \"No, I don't think we should. We're not particularly well-equipped, and there could be guards or who knows what behind that door. I think we're best to wait. If your friends are out there,\" he sounded highly skeptical, and I grinned, \"they'll find us; if not, we can defend ourselves better from in here. I can bottle-neck them at the door, keep us from being overwhelmed.\" \n\nWe settled in to wait for a few minutes; the sounds of combat started to filter through the heavy door, and then there was the sound of booted feet running. I tucked myself behind the door, where I wouldn't be seen when someone entered; Faren and Leske ducked into my cell. Just in time - the door hinges squealed as someone entered, shouting over their shoulder in what I assumed was Dwarvish. \n\nHe stopped abruptly at the sight of the dead guard, and I took the opportunity to put my blade to his neck. He shouted in surprise, and Faren stepped out of the cell, already swinging his weapon. Behind him as I was, I stayed mostly clean, but both Leske and Faren were sprayed with blood as the guard's neck split open. His corpse dropped to the ground, and I jumped back in alarm. \n\nI strangled a screech, shooting Faren a dirty look; we didn't need to kill him. I sighed as he shrugged and turned back towards the door, which had swung partially shut in the chaos. I quickly stripped an extra dagger from the corpse, and Faren picked up the small shield he carried. Leske began stripping off the guard's armour, I assumed so he could don it himself. \n\nI could hear the clang of sword-fighting moving steadily closer, and I gripped my daggers; we were probably out of luck pretending we weren't free, so I prepared myself to leave the room and have to fight. Faren stood at my side, and we waited for Leske. But before the mute dwarf could finish dressing, I heard a deep voice echoing down the hall. It was clearly an angry voice, but the British, or rather, Fereldan accent was unmistakable. \n\nI darted past Faren and out the door, danger forgotten in my eagerness to get to the source of that voice. I heard Faren curse, the only word I caught being 'nug-humping', as he chased after me. I got a few feet down the hallway, when I came to an intersection; turning my head to the right, I saw the face I'd been wishing for, and dreaming of, for two days. \n\n\"Alistair!\" There was no one left standing in the hallway except my lover, Leliana, Zevran, and Morrigan; I dropped my daggers and ran towards them raggedly, tears streaming down my face. \n\nAlistair's smile could have blinded the unwary; he put out his arms just as I leaped, and caught me mid-air, crushing me to his chest. His shield, still on his arm, wrapped behind me as he held me. He was covered in gore and wearing full plate armour, and I hadn't bathed in two days; I didn't care. I wrapped my arms around his neck, squirming in delight as he pressed kisses to my face, over and over. I sobbed, and he kissed my tears away. \n\n\"What are you doing here? You're supposed to be in the Deep Roads.\" \n\n\"Rescuing you, you brat! I stayed behind with Zev-\" \n\nThe elf in question interrupted us. \"Perhaps this is not the time for explanations, yes? Carta to kill, and all that...\" \n\nI shook my head, and Alistair lowered me to the ground. \"Right. Of course. Catch up later.\" I turned to hug Leli and Zev, and even Morrigan returned my embrace. I took Alistair's water skin, taking a long drink. \"I don't suppose you brought my amour?\" \n\nAlistair gestured to a pack slung over his shoulder, and I pulled him down for a fierce kiss. \"I love you.\" \n\nI turned to find Faren and Leske, now both in armour, fully armed, watching with curious gazes. \"Right. Faren, Leske, this is Alistair, Leliana, Morrigan, and Zevran. Guys, Faren and Leske. Leske doesn't talk much. They're coming with us, okay? Now make nice while I change.\" ",
        "If Faren was surprised by me giving orders to our rescuers, he didn't say anything, but his eyebrows rose slightly. Leliana accompanied me and helped me gear up. I was shocked at how reassured I felt just wearing my armour and having my own two blades back in my hands. I gave Leli another quick hug, and then we jogged back out into the hallway. No one had moved in our absence, and the men were just staring at each other awkwardly. \n\n\"So...have you all found Jarvia yet?\" \n\nZev shook his head. \"What is a Jarvia?\" \n\nFaren answered, \"Leader of the Carta. Dwarva. Nasty piece of work. Will kill us if she escapes this.\" \n\nAlistair pressed one more kiss to my forehead before re-equipping his shield properly and gripping his sword. \"Let's go make friends.\" \n\nChapter Seventy-Eight: Operation Rescue \n\nI followed Alistair and Zev through the warren of tunnels in the hideout. Unsurprisingly, everyone was equally annoyed at the height of the ceilings through most of the hallways, and we all shuffled along in a half-crouch, much to Faren's amusement. We fought through a couple of groups of guards as we searched for Jarvia, but fortunately most of the rooms had higher ceilings, so we weren't hampered when fighting. During the first fight, Alistair tried to keep me out of it; I gave him a dirty look, and he shrugged apologetically. \n\nI wasn't enjoying fighting and killing the dwarves - most of whom, I knew, were there out of necessity, because there was no other way to survive as a casteless, not out of personal loyalty to Jarvia - but I'd come to a couple of hard truths while I sat in that dungeon cell, and I wasn't going to stand back anymore and let the group make the hard sacrifices. I killed my first person - a balding, middle-aged dwarf who smelled strongly of ginger, of all things - and while I felt like throwing up, I didn't let it slow me down. \n\nWith seven of us, it didn't take long to work our way through the hideout. More and more of the dwarves we came across started surrendering when we walked through the doors, covered in their friends' blood and armed to the teeth; Alistair had Zev tying them up with scavenged ropes and torn strips of linen from their own tunics, promising to come back for them once we were done. We couldn't risk them coming behind us as we fought Jarvia. \n\nWe finally came to a door that was by far more ornate than any other we'd seen; with some quick charades with Leske, we confirmed that this was the likely place Jarvia would be. It wasn't the door to the office I'd met her in before. \n\n\"Look, if the game's anything to go by, there's probably ten or so dwarves in there, including Jarvia. There's going to be a lot of traps.\" Faren gave me a funny look, and I just waved him off. Not the time. \n\n\"It's a good thing you brought me, then, yes?\" Zev smirked, and I grinned. \"I'll go in right behind Alistair and deal with the traps. Just don't move much until I tell you it's safe.\" \n\nAlistair nodded. \"Faren? Leske? Could you two focus on keeping attention off Zevran? Morrigan, Leliana, take out any archers. Sierra, rear guard in case we missed any reinforcements, okay?\" \n\nWe all nodded our agreement and braced ourselves for a nasty fight. We weren't disappointed. Alistair opened the door with the expedient of a booted foot; the splintering pieces flew into the room and knocked over a nearby dwarf, who screamed as he fell. Zev entered right on Alistair's heels and ducked down, scooting over to disarm a tripwire so obvious even I noticed it. Alistair didn't wait to talk before taking a swing at the nearest dwarf, and several more came charging towards us when it became apparent we weren't coming further in. \n\nLeliana began picking off targets, while Morrigan had half of the dwarves we could see screaming, dropping their weapons, and scratching at their own eyes. I wondered if she'd been working with Solona, because I hadn't seen quite that level of creepiness from her before. Faren and Leske were fighting side-by-side with a couple of dwarves, and after a few moments, Zevran joined them when he was convinced we had some room to move, but still shouted a warning against venturing further in. \n\nI felt quite useless; we had very little space, and all around me were people fighting, but I couldn't even reach the front lines, never mind fight. There weren't any mages, except Morrigan, and I didn't think she'd thank me if I started using her mana for shields, so all I could do was wait. \n\nI'd heard Jarvia's gravelly voice when we initially entered, but hadn't managed to lay eyes on her; I knew she was supposed to be good at stealth, and it made me nervous. I saw some movement off to my left and realised a bald male dwarf was trying to creep towards Leliana, who was distracted raining arrows down on the other side of the room. I pushed past her and met the dwarf's swing with my crossed blades, deflecting the sword back towards himself. Unbalanced, he tried to recover, but I was faster. Mentally thanking Sten and Duncan for their training, I angled one dagger into the armpit of his chain armour, while the other ostentatiously went for his neck. He blocked at the neck, but the other dagger bit in deep. I twisted it, as Zevran had taught me, and then pushed him away, certain that he was dying. He stumbled a few steps, dropped his sword, and collapsed, a pool of red forming underneath him. \n\nI swallowed thickly, still not used to such things, but fortunately the nausea I knew would come hadn't hit me yet. Leliana and Morrigan had disabled or killed the archers we could see, and Alistair and Faren finished off the last of Jarvia's henchmen. I turned around just in time to see Jarvia appear behind Faren, sword at the ready. There was no time, and I knew it, but still I tried to shout out a warning. Faren turned - slowly, so slowly - his expression one of surprise and horror, and tried to bring up his shield. Jarvia sneered and raised the sword, and I cried out again, only to see Faren go flying before Jarvia's swing could land. Suddenly Leske was between the two dwarves, and I saw Jarvia's sword find a target. \n\nThe borrowed armour Leske had stolen hadn't fit well, and her blade struck deep into his shoulder. I heard a mangled scream come out of his damaged mouth, and he fell. Before she could even withdraw her blade from his flesh, Alistair and Zevran were on Jarvia. She was fast, I had to admit, and dropped a smoke bomb at her feet. She disappeared from view, leaving the sword behind, and Alistair and Zev turned back to back, trying to find her in the hazy smoke. I felt Morrigan's magic as a wind whipped up in the small room, clearing it, and then with a clang, the Carta leader had re-engaged with Alistair and Zevran. \n\nFaren climbed to his feet, only to drop to his knees at Leske's side. I rushed over, knowing there wasn't much I could do. Morrigan knew a little bit of healing, but it was obvious it wouldn't be enough. I wasn't even sure Wynne or Anders could have done anything. The sword had cleaved through his collarbone, and his head fell to the side at an awkward angle. His breathing was shallow, and blood was trickling out of one corner of his ruined mouth and sheeting down his chest. His eyes were open and roving, and I wasn't sure whether he was really seeing anything. \n\nFaren pulled his upper body awkwardly onto his lap, cradling Leske's head. Tears were streaming down Faren's face, dropping down onto Leske's braided cornrows. I took Leske's hand, and when his eyes seemed to focus on me, I whispered to him. \n\n\"You did good, Leske. You saved him. Saved them both. Rica would be so proud of you.\" \n\nHis lips quirked up in a small smile, and then he slumped, muscles going slack, one last shuddering breath leaving him. I reached up to close his eyes gently, and then put my hand on Faren's shoulder. He pushed me away, suddenly surging to his feet, Leske's body dropping to the floor with a wet thud. Faren must have lost his sword and shield when Leske knocked him over, so he grabbed Leske's sword. \n\nI looked up to see Alistair and Zevran flanking Jarvia. She appeared to be an even match for either man alone, but with both of them attacking her, she could barely keep up a good defense, and she was tiring. When she dropped another smoke bomb, Faren was ready; he charged towards where he thought she'd be, catching a tripwire and setting off a small explosion of grease. Somehow, despite the slippery coating, Faren kept to his feet and tackled Jarvia. She dropped her last sword as she fell, and Faren landed squarely on top, his sword across her neck. \n\nHe leaned down to say something - I couldn't hear what - but her eyes widened just before he slowly, deeply, cut her throat. \n\nHe stood up, dropping the borrowed sword, and strode from the room. The rest of us, exchanging sad glances, surveyed the wreckage. Zev and Alistair were coated in yet more gore and a good helping of grease; it was fortunate that none of the fire traps had gone off, and that Morrigan hadn't been throwing fireballs. The room was covered in blood, and there were bodies everywhere. I turned away from the corpse of the dwarf I'd killed. I swallowed thickly; the nausea had caught up, and I struggled not to vomit. \n\nMorrigan, Leli, and Zev began efficiently stripping the bodies of valuables, while Alistair and I explored the room. We found some papers, many of which were written in a language I couldn't read and assumed it was dwarven. We took them, and continued looking, finding a small chest that was locked, and an armoire full of healing potions, runes, equipment, and raw Lyrium. We gathered all of it, stuffing it into the backpack Alistair had carried my armour in, as well as a fancy sword that had belonged to Jarvia. The rest of the dwarves had precious little coin, and no equipment of worth. \n\nWhen we left the room, we found Faren standing outside, his face an expressionless mask. The only sign of his previous grief were twin tear tracks in the dirt on his face. He must have picked up his sword and shield and re-equipped them; he seemed to be waiting patiently. I approached him sympathetically, planning to hug him. He held up one hand, and I took the hint - not now. \n\n\"What should we do with...with,\" I gulped, looking around for inspiration, \"the body?\" I finished in a whisper. \n\nFaren's face flickered through a few emotions I couldn't place, before settling back to his mask. \"Doesn't matter. The stone won't take us Dusters anyway. Leave it there for the guard to deal with.\" \n\nHe turned and headed down the hall we hadn't come from. I exchanged looks with Alistair, and we turned to follow him, everyone else falling in behind. We came across a couple more rooms, all of which appeared to have been hastily abandoned. Apparently word of our victory had spread. When we reached a door I guessed would bring us out into a merchant's shop in the Orzammar Commons, Zev and Leliana split to go back the way we'd come, releasing the tied-up dwarves who'd surrendered earlier. Morrigan, Alistair, Faren, and I pushed into the shop, surprising a middle-aged dwarf who immediately began cursing us out. \n\nWe ignored him and left the shop; Faren's glare shut him up nicely. We hadn't made it far across the commons when we were approached by some of the guard. \n\n\"You there!\" We stopped and waited. \"What are you doing, breaking into Janar's, covered in gore? And you,\" the guard gave Faren a dirty look. \"You're that brand who dishonoured the Proving! You were supposed to have been executed!\" \n\nWordlessly, Alistair and I flanked the dwarf, and I put my hand on his shoulder to stop him before he could respond. \"Good sers, you should be thanking this man, not arresting him. He was only in the Proving because the old Carta leader, Beraht, threatened his family. And you have him to thank for the deaths both of Beraht himself, but also Jarvia, his second who's been leading the Carta since Beraht's untimely demise. The Carta is no more, thanks to Faren Brosca.\" I pitched my voice loud enough to carry, and several of the passing dwarves stopped to listen. \"It will be you who dishonours your ancestors if you arrest this man who accomplished what the entire guard failed to do.\" \n\nThere was muttering from the crowd, and the guards looked a little nervous. Despite that, the leader gestured to Faren, and one of his men stepped up to grab Faren's arm. I caught Alistair's eye, and distinctly nodded. He gave me a look, as if to say 'are you serious?' I nodded again, and he sighed and turned back. \n\n\"I am Alistair, second in command to Duncan, the Grey Warden Commander, and on his authority, I invoke the Right of Conscription on Faren Brosca.\" \n\nThere was much sputtering from the guard, but there was nothing they could do. They reluctantly stepped back, and walked away. I turned to Faren, whose shoulder my hand was still resting on. \n\n\"Sorry, Faren. I didn't want to force this on you, but it was the only way to keep you from the noose. Or headsman's axe. Or however they brutally murder those they consider criminals...\" \n\nHis expression was more severe than before, no longer emotionless, but seething with repressed anger. \"You have some explaining to do, I believe.\" \n\nI winced, and Alistair came around to jut one shoulder in between Faren and me. I put my hand on my warrior's back reassuringly. \"I know I do, but this isn't the place, alright? Come back to the Grey Warden compound and I promise to tell you everything. After a meal and a bath, that is. For each of us.\" \n\nReluctantly he agreed; just as we turned to head to the Diamond Quarter, Zev and Leli caught up to us. Zev gave me a nod, and I knew they'd safely released the casteless dwarves back to Dust Town. I hoped that we could find Sereda, and that when we did, she'd be kind - there were a lot of casteless suddenly without the means to support themselves. \n\nWe passed by the long bridge leading to the Proving grounds, and I looked over to see Solona slipping out of the great doors leading inside. We paused to wait for her, and she walked up beside Alistair with a nod. \n\n\"Done?\" he asked. \n\nShe nodded. \"They'll find him tomorrow, probably, no harm done.\" \n\nI was confused, but like everything else since I'd been rescued, it wasn't the time or place for the discussion. The further I got from the Carta's hideout, the more adrenaline I burned off, the more my guard dropped, and the repressed fear was raising its ugly head. I shrank down a little, tucking myself in against Alistair's side, reaching out to grip his gauntleted hand. He squeezed, and then realising I needed something more, wrapped his arm around my shoulders. I was shaking like a leaf by the time we reached the compound, and everyone was looking at me in concern, even Faren. \n\nAs soon as we were through the doors to the compound, Alistair reached down and lifted me into his arms; I couldn't even bring myself to be irritated, just wrapping my arms around his neck and tucking my face into the cold, impersonal surface of his armour. He carried me through the main hall, past Mistress Leta, down the hall, and into the nearest bathing room. I could hear low voices, probably someone explaining to Mistress Leta what was going on, as Alistair kicked the door shut behind us. \n\nHe set me on my feet, but kept an arm wrapped tightly around me, and slapped his free hand against the rune in the massive tub to start the water. When he finally stared down at me, his face looked so concerned, so sympathetic, that my control broke, and I started sobbing. I opened my mouth to try to explain, to reassure him, but he silenced me with his lips. \n\nWithout ever letting me go completely, Alistair managed to strip both of us down. I was no help; between the tremor in my hands, the trembling in my lips, and the difficulty I had breathing while crying and kissing at the same time, it was all I could do to hang on to him for dear life. He didn't seem to expect anything different, just methodically stripped off armour, then clothes, then underclothes, with infinite patience. By the time we were both naked, the tub was half full; Alistair lifted me up again and stepped into the tub, settling me in his lap as we both sank into the hot water. \n\nAlistair washed me, while I still clung to him; his touch was therapeutic, bringing me back every time I started to think too hard about my brief captivity, and each place that he scrubbed gently with a washcloth and lavender-scented soap finally began to relax and tingle. He washed my hair, softly massaging my scalp with the sweet-smelling shampoo, before helping me lay back and rinse. \n\nOnce I was clean, he moved to start on himself; taking the cloth away from him, I returned the favour despite my shaky hands. His steady presence, kind smile, and constant touches grounded me like nothing else, and my shaking finally stopped around the time I was finished washing his hair. \n\nStill without a word, he gathered me up and stood; I was struck yet again by his amazing strength. He stepped out of the bath, then put me down and grabbed a towel to wrap around me. A second towel gently rubbed excess moisture from his gorgeous hair and chest before wrapping around his own waist. I whined as he covered up, and he grinned at me briefly. \n\n\"Soon enough, love. I promise. But we need to meet everyone in the hall for explanations,\" I winced, thinking of Faren, \"and we need to eat. And then, if you're good...\" He leaned in and flicked his tongue along the shell of my ear, his breath on my neck raising goosebumps, leaving the rest unspoken, and I shivered. \n\nI don't know how I'm going to get through the 'explanations' when Alistair touching me is the only thing that keeps me sane... \n\nMistress Leta had proved her worth many time since we'd come to Orzammar, but finding a full set of casual clothing for each of us just outside the bathing chamber's door just cemented that fact. I quickly pulled a light peasant dress over my head, without bra or panties - Alistair's eyebrows rose and his gaze darkened, but he said nothing - and ran a comb through my hair before braiding it back. Alistair pulled on a well-worn tunic and trousers, which fit him like a second skin, making my mouth water. He chuckled at the expression on my face, kissed me all-too-briefly, and then wrapped his arm around my shoulders to drag me to the main hall. \n\nEveryone was waiting for us. Faren had evidently refused to get cleaned up, and had somehow braved Mistress Leta's glare for it; everyone else had at least changed and rinsed the worst of the gore off. I foresaw the bathing rooms getting a lot of use over the next few hours. \n\nFaren stood awkwardly, posture tense, reminding me a bit of a porcupine with his bristles up. Everyone else lounged or sat at the table we usually sat at to eat. Mistress Leta, between staring daggers at Faren's filthy armour, bustled in and out carrying heavy platters. The smell was heavenly, and my stomach immediately started to rumble. I didn't know how Faren was resisting - he'd been starved for a lot longer than I had. \n\nAlistair dragged me over to the table and sat me in his lap, which made me blush and Leliana giggle. We grabbed plates and started loading them with the first things we could reach. I drained my water glass, still thirsty after captivity, and refilled it again before I started stuffing my face. It was difficult for both Alistair and I to eat, with me in his lap, but neither of us was willing to change our seating arrangements. We ended up eating off the same plate, feeding each other bites as well as ourselves. \n\nLeli, Solona, Zev, and Morrigan sat and started eating as well; Faren continued standing, hands clenched at his sides, jaw muscles twitching in agitation. I sighed. \n\n\"Faren, please come sit? You can shout at me later, or whatever you need to do, but I know you've got to be hungry and thirsty. At least you can get a good meal out of it, before you rip my head off? Please?\" ",
        "He must have realised how silly, and ultimately futile, standing in the hallway was going to be when everyone else was sitting on the far side of the room eating. He wants answers, and he'll get them, not that he'll believe them, but not until the wild animal currently living in my mid-section is fed. And I knew he'd barely eaten for probably months; he needed the food. \n\nHe sat at the far end of the table, accepting platters as they were passed, but avoiding eye contact and saying nothing. He exuded an aura like a caged tiger - I figured he'd be pacing if he hadn't been forced to sit. I sighed again, wondering if the easy camaraderie we'd shared when captive would recover. Even if he'd thought I was crazy... \n\nLeliana, Morrigan, and Zev, the non-wardens, finished their meals first; Solona, Alistair, and I were still gobbling down food as fast as we could, and Faren was doing something similar. Solona cautioned him to slow down lest he make himself sick. \n\nLeliana cleared her throat. \"Since you're still eating, perhaps I can tell you what happened from our perspective, and then you can return the favour when you're done?\" \n\nI nodded and gestured with my fork, and even Morrigan laughed. \n\n\"We woke up yesterday morning to find you gone, and your amulet left behind. Worried where you would end up, Duncan elected to take some of the group into Aeducan Thaig, and come back for the rest afterwards. So Aedan took your spare armour, and they went. Aedan was not happy leaving you, which is why Zev stayed.\" \n\nI wrinkled my brow in confusion, after shooting Zev a grateful smile. \n\nLeliana seemed to understand. \"Oh, why Aeducan Thaig?\" \n\nI nodded. \n\n\"Gorim felt it was possible that Sereda might be hiding out there, since it was recently cleared of darkspawn, and it is close to some of the Legion's supply depots. You'd also mentioned the nobleman - Lord Dace? - and Duncan thought a rescue might be welcome, and help us gain some allies, even if we didn't support Bhelen. They should be back tomorrow or the next day.\" \n\nMade sense. Smart, that Duncan. I nodded again. \n\n\"We thought you would be back, and weren't too worried, until a messenger came with this,\" Leliana produced my phone charger out of a pocket somewhere, \"and a letter addressed to Solona. It said that the Carta had you, and that if we wished for you to remain breathing, Solona would accompany one of the Carta members into the Proving Grounds today and help him with an 'errand'; if she did not agree...well, I'm sure you were given similar threats.\" \n\nI swallowed and nodded, heart rate speeding up as I thought about my traumatic introduction to Jarvia. Alistair paused in his eating to kiss my cheek and tighten an arm around me. \n\n\"Fortunately, it would seem the Carta did not count well, and they believed Solona to be the only Warden remaining in Orzammar. So we decided to send Solona with the lone dwarf and mount a rescue. The letter from the Carta didn't leave much hope you'd ever be returned, and who knew what they might ask for in return for your continued safety?\" \n\nLeliana grinned. \"So we waited patiently,\" Zev snickered and Alistair blushed at the obvious lie, \"until the dwarf came to meet up with Solona, and then we went to Dust Town, found some Carta members and 'convinced' them to let us in to the hideout, and the rest you know, yes?\" \n\nSolona spoke when we had all nodded. \"The dwarf I was escorting was an assassin, I think. I'm still not clear on the details, but he wanted to get into the dressing room of a particular fighter and wait for him there. I paralysed him, put him in a stasis spell, tied him up, and shoved him into an equipment trunk. I'm sure someone will find him before the stasis spell wears off. I wasn't about to kill some fighter to fix a stupid bet or whatever, but it wasn't that poor idiot's fault either.\" \n\nI smiled gratefully, finally feeling full. \"Thanks. I was worried about what they'd have you doing on their behalf. I didn't want the Wardens' reputation ruined in Orzammar over this!\" \n\n\"So, Bellissima, tell us about your adventures? I am most curious.\" Zev's smile didn't reach his eyes, and he looked rather...assassin-y. If Jarvia hadn't already been dead, I thought she'd probably have been frightened by that expression. \n\nI swallowed. \"Woke up in a disgusting back alley in Dust Town. Some old reprobate sold me to the Carta to pay off his debt. Jarvia demanded something I could give to prove my identity,\" I shuddered, and Alistair's arms tightened instinctively, \"and then locked me in the dungeon with Faren and Leske.\" \n\n\"How did you get out of the cell, cara mia?\" I could see the suspicious look aimed at Faren now. \n\n\"When you guys attacked, one of the guards panicked and came too close. Faren was able to grab him and kill him, and get the keys. Which reminds me.\" I turned to Alistair. \"Did you guys talk to Lyrium smugglers at some point when you were in the Circle Tower?\" \n\nLooking confused, he nodded. \"Some mage - you'd told Aedan about him - was involved in smuggling Lyrium to addicted templars. Aedan threatened him to within an inch of his life.\" \n\n\"I guess it worked - I think that's how Faren escaped to kill Beraht.\" I smiled grimly. \"Couldn't have happened to a nicer guy. Anyway, Faren, Leske and I were debating what to do next when I heard your voice.\" I buried my face in Alistair's neck. \"I have never been so happy to see anyone, ever.\" \n\nHe could surely feel my tears as they ran down my face. Solona reached out to touch my shoulder. \"What aren't you telling us? Did they hurt you?\" \n\nI wiped my face with the back of my hand and shivered. \"No, no. Threatened, is all. They were going to cut off my finger to send to you as proof of life.\" \n\nAlistair clasped my hand protectively, and I squeezed appreciatively. \"I tried to will myself back, but it didn't work. It's always worked before! Now I'm afraid I'll end up going back again tomorrow.\" \n\nFaren, visibly frustrated with the conversation, finally cut in. \"What are you talking about, going back? And what did you mean when you said in the dungeon that you could disappear? You know a lot about what's going on, and I want to know how.\" \n\nHis hands were clenching, the muscles in his neck and jaw tight. His face was a bit red, his eyes bloodshot; overall he looked quite frightening. I couldn't begrudge him his anger, though it made me recoil into Alistair's chest. I felt Alistair tense underneath me, and patted his arm to prevent him from shouting back at Faren. \n\nI debated where to start. \"I will explain everything, I promise. I am...\" I trailed off, suddenly exhausted. I just wasn't sure I could tell the story another time, and when feeling so vulnerable, to boot. I'm sick of having to prove I'm not crazy. \n\nLeliana rescued me. \"Why don't Solona, Zev, and I fill Faren in? We can tell him about your...situation, yes? And you can answer questions in the morning. I think Alistair should take you to bed so you can get some rest, tonight, don't you?\" \n\nFaren nodded, reluctantly; he was obviously angry, but even he could see I just didn't have it in me. Alistair grabbed a tray of bread and cheese leftovers, handed it to me, and then scooped me into his arms again as he took me back to our room."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-77-78"
}