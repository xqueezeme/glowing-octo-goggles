{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 08",
    "pages": [
        "My thanks to all who have sent e-mails concerning the delay between chapters. It's very flattering to know that new installments are awaited so anxiously. My apologies to all for the delay between chapters, but life has been hectic recently and spare moments have more often been spent outside than in front of the keyboard.\n\nStandard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n*\n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental.\n\n*****\n\nCricket slept well after her second orgasm of the night and the house was still quiet when habit awoke her at dawn the next morning. She lingered in bed, parting her legs and idly running a finger over the wisps of hair on her cleft while mulling over the events of the previous evening. The anticipation and then the sounds of Tim and Gwen making love had inflamed her arousal to a point where good decision-making had become difficult; the door they had left open to make listening in more convenient had made it impossible. What they did not know, and what was nagging at her now, was that the open door had allowed her to watch as well. She had not seen that much, really, she reasoned, and her imagination had been busy filling in details, but she had seen enough to know it was certainly something she should not have witnessed. The young woman struggled between vows to never do it again and ways to improve her view the next time. \n\nShe could hear stirrings in the bedroom at the end of the hall and hurried to dress, intent on being the first out to the barn and chores. The young house guest was about to step onto the deck and into her muck boots when Gwen made her way into the kitchen dressed in nothing but a t-shirt that ended high up her thighs, and Cricket was thankful her friend's lack of appropriate barnwear meant she would have a head start on turning out the horses. \n\n\"I appreciate your enthusiasm, but they can wait a little. It's barely light out there,\" Gwen told her as she opened the refrigerator to retrieve bacon from the bottom drawer, her makeshift nightshirt riding up and confirming she had not bothered with underwear. \"Did you sleep alright?\" \n\n\"I did,\" Cricket replied. She glanced in the direction of the hallway and lowered her voice. \"I usually do when I, uhh, get all relaxed like that.\"\n\nGwen chuckled. \"I know what you mean. But you could have slept in, you know. The horses will wait.\"\n\n\"Yes, but you won't. You always seem to get out there first. When I'm here that should be my job-you have to do it all during the week; on weekends it's you who should be sleeping in, not me.\"\n\n\"Habits are hard to break and putting out a little extra feed and hay is not that difficult. He's really a very easy horse to care for.\"\n\n\"Yes, but you're also footing the bill for that extra feed and hay. Until I can pay you two back I insist on using manual labor to keep up with the accruing interest. I can only imagine what you have to do to keep Tim from getting fed up with all the extra bother and expense and putting me and Marvin out on the street.\" \n\nGwen turned around, a curious look on her face. \"Tim is very happy to have you both here and is certainly not fed up. Why would I have to do anything to make sure he's not?\"\n\nCricket hesitated, unsure how to explain how the unpleasant act her friend had performed on her husband must have been some sort of appeasement offering. \"Well, I, uhh, just\u2014\"she was thankful for the sound of Tim's stockinged feet shuffling down the hallway. Gwen gave the young woman another inquisitive look before sidling up to her husband for a hug. Cricket smiled and pretended to concentrate on her boots just enough to seem polite as his hand briefly strayed to the bare bottom beneath the shirt and squeezed. \n\nBreakfast was a hurried affair. Tim anxious to be on his way out to the lake for a day of fishing. The women were in only slightly less of a rush to be in the saddle and were on their way up the trail forty five minutes after his truck had disappeared down the driveway. Marvin made his displeasure known at being left behind to recuperate from his cut, his snorts and bellows clearly audible for some time as the riders followed the winding path up the hillside. \n\n\"Sorry, I never realized how much noise he could make,\" Cricket said apologetically. \"Hope no one complains.\"\n\n\"Everything sounds louder in the early morning. It's the country,\" Gwen replied patiently. \"We can hear the neighbors way down the road shooting some times, and the noise from their 4th of July party carries all the way up to our house. They'll be fine\u2014they probably can't even hear him.\" She smiled at her young companion. \"Things seem louder in a quiet house, too. I hope Tim and I weren't too noisy last night?\" \n\nCricket blushed and studied Dancer's neck. \"No, not at all. And uhh, thank you, for uhh, helping me out after.\" \n\n\"You're welcome, but thank Tim\u2014he's the one who suggested it.\"\n\nThe young woman's blush deepened. \"I can't believe he did that!\" \n\nGwen continued to smile. \"You know he likes the idea of me, umm, helping you. He was, well, very happy to see me when I came back\u2014he seemed very concerned that you had everything you needed.\" \n\nCricket giggled. \"I guess you told him I had been very well taken care of. Sorry, I went to the bathroom after and heard you two, uhh, doing it again. I never knew men could, umm, be ready to go again so quickly!\"\n\n\"I know it sounds terrible, but he probably got all worked up thinking about what you and I were doing while he was waiting for me...I'm finding out he's got a very active imagination...I hope that doesn't sound too creepy.\"\n\n\"Not really. Having you come visit was very exciting for me, so why not him? Listen Gwen, I have a confession to make...\" The older woman looked over expectantly as Dart continued to pick his way forward. \"I, uhh, well, your door was open kind of wide, and uhh, well, I saw you and Tim in the mirror...\" Cricket panicked at the sight of the older woman's raised eyebrows and the words began to tumble out. \"But just the first time, not the second, I wasn't even trying to look, I swear! I'm sorry\u2014I really didn't see much\u2014the angle was bad\u2014I'm really sorry! I know it was a very rude thing to do but I couldn't help it! It's bad enough that I was listening in, but now I'm a peeping Tom, too! You deserve at least a little privacy in your own house! I'm really, really sorry!\"\n\n\"Cricket, relax\u2014breathe, you're spooking Dancer,\" Gwen said with a gentle smile. \"It's alright. I'm glad you told me. And since we're being honest with each other\u2014I knew you were watching. At least, I thought you were. I saw you in the mirror and I figured if I could see you then you could see us.\"\n\nThe young woman's expression changed from panic to surprise. \"You saw me?\"\n\n\"Uh-huh. I'm sorry it wasn't something worth seeing\u2014I would think watching two old naked people grind up against each other would have made you run away in disgust.\"\n\n\"Stop that! You aren't old and you're both very attractive, even naked, especially naked! I thought it was beautiful, and sexy, and-\" she hesitated, trying to regain some control, then quietly added, \"At least, what little I saw. Like I said, I really couldn't see much anyways, just the tops of you and only when you were lying on your side. But what I saw was not disgusting! My perversions are, though.\"\n\nGwen smiled and looked down at the neck of her own mount. \"I think we all have our little perversions. I know I do. It's taken me a long time to admit that. But I also have to admit I've grown to like them in a very weird way. I know this will sound really bad and really conceited, but I, uhh, in case you haven't guessed, I like to be heard AND seen sometimes. But only by people who want to hear and see! You were looking last night, so I let you watch and I even showed off a little. How's that for perverted?\" \n\nCricket smiled back. \"Sounds like our perversions are a good match for each other. How long did you know I was out there?\"\n\n\"I saw you when I, umm, went to return the favor after Tim took care of me. I saw your face, and it looked like your shoulders were bare, so I guess you weren't wearing a top, right?\"\n\nCricket shrugged. \"Worse than that. I wasn't wearing bottoms, either. Sorry.\"\n\nGwen laughed. \"Really? You were completely naked? That's so exciting! I'm impressed.\" \n\nThe young woman shrugged again as her cheeks flushed crimson. \"So you, ahh, saw me and you, uhh, still did\u2014that-for him?\" Her eyes glanced down meaningfully to where her crotch straddled leather. \"You put your mouth on it, right? I saw you put your face near his, uhh, down there, but I couldn't see anything after. I just heard Tim and it sounded like he really liked whatever you were doing.\" \n\n\"Yes, that's what I did and yes it does seem like he really likes it. Don't you like it when I do that to you?\"\n\nCricket giggled nervously. \"I love it. And I love doing that to you,\" she added quickly. \"But is it the same for you with Tim? Do you like doing that for him, I mean? I've never any woman say they actually like doing that. I guess if you love someone enough, or owe them enough...\"\n\nGwen laughed. \"Up until not too long ago I would never even have imagined putting that thing in my mouth! But, I guess my imagination got wilder, I tried it and yes, I really like doing it... I think I'm getting better with practice. It's hard to explain, but I get this feeling of being slutty, doing something I'm not supposed to be doing\u2014what would our customers, our employees think if they knew I did that! I like the feeling of control I get, and that's all mixed up with knowing how appreciative Tim is. You'll see what I mean some day.\"\n\nCricket shook her head and giggled. \"I doubt it. It's probably going to be a long while before I even get close to one and sorry, I can't imagine actually liking it...but if whoever ends up with me likes it that much, then I'll suffer through it and do it for him. Did you, uhh, well, I guess he finished while you were down there?\" \n\nGwen smiled and glanced sideways. \"Mm-hmm.\"\n\n\"I know it's really rude to ask, but you used your hand to get him to finish, right? Not your mouth?\"\n\nIt was Gwen's turn to blush. \"No, I left it right where it was. It makes me feel even sluttier.\" \n\n\"Wow! I didn't hear you gag or spit or anything!\"\n\n\"I did gag a little the first couple of times I did that. But now that I know what to expect, I just hold on to it until he's done then I swallow it. That drives him crazy.\" The Slut purred wickedly.\n\n\"Oh my God! Really? Now I'm impressed! I always heard that stuff tastes terrible!\"\n\n\"I can't say I'd rather have that over a piece of chocolate or a bowl of ice cream, but I've gotten used to it in small doses. Natalie says you can make it taste better by having a man drink fruit juice, so that's why I'm always after Tim to finish his OJ at breakfast.\"\n\n\"Wait,\" Cricket interrupted, \"Natalie? You mean Natalie your sister-in-law?\" \n\nGwen cursed herself, afraid she might have let her secret slip while the Lady broke into her vindication dance. \"Uhh, yes, her, she's a nurse so that's probably how she knows that.\"\n\n\"You talk to your sister-in-law about sex\u2014oral sex? If I talked to Daniel's sisters about that, first they would have called me a whore and then they would have assumed I wasn't getting pregnant because I was too stupid to know where my husband's blessed offering was supposed to go! Is your whole family that, umm, open, with each other?\"\n\n\"You've met my parents,\" Gwen deadpanned. \"No, Currans are not supposed to have those thoughts and we definitely do not discuss them. Ever. Luckily, Natalie is not a Curran by birth, so she's somebody I can talk to about things like that.\"\n\nCricket lowered her voice. \"Have you ever talked to her about your friend...or me?\" \n\nGwen looked over. \"Uh-huh. She knows about you and me\u2014I mean, my friend and you and me\u2014you know what I mean. I hope that's alright. I trust her very much. Besides, well, she has the same type of, umm, relationship with some of her friends.\"\n\nCricket shook her head. \"I'm actually flattered you would admit, uhh, you and me, to anyone. I had never heard of anyone being, uhh, being friends the way we are, but it sounds like it's more common than I thought. Guess I'm still pretty na\u00efve. Everybody has secrets, I guess.\"\n\n\"You just have some catching up to do. I'm finding out there are a lot of things that go on behind closed doors.\"\n\nThe young woman smiled. \"Or half-open ones.\"\n\n***\n\nMarvin heard them returning well before they were in sight of the barn and resumed voicing his displeasure with his rider's betrayal. The young woman stayed behind to offer her apologies and Gwen climbed the hill to the pool alone after a stop at the house to strip down and grab towels. \n\nCricket followed along soon after, pleased to see Gwen had not chosen this day to wear a suit. \"When do you think Tim will be back?\" \n\n\"Probably not to until later this afternoon,\" Gwen replied, lazily backstroking away from where her still-clothed friend stood by the pool's edge. \"He usually wants to get his money's worth if he goes through the trouble of putting the boat in.\"\n\nThe young woman needed no further convincing and hurried out of her sweat-stained riding clothes. They relaxed in the cool water for some time, taking turns on the pool raft to dry and warm a bit before immersing themselves again. \n\n\"Tim was worried that you might have gotten the wrong impression about, umm, what you might have seen when we were up here yesterday,\" Gwen casually announced as she heaved herself on to the float. \n\n\"I was trying not to look,\" Cricket defensively reminded the older woman. \"What was he afraid that I might have gotten the wrong impression about?\"\n\n\"Certain things...male parts...sometimes shrink in cold water,\" Gwen said, slipping into her instructor voice. \"And pool water can be cold, so...I think men are very concerned about their equipment size. I thought maybe you knew it does that, but he seemed concerned you might think he's smaller than he really is. I thought it looked fine, but he seemed a little worried.\" More than fine, the Slut felt the need to add. Almost like it was trying to summon the courage to show off.\n\n\"Oh\u2014no, I didn't know that, at least not exactly. I saw a TV show once where they made some jokes about that, but I didn't really knew exactly what that meant. I've never seen a real one that wasn't already hard, so I have no idea what's small and what's not, anyways. But like I said, I didn't see anything either way. So it really does that? And it's noticeable? \"\n\nGwen hesitated before confiding to her friend. \"Don't tell Tim I told you, but it can get really small sometimes, almost like it's trying to hide, and then it's back to normal in just a few seconds! It's amazing how quickly it can change sizes. See, you're catching up already!\"\n\nCricket laughed. \"I guess I can sympathize with him? If my breasts did that, I'd probably look like I don't have any at all!\"\n\n\"You and me both,\" Gwen agreed. \"But I never minded having small breasts. I know how KD has to wear certain very restrictive bras when she rides so their bouncing doesn't become a nuisance. I'm glad I don't have to take those precautions.\" A mental image of Natalie galloping across the field topless, boobs flying in all directions, came to mind. KD's had to be about the same size...\n\nThe young woman giggled. \"You always have such a positive outlook. Anything else I should know about a man's equipment? Does it breathe fire or perform magic tricks?\"\n\n\"Depends on what you consider magic. And I'm sure the next man you take a liking to is going to show you things I have no idea about. In which case, I will expect you to catch me up.\"\n\nThe young woman followed her host's example and did not bother with a towel when they made their way down to lunch, wondering what someone would think if they were to pull up the driveway now and see two naked women casually strolling down the hill. Clean t-shirts were slipped on before they prepared their meal, Cricket's well-worn garment not quite covering her bare bottom. She realized that as they sat to eat that any visitor now would require her to remain sitting..\n\nCricket stretched and yawned as they finished lunch. \"I really should get going. I'm getting sleepy just sitting here, and I still have to drive home and study.\"\n\n\"You got to sleep late and were up early,\" Gwen offered. \"Why don't you take a nap here so you're alert for the drive?\"\n\n\"I've been in your hair long enough for one weekend. I'm sure you have things you have to get done, too.\"\n\n\"I really don't want you driving tired. Tell you what\u2014I could use a nap, too. Let's both take one.\"\n\nCricket weighed her decision. \"I will if you will.\" The young woman let her host go down the hall first, unsure if napping meant occupying separate beds, greatly desiring Gwen's body next to hers but not wanting to seem forward by asking. She stopped at the door to her room and looked at the master bedroom hopefully. \n\n\"We can share a bed, if you want,\" Gwen said, not bothering to turn around. \"Plenty of room.\"\n\nThey lay down side by side, Cricket staring at the ceiling, finally summoning the courage to initiate the physical contact she needed after Gwen rolled to her side and away from her friend. She moved behind the older woman and put her arm over the fabric-covered waist, snuggling into the warm body beside her. Gwen snuggled back. \n\n\"This is so nice,\" Cricket said contentedly. \"I never knew how good another person's body could feel next to mine. Daniel hated physical contact. How do you not spend all day like this with Tim?\" \n\n\"We have a business to run,\" Gwen sighed. \"By the way, you feel good, too.\" \n\n\"Thanks.\" The young woman tried to wiggle even closer to the body she was wrapped around, her mound grinding into the tailbone it was pressed against. The bed did feel good and the ride, swim, and food had made her sleepy, but the need of something a little more physical to relax grew from a spark to an open flame.\n\nGwen wiggled back. \"That feels good, too.\" \n\nEmboldened, Cricket's hand slipped down the cloth-covered waist until it reached bare skin and reversed course, pushing the edge of the shirt up as she gently caressed her bedmate's smooth flank. \n\nGwen rolled back over, her face just inches from her friend's. \"Need some help with something?\" \n\nCricket avoided eye contact, fearful she had overstepped her bounds. \"Well, if you'd rather not...\" \n\nThe older woman responded by gently kissing her. \"I could use some help, too.\" Her hand began its own journey under her partner's shirt. They took their time, neither in a rush, each relishing the feeling of soft feminine hands and lips, the feeling of closeness, all swirling together into a powerful aphrodisiac. It took some time, but Gwen was the first to bring her hand down to caress the spot where the other woman's legs met. \n\n\"Gwen?\" Cricket asked, breaking their kiss as she opened herself slightly to welcome the touch. \n\n\"Hmm?\"\n\n\"Your vibrator...\"\n\n\"Would you like one? The wand or the rabbit?\" she asked, abruptly withdrawing and rolling away to reach for her bed stand drawer.\"\n\n\"Actually, I've never seen you use one\u2014on yourself, I mean. Would it be alright if I watched you, you know, us it\u2014I've never seen it done and I want to make sure I'm doing it right,\" Cricket added hurriedly. ",
        "\"If it feels good, then I think you're doing it right,\" Gwen said with a smile. \"But if you really want to watch...\" She pulled open the drawer. \"Any preferences on what I use?\"\n\nCricket got to her knees and to a spot on the bed she thought might be out of the way. \"Whatever you like best.\"\n\nThe wand was selected and plugged in, and then the shorter, fatter dildo was placed next to it. Gwen carefully stacked several pillows against the headboard and reclined on them after removing her shirt. \"Ready?\" she asked the woman kneeling at her feet. \"Can you see alright?\" \n\nThe young woman smiled. \"The view is wonderful.\"\n\n\"Good.\" The older woman closed her eyes, laid her head back and began running her hands over the bare skin of her stomach and legs. Her observer continued to kneel, barely breathing while her own hands primly rested on the tops of her thighs, entranced by the sight of the beautiful woman pleasuring herself before her. Gwen's fingers smoothed and circled, drawing close to her breasts and down and over the insides of her thighs. Her nipples were erect before they had even received their first welcome caress, and her legs opened to allow better access to her most intimate spot as well as the gaze of the woman at the end of the bed. She dipped a finger into her opening to draw some moisture up her cleft and over her clit; the finger returned a moment later and buried itself deeply while her palm pressed into her mound. \n\nIt remained there while the other hand reached for the dildo, moving after the rubber invader had been properly aimed for entry. \"Sometimes I use my vibrator for a little bit first,\" Gwen explained, her eyes still closed, \"but today I want something in me right now so I'll start with this instead.\" Her delicate labial lips were sucked in by the veiny shaft as it was inserted, grasping at the length, until the faux testicles were firmly pressed against the flesh below her opening. Cricket could see Gwen's finger tucked up behind the sack, tickling...her anus? Not that, she decided, she would never touch herself there. \n\n\"It looks so big from here,\" the young woman breathed, \"like it's splitting you apart! I never thought of it stretching so wide!\" \n\n\"Babies' heads feel like they're splitting you apart,\" Gwen softly corrected, \"this makes me feel...full...in a good way. Do you ever use the one I gave you?\"\n\n\"Yes,\" Cricket admitted with a blush. Used it, studied it, fantasized about something just like it dangling from a man crouching between her widespread legs as he prepared to impale her.\n\n\"Then you probably know what I mean about the full feeling. It feels good, right?\" \n\nShe giggled. \"It really does. I just never imagined it looked like that in me.\" \n\nThe vibrator buzzed to life, and Gwen gently touched each nipple with the bulbous head, breathing in sharply from the sensation. \"My chest gets so sensitive when I'm aroused,\" she offered. The hand holding the wand gently touched it to her mound while the other began to slowly move the penis inside her. The rhythmic stroke of the cyberskin cock and the delicious torment of her clitoris had Gwen's hips twitching, then bucking in little time. The cock fucked her and she fucked back, pistoning it in and out while the vibrator growled angrily under the strain of being pushed into her clit. \n\n\"Ahh-ahh-ungh\u2014UNGGHhhhhh...\" Cricket swore she could see her friend's sex convulsing around the rubber penis, just as she had felt it do about her finger when she had brought Gwen to orgasm. Knees and thighs came together involuntarily, trapping both dildo and vibrator as the climaxing woman rolled to her side. \n\nAnd then it was over. \"Sorry,\" Gwen said weakly, turning off the wand and slowly pulling the length from her still-tingling sex, \"I got a little carried away there.\"\n\nCricket watched her friend's lips close as the tapered head of the glistening cock withdrew beyond them. \"I loved it\u2014that was beautiful! So powerful!\"\n\n\"Addictively powerful,\" Gwen agreed, getting to her knees. She reached for Cricket's shirt, gently pulling it over her head then patting the freshly-vacated indentation on the pillows. \"Your turn,\" she said with a gentle smile. \"Let me check your form\u2014make sure you're doing it right.\" \n\nThe young woman hesitated, unsure, now aware her plan had not been thought through this far. She had never been comfortable being the center of attention, always dreading group situations where she might become the one all eyes were on. The fear of failure and embarrassment had always been present whether riding competitively or being called on in school. And yet here she was, at her most vulnerable, being asked to perform the most intimate act she could imagine for another's review. Gwen did it for me, Cricket scolded herself. I wish I had half her confidence. And I owe her the same trust so time to find some confidence of my own. She willed herself to lay back, legs together. \"Promise you won't make fun of me if I do it wrong?\"\n\nGwen smiled. \"I won't make fun of you and I don't think you can do it wrong. Let me watch.\" \n\nCricket flopped her head back and committed herself to action. She closed her eyes and began to stroke her body, subconsciously mimicking what she had just seen Gwen do. Not being able to see the naked woman lounging on her side at the end of the bed, head propped up on a hand and watching, made bringing her arousal to the surface a bit easier, and she briefly wondered whether riding into the show ring with eyes closed might have had the same effect on her nerves back then. It was not much of a stretch from there to imagine herself naked astride Marvin while a hundred spectators watched her canter. She stifled a laugh and began luring out the orgasm she knew lay in wait. \n\nHer hand was soon between her legs, gently teasing her clit. \"I think yours is prettier,\" she offered, unwilling to open her eyes and look at her friend. \n\n\"My what?\"\n\n\"Your, uhh, vagina...I heard you tell Tim you thought mine was prettier, but I don't think so.\"\n\nGwen laughed. \"So you did hear that. Well, I think yours is, but I think we're both overly critical of ourselves. I never really looked at mine and just assumed it was ugly and should be avoided, always but then I really looked closely at my friend's, uhh, pussy and thought it wasn't ugly at all.\" Miss Ritter's had always seemed an extension of the woman herself, cold, severe, maybe even a little dangerous and scary, like it would bite if not properly administered to. It had been Natalie's that had changed her opinion, her sex flowery and warm and inviting, just like the owner. Cricket and Liz had only reinforced her new appreciation for that powerful symbol of femininity. \"I've come to realize how unique and mysterious and beautiful they are. And yours is certainly beautiful. In my humble opinion. And I hope you don't mind me telling him that.\"\n\n\"I'm a little embarrassed you'd tell him, but's that's all right\u2014it's a very nice thing for you to say. Cricket softly admitted, briefly imagining him standing at the end of the bed and judging for himself, \"I know you like to be honest with him about us; I can see where that might be part of it.\" \n\nThe women lapsed into silence, Cricket's heavy breathing punctuated with soft squeaks and grunts.. She found the vibrator very powerful and the dildo very filling, and despite her performance anxiety, she found the climax she had been searching for a short time later. \n\n\"Now for a nap?\" Gwen asked , gently massaging the young woman's foot and toes as she recovered. \n\n\"Couldn't move if I wanted to.\" \n\nThey did not bother to redress, spooning with each other as their contented, rhythmic breathing lulled them to sleep. Neither was quite ready to awaken when the sound of a truck in the yard an hour later gave them no choice. Both were quickly up, Cricket the more panicked of the two although Gwen had her own pangs of guilt from feeling a tinge of excitement at perhaps being caught red-handed. \n\n\"I guess I should get dressed and get going,\" the young woman offered as she scrambled to her feet, a weak smile on her face. \n\n\"Sure you don't want to stay for dinner?\"\n\n\"Thanks, but I'm already into my study time...Gwen?\"\n\n\"Hmm?\"\n\nCricket hugged the older woman. \"Thank you for everything\u2014for being my friend, and for being my teacher.\" \n\nGwen laughed. \"I'm hardly a qualified instructor! I'm still very much in learning mode myself! I'm just a little more...experienced at the moment.\"\n\n\"You're so wrong,\" the young woman insisted. \"I have already learned so much just being around you. Ever since I was a teenager I felt like I was going to have to figure out this world all on my own, but I don't feel that way any more. It's like I've been given a fairy godmother. Thank you.\" \n\nI've never heard of a fairy godmother stripping off her clothes and having sex and every opportunity, the Lady grumbled. Gwen hugged the warm body to her. \"You're making me out to be more than I am. This is just what friends do. But you're welcome. And thank you.\" \n\nThe young woman broke the embrace and hurried to her room, unwilling to be caught naked by the man whose bed she had just been in. Gwen threw on the t-shirt she had been wearing and went to greet her husband.\n\n\"Heya,\" he called out as he stepped into the kitchen and kissed her cheek. \"Weren't you wearing that when I left? Did you ride today?\"\n\n\"We did,\" Gwen replied airily, her nose wrinkling in displeasure. \"We went riding, took a swim, had lunch, and we just got up from a nap. And you need to get out of those clothes and into the shower\u2014you smell really bad.\" \n\nTim grinned. \"I thought you liked my manly smell?\"\n\n\"Manly is nice, fish and gasoline is not. Did you hug a salmon?\"\n\n\"No salmon in the lake, but I did have a fling with a huge bass\u2014you should have seen it!\" \n\n\"I can smell it,\" Gwen complained, theatrically waving her hand in front of her nose, \"please go shower. Don't put your clothes in the hamper\u2014leave them on the bathroom floor I'll put them straight into the wash!\" \n\nHe continued to grin. \"Where's Cricket?\"\n\n\"In her room, changing and getting her things together to leave. Now go,\" she ordered. \n\nCricket joined her several moments later, bag in hand. \"Guess I should get going,\" she said with a sigh of resignation. \n\nGwen turned from packaging leftovers for the young woman to take and gave her a smile. \"Can you do me a favor before you go?\"\n\n\"Of course, anything!\" \n\n\"Can you get Tim's clothes from the bathroom and throw them in the washer while I finish this?\"\n\n\"Sure. He's in there now, right? I can wait until he comes out.\" \n\n\"I know you need to get home and study. He won't mind if you just pop in and grab them. They're on the floor, at least, that's where I hope he remembered to leave them.\n\nCricket looked uncertainly at Gwen's back. \"Really? I mean, he's in the shower, right?\"\n\n\"It sounds like it. It's no big deal\u2014you saw him in his birthday suit yesterday.\" \n\n\"I didn't really see anything,\" the young woman quietly reminded her.\n\n\"Just go and grab them\u2014you'll be in and out in no time!\"\n\n\"Are you sure?\"\n\n\"I'm very sure. Go on.\" \n\nCricket began the trip down the hall, looking back at her friend one last time to see if this was some sort of prank. Gwen did not look up from the plastic bowl she was intent on emptying. The door to the bathroom was open when she entered the bedroom, the sound of running water splashing off something very clear now. She hesitated, wondering if she should knock first to announce her presence, calculating the odds that Tim wouldn't even notice her. The young woman held her breath and slowly poked her head around the door, afraid her calculation had been wrong and the man in the shower stall would question why this woman was invading his privacy unannounced.\n\nShe resumed breathing. Tim was turned away from her, the rivulets of water running down the glass only slightly impeding her view of his muscular back and shoulders with just a hint of middle-aged roll sitting above well-defined butt cheeks, thighs and calves. Cricket crept forward towards the pile of clothes, her eyes still on the naked man to her left, openly admiring his nude body. She watched him vigorously soap his midsection, occasionally reaching and scrubbing between his legs, watery globs of lather dropping to land with a splat on the wet tile. Cricket smiled and wondered if Gwen ever helped him with that task. \n\nShe took her time collecting the various articles of clothing, alternating between not wanting to get caught and hoping he might turn around so she could see if warm water had an effect on him as well. The collected items were gingerly held at arm's length as she finally retreated, her eyes on the naked man behind the glass until he disappeared behind the door. Once free of the bathroom, she hurried to the washer to deposit her collection. \n\n\"All set,\" she called out with all the casualness she could muster as she returned to the kitchen, cheeks flushed from the experience giving her true feelings away. Cricket kissed the woman at the sink. \"Tell Tim I said thank you and goodbye?\"\n\n\"You didn't tell him yourself?\"\n\n\"He had his back to me and was busy cleaning up and I didn't want to interrupt.\"\n\nGwen smiled. \"I see. I will, then. You'll call this week?\" \n\n\"Of course!\"\n\n\"You better. Be good and be safe.\" She kissed the young woman on the cheek, and the kiss was returned. She handed her a shopping bag of containers. \"And don't forget to eat!\"\n\nTim, dressed in shorts and a t-shirt, padded into the kitchen a few moments later on his way to the refrigerator and a beer. \"I saw you didn't waste any time putting my stuff in the wash. Thanks. She in the barn?\" he asked, nodding at Cricket's still-present car in the driveway. \n\n\"Barn,\" Gwen confirmed. \"Checking on Marvin's cut and leaving a detailed note for me about its care, I would guess.\" \n\nTim chuckled. \"Good thing, 'cuz God knows you've never treated those hayburners' boo-boos before.\" \n\n\"Did you go at the beach we went to while you were at the lake?\"\n\nHe smiled. \"Naw, wouldn't be the same without you.\" Tim put down his beer and took her in his arms. \"Maybe next time we can go together?\"\n\n\"If you want...\"\n\n\"I also saw you got some of the things in your nightstand out while I was gone. Just for you, or did you share?\" \n\n\"We shared. Did you want to hear about it?\"\n\n\"Dumb question. Did you want to wait until Cricket heads out?\" \n\nShe smiled, broke his embrace, took his hand and pulled him towards the bedroom. \"No.\"\n\nTim grinned back and allowed himself to be led. \n\n\"Take your clothes off,\" Gwen commanded as she pulled her own shirt over her head. \"Lay down on your side of the bed.\" \n\n\"That's the Gwen I know and love,\" he said, still grinning. \"Taking charge. Take your clothes off! Take a shower! Take your clothes off again! Might as well just stay naked all the time.\" \n\n\"Might as well,\" she said distractedly while retreating to the open doorway. \"Lie on your side,\" she ordered, studying the mirror over the dresser across the room. \"Lie on your back now.\" Scowling, Gwen went to the mirror and adjusted it, then went back to her spot by the door. \"A bemused Tim complied, his cock pulsing in anticipation as she nodded her head and joined him, leaving the door to their room wide open. \n\nGwen could see the slightly quizzical look in her husband's eyes. \"Cricket not only listened in last night, she could see us, too,\" she explained, gently wrapping her fingers around his erection. \n\n\"So she was right outside the door, huh? That girl's stealthy. And rather than shut the door so she doesn't see us again you made it easier?\"\n\nHer hand stroked. \"The way the mirror was she didn't see much\u2014I think I saw more of her than she saw of us. I know you don't mind her hearing us\u2014are you alright with her seeing us, too? I'm pretty sure she liked it.\"\n\n\"I'm beginning to think you like it as much as she does?\"\n\nGwen's hand stopped mid-stroke, afraid that his question might be tinged with anger. \"Sorry, I didn't know until she was there, and I'm sorry I didn't tell you then, but I thought it was exciting to have her watch me, and I wanted her to see you, too. I've always thought you were so handsome, and I wanted her to see you too, and how lucky I am to have you. I'm sorry\u2014I know it sounds like I'm teasing her, but she really did say she liked watching both of us.\"\n\nHis hand found hers and gently urged it to resume its travel up and down his cock. \"You don't have to apologize, I'm just a little surprised, is all. Both at her watching and you wanting her to see us like that. Looking at you, I get. I do it all the time. But me, I don't think there's much to look at.\"\n\n\"Oh yes there is. I've never told you this, but after we got married, I would always sneak peeks at you when you were getting dressed or were in the shower. I felt like it was wrong to be looking at you naked, but I couldn't help it\u2014you looked so, I don't know, manly, and I was so lucky to be married to someone so good looking! I knew it was conceited, but I couldn't help it.\"\n\n\"How long did it take you to get bored of peeking?\"\n\n\"I never got bored. But once I stopped thinking it was wrong, I stopped peeking and just started looking. I like that so much better.\" \n\n\"Huh.\" Tim rolled over in between legs that opened to welcome him. \"So, if she saw me do this\u2014\" he emphasized his point by burying his length in one smooth stroke\u2014\"you'd be okay with that?\"\n\nGwen closed her eyes and bit her lip. \"Uh-huh.\"\n\n\"And if she came back in the house right now\u2014\"he withdrew and thrust again, this time with a little more force\u2014\"you wouldn't make me stop?\"\n\n\"N-no...\"\n\nHe pistoned his cock twice more and grinned. \"If she's still out there saying goodbye to Marvin, maybe I should take you out on the deck and bend you over the railing. Let he get a good look at her friend getting fucked.\"\n\nGwen quickly opened her eyes and giggled nervously. \"I'm not quite sure I'm ready to go that far! Being seen is one thing, making a spectacle of ourselves is another! I like it here.\"\n\nIf Cricket comes back in the house now, she's gonna be scarred for life watching my ugly naked ass piledriving into her best friend, Tim thought. But if she wants to look, let her look,. He was not gonna stop for anything until he came. He imagined their young houseguest standing in the doorway\u2014naked, of course-as he emptied himself into his wife's welcoming cunt, her hands on his ass urging him deeper, obeying the primal command to leave his seed just a little closer to its ultimate goal. Tim was embarrassed by his disappointment when he looked back over his shoulder after his last convulsive shudder and found the hallway still empty."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "lesbian",
        "voyeur",
        "listening",
        "blowjob",
        "cunnilingus",
        "lesbian sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-08"
}