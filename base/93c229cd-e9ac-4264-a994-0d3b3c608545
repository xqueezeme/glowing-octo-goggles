{
    "title": "Meeting of the Six Kings Ch. 04",
    "pages": [
        "Day Three\n\nCatrine was roused by an indifferent butler. He had come to escort her from Arick's chambers. As she exited his apartment, the King didn't bother to look up from his morning paper.\n\nShe should have felt relieved by his sudden indifference towards her. But, for as much as she had dreaded being in the presence of King Arick, she now felt equal dread in the idea of returning to Master Ryan.\n\n'This is all that I am,' said the voice inside her mind. \n\nThe butler bid her to wait outside the door to Ryan's suite and she responded by dropping to her knees and lowering her gaze. King Arick hadn't returned her dress, so she knelt there naked and battered, shivering with both cold and nerves.\n\nThe knocking startled Ryan awake. He kicked over the still half-full glass of whiskey that rested on the floor beside him as he rushed towards the door. When he first opened it, he only noticed the butler and stood there momentarily confused. Then, he recognized the kneeling figure beside him.\n\nHe dismissed the butler with haste. He bent to take both of Catrine's hands before pulling her quickly into his room. He closed the door, locking it securely, before pressing his back against it as if trying to keep out the rest of the world. He was so relieved to see her. He breathed deeply, calming his adrenaline fueled mind, reassuring himself that she was back safely with him.\n\nHe advanced on her quickly and wrapped himself around her, hugging her close. He felt the now familiar feel of her hair against his cheek while her unique scent filled his nose. He was so happy to hold her that he didn't register at first that she had remained still in his arms.\n\n\"Catrine?\" he spoke gently. He loosened his embrace, searching for her eyes, but she couldn't meet his. Her face was pressed against his shoulder, facing away from him. Her eyes shut tight.\n\n\"Catrine?\" He whispered to her again, his voice filling with concern. He pressed his lips against her hair and muttered her name softly, again and again. His emotions practically shouting, but his lips barely making any sound. \n\nA tear slipped down her cheek as he rocked her gently in his embrace.\n\nThis is all that I am.\n\nShe felt the remnants of Arick's brutal violation seeping down the inside of her thigh. It disgusted her. Shame overpowered her as she realized what they had reduced her to. What was left after so much savagery but the ghosts of her past and an endless, empty future?\n\nThis is all that I am. \n\nHis soft words, his warm embrace, his gentle touch. Ryan was everything she wanted and everything she could never have. She yearned for kindness, protection and love. She was crushed by the agony that it could never be hers.\n\nThis is all that I am.\n\nThere was nothing for her in his breathtaking embrace but pain; A pain worse than anything that she had experienced in her two years of servitude. A pain much deeper than anything her other masters had inflicted. \n\nThis is all that I am.\n\nTomorrow she would return to that warehouse, to those vultures, to await a new Master and his wicked plans. \n\nHow could she survive that, having felt with him what it was like to live again?\n\nShe shuddered violently and pulled herself away from his grasp. She needed to escape the comfort of his arms. She was coming apart and couldn't bare the idea of unraveling in front of him. \n\nNot knowing how to escape him, she quickly asked, \"Master, may I please take a shower?\" But, she avoided his gaze entirely.\n\n\"Oh. Yes. Of course.\" he answered immediately, berating himself for not suggesting it. He released his grasp on her body and she scurried away from him quickly. He stood there, alarmed by her state, as he watched her flee from him into the bedroom.\n\nShe turned on the shower and stepped under its cascade. She had hoped it would sharpen her mind, but the effect was the opposite. Intense shivers traveled through her and she felt like her knees would suddenly give way. She pressed her hands against the cool tile walls as an intense wave of nausea overtook her. Stumbling once, she fell backwards and crumpled to the wet floor, sobbing openly into the spray.\n\n\u2014-\n\nHe had wanted to give her some privacy. She had clearly been distressed when she returned. But she had been in the bathroom for a long time. As the minutes ticked by, his mind pricked with alarm. He warred with himself, wanting to check on her but afraid of smothering her with his own worry.\n\nHe walked into the bedroom and heard the shower still on. He knocked and slowly opened the door, calling to her. When she didn't answer, he opened it fully looking towards the glass enclosure where he expected to see her standing.\n\nShe was practically hidden there. Slumped against the wall at the far corner. She seemed so small. As he neared her, he realized that she was shivering uncontrollably. The water had long since turned cold. He turned it off and knelt at her side. She looked like she had been crying, but she made no sound now.\n\nHe reached out to touch her, but stopped short. In the bright bathroom light, he suddenly noticed how badly she had been beaten.\n\n\"Shit.\" The word escaped his lips before he even realized he'd said it. He was stunned.\n\nHe cringed as his finger gingerly brushed the dark purple bruise on her temple and followed its trail to the cut on her lip. He was breathless as he brushed her hair to the side revealing deep bruises along her neck and over her shoulder. He took in the marks on her breasts, the bruising on her hip. Finally, he gasped in disbelief as he lifted her arms to his gaze, revealing the razor-like red gashes left by the cuffs. \n\nHe was sure there were more, but he had seen more than enough. \n\nHe jumped up and grabbed two large towels. He did his best to wrap her up in them, pulling her from the shower and carrying her into his bed. She hardly seemed to acknowledge his presence, her eyes looking at him, but not really seeing him there with her. \n\nHe used his actions rather than words to convey his remorse. He did his best to towel dry her hair and then brushed it out gently. He slipped a pair of clean panties over her legs. Then, on impulse, he grabbed his own t-shirt, a favorite from his alma matter, rather than her nightgown, and gently pulled it over her head. It comforted him somehow that he could wrap her up in a bit of himself, rather than placing her in some other thing that was a symbol of her servitude.\n\nResting her against the pillows, he pulled up the covers, tucking her in securely. He pressed his lips against her forehead, wanting to say so much but not knowing where to begin. When she didn't say anything more, he sighed and turned away. He walked out of the room, quietly closing the door behind him, leaving her to rest.\n\nThe emotions Ryan felt when Arick had taken her away began as fear. By the morning, that fear had morphed into anger. Seeing Catrine this morning, that anger had turned into deep sorrow. Yet, as he locked the door of the suite and strode down the corridor towards the Kings and his third meeting day, the sorrow had disappeared, turning instead into an iron-clad determination. He was no longer going to let them make up the rules.\n\n\u2014\u2014\n\nHe did little to acknowledge the Kings as he pulled back his chair and sat down to begin the morning session. He looked around the room and saw all the other girls tucked quietly into their places. Some looked a little tired, but none looked as battered as Catrine had when she returned to him in the early hours of the morning. For a moment, he thought Arick was going to challenge the fact that Catrine hadn't accompanied him to the meeting. Ryan threw him a threatening glance and the King held back.\n\nOnce Dutton opened the morning's session, Ryan feverishly made his final pitch for his proposal and his company. He knew that this was the moment that he was supposed to tie it all up and walk away with his shiny, lucrative contract. Although he had practiced this part extensively, as he threw himself into it, he knew that the whole emphasis of his pitch had changed. \n\nThis was no longer about power or resource development or energy policy. Perhaps it was never really about those things. Or, perhaps it was always about something more than just those things. He was certain that this passionate speech was somehow about him; his ability to sate the Kings desires, his ability to navigate their twisted labyrinth. It was an audition here in their inner circle. \n\nAnd, while he couldn't exactly connect the dots, he knew that ultimately his make-or-break pitch in the room that morning was somehow linked to his ability to hold on to Catrine. He wasn't even sure that this made sense but he seized on it with a frenzy. It drove him as he carried himself across the room, talking avidly with the Kings about the future of their realm. It animated him as he illustrated again the possibilities and long-term gains from his plan. \n\nAt least it felt like something he could control.\n\nWhen there were no more questions, he returned to his seat, satisfied with his presentation. The discussion had gone a long way to rebuild his own confidence. His mind had cleared considerably since the previous afternoon. \n\nHe was ready to play the next round of games with these Kings. \n\n\u2014-\n\nWhen there was a break in the discussion, the butler appeared by his side, leaving two envelopes discreetly on his desk. The first, he realized with dismay, were the detailed instructions to return Catrine to that warehouse. The note was so sterile, so administrative, as though he were returning a rental car at the airport. His stomach turned as he read it over. \n\nThe idea of dumping her there and taking off; the idea of returning her to a life of endless terror and humiliation. To idea of never seeing her again. He couldn't begin to consider it. He set the letter aside, refusing to dwell on the possibility. \n\nHe picked up the other envelope and carefully slid his finger along the top. He peered secretively at the contents inside, but was careful not to remove them. This package was much more promising. He breathed deeply as he folded the envelope in half and tucked its contents into the pocket of his jacket. He patted it gently as if confirming it was safely hidden away.\n\nThe meeting finally wrapped up around lunch time. Ryan had been checking emails on his tablet and awaiting an opportunity to sneak upstairs to check on Catrine. He was startled when he looked up and saw King Hall standing in front of him. \n\nHall was the oldest of the six Kings and had been the quietest during the meetings. There was a dignity to the way he carried himself and a sharpness to his expression as though he was making fast judgments, but giving nothing away. \n\n\"Walk with me?\" He said casually. \n\nRyan rose and was surprised when Hall took his arm and lead him towards the exit of the meeting room. They continued all the way down the long hall, coming to a stop just in front of the residence elevators. Hall pushed the button to summon one.\n\nHall regarded him for a moment. Then, with a tone that took Ryan by surprise, he patted him on his shoulder and said, \"Why don't you go ahead upstairs? We will finish our discussions in private session this afternoon. We'll inform you of our final decision tomorrow morning.\" \n\nThen, squeezing Ryan's arm to emphasize his point he added gently, \"I had one like her once...\" His tone wistful and full of melancholy as his eyes swam with visions from his past. \n\n\"Go to her now. She needs you.\"\n\nRyan regarded the words of this sudden confidant. He stepped into the elevator nodding his sincerest thanks to Hall as the doors closed firmly between them.\n\n\u2014-\n\nCatrine was exhausted but she could not convince herself to sleep. Tightening her arms around her body and squeezing his shirt tightly against herself, she worked furiously to steady her mind. She had been terribly shaken by her evening with Arick. She ached everywhere, the dull pain a lasting reminder of his harsh actions and harsher words. \n\nBut his treatment of her, while brutal, had not been worse or more severe than what she had received at the hands of many previous Masters. It certainly hadn't been worse than the repeated deprecation and punishments she had endured during her long months of training. \n\nShe realized with sudden clarity that it was not Arick's actions, but Ryan's actions, that had left her so exposed to Arick's cruelty. She sat up against the headboard, suddenly more alert, as she considered this fully. \n\nWhen she first met Ryan, she had hoped just for a temporary reprieve from the usual torment of her every day; his casual demeanor offering her a chance to rest and perhaps blend into the background. She had planned to get by on the fundamentals of her training and not worry that more would be demanded of her. He certainly had shown her kindness and decency. \n\nBut, she realized, their interactions had been much more complex than that; much deeper than that. She was so comfortable with him, more comfortable than she had ever felt with her other Masters, even the ones who were similarly kind to her. She had felt safe in his care, safer than she should have felt surrounded by the notorious Kings of the Capital. She had let her mind rest while with him, given herself over to a tranquility and a sense of peace that she hadn't felt since her childhood.\n\nBut, she didn't feel relieved now, despite all he had tried to offer her. If anything she was more uneasy than she'd felt in months, perhaps even years. \n\nShe was drawn to him. She wanted to know him in a way that she had never experienced. She wanted to look at his eyes and touch his soft hair and curl herself up against him. She wanted to feel the gentle caress of his fingers on her skin. She wanted to know the feeling of his lips against hers. \n\nThinking further, her feelings went deeper still. She wanted to know what made him laugh and whether he had a family. She wanted to know why he loved engineering and what drove his passions.\n\nAs she sat there, warmed by his bed, surrounded by his smell, and wrapped in his clothes, she wanted to touch his soul. She could shut the world out forever, knowing only the sweet serenity of her connection to him. \n\nThis, she knew, was impossible. But, they had one more day together. After that, she reasoned, she would face her life sentence. \n\n\u2014\u2014-\n\nFinally ready to stir from the warm cocoon of the bed, Catrine rose gingerly and made her way to the living room. She still ached in a few places, particularly the spot on her temple where Arick had struck her. But, her energy was restored by the rest and her newfound resolve to carry on. \n\nShe walked over to the bar in the corner of the living room and opened the little wooden box of tea, its aroma wafting up to greet her. She took a deep breath, finding equilibrium again as she started the kettle. \n\nHer reverie was interrupted as a sharp pang of hunger suddenly overtook her. She remembered that it had been a long time since her last meal, at least a full day now. She contemplated her options, realizing that she had few. \n\nGlancing around, she spotted a purple biscuit tin behind the glass front of the cabinet at the top of the bar. She knew she was taking a chance. Compelled by her empty stomach, she reasoned that Ryan would grant her permission to take a cookie. She lifted herself onto her toes and reached up high to try to open the door of the cabinet.\n\n\u2014\u2014\n\nHe was almost certain she'd be asleep so he took great care to open the door quietly. He stopped suddenly, as he looked across the living room and spotted her at the bar. Her back was to him and she was reaching so high with her right hand that even her right foot had lifted entirely off the ground, leaving her standing on the very tips of her left toes. She appeared to be only a few millimeters from her goal.\n\nShe was still wearing his t-shirt. The bottom of it had lifted invitingly upwards as she stretched across the cabinets, giving him a full and unrestricted view of her long and lovely legs. Her well defined calf muscle strained with exertion and her other leg lifted gently, almost like a ballerina's arabesque. He could make out the tiniest fragment of the silk of her panties across the very tops of her thighs, muted lavender clashing wildly with the bright red of his college t-shirt.\n\nHe watched, fascinated as her fingertips finally cracked open the cabinet door and a small tin clanged loudly as it fell against the countertop. He heard her release a cry of victory as she pulled at the top of the tin and stuffed a biscuit into her mouth, moaning softly as it melted on her tongue. She turned to shut off the kettle and poured herself a cup of tea. \n\nHe was sure he was smiling like the Cheshire Cat, delighting in being a witness to this private moment of indulgence. Her unguarded actions so different from her usual careful composure. He couldn't help but feel like he was spying on her; not wanting to invade her privacy, but not wanting to interrupt her either. He was also greatly relieved to see that she seemed to be feeling much better than earlier that day. \n\nAfraid she'd turn around to find him gawking at her, he decided to make his presence known. He grabbed the door handle again and made a loud show of opening it, making sure this time to attract her attention. She swallowed her cookie quickly, guiltily wiping the crumbs from the corner of her mouth, and turned to face him.\n\n\"Do you need any help over there?\" He asked her casually as he walked by. She attempted to block the tin with her body. \n\n\"No, I've got it. I was just making some tea.\" She said with haste. Despite her earlier confidence, her hands shook with the fear of being caught taking something without permission. The habitual fear of punishment stronger than her trust in Ryan's intentions.\n\nRyan casually walked to the dining area and set down his briefcase, removing his tablet and phone and placing them on the table. He wanted to give Catrine a little bit of space. \n\n\"I'm so glad to see you're awake and out of bed. I thought you'd still be sleeping when I came up.\" He added, an attempt at easy conversation.\n\nWhen he looked over, she was stiff, still standing guard at the bar. So, he added helpfully, \"I think there's a tin of cookies or something over there. Feel free to help yourself. I may eat one too, come to think of it.\" \n\nHer eyes widened as she realized that he had just acquitted her of her trespass. Relieved, she picked up the tin and carried it to the table, setting it gently in front of him. He turned to look at her as she stood beside him before reaching into the box and offering her a biscuit. She took it from his hands, glancing up to meet his eyes. Their sudden proximity making her nervous.\n\n\"Can I get you anything else, Master?\" She asked him quietly. \n\nHe reached up and pressed one finger softly against the cleft of her top lip. His tone matching hers, he said, \"None of that formality here, okay?\"\n\nShe nodded her head once in understanding. She felt like she could hardly breathe as his finger traced the outline of her lips. His soft touch reminding her of the profound difference between him and all the others. The powerful current returning and passing between them as she looked him in the eyes. \n\nHe brushed her hair away from her cheek, revealing the purple bruise beside her eye. He stroked the edges of it softly. It made her suddenly self-conscious and she broke their stare.\n\n\"Does this hurt a lot?\" Concern evident in his voice as he continued the gentle touch.\n\n\"I've had worse.\" She said faintly, still looking towards her feet. She squirmed a bit under the intensity of his examination, clearly uncomfortable with the subject.\n\nHe frowned and released her cheek. He ran his hands over her shoulders and down her arms. Then, he grasped her hands in his, raising them slightly and assessing her fully.",
        "\"I like this shirt on you.\" He said more playfully as he revealed a brilliant smile. \n\nShe couldn't help but smile back as she returned her eyes to him. \n\n\"I do too.\" She said as she blushed. \n\nThey stood together, holding hands and smiling at each other, enjoying the lighthearted simplicity of the moment. \n\nHe cocked his head as a thought suddenly occurred to him. \"Are you hungry?\" he questioned.\n\n\"Yes. Very.\" She answered without hesitation. Smiling wider, the ease of their interactions and his clear concern for her making her more comfortable.\n\nSqueezing her hands, he leaned forward and kissed her gently on her cheek before he continued, \"Well, let's see if we can remedy that immediately.\" \n\nHe picked up the phone to reach the butler. She remained in place, still feeling little pings of energy everywhere he had touched her.\n\nHe walked briefly into his room, returning to Catrine a moment later carrying two pain killers and a cool glass of water. He lead her to the couch and she settled herself into the corner, tucking her legs beneath her. She took the medicine obligingly and smiled warmly again as Ryan doubled back to grab her cup of tea and the little box of biscuits.\n\nHe stopped just in front of her.\n\n\"I was really worried about you this morning...\" He trailed off. \n\n\"Last night...\" he continued, trying a different approach. \n\nHe stopped again, glancing behind her to the city view beyond the windows; the landscape he had studied so closely as he awaited her return. \n\nHe didn't know exactly how to express himself. His words were thick with the anxiety and distress that had overtaken him the previous night. He passed her the cup and sat so he could face her on the sofa. \n\n\"Are you feeling okay now?\" he tried, wanting to touch her again, but not sure if his contact would help or hinder their conversation.\n\nIt seemed a simple enough query. But Catrine struggled to answer it. It had been a terrible night. It had been a terrible two years. Of equal importance, she couldn't remember the last time anyone had asked after her with such sincerity.\n\nAnd yet, the sensation of him so close to her seemed to bring her back to life. She yearned for him to reach out; to feel his fingers gently grazing her skin again. When he was with her, she felt a flicker of life sparking deep inside of her. She wanted to nurture it and tend to it and let it grow.\n\n\"I'm glad I'm here with you.\" She said. Her answer filled with truth and simplicity as she turned again to face him.\n\nHe exhaled as the weight of her words hit him. He reached out and pulled her to him, wrapping her in his arms. She rested her face against his shoulder, nestling herself against him. \n\nThey sat together for several minutes in silence. She felt the soft rise and fall of his chest and listened to the slow, steady beat of his heart. He pressed his lips against her hair and felt her gradually relaxing completely into his embrace. It was their first unhurried moment since they'd come together nearly three days earlier making it somehow okay to say nothing at all.\n\nCatrine rose to answer the knock at the door, indicating lunch had arrived. Ryan directed the butler to place it on the coffee table rather than in the dining room as he got up to get them each a drink. \n\nReturning to the couch, he gestured for Catrine to join him there and felt relieved when she settled in closely beside him again. Having spent the last few minutes holding her close, he didn't want the formality of a hulking dining table between them now. \n\nHe opened the tray revealing two steaming bowls of pasta lightly dressed with tomatoes, basil and cheese. It smelled incredible and Catrine licked her lips as she looked eagerly towards it. He passed one to Catrine and then grabbed his own before turning sideways on the sofa to regard her.\n\n\"Dig in.\" He said.\n\nAs she took her first bite, she realized just how overcome she was with hunger. She was starving. She ate with gusto, stuffing huge bites into her mouth and chewing it as quickly as she could. \n\nShe had been so subdued just moments ago, but the lunch gave her a a sudden burst of energy. The simple pleasure of it making her giddy. He had never seen her so animated. Until that moment, her every move had been deliberate, her every word controlled. Here, suddenly, was another tiny fragment of her unguarded self; a vivid, alluring, dazzling young woman. \n\nWhen she realized that he was watching her, she peeked over in his direction and noticed that he hadn't taken a single bite. Instead he simply looked at her with a perplexed expression.\n\nBarely managing to swallow her bite, she couldn't help but give him a questioning glance. \"You aren't eating? She asked, confused. \"This might be the most delicious thing I've ever tasted.\" \n\nHer glance gave way to a smile as she turned her attention back to the bowl. Knowing he was still watching her, she exaggerated each bite, making 'oohs' and 'aahs' to emphasize her happiness.\n\nRyan watched her avidly until finally his grin gave way to laughter. At first it was just a giggle, but when that only seemed to encourage her antics further, it soon gave way to a fully formed roar from deep in his belly. The laughing complete with a small snort when he tried to catch his breath.\n\n\"Master Ryan, did you just snort?\" She asked wide-eyed as she too succumbed to her own fit of laughter. \n\nThat did them both in; the two of them together, flopped against the couch, heads thrown back with abandon, laughing until they ached.\n\nWhen they were finally spent, several minutes later, they were laying closely together against the deep pillows of the couch, each sighing happily. Ryan turned onto one elbow so that his face was just a few inches from Catrine. \n\n\"Can I kiss you?\" He asked her softly, desperately wanting her to say yes, but knowing he'd relent if she chose. \n\n\"Of course.\" She said quickly and he sensed her sudden withdrawal from him.\n\n\"No, no, no.\" He interjected. \"I meant, is it okay with you if I kiss you? Can I have your permission to kiss you?\"\n\nHer eyes opened in alarm as she considered his question. \n\n\"I've never actually been asked that before.\" She trailed off, her expression more serious by the moment.\n\nThinking that was her answer, he shifted back to a sitting position on the couch, taking a sip of his drink and increasing the distance between them. He needed the space to help him cool down a little bit; his desire for her was stronger than anything he had felt before.\n\nThere was still so much for Catrine to consider. The complexity of her past, her developing affection for him, her worries about where this would lead her. She watched him moving away, realizing the moment was passing her by and she hadn't intended that to be the answer to his question. Her mind shouted back, \"Yes!\" She wanted his kiss. She wanted it desperately, with every fiber of her being. \n\nShe moved suddenly, dropping her dish against the coffee table with a loud clank. In one motion, she practically jumped into his arms, her hands grabbing his shoulders and her lips pressing forcefully against his, almost knocking him backwards.\n\nShe had taken him completely by surprise, his mind momentarily frozen by the sensation of her pressed against him. When his brain finally caught up, he groaned against her lips, relishing the feel of her uninhibited kiss. \n\nHe wound himself tightly against her, wrapping his hands in her hair and grasping her around her neck.He leaned back into the couch and pulled her along, shifting her across his lap. She relaxed fully into his embrace as he kissed gently against her temple, around her bruise, and down her jaw line before returning to her lips.\n\nShe smiled against his mouth as he coaxed her to open herself more fully to their kiss. She complied and felt his tongue licking gently along her top lip before he caught the bottom one gently between his teeth, biting down. He pulled at it and sucked it softly into his mouth.\n\nShe gasped as the sensations he coaxed from her fluttered through her body; tiny little ripples rolling pleasantly down to her toes. It awakened her senses. She mimicked his actions. Making an unhurried pass with her own tongue over his lips and before grabbing one and teasing it softly with her mouth, eliciting a groan from Ryan.\n\n\"Hey, that's my trick!\" he tried to say, the words coming out slurred as she refused to release his lips to let him speak. \n\nShe pulled herself back a few inches, smiling as she rested her hands on his shoulders, taking him in. He watched her expression turn pensive as she raised one hand and lightly traced the outline of his lips where her own had just been. She placed both hands on his cheeks, holding him there and looking deeply into his eyes. \n\nThere was such intensity to her touch, it made him breathless. The seconds stretched on as they just stared at one another. Though they were motionless, the connection intensified, evidenced by their racing hearts and quick breaths.\n\nShe broke their silence, but her body remained transfixed. She took his hand and pressed it against her chest. There was a trace of hesitation in her voice as she spoke.\n\n\"Here.\" she said, covering his hand with her own. \n\n\"Can you feel it?\" She said, a hint of wonder in her voice as he looked back at her.\n\n\"I come alive when I'm with you.\"\n\nA sound escaped his lips as the meaning of her words washed over him. He reached out to grasp her and pulled her tightly against him, pouring himself into their embrace. He rocked them back and forth gently as he pressed his lips against her hair, just above her ear. \n\nHe breathed deeply before whispering to her, \"Oh sweet girl. Can't you see it? I'm the one who is alive with you.\"\n\nHe kissed her again, deeper and more urgently. His tongue pressing against hers, urging her to respond with her own. They tangled themselves up, giving an invitation to delve, caress and explore. Their bodies pressed together tightly. \n\nRyan began a trail of tiny kisses down her neck, as he murmured against her skin, \"Make love to me, Catrine.\" \n\nHe felt her stiffen again, but this time he was more prepared for her response.\n\n\"It's not a command.\" He whispered to her. \"It's a request.\"\n\n\"Make love to me, please my sweet girl.\" He repeated, his hand brushing a strand of hair behind her ear, continuing to stroke it softly watching her carefully for her response.\n\nShe felt light headed and tried to take a deep breath. She closed her eyes as her world blurred in and out of focus. She felt the presence of his steadying hands against her waist as she teetered slightly. She found his touch reassuring as she weighed the implications.\n\nShe was terrified. But she was also electrified. \n\n\"Ryan,\" she began, searching for the compassion she knew she'd find in his eyes. \"You need to understand. I was nine when the war started, fourteen when I lost my parents. I was nineteen when they took me.\" She trailed off.\n\n\"This has never been optional for me. This has never been offered to me by request. I don't know if I can...\" A sort of desperation was evident in her voice.\n\n\"Catrine, I know...\" He began, releasing his hands from her waist, concerned that his touch was too overbearing.\n\nShe grasped his hands and pressed them back against her body as though it was her life preserver. She held them tightly as a tear fell from her eye.\n\n\"I have never known love, Ryan. I have only known rape.\"\n\nHe felt his heart fracture into a million pieces as he stared into her eyes. It was such a terrible injustice and he ached with the knowledge that it had been perpetrated by his own people. They had taken so much from her. Even here, despite his best intentions, he had failed to protect her from their crimes. \n\nShe ran one finger along the collar clasped securely around her neck and completed her thought with sad acceptance.\n\n\"This is all that I am.\"\n\nThe statement snapped him out of his melancholy thoughts. He raised both hands to her face, wiping the tear from her cheek with his thumb. He began shaking his head back and forth keeping her in his gaze as he held on to her tightly. She saw his jaw clench, suddenly filled with determination.\n\n\"Catrine.\" He began, speaking so quietly yet so firmly she couldn't help but give him her full attention. \n\n\"You are courage when I shrink with fear. You are luminous when I fade into shadow. You are kindness when I am thoughtless. You are soulful and beautiful and miraculous. I could think of 1000 more words and none of them would begin to define all that you are.\" He said the last four words slowly to give them more emphasis.\n\nShe wanted to believe him. He was so filled with conviction. He paused for a moment as she took in his words, having none of her own to respond. She knew in her heart that they had never managed to steal or beat or take all of her. She felt immense relief to know that someone else saw it too; and that the someone was this beautiful man in front of her.\n\nShe watched him with confusion as he unexpectedly let go of her to reach carefully into his jacket pocket. He pulled out a small envelope, unfolding it gently. As he spilled its contents into his palm, he revealed a tiny microchip on a slim red cord. \n\nCatrine gasped. She stared at him dumbfounded. \n\n\"Where did you get that?\" Her barely audible voice was filled with disbelief.\n\nHe could see her whole body trembling again, her eyes still glued to the chip. \n\n\"When he took you away last night...My God, Catrine. I have never felt so powerless. I couldn't do anything for you. I was so afraid for you.\" He began. \n\n\"And I sat there, so full of anger. Willing myself to do something useful. Anything.\"\n\n\"And, then I remembered that we manufacture these. That literally, I could get your key.\" \n\n\"It's a master copy.\" He continued, concerned that perhaps she wasn't even hearing his words. She hadn't so much as blinked since he revealed the contents of the envelope. \n\n\"It's the key type from which all the other keys are made.\"\n\n\"My old university roommate is the Director of our technology lab.\" He added, by way of explanation, hoping his voice would provide the needed momentum for her to breathe again. \n\n\"So, I was able to reach him and I asked if I could borrow it. Fortunately, he didn't ask me why I was in need of it...\"\n\n\"This is only on loan, unfortunately. I'll need to return it tomorrow.\"\n\n\"But I thought maybe, for just one night, you could be...free.\"\n\nLooking at her eyes again he could see that she was still in shock. He worried again that perhaps he had gone too far. Still, he was desperate to remove this barrier for her; to eliminate a physical reminder of her bondage, if only for a few hours.\n\nHe leaned towards her and gently pulled her hair over one shoulder. Then, reaching carefully behind her neck, he pressed the chip firmly against the back of her collar. They heard a quiet beep and then a soft click as the latch released and the collar slipped free of Catrine's neck and sank into her lap.\n\nHe softly ran his fingers along where the collar had restrained her just moments before. He could feel her quaking under his touch. He placed his palms against her shoulders as if to steady her, but pressed his warm thumbs where the cold metal had been.\u2028\u2028\"Catrine. You are so much. You are everything.\"\n\nShe raised her eyes to meet his. Her expression filled with astonishment.\n\n\"Everything.\"\n\nHe said it again and again. Straight to her. Like a shot directly to her heart.\n\nSuddenly, she collapsed against him, air rushing into her lungs as she inhaled deeply. Her heart pounded in her chest.\n\n\"Do you want some time alone?\" He asked her. \"Do you need to rest?\"\n\nShe stilled against him for a few seconds. Nestled there, she felt snug and secure. Her body hummed with the feel of him all around her.\n\n\"No.\" She said staring up at him, her expression a dazzling combination of bewilderment and desire. Her voice quiet, but filled with empowerment.\n\n\"I want you to make love to me.\"\n\nHe took her hand in his, opening her palm and planting a kiss gently in the center of it. The gesture echoing her actions just the day before. \n\n\u2014-\n\n\"Come over here.\" He said to her after they had stepped into the bedroom.\n\nHe pulled her in front of him, standing together in front of a full length mirror. Wearing his t-shirt and without her collar, she had no signifiers of her slave identity. They were just two people bathed in the rich late afternoon light that streamed through the windows, painting them in shades of gold. He wrapped his arms around her and she leaned back to press herself against him. She stared at her own image, standing still for a long time.\n\nHe tipped her chin upwards, her eyes sweeping up to meet his brilliant blue gaze, before he coaxed her into a deep kiss. She sighed, turning her attention fully from the mirror, eager to return his kiss. Their tongues danced, entwined in their own passionate embrace.\n\nHe was caught up in the feel of her against him. Finally, away from the prying eyes and malicious intentions of the Kings, he could begin to express what she meant to him.\n\nHe watched her experiment and take charge of her own actions. He felt a powerful surge as he realized that she was meeting him openly in this place of their budding passion. It was such a gift to experience her this way.\n\nShe carried her kisses across his jaw and into the crook of his neck. She brought her hands up to stroke his chest, trailing her fingers across his broad shoulders and back to his collar bone. \n\nResting against him, she touched the lapel of his jacket and toyed with the buttons of his shirt, pausing there.\n\n\"I'm so nervous.\" She said with a hint of a smile. \"I've done this a million times, but I've never done it like this before.\" \n\nShe looked up at him as he smiled, almost reverently, back down at her before kissing the tip of her nose. Emboldened, she turned her attention back to his chest and gently pulled his jacket over his shoulders letting it fall to the ground. He watched her intently as she worked her way down his dress shirt, opening each button and sliding her finger along the newly exposed skin of his chest. She pealed the shirt off his shoulders letting it join his jacket on the floor. Then, she leaned forward and planted a small kiss on his bare chest, just above his heart.\n\nHe inhaled sharply at the intimacy of her touch. He needed to be slow for her, to let her pace guide them. But his heart pounded with anticipation and he was finding it nearly impossible to concentrate. It took all of his power to resist crushing her against him and tossing them both onto the bed.\n\n\"Oh, sweet girl.\" He groaned against her hair, \"You are just so amazing.\"\n\nShe raised her lashes to glance at him as he delivered a searing kiss to her lips, pushing his tongue deep into her mouth and stroking her tongue with his own. She met his lips with her own passionate force, her whole body quivering with sensation. She made quiet noises as his lips brushed past hers and down the soft skin of her neck, pausing where the collar had been before. \n\nShe shivered against his fingertips as he ran his hands down her body and under the hem of her shirt, his fingers skittering across her bare back and around her soft belly. He continued along the bones of her hips and across the soft swell of her behind, taking the time to feel her fully in his grip, squeezing her gently. She moaned softly, the added sensations from his touch intensifying their kiss, making her tingle everywhere.\n\nHe grabbed at the bottom hem of his t-shirt that covered her, pausing to look to her for consent. With her small nod, he carefully tugged it upwards, releasing his kiss just long enough to pull it over her head. Her hair cascaded back down across her shoulders and her back, framing her beautiful face once more. He grasped the shirt for only a moment more before he added it to the pile of clothes at their feet. ",
        "Finding one of the marks left behind by Arick's rough hands, he touched it gently before planting a tender kiss on the bruise. He sought out another, and then another, repeating the same action each time. Finally he rubbed each of her wrists softly before bringing them to his lips, kissing every corner of her until he was satisfied that he had released her from the King's awful grasp.\n\nShe heard a sound escape his lips as he took in the sight of her before him. It was an amazing sound; passionate and sweet and full of yearning. It conveyed something she realized she had never experienced before; More than just a quest for sexual dominance, there was an ache in his voice for her to need him too. She wrapped herself around him and hugged him tightly, seeking his embrace. The tenderness of his actions had made her feel vulnerable, but the security of his arms quickly comforted her.\n\nTaking a few steps backwards, Catrine slowly lead Ryan towards the bed. He barely broke their kiss as he reached around her to tug back the covers before easing her backwards onto the soft sheets. He paused for a moment, unzipping his pants and kicking them towards the rest of the clothes littering the floor before joining her in the bed. He gently pulled the sheet up to cover them both as he slipped in beside her. \n\nTheir faces now just inches apart, their bodies laid side by side in the cool sheets. The simple intimacy of sharing a single pillow sent Catrine's heart racing. Her breathing was quiet but quick as their eyes met. The stillness of their moment betrayed by the thrumming of her heart\n\nHe began exploring her with his fingertips, luxuriating over each detail, tracing along the side of her cheek and down her neck. His fingers ran along her collar bone and then gently cupped the soft side of her breast. He wanted to discover every part of her, memorizing each curve and crevice.\n\nCatrine's eyelashes fluttered as his thumb gently circled her nipple. He was gentle at first but quickly increased his pressure as he watched her expression change under his gaze. As his fingertips continued to move in slow circles, he stoked her desire. He wanted to draw out her pleasure. He wanted to feed her need for release.\n\nStilling his fingers, but keeping his hand cupped around her breast, he tilted his chin down and blew softly on each nipple. She arched her back and gasped as he drew out the dark pink bud with the cool air. He slipped down so he could lick across it with his warm tongue, the sudden change from cool to warm causing Catrine to gasp and reach for him. He nibbled playfully around the edges before gently sucking it between his soft lips, rolling the tip of her nipple against his tongue. \n\nShe moaned as the sensations washed over her. She rolled to her back so she could fully take in his ministrations. He followed her, never releasing her soft nipple from his lips, focusing all of his attention on that sweet spot, alternating between swirling his tongue around her and sucking softly. He moved from one breast to the other, using his fingers to lift, knead and pull at her gently, accentuating the movements of his mouth. He pressed his hips against her, unconsciously seeking relief from his own pressing need as she began writhing beneath him. \n\n\"Ryan...\" she called to him between short breaths. Her voice was thick with her desire. \n\nHe reluctantly released her nipple to kiss his way back up to her mouth. He gazed down at her as she sought the words to explain her desire. When she found none, he smiled at her and asked simply, \"More? Should I continue?\"\n\nShe swallowed hard as her eyes opened wide. Then she nodded emphatically and he couldn't help but laugh softly before running his lips along her neck and nuzzling himself into her shoulder once more.\n\nIn this position, Catrine could feel the full weight of his body pressed against her. It was deliciously intimate. Clad only in their underwear, she could feel the ripples of his muscles against her soft skin as he traveled across her body. It made her tingle everywhere they touched. She felt his warmth envelope her fully as his lips and hands freely explored her. \n\nHe was being so deliberate and slow in his actions which only fanned the desire that was growing inside of her. She arched her back against him as his lips returned to her breasts. This time, his hands traced along her ribs and across her belly, holding her possessively in his grasp.\n\nShe teased his hair as he left a trail of his soft kisses down her tummy, his tongue drawing a lazy circle around her belly button. The tickle of his whiskers brushing her skin making her giggle, her body undulating against him. It was as though every sensation he created was magnified by her desire. His touch, his fingers, his breath all stimulating her and enhancing her arousal.\n\nHer beautiful panties were on display before him as he kissed along the lacy satin trim. She let out a cry and pressed her arm against her face to try to muffle her passion as he gently tugged at their lacy edges, exposing more skin for him to taste. Ryan relished brushing his lips against the spot revealed to him, just above her clit. He knew that shaving her and baring her completely was a condition of her slavery, but he couldn't help but feel the delicious thrill of claiming her there. Her creamy skin was like silk and she quivered against his tongue. She was so sweet and he was so eager to possess her.\n\nJust as she thought he would delve a bit deeper to touch her where she hungered most for contact, he pulled her panties back into place. He smoothed the top softly back into place with his fingertips, teasing her as though he had taken his fill and was finished with his exploration. She groaned and tilted her hips towards him in encouragement, not comprehending why he had stopped.\n\nAs if in answer, he slipped his hand between her legs, urging her to open them slightly. Without pausing, he pressed his hand firmly against her core, feeling her pulsing against his palm. He ran his fingers up and down her slit as her body tensed against him. Though his movements were slow, she groaned as she finally felt the stimulation her body needed at her center. \n\nHe could feel the dampness of her arousal as he traced along her slit. He drew slow circles around the outline of her clit, teasing her with the soft satin of her own panties before slipping his fingers down again to repeat the same motion around the tiny bud of her ass. Touching her reminded him of fingering her at his desk the day before. His body clenched as he realized that nothing was holding him back today from taking her further and exploring her more deeply than he had the day before.\n\n\"Oh god, baby. Your response is amazing. Does it feel good to you?\" He practically growled as he grasped her panties in his hands, sliding them smoothly down her legs. She nodded once to answer before hiding her face again in her arms. \n\nHe balled up her panties and dropped them off the edge of the bed. Then, he crawled up to feast on her, kissing his way up her legs. He could feel her trembling as he traveled again across her body. He pushed her legs to open them wide, coaxing her to spread herself for him. Her lips were pink and swollen, glistening and wet. He pressed his fingers at her entrance, stroking again softly up and down, marveling at the evidence of her excitement dripping from his fingers, spreading it over her clit and between her ass cheeks. \n\nHe slipped a finger into her folds, working it in and out as he watched her respond beneath him. He stilled his finger, but didn't remove it, while his other hand sought to pull her open further. As he did this, he leaned forward and planted a soft kiss right at her center, tasting her essence. \n\n\"Oh god, Ryan!\" She cried out in response as he began to probe her with his tongue. Her fingers grasped at the sheets and then at his hair as he caressed her so intimately, taking his time to lick repeatedly across her folds. \n\nHe wanted to devour her; delving deeper into her sweet center, working to heighten and intensify the sensations he provoked. He grasped her hips so that he could steady her as his lips pressed directly to her clit. He sucked at it gently, taking it into his mouth and suckling it as he had her nipples. She practically bucked off the bed as she gasped again.\n\nHe glanced up at her and they briefly made eye contact. \"That feels so amazing.\" She said equally amazed by her own reaction.\n\nHer passion was so pure. He could tell she was already nearing her peak. He luxuriated in the sensation of it, as though the act was somehow an essential part of her being. A secret part that only he was permitted to see.\n\nIn the moment, it was hard for Ryan not to get heady with power. He was nearly desperate to take her for himself; to control her pleasure and claim her fully. To feast on her and pound her with the brunt force of his own desire. He wanted to bring her close to the edge, allowing her to experience the euphoric haze of her near-climax, without tipping her over the edge too quickly.\n\nBut, he forced himself back. For as much as he wanted to dominate her, he needed her to meet him in his desire. He wanted her pleasure, but he wanted it naturally; given by her own free will, not taken for himself.\n\nHe reluctantly released her clit from his lips and nibbled his way back to her lips, kissing her deeply and grinding his body against her. She could taste herself on Ryan's tongue as he slipped it into her mouth; the tang of her mixing with the spiciness of him. She was surprised that the flavor of it further stoked her own desire. It was so different than her past experiences, where she was forced by a previous Master to taste herself. They pointed to it as evidence of her submission, as though her wetness was proof that she enjoyed their forced humiliation. \n\nShe had never enjoyed that, but she certainly enjoyed this. \n\nRyan stilled as he realized that Catrine had stopped kissing him and appeared lost in thought. He was afraid he had pushed her too far. He rolled over to his side and was relieved when she immediately turned her face towards him as though seeking to follow him.\n\nHe ran his fingers across her hair and down her cheek. \"Should I stop now?\" He asked her seriously. \"That may be enough. I don't want to overwhelm you.\"\n\nShe considered his question for a moment as she stroked her fingers along his bare skin. The fuzz of his chest hair tickling her fingertips. The outline of his body silhouetted as the sun had begun its descent along the horizon. She pressed her body against him and her breath quickened as she continued their kiss where he had left off. \n\n\"No.\" She answered him between kisses. \"Don't stop now. Please.\"\n\nTucking her head against his chest, she reached for the elastic band of his briefs. Feeling suddenly frustrated by the clothing Ryan still wore, she sat up to pull at the waistband, tugging them over his hips before slipping them down his thighs. Ryan helped her by shimmying them down further until their bodies were both finally totally free of their clothes.\n\nThe energy sizzled between them again as she took in the majesty of his naked form beside her. Having removed the last physical barrier between them, their need for one another suddenly became more urgent.\n\nCatrine brushed her hand across the length of his cock and she felt his abdominal muscles clench beneath her. He kissed her hair and murmured encouragingly as she traced along the soft tip and then ran her hand again along the hard length. She wrapped her hand around him, increasing the pressure of her fingers as she began to stroke him up and down. She watched his breathing quicken as she took more of him in her fist before her fingertips grazed the heaviness in his balls. He groaned as his body responded to the sensations she provoked.\n\nHe watched her, mesmerized, as she focused all of her attention on pleasing him; Massaging him with both hands, gaging his reactions and adjusting her touch. She leaned down to tentatively lick him right across the tip of his pulsing cock, tasting the tiny droplet of liquid resting there. It was ecstasy. He was so hard, he didn't think he could hold out much longer.\n\nShe felt him place his hands in her hair. They were gentle, but held her firmly as she licked across the tip once more. She lingered there considering whether to take him deeper into her mouth.\n\nSuddenly, she stilled as memories from the previous night with Arick floated through her mind. A chill ran through her and she turned to face Ryan. He was jarred from his euphoria by her forlorn expression as she turned to him.\n\n\"I don't think I can do that right now...Take you in my mouth,\" she clarified. \"Is that okay with you?\"\n\nHe sat up to meet her eyes as he answered, \"That is more than okay. You only need to do whatever feels comfortable to you.\"\n\nShe looked as though she didn't believe him. So, he held her hand and looked deeply into her eyes.\n\n\"That was so intense. You have no idea, do you?\" He looked to her, considering what to say next as he evaluated her expression. \"It feels so good to be with you. I want you to do exactly what comes naturally to you; Exactly what you want to do. Because you want it, not because you feel commanded.\"\n\nCatrine's heart fluttered as he said this. She was empowered by his words. This was not a command, but a request. She gazed deeply into his eyes, feeling her breath catch as she whispered against his ear, \"I want to feel you deep inside of me.\"\n\nRyan shuddered at her words and pulled Catrine forward, letting the covers fall away as she rose up to straddle him. He curled his fingers around her hips, helping to steady her as she ground herself against him, rocking herself gently back and forth. He could feel her wetness coating him before she lifted herself slightly and eased him into the perfect position to enter her.\n\nShe was a goddess, arching her back and closing her eyes, letting out a deep sigh as she sank slowly onto him. She rocked herself up and down, again and again, pressing a little deeper each time until she was fully seated against him. Her tight channel gripping his cock as small spasms rocked her core and shivered their way across her body.\n\nFinally seated deep inside of her, he groaned as he struggled to maintain control. She was warm and welcoming and deliciously snug around him, just as he remembered from the day before. Only now, it was so much more satisfying as she was driven by her own desire and not by some perverse coercion to be with him.\n\nCatrine bit her lip as her muscles clenched. Each time she rocked herself against him, a new wave of sensation rushed over her. She relished the feeling of him sliding against her clit as she rocked forward, before sending a different pulsing sensation through her again as she pushed him back, rubbing against that hidden spot inside her.\n\nLosing herself in the rhythm, she rocked upwards, practically lifting herself onto her knees, letting him slip nearly all the way out of her before pressing herself onto him again. It surprised her how much she ached for him. She was being driven crazy by the feeling of him filing her completely and deliberately sank into him with more urgency each time she pressed herself down again. \n\nThey groaned in unison as Ryan pressed his body upwards to meet her thrusts, reaching up to grasp each of her breasts as they bounced up and down. His thumbs grazed her nipples renewing the sensations there and joining them to the jolts of electricity racing through her center. She cried out and Ryan watched transfixed as she was swept up in the pleasure. It was the most erotic experience he'd ever had; The connection between his need and her desire so evident in their movements. \n\nCatrine leaned forward to lay against his chest. Her breasts crushing against him as she settled herself on top of him, Ryan wrapped his arms around her, holding her tightly against him. The additional sensation of their bodies pressed together further fueling their arousal. He grasped her ass and pressed it down hard against him as he thrust deeper against her, intensifying their movement.\n\nCaught up in the fever of their movement and her body's subconscious recognition of her position, Catrine reached backwards to clasp her elbows, locking her hands behind her back and resting them just above her ass; a clear demonstration of her submission to her master.\n\nRyan couldn't help but groan as he felt her melt against him, offering herself up to him for the taking, opening herself to him to be plundered. It was so tempting and in the heat of their passion, Ryan almost grabbed her hands to pound against her with the full force of his voracious hunger. \n\nHe worked hard to resist the invitation. Instead, grasping her firmly, he rolled them over so that Catrine could lay on her back. As he did, he pulled at her arms so that she could touch him freely whispering words to guide her as they turned.\n\nFollowing his request, she wrapped her legs and arms tightly around him as he entered her again. The new position offering him even more access to her tight channel, clasping his hands under her back and pressing her against him. She curled her face into his neck and gasped as the intensity drove them both faster and faster. \n\nShe soared with the tremendous sensations, relishing them as it opened her heart to the excitement and the possibility of hope. She just felt...free. As she opened herself fully to these emotions, she chanted the one word, again and again, that she associated with this total uninhibited release.\n\n\"Ryan.\" \n\nHearing the sound of his name softly escaping her lips, Ryan's pace was almost frantic. He couldn't help himself. He wanted to take away all of her fear and her pain and leave only joy and love in its place. He moaned against her ear, biting her lobe and kissing at her neck, all the while, grinding himself against her with a ferocious hunger unlike anything he had experienced before.\n\nCatrine writhed against him, meeting him thrust for thrust. She felt his fingers returning to stroke against her clit as the rest of her body succumbed to the sensational feeling of him pushing deep inside of her. Her thoughts given over entirely to her most primal need. \n\nShe was right there, at the precipice, so close she could almost reach it. But, an invisible barrier blocked her way, frustrating her and causing her to whimper quietly against Ryan's chest. Sensing her unspoken need, Ryan's fingers stroked her deeply as he pushed their bodies together as one.\n\n\"That's it, baby\" He whispered, \"You're so close. You don't need me to command you.\"\n\nShe greeted his whispers with a cry, expressing both her need and her struggle to accept it.\n\n\"You can do it.\" He encouraged her with his words and his body. \"Release yourself, sweet girl.\"\n\nShe cried out again, as he continued to whisper to her. She closed her eyes tightly and focused every fiber of her being on the place where their bodies connected. Tears sprung from her eyes as she battled the last and strongest of her demons; unlocking the ability to free herself and finally tipping over the precipice and into her own climax. \n\nThe first spasms of her orgasm practically ripped her apart. She bucked up against him, digging her fingers into his back and biting down against his shoulder as the impact of it overtook her. Her nipples grazed his chest hair, amplifying the sensations in her core. His hands pressed tightly into the crevice of her ass, opening her more fully to her contractions.\n\nAs her inner muscles contracted tightly, she brought him to his climax along with her. He filled her deeply, growling out his own satisfaction into her ear. \n\nThey held each other as their movements finally stilled, laying quietly as their heartbeats slowed. Ryan looked down at her, observing her closely as she breathed deeply and re-opened her eyes, gazing up into his.",
        "She couldn't stifle the little giggle that escaped her lips, as she felt slightly embarrassed by the intensity of their coupling and the intimacy of their position. He smiled back at her, kissing her nose gently in reply.\n\n\"You okay?\" He asked her between kisses.\n\nShe regarded him warmly and then nodded her head once in reply, a soft smile spreading across her lovely face.\n\nHe rolled over and shifted their position so that she could lay comfortably against his chest, repositioning the covers around them so she wouldn't get cold. His fingers gently stroked the length of her back and he leaned down occasionally pressing his lips to her hair. \n\nCatrine sighed quietly as she snuggled against him. She had thought she would have felt sleepy after such an intense experience. Instead, she felt oddly energized; her body was alive and her mind felt sharp. She was whole again and she felt wholly cherished in his arms.\n\nLaying together, they began to talk. Their questions tentative at first. But this soon gave way to a long and intense conversation about their past, their present, and as much as Catrine dared to express, their dreams for the future.\n\nThey knew they should have slept. But, as they laid together for those few precious hours, they immersed themselves completely in each other, savoring the momentary perfection of just being together.\n\nAs the first light of the sun signaled the coming day, sleep finally began to overtake Catrine. \n\n\"Let's never leave this room.\" She mumbled groggily.\n\n\"So help me, I will never let you go.\" Ryan answered, but Catrine was already breathing deeply against his chest, finally succumbing to sleep."
    ],
    "authorname": "cleverfox",
    "tags": [
        "master",
        "slave",
        "submission",
        "pleasure",
        "collar"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/meeting-of-the-six-kings-ch-04"
}