{
    "title": "My Neighbor's Shenanigans",
    "pages": [
        "V6\n\n*****\n\n(David)\n\nI loved spring nights.\n\nIt was one of those perfect endings to a day. The air was warm and smelled of pine from the nearby grove. I was sitting on my balcony back porch sipping a whiskey and coke while looking out over the city. Since my house was on a hill, I had a perfect view of the skyline. The buildings were all lit up like Christmas trees and stood out sharply against the night sky. I was one of the first houses in a new housing project so I had very little light pollution and only a few neighbors which allowed me to enjoy these moments in peace and quiet.\n\nI had a few hours to complete my task so I sat there enjoying myself. After a few minutes a light snapped on in my neighbors back porch, seconds later a dark-haired shape opened the patio door and stepped outside. In an unusual situation our back yards were at a 90-degree angle from one another. She had the last house on her block and then the road curved up and around a few hundred yards to my cul-de-sac. This placed my yard higher than hers and because I had a balcony on my two-story house it let me see perfectly into her yard. We were both at the edge of the tree line so nobody else but me could see into her backyard and the houses on the other side of her were angled better and restricted my view so I only had an unobstructed view into her yard. She had a nice patio and a lagoon style pool with a built-in spa.\n\nA surge of annoyance passed through me as I saw her light and she stepped out. I disliked her intrusion on my solitude and hoped she would be gone quickly. She had moved in a few months ago and I'd seen her around the neighborhood but had never made contact other than a head nod or small wave. She was beautiful, with exotic looks and long, glossy black hair and golden skin.\n\nRight now she was wearing a black pencil skirt and a white blouse. I looked at my iPhone, 10:47. It was a little unusual to see her dressed in business casual so late on a Wednesday night but then again, I had no idea what she did, I just know I'd never seen her out this late before. While I watched she reached behind her and unzipped her skirt.\n\nYikes! I quickly realized what she was about to do, for a split second I was tempted to let her continue and I paused as she slipped out of her skirt and stood there with her bare legs showing. The shadows and angle prevented me from seeing too much but it was still exciting knowing she was standing there in her panties. Reason overcame me and I shook my head as I reached for the light switch on my back porch. I flicked on the light and her head immediately snapped to look in my direction. For a moment we stared at each other, then I realized I was silhouetted so she probably couldn't see me as well as I could see her. I reached over and stroked the Cannon camera mounted on a tripod next to me, her face moved slightly to track the movement and I can only imagine the thoughts racing through her head as she saw a man in the dark with a camera and an obvious giant lens mounted on it. After a second, I pointed to the skyline and her head turned to look. Thankfully the blood moon was easy to see, photography was a side hobby of mine and tonight I was photographing the blood moon in 30-minute intervals against the skyline. Later I would make a composite image out of all my shots in order to create a poster that would have multiple moons combined with the city nightline.\n\nShe watched the moon for a moment and then turned back to face me. She gave me a brief nod of her head before she turned around to head inside. I barely had time to wonder why she left her skirt when her back lights turned off. Immediately her inner pool light came on and seconds later she stepped back outside. Now her backyard was only bathed in the moonlight giving everything a silvery angelic look. She looked up at me as she walked to the pool. For a second, I was unsure of what to do but then a subtle understanding came to me and I reached over and switched off my own light. We watched each other for a few more moments before she nodded her head and turned away from me. In the dim light I watched as her blouse was quickly tossed off, in the dark I couldn't tell the color or style of her bra and panties but in seconds they're lying on the patio with the rest of her clothes.\n\nWith the moon behind her the only other light cast on her skin was from the glowing pool. I'm awestruck as she mounted the steps and proceeded to slip beneath the water. The ripples and light all combined to give me tantalizing glimpses of flowing hair and golden skin. Nothing ever came directly into view but it is all displayed, it is probably the most erotic thing I've ever seen. She swam back and forth unconsciously as I watched from afar. I looked at my camera, indecision arising in me. She's displayed a level of trust and implied good behavior from me and I didn't want to break that seeming unspoken understanding. We were neighbors and I planned on being here a while so I didn't want to cause any negative feelings between us but the level of beauty in front of me was astounding. I was torn by my artistic side and moral values. After a few seconds I grabbed my camera and focused on her backyard. I reason that I'd rather have my camera in hand just in case than regret a moment lost forever. I come to a quick moral compromise and prepare myself.\n\nPhotography is all about the moment, the capture. That one second where everything is just right and you see magic. If you're lucky you get a shot that shows people the magic you noticed. Some photographers stage these moments and sometimes they happen on their own. I'd hoped to capture one of those natural moments. I quickly adjusted my camera settings, focused on the pool and waited. The lens I had on my camera was a telephoto and was made for seeing long distance objects. At this range her pool filled my view, I could see as if I was standing next to her but the light and water ripples prevented me from seeing anything too sexual. I got quick flashes of silvery golden body parts, lean limbs and flowing dark hair.\n\nThen it happened, the moment. I pressed the button on my camera and held it down. Multiple shots snapped off in rapid succession, after the moment passed, I continued to watch her hoping for more magic. After 30 minutes or so she moved toward the steps to get out. I snapped off some last shots and raised my head from the camera. Dripping water, she left the pool and moved to pick up her clothing. She quickly grabbed all her clothes, turned her head toward me, gave me a quick wave and without waiting for a response moved into her house without a backward glance.\n\nI sighed as I thought about what just happened. I returned to my planned shoot but was distracted throughout the night.\n\n*****\n\nThe next week went by kind of slow. I felt guilty for the photos I took and I didn't want to download or look at them, I just let them sit in my camera. Multiple times throughout the week I almost deleted them but something held me back. I didn't really know my neighbor but I still felt like I'd betrayed a trust between us. At the same time, I justified the pictures to myself with thoughts like, \"I'm artistic,\" and \"I'm not a pervert,\" and the ever popular, \"I didn't plan on it, she's the one who came out swimming.\" Despite these justifications I knew in my heart that what I did was wrong on many different levels. I couldn't decide what to do so I did nothing. I hoped that future actions would tell me whether to delete the pictures or to download them.\n\nEvery night I glanced outside my window hoping to catch a glimpse of her. The next Friday a glimmer of hope went through me as I looked outside and saw a few paper lanterns hanging up in her backyard. I assumed this meant she was planning on being out back. Rationally, I knew she probably wouldn't repeat the skinny-dipping scene but I didn't care. I went to work and found myself preoccupied throughout the day wondering what she was planning. When I got home, I peeked into her backyard and saw it empty, I paused for a few seconds to examine my thoughts. Realizing I was becoming a little obsessive in my feelings toward her I knew I needed to calm down. The glimpse I had into her life was just that, a glimpse. It probably meant nothing to her and she'd most likely already forgotten about it. Resolved to put her out of my mind I made myself dinner and relaxed. I turned on the television to a Lakers game and settled in for the night. After a while I got up to grab a Blue Moon beer out of the fridge, I glanced out the window and noticed a glow from her backyard indicating her lights were on. I stood there for a moment contemplating my resolve.\n\nJust a quick peek I told myself.\n\nYeah right! So much for resolve.\n\nI went to my back window and glanced outside, darkness had fallen but her backyard was filled with soft glowing light from the lanterns and her pool light was on again. She had her back to me and was talking to two men, all three were dressed up as if they'd just come from a night on the town. The two guys were each wearing black slacks, one had black hair and was wearing a white dress shirt, the other was blonde and wearing a turquoise dress shirt. Both were lean, clean cut and looked like they belonged in a fashion magazine. My neighbor was wearing a dark red summer dress that had spaghetti straps and ended mid-thigh. It was sexy and elegant without being over the top. She was wearing black high heels and had her hair piled on top of her head in stylish curls while falling to either side of her face. The shadows made the muscles on her body stand out and from where I was standing, I saw the definition in her legs and arms. She looked like a toned version of Kim Kardashian. After a few seconds her head turned and looked at my window, she only glanced for a second before she turned back to her friends. Was she looking for me? I knew with no lights on inside it would be impossible to see me.\n\nI wondered what they were doing down there. Was it a friendly gathering? Were others coming? The sight of the two guys cooled my lust a bit, surely one of them was hitting on her. Just as I decided to turn away, I saw her friends move into the house and she looked back up at my window again. \n\nStrange, why was she so interested in my house? On impulse I reached over to the light switch for my porch. I flicked it up and held it for a second then turned it back off. The effect was instantaneous, she smiled and turned to face her friends who had just come back out. They handed her a fresh drink and then stood there chatting. \n\nWeird, I'm not sure what silent communication passed between us or possessed me to let her know I'm watching but I sensed that she wanted me too. I quickly grab a bar stool and cracked a window so I could hear, then sat down to watch.\n\nWith the window open I heard the distant murmur of music softly playing from her back yard. She continued to chat with her guests and I was starting to get the impression that it was only the three of them and nobody else was coming. I heard a light laugh and saw her reach out a hand and place it on the arm of blondie. After a second her fingers slid off his arm in a trailing manner. Lucky man, I guessed he might be the chosen target of my neighbor. Just as that thought crossed my mind, I heard another laugh and watched her playfully slap the arm of dark-haired guy.\n\nInteresting...\n\nI watched for a few minutes as she flirted with both men but I quickly got bored, I wasn't sure what I was supposed to be watching. Who knows, I may have imagined the whole unspoken communication thing between us. Just as I set my feet on the ground to go back to my basketball game, she turned her back to them and walked to the edge of the pool. Slipping out of her high heels she looked back and said something that they both laughed at. She turned back toward the pool and with her back to them so that they couldn't see, blew a kiss in my direction. She correctly assumed I was still watching. Spellbound, I watched as she reached into her hair and pulled out some pins letting it fall free. Turning her head she said something to her friends and without hesitation she reached down, grabbed the hem of her dress and pulled it over her head and off. In a second, she was standing there wearing only a pair of purple panties.\n\nWow! Both men couldn't take their eyes off her and I couldn't blame them because neither could I, she let the dress fall from her fingers to the concrete and stood there for a minute. I couldn't take my eyes off her chest, her breasts were large and firm with light brown nipples. Moving to the edge of the water with a small smirk on her face she dove in. Both guys had their jaws dropped as she came to the surface facing them. She laughed and said something and instantly both men started taking off their clothes. Swimming back toward them she climbed the steps, now I can see her panties are a string bikini cut and the backside barely covers her ass. I can see most of her cheeks and half of the crack of her butt. While her friends are looking down as they shuck out of their pants, she looked over her back toward me and wiggled her butt. I smiled and reached toward my light switch, checking to make sure neither guy is watching I quickly flick my light on and off again. Smiling, she looked back at her friends, they still have their heads down while stripping down to their underwear. Quickly my neighbor girl reaches behind her, hooks a thumb in her panties and pulls the backside down to below her butt. Then went back to chatting with her friends with them being oblivious to the fact that she is mooning me. Despite the fact that she is flashing me her butt I'm jealous of the up close and personal view each of them is receiving. With the lanterns and moonlight, I can only see her body in partial light and shadow, it's a maddening tease. Her butt looks spectacular even from a distance and I'm fascinated by the water gleaming off her cheeks. I chuckle to myself as I realize how crazy this girl is.\n\nHer friends are finally in their underwear, each one wearing a black sport short and walking to the pool. She backs away and her hands surreptitiously pull up the backside of her panties as she eases back into the water. Her friends jump in and they play around for a few minutes, with each of the guys chasing her and trying to grab her while she keeps moving away and laughing. Finally, they work together and manage to corner her. Dark haired guy manages to grab her and pull her toward him for a kiss, her arms go around his head as she melts into him and kisses back. For a second everyone freezes and the only sound is the music playing softly, they're standing in water that just reaches the top of her panties. Blondie slips up behind her and hooks his thumbs into her panties and then submerges and pulls them down below the water, a second later he surfaces with her panties in his hands. He tosses them to the side of the pool and runs a finger down her back. She breaks the kiss with dark haired boy and turns to face blondie, cupping his cheek and then pulling him in for a kiss. Dark hair keeps his hands on her hips as the other two kiss and I see blondie stroke the front of her body with his hands. Soon enough she breaks the kiss with blondie and then looks back and forth between them. They talk and she nods her head and they all wade to shore, in their eagerness both men are ahead of her as they reach the steps, then my neighbor girl looks back toward me and quickly waves before either guy notices. She steps out of the pool and I have one last look at her beautiful ass before I watch all three of them walk into her house. \n\n*****\n\nMy earlier doubts were erased from my mind. Even though I knew I shouldn't have taken the pictures of her she really didn't seem to mind me seeing her. I would see what I had and give her any good shots that I captured. The next day I went through the shots from the previous week and worked on my blood moon composite forcing myself to ignore the other shots I'd taken. After a few hours of highly distracted work I finally had a composite of the blood moon skyline that I downloaded and made into a canvas. I paused to look at my camera card, the moment of truth, nervously I downloaded the rest of the images of her into a separate folder. I felt like a kid at Christmas and my heart was beating rapidly as the computer told me it's downloading, tapping my foot as the bar went from 18% to 39% to 53% to 82% to 97%. It paused at 97% for a few seconds and I had to resist the urge to scream. Finally, it signaled all downloaded and I quickly opened the files and drop them into a browser. I scanned through them all and then went back to the ones that I thought would be best, clicking them open... WOW! Sometimes I am a damn good photographer and sometimes the image is just so beautiful any idiot can make it awesome. These shots were a combination of the two, I had caught her beauty perfectly. One was a full shot of the pool but showed her under the water, she had just pushed forward and her arms were by her side, her hair streaming back to just past her shoulders. The pool and moon light had combined perfectly to give her an otherworldly glow and the ripples had smoothed to just the right moment to allow you to see a fairly clear shot of her entire body, like looking through shadowed glass. Her ass was beautifully defined and she looked a goddess in her element, it was extraordinary.\n\nHappily I scrolled through the rest of the shots, some were good, some were not. Then I hit one of the last ones and found gold once again. On the second shot she was halfway out of the water on the steps, water streamed off her body and once again the glow of the pool and moonlight turned her body ethereal. Her black hair clung to her back and most of her butt was above the water. She had just glanced to the side so you could see the profile of her face and a small smile played on her lips. In my mind I imagined all the emotions that she may have had, whimsy, seduction, playfulness. All these feelings and more crossed my mind and I got hard imagining the different scenarios that might have happened due to that smile. In each of these improbable scenes we ended up in the water writhing in ecstasy.\n\nAfter indulging in my fantasy for a few minutes, I cleaned up both images and added them to the folder with my moon poster. I went to a website that prints canvasses and quickly dropped them into a work folder. After ordering a giant canvas of the skyline for my house I ordered one of each of the other shots sized 20x30. I sent the moon picture to my house and then put in her address and sent her a note to accompany her order.\n\n\"I'm leaving the originals of all the pictures I took on a CD in your mailbox. I'm sorry if these pictures upset you. You were just too beautiful.\"\n\nI pressed send, then I burned her pics to a CD and deleted all the files on my computer. I decided to wait till my own picture was delivered and then leave the CD in her mailbox. Satisfied I'd met my own moral compass while satisfying my artistic urges I closed my laptop and got up to make myself a meal.\n\nThe next few days I couldn't get my mind off the neighbor. The images of both nights were imbedded in my mind and I was constantly looking out back but never saw her. I pulled into my driveway three days later and had a package on my doorstep, given the shape I knew it was my photograph. I backed my black Ford Explorer SUV out of the driveway and drove back down the street. I could see the two canvasses I sent her on the doorstep. Stopping the car, I reached into my center console and grabbed the CD. I dropped it in her mailbox and hurriedly get back into my car and drove back to my house. My mouth was dry and my heart was pounding and I stayed in the seat as I parked in the driveway and shut off the engine. I was getting really nervous as I thought about the situation. At the time I was caught up in the moment of what had happened. In my mind I imagined a playful and friendly personality that coincided with mine. What if that wasn't the case? Jesus Christ! I had taken pictures of her naked in her pool. By any definition of the word, most girls would find that creepy if not outright criminal. What the fuck was I thinking? She can call the police and have me arrested. I sat there banging my head gently against the steering wheel and contemplating all the ways this scenario could go bad. Fuck the police, what if she sick's her two boyfriends on me? That's all I need is two idiots banging away on my doorstep and clamoring for my blood. I decided I'd better not chance it, I needed to go back to her house, steal the CD and pictures from her doorstep and pretend none of this ever happened. I started the car, backed out and drove back to her house... just in time to see her holding the mail in one hand with the pictures balanced against one knee and unlocking her door.",
        "Really god? Are you that bored?\n\nShaking my head, I drove past and decided to go eat a steak dinner since it might be my last meal as a free man.\n\nI drove to a nearby Texas Roadhouse and ordered myself the biggest ribeye they had with a loaded baked potato and double whiskey on the rocks. The waitress, Beth, is cute and bubbly with light brown hair and a cheery smile. She looks like she's barely old enough to drink herself, but she fills out her jeans rather nicely and her shirt is tight enough that I have to wonder how she put it on. Her ample chest is doing its best to push through the flimsy material and it's obvious she's not wearing a bra. She takes my order with cheery efficiency and quickly leaves and comes back with my drink order. I nurse my whiskey while I wait for my food and the noise of the restaurant fades into a mindless droning as I sit there contemplating the stupidity of my recent actions.\n\nMy steak arrives and I cut into it making sure it's medium rare. Hot juice flows out of the meat as I cut off a slice and slowly chew. I give Beth a nod of approval and she leaves to tend to her other customers. I add a touch of salt and proceed to enjoy myself to the best of my ability. Beth comes by a couple of times to check on me but there's nothing else I need. I finish and leave enough cash on the table to cover my bill with a generous tip and with a sigh I walk back to my SUV. As enjoyable as the meal was it was time to go face the music, I drive home and park in my driveway, my lights are out and it's getting dark but there is still enough light to see. Everything is quiet, no broken windows or scowling neighbors waiting for me so I get out and go to the door, as I'm unlocking it, I realize I hadn't gotten my regular mail. I go to my mailbox and grab the mail and then hurry inside. I flick the lights on and drop my keys and wallet on the counter as I look through my mail. On top is a small notecard. I open it and see four words.\n\n\"Love the pictures. Sarah\"\n\nThe next few days were pretty routine but for some reason I can't keep a smile off my face. I'm constantly thinking of Sarah and wondering what will happen next. Every day I get home and look out the window constantly. My normal routine consists of a workout then a run, then make myself dinner, throughout each phase I looked for a sign from Sarah. One day I was getting my mail after coming home and I found a package wrapped in my mailbox. It felt like clothes, I knew I hadn't ordered anything lately so I was a little surprised. I checked for a mailing label and found nothing. Shrugging, I walked inside, opened the package and found a pair of black running shorts that look like they'd reach mid-thigh on me with a dark red sleeveless muscle shirt, both were Under Armour style material. This was a little weird, I had a pair of sweats that I wore for my runs and workouts, they were old, beaten grey sweats that I had cut up for use in the gym. They looked like hell but they were comfortable as fuck, I had no idea where these had come from. I looked through the rest of my mail and found another notecard, I quickly opened it wondering if Sarah had anything to do with the new clothes.\n\n\"I hate those sweats and if I see them again I'm going to hit you with my car. Love your arms.\"\n\nWell damn, that explained things. I smiled as I read the note, this girl really was crazy.\n\nI shrugged as I walked in my room and changed into the new athletic clothes. Looking in the mirror I checked myself out, not bad, my body was well defined from all my workouts and running. The shirt left my arms open and I admit, I was very prideful of them. I worked them out hard to get good definition and Sarah wasn't the first to compliment me on them. The clothes were form fitting without being too tight, which was good because I hated constricting workout clothes, she actually chose really well for me. With my black hair and a military style haircut the red shirt really stood out. At 28-years-old with pale blue eyes and a neatly cropped goatee I'd been told that I looked like I belonged in an action movie. \n\nI worked out and then went for a run like I normally do. I'd never seen her watching me but she must pay attention enough to know my routine so I hoped she enjoyed the fact that I was wearing her chosen clothes. I ran four miles and then cooled down by walking the last half-mile back home. I kept an 8-minute pace and with the walk back the whole trip took me just under 40 minutes. Walking into my house I grabbed a water from the fridge and as I passed my back window I glanced outside and my heart skipped a beat. There was a small fire in her firepit, she must be planning to go outside! I waited a few minutes but she never appeared so I was a little disappointed as I walked into my bedroom. Crossing the door, I caught a quick scent of lavender, pausing, I sniffed the air but couldn't catch the scent again, that's strange because I have nothing in my house that should smell like lavender. Shrugging, I continued into the bedroom and looked over to my bed. It's dark wood, with a panel back and drawers under the foot, it also has posts at each corner that stand about a foot above the mattress. My comforter is light grey and is highlighted by my navy-blue sheets. I kept my bed well-made throughout the day so the item in the center of it stood out like a light bulb in a dark room.\n\nMy jaw dropped as I walked toward my bed. As I get closer its unmistakable, a pair of purple panties were laying in the middle of my bed.\n\nMy mind raced as I quickly understood the implications of the situation. I looked around and paused to listen. I didn't hear anything for a minute or two, so apparently Sarah had come and left. That explained the lavender scent, I ran through a quick list of scenarios, was it Sarah? It had to be, I didn't know anybody else that would do this. Would Sarah do this? Hmmmm, not sure, this appears to be a step farther than I would imagine but she does seem to have a wild streak. Why did Sarah do this? Just to give me her panties? That made no sense. \n\nI picked up the underwear to inspect them. They were plain purple cotton string bikini panties, they looked just like the ones she wore the other night. Looking around to sure nobody is watching I brought them to my nose for a small sniff. I realized it was a stupid precaution but I feel a little perverted sniffing a pair of strange panties. I detect a small hint of chlorine which reinforces the thought they belonged to Sarah. But why was she here? I looked around the room and then walked around the house, I almost ignored the bathroom but decided to check it anyway and that's when I saw the notecard on my dirty clothes hamper.\n\n\"I'm burning your sweats. Left you payment in the bedroom!\"\n\nI laughed as I read the note. Unreal! I needed to change my thoughts of her too crazy Sarah instead of just Sarah. I can't believe it, she really broke into my house just to steal my sweats.\n\nWait!? Burn them?!\n\nI raced to my back window to look out at her firepit, the fire had died down but sure enough, now that I was looking closer, I saw some charred edges of clothing and burnt fabric. Holy shit, she really broke into my house to steal my sweats and burn them. I found myself torn between laughter and concern, my crazy neighbor may really be crazy. I kept watching the back for a few more minutes but she never came out. Eventually I decided to continue with my day, I checked the rest of the house and didn't find anything unusual till I passed my laptop computer. My mouse was upside down, I'm a little bit obsessive compulsive so I know how I leave everything and I've never left my equipment like that. I flipped it over and jiggled it to make my screen come alive. I kept three folders on my computer desktop, School, Work, and Private. My Private folder is where I keep all my files of a personal nature, we'll just say that I wouldn't want my mom opening it. A quick glance showed my Private folder was renamed 'I like.'\n\nI groaned, that was not good, most of the pictures in that folder were of public nudity, exhibitionism and girls tied up. I opened the folder to check it, I scrolled through the folder and noticed a file was renamed. Since the rest were all numbered, the files named \"Sexy\" & \"Love this\" stood out like a sore thumb. I clicked the first image and a picture of two nude girls in a pool kissing popped up, the second had a girl tied spread eagle to a bed. I blew out a breath and shook my head, I was beginning to think this girl was insane. I looked through the rest of the folder but didn't find anything unusual so I closed the browser and went to the back window. Her backyard was dark and silent and even though I waited a while she never came out.\n\nOver the next few days my routine was normal. I stopped by the athletic store and bought a couple more pairs of running shorts and sleeveless shirts. I kept the shorts all black and got a few different color shirts; navy, dayglow yellow, and black. I kept watching out back but never saw her again and received no further notes.\n\nI realized that she played the game on her own terms.\n\nThe next Friday I could barely contain my excitement during the day. I was hoping for a repeat of last week but when I got home, I was disappointed. I looked out back throughout the night but her backyard remained dark and empty the whole night.\n\nI was making lunch on Saturday afternoon when I heard the distant sound of music from her backyard. I'd actually given up hope and hadn't looked in her backyard all morning but I walked to the window and gazed outside.\n\nThere was my crazy neighbor girl wearing a black bikini and laying in one of her lounge chairs, she had good ones, the kind made of red wood and canvas. She was lying face down on a blue towel and her top was undone. She had pulled her bikini into a wedgie to give her cheeks more of a tan. Next to her on a small redwood table was a book, a glass with ice cubes and a yellow drink, and an iPod with headphones going to her ears as she relaxed. I spent a few minutes watching her but nothing happened, I cracked the window so that I'd hear if she happened to swim. As I turned around to leave her in peace, she lifted her head and waved. For a split second I thought she was waving to me then I noticed somebody coming out her back door.\n\nHer friend was a blonde female wearing small black shorts and sandals with a white sleeveless crop top and sunglasses. They chatted and Sarah gestured to another lounge chair and a blue towel folded neatly underneath the small table. The friend laughed and nodded and went to get the lounger and move it next to her. When she grabbed the towel, and laid it out I saw Sarah look up at my window. Knowing what she was looking for I flicked my light on and off really quick. Smiling, she looked back at her friend just as she finished, then the blonde girl sat down and chatted, after a few minutes Sarah reached out and put her hand on blondie's knee. I heard a small laugh and then blondie looked around and saw my backyard. She nodded toward my house and Sarah just waved a hand dismissively. After a second blondie shrugged and tugged off her shorts to reveal a pink and white striped thong panty. She reached up and brought her crop top over her head and quickly tossed it next to her shorts. Unlike the bottoms, she wasn't wearing anything underneath her top. Her tits were beautiful, firm with light golden skin and small pink nipples and from what I could tell she was a C size. She laid down on her stomach in the lounge chair and I got to admire her smooth tight ass, I don't know why but with her blonde hair, light skin and small tight butt she reminded me of a peach. She looked the definition of the word summer.\n\nShe must have a real thing for blondes because a few minutes after she laid down, Sarah got up and started putting oil on her back. She didn't bother putting her top back on, and my mouth went dry as I finally saw my neighbor's tits in the light. This was the first time I'd seen her in well-lit circumstances, her light brown skin glistened with oil and combined with the sunlight made her body gleam. Her breasts were proud and firm and even at this distance I saw that her nipples were hard. Her legs and arms were toned with muscles that rippled as she moved, her long dark hair was tied in a ponytail behind her and she was wearing dark sunglasses. Without taking my eyes off of them I grabbed a chair and took a seat. I'd taken to leaving my camera on the counter next to the back window so I grabbed it to get a better view. It wasn't the huge lens that would put me right next to them but it did magnify the scene considerably.\n\nSarah was rubbing oil into blondie, languidly rubbing her shoulders and lower back. She smirked and said something that made blondie shrug. Sarah grinned and looked at my window as she moved down her friend's legs. Since blondie had her face down, I knew she couldn't see anything so I flicked my light on and off again to let her know I was still watching. She gave a small nod of her head, then went back to concentrating on her friend. She rubbed her thumbs into her legs, gripping her skin to work the oil in and I heard a moan from blondie. Sarah spread her legs to get a better angle as she massaged her and after a few minutes she had massaged blondie all the way to her ass and without hesitation she moved to her butt, kneading her fingers and rubbing the oil deep into her skin. Blondie moaned and shifted her ass back and forth.\n\nIt was fascinating to watch as blondie was seduced. I had no idea if either girl had done this before but it was easy to see the progression from my neighbor to blondie. Without hearing the words, I could still see the interplay between them, paying attention to the giggles and moans as they talked. Sarah spent a lot of time rubbing oil into blondie who didn't mind. Much too soon for me, Sarah finished and playfully slapped her ass making her squeal and laugh and then Sarah said something else. Blondie cock her head and acted hesitant, but Sarah took control and grabbed her arm and slowly tugged her over. Blondie let herself be pulled to her back so that she was facing Sarah. For a few seconds they both stared at each other and then Sarah said something, blondie nodded and then Sarah began to work oil into her front. She started with her legs, taking her time like she did on her back. Even from a distance I could see Blondie was tense at the beginning but within seconds her body relaxed as Sarah worked the oil deep into her legs, once again I heard small moans. In seconds blondie's ass began to shift back and forth and her legs spread apart. Sarah gave a wide grin and shook her head but kept rubbing. She worked up to her stomach and I saw her trace around her panties. Blondie shifted again but kept her legs spread wide, scooting up, Sarah changed tactics and rubbed oil on her breasts while caressing her nipples. Blondie's lips parted as she tilted her head to the side and gave a small moan. Looking through the camera, her nipples were rock hard and her was breathing was coming in pants. Sarah had a smirk on her face as blondie was getting worked up, with Sarah so intimately straddling her legs it was easy to see from the constant shifting of blondie's legs and hips how turned on she was. After a couple of minutes Sarah abruptly stopped and stood up. Blondie brought her legs together and shifted her ass and practically yelled, \"You're done?\"\n\nI laughed when blondie immediately put her hands to her mouth, I'm sure she didn't mean to be so loud or sound so upset about Sarah stopping but it was obvious she was caught up in the moment. Sarah just smiled and held out her hand and tilted her head at the pool. Sheepishly blondie nodded and took her hand as she stood up and they went to the pool, walking down the steps into the water together. For the next half hour, I watched them play and splash in the water, carefree in their semi-nudity while Sarah paused in her seduction. She laughed and smiled as they relaxed in the cool water.\n\nAs I guy, I appreciated the moves Sarah was displaying, under the guise of helping she'd gotten blondie all worked up, now she was pretending it was just a normal thing. I literally saw the change in her attitude when she decided to tease again.\n\nShe came up behind blondie and grabbed her boobs making blondie squeal and laugh as she tried to pull away but Sarah held her tight. Blondie grabbed her hands and tugged them off and waded away while Sarah laughed and chased her around the pool. Every time she caught her, she would grab her butt or boobs and blondie always laughed and pulled away but each time she waited longer and struggled less. Once Sarah caught her in the deep end and blondie tried to hop out off the side of the pool. Sarah grabbed her hips to hold her and promptly bit down on her butt, blondie gasped and closed her eyes. For seconds she didn't move as she was held and Sarah kept her mouth latched onto her left cheek. Soon enough she let go and pushed away into the water as blondie opened her eyes and looked back at her. Sarah was grinning and blondie's hand flew to the red mark on her ass. Blondie pulled herself the rest of the way out of the water and stuck her tongue out at her making Sarah narrow her eyes and start swimming back toward her. Blondie yelped and ran around the pool and Sarah got out of the water and chased her so blondie jumped back in trying to get away, in seconds Sarah was behind her and blondie tried to escape out of the side again. Sarah caught her and grabbed her hips again and bit her on the opposite cheek. Once again blondie froze as Sarah bit her ass. She closed her eyes and whimpered as Sarah held her butt tight. This time Sarah hooked her thumbs into her wet panties and pulled them down while she bit her. Blondie didn't offer any resistance or protest when her panties slid down her legs. When she pulled them off Sarah let go and pushed off the side away from her into deeper water. Blondie looked over her back and down at the matching mark on her other butt cheek. Sarah just grinned and held up her panties and twirled them on her finger. Blondie swallowed as she pulled herself out of the water and stood facing her on the side of the pool, her body glistening from the dripping water.\n\nShe didn't move as Sarah inspected her, her pussy was hairless, her lips pink from arousal. Sarah never took her eyes off as she moved to the center of the pool and stood in water that came to her stomach. She lifted one finger and beckoned blondie toward her. Without a word blondie moved to the steps and entered the water moving toward her. Sarah put her hands under the water for a few seconds and I saw her bend down a little, she came back up and had her swimsuit bottoms in one hand. She tossed both of their bottoms to the side of the pool. Blondie paused and then licked her lips hesitantly and looked back at Sarah. There was a slight indecision on her face as she anticipated the line she was about to cross. If she kept moving forward there'd be no coming back and she knew it. Sarah didn't push and gave her a moment to think as she studied her, she was in the water to mid-leg and the reflection of light put her entire body on display, no shadows protected her. A few strands of her blonde hair clung to her chest, her nipples were erect and pushed out, her lips were slightly parted and her body tense with nervous anticipation. Drops of water like tiny diamonds slid down her body to between her thighs as the water highlighted her glistening sex. Without thought I snapped a picture of the two of them as Sarah finally moved forward and closed the distance between them, she got to an arms distance and held out her hand. It was an unspoken simultaneous invitation and commitment. Blondie looked down at the hand and then up in her face, slowly, tentatively she reached out her hand and placed it in Sarah's. Gently Sarah pulled blondie toward her and kissed her. At first, blondie didn't know what to do with her hands as Sarah kissed her. Sarah cupped her ass and I saw Sarah using her tongue as they kissed, she kept their bodies tight, their breasts pressed together. They had moved up in the water so I finally had a clear view of Sarah's ass, it was heart shaped with perfects curves and lighter traces of skin that had been covered by her bikini. Soon blondie's passion took over and she wrapped her arms around Sarah, running her fingers through her hair as they continued to kiss. They broke apart and Sarah kept trailing kisses down blondies neck. Blondie threw her head back as Sarah went lower and lower. She reached her tits and brought one hand up to massage a nipple as she took the other one into her mouth. Blondie let out a moan and bucked as Sarah teased and licked her tits. Soon I saw my neighbor slide a hand under the water, blondie stiffened and her fingers suddenly gripped Sarah hard, her knuckles turning white. Sarah leaned away as she continued to work her fingers underwater. She had to be fingering her the way blondie was squirming and moaning. In no time at all blondie cried out and hugged Sarah, her hips bucked as she wrapped her arms and held tight to the dark-haired girl. Her head slumped into Sarah's shoulder as Sarah brought her hand back above water. She wrapped her arms around her and pulled her into deeper water, stopping when it got to chest level as they held each other for a few minutes.",
        "Soon Sarah began moving again, she went to the edge of the pool and gently disengaged herself from a reluctant blondie. She reached out and patted the cement and said something. Blondie hopped up on the cement with her butt on the edge her legs in the water. Sarah moved between her legs using her hands to move them apart. She gave a wicked grin as she looked up at blondie and using the water to help her, she hopped up and gave blondie a quick kiss on the lips, after she came back down, she used one hand to push her blondie back till she was leaning on her arms. Without any hesitation Sarah moved between her legs and started licking her pussy. Blondie threw her head back again and moaned loud enough to worry me that everyone in the neighborhood might hear. I thought Sarah might say something but this only encouraged her and she kept teasing blondie with her tongue. Minutes went by before blondies arms trembled and she was forced to lay back on the warm concrete. Sarah took her time as she licked her friend, blondie was biting her lip and her hips would occasionally squirm while she kept clenching and unclenching her hands as Sarah continued her assault.\n\nThroughout the entire time in the pool I had been taking the odd picture here and there. Whenever a nice moment happened, I snapped off a few shots. I planned on being as discrete with these pics as I had with the first group so I didn't have any anxiety about what I was doing. I looked at the clock and realized an hour had passed and I hadn't noticed.\n\nI focused back on the girls. Sarah must be really good because the way blondie was moving it was obvious, she was about to have another orgasm. She was twisting more and more and Sarah was forced to bring her hands up and hold her legs. Her head thrashed as she brought a hand to her mouth and bit down on her knuckles. Seconds later I heard a muffled scream as she arched her back and her body locked. Sarah kept her head between her legs for a few more seconds and then blondie went limp. Sarah lifted her head and smiled, she pushed out into deeper water as blondie recovered. Blondie was facing the other way and she glanced up toward my house so I reached out to the light switch and flicked it on and off three times in a congratulatory way. She looked back at blondie to check she wasn't watching and then looked back toward me and raised her fist in a victory pump. She ducked under the water and swam to the steps of the pool and got out. She kept her back to me as she went over to her bikini and slipped on the bottoms. I loved looking at her ass but I'd been hoping to see her full frontal. I'm not sure if she planned it or it just happened but in all the pool play, she had managed to keep her sex hidden from me. Through angles and under the water I only caught glimpses of between her legs and it was driving me crazy. She kept her top off though so I was treated to a continued view of her magnificent chest. She walked over to blondie and bent down to shake her. Blondie stirred and looked up at her and they talked, she took her hand and helped her up. Blondie walked towards her clothes but Sarah pulled her toward the house, holding hands as they walked inside.\n\nInstinctively I knew they were done with the pool. I was beginning to understand Sarah and I knew she'd finished with her show for the day.\n\nI went to my computer and downloaded the pictures, I went through them and found two perfect shots. The first was when blondie was just entering the water, it was a full frontal and showed her body to perfection. Sarah was to the side and below blondie, the water was a few inches below her ass showing her entire backside, her hair clung to her back and both of them sparkled from the droplets of water on their bodies. Blondie was looking at Sarah with a perfect bedroom face, lips slightly parted, nipples erect, with obvious arousal playing across her features. The second had had them in a lovers embrace, it was a side angle of them kissing with their tits pressed together and their hands wrapped around each other. I sent the photos to the print store with a next day delivery and started to close my browser. I thought about something really quick and changed my mind to look up one other item. I found it and quickly ordered it to be delivered to my house overnight. Finished I closed out of my browser and went back to my day.\n\n*****\n\nOn Monday I got lucky and happened to get off work a half-hour early, I drove past her house and saw the packages out front. When I got home, I found the other package I had ordered too, I opened it to make sure it was the right one and check that it was undamaged. I stood in my kitchen drinking a can of coke and thinking about how I'd give her my gift. I thought back to her breaking into my house and I decided that turnabout was fair play. I would go and sneak the package into her house. Smiling, I quickly walked back to her house and grabbed the pictures off her front porch. I gave a quick knock and waited a minute just to make sure she wasn't at home. I assumed the house would be locked and my attempt would be cut short but I figured it was worth a try, surprisingly, her door opened and I stepped inside. I paused in the front foyer to listen but everything was quiet. I looked around, her house was decorated in all dark wood and white leather furniture. Everything was perfect and gleaming, she had a black lacquer and glass cabinet against one wall filled with assorted vases and glass and wood art pieces, the carpet was a pristine white. I absorbed everything and took stock of the layout. I'd seen this one before when I had been house hunting in the neighborhood so I knew where all the rooms were. I wanted to leave her gift in her bedroom. I walked toward the back of the house and opened her bedroom door. As soon as I opened the door, I heard water running from the master bedroom shower. Stunned I froze, holy shit, she was home. I needed to leave now, I turned around but paused on second thought. My heart was beating a mile a minute, but I'd come this far. By her actions we appeared to have some sort of odd relationship going on. I figured I might be able to leave the gift without her going crazy. Steeling myself, I quickly went to her bed and laid out her present.\n\nIt was a hot pink thong bikini from wicked weasel. It was very small and thin, I'd seen the ads for it and I knew when it got wet it became very sheer.\n\nI laid it out so that she'd see it as soon as she walked into her room and turned to leave. Just as I got to the door I paused again. I knew I shouldn't peek in on her but at the same time I knew she'd assume I had. Considering how insanely stupid I was acting at the moment I might as well go the distance. It wouldn't make a difference on her opinion of me either way. Mouth dry and with my heart pounding I moved to her bathroom door. Like most people, she'd left it open since it was connected to her own bedroom.\n\nI slowly got to the edge and peeked around the corner. She was in the shower with her back to me. Her bathroom was all marble and her shower had glass doors. A little bit of steam fogged the doors but she was still clearly visible. Her face was under the nozzle of the shower and her hands were in her hair. This was the closest I'd ever been to her before and the sight of her ass made me instantly hard. I admired her for a few moments and then pulled back. As much as I wanted to do things with her and enjoyed the game, I didn't want it to go bad because I was overzealous. Stealing a look might be okay, but I was pretty sure I'd be in trouble if she caught me, I instinctively knew that discretion was part of the game. With a resigned sigh, I quickly backed away and made my way out of her house and back to mine.\n\nI stood in my kitchen for a few minutes thinking about what I'd done. Once again, I wanted to bang my head against something, this girl was bringing out something crazy in me. Emotionally I kept telling myself that everything she'd done up to now had justified what I was doing, but rationally I knew that was stupid. All it would take is one small cross of a line she didn't want crossed and I'd be arrested or worse. I sighed and decided to workout, one way or another I was already committed so I might as well put my mind on something else. I changed and headed to my garage gym. I pounded away on weights for an hour for my arms and back. After I finished, I opened the garage to stretch and get ready for my post-workout run. I started my run and when I passed her house, I purposely kept my gaze forward, never turning to look toward her house at all. My muscles were shaking from the adrenaline going through them. I kept telling myself if she was going to do anything it already would've happened. I had to assume she wasn't mad, or was at least okay with what I'd done. I continued my run and looped back to the house for my cool down. As soon as I entered, I paused to listen and smell, trying to sense if she had been there. I didn't smell anything or see anything out of place as I went through my house. I was strangely disappointed but relieved when I didn't find anything.\n\nDays went by and I didn't see her in the backyard or get any notes from her, I was starting to panic. Maybe I had crossed a line, maybe she was mad. I began to feel sick to my stomach every day. One day I resolved to go to her house and apologize after I got home from work. I pulled into my driveway and got my mail and went inside. There was another notecard in my mail, hurriedly I opened it.\n\n\"Saturday- Pool party- my house.\"\n\nReassured I smiled. All of a sudden, the day was a lot brighter.\n\nSaturday came and I was up early. The morning dragged as I did a few chores around the house and waited to go to Sarah's house. She didn't say a time so I kept looking out back for people to show up, I cracked the window to listen for anything from her house. I figured I'd wait until a few others were there because I didn't want to be too eager. I sat down to watch a little television and wait for the time to pass. Around one o'clock I heard a few voices from my back window. I went and checked her house and saw about a dozen people lounging around her pool. Perfect, it was finally time to go meet the neighbor. I walked to my door and stopped to check myself in the hallway mirror. I was wearing black board shorts and a bright pink muscle shirt. It was the same color as the bikini I bought her. My dark hair was black and cut close in a military haircut style. I had pale blue eyes and a neatly cropped goatee. My body was well defined from all my workouts and running and I'd been told before that I had 'roguish good looks.' I slipped on a pair of black converse shoes, grabbed a bottle of Tequila and walked to her house. I rang the doorbell and within seconds she answered the door.\n\nWe looked at each other and both of us smiled wide. We stood that way for a minute, just checking each other out. She was wearing the pink bikini I'd bought her and it looked incredible. The top had two triangles that conformed to her tits tightly and left an obscene amount of tanned flesh on display. The material was a little see through when dry and I could just make out the darkness of her nipples under the clingy fabric. The bottom triangle was barely bigger than the top triangles and the bright color in contrast to her tanned skin only highlighted her sex. The fabric was tight enough and small enough that I knew she had to shave her pussy completely or at best had a small stripe. Her stomach had just the barest hint of muscle definition and her legs were toned and smooth. There was a slight trace of lighter skin on the sides of her bikini showing that the one she was wearing was considerably smaller than her previous one. She let me look and gave me a once over, after we both finished we looked in each other's eyes again.\n\nShe looked over her shoulder and scanned the room before looking back at me.\n\nShe stepped toward me and half-closed the door to speak without being overheard.\n\n\"Few quick rules. One, nobody here knows about my fun stuff and I want to keep it that way. Two, you're not my neighbor, you're a friend from the gym. Three, I don't want anyone knowing you live next door. Got it?\"\n\nI nodded.\n\n\"Do you want to know my name?\" I joked.\n\nShe waved a hand, \"I already know that, I went through your mail David.\"\n\nMy jaw dropped and I stood there stunned. She just smirked and kept talking like nothing she said was out of the ordinary.\n\n\"Also, I love the bikini!\" she said.\n\nThen she reached up and brushed her lips against mine, I tried to kiss her back but she pulled away with an impish grin, turning around she looked back over her shoulder.\n\n\"Now follow me,\" she said.\n\n\"Anywhere you want,\" I replied.\n\nShe giggled and walked back into her house. I had a hard time walking because I couldn't take my eyes off her ass. The strings of her top disappeared under her full black hair and the strings on the bottom disappeared into her ass cheeks. Only the tiniest strip of pink fabric could be seen wedged in her ass and she walked with a slight sway in her step. Her muscular legs held my attention almost as much as her ass as she walked barefoot into her kitchen with me following. She introduced me to some friends as she took the bottle of tequila from me and poured a round of shots. There were five or six people in the kitchen and the same amount or so outside. There were four guys and the rest girls and everyone was wearing shorts or bikinis. She lined up a few shots on the kitchen island and called out if anybody wanted to do one. A blonde girl in a yellow bikini squealed and yelled \"me, me\" as she ran into the kitchen. I instantly recognized her as blondie from the other day in the pool. I looked at Sarah and she gave me a quick wink. I looked around to see if any of the guys were either of her \"special\" friends. She saw me looking and must've understood because she gave a quick shake of her head.\n\nSarah handed out lime wedges and salted people's hands, she mouthed the words \"only her\" to me when nobody was looking. A Mexican guy and girl who looked to be a couple joined us and the five of us did shots of tequila.\n\nAfter everyone took their shot, Sarah grabbed two Corona's, handed me one then snagged my arm and introduced me to all of her friends. In between movements between people she gave me information about everybody.\n\n\"Joseph and Gabrielle have been a couple for the last two years and are engaged.\"\n\n\"All the rest of the guys here are gay so be careful, they might hit on you,\" she said laughing.\n\n\"The only person I've had sex with here is Shayna, the one in the yellow bikini that you saw me with the other day. It was her first time with a girl and I think she's got a tiny crush on me now, but she still likes guys.\"\n\n\"The rest are just friends and stuff, they know I'm an exhibitionist but not anything else.\"\n\nI raised my eyebrows, \"They know you're an exhibitionist?\"\n\nShe looked at me sideways, \"Not like I've been with you or anything. Just that I like to flash my boobs or panties when we go out and stuff. I think everybody here has seen my tits, that's why nobody was really surprised to see me in this thong today even though it's the first thong bikini I've ever worn.\"\n\nI smiled and nodded understanding, we stopped next to the pool.\n\n\"You have good taste,\" she said.\n\n\"I try.\"\n\n\"Well thank you, I've always wanted one like this but they're hard to find. Where did you get it from?\"\n\n\"Online, Wicked Weasel,\" I said.\n\n\"Ahhhh, never thought of that. Kind of stupid of me now that I think about it. I'm sure there's tons online.\"\n\nI shrugged noncommittally.\n\n\"I'm just happy you wore it,\" I said.\n\nShe winked at me.\n\n\"And that you haven't had me arrested...\"\n\nShe let out a heartfelt laugh.\n\n\"You were really worried about that?\" she asked.\n\n\"Considering those first pictures I wasn't sure how you'd react. I mean I wasn't trying to be creepy or anything but I'm pretty sure some girls out there would have freaked if they'd gotten the pictures I sent you.\"\n\n\"Maybe some, but I think most would be flattered, I know I was. I hung them up in my bedroom. Besides, it wasn't like you didn't make sure I saw you. That was smart, I mean, if you hadn't have done that and then I noticed you out there taking pics or sending them to me without being warned then yeah, I'd have freaked, but since I kept swimming I obviously didn't care about whatever you saw.\"\n\n\"True, still, it was a risk.\"\n\nShe shrugged, \"Yeah it was, I'm glad you took it.\"\n\n\"Me too.\"\n\n\"It's funny, I was planning on dropping by your house soon anyways.\"\n\n\"What for?\" I asked.\n\n\"After I saw that camera I figured you must be a photographer, it looked expensive, a lot more than a hobby camera.\"\n\nI laughed, \"Just a little bit.\"\n\n\"I was going to ask you to take some pictures of me, but then you sent me those other ones and our 'relationship' just kind of took off on its own. It's lucky it turned out good, I wasn't sure about you at first.\"\n\nShe held up her hands and did quote marks with her fingers at the word relationship. I knew what she meant, I wasn't quite sure what to define us as either and told her so.\n\n\"What's to make of me? I'm normal,\" she said.\n\nI rolled my eyes at that.\n\n\"Normal people don't break into other people's house to steal their clothes.\"\n\n\"Look who's talking. At least you were gone, I was taking a shower and I sure you got an eyeful.\"\n\nI gave her my best innocent look, \"Maybe a little peek.\"\n\nShe grinned at me.\n\n\"Well anytime you want me to take pictures of you just let me know,\" I said.\n\n\"I'm going to take you up on that, I have some lingerie that I want some nice pics of.\"\n\nI raised an eyebrow.\n\n\"It's a cute little garter belt and stockings.\"\n\n\"What else?\"\n\nShe leaned close and whispered, \"Nothing, just the garter and stockings.\"\n\nI swallowed and my dick twitched a little as I got hard, she had glanced down at just the right moment and noticed my shorts move.\n\nShe let out a small laugh, \"Looks like somebody likes that idea.\" She grabbed my hand, \"C'mon, let's get in the pool. You need something to cool you down.\"\n\nI rolled my eyes and shook my head but let her drag me to the pool steps, I pulled my hand free for a second and stripped my shirt off and tossed it onto a lounger then followed her into the water.\n\nWe walked till the water was chest level and then faced each other sipping our beers and talking about little things for another 20 minutes or so. I kept trying not to glance down at her bikini which had become very see-through in the water. She saw my glance once and looked down at herself.\n\n\"This thing doesn't leave much to the imagination does it?\"\n\nI hadn't known her long but I knew that she was enjoying my attention, she'd been teasing me so much I decided to call her out on it.\n\n\"No it doesn't, but I'm guessing you like it that way or you wouldn't have worn it in front of all these people.\"\n\nShe smiled and took another sip of her beer.\n\n\"Want to have some fun?\" she asked.\n\nI sighed, I had a feeling this girl's fun was going to be wild.\n\n\"Sure.\"\n\n\"Let's go skinny dipping,\" she whispered.\n\n\"Why did I know you were going to say something like that? Okay, I'm down, but let me go get us some fresh beers first.\"\n\nShe handed me her empty bottle and I waded to the side and pulled myself out. I smiled at a few people and nodded as I passed them and grabbed a few fresh Corona's from the fridge. When I got back to the pool, I noticed two other girls had hopped in the water but Sarah was by herself near the far side. I looked closely at her and noticed that she appeared to be naked. She saw my scrutiny and held up her hand, it had her bikini in it. I looked around, everybody was talking to other people and nobody had noticed her, yet. It was fairly clear through the water and it would be obvious to anybody if they glanced at her that she was naked. I shook my head and smiled and bounced into the pool and waded next to her. She took a beer from me and handed me her bikini.",
        "\"Put this in your pocket and don't give it back.\"\n\n\"You sure?\" I asked.\n\n\"No matter what.\"\n\n\"You asked for it. Does that mean I get to keep my shorts on?\"\n\n\"Well somebody needs to get us fresh drinks. Besides, I'm sure I'll get those shorts off later.\"\n\n\"You sound pretty confident of yourself. What makes you think I'm that easy?\" I teased.\n\n\"What makes you think I care if you're easy or not? I know you like tying a girl up, how do you know I don't like tying the boy down? I've broken into your house before, if you leave you might just wake up one night and find yourself tied to the bed so that I can have my way with you.\"\n\nLaughing, \"I'm more of a dominant personality, I do the tying.\"\n\nShe smirked and lifted an eyebrow, \"It's not like I planned on asking you.\"\n\nI narrowed my eyes, \"Be careful little girl.\"\n\nShe bit her lip and smiled again, \"You know, I've been tied up a few times and loved it, I've never had the chance to do it to a guy but now that I say it, it sounds hot. Just imagine if you woke up with me standing over you naked and you tied down. I'd ride you all night and have my way with you however I want.\"\n\nShe closed her eyes and squeezed her legs together as a small jolt went through her body. When she opened them, she looked at me and just lifted her eyebrows.\n\n\"Just imagine the possibilities,\" she said. \"If you let me do that, I'd let you return the favor...\" she trailed off.\n\nWe both stayed silent for a minute and I considered the scenario. It might be hot to let her do whatever she wanted to me.\n\nShe watched my face as I was thinking and suddenly said, \"There'd be lots of oral.\"\n\nI looked up at her and she took another swallow of beer and smiled like the Cheshire cat.\n\n\"You know you're playing with fire,\" I said, reaching out I stroked her nipple and she gasped.\n\n\"Did somebody forget they were naked?\" I asked. I cupped her breast as I teased the nipple, she took a step back but I kept pace with her. She clenched her free hand into a fist and gave a small whimper, I trailed my fingers down her body and teased her with a light trace over her pussy.\n\n\"Oh god,\" she cried through clenched teeth.\n\nHer free hand shot down and grabbed my wrist to hold it in place, I couldn't run my finger up and down anymore but I was still close enough that I traced back and forth. She didn't push my hand away as I stroked the top of her sex, just above her lips. She panted hard as she tried to gain self-control. Finally, she rotated her fingers to interlace with mine and brought them back above water.\n\nShe nodded her head once in acknowledgment that I'd won that round, I nodded back and took a sip of my beer. I didn't mind her games but I wasn't a push over and I needed to remind her of that. The way I saw her legs fidgeting back and forth underneath the water I'm pretty sure she got the message that I could play the game just as well as her.\n\nShe swallowed and I saw her look past me, looking over my back I saw her blonde girlfriend wade into the pool and head toward us.\n\n\"Let's have some fun,\" Sarah said. \"Follow my lead.\"\n\n\"Hey babe,\" Sarah said to blondie. \"Shayna this is David, David this is Shayna.\"\n\nWe each reached out and shook hands. Blondie finally had a name, it felt weird to know I'd seen her in an intimate setting and she didn't know it. Up close Shayna was prettier than I imagined. She appeared to be in her mid-twenties and she had crystal clear blue eyes to go with shoulder-length light blonde hair. A small upturned nose and pouty soft lips combined with a mischievous glint in her eyes promised wild and unforgettable fun. Her breasts were full and at least a D cup. She had a tiny waist and I noticed a glint from underneath the water that indicated a pierced belly button, she also had a small diamond piercing one nostril. Despite the time spent in the sun her skin was only lightly tanned with slightly whiter patches of skin showing on the edges of her bikini.\n\n\"I've been waiting for Sarah to introduce us but she's been keeping you all to herself,\" Shayna told me.\n\n\"Only because I wanted to keep you all to myself,\" Sarah told her in response.\n\nShayna looked at Sarah with a wide smile, they stood motionless for a few moments. If I hadn't had seen them in action the previous week, I'd have thought they were just being playful, but I knew they were lovers. I cleared my throat and broke the spell between them.\n\n\"Well, I don't know about anything else but I'm glad to meet you.\"\n\nShayna nodded and looked between us.\n\n\"So what have you two...\" she trailed off and her eyes went wide as she took a closer look at Sarah.\n\nA smile crept across Sarah's face.\n\n\"Oh my god... Are you naked?\" Shayna whispered. She looked around and behind her to see if anybody was close enough to hear.\n\n\"Skinny dipping time babe,\" Sarah said.\n\nShe looked back and forth between her and me with a confused expression.\n\n\"Have you two...? Are you...?\" she started to ask.\n\nI saw a pained look quickly cross her face, a small flash of jealousy?\n\nI shook my head, \"Nope, never.\"\n\nThis time I was positive I saw relief cross her face as she looked back at her friend.\n\nShayna had a bit of a crush on Sarah, I wonder if Sarah realized it. Hell, I wonder if Shayna realized it.\n\nShayna's mouth dropped, \"You little slut,\" she whispered.\n\nThey both lapsed into giggles and grabbed each other's hands.\n\n\"Join us.\"\n\n\"Us?\" Shayna looked over at me and glanced below the water, she could easily tell my shorts were still on.\n\nI shook my head, \"I was going to, but somebody needs to be able to get us new drinks.\"\n\nShayna turned back to Sarah, \"How long have you been like this?\"\n\n\"About 10 minutes now.\"\n\nSarah pulled her close and reached behind her, with a quick glance to make sure nobody was paying attention she tugged on the string tied behind her neck. Shayna's eyes went wide but she didn't stop her. With no resistance, Sarah took the initiative and reached behind her again and slowly tugged the string in the middle of her back. Shayna looked in Sarah's eyes as her top was slowly pulled off. The water level was just above their chests but this close it was easy to see both Sarah's dark nipples and Shayna's pink nipples, I'm not sure if they were hard from the cool water or from arousal but both were clearly excited. Sarah pulled the top away and handed it to me, both girls looked at me as I glanced down through the water at their tits.\n\n\"Enjoying yourself?\" Sarah giggled.\n\n\"Pretty sure you'd both be offended if I wasn't,\" I responded.\n\nThey both smiled as I openly stared, Sarah looked at Shayna and over her shoulder and circled till her back was against the crowd and their fronts faced me, then she dipped down and moved to shallower water.\n\n\"What are you doing?\" Shayna asked.\n\nIn response Sarah stood up facing me, the water was no longer above her tits, it was around her belly button. My jaw involuntarily dropped as I had my first close-up unobstructed view of Sarah's tits. Sarah reached over and pulled Shayna to a standing position too. Shayna didn't resist but her eyes went wide then closed as she bit her lip and stood up. After a second, she opened them again and held a sheepish smile on her face as she exposed herself to someone she'd just met. Her face began to turn pink but I had to give her credit, she didn't try to cover up. They both stood with their hands at their sides letting me see their tits. Sarah wiggled hers suggestively while grinning like mad and Shayna kept looking down, then at me, then at Sarah and clamping her lips shut and gritting her teeth all in alternation. She was obviously torn between embarrassment and excitement and she couldn't make up her mind. Sarah however, reveled in her beauty, she watched my eyes as she teased me with her perfection. After a minute she reached over to Shayna and tugged the strings on her bottoms. Shayna went to grab her bikini but Sarah shook her head.\n\n\"Nu uh babe.\"\n\nShayna groaned but moved her hands back to her side, tight lipped she gave Sarah a playful dirty look.\n\n\"God, you are so bad,\" she said.\n\n\"And that's why you love me,\" Sarah said as she pulled her bikini bottoms away and tossed them to me to put in my pocket.\n\n\"I am not getting out of the water no matter what you say,\" Shayna said with mock ferocity making Sarah laugh.\n\nI looked around the pool and one of the groups had finally noticed what was going on. The couple and two other girls were pointing and after a few seconds walked to the edge of the pool.\n\nA petite, light skinned, brown eyed, brown haired girl asked, \"Sarah, what the hell are you two doing?\" \n\nSarah ducked back into the water up to her neck and swam toward me.\n\n\"Skinny dipping!\" she cried out. \"Come join us.\"\n\nShayna shrugged and ducked under the water and followed her while the others watched with dropped jaws.\n\nThe four of them all looked at each other and shrugged. Joseph looked at Gabrielle questioningly. I could tell by his grin he really wanted to go skinny dipping and I didn't blame him, there were two beautiful girls swimming naked and it looked like three more were about to join in. She shrugged and nodded and they went to a side table. I swam to the side of the pool and pulled the bikinis out of my pockets and tossed them next to my shirt. I pulled myself out of the water and walked to my lounger to put their bikinis on it.\n\nGabrielle looked at me, \"Wait a minute, aren't you going skinny dipping too?\"\n\n\"I was leaving my shorts on so I could get fresh drinks for everyone.\"\n\nShe looked at her Joseph and then put her hands on her hips and smiled at me, \"That made sense before we all decided to strip. Now any of us can get drinks. You have any other excuses?\"\n\nI chuckled reluctantly, I tried to think of something real quick and failed, \"Nope, I guess not.\"\n\nI headed back to the water.\n\n\"What are you doing?\" she asked.\n\n\"Just going to hop in before I strip.\"\n\n\"No way, the rest of us are stripping out of the water, you do too.\"\n\nI looked at the other girls, they'd paused to watch our exchange and they all nodded agreement.\n\n\"Well damn,\" I muttered.\n\n\"That's what I'm talking about.\" Sarah yelled from the pool as she pumped her fists in the air. \"Take it off cowboy, I want to see some skin baby.\"\n\nEven Shayna raised her hands, twirling them in a circle above her head, \"Woot, woot.\"\n\nI rolled my eyes but gave in to peer pressure and tugged my shorts down, I didn't delay and in seconds my shorts were at my feet, exposing my lightly tanned skin. I trimmed my groin area so all I had was a light stubble surrounding my semi-hard 8-inch cock.\n\nSuddenly all the noise stopped as the girls checked me out. I turned red as I stood there letting them see me.\n\nA small voice whispered \"Oh my.\"\n\nI looked to Gabrielle and she had a smirk on her face and a raised eyebrow as she checked me out.\n\nJoseph cleared his throat and she gave me one last look and turned back to him, she shrugged at his look.\n\n\"Like you haven't been looking at girls all day,\" she muttered.\n\nI ran and hopped in the water, splashing down next to Sarah and Shayna. I turned around and the three of us watched the others strip. I looked over at the other girls as they were both pulling off their bikinis. Neither appeared at all self-conscious as they undressed. I remember Sarah introducing them as Ryan and Kerrie with a \"K.\" Kerrie was the petite brown-haired girl, she had on a Maroon bikini with a bandeau top, when she slipped it off and stood up you could see the small brown racing stripe between her legs. Her breast were small and firm, matching the rest of her body, she had a cute little ass that she put on display as she turned around to toss her swimsuit. She was definitely cute and, in any bar, she'd be a little hottie but she wasn't quite up to the bar set by Sarah and Shayna. Her friend Ryan was a dirty blonde with pixie cut hair. She had a crooked smile and brown eyes. She was on the tall side for a girl with a willowy body, her slim figure and creamy white complexion gave her a youngish appearance. She was the least self-conscious as she dropped her swimsuit without a thought. She had a black and gold trim two piece that covered dark pink nipples and small breasts and a smooth waxed mound. She wasn't as curvy as the other girls but her body had the muscular definition of a runner with taut legs and stomach muscles. Both girls walked to the steps and waded into the water next to us. They were smiling and holding their beers as we waited for the last ones.\n\nWe all looked to Joseph and Gabrielle. They had stopped to chat for a few seconds so were behind everyone else in ditching their clothes. Gabrielle looked at everyone in the water.\n\n\"Just making sure we're on the same page and there isn't going to be any drama,\" she explained.\n\nWe all nodded understanding, it takes a lot of trust to allow your significant other to swim with four other naked girls.\n\nDespite the fact that I was lusting after Sarah and she was drop dead gorgeous I will admit to having a thing for Gabrielle. She fit the mold that I have a weakness for. She was short, with curly midnight hair that went to the middle of her back in a swirl of darkness, she had smoky, dark brown eyes and soft-pink plump lips that contained a promise of hot, dirty secrets not told in the light of day. Her body was plush, with a tiny waist but wide hips and a full D chest. She was the stereotypical hot Latina that you'd expect to see in a music video, her bikini was a red halter top with black booty short style bottoms. She caught my eye as she turned to face us. Out of the corner of my eye I saw her boyfriend drop his shorts and jump in the water without missing a beat but Gabrielle was ready to make a show of it. She glanced around and then without looking at anyone directly she reached behind her and untied her back strings, she wiggled her chest a little as the fabric fell free and I caught a quick flash of a dark nipple. I looked around, everyone had stopped to watch her, she oozed sex appeal and even the girls were affected a little. She reached behind her neck and pulled the top over her head and let it drop through her fingers to the ground. She closed her eyes and stretched her arms above her head with a sigh and a small smile. She knew we were all watching and she loved it. She opened her eyes and looked around at us as she brought her arms down, she kept that same small smile as she hooked her thumbs into her bottoms and bent at the waist to push them down. Once past her knee's gravity took over and she let them fall to her ankles as she straightened up. She stepped out of her bottoms and she looked at everybody as she stood there. She met each one of us with eye contact as we each took in her natural beauty. She had a small, neatly trimmed patch of black curls between her legs and as she sauntered toward the pool, she swayed her hips enticingly. Instead of jumping in from the side she moved toward the steps and walked toward us with feigned nonchalance.\n\n\"Someone knows how to make an entrance,\" Sarah quipped.\n\nEverybody burst into laughter and Gabrielle smiled.\n\nHolding up her hands and pointing her fingers at her body, \"It's all about the presentation,\" Gabrielle said. \"When you're surrounded by all kinds of sexy you have to make sure you're still noticed.\"\n\n\"I'm pretty sure you'd never be unnoticed,\" I said.\n\nShe looked at me, \"Flatterer.\"\n\nSmall laughs and smiles from everybody and the ice was broken. Joseph talked to Kerrie and Ryan and me, Sarah, Shayna and Gabrielle moved to the other side and started a conversation. After a few minutes, the girls began talking about shopping and I decided to swim to deeper water. I ducked under the water and swam the length of the pool and came up underneath the diving board. I treaded water for a while and decided to grab the board. Holding it with my arms above my head I was able to relax and enjoy the view and the water. Both groups were still talking but Sarah looked over at me and smiled. She swam toward me with lazy strokes and in seconds she was in front of me.\n\n\"Having fun?\" she asked as she treaded water in front of me.\n\n\"Definitely.\"\n\n\"I think you have the right idea,\" she moved forward and wrapped her legs around me and was able to keep her head above water without any work.\n\n\"Hey, my idea, get your own spot.\"\n\n\"Suffer,\" she laughed. \"My pool.\"\n\n\"I guess I'll just have to make the best of it,\" I said as I glanced below the water to her wonderful body.\n\n\"I'm sure you'll manage,\" she said drily.\n\n\"It's a tough life.\"\n\nWe stayed silent for another minute, just enjoying the feel of each other's bodies and the coolness of the water.\n\n\"I think Gabrielle and Shayna like you.\"\n\nI quirked an eyebrow at her.\n\n\"They both keep asking about you. You want them?\"\n\nMy expression went to quizzical and she read the look on my face perfectly.\n\n\"Look, I know you want me and believe me, that's going to happen,\" she said. \"You and I are going to have lots of fun, I promise. But that doesn't mean you can't have fun with them or that I won't have fun elsewhere too. You've seen how I am, I enjoy life, don't try to change that.\"\n\nI hadn't thought about it till that moment but she was right, I barely knew her, I knew I wanted her but I had no idea what I wanted beyond that.\n\nShe watched my face as I digested her words.\n\nI nodded my head and smiled.\n\n\"So when you say we're going to have lots of fun...\"\n\nShe grinned and wiggled her legs tighter around my torso. She wrapped her hands behind my neck and leaned in to kiss me. Her lips met mine with a teasing energy, if I let go of the diving board, we'd sink underwater so I let her kiss me. She ran her slim tongue against my lips and darted between them to playfully lick my tongue. As she wiggled against me, I felt myself growing hard, I knew she could feel it since it was pressing against her ass. It encouraged her because she squirmed even more. She rubbed her sex against me, teasing me slowly up and down while she kissed me with increasing passion. Her hands stroked the back of my head, running through my hair and caressing my face. I let out a groan of frustration as she kept me helpless, working me into a tormented state. She pulled back from her kiss and looked in my eyes, my cock was so hard it hurt and I wanted to grab her and carry her into her house and rape her all night long. She smiled at me with a slow, maddeningly, knowing grin and adjusted her wiggling. She glanced over her back and then back at me, her lips parted and her tongue moved out just a little. She conveyed an enticement of promises in that small motion. Once she felt my length pressed against her, she shifted to just the right angle and slid down, impaling herself with me. I let out a groan and she dug her nails into my shoulders.\n\n\"Shut up,\" she whispered.\n\nI froze and she adjusted till I was fully inside her. By outward appearances she was just wrapped up on me but we were actually fucking right there in full view of everybody.\n\n\"Has anybody noticed?\" she asked.\n\nKeeping nonchalant I looked around and then back at her and shook my head, \"Not even looking at us.\"\n\nShe kept her body still while she flexed her muscles around me. I groaned and caught myself, two can play that game. Keeping still I flexed my muscles inside her, her eyes widened and she grinned at me. Now it was a contest, who could work the other one better. We stayed as still as possible as we each sought to focus our underwater movements. I had to hold on to the diving board so she had an advantage and she used it. Her fingers traced lines across my chest as she wiggled her butt and ground against me. I was losing this contest very quickly and she sensed it. She shifted more and more and I stopped flexing because it was taking all my control to hold us in place and not to cum. She was relentless as she continued her hidden assault.",
        "\"Your ass is so mine,\" she grinned triumphantly.\n\nWe were so focused we didn't see that Gabrielle and Shayna had swam toward us, they were six feet away before we noticed.\n\n\"What are you two doing over here?\" Gabrielle asked.\n\nI growled, I knew she wouldn't be able to continue with them so close. She sensed her victory over me was about to be halted.\n\n\"Fuck,\" she muttered with clenched teeth and narrowed eyes. \"This isn't over.\"\n\nI sighed in relief and told her, \"Nothing, just chilling in the deep end.\"\n\nShayna frowned as she studied us, I saw her eyes go wide and I knew we were caught.\n\n\"Oh my god, you sluts,\" she said to Sarah.\n\nGabrielle looked confused as Sarah gave a devil's grin.\n\n\"What?\" Gabrielle asked.\n\n\"They're doing it, right now,\" Shayna said.\n\nI tried to look innocent as Gabrielle looked at us.\n\n\"Doing wh...\" Gabrielle's eyes went wide. \"Oh my god, you little sluts.\"\n\n\"I already said that,\" Shayna said.\n\nBoth girls were treading water next to us and watching wide eyed. I was still inside Sarah but she wasn't wiggling as much. She was obviously enjoying the attention and only wiggled enough to keep me going but not enough to let me finish.\n\n\"We need to stop,\" I said through gritted teeth.\n\n\"NO,\" Gabrielle cried out just a little too loudly. She put a hand to her mouth as she realized how vocal she'd been. We all looked around but Joseph and the other girls hadn't noticed. She reached out a hand and grabbed the diving board near me.\n\n\"I'm getting tired of treading water,\" she said.\n\nShayna took the cue and swam to the other side and grabbed hold. Now I had one on either side. They each were using one hand to keep up so one hand was free. Sarah looked at each of them.\n\n\"You want me to keep going?\" she asked them.\n\nEyes sparkling, they each nodded. I groaned, I was going to lose this battle and I knew it. I tried to get her going, I flexed my hips as strongly as I could without drawing attention to us.\n\nI had the satisfaction of making Sarah gasp and she closed her eyes but my victory was short lived, when she opened her eyes she wiggled and pushed back against me. In no time her hands were moving underneath the water. We silently waged war for a few minutes then all hell broke loose. Gabrielle used her free hand to run her fingers up and down my butt. That almost had me shooting my load right there but then Shayna pressed her tits against my side and I couldn't take it. Between the heat from Sarah fucking me and the double pair of cool breasts pressed to my chest and side I was in overload. I came and my muscles clenched, Sarah felt it and tightened her legs around my torso not letting me pull away. Gabrielle clenched my butt tight and Shayna pressed against me as she felt my body spasm.\n\n\"That's so sexy,\" Shayna whispered.\n\nAll three girls were smiling at me and leaned back as they sensed I finished.\n\nWe finished just in time because a second later Joseph called out.\n\n\"What you guys doing over there?\" he called out.\n\nBoth girls and him were looking at our group and slowly wading toward us.\n\n\"Just talking about...\" I started to say.\n\nSarah interrupted me, \"About what we should do next. How about a game of Marco Polo?\"\n\nEveryone looked at each other and shrugged.\n\n\"Why not?\" The girls said in unison.\n\n\"My house so my rules. Anybody caught has to give a kiss to the catcher.\"\n\nEverybody looked to Gabrielle and Joseph, Gabrielle tilted her head.\n\n\"I can live with it if you can,\" she said.\n\n\"As long as you're good, I'm good,\" Joseph said.\n\n\"Who's going to start?\" I asked.\n\n\"I will,\" Shayna said.\n\nShe closed her eyes and said, \"I'll give you 10 seconds before I start chasing.\" \n\nShe took a breath and ducked under the water. Everybody moved away from her in a wide circle and as soon as he came up, she yelled \"Marco.\"\n\nWe all yelled \"Polo\" and the game began.\n\nWe splashed and played as we dodged back and forth. People were caught and kisses were given. All the girls had no trouble kissing the other girls but none of the kisses were truly special. They lasted a few seconds and then we resumed playing. Joseph got caught by Ryan and their kiss seemed to last a few more seconds than the others. I looked to Gabrielle but she was busy talking to Shayna and didn't appear to notice. Joseph chased the girls around for a few minutes, he passed by me and yelled out and I responded and he moved right by me.\n\n\"Hey, no fair,\" yelled Sarah.\n\nI laughed at her, \"Yeah, that's not going to happen. If you think we're going to chase each other with all these beautiful girls, you're crazy.\"\n\nWith his eyes closed Joseph nodded, \"Damn straight.\"\n\nShayna pursed her lips and gave me a dirty look, \"Cheaters.\"\n\nSeconds later Joseph caught Sarah. I could tell that he tried to make the kiss last but she pushed off him after two seconds. I noticed he had balanced forward and moved just an inch or two when she broke, it was barely noticeable and I think I was the only one to see but he had definitely tried to make it a better kiss. She turned away from him and saw me notice the exchange, she just rolled her eyes and winked at me. She swam in my direction immediately as she called out. For a few seconds I didn't comprehend that she was zeroing in on me till I changed direction to get out of her way. She instantly changed direction, with a start I realized she was hunting me specifically. I looked up and saw the others noticed this too because their cries of \"Polo\" were noticeably softer.\n\nI wanted to yell no fair but she was so close any sound I made would alert her to my presence. I tried to duck underwater but she sensed the movement and pounced on me. Suddenly my hands were full of smooth flesh as she wrapped around me.\n\n\"Gotcha,\" she said as she opened her eyes.\n\nWe were in chest deep water and I didn't hesitate to cup her ass. She pressed her tits against my chest and leaned in, her lips captured mine and she kissed me with a quiet passion. It lasted much longer than the other kisses between players as she moved her lips over mine. She used just a little tongue to tease my lips but and kept her arms wrapped around my neck forcing us to stay pressed together. I tightened my grip on her ass as she let out a small sigh of pleasure. This kiss was less sexual heat and more, \"I like you.\" We broke apart and smiled at each other. She saw the look in my eyes and she suddenly became shy and looked down and pushed away from me to swim toward Shayna.\n\nNot quite sure what just happened I decided not to overthink it and continued to play the game. I yelled out and moved in the direction of noise but I was just waiting for the right moment. I noticed during the other rounds that Gabrielle always got out of the water and went around the pool whenever anybody moved to the shallow end. As I moved I strained to listen and was rewarded when I heard a wet footstep.\n\n\"Fish out of water,\" I shouted and opened my eyes.\n\nGabrielle froze, her mouth dropped and she let out a small squeak.\n\n\"You got caught,\" laughed Shayna and Sarah.\n\nI admired her body as she stood out of the pool, her nipples were rock hard and the small patch of hair between her legs barely covered her sex, enticing me and causing a stirring between my legs.\n\nShe hopped back into the water and waded over to me.\n\nI smiled as she came close, \"I knew I'd catch you.\"\n\n\"I know,\" she winked.\n\nMy heart lurched a little at her comment, she'd been setting me up, she knew I'd catch her. She wrapped her arms around my neck and pressed her tits into my chest like Sarah did. I cupped her ass, not caring if it caused trouble with her boyfriend or not. Her lips met mine and she kissed me with heat. Her tongue slid between my lips and playfully circled my tongue. I lost track of time as our tongues battled with each other for dominance. I tasted the alcohol on her breath and knew her inhibitions were lost. I felt myself get hard and she wiggled slightly as my cock grew between us. We parted and she pushed me to deeper water.\n\nShe glanced down and said, \"Make sure that isn't seen.\"\n\nThen she turned, closed her eyes and ducked underneath the water to start her turn. I heard giggling and looked over at Sarah and Shayna, they both had raised eyebrows and were whispering together.\n\n\"Enjoying yourself?\" Sarah asked.\n\nI shrugged and moved toward them as they continued to make fun of me.\n\nKarma was served though because less than a minute later Gabrielle caught Sarah. The kiss between them lasted almost a minute and when it ended Sarah was noticeably flushed.\n\n\"Enjoying yourself?\" I asked. Shayna was next to me and we both laughed at Sarah's noticeable arousal.\n\nWe kept playing for another 15-20 minutes and I never got caught again until the end. Then Sarah called out \"last round\" as Shayna was searching.\n\nI happened to be near her and she was moving in my direction toward the side of the pool as she called out. I tried to hop up out of the water but she heard me and reached out to tag me.\n\nShayna opened her eyes and pulled me toward her, \"Since it's the last one I guess I better make this kiss good.\n\nNow I had an infatuation with Sarah and a weakness for Gabrielle, so while Shayna was gorgeous I was only attracted to her in a way that I'd be attracted to any girl that was beautiful...\n\nand I'd seen naked...\n\nand I knew had a lesbian affair with another hot girl.\n\nOkay, so I was attracted to her a lot.\n\nAnd DAMN could she kiss. It wasn't the emotional kiss that Sarah gave me, or the playful sexual tease that Gabrielle did. This was just a good kiss.\n\nHer lips met mine and her arms wrapped around me. She used her tongue and lips to tease and excite. Her breath was hot and she nipped my lips playfully with her teeth. I was acutely aware of her naked body and smooth sex as she pressed her flesh into mine, the water made her skin slide against me in tantalizing ways. She put everything she had into our kiss, I cupped her ass as she playfully writhed against me nonstop.\n\nWhen she broke away I stood there stunned and watched as she slowly backed away from me with an evil smile.\n\nI looked around and everybody was watching me.\n\nI shook my head, \"I'm going to need to stay in the water for a minute or so.\"\n\nThey laughed and waded to the sides of the pool.\n\n\"Just a minute?\" Sarah asked.\n\nI looked at her, \"Maybe a little more,\" I chuckled.\n\nSarah shook her head with a smile, \"Join us when you're ready. I'm going to get everyone some towels.\" She walked boldly across the deck, not caring about her nudity at all. Her hips swayed as I watched her, she had the slightest tan line from the thong bikini and it was sexy as hell. She pulled her hair into a ponytail and wrung it out right before she stepped inside. Everyone else had reached their bikinis and stood there with arms covering in various states of modesty. Nobody made a serious effort to cover but the girls casually covered their boobs while they moved toward the patio door. Just as they reached it Sarah showed up with the towels and everyone took one to cover themselves.\n\nI waded to the side and pushed up as she met me with my own towel. For a second, I was eye level with her pussy. I hesitated and enjoyed the view as she stood with her legs spread just enough for a small gap, ensuring I saw everything. I looked up at her as I pulled myself up, she knew exactly what she'd just done and had enjoyed it just as much as me.\n\nNeither us said anything as I wrapped the towel around my waist.\n\n\"Where's yours?\" I asked, noticing her lack of a towel.\n\nShe didn't say a word but turned and walked back into the house, I hurried to follow her. Her other friends had already left while we were all playing in the pool so it was just the seven of us.\n\nThe next couple of hours were spent in the kitchen laughing and doing shots. Everyone stayed in their towels but Sarah continued to walk around naked. She sat or stood next to me the entire time, putting a hand on my knee or arm or casually lean against me while everybody mingled.\n\nDespite Sarah seemingly marking her territory I got plenty of attention from Shayna too. Every time she was next to me, she managed to put a hand on me in a casual manner. I got the distinct impression I was considered their property. As the night wore on and the alcohol got everybody looser, I did notice that Joseph was spending a lot of time talking to Ryan. I didn't think anything of it until one time when she went to the bathroom, he got up right behind her. At that moment we'd all stood up and everyone was in the kitchen raiding Sarah's pantry looking for chips or cookies or anything. We managed to score a bag of nacho cheese Dorito's and a half bag of vanilla Kreme wafers that had everybody cheering. As we all sat back down to eat around her kitchen island, I saw Ryan come back into the kitchen, she looked a little flushed but I didn't say anything. A minute later Joseph came in and sat down at the table. I glanced at Gabrielle and noticed she gave a quick glance between the two of them and then went back talking to Shayna. I looked around and saw Sarah watching me, her eyes narrowed and she gave me an almost imperceptible shake of her head. She'd noticed too and didn't want me saying anything. I gave a miniscule nod in return and we went back to talking with everyone.\n\nAnother hour went by and Ryan and Kerrie whispered to each other, a second later Ryan stood up and played with her phone.\n\n\"I'm getting an Uber, we need to get home. Anybody want to share a ride?\" she asked.\n\nJoseph looked at Gabrielle and said, \"We should get going too.\"\n\nGabrielle looked at Sarah, \"Do you mind if I hang out some more?\"\n\n\"Not at all,\" she replied.\n\nGabrielle looked back at Joseph, \"You go ahead, I'll catch a ride here later.\"\n\n\"You sure?\"\n\nI don't know what was going on between them but you could easily see the excitement in Joseph's face, he wanted to Uber with the girls and was desperately hoping Gabrielle wouldn't mind.\n\nShe nodded, \"I may crash here and just drive back our car in the morning. Save us another trip out here to pick it up.\"\n\nJoseph nodded eagerly and I almost laughed at the way he was carrying on. It was hard to keep a straight face as we watched them all get dressed and wait for their ride. In no time at all the driver was out front. Everybody said good bye and I watched as they all walked out the door and left.\n\nEverything was quiet for a few minutes and I was feeling a little awkward. The easy energy that we'd all shared moments before was gone. Shayna and Sarah and I all exchanged glances, Gabrielle looked at each of us.\n\nWith a sigh, Gabrielle said, \"All right, let's get it out in the open. Say what you're thinking.\"\n\n\"What?\" Sarah exclaimed. \"I don't know what you're talking about.\"\n\nShe looked at me, I spread my hands, \"I don't know you well enough to say anything.\"\n\nHer eyes narrowed, \"You all know exactly what I'm talking about. Do you think I'm stupid?\" \n\nWe all shook our heads and looked back and forth between each other.\n\n\"I know what's going on,\" she said.\n\n\"We're not sure what you mean,\" Shayna said.\n\nGabrielle rolled her eyes, \"Oh please, it's so obvious he's cheating on me with her it's not funny, and even if it wasn't obvious I caught them and he doesn't know it.\"\n\n\"So this has happened before?\" I blurted.\n\n\"Unfortunately, yes.\"\n\n\"Wait, so you know he's cheating on you?\" Sarah asked.\n\n\"Yeah, the dumbass synced his computer with his phone. I was doing a work report a couple of weeks ago and out of nowhere his messenger opened with a ton of texts and pictures. They were all nude selfies of her.\"\n\n\"I was wondering why you were being so casual about the playing around the pool,\" Sarah said.\n\nShe looked at me sheepishly, \"Well, I have a confession. I was really enjoying everything but a small part wanted to see if he would care or not. I guess I got my answer.\"\n\nI looked down at those words, I felt bad for her, she had found out what she truly meant to her fianc\u00e9 and it hadn't been good.\n\nEveryone was quiet until Shayna said, \"Hey, I'm sorry about anything we did to cause trouble. I know we were flirting with each other a lot out there.\"\n\nGabrielle smiled as she spoke next, \"You know, I'm actually a lot better with it than I thought I would be, so don't apologize, because if anything I think it helped. I feel better about it, all that flirting was sexy and fun and I've missed that kind of stuff. Life with Joseph is just so boring, he doesn't have a sense of adventure about him at all.\"\n\nSarah looked at her and the obvious excitement over the events of the night.\n\n\"Girl, you been stuck with him too long, we're going to start having fun with you.\"\n\nGabrielle crinkled her nose and grinned, \"I think I'm going to love that.\"\n\n\"Let's go to the living room, it's more comfortable\" Sarah said.\n\nWe grabbed our drinks and walked to the living room, Sarah paused and dimmed the lights. Both the other girls sat on the couch and I plopped down on a chair facing them.\n\n\"First let's get you more comfortable,\" Sarah said as she walked over and tugged Gabrielle's towel open.\n\nGabrielle's eyes went wide and she reflexively grabbed her towel but only for a second. With a quick shy look at me she let go of her towel and let Sarah open it up. She looked at Shayna who just shrugged and opened up her towel too. Now all three were nude and facing me. Sarah moved to the carpet and stretched out after grabbing a small white satin pillow off the couch to put her head on. Shayna and Gabrielle stretched out on their sides on either side of the couch with their feet laid out toward the middle.\n\n\"Don't worry Gabby, we're going to loosen you up and have some fun,\" Sarah said.\n\nI sipped my drink as I watched all three gorgeous ladies.\n\nOnce again we chatted away. The girls kept talking about how they were going to take \"Gabby\" out more and having fun.\n\n\"Well, nights like this help,\" Gabby said. \"I'd forgotten how much fun it is to flirt and kiss. Joseph rarely likes to kiss.\"\n\nI had to interrupt, \"Believe me, any idiot that gives you up is beyond stupid. You kiss like a champion, if I was him, I'd be kissing you all day.\"\n\nGabrielle smiled at me.\n\n\"That's so sad when the guy doesn't like to kiss,\" Shayna said. \"Is he at least good in bed?\"\n\nGabby shrugged, \"He's okay, he's pretty standard.\"\n\n\"God save me from standard,\" Sarah said rolling her eyes. She ran her hands up and down her body as she spoke. \"If he can't make me cum then he isn't worth it. I'll do pretty much anything my man asks but I expect to get mine in return. That's the deal.\"\n\n\"Noted,\" I winked.\n\nShe raised her eyebrows a couple of times at me playfully.\n\n\"God, I'd love that,\" Gabby said. \"Joseph just wants to do it missionary and he doesn't care about me at all. Occasionally he does me doggy style but that's it.\"\n\nSarah spoke, \"Girl, stop, you're actually depressing me. If I had a girl like you in my bed I would keep her there all day, making her cum until she couldn't stand it.\"\n\nGabby's jaw dropped, \"Are you...\"\n\nSarah propped up on her elbows and stretched one leg to the side, \"Yes, yes I am.\"\n\nShe pointedly glanced at Shayna who was turning bright red.\n\nGabby's mouth was still open as she looked at Shayna, her eyes went wide.\n\n\"Wait, you two... you mean...\"\n\nSarah nodded, \"All night long even.\"\n\n\"But I thought...\" Gabby's eyes flicked to me.\n\n\"Him too, though today was his first, just not his last if I have anything to say about it.\"\n\n\"So you two...\" Gabby pointed back and forth between Sarah and Shayna.\n\n\"Yep,\" Sarah said.\n\n\"Oh my god, I'm stunned.\"\n\n\"Have you ever been with another girl?\" Sarah asked.\n\nGabby shook her head.\n\n\"Do you like oral?\" Sarah asked.\n\nGabby groaned and put her head down, when she raised it back up, \"I love oral but Joseph hates doing it.\"",
        "Shayna straightened up at that.\n\n\"He wants me to give him blowjobs but he hates to return the favor. He's only done it to me twice in the two years we've been together and both times he did it was horrible. He has no idea how to use his tongue.\"\n\n\"Are you fucking kidding me?\" I exclaimed.\n\n\"I swear to god,\" she nodded. \"He says it's nasty.\"\n\n\"Your guy is a fucking idiot, personally I would do that all day long to a girl if she'll let me,\" I said.\n\nSuddenly Sarah sat up on all fours and moved her face toward Gabby's pussy. She moved slowly giving the dark-haired beauty plenty of time to react. Fascinated, Shayna and I watched as Gabby was spellbound, she watched as Sarah moved toward her sex. Her tongue came out and gently licked the soft hair line, she traced back and forth teasingly a few times. Gabby groaned and laid back on the couch and hiked her far leg up. Sarah paused long enough to pull the leg closest to her off the side of the couch and shift to get a better angle. She pulled her other leg to the back of the couch. Now Gabrielle was spread wantonly in front of all of us, she twisted in impatience as Sarah positioned herself. When Sarah began to lick her all the pent-up sexual energy in Gabrielle came forth. She writhed and moaned as Sarah used her tongue to please her. I watched as Sarah traced around her lips, then up the middle and back down, each stroke probing deeper into her. Her hips thrust against Sarah's face and she was whimpering nonstop now. Her hands cupped her tits as she thrashed and moaned on the couch. I looked over at Shayna, she was breathing heavily and had a hand between her legs stroking herself as she watched, her nipples were hard and I knew she wanted to join them. I looked back to find Gabrielle looking at me. The moaning had stopped but her eyes fluttered and her mouth kept opening and closing like she was about to explode. Her head twisted back and forth as a stray wisp of her hair crossed her face. Her hands flew from her breasts and grabbed the couch on either side of her ass as her back arched and her mouth went wide open. For a second no sound came out and then she cried out in ecstasy as she came. Her body trembled as the orgasm wracked her, Sarah kept licking for another full minute as Gabrielle's body shuddered.\n\nSarah leaned back as Gabby's tremors slowly decreased.\n\nShayna got up and walked over to me, without a word she reached down and tugged my towel off. My cock was rock hard from the show that I'd just witnessed. She took my hand and pulled me off the chair then she dropped to her knees and put her elbows in the seat she'd just pulled me from. She gave me a smoldering look over her shoulder and swayed her hips back and forth making her intentions was perfectly clear. I looked at Gabby and Sarah, they both were staring at us intently with lust in their eyes. I leaned over Shayna and pulled the chair to a side angle so that we could all watch each other. Shayna adjusted as I slid behind her and dropped to my knees on the carpet. I found it incredibly erotic that she hadn't said a word the whole time.\n\nI positioned myself behind her and grabbed her hips. I pressed against her intending to rub my cock against her to tease but she was so wet that the first stroke I ended up sliding into her to the hilt. She stiffened and let out a groan as I paused, savoring the moment. Her pussy was warm and tight and she rolled her head as we adjusted to each other. I pulled back and leisurely pushed forward, taking my time as I once again pushed deep inside her. She let out a heavy breath as I repeated this a few times. Slow and steady I pushed deep with each stroke. We took our time and she groaned and clenched and unclenched the cushions with each stroke. I looked over at Gabby and Sarah, Sarah had moved behind her and placed her head on Gabby's shoulders. One arm snaked around her and was stroking Gabby's chest, tracing lines across her stomach and tits in deliberate patterns. Gabby's free hand was between her legs and she caressed a finger up and down her sex.\n\nI kept my hands on Shayna's ass holding her tight. Every time she tried to increase the pace, I gripped her tight to keep her steady. After a few times she began to growl and looked over her shoulder at me. She tried to push back harder, this time I gave her a quick slap on the ass. She yelped and flexed against me harder. From the side I saw her mouth drop open and I heard a low guttural sound come out.\n\n\"Somebody likes that,\" Sarah whispered.\n\nI looked over again to see Gabrielle and Sarah smiling. I looked back at Shayna and saw her flashing a dirty look at both of them. I slapped her ass again but on the other cheek.\n\nI felt her body clench and her growling got louder.\n\n\"Oh fuck,\" she panted.\n\nSensing a weakness I kept up my deep measured thrusts, just as she unclenched her hands, I smacked her ass again. I was forced to hold tight because the effect was instantaneous. She screamed and buried her face in the cushions as she tried to buck harder and faster against me. For a few seconds I was forced to use all my strength to bring her under control and just as she relaxed to my rhythm, I slapped her ass again. That was it, she was bucking and screaming into the cushions and I held on as tight as possible while I saw tremors go through her body and she thrashed harder. I was so turned on from the display that I didn't sense my own buildup, one second, I was trying to reign in the wild stallion I'd mounted and the next I was cumming. She felt it and pulled her face out of the cushions and shrieked.\n\n\"Yes, yes, don't stop... I'll fucking kill you...Oh god yes.\"\n\nDespite her threat, I couldn't stop if I wanted and I kept thrusting and cumming into her. It must have lasted almost 30 seconds as our orgasms combined and strengthened each other's pleasure.\n\nWe both were panting after I finished. I pulled out of her and she collapsed out of the chair and lay on the carpet utterly spent.\n\nGabby and Sarah had their jaws open with eyes wide and shining as I stood up in front of them.\n\nGabby swallowed, \"I want that,\" she whispered.\n\n\"You and me both,\" purred Sarah.\n\nI grinned and walked past them to the bathroom. I went in, closed the door and began to clean up. Her bathroom had matching dark grey towels and mats and I found a wash cloth beside the sink. I wet it down and cleaned up from my exertions. When I finished, I tossed the rag into her hamper and walked back out to find none of the girls had moved.\n\nLike Shayna I didn't say a word as I crossed the room back to Gabby. I stood in front of her and she looked at me with excitement in her eyes. Sarah smiled and lay back pulling Gabby against her, I reached down and put Gabby's leg back on the other side of Sarah's legs. Now she was laying against Sarah but her legs were spread open again. I dropped to my knees and moved my face between her legs. Gabby swallowed as I brought my face to within an inch of her pussy. I closed my eyes and brought my tongue out and traced her slit. Delicately I used the bare tip of my tongue to run up and down on her lips.\n\nI opened my eyes and saw she'd closed hers. She gave out a breathless little sigh as I kept up my teasing licks. I watched as Sarah's hand came up and traced her already hard nipples. I widened the area my tongue was caressing to lick the crease where her legs met her body. I heard her breath change patterns as I gave her a little nip. She whimpered as I came back to her pussy and pushed my tongue deeper inside her to give her a strong lick up and down the center.\n\n\"Fuck,\" she barely whispered. Her eyes stayed closed and small whimpers began to escape her body as my licks became stronger. I found her clit and teasingly circled it with my tongue. Her hips moved against me and she brought her hands to my head. She guided me with her hands pushing in the back of my head and pushing me up and down. I decided to let her do what she wanted since this was denied her for so long. Her controls became stronger and she began grinding her hips into my face. Her strength was surprising and her moans grew loader as she began to build once again. Feeling her muscles tighten I knew she was seconds from orgasm. Sure enough, in no time her hips locked around my head and her fingers tightened like steel, she let out a cry as I felt her cum.\n\nShe curled around me and kept me in place as she spasmed in her orgasm. I was buried in her flesh and her strong musky scent filled my world. I kept my tongue licking and despite her legs clamped around my head I heard her crying out in pleasure.\n\nJust as I thought she was never going to let me go and was worried that she might actually kill me with her death grip when I felt her release. Her body began to relax and I heard Sarah's voice.\n\n\"Easy now, just relax,\" she cooed.\n\nGabby's eyes were closed as she lay back and began to spread her legs.\n\nWhen I was free I pulled back and reached up to work my jaw and check my neck and back. Sarah was barely holding back laughter as she kept calming Gabby.\n\n\"Just relax,\" she said as she stroked her body.\n\nGabby opened glazed eyes, \"Sorry... just so... never had twice... so good.\"\n\nShe shuddered and closed her eyes again.\n\nI looked at Sarah with a mock glare and mouthed the words, 'She damn near killed me.'\n\nSarah nodded her head and quietly laughed while mouthing, 'I know, I know.'\n\nI was hard again despite the aching in my jaw and head. I pointed at Sarah and mouthed, 'You, now.'\n\nShe shook her head and pointed at Gabby mouthing, 'Her.'\n\nI looked at her incredulously. She gently disengaged herself and stood in front of me. She wrapped her arms around my neck like she was going to kiss me and whispered in my ear.\n\n\"You and me later, I promise. I want you to give her attention now. We'll spend all day in bed tomorrow till you can't walk straight but tonight is all her.\"\n\nI pulled back and looked her in the eyes, she was serious and it's not like I was bothered by it. I looked to see what Shayna thought and noticed she was passed out.\n\n\"So what do you want me to do?\" I whispered.\n\n\"Slip inside her, wake her up like that.\"\n\nI looked down at Gabby and she had one leg straight out on the couch and the other bent to the side a little. I carefully eased into position above her and brought the head of my dick to her entrance. It was a bit of a strain to do it without waking her and my arms were quivering from the tension. Getting the position just right I pushed my dick against her. She was still wet from her two orgasms and I met no resistance. Steady I pushed the rest of the way into her. Her eyes flew open and she gasped as her hands turned into fists. My face was inches from hers as I settled deep inside her. Finally releasing the stress on my arms, I pressed my body against her and her hands reflexively wrapped around me as we stared into each other's eyes.\n\nI held still as she recovered from her shock. Her lids dropped halfway and her hands moved up and down my back, occasionally cupping my ass. She gently began to grind against me. I brought my lips down and kissed her as I took back control. I had just pushed deep into her when she clenched her body and froze.\n\n\"Wait,\" she said.\n\nAfraid I'd done something wrong or that she'd changed her mind I held perfectly still.\n\nSarah looked at her face, \"Is everything okay?\"\n\nSwallowing, Gabby said, \"Everything is perfect. It's just... I ... I want to ask something.\"\n\n\"You want to ask me something?\" I exclaimed. \"Right now?\"\n\nShe tightened her muscles around me, \"I want to ask a favor.\"\n\nI was acutely aware of her soft skin, the smell of our sweat and the warmth of her body as it pressed against me. At that moment she could ask me anything and I'd agree.\n\n\"I'll buy you a car if that's what you want, can you just hurry so I can get back to fucking you?\"\n\nShe giggled, \"I want to ride you, Joseph never lets me do that.\"\n\n\"Is that all?\"\n\nWithout disengaging I managed to roll us both over in less than three seconds.\n\n\"Better?\" I asked.\n\nBiting her lip, she nodded at me.\n\n\"Can I please get back to fucking you?\"\n\nShe giggled, \"Now I'm going to fuck you.\"\n\nShe fit perfectly on the couch straddling me, she pushed up and used her hands to brace against my chest. I put my hands on her hips and then she began to ride me. Her rhythm was steady as she pushed herself up and down. I moved my hands to her ass as she found a natural meld between our two bodies. I let her control the tempo and she increased and decreased speed as much she wanted. She explored different paces as she slow rolled her hips against mine, taking her time as she pushed deep back and forth. Then she'd pick up the pace to short fast bounces, like a sprinter running a race she'd push herself for a minute and then come back down and resume her steady thrust and roll. She never looked at me, just kept her eyes closed and her head thrown back and moving side to side as she sighed and groaned nonstop.\n\nHer pace increased and she muttered, \"Oh yeah... don't stop...don't you dare stop...\"\n\nI didn't want to break the spell and say anything to her by reminding her that she was the one who could or couldn't stop since she was riding me. I sensed her words were more directed to an imaginary adversary than to me.\n\nWith a cry she came, her hands gripped my chest as her nails dug into my skin and her legs clenched tight around my body. She threw her head back as she orgasmed for the third time in under an hour. She stayed frozen for a long time and I began to worry. I looked at Sarah with concern and she just shrugged wide eyed. Finally, Gabby collapsed against me. I wrapped my arms around her and rolled her over sideways on the couch. She smiled and she snuggled into my arms.\n\n\"Best night ever,\" she muttered closing her eyes.\n\nI managed to get off the couch without waking her and stood there with Sarah. She went and got a couple of blankets and put one on each of the passed-out girls, then tucked a pillow under Shayna. After we finished, we stood and looked at each other. She looked at a clock on the wall.\n\n\"It's only ten, the night is still young.\"\n\n\"You sure you can hang?\" I asked.\n\nShe laughed, \"I do love a challenge.\"\n\nShe grabbed my hand and walked me toward her bedroom.\n\n\"Of course I do expect you to catch me up. So far, you've had two orgasms out here. I haven't gotten any, so you need to get working.\"\n\nWe got to her room and stood before the bed.\n\n\"I like that kind of challenge.\"\n\n\"Good, because I expect to cum twice before I let you fuck me again.\"\n\n\"Challenge accepted,\" I said pushing her back onto her bed. \"Because I plan on fucking you all night long.\"\n\nShe didn't say anything or move but looked at me with lust in her eyes.\n\n\"Spread your legs.\"\n\nWith an obedient grin she spread her legs in front of me. Her pussy was beautiful and I dropped to my knees at the edge of her bed. I moved forward and as my tongue began to gently lick her pussy, she held up her hand with two fingers up. \n\n\"Twice,\" she murmured. Her eyelids drooped and she let out a small sigh as I probed my tongue inside of her. Her hands dropped and she leaned back as I began to work my magic and give her the two promised orgasms and night of sex.\n\n*****\n\nNote: Comments always appreciated."
    ],
    "authorname": "storm_usmc",
    "tags": [
        "bikini",
        "thong",
        "pool",
        "spank",
        "skinny dipping",
        "group sex",
        "latina",
        "threesome",
        "pictures",
        "bisexual"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/my-neighbors-shenanigans"
}