{
    "title": "The Twelve Zenati Pt. 23",
    "pages": [
        "Noah couldn't help the stupid grin that spread over his face every time he thought about Marcella telling Oscar that he was the one table man she trusted and that he had proposed and she was going to say yes. Not that she had given him that yes yet but wishful thinking or not, he was sure it was only a matter of time because she had told him she would not be returning to Perth. The smile split his face again. She would stay; she wouldn't run away again. He would make sure of it.\n\nThey'd left the yacht and walked to the car waiting for them thanks to his cousin. Noah's steady gaze brushed over Marcella's thighs appreciatively as her flimsy skirt rose over them when she got into the low-slung sports car that gleamed in the bright late afternoon sunlight.\n\n\"Nice car,\" she commented as he settled himself into the seat next to hers. \"Why am I not surprised that you would drive a car like this rather than a Holden or a Toyota?\"\n\n\"In a world full of Ferraris and Lamborghinis this baby is pretty tame,\" Noah laughed.\n\n\"Hardly,\" Marcella laughed as she felt the first powerful roar of the engine. \"Is it a long drive to wherever we're heading now?\" She asked thinking about the time she had slept away on the gently rocking yacht and lamenting that his plans to parasail had been cancelled.\n\n\"Not long, it depends on the traffic,\" he shrugged. \"Twenty minutes to half an hour, maybe.\n\n\"You think you'll be able to open this baby up once we're out on the highway?\" Marcella asked, her green eyes glittering with excitement.\n\n\"Why, you in a hurry to get there?\" Noah chuckled\n\n\"No,\" she murmured, getting a glimpse of the deep turquoise water as the road carved its way along the rugged coastline. \"But, let's just say, speed does it for me as much as the free-falling we did this morning.\" The fact that Noah hadn't pressed her further on what she had said during her facetime chat with Oscar allowed her to relax and put off all of the drama that would rear up to greet them again tomorrow. For just this one day, she wanted to let go of all the reasons why she shouldn't get more involved with Noah Zenati and recapture the feelings of earlier.\n\nNoah arched his eyebrows. He knew what an aphrodisiac it was when racing his car or bike. He always had a feeling of mastery and power mixed with pure dread, which was an incredible challenge. At full throttle on a racing track, there was almost the feeling of being omnipotent which made him believe that injury was utterly impossible, despite the fact, that his life was littered with injuries because he had pushed the limits too far and risked too much. He wouldn't do that with Marcella. It was hard not to push her though for the answers he wanted tonight. He grimaced as he shifted in his seat. A badly healed rib was still a tender reminder of his last risk with speed and testimony to the fact that injury was very much possible for anyone who pushed the limits, no matter their expertise. Not that it would ever alter his love of extreme sports and the great outdoors.\n\n\"Speed turns you on?\" he asked glancing at Marcella. The question hung in the air for a second as he accelerated sharply along the twisty road.\n\n\"Yeah, it does,\" she admitted answering him honestly. Marcella shifted in her seat while she gazed at the breathtaking landscape. The postcard views of quaint little homes and estates that were perched high in isolation on rocky escarpments made her wish that she had the talent to paint. The scenery was truly spectacular, and evidence that there were some things that humans couldn't mess up. \n\n\"Good to know,\" Noah said, smiling as he came to the highway and accelerated to cruising speed. Once comfortable, he stretched his arm along the back of her seat and rested his hand in the silky curls of hair at the nape of her neck.\n\nMarcella closed her eyes to savour the speed of the car and the scent of his closeness which seemed to permeate her senses. As his long fingers worked gently beneath the fall of her dark hair, she was aware of several thrilling sensations at once. His palm was curved into the space between her shoulder blades, and his fingers caressed her bare skin with a steady, tender stroke. \n\nNoah's words and the intimacy of his touch began to work on her imagination, triggering deep sensual flashes of allowing him to get to third base before her words and the news of Oscar's arrival had derailed what had been drawing them closer together all day. Despite the air circulating around her, she grew warm and flushed as if she were back in the stateroom with him. Noah was seducing her mind with his careless touch, making her imagine his tantalisingly light stroke all over her body once again.\n\nHe slowed the car to a stop at a crossing, and as it idled he began to play with the lobe of her ear, arousing the sensitive point where the delicate flesh met her jaw then, he dropped his hand and trailed his fingers down her bare arm, brushing the side of her breast with a feather stroke. It took all her control to keep her eyes on the road ahead, but she couldn't help letting out a shuddery sigh.\n\n\"Feeling good, Puddin'?\" He asked with a half-smile.\n\n\"Pudding?\" she grimaced. \"That could earn you a foul ball if you call me Pudding again.\"\n\n\"Noted,\" he chuckled and seemed to consider what he was going to say next. \"Honey is still not totally objectionable, I take it?\" he asked carefully.\n\n\"It's better than Pudding or Princess,\" Marcella admitted. \"Why the strange need to give me some sort of pet name?\" She sighed, but it was a sigh of contentment rather than of frustration. She felt better than good after the release of sexual tension in her earlier orgasm. Beneath the feathery light material of her skirt, her body was alive with sensation. Her breasts felt fuller, and she was acutely aware of the way her nipples were jutting against the soft fabric of her top. She stole a glance at Noah's profile and saw a small smile playing around his lips. He was intentionally trying to get her aroused, she realised, and it was working. \n\nIt took a second for her to make her decision and she made it in light of the promise to herself to throw caution to the wind and experience all he was offering her during this day he had planned for them. It was shameless, she knew, mostly since they were in broad daylight on a surprisingly well-used highway where he had to keep an eye on traffic. But that was tough luck for him, she decided; he'd started it by trying to arouse her again, and now he would just have to deal with the consequences of that. \n\nA breath quivered in her throat as her fingers drifted down to her thigh and slipped under the hemline of her skirt. Marcella squirmed in the seat as her hand came to rest on the moist crotch of her panties. She slipped a finger between the soft wet folds of her pussy and let out a sexy sigh.\n\n\"You don't mind if I explore a little, do you? I mean it is your fault that I feel this way after all,\" she pointed out to him expecting him to back off.\n\n\"Be my guest,\" Noah replied huskily, \"I'd like to see that.\" While they had constantly bickered, teased and flirted with each other over the last few weeks, this was a different side to Marcella, and he couldn't complain about being accused of being the one to bring it out of her.\n\n\"Eyes on the road, Mr-risk-management,\" Marcella admonished playfully and wriggled on the seat as she pulled the lacy panties she had been wearing off and dropped them on Noah's lap. She smiled and toeing off her shoes, stretched a leg onto the dashboard. \"Now, do you think this baby can go any faster?\" \n\n\"Fuck,\" Noah groaned deeply and curled his hand around the back of her neck where it had been lying smoothing over her skin gently and squeezed as he accelerated.\n\nMarcella moaned softly as she stroked her clit with one hand under the flimsy skirt and caressed a hard nipple with the other. She had her face turned on the headrest towards Noah, who was alternating between glances at the road ahead and lingering stares at her hand buried between her thighs. \n\nThe feeling of the sun warming her and the breeze blowing through her hair, keeping her skin cool while Noah watched her masturbate filled her with breathless excitement. Apart from the marina manager, Vincent, it had been a long time since she had seduced a man by being so overtly sexual to gain power over them by making all the blood leave his brain for southern parts of his anatomy. She gazed at his profile, at his well-defined jaw, then his mouth and felt a shudder of pleasure run through her. She wanted to kiss him at that moment, to run her tongue over his teeth and suck his bottom lip before forcing her tongue inside his mouth and taking control of what was happening between them. She groaned as she imagined his tongue dancing with hers and then probing the soft folds of her pussy, insinuating its way deep into her warm wetness as it had just hours before. The images of him working to please her spiked her arousal and she hastily pressed two fingers inside herself imagining how his cock would fill her when she allowed him his home run.\n\n\"Oh God,\" she groaned as she squirmed with pleasure and began her journey towards climax aware of Noah's discomfort as he tried to adjust himself beside her.\n\nIn the distance, she could hear the drone of an approaching truck. The deep droning sounds came nearer and nearer merging with the sounds of her quickening breaths. Marcella closed her eyes, giving in to the pulsing waves of heat surging through her. She was vaguely aware of the reverberations from the truck rushing past as her orgasm swept through her body. She whimpered softly as she came keeping her eyes shut until she stopped trembling. When she opened them, Noah was staring intently at her. \n\n\"Let me taste you,\" he croaked breathlessly and reached for her hand. \n\nShe slowly withdrew her sticky fingers from her pussy and moved them towards his mouth. A small twinge of self-consciousness prickled her as she watched him suck her fingers into his mouth. She always got so damned wet when she was horny, and for a second, she wondered if she'd left a wet spot on the leather seat beneath her.\n\n\"I didn't expect that from you, but I will reiterate my earlier comment, you are killing me, Marcella. Fuck,\" he groaned and accelerated hard. \"The sooner we get to where we are going, the better.\"\n\n\"Well, I did tell you that speed turns me on,\" she said trying to sound nonchalant, knowing it would make him reconsider his acceleration not only now but in the future as well she hoped. \n\n\"I think you turned on the truck driver as well,\" Noah smirked at her.\n\n\"No!\" Marcella exclaimed, wide-eyed. \"Don't tell me he could see in here, could he?\" \n\nNoah laughed. \"Of course, he could, Honey. The truck is higher than the car, and it wasn't moving that quickly either. He definitely got an eyeful.\"\n\nMarcella flushed furiously and dropped her eyes from his face to his lap where she could see his cock swollen and clearly outlined beneath the fabric of his pants. She wondered if he would object to her exploring him as well. She reached out and placed her hand on his thigh near the head of his cock.\n\nNoah lowered his hand from the wheel and covered hers, stopping the short journey from his thigh to his cock. It wouldn't take much to push him over the edge. He glanced at her and saw the desire in her expression laced with misunderstanding and cursed again.\n\n\"I don't want the first time I cum with you to be a quick hand job while I concentrate on the road. The first time I cum with you shouldn't be all over my stomach, but inside you,\" Noah said his voice deep, husky and filled with regret. \"You deserve all of my attention, not what I can spare while racing down the highway at the same time I am racing to a climax. If you touch me now, I can't guarantee I won't pull this car over, and you deserve better than an uncomfortable fuck in a car like this.\" He tried to explain why he was stopping her from touching his cock.\n\n\"Okay,\" Marcella whispered, drawing out the vowels and withdrew her hand from his slowly. As soon as she had removed her hand, she felt the car accelerate again, and she peeked over at the speedometer to see they were doing close to one hundred and fifty kilometres. She grinned to herself. Just as she had felt earlier, she knew she had the power in this strange relationship, they were forging today and wasn't about to let him off so lightly. Revelling in the power of her sexuality, she lifted both feet back to the dashboard and let her skirt slip up her legs.\n\n\"I don't suppose you want to give my panties back,\" she teased, reminding him she wore no underwear now.\n\n\"You would suppose right. I don't want to give them back. They are mine now,\" he chuckled.\n\n\"I bet you will look lovely in them,\" she laughed teasingly. \"Oh shit!\" Marcella gasped and turned around as the bleating of a siren came to her ears.\n\n\"Fuck,\" Noah groaned and took a deep breath trying to get his body under control as he slowed the car and pulled over onto the side of the road into what looked like a small recessed area.\n\nMarcella tried to smooth her clothes as she struggled out of the car. She knew how dishevelled she must look and she glanced surreptitiously at Noah's crotch, but even though he appeared calm and in control, there was no mistaking the size of the bulge still evident there. \n\n\"Afternoon, officer,\" Noah said gruffly. \"Is there something wrong?\"\n\n\"Is there a race I am unaware of?\" he asked and turned his attention to Marcella eyeing her up and down. \"Your wife doesn't look like she is having a baby so that can't be the reason for the excessive speed.\" He mused as if trying to give Noah an excuse.  \n\nMarcella couldn't decide if he was serious or not. No police officer she knew would talk to someone he pulled over like this. She wished she could see his eyes to determine if he was angry or not, but he kept them hidden behind dark sunglasses. She watched as he walked around the car to check the car registration and Noah's driver's license.\n\n\"I didn't realise I was going so fast,\" Noah replied, hoping the guy was going to recognise his name and be forgiving towards them. He knew damn well that he had been going dangerously fast, but it had been unavoidable. With Marcella masturbating then offering him the same attention she had given herself he was lucky he hadn't lost his mind.\n\n\"You were speeding and passing the other vehicles dangerously. That is not acceptable here in the north. As far as we can tell from the truckies at the rest stop up the road, you made one man lose control of his rig, and he's stuck about twenty minutes that way.\" He pointed behind them and shook his head like a disappointed parent might.\n\nHis comment made Marcella want to laugh. She stifled a nervous giggle because one look at his face told her he meant precisely what he was saying. Marcella ran her hands through her long silky hair and cocked her hip.\n\n\"Officer,\" she said, licking her lips provocatively, \"We're really sorry about the speeding, but honestly, it's not Noah's fault, it's mine.\"\n\n\"You weren't the one driving,\" the cop replied, letting his gaze drift over her.\n\n\"No, I wasn't,\" she said pouting prettily, \"But I was... distracting the driver.\"\n\n\"Pardon?\" He frowned\n\n\"You see, it's our anniversary, and you know what it's like to be young and in love, don't you?\" She paused, wondering how much she should say to diffuse this situation. \"I was teasing him by stripping while he drove.\" She paused a second time. She hadn't lied she had stripped her panties off. \"I'm not sure it is entirely my fault the truck driver lost his concentration, but I assure you my... fianc\u00e9 is not at fault at all for anything other than going a little over the speed limit.\" She explained stumbling over what to call Noah after telling the policeman it was their anniversary.\n\n\"Ah, that explains it then,\" the policeman nodded with understanding. \"Several trucks are heading down from the truckstop that one left not long ago to help him out of the hole. It might be best if you follow me to your turn off because he has indicated that it was the reckless driving of possible nudists that caused his mishap.\" The policeman had the ghost of a smile on his face.\n\n\"We're not far from my Uncle's place your assistance would be appreciated,\" Noah said, unable to help his grin after listening to Marcella's explanation. He would never have used what she had done as an excuse himself but to hear it from her lips had made his day that much better. The bonus being that she had called him her fianc\u00e9. He explained where the turnoff was, and they went to their respective cars. Noah let the police car take the lead and followed him.\n\n\"He's going almost as fast as you were,\" Marcella commented after a few minutes in which they accelerated up the highway again.\n\n\"Yeah, just about,\" Noah said. He watched her mouth as she spoke. It was luscious with soft pouting lips, and he regretted not letting her taste him when she had offered. He could have pulled over and released some of the discomforts that had been plaguing him each day that he had been with her. He glanced at her again, knowing how that mouth tasted when he kissed her and imagined how glorious it would feel wrapped around his cock. He gave a low groan and knew he was right to resist. The first time he came with her was going to be memorable for both of them and not a quick hot fuck in a car.\n\n*****\n\nVivienne snuggled against her husband fully sated and thinking about just how lucky she was she to have such an amazing man love her. She wished his brothers and her friends could be equally content. However, with the AFP still closing in on Olivia because of the lack of evidence and Marcella feeling betrayed and distrustful of all of the men in the Tables while going off to clear her sisters' name without their back up, she didn't see any immediate solutions to the troubles that plagued both them and the men who loved them. She sighed loudly wishing there was a way to help them where she didn't cross any more lines that would have either of them not trusting her again. \n\n\"That doesn't sound like the sigh of a satisfied woman,\" Gideon said rolling and rising on an elbow to look down on her.\n\n\"Oh, I am satisfied, my love,\" Vivienne gave a small, shy laugh and reached up to touch his handsome face.\n\n\"Why the sigh then?\" he asked.\n\n\"It doesn't seem fair that you and both your brothers found your curse breakers at the same time and yet we are the only couple with a happily ever after,\" she leaned up to kiss him lightly. \"I am beyond happy and just wish they could feel that sort of happiness too.\"\n\n\"Uh oh, what are you scheming in that clever brain of yours,\" he teased.\n\n\"Nothing, I learned my lesson, and I am not going to do anything else to risk my friendship with either Olivia or Marcella. I just wish that all the drama was done with and Gen and Olivia could get married. She doesn't feel like she is part of the Zenati yet. Emma mentioned the family gathering to us, and she immediately made excuses not to be included, the main one being that she and Gen aren't even talking about engagement let alone marriage,\" Vivienne shrugged.\n\n\"Really?\" Gideon frowned. \"That's an easy one to fix, you know. I'm sure Gen doesn't even know she feels that way or he would have rectified the situation himself.\"\n\n\"I guess, but I don't think we should say anything. I meant what I said about learning from my mistakes. I don't want to lose the close friendships I have with either of them because I meddled again,\" Vivienne sighed.\n\n\"That's not meddling, and if I remember right, it was Emma who told Gen to hurry up and put a ring on it,\" Gideon chuckled. \"Looking at the bigger picture though while she is unclaimed by Gen, she is still a member of the Gambaro family and subject to their laws. It's not out of the realms of being brotherly to remind him of that fact.\"",
        "\"I guess, especially as the Gambaro's have come to check on the situation and want one of their men with both Olivia and Marcella,\" Vivienne mused. \"I think I have an idea...\" she trailed off as Gideon flopped back on the bed and laughed. \n\n\"Of course, you do! That's was my first question, remember,\" he laughed all the more. \"Okay hit me with it.\" He stifled his laugh as she half sat and adjusted her pillows to lean back on the headboard scowling at him for laughing at her.\n\n\"I don't think I will,\" she said airily.\n\n\"Since when do you keep secrets from your husband?\" he asked with mirth in his voice though he had stopped outright laughing at her.\n\n\"It's not a secret it's a thought, and I couldn't do it on my own anyway,\" she shook her head but was still contemplating how she could pull the whole thing off maybe if she spoke to Lydia about it or perhaps even Junie. \n\n\"You don't ever have to do anything on your own again. You have the great big Zenati clan that comes with me,\" Gideon assured her, leaning in to nuzzle her neck as he spoke the words. \"You my love are Vivienne Zenati now and are just as important to the family as I am.\"\n\nVivienne gave him a soft smile and turned to face him running a hand over his shoulder to twirl in the short ends of his hair. Then she kissed him using the best distraction she knew to put him off asking any more questions. There would be time enough to feel out her contacts and the float the idea she had to them tomorrow. The more she thought about it though, the more she altered the scenario until she found that magical lightbulb in her head that told her this was the way to help both her friends overcome the horrors of their pasts. Then her mind dulled to everything except the exquisite pleasure of being with her husband and all her attention centred on her him where it should have been all along.\n\n*****\n\nArmando frowned at his computer. He'd finished the paperwork to gift the Royce mansion to the woman known as Aunty Bea. The information emailed to him by Noah with the full name and contact details of the woman Olivia called Aunty Bea bothered him, but he couldn't seem to put a finger on why. Having so recently reread Olivia's deposition for any clues or hints to why Bea would risk her standing and influence amongst the Suebi in order to bargain for the Royce property, he was sure there was a small, inconsequential name or word in there that caused his ill-ease.\n\n\"I think I might have something. It requires a small stretch of the imagination, but it's got more probability than anything else we've come up with,\" Isaac mused turning to face Armando, several pieces of paper in his hands. He had been working with Armando since he had taken over Olivia's case this week, pouring over the details of Olivia's account of events, again and again, looking for any odd details or loose ends.\n\n\"Tell me,\" Armando said, leaning back in his chair and pressing his fingers to his temples.\n\n\"Well, the woman we believed was Bea Kottman has given her full name as Bea Kottman-Schwann. The AFP records show that she was arrested and processed without the hyphenation, just Bea Kottman. The only time I can find a reference even close to Schwann anywhere in the arrest records, and information we have from the AFP or in Olivia's statement is a woman she met at a party just after she first met Remington. Except in her statement, she calls her Madonna Swan, not Schwann,\" Isaac spoke while looking at the paperwork as if still musing through what he was saying.\n\n\"I don't think it's that's too much of a stretch are you sure no one with that name is on the arrest sheets?\" Armando frowned. Like their own families, he knew family clans were tight amongst the Suebi and to have a surname undocumented amongst the Suebi arrests show up twice in their investigations made him prickle as if they had discovered something significant to the bigger puzzle of why Bea would sell out her own clan. \"It's probably worth contacting Olivia and having another talk to her about that specific incident. \n\n\"Why not just call her and ask?\" Isaac asked, believing that once again, he would be left behind to cover the office.\n\n\"Olivia says more with her body language than ever comes out of her mouth,\" Armando chuckled. \"We'll see if they're home, then we can go see her and get his signed so Noah can pick it up in the morning.\"\n\n\"We?\" Isaac asked, surprised by the slip of his tongue.\n\n\"Yes, we. You haven't spent much time with Olivia, and it will help you understand her statement better if you can ask her questions about it,\" Armando explained with a wide smile. With Noah being so involved in table business recently, he'd had to rely on Isaac more and more. Despite having clients remaining in his private law practice, Isaac had stepped up during the upheavals that had plagued the family and impacted Noah directly over the last few weeks. \n\n\"Alright, I'll go through the initial pages of this one more time while you finish off the paperwork they need. We may have skipped over the first couple of days until we knew she was involved in his businesses as well as his home,\" Isaac said and went back to his desk feeling pleased that his efforts were finally being recognised and appreciated.\n\n\"That slip up at the AFP arrest with her name may also help us pinpoint who is aiding and abetting the Suebi,\" Armando suggested.\n\n*****\n\nOnce Isadore, Oscar and his cousins had left for their dinner arrangements Genesis had bundled Olivia up in his arms and taken her to the playroom. She had been amazingly strong during the friendly but serious meeting, and he knew she would crash after putting up a brave face for so long.\n\n\"Stay here, Little One,\" he said, placing her feet back down on the floor. His voice sent shivers down her spine, and she dropped her hands to her sides.\n\n\"Yes, Sir,\" she knew the room and the tone in his voice, the combination of the two making her so needy.\n\n\"You did very well, my little one. I am proud of you for speaking so clearly and concisely with men you barely knew and who have claims on you in some ways. You, however, are mine now, you will not be returning to Perth regardless of the promises they give you,\" Genesis instructed giving her the security she needed from him and himself the reassurance that given the opportunity she wouldn't leave him. He towered over her in height, but she wasn't frightened of him, she trusted him, and for that, he was beyond grateful. \n\n\"Thank you, Master,\" Olivia bit her lip; Fuck, he made her ache inside when he became the Master in this room. She wouldn't leave him no matter what she was offered by Isadore and Oscar or even Marcella. Genesis knew her inside and out now and could read her like a book. She needed this, needed him, after that meeting, and he knew how much she needed it. She looked down demurely watching him watch her from beneath her long lashes, wondering just what he had in store for her.\n\n\"Nothing to say about their offer to have you return to Perth with them?\" He asked as he took her chin in his strong fingers and tilted her face up to look at him. \n\n\"No Master, my heart belongs here with you, in our home,\" she said earnestly.\n\n\"Yet you said you would consider their offers before they left,\" he shook his head. It was an excuse he admitted. She had also told them that she had wanted to stay here with him before that one final push from Oscar. It had irritated him, and he knew Olivia had been on the edge of a panic attack when she had nodded, and he imagined she had only given that much so they would leave.\n\n\"Bend over, little one.\" He dropped her chin and bent her over the high bench, flipping up her dress to expose her tight, pale ass. She whimpered at the feel of his hands on her skin. \"You realize I am unhappy that you agreed even to consider his offer.\" He spanked her three times in rapid succession, leaving a rosy glow on her ass.\n\n\"Yes, Master,\" She murmured head down and breathed deeply as she received another three smacks to her heated ass. He pulled her back to her feet then, and he lifted her chin and looked at her sternly. \"Your courage and fortitude during that meeting impressed me, Little One, and while your devotion to me made my heart swell with love, it caused me problems in the meeting.\"\n\n\"Problems, Master?\" Olivia was momentarily confused until she glanced down to see his huge cock straining against his jeans, and her entire body grew warm with excitement. She loved that she had this effect on him and that he was about to use her so wonderfully.\n\n\"Problems,\" he said, pressing both her small hands against his huge, throbbing cock, \"Which you will take care of before you are punished for agreeing to consider their terms. Now strip.\"\n\n\"Yes, sir,\" she said as he released her, and she began her slow striptease. He watched her perfect little body become more and more exposed as she shed her dress, then bra and panties. She slid her hands down her body for his approval watching his cock growing visibly harder before he turned and brought out two coils of black rope making her shiver in delight and lick her lips. \n\n\"Arms behind your back,\" He instructed, tying a few knots in a length of rope. \n\nShe held her arms parallel behind her, and he looped the rope around her shoulders then proceeded to knot and loop it around her arms until there were a series of loops on each arm with a row of knots down the centre, completing a bondage trick he had learned from a Shibari expert. She was practically shivering in pleasure as his strong rough hands worked over her body, giving her goosebumps. He stepped back to admire his handiwork, checking the ties to make sure they were secure and having her wiggle to make sure no circulation was being cut off. Once he was sure she was safe and secure, he tugged on the ropes near her shoulders. He then ran the extra rope up between her thighs before tying it to the loops over her shoulders to create a perfect place for him to grab on to.\n\n\"Knees, little one.\" He said as he tugged her down in front of him.\n\nShe knelt submissively before him as he stripped off his shirt, exposing his toned chest and then shed his jeans and boxers. She bit her lip and moaned as she watched his massive length grow even harder at the sight of her bound on her knees before him. She was practically drooling at the sight of him; all she wanted was to take his cock in her mouth and have him use her as his little slut.\n\n\"Please, Master, let me take care of you.\" She was breathing heavily, and she could feel her thighs becoming wet with heat. She poked her tongue out to taste him, but his hands twisted in her hair and pulled her back.\n\n\"Wait one moment, little one.\" He said, releasing her and walking to the drawer. He bent down and poked around inside for a minute before pulling out a plug.\" Coming back to where she knelt so beautifully for him, he knelt beside her and bent her over, exposing her tiny rosebud, then reached between her thighs. \"Ah, my precious Little One, you are so wet for me already.\" He used her own desire to lubricate the plug and her tight little hole before lining it up and working it in, watching her tiny ass swallow the not so small plug. She squealed at the initial pain then wiggled her ass, getting used to the full feeling, and began to whimper softly as he pushed gently on the base of the plug. \"Such a good girl for your Master, little one.\"\n\nHe took her chin in his hand and met her lips with his in a deep kiss, his tongue flicking hers as he reached out a hand and tweaked her nipples, making her give whimpering moan into his mouth. Reluctantly, he broke the kiss and stood up, watching her as he positioned himself in front of her waiting mouth and gave himself a few quick strokes. \"Are you ready to suck my cock, little one?\"\n\n\"Yes.\" She begged, \"Please, Master.\"\n\n\"Then you will my little one.\" He brought his throbbing cock to her face and felt it engulfed by her hot and waiting mouth. She moaned around his cock and began to suck him. He looked down at the sight of her bound at his mercy, sucking his cock and moaned, holding her head in place. \"That's it, baby.\" His hands twisted through her curls as her perfect mouth began to undo him. She licked around the head of his cock and flicked the underside with her tongue, and his knees almost buckled. He groaned loudly before grabbing her head and forcing himself deeper. \n\nShe moaned around his cock as he began to fuck her face, making him groan at the vibrations she was creating. She looked up at him and watched his muscles ripple as he used her mouth; her pussy was aching, and her ass was on fire, it all felt so good that she felt like she might pass out. She could feel him getting close as her head bobbed up and down on his cock; her lips stretched wide to accommodate his girth; her tongue was working wonders as he sawed in and out of her mouth.\n\n\"Fuck, Yes! So good. So close, baby,\" Genesis breathed raggedly. Olivia tried to bob her head faster, but he held her head tightly as he pumped his cock into her waiting mouth. His balls tightened, and he groaned loudly as he held her on him and shot stream after stream of hot cum into her hungry mouth.\n\nShe moaned with him getting pleasure from his pleasure. He pulled her mouth off him, and she began to lick him dutifully. Once he was clean, she sat back on her heels and looked up at him. She was confident she did a good job and possibly wouldn't be punished now, but a bit wary because she knew that Oscar's insistence that she could have a good life in Perth had gotten under his skin.\n\n\"Thank you, Master,\" she said on a whispered breath as he helped her stand, arms still bound behind her.\n\n\"You are so beautiful, Little One,\" Genesis stroked her cheek with one hand but then thrust the other between her thighs, feeling the evidence of her pleasure. She moaned, wriggling in delight as he began to play with her pussy. \n\nSitting down on the bed, he picked her up and settled her into the same kneeling position on the bed. His fingers continued to caress her backside as he gazed at the spectacular view that was his Little One. Naked and bound for him, she looked amazing. Her tiny, pert ass was high in the air, and her thick curls fell in a soft curtain around her face. Her bare pussy lips glistened with her arousal, and the plug was still deep in her ass.\n\n\"Master?\" She asked, shaking him out of his gazing. He shook his head, regaining some composure.\n\n\"This is what just seeing you like this does to me,\" He gestured to his thick cock, standing to full attention again. \"You need to take care of it again, little one.\"\n\n\"How should I do that, Master?\" She asked coyly, wiggling her pink hand-marked ass at him slightly as she turned to look over her shoulder. He groaned at her words and fell upon her, bending her before him and thrusting his aching cock into her tight, wet cunt. She moaned as he began to pound into her furiously. \n\n\"Fuck! So tight and wet for me. Just like my girl should be.\" She felt so tight around him, her expert muscles clenching around his throbbing cock, forcing him out, then sucking him in. He pounded in and out at an alarming rate, both of them loving every minute of it. He reached around to grab on to her breasts, pinching and twisting her nipples, wishing he had thought to put clamps on her, making her moan and squeal in pleasure even more.\n\nOlivia felt Genesis lose himself in her and the unrelenting pace of his fucking. So was close, so close and she tried to hold back her desperate cry for release when he twisted her nipples and bit into the soft place between her neck and shoulder. Her whole body shook and thrummed with please, and she gritted her teeth against being pulled over the edge into oblivion.\n\n\"Please, Master, Oh fuck, please, I need to cum,\" she got out in high staccato squeaks and whimpers.\n\n\"Go ahead, little one.\" He moaned against her neck, knowing his release was just around the corner. \"Cum for me, little one.\"\n\nJust as the words left his lips, Olivia let go. She began to moan and convulse in a massive climax while her pussy clenched around him and the plug in her ass. She was barely with it enough to realise that he came within moments of her with a roar.\n\nGently he pulled out of her and laid down next to her, pulling her into his arms.\n\n\"I am yours, little one. Just as you are mine,\" Genesis admitted to her. \"I love you, and I will marry you as soon as we are both free of all the Suebi bullshit. You will be mine in every way possible, including being my wife.\"\n\nOlivia blinked not sure if she could believe what he said. She loved him and knew that he loved her but marriage and a wedding. Just the thought of her last wedding day caused her to freeze in his arms. He rose above her and frowned down at her troubled face before she pulled a mask over it and looked up at him with love and smiled. She was saved by having to answer any awkward questions before she had time to think about what he was saying by his phone ringing out his loud melody from where he had left it by the door. \n\n\"You better get that in case it's Noah,\" she whispered through her smile.\n\n\"This conversation is not over,\" he warned her rising from the bed. He watched as she squirmed to get comfortable in the bed with her arms still bound and smiled. She was the most incredible woman, and every day he fell more in love with her. He understood why she might not want a wedding after what had happened with Remington, but she had to know he would never force her into that situation. They could elope, or have a garden wedding at home on the family property with as few or as many guests as she wanted. Perhaps pushing the subject now when there was so much else to consider wasn't necessary, so he lightened his mood and concentrated on the call.\n\nGenesis frowned as he disconnected the call from his father. So much for spending the evening wrapped up in his little angel. Truth be told the downtime today had rankled him. There were too many unanswered questions that plagued his thoughts, and the gut feeling he had about Apollo's relationship with Olivia's father still bugged him. He knew there was something he was missing, but he couldn't work out what.\n\n\"Come, little one. It seems we are having visitors this evening after all,\" Genesis leaned down to kiss the woman he loved who still wore the rope he had bound her in. As he slowly undid the bindings, he took in the fading lines that decorated her skin and hummed in pleasure. She was everything to him and never ceased to surprise him with a need that matched his own so well. \n\nHe had always dated tall, svelte model types before. Independent women who knew their worth and what their submission was worth to a Dominant. Never would he have believed the strength and resilience of a petite woman like Olivia or how much he would enjoy her dependence on him. Love swelled in his chest as she looked up at him with only love and devotion in her eyes, and he took then her hand taking her to the bathroom to clean up before his father's arrival.\n\n\"I can order us dinner while you and your father talk if you like,\" Olivia offered as Genesis went to answer the door.\n\n\"Somehow I think he will want to talk to you rather than me,\" he said thoughtfully. \"Leave dinner for now, and we can ask Dad whether he would like to join us.\"\n\nThey didn't have to wait long before Armando was at the door with Isaac following close behind him when they entered. After a quick explanation of the name oddity with a little speculation.\n\n\"I don't remember much,\" Olivia said frowning. \"Remy gave me a necklace with one of those tribal knot things, and she commented on it to Remy as if she was surprised. She was tall and beautiful, and she and Remy knew each other well I think he introduced her as an old friend, but we barely spoke to her for more than a minute or two as far as I can remember.\" She hated that she was practically useless in helping her own defence. She'd been truthful, but without proof, no one seemed to believe her except Genesis and his brothers. ",
        "\"Did you see her any other time? At the house or the restaurant where you worked? Did she come to your wedding?\" Armando asked, noticing his son stiffen at the words.\n\n\"No, I don't remember seeing her again. It would have been hard to miss her. She was tall and gorgeous, and I don't know she was just hard to miss even in a crowded room,\" Olivia said. \"Sorry I can't be more help.\"\n\n\"That's more than enough to help us put some of the pieces together,\" Armando reassured her. \"We also have the papers for you to sign so we can get them to Noah and Marcella in the morning.\"\n\n\"Marcella? She's still here?\" she asked having believed that once she gave the Zenati men the proof Olivia needed to defend herself, she would have disappeared entirely rather than be forced to return to the city.\n\n\"She is the one brokering the deal with Bea Kottman,\" Armando nodded. \n\n\"I just thought... It doesn't matter,\" Olivia gave a half shrug and smiled.\n\n\"You thought I would take over the negotiations now?\" Armando prompted.\n\n\"Noah more so than you, he always takes over her plans except when she went to find my boat but then you all took over that when she told you where it was,\" she admitted.\n\n\"I guess that is what happened,\" Genesis said in a troubled tone. \"Not this time, however. It is Marcella's contact that wants the Royce mansion as payment and that contact is only dealing with Marcella even though Noah is with her.\" He could see where they had immediately pushed Marcella out of the investigation of the boat without even so much as a thank you for finding it and alerting the Zenati. Again, he felt guilt for the fact that he had given the woman no reason to trust or confide in him or his brothers when she had come to help her sister.\n\n\"Did Bea ever mention any family of her own? Children or the like? A son or a daughter? Maybe a brother, even her husband, assuming she had one,\" Isaac asked speaking for the first time since following Armando into the spacious apartment.\n\n\"Her husband had died along with her son in a car accident. Her daughter was all grown up and didn't need her anymore, so she was happy to have me to look after. Well me and Remy,\" Olivia said, causing Genesis to lose some of his control and growl at Remy's name.\n\n\"A daughter that never visited her at the house?\" Isaac asked.\n\n\"I was, um, unable to leave my room when I was injured and I went to work most days that I wasn't so I couldn't tell you that for sure. There were visitors I could hear them coming and going on occasion, but I couldn't say if she were one of them. If I had to guess I would say no, she was hard to miss even in a crowd, in the house she would have stood out, and I probably would have heard her if I was there,\" Olivia shrugged.\n\n\"I know some women like that,\" Isaac chuckled. \"I'll let you get back to the actual reason we're here.\" He waved his hand toward Armando and the legal paperwork they had brought with them.\n\n\"Remington's mansion was part of the assets belonging to one of his legal corporations that also owned the restaurant and building Olivia worked in as well as a few others. As Mrs Royce, when his assets are released, she will assume control of that corporation. Because Remington hasn't nominated his successor in the business she could, and in this case will be able to divide it up and dispose of it as she wishes. There is no will or legal provision for an inheritance or a successor in the business to challenge her and her right to claim his property despite that she was married to the man less than a week before becoming his widow,\" Armando explained.\n\n\"Fuck that's right! Fucking stupid I was looking in the wrong place!\" Isaac burst out. \"Excuse me for a moment please.\" He stood and taking his laptop with him went into the dining room and pulled up a chair.\n\n\"He does that sometimes, best to let him do what he needs to before asking questions,\" Armando chuckled. He enjoyed working with Isaac almost as much as Noah. Isaac's mind worked in mysterious ways, but he always got results and could often see the end game to puzzles that weren't apparent to anyone not paying attention yet.\n\n*****\n\nLeaving the cop on the side of the road as Noah entered the driveway leading to his family home, he smiled. Junie had been more than happy to assist with his request after the debacle in the hospital was explained to her, and he had been pleasantly surprised by the suggestions not only she made but his Uncles who were the leaders of their family as well. Anthony and Gianni could be ruthless men when called upon. Still, Noah had only ever known them as indulgent and generous uncles, and their wife Junie was the maternal force behind every part of their family even embracing their difficult mother and including her in the women's business. He hoped that his table held onto the values of their predecessors.\n\n\"My Uncles and Aunt live here, but they are in the city caring for Dom and Xavier right now. The staff know we are coming though,\" he said, hoping that information would reassure her. \"My grandfather built this house for my grandmother, who was a little eccentric much like Madrina but not as extreme, in some ways at least, he chuckled. \"This is where we have our Halloween festival,\" he indicated the colossal house that came into view. \n\nMarcella was speechless as the house came into view. The sun was setting behind it, and the front was lit up with golden hues from strategically placed lamps. It was all so much to take in as was the enormity of the grounds it sat on. She continued to take it all in as Noah guided the car toward it and then curved around the back to a steep incline that rose as if from nowhere amid the flat surrounds. The car wound up a zigzagging road affording her a spectacular view of the house and grounds during sunset. A small area lit with two flaming torches came into view at the top of the steep incline, and Noah pulled his car to a stop.\n\n\"We're here,\" he said with a wide grin, his eyes glittering with excitement as he turned to look at her.\n\n\"We're where exactly?\" Marcella asked, narrowing her eyes at him. They didn't seem to be anywhere at all. \n\n\"Your final challenge for the day and hopefully my home run after the little show you gave on the way here,\" he teased with a chuckle.\n\n\"Okay,\" she said, slowly looking around again. \"Let's go then, and we'll see if you get a foul ball or not,\" Marcella said with an equally teasing tone in her voice.\n\n\"No way you will foul ball me for this,\" he said radiating confidence as he clicked off his seatbelt and stood from the car hurrying around to gather her to him as she stepped out unaided. She looked amazing in the red dress and fuck-me heels. He had worried for a moment about the heels but realised that was all she wore on a day to day basis unless she was pretending to be Stevie and she was as confident in them as she would have been in her flat shoes. Noah pulled her to his side as they walked toward the two flaming torches.\n\n\"Wait you want me to wear a harness while wearing this dress?\" Marcella baulked at the idea.\n\n\"You have to admit it's a fairly flimsy material that will not be hard to secure a harness over and it will only be for a little while and where no one will see us. Not a soul will come any closer than that house to us tonight,\" he assured her indicating the huge mansion they had driven past. \"Please trust me, Honey, you will love this, I promise. If on the off chance that you don't I will have someone from the house come and pick us up, and I will take you back to StarCity immediately, but this is our one day before the shit hits the fan so to speak and you promised I could guide you through the best things about my home town.\"\n\n\"I guess the day has been pretty amazing so far,\" she gave him the credit he was due. She had already made up her mind that she would give him his home run. She wouldn't be staying once she got the evidence, she needed to ensure Olivia's safety so there would be no repeat performances, this wasn't just his one chance it was hers as well.\n\n\"Great!\" Noah grinned and helped her with her harness before donning his own and attaching the straps to a wire above their heads that she had barely noticed in the dim light. Then he wrapped them in a type of sleeve zipping it up and locking it into place so that they still stood side by side. Through the whole process, Marcella said nothing but instead watched and soaked up the excitement Noah exuded. This was obviously something he enjoyed very much, and it was hard not to get caught up in his excitement.\n\n\"Ready?\" Noah asked.\n\n\"As ready as I will ever be,\" she shrugged.\n\n\"Good now just relax I need to lift our feet from the ground but don't panic I won't let you fall. Not now, not ever,\" Noah promised solemnly as she tried to relax while they tilted forward in the twin sleeve and Noah secured a strap to the shoulder of his harness while reaching for a second one above them. \n\n\"Marcella?\" he asked, turning his face to hers.\n\n\"Noah?\" she laughed, turning her head to find their faces so close together.\n\n\"Thank you for trusting me today,\" he murmured as he kissed her awkward, having to stretch his neck to press his lips to hers. The moment he broke the kiss, he pulled down on the strap that had kept them in place, and the zip line took them into a mild decent as they picked up speed. \n\nMarcella squealed as they began to move and pick up speed. The setting sun still glowed on the horizon, but the trees they flew into like birds seemed shadowy and almost menacing as they brushed their rig, like claws trying to prevent them from passing. It was like a ghost train almost, and her heart raced with the adrenalin-fuelled flight through the trees. Some parts seemed steep and rocketed them faster before using that moment to push them along flat or slightly inclined parts. She thought the journey would never stop even though it had probably only been minutes as she flew through the landscape, sometimes directly into the setting sun. It was unbelievably fantastic, and she had to admit Noah had earned the home run he wanted tonight.\n\nNoah never took his eyes from Marcella during the trip down to their destination in a gully below. He watched the range of emotions cover her face and grinned widely whenever she looked at him. Her squeals of panic when they had first started flying had turned into squeals of joy, and he couldn't deny how turned on the sound made him. He wanted this woman like he hadn't ever wanted anything else in his life. Hope blossomed anew as he reminded himself of her conversation with Xavier and Oscar. She trusted him, and she was inclined to accept his proposal as lame as it was at the time. He would make up for that, maybe even tonight if all went well. She needed him to meet her on equal grounds, not to dominate but rather wrest control from her now and then. She needed to put up that fight and know that he was worthy of her submission to him even if it was only temporary.\n\nAs the flight came to an end, Noah undid the strap from his shoulder ready to put his feet down as the zip line slowed along the final incline to the edge of the magnificent treehouse his grandmother had designed and used as her own space for many years.\n\n\"Almost there,\" Noah told Marcella and slightly eased off on the strap holding their feet in place to show her that she would be back on solid ground in a minute or two.\n\n\"Oh,\" Marcie said, sounding disappointed. Then a vast treehouse lit up with fairy lights came into view as if something magical had transformed this part of the rainforest. This wasn't a rickety treehouse put together by kids who had scavenged bits and pieces here and there. This was a well-designed house that could sit on any street in a middle-class suburb. Her feet touched down on the wooden planks of the large deck, and she looked around eagerly, taking it all in. This was absolutely astonishing and something she never would have guessed at from their position on the hill where they had taken flight. It took only moments for Noah to remove the sleeve and harnesses so she could walk freely.\n\n\"Can I explore?\" she asked tentatively.\n\n\"For a price,\" he chuckled and closed the distance between them pulling her to him and bending to kiss her deeply for several long slow moments. \"Now, be my guest,\" he said after clearing his throat from the equal amount of heat Marcella had put into that kiss. He swept a hand out at their surroundings and encouraged her to explore rather than have him show her around. There were many ingenious surprised hidden around the treehouse. It had been his grandmother's favourite place to be either alone or with one or two others at most when she shared her secrets, and special stash of Halloween themed goodies all year round.\n\nHe watched as Marcella scanned the wall before her not seeing any obvious door. She went to the side where the deck curved around for a few feet and frowned even running her hand over the wall in case she just couldn't see where the join was for a door. He couldn't help his smirk as she walked to the other side of the house again seeking admittance but found nothing. She was silent in thought until she finally turned to him.\n\n\"It's a hidden door?\" she asked, tilting her head.\n\n\"It is,\" Noah stepped forward to show her, but she held up a hand.\n\n\"Just give me a hint and see if I can work it out,\" she said with a curious tone in her voice.\n\n\"The entrance is not where you would expect it to be,\" he shrugged then smiled as she narrowed her eyes at him as if gauging his clue. She turned back to the large double-hung windows and considered the large wall that faced the decking. He leaned back again the rail, curious as to what she would do next.\n\nThere were no seams in the wall as far as she could see and she reasoned that even if there were a panel or a lever there would be at least a small seam and she had seen none. She looked up at the roof and then down at the ground. She hadn't been concentrating hard enough on the treehouse to know if there was more to it beneath and she turned to face Noah again still looking for a way down if not through. \n\n\"Keep smirking Zanetti and see how close that gets you to home base,\" she grumbled at him.\n\n\"You asked me not to show you the way in,\" he defended himself.\n\n\"Your hint sucked,\" she threw back at him at the same time her eyes lit on a dark seam in the rail near where he stood. Maybe he hadn't sucked with his clues she thought as she moved closer to the spot in the rail. As she got close, she could see a platform and a staircase leading down. \"I bet that impresses all the girls you bring here after a perfect date.\" She pushed in the section of the rail, and it swung out, forming the upper part of the handrail. \n\n\"Perfect date, huh,\" Noah chuckled. \"I wouldn't know I have never even considered bringing anyone else here. Can't say I have ever gone to this much trouble for a date either.\"\n\n\"Sure, whatever,\" she dismissed his words offhandedly as she got to the bottom of the stairs and found wide French doors. Locked wide French doors. \"Do you have a key?\"\n\n\"If you stop blowing off everything I say as if it's a lie or a line,\" he grumbled. Pulling her close, he kissed her. \"Only you,\" he murmured, refusing to fight with her again. Then he opened a hidden panel and slid the latch up to unlock the doors.\n\n\"Welcome to Nona's treehouse,\" he said and let her lead the way inside.\n\n\"Wow,\" Marcella gasped. This was not what she had expected at all. Rough natural woods created furniture that was both stately and rustic and twisted her mind. Maybe it was the many gilt-edged frames on the walls housing photos of all of the family members that gave it that added feel of stately luxury or the fabrics used for the curtains and cushions of the sofas and chairs. The kitchen seen easily within the open-plan space was definitely a working kitchen, and she noted a bottle of champagne sitting in an ice-bucket with two crystal flutes waiting for them. \"This was your Nona's house?\" she asked.\n\n\"No, my Nona lived in the big house we drove past with my grandfathers,\" he chuckled. \"This was her private space, though. When she needed time to think and manage her business dealings without interruptions or on occasion to spoil her grandchildren with tea parties and games, she came here. There are a lot of hidden wonders and surprises in these rooms.\"\n\n\"I can see that,\" Marcella still looked around in awe as she continued into the space. \"And that not all of the family came here. There aren't enough seats to manage all of her children and their wives let alone the whole family.\"\n\n\"True this was more for special times with Nona or secret meetings with the women she trusted most,\" he explained. \"She is missed very badly by the whole family even though Junie is pretty incredible at those sorts of special touches too. She won't use this treehouse, but I expect Emma will when the time comes. She never met Nona properly before she passed.\"\n\n\"So this is part of the traditional property of the Chair and Oracle?\" Marcella asked. \"And they let you come here to seduce a woman they barely know?\"\n\n\"I wouldn't put it like that,\" he said with a grimace.\n\n\"How would you put it?\" she asked.\n\n\"I told him I was bringing the woman I planned to marry as soon as she said yes,\" Noah advanced on her then, and she backed up against the wall. \"I proposed, and you wear my ring. I'm your fianc\u00e9, and I like it that way.\"\n\nHis soft chuckle filled her ears as he bent to kiss her. Why did he have to keep talking like it was more than just a game? They both knew she couldn't stay once everything she needed to do for Olivia was done. Why did he have to keep pushing her about this stupid engagement, it was bad enough he had pushed her to use it as a crutch when talking to Xavier and Oscar. They both knew it could never work. She groaned in frustration and pushed against his chest to make some distance between their bodies.\n\n\"Why couldn't you have just stuck to the baseball metaphors. I would have given you your home run after the flight through the trees and this incredible place. Why do you always have to push me to where I don't want to go!\" she hissed in frustration at him.\n\n\"Honey we agreed on a lot of things today including the metaphorical home run which I plan to claim now that you have admitted this was the perfect date,\" Noah said matter-of-factly. He had crowded her against the wall without quite touching her. \"We can argue about our plans to get married after I make my home run,\" he challenged. \"I know you. I have watched and wanted for long enough, and I think you have as well, don't you?\"\n\nNoah stood close enough that his breath skimmed over her skin, causing goosebumps to rise on her neck and arms and she cursed inwardly that he was right. Not about any else except that she wanted this, but it galled her to have to admit the truth of his words. She had no plans to give up any of the control he had promised her until her plan had come to fruition so if this was the issue he was going to tackle first she would give as good as he gave. She pushed him again, planning on shoving past him to create some space between them, but for the first time, he didn't give way. His taller broader frame towered over her not intimidating, but as an immovable block then he grabbed her wrists as she tried to shove him again and turned her, so she was facing the wall.\n\nNoah crowded her space then and bent his head to nibble at her neck just behind her ear and smiled in triumph as she let out a barely perceptible moan. He pressed his hips into hers, showing her the strength of the rock-hard erection he had been sporting since their interlude on the yacht. She would be his he just had to make her see how inevitable that was for them both.\n\n\"I know you want me as much as I want you,\" he whispered breathlessly into her ear and revelled in the shudder of her body at his words.",
        "\"Do you?\" Marcella clipped out, surprised by the intensity in her voice. She struggled to move in the small space he had left her between his arms, which anchored to the wall on either side of her closing her in. Finally, she managed to turn herself around to face him and stared into his unwavering eyes for long moments, neither saying a thing. Much to her chagrin, she was the first to look away lowering her head to take a deep breath in the confined space without breathing in his masculine scent, not that it was possible, but she had tried. \"Fine,\" she mumbled. She had agreed to this, but she wasn't about to make it easy for him.\n\n\"Say that again,\" Noah said in a low, slow voice, he lifted one hand from the wall to her face and tipped her chin up to look into her eyes again. It was a dare, a challenge, even a temptation for the fiery woman before him he knew but if they were going to have a battle of wills here and now he planned to win. \"Say. That. Again.\" He punctuated every word as he watched her lick her lips in indecision.\n\n\"Fine,\" she hissed out feeling backed into a corner and her control of the situation and him rapidly diminishing. The hand on her chin caressed over her cheek and around to tangle in her hair as his eyes scanned every minute particle of her face as he raised an eyebrow at her. She was losing all control now, and she knew if she opened her mouth again, she would start a shouting match neither of them would recover from. Pressing her lips together in a firm line, she held his gaze.\n\n\"Again,\" Noah growled and gave her hair a sharp yank to spur her to talk. If she needed to fight verbally or physically to give in to him then so be it, but he would not kowtow to her as he had been and she needed to know that. He tightened the fingers in her hair and saw her temper flare in her eyes.\n\n\"I. said. Fine! So, either fuck me or fuck off!\" she spat at him, her eyes blazing as she lost all control of her temper and the situation. Before she knew what was happening, he had pulled her to his chest as he stepped back, making her stumble forward, and his free hand slapped her ass. His grip on her hair tugged and he bent his head to crush his lips to her in a bruising kiss that, in her stunned state, she couldn't fight at first. He'd fucking spanked her!\n\nNoah counted on her momentary shock to deepen the kiss, but it was only a moment before she fought back trying to wrest control of the kiss from him, their tongues wildly wrestling as he invaded, tasted and explored her like never before. She squirmed and fought his hold until he allowed her to break the kiss and step back against the wall again. A hand lashed out to hit him, but he grabbed her wrist before it connected with his cheek.\n\n\"What's the matter? Scared of a girl taking control?\" Marcella taunted and was rewarded with him crowded her space again briefly before he grabbed her by her waist, and bodily picked her up, carrying her into the bedroom.\n\n\"Reneging on my home run?\" he questioned, dumping her on the bed. \"Doesn't seem your style to renege on a deal. I thought you had more honour than that,\" he taunted.\n\n\"Hardly. Like you said I want it but more than that I want to know if you're as good as you think you are when you don't have a submissive woman catering to your every need and giving false reviews,\" she taunted back pushing him as hard as he pushed her. He was tall and strong, and she was greatly outmatched physically, but she wasn't scared of him. She didn't have that sickening fear in her gut that seemed to paralyse her when aggressive men tried to force her to submit them. It took her a moment to isolate the feeling that sat deep in her gut now, and it surprised her to find it was the same adrenaline and excitement that had filled her all day. This was yet another of his challenges, and as she had all day, she would rise to meet his challenge.\n\n\"Strip,\" Noah said, looking at her as he unbuttoned his shirt. \"This has been coming since that night you invited me to your room, and I turned you down, let's not waste any more time,\" he growled the heat of his need for her evident in his voice and expression.\n\nMarcella decided to take her time and make it worth the wait. She stripped as slowly and provocatively as she dared, but it wasn't fast enough for Noah who grabbed the dress as it was halfway over her head and ripped it the rest of the way. Then he spanked her hard again. \n\n\"If I wanted a striptease I would have put on music,\" he growled.\n\nHer hand lashed out as if to slap him again in response to the slap on her ass, but he only grabbed it and held her at bay as his eyes roamed over her figure.\n\nShe was left standing before him in her underwear. She'd changed it on the boat, and it was nothing special but the lace panties, and matching bra had been his choice when he packed her bag she realised. She reached up to undo the bra clasp at the front, but his hands were there first, and he spun her using the bra to lock her hands behind her back. \n\n\"Try hitting me now, kitten,\" he hissed back at her hissing spitting reaction to the loss of her hands. He liked the pet name it suited her well, particularly at this moment and he considered his search for the perfect pet name for her might be over. \n\n\"Fuck you,\" she spat. \"Is the big man feeling all-powerful now that he has the little woman at his mercy?\" she ground out in another long hiss of words.\n\nAt first, Marcella tried wriggling her hands-free but realised that Noah knew what he was doing with restraints, not that she should be surprised. She honestly hadn't expected him to be this forceful. He had always held back even when he had found her in Star City after her escape. He had backed off when she pushed him away at that time. This time he wasn't taking any of her shit and she both loved and hated this scene playing out between them. Still, she wasn't an easy conquest, and the man had his work cut out for him if he thought the use of restraints would soften her will.\n\n\"Such a feisty little kitten, with all that hissing and spitting. I think I quite like this feral side of you and I know I am going to enjoy taming it,\" he murmured low and deep but not in a threatening way. \n\nAt no point had she felt unsafe with him, and if she asked him to stop and truly meant it, she believed he would. This was still their game, the game they had been playing ever since he rejected her just as he said. This fight for control had been coming for a long time now.\n\nIgnoring her hissing squeals, Noah bodily picked her up and threw her back onto the bed. He reached for her underwear as she flailed about and he ripped them off her body, stepping back to survey her nakedness properly for the first time. An intense urge to claim that stunning body as his own came over him and he grasped her ankles as she kicked out at him inspecting the red fuck-me heels she still wore and contemplating how dangerous it would be for him to let her keep them on. There was something about a woman dressed only in heels that excited him even more.\n\n\"Got a shoe fetish of your own?\" Marcella snapped, struggling to free her legs and wishing she had use of her arms.\n\n\"Maybe,\" he shrugged, \"But it might be safer to get these weapons out of the way this first time.\" He slowly pulled her shoes off and put them out of sight. \"You can have them back if you're a good kitten,\" he taunted and then began a slow nibbling and kissing trail first up one leg and then the other careful to avoid the wet juncture of her thighs. He smiled as she let a sigh of frustration slip, but she had stopped fighting him for now, so he moved over her hovering to watch her face as she gazed up at him. Changing the pace, he lowered his head to kiss her in a deep but sensual kiss. He felt her tongue wrestle with his in a battle for power again, and he pulled back slightly, not letting the battle for control of that kiss escalate. He kissed her nose and then slid from the bed to stand and gaze down at her again.\n\n\"What?\" she asked, turning toward him not really sure why he had left her on the bed alone again. From this vantage point, his body looked chiselled and clearly defined if not overly muscular. He was perfection, and she could never deny her attraction to him seeing him like this. She squirmed at the heat and need he had built in her with his manhandling of her, but she managed to restrain from making any sound that might show him how much he affected her.\n\n\"Keep looking at me like that and see what happens,\" he chastised her suddenly and stalked to the end of the bed. He knew he couldn't be the Master with this woman, at least not yet anyway. He had to gain her trust, and while she watched him with uncertainty now, the warning he had given her was as much for himself and the need to rein in his baser urges even though she couldn't understand that yet. She was right when she said he had submissives to give him what he wanted, including five-star reviews, but none of them mattered, and they all paled in comparison to her and her fiery nature.\n\n\"Like what?\" Marcella purred innocently. She knew exactly what she was doing and how hard it must be for him not to slip into a full dominant mode and force her submission through his superior size and skill. He surprised her then by grabbing her hips and flipping her onto her belly, making her squeal again. He moved up quickly, forcing her legs wider to accommodate his own as he kissed over her back to her neck, brushing her unruly curls aside as he nuzzled her neck.\n\n\"Fuck! The things I want to do to you...\" he groaned as if holding himself back.\n\nMarcella shivered at his words and felt the hard length of him press into her thigh as he covered her with his body. He tangled a hand into her hair again and pulled her as he sat back on his heels so that she straddled his legs and her back rested against his chest. His cock now lay between her thighs, hit and hard against her wet pussy. He reached around her stroking his hands down her body one coming to rest over her pussy his long fingers delving between her fold seeking out her clit as the other stroked back up cupping her breast and massaging the soft flesh occasional pinching at her nipples gently to gauge her response.\n\n\"Oh, fuck me,\" she said in a purring sigh. \"I won't beg if that is what you are waiting for,\" she told him with a breathless purr as her body heated and her breathing sped up at his teasing hands and fingers. It was a weak last stand. She was ready to give in now just to ease the need that had been building in her all day despite the two orgasms she had which had given her little relief but instead fuelled her need for the fucking she knew he would give her if she let him rather than staying in control and taking it for herself.\n\n\"You don't have to beg, Kitten, just tell me what you want,\" Noah murmured in a voice husky with his own need. \"We have had a whole day of foreplay, tell me what you need right now,\" he ground out, and he knew that even if she did beg she was still winning in this battle. He cursed inwardly that he would give even this much control to a lover, but it didn't feel wrong either.\n\nMarcella knew that Noah was barely hanging onto to his infamous control, and if she chose to push him, she could still come out on top. It occurred to her then that she weirdly was on top already. He had positioned them so that they could share the dominant position. Had he done that on purpose, for her, would he have even realised?\n\n\"Tell me, Kitten,\" Noah urged in a deep growl. \n\n\"Fuck me, Noah, please,\" she finally relented in a demanding voice. If he could find a way to meet her halfway, surely, she could reciprocate at least partially.\n\nNoah could hear the demand in her words rather than the needful plea he had been hoping for, but he couldn't hold back his own need much longer. One last try to get her to admit he was her equal or better in this realm and then he would do as she demanded. He rolled her clit under his fingers faster, drawing his hand from her breast to wrap lightly around her throat. He pulled her head up and back against his shoulder as he growled in her ear.\n\n\"Are you sure you want to make demands of me right now?\" he asked. \"I want you, even need you but I will have no problems leaving you here while I take a cold shower if you cannot even give me even a sliver of what I need.\" He flicked her clit sharply, and she quivered in his hold. He could feel how desperate she was becoming and backed off a little not letting her get close enough to push herself over into the climax she wanted so badly.\n\n\"What is it you need?\" Marcella practically whined, her hips churning trying to gain more contact with both his cock and his fingers.\n\n\"You, to stop fighting me at every turn,\" he growled loudly losing his control entirely. He leaned forward pushing her shoulders back to the mattress while keeping her hips high. Without any warning, he slammed into her feeling her tight walls give to make room for him as she cried out in both pain and pleasure. \"Fuck, yes!\" he groaned and began to fuck her hard and deep trying to measure his strokes, so he didn't come as fast as his body threatened to do.\n\nMarcella's mind went blank, and the fight left her as she found herself bent forward, and Noah's impressive cocked buried itself in her in one thrust. She squealed and lost her breath as it took a moment for her to catch up with the sudden shift. Then she began moving with him. She didn't care right then about anything except the looming orgasm as every stroke he made into her surged against her G spot and pushed her closer to the edge. Her body started shaking as she lost control of everything but the delicious feeling of being fucked by someone who was without a doubt claiming her as his. She spread her thighs wider and bit into the mattress as she cried out again and again and slowly lost her grip on reality.\n\nFeeling her thighs widen further for him Noah gave in to his own need and dug his fingers into her hips drawing her back into his thrusts the slap of skin on skin showing the brutal force he was using. He felt her body begin to shake and jerk in warning of her approaching climax. He fully sheathed himself within her and stopped. Lifting one hand, he slapped her ass just to see her marked, and the red imprint of his hand didn't disappoint him. She was his, and after today he would make sure she knew it.\n\n\"Not yet,\" he growled his voice sounding as breathless and desperate as he knew she was.\n\n\"Why can't you just fuck me!\" she panted the frustration and heat evident in her shrill voice. \"Even this has to be a game?\" she asked with a whine. Immediately the head, she had rested on the mattress was pulled up, and her back rose to his chest again. \n\n\"I am fucking you, and while you have gotten off twice today I haven't, and this climax belongs to me,\" he growled into her ear. \"It's mine, just as you were always meant to be mine,\" he added wondering how she would take that as his hand lowered to her clit again as she rotated her hips grinding onto the cock left buried inside her. This is not a fight you're going to win, kitten,\" he warned as she tried to manoeuvre out of his hold again by throwing herself forward.\n\n\"Relax, Kitten. Relax and let go of all that control. You know I would never hurt you. You are safe here with me,\" he prodded, breathing deeply to offset the delicious feeling of her pussy squeezing around his cock as she practically danced on his lap. Placing a hand on her hip, he encouraged her to move up and down his cock before begin to meet her halfway. \n\n\"Please, fuck me,\" Marcella hated that she had been reduced to begging but she was beside herself with the need for the orgasm that was just out of reach. \n\n\"Your mine,\" Noah said. \"Mine now and in the morning you will still be mine,\" he growled. \"Tell me you know that we belong together and whatever you want and need is yours,\" he growled, letting her lean partially forward like a taunt of what she wanted and needed. \n\n\"Yes! I understand!\" she cried out and he relaxed his arm letting her fall forward and reared up behind her again fucking her brutally his hand landing on her ass occasionally as he pushed her beyond the edge he had kept her on. He watched as her body shook and jerked in spasm as a tidal wave hit her and her amazing pussy clenched and milked at his cock while squeals lanced through the air with every deep pounding of his cock while she floated on a sea of endorphins.\n\nIt had been a long time since Marcella had experienced an orgasm that sent her into the stratosphere like this one. Her whole body twitched and jerked as electrical currents ran through every network at lightning speed. Noah continued his assault on her clit and pussy as she barely had the strength to remain the position, he held her in. \n\nHis kitten was weakening in his arms, and he drew back quickly, guiding her the mattress and rolling her to her back. He leaned down and kissed her breathless mouth as he once again plunged home into the warm depths of her pussy where he planned to be as often as possible from now on, she mewled softly her body responding still to what seemed to be an on-going orgasm. Her eyes were glazed as she looked up at him and he wondered briefly if subspace was possible in a reasonably vanilla scene like this or if she was just on an endorphin high fuelled by the overload of adrenalin she had today.\n\n\"Come back to me, Kitten,\" Noah cooed his breath harsh as he continued to fuck her. Her eyes remained glazed, and her body shook little beads of sweat forming between her breasts that he leaned forward to lick and continued up to her mouth, kissing her deeply taking all she could give him. \"Your mine,\" he reminded her as his strokes became less measured and his body tensed feeling the ticking in his balls and the rush that accompanied his climax. He roared his release and relief before collapsing on top her, stroking her hair and kissing her lightly along her jaw and neck as he regained control of his body. \"Mine\" he murmured again needing her to understand that he could never let her go now. \n\nMarcella stayed silent. She wasn't his or any man's possession. She didn't know why he was so determined to claim her when all they did was argue and taunt each other. It didn't make sense. Nothing about this man had ever made sense to her. Especially the attraction that kept her coming back to him time and time again even when they weren't being pushed together.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "brothers",
        "dominance",
        "family",
        "submission",
        "treehouse",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-23"
}