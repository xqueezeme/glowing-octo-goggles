{
    "title": "Endangered Ch. 06",
    "pages": [
        "Chapter 6 -- LTPC\n\nHi folks,\n\nSorry about the wait. Thanks for the encouragement over the years.\n\nI'm still working on chapter 8 and will release 7 once I'm happy with it.\n\nA thanks to WideAwakeNow for helping with editing.\n\nStay tuned and I hope you enjoy.\n\nLTPC\n\n***\n\n\"Annabel, wake up,\" Chris gently shook his sleeping girlfriend.\n\n\"Hrmm? What is it?\" came the sleepy reply.\n\n\"Open your eyes.\"\n\nReluctantly, Annabel forced her eyes open and was met with an unfamiliar and altogether unsettling sight.\n\nAs she blinked away sleep, everything looked strange; greyscale and transparent where there should have been colour and texture, lit with an otherworldly purple light she couldn't place the source of.\n\nThe Ether.\n\nShe jolted, her body shedding its blanket of slumber instantly; sitting up in bed to face the culprit of her inter-dimensional travel. A gasp past her lips as she laid eyes on her lover, positively radiating with the purple essence of his aspect.\n\n\"Chris... you, you look... you're glowing.\"\n\n\"Thanks Dee, you don't look too bad yourself,\" he chuckled, scooching closer and running a hand up her side to cup one of her small, naked breasts playfully.\n\n\"You know what I mean,\" Annabel held his hand against her chest, interlocking her fingers with his. \"You're pulsing purple.\"\n\n\"That's just the dragon soaking up energy. How's Bartholomew?\"\n\nAnnabel found the excited enchantment prancing around her thigh, letting out puffs of smoke across her skin, apparently quite chuffed about being in his creator's aspect.\n\nLooking around, she was stunned by the absurdity of her current position. The room was the mirror image of their bedroom back in the Norm, but everything looked like it was made of milky shadows.\n\nShe was in another dimension, herself and Chris the only 'fleshed out' objects visible.\n\n\"How is this possible, Chris? We took science together, didn't we? How are they going to explain stuff like this?\"\n\n\"I don't know, Dee, perhaps no one does for sure. Clearly the universe is larger and more complicated than can be defined by our current understanding. Isn't that scientific enough?\"\n\n\"No,\" Annabel wasn't convinced. \"How did you get me here?\"\n\n\"Well, when I did it with Michelle, I felt my dragon surround her in a layer of energy so that I would be responsible for the drain required to maintain her in the Ether. I did the same thing for you and the cost is manageable; plus I'm absorbing energy around us all the time.\"\n\n\"It might have been nice to be awake,\" she protested.\n\n\"Hey, I was just trying to find somewhere to put you so I didn't have to listen to your snoring, another dimension seemed appropriate.\"\n\nLaughing, Chris fully expected to receive a blow about this sensitive subject, together they'd only just begun to explore the joys and problems arising from having a permanent bed mate.\n\n\"I,\" whack. \"Do,\" whack. \"Not,\" whack. \"Snore!\" Annabel beat out a rhythm on his barrel chest as she pushed him back on the bed until he captured her in a hug and kissed her into submission.\n\n\"Yes, you absolutely do, babe, but it's cute as hell. It's not even loud.\"\n\n\"Hrmmph,\" was her only reply as she stilled her play-struggling.\n\n\"Don't be like that,\" Chris chuckled. \"I love it. Hey, check this out.\"\n\nChris released her and got off the bed, walked over towards the door, passing straight through the wood with little resistance.\n\nAlone for a moment, without the extra purple light he seemed to shed, Annabel was gripped with a jolt of fear until he poked his smiling face back through the door so just his head was sticking through.\n\n\"Cool, huh?\"\n\n\"Okay, that's pretty cool, goofball. Just don't leave me alone in here, it's pretty scary.\"\n\n\"Sorry. Come try it.\"\n\n\"How does it work?\" Annabel asked as he took her hand and dragged her through the door into the ghostly hallway. \"If we can do that, why don't we just fall through the floor?\"\n\n\"Both beautiful and smart,\" Chris praised her for noticing the inconsistency. \"As far as I can tell, it's all about what you intend to do. You want to walk through the door, so you do. Unconsciously, you're expecting the floor to support you, so it does. Does that make sense? I'm still trying to figure it all out.\"\n\n\"Surprisingly, yeah. Now I just have to stop myself from thinking about falling through the floor.\"\n\nChris took that moment to show off what he'd learned in the last few days during his limited explorations of the Ether.\n\nLeaping into the air, he dove headfirst into the floor, making Annabel squeal in concern as he disappeared. Half a second later, he resurfaced as if the floor was a pool of water and proceeded to swim laps around her. She couldn't help but laugh, he was obviously in his element, like a duck in water.\n\n\"That is so weird,\" Annabel mused. Her mind wandering to the almost limitless applications this ability could be put to. \"Are you sure it's safe for me to be here?\"\n\n\"The Ether has its own dangers but I think it's pretty safe, you're here with me and I can take you back whenever you want. I'm using my energy to keep you here but I think with training, you and Bartholomew could learn to enter the Ether on your own. He looks pretty happy here after all.\"\n\n\"He does, doesn't he?\" Annabel watched the tattoo dragon, now glowing bright purple, strut around her torso, spreading that tingling warmth she was only just becoming accustomed to over her skin. \"Okay, it's just, I feel uncomfortable here. Like I'm out of place and something is pushing for me to leave.\"\n\n\"I suspect that's because we're working against the natural order to bring you here. It's my aspect so I don't feel anything like that. Now, do you want to go for a walk or go straight back?\"\n\n\"I'm naked.\"\n\n\"You don't say?\" Chris teased, \"Who's going to see us? Lillian's over there in an armchair and she probably wouldn't notice if you sat on her lap.\"\n\nAnnabel balked at that image before going over to inspect the statue-like vampire. She could have been sleeping, or just sitting dead still with her eyes shut.\n\nTo Annabel, watching the voluptuous bodyguard sit unbreathing seemed like an invasion of privacy, like she was observing a personal moment of weakness. Her hair had been let down from its usual, practical pony tail or bun, falling softly around her pale face. Framing those luscious, wide lips.\n\n\"She's so beautiful,\" Annabel murmured, bending to get a closer look at Lillian's ghostly form in the strange light.\n\n\"So are you, Annabel,\" Chris whispered as he wrapped his arms around her slender form from behind. She could feel his semi-soft penis twitch against her rear, agreeing with his words. \"Now, let's go explore a little.\"\n\n\"It would feel strange walking around naked.\"\n\n\"Come on, Dee, I've been dying to get out of the apartment. Besides I'd love to watch you walk around naked.\"\n\n\"Flatterer.\"\n\nChris hugged her more firmly, nuzzling against her ear as his arms caged her waist and stroked her flanks. He practically enveloped her with his larger body.\n\n\"It's true, you're completely beautiful, I could watch you for days.\"\n\nAnnabel was touched and thrilled by the contact, the deep seductive purr and sincerity of his voice. How could she resist that?\n\n\"Mmmm that feels nice, baby. Okay, let's go take your midnight stroll, so long as you only pee against trees.\"\n\n\"Unh, fine,\" Chris grunted, \"go get my collar and leash.\"\n\n\"Now there's an interesting idea.\"\n\nThey left the apartment, passing through the door with no resistance. Chris was surprised to note several unknown arcane runes protecting their room but they didn't hinder their passage, on the way out anyway.\n\nAnnabel initially balked at walking through the lobby of the hotel naked but she held Chris's hand as they even passed right through a clerk and walked out into the night.\n\nHe couldn't help but be captivated by her beauty.\n\nSure, he'd seen her naked in their bed and knew the exquisite pleasure she allowed him as he held her and took her again and again on said bed. But there was something about seeing her stroll naked through his ethereal playground which struck the dragon as the epitome of beauty. The way her skin shown milky white in the strange light, the way her body moved and flowed as she walked at his side. He especially loved her exquisite ass and the little dimples on her back as she moved, the hints of her ribs, and the cutest tiny jiggle that ran across her small, firm breasts with each step. He was lost in her.\n\nThe Being district was a much more interesting landscape that Chris was used to. Clearly, it was a hotspot of energy transfer between the dimensions due to the concentration of magic.\n\nMagical scripts and wards littered some walls like graffiti and there were an abundance of Ether dwelling plants making a living where they could. Chris identified them to the best of his ability for Annabel but was stumped by several of the scrubby bushes, lichens, and weeds growing out of the very pavement or climbing the buildings.\n\nA couple of fist sized balls of pulsing green energy even streaked over their heads, apparently giving chase to each other. Further down the street, a large web covered the entrance to an alleyway, its sizeable, many legged occupant munching on one of the unlucky orbs.\n\nAnnabel didn't liked that one bit.\n\nIt was much more lively than he had expected, noises occasionally split the quiet; magical humming, scurrying, or the squeaks and snarls of the tiny Ether inhabitants which mostly chose to remain hidden in the presence of the dragon and his beautiful escort.\n\nThey were, however, momentarily swarmed by a cloud of tiny yellow and red flies; so small only his dragon's instinctual knowledge allowed him to identify the insets. Chris held Annabel close as the collective examined the newcomers, eventually moving off once its curiosity was satisfied and they were identified as something other than food.\n\n\"How do they all live here if we never see anything like this in the normal world?\" Annabel asked as the swarm buzzed way.\n\n\"These are purely inhabitants of the Ether, they feed off the energy we all leak through into this dimension. It's not much but it adds up.\" Chris explained to the best of his understanding as they passed a magical storefront, its shadow form practically glowing.\n\nSeveral healthy looking vines grew across the window, basking in the radiant energy whilst something resembling a small rodent was poking its snout from its burrow near the doorway.\n\n\"Do they ever cross back over into our world?\"\n\n\"I don't know. Perhaps, but I imagine that it would cost them a lot of energy and I don't know if any of them are intelligent enough or have control over magic. Everything we've seen so far has been of animal intelligence at most, I think. Susan says there are more malevolent things lurking in the Either, the husks of people who have been trapped and even things from dimensions we don't know about.\"\n\n\"How can that be right? How many other worlds are there?\"\n\nHe pulled her close against his side as they walked, trying to explain his own philosophy about these questions; questions he'd mostly tried to not let bother him as his human life played out, waiting for his awakening.\n\n\"There's no way of knowing, Annabel. I try not to think about it too hard, their inaccessibility makes them pretty much irrelevant. When Susan first told me, I couldn't wrap my head around it either but she said that incursions between worlds are pretty much legends these days. The last major event happened many thousands of years ago, a huge battle between two powerful races spilled over into our world. There was no magic back then but that changed pretty quickly as they fought each other and even converted us to fight on their behalf. The Devines won, but were horrified how much they'd changed our world, how much magic was left behind. They placed a barrier on our dimension so that hopefully we would be free to continue on without any more interference. At least that's how the story goes.\"\n\n\"So even Beings don't know for sure?\" Annabel felt a little better that she wasn't the only one but it still left her without an answer to the apparent existence of other dimensions, worlds, and sentient beings.\n\n\"No, I can't say that story is at all accurate but it's what we've got. Apparently it's passed down from the first Beings, the ones who fought in those battles.\"\n\n\"Hmm,\" Annabel thought it over as they continued walking a little way. It was certainly a long shot from the creation story she'd grown up with. They'd walked several blocks now and she felt that they had had enough adventure for one night.\n\n\"We should head back,\" she murmured.\n\n\"Yeah, Lillian will be pissed if she wakes up and we're missing.\"\n\n\"Thanks for pushing me to come, Chris. It was a bit scary but I want to be involved in what you do,\" Annabel squeezed the hand she'd captured as they started back.\n\n\"Thanks, Dee.\"\n\nThey took a different way back, completing a loop, walking mostly in silence, happy to be alone in each other's presence and soak up the other-worldly atmosphere.\n\nWith the hotel lobby in sight, a loud growl and a high pitched squeak issuing from a nearby building caused them to pause.\n\nA blue steak shot out onto the ghostly pavement and attempted to escape up the street in a flutter of tiny wings. However, a much larger creature, about the size of a large dog, merged from the shadows with lightning speed and pinned it easily.\n\nChris and Annabel looked on in shock as the larger chimera-like creature played with its prey. It was hard to describe, but it clearly had dexterous forelimbs, a long blade-tipped tail, and a maw of sharp teeth. The hapless morsel screamed piteously, sparking Annabel's reaction.\n\n\"Do something, Chris! Help it!\"\n\n\"I don't-,\" He barely started, not sure if it was right to intervene. Annabel made the decision for him however, pushing him forwards. \"Fine. Hey, Hey! Shoo! Fuck off! Grrrrrrr!\"\n\nHe advanced on the creature, hoping his flailing arms and exclamations would be enough to startle it. All it did was turn towards him with a warning snarl, its prey still helplessly trapped under claw against the concrete.\n\nIt did look quite ferocious and Chris was at a loss momentarily until his dragon provided the answer, unleashing a bellowing roar from his mouth directly towards the predator.\n\nIt didn't even look back, streaking off through the shadows with a hiss, yielding its morsel to the mightier Ether beast. Annabel shot forwards past Chris, kneeling quickly to rescue the blue streak.\n\n\"Oh my God, Chris, it's a tiny person!\" She cried over her shoulder.\n\n\"Wait, what?\" he asked, coming to look.\n\n\"A tiny blue person, with wings.\"\n\nAnnabel was indeed correct, the tiny blue woman, barely more than a foot from head to toe looked up at them in shock. She was completely anatomically correct, having the slim, tall build of an elf with proportional bat-like wings and conspicuously long pointy ears. Her rich, slightly wavy hair hung bedraggled around her body to her waist, concealing her in a blue so deep it was almost black.\n\n\"She's hurt Chris, look at her broken wing and the cuts across her thighs. Can't you help her?\" Annabel pleaded, scooping the miniature woman up in her hands.\n\n\"Annabel, I think that's a sprite. I don't know how to help her and they're not always trustworthy or even good natured at all. They're intelligent and mischievous. She can understand us and is probably perfectly capable of helping herself.\"\n\nSusan had mentioned sprites as one of the more problematic denizens of the Ether or whichever realm they chose to frequent.\n\n\"Please, Chris, can't you just use your saliva on her wounds? She's bleeding.\"\n\nHe sighed, knowing it was useless to protest. Besides, if the sprite was actually bleeding he could at least seal the wounds.\n\n\"Okay, pass her to me, gently.\"\n\nThe handoff went smoothly, only a few high pitched whimpers escaping the sprite. Soon she was sitting on his palm, bedraggled but with an air of maintained composure belying her drooping, broken wing. Chris brought her close to his face so they were eye to eye, helplessly noticing her perfectly proportional assets and even a tiny triangle of blue hair at her crotch. She was indeed a miniature beauty.\n\n\"I'm going to try to heal you now, okay? But I want your word that you won't try to cause trouble first.\"\n\nHe thought he saw a weak smile play across her face before she gave a nod.\n\nAnnabel watched on in awe as Chris closed the gap, lapping out across the sprite's thighs, across her navel, and up her chest, clearing the abrasions and deep cuts left by her encounter with the beast.\n\nThe wounds were tiny, but on someone her size, Chris could only assume that they were actually quite serious and certainly very painful. Her taste was pure sweetness, combined with an almost almond-like creaminess. Even her drying blood tasted delicious. He looked up when he was done with her front to see a surprised look on her elegant face, almost like she had rather expected him to eat her whole instead.\n\nTurning her onto her belly with a finger, he licked as gently as possible across the broken forewing emerging from her shoulder, the leathery membrane quivering as she cried out in pain despite his care. She lay still for a moment, whimpering as the bone seemed to remesh in the correct position, a dragon's saliva proving to be highly potent on such a small patient. She appeared to have passed out from pain.\n\nHe tried to remember what Susan had told him about sprites but couldn't come up with much other than that they were very rare in modern times, that and they were always hungry. His dragon agreed, suggesting he feed her some energy. Sprites have such fast metabolisms that they were always at the brink of starvation.\n\n\"What are you doing now?\" Annabel asked as Chris took on a very serious look, concentrating on the opposite hand to the one the sprite lay on. A spark slowly grew between his thumb and forefinger.\n\n\"Making it some food,\" he answered, pulling energy from himself and the Ether surrounding them into a perfect, purple cube about the size of a medium dice.\n\n\"She eats that? What is it?\"\n\n\"It's raw magical energy. A tiny amount for me, what's actually difficult is putting it in a form which is stable and solid like this. This cube would probably be considered a high explosive. It's quite inefficient to make but my dragon is helping me.\"\n\nHe took the cube and ran it under the sprite's minute nose almost teasingly. The reaction was nigh instantaneous, her eyes fluttered for a second before her hands, suddenly tipped with nasty, retractable little talons, shot out and ripped the cube from his loose grip.\n\nHer extended fangs glistened as she sunk her teeth deep and let out a moan, proceeding to devour the cube with disregard for her surroundings. It was as if the only thing in the world that mattered was stuffing her little face. It took her about a minute and by the end, her belly was swollen as if she was at half term.\n\nLooking up at him with an appraising head cock, the sprite finally spoke.\n\n\"Thank you, dragon, I accept. I must rest now.\"\n\nWithout further discussion, she turned over to drape herself across his palm and wrist in a foetal position.\n\nNo amount of gentle prodding would rouse her. What did she mean by accepting?\n\n\"She's so cute!\" Annabel excited.\n\nChris wasn't so optimistic. Sure, the sprite was cute, but he couldn't help but feel it probably wasn't the best of ideas to feed the wild animals.\n\nUnwilling to just leave her in the open, Annabel insisted that they take her back to their apartment, at least until she recovered.\n\n\"She's not just a bird with a broken wing, Annabel. Sprites aren't really considered full Beings but she's a person, not a pet.\"",
        "\"I can see that, Chris. Don't you think, though, that leaving her on the street would be dangerous with that thing lurking around? Besides, she'll be grateful for our help and maybe you'll have a friend to talk to when you come to the Ether at night.\"\n\n\"I hadn't thought about that last bit,\" Chris considered. It was true though, the sprite could probably teach him a lot, if she was so inclined.\n\n\"It's settled then,\" Annabel said with an air of finality.\n\nThey carried the tiny creature back to the apartment uneventfully, tucking the comatose sprite into some of Annabel's clothes in the wardrobe of their bedroom. Chris kept his reservations to himself for the moment, he would ask Lillian what to do about it in the fast approaching morning.\n\nThe couple ended up cuddling on the bed as Chris merged them back into the Norm. Annabel felt textures return to normal as regular colours bloomed back into existence across her vision.\n\nDespite her initial reluctance, she was invigorated by their jaunt into the night. She was learning so much about this new world and even better, she was by his side as he learned. It only reaffirmed her desire to embrace everything she was confronted with and support him, rather than hold him back.\n\n\"Petra Godran called last night. She and Claire, her daughter, are driving up from California tomorrow to meet me,\" Chris admitted as he thought back to his conversation with the dragoness the evening before.\n\n\"So soon?\" Annabel hugged him tightly, a frown concealed against his shoulder as she took a deep breath of the scent she'd become so used to calling her own.\n\n\"I know, I was surprised too... Annabel, if Claire and I do mate, we'll form a very strong bond. That can't be avoided, especially if we're as compatible as Elizabeth seems to think. I just... I love you and I always will, you are my First and I promise to never forget that or neglect you. If you have a problem, please talk to me.\"\n\n\"I know that, silly. It's just all happening so fast. I see the way women look at you and I know firsthand how easy you are to fall in love with. You told me from the start there would be other women in your life and that you'd be mating with other dragons. That's fine, nothing's changed for me so long as I'm still your girlfriend, someday your wife, and hopefully your favourite. I love you so much, Chris.\"\n\n\"Yes. Yes to everything. I'll never understand how lucky I was to find you, Dee,\" he whispered into her hair as they began to gradually relax, eventually getting a few more hours of delicious sleep in each other's arms before Chris's early morning start.\n\n***\n\n\"I'm driving back to Laramie tomorrow afternoon. Petra called last night and arranged for us to meet tomorrow, I thought it might be better to do that at home,\" Chris announced at breakfast, they were sitting around the kitchen's central island again.\n\nAnnabel already knew but Susan's head shot up in surprise and Michelle gave him a questioning look as she finished her mouthful of cereal.\n\nIf Lillian had a reaction at all, it was invisible, as she was in the living room.\n\n\"Who's that?\" Michelle asked.\n\n\"They're two female dragons, mother and daughter, who have been assigned to watch over him, seeing how young he is, and mate with him if they're compatible,\" Susan explained once she recovered.\n\n\"So what? It's like an arranged marriage?\" Michelle clarified.\n\n\"Sort of, except that the only pressure to go through with it is saving our species,\" replied Chris. \"Nothing will happen unless sparks fly though.\"\n\n\"So who's coming with us back to Laramie, we'll need to leave around two in the afternoon tomorrow?\" Annabel asked, beginning to clear some dishes into the sink.\n\n\"You're going along?\" Michelle was incredulous yet again at the young woman's elasticity when it came to the sexual exploits of her boyfriend. Annabel nodded. \"Well I can't, I've got to stay and help out here with the Synod. Am I allowed to be alone?\"\n\n\"Yes Michelle, but I'll get Tim to have someone assigned to look after you while we're gone,\" said Lillian from her favourite armchair.\n\n\"Rowan will be fine without me for a day or two, besides I do need to check on my plants back at home. Jethry has his heart in the right place but he's no green-thumb,\" Susan reasoned. Really, she wouldn't let another set of women move in on her son without making sure they were suitable.\n\n\"Okay, now that that's out of the way... Last night, Annabel and I rescued a sprite in the Ether. She's in our room, still asleep at last check.\"\n\n\"What?! Chris, I warned you about this kind of thing. Sprites are notoriously fickle and can be very dangerous when they set their mind to it.\" Susan scolded her son, although she knew it was his nature to protect things where he could. Given recent events, she hoped he wouldn't take any unnecessary risks.\n\n\"Where did you find her?\" Lillian asked nonchalantly, stalking from the next room, towards the dragon.\n\n\"Out on the other side of the block,\" he admitted, flinching as he felt the invisible vampire approaching him from behind. He jumped when her hands ghosted up his arms and settled on his shoulders with undead strength.\n\n\"Disobey me again, little dragon, I dare you,\" whispered Lillian directly in his ear.\n\nChris shivered, she'd meant to scare him but anything Lillian whispered in his ear could only be exciting.\n\n\"What's a sprite?\" asked Michelle, unintentionally easing the tension.\n\n\"You would probably know of them as pixies or fairies. They're definitely not all rainbows and granted wishes though. They have retreated from our dimension over the last three millennia after losing their war and as humans grew more prevalent. They're very rare these days and quite powerful if they can focus their minds to magic for more than five seconds. I'm ashamed to say that there have been sales of captured sprites in the past to be used as ingredients in powerful spells.\"\n\nSusan gave the textbook explanation to the ex NSA agent, who was actually learning to take knowledge bombs like this in stride.\n\n\"She's okay though, the sprite?\" Susan looked towards her son. \"I can't recall hearing about any sprite females recently.\"\n\n\"We think so,\" Annabel answered for him. \"She passed out after Chris healed her and we didn't want to leave her in the open with that thing that was chasing her around. It almost killed her.\"\n\n\"What thing?\" Lillian's fingers twitched in annoyance against his t-shirt before she stood back and released him.\n\nAnnabel proceeded to describe the entire event in detail, painting Chris the initially reluctant but ultimately valiant hero who rescued the small damsel from the jaws of an inter-dimensional, flesh hungry predator.... \"then he fed her a magic sugar cube and she pigged out and went to sleep.\"\n\n\"Sounds like a young wraith,\" Lillian mused, thinking about the predator. They were mostly harmless when they were that small, the older ones were problematic for Ether mages though.\n\n\"Did you have to go and feed her, Chris? She's going to stick around now that she knows you can give her magic-rich sustenance,\" Susan wasn't sold on the idea of a sprite in the house.\n\n\"She could help Chris learn about the Ether though,\" Annabel pointed out yet again as she picked out a banana for herself now that the dishes were mostly cleared away. \"She'd at least be someone for him to talk to when he's in there alone at night.\"\n\n\"It's a risk, Annabel, and you might not be so friendly if she decides she likes him and sets her sights on Chris,\" Susan countered.\n\nAnnabel's eyebrows rose in shock quickly and a blush just barely started showing itself before she recovered.\n\n\"That's impossible. She's so tiny.\"\n\n\"None of that matters right now,\" Chris didn't want the conversation travelling any further down that avenue. \"We should at least wait until she wakes up before passing judgement. She'll probably just go on her way. Besides, I've got to keep an eye on all of you without a sprite to worry about. Speaking of which, or should I say witch, what are you ladies doing today?\"\n\n\"Ug, you're the worst,\" Michelle groaned. \"I'm in a conference with a few of the Synod and some legislation experts in DC.\"\n\n\"I'll be at the apothecary, Rowan is showing me his potion recipe for light numbing and anaesthesia. Apparently it's been passed down since the seventeen hundreds,\" Susan was obviously enthusiastic about her new job under the aging magician.\n\n\"I'm going to scope out the school and ask some of the staff if there are any good restaurants to apply to for part time work at while I'm here,\" Annabel answered.\n\n\"And what are we doing, Lillian?\" Chris asked.\n\n\"Training, then we'll go see Reyla when she's ready,\" replied Lillian coolly, still a bit miffed that he'd flouted her order to stay in the apartment during his jaunts into the Ether.\n\n\"What does she want?\" asked Chris.\n\n\"Your tutor arrived last night.\"\n\n***\n\nChris had been expecting an elf, Reyla said that he was her cousin, although she seemed to attach quite a lot of distain to admitting that. What he hadn't expected was a brown elf.\n\nSo when he hobbled his way into Reyla's darkened study, still sore from his recent punishment at the hands of the beautiful vampire; he was surprised to see a slender, long eared fellow with a quick smile and smooth, chocolaty skin. He didn't have much to compare to but it seemed strange to see an elf in jeans, a t-shirt, and even a pair of worn sneakers.\n\n\"Christopher, this is my cousin, Arvil, who I have attained at no small expense to teach you the ways of the Ether and instruct you in magic more generally.\"\n\nReyla introduced the two from her position in the largest, most comfortable chair in her dim study. She watched the dragon as he started forward, offering his hand. He seemed to be becoming more confident and purposeful each time she saw him. Oh how he'd put the Synod in their place, bunch of self-righteous fools that they were most of the time. She would remember the dragon's little outburst fondly for years to come, so would the Synod, though not with the same humorous outlook.\n\n\"Hello, Arvil, it's nice to meet you, and just Chris is fine.\"\n\n\"Well met, Chris. And may I say that it is an honour to be entrusted with your education,\" Arvil replied in his smooth, deep voice, accepting the firm handshake and examining the man before him with both physical and magical senses. \"I didn't believe Reyla when she contacted me but it's really true; you are a dragon and the Ether is woven intricately into your being. A singularity. Astounding.\"\n\n\"I can't say I've ever heard of a brown elf myself so perhaps we have something in common?\" replied Chris.\n\nArvil burst into laughter.\n\nChris looked around, noticing that Reyla looked even haughtier and more cross than usual.\n\n\"I don't get it.\"\n\n\"My boy, I have a feeling we will get along swimmingly.\"\n\nAnyone who brazenly raised the subject of his heritage in front of another elf was a good sort in Arvil's books. He even took pleasure from watching other elves discomfort with his skin colour.\n\n\"He is the bastard progeny of forbidden love between Drow and High Elf,\" Reyla said with disgust dripping from her lips as she lent forwards. \"A reminder to both that we are not the distinct species we would like believe we are. Because of that, he's hated and shunned by all. Although, I admit, he has his uses.\"\n\n\"That's terrible,\" Chris murmured, looking back to Lillian to confirm that it was actually true. The vampire gave him a nod.\n\n\"I accepted my lot a long ago, Chris,\" said Arvil. \"Now tell me about yourself. My cousin says you have quite the tale and have been even busier since she met you.\"\n\nChris quickly recapped his story since his awakening, mostly leaving out his life in hiding with Susan.\n\n\"And there weren't any hints as to your powers before you awoke?\"\n\n\"Well, I could always hear and smell better than normal. There was the thing with the gold, too, but I didn't know about that. That's all to do with my dragon though. As far as the Ether, I used to dream about it or in it, I'm not entirely sure. I guess that was a pretty big hint but neither Susan nor I realised what it meant.\"\n\n\"Excellent!\" Arvil exclaimed suddenly, as if startling himself from deep thought. Chris got the impression from his mannerisms that Arvil was either a little peculiar or he hadn't had much contact with humans in the past hundred or so years. \"You can already phase and manipulate Ether energy, that shows you have raw talent, your dragon's instincts are guiding you well. I would like to see you in action as soon as possible. Perhaps tomorrow afternoon, once I get my affairs in order?\"\n\n\"I ah... Tomorrow afternoon wouldn't be the best, I'm meeting some other dragons,\" Chris glanced sidelong at Reyla, wondering if she would be upset in any way.\n\n\"You needn't try to hide it from me, Christopher,\" Reyla smiled with false sweetness. \"Petra Godran called me this morning to arrange travel permits and accommodation for her stay. I know all about your plan for a country tryst.\"\n\nChris couldn't help but blush.\n\nof my beloved cousin here,\" Arvil spoke with an elaborate twirl of his hand towards Reyla. Lillian couldn't help but snigger, earning her a warning glare from the Drow.\n\n\"How about this evening then, Chris? I'd like to assess your ability and knowledge as soon as possible in order to come up with a teaching strategy. We could even just take a stroll through the Ether so that I can see you in your element, so to speak.\"\n\n\"He's already been quite exploratory,\" Lillian added, taking the chance to remind Chris of his recent transgression. \"Last night he and his familiar waltzed around our district's streets, out and about on their own and even rescued a sprite girl form a young wraith. They ended up bringing the poor thing home with them like it's a pet.\"\n\nChris shot daggers at Lillian, one for ratting him out to Reyla; and two for painting the incident in completely the wrong light. He didn't get a chance to defend himself, though, because both elves were staring at him and Reyla had shot out of her seat.\n\n\"A sprite? Small, with bat-like wings and elven features? A woman?!\" Reyla asked disbelievingly, cursing herself for not monitoring her surveillance equipment more closely.\n\nIt shocked her because although it wasn't common knowledge, what few sprite females there were left alive and \"free\" were kept and guarded in their last remaining stronghold; a mystical city in the branches and heart a giant oak somewhere deep in Europe. Only none knew exactly where it was, because the tree uprooted itself every night and walked to a new location.\n\n\"She let you touch her?\" Arvil asked.\n\n\"Well, she was injured with a broken wing, I only used my saliva to heal her,\" Chris countered, not knowing why everyone was apparently upset with him.\n\n\"It must have been drawn to his presence,\" mused Arvil with a thoughtful scratch of his head.\n\n\"I must talk to her, where is she now?\" Reyla continued, her hackles raised at the thought of another potentially very manipulative force setting its sights on her pet project.\n\nChris gave Lillian a questioning look but it was only bounced back at him, with added confusion.\n\n\"She passed out after I healed her and gave her some food, we took her back...\" Chris tried to reply levelly.\n\n\"You fed her?!\"\n\n\"What?\" Chris asked, \"Yeah, I guess. Who cares?! Why is this a big deal all of a sudden?\"\n\n\"Incorrigible, even for a male dragon,\" Reyla murmured, ignoring him completely. \"There's something about him cousin, just you wait and see.\"\n\n\"Only one way to find out if she did or not,\" replied Arvil as if they were completing each other's thoughts.\n\n\"Yes,\" Reyla said, finally looking Chris in the eye. \"Picture the sprite woman with your mind's eye. Gather a little energy, not too much mind, and say, 'come to me.' Can you do that, dragon?\"\n\n\"What the fuck is going on?\" Chris was about to lose his cool if someone didn't answer soon.\n\n\"Just do it. It will answer your question,\" Reyla snapped.\n\nChris exhaled loudly, taking another calming breath before relenting. He hated when people wouldn't just take a few moments to explain things. His eyes closed, he thought of the tiny woman. Her blue skin, her cute little ears, her small wings, her perfectly proportioned miniature body, her surprised, thankful eyes.\n\n\"Come to me.\"\n\nA tiny pop echoed in the silence of collective anticipation. He felt the release of energy, followed by a quiet whirr, perhaps of tiny wings. Chris didn't dare open his eyes for a few seconds, but eventually he cracked one eyelid cautiously to find his fears realized.\n\n\"Hello, Master,\" squeaked the beautiful sprite, hovering a few feet in front of him at eye level. She looked at him curiously before stretching and yawning. \"I'm still tired, may I land on you?\"\n\nChris automatically extended his hand toward the sprite, palm up. She alighted gracefully, sitting naked with her legs dangling over the edge of his hand as her wings daintily folded shut.\n\n\"Master?\" he asked.\n\n\"Yes. You fed me from your hand and I accept, you will be my Master for one hundred years.\"\n\n\"As I suspected,\" Reyla hissed. \"You sought him out you little trollop, tricked him into offering you food. I would have warded him a thousand times had I known you were skulking in my territory.\"\n\n\"I did no such thing,\" the sprite replied with a lot of backbone for someone so small. \"I just about died, if he wasn't there I would have been eaten by a wraith. He offered it to me freely, even if he didn't know what he was doing. It's your own fault besides, had your race helped us ages ago, we would still be considered true Beings and I would have had to announce my presence to you.\"\n\nThe others looked on, following the conversation but having nothing to add or in the case of Chris, being too caught up in his internal argument.\n\nYou knew, you knew this would happen? he accused.\n\nIt was a possibility, replied the dragon calmly.\n\nWhy?\n\nShe could be a useful ally, she is fun, and she is very lonely.\n\nI give up.\n\nReyla's eyes flashed as she cocked her elegant neck and examined the latest pain in her ass. Something seemed familiar about this little elfkin but it was so long since she'd visited their court, ancient history before their species was all but destroyed by that fateful war. It mattered not as her legendary temper began to bubble.\n\n\"I should put you in a glass jar and feed you to a spider. How dare you enter my territory and bind yourself to him!\" She spat, her dark rage definitely getting the better of her. She was sick of others putting their marks on him when she could do nothing of her own.\n\n\"You hold no claim on him Dark One! And if you did that, he would see you for the sour, mean, old bat that you truly are!\" snarled the sprite in return, hitting the mark. She knew enough about Reyla Narlakis to strike true.\n\nThat did it.\n\nReyla had had a stressful week, getting sassed by a sprite was the final straw in her murky mind. Before thinking about it, a bolt of shade-frost shot from her finger, streaking towards the pest in a gaudy display of blues and unnaturally cast darkness, like the contact of an arc-welder.\n\nThe dragon's reaction, for Chris wasn't really involved, was instantaneous, spinning so his back intercepted the spell, sending him flying across the room to topple into a low bookshelf with the sprite held against his chest.\n\nHe slumped for a moment before his body began the rapid transformation to his half form, his wings exploding out of his t-shirt as a bestial snarl left his throat.\n\nReyla looked at her hand in shock, a grey, ghostly afterimage of her spell still dissipating from her outstretched finger. She never considering that the dragon would risk his life to protect the little sprite.",
        "The sprite could probably have flicked aside the spell, having innate resistance to most magics. She didn't get a chance, though, as the dragon crushed her to his chest. She smiled happily, swooning, melting, she knew she'd made the right choice with the dragon.\n\nChris couldn't believe it, once he'd gained his breath back, he rose quickly and strode forwards.\n\nLillian, so used to protecting the elf, stepped into his way. He stopped close, their bodies almost touching, and stared deeply into her eyes for a moment as if their souls were talking.\n\nTo even her own surprise, she stepped aside after mere seconds of his baleful gaze, unconsciously admitting her submission to the dragon. Her whole body buzzed with a potent cocktail of excitement, fear, and lust as he brushed past her, that damnable scent clouding her mind.\n\nChris stopped a few feet from the elf, his entire body felt shivery and weak, frost burn radiating across his skin.\n\nReyla didn't acknowledge him or the tiny woman he clutched protectively. Her head was lowered, watching the floor, considering her rash action.\n\nPride and shame held her tongue, giving him a moment to compose his thoughts.\n\nHe took a deep breath, surprisingly calm given the amount of adrenaline and pain that was flooding his system. He was pretty sure his back had a chunk missing from it. By rights, he had the justification to end her, or at least try. There was no desire to do that though.\n\n\"I forgive you, Reyla. But I fear for us all if Beings as powerful as you are so arrogant they would take a life over a few words. Are you that hateful? That petty? How are we going to live with humans if we can't even control ourselves?\"\n\nTurning to Arvil, who was still gawking at dragon's half form and seemed rather nonchalant about all the growling and spell-slinging, the dragon managed a pained grimace.\n\n\"Maybe it's best if we wait a few days until things quieten down.\"\n\n\"Yes, of course,\" the elf grinned.\n\nWith that Chris turned and walked out, exposing the open burn on his back with blackened, vine-like tendrils snaking across his purple skin where it was visible through the tatters of his shirt.\n\nHe walked silently, straight back to the hotel through the underground passageways, holding the nervous yet jubilant sprite while the vampire followed along behind. People stared at his half form openly, gasping and pointing if they got a peak at his gruesome wound.\n\nHe didn't care at that point.\n\n\"I'm sorry,\" whispered Reyla, long after he'd gone.\n\n\"Oh hush, cousin. You haven't insulted him beyond repair else he would have tried to kill you,\" Arvil consoled. \"You have bigger concerns perhaps, your vampire is no longer the loyal lapdog you once bragged to me about.\"\n\nReyla hardly registered that someone was speaking, aching inside as much as the dragon probably ached without. His words, so insignificant but without any shield or counter spell to stop them, had hit home. She felt small, wretched; a little girl again being scolded for maiming one of her playmates. Worst of all, she'd exposed her true, darker nature to him. She hated that nature, her darkness, her inner rage. Over the centuries, she'd grown to accept it as part of herself. It drove her to greatness but left something missing inside her. Perhaps she was broken.\n\nThose thoughts made her feel anger in turn, for was she not a powerful sorceress, thousands of years old? What should she care of this new-born dragon whelp?\n\nShe sighed with a heavy breath. He was right, of course. Curse his good-smelling innocence. It was his damn fault she had trouble controlling herself around him, not her own.\n\n***\n\n\"Oohhff.\"\n\nChris slumped onto the bed, dumping the sprite on the pillow next to his head so he could see her. He managed to pull the comforter partly over his shivering bulk as she righted herself, kneeling with her legs tucked underneath her tiny but perfectly sculpted butt.\n\n\"What is your name, little one?\" the dragon asked.\n\n\"Immianthe. I'm sorry, Master, I shouldn't have provoked her like that but we have history,\" apologised the sprite.\n\n\"Perhaps not. My name is Chris by the way, none of this master business. Now, would you mind explaining what exactly you're playing at?\"\n\n\"Chris,\" she rolled his name on her tongue. It seemed somehow inappropriate to use his name but it was an intimate gesture to allow her the privilege. \"Fine, then you may call me Immi. You saved me from the wraith and healed me, showing far more kindness than I have grown to expect from Beings. When you fed me, I took the opportunity to bind myself. I am not playing at anything.\"\n\n\"Why though?\" Chris asked. \"Why be bound to anyone at all?\"\n\n\"I have had a difficult life away from my people, Chris. I'm a runaway from a poor match selected by my father to further his relationship with the high elves. He was desperate to insure an alliance for the survivors of our race and was ready to sacrifice me as the price. I know it's usually the duty of a princess to serve for the good of her people but I just couldn't do it. I never would have survived my husband, he was well known to be cruel and manipulative, so I fled. I think it was the best course of action, for had I gone through with it, he would have used my continued wellbeing against my father. I've been scavenging to survive for the last twenty years, hiding in the Ether. When you and your mate healed and fed me, I knew it was time to come in from the cold, I'd found someone to live with who would be kind and gentle. Who'd respect me as a living Being rather than an object or trinket. I have felt a pull to come here over the past days despite the dangers of more populated areas, now I think I was drawn to you, Chris.\"\n\n\"I don't know what to say,\" Chris was tormented by her story, never imagining the complexities this new world contained compared to his previously simplistic life. To trade a daughter against her will like some sort of livestock, incomprehensible.\n\n\"It is the past, say nothing,\" She spoke softly.\n\nThat only worked for a moment as he watched her.\n\n\"So, you're a princess?\" He asked with a sly smile.\n\nThe sprite nodded.\n\n\"I used to be at least. I suspect father exiled or stripped me of my title when I escaped though.\"\n\n\"It was the food that sealed the deal though, wasn't it? I've heard about sprites.\" Chris managed with a weak chuckle.\n\n\"Yes, the food may have played a part,\" Immi smiled back with a tiny wink, moving to lie on her tummy as she stared up at the half of his face not pressed into the bedding. \"We sprites only have a reputation for being so voracious because we hale from a time long ago when magic was so plentiful since then and now we are considered not much more than greedy pests, a plague if our numbers ever grew to what they used to be before the war. This world's magic is so weakened, dragon. You are too young to see it but if you live a thousand years, you will begin to feel it in your bones, as we sprites do.\"\n\n\"A war? That's the second time you've mentioned it.\"\n\n\"It's ancient history, do not trouble yourself, Chris,\" She clearly didn't want to discuss it further.\n\n\"Hmm, I would be interested in you telling me one day. In the meantime, would you like some more, Immi?\" Chris asked, it seemed wrong that this beautiful, playful little Being possessed knowledge so profound and ancient. Both he and his dragon were interested in learning more from her.\n\n\"Of course, Master!\" the sprite chirped merrily. \"Always.\"\n\nChris brought his hand up and began forming a little spark. It was easier this time, in his half form, but he didn't have the Ether's energy to draw from directly, plus he was wounded. The result was a slightly smaller cube of stable, purple-grey energy.\n\nShe didn't snatch or scrabble at it this time, rather moving to lay across his hand and nibble as they continued talking. She broke little chunks from the corners and brought them to her lips like freshly baked bread.\n\n\"This is the best I've ever tasted. You'll never understand how much this means to a sprite, hunger is always building inside us in these times of famine; to the point where we would eat nasty, disgusting things quite happily. It doesn't take too much energy from you, does it? How badly are you hurt?\"\n\n\"No, it's fine and I will be too, I think. I'm really cold and sore is all.\"\n\nHe watched her eat daintily before her nudity became too much to go unchecked.\n\n\"Immi, don't you have any clothes, I mean, are you always naked?\" he asked, feeling her breasts being pushed into his fingers where she lay.\n\n\"Of course,\" she giggled, tearing off another little chunk of magic and popping it into her mouth with obvious relish. It tasted like the spiced, creamy candy she'd loved when she was much, much younger.\n\n\"It's a little distracting.\"\n\n\"You'll get used to it, you can touch if you want. You are my Master after all.\"\n\nIt was practically a purr from her tiny mouth but he ignored her seductive tones.\n\n\"What do you want, Immi? What do I do with you? I've got a lot going on in my life right now and it wasn't cool to just bind yourself to me. Isn't there a way to undo it?\"\n\n\"You don't want me,\" she murmured, turning her body away from his view. Her wings and shoulders began to tremble.\n\n\"Jesus,\" Chris muttered, there had to be some serous bad Karma for making a sprite princess cry. \"I didn't mean it like that, Immi, I just don't know what I'm doing. I've barely been awakened for two weeks and I know almost nothing about sprites, magic, or anything else in this screwed-up world. Okay? I'm sorry for being untactful but... ah fuck it all...\"\n\n\"I could teach you,\" she spoke softly over her shoulder. \"Most Beings would be honoured to have a sprite princess bind themselves to them, even if I am only seventh in line. Females are very uncommon after the war, let alone royal females.\"\n\n\"It's not like that, Immi, I just don't know you. You don't even know me.\"\n\n\"I know enough to know that I'll be happy with you. And I know I can make you happy in return, if you let me.\"\n\nShe turned back to him now, entreating him, exposing her blue bosom with her darker hair flowing down across her perfect curves.\n\n\"Please, all I want is your kindness, your touch, and friendship, perhaps your love, in time.\" Her heartfelt plea tugged at his heartstrings.\n\nChris sighed, she looked so hopeful. How could he say no to that? His dragon certainly couldn't.\n\n\"Okay Immi, you can stick around.\"\n\n\"Good!\" she laughed, crocodile tears quickly forgotten. \"Because I wouldn't have taken no for an answer.\"\n\nWith that, she fluttered into the air, still clutching the last of her food, and landed in his purple hair. She tumbled around happily for a few moments before sitting up.\n\n\"You've made me very happy already, dragon.\"\n\n\"Great, another beautiful woman to satisfy,\" Chris groaned.\n\n\"Ohh, I'll get to watch you rut with them all. How exciting! Look at the size of you though, I wish you were smaller,\" she teased, pulling playfully at tufts of his hair.\n\nThe dragon's throat rumbled grumpily.\n\n\"Cheer up, I'm easy to please.\"\n\n\"You're going to be trouble, aren't you?\"\n\n\"Of course, Chris. I'm a sprite after all.\" She leaned down and whispered right into his ear, \"You can always punish me if I go too far... Master.\"\n\nA shiver which had nothing to do with his recent encounter with frost magic spiralled down Chris's spine all the way to his toes.\n\nLillian interrupted them then, clearing her throat from the doorway.\n\n\"Reyla just sent this salve over, it's supposed to help counteract the burn.\"\n\nThe vampire didn't think much of the sprite flouncing around in her dragon's hair, lounging on the back of his neck. Honestly, she was still shaken by her encounter with him. One soulful look, his warmth so close, his breath arose her lips; she'd rolled over in submission under mere seconds of his commanding gaze.\n\nHer treacherous body still shook with tremors of arousal while her vampire keened to run to him and gorge herself. Meanwhile, her human mind cursed herself for behaving like a hopeful little bitch around the dragon. Completely unprofessional. She expected to receive an angry summons from Reyla at any moment. It was certainly a good thing the Drow was too caught up in her own encounter with the dragon to be directly angry with her.\n\nChris groaned as he rolled over to accept the small glass jar of ointment.\n\nIt smelled inoffensive enough, and looked like it was based of some sort of tallow, dyed green perhaps by its active ingredients. He scooped a little onto his finger but soon found, with a pained intake of breath, that he couldn't tend to the wound just below his wing attachment himself.\n\n\"Help him, pointy-mouth,\" Immianthe demanded, walking down across his ridge of larger spine-scales to inspect her Master's wound; sustained so bravely in her defence.\n\n\"Could you? Please, Lillian?\" Chris asked hopefully.\n\n\"Oh, okay,\" Lillian started herself from reflection. She wasn't sure it was such a good idea to be touching him at all but she went about quickly scoping a glob onto her fingers and rubbing it mechanically over the blackened gash below his forewing. She herself had been hit with shade-frost once, the boy was being very stoic.\n\n\"Not so hard vampire, it's a wound, not a piece of steak to tenderise,\" the sprite scolded from the side-lines.\n\n\"Sorry,\" Lillian murmured, it'd been quite a while since she'd done anything like this, it didn't come naturally.\n\n\"It's fine. I think I can feel it working already, thanks, Lillian.\"\n\n\"More over here,\" Immi called.\n\n\"Shut up, or do it yourself, seeing as you're so attached to him,\" Lillian snapped back, more like her usual self. None the less, she gently rubbed some where the sprite had indicated. \"I think I'm done now anyway. Annabel can do it again later but you won't take too long to heal.\"\n\n\"Thank you, Lillian,\" Chris sighed in relief as she retreated out the door and down the hall to her own room. \"Are you always so confrontational, Immi?\"\n\n\"I'm nice,\" protested the blue little beauty. \"I'm just testing her.\"\n\n\"Well, would you stop, please? You're going to get me in even more trouble. Besides, Lillian isn't someone you want to be on the bad side of, she's been through a bit recently.\"\n\n\"She doesn't scare me.\"\n\nChris had to chuckle gently at that.\n\n\"No, Immi, I can tell not much scares you.\"\n\n***\n\nChris took the rest of the afternoon to rest and heal; eventually moving out to the lounge couch and lying face down. He passed the time surfing Maginet and filling Immianthe in on human technology and the advances of the last several decades.\n\nBeing a step removed from Beings in that they generally didn't try to blend into the human community, the sprite had much to learn but was catching on quickly.\n\nChris was already beginning to feel his heart soften towards her, his dragon had been right, she was fun.\n\nShe was also very tactile, simply lying on him like a piece of furniture and flaunting her nakedness openly. Later in the afternoon she seemed to become even more touchy, sitting astride his wrist as he showed her how to use his tablet. Her almond scent was strong in the air and Chris could swear he felt her squishing her hot little sex into his skin.\n\nFinally, she leaned right over his tablet to see the image on the huge screen, exposing her heart shaped ass with her tiny vagina peeking between her thighs, glistening wetly. She had indeed left a wet spot.\n\nIt was right in front of his face and before he knew it, the dragon had the slits of his flattened snout mere millimetres from her sex.\n\nFeeling the hot breath of the beast on her little treasure, she looked back over her shoulder and giggled mischievously at him, seeing the fight going on inside his eyes.\n\nChris had to deploy all of his resolve not to brush across her perfect, pouting labia with his forked tongue.\n\n\"Go ahead, I'd love you to,\" Immi crooned, wiggling her tiny buttocks back and forth teasingly.\n\n\"Stop Immi, it's hard enough with you crawling all over me naked. Don't tease me. It's not practical whatsoever.\"\n\n\"Silly dragon. Yes, your manhood probably weighs more than I do but there are other ways we could please each other. If you get too wound up, you can always take it out on your other broodmates.\"\n\n\"So you want to be part of my brood as well?\" growled the dragon.\n\n\"I ... Yes,\" the sprite said firmly. \"Please Master, lick me. I'll go crazy if you don't, your damn scent is too hard to resist.\"\n\nThe dragon breathed hot across her nethers and finally she felt the tip of his forked tongue contact her. Immi let out a pleasured, high pitch squeak at the feel of his hot, soft tongue on her pussy. It had been so long.\n\nShe shoved back hard on all fours, pushing back until her blue ass slammed into his purple lips. His tongue snaked out, lapping all around and over her fevered labia, her thighs, and even her tiny puckered anus. His dexterous muscle was so big and provided so much stimulation she couldn't help but moan and grind herself into him as a fire built low in her belly and she flooded his probing tongue with her liquid joy.\n\nThe dragon couldn't get enough. Her tasty little cavern was exuding copious amounts of her creamy, sweet essence in tiny squirts matching the rhythmic contraction of her insides. The delicious flavour reminded Chris of the taste of almond nougat at Christmas. Her bouquet had some richer, salty, creamy undertones which he relished too and it seemed that as he truly set to the task of pleasuring his miniature concubine, his whole body began to feel strangely light and a sense of almost euphoric wellbeing settled in his mind.\n\nHer moans indicated she was clearly loving his attention, making him smile, he enveloped half of her ass between his lips and sucked greedily as he sought her tiny blue clit indirectly with his tongue.\n\nThe reaction was instantaneous, she exploded violently in his mouth, screaming at the top of her tiny lungs.\n\n\"0oohhh! Fuck! Don't stop, Master, its good!\"\n\nShe didn't stop either, continuing to caterwaul her happiness for half a minute as he lapped at her gushing sex. Had she been a full sized woman, he suspected she would have soaked both him and the couch.\n\nThe dragon couldn't help but chuckle inwardly, watching her body quake and her little wings flap and twitch as he overloaded the miniscule woman with pleasure.\n\nImmianthe cursed her birth as a sprite once he finally released her from his mouth, collapsing down onto the couch cushion with her glistening ass pointed straight up in the dragon's face. She could barely breathe; her entire body was flushed, making her blue closer to the dragon's natural purple.\n\nThrough all this, the spasms of pleasure still wracked her tiny, foot-long frame, and all she could think was that if she was a regular sized woman, she could have him inside of her.\n\nSomething probed at her sex again, making her head shoot up in surprise, she was too sensitive right now. She couldn't, not again. Could she? The question died in her mind as this time, the dragon managed to part her labia and push one of the forks of his tongue inside of her.\n\n\"No! No, I can't it's too much!\" she cried helplessly.\n\nThe massive beast growled his disapproval at that idea, ignoring her pleas, instead pushing deeper and wriggling his tongue so it lashed the walls of her over-pleasured, needy cunt. The sensation was so intense she instantly changed her opinion on the entire endeavour.\n\n\"Yes! Yes! Ravage me with your big tongue you magnificent beast. Don't ever stop!\"\n\nThe dragon smiled in smug pride around her butt. Her praises fell into unintelligible cries and wails as he stuffed her insides full of his dextrous tongue.",
        "That was how Annabel found them, having come home and let herself in to the confusing sounds of high pitched sex. Initially she'd thought Chris must be watching porn in fast forward but the reality was even more absurd.\n\nSneaking forward, she peaked over the back of the couch, taking in the Dragon in his half form with a healing wound on his back and the tiny sprite backing herself up enthusiastically onto his mouth. It was quite the strange sight.\n\nShe knew she should be angry... she wasn't.\n\nIt was rather arousing as the seconds tricked by. She'd tried not to imagine what her dragon would look like with another woman, let alone one so unusual. And after all, Susan had tried to warn her but the reality in front of her was exciting. Bartholomew bounced excitedly across her skin, mirroring her emotions.\n\n\"You move very quickly, don't you?\" Annabel interrupted.\n\nThe little blue woman started, looking up in shock with trembling wings and blurting out a slurred apology.\n\n\"I'm sorry Mistress, I should have asked permission but I just couldn't wait. I couldn't resist him. I'll... ooohh! I'll be done soon.\"\n\n\"I know that feeling,\" Annabel smirked sympathetically, crouching down at the end of the couch to observe closely, meeting eyes with the dragon to convey that she was okay. He soon went back to enjoying his little morsel wholeheartedly. It was quite hot watching him ravish the sprite, practically devouring her entire ass. \"I guess that means you'll be staying with us?\"\n\n\"Yesss! I'm his... oh god... I'm to be his pet for... unggnn... a hundred years!\" Immianthe barely managed, trying to leverage herself back harder but having nothing to really grab onto.\n\nAnnabel recognised the tiny woman's dilemma, having encountered it a few times when Chris took her from behind and she wanted to match his powerful thrusts.\n\n\"Here you go,\" she extended her hand onto the couch in front of the sprite, offering her finger to push against. Annabel continued to surprise herself, perhaps she didn't even consider the sprite competition at all.\n\n\"Th..Th..Thank you Mistress,\" Immi grabbed hold of the offered finger and pushed back hard. \"Yes, dragon! I'm cuming! Oh god, I'm cuming! I'm cuming!\"\n\nHer face distorted and her eyes squeezed shut; she tensed suddenly and tears began to seep at the corners. Then she was bucking and screaming in a language Annabel had never heard as she continued to rock back into Chris's mouth, fresh droplets of her joy misting fragrantly in the sex-filled air.\n\nTo the sprite, the exquisite battle between the dragon's hot tongue and her own quivering warmth was a writhing tornado of pleasure. Trapped deep inside her flooded womanhood, the storm's power consumed her body and mind, her everything. She'd never experienced anything even close to this.\n\nOh how right she'd been to choose him, muttering thanks to whatever force had driven her his way.\n\nTo the two observers, her pleasured mumbling might have seemed like nonsense; but the infatuated sprite wove powerful covenants of servitude and protection around her Master in an ancient, almost forgotten tongue. She would be his for far longer than a measly hundred years, even if he didn't know about it. The intensity of the sprite's orgasm was astonishing, triggering Annabel to action. Having watched him dismantle the tiny woman with nothing more than inhuman pleasure, she needed the dragon too.\n\nAs the sprite melted into a blissful mess on the cushion, Annabel stood and began stripping quickly. Her t-shirt and bra were lost in seconds. Her jeans took a bit longer after her shoes and socks came off. Her frilly black panties were already soaked through as she scrabbled to get them off and bend herself down onto the couch next to the sprite.\n\nThe dragon sensed a flare of power in the air as the sprite came but he was too absorbed with lapping greedily at her delicious cream as well as the spectacle of Annabel's wanton strip. His cock ached, throbbing and impatient in his ensnaring jeans. He knew exactly how he was going to ease that pain.\n\nAnnabel spread her legs and arched her back enticingly, watching the dragon eagerly struggle with his pants over her shoulder. Finally, his beautiful cock was exposed; its pointed, flared crown atop his long, creamy shaft. The slim line of purple along the underside, travelling down his thickness until it met those large, close-hanging purple testicles, so full of his pleasure inducing seed. On the couch next to her, Immianthe was equally entranced with the vision of manhood.\n\n\"You are a very luck woman, Mistress.\"\n\n\"My name's Annabel,\" she replied to the sprite as the dragon came to kneel behind her, positioning himself at her entrance but only giving himself kisses with her moist lips. It felt Iike he was scalding her, toying with her.\n\n\"I know I'm lucky but he can be a terrible tease sometimes. Like right now, he knows I need him inside so badly but he just insists on playing with me.\"\n\n\"He's just a big meany, gowley, dragon, we'll pay him back.\"\n\n\"Oh yes we will,\" Annabel agreed. \"What's your name?\"\n\n\"I'm Immianthe, thank you for saving me.\"\n\n\"You're welcome. Now, I'm going to enjoy finishing what you started.\"\n\nAnnabel arched her back sexily and pushed against the couch, feeling his thick crown spread her labia and slip inside. She looked back and entreated him, \"Please baby, come on, don't... oohhoo!\"\n\nHer words died in her throat as he pushed forwards slowly.\n\nChris savoured her tender, precious gift inch by inch; pulling back slightly every now and then to relieve pressure on her taught, expanded opening. He continued resolutely until he felt her squishy limit against his sensitive cockhead.\n\nHe was so fucking thick and hard inside her. She swore, as she panted into the leather couch, that she could feel his rod throbbing angrily, deep in her stretched insides.\n\nHe growled lustily in pleasure, holding them still by her slim waist, letting her adjust. She was always so ready for him; so hot and restricting, her pussy was already starting to try to massage him. She was exquisite, and the dragon wondered why he ever bothered to do anything but ravish her continuously.\n\nShe moaned her desires as he leant down and feathered kisses across her shoulders and the back of her neck. There, a light sweat was starting to dew, full of her natural, sexy scent.\n\nHe turned her head and kissed her passionately, their tongues interlacing soon afterwards as Annabel tasted what she assumed was the sprite's delectable cum in his mouth. What a nasty, delicious cocktail it was, no wonder he'd been lapping at her like a madman.\n\nThe thought didn't even disturb her anymore, it set her on fire.\n\nReleasing her lips, his hands brushed her ribs, around and across her smooth tummy and up to her small, perky tits, capturing and moulding them gently between his taloned fingers. Annabel could only pant and murmur in pleasure as the dragon took his time with her tingling body, holding himself deep inside her.\n\n\"That looks so hot,\" Immi breathed, feeling another flush of arousal sweep up her tired body. The purple and cream beast was mounted deeply inside his smaller mate. Her body, delicate and pale, compared to the larger, stronger male leaning down on top of her, teasing her nipples so cruelly.\n\nThe dragon started to thrust gently, withdrawing only a few inches and sliding them back inside her slowly. From her angle, Immi could see his erection as he pulled back, slick with his lover's juices.\n\nShe wanted that. Wanted it to be her cream wetting his glorious manhood. Alas, there was no way he could ever fit inside her tiny body.\n\n\"Chris, please go faster, I need it!\" Annabel cried, feeling the burning heat start to mount in her loins as he sheathed himself slowly over and over. He would occasionally bump her cervix and send a jolt of pleasure up her body, drowning any accompanying pain.\n\nShe wanted him faster now, to feel his entire length moving inside her, filling her so completely.\n\n\"I can't, Annabel,\" Chris gritted his teeth as he kissed the back of her neck again, seeing her beautiful flush spreading slowly across her porcelain skin. \"I'm too worked up from Immi, I'm already about to blow.\"\n\nShe giggled breathlessly, he was being over-attentive again; like he'd forgotten that as soon as his thick seed hit her insides she'd explode in shivering ecstasy.\n\n\"Then let it go, stupid, come in me! I want to feel it!\"\n\n\"I love you, Dee,\" Chris whispered in her ear, taking her narrow waist between his hands, he thrust deeply, driving almost his full length inside her and pulling back for another stroke.\n\nHe looked down and was overcome by the image; her perfect ass offered up to him with his thickness slipping quickly inside. Her little yelp of pleasure and the feel of tight warmth around his cock before he was drawing back again, his shaft glistening with white streaks of her viscous, creamy lubricant. Her labia dragging back with his movement, clinging to him in an attempt to stop his escape.\n\nIt was too much, he growled low in his throat and began thrusting frantically, making her cry out as he raced towards his finish.\n\nWith a grunt, his cock swelled and began spurting heavily inside her, each release addling his brain with jolts of pleasure as he simply kept screwing her through their mutual orgasm.\n\nAnnabel moaned as she started to climax, her innermost depths instantly coated with his semen as her pussy squeezed him joyously. She contracted tightly with each thrust and jet of his throbbing cock, coaxing more and more from him as she bucked and cried encouragement beneath him. She could feel it, so hot and tingly as his magical stuff pooled against her cervix.\n\n\"Oh, fuck! That's too good, Chris! Give me all of it, don't let it stop!\"\n\n\"Arrhh, Annabel,\" he moaned back, grinding his pulsing knob deep inside her quivering little pussy and relishing every last exquisite ejaculation until the was nothing left to give her. He was left tense and breathless above her, breathing the scent of their sex as she tortured his oversensitive helmet with her aftershocks.\n\nPanting together, they calmed. Chris began kissing her back again, holding her close against him as she rode out little waves of pleasure.\n\nHe was still hard, so he continued his gentle thrusting, coaxing her to begin that delightful journey towards another climax.\n\nAnnabel complied willingly.\n\n\"Yeah, go again baby,\" she cooed happily, following her encouragement with moans and whimpers as he started to stroke deep. He let her fall onto the couch and leaned back to watch her ass shake and jiggle.\n\nThey continued working towards their goal for several minutes, increasing their pace slightly and egging each other on. He grabbed greedy handfuls of her exquisite butt as he became more and more excited, leaving light red claw marks on her perfect rump while she gasped in pleasure.\n\nImmi could tell they were getting close again, the dragon's wings seemed to twitch when he was about to orgasm, just like hers did. She'd been masturbating furiously since watching them come together, the mighty dragon spending himself deep inside his mate.\n\nA mischievous, dirty idea popped into her little head. It might overstep her bounds but she didn't care in her aroused state. The thought consumed her, she had to try.\n\nWith a weak flutter, she raised herself into the air and settled on the small of her Mistress' sweaty back, facing the dragon with her pussy rubbing into Annabel's hot skin. It was strange, she already felt a strong kinship to the human girl.\n\n\"Please.\"\n\nImmi stared up at the dragon as he continued to thrust, that look of stupid pleasure right before going over the edge covering his purple, snarling face.\n\nAnnabel glanced behind to see the little blue sprite sitting on her back, watching Chris fuck her. She didn't care, she was too caught up in the feeling of his cock rubbing deep inside of her and the orgasm which was about to tear through her like wildfire, the little tattoo latched tenaciously onto her teat.\n\n\"What... do you ... want... little one?\" The dragon asked between thrusts, smiling down at the adventurous sprite.\n\n\"You know what I want,\" Immi replied coyly, leaning forwards to watch the giant dragon pound his mate while her own slick fingers worked on herself.\n\nHe was so damn big compared to her.\n\nThe dragon grinned evilly, his fangs flashing down menacingly at Immianthe in obvious excitement.\n\n\"You're a dirty little sprite aren't you? Greedy too.\"\n\n\"Oh Yes!\" Immi squealed from her perch as she frigged herself desperately towards completion. \"I'm your dirty, greedy little sprite!\"\n\n\"Fuck! Yes!\" he roared.\n\nAnnabel wasn't paying too much attention to what was going on on her back, she'd reached her limit. At that moment, her orgasm struck, tensing her around Chris again and releasing a throaty, ragged moan. She could feel Bartholomew writhing in ecstasy in his favourite spot, wrapped around her belly button and giving her little love nips as she came.\n\nHer molten heat was too much for him, triggering his climax in mere seconds as she milked his cock for her reward.\n\n\"Rrrraaaaghhh!\" The dragon bellowed, holding himself deep inside Annabel as his first massive stream shot off, splattering her already sperm-coated insides yet again. He let himself have one more spurt inside his mate before quickly withdrawing and laying his sopping erection in the valley of Annabel's glorious ass, pointed directly at the astonished little sprite.\n\nImmianthe barely had time to be amazed at his size before she watched in delight as a jet of hot, thick, dragon seed fired point blank into her soft belly. She screamed and squealed joyously as he gave her more and more, each ejaculation hitting her tiny body with force and buffeting her around a little. She was silenced as a huge droplet hit her face.\n\nHer orgasm began with the most delicious taste in her mouth, her body tingling and buzzing with more energy than she had known in her life. She collapsed, a quivering mess of pleasure in a shallow pool of his white seed. Her limbs flailed gently and her wings spasmed, she lost her senses momentarily.\n\nWhen they returned, she was gripped by her baser instincts, her claws and tiny fangs extended, brought to the fore by such a magic rich food all around her. Jolts of pleasure continued to flow through her as the dragon's cock dribbled its last into the little poolet on her Mistress's sweaty lower back.\n\nShe spared half a second to see the dragon smiling down at her debauchery before she began gorging herself and writhing around in his spend. Immi had another urge and quickly acted on it too, scooping several handfuls of his still-hot-spunk into her miniature pussy, crying out at the tingling pleasure it brought her.\n\nToo soon, she was full to bursting, her belly swollen like a pregnant cow and his sticky, thick stuff cooling all over her skin and Annabel's back. She was absolutely covered in it, but eventually sat up and looked around, seeing that both the dragon and Annabel were watching her intently. She smiled back dirtily.\n\n\"What?\"\n\n\"That was something else entirely,\" said Chris in awe of the scene. The sexy little woman rolling around in his spunk while beneath her, Annabel's pale back was splattered with thick, white ropes, some reaching all the way up past her shoulder blades.\n\n\"Hot. Nasty hot,\" Annabel confirmed, having turned to catch the tail end of the sprite writhing around on her back. \"I'm sorry I missed the first half.\"\n\nImmianthe twittered happily as Annabel reached back to gently grip her sticky body and bring her in front of her face.\n\n\"Welcome to the family, I guess. You're certainly a bundle of fun and that was pretty cool for my first threesome.\"\n\nWith that, Annabel gave the sprite a big, sloppy lick up her front, shivering in pleasure as she tasted her lover.\n\n\"Hey! That's stealing!\" the sprite protested, batting against the other woman's huge lips.\n\n\"Threesome? More like two point one some,\" Chris chuckled, giving Annabel a playful swat across her lush, glistening ass, narrowly avoiding his softening member. \"To the shower, both of you.\"\n\nHe harried the two beauties until they were all under the hot water. Backing Annabel into the wall, he gave her a searching kiss, even teasing her lips gently with his sharp teeth until they were swollen and she was left panting.\n\nHe turned to the soaked little sprite, perched on Annabel's shoulder, holding onto her hair. Leaning down to be eye to eye, the dragon assessed her seriously for a moment.\n\n\"That was wonderful Immi, I'd be honoured to call you one of my brood.\" He leaned forwards, despite the impracticality, and gave the little blue woman a kiss.\n\nShe returned it wholeheartedly, running her tongue across his much bigger bottom lip, even nipping him.\n\n\"Thank you, Master,\" Immi said as she slid down Annabel's breast and clawed her way up the dragon's scaled, creamy chest and into his wet hair, laying prone on top of his head to look down at the two lover's slick, sexy bodies. \"And thank you too, Annabel, for sharing him with me.\"\n\n\"You're welcome, Immi. I never imagined I would do anything like that but in the end it kind of came naturally. Are you sure you'll be okay here though? I mean you cant... you know ... have sex with him.\"\n\n\"No, but that doesn't matter, I'm going to grow fat and happy off his seed. It'll be my time to spawn before I know it! Besides, your fingers look nice and dainty, you'll be good to me won't you, Mistress?\"\n\nAnnabel giggled euphorically, unknowingly still affected by some of the sprite's magic as well as her dragon's pheromones. Would she be good to the little sprite? It might be fun to pleasure her tiny body, have her completely at her mercy. Bartholomew seemed to think so too because he bolted to the tip of her fingers, itching to greet the beautiful blue woman.\n\nAnnabel reached up to the sprite, who watched the blue little dragon intently before her eyes widened in awe.\n\n\"A living enchantment?\" Immi squeaked.\n\n\"Yes,\" Annabel explained. \"Chris created him when we completed my binding ceremony, to protect me. He's called Bartholomew, he's quite mischievous.\"\n\n\"I didn't know what I was doing at the time though,\" Chris qualified.\n\n\"Amazing,\" the sprite also reached out to touch the little dragon on Annabel's skin. \"I'd thought him just some sort of magical tattoo but once I noticed him with all my senses... he is so much more. Hello, little dragon I'm Immianthe, seventh in line to the broken throne, not that that means anything. You may call me Immi. We will work together to keep our Master and Mistress safe, no?\"\n\nBartholomew agreed with an especially thick belch of purple smoke.\n\n\"Delightful,\" the sprite confirmed.\n\n\"Wait, spawn?\" Chris asked, finally processing what the sprite had said before they'd all gotten distracted by Bartholomew.\n\n\"Yes, of course. If you'd do me the honour, you will prick me with your fang and impregnate me so our little spritelings can be let loose across the land.\"\n\nChris was at a loss.\n\n\"Spritelings? How many are there?\" Annabel asked.\n\n\"Several hundred thousand.\"\n\n\"No way, all at once?\"\n\n\"Of course, they're very small.\"\n\n\"I don't know what to say,\" answered Chris apologetically.\n\n\"You don't have to say anything. It could be several years away but with any luck, you'll grow feelings for me and be my first mate. You've made me so happy already, dragon.\"\n\n\"Oh, that's so cute. Sweetie, of course he'll do that for you,\" Annabel gushed. \"We're going to have babies too, eventually.\"\n\nChris shook his head as the wet beauties conspired against him. There was definitely magic at play here and he couldn't help feeling guilty that he was unconsciously manipulating them. Regardless, the dragon rumbled approval deep in his chest at the thought of seeding another mate.",
        "Her species is almost as threatened as ours. This is a chance to save them too. \n\n\"Thank you, Annabel. In the meantime, I'm sure I could find uses for his stuff, make sure it doesn't go to waste?\" proposed the sprite, impishly sitting in her perch, half under a thick spray of hot water.\n\n\"I'm sure you could,\" Chris muttered, reliving the vivid image of the sprite being splattered as she writhed on Annabel's back.\n\nAnnabel slapped his peck, \"You were thinking about it again weren't you?\"\n\nHe grinned sheepishly, it had been very hot.\n\n\"I blame you, you've corrupted my boyfriend, you nasty little ... cum slut!\" Annabel flicked some water the culprit's way.\n\n\"I can't help it! You know what he's like,\" the sprite pleaded innocence.\n\nA playful, giggily shower battle ensued, the sprite using the dragon's bulk as cover from the human's grasping hands and hurling little shocks of electricity or cold at Annabel, harmless but making her scream nonetheless. They flung innuendo back and forth. Eventually, the dragon caught them both and made them make up, which they did happily enough after their play-fight. It ended up turning out into a ten minute make-out session between he and Annabel, after which the dragon took his time to wash their lithe bodies very thoroughly.\n\n***\n\n\"He's having sex with her already?\" Susan's voice raised in unconstrained worry.\n\n\"Well, in as much sense of the word as possible given the physical limitations,\" Lillian explained, drawing a slurp of blood through the straw. \"Some of the old enamouring enchantments used to use certain Sprite...How do I say this politely, ingredients? If you remember, Susan. Now she's bound herself to him, apparently offering her food is some sort of magical contract. Reyla wasn't at all happy, she seemed very surprised that a female sprite was even in the area.\"\n\nIt'd gotten late and Lillian had almost picked up her phone to find out where the witch and the human had gotten themselves lost but they'd just walked through the door.\n\nIt was truly night outside now, the lights of the larger city but especially the active Being district shone up through the wide windows into the dimly lit kitchen where the three women conferred.\n\n\"Well that explains why Reyla was distracted today,\" Michelle said. \"Things didn't go so well, she snapped at one of the legal experts we had in conference, threatened to curse his lineage if he didn't start thinking intelligently. Wait, she can't actually do that, can she?\"\n\n\"Yes, but not without consequence after yesterday's decree by the Synod,\" replied the vampire. \"Reyla is usually short-tempered at the best of times but today would have been especially bad. She was aggravated by this sprite and wounded Chris when she meant to kill little woman. To top it all off, I stood aside when the dragon could very easily have meant her harm. That he only ended up telling her off like she was a spoiled child is perhaps worse than if he had.\"\n\n\"What did she get Chris with?\" Susan assumed her son's injuries couldn't have been too bad or she'd have heard about it before now. To be honest, she was still more concerned about him taking up with the sprite so readily.\n\n\"Shadefrost, he's been healing well today but it must've hurt like hell.\"\n\nSusan's motherly instincts flared visibly as her demeanour stiffened. How dare the Drow use borderline dark magic on him!\n\nLillian saw her reaction and put a steadying hand on the witch's shoulder.\n\n\"He stood in front of her spell to protect the sprite. For what it's worth, Reyla seemed very put out about hurting him. She sent over a powerful salve to help him heal right away.\"\n\n\"He's in his room?\" Susan asked.\n\n\"He and Annabel went to bed early with Immianthe trailing along. That's the sprite, and she's quite rambunctious. He said he's feeling okay, just really tired and still a bit chilled.\"\n\nSusan didn't respond, resisting the urge to barge into his bedroom to check on him.\n\n\"So she can just get away with attacking him?\" Michelle asked.\n\n\"Well essentially, yes,\" Lillian spoke. \"Chris could have fought her or maybe demanded compensation of some sort but it's her territory. She has the power to punish and even kill her subjects with only marginal justification if she chooses so. She'd need more because he's a dragon but the Synod would only step in if things got really out of hand. She didn't even mean to hit him, the sprite was definitely asking for trouble.\"\n\n\"Huh,\" Michelle murmured. \"Things are really going to have to change around here. I can see why we got almost nowhere today, we've been assuming you have some sort of justice system with sensible rules and laws, like we do.\"\n\n\"We do,\" the vampire flashed her fangs in a wicked smile at the human before sucking out the last of her blood bag obnoxiously noisily.\n\n\"How's that?\" Michelle asked when no explanation was forthcoming.\n\n\"Don't get caught, don't piss off the powerful, and protect the Secret.\"\n\n\"So, what? Just fight it out? That's Barbaric.\"\n\n\"You can't apply human logic and laws to everything Beings do. We aren't human. Our system has worked for thousands of years, but you humans are in the process of toppling one of the constants every Being has known and clung to since birth; humans don't know about us. That's going to be hard for some of us to deal with, not to mention these new restrictions.\"\n\nMichelle thought that over for several moments. Realising she needed to reconsider her vision of how the Revelation would unfold. She'd been hoping Beings and humans could be covered by a single set of laws but who knows how it was going to work.\n\n\"You said you let him past you when you thought he might hurt Reyla, how is that possible?\" Susan noticed the importance of the vampire's admission and even managed to hold her fierce gaze until Lillian was forced to lower her eyes.\n\n\"I don't know,\" Lillian spoke very quietly. \"It's getting harder.... sometimes I just want to taste him so badly.\"\n\n\"Oh, Lillian, I'm sorry,\" it was Susan's turn to provide comfort. She couldn't imagine what the vampire was going through but it must have been a terribly cruel hearted decision to knowingly assign Lillian to guard her son. The thing was, it had been good for him and they appeared to get on so well that Susan couldn't help but be a little thankful. \"There must be a way, to break it I mean?\"\n\nLillian's eyes flicked to the witch, trying to convey the danger of continuing the conversation in the monitored apartment.\n\n\"No, I must be released. Reyla and I have our differences but our bloodpact is useful to both of us,\" Lillian lied through her fangs, doing her best to act sincere for the sake of her own safety. She wouldn't put it past the elf to destroy her after today's transgression.\n\nSusan was instantly ashamed at her mistake. She'd been removed from Beings far too long for her own good. Anything and everything could be used against you, she'd grown complacent in her time raising Chris.\n\nMichelle was confused to say the least. There was suddenly tension and angst in the air. Words like bloodpact certainly had connotations she didn't like. Her inquisitive nature was about to force her to ask what was going on but Susan subtly moved closer along the kitchen island to grab a piece of fruit out of the basket and placed her foot gently on top of Michelle's.\n\nAs she bit into the crisp apple, Susan looked meaningfully at the NSA agent, the questions died in Michelle's throat, replaced by a surreptitious swallow.\n\n\"Well, you've had dinner, Lillian, so why don't I take Michelle down to the lobby caf\u00e9 for some of our own?\" Susan said. \"I imagine that Chris and Annabel had the right idea going to bed early, we've all got big days tomorrow.\"\n\n\"I'm sure chaperoning your son on a date can't be too tiring,\" Lillian smiled.\n\n\"It's alright for you, Lillian. You're not the one handing over your lover to an untried dragoness,\" Susan said, happy that the mood had brightened almost instantly. Perhaps even quick enough for a nosy Drow to overlook the poorly veiled colluding.\n\n\"You can only blame yourself for raising such a lecherous, unfaithful, womanising, boy,\" the vampire shot back.\n\nMichelle's mouth dropped open before she realised Lillian was, of course, joking.\n\nSusan only smiled knowingly as she grabbed Michelle's hand and pulled her towards the door. Lillian had it all wrong, when you were with Chris, it was like you were the only thing in the universe that mattered to him and he was the only thing that mattered to you. At least that's how it felt to her. It was wonderful.\n\n***\n\nThe sprite paced down his chest and out onto the ripples of the dragon's abdomen, putting a hitch in her hips for his benefit as she felt his big, reptilian eyes following her shapely, naked butt. She turned, pausing to put her words together.\n\n\"I can sense you, obviously from quite a distance now that I know what's pulling me. It's even stronger here in the Ether. Just look at you!\"\n\n\"He glows,\" Annabel agreed, snuggling closer against his side, her head resting on his shoulder. He stroked a hand through her hair just the way she liked, resting it on her scalp every now and then and scratching oh-so-lightly.\n\n\"Yes. But he sticks out like a sore wing. It displays too much power. Anyone who wants to find you wouldn't have a hard time with the help of even an acolyte psycer or anyone in tune with the flows of the Ether.\"\n\n\"Radek,\" Chris murmured, making Immianthe's warm footing vibrate like a gentle massage.\n\n\"Exactly. A Being as dark and powerful as you've described him doesn't simply let you get away. If not him then someone else, eventually, will be looking for you. We must all be ready to fight back,\" Immianthe said as she paced back up his cream-coloured sternum, adjacent to her mistress's face where that delightful little tattoo was lurking behind an ear, eager to play.\n\n\"Even you, little Immi?\" Chris asked with a grin.\n\nImmi whirled on him, grabbing hold of his chin and leaning up to look into his eyes. \"Yes of course me! Just because I'm small you big Beings disregard... oooohhh!\"\n\nChris interrupted her with his dexterous, forked tongue, skimming her tummy and tiny breasts.\n\n\"Mmmhhh, don't stop, Master,\" she leaned closer across his lips so he could mouth her entire torso while his tongue slipped past her tiny bush, between her moist, warm thighs; giving her some wonderful stimulation. \"We sprites... hhhrrrrm, are quite... yes keep going... formidable!\"\n\nShe reached all the way up, pulling at small handfuls of his purple hair, gyrating enthusiastically on his hot tongue as it smothered her slickening, greedy, little womanhood. However, it seemed he was only playing with her as he moved it back up to her tummy and blew her a little raspberry. She giggled and retreated.\n\n\"My fearsome little warrior, defeated with a few licks,\" Chris chuckled after bringing his tongue back to sample her delightfuly addictive flavour. He blew cool air across her damp skin, making her shiver.\n\n\"Tease,\" the sprite accused, backing away to find a spot across his chest to lie down, kicking her legs up behind her as she rolled around a little and found herself face to face with Annabel. The sprite reached out an arm and touched her nose affectionately. \"Back to the serious stuff, and no more distractions, dragon. How am I supposed to help educate you two when you divert me like that? I've got enough problems with my attention span as it is!\"\n\n\"Okay, okay, Immi,\" Annabel soothed. \"Continue please, I'll keep him in line.\"\n\n\"Well, as I was saying, it's important to learn to reduce your presence, not only for safety's sake but because it is a helpful exercise in the basic manipulation of energy. When using magic, you draw energy to the surface from your magical centre. Then you mould that energy into your desired outcome using images, intentions, incantations, or objects. When you release that energy, your magic takes form.\"\n\nImmi paused to look up. The dragon's head was propped on some comfy looking pillows so he could watch her, which he was doing intently. Her little heart fluttered excitedly at having his eyes on her.\n\n\"To hide yourself,\" the sprite continued, \"you essentially do the opposite. Focusing on the energy contained inside of you, force it down deeper, into a calm, quiet place. Then you must try to tame it and relax. It will be hard at first, but the more you practice, the easier it will be for you to access your magic at any time. This is an excellent exercise for beginners.\"\n\n\"So it's like stretching or yoga?\" Annabel asked.\n\n\"What's y.o.g.a?\" Immi spelled out.\n\n\"Hehe, never mind, Immi,\" Chris said. \"Annabel means an exercise which doesn't necessarily make you better towards a specific goal but will improve your all around strength, flexibility, and fitness.\"\n\n\"Then yes, it's like that,\" the sprite chirped.\n\n\"But I don't even feel anything when Bartholomew uses magic. There's no warning, he just does it.\"\n\n\"He is responsive and intelligent, no?\" Immianthe lectured, waving a hand at the boisterous tattoo as it played across Annabel's hand which rested close to the sprite on the dragon's finely scaled chest.\n\nAnnabel nodded with a smile as her little dragon turned to look up at her, hopeful for approval.\n\n\"Then you must learn to communicate with him and embrace the magic of this wonderful enchantment so that you are one Being.\"\n\nAnnabel's breath hitched at Immi's use of the word. Could she be... a Being? Perhaps not in the true sense of the word but that wouldn't matter to her so much. She could be something more than human. Something relevant, someone to stand beside a dragon and meet all challenges!\n\nChris's lips and nose touched down gently in her brown hair as if he'd sensed her thoughts, extracting a happy coo from her as he snuffled into her scalp reassuringly. She looked down at her hand where it rested beside the sprite and made a plea in her mind to her little dragon.\n\nWill you help me, Bartholomew? This is so crazy, I'm talking to a magic tattoo but they say you're alive, that you can change and grow... Together we could... Can we grow into something meaningful, someone who can make a difference? I want to stay with him forever but... Please, will you help me?\n\nHe stared directly back at her. It was so intense that she felt sure he was weighing a decision very carefully.\n\nSuddenly he broke his stillness with a tiny head bob and a puff of smoke.\n\nAnnabel gasped audibly as she felt a jolt travel her entire body. Heat leapt up her wrist from the tattoo, streaking painfully towards her chest, taking hold and throbbing. It intensified quickly to almost unbearable levels but thankfully the worst past quickly. She squirmed uncomfortably as slowly, the feeling eased, the heat cooling.\n\n\"Annabel, what's wrong?\" Chris asked.\n\n\"He, he's... I can feel something, a spark in my chest,\" Annabel took a deep breath to calm her racing heart. \"I asked him to help me. I... I think he's somehow merged more deeply with me.\"\n\n\"Whoa,\" Chris murmured as Bartholomew obviously nodded in agreement. He looked a little tired from the whole ordeal. Chris reached across with his free hand to stroke Annabel's skin where he was curling up to rest. \"Thank you, Bartholomew.\"\n\nThank you! Annabel echoed at him in her mind.\n\nHe merely ruffled his little purple wings and wrapped his tail up and around her wrist. She felt the spark, for she didn't know how else to describe it, calm and pulsate gently as he fell asleep.\n\n\"He is a truly remarkable enchantment,\" Immianthe agreed. \"Perhaps you two will be more in harmony.\"\n\n\"I hope so,\" Annabel said before turning her head to steal a soft kiss from her lover.\n\n\"Do you want to practice yourself, Chris?\" Immi asked.\n\n\"Um, sure but you're going to have to guide me through it.\"\n\nChris was a bit apprehensive, the magic he'd pulled off so far had mostly come from the dragon, not his own impetus.\n\n\"Of course, Master. Just do as I've said, feel for your energy as if you're about to cast. Focus on it, only a little though, please. We don't want to blow a hole in the wall if you cannot concentrate.\"\n\nChris looked askance at the sprite but felt inside himself for that energy which lurked just below his normal human consciousness. He pulled at it gently, it was much slower than when the dragon was actively guiding him but he could feel it begin to focus in his solar plexus.\n\n\"Good, Chris, good,\" Immi encouraged him, feeling the magic coming to the surface right underneath her. \"Can you hold it there?\"\n\nChris nodded, but it was becoming uncomfortable. It was obvious the magic wanted an outlet. Once called upon, it was eager to find its new form, embrace its release.\n\n\"Okay, now try to push it downward, deeper. Contain it, try to calm it and relax yourself.\"\n\nSaying that was all well and good, Chris thought, but it was a completely different kettle of fish to put it into practice when he'd never done anything like this before. He didn't want to try to talk and loose his concentration but his efforts to push the stubborn orb down inside himself weren't working. Frustrated, he tried making a mental shove at the imagined ball.\n\nIt only hummed louder, like an angry wasp.\n\n\"Relax, Chris, don't force it,\" Immi soothed as Annabel stroked a comforting hand across his skin.\n\nHe was really trying, but the energy was getting more aggravated as he stressed. He took a deep breath through his nose and swallowed anxiously, resetting his efforts.\n\nTo his relief, the ball shifted. He gulped again and tried to apply gentle pressure, pushing his own essence and magic deeper within himself. It was working! Ever so slowly the orb descended past the prostrate sprite, into his belly.\n\nThe further it went, the easier it became, and as he realised it was going to work he relaxed even further until the ball came to a soft barrier right by his belly button. He felt it notch into place of its own accord, sinking into a dormant or hidden state. He finally understood how the process could conceal one's power and aura, for the energy in his belly seemed far smaller to what he had been struggling with in his chest just moments ago. It still vibrated lazily every few moments but it wasn't a struggle to hold.\n\n\"Nice work,\" Immi praised as Annabel looked up to find her dragon smiling nervously. \"The hard part is over but the mastery is in the art of holding, not pushing it down inside you. The trick is to become used to the sensation so that you don't have to think about keeping it there. The more of yourself you try to hide, the harder it is to hold and conceal.\"\n\n\"Do Beings just go around like this all the time?\" Annabel asked.\n\n\"Some,\" replied the sprite, \"but it is not as easy to maintain when distractions are present; engaging in conversation or even walking down the street might be too much for most Beings. In our world though, it is always wise to hold something in reserve.\"\n\n\"Isn't it a bit dishonest? I mean going around pretending to be weaker than you are?\" Annabel didn't like the idea that any Being they met could be far from what they appeared to be on the surface.\n\n\"On the contrary, it helps to keep everyone honest,\" Immi said. \"If you don't know for sure who you're dealing with, it's best to be polite and careful. But don't worry about it too much, most Beings don't bother. For someone like our dragon, though, it could be important. Besides, I'm running this lesson and it's a good place to start!\"\n\n\"It's always good to have an ace up...\" Chris started but spluttered and coughed heavily as the energy he'd been holding spotted a chance to make a break for its freedom at lower entropy.\n\nSmoke billowed from his mouth as he coughed, carrying tiny purple and yellow embers upwards as both Immi and Annabel started backwards. It surged back up through his body, some escaping in where it found the opportunity but most settling back in his solar plexus where it was more stable.",
        "Chris watched his efforts go up in smoke, literally, and realised that Immi had been right, it was hard to maintain the concentration required to keep the energy in check, contained where it didn't want to be.\n\nHe would have to work at it so it was automatic, not requiring his attention every second. He swallowed, then burped out a final little mushroom cloud of soot before looking apologetically towards his audience.\n\nAnnabel was smiling brightly at him.\n\n\"You're such a doofus sometimes.\"\n\n\"It's harder than it sounds,\" he defended with a toothy grin.\n\n\"Yes. And you did well for your first time,\" Immianthe added.\n\n\"Thank you, Immi,\" he reached to stroke a finger down her back. \"I really appreciate you helping us.\"\n\n\"It's the least I can do, Master,\" she crooned underneath his touch.\n\n\"I think it's time we actually got some sleep though. Tomorrow might be a bit... well, it's certainly a daunting prospect,\" Chris wasn't entirely sure how he felt about meeting the two dragonesses. He was certainly nervous though. To be honest, he wasn't sure he would get to sleep easily at all.\n\n\"It will be fine, babe,\" Annabel soothed.\n\n\"Thanks, Dee. Should we go back now?\"\n\nShe nodded and he began pulling her with him as the colours and textures around them became whole again. The light changed quality quickly, now a soft yellow from the lamp in their room.\n\nThe air felt thicker and he breathed deeply the rich scents his sensitive reptilian tongue and nose had been unconsciously missing in the Ether.\n\nDominating his senses was his First's lovely smell, which he savoured as he pulled her close and settled them down into the bed. The sprite merged back of her own accord a few moments later and seemed happy enough with her position on his chest.\n\nHe ruffled his wings a little underneath himself and pulled the sheet across them all, enjoying the soft breeze it created at it settled and the light caress of fabric on his skin. With his other arm he reached for the bedside lamp, submerging them in darkness.\n\nThe burn on his back was barely a dull throb now, causing enough discomfort to keep his tired body awake for only a few more moments as Annabel's breathing deepened and Immi settled herself down.\n\n\"Master?\" came the sprite's whisper after several minutes of stillness.\n\n\"Yes, little one?\" the dragon murmured back.\n\n\"I'm glad I found you.\"\n\n\"So am I.\"\n\nHis hand settled gently on her delicate form and she wrapped her arms possessively around his index finger, giving it a tiny kiss as they all eventually drifted into a peaceful, deep, sleep.\n\n***\n\nChris enjoyed the ruffle of wind in his hair as he drove with the window cracked.\n\nHe liked driving, hadn't had much of a chance lately though. It was a nice day for it, sunny and not too hot; they were about thirty minutes out of Laramie now, having just crossed the state line.\n\nThe drive had been quiet. Lillian usually wasn't much of a talker, Annabel seemed preoccupied, and Susan either didn't like the sprite or didn't like how quickly she'd been accepted into their lives. He couldn't be sure.\n\nAdmittedly, he should be more cautious about letting the tiny woman in, he'd have to talk with his mother about it later. Regardless, he trusted his dragon's instinct when it came to the tiny woman who was now sitting in his lap as he drove down the deserted highway.\n\nThe sprite was in love with modern music from the moment Annabel had turned on the radio in Susan's Subaru, dancing around the car, barely bothering to stay below the vision of other drivers. Her activity, along with the early afternoon sun had finally worn her out and she'd fallen asleep up against him after begging unashamedly for a morsel of food.\n\nThe warm air tickled his nostrils as he concentrated on the road, attempting to keep his mind away from the upcoming meeting. Scents of the surrounding countryside and road reminded him of his childhood and helped keep him calm.\n\nThis was nice, he thought. If it weren't for the sordid reason for the trip, it would almost seem like they were a normal family... Okay maybe not, the roles were a bit wrong. But who cared anyway?\n\nHe was about to be mated to a young dragoness, the youngest dragon alive except for himself. On top of that, if he hit it off with her mother, all the better, according to Elizabeth Guthrie. It was exciting, his dragon was chomping at the bit just to scent her, a nice little female, one of his own species. Not to mention how he felt about beginning the rigorous process of impregnating her as soon as possible.\n\nOn the other hand, Chris was terrified. What if she rejected him, just like she had the other six males? What then? Did that mean he wasn't good enough?\n\nHe knew he had to try, understanding that their species was on the brink of extinction. Sure, in the moment he would probably enjoy it but it felt very staged and unnatural to his human mind.\n\nLillian's intel had described Claire Godran as a fiery young woman, quick witted and tempered, passionate, and perhaps a little spoilt. By all accounts her personality matched her aspect.\n\nPetra, her mother, was several hundred years older and much more level headed, a fierce protector of her adult daughter. They were currently under protection in the Western Territory, living outside the hub city of Los Angeles, in San Diego.\n\nPetra had called again from the road that morning, expecting to arrive around five that afternoon at the latest. Apparently both women were excited to meet him too but it didn't help to know that. Chris had one hell of a bunch of butterflies brewing in his tummy now that his mind had wandered back to them.\n\nSo he distracted himself with driving the five of them home to Laramie, to see Jethry, and perhaps attempt to save his species.\n\n***\n\nThe little dairy ranch seemed unchanged, there was no reason it would have, but it felt like he'd transformed so much since he'd left that he thought it might be different too. It seemed months ago he'd left this place but really it was a matter of days or weeks.\n\nThe old werecat was on his porch waiting for them and as soon as he parked, Chris was on his way to give his friend a sound hug.\n\n\"It's good to see you boy. You've grown some,\" Remarked the werecat, sizing him up as they broke away.\n\n\"Yeah, some things changed when I came back to my human form. I gained a couple of inches among other things, I'm much stronger now too, even when I'm human.\"\n\n\"Good!\" Jethry chuckled. \"I've got some work for you to do before your guests arrive. I hired that Simmons kid from down the road to fill in for you but he's a human, doesn't have your stamina. I'd have done it myself you see, it's just my back's been acting up, you know.\"\n\nChris eyed him suspiciously. Sure, Jethry was old for a human, but he wasn't a human. It wouldn't be beneath him to play up an injury to get Chris to do some heavy chores he didn't want to do himself, he'd done it before.\n\n\"Alright old man, at least you're smart enough to admit you're not up to doing everything around here. We wouldn't want you to hurt yourself,\" Chris quipped back.\n\nJethry almost rose to the bait, but simply smiled graciously and went to greet the others, wounded pride was better than lifting heavy objects.\n\n\"Susan my dear, you look even more beautiful,\" Jethry practically bellowed as he strode past Chris, making her blush a little as they met on the gravel driveway, giving her a warm hug. Chris' scent was all over her though and he stepped back to look her in the eye. \"You two...\"\n\n\"Yes, Jethry, we're together now,\" Susan replied a little nervously.\n\n\"Good for you! I'd backed you to resist him for about a month maybe two but it appears I've greatly overestimated your self-restraint and sense of decency,\" His Cheshire grin gave away his game completely though.\n\n\"Oh shut up,\" Susan laughed, batting him playfully. She was really happy to see him again, still the same old Jethry.\n\n\"Ahh, and let's not forget the loveliest girl in Laramie, the spring flower, Annabel,\" Jethry purred, ever the charmer. \"My dear, Is he treating you well? You know if you have a falling out, I've got two perfectly good shoulders to cry on.\"\n\n\"I'm great Jethry, thanks. It's good to see you again,\" Annabel replied happily but with a new appreciation for the elderly werecat.\n\n\"Jethry's got a bad back Annabel, if we ever break up you should probably look for more stable shoulders to lean on,\" Chris added, drawing a playful hiss and chuckle from him.\n\n\"Young people these days, no respect,\" Jethry muttered, playing his age to the limit. \"Am I right, vampire?\"\n\n\"Indeed,\" Lillian said from invisibility, leaning against the car and assessing her surroundings. \"It's nice to meet you in person, I've heard a few old stories about you I'd find hard to believe.\"\n\n\"Back at you my dear, how about we reminisce later on tonight so I can ogle your assets, I hear they're legendary.\"\n\n\"They are,\" Annabel laughed. It was true, Lillian's body and especially her bust was world class, if you got a chance to see them.\n\nLillian was just thankful her blush was currently invisible too.\n\n\"You can come out too, little one. I don't bite, much,\" Jethry turned back to the car.\n\nImmi, peaked around the door and fluttered up to Chris's shoulder.\n\n\"Hello, kitty,\" she squeaked.\n\n\"You're cute, so I'll let you get away with that,\" growled the werecat with no real menace.\n\n\"This is Immianthe, Immi for short,\" Chris introduced.\n\n\"Uh hunh, and how did you two meet? I can see she's already quite drogonstruck.\"\n\n\"We found her in the Ether,\" Annabel explained. \"She was being attacked by a wraith and Chris healed her.\"\n\n\"I took the opportunity to bind myself to him and now he's my Master,\" Immi said.\n\n\"Immi, call me Chris. Remember?\" Chris coaxed with an embarrassed glance at the werecat.\n\nJethry could only shake his head.\n\n\"You're unbelievable boy, you leave for barely two weeks and come back with all these beautiful women hanging from your arms, fetching to add another two while you're here.\"\n\n\"Um... yeah,\" Chris' embarrassment was rising.\n\n\"Good work, son!\" Jethry clapped the startled dragon on the back. \"Well go on, all of you. I've got a roast to prepare for tonight's dinner. I'll be over a bit later to throw it in your oven, Susan.\"\n\nThey unpacked the car and spent the rest of the afternoon mostly relaxing. Susan checked all her precious plants and found that Jethry had actually been doing exactly as she'd instructed, they were still flourishing, if slightly overgrown.\n\nLillian, Annabel, Immi, and Jethry played a couple of rounds of cards while Chris did some chores, mosty restacking some hay bales which had fallen off the pile and splitting a stack of particularly knotty pieces of wood which Jethry had given up on. It was actually enjoyable to be back doing things he felt so familiar with, it took his mind off the dragons he was about to meet. His newfound strength lent a comfortable easiness to the tasks he had already acquired the finesse for as a human.\n\nMeanwhile at cards, Lillian used her telekinesis to hold her cards in front of her chair whilst floating very stealthily around to look her opponents' hands, confounding Jethry and Annabel greatly until she took pity and admitted her deception to cries of supreme outrage and laughter.\n\nThe time passed much too quickly for Chris. Five o'clock had just come and gone and he was nervously sitting at the kitchen bar. Annabel came and hugged him close, kissing him desperately, successfully conveying all her angst, which made him feel even worse.\n\nThe tension was palpable and Jethry excused himself, tactfully realising he probably shouldn't be there, at least in the beginning.\n\nSusan was busying herself in the kitchen needlessly and Lillian was sat on a couch, visible now that the sun was low enough not to penetrate into the house. Immi was perched next to her, the least effected, she was looking forward to watching the dragons meet and mate.\n\n***\n\n\"How much longer?\" Claire whined.\n\n\"It's not far now, dear,\" Petra said patiently from the driver's seat of their SUV.\n\n\"But why do we have to come all the way out here, there's nothing out here!\" She gestured out into the flat alpine farmland. It really did look quite barren.\n\n\"Your potential mate is out here, that's why,\" Petra said, a little snappily. She was on edge herself and although she could understand her daughter's nervousness, the constant questions about him and how long the drive would take were wearing her down. She sighed. \"Sorry baby, I know you're nervous but I am too. It can't be more than a few minutes now.\"\n\n\"Oh God, Mom. What if he doesn't like me? What if he isn't right for me?\" Claire worried aloud, fidgeting in her seat and twisting a strand of her red hair between her fingers.\n\n\"Shhh, it's okay, Claire-bear. There's nothing not to like and as for the second part, you can't do anything about it if you two don't match. Just promise me one thing?\"\n\n\"What?\"\n\n\"Just be nice to him, please. Don't be mean, he's only been fully awakened for a few weeks. If he isn't right for you just say so and be polite. I'll tan your ass if you put him off of dragons for good, so will Elizabeth.\"\n\nIn the past, Claire had sometimes been quite rude to her other potential mates when their advances weren't accepted. She hadn't clicked with any of the six males and sometimes, she'd let them know. This was her daughter's last chance to find a mate until another male was born, it could be hundreds of years. She'd prayed to her aspect, the wind, that her daughter would find happiness with this young male. That possibly, she could too.\n\n\"Okay, I'll try. I know I've only got one shot at this,\" Claire straightened her spaghetti-strapped tank top nervously against her toned tummy. She brushed lower to pull her blue, pleated mini skirt down a little.\n\nWould she finally have a worthy male to hold her down and take her? Her dragon was eager inside her, she'd been lonely for so long, her biological clock was ticking, demanding she find a mate. However, she wouldn't settle for anything second rate. He had to be the best to tame her fire.\n\nApparently, he was a class one. That was intimidating.\n\nClaire herself was a low class two whilst her Mom was mid to high in the same category. A class one was so much more powerful, exponentially so.\n\nDoubt swept through her again. What if she hadn't worn the right clothes? She'd tried to go for a look that would entice him, something he'd associate with someone his age, even though she was about 45 years older she probably looked like she'd just hit twenty-one. Qualms flooded her nervous mind, her outfit was way too showy, practically slutty. What if she liked him but he didn't like her? What if they did mate? She'd never done anything with a man, her dragon rejecting any advances.\n\n\"Do we have time to stop so I can change?\"\n\nPetra looked over at her daughter curiously then chuckled. She must really be a nervous wreck.\n\n\"No baby, he isn't going to care what you're wearing, which is very provocative by the way. He's going to care about what's underneath your clothes. How you look, how you smell, how you taste, how you feel to his dragon.\"\n\nClaire wished she could have her mother's exterior cool confidence. She was so beautiful with her platinum blond hair and perfect full curves, looking so pretty in jeans and a tight little blazer without even trying.\n\nSure, some guys drooled for her own body type, less curvy but toned and slim. Perky and tight, athletic. Her red hair and fine complexion was apparently also big plus too but right then, Claire would have swapped it all for just a little more confidence and experience to dispel the snakes writhing around inside her stomach.\n\nStill, there was no denying, it was exciting. Terrifying but exciting. She might finally have sex! To feel fulfilled after an orgasm rather than unsatisfied and cranky like her masturbation sometimes left her.\n\n\"Mom, if we do... you know. What do I do?\"\n\n\"I'm sure you're familiar with the biology. It'll come naturally dear, don't worry. Just let him take the lead and I'm sure you won't be disappointed. Let him know what you want if he isn't already doing it.\"\n\nPetra was a little distracted, the GPS indicated that they were right on top of their destination, only there wasn't a house in sight, just a long dirt road leading off around a small hill. She slowed all the way down as they approached, there was nothing else.\n\n\"This must be it.\"\n\n\"Here?\" Claire had expected something more flashy for a dragon, their house in San Diego was huge, a veritable mansion with luscious gardens behind high walls with big gates.\n\n\"Elizabeth mentioned he grew up on a ranch,\" Petra said, turning into the driveway and building up a little speed, she didn't want to go too fast in their SUV though, the road was quite narrow and bumpy.\n\n\"If he's a hick, I'm gone,\" Claire joked to ease her mounting tension, it was almost palpable in the air now.\n\n\"That's not nice,\" Petra chided gently.\n\n\"It was a joke, Mom. Hey, do you feel that? It's...\n\nClaire couldn't really describe the feeling, there was something potently magical nearby though, a Being or spell. It made the back of her neck tingle.\n\n\"That's him, Claire.\"\n\n\"No way! I can't even see him.\"\n\n\"He's a class one, high in the category if I'm not mistaken,\" explained Petra soothingly, she didn't want her daughter freaking out now. The male's presence was huge though, so strong, it called to her dragon and Petra could only assume it was doing the same to her daughter.\n\n\"I can feel him,\" Claire breathed, her dragon was basking in his aura as they got closer and closer. She'd never felt this with any of the others, it was almost overwhelming.\n\nA barn came into view, followed by two houses and a parking area with a station wagon and an ancient but obviously well cared for pickup.\n\nPetra pulled up and took a moment to feel out the male's presence. Elizabeth was right, he was the strongest she could remember feeling, and he was only two weeks old as a dragon. She looked over at her daughter, her eyes were closed and her chest was heaving.\n\n\"Let's go, Claire, this is it.\"\n\nPetra opened her door as Claire did, hearing the front door of the nearest house open. She met Claire at the back of the SUV but they both stopped in their tracks as a faint scent wafted across their sensitive noses.\n\nIt was smoky and rich, spicy, and oh-so masculine. Petra felt her mouth water and her nostrils instantly flare.\n\nJesus he must be a big one, she thought to herself as she went to nudge her petrified daughter forwards. However, a new scent blossomed from her daughter then, a ripe, sweet, earthy smell. Strawberries. Claire's mating pheromones smelt of the ripest, sun-hot strawberries.\n\n\"Oh baby, already?\" Petra asked, releasing her pheromones indicated that her daughter wanted to mate badly, that she accepted the male.\n\nClaire simply nodded.\n\n\"You don't want to see him first? To meet him?\"\n\nI don't need to, Claire thought, shaking her head, beyond words at the moment because her dragon was dragging her towards him. She smiled briefly at her concerned mother, turned and stormed up the stairs to the front porch. Completely ignoring the witch at the door, pushing inside to find her destiny.\n\nPetra jumped into action, quickly following her headstrong daughter before she got into trouble. \"Sorry,\" she apologised to the witch. \"I'm Petra, that was Claire. She's a bit high strung at the moment.\"\n\n\"No problem. It's nice to meet you. I'm Susan, Chris's broodmate and surrogate mother,\" Susan replied, extending her hand towards the dragoness for a brief handshake.\n\n\"Should we go check on them?\"\n\n\"I think that's a good idea.\"\n\n***\n\nChris could hardly believe his eyes, the redhead advancing on him was absolutely gorgeous. Slim and just a little shorter than Annabel's 5'8''. You could tell she was an athlete, the way her midriff had perfect muscle definition with pale, silky skin over the top; her red tank top clung to her and swelled around her breasts."
    ],
    "authorname": "ltpc",
    "tags": [
        "fantasy",
        "non-human",
        "dragon",
        "magic",
        "romance",
        "incest",
        "vampire",
        "harem"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/endangered-ch-06"
}