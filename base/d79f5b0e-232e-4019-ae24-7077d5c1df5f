{
    "title": "Crystal Clear Ch. 07",
    "pages": [
        "This story is part of a continuation of my Road Trip series (see the end of 'Road Trip -- California' for a list of the chapters of that series, in order to be read). You need not read that series to enjoy this one. Although real places and celebrity names are used for realism, this story is fiction. Please 'read, enjoy, vote, and comment.'\n\nSynopsis of This Story So Far: After a cross-country road trip laced with grief, love, incest, and sex, Jim moved in with country music star Crystal Lee and her sister in Nashville. Thanks to Crystal, Jim also became a top country music sensation. Crystal posed for Playboy in a sex-filled weekend photo shoot. Jim, his sister, sister-in-law, and friends enjoyed a New Years holiday orgy on a Caribbean isle. Crystal and Jim head in different directions to make two movies. On the west coast for his movie, Jim reconnects with a love interest from his road trip, participates in an orgy with his leading lady, and finds a new love interest. \n\n<center>Chapter 07\n\nNicaragua, movie making, kidnapping, rescue, and sex</center></center>\n\nA machine gun fired at us from an overhead helicopter. Along the ground, the pock marks each bullet made exploded in line closely parallel to where we were running in a zig-zap pattern. I thought of all the training I'd had when I joined the Special Forces, much of it training for just a situation such as this. \n\nBarry Peters and I had just grabbed Jill Dane's hands and raced for cover in a dilapidated adobe hut. Just as we neared the building, the front door disintegrated in an explosive hail of bullets from the gunship as it made another sweep towards us. We veered away from the hut.\n\nI turned away from Jill and Barry and let them keep running; I raised the automatic weapon I had slung over my body, took careful aim, and fired round after round at the helicopter -- defying death as their bullets rained down around me. I could see the long tongues of flame sprouting from the muzzle of my weapon as I fired. \n\nAlmost immediately a burst of smoke started to emerge from the aircraft's engine compartment, and the flight path got erratic. I kept firing as the bird turned and fled away from us. Just over the tree line, the helicopter sank out of sight into the trees. Seconds later a huge fireball rose into the sky, indicative of a fiery crash from which no one on the helicopter could survive.\n\nI lowered the rifle just as Jill flowed into my arms and passionately kissed me. We had one of our little make out sessions that we loved so much. Jill was really getting into it, driving her tongue deep into my mouth, and for that matter I enjoyed her expression of joy too much because I could feel the quickening in my fatigues. Finally, Jill pulled away, and looked at me with tears in her eyes -- tears of joy at being saved from death. We held the position for several seconds.\n\n\"CUT!\" \n\nMark Ang came racing across the clearing to Barry, Jill, and me with a smile on his face from ear to ear. \"That was some of the best acting I've ever seen. I think we got perfect shots on every camera.\" He turned to a telephoto camera hidden in a palm tree that had been focused on my face and my defensive fire at the helicopter. The cameraman gave Mark a thumbs-up and a big smile. So did the cameraman on an elevated hoist just off the edge of the clearing.\n\nMark grabbed a walkie-talkie off his belt and spoke into it; \"That's it, Ronaldo. We're through with the helicopter for today. I think our footage is superb.\" \n\nIn the distance, where the helicopter supposedly crashed, we could hear the whap-whap-whap of the rotors as the bird started to rise, like the Phoenix, into the skies again. After achieving a safe altitude over the trees, the aircraft did a low pass over our clearing. We could see the 'gun men' in the open door merrily waving at us. The rented helicopter turned and headed north to the Agusto Cesar Sandino International Airport -- the airport serving Managua, Masaya, and Granada in Nicaragua. The cast, film crew, extras, and equipment vans were all parked nearby but out of site, including the luxurious motorhomes some of us used as our temporary homes at the remote film location. We were in a field surrounded by trees on a set the crew had built a month earlier near the small Nicaraguan town of Los Campos -- a picturesque village with fruit orchards nearby. In the background in every direction lay the remnants of volcanos, a staple of the Nicaraguan landscape.\n\nOur movie, Pressure Limit, had entered its fourth month of shooting under the direction of Mark Ang, one of Sony Studios up and coming directors. We were ahead of plan and below budget, something that would score big points for us, particularly Ang.\n\nJill flowed into my arms and kissed me again, a habit she'd adopted several months ago; \"My hero. You saved me from all those nasty men in that whirlybird machine.\" She used her falsetto and innocent woman voice more likely heard in an 1880's play than in our movie; she played the role well. We all laughed, and I waved my rifle in the air; a rifle rigged to only shoot blanks -- it couldn't even be loaded with real ammunition.\n\nMark looked around and said, \"The sun's getting a little low in the sky. We could shoot some of the interior shots in the hut where you discover the drugs, but our outdoor shots are done for the day.\" \n\nI shrugged and said, \"OK, let's do it.\" Jill and Barry looked ready too. We liked to be busy doing filming instead of standing around rehearsing lines, doing makeup, or anything else. Our 'Let's work' attitude contributed to our ahead of schedule and budget status. For the next two hours, we did various shots inside the fake adobe building; part of each side of the building could be folded away for camera access. \n\nIn one scene inside the hut, I happen to kick a chair out of the way in frustration at not finding 'the goods.' Beneath the chair, I spotted a metal ring that when pulled opened to a burial pit full of bales of cocaine. Of course, the bales were actually flour carefully bricked in clear wrap by the stage crew to look like what everyone now assumed a kilo of uncut cocaine would look like. I would use a knife to stab one of the bales, dampen a finger, and put a slight taste of the white powder to my tongue, thereby confirming to my colleagues that we had found the mother load of cocaine and had closed off a major drug highway out of South America to North America. The crash of the helicopter had sealed the deal. Good guys win; bad guys lose.\n\nMark got about twenty separate sequences from us; we only had to re-shoot three of them. We had the script down really well, and knew each other well enough to anticipate lines and reactions from one another as we improvised through part of the dialogue. \n\n\"That's it for today,\" Mark advised. \"We're out of good outside light entirely, even light coming in the windows. We'll pick up tomorrow on those shots we skipped earlier where you're following the foot trails through the trees.\"\n\nAn entire work crew moved in and clustered around us. Several people dabbed at our faces to remove some of the makeup we wore. As that happened, Barry, Jill, and I passed our outer clothing off to three staff members from wardrobe. We'd each learned to wear a bathing suit under our clothing anyway because the heat and humidity were so oppressive in the afternoons. Jill's shapely body emerged from the tight shorts that showed off her sexy legs, and two different vests. Under the khaki shirt that had been unbuttoned almost to her navel, she wore nothing. Everyday, the entire cast eagerly awaited this time of day when she passed over all of her clothes, ending in only the monokini. For a few brief seconds, everyone got to view her splendid orbs and their magnificent areolas and nips. I always got hard, and she knew it. This time I got a wink from her, and she jiggled her breasts for my benefit.\n\nA stage hand gave her a large towel that she draped around her shoulders. With her long blond hair, both hung down her front and loosely covered her breasts. I wondered if we'd have another sex-filled night. Even with Claire and Ellen working on the set and available at night, I seldom minded a good fuckfest with Jill and a few others; Claire and Ellen always enjoyed themselves too. We were an oversexed bunch of movie stars and assistants.\n\nJill rejoined Barry and me; \"Tonight, after dinner, my trailer. I am horny and need just what you guys have hanging around.\" She reached down with one hand and rubbed the lump in Barry's pants, still evident from the gawk he'd enjoyed when seeing her exposed tits.\n\n\"We'll be there,\" I stated with a smile. \n\nWhen we were staying at a shoot location as remote as this Mark arranged meals to be catered to us. Tonight, with the temperatures hovering in the high eighties, a buffet table had been spread out with salads, a roast pig complete with an apple in its mouth, and a slew of vegetables and desserts. I worried about gaining weight. A well-stocked free bar also opened up after shooting had been completed. We got ourselves drinks, and sat on new picnic benches for conversation. \n\nJill continued to tantalize everyone with the flashes of her breasts she allowed as she'd turn back and forth during our conversation. Barry and I sat in our Speedos, the lumps in our suits evident as usual. Nudity or partial nudity on the set apparently wasn't unusual. Even some of the female crew wore loose clothing that allowed more than occasional peaks at their bodies. The heat almost mandated a casual approach to exposure.\n\nClaire and Ellen came to the buffet from their other duties on the set. Each got a glass of wine and joined in the discussion. They each wore the briefest of shorts, and a short-sleeved khaki shirt with the Sony logo embroidered on the left breast pocket. Everyday I asked one or the other of them, 'What do you call the other one?' and I always got the same groan in response. Their shirts were unbuttoned almost entirely revealing their braless cleavage and assets too. At my request each of them had gotten a shirt a size too small; with most buttons undone the shirt pulled tightly across their beautiful chests and let a lot of exciting skin show. The curve and fullness of their assets showed to those that cared to look -- and that turned out to be most of the crew and cast.\n\nWe sat around in the darkness drinking after dinner. Many of the support crew had piled into two buses for the trip back into Granada and their nighttime quarters. A dozen of us opted to stay at the site and sleep there --sleep and other things. \n\nThe site had a few armed guards that patrolled the site. This part of Nicaragua was supposed to be 'safe' from the remaining ardent Sandinistas or Ortega's vigilantes. Our guards were from out of the country and neutral to any of the local causes.\n\n<center>* * * * *</center>\n\n\"My God, James, how do you have the stamina to keep doing that to me. Fuck! I've never had so many orgasms in my life as when you're fucking me.\"\n\nJill Danes praise for my evening's performance sat well with my ego; something I kept trying to subdue. At that moment, she lay on the edge of the couch in her trailer, mostly under me -- nude, her legs spread and pulled back near her chest, so I had maximum access, and my cock could go as deep as possible. My cock had augured into her to maximum depth several times in the past minute, each time resulting in Jill gasping for breath before pleading me to go faster and harder.\n\nI told her, \"And you, Miss Danes, have one of the most comfortable and sexy cunts in the western world.\" I jammed my cock into her again, and she gasped and moaned. Each time I'd slid into her I had felt the muscles on the wall of her love sheath ripple and try to hold onto me, heightening the stimulation for both of us. Jill had what many called a 'snapping pussy.'\n\nJill said in a soft voice, \"Well, Mr. Mellon, isn't it about time you filled my little hole with a gallon of that white spunk juice you distribute so well and in such generous quantities.\"\n\n\"If you insist, Miss Danes.\" To the sound of her groans, I sped up my thrusts into her vagina until my hips became a blur to those watching. I could keep this up indefinitely, thanks to training in Tantric sex that a dear friend in Florida had taught me, or I could acknowledge my own needs for release and do exactly as Jill asked: fill her pussy with a large amount of jism.\n\nJill's eyes rolled up in her head as I started my staccato pounding into her cunt. \"Oh fuck ... Oh ... Oh ... Oh ... Oh ... Oh ...\" She went on and on, each sound rising in pitch and intensity as I brought her nearer and nearer to the 'Big O' as she called it. This cum would be especially intense for her unless she was immune to what I'd learned about her responses.\n\n\"OH, FUCK ... ME!\" Jill screamed, as she grabbed at my shoulders and used her legs to wrap around me and jerk me into her body. \n\nI had allowed my own orgasm to approach as well, so as she came my jets of cum started to surge from my body into hers. The first few shots were the most intense and carried the most fluid. I hadn't stopped pumping, but my pace had slowed. Even as I continued to cum -- as did Jill -- my fucking motions started to whip up a white froth in her well-fucked pussy. \n\nWhen I maxed out on my own sensitivity, I yanked my cock out of Jill, pulling some of the cum with me. The fluids immediately started to gush from Jill's cunt in what looked like white suds --- drippy but with lots of small bubbles. My sharp withdrawal made Jill writhe and cum again, maybe at a lesser intensity. \n\nJill looked at me through half-closed and glazed over eyes, \"My God, you fuck well. No one else can do that to me. I am your devoted slave for life so long as you do this to me a dozen times every day.\"\n\nI put on my fake cowboy drawl I called on frequently, \"Why ma'am, we are just a doing the best we can with what we have to work with. You give me a lot to work with.\" I reached up and gently twisted her left nipple -- a tit so erect I thought it might be painful for her. Jill moaned and writhed into my groin again, moving her hips to recapture the cock I'd extracted from her.\n\nI caught my own breath, not immune to the energy I had just used to satisfy my leading lady and co-star.\n\nAcross the room of the expandable motorhome, Claire had her face buried in Ellen's cunt, her tongue working to bring yet another orgasm into the room. In her own pussy, Claire had a vibrating egg inserted; Ellen had the control to the device in her right hand and as Claire lapped at her privates she'd adjust the frequency or intensity of the egg's vibrations. Thus, both of them were writhing, twisting, and moving their hips in a highly sexual manner.\n\n\"Anyone over there want sloppy seconds,\" I said as I offered up Jill's sodden pussy.\n\nEllen looked at me through her half-eyes and nodded in the affirmative. I gestured for her to come across the small space between us and 'do' Jill. Claire let up her ministrations, and I saw Ellen turn off the control for the egg.\n\nBoth girls came over and knelt by Jill and me. Claire grabbed my cock since she was closest, and swallowed the still erect shaft. I no longer needed cleaning; she'd taken care of that with one gulp.\n\nEllen locked her mouth on Jill's cunt, tongue in motion, as she sucked the fluids from her cunt. After Claire had turned her attention to Jill, she tapped Ellen on the shoulder. Ellen pulled away and started a French kiss with Claire, the two of them immediately snowballing my cum and Jill's girl juice between them. Ellen moved up and repeated the process with Jill who welcomed the lewd activity.\n\nAs Ellen and Jill mixed it up, Claire smiled enigmatically and came to me, thrusting the last of the snowball she had kept into my mouth for us to share. I played the game with her to her delight, our tongues dancing back and forth into each other's mouth as the cum, Jill's juice, and the saliva from Ellen and Claire gradually disappeared.\n\nClaire finally announced, \"Oh that is so fucking hot. I love doing that. I'm not sure there's anybody I'd do it with, but you inspire me. I love you.\" We locked into a wild kiss again.\n\nWhen we were sated and somewhat exhausted, I asked Jill, \"Hey, where's Barry? I thought he wanted a piece of you tonight?\"\n\nJill said in a dreamy voice, \"He's in his motorhome fucking that cute little Spanish script girl he's taken a shine to. She may kill him before tomorrow, she looked that horny for his cock as they walked back after dinner.\" Our motorhomes were a short distance from the filming site so they wouldn't show up in any of the exposures.\n\nJill shifted around and slowly stood, putting a hand on Ellen's shoulder to steady herself. \"Oh, I am so royally fucked ... and I am so smelly and cum soaked, I've got to take a shower. Do you all want to sleep over here ... no wait, I already know the answer -- the three of you like to be exclusive when you sleep together. I think that's so sweet. Go ahead, I'll tidy up here and go to bed.\"\n\nEllen and Claire stood and slid into their shorts, tucking their thongs into a pocket. The shirts went on, but left unbuttoned around their taut breasts. Boots on, and then we were out the door to go to our motorhome. I picked up my clothes, and slipped on my briefs and boots.\n\nIn the shadows, I saw one of the guards on patrol. If he saw us he didn't acknowledge. We passed Barry's motorhome, and chuckled as we heard the moaning and feminine shrieks of pleasure from the bedroom end of the home. \n\nWe went into our own motorhome, and soon both girls stripped and headed for the postage stamp-sized shower-bath combination. I had to pee, so I told Ellen, \"I'm going outside to pee; back in two minutes.\" I tossed the rest of my clothes onto the couch, and went outside.\n\nI didn't want to pee near the motorhomes so I walked about fifty feet to the edge of the clearing, faced the trees, and started to relieve myself. At that instant, I heard a scuffle, and groan from near Jill's trailer, and then a repeat from behind me, and then several other sounds I could tell were hand-to-hand combat.\n\nI thought to myself, 'Fuck, here I am defenseless.' I started to head back to our motorhome, when I felt a knife at my back. \"No move, Se\u00f1or.\" I froze, slowly raising my open hands.\n\n<center>* * * * *</center>\n\nThe activity I detected came from Jill's motorhome. I heard her scream and then silence, except for brief banging and scuffling sounds. Since I hadn't been stabbed outright, I assumed I was not the main target of whatever raid had started. Maybe the young man behind me in the dark hadn't recognized me in the darkness.\n\nEven in the dim light coming from a few safety lights the crew left on all night, I could see two other men carrying a small body between them -- Jill. She seemed unconscious as her head sagged. The trio disappeared into the woods on the opposite side of the parking lot we were in.\n\nThe man behind me poked me with the knife, \"You no move, Se\u00f1or, and you live a long time. Get on ground.\"\n\nI followed his instructions and lay face down with my arms outstretched. I'd been taught this submissive posture decades earlier in the Special Forces. While it took you out of the fight, it also announced to your attacker that you were no further threat and would live a day longer to even the score.\n\nI sensed the young man move away from me. After thirty seconds, I looked around just in time to see three more young men run in the trees exactly where Jill had been taken. No one was near me.\n\nI bolted for the door to my motorhome, jerking open the door. Claire and Ellen both stood near the bedroom drying themselves from their quick shower. I was covered in dirt; the two looked at me strangely. I blurted out, \"Jill's been kidnapped by Lord knows who. I was held at knife point, but whomever they were, I wasn't their target. The guards must be gone or out of commission.\" ",
        "As I talked, I kicked off my boots, jumped into my jeans, and threw on a dark shirt. I grabbed a pair of socks, thought for a second and stuck them into a pocket; boots back on and in less than a minute I bolted for the door. I said to Claire over my shoulder, \"Lock this door, and don't open it up for anyone -- and I mean anyone but me.\"\n\nI slammed out of the van, and beat on the side of Barry Peter's motorhome. He appeared at the door seconds later, naked with an equally naked dark-skinned girl behind him. I spoke, \"Jill's been abducted. Get dressed. Call the police in Granada and the others at the hotel there. Warn them. Get some action.\" He nodded in understanding and turned to get dressed. As I left I told them, \"And lock your door.\"\n\nI circled our van and saw the bodies of two of our guards. I guessed the others were equally disabled or dead.\n\nI cut through the kitchen area and grabbed several sharp knives. I found a flashlight, but verbally reminded myself not to use it at full brightness -- a stupid move at best if I were in pursuit of Jill's captors.\n\nI raced across the parking area to the spot where I'd seen the men disappear with Jill. Sure enough, there was a narrow but discernible trail there. I started into the woods slowly, quickly finding not only near darkness, but also silence -- a silence that told me the men were much deeper into the woods or even gone completely by now.\n\nI covered the flashlight with a sock and gave only a brief flash of light now and then to confirm the trail. Fresh footprints evidenced the fleeing men, and fortunately no blood. I have two assets that served me well in the Special Forces: acute hearing and acute night vision. I put both to use, as I crept through the woods.\n\nEventually, the trailed opened up into a field with an orchard to one side. On the far side of the open field, I saw a small fire and several flashlights moving around. I ran for the light, keeping low to the ground. I fell several times on the uneven ground but rolled with the event. \n\nAs I neared the lights, I could make out six men and a beat-up pickup truck. Two of the men carried rifles, and the others appeared unarmed -- except for knives as I'd experienced. I reminded myself that there were no winners in a knife fight, and then moved closer.\n\nI could hear the men talking and arguing in Spanish, damning my lack of Spanish language skills. I could occasionally make out the word 'Se\u00f1ora' that I did know and that I took to mean Jill. The men were gathered around a small fire about fifty feet from the truck; five were sitting and one standing. A bottle of liquid courage was being passed around.\n\nI circled the sextet, staying well outside their sight range. I wanted to see what was in the truck. When I got the truck between me and the men, I bee-lined for the vehicle. In the flatbed of the truck I found Jill, still unconscious, but apparently alive. Regrettably, I couldn't just grab Jill and run back to camp with her over my shoulder.\n\nJill's hands and feet were bound in duct tape; a strip also had been placed over her mouth. Staying out of sight I leaned into the truck with a knife in one hand and slit the tape around her hands and feet. As I did she started to move.\n\nJill's eyes blinked open clearly displaying her fear. She looked at me in the dim firelight. I held my hand up to warn her not to speak; a finger to my lips as well. She instantly got the message and nodded. I pointed at the men and held up six fingers. I also made a motion for her to just stay put and feign unconsciousness. I slipped away.\n\nStep one was to keep them from leaving the area -- once they drove away with Jill I might never see her again -- alive. I slipped under the truck and drove one of the knives I'd carried into each of the right side tires -- the ones farthest away from the men and the fire. I did it on the inside of the tires under the truck to avoid detection of obvious sabotage. I left the knives in so there'd be no great hiss of escaping air. The truck settled slowly until the two tires on that side were flat. \n\nStep two, I had to disable the men. I backed away from the truck until I found the edge of the clearing they were in -- a farm field. Predictably, there were various piles of stones raked from the fields along the edge of the field. I found several softball-sized chunks of granite and returned to the bed of the truck, reaching in and giving them to Jill. I pointed to my head. She knew what to do.\n\nBack at the rocks I'd found, I filled my socks with smaller stones until I had two saps or blackjacks.\n\nNext, I gaged the shortest distance to the woods from where the men sat. Fortunately, it wasn't in the direction of the truck. I moved into woods at that spot and waited.\n\nGood things come to those that wait. I can remember an instructor for my Special Forces unit pounding that into our heads. I squatted, watched, and waited ... and waited.\n\nPredictably, one of the men eventually needed to piss, apparently just before they drove off with Jill. He stood and walked in my direction, away from his friends at the fire. I'd anticipated his route. \n\nHe found a tree, unbuttoned his trousers, and started to urinate. Behind him, I wound up and swung one of the socks loaded with rocks. When I had adequate momentum, I reached forward and the socks connected with the man's occipital bone with a sickening hard whap and the sharp sound of the rocks in the sock clunking together.\n\nThe man slumped forward totally unconscious. Based on what I'd learned in my training, he'd be out for at least fifteen to thirty minutes. I'd hit him hard -- real hard.\n\nA glance back at the fire told me the other men remained unaware of the plight of their comrade. \n\nCrouch and wait. Crouch and wait.\n\nOne of the other men finally rose and moved in my direction. He entered the copse and almost immediately saw his friend on the ground next to the tree he'd chosen as his urinary target. He bent to awaken what he probably thought was his drunken buddy, and he too slipped into a painful unconsciousness as my bludgeon slammed into the back of his skull. This time I heard a terrible crunching sound.\n\nThe remaining men at the fire had heard the sound. \"Jorge? Jorge?\" One of the men shouted. \n\nNo reply.\n\n\"Carlos? Carlos?\"\n\nNo reply.\n\nOne man said several sentences in Spanish, and the men seemed to relax. I slipped back to the truck. \n\nOne of the men with a rifle walked to the back of the truck, no doubt to check on Jill. She would have been unconscious about thirty minutes by now, and probably coming awake. \n\nHe leaned over the side of the truck and prodded her body with his free hand. Jill struck out as though a snake poised to strike at its prey. She held the rock I'd given her in one hand and slammed it into the man's face as hard as she could.\n\nThe man screamed, dropped the rifle, and his hands went up to his bloody face. He wasn't unconscious until the sock in my left hand slammed into the back of his head seconds after Jill's strike.\n\nThe other three men scrambled up from where they sat by the fire and ran towards the truck. One carried a rifle, but by the time they'd mustered I had the dropped rifle in my hands and a round in the chamber.\n\nWithout blinking, I checked the weapon, an old M16 that had seen better days. I aimed and fired at the legs of one of the men rushing at us. Blood spurted from the entry wound in his thigh, and the man fell screaming in pain. \n\nThe other man with a rifle stopped and started to raise the gun at me; I shot him in the chest at a range of twenty feet; from what I knew, he died instantly. The third man stopped and looked at the carnage on either side of him; he put his hands up and started to back away from me. I gestured with the muzzle of the gun for him to lie on the ground -- no translation needed; he dove for the ground.\n\nBehind me, inside the truck's flatbed, I heard Jill say, \"Holy shit! You killed him. Oh my God, you killed him -- you shot him in the chest. You shot the other man too -- oh, my God, he's bleeding badly. Oh, shit. Oh, shit.\" I could hear the near hysterical edge in her voice. She was barely holding it together. With one hand on the rifle, I used the other to help Jill get down from the truck bed. I gave her a hug and felt the trembling in her small frame.\n\nI secured the site. At my instruction, Jill found the duct tape and some rope in the truck. One by one I bound the men starting with the conscious one first. He seemed relieved that I didn't shoot him. I had the one I'd shot in the leg stem his bleeding with his shirt as a tourniquet, and then I taped his hands together behind him. I could see a shard of bone at the edge of his wound; he wouldn't need his feet tied -- he couldn't walk. The three unconscious men were bound or tied next; I dragged each of them to the truck so the six of them were together and were easy to guard.\n\nI checked Jill's head. She'd been cold-cocked by the butt end of the rifle on the left side of her head. I could see the bruise it had left, and the impression of the rifle butt on her skin. She complained of a headache, and I hoped it wasn't a concussion although in that location it would be hard to avoid. The head is more delicate than most people think.\n\nI explained to Jill how to find the trail back to camp and gave her the flashlight. We took the shoes off one of the unconscious men, and she wore those since she had been carried to the site barefoot. She was also nude under the trench coat the men had wrapped her in. Jill took off across the field to fetch help. Somehow she felt compelled to run. The first light of dawn had started to shade the black night sky.\n\n<center>* * * * *</center>\n\nWe lost the next day of movie making because of all the police, news people, and even people from Sony that flew in. I guess the Policia had friends in the media, because right behind the authorities that arrived in the morning twilight came the press -- the paparazzi, even several American reporters. I guessed it was a slow news week. Shortly after dawn, most of film crew trooped through the woods to the clearing where I had found the six men. The corpses of four of our guards, and severe wounding of several others attested to the ruthlessness of the kidnappers; the remaining guards had been knocked unconscious.\n\nThe Policia found from some of the living abductors that they knew Jill Dane was a well-known celebrity, and from the newspapers our film location, so they thought they would capture her and get a ransom for the 'Famous Film Lady.' She had been a specific target; they found publicity pictures of Jill in the truck. One officer who spoke broken English explained to me that the young men were thugs in the area with a known bad reputation. \n\nWhile I thought the policia left a lot to be desired in terms of thoroughness, I agreed with the conclusions they jumped to, particularly since it absolved me of being detained or of any arrest or prosecution for what I had done to the men, including two deaths.\n\nI had killed one man outright with a shot to his chest. Another had died because of the head wound I inflicted with the rocks in the sock. Two others had severe concussions and would have headaches for a long time. I doubted they had a lot of aspirin in a Nicaraguan prison. I had shattered another man's femur with a rifle shot. The man who surrendered was the only unscathed one of the lot. The police told me that he described me a the devil incarnate.\n\nThe kidnappers who were alive were placed one each in four police vehicles and taken away to jail and medical treatment. I offered to appear in court; however, the head of the local Policia waved his hand dismissively. He didn't believe my testimony would be needed inasmuch as the evidence against the six men was so strong, including Jill's identification of three of the men that had burst into her motorhome. Based on his comments, I figured out really fast that the justice system in that country worked a little different from the one in the U.S.\n\nThat left only the press to deal with.\n\nFrom the time they arrived in the small field, the photographers had started to take pictures of me and everything else around, including the dead men, and those I had bound and tied -- even in the dim dawn. There were still photos as well as video on constantly.\n\nJill came back to the field driven by some of the armed police. She'd put on a peasant dress so she looked like an innocent woman the men had tried to take advantage of instead of the nymphomaniac vamp I knew she could be. A doctor from the American Embassy was part of the entourage; he gave us the good news that she didn't have a concussion, just a bad bruise. She too became the target of the photographers. We promised them a press conference soon. Thus, at noon after working all morning with the detectives, Mark, Jill and I held an impromptu news conference near the pickup truck I'd disabled. Barry Peter's cute girlfriend from the night before was bilingual and served as our interpreter. \n\nJill told her story to the press, and I followed with mine. Jill described how she had just finished her shower and was drying herself when the men burst into her motorhome with knives and a rifle. She grabbed a raincoat to cover herself, but not before the lead man had 'copped a feel' as she put it. I told the press about being stopped outside my own motorhome and being made to lie face down in the dirt, seeing Jill's abduction as the kidnapper's exited from the clearing where our vans stood. I skipped the part about needing to take a pee in the woods. I briefly described my background as a Green Beret, and then blow-by-blow took them through the steps I took to locate the men and disable them.\n\nJill spoke and described me as the greatest hero in her life; she pledged her undying love for me in the process, calling me an old friend whose courage and heroic powers she had not known of before that day. I had become her prince in shining armor. She kept using glowing adjectives about me, to the point where I blushed and told her to tone it down. The media ate up all that stuff; the stenographers could barely keep up with her words.\n\nMark Ang, our movie director for Pressure Limit, fielded a few questions about the movie, why they'd picked this site to film -- a good question, and how the attack would impact the movie. After that we ended our panel, and we walked back to the motorhomes at our film site. Behind us, two hearses from the local coroner's office were collecting the two bodies I'd left. The ghouls with the cameras photographed and taped loading the two dead men into the vehicles, and their exit from the field.\n\nMark assembled the entire film crew and cast -- everyone -- in front of the makeshift hut we'd been filming at the day before. He announced that we would not sleep overnight or work in the dark at the film site again. He had already arranged for some of the motorhomes in our caravan to be driven to Granada mainly with our luggage. They would be parked adjacent to the Granada Hotel and Spa, but we would not sleep in them; we'd sleep in the hotel under continuous armed guard -- guards he guaranteed would be more alert and vigilant that the previous ones. He also introduced a new Head of Security; a man whose profile resembled a large block of granite; he talked about new security precautions both during filming and when we were 'off duty.' We had another week in Nicaragua to finish filming at this part of the film, and we would be well protected.\n\n<center>* * * * *</center>\n\nLate that evening, I didn't hear the timid knock on my door as I worked on the movie script on one of the two beds in our room; the knock was so soft. On the other bed, a very naked Ellen caught my eye and pointed to the door; she lay in bed reading -- Claire sat next to her in transparent light blue baby doll pajamas working on her laptop. The room was hot and didn't invite sleeping. In my briefs, I unlocked and opened my hotel door; Jill stood there with a forlorn look on her face. My new personal bodyguard and hers stood behind her -- wearing bullet proof vests and looking like large blocks of granite; Jill had on the same trench coat she'd been kidnapped in.\n\n\"I can't ... It's just ... Oh, please let me sleep with you guys tonight. Please. I don't want to be alone.\" She had tears in her eyes and reached for me just as I invited her in. The two guards smirked. They already knew I'd retired for the night with my two younger and beautiful 'assistants.' Now, eat your hearts out, one of the hottest movie stars in the world also wanted a piece of me. I smirked back and shut the door. I wondered if that little episode would end up in some scandal sheet. It didn't.\n\nJill hurled herself into my arms and held on for dear life. She was trembling and crying. I had apparently under-estimated the effect of the prior nights abduction on her. All day, she had been cool, calm, and collected, even through our group dinner in the hotel's restaurant. I really had believed she had found a way to blow the whole episode off as a crazy night and nothing more.\n\nJill starting sobbing into my chest as she hugged me. Ellen and Claire came over and surrounded the distressed woman. After a couple of minutes, her pent up stress seemed to drain from her body, and Jill allowed Claire to help her remove her coat. Beneath the long coat, she wore a scoop neck pink silk camisole that flared into a very short skirt of the same material. The little outfit left little to my imagination. \n\nClaire pulled Jill into my bed and arranged Jill so she reclined between Claire's legs with her back to Claire's torso -- Claire wrapped her arms around her and hug her. I lay against one side of Jill; Ellen's nude body spooned against Jill from the other side. I dimmed the lights. We wrapped our arms around Jill from all directions. We kept whispering words of solace and comfort to her -- words of safety, protection, and security. \n\nOccasionally, Jill would break out sobbing for no particular reason. She was in shock. After shuddering, she finally quieted down, psychic exhaustion took over, and she fell asleep in our arms. The three of us slept holding her all night.\n\n<center>* * * * *</center>\n\nAfter a long quiet spell about Hollywood in the media, punctuated only by another Lindsay Lohan's DUI charge and series of court appearances, the abduction of Hollywood's hottest female star -- Jill Danes -- hit the media like a nuclear explosion inside a doll house.\n\nEvery reputable newspaper, magazine, and newscast, as well as all the scandal sheets, had Jill and me on the cover. The headlines of some told the whole story: <Center>Mellon Rescues Danes From Death Danes Saved by Country Music Costar Mellon Is Better Than Rambo Don't Mess With Mellon Dane's Abduction Foiled by Death-Defying Costar Jim Mellon Foils Kidnapping of Jill Danes</center>\n\nThey went on and on, everyone slightly different from the previous one. Some magazines proclaimed they had exclusive interviews with the two of us, only to repeat -- with some inaccuracies -- what Jill and I had told the assembly of the paparazzi in the impromptu news conference in that Nicaraguan field the same day I rescued Jill.\n\nPeople magazine devoted a dozen pages to the kidnapping and rescue. They had the best picture spread too, even with shots of the two bodies covered in tarps. Dozens of other pictures in their coverage also showed Jill and me at the site, talking to the police, at the news conference, and pointing to various areas of the site for the other paparazzi or the police. Every supermarket tabloid had us splashed across the cover with other salacious headlines about aliens helping me or sea monsters actually doing the abduction.\n\nIn Hollywood parlance, this was a 'Really, Really, Really Big Deal!'",
        "I couldn't believe how fast the news traveled. \n\nMore and more American reporters showed up at our film sites by the hour; no doubt flown in by private jet. The media seemed to be sparing no expense to get some coverage on this. Mark had to hire addition security to keep them at bay and to keep them from wandering into our filming. Jill and I agreed with Sony that we would give 'official' interviews to ET, Extra, People, US, and Hollywood Today. Reuters and the Associated Press would be allowed to sit in on two of the interviews, as well as La Prensa, the leading Nicaraguan newspaper.\n\nIn a brief lull the afternoon of the kidnapping, Mark gave me his satellite phone, and I called Crystal in Russia -- the locale for part of the movie she was filming. Amazingly, I got through to her on the first try. The more I described the kidnap and rescue to her, the more frantic she got about my well-being. I kept reassuring her that I'd come out of the whole thing unscathed except for a dirty t-shirt. Ellen talked to her sister too, confirming that all was good. Eventually, Crystal calmed down, but then she started babbling to me about how much she loved me and didn't want me to do anything dangerous ever again in my whole life. I wasn't quite sure what was going on in Moscow, where I'd found her doing her film, but I could tell she wanted to get home and be with me. My guessed that the fascination with her hunky co-star George Rinard had worn off and he'd become human.\n\nBoth our movies were ahead of schedule. Crystal and I could have taken a week's holiday in the middle of filming and met somewhere; instead, we opted to push through the filming and then take our time off without the prospect of having to return to either Russia or Central America to continue our movies. I had asked her on the satellite call, \"Does what happened make you want to change your mind and come over?\"\n\nShe thought, \"Yes and no. I want to see you so badly, but I don't want to come back here after -- that would break my heart to leave you again. I think we have about three more weeks, and I'm done -- really done with this one. What do you think?\"\n\n\"I can wait it out. We'll need to do something special with each other. Think of what you'd like to do -- where we could go. Hanging around Nashville doesn't seem special, but I guess that'd be our starting point to reconnect.\" \n\nWe agreed to wait until our films were over, mostly because of the anticipation and our desire to be together for more than just a week when we were together.\n\nAs we went into the following week after the abduction, our film locale had at least fifty members of the press hanging around our film locations all the time. I felt sorry for them, but we stuck to our various plans for limited interviews and filming in the remote location. I know we were getting photographed with those huge telephoto lenses, so Jill, Claire, Ellen, and I all tried to behave ourselves in public. So did the other stars like Barry Peters and his peque\u00f1a Spanish girlfriend -- Maria. \n\nBarry talked Maria into playing in some of our swap games, and she took to them like a duck to water. Whenever we got together at the hotel Maria proved insatiable until the rest of us had each given her an earth-moving orgasm. She reminded me in many ways of Nadia, so much so that I arranged to have flowers sent to Nadia from Ellen, Claire, and me so she knew we hadn't forgotten her.\n\nMany of the women on the set made a point to flirt with me too. Besides, the ones I had to work with on wardrobe or makeup, other women came by, gave me a seductive smile, perhaps dragged a finger along my square jaw, and offered an invitation to 'visit' if I got lonely. I'd first been through something like this over a year earlier on my road trip through Pennsylvania when I'd rescued a farmer from his burning barn; the females of the home I had stayed at went out of their way to make themselves available -- an opportunity I didn't turn down.\n\nOur sex lives suffered little with the 24-7 presence of the paparazzi. The daytime bed hopping between trailers that we'd been doing slowed, as we tried to minimize someone with a telephoto lens catching one of us on the prowl. We laughed about it all over dinner, but generally once we went to work, we worked, were fully presentable, and businesslike at the work site.\n\nUnderstandably, Jill took to sleeping in our room. Four in the king-size bed seemed cramped, but the sex more than made up for the inconvenience. Jill obviously took comfort in the sex -- from all of us.\n\nI suggested to Mark that to preserve Jill's reputation, he should say something informally to the press about her mental state and her temporary need to be with friends around her to feel safe. I guess he did, because we never heard, or read anything of our cohabitation arrangements. Amazingly, the press didn't think to mention Claire or Ellen, or their relationship to me.\n\nI tried to visualize a totally innocent and sexless relationship between all of us inside the walls of the hotel room. I didn't succeed. I probably didn't succeed because whenever I tried that exercise, I recalled what we'd done the night before, or the morning before, or the afternoon before. \n\nI knew the women around me on the set had strong libidos: Jill, Claire, Maria, and Ellen; however, after the hostage taking everyone's sex drive ratcheted up a dozen notches. The four women in our circle couldn't get enough sex. This new found fascination with all-things-sexual carried over into the movie we were making in several ways.\n\nFirst, Jill wanted to fuck anything with a penis; however, she limited herself to Mark, Barry, and me, and her Sapphic interplay with the women. She'd always been willing before, but now she wanted sex about six times a day. Thus, second, we had to take breaks in filming to accommodate our lust. This called for rearranging the 'press lines' -- the areas where the paparazzi could prowl. We moved them so our motorhomes weren't in their line of sight. \n\nMark, Barry, and I talked about the prescription that would help Jill through her angst about her kidnapping. Besides trying to meet her new and improved nymphomaniac sex drive, we agreed to pull out of Nicaragua as soon as possible and to get back to Hollywood as soon as we could. He thought he could finish filming in a suburb of Guadalajara -- a more urban and civilized place than the one he'd chosen for the past month of filming. He put the wheels in motion of breaking camp. I went off and fucked Jill again.\n\n<center>* * * * *</center>\n\nGuadalajara is mostly a large sprawling city; part of it includes the small historic area of Tlaquepaque --a beautiful upscale historic, trendy shopping area of restaurants, souvenir shops, arts and crafts, and galleries. The area is undoubtedly Mexican, yet on some of the side streets you could blink your eyes and wonder which South or Central American city you were in. Travel a little closer to Guadalajara's center and you find some tenements run down and tatty, and they too could exist in any Latin American urban area.\n\nOur filming of 'Pressure Limit' took over six of the blocks in this run down area. The movie dealt with smuggling drugs and guns, the cartels, and power. I played a crusading ex-DEA agent, intent on seriously wounding the drug trade despite having been framed and pushed from the service. In the process, I'd joined forces with a sympathetic female agent -- Jill who believed in my innocence. I think I'd seen similar movies a dozen times before, yet I starred in this one so I had to 'get it right.' \n\nWe'd been filming for five months, sometimes with two or three crews working in parallel -- even in different cities. The last shots of the movie were shot in Tiaquepaque. The ultra-bad guy ends up dead -- good guys win, bad guys lose; and my character is vindicated by evidence the bad guy kept.\n\nI'd shot the start of the scene, chasing the bad guy -- the head of a cartel and king pin of all the bad things happening south of the U.S. border. The camera had followed me, through fifty or more sequential scenes, as I ran after this nefarious man: up and down stair ways, through dark alleys, behind homes, even through some houses, jumping through windows headfirst, and other daring deeds. Near the end of the chase, we ended up on a roof, racing along the peak, and jumping between buildings.\n\nOf course, this is where my stunt double Jason Lake took over for me, and one of his cohorts for the character I was chasing. At first, I worried about their longevity -- the roofs were steep and uneven; tiles broke away and made you slip on every fifth step. This looked great and daring on film, but also looked exceptionally dangerous. But then I caught on to many tricks of his trade -- hidden wires, guides, or harnesses, air bags carefully deployed on the ground 'just in case,' and other safety measures. The chase would look wild, risky, athletic, and authentic. \n\nMost of the cast and crew watched from behind the main camera as Jason gradually caught up to the 'bad man' near the top of a narrow wall seventy feet above the ground. Just as his nemesis would escape he lunged forward, tackling the man on the roof top just before he would jumped across an alley into the arms of his confederates and escaped. The two men grappled, and then 'ultra bad man' slipped to the edge of the adjacent roof with his legs and body going over the edge. He precariously held onto the edge -- a gutter of some kind, his fingers slowly slipping off his perch.\n\n\"CUT.\" Mark yelled into his portable megaphone. He yelled at me, \"OK. Jim, replace Jason up there. Cesar take over for Antonio.\" The two of us clamored up the stairs and a ladder up to the roof top as the other two men came down. My safety harness was attached; Cesar didn't need one. Two stage hands positioned us for the start of the final scene.\n\n\"ACTION\"\n\nI slid down the red roof tiles to the edge of the roof behind Cesar. He slid slowly over the edge, but he actually stood on a scaffolding that had been erected there just for this scene. We'd rehearsed the scene a dozen times at ground level, mugging the last couple of steps.\n\nAs I slid the last ten feet to the roof's edge, Cesar was holding on by his finger tips. I reached over and grasped his wrist and tried to pull him up -- to save him. \n\nHe locked eyes with me, \"You are a good man, se\u00f1or, and I am bad. I go now to meet my God, and to see exactly what this place called hell is all about.\"\n\nAs I struggled to pull Cesar up, he used his other hand to pry my fingers loose. And, then, he's gone. I am left empty handed seven stories above the ground. A sickening thud will be heard on the soundtrack when the audio editors are through with this part of the film. In reality, Cesar had only crouched down on the scaffolding out of sight of most cameras.\n\n\"CUT -- AND THAT'S A WRAP.\"\n\nMark had also filmed Cesar falling away from the camera with his arms outstretched earlier. The airbag in the drop zone was that special shade of green so it could be eliminated in the layovers. What the audience would eventually see after he drops from my hands is Cesar falling seventy feet to his death. The end of the movie is a close-up of my face, partially satisfied with the results. The credits would start rolling as I scrambled back up the roof, went downstairs in the building, and met Jill who has been waiting for me -- holding off the rest of the 'bad guy's' henchmen. We head off in the opposite direction as emergency vehicles start to scream past us to the scene of the crime lord's death. We'd done those scenes earlier in the day.\n\nMark ran out from behind the camera. He hugged me and gave Jill a big kiss. He was dancing around like the village idiot in glee that filming had been completed. Mark still had three or four months of tough work ahead of him working with the various editors to piece together this block buster. \n\nAfter some of the elation wore off, I asked, \"Can I go home now. I've got a girlfriend I haven't seen for too many months. I need to reestablish our relationship.\"\n\n\"Go. Get going,\" Mark yelled with a grin a mile wide. He pushed me to the police line that held back the crowd of tourists and the curious and then to the street where I could get in my limousine. He knew I'd already packed and had airline tickets from Guadalajara to Houston, and then to Nashville. Ellen and Claire would be going with me, and their jobs were finished too. They stood expectantly beside our limo on the sidewalk.\n\nJill came and gave me a hug. \"I'll see you in a few weeks when we start doing the road show to promote this movie. Meanwhile, go fuck Crystal -- and Ellen and Claire some more. Don't forget my pussy -- it'll be waiting for you. Oh and make some beautiful music. I love your music -- heck, I love you.\" I got the kiss of all kisses from her.\n\nI ran to the waiting limousine. Ellen and Crystal got in, we shut the door, and started rolling to the airport. We were going home.\n\nTo be continued "
    ],
    "authorname": "Romantic1",
    "tags": [
        "celebrities",
        "mfff",
        "polyamory",
        "swapping",
        "swinging",
        "movie making",
        "kidnapping",
        "rescue"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/crystal-clear-ch-07"
}