{
    "title": "Embracing the Tension Ch. 09",
    "pages": [
        "Hi guys! \n\nAlright, Rachel's seriously meddlesome, a lot more than I had originally realized she was. But considering how seriously bad Erik and Ryan are at communicating with each other, perhaps they need the \"facilitation\"? Short chapter this week, and short chapter next week to set up for the grand finale! \n\nThanks for sticking it out with me so far!! \n\nYours, \n\nHudson \n\nCopyright \u00a9 2018 by Hudson Bartholomew. All rights reserved. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the publisher except for the use of brief quotations in a book review. \n\n***** \n\nEmbracing the Tension - Chapter 9 \n\n\"Hello?\" A tentative voice, young and uncertain answered the phone. That definitely wasn't Ryan. \n\n\"Chloe?\" Erik guessed. \"It's Uncle Erik.\" \n\n\"Hi, Uncle Erik!\" The hesitation dissipated into thin air, and Erik could just imagine her bouncing up and down. \"Where are you?\" \n\n\"Tell Uncle Erik I'll be there in a minute!\" The phone picked up Ryan's voice as he shouted from afar. \n\n\"Uncle Ry says he'll be here in a minute.\" Chloe dutifully reported. \n\n\"Thanks, sweetie.\" Erik smiled into the phone, wishing he could give Chloe a hug. \"I'm in New York.\" \n\n\"New York,\" she repeated, testing out the sounds on her tongue. \"Why are you there? Why aren't you here?\" \n\n\"Because I live in New York.\" Those words had never felt so uncomfortable coming out of his mouth before. \n\n\"Oh.\" Chloe obviously didn't understand the implication. \"Come back.\" \n\n\"I will, sweetheart. I'll be there for Christmas.\" \n\n\"Oh, yay! Christmas! I love Christmas!\" \n\nErik had no doubt. What little kid didn't like Christmas? \n\n\"So, tell me, Chloe, did you go to school today?\" Erik asked. \n\n\"Yup! And we painted our families! Caesar! Come here!\" \n\nErik heard something that sounded like a cat yelping, and he wondered what kind of torture she was subjecting the animal to. Probably something only a child's mind could dream up. \n\n\"And what did you put in your painting?\" \n\n\"Mommy, daddy, me, Uncle Ry, Caesar, and you! And I drew our house in the back so everyone knows that we live together.\" \n\nA rush of emotion that Erik hadn't anticipated rushed up and hit him smack in the middle of the chest. He blinked back tears and tried to take a breath against the weight pressing on his lungs. \"You drew me?\" \n\n\"Uh-huh, you're my Uncle Erik. And Caesar, too. Even though he's Uncle Ry's cat. But he's family, you know.\" \n\n\"Yeah, I know.\" \n\n\"Thanks for keeping Uncle Erik company, Clo.\" Ryan's voice was closer now, clearer. \"Why don't you go downstairs. It's almost time for dinner.\" \n\n\"Okay! Bye Uncle Erik! Love you!\" \n\nErik tried and failed to stop the strangled sound that escaped his throat. He ran his hand over his face and leaned his head back on the couch, wishing with everything he had that the couch was in a different living room, in a different city, in a different country. \n\n\"Chloe, walk down the stairs. No running!\" \n\nThe pattering of running footsteps echoed through the phone, right before a heavy sigh, then, \"Hello?\" Ryan's soothing baritone, a salve to all the aches and pains the day threw at him. \n\n\"Hey.\" Erik put everything he felt into that one word, all the weariness and fatigue, the longing and loneliness. \n\n\"Hey.\" Ryan's response echoed back everything he needed: support, understanding, love. \"Long day?\" \n\nErik sighed. \"Every day is a long day.\" \n\n\"I'm sorry.\" \n\nHe chuckled but didn't try to stop Ryan from apologizing for something that wasn't his fault. \"I miss you.\" \n\n\"I miss you, too.\" \n\n\"I love you.\" Erik said this in almost a whisper, because to say it any louder would send him down a whirlpool of longing for things he couldn't have. The words were too powerful, and he wasn't strong enough to resist. \n\n\"I love you, too.\" Ryan was marginally louder because he was stronger; he had always been stronger. Erik knew that now. Even years ago, when it looked like Ryan was falling apart under the pressure of New York and their porn careers, Ryan was the strong one who recognized his limits and had the courage to step out before it destroyed him. Did Erik have the same courage? \n\nHe cleared his throat, but the ball of emotion remained. \"So, I'm all booked for Christmas.\" \n\n\"Great. Send me your flight details. How long are you staying?\" Ryan's voice was a little thick with emotion. \n\n\"Up on the 23rd, back on the 2nd. Is that okay?\" \n\n\"Yeah, you're always welcome here. You know that.\" \n\n\"Thanks.\" \n\nThey chatted until Ryan got called away for movie night with Chloe, and Erik dropped his phone onto the couch. He rubbed the heels of his hands into his eyes as he leaned his head back. \n\nIt was getting harder every day, this long-distance thing, feeling like he was only half-present because the other half of himself was miles away in another country. He was in limbo, not fully here and not fully there but trying to make it through each day, living for the next time they can be in the same room. \n\nAnd all the while, that conversation replayed in his mind, the one they had in the car when he had word-vomited his fears about leaving New York, and Ryan heard it all as an accusation that Ryan wasn't strong enough to cut it in the big city. Erik hadn't been thinking about Ryan when he said those words, but maybe that was the problem. \n\nRyan was happy in Toronto. Erik had seen it with his own eyes. Hell, he'd experienced it himself. And all the other friends and acquaintances who had left New York looked happier wherever they happened to settle. So why was Erik so goddamn reluctant to admit that he could have that for himself? Why was he so set on soldiering on in a city that didn't give a damn about him? \n\nBecause making it in New York is a sign of success, a sign of being at the top of his game. But what good was being at the top of his game when his heart wasn't with him? When he felt like a shell of a human, just going through the motions without knowing why? \n\nGod, he was tired. So tired. A bath. That's what he needed, a long soak in scorching hot water to sear off whatever fatigue had latched on to him and would let go. He was about to stand from the couch when his phone rang. A 416 number from Toronto, but not Ryan. Weird. \n\n\"Hello?\" \n\n\"Erik Fischer?\" A tinny, male voice floated over the phone line. \n\n\"Yes, it is. How can I help you?\" \n\n\"This is Buck Cohen from ShadowBox Films. We connected back in September at TIFF.\" \n\nThe image of a short man, bald with thick-rimmed glasses popped into Erik's mind. Yes, they had connected at TIFF. Buck had seen the documentary, and they had exchanged business cards. But when Erik had followed up with a meeting request to see how they could work together on future projects, he'd been left hanging. \n\n\"Oh, yes. Hi, Buck, how are you?\" Erik's heart sped up. ShadowBox was known for making innovative documentaries, edgy stuff that bordered on controversial. \n\n\"Good, good. Listen. When are you going to be in Toronto next?\" \n\n\"Well, actually, I'm going to be there over Christmas.\" Erik gripped the couch cushion, hoping that that wasn't too far away. \n\n\"Christmas. Perfect. I don't do Christmas. Come by the office when you're in town, 'kay? We'll chat.\" \n\n\"Uh, yeah, sure. I'd love to\u2014\" \n\n\"Great, my assistant will be in touch. 'Kay. Talk soon. Bye.\" \n\nErik stared at his phone after Buck hung up, not quite believing what had just happened. It was just a meeting, he told himself. Just one of those get-to-know-you-so-I-can-decide-if-I-like-you-enough-to-work-with-you types of meetings. It could go nowhere. He could crash and burn and get himself blacklisted for the rest of his life. But it was something, something to latch onto, a sign that all wasn't lost. At least, not yet. \n\n### \n\n\"Hey.\" Ryan kept his voice even as he spoke into his phone after seeing Erik pop up on the caller ID. He ignored the way his heart fluttered and his heart rate increased with excitement. \n\n\"Hey.\" Erik mumbled on his end of the line. \"Sorry to be calling so late. I just got home.\" \n\n\"It's fine.\" Ryan put his book on his nightstand and settled himself deeper into his pillows. Caesar, who had been curled up in his lap, grew bored and ambled off. \"I was just reading in bed.\" \n\n\"Hmm... in bed?\" A hint of interest sparked in Erik's voice. \n\n\"Yep.\" \n\n\"What are you wearing?\" \n\nRyan frowned down at himself. \"PJs?\" \n\nLaughter floated over the line. \n\n\"What? They don't have Spiderman on them or anything. Just boxers and a t-shirt. Why? What else would I wear?\" \n\nMore laughter, bubbling like a brook, tickled at Ryan, and he had to wait a moment before Erik settled down. \"You're not very good at this are you?\" \n\n\"What do you mean? Not very good at what?\" Ryan demanded in mock annoyance. \n\n\"Phone sex.\" \n\nRyan's brain short-circuited for a second while he pondered the idea of phone sex with Erik. It was hard to believe they hadn't had phone sex yet, considering how far into their relationship they were. His stomach fluttered with butterflies at the thought. \n\n\"We don't have to, if you don't want to,\" Erik said after a moment of silence. \n\n\"No, I want to.\" And Ryan did, as much as it terrified him and reminded him somewhat of porn, at least the performance aspect of it. But this was Erik and it was just the two of them; surely, he could get over this one piece of baggage? \n\n\"Are you sure?\" \n\n\"Yeah, yeah, I am. What are you wearing?\" \n\nErik was silent for a beat before he said, \"nothing.\" Gone was the laugher, and in its place was a low rumble. \n\nRyan's mouth dried at the image of Erik naked, covered only by a thin sheet twisting around his legs. Just a corner draped across his hips, obscuring the most X-rated parts of his body while the rest was on display under a warm, yellow light. In his mind, the light played off Erik's smoke tattoo, and he imagined how the twisting shades of ink would look against the crisp whiteness of the sheets. \n\n\"Oh.\" \n\n\"You're imaging me naked in bed, aren't you?\" \n\nRyan could almost feel the vibration of Erik's voice travel through the phone and reverberate against his ear. He shifted, but the smoothness of his sheets rubbed against his skin, sending tingles through his body until they congregated at his groin. He cleared his throat. \n\n\"You are, aren't you?\" The low chuckle from Erik was nothing like his earlier laugher. It was meant to entice, seduce. It worked. \n\n\"You are. I know you are.\" The confidence in those words just as arousing as the image Erik's voice conjured up. They felt like caresses over Ryan's skin. \"Mmm...\" Erik moaned into the phone. \"Tell me exactly what you're wearing.\" \n\nRyan squeezed his eyes shut and took a deep breath. When he opened his mouth to speak, his tongue wouldn't cooperate and he ended up making random sounds instead of words. He couldn't figure out if his sudden lack of vocabulary had anything to do with all the blood rushing to his dick, or with the bevy of butterflies still fluttering away in his stomach. \n\n\"Ryan?\" \n\nHe could do this. He wanted to do this, damn it. What was a little phone sex between two people who loved each other? \"Um...\" He cleared his throat again before continuing. \"Black boxers. And a red t-shirt.\" \n\n\"The soft red t-shirt? The one I wore last time?\" \n\n\"Mmhmm.\" Images of Erik in the t-shirt, the material stretched across his wider shoulders, came to mind. He had practically lived in that t-shirt the last time he was in town, always running his hands up and down the material and commenting on its softness. \n\n\"Ugh, I love that t-shirt.\" \n\n\"Mmhmm.\" \n\n\"Run your hands over the shirt. Tell me what it feels like.\" The breathiness of Erik's voice tickled at Ryan's ear. \n\nRyan ran a hand over his chest as instructed. \"Um, it's soft?\" \n\nErik scoffed lightly over the phone. \"Tell me how it feels.\" \n\n\"It's uh... It's...\" Nothing seductive or tantalizing came to mind, and Ryan simply burst out in nervous laughter. \"Sorry, sorry.\" Ryan apologized when he regained control of his giggles. \"Let's try again?\" \n\n\"I'm not sure this is a good idea.\" Erik sighed with a touch of amusement. \n\n\"No, no, I want to. Let's try again.\" \n\n\"Okay.\" Erik agreed, though he didn't sound as sure of himself as he had a moment earlier. \"Forget the shirt; take it off.\" \n\n\"Hold on.\" Putting the phone down, Ryan stripped his shirt off and threw it at the foot of his bed. \"Okay.\" \n\n\"Shirt off?\" \n\n\"Yes.\" \n\n\"You're lying on your pillows?\" \n\n\"Yes.\" \n\n\"And your lamp is on? The one next to your bed?\" \n\n\"Yes.\" \n\nErik sighed into the phone, and Ryan imagined he could see the hungry look that blurred the clear blueness of Erik's eyes. \n\n\"God, I want to touch you so badly.\" The words came out almost as a groan, the sound rippling over Ryan's nerves. \"I want to run my fingers down your body and trace your abs. Then I'd lick them, every single one. I want to taste the saltiness of your skin on my tongue.\" \n\nRyan tensed his stomach as if Erik's tongue were indeed dipping into every ridge, lapping at the muscles. His breath hitched as he imagined Erik's tongue delving into his belly button. A muted moan escaped his throat. This was so much easier when Erik took control. Most of their physical relationship was like that, Ryan shouldn't have been surprised that it translated into phone sex, too. \n\n\"You like that, don't you?\" \n\n\"Mmhmm.\" \n\n\"I want to feel you under me. Bare chest against bare chest. I love the way you feel, naked in my arms.\" \n\nRyan loved it, too, being pressed into the bed with Erik on top of him\u2014all that hard, toned muscle. Running his hand across his chest, he closed his eyes and remembered Erik's weight; it was one of his favorite things about being in bed with Erik. \n\n\"I miss kissing you so much. You have the softest lips I've ever kissed. And your beard; have I told you how much I like your beard?\" \n\nErik had, multiple times, as he rubbed his smoothly shaven check against Ryan's hair-covered one. It tickled whenever Erik did that, but Ryan loved the idea of them rubbing their faces against each other. \n\n\"Oh...\" A teasing tone wove its way into Erik's voice. \"Do you know what I see?\" \n\nRyan forgot to breath as his entire attention turned to what Erik was suggesting. \n\n\"You do, don't you?\" \n\nAll Ryan could muster was a moan. \n\n\"That goddamn earring. I love playing with it. You know why? Because you come completely undone in my arms when I'm sucking on that earlobe. God, I can just imagine it. Can you?\" \n\nNeedy whimpers escaped his throat, and Ryan was helpless to stop them. Almost as if Erik was in the bed with him, on top of him, licking at his earring, Ryan felt tendrils of fire snake from his ear down through his body, igniting every cell along the way. Gripping his phone with one hand, and his sheets with the other, Ryan arched up, looking for the solid mass of Erik to push him back down, but found nothing. \n\n\"Ahh...\" Ryan's strangled cry echoed into the phone. \n\n\"Are you hard for me, babe?\" Erik's words came in pants, breathed directly into the phone. \"'Cause I'm so hard right now. Fuck.\" \n\n\"Mm... Erik...\" He was hard, and yet, something was missing. \n\n\"Are you touching yourself yet? Touch yourself, babe. For me.\" The command was growled, low and demanding, and Ryan didn't think of disobeying. \n\nHis dick ached in his black boxers, a sizable wet spot already staining the fabric. Ryan squeezed his bulge and rocked his hips as if Erik was there to grind against. Except he wasn't. \n\n\"Oh, yeah. I love the sounds you make, babe, whimpering like that. So fucking hot.\" \n\nThe encouragement only made Ryan whimper more for what he lacked. \n\n\"Stroke yourself. Nice, long, tight strokes.\" \n\nPushing his boxers down his thighs, Ryan took his cock in his hand, the length and girth of it familiar. Using his thumb, he swiped at the tip where precome had gathered and spread it around, using it to ease the glide of his palm. \n\nOver the phone, Ryan heard Erik's breath quicken. \"Oh, god, Ryan. Can you feel my hand on you\u2014in a really tight grip? Twisting at the head?\" Erik's voice cracked as a moan pushed its way through. \n\nOn his side of the phone, Ryan mimicked Erik's movements, tightening his grip and twisting his hand around the head of his cock. He gasped at the sensation. \"Ah, Erik!\" \n\n\"Fuck.\" The word was bitten out between heavy pants of air blown into the phone. \"Switching to speaker.\" \n\nRyan heard some fumbling before Erik was back, the sound echoing a little more than before. He quickly followed suit, putting the phone on the pillow next to his ear. He turned his face into the pillow, imagining he was pressing his cheek against Erik's instead. \n\n\"What are you doing now? Tell me what you're doing, babe.\" \n\n\"I'm jacking myself,\" Ryan whispered, a flush of heat flared in his body, and his head felt dizzy. \"Cupping my balls.\" \n\n\"Yes.\" Erik moaned. \"So am I. Roll those balls around, tug at them. Shit. Fuck.\" \n\n\"Fuck, fuck, fuck.\" He found himself muttering as an orgasm built inside him, as strong as it usually was with Erik, but somehow empty. \n\n\"Ah, fuck, Ryan. Fuck. I'm so close, so close.\" \n\n\"Erik...\" He filled his voice with all the longing he felt. \n\n\"Rub your perineum, babe. Rub it. I want you to come with me.\" \n\nRyan cried out as he sneaked two fingers back and did as Erik instructed. He pressed toward his prostate, sending sparks exploding through his body. \"Ahh!\" He cried. \n\n\"Oh, god, Ryan, I'm coming. I'm coming, Ryan. Fuck!\" \n\nThe line grew eerily silent, and Ryan imaged Erik's body arching as his orgasm overtook him, all his muscles standing in sharp relief, straining at the intensity of sensations. \n\nAn extra rub on his taint, a tight squeeze around his cock head, and Ryan followed Erik off the cliff. \"Ah, Erik!\" \n\nHe drew out Erik's name as the rush of his orgasm hit him, and he painted himself in his own come. The sound of blood rushed past his ears as his heart thudded its staccato beat, blocking out all other sounds. Ryan panted through the strength of his orgasm, and as he came down from the high, the air quickly cooled and his semen became sticky on his skin. \n\nNow would normally be the time when Erik buried his face into the crook of Ryan's neck and Ryan would wrap his arms around those wide shoulders. And the two of them would hold each other as their hearts settled into a normal rhythm. But Erik wasn't there, and Ryan had no one to hold. Was it pathetic that he wanted to cuddle with his phone? \n\n\"Babe?\" he whispered. The phone still showed an active call. \n\n\"Yeah, I'm here.\" Erik's voice was groggy, the way it always was after sex. But Ryan could hear a little something else in there; it was the same achy, empty feeling Ryan felt. \n\nHe sighed. \"I miss you.\" \n\nErik responded with his own sigh. \"I miss you, too. So fucking much.\" \n\nHow much longer could they do this? \n\n### \n\nErik's arms strained as they hefted his heavy suitcase up the last stairs to Ryan's apartment. Heavy with all the gifts he had brought for Ryan's family. He may have gotten a little carried away with the gift shopping, but one purchase had led to another, and something about retail therapy and the prospect of having a real Christmas with a loving family had turned him into a bit of a maniac. He didn't regret a second of it. \n\n\"Hey.\" Ryan's arms sneaked around his waist as he settled his hands on Ryan's shoulders. \n\n\"Hey.\" They smiled at each other for a moment before leaning in for a quick peck on the lips. \n\nThey had developed a bit of a ritual by now. The first several hours after Erik arrived would be spent on the couch, Erik nestled in Ryan's arms, Caesar somewhere within petting distance. They would soak in each other's presence, the touch of each other's hands, the scent of each other's skin. And slowly, with the passing of each minute, their realities would realign, almost like a blurry camera lens snapping back into focus, and they would remember how to be in the same space again. ",
        "\"I'm suspicious of what's in that giant suitcase of yours.\" Ryan said, nodding at the largest piece of luggage Erik owned, sitting just inside the door. \n\n\"What's there to be suspicious about?\" \n\n\"I said you didn't need to bring gifts for everyone.\" \n\n\"And I told you I like giving gifts.\" \n\nRyan grunted, and Erik couldn't help the laughter that bubbled up from somewhere deep inside. \"How come you don't have a tree up here?\" \n\nRyan shrugged. \"Too much work. Besides, I do all the Christmas stuff downstairs anyway, so...\" He shrugged again. \n\n\"Can I put my presents under the tree then? You guys do that, right?\" Erik moved to get up from the couch, only to have Ryan pull him back. \n\n\"Yeah, but it can wait.\" \n\nErik's objection was silenced with Ryan's lips on his, then Ryan's tongue sliding into his mouth. And suddenly putting the gifts under the tree didn't seem quite as urgent as it had before. \n\nThe kiss was lazy, Ryan's tongue swiping at his and his swiping back, gentle nips of teeth and tugging on lips. There was no hurry, no rush and Erik let himself sink into the kiss, absorbing as much of Ryan into his heart as he could. With each passing minute in Ryan's arms, Erik felt the bone-deep weariness of life melt away, replaced with a refreshing sense of satisfaction and completeness. This is where he belonged, where he was made whole, with Ryan yes, but it went beyond that. \n\nEvery time he landed in Toronto and Erik took that first step off the plane onto the jet bridge, it was like a weight lifted off his shoulders. He felt free, more at ease, and his steps felt lighter, quicker. It happened every single time, and while he had previously brushed it off as the ease of vacation, this time Erik wondered if there was something more. \n\nThey shifted on the couch, now lying side-by-side in the narrow space with Erik perched right on the edge and in danger of falling off. But he knew he was safe. Because Ryan's arms were around him, holding him fast, drawing him in to safety. Erik threw his thigh over Ryan's hip and snuggled in closer. \n\nEvery time he went back to New York, he had to steel himself as the plane descended into the airport. The minute the seatbelt sign went off, it was like the starting gun of a race had sounded and he was off in a mad dash. He could never figure out where the urgency came from; he was usually just going home. But it was there just the same, just as it was there when he walked down the sidewalk or hopped onto the subway, like every step was a battle, and life was a war. \n\nThey fell asleep on the couch together. And when Erik opened his eyes next he was alone, covered in a blanket. He stretched the ache out of his muscles and sat up to find Caesar sitting on the coffee table watching him. \n\n\"Hey, Caesar...\" He tried to keep his tone light. God knows what the cat was thinking behind those creepy intelligent eyes. \n\nCaesar flicked his tail, lifted his head arrogantly and stalked off without a backward glance. Standoff averted. \n\nErik went in search of Ryan but didn't find him anywhere in the apartment. His suitcase still sat where they'd left it when they'd gotten back from the airport, so he moved it into the bedroom and opened it to pull out the presents. He was going to have to make multiple trips downstairs, unless... \n\nWith a small pile of his clothes and toiletries laid out on the bed, Erik dragged the still mostly full suitcase down the stairs. The door to Rachel and Tom's apartment was open; the Christmas tree was right in front of the big window overlooking the street and visible from the front door. Voices drifted from the kitchen at the back of the house, one male and one female, but not loud enough for Erik to overhear the conversation. He went ahead and stuck his presents under the tree; there were already quite a few there. Then, leaving his empty suitcase by the door, he ventured back to find the source of the voices. \n\n\"How long are you going to go on like this?\" That was Rachel, and Erik stopped just out of sight of the doorway, some instinct telling him to wait. \n\n\"What do you mean?\" Ryan asked. It didn't seem like they had heard him in the living room. \n\n\"I mean, you guys are obviously crazy about each other. But you live here and he lives in New York. You've already told me you're not moving back there, so when are you going to ask him to move here?\" \n\nErik's heart dropped into the pit of his stomach. He wanted to run away. He wanted to go in there and demand that Rachel stay out of their personal lives. But instead, he stood rooted to the spot. Eavesdropping. \n\n\"I never said I'd wouldn't move back to New York.\" Not that Ryan sounded very convincing. \n\n\"You're kidding, right?\" Something heavy, maybe a coffee mug, thudded on a hard surface. \"You've pretty much implied it up and down. You're honestly going to tell me you're willing to go back there?\" \n\nThe silence that followed was so typically Ryan shutting down and backing away from something difficult. \n\n\"Ryan, seriously. You can't go back there.\" \n\nRyan mumbled something under his breath that Erik couldn't catch. \n\n\"So then, tell him to move here!\" \n\n\"I can't.\" A chair scrapped against the floor, and Erik tensed, but neither one in the kitchen had moved toward the doorway. \n\n\"Why not?\" \n\n\"Because his work is there. Besides, if it's not okay for him to ask me to move to New York, why would it be okay for me to ask him to move here?\" Ryan\u2014always the academic. \n\n\"Because Toronto's not a soul-sucking city like New York.\" \n\nErik gritted his teeth, but he had to admit that Rachel had a point. \n\n\"And can't he do the same work here? I mean, Toronto's got a thriving film industry, doesn't it? There's TIFF!\" \n\nIt was a simplistic argument but not one that Erik could disagree with. There was a decent film industry in Toronto. But moving to Toronto would definitely be considered a step back\u2014not suicidal to his career, but certainly not moving forward. \n\n\"Rach...\" Ryan sighed heavily. \"I can't ask him to come. What if he comes and then he hates it? It would be my fault, and I can't do that to him. If he wants to move up here, he's got to have to want to do it himself.\" \n\nErik bit his lip before the weird jumble of emotions rolling around in the pit of his stomach came spilling out. He eased quietly away from the doorway, sneaked back upstairs, and headed straight for the bathroom. Leaning over the toilet, he breathed through the sudden urge to hurl. What was wrong with him? When the nausea subsided, he sat back against the wall, arms propped up on his knees in front of him, head tilted back and stared at the ceiling. \n\nIt always came back to the same question: would he move to Toronto? It was like their entire relationship centered on his answer to that question. The problem was, he didn't know what his answer was. \n\nHe loved Ryan. With everything inside of him. And he knew that Ryan loved him back. But was that enough for him to pack up his life in New York and move to a different country? He didn't know. On the surface, it made all the sense in the world, but still there was that clawing, grasping feeling that held him to New York when the city's appeal was dying with each passing day. \n\nHe rubbed his hands over his face. He didn't know what to do. And if Ryan meant what he had told his sister, the decision would have to be Erik's to make."
    ],
    "authorname": "hudsbart",
    "tags": [
        "toronto",
        "new york",
        "christmas",
        "long distance",
        "phone sex",
        "gay male",
        "romance",
        "porn stars"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/embracing-the-tension-ch-09"
}