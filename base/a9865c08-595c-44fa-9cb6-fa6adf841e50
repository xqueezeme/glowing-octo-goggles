{
    "title": "The Fenyx Lounge",
    "pages": [
        "This is my last minute entry for the Literotica Nude Day contest. I was a little late getting to the party and had to write this one a bit quicker than I would have wanted. I hope you enjoy the little jaunt into my perverted mind.\n\nA quick, grateful thank you to my editor, Skye4Life, for editing this on short notice.\n\nThis story contains accidental, and intentional incest, as well as exhibitionism.\n\n*\n\n\"Do you guys know of any place that's hiring?\" I asked as I slid into a bar-stool next to my friends.\n\n\"What, did that big promotion fall through?\" John asked from beside me as he sipped on his beer.\n\n\"Sort of.\" I sighed, holding up a finger to signal the bartender for a beer. \"You remember that blonde chick from my office that I showed you a pic of? Well I fucked her, and the whole thing was caught on surveillance.\"\n\n\"Did you get a copy of it?\" Mark asked, leaning forward to see me from the other side of John.\n\n\"No,\" I said flatly, ignoring his usual one-tracked mind. \"I got fired.\"\n\n\"You should have asked for a copy,\" Mark said taking a swig of his beer. \"Hello, severance?\"\n\n\"You know,\" I said with a snarky tone. \"I had more pressing things on my mind, like how I'm going to pay my rent without a job.\"\n\n\"You know what you should do,\" Mark continued. \"get a job over at the Fenyx lounge. They pay dudes big bucks to fuck chicks on a stage.\"\n\n\"That's just a myth,\" I told him. \"People have been whispering that for years.\"\n\n\"No myth bro,\" he said before lowering his voice conspiratorially. \"I've seen it. Two people were on the stage, wearing nothing but these masks, and this dude just went to town on her.\"\n\n\"And how the hell did you get into the Fenyx?\" John asked, just as much disbelieving as I. \"That place is so exclusive, you have to know somebody who knows somebody, and then you have to have a seven figure bank balance just to apply for membership.\"\n\nJohn wasn't exaggerating. The Fenyx was the most exclusive club in town. It was all for stupidly rich socialites, and what went on behind those doors since their founding had been a closely guarded secret. There were rumors of course. Some claimed they had live sex shows, two strangers wearing nothing but masks, paid to fuck for their entertainment. Other rumors said that they were Satan worshipers and conducted secret rituals they didn't want anyone to see. There were many more theories, but the Satan thing was the most believable.\n\n\"The owner of my company took me last week,\" Mark claimed quietly. \"I closed a huge account with West Coast Medical that everyone had been gunning for. It was his way of saying thank you.\"\n\n\"So you're saying you went and saw a live sex show at the Fenyx last week, and we're just now hearing about it?\" John asked eyeing him. \"I call bullshit.\"\n\n\"Me too,\" I nodded. \"Hey John, do you think you could get me a part time gig working at the warehouse or something?\" I asked, pulling away from Mark's delusions. \"Anything is better than nothing right now.\"\n\n\"It's not bullshit,\" Mark persisted over me. \"I didn't say anything because I knew you fuckers wouldn't believe me. I guess I was right.\"\n\n\"If you told us right away, we still wouldn't have believed you,\" John said shaking his head.\n\n\"In the words of our fallen forefathers, screenshot or it didn't happen,\" I said, taking a long pull from my beer.\n\n\"Fuck you, cock gobblers,\" Mark shot, looking offended. \"I would have taken pictures, but they don't let people bring in their phones.\"\n\n\"A likely story,\" John continued, screwing with Mark even further.\n\n\"I'm with John, buddy. Besides, how would they even find people to do that?\" I asked skeptically. \"Just post an add in the paper? Craigslist? You know, 'Looking for desperate people to fuck on stage? Fatties need not apply?'\" I asked, unable to control my laughter towards the end.\n\n\"They have a job posting on their website. It's all vague and shit, something about performers, or entertainers...\" he countered, ineffectively.\n\n\"Whatever, losers,\" I said pounding the last of my beer. \"I'm out. I gotta help Krista move the rest of her shit before it gets too late.\n\n\"You just got here!\" Mark exclaimed.\n\n\"I could only stay for one drink,\" I said.\n\n\"You are so whipped, and you're not even getting any,\" Mark ribbed, trying to gain back some of his dignity.\n\n\"That's my sister dude, gross,\" I said standing and pulling some cash from my wallet and tossing it on the bar.\n\n\"The only thing that's gross, are the things I would do for just the chance with her,\" Mark said wishfully. \"Now that she's left that douche-bag, do you think you could put in a good word for me?\"\n\n\"Not gonna happen,\" I said turning to walk towards the exit. \"Let me know if you find something for me John.\"\n\n\"Will do buddy,\" he said while Mark continued over him.\n\n\"Come on man, it doesn't even have to be a good word,\" he shouted after me. \"Any word! So long as you reminder her that I exist.\"\n\n\"You do realize how pathetic you sound...right?\" I heard John say to him just as I stepped outside.\n\nThis wasn't anything new. Growing up, all of my friends tried to get me to hook them up with Krista. She was very pretty I guess, but there was just something I was missing with her being my sister and all.\n\nFishing my keys from my pocket, I climbed into my truck and drove to the other side of town where Krista's old place was. The whole ride I thought about how I was going to pay my rent without a job. I hadn't exactly been sensible with my finances over the last two years.\n\nI'd gotten an amazing job as a claims adjuster for an insurance company a couple years out of high school, and it paid extremely well. Having all of that money coming in, I got my self a nice apartment downtown, and bought a brand new truck. It had been easy to pay for them, and have fun whenever I wanted. Now that my job was gone, and with no savings, I was left in a difficult spot. I didn't even have the safety-net of my parents basement anymore since they decided to retire to Florida last year.\n\nAs I pulled up in front of a nice little house in the suburbs, I shook those thoughts out of my head. Everything will be fine, I thought to myself. I put on a tough face, walked up the path, and knocked on the door.\n\n\"Hey Kris,\" I said as my sister opened the door for me.\n\n\"Hey Sean,\" she said, her usual warming smile nowhere to be found.\n\nShe looked tired, and her eyes had a hint of redness, more obvious from her lack of makeup. Her long honey blonde hair was in a pony tail, and she was dressed down in a pair of faded, cut-off shorts, and a somewhat transparent tank top with a pink and black sports bra peeking out. It was unusual seeing her not all done up.\n\nAfter they'd gotten married, Chad convinced her to quit her job. He made enough money for the both of them, and was actually being a real gentleman. Kris had taken that free time and put it all into making a home for them, and making sure that she looked her very best in every way. Nails, hair, and makeup always done, wearing a perfectly coordinated outfit that showed off the body she worked so hard to maintain. It had been a long time since I'd seen her at anything less than her absolute best.\n\n\"Is he here?\" I asked.\n\n\"No, he's at her house right now,\" she said, turning sideways to let me in. \"I think he's avoiding you just in case you decide to kick his face in.\"\n\n\"I would say he's a smart man, but he cheated on you,\" I said, surveying the clutter of boxes spread out across the living room. \"We're definitely not working with the mind of a genius here.\"\n\n\"Thanks,\" she muttered. \"Most of my stuff is just in here,\" she gestured. \"All of these boxes, that lamp, and the sofa. The bed is mine too, but I've already bought a new one. There's no way I'm sleeping in that again.\"\n\nIt wasn't an overly large amount of stuff to move, but with my truck, it was easily a full load. I hated helping people move, especially since I was the only one of my friends with a truck. I was constantly being asked to help move sofas, or the entire contents of peoples apartments. This was my sister though, and it wasn't like I had a busy schedule right now.\n\n\"Alright,\" I sighed, \"let's get to it.\"\n\nIt took the better part of three hours to load up all of her things, and drive it across town. It was rather depressing. She hardly spoke a word the entire time that didn't include instructions. Even on the drive to her new apartment she was uncharacteristically quiet. The only thing that could be called a high point was when I convinced her to take the mattress. It was hers, just because she didn't want it didn't mean it should be his gain. Half way between her old place and her new apartment, we stopped and chucked it into a filthy ally. Enjoy sleeping on a box spring, asshole.\n\nI understood her withdrawn state. She had been dating Chad since her freshman year. They'd been high school sweethearts, and we'd all been sure they would be together forever. Sure, they had their on and off moments, but as far as I saw recently, they had been solid. A little over a year ago they had even made it official, and gotten married. That was all over now.\n\nI didn't get a full accounting of all the details, but from what I gathered, he had been cheating on her off and on with the same girl. Someone we knew from school, and who used to be good friends with Krista.\n\nSeeing her look so beaten down like this was frustrating. I didn't really know what to say to make her feel better either. I'm a guy. If it was Mark or John who'd just had a bad break up, I would've taken them to the strip club or a bar and tried to get them laid. What was I supposed to do for my sister though?\n\nIt was around nine o'clock when we got all of her things upstairs into her new apartment, and with all the heavy lifting finished I felt awkward and out of place.\n\n\"I think I'll take off and let you get this all sorted,\" I said looking around, anxious to get away from the depression permeating the air.\n\n\"Nonsense, you helped me move, the least I can do is feed you, and get you something to drink,\" She offered, giving me a forced smile. \"How does pizza and beer sound.\"\n\n\"Like the go to payment for anyone who has ever asked someone to help them move?\" I quipped.\n\n\"Good!\" she replied, her smile growing by a hair.\n\nForced or not, it was the first smile I had seen on her in days. It made it hard to just walk out on her. So I stuck around and shared some pizza and beer. It was still painfully quiet while we waited for our food to arrive, but once we got through our first couple of beers, Kris was talking again, and almost enough for the both of us.\n\n\"...and she thought that perm was a good idea,\" She gave a light laugh. \"Who gets a perm on purpose anymore? It's not the eighties!\"\n\n\"Yeah,\" I agreed, only listening with half an ear. I couldn't help but let her girl gossip wash over me while my own problems fought for my priority brain power.\n\nKrista was quite for a moment, twisting her beer bottle nervously before opening her mouth again. \"I hate to ask, but is there any way you could loan me some money?\" she asked, looking pained that she even needed to ask. \"I would totally pay you back, just as soon as I start working again.\"\n\nI sighed heavily, feeling lousy, \"If you need groceries or anything like that, I could loan you a few bucks, I don't want you to starve, but that's all I can manage right now. I wish I could help more, but I sort of lost my job today.\"\n\n\"What? What happened?\" she frowned, sitting up. \"I thought you were supposed to be getting a promotion.\"\n\n\"I...did something I shouldn't have,\" I said, not wanting to tell her what really happened. \"I'm really sorry, Kris.\"\n\n\"It's alright. It'll be really tight, but I think I can manage,\" she fought a grimace from her face. \"You did something you shouldn't have? That's rather vague,\" she said, looking curious as to what I might be hiding. \"What could you have done that you wouldn't tell me?\"\n\n\"You know, if you're really hard up for money, you can always get a job at the Fenyx Lounge,\" I said jokingly to change the subject. \"Mark says that they pay big bucks for performers.\"\n\n\"Mark would,\" she scoffed. \"Everyone whispers about that crap. He's the one to believe them.\"\n\n\"He said he's seen it,\" I said, glad that I had successfully diverted her from the reason for my joblessness. \"Last week. Said his boss took him.\"\n\n\"Whether what they say is real or not, I'm not that desperate,\" she gave a forced laugh before adding wryly, \"Thanks for offering your sister a chance to prostitute herself though!\"\n\n\"I didn't mean it for real,\" I apologized. \"That place's just been on my mind since Mark said something earlier.\"\n\n\"Been on your mind huh?\" she asked, looking at me skeptically. \"Thinking about giving it a go? Little bro is going to venture into porn?\"\n\n\"Hell no,\" I said. \"I'm not that desperate either. I still have like three weeks until my rent is due, and once I get a new job I'll be fine. Besides, I still think Mark's full of shit.\"\n\n\"I can't believe you're friends with that guy,\" Kris said shaking her head. \"He used to offer girls mustache rides when we were in high school,\" she said shivering.\n\n\"Oh,\" I said, \"Speaking of Mark, he wanted me to put in a good word for him, you know, since you and Chad are done.\"\n\n\"Are you going to?\" she asked, leaning forward to pluck another slice of pizza from the open box on the coffee table.\n\n\"For Mark?\" I laughed. \"Hell no!\"\n\n*** *** ***\n\nBy the time the pizza was gone, so was the beer. It was way past late when we finally shut it down, and I ended up passing out on her couch rather than risk driving home. After seeing Krista laughing and smiling while we talked, I realized toughing it out for her was worth it to help her feel better, even if it just was for a few hours. When I finally woke up, there was a note on the coffee table, telling me that she gotten an early start on her job hunt, and to lock up on my way out.\n\nWhen I got back to my own place I decided to begin my own job hunt. I had to start sometime, and the sooner the better. I'd rented this apartment when I was flush with income from a good paying job, now I was wishing I had been better at saving my money, as apposed to spending it just as fast as it came in.\n\nI posted my resume to a bunch of sites online, and applied to over a dozen places around town, but after a week, I hadn't heard from anyone and I was beginning to worry. I had rent coming up, and my car payment was already past due.\n\nI had been sitting at my computer for four hours straight one afternoon, refreshing my email over and over, like some kid with his first MySpace account, when I found myself navigating over to the Fenyx Lounge web page. Sure enough, Mark was right on at least one point. They had a running ad looking for new talent to perform live on Saturday nights. Curious, I clicked on the link, and I was brought to an application form.\n\nThe form was pretty straight forward. It asked for sex, height, weight, email address, and then there was a place to upload a photo of yourself.\n\nIt seemed rather innocent. Nothing mentioning sex at all. The only suspicious thing was the complete lack of details regarding what kind of performers they were looking for, as well as there not even being a field for a name. Curiosity still tickling me, I filled it out and hit submit. What could it hurt, right?\n\nLess than two hours later I heard the chime from my email alert. Thinking I was finally getting a response to my resume, I rushed over to check it. It wasn't. It was an email from the Fenyx, asking if I would come in for an interview. Not exactly the job interview I was hoping for.\n\nI knew I could have used the money, but I didn't even know for sure what I would be performing. If Mark was telling the truth, could I really go and have sex with a complete stranger for the entertainment of others? I wasn't a bad looking guy, and my cock was nothing to be ashamed about. It wasn't that I was super shy or anything, but I just believed that sex was more of a private affair. Funny right, coming from the guy with his own surveillance camera sex tape. Unsure, I closed the email and decided to call it a night.\n\nI left the message in my inbox for two days before finally responding. I still hadn't received any results on my other job posts, and despite what I'd told Krista, I was feeling a little desperate. I needed the money, and it was time to suck it up. I replied back, and in short order a time was set for me to interview the following day.\n\n*** *** ***\n\nThe Fenyx Lounge was located just outside of the bustling downtown, only a short mile away from the towering skyscrapers. It was a fairly large stand-alone building made of old red brick and steel with the windows blacked out. The only thing signaling that this was the right place was the large stainless steel cut-out of a bird of fire situated on the wall above the large double doors. At night, orange lights from behind it would glow and undulate, making it come to life.\n\nI fidgeted with my phone as I stood outside the doors waiting. The parking lot was barren this time of day, the doors locked up tight, and I was just thinking that the person I was supposed to meet had forgotten I was coming, when right at 11am the door opened and there stood a cute, compact little red head in a business suit and heels.\n\n\"Hi, I'm Sean,\" I told the lady as I reached out to shake her hand.\n\n\"Please, keep your name to yourself. It's better that way,\" she smiled as she shook my hand. \"You can call me Cindy. Please follow me, and don't wander.\"\n\nJust inside the front door was what looked like a series of Post Office Boxes on either wall. Cindy opened one and asked for my phone. After placing it inside, she closed it and pulled a numbered key from the box and handed it to me, explaining their strict policy about cellphones on their premises.\n\nWithout another word, she turned on her heel and lead me into the empty club. I felt kind of like I was walking into Area 51. In our city, there was just as much mystery about this place as the other, and it seemed as if I might finally be getting a peek behind the curtain.\n\nIt looked exactly as I expected, and at the same time, not. Everything inside looked expensive, but at the same time, ordinary. I had imagined the decor might be a bit perverse, especially back when Satanic Cult was my prevailing theory. Now that I was sure that Mark was telling the truth, I expected something more...sexual...deviant, but there was nothing like that. Dark wooden tables, and chairs with rich velvet cushions sat atop a massive floor of expensive tile, all focused on a stage at the far end that reminded me of an opera theater, complete with a small rounded balcony on either side. There were two bars that I could see, and every bottle on every shelf was the good stuff. It looked like an ordinary night club, but for people that had more money than they knew what to do with.\n\nI tried to take in as much as I could without looking too obvious while I followed Cindy. She lead me straight through the club and to an office around the back of the stage. Once inside, she sat in a chair behind a desk, and gestured toward the space in front of her. There was no chair, so I found myself standing awkwardly as she looked on.\n\n\"Before we get started, I'll need you to sign this,\" she stated, sliding a sheet of paper toward me across the desk. \"It's a non disclosure agreement. Basically, it states that neither you, nor the Fenyx lounge, will discus the nature of your employment. In layman's terms, you were never here. We never hired you for any purpose, and you don't know anything that might or might not be happening inside the Fenyx Lounge.\"",
        "\"Okay...\" I said nervously as I scribbled my signature.\n\n\"Now that that's out of the way,\" she smiled. \"As I'm sure you've heard, or you wouldn't even be standing here, we provide a very special sort of entertainment. Two individuals, mostly one man and one woman, have sexual intercourse on stage for our members to watch. It's all rather sordid, but who doesn't like a good show?\" she asked pointedly with a mischievous little smile curving her lip. \"Now strip.\"\n\n\"Excuse me?\" I asked.\n\n\"I need to inspect the car before we're going to buy it,\" she smiled sweetly, resting her elbows on the table as she leaned forward. I had the distinct impression that she thoroughly enjoyed her job.\n\nIt made a sort of sense, they wanted to make sure I was attractive enough for their members. I guess my no fatties comment had been spot on.\n\nI tried hard to fight back my blushes as I awkwardly disrobed in front of her. It wasn't my first time undressing in front of a girl, but knowing that I was being assessed like a prize horse for sale was a little unnerving. I was about to stop at my boxers until a hand gesture from her along with an expectant look made me slip those off as well.\n\n\"Not bad,\" she smiled, standing up and moving around the desk to get a better look at me. \"Not bad at all.\"\n\nI felt like a piece of meat as her soft hands slid along my skin, feeling her way along my muscles as she circled me to get a full look. She would pause every so often to trace the lines of my muscles, or squeeze to see how firm I actually was.\n\n\"So how big does it get?\" she asked, suddenly cupping my shy, semi hard cock. \"We don't want some shrimp dick.\"\n\n\"It's...big enough,\" I said nervously. I had never suffered performance anxiety before, but the whole situation I was in, and the blas\u00e9 way she was treating me, was preventing the blood from surging to my cock.\n\n\"Do you not find me attractive?\" She frowned slightly as she continued fondling me, only managing to to coax some small bit of life into my cock. \"Are you gay? I don't mind if you are, but our members are going to expect you to fuck a girl for them.\"\n\n\"I'm not gay,\" I blushed. \"This is just a little...awkward,\" I finished, trying to focus my energy on raising my flag.\n\nClosing my eyes, I tilted my head back, taking calm, even breaths as I blocked everything out and I tried to will myself to harden. After a moment I jumped, letting out a small gasp as I felt a pair of warm lips replace her fingers. My eyes shot open immediately and when I looked down, Cindy was on her knees sucking my flaccid cock into her mouth. She swirled her tongue as she applied the perfect amount of suction, and in no time I felt myself growing for her.\n\nIf I knew nothing else about her, I knew she had a talented mouth. In less than a minute, she had me throbbing as she choked on my cock, trying and failing to force it all down her throat. Just before I was about to cum, her lips slipped from around me and she rocked back onto her feet and stood up.\n\n\"That is one fine looking cock you've got there,\" she smiled, catching her breath as she dabbed some spit from her chin delicately. \"They'll be able to see that thing all the way in the cheap seats. I almost wish I was going to be on stage with you,\" she smiled cheekily as she walked around her desk. \"You can put your clothes back on. You've got the job.\"\n\nThe way she blew me so casually, and then stopped, and now treating it as if it was a matter of business gave me whiplash. Realizing that she had no intention to let me finish, I bit back a pained groan before reaching down for my clothes. With her eyes still uncomfortably on me, I quickly dressed, stuffing my aching cock back into my pants.\n\nI don't know what she did to me with her mouth, but even as I buttoned up my shirt, I still felt like I was teetering on the edge of blowing my load. As I stomped my feet into my shoes, Cindy pulled out a sheet of paper from a folder, and scribbled something on it before holding it out for me.\n\n\"This Saturday, you will arrive here at 8pm sharp at the rear entrance. It's the red door. Do not be late.\" She said sternly holding my gaze. \"Your pay will be five thousand dollars. If your performance exceeds our expectations, you may receive a bonus. Make sure you shower and shave before you arrive. There is a list of grooming details on the back of this. You will also need this paper in order to be let past the doorman. I look forward to seeing your work.\" she smiled, nodding to the door.\n\nI felt strange. My emotions kept jumping around the entire way home. I was shocked that I would be doing this, relieved that I would be able to make my rent and car payment this month, grateful that I would also be able to give Kris some of the little help that she asked for, excited that I would be banging what was sure to be a grade A hottie, and nervous that I would have to do it all in front of over a hundred people. My mind couldn't hold onto one emotion for more than a few moments before jumping to the next, and it was a bit exhausting.\n\nThe next few days were equally the same. I would wake up in the morning and everything would feel normal, but the moment I remembered I was currently jobless, I remembered what I was going to be doing and it would start all over.\n\nI thought about weird things, like if I should be jerking off as much as I could to try and build up some last minute stamina, or if I should rub one out right before the gig so I would be sure not to cum too soon. But then again, it was kind of like porn...well, exactly like porn, you didn't watch all the way to the money shot just to see some dude squirt off a couple of drops. They would want to see a big finish, wouldn't they?\n\nAny time I wondered if I was really prepared to do something like this I would look at the past-due notices that I had collected on my counter. Gas, electric, my truck...all waiting to be paid. I only had thirty eight dollars in my account, the only thing standing in the way of meal time, and a starvation diet. Top it off with my rent due the Friday before my...big night.\n\nI spent a lot of my free time at my sister's place in an attempt to keep my mind off what was coming so I didn't totally psych myself out and blow it. She still had a lot left to unpack, and things to set up. It was a decent distraction, even if I did have to move that damn sofa fifteen times just to see if it would work better in a different position. If my plain apartment was any indication, I didn't have a clue about decorating, but Krista was more than happy to tell me what she wanted.\n\nMy sister seemed to be doing better. She showed a lot more energy as she skipped around her apartment from one little thing to another. I hadn't expected her to start bouncing back so quickly, and part of me worried that she might be setting into motion a murder plot for either Chad or his home-wrecker. I knew her job serving drinks at The Clover for crap tips wasn't the thing putting the pep in her step. Revenge could be the only feasible explanation for her more upbeat mood...that or drugs, and she really wasn't the type.\n\n*** *** ***\n\nWhen the big day arrived, I felt like a nervous wreck. My hands were constantly fidgeting, and I had to have a drink to calm me down before I got on with the grooming instructions. Apparently, they wanted me as smooth as a twelve year old boy downstairs. After an hour, three razors, and a can of shaving cream, I felt more naked that I ever had. I also looked huge. Without the hair around to distract from it, my cock looked like a mammoth.\n\nI took a shower, making sure to scrub extra thoroughly, and then dressed and waited. When it was finally seven o'clock I got into my truck and headed to the club. It seemed I was really going through with this.\n\nAt the club, I pulled around to the back, and walked up to a large guy watching the red door. I handed him my paper, and he spoke into a radio, telling someone inside that I was here. After that, he stood silent, effectively ignoring me. The short time I stood there waiting felt like an eternity.\n\n\"Come on in!\" Cindy said, holding the door open for me. \"I'm glad to see you've made it. Follow me.\"\n\n\"Do some people not make it?\" I asked, looking for anything to say to distract myself from my nerves as I followed her inside.\n\n\"Sometimes, but not usually. We try and make the incentives worth it,\" she explained. \"We only really get two types of people, the ones who need the money, and the kind that get off on being watched. The kinky ones always show up ready. The ones that need the money have been known to back out, but only if they somehow find what they need somewhere else. Just in here,\" she motioned, opening a door.\n\nShe lead me to a small room furnished with a couch, a cushioned chair, and a mini bar. It reminded me of an old fashioned parlor and looked rather cozy and inviting.\n\n\"You will wait in here until it's time,\" she said as she poured a two finger glass of what looked to be top shelf scotch. She handed it to me and took a seat in the comfy looking chair across from the sofa.\n\n\"In a little over an hour, I will return to escort you to the stage. You can wear the robe,\" she gestured to a white silk robe hanging from a hook on the wall, \"or you can go au natural. This mask however is not optional,\" she said opening a small wooden box on the table in front of her.\n\nIt was white, and looked like porcelain, but felt much sturdier to the touch. It was designed to cover the top half of my face, all the way down to the nose, and had thick black ribbons hanging down from the sides that would be used to hold it in place.\n\n\"You will wear this always,\" she said firmly. \"If you are not in this room, it will be on your face. The illusion is to make you seem like no one, or anyone. It's a bit of mystery that adds to the eroticism for our guests, as well as safe guarding your identity from potential...repercussions. After all, you wouldn't want someone coming up to you on the street and praising how well you did performing for strangers? She asked, then shrugged. \"Well, you are a man, you might go for that.\"\n\n\"I think I would rather remain anonymous,\" I assured her.\n\n\"Modest are we?\" she smiled. \"Either way, you don't have a choice. Rules are rules. I will leave you to...prepare. Your counterpart should be arriving soon, and I must see to her as well,\" she said standing as she checked her watch.\n\nWithout saying anything else, she stepped out, the clicking from her expensive heels fading as the door swung shut behind her.\n\nI sat and thought about what was about to happen. It felt a little surreal, knowing that in just a short amount of time I would be fucking a complete stranger in front of so many other complete strangers. All of a sudden, I was wishing that I had taken the blue pill.\n\nI had thought about it off and on over these last few days. Mark had given me a sample package of Viagra from his work a long time ago, but I had never touched the thing since I tossed it into a drawer. I'd never had any problems performing for any of my sexual partners, but now I wasn't just pleasing one person. I had to please an entire club. The thought of that was a little daunting, and even though I knew sex was in the near offing, I couldn't even feel the slightest tingle of an erection.\n\nTrying to clear my mind, I downed the scotch in my glass, and poured a little more. I needed some courage and fast. God, I hope I can get it up. I thought, then adding to myself. I really hope I don't cum to fast either. Each of those would be equally embarrassing.\n\nI whittled away the hour, trying my utmost not to drink myself into oblivion in an attempt to settle my nerves and stop my hands from shaking. I kept trying to tell myself that it was just sex, but that was hardly helpful. I wasn't averse to a little adventure in the bedroom, but I always believed that something that intimate, even when it was wild and kinky, was a private affair. Now, I had more than just my partner...a complete stranger...to worry about. I was expected to make this look good. That was the point of them watching after all. I didn't know how to turn sex into a performance. What the hell am I doing here? I thought, just as the door opened again.\n\n\"You're not undressed yet?\" Cindy asked, stepping in quickly, shutting the door behind her. \"Jesus, you're on in five minutes. Get up!\"\n\nI couldn't believe how fast the time had passed. It felt like she had only left minutes ago. I quickly stood, and she began pulling at my clothes. Her hands immediately went to the buttons on my shirt, deftly slipping them off one by one as she undressed me.\n\n\"Pull yourself together,\" she said shaking her head, seeing the panicked look on my face. \"All you have to do is go out there and fuck.\"\n\n\"I don't know what I'm doing,\" I babbled. \"I'm not a porn star, I don't know what these people want. I don't even know the first thing about performing...anything!\"\n\n\"Calm down,\" she said, quiet but firm, as she shucked my shirt down my arms and threw it behind her. \"You're thinking about it too much. It's not a performance. It's just sex. Just go out there and do whatever you would do if you were in your own bedroom,\" she said, unfastening my pants. \"Shoes?\" she prodded until I kicked them off.\n\n\"The only part that constitutes a performance, is the fact that people are watching,\" she explained. \"They're here to see real sex. If they wanted a full on production, they would just hire porn stars. God knows they have the money. This is real sex from real people. Take a breath and let's go out there so you can bang her like a beast...or just make slow passionate love to her. Your choice,\" she finished, whipping my pants and boxers to the floor in one fluid motion.\n\nI took that breath, feeling slightly better from her pep talk and stepped out of my rumpled pants. Cindy tossed me the white silk robe and I pulled it on and tied the waist closed.\n\n\"I think I'm ready,\" I said, my voice a little shaky as I went to the door.\n\n\"Forgetting something?\" Cindy called from behind me, holding up the white mask that was supposed to protect my identity.\n\nTaking another breath, I took it from her outstretch hand and carefully donned it, making sure that it held in place.\n\n\"Now you're ready,\" she smiled.\n\nCindy escorted me through a series of corridors to the stage access. The closer we got, the more noise I could hear. It was a slowly rising din of muffled voices from somewhere close by. As we reached the stage, it had gotten loud. It must have been a packed house. I turned to look at Cindy as we stepped up to the wings to ask her how many people were here, but before I could open my mouth, she pointed to the other end of the stage, and I followed her finger.\n\nAs soon as I saw her my heart fluttered. She was absolutely stunning. My vision began to tunnel as I gazed upon my imminent partner, and everything seemed to fade away to light background noise. I barely heard Cindy asking for my robe as she tugged gently at my sleeve.\n\nI carefully slipped it off and handed it to her. All of my focus was directed on the woman standing opposite of me, in the wings across the stage. She was beautiful. At this distance, I couldn't judge her height correctly, she might have been 5'7\" or 5'10\", it didn't matter. She was incredible.\n\nShe was just as naked as I, only wearing a delicate porcelain mask, hers decorated with white feathers fanning up and out. Her long blond hair was curled loosely, and rolling down her shoulders and back. Her breasts were full and proud, sitting high on her chest, capped with small light pink nipples. She had a small waist and prominent hips, and she must have been in the best shape of her life. Whoever she was, she put a lot of work into looking this good, and if the way her body looked was any indication, she was a rare beauty.\n\nI couldn't see why she was here, why she needed the money. When you're this perfect, people just give you things. I felt slightly intimidated by her. I'd been with some good looking women in my life, but this one put the rest of them to shame. I couldn't stop myself from drinking her in, and I didn't even try.\n\nCindy's voice, and hand on my bare shoulder, snapped me back to the present and inadvertently letting the flood of sound back in.\n\n\"When the curtains open, you will walk towards the bed, and from there it's all up to the two of you.\"\n\n\"I...\" I began before she cut me off.\n\n\"You can do this,\" she said just a flash of red light warned us of the curtain call. She reached up to touch my arm reassuringly. \"It's show time. Go get her stud!\" she smiled.\n\nThe curtain opened, and a hush fell across the audience. The woman, my counterpart, began walking nervously towards the bed situated between us, and Cindy gave me a hard poke on my ass to get me moving as well.\n\nI still didn't know if I could go through with this, but I was past that point now, I was already in the thick of it. My heart hammered with every step I took, and my body itched to peer out past the stage, but I had resolved to not look out into the crowd. If I didn't see them, then I couldn't be sure that they were there, I rationalized. Instead, I would focus only on her.\n\nShe had made it to the bed before me, and delicately crawled up onto it, waiting for me on her knees. Nervous, I paused at the edge before joining her.\n\nA sound of tinkling glass caused me to turn out of reflex. I tried not to look, but I couldn't help it. I glanced past the edge of the stage and into the crowd.\n\nWith the bright lights shining down onto the stage, I could hardly make out anything beyond vague shapes, but there were little candles flickering on each of the tables exposing the silhouettes of the onlookers. It was completely silent and I couldn't even hear my own breathing. Was I breathing? Fear had gripped me and I was frozen.\n\nBefore I could faint, she saved me. Her hand lightly touched my chin and turned my head to face hers. Her eyes locked onto mine and a gentle, warming smile soothed me. She held my gaze as she inched her way backwards on her knees and crooked a finger, inviting me to join her on the red satin sheets.\n\nJust looking into those eyes, I felt myself calm and found myself climbing on the bed to join her. We were less than a foot apart in the center of the bed, and she tentatively reached a hand out to run along my chest. Her fingers barely grazed me, and I felt chills. Time seemed to slip away from me. Her hand trailed down my arm, and pulled my hand up to her chest. She placed it right over her breast, and squeezed.\n\nWith my hands on her, and hers on me, she leaned forward and kissed me. It was soft, and nervous, and I could tell that this as unusual for her as it was for me. Slowly, her hand trailed down my chest, and reached for my cock, her fingers closing around me. I still wasn't hard.\n\nI couldn't believe it. I felt more sexually charged than I'd ever been before, and I had nothing to show for it. My eyes flickered toward the crowd again, embarrassment filling me, but before my eyes could connect with the onlookers, her hand reached back up and turned my face back to hers. She held my eyes, as if she was looking into my soul, and her warm smile turned into one of playfulness.\n\nShe scooted back and got on all fours, her face a foot away from my groin. She sat there, on all fours, a slight arch to her smooth back. Her eyes never left mine, and she just stared at me with the whisper of a smile.\n\nShe only watched me, that was all, but something about her, something about the way she was smiling, or the way her blue eyes seemed to pull in the light, made my cock slowly grow for her, reaching up and up until it was pointing straight at her. She was like a damn snake charmer.",
        "I was hard and throbbing before she finally let her eyes flicker down toward my erection. That small playful smile of hers was quickly replace by one of delight. Ever so slowly, she leaned forward, her lips slightly parted. She didn't take me inside of her though. Instead, she let her bottom lip drag across my head sensually. She even let my cock rub along the sides of her face, almost as if she enjoyed worshiping it.\n\nFinally, she came back at it head on, and opened her mouth as wide as she possible could. My cock entered her mouth, barely grazing her tongue and lips until it finally touched the back of her throat. Without hesitation, she pressed on, taking me inch by slow inch all the way down her throat. Only when she reached the bottom did her lips wrap tightly around my shaft and I felt her moan in pleasure.\n\nI let out a groan, my whole body shuddering at the experience. No girl had ever taken my whole cock in her mouth, let alone shown this much joy at sucking it.\n\nMy mystery vixen, bobbed on me sensually for a few minutes, going all the way from tip to base each time, before she finally released me leaving a small string of spit and precum connecting her lip to my cock. Smiling, she slowly leaned back, letting the string stretch and break, and kept falling backwards until she was leaning on her elbows with her bent knees apart, exposing her perfectly smooth pussy.\n\nHer lips were the same pale pink as her nipples, and slightly blooming almost like a flower. Her juices glistened on her slit, showing her own arousal.\n\nShe crooked her finger, and I followed. I knelt between her thighs, kissing one and then the other, before working my way to her center. The closer I got, the more her hips squirmed for me. I could smell her arousal, and it was intoxicating. By the time I let my tongue flick out across her slit, I felt light headed, and I immediately became addicted to her sweet taste.\n\nHer fingers grasped my head, pulling me hard against her with need. Feeling her grip tighten in my hair, I began to lick, slowly picking up speed as I tried to taste every inch of her, trying to reach inside of her for more of her nectar.\n\nUnable to hold back, she moaned, and then again, louder. Her cries were like a sirens song, and I set myself to drown in her. I fixated on her clit, and clamped my lips around it, sucking gently as my tongue flicked across it. Several moans turned into one long, drawn out keen and her thighs clamped tightly around my head. Her hands pulled me so tightly to her, so desperate for more that I couldn't breath.\n\nStruggling for air, it became a race. I quickened my pace, thrashing her swollen nub with everything I had. One moment she was keening, and the next, silence. Her body tensed, every muscle contracting, and then with a cry of ecstasy and relief, she came. When her wail of pleasure ended, her entire body shook, and she gasped for breath. Her legs finally released me, and I gasped right along with her.\n\nSeeing her cum like that, uncontrollably, and in front of all of these people was one of the hottest things I had ever seen. Barely giving her a chance to catch her breath, I slid up her trembling body, kissing her soft skin until I met her face.\n\nI lightly kissed her lips, and her tongue came out to taste herself on me. As we shared her flavor between us, my cock slid along her soaked folds. I teased her, moving my body to let it drag softly along her sensitive clit, until I finally rocked backward just enough to let my tip flirt with her hot opening.\n\nHer eyes shot open, looking right into mine. After a moment of my gentle prodding, she gave me the slightest nod, and I pressed forward slowly, feeling her pussy split tightly around my shaft. She felt incredible. So wet, and tight, and it felt like there was a fire building up deep inside her core.\n\nHer small hands held tightly to my arms as I slowly fed her my cock, inch by inch. I could tell by the way her pussy clung to me, and the way her lips parted in a silent gasp, that she wasn't accustomed to something my size, and when I finally hit bottom, our pelvises resting against one another, she let out a sigh. Her eyes were shut tightly, and I could see her lips silently mouthing 'Oh my God'. That pained look of pleasure was a beautiful sight.\n\nEventually her tight, death-grip, on my arms loosened and I gently pulled back, feeling her pussy dragging along my shaft, almost as if they were trying to hold me deep inside of her where I belonged. Once I was almost to the end, I slowly pushed back inside of her, causing another audible gasp.\n\nHer arms pulled me down to her, and she clung tightly to my body. One of her legs hooked around my ass, and she slowly urged me on. I stared straight down into her eyes, our masks nearly touching from our closeness, as I made love to her.\n\nIt was shocking to think of it that way. I had just met this woman. I didn't even know her name, or what her face looked like, but I felt like I was falling for her somehow. By the way she took charge, making the first moves, that playful little smile, and those penetrating blue eyes...I felt a connection with her that I couldn't explain, and I wanted more.\n\nHer leg, hooked around me, urged me on, and my pace quickened. Her little gasps followed in time, and her pitch rose. Her eyes pleaded with mine, as I drove her towards another climax. Her nails dug into my back, and her heel pressed me to drive into her even harder. Every time I thrust harder, thinking it might be too much, her heel was there to tell me she still wanted more. My thrusting became harsh and violent as she called out her pleasure, and that's when it happened.\n\nHer mask slipped up from a rather violent thrust, and I caught the briefest glimpse of her uncovered face. It was only a moment before she reached up to fix it, but the damage was done. Krista. It was my sister. I was fucking my own sister.\n\nI stopped moving, but it was too late for her. Both of her legs clamped tightly around me as her entire body quaked, and she cried her renewed ecstasy. My sister was cumming on my cock, and I couldn't stop it. It was torture, feeling her pussy tremble around me, teasing me, tormenting me.\n\nThe mask must have blocked out my horror, because when her eyes finally fluttered open, I was still frozen. She just smiled warmly at me, that same smile I had seen everyday growing up with her, the one I thought I could spot anywhere, and she kissed me passionately. Her lips clung to mine, and I couldn't move.\n\nAfter breaking our kiss, she pressed gently on my chest, and finally, thankfully, released me from her depths. I would have breathed a sigh of relief if only I could forget the look of pure ecstasy she had as her body quaked from what I had done to her.\n\nI sat up on my knees, praying that the people watching couldn't see it in my eyes, or in my body language, that I had just fucked my own sister. I stared in a daze, thankful that it was over when I saw her crawling up after me. Kneeling in front of me, she pushed me back onto the soft sheets. And playfully hopped up to straddle my waist.\n\nI wanted to tell her to stop, that we couldn't, we shouldn't...not again...never again, but I was petrified. How could I stop this without someone finding out? I was on a stage, with over a hundred people watching me fuck my sister. None of them knew that thankfully, but if I threw her off of me and ran, everyone would know something was wrong. We had already been fucking for...god knows how long.\n\nI felt guilt rise in me as my sister slid her pussy along the underside of my aching shaft. I was ashamed at how hard I was. Krista just smiled and cooed as she slid along my length, and I shuddered. It was so wrong, and it felt even more wrong how good she felt. She began to rise up, and I knew what was coming.\n\nI couldn't. I reached forward and grabbed her hands to stop her, but she just laced her fingers in mine and wiggled her perfect little ass as she blindly lined up my throbbing member with her eager pussy.\n\nHer fingers griped mine tightly, letting out a fulfilled sigh as she slowly lowered herself down my cock, wrapping her velvet folds around me. My fingers gripped hers as well, and a pained groan escaped my lips as I once again became an unwitting participant to incest with my sister.\n\nHolding on tightly, she sat straight up and began slowly rising and falling, rolling her hips sexily as she stared straight into my eyes. All I could do was watch on with a mix of guilt, and growing lust, and I hated myself for that last part. I wanted to close my eyes and pretend it was anyone else, anyone but my own sister, but every time my eyes closed, they opened of their own will, and stared right back into those deep, seductive pools of blue.\n\nHer mouth hung partly open as she slowly fucked me, her ragged breath filling the dead silence. With every rise, her pussy would clench tighter along my shaft, as if trying to coax my seed into her, and I tried to fight it.\n\nKrista's eyes never left mine, and with her hands squeezing tightly to mine, it made this all too intimate. It was as if her eyes stared straight through my mask and into my very soul. Her blue eyes had me locked into this moment with her and I couldn't pull away.\n\nI felt it, with her wet velvet pussy milking my cock so perfectly, a tingling shot though my body. That electric pulse that shoots out from your loins signaling the imminent release. My hands tightened in hers, desperate to warn her...to get her to stop. I couldn't dare to speak, and risk letting her hear my voice. I tried to fight it back, to stop what was coming. I was not going to cum in my sister.\n\nMy breath was coming out in gasps, and that smile filled her face again. Her hands squeezed back, and she began to ride me harder. I was frantic, trying not to cum. I tried to let go of her hands, to lift her off of me, but she held on with a surprising strength. My body trembled with the effort to hold back the dam, but in the end it was useless. Nature won out.\n\nI cried out in anguish as pleasure burst forth, washing away the pain from prolonging the inevitable. It felt like cannon volleys as I shot deep into her warm pussy. White spots filled my vision, and Krista continued to ride me through my orgasm.\n\nI was so sensitive, it was torture, but a few moments later, she followed me down, her body collapsing against mine as she shook with pleasure once again. Her head lay on my chest, her warm flesh against mine and her hot gasping breath warming me further.\n\nA loud cheer broke though the deafening silence, startling both of us. For a moment, I had forgotten where I was. I turned my head just in time to see the curtains closing, catching a glimpse of the standing ovation for our act of incest.\n\nWe lay there, catching our breath, one of us still trembling slightly from their orgasm, the other feeling waves of guilt and regret. I was thankful when Cindy appeared.\n\n\"That was some show!\" she beamed. \"Just...wow!\" she exclaimed. \"I hate to break up your afterglow, but the show is over. Jessica and I will escort you two back to your dressing rooms, and we will see that you get paid.\"\n\nKrista sighed as she gently rose off of my slowly deflating cock. I fought back a sigh of my own. I hated myself for what I had done, but I wondered if it was this whole situation, or just the fact that I knew it was her. I had just experienced what had to be the best, most amazing sex of my life, and it had been with my own sister.\n\n\"Come on stud,\" Cindy smiled, holding out the silk robe I had discarded earlier.\n\nI slipped it on and walked a short ways behind her as she led the way back to my dressing room.\n\n\"You know,\" she began, looking back briefly as we walked. \"I had wondered about you for a minute there. I thought you might not be able to perform. I'm glad I decided to pick you though. That was the hottest thing I've seen in all my years working here. And that's saying something,\" she smiled back at me. \"Here you are,\" she opened the door. \"Get dressed, relax for a bit, and have a drink. I'll be back shortly to escort you out.\"\n\nI made a sound that she must have took for understanding, and she left me to myself.\n\nI dropped down onto the couch and planted my face in my hands, trying to figure out how something like this could happen. What were the odds? I had to be the worst brother in the world. I had an excuse, but only until I knew who she was. Everything that happened after that was my fault. I had wanted to stop, but thinking back, I knew I hadn't resisted as much as I could have. I just let her go on, convincing myself that I couldn't stop, not with everyone watching me. Her being in control made it easier to pretend that I wasn't doing it, she was. But that was another lie.\n\nFeeling like a wreck of emotions, I got up and poured myself a large glass of the good scotch. I downed it quickly, and poured a little more. I was sitting, still holding the glass when Cindy entered again.\n\n\"Still not dressed yet?\" she asked. \"It's okay. Some people need a bit of time to get their head right. Or maybe it's just the twelve hundred dollar scotch?\" she smiled.\n\n\"Sorry,\" I said, setting the glass down.\n\n\"Don't be,\" she said, sitting down on the opposite end of the couch crossing her legs. \"I'd say you've earned it. Speaking of earning, here's your payment, plus a little extra for the exceptional job,\" she said handing me a thick envelope.\n\nAs guilty as I felt, it would've been counter productive to have gone through all of that, and not take what I'd come for. As I tried to take it though, her hand held firmly.\n\n\"Would you consider doing this again?\" she asked.\n\n\"What?\" I asked.\n\n\"We don't usually ask for repeats, but you two had some real chemistry. The audience loved you guys,\" she smiled. \"There wasn't a dry seat in the house by the time the curtain closed. Everyone was practically dripping. People want to see you two again.\"\n\n\"I don't know...\" I said. \"This was just a one time thing.\"\n\n\"We'll pay double,\" she said firmly. \"You would perform once a month.\"\n\n\"What?\" I asked.\n\n\"Ten thousand dollars for you to work once a month. And all you would have to do is spend a couple hours fucking a gorgeous woman. I've seen underneath her mask, you truly are a lucky man.\"\n\n\"Yeah,\" I said, not really feeling it. \"Lucky.\"\n\n\"So what do you say?\" she smiled, already assuming my response.\n\n\"I know it's a lot of money, but I don't know if I can do this again...not with...\" I stopped myself. \"I just don't know.\"\n\n\"Well, call this number when you decide.\" she said, finally releasing the envelope, and handing me a business card. \"I've already spoken to your counterpart, and she's all for doing this again. You've made quite the impression on her. Her number's on the back of that card as well,\" she added. \"She'd like you to meet her sometime.\"\n\n\"Thanks,\" I said uncomfortably.\n\n\"Well...\" she said standing. \"I'll be right outside while you dress.\"\n\nCindy waited outside as I quickly donned my clothes. As soon as I stomped my feet into my shoes, I had her lead me out through the back entrance, the way I had come in, and I jumped into my truck. I probably shouldn't have been driving with that large glass of scotch fresh in my system, but I risked it. I needed to get out of there and back home.\n\nBack at my apartment, I fell onto my bed fully dressed, feeling like a piece of shit.\n\nMy body was exhausted from the nights events, but my brain refused to let me fall asleep. It kept replaying the entire night, every sight, every feeling... I wanted it to stop. Even with shame welling up inside, my body couldn't deny how it felt.\n\nWhen sleep finally took me, it wasn't the release I had imagined it would be.\n\n*** *** ***\n\nI was back there, on that stage. Krista was there as well, but this time neither of us were wearing masks. I stood there, before her, both of us bare for the world. She took my hand in hers, and placed it on her chest between her breasts, and I could feel her heart racing beneath her warm smooth skin. She stepped closer, and our bodies were touching. I tilted my head down and our lips met in a slow passionate kiss.\n\nEverything blurred and then we were on the bed together, the red satin sheets mussed beneath us as our bodies slid together. Her blonde hair was fanned out around her, and her arms were over her head, holding onto the edge of the bed. A wicked smile was upon her face, and I could feel one on mine as well as I slowly fucked into her delicious pussy.\n\nI turned my head, and instead of seeing dim strangers, and vague shadows, I could see everything. Gone were the tables and chairs, and instead there was only a mass of people. I could see our parents standing right up front, holding hands as they watched. My friends were there as well, even people I had only known in passing. It seemed like every face I could see was someone I knew, and they were all watching, smiling and cheering us on.\n\nKrista brought a hand up to my face, pulling my focus back to her. I could feel it rising in both of us and I began to plunge faster into her depths...\n\n*** *** ***\n\nI woke just as my orgasm hit me, my muscles clenching painfully as pleasure lanced out from my groin. I was panting, covered in sweat and a sticky puddle of my own cum.\n\n\"Fuck!\" I gasped, covering my face with my hands.\n\nIt had been a week since that night, and nearly every night since I had dreamt the exact same thing. This was the first time I had cum from it, but that probably had more to do with my recent lack of sexual release.\n\nI constantly found myself thinking about Krista, and that would inevitably lead to my arousal, but I could never bring myself to jerk off. No matter if I thought of something else while I did it. I would know what had inspired it, and it just felt wrong.\n\nSomething was seriously wrong with me. I had never once thought about my sister in this way, and it was like a dam broke somewhere and I was now being flooded with these latent feelings. After seeing her, feeling her, I couldn't understand how I had gone my whole life not being able to see how truly spectacular she was. Everybody else around me had seen it, but it was as if I was blind. Well now I saw it, saw it all, and I really wished I could unsee it.\n\nI rolled out of bed and checked my phone. I had really slept in. I had a few missed calls, one from Cindy, likely checking up on her job offer, and two from Krista.\n\nKris had been trying to get me to hang out with her for pizza and beer again, but I just couldn't do it. I didn't trust myself not to lust after her and do something stupid when I was drunk.\n\nIgnoring both of them equally, I sat at my computer to continue my job hunt. I still hadn't found anything, and I was wondering if I should expand my search or lower my salary requirements. I used the money I'd made to catch up on my bills, but if I didn't find a job soon I would need to start downsizing the luxuries in my life. My two bedroom apartment downtown would have to go first, and shortly after, my truck.\n\n*** *** ***\n\nI felt miserable, and withdrawn. I couldn't shake what had happened, and after some convincing from my friends, I tried to get back to normal. That meant getting dressed and leaving my apartment.\n\n\"What's up with you lately?\" Mark asked skeptically. \"It's like pulling teeth to get you to come out for a drink with us.\"\n\n\"I've got some stuff going on,\" I said deflected as I took a bar-stool between my two friends.\n\n\"Oh, did you find a new job?\" John asked.\n\n\"No, not yet,\" I said.\n\n\"Then what's got your pansy ass so busy that you can't hang out with your friends?\" Mark asked. \"No job means you should be free to come out anytime.\"\n\n\"I still gotta look for work, man,\" I said, feeling slightly annoyed with Marks dickish demeanor.",
        "\"Not at eight at night,\" he countered.\n\n\"The man's got a point,\" John said. \"This is the first time we've been able to get you to come out since you lost your job. And we only achieved this much because numb-nuts over there threatened to bring the party to your place.\"\n\n\"How about we lay off a bit?\" I suggested. \"I'm here, aren't I?\"\n\nDrinking with my friends had lost some of its appeal. Sure, it was fun to watch Mark use cheap pick up lines on girls, and get shot down in a spectacular fashion, but my mind was still somewhere else; somewhere it had no business being. I was beginning to think that getting back to normal would be impossible, or take a lot more effort than I realized.\n\n*** *** ***\n\nIt was nearly a month since I lost my job. I was settling in at a dead end data entry job, and I was practically paying them to let me work there. I had just gotten home when my phone rang. It was an unknown caller, and I answered quickly, hoping that it was someone that saw my resume.\n\n\"Hello?\" I said cheerily. \"This is Sean Wells.\"\n\n\"I know Jackass,\" a familiar voice answered back. \"What the hell bro, are you screening my calls?\"\n\n\"No!\" I said, feeling guilty. \"I've just been really busy. You know how it gets.\"\n\n\"For three weeks?\" Krista asked. \"Whatever,\" she sighed. \"Can you come by my place? I bought some new furniture and I need your help setting it up.\"\n\n\"What happened to your old furniture?\" I asked.\n\n\"It was old,\" she said as if that was all the explanation needed. \"I went to IKEA and kind of splurged. Now I have boxes of stuff that needs assembling. I figured, you're a dude, you would know how to do that.\"\n\n\"I just got off work, and there's some stuff I wanted to take care of,\" I lied.\n\n\"Pleassssee!\" she begged sweetly. \"I won't even make you use the instructions. I just really need help, and it's not like I can call Chad anymore,\" she finished in a more sad, manipulative tone.\n\nI was silent, trying to find a way of avoiding seeing her.\n\n\"Oh, come on!\" she said annoyed. \"Quit being a douche-bag and get over here!\"\n\n\"Fine,\" I said, frustrated, but with myself more than her. It wasn't her fault all of this happened, and she didn't know what I did. As far as she knew I was just being a shitty brother for no reason. \"I'll be there in a little bit.\"\n\n\"Thanks bro, you're the best!\" she said before hanging up.\n\n\"If only you knew,\" I muttered, tossing my phone on the counter with a clatter.\n\n*** *** ***\n\n\"Hey bro!\" she smiled happily, a drink in her hand that smelled strongly of tequila.. \"What's going on?\"\n\nStanding here, face to face with her again, for the first time since we had sex, it was as hard as I imagined it would be. Even fully clothed in a pair of tight denim jeans, and a white tank top, I could still see her naked. I could still remember the smell of her sex, her taste, and the feel of her warm skin against mine as we made love. She was just as stunning as I remembered on that night. It astounded me that I never noticed how gorgeous she was until I didn't know it was her.\n\n\"Oh..uh. Hey Kris,\" I stuttered, trying to focus on anything but her looks, or my memories. \"Uh, not much. You know, work and stuff,\" I rambled. \"You're in a good mood.\"\n\n\"That's what happens when things start going your way,\" she said. \"Come in! I'll get you a drink.\"\n\nI stepped into her apartment, and immediately noticed the large boxes scattered all around. Some were laying flat on the floor, while others where leaning against the walls. There had to be at least half a dozen all together that I could see. Krista's hips swayed enticingly as she walked into her kitchen to make me a drink, and I had to pry my eyes from her and focus on anything else.\n\n\"You sure bought a lot of stuff,\" I said carefully.\n\n\"I kinda got carried away,\" she blushed. \"Let's see, a few end tables, an entertainment center, a set of book shelves, two lamps and a rug, but don't worry, you don't have to put the rug together,\" she quipped.\n\n\"How much did all of this cost?\" I asked, a little worried that she might be stretching herself thin.\n\n\"It wasn't cheap, but I got a good deal,\" she shrugged.\n\n\"Are you sure you can afford all of this?\" I asked.\n\n\"I got a job offer a few weeks back. They're gonna be paying me big bucks, so yeah,\" She smiled proudly at me as she handed me a glass. \"I'm just waiting to hear back from them to see when I start. Cheers!\"\n\n\"You bought all of this, and you haven't even started yet?\" I asked, taking a sip and coughing from the strength of the tequila.\n\n\"I got a sort of signing bonus,\" she lied. \"It covered most of this...and my new car. The rest I put on my credit cards.\"\n\n\"You bought a new car?\" I asked, feeling this spiraling out of control.\n\n\"Yeah, didn't you see it outside?\" She asked picking up her key chain smiling widely. \"It's an Audi!\"\n\n\"Kris, you can't be spending money like this,\" I told her, feeling worse than I already did. She thought she had an extremely lucrative job lined up, and because of me, she wasn't going to get it, and I couldn't tell her. \"How do you know you even have this job? Did you sign papers? Do you have a start date?\"\n\n\"No, but it's a sure thing,\" she assured me.\n\n\"Kris, nothing is a sure thing until it's in writing.\"\n\n\"Quit worrying little bro,\" she said. \"Everything's going to be fine.\"\n\nI felt myself drop onto her sofa, my face in my hands. I argued with her for another few minutes trying to convince her, but I got nowhere. The more I pressed, the more adamant she was that everything was perfect. She was so sure that this job was hers, and the only way I could dissuade her was to tell her something I never wanted her to have to know.\n\n\"Krista, I need to tell you something,\" I began, taking a big drink from my glass. \"Can you sit down for a sec?\"\n\n\"Yeah, what's up?\" she asked, taking a seat on the other and of the couch, pulling a knee up as she faced me.\n\nIt took a long time for me to even begin. How was I supposed to tell her that I was the man she fucked on stage for money? Or that I knew? The silence stretched out, and I seriously contemplated just taking the job so I wouldn't have to tell her, and she wouldn't be financially screwed, but I couldn't do that to her, even if it was to help her.\n\nWhat happened at the Fenyx was an accident. A horrible accident that neither one of us could have foreseen. We couldn't help that, and I couldn't go back to that place knowing that I would be fucking my own sister. I couldn't do that to her, no matter how much my subconscious wanted me to.\n\n\"You don't have that job,\" I told her.\n\n\"But they told me...\"\n\n\"They told you what exactly?\" I cut in.\n\nShe became rather silent for a few moments, unable to come out and tell me. While she sat there, I pulled out my wallet, and slipped out the card that Cindy gave to me. Avoiding Krista's gaze, I set the card for the Fenyx Lounge on the coffee table. I couldn't say it. I didn't know how.\n\nKrista's eyes widened slightly as she saw the logo on the front, and she leaned forward to pick it up. She turned it over, and her hand came to her mouth.\n\n\"You!\" she gasped, eyes wide. \"You were...we...you and I?\" full sentences failing her.\n\n\"Yeah,\" I said, my voice rasping from lack of moisture.\n\n\"Shit!\" she said sinking back into the couch.\n\nWe both sat there in silence, neither of us knowing what to say. I was just about to leave when Krista broke our silence.\n\n\"What did you tell them?\" she asked. \"The Fenyx Lounge people.\"\n\n\"I didn't tell them anything,\" I said quietly, still unable to even look in her direction. \"They don't need to know. No one needs to know, ever. I'm really sorry Kris.\"\n\n\"I mean about the job,\" she said, taking me by surprise.\n\n\"What about the job?\" I asked. \"There is no job. Don't you understand, they want me to...us to...you know?\"\n\n\"Have sex?\" she filled in. \"You know, this might be the tequila talking, but I think I could do it.\"\n\n\"What?\" I asked shocked. \"You're my sister. I'm your brother!\"\n\n\"They say everyone has their price, and I guess mine is fourteen thousand dollars a month.\" She said shrugging. \"It's a lot of money. I could get another job and be able to retire by the time I'm thirty five. Besides, no one will know you're my brother.\"\n\n\"I can't believe you're even considering this,\" I said, feeling like I was dreaming. \"It's a lot of money, but...Wait, you're getting fourteen? They only offered me ten.\"\n\n\"Maybe it's because I'm prettier,\" she smiled, cocking her head to the side.\n\n\"And they say women have to fight for equal wages,\" I muttered, feeling the ridiculousness of this. Here we were, discussing if we could actually commit incest for money, and we were talking about the wage gap.\n\n\"So are you going to do it with me?\" She asked, causing me to shudder.\n\nThe way she worded that couldn't have been more apropos.\n\n\"I don't think so,\" I said, feeling something I had been fighting stirring up inside of me.\n\n\"Is it the money?\" she asked. \"Because I would pay you out of my share so you don't feel cheated. It'll be even\"\n\n\"It's not the money,\" I said.\n\n\"Is it me?\" she asked, scooting closer; so close, I could smell the subtle scent of her soap and sweat. \"Am I not pretty enough?\"\n\n\"Kris,\" I said pained. \"I already feel bad enough.\"\n\n\"What if I told you a secret?\" she asked. \"What if I told you something naughty that would make you feel all better?\" she blushed, biting her lip as she paused. \"I knew it was you.\"\n\n\"The other night, at the Fenyx, I arrived after you I guess, and I saw your truck in the parking lot. I had this nagging feeling that you had applied too, but I brushed it off. But when my mask slipped, that look on your face, I knew it was you. And I knew that you knew it was me too.\"\n\n\"You knew?\"\n\n\"Um hum,\" she nodded guiltily.\n\n\"Why did you give me your number then?\" I asked. \"Why didn't you say anything? Hell, why didn't you stop us?\"\n\n\"You really are a dummy sometimes,\" she said shaking her head. \"I didn't want to have to be the one to bring this up. Maybe I wanted to retain some of the innocence you see in me. And maybe I didn't want you to know what a complete perv your big sister is,\" she finished.\n\n\"Do you realize how fucked up I've been about this?\" I asked. \"I've felt like a complete asshole for weeks!\"\n\n\"Awe, poor you!\" she said, swinging a leg over to straddle me on the couch, sitting on my thighs. \"So, what do you say? You want to fuck your big sister for a living?\"\n\n\"Jesus, Kris!\" I moaned, feeling her slide forward to grind against my Judas Boner.\n\n\"Come on!\" she purred. \"I haven't been fuck so good in ages. You'd really be doing me a favor.\"\n\n\"We really shouldn't be doing this. It's incest,\" I said, grabbing onto her hips to lift her off. I couldn't though. My hands wouldn't move, only hold onto her.\n\n\"Shouldn't?\" She asked, leaning forward to whisper into my ear. \"We've already done it. You made me cum so many times,\" she purred. \"You came inside me.\"\n\n\"Fuck Kris!\" I moaned.\n\n\"That's the idea big boy,\" she said licking my face, \"Now take off your pants. You've got a job to do.\"\n\nKrista climbed off the side of me and turned on her knees as she unbuttoned her jeans. She quickly pulled them down low on her thighs, leaving her perfect ass and smooth pussy on display as she bent over the arm of the sofa.\n\n\"Come on, bro,\" she said looking back at me as she let her ass sway gently from side to side. \"You're not going to make your sister beg are you?\"\n\nI couldn't believe what was happening. My whole world was just turned upside down. I'd spent nearly the last month feeling like the worst piece of shit for sleeping with my own sister, and for not being able to stop thinking about it, wanting it. In only a few short moments I found out that she knew, even before I did, and still wanted to fuck me.\n\nIf her words hadn't been a clue, the shining, sticky mess coating her exposed pussy was a dead giveaway.\n\nMy cock ached as I stared transfixed, eager to be back into her soft wet hole. I can't, I thought, before wondering what was holding me back now. It wasn't as if she didn't know who I was. Seeing her eyes, and the way she was presenting her perfect pussy for me, told me how much she wanted it. I couldn't deny that I wanted it as well; my dreams this last month told the truth, no matter how much I had been denying it.\n\nThe only thing that was left was the 'incest' thing, and I was beginning to care less and less about that.\n\nOnly a moment had past, and Krista was still smiling back at me expectantly. Our eyes met, and a sensation flooded into me, the same feeling I had when I first saw her standing naked in front of me on that stage, desire.\n\nHer smile became nervous as I stood up, but as soon as my fingers reached for my zipper it turned into one of delight. I let my brain shut off and only acted. I undid my pants, and pressed them down around my knees. I crawled back onto the couch, and lined myself up behind her. With out any pretense, I slowly slid my length into he tight pussy all the way down to the root. I gasped, and my sister sighed as I finally bottomed out inside of her.\n\nHolding onto her perfect little ass, I savored the moment. She felt so tight and hot wrapped around my thick cock, and her eyes, staring back at mine, were filled with longing and lust. I almost couldn't believe I was back inside of my sister, and it felt wonderful.\n\nI slowly pulled back, letting my cock slide out to the very tip, eliciting a coo from Krista, and then I pushed back in with a slow, but steady force, causing her to rock forward.\n\n\"I love my brother's cock!\" she smiled back at me sexily. \"Fuck me! Fuck your sister!\"\n\nKrista was getting off on this whole situation, and I couldn't deny that her words had an effect on me as well. I began plunging into her harder and harder. Part of me wanted to make sweet love to her wonderful pussy, but another part, a larger one, wanted to punish her. She had known all along, and had let me beat myself up for weeks.\n\nSlamming into her harder, I reached up to her tank top, and gripped the fabric with my hands. I was running on pure sexual instinct, and those instincts wanted to see her again, all of her. Without warning, I twisted and pulled, tearing the top right down the center, and pushed the remaining scraps down her arms. Krista looked delighted, and I followed quickly after with her bra clasp, mangling the hooks as I roughly pulled them apart.\n\nReaching around her, I slid my hands up underneath her ruined top and lifted her body, allowing her shredded clothing to slide helplessly from her arms.\n\n\"That was so fucking hot!\" she moaned as she worked her ass against me.\n\nI held her body against mine, rubbing and pinching her swollen nipples as I continued to thrust into her more gently. I loved how her body molded with mine. I tilted her head back to me, and I kissed her hard. Our tongues met instantly in a battle of passion and need.\n\nI felt one of her hands snake back to hold the back of my head and the other move in front of her downwards to touch herself as our bodies writhed together. Her pussy began flexing around me in a steady rhythm to her undulations, and I felt her climax begin to build.\n\nMy sister's lips vibrated against my own as she moaned into my mouth, slowly rising higher and higher to her peak. Finally, our kiss broke, and she gasped and cried out as she began to tremble in the throes of bliss.\n\n\"Oh God, don't stop!\" she cried as she fell forward back onto the arm of the couch. \"Don't stop!\"\n\nAt her insistence, I didn't. But to be fair, I didn't even know if I could. I was lost in my own lust and chasing my own orgasm.\n\nI started drilling into her harder and harder. I could feel her small fingers brushing against my cock as she furiously rubbed herself beneath us. Her tight little body continued to tremble, and high pitched gasps, almost inaudible, continued to escape her lips as she stretched out her powerful climax.\n\nThe way her pussy convulsed around me was exhilarating. I could feel my orgasm racing closer. I was now slamming my cock into her as hard as I could, my hands pressing my weight down on her back, crushing her into the arm of the sofa.\n\nEach violent collision of our bodies produced a small ripple across her skin starting from her succulent ass, all the way up her back. Just the sight of it was mesmerizing, and I wanted her to feel that little wave all the way in her soul.\n\nI gasped from my effort, as Kris lay silent beneath me, her body limp as she continued to tremble.\n\nWhen I came, it was with explosive force. I thrust deep inside of my sister's tight cunt and burst, flooding her with my seed. When the final rope had left me, I collapsed onto Krista's back, holding onto her in my exhaustion.\n\nIt took several minutes before either of us made a sound beyond labored breathing. I heard the small muffled sound of my sister's voice.\n\n\"Did you say something?\" I asked, shifting my weight to look down at her.\n\n\"Ugh!\" she exclaimed. \"I said get your fat ass off of me! You weigh a ton!\"\n\n\"Sorry,\" I said as I quickly let myself slide backwards and off of her back.\n\nI kicked my feet off the front of the couch, and sat there, naked except for the pants around my ankles.\n\n\"Oh my God,\" Krista sighed as pulled herself up off the arm of the couch and laid backwards across my lap, leaving her wonderfully perky breasts on display for me.\n\n\"Why the hell didn't you stop?\" Krista asked, slugging me in the gut.\n\n\"Ow!\" I exclaimed, rubbing the spot. \"You told me to keep going!\"\n\n\"I couldn't fucking breath!\" she said. \"They just kept coming, one after the other. It was incredible at first...\" she trailed off. \"Nothing like that has ever happened before.\"\n\n\"What happened?\" I asked.\n\n\"Multiples!\" she smiled as she stretched out over my lap. \"Multiples of multiples!\" she giggled. \"Wow! How have I gone so long without that in my life?\" she sighed happily.\n\nA silence stretched out as Krista closed her eyes, breathing deep and relaxed. I began to feel awkward again, but not about being nearly naked with my own sister lying across me, or the fact the we had just had sex again. It was how...okay I felt. One of my hands rested on her smooth flat stomach, and the other lightly stroked her hair. I loved the little content smile on her lips, and the small subtle shifts she made to get more comfortable. I began wondering if I loved her, and I was surprised at how that didn't upset me at all.\n\n\"You're too quiet.\" she murmured sleepily. \"Say something.\"\n\n\"I don't know what to say.\" I said honestly.\n\n\"How about that you will take the job,\" she offered. \"We could both use the money.\"\n\n\"Is this all about the money?\" I asked.\n\n\"Do you see me getting paid right now?\" she asked, opening her eyes to look up at me, her head cocked cutely to the side. \"I just really needed that. I've been dreaming about you ever since that night.\"\n\n\"I've had the same problem.\"\n\n\"A problem was it?\" she asked. \"It must have been so hard for you,\" she continued sarcastically. \"Having incredible sex with a beautiful woman and then reliving it night after night in your dreams. Poor you!\" she laughed.\n\n\"I loved dreaming about what we did.\" she confided. \"To be honest, I'd never thought of you like that before. You've always just been my younger brother, and with that came a certain mindset. When I saw your truck parked outside the Fenyx, and I thought it might be you that I was there to be with, I wondered if I would even be able to go through with it. When I saw you standing across the stage from me, you're eyes glued to me, I couldn't be sure it was you and the only thing that kept me going was that the odds were to large to fathom.",
        "\"You looked so incredible, your muscles and broad shoulders. When you finally got hard for me, and I saw how big you really were, I began imagining it was really you. It made me so wet!\" she exclaimed, letting her hand travel down to her sodden pussy. \"When I realized it was you, I came on the spot. It was so hot, being fucked by you in front of all of those people. None of them knowing that you were my own brother. God, it drove me wild!\" she shivered.\n\n\"You're a little bit of a pervert, you know that?\" I asked.\n\n\"You have no idea,\" she smiled wickedly, wiggling her body over my slowly growing erection. \"If you take the job, I'll let you find out,\" she offered.\n\n\"You really want to fuck me in front of all of those strangers every month?\" I asked curiously.\n\n\"Like you would not believe,\" she replied seriously.\n\nI didn't know why I was hesitating. I knew what I wanted. We had opened Pandora's Box, and I never wanted to close it again. I just felt like I should've been resisting this more. I still had my own reservations about having sex in front of people, but on the other hand, no one would know it was me. I could be whoever I wanted.\n\n\"I'll do it,\" I said finally.\n\n\"Yay!\" she exclaimed, jumping up to hug me tightly, letting her soft breasts mash into me as she showered my cheek with kisses. \"You're the best brother ever!\"\n\n\"Somehow I doubt that,\" I sighed.\n\n\"Trust me,\" she said seriously as she grabbed my face. \"Best brother ever.\"\n\nWith a bright bounce to her movements, she hopped off of me and finally kicked off the tangle of denim still restricting her movements, and skipped into the kitchen to pour herself another drink.\n\n\"I suppose I should call Cindy then,\" I said, reaching to pull my pants back up and reach for my phone.\n\n\"Call her in the morning,\" Krista said, walking back in only her skin and a mischievous smile, holding two stiff drinks. \"You've got a busy night.\"\n\n*** *** ***\n\nBy the time we fell asleep in her bedroom, I could barely lift my arms. I was exhausted, worn out beyond anything I could ever remember. My sister was insatiable...and loud. I had a strong impression that Krista was going to have to move again because each and every person in her building had heard her screaming for her brother to fuck her harder. I was worried about that, but not as much as I would have been only a day before. I didn't know any of these people. They could think whatever they wanted so long as they didn't know for sure. For all they knew, Krista just liked a little role play with her boyfriend.\n\nIn the morning, I woke to Krista bringing me breakfast in bed. She was wearing a cute white apron and nothing else as she climbed onto the bed to lay the tray across my lap. On the plate was an omelet and toast, with my cell phone as garnish.\n\n\"You want me to call her right now?\" I asked. \"What time is it?\"\n\n\"Noon,\" she said, crawling up next to me to cut my omelet and feed me a bite. \"I think I might have been too hard on you last night.\"\n\n\"Maybe just a little,\" I said through a full mouth, savoring her cooking. I leaned forward for another bite that she had scooped onto the fork, but she stopped me.\n\n\"Nu uh!\" she said, gesturing to the phone with her fork. \"Call first!\"\n\nI groaned playfully as I picked up the phone, and I dialed Cindy's number. It range a few times before she finally picked up.\n\n\"Cindy Avery,\" She answered professionally.\n\n\"Cindy, this is Sean,\" I said a little nervously. \"From a few weeks ago?\"\n\n\"Ah yes!\" she said. \"The shy one that can't remember to keep his name to himself!\"\n\n\"Uh, yeah. That's the one,\" I told her.\n\n\"I was thinking you weren't ever going to call,\" she said. \"So, have you decided?\"\n\n\"I have,\" I said, looking directly at my smiling sister next to me. \"I'll take the job.\"\n\nIt took some time to work out the details, especially with Cindy calling my sister and I back and forth to confirm. It was a little humorous with us both sitting right next to each other. In the end, we had a schedule, and a guarantee to be paid up front before every performance. Near the end of our little game of phone tag, Krista began to get anxious and had my dick in her mouth whenever it wasn't needed to answer questions. The girl was insatiable!\n\n*** *** ***\n\nNearly a week later, we were back at the Fenyx. It had only been a month since that night, but it felt like ages. My nervousness was gone, and in it's place was a thrilling excitement.\n\nWe were waiting for the curtain to open, and my eyes were glued to Krista across the stage from me. She had her mask on again, but I knew it was her. After this last week, I would never be able to forget her perfect naked body again. My cock stood hard and proud as I watched her twist and preen for me teasingly.\n\n\"You seem a lot more comfortable this time around.\" Cindy commented, noticing my cock. \"Did you ever get to meet her face to face?\"\n\n\"No,\" I lied. \"I think it's best to keep the mystery.\"\n\nThe red light flashed, signaling the start of the show, and a moment later the curtains opened. I took a glance out over the crowd as I walked toward the center of the stage with purpose. I still couldn't fully see our onlookers, but it didn't really matter who they were. They would never know our little secret.\n\nI climbed up onto the bed with Krista, both of us facing each other on our knees. She placed her hands on my chest, feeling me as she leaned in to kiss my neck sensually.\n\n\"God bro, I'm so fucking wet right now!\" she purred quietly. \"Fuck me like you need me!\"\n\nI growled as I felt her teeth clamp down hard on my neck, and I grabbed her by the waist, lifting her and spinning her as I dropped her tight little body on the mattress in front of me, her head facing the hidden crowd. The yelp that escaped from her surprise, nor the rich laughter that followed from her delight, were missed by our adoring fans.\n\nI shuffled myself behind her, so I too was facing the crowd, and pressed my throbbing cock to her tight hole, teasing her. My sister loved being watched, and I think I was beginning to enjoy it as well. I wanted to force her to watch them as I made her cum.\n\nJust before I let myself slip inside of my sister's warm silky center, one thought floated across my mind, I love my new job!\n\nTHE END\n\nThank you for taking the time to read my story. As always, I would love to hear what you thought, either in the comments, or private correspondence.\n\nAs this is an entry for the Nude Day contest, I would appreciate your vote, so hit them stars, and tell me how well you thought I did!\n\nSoB "
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "brother",
        "sister",
        "brother-sister",
        "sex show",
        "exhibitionism",
        "desperate for money",
        "sex",
        "public sex",
        "nude day",
        "contest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-fenyx-lounge"
}