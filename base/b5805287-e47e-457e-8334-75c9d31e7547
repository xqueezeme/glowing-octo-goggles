{
    "title": "(S)He Who Brings the Rain",
    "pages": [
        "Author's Note: \n\nAnd now for something completely different. This is not a short story, and though it is broken into sections I chose to post it as a complete piece. This tale consumed me for many months. I let it fester and grow into something much more than the original idea. It led me to research, and become fascinated with an often overlooked and misunderstood past culture of peoples. \n\nAll characters are at least 18 years old or older.\n\nI want to thank Pelgris, and Me2 for the hours of editing, and all of their advice throughout the writing process.\n\nThank you in advance for reading!\n\nPlease leave a comment or send me a private message. Let me know if you loved it, or hated it. I am always looking for ways improve my storytelling.\n\n************************\n\nPrologue\n\n________________\n\nThe Gods had gathered in the clearing before the mountain shrine on the final day of Teteo Eco. Their voices growing angry as they bickered. Thunder shook the shrine, and the wind blew mercilessly threatening to destroy the small adobe hut set before the entrance to the shrine. The Gods were well fed, but the absence of the rains weighed heavily on them. Tezcatlipoca had told them a season ago that the rains would be fewer and the people of the valley would die. \n\nAll of the Gods were very fond of the peoples that had settled in the valley. They had built great monuments and fed the Gods constantly. The Gods visited the valley with its growing islands, and great causeways that led to the greatest temple complex in the history of this world. Most had left the rest of their people to return to the old ways, letting them forget the Gods altogether. The glory of the sacrifices coming from these people were more than any other people in the world.\n\n\"If the people die, who will feed us?\" Xipe Totec asked as he stepped closer to the two beings standing at the center of the clearing. The skins of those sacrificed in his honor flapped loosely at his wrists and ankles. His bright orange eyes shining through the mask of flesh over his face.\n\n\"Yes!\" Coatlicue called out, as she stepped next to Xipe Totec. \"If the people all die, who will feed your gluttonous appetites, Huitzilopochtli?\" The snakes that made up her intricate skirt raised their faces hissing in agreement at the bronze being in the center. \n\n\"Don't worry about my appetite, Mother,\" Huitzilopochtli responded, his voice carrying like a war cry. \"I will eat very well before the end comes. My priests will sacrifice many during Panquetzaliztli.\"\n\n\"And what of the rest of us?\" Quetzalcoatl hissed, as he slithered forward, his feathers flashing blue and green in the sunlight. \"Will we be left to starve?\"\n\n\"No,\" Tlaloc's voice boomed as he took a step away from Huitzilopochtli in the center of the clearing. \"I will find a way to bring the rains and keep the people from dying of starvation.\"\n\n\"How?\" Xipe Totec spat, turning his flaming glare to the pale shimmering being casting halos of rainbows around him. \"It's your fault the drought has come. You and your bloodless deaths, and meals of tears. You have less and less control over the rains. When they do come they leave nothing but destruction in their wake. Only the four deadly Tlaloque visit this realm. The single beneficial Tlaloc is forever absent.\"\n\nTlaloc snarled, flashing long ivory fangs at the Flayed God. \"I will confer with Tezcatlipoca, and we will find a way to save the people and satisfy our need for blood in the process. I am sure we will find the balance. I will not allow many to die of starvation in the process.\"\n\nTezcatlipoca stepped from the shadow of the shrine, his ever changing grey flesh causing all of the Gods and Goddesses to look away as if their eyes burned. \"I believe I already have. You must take sacrifices. True sacrifices. Not just drowned children. Come Tlaloc, we will discuss what needs to be done. The rains must fall, and fall gently before Nemontemi, or the people will be lost.\"\n\nThe Storm God, and the Smoking Mirror disappeared into the shrine speaking quietly. Slowly, the Gods began to fade away as they returned to their duties, and pleasures, elsewhere in the realm of man or in Mictlan.\n\nChapter 1. Deliverance\n\n________________\n\nI stood at the first set of steps at the bottom of the great temple pyramid. I had been pulled from my dinner at the insistence of a messenger. The long runner had announced that I must go immediately to the temple complex at Tenochtitlan. The priests were waiting for me at the great temple. They had urgent need of me, and it could not wait until the morning. \n\n\"Did the priest tell you why I was being summoned?\" I asked tearing my eyes from the intimidating height of Huey Teocalli to look at the long runner at my side.\n\n\"No, they ordered only that you come to the temple immediately. Nothing more,\" he murmured, his eyes taking in the dual sets of seemingly endless steps leading to the summit. \"Though, I do wish they had sent a priest to retrieve you. Instead of making me come back to this temple twice, after dark.\"\n\nI offered a polite smile to the long runner. \"Tell my family I went willingly.\" \n\nI was the daughter of a small maize farmer. Common as dirt. I was willing to give myself to any of the Gods if it would benefit my family. I knew that the families of most non-warrior sacrifices were paid handsomely. My family would mourn my absence, but they would also be grateful for one less mouth to feed. Our crop had failed in the drought, and my family had been struggling to survive all season. \n\n\"I will,\" he said meeting my eyes for the first time since we entered the plaza. \"Go with the Gods.\" He turned on his heel and fled from the plaza.\n\n\"That's the only way I can go,\" I whispered watching him go. I wished that I could run after him, and return to the safety of my home. \n\nI drew a deep breath as the long runner vanished into the night. I whispered a prayer to any God close enough to hear for mercy and turned back to the Great Temple. I looked back up the dual steps of Huey Teocalli. I focused on the two figures at the top, looking down on me from the center of the platform at the top of the temple. I sighed loudly and began the treacherous climb to the summit.\n\nWe had celebrated the final festival of Panquetzaliztli, the Raising of Banners, today, in honor our greatest of Gods, Huitzilopochtli. The festival had run late into the evening. The warrior sacrifices made to the War God had been so numerous that the priests had sent sacrifice after sacrifice to Tlaloc's alter, as well. By late afternoon, blood had flown down both sets of steps like twin sanguine rivers. The bodies of those sacrificed had taken hours to cart away to be cremated or butchered. As a result, the priests had not had the time before full dark to scrub and whitewash the Great Temple. \n\nThe steps were alternatively sticky and slick with pooled blood in different states of coagulation. My assent was slow. Winded and shaking, I finally reached the apex. After taking a few steps further onto the stable limestone, I bent double, shaking and panting. I'd nearly tumbled backward down the steep steps more times than I cared to count. I had been so focused on during my long climb, that I had forgotten I had been summoned to the great heights of the temple by priests that were waiting for me.\n\nI heard one of the priests clear his throat impatiently, and jerked upright. I stared wide eyed at the figures cloaked in xicolli so blood stained they looked black in the gentle light of the moon. They stared at me coldly, their black eyes flashing in the torchlight.\n\nI looked at their bloody hands, and whispered another prayer that my family would receive payment for my sacrifice. Though seeing the priests, I didn't think any amount would be enough. They were a terrifying pair. Panic flooded my veins, and the urge to run back down the temple's steps was nearly overpowering.\n\nOur Priests rarely bathed, they wear the blood and gore of each sacrifice with great pride. They are horrid filthy creatures, glorying in the blessings of their God, as they participated in sacrifice after sacrifice. They often preached that the Gods must be fed, and they are often hungry. The priests of each of our numerous Gods seemed to believe that it would bring that God's displeasure were they to bathe away the blood shared, only bathing if Tlaloc blessed a ceremony with rain. \n\nThe priests of Tlaloc bathed more frequently and often the sacrifices were less bloody. Most sacrifices to our rain God were done by drowning. If Tlaloc required the heart it was often taken after death. The sacrifices earlier were an exception, and as a result I could not tell if the priests awaiting me were Huitzilopotchli's or Tlaloc's.\n\nYoalli Ehecatl blew at my back, pushing me to take a step toward the priests. \"You look scared half to death, child,\" one of them cackled, his black eyes glittering. \n\nThe Night Wind pushed at my back again, forcing me to take yet another step toward the priests. I couldn't tear my eyes from their bloodied hands. \"Being summoned to the Great Temple is rarely a promise to see old age, my lords.\" I glanced up at their faces. \"Especially, a summon after dark, without ceremony.\"\n\n\"Luck is with you, child, perhaps not to see old age. But our God Tlaloc has a special need of you. Please follow.\" They both laughed as they turned, walking toward the altar room occupying left half of the temple. Within seconds they had disappeared within.\n\nI looked across the landing of the temple, to the second altar room dedicated Huitzilopotchli. In the moonlight the sacrificial altar before the entrance gleamed black with the blood of sacrifice from Panquetzaliztli. I swallowed again grateful that our bloodiest God had not chosen me.\n\nTlaloc is the God of Rain. Tears and blood of our young and innocent generally satisfy him well enough. What need would he have of a twenty year old, unmarried daughter of a maize farmer I wondered silently. \n\nI walked past the brightly painted vessel of the man holding the bowl on his stomach before the entrance to Tlaloc's alter room, glancing just long enough to see that it was full of blood and hearts. I entered the altar room and immediately suppressed the urge to gag as the stench of rot enveloped me. A stone table was set directly in front of the hollow serpent statue of Tlaloc. The serpent's mouth was open revealing a bloody meal of crushed hearts. The single torch flickering above the statue offered little relief to the darkness that hung heavily in the small room.\n\n\"Our God Tlaloc has spoken to us. He tells us that this drought will kill us all unless we appease him. He has demanded we find a woman unknown by man, and present her as sacrifice.\" \n\n\"I - I don't understand,\" I whispered looking from one priest to the other. Unable to make sense of the cryptic language spoken by all priests.\n\n\"Remove your clothing. We will examine you. After, if we are convinced that you are indeed untouched, then we will take you to our great Lord and he will explain it himself,\" the second priest said, speaking plainly.\n\nI stared down at my feet, confused, failing to make sense of his plain words. Meet a God? That can't be possible. Gods no longer walk the Earth. They sacrificed their bodies to create our world; to give us life. I didn't understand. They did not speak as though they planned to sacrifice me in any traditional method. What could they mean?\n\nI didn't realize that both of the priests were staring at me, expecting me to obey their command, until one of them loudly cleared his throat. I startled and stared at them with eyes that felt too wide. \n\n\"Child,\" the plan speaking priest barked, his voice reverberated throughout the room. \"Undress, so that we may examine you and be satisfied that you are a virgin. Everything will be made clear then.\"\n\n\"Obey, child,\" the other snapped. \"Or you will die on that table this very night.\" He pointed to the same table they wanted me to lay on to be examined on. \"You will die with no honor from the Gods and will spend eternity wandering lost in Mictlan. The Gods will turn blind eyes upon you.\"\n\nI pulled my huipil over my head, watching the priests as they looked on with approval as my firm breasts were revealed. One of the priests gave a low groan then lowered his gaze expectantly to my cueitl. \"Tlaloc is impatient.\"\n\nI nodded, trying to swallow down the lump of fear that had formed in my throat, as my hands untied the sash. I glanced at the priests, and begin to unwind the long strip of crude cotton that made my cueitl. \n\nThe priests were rumored to be lecherous, and cruel when doing the quieter work of the Gods. I unraveled the skirt slowly, trying to clear the chaos from my thoughts. I had never heard of a living sacrifice being given directly to a God. I knew that female attendants regularly instructed the sacrifices, but they had spent their lives in training to serve their chosen God. Before my summons, I had never stepped foot into the house of a God. As the last of the skirt fell away from my body, I looked up at the priests, stunned by the looks of raw lust that reshaped their blood-stained faces.\n\nOne of the priests motioned that I should lie on the table. \"If we are satisfied that you are, in fact, a virgin, you will place yourself in the service of great Tlaloc,\" he explained as I moved across the small room, his eyes followed the slight bounce of my breasts.\n\nI laid down on the table, feeling the flame of embarrassment travel from my face down to my chest. One priest pushed my legs apart giving them a clear view of my sex. They took turns staring intently, their foul breath warming my tender, untouched folds.\n\n\"I don't believe she is as pure as we were led to believe. She looks to be damaged,\" one of the priests said as he stepped back to give the other room to look as well.\n\n\"Truly?\" The second asked hopefully. He stepped closer, bending over me until he nearly was touching the nearly hairless mound of my pubis. His touch was almost gentle as he parted and slightly stretched the tiny lips of my pussy. \"No, the maiden's skin is still in place,\" he whispered withdrawing his hand, and breathing a moan of disappointment.\n\nThe first priest shoved the other out of the way. \"You fool, hold you tongue!\" He hissed. \"I say she is damaged, and of no use to our God.\" He jerked my legs, dragging my body down the table until my legs hung over the edge of the table.\n\n\"No... no,\" I whimpered quietly, fearing the wrath of these priests. \n\nThe priests spent most of their days sacrificing others to the Gods. If I were to anger them, they would give no thought to bending me backward over the sacrificial altar, and letting the obsidian take my heart. If they only took my virginity, I thought, I would be lucky.\n\nThe second priest came up beside me. Grinning lewdly as he reached his hand slowly to pinch my nipple, clamping it between his vise-like fingers. \"You are right. I was mistaken. She is as damaged as the others.\" He released my nipple, only to brutally squeeze and reshape my breast. \"If we take her quickly, she'll be dead and gone when he arrives. He'll never know.\"\n\nThe first priest knelt and forced my legs apart with his shoulders. He used his filthy hands to spread the lips of my sex, and then his tongue dove into my folds. He tongued me sloppily, his teeth scraping against tender flesh. \n\nI screamed and struggled against the priests. I fought against them to try and get off the table and escape this horrible fate.\n\nI was struck hard across the face by the priest who had been fondling my breasts. \"You will stay silent, or I shall cut your throat now,\" he hissed. He slapped me across the face again, then began slapping my breasts repeatedly.\n\nSoon my breasts were painfully hot and blazed angry scarlet under the priest's hands. A silent monologue of no and please stop consumed my thoughts, muting any coherent thought. Even in my worst night terrors, I had never imagined my short meaningless life would end so brutally. Spending my last days in the service of a God no longer sounded so bad. I knew these priests would make me wish for death long before they were done with me.\n\nThe priest between my legs looked up, reluctantly breaking contact with my sensitive skin.\"We'll deflower her quickly, and then we'll take her again more slowly. Break her body and then her spirit.\" He grinned, his gaze traveling up my stomach to my bruised breasts.\n\n\"She will be fun to break then bleed,\" the second priest agreed. He leaned down to suck viciously at my engorged nipple. \n\nI cried out, feeling tears beginning to build up in the corners of my eyes. \"Please, no,\" I whispered, the words little more than a breath coming from my lips.\n\nThe priest suckling my teat released me slowly. The lust in his eyes turning quickly to rage. \"Bitch. Silence,\" he barked, striking me hard across the face again. \"What use does a God have of a virgin anyway?\" His eyes burning, afire with rage and pent up lust.\n\nI let my eyes fall closed, hot tears flowing to tangle in my hair. My face ached where I had been struck, my breasts burned. I let myself go limp, surrendering to the priests. I prayed silently to Tlaloc, begging him to intervene in someway to stop this rape. \n\nThe priest between my legs closed his teeth brutally on the tender bundle of nerves at the top of my sex. I cried against my tightly closed lips. He varied between using his teeth, and licking me almost gently. After a few moments he leaned back and then stood erect over me. \"Not that I believe Lord Tlaloc will come tonight anyway.\" His hand moved down between my legs, fingering my entrance but not pressing past the barrier of my virginity. \"I don't see why we should rush to break her. By the time he comes she will be gone, and we will have moved onto the next girl.\"\n\nI whimpered again at the words. The pain of the sharp pinch the priest gave my breast reminding me to keep silent. \"I just don't want to wait all night again,\" he replied, the rolling pinch of his fingers growing less intense.\n\n\"I will be faster, this time,\" the priest between my legs said, bringing his thumb up to grind into my clit, his thumb working hard circles around the tender bundle.\n\nThe pain of his stimulation brought my eyes wide open, along with a scream building in my throat that I had to fight to suppress. I whimpered, wordlessly begging mercy from these soulless priests.\n\n\"Stop toying with her.\" Cupping both of my tits, the priest bit one and then the other. The savagery of his teeth bringing more tears to my eyes. \"Just take her.\"\n\nThe other priest grunted his agreement, as he positioned his hips between my legs. I raised my head to watch him in mute horror, as he hiked his filthy robe up and held it bunched against his chest. Blood from hundreds, perhaps thousands, had colored his once cocoa flesh to muddy clay. He peered down at me, taking his swollen cock in his hand. \n\nI felt the tip pushing at my tight entrance. As the priest pressed forward, I set my jaw, lying to myself that I would not scream. \n\nJust before the tiny fold of flesh tore, the room erupted in electric blue light as a dozen lightning bolts struck within the tiny room. The light left me blinded, and I felt both of the priests torn away from my body. Their screams filled the altar room and echoed into the night. Lightning flashed silently within the room for several minutes. I lay frozen in terror, my eyes shut tight. The amazing power making the scant hair all over my body stand on end.\n\nWhen the room fell into darkness once more, I opened my eyes slowly. I didn't dare to move. I did not want to draw the attention of the ghostly being standing over the crisp remains of the priest that was about to rape me. \n\nI turned my head just enough to see the other priest kneeling a few steps from the being. The priest was burned, his skin blistering and most of his hair burned away. \"Please, Lord,\" the priest begged. \"I did nothing to her!\"",
        "\"Corrupt fool.\" The voice was deep, reverberating like a storm in the distance. \"Is she still virgin?\"\n\n\"She was already defiled, Lord\" The priest cried, pressing his face into the stones.\n\n\"Lies!\" The being thundered, the sound sinking through my skin, and my bones shuddered. \"Your last service to me will be your suffering.\"\n\nI turned my head away as another violent series of bolts lit the room. They seemed to come from all corners of the room, but struck only the priest. \n\nThe screams of the priest were of unimaginable pain. The air grew heavy with the tangy odor of burning blood, followed the mouth watering aroma of cooking meat. The room grew stiflingly hot. The rancid smell of ruptured entrails overpowered me, as the stink became nauseous. I struggled to keep my bowels from voiding from sickness and terror.\n\nWhen the bolts stopped again, I couldn't stop myself from looking at the priest burning and writhing helplessly at the feet of divinity. For who else, but the God Tlaloc, could call a storm within the tiny room to lay waste to the priests that had violated and then murdered the virgins he had called into service.\n\nThe God watched the priest wreathing at his feet coldly. By the God's will alone the priest was still alive. Tlaloc looked down at the burnt mass at his feet for several minutes then his ghastly blue eyes flashed to me, still laying on the stone table just below the serpent statue. He lifted his foot, then stepped down on the priest's skull. Thunder rumbled in the distance as the God chuckled, and the skull shattered beneath his heel. \n\nI closed my eyes, holding my breath and hoping that he would pass me over. Praying that the deity would take pity and not turn his lightning fire on me. I felt hot breath over my sex, and heard the God take in a deep breath, smelling me. He exhaled loudly. I jumped as his warm hand cupped my bruised cheek gently. \"Xochitl,\" he whispered my name, his voice still resounding with power but it was no longer sending tremors to my core. \n\nI opened my eyes, turning my face away. Fresh tears streaking down my cheeks afraid to look at his face. No one living should see the face of a God. I shook violently my fear of the bolts of fire worse than drowning a million times over.\n\n\"See me as I am, and fear not. The priests did not take what I need from you.\" His voice was soothing, as he took my arm and pulled me up to sit at the edge of the table. \"Before you are rewarded in Tlalocan, I have a job for you,\"\n\n\"Yes, Lord Tlaloc,\" I whispered, feeling calmer than I had just seconds ago. I turned my head to look at the God as he stood and stepped back from me.\n\nThe God stood over me, draped in a strange buckskin leather tunic that hung past his knees. He looked like the statues made to honor him. His eyes were large and colored like rolling storm clouds lit by a sickly blue-green otherworldly glow that flashed every few seconds with lightning. The flesh of his face and arms was white like the snow that covers Iztaccihuatl. A mass of curly short hair the color of dying maize framed his face. He looked my age, despite the defined cheekbones and the crow's feet at the corners of his eyes.\n\nHe smiled at me. His lips raising to reveal a mass of sharp white obsidian, his canine-teeth elongated like the teeth of a jaguar. \"I know you have questions, Xochitl. But, you must get dressed now. The night grows short and we must make it back to the mountain before Tonatiuh rises from Mictlan.\" \n\nI stood and walked slowly to my clothes, shaking violently. I glanced down at my discarded blouse and my eyes were drawn to the smoking remains of the priests. They had been reduced to blackened meat and bone, barely recognizable as human. \n\nRumbling laughter drew my attention back to the God as he examined the serpent statue. He walked around the vessel slowly. I heard him take several deep breaths, as he moved around to the front of the statue. He peered deeply into the mouth overflowing with sacrificed hearts. \n\nI had picked up the skirt, and begun the slow process of re-wrapping it, when the God reached into the craw of the statue. His hand moved through the contents until he pulled out a nearly perfect looking heart. \n\nTlaloc examined the heart, turning it slowly in his hand. His lips curved upward revealing his dagger-like fangs, and his otherworldly eyes flashed as he turned to me. He brought the heart slowly to his lips, and I could see his tongue move against the heart then his teeth were tearing into the muscle. The blood within the heart had set too long to run fluidly down his chin, it fell from the ruptured organ to land sickening plop on the stone floor.\n\nI froze in mute terror as the God's teeth penetrated the organ, before gathering the strength to finish tying the sash to hold the cueitl securely at my waist. My stomach turned and I had I turn away from the God. Shaking, I reached and picked up my blouse. I fumbled with the huipil, and dropped it twice before I was able pull the simple garment over my head.\n\nTlaloc had finished his bloody treat by the time I had finished dressing and turned back to him. He licked the blood from his lips and walked toward me. \"We will travel to my mountain in the way that Gods travel. There will be some pain, but you must not struggle.\" He wrapped his arms around me, cradling my face against his chest. \"Close your eyes.\"\n\nI closed my eyes, frozen, as the God held me tightly against him. His heart beat like a drum against my ear. His arms were like snakes twining around me. The air grew hot and began to hum around us. Tiny jolts of pain bit along my skin. I whimpered as lightning flashed against my closed eyes. The pain grew as the electric shocks grew more intense. Thunder rumbled and my skin felt as was going to burst into flame. I started to struggle against the burning of my skin.\n\n\"Be still and the fire will not burn you,\" Tlaloc rumbled, his hand holding my head firmly against him. \"But, struggle against it, and it will kill you.\" His arms tightened around me as the magic storm swirled around us. \"Almost there.\"\n\nSlowly, the burning faded back to tiny pinpricks of pain against my skin. The lightning flashed less and less. Tlaloc's arms loosened around me, and his thumb stroked against my bruised cheek. He held me against him long after the air had cooled, as Yoalli Ehecatl danced around us. \"You may open your eyes now.\"\n\nI opened my eyes. We stood in a clearing before a small hut, and behind it I could make out a shrine in the moonlight. The altar room on the great temple was gone. \n\n\"The hut belongs to my priest,\" the God whispered to me, his thumb still moving gently against my cheek. \n\nI tensed against him, the thought of more corrupt priests driving my panic even higher. My breasts and cheeks still burned with the punishing attention I had only moments ago suffered. \n\n\"Calm,\" he hushed me, and liquid calm flooded through my veins. \"He is loyal and will care for you. I should have sent him to find you. Those horrible priests raped and killed three girls before they summoned you to my temple. It was only chance that I visited the temple tonight. The lure of all of the sacrifices was too much for me to resist.\"\n\nTlaloc released me, stepping back as a priest in a long dark blue xicolli came out of the hut. The priest was only an inch or two taller than I. His black hair gathered into a long plait that brushed the backs of his thighs as he walked toward us. He looked nothing like the priests that maintain the temples in Tenochtitlan. They were filthy monstrous beings with partially shaved heads, forever covered in sacrificial blood.\n\n\"I will show you to your room in the shrine,\" the priest told me, his Nahuatl heavily accented. He gently took my arm and lead me down the path around the hut to the entrance to the shrine. \"You need to rest. I will bring you your meal when you wake up. Then I will take you to the pool to bathe, and to the temazcal to steam and purify your soul.\"\n\nI glanced over my shoulder at the God. He gave a close-lipped smile, his glowing eyes flashing rapidly. Lightning flashed around him, and then he vanished. I startle, and the priest gripped my arm a little harder.\n\n\"Our God has many duties. He will return tomorrow after night has fallen. He will explain your purpose then,\" he whispered as he turned me to the shrine. He lead me inside, our steps echoing through the maze of torch-lit hallways leading into the mountain itself. \"He told me that you were nearly raped by the priests at Huey Teocalli, and that he has punished them.\"\n\n\"How did he tell you?\" \n\n\"I hear him when he wishes to speak to me.\" The priest responded simply, releasing his gentle hold on my arm. \"I do not know how. But it has been like this for years. Our God brought me into his service when I proved unfit for sacrifice when I was twelve.\" \n\nWe stopped in front of a small door. The priest stepped directly in front of me and examined my face closely. \"Your cheek will bruise.\" He said with a sad smile, then he reached and opened the door. \n\nThe room beyond was small, but held raised bed of reeds covered in blue cloth. The bed sat against the wall opposite the door, with a small window cut into the rock high up on the wall. There were two mats for sitting, and a short wooden table against the wall to the right of the door. A small candle burnt on the table filling the room with soft light.\n\nI walked across the room, and ran my hand over the softness of the bed. It was covered in woven cotton, and stuffed with down feathers. My bed, at home, was a hard mat of woven reeds. \"This is for sleeping on?\" \n\n\"Yes. It is your bed,\" the priest laughed.\n\n\"I've never slept on anything so soft,\" I whispered turning back to the priest. \n\n\"You are dear to our God. He has a great purpose for you,\" he told me. \"You will help bring the rains, and save the people of your valley from starvation.\"\n\n\"I don't understand.\" I sat on the plush bed, watching the priest as he hovered just a step from the doorway.\n\n\"I know you do not. And I can tell you no more,\" the priest said with a shrug, stepping out into the hallway. \"You must sleep soon. I will bring you some chocolatl to help you sleep. You may call me Iztali.\" He closed the heavy door, and I heard a beam slide across it, locking me in.\n\nI heard Iztali move down the hallway, and I took several deep breaths trying to process everything that had happened since my simple dinner of atole with my parents and siblings. Within moments of the priest leaving the wave of calm from Tlaloc's influence receded, and I began to cry. \n\nMy cheeks and breasts throbbed from the priest's hands. Though they hadn't actually taken my virginity, they had raped me. Their rape left me feeling hollow and dirty. I was so afraid of what I would be made to do when Tlaloc returned tomorrow. And even though he seemed kind, the priest scared me. I knew that my mind was incapable of understanding the God himself, but I knew his eyes would haunt me for the rest of my life, however long that may be.\n\nI didn't know how much time had passed, before the beam across my door was lifted. Iztali came in carrying a large mug of frothy brown liquid. He handed me the mug, and then wiped away my tears. \"Drink. It will soothe your nerves and help you to sleep.\"\n\nI sipped the drink cautiously, it was heated but not hot. I took a larger drink, relishing in the rich flavor of the chocolate drink with several spices added giving it a spicy and sweet flavor. I moaned, and drank down the rest of the mug in a few large gulps. \n\nThe priest looked on, his eyes wide with surprise, laughing. \"I have never seen someone drink down chocolatl that quickly.\"\n\n\"I've never had chocolatl before.\" I handed him the empty mug. \n\n\"Truly?\" Iztali asked, he sat my mug on the small table, and sat on the bed.\n\nAs he turned to me, I startled. He seemed kindly, but he was a priest. And I knew very well the cruelty priests were capable of.\n\n\"His influence has worn off,\" The priest said, nodding in understanding.\n\n\"When you left,\" I told him, forcing myself to remain seated on the bed. \"I want to cry and scream. I'm so afraid of everything I have felt and seen tonight.\"\n\n\"Yet, you sit and drink chocolatl,\" Iztali laughed. \n\n\"I can do nothing more. You have me trapped here. Wherever 'here' is,\" I whispered. \n\n\"You are at the sacred site on the mountain,\" The priest told me simply. \"I'm here to comfort you. I will not hurt you in any way. I have been ordered to keep you as calm as possible until our God returns. He will calm you then, instruct you, and then you will get to work.\"\n\n\"I don't understand any of this. I think that I have already died and I am on the path to Mictlan. That my journey to my afterlife just isn't what we had been told it would be. I think that the priests took my heart and threw my lifeless body down the steps of the great temple.\" I lay down on the soft bed, and wept. \n\nIztali lay down beside me, wrapping me in his arms. \"If you are dead, then what do you have to fear?\"\n\n\"Everything.\" I turned my back to him and cried. \n\nHe held me, humming a child's song. Letting me cry away the terrors and wonders of this night, until I fell asleep.\n\nChapter 2. Learning to Ride the Storm\n\n________________\n\nI woke covered in warm blanket of leather and rabbit fur. The door was open, and Iztali was in the doorway looking in on me. He held a tray with two bowls of pozolli and two mugs of chocolatl. His smile was kind as he handed the meal to me.\n\nSunlight streamed in through the tiny window, as I ate my meal of thick meaty stew. I couldn't remember eating anything so good in my entire life. \"You have a strange accent,\" I told the priest between mouthfuls.\n\n\"I am far from my home. My people worship our God, but there he is known as Chaac,\" Iztali told me, sitting down on the cool stones in front of me. \n\n\"How did you come to be a priest of Tlaloc so far from your home?\" I asked swallowing mouthful of stew.\n\n\"I was chosen to be one of four children guaranteed as sacrifice in my village. We were covered in sacred mud, and lowered into the cenote to tread water until we could swim no longer and drown. But I would not sink. Even exhausted, I floated at the surface of the water.\" \n\nThe priest closed his eyes, and continued speaking. \"I watched as the other boys slipped beneath the surface of the water. I watched them as the sank into the darkness. Then additional sacrifices were offered to the God. It was left to the God to take those he wanted. The priests would retrieve those that survived after a day and a night, and they would be honored in the village. I watched most of them drown.\n\n\"The day passed, then the night. The sun rose, and the ropes were lowered to bring the survivors back to the surface. I was brought out of the water as well.. My family was ridiculed, and were cursed by the Gods. Because I would not drown I was banished from my village and forced into the jungle. The priest in our village said that if I remained, my failure to go to my watery death would destroy our village.\" Iztali opened his eyes, and turned his attention to finishing his pozolli.\n\nHe set his empty bowl aside, and sipped from his mug. \"I began to hear the God whispering to me on my second night of exile. I had found shelter in a cave. A storm was tearing through the night, and I could hear laughter in the storm as Chaac, Tlaloc, rode the storm on his way to my village. I prayed to him, begging his mercy and forgiveness for my failed sacrifice. I heard his laughter as he showed me the destruction of my village. He told me that because I had not drowned, I should have been honored by my people. The priest had damned my village to eternal torment.\"\n\n\"I wandered in the jungle for days, but it wasn't until I nearly fell prey to a jaguar that the God showed himself to me. He killed the great cat, and gave me it's body. He explained to me that I was bound to him for my entire life, and he brought me here with his magic. He explained that every failed sacrifice has a purpose, and that my purpose is to serve him in this shrine,\" The priest chuckled. \"So here I am. And the jaguar skin keeps me warm at night.\"\n\nI let the priest's story settle in my mind, as I tried to imagine how terrifying it must have been to have been dropped into a well, to be expected just to die. Though I still believed that downing would be easier than the death that the priests of Huey Teocalli suffered. \n\nWhen I had finished my meal, the priest took the empty bowl and mug, and vanished into the hallway. He returned a few moments later. \"It's time for your bath. Our God will be here just after sunset, and he is eager to begin.\"\n\n\"Begin what?\" Fear knotted in my stomach and I fought to keep my meal down.\n\n\"I cannot say,\" Iztali said frowning slightly. \"But I can feel his excitement. I have never felt an emotion so strong from him as this.\"\n\n\"I'm afraid,\" I told the priest, standing slowly.\n\nThe priest nodded in silence, and led me through the maze of hallways. We emerged from the shrine and into a hidden garden in a fissure of the mountain. A small stream fell from a waterfall into a pool just beyond the garden. \n\n\"Undress and wash in the pool,\" The priest instructed me. \n\nI removed my blouse and my skirt and waded into the brisk water obediently. I felt the priest's eyes following my every movement, but I did not fear this priest in his pure blue xicolli and his long braid of clean black hair. He would do as Tlaloc bid.\n\nI washed the sweat from my skin, and scrubbed under my arms. I cleaned my tender breasts carefully, wincing at the bruises. I passed my hands dismissively between my legs, and worked down my legs.\n\n\"Clean between your legs as well. I must apply an ointment to you in the temazcal. The God will touch you there,\" Iztali told me, his discomfort obvious, as he turned to pick up my discarded huipil, my sash, and long swath of rough fabric that was my cueitl. \n\nI felt my cheeks blaze, as I moved into deeper water to wash between my legs. I ran my hands over my skin scrubbing at the sensitive flesh. After several minutes, I began slowly making my way out of the pool. \"I think I am clean.\" \n\nThe priest nodded, and walked back through the garden to the temazcal, just a few steps from the rear door of the temple. He ducked and walked inside the steam hut. The air inside was already heavy with fragrant herbs which were smoking on the low banked coals. \n\n\"Please sit, and enjoy the steam. Take deep breaths, the herbs will help keep you calm,\" Iztali said, motioning to the granite bench against the back wall of the hut. He stepped out through the doorway, and removed his robe. He took time to fold his xicolli and set it and on the roof of the temazcal. My clothing was left in a pile on the ground.\n\nI watched him through the doorway, as fear of his nudity coursed through me. He was not erect, but I knew from my horror with the priests that the small bit of flesh between his legs could quickly become something so much more frightful. I sat and pressed my legs tightly together, my hands covering my breasts, as the priest came back into the hut. \n\nIztali sat beside me, and gave a sad sigh. \"I know that this is terrifying to you. I am regretful for what I must do.\" He laid a hand gently on my knee. \n\nI jerked under his hand, and fought not to move away. \"What - what are you going to do?\" I stuttered, my eyes darting to the tool between his legs.\n\n\"Not that, I assure you!\" He said with a snort, following my gaze between his own legs, the corners of his mouth turning up. \"Our God would do more than call the storm to cook me alive. First, I must braid your hair. Then I must touch you, inspect you, and oil you.\" \n\nI nodded, and turned so he could braid my hair and tie it with a small cord. When he had finished he pat me gently on the shoulder. ",
        "\"We don't have a choice in this, do we?\" I turned and laid back on the bench, my legs pressed together at my knees, my feet still on the floor.\n\n\"No,\" The priest said, lifting one of my legs up onto the bench. \"We do not have a choice.\" His fingers moved down my legs. I watched him in mute terror, as he reached to gently spread my pussy lips. \"I need to check to make sure that the priests did not penetrate you. Tlaloc did not smell blood, but has asked I inspect you.\" He leaned close, his breath cool on my heated skin. \"Good. Good.\" \n\n\"I could have told you that they didn't,\" I whispered, as the first hot tear ran from the corner of my eye. \n\n\"I know. We have no choice, remember,\" Iztali said, leaning down and picking up a small container. \"This is an oil that will bring the blood to the surface of your skin, it will feel like ice and fire at the same time.\" \n\n\"You're going to put it between my legs?\" I asked, as another tear fell. \n\n\"Yes,\" He told me, dipping his fingers into the oil, and then gently massaging it into my pussy. He dipped his fingers again coating more oil on my sex. He made sure my clit was well covered, and even reached further between my legs to coat the tiny pucker of my ass. Satisfied that I was well oiled, he took the container, and moved to the door of the hut. \"When he arrives, our God will come for you here. Take deep breaths. Let the oil soak in. And do not touch yourself.\" He took his folded robe, and my clothes with him. \n\nWithin minutes of the priest leaving, my oiled flesh began to tingle, growing hotter with each breath. I wreathed, as I sat on the bench, sweating from the steaming heat. I knew that the moisture from my body and in the air was driving the oil deeper. \"Gods have mercy!\" I prayed as my pussy grew swollen and wet. \n\nI watched the sky grow dark, trying to focus on breathing the calming herbs. Trying and failing to ignore the throbbing between my legs. My mind ran rampant in fantasies. I wanted Tlaloc to hurry to retrieve me. The oil made me want to touch myself, and I would welcome the hands of the rain God flowing over me. I wanted him to kiss my sex like the filthy priest had. His snow white hands moving over my breasts, his tongue between my legs. I wanted to be deflowered by divinity. His dick piercing me, and lightning raining down from the mountain.\n\n\"Xochitl,\" The God's voice rumbled to my core. My pussy spasmed as I jerked to my feet. He stood just outside the hut. \"The oil appears to be doing a very good job. Perhaps too good.\" His eyes were alight, flashing like lightning behind a veil of clouds. \n\nI walked stiffly across the small hut and stepped out into the evening air. The tiny contractions in my sex of the near orgasm warring with the churning fear rolling though the rest of me. He held out a light blue xicolli, which he gave me whispering words in a strange tongue. Shaking, I took the robe from him and draped it over my shoulders. \n\n\"Come.\" He turned and walked through the doorway leading back into the shrine. His leather tunic moving against the backs of his milky legs. \n\nI focused on the strangeness of his clothing and of the backside of deity as we walked through the halls. Distracting myself from the throbbing between my legs, and from the terror of what I was about to face. His golden curls were cut short forming a halo around his head. He was much taller than I. The top of my head did not even come level to his shoulder. His feet were not human, each of his toes ended in long black claws.\n\nHe stopped walking abruptly in front of a small door, and I nearly crashed into his back. I yelped, and took several hurried steps backward. He opened the door revealing a table shaped identical to the table I'd laid on the previous night. The only difference was this one was made of smooth polished wood, not stone. The room was very well lit with a torch on each wall.\n\n\"Mercy,\" I whispered, as Tlaloc turned his glowing eyes expectantly on me. \n\n\"You know where to go,\" The God said, his eyes flashing. \n\nI sobbed, and slowly moved to to the table, shuddering. \"Where would you like the xicolli?\" I asked pulling the fabric tightly around me, before untying the sash at the waist.\n\nTlaloc said nothing, as his hands moved around my shoulders, lifting the robe away. I turned around and looked up into his strange eyes, willing him use his influence to calm me once more. \n\nHe placed his hands on my hips and lifted me to sit on the table. \"The arousal has gone in this wash of fear. You are pure and purified,\" his voice resounded with power, as he looked down at my nude body. He hands moved up my sides, then over my breasts gently. \"I will show you what I need of you, and then I will help you through the first. The rest will be yours alone.\"\n\n\"I don't...\" I gasped as he rolled my nipples between his fingers. \"I don't understand.\"\n\n\"Lay back,\" He whispered, his eyes flashing again. \"I will show you.\" \n\nI shivered under the force of his gaze, then reclined on the table. He ran his fingers lightly down my legs. Spreading his hands around my ankles, his thumbs stroking the inside of each. Then he lifted my legs to rest on the edge of the table. \n\nHe knelt down peering at my sex. I could almost feel his gaze as it moved up my body to meet my eyes. \"The others will be bound like this.\" \n\nHe brought his hand up, and rested it lightly between my spread legs. I tried to be as still as possible under his hand, but the oil made my hips rock under his hand. He ran his hand down my sex until only the tip of his middle finger pressed my clit. \"You will focus your attentions here, but you may touch their bodies anywhere you like.\" \n\nI bucked weakly against the pressure of his finger, and whimpered loudly. He shushed me, and moved his hand to spread my pussy. He leaned close and ran the tip of his tongue along my sex. His hands moved up over my breasts, brushing against the bruised nipples gently. He licked slow circles around the bundle of nerves until I moaned, and my head fell back.\n\n\"Good girl,\" he whispered against my flesh. He kissed my clit and sucked at the tiny nub pressing his long teeth into the soft flesh of my pussy. His tongue danced over my sex as I began to move my hips, my fear washing away as as I was consumed by passion from his attentions. \n\nI moaned and cried out as his mouth worked against my pussy. I felt the heavy burning pressure building deep inside me. It built into an inferno at my core. As the wave of pleasure was about to crash over me, Tlaloc pulled back, leaving my pussy smoldering and cold. \n\n\"Please, don't stop,\" I whimpered. \"I was almost there. Almost.\"\n\n\"I know you were. And that is why I must stop.\" The God stood, reaching and picking me up effortlessly. He set me down on the ground, and then handed me back the xicolli. \"The first should be prepared and waiting for us. It is time for you to go to work.\"\n\nI pulled the robe on, breathing hard. I took a moment to catch my breath after I had securely tied the sash of the xicolli at my waist. The God watched me patiently while my breathing slowed, and I willed the throbbing between my legs to become less. I took a few deep, steadying breaths. \"I'm ready,\" I told him, finally, turning toward the door.\n\nTlaloc stepped in front of me blocking the doorway. He stared intensely, his hand under my chin forcing my eyes to meet his. He eyes bore into mine for a long moment, then he smiled almost proudly down at me. \"Brave girl,\" he said quietly, reaching out to run his hand against my cheek. Then he lead me out of the room and to the door just across the hall. \n\nThe door opened as the God stopped in front of it, and Iztali stepped out. \"I have confirmed her virginity.\" He looked up at Tlaloc. \"She is bound, oiled, and gagged as you requested, my lord. There are tools beneath the table should you desire them.\" \n\nThe God nodded at the priest saying nothing, and then stepped into the room. The priest and I stood outside the room looking at each other. After a moment, Iztali gently pushed me toward the door. \"Go. I will have a mug of chocolatl waiting for you.\" I heard laughter in his voice, as he moved down the hallway.\n\n\"Better make it two,\" I whispered stepping inside the room, as a scream shattered the quiet of the shrine. \n\nThe screaming girl was naked and bound, as the priest had said she would be. Her ankles were firmly tied to the table, spreading her legs wide. A thick soft rope across her stomach held her securely to the table Her arms were bound above her head. She was gagged with a bright blue strip of cloth, though it did little to quiet her. Her eyes were enormously wide as she stared at Tlaloc, fighting against the ropes holding her to the table. Beneath the table several feathers, a painter's brush, and a long reed had been arranged just below the girls spread legs.\n\nI shoved all of my own fear down watching the helpless girl. The God simply stood looking down at the girl, the glow of his eyes and the occasional explosion of lightning within casting sickly blue light across her bound figure. \"Calm her,\" the God whispered to me, never taking his eyes from her. \n\nI stood watching the girl, as I worked out the best way to soothe the girl. Then I stepped in front of Tlaloc, blocking her from the shocking sight. \"Hush now,\" I told her firmly. \n\nShe quieted, blinking several times as she worked to focus on me. Her eyes were showing too much white. \n\n\"You have been chosen for a great honor,\" I told her, kneeling down next to her head. \"You will experience glory that no one living has ever dreamed of. You will feel the touch of a God. At that God's will you will feel pleasure like you have never imagined. I am here to attend you. But you must not be afraid.\" I hoped that I had not lied, nor offended the God. \"Alright?\"\n\nThe girl stared blankly at me for a several long minutes. Her breathing slowed, and finally, she nodded.\n\n\"You feel the oil the priest put on you, don't you?\" I whispered, moving closer to her face. \"Do you feel how it is like fire and ice at the same time? How it feels both amazing and terrible. It makes you feel huge in that most small of places.\"\n\nShe closed her eyes, moaning. \n\n\"Your passion is like nothing you have ever imagined, isn't it?\" \n\n\"No,\" she moaned through the gag, shaking her head violently.\n\nI caught her face in my hands, holding her so my lips brushed the cloth that cut across her mouth. \"What if I could bring you release from that heavy desire?\"\n\n\"Yes...please,\" she cried loudly against the gag. \n\nI kissed her lips beneath the gag. \"Close your eyes, and feel only the passion. The pleasure.\" I kissed her closed eyelids, humming the same child's song I had fallen to sleep to the night before. \n\nI stood slowly, turning back to the God with a less than humble smile. \"Calm,\" I mouthed. \n\nThe God was kneeling, watching the girl as her breathing became slow and deep. Her hips pumped the air, as she waited for our touch. \"Magnificent,\" he whispered, standing and moving toward the girl's sex.\n\nHe stopped a few steps back, and motioned that I should stand between the girl's legs. I took my place with the God's amazing presence at my back. He knelt, and then pulled me to sit on his knees, putting me eye level with the girls sex. \n\n\"For the others you will have a chair to sit on. But this will do well tonight,\" Tlaloc whispered.\n\nThe girl whimpered hearing the thundering bass of his voice so close between her legs. Though her hips still moved under the magic of the oil. \n\n\"Touch her, work the oil in, but do not break the maiden's skin. Here.\" He pointed to the small opening of her sex. His voice vibrating to my core, reminding me of the passion he had worked up in me, then denied me it's release. \"That's mine.\" \n\n\"Of course, my lord,\" I whispered, leaning forward as I brought my hands up, running my thumbs over her outer lips. Her flesh felt smooth and wet under my fingers, as I spread her lips to peer closely at her sex. \n\n\"You are free to do whatever you wish with her.\" He leaned down, so his lips moved against my ear. \"You may use your hands and mouth on her only, as I did with you. Or there are tools here to heighten her experience, if you choose.\" His teeth closed on my earlobe, forcing a moan from my throat. \"But she, like all of the others, must orgasm no less than twice.\" His tongue moved over my ear. \"And once you have done your duty, I will give you more pleasure than I give to them all.\"\n\n\"How many?\" I breathed. He ignored my question as he kissed and nipped my ear. My eyes fell closed, as his teeth closed on my ear, and my hands fell away from the girl. I felt the fangs pierce my ear, and he began sucking earnestly. \n\nI hissed out a breath at the small pain, opening my eyes, and bringing one hand to back up to the girls sex. I moved my thumb in slow gentle circles around her clit, as the God bit my ear a third time. She and I moaned in unison. Tlaloc growled, and then released my ear. The vibration traveled through me to the girl's pussy. \n\nI used my hands to stretch her sex, forcing her tiny pearl into the air. I leaned forward to run my tongue around and gently over it. The girl's moans encouraging me, as I pet and kissed between her legs. I found that she moaned louder and strained against her bonds when I rubbed, or licked her clit firmly. \n\n\"Don't stop,\" the girl cried against the gag. Her hips pumped wildly against my face. I felt a contraction move from her pussy, and watched the muscles of her abdomen bunch as she screamed wordlessly. \n\nI started to pull away, but the God pressed my face back into her sex. I sucked her clit back into my mouth, spearing it with my tongue. Tlaloc growled again, as he folded himself over me, so the sound reverberated through me to the girls sex.\n\nShe screamed again, another contraction rolling through her lower stomach. Her hips jerking, as she began to try to move away from my mouth. The rumbling of the God slowly faded, and he sat upright behind me. He pulled me back from the girl, and we both watched her as she danced under the memory of my touch. After a few minutes she grew still, except for the heaving of her chest as she lay panting. \n\n\"Amazing,\" I whispered, watching moisture drip from the tiny forbidden hole, and puddle on the edge of the table. I was acutely aware of the moisture between my legs, my sex throbbed. My hips were undulating slowly without any conscious thought. \n\n\"She has one more in her, then she will be ready for me,\" Tlaloc whispered leaning down again to capture my ear in his mouth. He teeth punctured my flesh again, and then only his lips worked the tiny bit of flesh. He sucked at my ear, and my eyes fell shut, remembering his mouth between my legs. His tongue moved against the sensitive flesh of my earlobe, as the girl's breathing became deep and even. His mouth moved down my neck, and I tilted my head giving him better access to the flesh. He kissed my throat, and I waited for his teeth to pierce me there as well. \n\nBut he sat back up, and raised his hand to touch the girl's sex, she barely moved under the light touch. \"I will show you what comes after your work is done. But you cannot stay for the full show.\" He dropped his hands to lifted me again. He moved off his knees, and settled again, his legs crossed. He lowered me back onto his lap, and I felt the wooden hardness of his sex against mine. Separated by only the leather of his tunic and the fabric of the robe I ground my hips wantonly against him. \n\n\"Be still and watch,\" The God whispered, his lips moved against my ear. He rubbed his index finger along the wetness of the girl's sex, coating it. He ran his finger up and down the length of her slit, then slowly began pushing the finger into the core of her. \n\nThe girl moaned and her hips rocked upward. \"Oh Gods, yes,\" I heard the girl whisper, as Tlaloc slowly pushed the finger inside her. \n\n\"You've done well,\" the God rumbled, turning his hand and slowly pulling his finger back out of her. He bend his finger catching the maiden's flesh, and stretching it. \"See how the flesh has not broken, she is ready to be taken. The flesh here will stretch much further with your work. Almost enough that I could take her gently and not spill blood.\" He withdrew his finger, and then began pushing two fingers into her. He lifted his other hand to her sex, and began to move his fingers over her clit, coaxing a long moan from the girl. \n\n\"But I don't intend to take her gently.\" Tlaloc pushed a third finger inside her, and I watched the skin at the bottom of her opening tear. The girl only moaned again, any pain from the loss of the flesh was lost to the pleasure of his touch. When the god withdrew his fingers there was the smallest amount of blood. He brought his bloodied fingers to his mouth and licked them clean. His other hand still rubbing the girl in small circles. \n\n\"I have called Iztali, he is coming to collect you. I do not have the control I wished,\" he growled, pushing his fingers back inside the girl. He kissed the side of my neck viciously as I watched his fingers pump in and out of the girl, her hips moving with the rhythm. Her moans growing louder as he worked her toward another orgasm. His teeth pressed into my flesh, as he growled, and forced a fourth finger inside the girl. \n\nThe girl screamed in pain as much as with pleasure, as she stretched to her limit. I moaned, willing the God to forgo the girl and take me in any way he desired. I felt his hardness move against me. His hand left the girl's clit as he wrapped his arms around me, holding me to him tightly.\n\nI cried out as his teeth slid into the tender flesh of my neck. Then his lips sealed against my throat, and I felt him swallowing mouthful after mouthful of my blood. I knew only the pleasure of giving myself to the God. The burning of my sex was nothing to the bliss of giving my life to feed his. In the back of my mind I thought I should fight to live, that he was likely killing me, but it felt so good. My eyes fluttered closed as I went limp.\n\n\"Take her,\" the God growled. \n\nI opened my eyes, as I slumped sideways, dizzy. Then Iztali was taking me from Tlaloc's lap and carrying me out of the room. I heard thunder boom though the shrine, and the girl screamed again. \n\nThe priest carried me to my room, and laid me down gently on my bed. \"How many times did he bleed you?\" He asked turning my head to look at my neck, my ear.\n\n\"Three..Four...\" I breathed. \n\n\"And yet you live.\" The priest turned my head to look at the damage to my other ear. My head rolled bonelessly as he let go of my face.\"He used an amazing amount of restraint. He could have left you a dried husk in the minutes between his call and my arrival. You are a lucky girl.\"\n\n\"I don't feel lucky,\" I whispered, my eyes rolling. \"Take me back. I want him to kiss me again..\"\n\n\"Not yet, he needs you to bring the rains,\" the priest reminded me, sitting on the bed next to me. \"What did you do to drive him so far from his normal control?\"\n\n\"I don't know. I calmed the girl, like he asked. I made her orgasm, like he asked. And then he showed me the next step.\" I closed my eyes and reliving the last few moments in the room. \"It was amazing. I want him to kiss me again. I want to see the final step.\" \n\nThe priest watched as I struggled to sit up. Finally, he placed his hand behind my back and pushed me into a sitting position. \"I do not think the finality of that step will appeal to you once your thoughts have cleared,\" the priest whispered. \n\nI said nothing as I rubbed my neck where the God had kissed me. I felt the punctures from his teeth, and felt my abdomen cramp with both pleasure and fear. \"Did you say I could have chocolatl?\" I asked trying to keep from thinking too hard about just how close I came to being a sacrifice.\n\n\"Of course,\" Iztali grinned. \"I will go and get you a mug.\"",
        "Thunder rolled through the shrine, shaking the mountain, and I looked out my tiny window, expecting to see a storm. The night sky was bright clear.\n\nThe priest returned with two mugs of chocolate bliss. He handed me one of the mugs, and raised the second to his lips.\n\n\"Do you think the rain will come tonight?\" I ask, drinking down most of my mug in a few swallows.\n\nIztali laughed watching me as I gulped down the chocolatl. \"No. No rain tonight. But soon I think,\" he told me as his face sobered, and he frowned thoughtfully.\n\n\"I asked our God, but I don't know if he heard me...\" I murmured after finishing my mug. \"Do you know how many I will need to...you know?\"\n\nThe priest continued to frown, then shrugged. \"I do not know. Four, maybe five total... maybe.\" He reached and took my empty mug, and then set it on the floor. He sipped from his nearly full mug, watching me over the rim. \"Are you feeling alright?\" \n\nI thought for a few minutes, feeling the individual parts of my body. \"I'm very tired,\" I said finally. \"I don't feel dizzy anymore. My neck hurts.\" I rubbed my legs together, my core still burning with desire. \"And you need to dilute the oil, it lasts forever.\"\n\nThe priest chuckled. \"I cannot do that. Our God made the oil specifically for this purpose. Though do not touch yourself for pleasure.\" His smile faded. \"That is forbidden.\" \n\n\"What will happen to me if I do?\" I asked, squeezing my legs together again. \n\n\"If I think there is a risk of that, I will have to tie you up while I am not present to stop you.\" He frowned, then turned toward the doorway expectantly. \n\nA moment later, Tlaloc stepped into the room. The air seemed to crackle around him, as he came toward my bed. His gaze made me shiver as he came toward me. \"I expected to find you asleep,\" he said, as he cupped my cheek turning my head to survey the damage to my neck. His lips brushed my temple as he stepped back to stare down at the priest and I. \n\n\"I wasn't quite ready for sleep yet, and Iztali promised me chocolatl,\" I said quietly, turning my head to look back up at his pale face. \n\nThe God laughed, flashing deadly fangs. \"The priest has said that you down that foul concoction faster than anyone.\" \n\n\"It is very good. I like it,\" I replied meekly. \n\nTlaloc leaned over me, wrapping his arms around my shoulders. \"Go to sleep, Xochitl,\" He rumbled, his lips once more resting on my forehead. \"Your work begins before sunset.\" \n\n\"Come, priest,\" the God ordered as he left my room. Iztali wished me a good sleep, and promised he would wake me if I slept too long. He gathered our mugs and blew out my candle.\n\nI laid down, pulling the warm rabbit fur blanket up to my shoulders, and quickly fell asleep. \n\nChapter 3. Mastering the Art\n\n________________\n\nIt was after midday when I woke. My door was open, but Iztali was not waiting in the doorway for me. \n\nI didn't know if I was allowed to leave my room, so I resigned myself to wait for the priest. I yawned and looking out the tiny window. I felt better than I had last night, but I knew the intensity of what I experienced had exhausted me. My neck was stiff, but it hurt less than my breasts which were still bruised from the rough treatment from the dead priests. \n\nI didn't need to wait long, within moments, Iztali poked his head in to check on me. \"I did not think you would be awake yet. Though it is just as well that you are. Come. We will eat in my hut. I have a tochtli over the fire that should be almost done.\" \n\nWe made our way to the front of the shrine, and then inside the priest's simple hut. Against the far wall, there was a small raised platform bed covered in stuffed cotton and an assortment of furs, though I could easily make out the hide of the jaguar among the other furs. The hearth had a medium sized rabbit sizzling over a low fire, and a pot filled with steaming water. A small wooden table held several spice jars, several ears of maize, a few avocados, and a bowl of soaking beans. There were also several tamalii wrapped in maize husks. There were a few shelves on the walls holding plates, bowls, and a few mugs. The hut made me think of my family's small dwelling, immediately making me feel comfortable. \n\nThere were two woven mats on the floor, and Iztali motioned that I should sit. \"The tochtli will be done soon,\" he told me turning the rabbit over the fire. \"It is not likely that you will see Tlaloc until the night before the storm breaks. He will come after you have finished with your duty, but I will see you to your room before his arrival. You will work alone, but I will always be nearby. And I will fetch you once you have finished.\"\n\n\"Have I displeased him?\" I asked, the fear of disappointing the God was heart wrenching. My desire to please the God went so much further than any other living person, except maybe Iztali.\n\n\"Not at all,\" the priest reassured me. \"After last night, he does not wish to risk harming you before you have completed your part in bringing the rains.\"\n\n\"And once I have?\" I asked after several minutes. Finally asking the question made my stomach churn with both terror and excitement.\n\nIztali frowned, abruptly standing to pull the hare from the fire. He set it on a plate to cool while he began preparing our plates. He spooned a portion of the beans onto our plates, and sliced an avocado. Then he separated the meat of the rabbit from the bones, and placed a healthy portion of meat onto both plates. He brought both plates, and handed me mine. \n\n\"Your silence is answer enough,\" I said taking my plate. \"I thank you.\" I had been hungry, but now my appetite was gone. \n\n\"It is not that I do not wish to answer your question. It is that I do not know the answer, nor does the God,\" the priest explained, watching me pick up a tiny bit of meat. \"It would be easy to say that you will be sacrificed, but that is not the full truth. He will take you, that much I know. Your virginity will be his. Beyond that I do not have the answer.\" \n\n\"That is more than I know a moment ago and I find comfort in that.\" I offered the priest a weak smile, and set the plate down. \"Forgive me, Iztali, but I am not hungry.\" \n\nHe nodded. \"Perhaps after you have finished your duties tonight.\" He ate his meal, his stomach untroubled by my fate. Once he had cleaned his plate he stood again, and set his empty plate on the table. \"We will leave your plate in your room. Come. You must bathe, and then spend time in the temazcal.\" \n\nWe made our way back through the shrine to the small oasis in the mountain. I removed my xicolli, folded it, and placed it on the roof of the steam hut. I bathed in the crisp water of the pool, taking the time to unbraid my hair, and wash it in the small waterfall. \n\nWhile I bathed, the priest moved through the small garden gathering a variety of herbs which he took into the temazcal. When I had finished in the pool, I joined him. \n\nIn the steam hut, the priest brushed my hair with his fingers, and then braided it again. We sat side-by-side for a little while, and then he reached for the oil.\n\n\"Must we?\" I asked, already laying back and spreading my legs.\n\n\"Tlaloc's orders.\" Iztali coated my sex in the ointment, and then patted my knee. \"I must prepare tonight's offering. I will return for you when she is ready. Let the oil do it's work, and remember do not touch yourself.\"\n\nI huffed as the priest left, already feeling my sex grow thick. Within moments of the priest leaving, I had pressed my thighs together tightly. My mind revisiting the terror and wonder of the previous night. I felt a phantom of the God's mouth on my sex, felt his teeth in my neck. \n\nThe day moved slowly. The priest found me sitting with my hands pressed firmly against the bench, staring blankly out the door of the hut. The herbs and the oil were intoxicating, and I sat in a haze of lust. \"She is ready for you,\" Iztali said, as he stood peering into the hut. \n\nI stood slowly, swaying for a moment, before putting the robe back on, and following him blindly to the girl.\n\n\"She is bound and oiled like the last one. I did not gag her. There is cloth to do so, if you wish,\" the priest told me as we stopped outside a closed door. \"She must orgasm no less than twice.\" \n\nI nodded silently, and pushed into the room. The girl's eyes were closed tightly, her lips moving silently in prayer.\n\n\"Who are you praying too?\" I asked her, as I sat on the chair that had been positioned between her legs.\n\nShe must not have heard me come in, and startled with a jerk. \"Who are you?\" She whispered.\n\n\"I am just a girl, like you,\" I told her, looking down at the tools Iztali had left. I reached down and picked up the painter's brush, and held it up for the girl to see, before brushing it gently across her sex.\n\nThe girl yipped as the brush moved over her sensitive flesh. \"Please, don't,\" she begged. \n\nI shushed her gently, while continuing to run the small brush over her pussy. \"The God Tlaloc has chosen you to love this night. I will show you a shadow of the pleasure he will bring you.\"\n\n\"I don't understand,\" the girl cried, trying to force her legs closed.\n\n\"I know you don't, but I will show you,\" I whispered. \n\nI used my fingers to spread her pussy, and expose her clit. I ran the brush over the tiny pearl until clear liquid began to seep from her. \"See, it feels good,\" I whispered, and covered her with my mouth.\n\nShe moaned, as my tongue lapped at her, her hips rocking to meet my mouth. Her first orgasm was nearly immediate, catching us both by surprise. She came with a squeal, her hips bucking wildly. \n\nI sat up, watching her pussy spasm as the orgasm rolled through her. \"One down,\" I whispered, setting down the brush, and touching her flesh with both hands. I rolled the bit of skin that hid her clit between my thumb and forefinger gently, and was rewarded with another long moan. \n\nLearning from her reactions to my touch, I was able to tease her for a long time. I held her teetering on the edge of her next orgasm, watching her pussy begin to spasm, and then pulling back and letting only my breath touch her for several minutes. \n\nI compared the girl from last night with this one. This girl seemed to prefer soft indirect touches. I used a small feather and ran it lightly over her oiled skin. She whimpered, and then her pussy contracted as her second orgasm washed through her. \n\nI gave her a few moments to calm, before I touched her again. Rubbing her clit directly for only a few seconds, and then gently brushing my fingertips down her entire slit. I kissed her sex with my mouth, lapping at her center but not pushing my tongue into her core. I listened to her breathing, her moans and her cries. When she was close I would pull away and give her a moment to breathe. Then I would start again, running my fingers over her sex. \n\nA long time had passed, with her straining against her restraints. As I worked achingly slowly. She began crying, and begging for me to touch her harder. Finally, I covered her sex with my mouth again, and sucked hard, stabbing her clit with my tongue until she screamed and rocked against me. \n\n\"I need more,\" she cried, after she had recovered from the third orgasm. Her hips pumped the air.\"I feel empty inside. I need more.\" \n\n\"I know you do,\" I whispered to her, as I stood and moved away. \"The God will be in very soon to give you all you wish, and more.\"\n\nI moved to the door and pushed it open. The priest was there beaming at me proudly. \"Well done,\" He said, as we moved down the hallway toward my room. \"You learn the art of women quickly.\"\n\n\"The art?\" I asked as we stepped into my room.\n\n\"Absolutely,\" Iztali said, sitting on my bed, and offering me my plate of cold rabbit. \"Pleasing a woman is most certainly an art. You can force a woman to orgasm if you stimulate her enough. That is just the way the Gods made you. But to truly pleasure one, especially one tied and frightened, takes true skill. Each woman responds differently to each touch.\"\n\nI ate my meal listening to the priest's words with interest. \"It just seems kinder to encourage them to enjoy it.\" \n\n\"It certainly is kinder for them, and makes the next steps easier,\" The priest said, taking my empty plate, and standing.\n\n\"What happens to them... after?\" \n\n\"Tlaloc takes their virginity. Pleasures himself, and them. Then they are sacrificed,\" He told me. His voice as matter-of-fact as I had ever heard it. \"Their only purpose is to help to bring the rains. Once they have done their part they are sent to Tlalocan to reap their reward for eternity.\" \n\n\"You said it would likely be four or five total?\" I was weighed the lives of the women, the three that the corrupt priests took, and mine. I nodded to myself, it was a beneficial trade as long as the rains came to bring back the dying crops and could save the lives of many thousand. \n\n\"I did. But I am not certain. The ways of Gods are complicated.\" The priest stepped into the hallway. \"I will return soon. I am going to go and make us our nightly chocolatl.\"\n\n\"That sounds lovely.\" I stretched out on the bed, and closed my eyes. I worked to keep my thoughts simple, and not to think about the fate of the women, or my own. But my thoughts quickly became focused on just that, I could hear the girl's sounds of pleasure it I listened hard enough. She was not screaming yet, but her moans and cries suggested that it wouldn't take much longer. I tried to imagine what pleasure Tlaloc was giving her. \n\nThe priest returned with the frothy mugs of chocolatl, startling me. \"Did I wake you?\"\n\n\"No, I was dreaming, but not asleep.\" I sat up, and took the mug when he offered it. \"Thank you.\" I was determined to sip the drink tonight. \n\nWe sat drinking the chocolatl listening as the girl began to scream in pleasure. I immediately became wet and tried to hide my discomfort.\n\n\"Don't be embarrassed by your own arousal,\" the priest said, obviously trying to comfort me. \"That too is the way the Gods made you.\" \n\nI shook my head in dismissal of Iztali's words. \"Not comforting,\" I told him, as I lifted my mug and emptied the cup.\n\n\"Nor are my final duties tonight,\" the priest responded sadly.\n\nI rolled my eyes, trying to hide my fear of what he must do. \"Let me guess. Oil?\" \n\n\"Smart girl,\" The priest said, holding the dreaded container up for me to see. \n\nI cursed, and fought the urge to throw the mug at him. \"Of all that I have endured here, the oil is the worst.\" I sat the mug on the floor. \n\nI lay back down on the bed, and waited for the priest to finish his chocolatl. I still heard the girl, her screams had turned to loud moans again, as the God put her through her paces. \n\nIztali finally finished his drink, and turned to me with the container. I split the robe, and lifted my legs, vainly hoping that he would tell me he had been making a joke. \n\nThe oil was cold as the priest liberally applied it to my sex. But within seconds I was consumed with the arousal it brought, and my hips rolling slowly. The priest covered me with my xicolli and pulled my blanket over me. \n\n\"I don't think I will sleep much tonight,\" I said as the priest stood and moved to the head of the bed.\n\n\"I hope you find some rest.\" He lifted two lengths of rope, and reached for my right wrist. \"I regret that I must also restrain you. The risk that you would pleasure yourself in your sleep is too great.\"\n\nI let the priest take my arm, then raised my left wrist for him to bind as well. I was crying silently by the time he had secured the ropes. \n\nHe moved to the foot of the bed, and tied one of my legs as well. \"I have left as much slack as I can. You should be able to find a comfortable position, but cannot reach yourself.\"\n\n\"Please, go away, Iztali,\" I whispered trying not to sob. I rolled away from him, and curled around myself as best I could manage with the ropes. \n\n\"Forgive me,\" he whispered, and he leaned down and to kiss my temple.\n\n\"Thank you for the slack in the binding. But please go away,\" I whispered again, my voice hitching and ending in sobs.\n\nI heard the priest leave, and my door pulled closed. I did not hear the bar set across it, though I was tied to the bed, so it made sense. After several minutes I rolled onto my back, crying and staring at the dark ceiling of the room. I could hear the girl as she began crying out another orgasm. \n\nI knew that I was going to die. That was a certainty. I knew it even when the long runner brought me to the great temple two nights ago. I wanted to believe that my death would be swift, but I felt I was dying already. That my death would be long and slow, and that I just just beginning to suffer. \n\nThe girl's screams ended abruptly, and the night was silent except for the roll of thunder in the distance. The oil felt like liquid fire between my legs.\n\nChapter 4. Wind and Change\n\n________________\n\nI turned away from the priest as he shook me awake, and cursed. \"Go away.\" \n\n\"You must eat, and bathe. I have let you sleep as long as I dare,\" Iztali said, and he untied my wrists and ankle. \n\n\"Not hungry,\" I muttered wrapping my arms around myself, and curling into a ball.\n\n\"You should eat anyway.\" He pulled the blanket off me. \n\n\"Bath. Temazcal. Oil. Girl. Oil. Ropes. Sleep.\" I said, listing how my days would go until I died. I rolled out the bed, then walked out of my room toward the pool without waiting for the priest.\n\nThe priest caught up with me a few steps from the pool. \"You should fit 'Eat.' in there somewhere. You need your strength.\"\n\nIgnoring the priest and his insistence I eat, I dropped my xicolli on the ground and stepped into the pool. In the night, I had moved beyond aroused and fear and had settled into an angry acceptance. I washed myself, taking pleasure in washing away the ointment as well. I sat smiling in the water for a several minutes as the cold water gave relief to my burning sex, even if it would only be a few minutes of coolness, before the priest applied it again.\n\nI stalled in the pool as long as I dared, and then moved passed the priest, and into the steam hut. \n\nFreshly oiled, I stepped into the room. The girl was struggling, trying to free her hands. She was bound in the same way as the previous two girls, and I wondered for the first time if I would be bound in the same way when my time came. \n\n\"It is no use,\" I told her bitterly, shutting the door behind me. \"Our dear priest ties amazing knots.\" \n\nShe slowly turned angry eyes to me. She spit an amazingly horrible curse, as I took my place between her legs. \n\n\"My mother is an honorable woman, but you probably have the rest correct. I will likely wander wanton and wailing until the end of time,\" I said, looking at my selection of tools for tonight's adventure. I had the usual assortment of feathers, and the brush. But there was also a peculiar shaped piece of wood, and a small container of oil. \n\nI picked the piece of wood up and examined it while I spoke to the girl. \"You have the honor of being pleasured by a God, he will fulfill your every desire, but only after I have pleasured you first.\" \n\nThe piece of wood was shaped like a cylindrical blade. It had a tapered tip, then gradually grew thicker, before becoming thin again, with a wide base. It was just slightly longer than my hand, and was about a wide as three of my fingers at the widest point. I sat it down, only able to think of one use for a tool like that, and I had been forbidden to take the girl's virginity. \n\nI touched the girl's sex gently, her hips jerking as she tried to move away. \"Close your eyes, feel the pleasure I offer.\" She cursed at me again, crying. \n\nI filled my lungs with air, and blew my breath slowly across her sex. She whimpered, and her pussy clenched tightly on itself. I repeated the process, knowing that the oil was a persistent aid, and she would relent and begin wanting me to touch her. ",
        "After the fifth long breath, she moaned, and her hips rocked up. I fought not to grin, as I tentatively brushed my fingers over the moist folds of her sex. She shuddered and moaned as my fingertips traced over her. \n\n\"Please...\" Her hips moved against my fingers. \n\nI leaned forward, moving my lips over her pussy, my tongue snaking out to caress her clit. I kissed her sex gently, exploring her folds. When she came she was silent. Holding her breath as the inside of each thigh shook.\n\nI brought her three more times. Each time I thought she might cry out, but she never did. Finally, I stood. \"The God will be in to attend to you soon. I wish I were where you are tonight.\"\n\nThe girl looked at me, her chest still heaving with her last orgasm. \"Is he truly a God?\" She asked just as I was about to leave.\n\n\"Yes,\" I told her. I heard the door open, and knew Iztali was there waiting. I turned and walked through the door, leaving the girl for the God. \n\nI walked back to my room, stepping around the two mugs chocolatl, a plate of four tamalii, and the container of horrible oil on the floor. I flopped on my bed laying flat on my back, my arms above my head.\n\nThe priest was only a few steps behind me. He scooped up the mug and the plate. \"Sit up, Xochitl. If you do not eat this. I will have to force feed you atole.\"\n\nI groaned sitting up, taking the mug and the tamalii. \"I'm not hungry, really.\"\n\n\"Eat one. And drink your chocolatl,\" Iztali ordered, sitting on the bed. \n\nI unwrapped the tamalii from it maize husk, and took a bite. I stifled a groan. It was still warm, and full of beans and chili. It tasted like home. \n\n\"These are wonderful,\" I told the priest, sipping my chocolate. I unwrapped another, and moaned. \n\nThe priest watched me eat in silence. I ate the four tamalii, and drank all of my chocolatl. \"I knew you would be hungry,\" he said finally, as I handed him the plate and mug. He sat them on the table, and picked up the oil.\n\nI nodded, ignoring the familiar twinge of fear. I lay back down on the bed spreading my legs. I watched the priest, as he move my robe out of the way. \"What was the wooden thing for, Iztali?\" \n\nHis cheeks immediately became red, as he dipped his fingers into the oil. \"You cannot pierce their sex, this is true.\" He coated my pussy with the dreaded oil. \"But some women enjoy being penetrated elsewhere.\" He coated his finger in the oil again, and ran it over my sex, continuing down to my ass. My breath caught in my throat, as he moved his finger in slow spirals there. \"If you choose to use it, stretch them slowly with your fingers first.\" \n\nI lay frozen as I found a new level of arousal. The priest continued massaging the pucker of my ass, and then slowly slid his finger inside. I whimpered, as he pushed his finger in and out of me a few times. Soon, I felt a wave of pleasure begin building, my ass clenching.\n\nIztali pulled his finger from my ass, and gave my pussy a few apologetic pats. \"No orgasms for you, my dear.\"\n\n\"Tie me up and go away, evil priest,\" I spat, raising both my arms above my head. \"I won't be able to sleep at all tonight.\" \n\n\"Me either,\" The priest said with a bitter laugh, as he stood. He looked down at me, and spread his xicolli so I could see his arousal as well.\n\n\"That doesn't help,\" I growled, my mind filling with the image of his smooth cock sliding into me. \n\n\"I know.\" He bound my arms, and then my leg. \"Try to sleep. The girl is quiet, perhaps that will help.\" \n\n\"Cold comfort,\" I grumbled, turning onto my side and trying to ignore the heaviness of my sex.\n\nOnce Iztali had left, I rolled back onto my back, and stared up at the ceiling again. Tonight my thoughts turned to the priest. I wondered if he was allowed pleasure, or if like me, he would suffer with his pleasure unsatisfied. I knew that he waited outside as I pleasured each girl. That he heard their cries. And tonight he touched me, and was aroused. \n\nI silently questioned if Tlaloc the only living being at this shrine getting any pleasure. The distant roll of thunder was my only answer. \n\nChapter 5. Glorious Sacrifice\n\n________________\n\nMy arousal had slowly faded as the night passed, leaving my pussy feeling burnt and swollen. I had managed to sleep a little while waiting for the priest to return. The sun rose, and the day passed slowly. \n\nI had planned out my duties for the night. And was hopeful that perhaps the God would have what he needed, and this would be the last night. I stared out the open doorway, willing the priest to come and fetch me for hours.\n\n\"Would you like your meal before you bath, or after you finish tonight?\" The priest asked me, coming into the room.\n\n\"Before,\" I grinned when I saw him, eager to be untied. \"Please untie me, I've been awake forever. I can't get comfortable for more than a few minutes at a time.\"\n\nWe shared a meal of maize still on the cob and fish. I bathed, and joined the priest in the temazcal. When the priest applied the oil, I hissed out a breath of pain. The ointment immediately making my sex burn. \n\nI ignored the discomfort as the priest and I walked back through the shrine, to tonight's girl. \"Are you sure you don't want to come in to help tonight?\" I asked. \"Last night inspired me.\"\n\nIztali laughed, and shook his head. \"As much as that appeals to me. No. Our God would flay me slowly, and feed me my own flesh. I will wait for you here. You can tell me about it while I oil, and tie you later.\"\n\n\"Evil priest,\" I told him, frowning, before going into the room to meet the waiting girl.\n\n\"Finally, someone is here,\" the girl said, raising her head as I stepped into the room. \"Oh. You are not what I expected,\" she harrumphed, laying her head back and staring at the ceiling. \n\n\"What were you expecting?\" I asked as I slowly made my way toward her.\n\n\"A pack of horny priests. Or some strange being come to ravish me,\" she whispered, her hips gyrating. \"Why else would that priest have tied me up like this, then coated my pussy with magic that makes me think I could orgasm forever if something would only touch me. And then he just left me here alone for hours. Can you imagine?\"\n\n\"Oh, yes. I can imagine it very well. And I can see exactly why you might think that,\" I said with chuckle. \"You're not far off, you know. There is a strange being that will come to ravish you this night. But only after I have touched you, and made you cum as many times as I wish.\" \n\nThe girl smiled at me suspiciously at me. \"Truly? You aren't just telling me this so you can rip my heart out while I am a pathetic wanton creature?\"\n\nI sat in the chair between her legs. \"Truly.\" I picked up the painter's brush, and a large hard edged feather, and held them up for her to inspect. \"I want to rip nothing from you except your screams of pleasure. Should we start with one of these? Or would you prefer a more direct approach?\"\n\n\"I've died and gone to the most amazing afterlife there is,\" she moaned. \"The feather first, please.\"\n\nI stood and ran the feather over her fluttering eyelids, down her cheek, across her lips, and down her throat. I moved slowly down her body, flicking the tip of the feather over the tips of her nipples, and using the hard edge to move in lazy circles around her breasts. She struggled against the ropes that held her, as the feather tickled and teased. Her hips pumped rhythmically, as I worked down her stomach. I moved it over the outside of her hip, and then around to the inside. \n\nShe sucked in a breath, as I moved the very tip of the feather over the outer lips of her sex. Then ran the edge up the very center. \"Gods, that feels so good.\"\n\nI sat down in the chair, and played the feather over her sensitive flesh. Using the very tip to cajole her clit and push back the slight hood that it hid beneath. I used the feather like a small whip, and slapped her several times, before covering her with my mouth and sucking her small clit into my mouth.\n\nShe bucked against me and screamed, as I held fast. My tongue flicked over and over against the tiny bundle of nerves. The first orgasam was amazingly intense. Her legs shook, and her abdomen rolled. Her cunt shuddered, and spasmed. I held her in my mouth and licked the sweet nectar as it ran from her. \n\nI was acutely aware of my own throbbing sex, and fought to keep from reaching my hands between my legs to release my own pent up arousal. I squeezed my legs tightly together, and released her sex drawing back slowly. \n\nI ran my hands over her, using my thumbs to spread her lips. I peered into her sex, seeing the bit of flesh that nearly blocked her virginal entrance. I used my index fingers to trace the outside with my fingernail. She groaned and lifted her hips, begging me silently to push into the mysterious depths. I pushed my finger against her. Sliding into my first knuckle before sighing, and turning my attention lower. \n\nI used the lubricant seeping from her sex to generously coat her ass. She whimpered, rolling her hips to push her ass against my probing finger. I slid inside her slowly, and was surprised the warmth and softness within. I moved in and out of her, matching the undulation of her hips.\n\nI withdrew long enough to dip my fingers into the small pot of oil. And then pushed my middle finger inside. I found my rhythm, fighting not to rock my own hips in synchronicity. I slowly eased my index finger inside, stretching her gently.\n\nThe orgasm caused her ass to clench around my fingers buried knuckle deep. She howled as she came, her whole body shaking. \"Oh God, you are amazing.\" I forced my fingers apart, and she screamed as another orgasm overtook the last. She whimpered as I gradually withdrew my fingers from her ass. \"Please don't stop.\"\n\n\"Not stopping,\" I told her, reaching down and picking up the wooden toy, and holding it so she could see it. \"Just trying something new.\"\n\n\"Are you going to put that...here?\" She wiggled her ass.\n\n\"Oh yes, I'm going to push it inside you slowly. Then I am going to leave it there. While it's still inside you, I'm going to lick you here.\" I used my thumb to rub a few circles around her clit. \"And then I'm going to leave you like that for the God.\" \n\n\"Please!\" She cried out, and I watched as she orgasmed at just my words. Her eyes rolling, as she tossed her head back, her body shaking. \n\nI coated the oddly shaped toy generously with oil, and then began working it carefully into her ass. Pushing it in a little at a time, before nearly withdrawing completely, then advancing again just a little further than the time before. \n\nAt it's widest she hissed, her hips jerking downward, as she tried to escape the intrusion. I withdrew, just a little, and held it in place. I understood the purpose of the toy's base, it gave me a non-oiled surface to hold while I worked it into the tightness of her ass. \n\n\"Shh,\" I whispered, holding the toy in place, and leaning forward to kiss her sex. I used just my lips, mouthing against her sex. I felt her relaxing, as she began moaning again, her hips moving just a little. I started to move the toy again, not pushing to the widest point, but moving closer and closer.\n\nAs we neared the widest point again, I began licking her. Running the flat of my tongue over her clit repeatedly. I hovered at the widest point of the toy, and sucked her clit into my mouth. Spearing the sensitive flesh viciously as I pushed the wooden toy inside her to the base.\n\nHer screams echoed through the shrine. Her hips jerking wildly, her arms straining at the ropes holding them above her head. \n\nI continued my assault on her pussy, coaxing three more orgasms from her, before I pushed away from her. The desire to slide my fingers inside her pussy almost overwhelming. I stood and left the room quickly.\n\nI closed the door, and pressed my back against the door, my eyes closed tight. I was breathing too fast. I fought to slow my breaths, before I finally opened my eyes.\n\nIztali was standing in front of me, looking as though he were getting ready grab hold of me should I start to fall. \"She sounded like she was a lot of fun,\" he said with a smile, but his tone was sad. \"Tlaloc will enjoy her greatly.\"\n\nI nodded, and then pushed away from the door. I didn't want to keep the girl from enjoying the rest of her night because I was blocking the door Tlaloc would come through. \n\nI walked to my room, frowning as I remembered that this would be her last night, and I despaired that this would be her first and only night of passion on this world. I flopped onto the bed, my mind shifting from melancholy to hopeful. If the God did not get what he needed from the girl to bring the rains tonight, then I doubted any could. \n\nThe priest and I drank our nightly chocolatl, but did not speak. We both listed to the sounds of the girl, as the volume of her cries increased then quieted, and then increased again. I managed not to gulp down my mug, but too soon it was empty. \n\n\"Ready?\" The priest asked, as he patted my leg, reaching for the oil. \n\nI pleaded silently for a reprieve, but laid back while he coated my sex again. I shuddered, but not with passion. The oil was like fire, and I couldn't hold back the tears that sprang to my eyes. \n\n\"Try to sleep,\" Iztali whispered after he had tied me. \"I know I will not.\" \n\nI laid listening to the girl until the first light of dawn was breaking. She had screamed until she was hoarse. If I listened hard enough, I imagined that I could hear the sound of flesh slapping against flesh. \n\nI had become so used to the sounds of her cries that it was almost startling when the girl's screams stopped abruptly. The morning was silent, except for a rolling of thunder somewhere far off. \n\nChapter 6. Bitter Ashes\n\n________________\n\nThe rain did not come the following day, though the sky was overcast and gray. I had been so sure the fourth girl would be the magic number. Her pleasure had been amazing while I worked her over. She had screamed her orgasms nearly until sunrise, as Tlaloc thoroughly enjoyed her as well. \n\nShe had not been the one. Nor was the girl after that, or the one after, or the one after. The thunder each night never sounded any closer. My days had all run together after that night, and I didn't know how many girls I had 'worked' since.\n\nI had stopped speaking to Iztali after the seventh or eighth girl. I fell into the monotony of my captivity. I woke each day, ate my meal, bathed myself, spent my time in the steam hut where my sex was covered in the oil, serviced a girl before the God came to have his way with her, then returned to my room to drink the only pleasure left in my life, before the priest covered my pussy in more oil, and then bound me to my bed. Most nights I heard the rumble of the ghost storm that never manifested before I fell asleep.\n\nI was so swollen and tender that with each application of oil I had to fight not to cry out, or jerk away from the priest's gentle hands. I no longer felt arousal, only the endless burning throb of the blood coursing through my sex. \n\n___\n\nOne morning before the sun rose, I lay drifting. I was not awake, but I wasn't dreaming either. Voices drifted into my room from the hallway as the priest and the God walked in front of my door.\n\n\"I fear she is too obedient, and she will never do what is needed,\" the priest had said.\n\n\"If she will not do it for passion, then eventually she will do it out of spite and hatred. Either is just as well. We will just continue to wait her out,\" Tlaloc had replied. \n\n\"Of course, my lord. She has just grown so...\" The voices faded as they walked down the hall.\n\n___\n\nSeveral days later, in the temazcal, the priest pinched my pussy lips after covering them in oil. I cursed and jerked away from him, glaring and crying. \"It's bad enough that you touch me. But unless he has told you to do it, don't pinch me again.\" \n\n\"Are you in pain?\" The priest asked, his kind eyes full of concern. \n\n\"Does it matter?\" I muttered, wiping the tears from my eyes then waving my hands in the direction of the shrine. \"Go prep the girl, priest, bind her eyes and gag her. Blind and gag all of them until the end.\" \n\nWhen the priest told me she was ready. I walked to the room in in a haze of anger and pain. I immediately took my seat. I didn't speak to the girl, nor did I hear anything she said to me through the muffle of the gag. I ignored her cries, and began working her clit, running my finger in endless circles, until her pussy contracted. Forcing her to orgasm without any pleasure from it. \n\nI repeated the process, as I grew more angry. Jealous that after I left the room, the God would come and soothe her. That soon she would be wreathing in pleasure, while all I had was the endless ache between my legs. \n\nI fought the desire to shove my hand into her sex. To tear her precious maiden's flesh, and let her virgin's blood drip from her pussy onto the floor. \n\nWhen she had orgasmed a second time under my insistent touch, I stood and walked out of the room. I never looked at her face. I glared at Iztali in the hallway, and retreated to my room. I drank my chocolatl in a few large swallows, not tasting it. I did not wait for the priest to sit and drink his. \n\nI laid down, shifting my xicolli, and spreading my legs. I lay like that for a long time, waiting while Iztali drank his chocolate, staring down at me between swallows. I glared up at him, willing him to hurry. I was so tired. \n\nThe cursed thunder rolled in the distance, The priest nodded in acknowledgment as if he heard more in the distant noise than I, his eyes turning to the window as if looking for the storm. Seeing only the endless stars he sighed, and sat down his mug. He sat on the bed, and gently spread the oil. \n\nI turned my head away, determined not to pull away, or let him see the tears again. When he had finished, I felt the bed move as he stood, but I did not turn my head to look at him. He left the room without tying me to keep me from touching myself. That hadn't been a risk for many nights now. I didn't think I could feel anything akin to pleasure. \n\nTonatiuh rose, but I thought nothing of his return, his warmth and light gave me no comfort. My thoughts grew darker, as I fantasized using the cordage to tie a noose. I saw my feet kicking, slower and slower. \n\nI paced the length of the small room, acutely aware of the way my thighs rubbed together. My eyes burned with unshed tears, as I imagined shoving my hand into the next girls cunt, and ripping her heart from the tiny hole. I felt like a wounded jaguar trapped in a small cage, I wanted to lash out, and make someone else bleed. \n\nI was still pacing, hours later, when Iztali came, carrying a bowl of pozolli. I took the bowl when he offered it, and ate standing in the center of the room. I didn't taste the savory meat or the avocado. I didn't taste anything except the bitterness of my despair. \n\nWhen I finished, the priest tried to comfort me. I pushed away from him as he tried to wrap me in his arms. \"If you hug me, I will cry,\" I whispered, seeing the heartbroken expression of the priest. The misery I heard in my voice was unbearable. \"I don't want to cry anymore.\"\n\nAs I bathed, I fell into a deep numbing calm. The water soothing away some of the pain. Finally, I just sat down in the shallow water, and waited for the priest to insist I join him in the temazcal. I closed my eyes, and listed to the music of the waterfall. \n\nI heard splashing, and looked up to see the priest moving through the water toward me. \"Is it time?\" I asked, and started to stand.\n\nThe priest shook his head as he removed his robe and tossed to the bank of the pool. \"No, Tlaloc will not arrive until much later. We have a little more time tonight. You looked comfortable here, and I wanted to come and sit with you.\" He sat down slowly. \"We don't need to speak, if you do not wish. I have come to enjoy your company.\" ",
        "\"I enjoy your company as well, Iztali. Most of the time.\" \n\nHis eyes went wide in surprise as I called him by name. I hadn't called him by his name in a very long time. \"Thank you, Xochitl.\" \n\nI turned back to watch the water cascading from the top of the chasm to the pool. The water caught the afternoon sunlight, casting a rainbow. \"How many girls so far? I've lost count.\" \n\nThe priest's mouth moved silently as he counted. \"Four and twenty,\" he told me after had he counted a second time. \n\nI nodded, still watching the waterfall. \"Four or five was a very poor estimate.\" I couldn't keep the despair from my voice.\n\nThe priest only nodded, before standing and walking back across the pool. He gathered a variety of herbs in the garden then disappeared inside the stream hut. \n\nI sat in the cold water for a while longer before I stood, and followed him. The temazcal was full of steam when I entered. I sat on the bench beside Iztali resting my head on his shoulder, as we both breathed in the herbs. We watched as the sun's light faded, leaving the garden in deep shadow. \n\nDarkness had fallen when the priest startled, moving away from me. \"He will arrive soon,\" He whispered. \n\nI said nothing, only turned on the bench, and presented my sex to the priest. The oil felt different as he carefully covered my swollen my flesh. It was too dark in the temazcal to make out his face, or even see if the container was the same. \n\nI sighed, and sat back up when he patted my knee to signal he was done. I waited for several minutes expecting the burning throb that was always present between my legs to become worse as it did each time more oil was applied. It did not, it was just added slickness between my legs. \n\nAfter several more minutes, the priest stood. \"You should go to work.\" He reached down in the dark and helped me to my feet. He held my hand just a little too long before letting me go. He gave me my robe, and walked nude into the shrine.\n\nI followed him back into the shrine. Someone had already lit the torches, and the hallways seemed very bright after the darkness in the garden. Neither the priest nor I spoke as we stopped in front of the closed doorway. The girl within was crying loudly, her hands, or head, pounding against the thick wooden table. \n\nThe priest eyes were sad as we listened to the girl within, but he managed a forced smile as he rolled his head in the direction of the door. I nodded knowing that I needed to get to work. I kissed him on the cheek, before I turned and stepped into the room.\n\n\"Please untie me,\" the girl begged through gag, as I walked across the room and took my seat between her legs. \"Let me go.\"\n\nI ignored her as I had so many before her. I looked down at her sex as I considered how to make her orgasm. I sat and picked up the container with the oil the priest left in the room each night, and liberally coated my fingers. \n\nShe screamed as I brushed my fingers up and down her sex. I settled into a slightly gentler routine than I had taken with the girl the night before. But I still forced both of her orgasms.\n\nAs her cries quieted, I stood and leaned over her, still moving my hand against her. I took a few steadying breaths, as I shaped my hand into wedge, and shoved three of my coated fingers brutally into her pussy. I felt the extreme tightness, and then flesh tearing as I took her virginity. I withdrew my hand, turning it slowly to see it was streaked with her blood. I pushed my fingers back inside her, as she continued to scream in pain. \n\nI looked up as Tlaloc materialized at the head of the table. His eyes illuminated his entire face in their green glow, and flashed with red lightning. His lips were drawn back in a snarl. He flicked his hand in my direction, and I thrown to the ground several feet from the table. The light in the room was dwarfed by lightning that filled the room. Bolts of red, green, and blue fire filled the small room, striking the God, the girl, and the stones. \n\nI scrambled to my knees facing the dead girl, and the God standing at her head. I forced myself to straighten as blue and green bolts stuck the stones all around me. I rested my arms on my knees, wrists up in offered sacrifice. I strained to stay still, and not flinch away from the lightning as it crackled around me. My closed my eyes, and awaited to the God to take his vengeance. \n\nI felt heat building in the room, and heard the crackle of wood beginning to burn. I opened my eyes just enough to see red and orange flames licking over the table. The table becoming a funeral pyre for the girl. Lightning was still striking within the room, but with less frequency. \n\nTlaloc was no longer standing at the head of the table. He was either gone, or was standing in the room somewhere behind me. I focused to slow my breathing, rebelling against the screams of my body to escape the room. Self preservation was no longer an option. I knew if I took her virginity I would face the wrath of the God. I had dreamed this for many days. If the God did not kill me, I would remain kneeling until Iztali came and took my heart.\n\nI remained as still as I could, as a bolt of green fire split the stone of the floor inches from my knees, a fraction of the bolt splitting off to strike my bared, upturned wrist. My entire body erupted in pain, every muscle jerking, and I was nearly thrown from my knees. The air was driven from my lungs, and I could not force my body draw another breath. \n\nI fought the twitching of my rebellious body, and tried to convince my lungs that they no longer needed air. I leaned my body backward, raising my head to bare my throat, welcoming the next volley of lightning. My chest was hitching as it demanded my broken lungs draw air. My heart was thundering in my ears as it beat faster, the rhythm becoming erratic. As I let my eyes fall closed, I thought that I saw Tlaloc looking down at me from behind me. \n\nLight flashed before my eyes, and my body jerked and danced involuntarily, as my body was struck by several bolts. Each strike igniting every nerve with unimaginable pain, my mind screamed in agony. I felt my hair catch fire, burning away to my scalp in a flash of searing heat. I felt my mouth open to scream in silence. \n\nThis was death, I told myself as my body toppled backward to land limply on the stones. My chest continued convulsing, and I felt the beating of my heart begin to slow. My eyes opened and I saw Tlaloc kneeling above me. I looked on the beauty and terror of his face. His frowning eyes were so pale they were grey, as he looked coldly down on me. His jaw was clenched tightly. His mouth was set in a tight-lipped line. \n\nI was content that his face was the last I would see. My vision slowly grew dark and I saw nothing. Blind, I fell into the blackness of Mictlan.\n\n\"Xochitl.\" I could hear the God call me, distantly, and felt his hand press down over my chest \"Live.\" My lungs drew in the burning air. My head swam, and then I was floating in the ether of unconsciousness. \n\nChapter 7. Bringing the Storm\n\n________________\n\nI regained consciousness slowly. 'She is waking.' I heard Iztali say, but his voice sounded strange, as though he was speaking in my head. His hand was cool, as it stoked the baldness of my head. \n\nI heard Tlaloc's reply, but it was far away, like the wind speaking. 'I will be there in a moment. Keep her calm.' \n\nI opened my eyes, and blinked up at the priest. I was laying on my bed with my head resting on his lap. \"Hi,\" I whispered, feeling my lips crack as I tried to smile up at him. It was day time, and sunlight caught in the hair at the top of his head. I could see the highlights of brown and red within the blackness of his hair.\n\n\"Hi,\" he whispered back. His eyes filled with tears, even as he forced himself to smile down at me. \"Do not try to move. Your body is burnt from the lightning's fire.\"\n\n\"I should be...was...Dead,\" I whispered. I remembered watching the God's face as my vision died with the rest of my body.\n\n\"Sacrificed, yes,\" Iztali said, his eyes glancing up at the door. \"Tlaloc brought you back after your heart stopped.\" \n\n\"He was so angry with me. He burnt her up, and...\" I felt tears fill my eyes. \"Why am I alive, Iztali?\"\n\n\"Shh. Don't cry.\" His fingers touched my face gently, brushing the tears from the corners of my eyes. \n\nI heard the God's voice whisper in my mind, 'I am here. Bring her to the pool.' \n\n\"Yes, master,\" I heard Iztali respond, though his lips did not move. I closed my eyes, breathing deeply. My chest was tight, and each breath was painful. \n\nThe priest gently lifted my head, and moved his legs. I whimpered, my body was brittle, and my skin cracked with every small movement. He lay my head down on the bed, and stood. \"I am going to pick you up, and carry you to the garden. Do not try to help me. I will be a gentle as I can be. I do not wish to cause you any more pain.\"\n\n\"To the pool,\" I corrected him, as he lifted me carefully in his arms. Then a horrible sound of excruciating agony was torn from me, as the very air burned me.\n\nThe priest shifted gently me in his arms, as he turned to the door. \"You hear him?\" \n\n\"Yes,\" I hissed, determined not to scream. I let my head rest in the cradle of the priests shoulder, as he began walking us slowly through the shrine toward the garden and the pool. I closed my eyes, whimpering in pain with each slow step. Every fiber of my being was screaming.\n\nI opened my eyes as the priest stepped outside of the shrine. Tlaloc stood waist deep in the pool watching us move toward him. My breath caught in my throat as we moved closer, and I forgot the agony that was my body for just a moment. I had never seen the God in the sunlight before. His white skin was iridescent under the rays of Tonatiuh, his flesh like a million rainbows. \n\nIztali stepped into the pool, walking me closer to the shimmering God. 'She hears you speak,' he told the god, as he stopped. He shifted me again, and offering me to the God. 'She is as unfit a sacrifice as I was.' I felt the sorrow in the priest's silent voice. \n\nThe God looked down at me, frowning for a moment, before his lips split into a terrible fanged grin. His laughter echoed off the walls of the garden. \"Tell the priest, Xochitl, that mine is not the only voice you hear.\" \n\nI slowly shook my head no. \"I hear you as well,\" I whispered, not understanding what any of this could mean. I didn't understand the amazement I saw in the priest as he looked down at me, or why being unfit would make the God so happy.\n\n'We will discuss this after this unpleasantness is done,' Tlaloc's voice whispered through our minds. \n\nThe priest nodded, and shifted me again. Then I felt the God's hands beneath me, and they both lowered me into the water. The water was cool, but felt so hot on my burnt skin. I struggled, trying to escape as the water covered my face. They held me beneath the water, until my sore lungs burned, and I despaired. I couldn't understand why I has been spared from the fire of the lightning just to be drowned. \n\nI stared helplessly up at their distorted faces. The surface was so close, if I could raise myself the width of my hand I could breathe again. I fought weakly against the hands of the God and his servant as they continued to hold me under. As time passed, my body grew still, my lungs screamed. I released the air I held, and willed myself to breathe in the liquid death.\n\nBefore my lungs could comply, I was lifted out of the water and allowed a choking mouthful of air, before they lowered me again. As I fought against the hands holding me under the water, I felt my skin begin to tingle. The water was washing away the burnt skin, leaving new skin in its place. They brought me to the surface again. Giving me only a second go gulp down another hungry breath of air, before sending me below the surface of the pool a third time. I felt my hair growing back, my scalp tingling. I could feel it brushing my shoulders in the churning of the water. \n\nTheir hands released me, I managed to get my feet underneath me, and shot out of the water. I stood sputtering and gasping for air. I managed to stumble to shallower water before collapsing to my knees. \"Drowning is a worse death than lightning fire,\" I whispered to myself, having experienced both. The fire just burns and all choices are taken from you, but in the water you have to choose the take the breath that kills you. I turned and sat in the water, glaring angrily at the priest and the God, still coughing. \n\nThe God stood smiling proudly down at me, and the priest's eyes were wide with surprise. Their silent words overlapped. Tlaloc's was 'Magnificent.', and Iztali's 'Unbelievable.' They both moved and sat down one on either side of me. \n\n\"Why am I still alive?\" I asked, finally able to breathe without coughing. \"You were angry with me. You killed me.\"\n\n\"And brought you back,\" The God's voice rumbled from his chest. \"I was not angry with you, except perhaps that it took five and twenty before you finally gave me a girl worthy to sacrifice. Two, actually.\" I heard thunder in his laughter. \"Virgins for the sake of their virginity are worthless to me.\"\n\nI stared at the Tlaloc in disbelief. \"So what is the point of all of this?\"\n\nIztali answered for the God. \"He needed you to disobey, and to take the virginity of a girl either in pleasure, or despair. He needed you to both taint your purity and have her living blood on your hands before she died.\"\n\n\"And the lightning? The near drowning?\" I asked fighting to keep anger from my voice.\n\n\"Painfully necessary.\" The God cupped my chin and turned my face to him. \"That you offered yourself as a willing sacrifice was a pleasant surprise. I had expected to have to chase you screaming down the mountain. You had to die in fire and be reborn in water.\" He ran his hand down my healed skin. \"The water has healed all of the damage your body took from the lightning. You will walk between this world and Mictlan for all of your days. When he thought you could hear only me, the priest despaired because only souls that are not fit to be sacrificed can hear the God they were ill fated enough to be sacrificed to. He feared that the sacrifice was not successful, and all of your suffering had been for naught.\"\n\nI looked up at the cloudless sky, only understanding a fraction of what I was being told. \"So the rains will come now?\"\n\n\"Not quite,\" the priest said standing and moving back toward the shrine. 'I will prepare the room for you,' his voice whispered silently to the God. He stopped, turning to look back at me. \"You are the storm, Xochitl.\" \n\n\"Just one last pesky virgin to take care of.\" The God said, his obsidian fangs flashing as he grinned at me. He stood, and held his hand down to me. \"Come. To the temazcal with you.\"\n\nI took his hand, and let him pull me to my feet. He held my hand, and led me into the steam hut. The usual bouquet of herbs smoldered over the coals, and the air was heavy and humid. Tlaloc led me to the bench, and I sat down. \n\nI realized with a start that the God was nude, and that he had been since the priest had carried me out of the shrine. Out of the direct sunlight, his skin was unblemished and bleach-white. He knelt down and stared into my face intently. His eyes were fascinating, the sickly green glow and the flashes of lightning emanated from the sclera, and the irises were an ever changing blue. \n\n\"I know that you do not understand just how important you are,\" the God whispered his eerie eyes moving over my face. \"I know that I cannot make you understand, but everything that happens this night is important to the lives of your family, and of your people. In the many nights that have passed since I took you from Huey Teocalli, the people have begun starving, and the maize is dead and gone. What happens tonight will bring the crops back and allow the people to live.\" He stroked my cheek, and lightning flashing within his eyes. \"Now lay back.\" \n\nI turned and reclined on the bench. Raising one foot to rest on the warm stone, my other foot remained on the ground. I bared my sex, as I had countless times for the priest. The God's hands moved over the smooth flesh of my legs, as he leaned in to to examine my swollen sex. He gave a long hiss, and straightened. \n\nI heard the angry words as he spoke to the priest. 'The swelling is not from passion. She has seen too much oil, for too many days. This changes the ritual.'\n\n'Forgive me, lord. I have been diluting the oil for several days. The application last night was only oil of maize. Why did the water not heal that as well?' I felt the sorrow in Iztali silent response.\n\n'It is not my forgiveness you need to beg.\" Tlaloc's eyes met mine. 'The water could only heal the damage from the fire of her actual sacrifice.' His eyes flashed with red lightning as he continued to look into my eyes. 'Though we couldn't have anticipated she would be so stubborn. If this ritual must be repeated in the future, we will know to dilute the oil if it appears it will take more than a few days.' He sighed out loud as well as silently. 'We will make due. Continue with your preparations, Iztali.'\n\n'Of course, lord,' the priest's voice whispered, as the God blinked down at me. I fought not to squirm as he held my eyes captive. \n\nFinally, I turned my head away, thinking of what this night may hold for me if arousal and passion were beyond me. The God had said there would be pleasure, but that was before he had see the damage the oil had done. I knew that regardless the ritual to bring the rains to my people would take place, even if I was too swollen from the burning oil to take any pleasure from it. \n\nI took a deep steadying breath, and turned my face back to Tlaloc. I felt the blanket despair raise back up and cover me in the icy acceptance of my sacrifice. I knew that he did not need my consent, but I nodded to him anyway. \"Let's bring the rains,\" I whispered, my body relaxed, embracing the divine horror. \n\n\"Brave girl,\" He rumbled, kissing my cheek, before turning his attention back to the mess of my sex. He sat down on the bench and lowered himself until his mouth was only inches away. I had raised my head to watch as his tongue snaked out and moved over the inflamed lips of my pussy. \n\nHe spoke his lips moving against my mound. \"I hadn't intended to bleed you so soon.\" \n\nThe feather-like touches of his tongue were not unbearable. But when he covered me with his mouth and sucked, my hips snapped involuntarily, and my head jerked back onto the unforgiving granite. I willed my hips to still, and my body to relax, trying to ignore the pain. \n\nTlaloc rumbled against my body, as I regained my composure. Then he sucked most of my pussy back into his mouth. His eyes rolling up to mine, challenging me to move away, as his arms moved across my hips. His arms tightened to hold me in place, his mouth opening wide as he drove his fangs into the swollen flesh.\n\nMy head fell back and I screamed wordlessly, as his fangs pierced me again. Then he was sucking my pussy again, drawing the blood from me. The pain was intense. I chewed the inside of my mouth, fighting back a scream, but I did not try to move away from suction of his mouth. \n\nHis tongue moved against my folds. Slowly the pain of his touch lessened and I felt the tiniest jolt of pleasure. His tongue moved over my sex again, spearing my clit, and my hips rolled to meet this tongue. I moaned as I felt the nearly forgotten building of the orgasm I had been denied so long. \n\nThe God growled between my legs again his grip on across my hips shifted. He moved his hand up my body to gently squeeze one of my breasts. His tongue moved in slow circles over my clit, down my slit to delve into their folds, pushing the center of my sex. \n\nI was panting and moaning I felt my pussy begin to spasm, when the God released me. He moved back and sat on the bench, denying me yet another orgasm. I cried out, my hips pumping the air where his face had just been.",
        "\"Is this to be my fate for eternity?\" I spat at the God, as I sat up on the bench. Weeks of anger boiling over with the loss of the one thing that I had been taunted with since my arrival at the shrine. \"Forever wanton?\" \n\nTlaloc laughter rolled around me, as he stood. \"Certainly not.\" He reached down and took my arm pulling me to my feet. \"I have healed the damage. You are now in the proper state for the ritual the begin. Come.\"\n\nWe stepped out of the temazcal into the twilight of the garden. The God took a dark gray xicolli from the roof of the steam hut and offered it to me. He whispered the same strange words as he did when he offered me my first pale blue xicolli. I reached and took the robe, and I heard Tlaloc silent voice whisper the same words in my mind. And then they were echoed back a hundred times by a chorus of different unearthly voices as all of the Gods repeated the words. \n\nI frowned as I put the robe on, and followed Tlaloc into the shrine. He stopped in front of one of the four rooms that I knew contained a table. I sighed, and pushed into the room, vaguely surprised not to see a girl tied to it. \n\nI felt the God's presence at my back. \"On the table, Xochitl.\" \n\nI sat on the table, my stomach churning with excitement tainted with fear. I laid back as the God stepped between my legs. I watched him as he bound both of my legs to the table, and then sat in the chair, watching me expectantly. I had expected my hands to be bound as well. \n\nTlaloc made no move to touch me, just stared up at my face, waiting. \"Go to work,\" he finally whispered, licking his lips and leaning back in the chair. \n\nMy face immediately burned with embarrassment. \"You want me to...?\" \n\n\"Oh yes,\" He growled, his eyes moving down my body to settle on the robe that hid my sex from his view. \n\nI laid my head back on the table, and closed my eyes. I pushed passed my discomfort, and split the robe to bare my sex.\n\nI lowered my hand tentatively between my legs, running my fingers slowly over my sex. I circled my clit, and moaned as the denied pleasure roared back to life, almost breaking over my body. I rubbed myself, flicking my clit, and the orgasm crashed over me. I continued to touch myself, pinching and rubbing as I drug the first long ignored orgasm out. I cried out, thrashing on the table, as the tension of all of all of my nights are the shrine fell away with the convolutions of my sex. My pussy spasmed for a long time as I moved my fingers in tiny circles. \n\nMy fingers stilled when my sex became over sensitive, the pleasure bordering on the familiar pain I'd felt for too long. I used my fingernails to trace up and down my lips, slowly building my pleasure back. I dipped my finger and pushed against my entrance to gather the moisture there, and then moved back over my clit. \n\nI had forgotten the God between my legs and startled when I felt his fingers join mine. His fingers moved up and down my lips, and pressed gently at my entrance. My fingers continued to assault the bundle of nerves. I moaned and cried, as our hands brushed together, dancing over my sex. Another orgasam built as the pleasure grew more intense. \n\nMy fingers moved over my clit. The slight friction caused my pussy to shudder, as the God slowly pushed a single slender digit into my dripping core. I screamed out in pleasure, feeling my pussy clench around his finger, holding it within. \n\nMy hands left my body, and gripped the edges of the table, while my body rocked and shook. Tlaloc continued pumping his finger in and out of me, even after my body had mostly stilled, and then slowly his finger left my body. I felt empty, wanting more from the God, knowing I was ready to take more than his finger inside me, though I knew the maiden's skin was still intact. \n\nWhen I had caught my breath, I raised my head smiling down at the God, but the chair was empty. He was gone. I turned my head searching the room for him. The room was empty and I was alone, tied to the table. I groaned and sat up, tempted to untie myself and search for the absent God. \n\nI didn't wait long, before the priest came into the room. He untied my ankles, and helped me off the table. Silent, he led me out of the room, to my own room.\n\nI groaned, unable to hide my disappointment. \"Chocolatl and sleep, no doubt.\" \n\nThe priest chuckled, reaching down to the sash the held the robe closed, and untied it. His hands ran up my body, as he pushed the robe off and let it fall to the floor. \n\nThunder rumbled over the mountain, and the night was suddenly heavy with moisture. \"The room holds something more precious than Chocolatl.\" He reached and slowly pushed the door open.\n\nThe room was alight with hundreds of candles, they covered the entire floor. There was only a clearing around the door, and a small path to the bed. My bed had been covered in cotton woven green and yellow. The God lay still on his back. His eyes covered with green cloth. He was still nude, his sex standing erect from his body.\n\n\"He is the hungry earth, now, parched and waiting. Waiting for the storm to cover him, to bring life back to the dying land.\" He kissed my lips before giving me a gentle push. \"You are the storm. Cover him. Ride him. Bring the rains, Xochitl.\" \n\nI stepped into the room and walked slowly to the bed. The fire of the many candles flickered and seemed to bow and sputter as I moved through the room. I climbed onto the bed, looking down at Tlaloc, waiting for him to move. He was still as death, his white flesh looking like bone, his chest did not move with breath. His clawed feet and the paleness of his hair and skin were the other thing that made him look any different than any other man. His arms and chest were muscled, his abdomen well defined.\n\nI settled myself on softness of the bed and leaned down and kissed his hip. Tlaloc did not respond to my touch in any way. I moved closer, and tentatively touched his erect sex with my hands. The organ was smooth as I slid my hands down it's length. It twitched in my hand, but otherwise the God was still. I stroked him, wondering how I was going to manage to fit him inside my tiny opening. \n\nI had no idea what to do with him. I was not ready to impale myself of him, I wasn't ready to embrace the pain I perceived that would bring. I thought of the pleasure my mouth brought to the sacrificed girls and the pleasure his mouth had brought to me. I look his sex firmly in my hand and lowered my mouth over him. I sucked the entire length into my mouth, fighting the urge to gag as the organ pushed against the back of my throat. \n\nI moved my mouth up and down his length, using my tongue to flick against the bared head of his penis. As I sucked him down again, I became aware that my hips were rocking in time with the movement of my mouth. My sex was hot, burning with passion. I could feel the wetness gathering. \n\nHis body never moved, never responded to my touch. He did not draw breath. He seemed truly dead. \n\nDistantly, I was aware of the thunder rumbling over the mountain, as I straightened. I pumped his cock with my hands a few times, watching how his flesh moved. I rose up on the bed, and straddled the God's waist. I lowered myself slowly until our flesh touched. I used my hand to hold him still, and rubbed the head of his sex against mine coating him in my wetness. \n\nI shifted, and began to slowly lower myself. I felt the pressure, as his width began stretching my opening. I looked up at his face. His mouth was closed, hiding his fearsome fangs. His eyes were hidden behind the blindfold. His hair was a mess of golden curls. But he was so unnervingly still. \n\nI remembered the only girl I had used the strange tool on, and the way I had slowly worked it to stretch her ass, before I slid it all of the way inside of her. I smiled as I remembered her screams of pleasure, and lowered myself a little further, my breath caught as I found the limit of my ability to stretch. \n\nI had nearly taken his flared head into myself, but I could not get past the widest point without tearing my maidenhood. I raised and lowered myself a few times on just the tip of his sex, working to stretch myself just a little further. I raised myself completely, and then lowered my body steadily down. \n\nI whimpered as I felt the skin tear, and lowered my body the rest of the way down. I paused for a moment while my body changed to accommodate Tlaloc's cock sheathed tightly within my body. I began moving, rolling my hips, and the discomfort of being torn and stretched changed to pleasure. I felt my pussy contract, hugging the rod within my depths. \n\nI continued to move over the God; the pleasure growing into something more. I moaned, lifting myself almost free, before slamming back down. I felt the length touch the end of me building the pleasure into something more. I rocked over the God, using his still chest to keep my balance as my hips danced.\n\nI heard the whisper of hundreds again. 'The storm is coming.' Then the orgasm burst over me and I was screaming with the pleasure my body still moving over the God in an urgent and primal dance. \n\nThe ceiling of the room blazed with lightning, and the thunder was deafening. I saw the green glow beneath the cloth as the God's eyes opened, his chest heaved as he drew a deep breath, and his began to move beneath me. He ripped his blindfold away, and then his hands lifted me and held my hips still, as he shoved himself into me rapidly. My screams were lost to the raging of the storm, as I orgasmed again.\n\nThe God rolled us over, shielding me from the lightning that had begun to strike the floor. He pumped in and out of me, changing the pleasure. He held my face between his hands and kissed my savagely. I felt the brush of the fangs, but we managed not to shred my mouth. I kissed him back, and moved my hips to meet his. \n\nThe violence of the storm moved beyond the room, and I felt it spread over the mountain. The God paused, above me, and I heard his urgent words to the priest. 'I cannot control the storm, it will destroy much on the mountain. Seek shelter in the shrine. I will try to calm it before it reaches the valley.' \n\nHis eyes flashed with the same uncontrolled fury as the storm, as he continued to move in and out of me. His hips hitting my body hard enough that it made it hard to draw breath. He stopped once, withdrawing from me, to grab me by the hips and drag me back down the bed, then he shoved back into my pussy, and began pounding into me. \n\nI screamed my pleasure again, my fingers biting into the flesh of his back. I tore my fingers over his shoulders, as my sex squeezed tight trying in vain to expel the God, or hold him in my depths.\n\nThe God growled loudly, as his blood ran down his arms. His eyes were wild, and suddenly I was afraid. He withdrew again this time to roll me over onto my stomach. He lifted my hips and shoved into me again. \n\nThe new angle was sharper, and I felt him hitting the end of me with each violent thrust. I cried out as the pleasure of the new position made me orgasm again. Tlaloc roared at my back, and pushed into me even harder, fighting the contractions in my sex. \n\nI felt his rhythm change, as he jerked me against his chest, as he continued to drive himself into me. I felt his breath on my neck and I cried out again. I bared my throat, knowing his bite would be my undoing. I orgasmed at the very thought and then his teeth were in my throat. \n\nThe God's teeth tore into my throat viciously, as he continued beating himself against my body. His throat swallowing me down, as I screamed into the storm, as it raged around the shrine. My body was reduced to nothing but pleasure and I hung limply in his arms. \n\nTlaloc cried out against my throat, pumping his seed into my pussy, still drinking my life from my throat. His hips slowed, and then stopped moving against me. His mouth still working against my throat.\n\nThe storm grew quite. Soon the rhythmic patter of rain was accompanied by the infrequent roll of thunder. I felt the storm spread beyond the mountain, moving over the valleys weeping gentle tears on the earth. \n\nI realized that my purpose was done, and now I had nothing to live for. If I was sent away, I would be just be a living sacrifice that would be shunned by all except the priests. No one would understand, or believe my sacrifice to the them. I would be a burden on my family. Finding a husband would be impossible. I felt the loss of his cock like a physical pain, and soon his lips left my throat. The tears burned as they ran down my cheeks as he lay me down gently. \n\nHe laid down beside me, and pulled me into his arms, holding me against him tightly. \"Don't cry. The rains move through the valley.\"\n\nI wiped the tears from my eyes, looking up into the storm that still churned in his eyes. \"Don't make me leave,\" I whispered as new tears ran down my cheeks. \"If you are done with me, end me. But do not make me leave.\"\n\nThe God laughed, catching the back of my head, and bringing my face to his lips. He licked away my tears, and kissed my mouth gently. \"Why would I make you leave?\" \n\n\"You don't need me anymore,\" I whispered against his lips. \n\n\"You are right, I don't need you any longer.\" Tlaloc shook his head, still laughing, holding my face inches from his. \"But do you remember when I told you many nights ago that I would show you pleasure beyond all of the pleasure I gave to those sacrificed?\" \n\nI nodded slowly. \"I remember.\"\n\n\"Tonight was not that pleasure, not even a fraction of it,\" he continued, his eyes flashing, and the storm moved further into the valley. \"I have a debt to repay you, Xochitl. Once we are both satisfied that you are repaid for the deprivation, pain, and death you have survived here, then we will discuss what is next for you. But know that I will never make you leave.\"\n\nEpilogue\n\n________________\n\nThe priest knocked on my door, bringing in our meal and the mugs of chocolatl. We sat side by side, and ate our simple meal of atole. \n\nThe storm had destroyed much of the garden, and the game was scarce lately. It had been several weeks since Tlaloc and I had brought the storm, and the rains had come regularly since. But it would still be several more weeks before we would be able to harvest. \n\nThe silence between us was strained, but still comfortable. He feared me now, like he feared the God. I was more than human, knowing and seeing things beyond his understanding. I could hear the communication between all of the Gods and the humans that could speak to them. I kept him informed of any important news, but my knowing made him uncomfortable.\n\nThe Storm God had visited last night, as he continued to work to repay the debt he felt I was owed. He had left me twitching in ecstasy. I felt my lips lift, as I grinned thinking about the previous night.\n\nThe priest glared at me seeing my grin, then turned away. \"Stop thinking about it, please.\" He slumped on the bed, and ate his meal in silence. \"I can see it on your face.\"\n\nI looked at Iztali and was slow to realize that even though he had been responsible for all of the preparations, and was always nearby, he had seen no pleasure from anyone. I felt my eyes grow wide, and the regret I felt was heartbreaking. \"I hadn't realized, Iztali. Forgive me. Forgive him t -\"\n\nThe priest shushed me with a wave of his hand. \"There is nothing to forgive. I could venture off this mountain anytime I want and take a lover. I could bring them back here and keep them with me, if I wished. But I have never done it. I am angry at myself only. I grow jealous when Tlaloc visits. When you scream your pleasure in unison.\" \n\nI sat staring at the priest. Maybe it was because I was no longer of just this world, but suddenly I knew he had never taken a woman. I knew that everything he knew of sex had been shown to him by the God. But he had never actually experienced any of it. The night he had used his finger to show me that there were other ways to penetrate a woman had been the most intimate moments of his life. \n\nI took our plates and empty mugs and set them on the table. \"Come on. priest. Let's go and bathe.\"\n\nHe frowned at me, and shook his head. \"What are you getting at, Xochitl?\" \n\n\"Come.\" I took his hand and pulled him from the bed gently.\n\nHe frowned at me as he stepped off the bed and let me led him out to the pool. I stripped us of our robes, and stepped into the water. I let go of the priest's hand to clean myself thoroughly, and watched as he did the same. His cock grew thick and erect as he bathed.\n\nWhen we were clean, I led him back into my room, and motioned that he should lay down on the bed. He did so obediently. He looked up at me expectantly as I stood looking down at him. \n\n\"Let the God know I plan to fuck you tonight, priest. I'll return once you have.\" We had learned that though I could hear every word of the silent conversations, I could not join them. I left the room to find the potent ointment that had been my nightmare for many nights. \n\nI was almost back to the room when I heard Iztali's silent words to Tlaloc. 'She plans to take me tonight.'\n\nI felt the God's pleasure. 'Enjoy her, Iztali.' \n\n'Thank you, my lord,' the priest's voice whispered. His relief that the God approved was palatable. \n\n'Don't thank me,' Tlaloc whispered through our minds. 'And priest, remember, she knows a thing or two about virgins!' The laughter of the God filled us both and then faded away into silence. \n\nThe priest was still laying on the bed where I had left him. I could feel his nervousness.\n\n\"Don't be nervous,\" I whispered setting the oil on the bed, and leaning down to kiss him.\n\nWhen I pulled back from our kiss, his eyes moved to the container. His breath caught and he rolled his eyes back to my face. I could almost taste the mix of terror and desire that rose off his body in waves. Slowly, he raised his legs for me not waiting for me to ask. \n\n\"Smart priest,\" I told him, and then settled myself between his legs. I took the oil, and covered his cock, his balls, even dipping my fingers to coat his ass. \n\nI played my fingertips gently over his sex, letting the oil work. Teasing him, as his hips pumped, and rolled as even more blood rushed to his cock. I tickled his balls, and rolled them in my hands, before leaning down to take him. I rolled him in my mouth, my tongue moving around the head of his sex. Then slowly began working up and down his length.\n\nHe cried out, fisting his hands against the soft blue cotton of my bed. His hips bucked, and I swallowed him down. I held his length in my throat, flicking my tongue again and again against his base. I released him slowly and circled my tongue around the head of his cock.\n\n\"I won't last if you keep that up.\" He was breathing hard already.\n\n\"Then don't last, Iztali,\" I whispered, rolling my eyes up to his face, my tongue flicking out against him as I spoke. I dove my mouth back down his cock, covering him completely. I growled, running my teeth over the smooth length. \n\nI used my hand to pump him, and I continued to fuck him with my mouth. I felt him tense, just seconds before his cum coated the back of my throat. He cried out, as his hips pumped against my lips, sending more of his seed down my throat. I swallowed his cum, but continued to run my lips and tongue over his cock. \n\nI continued to lick and gently suck as he grew soft. Enjoying his moans of pleasure. I rolled my eyes back up to his face, knowing he would be watching me. \n\n\"You can stop now,\" he whispered, his voice almost pained. \n\nI knew he was over sensitive, as I ran my tongue deliberately around the head of his cock. Smiling as his hips jerked, and his shoulders came of the bed. \n\n\"You must orgasm at least twice,\" I told him with a wicked grin, before turning my attention back to his cock. I played with him gently, giving his body time to recover. Within a few minutes, he began to grow hard again. ",
        "I worked him with my hand, almost bringing him again. His hips bucked wildly as I covered him with my mouth. He moved against my tongue, meeting my movements with his own. I felt his cock grow even harder and he came again crying my name.\n\nBefore I could begin working his softening cock again, he sat up, pushing me away. He rolled me over onto my back. \"My turn, I dreamed of having you beneath me for a long time.\"\n\nHe dove between my legs, his tongue moving over my slit with amazing quickness. His tongue jabbing at my clit relentlessly. I whimpered, my hips rolling to meet his attentions. \n\nHe looked up at me, his deep brown eyes twinkling with near malice, as he took both of my legs, and pushed them to my shoulders. I let my head fall back onto bed. I felt his lips curve into a smile before they enveloped the hood of my clit, and began sucking at it gently. He cajoled my clit to rise from its hood and began stroking it roughly with the length of his tongue. \n\nHe released one of my legs and I felt a finger press into my sex. I cried out, as it slid into my depths. I was rewarded with a throaty moan that rumbled against my clit. I felt the pleasure building he shoved another finger inside me, and began pumping into me. I orgasmed chewing the inside of my mouth, my leg pushing against his arm, as he held me beneath him. \n\nHe raised himself up, his mouth leaving my sex, only to crush our lips together. He kissed me with the same barely contained violence he had shown my pussy. I cried out as his teeth bit into my tongue, and he positioned himself between my legs. \n\nHe buried his cock inside me and began thrusting. I screamed as my pussy contracted, squeezing and trying to hold him within me. I tore my mouth away from his as screamed my pleasure into the night. \n\nThe priest pummeled into me and I met his thrusts as best I could, one of my legs still caught on his arm the other kicking uselessly against the bed. I came just a fraction of a second before the priest. The orgasm rolled through my pussy pushing him over the edge. We both came screaming as he continued to pound uncontrollably against into me.\n\nFinally, his thrusts slowed, and he fell onto his back beside me. There were tears in his eyes, but he was laughing. \"That was amazing,\" he whispered breathlessly. And a second later I heard his silent communication to Tlaloc, \"Magnificent.\"\n\nThe God's rumbling laughter filled both our minds, and the night shook with thunder. "
    ],
    "authorname": "inka",
    "tags": [
        "non-con",
        "non-human",
        "first time",
        "virgin",
        "sacrifice",
        "vampire",
        "lesbian",
        "tlaloc",
        "noncon",
        "bondage"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/s-he-who-brings-the-rain"
}