{
    "title": "Snowdrops",
    "pages": [
        "As so many other stories do, this one started with a scene. I'm not going to mention which one. I'll leave that to you. This is not the story I set out to write, but it is the story that it became. Maybe it's not as polished as it could be, and maybe it's more purple than it could be, but I needed it out of my head so that I could continue with other things.\n\nSelva is where I learned to ski, so it and the Dolomites have always held a special place in my heart.\n\nIf you speak the languages of Tirol, then I apologise. I do not, bar the simplest of phrases. The internet can give you the words, but it can never give you the idioms or the natural flow of a native. I have done my best, where possible.\n\n- W\n\n--\n\nI stepped down off the bus, and waited patiently until it was my turn to pull my backpack out from the cramped and grimy luggage hold.\n\nThe crisp, cold air, the accents, and the smell of diesel brought back many memories of my childhood.\n\nI checked the details of my booking on my phone, and found the map to my apartment. It would be a bit of a walk from the bus station, but it would get the stiffness from the long journey out of my legs, and give me time to catch my bearings. Time to adjust.\n\nAbove the town, the mountains loomed golden in the January sunlight. It looked like the snowfall had been heavy over the last few days; the stone had been softened by drifts of white, like icing sugar drizzled over gingerbread.\n\nI lifted my pack onto my shoulders, wincing as the frame dug into my back. I slung my small faded day-bag awkwardly over my shoulder.\n\nAround me milled a small sea of other tourists. Some were still hunting their belongings, others embarking on the same trek to their lodgings as I was. Bright colours surrounded me; Brand-new jackets in this year's style were everywhere, coupled with the incongruous woollen hats which seemed to be the season's touch of panache. Skiers and snowboarders stalked carefully between us with their equipment. Patrons at a cafe watched us new arrivals, their breath steaming in the scarcely-above-zero air.\n\nThe sun was bright on the snow; icicles glittered on eaves. I took a breath and squared my shoulders, adjusted my sunglasses on my nose and started walking.\n\nIt had been seven years since I was last here. But little seemed to have changed. I couldn't decide if that helped or not.\n\nI worked my way up the hill, carefully negotiated several icy switchbacks in the path, found my way to the apartments and rang the doorbell. A matronly old lady appeared, and welcomed me in from the cold with a smile.\n\n\"Lucy?\" she asked. \"You are Lucy?\"\n\n\"Si,\" I answered her.\n\n\"Where is... the partner?\"\n\n\"He could not come. It's just me.\"\n\nShe heard the tone of my voice and dropped that line of questioning; I appreciated the sympathetic tutting and shaking of the head, and the brief mothering she gave me as she herded me up the stairs salved some of the sting.\n\nShe opened the apartment door and ushered me into the warm, wood-panelled interior. \"Kitchen and table here. Il frigorifero. Through there - la doccia e il wc. Through there is bedroom. Please, a moment, I just take...\"\n\nI saw her reaching for the second set of pillows. \"No, it's ok - please leave them,\" I said. \"It's fine. I'll use them. Grazie.\"\n\n\"Ok, I leave for you. Do you have map? Of Selva?\"\n\n\"Yes,\" I answered with a tired smile. \"I've been here often before. I don't think it will have changed much from last time.\"\n\n\"Allora. The shop on the corner you walk past is good for food and drink. Tell Signore Alonso that you are staying with Maria and he look after you. Here is la chiave,\" she added, handing me a small set of keys. \"I lock outside door at dieci... scusi... ten of the evening, yes? This one is key for that door. The light it stay on in hallway, please be quiet if you come in after.\"\n\n\"I will. Thank you.\"\n\n\"Di niente! Enjoy your stay.\"\n\nShe ambled off down the stairs. The doorbell rang. \"Un momento!\" I heard her call before I shut the door on the world.\n\nI put my backpack down on the bed and took a moment to look around me at my lodgings. They would be just fine for the week that I would need them for. I walked to the window, and perched myself in the sun bay for a while to stare out at the view of the valley and of the Sella-Massif beyond.\n\nI felt a momentary stab of acid bitterness; John should have been here, he was the one who'd badgered and nagged me into coming back here to Selva, to try to put my past to rest.\n\nThen he'd found himself an intern to knock up and shack up with.\n\nCunt.\n\nI sighed.\n\n\"Let it go,\" I whispered to myself.\n\nI was back in the mountains. I'd come here despite everything. Back to this scene of so much history from my childhood.\n\nAnd back to her.\n\nFuck him, I wouldn't let him take this moment from us. I banished him from my mind, casting him aside like a lizard sloughing off old skin.\n\nI had more important things to deal with than the wanderings of my erstwhile partner's cock.\n\nI made myself a black instant coffee, made a mental note to buy some beans for the grinder from Signore Alonso's corner store, dug out my walking gloves and a fleece scarf, and set off down into town to rent my skis and buy a lift pass for the week.\n\n.:.\n\nI leaned my skis into their rack, and placed my boots on the shelf below them. An older English couple stumbled in from outside and mistook me for a local; they tried to engage me in halting Italian. I smiled, somewhat flattered, introduced myself in English (to their visible relief), and made idle small-talk for as long as my stamina held. Then I excused myself and carried my groceries upstairs to my apartment.\n\nI made myself some proper coffee and phoned my parents to check in and let them know I was safe. I deflected Mamma's probing questions with canned platitudes and long-honed guile.\n\nOutside, the sun had set and the lights were coming on. Fairy lights flickered in some of the snow-covered trees and bushes, and I watched them, thinking about how much my sister would have loved this fairytale view.\n\nI cooked myself a simple supper and poured a glass of wine for myself and one for her. I ate, and as I ate I watched the mountains fade to from pink to umber to sienna to black.\n\nI cleaned up, put my plates and the small pots back in their places, and retrieved my old, stained map of the valley.\n\nI would need to be early if I wanted to avoid the rush.\n\n.:.\n\nI caught the first cable car up to the top of the slope, and took my time getting the feel for skis again. It had been years, but the sensations and reflexes were merely dormant rather than wholly lost as I'd been so scared they might be.\n\nA long gentle piste led down to the next chair lift, first of the chain of several that I needed to catch.\n\nIt was a beautiful morning. High white clouds against cobalt sky, bright white snow painted onto the dark almost-black of the pines. I felt an almost unreal sense of calm, my only real concern being getting there before too many others did. I did not want an audience.\n\nA sense of detachment had taken me. I felt dispassionate, disconnected, separate from the world but for the bit of me that responded to the slope, and the other bit of me that quietly repeated the mantra \"It's ok. It's ok Lucy. You can do this.\"\n\nMy therapist would be screaming right about now. The thought almost amused me.\n\nA lift. A piste. Another lift. Another piste. A pause for a rest, to drink a sip of water, to try to catch the breath that just didn't seem to want to come.\n\nMy stomach felt hollow. I gritted my teeth for the final part of this act of pilgrimage.\n\nThe button lift, the short blue run downslope.\n\nThe big snow park where she had fallen on the ridiculous apology for a half-pipe.\n\nWe'd laughed and laughed.\n\nBut she hadn't got up.\n\nShe'd never got up again.\n\nI had to stop for a moment to lean on my ski poles and cough up the bile.\n\nMy memories of the day were hazy and hard to summon. But the hateful place looked like it had not changed much. And that somehow made it immeasurably worse.\n\nI could still see the gaggle of people frantically milling around my sister.\n\nI could remember the way the wind had frozen my tears as the helicopter took off and rushed her away.\n\nI could still hear the animalistic noise Mamma had made when they told us that my sister was gone forever.\n\nSomehow I stayed on my feet. Somehow I managed to reach the gate. Somehow, I removed my skis.\n\nA simple metal plaque was set into a stone pillar by the portal. In front it lay a worn blue teddy bear, half-covered in ice.\n\nI touched the pillar, and the act of touching it brought me back to the present. I took a sobbing breath, and then another. I crouched down to try to ease the agony in my chest, and squinted at the words.\n\n<p align=\"center\">Susanna Ella Fitzroy 1999.08.01 - 2013.01.14 - Ella Bella, our light, our life -</p>\n\n\"Oh Jesus, oh fuck, Sue, I miss you so much,\" I whispered to the uncaring wind.\n\nI brushed some ice crystals out of the lines of her name.\n\n\"I came back. I'm sorry it's taken me so long. It still hurts too much. But I'm here now. I've got something of yours, Sue. I found it after... after you left us. I've been keeping it safe so I still had part of you for myself. But... I think... I think it's time for me to let it go. So... so here you are.\"\n\nI placed the small silver clover charm in a patch of clean white snow next to the bear, and gently curled the fine silver chain around it.\n\nIt would be safe there for long enough. And if not, so be it.\n\nI somehow stood up and stared up at the mountains around us.\n\n\"I'm sorry I wasn't a better big sister to you. I should never have gone into this fucking place. You always wanted to keep up with me. I should never have done it. And I'm sorry. And I miss you. I miss you every single fucking hour of every shitty miserable fucking day that I have to go on without you. I wish I could have told you once more how much I love you. All I can do is say it here. I'm sorry. I'm so fucking sorry.\"\n\nA small gust of wind blew through, teasing my fringe free of my fleece cap. I tried to fight back the tears that were never far from the surface when I thought of her.\n\n\"Well. I've got to go, munchkin,\" I managed. I kissed my fingers and touched them to her name. \"It's some distance back to Selva. If I don't see you before I go I'll... I'll see you later, alligator,\" I managed as my throat closed up on me.\n\nI turned away. I put my skis on in autopilot and managed to fumble my way onto the lift that would take me back up the slope.\n\nIt was empty but for me, thank God, because the pain and hurt and loss simply wouldn't stay locked away any more.\n\n.:.\n\nI slid off the chair lift, finding my way half-blind through the small gaggle of people lurking at the exit. I needed to get away from everything, needed to get back to my room so that I could rebuild my walls and repaint my facade and try to find some reservoir of inner strength that would let me pretend that I could function in this cruel and hateful world.\n\nI set off down the slope, steering slow, ugly, ungainly novice turns on the near-virgin piste. My nose was streaming, my chest felt like a steel bar was locked over it, and the cold and my tears were affecting my vision even behind the protection of my goggles.\n\nI came to a steeper technical section, where I stopped to wipe my eyes and blow my nose. Faster skiers blew past me, and I waited for an extended gaggle to clear before setting off once more.\n\nI was not paying the mountain any of the attention it deserved.\n\nAnd the mountain paid my wanton lack of respect back in spades.\n\n.:.\n\nI took a moment or two to filter through the bad news that my body was telling me. My left shoulder burned like fire, and hard-packed gritty ice was packed into the gap between my face, googles and helmet. Bitterly-cold water was trickling down the front of my ski jacket, chilling my stomach and breasts as it did so.\n\nI screamed in frustration, got my right arm under me, and levered myself out of the mess of icy gravel I'd ended up in at the piste's edge. I wiped my nose, and my hand came away bloody. I spat grit out of my mouth, and cursed like a fishwife as I saw the little scarlet blood blossoms on the white snow.\n\n\"Fuck,\" I swore. \"Jesus Harold tap-dancing Christ, haven't you taken enough from me you fucking cunt! Fuck you! Fuck you, you fucking cunt! Leave me the fuck alone!\"\n\nI balled up my fist and punched the slope twice, then kicked it for good measure, some mad part of me hoping that the mountain got the fucking message this time.\n\nPain lanced through me as I took a breath.\n\n\"Ow,\" I whimpered. \"Ow, Jesus, fuck, that hurts.\"\n\nI levered myself up so that I was at least sitting. I probed my teeth with my tongue, and swore as the inside of my lip throbbed. I could taste the blood in my mouth.\n\n\"You fucking idiot,\" I said to myself. \"You stupid dumb cunting fucking idiot.\"\n\nI stared downslope, trying to catch my breath and my bearings. My skis were of course nowhere to be seen.\n\n\"Fuck,\" I whispered once more.\n\nI heard the hiss of skis on snow, and a tall man in red and white high-visibility clothing slid to an abrupt stop beside me, sending a picture-perfect puff of powder billowing downslope.\n\n\"Hallo! Alles gut? Bist du Ok?\"\n\n\"Sorry,\" I said, staring up at him. \"Ich... I...\"\n\n\"Are you OK?\" he repeated. \"You fell hard. I saw it. You are bleeding?\"\n\n\"Yes. No. I don't know. I'm bleeding from somewhere. My nose and mouth, I think..\"\n\nHe clicked out of his skis and crouched down beside me. \"Hello. I am Anton. Open your eyes and look at me, please,\" he said; something about the way he did it suppressed all the normal argumentative bits of me. I squinted at him as he stared intently at my face. \"Is your vision blurry? Are you dizzy?\"\n\n\"No. At least, I don't think so. It's hard to tell with the cold air. I don't feel dizzy...\"\n\n\"Do you feel tired? Sleepy?\"\n\n\"No.\"\n\n\"Any pain in the back or the neck?\"\n\n\"No. Just this shoulder.\"\n\n\"Ok. Super. Do you know what happened?\"\n\n\"I was skiing down the long red run from... I think this is Piz Sella? I wasn't concentrating and... I guess I must have crossed my skis or caught my edge when I turned.\"\n\n\"Ok. Good. What is your name?\"\n\n\"Lucy.\"\n\n\"Do you know where you are, Lucy?\"\n\n\"In Selva, in Val Gardena.\"\n\n\"And when did you get to Val Gardena, Lucy?\"\n\n\"Yesterday.\"\n\n\"And can you tell me where are your friends, Lucy?\"\n\n\"I am here by myself.\"\n\n\"Ach. That was not wise,\" he admonished me as he pulled his backpack off and opened it. \"You should not ski alone. It is dangerous.\"\n\n\"I know,\" I sighed. \"But... I... didn't really have much of a choice.\"\n\n\"Here. Take this, please.\" He pushed a wad of gauze into my hand. He gently lifted it to my face and showed me where to hold it. \"For the blood. I think it is just a nosebleed. Push gently to stop the flow. I am going to call the ski patrol, ok?\"\n\n\"Thank you for stopping.\"\n\nHe snorted, amused. \"It is what I do.\"\n\nHe pulled a radio out of his jacket pocket and had a brief exchange in Italian that was too fast for me to parse. \"They will be here soon,\" he said. \"I will stay with you, yes?\"\n\n\"Thank you. You're very kind,\" I murmured. \"Um. You sound German but speak Italian so well. That's must be nice. To be able to be fluent like that. My Italian is terrible. Mamma is so disappointed in me.\"\n\n\"I'm Austrian and this is Tirol. Almost everyone here speaks both languages,\" he said, as he ran his fingers around the rim of my helmet, gently brushing away the compacted snow. \"So you are Italian then? You sound English. So proper,\" he said, with a smile.\n\n\"On Mamma's side I am, yes... English on the other.\" I swallowed, strangely shy. \"Your English is really good too,\" I said softly.\n\nHe grinned. \"My school teacher would not agree, but thank you.\"\n\nI winced as he probed my right temple. \"Ow. That hurts.\"\n\n\"Lucy, do you have any pain anywhere else? You said your shoulder, yes?\"\n\n\"My left shoulder is really sore, and my knees hurt a bit but I think they're ok...\"\n\n\"Ok. How sore is your shoulder?\"\n\n\"It feels like I pulled a muscle.\" I lifted my arm, then cried out. \"Ow, fuck and shit, that hurts like bollocks.\"\n\nAnton took my arm and gently helped me lower it. \"How sore is that, Lucy? Can you say between one and ten?\"\n\n\"Seven. No,\" I added, as I gasped for breath. \"Eight. Yes. Definitely a fucking eight.\"\n\n\"Ok. Hold you arm like this for a moment, please, while I get what I need. Here. I will strap it down to your chest so it will not move. Lucy, when did you get to Val Gardena?\"\n\n\"Yesterday, and you already asked me that.\"\n\n\"I am making sure you are not concussed,\" he said as he gently positioned my arm and fastened it. \"I am checking for short term memory loss. So, I will be asking you these things every five minutes for now, ok?\"\n\n\"Oh. Ok. I don't mind...\"\n\n\"Do you remember my name, Lucy?\"\n\n\"You are Anton.\"\n\n\"Good. That is good. Can you tell me why you are here?\"\n\n\"To visit my little sister,\" I whispered, unthinking.\n\nI started to cry.\n\n\"I'm sorry,\" I sobbed. \"I'm sorry. I'm sorry. I...\" I took a deep, agonised breath as I fought for control. \"I... it... it has been a hard day. I'm sorry.\"\n\n\"Where is your little sister? You said you were here alone. Lucy, is your sister somewhere here on the mountain?\"\n\n\"Yes. No. I don't know.\" I swallowed some blood, coughed, continued. \"She... her name is... on the memorial by the snow park...\"\n\n\"Scheisse,\" he sighed as he sat back on his haunches. \"Now I understand. Scheisse, I am sorry. All the people here know of her. My father... cared for her. You were here to visit her... her Gedenkstein. Oh, das ist schwer.\" He crouched down and looked up at me. \"Lucy, I will stay with you. Do not worry,\" he added gently.\n\n\"I'm sorry,\" I gulped.\n\n\"No, Lucy, not at all. It is ok.\"\n\nHe glanced upslope. \"Good, it is Paolo. He is super. Lucy, listen to me now. We will get you down to Selva and have you checked by the paramedic, ok? We will take you down in the sled.\"\n\nI fumbled for his hand. \"Please don't leave me,\" I whispered.\n\nHe squeezed my hand gently with his. \"I will not, Lucy. Just be patient for a little while.\"\n\nHe stood. \"Ciao, Paolo. Si \u00e8 ferita alla spalla. Dobbiamo fare in fretta...\"\n\nHe switched into high speed, technical Italian and I was too strung out to even try to follow.\n\n.:.\n\nMy waking dream continued with a terrifying downhill giant slalom run in the constricting claustrophobia of a rescue stretcher, my arms strapped inside and my body insulated by a sleeping bag. Paolo was a truly gifted skier, and he chose an almost perfectly smooth line as he carved down the remainder of the piste to the big cable car station at the bottom of the run. Anton followed him down. Somewhere along the line he had even managed to find my skis.\n\nThe two men and a gorgeous blonde named Giselle unpacked me, checked me again and loaded me into the gondola for the trip down into town. Anton and Giselle accompanied me down. My shoulder ached and throbbed with every breath, and I leaned against the perspex side of the cabin, answering Giselle's regularly-spaced questions with what good grace I could muster as I tried not to break down into tears again.\n\nA grey-haired man in a weathered jacket labelled \"Rettungssanit\u00e4ter\" checked me over; his heavily-accented English curt but his touch deft and gentle, and he decided that my shoulder was strained rather than broken. He also admonished me for skiing alone and launched into a brief grumpy rant about irresponsible children and how lucky I was that it was morning and not the last run down of the day.\n\nI accepted his care meekly, thanked him profusely when he was done, and tried to ignore his amused snort.",
        "Anton walked me to the pharmacy; I was comforted by his quiet, competent presence and helpful translation service as I picked up my small packet of no doubt entertaining painkillers from the German-speaking monoglot pharmacist.\n\n\"You will be flying tonight,\" he said with a grin as he read the pharmacological information leaflet. \"This would knock out a horse.\"\n\n\"I always get the best drugs,\" I said. Then I paused. \"Can... can I buy you a coffee? To say thank you?\"\n\nHe glanced at his watch. \"Yes, I have time for a coffee. Come. The cafe over there is good and we can sit inside if you wish.\"\n\n\"No. Outside is... outside is better.\"\n\n\"Super, but it is my treat,\" he said, and would not budge on that point.\n\n.:.\n\nI clutched at my coffee cup, and summoned my courage.\n\n\"Can you... tell me anything? I want to know about... what happened to her. I don't really remember much of... that day.\"\n\n\"No. I am sorry, Lucy. I was not there, you see. Also it is not my story to tell.\"\n\n\"Oh.\"\n\n\"But I will ask my father,\" he added, after a pause. He sighed.\n\n\"Oh. Thank you,\" I added, conscious that I'd overstepped some sort of line that I had not known was there.\n\nHe sipped his coffee, then leaned against the backrest of his chair. \"It was a freak thing,\" he continued, after a moment. \"It should not have been possible. Nobody who heard could believe it. We... we even went and checked the site with a Physician and a doctor from the hospital in Bolzano. It should not have happened. Father... he has not forgiven himself for not being able to do anything for... for her.\"\n\n\"The doctors told us... it was probably... instant. Her neck... she couldn't... there was nothing...\"\n\nI swallowed, and looked away from the unbearable sympathy in his eyes.\n\n\"There is a difference between knowing something is hopeless, and experiencing the reality of it when it is actually happening to you,\" he said. \"I am like my mother in this regard. It is why I am good at my job. I can... put the hard emotions into a box and take them out only when I have to. My father... he cannot do this. He is too gentle. Your sister... that rescue... he is not the same. He does not go to that mountain very often any more.\"\n\nI squeezed my eyes shut, swallowed a mouthful of bitter bile back down. \"I'm sorry,\" I said, when I could.\n\n\"Also.\"\n\n\"Thank you for... for being there for me today.\"\n\n\"It was... no. Pleasure would be the wrong word. It was an honour,\" he continued softly. \"A debt of the soul.\" He watched me for a moment. \"Lucy... are you going to be able to get back to your chalet safely?\"\n\n\"I... think so. I'll manage somehow.\"\n\n\"That is unacceptable. I will walk with you and carry your skis and poles.\"\n\n\"Anton, please. You need to work. And you've wasted enough time on me already today...\"\n\n\"It will take another half an hour. I will phone the Bergrettungleiter; he will understand that this is important. Come. I will get you safely home.\"\n\n\"Thank you,\" I whispered, touched.\n\n.:.\n\nI sat, staring at the slowly changing vista outside. My hostess had clucked over me like a mother hen, making me lunch and ensuring that I had extra blankets and a hot water bottle. She'd shooed Anton out of the apartment and down the stairs with good humour once he'd handed me over to her care. I'd leaned awkwardly into the sun bay, watched him walking down the road back into the town. He'd stopped to stare back at the apartment block, shake his head like he had something stuck in it, and then turn to stare up into the mountains where...\n\nI swallowed, turned away from the glass, reached for my phone.\n\nMy mum's voice was a comfort as always, but I could almost taste the barely-masked sadness and worry when I told her about my day.\n\n\"Lucia, are you ok?\" she probed.\n\n\"Not even slightly\" I answered her, not even trying to deflect for once. \"Not even the smallest, most infinitesimal bit. I'm a wreck, Mamma. Coming back here...\"\n\n\"Was perhaps not the wisest idea,\" she finished for me.\n\n\"It hurts,\" I whispered. \"It still hurts like it was yesterday. I can remember almost nothing of it and it still tears at me like a knife. I knew it would be hard. I just didn't know how hard it would be...\"\n\n\"It will never stop, Lucia. It will just... change.\"\n\n\"Mamma...\"\n\n\"Lo so, piccolina mia,\" and from her lapse into her native Italian and the huskiness of her voice I knew that she too was trying not to cry.\n\nI took a breath, sighed it out, found calm.\n\n\"Mamma... I met someone here. A mountain rescue guide, I think. His dad... his dad was with Sue. At the end.\"\n\n\"Herr Larcher,\" she said, after a long pause. \"I remember him only too well. Well. I suppose it makes sense his family would still be there. Lucia... be careful. I know how... fragile you are over this. Be careful where you go digging, cara mia. Sometimes it's best to leave our dead in peace.\"\n\n\"I want to know. I want to know that she was cared for. I need to know that she was cared for, Mamma. It's... I... I need this. I need this if I am ever going to have any chance of letting go...\"\n\nI heard the sigh, heard her blow her nose. Her voice was thick, strained, when she spoke again.\n\n\"I know. I'm here. I wish I was there, but I'm here and I will be here when you need me.\"\n\n\"I know,\" I breathed.\n\n\"Go rest, Lulubelle. Take those wonder drugs that you got and get some rest. I'll phone you in the morning to check on you. Ti amo, tesoro.\"\n\n\"I love you too, Mamma.\"\n\nI broke the connection, sniffed, and wiped my nose on my sleeve.\n\nI took a second dose of my painkillers. The drugs were not proving to be anywhere near as effective as I'd hoped they would be - my shoulder stubbornly refused to stop aching. Resting would be impossible and I was desperately lonely. So I struggled back into my boots and my jacket and went for a slow, cautious walk around the town. I paused at the Chiessa di Santa Maria to light a candle and say a quiet prayer for Sue, then sat for a while in the comforting silence and solitude of the church. I found a deli, ate a small salad, and wandered the high street for a bit. As the afternoon became early evening I made my way slowly back up the hill to my apartment.\n\nI made a simple early supper, and poured Sue and I both a glass of wine to go with it. My body ached, and I took another dose of painkillers, earlier than I probably should have, but I was too tired and sad to really give a fuck about following the rules any more.\n\nThird time seemed the charm, because the pain diminished quickly.\n\nI read for a bit.\n\nI paced for a bit more.\n\nAnd then, bored, tired of being cooped up and feeling significantly better and more upbeat about life, I pulled on my jacket and cap and gloves and went looking for a bar and some Apr\u00e8s-ski entertainment to distract me from my sorrows. Maybe I'd find some people my age I could hang out with.\n\n.:.\n\nThe bar I ended up in was loud, and dark, and awesome. I was at one with the music, in perfect harmony with all the lovely friendly people around me as they talked and shouted and danced and sang along with me to songs I didn't know the words to. I drank my fluorescent green cocktail - a strange concoction that the bartender had poured for me in sympathy when he saw my sling. And I drank most of the subsequent Bacardi and something yellow he poured for me - I sprinkled the rest as a libation to the armless Barbie doll who was doing something anatomically improbable on the countertop with a legless Ken.\n\nI found a group of friendly girls, danced with them, laughing along with them at me and my terrible rhythm and my ridiculous sling. I mingled and flirted with a group of boys, and scored myself another Bacardi and something else off them. Pleased as punch with my newly discovered superpower, I began insinuating myself into a mixed group in a corner only for a stunning blonde ice queen to grab me, shout something I couldn't understand at my face, and pull me back to the bar.\n\nShe pushed me onto a barstool and got up close and personal. I wondered what she had planned for me. I giggled. Maybe I was her type. I tried to pay attention to her words.\n\n\"Lucy! Lucy! What are you doing here!\" she was shouting.\n\nI squinted at her, wondering how she knew my name, then beamed in delight as her features suddenly clicked into place.\n\n\"Giselle!\" I bubbled. \"It's you! Oh, awesome! I love this place! Everyone is so friendly!\" I reached out to hug her, wanting to share my happiness with my new best friend.\n\n\"Lucy! Was ist los? What are you doing?\" she demanded as she shrugged out of my clumsy one-armed hug. She stared at me, then bent forward, peering into my eyes. \"Lucy, m\u00e4dchen, what the fuck have you taken? Ecstasy?\"\n\n\"Oh, just some drugs and a lot of rum,\" I said, laughing at her expression. \"Oh you're so serious, Giselle! I know what it is. Perfectly fine over the counter things! It's just painkillers. Um... it's.. here... somewhere...\"\n\nI fumbled around, found my prescription slip in my jacket pocket and waved it triumphantly at her; she snatched it from me and held it up to a light.\n\n\"Verdamnte Scheisse!\" she swore in shock. \"No more alcohol for you. Hey! Rudi! What the fuck, asshole!\"\n\nShe descended into a long incomprehensible tirade directed at me, the barman and the world in general, complete with amusing gesticulation and head shaking, and the man behind the bar held up his hands and shook his head in mute apology. She turned back to me, caught me as I started to slip off the bar stool, and took a breath as if she was about to begin round two.\n\nThen she paused. \"Oh, danke Scheisse,\" she said. She stood up straight and waved.\n\n\"Anton!\" she shouted. \"Anton! Come here, Saftsack! Your idiot friend has mixed alcohol with codeine!\"\n\nI heard a loud, exasperated \"Fuck!\" from behind me, and I started to giggle again. I felt a strong hand on my uninjured shoulder, and gazed woozily up at Anton's utterly divine face.\n\n\"Lucy?\" he asked. \"Lucy, are you Ok? Lucy?\"\n\n\"Hi,\" I drawled, unutterably happy to see him. \"I'm super.\"\n\nI began to slide off the stool again.\n\n\"She is crazy!\" Giselle shouted as she lifted me up and pinned me to the bar with the weight of her body. \"What is wrong with her? Why would she do something so stupid! Scheisse!\"\n\n\"Die Bergengel war ihre Schwester!\" he snapped at her. \"Sie tut weh, Giselle!\"\n\n\"Oh fuck,\" she said, stunned.\n\nPeople around us who'd been spectating abruptly stopped and turned swiftly away. A bubble of silence seemed to spread around me as Anton got an arm under me and pulled me up from the bar stool. \"Ich bringe sie in ihre Wohnung. Bitte rufen Sie Maria an.\"\n\n\"You have such a lovely voice,\" I managed to articulate. I tucked my face into his neck. \"So gentle. So warm. I love your accent...\"\n\n\"Anton...\" I heard Giselle protesting. \"Anton... I'm sorry! Es tut mir leid! Please, don't be angry with me! I didn't know who she was!\"\n\n\"I know. I know. Giselle, I must take her. She will get home like this. She will freeze. She must go and sleep this off. Ich werde es wieder gutmachen. Giselle, ich bitte dich. Phone Maria and let her know I am bringing the girl home.\"\n\n.:.\n\n\"Come. Another step, Lucy. Almost. There.\"\n\nI could hear the rasp of his breath with each laboured step; the poor man was pretty much carrying me up the perilous icy road and struggling both for footing and to keep me upright.\n\n\"You are so nice and strong,\" I said. \"Handsome too.\"\n\n\"It is... lucky that... I am strong... since I am... responsible... for you,\" he panted.\n\n\"I am not a child,\" I protested. \"I'm twenty seven!\"\n\n\"Tonight you... are... seven only,\" he muttered through gritted teeth. \"What made you drink... like that on top of your... painkillers, Himmel wei\u00df...\"\n\n\"It was great fun,\" I said. \"I feel better now though. The cold air is helping. Wait. Anton. I think I can stand...\"\n\n\"Lucy, nein!\"\n\nI wriggled free from him, lifted a foot, slipped, fell, and took him down with me.\n\n\"Oh,\" I said, staring up at the stars. \"Ow. I guess I can't stand after all.\" I shook with barely suppressed laughter. \"Silly me. I love these drugs. They don't let me have fun stuff like this back home. Whee!\"\n\nAnton was laughing too. He disentangled himself from me, stood up, and stretched out his back with a groan. \"M\u00e4dchen, du bist verr\u00fcckt,\" he said, staring down at me with a grin. \"Come. Not far to go. There is your chalet.\"\n\nHe reached down and pulled me to my feet. I leaned against him as the world danced around me. \"I am sorry.\" I giggled into his chest. \"I feel so stupid. I shouldn't have...\"\n\n\"Yes. What you did was stupid, but you are not,\" he agreed. \"But you are very lucky Giselle saw you. It is cold tonight and if you had fallen or got lost on the way home...\"\n\n\"I feel really bad for disrupting her birthday like that. How can I make it up to her?\"\n\n\"She will get over it. I will go back once you are home and... smooth things over.\"\n\n\"Is she your partner?\" I said. \"Oh now that would be tragic...\"\n\nHe laughed loudly. \"God, no! She is my cousin. The daughter of my father's sister.\"\n\n\"Oh. I'm glad.\"\n\n\"Glad?\"\n\n\"Glad she's your cousin,\" I said as I tried to drape my arm around him and failed. \"That means there's no competition.\" I settled for wrapping my arm around his waist and pulling myself closer. \"You are so nice,\" I breathed. \"I like you very much. I think I will keep you forever.\"\n\n\"Lucy, Lucy, it is a mercy for you that you will hopefully remember none of this,\" he said, with a gentle, somewhat sad smile.\n\nMy hostess was waiting at the door, wrapped in a shawl and shivering in the bitter cold. She gave us a disgusted look that quickly changed to genuine concern as Anton hurriedly explained the situation. The two of them manoeuvred me upstairs, and she helped me out of my jacket and boots before she placed me on my bed, She covered me with a blanket while Anton pulled out a chair at my table. \"La guarder\u00f2\" he murmured, and she nodded and pulled the door closed behind her.\n\nI fell asleep to the gentle rise and fall of a muted phone conversation in a language I did not understand.\n\n.:.\n\nI woke with a dry mouth and a pounding headache. I groaned, rolled onto my side and gazed blearily around. I could remember parts of the previous night. Loud music, unaccustomed happiness, smiling people, strong arms carrying me, a voice like smoke...\n\nMy shoulder twinged, and I ground my teeth and swore under my breath.\n\nCoffee. I needed some fucking coffee.\n\nAnd why was I still in my fucking clothes? Hadn't I...\n\n\"Oh Jesus,\" I groaned. \"No. Fuck! I must have gone into town...\"\n\nI groaned again, rolled off the bed and stumbled out of the bedroom and to the kitchen.\n\nThere was a note, a glass of water, and a blister pack of tablets on my kitchen table. I stared at them for a moment, mind spinning frantically, then picked up the note. The handwriting was far neater, far rounder, far more elegant than mine would ever be.\n\n\"Lucy-\n\nGood morning, m\u00e4dchen! You drank alcohol on top of painkillers. That was not a super idea. I have left you some paracetamol tablets. Drink the water when you wake up, then eat something with weight, then take the paracetamol for the headache. Also you should buy a box of chocolates for Giselle, she likes Lindt best - you were the life of her birthday party but you brought no present - this is unacceptable! Her shift starts at noon at the Sasslong cablecar station. Good luck!\n\n-Anton\"\n\nI drank the water, and ate something with \"weight\", and took the paracetamol.\n\nI stripped out of my dirty clothes and then, in a sudden throwback moment of paranoia, I checked both my underwear and my body for any signs that I'd fucked or, worse, been fucked by anyone. Thankfully there were no strange stains, no unexpected tenderness, no dried fluid on my skin, no bruises other than those I'd inflicted on myself. I breathed a shuddering sigh of relief that I'd dodged that bullet at least. My early twenties had... well.\n\nLess said the better, really.\n\nI took a long, hot shower. I brushed my teeth. I brushed my hair and found an old hairband to pull it back with since a ponytail was beyond my powers with only one functioning arm. I chose the nicest pair of jeans I had and struggled into them. I was too sore for my bra, so I went with a tight vest and my polar fleece base layer instead.\n\nAnd throughout all these small struggles, I wondered what in the actual fuck I had got up to the previous night.\n\nArmed, armoured and feeling somewhat better, I went looking for a box of chocolates.\n\n.:.\n\n\"Hallo... is Giselle here, please?\"\n\n\"Who are you, please?\"\n\n\"I'm Lucy. Lucy Fitzroy. Ich... I have something I need to give to her.\"\n\n\"One moment.\" The woman reached for her radio, and muttered something into it that I couldn't follow. She listened to the garbled response. \"She is coming,\" she said.\n\n\"Thank you.\"\n\nShe nodded and resumed her chat with a ski instructor, and I lurked awkwardly, feeling like an uninvited and unwelcome guest.\n\nGiselle appeared at last. I watched her take a deep breath before approaching me.\n\n\"I'm sorry,\" I blurted out before she had time to speak. \"I am really sorry for what I did. I don't remember any of it. Not really. I drank wine and then took the painkillers and then probably drank much more. It was stupid... I have no excuse. It... it was a really, really hard day for me. And I'm sorry you had to see that. And I'm sorry for spoiling your birthday party...\"\n\nShe watched me, head tilted slightly. \"Are you better now?\" she gently asked.\n\n\"A bit.\"\n\n\"No dizziness, no nausea? No blurred sight?\"\n\n\"No. Just a headache and the shoulder, of course. Thank you for asking...\"\n\n\"Good. That is good. I am glad you are... feeling better.\"\n\nShe rocked from foot to foot, and looked like she wanted to say something more.\n\nI remembered the gift, and fumbled in my bag. I pulled out the large box of Lindt Sauerkirsch. \"To make this a proper apology,\" I said, holding it out to her.\n\n\"Oh hell,\" she muttered, flushing. She gave me a rueful grin. \"Anton told you. That man is impossible.\"\n\nShe took the box from me, then sighed. \"I am sorry, too,\" she said. \"I am so sorry for being so rude to you last night. I didn't know who you were. I thought you were just an typical idiot English tourist like so many others we get here, not listening to the doctors and causing a scene. I... I can not imagine how... how hard it must be for you to be here. You are so brave.\"\n\n\"It's ok. It's fine,\" I said, staring hard at my feet.\n\n\"No. I know that it is not.\" She tucked the box under her arm, reached out and pulled me into an awkward one-armed hug. \"There is nothing to forgive,\" she said. She let me go, and smiled. \"For you, anyway. That fucker Anton, however. These are my favourites. My clothes will not fit after I have eaten these. I am going to kill him.\"\n\n\"Happy birthday,\" I said shyly.\n\n\"Thank you. I must go. Rest your shoulder, please, Lucy. And no more mixing your medications,\" she added sternly, waving her finger at me, the effect spoiled by her youthful grin. She paused. \"Have you seen Anton yet?\" she asked. \"He carried you home last night and stayed with you until he was sure you would be okay.\"\n\n\"No,\" I answered, ashamed of myself. \"I didn't realise that he stayed... oh God, how embarrassing. Giselle... I don't know where to find him. I need to thank him for looking after me. Can you help me? Please?\"\n\n\"He is working today,\" she answered gently. \"He will be done... after lunch. Come back here at two in the afternoon and you will probably find him. I will call him for you and tell him that you are looking for him,\" she added with a smile.\n\n\"Um... thank you.\"\n\nShe grinned. \"Bis sp\u00e4ter, Lucy. Thank you for my perfect birthday present.\"\n\nI made my way carefully back down into the town, hunting coffee, a book, and some sheltered spot where I could sit and think for a while while I waited for lunchtime to inch closer.",
        ".:.\n\n\"Hello, Lucy.\"\n\n\"Hello,\" I squeaked, feeling woefully unsure of myself as I stared up at him. \"Anton... I am so sorry. I am mortified... Jesus, I feel like such an idiot. Thank you for getting me home safely. Was... was last night bad?\"\n\nHe grinned down at me. \"I have seen worse.\"\n\n\"What... what did I do? I have a big blank part of the night that I can not remember.\"\n\n\"Giselle and I think you had a reaction from the codeine and the alcohol. It can happen. You were in the M\u00e4rchenwald dancing with the fairies.\"\n\n\"Oh... oh God.\"\n\n\"It could have been extremely dangerous. Lucky for you it seemed to just make you... very happy.\"\n\n\"How... happy?\"\n\n\"You were laughing and dancing and...\"\n\n\"And... what?\"\n\n\"Very friendly,\" he said, with a gentle smile.\n\n\"Oh God...\"\n\n\"It is ok, we see far worse from other English here.\"\n\nI hid my face in my hand, and wondered if it was possible to die of shame. \"Oh my God...\"\n\n\"Lucy, it is fine. Selva is a Touristenstadt. We see it often. Usually it's groups of young girls, or men - not soloists like you. It is nice to have a change, yes?\"\n\n\"Anton, you are not helping,\" I protested. I could feel my cheeks flaming red.\n\nHe laughed and relented.\n\n\"How are you feeling today? Better? Your shoulder?\"\n\n\"Less sore. Still aching but I feel like I have more motion today.\"\n\n\"Good.\"\n\n\"Anton... did I... was I...\"\n\n\"Yes?\"\n\n\"Was I inappropriate with... anyone? I am almost certain that I was. It happens when... when I go too far. Oh. Oh no no no. Oh fuck no. Please tell me... I didn't try to take my shirt off and flash anyone... did I?\"\n\n\"Nein, nein,\" he chuckled. \"Nothing like that. Or if you did, I did not see it, and Giselle did not say anything like that.\"\n\n\"Oh. Thank fuck. That's a huge relief.\" I stared up at him, and almost forgot for a moment what I wanted to say to him. \"Well. I just wanted to thank you for saving me again. I'm sorry I was such an idiot. I'll... I'll try to be better from now on. Hopefully that's the last you'll have to see of me. Anyway,\" I added, truly flustered now and muddling my words, \"Bye you. Thank!\"\n\nHe caught my hand as I turned to leave; he held it gently in his and wouldn't let me pull away.\n\n\"Lucy,\" he said. \"You need to be gentler with yourself.\"\n\nI tried to ignore the sudden ache in my chest. I tried to make my response light so I could extricate myself.\n\n\"What do you...\"\n\n\"Part of you is broken. That is glass-clear. But you do not need to make excuses for yourself. And you do not need to apologise to me for this or anything else. You do not need to feel ashamed of yesterday. Everyone can have a lapse of judgement. Everyone can make a mistake. Especially when you are carrying... such a heavy weight.\"\n\n\"My life is a mistake,\" I said, unable to hold back the words any longer.\n\nHe couldn't mask his shock.\n\n\"It should have been me up there. Not her. I'm the one who should be dead. Not her. She was a million, a billion times more worthy than me. It's my fault. All this... all of this is my fault...\"\n\nI turned away, desperate not to make a scene, to get somewhere private where I could try to crawl away to hide.\n\n\"Oh, nein, Lucy, nein...\" he sighed.\n\nI tried to pull my hand free. \"Please,\" I said, as what little self-control I still had burned out. \"Please. Please let me go. Ti supplico...\"\n\nHe pulled me to him and wrapped his strong, comforting arms around me.\n\n\"No,\" he said.\n\nHe held me to his chest until I simply could not cry any more.\n\n.:.\n\nHe'd taken me into the cablecar station to preserve my privacy from curious bystanders, and he'd sat me down at a table in the small employee canteen.\n\n\"I'm so sorry,\" I whispered. \"You must be so tired of me by now.\"\n\n\"Here,\" he said, as he set a cup of coffee down in front of me. \"And no, I am not. We live with this too. Not in the same manner as you, but she is still always there. She and others like her.\"\n\n\"It should have been me. Not her, me.\"\n\nHe sat down across from me.\n\n\"Lucy... life is just patterns in the chaos. In my job... I see terrible things happen to innocents. There is no reason to it. No making sense of it. We have to simply help them if we can, or mourn them and carry on if we can not.\"\n\n\"I wish...\" I whispered.\n\n\"I know.\"\n\n\"We were racing. We'd been racing all morning. She loved trying to keep up with me. Her favourite thing was to do something better than me. It was my favourite thing too. We'd make up challenges, you see. She was so fast, so agile. She was a natural athlete. If we'd lived in Bern or Innsbruck or Cortina instead of St Albans then she'd have been a champion. She was that good. I was good, but she would have been a million times better than I could ever be...\"\n\n\"You cannot blame yourself, Lucy.\"\n\n\"I went down the half pipe. She fell because of me.\"\n\n\"Was she happy, that day?\"\n\n\"Yes,\" I whispered.\n\n\"Were you?\"\n\n\"Yes...\" I hiccoughed.\n\nHe reached over the table and took my hand. \"Then remember that part of it. She fell. It happens even to the champions. A million times, she would have got up and brushed the snow off and laughed with you. In this world... the angle was just wrong, and she did not. She was happy, Lucy. She was doing what she loved with the people that she loved.\"\n\nHe squeezed my hand. \"Lucy, you cannot carry this forever. It was not your fault.\"\n\n\"I'm her big sister. It's my job to look after her. She trusted me. I should have... I wish I'd...\"\n\n\"You cannot control everything, Lucy.\"\n\nI took a shuddering breath, and another. \"I miss her so much,\" I whispered. \"It is so hard without her. She was my light. She made me better.\"\n\n\"Yes.\"\n\nI sniffed, scrubbed at my eyes, fought for calm. \"I... I remember something from last night. Giselle was shouting something, and then you said something about her. About Sue. What was it? Please...\"\n\nHe sighed. \"We call your sister 'Die Bergengel' here.\"\n\n\"... oh. Mountain... angel?\" I asked, softly.\n\n\"Yes.\"\n\n\"She'd... love that. There is a... a bear by the memorial by her name. A child's teddy bear. Do... do you know who left it there for her?\"\n\n\"My father,\" he said, after a long, heavy silence. \"It was my father. Giselle is almost of an age with your sister, you see. She is my father's favourite of all of the cousins. I think that is why it affects him so. Every year on... on that day, he goes to Piz Sella. It is the only time he goes there any more.\"\n\n\"Oh. Can... can you thank him? For me? Please...\"\n\n\"No.\"\n\n\"No?\" I stared at him, not understanding the immediate, flat denial.\n\n\"No, Lucy. That is your part in this. You should do that yourself. He has asked if it would be possible to meet with you.\"\n\nI swallowed painfully. \"I...\"\n\n\"I think he will be able to tell you the things you are so desperate to know.\" He paused, sighed. \"And I think... you could perhaps do the same for him in return.\"\n\n\"When?\" I whispered.\n\n\"Now, if you want? His house is not far.\"\n\n\"But... I'm a mess. Look at me, I'm a complete train-wreck, Jesus...\"\n\n\"No,\" he gently corrected me. \"You are not a mess. You are certainly not a wreck. You are a beautiful young woman with a broken heart and a terrible weight on you that you should not have to carry any longer.\"\n\nHe stood, offered me his hand. \"Come. Please.\"\n\n\"Are... are you sure?\"\n\n\"Yes. He is better during the day.\"\n\n\"Will you... stay?\"\n\n\"Yes. Come. It is not far, and it... well. It would mean so much to him.\"\n\n.:.\n\nI breathed in, and held my breath for as long as I could, until black spots danced in my vision. Then I did it again. And again.\n\nIt had been hard. Had I known how hard it would have been, I would never have come.\n\nBut, in some strange way, something felt like it had eased. Somehow I felt like I had perhaps found some small measure of peace. Some starting point from which I could, maybe, begin to move on and let her go.\n\nAnton emerged from his family home, and closed the door behind him. \"Lucy?\" he called to me. \"Are you Ok?\"\n\nI shook my head, not trusting myself to speak just yet.\n\nHe pulled on his gloves and came to me. He put his arm around my shoulder. \"Thank you,\" he said. \"Thank you for sharing that with him. You have removed such a weight from his soul by coming here and closing the circle for us. You are the bravest person I know,\" he added.\n\nI turned away, staring out at the mountains, focussing on holding it together.\n\n\"Lucy?\"\n\n\"Can't.\" I said, shaking my head, vision blurring. \"Can't. Bitte. Can't.\"\n\nHerr Larcher's gentle voice had resurrected far too many things for me. Things that I had locked away forever, things that I had not wanted to remember ever again.\n\nI could remember the way they'd unzipped her jacket and cut open the unicorn shirt she'd loved so much so they could attach the defibrillator electrodes and try to restart her heart. Pieces of pink and gold sequins had spilled around her on the snow like drops of angel's blood.\n\nI could remember the way she'd stared sightlessly up into the gently falling snow, flakes frosting her perfect lips and the white-gold locks of her glorious hair.\n\nI could remember the way they'd bundled her so desperately into the helicopter.\n\nI could remember how her arm had fallen free from the stretcher as they lifted her, and had hung suspended in the void, fingers curled into a graceful gesture no longer of this world.\n\nAnd I could remember the way four grown men had had to pry me free from the helicopter's door and landing skis and pin me down in the snow, kicking and screaming and biting like a rabid dog, mad with rage and grief at not being permitted to go with her, to be with her one last time...\n\nBy the time they'd taken me off suicide watch the cuts in my wrists had scabbed over and the new grass of spring had taken root on her grave.\n\nI staggered at that memory and would have fallen. But he caught me; his arms strong around me, clasped over my heart.\n\n\"Come, Lucy. Come, angel. Let me get you home.\"\n\n.:.\n\nI stared into my wineglass.\n\n\"Jesus, what a day.\"\n\n\"Yes. It has been a long one.\"\n\n\"Thank you for looking after me, Anton. Thank you for being here. You must be utterly exhausted and completely sick of me.\"\n\n\"Lucy, you need to stop thanking me for this. I should be thanking you. This is a great weight you have laid to rest for my family.\"\n\nHe waited for me to look up. \"If I did not want to be here I would not be here, Lucy.\"\n\n\"You really want to spend your time caring for a mad British wench who can't go five minutes without crying?\" I asked with the palest shade of a smile.\n\n\"Well... if you put it like that,\" he said with a grin. Then the grin faded. \"How... how are you feeling?\"\n\n\"Raw. Aching. But... it feels less heavy now, somehow.\"\n\n\"You have taken the first step, maybe.\"\n\n\"The first of many.\"\n\n\"Yes, but you have taken it.\"\n\nI sighed, and stared down at the meal I'd made us.\n\n\"I'm sorry it is so plain, Anton. This meal.\"\n\n\"It is very delicious. I am enjoying it a great deal.\"\n\n\"Oh. Well. I'm glad you like it. It was the least I could do for you. You've helped me so much. You and your family. At least I can do one thing right today.\"\n\nSilence fell. I toyed awkwardly with my food.\n\n\"So how much longer will you stay here? Now that you have your memories?\"\n\nI sighed, not really ready to think about leaving just yet.\n\n\"A couple more days, I guess. I'm due to fly out on Sunday. And I want... I want to spend some time outside. In the snow and the wind and the cold. Not on... that mountain, but the others. It will remind me of her. Of us. Of what we had.\"\n\n\"And then? Back to the boyfriend in Britain? The fancy job and the nice house?\"\n\n\"No,\" I said, poking at my food. \"No, just to what remains of my family... There is nobody waiting for me, not any more. No partner. No job. No fancy house. Nothing. I guess I'll need to grow up and find work again so I can get a place of my own and start over.\"\n\n\"There is another heavy story here that you are not telling me, hmm?\"\n\nI stared at the table. I put down my fork, picked up my wineglass and drained it. I coughed, then filled it again, and took a gulp.\n\n\"Lucy, you are shaking. What is it?\" he said, softly.\n\n\"It's... there was someone. There isn't any more. I think he got tired of the drama and of having to be the... the foundations for our relationship... such as it was. He... he found another bed that was... warmer and came with less... baggage. I was too broken. Still am, really.\"\n\nI flushed. \"I can't believe I told you that,\" I confessed. \"It must be the wine, loosening this stupid tongue of mine.\"\n\nAnton shook his head, disgusted. \"Schwere Trottel,\" he muttered. \"Idiot.\"\n\n\"Me?\"\n\n\"No, of course not you.\" he said, slightly louder. \"Him. This man. I was saying that he was an idiot, this man. Ja, ja, sure, maybe things were difficult for him. Maybe you are harder to please and take care of than some other woman. But to give up on someone like you? Idiot,\" he repeated.\n\nI flushed, warmed by the fierce intensity of his words.\n\n\"He tried. At least, I think... he did. At first. But... Anton. I have to be fair to him. I was far too cold, far too distant most of the time. Unless I was drinking. He wasn't able to cope. And it wasn't fair to expect him to. And then there is this. Look,\" I added, rolling back my sleeve so he could see the scars on my wrists. \"See?\" I breathed, watching his expression.\n\nHe caught my hand in his. \"I am sorry,\" he sighed, as he gently rolled my sleeve back down. \"I am sorry for everything that has happened to you. But... Lucy, you do not need to find excuses for him.\"\n\n\"Well, he did one good thing, at least. He nagged me to come back here. So I owe him that, I suppose.\"\n\nAnton shook his head. \"You owe him nothing for this. It is you who came here, you who faced this Eiger... this great and terrible thing down. It is you who did it, not him. You should be proud.\"\n\nI stared at my lap, hunting for a safe topic. \"I hope whatever you are missing to spend this time with me is not important,\" I said.\n\nHe let go of my hand, sat back, and snorted in disdain.\n\n\"Pfaugh. Nothing important, just work work work. Sort those supplies. Order these supplies. Make sure the equipment is ready. Coil the ropes. Wax the skis. I did that all this morning in one hour. I am too efficient, you see,\" he added, grinning. \"It is one of my failings. I get bored. So I go patrol even when I am not on the roster. Which is why I found you where I did.\"\n\n\"What do you do when you're not being efficient?\" I teased him.\n\nHe leaned back, amused. \"Cross-country skiing in winter. Paragliding in summer. Mountain biking. I live outdoors. These mountains are part of my family. These mountains are my bones.\"\n\n\"It sounds nice. To have a place you belong to like this.\"\n\nHe ate another mouthful of his meal with every sign of enjoyment.\n\n\"It keeps me out of trouble,\" he said, once he'd swallowed.\n\n\"Now that's a shame,\" I murmured.He glanced up at me, and then aside, and I flushed at my temerity. \"There goes the wine again,\" I whispered. \"Sorry.\"\n\nI put down my fork and topped up our glasses once more. I picked mine up and wandered over to the window. \"I like the night here,\" I said \"The stars seem closer to us when I look at them.\"\n\n\"The air is thinner so they are brighter. They flicker less.\"\n\nI heard him push his chair back, and swallowed nervously as he came to stand beside me.\n\n\"Lucy? What is wrong?\"\n\n\"You have been good to me,\" I whispered. \"Thank you. I will miss... this.\"\n\n\"This?\"\n\nI turned slightly, looked up at him. He watched me, inscrutable in the soft glow of the kitchen counter lights.\n\nI impulsively stood up on my toes, and kissed him. He made a noise of surprise, and I turned away, flushing hot.\n\n\"Sorry,\" I whispered.\n\n\"Lucy...\" he said, softly.\n\nI didn't answer. I could hear the regret in his voice. I braced myself for the rejection I knew was coming.\n\nHis wineglass clinked as he set it aside, and I shivered as he put an arm around me. He pulled me gently, inexorably in towards him, and as I turned back to him I lifted my aching arm and placed my hand against his chest, fingers flat over his heart.\n\n\"You make me feel so safe,\" I sighed. \"You make all that is bad go away. I wish...\"\n\nAnd I shivered again as he planted the gentlest of kisses on my forehead.\n\n\"You are tired. You are distraught,\" he gently remonstrated. \"It would be wrong of me to take advantage of this moment. It would be a betrayal. Do you understand?\"\n\n\"Even if I wanted you to?\" I sighed.\n\n\"Even then. Especially then. No matter how much I might want to. It would be wrong.\"\n\n\"And would you want to?\" My heart thudded painfully.\n\n\"You are a kind and wonderful woman.\" he said, after a pause, as if that were answer enough.\n\nI kissed him only once more that night - full on the lips as a proper goodbye, betrayal be damned.\n\nHe looked back at me several times as he walked slowly down the hill. I stood shivering in the doorway until he was lost in the gloom.\n\nAnd for the first time in forever I fell asleep to a different kind of heartache, yearning for a different person.\n\n.:.\n\nI wormed my way into the gondola, clutching my skis and poles tightly. I was still sore, but I was also determined. Time was passing all too quickly. I had already wasted far too much of it on my histrionics, and I didn't have much left to spend here in this place we had both loved so much.\n\nHigh broken cloud dimmed the otherwise beautiful morning light; and the ten minute ride to the top station was perhaps marginally less spectacular than it could have been.\n\nI sighed as I looked out at the vista.\n\n\"You chose a lovely place, Sue,\" I said. \"Maybe I'll come join you here some day. But not yet, dear heart. Not yet.\"\n\nI dodged the gaggle that blocked the exit of the station, and found a sheltered nook to wince, curse and try to struggle into my goggles and helmet.\n\nI decided that solo skiing sucked. I decided that having only one functional arm probably sucked even more.\n\nI was just about to fling my helmet down the hill in a incandescent fit of rage when someone called my name.\n\n\"Oi! Lucy!\"\n\nI turned, puzzled, searching. Then I saw Giselle.\n\n\"Lucy,\" she called again. She waved. \"Come here! Please!\"\n\n\"Ok!\" I called. I bent and fumbled my skis up off the snow and stumbled towards her. Giselle grabbed my equipment for me and stacked it into a corner. \"Lucy,\" she repeated. \"What are you doing, you mad woman? Your shoulder? Is it healed? Why are you up here? You should be resting!\"\n\n\"No. I am still sore. But I want to ski,\" I said. \"I... I need to ski. To clear my head. For the peace...\"\n\n\"Where are you going?\"\n\n\"Just here. On the nursery slopes. Nothing stupid or insane, I swear.\"\n\nShe stared hard at me, biting her lip, clearly not convinced. \"Ok. Ok. So long as you stay here, bitte. No more heroics, please. Not now.\" She took a breath. \"I don't want to have to rescue you again. Also, have you seen Anton yet?\"\n\nI flushed, shifted uncomfortably.\n\nShe grinned, delighted by my reaction. \"Is that a yes?\"\n\n\"Yes...\"\n\n\"Good. I suppose he behaved? Such a shame. He really likes you, you know,\" she added, mischievously.\n\n\"I... he does?\"\n\n\"Very much,\" she said. Then the grin faded. \"Lucy? What is it?\"\n\nI fiddled with my glove. I couldn't meet her gaze.\n\n\"He said we couldn't... do anything. No matter how he felt. That he wouldn't take advantage of me... because... because I was hurt and vulnerable...\"\n\nI looked away, trying not to let the embarrassment show.\n\n\"Mein Gott, dieser Mann,\" she growled. She put her arm around me. \"He is a... what is the fucking word... a Paladin, as if he lived in the time of Charlemagne. He will never take what he wants no matter how much he desires it. Stumpfkopf.\"\n\nShe lifted my chin, stared hard at me. \"Do you like him, Lucy?\"",
        "\"Yes,\" I swallowed. \"Yes. I do. So very, very much...\"\n\n\"Do you want him?\"\n\n\"Yes.\" I flushed at the admission.\n\n\"Then take him,\" she said. She laughed at my expression.\n\n\"But... Giselle, you're his cousin...\"\n\n\"So?\" she said, amused. \"He is an idiot. So now I will organise his life for him.\"\n\n\"It feels a lot like you're selling... him to me. Like meat at the market...\"\n\nShe leaned in, grinning.\n\n\"He is as close as a brother to me. Like a twin. An idiot twin, like all boys. I have watched him for years. He spends all of his life helping others. I am bored of seeing him waste his time on idiot J\u00fcngfrauen who do not appreciate who or what he is and then fly away like... like butterflies to the next pretty flower.\"\n\nShe sighed. \"I can see you are not like that,\" she added. \"You know what it is to have something precious to you taken from you. You would not be like that. You would be good for him, Lucy.\"\n\n\"What... what should I do?\" I said, plaintively. \"I hardly know him. I hardly know myself. I'm a mess. I don't know what to do, Giselle.\"\n\n\"Are you a woman or a mouse?\" she said as she poked me in the chest. \"Offer yourself to him. Show him who you are. Show him that what he wants, what he needs... is as close to him as his own skin, if he would open those stupid eyes of his and look for once. Do not let him say no.\"\n\n\"I couldn't possibly,\" I protested, flushing bright red.\n\n\"M\u00e4dchen,\" she replied with a laugh. \"The two of you should just get married and save the rest of us from your stupidity. He likes you. You like him. Es ist einfach!\"\n\n\"But... I'm leaving...\"\n\n\"There are planes and trains, are there not? This is not the world of our parents, Lucy. It is smaller. Closer. Close enough perhaps even for you two fools.\"\n\nShe squeezed me hard and then let me go. \"I like you, Lucy. Du hast ein Kriegerherz. You are stronger than you think. So act, woman! So. It is settled. We will be drinking at your favourite bar this evening. Anton will be there.\" She paused. \"Do not take painkillers this time,\" she added. \"And do not be late! Or I will come and find you and drag you by your nose,\" she finished with a grin.\n\n\"Giselle?\"\n\n\"Ja?\"\n\n\"... Thank you. For everything.\"\n\nShe laughed. I watched her as she sauntered back to the station.\n\nHer words to me left me far more panicky than they should have.\n\n.:.\n\nI took a deep breath of the cold air, squared my shoulders, and pushed the door open. Noise and heat spilled out, and I worked my way through the narrow corridor to the bar proper. There were people everywhere, shouting at each-other over the music, laughing, drinking. It was oppressive. Overwhelming. Faustian. I fought down the desire to turn around and make a run for it. If I ran now I'd never come back. And Giselle would never ask me again, of that I was sure. And I'd leave, having not at least tried... I gritted my teeth, and slowly started a circuit, searching for her.\n\n\"Lucy!\"\n\nI felt an arm around my waist, and Giselle laughed at me. \"You are blind too! Come join us, bitte! Wait... have you taken anything?\" she added, suddenly suspicious.\n\n\"No... not yet...\"\n\n\"Super! Here, drink this!\" she said, handing me something bright orange and frightening, barely tamed by a martini glass. \"Das ist Lucy!\" she shouted to her group as she dragged me to their table. \"Lucy, das ist everyone!\"\n\nGiselle installed me beside her, and leaned in. \"We are celebrating; it is Wednesday and we have survived you tourists!\"\n\nShe laughed at my expression. \"It is a joke, Lucy! We all work on the ski slopes as medics or mountain rescue or cable car operators and so on and so on. So when the tourists are off the slopes, and we have washed away the evidence, we come and enjoy ourselves here!\"\n\nI sipped my bright orange horror. It was far better than I'd feared it would be, and it disappeared all too quickly.\n\nThe music changed, and laughing people started dancing everywhere. I watched as a tall, elegant brunette in extremely tight clothes climbed onto a table and started to gyrate - everyone was whistling and cheering at her; she was laughing, exhilarated.\n\n\"This place is crazy!\" I shouted in Giselle's ear.\n\n\"You love it!\" she shouted back as she topped up my glass. \"Have another drink! Then maybe you will dance for us again!\" she added, wickedly.\n\n\"Never!\" I protested.\n\nShe laughed, then leaned over to have a brief, unintelligible conversation with a guy. Then she turned, put her lips to my ear. \"Anton will be here soon, I think,\" she said. \"He is always late!\" She watched me. \"Do not even think of trying to run away!\"\n\nShe grinned and patted my shoulder.\n\nI slowly relaxed. Giselle and her friends switched to English so they could include me, and were telling each-other the more hilarious parts of their respective days. They were screaming with laughter; loud and rowdy and happy and lovely and so delightfully kind to have welcomed me into their circle like this.\n\nA man named Carlo had just started telling us about the speedwing pilot who'd misjudged his landing approach and had to be helped out of a fir tree when Giselle screamed and knocked over her almost-empty glass. \"Anton, nein, fuck off!\" she shouted, flailing her arms; he laughed and stepped back, taking his obviously freezing hands off her cheeks. Then he saw me.\n\n\"Oh,\" he said.\n\n\"Hah! Surprise, fucker! Anton, it's Lucy!\" Giselle said, laughing at his obvious confusion. \"I brought her,\" she announced, triumphant. \"She is joining us, it is decided! Come. There is room for you!\"\n\nShe grabbed his hand and pulled him unceremoniously between us. \"Sit,\" she commanded. \"Sit there.\"\n\nAmused friends and colleagues laughed at us - Anton shook his head, clearly teetering between amused and vexed. I stared at my lap, wishing the floor could swallow me.\n\n\"Giselle, du bist ein Teufel. Hallo, Lucy!\" he added. He leaned in. \"How... how are you feeling?\"\n\n\"Ok,\" I managed, distracted by the gentle pressure of his leg against mine. \"Better, I think, thank you. And you?\"\n\n\"Better, I think,\" he said with a gentle smile.\n\nConversation resumed around us, and Giselle poured Anton a glass from the table's jug of bright orange liquid alcoholic sunshine.\n\n\"I'm sorry,\" he breathed into my ear. \"Giselle is a force of nature. She is enormously pushy when she gets started. We can leave if you want.\"\n\n\"No,\" I answered him. \"Sit, be with your friends. I'm fine. Really. I'm... it's... it's nice to just sit and listen with people for once. I'm enjoying being here, ok? It's... it's nice.\"\n\n\"Please say if that changes, ok?\"\n\n\"Ok.\"\n\nI didn't think it would.\n\nI was conscious of very little other than the strange lightness I felt beside him. I listened to the conversations around us, laughed at the appropriate places, answered questions directed my way, smiled at them all... but what I was really doing was basking in his nearness to me. In the way my skin would tingle when he moved. Of the strange, almost electric shock I'd feel when he'd push his leg gently against mine.\n\nGiselle made sure that our glasses stayed full, and at some point Anton put his arm around me.\n\nI could not remember ever being so happy.\n\nI leaned in to him, contentedly listening to him bantering with his friends. I caught Giselle's eye once, and blushed hot at the approving smirk and clandestine thumbs-up she gave me. Anton's arm migrated slowly lower down my back, and eventually wound up in my lap, gently curled to follow the contours of my thigh.\n\n\"I like being like this with you,\" I breathed into his ear during a brief lull in the music.\n\n\"Also,\" he softly replied, as he squeezed my thigh, and I glowed in the warmth his single word woke in me.\n\n.:.\n\n\"Sleep well!\" the group shouted at us as we got up to leave. Giselle cackled into her sixth... or was it seventh... drink of the night.\n\n\"Ja, ja,\" Anton retorted good-naturedly. I took his arm, gave Giselle one last private \"Thank you\" smile, and pulled him away from them.\n\n\"Sorry for that,\" he said. \"They are...\"\n\n\"Friends,\" I finished for him. I leaned my head in against his shoulder. \"You are lucky, you know. Your cousin really loves you.\"\n\n\"She has always enjoyed bossing me around, that much is certain.\"\n\nHe held the door for me, and helped me down the short but treacherous flight of stairs.\n\n\"Oh... it's snowing,\" I sighed, delighted, as we emerged into the night. \"It's so beautiful.\"\n\nI held out my arm, then spun slowly around, happy as I watched the flakes fall. \"It's so peaceful. I love it when it's like this.\"\n\n\"Yes,\" he agreed. He reached out to steady me as I stumbled slightly, and I caught his hand and pulled myself to him. I stood up on my toes, pushed hard against him, and kissed him.\n\nHe made a noise; perhaps of surprise. But he wrapped his arms around me and held me tight. And when I broke away, I tucked my face into his chest and simply breathed for a while.\n\n\"Lucy,\" he said, after some time. He tried to disentangle himself from me without hurting my shoulder, but I refused to let go.\n\n\"No. Stop. Don't...\" I protested. \"I am enjoying that.\"\n\n\"Come. I will walk you home.\"\n\n\"No. Not yet. First... first you are going to listen to me. I know I have a lot of alcohol in me. It's not... not enough to be really drunk and everything that comes with that... but it is enough to be honest. About me. For once.\"\n\nI pulled back, stared up at him. \"Anton... answer me this. Am I not good enough for you?\"\n\n\"What?\" he said, in surprise.\n\n\"Is there something wrong with me? Other than the obvious brokenness, I mean. Is... is my hair the wrong colour for you? My eyes?\"\n\n\"Lucy, what are you talking about?\"\n\n\"Am I too short? Are my breasts too small for you? Is my body the wrong shape for you?\"\n\n\"Lucy!\" he protested, shaking his head, exasperated. \"Nein! What is this nonsense?\"\n\n\"Do you not want me?\" I said. \"Or do you want me to beg? I'll beg if you need me to... if that's your thing...\"\n\nHe stared down at me in shock.\n\n\"This is as carefree as I have ever felt with anyone. Ever. This is as honest as I have ever been or felt that I could be. Even at my worst, at my most self-destructive... I have never been brave enough to be this... this honest with anyone. Anton. I am here. I am right here.. I am... I am asking you to give me a chance. Just... just a chance...please.\"\n\n\"A... chance?\"\n\n\"To show you how... how much I want to be yours. You make me happy. You make me feel safe. I know it's stupid, and I'm stupid, and this whole situation is stupid. I know you don't know me. I know I'm broken; a wreck. But I really like you. I really, really like you.\"\n\nI waited, staring up at him, trying to find some spark of... anything... in his face.\n\n\"Say something, please?\" I begged. \"Say anything. Anything at all. I don't....\"\n\n\"Of course you're good enough! Jesus Gott! You are far better than good enough. I...\"\n\nHe rubbed his hands fiercely back and forward through his hair and roared; a deep, angry noise of frustration.\n\nI watched him, scared by the intensity of his reaction.\n\nHe took a breath. He took another. He leaned forward, put his hands on my shoulders, stared into my eyes.\n\n\"Lucy... I am the person who found you, who treated you,\" he continued, softer. \"I should not get involved with you. It is... unethical. You could not be thinking clearly. You could still be suffering concussion. You could...\"\n\n\"Jesus God Christ, fuck the fucking ethics of this, Anton! I have had to live with trauma my entire adult life! I've had enough of it! Anton. Please. Bitte... being with you... this is the first time I've felt like I could be free. If even for a heartbeat...\"\n\nHe shook his head, unable to find the words.\n\n\"Act. Do not let him say no.\"\n\nGiselle's words came back to me.\n\nI acted. I pushed him up against the wall. He grunted in surprise. \"We both know that you are more than strong enough to get free of me,\" I said, matter of fact. \"If this isn't want you want, I will not be able to force you. So. Here is your warning. I am going to kiss you in five seconds, Anton Larcher. Four. Three... Two...\"\n\n\"Lucy, this is not fair,\" he protested.\n\n\"Life is not fair. I learned that the hardest way. Your way could be so much easier... and so much more pleasant for us both.\"\n\nI ground myself against him, then gasped as he suddenly put his arms around me and pulled me hard against him.\n\n\"You are making it so hard to behave properly.\" he grumbled into my hair.\n\n\"I don't want you to behave,\" I complained. I stamped my foot in frustration. \"I want you to want me!\"\n\n\"But... I do want you,\" he whispered. \"More than anyone else ever...\"\n\n\"So kiss me,\" I begged him. \"So show me. So...\"\n\nSo he did.\n\n.:.\n\n\"Oh god, oh god,\" I panted into his chest as I broke for sanity.\n\n\"Are you... ok,\" he whispered. He kissed my brow, my cheeks, and my burning lips once more.\n\n\"Yes. So good,\" I whimpered. \"Oh, oh, that was special...\"\n\n\"We are becoming Herr and Frau Snowman,\" he observed, deadpan.\n\n\"I do not care.\"\n\n\"You will get cold, soon.\"\n\n\"No, I will not. Not while you are holding me like this, and kissing me the way you just did...\"\n\nHe laughed softly. \"Ok,\" he said, after a moment. \"You have won, Lucy.\"\n\n\"Good,\" I breathed. \"Jesus. It took long enough to convince you.\"\n\n\"It was not a fair fight.\"\n\n\"It does feel like you had a bit of a handicap,\" I said with a grin, as I pushed myself against him. I stared up at him. \"Oh, my. You are a very delicious man, Anton.\"\n\n\"You are a very beautiful woman, Lucy,\" he answered.\n\n\"Would you like to come home with me, Anton Larcher?\"\n\n\"Yes,\" he breathed. \"More than anything else in the world right now.\"\n\n\"So come on then.\"\n\nI pulled him gently away from the wall, and laughed as he brushed snowflakes out of his hair. The snow was coming down in thick clumps, and the sounds of the town were hushed and muted.\n\n\"It is like a fairy tale,\" I said, happily. I laughed again, exultant, and took his arm. We set off. He held me close, caught me on one or two icy patches, and kept me on my feet as we made our way up the hill.\n\n\"You have a beautiful body,\" he said, at some point.\n\nI smiled. \"What made you say that?\"\n\n\"Your words... earlier. I wanted to make sure that I corrected you.\"\n\n\"So you're saying you like my boobs.\"\n\n\"Uh...\"\n\n\"And that my bum is a nice shape.\"\n\n\"Lucy...\"\n\n\"And that I'm tall enough...\"\n\n\"You are the most beautiful woman I have ever seen or met in my life,\" he said, matter of fact - and my words froze in my throat. He stopped, pulled me to a halt, waited for me to look up at him. \"And you have the bravest heart of any person I know.\"\n\n\"You're making me blush.\"\n\n\"Good. You are even prettier when you blush. Lucy...\"\n\n\"Yes.\"\n\n\"You know that this is not wise for us.\"\n\n\"No. Of course it isn't. But I don't care any more. Do you?\"\n\nHe stared at me. \"No. It is done.\"\n\n\"Come on, then. Let's go and get warmer.\"\n\n.:.\n\nWe snuck in through the front door of the apartment block, and after we had quietly put our boots away I led him up the stairs, his fingers entwined with mine. I fumbled my door open, pulled him over the threshold, and then pushed myself against him again so that I could feel his body against me.\n\n\"Close the door,\" I whispered. \"And help me out of my jacket.\"\n\nHe gently helped free my arm, and hung our jackets up on pegs. I ran my hands over his arms, and then up to his shoulders, admiring the feel of his sculpted body under the smooth fabric of his high-tech base-layer.\n\n\"That is... wonderful,\" he breathed. He shuddered. \"My God, that is amazing. Nobody ever touches me like that.\"\n\n\"They are stupid, then,\" I said. \"Come. Sit. My arm is fucked but I have another one that works... I will touch you if you will let me.\"\n\nI pushed him down into a chair, and began to run my hands over his shoulders and neck. He shivered, made a little noise deep in his throat.\n\nI smiled. \"I guess that is your weak spot,\" I whispered.\n\n\"Yes,\" he hissed. \"Oh, your hands are so nice. Being touched like this by you is so...\"\n\n\"So what.\"\n\n\"Unbelievable.\"\n\n\"You are so tense. You need to relax.\"\n\nI bent forward, kissed his neck, and my belly cramped at the stifled little moan that escaped him.\n\n\"Take off your shirt,\" I breathed into his ear.\n\nHe complied and I bit my lip. He was a gorgeous man. I stood behind him, pulled his head back against my belly, and slowly trailed my fingers over his shoulders, along his neck, and then up to his scalp.\n\nI massaged him gently, listening to my heart and his breathing, conscious of the fire he'd lit deep in me.\n\n\"This is... so good,\" he managed.\n\nI reached up, unzipped my fleece, and, after a moment's struggle I managed to drop it to one side. I followed suit with my vest.\n\n\"Lucy... what...\"\n\n\"Shh, shh,\" I murmured.\n\nI hooked my fingers under my sports bra and pulled. It tangled briefly in my hair, then came free as I cursed it and its mother. I bent forward over him, kissed him, and then moved around in front of him.\n\n\"Oh...\" he breathed, eyes widening. \"Wow.\"\n\n\"Shift the chair back a bit,\" I answered him. \"I am going to sit in your lap, and I am going to rub those shoulders of yours some more.\"\n\n\"You are beautiful.\"\n\n\"Mm. Boobs, he says you're beautiful.\" I laughed. \"I'm glad you like them, but my eyes are up here, Anton.\" I threw my leg over him and sat, sliding forward until I was nestled against the hard bulge of his crotch. \"Mm, that feels good,\" I breathed. \"Oh, that really feels good.\"\n\nHe put his hands on my waist, and held me as he stared up at me.\n\n\"I love your body. I love these flames that are your hair. I love your eisblau eyes. I love the sound of your voice. I love the scent of your skin, your smile, your taste...\"\n\nI gasped as he pulled me down to him. He kissed me, slowly at first, but the urgency built, and as he took my breasts in his hands I moaned and broke for air.\n\nI ground against him. \"Slow... slow,\" I whimpered. \"I will need time. It has been... long. Let me... touch you more... please...\"\n\n\"You taste so good. God, you are a wonderful woman. So sweet. So gentle.\"\n\n\"You... deserve it...\" I moaned. \"Stop... stop, Anton. Let me... please... \"\n\nI pulled back slightly, bent forward to kiss him again. \"I will let you do that again,\" I promised. \"Soon. But... it... it has been long for me, ok, and I need... I need...\"\n\n\"What do you need...\"\n\n\"Time...\" I whispered. I reached out, stroked his neck, his cheek. \"I don't want to freeze up on you. I don't want to hurt you. I don't want to fuck this up. I'm... can... can you be gentle?\"\n\nHe caught my hand, folded it into his, kissed it. \"Yes.\"\n\n\"Good,\" I breathed. I shifted, and groaned deep in my throat as I felt him throb against me. \"Oh, now, that you can do,\" I whispered, grinning. \"That is perfect. Oh. Yes. That...\"\n\nI clasped my hands to his shoulders, and he pulled me against him. I buried my face into his neck, and started to grind on him. \"Oh. Oh. Oh that is good. Oh that feels good.\"\n\n\"You are driving me crazy,\" he groaned. \"You smell like heaven. Your skin is so soft. I love your breasts, your body, your beautiful face.\"\n\n\"Uhn,\" I moaned. \"Wait...\"\n\nI forced myself back and off him.\n\n\"Lucy?\" he said, surprised. \"Where are you going?\"\n\nI dimmed the lights, and unbuttoned my jeans. His eyes widened as I slid them down and off me. And I laughed softly at the quiet \"Scheisse\" he let out as I followed suit with my black g-string. Flushing, giddy, empowered, I walked through to my bedroom, shot him one lingering glance from the doorway, and climbed under my blankets.\n\n\"Anton,\" I called him softly, when he didn't seem to have gotten the hint.\n\n\"Yes?\"\n\n\"Come here. Come here and warm me.\"\n\n.:.\n\nHe generated heat like a furnace. His legs were unbelievably delicious; his stomach flat, sculpted like a statue. He smelled of sweat, and salt, and safety, and I could not get enough of him. The hard rod of his penis dug into me as I kissed him, ground against him, rubbed myself on him. He had a leg between my thighs, and I slid along it, moaning, feeling the slickness of me on him. His tongue was like fire on my neck, my throat, my shoulders, my nipples.",
        "And then his fingers lit a path of flame down my body as he dropped them down to my aching pussy.\n\n\"Oh, oh...\" I panted. \"Touch me. Touch me, please.\" My legs spasmed as he did; I cried out, and kicked the blankets off the bed onto the floor. He laughed, and rolled me onto my back.\n\n\"My God, you are beautiful.\"\n\nI stared up at him, panting. \"Play with me,\" I begged. \"Put those fingers of yours on me and take me.\"\n\n\"Lucy,\" he whispered, \"you are crying...\"\n\n\"No,\" I said. \"I'm not. And I don't care. Fingers. On me.\"\n\nI arched my hips, pushing against him, moaning as he touched me, as he started to play with me, to spread me. \"Take me,\" I begged him, \"put them in me, please, please, I need you... oh... oh God...\"\n\nI writhed, unable to catch my breath, then cried out in frustration out as he shifted from under me.\n\nHe slid down me, and put his hot mouth to my clit.\n\nI arched up off the bed in delight.\n\n\"Anton... Anton...\" I whimpered. \"Oh... that is... that is... please... don't stop...\"\n\nHe repositioned himself. He pulled me further down the bed, spread me wide. His tongue danced on me, his breath warmed my lips, his hands were so deliciously strong on my bum. I pinched my nipples, rubbing them between my fingers, belly spasming with each liquid movement he gave me.\n\nI could feel myself building.\n\nI was moaning.\n\nBut there was nothing I could do. Absolutely nothing I could do.\n\nI was close.\n\nMy legs began to spasm. Then my stomach.\n\nAnd then my orgasm took me.\n\nI pulled him up, grunting with each convulsion of my burning abdominal muscles. I pulled him up, flailing at his face, his back, pulled him up to me, to kiss him, to taste me on him. He was hard against my belly. Throbbing. So ready. Already a bit slick. He hunched forward to kiss me. He was perfectly positioned. And I reached down to find him, to move him, to guide him down to me.\n\nAnd now he was in me. Right where I needed him, where I wanted him, where I had never expected to ever need or want anyone ever again.\n\nHe moaned as he bottomed out in me, and I let out a shuddering \"fu-hu-huck\" of my own. He pulled back, slammed into me, and I grunted again as the breath was forced out of me.\n\n\"Do me,\" I begged him. \"Do me. Fuck me with your hard cock. Fuck me... oh... oh... yes...\"\n\nHe was hard as a steel rod between my thighs. I wrapped my legs around his hips, opening myself, pulling on him with each thrust he gave me, almost unable to think about anything but how amazing his body was; how perfectly he fitted me, and how much I loved having him in me.\n\n\"Lucy,\" he groaned. \"You are so tight...\"\n\n\"Take me... take me... take... please...\"\n\nI dug my nails into his back and pulled him down against me. His sweat slicked my breasts and belly and thighs. He was panting, letting out a low pitched moan with each frantic thrust. I could feel him tensing. I clawed him to me. I felt him arch, heard his pained gasp, the guttural noises, the way his cock began to pulse so wonderfully deep in me as he moaned my name into my neck. He slowed, relaxed against me, and fell forward onto me, nearly crushing me under his delicious body.\n\nHis cock throbbed in me once, twice more, and then he took a long, laboured breath. He lifted his weight up off me, and I moaned deep in my throat as he slipped out.\n\n.:.\n\n\"Are you ok?\"\n\n\"Yes,\" I breathed. \"I don't remember feeling this good since forever.\"\n\n\"You are great for my ego,\" he said.\n\n\"Oh, your ego needs no help, believe me. That was... I don't even have words. Thank you. I needed that so much.\"\n\n\"Mm.\"\n\nHe trailed his fingers down over me, and gently ran them along my soaking, semen-slicked lips.\n\n\"What are you doing?\" I breathed.\n\n\"Exploring,\" he answered. \"I didn't have time before...\"\n\n\"Sorry,\" I smirked. \"I guess... I didn't really give you a chance, did I?\"\n\n\"I am not complaining, you understand.\"\n\n\"Good,\" I said. I wriggled, opened my legs a bit. \"Oh, that's nice. I... I like being explored like this by you...\"\n\nHe bent forward, kissed me.\n\n\"You smell like a piece of heaven,\" he said. \"I am glad I met you. I am glad that you were so... insistent.\"\n\n\"You are the only one... the only one I've ever done this with.\"\n\n\"Sex?\" he said, surprised.\n\n\"No. This... this intimacy. I... I think I could get used to this. With... with you.\"\n\n\"Yes,\" he breathed. He gently parted me, found my clit, and slowly started to circle it with his fingertip.\n\n\"That is... very distracting...\"\n\n\"Lie down,\" he said. \"Lie down so I can distract you some more.\"\n\n\"You are going to get me addicted to you.\"\n\nHe kissed my throat, and then slowly trailed his lips down to my breasts. He gently began to tongue my right nipple. I shifted slightly down, then shuddered as he teased his fingertip along my slightly tender inner lips. \"Oh... oh, it feels so amazing when you do that...\"\n\n\"You are incredibly wet,\" he muttered into my ear.\n\n\"A lot of that is your fault. I think you filled me...\"\n\n\"Mm. Perhaps. It is... wonderfully slick.\"\n\nHe teased me open. I moaned as I felt him penetrate me.\n\n\"I love how you respond to touch. I love how easy you are to read.\"\n\n\"I... just melt...for you...\" I whimpered. \"I never... I never get like this... it's never this easy... Uhn... oh... oh that's so good, right there, right there please please please, right...\"\n\nHe found a slow rhythm, a lethargic forward and backwards that seemed to be my body's natural point of resonance. I could hardly breathe; I couldn't really speak. I couldn't do anything except lie there, panting, clutching at the ruined sheet under me as he tortured me slowly up a wave of sensation.\n\nI was building again.\n\nI could feel it. So could he. He shifted, changed the angle, added a finger from his free hand to me as he stroked me, as he toyed with me.\n\nI clutched at his leg, writhing in little helpless circles as he teased my body. He shifted again. He gently pried my thighs apart, positioned himself between them, and touched his mostly-erect cock to me. He slicked himself up with me and parted me and his head into me, never missing a beat of his slow, cunning fingers.\n\nI arched up as my body spread over him. My legs locked, shaking, as he slid achingly slowly in to me. And as he reached his full depth I came, almost silent, unable to breathe, unable to do anything but voice wordless little moans as I shivered and squirmed on him.\n\nHe pulled out; I shuddered, thigh muscles screaming. He gently lifted my legs and rolled me onto my side. I realised what he wanted, and, groaning, I rolled onto my stomach and got my knees under me. I lifted my hips up to him, spread myself for him, braced myself on my arms, and let him mount me and have me as hard and as deep as he needed me.\n\nIt was exquisite.\n\nAnd once he was done he held me, his body curled perfectly around mine. We didn't talk, we didn't need to. Some part of me knew that I was now completely and utterly his.\n\nI slept, free for once from my dreams.\n\n.:.\n\nI had woken in his arms to his gentle kisses, had another unforgettable orgasm on him, and got to feel him come deep in me again. I fed him, helped him dress, and kissed him a long, lingering goodbye as I chased him off into the bitterly cold morning to start his day. He hadn't wanted to leave, he'd wanted to stay in bed beside me, and it had taken laughing threats of a cold shower to get him to move.\n\nIt had been delicious, and so special, and so monumentally unwise.\n\nBut I didn't care.\n\nI could not think of a nicer way to start a day. And the knowledge that I would see him again that evening made me nearly giddy.\n\nI stripped the soiled bedsheets and put them on to wash in the communal laundry, shivering as still more of him leaked out of me and soaked the tights I'd pulled on for modesty's sake.\n\nI showered myself, and cleaned my throbbing, hyper-sensitised body both inside and out.\n\nI shaved my armpits and my legs and pruned my sparse dusting of pubic hair. Then I washed my \"Flammenhaar\" and tied it up in a ponytail.\n\nI shoved the now washed sheet and mattress cover into the building's coin-operated dryer.\n\nI found a pair of red lace panties that I'd forgotten I'd packed, and a simple white underwire bra to go with them. \"Look at that, you're the flag of Austria,\" I told my grinning reflection. I pulled on my jeans and a fresh slate-grey thermal fleece, then made myself a coffee.\n\nI moved to the sun bay, and watched the town as the sun climbed slowly over the surrounding mountains.\n\nBliss departed, Melancholy returned from her brief holiday jaunt.\n\n\"What now, Sue?\" I whispered. \"What should I do now?\"\n\nThe sane thing to do would be to climb onto the bus on Sunday morning.\n\nBut a rebellious part of me didn't want to. I didn't want to go home, to my stifling room in my ageing parents' house, still cluttered with her things. Back to the need to grow up, find work, then move to a filthy room in a cramped hovel in some shitty part of St Albans doing whatever shitty zero hour contract contract work I could find...\n\nI wanted to stay here. Near her. And... near him.\n\nMaybe...\n\nNo. That was a silly dream.\n\nI sighed. I had a day or two to enjoy myself, but then this brief dream would be over and I would have to find my way.\n\nI drank my coffee, got dressed, and made my way down to town through the night's fresh, white snow. I rambled, with no fixed destination, and found my way eventually to the town square.\n\nAnd there, on a small printed piece of paper stuck in the window of the town's smaller Internet cafe, I saw the magic words, the unlikely key to my potential salvation.\n\nAssistente richiesto. Nessuna esperienza necessaria.\n\nHelp wanted, No experience needed.\n\n\"God bless you, Sue,\" I breathed.\n\n.:.\n\n\"It's six Euro an hour,\" I said, cradling the phone between my ear and my shoulder. \"It's not much, but I can work with it. And it's six days a week, possibly seven sometimes, so that helps too...\"\n\n\"That is nothing,\" my mother protested. \"Lucia, please, be reasonable. What has gotten into you?\"\n\n\"I need time. I need time here. I don't want to come home and live in a shitty little room in a shared house with fuckwits. I don't want to have to work zero hour contracts doing food deliveries or toilet cleaning in order to make ends meet. I don't have a degree, Mamma, and I'm never going to get one now. We both need to acknowledge that. It's... clean here, Mamma. It's peaceful. There's snow. There are mountains. The people are kind. It's cheaper to live here. I can... I can ski, and in summer I can run... and I can be nearer to her. And in a month, or a year, if it sucks, I can leave. But it will have been something new. I will have done... something. For myself.\"\n\n\"But... you could live with us...\"\n\n\"No, Mamma. No. I can't. Not any more. I need to find my way.\"\n\n\"Lucia... what has happened?\"\n\nI stared out of the window. \"I spoke to Herr Larcher, Mamma. We... we spoke about Susanna. About what happened that day. It... it put a lot of the demons to rest. It... I... I feel like I can breathe. For the first time since... since she died.\"\n\n\"Lucia, cucciola... are you ok?\"\n\nI thought for a moment. \"I... you know what? I think I might be on the way to being that. To being... ok.\"\n\n\"So... what are you going to do?\"\n\n\"Find a place to stay. Then I'll move my flight back and start working out all the other admin. I'll ask Giselle about logistics, tax... at least I've got the Italian passport, and my savings for what that's worth, so that's one less can of worms I'll need to eat while I get sorted here...\"\n\n\"Who is Giselle?\"\n\n\"The lovely woman who helped me when I fell. I think... I think she will become a friend.\"\n\n\"It sounds crazy, Lucia,\" my mum said. Then I heard the gentle laugh. \"But then... that was always your way, back... before all this. Be careful. Tell me how it goes, Ok? Now, I'm going to put some money over to your account...\"\n\n\"Mamma, no, you can't keep bailing me out like this!\"\n\n\"... and shouting at me about it is not going to stop me, and you know that, and you are going to tell me when you find a place. \u00c8 chiaro, Lulu?\"\n\n\"Si, Mamma,\" I said, so she knew that I'd heard her and would obey.\n\n.:.\n\n\"Hallo... is Giselle here?\"\n\nThe woman turned, looked at me, and smiled. \"You again? Come. She is at the desk today. Come please!\" She opened the office door and ushered me in.\n\n\"Lucy, hallo,\" Giselle said, waving at me from a desk. \"It is my turn to do the paperwork today. How lucky I have you to entertain me. Come, sit, I am nearly done.\"\n\nI pulled up a chair, and waited patiently for her to find a place to take a break.\n\n\"Would you like coffee?\" she said, as she pushed the papers away.\n\n\"Please.\"\n\n\"Come. I have twenty minutes, lets... how do you say, chat?\"\n\nShe led me through to the canteen; I leaned against the counter and watched her as she found some milk.\n\n\"So did you have a nice sleep?\" she asked, eyes twinkling wickedly.\n\nI blushed bright red.\n\n\"Hah!\" she shouted. \"Yes! I win! The idiot is learning!\"\n\nShe sang a snippet of some song, then laughed to herself. She grabbed us cups from a cupboard, and turned on the coffee machine.\n\nI took a breath. \"Giselle... please... I need your help...\" I said.\n\n\"With what, Schatzi?\" she said absently, as she fiddled with the dials.\n\nI swallowed.\n\n\"There is a job available. At the internet cafe by the square.\"\n\nShe turned, waiting. \"And?\"\n\n\"I can start tomorrow. But my accommodation is only until Sunday. How... how hard would it be for me to find somewhere to stay... here? In Selva?\"\n\n\"Lucy. You are serious about this?\" she asked. \"This is not some crazy after-sex idiot idea?\"\n\n\"It is a completely crazy idea,\" I answered softly. \"But... Susanna is here. And I have always loved these mountains. And there is nothing waiting for me in England. I have no career, no house, no real friends who will miss me.\"\n\n\"Oh, Lucy,\" she sighed. \"That is hard. Nobody? Really?\"\n\n\"Just my parents. My mother, mostly...\"\n\n\"Your family is important, Lucy.\"\n\n\"Yes. But I cannot... heal there, where everything is as it was and nothing has changed since she was taken...\"\n\n\"Ah,\" she breathed. She turned away, and busied herself with the coffee machine. \"How much will you earn?\" she asked, over the complaining whine of the grinder.\n\n\"Six euro an hour.\"\n\n\"That is not bad. It is not amazing, but it is not bad. Signore Jacomo has been looking for someone for a long time. He is... very fussy.\"\n\n\"He seemed to like me enough to offer me the job...\"\n\n\"Then it is settled. So. There are places. They are not as nice as a ski chalet of course, but you will be able to find something in that budget. A room certainly, a bathroom maybe for yourself - maybe a shared kitchen, perhaps not... but you will find find something. Perhaps there will be something in St Ulrich. It is one kilometre further back down the pass, and is less... fuck, what is the word... less popular with tourists.\"\n\nShe handed me a coffee. I raised it to my nose, inhaled, sighed.\n\n\"Thank you for being so kind to me,\" I said, softly.\n\n\"I told you. I like you. You are strong-hearted. You are sweet. You are my cousin's girlfriend. Of course I will help you.\"\n\n\"Girlfriend?\" I whispered, flushing.\n\nShe grinned at me. \"That is what he said this morning when I teased him about you. Silly grumpy Anton. Not enough sleep, I think. So... you are staying? Really? For reals?\"\n\n\"... I hope to. It's all happening very fast and it's probably a huge mistake and this is all going to explode and be a disaster and...\"\n\n\"Lucy,\" she said, softly. \"Shush, shush bitte. Just breathe. You will be fine. I promise, I promise, we will look after you here. I will look after you.\"\n\nShe found me some tissues, and sat me down, and sat beside me, chatting away with me about things of no consequence as if we'd been friends since we were children. And for a strange little moment it felt like I was sitting beside Sue once more.\n\nWhen her break was over she walked me to the office door and hugged me so hard I squeaked.\n\n\"Do not forget to tell him,\" she said, with a smile and a wave.\n\n.:.\n\n\"Hello,\" I breathed, holding myself to him, never wanting to let go.\n\nHe bent his head forward, tucked his face against me, and let out a long, slow sigh. He tightened his arms around me, then dropped a hand to the small of my back to pull me closer in to him.\n\n\"Hallo,\" he echoed me. \"I love this outfit of yours. Are you not cold?\"\n\n\"It's a warm jumper. And the socks are nice and wooly. It makes me not mind the bare legs. And, anyway, I wore it for you, not for me.\"\n\nHe pulled back slightly, looked down at me. I stood up on my toes, and kissed him. \"You are cold. Come in,\" I said. \"How was your day?\"\n\n\"Long. Dull. I missed you. See?\"\n\nHe held up his hand, showed off the heavy duty plaster on the back of his wrist.\n\n\"Anton! Oh no, what did you do?\"\n\n\"I was too busy thinking of you to watch the tools. And so I learned my lesson.\"\n\n\"Does it hurt?\"\n\n\"Not as much as the alcohol did when I disinfected it.\"\n\n\"Oh. Here, let me kiss it better.\"\n\nI took his hand in mine, lifted it to my mouth and gently brushed it with my lips and tongue. He made a small noise; I smiled up at him. \"Better?\"\n\n\"Much,\" he laughed.\n\n\"Good. It is pasta again; I am sorry, but it's all I have ever learned to cook well other than fish...\"\n\n\"Next time, I will cook for you. My treat.\"\n\n\"I would love that,\" I said. \"Come. Close the door and come sit by me. I will pour us wine.\"\n\n\"My God, what did I do before I met you?\"\n\nI smiled over my shoulder at him as I led him to the kitchen table, and gently pushed him down into his seat. He sat, idly stroking his hand, staring at the window. I opened a bottle of red wine, found us some glasses, and poured him a generous measure.\n\nI wondered how best to broach the subject with him\n\nHe jerked out of whatever thoughts had stolen him as I placed the glass in front of him. \"Sorry,\" he said. \"I was just... thinking.\"\n\n\"About?\"\n\nHe reached out, took my hand, and pulled me gently onto his lap. He wrapped his arms around me and leaned his face against me with a sigh. \"How much I like you,\" he said. \"How much I liked you from the start.\"\n\n\"Even with the cut lip and bloody nose?\" I teased him.\n\nHe smiled. \"At least I could help, yes?\"\n\n\"Yes.\"\n\nI leaned against him, then shivered as he nuzzled my neck.\n\n\"You know... I have a better idea than pasta,\" he breathed.\n\n\"Really?\" I said, leaning back against him and shimmying my bum ever so slightly against the bulge of him.\n\n\"It goes like this,\" he whispered. He dropped a hand to my lap, and slowly teased his fingers down between my thighs. \"I hold you here, unable to escape, while I make you forget your own name...\"\n\nI arched against him, opening my legs for him, moaning as he found me, slipped his fingers under my panties and stroked my soaking lips.\n\n\"Oh, oh God... that is so nice...\"\n\n\"You are...\"\n\n\"Yes. All day.\"\n\nHe pulled me back against him, and I let my head loll back onto his shoulder.\n\n\"Lucy... may I play with you, bitte?\"\n\n\"Anton. I have a rule I am going to put in play right now. Are you ready to hear it?\"\n\n\"Yes.\"\n\n\"You never have to ask me for permission to touch me. Never. I will always be ready for you. You make me so hot. Just the knowledge that I am going to see you makes me climb the wall.\"\n\n\"Climb... the wall?\"\n\n\"So horny that I could scream,\" I whispered into his ear. \"So touch me... oh... oh God. Right there. Oh...\"\n\nHe slid his free hand up under my jersey to find my breasts. I spread myself further, hooking my feet under his knees. I could feel his hard clock along the cleft of my bum, throbbing against me. I reached back, wincing, and knotted my fingers in his hair.\n\nMy stomach spasmed and I grunted at the force of it. \"Oh, oh fuck,\" I whimpered. \"Oh, oh fuck me... oh fuck... oh fuck oh god...\"",
        "He increased the tempo of his fingers. My legs began to shake. My breathing became short, painful gasps between my abdominal spasms.\n\nHe pushed a finger tip into me with each stroke. He increased the pressure on my lips and clit, and started rubbing the slick shaved skin of my outer lips too.\n\nI bucked, gasped for breath, and then cramped forward against his restraining arm, jaw locked open in rictus as I came, and, shortly after, came again.\n\n\"Mother of God, mother of God, oh my God,\" I panted. Then I squealed as he put his arm under my legs and lifted me.\n\nHe carried me to my bed.\n\nHe gently stripped my socks and jumper off.\n\nHe pulled off his vest, jeans, socks and underwear and kicked them into the corner.\n\nFor a moment he stood there, staring down at me, his penis jutting hard and proud between us.\n\nI reached out, gently took it, and pulled him closer. I lay back onto my bed, spread my legs, and he lowered himself between them.\n\nHe put his perfect cock head to me.\n\nHe arched over me, and slowly entered me.\n\nI wrapped my arms around his broad shoulders and pulled my lover down to me.\n\nAnd he whispered my name as he came.\n\n.:.\n\nWe lay, tangled together in the destroyed bedding. His still sticky cock nestled against my thigh; my pussy ached pleasantly. His semen dripped slowly out over my gently-tingling lips. He held me against him, breathing in time with me.\n\n\"I have something I want speak with you about,\" I said, as I gently stroked his arm.\n\n\"What is it?\"\n\n\"My bus leaves on Sunday morning.\"\n\n\"Yes,\" he said, quietly. He shifted against me, pulled me closer to him. \"I am... trying not to think about that.\"\n\n\"Giselle said...\"\n\n\"What?\"\n\n\"She said that you called me your girlfriend.\"\n\n\"Giselle has a big mouth.\"\n\nI pushed gently back against him. \"Anton, this is serious.\"\n\nHe sighed, shifted on the pillow behind me. \"What is it?\"\n\n\"What is this? This thing, between us? Is it just idiocy? Is it something passing? A foolish dream?\"\n\n\"It is not a passing dream for me. It is idiocy, maybe. But even if it is a dream... I... do not want to lose it. I do not want to wake up. I do not want it to be morning.\"\n\nI swallowed. \"Are you... sure?\"\n\nI rolled over to face him. He was frowning. \"Lucy, what are you not telling me?\"\n\n\"There is a chance...\"\n\n\"A chance? What chance?\"\n\n\"A chance that I could... perhaps... not have to catch that bus.\"\n\n\"What do you mean?\"\n\n\"Let us say that I could find a place to stay, and a job, somewhere near Selva. Would that be something that you would want?\"\n\n\"How? How can you even ask me this? It would be the best news I could hear,\" he whispered. \"Do you not understand how hard it has been, wanting you but knowing you were going to leave? Do you not understand how much I want you to stay? How much I do not want you to climb onto that verdammt bus on Sunday? Who knows when you will be back? Who knows when I will see you again? I will be here, alone, missing you like the air in my lungs, like the rock beneath my feet...\"\n\n\"Anton. Hey. Hey. Look at me. Look at me. Shit, I'm sorry, I did this all wrong. Oh... Anton...\"\n\n\"Sorry,\" he whispered as he scrubbed his eyes with his arm. \"Scheisse. Fuck. Fuck!\"\n\n\"You're... crying...\"\n\n\"I cannot lock everything away. Some things are too hard. Losing you would be too hard. It is stupid. It has been... what... three days? But... I cannot hide from this. This is how I feel.\"\n\nI burrowed in against him, got my arm around him, and pulled myself in even closer. \"You will not lose me,\" I breathed. \"I'm sorry. I'm so sorry. I should have just said this to you. There is a job for me. It will not pay much but it will be enough. I... I am stupid. I wanted to let you have the option to get away from me without any regrets. I wanted to know whether I should do this, but not like this, not by hurting you like this...\"\n\n\"You... you are staying?\" he breathed.\n\nHe tightened his arms around me, and I pushed my face in against him.\n\n\"Yes. If I can. If you want me to. But... where I'll be staying I don't know yet. Giselle said I might find somewhere in St Ulrich or Ortezei...\"\n\n\"No, this is nonsense, this is not acceptable, das ist v\u00f6lliger Unsinn.\"\n\n\"Anton?\"\n\n\"I have more than enough space. Move in with me. Come and live with me, Lucy. Please. It would make me so happy.\"\n\n\"I... I couldn't. I couldn't possibly. You hardly know me. You know nothing about me...\"\n\n\"So let me learn,\" he whispered.\n\n\"What if it's a disaster?\"\n\n\"It will not be.\"\n\nHe kissed me, and then crushed me to him.\n\n\"I am so lucky I met you,\" I whispered, when I could.\n\n\"No, I am the lucky one. To meet someone like you? These things... they do not happen to me. Never.\"\n\nI kissed him. I kissed him until my heart was pounding. Then I clung to him, overwhelmed for a moment.\n\n\"Shh. Shh,\" he whispered, as he tenderly stroked my back and shoulder.\n\n\"Giselle is never going to shut up about this, is she,\" I managed.\n\nHe snorted. \"Nein. Never.\"\n\n\"Well then.\" I swallowed. \"In for a penny, in for a pound.\"\n\nI threw my leg over him, pushed him over, and levered myself up onto his chest.\n\n\"I want all of you,\" I said, as I stared down at him. \"I want you to fill me, fill my soul. Fill me with your love until I want to burst from it. I want you to show me how to live. I want you to teach me these mountains, this place that is yours. I want to live it with you and only you. And I do not ever want you to ever let me leave them... or you.\"\n\nHe reached up, cupped my cheek with his lovely, strong hand.\n\nThen he pulled me down to him.\n\n.:.\n\nThe bitterest cold of winter had passed. Soon, Anton said, the lower pastures would shed their snow and turn to mud for a week or two before the new growth broke through. Soon afterwards would come the early flowers. A new year.\n\nIt was an early Saturday morning in March. And my own spring had come at last, after years of bitterest winter.\n\nI glanced down at my sister's memorial stone once more.\n\n\"See you later, alligator,\" I whispered. I kissed my fingers, touched her name. \"Time to go. But I'll be back soon.\"\n\nA breeze blew through briefly, and I smiled. \"Yes, I'm glad I stayed.\" I whispered. \"I love you too.\"\n\nI looked down at the faded blue teddy bear once more, frowned, and then bent down. Something was pushing upwards; something had broken a crack in the surface of the ice. I gently brushed the crystals aside; then stared at the small green bud, already showing white petals like perfect frozen tears.\n\n\"Oh. Snowdrops,\" I breathed. \"Sue, you always did know how to make me smile.\"\n\nI leaned forward, touched my head to her name. \"Thank you,\" I whispered.\n\n\"Lucy?\"\n\nI could hear the concern in Anton's voice; his instinctive need to guard me.\n\n\"I'm fine, my love.\" I called.\n\n\"Lucy, what is it?\" he asked as he crunched over to me.\n\n\"Look. Schau dir das hier an.\"\n\nHe grinned at my terrible accent, then leaned over me, putting his gentle hand on my shoulder. \"Ah,\" he said, softly. \"Das ist sch\u00f6n. They always start to come out now. They are the first sign of Spring in the high mountains.\"\n\n\"It's fitting,\" I breathed. I brushed at my eyes, and smiled up at him. \"Sue always did love them.\"\n\n\"Come on, love birds!\" Giselle shouted from the piste. \"The snow is not going to last! This is probably the last day we will be able to ski all the way down, so come now! Last one down buys the drinks!\"\n\nAnton pulled me to my feet. \"Are you ready to go?\" he said.\n\n\"I'll race you down,\" I answered, with a smile.\n\nAnd I did."
    ],
    "authorname": "onehitwanda",
    "tags": [
        "love story",
        "healing",
        "starting over",
        "reunion",
        "memory"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/snowdrops"
}