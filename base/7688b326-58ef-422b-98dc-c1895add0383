{
    "title": "Time Rider Ch. 05",
    "pages": [
        "Disclaimer: All characters portrayed engaging in sexual activity are 18 years of age or older. Actual historical figures or living people represented are done strictly for context and humour, I lay no claim to them. If you had trouble following the plots of Pulp Fiction or Four Rooms because of the back-and-forth timelines, just turn around and leave now, as this fic will make you butthurt. As always, critiques and reviews all welcome, illiterate flames will be snickered at. Enjoy! \n\nChapter 5, Part I - I Think I'm Getting The Hang Of This! \n\nMark sat as his dining room table, eating dutifully. His mom had prepared short ribs and mashed for dinner, one of his favourites. What she didn't know was that Mark had substituted several herbs and spices into her collection, items he'd brought back from his temporal travels. At the very least, this meant they were technically several hundred years old, or sometimes that they didn't exist in the modern era at all. \n\n\"I'm enjoying this particular batch of thyme that I put in the braise,\" Dhallyla Pritchard remarked as she gently stabbed some green beans with her fork. \"Mark, where did you say you got it for me? The flavour is so ... special.\" \n\nMark shrugged. \"Another shop I thought I'd try out,\" he replied. \"Nowhere near our usual places.\" \n\n\"Well, keep it up, son,\" his father said, sitting at the other end of the table. \"No offence to your mother's cooking, but the spices we were getting before weren't helping the cause. Now this is flavour.\" \n\n\"Such a good little minion,\" his mom said sweetly, reaching over and pinching his cheek. \"First, you did amazingly well on your Physics exam and boosted your overall grade to the place where the university accepted you, and now you're an herbs and spices guru. Talk about an unexpected change.\" \n\n\"Yeah,\" his sister Roxy said, sitting across from him, and trying to keep the suspicion out of her voice. \"Unexpected is right.\" \n\n\"Now Roxy, be nice,\" their mom chided. \"You should be happy for your little brother, he'll be going to university with you.\" \n\n\"As long as she pulls her grades up,\" grunted dad, pausing in eating to waggle his fork in her general direction. \"You promised us you'd keep your grades up and we'd let you live here rent-free as a result, Rox. We're living up to our end of the bargain, what's so difficult about yours?\" \n\n\"Maybe I should study more and party less,\" she grumbled, scowling at her food. She hated to admit it, but her mom was right, the spices were great. Where had the little trouser-snake bought them? \"Y'know, open my mind more and my legs less?\" \n\n\"Dear!\" Dhallyla gasped, looking at her daughter in shock. \"Nobody said you were behaving licentiously! There's no need to use language like that!\" \n\n\"Sorry,\" the dark-haired girl sighed, putting down her fork. \"Just been on edge lately. Seems to've been The Mark Show around here recently, and I'm not even quite making my grades in Soph.\" \n\n\"You just need to focus, darling,\" mom said, trying to sound reassuring. \"Mark stopped goofing around and knuckled under, and he got rewarded. Nothing says you can't do the same.\" \n\nShe reached for the dull green bottle and removed the cork, pouring herself another glass of the Bordeaux her son had found. She looked at the mottled green glass, the seemingly dusty exterior, and the red wax they'd had to break to get the cork out. \n\n\"So interesting to sell a bottle of wine like this,\" she mused, tracing a finger over the surface. There's not even a proper label. Who thought of selling wine this way?\" \n\n\"Artisan wines are a big deal, mom,\" Mark said simply, pouring another glass for himself. He was technically not of age to drink, but his parents let him at mealtimes. \"It's clever marketing, y'gotta admit. People feel like they're buying a really old wine, so it's classy.\" \n\n\"Well, it's certainly enjoyable,\" his mom agreed, watching the dark, rich liquid swirl in her glass. \"Make sure you get more of it, wherever you got it.\" \n\n\"Yeah, maybe you can take me along with you next time,\" Roxy said, resting her chin on her hand and her elbow on the table, smiling at him. \"Sounds like a place I'd show to a few of my friends.\" \n\n\"Uh, we'll see,\" Mark replied somewhat uncertainly. \"I never know when I'll make it back there...\" \n\n*** \n\nBecky and Mark were leaning into one another and kissing deeply while they sat on her swinging chair in her backyard. It was nearly midnight, and with the rows of trees that bordered her property, they weren't worried about being espied. The blue-eyed blonde beauty pressed her impressive breasts into his chest, humming into his mouth while her fingers reached up and tangled through his brown hair. \n\nMark, for his part, had one hand resting on her back, holding her close, while his other hand had reached around to hold her butt, squeezing it gently. She was wearing snug jeans that showed off her magnificent, toned curves, while her bust strained tightly against an old, faded screen-T that advertised the classic cartoon \"What's Opera, Doc?\" \n\nThey finally broke the kiss and pressed their foreheads together, just enjoying the warm night air and one another's company. She was his high-school Physics teacher, at least technically. Rebecca was still teaching an earlier version of Mark's current self, one that was unaware of his carnal interactions with this insanely hot woman. \n\n\"Still can't believe how stupid earlier Me is,\" he breathed, fondling her ass through her jeans. \"He could've been doing this.\" \n\n\"Now now, that's not true,\" she giggled, rubbing her nose against his, her eyes dancing in amusement and delight. \"You're still seventeen when I get to class every day and watch you fail miserably at Physics, you know. What makes you think I want to be caught fucking a minor?\" \n\nMark smiled slyly, took her hand and placed it on his crotch, making her massage his cock through his jeans. \n\n\"Oh, I dunno,\" he mused, feeling her shiver. \"Maybe this...\" \n\n\"Nnnn, that's cheating and you know it,\" Becky murmured, continuing to rub him even after he removed his own hand. \"And I suppose it's only a three-month technicality, but I still wouldn't have if I didn't know about the Holmes Field Device. I don't care how big your dick is, young man, sometimes a lady needs more.\" \n\n\"Y'mean like wacky time travel adventures?\" he asked, grinning. \n\n\"Exactly like wacky time travel adventures,\" she purred as she clambered into his lap and straddled him, her arms around his shoulders. Predictably, Mark's hands came to her butt. \"I always expected to lead an adventurous life, but this is something altogether different. And the fact that I owe it to one of the lousiest Physics students I've ever taught is rather ironic.\" \n\n\"I think you said 'lousiest' when you meant 'luckiest,'\" Mark quipped, squeezing her butt cheeks and kissing her nose. Becky giggled and nodded. \n\n\"I couldn't agree more; you are one of the luckiest Physics students to ever live,\" she opined, using her hands to gesture to herself. \"Not often a guy gets access to a playground like this without a gold band, you know.\" \n\nHe nodded. He and Becky were very close now. Maybe they even loved one another after a fashion. But were they in love? \n\nShe seemed to sense his thoughts and kissed his nose. \"Stop worrying, big man,\" she cooed. \"I don't think we're in love. I suppose part of me is gone on you, but that's just the euphoria of our adventures and all the dopamine you keep pumping into my system. You're seven years younger than me; I'd probably kill you after a while.\" \n\n\"I didn't know you were an ageist, Becks,\" he chuckled, teasing her. \"After all, remember the innkeeper's two daughters in that little town in France? You sure they were legal?\" \n\n\"We've been over this, Mark.\" Becky chided, stroking his cheek. \"If they were alive today, they would've been nearly five hundred years old.\" \n\n\"God, I love how your mind works,\" he laughed. \"You're so much better at this time travel stuff than I am.\" \n\n\"Maybe I'm intuitive about it, and a quick study, but I think you've got something I don't, and that's dumb luck,\" she mused, casually moving her breasts against his chest while they talked. \"I mean, think about it - I was taken prisoner by Cardinal Richelieu, and virtually a prisoner in Queen Anne's court. I had no way of getting out of there, and certainly not of returning home. I don't have any clue, yet, of how to build a time machine.\" \n\nShe kissed him deeply, her fingers tangling in his hair again as her heart almost raced at the memory. \n\n\"But then you came back for me, after being shot and nearly killed, and charged in like some sort of insane knight on a horse, threw the entire Louvre into utter chaos, and got me out of there.\" \n\n\"Well, maybe,\" he said, almost blushing. \"I didn't do it alone, y'know.\" \n\n\"That's true,\" Becky agreed. \"You had help from Chester Edgeworth, and Lady Alexandra.\" \n\nBecky leaned back slightly and sighed, closing her eyes. \"Now her I'm totally in love with.\" \n\n\"Even though she's probably your ancestor?\" Mark teased. \n\n\"Remind me all you like, I don't care,\" Becky sniffed. \"So I'm an incestuous time-travelling, Physics-teaching slut. I'm having a great romp, thank you.\" \n\n\"Me too, Becks,\" Mark agreed, nodding. \"And I'm glad I've got all the dumb luck necessary to rescue you, because you've got the smarts to save me when I do anything stupid.\" \n\nThey kissed some more, with her sitting contentedly in his lap, just enjoying the prelude to the night's activities. \n\n\"So,\" she said finally, looking at her student and lover. \"Where shall we head?\" \n\n\"Don't you mean 'when,' Becks?\" Mark quipped. \n\n\"Try to refrain from time travel jokes, they're painful coming from you,\" she sighed, smiling and shaking her head. \"Any ideas?\" \n\n\"Well, I think Chester's been in touch,\" Mark mused, reaching into his back pocket and pulling out a brochure. It was made of regular paper and inks, but what it displayed was so very strange. \"You can, apparently, go on safaris with dinosaurs, if you know where and when to look.\" \n\n\"Ooh, like Jurassic Park?\" she asked, taking the brochure and examining it. \n\n\"Well, Anyperiod Park, I guess,\" Mark replied, shrugging. \"Looks like some company from the far future has created amusement parks back on Pangaea in various eras, allowing time travellers to go and see what life was like. They've created huge, secured habitats on continents to allow for safe interaction without affecting the timeline or the world at large.\" \n\n\"They must be from really far in the future and have some really high tech if they're confident enough to do that and your time cops haven't kicked their ass,\" Becky said absently, still reading through the brochure. \"Oh, look at this, they've domesticated members of some species! You can ride on some plant eaters ... there's Dromaeosaur races ...\" \n\n\"Interested?\" he asked. \n\nShe pursed her lips: \"It's expensive, Mark. It's meant for people from the time period the company is from, clearly. And assuming this sign indicates the currency, there's an awful lot of zeroes following it.\" \n\nMark thought about that for a moment. \"But Chester had to know that, and still gave it to us, right? That means he knows something we don't.\" \n\n\"And we all remember what happened last time he knew something and we didn't,\" she pointed out, folding up the brochure and tucking it into her bra. \"You got shot and nearly died, and I ended up a prisoner in a gilded cage. Let's pass for now, and do something a bit less exotic but still fun, okay?\" \n\n\"I'm down with that; it's not like there's a time limit on the offer, literally,\" Mark acquiesced. \"So, what shall we do?\" \n\nShe made a show of thinking, tapping her finger against her cheek. \"Well ...\" \n\n*** \n\n\"How's your head?\" Becky asked as they walked down the hallway, gazing in wonder at the ornate mosaic that covered the floor and stretched ahead of them. The walls, no doubt made of brick, were covered in plaster, upon which colourful (and often erotic) frescoes were painted. While the clothing she was wearing in theory resembled the stola and other clothes worn by Roman women, hers was considerably abbreviated, if not downright scandalous. The white garment hung off her sensual curves, spilling away from her voluptuous breasts, which could be seen through the mostly diaphanous material. Gold bracelets and bangles adorned her arms and a thin gold chain with tiny jewels sat on her ankle. She was wearing her golden-blonde hair up atop her head, but playful wisps and curls hung down in places, giving it a sassy and almost playful look. A gold-coloured belt cinched in at her tiny waist, making her bust look even bigger. \n\nMark grimaced and lightly thumped the heel of his palm against the side of his head, as if trying to jar his brain loose. \"It kinda hurts, to be honest, like a buzzing headache,\" he muttered, waiting for his eye to stop twitching. \"Who'd've thought getting advanced cybernetics installed in your noggin would hurt?\" \n\n\"Oh, come now, you're hardly Steve Austin,\" Becky chided, smiling at his outfit while they walked. \"It was just a little bio-chip installed into your Broca's area to help you get by quickly with the whole language thing.\" \n\n\"Well, if Latin is supposed to sound like the white noise on a grandpa TV combined with a mosquito buzzing in your ear, then it's working,\" Mark groused, wiggling his jaw to see if opening up his ear canals helped at all in getting rid of this unwelcome phenomenon. \"How long did they say it usually lasted?\" \n\n\"Just an hour,\" Becky replied, stopping and fiddling with Mark's tunic, adjusting it to show off his handsome physique to best effect. The simple leather belt hung loosely on his small waist, more for contrast than anything. He was wearing very simple sandals on his feet. She hadn't had to do very much to his dark hair to achieve the look she wanted, merely tousling it after rubbing in a little olive oil, making it wavy and pleasing to look at. \"Should stop any time now.\" \n\nAnd as if acceding to the lovely woman's request, the buzzing and throbbing stopped suddenly. Mark's eyes widened slightly at the sudden quiet inside his cranial grape. Becky saw his expression change and smiled, knowing what had happened. \n\n\"Mmmmm,\" she purred, tracing a finger down his form and over his cock beneath his period clothes. \"Estne volumen in tunica, an solum tibi libet me videre?\" \n\nMark grinned, understanding what she had said. \"Ego sum laetus video vidi te!\" he replied readily. \n\n\"Well, I know you're happy to see these ...\" Becky whispered, leaning close and using a finger to tug down the edge of her barely-there clothing and exposing her breast to him, the pink nipples begging for his attention. \"But ...\" she said, replacing the clothing and standing up again, \"... we're here to take part in a Roman orgy, so we'd best get moving now that you're feeling better.\" \n\nMark exhaled, composing himself after her tease, and nodded. \"All right. So what's the drill again?\" \n\n\"Your name is Bonosus,\" Becky instructed, touching up his outfit again. \"You're a slave from Spain, meaning that you have no rights. But don't worry, I own you, and I am very specific about who can do what with you.\" \n\n\"So, no guy is gonna try and fuck me in the ass, right?\" Mark asked somewhat nervously, smiling. \n\nBecky smiled: \"Pity you won't try it, you might like it. However, no, I'll simply explain that you're off-limits to men, because you're being saved for my uncle, who is away on the German border. Me, I'm a patrician woman, visiting Rome, and I'm looking for a good time. My name is Aurora. If you really need my attention and are worried about speaking in Latin, we'll speak in English, quietly. Got it?\" \n\n\"Okay, what should I expect?\" he queried. \n\n\"I did a little research, looking for who had a reputation for throwing orgies and parties that tended to bring out the morals police,\" she answered, adjusting her own outfit now. Neither of them was wearing undergarments, and if the light caught the bottom portion of her so-called dress just right, Mark could see her pussy. \"This villa is far enough on the outskirts of Rome that we're very unlikely to get a visit.\" \n\nShe leaned back against the wall, smiling saucily as she drew him into her, their pelvises pressing together as she looked up at him. \n\n\"So we're going to go in there, and fuck, and fuck, and fuck, with anyone and everyone we choose,\" she whispered in his ear. \"Fuck every single girl that catches your fancy, Mark. Those anacept pills we took will cover us against all known transmitted diseases for a week, and they make us temporarily infertile. No consequences. And the tiny tabs on our skin will keep our libidos from flagging for a whole day.\" \n\n\"That sounds great,\" he agreed, his eyes glinting with excitement. \"Really great.\" \n\n\"Mark, I am going to behave like I haven't since my wildest nights in college,\" Becky said softly, reaching up and running her fingers through his hair as she looked up into his eyes. He could feel her breathing getting heavy. She was really turned on by what they were about to do. \"Are you sure you're prepared to see me like that?\" \n\nMark nodded: \"I don't own you, Becks. We're time travel partners, and damned good ones. It's not like we're in love. Do what you like, I promise, it's fine.\" \n\n\"Mmmmmm, just when I thought you couldn't get more attractive ...\" she purred, pulling him in for a deep kiss while they leaned against the wall. She broke the kiss and looked up at him. \"D'you remember where all our supplies are, in case things happen to go south?\" \n\nMark nodded again. \"Back in the little vestibule near the servants' rooms. I remember. Now let's do this ... Mistress Aurora.\" \n\n\"God, I could get used to hearing that,\" Becky sighed, shivering as she straightened up and prepared herself. \"Remember ... lots of drinking, eating, music, dancing and fucking. Do whatever the Hell feels good tonight, Mark, this is a real Roman orgy.\" \n\nShe took him by the hand and smiled wickedly. \"Now let's go get 'em, tiger...\" \n\n*** \n\nMark was laughing and drinking wine from a silver goblet, while watching a group of slave girls dance in the middle of the floor. The girls, who were clearly from all around the Empire, were whirling and cavorting about while drums and cymbals clashed out a rhythmic beat for them to follow. They wore sheer material draping down from their waists between their legs, and nothing else. Their breasts bounced and jiggled about as they twirled about one another, letting out sensuous calls on occasion. \n\nThe hosts of the day's festivities, a patrician man named Flavius and his lovely wife Pompeneia, were very wealthy, and they owned over five hundred slaves, spread out among three separate properties spaced around the capital. Mark had even heard tell that they owned land in Egypt and Byzantium. Wealthy indeed. \n\nThere were nearly fifty proper guests, excluding slaves and attendants, so the place was fairly bustling with people. Patricians, plebeians, freedmen, freedwomen and slaves, all were to enjoy themselves tonight. And all at the request of the guest of honour, the stunning Aurora of the fabled Horatius family. \n\nMark pried his eyes away from the dancing girls long enough to look around for his 'mistress'. He finally espied her, lying stretched out on a lectus, along with their hostess, Pompeneia, hungrily swallowing one another's tongue while they groped each other. Against all odds, 'Aurora' still had her clothes on, although only barely. \n\nMistress Horatia Aurora had, as guest of honour, requested that in the name of the goddess Feronia, that the slaves be allowed to celebrate tonight as well, free of consequence, as long as they also performed their assigned duties. If not actively seeing to an assignment, they were allowed to sit, although they had to accede their seat to anyone of a higher station who needed it. They would also still oblige guests who wished to be serviced by the slave in question, and the Flavius household's slaves were all available to anyone who attended. ",
        "Mark looked back at the dance now, seeing that it was winding down, with the girls letting out calls that there supposed to represent cranes or herons crying out for mates. That was an invitation for anyone inclined to come and take them once the dance had ended. They all fell still in various poses as the drums and cymbals stopped and the room erupted in applause and cheers for their efforts. \n\nMark smiled as one bronze-skinned beauty on the floor caught his eye. As the dancers dispersed into the crowd, she slowly walked over to him, her deep hazel eyes liquid with passion. \n\nMark greeted her with a cup of wine, offering it to her. \n\n\"I thank you,\" she said in a heavy accent, her Latin speech seeming formal. \"Tonight is a special night indeed, is it not?\" \n\nMark paused for a half second as the tiny chip in his brain listened to what she was saying and translated it for him. Weirder still, it translated what she was saying in her voice, but in English. Her English voice sounded quite amazing to him, and he felt a stirring in his loins as he gazed at her body. \n\nHe thought of how to respond, the translation coming to him readily, in his voice, so that he knew how to sound when he said it. This technology blew his mind, somewhat literally. \n\n\"Yeah,\" he replied in Latin, nodding as he clinked his silver goblet against hers. \"I am enjoying it. You dance very well.\" \n\n\"I have to,\" she replied, using two hands to bring the goblet up to her lips and sipping from it, as if she'd never had wine before. Hell, maybe she hadn't for all he knew. \"If a dancer does not dance well in the Flavius household, demotion to some other task, probably much more horrible, awaits them. I need to be a good dancer, if I am to keep my coveted position.\" \n\n\"I'm sure your masters have many coveted positions where you're concerned,\" Mark quipped, smirking. \n\nThe girl blushed and giggled, taking another sip of her wine and looked at him. \"You are slave to the Mistress Aurora, yes?\" \n\nMark nodded: \"I am.\" \n\n\"What is it like to be her slave?\" she asked, looking up into his eyes. Mark was the tallest person in the room, and it wasn't going unnoticed. Becky was certainly the tallest woman, but he'd heard her jest about having German barbarians in her ancestry. Everyone laughed it off, and the party continued. \n\nMark considered for a moment before answering. \"Well, I like it a lot. Sure beats the life I was living before I became her slave.\" \n\n\"Are you her only slave?\" queried the girl, clearly more than a little intrigued. She didn't seem at all bothered by the fact that every time he wasn't speaking, Mark's eyes went down to her breasts. They weren't as big as Becky's by any means, but they were still very nice, her soft light brown skin capped with darker brown aureoles and pronounced nipples. \n\n\"Well, no,\" he lied, thinking on his feet. He hadn't really expected any questions along this line and would have to tell Becky whatever he said, so they could coordinate their stories if the matter came up. \"I'm not really any good at counting, but there's always a lot of us around.\" \n\n\"What do you do for her?\" \n\nShit, better make this simple but good ... he thought to himself. \"I'm her personal servant. I do all the most personal and intimate things for her. I dress her, I taste her food for her, I bathe her ...\" \n\n\"Do you fuck her?\" she inquired, looking over the rim of her silver cup as she took another drink, a deeper one this time. So this was the crux question, he realized. He simply nodded, as if it was the most obvious thing in the world. \n\n\"Oh,\" she said in a quiet voice, as if his words were of concern for her. \"Do ... do her other servants fuck her?\" \n\nHe smirked: \"None of the male ones, now that she's got me.\" \n\nShe raised her eyebrow at his statement and took another drink. \"Is that so?\" \n\nMark shook his head for a moment, as if he was remembering something. \"I'm sorry, I'm being rude, I didn't ask your name.\" \n\nThe girl made a wry face. \"My name? Why would anyone ask for my name? I am a slave.\" \n\nMark shrugged. \"Well, so am I. Tell me your name, so I know what I'll be calling out in an hour.\" \n\nThe girl almost choked on her wine, but recovered and looked up at him, as if assessing him. Finally she spoke: \"Before I became a slave, my name was Nanu.\" \n\nMark wasn't terribly surprised when the stupid chip in his head found out what the name meant. \"So you're Egyptian and your name means 'pretty' or 'cute.'\" \n\nShe stared at him for a moment, as if trying to fathom how he could have possibly known that. \"What is your mistress' name in my language?\" she asked suspiciously. \n\nMark blinked for a moment. \"Khepri nebet.\" \n\nShe moved closer to him. \"What is your name, slave?\" \n\nHe smiled at her warmly, deciding it was time to move things along. \"My name is Bonosus, Nanu, and I am the slave who is going to fuck you.\" \n\nNanu smiled and reached out a hand to him. \n\n*** \n\nBecky panted as she rocked back and forth on her knees, pressing her face into her hostess' hairy pussy, lashing it with her tongue. Behind her, one of Pompeneia's slaves was gripping her hips and plowing his hard cock in and out of Becky, trying to keep up with her lusty pace. He wasn't nearly as large as Mark, nor was he as talented, but he would make her cum, given the environment. Becky was here to fuck in a Roman orgy, and what individual participants might lack in skill, her excitement would certainly make up for. \n\nPompeneia moaned and gripped Becky's hair, loosening it further from its carefully piled arrangement. Becky didn't mind, though, as she expected to look fully disheveled and thoroughly fucked by the time this orgy was over. She'd had several cups of aged wine already and was feeling uninhibited, even for her. She slid two fingers inside her hostess, making her moan and churn her matronly hips while Becky took another stiff drink from her goblet. She then returned her mouth to Pompeneia's womanhood, allowing rivulets of the dark wine to flow out over her engorged vulva before sucking on it hungrily, making the patrician woman gasp and groan loudly and thrash about on the lectus she was splayed on. \n\nThe slave behind her pistoned his hips against her while she ground back against him, taking his cock as deep inside her as she could. She could feel him swelling and knew he was close to cumming, but she didn't mind if she didn't climax yet, because the day was young, and this orgy had barely started. There were so many people left to fuck. \n\nBesides, she could always track down her darling Mark if she needed serious attention, after all. \n\nThe slave grunted and let out a low moan before he began spurting his cum inside her. Becky moaned into Pompeneia's pussy, sending her over the edge and making her cum shamelessly, her fat tits flopping about for all to see. Nobody cared, or if they did, they were delighted by it. There was no judgment at this orgy. \n\nAs the slave pulled out, Becky clambered on top of Pompeneia and they kissed deeply, wrapping their arms around one another, tongues plunging. Becky finally sat up, smiling and straddling her hostess' hips. She smirked down at the Roman woman and then reached beneath herself, flexing her pussy muscles and teasing out the cum that the slave had just deposited in her. She smeared it all over Pompeneia's thatch and netherlips, before dragging her shaved slit up her lover's body, leaving a glistening and sticky trail of cum along the way. She squirmed and writhed on Pompeneia's tits, smearing them in the slave's essence while trying to get one of the nipples inside her pussy. \n\nFinally she wiggled her way up to Pompeneia's mouth, and the older woman gripped Becky's thighs and sucked on her smooth pussy hungrily, coaxing out all the cum she could from her guest. Becky smiled and reached back with one hand to finger Pompeneia's gooey cunt, bringing her to yet another climax, the fourth she'd received from Becky. The teacher had no doubt this woman would remember her very fondly. \n\nShe finally clambered off Pompeneia and knelt beside her, the two of them kissing tenderly, sharing the cum from the slave between them, followed by Becky licking the residue off her lover's face. They whispered to one another before Becky stood and strutted away, knowing that Pompeneia's eyes were fixated on her glorious, toned ass. It felt good, knowing she was the object of desire for every single person in the entire household. \n\nBecky looked around in wonder, surrounded by actual Roman artwork, in a completely intact home with a glorious mosaic tile floor depicting a couple making love and then a hunting scene involving a lion. The plastered walls were painted in bright colours. The furniture, made of wood with brass fittings and comfortable cushions, was currently being put to the test as couples or groups around her fucked and made love in every conceivable position. \n\nShe gazed down at the silver goblet in her hand, made of beaten silver and decorated with glass prisms and with a poem etched into its circumference. She picked up a small, sticky honey cake from a table, then took a bite from it before smiling wickedly and pressing it to her glorious breasts, smearing the sticky honey all over them. As a female slave passed by, Becky took her gently by the arm and pulled her into an embrace, gently pushing her head down. The slave understood immediately and began kissing her breasts, slithering her tongue around to get the gooey sweetness off Becky. \n\nThe blonde woman was shivering and groaning while already smearing the honey cake against her pussy. \n\n*** \n\nMark was sitting on in a low chair in a side room, holding Nanu by the waist while she bounced up and down on his lap, her arms around his shoulders and her eyes staring down into his. Her greedy pussy swallowed his cock, making her gasp and groan with each motion. Her inner muscles squeezed around him, and while Becky was definitely more skilled, and perhaps even tighter, the fact that he was actually fucking a Roman slave was an incredible thrill. \n\nShe jammed her lips to his and kissed him feverishly, her fingernails raking over his back as she ground down on him, hissing and panting with lust. He found her to be incredibly exotic, and he realized that it might because he'd never met a true ethnic Egyptian before. As far as he knew, the bloodline of the ancient Egyptians had become extinct. She certainly looked exotic to him, with her deeply tan skin, hazel eyes and straight, coal-black hair. \n\nHe used his strong arms to help move her up and down, almost spiking her on his cock, and her panting became a delightful yelping. There were loud cries of ecstasy from all over the house, so they paid no attention to anything else. She kissed him again before seizing up and shuddering, groaning loudly. She threw her head back and pressed her pussy down as hard as she could, cumming wildly. Mark kept pumping relentlessly, loving how her womanhood clenched around him. \n\nNanu flopped backward, her head now on the floor, arms splayed and her back arched, still pinned to Mark by his cock. Her chest rose and fell as she breathed heavily, still trembling. He smiled down at the girl, waiting for her to recover. When her eyes finally fluttered open, he took her arms and gently pulled her up to him. She almost purred and nuzzled against him, still in the throes of a sultry bliss that filled her. Nanu kissed him everywhere she could reach, including his fingertips. \n\n\"You are an exquisite lover,\" she murmured, looking deep into his eyes and caressing his face. \"No wonder your mistress needs only you for fucking.\" \n\nHe smiled back: \"I'm just happy that she doesn't mind sharing me, because I am enjoying fucking you too.\" \n\nShe went back to kissing him gently, and was whispering things against his skin, but too softly for him to understand. She finally looked back up at him. \"But you have not yet cum.\" \n\nMark shook his head. \n\n\"Do you fear giving me a child?\" Nanu asked. He shook his head again. \"Then are you barren?\" \n\n\"Only for this week,\" he quipped, grinning and enjoying her confusion at his statement. \"Don't worry, I'm just conserving my strength. This orgy is a long way from over, and if I cum now, I don't know how long it will take me to recover.\" \n\n\"Do you promise to cum in me?\" Nanu asked expectantly. \"I ... I am just a slave, I know, but I like you, Bonosus. I want to feel your cum in me, especially if you cannot give me a child.\" \n\n\"I think I can make that promise ...\" Mark replied, pulling her in for another kiss. \n\n*** \n\nBecky shivered as she sat on the stone bench, centered over a hole as she started to pee. She'd already cum at least six times, and she had the distinct feeling the tally would be sixty before the night was out. One woman and one man slave leaned down on either side of her and began sliding and flickering their tongues around her rock-hard nipples, making her moan in delight. She felt her legs being parted and smiled down at a freedwoman who leaned in and tongued her pussy attentively, even here in the cultus, the small, private bathroom of the Flavius family. \n\nBecky sighed and cradled the head of the woman licking her pussy, while squirming her tits against the mouths of the two slaves sucking them. The tongue of the woman between her legs sent tingles through her, and she could feel another climax building rapidly. Everything about this setting, this experience, was making her hornier and more sensitive than ever. She wrapped her arms around the necks of the man and woman sucking on her nipples and pulled them in tight, arching her back and groaning very loudly as she came, squirting into the face of the woman licking her pussy. She bucked and writhed on the seat, thankful for the anacept pills she had Mark had taken, since she'd done quite a bit of research on Roman hygiene practices. \n\nShe stood finally, releasing the two slaves who were sucking on her breasts, while the girl between her legs merely knelt back a little and kept her mouth pressed to Becky's pussy, massaging it with her tongue. Becky smiled down at her dreamily and winked before pulling her to her feet. They kissed deeply and then she led her out of the room, followed by the slaves. \n\n\"Go and find my manservant for me,\" Becky instructed. \"Bring him to me and I'll let him fuck you. He is a wonderful lover.\" \n\nThe woman hurried off, while Becky found a couch and reclined, her legs spread wide. She let the male slave lap at her gooey pussy while she made out with the female. She felt so deliciously depraved in this setting, like she could let everything go and act like a harlot without consequence. Which she could. \n\nThe freedwoman returned some minutes later (Becky barely remembered having sent her at this point), with Mark following. He was delightfully naked, his cock glistening with lubrication. He was holding the hand of a dark-skinned and dark-haired girl, who was clearly a slave and following behind him. The girl gaped at Becky in awe. \n\n\"Hey, Becks,\" Mark said cheerfully in English, almost laughing as the chip in his noggin tried to translate what he was saying into Latin. \"Enjoying yourself?\" \n\n\"Mmmmm, you have no idea, baby,\" the blonde woman purred, stretching her arms over her head so that her glorious tits thrust up toward the ceiling. \"I see you've found yourself a pretty little playmate. She was one of the dancers from earlier, right?\" \n\n\"Yeah, I wanna see if I can somehow get all eight to fuck me at once,\" Mark replied, grinning. \"That'll beat my record by at least a factor of ... wait ... you, Alexandra and her servant Lisette all at once ... divided into eight ...\" \n\n\"Don't strain yourself, Einstein,\" Becky said dryly. \"Just suffice to say that fucking eight Roman slave-dancers at once will be more than anyone else you know will ever accomplish.\" \n\n\"Except you, I'm betting,\" Mark pointed out, smirking. \n\n\"Is that a challenge, young man?\" Becky asked, raising her eyebrow. \n\n\"What'll we wager?\" he queried. He had no particular confidence that he could outfuck his Physics teacher, because she had proven to be quite a sex fiend, but he was more than willing to try, here in Imperial Rome. \n\n\"Tell you what ...\" Becky suggested, sitting up on the couch at looking up at him, smiling lightly. \"If I win, you have to let the man of my choice here in this orgy fuck you in the ass.\" \n\nMark was very still, a shiver of dread going up his spine. He swallowed, waiting to hear what else she had to say. \n\n\"Buuuuut, if you manage to fuck more girls at one time than I take of male and female lovers at one time, I'll buy your cute little girlfriend from our host and make her ours, okay?\" \n\nMark could barely process what he was hearing. He turned his head and stared at Nanu, weighing the price of 'owning' her versus having his ass plowed by some random Roman dude. \n\nThe perils of time travel. \n\nBut he'd already been shot and survived, right? \n\n\"You're on, Becks,\" he said finally. \"Y'only live once, right?\" \n\n\"That's the spirit,\" she cooed, winking at him. \"Tu solum vivis unum tempus! As long as you save some of that splendid stamina and cum of yours for me. So, are you going to introduce me to your little friend?\" \n\nMark nodded and pulled the Egyptian girl forward. She seemed rather intimidated. \"Becks, this is Nanu. She's Egyptian.\" \n\nBecky smiled kindly and patted her soft lap. Nanu let go of Mark's hand and eased herself carefully onto the blonde goddess' lap, sitting sideways. Becky put her arms around the girl's waist and looked her up and down. \n\n\"Mmmm, very nice, Mark ...\" Becky said quietly before pulling Nanu gently into her and kissing her warmly. To her credit, the slave girl did not resist at all, but melted into the kiss, moaning in pleasure. She squirmed around until she was straddling Becky, her legs hitched behind her back, and their breasts squashed together. Mark stood closer and watched eagerly as their tongues tangled and they began caressing and fondling one another. Nanu shivered under Becky's divine touch, and he knew she was incredibly aroused already. \n\nTheir kiss became sloppy, and they slid their tongues around one another's faces, leaving them glistening and sticky. Becky took Nanu's bottom lip in her mouth, sucking it in. The slave shivered again and let out a tiny whimper, before pulling back from the kiss and touching her fingers to the lip. She examined the fingers, noticing a trace of blood. \n\n\"Yes, I bit your lip,\" Becky whispered to her only loud enough for Nanu and Mark to hear. \"By making you bleed from our kiss, I have stated my intent to own you, Nanu. Would you like that?\" \n\nNanu's eyes widened and she nodded almost imperceptibly. \n\n\"Good,\" Becky said, reaching between them and cupping the Egyptian girl's breast, giving it a gentle feel. \"Now all my naughty little Bonosus has to do is manage to fuck all eight of you dancing girls at once in order to make that happen. You might want to help him a little ...\" \n\nShe allowed the slave girl to stand and gave her a gentle pat on the rear. Nanu stood in front of Mark for a moment, looking up at him, and then hurried off. He then heard Becky giggling. \n\n\"Goodness, Mark, how hard did you fuck her to make her fall that much in love with you already?\" the blonde asked, her beautiful blue eyes glinting with mirth. ",
        "Mark tried not to frown. \"I didn't have to fuck her that hard, thank you. I've fucked you a lot harder on countless occasions.\" \n\n\"And you'll have to fuck me much harder still to make me fall in love with you, handsome,\" she cooed, reaching out and stroking his cock gently. \"It's time for my surprise. Have you put the little speaker things all around?\" \n\nMark nodded: \"The switch to activate them and the music is in the little satchel we brought. I'll be ready.\" \n\nBecky smiled and stood up, moving close to Mark so that their bodies were pressing and his cock was nestled against her slick pussy, and already hardening from the contact. She smiled and traced a finger along his swelling member while looking up into his eyes. \n\n\"I'm glad to be here, Mark,\" she said softly, knowing that many sets of eyes were on them, and quite envious of them both. \"But I'm mostly glad to be here sharing this with you. I couldn't have asked for a better time travel partner.\" \n\nThey kissed tenderly for a moment before Becky pulled back and winked. \"I'm gonna go get dressed; be ready for me.\" \n\nShe scampered off, and he watched her magnificent ass wiggle away from him. He noticed he wasn't the only one staring. He wandered around and made sure that all the 'speakers' were strategically placed around the room for Becky's performance. They looked and felt like rocks, to be honest, so he had no idea how they worked. All he knew was that he'd tested them, and they did. Hell, they even had the music they were meant to play stored in them! Future-tech was really something. \n\nHe remembered how they'd found a chrono-merchant, right in his hometown, in a secluded store he'd never noticed before. Chester had pointed them to the merchant in question, and he was happy to help them. Most of his time was spent helping customers from the far future, who happened to be visiting Mark and Becky's era, so having some locals was a refreshing change for him. \n\nThe student and teacher had expressed their wish to go back to Imperial Rome and attend a real orgy. The man smiled slyly and showed them a range of items he thought they might need - clothing, currency, subtle but advanced medications to protect themselves... \n\nAll it cost Mark was his collection of six vintage Star Wars Pez dispensers. Apparently, originals were big collector's items in the future. \n\n\"Remind me to come back to you with my dad's Micronauts and Rock 'Em Sock 'Em Robots!\" Mark had laughed. \n\nMark felt well-prepared for this trip, and he had to admit, he was enjoying himself. He drank from his wine while standing in front of a patrician woman, who was sitting naked on a couch and slurping hungrily back and forth on his cock. He gazed around, noting the sumptuous array of foods laid out in vast quantities for the event - it was very hard for many of the slaves to restrain themselves from eating greedily, since this type of generosity was almost unknown to them. \n\nLoaves of bread, honey-cakes, dates, figs, stuffed dormice, varieties of pulses, apricots, various fish, cheeses, boar meat, olives, and caviar, which he'd heard the hostess Pompeneia brag to Becky about being sent straight from Persia. He'd never tried caviar before, and he was surprised that he actually liked it. \n\nHe blinked as he felt the patrician woman pull her mouth off his throbbing cock, which she had brought back to an impressive hardness. She had then bent over the couch, in full view of everyone in the room, and shamelessly reached back and spread her ass cheeks, exposing her puckered knot and asking him to fuck her ass. \n\nMark bit his lip, wondering what to do - Becky wouldn't be much longer in getting ready, but slaves were obliged to oblige all favours required of them by the legitimate guests, especially the higher-ranking patricians. He couldn't say no. \n\nHe stepped up and took hold of her wobbly ass cheeks, steadying his cock against her. She moaned in anticipation of him entering her. He reached down and ran his hand up and down her sloppy pussy for several seconds, and used that lubrication to prepare her ass, sticking his index finger inside her and twisting it around. The woman groaned loudly, and he realized that she was making a show of it, announcing that she was the one getting fucked by this tall, handsome and mysterious Spanish slave of Lady Aurora's. Apparently he was something of a commodity. \n\nHe would fuck her ass fast and hard, making her cum, so that he could return to his assignment from Becky. He took hold of his cock and pressed the head against her little star, pushing it through. She grunted and let out a moan. Lots of people were watching, including more than a few slaves. \n\nSlowly and firmly, Mark slid himself deep inside her, making her cry out so loudly that he was certain she could be heard outside the villa, despite all the other carnal happenings around them. \n\nHere goes nothin' ... \n\nHe gripped her hips and leaned over her, pressing her down into the couch as she wailed again. He began pumping in and out strongly, plowing deep inside her. Clearly she was no stranger to this, because she wasn't nearly as tight as Becky. He fucked her ass in a steady rhythm, watching as his pulsing shaft slid in and out of her. She gasped and yelped, putting on a show for those watching. Her hands kept her ass cheeks pulled wide, so everyone could see how deep inside her Mark was. \n\nThen he took the initiative. Everyone gasped as he let go of her hips and gripped both of her wrists, pulling back toward himself and arching her spine, even as he pressed forward into her more strongly with each stroke. The woman seemed to choke on her breath, shaking and looking back at him in shock. Her face was variously flushed and pale, depending on where one looked. Her eyes seemed bleary, as if she was on the verge of tears. \n\nBut she didn't object to his aggression or dominance. \n\n\"Do you think Mistress Horatia lets him take her that way?\" he heard one woman ask another as she gazed on in rapt wonder. \n\n\"If she does, she's a lucky cunt, she is ...\" whispered the other woman in response. \n\nAnd still he plunged his dick deep inside her ass, making the woman squeal and churn beneath him, struggling to move, but pinned by his superior strength. He could tell that the other women (and most likely some men) were jealous, because they were beginning to talk shit about her quietly. \n\n\"Qualem muleirculam!\" whispered a man gazing one in envy. That seemed a little harsh; Mark wasn't sure she was actually a bimbo. A shameless slut, sure. But wasn't everyone here today? \n\n\"Pedica meo!\" she gasped, squeezing her ass around him. \"Pedica meo!\" \n\nMark fucked her faster and stronger still, driving his cock deep into her bowels, until she sounded like she was having a severe asthma attack. She wheezed and struggled, but he held her immobilized. She could not escape this exquisite torture unless he let her. He could feel her tightening, though, and he knew she wouldn't last long - exactly what he wanted. He would make sure she got the show she desired. \n\nHis hips began pistoning rapidly, but with even more strength. The woman's eyes rolled into her head and her mouth dropped open. Her entire body shuddered in a long wave, and she screeched, battered by endless waves of pleasure as the orgasm crashed over her. She clenched her teeth and writhed, as if trying to escape, but she had already completely surrendered to her blissful fate. \n\nMark dropped her wrists and now gripped her long, kinky brown hair, yanking on it to pull her up. She gasped at the unexpected but glorious sting and found herself pulled up and back against him. His hips still pumped against her ass cheeks, sliding his cock deep within, while his strong hands began to grope and almost maul her flushed, sweaty body. Helpless before him, she allowed the violation readily, whimpering and in tears. \n\n\"Es scortum obscenus vilis,\" he growled in her ear before biting it and making her writhe in need. \"You are a vile, dirty little whore, aren't you?\" \n\n\"Etiam!\" she gasped, as his hand gripped her chin and turned her face forcefully to look into his eyes. \"Yes, I am a vile, dirty whore! Fuck me in my shame!\" \n\nHe fucked her until she was almost limp, and finally slid out of her ass, the abused knot pulling back along with his shaft obscenely, a fact noted and commented on by anyone close enough to see. She collapsed forward over the couch again, trembling, but saying nothing. Mark turned his body and caught the gaze of another woman, who hustled over, knelt and began sucking on his cock without question. He waited while she cleaned him dutifully before noticing Becky standing by a dark corner, watching in amusement. She raised an eyebrow and he nodded. \n\nWithout further ado, he subtly retrieved the remote for the things that were supposed to be speakers, and held his arms up, beckoning everyone to gather in. As the naked crowd moved in, the host and hostess came and stood near him, smiling pleasantly. Pompeneia explained that they were now to be entertained by the guest of honour, who would be dancing for them all. As if on cue with her words, slaves around the room modified the intensity of the flames coming from the braziers that illuminated the room, making it dimmer and more sensual, except for an area in the central expanse. \n\nMark subtly pressed a button on a tiny remote he was hiding in his hand. \n\nMusic emanated from around the room from the concealed speakers. He'd remembered what the T.E.A. agents had told him about anachronistic technologies and how they would rarely work in times or eras they were not known in, but he seemed to be getting away with it so far. It occurred to him that this meant the technologies he and Becky were using were not to be discovered. Yet. \n\nHe smiled as Becky seemed to shift and ripple into view, because of the flickering brazier flames. The music, he knew, would be like nothing these people had ever heard before. True, it wasn't metal, but the arrangements and instruments would be alien. Not to mention the Phil Spector-esque 'Wall of Sound' involved. \n\nBecky had told him the song was called 'Gypsy', and she now spread her arms over the head, as diaphanous strips of translucent material curled sensuously around her lovely form, and gems glittered on her forehead and navel. Gold anklets tinkled on her feet. \n\nMark had never seen 'Lord of the Dance' before, but watching Becky, maybe it wasn't such a bad idea after all. \n\nAs wind instruments began playing while drums and strings kept a backbeat, Becky snaked and twirled around the circular space in time with the music. Everyone watched her, rapt. Mark's eyes flicked over and he saw Nanu looking on from farther back in the room, standing atop a bench to get a better view. Her eyes were wide with awe. People were still whispering as they watched - for a patrician woman to dance this way, or even know how to dance this way, was scandalous, and they loved every second of her performance. \n\nThe music grew louder and more intense as the wall of sound, a concept these people couldn't even readily grasp, filled the venereum. Becky continued her cavorting, her breasts bouncing about beneath the outfit she was wearing. It was more of a tease than anything, because it concealed pretty much nothing. When she kicked high, she showed her pussy to everyone. She seemingly didn't care, or was enjoying it. Probably the latter, knowing her as he did now. \n\nThe music reached a crescendo and then stopped, with Becky collapsing to a sitting position, curled in on herself. The crowd clapped, cheered and catcalled enthusiastically. Seconds later, another musical piece began, this one in a style probably more familiar to the onlookers. Mark knew it was from the soundtrack of the movie 'Alexander'. It opened with tinkling chimes and what sounded like hooting bird calls. Becky slowly rose to her feet, holding an elaborate pose. \n\nThen what sounded like four hammers striking an anvil rang across the space, followed by a frenetic drum beat. Becky broke into a wild dance, spinning and prancing about with abandon. The crowd watched spellbound as the music echoed around the room. Becky's blue eyes flashed with excitement, knowing that the revelers were enchanted by her. There was no one in this room who was not sexually enthralled with her at this very moment. \n\nEven Mark, who knew her pretty much better that anyone on this planet, at any point in history, was watching her in quiet awe. It made her wet, thinking of what he'd do to her later after watching this. \n\nAs she whirled in a circle close to the crowd, she took hold of a male dancer slave, and then another, leading them in the exotic and magnetic dance she now performed. Both men were naked, and she snaked her body against them, rapidly bringing them to hardness. The crowd cheered as she flung aside the strips of fabric that concealed her body, until she was as naked as the slaves. \n\nEveryone watched in astonishment as she dropped to her knees between the two men and began hungrily sucking on their cocks, each one in turn, then finally putting them both in her mouth at once, her cheeks bulging obscenely. \n\n\"In the name of Suadela,\" breathed Pompeneia, standing next to Mark and staring dumbly. \"Your mistress is the most magnificent whore I have ever seen, Bonosus.\" \n\n\"Yeah, she's something, all right ...\" Mark agreed, blown away by his teacher's depravity. He thought about how much she'd been looking forward to behaving so luridly, without the consequences of biology or moral censure. She was time-travelling, for crying out loud; could there have been a better excuse? \n\nNo, if he was allowed to fuck as many women as he wanted, even all at once, Becky had the right to do whatever the Hell suited her. It was a damned fool who held her to a different standard just because she was a woman. Guys who thought like that never got women as amazing as Becky. Loser incels ... \n\nThe music was finally ending, and he discreetly shut off the speakers with his tiny remote. Seconds later, he felt a dainty hand on his shoulder. He turned to look at Pompeneia, who smiled at him wickedly and cocked her head, indicating she should follow him. \n\nMark took a deep breath and gently touched the nearly-invisible tab he'd put under his armpit, thankful for the vasopressin it was releasing into his system ... \n\n*** \n\n\"Heaven,\" Becky thought dreamily as she rode up and down slowly, the slave cock throbbing as it slid in and out of her ass. He was lying beneath her while she faced down his legs, his strong hands massaging her toned cheeks. His legs were spread to make way for another slave who knelt in front of her, thrusting back and forth to spear his rod in and out of her pussy. She groaned around the cock that was in her mouth, the freedman who owned it standing next to her beautiful face and letting her suck him. On either side, her hands were pumping vigorously on the cocks of two more slaves. \"God,\" she thought, \"I haven't done anything this wild since Frosh Week in my sophomore year. I've missed it so ...\" \n\nFive men at once. No regrets, no consequences. She almost giggled as she wondered where else she might fit another. Then two hands reached around from behind and began groping her ample breasts, making her moan around the cock she was sucking on. Another slave had moved up behind her and settled down onto the face of the man beneath her. His hands groped her while the slave below him did something to his ass. Becky didn't care what they did to one another; she just wanted to feel as many men on her as possible. \n\nShe shuddered as her nipples were pinched and she bobbed back and forth faster on the cock in her mouth, expertly swirling her tongue around the head and the shaft. Her hands twisted gently on the skin of the dicks she was holding, while she squeezed the ones inside her. She could feel them bumping against one another, separated only by a thin membrane between her pussy and ass. She gasped and almost wheezed, because they were striking deep inside her at different angles. The slave fucking her pussy was moving at an almost horizontal angle, while the one in her ass pushed straight up. It was almost ... disorienting in a way. \n\nShe gently pulled the two slaves she was jerking even closer, so that she could touch their cocks together, sliding them against one another. The slave behind her with his hands on her breasts moved them, shifting them to her trim stomach as she pointed the two throbbing members at her tits, her hands stroking them rapidly. The slaves both moaned and shuddered as they spurted their cum across the expanse of her bosom, glazing the silken skin. Seconds later, she felt the cock in her mouth throb and swell, pumping a pearly offering down her throat. She swallowed hungrily, enthralled to be living her wild days all over again. \n\nBecky cried out and shook as an orgasm blossomed through her, just the first of many she planned to have in this particular tryst. Slaves leaned in and began lapping at the cum on her breasts, tongues sliding along the skin or swirling around the nipples, occasionally biting and tugging on them. She leaned back, moving the man behind her to the side as she lay on the Nubian slave beneath her, still pumping in and out of her ass. She reached up and pulled the man fucking her pussy down by the shoulders, bringing him close and kissing him, their tongues rolling and wrestling about. They were both spearing up inside her now, their thrusts beginning to sync as she groaned shamelessly, filled with an exquisite wet heat. The climax that followed seconds later rocked her to her core, but she powered through it, determined to have as many more as possible. \n\nNow she let the two men fuck her while she took another hard cock in her mouth, stretching her neck back and relaxing her throat, letting it slide back and forth inside her. She gripped the hips of the man fucking her face, her eyes closed as she enjoyed the unadulterated ecstasy flowing through her, needing more men to pleasure her ... \n\n*** \n\nMark was sitting back lazily in the shallow pool that dominated the palaestra of the Flavian villa. He gazed around at the ornate courtyard, surrounded by columns and burgeoning with ornamental plants and trees. Exotic animals like peacocks could be seen strutting across the grass - at least, they could where none of the orgy's attendees were making merry. \n\nHe sighed as a dancer girl knelt behind him and massaged his shoulders, while two others were curled up against his sides, cooing and kissing his skin. Nanu, meanwhile, was sitting in his lap, facing out and moving up and down slowly on his cock, taking it deep inside herself, her fingers flexing against his supple thighs. She turned her head to look back at him, her hazel eyes glassy with pleasure. \n\nMore of her fellow dancers crowded in, until he felt himself totally enveloped in wanton slave flesh. They kissed and nipped at his skin, giggling and whispering to one another. Mark knew he was supposed to be a slave, but he seemed to be getting better treatment than a lot of the guests who weren't slaves. He imagined it was because he was the manservant of the guest of honour, but he still felt like a king at the moment. \n\nOne girl dangled rich grapes in front of his mouth and he bit several off, chewing and swallowing casually. Another then brought a cup of wine to his lips and he drank from it before she leaned in and kissed him, allowing the wine to flow back and forth between their mouths. As she pulled back from the kiss, she allowed the wine to spill out of her mouth, trickling down her neck and breasts. Two other girls immediately leaned in and began licking the sweet offering from her skin. ",
        "Nearby, on a well-cushioned couch, Lady Pompeneia was lying on her side, quite naked, moaning as her husband propped one of her legs in the air and knelt between them, sawing his cock in and out of his wife. She drank from her goblet and watched her slaves attend to Bonosus. She closed her eyes and rubbed one of her breasts as she remembered what it had felt like to have his big, sturdy cock fucking her less than an hour ago, feeling his thick, warm cum pump deep inside her. \n\nShe wondered how wonderful it must be to own a servant with these incredible qualities and envied Lady Aurora. \n\nShe entertained the absurd notion of trying to buy him from her, but was reasonably certain that even the emperor himself wasn't rich enough to purchase the slave outright. She'd content herself with becoming friends with Lady Aurora Horatia and perhaps then having access to Bonosus' fine rod. \n\nShe watched as Nanu, churning on Bonosus' lap, shuddered, arched her back and cried out, cumming hard. Two of the other dancers were sucking her tits and she seemed in ecstasy. Not that Pompeneia blamed her; Nanu was rather tiny, and that magnificent cock had to be battering the bottom of her lungs. The Egyptian girl sagged, and one of the other dancers gently pulled her off and over to the side. Nanu was immediately replaced by another girl, who straddled Bonosus' lap, facing him and sinking down with a loud sigh. \n\nPompeneia herself shuddered and gripped her breast tightly as a little orgasm shivered through her, while her husband moaned and pushed tight against her, cumming in her. Standing nearby, a slave helped ease his master's cock out of Pompeneia and sucked it clean. The mistress of the house sighed and caressed herself, enjoying every moment of this day. What a splendid orgy this was proving to be. \n\nShe sat up slowly and looked around, seeing people in ecstasy all around her - not far away, one of the guests had a servant girl pressed up against a column, and was fucking her eagerly. She was pumping her hips against him and gasping in delight. On the emerald grass nearby, two women were laying side-by-side, arms wrapped around one another while they sucked hungrily on each other's pussies. One of her slender, boyish manservants was getting fucked in the ass by a patrician man named Pontifex, and her slave was mewling loudly. \n\nShe heard laughing and joyous talk as Lady Aurora entered the palaestra, completely naked and surrounded by slaves and guests, all basking in her glorious sensuality. She sauntered over to the pool and eased herself down into it, sighing and relaxing in the cool water. \n\nPompeneia smirked - after the endless fucking the Lady had been doing, she was surprised there weren't clouds of steam emanating from around Aurora as the water touched her skin. She was possibly the only person in the villa to have fucked more than her servant Bonosus. \n\nPompeneia smiled and eased herself down onto the couch, beckoning over a slave-girl to service her. \n\n*** \n\n\"Well, Mark, I see you've won our little wager,\" Becky observed, smiling at him while two slaves massaged her shoulders. She parted her legs to allow a servant girl to massage her pussy, or occasionally go under the water to kiss and nibble at it. \"I managed six lovers at once. You seem to have eight.\" \n\n\"Only if we fudge,\" he admitted, looking around the dancer who churned on his dick, trying to keep her moaning down so he could talk. \"I can reasonably do four - one on my dick, one on my mouth, and one in each hand. I ... am not gonna take any in my ass, after all.\" \n\n\"Well, at the very least you can tie me,\" Becky pointed out, smirking at him. \"Think and try again. You won't even need to move.\" \n\nMark frowned for a moment, and then gave his teacher's words some thought - he perked up after a few moments, and then nodded. He told the girl he was fucking to lean back slightly. As she did so, he beckoned another to come and stand upright between them. The slave-girl did so, and Mark started lapping at her wet slit while the girl impaled on his cock began kissing and tonguing her ass. He paused and instructed four more to kneel by his hands. They did as asked readily. He faced them in to one another in pairs, bodies squashed close together. He then pushed his four fingers on each hand into one of them, while wiggling his thumb into the other. They all moaned, because Mark had decent-sized hands and fingers (in any day and age), and began kissing and swallowing one another's tongues hungrily. \n\n\"See?\" Becky giggled. \"Six for six, you've matched me now.\" \n\n\"Uh-uh!\" he called out, his voice muffled by the slippery slit of the slave-girl on his mouth. \"Watch this!\" \n\nThe women all whined in protest as Mark stood up, especially the one who had been fucking him, but he assured them that this would take only a moment before all was right with the world. He got out of the water and lay down on the grass, his frame stretched out and his throbbing cock on display, pointing at the cerulean sky overhead. His arms were spread wide and his legs slightly parted. \n\nMark quickly brought the six girls back to their original positions, with the girl who had been using his mouth now facing down his body, to kiss and play with the one bouncing up and down on his cock. The two sets of girls resumed their places on his fingers and thumbs, kissing each other eagerly again, enjoying this strange game. He began wiggling his still-wet toes, and the last two slave-dancers caught on quickly - they took hold of his ankles and lowered their gooey pussies down onto his feet, taking them inside their slippery tunnels and moaning loudly. \n\n\"OCTO!!\" Mark yelled triumphantly from beneath the pussy squirming on his face. \n\nBecky laughed in sheer delight, clapping in support of her student's ingenuity. Others looking on laughed and applauded also. A crowd was gathering around him, but everyone made sure that Lady Aurora, who had moved to the spot just vacated by her servant, could see easily. She knelt on the low, tiled bench below the water, her elbows on the grass, the endless soft blades tickling her breasts as she watched. She wiggled her shapely ass, and a slave dutifully moved up behind her and slid his cock deep inside her while she gazed on. \n\nMark was enjoying himself - never had he guessed he would have been fucking eight girls at once, not to mention Roman slave-dancers, two of whom he was pretty sure were sisters. He wiggled his fingers, thumbs and toes, he flickered and snaked his tongue inside the girl above him, and he pushed up and down with his hips, spearing deep inside the slave-girl, who cried out in rapture as his cock split her wet pussy wide open. She arched her back and cried out loudly, cumming hard. She slumped off to the side and was quickly replaced by Nanu, who was eager for more. She churned and writhed on him, occasionally looking over at Lady Aurora, who smiled and winked at her. \n\nHe could feel them all squirming and trembling now, and pushed himself harder, sending them all over the edge - several moaned loudly while the one on his face kissed Nanu deeply as they both screamed, rocked by their orgasms. The girl riding his tongue fell off to the side, shaking and holding her pussy as she moaned in pleasure. He looked over at his teacher. \n\n\"Becks,\" he panted, his face glistening with cum and flush with need. \"I'm gonna cum, but I want it to be in you. Please...\" \n\nWithout a moment's hesitation, Becky stood, the crystalline water cascading off her glorious body. She clambered out and all the slave-girls moved aside readily, even Nanu, who dutifully knelt beside Lady Aurora as she straddled her manservant. \n\n\"Thanks for waiting for me, Mark,\" Becky whispered as she teased her slippery pussylips along his cock while resting her hands on his shoulders and looking down at him. \"It means so much to me.\" \n\n\"Means everything to me too, Becks,\" he replied, nodding. \"Wanna give 'em a show, show 'em how we do it in the twenty-first century?\" \n\nThe blonde beauty smiled wickedly, and without another word, shoved herself down hard on her student's cock, making them both moan loudly as he pushed deep inside her. \n\nEveryone watched in awe as the two began fucking madly, Becky thrashing her hips back and forth while he pumped up and down rapidly inside her, battering her cervix with each thrust. His hands found her bouncing tits and squeezed them, making her cry out, her fingernails digging into the meat of his shoulders. Pompeneia and her husband Master Flavius stood right beside them, watching in fascination. Nanu was caressing and massaging Lady Aurora's flanks and ass while she fucked Bonosus, her deep hazel eyes staring longingly at them. \n\nBecky rode Mark harder and harder, his throbbing member stretching her cunt deliciously, making her want to scream. She held on though, squeezing around Mark, thrilled to know that everyone's eyes were on them, watching them fuck with wild abandon. With every thrust she squeezed her ass cheeks tight, feeling Mark shudder below her. \n\nMark was panting and grunting as he fought to hold on, determined not to cum before Becky. He squeezed her breasts and pinched her nipples, pulling on them, even while she writhed and churned on his dick. He felt himself throbbing inside her, his cock swelling as his body told him he was close. He pushed up as hard as he could, getting as far inside her as possible. \n\nBecky's eyes, which had been squeezed shut, snapped open and she went rigid and cried out loudly, her entire body almost warping as she was hit by a sense-shattering orgasm. She rocked about as her cunt clenched Mark's cock fiendishly. She heard him moan and then his molten cum was lashing her insides, driving her to maddening heights of rapture. \n\nShe collapsed forward, her body shaking and her breath coming in great heaves. Mark found the strength to put his arms around her and hug her. Becky planted little kisses along his neck, collarbone and pecs. \n\n\"We've been taking those futuristic tabs to keep our libidos up,\" she whispered as she nuzzled her cheek against his neck. \"And you need to remember that it's probably all those extra hormones talking, Mark, but right now, at this very moment, I am so very in love with you ...\" \n\nHe smiled and kissed her head. \"S'okay, teach, I'm in love with you, too.\" \n\nShe giggled and squirmed against him happily, feeling his hard cock still throbbing inside her. \"You sure it's me and not your little friend waiting so patiently at our feet that you're in love with?\" \n\n\"Very,\" he replied. \"I didn't call her to share my huge orgasm or fill her with cum, did I?\" \n\n\"Mmmmmmm, and I'm so glad,\" she purred, nuzzling him and closing her eyes, forgetting there were dozens of people staring at them intently. They undulated gently against one another, sliding his cock in and out of her slowly. They weren't trying to cum again, but damned if it didn't feel good to be making love gently. \"Let's just stay here in love for a few minutes, and then get back to the party, hmm?\" \n\nMark nodded, and Becky looked up and asked everyone to give them some time alone. Once they had dispersed (including a reluctant Nanu), the couple went back to kissing one another lovingly, and whispering how in love they were at that moment. They both knew the hormones would wear off, and they would remember how they felt, but were confident in their ability to just get past it, even laugh about it, this chemically induced sensation of being in love. Secretly, Becky was pretty sure she'd almost fallen for Mark a few times anyway over the past couple of months, especially after he'd rescued her from the Louvre. \n\nHe slowly rolled her onto her back, and Becky's eyes shone as he looked down into them, pumping his cock slowly in and out of her. Her ankles hooked behind his, keeping him inside her, while her arms rested lazily on his back. Their tongues tangled playfully and his hands squeezed her butt cheeks. \n\n\"Mmmmmm, yesssss,\" Becky sighed, finally sitting up and looking down at her lover, who was still deep inside her. She caressed her breasts, luxuriating in the tingling thrill it brought her. Both she and Mark had very active sex drives to begin with, but she was pretty damn sure that these little medi-tabs, from some seven hundred years in their future, had kicked their libidos into overdrive. \"Yknow, I expected us to get a lot of tail when we came to this orgy, Mark, but ... I am also pretty sure that you and I are sweating pheromones, and it's making us absolutely irresistible to these people.\" \n\n\"Well I ain't objecting,\" he said cheerfully, reaching up and helping her massage her breasts and making her giggle. \"So what's the plan now?\" \n\n\"Well, I could spend the rest of my day impaled on this magnificent tool of yours,\" she mused, reaching down and stroking her fingers along the base of his sticky shaft as she moved herself slowly up and down on it. \"But we did come here to participate in an authentic Roman orgy, and we haven't been clockhammered yet, so we're doing something right. I guess we should get back to the other guests, hm?\" \n\nHe nodded. \n\n\"And of course, there's the matter of me purchasing your new girlfriend for you,\" Becky reminded him, winking. \"You won our bet, after all.\" \n\nHe considered: \"What do we even do with her? I doubt we can just take her forward into the future with us, right? I mean, we got lucky with Lady Alexandra, because she already knew Chester Edgeworth. I doubt Nanu knows anyone in the timestream.\" \n\n\"You may have a point,\" she conceded, wondering if the rampant hormones were impairing her normally sober judgment. \"But we'll just have to see.\" \n\n\"They told me getting clockhammered can hurt,\" Mark said. \n\n\"I'm sure that's true, if you do something batshit insane,\" the blonde beauty agreed, still undulating up and down on his cock absently. \"But I think temporal mechanics probably uses the path of least resistance. If we load her up on your Holmes Field Device and it doesn't go anywhere, it's Time telling us we're not going back with her. We'll figure it out.\" \n\nThey meant to go back to the orgy, but she ended up leaning down and kissing him deeply, and they began fucking again. Several minutes later, they both cried out and said they loved each other as their mutual climax thrashed through them, leaving them trembling, sweating masses of limbs and flesh. \n\n\"Okay ... okay ...\" Becky breathed, her head almost spinning. \"I'm gonna go, or I'll never manage to get off you ...\" \n\nWith great effort she rolled off to the side, groaning loudly as Mark's raging cock popped out of her wetly. They lay side-by-side, desperate to touch and hold hands, but knowing better. Becky clambered to her feet, sucked in a deep breath, and walked away, not daring to look at Mark. She instructed two slave-girls to clean his dick with their mouths and then escort him inside, which they did readily. \n\nMark allowed the girls to lead him back inside, and they departed with a giggle and a wink. He sighed as he took another goblet of wine from a servant and then began wandering around, just enjoying the environment. Yes, his cock was sticking straight out in front of him, and endless numbers of women (and men) were eyeing him longingly, but he refrained, momentarily, from indulging. He either wanted to find something new and different, or find Nanu again. \n\nHe heard a loud moan, and looked over to a corner of the room, where he saw Becky squashed between two men, one beneath her and one above, who were both pumping their cocks in and out of her pussy at once. She seemed like she was in absolute Heaven. He couldn't blame her; this little jaunt of theirs was unreal. \n\nHe needed to pee. \n\nMark began to wander through the house, wondering where the lavatory was - he knew to look for what was more or less a stone seat with a hole in the middle of it, but this was a big villa. He sipped at his wine and wandered through the household, wondering if maybe finding a secluded tree or a willing slave-girl was easier, because he had no clue how to use a Roman toilet with a hard-on. \n\n*** \n\nBecky writhed, stretched, and then sighed loudly, as she came. The slave lying beneath her pulled his cock out of her pussy, and Lady Pompeneia, who was kneeling between their legs, took hold of his pulsing cock and plunged her mouth down onto it, moaning as he came down her throat. \n\nOnce she had taken all his cum, she dismissed the slave away with a lazy wave of her hand, and then curled up on the couch next to Lady Aurora, the two of them kissing deeply and tenderly. They fondled one another gently for some time, before the hostess sighed in contentment and caressed her guest's cheek. Not far away, the dulcet tones of a cithara carried through the semi-private nook they were lying in. \n\n\"I harbour no doubt that it is you I have to thank for the success of my little party, my love,\" she cooed, smiling into Aurora's beautiful face. \"And the day is barely half over. How can I thank you for all you have done?\" \n\nBecky smiled and leaned in to kiss the nipple crowning Pompeneia's full breast for a moment before asking her question. \"My slave, Bonosus, has taken a liking to your girl, Nanu. Would you allow me to buy her from you?\" \n\nThe mistress of the house blinked. \"You... wish to purchase one of my slaves?\" \n\nBecky nodded: \"Specifically, the girl Nanu. As I mentioned, my boy Bonosus has taken a shine to her, and a happy slave is a productive slave. She also seems quite taken with him. He loves her dancing and how she makes love. I as yet do not have a dancing slave. Would you consider my offer?\" \n\nPompeneia seemed somewhat perplexed at first, and then perhaps slightly taken aback. \"My lady, I do not mean to give offence, but what use have you for a formerly owned slave?\" \n\n\"It suits me to see my Bonosus happy, is all,\" Becky replied simply, caressing Pompeneia's breast once again and making her shiver. \"It's not like I need a new slave for him when a used one will do. How much did you pay for her?\" \n\nLady Pompeneia thought for several moments. \"I ... it must have been close to twenty-five thousand denarii, my lady. She is a good dancer, she was not cheap.\" \n\nBecky moved her hand up to caress the hostess' cheek as she looked into her eyes. \"I will give you three hundred aurei for the girl, which is just over thirty thousand denarii within the city's walls.\" \n\nPompeneia's eyes went wide. \n\n\"That is your original purchasing price for her, and extra, for the hassle of replacing her. You asked me what you could do to repay me for my part in today's festivities, and I wish to buy your slave Nanu. What say you?\" \n\nPompeneia knew she should have at least consulted her husband first, but she was reasonably sure he would not turn down such a generous offer. Nanu could be replaced easily, another girl trained to dance in her place. Her decision was readily made. \"When would you want to pay for her, Lady Aurora?\" \n\nBecky shrugged and smiled. \"If you can be discreet about it, I brought the money with me, not knowing what it might come in useful for. If you have a slave bring it to me, I will give you the money now.\" \n\nPompeneia nodded and summoned over a young boy, one she trusted implicitly, because he was a mute. He knelt down next to her and listened carefully. \"Bring Nanu here to me forthwith.\" \n\nShe turned to look at Lady Aurora, who smiled and leaned across her hostess, sliding her large breasts over Pompeneia's as a tease. She smiled at the boy. \n\n\"You will find my effects in a small alcove off the posticum. Therein, you will find a pack. It is heavy, but bring it to me, when you bring Nanu.\" ",
        "The boy nodded and hurried off. If Pompeneia had any further questions, they would have to wait, because Lady Aurora settled down on top of her, squashing their breasts together and kissing her deeply. The patrician women made out with one another for some minutes, until the boy returned, with Nanu helping him carry the sack the Lady Aurora had requested. She dismissed the boy and her hurried off. Nanu knelt dutifully. \n\nBecky and Pompeneia both sat up, and the blonde woman opened the pack, allowing the Roman lady to look inside. She tried to keep her eyes from goggling out of her head. The gold coins glinted wickedly in the brazier lights that touched them. There were many hundreds of coins, without question. \n\nPompeneia looked at Nanu and spoke to her somewhat tersely. \"You are now owned by the Lady Aurora Horatia, who has purchased you at a fair price from me. Such belongings as you might have, girl, will be leaving with you when the Lady departs. Understood?\" \n\nNanu's eyes widened and she felt her heart suddenly pounding in her chest in shock and delight. Unable to contain her smile, she nodded eagerly. \n\nPompeneia looked back at her guest and smiled. \"She is all yours, my lady.\" \n\nBecky looked at Nanu and smirked, making a shooing motion with her hand. \"Well, what are you waiting for, girl? Go find that lazybones Bonosus and tell him.\" \n\nNanu was gone in a flash. Becky turned to look at Pompeneia and smiled wickedly as she leaned her back down on the couch and wiggled her way between her hips, so that her mouth was at her hostess' pussy. \n\n\"Now, how about I find another way to thank you for your generosity?\" she purred as she began sliding her tongue along those sticky lips ... \n\n*** \n\nMark was wandering through the darkened rooms of the parts of the house not currently being used by the orgy, still looking for a damn lavatory. Why the Hell did the Romans have such fucked-up house layouts? He'd passed about ten servants' bedrooms already; was he just supposed to piss on one of them? \n\nHe paused as he heard a quiet noise, one he recognized quickly as sighing. It had been coming from a room nearby, and it was definitely a girl's sigh. \n\nOr a really femmy boy slave. You couldn't guess in ancient Rome. Either way, he decided to investigate. He tiptoed forward, looking into various dark rooms he'd passed. He heard another sigh, and then something more akin to a moan. He smiled slyly, identifying the room it had finally come from. He crept up and peered around the open wooden doors to look inside ... \n\nShe had her back to him, but inside the dark chamber, which was obviously a bedroom, was a young woman, with her face seemingly pressed to the far wall, and squirming her hips beneath her expensive clothing and beginning to pant. She had voluminous brown hair worn up on her head, exposing a shapely neck, and her stola dress had ridden up high enough to expose her lush ass cheeks, which were quivering and squeezing while she fingered herself. \n\nGrinning, Mark leaned against the door frame and just watched quietly. He wasn't beyond a good show. \n\nA tiny point of light near her head finally showed Mark what she was doing - there was a small hole in the wall, big enough for her to see through, and she was clearly watching the orgy happening on the other side. She was also clearly having a great time getting off to it. \n\nHe liked the sight of her, at least, what he could readily see - she had a great ass, a slender back and shapely legs. Her dark brown hair, worn in several braids, was just begging to be pulled on. He couldn't see her pussy from here, but he could definitely hear how wet she was. \n\nHe quietly entered the room and glided up behind her. She smelled of iris and roses, a perfume he found thrilling, especially here in this dark room, both of them unseen by the scores of others in the villa. His cock, still hard and throbbing, couldn't wait to be buried deep inside her. \n\nHe moved in close and pressed up against her, his rigid shaft sliding between her legs. She shuddered in shock and drew in a breath, as if she was about to scream - but he quickly and gently clamped his hand over her mouth and wrapped his other hand around her waist. Her moved his head next to her ear. \n\n\"You don't need to scream or be frightened,\" he whispered, feeling her still shaking. \"I am the Lady Aurora's servant Bonosus, and I just want to be with you this day ...\" \n\nShe turned her head, her eyes wide, as she tried to see him, his hand still loosely over her mouth. Her body was still stiff in possible panic, but she hadn't cried out yet. He smiled at her, trying to assure her he meant no harm. \n\n\"If I let go of your mouth, will you scream?\" he asked. The girl shook her head. For whatever reason, Mark believed her, and removed his hand from her mouth, and his arm from around her waist. She didn't run, but she threw herself against the wall she was standing next to, almost clutching at it as she turned around to face him. Her eyes were still wide, and he could see she was breathing heavily. \n\n\"See? I'm not gonna hurt you,\" Mark said, smiling cheerfully. \n\nStaying pressed against the wall for safety, she looked him up and down slowly, noticing now that he was quite naked. Her eyes lingered on his erect member for several seconds, as if captivated by it. He could now see her from the front, and what he was looking at pleased him - she had a pretty face, certainly. Not exotic, like Nanu, nor was she as striking and just plain gorgeous as Becky, but it was a pretty face nonetheless. Her eyes were brown, her cheekbones high, and her mouth sensual and full. \n\nThe face ... he knew it. \n\nLady Pompeneia and Master Flavius! This must be their daughter. \n\nHe continued looking at her body, noting now that her entire outfit was askew - not only had her dress been pushed up around her hips in front, to allow her to finger herself, but the top of her dress was pulled down, no doubt so that she could play with her pert breasts. They were not large, but looked perfectly full on her slender frame, capped with brown aureoles and nipples, which were still hard. She had a tiny waist and womanly hips. \n\nHe was going to enjoy fucking her. \n\n\"My name is Bonosus, like I said,\" he repeated, moving in a tiny bit closer to her. She didn't try to escape, but perhaps flattened herself a little more against the wall. He tried not to seem so forceful. And odd thing, since he was at an orgy, and was already used to just fucking whomever he liked. \"Would you tell me your name?\" \n\nShe finally spoke, her voice low and quiet. \"My name is Domitia. I am the daughter of your hosts, the Master and Mistress Flavius.\" \n\n\"I am very happy to meet you, Domitia,\" he said, smiling and nodding. In his ear, he could hear the implant translate her name as 'she who is tamed'. He suddenly had a very good feeling about this encounter. \"In the name of my mistress' goddess, Feronia, I would ask you to join me in making love.\" \n\n\"Y- you are kind, Bonosus,\" she stammered, her face pale, but a flush in her cheeks. Her eyes were no longer wide, but turning glassy. \"But I mus- I shouldn't ...\" \n\n\"I thought today was a day where all people cast aside their inhibitions, and did exactly as they pleased,\" he reasoned, stepping a little closer, noticing that she did not attempt to move away from him. \"I already saw you looking through that hole there ...\" \n\nNow Domitia blushed furiously, turning her head to look at the ground. \"I am ashamed ... I should not - I shouldn't have been ...\" \n\n\"What were you looking at, anyway?\" he queried, pressing himself against her, his cock now flat against her belly, separated from her skin only by the fine material of her stola. She shivered as she felt his member press to her, and her hands reached up and flexed, without touching him. Leaning over her shoulder, her wondrous scent in his nostrils, he closed one eye and peered through the tiny hole in the ochre-painted wall. \n\nHe smiled slyly as he could see that the hole looked out on the palaestra, the courtyard in which he and Becky (and several others) had been fucking earlier. Even now, he could see a man bending a slave girl over in the shallow pool and fucking her from behind, while two women beyond the pool were lying opposite each other, legs scissored and slithering their pussies together. One of them was sucking on the cock of a slave who leaned over her, moaning and fondling her breasts. \n\n\"Well, you were enjoying yourself, clearly,\" Mark mused, turning and smirking at her. She looked at him, trying to smile back, but then just blushing and looking at the ground again. At least she wasn't trying to leave anymore. \"Would you like to watch through the hole again while I fuck you from behind?\" \n\nSomething in his suggestion made her tense very suddenly, and she looked at him again, her eyes now wide. \"I ... shouldn't ... no, my parents must not know I'm here, they - I should return to my domicile.\" \n\n\"Are you married?\" he asked, thinking that even if she was, she had showed up at her parents' orgy and was making herself cum, even if she'd been hiding. Marriage didn't seem to be a barrier during an orgy, near as he could tell. By his count, he'd already fucked at least four married patrician women and three plebeian women today. \n\n\"Yes! No! I -\" she stammered, blushing again and closing her eyes. Against her will, she inhaled deeply, taking in his raw, animal scent. Gods, he smelled divinely of sexuality, of carnality, of ... heated fucking. It made her instantly wet, and her body trembled in need. \"I cannot...\" \n\nHe smiled slyly and could tell that she wanted to stay. Even though she was protesting, he could already feel her hips pressing forward, squirming against him, desperate to finish what she was started when she was alone. She wanted to cum with him. \n\n\"Then don't say anything,\" he whispered to her, his hands on her hips now. She shuddered again, her eyes wide and glassy as she gazed up at him. \"Let me take care of this for you, Domitia ...\" \n\nHe couldn't be sure, but the thought she nodded almost imperceptibly. Her felt her breasts press forward against him. \n\nHer name means 'She who is tamed'... \n\nHe took both her wrists in one hand and lifted them, pinning them against the wall over her head. She gasped and shivered, seemingly cowed by his superior strength. Her hips squirmed against him again, her breasts heaving as she almost began to pant. Her eyes were flashing now, and he could see lust in them, almost as if it was forbidden and impure. He would give her what she wanted, that was certain. \n\nDomitia sucked in her breath as he put his free hand on her breast and fondled her, the soft skin yielding before his touch, his palm brushing over the hard nipple. Domitia bit her lip as she tried to remain quiet, her whole body trembling with a need for release. \n\nMark caressed her other breast as well, pinching the nipple and pulling on it gently, making the brown-haired girl whimper and squeeze her eyes shut. \n\n\"No ... uhhhhhh ...\" she gasped. \n\nHis hand now found her waist and undid the cotton strip that belted the stola, letting it fall away. Domitia was breathing heavily now, especially when he began to pull her dress down, revealing more and more of her body. She gasped loudly as she felt his hard cock pressed against her belly now. She pushed her breasts against his chest, squirming with urgency. Her protests made less and less sense by the moment, although he surmised it was just for show. Girls did that sometimes. At least, that's what Becky and other girls he'd fucked had told him. Domitia seemed to be no exception. \n\nHer stola now pooled around her ankles, revealing her body. The one flickering brazier in the corner of the room revealed that he had seen correctly - she had a lovely body. Not an erotic fantasy like Becky's, which was the product of the modern era of vitamins, yogurt, quinoa, hemp seeds and CrossFit, but still lush and attractive, and currently given to a deep-seated lust he wanted to fulfill. \n\nHer eyes were flashing as they stared up into his, her breasts heaving. She bared her teeth as he reached down and cupped her pussy, which was now dripping wet. His finger slid up and down her length, finding her clit and eliciting a gasp. Her hands, still pinned above her head, flexed compulsively. She was breathing heavily now. \n\n\"Keep your arms above your head,\" Mark said firmly as he released them and brought his hand down, both of them reaching behind her and taking hold of her ass cheeks. Domitia almost hissed as he lifted her up, her legs instinctively wrapping around his waist. She had readily obeyed, and kept her arms over her head, as if they were still pinned there. Her submission to him seemed very real and complete. \n\nLooking into her eyes, he held her steady, leaning her back against the wall while one of his hands guided his cock to her wet entrance. One he felt the engorged tip nestle against her lips, he placed his hand back on her ass cheek and began to push... \n\nDomitia breathed deeply as he penetrated, but then shook and whimpered as he encountered a barrier. Mark paused, but then felt her push her hips against him, and proceeded to lean forward against the wall. She shook and cried out, and Mark suddenly slipped deep inside her warmth easily. \n\nHoly shit, she'd been a virgin ... awesome! \n\nShe wrapped her arms around his shoulders and buried her face against his neck, trembling almost uncontrollably. Seconds later, she lifted her face and look up at him, her eyes glassy. Whatever pain she'd been feeling was clearly gone, now. He could, on the other hand, feel a single, warm trickle of a fluid down the underside of his cock, and the air smelled slightly of pennies now. \n\n\"You have made me a woman,\" she murmured, still staring at him. \"Let us finish this wondrous coupling now. Fuck me, Bonosus, servant of Lady Horatia ...\" \n\nShe put her arms back above her head again, her wrists crossed, as a sign of his power over her. Mark nodded and began pumping slowly, sliding his cock in and out of her. Domitia trembled again, at the feel of him inside her, hard and throbbing, her pussy squeezing around him. She sighed loudly, eyes still locked with his. \n\n\"A girl could die this way, and happily ...\" she breathed, squirming her breasts against his chest. It was a bit of a strange thing to say, he thought, maybe a little morbid, but teen girls were like that sometimes, with the weird, poetic drama. He'd fucked a goth chick once, and she was - \n\nDomitia grunted and began pumping back against him lustily, all her fears of their fucking obviously gone. She was hissing through her teeth, grinding her hips against him as he made a sawing motion with his, pushing deep inside her wanton pussy. He could feel her pussy tightening around him as she found their rhythm, slippery and getting wetter by the moment. \n\nShe jammed her lips against his and kissed him feverishly, their tongues wrestling between their mouths. He held her tighter, thumping her against the wall each time he thrust his member deep inside her. She moaned into his mouth, and her warm skin was getting damp with sweat as he took her. She might have been a virgin mere moments ago, but her carnal desires would not be denied anymore. Domitia pushed back for all she was worth, her arms finally coming down and gripping his back. \n\nThey were still kissing in a frenzy, and Mark was breathing through his nose, his hips smacking against hers. Domitia panted and moaned into his mouth with each thrust, her fingernails straking his back as she fought to get him ever deeper inside her. Her need almost baffled him, because he could feel the head of his cock battering her cervix each time he drove home. The wet sucking sounds her cunt made filled the room, even over the sounds of their groans. \n\nMark was growing warm now, and he could feel that the sex tabs he'd used had already replenished his cum, deep inside his balls. When he did bust, this girl's first experience would see her overflowing with cum, his cum, and it would be glorious. He wanted to bring her out of hiding and over to the orgy. He wanted to fuck her at the same time as he fucked Becky and Nanu. \n\nDomitia seized up suddenly, shaking around him and screaming into his mouth while her cunt clenched him ferociously. He kissed her hard, making sure she didn't alert the whole house, and fucked her harder than ever, making her wail into his mouth again. He could feel his own body heating up rapidly, the distinct, tingling boiling in his balls letting him now that orgasm was now unstoppable. \n\nMark pulled her hard against him, pressing into her as far as he could, straining and arching his back. \n\nThe floodgates burst and he began filling Domitia with his pearly cum, and she panted and almost growled at the release. She churned and writhed on his cock, her frothy essence smearing his entire groin. He felt the peristaltic motions of his inner muscles, spurting his cum up his cock and deep inside his lover, a glorious, blessed release. \n\nBest. Orgy. Ever. \n\nHe sagged against her, breathing heavily, while Domitia went limp in his grip, sighing in deep pleasure. She was no longer raking her fingernails over his back but caressing it gently, almost reverently. It was kind of backwards, since he was supposedly a slave and she was a patrician's daughter, but what the hey, she was a total subbie, right? \n\nShe purred as she kissed his damp skin, still undulating her hips against him and squeezing his cock gently with her gooey pussy. He held her close, his forehead against her neck while he tried to regain his breath. This orgy was barely half over. There was so much to - \n\nThe screech from behind them froze his blood instantly. He went rigid for several moments, before his head snapped around and he looked to see who was in the doorway. \n\nGazing at the entwined pair in astonishment, bordering on horror, was Nanu. Still quite naked, her face was frozen in shock, her mouth working soundlessly. Confusion engulfed him, wondering what had caused the slave-girl to have such a caustic reaction to what she'd seen. Was it jealousy? It couldn't be that; she'd watched him fuck plenty of other women today. \n\nHe looked back at Domitia, and saw that she had frozen as well, pale with what could only be described as terror about their discovery. That confused him too. What the Hell was happening here? \n\nEndless feet seemed to come stampeding toward them, and cries of shock now echoed through the house. Master Flavius surged through the door and stopped dead, his eyes wide as dinner plates. \n\n\"Domitia!\" he said in a quavering voice, pointing a trembling finger at the duo. \"What are you - \" \n\nLady Pompeneia, accompanied by Becky, now bustled into the room. The matron stopped dead upon seeing them, her body shaking. Becky's eyes went wide. \n\n\"Oh, shit...\" she muttered in English. \n\n\"Father!\" Domitia called out, still impaled on Mark's cock, but looking over his shoulder at her parents. \"Mother! I -\" \n\nShe made to move, but Mark's tool shifted inside her, and she gasped in pleasure and began wriggling furiously, fucking him again despite their ever-growing audience. People cried out in shock, and Lady Pompeneia's eyes rolled into her head before she fell to the floor in a dead faint. The cacophony grew, with Mark staring in confusion and Domitia grunting like an animal as she fucked her way to ecstasy again, seemingly unable to stop. ",
        "A patrician woman entered and shrieked, scandalized by what she saw. \n\n\"The slave!\" she called out, aghast. \"He has defiled one of Vesta's Virgins!\" \n\nAs if in response, Domitia shook and arched her back, wailing loudly as she came. \n\n\"Seize that man!\" shouted Flavius, his face purple with fury. Free men and slaves both surged forward, grappling onto Mark and trying to yank him away. But Domitia would not be pried off him, howling in protest and still grinding herself madly on his dick, squealing through another orgasm, even as they led the pair away. Most of the crowd followed them out, still clamouring loudly. Some women helped the swooning Pompeneia to her feet, and led her out of the room. Soon, the only people left were Becky and Nanu, who stood in the doorway. The slave-girl stared at her new mistress, who shrugged rather helplessly. \n\nNanu turned and followed the crowd, leaving Becky alone in the room. It was eerily quiet now, the noise of the crazed crowd getting increasingly distant - people yelling in outrage, punctuated by the distinct sounds of Domitia cumming yet again, loudly. \n\nBecky finally hung her head for a moment, shaking it and smiling. \n\n\"Oh, I can't wait to see how this turns out...\" she said to herself as she walked out the door. \n\n*** \n\nPart II - Okay, Maybe I'm Not... \n\nRome. \n\nThe mightiest city in the world, lord of Europa, teeming with untold citizens, slaves and foreigners. Blessed by Jupiter, greatest of the gods, and fed by the ancient Tiber River, Rome stood glorious and invincible, crowned with seven hills like jewels. \n\nNot that Mark could see any of that from his tiny, stinky little prison cell. \n\nHe sat on the dirty floor, sighing despondently as he looked through the iron bars that separated him from the rest of the world. He'd found a corner that was not sticky with the effluences of previous inhabitants of the cell, crouching up with his knees to his chest. He suspected that the tab he was wearing would protect him from disease and sickness, but he'd be damned if he was taking any chances. \n\nHe heard grunting and groaning from the cells behind him, then an absolutely disgusting series of splattering noises as someone began crapping themselves messily. He wrinkled his nose in revulsion and stared along the bottom of the wall, making sure nothing was likely to seep through. \n\nHe turned his head and stared blankly across the small hallway at the cell opposite. Out of the darkness, a deranged, naked man appeared, his wild, scraggly beard greying and caked with God-knows-what. He cackled at Mark and helicoptered his dick at the new prisoner, all the while trying to shake the bars of his cell. \n\nMark shook his head and looked away, finding a spot on the wall to stare at. He noted some graffiti, in Latin, brown with age - it was either dried blood or shit, but he decided he didn't care enough about what it said to get closer. \n\nHe'd taken off the ratty tunic they'd given him, because it stank and had things crawling in it. Since he'd been arrested and dragged off naked from the Flavius villa, with Domitia still impaled on him, they'd eventually attempted to cover him up - somewhat difficult, since he was suffering from what was essentially medically induced priapism. \n\nEven now, he gazed down between his legs, noticing that his cock was still rock-hard. Had the tab malfunctioned? Was he supposed to stay erect this long? What the Hell kind of sex were they having in the twenty-eighth century that a guy needed to stay hard for a day and a night? \n\nHe closed his eyes and pressed his head against his forearms, trying to figure out how it had all gone wrong - how the Hell was he supposed to know that there was a Vestal Virgin hiding in the damn house and masturbating? \n\nHe'd heard of Vestal Virgins, of course, but he knew nothing about them. He'd paid attention in History class only moderately more than he had in Physics. Seemingly, he'd done an incredibly bad thing. Like 'fucking a pastor's blind virgin daughter on the altar' kind of bad. As decadent as Rome might have been, you didn't mess with their Vestals. \n\nHe wished Becky was here. He hadn't seen her since he'd been dragged away from the villa, and he hoped she was okay. He had no idea if she was going to be in trouble or not, since she was supposed to be his owner. \n\nHe groaned and shook his head, wishing he'd just wake up and this was all a dream. \n\n\"Shut up in there!\" said one guard harshly as he walked by. \n\n\"Gonna make me, tough guy?\" Mark grumbled, once the chip in his head had translated what the guard said, even though he could've probably figured it out on his own. \n\nThe guard whirled around and stuck his arm through the bars, trying to hit Mark with the cudgel he was carrying. Mark hurriedly dodged out of the way and grabbed the club from the man's hand - the guard's eyes widened as Mark glared down at him, much taller than his would-be assailant. Mark was just over six feet, while the Roman was maybe five-three. \n\nThe man's gaze dropped to Mark's erection, which pointed at him angrily. \n\n\"Listen, pal,\" Mark growled, beyond caring about his hard-on at this point. \"Try that again, and I'll shove this club of yours so far up your ass that you'll have splinters in your tongue for a month. Got it?\" \n\nThe man nodded hastily, his face pale. \n\n\"Good,\" Mark grunted, shoving the cudgel bac through the bars at him. \"Now fuck off and leave me alone.\" \n\nThe guard hurried away while the crazy guy across from Mark cackled again and babbled incoherently at his retreating form. Mark slumped back down and continued moping. He'd been in this little crap-hole for the best part of a day now, without food or a chance to relieve himself, unless he chose to piss on the floor. He felt rather justified in sulking. Several minutes passed before he was interrupted once again. \n\n\"Well, you look pretty grumpy for someone who spent most of yesterday getting laid...\" chimed a sweet voice. \n\nMark's eyes flicked open and he stood up hastily, gawking at his Physics teacher, who stood outside his cell, smiling at him in amusement. \n\n\"Becks!\" he said hastily, wiping at himself as if he had clothes on, forgetting that he was naked. \"Hi! Uh... I'm glad you're okay!\" \n\n\"It's good to see you too, handsome,\" she replied, her eyes trailing down to his erection. She was wearing the elegant stola and accoutrements of a patrician woman now, much more modest than her attire just the day before. \"Guess your hormones haven't worn off yet, hm?\" \n\n\"Oh, he's got a mind of his own,\" Mark muttered, blushing slightly. \"Trust me, the lynch mob was quite a libidoectomy. Where've you been?\" \n\n\"Well, once you got carted off, I thought I'd better take a look into what was likely to happen to everyone involved,\" she stated, seemingly not that concerned. \"Roman litigation is a weird thing. They have trials, and you'll have a lawyer appointed to you, but the court of public opinion really counts as well, it seems.\" \n\n\"So, I really screwed up when I fucked one of their Vestal Virgins?\" Mark asked, trying not to sweat. \n\nBecky smiled. \"Mark, you had no way of knowing, because she never should have been there to begin with. Vestal Virgins don't, in theory, belong to their parents any more, after they're selected for the honour. For her to be hiding in a room in her parents' house jilling off is a huge breach of her vows already, never mind getting caught with you bruising her brainstem.\" \n\nMark thought about that for a moment. \"So ... Domitia's in trouble too?\" \n\n\"She's in even more trouble than you, to be honest,\" replied the teacher, shrugging. \"You, you're some shmuck slave who got lucky. Her, she broke Rome's most sacred vows. She might as well have squatted over and peed on the Sacred Flame they protect to extinguish it. Everyone associates the Vestals with the spiritual well-being of Rome itself. If one of the Virgins is impure, it's bad for Rome.\" \n\n\"Damn ...\" he said under his breath, frowning at the floor. \"Well, what about you? Are you in shit at all, because you're my owner?\" \n\n\"Well, not so far,\" Becky mused. \"I'm sure that can change at a moment's notice, if anything goes really wrong.\" \n\n\"Really wrong?\" Mark exclaimed, gesturing to the cell around him in exasperation. \"If this is only moderately wrong, I'd hate to see this really wrong you're going on about!\" \n\n\"Oh, don't be such a drama llama,\" she cooed, waving dismissively. \"We'll figure this out.\" \n\n\"Are you okay, Becks?\" he asked, making a wry face as he looked at her. \"Last time we were in trouble like this, you kinda She-Hulked out on everyone, remember? You kicked at least five people in the crotch, one of whom was Cardinal Richelieu.\" \n\n\"Yeah,\" she said almost wistfully. \"I think my system is flooded with hormones from those tabs, and they're making me pretty mellow. I'm still in love with you right now, for instance.\" \n\n\"Well, not to exploit your chemical imbalance here, but what are the chances of you doing something to make sure the man you're in love with doesn't die in this cell?\" Mark said rather insistently. \n\n\"Oh, you won't die in this cell,\" Becky pointed out. \"The Romans weren't big on imprisonment at this point in their history. They're probably either gonna behead you or crucify you.\" \n\n\"Becks!\" Mark said loudly, going pale and beginning to pale. \"You can't let them behead me, I like my head where it is!\" \n\n\"Yes, you are rather attached to it,\" she giggled. \"And don't worry about getting crucified, only I'm allowed to nail you, after all. And speaking of ...\" \n\nShe slinked forward, smiling saucily at him, lifting the hem of her long stola, revealing her wet pussy beneath. She turned around, presenting her shapely ass to him and swaying it back and forth while looking over her shoulder at him. \n\n\"How about you put that stout nail of yours in my tool box?\" she purred. \n\n\"Now?\" he exclaimed. \n\n\"Not like you have anything else to do at the moment, Mark,\" she pointed out, still wiggling at him. \"Move up to the bars and stick it out here...\" \n\nIgnoring his exasperation, Mark sighed and pressed himself up against the bards, his rigid cock sticking out the other side. Becky lined up her sticky pussy with the head and pushed herself back on it, sighing in bliss as she did. Mark trembled as he penetrated her, having to admit to himself that it felt good to be inside his teacher. \n\nBecky closed her eyes as began squirming back against him, sliding his hardness in and out of herself. Eighteen hours without sex had felt like eighteen years, no doubt due to the hormones from the tabs. She guessed that their bodies, new to these stimulants from the far future, were not acclimated to the effects just yet - not that she was complaining, mind. She groped and massaged her tits as they spilled out of the top of her stola, reveling in the feel of Mark's lovely cock splitting her wide and touching deep inside. \n\nShe stood up and pressed back against the bars, keeping his manhood firmly locked inside herself, wiggling and swaying, but also bringing his hands around to her breasts, which he now squeezed and massaged in circles, making her groan loudly. The bars kept them apart somewhat, but he was still deep inside her, and that was what counted. \n\nUntil she opened her eyes and saw the crazy guy in the cell across from them, looking at her with wild eyes, his tongue lolling out of his head, and jerking his filthy cock madly. \n\n\"I miss seeing your face, Mark,\" she decided, turning around suddenly and pressing close to him again. She made him hold the bars, steadying his throbbing member while she sidled forward, taking him inside her pussy again, sucking in her breath. She held onto the bars as well, squirming her hips. The bars were too closely spaced together to fit her legs through and wrap them around his hips, but he was still deep enough inside her to fuck her properly. \n\n\"Mmmmmm, baby ...\" \n\nIf any guards knew what was happening, they chose to not interfere or even be nearby. They left the wealthy patrician woman alone. Of all the places Mark had expected to fuck Becky during their temporal travels, this would have been one of the last, he had to admit. \n\nBecky pushed her lips against his, kissing him deeply and lovingly. Their tongues tangled as she fucked him, exhilarating in the feel of his hard shaft in her and knowing she was going to cum quickly, and hard. She broke the kiss and stared into his eyes, her own flashing with lust. \n\n\"You gonna cum in me, Mark?\" she breathed, grinding on him hard, biting her bottom lip. \"I want your cum in me, baby.\" \n\nHe nodded, breathing heavily. He'd practically forgotten about his predicament, lost in the delirium of fucking his teacher. He pumped his hips back and forth in time with her movements, her pussy tightening around him and getting wetter with every second. He felt his cock throbbing and swelling inside her. \n\n\"Yes, baby,\" she gasped, her skin flushed pink, her body trembling as she fought to hold on a few moments longer. \"Cum deep inside me, Mark ... oh God ...\" \n\nBecky clenched her teeth and arched her back as she pushed forward with her hips, straining hard - she felt Mark push against her as hard as he could, touching her cervix, and she shuddered and moaned loudly. The dam burst and he began cumming inside her, flooding her pussy with his desire. Becky shivered in pleasure, squeezing around him. \n\nThey both sighed as the orgasm finally passed, leaning forward and pressing their foreheads together. Her fingers knotted with his and she gave him a peck on the lips before smiling. \n\n\"Feel better?\" she asked. \n\n\"Oddly enough, yeah,\" he admitted, nodding. \"So what do we do now? I don't wanna die here, Becks.\" \n\n\"I know, don't worry, we'll figure it out,\" she replied, caressing his face with one hand while lowering the skirt of her stola with the other. \"I've just gotta find out some things.\" \n\n\"Can't we just bust me outta here and get out of Dodge?\" he asked, not sure what the delay was. \n\nShe gave him a quirky look. \"Are we just supposed to leave Domitia to her fate? It's your fault she's doomed to death, you know. And there's also the matter of Nanu and what to do with her. We can't just prance around the timeline and mess up things with peoples' lives, Mark. I know you do it because you want to get laid, but there's still real consequences. You're living one of them.\" \n\nHe sighed: \"Yeah, you're right. I'm just worried.\" \n\n\"I know you are, my love,\" she said gently, smiling warmly. \"Just let me see what I can find out. Hang tight and stay out of trouble, okay?\" \n\nShe kissed him again lovingly and whispered something in his ear before sauntering out. He watched her leave and then sat back down, trying to ignore the fact that his hard-on was now sticky, on top of everything else. Getting shot by Richelieu may be have been ultimately worse, but this predicament was certainly less convenient. Some hours passed, and his mood decidedly did not improve. \n\n\"Hello, my name is Faustus, and I am your legal representation during your trial,\" said a dull voice from beyond his cell. Mark's eyes drifted over to lay on a short, pudgy, balding man draped in a rather worn toga. He had some scrolls in a satchel he wore over his shoulder. He assessed Mark somewhat disinterestedly. \"You are the slave Bonosus, yes?\" \n\nMark nodded. \n\n\"And you are aware of the charges against you?\" \n\n\"Yyyyyyyup, I unknowingly boned a Vestal Virgin,\" Mark sighed, standing up, figuring he probably shouldn't be showing anyone any disrespect at this point. \"What can I do for you, sir?\" \n\n\"Well, ignorance of the law is not likely to work as a defence in this particular instance, given the charge,\" Faustus said, tapping his satchel with his fingers. \"Normally it might mitigate charges, but not where the Virgins are involved. At this point, I'm trying to spare you a cruel and painful death.\" \n\n\"Swell,\" Mark said, his voice laden with apathy. \"So, like, beheading instead of crucifixion sort of thing?\" \n\n\"Unless crucifixion is your preference, for some strange reason,\" replied the lawyer. \"There is also the matter of your fee for my services in defending you?\" \n\nMark frowned: \"I'm a slave, what am I supposed to be able to give you? Shouldn't you be talking to my owner, the Lady Aurora?\" \n\n\"The lady is proving difficult to contact, what with the entire city being in an uproar about you and all,\" Faustus reasoned, shrugging. \"It may be up to you to see that my fees are met.\" \n\n\"I don't have anything!\" Mark protested somewhat angrily. \n\nFaustus trailed his gaze down Mark's well-built body, finally fixating on his erect cock and smiling lewdly. \"Oh, I wouldn't say that ...\" \n\nMark groaned and thunked his head against the iron bar that prevented his escape. He was wrong. This was worse than getting killed by Richelieu's men. \n\n*** \n\nMark now found himself going through downtown Rome, but once again spending little time looking at the city - he was being hauled inside a cage on wheels along the Via Aurelia, with untold thousands of people lining the road, shouting, screaming and hissing at him. Rotten vegetables and rock-hard bread pelted his mobile prison, most of the projectiles not getting through to touch him. Mark didn't care. He stared out dully at the cacophony and churning masses of humanity, fully aware that his erect dick was pointing at them. \n\nHe looked at the famed Palatine Hill and saw a large, rotund temple there, along with a vast manor. Outside the manor, standing on those distant steps, he saw many women dressed as Domitia had been, with their hair worn in the same style, staring down at him impassively. He almost laughed bitterly, knowing exactly who they are. No young person, ever, understood better than Mark now how important it was to pay attention to your studies. After all, it was about to cost him his head. \n\nHis eyes widened when he saw Domitia dragged out the front doors of the manor by several servants and forced to look down at him. She seemed none the worse for wear, except for looking rather distraught and haggard. He saw, but could not hear her cry out at the sight of him, before being yanked back inside roughly, resisting the whole way. \n\nHis lawyer, Faustus, had informed him that he'd be tried in a public court, his sentence determined there as well. If all went well, he wouldn't be made to wait long before his sentence was carried out. The waiting was the worst part, the lawyer assured him. \n\nThe procession took forever, at least in his estimation. He was covered in tomato pulp and seeds, and bits of lettuce and other debris were sticking to him. \n\n\"Will they at least allow me to bathe or clean up before my trial?\" he'd complained to Faustus. He stank and he didn't like it. The lawyer said he'd see what he could do. On and on, his mobile prison rumbled slowly. \n\nThey entered a crowded forum, surrounded by the white buildings Rome was renowned for. He saw several landmarks, but barely noted them. The presence of soldiers became heavier now, guarding against disturbances from the famously fickle and moody population of the city. They arrived at the courthouse, and he was hauled out of his cage by the chains his wrists were bound in. He ignored the cries and vitriol of the crowd, who had stopped throwing things, for fear of hitting a soldier or important person. At least there was that. \n\nHe was brought into a small anteroom, where a pool sat in the center. He was unchained and shoved into it, allowed to bathe. Several Roman legionaries stood over him, one holding a whip in case Mark dawdled for any reason. Careful not to anger them, Mark cleaned himself diligently, but also as quickly as possible. When he got out of the pool, they dressed him in a plain but fresh tunic made of low-grade linen. There was one rather prominent problem, however, and the commander of the squad guarding him looked at Mark's crotch and scowled. "
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "humour",
        "sci-fi",
        "time travel",
        "orgy",
        "alcohol",
        "slavery",
        "multiple sex partners",
        "future tech",
        "music",
        "violence"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/time-rider-ch-05"
}