{
    "title": "Double Dog",
    "pages": [
        "Part 1:\n\nIt was bound to happen.\n\nAfter all, when a company tries to run as \"lean\" as ours does, all in an effort to save a couple bucks (by my estimation, literally about.03% of our overall travel budget) it's Murphy's Law that something wrong is going to end up happening.\n\nMy name is Tyson Behrend and I work in the trade show business. I go from city to city setting up, breaking down, and working in trade show booths for a variety of different industries. If I were to describe my job it would be somewhere between spokesmodel and union grunt.\n\nWhile most of what the viewing public sees looks like a finely tuned machine, I can assure you it is anything but. While there were regular issues with customer facing solutions not functioning properly or not even showing up at the event, there were also things that affected me more personally; lost luggage, incorrect hotel room reservations, declined corporate cards, etc.\n\nThis is not to say that I don't enjoy my job as I actually love it. Legitimately, I am a person who seriously enjoys all the details of what I actually do for work. I enjoy getting my hands dirty when the physical work happens, I love the professorial aspect of the presentation portion of my job, I can't get enough of meeting and interacting with new people at every different location. But, it would be nice if I didn't have to worry about all the stupid crap.\n\nMy travel partner is Stacy Carruthers. We've been working together for about two-and-a-half years now and make a great team. It helps that we are both in the same demographics for just about everything. Same age, ex-athletes, good looking, adventure loving, etcetera. Both of our sets of parents have wondered how we haven't become a couple with how close our jobs require us to be and, honestly, we have joked about how we ourselves are surprised at the same thing. But, we haven't ever moved past anything outside of being platonic friends.\n\nIt isn't to say that we haven't had what would be considered by many to be \"relationship like\" interactions with one another. We dined together constantly, exercised as partners regularly and allowed each other to vent when necessary. Plus, based on how cheap our company was when it came to our travel, we had shared a hotel room on more than one occasion and even had come to keeping an extra set of underwear in one another's luggage based on the number of times one of our bags came in late. We had been in tight physical spaces on multiple occasions and have seen each other in underwear more than a handful of times due to the job and the travel snafus. We have just never had any sort of physical relationship. If it wasn't for how easy going both of us tended to be and how much we enjoyed the work, the BS could have been a problem.\n\nAnyhow, it was May and we found ourselves on the southern, Atlantic coast of Florida. The good news is that we were in Miami. The bad news was just about everything else.\n\nFirst, no luggage. Second, no hotel. Third, no conference. Fourth, stuck.\n\n\"Basically, it's an off-season hurricane,\" our travel agent told us. \"Blame meteorologists, blame global warming, blame whatever or whoever you want. Nobody saw this coming and so now plans are gonna' have to change.\"\n\nWe were standing in the lobby a hotel that we had confirmed reservations for, a decent place in Sunny Isles, just north of Miami Beach. The problem was that they did not have the confirmation we were holding in our hands. It wasn't something completely abnormal and a call to the home office usually did the trick.\n\n\"Unfortunately, everything is getting locked down. The conference is cancelled, the airports are shut down, car rentals have been suspended. Basically, like everybody else, you are stuck.\"\n\n\"Stuck where? Can you at least get us rooms? How long are we going to be here? We have no clothes.\"\n\n\"Rooms? No. Room? Yes. Because everything is shut down it means that last nights guests didn't get to leave. But, the good news is we got someone on the phone and they confirmed a room in the hotel that you are currently at. As far as how long you are going to be there? Well, you were originally booked for 5 days. The airports are shut down for a minimum of 2 days and will be incredibly backed up after then. We'll see what we can do but suspect you will be there the entire time. As far as clothing? The company has allowed $120 each to go grab some items. It isn't much but I hope it helps.\"\n\nWe were on speakerphone and both Stacy and the hotel front desk person had incredulous looks on their faces. I know that others would have blown out of frustration but I kept calm as I knew it wasn't the travel agents fault. Afterall, they were just doing their job. Plus, it appeared that we were getting a free vacation... even if that vacation was going to be on lock-down in a hurricane.\n\nAfter handing us our keys the front desk person handed us a couple of robes and sets of slippers.\n\n\"Normally reserved for suites,\" she said. \"But I think you could use them.\"\n\nOur room was very different from what we were used to in that we were on a high floor with an incredible, ocean view. It must have been the only room available as our company never would have sprung for something like it. It was slightly larger than a \"normal\" hotel room that we would usually get however we were limited in that there was only a single, large king.\n\n\"I call side by the bathroom,\" Stacy said as she dropped her backpack and purse on the floor and strolled over to the window.\n\nIt was fantastic working with someone so laid back about everything.\n\nThe sky was already dark and we could see dark clouds rolling in.\n\n\"This is both really cool and kinda' scary at the same time,\" Stacy commented, never turning from the view.\n\n\"I hear ya',\" I responded as I stepped up next to her. I honestly had never seen the sky like that before.\n\n\"Do you think we will be safe up here? Would it be better if we were on a lower floor?\"\n\n\"I have no idea. I would assume it's fine since they let us come up. I'm gonna' hop in the shower quick if that's okay. I wouldn't mind washing the travel off.\"\n\n\"No problem. I'll go after you.\"\n\n------------------------------------------\n\nIt was a few hours later when I woke up. We had been lounging on the bed after both getting cleaned up, taking advantage of the robes and a rare day off.\n\n\"Wakey, wakey,\" Stacy said in a sing-song voice when she noticed me stirring. \"I'm getting hungry, want to get some dinner?\"\n\nI sat up in bed and, in doing so, noticed that my robe had opened during my nap. My dick fully exposed.\n\n\"Oh, shit,\" I said out loud, only calling more attention to the situation, as I pulled the robe closed. \"Sorry about that.\"\n\n\"It actually worked out well,\" Stacy responded with a sly grin. \"The movie wasn't very good so at least I got a good show out of it. You must have been having an, uhm, pretty good dream... if you catch my drift.\"\n\nI felt my face turned bright red. There would be zero chance of getting an erection at that point as all the blood in my body had seemingly rushed to my cheeks and ears.\n\n\"You need to clean up that forest down there, dude.\"\n\nStacy and I had conversed on the subject before. Honestly, there really weren't any topics that hadn't been broached during our time together.\n\n\"I thought you said hair is back in,\" I responded, thankful that she was taking yet another bump in the road in stride.\n\n\"Hair, yes. Jungle, no. Trimming ain't just for women, my man.\"\n\n\"Well, I shall take your suggestion under consideration. Now, what's for dinner?\"\n\n-------------------------------------------\n\nI woke up sweating.\n\nThe room was pretty dark and I was unable to get a visual of the time from the in-room clock. Searching around, I found my phone, plugged in but not charging. The power had gone out. I remembered that Stacy and I had both fallen asleep on top of the covers after a room service dinner of burgers, salad and beer and could hear her soft breathing on the bed beside me. My phone had enough charge left in it that I knew that it was almost 6am. More than the time, I was concerned about the temperature as it felt like it had to have been in the upper 80's in the room. Hot and sticky, it was no wonder I was sweating.\n\nI stepped to the window and pulled the curtain open just enough to find a storm raging outside. Honestly, it looked pretty bad. I was curious as to how what looked like pretty strong winds had not woken either of us up.\n\nI turned to survey the land in our room and found Stacy in what I can only assume was a similar position to mine the day before: sprawled on the bed, the lower portion of her robe thrown open, a patch of longer-than-expected pubic hair at the union of her legs. I made a mental note that I would have to rib her about it when she woke up.\n\nIt was so freaking hot.\n\nI walked to the bathroom and, as quietly as possible, ran some cold water in the sink to splash on my face. Not quiet enough it seemed.\n\n\"What time is it,\" a groggy Stacy said as she made her way into the bathroom.\n\n\"Just before 6,\" I responded, leaning back against the vanity.\n\n\"Too early.\"\n\nShe had pulled her robe together but, in the soft glow of the wall-mounted nightlight, I could see her pull it open and up around her waist before sitting down on the toilet seat. A steady deluge almost immediately rang off of the porcelain below her.\n\n\"You don't want any privacy?\" I asked with a chuckle.\n\n\"Too early to care. Besides, we're joined at the hip for the next 5 days, most likely stuck in this room. So, news flash, I am going to have to go to the bathroom and I'm not going to try and hide it.\"\n\n\"Good point.\"\n\nI made my way back to the window outside and again peeked my head through the curtains. It wasn't long after the toilet flush that Stacy joined me, basically cuddling up into my arm in order to get a full view.\n\n\"Wow,\" she whispered. \"It looks really bad out there. I can't believe that it didn't wake us up.\"\n\n\"Well, not directly,\" I countered. \"But the power is out and we have no AC. I woke up because I was sweating so much.\"\n\n\"I'm going back to sleep.\"\n\nIt was the only response I got before she shimmied herself away from me and I heard her plop onto the mattress behind us. With nothing else to do, she was right, and I made my way to my side of the bed.\n\n-----------------------------------------------\n\nIt was past 9am when we were awakened by the room phone ringing. It was the front desk asking if everything was okay in the room, apologizing for the lack of AC and asking if there was anything they could do for us.\n\n\"A couple more robes would be appreciated,\" I responded. \"And how can we get some food?\"\n\nWhen the call was over I opened the curtains and flooded the room with a dull grey light. The storm raged on outside.\n\nStacy opened her eyes. It was well past the hour that she would normally be getting up so I wasn't worried that I was breaking her out of any deep slumber.\n\n\"So,\" she asked in a flat, less than amused tone, \"got any plans for the day?\"\n\nI told her that we would be able to go down to the front desk to get clean robes, something that we could basically do each day. I also told her that, because the hotel was now working with extremely limited staff, there would be no more room service, at least for the day. All meals would be served buffet style in the main restaurant downstairs.\n\n\"Quite honestly,\" I added at the end of my explanation. \"I was thinking about just going down in my robe. Do you think anyone would care?\"\n\n\"Meh. Fuck 'em if they do. Count me in.\"\n\n--------------------------------------------\n\nWe had been in the dining room for a bit, taking our time with a long, extended breakfast, when Stacy started whispering to get my attention.\n\n\"Psst. Psst. That guy over here has been staring at me. I think he is trying to see if I have anything under my robe.\"\n\nI did my best to scan the room in an unassuming manner knowing that if I was obvious about visually calling out her voyeur, they would very likely give up the act. Indeed, there was an older gentleman, probably in his early 60's, periodically but obviously taking extended glances in our direction. One might have assumed it was because we were in robes to begin with but, when we got to the dining room, I was pleasantly surprised to find a number of the guests in what would be considered \"less than normal\" wear. There were a few more in robes, some in obvious pajamas, others in obviously mismatched pairings like dress shirts and gym shorts. While I couldn't believe that everyone in the hotel had been subject to lost luggage like our own, it was apparent that others in the hotel were at least taking getting held hostage by the weather in stride. The hotel, for its part, was trying to ease the stress of the guests as well and was offering free champagne and mimosas to those of age, something that Stacy and I were absolutely taking advantage of.\n\n\"You're right. Though you shouldn't be so full of yourself to think he is staring at you. I mean, I am quite the hunk of beefcake, afterall.\"\n\n\"Oh, lord, get over yourself. Not only have I caught him staring directly at me, but nobody would want to see you. Certainly not with that jungle bush.\"\n\n\"Do I hear the pot calling the kettle black? I should have you know that when I woke up this morning I found you with your robe spread open. You aren't exactly sporting a minimalist zen buddist garden down there yourself.\"\n\nStacy released an audible guffaw and paired it with a shocked-but-excited look on her face. Pulling her robe close to her chest in an obviously sarcastic display of propriety.\n\n\"What? You've seen me? How dare you?!\" Her tone was a hushed facetious scolding. \"My honor!\"\n\nI caught her admirer out of the corner of my eye, he was staring with a lack of abandon. It was obvious our antics had caught his attention. It was also obvious the champagne had gotten to us.\n\n\"I dare you to flash him,\" I whispered.\n\n\"Serious?\"\n\n\"Yeah, give the old guy a thrill.\"\n\n\"I mean, how?\"\n\n\"I don't know, make it somehow discreet or accidental. Open up your legs when you get up. The rope will probably fall to the side by itself.\"\n\nStacy's eyes darted to the man looking at her. I could see his eyes immediately drop but, when she looked back to me, her own face was full of excitement.\n\n\"If I do this, you are going to owe me. Do you really want to start this game?\"\n\n\"Double dog,\" I responded with a smile.\n\n----------------------------------------------------------\n\nWhile I didn't see any sort of exposure myself, I was confident in the knowledge that Stacy completed her challenge when I watched in real time the man's eyes go wide and a look of worried panic spread across his face as if he didn't know what he was supposed to do next.\n\nWe walked casually out of the restaurant and to the lobby but, when we got to the elevator doors, Stacy practically ripped my arm out of its socket as she pulled me into her, so excited about her successful completion of the challenge.\n\n\"Did you see his eyes?!\"\n\n\"You should be ashamed of yourself,\" I said in a dry tone, \"you could have given him a heart attack.\"\n\n\"Me?! You were the one who dared me! It's your fault!\"\n\n\"You know I'm just kidding. You're a beautiful woman, it probably made his week.\"\n\nStacy was still hanging on to my arm but pulled herself up and kissed me on the cheek. It was most certainly something she had never done before and not the least bit unwelcome.\n\n\"That was fun,\" she said. \"Maybe I have a bit of an exhibitionist streak in me.\"\n\n\"Could be good for continuing a game of truth or dare,\" I responded.\n\n\"Hang on there, buddy. It's my turn. I just have to think of something for you to do.\"\n\n\"Okay, I can appreciate that. Please just remember that society is usually quite a bit more lenient when it comes to female nudity than it is with male. I don't think it would benefit either one of us for me to get pepper-sprayed and arrested.\"\n\n\"Don't you worry.\" She gave my arm another squeeze, holding it tight to her chest. I could feel her heart racing.\n\n---------------------------------------------------------\n\nWe got back to the room and Stacy threw the curtains open. The storm was raging outside. She stood there for a moment, just taking in the sight.\n\n\"Crazy out there,\" she loudly whispered.\n\n\"Yeah,\" I stood next to her in my reply.\n\n\"Were you serious about what you said down there?\"\n\n\"Uhm, what did I say?\"\n\n\"That I'm a beautiful woman?\"\n\nI was not necessarily sure where this was coming from. Of course I thought she was beautiful. Stacy knew she was beautiful. She knew that I knew she was beautiful. She knew that other people knew she was beautiful. There was nothing really subjective about it. Objectively, she was beautiful.\n\n\"Well, of course I meant it. You are a beautiful woman.\"\n\n\"I appreciate hearing it. I get hung up on insecurities sometimes, you know?\"\n\n\"I guess. Most people have some. To the outsider looking in though, it just doesn't make sense. Yes, you are beautiful. And, from someone who I believe knows you pretty well, you are a wonderful person too.\"\n\n\"You're sweet,\" she responded and stepped into me for a hug. \"Sorry about the emotion, from someone who has been with me drinking before you know my mood changes, this is sometimes just how it happens.\"\n\n\"Hey, a day in the life. Now I know who I can open up to when my time comes.\"\n\n\"Yeah, right, you big oaf. Like you even have any feelings.\"\n\nThere was a knock at the door and I went to answer it, finding a housekeeping rep who, though would not be making beds or doing any cleaning, was handing out additional soaps and shampoos. I dropped them off in the bathroom and took a moment to check myself out.\n\nSix foot tall, right on the nose. 178lbs. Relatively lean. 28 years old. Dark brown hair, somewhat wavy. Dark, dark brown eyes, almost black. Square jaw. I chuckled to myself. Admittedly, there was very little \"wrong\" with me.\n\nBut, insecurities, ya' know?\n\nI pulled my robe open and looked at my torso. For the last 10 years I had had body hair just creeping up. In high school it was a simple \"happy trail.\" A decade later it was a hairy stomach and chest that made an awkward \"T\" shape on my body. I couldn't stand it. I had tried grooming but found myself to be just a bit too lazy to keep up with it. It wasn't like I had a problem with the hair either, it was just the strangeness of the look of it on me.\n\n\"Checking yourself out?\"\n\nStacy's voice shocked me and I yanked my robe shut.\n\n\"Aww, I don't get to check you out too?\"\n\n\"Really?\"\n\n\"Yeah, really. You're an appealing guy, Tyson.\"\n\nI hesitated on the thought for a second. While it isn't like I am self conscious, it still is nerve wracking to literally physically expose yourself to someone. The high from the champagne wore off quickly.\n\nI opened my robe, slowly, but obviously enough to try and prove that I wasn't self conscious about the situation. Internally I could feel my heart race. I could only imagine that my dick was shriveling up into itself, not exactly the impression I wanted to give. But, c'est la vie.\n\nStacy, for her part, was the best judge one could ask for.\n\n\"Not bad at all,\" she said, nodding her head in approval. \"You must work out.\"\n\nIt was a joke that we had between us, something we mentioned any time either of us saw an attractive or fit person. A nod to the old movie, \"Dumb and Dumber.\"\n\n\"Not so bad yourself,\" I responded. \"Except that jungle bush of yours.\"\n\nStacy slapped me on the arm. \"That's it! That's the dare! I dare you to let me groom you!\"\n\nI felt my face fall flat.\n\n\"No. Not going to happen.\"\n\n\"What?! You have to! I did your dare!\"\n\n\"Stacy! What are you even going to do it with? A steak knife? Do you even have scissors? Clippers? A razor? We have no luggage, remember? Stores aren't open.\"",
        "\"That's my problem, not yours. But, I promise they will be legitimate grooming products. Deal?\"\n\nThere was no point in not agreeing. One of the reasons that Stacy was hired for her job were her persuasive abilities and she was very, very good at her job. She would pester me till I gave in.\n\n\"Uhhhhhhgggggg.\"\n\nIt was the only fitting way I could figure to respond. Stacy could only squeal with delight, her eyes positively the largest I have ever seen them.\n\n------------------------------------------------\n\nWe had been sitting around the room for some time, watching the storm outside, bouncing through random topics, just trying to stave off boredom. The news said that the storm would be finishing within a few hours, by dinnertime, and it was also suggested that the area could be back to normal by the morning. Similar to a blizzard in Syracuse, Miami knew how to handle tropical storms.\n\nOne thing that couldn't be handled was my robe. I am not sure if it was because I am just not a \"robe person\" or maybe it was because the robes were a surprisingly heavy terry cloth instead of a thinner cotton I would have expected in the climate. All I knew was that having it constantly brushing up against my bare flesh was annoying to the point of making my skin a bit sore.\n\nI got up and paced a bit, something not uncommon for either of us, as we were more accustomed to moving around and being active. I went into the bathroom and, after splashing some water on my face to wake myself up a bit, pulled the robe off the top half of my body and let it hang down, held up only by the waist tie.\n\n\"That's better,\" I sighed out loud.\n\n\"What?\" Her voice floated in from the other room almost immediately. I knew that she was bored but, more than that, I knew that she couldn't stand to not know what was going on.\n\nI walked out and showed her my latest fashion, explaining why. She had an oddly apprehensive look on her face.\n\n\"What's up?\"\n\n\"Would it be completely weird if I did the same thing? My nipples and ass are practically raw from this material.\"\n\n\"I mean, it isn't like I mind,\" I responded truthfully. \"If I am being honest, the only reason I didn't take off the entire thing is because of you.\"\n\n\"Okay, so, I've already seen you and, based on what you told me this morning, you've already seen a bit of me. Can we just do this? It would be so much better if I could get out of this thing.\"\n\nWhile I suppose there should have been thoughts of plutonic chivalry in my head, just helping out a friend in need, I admit the first thing that came to my mind was the exciting prospect of seeing Stacy nude. I knew she had a fantastic body, I just had never seen it fully uncovered and, afterall, I am a guy... a guy that enjoys looking at fantastic, nude women.\n\n\"So, we're just going to hang out? Nude?\"\n\nI wasn't sure how to phrase or emphasize the question. I didn't want to offend her either way, one by insinuating that we couldn't be nude together and not get physical, the other being that I somehow was repulsed by the idea of something physical happening between us... or her just being nude around me.\n\n\"Uhm... yes?\"\n\nShe hadn't thought out her plan too much either.\n\nI smiled, cocked my eye, and undid the tie of my robe, letting it fall to the floor.\n\nStacy had been sitting on the loveseat, which we had rearranged in the room by pulling it away from the wall so it was facing directly toward the window. As soon as my robe hit the floor she popped up and did the same. We stood there for a second, goofy grins on our faces, just standing there, on opposite sides of the room, nude.\n\n\"So, can we just get the awkward part out of the way?\"\n\n\"That wasn't it?\"\n\n\"Only part of it,\" she responded, walking toward me. \"I suggest we also take a moment to check each other out. Obviously and in the open, instead of trying to sneak looks later.\"\n\n\"You're serious?\"\n\n\"Yeah. Why? Does that just make it even more weird?\"\n\n\"No, it's probably one of the most sensible things I have ever heard,\" I said with a laugh.\n\nShe stood directly in front of me, lifted her arms, and slowly turned around. As suspected, her body was confirmed to be incredible. Of course, there was not much of her that I hadn't already seen considering the number of times we had been in front of one another in our underwear. But, technicalities or not, nude - for the first time - is vastly different than in underwear.\n\nShe was a runner in college, and her long lean legs were lythe and defined, betraying how much shorter than me she was overall. Her pubic hair, though longer than I had expected prior to this trip, looked silky and smooth. Her stomach was tight and covered with a fine layer of peach fuzz. Her breasts were surprising in how there was absolutely no sag to them, a larger than expected bit over a handful, capped with centered, almost imperceptible in color variation areola and nipples. Finally, as she completed her pirouette, a delightfully firm ass, just waiting to have quarters bounced off of it. The rest of her I already knew about and probably could have recited from memory: Long, blonde hair, grey/green eyes, high cheekbones, lovely lips that always had a natural flush to them.\n\nI did my turn as well, slowly, dramatically. Hey, it was old news to me, she had already seen me nude.\n\n\"Thoughts?\" We were facing each other again and she wasn't going to wait for an assessment.\n\n\"You have a fantastic body, Stace.\"\n\n\"That's it? C'mon, man. Give me some details!\"\n\n\"Okay, fine. I don't know why you bother wearing a bra,\" I expounded. \"Your tits look no different than when you have one on. Like, they haven't dropped a millimeter.\"\n\n\"It's because of these bad boys,\" she responded, pointing to her nipples. \"They are so freaking sensitive. Guys are incredulous when I tell them it isn't fun being aroused all day. Bras are basically just a safety cover.\"\n\n\"Note taken.\"\n\n\"Anything else?\"\n\n\"Without sounding too much like a creep, your bush looks really soft. Like, really soft.\"\n\nStacy silently ran her fingers through her pubic hair, though she wasn't looking at me, I could see she had a smile on her face though, in an instant, it changed. She looked up to me with the inquisitive face of a child.\n\n\"May I?\" She asked me the question as if I had a clue as to what she was talking about.\n\n\"May you what?\"\n\nThere was no verbal response to my question, rather only a physical one; Stacy, with a single hand still grazing its fingers through her own pubic hair, reached with her opposite hand and wove her fingers into my own.\n\n\"Oh, yeah. Well, mine is definitely softer than yours. Do you condition?\"\n\nI didn't answer. I couldn't answer. I was a deer in headlights for a heartbeat and a half, a marble statue at the museum.\n\n\"Ty?\"\n\n\"Uhm... I mean, I have... but not on a regular basis. Usually just wash with hand soap.\"\n\n\"Sheesh, boys. I swear you are all hopeless.\"\n\nStacy stepped away from me and looked around the room. It was obvious that the ice had been broken, we now had to figure out our next steps.\n\n\"We might not have fully thought this through,\" she said in what seemed obviously a new topic of conversation, \"I really am not sure we want to be sitting on hotel furniture without any pants on.\"\n\nShe had a point. I mean, my first thought of sitting on a hotel couch with my bare ass would be how many other bare asses, not my own, had already been on it. I grabbed my robe and bolted out the door. Afterall, it wasn't my first time in a hotel and I had a few secrets to leverage.\n\nWithin minutes, I was back in our room and Stacy and I were covering pretty much everything with clean, white bed sheets. The resulting image was somewhere between an abandoned house and a photo studio. Though, whatever you wanted to call it, it worked for us. Stacy immediately plopped herself back down on the loveseat.\n\n\"It's too bad we don't have a deck of cards or something. You know, something to do.\"\n\n\"Yeah,\" I replied as I joined her on the couch. She had been lounging lengthwise across it but I lifted her legs and settled myself underneath them. \"But, if you think about it, strip poker wouldn't take very long at this stage.\"\n\n\"All the fun games, already off the table, another thing we just didn't think through.\"\n\nI found myself casually stroking her legs, lazily dragging my fingertips up and down the soft, smooth skin. The reaction was obvious.\n\n\"Oh, my god! Cut it out. You're giving me goosebumps!\" Stacy swatted at my hands and I could see her skin stand on edge. Of course, the mood was playful so I continued what I was doing, eliciting playful squeals of delight from Stacy as her body reacted with shivers and very stiff nipples.\n\n...and there was a knock at the door.\n\nStacy shrunk into the couch as low as she could get, seemingly forgetting the fact that there was still a locked door between us as the visitor, her smile replaced by a look of surprised embarrassment. I was more confused.\n\nI hopped off the couch and put my robe back on, tossing Stacy hers to do the same. Opening the door I was surprised to find a hotel porter, with a bottle of wine and some glasses.\n\n\"It was supposed to be delivered last night; however, with the storm, we were understaffed to do so. We do hope that you can still enjoy it.\"\n\n\"Who is it from?\"\n\n\"The hotel, apparently. There was a note on your account about your reservation being incorrect, I guess. Do you not want it?\"\n\n\"No! Not the case at all, thank you! It is just unexpected.\"\n\nI apologized for my inability to offer a tip and took the wine, showing it off from across the room to Stacy, who had poked her head up over the back of the couch... the gray sky behind her still swirling menacingly.\n\n\"Time for a drink?\"\n\n------------------------------------------------------------\n\nThe events of the evening seemed to follow a natural progression which, in hindsight, we couldn't be surprised about. After all, the circumstances just lent themselves to the eventual conclusion. The only thing surprising about the entire situation was how quickly, after previously claiming a disdain for it, I developed a taste for red wine.\n\n-----------------------------------------------------------\n\nI had barely taken a couple of steps forward with the wine before Stacy popped off the couch and walked toward me, leaving her robe on the floor in the wake behind her. Approaching me, she didn't reach for the wine either, instead focusing on the waist tie of my robe.\n\n\"You're overdressed,\" she said as she pulled my robe open and in-no-subtle-fashion indicated her preference for me to be nude.\n\nI poured us a couple of glasses of wine, a cabernet that I assumed was on the lower end of store pricing but was surprised that, after toasting glasses with Stacy and taking a sip, I was not repulsed by the taste. I suppose the look on my face gave me away.\n\n\"Surprised you can drink this?\"\n\nShe knew that I normally didn't.\n\n\"Normally can't stand it. This is pretty good though. Who knows, maybe I am finally growing up.\"\n\n\"I developed a taste for it during my summer backpacking in Italy. No sulfites there means no hangover. It was fantastic.\"\n\nShe took my hand unoccupied by the wine glass and pulled me behind her back to the loveseat. First having me sit and then repositioning herself with her legs across my lap, same as previously. She then took my free hand and put it back on her thigh.\n\n\"Keep rubbing, it felt nice.\"\n\nShe was most certainly direct.\n\nWe made small talk for a while. Much about work, much about our personal lives. Admittedly, there was little we didn't already know about each other as we spent just so much time in shared company. We had met each other's families, we had met each other's significant others (back when we had them), there were no topics that were off limits.\n\n\"Refill?\"\n\nI had finished my own wine and saw that she was very low on hers. As the glasses I was pouring were rather generous I could see that the bottle was now gone.\n\nEasy come, easy go.\n\nThe second glass went down quickly and, with the lack of food in my stomach, I could feel myself getting a bit lightheaded. At significantly less weight than me, I could only imagine what was happening with Stacy.\n\n\"Hey, you want a massage?\"\n\n\"I mean, the wine has got me pretty relaxed but, I am not going to turn down an offer,\" I responded. \"You sure?\"\n\n\"Sure. I'm feeling a little antsy. Just feel like moving around a bit.\"\n\n\"You had me at massage.\"\n\n\"Okay, get on the bed. Belly down.\"\n\nI did as I was told and Stacy went to the bathroom, exiting with 3 or 4 small bottles.\n\n\"Lotion and conditioner are going to have to do,\" she said\n\nShe started on my side, rubbing each of my legs, more just for the sensation of touch as opposed to any sort of deep tissue invigoration. That said, it felt really nice. Her hands were soft though her movement and grip firm. She worked through my feet, my arms, my hands and then, finally, straddled me to get my shoulders. Though I attempted to ignore it, I felt the heat of her sex very distinctly, radiating into my lower back.\n\nShe worked wonders, relaxing me even more than the wine.\n\n\"Turn over,\" she said, patting me on the butt.\n\nIn my haze, I didn't give two thoughts about it and flipped onto my back. Stacy immediately re-straddled me and put her hands on my chest.\n\n\"How am I doing?\"\n\n\"Fantastic,\" I replied contentedly. \"How did I not know about these skills before?\"\n\n\"Never came up, I suppose. Don't get too comfy, buddy. This ain't no one-way street. You owe me.\"\n\nHer massage of my front was quick, she worked my pecs a bit and my neck, a little bit on my quads, nothing too extreme, nothing that pushed any boundary. And, while I felt myself grow a bit chubby at points, she never made mention of it, rather just continued on her way.\n\n\"Time's up. My turn, moocher.\"\n\n\"How am I a moocher?\" It took me a bit to get off the bed, I was so relaxed, \"I mean, you were the one who offered.\"\n\n\"Means to an end,\" Stacy responded, getting down on her belly in the middle of the bed. \"I really just wanted a massage myself. It seemed rude to just demand one.\"\n\n\"Well, let me compliment you on a job well done then, especially considering you never wanted to administer one to begin with.\"\n\nI started at her feet and made my way up her legs. My decision not to utilize any lotion turned out to be the right one as her skin was soft and smooth. At the tops of her legs, I got daringly close to her sex, something she seemingly was unopposed to based on her lack of negative response. Of course, the visual stimulation for me was clear and obvious, with Stacy's asshole and groomed pussy on display the entire time. I wish I could say her most intimate parts remained safe from my visual assault but that would be a straight-out lie. I stared at and was mesmerized by the beautiful sight of her unobstructed mysteries and the thoughts of their touch and taste had an obvious physical effect on me as well.\n\nFrom the tops of her legs I adopted her strategy and straddled her back, starting with her neck and shoulders and working my way down from there. While I had previously taken her little moans and squirms as indicators of a job well done I was rewarded with a compliment while finishing up her back side, gently working the top of her ass.\n\n\"Holy shit, that feels incredible. I might not let you stop.\"\n\n\"Too late, sweety,\" I responded, giving a cheek a playful pat. \"Time to turn over.\"\n\n30 seconds prior to my statement I had questioned how to handle her turning over. I mean I couldn't have her just laying on her stomach forever. But, the problem was, I had an erection. A major one. It had started going down when I was at her shoulders, but once I touched her ass it was straight back to vertical. I decided to just go with it.\n\nI had knelt to her side when Stacy got on all fours, stretching out her back a bit like a cat, getting right again before laying down. Of course when she looked at me she noticed my circumstance.\n\n\"Somebody came back to life,\" she said with a smile.\n\nThe only thing that surprised me with the situation was her reaching over and gently grasping my length.\n\n\"This is what you were sporting yesterday when you fell asleep. Good to know that I can at least compete with a dream.\"\n\nI settled myself at the head of the bed and indicated for Stacy that she should sit back into me.\n\n\"Aren't I going to hurt you?\" She had let go but was obviously referring to my cock.\n\n\"I'll let you know,\" I responded truthfully. \"But I think I'll be okay.\"\n\nStacy leaned back into me, my dick nestled between her shoulder blades.\n\n\"It's warm,\" she giggled, shaking her shoulders ever so slightly and charging me up a bit from the stimulation.\n\n\"Quit it, you,\" I replied. \"Let me get back into this.\"\n\nIt was a technique I had used in the past. While the position did not allow for the firm pressure that would be used in a therapeutic massage, it was perfect for where I envisioned us going.\n\nAll of my touch was gentle. Gentle on her neck, gentle on her stomach, gentle as I dragged my palms up around her pert breasts.\n\nStacy cooed.\n\nI took some time gently rubbing each soft mammary, the beauty of two hands being that both could be addressed at the same time. Though, not to be too singularly focused, I also used my considerable size advantage over her to stretch my reach from her breasts down her chest, her stomach, weaving my fingers through her confirmedly silky pubic hair.\n\nStacy moaned.\n\nWhen it got to a certain point, I admit I was unsure how to proceed. Though it was not as if I was scared by the prospect, I was not positive she wanted what I wanted. Modern protocol indicates that all parties involved offer clear, verbal consent. Opponents of this practice always voice the same concern: it kills the mood. While I normally had no problem with asking, I could, at the moment, see where they were coming from.\n\nThankfully, Stacy answered for me. Taking my hand from her breast, she physically guided in between her legs, her intention clear.\n\n\"Stop if this isn't okay,\" she whispered.\n\nSo that is how you do it, I mused in my head.\n\nI can't say I was particularly surprised to find that she was already wet. I mean, the sheer number of erogenous zones that had been addressed leading up to that point were more than a few. It didn't change that, when my fingers slipped past her lips and brushed across her clit the first time, Stacy audibly gasped.\n\nWe stayed in this position for a while, one hand on her breasts, another administering long, soft strokes across her vulva, working our way to an obvious conclusion. It hadn't taken much to figure out what Stacy liked. I mean, her confirming with an audible 'oh, yes, right there,\" was an indicator to me that, unlike porn, you do not change! Just keep doing that exact thing.\n\nWhat I assumed was her first orgasm was a minor climax. Of course her breathing had gotten harder and her legs clamped down on her hand, but it wasn't as if there was howling and thrashing about. She simply collapsed into me, a lump of flesh in my lap. I could also finally admit it, it was uncomfortable to have a boner under her.\n\n\"Ooooooh, you're leaving me?\" Stacy had her eyes closed as she whined about the movement.\n\n\"Just getting a bit more comfortable,\" I responded, laying on my side beside her, my hand instinctively moving back up to cup a breast.\n\nStacy turned to me and smiled. \"Two-and-a-half years,\" she commented. \"How is it that nothing like this ever happened before?\"\n\n\"Circumstances maybe? I mean, we never really had this much free time before. Maybe it just took us a while to grow into each other.\"\n\nStacy propped herself up on her elbows and stared intently at me. Then, with no verbal warning, she leaned in and kissed me. I admit I was unprepared to immediately reciprocate and the kiss turned into a simple little peck.",
        "\"No?\" She didn't seem hurt in her inquiry, more just looking for confirmation.\n\n\"Not no at all,\" I responded, and leaned into her for a proper kiss.\n\nWe made out for a while, getting to know each other's mouths and flavor. I kissed her neck, she brought life to my cock with her hand. I licked her nipples; she gently bit mine.\n\nIt became obvious that we were gearing up for our next progression and Stacy began to position herself for a blowjob. Now, while it isn't like I am opposed to some selfish pleasure, in this circumstance that selfishness involved my continued exploration of her. I stopped her and asked her to turn around, arranging us into a simple \"69,\" desperate to taste what my fingers had already been introduced to.\n\nAs her mouth wrapped around my head, soft and warm, I performed little probing motions with my own tongue, encouraging her wetness back, coaxing her body back to life and soon enough, we found a rhythm. Why had this taken so long for us to do? Could I have been experiencing these pleasures for years?\n\nStacy began to quiver again and her thighs pressed tightly to my ears. I was not yet close to climax, something that didn't surprise me as I rarely came from fellatio, yet I was pleased with the knowledge that we hopefully were not yet done. She was more vocal the second time around, releasing deep, guttural moans that vibrated strangely (but pleasurably) through my cock.\n\n\"No more, no more,\" she croaked and pushed her way off of me, nearly kneeing me in the face. I couldn't subdue the shitty little grin on my face, my prize for a job well done. Kudos, me.\n\nI got up from the bed and grabbed us a couple of cups of water and, in walking back into the bedroom, the smell of musk and sex brought a new sense of life to my erection.\n\nStacy was starting to come back to life herself.\n\n\"I can't tell you how long it has been since someone did that,\" she whispered, attempting to get her voice back. \"I forgot just how incredible it feels.\"\n\nI handed Stacy the cup of water and she summoned the energy to prop herself up just enough to take a few sips without choking. The image made me laugh. Her skin was flushed, her hair was a mess, she looked like she had been fucked.\n\n\"Am I a wreck?\"\n\n\"Never,\" I replied truthfully, \"you look perfect.\"\n\nI set the cups of water to the side of the bed and crawled back up onto the bed, propping myself up on the headboard and, once again, pulling her into me. I wrapped my arms under hers and around her torso, offering a contented, loving squeeze. She did her best to squeeze me back.\n\nWe sat on the bed that way for a bit, just holding each other. My hands, of course, found their way back to her breasts, absentmindedly coaxing some life back into her nipples. My lips found my way to her neck, a subtle indicator that I was really hoping we were not done. Thankfully, Stacy was into it.\n\nShe crawled out of my lap and indicated that I should fully lie down, an order I immediately obeyed. While the raging storm limited the amount of natural light coming into the room, I was still treated to the visuals of Stacy crawling onto me, positioning herself above my hips, leaning a bit back, her breasts high and proud, her hand reaching around herself to guide me into her.\n\nIt was heaven.\n\nWhile she was still quite obviously wet, it took a moment for her body to accept me, coaxed into compliance by subtle, undulating girations of my hips. When she finally settled onto me, she collapsed onto my chest.\n\n\"You feel good,\" she whispered into my ear, a breathy confession that caused a noticeable twitch in my cock.\n\n\"You feel better,\" I replied before we began to kiss, our tongues wrestling for dominance.\n\nWe quickly worked into a rhythm, starting with long, slow strokes and building our pace until we finally hit a sweet spot. This time, Stacy was more vocal.\n\nBetween her soft, pleasured cries, the sensations of her tits pressed into my chest, the incredible tight wetness she produced and firmness of her ass in my hands, I knew I wasn't going to last long. This was not going to be a 45 minute bout of lovemaking in different positions, different rooms, different angles. We were two people in sync, bringing one another to a singular climax.\n\nStacy's cries became more distinct and I felt her pussy walls begin to squeeze me when I realized I was going to finish.\n\n\"I'm gonna' cum,\" I groaned, desperate for her to make a decision as to where I should be finishing.\n\n\"Don't stop,\" was her only reply.\n\nI finished inside her, emptying days and weeks worth of pent up energy I didn't know I was holding, all at the same time that she finished herself. When we both finished, and we lay on the bed, a heap of tired flesh, both gasping for air, my deflating cock still inside her, a funny little thought popped into my head.\n\nDamn, not bad for the first time.\n\n-------------------------------------------------------\n\nPart 2:\n\n\"I'm starving.\"\n\nWe were in the shower and Stacy was washing her hair when she made the announcement.\n\n\"Still no room service,\" I countered. \"We can go down to the buffet though.\"\n\nI admit, my response was somewhat absent minded as my real focus were on my hands... and the gently sudsing motion they made as I rubbed my palms in circles around her breasts.\n\n\"Having fun there? I think they are pretty clean at this point.\"\n\nHer comment was obviously sarcastic and it made me smile.\n\n\"Hey, what can I say,\" I responded, \"you have really nice boobies.\"\n\n\"Boobies? Well, thanks, buddy. You have a really nice pee-pee, too.\" She took a couple of soapy hands and used them to lather up my dick.\n\nThis woman was fantastic.\n\n--------------------------------------------------------\n\nWe got downstairs, again dressed in our bathrobes, right in the middle of the dinner rush. Unlike breakfast, where a number of people were in stages of what would be considered non-standard dining environment dress, we were the only ones not in normal clothing. We explained to the woman that we had no luggage and she assured us it was not a problem but, admittedly, we did feel slightly out of place. Though, apparently that social faux pas was not enough to keep Stacy's mind on the straight and narrow.\n\n\"Tyson,\" she whispered, \"I seriously want to compliment you on a job well done. That was legitimately the best sex I have ever had. And I mean ever. Not only was the during fantastic, but whatever you did to get me prepared and whatnot? Well, it's been months since I have had sex and I am not even sore. It's fantastic!\"\n\n\"It appears our successful teamwork goes beyond the convention center floor.\"\n\n\"I can't stop thinking about how I just want to do it again. Like, now.\"\n\n\"I think sex in a hotel dining room is generally frowned upon,\" I whispered back.\n\n\"Yeah, well, I dare you to find us someplace to do it.\"\n\n\"You already used your dare, remember? You claimed you want to groom me.\"\n\n\"Yeah, well that one is on hold. Right now the dare is for you to find us someplace to have sex again... and it can't be our room.\"\n\n\"Dare?\"\n\n\"Double Dog.\"\n\n----------------------------------------------------------\n\nI went to the bar and got us a bottle of the red wine we had enjoyed earlier in the day. While it wasn't like either of us were scared, per se, it was going to take a little bit of liquid courage to go through with the act.\n\nEven though it was my dare, beverages in hand, we hashed out a plan together.\n\n\"Maintenance closet?\"\n\nStacy was the first to offer a suggestion.\n\n\"Possibly,\" I added. \"I was able to get the sheets earlier out of an unlocked housekeeping stock room. The good news is that we could get in. The bad news is that it was, in fact, unlockable and I think I would feel a little guilty about the inappropriateness of having sex on what are assumed to be clean sheets and towels.\"\n\n\"Awwww, a perv with a heart,\" she chided me. \"What a guy.\"\n\n\"I haven't actually found a true maintenance closet though, that might be an option, if a little small and potentially headache inducing considering the chemicals.\"\n\n\"Do you have any ideas?\"\n\n\"A couple, actually. First would be the pool or fitness center. Not out in the open, but either of those often has an additional lockable bathroom attached. The second is trying to find an unused banquet or meeting room. While they usually get locked, the double doors that often lead into them are often pickable with a room key or credit card.\"\n\n\"Sold,\" Stacy giggled loudly through a mouthful of wine.\n\nI couldn't believe just how into this she was.\n\n-------------------------------------------------------\n\nFinding the banquet rooms wasn't at all difficult and, to a certain extent, it was almost anti-climatic when we quickly got into the room using the trick I had explained previously to Stacy. However, once in, we were admittedly a bit overwhelmed with the sheer size of the space. Simply put, it was cavernous, easily able to hold 400 people and with high ceilings that only accentuated its intimidation factor. Plus, it was a bit cold.\n\n\"It's kinda' freaky in here,\" Stacy whispered while hanging onto my arm. \"It's like it is so big you have no idea who could be hiding where.\"\n\nWe wandered around in the room, using her phone as a flashlight, seeing if there was any place we could utilize for our daring deed. Either amazingly... or not surprisingly, it was the limits to the options that struck us most. In order, there were: stacks of chairs, a podium and a single banquet table.\n\nThe single table, with its floor length skirting, was the obvious choice.\n\nGetting under, the scene was about as sexy as being under a banquet table in an empty convention room could be. But, at least the wine had kicked in so we both found the entire process to be absolutely hilarious. Bumping heads against the bottom of the table. Bumping heads into one another. Attempting to get our robes spread out on the floor so our bare skin wasn't touching the gross carpet. It was all a bit ridiculous. Thankfully, we both found humor in the situation and not just frustration of being able to complete the dare so it didn't completely kill any desire to get on with the task.\n\nWe had finally gotten settled, me on my back and Stacy on top of me, when we found ourselves in an actual moment of erotic tenderness. The temperature under the table, most likely just from our body heat, had risen to the point of actually being comfortable and, during a minimal amount of making out and petting, we found ourselves in a situation that we were actually going to be able to meet our challenge.\n\nStacy slipped me into her. It was a slightly more difficult task than earlier that day, just from the lack of foreplay but, should any auditors ask, we had in fact completed the act of penetration. We whispered congratulations to ourselves in between kisses and attempted to reach a tempo'd movement that would allow us not only to penetrate, but to consummate.\n\nIn one of those Murphy's Law moments, just as it seemed we might actually hit that sweet spot of synchronicity, there was banging at one of the sets of doors that accessed the room and a number of loud voices seemingly arguing as to who had the entry key.\n\nTo say it was a mood killer was an understatement. Stacy flipped off of me and hid her face in my arm-pit like a toddler. And, inferring that I lost my erection quickly was an understatement. The reality was that the blood rushed so quickly out of my cock that I figured it was more likely that it had turned itself inside out than it was that I would ever get an erection again.\n\nAt that moment we realized that, while the dares are fine, neither one of us were the types to be aroused by actually being caught.\n\nIf covert action in the time of danger was the objective, we failed miserably. Instead of being quiet, we were practically speaking in normal voices as we attempted to get ourselves back to \"normal.\" We banged around clumsily under the table and managed to yank half of the skirting off. We managed to get ourselves standing, disheveled but vertical, in the darkened room. We were still only clad in our bathrobes and each had wine in our hands but, c'mon! Who would ever suspect us of foul play? Why, we were just two lost tourists!\n\nThe reality was nobody had even entered the room. The voices had come and gone. Yet, we knew that if they had breached the doors the best course of action would have been to lay still, silent and patient for them to leave. We did none of the above.\n\nWe hurried to the elevators but, once the door closed in front of us, the laughter was immediate.\n\nWe were still laughing when we got to our hotel room and hopped into the shower to rinse off any contaminants that we may have picked up on the floor. The laughter led to touching. The touching led to kissing. The kissing led to the bed.\n\nWe spoke quite a bit during our lovemaking. At first we were still rehashing the details of our failed caper. But, as we progressed, we spoke candidly about other topics of our lives, separately and apart. We spoke about our likes and dislikes sexually.\n\n\"I enjoy a bit of ass-play,\" Stacy told me as she rode me. \"And while it's not to say I am against full-blown anal, but what I really like is a simple tongue or a finger. Especially a finger right as I am orgasming.\"\n\nI told her about how I really enjoy having my ears licked.\n\n\"What?! That's disgusting! Way over the line, dude.\"\n\nEven the sarcastic smirk on her face was sexy.\n\nWe switched positions into a doggy style, though, before entering her I took the opportunity to do a little oral exploration of my own, re-introducing myself to her well lubricated vulva and making acquaintance with her puckered rosebud.\n\n\"Oh! Ooooooooohhhh. Somebody was taking notes,\" Stacy moaned as I rimmed my tongue around her asshole. \"That's the stuff right there.\"\n\nWith every little movement of my mouth, her back arched a little more, she presented just a little higher, her moans grew a little louder.\n\n\"Tyson, you need to fuck me,\" she whimpered.\n\nHer comment took me by surprise at first as, honestly, she seemed so ready to climax from the oral stimulation. But, it also had a side effect of taking my cock, which had been slowly subsiding from the lack of physical stimulation, and bringing an almost painful new sense of purpose to it. I was like steel and she was going to feel it.\n\nI got back to my knees and aligned myself before slowly sliding into her, inch by inch, taking my time, torturing her just a bit with anticipation. There was no resistance in her accepting my length, afterall, between the recent lubrication and our previous cowgirl, she was very much ready.\n\nI built up my pace slowly, waiting for her verbal cues to guide me, though, if I am being honest, I hoped that she would finish quickly as the intensity of the sensations from the position and the perfection of the visuals provided enough stimulation for me to erupt at any moment.\n\nI felt a hand on my balls. I knew that Stacy had been working her clit as the angle of our position didn't offer much in the way of direct stimulation. While the sensation was enjoyable, it more called to my attention that there was so much more that I could be doing on my end. Afterall, I did have hands.\n\nStacy's back was arched so dramatically that, even though her ass was pointed up at me, her chest was practically flat on the bed, which ruled out her breasts as a target for my wandering hands. The most obvious was figuratively staring right at me.\n\nI licked my thumb and, with firm, even pressure, pressed it to her asshole, a singular action that elicited the loudest moan yet from Stacy. She liked it, and besides my ears, I felt her reaction as her pussy clenched around my cock.\n\nI was not going to last.\n\nStacy, mercifully, began to orgasm, her asshole involuntarily spasming through her contractions so much that it practically swallowed my thumb.\n\nUnable to control it, I finished on my own, pumping myself deep into her, once again not pulling out. It was as intense a climax as I had ever had and the sounds of my gurgled vocal spasms were only masked by Stacy who, by then, was legitimately crying out loud with pleasure.\n\nHopefully our neighbors were forgiving.\n\nWe collapsed on the bed together, a heaving mass of heavily breathing flesh, totally spent.\n\n----------------------------------------------------\n\nI woke up what I assume was about 20 minutes later to the sounds of water running in the shower. While I thought for a moment about giving Stacy some privacy, what had actually woken me up was the incredible need to pee.\n\n\"Care to join me when you are done?\" Stacy was oblivious to my entering the room but, once the splash of water rang out into the air, a smile broke out on her face.\n\n\"No sophomore slump for you, mister.\" She wrapped her arms around my neck almost as soon as I had stepped into the shower, getting on her tip-toes for a kiss and offering her body for a hug from me. \"That was one of the most incredible orgasms I have ever had.\"\n\n\"Sorry for the audio on my end,\" I replied with a chuckle. \"My body wanted to moan or cry out or something but instead I just sounded like I was having a stroke.\"\n\n\"It's all good, I was on my own planet anyhow. Didn't hear a thing.\"\n\nWe didn't spend long in the shower as other than a quick rinse off of our coital sweat it wasn't like we were dirty. We did, however, dry off in soft towels and spend the rest of the evening just lounging with one another, watching TV, talking, snuggling up to fall asleep.\n\n-------------------------------------------------------\n\nEnd:\n\nIt was 6:14 in the morning when an unfamiliar sight woke me up: daylight, brightly flooding through the window, a reminder that we hadn't the forethought to close the curtains the night before. Stacy was already awake next to me, her thumbs tapping away on her phone, her body as nude and as wonderful as when I left it.\n\n\"Good news and good news,\" she said after stopping her typing and addressing the fact that I was also awake.\n\n\"Yeah?\"\n\nShe rolled over on top of me, planting a few kisses on my lips before sitting up on my waist, an image of perfection above me.\n\n\"The storm is done and it is inferred on the websites that I was reading that there wasn't enough damage to even stall any openings. So, we have the day free to do whatever we please and it isn't even like there will be nothing to do.\"\n\n\"Good news, indeed,\" I replied. \"What's the second bit?\"\n\n\"The company increased our spend to $150 each.\"\n\nShe left her statement at that though I could tell she had more to say.\n\n\"And?\"\n\n\"Okay,\" she replied, somewhat excitedly, \"I figure we'll spend the day at the beach, okay? So, if you don't mind, I'll go buy us some gear and supplies while you get us some food and we can be some of the first ones out on the sand.\"\n\nIt was a good plan, other than the fact that, at the hour of morning we were at, there was nothing open. So, being awake and nude, we let nature take it course.\n\n--------------------------------------------------------\n\nIt was almost 10 when I got back from getting us some breakfast. I set the baked goods, fruit and coffee out on the little room table and stripped down one more time. I had gotten used to being nude in the room and decided that I quite enjoyed it, figuring that Stacy wouldn't mind either.\n\nI was standing at the window, admiring the view and appreciating how lucky we were to have some time off when the room door opened behind me. Stacy practically burst in, a couple of bags in her hand and a smile on her face.\n\n\"Breakfast is served,\" I said as she put the bags down and immediately started stripping down to match my attire.\n\n\"I'm famished,\" she replied, grabbing a chocolate croissant and coffee.\n\nShe had been in the room for a few minutes though had stood still for none of it. She was excited about something yet I could not quite tell immediately what it was... until she started unloading the bags.",
        "\"So, I've got us totally covered!\"\n\nStacy unloaded what had to have been the most mis-matched, tacky assortment of gaudy flip-flops, shorts and touristy t-shirts I had ever seen.\n\n\"I got all of it on clearance,\" she continued, excited about her purchases.\n\n\"I can see why,\" I responded, holding up a t-shirt with a caricature of the president wearing a hat emblazoned with marijuana leaves.\n\nShe handed me a pair of shorts that were best described as \"blinding\" - with one leg the brightest neon yellow I think I had ever seen a covered with (obviously misplaced) Gucci and Louis Vuitton logos and the other side a red-white-and-blue American flag. For her own outfit, it was a tiny pair of booty shorts with \"SEXY\" emblazoned across the ass and a shirt so baggy it was obvious it would appear she wasn't even wearing any.\n\nWhat I wasn't seeing were swimsuits.\n\n\"Well,\" she said, pulling open a final bag, \"we're so close to Haulover Beach I figured we don't even need any swimsuits.\"\n\nShe had my attention.\n\n\"But,\" she continued, \"what we do need is some grooming.\"\n\nShe held the electric clipper set, still in its plastic clamshell packaging, in front of my face.\n\n\"Aaaaaaaannnnddd, since you still owe me my dare. Whadaya think?\"\n\nIf it meant getting to spend time with her, there was very little I wouldn't have done.\n\n\"So, to clarify, is the dare to let you groom me, wear these awful clothes or go to the nude beach with you?\"\n\n\"All of the above,\" she said, stepping into me and taking my dick into her hand.\n\n\"That's a big dare,\" I whispered, leaning into her for a kiss.\n\n\"Yeah,\" she purred back, \"double dog.\""
    ],
    "authorname": "TooTallToFall",
    "tags": [
        "dare",
        "coworkers",
        "storm",
        "flashing",
        "work trip"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/double-dog"
}