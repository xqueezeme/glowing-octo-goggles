{
    "title": "Hitting the Bottom Ch. 10",
    "pages": [
        "Author's note: \n\nThank you to my co-creator and editor, the Brit. \n\nIn previous chapters: \n\nDan, a cop, had attempted suicide after assaulting his ex-wife/sub, and ended up at the hospital, where he met Nurse Sandra. \n\nTheir relationship grew gradually, until finally they became lovers. Dan was reluctant to dominate Sandra, but with his shrink's blessing they did start playing. It was all fun and games, until he forgot the condom in the heat of the moment... \n\nNow Sandra is pregnant, and some big decisions need to be made. Dan wants her to keep the baby, but Sandra isn't sure - so for now, they've agreed to give it more time and thought. \n\nIn this chapter: building trust in play - but is it enough? \n\n~~~~~~~ \n\nShe wants to play, too. \n\nHer willingness, her need for me, for this, even with that yet-to-be-made decision looming dark in the background, means the world to me. Gratitude and need churn in my belly.. I'm going to make this one so good for her. I'm going to give her a taste of one of her wishlist items; one I told her I won't be able to. But I've thought of a way to make it work... \n\nI've been playing this session in my head on-and-off for weeks; have thought of little else all day today, after I'd purchased my props. Still, I wasn't sure she'd be in the mood for actual play, things being as they were. Now, I cannot wait to start. \n\n\"Go run a shower then, babygirl. I have some setting up to do.\" \n\nHer eyes light up. \"Wow... setup? Really?!\", she counters cheekily, her smile stretching across her upturned face, and I swear I can feel my heart swell in my chest. \n\nWho knew I'd love her sass so much? I think, but manage to contain my answering grin. This wouldn't be as much fun if I went all squishy-soft on her... \n\n\"Are you questioning my instructions, babygirl?\" I ask mildly instead. \n\nShe gasps, \"Oh, no sir!\", and I chuckle and turn her by the shoulders so she is perfectly situated for my smarting, open-palm spank on her cotton-clad bottom. Sandra squeals and scurries quickly towards her bedroom; I hear the door to her bathroom open and close, followed by her shower head spray spurting to life. \n\nGood. \n\nGrabbing my bag I set out to work in her room, stripping her bed from all its blankets and pillows, folding and piling them all on the dresser instead. Then I move to take out my latest purchase from the bag: several coils of purple, soft cotton rope. \n\nI chuckle at my own choice of color. I know she'd appreciate it, would know I'd chosen it because it was her favorite. Plus, it's going to look sensational against her skin. \n\nSandra's bed has no posts or bars to secure the ropes to, but that's not a problem - I've got enough rope to work with. Bending low, I tie one length of rope to the top left leg of her bed, then bring it up to lay it over the mattress, pointing towards the center. Moving to the next leg I repeat the process, working my way around the bed so that when I'm done there are four stretches of ropes laid out on her bed, forming an incomplete X-shape. \n\nI then move on to tie a ring knot at the end of each rope, using my own body to estimate the right measures. Working methodically it takes only a couple of minutes to complete the job, and then all that's left to do is place one firm cushion at the very center of the bed and cover it - as well as the ring knots - with a large, fluffy white towel fetched from her closet. \n\nIf I play my part right, by the end of tonight this towel would be soaked. I feel my dick twitch inside my jeans at the thought. \n\nTaking a breath to calm myself I look around, then move on to the second part of my preparations. I pick up the pile of pillows and blankets from the dresser and carry it over to the living room, and dump them on the sofa. Next, I clear the two small nightstands on both ends of the bed, stuffing Sandra's book and her cell phone and charger into a drawer. From my bag I take out the half-dozen candles I bought, each filling its thick glass holder almost to the brim, and place them around the room, then finally light them up one by one. \n\nSoon, their light scent drifts and curls as it mixes with the cool breeze coming from the still-open window. I walk over and close it, then draw the curtains shut. The room is thrown into deep shadow, softened by bright circles of light around the flickering candles. \n\nI cannot wait to see her naked in this light. \n\nThe shower stops running. \n\nRight. Just on time. \n\nI inhale deeply and then release the air slowly, letting my tension go with it, leaving pure excitement behind. My body feels charged, alive; my muscles ripple with energy. I flex and release my fingers to let some of it go, and when that's not enough I shake my arms, hard. Yeah, that's better. Phew. The door slides open. \n\nSandra steps out of the shower completely naked, her wet hair brushed back from her flushed face, her smooth skin damp. She takes in the transformed ambiance in her bedroom, scanning the candles burning all around us, though my body blocks her bed from view. Her blue gaze lights up before it meets mine and darkens, her obvious desire mirroring my own. The air between us seems to crackle with expectation. \n\n\"Come here, babygirl.\" My voice is low, thick; she smiles faintly and steps forward as I step back, then stop. She stands right in front of me, hands at her sides, chin up, shoulders back, breathing fast. She's excited. Knowing she needs this, wants this, makes my blood boil in urgency. At the same time, the added weight of responsibility centers me, stabilizes me as it settles low in my belly. \n\nHere we go. \n\nWith a brief smile, I lift my hands to trail my fingertips lightly along her arms, and watch the goose-bumps flare on her skin in response. So pretty. \n\n\"My beautiful babygirl.\" \n\nShe smiles tentatively. I bend to place a light kiss on her lips. \n\n\"Ready to play?\" \n\nSandra nods, and I level my look at her. \"Words, babygirl. When in session, use your words to answer my questions.\" \n\nShe nods. \"Yes sir. I'm ready to play.\" \n\nI smile. \"So am I.\" Taking her hand, I draw her over to the side of the bed. \"Let's get you settled then. Up on the bed, on your back. Cushion under your hips.\" \n\nShe turns to do as told but then hesitates, biting her lip, and looks from the bed to me with a deep frown on her face. \"Um...\" \n\nI raise an eyebrow questioningly, and she seems torn with some kind of internal debate, until finally she blurts out: \"I - I thought you said rope was a hard limit for you?\" \n\nMy belly drops a little. Damn. I should have explained. Taking her hands in mine I squeeze them lightly, reassuringly. \"It is. Well, it was - but I found a way to make it work.\" \n\nShe raises her chin, still looking unconvinced. \"How?\" \n\n\"I -\" I start, then think again. \"Here, let me show you.\" \n\nTurning her around to face the bed, I take out one of the ring knots from under the towel, gesturing for her to take it in her hands. She does, and then looks it over from all directions. \n\n\"What - what am I looking at, exactly?\" she asks, her tone still guarded. I step closer and take the rope from her hands, pulling hard at the ring on one end of the knot, and the long tail on the other. \n\n\"It's called a ring knot. See? It won't tighten on you, no matter how hard you pull. Which means -\" I tuck my thumb into my palm and wiggle my hand into it, and grab the rope above the knot. \"Which means you get the sensation of being properly tied up, but at the same time -\" Tucking again, I squeeze my hand out of the ring. \"At the same time you can simply take your hand out if you need to. With your hands being smaller than mine, it would be even smoother.\" \n\n\"Oh, I see...\" \n\nHer voice sounds breezy, as if she'd just released her breath after holding it in for too long. I keep the small distance between us, keep watching her as she processes the idea in her head. Then she slips her hand into the ring, holds on to the knot, and pulls hard. That's right, babygirl. Check for yourself. She tugs the rope a few more times, and then slips her hand out, raising her face to me, and I'm thankful to see her smile growing ever wider with each passing heartbeat. \n\n\"So, babygirl... would you like for me to tie you up and have my wicked way with you?\" \n\nShe giggles and nods enthusiastically. \"Oh yes, please, I would, very much!\" \n\nI laugh, too, feeling my anxiety melt away at her expectant tone. God, I love this woman. I shake my head and take a step closer, cup her face in my hands and kiss her slowly, sweetly. \n\n\"Hmm. I'd like that very much, too.\" I murmur against her soft, pink, pouty lips. After one more quick taste I step back, needing a little space to gather my wits around me. For this to be as good as it can be between us, I have a role to play. I close my eyes and take a moment to regain my equilibrium. When I'm ready, I open them and re-focus on Sandra, who stands naked and expectant in front of me. I'd better not stall too damn long. \n\n\"On the bed, then, babygirl. On your back, cushion under your hips.\" \n\nWhen she doesn't move immediately, just breathes in and stares at me with a soft smile, I fight my own grin, trying instead for a menacing scowl. \"You had a good excuse to hesitate before, babygirl, Not anymore. If there isn't a very good reason for your behavior, young lady, I'd suggest you get your lovely ass on that bed, now.\" \n\nI swear her choked 'Oh, yes sir!' sounds suspiciously giggly, but then she turns to climb up on the bed, and the sight of her luscious behind wiggling enticingly so close to my face is enough to make me forget anything and everything except the need to bury myself deep inside her. \n\nI clench my fists and strive for composure while Sandra flips over and settles on top of the thick towel. The pillow causes her back to arch slightly and her pelvis to tilt, pushing her plump pussy up high, putting it on display for me. Without being told, she spreads her arms and legs wide and then relaxes into the bed, clearly waiting for me to make the next move. \n\nGod, she's perfect. \n\n\"Very good, babygirl. That's more like it. Now let's get you nice and tied, shall we?\" \n\nShe whimpers in response and my dick surges, even as I move to slip her right hand into the first ring knot. I note with satisfaction the fit is just right - loose enough for her to easily release herself, but still tight enough to provide the illusion of helplessness - and move on to her legs, then finally to her left wrist. When I'm done I step back, and the sight before me - Sandra naked and bound, spread-eagled by that purple rope, her hips pushed up invitingly, passion plain as day on her face - makes my heart slam hard in my chest. \n\nI grind my teeth. Focus, Dan. \n\n\"How's that feel, baby?\" My voice sounds hoarse, but I can't help it. \n\nSandra tugs at the ropes, and a slow smile spreads on her flushed face. \"It feels - gosh! It feels absolutely freakin' amazing. Just - I love it!\" \n\nI nod. \"I love it too, babygirl. You look incredible like that. Gorgeous.\" \n\nIt's an effort to keep my voice calm, and I'm damned proud with myself for succeeding. Moving closer I lean one knee on the bed next to her torso, and let my fingertips caress her face lightly, moving slow and gentle down her throat, and along the middle of her beautiful, naked torso. Sandra's lips part to allow for her quickened breath, curling upwards as she watches me watching her. \n\nI don't try to hide my desire for her, and she soaks it up, her own eyes darkening, her cheeks colored by matching stains of blush. I can read her mind, right then. 'I'm sexy and I know it' is written all over her face, and I love it, love her for owning up to it, for reveling in her own body. \n\nAbsolutely freakin' gorgeous. \n\nI continue the path towards her spread-open pussy but then avoid it, moving down one thigh instead towards her knee instead. She arches up into my touch and then slumps back when she realizes it won't be going where she wants it. I chuckle and repeat the journey up her body, then down again, moving in a slow, hypnotic rhythm. My touch is light, almost ticklish. I know she wants more, and thoroughly enjoy denying her. For now. \n\n\"Don't be greedy, babygirl... patience is a virtue.\" \n\nShe whimpers as she realizes my game, and at the same time her face softens into beautiful acceptance. I smile approvingly. \n\n\"Now, here are the rules: first, while you can release yourself anytime you choose to, you may not do it - for any reason - other than for your safety. So if you want to be untied not because you feel you are at risk, but for any other reason - discomfort, whatever - you need to ask and wait for me to do that for you, okay?\" \n\n\"Yes sir.\" she answers softly. \n\n\"Good. Now I'm going to blindfold you in a moment, and although I'm sure you'd be able to remove it even without using your hands, I'd like for you to keep it on, and if need be - ask me to remove it for you.\" \n\nHer eyes hold mine as she nods solemnly. \"Okay.\" \n\nHolding her gaze I can see her questions and doubts rising. For a moment I consider letting her struggle through them on her own, but then again, I suspect it's too soon. For now, at least, it is my job to help her with them. I stretch out on my side, my body close to hers but not touching, and cup her smooth cheek in my palm as I hold her gaze with mine. \n\n\"We need to practice trust, baby.\" I say quietly. \"I need to see you speak up when there's anything wrong, and you need to see me taking care of it - of you - while we have that safety in place in case...\" I stop, and am relieved to see her face clear as she nods slowly. \n\n\"Yes, sir. I understand.\" She bites her lower lip, and then rushes forward - \"do - do you want me to use any special safewords?\" \n\nI consider her question. I know that I'd stop at any sign of distress, regardless of safewords. But I'm happy to practice using those, too. \"Sure, let's go with the standard traffic lights - red and yellow. All right?\" \n\n\"I - yes, please.\" Her mouth curves slowly upwards as she smiles at me from under her lashes, and then her lips part to allow her tongue a quick lick across them, almost making me forget my line of thought. I resist the distraction, just barely. \n\n\"Okay then. Red and yellow. Don't hesitate to use them, either. This is what practice is all about, okay?\" \n\nHer grin widens. \"Yes, sir!\" her eyes crinkle in their corners, and then she bites her lip and looks me up and down, considering me for a heartbeat before catching my gaze with hers. \"Um, may I use green, too?\" \n\nI tilt my head, but nod. \"Yeah, sure. Green is good.\" \n\nShe giggles and then throws her head back and shouts up to the room - \"GREEN! Please, please I am so freakin' green right now!\" \n\nI burst out laughing even as I roll over to straddle her hips. As I straighten up and loom tall above her bound, spread form, my amusement quickly dissipates, replaced with thick, hard lust. I am still fully dressed with my jeans and T-shirt, only my feet are bare; she is utterly naked below me. I am bigger and stronger and completely in control, and by God, the sense of power is intoxicating. I stay there, keeping my weight on my own knees and my eyes locked with Sandra's, and breathe it in, let it wash over me, into me, fill me up, until I'm steadfast and centered. \n\nYes... this is what it's all about. I look down at her, and slowly lean over and take her mouth in a slow, hot kiss. She welcomes my lips and my tongue, opens up to me, draws me in, arches up to try and rub her naked chest against my torso... I chuckle and draw back, all the way off her and up to my feet next to the bed. \n\n\"Oh no, babygirl... we've only just started. Now, where's that pretty silk scarf of yours...\" \n\nI turn to her dresser and find her lingerie drawer, figuring she may keep some other delicates there. Soon I find the long scrap of slippery lavender-colored silk... and under it, a real treasure. With a delighted chuckle, I grab it and turn around, waving the realistically-shaped, bright-purple silicone cock between us. \n\n\"Well, well, well... what have we got here?\" \n\nSandra blushes beet-red and bites her lips, but then meets my eyes boldly. \n\n\"Ehm, Dan, please meet my very close, loyal and long-time friend, Dylan the Dildo. Dylan, please meet Dan, my Dom. I hope you two will play nice together.\" \n\nMy grin turns feral, exposing my teeth, even while internally I celebrate the title she had so easily chosen for me. \"Tsk, tsk, tsk... still sassy, even when tied, spread-eagled and naked? I guess I'll need to do something about that, hmm?\" \n\nShe breathes in, \"Yes, sir\", as she takes in the unveiled need in my expression, and her cheekiness melts away, leaving her vulnerable and aroused and expectant before me. \n\nI take my time absorbing the sight of her. I've never seen her so beautiful. The candlelight flickers along her curves, accentuating their supple smoothness. With her hands tied up, her breasts are pushed higher on her chest, the shadows around them forming almost perfect circles while light accentuates their fullness, gleaming over her creamy globes. As my eyes roam her body, her dark-pink areolas tighten under my gaze, pushing her nipples out and up, begging to be touched. \n\nNot yet. \n\nI let my gaze trail lower, watching her midriff ripple with her excitement. Lower still, to her softly rounded belly, the darkened dip of her bellybutton rising and falling rhythmically, hypnotically... I watch it for a few more heartbeats until a gleam of moisture twinkles at me from between her spread thighs, pulling my attention there. \n\nThe triangle of blond hair covering her venus hill is almost transparent, and just below it, her perfectly smooth labia are pulled a little open, revealing her inner lips, red-pink and swollen, and her tight opening, already coated with her sweet-smelling girl juice. \n\nMy dick, swollen and heavy, tries to push itself out of my jeans, but I ignore it. My need to control Sandra, to play her body and her mind, to take her places she'd never been before - it is far, far greater than my need to just fuck her. \n\nI breathe deep and slow, let that buzz flow through me, bring every cell in my body alive. \n\nSandra whimpers softly and arches her back, and I look up into her flushed face, and shake my head, softly admonishing her. \n\n\"Shh... lie still, babygirl.\" \n\nShe pouts a little, but does as she's told. I smile approvingly and finally move closer to kneel on the bed. I place the dildo on her torso, nestled in the valley between her breasts, and then hold her silk scarf in both my hands. \n\n\"Raise your head, babygirl.\" \n\nShe does, and I tie the scarf over her eyes, knotting it loosely under her, not wanting any uncomfortable lump to annoy her. \n\n\"There, how's that feel?\" I ask when I finish arranging the silk folds over her eyes to make sure she is properly blindfolded. \n\n\"Ohh... feels good, sir. Thank you.\" She says softly, not a trace of sass remaining in her tone. \n\nGod, she submits so beautifully. I smile in awed satisfaction, knowing she can't see me. Out loud, I answer - \"mmm. Good. Now, you mentioned you hoped I'd include Dylan in our play, didn't you?\" \n\n\"Uh-huh - oh, yes sir!\" She nods enthusiastically and I chuckle as I pick up the heavy, purple toy and start trailing it around her breasts. Sandra responds by arching up, and I withdraw, denying her contact. \n\n\"No... lie still, remember?\" \n\n\"Oh - yes sir.\" Immediately she relaxes back onto the bed. \"Sorry.\" ",
        "\"Hmm. That was your warning, babygirl. Next time you arch up, there will be consequences.\" \n\nShe gasps, and then smiles. \"Yes sir.\" \n\nWe've played this game before. She'd made me spank her pussy over and over again, by deliberately and repeatedly breaking my 'no moving' rule. This time, however, it's not her pussy I'm going to spank. We'll see if she likes that... \n\nI bring the dildo to her smiling mouth, trail it along her lips. She smiles wider and her tongue comes out to lick along the silicone shaft, making it glide more easily with each passing. I watch, entranced, as her tongue glides lovingly along the fake cock. Fuck. So sexy. \n\nChanging angles, I rest the fat purple head on her stretched-out tongue, and nudge forward. Sandra takes the hint and opens wide, taking a couple of inches into her mouth before hollowing her cheeks and starting to suck for real. \n\nI swear I can feel it in my dick, too. I breathe hard, grit my teeth, and fuck her mouth deeper with the toy. Then, abruptly, I stop and pull out - mostly because I know I'd explode in my pants if I continue - and then glide the toy down her throat to her breasts, and gently roll its wet tip around one nipple, then the other, painting them with her saliva. \n\nI can see Sandra straining against the ropes holding her arms as she struggles not to move, and smile down at her. Though she can't see me, I know she can hear my approval in my voice: \n\n\"Good girl... stay still.\" \n\nI keep teasing her nipples too lightly a few more times, and then bring the dildo back to her lips for more lubrication. \"Suck.\" \n\nFucking her mouth slowly again with the toy, I look down at her body. I want to touch her so bad; I know she wants me to touch her, too. Looking between her thighs I can see her squeezing her pussy onto itself, a tiny trickle of moisture seeping down between her ass cheeks... \n\nNot yet. \n\nThis time, when I pull the fake dick out of her wet lips and then circle her nipple lightly with it, she arches up high. \"Oh please, please...!\" \n\nI pull it away from her body, only to return sharply a moment later, spanking the underside of her breast with her own dildo. \n\n\"Ahh, yessss...\" \n\nSandra sinks back, as if absorbing the impact for a moment, and then pushes her breasts up, arching right off the bed, clearly asking for more. \n\nI chuckle and oblige, spanking her other breast just a little harder, watching it jiggle up and down from the impact, then bloom with a light-pink stripe to match the one already decorating its twin. I rub my palm lightly across both, then squeeze each in turn, firmly. Sandra sighs, and when I remove my hand she arches her back high again. \n\n\"I take it you're green, babygirl?\" \n\n\"Oh yes I'm green, please, I'm absolutely green - OH!\" \n\nI start raining sweet lashes all over her plentiful mounds. The dildo makes a perfect implement to spank her breasts with - thick and heavy, long enough for me to get a good grip, but short enough to keep perfect aim, with just a little give and that soft silicone cover to make sure I don't accidently bruise her. Time seems to melt away as I focus on delivering her body the treatment it so obviously craves. Sandra moans and squirms at times, but whenever I take a break she pushes her chest high again, silently asking for more. \n\nGradually, I increase the force behind each impact, causing her flushed breasts to jiggle wildly on each impact. Sweat beads on her forehead and her upper lip, as well as on her throat and chest. I slow my pace, but keep going. Sandra's breasts look swollen, and there's a deep pink circle all around each breast, indicating the area where the heavy toy had struck them. Her nipples stand in attention, but I don't strike them directly, just keep going around them. \n\nSandra's moans turn into a deeper groan, and I can tell the pain had now settled deeper. This time, when I break, she keeps her back flat against the bed - even trying to nestle into it, it seems - and I know she's had enough. \n\nBut this session isn't just about play; it's also about practice - and I need more from her just then. Carefully, not wanting to hurt her, but needing to make my point, I trail the cool head of her purple dildo over her burning skin. She flinches at the touch, but remains silent. \n\n\"What's your color now, babygirl?\" \n\n\"I - oh! Yellow, sir. I'm yellow. I'm sorry... I need a break... I'm sorry...\" \n\n\"Shh... that's okay, babygirl... it's okay...\" I let the dildo drop to the bed next to her body. Reaching up, I push her blindfold away to look into her distraught eyes, which are now brimming with tears. \n\n\"See? You just need to tell me, and I stop. Nothing to be sorry about. Nothing at all, baby...\" \n\nStill holding her gaze, I lean over to take her lips in a soft kiss, just to show her that it's really okay. But when I'm about to pull back Sandra sighs and opens her mouth, her tongue inviting me in. Unable to ignore her request, I take her up on it - deepening the kiss, relishing the tang of her tears that spices up her utter sweetness. \n\nAfter a few long moments I finally withdraw, then look down at her poor, reddened breasts, and up to her eyes. \"Let's make you feel all green again, shall we?\" \n\nShe smiles tentatively and nods. Reaching over to her dresser, I fish around until I find what I'm looking for, and pull out her hand cream. \"Hmm, this should do... let's see.\" \n\nTaking a generous glob of cream, I rub my hands a bit to spread it evenly between them, and then bring my palms to Sandra's breasts, gently. The touch of cool cream against her inflamed skin must feel good, because Sandra first inhales sharply and then exhales slowly, and relaxes into my touch, closing her eyes in blissful surrender. \n\nI glide my slippery hands all around her flushed, swollen breasts, aiming to soothe, rather than ignite her passion. But after a few gentle strokes Sandra moans and opens her eyes. \n\n\"God that feels good...\" \n\nSmiling, I bend down to blow some air over her cream-covered skin, chilling it further. Sandra shudders and her nipples crinkle and tighten right in front of my eyes, and before I make any conscious decision my fingers already close around them, rolling each reddish, hard peak between thumb and forefinger, tweaking and pulling on them lightly. \n\n\"Oh my gosh!\" Sandra squeals, and arches her back high. \n\n\"Tsk, tsk, tsk, how quickly she forgets.\" I mumble, though I know she can hear me because her eyes widen just before she feels my fingers squeeze her nipples, hard. \n\n\"Arrggghhh!\" \n\nSandra grunts at the brief pain, but then her face softens when my fingers relax their grip, going back to their light, teasing play, pleasuring her. This time I can see her arm muscles flex as she pulls hard at her ropes, fighting her need to move. \n\n\"Good girl.\" I smile, and reward her by bending to blow more cool air onto her skin, and then move to lick and suck on each nipple in turn. I can feel a fine tremor in her body as she struggles with herself, willing her body to keep still under my touch. \n\nGod, I love this. Having her like that, completely at my mercy, submitting to my will... \n\nI suck harder, taking more of her breast into my mouth. Sandra whimpers and I know the pleasure is now tinged with residual pain as her abused tissues are pulled into play, but I keep going. I trust she'd safeword if need be this time around. I release her breast and catch her disappointed sigh before taking the other into my mouth, and she squeals again. \n\nI want to make her cum like that, riding the line of pain and pleasure. \n\nThe thought makes me hot. Too hot. I almost tear my t-shirt off my body, throwing it carelessly behind my back. When I find Sandra's eyes again, they are devouring my body with as much greed as mine do hers. I smile wickedly. That's tough, babygirl. I'm the one who calls the shots here. \n\nMy hand starts the journey down her body while my mouth covers her breast again. I stroke down her soft, quivering belly, move to squeeze her inner thigh, teasing us both by avoiding her pussy for a few seconds longer. I can feel its damp heat calling me, begging me to claim it. I let Sandra's breast pop out of my lips momentarily as I prop myself up on one arm, needing to watch my own actions as finally, slowly, I move my hand to her center. \n\nMy fingers rub along her smooth labia, all the way down to her clenched hole, then all the way up to her clit, then back, deeper this time, my middle finger sinking into her sleek, open slit, sucked right into her tight tunnel. \n\nWe both gasp. I push all the way in, almost losing my head when her inner muscles squeeze all around my thick digit. Unwilling to give her any power over me - not right now - I pull out to tease around her opening, and then focus a few moments on that soft spot just above it that I'd learned could drive her crazy. Only then, when I feel her melt under my touch, do I move my finger another half-inch and start rubbing tight, hard circles over her clit. \n\nSandra throws her head back and cries out in pleasure. Bringing my forearm under her stretched shoulder, I fist my fingers inside the hair at her nape to keep her arched like that, while my mouth goes back to feast on her breasts, half-pleasing, half-tormenting her. At the same time, my fingers continue working her clitoris, edging her ever closer to her climax. \n\nThere's nothing for Sandra to do now but take it, take every sensation that I'm giving her and absorb it in her tied, spread-eagled, immobile body. She struggles a little - not trying to release herself, but more like verifying her bonds are really there, holding her in place. Her hands are fisted around the knots holding her rings in place, and she pulls the ropes down toward her head from time to time, although there's very little give in them, so it only serves to stretch her whole body up. \n\nHer legs flex repeatedly but are kept spread wide, her toes curling and uncurling in time to my fingers rubbing her clit, and she keeps trying to move her head from side to side, but it only serves to increase the pull of her hair. Sandra keeps doing it anyways, moaning deeply every time she does. Her eyes are tightly shut, her mouth is open, and her cheeks are flushed red - as is her whole body. \n\nI've never wanted a woman more in my life. \n\nI can feel her orgasm building in her body, the tension mounting in every cell. Releasing her breast, I take the other one in my mouth and suck it deep, knowing her abused flesh would protest, but also knowing that, at this point, her pleasure would outweigh the pain; would in fact only deepen for it. \n\nHer breath hitches in her throat and I feel a gush of heat soak my fingers just before she bucks and cries out - 'fuck, fuck, fuck!' - and then she strains into my fingers, as if suspended in time for a few long moments while I keep stroking hard and quick. She's so wet that thick drops of her juice splash out from my furious rubbing, dampening her thighs and soaking into the towel below. I hiss in triumph. Yesss! Finally, Sandra shudders and slumps back with another whiney 'oh, fuck...' and I slow down, reducing the pressure on her still throbbing clit, but keep going as long as her body continues to spasm, until she finally settles back, her chest still heaving. \n\nI still my fingers and release her hair, and watch her roll her neck lightly from side to side, a slow smile stretching across her sweaty face. Leaving her pussy, I trail my wet fingers up her body and all the way to her face, then rub them gently across her lips. She smiles wider and opens her eyes, and holding my gaze, she sucks and licks them clean, apparently enjoying her own taste on my skin. I let her have her fun for a few moments, and then move them more purposefully into her mouth, now clearly fucking it with my two middle fingers. \n\nSandra's eyes widen slightly and then darken, and she sucks deeper still, bobbing her head back and forth. \n\n\"What's your color, babygirl?\" I ask, although I know the answer. I pull my fingers out of her mouth, move back to glide them along her drenched pussy. \n\n\"Oh fuck I'm so green right now, sir!\" \n\nI smile. \"Good.\" moving back, I get off the bed to stand up, and then look down at her. She stares back expectantly. Walking around to the foot of the bed, I carefully release Sandra's legs from the ropes holding them in place. She seems a little disappointed, but doesn't protest, and I nod to her with a little smile. \n\n\"Raise your hips, babygirl.\" \n\nSandra groans deeply when she plants her feet against the bed and pushes her hips up, only now realizing how stiff her legs had become. I pull the cushion out from under her, and then cup her cheek with my hand, looking into her eyes. \n\n\"Sore, babygirl?\" \n\nShe bites her lip, and answers truthfully. \"Just a little... my muscles aren't used to this, I guess?\" \n\n\"Hmm... let's switch you into a different position, then. Can you turn onto your belly?\" \n\nShe does, awkwardly, crossing her still-bound wrists above her head in the process. \n\n\"Good. Now can you get up on your knees and elbows?\" \n\n\"Mm-hmm\" comes her muffled reply, before she pushes up to take the position, moaning again as her muscles pull and flex, adjusting to it. \n\n\"Good girl.\" I move up, and seeing her wrists are still crossed, I pull her higher on the bed so that the ropes relax, allowing her to part her arms and lean them straight from elbow to palm on the bed. The ring knots simply lie now atop the backs of her hands. She could slip her hands out easily anytime, but she hadn't - and even now, she makes no move to do so. \n\nBecause she wants this. She wants you to dominate her. She wants to submit to you. \n\nOn fire for her now, my movements grow sharp. I grab the cushion and shove it over her arms, so that she can rest her forehead or her cheeks against it. I know I'm going to be rough - there's no way I could go gentle now - and I don't want to worry about rope burns to her face. \n\nStepping back, I finally shuck my pants and boxers. My dick springs free, and my hand goes to it, giving it a long-overdue squeeze. God, I need to fuck her so bad. Moving onto the bed I settle on my knees behind Sandra. My cock rests heavily along the crease of her ass, and she wiggles back against me. My hands come down hard, spanking her sharply on both cheeks, and then I grab her hips to keep them from moving. \n\nSandra shrieks, then giggles, and buries her head in the pillow that covers her arms. \n\n\"What part of 'stay still' didn't you understand, babygirl?\" I growl, and she giggles again. \"M'sorry, sir!\" she says, and then adds - \"I'm trying, but it's soooo hard not to move...\" \n\nHer tone - not even a tiny bit contrite - tells me all I need to know. She wants it rough. She wants me to spank her while I fuck her, doggy style, with her arms still tied with my rope. \n\nWith one hand I fist my dick, and with the other I control her hips as I rub my head and shaft along her juicy folds several times, gathering lubrication. She wiggles again, and I spank her - several quick, open-palm spankings to each side, before I grab her ass, using my thumbs to spread her wide, and then sink my dick slowly all the way in. \n\nFeeling her hot, slick inner folds stretch and slide all around me while watching my shaft disappear inside her body, inch by slow inch, it is all I can do to breathe deep and hold onto my control. \n\nAnd then she wiggles her ass at me. Again. \n\nMy voice is almost unrecognizable. \"You want it rough, babygirl? You want me to spank your ass, to hurt you while I fuck you? \n\n\"Mmm... yes please, sir!\" \n\nDamn. I should probably teach her a lesson about topping from the bottom... But my speed picks up and my spankings start ringing in the quiet, candle-lit room, even as the thought passes briefly through my lust-filled mind. \n\nAnother time. Right now, this is what I want, too, and by God, I'm going to take it. \n\nMy speed alternates between wild, mad fucking, slapping my pelvis against her ass, my balls against her swollen labia, and then slow and deliberate, allowing me better aim as I spank her hips and outer thighs, coloring them a pretty pink. Her pussy keeps dripping and clenching around me as she gets close, and I want to keep going until she cums again, but soon I feel my control slip, and I know this time I won't be slowing down. \n\nLeaning forward, I search for Sandra's right hand under the cushion. When I find it, I tug it down, speaking urgently in her ear. \n\n\"Take your hand out of the ring, babygirl. I want you to make yourself cum again.\" \n\nSandra's only response is a soft whimper, and then a moment later her hand emerges from under the pillow and she takes it into her mouth, wetting her fingers before moving straight to her pussy, rubbing between her folds focusing on her protruding, swollen clit. \n\nI lean back on my shins and watch her masturbate for me, spanking her as I do, adding heat and color to every part of her upturned ass. Then her movements become more frantic and I cannot keep away for another goddamned second. Taking my thick, throbbing, steel-hard dick in my hand I place its swollen head right at her entrance and then drive myself slowly, fully inside. \n\n\"Keep going, babygirl. I want to feel you cum all around me.\" \n\nHer fingers, which had stilled before, go back to work. Sinking my own thumbs into her fleshy bottom, I hold her securely in place while I pull back and then plow in once more, then back and again, growing harder and faster with every stroke until I'm pumping into her so fast my hips look like a blur of movement. \n\nThe pleasure is all-consuming. My eyes are closed shut, and I'm only vaguely aware of Sandra's muted cry and the gush of liquid heat as her channel squeezes hard, pulsating around me. I feel the familiar rush of tingling down my spine, engulfing my balls and then rushing up my shaft to explode in utter bliss deep inside her body, filling her with spurt after spurt of my thick, hot cum. \n\n\"Oh fuck, jeez, fuck...\" \n\nI'm not sure who utters the words, all I know is my head is spinning with pleasure and my lungs scream for air as I fold over her, trembling, sweat dripping from my face onto her back. \n\nI reach my hand and rub the little droplets into Sandra's own damp skin, and at my light touch she shudders and lets her knees slide out from under her, slumping onto her belly, legs still spread wide, with me kneeling in between them. I move over her to lie down on my side next to her, and rub soothingly up and down her back, then further down, along her spanked ass and hips, taking care over the sensitive spots. \n\nAfter a while, when she still hasn't moved, I ask gently - \"you okay, babygirl?\" \n\nShe nods a sleepy 'mm-hmm' into the pillow, and I release the breath I hadn't realized I was holding. \n\n\"Wait right here.\" I say quietly, and get up to pad over to the shower. I give myself a 10-second wash, then grab a washcloth, wet it, and return to the bed. Sandra is still in the same position I'd left her; I carefully wipe clean the mess between her spread thighs, and then nudge her shoulder. \n\n\"Hey, wanna roll over, baby? Or are you comfortable like that?\" \n\n\"M'good\" she says, and I mumble an 'okay' as I get up to toss the washcloth in the laundry basket, blow all the candles off, crack her window open to let some cool air filter in, and then walk over to her living room to return the pile of pillows and blankets I'd deposited there back to her bed. \n\nWhen I'm back, though, she'd flipped onto her back, her head now resting on the pillow - and her left wrist still inside the ring. Something surges inside me. If I hadn't just cum, i'd fuck her again, right now. \n\nInstead, I take my time rearranging her bed and shaking out her fluffy blanket, letting it float down to cover her up to her chin. Finally I crawl back into bed and lie down on my side next to her, lean in to give her lips a small kiss, and then draw back to look into her eyes. ",
        "\"You may release yourself from the rope now, babygirl.\" \n\nSandra smiles at me. \"Yes, sir\" she says sweetly as she slips her hand out of the ring, and then brings it up to caress my face softly, pulling me into her kiss once more. When we finally draw apart, our gazes lock. \n\n\"Thank you for tonight, Dan. I - I needed this. I needed you, us - like this.\" \n\nI nod. \"Me, too.\" Settling onto my back, I pull Sandra over to rest her head on my shoulder, pressing her soft body all along mine. Her hand lies limply on my chest, the pink indentations of rope around her wrists still clearly visible. I pick up her hand to kiss her there, feel her pulse flutter, then tuck her hand back right over my heart, hug her close, and kiss the crown of her head. \n\n\"I love you, Sandra.\" I murmur into her hair. \n\n\"I love you too, Dan.\" She mumbles back, and gives me a small squeeze. \n\nI nod, and fall quiet. Even as she drifts off, I find it hard to fall asleep, myself. Tonight was everything I'd hoped it to be. But would it be enough, when decision time comes? \n\nI don't know. \n\nWithout conscious thought, I go back to my breathing meditation, focusing my attention on the cool air flowing in through my nostrils, the warm air that tickles my lips on the way out. \n\nI try to stay optimistic. Tonight was good. It may not have been enough to make up her mind for her, but it had to be a step in the right direction. \n\nTrust and hope, Dan. With that thought, I close my eyes, and let my own fatigue claim me. \n\n* \n\n* \n\n* \n\nSandra had left for her morning shift before sunrise. A couple of hours later I, too, am ready to start my day of volunteering at the Shelter. Now that school is back in full swing, a few of the older kids had come to me, asking for help in setting up space to do their homework. Since there is no free room in the building to convert into a 'study', I'd suggested setting up hinged, folding desks in each of the bedrooms, along with folding chairs, so that they don't take extra space while not in use. \n\nAfter gaining the administrator's approval, I'd started on the project. It only took a single visit to convince the local woodshop owner, Mr. Stratis, to sponsor the shelter: he owed me from a few years back, when I'd happened to be in the right place, at the right time to save his shop from burning to the ground. Some juvies were playing with firecrackers on the street next door, and I'd swung by in my patrol car at the moment one of those crackers landed on the shop's roof. I'd grabbed the small fire distinguisher from my car and had climbed up the back ladder; luckily, I'd managed to put it out even before the firetruck arrived at the scene. \n\nIt didn't seem like much to me - I really was just doing my job - but Mr. Stratis kept telling me he was indebted whenever we bumped into each other, which had happened several times, given the size of our town. I'd never taken advantage of it, but asking for the Shelter was different, and Mr. Stratis was all too happy to oblige. \n\nSo, with the wood, hardware, and few necessary tools provided for, I'd started on the project. Each kid got their pile of raw material, and together we'd designed, cut, sanded, built and painted those desks and chairs. The second coat of paint had just been added a couple of days ago, and today was going to be the day it all came together, when each kid got to hang their own desk and their own chair on their own wall, and show it off to their family and friends. \n\nI couldn't be more proud of them, and was looking forward to celebrate their success with them. Giving these kids a sense of accomplishment and capability was just as important as teaching them these skills, if not more so. \n\nI'm just done shutting all the windows and lights in Sandra's apartment getting ready to leave when loud, decisive knocks on the other side of her front door, stop me in my tracks. \n\n\"Sandra? You there? It's Lucas. Open up, sis. We need to talk. It's urgent.\" \n\nShit. \n\nThere can be only one reason for him to be here, with that particular undertone of anguished concern in his voice. \n\nHe knows. \n\nAn unsettling sense of deja-vu washes over me. It's only been a few months since that awful night at my own apartment, when Jon had come over looking to beat me up. Then, too, I realized even before opening the door that he knew. \n\nI'd welcomed Jon's arrival on that fateful night, had believed I'd deserved every misery he'd planned on delivering. By that point I had already downed every pill I could find at my place with a half bottle of frozen Vodka; I'd figured whatever he did to me would simply serve to speed up the process I'd already set in motion. \n\nBut the fates had interfered, and I'd survived. Today, however, is different. I'm different. And while I can understand why Lucas would feel worried and protective of his little sister, I have no intention of becoming his human punching bag. \n\nNonetheless, I do need to face him. And somehow, I'll need to find a way to avoid getting hurt - without hurting him in the process. Damn. This is going to be tricky. \n\nI take a moment to center myself, and then reach to open the door. \n\nLucas's deep frown clears as the door starts to open, and then turns thunderous when he realizes it isn't his little sister who'd opened the door, but me. Mr. Evil. \n\n\"You!\" he growls furiously, and I can see his arm swing back as if in slow-motion. \n\nI side-step just in time, and his blow catches my right shoulder, which I twist back in sync with his fist's motion in order to minimize the impact. It still hurts, but not nearly as much as it was meant to. Taking a couple of steps back I raise my arms in front of my face, ready to defend myself from his next strikes. \n\nNone come. \n\nLucas still looks like he's ready to kill me, leaning forward with his fists clenched, ready to pummel into me. But then, he doesn't. He huffs and puffs through his nose and he makes a couple of threatening moves with his feet and his body, but he doesn't actually strike me. \n\nFinally, he releases a few chosen expletives in a heated, low voice, and then throws his hands up in the air and turns his back on me, tunneling his fingers through his hair, clearly struggling for control. When he'd regained some of it he turns back to meet my guarded eyes with his scathing look. \n\n\"You have some nerve.\" His voice oozes contempt. \n\nI raise my chin at him, but say nothing. I am not gonna get into this fight with Sandra's brother. My silence seems only to aggravate him further. \n\n\"What, no tall stories to tell me this time? No fancy tales about the hero cop injured in the line of duty?\" \n\nI'd never said that, of course. All I told him was that I was injured when I took a bad fall, was out on medical leave, and wasn't likely to be reinstated. An abbreviated version of the truth. But again, I don't see the point of debating it right now. I might as well have lied. \n\nLucas takes a threatening step in my direction. I keep firm as he gets very close, our eyes locked together. \"I know exactly what you did,\" his voice is low and strained now as he almost spits the words in my face. \"Now you leave my sister alone, you hear me? She doesn't need any scumbag losers like you in her life.\" \n\nI swallow hard. His words ring true, too close to comfort. And yet, things are different now. \n\nLoser or not, Sandra does need me in her life right now. She's pregnant with my baby. Leaving her alone is not an option. \n\nBut I cannot say all that to Lucas. \n\n\"That's for your sister to decide.\" I answer instead, my voice strained but steady. \n\nHis anger flares. \"The hell it is! Get out of here, you hear?! GET OUT! And never come anywhere near her again, or I'll have you arrested - after I tell her exactly who and what you are, understand?!\" \n\nI stiffen my back, and with effort, keep my voice low. \"This is your sister's house, and I am her guest. If anyone is going to kick me out, it's her; not you.\" \n\nLucas's fists clench again at his sides, and I resist taking a step back - although I'm ready to do so if he swings at me. \n\n\"Oh, she'll kick you out, all right. Do you think she'll keep you around once she knows who you really are?! Oh no, no way in HELL she won't. My sister is smarter than that; you're history. You should do yourself a favor and leave before this mess blows up in your face. By the time I'm done with you everybody will know what you did.\" Lucas sneers at me distastefully. I feel my temper rising and resolutely push it down, striving for control. \n\n\"Sandra already knows everything.\" \n\nThat gives him pause. \"What?!\" \n\n\"She knows what I did to Naomi in New York. I told her.\" \n\nLucas stares at me, disbelief widening his eyes, before anger and suspicion narrow them to narrow slits. \"You told Sandra that you assaulted your ex-wife? You told her you stalked your ex for days; that when you found her you beat her up so bad she was bruised for days later? You told Sandra that you tied and gagged your ex, that you tried to rape her?\" \n\nWith each ugly, terribly truth he steps closer to me, until that final accusation is delivered right in my face. I feel bile rise to burn my throat, cold sweat break on my face and chest, slickening my palms. I fight to push the panic down, fight to keep from succumbing to it. This is too important. I cannot just curl into a fetal position and wait it out. I grind my teeth so hard my jaw hurts. \n\nLucas's mouth twists into a hateful snarl as my silence stretches, and I know I need to speak up, or he'll try to hit me again. With effort, I push my words through my stiff lips. \n\n\"Yeah. I told her everything. In gruesome detail. She knows exactly what I did. The damage I'd caused. She knows just how low I'd sunk. She knows how badly I hurt Naomi. She knows, and she still wants me in her life..\" \n\nLucas stares at me in stunned silence. I can see his chest muscles twitching under his T-shirt, but he doesn't move. \n\nThen after several long, strained moments he exhales long and loud, and I can almost see the fight escape his muscles, leaving him depleted. \n\n\"Dammit to hell, I don't get it. I just don't get it.\" he mumbles, and moves past me to plop himself onto the padded single chair standing behind me in the living room. \n\nI follow him inside and sit myself at the edge of the sofa, facing him, leaning forward with my forearms on my knees. \"Yeah. You and me both, to be honest.\" \n\nLucas looks at me through narrowed eyes, as if trying to figure me out. Finally he shakes his head in defeat. \"I don't get her, but then I don't get you, either.\" \n\nOh. \n\n\"How do you mean?\" \n\nLucas's gaze sharpens on my face, and his mouth thins grimly. \"Well for one, you don't look like a wife beater. You seem... like a normal dude.\" \n\nI wince, but then retort dryly. \"Were you expecting horns and a tail? \" \n\nHe shakes his head in annoyance. \"I don't know. I don't know what I was expecting. A denial, probably. Or some lame excuses. Not - not this.\" \n\nI look down at my clenched hands. \"I wish I could deny it. But I can't. And I have no excuse.\" \n\nMy curt response is met with silence that stretches for several long, strained minutes. I can't bring myself to look Lucas in the eyes, so I keep mine fixed on the floor, until finally his pained voice breaks the uncomfortable standoff. \n\n\"That's just not good enough, Dan.\" \n\nMeeting his gaze, I know he's right. Sandra's family deserve more than a shrug and and 'it's none of your business' attitude from me. They love her, and they have every right to be worried. If I'm to have any kind of long-term relationship with her, it would be on me to make them understand. \n\n\"You're right.\" I say, and then, grimly, I venture into the only explanation I have: the truth. \n\n\"I was in a very dark place in my mind three months ago. I'd been depressed for a long time. It had started a couple of years ago and then at some point I'd started spiraling down faster, until finally I'd just - snapped, I guess.\" I raise my head to look straight at him. \"I had a full-blown mental episode. A major one.\" \n\nLucas just stares at me, and then his jaw tightens and I rush forward before he can interrupt me. \"That doesn't excuse what I did, I know. The way I hurt Naomi - my ex-wife...\" My voice is strained, my throat clogged with that ever-present lump of shame. With effort, I push through it. \"Not a day goes by that I don't regret it. All I can say is, I am trying my best to get better. I'm working my ass off to make sure it never happens again.\" \n\nLucas shakes his head, his face grim. \"That sounds rough, Dan, and I'm sorry for you, but still, that's not nearly good enough. I appreciate your honesty; I really do. But my sister deserves better. She deserves better than you.\" \n\nI nod. \"Yeah. She does. So I guess that means I'll spend the rest of my life bettering myself, for her.\" \n\nLucas's head snaps back. \"The rest of your life? Are you crazy?!\" \n\nI just hold his gaze, and see color once more flush his high cheeks. \"That is a load of BS! You've just met. You can't seriously be talking about anything long-term. Sandra would never make a rash decision like that, she's much too level-headed for that. Not unless -\" \n\nHe stops when he sees the the guilt on my face. At first he shakes his head in denial, but then his eyes narrow and zoom on me and I can see the wheels turning in his head, until - \n\n\"Oh, God, no. Please... No.\" \n\nHe shoves his hands through his hair, looking at me almost pleadingly. \"Tell me I'm wrong. Tell me it's not what I'm thinking, Dan. Tell me you didn't...\" \n\nI don't say anything, just stare at him mutely and watch his emotions - hurt and disappointment, fear and frustration - chase each other on his face, darkening his eyes and tightening his features into a rigid mask. \n\n\"God help me, but I should have killed you when you first opened the door. I still should.\" His words may be menacing, but his tone is defeated, and he doesn't make any move towards me. I feel a strange urge to console him. \n\n\"Too late. I've already tried that. It didn't work.\" \n\nHe stares at me, clearly not following. I feel my lips twist in self-mockery. \n\n\"I tried killing myself when I - when the knowledge of what I'd done to Naomi sunk in. And then Jon - my partner, my best friend - he came over and beat me down to a pulp, pretty much.\" I chuckle humorlessly. \"Which is, incidentally, how I got to meet Sandra - the concussion landed me in the Neuro ward - so I guess, in a way, I should be thankful. I am thankful. Sandra - she...\" I blink at the sudden tears in my eyes, and swallow them down, hard. \n\n\"She probably saved my life. And not just physically speaking, either. She - she somehow got me, you know? She was the one to pick up on my injuries being partially the result of a suicide attempt. She insisted on getting me a psyche consult. She helped me see some light at the end of the tunnel during those first few weeks, when all I wanted to do was just dig myself into a hole and die.\" \n\nI shake my head. \"I don't really get it. I honestly don't know why she cared so much. But she did. And it made all the difference in the world to me.\" \n\nLucas is quiet for a long moment - so long that it starts to freak me out. Finally he coughs and speaks hoarsely: \"I - I do. I know why she cared.\" \n\nAir gets caught painfully in my chest. \"What?! - I mean, why?\" \n\nHe doesn't answer right away, and I can see his jaw working hard under his taut skin. He clenches and unclenches his fists, and I have a feeling he's debating whether or not to get up and leave. But then he reaches his decision and his body calms down somewhat when he looks me in the eye. \n\n\"Our younger sister - Helena - she tried to kill herself and her baby girl about eight months ago.\" \n\nHis words strike me right in the chest, leaving me gasping for air. \"What?! Helena -\" I shake my head, speechless. I'd just met Helena, her husband and their baby girl a couple of weeks ago at the barbeque, and there didn't seem to be anything wrong with them. They were all - happy. Normal. Or so I thought. \n\nLucas nods. \"Yeah. Sounds crazy, huh?\" he shrugs. \"She had postpartum depression. None of us realized how bad it was until it was almost too late.\" He pauses, purses his lips, and then continues. \"We all thought it was just a little case of the baby blues at first, you know? We figured she'll just get over it soon. But then when the baby was about a month old her husband got back to travelling for his business - he had to go for two whole weeks to the States. And my father had just undergone major surgery on his knee, so my mom was focused on taking care of him, and Sandra and I -\" he raises his shoulders. \"You know how it is. Everybody's busy with their own lives.\" \n\n\"What happened?\" I ask quietly. \n\n\"She closed all the windows and left the gas stove on. Then she put the baby to sleep in her crib, took a sleeping pill herself, and got into bed.\" His voice is flat is he recounts the events, as if afraid to allow himself to feel them. I can relate. \n\nI keep quiet. I know he'll continue the story when he's ready. After a moment, he does. \n\n\"Luckily, a neighbor found them. She came by to bring Helena a bill that was placed in the wrong mailbox, and then became concerned when there was no answer as she knocked on the door, while the car was outside and the stroller folded right there on the porch. And then she thought she smelled gas, so she called 911.\" Lucas draws a shuddering breath, and I can see brightness glinting in his eyes. \"They said another hour and the baby wouldn't have survived. A few more hours and Helena might not have, either.\" \n\nI nod. \"Thank God for nosy neighbors, eh?\" \n\nThe very corner of Lucas's mouth twitches, and he gives me a tiny nod. After a while, he inhales deeply, and seems to shake off the memory of those bad times as he re-focuses on the here and now. On me. \n\n\"Anyways, I suspect that's why Sandra was sensitive to that possibility. Why she cared.\" \n\n\"Yeah. I can see that.\" \n\nWe both lean back in our seats, and for a long while the room is quiet as we each stare ahead, seeing only the ghosts in our own minds.. \n\nA loud ringing breaks the silence, and Lucas reaches for his phone, checks the display, and swipes to answer. \"Yes, Mama?\" \n\nHe listens, and his mouth thins in annoyance at first, but then he nods curtly. \"Yes, Mama. I know. Alright, I promise.\" He listens some more and nods again. \"Okay. I will. See you soon. Bye, Mama.\" After listening for another moment, he cuts the call and pockets his phone, looking back at me as he gets to his feet. \n\n\"I'm gonna get going. My mother had just heard the rumors, too. The friend who told me - the brother of one of your colleagues from the station - also told his mother, who knits with mine, you know, at the knitting club.\" Lucas shrugs self-consciously. \"She called to make sure I don't do anything stupid.\" \n\nDamn. I should have known. Secrets don't remain that way for long in a town this size, or in families as close as Sandra's. Especially a juicy one like mine. I curse inwardly, but then I know there's not a lot I can do about it. \n\nExcept, maybe, go and talk to Sandra's parents directly. The thought makes me shiver. It isn't a conversation I'm looking forward to. But then the stakes are too high for me to chicken out. \n\nI get up on my feet to stand before Lucas. We both stare at each other uncomfortably, until I take a step forward and stretch out my hand. After a moment's hesitation, Lucas takes it and gives me a solid shake, and then keeps his fingers wrapped tightly around my hand. ",
        "\"If you ever hurt my sister, I am going to kill you.\" he says quietly, and I know he means it. \n\nI nod. \"Yes, sir.\" \n\nAfter another painful squeeze he lets my hand go, then turns and marches to the door. My voice reaches him just before he gets there. \n\n\"Lucas -\" \n\nHe stops and half-turns to look at me. \n\n\"I know you're going to talk to your folks about me. But - would you please not tell them yet - about Sandra?\" \n\nLucas considers me for a moment, and then nods. \"Okay. That's not my news to tell, anyway. But I am going to speak with Sandra about it - about everything.\" \n\nI swallow, and nod. \"Yeah. That's - that's fair enough. Thank you, Lucas.\" \n\nMutely, he turns and lets himself out and closes it softly behind him. Hearing it click, I exhale loudly and mumble a low curse, then sink back onto the sofa. \n\nLucas revelations still swirl in my mind. Sandra's sister had had a severe depression. She'd tried to kill her baby and herself. Yet her family had apparently gathered around her to help her heal. They had embraced her. \n\nBut then, she's their flesh and blood. I'm not. They don't owe me anything. Would they be willing to extend the same grace and compassion to me, a total stranger? Would they take that risk at the expense of one of their own? \n\nAnd how would they feel if they'd known about her pregnancy? I trust Lucas won't tell, not just yet, but sooner or later they'll know. Will that somehow sway their opinion, one way or the other? \n\nI don't know. \n\nI need some help to figure this one out. I'm not sure how to even approach them. Lucas had caught me unawares and I'd given it my best shot, but now that he's gone, I am starting to second-guess myself. \n\nI need someone who'd be good with the whole family dynamics shit. Someone who can give me the perspective I sorely lack. \n\nI need Jon and Annie. \n\n*** \n\nI ring the doorbell at the Leonidas' a few minutes after nine in the evening. Annie opens the door on my second ring. She stands there for a moment, scanning me up and down, taking in the changes in my appearance before meeting my eyes. I know I look healthier. I've regained some of my weight, and had got another haircut that better covers the scar at the back of my head. I've been sleeping well, so the dark bags under my eyes are gone. And yet her close scrutiny makes me feel naked and vulnerable, fervently wishing for a passing grade. \n\nIt comes in the shape of a wide smile that spreads across her face, warming her bright green eyes. \n\n\"It's so good to see you, Dan. I'm so glad you called! Come on in, please.\" \n\nShe holds her arms open in obvious invitation and naturally returns my tentative hug and kiss-on-both-cheeks, as if these last few months had never been; as if we're back to normal. Her friendly welcome jars me. Even after her help with setting up my website, even though Jon had reassured me on the phone earlier that Annie would love to have me over, it still somehow feels - strange. Wrong, almost. \n\nShe's Naomi's best friend. She's not supposed to forgive me. \n\nUnaware of my inner turmoil - or maybe ignoring it - Annie turns and starts crossing their spacious living room towards the French doors that take up most of the back. \n\n\"We'll sit out on the back porch so that we can talk without disturbing the kids.\" she offers by way of explanation over her shoulder, and I mumble an 'okay' as I follow her, closing the window screen behind me, but leaving the glass open to let the cool autumn air in. \n\n\"Thanks,\" she says, and points me to one of the low, cushioned chairs. \"Have a seat. I'll be right back.\" \n\n\"Wait - where's Jon?\" I ask, surprised. \n\n\"Oh, he's still reading the kids their bedtime stories. He'll join us soon. Now, beer or coffee?\" \n\n\"Beer, please.\" \n\n\"Coming right up.\" Annie turns and walks back inside, and then returns a moment later carrying three beer bottles, not worrying with glasses, which makes me smile. These are Jon and Annie, my friends. I've always felt at home here. Placing one bottle on the table for Jon, she hands me another, and then clinks it with her own in a silent cheers before sitting across from me and taking a small sip. \n\n\"You're looking good.\" \n\nIt is said as a statement, not a question, and I nod. \"Thanks. I'm - better.\" And then, before I lose my courage, I ask - \"How's Naomi?\" \n\nTo my surprise, Annie smiles and answers easily. \"She's good. Really good actually.\" Then she gives me that knowing look of hers, the one that sees right through my defenses. \"You sure you wanna hear this, Dan?\" \n\nI gulp. She has good news about Naomi. Her tone alone is enough to tell me that. But then I know they probably involve that new Dom of hers; I can see it in Annie's eyes, in the undercurrent of concern there. Concern for me. \n\nIt's not unfounded, of course. I'm not by any means indifferent to hearing her news; my gut tightens as I brace myself for her words. But at the same time, a strange sense of relief fills me. Whatever it is, it's good. Naomi is good. Which means, whatever it is, I can take it. \n\n\"Tell me, please.\" \n\nAnnie nods slowly, watching me closely, and after a moment's consideration she answers. \n\n\"She'd just moved in together with Rye.\" Annie says gently, as if trying to soften the blow with her tone. But if either one of us had expected me to explode like I did when she'd first told me about Naomi and Rye, my reaction this time is decidedly underwhelming. I simply nod, not trusting my voice, as my lungs and throat feel constricted by the swell of bittersweet emotions. \n\nIt's serious between them, then. She truly had moved on. \n\nAnd yet, even as I re-live the pain of losing Naomi, it seems distant, somehow. Just an echo of past trauma, a phantom pain coming back to visit an old wound, hurting enough to steal my breath momentarily, but no longer debilitating. \n\nIt doesn't overwhelm me anymore. It is, much like Dr. Pappas had promised, manageable. \n\nAnnie watches me curiously, and when I keep quiet, she adds - \"she sounds happy, Dan. Truly happy. I think - I think she's stronger than any one of us had given her credit for. And Rye -\" she stops, smiles to herself, and then continues. \"He's a good man, Dan. And I think - I think he can give her what she needs.\" \n\nNow it is my turn to look at Annie questioningly. \"How would you know that?\" \n\nAnnie shrugs, and answers so quietly I need to lean close to hear her words. \"I - I know him. Kind of, anyways. And I know her.\" \n\nI shake my head, trying to follow. \"What do you mean, you know him? You've never met the man.\" \n\n\"Er - I did, actually. I'd known him for years, in fact.\" At my gasp, she rushes on - \"Back when we were kids - he was my gymnastics coach. Well, our gymnastics coach - Naomi, too - but she'd only trained with him for a couple of years. Me, it was more like eight, and I'd also worked as his assistant coach as a teenager. So, I know him pretty well.\" \n\nThere's this strange tingling sensation somewhere in the back of my head, as dormant neurons wake up and fire, bringing forth distant memories. But it takes another moment for all the pieces to fall into place, suddenly revealing the full, breathtaking picture. I inhale shakily. \n\n\"Rye - he was her gymnastics coach?\" \n\nAnnie's affirmation comes as a mumbled 'mm-hmm', but it's enough. \n\n\"That is -\" I shake my head in dazed disbelief, then meet Annie's gaze. \"She'd told me about him, you know.\" \n\nAnnie chokes on her beer, and then goes into a fit of coughs, until finally she manages - \"What?! When?\" \n\n\"When we'd just started exploring D/s, a million years ago. I'd asked her how she'd imagined the power exchange to work, what kind of Dom she'd fantasized about. In reply, she told me all about her gymnastics coach.\" \n\nAnnie just stares at me, dumbstruck. I chuckle humorlessly. \n\n\"Yeah. Crazy, huh? Anyways, she told me she'd been playing him in her mind a lot. She dreamed him to be the perfect Dom - someone she'd literally trust with her life, who would instruct her how and what to do with her body to please him. Someone who'd set goals for her and make her work for them, who would expect obedience and respect, but would use positive reaffirmation and praise just as often as he would corrections...\" \n\nMy voice trails off as Annie and I stare at each other, and I notice her flushed cheeks, as if embarrassed - or maybe turned on? - by my words. But she keeps her focus on me, nonetheless. \n\n\"Yeah, well...\" She coughs again, and shakes her head. \"I can't believe she'd told you about him... she never mentioned him to me for all those years. But then you must understand, when I say it's like it was meant to be. That they were destined to be together, eventually.\" \n\n\"Who were?\" Jon's voice startles us both as he opens the screen door and then shuts it behind him, moving to join Annie on the loveseat across from me. \n\n\"Naomi and Rye.\" I answer, surprised at how naturally their names roll together off my tongue. \n\nYeah. Imagine that. Entirely manageable. \n\nReturning to Annie, I answer with a question of my own, though. \"How did they get together, then?\" the next thought churns my gut, and I force it out tersely. \"Had they somehow kept in touch over the years?\" \n\nAnnie shakes her head. \"No. I'd met Rye by chance on the flight over to New York, and had mentioned it to Naomi when I saw her the next morning. She shocked me when she started crying, told me she'd had this thing for him forever. And then she made me help her track him down so that she could go and hit on him. Which, by the way, she did a fabulous job of.\" \n\nAnnie smiles ruefully and looks up into Jon's eyes, and there's something going back and forth between them, some silent communication that I cannot decipher. Jon gives her this level stare, his face not grim exactly, but... resolute. And Annie - she seems to melt a little under it, her lips parting in a soft gasp, which Jon catches with a quick, decisive kiss before drawing back and giving her an affirming nod. She blushes and tucks her face into the crook of his neck, and Jon turns back to me, one eyebrow raised, as if challenging me to comment on their public display of affection. \n\nI ignore his bait. I'd seen these two make out before, way hotter and heavier than just now, in fact. While the dynamics in that little exchange had clearly been different - intriguingly so, admittedly - I'm not here to catch up on their love life. Nor, even, on Naomi's, for that matter. \n\n\"Well, good for her. And you.\" I half-smile as I nod in their general direction, letting them know I'd noticed, but then I turn somber again. \"Guys, I need your help.\" \n\nJon sits up straighter, growing serious at my tone. \"What's up, man?\" \n\nDamn. Should I be telling them this - this secret? Is it even mine to tell? I'd already revealed it to Dr. Pappas - with Sandra's blessing - but then Lucas figured it out, which I'm sure she won't be too happy about. Would Sandra hate me for telling Jon and Annie, too? \n\nI wish I'd asked her first. But I'm here already. And while she'd have every right to be upset, I hope Sandra sees how necessary it is for me to talk to my friends about this. I clear my throat. \n\n\"Sandra's pregnant.\" \n\nTheir matching gasps are downright comical, but I'm too anxious to smile. \"Her brother knows. He also knows about - about me. He gave a good impression of you, Jon, trying to smash my face; luckily I ducked this time.\" \n\nJon and Annie still stare at me, trying to process. I shrug and continue. \"Anyways, I figured I need to talk to her family, sooner rather than later. But I have zero experience in these kind of things, so I thought I'd ask you guys for some pointers. Any suggestions?\" \n\nFor a long while they're both at a loss for words, staring back and forth between me and each other. Then Annie clears her throat, and asks: \n\n\"This - this isn't planned, I gather?\" \n\nI chuckle without humor. \"No - even I am not that crazy\". Then I add - \"But being 'unplanned' doesn't mean it's 'unwanted'. I want this baby, and I want Sandra. I want us to be a family.\" \n\nAnnie nods, and Jon exhales loudly. \"Yeah, well, If I were her dad - or her brother - man, I'd totally kill you. I'd say going old-school is probably the only way to go.\" \n\nAnnie hums in agreement. \"I think so, too. Have you guys agreed on a date yet? It may be better if you asked her mother to help. You know, engage her with the details, get her more quickly on your side...\" \n\nAnnie stops abruptly when she sees my expression, and Jon, who was watching her as she spoke, catches on a moment later. His face darkens into a disapproving scowl. \n\n\"You haven't asked her?!\" Annie's question ends so high, it's almost a shriek. \n\nI put my hands up as if to push them back. \"I - it's not like that. I want Sandra to keep the baby. I told her that. But she said she wasn't sure... she's still considering her options.\" \n\nJon shakes his head as if having trouble keeping up. Annie purses her lips and gives me a no-nonsense look. \n\n\"That is not what I asked. Let me repeat that: have you asked Sandra to marry you?\" \n\nI swallow hard. \"I told her I love her. I told her I wanted her and the baby in my life, always...\" \n\nAnnie scolds at me. \"Man, that bump on the head must have really gotten a couple of screws loose.\" \n\n\"I - what?!\" I stare at her, truly at a loss. \n\nAnnie gives me the kind of look one would bestow on the less fortunate, and explains slowly, as if speaking to a five-year-old: \"When a woman tells you she's pregnant, and you don't propose, what do you think she understands?\" \n\nMy belly drops. \"But - but I love her. She knows. I told her.\" \n\n\"She also knows you haven't asked her to marry you. Which must mean, you don't want to. Actions speak way louder than words, Dan.\" \n\nMy lips feel numb, as all the blood had drained from my face. \"But - but I do. I do want to marry Sandra. As God is my witness, I do.\" \n\nAnnie's face softens, and her voice is gentle even as she keeps pushing. \"Why haven't you asked her then, Dan? Why haven't proposed to her?\" \n\nI look down at my hands, and find them shaking in my lap. My throat is thick with emotion as the answer rises inside me, clear and bright as day, although I cannot say it out loud over the lump that blocks my vocal chords. \n\nBecause I'm not worthy. I'm not good enough for her. \n\nAnnie moves as if to come over to sit next to me, but Jon's hand on her shoulder stops her and she sits back down, looking questioningly into his face. He just shakes his head curtly, and then turns his eyes back to me. \n\n\"Whatever bullshit excuse you have to that, Dan, let me tell you: that's all it is. A bullshit excuse. Now the way I see it, this is really simple: you get a woman pregnant, you marry her. Then, you spend the rest of your life taking care of her and of your children. Seeing as you also happen to love this woman, this should be even simpler.\" \n\nI swear I can hear my own father's voice ringing through my best friend's words, and I know that, for once, he's right. \n\nProblem is, I'm not sure how Sandra would take it. \n\nThen again, there's only one way for me to find out. \n\nRaising my eyes to meet my best friend's stare, I nod slowly. \"What time do the banks open tomorrow morning, do you know?\" \n\nHe quirks his head, but answers. \"Eight thirty a.m. Why?\" \n\nI clear my throat. \"I - I'll need to get my mother's ring out of the safe deposit box.\" \n\nAnnie squeals and claps her hands before covering her mouth, belatedly realizing she could wake the kids up, and Jon smiles at me. \"Yeah, that would be a good idea.\" \n\n* \n\n* \n\n* \n\nAuthor's note: Did you like this chapter? Tell me, please! VOTE, FAVORITE and COMMENT :)"
    ],
    "authorname": "small_town_girl",
    "tags": [
        "bondage",
        "breast play",
        "toys",
        "spanking",
        "domination",
        "submission",
        "mdom",
        "fsub",
        "mature",
        "romance"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/hitting-the-bottom-ch-10"
}