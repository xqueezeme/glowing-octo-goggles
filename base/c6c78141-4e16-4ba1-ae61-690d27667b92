{
    "title": "Chords that Bind Ch. 15",
    "pages": [
        "My Dear Readers,\n\nSomeone requested a Valentine's update, which was entirely within the realm of possibility at the time when. (After all, we get some romance and intimacy in this chapter, even if it's not specifically Valentine's themed.) However, work got in the way. I hope you can forgive me for my tardiness. I had a lot of fun bringing these two together in this chapter. I can only hope you like it and understand that in reality, they're still getting to know each other in a lot of ways. Your votes, comments, and feedback genuinely make my day, so I'll thank you again for your support and for continued courtesy you do me by suspending your disbelief and not mentioning typos and comma placements. \n\nXoxox\n\n--Poetic License \n\n***\n\nThe next morning found James and Cecilia in bed well after 11 o'clock. It had been a late\u2014if glorious\u2014night. Cecilia woke to the steady, soft sensation of James's hands running up and down her back. It had to be the best way to wake up. James smiled as she rolled over to get her bearings. Then he gave her a tender kiss on the forehead. No\u2014that had to be the best way to wake up. \"How'd you sleep?\"\n\n\"Mmmmm... very well Sir. And you?\"\n\n\"Best night's sleep of my life,\" he said with conviction.\n\n\"Oh. Good. Last night was amazing. I hope...\" Cecilia trailed off.\n\n\"Yes?\"<br >\n\n\"I'd hoped it was a good evening for you too,\" she said shyly.\n\n\"It was a night never to be forgotten. Your trust in me was breathtaking. I'm so glad you chose me.\"\n\nCecilia didn't know how to respond. James stroked her cheek. \"I'm glad too,\" she finally said. James considered his feelings and rather than explaining them, he kissed her deeply.\n\n***\n\nLuckily, in Philadelphia, brunch is something of an all-day affair on the weekends. James took Cecilia to Honey's in Northern Liberties. Over world-class pancakes and La Columbe coffee, James laid out the rest of their stay in Philadelphia. They needed to return to Cecilia's apartment and sort which things she wanted to keep and have sent to England. James had two more performances and then they'd have a couple of extra days to pack her things up before James needed to be in New York.\n\n\"It shouldn't take long,\" Cecilia said. \"There's not much worth bringing back.\" Her voice caught though. She'd be leaving the city for good this time.\n\n\"Is everything alright?\" James worried she was having second thoughts.\n\nShe nodded though. \"It is. It's\u2014just a lot.\"\n\nJames nodded. He didn't know what he would do if she said she didn't want to leave. He didn't want to think about it, especially if he wanted to continue to think of himself as a gentleman.\n\n\"Clara and Abe will be excited you're coming back,\" he said to divert the subject.\n\n\"I don't know. They're probably glad to be rid of me.\"\n\nJames made a noise of disbelief into his coffee. \"Far from it. They wanted you to stay.\"\n\n\"Really?\"\n\n\"Yes. Why would you say that?\"\n\n\"Because, well they just kept saying how good it would be that I was going home...\"\n\n\"That's my fault. I told them not to interfere. I thought getting you here was what was best for you. But, they loved having you there.\" James paused, letting his own feelings on that score go unspoken. \"They didn't want you to leave.\"\n\n\"Should we let it be a surprise then?\" Cecilia looked at him conspiratorially.\n\nHe felt himself smiling. \"Alright then. It'll be good to see their faces. Although, it'll be hard to keep from telling them. Speak of the devil!\"\n\nJames's mobile buzzed on the table. Cecilia saw Abe's name flash on the caller ID. \"I'll call them back when we're done here.\"\n\n***\n\nThey drove back to Cecilia's apartment. James phoned Abe while Cecilia started sorting through the things she thought she would keep. Very few of her clothes\u2014most from her parents, and very frumpy\u2014made it into the 'save' pile. All of her books and notebooks were coming to England.\n\nJames came into her bedroom and looked at the heap of old clothes. \"Wow. Lot's to save?\"\n\n\"No. I'm tossing all of these. If I'm getting a chance to start fresh then I don't want these.\"\n\nJames noticed the bitter tone in her voice. \"I just told Abe that you were safely back where you belong, and that we parted on good terms,\" James cracked a smile. \"It sounds like Clara just had a spanking on your behalf.\"\n\n\"What?!\" Cecilia worried how she could have brought that on her friend.\n\n\"Apparently, Abe had quite a time telling Clara to be supportive of your returning home.\"\n\nCecilia was momentarily appalled that that was a spankable offense. \"What?\"\n\n\"I told you they didn't want you to leave,\" James said with a smirk.\n\n***\n\nThat evening Cecilia wore a sleek black cocktail dress to the Kimmel Center\u2014it was one of the few items of clothing from her old life that would be making it into this next chapter.\n\nShe didn't have a box seat this time and had a difficult time disguising her arousal at James's playing. It was exquisite, and Cecilia knew the piece well enough now to anticipate some pauses and phrases. She felt her damp panties and couldn't wait for James to finish. It seemed somewhat sacrilegious to rush such a piece and such a performance, but Cecilia was probably the only person in Verizon Hall to refrain from calling for an encore.\n\nFor his part, James played impeccably. After taking his final bow and walking offstage, the concertmaster came over again. \"Remarkable playing James. Perhaps tonight you'll join us for a late dinner. I'd love to meet the woman who replaced Natasha Dubnikov.\"\n\n\"Cecilia isn't a replacement. And I'd rather not discuss Natasha, Mark.\"\n\nMark, the concertmaster and first violinist, caught the tone in James's voice. \"That's only to say, I hoped you were feeling more sociable this evening.\"\n\n\"As long as you know that Ms. Dubnikov is an off-limits topic for conversation, then I think we'd be delighted.\"\n\nThis was one of the reasons why James chose a different venue for last night's dinner. His brief affair with Natasha wasn't one of his proudest decisions, and the musical community was still whirling with the gossip.\n\nMark smiled, \"Forget I mentioned her. Although, it seems to me the reports of her affect on your playing were overblown. If anything, your command these last few nights indicates that it was your affect on her that was the key to your 'Rachmaninoff Romance.'\"\n\nJames rolled his eyes at Mark's allusion to a magazine story featuring him and Natasha. Despite his nosiness into James's personal life\u2014which was more Natasha's fault than anyone else's\u2014Mark was perceptive. \"Let's just say that it wasn't meant to be, and that Natasha's affect on my playing is very different than the affect Cecilia has.\"\n\n\"That's fine by me. I thought we could go to Girasole.\"\n\n***\n\n\"Sir?\"\n\nJames looked up. (He never gave her rules for address, or any rules for that matter. She simply always referred to him by his title.) They'd just dropped off her boxes of books, DVDs, clothes, and sentimental items at Fed-Ex. Cecilia was right about sorting through her things. She wouldn't be bringing much back to England.\n\n\"Do you have a performance tonight?\"\n\n\"No, actually. We have a free night before going up to New York. Is there anything you wanted to do?\"\n\n\"I was wondering if you'd want to take a walk in Fairmount Park?\"\n\nJames smiled. He didn't know what he thought she'd want to do, but it was such a simple request. Natasha never made anything so easy. Neither did Josephine. \"I'd love to get outside for a bit.\"\n\nThey climbed into James's rental and drove north to one of Philadelphia's best-kept secrets.\n\nFairmount Park lined both sides of the Schuylkill River. One section was lined with idyllic boathouses for the university rowing teams, and the park itself was spacious and green.\n\nAfter a few late nights with some of the musicians from the orchestra, James felt content to be on his own with Cecilia. The evening with Mark and his partner Phil had actually been good fun. But the couple and a few of the other musicians in the restaurant were eyeing Cecilia with curious interest, and James didn't feel like sharing or explaining this new relationship, especially given the context of his most recent love affair.\n\nA walk in the park suited James just fine. The last vestiges of summer were fading into autumnal colors. Shyly, Cecilia held James's hand and they watched the sun sparkle off the water as the rowing teams practiced, speeding by with elegant motions. They spotted a hawk with a fish in its talons. Sometimes it was hard to believe there could be anything but people this close to the city, but a painter turtle basking in the late afternoon sun proved them wrong and surprised them again.\n\n\"I always wanted to take someone up here for a stroll,\" Cecilia said after a time. \"It's really pretty up this way. Thank you for indulging me.\"<br ><br >\"I wouldn't call this indulging you. If I'd known it was here I would have suggested it myself. I'm surprised this is what you wanted to do with your last night in town.\"\n\n\"What did you think I would want to do?\"\n\n\"I'm not sure. Maybe see your parents? Or some friends?\"\n\nCecilia's smile flickered. \"No. I don't want to see them.\"\n\n\"Can I ask why?\"\n\nCecilia didn't answer for a moment; James was about the change the subject. \"They- they might think they loved me once. But they've been lying about that for years, to me and to themselves. They liked the idea of me. But if I deviated from what they thought I should be... well, they weren't very kind then.\"\n\nJames knew there was something there, underneath the surface. He was surprised how familiar it sounded.\n\n\"When I went to college, I realized how much I hated the confines of my family. I'd never had any real freedom. They were manipulative and abusive. It just took me that long to see it.\"\n\n\"I'm sorry. You don't have to say more if you don't want to.\" James wondered if Cecilia would one day think the same thing of him.\n\nCecilia went on. Unable to stop now that she started, \"When I graduated, Dad told me I should try to be a secretary. After all that work and study, he still thought my degree was a waste. Maybe it was . . . I was working in a restaurant before . . . everything happened. I was never any good at numbers or math. He was an engineer. He wanted a boy, and when that didn't pan out he wanted me to be like him anyway . . . join the military, work in the applied sciences. He didn't want to pay for me to study philosophy or literature.\"\n\n\"I'm sure that's not true. You're capable of a lot more. You're incredibly bright Cecilia. He was wrong. And I'm glad you didn't listen to him.\"\n\nShe seemed to be recollecting her relationship with her parents and instead of looking at James, stared off into the distance. \"My mom was the worst though. Jesus, she could be mean.\"\n\n\"Did she- did she hit you?\" James wasn't sure he wanted the answer.\n\n\"Oh, yes. Usually, over cleaning something. She has a bit of OCD when it comes to cleaning. She also loved to scare away my friends. Any time I started to build a friendship, they would finally come over to the house, and she'd find a way . . . sabotage it somehow. The one time I stood up to her while my friend was over . . .\"\n\nShe shuddered and trailed off. James listened to this stream of conscience recollection with rapt attention.\n\n\"He always sort of told her to stop. Dad, I mean\u2014until the one day, when she didn't listen; he didn't do anything. She always got away with it. Right up until I left the house. Maybe if I wasn't such a disappointment, he would have made her stop.\"\n\nJames's free hand clenched into a fist. He didn't like how casually Cecilia tried to recount her mother's abuse or her father's failure to protect his daughter. She'd been through more than he'd initially understood.\n\n\"So that's why I don't want to see them. Besides, I don't know how I'd explain what this is.\" She motioned between herself and James. \"They have very set ideas on relationships and marriage. I couldn't begin to go through all of that with them.\"\n\nCecilia angrily wiped a tear off her cheek. James stopped walking. \"I'm sorry. You didn't need to hear all of that. I just- I just...\" Cecilia descended into an incomprehensible babble. He wouldn't want her now. She was too damaged.\n\nJames pulled her to him and held her protectively, feeling the tears soak through his shirt. He rubbed her back in large circles. His chin rested on top of her head. \"Cecilia, I want to know everything about you. I don't care about your parents or what they think, but I do care about you. Do you need to go back to the car? Or\u2014\" he didn't like this suggestion, but he said it anyway, \"or do you need me to leave you alone? Tell me what I can do.\"\n\nHis solicitous questions overwhelmed Cecilia. \"I don't know. Can you just keep holding me like this?\"\n\nThat he could do.\n\nHe sat them down on the grass and held Cecilia until the tears gave out. \"I'm sorry. I didn't mean to get all\u2014\"\n\n\"Shhhh. Stop apologizing.\" James kissed her forehead. \"It is going to be getting dark soon. We probably need to walk the other way back to the car. Want to get a bite?\"\n\nCecilia nodded.\n\nThey headed back to the car, which was parked behind the Art Museum without saying anything more. Occasionally, James would squeeze her hand in his own, and she would crack a weak smile. Her cheeks were red from crying, but this personal and emotional exchange made James feel like they had a connection beyond the first unlikely obstacles that brought them together.\n\nHe couldn't do anything about the things that happened in Cecilia's past, even the parts over which he took ownership, but he sure as hell was going to make sure she was never alone in that place of pain, loneliness, and shame again.\n\nThey ate at an English pub on Rittenhouse Square, because James suffered from a bit of homesickness. James told her some annotated stories about his time in Philadelphia when he studied at Curtis, leaving out most of his parents' role in discouraging him from playing. Cecilia saw through his version of events though, even if it was subliminally.\n\n\"Were your parents proud when the graduated from conservatory?\"\n\nJames looked down at his Yorkshire pudding. \"More or less.\"\n\n\"What did you play? For your final recital?\"\n\n\"Ravel's Left-hand Concerto, Rachmaninoff's Second Piano Sonata, and I also conducted selections from Elgar's Enigma Variations. That was a dedication to my Uncle Clive. He was the most excited when I completed my training. He was my first teacher.\"\n\n\"Didn't your family come to hear you?\"\n\n\"Clive did. My parents were in the continent and didn't want to fly all the way.\"\n\nCecilia hesitated. \"Will I meet them one day?\"\n\nJames took a pull on his Old Speckled Hen. \"I'm afraid they're dead. Clive died two years after I graduated conservatory. He had cancer; he was a fine organist and kept playing until he was in hospital. My parents never did approve of all that though.\"\n\n\"What about your parents?\n\n\"Car crash a year before that.\" Cecilia was surprised at how calmly he spoke about the loss of his family.\n\n\"I'm sorry James. I didn't mean to . . .\"\n\nHe smiled a bit sadly. \"Well, I consider myself lucky. Abe was the brother I never had, so I don't feel too sorry for myself. And there's Clara too. And you now.\"\n\n \n\n***\n\nEarly the next morning, James and Cecilia found themselves in 30<sup>th</sup> Street Station boarding the Amtrak to New York.\n\n\"I find I prefer to travel by train, even if it isn't always practical. Have you been to New York?\"\n\n\"Once or twice on school trips. Just saw the Christmas tree at Rockefeller Center and tourist stops.\"\n\n\"It's a shame I'll be performing both nights we'll be there. I'd love to show you the Met or the Guggenheim.\"\n\n\"I'd like that. Maybe you could show me the British Museum when we get back to London?\"\n\n\"You haven't been yet? I was sure Clara or Abe would have seen to it by now.\"\n\n\"No. They suggested it. Abe offered to go with me . . .but I didn't feel up to it then. I was afraid to leave the house.\" Cecilia partially admitted her depression after James left on his tour.\n\n\"I'd be honored to take you to see one of her majesty's jewels of the realm.\" The overly formal declaration made Cecilia laugh.\n\nThe train ride only took a little over an hour. James had them in a taxi and driving to the Meridien. Having company for the rest of his tour\u2014and such good company at that\u2014made James relish traveling again. Cecilia felt a bit worn out, having never traveled so rigorously before. James encouraged Cecilia to rest while he went to Carnegie Hall to practice and check in with his agent.\n\n***\n\nJames's agent Roger was good at his job. But because of this he could be somewhat overwhelming and, overall, James was happy to keep these in-person meetings infrequent.\n\n\"Now James, don't think I'm not grateful for all the extra publicity, but couldn't we have timed this business with Natasha a bit better?\" Roger's effusive American-ness was somewhat calmed by the atmosphere of the Lambs Club.\n\nJames balked at his agent.\n\n\"This is why I need you to answer my calls now and then. You agree to do a recording with Deustche Gramaphone one minute, and then the next Natasha's giving interviews\u2014without you\u2014saying it's all over before anyone could cash in!\"\n\nJames sipped his dirty martini and continued to take in his agent's complaints.\n\n\"Couldn't you have kept it going long enough to make the recording? I never have anything that good to work with. If you'd told me, I could have swung a deal with Steinway.\"\n\nJames heard enough. \"You never have anything that good to work with? Has something been lacking in my playing?\"\n\nRoger faltered. \"That's not what I meant. Of course not! If anything\u2014\"\n\n\"If anything, it's improved since I broke it off with Natasha.\"\n\n\"James, this whole tour has been marvelous. Really, but no one really cares outsi\u2014\"\n\n\"You certainly don't seem to,\" James bit back. He didn't like where Roger's head was on this.\n\n\"Now, James,\" Roger was indefatigable, \"You know I do. In fact, some of your recordings have seen a spike in sales. The old ones with Natasha, in particular...\"\n\n\"Roger! That publicity stunt was all Natasha. I don't make a habit of revealing my personal life. That's half the reason I left her. The case with her is closed. I don't think we'll be touring together anytime soon.\" James had had enough of Natasha's wiles following him. \"Consider this subject off-limits.\"\n\nRoger caved and pivoted. \"Right then. Well, thankfully, there's a visiting critic who gave you a glowing review in Philadelphia. I can work with that, I suppose.\"\n\n\"I'll have you know that was the best performance of my life, Roger. I hope you can work with that. But I will need some time off once I'm back in London.\" James's mind wandered to Cecilia. He had lots to catch up on with her.\n\n\"You're the boss, James.\" Roger could be obsequious when he sensed he'd pressed James too hard.\n\n\"I'm glad we understand each other.\"\n\n***\n\nJames returned to his hotel room with a large box tucked under his arm. The rest of his lunch with Roger went quickly, now that the man had his marching orders. James used the extra time to find something for Cecilia to wear tonight. He was surprised at his own selection. Something about it was playful, and he hoped that Cecilia would like it.\n\nCecilia was fast asleep on the king-size bed. He hated to wake her, but at the same time wanted to show her his surprise. He set the box down and bent over her: His very own sleeping beauty. It was amazing she could sleep so deeply. He took in this unguarded version and then kissed her cheek. And then her neck and jaw. She stirred, and James's kisses grew bolder. His lips found hers and coaxed her to consciousness. He smiled when she returned the kiss. \"Mmmm...\"",
        "\"You were sleeping so beautifully, I didn't want to wake you.\"\n\n\"That's a pretty nice way to wake up, Sir.\"\n\n\"I have something for you.\"\n\n\"What is it?\" Cecilia's eyes sparkled with curiosity. James presented her with the box. Her hand traced the embossed lettering, recognizing the designer's name. \"Is this for me?\"\n\n\"Well, I'm pretty sure it won't do much for me. Open it.\"\n\nAt first, Cecilia thought it was a tutu. The ballerina-pink tulle spilled from the box and Cecilia gasped in surprise. Underneath the knee-length skirt was a similarly colored camisole trimmed in with grey lace, and a grey off-the-shoulder sweater.\n\nCecilia took in the luxe fabric, self-conscious about what it probably cost. It was beautiful and feminine in a way she never dared to dress before. \"This probably would look better on a six-foot-tall model than it will on me,\" Cecilia said, trying to be self-deprecating.\n\n\"Nonsense. Do you like it?\"\n\n\"I do! Thank you, Sir,\" she said remembering herself. \"I just don't\u2014\"\n\n\"Why don't you try it on before you decide that? Go on.\"\n\nCecilia scooped up the box and headed toward the bathroom. \"Where are you going?\"\n\nCecilia looked at him and realized he expected her to change in front of him. Her cheeks flushed. He'd seen all of her, but she was still painfully shy. \"Oh. Yes Sir.\"\n\nShe pulled off her polo shirt and slid out of her jeans, keenly aware of James's gaze roving over her. Part of her wanted to sink to her knees with the way he looked at her. It wasn't fair that he was so devastating.\n\nShe donned the skirt, shocked that it wasn't too long or too wide. Often, she found clothes off-the-rack to be ill-fitting. This, however, hit just the right point on her body to be flattering. The camisole did make her look like a ballerina, and for a moment she wished Clara were here. She too, would appreciate it. The sweater criss-crossed over her front and settled in a flattering off-the-shoulder neckline. She looked in the full-length mirror and finally smiled. \"It's so pretty. Thank you.\"\n\nJames came behind her. \"You're welcome. I'm glad you like it. It looks perfect on you and I had a hunch you'd like. There's one more piece.\" James hoped he wasn't pushing his luck.\n\nIn his hand, he held what looked like a black velvet ribbon. He held both ends before Cecilia. It was a chocker with silver fastenings. \"May I?\" James looked inquiringly into her eyes in the mirror. Cecilia's reflection nodded back to him.\n\nBefore setting it around her neck, James gave her a penetrating look. \"Will you promise that you won't let anyone else take it off?\"\n\nIt wasn't a true collar, but James was willing to settle for a placeholder for now. He hoped he wouldn't scare her off, but he needed her to wear his token.\n\nShe nodded.\n\n\"Tell me, Cecilia.\" A gentle edge crept back into his voice.\n\n\"I promise. No one else will take it off.\"\n\n\"Not even you?\"\n\n\"Not even me, Sir\" she said solemnly.\n\nJames cock was raging. \"Good Girl.\"\n\nCecilia could tell this was significant to James, but bit back her questions. She felt him fuss with the clasp at the back of her neck until the velvet wrapped around her throat. It set off the rest of the ensemble perfectly. James kissed the back of her neck. \"Good girl,\" he repeated. He saw her questioning look, but decided to wait to explain his odd request.\n\n\"I'm going to get ready, myself. Would you join me for a pre-concert bite?\"\n\n\"I would love to. I'll finish getting ready too.\"\n\nJames didn't know what she else she had to do to finish getting ready. To his eyes she looked picture-perfect already. That is, until he emerged from his shower, dressed in his evening clothes. She pinned her hair in a top-knot, further emphasizing the velvet chocker. Maybe it was selfish, but he indulged his desire to revel in this particular fetish. Cecilia applied some makeup, using winged black eyeliner and scarlet lipstick to finish a glamorous throwback look.\n\n\"Wow,\" James couldn't help but say.\n\n\"It's not too much? Is it?\" James watched her cheeks color. She so easily doubted herself. It was one thing that she wasn't arrogant, but it was another for her to have such poor self-esteem.\n\n\"Not at all. It looks smashing.\"\n\n\"Thank you, Sir. You don't clean up too badly yourself.\" Cecilia loved his sharp evening clothes.\n\n\"Shall we?\"\n\nHe offered Cecilia his arm, and they left their hotel room.\n\n***\n\nSomething about Cecilia's eager gratitude made James want to share everything he knew with her; all the avenues of pleasure and enjoyment he'd discovered, he wanted to show her on a silver platter.\n\nJames already ate, but Cecilia was just short of starving. They walked a few short blocks over to the Plaza Hotel. \"Have you ever done afternoon tea?\"\n\n\"Clara and I had a cup of tea at Harrods once.\"\n\n\"Oh brill. Well, I don't do high tea often\u2014too sweet sometimes, but I'll give the Plaza its due. They do it properly here.\"\n\nJames ordered a pot of earl grey and a series of savory and sweet creations. When they'd both fixed their tea to their liking, (James with milk, Cecilia with honey and lemon) he fixed her with a penetrating stare.\n\n\"What's going on in that head of yours? You look pensive.\"\n\nUnprepared for such an open-ended question, Cecilia stalled. \"Umm... not a lot, really.\"\n\n\"I doubt that. A lot's happened in the past few days...\" Objection. Leading the witness! James thought to himself, but encouraged her all the same.\n\nFor a moment, as the waiters delivered multi-tiered plates laden with dainty bites, Cecilia allowed herself to acknowledge just how unlikely her present situation really was.\n\n\"Cecilia?\"\n\nThe sound of her name on his lips brought her back. \"Yes Sir?\"\n\nHe smiled. \"You manners are one of the most charming things about you. I won't pretend to dislike it, but when we're out there's no need to stand on ceremony.\"\n\n\"Isn't there? Abraham told me you were a knight.\"\n\nJames wasn't sure if she was that innocent or if she was flirting. \"That's true. But\u2014\"<br >\n\n\"I'd hate to break the rules.\"\n\n\"Does that worry you?\" James's exuberance at laying claim to her had blotted out peripheral concerns. Like protocol. And how she was to address him. Now he hated to think he was causing her anxiety.\n\nHer silence was his answer.\n\n\"Cecilia, I'd never hurt you over something like that. You do know you're safe with me, right?\"\n\n\"Oh yes.\" She looked up from her teacup. \"I do. I'd just hate to be a disappointment.\"\n\nJames reached across the table to take hold of her hand. \"You could never be. But if you're worried about something you should tell me. Yes?\"\n\n\"Yes, Sir.\" Cecilia smiled. She took a bite from a picture-perfect tea sandwich.\n\n\"Do you know why I asked you to wear that chocker?\" James asked after she savored another bite.\n\nCecilia felt her cheeks burn. She could tell it was important, but . . . \"No Sir,\" she answered softly.\n\nHe exhaled. \"I didn't think so.\"\n\nShe looked down, feeling like she failed a test.\n\n\"Cecilia, look at me.\" She did, and James held her gaze. \"Stop behaving as if you've done something wrong. If anything, I'm the one who's been unfair.\"\n\n\"Why?\"\n\n\"Because you're wearing my token, and I haven't explained what it is or what it signifies.\"\n\nCecilia touched the ribbon around her throat. \"What does it mean?\"\n\n\"Well, it's a rather temporary one,\" James amended. \"But once we're home, I'd like to find you a permanent one.\" Cecilia looked at him confused. \"I want you to wear my collar, Cecilia.\"\n\n\"Like a leather one with buckles?\" her eyes were wide with disbelief. She looked around as if afraid someone would hear their conversation.\n\n\"No, no, no. Not at all.\"\n\n\"What do you mean then?\"\n\n\"You're imagining a restraint, which has its utility, no doubt . . .\" James rather enjoyed that mental image. \"When I say I want you to wear my collar, I mean a sign of my\u2014of our\u2014commitment. Typically, it's a chocker or necklace, a visible sign that you belong to me. But something you can wear in mixed company.\" James explained this as evenly as he could, but he couldn't resist adding, \"I'd prefer if it wasn't easily removed.\"\n\nJames had a way of saying these things that made them seem so alluring, and so\u2014natural.\n\n\"And this,\" Cecilia motioned to the velvet ribbon, \"is meant to\u2014\"\n\n\"Consider it an interim. I should have told you first.\" James took a shaky breath. Had he badly misjudged Cecilia's willingness to belong to him? \"You don't have to accept it, or keep wearing it. But, you should know that I don't just collar girls as a passing fancy.\"\n\nCecilia held her breath as James continued. \"A collar is a definite commitment. If you aren't ready for that, I understand.\"\n\n\"So that's why you asked me not to take it off?\"\n\n\"Yes.\" It was time to lay it bare. \"I've been wanting to see you wear my collar for a long time. I should have been more forthcoming about its significance.\" That was it. He was going to loose her because of his juvenile eagerness.\n\n\"Do you regret putting it on me?\"\n\nThe answer to that question depended largely on weather or not Cecilia was scared off by his impulsive decision. It was too soon.\n\n\"Because now that I understand,\" she continued and James praised the gods for rhetorical questions, \"I think, I rather like that idea. What do you mean when you say you don't want it easily removed?\"\n\nHearing that she wasn't averse to wearing his collar, James quickly answered her: \"Just what I said. I wouldn't want you to be able to take it off. It's no small symbol: people who understand the lifestyle would recognize that you are taken.\"\n\n\"What about everybody else?\" Cecilia was so fascinated by this idea she didn't filter her thoughts.\n\n\"We'd come up with something discrete. No one who doesn't understand would see it as anything beyond a unique piece of jewelry.\"\n\nJames smeared a scone with some clotted cream and waited for her reaction.\n\n\"Does Clara have one?\"\n\nJames hadn't expected that. \"She has a silver chain she wears often. The pendant is a key with her and Abe's initials. However, she has to be able to take it off; it's not practical with her dancing career. But she would consider herself to be collared to Abe, as well as his lawfully wedded wife.\"\n\n\"And what does that make me?\"\n\nShe wasn't shying away from the heavy questions. James couldn't mince words any longer, \"That would create an understanding between us that you are mine. Exclusively.\"\n\n\"Yours?\"\n\n\"Yes.\"\n\nAt that Cecilia stopped over-thinking her words. \"Would I have rules?\"\n\nJames felt possession rise to the surface. She hadn't refused him. \"You already do.\"\n\n\"Oh. W-what are they?\" she was suddenly afraid.\n\nJames knew he had her. \"You have nothing to worry about. You're already so well-behaved. I expect good manners and decorum. I also expect your obedience, honesty, and respect.\"\n\nCecilia visibly relaxed. All of this was well within the scope of their usual interactions.\n\n\"I also will expect that you surrender yourself to me: body and mind. You'll give me access to any and every part of you, including your modesty, your most intimate secrets, your desires, and your pleasure.\"\n\nCecilia shivered. She recognized that she'd already started to give herself over to him the way he described. It made her grateful to wear his collar.\n\n\"What if something goes wrong?\" Cecilia asked before her courage left her. She gulped her tea.\n\n\"What should go wrong?\"<br ><br >\"What if I break the rules? Will you take your collar back?\"<br ><br >She was afraid of him changing his mind? \"I can't imagine you could do anything to warrant being released.\" It was such a strange phrase to Cecilia, but James wasn't finished. \"If you were to displease me in some way, you would be punished\u2014spanked more often then not\u2014but the whole point of a collar is that it binds both parties. The submissive trusts that her dominant will honor her, just as I will trust you to be true to me. A breach in protocol isn't enough to violate such a commitment.\"\n\nCecilia felt the weight of what James was saying. His collar was his promise; James kept his promises.\n\n\"I know it seems fast, and given . . . the unusual circumstances . . . You don't have to decide yet.\" James paved the way for her to let him down gently.\n\n\"No,\" Cecilia felt the chocker again. \"I do. I do want to wear it. I won't take it off.\"\n\nJames felt his heart leap. He leaned over and kissed her. Propriety be damned. It was possessive and demanding and entirely inappropriate for afternoon tea. Too soon, he broke the kiss.\n\n\"You don't know how glad I am to hear that,\" he whispered in her ear. Then he took her hand in his and brought it to his lips. His cock was uncomfortably hard. He couldn't wait to take her again. But they would have to wait until after his performance. He was another step closer to cementing her place in his life.\n\n<br >\"You must have other questions running through that head of yours,\" he prompted.\n\nThis time Cecilia didn't play coy. \"What else will you require of me, Sir? Is there more I should know about pleasing you . . . physically?\"<br >\n\nGods. James wanted to cancel the performance and demonstrate exactly what he'd require of her. \"A great deal I'm sure. But, for now, perhaps it would be more . . . timely to discuss how I expect you to behave in mixed company.\" <br ><br >Cecilia squirmed. Yes. That was a more appropriate topic. The two finished their tea chatting about James's various professional obligations and the finer points of etiquette he expected her to maintain.\n\n***\n\nOver the course of their afternoon tea, Cecilia felt a shift between herself and James. After finishing all the delicacies, (and learning the joy of fresh orange marmalade) they walked hand and hand to Carnegie Hall. James's strides had a crisp eagerness to them, and Cecilia nearly skipped along beside him.\n\nCecilia had never been to the iconic venue and James enjoyed the view through her eyes. \"I hope you don't mind. I didn't get you a ticket.\"\n\nCecilia refocused on him, somewhat confused.\n\n\"I thought maybe you'd like to watch from backstage. It's not a full orchestra tonight. It's a series of Bach piano and chamber pieces.\"\n\n\"Oh! Really? Am I allowed back with you?\"<br ><br >\"You are, if you're with me.\"\n\nCecilia smiled, trying to hide her sheer delight.\n\n\"I'm soloing on the Goldberg Variations, and accompanying a flautist on the flute sonata in B minor, but after that it's a solo violin piece, and I'm not sure I can stay away from you that long if I'm not actually playing the whole time.\"\n\nJames looked at her with undisguised lust. Cecilia wondered if the change she detected was James asserting more of his own dominance or if she was more aware of his natural tendencies now that she understood his ultimate desires better.\n\nShe allowed him to lead her through the immense space. They had another 45 minutes before the hall opened its doors to the public. Once in the backstage area, Cecilia immediately felt out of her depth. Small clusters of musicians were filing out of the rehearsal space. A group of stage managers and sound engineers moved with great purpose. A very tall and gaunt man walked towards James, who reached out to shake the man's hand. \"Emile. Are you ready for tonight?\"\n\n\"Of course,\" Said the gangly French flautist who was to perform with James. \"But it is I who should be asking you. After all, you're the one who's filling in on short notice.\" He said this as an aside to Cecilia, as if they'd long been friends and were in on some joke together.\n\n\"Emile, allow me to introduce Miss Cecilia Alejandra Lavigne, my girlfriend.\"\n\nCecilia's eyes flashed brilliantly at James's words. It wasn't often that anyone introduced her so formally, but when she heard the word \"girlfriend\" pass his lips she nearly swooned.\n\n\"It is a pleasure to meet a beautiful fellow countryman\u2014or woman rather. Where in France are you from cherie?\" Cecilia couldn't help but like the man's friendliness.\n\n\"The family is from Alsace as I understood it. But I'm not sure about much beyond that.\"\n\n\"I'm partnering with Emile for the flute sonata,\" James explained. \"His usual pianist was unable to make the performance due to illness, so I'm filling in last minute. Luckily, I love that piece, so it didn't take too much effort to get it back into my fingers.\"\n\n\"Shall we warm up?\"\n\nEmilie proceeded to assemble his flute while James spread out the sheet music, leaving Cecilia momentarily alone.\n\nA stagehand pushed a tall stool up to the stage edge and motioned to Cecilia. \"Here's the best seat in the house.\" Without another word he was gone, but she perched on the seat and listened to Emile tune his instrument. They went over a few spots in the sonata together, and then, before they knew it the house was opening. James came over to Cecilia and gave her a peck on the cheek. \"Enjoy. I'll come back to listen to the rest when I'm done.\"\n\n\"Yes, Sir,\" Cecilia was breathless at the idea of hearing James play again. Every time he played a note she thought she'd never hear anything so beautiful... but then James would play something else and outdo her expectations.\n\n\"Right, I've got to work. Be good.\" He stroked her cheek and smiled. What a different side of James she was seeing from the distant man she'd known before now.\n\nThe sonata James played with Emile also had a different character from the brooding Romantic pieces Cecilia was used to. Emile's flute felt airy and light. It didn't have the same devastating quality, but it made her smile and it seemed to fit Emile's open and easy personality well. Cecilia didn't recall ever hearing this piece before, but James's playing had an effect on her regardless. She hugged herself, aware of her breasts and their tender buds. The piece frolicked and gamboled as the melody became ever harder for Cecilia to hold on to. It made her feel so much more in the moment, to hear a piece for the first time and also to still have such a visceral reaction to James's playing.\n\nAt the end of the sonata, Emile bowed and politely walked offstage. The audience enthusiastically applauded. Emile walked to Cecilia. \"Well, I think that was well received, don't you cherie?\" his voice was low, making his accent more noticeable.\n\n\"I liked it. That was the first time I've heard that music.\" She whispered back.\n\n\"Thank you. It was good of James to fill in. We would have had to cancel my contribution tonight if he hadn't been able to pull it off. But the main attraction is actually James. He's got the Goldberg Variations,\" Emile said as the audience quieted. \"I don't know how he does it. Granted, he used sheet music on the sonata with me because he didn't have time to memorize it, but he has memorized the variations. That's immense concentration.\"\n\nOver at the piano on stage, James felt differently. He never took a break from playing them. They were a part of him, part of the music he heard even when he wasn't practising or performing. He'd internalized Bach's writing until it revealed secrets. The flute sonata with Emile was a surprise, but well within his capabilities and it was nice to connect musically with another musician who didn't hold opinions or untoward insight on his personal life.\n\nJames closed his eyes, breathed deeply and started Bach's masterpiece.\n\nJust off-stage, Cecilia's head turned sharply in the direction of the piano. She knew this piece. The title \"Goldberg Variations\" meant little to her, but the tinkling opening lines and careful melodies were instantly recognizable. She'd first heard the variations in her captivity, then as she recovered. This was the first time she heard the title and connected it to the steady meditative strains.\n\nHer body recognized the piece almost before her ears did. Every time she heard these melodies from her captivity she doubted herself. But they were beautiful and James's flawless command kept her from casting the music aside.",
        "Emile watched the girl's reaction to the piece's start. He could see why James was enchanted. She really listened. He could see how invested in the piece she was and he could tell that she no longer had any attention to spare for anyone else. He pulled his flute apart and put the instrument away, giving her space to absorb the baroque music.\n\nJames was tantalizingly out of reach. Cecilia hadn't been this close to him while he played since offering herself to him in his studio. Sitting with the audience in Philadelphia for James's memorable performance at the Kimmel Center was special, but this music had such gravity for her. The Pathetique was her favorite, mostly because she couldn't associate it with her kidnapping. But she first heard the Variations when she was held against her will and tormented. Now though, the music was becoming dissociated from that first awful introduction. Certainly, her whole body ached with want as James's fingers spidered their way across the ivory keys. She hungered for his attention, knowing enough to know he'd be pleased with the building moisture between her thighs.\n\nSomething about the way James explained wanting her to wear his collar made her less embarrassed about the fact that right now all she wanted to do was kneel at his feet. Every note, every resolved cadence, made Cecilia more aware of her physical self. Her eyes closed and instead of remembering humiliation and discomfort she recalled James's tight grip on her as he took possession of her. The feel of his stubble on her sensitive skin, his tongue exploring her mouth, his voice demanding to hear the things she was desperate to admit. When she opened her eyes at a jarring change in tempo, she was thankful that James was helping her to rewrite her understanding of her responses.\n\nForty minutes of perfect piano playing later, James smiled as he finished the piece with the same strains he began with. He let his breath out in a rush, then smiled to stand and take his bow.\n\nIt did take superhuman concentration to perform like that for almost an hour, but the look on Cecilia's face as he walked in her direction offstage reinvigorated him.\n\nHer hazel eyes locked on him. The way she wrapped her arms around herself lifted her breasts and emphasized her cleavage. It made James wonder if he could discretely leave the concert now that he'd played his part.\n\nCecilia felt her heart beat harder. All she wanted was for him to touch her, kiss her, any contact at all. She stood up from the tall stool and lost the advantage of height. James looked down on her and gave into their mutual desire.\n\nJames sensed an urgency in the way she deepened the kiss, offering more and more, silently begging for him. It took him back. She wasn't usually so assertive, not that he didn't enjoy her opening up more and more.\n\nHe breathed into her ear, \"I take it you enjoyed the performance?\"<br >\n\n\"Oh yes, Sir. Very much.\"\n\nShe almost said more, but stopped herself. Emile appeared next to her, smiling knowingly at James. \"Magnificent as usual, James. And not bad for an Englishman.\" James took the jibe in stride. \"I'd say your performance was quite good for a Frenchman as well Emile.\"\n\nThere was a flurry of activity backstage as the piano was being moved during intermission. The last performance of the evening was solo violin. \"Cecilia, do you play?\" Emile asked.\n\n\"Music? No S\u2014,\" she caught herself just before her habit of answering direct questions with 'sir' created an awkward moment. \"No, I sang in church choir, but I'm not really a musician.\"\n\n\"I'm jealous James, I can never find a woman who listens as intensely as Cecilia does, unless she's also a musician and then the magic is gone.\" Emile lamented.\n\nJames only had eyes for Cecilia, noticing the attractive flush rise to her cheeks and the tendrils of her hair that escaped her bun. \"Emile, what does Carine think about you fawning over non-musical women?\" James stroked the back of Cecilia's neck, distracted and not really listening to Emile's answer: \"I think she would agree that good listeners are hard to find.\"\n\n\"What would I agree to dear?\" A tall woman seemed to appear out of nowhere and her deep voice shook Cecilia back to the present. She'd been floating off somewhere as James hands crawled over her neck and shoulders.\n\n\"That James has found a rare jewel, indeed, with Cecilia here: she listens as if the fate of the world rests on every note. But she doesn't play music herself. Valuable, no?\"\n\nCarine's accent was more pronounced than Emile's. \"Cecilia\u2014is it? Excuze my 'usband. I zink he 'as finally gotten sick of my playing.\" She leaned over to kiss both of James's cheeks in greeting. \"When 'e asked me to marry him, 'e said 'e could listen to me forever... But it's nice to know someone is listening zat appreciates my playing.\"\n\nCecilia first thought Carine was angry with her for Emile's flirting. But when Carine saw the worried look on her face, she barked out a deep laugh. \"Not to worry dear. It's an old joke we 'ave.\" She kissed Emile affectionately on the cheek.\n\n\"I zink it's time. I'm glad to see you're back to your senses though James. We will 'ave to talk after 'zis.\"\n\nWith that, Carine walked on stage, giving James no time to respond. That was when Cecilia realized she was carrying a violin. Intermission was over.\n\nJames felt it'd be rude to leave during Carine's performance. He sighed and stood behind Cecilia, wrapping her in his arms. The spotlight dramatically centered on Carine, who took up her bow and pulled it almost violently across the strings of her instrument.\n\nCecilia gasped. She knew this piece too. This was the piece she only knew by its emotion. It sounded angry and she felt her core twitch. This piece, too, held all the tragic memories that brought her to James. She nearly jumped as Carine pulled on her bow again, powerfully creating energy and rhythm that surpassed what should be physically possible on a single instrument.\n\nJames felt Cecilia's body tense up and heard her intake of breath. \"Something wrong? Are you okay?\"<br ><br >\"Yes Sir,\" she said as softly as she could. \"It's just\u2014I know this piece. From before.\"\n\nJames felt like an idiot. Of course she did. He remembered laying eyes on her in a video, watching her climax to the music Carine was currently playing. \"Do you need to go? We can leave.\"\n\nHe could feel her pulse beat faster. \"No. We can stay. It's better this way.\"<br >\n\nJames tugged her away from the stage. \"What's better this way?\"\n\nJames wore a look of deep concern in his eyes. Cecilia didn't know how to explain the odd healing she felt. \"I like hearing the music and\u2014separating it from what happened before.\"\n\n\"I didn't mean for you to\u2014\"\n\n\"No, James, I'm alright. I wouldn't want you to leave on account of me. They're your friends.\"\n\nShe was too considerate. James stood trapped in indecision.\n\n\"When I hear these things, and I'm safe, and you're with me... It helps me\u2014to forget all of that. To move on a bit.\"\n\n\"Are you sure? They won't mind.\"\n\nCecilia considered that if they left, she could be alone with James, but she wanted to prove to him, and to herself, that she could cope with hearing the music. She honestly did like it and she felt like it would be some sort of defeat if she never listened to it again.\n\n\"Yes, Sir. Let's go back.\"\n\nJames almost overruled her. But she seemed determined and he didn't want to undermine her agency in this.\n\nHe followed her back to where they stood before. He held her closer though, as if waiting for the specters of her bad memories to appear before them.\n\nCecilia leaned against James's protective arms, wondering about her own resolve. Carine's playing was charged; it was such an emotional thing to listen to and to remember. Despite her misgivings and a few tears that welled up in her eyes, she felt the erotic desire resurface. James's kisses and affectionate touches during intermission made her want more, and this music pushed it further. She squeezed her legs together, hungry now that James was here, desperate because there was nothing they could do in this position, and she just insisted she'd be able to stay for this performance.\n\nCecilia nuzzled his arm and James couldn't help but press a kiss to her temple and then trail a few more down her neck. He traced the velvet collar with a finger. Cecilia encouraged him, turning her head and exposing more of her neck. She reached her hands over James's guiding his hands over her curves and simultaneously encouraging him to hold her tighter.\n\nIt was indecent, but with the instinct to protect Cecilia running strong, James felt a primal compulsion to remind her that he had her, he owned her, and no one would harm her again.\n\nHis left hand snuck under the soft grey sweater and his right fought with her tulle skirt until he squeezed her bottom possessively. \"Mine.\" He growled. <br ><br >Cecilia closed her eyes, hearing the music in the back of her mind, but zeroing in on James. \"Please,\" she begged in a whisper, and then gasped as she realized she said it out loud.\n\n<br >James squeezed a breast and suppressed a growl. Then he regained control. They were backstage at Carnegie Hall, and he was acting like a randy schoolboy. He pulled his hands away, and Cecilia looked at him like she was being punished. \"Be good, Cecilia. Not here.\"\n\nShe nodded her understanding, but he saw her eyes were glazed and dilated. Then he understood.\n\n\"The music drives you? Doesn't it?\"\n\nPart of her desire was triggered by the music. His own desire confronted him with unwavering rigidity.\n\n\"Yes Sir.\" She looked down. James wouldn't have that, and let his dominance assert itself. With a finger, he tilted her chin back up, and let her see the desire in his own eyes. His voice gave him away too, throaty and low:\n\n\"I intend to enjoy you as soon as we get out of here. Until then, I want you to focus on the music and think about how you're going to please me.\"\n\nCecilia was made for him. All the reasons he'd come up with over his months of self-imposed denial fluttered away. Her shyness compounded with her arousal at the sound of music made her delectable. He was sure her panties were wet and that she was obediently thinking of different ways to appease his appetites. Although, if he was going to get through Carine's performance and the obligatory after-concert small talk, he was going to have to think of England.\n\nHe never meant for Cecilia to have all this happen to her, but he would take responsibility for it. If he was the reason for it, then it was only right that he should be looking after her comfort and happiness. The excuses sounded flimsy, but after seeing Cecilia's bodily response to the music, to him, to being his, he found it impossible to continue denying them both. James endured the last ten minutes of the performance, thankful that Carine pushed the tempo on the piece.\n\nCecilia's mind followed James's instruction with no further prompting. She recalled her fantasies of James and flipped through different arrangements, wondering which would please him the most. A small bit of her balked at the idea though. She wasn't sure she was brave enough to admit these naughty things to him.\n\n***\n\nEmile probably noticed the less-than-subtle displays of affection during Carine's performance, but he said nothing as James made excuses, turning down a late supper with him and Carine. \"Tomorrow,\" he promised.\n\nFinally, James extricated himself from the knot of people backstage. He led Cecilia out of Carnegie and they hurriedly made their way to the hotel. He controlled himself just long enough to get into their suite.\n\n\"Were you a good girl, Cecilia?\"\n\nShe didn't know how to answer that. She felt like she'd been a very naughty girl when it came down to it. But she could tell that he had all his dominant energy directed toward owning her submission. She kept silent.\n\n\"If you won't answer me, I'll have to assume you've been bad. Is that true?\"\n\n\"N-n-no Sir.\"\n\n\"So you've been thinking about how you'd like to please me?\" he prompted.\n\nIt was one thing to think these things, but another thing altogether to say them out loud. She prayed he wouldn't make her say what she'd been thinking. \"I have,\" she hedged. Why wouldn't he just take her? She wanted him to.\n\n\"'Sir,'\" he reminded her. \"You're usually so good about that Cecilia. That's not like you.\" James couldn't help it. He wanted to trap her, and she seemed so willing.\n\n\"I have, Sir,\" Cecilia amended.\n\n\"And what, pray tell, did you come up with?\"\n\n\"Umm, sir\u2014I-I can't tell you.\"\n\n\"And why not? Are you lying about the easy task I gave you?\"\n\n\"No Sir, it's just, I'm afraid... of what you'll think.\"\n\n\"Cecilia, that lovely modesty you wear like amour belongs to me. Isn't that right?\"\n\n\"Yes Sir,\" Cecilia wondered how long she could continue to stall.\n\n\"If you won't tell me I'll have to assume you were a bad girl after all. Do you know how I deal with bad girls?\"\n\nShe was afraid of answering wrong. \"No Sir.\"\n\n\"Can you guess?\"\n\n\"Maybe.\"\n\n\"That's the second time you've forgotten how to address me Cecilia. How do you think I handle bad girls?\"\n\nShe felt more and more nervous about how this was going to unfold. She hugged her arms around her waist. James continued his interrogation as he divested himself of his jacket, vest, tie, and cufflinks. Then he started rolling up his shirtsleeves and Cecilia knew.\n\n\"Sir, are you g-going to spank me?\" She shivered and couldn't tell if it was a good or bad one.\n\n\"Very good Cecilia. That's exactly what I do with bad girls.\" James cock thrilled at the prospect. He'd wanted the woman before him over his knee, but she'd never been less than perfectly behaved. How interesting it was that now she provided him with the opportunity. He sat on the edge of the bed. \"Come here.\"\n\nCecilia stepped forward. He really would spank her if she didn't tell him her dark fantasies. \"Are you sure that you can't tell me what you thought about for the rest of the concert?\"\n\nMe, on my knees for you, wearing nothing but your collar...\n\n\"Y-yes Sir.\" She couldn't. It was too humiliating. She'd rather him just tell her what to do. She could handle that.\n\nJames considered her. She really was so innocent. And her submissive streak ran strong. By refusing to tell him, she was putting him in full control. \"Then I'm going to have to give your bottom a sound spanking.\" James pulled her closer and guided her over his lap. Her tulle skirt poofed up, inviting him to flip it all the way up and reveal her pale pink panties.\n\nCecilia forgot what a humiliating position this was. Why did she think this was the preferable outcome? She knew that James was safe. He'd proved that over and over, but it seemed like he'd tricked her into choosing this punishment.\n\nHis hand slid down her thighs as James admired her rear. Gorgeous. \"Cecilia, do you know why you're getting a spanking on your cute little bum?\"<br >\n\n\"Yes, Sir.\"\n\n\"Tell me.\"<br ><br >\"Because, I've been bad.\"\n\nSMACK!\n\n\"Oh!\" she gasped. He caught her off guard.\n\n\"Because you aren't being forthcoming, Cecilia. And if you can't tell me how you'd like to please me, I'll have to conclude you lied and didn't listen to my instruction.\"\n\nCecilia felt James's erection. \"You don't get to keep those dirty fantasies from me Cecilia.\"\n\nWithout further lecturing, James brought his hand down on her ass. It showed a pink, matching the color of her panties momentarily. He didn't spank her very hard. This wasn't a true punishment.\n\nHis hand came down a few more times, and then he peeled away her last covering. \"Oh dear.\" He had all the evidence he needed that she responded well to his control. \"It looks like you did enjoy the concert. Or are you enjoying your spanking? Hmm?\"\n\nCecilia was glad James couldn't see her face, bent over as she was. She whimpered.\n\n\"That's not an answer Cecilia.\"\n\n\"Yes Sir.\"\n\n\"Yes what?\"\n\n<br >\"I enjoyed the concert.\"\n\n<br >\"And what about your punishment?\"\n\n<br >She couldn't say that. \"No Sir.\"<br ><br >She felt his finger probe her wetness.\n\n\"Interesting. We'll see.\"\n\nThen his hand came down again.\n\nSMACK!\n\nSMACK!\n\nSMACK!\n\nSMACK!\n\n<br >James alternated between her left and right cheeks, placing firm, even strokes and bringing more color to her pale skin.\n\n\"When I give you an assignment Cecilia, I expect you to carry it out. You wanted to know about my other rules earlier. That's one.\"\n\nSMACK! SMACK! SMACK!\n\nThe warm up was over, and James added just a bit more force to the spanks, still holding back a considerable amount.<br ><br >\"When you're bad, you will be spanked or punished however is most fitting to the crime.\"\n\nSMACK! SMACK! SMACK!\n\nCecilia bit her lips to keep from crying out.\n\n\"I expect you to give me total access to your body when I see fit.\"<br ><br >SMACK! SMACK! SMACK!\n\n\"Do you understand?\"\n\n\"Yes Sir,\" she choked out. How was he maintaining his composure like this?\n\n\"You are not to play with your little pussy.\"\n\n\"Yes, Sir.\" Cecilia's cunt wept. She figured as much, but hearing him say it made her want to come so badly.\n\n\"I also expect you to continue asking permission to come.\"\n\n<br >\"Yes Sir!\"\n\nSMACK! SMACK! \"Good girl. I expect you to swallow my come when you service me with that pretty mouth.\"\n\n\"Yes Sir.\" She felt her bottom begin to blaze with heat. Did he know that she wanted to please him that way? She ached for him to be inside her, but was humiliated by the desire.\n\nSMACK! SMACK! SMACK!\n\n\"I expect you to behave like a lady when we're out. When we're alone, I expect you to be a wanton slut for me.\"\n\nHer ass stung and she didn't know how long she could keep from covering her bottom or kicking out at the pain. Cecilia felt his finger delve between her thighs. She felt like a wanton slut right now. The pain melted away at the contact. She wanted him to make her come.\n\n\"You're so wet Cecilia. I think you are enjoying your spanking.\"\n\n\"Mmmm... Yes Sir.\"\n\nJames was shocked she admitted it. \"That's my girl. You like this don't you?\" He rubbed her red cheeks.\n\n\"Yes Sir,\" she whimpered. How would she look him in the face again?\n\nThen he took his hand away from her pussy.\n\nSMACK! SMACK! SMACK!\n\nCecilia did kick out this time. \"Owww! It hurts!\"\n\nJames wrapped his leg over hers locking her in place. \"You're not done yet.\"\n\nCecilia had trouble holding herself up. Her arms were getting tired.\n\nSMACK! SMACK! SMACK! SMACK!\n\n\"You have ten more left Cecilia. You're going to count them for me.\"\n\nIt was so like, and yet so unlike her time in captivity. She saw and felt all the similarities, but this wasn't going through the motions. This was real. Instead of terror and fright, Cecilia began to understand the depths to which James was capable of taking her.\n\nEverything before now was a pale imitation. Bent over James's knee, overwhelmed with sensation and intuitive communication, Cecilia surrendered her pride.\n\nSMACK!\n\n\"One Sir.\"\n\nSMACK!\n\n\"Two Sir.\" Cecilia felt his blows land with more strength.\n\nSMACK! James thought it would be wise to let her have a taste of his full strength. Her voice struggled to maintain some sense of calm as she gasped.\n\n\"Three Sir, four Sir, five Sir.\"\n\n\"Cecilia, when I finish with your spanking I expect you to tell me exactly what you were thinking about.\"\n\n\"Answer me, Cecilia.\" SMACK!\n\n\"Oh! Six! Yes Sir.\"\n\nIt was starting to push past her threshold for pain. Tears started welling up in her eyes.\n\nSeven, eight, nine, and ten were hard for her. James soothed her red bottom for a moment, taking some of the bite of the sting. He let her collect herself, before saying: \"It's time to tell me these secret thoughts Cecilia.\"\n\n\"Sir... I- I- I- want you to... tie me up. And I want you to have your way with me\u2014\"",
        "James considered her request. \"Hmm... I don't have any rope, but I think\u2014\"\n\n\"After... after I use my mouth...\" she trailed off. Then suddenly \"Mmmhhh!\"\n\nJames toyed with her wet folds and felt his cock twitch at her suggestion. \"Good girl.\" She moaned again as he flicked her clit. Then he helped her to stand up.\n\nHis innocent Cecilia looked as though she'd fought back tears. She bit her lip, her face nearly as red as her bottom. Her skirt fell back into place, and she looked very chastised indeed.\n\nJames waited a moment to see what she would do. \"I also expect you to thank me for your punishments, Cecilia. After all, they are for your own improvement,\" he said flatly.\n\n\"Thank you punishing me, Sir.\"\n\n\"Good girl. Now. As beautiful as you look, I want to look at you with no hindrances.\" He smiled at her; he wanted to encourage her. Everything about her was uncertain and while it had a stunning effect on her overall, he didn't actually want her frightened. He wanted to refine the training she'd received\u2014if you could even call it that. The effect was evident, but he wanted to guide her into a tranquil submission that enjoyed. She would give him everything because she wanted to.\n\nSlowly, Cecilia pulled her grey sweater off. Her face was already flushed, but then her chest colored too.\n\n\"Keep your eyes on me.\" She nodded and unzipped her skirt, revealing her bare mound and buttocks. Next came her camisole and bra.\n\nJames groaned. She stood in nothing but the black velvet collar: a fantasy fulfilled at last.\n\nA different consciousness worked its way through Cecilia's nervous mind, and she knelt, bowing her head with her hands placed gracefully on her knees.\n\nJames watched, entranced and then dismayed by Cecilia's display. She still recalled her training from before. But as perfect as her posture was, he felt this realization cool his ardour.\n\nYou had to know this was part of who she is now. The voice reminded him. Don't hurt her again. Stop sending her mixed signals.\n\nHe observed her, warring with himself at how to proceed. Her training appeared so perfect at moments like this. But that was what threw James off. Her submissiveness was something that was at once a legitimate part of her, and something that had been used against her. When she exhibited real fear because she was uncertain of him and of his reactions to potential missteps, he knew exactly how twisted her initiation into this lifestyle was.\n\nThen complete her training. The voice urged.\n\nEverything about Cecilia required his utmost control. \"Cecilia, do you want to be here?\"\n\n\"Yes Sir.\" She didn't hesitate to answer him.\n\nShe felt his hand stroke her hair and then he was crouching down, looking her in the eye. \"And do you want to please me?\"\n\nHer eyes showed green. \"I do Sir. I just\u2014\"\n\n\"Just what, Cecilia?\"\n\n\"I've never done this before.\"\n\nJames closed his eyes and breathed slowly through his nose, working to remain calm. He exhaled. Everything about Cecilia made him want to overpower her and take her entirely.\n\nCecilia thought it was exasperation and frowned, looking away from him.\n\nThat's going to be a spankable offense soon. James decided. \"Cecilia, you have no reason to be ashamed. Stop looking away from me. Do you want me to train you?\"\n\n<br >Cecilia was bewildered by the question. \"Wasn't I already\u2014?\"\n\n\"No Cecilia. That wasn't training.\" His voice was hard as he explained, \"That was abuse. You didn't ask for it. You didn't want it. The question is: do you want me to train you?\"\n\nShe did. Desperately. \"I do, Sir.\"\n\n\"Good girl. Ask me.\"\n\n\"Will you train me Sir?\" She felt wetness continue to pool at her center.\n\n\"I will. Come closer; kneel by my feet.\"\n\nShe scurried over to him. \"I want you to ask permission to suck on my cock. We'll take this nice and slow.\"\n\nJames started pulling the pins out of her hair. When her hair fell free, he unbuckled his belt. Cecilia watched as he revealed his hard cock. \"S-s-s... Sir?\" her voice sounded so unsure. \"May I suck on your cock?\"\n\nHis voice was warm with pleasure. \"You may. And you will always ask permission.\"\n\nPermission granted, Cecilia suddenly didn't know what to do. James was so patient with her.\n\n\"Lick it first.\"\n\nShe knelt up, and her pink tongue licked her lips first, and then darted out tentatively.\n\nHis cock twitched at the contact. This would test his control something fierce. A few soft licks first; then she took longer licks. \"That's it. More.\" He resisted the urge to thread his fingers through her tresses.\n\nCecilia's hesitant licks grew bolder. She tasted his skin and sweat and the drop of clear fluid beading at the head of his cock, and let his voice guide her. Something else inside her was taking over, letting her focus only on this one task, this one intimacy she'd feared and longed for.\n\n\"Mind you teeth, and start to take me into your mouth.\"\n\nShe did, and James wondered if he'd be able to go through with this lesson. Her lips encircled the head of his cock, and he felt how warm and inviting her mouth was. \"Now use your tongue.\"\n\nShe did, fluttering it just under the head of his cock. He groaned. And his voice strained. \"Very good girl. Take more.\"\n\nJames tilted his head back. He wouldn't manage this if he kept watching her. The sight of her on her knees taking him into her mouth was too erotic for words. She sucked as she pulled more of him into her mouth.\n\nCecilia had only half of him in her mouth when she felt him nudge the back of her throat. That was when his fingers wove into her hair. She twitched backwards, but he didn't pull. \"Stay still.\" James didn't seem capable of more than short commands. \"Breathe through your nose.\"\n\nShe did and calmed slightly. James's fingers gently played with her hair, massaging her scalp, and she moaned around James.\n\nThe vibration in her throat nearly undid him. \"I'm going to guide you, Cecilia. Keep sucking and keep moving your tongue along my cock.\" The words were crude. He fought to keep his voice gentle.\n\nHis cock was so large it made it difficult for Cecilia, who struggled to take his length as she followed the tugging in her hair. James set a steady pace, trying to prolong this as long as he could. Spanking her on top of the whole evening meant he couldn't hold back much longer. He felt her struggling to take more, and found her effort as intoxicating as the fluttering of her tongue. She began to swirl her tongue around his head every time he pulled her back.\n\nFrom the groans above her, Cecilia could tell he liked that. She pulled her cheeks in even harder, hoping to please him with her effort. Her eyes watered every time she tried to take him deeper, and she gasped as he bumped the back of her throat again.\n\n\"You're such a good girl, Cecilia.\" The praise gave her the encouragement she needed, and she moved her head that much faster over his cock until she felt him grow harder still, and he let out a fearsome growl. He moved faster in her mouth.\n\n\"Fuck. Don't stop.\"\n\nHer tongue writhed against his shaft and he spilled come into her mouth.\n\nThe salty, musky fluid spilled into her mouth and Cecilia only just remembered to swallow. She continued to suck on James's cock, feeling his fingers leave her hair.\n\nFor a moment, James breathed hard. Every nerve felt alive. A brief moment of euphoria enveloped him as Cecilia continued her attentions. Then it was too much, and he pulled his shrinking cock out of her mouth.\n\n\"Good girl.\" James still worked to steady his breath. Cecilia looked adorable, mildly embarrassed still, but also basking in the praise he gave her.\n\n\"Stand and turn around for me.\"\n\nShe did. James admired his handiwork. Her ass glowed bright red above her shapely legs. The sight revived him. Now that the first urgent needs were met, he could focus on continuing her training. He started unbuttoning his shirt.\n\n\"Perfect, Cecilia. Absolutely stunning. You've pleased me a great deal.\"\n\n\"Thank you Sir.\"\n\n\"But I believe you also thought that tying you up would please me. Isn't that right?\"\n\nCecilia wondered. Had she thought wrong? \"Yes Sir?\"\n\nHis pants and socks came off, and this time it was Cecilia who admired the person before her, before he pulled on a robe, obstructing the delicious view. Her wet little pussy throbbed now, still unfulfilled.\n\n\"You were correct. I am going to enjoy tying you up very much. Get on the bed.\"\n\nCecilia scrambled onto the bed, and James rummaged in his suitcase. Without looking up he said, \"Now, lie down.\"\n\nHe knew Cecilia would obey, and found what he was looking for. He smiled. This wasn't usually his style, but if anything he knew how to improvise. He was glad he had packed several neckties for the long tour.\n\n\"Normally, I'd prefer to use rope,\" he said, turning back to her. Her head perked up. James had a few ties in his hands. \"I'd love to see how this body looks decorated in knots. But for now, I guess I'll make due.\"\n\nCecilia shivered. Her nipples called out for attention, tightening. James pinched one, making her jump and twist away. \"See, we can't have that.\" Now she could see his playful smirk. He pinched the other one, and she had the same reaction. \"That won't do at all.\"\n\nHe took her wrist, kissing her pulse point. With a stripped tie, he set a knot behind her fingers so she couldn't reach. He sat on the edge and took her arm to the corner, fixing it there with a knot, but uncertain how well it would hold. He did the same to her other wrist, and then her ankle, leaving kisses wherever he tied a knot. The silk ties were soft. But after a tug, Cecilia doubted she'd be able to free herself.\n\nAs James sensually tied her up, he felt his cock stir back to life.\n\nHer nipples were hard and she couldn't conceal her wetness. \"Pull on them, Cecilia. Try to escape.\" Cecilia's muscles pulled but she felt some of the knots get tighter. James smiled. His improvised slipknots had worked.\n\nHer muscles stood out, accentuating her slimness. \"Do you think you can free yourself Cecilia?\"<br ><br >\"No Sir.\"\n\n<br >\"Good. I think you'll stay like that for awhile.\"\n\nJames stepped away and picked up the phone. \"Yes? Room service? A bottle of Mumm and two flutes please. Room 810. Thank you.\" He hung up.\n\n\"James!\"\n\n<br >\"I don't think I've ever heard you be so forgetful before.\" He gave her a sharp slap on her inner thigh.\n\n\"Agghh! Sir! You can't have someone come up here!\" She pulled again at the silk ties, but couldn't loosen them.\n\nJames smiled at her predicament. He had no intention of exposing her to a stranger. But he wouldn't tell her that yet. \"Well, then, what will you do if I let you go?\"\n\nCecilia was at a loss. \"Whatever you want! Please!\"\n\nThe urgent pleading was musical. \"I'll think about it.\" James pulled on a robe. Then with great interest, he felt up her leg, starting at her ankle and pausing as he approached her pussy. She strained towards him in spite of herself, groaning when he stopped short.\n\nHe did the same thing to her other leg, smirking at her arrogantly when he pulled away again. He ran fingers over her sensitive ribs, and her torso twitched. She was ticklish. But he wasn't sure the knots would hold if he tickled her. Instead, he tweaked her nipples, bowing his head to lick them quickly.\n\nThen there was a knock at the door. \"Please!! Sir!! Let me up!\"\n\n\"I don't think so. I'm not done with you yet.\" He waited a beat. Cecilia struggled, but had no leverage to do anything about the neckties holding her in place.\n\n\"But I'm feeling merciful.\"\n\nSuddenly, a soft weight settled over Cecilia's body. James spread the heavy blanket over her, concealing her naked body completely and hiding the exposed neckties under some pillows. He smiled down as she breathed a sigh of relief. \"You're mine. I have no intention of sharing you. Not even a glimpse of you.\"\n\n\"Thank you Sir,\" she said with palpable relief.\n\nHe stroked her cheek. She felt addicted to those little signs of affection. In a flash, he'd moved away to open the door. The bellhop studiously ignored her figure on the bed and set the tray down quickly. In a moment he was gone.\n\n\"Hmm... this needs to chill,\" James said loud enough for Cecilia's benefit.\n\nIn a quick stride, he was back at Cecilia's side. The blanket swept over her and Cecilia shivered at the sudden loss of warmth. James chuckled as her nipples tightened to points, again. He traced her leg again, this time brushing her pussy just enough to make her moan.\n\n\"Something wrong, Cecilia?\" He pushed a finger into her. She was still so tight.\n\nShe shook her head back and forth violently, muscles standing out again, looking for more.\n\nCecilia felt sweat mist over her body at her exertion. But James left her again, appearing to check on the champagne. She wanted his attention back on her. \"Please Sir?\"\n\nJames wondered how long she would last before she begged. He didn't turn back to her. \"Not yet, I'm afraid. Warm champagne isn't very good.\"\n\n\"No! Please.\" His teasing would drive her mad. And now he was pretending he didn't know what he was doing to her.\n\n\"Cecilia, you'll need a cool drink. You're going to overheat. We need to cool you down.\"\n\nThen an icy jolt pressed against her nipples. James held two ice cubes from the champagne bucket to her tight buds and Cecilia wailed. The cold needled her skin and Cecilia couldn't shake or twist enough to escape the sensation. \"Ahhh! Please! Sir, please.\"\n\n\"Just a bit longer.\" Her nipples started to feel numb from the cold and she watched as her body heat melted the ice until it was just James's chilled fingertips covered in icy water. He pinched her nipples again and Cecilia stopped fighting her bonds, giving over to him again as she had for her spanking.\n\nHer eyes closed when his warm tongue enveloped one nipple and then the other, washing her in pleasure and bringing sensation back to the bundles of nerves. He pulled away and James was by the side table again.\n\n\"Almost there on the champers. Shouldn't be too long now.\" Cecilia whimpered.\n\nWhen James returned she looked up at him hopefully. He traced her lips with his thumb and kissed her. Then he presented his finger to her. \"Treat it like you would my cock.\" He felt her suck and stroke his finger with her tongue. Then she gasped.\n\nThat icy sensation was back, but right on her mound. The melting water dripped right over her clit and she forgot about James's finger, biting down against the overload.\n\nJames pulled his finger from her mouth. He supposed he deserved that one, but he quickly delivered two stinging spanks to her thighs. He traced her whole mound with the ice cube, watching her try to shy away from the frigid contact. \"Please Sir?! Pleeaase.\" Now her skin felt the burning sting of the smacks juxtaposed against the frosty chill.\n\n\"More ice?\" His cock stood proudly at attention again.\n\n\"No! No! Please! Please no!\"\n\n<br >\"What do you want Cecilia?\"\n\nShe couldn't play or resist anymore. \"Please Sir, let me come.\"\n\n<br >\"Good girl.\"\n\nHis fingers were still cold from the ice, but her liquid heat overwhelmed it as he thrust two fingers inside her hot cunt. She tried to close her legs, thrusting her hips toward his hand.\n\nAll Cecilia could concentrate on were the fingers pushing into her. She needed more, but she didn't know if she could form the words. All night she'd been aroused. Her spanking fanned the flames, and then servicing James on her knees... She could feel how swollen her cunt was in response to James's command over her.\n\nWhen he though she might actually pull the knots on her ankles free, James stroked her clit, eliciting an obscene moan. She was so close.\n\n\"Please!\" she hissed out.\n\nJames had two fingers pumping into her slick cunt and circled her clit with his thumb. \"Come for me.\"\n\nShe threw her head back, breathless. Then her back arched her and came with unnerving force.\n\n<br >Cecilia saw the blinding colors bloom before her closed eyes and felt her pussy contract on James's fingers. He didn't relent on her clit. \"Oh! Oh! Mmmhhm.\" Just when she though her whole nervous system had short-circuited, James lifted the pressure off her clit, and withdrew his fingers. Off came his robe, drawing Cecilia's lusting gaze.\n\nShe felt his weight settle on her and felt his cock\u2014rock hard against her leg. His mouth claimed hers again as she struggled for breath. He held her head tenderly with both hands as she came down.\n\nWhen she was returning his kisses with equal fervor, James brushed her clit again. \"Oh God. Please!\" James didn't taunt her more. He entered her pussy easily, her entrance slick from her orgasm.\n\nThe fullness and stretch satisfied a different desire in Cecilia, settling her frantic search for friction as his cock pushed deeper, claiming all of her. \"I was right. I won't be able to let you go,\" James whispered into her ear. \"You feel too good. I'm never going to have enough of you.\"\n\nHe started pumping into her, grazing her inner walls just right to send her pussy clenching tightly around him. With no pain this time, Cecilia's hips met James, hungering for ever deeper penetration.\n\nIf her legs had been freed, Cecilia would have wrapped them around him. James paused, fiddling at her wrists until the ties came loose, and Cecilia clung to his shoulders, burying her face in his neck. She bit his shoulder at a powerful thrust and James squeezed her bottom, lighting up the sting from her spanking. At some point after James tied her up, Cecilia forgot about the pain. But James's firm grip had her yelping in pain and she squeezed his cock even tighter, reveling in the fullness, the closeness and the blurred sensations zipping through her body.\n\nHer tight pussy gripped him, feeling like home with each surging motion. When she cried out at the reminder of her spanking, James released his control and fucked her in earnest. Each surge drove the breath from her body until she was panting uncontrollably. She lost track of time and place as the adrenaline and euphoria had their way with her mental faculties turning her whole body into a vessel for pleasure. Seeing the look of utter bliss on her face, and feeling vestiges of male pride that he was responsible, James unleashed his come inside her. A moment later Cecilia cried out, as James's cock hit all the right points, spiraling her upwards again.\n\nThe pleasure coursed thought James, and his grip on Cecilia tightened sharply before hugging her body close. Lightness suffused his limbs, and James rolled off her just before letting the ecstasy pull him under.\n\n<br >For long moments, the two lay boneless, satiated and in a daze at the connection they shared. Cecilia felt tugging at her ankles and opened her eyes to see James untying the remaining neckties.\n\n\"Everything feel okay? No pins and needles?\" he asked, rubbing her ankles.\n\n\"No. They're fine. Thank you, Sir.\"\n\nJames tossed the ties away, and returned to her side, leaning on one arm to look at Cecilia. Her hair was strewn out around her, dark against the white sheets. Her nipples stood out bright pink, hinting at red. She smiled in a lazy sort of way. \"What are you looking at?\"\n\nJames traced the lines of her neck and collarbone, happy to see the velvet ribbon in place around her throat. \"You really don't have a clue how alluring you are, do you?\"\n\nCecilia shook her head, and reached to cover her nakedness with the duvet. \"I'm not. I've never heard that from anyone before.\"\n\nJames purposefully pulled the duvet back, insisting on keeping as much of her within view as possible. \"Well, I'll make a habit of telling you until you believe me.\"\n\nCecilia averted her gaze, unsure how to respond to such a declaration. James took her hand, and kissed it. She looked up and he smiled, but his eyes were serious. \"Your manners and the way you carry yourself are beautiful. However, I feel like you're trying to hide from me every time you look down like that. No more. I want to see your eyes. I want to see your reaction to everything. We're going to break that bad habit.\"",
        "Cecilia replied with some resignation. \"Yes Sir.\"\n\n\"Why the tone?\"\n\n\"I- I- just. I'm not used to so much... such... attention.\"\n\nJames smiles. She was precious. He let her reservation go. \"How about a glass of champagne?\"\n\n\"That sounds lovely, actually.\"\n\n\"Good.\"\n\n<br >James stood to pour the champagne. He opened the bottle with a festive 'pop' and poured the bubbly.\n\nWith his back turned Cecilia drank in the defined lines of James shoulders and back. His legs and buttocks were similarly corded with lean muscle. When he turned back to her, his blue eyes sparkled and he gave her a smile. Not a single hair was out of place. He handed her a flute and climbed into bed.\n\n\"You make the toast.\"\n\nCecilia paused. She was on the spot and didn't know what to say.\n\n\"Hurry up before all the bubbles are gone, little one,\" James teased.\n\n\"Well, I suppose I'll toast to new beginnings and wonderful music.\"\n\nJames nodded his agreement. \"I'll certainly drink to that. Huzzah.\"\n\nThe clinked glasses and held each other's eyes. The dry champagne flirted with their palates. After savoring it for a moment, James leaned back against the fluffy pillows.\n\n\"Tell me something.\"\n\n\"Like what?\"\n\n\"What's running through your mind? I want to know what you're thinking.\"\n\nCecilia hesitated. \"I suppose I'm just kind of happy. I still can't believe I'm here. With you.\"\n\n\"Cecilia, I've wanted you since the very beginning. It scares me how much I wanted you.\"<br >\n\nShe still couldn't understand. \"Why?\"\n\n\"I felt an attraction to you that was physical at first. I'll admit you trip all my wires. And when your personality shines through, especially once you started recovering, I came to enjoy your observances and the way you enjoy the things and the people around you. I just want to know more. What made you decide to focus your studies on English literature?\"\n\n\"You'll laugh.\" She sipped her champagne, knowing he wouldn't accept no for an answer. Her bottom throbbed as a reminder.\n\n\"I won't.\"\n\n\"It wasn't anything sophisticated or anything. I just liked reading. It helped me escape. When I was reading I wasn't dealing with my parents.\"\n\n\"Why would I laugh at that?\"\n\n\"Because the books that were the best at helping me escape were all fantasy. Harry Potter, Lord of the Rings... My parents had no control over Hogwarts or Middle Earth... I know how nerdy that is.\"\n\n\"I definitely read Lord of the Rings multiple times.\" He smiled remembering how the iconic fantasies transported him as well. \"I know what you're talking about. But I also had music. I would listen and play the Goldberg Variations nonstop. I wasn't on very good terms with my parents either,\" he finally admitted.\n\n\"Oh,\" Cecilia didn't know what to say to that.\n\nJames quickly changed the subject. \"But what about after you started at university? What became your favorite then?\"\n\n\"Well, I liked Dickens. And the Romantics became my area of special interest...\"\n\nJames listened with rapt attention as Cecilia went on about some of her research and her favorite works. They spent the rest of the evening sipping champagne, trading affectionate touches and talking about their respective artistic passions. Before she nodded off, James took her flute and tucked her into bed, taking his time to pet and adore the beautiful woman whose submission had stolen his heart.\n\n***\n\nThe next day was incredibly pleasant. They did join Emile and Carine for dinner after James's last performance in New York. Too soon, it was time to leave the Big Apple and make their way to Boston for the final stint of James's tour in America.\n\nCecilia stared at James's sleeping form in the seat next to her. He fell asleep holding her hand, and she feared she'd disturb his rest if she moved it. Truly, she didn't mind. Though she didn't think she'd ever get used to the casualness of James's affections. Every conversation or smile sent her heart skittering and her insides fluttering. He listened to her talk about her college studies as if what she had to say was legitimately interesting rather than frightfully dull.\n\nIt's all a dream. You're going to wake up and he won't want you. Besides, you've already debased yourself for him. He won't be interested in you for much longer.\n\nThe voice of Cecilia's mother was so nasty.\n\nA different voice, one that was soft but determined shot back: If it is a dream then I intend to enjoy every moment so that I remember it when I wake up.\n\nCecilia kept a hold on James with her left hand and flicked through the recent pictures on her phone with the right. One was a glamorous shot of her drinking tea at the Plaza in the new ensemble James gifted her. Another of them in Philadelphia taken by a stranger in Rittenhouse Square. She flicked over to the photo taken at dinner last night: There she was with three world-class musicians. She didn't know how she would keep up with James's circle of friends and acquaintances. She would need to learn more about this world and the ins and outs of orchestras and concert halls. She wouldn't want to embarrass James. So far, everyone seemed so nice. Would James indulge her and show her more?\n\nJames was very different from what she thought he would be, even after coming to understand his vital role in rescuing her. He didn't stand on ceremony or expect her to act like a slave. Oddly, he seemed to think she had a lot to learn, but not in the ways she would have thought. If only he knew the extent to which she felt incompetent. Learning about music was only another item on the laundry list of things she needed to grasp, and quickly.\n\nDespite her 'training,' her Sir seemed to think she needed retooling. She welcomed it. The idea of placing herself at his mercy, of learning the things he wanted and molding herself to become the object of his desires, well that was appealing. Maybe becoming his more completely would continue to push everything else into the periphery.\n\nHe treated her better than anyone else ever had, even though he repeatedly told her that she belonged to him. She wondered at his desire for a submissive, when it seemed he was happy to do normal things like go to dinner and take walks in the park. It confused her, his gentle affections. But when they were alone she felt her subconscious submission flame in response to his concentrated dominance. Some sort of change came over the both of them when he showed his other nature. She loved how everything faded into the background when he commanded her.\n\nJames's golden hair caught the sunlight streaming in through the window of their train. His eyelashes were thick and darker, almost a reddish blonde, Cecilia noticed. They stirred and James stretched out as best he could in the train's seat. He blinked a few times and squeezed Cecilia's hand. \"Mmm... I dozed off there... What time is it?\"\n\n\"It's 10:30, Sir.\"\n\nJames continued to get his bearings. He felt as if he woke in the middle of a dream. \"And what've you been up to while I was such poor company?\" He cast his eyes on Cecilia and felt better oriented.\n\n\"Nothing, Sir. Just looking out the window. Thinking.\"\n\n\"What about?\"\n\nThat might have been the most frequent question James asked her. He always wanted to know what she was thinking. She knew better than to demure though. He always insisted, and never once did he make her feel trivial or naive.\n\n\"Well, about your friends Sir. They know so much about music. I'm afraid I'll embarrass you one day.\"\n\nJames felt awake now. \"Why would you think that?\"\n\n\"Because I don't know anything about your world beyond a few pieces I've heard you play. Everyone else seems so... entrenched in it. And I'm... I can't even read music.\"\n\nIt took serious effort not to turn away in shame as she admitted this failing.\n\nJames face fell. \"What indication have I given you that you need to be an expert?\"\n\n\"You haven't. But at some point\u2014\"\n\n\"At some point, you'll pick up more, and I'll share more with you. I'm not worried. You actually listen to music. If you want to know more, your ears will tell you. Or I will fill in the blanks on anything you want to know.\"\n\n\"But what if I get something wrong while we're around your friends?\"\n\n\"Then they will keep their comments to themselves, or more than likely enjoy the fact that someone wants to explore it more. I doubt that with your beauty and quick wit anyone will even notice. How much did you know about dance before you shadowed Clara at the ballet?\"<br ><br >\"Nothing. But, I\u2014\"\n\n\"No buts. I'm not asking you to give a dissertation on Shubert, let alone read music. No one else will either. Do you honestly like it?\"\n\n\"I do Sir.\"\n\n\"Then that's enough.\"\n\n\"But there's so much for me to learn.\"\n\nThat was when James smiled. \"I know. And it will be my singular pleasure to teach you.\" His voice was low and Cecilia felt her stomach flip at the promise his voice held.\n\n***\n\n\"We're not going back to the hotel? Where are we going?\"\n\n\"I fancied a late supper.\" James answered Cecilia's question.\n\n\"Oh.\" Cecilia tried not to let her disappointment show. James's Beethoven performance was once again masterful. But she didn't know he also was guest conducting the Eroica Symphony. To her, it made all the sense in the world that he would command all the other outstanding musicians. However, it did have the affect of arousing her body dramatically.\n\nJames gave a slightly obvious smirk. He suspected that Cecilia had her customary reaction to tonight's music. If he was honest, part of him did want to take her back up to their room and ravish her properly. But he also was hungry, and he suspected Cecilia would enjoy the meal.\n\nThe raw bar at Neptune Oyster was still open, if sparsely populated. It was something James was accustomed to with his late-night working hours. Again, they were over-dressed, but with so few people in the restaurant, Cecilia tried not to let her anxiousness show.\n\nThe raw bar was a bounty of salt-water delights. James had been a bit excited for this meal. Cecilia, on the other hand, looked at the reddish-orange octopus, spiny urchins, and rows of shellfish with suspicion.\n\n\"Have you ever had raw oysters?\"\n\n\"I don't think so. Maybe?\"\n\n\"You'd remember if you did. Everything here is superb. What would you like to try?\"\n\nCecilia looked at him like he was asking a herculean task. \"Shrimp?\" It was best to stick with something safe and familiar.\n\nJames saw the dodge. \"Sure. Would you try an oyster with me?\"\n\n\"Okay.\" Cecilia said, not wanting to disappoint James who seemed so eager for her to try and like all these strange foods. So far, she'd liked everything he showed her, but still... some of the creatures still had their eyes...\n\nJames ordered some shrimp and several oysters and sea urchin and something he called crudo. \"And may I have a bottle of muscadet and two glasses, please?\"\n\nThe food came out in waves. As soon as the oysters were shucked, a dozen were presented with fresh cocktail sauce, lemon wedges, and fragrant mignonette.\n\n\"Here. I'll show you.\" James added a dollop of cocktail sauce to an oyster and proceeded to slurp the whole thing down in a single gulp. He closed his eyes for a moment and Cecilia had to wonder what it was like. Curiosity was winning out over her initial hesitance.\n\n\"Sorry. Those are bloody amazing. Eat an oyster and then have a sip of that wine.\" He indicated as he took a sip from his own glass.\n\nCecilia picked up the nubbly shell. She sniffed it first, but only smelled the ocean. Bringing the shell to her lips she detected salt. She closed her eyes, tipped the shell back and was shocked by how cold it was, until she took in the blast of briney sweetness and a hint of tartness from the lemon. It took her by surprise and she opened her eyes in amazement.\n\nJames always doubted the purported aphrodisiac qualities of oysters. But watching Cecilia's reaction to trying one was a heady turn-on all of its own. She swallowed her oyster and smiled. \"Wait. Have the wine.\" James said before she could give her judgment.\n\nCecilia didn't know why James insisted on the wine, but she took a sip. Immediately, she understood. The tart wine revived all the flavors on her tongue and added a zip and brightness all its own. \"That's amazing!\"\n\nJames couldn't believe how much he adored the look on her face as she discovered new flavors, new pleasures. He would do anything to keep that expression on her angelic face.\n\nConvinced that the delicacies coming from the raw bar weren't slimy monsters, Cecilia's curiosity piqued. \"So what is that?\" she pointed at the crudo.\n\n\"Raw tuna. It's basically sushi.\"\n\n\"I definitely haven't had that before.\"\n\n\"Then I insist you have the first taste.\"\n\nA dozen oysters and a few glasses of the French white later, Cecilia and James left the raw bar hand in hand.\n\n\"Did you like everything?\"\n\n\"I did! That was delicious. I had no idea it could taste that good. Thank you,\" she said with sincerity.<br >\n\n\"See? I told you I'd show you. And not just music either. I must confess, I'm surprised you don't mind me sharing all of this with you.\"\n\n\"Mind? This has been the best week of my life! Really.\"\n\n\"Me too.\"\n\nThe ride back to their hotel wouldn't take long. On the way James considered the woman by his side. He enjoyed each facet of Cecilia's personality that was slowly eking its way to the surface. He wanted to take her out of her preconceived notions of herself, out of her anxiousness. He wanted to devour all the things that hid her beauty from the world and have her understand how he saw her. He didn't care how long it took. As long as she would have him\u2014as long as the velvet band remained around her neck\u2014he would dedicate himself to cultivating all the latent qualities she possessed. He was already enchanted with her. But her potential was just as intoxicating.\n\n***\n\n\"Tonight is an exercise in boldness, Cecilia.\"\n\nThey'd just entered their hotel room. James turned and made this declaration after taking off his topcoat.\n\nShe didn't feel bold. She looked at him, already imploring him with her eyes, as if she could move him to pity her. She wasn't bold; she didn't know how to be bold.\n\n\"Seduce me.\" James commanded. It was an arrogant demand. Literally, everything about her seduced him. Like the innocent way she looked as if she misheard him. He was curious about what she'd do next.\n\nSeduction wasn't in Cecilia's lexicon. She could barely flirt. Even speaking coherently to James seemed like a major feat, only recently mastered. Should she try to do a strip tease? Could she figure that out on-the-spot, right here, and have that work? Mostly she just wanted to get James's clothes off him.\n\nHer indecision was so cute. He could practically hear her thinking, even if he couldn't quantify her thoughts. James sat in an armchair and watched her.\n\nCecilia wondered if he would take over if she waited long enough to make up her mind. She got her answer when he called roomservice for a bottle of wine and only one glass. His patience was maddening. She stood, wishing to melt into the floor when it arrived. She made to get the door, but James motioned her to stay and handled the bellhop. He didn't look angry, but he also didn't speak as he uncorked the bottle and poured himself a full-bodied red.\n\nHe settled in the armchair and sipped, considering her over the rim of the crystal stemware. He raised his eyebrow, nearly in a challenge.\n\nCecilia tried to summon up a devil-may-care attitude and walked slowly towards James's chair, trying to roll her hips and keep her feet in a single lane. The effect in her slinky new lavender dress was not unwelcome.\n\nShe leaned on one arm as she looked down at James, unbalanced by this seeming shift in dynamic. He wasn't taking control and it unsettled her. James stared up at her with his blue eyes, failing to give anything away. She inhaled deeply through her nose and initiated at deep kiss, nipping at his bottom lip and begging for more with her tongue. She trailed kisses across his cheek, noticing the stubble from his five o'clock shadow. She nuzzled her cheek against his, affectionately. She started to unbutton his shirt collar, pulling at his knightsbridge tie and cavalierly tossing it aside. She earned a small smile for that move.\n\nBut James didn't interfere. She thought he would\u2014no, expected he would\u2014take over. When he didn't, she wondered if she was doing this all wrong. She backed away and stepped out of her shoes. Then she turned around, showing off the criss-crossing straps that served to keep the backless dress on. She wiggled out of it, hoping he would enjoy the view of the dress falling away from her body.\n\nHer hopes were answered, but she wouldn't see James nodding his encouragement, delighting in seeing Cecilia take initiative. He knew it was a tall order, to expect her to show her true boldness, but he still held the dominant role here, and once her independent boldness ran out, he would guide her to it, to a place where she could be bold simply because he asked it of her.\n\nCecilia's submissiveness led her to fall to her knees, presenting herself to James in just her panties, hoping he'd find her offering alluring.\n\nHer idea of seduction amused him, but it was also primal. What man wouldn't be enraptured by a woman who placed herself at his mercy? She might not even understand her own seduction. Right now it seemed like she was begging him to resume the active role of dominant, instead of exerting that force quietly. James didn't mind. He preferred that role, but he wanted to see where Cecilia would take them if given the option. He was quite glad she seemed eager to be at his feet.\n\n\"Take your knickers off.\"\n\n\"Yes Sir.\" She was relieved he broke his silence.\n\nShe dropped her hands from behind her head and wiggled out of her panties. The arousal from the evening's performance at the Boston Symphony Hall had faded into the background over the course of the evening, but it crept back to the surface.\n\nCecilia stood nude. She thought she was very bold indeed for standing there as she was without clothes while James sat elegantly in his chair drinking wine.\n\n\"Come closer and kneel.\"\n\nShe instantly obeyed. She didn't have to be brave any longer.\n\n\"I appreciate you efforts.\"\n\nCecilia breathed a sigh of relief.\n\n\"But, I think you could be, perhaps, even bolder.\"\n\nThat made Cecilia worry again.\n\n\"I want a good view of you. I want to see your secretive charms. Present yourself to me.\"\n\nCecilia knew what he meant, but didn't know how to accomplish it. She was already in a revealing position.\n\n\"Go on.\"\n\nCecilia's only thought was that maybe she could press her chest forward, and so she arched her back accordingly.\n\n\"And now that tight little pussy. Show it to me proudly. Show me what's mine.\"\n\nThere was something hypnotic in his voice that bypassed all of Cecilia's mental faculties and triggered something less calculated.\n\nShe arched her back even further and raised her bottom off the ground. She spread her knees a few inches further apart, and leaned her head all the way back. Her hands clasped her ankles and her whole body arched in a bow. Her long hair brushed her calves and James felt his cock twitch at the provocative position Cecilia took on. He could have set a tray down on her upturned heart. It was as if she was serving herself on a platter in such a presentation.\n\nVery well, Cecilia. You do know how to be bold. Your boldness is just packaged in something else, in your submission.\n\n\"Beautiful, Cecilia. Good girl.\"\n\nCecilia beamed, her eyes focused on the ceiling, pleased that her body cooperated and pleased James.\n\n\"Now, I want you to play with yourself.\"\n\nJames saw her taught muscles tense further. It seemed he found a sticking point. \"Play with yourself, Cecilia,\" he repeated himself.",
        "I can't. I can't do that. It's too humiliating. I can't. Not while he's watching. \n\nJames didn't prolong her indecision. Cecilia felt James's fingers spider their way from her navel up to her throat, and she broke her pose and straightened up in time to see that James was out of his chair and scooping her up. He might not have Abe's obvious strength, but Cecilia felt insignificantly small as James moved her with no visible effort.\n\nIn a blur, he was sitting on the bed and she was back over his lap. Cecilia didn't have a chance to wonder if she was getting a spanking. James palm came down on her bottom, and Cecilia jumped at the impact. It hurt, especially since it seemed harder than before, but it sent a message straight to her core.\n\nJames gave her a few more swift swats on the backside. \"Cecilia, I won't lie. I do love getting a chance to spank your little arse, but I'd rather not have to do it as punishment.\" He still held back his full strength. He was more interested in rewiring the disastrous 'training' she received under Lace's so-called 'care.'\n\n\"If you fail to obey, or to give me a good reason why you cannot comply with my wishes you will be punished. Swiftly.\"\n\nThe entire time he explained this to her, he continued a steady series of spanks on her rear.\n\n\"I've told you I expect obedience. I don't think I ask for things beyond your capacity. So tell me why you wouldn't obey me.\"\n\nCecilia heard his patient, lecturing sort of tone and thought she saw her way out. \"I can't, Sir.\"\n\n\"You can't what? Tell me? What have I told you about withholding things I want to know.\"\n\n\"Sir, you said you wouldn't have that. But I mean I can't do what you asked.\" She couldn't even verbalize his request.\n\n\"Why?\"\n\nSMACK!\n\n\"Ohh! Oww. I can't\u2014you know\u2014\"\n\n\"You can't what? Tell me exactly Cecilia. You know better.\"\n\n\"It's too humiliating!\" It came out in half a shout and half a whine.\n\n\"What is?\" Oh, he loved her innocence. It was real, not some fake put-on. Still he pressed her, imagining her face taking on the same scarlet hue of her ass.\n\n\"You can't make me\u2014\n\nSMACK! It came down particularly hard right where her thigh met her bottom. James didn't like when anyone told him 'can't.'\n\n\"OW! Oh, please don't make me touch myself!\"\n\n\"Like this?\" His index finger and middle finger delved into her core, sliding in easily. He gave her a quick few pumps before tilting her up, presenting his glistening fingers to her mouth and looking at her expectantly. When she looked at him doe-eyed, he growled.\n\nThe look James gave her was enough. She opened her mouth and James thrust his fingers in, pleased when she started sucking. \"Does that taste like a little girl who doesn't want to touch herself?\"\n\nIt did not. Tasting herself, Cecilia laved at his fingers, her senses engulfed in the musky scent of her own arousal. His fingers pulled out of her mouth as quickly as they appeared. She was at a loss for a second before James's hand was in her hair. \"Does it Cecilia? It wasn't a rhetorical question.\"\n\nShe tried to bow her head, but James hand held her hair firm. \"No Sir.\"\n\n\"I thought the same thing.\" He tipped her back over his knee, grinning at her surprise. She thought her spanking was over.\n\nSWACK!\n\n\"I need a good reason for your disobedience. 'It's too humiliating,' is not a good reason. To whom does your modesty belong Cecilia?\"\n\nShe whimpered, remembering those words. \"You Sir.\"\n\n\"That's what I thought. So, since we've cleared that up, embarrassment is not a good enough reason to defy me.\"\n\nCecilia shivered. Somehow her body was chilled even as her bottom smarted.\n\n\"Have you ever played with yourself Cecilia?\"\n\nWasn't she done being punished yet? The spanking sensations lingered, the tingling cascading in waves over her bottom. \"Y-yes Sir.\"\n\n\"What did you fantasize about when you made yourself come?\"\n\nOh God. No. She'd die from the embarrassment.\n\nSMACK! Another fierce spanking on her thigh.\n\n\"Cecilia,\" his voice held a warning this time.\n\n\"Y-you Sir.\"\n\nJames had to stifle a groan. Already he felt iron-hard. \"Details, Cecilia.\" He bit out and gave her chastised cheeks a rough squeeze.\n\n<br >\"OH! When you were practising back in London... I could hear it through the air vent. It always made me...\"\n\n\"Wet.\" James supplied the answer while toying with her sopping pussy lips.\n\n\"Yes Sir. And I couldn't concentrate. All I could hear was the music, and all I could think of was wanting you to-to...\n\nJames pulled his hands away, wanting her to keep her train of thought long enough to finish telling him her fantasy.\n\n\"Mmmm...\" she whined at the loss, but a softer spank put her back on track. \"I wanted you to tie me up while you practiced, maybe keep me at your feet and-and p-play with me in between pieces.\"\n\nCecilia could feel James's raging cock pressing against her, draped over his knee as she was. Her ass honestly felt like it was on fire. The silence permeated the room for a moment before...\n\nSMACK! It rocked her whole being.<br ><br >\"Ohhhh! Please Sir!\"\n\n\"Your spanking is over.\"\n\n\"Oh, thank you Sir.\"\n\n\"Good girl.\"\n\nJames suspected that Cecilia needed these spankings in order to open up. He took immense pleasure in delivering them; they seemed to ease up something in her, allowing her to more fully embrace the submission that wanted to be set free.\n\nCecilia rubbed at her eyes. She wasn't trying to be a brat, but the spanking truly hurt and she let a few tears pour down her cheeks.\n\n\"Why don't you resume that fetching position you were just in?\" James said by way of suggestion.\n\nCecilia moved to comply. It was hard to maintain any continued sense of pride after having your bottom spanked like a child\u2014over his knee no less.\n\nJames was a bit in awe as her body arched backwards once again. She mentioned going to yoga with Clara. Clearly, there were advantages to working on that flexibility. Her limbs were very lean, but every part was supple, working to turn her into this object of sexual submission.\n\nHe leaned down, towering over her. This time his hand started at her upturned neck, reminding Cecilia of the velvet ribbon still adorning her throat. Then James's fingers skittered down her chest and torso as if playing quick scales down her body, ending with his thumb pressing her clit and circling it gently.\n\n\"Ohh. Mmm.\" Cecilia didn't know what to do.\n\n\"Now let's try it again, Cecilia. Play with yourself for me. Play with that wet little pussy. I want to see how you make yourself come.\"\n\nHe's so constant. He wouldn't let her get away with refusing him and taking her spanking. Of course he'd make sure she learned her lesson. Her spanking was the motivating factor right now. With her bottom still burning and a different fire smoldering in her core, Cecilia let go her left ankle and brought a hand to the apex her thighs. She didn't know if she'd ever been this wet before. It was dripping down her thighs now, inviting James's cock, if only he'd take her.\n\nShe spread the wetness, circling her clit. It was impossibly slick, and immediately her hips started rocking. She moaned as she penetrated herself with a slim finger. She couldn't hold this pose anymore. She was strong and flexible, but this called for a different endurance.\n\nJames helped her. \"Look at me.\" He could see her muscles starting to flex more and more, and while her effort was valiant, he wanted more of her and wouldn't see her hurt.\n\nShe gasped out, undulating her whole body from her hips to her neck, releasing the impossibly deep arch and meeting his azure gaze. Her eyes were shockingly green in this moment, and James wondered how close she was.\n\n\"You're still to ask permission to come, little girl.\"\n\n\"Yes Sir.\" She sat between her heels, kneeling elegantly still, and palmed her breasts, letting out the cutest little moans when she brushed her nipples. Cecilia forgot her humiliation and her modesty. In his eyes, she dove headfirst into the tempting pleasure. She brushed her nipples lightly with the palms of her hands, just kissing the tips and sending all the sensation back into her pussy.\n\nShe needed more and a hand snaked back down to tease her clit, the other pinching her right nipple hard enough to gasp in pain.\n\nJames unzipped his pants, freeing his cock and fisting it. He needed to time this perfectly or he'd fail to teach her this lesson.\n\nFailure seemed like an acceptable option, he thought, as he watched her. Precum pearled at the head of his cock. He rapidly pulled the rest of his buttons free. The sight of his naked chest was too much for Cecilia.\n\n\"Oh please! Please Sir!\"\n\nJames was proud she remembered to ask. In a lightning quick movement he bent down and took hold of her wrist, pulling it away.\n\n\"Please! Please may I come Sir?\" Cecilia reached with her other hand, but James took hold of that one too.\n\n\"No.\"\n\nCecilia wanted to cry. Her whole body rocked forward, searching for friction, begging to fall over the edge.\n\n\"You're punishing me! Please!\" she begged.\n\nJames pulled her up from the floor and lifted her until he sat back on the bed leaning against the headboard, and she was straddling his hips. His grip on her hips was unmovable. She could feel the rigidity of James's cock pressing against her sex, and moved to press against James's shoulders, so ready for him to fill her.\n\nBold indeed. \"Hold still.\" He seized her wrists in each hand, and trapped her arms, pinning them behind her back and circling her tiny wrists in one hand. She tried to twist free or buck her hips but couldn't get any more leverage.\n\nJames's free hand cupped her dripping sex and Cecilia squirmed, aching for him to bring her off. The tip of a finger entered her slick passage, and she felt a slight pressure on her clit, but James's grip on her wrists and the splay of her thighs kept her from pursuing her orgasm.\n\nJames couldn't take his eyes off her. Her breasts were just at eye level, and he felt her pulse where he held her, at her very center. He pressed on her clit with his thumb and she eagerly responded, moaning and struggling to buck her hips.\n\nHe had her. He traced her clit in an agonizing, slow circle and he had her begging again. \"Oh please. No. Please. Please Sir.\" She felt the waves building and her rational mind being subsumed in physical pleasure.\n\nHe pulled his hand away from her molten center and gripped her hip hard.\n\n\"No, Cecilia. You've been very good. But since you were very headstrong, and disobeyed without reason, I need to make sure you understand me. If you behaved, I would let you fall over the edge right now, with great pleasure. But I want you to look at me and bathe in this sensation. You can have the rest soon, when I decide. Soak in the promise of more and know that I'll give it to you when I'm ready.\"\n\nCecilia gave a sob. Her bottom still stung terribly and all she wanted was for him to make the desirous ache end. He could manage her so easily without any help. In the wake of his demonstration of power over her, Cecilia felt another thirst. Wanting approval and wanting completion meant that she hovered on James's lap shaking and waiting. Her mental faculties sharpened as the physical sensation petered out to the edges. Slowly, her rush to orgasm ebbed. The desire to please James didn't fade though. It grew larger, tempering her physical urges just enough to overwhelm the sensation in her pussy.\n\nWhen James saw her ease down and saw a look of longing and resignation cross her fevered features, he bent his head to lick her nipples. She squealed, finding the embers ready to burst back into flame at any stimulation. But she didn't beg. James let go of her arms, and let her circle his neck. Her eyes questioned him, and he found he wouldn't deny her any more. He eased the grip on her waist.<br ><br >\"Ride me, Cecilia.\"\n\nShe rose up on her knees and James guided her onto his waiting cock. The penetration was deep and swift. Her slickness invited him in deeper than she thought possible. James groaned and felt her bottom out, hot wetness surrounding him snuggly.\n\nHe guided her with his hands on her waist, but she didn't need more encouragement. Her thighs squeezed his legs as she strained around him, eager to feel his wide cock stretch her again, hitting her in such a way as her whole body twitched. James felt his senses blur into the single sensation of Cecilia riding his cock with abandon. Her breasts danced and she threw her head back, drinking in the pleasure. After James held her on the precarious knife's edge of orgasm, his physical presence inside her carried her skyward.\n\n\"Please Sir. Please fuck me.\"\n\nJames didn't pause to register her blunt request or its accompanying boldness.\n\nHe fixed her with a hard stare, before nearly tossing her over onto her back. Cecilia saw the look in his eyes, and knew he had every intention of granting her wish. He growled, predatory, and crawled on top of her. The powerful thrust made her belly flip, and the change in angle meant her clit rubbed against him as he filled her over and over.\n\n\"Please let me come. Please Sir! Please?\"\n\nHer begging was music to his ears. \"Come for me little girl,\" he growled out, just before his own release took him.\n\nJames held her tightly as they came down. He didn't look up or know how long they'd been lying together so intimately. Cecilia moaned, blinking her eyes. James slipped out of her cunt, still drunk on pleasurable sensation. James watched her with uniquely alpha pride.\n\nShe didn't move. All of her limbs felt airy, as if all her nerves were filled with effervescence. She wondered if she'd ever felt this relaxed. The tension that burrowed behind her shoulder blades and her ankles released its grip on her. How different this was from her brutal initiation. Certainly, her bottom faintly radiated stinging tingles and heat, but on the whole she felt like the embodiment of ecstasy.\n\nJames ran a finger down her spine, sending aftershocks and shivers down her back. That made her turn to face him, and he wasted no time kissing her, taking his time to claim her mouth the same way he just laid claim to her body and soul.\n\n\"Good girl.\"\n\n\"Really?\" she asked with soft disbelief.\n\n\"Oh yes. We might have to do something about your language though.\"\n\n\"What?!\" How had she earned a punishment?\n\nJames laughed. \"Not tonight though. I did request boldness, after all.\"\n\nHe stood up to fetch his glass of wine and returned to bed, offering his thoroughly satisfied submissive a taste. He didn't regret having only one glass. They traded it back and forth until Cecilia couldn't keep her eyes open any longer."
    ],
    "authorname": "poeticlicense91",
    "tags": [
        "m/dom",
        "f/sub",
        "bondage",
        "edging",
        "music",
        "spanking",
        "masturbation",
        "ice",
        "training",
        "control"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/chords-that-bind-ch-15"
}