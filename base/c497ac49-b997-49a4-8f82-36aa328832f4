{
    "title": "The Rookie",
    "pages": [
        "\"The Rookie\" is Part One of the sexual story of my life. I am purging my soul. Telling of my past \"sins\" is part of my repentance.\n\n\nI was physically ready for the big show when I became a teenager, but not mentally. That took more than a few years. I was a late bloomer. The life of a baseball rookie is practice, practice, practice. Me too. My girlfriends and I didn't play paper dolls, we played make believe sex. Do you have any idea what slumber parties are really all about? \n\nHer name was Melissa. My very best friend from grade school until she moved away when we were both sweet sixteen. We made it through Brownies, Girl Scouts and our first period together. We had our fingers in each other's tight pussy from the day our boobies began to bud. In junior high Melissa went from being called \"the stick\" to being revered as the \"rack attack.\" And I measured each inch of her incredibly rapid progress with my mouth.\n\nIn our school there was sort of a black market in sex toys. Very expensive but well worth the investment. Melissa and I had a Loving Touch Vibrator which was 8\" long and had a nice big head which was our favorite. But despite all the right equipment, our favorite activity was still licking each other right on the hot spot. There is something to be said for being able to feel and taste your best pal cum. The only experience we really were not able to simulate real well was sucking cock. But we watched plenty of movies, took notes and described to each other exactly what we would do.\n\nI cried for weeks when Melissa moved away. And things just got worse. All my girlfriends had done the deed but not me. I felt like a leper. But I didn't lie about it. What's the point? I mean, you can tell, can't you? So I'm like an old maid, 18 years old, and the most I ever gave a guy was a little tit. Well, under extreme pressure, I did give several guys a hand job. There is only so much being drooled upon one can stand. A little jerking motion kept them off my ass at least for awhile. I don't know why they liked me doing it for them better than them doing it for themselves. Never in my car again though. Stains everywhere. I think guys should wear a condom even when they are getting jerked off.\n\nJosh showed up at school the day after Christmas vacation in my senior year of high school. A transfer student. His mother had died several years before and his father was working for a major oil company and got sent to the middle east. So he came to live with his grandparents in my home town.\n\nSo naturally the only seat in homeroom is right behind me at the end of the second row. He totally ignores me. Well, I was no fashion plate most of the time. Baggy jeans, a flannel shirt and braided hair most of the time. After school I went to the beauty shop to get a new do and the next day I wore the tightest jeans I owned. You know, the kind that takes 15 minutes of wiggling and pulling to get into. I wore my tightest red sweater with no bra. When I looked at Josh the tips of my nipples got so erect I thought they were going to pop right through. He STILL ignored me.\n\nThe rumors were flying that Josh was some sort of incredible baseball player. Hey, he looked like an athlete to me and guess what indoor contact sport I had in mind. Fifteen minutes after he made his appearance in homeroom, I got up from my seat and told the teacher I was sick and was going to see my doctor. Which I did. I went to see my older sister, an intern at a local hospital. She had told me a hundred times to come and see her when I thought I was ready. You know, birth control pills.\n\nWeeks passed. I go \"goo goo\" at Josh and he looks right past me. Well, he ignored all the other girls, too. I was beginning to wonder, was he ___? Then came Valentine's Day and I was in love. But nobody knew it, especially not the focus of my attention and the cause of my wet panties. Last class before lunch was calculus. So class ends and I'm in the cafeteria and I can't find my calc notebook. I go back to the classroom and open the door. Much to my surprise there is Josh. They didn't hear me. He and Mrs. Henry, the thirtysomething divorced teacher of calculus and certain other subjects that were difficult to swallow.\n\nTalk about getting a heart on for Valentine's Day. She was sucking his cock. He was huge! She could only get about half of it in her mouth. I'm watching, I couldn't help it, and they didn't notice me. To make a long story short, he cums all over her face and she looks like a ghost. She turned my way to reach a box of tissues on her desk and she sees me and shrieks. I turned like five shades of red. Josh stared me right in the eye and winked. I started stammering and then just grabbed my notebook and ran out. I never said a word. I swear! \n\nAnother week passed and Josh kept right on ignoring me. But then one fateful morning in homeroom, he starts playing with my hair. Nobody notices. He gently massages my neck and shoulders with one hand. Chills are running up and down my spine. My lips are quivering and that isn't all that is pulsating. I didn't know what to do so I didn't do anything. I just pretended nothing was happening. So then we move on to classes and I got a couple hours to cool off. \n\nI didn't see Josh again until lunch. He was brown bagging it. Stupid me, I said to him, \"So what are you eating today?\" You know, making conversation. He looked at me with those big brown bedroom eyes and said, \"You, I hope.\" I fainted. I frigging fainted right there in the middle of the cafeteria.\n\nWhen I finally woke up in the nurse's office thanks to smelling salts, I sought out Josh. I informed him I was his for breakfast, lunch, dinner and snacks in between. Hey, it took guts to say that, but why beat around the bush? I also told him my first time was not going to be in the backseat of a car. So we plotted our first evening (and morning) together. I know this sex stuff is supposed to be spontaneous but fuck that shit. Josh basically did what he wanted but I had doting parents to contend with. My sister the doctor figured out how to shake me loose. I guess she felt filling up my tank might negate some of my neuroses.\n\nMy sister got a room at a motel 25 miles away. Josh picked me up about 1:00 on that fateful Saturday afternoon in a 1965 Ford Mustang convertible. Dark green, black top and a stick shift. So convertibles turn me on, among other things. His grandfather was into classic cars and had a barn full that could just make you wet your pants. Anyway, we get to the inn of double happiness and all we got to do is open the door because my sister already gave me the key. Awesome jacuzzi!\n\nRight away I started to get cold feet. I knew I was going to do the deed this day but not just yet. We had plans to go to my cousin's wedding reception about 6:00. I asked Josh if we could go for a ride and get some food and a couple six packs. My sister gave me her I.D. and we could always pass for twins anyway.\n\nQuite the beautiful day for very late February. It was sunny and around 60 degrees. The top comes down. No, not mine. That's later. We are just cruising and pass a recreation area with basketball courts. I had noticed a basketball in the back seat. I suggested we stop and play.\n\nI was sure Josh had heard I was a player. There were pictures of me and last year's team all over the school. I didn't play my senior year. We had won the state championship the previous year, most of my teammates had graduated and the coach left for another job. I didn't feel like starting all over and decided to concentrate on better preparing myself for college. I could have cared less about a basketball scholarship because I had my own money, thanks to my late great grandfather.\n\nWe get on the court and start shooting around. Then I said to Josh, \"Let's play one on one.\" No guy in my class could beat me and I thought I was playing the ringer. Josh responded, \"OK, what do you want to play for?\" I was getting pretty cocky right about then so I said, \"If I win, you teach me how to drive that Mustang stick. If you win, I'll give you a blow job.\" He flung the ball at me and told me to take it out first.\n\nFifteen minutes later he is winning 16 to 4 and he mostly let me have my two hoops. Meanwhile these two really tall guys start shooting at the other end, and are mouthing off, about the competition, me. Josh got pissed and challenged them, you know, us vs. them. Josh drilled three from more than 25 feet and then they double team him and he fed me two for layups. Then he told me to throw one up to the right of the rim and he crammed it. These two guys, who meanwhile have zero points, got humble real quick and asked Josh if he played in the NBA or something. And Josh was supposed to be a baseball player. Oh my. Anyway, so we all said that's enough and parted friendly.\n\nWe went to leave and Josh told me to get behind the wheel and gave me a couple quick start and stop lessons. I got the hang of it real fast. We got back to the room and we were sweaty and decided to get in the jacuzzi. I had already seen much of him (remember his private calculus lesson?) so he wasn't shy about taking his clothes off. Yeow, he looked even better and bigger with nothing on. I made him cover his eyes when I took mine off. I think he peeked though because he commented, after I was totally submerged in the water except for my head, about my exquisite breasts. \n\nThen Josh kissed me. Actually he first moved close and put his arm around me and nibbled my ear. And then my neck. He kissed me sooooo sweetly. He kissed me like a girl. I'm going like huh? And then he grabbed me by the back of my wet stringy hair and kissed me hard. I was engulfed by this face and tongue and lips and I loved it! I knew I was acting a little limp but I couldn't hardly help it. I felt like screaming, \"Would you please fuck me, would you please just fuck me and end my misery?\" (And my virginity, talk about a cross to bear)\n\nHis hands started to move downward. I rose up out of the water up to my navel. He licked the water from my breasts. He went around and around my nipples with his tongue and gently rubbed the tips with his fingers. I was shivering and the water was very warm. Steamy in fact. Then he put his hand on the inside of my thigh. Sigh. He put his finger inside me and found just the right spot with his thumb. I'm thinking he did this before. I'm on fire and my pubic bone is pounding against his hand. Talk about getting off to a quick start. I was panting and moaning and my heart was hammering like it was going to pop right out. And then it happened. And I screamed. I mean, I screamed! Must have heard me miles away. Like I could help it. Best orgasm I had to date in my young life but I anticipated even better was yet to come. I laid my head on Josh's shoulder for a few minutes to collect my senses.\n\nThen I told him to stand up. He looked like something you could hang clothes on. and I'm thinking that thing is going inside me? Like Shaq trying to put on Bob Costas' shoes? So I got my left hand at the attached end, my right hand on the middle and I still had plenty of room for my mouth. And I'm moving my hands and my mouth and I'm not talking. I think that's what turned him on the most. Me not talking. I did pause for a moment and told him I never did this before so feel free to offer suggestions for improvement. He didn't so I must have been doing OK. I wondered what it would taste like. I liked it. I mean, I loved it! Hey, caviar and clams have a distinctive taste, do they not? Back then when I was just a rookie I couldn't get all of his hugeness in my mouth. I often have wondered since if I could now due to my diligent study of deepthroating techniques.\n\nAfter I swallowed what seemed like, well, I looked like a chipmunk at times, Josh picked me up and carried me to the bed. I jumped up and screamed, \"No, no, no!!! We got to go to the wedding reception!\" As if!!! There was no way I was going to smooch the love of my life until I brushed my teeth and gargled with Listerine. \n\nI slipped on this green strapless low cut cocktail dress my sister lent me. She said she got lucky every time she wore it. She paid $500 for it and made me promise to keep it clean, no cum stains. And I had to wear the high heels. I looked like the Jolly Green Giant. But Josh was still a little taller than me. Thank you Lord for small favors.\n\nAs soon as we get to the reception I, of course, immediately go powder my nose since I really didn't have much time to get ready. I looked in the mirror and I had sucker bites all over my neck. I used ALL the powder and I don't think there was any on my nose. And my hair! Oh, my, what could I do with this? And then everybody asked me where I got my hair done. I thought like duh, what - you like the orgasmic cocksucking looking for more look?\n\nWell, we were just having a fabulous time at the reception. The band played everything. Oldies, C & W, polkas and all the usual wedding stuff. They even let the guests sing. I sang a song my momma done taught me and they sure couldn't do that one worth a shit. Had to do with my mood at the time, as in take another little piece of my heart now baby.\n\nThen the band played \"The Hawaiian Wedding Song.\" The bride and groom danced and then everybody joined in. Josh had his hand on my ass and he was getting, well not getting, he was. At that moment I knew I was getting fucked long before we ever made it back to the motel. The bride and groom left and the parents left and the party poopers left and the band played on. They just had to play \"Wild Thing.\" So, you know, I'm really getting down, I had kicked my shoes off, and I was raising my hands in the air. My boobs popped right out of that strapless dress. I never hear (or see) the last of that one. Why do the guys with the cameras always follow me around?\n\nThen the band played one of my favorites. Not that I'm really into C & W but I do like Willie Nelson. And I have very blue eyes. Got the tune? So I'm like dead meat right about then. Forget what I said about the back seat of cars or anywhere else. I was about to get laid or die trying. So I suggested to Josh we go for a little stroll. This place where they held the reception was huge. A bunch of smaller banquet rooms and such that were not in use at the time. So we found one.\n\nThere was not much more foreplay deemed necessary by either party. Josh slipped his hand under my dress. I unfastened his belt and unbuttoned his pants and felt my greatest fear. OK, so I was still a little apprehensive and that thing going inside me. I pulled my pantyhose down past my knees. Josh lifted me up and pressed me up against the wall. I guided him inside me very slowly and carefully. Well, dagnabbit! Didn't hurt one bit. At least not at the moment. And he found just the right angle, ya know?\n\nWomen can talk about vibrators and toys and their girlfriends all they want but there is NOTHING like the real thing. I can't even describe what this bell ringer was like so I won't even diminish the memory by making some feeble attempt. Bingo! For me anyway. Not for him yet.\n\nI didn't think Josh could hold me up in the air like that forever so I told him to lay me down on the floor. I thought not to worry, the carpet looked rather thick and plush. Talk about brush burns. My butt was red for a week and that ain't all that was sore. I bit Josh's ear and demanded that he fuck me hard. Now here was one boy who listened too good. It felt like I was being drilled by a jack hammer. Not that I minded. And then he came inside me. Well, he didn't just come. That is a rather passive word to describe what was more like a volcanic eruption. And when he pulled out, he got it all over the dress. Yep, I still had it sorta on. The top was pulled down and the bottom was pulled up but I never did get around to slipping it off.\n\nWe tidied ourselves up a bit and went back to the party. If you ever are at a wedding reception and get cum stains on your dress, just say it was the macaroni salad that just slipped right off the plate. Right, macaroni salad, and nobody thought twice about my story. They had kept all the food out under ice and said to eat it or it would be thrown out. Naturally I made a big plate of stuff as we walked back in. I always like get really famished after sex. To this day I simply can not understand why guys look at me with raised eyebrows when I ask, \"Do you think you could make me a sandwich?\" shortly after I make their fondest dreams come true. And my sister forgave me for the cum stains on her dress. Not until, however, I told her the entire story of the day's events.\n\nTalking about food, people often eat three times or more a day don't they? So why not sex? Eighteen year old males got to be the horniest animals on the face of the planet. For the next three months we got it on at least three times a day. Josh would pick me up for school in one of those classic cars. We'd get to the school parking lot and I would suck him off before we went in. Our school had seen diminishing enrollment in recent years and there were empty classrooms and such. We found several deserted spots where we could rendezvous at lunch time. Right after school we'd hurry over to my house and screw until just before my parents got home from work. We'd get together during the evening to help each other with homework. When there were too many eyes around, we would take a trip to the library. No, I never told my parents I was researching the human male anatomy.\n\nWhen baseball practice began, the coach was so desperate for Josh to play he let him come to practice considerably late. Josh told him he had a job after school for an hour or so. He had a job alright. Doing me. And then the baseball games started and Josh attracted a lot of attention. Scouts were at every game. He was offered numerous college scholarships but I knew what he wanted. The big show. We both knew we would soon be parting. But we also both knew this thing between us was very real and sooner or later we would be together again. I guess you could say it turned out to be later and I am still waiting.\n\nWe graduated from high school and the next morning after our last incredible night of passion, Josh signed a baseball contract and left for some minor league gig in Sacramento, California. His grandfather gave him that Mustang. And as the story goes, he was on his way on I-80 a few miles from Reno, Nevada, when a drunk driver pulled onto the west bound lane from an exit ramp. You know, the wrong way. Both drivers were killed instantly upon impact.\n\nI didn't go to the funeral. I'd rather remember my first true love when he was full of life and had an enormous erection. So where or where can my baby be? The Lord He took him away from me. He's gone to heaven and I got to be good. So I can see my baby when I leeeeeaave this world.\n\nI see Josh in my dreams every night and we always, well, do what we did before but it's like more spiritual which has convinced me that there yes indeed is sex in heaven. Sex but no marriage. Can't wait! I usually wake up in the middle of the night and have to change my panties. I guess I could sleep totally nude but then I'd have to change the sheets."
    ],
    "authorname": "Deborah",
    "tags": [
        "classic cars",
        "band played",
        "sister gave",
        "baseball player",
        "powder nose",
        "big show",
        "start shooting",
        "time school",
        "cum stains",
        "josh told"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-rookie"
}