{
    "title": "Blowjobs for Dummies",
    "pages": [
        "I recently wrote a story called \"How to Eat Pussy Like a Champ.\" It was a labor of love. I was thrilled with the feedback I received. I got cheers from men. I got compliments and thanks from women. I also got several dinner invitations. For the record, I do like steak, but make me a well-prepared Italian dish and I'm putty in your hands.\n\nWhat surprised me most were the comments I got from both men and women requesting and encouraging me to write a follow up piece about how to give a blowjob. Women wanted it so they could compare their technique or perhaps learn something new without having to bother their neighbor's husband. Men wanted it so they could hand it to their lady and avoid the discomfort of saying, \"While you're down there, honey, I'd like to give you some instructions on how to do it better.\" Ouch \u2013 I can nearly feel the teeth marks.\n\nWell OK, you know me, I'm more than happy to help. There's nobody that likes to be on the receiving end of a good BJ more than me. In fact, I bring my cock with me wherever I go for just such an occurrence.\n\nWriting an article about how to go down on a woman, that was like a fish writing about how to swim. It's just something I truly love. But writing an article about how to give head to a man, oh boy. I can see the feedback now. \"Hey gay blade, why don't you stick to pussy and leave blowjobs for the chicks to write about.\" Or, \"Hi, I'm Johnny from Hoboken. I loved your piece. Call me at 637-9648.\" My friends, they'll never let it go.\n\nWell, let me first say that I'm not gay. Although as Jerry Seinfeld put it, \"not that there's anything wrong with that.\" \n\nIf my first article helped a few inexperienced guys please their women, I feel great about that. And if this piece helps a few more girls feel comfortable and confident and gives their guy greater satisfaction, I'll take the heat. That's what writing is about.\n\nAh, how fondly I remember my first blowjobs. Typically, the eager girl would put her lips over the head of my cock and frantically rub my shaft until I either came or developed a friction rash. Then just when I was excited enough to cum from all this attention, usually about two minutes, she'd pull my cock off her lips, so that she wouldn't taste any of the nasty sperm that shot out and made lovely patterns on my clothes. \"What's that on my jeans, mom? Glue!\"\n\nOnly years later did I discover that this was not in fact a blow job, it was being jerked off with a little tongue action. Sort of what I could do by myself, only a tad wetter.\n\nWhat a disappointment. And yet, how could you blame her? It's not something that was taught in school, nor were the other girls any help \u2013 they didn't have anyone to teach them either. In most households, this was not discussed at the dinner table. \"Sweetheart, pass the salt, and lick my balls a little more tonight will you? How was school today kids?\" So here you had all these marginally satisfied guys running around wondering what was so great about blowjobs. I was one of them.\n\nWith the advent of video tape technology, we got to see a lot more blowjobs than we ever saw in the basement on the old 8mm projector. And there was sound! Moaning and groaning. At last, we got to see beautiful women sucking a cock so large that it belonged in the Jurassic age, using both hands and barely covering half of it, until the guy finally came a quart all over her face and tits. And you think we felt bad before? We went to our rooms and cried about how much nature had cheated us, and startled that a girl could take suck a large cock so far down her throat. No wonder they moaned.\n\nNow with DVDs, we can see the same thing, only clearer. You haven't lived until you've seen a blowjob on DVD, watched on a large screen television. It looks like an episode out of \"Don't Try This At Home.\" A huge face swallowing a python. It was intimidating to women and humiliating to men.\n\nNow for the good news. You are about to read a do and don't article that will suggest how a woman can dramatically improve her BJ skills, if indeed they need improving. Some women out there love to suck a cock s much we love to lick pussies, and need no improvement at all \u2013 none. They live for it. They love the feel, the taste, the sight. They moan with pleasure when they suck. They slobber all over you. They rub a cock on their face like it's a wrinkle remover. To those women I say, \"Come to papa!\" But in any event, you still may learn just one thing that will improve your performance, or clarify that you are as good as you thought. If so, it's worth reading \u2013 and you may have some fun. Read it at a party, that ought to spice things up!\n\nAnatomy-wise, the penis is relatively uncomplicated. There's the head, shaft and balls. Hasn't changed much since the cave man. But let's get a little more technical. The entire head of the penis is called the glans. The crown itself, the ridge of flesh separating the glans and the shaft is called the corona. The meatus is the opening at the tip of the penis where urine and semen emit. And the frenulum is the underside of the corona where the circle of the corona comes together, and where the shaft connects to the corona, that 'V' shape. The scrotum is of course the sac that hangs below the penis and holds the testes. Under that is the perineum, or 'taint' area, leading to the anus. If you need photos, there are many, many websites that have them, if they're even needed. Got all that? They don't teach all this in health class as a way of improving your blowjobs do they? Hmm\u2026maybe they should. \n\nI wrote this information not to bore you, but because I don't want to describe it over and over in the rest of the article. As I've said before, I'm not a doctor. Yet, I've been to the doctor many times, never discussed blowjobs. He did stick his finger up my ass with a glove on though. And that was in the waiting room. So we made a deal, I won't practice medicine and he won't write about how to give a blowjob. Sounds like a better deal for me.\n\nNow, here's the fun part, the do's and don'ts of giving a spectacular blowjob. These can put you in the BJ Hall of Fame. Where is it located you ask? In my display case next to the baseball trophies? It will have to remain a secret for now kids, but it's not in Canton, Ohio.\n\nOK, you're kissing, you're rubbing, you've kissed your way down his neck and chest. You've lifted his shirt and kissed down his stomach, and you're unbuckling his belt. What now?\n\nWatch any adult movie and what's the one thing they always do beautifully? They look into the lucky guy's eyes when they give him head, when it's physically possible. Why? It shows the connection they have with him. They're not just sucking a cock, they're sucking his cock, and they want to taste his cock. So start this practice early. When you're pulling off your fella's pants, begin looking in his eyes. An approving moan (would a gasp hurt?) or two when his cock springs free lets him know you're eager to please him and like what you see. \n\nDon't pump his penis like you're milking a cow. Gently (at least at first) rub his cock with your hands, making it as hard as possible. If you've gotten this far and he's not as hard as a rock yet, please come see me as soon as possible. Wait \u2013 did I write that? I mean, keep going. And don't just rub the top half of his cock, rub the entire cock, including in particular the glans and balls. The frenulum is incredibly sensitive and will send shivers through him \u2013 but I'll get back to that aspect. In the meantime, rub him all over, and don't forget his perineum and even his anus, lightly at this point. Again, I'll get back to that once the heat is on. \n\nRemember, the shaft of the penis doesn't have a heck of a lot of nerve endings. Its primary use, BJ wise, it to connect the sensitive head with the sensitive balls. The head of his cock and balls are where all the action takes place, so don't spend too much time giving him the shaft. The more time you spend with your tongue and lips on his head and balls, the better head you'll be giving. Why do you think they call it head??\n\nDo talk to him. Tell him how much you love him, how much you want him, how much you want to suck his cock and how good you're going to make him feel. Now, I know this may be a bit uncomfortable for those uninitiated in the ways of dirty talk (hmm\u2026another article in the making). But girls, I can't begin to tell you how arousing it is for us to know how excited you are and how much you enjoy what you're doing. Books have been written on just this subject. If you feel funny about it, and there's no reason you should, whether you've known the guy a week or have been married for 25 years, just start slow. \n\nPerhaps \"I've been looking forward to this,\" or \"I can't wait to taste you,\" would get the ball rolling. Then simply go with the flow. Sure, if you want to say, \"God I love this cock\u2026I'm going to suck your cock like it's never been sucked before\u2026suck the cum right out of you\u2026make you feel like you've died and gone to heaven\u2026would you like that, baby? Would you like me to suck your cock hard and long until you squirt into my mouth? Because that's what I'd love to do\u2026\" I guess that would be all right. But again, even if it's just an approving moan now and then. Anything is better than stone silence, where it seems like you're doing a chore.\n\nThe wetter the better, so don't skimp on the saliva. In other words, slobber all over his cock! If nothing else, all the licking it takes to do this is putting him in, let's say, a good mood. A jewelry good mood? Who knows. Certainly a dinner out good mood. More important, when you're pumping his lubricated rod with your hand, which is not such a bad idea, the saliva reduces the friction. So lick up and down his shaft with maximum drooling. Friction=bad, Wet=good. Comprende?\n\nDo swirl your tongue around the head of his cock. It's the most sensitive area and responds well to this loving attention. Now here's a little secret that many people don't know and that I alluded to earlier. The frenulum, that little V shape under his cock head, is mucho sensitive. If you use your tongue to play with it, you'll be doing your good deed for the day. Likewise his meatus. Flick your tongue along the tip of his penis to get this area. The head of his penis is like your clit. Suck on it, swirl your tongue around it, bob your head up and down with your lips over his head, lick all the areas I just mentioned and you'll have him gasping for air. Another winner: while you're sucking and licking his cock head, circle your fingers in an 'OK' motion around just the base of his cock. Then, clamping tightly, 'jerk him off' in a mini motion of no more than an inch or so. It won't make him cum, but it's exquisite.\n\nDon't stay in one spot doing just one thing. It becomes monotonous for both of you and begins to decay the pleasure after a while. When a guy goes down on you properly, he's kissing and licking all over, not just concentrating on one spot. Same thing with good head. Suck the top, lick the shaft, lick his balls, keep changing the pattern. Except when he's just about to cum. When you're got him this deep into the pleasure zone, and you can tell from his words or his breathing that ejaculation is close at hand, now is not the time to move away from what you're doing. Just keep it up until he cums.\n\nDo lick and suck on his balls. Those two babies are his pleasure zones, shooting sparks inside his head. If you haven't been doing this, you've been unknowingly denying him a real source of pleasure. Go easy down there, needless to say, it's not the place to play handball. But licking and sucking on his balls, while your hands continue to caress his shaft \u2013 it just doesn't get much better than that. \n\nDon't overlook his perineum and anus. This requires some explanation. If you think that a guy who likes his anus played with or even penetrated is gay or would like to be, you are dead wrong. A man's anus and surrounding areas are rich with nerve endings. Perhaps, it has been speculated, even more so than a woman's, and nobody faults her for enjoying anal sex \u2013 hell no. When you are licking his balls, if you go down a little further, licking his perineum which is, I'm testing you here, the 'taint' area between his balls and anus, you'll be rewarded with lots of moans, groans and heavy breathing. It just feels amazing. \n\nNow, and here's the dicey part. If you insert a well-lubricated finger, preferably a pinkie, just a little bit into his anus just as he's about to cum \u2013 watch out. He may cum like a fire hose from you massaging his prostate this way. Now this is not something I would surprise him with, in case he feels funny about it. But he won't feel funny if you don't! Tell him you know it feels good and that's what you're trying to do. Let him know you feel comfortable about it, that there's nothing the two of you should deny yourselves sexually, and he should be just fine. Which, by the way, brings me to another point for men only:  Guys, please, give the lady some courtesy \u2013 something to be attracted to. If you've had a long, hot day at work, or a great, sweaty workout at the gym, take a hot shower. Scrub the day's crud off your body before you ask her to swallow it, OK? Get clean, look good, smell good, and you're fighting a winning battle. If you want to do her a real favor, take a scissors and trim off some of the stray hairs around your cock and balls, carefully. I'm not saying shave the area, although it can be a hell of a lot of fun actually.</P> I'm just suggesting that you can save her a lot of time picking stray hairs out of her teeth or coughing them out of her throat if you remove some first. While you at it, if you'd care to be a gentleman, treat her nicely and with appreciation \u2013 well, that's another matter. Do it anyway though.\n\nDo give him head in different positions, not just with him lying on his back. Give him head on your knees while he's standing, even if it's at the kitchen sink \u2013 but not while he's carving the turkey. Sit him down in a chair and snuggle your face between his knees. Suck his cock in the shower. Blow him while he's working at his desk. Surprise him at work while he's giving a presentation to a large group at the Church and\u2026strike that. My point is that variety here, as with most every other aspect of sex, is the thing that keeps if from becoming routine, so get creative.\n\nDon't be afraid of cum. Sounds strange, I agree, on paper. But in real life, I've had girls nearly run out of the room, as though acid was spewing through my cock. This isn't 'Alien.' They ask themselves, should they watch it erupt like a geyser and keep pumping the guy's cock? Should they stop everything they're doing and watch the poor guy deflate like a balloon? Should they keep sucking and swallow all the creamy liquid? Will this get them pregnant? I'm not kidding, there have been some bizarre responses and actions regarding this, the most natural of culminations. \n\nLook, if you've been doing this right, the guy's going to cum. And you know just about when, too, based on his breathing, his hips thrusting his cock into your face. Congratulations, you've done a nice thing! He's going to feel just great \u2013 you may get flowers. So don't blow it at the end. Can you imagine how you'd feel if the guy gave up licking your pussy just when you began to orgasm? You'd be within your rights to kick him in the nose! Therefore, here are your options:\n\n<LI>Don't miss a beat, just keep sucking and swallow his ejaculate. Whether or not you like the taste, it won't harm you in any way.</LI> <LI>Again, keep doing what you're doing, take it in your mouth \u2013 no-one will blame you if it seeps out of the corners \u2013 and wipe in into a tissue.</LI> <LI>Pull your mouth off \u2013 if you absolutely must \u2013 when he starts cumming and keep jerking him off until he asks you to stop. Disappointing, but better than you stopping just at the moment of truth.</LI>\n\nTwo things I'd like to mention here about adult movies again. If you like the idea of a guy coming all over your face \u2013 and hey, it's OK with me \u2013 then do it. It doesn't make the BJ feel any better though. Second, although it's fun to watch the sword swallowing antics of pornstar gals who can take an eight inch cock as thick as a can of tennis balls to the root, in real life most women can't even take six inches down. And the truth is, it feels as good or better to have your cock sucked and licked top to bottom, or have the head caressed, then to be swallowed like a salami. However, to each his own.\n\nOK, you've built up to the BJ with loving attention, unless it's just a quick 'hummer' and that's OK, too. You've looked into his eyes, so he knows you're in the moment. You've slobbered all over his cock, getting it good and wet, maybe even rubbed it all over your face to show him it's one of your favorite body parts. You've shown loving attention to all areas, including the head, shaft, balls, etc. You talked to him, or at least hummed a happy tune to display your fondness for what you're doing. You've held his balls gently in his hand while you licked the sensitive underside of his cock head, making him squirm and moan. And you've kept up your end of the bargain until he rewarded you with showers of creamy goodness. Now what?\n\nNow let's warm up the car for that ride to the jewelry store. You've just performed the most intimate of acts, and given your man great joy. You've turned up the heat and joined the ranks of those lovers who know what they're doing, as opposed to the button down, straight lacesd masses who don't read this website and have no idea of what they're doing or how to please a man and probably never will.\n\nYou've done well. \n\nNow, the last thing you have to do is send me feedback. If you liked the article, please tell me, I love to hear from you. If you feel I missed something, or you'd like to clue me in on a twist of your own, I'm game. "
    ],
    "authorname": "BatsandGlamour",
    "tags": [
        "perineum anus",
        "balls head",
        "loving attention",
        "stray hairs",
        "lick shaft",
        "good mood",
        "feel funny",
        "shaft balls",
        "swirl tongue",
        "give head"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/blowjobs-for-dummies"
}