{
    "title": "One Million Words",
    "pages": [
        "This is a story close to my heart, I dated a girl with leukemia and it does have a profound effect on the people around this specific person. Things didn't work out and as far as I know she is still well. Please vote and comment.\n\nTo my editor Ozzy Vella, thank you so much for making this readable and being patient with ny mistakes. I appreciate it. Cassy, well you always help me sort through my crowded mind and make my ideas take on some life. Thank you\n\nEnjoy fellowe Litsters!\n\nxx SAbitch.\n\n*****\n\nIt was a hot summers' day in Bloemfontein as Skylar hauled another case of beer from the truck into her house, her brother Aaron right beside her carrying the last box. It had been that time of the year again, when they opened the year up with the biggest and baddest party. With University classes starting soon, everyone had to have one big throw down. And everyone knew wherever the Robertson twins were, the best party you will ever attend was not far behind. \n\nPushing the crate to the bar, for the barman to stock the fridges, Skylar stood back looking at the lapa complete with a thatch roof. The large bar encircled half the area, with fridges and shelves fully stocked behind it. Sofas and bean bags were pushed against the walls giving way to the dance floor. The DJ booth set up in the corner, large speakers spanned around to give it the full sound base needed. She smiled as she looked over to the pool, as the water shimmered against the mid afternoon sky. \n\nThe pool was definitely going to need to be cleaned tomorrow. The only downfall to hosting a party was people falling in one minute and the next taking part in activities that she really didn't want to think about too much. \n\n\"It does look good, doesn't it?\" Aaron said, standing at his sister's side.\n\n\"Let's jump in and cool down, then we can go and shower.\" Skylar suggested, raising her eyebrow at him. \"Yeah?\"\n\n\"Let's do it!\" Aaron took off his shirt and lifted Skylar over his shoulder.\n\nBefore Skylar could say anything water chilled her body, and soon enough she was covered in the cool clear liquid. Fighting to get to the surface, Skylar pushed hard on the bottom and pushed up for the desperate need of air. She heard, Aaron's girlfriend, Jordan laugh as she took a deep welcomed breath of fresh air. Skylar went into attack mode as she jumped Aaron who in turn fought back with just as much gusto as his sister. \n\nJordan walked over to them a towel in hand as she laughed, they were similar in so many ways, and yet still different. She marveled at them, taking in the pitch black hair that they most often wore in a bed head style, right now it dripped over their faces. Showing off their piercing blue eyes that betrayed every emotion they had, if you knew how to read them. The button noses and tanned skin, a far cry from their Scottish heritage. Aaron had a square but strong jaw, where Skylar had a more rounded and soft face. The twins did everything together. There favorite pastime was bonding together as they lifted a few heavy metal rods. They called working out fun, but the result of their 'FUN' was in the toned and muscular bodies. \n\nJordan smiled at them as they got out of the pool, water dripping from Skylar's clothes, as they clung to her body showing every small toned curve. Aaron's body glistened in the sun as water droplets ran over him. She could easily make out each muscle with each movement they made, as Aaron pushed Skylar back in the pool after pulling her shirt over her head.\n\n\"Asshole!\" Skylar shouted when she came up again. \n\n\"You love this asshole.\" he retorted.\n\n\"Unfortunately I do. Jordan, fasten a leash on your boyfriend!\" Skylar shouted back.\n\n\"Why? It amuses me to see you two acting like kids.\" Jordan laughed and handed Aaron a towel.\n\nSkylar laughed and made her second attempt to get out of the pool, running past the two into the mansion before Aaron got a hold of her. Almost slipping on the tiles, Skylar took a sharp turn for the stairs, Aaron hot on her heels. Skidding across the room, she fell flat on her ass. She threw her head back laughing as Aaron ran right past her, and stopping to look at her with a devilish grin on his face. \n\n\"You fucking loser!\" she shouted after him, laughing too hard to get up again.\n\n\"Says the one who fell on her ass.\" he said, between gasp of air and laughter.\n\n\"Can you two please go get ready? We have an hour left before the party starts.\" Jordan groaned, stifling her laughter.\n\nSkylar pulled herself off the floor, rubbing her ass as she walked up the stairs. She turned to find Aaron and Jordan hanging over each other laughing, as she limped up the stairs. \n\n\"Fuck you.\" she said through her groans of pain.\n\nClosing her bedroom door behind her, as she continued to massage her ass, a reminder of something her mother said came to mind. \n\n'It's all fun and games until someone gets hurt' \n\nMore often than not, Aaron and Skylar had developed a simple response, 'and then we get to laugh!' They would grin up their mother, with what they hoped were innocent looks and their mother would smile, shaking her head at them. \n\nShe missed her parents, but didn't understand why. They had always been too busy for the two of them. Too busy to pay attention to them, they had missed so much in their lives, and it never really had bothered her much. She had Aaron and he had her, and that's how they had always been. She shook her head ridding her mind of the memory as she walked into the bathroom. \n\nAfter her shower, she blow dried her hair and ran her iron through it. She pulled on her dark Levi jeans and a black tank top over neon green underwear. Putting wax in her palm, she focused on making each strand of her hair in the perfect bed mess she preferred. She smiled in the mirror as she finished it off with hair spray. Stepping into her World Inc. sneakers, she walked out of her room, locking the door behind her. She hated when she walked into her own room to find a few unwanted guests doing god-knows-what. \n\nShe walked down the stairs, the sound of music and the chatter of the first few guests filled the space. Aaron and Jordan were already mingling, when she walked outside to the lapa. \n\n\"Beer.\" Aaron said when he saw her approach, holding a cold one out to her. \n\n\"Thank you.\" Skylar smiled, taking the drink and making her own rounds greeting and chatting with her guests. \n\nIt wasn't long before the place was filled with people. Skylar was already feeling slightly buzzed. She had made an attempt to mix and talk to everyone. Conversation was however, short lived, when someone new grabbed her attention. Her head swam as she made her way down to the gardens, seeking out a little solitude. She saw her silhouette in the shadows, a tall and toned woman, as she slowly closed the distance. \n\n\"Hiding away?\" Skylar asked as she walked up beside her. \n\nThe woman turned slightly to look at her, as Skylar stared out into the city lights. \"There are too many people falling over each other. Also I am way too sober to deal with it.\" The pretty brunette said, giving Skylar a friendly smile. \n\n\"I'm not completely sober, but I'm never drunk enough for that.\" Skylar laughed.\n\n\"Agreed, I don't want to look like a blubbering idiot.\" she laughed.\n\n\"I'm Skylar.\" Skylar said extending her hand to the woman.\n\n\"Annabelle.\" she responded and shook Skylar's hand.\n\n\"So, Annabelle, shall I get us a bottle of something and we have our own party until we feel like joining the crazy ones again?\" Skylar offered.\n\n\"Sounds pretty good to me.\" Annabelle smiled and watched Skylar make her way to the lapa.\n\nSkylar grabbed a throw from the couch and a bottle of vodka with lime and some tequila just for the heck of it. She walked back to Annabelle and for a second she stopped to stare, she was indeed a beautiful woman. Her dark curly hair fell to her shoulders, framing her soft face and causing her hazel eyes to shine in the dim light. Her curves were visible under the summer dress, a flat stomach with a well rounded ass and full C cup breasts visible through the fabric.\n\n\"I got vodka, lime and tequila. It should keep us busy for a while.\" Skylar announced as she spread the blanket on the grass.\n\n\"Sounds perfect.\" Annabelle smiled joining Skylar beneath the sparkling sky that spread out before them.\n\n\"So what do you do?\" Skylar asked after she poured the drinks.\n\n\"I'm studying psychology. It's a bitch of a degree.\" Annabelle smiled, taking a sip.\n\n\"I will take your word on that.\" Skylar agreed.\n\n\"And you?\" Annabelle asked in turn.\n\n\"Studying Literature, I have a passion for writing. If I could study philosophy, I would have majored in that.\" Skylar sipped her drink.\n\n\"So what do you write?\" Annabelle's curiosity peaked.\n\n\"Mostly tragic love stories of the lesbian variety.\" Skylar laughed.\n\n\"Why tragic love stories?\" Annabelle asked, smiling.\n\n\"I don't know, it just piques more interest and I am pretty good at playing with people's emotions. Especially making them cry.\" Skylar responded with a shrug of her shoulders.\n\n\"Fair enough.\" Annabelle smiled, lying back onto the blanket she stared up to the sky. Skylar followed her lead, resting her arms on her sides.\n\n\"Wow, the stars are bright tonight.\" Skylar commented.\n\n\"Yeah, can you imagine living in a house like this? Having the money for anything your heart desires?\" Annabelle asked absent mindedly.\n\n\"It is not as full as you'd think. Money doesn't replace family and love.\" Skylar said with a wry smile.\n\n\"Maybe, but it does make it hurt less.\" Annabelle retorted.\n\n\"In some way, I guess.\" Skylar said more to herself.\n\n\"I wouldn't mind.\" Annabelle said imagining herself living in a house like this.\n\nThey lay in silence for a while, each with their own thoughts. It was Annabelle who broke the peaceful comforting silence as she asked more questions. They shared stories from their childhood, talking as if they had been friends forever and they were simply reminiscing. \n\n\"Come on, let's go dance.\" Annabelle announced holding her hands out to Skylar as she towered over the smaller woman. \n\n\"I am a horrible dancer, be warned.\" Skylar responded, taking her hand as she pulled her up.\n\nThey walked to the lapa, laughing all the way to the music. Annabelle took Skylar's hand and led her to the middle of the people dancing. As if her body had its own mind, her body moved to the sound of the music. 'Lyf Teen Lyf' (body against body) by Eden drifted around them. When the chorus hit everyone started jumping and that was something Skylar could do. Annabelle laughed at Skylar who looked like the Easter Bunny bouncing to hide Easter eggs. \n\nThey had been dancing for an hour, Annabelle impressed by Skylar, as a trance song began to play. Skylar moved and stepped perfectly to the beat. She knew Skylar was still acting the fool by the way she did it, her legs and feet moving from side to side, in different directions while she bounced up and down.\n\nAnnabelle looked at Skylar and tried to remember the last time she had such a good time or the last time she had laughed this hard. She had to do a double take when a man that looked almost identical to Skylar walked up to them.\n\n\"Where have you been?\" he asked.\n\n\"I needed some quiet, so I talked to Annabelle.\" Skylar shouted back.\n\n\"Annabelle, this is my twin, Aaron.\" Skylar shouted as she introduced them.\n\nThey shook hands and Jordan stepped into the group and danced with them, Annabelle had double the laughter when she watched the twins together. They moved together as if they could read each other's minds, Skylar dancing crazier than her brother. Annabelle excused herself to use the bathroom, bumping into a classmate on her way.\n\n\"I see you have met the hosts.\" Dana, who sat next to Annabelle in class, noted.\n\n\"Who?\" Annabelle asked confused.\n\n\"The Robertson twins, Skylar and Aaron.\" Dana answered quickly.\n\n\"Wow, I didn't know.\" Annabelle stared into the crowd.\n\n\"Skylar doesn't really mix with people, she tends to keep her distance. Seems like you found a way in, though.\" Dana said and disappeared.\n\nSkylar walked from the crowd to Annabelle, \"Do you want a drink?\"\n\n\"You live here?\" Annabelle blurted out.\n\n\"Yeah, I do.\" Skylar answered, confused.\n\n\"So when I went on about wishing I could live in a place like this, why didn't you say anything?\" Annabelle asked.\n\n\"Because where I live and how much money my parents have doesn't define me as a person. That's why I don't have friends, I only have acquaintances. People stop seeing you as a person and instead they see you as a walking wallet.\" Skylar retorted.\n\n\"Fair enough.\" Annabelle shrugged.\n\n\"So, do you want a drink?\" Skylar asked again.\n\n\"Sure.\" Annabelle smiled, she opted to forget what Skylar omitted. After all she'd had a great time so far and she didn't know Skylar yet.\n\nThey danced and laughed well into the morning hours. Skylar heard that Annabelle went to the same university and it sparked a conversation about all of the drama that seemed to fillow students. Annabelle and Skylar said their goodbyes as the sun was coming up and when Skylar went to bed she realized that she never asked for Annabelle's number, but figured they would bump into each other on campus.\n\n*******\n\nTwo weeks had passed since Skylar had last seen Annabelle and she couldn't stop thinking about the beautiful brunette. Annabelle had been the only thing that Skylar could think of, the way her hips moved to the music and her eyes wrinkled when she laughed. She was on her way home in the summer afternoon downpour when she saw Annabelle scrunched up in her jacket walking in the rain. Skylar turned her Porsche around and stopped next to Annabelle.\n\n\"Get in.\" Skylar shouted after she pushed the door open.\n\nAnnabelle looked bewildered but relaxed when she saw Skylar and jumped into the car. \"Oh God, I'm gonna get your car all wet.\"\n\n\"It needs a clean, so don't worry about it.\" Skylar smiled.\n\n\"Hi Sky.\" Annabelle smiled.\n\n\"Hey, Anna.\" Skylar returned the smile. \"Put this on, it's dry and will keep you warm.\"\n\n\"Thank you.\" Annabelle said and started peeling the wet jacket and shirt from her body to put on the offered hoody.\n\nSkylar stared for a second and then looked away as she didn't want to make Annabelle feel uncomfortable. Once Annabelle had pulled the hoody over her head she started driving again.\n\n\"Where to?\" Skylar asked.\n\n\"Emily Hobhouse dorm, please.\" Annabelle responded.\n\nSkylar turned the heater up and Annabelle held her hands in front of the vent to warm them up.\n\n\"How have you been?\" Annabelle asked after a few moments of silence.\n\n\"Good, just busy with school again, they start out hard.\" Skylar smiled.\n\n\"You're telling me. I mean I barely have time to eat!\" Annabelle agreed.\n\nThey stopped in front the dorm. \"Want to come up for some coffee?\" Annabelle asked.\n\n\"Yeah, that sounds good.\" Skylar switched the car off and grabbed another from behind her seat.\n\nSkylar got out and held the hoody like umbrella above her head and opened the door for Annabelle who joined her under the make shift umbrella. They ran for the stairs and once they were under the roof, they started laughing hysterically. Annabelle led the way upstairs and unlocked the door to her small room, \"Make yourself comfortable. I'll be right back with coffee after I change.\"\n\nShe disappeared out of the door after she grabbed some clothes from her cupboard. Skylar lay on the bed, looking at the pictures that covered the walls. There were a few with Annabelle and her family, always laughing, unlike Skylar's own family portraits. Annabelle returned a few moments later dressed in sweatpants and Skylar's hoody with two mugs in hand.\n\n\"I hope you don't mind, it's just so comfortable.\" Annabelle said, a soft blush coloring her cheeks.\n\n\"Not at all, it looks good on you.\" Skylar said and accepted the coffee.\n\n\"It smells like you.\" Annabelle laughed, realizing that it comforted her.\n\n\"Hopefully in a good way.\" Skylar joked, moving up to allow Annabelle some space on the small bed.\n\n\"I wouldn't be wearing it if it smelled bad.\" Annabelle rolled her eyes.\n\n\"So after you left the party I realized I never asked for your number and hoped that I would run into you again.\" Skylar confessed.\n\n\"Me too. I wanted to thank you for an amazing night. I can't remember the last time I had so much fun.\" Annabelle admitted in turn.\n\n\"That makes two of us.\" Skylar smiled and sipped her coffee.\n\n\"Every time I needed a laugh I just pictured you dancing.\" Annabelle laughed.\n\n\"It wasn't that bad.\" Skylar laughed and felt something trickle from her nose.\n\nShe wiped the back of her hand against it and saw blood, 'oh God,' was all Skylar thought. \n\n\"Here's a tissue.\" Annabelle said holding the box to her.\n\n\"Thanks.\" Skylar stood up and bent her head forward to allow the blood to flow out.\n\n\"Does that happen often?\" Annabelle asked a little concerned.\n\n\"Yeah, something about the veins being shallow in my nose.\" Skylar said in a muffled voice.\n\nAnnabelle held her hand and rubbed her back while they waited for the bleeding to subside.\n\n\"Thanks.\" Skylar mumbled and a few minutes later the bleeding stopped.\n\n\"Is it better now?\" Annabelle asked.\n\n\"Yeah I think it stopped.\" Skylar said, wiping her nose.\n\nThey ended up talking for hours before they settled in to watch a DVD, Annabelle snuggling close to Skylar and pulling Skylar's arm around her. It was dark outside when Skylar left as she hugged Annabelle goodbye and made sure they exchanged numbers. Annabelle walked back to her room, feeling lonely all of a sudden. She missed Skylar's arm around her, the safety she felt when Skylar was near and she wondered what that meant. She couldn't figure out the butterflies she felt every time she saw Skylar or the way she would just smile when she thought of her. It was all so confusing to her and she fell asleep with those questions in her mind.\n\nSkylar walked into her house and Aaron and Jordan were lying in front of the TV. \"Where have you been?\" \n\n\"With Annabelle.\" was all Skylar answered.\n\nHer mind wandered back to Annabelle, the way her heart raced when they were together. She felt so at peace when Annabelle was in her arms, but Skylar had stopped letting people close a long time ago. Yet Annabelle seemed to break through her defenses without even trying. Then she remembered her nose bleed and that made her mood sink.\n\n\"Sky? SKY!\" Aaron shouted after she ignored him.\n\n\"What?\" Skylar irritated.\n\n\"Something's bothering you.\" Aaron said staring at her.\n\n\"It's nothing.\" Skylar lied.\n\n\"I wish you would stop thinking you can lie to me.\" Aaron said.\n\n\"You know me, you know I don't let people in and somehow Annabelle is breaking through my defenses. Since, well, since everything happened I don't want to let people close and only cause them pain, but I can't fight this.\" Skylar told him half the truth, if he knew about the nose bleed he would freak.\n\n\"Sky, just go with it for once. She might change everything.\" Aaron offered.\n\n\"Yeah, Sky, you deserve some happiness.\" Jordan agreed.\n\n\"I don't know. But I'm gonna turn in, see you tomorrow.\" Skylar said and walked off.\n\nAnnabelle texted her and they made plans for the next day.\n\n******\n\nSkylar could barely focus on her classes the following day, her nose had bled again and she was becoming increasingly worried. But her worries fell short to her thoughts about Annabelle. She couldn't wait to see her later that night, they had agreed on dinner and a movie. Time ticked by very slowly but the closer it got to seeing Annabelle the more butterflies swarmed around in her stomach.\n\nAnnabelle was still confused about what she wanted from Skylar. She had wondered about Skylar and why she secluded herself from society. She thought about Skylar increasingly every second, wondered what it would feel like to kiss her and hold her close without any boundaries, but Annabelle was straight so this confused her. Her class ended and her nerves were wracked, she had to get ready for her date with Skylar. ",
        "'A date? Is this what that was? Is that what I want?' Annabelle asked herself as she made her way to her dorm.\n\nAnnabelle spent the next two hours trying to pick out the perfect outfit. She didn't want to be overdressed and yet she wanted to look beautiful for Skylar. She settled for tight fitting blue skinny jeans, a white v-neck top and strappy black heels. Her hair was styled and her make-up done to perfection. She gave herself another once over and heard a soft knock at her door and felt her heart rate increase drastically.\n\nSkylar stood there as Annabelle opened the door, dressed in black jeans and white sneakers, a light blue dress shirt and a black waist coat that she had left unbuttoned. Her hair was in its usual 'bed head' style and to Annabelle she looked like the sexiest woman on the planet.\n\n\"Wow, you look beautiful.\" Skylar said, handing Annabelle a single white rose.\n\n\"So do you.\" Annabelle smiled and kissed Skylar's cheek.\n\n\"Thank you. So are you ready?\" Skylar asked.\n\n\"Yes.\" Annabelle said blushing.\n\nThey walked to the car and Skylar opened the door for Annabelle. They drove to the waterfront and walked into the restaurant where they settled at a table and ordered wine. \n\n\"I was so nervous about tonight.\" Annabelle admitted.\n\n\"That makes two of us. Actually, if I'm being honest, I still am a little bit.\" Skylar said with a lopsided grin.\n\n'Oh my God, she is so fucking sexy when she smiles like that,' Annabelle thought. \"Me too.\" \n\nThe night was filled with laughter and small talk, the attraction growing between them with each passing moment. It was as if electricity filled the air around them and sizzled. After supper they made their way to the movies, picking a romantic comedy starring. Sitting in the dark theatre room, Skylar watched Annabelle, how the soft light of the screen touched her skin, adding a slight glow that shone right through her. \n\nAnnabelle was drowned inside the movie, filling the spaces of the leads with herself and Skylar. How it unfolded, how she wished it was them playing those parts, being those parts as their love grew. Skylar's hand rested gently over hers, as their fingers slowly entwined in the darkness of the theatre, building a new level of intimacy between them. It felt all too right. \n\n\"That was pretty good.\" Annabelle stated when they walked out. \n\n\"It was interesting.\" Skylar smiled, she felt happier than she had in a long time.\n\n\"What is it with people and romantic comedies? You know how it's gonna end and yet you watch it in anyway.\" Annabelle speculated.\n\n\"It's about the journey, never the destination. If you knew who you were going to spend the rest of your life with, would skip the journey to get to the ending? It is what happens in the middle that makes the story special.\" Skylar said as they made their way to the ice cream shop.\n\n\"That's... so romantic... you're a closet romantic!\" Annabelle said, with a soft laughter in her voice.\n\n\"What can I say? I have many sides.\" Skylar said laughing with Annabelle.\n\n\"That I can believe.\" Annabelle said honestly.\n\n\"So what flavor do you want?\" Skylar asked when they stopped in front of the ice cream shop.\n\n\"I'm going to be a real girl and get chocolate.\" Annabelle smiled.\n\n\"Okay three scoops of chocolate and three scoops of caramel, please.\" Skylar said to the assistant.\n\nThe girl handed the two cups of ice cream over and Skylar paid, \"I want to show you something.\"\n\n\"What would that be?\" Annabelle asked, with ice cream in her mouth.\n\n\"Just follow me.\" Skylar said.\n\n\"By the way, are you trying to make me fat or a diabetic?\" Annabelle asked seriously, pointing to the huge ice cream serving. \n\nSkylar burst out laughing, almost spitting ice cream on the people in the elevator with them. She burst out in a coughing fit, \"Wrong pipe.\"\n\n\"Sorry.\" was all Annabelle managed through her own fit of laughter.\n\nThey got off of the elevator on the roof and Skylar led Annabelle to her secret spot. They sat on the ledge and look out over the lake.Lights twinkled in the distance and reflected on the water.\n\n\"Wow, this is beautiful.\" Annabelle whispered, afraid of breaking the spell.\n\n\"I came up here a lot to think.\" Skylar confessed.\n\n\"I can see why, this is magical.\" Annabelle said.\n\nSilence fell between them as they admired the view and ate their ice cream. The silence was comfortable, peaceful and Annabelle felt safer than ever before. They sat like that for what felt like an eternity, simply staring out and each consumed by their own thoughts. \n\n\"Can you imagine the watching the sunrise from here?\" Annabelle asked softly.\n\n\"That would be beautiful. Are you up trying to stay up to watch it?\" Skylar asked suddenly.\n\n\"That would be amazing, but wouldn't we get arrested?\" Annabelle asked very tempted to stay.\n\n\"No. Well, I don't think so.\" Skylar said honestly.\n\n\"You can't be serious.\" Annabelle said laughing.\n\n\"I am. I really want to do it.\" Skylar looked over at Annabelle.\n\n\"Okay, let's do it.\" Annabelle couldn't deny those pleading blue eyes anything and it was Friday, so she didn't have any appointments.\n\n\"Let's go get blankets and something more comfortable.\" Skylar said getting up.\n\n\"So drive home and come back?\" Annabelle asked.\n\n\"Not exactly, I always have clothes in the car for emergencies.\" Skylar said with a smile.\n\n\"Okay, let's do it.\" Annabelle said with excitement.\n\nThey rushed to the car and drove it up to the roof, once parked they took turns to change and Skylar laid a blanket out on the roof. \n\n'God, I couldn't have done anything more romantic,' Skylar thought and wondered what she wanted out of this.\n\n\"I found another blanket. The air is kind of cool.\" Annabelle said walking to Skylar.\n\n\"I can't believe I have so much crap in my car.\" Skylar laughed.\n\n\"And here I almost thought that you planned this.\" Annabelle said jokingly.\n\n\"Wouldn't you like to know?\" Skylar wiggled her eyebrows and caused Annabelle to fall into another fit of laughter.\n\n\"So I was thinking, I mean I know we barely know each other, but it feels like I have known you my whole life. Would you come to the farm with me? To visit my parents, I mean.\" Annabelle asked, biting her bottom lip nervously.\n\n\"Do we get to camp in a field?\" Skylar asked.\n\n\"If you want to.\" Annabelle answered,\n\n\"Then, hell yes! I love nature and it sounds amazing.\" Skylar answered with a smile.\n\n\"Great.\" Annabelle said in relief.\n\n\"So when are we going?\" Skylar asked, feeling the excitement herself\n\n\"Next weekend, if you're up for it.\" Annabelle smiled.\n\n\"I can't wait.\" Skylar said honestly.\n\nThey settled onto the blanket and Annabelle threw the other over them, Skylar opened her arm to give Annabelle a more comfortable position to lie in. Annabelle rested her head on Skylar's chest and listened to Skylar's heartbeat. They stayed like that, talking through the night and sharing things about their lives. Annabelle couldn't help but feel that Skylar was keeping something from her, but she wasn't going to push.\n\nThey finally saw the first rays of the sun come up and they wrapped themselves in a blanket and sat on the ledge again. The sun's rays colored the sky, illuminating the earth in light and reflecting from the lake beneath. They watched in silence as the sky turned pink and orange, the view taking their breath away. Both felt sad when the sun was in the sky, knowing that this meant goodbye for the time being, but looking forward to the next weekend and being together again. \n\n*****\n\nThe weekend had approached and Skylar felt more excited as she packed her bags, she wondered what it would be like to spend time with Annabelle and her family. The part she looked forward to most was the camping trip. Skylar loved nature and she sometimes wondered how many opportunities she had left to enjoy it. Skylar felt more of a connection with Annabelle than she ever had with anyone and she welcomed the friendship, yet she knew that she felt something more. She had promised herself that she would not allow it to grow into anything more because she couldn't hurt someone like Annabelle with the turmoil that was her life. She made her way downstairs, still pondering how she was going to treat the situation if it did come to something more.\n\n\"Are you leaving now?\" Aaron asked, ripping her from her thoughts.\n\n\"Yeah, I'm taking the Jeep.\" Skylar said absent-mindedly.\n\n\"Drive safe and let me know when you get there. Most importantly, have fun.\" Aaron declared hugging his sister.\n\n\"I am looking forward to it and I'll call you.\" Skylar said heading out of the door.\n\nAnnabelle packed with a huge smile on her face as she thought about a weekend with Skylar and her family. For the most part she couldn't wait for the camping trip they had planned and all of the places Annabelle wanted to show her on the farm. She was so excited she could barely contain it. The only thing that bothered her was the fact that she felt more for Skylar than simple friendship and she didn't know how to deal with it. Did she follow her heart or the way she was raised? She didn't know what she wanted, but figured the time would come when she would.\n\nHer thoughts were interrupted by a knock on the door as a huge smile crossed her lips, \"Come in!\"\n\n\"Hey Anna Banana.\" Skylar said as she walked in.\n\n\"Hey Sky.\" Annabelle said giggling.\n\n\"I got us some energy drinks for the road. I can't have a sleeping co-driver.\" Skylar said putting the cans on the side table.\n\n\"Thank you, with all of the excitement I didn't get much sleep.\" Annabelle confessed.\n\n\"Then I am not alone.\" Skylar said, helping Annabelle gather her bags.\n\n\"Let's hit the road, Jack.\" Annabelle said with a grin.\n\n\"Speaking of Jack, I brought his CD for the part of the trip where we ill be stoned out of minds.\" Skylar walked out and waited for Annabelle to lock up.\n\n\"I love him, I don't know how people can hate him. I mean, he is the white, South African version of Eminem.\" Annabelle loved Skylar's taste in music.\n\n\"Agreed.\" Skylar said as she loaded the bags into the trunk of the Jeep.\n\n\"We just have to stop at the shop to get some beers and stuff for the picnic.\" Annabelle said as Skylar helped her into the Jeep.\n\n\"Perfect. I want to get beers, too.\" Skylar said turning the key in the ignition, officially starting their weekend away.\n\nThey stopped at the shop and stocked up on snacks for the road and Annabelle bought some stuff for the picnic she was planning while they camped. There was hardly any silence as they drove, realizing that they had a lot more in common then what they had officially known and learning that being around each other was easy and comfortable. When they hit the small town that signaled their halfway mark Skylar stopped next to the road and rolled them a joint. \n\n\"This is just mild, don't want to trip too much while I'm driving.\" Skylar said and she lit it.\n\n\"I still have to give directions, so that's a good idea.\" Annabelle smiled as she watched Skylar drag on the roach.\n\n\"I can't remember the last time I had so much fun driving with someone.\" Skylar said when she passed the roach on.\n\n\"That makes two of us.\" Annabelle said honestly.\n\nThey felt themselves relax as the effects kicked in. They looked at each other and burst into a fit of giggles. Neither knew why they were laughing but they couldn't stop and Skylar realized that she was happy for once in her life. All of her worries had been pushed aside by Annabelle's presence. They continued the last leg of their journey with Jack Parow blaring through the speakers, both moved to the beat.\n\n\"I've never listened to his music while I was stoned.\" Annabelle admitted, laughing at the strange things that Jack rapped in his songs.\n\n\"It makes a lot more sense when you're stoned, I mean they were stoned while the CD was recorded and the songs were being written so when you're on the same level as them when they made the music, you appreciate it more.\" Skylar explained.\n\n\"I have never thought about it that way.\" Annabelle said, dancing to the beat of Hosh Tokolosh.\n\nSkylar couldn't help but smile at the beauty next to her, lost in the music and loving it. Skylar started rapping to the next track and Annabelle stared and laughed.\n\n\"Ha-ha-ha who's got the last laugh, ha-ha-ha move like a giraffe, ha-ha-ha this is for the losers, ha-ha-ha fuck all the cool kids.\" Skylar went with the chorus.\n\n\"You are really good at that.\" Annabelle said between laughs.\n\n\"I know, I'm like the white Nicki Minaj.\" Skylar said, barely holding back her laughter.\n\nThey both burst out laughing, struggling to breathe through the continuous fits. The rest of the trip went in a similar way, the effects started subsiding and Annabelle made sure they took the right roads to the farm, when they got there Skylar breathed the fresh air in deeply and smiled to herself.\n\nBefore her stood a true 1800 style farm house, the building was white and built in the Victorian style. Skylar smiled. She felt at home with quiet that surrounded her in the form on yellow fields and green trees, the only sound animals in the distance. \"It's peaceful out here.\" Annabelle said, standing next to Skylar.\n\n\"I can literally feel myself relax.\" Skylar said and looked toward the door of the house opening in front of them.\n\n\"You made it.\" A woman who must have been Annabelle's mom said as she hugged her daughter.\n\nSkylar stood there and watched the family reunion. She wondered what her own parents were doing and whether or not they actually thought about her and Aaron. That thought soon disappeared when Annabelle's family walked toward her and gave her a hug.\n\n\"This is Skylar, Sky this is my mom, Elsie and my dad, Hannes.\" Annabelle said and smiled at the warm welcome they gave Skylar.\n\n\"Nice to meet you.\" Skylar mumbled.\n\n\"Come on in, we made some food.\" Elsie said, leading the way.\n\nSkylar and Hannes carried the bags inside and put them in the living room. Annabelle took Skylar by the hand and led her through to the kitchen where her mother was dishing up lunch.\n\n\"Thank you for bringing our baby home.\" Elsie said with a gentle smile.\n\n\"It's only a pleasure.\" Skylar said shyly.\n\n\"What are your plans for the visit? Your brothers and sister are coming tomorrow, so you two will have to share a room.\" Hannes said.\n\n\"That's not a problem, we want to go camping near the dam on Sunday. Other than that, we will just go horseback riding or swimming and I want to show Sky around.\" Annnabelle answered easily, hiding the butterflies she felt at the thought of sharing a bed with Skylar.\n\n\"I'm just here to follow Anna Banana around.\" Skylar blushed when she realized she had used Annabelle's nickname.\n\n\"That's such a cute nickname you have for her.\" Elsie cooed, seeing that the two women tried hard to hide what they felt for each other.\n\nShe wondered what they would do if their daughter started dating someone of the same sex, but she had already decided that it didn't matter who her daughter dated, as long as she was happy. She had suspected that her daughter felt something for Skylar long before the visit as she seemed much happier when Skylar entered her life. Seeing her daughter radiate so much happiness filled her own heart with joy.\n\nThey settled around the table, Annabelle's family taking a real interest in Skylar and her life. This was new to Skylar. Previously the only person she had in her life that cared was Aaron and then Jordan, after she and Aaron got serious. Lately there was Annabelle, too, but Skylar was scared of having Annabelle care too much. They finished lunch and Skylar followed Annabelle to the room they would be staying in. Skylar put the bags down and fell onto the bed.\n\n\"I am exhausted. I think that joint really took it out of me.\" Skylar said with a yawn.\n\n\"It's also the sudden calmness around us.\" Annabelle smiled.\n\n\"I have to admit, I haven't felt this calm in a very long time.\" Skylar confessed followed by another yawn.\n\n\"Take a nap, I will wake you a bit later and we can go for a horse ride. I just have to show you the sunset.\" Annabelle said with a soft caring smile.\n\n\"Sounds perfect. I just need to phone Aaron and tell him we're safe.\" Skylar dug in her pocket for her phone.\n\n\"Just shout if you need anything.\" Annabelle said and disappeared.\n\nSkylar dialled Aaron's number, \"Hey sis!\"\n\n\"Hey Arry, we're here.\" Skylar announced.\n\n\"You sound really relaxed.\" he said with a smile, his sister needed some relaxation.\n\n\"I am, it's so weird to see a real family. I wish you could see how much they care about their daughter, it's amazing.\" Skylar said, thinking of her own parents again.\n\n\"You know how mom and dad are. It made us who we are. They might not have been there but we have and always will have each other.\" Aaron said with conviction.\n\n\"You're the only family I need.\" Skylar said with a tear running down her cheek.\n\n\"And I will never leave your side, little one.\" Aaron said, trying to comfort his sister.\n\n\"I'm going to catch a nap, then we're going horseback riding, I will phone you tonight.\"Skylar said with another yawn.\n\n\"Have fun, little one. I love you.\" Aaron said lovingly.\n\n\"I love you, too.\" Skylar returned and ended the call.\n\nShe turned on her side and closed her eyes.\n\n*****\n\nAnnabelle didn't mean to listen, but she needed to go back in and get her other shoes, stopping short when she heard Skylar talk about how amazing it was to see parents care about their kids so much. Her heart ached for Skylar and she wondered if that was what made Skylar pull herself from people so much. She walked down the hallway and joined her mother in the kitchen.\n\n\"Where's Skylar?\" Elsie asked.\n\n\"She's taking a nap. I guess the driving exhausted her a bit.\" Annabelle grabbed a dish cloth and started drying the dishes.\n\n\"She seems nice.\" Elsie said, she knew it was too soon to broach the subject of her daughter's real feelings for Skylar.\n\n\"She is. I wonder sometimes how it is possible for someone to have so much love and sweetness in them.\" Annabelle had always spoken openly with her mother.\n\n\"Honey, she is also hurting very badly and I think she tries to give people what she never got.\" Elsie answered honestly.\n\n\"I know, but she doesn't let people in. Someone once told me that Sky preferred to not make friends and that it was strange for them to see her let me in, even if it is just a little bit.\" Annabelle said.\n\n\"I think you both need each other. You don't let people on either, Anna. When I heard you were bringing a friend I was so happy. You have always preferred solitude.\" Elsie reminded her daughter.\n\n\"I guess it was just luck that I went to that party then.\" Annabelle said, knowing that she too preferred to not have friends.\n\n\"Or it was destiny.\" This caused Annabelle look up at her mother and wonder about the meaning behind those words.\n\n\"Where's dad? I want to prepare two horses for a late afternoon ride.\" Annabelle said, avoiding what her mother's words.\n\n\"He's in the stables.\" Elsie said and watched her daughter walk through the door, wondering what it would take for her daughter to realize what she truly felt for Skylar.\n\n****\n\nAnnabelle carried a cup of coffee down the hall to her old bedroom to wake Skylar in time for the sunset ride. She peeked inside and couldn't help but smile at the peaceful look on her face as she slept. Annabelle simply stared for a while, how could she disturb someone who looked so beautiful and peaceful? After a few moments she moved forward and placed the coffee on the side table, touching Skylar's shoulder gently and giving her a soft shake.\n\n\"Hey Sky.\" Annabelle whispered when Skylar's eyes opened.\n\n\"Hmm, hi.\" Skylar responded with a smile.\n\n\"I made you some coffee.\" Annabelle said as Skylar sat up.\n\n\"Thank you.\" Skylar said, taking the cup she offered and took a long sip from the cup. ",
        "\"When you're fully awake, put on some jeans and running shoes. I just have to go show you the sunset.\" Annabelle said and got up to leave.\n\n\"Don't leave, just sit with me for a while.\" Skylar almost pleaded.\n\n\"I'll close my eyes when you change.\" Annabelle joked.\n\n\"Like you've never seen it before.\" Skylar joked back.\n\n\"No, never. I even shower fully dressed.\" Annabelle said with mock shock.\n\n\"So you do laundry while you shower, smart water saving technique.\" Skylar said with a laugh.\n\nAnnabelle burst out laughing, tears spilling from her eyes and her muscles cramping with the shudders running through her body. \"Oh my God, you are so funny.\" Annabelle said fighting the last of the laughter.\n\n\"Wow, now my stomach hurts.\" Skylar said, lying back on the bed, clutching her stomach.\n\n\"Okay, get dressed, before we die laughing.\" Annabelle said wiping her tears.\n\n\"Yes ma'am.\" Skylar said rummaging through her bag.\n\nShe pulled out a pair of jeans and a t-shirt and stripped down to her underwear. Annabelle couldn't help but stare, Skylar had the most beautiful body that she had ever seen. Her six pack abs were defined and led to the perfect v of her hips, her legs were toned and she could see the muscles flexing beneath them. Annabelle looked at Skylar's arms and wondered what it would be like to be held by those arms in a passionate embrace. She felt a wetness growing between her thighs as she watched Skylar pull her clothes on.\n\n\"Let's roll.\" Skylar said and put a cowboy hat on for a final measure.\n\n\"You are such a dork.\" Annabelle said laughing.\n\n\"That's why you're friends with me.\" Skylar said walking out of the room with a click of her tongue.\n\nAnnabelle followed her and then took to the lead to show Skylar where the horses were, \"Have you ever saddled a horse?\"\n\n\"Yeah, Arry and I used to go for lessons.\" Skylar said, she started saddling up the horse, smiling at Annabelle who simply stared in amazement.\n\n\"You simply keep surprising me.\" Annabelle said and saddled up her own horse.\n\n\"I'm not just a rich, city kid, you know.\" Skylar said with her usual crooked grin.\n\n\"I am starting to see that.\" Annabelle said, her knees feeling weak at seeing that smile.\n\nThey mounted the horses and Annabelle led the way to the hill from where they would be watching the sunset. She thought it to be perfect, on the first time they hung out they watched the sunrise, now on their first weekend together they could see the cycle complete as they secured their friendship. Skylar loved the serenity and peace of the farm, looking over the fields and feeling the sun beat down on her skin. \n\nThey rode up the hill and came to a halt. After tying the horses down Annabelle spread a blanket on the floor and removed cold water and ice tea from her backpack. Skylar settled next to her and they stared across the farm, taking Skylar's breath away.\n\n\"It's beautiful here.\" Skylar whispered.\n\n\"Yeah.\" Annabelle whispered back.\n\nThe sun was still above the surrounding hills, Skylar and Annabelle grabbed a bottle of water each, taking a few sips in complete silence. Annabelle lay back, supporting herself on her arms, looking very uncomfortable to Skylar.\n\n\"Come sit here.\" Skylar patted between her legs, \"it will be more comfortable.\"\n\n\"Thanks.\" Annabelle said with a slight blush and moved between Skylar's legs, placing her head on Skylar's shoulder.\n\nSkylar wrapped her arms around Annabelle as complete silence fell between them and they watched the sun begin its descent behind the hills. The sky turned pink and orange, creating a beautiful spectrum of colors in the sky.\n\n\"Wow. That was magical.\" Skylar said as the last rays disappeared.\n\n\"Yeah, I used to do this a lot when I still lived here. Just rode out here in search of serenity.\" Annabelle confessed, dreading the fact that she had to get up and lose the safety of Skylar's embrace.\n\n\"I wish I could have grown up on a farm.\" Skylar said honestly.\n\n\"It does have a magical quality to it.\" Annabelle agreed.\n\n\"What was it like? Growing up on a farm?\" Skylar asked.\n\n\"Hard work, you have to help out a lot and there isn't always a lot of time for socializing and because we're so far out of town I hardly ever had friends over. I guess I used the weekends as time for introspection.\" Annabelle said and moved to get up.\n\n\"The city isn't much easier.\" Skylar said as she followed Annabelle to the horses.\n\nThey mounted the horses and began their journey back home. The farm was magical and Skylar loved the sounds of nature, crickets chirping and owls howling. She would have loved to simply sleep under the stars and enjoy the beauty around her fully. Lights were burning in the house when they approached the barn. They removed the saddles and led the horses to some water and hay. They walked to house, hand in hand still mesmerized by the scene they had just witnessed. \n\n\"So how was the sunset?\" Hannes asked with a huge grin.\n\n\"Amazing, no words to describe it.\" Skylar said, dreamily.\n\n\"I forgot how much I miss it.\" Annabelle added.\n\n\"It makes you feel calm.\" Hannes relaxed back into his armchair.\n\n\"It does, yes.\" Skylar agreed.\n\n\"Dinner is ready.\" Elsie announced coming from the kitchen.\n\n\"Thanks, mom.\" Annabelle said and moved toward the dining room.\n\nWhen they entered the dining room the table had already been laid out, a true South African stew with steak, potatoes and mixed vegetables, rice and pumpkin. Skylar felt her mouth water as she tried to remember the last time she had a meal like this and even more the last time she had shared a dinner with her family.\n\n\"This looks delicious.\" Skylar said honestly, taking her seat at the table.\n\n\"Let's say grace.\" Elsie announced after taking her seat. \n\nEveryone took hands and closed their eyes, Skylar had never been a believer because of everything that she had been put through, but as a sign of respect she bowed her head.\n\n\"Our Heavenly Father, we thank you for this food and ask that you bless us and this meal, amen.\" Hannes said and opened his eyes.\n\nEveryone dished up and dug in, while eating everyone shared tales about their lives and stories that they had heard. After the meal Skylar offered to do the dishes. As Annabelle dried off, she looked at Skylar and smiled, then saw that her nose had started bleeding again.\n\n\"Sky, your nose.\" Annabelle said and pushed a paper towel against Skylar's nose.\n\n\"Shit, thanks.\" Skylar mumbled.\n\n\"Come here and sit down.\" Annabelle led the way and rubbed Skylar's back.\n\n\"You should go the doctor.\" Annabelle said with concern in her voice.\n\n\"Nah, I'll be fine.\" Skylar said in a muffled voice.\n\n\"Please Sky, for me?\" Annabelle pleaded.\n\n\"Maybe when we go back.\" Skylar said.\n\n\"Fine.\" Annabelle agreed.\n\nAnnabelle felt seriously concerned about Skylar, but she couldn't push Skylar into talking. They finished cleaning the kitchen and Skylar thanked the Blignaut's for their hospitality and headed to the room. She was tired and her kidneys hurt, she just knew it was back again but decided to hide it. It made her realize once again that she could not fall for Annabelle or allow her to get too close, yet she also knew it was too late. She was going to end up hurting Annabelle, no matter how hard she tried not to.\n\n\"You look a little pale.\" Annabelle said once they were in the room.\n\n\"My kidneys just hurt a bit from the horse riding.\" Skylar smiled sheepishly.\n\n\"I can maybe help with that, you just need to keep them warm. I think a massage won't do any harm.\" Annabelle said, pushing Skylar to the bed.\n\n\"You don't have to.\" Skylar said with laughter in her voice.\n\n\"Shut up and take off your shirt.\" Annabelle ordered, Skylar looked at her with a devilish grin at the order. \n\nWithout further argument to a battle she would lose, she pulled her shirt over her head in one easy swift movement. Annabelle was left speechless for the second time that day when Skylar removed her shirt, still wondering why Skylar seemed to have these profound effects on her. She pulled herself out of her thoughts and saw that Skylar had already lay down on her stomach. She grabbed a bottle of lotion and poured some into her hands, warming it up before applying it to her friend's skin. \n\nSkylar closed her eyes and marveled at the soft touch of her friend, her hands seemed like velvet on her skin as they glided across her back, sparking formerly unknown sensations in her as she felt herself desire the touch, needing it.\n\n\"You're burning up, are you getting sick?\" Annabelle asked worriedly.\n\n\"No, I just have a normally high temperature.\" Skylar responded in a sleepy voice. once you were used to lying about a certain part of your life, the rest came naturally.\n\nAnnabelle knew Skylar was hiding something, but she didn't know how she would get her friend to open up and tell her what it was. 'In time,' she thought to herself and saw that Skylar was almost asleep.\n\n\"Put on some comfortable clothes before you pass out on me.\" Annabelle said and lifted her hands, immediately missing the soft skin beneath her fingers.\n\n\"Hmmm.\" Skylar moaned and lifted herself from the bed.\n\nBoth women changed, trying their best not to admire the other's body too openly, settling in the bed when they were done. Annabelle moved in closer and rested her head on Skylar's shoulder, the same she had the night they spent together waiting for the sun to rise. Skylar fell asleep immediately while Annabelle lay there and wondered what had caused Skylar to shut the world out so much. She fell asleep with the same thoughts still swimming through her mind.\n\n****\n\nSkylar woke when she felt the sun coming through the curtains, Annabelle was asleep, locked tightly in Skylar's embrace and she stared down at the sleeping woman. One thing Skylar had never denied was that Annabelle was beautiful and she felt her heart reach out to the brunette. 'I can't fall for her, she doesn't deserve the pain that comes with being with me,' Skylar thought, yet the heart wanted what it wanted and would not be denied.\n\n\"Morning.\" Annabelle said in a sleepy voice and a huge grin.\n\n\"Hey there.\" Skylar smiled in return.\n\n\"You feeling any better today?\" Annabelle asked. 'Why do I want to kiss her?' she thought.\n\n\"Loads. Good and ready for whatever you have planned, Anna Banana.\" Skylar said, only half honestly.\n\n\"Perfect, because my brothers and sister are coming today.\" Annabelle said and moved to get up, reluctantly.\n\n\"I can't wait.\" Skylar answered honestly.\n\nThey showered and dressed, headed downstairs and a large breakfast was awaiting them. \n\n\"Wow, I am going to have to hit the gym really hard when we get back.\" Skylar commented and took her seat.\n\n\"You burn all of the calories with the activities on the farm.\" Annabelle reassured her.\n\n\"We'll see.\" Skylar said and thanked Elsie for the.food she had prepared. \n\nAfter they ate, the rest of Annabelle's family arrived, \"Sky, this is Vincent, Ricky and Melony.\" Annabelle announced.\n\n\"Nice to meet you.\" Skylar said shaking each person's hand.\n\nAfter Annabelle's family packed away their stuff, they all dressed in their swimwear and headed to the dam in Skylar's Jeep. The siblings chatted up a storm on the way, asking Skylar questions and making jokes. For once Skylar felt like a part of the group, not just someone who was going to pay for their drinks. They stopped at the dam and removed kayaks from the roof, packed out their food and drinks and pulled of their shirts so they could run into the water. \n\n\"Last one in the water is a rotten egg and has to serve the food.\" Vincent shouted and everyone started running into the water.\n\nElsie and Hannes laughed at the statement, knowing that they were going to serve lunch either way.\n\n\"Melony, you are now dubbed our humble servant for the day.\" Ricky said laughing, water dripping from his hair.\n\n\"Whatever, I wouldn't serve you even if you paid me.\" Melony retorted.\n\nA splash session started and everyone joined in, their laughter echoing in the distance as it soon turned into a competition to see who could dunk someone else the most times. After about an hour of the silly games they dragged the kayaks into the water. Skylar stood on one and attempted to balance, her muscles twitching beneath her skin as they worked to keep her upright. Without warning Annabelle caused a small wave that rocked the kayak and sent Skylar tumbling into the water. Everyone burst into fits of laughter and Skylar spat the water that went into her mouth.\n\nThey spent the entire day having fun in the dam and sharing a large picnic. The Blignaut's could see the way that Skylar and Annabelle looked at each other, but didn't say anything. They knew that the girls would figure this out between themselves. The sun started setting when they made their way home, Hannes and his sons started making a fire putside, while the women prepared dishes inside.\n\nThey had a braai and made small talk well into the night. Skylar got along with every one of Annabelle's family members and it amazed them both that things went so well. \n\nEarly the next morning Skylar received a call from her brother, he told her that her doctor had called and asked that she came in to see him immediately. She didn't understand why he wanted to see her in such a hurry as she hadn't told him that her symptoms were back. Aaron said that he had said it was simply for tests that Skylar needed. She told Aaron that they would drive back early the next day and that she was having a great time.\n\nThey spent the following dat setting up tents near the dam for their planned camping trip, making sure that they had everything they would need. Annabelle and Melony was unpacking their things while Skylar joined the two brothers in gathering wood for a fire.\n\n\"Anna, can I ask you something?\" Melony asked cautiosly.\n\n\"Yeah.\" Annabelle said, searching for the hoody that she had gotten from Skylar.\n\n\"Are you in love with Sky?\"Melony rushed the words before she lost her nerve.\n\n\"What?\" Annabelle asked in shock.\n\n\"We all see the way you two look at each other and we can feel the chemistry between you. Even mom said she can see how you two feel about each other, but you're not ready to admit to each other. She said that she can see that you are truly happy for once.\" Melony said honestly.\n\n\"We're just friends.\" Annabelle as an attempted counter argument.\n\n\"Whatever you say.\" Melony said and climbed out of the tent.\n\nAnnabelle sat in the tent mulling over her sister's words. She couldn't deny that she felt something more for Skylar than simple friendship. Skylar never gave any hint that she might feel the same, so Annabelle was just going to ignore these feelings and be a good friend. \n\nThey spent the day swimming and tanning, running around and kayaking. That night they gathered around the fire and told ghost stories until they were all tired and decided to turn in. Melony had said she wanted to sleep alone so her and Skylar swapped tents, which left Annabelle and Skylar to share a tent. It was very quiet between them that night, both consumed in their separate thoughts until sleep finally overtook them.\n\n****\n\nThe next morning they drove to farmhouse to pack everything and Skylar profusely thanked the family for their kindness. Theu invited her back again anytime she wanted to come out. After they said their farewells they started the long drive home, filling the miles with their usual chatter. \n\nAnnabelle spent the night at Skylar's house. Watching movies and sharing the rest of their weekend with Aaron and Jordan. The following day was back to classes. \n\nSkylar went to the doctor who did a few scans and drew blood, telling her that he would phone her with the results. Skylar talked to Aaron that day about her symptoms coming back and her fear of dragging Annabelle through this with her.\n\nThe week passed quickly and on Friday Skylar got the call she dreaded. She went back to the doctor's office accompanied by Aaron, who didn't want his sister to go through this alone. Skylar left with tears running down her cheeks. She knew that now she had to let go of Annabelle. She couldn't decide hat hurt more, the news she had just gotten or the thought of letting Annabelle go. \n\nSkylar spent one last afternoon with Annabelle. She had surprised her friend with a new car so that Annabelle wouldn't have to struggle to get around anymore. They had great fun that afternoon and Annabelle couldn't help but notice that Skylar was different and she felt as though this was goodbye.\n\nAnnabelle was happy and tried to phone Skylar that night to thank her again, but Skylar didn't answer or respond to any of her texts. Annabelle kept phoning and texting but still got no response. Confused, she spent her night crying herself to sleep. She saw Skylar on campus and when Skylar saw her she hurried off into the opposite direction. Annabelle realized just how much she felt for Skylar and couldn't seem to let go. What had she done to push Skylar away?\n\nShe now knew that she was head over heels in love with Skylar and she had spent the last week crying her eyes out, trying to figure where she went wrong. Skylar simply stopped responding to her messages and didn't answer when she called, even on campus Skylar avoided like she had the plague.\n\nAnnabelle stopped in front of the big mansion where she had first met Skylar. She scraped together her courage and got out of the car, walking to the door. She knocked loudly and waited patiently. The door swung open and an older version of Skylar was standing at the door.\n\n\"Can I help you?\" the woman asked.\n\n\"I'm here to see Skylar.\" Annabelle said in a shaky voice.\n\n\"She is in no condition for guests right now. I suggest you come back.\" the woman said rudely.\n\n\"Who's there?\" Annabelle heard Aaron ask as he approached.\n\n\"It's someone to see Skylar and I already told her to leave.\" the woman said when Aaronn came to stand next to her.\n\n\"Annabelle, come in. Just give me a second to deal with my mother quickly and I will take you to her.\" Aaron said.\n\n\"Skylar is not well!\" before she could finish Aaron interupted her.\n\n\"Mother, you have no say as to who can see her and who not. You've just arrived, how do you know who she wants to see? I am the one who took care of her. Just because you are now here because your conscience is eating at you doesn't give you the right to say who may and may not see her! Annabelle is her best friend.\" Aaron said and led Annabelle up the stairs.\n\nHe slowly opened the door and Annabelle saw a pale Skylar lying on the bed, looking like a ghost. Aaron smiled weakly and walked inside. The closer Annabelle got the more her heart broke. Skylar had blue rings under her eyes and she looked so weak and fragile. \n\n\"Sky, someone is here to see you.\" Aaron said and watched Skylar open her eyes.\n\nSkylar's eyes filled with shock and fear when she saw Annabelle, this was the last thing she wanted. Why couldn't Annabelle just let her go? Skylar was only going to bring her more pain.\n\n\"Hey, Sky.\" Annabelle smiled and walked to the bed, while Aaron left the room.\n\n\"What are you doing here?\" Skylar asked sitting up.\n\n\"You haven't returned my calls or spoken to me and I needed to know that you were okay and why.\" Annabelle said and broke down in tears.\n\n\"Don't cry, please.\" Skylar begged and pulled Annabelle onto the bed, wrapping her arms around the crying woman.\n\n\"Then why, Sky? Why did you just check out of our friendship?\" Annabelle asked between sobs.\n\n\"Because I wanted to save you the pain of being in my life right now, Annabelle, I never wanted you to see me like this. I am dying. They have exhausted all of their options and told me I have a year left, at most.\" Skylar said fighting back her own tears.\n\n\"What you mean?\" Annabelle asked, pulling back so she could look into Skylar's eyes.",
        "\"I have leukemia.\" Skylar said simply.\n\nAnnabelle's mind was reeling, how could this be? How could Skylar simply decide for her? Does she tell Skylar how she feels, knowing that they have limited time together?\n\n\"How could you make a decision that was mine to make? You never gave me the chance to decide for myself! Did you ever consider that I would have wanted to be here and support you through this? Did you even think about me when you made this decision to simply check out?\" Annabelle almost shouted in anger.\n\n\"I wanted to save you the pain and heartache! I didn't want you to see this or be here while my body fights a war against itself and ultimately destroys it.\" Skylar said, her own anger building.\n\n\"What about the pain you already caused? Did you think that maybe it would be worse if I found out after your death I would have had to live with the regret and guilt for not figting and being there for you?\" Annabelle shouted.\n\n\"No, I didn't. I just wanted save you from all of this.\" Skylar admitted in a whisper.\n\n\"I'm sorry. I just came to tell you something and now I end up shouting at you. Sky, please don't shut me out, because I would go through any amount of pain if it means I get to be with you.\" Annabelle said, crying again.\n\n\"I am sorry. I just thought I was protecting you.\" Skylar said, tears spilling from her own eyes.\n\n\"Sky.\"Annabelle whispered and took Skylar's face between her palms.\n\nSlowly Annabelle leaned forward, if she only had a year with the woman she loves, she was going to make every second count. Her lips brushed against Skylar's, the feeling sending a bolt of electricity through her. Skylar pressed her lips harder against Annabelle's, deepening the kiss with each passing second. Annabelle pulled away and looked at Skylar, her heart racing. She had thought of this moment a thousand times and she had never imagined that it would have this profound effect on her.\n\n\"Sky, I need to tell you something.\" Annabelle smiled sweetly, cupping Skylar's face.\n\n\"Has it got anything to do with the kiss?\" Skylar asked, running her fingers through Annabelle's hair.\n\n\"Yeah, a little. I am so in love with you, Sky, and I don't care that you are sick. I want to, no; I need to be with you and I want you to promise that you won't try to stop this.\" Annabelle smiled.\n\n\"I can't, Anna Banana, I can't let you be with me and cause you the pain it's going to bring.\"Skylar stood up and leaned against the wall.\n\n\"Sky. If you can look me in the eye right now and tell me that you don't feel the same way, I will walk out of that door and you will never see me again. I know you Sky, you can't lie and if you choose to lie, I will still leave but just know that it would hurt me more than anything than what cancer could ever cause.\" Annabelle said, knowing that she would not be able to leave.\n\nSkylar was quiet. She knew she had to try to protect Annabelle because she had seen what this had done to Aaron and she couldn't afford to cause Annabelle the same pain. But she couldn't deny her heart either. She was torn and she hated feeling this way. During their kiss she felt more than she had ever felt at any moment in her life, alive and at home for the first time.\n\n\"Sky? Talk to me.\" Annabelle pleaded.\n\n\"I can't hurt you this way.\" Skylar tried to make her understand.\n\n\"I already told you that you can't make decisions for me and I told you what you had to say to make me leave.\" Annabelle spoke slowly.\n\n\"You know I can't say that. Anna Banana, please just understand.\" Skylar was close to tears.\n\n\"Sky, I am not leaving here until you either tell me that you do or don't love me.\" Annabelle pressed her point.\n\n\"I love you, Anna Banana. When you kissed me I felt more alive and at home than I ever have, but that scares me. I don't have a lifetime to offer you and in the little time I have left I will only bring you pain. None of this is going to be easy and I don't want you to see me when I am that weak. I won't be able to deal the look you will have in your eyes when I lose my hair or puke my lungs out after chemo. You are the one person I don't want to look differently at me or treat me differently. Anna Banana, I am scared shitless, because for once I found someone and something that made life bearable and worth living. Now it has all gone to shit because the stupid cancer came back. All I want is to be the soldier in your eyes, like I always was, but I won't be after you see me cry, puke, lose my hair and grow weaker by the day.\" Annabelle wrapped her arms around Skylar's neck, holding the crying woman.\n\n\"Sky, you will forever be the soldier in my eyes. We are going to fight this and I will be there every step of the way. You are the strongest person I know and I love you. It doesn't matter that your hair will fall out or that you will grow weak, the only two things that matter to me is that you fight and that I get to love you as much as I possibly can.\" Annabelle spoke the words softly, soothing her friend.\n\n\"I can't... Let you do this.\" Skylar said pulling away, she couldn't be so selfish to let herself be happy and bring Annabelle pain.\n\n\"Right now, you can't say anything to stop me. You told me you love me, which was all I needed. So just shut up and kiss me.\" Annable said and pulled Skylar in for a kiss.\n\nThe last bit of fight that Skylar had left disappeared the moment Annabelle's lips touched her own. Her tense body relaxed and she melted into the kiss, wrapping her arms around Annabelle's waist. Annabelle clung to Skylar and that kiss as if her life depended on it, she knew that none of this was going to be easy but she also knew that it would be worth it. \n\nAaron opened the door and smiled when he saw Annabelle and his sister kissing. He knew that Annabelle would break through his sister's barriers and prove to her that there was something more worth fighting for in this life. A tear rolled down his cheek and he somehow he knew that it would all be okay. Tina, Aaron and Skylar's mother, came to stand next to him, wondering why she had chosen to give up her childrens' childhood to chase a career that could never bring her as much love.\n\nSkylar felt her brother's presence and broke the kiss, she held Annabelle tightly and smiled at her brother, silently thanking him for all of the sacrifices he made to keep her alive.\n\n*****\n\nLife wasn't easy, but Annabelle stood by Skylar and went with her to her first session of chemo. She couldn't imagine what it was like for Skylar and it killed her to see it making Skylar so sick. Annabelle was sitting in the backseat, stroking Skylar's hair as she lay in Annabelle's lap. Aaron looked in the rearview mirror every few seconds. \n\nThey stopped in front of the house and Aaron and Annabelle helped Skylar up to her room. Skylar collapsed onto the bed, before darting up and running to the bathroom to throw up again. Annabelle was right behind her, holding her head and rubbing her back, trying to soothe the convulsions. Aaron ran downstairs and fetched a bottle of water and some yogurt. \n\nAnnabelle helped Skylar back to the bed, Aaron gave her the water and yogurt and left the room to find Jordan. Annabelle helped Skylar sit up and handed her the water. Skylar drank eagerly and closed up the bottle, settling on her side as Annabelle cuddled into her. Skylar moved as close to Annabelle as she could, taking Annabelle's hand and holding it to her chest.\n\n\"Thank you, for being there and here with me now.\" Skylar said, holding onto Annabelle.\n\n\"I told you I will be, sleep my angel. You will feel better when you wake up.\" Annabelle said and nestled her head into Skylar's back, the smell of chemo clinging to her.\n\n\"Will you be here when I wake up?\" Skylar asked in a weak voice.\n\n\"I will be right next to you the whole time.\" Annabelle said in a muffled voice and raised herself to kiss Skylar's head.\n\n\"I love you.\" Skylar said and closed her eyes.\n\n\"And I love you.\" Annabelle said and squeezed Skylar's hand.\n\nAnnabelle lay there in silence, listening to Skylar breathe and thinking about how unfair life seemed to be. Here she was with the person she knew was her soulmate, but she was dying and suffering and there was nothing Annabelle could do. Tears streamed down her cheeks. How could she be this happy, scared, hopeful and sad at the same time? She loved the woman in her arms more than anything and her biggest wish was that she could save her.\n\n****\n\nSkylar had slept for almost three days, only waking up to eat and pee. Every time she opened her eyes Annabelle was right there beside her, like she promised. Annabelle was thankful for the holidays, she sat at the desk in Skylar's room and worked on her project. She had asked Skylar if she could use her as the subject and Skylar had agreed. She studied and worked hard to portray the true emotional stress that went with the disease. Annabelle was honest and told the story from the day she met Skylar to how they went from day to day. She decribed her love for Skylar and the effects it had on her and the rest Skylar's family.\n\nShe sat there and watched Skylar's chest rise and fall, her face peaceful and free from the agony and pain. Annabelle wished she could make Skylar that peaceful in their daily lives, that she could make love to her and show her what she truly felt. But she couldn't, not right now, she had to wait until Skylar felt better. \n\n\"Why are you staring?\" Skylar asked, smiling.\n\n\"Because you looked so peaceful and beautiful, I wanted to commit the image to memory.\" Annabelle said and moved toward Skylar.\n\n\"No, you are beautiful.\" Skylar wrapped her arms around Annabelle.\n\n\"I love you Skylar Robertson.\" Annabelle said and smiled down at her girlfriend.\n\n\"And I love you Annabelle Blignaut.\" Skyler said in turn.\n\nAnnabelle bent down to kiss Skylar but was stopped by a hand on her chest. \"Let me shower and brush my teeth first.\"\n\n\"Hurry, I need a kiss.\" Annabelle said and laughed when Skylar sprinted to the bathroom.\n\n'At least she's looking better today,' Annabelle thought and walked downstairs to make coffee.\n\n\"How is she today?\" Jordan asked when Annabelle entered the kitchen.\n\n\"A lot better, it seems. She was smiling this morning, so I think the next few days will be better. We might get her out of the house for a bit today.\" Annabelle said with a smile.\n\n\"Oh God, that is so good to hear.\" Aaron said.\n\n\"Agreed, I just want to take her some coffee.\" Annabelle said and poured water into the mug.\n\n\"Maybe you can give her some good loving too.\" Jordan said with a laugh.\n\n\"Uhm.\" was all Annabelle managed, with a blush.\n\n\"It might make both of you less grumpy.\" Aaron said and passed her the milk.\n\nAnnabelle shook her head and headed back up stairs. She did want to be with Skylar intimately, so much it hurt, but she couldn't do it when Skylar was not up to yet.\n\n\"Morning, beautiful.\" Skylar beamed and kissed Annabelle.\n\n\"Wow, hi.\" Annabelle said, staring at Skylar in her underwear.\n\n\"Thanks. Can I have another one of those kisses?\" Skylar asked putting the coffee on her dresser.\n\n\"As many as you want.\" Annabelle said and leaned in.\n\nThey kissed, their tongues dancing together and Skylar's hands roamed Annabelle's back. She lifted the hem of Annabelle's shirt and pulled it up, revealing that Annabelle had no bra on. She needed to feel Annabelle's skin against her own. Annabelle lifted her arms and allowed Skylar to remove her shirt. Her heart pounded in anticipation, she was weak in the knees and felt the wetness grow between her thighs. She pulled Skylar to the bed, Skylar making quick work of her pajama bottoms and sending them flying.\n\nSkylar gently laid her down, allowing her to move to the middle of the bed before crawling up Annabelle's body and sucking on her neck. Nibbling on her neck and soothing with soft licks and kisses, Annabelle breathed in deeply and let out a moan. Annabelle knotted her fingers in Skylar's hair and held her close, while Skylar kissed lower. She nibbled on Annabelle's collarbone, her hand moved down and softly carresed her lover's breast, feeling the nipple harden almost painfully at her touch. Skylar left a trail of kisses down Annabelle's chest and took her lover's nipple into her mouth, sucking the soft flesh and grazing it with her teeth.\n\nHer attention to Annabelle's breasts got her a loud moan in approval and fingers frantically running through her hair. Skylar switched breasts, giving each the same attention while continuing the slow torture on her lover's body. Annabelle gasped, still in shock of what Skylar was doing to her body with the simplest actions. She ached for release but didn't rush her lover, she knew that this was a moment to be savored. Her muscles tensed with anticipation when she felt Skylar's mouth moving lower on her body, her hips raised from the bed, desperate to find contact that would help her find the release she was seeking.\n\nAnnabelle's body was ablaze with soft nibbles and kissing on her torso, moving ever-so-slowly downward. Skylar hooked her thumbs into Annabelle's panties and started pulling them down, making sure to kiss every inch of skin that she possibly could. She kissed down one leg and then back up as she tossed Annabelle's panties away. Kissing over Annabelle's pussy lips she felt her lover's hips jerk into the air and a low growl escape her lips. Skylar hooked her arms around Annabelle's thighs and held her still. \n\nHer tongue traveled the length of Annabelle's slit and when it brushed over Annabelle's clit her breathing hitched and her muscles tensed. Skylar repeated the motion and Annabelle started grinding her hips into Skylar's face, desperate maintain contact. Skylar took the sensitive nub into her mouth and pushed two fingers inside of her lover. Annabelle let out a loud moan and felt the orgasm start to build inside her, like the swell of a wave picking up speed and waiting to crash ashore.\n\nSkylar picked up the pace of her fingers, pumping them hard in and out of her lover, while her tongue used the same rhythm on her clit. She curved her fingers upward and brushed over Annabelle's g-spot, sending Annabelle over the edge. \n\n\"FUUUUUUUUUUUCK.\" was all Annabelle managed to shout.\n\nSkylar slowed down to prolong her lover's orgasm. When Annabelle's hips stopped moving Skylar licked up every drop of cream she could get. \n\n\"Sensitive.\" Annabelle breathed.\n\nSkylar crawled up her lover's body and kissed her, Annabelle tasted herself for the first time and just knew she had to taste Skylar. She turned Skylar onto her back and ripped her underwear off and immediately repeated what Skylar had done to her. She was immediately addicted to Skylar's taste and didn't let up until she sent Skylar screaming over the edge, twice. Skylar pulled her lover up and kissed her, their mingled juices an even better taste than either expected. \n\n\"You are going to be the death of me.\" Skylar breathed when Annabelle settled her head on her shoulder.\n\n\"I think I am addicted to you. I just want more.\" Annabelle and started to move.\n\n\"Not now, please. I need rest.\" Skylar begged, holding her lover tight.\n\nAnnabelle laughed and snuggled onto Skylar's chest, closing and falling asleep almost instantly. Skylar kissed the top of Annabelle's head, falling into her own slumber.\n\n*****\n\n\"Sky, I want to play you a song.\" Annabelle said.\n\nThey had been together for almost a year and by this time Skylar had lost all of her hair and she was growing weaker by the day. Annabelle spent most of her time with Skylar, who was cooped up in bed for the most part of her days. Annabelle remembered this day to be one of Skylar's last few days and when she heard the song by one of the South African artists that dealt with cancer she had to play it for Skylar. She picked up her guitar and sat on the edge of the bed next to Skylar.\n\nShe strummed her guitar and started singing, tears rolling down her cheeks, as she softly sang the words that had become her life.\n\n'She asks are you awake? He says yes, so she asks what would you do with a million, one million words? I will write poetry about your mouth and body. I will then make songs and sing it until you fall asleep. Tonight I will kiss you in a new language created just for us. Oh, with one million words.'\n\nSkylar was crying hard by this time, her heart ached and she knew that her time was almost up. To see what it did to Annabelle hurt her even more and to hear these words caused her deeper pain.\n\n'I write your name on the trunk of a tree, where now reside. I wish I could ask you once more, hey what are we doing today?'\n\nAnnabelle tried to stay strong but she couldn't. She hated the thought that Skylar would soon be away from her and she would never see her again. Annabelle completed the song and put the guitar down, Skylar wrapped her arms around Annabelle and they cried together, holding on to each other for dear life.\n\n****\n\nSkylar had made dinner and asked Aaron for the night alone with Annabelle. Somehow she knew that the end was close and she wanted to give Annabelle something good to remember her by. When Annabelle came home she smiled her biggest smile when she saw the table set with candles, roses and wine. Their favorite songs were playing softly in the background and Skylar came from the kitchen, dressed in the same clothes as their first night together when they watched the sun rise.\n\n\"Wow, this looks and smells amazing.\" Annabelle said and kissed her lover deeply.\n\n\"I wanted to remind you how much you mean to me.\" Skylar said, her arms wrapped around Annabelle's waist.\n\n\"And you to me my baby.\" Annabelle responded.\n\nSkylar pulled Annabelle's chair out for her and took her seat across from Annabelle. She poured wine and they talked for a while, shared the meal and talked well into the night. They laughed about the funny times they shared and reminisced about good times.\n\n\"The first moment I fell in love you was that day we sat on the mountain and watched the sun set. My entire body tingled when I wrapped my arms around you and stared out at the scenery.\" Skylar admitted.\n\n\"I fell for you that night we waited for the sun to rise, cuddled up under that blanket with you. It was magical.\" Annabelle smiled at the memory.\n\nSkylar walked around the table and kissed her lover deeply. She took her by the hand and led her to the bedroom. They kissed deeply and slowly removed each other's clothes. Each savoring the seconds and small actions that it took to undress each other. Once their clothes were removed they moved to the bed and fell into their familiar pattern of love making. \n\nSkylar took her time making love to the familiar body beneath her, she kissed every inch of skin she could find and spend a long time sucking, biting and kissing Annabelle's nipples. Annabelle came from the extensive attention that Skylar gave her breasts and once she came down from her high she felt Skylar making love to the rest of her body. Skylar sucked Annabelle's pussy lips into her mouth, savoring the taste of her lover as she ran her tongue inbetween her folds. Annabelle whimpered when she felt Skylar's tongue enter her, pumping in and out of her with a desire she had not felt in a long time. Annabelle came again, screaming out her ecstasy to the world. Skylar didn't let up until they both collapsed from exhaustion.\n\nCuddling up afterward, Annabele's head rested her head on Skylar's shoulder and Skylar felt tear drop fall onto her skin.\n\n\"What's wrong, baby?\" Skylar asked, concern very audible in her voice.\n\n\"This is it, the end?\" Annabelle asked in a mournful voice.\n\n\"No, I just wanted to make you feel special, my angel.\" Skylar lied to reassure her lover and partner.\n\nAnnabelle knew it was the end, but this was not how she wanted to spend her last moments with Skylar, instead she held her tight and tried best to bathe in the warmth of her lover's embrace. Yet as Annabelle fell asleep, Skylar lay there and watched her. Tears were close but she kept them at bay. She lay there for hours and when she saw the first rays of the sun she silently got out of bed. She put some clothes on and walked to the balcony. Annabelle woke up shortly afterward and sat behind Skylar, wrapping her arms around her lover. They sat like that for a moment, Annabelle felt Skylar's head rest against her shoulder and within moments her breathing stopped. ",
        "Annabelle held her lover like that until Aaron came to take her away. She fell onto the bed she shared with Skylar and cried.\n\n****\n\n\"You died on a Thursday, the day my heart broke, never to be whole again. A week after you passed away, they read your will and I found the story you wrote about us. It has since been published and talks of a movie have started. My parents miss you and I have the feeling that someday soon they will be with you. Ten years have passed and I still cry at night, but I never regretted the time we had together.\" Annabelle said and placed a single black rose on Skylar's grave, like she has very week for the past ten years. "
    ],
    "authorname": "SAbitch",
    "tags": [
        "skylar",
        "annabelle",
        "tragic",
        "romance",
        "cancer"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/one-million-words-1"
}