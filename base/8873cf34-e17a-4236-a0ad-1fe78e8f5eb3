{
    "title": "Eve's Tower 02: Return Engagement",
    "pages": [
        "I bit the pillow hard as the pressure built, moaning through clenched teeth. A deep all-consuming swell that started in my stomach and branched out through every extremity. My body rocked steadily as the pace increased, the heavy sliding sensation as I was churned to my core by her thrusts. The thick appendage in my ass pulled and pushed at the tender ring of my opening, her grunts matching time with the motion. The dark flavor of the afternoon's business still lingered at the back of my tongue, and my panting brought sweet remembrance to mind, even as the gentle pressure in my gut bore witness to my deeds. \n\nShe had been insatiable when I got home, practically throwing herself on my, tongue searching my mouth to share in the savory leavings. She made me tell and retell, as she took my straining cock in her mouth, moaning lewdly at each detail. I counted my lucky stars to have been blessed with such a woman, even as she bent me over and slid the recently purchased purple cock into my still eager hole. Then rode me hard till I came, crying out with her own satisfaction as we collapsed together in a tangle on the bed. \n\n\"Tell me again,\" She whispered...\n\n____________________________________________________________________\n\nThe bell once again jingled its merry greeting as I slid through the door of Eve's Tower, the site of my recent awakening. Again, I was struck by the homey closeness of the place. The dark accents, the deep rugs, the faint aroma of incense and something sweet all lending themselves to the feeling of warm invitation.\n\nAt first glance I couldn't make out any people immediately in sight, so I wandered deeper amongst the shelves, glancing at the wares in all their sexual glory, a little relieved (but secretly disappointed) that Tabitha had not been readily at hand.\n\nI wasn't entirely sure what I had expected to accomplish in returning. My first visit had resulted in an encounter I hadn't at all been prepared for, but one that had opened a world of possibilities to me. My wife, quite contrary to my expectations, had been almost ecstatic to learn of what had transpired, and our lovemaking had achieved new heights of passion as a result. It was as if she had discovered a new toy, and was thrilled that I had indulged in a long held fantasy of mine without showing the slightest sign of jealousy or reserve. It was she that had slyly suggested that a return visit for another toy might be in order, and I couldn't help but wonder if who was truly the beneficiary of all this.\n\nSuddenly, rounding a corner of shelving I almost tripped over a woman kneeling in the aisle, head lowered to the task of carefully stacking small flat jars of a thick bluish liquid in a display, taking them from a box on the floor in front of her.\n\nShe yelped, almost falling forward, as I flailed to catch myself, several of the jars scattering before her. \n\n\"I'm so sorry,\" I stuttered, even as I struggled to keep myself from falling across her, my hands finding purchase on the shelves on either side.\n\nPulling myself upright I extended a hand down to her. She laughed good naturedly, and a taking my proffered grasp brought herself up facing me. \n\n\"No worries!\" she answered almost sweetly, \"I didn't hear you come in, are you ok?\"\n\n\"I'm fine, sorry about the jars\"\n\nAgain she laughed. \"They're fine,\" she stooped to gather the escaped items and dropping them in the box she straightened again. \"What brings you in today?\"\n\n\"I, uh,\" I hesitated, sudden heat flushing my cheeks, \"I was in the other day and was very pleased with my, uh, purchase, and wanted to come back and see if there was anything I missed.\" The words tumbled out of me, quick and embarrassed. \"Tabitha was, ah, very helpful\" I added, and immediately kicked myself mentally as I'm sure my voice betrayed me.\n\nFor an instant a knowing look flitted across her face, and I felt my cheeks redouble in flush as I knew instantly she had heard of my...transaction. Quickly though, she was once again her sweet helpful self, \"I'm glad you were pleased,\" she said. I couldn't help but catch the double implication. \"Tabitha's out today, but I'm Bridgette and would be happy to assist you in any way possible, what were you looking for today?\" \n\nI was momentarily crestfallen at Tabitha's absence, but tried my best not to let it show. \"Not really sure, just thought I'd browse.\"\n\n\"Of course! Just let me know if you need anything,\" And picking up the box she disappeared among the rows. I heard a door open and close, and I was alone again.\n\nI breathed a ragged sigh. I had been practically holding my breath for the last minute, trying desperately not to let my need and disappointment at Tabitha's absence show. I had been hungry for another taste of the pleasures she had given me, and now it seemed I would have to wait and return again. \n\nResigned, I started to slowly make my way out, glancing half-heartedly at the items around me, when my foot nudged a forgotten jar that had rolled under the lip of the shelf. I reached down to pick it up, and was about to place it with the others when I caught sight of the labeling.\n\nSeemingly hand printed on simple paper it read,\n\n\"Waymaker - Relaxing elixir for those who seeker deeper meetings\"\n\nMy mind turned at this, the possibilities churning through me, as I tried to imagine its effects. I cracked the lid and sniffed, a minty aroma, with hints of clove. \n\n\"It's a new product, just got it in!\" I practically jumped out of my skin at Bridgette's voice just behind me suddenly. Did everyone who worked here have the ability to seemingly teleport!?\n\nTurning I found her standing expectantly, that same disarmingly sweet look on her face.\n\n\"What,\" I found myself stammering again at the surprise and sudden re-embarrassment, \"what does it do exactly?\"\n\n\"Well, those that have tried it have reported significant relaxing effects. Many use it as an oil for massage, does wonders for the back, or so I'm told. Although, it has many applications.\" Again the knowing look crept into her eyes. \"You're welcome to try some out if you'd like?\"\n\n\"I, um, that's very generous, but I don't know...\" I trailed off, trying to seem suddenly interested in the label again, mainly to avoid her gaze that seemed to promise more. I wondered, momentarily, what the employee handbook article was that seemed to require brazen seduction on the part of the employees. \n\n\"Don't worry,\" she said in a suddenly silky tone. \"Tabitha told me all about you, we don't keep secrets here, but they stay well kept beyond these walls.\"\n\nShe turned and started toward the front of the shop saying, \"I think I've got a couple of samples behind the counter.\"\n\nI followed automatically, thoughts spinning. What did she have planned? Tabitha was one thing, but was I really about to do something with...to...whatever...a woman? Wasn't this cheating? We made our way to the counter and I stood dumbly, jar still clasped in front of me. She stepped around the counter, and bent out of sight for a moment. It was a deep wooden affair, darkly stained with gold trim swirling across the front. Heavy fabric draped down in the center giving it a slightly theatrical air. \n\nShe straightened again, a smaller vial with identical contents in grasp. Seeing me still standing mutely she smiled, \"Come on around, I don't bite.\"\n\nExtending her hand in a beckoning wave she guided me around till I was standing awkwardly before her, tucked into the nook between the counter and the curtained windows behind it. \n\n\"Now then, it takes a minute to set in, so go ahead.\" She said as she unscrewed the cap. \"Make sure you swallow for the full effect.\"\n\nI was confused suddenly. I was to drink it? Here I had been picturing her demonstrating it herself, a rush of images of her spreading before me, or maybe with an impossibly large toy, or myself with a toy, but drink it? \n\n\"Go on, it's quite tasty\"\n\nI titled the bottle to my lips, and taking another glance at her noted the look of anticipation creeping into her eyes. \n\nI drank and the cool tingle of mint spread across my tongue as the thick liquid filled my mouth. I moved it slowly around, suddenly relishing the texture before gulping down a healthy amount.\n\n\"Tasty indeed.\" I stated as matter of factly as I could, holding up the empty vial as if appraising a craft beer, trying not to betray how much I had enjoyed it. Already I was aware of a pleasant warmth spreading down my throat, as if my muscles were sighing open. \"So, should I...\" I started to say, but suddenly she was much nearer, her hands closing gently but insistently on my shoulders. \n\n\"Here's fine,\" She purred, voice practically dripping, \"The store's always empty around this time.\" And with that I felt myself being guided down and back, knees wobbling slightly at the sudden movement until I was sitting on the chair that had been previously tucked under the lip of the counter. \n\nI looked up, again confused, but the confusion was wiped instantly from my mind as she stepped forward, straddling my legs, and lifted the hem of her skirt.\n\nThere before me was another beautiful girl cock, half hidden beneath the shadow of the fabric.\n\n\"What, I, you too!?\" Was the best I could manage and this sudden revelation.\n\n\"Oh yes, honey,\" she purred again, her voice betraying her rising lust. \"Everyone here at Eve's Tower.\"\n\n\"Everyone!?\" I choked, a mixture of shock and ecstasy at this revelation. My hands, of their own volition had risen to meet this new wonder, even as my mind worked over time to take in the implications of what I had just learned. \"How many more?\" I felt foolish, here I was, my hands exploring another smooth warm shaft of womanly extravagance, and all I could voice was questions.\n\n\"Seven of us that run the place, and another twenty or so in the community.\" Came the reply, laced with slight amusement at my wonder. \"Now, any more questions, or are you going to see just what that stuff does?\"\n\nI needed no further encouragement and leaned forward, under the enveloping scrim of her skirt which she still had suspended, to run my tongue across the head of her steadily hardening shaft even as my hands sought to grasp and stroke her increasing length.\n\nWhere Tabitha had been long and firm with a slight upward curve and a deliciously tapered head Bridgette was thick, swelling slightly in the middle, with a heavy crown. I luxuriated in the feeling of the bulbous head lying heavy on my lips, as my dancing tongue sought out the bounds of its ridge. Lifting it slightly I practically rubbed it across my cheek, breathing a slight moan as I explored the thick veins and valleys of her supple flesh. The skin moved subtly across the straining tissue beneath, she had quickly reached full hardness at my ministrations, and felt delicious beneath my grip. \n\nShe sighed, a long low contented sound that deepened as I bathed her length and gently wrapped and twisted my fingers around this throbbing mass before me. A long lick up the turgid swell beneath, briefly tongue cupping the slight cleft at the base of the head and sucking down with my lips on her now dripping slit yielded a warm gush and another sigh. I was struck again by the difference. Instead of Tabitha's dark spice, here I found almost honeyed sweetness, shot through with a slight tang, like salted caramel. Eager for more I bore down and slid her deeper into my mouth, teeth scraping lightly on her ridge even as I sharpened my tongue and probed her succulent opening. \n\nI felt hands gently settle on my head, and spared a look upwards to find her leaning slightly back, eyes closed, a look of bliss spread across her face even as she began to thrust softly forward, a gentle rocking motion that caused her to slide deeper still. \n\nI wondered at the apparent changes wrought by the elixir. I had experimented in the past on my own with toys, testing my limits as I'm wont to do, but had never managed to get further than the back of my tongue before the range of motion of my jaw and inevitable reflex had forced me to stop. Ultimately, I had written it off as something I'd never be capable of, a fun fantasy, but not much more.\n\nBut here, in the quiet closeness of the shop, Bridgette's soft but insistent breathing -- half sigh half moan, the hot weight of her cock filling my mouth, the her sweet excitement seeping steadily out across my dancing tongue I found no such hesitation, no resistance as I took her deeper still. \n\nPlacing my hands on her hips I drew her forward insistently, stretching my jaw wide, flatting my tongue against the bottom of her shaft, bearing down on the now slick thick rod. My toes curled as her fleshy crown scraped inward, ever deeper, my body easing the way impossibly. Reaching what I thought was my limit I started to pull back, relishing the slide of her thick flesh in my mouth.\n\nShe spoke, in a suddenly reassuring tone, \"Don't worry, I'll be gentle.\" With that she pulled me forward gently, pushing in, dragging across my tongue, teeth scraping lightly at her ridges. Then suddenly, without warning or strain her length crested the back of my tongue, slid firmly against the back of my throat and plunged down. My moans that I had been only half aware of were cut short as I was abruptly filled in a way I had never felt before, my aching erection lurched hard as my nose met the slight tickle of carefully groomed hair at the base of her cock, and my eyes rolled back.\n\nHer fingers that had been gently guiding me went instantly rigid and she grabbed my hair, almost doubling over at the sensation of my throat hungrily closing around her. I froze, reveling in the wave of pleasure this brought to both of us, her cock pulsing, sending a fresh surge of pre that I felt as a warm wave traveling directly into my core, like hot chocolate on a cold day. I regained focus for a moment to find her staring down at me, passion and need burning in her eyes. Almost as if on cue she pushed back gently with her hands as I retreated slowly. I felt her crown slip out of my throat, the bulge of my neck relaxing as her girth left it, leaving me feeling suddenly empty. Spit slicked skin slid across hungry lips with a lascivious shlick as I sucked down on her length even as it withdrew. My tongue fought to wrap itself around her rod, teeth dragging at her skin, but finally she popped free with a wet smack and I inhaled lustily, savoring the rush of flavors she had left.\n\n\"It seems the effects have set in properly.\" She said with a slight smirk, \"Want to see just how much?\"\n\nAs a reply I tightened my grip on her soft hips and opened my mouth wide, nodding slightly, never breaking her gaze.\n\n\"Just tell me if you want to st...\" Her words were cut short by a squeal of pleasure as I pulled her in hard and buried her length in my throat completely. Pleasure exploded through me again, not physical per se, this was no fiery jolt of carnal sensation, although the wet bulge in my pants would say otherwise, this was a deep spiritual satisfaction as my mouth was filled with steaming flesh, cheeks puffed by thick member, throat bugling as that glorious crown plunged deep. I twisted my head, her length sliding in new and exciting ways in me. Lost in the whirlwind of it I began plunging back and forth on her succulent cock as she too took up a steady pace of thrusts, her hands still firmly intertwined in my scalp. \n\nMy hands began flying across her lower body, grasping at her wet length each time she withdrew, kneading her skin. Instinctively, I slid a hand down between her legs to fondle what I was sure was there, only to discover, much to my amazement, a seemingly perfect set of wet lips. In my passion with Tabitha I had neither noticed nor cared what extra appendages she had below, but now found myself confronted with a new and more wonderful reality. Bridgette bucked and moaned at the sensation but didn't stop her thrusting, and emboldened I slipped a finger gently in, testing her depths. Her body tensed as I twisted my probing digit, sliding it back in the come-hither gesture, rewarded with the feeling of what could only have been her equivalent of a prostate under my finger. (I would late come to find that women of her type had a unique organ that not only gave rise to their prodigious output, but had all the pleasure qualities of the female g-spot.) \n\nHer moans and grunts became full throated cries as I simultaneously swallowed her repeatedly, and adding a second finger, began milking her in earnest. She was practically fucking my face now, hilting herself with my nose pressed flat against her stomach, before withdrawing almost fully so that my lips were locked tight around the hard tip of her crown, and then thrusting forward again bulging my neck obscenely. \n\nI was in heaven, her taste, her smell, the rapid rush of sensation of being filled and voided. Her cock was dripping now, my saliva flying off as she sawed into me, running down my chin, splashing across her thighs. The sound, that lewd choking slush of wet flesh plundering needy maw, filled the air. \n\nAbruptly her cries rose in pitch, I felt her body tensing more and more, her dripping sex clenched tight around my frenzied fingers, the mound under then suddenly swelling, her cock suddenly steel hard in my mouth, her fingers clenching tight on my head. She buried herself completely and exploded.\n\nA tidal wave of hot stickiness poured into me as her pulsing member bucked and swelled, spreading my jaw, my throat, mashing my tongue flat. I didn't need to swallow as she dumped her load directly into me. She came and came. I could feel myself growing full as she cried out her ecstasy. Pulling back, I dragged the still spraying member out till it burst across my tongue, shot after shot of liquid delight filling my mouth as I gulped hungrily. She was shaking, still deep in the throes of her orgasm, knees threatening to buckle. Still she came. How long had it been? Seconds? Minutes? I didn't care. The sweet nectar of her cock was flowing past my lips now as she bucked wildly. Thick strings of it hanging from my chin, and still she came, and still I drank. \n\nFinally, she sagged, a long ragged sigh of satisfaction leaving her. Filled to bursting with her cum I licked hungrily at her length, savoring every drop of stickiness I could find. I wrapped my hand around her twitching length and drawing it backwards was rewarded with a final spurt and pleasured jerk as I closed it around her sensitive tip, one last dollop of pearly liquid that I let fall on my outstretched tongue.\n\n\"Holy shit. I just...you...holy shit.\" She said shakily, still holding my head, but now looking down at me with a mix of wonder and lust. \"That was incredible.\"\n\nI did not reply immediately, only swallowed the last of her sweetness and hummed contentedly.\n\n\"Holy shit, Indeed.\" I lurched at the sound of another voice behind me.\n\nTurning wildly, shock and embarrassment rushing across my face I found myself looking up into the face of another woman, leaned across the counter. It was instantly clear that she had been watching the for a while, and had been enjoying what she saw. It was also instantly clear that she must be one of the others that Bridgette had spoken of, for she was slowly stroking a stiff cock that jutted proudly from jeans that were splayed open, nestled around her thick hips. \n\n\"You must be the one Tabitha told us about.\" She said with a knowing but friendly smirk, \"I didn't believe her myself, but here you are.\" She had a slight drawl to her voice, smooth and soft.\n\n\"He's something else, Angela.\" Bridgette said, finally catching her breath and finally letting her fingers slip from my hair. \n\n\"Looks like you enjoyed yourself.\" Angela motioned with her chin, and looking down I was greeted by the sight of my crotch, cloth stained and straining, \"Or were you not quite done yet?\"\n\nI stammered, looking back and forth quickly between the divine figures standing over me, still fixed to the chair.",
        "\"I know just what you need.\" She said, sliding around the counter, coming to a stop next to Bridgette.\n\nI was eye level with her cock now, every bit the equal of Tabitha's thick length.\n\nAngela took my hands and bringing me to standing she deftly released my pants and let them drop to the floor in a puddle around my ankles, then hooking her thumbs in the band of my boxers slid them down over my hard shaft, the sudden cool air kissing it sending a wave goosebumps up my extremities. My cock bobbed rhythmically in time with my still hammering heart. \n\nReaching behind me she retrieved the discarded vial from the counter, and then sat on the now empty chair and, spreading her legs, poured the remainder of the liquid down across her shaft, then reached up to beckon me over. \"Come on Sugar, show me what you're made of.\"\n\nBridgette stepped behind me, her full bosom pressing into my back, her still sopping hardness nestled into lower back leaving a smear of our congress. Gently she guided me forward, stepping over my forgotten clothing as I straddled the seated newcomer.\n\nI lowered myself, without hesitation, until the moist crown of her cock nuzzled itself against my opening, spreading my cheeks gently. I groaned, a sudden wonton groan of satisfaction, needing this. Placing my hands on her shoulders I settled, twisting slightly. The motion caused her to slip in, just a bit, opening me and sending a jolt of carnal pleasure up through my chest, my already heightened state thrilling at the new feeling. She purred appreciatively, and leaned back as I rocked slightly. Bridgette leaned over me, hugging me from behind, her breasts pressing into the back of my head as I felt myself spread easily for this new cock. Down I bore, the familiar sensation of filling and stretching sending jolts of electricity through me. She slid in easily, no doubt aided by the elixir, until I came to rest on her lap, reveling in the hot twitch of her deep inside me.\n\n\"God, I needed that,\" I gasped, and began grinding against her, each movement causing her to twist and stretch me in wonderful ways. I bounced slightly, the pull and slide of her rod on my opening mixing with the deep wonderful ache of her length filling me.\n\nBehind me, Bridgette continued to nuzzle and caress me, sliding down till she was kneeling. Her hands settled on my hips and I felt her tip nuzzle up against my already stretched opening. \n\n\"Want to really put this stuff to the test?\" She whispered suggestively. I nodded automatically, lost in the thrill of the moment.\n\nShe slowed my movements for a moment, then pushed in, pressing up against the hard flesh already filling me and my straining ring. Slowly, incredibly, mind blowingly, I opened for her. A stretch like I had never felt rang through me, setting every nerve alight. Just on the verge of pain, but deep and satisfying, she filled me. Angela moaned at the added sensation, another cock sliding against hers, wrapped in hot hungry flesh. Steadily Bridgette speared me with gentle, insistent thrusts, every push gaping me ever wider, till I felt her hips push against mine, fully hilted. \n\nI was impossibly full of thick wet twitching woman.\n\nWe froze that way for a moment, a trio of breathless panting and moans.\n\nI was surrounded, bundled in warm bodies, laying on pillowy breasts, wrapped in gentle arms, filled beyond reason with hot straining hardness. Every nerve was singing.\n\nAs one we began to move. Angela under me gently rocking her hips, grinding her length against my prostate. Bridgette thrusting slowly. I for my part, as enveloped as I was, trying to force them deeper still.\n\nOur pace increased until I was practically bouncing on their dual shafts, hot bolts of pleasure burning through me. \n\nFaster we moved, until I felt I was a shining ball of ecstasy, a white hot volcano of sensation that peaked in explosive force. \n\nMy whole body locked up, hands clenched knuckle white on the back of the chair, face buried in the neck and hair of the woman under me as I came for what felt like forever, super novas of light and feeling detonating behind my eyes, finally resolving \n\nI collapsed, panting hard, heart hammering. \n\nWe lay there for a long moment, breathing together, as I became aware that one or both of them had likewise achieved their pleasure, a veritable river of warm wetness oozing from my now gaping hole. I loved it.\n\n\"Tabitha wasn't kidding,\" Angela said finally, half laughing. \"You're incredible.\"\n\n\"You know,\" She said, arching her brows thoughtfully \"We're having a little get together this weekend, you might enjoy it.\" "
    ],
    "authorname": "EvesTower",
    "tags": [
        "futa on male",
        "futanari on male",
        "futa",
        "futanari",
        "anal",
        "blowjob",
        "deep throat"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/eves-tower-02-return-engagement"
}