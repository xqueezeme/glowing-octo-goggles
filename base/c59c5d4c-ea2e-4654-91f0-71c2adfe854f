{
    "title": "Know Thyself Ch. 09",
    "pages": [
        "Thank you everyone for following through on the journey of this story. I'm sorry for how long it took to get this final chapter out. I found it hard to end my adventures in this world and wanted to make sure it was just right. If you put up with the length of time between the last chapter to this one, I honestly can't thank you enough. And if you've read the entire story up to now, I cannot express how thankful and humbling that is. Everyone's feedback has been so great and you've made this process worth it. I hope you find your closure in this final chapter and thank you again for being so open and positive for me. \n\n******** \n\nNow I must choose. \n\nI used to think it wasn't much of a choice, but that was mainly because of Wendy. Now she exists in both of my lives. I also now know just how much Ben's mother really loved me. \n\nLoves, present. Ben's not dead, he just doesn't exist at the moment. \n\nBut Ashley's family is great as well. I don't think I could go without knowing Jack. If I choose one life, I lose the other. Now that I'm with Wendy in both of them, it makes things a little different. I look at myself in the mirror and force a smile back. \n\nIs this me? \n\nI've discovered I'm a woman, in this life and the other. Though in the other I have the body of a man, I know deep down I'm really a woman. I also know I can live as a woman in Ben's world and I will be happy. But I can also live in this world as Ashley and be just as happy, maybe even more. How do you choose something like this? \n\nSex is much better in this life as Ashley, but sex is just sex. I don't think I can change my entire life just because of how good the sex is. I used to think women had it so good. Every man they encounter is just throwing themselves at them and they could have sex whenever they wanted. I envied women for that, or at least I thought I did. I realize now what I was really envying was the admiration I thought all women received from men. The idea that everyone wanted them. I wanted to feel like that. I wanted to feel accepted. Now I know that was just a fantasy. It's difficult to live as a woman. Everyday things I took for granted as Ben are now calculated encounters. Riding the subway, conversing with strangers, even walking down the sidewalk (as I learned the hard way). Do I want to live as Ashley? \n\nThe thing is, as I look at myself in the mirror I see myself. As weird as that sounds, it's a new feeling. I see Ashley's face staring back at me and I feel at ease. I feel like I finally know myself. Even this body feels more real to me than one of a man. At first it was weird, the extra weight of breasts on my chest felt foreign. Though I don't have the biggest breasts in the world, it was a new feeling. The idea of not having a cock between my legs felt weird in my head but soon I forgot about it and it became second nature. There's so much you take for granted about your body, whether you like it or not. You believe everyone feels and experiences the world in the same way. It's not true at all. In many ways it's like an entirely new world. I see colors differently, I feel pleasure differently, things feel heavier due to my weaker frame, my sex drive is different. I've even noticed I can concentrate in class better. I wonder if I have ADD as Ben but was never diagnosed? How do you compare one life to the other? \n\nI stand over my bedside table looking down at the silver half-dollar coin. I hold it up so I can inspect it. It's shiny, as if it's brand new. Weird if you think about how old these coins are. I wonder if this is the same one I used for my wish that started all this. It can't be. I'm sure it's just another coin. \n\nI wonder what happened in Ashley's life yesterday while I was gone? \n\nI pick up my phone and look at the text messages. There's a few from Wendy, mainly saying goodbye. The night before I turned back into Ben, I spent the night with Wendy. We must've said goodbye and she must've gone back to Boston. At least nothing is ruined there. I also have a couple texts from Alana. The first one is her asking why I wasn't in class. I guess I didn't go yesterday. That's when I realize I didn't answer any of her texts. I look back at Wendy's and realize the same thing. I never answered. \n\nWho's Ashley when I'm not here? \n\nI put the phone down and strip out of my clothes so I can take a shower. It sounds quiet outside my door, so I walk down the hallway and open the bathroom door. I stop short when I see a strange woman standing in there brushing her teeth. She's spitting out the toothpaste as I open the door. The look of shock on her face almost makes me laugh. \n\n\"Hello,\" she awkwardly says. \n\nI don't make a motion that I'm leaving. I just stand there, naked. \"Who are you?\" I ask. \n\n\"I'm a friend of Jack's. Fran,\" she says with a friendly wave. \n\nInstinctively I wave back. I don't know why I'm just standing there. She is attractive and I can't stop myself from looking at her. She wipes her mouth and walks around me to get out of the bathroom. \n\n\"Sorry,\" she says as she sneaks by. \"It's all yours.\" \n\nJack opens his bedroom door just as his friend gets by me. \n\n\"Ash!\" He calls out. \"For God sakes, put some clothes on!\" \n\nWell this morning is off to a bang. \n\n******** \n\nClass was pretty difficult. I just finished psychology and I can tell I'm falling behind. Thank God I was Ben yesterday, the day I have College Algebra and College Lit. Two courses I'm breezing through and can afford to miss. I feel like Tuesdays and Thursdays are my only real days of class. My phone buzzes in my pocket and when I pull it out I see I have a text from Alana. She asks me if I'm on campus because she's in the cafeteria having lunch. I do have quite a bit of time before my Poly Sci class, so I make my way to the cafe and find her table. \n\n\"Hey Ash,\" she says with a big smile as I take my seat. \"Where were you yesterday?\" \n\n\"Wasn't feeling well,\" is all I can come up with to say. \n\n\"I texted you but you never answered.\" \n\n\"Sorry. I think I ate something bad. I was puking all day, so I wasn't looking at my phone much.\" When you need to lie about why you missed something, food poisoning is always the go to excuse. It's also the way you know someone is lying about why they missed something. \n\n\"Ouch. You're okay now?\" \n\nI nod. \n\n\"Cool,\" she says. \"So what's new with you? Anything good happen this weekend?\" \n\nThere are many things I can say to brush off the comment. Something like \"not really\" or \"same old same old\" is what you usually say and then you move on. But there's something inside me that wants to lay everyone on her. \n\n\"I'm in love,\" I say, letting that hang in the air for a moment. She raises her eyebrows and nods, so I keep going. \"It's the girl I've loved for a long time. The first girl I ever came out to. I thought she hated me, but she came down here just to see me and we confessed our love to each other and then slept together and had wild amazing sex and now I want to propose to her.\" \n\nThe last part I wasn't expecting. I think it's been in the back of my mind since last night when Wendy told me (while I was Ben) that she always wanted to be married. I feel like I've been thinking about this all day and not, all at the same time. This is the thing that's been nagging me all day and I can't believe I just said it. Alana is staring at me with her mouth hanging open. I guess I never fully told her the extend of me and Wendy's relationship, so this might seem like it's coming out of left field. And it is coming out of left field, but it's not random. \n\n\"Whoa,\" she says. \n\nI nod. \"Yeah. Whoa.\" \n\n\"How long have you been...like...thinking about proposing to her?\" \n\n\"Um,\" I trail off for a moment. I don't really know the answer to that question. \"Since two seconds ago when I said it. I think I just realized it now.\" \n\n\"Holy shit.\" \n\n\"Yeah.\" \n\n\"So you're like, really in love.\" \n\nI look at her to see what her expression is. At the moment it's still just shock. I hope this doesn't turn into a fight. Alana did have a thing for me for a quick second and I hurt her. The last thing I want is to lose her again. \n\nI nod. \"Yeah.\" \n\n\"Oh my God!\" She cries out and stands up to hug me over the table. We hug and sit back down and luckily there's a giant smile on her face. It actually looks like she might start crying. \n\n\"That's so amazing! Congratulations!\" \n\n\"Well she hasn't said yes yet.\" My pessimism will not be suppressed. \n\n\"I know, but why wouldn't she? You're amazing. She's lucky, of course she'll say yes.\" \n\n\"Thanks.\" \n\n\"What happened this weekend?\" \n\nI have to think for a moment. It seems like so long ago. \"Well I thought she hated me because I went to visit her in Boston and it didn't go well. She's always liked me but was hesitant because she was afraid I was just leading her on. Like I wasn't really into girls.\" \n\nAlana nods because she knows that feeling all too well herself. It's that fear that initially separated us. It's amazing to me how I can talk about Ashley's life like I've lived it all along. Her past is my past now, but it's weird how it feels like second nature. \n\n\"She surprised me by coming down this weekend to see me,\" I continue on. \"She told me to prove how I felt, so I walked her in front my parents and I came out to them holding her hand.\" \n\nAlana puts her hands to her mouth and takes a deep breath in. \"That's beautiful.\" \n\n\"It was, and it's not even like I planned it out or anything. I was just running on instinct.\" \n\n\"Well that's how you know it's love.\" \n\n\"Yeah, I guess so.\" \n\nShe takes a few bites of her salad and I sit there for a moment. This realization has hit me hard. I feel like I'm in a haze and my head is starting to hurt. \n\nI'm going to ask Wendy to marry me. \n\nWhat if she says no? \n\nWhat if she says yes? \n\nI look back to Alana and I think she can tell how miserable I am right now because a look of concern hits her. \n\n\"What's wrong?\" She asks. \n\n\"How do I do this?\" \n\n\"Do what?\" \n\n\"Propose. Ask someone to marry me. That's like, intense.\" \n\n\"Yeah, no shit.\" \n\nI shoot her a sharp look. \n\n\"Sorry,\" she says quickly. \"I mean, yeah it's intense but it's a good intense. This is exciting!\" \n\n\"Then why do I feel so miserable?\" \n\nShe takes a drink of her Vitamin Water. \"You're just nervous, that's all.\" \n\n\"Would it be weird if I...\" I trail off. I'm not sure if I should ask this. I don't want to strain our relationship. \n\n\"If you what?\" She asks me. \n\n\"If I asked you to help me plan the proposal?\" \n\n\"Really?\" \n\nI nod. Shit, I hope she's not angry. She used to like me and we slept together, and now here I am asking her to help me ask someone to marry me. \n\n\"Of course!\" She shrieks. \"Are you kidding me? I'd love to!\" \n\n\"Really?\" \n\n\"Yeah! Oh my God, yes!\" \n\nWe hug over the table again. Thank God for Alana. \n\n\"So tell me about her,\" she says. \"What does she like to do? What's she into?\" \n\nI think for a moment and realize this is the thing that's been worrying me about this whole proposal idea. \n\nI don't actually know that much about Wendy. \n\n\"She's into me,\" I say. \n\nAlana nods, I can see the gears churning. I see a moment of excitement cross her face before she subdues it. Then a sly little smile stares back at me. \n\n\"I have an idea,\" she says. That's when I know I've come to the right person. \n\n******** \n\nThe first task Alana gave me was to get an engagement ring. She made a good point. \n\n\"If Wendy is the type of person who admired her parents' marriage, she probably wants you to do it the old fashioned way,\" she told me. \n\nAn engagement ring, getting down on one knee, the whole nine yards. Just because we're two girls doesn't mean it can't be traditional. \n\nI'm sitting on my couch at home flipping through the channels. I can't tell if there's nothing good on or I'm just not paying attention. \n\nDon't engagement rings cost thousands of dollars? \n\nI have one hundred and seventeen dollars in my bank account. So how much can I afford? \n\nAn engagement ring that costs one hundred and seventeen dollars. \n\nAlana said she's going to spend the night planning out what I should do. Next week is Thanksgiving, so Wendy is coming home for the holiday. That's definitely when I should do it, so I have a week to get this together. \n\nI look down at the silver half dollar coin in my hand. As I flip it between my fingers I wonder if I should take a trip to the Bethesda Fountain now and make my final wish. \n\nWhat if Wendy says no? \n\nThat's my hesitation. What if all this goes wrong and proposing freaks her out? I don't want to lose her. I'll make my wish after the proposal. If she says no, I don't know what I'll do. \n\nI hear keys rattle in the door and Jack comes in. \n\n\"What are you doing home?\" I ask him. \n\n\"Greg told me I can head out an hour early today. Not much going on. What's up with you?\" \n\nI shrug. He leaves and I hear his bedroom door close. Probably changing out of his suit. I finally decide to stop on Judge Judy. Seems mindless enough. I don't have to fully pay attention to it. \n\nAlana told me I should get Wendy's parents involved. Maybe surprise her at Thanksgiving dinner or something. That seems romantic I guess but it also feels awkward for me because I don't know her parents at all. I'm sure Ashley knows them very well since she grew up around them, but I haven't had any interaction with them since I became me. For all I know Ashley doesn't get along with them. \n\nJack comes back in dressed in jeans and a plain black t shirt. He plops down on the other side of the couch and puts his feet up. \n\n\"Jude Jude. Nice,\" he says. \n\n\"Hey, sorry about this morning,\" I apologize, thinking about how weird I was. \n\n\"It's okay. It was pretty funny actually. Fran was a little freaked out. She was like 'does your sister always walk around naked?'\" \n\n\"What did you say?\" \n\n\"Only when other girls are around.\" He laughs at that, looking pretty satisfied with himself. \n\n\"Who is she?\" \n\nHe shrugs. \"A girl from work.\" \n\nI shake my head. \"It's bad news dating people you work with.\" \n\nHe turns his head and looks at me with a smile. \"Who says we're dating?\" \n\nI force a smirk and shake my head. \n\n\"What's wrong with you?\" He asks. \n\n\"Nothing.\" \n\n\"Excuse me!\" Judge Judy yells on the TV. We both turn our attention to her as she starts berating some dumb looking pudgy fifty year old man. \n\n\"Oh shit,\" Jack says with a laugh. \"He crossed The Jude!\" He turns back to me. \"Come on, what's wrong? You know I can read you like a book.\" \n\n\"You don't read books.\" \n\n\"Then I can read you like a beer can.\" \n\nI laugh at that. Damn! He always finds a way to break me down! How does he do that? I turn to him. \n\n\"You have to promise to keep this to yourself, at least for now,\" I say. \n\n\"Promise.\" \n\n\"I'm going to propose to Wendy.\" \n\nHe looks shocked. \"No way! Really?\" \n\n\"Yeah. Why?\" His amazement is making me nervous. \n\n\"You're gunna like, gay marry her,\" he says with a stupid grin. \n\n\"Oh shut up!\" I punch him in the arm as I say it and am reminded of how much stronger he is than me. My weak little punch actually hurts my hand a little. \n\n\"This is serious!\" I say. \n\n\"I know, I'm just joking. But wow, that's intense.\" \n\n\"I know. And I have no idea how I'm going to do it or how I'm going to afford a stupid engagement ring. Whoever invented the tradition of giving someone an engagement ring is an asshole!\" \n\n\"No kidding.\" \n\nWe sit in silence for a moment and watch as Judge Judy continues to yell at people. \n\n\"You want to go shopping for a ring?\" He asks me. \n\nI shake my head. \"I need to figure out how I'm going to pay for it first.\" \n\n\"Well, that's why I'm going to go with you.\" \n\nI turn to him, not sure if I'm misunderstanding him. He smiles back at me. \n\n\"Come on,\" he says. \"Like you're going to be able to afford it any other way.\" \n\n\"Jack, do you know how much these things cost?\" \n\nHe nods. \n\n\"No, you can't,\" I say. \n\nHe stands up and walks to the door. He takes my coat off the rack and tosses to me. \n\n\"I'm making good money at this new job and I've already saved a lot. You're older brother is going to buy you an engagement ring. Don't make that any weirder than it already is!\" \n\n******** \n\nWe head down to the Time Warner Building at Columbus Circle. Originally I suggested we go to the Diamond District but Jack said it wasn't a good idea. \n\n\"All those stores seem sketchy. They're always trying to lure you in off the street like you're going to buy a diamond ring as an impulse buy,\" he explained. \n\nHe's right, it does seem sketchy. At least the stores in the Time Warner Building are actual stores that you know will be there tomorrow. \n\nWe walk through the front doors of the Time Warner Building and I'm suddenly reminded of how suburban it seems. It's weird thinking of a giant shopping mall existing in the middle of Manhattan. In the middle of the lobby is some kind of hybrid car that's being given away in a sweepstakes. There's always a car sitting here and I wonder if anyone actually ever wins it. You're supposed to fill out your information on a card and drop it in a box and supposedly they draw a card randomly and give the car to that person. You never hear of anyone winning these though. You'd think the local news would say something about it or you'd see it on social media. Someone posting a picture of them and the car with the caption \"I won!\" You never see that, so I never fill out the stupid card anymore. \n\n\"You have any idea what you want?\" Jack asks me as make our way into the building. \n\n\"I have no idea. I haven't done any research or anything.\" \n\n\"Does Wendy have a preference?\" \n\nI shrug. \"I don't think so. We can probably get anything and she'd think it was nice.\" \n\nWe walk past a couple jewelry stores, lingering once or twice to look at the rings in the display cases. Nothing catches our attention. We finally go into one of the stores and scan the display cases. A middle-aged woman in a tan suite comes up to us, a big smile across her face. \n\n\"Good evening. How are you two today?\" \n\n\"Fine,\" I say. \n\n\"Looking for anything in particular?\" She asks. \n\n\"An engagement ring,\" I say. \n\n\"Oh, how exciting! Congratulations.\" She looks at the both of us as she says it. I'm about to say something but Jack buts in, not realizing what just happened. \n\n\"How much is that one?\" He asks, pointing to a decent sized ring in the back of the case. \n\nThe lady unlocks the case and pulls it out, handing it to Jack. The lady goes into an explanation as to what kind of diamond it is but I'm not really listening. \n\n\"And how much?\" Jack asks again. \n\n\"Seven-hundred ninety-nine dollars,\" the lady says with a straight face. \n\nI almost choke. I'm about to say it's out of our price range when Jack hands it to me. \n\n\"What do you think?\" \n\n\"It's eight hundred bucks!\" \n\n\"Yeah I know,\" he says. \"But what do you think about it?\" \n\n\"It's nice,\" I say. \n\n\"It is,\" the lady chimes in. \n\n\"Jack, dad'll kill you if he found out you spent that much on a ring.\" \n\n\"So what, it's not his money.\" \n\nThe lady is looking at us with a strange expression on her face. \n\n\"She's my sister,\" Jack says to her. \n\n\"Oh,\" is all the lady says. \"Well then...\" \n\nI can tell she's a little flustered and she starts stumbling on her words. \n\n\"Would you...um...like to see something else?\" \n\nOh God! This lady thinks Jack and I are getting married. \n\nI think Jack picks on it as well. \n\n\"My sister is going to propose to someone.\" \n\n\"Oh,\" the lady says with a dumb look. She turns to me. \"You don't think he'll do it on his own?\" She has a chuckle as she says it. ",
        "\"She,\" I say. \n\n\"Oh, sorry. She.\" \n\nI don't think that made it any better. God, it's twenty-sixteen and we're in New York City. You think she'd be used to a girl coming in to buy an engagement ring for another girl. Every time you think we've advanced as a society, there's something to remind you how far we still have to go. \n\n\"I think that one is fine,\" I say to Jack. \n\n\"Okay cool. We'll take it,\" he says to the lady. \n\nJack gives the lady his card and she goes off to ring it up. \n\n\"I guess we're not really picky,\" he says to me with a laugh. \"We took the first one we saw.\" \n\n\"Are you sure about this? That's an eight hundred dollar ring.\" \n\n\"From what I've heard about engagement rings, that's pretty cheap.\" \n\n\"Thank you, Jack,\" I say and give him a hug. He hugs me back. \n\nThat's when I remember what I found out yesterday when I was Ben about Jack's arrest and rehab. \n\n\"You don't have to do this you know?\" I remind him. \n\nHe looks at me with a smirk. \"S'okay.\" \n\n\"No really,\" I say with some intensity. He looks at me and I look him in the eye. \"You don't have to do this because I was there for you in the past.\" \n\nHe looks at me for a moment, not saying anything. Almost as if he's trying to figure out what to say next. He looks down for a moment and then back up again. \n\n\"Do you love Wendy?\" \n\nThe question takes me off guard. \"Uh...yeah. I do.\" \n\n\"I mean like really love her. Like, you want to be there when she's old and disgusting and shitting into a bucket?\" \n\nThat's kind of a weird way to put it, I think to myself, but I nod. \"Yeah.\" \n\nHe puts his hand on my shoulder. \"You're my sister Ash. A real sister.\" He puts some emphasis behind \"real\" as if the word means something else. \"You brought me back from the brink. I owe you my life. If you love her this much, I want something from me to be a part of it. I'd buy you a million of these rings if I could.\" \n\nI don't know what to say. I'm literally speechless. Deep down, I'm ashamed. I don't deserve this. Some other Ashley is the one who was there for him. It was some other Ashley he's speaking about, yet here I am reaping all the rewards. \n\nI don't deserve this. \n\nThe woman comes back with the ring in a bag and a credit card receipt for Jack to sign. He writes his name on it and we say thank you to the lady. As we start to walk away, I open my mouth and start to speak without thinking about what I'm going to say. \n\n\"Can we sit down for a second?\" \n\n\"Sure,\" he says. \n\nThere's a bench on the wall we're walking by, so we stop and take a seat. Luckily we're the only ones sitting there. He looks at me. \n\n\"What's up?\" He asks. \n\n\"There's something I need to tell you but it's going to sound crazy.\" \n\nHe snorts a laugh. \"Okay, try me.\" \n\nNow I finally think about this for a moment. How do I say this? \n\n\"Have you noticed anything different about me lately?\" I ask him. \n\nHe takes this in, a slight nod of agreement. \"Maybe,\" is all he says. \n\n\"Do you trust me?\" I ask him. \n\nNow I see the concern hit him. I'm starting to worry him. \n\n\"What's wrong?\" He asks. \n\n\"Nothing's wrong. Really, nothing's wrong. It's just that, something happened to me recently and I haven't been able to tell anyone and after everything that's happened, I feel like I'm going to explode if I don't.\" \n\nHe shifts uncomfortably. I can tell he's trying to find something insightful to say. My Jack, always trying to be the older brother. \n\n\"You can tell me anything,\" he says. \"There's nothing you can't tell me.\" \n\nI take a breath. Do I really want to do this? I just need to tell someone. \n\n\"Do you believe in supernatural things?\" I ask him. \n\nHe thinks for a moment. \"You mean like ghosts?\" \n\n\"No, not like ghosts. I mean like spirits.\" \n\nHe nods. \"Yeah, I believe in that.\" \n\n\"Do you think, like, one spirit could inhabit the body of someone else?\" \n\nHe smiles. \"You mean like that Patrick Swayze movie?\" \n\n\"No! Not like that.\" I think about it for a second. \"Well, yeah, kind of like that.\" \n\nHe shrugs. \"Maybe.\" \n\n\"No,\" I say, trying to backtrack. \"Forget about that. Not like the Patrick Swayze movie. Just like, the human spirit. In one person, and then in another person.\" \n\nHe looks at me but I can't tell how. It's a searching look. I try to cut in before I lose him. \n\n\"I don't know how to explain this but I haven't always been me. Two months ago I was a man. My name was Ben. I was leading a miserable life and I was lost. On the night of my thirtieth birthday I made a wish that I would wake up as a different person and I did. I woke up as your sister. For the last two months, I've been this man Ben living in the body of your sister Ashley. But at the same time, I feel like I've always been Ashley. The more I learned about her, the more I realized she was me and I was her. We're the same person. I feel more like her than I ever did as Ben. I always felt like I was lost, like I was searching for some purpose. Ever since I became Ashley, I feel like I've found my real purpose in life. I finally feel like I've found some meaning. Like I finally matter.\" \n\nI stop and let that sink in for him. He doesn't give me anything in terms of what he's thinking. He just kind of looks at me. After what feels like a lifetime, he nods his head and looks down. \n\n\"I know what you mean,\" he says. \n\n\"You do?!\" I don't mean to sound so shocked but it's hard to hide. \n\n\"Yeah, I do. I used to feel the same way. I never told you how far gone I really was when I was using. I tried to hide it from you. I know you knew, but you didn't know all of it. Now I look at myself and it's like I'm a completely different person.\" \n\n\"No Jack, what I'm saying is I am a completely different person.\" \n\n\"So am I. I know exactly what you mean.\" \n\n\"No, you don't,\" I say. I don't know how to make him understand. \n\n\"You feel like you've gotten a second chance at life?\" \n\nI nod. \n\n\"So do I. You gave that to me. You remember what you said to me the night before my sentencing hearing?\" \n\nI don't move, I don't say anything. I don't want to say I have no idea. \n\n\"I was going to run away and you could tell. You told me 'If you don't like who you are, you're probably a good person trapped inside someone bad. So just be the good person. That's the real you.' I never forgot that. So yeah, what you're saying makes total sense. Whoever you say you were before, Ben was it? He was probably someone bad and you're real self was waiting to come out. That's what happened with me. Now I'm glad that I get to remind you of the same thing. This is the real you. The good you.\" \n\nThe tears started coming down long before he finished but I wait until he's done to wipe them away. I lean in and hug him and he holds me tight. I told him the truth. He can make sense of it in his own way. In a strange way, I feel like he gets it. Maybe not in the literal sense, but at least on some level. \n\n\"We're both different people now,\" he says. \n\nI smile. \"Yeah, we are.\" \n\nAs we walk back to the subway, we don't say anything. Nothing more needs to be said. It's not awkward. In fact, I've never felt more comfortable in my life. It's like we're both letting what was said sink in. I love this man. Jack is what every man should be. I could never figure out how to be a man. Maybe that's because deep down I was always a woman. But this man standing next to me, he's figured it out. I'm proud to call him my brother. \n\n******** \n\nThe next week was a blur of activity and stress. Midterm exams came and went and as if those weren't enough, try adding in planning an engagement. Thank God I took all these classes twelve years ago. \n\nWell, most of these classes. The psychology midterm kicked my ass! \n\nIt's the morning of the engagement. Or at least, the morning of the proposal. I can't forget that what I'm doing today is asking her to marry me. She hasn't said yes yet. For as much as Alana has been a buzz, it's not that elaborate of a plan. I'm not complaining mind you, I'm glad for it. The last thing I want is a surprise string quartet or something like that. Plus that's not Alana's style. She's been more my emotional support. \n\nWendy and I have been texting back and forth the last couple of days. I'm going to spend Thanksgiving dinner with her family. I got my parents to agree to it when I told them the purpose of it. Surprisingly, everyone caters to you when you tell them you're going to propose to someone. The plan is to have dinner at her parents house, then we're going to go to my parents house. However, her parents are going to leave the minute we do and book it to my house. I'm going to try to stall Wendy so that her parents have enough time to get to my place. When we walk into my apartment, everyone's going to jump out and surprise her and when she turns around, I'm going to be on one knee holding out the ring Jack and I bought. \n\nPretty lame, right? \n\nI have to downplay it in order to keep myself from going insane. What if she says no to me in front of my whole family? What if I've read this whole situation wrong? Last night I was watching YouTube videos of proposals where the girl said no. I couldn't stop watching, just video after video of the worst case scenario. Mind you, most of the videos were of people proposing at sporting events, something so lame it makes you wonder what the two people were doing together to begin with. Why do people do that? \n\nI'm getting dressed and then I'm going to head out. I strip out of my clothes and go to the closet door but stop before I open it. I stare into the full-length mirror at my naked body. It's crazy to think all of this feels so normal now. Look at me. I have such a small frame, my arms and legs are almost poles. It's crazy to think this body feels so real to me. I put my hands on my breasts and lightly feel the curve of them. My skin is so soft. Maybe I forgot about all this because I spent the last day as Ben. I don't have any hair other than the top of my head. My vagina is bare as well and when I put my hand on it I can feel the warmth coming off of it. I spin around and turn my head to look at my butt. Even that has a perfect curve. I wonder why I was put in such a beautiful body? I wonder how my experiences would've changed if I had been given a different one? It's easy to forget how beautiful you are when you've spent your whole life trained not to look in the mirror. Growing up as Ben, I always turned away when I saw my reflection. It wasn't a voluntary thing. I never realized I was doing it until one day when I noticed a mark on my neck right below my collar. It was a dark spot, almost like a mole but not raised. It blew me away that I had never noticed it before. I was around twenty-five at the time, so I had spent twenty-five years not knowing what my body looked like. After that I still looked away from my own reflection, the habit couldn't be broken. I would hate myself afterwards for doing it. I couldn't stop though, it was a part of who I was. \n\nAs I stand in the front of the mirror now, I take a long and good look at myself. I have high cheekbones and kind of a round face. My lips look so soft. It's funny, they don't feel any different than my lips when I was Ben, but they look so much different now. I turn to the side and bend over, sticking my butt out to form an L shape with my body. This is the image that would've always turned me on when I was Ben. This submissive posture, waiting to be taken by some unknown man who'll come up behind me. \n\nI'm who I would desire. I'm Ben's fantasy. \n\nHow is that possible? Even as Ben I felt like a woman. I learned that last week. Is this why I'm here? If you can't have your fantasy, you'll become it? I can feel that familiar warm feeling start to fill me and my pussy starts to become moist. \n\nI'm being turned on by myself. \n\nNow narcissistic can one person be? Here I am just staring in the mirror, patting myself on the back for how beautiful I am. I should feel ashamed. \n\nWhat's the harm? I deserve to feel pretty for once in my life. \n\nI hold my pussy and stare at my own eyes staring back at me. I am Ben's fantasy. Except this isn't a fantasy, this is real. \n\n\"Fantasies are made to be real,\" a familiar voice says behind me. \n\nI spin around, startled, my heart beating out of my chest. Standing in my room is the Fountain Man. His head is tilted to the side and he seems to be looking me up and down. He looks like Ben. He looks exactly like I used to look, but I know he can't be. I'm Ben. \n\n\"You're Ashley,\" he corrects me. \n\nI'm both Ben and Ashley. \n\nI take a good look at him, looking at what I spent my whole life trying not to see. I slowly walk up to him and he says nothing, just stares back at me with a curious smile. I lift the bottom of his shirt and he lifts his arms over his head in compliance. After I take his shirt off, I take a step back and look at him. \n\nNot bad. I always pictured myself a little chubbier. Maybe he altered my original appearance in order to make me feel better. \n\n\"I am you, as you were,\" he says to me. \n\nMaybe it's because my frame is so much smaller but I notice some definition to his muscles that I never realized before. I feel the space between my legs release a few drops of moisture. I want to see what the rest of me looked like. In response, he undoes his belt and slips his pants and boxers to the ground. I always forget he can hear my thoughts. After he kicks them off, I look at his half hard cock. It's weird seeing it from this angle. It's almost like looking in a live mirror. It's bigger from what I remembered. I never thought I was particularly small but I also never thought my cock was anything a girl would brag to her friends about. As I stare at my old cock, I feel my feminine instincts kick in and a slight bit of moisture fills the hole between my legs. \n\n\"Do you like what you see?\" He asks me. \n\nWithout taking my eyes off his cock, I nod my head but decided to correct myself. \"I mean no.\" \n\n\"Why not?\" He continues. \n\n\"I never liked myself,\" I say. \n\n\"Do you find me attractive now?\" \n\nI was worthless, a man no one ever desired. \n\n\"Yes,\" I whisper. \n\nMy legs begin a revolt against me and I take a step closer. \n\n\"I've told you before,\" the Fountain Man begins. \"You are Ben and you are Ashley. Say it.\" \n\nI take another step closer so that now our naked bodies are almost touching. I reach down and wrap my hand around his cock. \"I am Ben and I am Ashley,\" I say. \n\n\"You will never love one and not the other,\" he says. \n\nI keep my eyes locked on his as I start to move my hand up and down his shaft. I can feel it getting bigger in my grasp. I don't know why I always thought this cock was so undesirable to women. \n\n\"Ben Telany, Ashley Montgomery, you must learn to love yourself or else you will never know how to love another.\" \n\nMy heart is racing and I realize I'm audibly panting. His cock is at full length and my hand feels so small against it. I don't dare break my eyes from his. \n\n\"You must love yourself,\" he says. \n\n\"I can't.\" \n\n\"Accept who you are.\" \n\n\"I'm no one,\" I say in a shaky voice. \n\nMy legs give out and I fall to my knees, his cock right in front of my face. I look up at him and see his gaze staring down at me. \n\n\"You are the most beautiful soul in all of creation. You have transcended existence. You are so full of life and radiate such beauty that you have filled two lives. You are a gift.\" \n\nI can feel his words fill a void deep inside me. Almost like a bandage on my soul. I have never heard someone speak about me like this before. It shocks me so much, I believe I'm starting to feel happy. \n\nI open my mouth and slide his cock inside of me. My eyes stay on his as his cock fills my mouth with warmth. His cock feels perfect. Maybe I really was wrong about myself this whole time? I feel his hand go to the back of my head and I stroke his cock with my mouth faster, each time taking it a little further in. I take it out of my mouth and lift it up so I can taste his balls. With my tongue, I trace a line down his shaft until I feel the soft texture of his sack. I turn my body so my face is staring straight up, right below him and I begin to massage his balls with my tongue. My saliva feels thick and it coats his underside as I continue to stroke his cock. \n\nI feel him lift me up until I'm standing right in front of him. He has a warm smile on his face and be backs me over to the bed. He gives me a light push and I fall backwards onto the bed. I inch back and open my legs so he can join on top of me. He lays on me, his face inches from mine, but I notice he's now different. He looks like Matt. \n\n\"You were always the most beautiful person I knew,\" he says in Matt's voice, though I know it can't be him. \n\nThat's when I feel him enter me. I take a deep breath in as I feel his cock fill me. He leans down and kisses me, his breath warm against my tongue. He starts slow, though he doesn't need to. My pussy is dripping wet. He pushes himself up so his face is raised above me and we look each other in the eye as he quickens the thrusts of his cock against my body. I hold my hands back, letting him do what he wants with me. I never knew what it felt like to have Matt inside of me. He smiles down. \n\n\"You were always my love,\" he says. \n\nI don't know what to say. I'm shocked speechless. He can tell and he starts to thrust into me harder. I can feel my body bounce back against his strong thrusts. Our bodies clapping together like two hands applauding. I let out a moan as the pleasure has become too much to keep bottled up. He leans down again and buries his face into my neck as I feel his tongue start to run up and down. With his whole weight on me, the sensation of his body intensifies. \n\nHe lifts his head up again but this time his face looks like Alana. \n\n\"You are everyone,\" she says to me. \n\nI can still feel a cock thrusting in and out of my pussy but it's Alana's body on top of me. Her breasts bouncing back and forth with every thrust. I want to call out her name but I can't seem to find the words. \n\n\"I saw you from day one,\" she whispers as her body slams back and forth into me. \n\nI'm going to cum, I think to myself. \n\nShe smiles when I think it. She leans down and kisses me, long and hard. She has to hold the top of my head because I'm bouncing off of her so fast now. When she lifts her head back up, she's now Wendy. \n\n\"I love you,\" she says to me. \n\nFinally my words come back to me. \n\n\"I love you too,\" I say. \n\nI don't understand how it's possible but her cock is igniting every feeling in my body. I spread my legs wider and hold my pussy up as the pleasure moves my body. Wendy puts her hands on my shoulders and rests all of her weight on me, pinning me down. \n\n\"I'm gunna cum,\" I call out, almost a whisper and a yell at the same time. \n\n\"Me too,\" she says. \n\nI feel pools of warm liquid flying out of me with each thrust now. The sheets feel drenched and our bodies are soaked with the juices of my pleasure. \n\nHere it comes, I think. \n\n\"Aaahhhh,\" I call out and squeeze my legs tight as I cum. \n\nAt the same time that I do, she cums as well. I can feel the warm liquid of her orgasm fill me up. Her hands are clamped around my shoulders. \n\nShe thrusts into me a couple more times as our joint orgasm begins to subside. My body starts to twitch as it normally does. I lean my head back as the feeling runs it way through my body. While her cock is still inside me, I feel her tongue run along my breasts and then up my neck. I lean my head back down so I can look at her. However, this time she looks like Ben again. \n\nHis voice is deep and a whisper. \"Do you love yourself?\" \n\nI nod and whisper back. \"Yes. Yes.\" ",
        "He smiles and runs his hand through my hair. \n\n\"Good. I love you too,\" he says. \n\nI close my eyes as another spasm hits me. I can feel him get off me and when I open my eyes, he's gone. I'm alone in the room. I lay on the bed another moment, still needing to regain control of myself. I've never cum so hard before. \n\nI stand up and look down at my body. I'm soaked! The bed doesn't look much better either. I walk back to the full-length mirror and look at myself. I can see the glisten of my juices all over my midsection and on my thighs. I look at myself in the mirror, locking eyes with the face staring back at me. \n\n\"I love you,\" I say, and of course, as I say it, so does she. \n\n******** \n\nI'm not sure what all that was. I'm not even sure if that was really the Fountain Man or if I was just having an hallucination. What I do know is I feel better than I've ever felt in my life. Yes, this could be because I just orgasmed harder than I ever have before, a kind of out-of-body experience brought on by every sexual nerve in my body, but it's actually something different than that. I feel...I don't know what the word is. \n\nConfident. \n\nYeah, confident. Having stood in front of Ben like I did, viewing him through these eyes, I've never seen myself in that way before. It's true, I have seen the Fountain Man many times over the last couple of months, but he's always been just that: the Fountain Man. I never really thought of him like Ben. I think I finally understand what he means when he says I'm both Ben and Ashley. Despite what I think of myself now as her, those thoughts have always been a reaction against what I thought of myself as Ben. There's a kind of peace I feel now that I've accepted him. It's not even like I want to be Ben anymore, but having found the value in myself, in the body and the life I lived in for thirty years has made me cherish this new life that I have. \n\nWe really are connected. \n\nI'm on my way to Wendy's for Thanksgiving dinner. Really I should be calling it Thanksgiving lunch since afterwards we're coming back to my place. And of course, despite the importance of today's plans, I'm going to be late. The experience earlier, though blissful, was messy. There's no way I could go the rest of the day with my body lathered in my own juices. I had to take a shower, do my makeup all over again, and get dressed. \n\nI can still feel a buzz in my body. \n\nMy legs are weak, like I was just at the gym. It's not like I did that much, I just laid back and let it all happen. Now I need to focus on the task at hand. Well really there's no task until we get back to my place. I just have to eat Thanksgiving dinner with Wendy's family. Though her parents know the plan since they have to get back to my parents house. This is going to be awkward. I don't actually know her parents all that well, even though they think I do. \n\nWhen I get to her building, I ring the buzzer for her apartment and head up the stairs. Her mom is the first to answer the door. \n\n\"Well hello Ashley,\" she says, a little overdoing it. \n\nOh great, they're going to toy with me. \n\n\"Hello Olivia,\" I say. When I told them the plan last week, she was very adamant I call her by her first name. Same with her dad. \n\nI walk into the apartment and see the table is already set. I was hoping to get here early enough to help with that. Her dad is sitting at the table. He jumps up when he sees me, a big smile on his face. He walks over and gives me a hug. \n\n\"Happy Thanksgiving,\" he says. \n\n\"Happy Thanksgiving, Paul,\" I respond. \n\n\"Finally!\" I hear Wendy's voice behind me. \n\nI turn around and see her standing in the kitchen doorway. \n\n\"It took you long enough,\" she says as she walks up and gives me a kiss on the cheek. \n\n\"Sorry,\" I say. \"Train trouble.\" \n\n\"It's okay,\" her mom says at the table. \"She didn't miss anything.\" \n\nWhen I first brought up the proposal to them, I was afraid they might be unaccepting of our relationship. It's one thing for your daughter to be dating another girl, it's another for her to marry one. They took me off guard when they immediately told me how happy they were. I guess it's no surprise to them. They've known their daughter is a lesbian for a long time. Maybe they were always secretly hoping she'd end up with me. After I left their place, I realized it was stupid of me to think they would've disapproved of our relationship. Her mom is black and her dad is white. If anyone can understand societal backlash to your relationship, it would be them. Wendy and I are eighteen, which means her parents are probably in their late forties (at least they look so). Which means they grew up in the seventies, probably found each other in the eighties. Not the most accepting of times for a white man and black woman to be together. Not to mention they seem like the best parents that ever existed. Maybe it's because I'm a thirty year-old man on the inside, but I like hanging out with them. It was fun when I came over here last week. \n\nIt makes me wonder why the Wendy in Ben's world was still in the closet. Why wouldn't she have thought she could come out to her parents? Maybe she did and she was just afraid of coming out to everyone else? I don't know, I had the feeling no one knew about her sexuality. Could it really have been Ashley that gave her the confidence to be out? \n\nI take my seat next to Wendy. She makes a move for the mashed potatoes when her dad clears his throat. \n\n\"Oh dad, really?\" She complains. \n\n\"You know we need to say a prayer,\" he says sternly. \n\nI didn't know they were religious. \n\n\"Dad, not with Ashley here.\" \n\nHe gives her a look until she puts her hands together and accepts the oncoming prayer. I glance over at her mom and she has her face behind her interlocked fingers, hiding a smile. I put my hands together and wait. \n\nHer dad is the one that begins. \"Rub a dub dub, thanks for the grub. Yay God.\" \n\nOlivia laughs on the other side of the table. I can't help but join in. Wendy shakes her head. \n\n\"That is so lame. It was never funny.\" \n\n\"You loved it when you were ten,\" her dad says. He turns to me. \"You should've seen her the first time I said that at Thanksgiving. She couldn't stop laughing the whole dinner. It's become a bit of a tradition.\" \n\nI laugh. Wendy glances at me and rolls her eyes. We all dig in. \n\n\"So you two are going back to your place after this?\" Olivia asks us. \n\n\"Yup, that's the plan,\" Wendy says. \n\nOlivia gives me a half smile. I nervously nod back, trying to force a little smile. \n\n\"Ashley,\" Peter says. \"Promise me you'll say our prayer at your family's dinner.\" \n\n\"No,\" Wendy cuts in. \n\n\"I promise,\" I say. \n\nWendy turns on me now. \"Don't even think about it.\" \n\nI turn to her dad. \"Remind me how it goes again?\" \n\nPeter gets a mischievously satisfied look on his face. \n\n\"Rub a dub dub,\" he says. \n\n\"Rub a dub dub,\" I repeat. \n\n\"Seriously, it's so lame,\" Wendy chimes in. \n\n\"Thanks for the grub,\" Peter says. \n\n\"Thanks for the grub,\" I repeat. \n\n\"Yay God.\" \n\n\"Yay God. Got it.\" \n\nWendy just shakes her head. We all start eating, the chorus of silverware on plates beginning. Wendy wraps her leg around mine under the table. I glance over at her and though she doesn't turn her head, she smiles. I notice her mom catch my glance, to which she smiles and looks back down at her food. \n\n\"This is delicious,\" I say to her. \n\n\"I know,\" she says with a wink. \n\n\"No one can touch her when it comes to cooking,\" Peter says. \"I cook too, but when it comes time for the holidays, I let the professional take over.\" \n\nOlivia gives him a satisfied look across the table. Then a startled look hits her. \n\n\"Oh! I almost forgot, we didn't toast,\" she says. \n\nMy heart skips a beat. She's not going to ruin the surprise I hope. \n\n\"Every holiday dinner needs a toast,\" she says. She holds up her glass. \"What should we toast?\" \n\nThe rest of us hold our wine glasses up as well. \n\n\"Successful first semester of college?\" Her dad suggests. \n\n\"It's not done yet,\" Wendy says. \n\n\"Ashley, any ideas?\" Her mom says to me. \n\nI feel my throat go dry. \"Uh...I don't know,\" I say. \n\n\"I have one,\" Wendy says. \n\nWe all look at her. The only one at the table not in on the secret. \n\n\"Ashley came out to her parents a couple weeks ago,\" she begins and looks at me, her leg wrapping tighter around my leg. \"She was brave. I think sometimes it can be easy to forget how difficult that is.\" \n\nThank you, I try to say with my eyes. \n\n\"Here here,\" her dad says. \n\n\"Here here,\" her mom repeats. \n\nWendy looks to the rest of the table. \"To bravery.\" \n\n\"To bravery,\" her mom, dad, and me repeat as we all clink glasses. \n\n******** \n\nThe rest of the dinner went well and now we're on our way to my place. Her parents played their part well at the end. They said their goodbyes and told us to say hello to my parents, as if they weren't going to see them in a few minutes. We're on the subway now, her parents are taking a cab. I texted Alana right before we got underground. She's my point of contact at my place, getting everyone organized. The guest list isn't that big. My parents, my brother, Wendy's parents, and Alana. Alana brought her roommates Tamara, Vicky, and Barbara, something I didn't know was happening until today. Whatever, they're cool. And with a surprise visit, Wendy's uncle Darren will be there. Wendy and him get along very well (and apparently I love him too, from the way Olivia describes him). It'll be a big surprise for Wendy since she doesn't get to see him all that often. \n\nSo here it is, it's go time. This is really going to happen. I have the ring in my pocket, I keep playing with it on the outside of my jeans. \n\n\"Hello! Earth to Ashley!\" Wendy says. \n\nI come back to reality and jerk my head to look at her. \n\n\"What?\" \n\n\"Were you ignoring me that whole time?\" She asks, sounding a little offended. \n\n\"Uh...maybe,\" I say feebly. What can I say, I was. \n\n\"What's wrong with you? You seem like something is wrong.\" \n\n\"No, everything's good.\" \n\n\"Is everything okay between you and your parents?\" \n\nI give her a confused look. \"Yeah, why?\" \n\n\"Well, the last time I was home you came out to them and you haven't said much about them since. Now we're heading to your place and you seem nervous. Are they like, not okay with the two of us being together?\" \n\nOh God, you couldn't be farther from the truth! \n\n\"No, they're totally cool with it,\" I say. \n\n\"You sure?\" \n\nI grab her hand. \"Absolutely. I'm sorry, it's just I've never brought someone home for Thanksgiving dinner before.\" \n\n\"I've been at your house for Thanksgiving before!\" She exclaims with a laugh. \n\n\"Yeah but not as my girlfriend.\" \n\n\"Touch\u00e9.\" \n\n\"Not everyone's parents are as cool as yours,\" I tease. \n\nThe train gets to our stop and I stand up to exit before she can answer. Once the doors open, I'm off the train heading for the stairs, Wendy following behind me. \n\n\"Oh please!\" She says. \"My dad is so lame! I can't believe you found that stupid 'prayer' funny.\" \n\nI turn back with a smile as we climb the stairs. \"It was funny. Are you kidding? I want to say it at my parents dinner.\" \n\n\"You better not!\" \n\nTeasing her releases some of the tension in my stomach. I wonder what else I can make fun of her for. Probably not the best idea to mock someone right before you're about to propose. We get above ground and start walking to my block. \n\nWhy am I so nervous? She's going to say yes, right? \n\nMaybe I should cherish this moment right now. This is the last time we'll just be a regular dating couple. Normal without any cares. Once I ask her the question, our whole relationship will be different. Either she'll say yes and we'll now be marriage-in-waiting, or she'll say no and we won't be together anymore. This could be the last moments of our relationship. No relationship can survive a rejection like that. We can try to stay together, pretend like everything's okay, but I know it won't. \n\nIf she says \"no\", I'm returning to Ben's life. At least there I'll still have a shot with her. \n\nWho knows, maybe she doesn't want marriage. Maybe that's what's different in this world. The Wendy in Ben's world is the one who said she wanted it. Maybe that's the result of how she lived in that life. She does seem like a different person in this world. She's so happy and optimistic. The Wendy in Ben's world seems like there's a deep sadness somewhere hidden inside her. I forgot to account for the fact that I'm dealing with two different Wendy's here. \n\nOh my God, I've made a big mistake! \n\nI shouldn't have done this! What was I thinking? I have no idea if this is what she wants. She's off at college, living in Boston, the last thing in the world she probably wants right now is a fianc\u00e9. The Wendy is Ben's world was living at home and working at Starbucks. Marriage would fit right into her life. This Wendy probably wants anything but! \n\nMaybe I can stop this. There's got to be a way to abort the mission. \n\nImpossible. We're already in the lobby of my building getting onto the elevator. I've been \"uh-huh\"ing and \"no way\"ing her the whole time, trying to make it seem like I'm listening. Even if I could text Alana to cancel everything, how would I explain her parents and her uncle being in my parents' apartment? I can't. This is going to happen. \n\nYou can always go back to being Ben if she says \"no\". \n\nBut I don't want to go back to Ben's life. I want to be Ashley, and I want Wendy in this life. I'm just going to have to do it and hope for the best. \n\nI can do this. I can do this! \n\nWe get to my front door and I knock. \n\nOh shit! I was supposed to text when we got off the train so Alana could get everyone in their places. I forgot! \n\n\"Don't you have a key?\" Wendy asks me. \n\nI need to give them a moment to get ready in there. I pat my pockets and pretend like I'm looking for it. \n\n\"I think I forgot to take it with me,\" I lie. \n\nShe chuckles. \"You really are out of it today, Ash.\" \n\nThe door opens. It's Alana. She has a big smile on her face and holds her hand out. \n\n\"Hi Wendy,\" she says. \n\nWendy looks startled. \"Uh, hi,\" she says and shakes her hand. \n\n\"Come on in,\" Alana says. \n\nShe does her part to get Wendy into the apartment, in front of me. Once Wendy walks in, a mass of people pop up all at the same time. \n\n\"Surprise!\" They all yell out. \n\nWendy jumps. Behind her I get the ring out of my pocket and get down on one knee. As I do it, the group of people all signal Wendy to look behind her. She turns around and the moment she sees me, she brings her hands to her face. \n\n\"Holy shit!\" She yells out before her mouth if muffled by her hands. \n\nA couple chuckles ring out behind her. I would laugh too if I wasn't so fucking scared. Alana tiptoes around us and joins the group. \n\n\"Hi Wendy,\" I say. The best I can come up with to start. \n\n\"Hi,\" she says back. \n\nI can hear some sniffles already from the peanut gallery. \n\n\"You've been my friend for a long time now,\" I begin. My hands are sweating, which is probably good because it'll make the ring easier to put on her hand, as gross as that will be. I thought maybe I should say what the Alana that knew Wendy her whole life would say, but I want this to come from me. The real me. \n\n\"You might not know this about me, but I've been lost my whole life. I feel like I've always been split between two worlds. In one world is who I'm supposed to be and in the other is who I want to be. For a long time I didn't even know the other one existed. I didn't even know who I wanted to be. Not until I met you. I know it's been difficult with me. How can it not when you love someone but they don't even know who they are. But you've stuck with me. You've never turned your back on me. I didn't know who I was until I met you. I didn't know what it really meant to be happy until I met you. Not when we first met, but when I finally found myself.\" \n\nI'm not sure where exactly I'm going. I glance beside her and in the group of people, I see the Fountain Man smiling at me. \n\nNo, I see Ben smiling at me. \n\nThe face that I wore for thirty years, the face who's smile was always forced, and now a face that has found true happiness. Beside him I see Greg, Ben's dad, Jack's boss, and he's smiling at me too. I look at him and he looks startled for a quick moment that my eyes are on him. \n\nMy dad is here, smiling back at me. \n\nSeeing him clears my mind. A wave of warmth fills me and I return my gaze to Wendy. \n\n\"I love you Wendy. I love you more than I've ever loved anyone. With you, I finally know myself.\" I take a breath and hold up the ring. \"Wendy, will you marry me?\" \n\nTime seems to stop momentarily. My eyes are fixed on her, trying to find a clue in any movement or twitch her face will make. She doesn't say anything at first. Maybe it's just me but it feels like forever already. \n\nMaybe this is the point where she says \"no\"? \n\nI take another deep breath and try to muster some armor so I can prepare for the worst. She finally removes her hands from her mouth and I see streams of tears running down her face. Her lower lip is twitching and I can tell she hasn't said anything because she can't speak. \n\nFinally she musters a whisper. \"Yes,\" she says. \n\nI take another deep breath in. I know the word was \"yes\" but it was so low I don't know if I should move yet. \n\n\"Yes,\" she says again at full voice. \"Yes, my answer is yes!\" \n\nThe peanut gallery behind us starts to clap and I put the ring on her finger. She grabs my hand and helps me to my feet. Both of us grab each other's face and barrel in for a kiss. It lasts forever, the warmest kiss I've ever felt in my life. A feeling fills my body, something new and something familiar at the same time. It's love. Love fills me for the first time. We stop kissing and hold each other close. \n\n\"I love you,\" she says in my ear. \n\n\"I love you too,\" I say back. \n\nWe finally turn around and face the group. They're still clapping, pretty much everyone in tears. I look around for the Fountain Man but he's gone. \n\n\"Uncle Darren?!\" Wendy yells out right next to me. She hops over to him and jumps into his embrace. \n\nJack is the first one to come over to me and wraps his arms around me. \n\n\"Congratulations little sis,\" he says. \n\n\"Thanks big bro,\" I say back. \n\nWhen he lets me go, my parents come up and give me a big hug. They say their congratulations, and then it's Alana who comes up and hugs me. \n\n\"Thank you,\" I say to her while we're embraced. \n\n\"Are you kidding?\" She says to me. \"I love doing this stuff.\" \n\nWe let go of each other. \n\n\"No,\" I say, correcting her. \"Thank you for being such a good friend. Thank you for being you.\" \n\nShe wipes a tear from her eye and squeezes my hand. \n\nI hug her three roommates as they tell me congratulations. When they're done, I walk over to Greg. I open my arms and he gives me a very professional hug. \n\n\"Congratulations,\" he says. \n\nJack comes over and cuts in. \"I hope you don't mind, Ash. I invited Greg over for Thanksgiving before all this was set up. I kinda forgot to tell you he was coming.\" \n\n\"I hope I'm not intruding,\" Greg says. \n\n\"No, not at all. To me, you're family,\" I say. \n\n\"Well thank you,\" he says with a smile. \"I'm glad to be a part of it. \n\nI see Wendy hugging my parents, so I go over to hers. They give me their congratulations as well. I feel someone tap me on the shoulder and when I turn around, Alana is holding a champaign flute out to me. I notice everyone else has one as well. Alana taps her flute with a knife. \n\n\"Everyone raise their glass,\" she says to the room and they follow. \"To Ashley and Wendy.\" ",
        "\"To Ashley and Wendy,\" everyone repeats and then takes a drink. \n\n\"Okay,\" my mom calls out. \"Dinner is ready. Let's set the table.\" \n\n******** \n\nThe ring looks so perfect on her finger. I still can't believe she said yes. I'm an engaged person now. \n\nI'm an engaged person! \n\nIt's late. Wendy is spending the night at my place. Maybe it was the adrenaline rush of the proposal combined with how many bottles of wine we all finished off, but both of our parents agreed to let us spend the night together. (With a little bit of convincing of my mom from Wendy's.) She's laying right next to me in my bed, wrapped under my arm. I'm holding her hand and spinning the ring on her finger. I can't believe how perfectly everything worked out. Our parents got along well, but then I shouldn't be too surprised. They've known each other a long time. I still don't have that familiarity with them being familiar. I also forgot how much I like Alana's roommates. They're a lot of fun and I think I'm going to become good friends with them too. \n\nAnd then there's Alana. What a good friend she turned out to be. She's been a better friend to me in the last three months than any of the friends in Ben's life were, and I knew them for years. \n\nAnd then Greg. My dad. I found myself stealing glances at him throughout dinner. I'm glad he was here. I'm glad that the Greg in this life was here. I kind of feel a pang of regret that this Greg wasn't my father in Ben's life. He's much happier here. Maybe it's all an act. In Ben's life I knew him very well but in this life he's just my brother's boss. For all I know he has a messed up life, but I'd like to think that's not the case. \n\nMy dad got to see me get engaged. \n\n\"So how are we going to do this?\" Wendy asks me. \n\n\"What?\" I say, breaking my stream of thoughts. \n\n\"Please don't tell me you have more planned? It makes sense now why you were so distracted before. Is there more?\" \n\nI give her a kiss. \"No, that's it. It's just us now.\" \n\n\"Good,\" she says after the kiss. \"So how are we going to do this 'long-distance relationship' thing?\" \n\n\"We live in the age of technology, I don't think it'll be a problem,\" I say with a smirk. \n\n\"But I don't want to leave you,\" she says, trying to sound like a disappointed child. \n\n\"You have to. You can't leave school.\" \n\n\"I know.\" \n\n\"Trust me, college is short. It doesn't seem like it now but it is. In the grand scheme of things, it's a blip on the radar.\" \n\n\"You sound like an old lady,\" she teases. \n\n\"Maybe I am.\" \n\n\"I can't believe you did that today.\" She looks up at me, her face buried behind my right boob. Her eyes give her smile away. \n\n\"I can't believe you said 'yes'.\" \n\n\"How long have you had that planned?\" \n\n\"A week or so.\" \n\n\"What made you decide to do it?\" \n\nI think about that for a moment. How do I answer that without lying? \n\n\"I want to make sure we will always be together. And I know how much you admire your parents' marriage. I know you want the same thing.\" \n\n\"How do you know that?\" She says, unable to hide the suspicion in her voice. \"I've never told you that before.\" \n\n\"Yeah you have. In another life.\" \n\nShe crinkles her face, trying to make sense of what I said. \"In another life?\" \n\n\"Yeah. You told me in another existence. I was a man named Ben but on the inside I was a woman. I met you at a gay bar while I was crossdressing and you told me how much you wanted marriage while we were having drinks.\" \n\nThere's silence for a moment. She doesn't say anything and I can't see her face since she's resting her head on my stomach now, only her hair facing me. \n\n\"You're crazy,\" she finally says. \n\nI chuckle. \"That is for sure.\" \n\nHer hand goes to my shorts and she starts to rub the mound underneath. \n\n\"Have I ever told you I love your smell when you start to get wet?\" She asks me. \n\n\"No,\" I say, a little embarrassed. \n\nShe takes a deep breath in through her nose. \"Mmm mmm mmm,\" she teases. \n\n\"I don't smell!\" I protest. \n\nShe slides my shorts down and I don't try to stop her. I take a whiff in myself, but I don't smell anything. She must be making it up. She puts her face into my crotch and takes a whiff in herself. \n\n\"You smell so good,\" she says. \"You smell like my wife.\" She steals a glance back at me with a big smile. I smile back. \n\nShe lifts my leg over her head so she can put her face closer to my pussy. I feel the tip of her tongue lightly touch my lips. I take a deep breath in and tense my legs from the sensation. \n\n\"Does this mean I can call you 'wifey' now?\" I ask. \n\nShe flicks my clit with her tongue and my stomach spasms. \n\n\"You can call me anything you want now. I'm yours forever.\" And with that, she buries her face into my pussy. Her tongue licks me from the bottom to the top, and then goes to work on my clit. \n\n\"Oh Wendy,\" I exhale as I put my hand on the back of her head. \"I love you.\" \n\n\"Mm Mlv Mu Mu,\" she says with her face buried in my pussy, purposely muffling her voice. \n\n\"I've never had anyone tell me they love me into me before,\" I say. \n\nShe lifts her head up. \"We're going to have a lot of firsts together,\" she says. \n\nThat's when I get an idea. I inch away from her. \n\n\"Take all your clothes off, lay on your back, and close your eyes,\" I say. \n\nShe looks at me suspiciously. \"I thought there weren't anymore surprises?\" \n\n\"I just thought of this one,\" I say enthusiastically. \n\nI put my hand to my clit because I still feel the vibration she started. She smiles when she sees me do it. \n\n\"Have I fully corrupted you now?\" She asks. \n\n\"Clothes. Off. Now. And assume the position.\" \n\n\"What position?\" \n\n\"Eyes closed, legs spread.\" \n\nShe laughs and starts undressing. I go to my dresser and wait for her to close her eyes. When she does, I open the bottom drawer and reach into the back and pull out the dildo I bought a couple weeks ago. I almost forgot I had this. I walk back over to her, the dildo behind my back incase her eyes are still open. \n\n\"Can I open them yet?\" She asks. \n\n\"No.\" \n\nI put the dildo in my mouth to get it wet. The rubbery taste fills my mouth but the idea of it brings me back to earlier this morning. Wendy is laying on my wet spot from earlier, dry now. I put my hand on her stomach and run my finger along her naked body down to her bush. Unlike me, Wendy doesn't shave, which is really sexy. I don't know why, but a pussy with hair is much better. I would know, Alana shaves hers. I run my finger in circles around her clit. She smiles and squirms, looking like she's figured out what I'm going to do. I put the dildo to the lips of her pussy and lightly run it up and down the slit. She immediately opens her eyes and looks at what's touching her. \n\n\"Oh my God! Where did you get that?\" She yells out through laughter. \n\n\"I bought it!\" \n\n\"How long have you had it?\" \n\n\"A couple weeks.\" \n\n\"You fucking horn-ball,\" she teases. \n\n\"Oh please, you love it!\" I say as I put my hand out to lay her back down. \n\n\"Oh my God,\" she says, now flat on her back again. \n\nI put the dildo in my mouth again to get it wet and return it to her pussy. I lightly rub it up and down as my finger circles her clit. I hear her moan slightly as her body begins to wiggle. \n\n\"You want it inside you?\" I ask, wanting to hear her say it. \n\nShe nods. \n\n\"Tell me you want it.\" \n\nI don't know what's coming over me. I seem to be running on instinct. \n\n\"I want it inside me,\" she breathes out through a moan. \n\nI stick the dildo slowly into her opening. \n\n\"Oh,\" she calls out. \n\n\"You like it?\" I ask. \n\n\"Yes!\" She says through air again. \n\nI slowly start to jerk the dildo in and out of her and I lean down and lick her clit. As my tongue massages her, the dildo starts to fuck her very slowly. \n\n\"Ashley,\" she says, her eyes closed. \n\nI start to move the dildo faster along with my tongue. She squirms with so much force, I have to use the weight of my body to hold her down. \n\n\"I love you,\" she calls out. \n\nI would answer but my lips are preoccupied with her clit. I start to jerk to the dildo faster, so much so it reminds me of jerking off as Ben. I'm jerking Wendy off. I leave her clit and move up her body to her face. I grab the back of her head and she opens her eyes and looks into mine. I'm on my knees next to the bed, one hand fucking her with a dildo, the other behind her head holding her gaze to mine. \n\n\"I love you,\" I say. \n\n\"I love you,\" she breathes. \n\n\"I want you to look at me when you cum.\" \n\n\"I'm close,\" she pants, her eyes wide with the impending pleasure. \n\nAs my hand bounces off her pussy with each thrust, I can feel more and more of her juices flying out of her. She's drenched. \n\n\"I fucking love you,\" she yells out. \n\n\"I fucking love you too. Cum for me Wendy. I want to taste your cum.\" \n\n\"Oh!\" She calls out, all she can muster. \n\nHer legs snap shut and her body contorts as the orgasm takes over. I feel one last wave of juices fall out of her and I take the dildo out so she can convulse the pleasure out of her. She opens her eyes to look at me and I put the dildo in my mouth so I can taste my wife. I put the dildo deep so that the juices go to the back of my throat, and then I take it out and lick it up and down. I rub the dildo across my lips and look her in the eye. \n\n\"I want to taste you every night for the rest of time,\" I say. \n\nShe's panting, out of breath, and she grabs the back of my head and pulls me in for a deep and hard kiss. Our tongues dance together and I share the taste of her pussy with her. I feel her body shaking underneath me and I realize we cum the same way. \n\n\"I fucking love you,\" she says again. \n\n\"I fucking love you too Wendy,\" I say back. \n\nI stay on my knees next to the bed as we stare into each other's eyes. \n\nGod, she's beautiful. \n\nAs I stare into her I realize this is the rest of my life. How did I get so lucky? \n\nThat's easy, I think. And just as I'm about to formulate the answer, I realize I don't really know it. I just feel it. I deserve her, and she deserves me. \n\nI get on the bed and lay next to her, the dildo resting on her stomach. She catches her breath and then turns to me. \n\n\"You're turn,\" she says with a smile. \n\n******** \n\nWhen I wake up it's late. It's still dark outside. Wendy is still asleep, her back turned to me as she's laying on her side. I reach for the nightstand and look at my phone. \n\nThree-seventeen a.m. \n\nIt's the middle of the night. For some reason I'm fully awake. Wendy went to town on my pussy and made me cum just as much as I had earlier in the day. It's almost impossible to imagine it happening that hard for a second time in one day but it did. Maybe it's something about your wife fucking you with a dildo for the first time, but she made me cum so hard I felt like I was hallucinating. \n\nWe both fell asleep laying in the wet spots our passion created. I notice the silver half-dollar coin on my night stand and realize I still need to make my final decision. \n\nI might as well go now. \n\nI can go and come back before she's even awake. I quietly slip off the bed and start to put my clothes on. I put the silver half dollar coin in my pocket and sneak out of the apartment. The trains and busses will still be running, albeit on a much more limited schedule. \n\nThat's the good thing about living in the city that never sleeps. \n\nIt's funny they call it that. Walking around Inwood at three-thirty in the morning, it certainly looks like the city is sleeping up here. Although the busses and trains are still running, so that's something. \n\nIt takes me a while but I finally get off the crosstown bus at the park entrance closest to the fountain. It's probably not the best idea to be walking around Central Park this late at night, but this isn't the eighties. You can always tell who actually lives in the city and who doesn't based on their opinion of Central Park. It used to have a reputation for being a place to either get murdered or raped back in the eighties, but now in twenty-fifteen it's really safe. It's true it's probably not as safe at three-thirty in the morning, but I'll take my chances. \n\nThe instincts of a thirty year-old man are still strong in this one. \n\nI finally get to the fountain and I realize it's striking at this time of night. It's illuminated by moon light and it's barely visible yet still visible enough. I slowly walk up to it, the coin in my hand. This is it. I'm going to make my final decision as to what life I want to lead. \n\nAs if at this point there's any question to it. \n\nI stand in front of the pool of water and look down. The moon light shines off of it in a way that makes you think anything is possible. If something so simple as a pool of water can look this beautiful, anything can be done. I hold the coin up in my hand and look up at the angel atop the fountain. There's no one around me, so I decide to speak aloud. \n\n\"Thank you for giving me this gift. I don't know what I did to deserve it, but I'm thankful you gave it to me.\" \n\nI stop because I don't know what to say beyond that. I feel like the occasion deserves more of a speech. I'm choosing one life over another. Certainly there should be something of insight said, right? \n\nAfter thinking for a moment, I decide the truth is best. \n\n\"Thank you for giving me a choice. I choose this life. I choose Ashley, and I plan to make the best of it. More than I ever did as Ben.\" \n\nI think about the experience this morning and realize there's more I need to say. \n\n\"Thank you for helping me find the value in myself as Ben. I was a worthwhile person as Ben. I was a beautiful person. I shouldn't have judged myself so harshly. Thank you for helping me see that.\" \n\nTears start to swell in my eyes. \n\n\"I choose Ashley.\" \n\nAnd with that I toss the coin into the fountain, my final decision being made. I stand there, looking up at the fountain waiting for some kind of sign. \n\n\"I think you made the right decision,\" I hear a familiar voice say behind me. \n\nI spin around and see a face I wasn't expecting. \n\nAshley. \n\nStanding in front of me is Ashley. Or at least, the Fountain Man looking like Ashley. So the Fountain Woman? \n\n\"How many times do I have to tell you? I'm you,\" she says. \n\n\"Yes I know. Sorry,\" I apologize. \n\n\"You're sure about this?\" She asks me. \n\n\"Yes. I've never been more sure of anything in my life.\" \n\nShe smiles. \"Good. I'm glad. Thank you, Ashley. Thank you for going through this. I know it was difficult.\" \n\n\"It was weird, to say the least,\" I joke. \n\nShe laughs at that. \"No doubt. That's exactly what I thought when I went through it.\" \n\n\"You went through the same thing I did?\" \n\n\"Yes.\" \n\n\"Who are you?\" I ask. \n\n\"I'm you,\" she says. \n\n\"Yes I know-\" \n\n\"I'm you at the end of your life,\" she says, cutting me off. \n\nI stop and think about that, not fully comprehending. \n\n\"When your life is over, you'll be given an opportunity,\" she explains. \n\n\"What kind of opportunity?\" \n\n\"One to fix all the things that were wrong in your life.\" \n\n\"I don't understand,\" I say. \n\n\"I'm you. Your spirit, your life force, your ghost. I don't know, however you want to put it. I'm you once your life is over.\" \n\nAs I stare back at the face that looks exactly like mine, exactly like my age, I feel a pang of fear. She picks up on it and puts a hand on my shoulder. \n\n\"You're going to live a long life. A long and happy life, Ashley. Thank you for that.\" \n\nI relax after hearing her words. She's me at the end of my life. How is this even possible? \n\n\"I don't know,\" she says. \"I was given an opportunity and I took it. Which means you're going to be given the same opportunity at the end of your life. You're going to come back, just as I did, and you'll have to guide yourself to the life you deserve. You won't be able to explain until a final decision is made.\" \n\n\"So you were waiting for me to do this?\" I ask. \n\nShe nods. \n\n\"You're a beautiful person,\" she says. \"I'm so glad you finally see that too. So many people go their whole life without finding out who they really are. Cherish this. It's rare. I don't know why this was given to us, but it was. Cherish it.\" \n\n\"What happens to you now? Will I still see you?\" I ask. \n\nShe shakes her head. \"I finally get to rest. It's all on you now,\" she says. \n\nI look down for a moment, the gravity of what she's saying sinking in. I know it's all true. How else was all this possible? \n\n\"Promise me one thing though,\" she says. \n\nI look up. \"What?\" \n\n\"Don't judge him too harshly. Don't judge her too harshly. Sometimes you're going to want to just shake them!\" She laughs at that. \"Give her time. She's doing her best.\" \n\nI nod. \n\n\"Thank you,\" I say. \n\n\"Thank you!\" \n\nFor the first time, she fades away in front of me, a smile on her face and a look of peace. I'm now alone in front of the fountain. I look down into the fountain and maybe it's just because it's hard to see with the moon light but I can't see my coin anymore. Maybe all this was in my head. Maybe I was going crazy. Or maybe it's exactly as it appeared. All I know is I have a life ahead of me with the woman I love. And who knows? Maybe what she said is true and at the end of my life I'm going to have to be the Fountain Man, or maybe I'm just a functional crazy person. Either way, I'm happy. For the first time in my life I'm happy and I'm actually looking forward to the next day. \n\nI look up to the top of the fountain and even though I know she can't hear me anymore, I say it anyway. \n\n\"Thank you.\" \n\nIt's time to go home. It's time to return to my wife. \n\nMy wife. \n\nMy name is Ashley Montgomery, and for the first time in my life, I'm happy. \n\nTHE END."
    ],
    "authorname": "Bethesda",
    "tags": [
        "male to female",
        "transition",
        "transgender",
        "lesbian",
        "gender swap"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/know-thyself-ch-09"
}