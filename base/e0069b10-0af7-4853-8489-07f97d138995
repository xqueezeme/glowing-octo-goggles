{
    "title": "The Girl from The Bar",
    "pages": [
        "I seem to have trouble keeping multi-chapter things going, so from now on, I'll be uploading only one-shot stories. There will be more, but different characters and across a few different genres. Be patient with me, and I'll deliver as I finish new things. Comments are welcome and appreciated, as is feedback. Thank you for reading!\n\n*****\n\nI met Robin at work. She was a bartender, I was a bar-back. She made drinks, talked to customers, made everybody feel at home and just a little bit flirted with or conspired with or just plain better than they had felt when they walked in and bellied up to her bar. I made a few drinks, told bad jokes, and did whatever she needed that she couldn't do herself, whether that meant making sure that she didn't run out of anything or making sure one of the more belligerent customers got outside without hurting anyone.\n\nRobin was damn good at what she did, and I was damn good at what I did. She never made a bad haul with tips, her bright blue eyes and happy, easy smile put the girls at ease and made the boys want to make it happen again and again. It didn't hurt that she was just over five feet of absolute beauty. She was tan, and it worked well to draw your eyes to whatever skin she chose to show off on any given night. Her breasts were outstanding, high and firm and round, two softball-sized globes of temptation always proudly displayed with low cut tops. On the other end of things, her legs were long and lithe, her tan and choice of either shorts or a skirt whether it was rain, shine, hot, or cold always made sure that everybody knew they were a damn nice lead up to her tight, round little ass. Her long, raven black hair was alway down, brushing across the tops of her breasts and falling sexily forward from her shoulders whenever she poured shots.\n\nShe asked a lot of questions when she first got hired. How to mix certain things, where things were, what to do about certain customers, when to cut them off. She was bright, and she never asked the same question twice, soaking up everything I told her or that the boss told her and immediately applying her newfound knowledge. We worked well together; talking, joking, making sure everybody was taken care of. It wasn't long before Robin became my absolute favorite bartender to work with.\n\nWe flirted, of course. I was single and she was gorgeous. It didn't go much past smiles and cracking jokes at first, though. She had a boyfriend and I respected that in the way that most men respect a woman having a boyfriend. I didn't intervene or talk shit about the guy, or even bring him up unless she did first, and always ran with the notion that as long as he treated her well then it was none of my business. Meanwhile, I shamelessly checked her out every time we worked together, and she would laugh or give me a smile that shone all the way up to her bright blue eyes and shake whatever she caught me staring at in a playful, very fun to watch sort of way.\n\nAfter she'd worked there for about three months, her boyfriend started coming in on nights she worked. He'd get a beer, then sit at the bar and watch her work all night. I served him myself a few times. He wasn't particularly unfriendly, but he wasn't much of a charmer either. He didn't really talk to anyone, he just watched her work.\n\nNobody minded the first few times. He was quiet and he paid, tipped a buck every time. Kept to himself. He always left right before we closed, driving away instead of waiting for her.\n\nIt wasn't until the fourth or fifth time he did it that it started to feel... off. He got more sullen, spent more time staring down anyone who she talked to than he did minding his own business. He drank faster, going through a beer every ten or fifteen minutes until he was visibly drunk inside of the first two hours.\n\nRobin knew it, too. I could see it in the way she talked to people, this tension that wasn't ever there before, taking quick glances over at him that were like uncomfortable reassurances that everything was okay. Something was wrong. I just didn't know what, yet.\n\nIt finally hit the point where he was too drunk, and too stupid to keep things in the realm of alright anymore. Some guy ordered a beer and smiled at her, asked how her night was, how long she'd been working, where she was from. Pretty standard shit, really. Hell, customers did the same to me, and she was far and away cuter than I am.\n\nI was pushing a couple of newly emptied stools back into place and clearing a table when I saw Robin's boyfriend stand up and grab the neck of his bottle like a club. He started towards the guy at the end of the bar, who had since gotten his beer and returned to his friends, this nasty, chilling look in his eye. I'd seen that look before, but not too many times. Most people who get in a fight in a bar are just drunk and rowdy, wanting to blow off some steam. This guy was looking to hurt somebody.\n\nI got to him just as he was raising the bottle up, just a few steps away from bringing it down onto the poor shlubb's head. I was behind him, so I just grabbed the upraised bottle and pulled it back toward me, popping it right out of his hand. He spun around, taking a swing at me in the process.\n\nThat pissed me off. It's not that I mind being swung at. Hell, it's basically part of the job. What pissed me off was that he hadn't turned to see who it was first. It could've been me. It could've been one of the other customers trying to stop him from making a stupid mistake. And it could've been Robin.\n\nHe was shitfaced, and that made him slow. I caught his wrist before his fist got in front of his head, planted a foot and shoved him against the bar, trapping him between it and me. He wasn't a small guy, but he was smaller than me, and he was too drunk to think his way out of that one, so he just started cussing at me instead.\n\n\"You motherfucker,\" he slurred. \"Lemme go!\"\n\n\"Listen up, dude,\" I growled in his ear, \"you just about made a real, real stupid mistake just now, and you're going home to ponder all the ways your life would've gone to hell if I hadn't stopped you. Now, you can go right now, under your own power, and I'll call you a cab and load you right up into it friendly as can be, or you can keep being a dick about it and I'll throw you out the door like a frisbee, pick your busted ass up off the sidewalk, and shove you into a cab like a pile of laundry that's too big for the dryer.\"\n\nI didn't really want to hurt him. Yeah, he was an idiot, but a lot of people are when they're drunk. I'd stopped him before he hurt anybody, and if he went along with things, I wasn't going to do anything else to him. He deserved to go home, he deserved to not get any more booze, but he didn't deserve to have anything broken.\n\nHe struggled for a few more seconds, and just when I thought I was going to have to make his exit rougher than it needed to be, he slumped and nodded his head.\n\n\"Outstanding!\" I said, letting him up and slapping him on the back, putting my arm around his shoulders and walking him out like we were old friends. On the one hand, that's a friendly gesture, makes everybody I've ever thrown out of the bar feel a little less offended by it. On the other hand, that puts my hand in a very convenient position to wrangle them back under control if they decide to do anything stupid.\n\nHe behaved, and I got him into a cab and on his way home without further stupidity on his part. He'd have a helluva hangover in the morning, but he wouldn't be in jail.\n\nI went back inside and gave Robin a little nod, passing by her as she poured a row of shots and giving her shoulder a reassuring squeeze. I went to the walk-in cooler to check my beer and see if I needed to grab any cases. I heard the cooler door open again and turned around just in time to catch Robin as she threw her arms around my waist and squeezed. I dropped my arms over her shoulders and squeezed back, both surprised at the contact (we hadn't really hugged or even touched before) and enjoying the feeling of her lovely little body against me.\n\n\"Thanks,\" she whispered.\n\n\"Just another day at the office, right?\" I said.\n\nShe laughed, a little sadly, and looked up at me, her face just a few inches below mine.\n\n\"Yeah, but you shouldn't have had to deal with him. Once he figured out how well I've been doing with tips, he started to get weird about it, paranoid, I guess. I asked him to stop coming in, but he just does it anyway, then rants about it when I get home. He thinks every guy in the world wants to fuck me, I guess.\"\n\n\"They do,\" I grunted, a smile pulling up the corners of my mouth. She laughed again, this time without sadness, her bright eyes shining as I watched her lips part around the sound. Her body, so warm and curved in such wonderful ways, shook merrily in my arms.\n\n\"Uh-huh,\" she said, sarcasm light and playful in her tone. \"I do sort of appreciate the irony, though.\"\n\n\"What irony?\" I asked.\n\n\"He's worried about all the dudes that come in here sweeping me off my feet into bed, and the only one he should be worried about is the one who throws him out,\" she said, a mischievous little grin crossing her lips as she winked and dropped her hands to give my ass a quick squeeze and pressed her hips close and tight to mine.\n\nMy mouth fell open and she giggled, a high, happy sound, as she slipped out of my arms and spun for the door, her long black hair flying around her and leaving me in a cloud of the sweet smell of her shampoo. She looked back as she went to push the door open, pausing for a second with both hands against the door, one knee ready to push against it, her perfect little ass cocked out, bottom lip caught between her teeth and a look that was half mischief and half lust in her eyes.\n\n\"Even if I was kidding, it would've been worth it for that look on your face,\" she said. Her eyes dropped to my crotch and widened, her lips parting in surprise before curling into a smile that made my blood run hot and fast. \"Glad to see I'm not the only one who thinks it would be a lot of fun!\"\n\nShe shoved the cooler door open and went back to the thirsty, boisterous crowd as I stood in the middle of the cooler with my mind whirling and an erection that strained against my jeans rather uncomfortably.\n\nIt took me a few minutes to get myself back on track and figure out what beer I needed to bring upstairs. I had to haul four cases. I'm not a little guy, just a bit over six feet, and I exercise regularly, both at the gym and hauling heavy shit around at work, so I took them all at once to save myself some time. I had to run back down for a couple of bottles of liquor, and when I got back up with them Robin was mixing up a round of shots.\n\nI had to put one of the liquor bottles away on the high, hidden shelf above the bar, right over her head, so I just reached over her to slide it into place.\n\n\"Can you grab me down a Jos\u00e9?\" she asked without looking up from her pour.\n\nIt was three bottles to the left of the Jack I was putting up, so I reached over with my left hand to grab it without thinking, the move making it so I was standing squarely behind her. Robin set down the bottle she was holding, put both hands on the bar, leaned forward a little, pushed up on her toes, and pressed her tight little ass straight into my crotch.\n\nMy cock hardened immediately, mercifully pointed down my pant leg so it wasn't jammed up too hard, and it made things nice and vertical for her as she wiggled her ass and caught me between her gorgeous cheeks, only my jeans and her short skirt between us. Robin looked back over her shoulder at me and winked, her hair falling sexily across her face as she gently ground her ass against me.\n\n\"I can't reach them, and you're just so BIG,\" she said, emphasizing the word by pushing her ass against me a little harder, \"and I just knew you could get up in there real good for me.\"\n\nTwo can play this game, you little shit, I thought.\n\nI pulled the bottle down and leaned over her to put it next to her hand, the length of my body pressing against her arched back. I put my hands on either side of her ribs and ran them down her sides until I gripped her hips and pulled her against me as I put my lips to her ear, letting her feel my breath hot against her cheek.\n\nMy lips brushed her ear lobe as I whispered, \"Any time, little girl,\" and pulled her back against me one last time before letting go and stepping away to take a drink order.\n\nAs I moved I heard her groan and saw her head fall forward, a happy, naughty little smile on her face.\n\n\"That was fucking hot,\" I heard the girl whose drink Robin was making say. I never heard Robin's answer.\n\nWe flirted the rest of the night, giving each other long, hungry looks, letting our hands brush against the other person's hip or shoulder or the outside of a thigh. She kept reaching around me to grab beer out of the standing cooler, making sure her breasts brushed my back or my arm.\n\nI walked her to her car that night after we closed and all the liquor was stocked and all the tips were counted. She looped her arm through mine and smiled at nothing in particular, dropping her head onto my shoulder. When I got her to the car she gave me long, tight hug, pressing as much of her body against me as she could and holding me tight.\n\nShe pushed up on her tip toes and kissed my cheek, her soft lips pressing against me just above the line of my beard and I squeezed her gently as she did it. Robin let out a soft sigh, melting a little in my arms.\n\nShe jumped when I reached down and squeezed her ass with both hands, then laughed and playfully slapped me on the arm.\n\n\"Fair's fair,\" I said, a grin plastered across my face. She really did have an amazing ass.\n\n\"True,\" she said. She was trying not to smile, or maybe she just couldn't decide how much trouble we were in. Either way, I knew she wasn't mad. \"I have to go home.\"\n\n\"I know,\" I said. Neither of us really wanted her to, but we weren't quite ready to go there yet, I think. I leaned down and returned her kiss, my lips and beard brushing lightly across her soft, smooth cheek, lingering longer than I planned.\n\n\"Good night, Robin,\" I whispered.\n\n\"Good night, Shane,\" she whispered back.\n\nPart of me was sad to watch her drive away. The rest of me was on a sort of high that only comes from knowing that a pretty girl is interested in you. I walked the two blocks back to my apartment practically skipping, as dumb as that sounds. Whatever. She was gorgeous, and she wanted me. Skipping is excusable.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-\n\nWe worked together again two nights later. It was open mic night, and our bar ran a special on dollar drafts. Busy was somehow not a strong enough word.\n\nRobin was pulling beer as fast as she could and barely keeping up while I poured any shots and whatever beer she couldn't get to. I didn't have to do much by way of hauling up cases or liquor that night, but I did have to run down to the keg room and switch the lines over four or five times. With the press of bodies in the bar the AC was struggling to keep up, and we were sweating hard an hour in.\n\nI stripped off my button-up, running back and forth behind the bar in the white tank I'd worn under it. Robin was sweating, but on her it looked damn good. Little hairs stuck to her forehead, small beads of sweat ran down her neck to disappear between her breasts. She caught me looking a few times and gave me a happy, glowing smile.\n\nWe had a little lull in the press for a few minutes between acts as everybody either headed for the bathrooms or stepped out to smoke. One lone customer, a regular that we saw pretty much every night, sidled up and ordered a bottle. Didn't matter to him if there was a special on, he always wanted a bottle. Robin was taking a well deserved rest, leaning against the standing cooler, so I slid the door open and grabbed the bottle before realizing that she was right in front of the bottle opener that was mounted on the front of the cooler.\n\n\"I'm gonna need that opener,\" I said, a half smile on my face.\n\n\"Well, I'm just not sure what I can do to help you,\" she said, a naughty twinkle in her eye. She was right in front of it, completely blocking it, leaning against the cooler with her feet about shoulder width apart.\n\n\"Oh,\" I started, my grin getting wider, \"I don't think you'll need to do anything, actually.\"\n\nI reached low between her legs with the bottle, letting the cap touch the cooler under the hem of her short skirt, and slowly moved it up, letting the back of my forearm drag slowly and gently up the inside of her strong, soft thigh. Robin's lips parted in a smile that grew with every inch until her mouth was wide open in a sort of half smile, half gasp. The bottle cap finally clicked into place on the opener just as my forearm, now at a rather steep angle, ever so lightly brushed against the front of her panties.\n\nI could feel the heat of her radiating against my arm, the soft material of her panties just caressing the skin, brushing the little hairs on my forearm around. I held there for a second, staring straight into the those bright blue eyes, her mouth still open in that smiling gasp. My arm dragged across her incredibly hot mound for just an inch or two, so lightly it might have been my imagination, or hers, when I pushed the bottle back down and popped the cap off, hearing it fall into the little container built into the cooler.\n\n\"Oh, you dirty, beautiful bastard,\" she whispered just before I turned to hand the beer to the rather amused regular who had ordered it. I collected his money and he walked away, leaving me to drop his change into the tip jar.\n\n\"Think you can watch the bar for a second?\" Robin asked. I nodded, still grinning at her. She walked away, swaying her hips as she went, looking back over her shoulder at me to make sure I was watching and smiling brightly when she saw that my eyes were glued to her.\n\nA few fast smokers made their way back in and I got to work mixing up some drinks, pulling a couple beers. She was only gone for a few minutes, my eyes glued to her again as she walked back to the bar, putting a little sway into it, giving me and anybody else who bothered to look a fun little runway show. Everybody looked. She was a knockout.\n\n\"I want you to know that this is your fault,\" she stepped up to whisper in my ear as she walked past me and into the little cubby where we cut the fruit and all the employees keep their coats and purses.\n\n\"What is?\" I called after her.\n\nI watched her step into the cubby, out of view of the rest of the bar, and noticed that one of her hands was balled up into a fist. She flicked on the light over the little table in there and raised her balled up hand, opening it and brining her other hand up to stretch a satiny white thong between her hands. The front and bottom were turned a darker shade from moisture, and she made damn sure I saw that before she stuffed them into her purse and flicked the light back off.\n\nShe skipped back over to me, her hair dancing around her shoulders. She hopped right up to me, stretching up on the tips of her toes, pressing her breasts against my chest, her hands on my shoulders. Her lips brushed against my ear, her tongue flicking out to gently tease my ear lobe.\n\n\"That little stunt with the bottle made me so wet I had to go take my panties off,\" she whispered.\n\nHer skirt was denim, one of those short jean skirts with the white stringy threads hanging from the bottom of the hem. With the hand that was hidden, more or less, from the rest of the bar I quickly hooked two fingers into the waist band up to my palm between her hip bone and the center of her body, feeling her hot, smooth skin against the backs of my fingers, just beginning to feel the curve of her mound. I used them to pull her against me tight, letting her feel how hard she had made me. She gasped into my ear, pushing her hips into me and moaning softly as her fingers dug into my shoulders.",
        "\"See, now we both have a problem,\" I said. I slowly wiggled my fingers, brushing them back and forth across her hot skin, feeling her breath rush out against my neck.\n\n\"Oh, really?\" She managed to gasp the words out as she subtly ground her hips against me.\n\n\"Mmhmm. See, I have a bit of a weakness for a girl that I know is wearing a skirt with no panties. So that's my problem,\" I said.\n\n\"Yeah,\" she groaned. \"What's mine then?\"\n\n\"Yours is that now I know that I make your sweet little pussy very, very wet, and that you're not wearing any panties.\"\n\nRobin pushed a little farther up on her tiptoes, bringing her lips right to my ear and pushing my fingers just a little farther down her skirt.\n\n\"Why is that a problem for me?\" she whispered. Her tongue flicked out again, teasing my ear.\n\nI turned us slightly, putting my back toward the bar and hers facing nobody. I slipped my fingers from her waistband and moved my hand low, letting it drag up the back of her thigh, up under the back of her skirt until my fingers reached the place where her thigh met her ass and I squeezed, feeling the soft flesh under my fingers and, I knew, pulling her little pussy open without actually touching it.\n\nShe groaned so loudly that if it hadn't been for the next act starting up everyone would've heard it. I put my lips against her ear.\n\n\"Because I'm not going to stop until I see you dripping down your thighs,\" I whispered, then trapped her ear lobe between my teeth and ran my tongue across is gently.\n\nI spun away from her, walking quickly to the end of the bar to meet the rest of the smokers as they made their way back. I caught a glimpse of Robin, leaning heavily against the cooler, her eyes burning into mine, her lips parted in a smile that made me want to pull her into the cubby and not come out until tomorrow. Her nipples pressed through her shirt, hard little points that I wanted to pull and twist and taste. I glanced down and saw two little rivulets of clear, sweet wetness running down the inside of her thigh.\n\nI took the drink orders, and when I turned to grab the one bottle I needed from the cooler, she was still there. I stepped in front of her and she glanced around quickly before reaching down and wiping away her wetness with her fingers. She looked me straight in the eye.\n\n\"You,\" she said, slowly licking one finger clean, \"are a bastard.\"\n\nShe licked the second finger clean, slowly collecting her own juices on her tongue before pulling it back into her mouth.\n\n\"And I absolutely love that about you.\"\n\nThe rest of our shift flew by, the steady stream of thirsty drunks keeping us more or less away from each other. I still knew that there was nothing under her skirt but smooth, hot woman, and that kept me from ever totally getting soft. We still found excuses to bump against each other, to let our hands wander places they didn't really need to go.\n\nIt was nothing brazen, nothing so bold as we had been earlier, but it was there. We kept each other smiling, our eyes wandering over one another with absolute abandon, catching each other in the act, grinning, moving on. The tips were fast and generous, most people leaving a dollar or two per drink, and the drinks were flowing.\n\nThe crowd was rowdy and loud, but friendly, and I didn't have to deal with anybody in any way that was less than friendly. Those are my favorite nights, the ones were everybody just wants to have a good time and I don't have to throw any weight around. By the time we flipped on the lights and shouted out last call, the tip bucket was threatening to overflow and we were exhausted but happy.\n\nI did my final check on everything and found to absolutely no surprise on my part that I only needed to grab two cases of beer and two bottles of liquor. Nearly everything had been draft. That was fine by me. I still had to break down the stage and put away the sound equipment after I stocked. Open mic is a great time, but it does mean a little extra work for me at the end of the night.\n\nI got my stocking done quickly and popped out from behind the bar to put away the stage. It's not a hard process, really. I don't know shit about sound equipment, largely because I'm not the guy who sets it up. I do know how to take it apart though. It's all just unplugging things, winding the cords up into tight, organized bundles, dropping them into their designated milk crate, and then heaving everything into the storage cubby.\n\nI call it a storage cubby, but in reality it's about the size of a college dorm room, except that its half the height. The floor of the storage cubby is raised to about the height of my belt, and the entrance is a small door in the back wall of the stage just large enough to shove the biggest of the speakers through. It's a cramped, annoying space to work in if you have to get anything out of it. Not as bad when all you have to do is shove things farther back into it.\n\nI did what I always do, pulling out the repurposed lawn furniture that was the usual decor on the stage and setting it aside, then unplugged all of the speakers and started carrying the big bastards over to the door and shoving them in. I like to leave the cord winding for last as it tends to be the least physical part and I like to just sort of space out while I do it.\n\nI was winding the cords when Robin hopped up on the stage and breezed past me, giving my ass a playful squeeze as she walked by. I jumped a little, having been off in my own little world as I did the mindless work.\n\n\"Fair's fair,\" she mocked, a sassy little smile on her lips. She hopped up into the little doorway, a tantalizing affair to watch as her lithe legs stayed just close enough together to not outright show me that she was pantyless.\n\n\"Yes, I suppose it is,\" I said, not able to keep a smile from my face or my eyes from taking in her legs. She sat there with her ankles crossed, her hands at the edge of the ledge she sat on, leaning slightly forward. Her breasts pushed temptingly together, her bright eyes shining as she smiled and let them wander over me.\n\nI was on the last of the cords and when I finished I dropped it into the milk crate, picking that up and turning to Robin.\n\n\"This is the last thing that goes in,\" I said.\n\n\"Hand it to me,\" she said, holding her hands out. \"I'll put it up. Where does it go?\"\n\nI passed the crate to her and she let it sit on her lap for a moment.\n\n\"There's a shelf,\" I said, \"right above your head. Just lean back and push it up on there.\"\n\n\"Got it!\"\n\nShe started to lean and lift, teetered a little, and stopped.\n\n\"Um,\" she began, \"can you come hold my legs? Otherwise I'm going to be flashing beaver at the whole world.\"\n\nI laughed and moved over to her, putting my hands on her warm thighs. She spread her legs slightly and I stepped between them, feeling her knees squeeze my hips as she leaned back and pushed the crate onto the shelf. When it was in place, she let her hands drop, clutching the hem of her skirt and holding it in place as she hooked her feet behind my knees and pulled herself forward until her pussy was pressed against my denim-covered cock. I was hard, and I could feel her heat through my jeans. my hands brushed up her thighs, sliding around and under to cup the backs of them, hold them up, high around my waist as her hands slid up my chest to curl around the back of neck.\n\n\"Help a girl down from here?\" she asked.\n\nMy throat made a deep rumble of assent as one hand gripped the back of her thigh and the other moved to her lower back, pulling her to me as her legs tightened around my waist and her hands held on to my neck. I lifted gently and took a step back, holding her little frame easily off the ground, groaning softly as she buried her face in my neck and slowly, deliberately, ground her incredible heat against my cock.\n\n\"It feels so big,\" she whispered into my neck. I could feel her lips move against my skin, feel her breath pour across my shoulder. \"I want you so bad I can barely stop myself.\"\n\n\"You have no idea how hard it is not to pushing you up against that wall right now,\" I groaned back.\n\n\"You should probably put me down,\" she whispered, \"even though I don't want you to.\"\n\n\"I know,\" I said, my voice barely more than a breath against her cheek. I ran my hand from her lower back, down over her ass and onto the back of her thigh, squeezing both before softly, slowly lowering her back to the ground.\n\nHer hands left my neck and trailed slowly down my body, caressing the muscles of my chest, feeling the ridges of muscle across my stomach, brushing my belt, gently tracing the length of my cock as it shoved its way down my pant leg.\n\n\"I left a wet spot,\" she giggled. \"God, you make me so wet. Nobody has ever made me so wet.\"\n\nShe looked up at me and saw the broad, proud, cocky grin on my face.\n\n\"I shouldn't have told you that, should I?\" she asked, her head cocked to the side, a playful smile on her lips.\n\n\"Absolutely not,\" I blurted, and she laughed, her eyes bright and happy.\n\n\"Come on,\" she said, gently tapping my arms, \"I'll help you set up the chairs and we can go downstairs and split our giant haul of tips with the other girl. The work will help you forget all about how wet I am for you.\"\n\nI laughed.\n\n\"Oh yeah. THAT seems likely to work.\"\n\nAfter we counted out and had a beer or two each, we said our goodbyes and I walked Robin to her car again. She slipped her arm through mine again and laid her head on me with that happy little smile just like she had a couple of nights before. Heavy flirting aside, the walk to her car was rapidly becoming my new favorite thing.\n\nWhen we got to her car she turned and stretched up on her tip toes to give me a sweet, soft kiss on the cheek, her lips brushing across the top of my beard.\n\nJust before her lips pressed to my skin, something hard slammed into the back of my head.\n\nIt made a glassy sort of clanking noise as it bounced off the back of my skull. I was completely unprepared for it, and it was just enough to take me off my feet, inadvertently shoving Robin backwards as I fell. She fell backwards, and I saw her feet leave the ground as she rolled up a little before settling back down. I heard her boyfriend's voice float down to me.\n\n\"You fucking whore,\" he slurred. He was drunk off his ass again, and apparently had just waited around outside for her. \"You have to take your panties off after he fucked you? Huh?!\"\n\nHis voice was rising in volume with every word as he stalked closer to her. He was beyond reason, rage spittle flying from his lips, both arms twitching as he held them tense and clenched at his sides, shouting for all he was worth by the end of it.\n\nHe made two mistakes in rapid succession.\n\nFirst, he assumed that crowning somebody with a bottle works like it does in the movies. Guy swings a bottle, bottle hits head, owner of head falls unconscious and doesn't get up until hours later. Doesn't matter how hard you swing the bottle, hard bottle beats head and consciousness every time.\n\nWrong. It's actually pretty fucking hard to knock somebody unconscious. Shit, professional fighters are paid a whole shitload of money to do it, and even they only knock a guy out for a second or two. He had hit me pretty hard, and I'd have a solid goose egg in the morning, but he hadn't come anywhere near knocking me out or even really disorienting me. Mostly he had just pissed me off.\n\nSecond, he stepped over to Robin and raised the bottle to hit her with it. I no longer felt that I didn't want to hurt him.\n\nI grew up chubby and unpopular in a neighborhood that didn't forgive that sort of thing. I wasn't slow, but there were always a lot more of them than necessary. I never won, at first. \n\nIt took a few years of having my ass kicked every day before I started to learn a few things. I thought about it, I watched, I paid attention to the places they hit me, what hurt, what didn't, what parts of the body were the weakest, thought about how to use my weight and move it around a little better. I learned that being the strongest wasn't a bad thing, but that it wasn't necessary either. I learned to be efficient, and I learned to be brutal. When I had it good and figured out, I showed the kids in the neighborhood what their years of ganging up on me had taught me. I only had to do it once.\n\nI decided, in that moment, that I would show him, too.\n\nI rolled to my feet, getting up as fast as I ever had back in my old neighborhood, and grabbed the upraised arm in my right hand when it was at its highest. I pulled back and slammed my open left hand into his elbow, shoving forward as hard as I could. The joint gave, and bent in the opposite direction it was made to. I slid my left hand forward, around, under his arm, stepping forward and snaking my left arm under his now broken right, using leverage against the ruined joint to push his upper body forward while I turned and wrapped my right arm under his chin, cutting off his air and hauling upward just enough to straighten his legs.\n\nI stomped my left foot into his knee, hearing the patella crack and the joint behind it give just like his elbow. I let go of his head and let him collapse to the ground, screaming like a pig gone to slaughter.\n\nI heard sirens as I turned to check on Robin. The downstairs bartender had called the cops as soon as she'd seen him hit me with the bottle. Robin had raised herself up on her elbows and was looking at me a little wide-eyed. I crouched down next to her.\n\n\"You okay?\" I asked.\n\nShe nodded, still staring at me, her eyes bright with... something. I wasn't sure what.\n\n\"Why are you looking at me like I just sprouted a unicorn horn?\" She blinked and smiled a little sheepishly at that.\n\n\"I'm sorry,\" she said, shaking her head. Her eyes widened a little and she started to cry. \"Oh fuck, I'm so sorry, Shane! This is all my fault! Are you okay? He hit you so hard, I was afraid you were dead and then I thought he was going to kill me and then you were there all of a sudden and you took him down so fast and-\"\n\nHer words were choked off by sobs as she completely broke down, her arms shaking as she tried to hold herself up. I wrapped one arm under hers and one under her legs, careful to pull the hem of her skirt up, and lifted, cradling her in my arms as she clung to me and cried.\n\n\"Shh,\" I whispered. \"It's not your fault at all. He's drunk, and a little crazy. You couldn't have known this would happen. Besides, he didn't hit me all that hard. Just a little bump. I'm fine, and he's not going to be anybody's problem for a while.\"\n\nI whispered reassurances to her, gently stroking her side. She slowly calmed down, her sobs growing more gentle until they were sniffles, then just slow, deep breaths. Finally, she looked up at me, her tears done, and she smiled, her eyes searching mine for any sign that I was angry with her or blamed her. I wasn't, and I didn't.\n\nThe cops took statements from all of us, even Robin's now ex-boyfriend (she had crouched down next to him after she stopped crying long enough to tell him she was breaking up with him) as the ambulance came and paramedics go to work putting on splints and loading him up for his trip to the hospital.\n\nI was sure I was going to jail. I mean, yeah, he had attacked me, but I hadn't exactly simply subdued the guy. I really did a number on him, and I know that doesn't go over too well sometimes.\n\nThey talked to the girls first, Robin and Carrie, the downstairs bartender. Both girls talked for a long time, and by the time the cops finished up and headed my way, they were grinning. One actually shook my hand.\n\n\"Sounds like this could've been a lot worse if you hadn't done what you did, son,\" said the older of the two. \"The way the girls tell it, you're a bit of a hero.\"\n\n\"Not at all,\" I blurted. \"I just didn't want to see him hit her with that bottle like he did me.\"\n\n\"Fair enough. I don't see any need to press charges against you. You want to press charges against him? If you want my advice, say yes. Little fucker sounds like he deserves it.\"\n\nI nodded. I didn't see any real reason not to.\n\nThe cops finished up with us, and left. The three of us just kind of stood around for a few minutes, letting the craziness of the last hour or so dissipate a bit.\n\n\"Well, after all that excitement, I'm going the fuck home and going to bed,\" Carrie blurted. She gave Robin a quick hug and a kiss on the cheek, the gave me the same before hopping into her car and peeling off.\n\n\"I'm so exhausted now,\" Robin said. I reached out and pulled her to me, wrapping my arms around her and squeezing gently.\n\n\"Me too,\" I said.\n\n\"I don't want to go home tonight,\" she whispered. \"I mean, we don't live together, but I just don't want to go home. I don't know if that makes any sense at all.\"\n\n\"Yeah,\" I said. \"It makes sense. Come on. My place is just a couple blocks away.\"\n\nI walked her back to my place, her arm looped through mine, head on my shoulder. The smile was less, but a little bit of it was still there. We didn't talk, just walked. I think we were both too tired to say anything.\n\nWhen we got to my place, I dug through my dresser and found an old t-shirt for her to wear while she slept, and I left the room while she got changed. I tossed a small pillow down on one end of the couch and stripped down to my boxer briefs, fully prepared to spend the night there. I heard the bedroom door open and looked up to see Robin standing in the doorway, her hair dangling down onto her chest, one long, lithe leg straight down, the other bent with her dainty, tanned little foot hooked behind her calf, head bent slightly down with those big, bright blue eyes looking up at me, more sexy than any human I'd ever seen in just a ratty old AC/DC t-shirt.\n\n\"Come sleep in here, with me?\" she said, a soft, hopeful question. \"Nothing else, just... be there and maybe hold me?\"\n\nI didn't say anything, I just walked over to her and picked her up like I had outside the bar, cradling her in my arms and carrying her to bed, laying down with her, letting her use one of my arms as a pillow as the other wrapped around her waist.\n\n\"I have an eight o'clock class,\" she murmured. By the time I started to respond, she was asleep.\n\nI set my alarm for seven thirty.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nShe was gone when I woke up. I slept straight through the alarm, but apparently she hadn't. There was a note on the pillow next to me.\n\nShane,\n\nThank you for last night. For everything. For saving me, for holding me. I didn't want to wake you up just to say I'll see you later, so I settled for a kiss on the cheek!\n\nSee you tonight!\n\nRobin\n\nI smiled and stretched. I didn't have much going on that day. I don't have class on Fridays, and I was pretty well caught up on homework, so I did some housework, mostly cleaning, laundry, got some groceries, then just bummed around for a few hours watching TV and dicking around on the internet.\n\nI worked at eight, and Robin would be coming in at nine. When I got there, I had a few starting things to take care of, mostly throwing towels in to wash, cutting lemons, limes, a few apples. I grabbed whatever needed to be replaced from the day shift and filled all the stations with ice. I poured myself a Coke and leaned against the cooler, chatting with the couple of regulars that were planted in their usual spots on the bar until nine.\n\nAt nine, I almost passed out.\n\nRobin walked through the door, and every eye in the place turned to her and stuck there. She was wearing a little black dress, the skirt short, showing off a damn smooth, tantalizing length of her lithe, tan legs. The top half was billowy, sort of. It looked like it was just two wide scarves that rose up from her skirt and had been tied behind her head. When she moved, I could see her midriff peeking out all the way from her skirt to her chin. It was backless, eliminating all possibility of a bra, and she was wearing matching heels. She'd left her long black hair down, but given it just a little bit of curl, making it bounce when she walked. Her makeup was subtle, classy, accentuating her cheekbones and drawing attention to her lips and eyes without shouting.",
        "She was absolutely stunning, and I stared until she stopped in front of me and twirled slowly.\n\n\"You like my dress?\" she asked.\n\nI nodded.\n\n\"Good!\" she said. She stepped up so her face was just an inch from mine, her lips curled into a naughty little smile. \"It's the only thing I have on.\"\n\nThat night was a blur. We were busy, so we didn't have too much time to drive each other crazy, just long glances, longer touches, brushing against each other when there was no reason to. We behaved, more or less, until she pulled a repeat of her performance blocking the bottle opener.\n\nThis time, I knew she wasn't wearing panties, and I felt the skin of my forearm brush lightly against her incredibly wet pussy. She actually moaned and clutched at my arm. I had to pull away and hand over the beer, and when I turned she was still there, her eyes hooded with lust, her mouth open in a sultry, promising grin. I rang up the beer and gave change, taking the tip back to the bucket and standing between her feet as I reached over her to drop it in.\n\nHer hands gripped my hips and pulled me closer, pressing my hard cock against her belly. She sighed happily, reaching down quickly to run her fingers across the length before squeezing gently. I shifted slightly, bending at the knees a little, lowering myself so that the tip of my cock, pointed down the leg of my pants, brushed against her pussy. She gasped and clutched at my sides, her eyes closed and her lips parted.\n\nI ran my hand across her shoulder, trailing my fingers softly along her skin, feeling goosebumps rise underneath them. I let my fingers run up her neck, slowly moving my hips the whole time, subtly and gently rubbing the tip of my cock back and forth across her hidden little pussy. Her fingers gripped my sides, wadding the material of button-up as she worked them tighter and tighter. I slipped my hand around to cup the back of her neck, my fingers weaving into her hair. Her eyes flew open as she figured out what I was about to do.\n\n\"Oh god, no, don't do that you'll make me-\"\n\nHer words cut off as she bit down a scream, my fingers tightening, pulling her hair, forcing her head back as I rocked forward and pressed hard against her pussy. I pulled her head close, burying her face in my chest as I felt hot wetness soak into my jeans and her body shook against me. She was cumming, a hard, quick orgasm that rocked her and forced her to fight hard to keep from crying out as the noise of the bar went on around us, most people too into their own conversations and too far into their cups to notice we were doing anything other than hugging.\n\nAs her orgasm passed, she took a deep, shuddering breath and gently punched me in the arms. Her legs trembled as she stood there, the tip of my hard cock pressed against her flowing pussy.\n\n\"You are such a wonderful, awful, beautiful, complete bastard,\" she managed. \"And I need to run to the bathroom.\"\n\nI stepped back, releasing her from our \"hug\" and grinned to myself as she walked away on unsteady legs, looking back at me to give me a happy, naughty grin.\n\nWe bumped and brushed and flirted the rest of the night, any time we passed each other my fingers would trail across her ass or hers would flit across the length of my cock. I don't know if anybody noticed. I don't care. It was torture, and it was heaven.\n\nLast call finally came, and as Robin poured the last of the drinks, I got down to stocking. I had six or seven cases to bring up, eight or ten bottles. I noticed after the first case that Robin was dicking around getting her cleaning done, going slow while our boss finished up printing out the receipts and counting out the registers. I took my time on the stocking until he gathered everything up and went downstairs. He would stay there until we left.\n\nI finished everything I had left to do in record time, flying through the stocking as I noticed that Robin had sped up as well. I finished putting away my last case just a few seconds before she got her last glass put away. As she straightened up from putting it on the low shelf, I grabbed her arm and spun her around, hearing her let out an excited little gasp just before i pulled her against me and finally, finally put my lips against hers.\n\nOur mouths opened and our tongues explored hungrily, tasting each other for the first time as our hands roamed each other. I squeezed her ass, felt her run her hands down my back, her nipples hard against my chest. I cupped her perfect butt and pulled, pressing her against me as she moaned into my mouth. I lifted her, her legs flying around my waist, her hands clutching at the back of my neck, our lips never parting.\n\nI carried her to the little table in the cubby behind the bar, setting her on it and stepping back, intending to slowly kiss and lick my way down her body until I could finally taste what we'd both been grinding against me for a week. Robin's hands went to my belt and she pulled me closer, unbuckling me quickly and undoing the buttons, pushing down.\n\n\"Later,\" she murmured. \"Later, when we have more time and we're alone in your apartment or mine or my car or wherever, then you can lick me. Please lick me then. And I'll stuff as much of your beautiful, enormous cock in my mouth as I can. But right now, I've waited and dreamed about this long enough and we don't have much time and I just need you to put this big cock in me and make me cum all over you.\"\n\nAs she spoke she managed to get my pants undone and shove them down over my cock, my full hardness springing up to slap my belly before dropping back to point straight ahead. I'm not a small man, and neither is my cock. I am proud of it, all eight inches of it, and it was as thick as Robin's dainty wrist.\n\nI didn't respond, I just grabbed her thighs and pulled her ass to the edge of the table, watching her lean back and half close her eyes, her breath fast and heavy. I looked down just in time to see her sweet, smooth, dripping little pussy come into view for the first time. It was as gorgeous as the rest of her, perfect and hungry.\n\nI just moved my hips forward. We were at the perfect height, and her pussy was so incredibly wet that I didn't even have to use my hands. I began to slide into her immediately, her hungry little pussy gripping me tightly as I slowly slid myself in until my balls rested against her ass and her clit ground roughly into my pelvis. She let out a long, shuddering moan as I bottomed out inside her, her legs pulling tightly at my hips.\n\nI reached up to grab the knot of her dress at the nape of her neck and pulled it up and over her head, throwing it down to expose her perfect, softball-sized breasts. I leaned down and captured one of her hard, eraser-sized nipples in my mouth, sucking it hard between my teeth and biting down gently. I ran the tip of my tongue across the very tip of her nipple before releasing it and looking her in the eye. I held myself deep inside her, not moving.\n\n\"Later, when we're alone and we have more time, I'm going to take my time, slowly bring you off over and over and over,\" I said. \"But right now, I'm going to fuck you hard and fast and deep, and I'm going to make you cum for me, and then I'm going to cum deep inside your amazing little pussy.\"\n\nRobin groaned, her cunt pulsing along my length. She wouldn't take long, and I wasn't far behind her.\n\nI pulled my cock out quickly until just the head remained, then plunged back into her as hard as I could, rocking the little table, causing her gorgeous breasts to shake with the force. She cried out once, then slapped her hand over her mouth as I pulled back and did it again and again, feeling her pussy grip every inch of my cock through every hard, deep thrust.\n\nShe moaned hard through her hand, her free hand slapping down on my forearm and gripping tight, digging her fingernails into the skin as I pounded in and out. I reached behind her head, twining my fingers into her hair watching her eyes fly wide open as I pulled hard on her hair, hauling her head back, exposing her neck to my lips and biting down on the soft skin.\n\nHer legs tightened around me and her mouth stretched open under her hand, a long, low series of moaning cries barely muffled until finally her body convulsed, every muscle locking and unlocking in rapid succession as her cunt rippled and sucked at my length. I continued to push in and out of her constantly tightening and releasing pussy, pushing myself up to and over the edge before burying myself completely inside of her and erupting, jet after jet of hot cum splashing into the deepest parts of her shaking, desperate pussy. When she felt me pouring inside her, her orgasm started all over again, turning her red in waves from where we were joined to her hair as she rolled her hips and ground against me.\n\nI shook as I emptied myself into her, grinding our hips together. I pulled her hand from her mouth and covered it with my own, our tongues against each other as we quaked through the last tremors of our orgasms together. We kissed again and again, panting breaths between each kiss, stupid grins on our faces, laughing even as we knew we had to move soon, had to disconnect from each other, if only for a little while.\n\nRobin playfully squeezed herself around me and I gasped, flexing my cock inside of her and earning a gasp from her in return.\n\n\"We have got to get off the prep table,\" Robin whispered. \"I'm leaking all our cum all over it and we still have to go downstairs and count out. Oh my god, my legs are useless right now.\"\n\nI pulled slowly out of her, my cock still half hard, enjoying every slow inch of my retreat as her pussy spasmed randomly around my length. Our cum rushed out of her when my tip fell free, dripping down between her cheeks, coating her asshole before it fell to the table and floor. On impulse, I reached forward and swiped my finger through it, running the tip in a quick little circle around her puckered, tight little ass.\n\nShe gasped and twitched, a big dollop of cum rushing out of her with the motion. Robin let her legs fall to the floor, rolling forward even as she dropped to her knees in front of me and captured the tip of my cock, sucking hard, pulling it between her lips and down her throat with a low moan. She let her tongue play along the underside, just holding me in her mouth, barely bobbing her head, cleaning me.\n\n\"I thought we were supposed to be going downstairs,\" I said teasingly. \"Not that I mind in the least.\"\n\nHer mouth popped off my cock, a long, slurping sound and she looked up at me, my wet tip just grazing her lips. I could feel them move when she spoke.\n\n\"I didn't think you would,\" she said. \"Besides, I had to taste our cum all mixed up and fresh from my pussy. I think I'm going to keep enjoying that as many times as I can.\"\n\n\"Good,\" I said.\n\nI helped her to her feet, pulling her up and kissing her long and deep, gently exploring her mouth, letting my hands come down to caress her bare ass. She pulled back, giving me one last soft kiss.\n\n\"Come on, let's go get finished up and get out of here,\" she said, pulling the top of her dress back up and getting it situated before sliding it back down over her ass.\n\nI gave her a playful squeeze as I reached for a bottle of cleaner and a paper towel to clean away our mess. She shook her ass at me while she picked up her purse and quickly straightened out her hair, shooting a happy smile over her shoulder in my direction.\n\nWe managed to stop touching each other sometime before getting downstairs, but failed to wipe the stupid, silly, happy grins from our faces.\n\n\"'Bout time,\" our boss grunted, looking up from his beer, his work for the evening done.\n\nCarrie took one look at us and gasped, a wide, shit-eating grin painting itself across her face. She started laughing.\n\n\"Yeah, you got it, boss-man! It really is about fucking time! I was starting to think you two would never get around to it. And by 'it,' I, of course, mean cumming... downstairs!\"\n\n\"What is she, psychic?\" I muttered under my breath.\n\n\"Nah,\" whispered Robin. \"You just forgot to tuck in your shirt.\"\n\nI looked down, realized she was right, then shot a look back at her, wide-eyed. She was grinning from ear-to-ear, and I relaxed, figuring if she was fine with it, I would be, too.\n\n\"Hope you cleaned the prep table when you were done,\" remarked our boss. He was a good guy, older, a little gruff, but a solid dude.\n\nI stared at him in shock before bursting out laughing, Robin joining in a second later.\n\n\"So, you're not mad?\" Robin asked. He shook his head.\n\n\"Have to be stupid not to see it coming. Besides, its not like I haven't done the same damn thing once or twice.\"\n\nOnce the laughter died down, we got busy counting tips. It wasn't a bad night, solid money all around. Once the tips were split up and everybody had finished their post-work drinks, we filed up the stairs and out the door, saying our goodbyes and waving as the boss locked up and we all went to our cars or started our walks home.\n\nRobin hooked her arm under mine and rested her head on my shoulder, turning her face up to look playfully into my eyes.\n\n\"Mind if I come over? Tomorrow being Saturday and all, I don't have a curfew tonight.\"\n\n\"I was kind of hoping you might want to swing by for a bit,\" I said, chuckling as I pulled my arm free and wrapped it around her shoulders. I let my fingertips brush lightly across the top of her breast and she sighed, pushing herself more tightly against my body as we started walking.\n\n\"I may have fantasized about earlier a few times,\" Robin said quietly.\n\n\"Oh yeah?\"\n\n\"Mmhmm,\" she hummed. \"I've sort of been wondering what it would be like to fuck you since I started at the bar.\"\n\nI laughed and squeezed her shoulders.\n\n\"Kinda wish I'd known that from the start,\" I said.\n\n\"Can you imagine how much fun we've missed not fucking with each other this whole time?\" she asked, her bright eyes shining.\n\nRobin wrapped her arms around my waist and squeezed, hugging me as we walked. Her right hand dropped from my waist to my crotch and traced the outline of my cock through my jeans. I grew under her fingers, rapidly swelling as I watched her hand move delicately around my length and felt the soft caress through rough denim.\n\nMy hand slid from her shoulder and down her back, feeling the little dip of her spine all the way down before cupping her ass and squeezing, enjoying the way it moved under my hand as she walked. Robin gave a soft moan, and I let my hand fall lower, my fingers sliding forward under her ass, feeling the start of her wetness. Her hand tightened on my cock, gripping it through my jeans and she gasped, her mouth back to that half grin, half gasp that I was coming to love.\n\n\"I haven't stopped thinking about you cumming in me since I woke up this morning, and you actually doing it did nothing to stop that. I think you're going to have to do it again,\" she said.\n\n\"I think you're right,\" I replied, my voice low and throaty. \"I just keep picturing my cum flowing out of your sweet little pussy and onto the prep table, making your ass all slippery and me want to fuck you all over again.\"\n\nI slipped my middle finger back and forth under her ass, gliding it through her wetness as I spoke. Her breathing deepened, and her grip on my cock tightened.\n\n\"I almost came all over again when you started rubbing your cum around my ass,\" she confessed. \"If you'd pushed your finger in, I would have, and you would've HAD to fuck me again.\"\n\n\"Hmm,\" I groaned. As she spoke, I pushed my finger a little further forward, sliding it into her soaking wet little pussy as far as I could reach before pulling back and pushing it firmly into her puckered little ass to the second knuckle. \"Like this?\"\n\n\"Oh goddammit,\" she groaned, her fingers clenching my cock over denim. She stopped walking, her head dropping onto my chest, pushing her ass back into my palm, her tight little hole flexing around my finger. I could feel her breath, hot and quick through my shirt, and I slid my other hand slowly up her thigh, trailing my fingers across the smooth, hot skin until I met her dripping pussy.\n\n\"You bastard,\" she muttered, giving me a hard squeeze. \"You absolute, evil, dirty, beautiful bastard.\"\n\nI grinned, my fingers sliding across her wet lips, and kissed the top of her head before suddenly shoving two of my fingers as deep into her as they could go. Robin gave a happy, abrupt shriek, and bit my chest gently as I began to work my fingers inside of her, front and back.\n\n\"Cum for me,\" I whispered. \"Let me feel your little pussy go off for me, right here in the street where anybody could see. Look me in the eye, and cum all over my hands.\"\n\nRobin's head snapped up, her bright blue eyes wide; surprised and pleased and reaching the edge. Her hand left my cock and gripped the back of my neck, pulling my forehead to hers, her mouth wide and grinning as she panted against my lips. I felt a groan start deep in her chest as her whole body tensed and then shook, her pussy pulsing around my fingers as her ass clenched and released around the other. Her breathing was fast, a series of gasping moans as her hand squeezed my neck and her eyes struggled to stay focused on my face.\n\n\"I fucking,\" she muttered against my lips, her orgasm slowly fading. \"I fucking... I'm going to just... Oh goddammit take me home and fuck me already.\"\n\nI laughed, and slipped my fingers out of her, taking her hand and pulling her down the street. We were close, only about half a block from my apartment building, and we practically ran. Only her heels kept us from sprinting.\n\nI punched the code into the door and yanked it open, swatting her ass as she walked by. She stuck her tongue out at me, pulling her dress up over those perfect cheeks and leaving it there as she started up the stairs and giving a playful shake. I walked a few steps behind her, my eyes level with that amazing ass, watching that way it swayed and bounced with each step.\n\nAt the top, she stopped, planted her feet shoulder width apart, and bent forward, her back arched, pushing her ass out at me, looking back with a playful smirk. My hands shot forward, grabbing the tops of her thighs as I dove forward, my tongue running across her hard little clit, dragging through her soaking lips before pushing hard and deep into her ass. Robin let out a sound somewhere between a gasp and a moan, her hand flying back to grip the back of my head, pushing me into her ass.\n\nShe stepped forward, my tongue slipping out of her ass as she looked at me with a smile that was all joy and lust.\n\n\"You have thirty seconds to get me to a place where you can fuck me,\" she said.\n\nI strode past her to my door, fumbling the keys out of my pocket. As I pulled them out and started looking for the right key, Robin walked in front of me, her dress still around her waist, and started undoing my pants. She was quick, my belt, button and zipper flying open, her hand diving into my boxers. She managed to fish my cock out with one delicate hand just as I found the right key.\n\nAs I slid the key into the lock, she slid my throbbing, achingly hard cock past her lips. As I turned the key, she gripped my hips and pulled, forcing my cock into her throat, her nose pressing against my trimmed pubic hair. As I turned the knob and shoved the door open, she swallowed with my cock buried in her throat.\n\nI wrapped my fingers in her hair and pulled her firmly off my cock, hearing her slurp up the entire length of my cock. I let go and pushed her through the door, her hands flying to the bunched up hem of her dress and swiftly pulling up and off over her head even as she walked in the door. I began kicking off my shoes while following her, watching her ass sway, her hair brushing across her naked back. She turned to watch me, standing between my front door and my bedroom, hands on her slender hips, breasts high and proud with their hard little nipples, watching me and waiting for me with a happy, naughty smile.",
        "I tore my shirt. I just ripped it open in my hurry, sending buttons spraying around my living room. My jeans fell on their own, the hard work having already been done by Robin. I whipped my undershirt off as I stepped out of my jeans, and shoved my boxers down as I closed the distance between us.\n\nAs I neared her, she jumped into my arms and our lips met, tongues darting in and out, massaging, exploring, tasting, her legs wrapped around my waist, my hands cupped her perfect ass, my fingertips brushing against her wetness as my cock bobbed below her with every step. I felt the soft firmness of her breasts pressed against me, her arms wrapped behind my neck, her fingers in my hair as I carried her to my bed.\n\nI caught my cock in one hand, my other gliding between her lips, pulling them gently apart. I paused in my walk just long enough to point my hardness upward, center it, and lower her onto my length. Robin cried out into my lips, her hands tightening in my hair, her pussy squeezing me tightly.\n\n\"Fuck, I love your cock,\" she moaned against my mouth.\n\nI walked the rest of the way to the bed buried inside her and gently laid us both down, my body over hers, her legs tight around my waist, pulling, holding me inside. I settled my arms beside her, my hands cradling her neck, and slowly drew my cock out until just the tip remained. I kissed her then, my tongue playing against hers as I pushed slowly back into her, reveling in the incredible heat and wetness and grip of her perfect little cunt. Her breath poured across my cheek, forced out through her nose as I buried myself inside her slowly, over and over.\n\nRobin's hands moved languidly, caressing, gently tracing the lines of my body as we moved together, our bodies working into one another, building slowly. The time for desperation, for hurry, was over. We basked in every second, every feeling as we ground and squirmed together. I felt her breath against my lips, her hands pulling against my ass, nails raking lightly from my buttocks to my shoulders as her heels pressed against my thighs and her pussy coaxed me deeper and deeper. Our lips roamed, never straying too far away from each other, but exploring ear lobes, the hollows of our throats, the sides of our necks, our shoulders.\n\nHer orgasm built slowly, taking its time to gather in every part of her, a sort of trembling, quaking energy that grew a little with every slow, firm, deep thrust of our hips. Her moans grew with it, starting as a soft murmur, rising and rising until they were a series of low, ecstatic screams. She came hard, every ounce of her body thrown into it, grinding hard against my pelvis as I moved inside of her, her clenching, pulsing pussy trying madly to pull me ever further into her. I pushed my hand beneath us, gripping one of her perfect ass cheeks, squeezing, pulling her into my thrusts as she came, and as I felt her orgasm reach a peak, I pushed my hand further, finding her tight little asshole, slick and hot with her flowing wetness. I pushed my finger firmly into it, plunging it as deep as I could go.\n\n\"Oh you fucking bastard,\" she shouted, her body trying to shove my cock deeper even as she tried to push my finger farther in. \"Don't you fucking dare stop!\"\n\nAs my finger pushed deeper into her ass, I began to fuck her hard and fast, driving my cock in and out, shaking the bed, driving her orgasm on and on. Her breath came hard and ragged and fast until it stopped, her body flushing red from her hair to her chest, her pussy clenching my shaft so hard that thrusting became almost difficult, her legs rigid and gripping, squeezing me hard, her mouth wide, eyes clenched shut. Robin's hands gripped me, her nails digging into my skin as one hand clenched my bicep, the other the back of my neck. Air returned to her with a whooshing, moaning gasp, her thighs squeezing my waist hard.\n\n\"Fuck fuck fuck fuck fuck!\" she shouted. \"I fucking love your cock. Fucking cum for me, Shane, cum in my little pussy and make me your happy, dirty, slutty little girl. I want your cum, baby, cum in my pussy for me, give me my reward!\"\n\nShe hadn't stopped cumming, and her words drove me over the edge. I slammed my cock into her over and over until ramming myself as deep as I could reach, her legs high around my back, pulling me into her. I erupted, my cock spurting again and again, my cum hot and thick inside her. Robin cried out again, wordless and loud and happy, her lips against mine, a half moan, half giggle of joy coming out as I filled her and her orgasm washed through her all over again.\n\nWe kissed gently and deeply as we came down, aftershocks jolting through us both, her pussy twitching around my oversensitive cock, making us both gasp and giggle into one another's mouths. My finger slid gently from her ass, my cock slowly deflating inside her. I didn't want to pull out, and she didn't want me to, either. We just lay together, connected and happy.\n\n\"Is it too much to ask that you fuck me like that every day?\" she asked.\n\n\"God, I hope not. I was going to ask you the same thing,\" I mumbled, a happy smile playing across my lips as I kissed her again.\n\n\"Thank god,\" she whispered.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-\n\nThat was six months ago, and we've kept true to our word. Not a day goes by that doesn't find us wrapped up in each other, moving and gasping and cumming together at least once or twice. Some days we go out, some days we can't be bothered and just stay in bed, fucking and cuddling and watching a movie before starting all over again.\n\nWe don't know if this will last forever. We're happy, and we're good together. If it ends, I don't think it will be terrible or messy. If it does last forever, I think we'll both be happy with that, too.\n\nOur feelings for each other grow and evolve and mature every day. We haven't said the L word, yet, but I think we're both just waiting for the other person to say it first. I think tonight, when she gets back from class, I'm going to make her dinner, slowly and happily fuck her, tell her how I feel, and then make love to her for the first time.\n\nI love you, Robin."
    ],
    "authorname": "oneshotofsinglemalt",
    "tags": [
        "sex",
        "lust",
        "slow",
        "creampie",
        "deepthroat",
        "work",
        "skirt"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-girl-from-the-bar"
}