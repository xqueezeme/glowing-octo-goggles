{
    "title": "Aaron Convinces Felicia to Try This",
    "pages": [
        "(Thanks again to all my readers, especially with the rewards you have provided in the form of Literotica's nominations for consideration as the author with the top Fetish category story for both June \u2014 Modeling Her New Toy for Him \u2014 and September \u2014 Helping Sela Has Surprise Benefits \u2014 during 2010. Those two stories, and most, though not all, of my stories are told from the female perspective because, well, it is such an unexpectedly rewarding intimate encounter when a woman fortunate enough to find a man to bend over and surrender to her discovers the eroticism and satisfaction that strapping in and taking her pleasure in this way provides.\n\n(But there have been multiple inquiries from male readers asking how they might bring this up with their female partners. It's understandable that a man would worry about his lady's reaction to a request that she don a strapon dildo and fuck him in the ass with it. In this story, Aaron has exactly this fear, and with good reason. He manages to succeed with Felicia, however, and the story, I hope, can provide some ideas about how a guy could bring the topic up, including some specifics that could easily apply with any female lover.\n\n(So, men, perhaps Aaron's tale will prove both stimulating and useful! For the female readers: Those of you fortunate to already have a man who trusts you enough to have you take your pleasure with him at the end of your strapon, I hope this story rewards with the physical and emotional satisfactions Felicia experiences as mirrored in your own encounters. To those women who haven't yet known the sublime satisfactions of this different yet intensely arousing way to play with your guys in ways they don't yet know will drive them crazy, maybe some of the things Aaron guides Felicia through as he orchestrates her introduction to taking his ass might work with your men.\n\n(You will never know if you don't try . . ..)\n\n***\n\nIt wasn't something Aaron was ever going to ask a buddy for advice about. No way. He could just see Kevin's or Hank's or Cory's expression.\n\n\"Holy shit, Aaron! Are you freakin' kidding me?\" would be the response from any of them.\n\nBut none of them had a clue, Aaron was sure. None of them had ever gone to bed with Kelly, the outrageous redhead he'd dated for six months long before he'd met Felicia. Kelly was wild but strictly short-term, which was fine with Aaron, who was not at a place in his life then to be looking for long-term. Kelly also had no pretense that anything between them would go further than simply a good time.\n\nBut she focused hard on the good times. Especially that night she convinced him to let her lube up her finger and slide it up his ass while she gave him a blowjob.\n\nAaron still got a hard-on just thinking about it.\n\nBut thinking about it only meant that the next, inevitable thought would be about what she convinced him to do a couple of weeks after that.\n\nGod, her strapon had felt so damned good sliding inside him. She knew how to do it, too \u2014 told him that she perfected her technique on a little blonde that had a crush on her in college. Kelly had whispered this confession through labored breaths as she stroked her strapon into his willingly offered asshole the first time they'd done it in his apartment.\n\nDamn! That first time! Knowing how incredible it felt when she fingered him, Aaron's initial worries about surrendering his virgin bottom to her strapon were no match for his horniness to have her do it to him.\n\nKelly bent him over the arm of his sofa while she fingered his asshole, spreading the lube.\n\n\"Yeah, Aaron. It's gonna feel really, really good. I'm good at this. You're gonna love it, I promise.\"\n\nThen the feel of her strapon tapping at his slippery hole.\n\n\"Grab one of the pillows, Aaron. It's okay to moan into it when I fuck you.\"\n\nThen she pushed it inside. Slowly. The sensation of being filled up was . . . what? A little pain? Maybe, but Aaron really couldn't remember any pain. Embarrassing? If it was, it sure didn't last long. Weird or perverted? That idea weakened with each sublime inch of penetration, gone completely when the last millimeter of Kelly's strapon was buried inside him.\n\nGood? Yeah, really, really good, just as she promised. It was so different to be the one who opens up and takes his partner inside, knowing that it gets her off to fuck him while he's totally loving the sensations she creates as she does it.\n\n\"Shit, I love doing this,\" she had whispered. \"The other end of this strapon is in my pussy, hitting just the right spot when I fuck your asshole, Aaron. Does it feel good to you, too?\"\n\nHe began to back his ass into Kelly's thrusts.\n\n\"Yeah, I knew you'd like it. It gets me off knowing you like it.\"\n\nThen she draped herself over his back and shared her secret, whispering into his ear.\n\n\"I learned to like strapon fucking with a girl I was with for a few months. She loved it in the pussy. Then she learned to love it in the ass.\"\n\nThat just about caused Aaron to come. Somehow he held back, wanting Kelly to climax before he had his own orgasm.\n\n\"But I love doing it to guys, too,\" she said, her words coming out in a throaty rasp. Aaron could tell she was getting close, but her words distracted him.\n\nHow many guys had she fucked like this?\n\n\"Moan for me, Aaron. I love hearing it. I love knowing I'm making you feel good by fucking you like this.\"\n\nHe was getting close, too. Aaron put all distractions away from his mind and concentrated on the exquisite sensations Kelly's strapon cock was creating inside his ass.\n\nShe levered up from his back, grabbed his hips, and began grinding against him, pressing up and down in order to cause the end of the dildo inside her pussy to connect with her G-spot in a way she knew would get her off.\n\nWhat that did inside his asshole was mind-blowing. She was nudging her fake cock repeatedly against his prostate.\n\n\"Oh, god,\" he panted, \"oh, damn, Kelly! What the hell are you doing?\"\n\nShe tightened her grip on his hips.\n\n\"Exactly what we both want, Aaron. I'm doing exactly what's gonna make us both come.\"\n\nHe squeezed his eyes shut, buried his face in the pillow and let out a rumbling groan as he shot powerful jets of cum from his steel-hard dick. Kelly drilled the strapon deep and held it there, shuddering through her own intense climax before collapsing against his back.\n\nHow many times had he fantasized about that strapon fuck and the two others Kelly had given him before she took off for Vancouver to work as a make-up assistant or something for a film being shot there? Aaron didn't know the exact number of times he had replayed those incredible scenarios in his mind, but he knew that whatever the number was, it was exactly the same number of orgasms he'd given himself as he jacked off to those memories.\n\nBut now, two years later, Felicia was his fianc\u00e9e, and their sex life --- while great --- had not yet included even the first caress of his puckered opening, in spite of his eagerness to share this intimacy with the woman he knew he'd be with for the rest of his life.\n\nHow can I bring this up? Aaron thought. What if she thinks I'm a pervert or something?\n\nIt was driving him crazy. They should be sharing any kind of sex they both enjoyed, each being happy to make the other feel good.\n\nThis shouldn't be so damned hard!\n\nBut it was the most difficult thing he could imagine after what happened with the first girl after Kelly.\n\nBreanna. Gorgeous. He'd actually gone out with her a couple times while he was seeing Kelly, knowing that Kelly was happily unserious about a relationship. Things progressed with Breanna, and \u2014 dammit! \u2014 he had blown it with her completely by asking if she'd slide a finger inside his asshole the very first time she gave him a handjob.\n\n\"Eeeewww! That's gross! Are you kidding?\"\n\nAaron's erection wilted immediately with those words, and he quickly tried to make things right.\n\n\"No, Breanna! Really. It's not-\"\n\n\"Not normal,\" she spat back, quickly wiping off of her hand the lube she'd been using to stroke his cock. She retreated to her bathroom, grabbed a towel to hide behind, and then returned to the bedroom to stare at him in disbelief. \"I don't date pervs,\" she had sneered as she stood behind the opposite side of the bed, glaring at him. \"Now get out!\"\n\nHastily scrambling into his clothes, Aaron had slunk from Breanna's apartment like a mangy cur that's just been chased away from an angry farmer's garden. He couldn't erase the image of her face as she assessed the depravity of his sexual request.\n\nTo have experienced such totally opposite reactions from two women to the idea of finger-fucking a guy in the asshole meant he became enormously anxious about ever bringing up the idea of ass play again with a bed partner.\n\nWhat Kelly had done to him, though \u2014 the way she had introduced first the notion of fingering his ass while she sucked his cock then moved on quickly, with his eager participation, through two fingers, a small butt plug, and then her strapon, was masterful in creating his impatience to see her strapped in, the dildo sticking up from her crotch as she smiled at him while standing next to the bed, both of them knowing what was going to happen next.\n\nBut Aaron knew Felicia was not in that head space, was not someone who had even thought about fucking a guy in the ass with a strapon dildo.\n\nWhich meant she had not thought about doing it to HIM. With Breanna's reaction so indelible in his memory, his anxiety was off the scale when he thought that Felicia's reaction might be similar. But with Felicia the only woman with whom we would make love from now on, he was desperate to have her accept the pleasure they could both receive when she donned a strapon dildo and rode him to thoroughly satisfying orgasms for them both.\n\nAnxiety or not, one thing Aaron knew for sure: he was going to have to bring Felicia around to an enthusiasm for strapon man-fucking if he were ever to be treated to the sight of his gorgeous fianc\u00e9e, all 5'8\" of her lithe body and beautiful face framed by the silky, chestnut hair he loved to run his fingers through, strapped into a dildo, the stiff shaft jutting from her crotch as she smiled at him, crooking her finger in a motion that meant, \"Here. Now. Bend over. I can't wait to fuck you.\"\n\nHow was he going to make that happen? \n\nAaron had surfed the web, looking for sites that might have information about this, suggestions for how a guy could introduce his girl to the idea in a way that would ensure she wouldn't be turned off. The fiasco with Breanna meant he knew one way NOT to do it. He wanted more than mere toleration of the idea, though. Aaron wanted to do this in a way that would guarantee that Felicia would be incredibly turned on by the thought of fucking him in the ass with a strapon dildo.\n\nThe sites and the blogs and the discussion boards he came across, however, seemed to have descriptions and conversations that made it clear the lucky couples were already past the point of accepting strapon fucking as a way to make love. There seemed to be precious little advice to men who wanted to know how they could get their women to try strapping into a fake cock and using it to create crashing orgasms on both ends of the inventive toy.\n\nThe other problem was that so much of what existed on the web or for purchase on DVDs was a female domination approach to the act \u2014 \"Who's the bitch, now?\" kind of stuff that was nowhere near what Aaron wanted between him and Felicia. His introduction to the act at the end of Kelly's strapon was great because it had NOT included any BDSM kink AND because Kelly truly got off on how erotic, arousing, and satisfying it was when she fucked him, something that turned Aaron on incredibly.\n\nThe woman being hot to fuck the man \u2014 that was always one of Aaron's big turn-ons. Layer on the erotic thrill and the psychological charge of the horny woman as the one who is going to penetrate the man, and . . . well, Aaron's introduction to this amazing route to sexual pleasure had hooked him immediately. The fact that taking a strapon had also given him new and intensely pleasurable sexual sensations made him even more eager to bring Felicia around to the idea of adding this kind of sex play to their lovemaking.\n\nThe mere idea that \"erotic, arousing, and satisfying\" sex with Felicia could eventually include occasional strapon play \u2014 well, that would be more than perfect.\n\nThen, totally by chance, he and Felicia went to a movie one night, an innocuous, PG-rated feel-good story about a small-town girl with a big-time voice quitting her dead-end waitress job to head for L.A. and her dream of stardom. The small-town girl wound up on stage in a burlesque review, but the surprising thing to Aaron was the scene in which she accepted the advances of the good-guy burlesque bartender. Though brief, this movie had several seconds of the bartender's naked butt on display as he sauntered back into the bedroom in his apartment.\n\nIt seemed, at least, an opening to probe for Felicia's potential interest . . .\n\n\"It was an okay movie, I guess,\" Aaron ventured as they drove through night-time traffic back to their condo. \"She really can sing, that's for sure.\"\n\n\"Yeah, the production numbers were pretty well staged, but I wonder if there really are any of those kinds of clubs in L.A.,\" Felicia answered, looking out the window and through the damp mist that had settled over Seattle.\n\n\"Kind of a cheesy plot, but I guess that's okay for an underdog-wins-in-the-end movie, huh?\"\n\n\"It's make-believe, babe, but I think it accomplished its goal,\" Felicia said with a small smile as she turned toward him. \"We got to root for the good guys against the greedy real-estate speculator, and the girl got her guy in the end, too.\"\n\nWhat will you REALLY think about a girl getting her guy in the end? wondered Aaron, noting Felicia's unintentional double-entendre.\n\nGod, I really want you to want to fuck me, baby, he thought.\n\nThen Aaron decided it was time to begin trying to make that happen. He had missed the opportunity once before in this situation when Felicia begged him to go see the second installment of the cinematic version of the cable series about thirty-something gal pals living la vida loca as liberated women in the Big Apple. That film had included a scene in which a male hearthrob had bared his ass in what became an oft-quoted highlight of the film (at least, according to Felicia, who related that her girlfriends were quite impressed with the man's body, handsome face, and \u2014 specifically \u2014 his, \"sexy ass\").\n\nAaron decided it was time to quit agonizing over whether Felicia would ever be willing to fuck him in the ass with a strapon and start doing things that could make it happen. He would not miss an opportunity like this again.\n\n\"Well, I guess we could see it coming,\" he ventured slowly, watching out of the corner of his eye for any reaction from Felicia, \"but the director did a good job, I think, of keeping things playful between the two of them when they went to bed the first time. Did you like that scene?\"\n\n\"Ummm, yeah, I guess,\" Felicia answered. \"It definitely was corny in spots, though.\"\n\n\"Had to keep the PG rating intact, I suppose,\" Aaron answered, nervous about what reaction his next statement would bring. \"But I'll give it to the guy \u2014 he had a great body that the director was featuring even though those set-ups to keep his dick hidden were really contrived.\"\n\nFelicia was silent for a few seconds.\n\nIs she replaying the scene in her mind? Aaron wondered.\n\n\"Well, since you brought it up, I'll have to agree with you,\" Felicia answered with a hint of tease in her voice.\n\n\"Agree about what? The goofy snack box hiding his crotch or that you liked the guy's body?\"\n\nAaron put his own hint of tease into the question.\n\n\"What do you think?\" she answered, nudging him on the elbow.\n\n\"Felicia, if it turns you on to see a hot guy get naked on camera in a movie we're watching, then I'm happy you like to see it. And so,\" he continued as they eased through the nighttime mist which had now grown closer to being fog as they neared their condo, \"I mean it when I say that I hope you enjoyed seeing the guy's naked butt as he walked into his bedroom in that scene.\"\n\nStep ONE launched successfully, Aaron thought, congratulating himself for a brief moment before becoming anxious as he waited for Felicia's reply.\n\n\"Ooooh, permission from my fianc\u00e9 to enjoy seeing a really cute, naked male butt,\" she answered, the tease now becoming more pronounced in her voice. \"Are you jealous?\"\n\nAt least the conversation was still open. She was inviting more discussion. And she was having fun.\n\nThis could go really well, Aaron thought hopefully.\n\n\"Depends,\" he said noncomittally in answer to her question. \"I've never for a second been jealous that you're seeing guys totally naked in the pornos we watch sometimes. And, yes,\" he said pre-emptively, raising a palm to short-circuit her next playful question, \"even when the guys have great bods and big dicks.\"\n\nAs they waited for the parking garage gate at their condo to retract, Aaron turned to look at Felicia, happy that she was smiling, waiting expectantly for more of his confession. \"But even in a mainstream film like we just saw, where the guy is . . . I don't know, more of a 'real guy' somehow, it's still kinda hot knowing you liked seeing his naked ass, as long as you're not rushing off to Hollywood to track him down solely for the purpose of convincing him to let you grab it.\"\n\nThey pulled into the parking garage of their condo, and Aaron waited expectantly for Felicia's reply as he maneuvered the car into their parking spot.\n\nFelicia undid her seat belt, leaned over to him to place her hand on the back of his head and run her fingers through his hair. \"Yeah, I like to see great male bodies on handsome men, and, yes, I very much enjoyed seeing what's-his-name's naked ass in the movie tonight.\" She looked at Aaron in what he knew was a prelude to a kiss. \"But, baby, the only naked male butt I want to grab is yours.\"\n\nAfter her kiss, he mustered all the sincerity he could while still trying to keep things light, and said, \"Ummm, I wish you would grab it more often. I love keeping you happy.\"\n\nFelicia leaned back from his face a few inches and grinned. \"An open invitation?\"\n\n\"Just say the word, and my naked ass is yours,\" he answered.\n\nYou have no idea how literally I mean that, including the 'open' part, Aaron thought as he grinned back at Felicia.\n\n* * *\n\nSo Phase One of his plan unfolded of its own accord, no forethought on his part to make it happen. Thank goodness I took advantage of the opportunity, Aaron thought, as he listened to Felicia's soft, regular breathing as she slept next to him. They had made love that evening after she had giggled and told him to turn around and show off for her, like the guy in the movie had done. Now, he wanted to ensure a quick follow-up to his fortunate first step along a path he hoped would lead to his beautiful Felicia strapped into a dildo and lubing it up in preparation for her first experience of being the partner with the cock that penetrates her lover.\n\nWhat should Phase Two be, Aaron wondered, and how soon can I make it happen?\n\nAs with Phase One, Mistress Fate, it seemed, was on Aaron's side.\n\nThey were shopping the next day at the health foods grocery they went to for certain items, and the store had a special running on all vitamins, supplements, and beauty/health products. Thinking he'd check for \"natural personal lubricants\" or something \u2014 not one of the things they'd yet investigated here, having bought such lubes and toys and DVDs online where such purchases felt more anonymous \u2014 Aaron perused the aisle while Felicia was off with the cart at the meat counter.\n\nYes, he did find a personal lubricant (gotta love those marketing euphemisms, he thought), and it would make for fun sexplay between them. (Nothing on the label, obviously, about suitability for anal play, he noted without surprise, but it does say that its natural plant-based ingredients make it safe for use on any part of the body.) But two sections over, in the soap and shampoo display, was an organic aloe soap which the store's little ad display said created a slippery smooth, lotion-like lather.",
        "Natural ingredients that wouldn't irritate sensitive tissues in a soap that creates a lotiony lather? Aaron had just found his answer for shower that would include his finger sliding inside Felicia's pussy, something she had steadfastly refused from the first time he brought it up, saying that soap lather irritated her vagina. Her hard-line stance about irritating soap made him realize that the ol' \"wash my back, please\" ploy to get her fingertips sliding across his asshole would never work.\n\nAaron knew immediately that these were two purchases which would figure into his scheme to have Felicia \"discover\" the snug confines of his asshole as it accepted the slow insertion of her finger for the first time. He plucked the soap and the lubricant from the shelf, further scrutinizing the wording on the boxes as he ambled back over to Felicia, who by this time had moved into the produce section.\n\n\"What's that?\" she asked, noticing as he dropped the two items into their cart.\n\n\"Store's having a 25%-off sale on all the supplements and healthcare stuff, so I figured it'd be a good time to try these.\"\n\nFelicia reached down into the basket to retrieve the two small boxes.\n\n\"Aloe soap? What's so special about this?\"\n\nBefore he could answer, she interrupted. \"And I know why you picked this up,\" she said, lowering her voice. \"But don't we still have plenty of lube from the last mail order?\"\n\nHe shrugged, a guilty-as-charged grin on his face. \"Yeah, I know, but I thought we'd give this a try. It's on sale, and I know you like natural products.\"\n\nShe wrapped an arm around his waist and leaned up to whisper in his ear. \"You'll come up with any excuse to get a handjob, won't you?\"\n\nHe whispered back. \"You haven't read the box closely enough yet to see what it says about all the ingredients being so natural that you can even eat the stuff, and it'd be good for you.\"\n\nFelicia's surprised expression indicated that he'd one-upped her in their little game of teasing each other inside the local grocery. She turned her gaze immediately to the description printed on the back of the box. The smile that quickly formed on her mouth let Aaron know she'd found the comment about edibility, and she dropped the box back into the cart along with the soap.\n\nIt was a given they would try the lube the next time they made love. Aaron would make sure that would be after they had showered together using the new soap.\n\nAfter they'd eaten dinner that evening (Felicia made a great choice at the grocery with some grass-fed beef), Aaron helped clean up the kitchen and then, trying not to appear too obvious and eager, he rotated his shoulders through some shrugging motions and twisted his torso back and forth as he walked from the kitchen into the den.\n\n\"That workout this morning was a good one,\" he said. In truth, it had been satisfying, and he knew that the way he'd pushed through the last set of dumbbell presses would cause some soreness in a couple of days, so he thought he could talk Felicia into a second shower that day in order to 'rub my shoulders while the hot water loosens up the muscles.' Normally, she didn't like to take more than one shower a day because she said the hot water stole too much of her skin's natural oils for it to be good for her.\n\nBut he thought she might catch the hint and realize that he was continuing the tease from their shopping trip before dinner.\n\n\"Don't think I don't know what you're doing,\" she said, walking into the den and settling into her favorite chair to reach for the TV remote. \"You're just horny to have me stroke your cock in the shower and then try out that new lube,\" she said, one eyebrow arched at him in a dare to contradict her assessment of the situation.\n\nAaron walked to the chair where she was sitting, placed his hands on the padded arms in order to support himself as he leaned down close to her face and said impishly, \"And that would be a bad thing?\"\n\n\"Depends,\" Felicia answered, an index finger raised to her chin in mock concentration. \"What do I get out of it?\"\n\n\"Well,\" he said, straightening back up and turning to walk into their bedroom and its master bath, \"you'll get to see if that organic aloe soap really has a lotiony lather that's good for your skin without stripping away the natural oils that you worry about, and\" \u2014 Aaron was at the door to their bedroom, his back to her as she sat in the chair, and he made a show of shimmying his ass at her, unbuckling his belt and quickly sliding both jeans and briefs down to mid-thigh before leaning forward as he looked back at her over his shoulder, \u2014 \"you'll get to grab this tight little butt like you said you like to do when we talked about that movie we went to the other night.\"\n\nWithout waiting for a response, and hoping desperately that Felicia would rise from her seat and follow him, Aaron drew his briefs and jeans back up enough to walk without tripping and disappeared through the doorway.\n\nHe didn't know whether to be relieved or discouraged when Felicia wasn't immediately behind him.\n\nIf she took him up on his offer too quickly, he wouldn't have time to get under the water, lather up, and thoroughly wash in between his asscheeks to ensure that, in spite of his normal good hygiene, he was squeaky clean for what he hoped would be the first time he would feel Felicia's fingertips gliding across his asshole.\n\nIf she followed him into the bathroom too slowly or \u2014 god, no! Don't even think it! \u2014 not at all, that would mean that he'd lose some of the momentum that the last two days had so conveniently created with the discussion about grabbing male butts and the purchase of new lube and new soap.\n\nSo it was with a true sense of relief that Aaron saw Felicia through the steamy shower glass slipping out of her jeans and her top. He'd had time to wash himself thoroughly (and find that, yes, this soap really DID work quickly into a slick yet cleansing lotion-like foam), and he was thrilled that his soon-to-be-wife was stepping into the shower with him, both of them knowing full well that the ruse of a shoulder massage would quickly turn into a much more sexual activity.\n\n\"This new soap really is nice,\" Aaron said, running the bar up his arm and down his chest as Felicia moved under the spray.\n\n(They'd often joked that one of them was always in \"wash\" mode while the other was in \"rinse\" mode when they shared a shower.)\n\n\"Let me see,\" Felicia said, holding out her hand while her eyes remained closed as she luxuriated in the hot water cascading over her head and shoulders.\n\nInstantly recognizing the opportunity to have more fun with his plan, Aaron dropped his hands to his cock and quickly lathered it up, the beginning of an erection stirring immediately as a result.\n\n\"See. Just like lotion,\" he said, taking Felicia's outstretched hand and drawing it to his cock, closing her fist around his shaft.\n\nHer eyes still closed, she smiled.\n\n\"Kinda hard to tell like this, though,\" she teased. \"Give me the bar, Aaron. Let me get a good lather so I can test this the way I need to.\"\n\n\"Just trying to be helpful,\" he said, feigning a bit of disappointment in his voice.\n\nMeantime, it would be fun watching Felicia run her hands all over her nude body to test out the lather.\n\nHe would stroke his cock while he watched her do it, using the lather that he'd worked up already on his crotch.\n\nShe looked up from lathering her calves to see him masturbating.\n\n\"What are you doing?\"\n\n\"Only what comes naturally when I see my beautiful, sexy fianc\u00e9e rubbing lather over her entire, naked body.\"\n\nNow completely straightened up and turning to begin rinsing herself off, Felicia rolled her eyes at Aaron. \"If that's not a blatant attempt to get a girl to give you a handjob, I've never heard one,\" she said before closing her eyes to lean her head back into the spray of water.\n\n\"Think what you want, beautiful,\" he said, stepping into the spray to press himself against her. \"It's the truth.\"\n\nAaron's erection was now at full mast and throbbing. His masturbating strokes of a few moments ago would have ensured such a state no matter what, but his arousal at the mere thought of what might be only minutes away would have by itself given him an achingly hard cock. Now, his erection was bone-stiff, and it pulsed against her belly as he held her tightly.\n\nHer nipples were hard nubs against his chest.\n\nA good sign.\n\nAaron kissed her through the cascade of water, indicating his excitement at being with his fianc\u00e9e, both of them naked, both of them knowing that they would make love. Felicia kissed him back, signaling her desire for the same thing.\n\nBreaking the kiss, she said, \"You really weren't kidding about this soap, baby. I love it, and I can tell it's going to be better than what I'm using now.\"\n\n\"But is it better for stroking my cock?\" he asked, still clutching her close to him as he began to squirm his hips from right to left, pressing and sliding his cock side to side across her abdomen.\n\n\"I guess we will have to do a comparison test . . .\" she answered, her words trailing off into a delightful implication.\n\nIn an oft-practiced maneuver, Aaron turned to the side as they moved out from under the spray so Felicia could stand beside him, straddling his thigh in order to press her crotch against his leg and her breasts against his arm. It was a natural position in which to drop her hand in front of him and close her fist around his cock to begin stroking his shaft.\n\nShe reached for the bar of soap and liberally built up a nice lather on his cock, his balls, and in the closely trimmed pubic hair framing them. Then she reached to put the soap back into the soap dish on the wall of the shower stall.\n\nAaron stopped her, squirming his arm free of its position as she leaned into him, and closed his hand over hers, saying, \"You forgot about the 'grab your man's tight butt' part.\" The position was too awkward for him to guide her hand down to his ass (and he was distracted by the great feelings she was causing with her lather-slickened handjob), but just his comment was enough for Felicia to know what he meant.\n\n\"Hmmmm . . . a double test of the new soap, huh?\"\n\n\"Might as well go for broke,\" Aaron teased.\n\n\"But I thought you said your shoulder needed the massage,\" she answered, teasing him now.\n\n\"You keep forgetting \u2014 we're testing the soap and the effect of grabbing my butt, babe. We can't stay in here so long that we get all prune-y because we do this stuff one thing at a time.\"\n\nJesus, am I doing this so she's buying into what she thinks is just our usual fun time in the shower? Aaron thought to himself.\n\n\"So let me see if I have this right,\" Felicia answered, lowering the bar of soap to his butt with her left hand as she continued stroking his cock with her right. She resumed pressing herself into his side in order to feel the nice sensations on her crotch and against her breasts. \"I'm supposed to be testing this,\" and she stopped stroking his cock for a second in order to give it a firm squeeze, \"while at the same time I'm supposed to be lathering and grabbing here,\" and she rubbed the bar of soap across his buttocks, down under them and onto the backs of his thighs then back up again. \"And this simultaneous testing procedure is going to prove what, exactly?\" she asked as she placed the soap into the soap dish, having now built a nice lather on his backside.\n\n\"Well, I hope it proves a couple of things,\" Aaron answered, savoring the sensations Felicia was producing with her handjob as well as the incredibly arousing thought of what was only seconds away if he could make it happen. \"One, that you like this new soap and its slippery, lotion-y feel, and, Two,\" he took in a quick breath to gather his courage, \"that you enjoy the sensation of grabbing and playing with your man's naked butt while you stroke his cock.\"\n\n\"You are such a horndog,\" Felicia answered.\n\n\"Anything to have you do this to me,\" Aaron answered, punctuating his sincerity with a slight moan as he spread his legs a little, pressing his thigh more insistently into Felicia's crotch at the same time.\n\n\"Hey, I should be getting some fun out of this, too,\" Felicia said in mock objection. \"I don't think this lather is going to irritate my little kitty if I get it nice and slick in order to rub against you while you get your jollies from this little test.\" She gathered up some of the lather, now clinging in copious amounts to Aaron's crotch, and rubbed it between her legs before resuming her handjob as she pressed her slippery pussy into his thigh.\n\nIt was time to go where they'd never been before. Aaron could not lose this opportunity.\n\n\"God, that feels really good on my ass, babe. I never thought it would be so . . . umm, well, so . . .\"\n\nAaron was playing this for all it was worth.\n\n\". . . jeez, just so pleasurable for you to do that to my butt.\" he finished, pushing just slightly backward into her palm as she ran it across his cheeks.\n\n\"And this is the grab-your-man's-butt test, I assume?\" Felicia said, now pressing her crotch insistently against him.\n\n\"You said you liked seeing that guy's naked butt in the movie, and you've told me that your girlfriends have commented on supposedly 'grab-worthy' male behinds,\" Aaron said, desperately hoping Felicia would continue what she was doing and would find it a turn-on. \"And you said the only male butt you wanted to grab was mine, so, yeah, this should be a good test for that.\"\n\nFelicia didn't stop what she was doing.\n\n\"Shit, this feels so good \u2014 you stroking my cock and my ass at the same,\" Aaron said, leaning his head back and closing his eyes to emphasize his point. \"Go ahead and smear some of that lather in between my cheeks. What you're doing feels so sexy and good on my ass. I just want to see what it feels like if you caress me completely.\"\n\nAaron's heart was pounding. How many times in the last few hours had he rehearsed the request he had just made? Since finding the soap and the lube, he'd thought of nothing but how he could use them and the recent movie to his advantage in having Felicia take liberties with his ass \u2014 liberties that to this point in their relationship she had not tried.\n\nMaybe the slippery lather at her crotch and the way she was pressing against his thigh meant she was in a hyper-aroused state and willing to try this new nastiness.\n\nShe slipped one finger between his cheeks.\n\nTentatively, she slid it upward, not making contact with anything but the sides of the furrow between his cheeks.\n\nAaron rewarded her immediately.\n\n\"Oh, yeah, babe. That DOES feel good,\" he said, his eyes still closed and head tilted back.\n\nFelicia's breathing had become shallow. She'd never thought of this.\n\nShe continued.\n\nAaron shifted very slightly. It was a calculated move meant to send a signal: You can be more bold, baby. Slide that finger over my asshole. Please. I want it.\n\nHe held his breath.\n\nHer fingertip grazed his asshole with a butterfly touch, then quickly slipped back upwards.\n\nShe needed to be rewarded again, be reassured that it was good, that it was okay.\n\nThat it was hot.\n\n\"Ummmmm,\" Aaron moaned, flexing his cheeks open a bit.\n\nThat should send a clear invitation, he thought, hoping desperately that Felicia would accept the overture.\n\nHer finger lingered in its position between his cheeks at the top of his furrow. She pressed a little more, making full contact, the pad of her fingertip now beginning a slow trail downwards.\n\nPlease, please, Aaron thought.\n\nHe held his breath.\n\nFelicia was now actually using his hard cock as a handle to pull herself tight against him, squirming her pussy against his thigh. She laid her head on his shoulder.\n\nHer finger advanced toward his asshole, its contact and position on its downward descent sending the unmistakable message that continuing would mean she would slide across his asshole in only a second . . .\n\n\"Do you want this?\" she whispered.\n\n\"Oh, yeah. You're driving me crazy, Felicia. Please don't torture me any longer. It feels so-o-o good, babe.\"\n\nShe raised her head, craned her neck to indicate she wanted a kiss, and when Aaron turned his head to meet her lips, she slid her finger to his asshole and held it there while they kissed. Felicia began a slow, gentle massage, the lather a perfect lubricant for her ministrations.\n\nBreaking the kiss, he panted, \"Jesus, baby, oh, fuckin' shit \u2014 you have no idea . . .\"\n\nHis garbled syntax devolved into a moan of pleasure.\n\nIt surprised Felicia.\n\nThen it delighted her.\n\n\"So you like it?\"\n\n\"God, don't ever stop,\" Aaron muttered.\n\nFelicia giggled. \"I have a new button to push, don't I?\"\n\nAaron's cock erupted, jets of cum pulsing from the end as he shuddered through a powerful orgasm.\n\nFelicia stepped back, shocked by the suddenness and the intensity of his climax. He'd come many times before from her shower handjobs, but this was reducing him to a puddle of spent ecstasy as he stiff-armed the wall to keep his balance.\n\nIt turned her on incredibly.\n\n\"You have got to eat my pussy right now, Aaron!\" she said urgently. \"Damn! I've never given you an orgasm like that from a handjob, and it is crazy hot to know I can do it.\" She was already almost completely rinsed off in her haste to get to their bed. \"Dry off fast and come get between the sheets with me. I am so turned on.\"\n\nAaron turned his head to watch her exit the shower stall, still supporting himself with one hand against the shower wall as he recovered from the intense orgasm her first-time massage of his asshole had created while she stroked his cock. Taking a few more seconds to recover, he finally turned off the water and grabbed a towel, hastily running it over his dripping body before dashing into the bedroom.\n\nJust her touch on my asshole did that, he thought, clearing his head and coming down from the intense orgasm. I really, really need her inside me.\n\nThey made love, Aaron coaxing Felicia through two orgasms with his tongue and fingers before he'd recovered enough to slide an erection into her sopping wet pussy. It took only a few strokes before they both came, Felicia gripping him tightly, almost like she was trying to draw him completely inside her.\n\nThey didn't get to the new lube that night.\n\n* * *\n\nThe next day was Sunday, and they slept in a bit before rousing for brunch. Over omelettes and bacon, they chatted about nothing in general, anything in particular, and just relaxed in each other's company. \n\n\"So,\" Felicia began, looking at Aaron over the top of her mug of coffee, \"last night was something, huh?\"\n\nAs he lay in bed earlier, Felicia already up to start the bacon frying, Aaron hoped for a conversation about what they'd done last night, and he had played out various scenarios in his mind, searching for the perfect lead-in to even more explicit anal play. He had a response ready for her question.\n\nPicking up his own mug of coffee, he said before taking a sip, \"You are absolutely the best lover a man could ever wish for.\"\n\nShe eyed him thoughtfully for a moment.\n\n\"So everything I did was what a fantastic lover would do, then?\"\n\nAaron smiled at his fianc\u00e9e. \"Do I really need to answer that?\" he asked, grinning at her. \"I'd say that the mind-blowing orgasm you gave me in the shower and then a second one in bed is plenty of proof that you were playing me like a fine-tuned instrument last night, babe.\"\n\n\"Now that you mention it,\" Felicia continued, \"that shower orgasm . . . you came really hard, didn't you?\"\n\nThis is going so-o-o-o-o well, Aaron thought.\n\n\"It was phenomenal. You're the sexiest woman alive.\"\n\nTake it easy. Coax her along. Help her realize that it's totally safe and fine to talk about the new thing we did last night, Aaron thought, sipping more coffee and trying hard to keep an expression that would not give him away as a sneak who was setting things up to make this conversation happen.",
        "\"So why was that?\" Felicia asked. \"Why was that orgasm so intense? I've given you handjobs in the shower before.\"\n\nAaron tried to read her expression as she asked the question. He knew what he wanted to blurt out, but he knew she wasn't ready to hear of his desperate eagerness for her to fuck him in the ass. He'd played through this spot in this conversation in his mind only an hour earlier in bed, and he decided that he had to take very small steps and let her prompt her own discoveries.\n\n\"It surprised me, too,\" he said, sincerity in his voice. \"What you were doing to me felt so . . . I don't know . . . uh, well, erotic I guess.\"\n\nHe held her gaze.\n\n\"It was different but somehow so right,\" he said.\n\nAaron looked down into his mug, trying to hide his anxiousness about Felicia's next comment.\n\n\"You're talking about when I touched your asshole, aren't you?\" she asked, looking earnestly at him when he raised his eyes from his coffee.\n\nIt was EXACTLY what he hoped she would ask.\n\n\"Yeah, that's what triggered it, for sure.\"\n\nSeeing her expression \u2014 a clear invitation to explain, to let her know it was okay \u2014 Aaron continued.\n\n\"You know, I have to believe it was as much a psychological thing as it was the actual physical sensation.\" He hurried to amend that statement. \"Not that the physical sensation itself wasn't absolutely fantastic,\" he said, smiling at her as he sat down his mug and reached across the table to place one hand on top of hers before continuing. \"But the fact that you were that intimate with me, that tender in doing what you did because, for whatever reason, I had this crazy notion in my head that it would feel good and asked you to do it, well . . .\"\n\nAaron searched Felicia's eyes before continuing to emphasize how much he meant what he was about to say. She swallowed and parted her lips slightly in anticipation.\n\n\"Well, it was just so damned erotic and hot and sexy and loving and felt really incredible that I . . . I guess all of that mixed together was such a sexual turn-on that I was over-the-top aroused by your finger gently caressing me there while you stroked my cock, and I had a blinding orgasm because of it.\"\n\nThough he had thought through that response as he lay in bed earlier that morning, it was still the god's-honest truth.\n\nHe thought Felicia might break out in tears as she looked at him. She said nothing, just looked at him, love in her eyes. Finally, she said, \"I knew you were the right man.\"\n\nHer comment touched Aaron deeply. He smiled at her, happy that this incredible woman was going to be his wife.\n\n\"So I can look forward to more of those kinds of orgasms?\"\n\nFelicia rose from her seat, stepped to his chair and insinuated herself onto his lap as he slid back in the seat. She kissed him lightly on the lips and said, \"I love making you feel good, baby. And if whatever I did last night will give you more orgasms like that, then I want to do it to you.\"\n\nThere was one more thing that was incredibly important to Aaron. He looked into Felicia's eyes, then kissed her lightly on the lips.\n\n\"But is it good for you? Do you like it?\" He searched her eyes for the answer. \"I don't want to feel like it's just something you do for me but you're not really turned on by it.\"\n\n\"Why are you even asking me that?\" Her tone was gentle, and she placed one palm on the side of his face. \"You can't imagine how much it turns me on to know that you want me to make you come in such an intimate way, that you're hot for me to do it to you \u2014 something that's so private and so very, very hot.\"\n\nAaron drew in a deep breath, releasing it slowly as the muted ticking of the kitchen clock counted off several seconds. \"I love you,\" he said.\n\nThen, in something he had definitely not planned out when he lay in bed earlier that morning, Felicia said, \"You're making me horny, baby.\"\n\nHis expression communicated his surprise to Felicia.\n\n\"Yeah, you heard right. I really want to take you to our bed and fuck right now.\" She leaned close to his ear and said, \"This talk about how much you get off with love AND with lust when I massage your asshole has really got me worked up. I think I might want to trigger off another orgasm like you had last night, but I want your big, hard cock in my pussy when it happens.\"\n\nShe slid off his lap and reached for his hand to tug him up. \"And we have to try out that new lube, too, remember?\"\n\nAaron did not object for even a second. Felicia's dirty talk was causing his cock to swell, and he was also eager to use that lube.\n\nIt would be the next step in what had so far turned out to be a spectacular success in launching them on the path that he was crazy with desire to travel \u2014 a path that would lead to Felicia's strapon dildo stroking deep inside his ass.\n\nRemembering that they'd put the little bottle of lube in the nightstand next to the bed, Aaron walked to the drawer and pulled it open, reaching in to retrieve it. He was surprised to hear Felicia turn on the shower. Immediately afterward, she appeared in the doorway of the master bath, completely nude, tugging on one nipple as she grinned at him.\n\n\"You know what, baby? I figure if you liked it when I massaged your asshole, that you'll go completely crazy if I slide my finger inside. Besides,\" she said, turning to present her gorgeous ass to him, \"it'll be fun to touch you there like I did last night, but this time you'll know what's coming next.\"\n\nAnd she disappeared into the bathroom. Aaron heard the shower door open and close.\n\nHe swallowed hard, standing motionless, trying to process what Felicia had just said. So many months of wanting this, worrying about how to bring it up, worrying if she'd be turned off, and now . . .\n\nIt was like sensory overload. His brain was being swamped with messages that he was going to feel EXACTLY what he was desperate to have right now \u2014 Felicia's finger inside him, penetrating him, and her getting off on doing it to him \u2014 and the anxiety about all of this that had haunted him for so long was now being washed away in a tsunami of incredible erotic arousal. His cock rose in only seconds to full hardness as he stood next to the bed, unconscious of the erection as he came to terms with the reality of the situation.\n\nGod, I love you so much, Aaron thought, finally able to push a coherent message through his brain.\n\nHe shucked off his t-shirt and lounge pants on the way to the bathroom.\n\nFelicia had already lathered up, and she was leaning against the tiles, stroking her pussy. She turned to face him when he opened the shower door.\n\n\"Oh, yeah. I DEFINITELY like this soap.\"\n\nAaron wanted to distract her from watching him wash between his cheeks (something he needed to do given his normal morning routine before their breakfast). \"Hand me the soap, babe, and let me lather up while I watch you masturbate. You are so damned sexy. Close your eyes and fantasize about what you're going to do to me.\"\n\nShe grinned evilly at him. \"You have no idea what I'm going to do you, Aaron.\" But she did as he asked, leaning back on the tiles again, spreading her legs, and returning her hand to her pussy.\n\nThis was always fascinating and arousing for Aaron to see. They'd become comfortable enough with each other over the months to masturbate together, and it never failed to arouse him powerfully to see Felicia do this.\n\nSo why should I have even worried about asking for her finger up my ass? he wondered, momentarily distracted after the thought about being comfortable enough with each other to share mutual masturbation. Shaking his head slowly in amazement as he watched his sexy fianc\u00e9e rub circles around her clit and down the outside of her pussy lips, Aaron quickly soaped between his asscheeks then spread them open under the spray to rinse completely.\n\nSatisfied that he was ready for her, Aaron began soaping his cock and balls, quickly having handfuls of the creamy lather after returning the bar to the soapdish. He stepped out from underneath the spray and stood watching Felicia. With one hand he stroked his hard cock, with the other he cradled and fondled his balls.\n\nFelicia's eyes opened to see him watching her as he masturbated. Smiling, she stopped her own self-pleasure and said, \"Yummmm, I love seeing that, baby. Stroke for me. Let me watch for a minute.\" She moved a soapy hand to one breast and massaged, grabbing the nipple to squeeze and experience the exquisite sensations when the hard nub slipped from her pinching hold.\n\nFelicia straightened completely and snuggled against Aaron's side, dropping her hand to his cock and pushing his own hands out of the way.\n\n\"Hand me the soap,\" she said as she began stroking his erection.\n\nThis time Felicia was explicitly focused on getting a rich, creamy lather between his cheeks, and she quickly replaced the soap to focus on stroking his ass, cupping his cheeks, squeezing his ass, and sliding her fingers in between his muscular glutes.\n\n\"I'm going to pet your asshole, baby.\"\n\nAnd she did, gently sliding her fingertip up and down across it, teaching herself all about Aaron's crinkled opening. She massaged in circles, teased with playful taps to the center of his asshole, and delighted in reaching underneath his spread legs to trail soapy fingertips across his ball sac as she flattened the heel of her palm against his perineum, only to press as much of her entire palm as possible against him as she drew her hand back and up, concluding the mind-blowing massage by dragging her fingers across his pucker and up to the top of his furrow.\n\nFelicia toyed with his genitals and ass in as erotically nasty a way as she could conjure, both for his pleasure as well as for hers.\n\nAaron was panting. \"You're trying to make me crazy, aren't you?\" he asked, a shudder coursing through his body.\n\n\"Definitely. I want you ready for what comes next.\"\n\n\"Then you better stop right now because I'm gonna come if you don't.\"\n\nGrinning widely, Felicia withdrew both hands, placing them against her chest to massage her lovely B-cup tits and tug on her nipples, again feeling the pleasure of first the pinch, then the warmth spreading down into her tummy when those erect nubs slipped free of her soapy fingertips.\n\n\"Rinse off, Aaron. We're going to try out that lube now.\"\n\nFelicia backed into the spray of water and quickly rinsed herself free of lather, then stepped through the shower door, pulling a thick towel from the rack to dry off. Aaron was not far behind, his erect cock bobbing with each motion as he hurried after her.\n\nIn record time they were in the bedroom, Felicia seated on the edge of their bed, the little white bottle of lube in her hands. She popped the top and squeezed out a generous dollop. Looking at Aaron in the eye as he stood in front of her, she held her palm up to her mouth, stuck out her tongue, and lapped a bit of the lube onto her tongue and into her mouth. Motioning him close to stand close in front of her between her legs, she smacked her lips. \"Truth in advertising, babe. This stuff is going to work out great. I'm going to use it to stroke your cock, then I'm going to suck it while my hands are busy on other areas of your body.\"\n\nAaron's hard dick literally bounced at the implication.\n\nFelicia reached out both hands, enclosing his erection and working the lube from one palm up and down his shaft. The result was that she was quickly stroking him with two hands, the lube spread completely over his cock. She began an up-and-down twisting motion that felt wonderful, continuing in that manner for a minute before sliding her hands to his balls, cupping them to smear lube there as she lowered her face to the head of his naked and glistening hardness, then slid several inches of him inside her mouth.\n\n\"Oh, shit,\" Aaron whispered. \"Damn, that feels so good.\"\n\n\"I like it too,\" she answered, backing off his cock to slurp in a breath of air. Felicia quickly returned to her blowjob, though, and was soon swirling her tongue across the sensitive bundle of nerves just under the head of his dick.\n\nAaron placed his hands on her shoulders, gripping them. \"Stop for a minute, please\" I'm not ready to come for you yet.\"\n\nShe popped his cock from her mouth, looking up at him with a curious expression. \"Of course you're not. You're going to come when this pretty cock is deep inside my pussy.\"\n\nThen Felicia rose, jostling Aaron back a step in the process. She grabbed his hand and led him to the padded chair in the corner of the bedroom. Placing him in front of it as if he was about to sit, she said, \"Wait a minute. Let me get a towel.\"\n\nHis erection pulsing with each beat of his heart, Aaron stood in place, perplexed. When Felicia returned with the towel, she spread it on the seat and said, \"Sit.\"\n\n\"Felicia, what are you-\"\n\n\"Now, scoot forward and put your legs over the arms of the chair,\" she said, interrupting, then turning immediately to retrieve the bottle of lube from where she had dropped it on the bed.\n\nThe position was a bit awkward, but as he was following her instructions, Aaron realized immediately why she had directed him as she had: his asshole was completely exposed and accessible.\n\nFelicia immediately knelt in front of him, again squeezing some lube into one hand. \"I can't wait to do this to you, babe,\" she said, looking him in the eyes. \"I'm gonna slide my finger up your asshole while I suck your dick.\"\n\nHis cock bounced up from where it lay against his belly at her words.\n\n\"Felicia, you're driving me crazy, you're making me absolutely insane. When you said this morning that you wanted to-\"\n\nAgain she interrupted. \"Hush. Don't disturb my concentration,\" she said, her gaze fixed on her hand as she advanced it toward his exposed opening. \"I want to watch my finger go inside you before I go back to sucking your cock.\"\n\nAaron completely surrendered to the entirety of the situation. A flood of relief forced a huge exhale of breath, and he sagged back against the cushion in the chair.\n\nAt that moment, Felicia's hand made contact with his ass, and she transferred the lube in her palm to his perineum and up to his asshole, liberally coating both areas. She gripped the base of his cock with the other hand and tapped the head lightly against her lips as she looked up at him.\n\n\"Are you ready, Aaron?\"\n\nShe was teasing him, knowing that he was crazy for her to do this.\n\n\"I can wait if you think we should,\" she said, a small smile forming on her face.\n\nBefore he could respond, Felicia continued. \"But I don't think we should. I'm too ready to see this. My pussy is too wet NOT to see this.\"\n\nDamn! thought Aaron. Is she inside my head, acting out my fantasies?\n\nHer finger was now recreating what it had done in the shower, tapping his asshole, teasing it, massaging it. Then, in a moment that Aaron had thought might never come, Felicia eased the tip of her finger inside his exposed anus.\n\nFelicia sat on her haunches in front of him, the base of his cock in one hand, but her focus was on watching her finger slide slowly inside him. Transfixed, she pushed insistently but carefully, hardly daring to breathe, until her finger was completely buried in his ass.\n\nThe sound Aaron made was not one she had heard before, but it aroused her intensely.\n\n\"You're so tight and hot,\" she breathed softly. \"Does it feel good?\"\n\nHe reached a hand forward to cradle her chin. \"Don't ask me to talk when you're making me feel this good, baby. Yes, yes, it feels incredible.\"\n\nShe smiled at him as he released her chin, his arm flopping immediately to his side as Aaron abandoned himself to the exquisite sensation of Felicia filling him in such an intimate way.\n\nWanting to watch as she slowly pulled her finger out, Felicia began the tortuous tease of extracting her finger millimeter by millimeter. Again, she sat transfixed, watching the nastily sensuous visual she was orchestrating.\n\n\"Don't take it out, don't take it out,\" he whispered.\n\n\"I'll slide it back in, babe. I want to suck your cock while I'm doing this, remember?\"\n\nHe groaned deeply and relaxed his grip on her finger.\n\nThe sensation was new and unexpected for her. It was thrilling.\n\nShe pushed back in, eliciting another groan from Aaron.\n\nSoon she was slowly finger-fucking him in a regular rhythm. He gripped the front edge of the seat cushion on either side of his butt as he was splayed open before her.\n\n\"This is so sexy,\" Felicia whispered. \"I love being inside of you.\"\n\nShe slipped his cock into her mouth, lapping off the large droplet of pre-cum that had collected there. Then, rising to her knees for a better position, she began the first combination blowjob and finger-fuck she had ever given.\n\nAaron was in sexual ecstasy. The sensations were overwhelmingly erotic, sensuous, crazy hot, and so absolutely arousing \u2014 mentally, physically, psychologically (hell, even spiritually, some part of his consciousness dictated) \u2014 that he knew he was going to have a powerful orgasm quickly as a result of what Felicia was doing.\n\nThen, before he could utter a word of warning, it hit him. He spurted into her mouth, his asshole contracting around her finger in concert with the pulsing jets of cum he was pumping through the length of his cock. Her eyes bulged out in surprise, but Felicia only backed off until just the head of his dick was in her mouth so she could take his cum without gagging. \n\nQuickly making that maneuver allowed her to focus on the sensations around her finger as she held it buried to the hilt inside his asshole.\n\nHe was spasming around her finger! She had no clue that would happen, but it was incredibly arousing to be inside him when it occurred, feeling his orgasm from the inside. The sensation was amazing, so intimate and yet so very, very erotic. It was so hot she wanted desperately to strum her clit and come hard that very instant, but both her hands were occupied.\n\nShe settled for helping him down off his high as the last of the contractions of his cock and his asshole subsided. Slipping his cock from her mouth and swallowing, she wiped her lips with the hand that had been at the base of his dick and said, \"Aaron, that's incredible! I had no idea it would be like that!\"\n\nHe was panting, a sheen of sweat across his brow. \"Ease it out, baby, please.\"\n\nShe immediately began withdrawing her finger.\n\n\"Slow! Slow!\"\n\nFelicia followed instructions and slid her finger slowly, gently from Aaron's ass, watching as the last centimeter slipped out.\n\n\"Oh, my god, Aaron! Did you know it was going to be like that?\" Felicia snuggled against his chest as he dropped his legs from the arms of the chair. \"I mean . . . Oh. My. God! I could feel you coming from inside of you. That was the absolute wildest, sexiest thing I've ever felt!\" She levered up from him, rising from her knees to walk to the bathroom. \"I am so hot right now, baby. I have to come. I mean, I really, REALLY have to come right now.\"\n\nAaron looked down at his spent erection rapidly receding toward a limp imitation of its former self and knew he would need considerable recuperation after the mind-blowing orgasm Felicia had triggered.\n\nBut he could not possibly love her any more than at this very moment.\n\nHearing the water running in the basin and knowing that Felicia was washing her hands, Aaron managed enough energy to raise his voice. \"You know what you just did to me means I need a break before I can plow into your cute little pussy, baby. How about I get you off another way right now?\"\n\nFelicia walked back into the bedroom, quickly striding to where Aaron had managed to get into a sitting position on the chair. She leaned down to kiss him. \"Works for me. I just know that the next time my finger is in your ass, your cock is going to be in my pussy.\"\n\nAaron knew that it was only the completely draining climax of a minute ago that prevented an instant hard-on when he heard Felicia say those words.",
        "This should mean I can eventually move things along to our first strapon fuck, he thought, not worrying about the grin on his face that the thought produced. Felicia would appreciate the smile as recognition that what they'd just done felt great to him.\n\nWith her still leaning over him, it was easy to reach up and tug on her nipples. \"How 'bout I suck your clit and you hump my face until you come?\"\n\n\"Mindreader!\"\n\nHappy to slide down from the chair and get on his knees in front of her, Aaron wrapped his arms around the backs of Felicia's thighs and pulled her sweet pussy to his face. He burrowed into her slick folds and quickly found her hard clit, the hood already retracted in her arousal. Sealing his lips around the pink, pearly nub, he began slow swirls around it with his tongue.\n\n\"Yeah, that's it, baby \u2014 eat me good, make me come hard on your face,\" she purred, spreading her feet just a little to get into perfect position to allow for a long, slow, comfortable masturbation session using the best toys possible in the absence of Aaron's rigid cock: his eager mouth, lips, face, and fingers. She placed her hands on the back of his head and drew him even tighter against her crotch, humping herself into him, seeking the intense release she was desperate to experience.\n\nReleasing her clit, Aaron slipped his tongue as deep inside Felicia's pussy as he could get it. Immediately rewarded with the ample juices of her arousal, he lapped up the liquid there before returning to her clit.\n\n\"Shit, baby, oh, god, oh, god,\" she panted, already on the edge as a result of her initial erotic invasion of Aaron's asshole and now even closer as he continued working magic with his talented tongue.\n\nGod, I could spin you around, pull apart your pretty cheeks and bury my tongue inside your asshole, baby, Aaron thought, the notion sending some of the blood back toward his dangling cock. He knew it was too soon, though.\n\nEventually . . .\n\nHe settled for sliding two fingers into her sopping wet pussy, arching the fingertips toward him to plant them against her G-spot, and then applied gentle, short, stroking motions against the spongy tissue as he pressed his tongue hard against the side of her clit and held it there, abandoning his oral ministrations solely to tight contact in order to let Felicia squirm against him in the manner that was best for her to take advantage of simultaneous clit and G-spot stimulation.\n\nIt took only a few seconds.\n\n\"Oh, sh-i-i-i-i-t!\" she yelled, drawing in a huge breath as her body shook and warm, shooting sensations coursed between her nipples and her clit. Felicia's pussy contracted rhythmically around Aaron's fingers. Had his mouth not been plastered tight to her crotch, he would have smiled broadly at triggering this glorious orgasm.\n\nFeeling my orgasm from inside me was exciting, baby? Aaron thought. Felicia, I hope it's as exciting as feeling your contractions around my fingers right now!\n\nShe shuddered for several seconds, Aaron slipping his fingers from her pussy and drawing his mouth away from her clit so he could encircle her with his arms and pull her close against him as the final tremors of her intense climax finally began to subside.\n\nFelicia dropped her hands to his head and stroked his hair, silent as she savored the physical and emotional intimacy. \"Damn but that wiped me completely out,\" she said, literally exhausted from the effect the orgasm had on her.\n\nAaron rose from his knees and embraced her tightly.\n\n\"I guess both of like to feel the contractions inside the other's body when there's an orgasm involved,\" he said softly as he smiled and looked into her eyes.\n\nShe kissed him deeply, then tugged him behind her into bed where they immediately snuggled into an exhausted, satisfied post-coital nap.\n\n* * *\n\nThe next month was as good as Aaron could have imagined for any trip down a path that would eventually have the two of them engaged in the act he was so desperate to share with Felicia. They continued to enjoy the soap, the lube, her explorations of the snug confines of his anus, both when his cock was inside her mouth and when it was inside her pussy.\n\nThat first time when Felicia had slipped her finger up his ass while he was on top of her, his stiff dick pistoning in and out of her pussy, was mind-blowing.\n\n\"Now, THAT'S what I was talking about getting from you, babe,\" she had said. \"Remember? When we were about to try the new lube for the first time? I said I wanted to give you as intense a climax as you had that night in the shower, but that I wanted it when your cock was inside my pussy.\"\n\nAaron was still catching his breath as he lay on top of her, his cock slowly softening after the incredible orgasm she had given him when she slipped her finger inside his ass while he was fucking her. \"Yeah, I remember,\" he said, smiling as he raised on his forearms above her to look into her eyes. \"Was this what you wanted?\"\n\n\"And more,\" she said, rolling to the side as he slipped from her wet pussy. \"But I wonder, Aaron,\" Felicia said over her shoulder as she scooted to the side of the bed and then got up to go into the bathroom, \"what kind of sex can we have on our honeymoon to make it special? I mean, what can top this?\"\n\nThe big grin on Aaron's face was something Felicia didn't see.\n\nHe knew what it would be. Not the first night. The first night he would make love to his bride in the ways they both loved \u2014 him taking her, entering her, enclosing her in strong arms and tight hugs as she surrendered to accept his male lust and desire for her.\n\nBut later, maybe the next night, he would surrender to her, let her take the role of the one with the stiff cock. He would show her how much he loves her with his trust and his vulnerability and his soothing reassurances that he wants her to experience the physical and emotional satisfaction of entering him, fucking him, bringing herself to climax with the thrusts he will accept gladly. \n\nHe would derive his own intense satisfaction as much from bringing her to orgasm in this way as from the enjoyment he would get from feeling the shaft of her strapon sliding in and out of his ass. \n\nThe wedding was four months away. He told himself he could wait in pleasurable anticipation, planning, making arrangements, ensuring the perfection of the moment when it arrived.\n\nTwo months later Aaron discovered the instructions to the secret of the 15-minute female orgasm, and he knew that the first night of their honeymoon was going to be just as memorable as the second. Further, her intense pleasure \u2014 so eagerly provided at his hands solely because he wanted to give her an amazing orgasm \u2014 would have no strings attached, but he knew that Felicia would be so pleased and so blissed out that she would be eager to do anything to return the favor.\n\nThere was a guilty feeling that came with being so diabolical. The erotic allure of seeing Felicia sporting a strapon erection, stroking lube on it in preparation for sliding it up his ass and fucking him, was far too powerful a stimulus, though, and Aaron rationalized things to his satisfaction.\n\nAfter all, the result would be explosive orgasms for both of them.\n\nFirst, he planned for all the toys Felicia would need to strap in and fuck him. Packing them in their honeymoon luggage would be way too complicated, and the risk of her discovering them before his careful, timed introduction that second night in their suite at the island hotel where they would be staying would be too great. Worse, a random baggage inspection at the airport would be catastrophic.\n\nNo, a call to the hotel to arrange for receipt of a package shipped there to be held for his pick-up upon arrival would be perfect. The clerk would let them know that it was waiting for him when they checked in, and Felicia would be intrigued.\n\n\"A little present for you on our honeymoon,\" he would say, a mysterious tone in his voice. \"It's for tomorrow night, though, so you'll have to wait.\"\n\nShe would be delighted!\n\nAaron would select the gift-wrapping option for the feeldoe dildo and the harness. The message on the gift card that would accompany his offering to his bride would have to be clever enough that personnel at the mail-order sextoy company would not balk at printing it. But he wanted the message to be memorable, something that she would always associate with making love for the first time by penetrating him and feeling the other end of the dildo work its magic against her G-spot. The note had to promise something when she read it, then make sense in its true meaning after she took him for the first time.\n\nIt took a month's worth of tinkering to get the wording just right and still fit within sextoy vendor's 240-character limit for gift cards:\n\n'Surrendering to your love thrills me, & I offer my love in return. The ring, the vows, & my promise to hold you in my heart forever come with our wedding and our shared future, but this gift represents how much I treasure your pleasure and how eager I am to create it. All my love forever, Aaron.'\n\nLubricant for that special night would not be a problem \u2014 they were now regular users of the lube that was such a fortunate find at the natural foods grocer. It was a normal part of their sexplay now, and they'd have plenty of it with them, as always. Aaron knew it would be perfect as Felicia used it first on his anus and then on the shaft of her dildo as she prepared to take him.\n\nBut the first night of their honeymoon would be memorable, as well.\n\nHe would give Felicia her first 15-minute orgasm.\n\nWhile browsing in his favorite bookstore a few weeks after Felicia discovered the sublime sensations of his contractions around her finger as he came, Aaron picked up a thick book with an intriguing title that included the words, \"Incredible Sex,\" and which was written by the same author who'd previously written a book touting the possibilities of only working four hours per week. His curiosity piqued, he turned to the section about sex and found that the author had, in effect, hacked the female orgasm \u2014 he had gone straight to the experts to find out the sure-fire approach that would most reliably create the desired results.\n\nAnd what he found there was not anything he had ever done with Felicia.\n\nAaron quickly added a blindfold to his mental list of toys for their honeymoon. (It would be easy \u2014 he still had a pair of the blindfolds the airlines give out upon request.) That blindfold would work perfectly as suggested by the book's author: Felicia would be blindfolded to help her concentrate only upon the sensations Aaron would be creating.\n\nThe book's instructions and drawings clearly explained the activity in which the man positions himself in order to spend 15 minutes tantalizing the woman's clit with precise, short strokes on a particular spot, his touch so light as to be almost no contact at all. It was something Aaron had never heard of, but the testimonials and the research behind the technique convinced him he could orchestrate the most intense orgasm Felicia had ever experienced.\n\nIt would be absolutely perfect. The technique's requirement that the 15 minutes are to be devoted to nothing but the woman experiencing pleasure \u2014 even to the point of prohibitions against the woman doing anything to the man \u2014 would mean that Felicia would be overwhelmed with his intense desire to give her pleasure.\n\nThat realization on her part, that acceptance that he would do anything to give her sexual pleasure, would help ensure his ability to convince her to strap into the dildo and use it to fuck him. How could she not want to return the favor? Then, seeing how much it aroused him, seeing how much he loved and trusted her to be vulnerable enough to open up for her, hearing him tell her how exciting it would be for both of them with her in control of the dildo as she penetrated him, she would surely relax and let any hesitations slip away as she began to realize how very nice the act could make her feel, too.\n\nAm I setting all this up just to get my own pleasure? he wondered, bouts of guilt returning only to be tamped down repeatedly. His love for Felicia, though, his true desire to take her to sexual heights she had never known simply because he wanted her to feel good, helped ease his conscience.\n\nBut it did nothing to ease the frustration of knowing their wedding wouldn't happen for weeks. Waiting that long to experience all of this \u2014 the intense orgasm he would give Felicia the first honeymoon night, the intense orgasm she would give him the second night as she learned to fuck him in the ass with the strapon wedding gift he would present to her \u2014 the anticipation and his horniness to live out both nights of the honeymoon made the wait brutal to endure.\n\nHe coped with a strategy that provided temporary relief. It involved the butt plug he'd purchased after Kelly introduced him to the exquisite sensations that come with opening, receiving, and surrendering all resistance while savoring the sweet nudge against that special spot. The uniquely arousing mind-trip of accepting her penetration and the fullness it created meant Aaron knew the instant Kelly left his apartment after administering his first ass-screwing that he would find a way to recreate on his own as much of this sublime delight as possible.\n\nYes, it was second best to taking the business end of a strapon as wielded by a knowledgeable woman practiced in the art of man-fucking, but a self-created way to mimic as much of the experience as he could added immensely to his existing repertoire of masturbatory techniques.\n\nSo it was only a matter of days after Kelly left that Aaron made his purchase. He quickly discovered that setting the plug on a small wooden stool of perfect height and securing it in place by using the suction cup bottom of the toy as it was designed to be used allowed him to straddle and kneel, then lower himself in a deliciously slow movement that drove the thoroughly lubricated plug into his asshole. The cone-shaped toy opened him wider with each inch of penetration, causing wonderful feelings until the widest part slid beyond his pucker, and he settled into a satisfying impalement, his asshole closing around the narrow stem of the plug.\n\nIt took a few sessions to reach the point of opening up enough to accept the full girth of the plug, but he planned it that way. Way back when he ordered the plug, he chose a size that he guessed was the same diameter at the bottom of the cone as the slender shaft of Kelly's strapon.\n\nHis cock was rock hard in anticipation of the sexual thrill he knew was coming every time the rounded end of his sex toy made contact with his anus whenever he masturbated in this fashion. Controlling his descent as he savored the sensation of being opened slowly as the girth of the cone increased, Aaron would begin gliding his lubricated fist up and down the length of his erect cock.\n\nAfter teasing himself by raising and lowering, each time going farther down to take more of the toy inside and open his asshole wider to accept the invasion, he would switch on the vibrations that instantly created such satisfaction inside his snug canal. A rocking motion brought the butt plug in contact with his prostate, and the shivers he experienced as a result were divine. The suction cup on the bottom of the plug kept everything in place when he withdrew, and he then enjoyed another penetration as he took every inch inside.\n\nThe little stool found a spot in the corner of their shared master closet when he and Felicia moved in together. Aaron quickly found a way to make it serve a purpose: one suitcase sitting on top when not in use, and his running shoes underneath.\n\nIt was fast and easy to move the suitcase and pull the stool out for its special purpose. Doing so during times when Felicia was away and he could masturbate with the butt plug deep inside his asshole was easy, and he'd found a perfect hiding place for the plug as part of the move-in.\n\nThe whole deception was not what Aaron wanted, but he could not risk anything except careful planning over time, introducing things to Felicia in stages, to ensure that she would not be turned off by his most exciting fantasy. (Breanna's reaction was indelibly etched in his brain \u2014 no way would he risk anything to create even a ripple of revulsion in Felicia.) So he was careful never to be caught, careful that Felicia never found his special pleasure toy, and mindful that the butt-plug masturbation sessions were keeping him prepared and capable of comfortably taking the shaft of the slim feeldoe dildo when his bride strapped into it the first time as she prepared to fuck him on their honeymoon.\n\nIt was a given that every single session riding the plug as he stroked his cock included mental pictures of Felicia strapped into the wedding-present dildo. Every time he masturbated in this fashion, he heard Felicia's voice as the fantasy played in his head: \"Oh, my god, Aaron! This feels freakin' incredible,\" as she was fucking him for the first time, or, \"Oooh, babe! It looks so-o-o-o sexy sliding into your butt! I love seeing you take it and feeling the other end doing such incredible things inside my pussy.\"\n\nOr, \"Damn, Aaron! I love fucking you like this! I love fucking you in the ass with this strapon dildo, baby! Tell me we're gonna do this again. Promise me, because I am gonna come so hard from fucking you like this that it's gonna make me crazy!\"\n\nHe could only tolerate this kind of masturbation session occasionally. The pleasure was intense, but then the frustration of knowing how much more arousing and satisfying it would be to open up to Felicia's strapon would kick in. Better not to tease myself, he thought. A few days would pass, however, and the anticipation of having his gorgeous wife-to-be getting herself off as she fucked him thoroughly would force another session.\n\nIt was hell for Aaron.\n\nBut as the wedding drew nearer, with all its excitement, details to be tended to, and enormous time commitment, Aaron's butt plug masturbations became less frequent.\n\nThat probably accounted for the dreams that began a few days before the wedding. His ramped-up anticipation of surrendering to Felicia's strapon coupled with no time for the extended sessions that satisfaction at his own hand and the butt plug provided meant that Aaron was on a hair trigger. The free rein his subconscious took during sleep started creating vivid dreams of Felicia standing naked in front of him, her strapon cock upthrust from her crotch: \"I can't wait to fuck you, Aaron,\" she purred in these dreams, \"and I can't wait to come so hard from doing it that it drains both of us completely.\"\n\nThe dreams, which always came just before awakening, never got much beyond her on her knees behind him as he was chest-down-ass-up on the bed. At that point, dream-Felicia said, \"Ooh, look at that cute little asshole! I am gonna love sliding this fake cock deep inside you and then pulling it back out as I really start fucking you in the ass,\" and Aaron would wake up, a sheen of perspiration on his forehead as he reoriented to the reality of the dark bedroom. Realizing it was only a dream, he would get up to go to the bathroom where he would settle down enough to empty his bladder so that if Felicia roused she would think nothing of it. More important, though, he had the chance to wipe away the pre-cum that invariably had collected on the end of his dick.\n\nThree days before the wedding, he awoke too late from the dream.\n\n\"Just excited about seeing how beautiful you're going to be in your wedding dress and then how much fun it will be to see you out of it,\" was the explanation he gave Felicia.\n\n\"I know guys have wet dreams,\" she had replied, propped on an elbow to look at him, \"but I have to say this is the first time a guy came in my bed because he was dreaming about me.\"",
        "Aaron eased out of bed and headed to the bathroom to avoid any more conversation about his dream. \"Sorry, babe. I'll change the sheets before I leave for work this morning.\"\n\nIn the whirlwind which was the last three days before the wedding, Aaron and Felicia both would be crazy busy. He would have little time in the upcoming 72 hours for anything more than \u2014 maybe \u2014 a random, hasty jerk-off session to attempt dealing with the torture of being only days away from what he desperately hoped would be Felicia's willingness and excitement to make him her first, only, ongoing, and cherished fuck toy. With today his last day at work before taking off the two weeks for his nuptials, he relished the coming events yet yearned for them to be over.\n\nMaybe it's only four days until I see Felicia in a strapon, excited about fucking me, Aaron hoped as he tucked the sheet under the mattress that morning.\n\nThe next day, he placed the order for his surprise wedding gift to be delivered to the honeymoon hotel. Waiting until then and ordering 2-day delivery was the best way to ensure that the package didn't get there so early as to risk being misplaced yet was guaranteed to be there as needed upon check-in.\n\nIt was a simple order: 1) a feeldoe dildo (how he hoped Felicia would come to love the feel of the bulb end of the dildo bumping against her G-spot when she fucked him!) \u2014 he chose the slim blue model, knowing that the widest part of his favorite masturbation toy was the same diameter (ensuring that he would enjoy every millimeter of the ride Felicia would give him); and, 2) a strapon harness he'd read about that users said worked extremely well with the dildo he was purchasing.\n\nThere would be plenty of their favorite lube packed simply because it was their honeymoon.\n\nWhen Aaron typed in the gift card wording and gift wrapping instructions into the order form, he got an erection. The mere thought that he was planning his own ass-fucking was sexually arousing. That it would happen on his honeymoon, his new bride strapped in and incredulous at the sexy sensations the act produced for her, was romantically satisfying.\n\nThis had to happen!\n\nThankful that his buddies and Felicia's brother \u2014 as a member of the wedding party, it was a given that he would be included in any bachelor party invitation \u2014 weren't, as a group, the kind intent on a wild night of debauchery. The stripper was attractive, went only so far as a G-string, and was restrained during the obligatory lap dance. (\"We told her to keep it cool,\" Hank told him later.)\n\n\"Enjoy your honeymoon, handsome,\" the stripper had said, smiling sweetly as she collected her things and left the room.\n\nYou have no idea how much I'm planning on that! thought Aaron.\n\n* * *\n\nThe ceremony was beautiful, and Aaron misted up when he saw Felicia coming down the aisle. She was absolutely stunning as a bride, gorgeous and smiling at him.\n\nEverything went wonderfully at the wedding and the reception (Yes, that wedding planner fee was worth every last cent, thought Aaron), and they finally relaxed from their excitement as they flopped back into the deeply cushioned leather seating in the limo with the wedding guests calling final congratulations into the air behind them.\n\n\"It was fantastic, Aaron. I love you so much,\" Felicia said, snuggling next to him and leaning her head on his shoulder. \"You were so handsome in your tux, and the reception and the cake and our first dance \u2014 oh, I just couldn't be happier with my wedding to my wonderful husband!\"\n\nHe put his arm around her shoulders to hug her closer to him.\n\n\"I couldn't be happier, either, Felicia. You'll always be my beautiful bride.\"\n\nThey kissed deeply as the limo driver smiled discreetly while he maneuvered the long black vehicle through nighttime traffic on the way to the airport.\n\n* * *\n\nThe spacious hotel lobby was open to the ocean breeze, and they could see the beautiful Pacific waters that encircled the Big Island as they approached the check-in desk. The employee tag read, \"Lanae,\" and she offered a wide smile with her invitation: \"Checking in?\"\n\n\"Yes,\" answered Aaron, trundling his suitcase to a stop beside him as he drew Felicia close to his side.\n\nHe wanted to be sure she heard about the package that would be waiting for them.\n\n\"Mr. and Mrs. Aaron Danninger,\" he said, hugging Felicia's waist. \"We're honeymooning here for a few days.\"\n\n\"Congratulations!\" said the pretty hotel clerk, looking at them brightly before dropping her gaze to her computer screen. \"A king-size bed, ocean-side view, and our complimentary honeymoon basket waiting for you in the room.\"\n\n\"Perfect!\" chimed Felicia.\n\n\"Give me just a moment . . . may I take your credit card?\"\n\nAs Aaron drew his wallet from his hip pocket, the clerk said, \"Oh, I have a note here that we have a package waiting for you at check-in. Shall I have it sent up, or would you like for me to have the concierge bring it to you now?\" She looked up from her screen, waiting for Aaron's decision.\n\n\"Why don't we get it now,\" he said, handing his credit card to the clerk. \"It won't be so big or heavy that it will be a bother to take up to the room with us.\"\n\nFelicia turned to look at him. \"What? You knew there'd be a package?\"\n\nAaron allowed a tiny smile to cross his lips as the clerk handed his credit card back to him. Not looking at Felicia, he replied nonchalantly, \"Something like that,\" as he returned his wallet to his pocket.\n\nWhile the clerk motioned over the concierge to let him know that the package should be brought to the check-in desk right away, Felicia nudged him and said, \"Aaron, what have you done?\" as a smile widened across her face.\n\n\"Who says the package came from me?\" he asked playfully.\n\n\"But you obviously know what it is. You told them it wasn't so big that it would be a problem to take up to the room with us.\"\n\n\"Maybe that's just a lucky guess,\" he teased.\n\nThe attendant strode up with the package at that moment, a brown box discretely showing only a return address. \"Please sign here, sir,\" the attendant said, offering a clip board which secured a hotel delivery receipt as he handed the packed to Aaron.\n\nFelicia's puzzled expression was somehow satisfying to Aaron. He was happy that he'd surprised her like this.\n\n\"So-o-o-o-o,\" he said, dragging out the syllable, \"maybe I did make arrangements for a present to my wife.\"\n\nFelicia raised up on her tiptoes, hugging his neck. \"I love you.\"\n\nThey kissed briefly as the check-in clerk smiled broadly, waiting patiently to give them the little folio with their room cards.\n\n\"Let's get up to the room quickly so I can open my present!\" Felicia said, extending her hand to take the folio from the clerk.\n\n\"The elevators are just over there,\" the clerk said, pointing. \"Do you need any help getting your things to your room?\"\n\n\"No, thank-you,\" said Felicia. \"Just as my handsome husband said, this package isn't so large that it plus our luggage will be any problem at all.\" She giggled at the clerk, who watched as they walked away, rolling their bags behind them, Aaron clutching the box that he had signed for.\n\n\"Yes,\" he said as he pushed the button at the elevator, \"we'll open the box when we get to the room so you can see the pretty wrapping and the card that comes with the present, Felicia. But this surprise,\" and he nodded toward the box in the crook of his arm, \"is meant for tomorrow evening, not today.\"\n\n\"No fair!\" she said, pulling her suitcase into the elevator and double-checking the room number written on the inside of the folio before pressing \"15\" on the panel. \"You know I'll be wondering until then what's in that box.\" She gave him a fake pout before her expression morphed into an expectant gaze.\n\n\"Nope. Won't work, babe,\" he said, looking forward at the polished steel of the elevator doors. \"Your surprise is for tomorrow night.\"\n\n\"I bet I can convince you to let me open it early,\" she whispered, snuggling against him and reaching to trace her fingertips lightly along the nape of his neck. \"I bet I can get you to beg me to go ahead and open my present,\" Felicia said in a throaty tone as her warm breath, and then hot tongue, touched his ear.\n\n\"Now who's not playing fair?\"\n\nThe elevator chimed and the doors slid open. A middle-aged couple in colorful Hawaiian shirts and smelling of sun tan lotion waited for them to exit before entering, smiling at them as they pulled their suitcases out into the 15th floor elevator foyer.\n\nOnce inside the room, Aaron realized that he had no way to slice through the packaging tape on the box which contained his special present.\n\n\"Too bad, Felicia,\" he grinned, setting the box on the top of the bureau in the room. \"We can't open this now without a knife or scissors. We'll just let it sit right here until we go back down to the lobby and have the concierge open it.\"\n\nThis time, Felicia's pout was closer to being real.\n\n\"Then we'll bring it back up to the room so you can see your gift-wrapped honeymoon present.\" He stepped close to his bride, embraced her in a big hug, and said, \"And then it will only be one more day you'll have to wait for your surprise.\"\n\n\"I guess we can occupy ourselves in the meantime,\" she conceded, a smile tugging one corner of her mouth upward.\n\n\"What do you have in mind, Mrs. Danninger?\"\n\nShe uncoupled from him, stepped back as she held his gaze, and began unbuttoning her blouse. \"I've never fucked a married man.\"\n\n* * *\n\nTheir post-coital nap meant it was too late for a serious visit to the beach when they awoke, so Aaron and Felicia showered and changed into casual tourist garb to stroll around a bit, check out the area near the hotel. It had just rained as they walked outside (dropping the mysterious box off with the concierge in order to pick it back up, opened, when they returned), so the damp, clean smell greeted them, heavy with the scent of the many flowers planted on the hotel property.\n\n\"Three whole days with nothing to think about, nothing to worry about, except being Aaron and Felicia Danninger,\" said Felicia happily, her hand in Aaron's as they walked along a trail around the perimeter of the hotel grounds. \"I wish it could last forever.\"\n\n\"Me, too,\" he answered, squeezing her hand. \"I love my job, but I love you more, and being here in this beautiful place on our honeymoon means I'm going to do nothing but focus on us.\"\n\n\"Sounds good to me,\" Felicia answered, stepping around a dark green frond that had grown out into the pathway.\n\n\"I'm betting that it's going to be really good for you later tonight,\" Aaron said, letting his statement hang in the air, no more explanation than that.\n\n\"What's that supposed to mean?\" she finally asked, nudging him in the ribs.\n\n\"Oh, nothing.\"\n\n\"Is it connected to whatever's in that package?\"\n\n\"You're like a little kid at Christmas, aren't you, Felicia?\" Aaron teased. \"You'll just have to wait for Santa concerning that package is all I'm saying. But, no, what's going to happen tonight is not connected to what's inside your gift-wrapped present.\"\n\nLater that night, after a delicious dinner at a small restaurant several blocks away that the concierge recommended, they picked up the box on the way back up to their room. Felicia immediately fished the gift-wrapped present out of the shipping box as soon as they were in the elevator.\n\n\"Pretty wrapping, babe. Whoever you bought this from did right by you.\"\n\nAaron said nothing, just watched as Felicia folded back the attached card to read what it said.\n\n\"Awww, that's so sweet!\" She kissed him lightly on the cheek. \"Now I really want to open this up, my husband.\" She looked again at the card. \"What does, 'surrendering to your love,' mean? And, 'treasuring my pleasure' and being eager to create it? This all sounds like it has something to do with you, or me, or both of us being naked and-\"\n\nThe elevator chimed and the doors slid open, this time to reveal a group of excited teenagers talking about the hotel pool. Felicia abruptly stopped her musings about Aaron's gift and smiled awkwardly at the group of chattering adolescents as they stepped toward the elevator then backed off when realizing that Aaron and Felicia needed to exit first.\n\nSmiling to each other about the potentially embarrassing event having been averted, they walked down the hall to their room. Felicia said quietly as Aaron pushed the room card into the slot, \"Don't hold out on me, Aaron \u2013 it'll be okay if I open this tonight, right?\"\n\nThis is going well, Aaron thought. I want her to be eager to open my present!\n\n\"Well,\" he drawled, motioning her into the room, \"if you open your present now, you won't get to experience that little thing I was referring to when I said you'd REALLY enjoy tonight.\"\n\nFelicia cocked her head at him, pursed her lips for a moment, and said, \"You're being very mysterious about all this, Aaron. Just what's going on?\"\n\nAh, my invitation! Aaron said to himself.\n\n\"Are you ready to experience a really, really intense orgasm?\"\n\nFelicia smiled. \"And if I am?\"\n\n\"Then you have to do everything I say, trust me completely, and know that the sole purpose for why I've planned this is because I love you incredibly and want to make you feel as good as possible.\"\n\n\"You've got me intrigued,\" Felicia responded, looking at Aaron lovingly. \"This 'intense orgasm' you're talking about \u2014 it's going to happen right here, just the two of us, right?\"\n\nAaron chuckled as he stepped to embrace her. \"What? You think I've hired some exotic gigolo trained in some secret cult about how to drive women crazy?\"\n\n\"You're my exotic gigolo,\" Felicia said, nuzzling into his chest.\n\n\"No, it's just you and me, but I guarantee you that I've never done this with you before. I wanted it to be a special surprise for our honeymoon.\"\n\n\"Mmmmm,\" was her only reply as she pressed herself against him tightly.\n\n\"It does involve a blindfold,\" Aaron said, injecting a hint of theatricality into his voice.\n\nFelicia looked up into his eyes. \"No handcuffs, though, right? You're not going to tie me up or anything?\"\n\n\"No,\" he answered, smiling. Grabbing her shoulders and holding her at arm's length, he looked into her eyes with a mischievous grin. \"But would you trust me if I did?\"\n\n\"What kind of a husband have I married?\" Felicia teased, sensing his game. \"Is it only now, after the wedding, that I'm going to find out about your kinky desires?\"\n\n\"I strongly doubt, Mrs. Danninger, that after your blindfolded experience this evening, you will describe what I did to you as, 'kinky.' Maybe you should just forget about labels and trust that I have planned something very, very special for you because I love you more than you'll ever know.\"\n\nHe drew her back to his chest, hugged her tightly, and roamed his hands down her back to rest on the cheeks of her butt. Squeezing her tight little bottom through the linen material hugging her firm backside, Aaron said, \"Now, why don't you get out of your shorts and panties while I get things ready to give you an orgasm like none you've ever had.\"\n\n\"Oooh, that's my kind of invitation,\" Felicia answered, toeing off her sandals as she walked to the bathroom. He heard her futzing in there, knowing she was working to look, smell, and taste as good as possible for him, and Aaron loved her all over again.\n\nIt didn't take him long to set the stage \u2014 all he needed was the blindfold and to turn down the covers on the kind-sized bed. He stayed dressed in his loose-fitting polo and his cargo shorts but kicked off his sandals and then reached across the bed to fluff a couple of pillows.\n\nThe butterflies in Aaron's stomach weren't because he was anxious about his ability to follow the instructions in the book he'd bought, to replicate what he saw in the videos which demonstrated the 15-minute orgasm technique. No, his confidence in doing this loving thing to and with Felicia \u2014 and driving her crazy with a fantastic orgasm in the process \u2014 was not at issue. \n\nThis is what will show Felicia that I'll do anything for her sexual arousal and pleasure, Aaron thought as he walked to his suitcase where it rested on the luggage rack in the room. Rummaging into the zippered compartment inside, he pulled out the blindfold and the CD of sexy music he'd burned just for this event, compiling tunes by artists he knew Feliacia liked and stringing them together into a sensual mix of uninterrupted soundscaping perfectly tailored for taking her to an orgasmic peak she had not yet climbed. He laid the blindfold on the bed and dropped the CD into the fancy player/radio on the nightstand, fumbling for a second before figuring out the control to launch the CD. Adjusting the volume, he was finally convinced every detail was perfect. \n\nAfter this, Aaron thought, how will she be able to do anything tomorrow night but want to make me feel as good as possible, too?\n\nIn only 24 hours he would know for sure. His cock twitched at the thought, actually plumping slightly with the blood rushing there at the mere thought of Felicia smiling at him tomorrow night and whispering, \"Yes, baby, yes \u2014 anything to make you feel good!\"\n\nIt had to happen!\n\n\"Thinking about me?\" Felicia said, strolling from the bathroom to the bed.\n\n\"You better know it,\" he answered, smiling.\n\n\"Isn't that Diana Krall?\" she asked, nodding toward the CD player at the side of the bed. \"Did you arrange the music, too?\"\n\nIt was another opportunity to emphasize the idea he wanted burned into his bride's mind.\n\n\"I will do anything and everything to give you the greatest sexual pleasure possible,\" Aaron said, looking at her sincerely. \"Perfect music is part of that, so I made up a nice mix just for you and this special occasion when I'm gonna make you feel so fantastic that you may just pass out from pleasure.\"\n\n\"You're really doing a sales job on whatever it is you're about to do,\" Felicia said, reaching one hand behind her neck to pull her hair around behind her head. \"You have me very curious-\"\n\n\"And excited?\" Aaron interrupted, pulling her down to him on the bed and kissing her deeply.\n\n\"Yes!\" she answered, laughing. \"But I really feel kinda weird like this, my top still on but naked from the waist down.\"\n\n\"I love seeing your gorgeous pussy.\"\n\n\"I should walk around like this, then?\"\n\n\"All the time,\" Aaron said brightly.\n\n\"In your dreams,\" Felicia answered, giggling. \"Oh, wait \u2014 maybe it really was in your dreams, huh? That little accident the other morning . . .\"\n\n\"Wouldn't you like to know,\" he grinned. \"But now, lover, it's time. Your top will keep you warm,\" he reached for the blindfold, \"and this is meant to be a mini-sensory deprivation tool. You're to relax totally, listen to the soft, sexy music, and concentrate on the feelings that I'll be causing.\"\n\nEven through the tube top and the blouse that hung over it, Aaron could tell that Felicia's nipples had hardened in anticipation.\n\nPerfect!\n\nHe positioned her on the bed, crawled into position himself, and looked back at her as she rested her head on the pillow, the blindfold already in place.\n\n\"Now, all you have to do,\" he began, warming his hands by rubbing them together vigorously as he spoke, \"is to relax. In a few minutes you'll start to notice that your pussy and your clit are . . .\"\n\n* * *\n\n\"Oh, my god, my god!\" Felicia moaned, one hand clutching tightly to the back of Aaron's shirt, the other pounding the mattress. She was convulsing, and it was only because Aaron's leg was where it was, stradding her in his position next to her and facing toward her feet, that she wasn't rolling from side to side as well. He noticed the goose pimples on the fronts of her thighs and the glistening, deep pink, almost red, color of her pussy lips in the arousal brought on by his actions. Her clit had retracted at this point, hiding to prevent even the slightest sensation adding to the blinding overload that Felicia was now gasping through as an incredibly intense orgasm racked her body.",
        "She's never squirted when we've made love, thought Aaron, entranced by the sight of her clenching pussy as Felicia fought for some semblance of focus back from wherever she had been transported, but, damn! This must be what it's like when women get so excited that it happens.\n\nFelicia reached up and jerked her blindfold backward, wailing through the final seconds of her intense journey as she yanked on the back of Aaron's shirt hard enough to cause him to fall back against her from his seated position astride her splayed open legs. He adjusted his legs in the process and was able to roll on his side, envelope her in his arms, and hug her through the final aftershocks.\n\n\"Holy fucking shit!\" Felicia huffed, rolling her eyes back in her head before shivering through a final spasm. \"What the hell did you just do to me?\"\n\nAaron released her and propped himself on one elbow to look in her face as they lay on the bed. \"I only did what I thought you would like, what I hoped would make you hot and crazy and out-of-your-mind insane with lust and a fan-fucking-tastic orgasm, that's all,\" he said, smiling as he looked lovingly in her eyes. \"I love you so much that I will do anything to make you feel good.\"\n\n\"Come here, you,\" she said, tears filling her eyes. She grabbed him, hugged him tight against her, and kissed him with hot lips.\n\nAfter a soulful, seconds-long kiss, Felicia broke their hold and proclaimed, \"Water! I need water!\" She rose and staggered to the bathroom on shaky legs.\n\nOnly 24 more hours, thought Aaron, his cock twitching in anticipation as he realized that all his planning had so far worked out exactly perfectly.\n\nBut the next morning it was only by chance that he averted a potential disaster. He stretched as he opened his eyes, reaching for Felicia as he awoke. She wasn't in bed next to him, and he fumbled around on the king-sized bed for a moment before finally lying back to stare sleepily at the patterned ceiling above the bed. \"Felicia?\"\n\nShe had slipped into one of the robes the hotel had hung on the back of the bathroom door, and she was sitting at the fancy and expansive rattan desk along one wall of their room. The package was in front of her, and she turned to Aaron, pulling it onto her lap in the process.\n\n\"Today's the day I get to open this!\" she said with a smile. \"Now I finally-\"\n\n\"No!\" he said, scrambling from the bed to rush to the chair where she sat, her fingers already slipping underneath the wrapping paper seams. \"It's tonight, Felicia, tonight,\" he said, hastily clutching the package and easing it away from her grasp.\n\nGod! If she had opened this while I was still asleep! thought Aaron, trying to hide any worry from his expression while at the same time making a convincing show of being mysterious.\n\n\"This is a surprise, and it's a very special surprise, and I want things to be just so when you open it TONIGHT,\" he said, emphasizing that she wouldn't get to discover what her present was until the evening.\n\n\"Good grief, baby!\" she said, taken aback. \"You have got me wondering what could possibly be in that-\"\n\n\"Shh, shh,\" he hushed, pressing his forefinger against her lips as he held the package in his other hand. \"Remember last night? Remember that I wanted everything absolutely perfect so I could make you feel so fantastic with that orgasm I gave you?\"\n\nFelicia looked into his eyes.\n\n\"You have to trust that I am orchestrating things to be as good as they can be,\" he said, setting the package on the far end of the desk. \"I promise, my present to you will be in your hands tonight, Felicia.\"\n\nShe smiled at him, then pouted immediately.\n\n\"But you're making me so impatient!\"\n\n\"Just think about how incredible it'll be tonight, and satisfy yourself with that thought between now and then.\" Aaron dropped to his knees in front of her as she sat in the chair. Leaning into her chest, he raised his face to hers and kissed her. \"Let me make it perfect for you,\" he said, breaking the kiss and smiling. \"You will be surprised, but I want you to be so turned on that you can't stand it, and I've planned everything to make it happen just like that.\"\n\n\"What the hell is in that package, Aaron?\" she whispered into his ear as she ran one hand through his hair.\n\n\"I will tell you this much,\" he answered, levering back on his knees and rising. As he reached one hand to hers to draw her into a standing embrace, he said, \"My present to you will make you realize how much I trust you, how much I love you, and how much I want to share myself with you as we start our marriage.\"\n\nThey held each other tight for several seconds.\n\nPlease, Aaron thought, please don't freak out when you open that package!\n\n***\n\nIt was a lazy day \u2014 a little sunning on a beautiful beach, a couple of mahi-mahi sandwiches at an open-air restaurant, snacking on fresh pineapple as they ambled with a small group of tourists through a pineapple farm and a coffee plantation.\n\nThe tours were mostly just a way to be together, enjoying the island breeze and luxuriating in being newly married. The day ended with a luau and all the trimmings, including a display of fire-twirling and some traditional hula dancing.\n\nBut then it was back to their hotel room.\n\nAaron was nervous, and Felicia was excited. \n\n\"The package, Aaron,\" she said, walking quickly across the hotel lobby toward the elevators. \"When we get up to the room, it's time to open my present!\"\n\nAs the elevator doors closed behind them, Felicia said, \"No more delays, Aaron! Santa has arrived. You can't make me wait any longer!\" She laughed, her eyes twinkling.\n\nAaron's thoughts were a complete jumble as they walked down the hall toward their room. He couldn't make sense of his thoughts, but he was acutely aware of the butterflies in his stomach.\n\nNo sooner had the door clicked shut behind them than Felicia had the gift-wrapped package in her grasp. She jumped onto the bed as she held it in both hands, landing on the mattress in a seated position with a thump, her legs dangling over the side. She began tearing the paper away from the box.\n\n\"Wait,\" Aaron said gently, placing a hand on her forearm as he slid onto the bed next to her. \"Look at me.\"\n\nTurning a questioning gaze toward him, Felicia's hand fingered the ribbon on the package as she waited for him to speak.\n\n\"Felicia, my love, my wife, I can't possibly tell you how much I love you,\" Aaron began slowly. \"And I can't possibly tell you how much you are my fantasy, my sexy lady, my crazy hot partner in bed.\"\n\nHe looked into her eyes and drew in a deep breath.\n\n\"And the fact that you've done to me \u2014 with me \u2014 the things you've done recently when we've made love have meant everything to me. I mean, some women might have thought I was weird or crazy or yucky or . . . hell, I don't know, but when you didn't freak out about the fact that it actually felt good to me when you, well, um, when you-\"\n\nFelicia interrupted. \"I know what you're saying, Aaron. Don't be so worried about saying you like it when I play with your ass. Besides, I like it, too.\"\n\n\"There \u2014 you see? That right there is what I mean,\" he answered. It's just mind-blowing to me how much you love me. I'm still trying to wrap my head around that.\"\n\nShe smiled at him, placing the package on the bed next to her in order to drape one arm around his shoulders. \"No big mystery, babe. You're easy to love.\"\n\nThat's the best opening I'm going to get, Aaron thought, his nervousness having receded enough to realize how he should proceed.\n\n\"I hope so . . . I mean, that you like loving me and that I'm easy to love,\" he said to her, turning to face her directly. \"Because my present is all about having you love me and me loving you so much that I want you to experience a kind of sexual thrill with me that you've never had but which I want you to take and enjoy and come to adore because it makes you feel incredible sexually as much as emotionally.\n\n\"I get that kind of thrill when I'm inside you, feeling you pulse around my finger when you come,\" Felicia whispered.\n\nAaron swallowed hard.\n\n\"God, you make my cock get hard when you say stuff like that.\"\n\n\"Good,\" Felicia giggled. She dropped a hand to his crotch. \"I guess you're telling the truth.\"\n\nMy cock is going to bust out of these pants, Aaron thought, his excitement now mounting as the instant when Felicia would see the dildo was rapidly approaching.\n\nShe pulled the package back into her lap and resumed stripping away the wrapping. Fumbling with the box for a moment before getting it open, she finally tipped the contents out in front of her on the bed.\n\nThere was silence in the room for several seconds. Aaron knew it was because Felicia was trying to process what she was seeing.\n\nThen, his heart stopped for a second as he glanced down at the feeldo dildo and the harness packages on the bed between them.\n\nIt was the wrong feeldoe! He had ordered the slim blue model, NOT the black one that lay between them in its packaging.\n\nThe black one was bigger around and longer than the less intimidating blue feeldoe.\n\nIt looked scarily big to Aaron.\n\nWhat would he do? If Felicia was okay, wasn't going to freak out and actually wanted to do this, what was he going to do? He would have to open himself up \u2014 REALLY open himself up to her.\n\nHe would have his asshole toyed with and fucked by his beautiful wife just as he had fantasized for months, but she would be strapped into a dildo that was longer and bigger around than he had ever taken.\n\nHe would be opened up and penetrated like he had never experienced before.\n\nFelicia had picked up the feeldoe package. \"Huh?\" she said, turning it over in her hands.\n\nAaron didn't catch her question. He was still processing the mistake that the company had made fulfilling the order. \n\nCould I even take that inside?\n\nFelicia now had the package in her hands, reading what was on it. She drew one hand to her mouth, a shock of recognition registering on her face as she turned to look at Aaron.\n\n\"You want . . . um, Aaron, baby, you want me to . . . you really want me to-\"\n\nGod! I don't know! he thought. Yes! Yes! But, I didn't mean it to be THAT one! I didn't mean it to be that big!\n\nHe swallowed. He looked at her, his expression not what he had planned. He was excited and scared.\n\n\"Oh, shit,\" Felicia whispered, turning the package over in her hands. \"How does this thing work?\" She looked back at Aaron.\n\n\"I think there might be a way to see it in action,\" he stammered, glancing to his laptop on the desk.\n\n\"Jesus, Aaron,\" she said, her voice still soft. \"I know you like it when I finger-fuck you, but I never thought about putting anything bigger inside your ass.\"\n\nAgain she looked at him.\n\n\"You've never had a guy put his-\"\n\n\"No!\" Aaron answered, surprising himself at the volume of his response. He settled down. Reaching to place a hand on her thigh, he said, \"No, Felicia, never. I've read that girls often worry about that when they discover their guys might like this, but it has nothing to do with any hidden desire to get it in the ass from some dude.\"\n\nShe was looking at him, eyes wide as she tried to make sense of her feelings. He couldn't read what was going on in her mind.\n\n\"It's just that it feels good, that's all. For men and women, there are bundles of nerves around the anus that feel good when they're stimulated. For men, being stroked inside presses against their prostates, which can cause incredible pleasure.\"\n\nFelicia looked from his eyes to the package in her hands and back again.\n\n\"But the couples who do this \u2014 and there are lots of them if you go by what you can find on the web \u2014 say that the physical pleasure is only part of it. That the guy opens up to his girl, trusts her enough to take sexual pleasure by penetrating him, well, the couples say that's a high that's tough to match anywhere.\"\n\nShe continued to look at him. Processing.\n\n\"And I want to give it up to you, babe, to have you take me and make love to me in a whole new way that I hope will excite and arouse you. I love and trust you so much that I want you to get really turned on by occasionally being the one who goes deep inside, by being the one who feels the end of this toy,\" and Aaron tapped lightly on the package Felicia was holding, \"nudging up against your G-spot when you fuck me.\"\n\nAaron leaned in for a light kiss and said, \"And I admit that having you do this to me would make me feel crazy good, too.\"\n\nFelicia parted her lips slowly, still holding his gaze, and swallowed before she said, in a quiet, still voice: \"So you want me to fuck you in the ass with this dildo? You want me to somehow have this thing between my legs and then use it like it's a fake cock and fuck you in the asshole?\"\n\nAaron looked at his wife, knowing that everything was riding on this moment, all his hopes that his gorgeous life mate would accept this, would want to do it to him, for him.\n\nFor them.\n\nAnd for herself.\n\n\"Yes, baby,\" he answered. \"Please don't think I'm weird. Can you imagine how nervous I am asking this? But there's one thing I know for sure \u2014 you'll never, ever know how much I want this for your pleasure, too. For your sexual pleasure and for your emotional pleasure.\"\n\nFelicia turned the package over again in her hands, looking down at it.\n\n\"The thing is,\" Aaron continued, drawing her chin up with one finger to bring her gaze back to his as he looked intently into her eyes, \"what turns me on more than anything is knowing that you're sexually aroused, hot and horny and eager to come as a result of making love to me. I'm just hoping that you're going to love doing this with me, that using this toy will give you incredible orgasms that you will come to cherish not only for your physical pleasure but because you know I'm opening up to you with my emotions AND my body.\"\n\n\"Well, you did do something new with me last night,\" she began slowly, haltingly in a soft voice.\n\nAaron's heart raced.\n\n\"And you have been a dear in planning everything out so carefully,\" Felicia continued.\n\nPlease! Please! he thought.\n\n\"And I guess if you've got some kind of video or something that can show me what I'm supposed to do with this . . .\" She glanced toward his laptop.\n\nAaron exhaled in relief.\n\nThen he remembered: But, damn! Why did they screw up the order! I am REALLY going to be giving it up in this fantasy come true!\n\nHe leaned in and kissed his wife, trying to calm his worries about his ability to handle the length and girth of the dildo Felicia would be plunging into his asshole. \"I love you right now like you can't even believe,\" Aaron said, tenderly stroking her cheek as he pulled away from the kiss.\n\n\"This thing is pretty big, Aaron,\" she answered after kissing him on the cheek. \"And I'm supposed to wear this somehow and use it to fuck you?\"\n\nHe slid off the bed and pulled her to her feet. \"I think we'll have fun making our own discoveries,\" Aaron said as he walked Felicia to the desk, \"but I do have one video that at least shows enough that you can figure out all the details for how things are supposed to go together.\"\n\nFelicia was already prying at the packaging, eager to feel the black dildo's texture in her hands as she let him guide her to the desk. \n\nAaron quickly brought up the video he'd saved to the laptop's hard drive in preparation for this moment. It was a combination instructional video for women in how to strap into the feeldoe, but after that interesting tutorial, it progressed to what was supposed to also be instructional viewing about how to fuck a man in the ass with the inventive toy. \"Instructional\" in that part of the video was probably not the best description, at least for Aaron. The pretty woman expertly thrusting her hips to drive the shaft of the feeldoe in and out of her partner's willingly offered asshole was just plain hot.\n\nFelicia was leaning over his shoulder as the video began to play on his laptop screen. She was fascinated, and Aaron quickly scooted out of the chair so she could sit and be comfortable for the minutes spent watching the handsome couple go at it after the woman had demonstrated how to seat the bulb end of the feeldoe inside her pussy and then strap into the harness to keep everything secure.\n\n\"Get it situated so it can nudge against your G-spot,\" the woman said, as Felicia settled into the chair.\n\nAaron's cock was getting stiff, and he adjusted it within his briefs.\n\nThis was going to happen!\n\nHe gently slid the package out of her grasp as she focused on his laptop screen. He stepped to the bureau in the room and retrieved the pair of scissors he'd asked to borrow from the concierge yesterday, knowing he'd probably need to cut one or both of the packages open. Sliding the drawer in the bureau shut after reaching for the scissors, he went to the bed and opened both packages as Felicia remained entranced by the video playing on his laptop.\n\nClearing the packaging off the bed by moving it and the scissors to the nightstand, Aaron picked up the black feeldoe. He wrapped his fist around the shaft and thought, Shit!\n\n\"Lots of lube, ladies. You always must use lots of lube when you're fucking your guy,\" the pretty tutor in the video was saying. Her words snapped Aaron back to the reality of his beautiful wife taking video instruction in the fine art of sliding her strapon cock into his asshole. He again adjusted his cock, now even harder inside his briefs and becoming more insistent in its need to be free to poke up hard and proud toward the ceiling.\n\n\"Now, I recommend doggy style as your first penetration,\" said Felicia's tutor from the screen of the laptop. \"You can grab his hips for leverage. That way, you can really concentrate on the kind of hip action you want to give him a satisfying screwing. We women haven't had this kind of practice, after all.\"\n\nAaron dropped the feeldoe to the bed and pulled off his shirt.\n\nFelicia had unconsciously dropped her hands to her lap.\n\n\"Now, line up the end of your dildo right against the center of his cute little pucker,\" said the woman in the video as she scooted up against the guy who was on his knees and elbows on the edge of the bed. \"Be sure you're at the right height,\" she continued.\n\nAaron dropped his shorts and skinned off his briefs, his hard cock springing free immediately and bouncing up against his abdomen.\n\nFelicia was squirming in the chair, pressing her thighs together as her pussy moistened.\n\n\"Then, slo-o-o-wly,\" said the woman in the video, \"slowly, start to press your fake cock into his asshole.\" The camera moved in to catch the gentle advance of the shaft as the woman expertly inched it into the man's twitching hole. Felicia drew in a shallow breath, fascinated at the visual in front of her.\n\nAaron's hard cock was pulsing. He could not keep from wrapping his fist around it and slowly stroking as he watched Felicia watching the video.\n\nThe guy on the screen of the laptop groaned as the woman slid her strapon completely inside him. She looked at the camera and smiled. \"It feels really good to your man when you're all the way in,\" she said. \"When you slide the shaft inside, it brushes against his prostate, and, ladies! \u2014 that's his special spot just like we have our own special spots inside our pussies.\"\n\nThe man who was now completely impaled groaned again, wriggling his hips to emphasize the accuracy of the tutor's words. \n\n\"Now, back it out slowly.\" The camera again zoomed in, showing the shaft of the woman's dildo sliding out. \"Not all the way, but almost,\" the tutor said, this time with a slight quaver in her voice, giving away her own excitement. \"And then,\" she paused, hovering behind him for a split second, \"push back in, this time maybe a little faster until you're completely bottomed out.\"\n\n\"Damn!\" Felicia exclaimed. \"Aaron! I've never seen anything so-\" She turned in her chair to look at him and saw him naked, erect, and watching her as she watched the video.",
        "\"What?\" he asked, almost breathless. His cock bobbed in front of him as he approached Felicia. \"You've never seen anything so what?\"\n\nGrinning large, he dropped to his knees next to his wife as she sat in the chair at the desk.\n\n\"You must really like seeing this, huh?\" Felicia asked.\n\n\"If you're asking whether it excites me to think about me being that guy and you being that woman, well . . .\" Aaron brushed a fingertip across the end of his throbbing cock, a small trail of pre-cum transferring there in the process, and he brought his finger to Felicia's lips, dragging it across them as he looked into her eyes. \"It makes me so crazy that I drip every time I let even a flash of that thought into my head.\"\n\nThe slight sheen of his pre-cum on her lips was so-o-o-o-o sexy, he thought. Then he said, \"Yeah, seeing that is really arousing, but what's turning me on even more is seeing you watch it. Seeing you watch it and thinking that it might be getting YOU aroused \u2014 well, that's driving me crazy.\"\n\nFelicia licked her lips and said, \"I'm going to fuck you in the ass, Aaron.\"\n\nShe rose from her seat, pausing the video in the process. \"We're going to do THAT,\" and she pointed at the laptop screen, \"so think about taking every inch of the strapon you just gave me \u2014 every inch \u2014 inside your cute little asshole.\" She dropped one hand to stroke his hair as she lingered next to him. \"While you think about that, I'm going to go get ready.\"\n\nFelicia stepped to the bed, picked up the feeldoe and the harness, and walked into the bathroom.\n\nAaron knew if he touched himself he would explode, so he did nothing, remaining on his knees next to the chair at the desk for a minute, his cock pulsing, the plum-like head a deep pink, and another droplet of pre-cum glistening as it oozed from the tip. Finally, willing himself back from the brink, he rose and walked to his suitcase to retrieve the bottle of lube. His stiff cock bounced in front of him with every step\n\nHe heard Felicia groan in the bathroom. He approached the door, thinking she might need the lube at that point. What he saw was the most erotic thing he had ever imagined.\n\nFelicia was standing nude in front of the bathroom mirror, the black shaft of the feeldoe jutting from between her legs and angled up slightly. She was looking at her reflection and tugging on both her nipples. Dropping one hand to the shaft that protruded from her crotch, she wrapped her fist around it and slid it slowly down to the base and back up again.\n\n\"Damn!\" Aaron whispered, transfixed at the sight before him.\n\nFelicia turned to look at him.\n\n\"This is so fuckin' hot,\" she said, turning her gaze quickly back to her reflection.\n\n\"How many times have I fantasized about this,\" Aaron said, his gaze roaming up and down his wife's body, now so sexy in such a different, wildly arousing way. \"You have no idea of the effect that seeing you like that is having on me,\" he said.\n\n\"And you have no idea how this thing is making me feel,\" she answered. She turned toward him, the feeldoe shaft bouncing slightly in the process. \"Oh! Wow! That felt so . . . different,\" Felicia said, noting the sensation that her movement caused in the bulb of the feeldoe that was inside her pussy. She stepped tentatively toward Aaron, adjusting quickly to the sensations and the weight of the fake cock sticking up from her crotch.\n\n\"I am so hot to fuck you,\" Felicia said, grabbing the shaft of the dildo and grinning evilly at Aaron. \"Seeing myself with this hard, fake cock sticking up from my crotch is a total mind trip! It feels so sexy, yet in a completely different way from anything I've experienced before.\"\n\nAaron's throat was dry. \"You look incredible,\" he croaked as he dropped the bottle of lube on the countertop.\n\n\"I had no idea of the effect this thing would have on me, baby,\" she said, her nipples taut and areolae dimpled in tight rings circling her hard nubs. \"I mean, shit! This is some kind of mind trip!\"\n\nShe stepped over to him, the shaft of the feeldoe bobbing slightly between her legs, and circled her arms around his neck, drawing his face to hers for a deep kiss before looking him in the eyes intently.\n\n\"Why did you ever worry about this, my husband? I admit I was shocked for a minute, but now . . . oh, my god! When I saw myself in the mirror with this pretend dick sticking up between my legs, it was so . . . I don't know, so different but so . . . I just don't know \u2014 maybe fascinating is the right word.\"\n\nAaron's mind was battling itself. One part of his brain was trying to listen to what Felicia was saying. Another part was dragged back again and again to the visual of his naked wife's sexy body now accentuated in a way that drove a message like a jack-hammer into his consciousness: \n\nShe's going to bend me over, lube that big, fake cock, and fuck me!\n\n\"Aaron! What has it been? Maybe three minutes since I slid this thing inside? What happened? Why is this so such a HUGE turn-on?\" She kissed him deeply again, finally breaking the kiss to whisper, \"I can't wait to get the harness on so everything's nice and secure like that woman in the video said, and then I want to do exactly what she did to that guy, only I'm going to be doing it to my husband, who's going to moan and groan and wriggle his hips for me as I fuck him for the first time.\"\n\nShe paused, grinned at him, and then purposefully chose her next words for the sole intent of exciting her husband: \"Yeah. I'm going to fuck my handsome husband deep and slow and repeatedly until I come hard with my fake cock buried deep inside his pretty little asshole.\"\n\nShit! Aaron thought, his cock now twitching uncontrollably as his wife exceeded even his wildest fantasies about how this night might turn out. She not only was willing to do it to him, she was teasing him unmercifully, saying the nastiest things to him about screwing him just as he wanted her to do it.\n\n\"I like this nice, big cock of mine, baby,\" Felicia cooed. \"This is a great present, and I know it's going to be one of our favorite toys, don't you think?\" She took his hand in hers and drew it down to the shaft of the feeldoe, closing his fingers around it. \"Feel that? Are you ready to open up for me and take my fake cock in your ass?\"\n\nWith his fist closed around the full girth of the dildo \u2014 the wrong damned one! \u2014 Aaron became even more anxious. \n\nIt felt so big. How could he take it? \n\nHow could he NOT take it?\n\n\"I might need some help with the harness,\" Felicia said.\n\nAaron moved his fist along the shaft, thinking he would try to move the dildo in a way Felicia would like, maybe jiggle it a bit against her G-spot to see if-\n\n\"Oh, you are naughty,\" she gasped, grabbing his wrist to stop his movements. \"Have you been surfing the web trying to find out how to work this thing?\"\n\nHe smiled, then chewed his bottom lip for a moment as he slowly eased his fist away from the shaft protruding from between her legs. \"Have you already forgotten what the card on your present said?\" he asked. \"Wasn't there something about 'treasuring your pleasure'?\"\n\n\"I hope you're ready,\" Felicia purred, \"because I can tell that it's gonna feel really good when I fuck you.\" Again she grinned at him. \"And, yeah, baby \u2014 I'm ready to get a whole new kind of sex pleasure with you!\"\n\nAaron shuddered.\n\nBut, jeez! he thought. I don't know if I'm ready for you to pump me with that thing!\n\nBut Aaron's hindbrain, the most primitive, instinct-driven center of sexual arousal, hijacked that thought and sent a bolt of lust straight to his dick at the same time it snapped off his forebrain, shutting down everything except pure, lustful desire.\n\nDammit! he screamed inside his head. I want you to fuck me hard, Felicia!\n\nShe had picked up the harness and was stepping into it, clearly a novice at tilting the shaft through the ring at the crotch. Aaron did what he could, more in order to arouse himself by being closer to Felicia's pussy, fascinated by how the dildo disappeared between her lips as the inventive toy seated inside and allowed the business end that would soon be buried deep inside his asshole to emerge from her crotch, looking so very, very hot and sexy.\n\nFinally, Felicia announced she felt comfortable in the harness and that it made things feel secure for what she was about to do to him.\n\nShe stepped back in front of the mirror, put her hands on her hips, and gazed at her reflection, turning to the right, then the left, then around to gaze back over her shoulder to see what the straps looked like as they framed her ass. Turning once again to full frontal exposure before the mirror, Felicia began her teasing, now doing it as much to turn herself on as to make Aaron unbearably horny.\n\n\"God, I love seeing my nice, hard cock all stiff and ready to fuck you, Aaron,\" she said, running her hands down her sides and to the back, stopping when both were resting on the firm globes of her taut butt. She pushed her hips forward, watching in fascination at the movement in the mirror.\n\nAaron's breath caught in his throat. He was hypnotized by the visual. His hand dropped to his cock, fisting it at the base, levering it forward and down in an unconscious action meant to prolong the sexiness of the situation without risking ejaculation. \n\nFelicia retracted her hips backward, a pretend withdrawal the clear insinuation. She thrust forward again, no hint of hesitation in her desire to broadcast how much she looked forward to burying the black shaft into her husband's upturned ass.\n\n\"Is this what it feels like?\" she asked, her gaze fastened to the reflection in the mirror. \"Is this how you move your hips when you fuck me?\"\n\nWhatever garbled noise from Aaron's throat that was supposed to be an affirmation was not loud enough to distract Felicia from the slow build she was talking herself through in advance of pushing the shaft of her fake cock into his tight pucker for the first time.\n\nShe dropped one hand to the shaft and tugged slightly.\n\n\"Oh, yeah,\" she moaned, her grip tight on the shaft of the dildo as she squirmed her hips side to side. \"This is a movement that's going to be fantastic. It feels divine inside my pussy.\" \n\nAaron could only watch, his brain in a fog of lust so intense that he feared he would not be able to endure the sexy sight of Felicia strapped into her dildo and teasing herself with it unless she put him out of his misery quickly.\n\n\"You are torturing me on purpose, aren't you?\" he croaked.\n\nShe smiled at him in the mirror, the reflection of her gaze catching his eye.\n\n\"And if I am?\"\n\nShe asked him for the lube.\n\n\"From what I remember,\" she said casually as Aaron handed her the bottle of the silky lubricant, \"the woman in the video said it wasn't possible to use too much lube.\" She squirted some into the palm of one hand before snapping the lid closed and dropping the bottle on the countertop in front of the mirror. \"She also said,\" Felicia continued, now rolling the middle finger of her other hand through the puddle of lube in her palm, \"that the guy has to be thoroughly slicked up so that he's unable to prevent his lady from easing the shaft of her dildo past the entrance of his slippery hole, no matter how tightly he might automatically tense shut at the first sensation of being penetrated.\"\n\nThe reflection of Aaron's expression in the mirror as she held his gaze let her know she was now in control of his sexual soul.\n\nIt was intoxicating!\n\nFor his part, Aaron's throat was dry. His cock was oozing pre-cum and was hard as steel as it pulsed in front of him. He felt a flutter behind his navel, a clear sign that \u2014 whenever it came \u2014 his orgasm was going to be intense.\n\n\"I can see you remember that part,\" Felicia said smoothly, getting thoroughly into her incredible, sexy, role reversal. Her finger now glistening with the lube, she pointed to a spot next to her in front of the mirror and said, \"Put your hands there on the counter, back up a little bit and lean over, and spread your legs.\"\n\nOh, god! Oh, god! thought Aaron. Felicia! You're so damned unbelievable!\n\nAnd he did what she directed.\n\n\"Look at me in the mirror while I put my finger inside you.\"\n\nHe felt his knees momentarily buckle before he regained his composure upon hearing his wife issue her erotic, teasing instructions. Felicia advanced the palm of the hand into which she'd poured the lube toward Aaron's ass, then smeared the slippery liquid into his furrow. She quickly found the wrinkles of his opening as she ran her hand up and down, brazenly owning his ass as she prepared him.\n\nAaron's lust went into a searing overdrive: 1) His months-long ache of desire to experience the erotic fantasy of his dreams was about to be quenched; 2) he would have to surrender even more than he had fantasized thanks to the bigger strapon that he absolutely must take deep inside his asshole in order to keep Felicia aroused and eager to experience the role reversal that she had so lovingly and now so expertly slipped into; and 3) her inventiveness in adapting to his nasty desire and her gathering excitement to experience this new kind of love-making between them had somehow prompted a creativity on her part in what she was orchestrating.\n\nThis interaction in the bathroom in front of the big mirror \u2014 along with her directions to look at her while she penetrated him \u2014 meant that he was not only going to experience his bride's first use of a strapon dildo to fuck his ass, she had just told him she wanted him to watch her doing it to him!\n\nA shudder ran through his body, goose pimples rising on the back of his neck.\n\n\"That's a lot of lube between your cheeks, Aaron. It should probably be enough, huh?\" she asked, her gaze locked on his in the mirror as she stood behind him.\n\nHe could only nod.\n\n\"Good,\" was the simple reply. But then she placed her fingertip against his asshole and positioned it quickly and expertly in the manner necessary for perfect alignment. \"I wouldn't want you to experience any discomfort when I do this,\" Felicia said, still looking at him in the mirror. In one swift motion she pushed her finger completely inside his asshole, daring him to look away from the reflection of her gaze.\n\nAaron was mesmerized. The sensation was a near overload for his lust. He gasped, a sharp intake of breath that let Felicia know he was powerfully aroused, that she had pushed an erotic trigger in his brain that must have been cultivating for weeks as she finger-fucked him during blowjobs.\n\nNow, Felicia was certain that the situation \u2014 her husband's upcoming fucking at the end of her fake cock \u2014 was an order of magnitude more intense and mind-blowing for him than even the incredible pleasure of her combination blowjobs and finger-fucks.\n\nShe smiled at Aaron in the mirror, now insanely happy at knowing she could tap into one of his secret turn-ons that so thoroughly ramped up his sexual excitement. That the act was turning out to be such a phenomenal turn-on for her was an unexpected benefit that was becoming more and more exciting with each passing second of this wildly erotic interaction.\n\nFelicia's pussy was oozing at the thought of using her husband's sextoy gift to create an entirely new means of sexual arousal and satisfaction of her own.\n\n\"I have to be sure that every millimeter of the inside of your asshole is nice and slippery, baby,\" she cooed, fingering him thoroughly. \"I want you completely prepared to take my fake cock deep inside.\"\n\nHis expression in the mirror told her everything she needed to know, and she pushed further with the tease.\n\n\"But maybe I'm going to keep my finger inside for a few moments. You feel so hot and tight.\" She grinned at his reflection, noting the mixture of lust and love in his eyes.\n\n\"Felicia!\" he panted. \"You are driving me crazy!\"\n\n\"Good,\" she murmured, her gaze fastened on his in the mirror as she slowly eased her finger out of his asshole. \"That's how I want you \u2014 eager and horny and desperate to have me fuck you.\"\n\nGod! thought Felicia. This is so hot and so much fun!\n\nShe moved from behind Aaron to stand at his side, still looking at his gaze in the mirror. \"Watch while I lube up the shaft of this wonderful dildo,\" she said. Her voice was so sexy and sultry \u2014 and the implication about what was going to happen so erotic \u2014 that Aaron's hard cock twitched uncontrollably as it hung beneath his spread legs in his bent-forward position, hands still on the long washbasin vanity in their room's spacious bathroom. \n\n\"Maybe you'll like seeing me lubricate my big, fake cock, baby, because you know what I'm going to do to with it after I get it nice and slippery.\"\n\n\"Felicia, how can you possibly tease me like this? Do you know what you're doing to me?\"\n\nShe smiled at him lovingly. \"Hmmm, that's an interesting question,\" she replied, toying with the shaft of the feeldoe as she smeared lube up and down its length.\n\nThe sensuous motions of her fist up and down the shaft protruding from her crotch were not missed by Aaron, who watched, trance-like, as he yearned for the instant when that stiff, fake cock would touch his eagerly surrendered asshole. At the same time, he couldn't help but worry about its size.\n\nShit, shit, shit! Aaron worried silently. I'm going to be taken just as I've dreamed and planned, but I'm going to have to let Felicia open me wider than ever before for her to fuck me with that long, fat, strapon!\n\nFelicia's words snapped Aaron back to a focus on his sexy, fantastic wife.\n\n\"Perhaps I'm teasing you because I want you to have the same kind of orgasm you gave me last night,\" Felicia said, finishing with her application of lube on the strapon. \"That was so intense for me,\" she said, returning her gaze to Aaron's in the mirror. \"You did that just because you wanted me to feel so good, so wonderful, so loved, didn't you?\"\n\n\"Yes,\" he answered. \"I love you so much. I want to make you feel good in every way possible.\"\n\nIt was the desperate, undeniable truth.\n\nFelicia wiped her hands on a towel and then stretched, her breasts prominently displayed, nipples hard and aching. It was an action she chose as a way to tease and arouse her husband even more. She lingered in that position, showing him everything, including the motions of her fake cock as she shimmied slightly, making her breasts jiggle and the strapon bounce.\n\nSwallowing hard, his eyes on her lascivious display, Aaron's cock jerked beneath him, dangerously close to spurting.\n\nShe moved behind him.\n\n\"Well, my full-of-surprises husband,\" she said, gently placing her hands on his hips, \"it shouldn't surprise you that I want to do the same thing.\" She leaned forward over his back, careful to be standing far enough back that the shaft of the feeldoe didn't touch him. Looking at his reflection from over his shoulder, the hard nubs of her nipples now pressed against his back, Felicia reached around to trace butterfly strokes along the length of his pulsing cock.\n\nAaron groaned loudly, then bit his lip and dropped his forehead to the countertop, trying desperately to stop the orgasm that he knew would surge through him as a result of this tortuous tease unless he somehow maintained control.\n\nDon't! Don't make me come until you're fucking me! he thought, panting as he worked to short-circuit his dangerously close ejaculation.\n\n\"I mean,\" Felicia continued in a soft whisper into Aaron's ear, \"I'm just as eager to make you feel good, too.\" She slowly levered herself up off his back, her hands still on his hips. \"And if fucking you in the ass with my big, fake cock is going to do that, well, then I guess . . .\" \n\nShe moved her hands from his hips to the cheeks of his ass and spread him open, her gaze dropping to the sight of Aaron's complete exposure. She smiled, raising her eyes back to the mirror so he could see her face. \". . . I guess that you've shown me how important it is to think about my spouse's sexual pleasure.\" ",
        "Felicia placed the tip of the feeldoe directly on the center of Aaron's asshole.\n\n\"So I hope you really, really enjoy this, baby,\" she said, smiling at him sweetly as she held his gaze in the mirror. \"And if this is going to feel as good for me as I think it is, then-\" Felicia stopped her sexy commentary and parted her lips in anticipation as she pressed the end of her strapon cock gently but firmly into the center of Aaron's asshole, pausing in that position to both tease him and move her hands to his hips. \"-then I cannot wait to-\" She again teased him, this time gripping his hips firmly, sending the message that she was readying herself to plunge inside. \"-to feel what it's like when I slide this lovely toy inside you and fuck you hard until I come.\"\n\nAaron felt the pressure, felt the width of her shaft at the opening of his starfish, and thought, Oh god, oh, shit! Relax! Relax! I want this to be perfect for you, for us!\n\nHe noticed Felicia's eyelids flutter momentarily as he forced himself to watch her reflection, trying at the same time to accommodate the new, invading size of the shaft he was desperate to allow to open him, penetrate him, and take him in any way his beautiful wife wanted to use it to give herself a massive orgasm.\n\nThe other end of the feeldoe must be moving inside her pussy, he thought as he felt his asshole opening, surrendering to Felicia's firm pressure.\n\nThat thought triggered the release of the final resistance, and he gasped with the shock of having the entire girth of the toy now an inch deep. The shaft was through the entrance of his anus, the outer and inner rings of muscle at his portal now opened, now surrendering everything to his bride's penetration.\n\nFelicia dropped her eyes to the juncture between her crotch and his ass. \"Oh, my god, Aaron! This looks so sexy sliding inside you!\"\n\nHe groaned, the fullness of the feeldoe shaft now hammering insistent messages through every nerve ending in his asshole. Open! he thought, desperate to make everything perfect for him and for Felicia as she took his ass for the first time.\n\nAaron dropped his forehead to the counter and rocked back slightly, purposefully driving another inch of the shaft inside, forcing himself to accept its size.\n\n\"Oh, dammit, Aaron! That is so hot!\" panted Felicia, watching the shaft disappear into his asshole. \"God, it feels fantastic, but seeing you do that \u2014 what you just did, baby, taking it like that \u2014 oh, damn, I love this! I love giving it to you like this!\"\n\nThat did it for Aaron. Felicia was triggering every aspect of his perfect fantasy. She was even taking him to places he hadn't dreamed with her erotic dialogue and her expressions of lust for what she was doing to herself and to him.\n\nAs if she were reading his mind, Felicia straightened her legs to create the perfect angle for what Aaron needed desperately at this instant and for what she was desperate to give him. She reinforced the message of what was imminent with the strength of her grip on his hips.\n\nShe plunged the entire length of her fake cock deep inside him.\n\nHe gasped at the sudden intrusion, the forceful push into the depths of his sexual soul sending a shockwave up the pathway that connected to his sexual brain and back down to his cock and his balls as they jiggled and bounced between his spread legs. When the toy brushed against his prostate, his orgasm was inevitable and immediate. \n\nSquirming uncontrollably as his wife buried her strapon cock as deep as it would go, Aaron shot jets of cum from the end of his own steel-hard and pulsing cock.\n\nFelicia uttered an indescribable sound, emanating from her chest and her throat, her head thrown back, eyes closed as she focused completely on the sensation of the feeldoe bulb dancing inside her pussy. She had a death-grip on his hips, sealing herself against him tightly.\n\n\"Oh, god, oh, god \u2014 shit!\" she yelled, squirming desperately against him, forcing the shaft of the dildo through a series of movements that caused repeated nudges against Aaron's prostate while at the same time working magic on her G-spot. Backing out halfway, she drove the shaft deep a second time and came hard, her pussy clenching and unclenching in waves as pure, erotic pleasure washed over her, causing shivers. Her fingernails dug into his hips.\n\nFelicia was completely unconscious to anything but the sensations of overwhelming sexual pleasure.\n\nAaron stiff-armed the countertop, raising himself upright in a reaction to the insanely intense feelings of such a powerful sexual release. The action created even more sensations in his asshole and inside his surrendered anal canal. He dropped again to his elbows, panting through a series of stomach-clenching spasms as Felicia simultaneously dropped over his back, the shaft of the feeldoe slipping a few inches out of his asshole in the process.\n\n\"Slide it out, please!\" he managed to grit out through some opening in the fog of lust and release that was racking his consciousness. \"Slow, baby, slow \u2013 I cannot stand any more or you'll kill me with pleasure!\"\n\nFelicia was breathing hard into his ear, her sweat-slickened breasts pressed tight into his back, her arms now around his chest, hugging him tightly.\n\nShe did as he asked, easing backward slowly as she raised herself from her position draped over her panting husband. She looked downward to see the last two inches of the shaft slip from his ravaged opening, seeing it close as the end of the feeldoe quietly exited.\n\nShe released ownership of his asshole back to her husband \u2014 the man who had surrendered it to her pleasure.\n\nAaron dropped to his knees in front of the vanity. \"God! Oh, shit, Felicia, you made me come so hard I thought I was going to pass out,\" he managed between pants. Recovering enough to turn toward her, he rose on shaky legs.\n\nFelicia was pushing her hair back from her forehead, her hands then immediately moving in front of her face to fan some little bit of breeze toward her as she, too, tried to recover from the intensity of what had just happened.\n\nShe embraced him, hugging him tightly, the slippery phallus pressing into his thigh before sliding to the side as they entwined.\n\n\"That felt so good,\" she said, turning her head to kiss his neck.\n\n\"Better than good,\" he responding, squeezing her in his grasp.\n\n\"My god, Aaron! Whatever made you think about such a thing?\"\n\n\"Making you feel good is what made me think about it,\" he answered, not wanting to spoil the moment with any admission that some other woman, years in his past and before he'd even met Felicia, had introduced him to this wildly erotic pleasure.\n\nBesides, his answer was 100% truthful.\n\n\"But,\" she pressed, \"what made you think this would feel good for me? And, jeez, baby \u2014 you must have been crazy worried about taking this toy up your ass after having only my fingers inside you.\"\n\nAaron uncoupled from her, turned her to the side to begin unbuckling one of the straps on the harness, and said, \"Well, since you've been so sexy for me by not freaking out about finger fucking me in the ass,\" he began, now holding the harness for her as she stepped out of it, the feeldoe shaft slipping through the ring at the crotch, \"maybe you won't freak out to hear that sometimes I masturbate with a butt plug inside me as I stroke my cock and think about you doing me with a strapon.\"\n\nHe tossed the harness aside and looked her in the eyes, yet another confession about to spill out, more worries running through his head about his wife's reaction.\n\n\"I mean,\" he continued hopefully, \"it just feels good. Your fingers prove that every time you drive me crazy when you do it to me. So, uh, well . . . well-\"\n\n\"Shhh,\" Felicia hushed, looking into her stammering husband's eyes. \"So you jerk off to thoughts about me fucking you while the butt plug causes some of the same kind of sensations as what I just did to you.\" She smiled. \"That's okay with me. I love the thought of you so horny to make love to me that you have to masturbate, and now that I've just found out for myself what it feels like to do to you what you fantasize about when you're jerking your cock with a butt plug up your ass, I kinda like the idea that you're hot to have me fuck you.\"\n\nHe didn't see it, focused as he was on Felicia's face, but the contraction of her pussy around the bulb of the feeldoe when she said she liked him hot to be fucked at the end of her strapon caused the shaft to bounce slightly. The feeldoe, however, was quickly slipping out due to the gush of liquid caused by her crashing orgasm of moments before. She dropped one hand to her crotch, gripped the shaft and eased the dildo out of her pussy.\n\n\"That is pretty arousing, baby,\" she said, \"you being so turned on by what we just did that you have to masturbate as you think about it.\" Felicia dropped the feeldoe into the basin. \"Maybe I'd like to watch sometime.\"\n\nAaron's stunned expression caught her off guard.\n\n\"Yeah, I'd like to watch how you do it, see the butt slide inside you,\" she said, grabbing his hand in hers to begin pulling him through the bathroom doorway and toward the bed. \"And I admit that I've never masturbated while thinking about screwing your cute little asshole with a strapon cock, but I can guarantee that I will in the future!\"\n\nShe giggled, now at the bed and pushing him onto the mattress.\n\n\"But promise me, Aaron,\" Felicia said as she snuggled against him, \"that you will regularly make love to me with your big, hard cock pounding my pussy until you make me come hard because I just love that.\"\n\n\"Baby,\" he answered quietly, \"there's no way I would ever stop doing that. It feels great, and I love holding you and being inside you and loving you like that.\"\n\n\"Ummm,\" was Felicia's contented reply, entwining one leg between his thighs.\n\n\"So, yeah, occasionally doing what we just did,\" he mused, \"god, yes, I want us to do it, but only every now and then, I think. My poor butt can't take this very often.\"\n\nAnd then, in the final punctuation to the incredibly wonderful way the whole experience had played out, Felicia wrote the perfect ending to Aaron's careful plans for realizing his fantasy with her when she said softly, \"But it will have to be often enough to satisfy me.\""
    ],
    "authorname": "escriterra",
    "tags": [
        "feeldoe",
        "strapon",
        "female-to-male strapon",
        "asshole",
        "surrender",
        "man-fucking",
        "finger fucking",
        "role reversal",
        "honeymoon",
        "loving husband"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/aaron-convinces-felicia-to-try-this"
}